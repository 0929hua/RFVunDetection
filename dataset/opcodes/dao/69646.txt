Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x117]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x117
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x117
0xa: JUMPI 0x117 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x197]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x197
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x197
0x24: JUMPI 0x197 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x222]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x222
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x222
0x2f: JUMPI 0x222 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x246]
---
0x30 DUP1
0x31 PUSH4 0x18160ddd
0x36 EQ
0x37 PUSH2 0x246
0x3a JUMPI
---
0x31: V19 = 0x18160ddd
0x36: V20 = EQ 0x18160ddd V12
0x37: V21 = 0x246
0x3a: JUMPI 0x246 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x26b]
---
0x3b DUP1
0x3c PUSH4 0x1e93c209
0x41 EQ
0x42 PUSH2 0x26b
0x45 JUMPI
---
0x3c: V22 = 0x1e93c209
0x41: V23 = EQ 0x1e93c209 V12
0x42: V24 = 0x26b
0x45: JUMPI 0x26b V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x290]
---
0x46 DUP1
0x47 PUSH4 0x23b872dd
0x4c EQ
0x4d PUSH2 0x290
0x50 JUMPI
---
0x47: V25 = 0x23b872dd
0x4c: V26 = EQ 0x23b872dd V12
0x4d: V27 = 0x290
0x50: JUMPI 0x290 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2cc]
---
0x51 DUP1
0x52 PUSH4 0x313ce567
0x57 EQ
0x58 PUSH2 0x2cc
0x5b JUMPI
---
0x52: V28 = 0x313ce567
0x57: V29 = EQ 0x313ce567 V12
0x58: V30 = 0x2cc
0x5b: JUMPI 0x2cc V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x2f1]
---
0x5c DUP1
0x5d PUSH4 0x3df2b29d
0x62 EQ
0x63 PUSH2 0x2f1
0x66 JUMPI
---
0x5d: V31 = 0x3df2b29d
0x62: V32 = EQ 0x3df2b29d V12
0x63: V33 = 0x2f1
0x66: JUMPI 0x2f1 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x31b]
---
0x67 DUP1
0x68 PUSH4 0x40695363
0x6d EQ
0x6e PUSH2 0x31b
0x71 JUMPI
---
0x68: V34 = 0x40695363
0x6d: V35 = EQ 0x40695363 V12
0x6e: V36 = 0x31b
0x71: JUMPI 0x31b V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x340]
---
0x72 DUP1
0x73 PUSH4 0x422810ea
0x78 EQ
0x79 PUSH2 0x340
0x7c JUMPI
---
0x73: V37 = 0x422810ea
0x78: V38 = EQ 0x422810ea V12
0x79: V39 = 0x340
0x7c: JUMPI 0x340 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3b9]
---
0x7d DUP1
0x7e PUSH4 0x70a08231
0x83 EQ
0x84 PUSH2 0x3b9
0x87 JUMPI
---
0x7e: V40 = 0x70a08231
0x83: V41 = EQ 0x70a08231 V12
0x84: V42 = 0x3b9
0x87: JUMPI 0x3b9 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x3ea]
---
0x88 DUP1
0x89 PUSH4 0x753ed1bd
0x8e EQ
0x8f PUSH2 0x3ea
0x92 JUMPI
---
0x89: V43 = 0x753ed1bd
0x8e: V44 = EQ 0x753ed1bd V12
0x8f: V45 = 0x3ea
0x92: JUMPI 0x3ea V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x40f]
---
0x93 DUP1
0x94 PUSH4 0x8bcff416
0x99 EQ
0x9a PUSH2 0x40f
0x9d JUMPI
---
0x94: V46 = 0x8bcff416
0x99: V47 = EQ 0x8bcff416 V12
0x9a: V48 = 0x40f
0x9d: JUMPI 0x40f V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x439]
---
0x9e DUP1
0x9f PUSH4 0x8da5cb5b
0xa4 EQ
0xa5 PUSH2 0x439
0xa8 JUMPI
---
0x9f: V49 = 0x8da5cb5b
0xa4: V50 = EQ 0x8da5cb5b V12
0xa5: V51 = 0x439
0xa8: JUMPI 0x439 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x468]
---
0xa9 DUP1
0xaa PUSH4 0x95d89b41
0xaf EQ
0xb0 PUSH2 0x468
0xb3 JUMPI
---
0xaa: V52 = 0x95d89b41
0xaf: V53 = EQ 0x95d89b41 V12
0xb0: V54 = 0x468
0xb3: JUMPI 0x468 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x4f3]
---
0xb4 DUP1
0xb5 PUSH4 0x9a6bd379
0xba EQ
0xbb PUSH2 0x4f3
0xbe JUMPI
---
0xb5: V55 = 0x9a6bd379
0xba: V56 = EQ 0x9a6bd379 V12
0xbb: V57 = 0x4f3
0xbe: JUMPI 0x4f3 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x50b]
---
0xbf DUP1
0xc0 PUSH4 0xa9059cbb
0xc5 EQ
0xc6 PUSH2 0x50b
0xc9 JUMPI
---
0xc0: V58 = 0xa9059cbb
0xc5: V59 = EQ 0xa9059cbb V12
0xc6: V60 = 0x50b
0xc9: JUMPI 0x50b V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x541]
---
0xca DUP1
0xcb PUSH4 0xab67aa58
0xd0 EQ
0xd1 PUSH2 0x541
0xd4 JUMPI
---
0xcb: V61 = 0xab67aa58
0xd0: V62 = EQ 0xab67aa58 V12
0xd1: V63 = 0x541
0xd4: JUMPI 0x541 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x5c1]
---
0xd5 DUP1
0xd6 PUSH4 0xbabd7012
0xdb EQ
0xdc PUSH2 0x5c1
0xdf JUMPI
---
0xd6: V64 = 0xbabd7012
0xdb: V65 = EQ 0xbabd7012 V12
0xdc: V66 = 0x5c1
0xdf: JUMPI 0x5c1 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x5e6]
---
0xe0 DUP1
0xe1 PUSH4 0xbe45fd62
0xe6 EQ
0xe7 PUSH2 0x5e6
0xea JUMPI
---
0xe1: V67 = 0xbe45fd62
0xe6: V68 = EQ 0xbe45fd62 V12
0xe7: V69 = 0x5e6
0xea: JUMPI 0x5e6 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x65f]
---
0xeb DUP1
0xec PUSH4 0xd79875eb
0xf1 EQ
0xf2 PUSH2 0x65f
0xf5 JUMPI
---
0xec: V70 = 0xd79875eb
0xf1: V71 = EQ 0xd79875eb V12
0xf2: V72 = 0x65f
0xf5: JUMPI 0x65f V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x67a]
---
0xf6 DUP1
0xf7 PUSH4 0xdd62ed3e
0xfc EQ
0xfd PUSH2 0x67a
0x100 JUMPI
---
0xf7: V73 = 0xdd62ed3e
0xfc: V74 = EQ 0xdd62ed3e V12
0xfd: V75 = 0x67a
0x100: JUMPI 0x67a V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x6b1]
---
0x101 DUP1
0x102 PUSH4 0xefef39a1
0x107 EQ
0x108 PUSH2 0x6b1
0x10b JUMPI
---
0x102: V76 = 0xefef39a1
0x107: V77 = EQ 0xefef39a1 V12
0x108: V78 = 0x6b1
0x10b: JUMPI 0x6b1 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0x6be]
---
0x10c DUP1
0x10d PUSH4 0xf2fde38b
0x112 EQ
0x113 PUSH2 0x6be
0x116 JUMPI
---
0x10d: V79 = 0xf2fde38b
0x112: V80 = EQ 0xf2fde38b V12
0x113: V81 = 0x6be
0x116: JUMPI 0x6be V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x117]
---
Predecessors: [0x0, 0x10c]
Successors: [0x118]
---
0x117 JUMPDEST
---
0x117: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x118
[0x118:0x15b]
---
Predecessors: [0x117]
Successors: [0x15c, 0x160]
---
0x118 JUMPDEST
0x119 PUSH1 0x0
0x11b DUP1
0x11c SLOAD
0x11d PUSH1 0x1
0x11f PUSH1 0xa0
0x121 PUSH1 0x2
0x123 EXP
0x124 SUB
0x125 AND
0x126 PUSH4 0x753ed1bd
0x12b DUP3
0x12c PUSH1 0x40
0x12e MLOAD
0x12f PUSH1 0x20
0x131 ADD
0x132 MSTORE
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP2
0x137 PUSH4 0xffffffff
0x13c AND
0x13d PUSH1 0xe0
0x13f PUSH1 0x2
0x141 EXP
0x142 MUL
0x143 DUP2
0x144 MSTORE
0x145 PUSH1 0x4
0x147 ADD
0x148 PUSH1 0x20
0x14a PUSH1 0x40
0x14c MLOAD
0x14d DUP1
0x14e DUP4
0x14f SUB
0x150 DUP2
0x151 PUSH1 0x0
0x153 DUP8
0x154 DUP1
0x155 EXTCODESIZE
0x156 ISZERO
0x157 ISZERO
0x158 PUSH2 0x160
0x15b JUMPI
---
0x118: JUMPDEST 
0x119: V82 = 0x0
0x11c: V83 = S[0x0]
0x11d: V84 = 0x1
0x11f: V85 = 0xa0
0x121: V86 = 0x2
0x123: V87 = EXP 0x2 0xa0
0x124: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x125: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x126: V90 = 0x753ed1bd
0x12c: V91 = 0x40
0x12e: V92 = M[0x40]
0x12f: V93 = 0x20
0x131: V94 = ADD 0x20 V92
0x132: M[V94] = 0x0
0x133: V95 = 0x40
0x135: V96 = M[0x40]
0x137: V97 = 0xffffffff
0x13c: V98 = AND 0xffffffff 0x753ed1bd
0x13d: V99 = 0xe0
0x13f: V100 = 0x2
0x141: V101 = EXP 0x2 0xe0
0x142: V102 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x753ed1bd
0x144: M[V96] = 0x753ed1bd00000000000000000000000000000000000000000000000000000000
0x145: V103 = 0x4
0x147: V104 = ADD 0x4 V96
0x148: V105 = 0x20
0x14a: V106 = 0x40
0x14c: V107 = M[0x40]
0x14f: V108 = SUB V104 V107
0x151: V109 = 0x0
0x155: V110 = EXTCODESIZE V89
0x156: V111 = ISZERO V110
0x157: V112 = ISZERO V111
0x158: V113 = 0x160
0x15b: JUMPI 0x160 V112
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, V89, 0x753ed1bd, V104, 0x20, V107, V108, V107, 0x0, V89]
Exit stack: [V12, 0x0, V89, 0x753ed1bd, V104, 0x20, V107, V108, V107, 0x0, V89]

================================

Block 0x15c
[0x15c:0x15f]
---
Predecessors: [0x118]
Successors: []
---
0x15c PUSH1 0x0
0x15e DUP1
0x15f REVERT
---
0x15c: V114 = 0x0
0x15f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, V89, 0x753ed1bd, V104, 0x20, V107, V108, V107, 0x0, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, V89, 0x753ed1bd, V104, 0x20, V107, V108, V107, 0x0, V89]

================================

Block 0x160
[0x160:0x16c]
---
Predecessors: [0x118]
Successors: [0x16d, 0x171]
---
0x160 JUMPDEST
0x161 PUSH2 0x2c6
0x164 GAS
0x165 SUB
0x166 CALL
0x167 ISZERO
0x168 ISZERO
0x169 PUSH2 0x171
0x16c JUMPI
---
0x160: JUMPDEST 
0x161: V115 = 0x2c6
0x164: V116 = GAS
0x165: V117 = SUB V116 0x2c6
0x166: V118 = CALL V117 V89 0x0 V107 V108 V107 0x20
0x167: V119 = ISZERO V118
0x168: V120 = ISZERO V119
0x169: V121 = 0x171
0x16c: JUMPI 0x171 V120
---
Entry stack: [V12, 0x0, V89, 0x753ed1bd, V104, 0x20, V107, V108, V107, 0x0, V89]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, V89, 0x753ed1bd, V104]

================================

Block 0x16d
[0x16d:0x170]
---
Predecessors: [0x160]
Successors: []
---
0x16d PUSH1 0x0
0x16f DUP1
0x170 REVERT
---
0x16d: V122 = 0x0
0x170: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, V89, 0x753ed1bd, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, V89, 0x753ed1bd, V104]

================================

Block 0x171
[0x171:0x185]
---
Predecessors: [0x160]
Successors: [0x6df]
---
0x171 JUMPDEST
0x172 POP
0x173 POP
0x174 POP
0x175 PUSH1 0x40
0x177 MLOAD
0x178 DUP1
0x179 MLOAD
0x17a SWAP1
0x17b POP
0x17c SWAP1
0x17d POP
0x17e PUSH2 0x186
0x181 DUP2
0x182 PUSH2 0x6df
0x185 JUMP
---
0x171: JUMPDEST 
0x175: V123 = 0x40
0x177: V124 = M[0x40]
0x179: V125 = M[V124]
0x17e: V126 = 0x186
0x182: V127 = 0x6df
0x185: JUMP 0x6df
---
Entry stack: [V12, 0x0, V89, 0x753ed1bd, V104]
Stack pops: 4
Stack additions: [V125, 0x186, V125]
Exit stack: [V12, V125, 0x186, V125]

================================

Block 0x186
[0x186:0x18e]
---
Predecessors: [0x7bd]
Successors: [0x18f, 0x193]
---
0x186 JUMPDEST
0x187 PUSH1 0x0
0x189 CALLVALUE
0x18a GT
0x18b PUSH2 0x193
0x18e JUMPI
---
0x186: JUMPDEST 
0x187: V128 = 0x0
0x189: V129 = CALLVALUE
0x18a: V130 = GT V129 0x0
0x18b: V131 = 0x193
0x18e: JUMPI 0x193 V130
---
Entry stack: [V12, 0x2b8, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b8, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x186]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V132 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2b8, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b8, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x193
[0x193:0x193]
---
Predecessors: [0x186]
Successors: [0x194]
---
0x193 JUMPDEST
---
0x193: JUMPDEST 
---
Entry stack: [V12, 0x2b8, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b8, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x194
[0x194:0x196]
---
Predecessors: [0x193]
Successors: []
---
0x194 JUMPDEST
0x195 POP
0x196 STOP
---
0x194: JUMPDEST 
0x196: STOP 
---
Entry stack: [V12, 0x2b8, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2b8, S6, S5, S4, S3, S2, S1]

================================

Block 0x197
[0x197:0x19d]
---
Predecessors: [0xb]
Successors: [0x19e, 0x1a2]
---
0x197 JUMPDEST
0x198 CALLVALUE
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x197: JUMPDEST 
0x198: V133 = CALLVALUE
0x199: V134 = ISZERO V133
0x19a: V135 = 0x1a2
0x19d: JUMPI 0x1a2 V134
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x197]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V136 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a2
[0x1a2:0x1a9]
---
Predecessors: [0x197]
Successors: [0x7c2]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0x1aa
0x1a6 PUSH2 0x7c2
0x1a9 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V137 = 0x1aa
0x1a6: V138 = 0x7c2
0x1a9: JUMP 0x7c2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1aa]
Exit stack: [V12, 0x1aa]

================================

Block 0x1aa
[0x1aa:0x1cd]
---
Predecessors: [0x858]
Successors: [0x1ce]
---
0x1aa JUMPDEST
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae PUSH1 0x20
0x1b0 DUP1
0x1b1 DUP3
0x1b2 MSTORE
0x1b3 DUP2
0x1b4 SWAP1
0x1b5 DUP2
0x1b6 ADD
0x1b7 DUP4
0x1b8 DUP2
0x1b9 DUP2
0x1ba MLOAD
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP2
0x1c1 POP
0x1c2 DUP1
0x1c3 MLOAD
0x1c4 SWAP1
0x1c5 PUSH1 0x20
0x1c7 ADD
0x1c8 SWAP1
0x1c9 DUP1
0x1ca DUP4
0x1cb DUP4
0x1cc PUSH1 0x0
---
0x1aa: JUMPDEST 
0x1ab: V139 = 0x40
0x1ad: V140 = M[0x40]
0x1ae: V141 = 0x20
0x1b2: M[V140] = 0x20
0x1b6: V142 = ADD V140 0x20
0x1ba: V143 = M[S0]
0x1bc: M[V142] = V143
0x1bd: V144 = 0x20
0x1bf: V145 = ADD 0x20 V142
0x1c3: V146 = M[S0]
0x1c5: V147 = 0x20
0x1c7: V148 = ADD 0x20 S0
0x1cc: V149 = 0x0
---
Entry stack: [V12, 0x1aa, S0]
Stack pops: 1
Stack additions: [S0, V140, V140, V145, V148, V146, V146, V145, V148, 0x0]
Exit stack: [V12, 0x1aa, S0, V140, V140, V145, V148, V146, V146, V145, V148, 0x0]

================================

Block 0x1ce
[0x1ce:0x1d6]
---
Predecessors: [0x1aa, 0x1df, 0x4b0]
Successors: [0x1d7, 0x1e7]
---
0x1ce JUMPDEST
0x1cf DUP4
0x1d0 DUP2
0x1d1 LT
0x1d2 ISZERO
0x1d3 PUSH2 0x1e7
0x1d6 JUMPI
---
0x1ce: JUMPDEST 
0x1d1: V150 = LT S0 S3
0x1d2: V151 = ISZERO V150
0x1d3: V152 = 0x1e7
0x1d6: JUMPI 0x1e7 V151
---
Entry stack: [V12, 0x1aa, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x1aa, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1d7
[0x1d7:0x1de]
---
Predecessors: [0x1ce]
Successors: [0x1df]
---
0x1d7 DUP1
0x1d8 DUP3
0x1d9 ADD
0x1da MLOAD
0x1db DUP2
0x1dc DUP5
0x1dd ADD
0x1de MSTORE
---
0x1d9: V153 = ADD S1 S0
0x1da: V154 = M[V153]
0x1dd: V155 = ADD S2 S0
0x1de: M[V155] = V154
---
Entry stack: [V12, 0x1aa, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x1aa, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1df
[0x1df:0x1e6]
---
Predecessors: [0x1d7]
Successors: [0x1ce]
---
0x1df JUMPDEST
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 PUSH2 0x1ce
0x1e6 JUMP
---
0x1df: JUMPDEST 
0x1e0: V156 = 0x20
0x1e2: V157 = ADD 0x20 S0
0x1e3: V158 = 0x1ce
0x1e6: JUMP 0x1ce
---
Entry stack: [V12, 0x1aa, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V157]
Exit stack: [V12, 0x1aa, S9, S8, S7, S6, S5, S4, S3, S2, S1, V157]

================================

Block 0x1e7
[0x1e7:0x1fa]
---
Predecessors: [0x1ce, 0x49f]
Successors: [0x1fb, 0x214]
---
0x1e7 JUMPDEST
0x1e8 POP
0x1e9 POP
0x1ea POP
0x1eb POP
0x1ec SWAP1
0x1ed POP
0x1ee SWAP1
0x1ef DUP2
0x1f0 ADD
0x1f1 SWAP1
0x1f2 PUSH1 0x1f
0x1f4 AND
0x1f5 DUP1
0x1f6 ISZERO
0x1f7 PUSH2 0x214
0x1fa JUMPI
---
0x1e7: JUMPDEST 
0x1f0: V159 = ADD S4 S6
0x1f2: V160 = 0x1f
0x1f4: V161 = AND 0x1f S4
0x1f6: V162 = ISZERO V161
0x1f7: V163 = 0x214
0x1fa: JUMPI 0x214 V162
---
Entry stack: [V12, 0x1aa, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V159, V161]
Exit stack: [V12, 0x1aa, S9, S8, S7, V159, V161]

================================

Block 0x1fb
[0x1fb:0x213]
---
Predecessors: [0x1e7]
Successors: [0x214]
---
0x1fb DUP1
0x1fc DUP3
0x1fd SUB
0x1fe DUP1
0x1ff MLOAD
0x200 PUSH1 0x1
0x202 DUP4
0x203 PUSH1 0x20
0x205 SUB
0x206 PUSH2 0x100
0x209 EXP
0x20a SUB
0x20b NOT
0x20c AND
0x20d DUP2
0x20e MSTORE
0x20f PUSH1 0x20
0x211 ADD
0x212 SWAP2
0x213 POP
---
0x1fd: V164 = SUB V159 V161
0x1ff: V165 = M[V164]
0x200: V166 = 0x1
0x203: V167 = 0x20
0x205: V168 = SUB 0x20 V161
0x206: V169 = 0x100
0x209: V170 = EXP 0x100 V168
0x20a: V171 = SUB V170 0x1
0x20b: V172 = NOT V171
0x20c: V173 = AND V172 V165
0x20e: M[V164] = V173
0x20f: V174 = 0x20
0x211: V175 = ADD 0x20 V164
---
Entry stack: [V12, 0x1aa, S4, S3, S2, V159, V161]
Stack pops: 2
Stack additions: [V175, S0]
Exit stack: [V12, 0x1aa, S4, S3, S2, V175, V161]

================================

Block 0x214
[0x214:0x221]
---
Predecessors: [0x1e7, 0x1fb, 0x4b8]
Successors: []
---
0x214 JUMPDEST
0x215 POP
0x216 SWAP3
0x217 POP
0x218 POP
0x219 POP
0x21a PUSH1 0x40
0x21c MLOAD
0x21d DUP1
0x21e SWAP2
0x21f SUB
0x220 SWAP1
0x221 RETURN
---
0x214: JUMPDEST 
0x21a: V176 = 0x40
0x21c: V177 = M[0x40]
0x21f: V178 = SUB S1 V177
0x221: RETURN V177 V178
---
Entry stack: [V12, 0x1aa, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x1aa]

================================

Block 0x222
[0x222:0x228]
---
Predecessors: [0x25]
Successors: [0x229, 0x22d]
---
0x222 JUMPDEST
0x223 CALLVALUE
0x224 ISZERO
0x225 PUSH2 0x22d
0x228 JUMPI
---
0x222: JUMPDEST 
0x223: V179 = CALLVALUE
0x224: V180 = ISZERO V179
0x225: V181 = 0x22d
0x228: JUMPI 0x22d V180
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x222]
Successors: []
---
0x229 PUSH1 0x0
0x22b DUP1
0x22c REVERT
---
0x229: V182 = 0x0
0x22c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22d
[0x22d:0x243]
---
Predecessors: [0x222]
Successors: [0x860]
---
0x22d JUMPDEST
0x22e PUSH2 0x244
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 PUSH1 0x4
0x23b CALLDATALOAD
0x23c AND
0x23d PUSH1 0x24
0x23f CALLDATALOAD
0x240 PUSH2 0x860
0x243 JUMP
---
0x22d: JUMPDEST 
0x22e: V183 = 0x244
0x231: V184 = 0x1
0x233: V185 = 0xa0
0x235: V186 = 0x2
0x237: V187 = EXP 0x2 0xa0
0x238: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V189 = 0x4
0x23b: V190 = CALLDATALOAD 0x4
0x23c: V191 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V192 = 0x24
0x23f: V193 = CALLDATALOAD 0x24
0x240: V194 = 0x860
0x243: JUMP 0x860
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x244, V191, V193]
Exit stack: [V12, 0x244, V191, V193]

================================

Block 0x244
[0x244:0x245]
---
Predecessors: [0x7bd, 0x91f, 0xa80, 0xc7c, 0x10e6, 0x11aa, 0x128c]
Successors: []
---
0x244 JUMPDEST
0x245 STOP
---
0x244: JUMPDEST 
0x245: STOP 
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x246
[0x246:0x24c]
---
Predecessors: [0x30]
Successors: [0x24d, 0x251]
---
0x246 JUMPDEST
0x247 CALLVALUE
0x248 ISZERO
0x249 PUSH2 0x251
0x24c JUMPI
---
0x246: JUMPDEST 
0x247: V195 = CALLVALUE
0x248: V196 = ISZERO V195
0x249: V197 = 0x251
0x24c: JUMPI 0x251 V196
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24d
[0x24d:0x250]
---
Predecessors: [0x246]
Successors: []
---
0x24d PUSH1 0x0
0x24f DUP1
0x250 REVERT
---
0x24d: V198 = 0x0
0x250: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x251
[0x251:0x258]
---
Predecessors: [0x246]
Successors: [0x923]
---
0x251 JUMPDEST
0x252 PUSH2 0x259
0x255 PUSH2 0x923
0x258 JUMP
---
0x251: JUMPDEST 
0x252: V199 = 0x259
0x255: V200 = 0x923
0x258: JUMP 0x923
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x259
[0x259:0x26a]
---
Predecessors: [0x988, 0xa14, 0xb7b, 0x122c]
Successors: []
---
0x259 JUMPDEST
0x25a PUSH1 0x40
0x25c MLOAD
0x25d SWAP1
0x25e DUP2
0x25f MSTORE
0x260 PUSH1 0x20
0x262 ADD
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 SWAP2
0x268 SUB
0x269 SWAP1
0x26a RETURN
---
0x259: JUMPDEST 
0x25a: V201 = 0x40
0x25c: V202 = M[0x40]
0x25f: M[V202] = S0
0x260: V203 = 0x20
0x262: V204 = ADD 0x20 V202
0x263: V205 = 0x40
0x265: V206 = M[0x40]
0x268: V207 = SUB V204 V206
0x26a: RETURN V206 V207
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x26b
[0x26b:0x271]
---
Predecessors: [0x3b]
Successors: [0x272, 0x276]
---
0x26b JUMPDEST
0x26c CALLVALUE
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x26b: JUMPDEST 
0x26c: V208 = CALLVALUE
0x26d: V209 = ISZERO V208
0x26e: V210 = 0x276
0x271: JUMPI 0x276 V209
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x26b]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V211 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x276
[0x276:0x27d]
---
Predecessors: [0x26b]
Successors: [0x98b]
---
0x276 JUMPDEST
0x277 PUSH2 0x259
0x27a PUSH2 0x98b
0x27d JUMP
---
0x276: JUMPDEST 
0x277: V212 = 0x259
0x27a: V213 = 0x98b
0x27d: JUMP 0x98b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x27e
[0x27e:0x28f]
---
Predecessors: []
Successors: []
---
0x27e JUMPDEST
0x27f PUSH1 0x40
0x281 MLOAD
0x282 SWAP1
0x283 DUP2
0x284 MSTORE
0x285 PUSH1 0x20
0x287 ADD
0x288 PUSH1 0x40
0x28a MLOAD
0x28b DUP1
0x28c SWAP2
0x28d SUB
0x28e SWAP1
0x28f RETURN
---
0x27e: JUMPDEST 
0x27f: V214 = 0x40
0x281: V215 = M[0x40]
0x284: M[V215] = S0
0x285: V216 = 0x20
0x287: V217 = ADD 0x20 V215
0x288: V218 = 0x40
0x28a: V219 = M[0x40]
0x28d: V220 = SUB V217 V219
0x28f: RETURN V219 V220
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x290
[0x290:0x296]
---
Predecessors: [0x46]
Successors: [0x297, 0x29b]
---
0x290 JUMPDEST
0x291 CALLVALUE
0x292 ISZERO
0x293 PUSH2 0x29b
0x296 JUMPI
---
0x290: JUMPDEST 
0x291: V221 = CALLVALUE
0x292: V222 = ISZERO V221
0x293: V223 = 0x29b
0x296: JUMPI 0x29b V222
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x297
[0x297:0x29a]
---
Predecessors: [0x290]
Successors: []
---
0x297 PUSH1 0x0
0x299 DUP1
0x29a REVERT
---
0x297: V224 = 0x0
0x29a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29b
[0x29b:0x2b7]
---
Predecessors: [0x290]
Successors: [0x9f3]
---
0x29b JUMPDEST
0x29c PUSH2 0x2b8
0x29f PUSH1 0x1
0x2a1 PUSH1 0xa0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 SUB
0x2a7 PUSH1 0x4
0x2a9 CALLDATALOAD
0x2aa DUP2
0x2ab AND
0x2ac SWAP1
0x2ad PUSH1 0x24
0x2af CALLDATALOAD
0x2b0 AND
0x2b1 PUSH1 0x44
0x2b3 CALLDATALOAD
0x2b4 PUSH2 0x9f3
0x2b7 JUMP
---
0x29b: JUMPDEST 
0x29c: V225 = 0x2b8
0x29f: V226 = 0x1
0x2a1: V227 = 0xa0
0x2a3: V228 = 0x2
0x2a5: V229 = EXP 0x2 0xa0
0x2a6: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a7: V231 = 0x4
0x2a9: V232 = CALLDATALOAD 0x4
0x2ab: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x2ad: V234 = 0x24
0x2af: V235 = CALLDATALOAD 0x24
0x2b0: V236 = AND V235 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V237 = 0x44
0x2b3: V238 = CALLDATALOAD 0x44
0x2b4: V239 = 0x9f3
0x2b7: JUMP 0x9f3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b8, V233, V236, V238]
Exit stack: [V12, 0x2b8, V233, V236, V238]

================================

Block 0x2b8
[0x2b8:0x2cb]
---
Predecessors: [0xa0c, 0xafe, 0xf33, 0x10e6]
Successors: []
---
0x2b8 JUMPDEST
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc SWAP1
0x2bd ISZERO
0x2be ISZERO
0x2bf DUP2
0x2c0 MSTORE
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 PUSH1 0x40
0x2c6 MLOAD
0x2c7 DUP1
0x2c8 SWAP2
0x2c9 SUB
0x2ca SWAP1
0x2cb RETURN
---
0x2b8: JUMPDEST 
0x2b9: V240 = 0x40
0x2bb: V241 = M[0x40]
0x2bd: V242 = ISZERO S0
0x2be: V243 = ISZERO V242
0x2c0: M[V241] = V243
0x2c1: V244 = 0x20
0x2c3: V245 = ADD 0x20 V241
0x2c4: V246 = 0x40
0x2c6: V247 = M[0x40]
0x2c9: V248 = SUB V245 V247
0x2cb: RETURN V247 V248
---
Entry stack: [V12, 0x2b8, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2b8, S5, S4, S3, S2, S1]

================================

Block 0x2cc
[0x2cc:0x2d2]
---
Predecessors: [0x51]
Successors: [0x2d3, 0x2d7]
---
0x2cc JUMPDEST
0x2cd CALLVALUE
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2cc: JUMPDEST 
0x2cd: V249 = CALLVALUE
0x2ce: V250 = ISZERO V249
0x2cf: V251 = 0x2d7
0x2d2: JUMPI 0x2d7 V250
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2cc]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V252 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d7
[0x2d7:0x2de]
---
Predecessors: [0x2cc]
Successors: [0xa14]
---
0x2d7 JUMPDEST
0x2d8 PUSH2 0x259
0x2db PUSH2 0xa14
0x2de JUMP
---
0x2d7: JUMPDEST 
0x2d8: V253 = 0x259
0x2db: V254 = 0xa14
0x2de: JUMP 0xa14
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x2df
[0x2df:0x2f0]
---
Predecessors: []
Successors: []
---
0x2df JUMPDEST
0x2e0 PUSH1 0x40
0x2e2 MLOAD
0x2e3 SWAP1
0x2e4 DUP2
0x2e5 MSTORE
0x2e6 PUSH1 0x20
0x2e8 ADD
0x2e9 PUSH1 0x40
0x2eb MLOAD
0x2ec DUP1
0x2ed SWAP2
0x2ee SUB
0x2ef SWAP1
0x2f0 RETURN
---
0x2df: JUMPDEST 
0x2e0: V255 = 0x40
0x2e2: V256 = M[0x40]
0x2e5: M[V256] = S0
0x2e6: V257 = 0x20
0x2e8: V258 = ADD 0x20 V256
0x2e9: V259 = 0x40
0x2eb: V260 = M[0x40]
0x2ee: V261 = SUB V258 V260
0x2f0: RETURN V260 V261
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f1
[0x2f1:0x2f7]
---
Predecessors: [0x5c]
Successors: [0x2f8, 0x2fc]
---
0x2f1 JUMPDEST
0x2f2 CALLVALUE
0x2f3 ISZERO
0x2f4 PUSH2 0x2fc
0x2f7 JUMPI
---
0x2f1: JUMPDEST 
0x2f2: V262 = CALLVALUE
0x2f3: V263 = ISZERO V262
0x2f4: V264 = 0x2fc
0x2f7: JUMPI 0x2fc V263
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f8
[0x2f8:0x2fb]
---
Predecessors: [0x2f1]
Successors: []
---
0x2f8 PUSH1 0x0
0x2fa DUP1
0x2fb REVERT
---
0x2f8: V265 = 0x0
0x2fb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fc
[0x2fc:0x318]
---
Predecessors: [0x2f1]
Successors: [0xa1a]
---
0x2fc JUMPDEST
0x2fd PUSH2 0x244
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 PUSH1 0x4
0x30a CALLDATALOAD
0x30b DUP2
0x30c AND
0x30d SWAP1
0x30e PUSH1 0x24
0x310 CALLDATALOAD
0x311 AND
0x312 PUSH1 0x44
0x314 CALLDATALOAD
0x315 PUSH2 0xa1a
0x318 JUMP
---
0x2fc: JUMPDEST 
0x2fd: V266 = 0x244
0x300: V267 = 0x1
0x302: V268 = 0xa0
0x304: V269 = 0x2
0x306: V270 = EXP 0x2 0xa0
0x307: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V272 = 0x4
0x30a: V273 = CALLDATALOAD 0x4
0x30c: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x30e: V275 = 0x24
0x310: V276 = CALLDATALOAD 0x24
0x311: V277 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x312: V278 = 0x44
0x314: V279 = CALLDATALOAD 0x44
0x315: V280 = 0xa1a
0x318: JUMP 0xa1a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x244, V274, V277, V279]
Exit stack: [V12, 0x244, V274, V277, V279]

================================

Block 0x319
[0x319:0x31a]
---
Predecessors: []
Successors: []
---
0x319 JUMPDEST
0x31a STOP
---
0x319: JUMPDEST 
0x31a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x31b
[0x31b:0x321]
---
Predecessors: [0x67]
Successors: [0x322, 0x326]
---
0x31b JUMPDEST
0x31c CALLVALUE
0x31d ISZERO
0x31e PUSH2 0x326
0x321 JUMPI
---
0x31b: JUMPDEST 
0x31c: V281 = CALLVALUE
0x31d: V282 = ISZERO V281
0x31e: V283 = 0x326
0x321: JUMPI 0x326 V282
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x322
[0x322:0x325]
---
Predecessors: [0x31b]
Successors: []
---
0x322 PUSH1 0x0
0x324 DUP1
0x325 REVERT
---
0x322: V284 = 0x0
0x325: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x326
[0x326:0x32d]
---
Predecessors: [0x31b]
Successors: [0xa86]
---
0x326 JUMPDEST
0x327 PUSH2 0x259
0x32a PUSH2 0xa86
0x32d JUMP
---
0x326: JUMPDEST 
0x327: V285 = 0x259
0x32a: V286 = 0xa86
0x32d: JUMP 0xa86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x32e
[0x32e:0x33f]
---
Predecessors: []
Successors: []
---
0x32e JUMPDEST
0x32f PUSH1 0x40
0x331 MLOAD
0x332 SWAP1
0x333 DUP2
0x334 MSTORE
0x335 PUSH1 0x20
0x337 ADD
0x338 PUSH1 0x40
0x33a MLOAD
0x33b DUP1
0x33c SWAP2
0x33d SUB
0x33e SWAP1
0x33f RETURN
---
0x32e: JUMPDEST 
0x32f: V287 = 0x40
0x331: V288 = M[0x40]
0x334: M[V288] = S0
0x335: V289 = 0x20
0x337: V290 = ADD 0x20 V288
0x338: V291 = 0x40
0x33a: V292 = M[0x40]
0x33d: V293 = SUB V290 V292
0x33f: RETURN V292 V293
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x340
[0x340:0x346]
---
Predecessors: [0x72]
Successors: [0x347, 0x34b]
---
0x340 JUMPDEST
0x341 CALLVALUE
0x342 ISZERO
0x343 PUSH2 0x34b
0x346 JUMPI
---
0x340: JUMPDEST 
0x341: V294 = CALLVALUE
0x342: V295 = ISZERO V294
0x343: V296 = 0x34b
0x346: JUMPI 0x34b V295
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x347
[0x347:0x34a]
---
Predecessors: [0x340]
Successors: []
---
0x347 PUSH1 0x0
0x349 DUP1
0x34a REVERT
---
0x347: V297 = 0x0
0x34a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34b
[0x34b:0x3a4]
---
Predecessors: [0x340]
Successors: [0xaee]
---
0x34b JUMPDEST
0x34c PUSH2 0x2b8
0x34f PUSH1 0x4
0x351 DUP1
0x352 CALLDATALOAD
0x353 PUSH1 0x1
0x355 PUSH1 0xa0
0x357 PUSH1 0x2
0x359 EXP
0x35a SUB
0x35b AND
0x35c SWAP1
0x35d PUSH1 0x24
0x35f DUP1
0x360 CALLDATALOAD
0x361 SWAP2
0x362 SWAP1
0x363 PUSH1 0x64
0x365 SWAP1
0x366 PUSH1 0x44
0x368 CALLDATALOAD
0x369 SWAP1
0x36a DUP2
0x36b ADD
0x36c SWAP1
0x36d DUP4
0x36e ADD
0x36f CALLDATALOAD
0x370 DUP1
0x371 PUSH1 0x20
0x373 PUSH1 0x1f
0x375 DUP3
0x376 ADD
0x377 DUP2
0x378 SWAP1
0x379 DIV
0x37a DUP2
0x37b MUL
0x37c ADD
0x37d PUSH1 0x40
0x37f MLOAD
0x380 SWAP1
0x381 DUP2
0x382 ADD
0x383 PUSH1 0x40
0x385 MSTORE
0x386 DUP2
0x387 DUP2
0x388 MSTORE
0x389 SWAP3
0x38a SWAP2
0x38b SWAP1
0x38c PUSH1 0x20
0x38e DUP5
0x38f ADD
0x390 DUP4
0x391 DUP4
0x392 DUP1
0x393 DUP3
0x394 DUP5
0x395 CALLDATACOPY
0x396 POP
0x397 SWAP5
0x398 SWAP7
0x399 POP
0x39a PUSH2 0xaee
0x39d SWAP6
0x39e POP
0x39f POP
0x3a0 POP
0x3a1 POP
0x3a2 POP
0x3a3 POP
0x3a4 JUMP
---
0x34b: JUMPDEST 
0x34c: V298 = 0x2b8
0x34f: V299 = 0x4
0x352: V300 = CALLDATALOAD 0x4
0x353: V301 = 0x1
0x355: V302 = 0xa0
0x357: V303 = 0x2
0x359: V304 = EXP 0x2 0xa0
0x35a: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35b: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x35d: V307 = 0x24
0x360: V308 = CALLDATALOAD 0x24
0x363: V309 = 0x64
0x366: V310 = 0x44
0x368: V311 = CALLDATALOAD 0x44
0x36b: V312 = ADD V311 0x24
0x36e: V313 = ADD 0x4 V311
0x36f: V314 = CALLDATALOAD V313
0x371: V315 = 0x20
0x373: V316 = 0x1f
0x376: V317 = ADD V314 0x1f
0x379: V318 = DIV V317 0x20
0x37b: V319 = MUL 0x20 V318
0x37c: V320 = ADD V319 0x20
0x37d: V321 = 0x40
0x37f: V322 = M[0x40]
0x382: V323 = ADD V322 V320
0x383: V324 = 0x40
0x385: M[0x40] = V323
0x388: M[V322] = V314
0x38c: V325 = 0x20
0x38f: V326 = ADD V322 0x20
0x395: CALLDATACOPY V326 V312 V314
0x39a: V327 = 0xaee
0x3a4: JUMP 0xaee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b8, V306, V308, V322]
Exit stack: [V12, 0x2b8, V306, V308, V322]

================================

Block 0x3a5
[0x3a5:0x3b8]
---
Predecessors: []
Successors: []
---
0x3a5 JUMPDEST
0x3a6 PUSH1 0x40
0x3a8 MLOAD
0x3a9 SWAP1
0x3aa ISZERO
0x3ab ISZERO
0x3ac DUP2
0x3ad MSTORE
0x3ae PUSH1 0x20
0x3b0 ADD
0x3b1 PUSH1 0x40
0x3b3 MLOAD
0x3b4 DUP1
0x3b5 SWAP2
0x3b6 SUB
0x3b7 SWAP1
0x3b8 RETURN
---
0x3a5: JUMPDEST 
0x3a6: V328 = 0x40
0x3a8: V329 = M[0x40]
0x3aa: V330 = ISZERO S0
0x3ab: V331 = ISZERO V330
0x3ad: M[V329] = V331
0x3ae: V332 = 0x20
0x3b0: V333 = ADD 0x20 V329
0x3b1: V334 = 0x40
0x3b3: V335 = M[0x40]
0x3b6: V336 = SUB V333 V335
0x3b8: RETURN V335 V336
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3b9
[0x3b9:0x3bf]
---
Predecessors: [0x7d]
Successors: [0x3c0, 0x3c4]
---
0x3b9 JUMPDEST
0x3ba CALLVALUE
0x3bb ISZERO
0x3bc PUSH2 0x3c4
0x3bf JUMPI
---
0x3b9: JUMPDEST 
0x3ba: V337 = CALLVALUE
0x3bb: V338 = ISZERO V337
0x3bc: V339 = 0x3c4
0x3bf: JUMPI 0x3c4 V338
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c0
[0x3c0:0x3c3]
---
Predecessors: [0x3b9]
Successors: []
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
---
0x3c0: V340 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c4
[0x3c4:0x3d7]
---
Predecessors: [0x3b9]
Successors: [0xb05]
---
0x3c4 JUMPDEST
0x3c5 PUSH2 0x259
0x3c8 PUSH1 0x1
0x3ca PUSH1 0xa0
0x3cc PUSH1 0x2
0x3ce EXP
0x3cf SUB
0x3d0 PUSH1 0x4
0x3d2 CALLDATALOAD
0x3d3 AND
0x3d4 PUSH2 0xb05
0x3d7 JUMP
---
0x3c4: JUMPDEST 
0x3c5: V341 = 0x259
0x3c8: V342 = 0x1
0x3ca: V343 = 0xa0
0x3cc: V344 = 0x2
0x3ce: V345 = EXP 0x2 0xa0
0x3cf: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d0: V347 = 0x4
0x3d2: V348 = CALLDATALOAD 0x4
0x3d3: V349 = AND V348 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V350 = 0xb05
0x3d7: JUMP 0xb05
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259, V349]
Exit stack: [V12, 0x259, V349]

================================

Block 0x3d8
[0x3d8:0x3e9]
---
Predecessors: []
Successors: []
---
0x3d8 JUMPDEST
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc SWAP1
0x3dd DUP2
0x3de MSTORE
0x3df PUSH1 0x20
0x3e1 ADD
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 DUP1
0x3e6 SWAP2
0x3e7 SUB
0x3e8 SWAP1
0x3e9 RETURN
---
0x3d8: JUMPDEST 
0x3d9: V351 = 0x40
0x3db: V352 = M[0x40]
0x3de: M[V352] = S0
0x3df: V353 = 0x20
0x3e1: V354 = ADD 0x20 V352
0x3e2: V355 = 0x40
0x3e4: V356 = M[0x40]
0x3e7: V357 = SUB V354 V356
0x3e9: RETURN V356 V357
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3ea
[0x3ea:0x3f0]
---
Predecessors: [0x88]
Successors: [0x3f1, 0x3f5]
---
0x3ea JUMPDEST
0x3eb CALLVALUE
0x3ec ISZERO
0x3ed PUSH2 0x3f5
0x3f0 JUMPI
---
0x3ea: JUMPDEST 
0x3eb: V358 = CALLVALUE
0x3ec: V359 = ISZERO V358
0x3ed: V360 = 0x3f5
0x3f0: JUMPI 0x3f5 V359
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f1
[0x3f1:0x3f4]
---
Predecessors: [0x3ea]
Successors: []
---
0x3f1 PUSH1 0x0
0x3f3 DUP1
0x3f4 REVERT
---
0x3f1: V361 = 0x0
0x3f4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f5
[0x3f5:0x3fc]
---
Predecessors: [0x3ea]
Successors: [0xb80]
---
0x3f5 JUMPDEST
0x3f6 PUSH2 0x259
0x3f9 PUSH2 0xb80
0x3fc JUMP
---
0x3f5: JUMPDEST 
0x3f6: V362 = 0x259
0x3f9: V363 = 0xb80
0x3fc: JUMP 0xb80
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x3fd
[0x3fd:0x40e]
---
Predecessors: []
Successors: []
---
0x3fd JUMPDEST
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 SWAP1
0x402 DUP2
0x403 MSTORE
0x404 PUSH1 0x20
0x406 ADD
0x407 PUSH1 0x40
0x409 MLOAD
0x40a DUP1
0x40b SWAP2
0x40c SUB
0x40d SWAP1
0x40e RETURN
---
0x3fd: JUMPDEST 
0x3fe: V364 = 0x40
0x400: V365 = M[0x40]
0x403: M[V365] = S0
0x404: V366 = 0x20
0x406: V367 = ADD 0x20 V365
0x407: V368 = 0x40
0x409: V369 = M[0x40]
0x40c: V370 = SUB V367 V369
0x40e: RETURN V369 V370
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x40f
[0x40f:0x415]
---
Predecessors: [0x93]
Successors: [0x416, 0x41a]
---
0x40f JUMPDEST
0x410 CALLVALUE
0x411 ISZERO
0x412 PUSH2 0x41a
0x415 JUMPI
---
0x40f: JUMPDEST 
0x410: V371 = CALLVALUE
0x411: V372 = ISZERO V371
0x412: V373 = 0x41a
0x415: JUMPI 0x41a V372
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x416
[0x416:0x419]
---
Predecessors: [0x40f]
Successors: []
---
0x416 PUSH1 0x0
0x418 DUP1
0x419 REVERT
---
0x416: V374 = 0x0
0x419: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41a
[0x41a:0x436]
---
Predecessors: [0x40f]
Successors: [0xbe8]
---
0x41a JUMPDEST
0x41b PUSH2 0x244
0x41e PUSH1 0x1
0x420 PUSH1 0xa0
0x422 PUSH1 0x2
0x424 EXP
0x425 SUB
0x426 PUSH1 0x4
0x428 CALLDATALOAD
0x429 DUP2
0x42a AND
0x42b SWAP1
0x42c PUSH1 0x24
0x42e CALLDATALOAD
0x42f AND
0x430 PUSH1 0x44
0x432 CALLDATALOAD
0x433 PUSH2 0xbe8
0x436 JUMP
---
0x41a: JUMPDEST 
0x41b: V375 = 0x244
0x41e: V376 = 0x1
0x420: V377 = 0xa0
0x422: V378 = 0x2
0x424: V379 = EXP 0x2 0xa0
0x425: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x426: V381 = 0x4
0x428: V382 = CALLDATALOAD 0x4
0x42a: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x42c: V384 = 0x24
0x42e: V385 = CALLDATALOAD 0x24
0x42f: V386 = AND V385 0xffffffffffffffffffffffffffffffffffffffff
0x430: V387 = 0x44
0x432: V388 = CALLDATALOAD 0x44
0x433: V389 = 0xbe8
0x436: JUMP 0xbe8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x244, V383, V386, V388]
Exit stack: [V12, 0x244, V383, V386, V388]

================================

Block 0x437
[0x437:0x438]
---
Predecessors: []
Successors: []
---
0x437 JUMPDEST
0x438 STOP
---
0x437: JUMPDEST 
0x438: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x439
[0x439:0x43f]
---
Predecessors: [0x9e]
Successors: [0x440, 0x444]
---
0x439 JUMPDEST
0x43a CALLVALUE
0x43b ISZERO
0x43c PUSH2 0x444
0x43f JUMPI
---
0x439: JUMPDEST 
0x43a: V390 = CALLVALUE
0x43b: V391 = ISZERO V390
0x43c: V392 = 0x444
0x43f: JUMPI 0x444 V391
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x440
[0x440:0x443]
---
Predecessors: [0x439]
Successors: []
---
0x440 PUSH1 0x0
0x442 DUP1
0x443 REVERT
---
0x440: V393 = 0x0
0x443: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x444
[0x444:0x44b]
---
Predecessors: [0x439]
Successors: [0xc81]
---
0x444 JUMPDEST
0x445 PUSH2 0x44c
0x448 PUSH2 0xc81
0x44b JUMP
---
0x444: JUMPDEST 
0x445: V394 = 0x44c
0x448: V395 = 0xc81
0x44b: JUMP 0xc81
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x44c]
Exit stack: [V12, 0x44c]

================================

Block 0x44c
[0x44c:0x467]
---
Predecessors: [0xc81]
Successors: []
---
0x44c JUMPDEST
0x44d PUSH1 0x40
0x44f MLOAD
0x450 PUSH1 0x1
0x452 PUSH1 0xa0
0x454 PUSH1 0x2
0x456 EXP
0x457 SUB
0x458 SWAP1
0x459 SWAP2
0x45a AND
0x45b DUP2
0x45c MSTORE
0x45d PUSH1 0x20
0x45f ADD
0x460 PUSH1 0x40
0x462 MLOAD
0x463 DUP1
0x464 SWAP2
0x465 SUB
0x466 SWAP1
0x467 RETURN
---
0x44c: JUMPDEST 
0x44d: V396 = 0x40
0x44f: V397 = M[0x40]
0x450: V398 = 0x1
0x452: V399 = 0xa0
0x454: V400 = 0x2
0x456: V401 = EXP 0x2 0xa0
0x457: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45a: V403 = AND V1222 0xffffffffffffffffffffffffffffffffffffffff
0x45c: M[V397] = V403
0x45d: V404 = 0x20
0x45f: V405 = ADD 0x20 V397
0x460: V406 = 0x40
0x462: V407 = M[0x40]
0x465: V408 = SUB V405 V407
0x467: RETURN V407 V408
---
Entry stack: [V12, 0x44c, V1222]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x44c]

================================

Block 0x468
[0x468:0x46e]
---
Predecessors: [0xa9]
Successors: [0x46f, 0x473]
---
0x468 JUMPDEST
0x469 CALLVALUE
0x46a ISZERO
0x46b PUSH2 0x473
0x46e JUMPI
---
0x468: JUMPDEST 
0x469: V409 = CALLVALUE
0x46a: V410 = ISZERO V409
0x46b: V411 = 0x473
0x46e: JUMPI 0x473 V410
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x46f
[0x46f:0x472]
---
Predecessors: [0x468]
Successors: []
---
0x46f PUSH1 0x0
0x471 DUP1
0x472 REVERT
---
0x46f: V412 = 0x0
0x472: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x473
[0x473:0x47a]
---
Predecessors: [0x468]
Successors: [0xc90]
---
0x473 JUMPDEST
0x474 PUSH2 0x1aa
0x477 PUSH2 0xc90
0x47a JUMP
---
0x473: JUMPDEST 
0x474: V413 = 0x1aa
0x477: V414 = 0xc90
0x47a: JUMP 0xc90
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1aa]
Exit stack: [V12, 0x1aa]

================================

Block 0x47b
[0x47b:0x49e]
---
Predecessors: []
Successors: [0x49f]
---
0x47b JUMPDEST
0x47c PUSH1 0x40
0x47e MLOAD
0x47f PUSH1 0x20
0x481 DUP1
0x482 DUP3
0x483 MSTORE
0x484 DUP2
0x485 SWAP1
0x486 DUP2
0x487 ADD
0x488 DUP4
0x489 DUP2
0x48a DUP2
0x48b MLOAD
0x48c DUP2
0x48d MSTORE
0x48e PUSH1 0x20
0x490 ADD
0x491 SWAP2
0x492 POP
0x493 DUP1
0x494 MLOAD
0x495 SWAP1
0x496 PUSH1 0x20
0x498 ADD
0x499 SWAP1
0x49a DUP1
0x49b DUP4
0x49c DUP4
0x49d PUSH1 0x0
---
0x47b: JUMPDEST 
0x47c: V415 = 0x40
0x47e: V416 = M[0x40]
0x47f: V417 = 0x20
0x483: M[V416] = 0x20
0x487: V418 = ADD V416 0x20
0x48b: V419 = M[S0]
0x48d: M[V418] = V419
0x48e: V420 = 0x20
0x490: V421 = ADD 0x20 V418
0x494: V422 = M[S0]
0x496: V423 = 0x20
0x498: V424 = ADD 0x20 S0
0x49d: V425 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V416, V416, V421, V424, V422, V422, V421, V424, 0x0]
Exit stack: [S0, V416, V416, V421, V424, V422, V422, V421, V424, 0x0]

================================

Block 0x49f
[0x49f:0x4a7]
---
Predecessors: [0x47b]
Successors: [0x1e7, 0x4a8]
---
0x49f JUMPDEST
0x4a0 DUP4
0x4a1 DUP2
0x4a2 LT
0x4a3 ISZERO
0x4a4 PUSH2 0x1e7
0x4a7 JUMPI
---
0x49f: JUMPDEST 
0x4a2: V426 = LT 0x0 V422
0x4a3: V427 = ISZERO V426
0x4a4: V428 = 0x1e7
0x4a7: JUMPI 0x1e7 V427
---
Entry stack: [S9, V416, V416, V421, V424, V422, V422, V421, V424, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V416, V416, V421, V424, V422, V422, V421, V424, 0x0]

================================

Block 0x4a8
[0x4a8:0x4af]
---
Predecessors: [0x49f]
Successors: [0x4b0]
---
0x4a8 DUP1
0x4a9 DUP3
0x4aa ADD
0x4ab MLOAD
0x4ac DUP2
0x4ad DUP5
0x4ae ADD
0x4af MSTORE
---
0x4aa: V429 = ADD V424 0x0
0x4ab: V430 = M[V429]
0x4ae: V431 = ADD V421 0x0
0x4af: M[V431] = V430
---
Entry stack: [S9, V416, V416, V421, V424, V422, V422, V421, V424, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V416, V416, V421, V424, V422, V422, V421, V424, 0x0]

================================

Block 0x4b0
[0x4b0:0x4b7]
---
Predecessors: [0x4a8]
Successors: [0x1ce]
---
0x4b0 JUMPDEST
0x4b1 PUSH1 0x20
0x4b3 ADD
0x4b4 PUSH2 0x1ce
0x4b7 JUMP
---
0x4b0: JUMPDEST 
0x4b1: V432 = 0x20
0x4b3: V433 = ADD 0x20 0x0
0x4b4: V434 = 0x1ce
0x4b7: JUMP 0x1ce
---
Entry stack: [S9, V416, V416, V421, V424, V422, V422, V421, V424, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V416, V416, V421, V424, V422, V422, V421, V424, 0x20]

================================

Block 0x4b8
[0x4b8:0x4cb]
---
Predecessors: []
Successors: [0x214, 0x4cc]
---
0x4b8 JUMPDEST
0x4b9 POP
0x4ba POP
0x4bb POP
0x4bc POP
0x4bd SWAP1
0x4be POP
0x4bf SWAP1
0x4c0 DUP2
0x4c1 ADD
0x4c2 SWAP1
0x4c3 PUSH1 0x1f
0x4c5 AND
0x4c6 DUP1
0x4c7 ISZERO
0x4c8 PUSH2 0x214
0x4cb JUMPI
---
0x4b8: JUMPDEST 
0x4c1: V435 = ADD S4 S6
0x4c3: V436 = 0x1f
0x4c5: V437 = AND 0x1f S4
0x4c7: V438 = ISZERO V437
0x4c8: V439 = 0x214
0x4cb: JUMPI 0x214 V438
---
Entry stack: []
Stack pops: 7
Stack additions: [V435, V437]
Exit stack: [V435, V437]

================================

Block 0x4cc
[0x4cc:0x4e4]
---
Predecessors: [0x4b8]
Successors: [0x4e5]
---
0x4cc DUP1
0x4cd DUP3
0x4ce SUB
0x4cf DUP1
0x4d0 MLOAD
0x4d1 PUSH1 0x1
0x4d3 DUP4
0x4d4 PUSH1 0x20
0x4d6 SUB
0x4d7 PUSH2 0x100
0x4da EXP
0x4db SUB
0x4dc NOT
0x4dd AND
0x4de DUP2
0x4df MSTORE
0x4e0 PUSH1 0x20
0x4e2 ADD
0x4e3 SWAP2
0x4e4 POP
---
0x4ce: V440 = SUB V435 V437
0x4d0: V441 = M[V440]
0x4d1: V442 = 0x1
0x4d4: V443 = 0x20
0x4d6: V444 = SUB 0x20 V437
0x4d7: V445 = 0x100
0x4da: V446 = EXP 0x100 V444
0x4db: V447 = SUB V446 0x1
0x4dc: V448 = NOT V447
0x4dd: V449 = AND V448 V441
0x4df: M[V440] = V449
0x4e0: V450 = 0x20
0x4e2: V451 = ADD 0x20 V440
---
Entry stack: [V435, V437]
Stack pops: 2
Stack additions: [V451, S0]
Exit stack: [V451, V437]

================================

Block 0x4e5
[0x4e5:0x4f2]
---
Predecessors: [0x4cc]
Successors: []
---
0x4e5 JUMPDEST
0x4e6 POP
0x4e7 SWAP3
0x4e8 POP
0x4e9 POP
0x4ea POP
0x4eb PUSH1 0x40
0x4ed MLOAD
0x4ee DUP1
0x4ef SWAP2
0x4f0 SUB
0x4f1 SWAP1
0x4f2 RETURN
---
0x4e5: JUMPDEST 
0x4eb: V452 = 0x40
0x4ed: V453 = M[0x40]
0x4f0: V454 = SUB V451 V453
0x4f2: RETURN V453 V454
---
Entry stack: [V451, V437]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x4f3
[0x4f3:0x4f9]
---
Predecessors: [0xb4]
Successors: [0x4fa, 0x4fe]
---
0x4f3 JUMPDEST
0x4f4 CALLVALUE
0x4f5 ISZERO
0x4f6 PUSH2 0x4fe
0x4f9 JUMPI
---
0x4f3: JUMPDEST 
0x4f4: V455 = CALLVALUE
0x4f5: V456 = ISZERO V455
0x4f6: V457 = 0x4fe
0x4f9: JUMPI 0x4fe V456
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4fa
[0x4fa:0x4fd]
---
Predecessors: [0x4f3]
Successors: []
---
0x4fa PUSH1 0x0
0x4fc DUP1
0x4fd REVERT
---
0x4fa: V458 = 0x0
0x4fd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4fe
[0x4fe:0x508]
---
Predecessors: [0x4f3]
Successors: [0xd2e]
---
0x4fe JUMPDEST
0x4ff PUSH2 0x244
0x502 PUSH1 0x4
0x504 CALLDATALOAD
0x505 PUSH2 0xd2e
0x508 JUMP
---
0x4fe: JUMPDEST 
0x4ff: V459 = 0x244
0x502: V460 = 0x4
0x504: V461 = CALLDATALOAD 0x4
0x505: V462 = 0xd2e
0x508: JUMP 0xd2e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x244, V461]
Exit stack: [V12, 0x244, V461]

================================

Block 0x509
[0x509:0x50a]
---
Predecessors: []
Successors: []
---
0x509 JUMPDEST
0x50a STOP
---
0x509: JUMPDEST 
0x50a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x50b
[0x50b:0x511]
---
Predecessors: [0xbf]
Successors: [0x512, 0x516]
---
0x50b JUMPDEST
0x50c CALLVALUE
0x50d ISZERO
0x50e PUSH2 0x516
0x511 JUMPI
---
0x50b: JUMPDEST 
0x50c: V463 = CALLVALUE
0x50d: V464 = ISZERO V463
0x50e: V465 = 0x516
0x511: JUMPI 0x516 V464
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x512
[0x512:0x515]
---
Predecessors: [0x50b]
Successors: []
---
0x512 PUSH1 0x0
0x514 DUP1
0x515 REVERT
---
0x512: V466 = 0x0
0x515: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x516
[0x516:0x52c]
---
Predecessors: [0x50b]
Successors: [0xddb]
---
0x516 JUMPDEST
0x517 PUSH2 0x2b8
0x51a PUSH1 0x1
0x51c PUSH1 0xa0
0x51e PUSH1 0x2
0x520 EXP
0x521 SUB
0x522 PUSH1 0x4
0x524 CALLDATALOAD
0x525 AND
0x526 PUSH1 0x24
0x528 CALLDATALOAD
0x529 PUSH2 0xddb
0x52c JUMP
---
0x516: JUMPDEST 
0x517: V467 = 0x2b8
0x51a: V468 = 0x1
0x51c: V469 = 0xa0
0x51e: V470 = 0x2
0x520: V471 = EXP 0x2 0xa0
0x521: V472 = SUB 0x10000000000000000000000000000000000000000 0x1
0x522: V473 = 0x4
0x524: V474 = CALLDATALOAD 0x4
0x525: V475 = AND V474 0xffffffffffffffffffffffffffffffffffffffff
0x526: V476 = 0x24
0x528: V477 = CALLDATALOAD 0x24
0x529: V478 = 0xddb
0x52c: JUMP 0xddb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b8, V475, V477]
Exit stack: [V12, 0x2b8, V475, V477]

================================

Block 0x52d
[0x52d:0x540]
---
Predecessors: []
Successors: []
---
0x52d JUMPDEST
0x52e PUSH1 0x40
0x530 MLOAD
0x531 SWAP1
0x532 ISZERO
0x533 ISZERO
0x534 DUP2
0x535 MSTORE
0x536 PUSH1 0x20
0x538 ADD
0x539 PUSH1 0x40
0x53b MLOAD
0x53c DUP1
0x53d SWAP2
0x53e SUB
0x53f SWAP1
0x540 RETURN
---
0x52d: JUMPDEST 
0x52e: V479 = 0x40
0x530: V480 = M[0x40]
0x532: V481 = ISZERO S0
0x533: V482 = ISZERO V481
0x535: M[V480] = V482
0x536: V483 = 0x20
0x538: V484 = ADD 0x20 V480
0x539: V485 = 0x40
0x53b: V486 = M[0x40]
0x53e: V487 = SUB V484 V486
0x540: RETURN V486 V487
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x541
[0x541:0x547]
---
Predecessors: [0xca]
Successors: [0x548, 0x54c]
---
0x541 JUMPDEST
0x542 CALLVALUE
0x543 ISZERO
0x544 PUSH2 0x54c
0x547 JUMPI
---
0x541: JUMPDEST 
0x542: V488 = CALLVALUE
0x543: V489 = ISZERO V488
0x544: V490 = 0x54c
0x547: JUMPI 0x54c V489
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x548
[0x548:0x54b]
---
Predecessors: [0x541]
Successors: []
---
0x548 PUSH1 0x0
0x54a DUP1
0x54b REVERT
---
0x548: V491 = 0x0
0x54b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x54c
[0x54c:0x5ac]
---
Predecessors: [0x541]
Successors: [0xdfa]
---
0x54c JUMPDEST
0x54d PUSH2 0x2b8
0x550 PUSH1 0x1
0x552 PUSH1 0xa0
0x554 PUSH1 0x2
0x556 EXP
0x557 SUB
0x558 PUSH1 0x4
0x55a DUP1
0x55b CALLDATALOAD
0x55c DUP3
0x55d AND
0x55e SWAP2
0x55f PUSH1 0x24
0x561 DUP1
0x562 CALLDATALOAD
0x563 SWAP1
0x564 SWAP2
0x565 AND
0x566 SWAP2
0x567 PUSH1 0x44
0x569 CALLDATALOAD
0x56a SWAP2
0x56b PUSH1 0x84
0x56d SWAP1
0x56e PUSH1 0x64
0x570 CALLDATALOAD
0x571 SWAP1
0x572 DUP2
0x573 ADD
0x574 SWAP1
0x575 DUP4
0x576 ADD
0x577 CALLDATALOAD
0x578 DUP1
0x579 PUSH1 0x20
0x57b PUSH1 0x1f
0x57d DUP3
0x57e ADD
0x57f DUP2
0x580 SWAP1
0x581 DIV
0x582 DUP2
0x583 MUL
0x584 ADD
0x585 PUSH1 0x40
0x587 MLOAD
0x588 SWAP1
0x589 DUP2
0x58a ADD
0x58b PUSH1 0x40
0x58d MSTORE
0x58e DUP2
0x58f DUP2
0x590 MSTORE
0x591 SWAP3
0x592 SWAP2
0x593 SWAP1
0x594 PUSH1 0x20
0x596 DUP5
0x597 ADD
0x598 DUP4
0x599 DUP4
0x59a DUP1
0x59b DUP3
0x59c DUP5
0x59d CALLDATACOPY
0x59e POP
0x59f SWAP5
0x5a0 SWAP7
0x5a1 POP
0x5a2 PUSH2 0xdfa
0x5a5 SWAP6
0x5a6 POP
0x5a7 POP
0x5a8 POP
0x5a9 POP
0x5aa POP
0x5ab POP
0x5ac JUMP
---
0x54c: JUMPDEST 
0x54d: V492 = 0x2b8
0x550: V493 = 0x1
0x552: V494 = 0xa0
0x554: V495 = 0x2
0x556: V496 = EXP 0x2 0xa0
0x557: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x558: V498 = 0x4
0x55b: V499 = CALLDATALOAD 0x4
0x55d: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x55f: V501 = 0x24
0x562: V502 = CALLDATALOAD 0x24
0x565: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x567: V504 = 0x44
0x569: V505 = CALLDATALOAD 0x44
0x56b: V506 = 0x84
0x56e: V507 = 0x64
0x570: V508 = CALLDATALOAD 0x64
0x573: V509 = ADD V508 0x24
0x576: V510 = ADD 0x4 V508
0x577: V511 = CALLDATALOAD V510
0x579: V512 = 0x20
0x57b: V513 = 0x1f
0x57e: V514 = ADD V511 0x1f
0x581: V515 = DIV V514 0x20
0x583: V516 = MUL 0x20 V515
0x584: V517 = ADD V516 0x20
0x585: V518 = 0x40
0x587: V519 = M[0x40]
0x58a: V520 = ADD V519 V517
0x58b: V521 = 0x40
0x58d: M[0x40] = V520
0x590: M[V519] = V511
0x594: V522 = 0x20
0x597: V523 = ADD V519 0x20
0x59d: CALLDATACOPY V523 V509 V511
0x5a2: V524 = 0xdfa
0x5ac: JUMP 0xdfa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b8, V500, V503, V505, V519]
Exit stack: [V12, 0x2b8, V500, V503, V505, V519]

================================

Block 0x5ad
[0x5ad:0x5c0]
---
Predecessors: []
Successors: []
---
0x5ad JUMPDEST
0x5ae PUSH1 0x40
0x5b0 MLOAD
0x5b1 SWAP1
0x5b2 ISZERO
0x5b3 ISZERO
0x5b4 DUP2
0x5b5 MSTORE
0x5b6 PUSH1 0x20
0x5b8 ADD
0x5b9 PUSH1 0x40
0x5bb MLOAD
0x5bc DUP1
0x5bd SWAP2
0x5be SUB
0x5bf SWAP1
0x5c0 RETURN
---
0x5ad: JUMPDEST 
0x5ae: V525 = 0x40
0x5b0: V526 = M[0x40]
0x5b2: V527 = ISZERO S0
0x5b3: V528 = ISZERO V527
0x5b5: M[V526] = V528
0x5b6: V529 = 0x20
0x5b8: V530 = ADD 0x20 V526
0x5b9: V531 = 0x40
0x5bb: V532 = M[0x40]
0x5be: V533 = SUB V530 V532
0x5c0: RETURN V532 V533
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5c1
[0x5c1:0x5c7]
---
Predecessors: [0xd5]
Successors: [0x5c8, 0x5cc]
---
0x5c1 JUMPDEST
0x5c2 CALLVALUE
0x5c3 ISZERO
0x5c4 PUSH2 0x5cc
0x5c7 JUMPI
---
0x5c1: JUMPDEST 
0x5c2: V534 = CALLVALUE
0x5c3: V535 = ISZERO V534
0x5c4: V536 = 0x5cc
0x5c7: JUMPI 0x5cc V535
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5c8
[0x5c8:0x5cb]
---
Predecessors: [0x5c1]
Successors: []
---
0x5c8 PUSH1 0x0
0x5ca DUP1
0x5cb REVERT
---
0x5c8: V537 = 0x0
0x5cb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5cc
[0x5cc:0x5d3]
---
Predecessors: [0x5c1]
Successors: [0xf3b]
---
0x5cc JUMPDEST
0x5cd PUSH2 0x259
0x5d0 PUSH2 0xf3b
0x5d3 JUMP
---
0x5cc: JUMPDEST 
0x5cd: V538 = 0x259
0x5d0: V539 = 0xf3b
0x5d3: JUMP 0xf3b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x5d4
[0x5d4:0x5e5]
---
Predecessors: []
Successors: []
---
0x5d4 JUMPDEST
0x5d5 PUSH1 0x40
0x5d7 MLOAD
0x5d8 SWAP1
0x5d9 DUP2
0x5da MSTORE
0x5db PUSH1 0x20
0x5dd ADD
0x5de PUSH1 0x40
0x5e0 MLOAD
0x5e1 DUP1
0x5e2 SWAP2
0x5e3 SUB
0x5e4 SWAP1
0x5e5 RETURN
---
0x5d4: JUMPDEST 
0x5d5: V540 = 0x40
0x5d7: V541 = M[0x40]
0x5da: M[V541] = S0
0x5db: V542 = 0x20
0x5dd: V543 = ADD 0x20 V541
0x5de: V544 = 0x40
0x5e0: V545 = M[0x40]
0x5e3: V546 = SUB V543 V545
0x5e5: RETURN V545 V546
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5e6
[0x5e6:0x5ec]
---
Predecessors: [0xe0]
Successors: [0x5ed, 0x5f1]
---
0x5e6 JUMPDEST
0x5e7 CALLVALUE
0x5e8 ISZERO
0x5e9 PUSH2 0x5f1
0x5ec JUMPI
---
0x5e6: JUMPDEST 
0x5e7: V547 = CALLVALUE
0x5e8: V548 = ISZERO V547
0x5e9: V549 = 0x5f1
0x5ec: JUMPI 0x5f1 V548
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5ed
[0x5ed:0x5f0]
---
Predecessors: [0x5e6]
Successors: []
---
0x5ed PUSH1 0x0
0x5ef DUP1
0x5f0 REVERT
---
0x5ed: V550 = 0x0
0x5f0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5f1
[0x5f1:0x64a]
---
Predecessors: [0x5e6]
Successors: [0xfa3]
---
0x5f1 JUMPDEST
0x5f2 PUSH2 0x2b8
0x5f5 PUSH1 0x4
0x5f7 DUP1
0x5f8 CALLDATALOAD
0x5f9 PUSH1 0x1
0x5fb PUSH1 0xa0
0x5fd PUSH1 0x2
0x5ff EXP
0x600 SUB
0x601 AND
0x602 SWAP1
0x603 PUSH1 0x24
0x605 DUP1
0x606 CALLDATALOAD
0x607 SWAP2
0x608 SWAP1
0x609 PUSH1 0x64
0x60b SWAP1
0x60c PUSH1 0x44
0x60e CALLDATALOAD
0x60f SWAP1
0x610 DUP2
0x611 ADD
0x612 SWAP1
0x613 DUP4
0x614 ADD
0x615 CALLDATALOAD
0x616 DUP1
0x617 PUSH1 0x20
0x619 PUSH1 0x1f
0x61b DUP3
0x61c ADD
0x61d DUP2
0x61e SWAP1
0x61f DIV
0x620 DUP2
0x621 MUL
0x622 ADD
0x623 PUSH1 0x40
0x625 MLOAD
0x626 SWAP1
0x627 DUP2
0x628 ADD
0x629 PUSH1 0x40
0x62b MSTORE
0x62c DUP2
0x62d DUP2
0x62e MSTORE
0x62f SWAP3
0x630 SWAP2
0x631 SWAP1
0x632 PUSH1 0x20
0x634 DUP5
0x635 ADD
0x636 DUP4
0x637 DUP4
0x638 DUP1
0x639 DUP3
0x63a DUP5
0x63b CALLDATACOPY
0x63c POP
0x63d SWAP5
0x63e SWAP7
0x63f POP
0x640 PUSH2 0xfa3
0x643 SWAP6
0x644 POP
0x645 POP
0x646 POP
0x647 POP
0x648 POP
0x649 POP
0x64a JUMP
---
0x5f1: JUMPDEST 
0x5f2: V551 = 0x2b8
0x5f5: V552 = 0x4
0x5f8: V553 = CALLDATALOAD 0x4
0x5f9: V554 = 0x1
0x5fb: V555 = 0xa0
0x5fd: V556 = 0x2
0x5ff: V557 = EXP 0x2 0xa0
0x600: V558 = SUB 0x10000000000000000000000000000000000000000 0x1
0x601: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x603: V560 = 0x24
0x606: V561 = CALLDATALOAD 0x24
0x609: V562 = 0x64
0x60c: V563 = 0x44
0x60e: V564 = CALLDATALOAD 0x44
0x611: V565 = ADD V564 0x24
0x614: V566 = ADD 0x4 V564
0x615: V567 = CALLDATALOAD V566
0x617: V568 = 0x20
0x619: V569 = 0x1f
0x61c: V570 = ADD V567 0x1f
0x61f: V571 = DIV V570 0x20
0x621: V572 = MUL 0x20 V571
0x622: V573 = ADD V572 0x20
0x623: V574 = 0x40
0x625: V575 = M[0x40]
0x628: V576 = ADD V575 V573
0x629: V577 = 0x40
0x62b: M[0x40] = V576
0x62e: M[V575] = V567
0x632: V578 = 0x20
0x635: V579 = ADD V575 0x20
0x63b: CALLDATACOPY V579 V565 V567
0x640: V580 = 0xfa3
0x64a: JUMP 0xfa3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b8, V559, V561, V575]
Exit stack: [V12, 0x2b8, V559, V561, V575]

================================

Block 0x64b
[0x64b:0x65e]
---
Predecessors: []
Successors: []
---
0x64b JUMPDEST
0x64c PUSH1 0x40
0x64e MLOAD
0x64f SWAP1
0x650 ISZERO
0x651 ISZERO
0x652 DUP2
0x653 MSTORE
0x654 PUSH1 0x20
0x656 ADD
0x657 PUSH1 0x40
0x659 MLOAD
0x65a DUP1
0x65b SWAP2
0x65c SUB
0x65d SWAP1
0x65e RETURN
---
0x64b: JUMPDEST 
0x64c: V581 = 0x40
0x64e: V582 = M[0x40]
0x650: V583 = ISZERO S0
0x651: V584 = ISZERO V583
0x653: M[V582] = V584
0x654: V585 = 0x20
0x656: V586 = ADD 0x20 V582
0x657: V587 = 0x40
0x659: V588 = M[0x40]
0x65c: V589 = SUB V586 V588
0x65e: RETURN V588 V589
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x65f
[0x65f:0x665]
---
Predecessors: [0xeb]
Successors: [0x666, 0x66a]
---
0x65f JUMPDEST
0x660 CALLVALUE
0x661 ISZERO
0x662 PUSH2 0x66a
0x665 JUMPI
---
0x65f: JUMPDEST 
0x660: V590 = CALLVALUE
0x661: V591 = ISZERO V590
0x662: V592 = 0x66a
0x665: JUMPI 0x66a V591
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x666
[0x666:0x669]
---
Predecessors: [0x65f]
Successors: []
---
0x666 PUSH1 0x0
0x668 DUP1
0x669 REVERT
---
0x666: V593 = 0x0
0x669: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x66a
[0x66a:0x677]
---
Predecessors: [0x65f]
Successors: [0x10ed]
---
0x66a JUMPDEST
0x66b PUSH2 0x244
0x66e PUSH1 0x4
0x670 CALLDATALOAD
0x671 PUSH1 0x24
0x673 CALLDATALOAD
0x674 PUSH2 0x10ed
0x677 JUMP
---
0x66a: JUMPDEST 
0x66b: V594 = 0x244
0x66e: V595 = 0x4
0x670: V596 = CALLDATALOAD 0x4
0x671: V597 = 0x24
0x673: V598 = CALLDATALOAD 0x24
0x674: V599 = 0x10ed
0x677: JUMP 0x10ed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x244, V596, V598]
Exit stack: [V12, 0x244, V596, V598]

================================

Block 0x678
[0x678:0x679]
---
Predecessors: []
Successors: []
---
0x678 JUMPDEST
0x679 STOP
---
0x678: JUMPDEST 
0x679: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x67a
[0x67a:0x680]
---
Predecessors: [0xf6]
Successors: [0x681, 0x685]
---
0x67a JUMPDEST
0x67b CALLVALUE
0x67c ISZERO
0x67d PUSH2 0x685
0x680 JUMPI
---
0x67a: JUMPDEST 
0x67b: V600 = CALLVALUE
0x67c: V601 = ISZERO V600
0x67d: V602 = 0x685
0x680: JUMPI 0x685 V601
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x681
[0x681:0x684]
---
Predecessors: [0x67a]
Successors: []
---
0x681 PUSH1 0x0
0x683 DUP1
0x684 REVERT
---
0x681: V603 = 0x0
0x684: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x685
[0x685:0x69e]
---
Predecessors: [0x67a]
Successors: [0x11ae]
---
0x685 JUMPDEST
0x686 PUSH2 0x259
0x689 PUSH1 0x1
0x68b PUSH1 0xa0
0x68d PUSH1 0x2
0x68f EXP
0x690 SUB
0x691 PUSH1 0x4
0x693 CALLDATALOAD
0x694 DUP2
0x695 AND
0x696 SWAP1
0x697 PUSH1 0x24
0x699 CALLDATALOAD
0x69a AND
0x69b PUSH2 0x11ae
0x69e JUMP
---
0x685: JUMPDEST 
0x686: V604 = 0x259
0x689: V605 = 0x1
0x68b: V606 = 0xa0
0x68d: V607 = 0x2
0x68f: V608 = EXP 0x2 0xa0
0x690: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x691: V610 = 0x4
0x693: V611 = CALLDATALOAD 0x4
0x695: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0x697: V613 = 0x24
0x699: V614 = CALLDATALOAD 0x24
0x69a: V615 = AND V614 0xffffffffffffffffffffffffffffffffffffffff
0x69b: V616 = 0x11ae
0x69e: JUMP 0x11ae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259, V612, V615]
Exit stack: [V12, 0x259, V612, V615]

================================

Block 0x69f
[0x69f:0x6b0]
---
Predecessors: []
Successors: []
---
0x69f JUMPDEST
0x6a0 PUSH1 0x40
0x6a2 MLOAD
0x6a3 SWAP1
0x6a4 DUP2
0x6a5 MSTORE
0x6a6 PUSH1 0x20
0x6a8 ADD
0x6a9 PUSH1 0x40
0x6ab MLOAD
0x6ac DUP1
0x6ad SWAP2
0x6ae SUB
0x6af SWAP1
0x6b0 RETURN
---
0x69f: JUMPDEST 
0x6a0: V617 = 0x40
0x6a2: V618 = M[0x40]
0x6a5: M[V618] = S0
0x6a6: V619 = 0x20
0x6a8: V620 = ADD 0x20 V618
0x6a9: V621 = 0x40
0x6ab: V622 = M[0x40]
0x6ae: V623 = SUB V620 V622
0x6b0: RETURN V622 V623
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6b1
[0x6b1:0x6bb]
---
Predecessors: [0x101]
Successors: [0x6df]
---
0x6b1 JUMPDEST
0x6b2 PUSH2 0x244
0x6b5 PUSH1 0x4
0x6b7 CALLDATALOAD
0x6b8 PUSH2 0x6df
0x6bb JUMP
---
0x6b1: JUMPDEST 
0x6b2: V624 = 0x244
0x6b5: V625 = 0x4
0x6b7: V626 = CALLDATALOAD 0x4
0x6b8: V627 = 0x6df
0x6bb: JUMP 0x6df
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x244, V626]
Exit stack: [V12, 0x244, V626]

================================

Block 0x6bc
[0x6bc:0x6bd]
---
Predecessors: []
Successors: []
---
0x6bc JUMPDEST
0x6bd STOP
---
0x6bc: JUMPDEST 
0x6bd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6be
[0x6be:0x6c4]
---
Predecessors: [0x10c]
Successors: [0x6c5, 0x6c9]
---
0x6be JUMPDEST
0x6bf CALLVALUE
0x6c0 ISZERO
0x6c1 PUSH2 0x6c9
0x6c4 JUMPI
---
0x6be: JUMPDEST 
0x6bf: V628 = CALLVALUE
0x6c0: V629 = ISZERO V628
0x6c1: V630 = 0x6c9
0x6c4: JUMPI 0x6c9 V629
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6c5
[0x6c5:0x6c8]
---
Predecessors: [0x6be]
Successors: []
---
0x6c5 PUSH1 0x0
0x6c7 DUP1
0x6c8 REVERT
---
0x6c5: V631 = 0x0
0x6c8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6c9
[0x6c9:0x6dc]
---
Predecessors: [0x6be]
Successors: [0x1232]
---
0x6c9 JUMPDEST
0x6ca PUSH2 0x244
0x6cd PUSH1 0x1
0x6cf PUSH1 0xa0
0x6d1 PUSH1 0x2
0x6d3 EXP
0x6d4 SUB
0x6d5 PUSH1 0x4
0x6d7 CALLDATALOAD
0x6d8 AND
0x6d9 PUSH2 0x1232
0x6dc JUMP
---
0x6c9: JUMPDEST 
0x6ca: V632 = 0x244
0x6cd: V633 = 0x1
0x6cf: V634 = 0xa0
0x6d1: V635 = 0x2
0x6d3: V636 = EXP 0x2 0xa0
0x6d4: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d5: V638 = 0x4
0x6d7: V639 = CALLDATALOAD 0x4
0x6d8: V640 = AND V639 0xffffffffffffffffffffffffffffffffffffffff
0x6d9: V641 = 0x1232
0x6dc: JUMP 0x1232
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x244, V640]
Exit stack: [V12, 0x244, V640]

================================

Block 0x6dd
[0x6dd:0x6de]
---
Predecessors: []
Successors: []
---
0x6dd JUMPDEST
0x6de STOP
---
0x6dd: JUMPDEST 
0x6de: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6df
[0x6df:0x6e8]
---
Predecessors: [0x171, 0x6b1]
Successors: [0x1388]
---
0x6df JUMPDEST
0x6e0 PUSH1 0x0
0x6e2 PUSH2 0x6e9
0x6e5 PUSH2 0x1388
0x6e8 JUMP
---
0x6df: JUMPDEST 
0x6e0: V642 = 0x0
0x6e2: V643 = 0x6e9
0x6e5: V644 = 0x1388
0x6e8: JUMP 0x1388
---
Entry stack: [V12, S2, {0x186, 0x244}, S0]
Stack pops: 0
Stack additions: [0x0, 0x6e9]
Exit stack: [V12, S2, {0x186, 0x244}, S0, 0x0, 0x6e9]

================================

Block 0x6e9
[0x6e9:0x6f1]
---
Predecessors: [0x1388]
Successors: [0x6f2, 0x6f6]
---
0x6e9 JUMPDEST
0x6ea PUSH1 0x0
0x6ec CALLVALUE
0x6ed GT
0x6ee PUSH2 0x6f6
0x6f1 JUMPI
---
0x6e9: JUMPDEST 
0x6ea: V645 = 0x0
0x6ec: V646 = CALLVALUE
0x6ed: V647 = GT V646 0x0
0x6ee: V648 = 0x6f6
0x6f1: JUMPI 0x6f6 V647
---
Entry stack: [V12, S5, S4, S3, S2, S1, V1912]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, V1912]

================================

Block 0x6f2
[0x6f2:0x6f5]
---
Predecessors: [0x6e9]
Successors: []
---
0x6f2 PUSH1 0x0
0x6f4 DUP1
0x6f5 REVERT
---
0x6f2: V649 = 0x0
0x6f5: REVERT 0x0 0x0
---
Entry stack: [V12, S5, S4, S3, S2, S1, V1912]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, V1912]

================================

Block 0x6f6
[0x6f6:0x75d]
---
Predecessors: [0x6e9]
Successors: [0x75e, 0x762]
---
0x6f6 JUMPDEST
0x6f7 PUSH1 0x0
0x6f9 DUP1
0x6fa SLOAD
0x6fb PUSH1 0x1
0x6fd PUSH1 0xa0
0x6ff PUSH1 0x2
0x701 EXP
0x702 SUB
0x703 AND
0x704 SWAP1
0x705 PUSH4 0x98968f15
0x70a SWAP1
0x70b CALLER
0x70c SWAP1
0x70d CALLVALUE
0x70e SWAP1
0x70f DUP8
0x710 SWAP1
0x711 PUSH1 0x40
0x713 MLOAD
0x714 PUSH1 0x20
0x716 ADD
0x717 MSTORE
0x718 PUSH1 0x40
0x71a MLOAD
0x71b PUSH1 0xe0
0x71d PUSH1 0x2
0x71f EXP
0x720 PUSH4 0xffffffff
0x725 DUP7
0x726 AND
0x727 MUL
0x728 DUP2
0x729 MSTORE
0x72a PUSH1 0x1
0x72c PUSH1 0xa0
0x72e PUSH1 0x2
0x730 EXP
0x731 SUB
0x732 SWAP1
0x733 SWAP4
0x734 AND
0x735 PUSH1 0x4
0x737 DUP5
0x738 ADD
0x739 MSTORE
0x73a PUSH1 0x24
0x73c DUP4
0x73d ADD
0x73e SWAP2
0x73f SWAP1
0x740 SWAP2
0x741 MSTORE
0x742 PUSH1 0x44
0x744 DUP3
0x745 ADD
0x746 MSTORE
0x747 PUSH1 0x64
0x749 ADD
0x74a PUSH1 0x20
0x74c PUSH1 0x40
0x74e MLOAD
0x74f DUP1
0x750 DUP4
0x751 SUB
0x752 DUP2
0x753 PUSH1 0x0
0x755 DUP8
0x756 DUP1
0x757 EXTCODESIZE
0x758 ISZERO
0x759 ISZERO
0x75a PUSH2 0x762
0x75d JUMPI
---
0x6f6: JUMPDEST 
0x6f7: V650 = 0x0
0x6fa: V651 = S[0x0]
0x6fb: V652 = 0x1
0x6fd: V653 = 0xa0
0x6ff: V654 = 0x2
0x701: V655 = EXP 0x2 0xa0
0x702: V656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x703: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0x705: V658 = 0x98968f15
0x70b: V659 = CALLER
0x70d: V660 = CALLVALUE
0x711: V661 = 0x40
0x713: V662 = M[0x40]
0x714: V663 = 0x20
0x716: V664 = ADD 0x20 V662
0x717: M[V664] = 0x0
0x718: V665 = 0x40
0x71a: V666 = M[0x40]
0x71b: V667 = 0xe0
0x71d: V668 = 0x2
0x71f: V669 = EXP 0x2 0xe0
0x720: V670 = 0xffffffff
0x726: V671 = AND 0x98968f15 0xffffffff
0x727: V672 = MUL 0x98968f15 0x100000000000000000000000000000000000000000000000000000000
0x729: M[V666] = 0x98968f1500000000000000000000000000000000000000000000000000000000
0x72a: V673 = 0x1
0x72c: V674 = 0xa0
0x72e: V675 = 0x2
0x730: V676 = EXP 0x2 0xa0
0x731: V677 = SUB 0x10000000000000000000000000000000000000000 0x1
0x734: V678 = AND V659 0xffffffffffffffffffffffffffffffffffffffff
0x735: V679 = 0x4
0x738: V680 = ADD V666 0x4
0x739: M[V680] = V678
0x73a: V681 = 0x24
0x73d: V682 = ADD V666 0x24
0x741: M[V682] = V660
0x742: V683 = 0x44
0x745: V684 = ADD V666 0x44
0x746: M[V684] = S2
0x747: V685 = 0x64
0x749: V686 = ADD 0x64 V666
0x74a: V687 = 0x20
0x74c: V688 = 0x40
0x74e: V689 = M[0x40]
0x751: V690 = SUB V686 V689
0x753: V691 = 0x0
0x757: V692 = EXTCODESIZE V657
0x758: V693 = ISZERO V692
0x759: V694 = ISZERO V693
0x75a: V695 = 0x762
0x75d: JUMPI 0x762 V694
---
Entry stack: [V12, S5, S4, S3, S2, S1, V1912]
Stack pops: 3
Stack additions: [S2, S1, S0, V657, 0x98968f15, V686, 0x20, V689, V690, V689, 0x0, V657]
Exit stack: [V12, S5, S4, S3, S2, S1, V1912, V657, 0x98968f15, V686, 0x20, V689, V690, V689, 0x0, V657]

================================

Block 0x75e
[0x75e:0x761]
---
Predecessors: [0x6f6]
Successors: []
---
0x75e PUSH1 0x0
0x760 DUP1
0x761 REVERT
---
0x75e: V696 = 0x0
0x761: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, S10, V1912, V657, 0x98968f15, V686, 0x20, V689, V690, V689, 0x0, V657]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, V1912, V657, 0x98968f15, V686, 0x20, V689, V690, V689, 0x0, V657]

================================

Block 0x762
[0x762:0x76e]
---
Predecessors: [0x6f6]
Successors: [0x76f, 0x773]
---
0x762 JUMPDEST
0x763 PUSH2 0x2c6
0x766 GAS
0x767 SUB
0x768 CALL
0x769 ISZERO
0x76a ISZERO
0x76b PUSH2 0x773
0x76e JUMPI
---
0x762: JUMPDEST 
0x763: V697 = 0x2c6
0x766: V698 = GAS
0x767: V699 = SUB V698 0x2c6
0x768: V700 = CALL V699 V657 0x0 V689 V690 V689 0x20
0x769: V701 = ISZERO V700
0x76a: V702 = ISZERO V701
0x76b: V703 = 0x773
0x76e: JUMPI 0x773 V702
---
Entry stack: [V12, S14, S13, S12, S11, S10, V1912, V657, 0x98968f15, V686, 0x20, V689, V690, V689, 0x0, V657]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, V1912, V657, 0x98968f15, V686]

================================

Block 0x76f
[0x76f:0x772]
---
Predecessors: [0x762]
Successors: []
---
0x76f PUSH1 0x0
0x771 DUP1
0x772 REVERT
---
0x76f: V704 = 0x0
0x772: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, V1912, V657, 0x98968f15, V686]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, V1912, V657, 0x98968f15, V686]

================================

Block 0x773
[0x773:0x7bb]
---
Predecessors: [0x762]
Successors: [0x128f]
---
0x773 JUMPDEST
0x774 POP
0x775 POP
0x776 POP
0x777 PUSH1 0x40
0x779 MLOAD
0x77a DUP1
0x77b MLOAD
0x77c PUSH1 0x0
0x77e SLOAD
0x77f SWAP1
0x780 SWAP4
0x781 POP
0x782 PUSH1 0x1
0x784 PUSH1 0xa0
0x786 PUSH1 0x2
0x788 EXP
0x789 SUB
0x78a CALLER
0x78b DUP2
0x78c AND
0x78d SWAP3
0x78e POP
0x78f AND
0x790 PUSH1 0x0
0x792 DUP1
0x793 MLOAD
0x794 PUSH1 0x20
0x796 PUSH2 0x139b
0x799 DUP4
0x79a CODECOPY
0x79b DUP2
0x79c MLOAD
0x79d SWAP2
0x79e MSTORE
0x79f DUP5
0x7a0 PUSH1 0x40
0x7a2 MLOAD
0x7a3 SWAP1
0x7a4 DUP2
0x7a5 MSTORE
0x7a6 PUSH1 0x20
0x7a8 ADD
0x7a9 PUSH1 0x40
0x7ab MLOAD
0x7ac DUP1
0x7ad SWAP2
0x7ae SUB
0x7af SWAP1
0x7b0 LOG3
0x7b1 PUSH2 0x7bc
0x7b4 ADDRESS
0x7b5 CALLER
0x7b6 DUP5
0x7b7 DUP5
0x7b8 PUSH2 0x128f
0x7bb JUMP
---
0x773: JUMPDEST 
0x777: V705 = 0x40
0x779: V706 = M[0x40]
0x77b: V707 = M[V706]
0x77c: V708 = 0x0
0x77e: V709 = S[0x0]
0x782: V710 = 0x1
0x784: V711 = 0xa0
0x786: V712 = 0x2
0x788: V713 = EXP 0x2 0xa0
0x789: V714 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78a: V715 = CALLER
0x78c: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0x78f: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0x790: V718 = 0x0
0x793: V719 = M[0x0]
0x794: V720 = 0x20
0x796: V721 = 0x139b
0x79a: CODECOPY 0x0 0x139b 0x20
0x79c: V722 = M[0x0]
0x79e: M[0x0] = V719
0x7a0: V723 = 0x40
0x7a2: V724 = M[0x40]
0x7a5: M[V724] = V707
0x7a6: V725 = 0x20
0x7a8: V726 = ADD 0x20 V724
0x7a9: V727 = 0x40
0x7ab: V728 = M[0x40]
0x7ae: V729 = SUB V726 V728
0x7b0: LOG V728 V729 V722 V717 V716
0x7b1: V730 = 0x7bc
0x7b4: V731 = ADDRESS
0x7b5: V732 = CALLER
0x7b8: V733 = 0x128f
0x7bb: JUMP 0x128f
---
Entry stack: [V12, S8, S7, S6, S5, S4, V1912, V657, 0x98968f15, V686]
Stack pops: 5
Stack additions: [V707, S3, 0x7bc, V731, V732, V707, S3]
Exit stack: [V12, S8, S7, S6, S5, V707, V1912, 0x7bc, V731, V732, V707, V1912]

================================

Block 0x7bc
[0x7bc:0x7bc]
---
Predecessors: [0x1380]
Successors: [0x7bd]
---
0x7bc JUMPDEST
---
0x7bc: JUMPDEST 
---
Entry stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7bd
[0x7bd:0x7c1]
---
Predecessors: [0x7bc]
Successors: [0x186, 0x244]
---
0x7bd JUMPDEST
0x7be POP
0x7bf POP
0x7c0 POP
0x7c1 JUMP
---
0x7bd: JUMPDEST 
0x7c1: JUMP S3
---
Entry stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x7c2
[0x7c2:0x811]
---
Predecessors: [0x1a2]
Successors: [0x812, 0x858]
---
0x7c2 JUMPDEST
0x7c3 PUSH1 0x1
0x7c5 DUP1
0x7c6 SLOAD
0x7c7 PUSH1 0x1
0x7c9 DUP2
0x7ca PUSH1 0x1
0x7cc AND
0x7cd ISZERO
0x7ce PUSH2 0x100
0x7d1 MUL
0x7d2 SUB
0x7d3 AND
0x7d4 PUSH1 0x2
0x7d6 SWAP1
0x7d7 DIV
0x7d8 DUP1
0x7d9 PUSH1 0x1f
0x7db ADD
0x7dc PUSH1 0x20
0x7de DUP1
0x7df SWAP2
0x7e0 DIV
0x7e1 MUL
0x7e2 PUSH1 0x20
0x7e4 ADD
0x7e5 PUSH1 0x40
0x7e7 MLOAD
0x7e8 SWAP1
0x7e9 DUP2
0x7ea ADD
0x7eb PUSH1 0x40
0x7ed MSTORE
0x7ee DUP1
0x7ef SWAP3
0x7f0 SWAP2
0x7f1 SWAP1
0x7f2 DUP2
0x7f3 DUP2
0x7f4 MSTORE
0x7f5 PUSH1 0x20
0x7f7 ADD
0x7f8 DUP3
0x7f9 DUP1
0x7fa SLOAD
0x7fb PUSH1 0x1
0x7fd DUP2
0x7fe PUSH1 0x1
0x800 AND
0x801 ISZERO
0x802 PUSH2 0x100
0x805 MUL
0x806 SUB
0x807 AND
0x808 PUSH1 0x2
0x80a SWAP1
0x80b DIV
0x80c DUP1
0x80d ISZERO
0x80e PUSH2 0x858
0x811 JUMPI
---
0x7c2: JUMPDEST 
0x7c3: V734 = 0x1
0x7c6: V735 = S[0x1]
0x7c7: V736 = 0x1
0x7ca: V737 = 0x1
0x7cc: V738 = AND 0x1 V735
0x7cd: V739 = ISZERO V738
0x7ce: V740 = 0x100
0x7d1: V741 = MUL 0x100 V739
0x7d2: V742 = SUB V741 0x1
0x7d3: V743 = AND V742 V735
0x7d4: V744 = 0x2
0x7d7: V745 = DIV V743 0x2
0x7d9: V746 = 0x1f
0x7db: V747 = ADD 0x1f V745
0x7dc: V748 = 0x20
0x7e0: V749 = DIV V747 0x20
0x7e1: V750 = MUL V749 0x20
0x7e2: V751 = 0x20
0x7e4: V752 = ADD 0x20 V750
0x7e5: V753 = 0x40
0x7e7: V754 = M[0x40]
0x7ea: V755 = ADD V754 V752
0x7eb: V756 = 0x40
0x7ed: M[0x40] = V755
0x7f4: M[V754] = V745
0x7f5: V757 = 0x20
0x7f7: V758 = ADD 0x20 V754
0x7fa: V759 = S[0x1]
0x7fb: V760 = 0x1
0x7fe: V761 = 0x1
0x800: V762 = AND 0x1 V759
0x801: V763 = ISZERO V762
0x802: V764 = 0x100
0x805: V765 = MUL 0x100 V763
0x806: V766 = SUB V765 0x1
0x807: V767 = AND V766 V759
0x808: V768 = 0x2
0x80b: V769 = DIV V767 0x2
0x80d: V770 = ISZERO V769
0x80e: V771 = 0x858
0x811: JUMPI 0x858 V770
---
Entry stack: [V12, 0x1aa]
Stack pops: 0
Stack additions: [V754, 0x1, V745, V758, 0x1, V769]
Exit stack: [V12, 0x1aa, V754, 0x1, V745, V758, 0x1, V769]

================================

Block 0x812
[0x812:0x819]
---
Predecessors: [0x7c2]
Successors: [0x81a, 0x82d]
---
0x812 DUP1
0x813 PUSH1 0x1f
0x815 LT
0x816 PUSH2 0x82d
0x819 JUMPI
---
0x813: V772 = 0x1f
0x815: V773 = LT 0x1f V769
0x816: V774 = 0x82d
0x819: JUMPI 0x82d V773
---
Entry stack: [V12, 0x1aa, V754, 0x1, V745, V758, 0x1, V769]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1aa, V754, 0x1, V745, V758, 0x1, V769]

================================

Block 0x81a
[0x81a:0x82c]
---
Predecessors: [0x812]
Successors: [0x858]
---
0x81a PUSH2 0x100
0x81d DUP1
0x81e DUP4
0x81f SLOAD
0x820 DIV
0x821 MUL
0x822 DUP4
0x823 MSTORE
0x824 SWAP2
0x825 PUSH1 0x20
0x827 ADD
0x828 SWAP2
0x829 PUSH2 0x858
0x82c JUMP
---
0x81a: V775 = 0x100
0x81f: V776 = S[0x1]
0x820: V777 = DIV V776 0x100
0x821: V778 = MUL V777 0x100
0x823: M[V758] = V778
0x825: V779 = 0x20
0x827: V780 = ADD 0x20 V758
0x829: V781 = 0x858
0x82c: JUMP 0x858
---
Entry stack: [V12, 0x1aa, V754, 0x1, V745, V758, 0x1, V769]
Stack pops: 3
Stack additions: [V780, S1, S0]
Exit stack: [V12, 0x1aa, V754, 0x1, V745, V780, 0x1, V769]

================================

Block 0x82d
[0x82d:0x83a]
---
Predecessors: [0x812, 0xce0]
Successors: [0x83b]
---
0x82d JUMPDEST
0x82e DUP3
0x82f ADD
0x830 SWAP2
0x831 SWAP1
0x832 PUSH1 0x0
0x834 MSTORE
0x835 PUSH1 0x20
0x837 PUSH1 0x0
0x839 SHA3
0x83a SWAP1
---
0x82d: JUMPDEST 
0x82f: V782 = ADD S2 S0
0x832: V783 = 0x0
0x834: M[0x0] = {0x1, 0x2}
0x835: V784 = 0x20
0x837: V785 = 0x0
0x839: V786 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x1aa, S5, {0x1, 0x2}, S3, S2, {0x1, 0x2}, S0]
Stack pops: 3
Stack additions: [V782, V786, S2]
Exit stack: [V12, 0x1aa, S5, {0x1, 0x2}, S3, V782, V786, S2]

================================

Block 0x83b
[0x83b:0x84e]
---
Predecessors: [0x82d, 0x83b, 0xd09]
Successors: [0x83b, 0x84f]
---
0x83b JUMPDEST
0x83c DUP2
0x83d SLOAD
0x83e DUP2
0x83f MSTORE
0x840 SWAP1
0x841 PUSH1 0x1
0x843 ADD
0x844 SWAP1
0x845 PUSH1 0x20
0x847 ADD
0x848 DUP1
0x849 DUP4
0x84a GT
0x84b PUSH2 0x83b
0x84e JUMPI
---
0x83b: JUMPDEST 
0x83d: V787 = S[S1]
0x83f: M[S0] = V787
0x841: V788 = 0x1
0x843: V789 = ADD 0x1 S1
0x845: V790 = 0x20
0x847: V791 = ADD 0x20 S0
0x84a: V792 = GT S2 V791
0x84b: V793 = 0x83b
0x84e: JUMPI 0x83b V792
---
Entry stack: [V12, 0x1aa, S5, {0x1, 0x2}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V789, V791]
Exit stack: [V12, 0x1aa, S5, {0x1, 0x2}, S3, S2, V789, V791]

================================

Block 0x84f
[0x84f:0x857]
---
Predecessors: [0x83b]
Successors: [0x858]
---
0x84f DUP3
0x850 SWAP1
0x851 SUB
0x852 PUSH1 0x1f
0x854 AND
0x855 DUP3
0x856 ADD
0x857 SWAP2
---
0x851: V794 = SUB V791 S2
0x852: V795 = 0x1f
0x854: V796 = AND 0x1f V794
0x856: V797 = ADD S2 V796
---
Entry stack: [V12, 0x1aa, S5, {0x1, 0x2}, S3, S2, V789, V791]
Stack pops: 3
Stack additions: [V797, S1, S2]
Exit stack: [V12, 0x1aa, S5, {0x1, 0x2}, S3, V797, V789, S2]

================================

Block 0x858
[0x858:0x85f]
---
Predecessors: [0x7c2, 0x81a, 0x84f, 0xc90, 0xce8]
Successors: [0x1aa]
---
0x858 JUMPDEST
0x859 POP
0x85a POP
0x85b POP
0x85c POP
0x85d POP
0x85e DUP2
0x85f JUMP
---
0x858: JUMPDEST 
0x85f: JUMP 0x1aa
---
Entry stack: [V12, 0x1aa, S5, {0x1, 0x2}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x1aa, S5]

================================

Block 0x860
[0x860:0x8be]
---
Predecessors: [0x22d]
Successors: [0x8bf, 0x8c3]
---
0x860 JUMPDEST
0x861 PUSH1 0x0
0x863 SLOAD
0x864 PUSH1 0x1
0x866 PUSH1 0xa0
0x868 PUSH1 0x2
0x86a EXP
0x86b SUB
0x86c AND
0x86d PUSH4 0xe1f21c67
0x872 CALLER
0x873 DUP5
0x874 DUP5
0x875 PUSH1 0x40
0x877 MLOAD
0x878 PUSH1 0xe0
0x87a PUSH1 0x2
0x87c EXP
0x87d PUSH4 0xffffffff
0x882 DUP7
0x883 AND
0x884 MUL
0x885 DUP2
0x886 MSTORE
0x887 PUSH1 0x1
0x889 PUSH1 0xa0
0x88b PUSH1 0x2
0x88d EXP
0x88e SUB
0x88f SWAP4
0x890 DUP5
0x891 AND
0x892 PUSH1 0x4
0x894 DUP3
0x895 ADD
0x896 MSTORE
0x897 SWAP2
0x898 SWAP1
0x899 SWAP3
0x89a AND
0x89b PUSH1 0x24
0x89d DUP3
0x89e ADD
0x89f MSTORE
0x8a0 PUSH1 0x44
0x8a2 DUP2
0x8a3 ADD
0x8a4 SWAP2
0x8a5 SWAP1
0x8a6 SWAP2
0x8a7 MSTORE
0x8a8 PUSH1 0x64
0x8aa ADD
0x8ab PUSH1 0x0
0x8ad PUSH1 0x40
0x8af MLOAD
0x8b0 DUP1
0x8b1 DUP4
0x8b2 SUB
0x8b3 DUP2
0x8b4 PUSH1 0x0
0x8b6 DUP8
0x8b7 DUP1
0x8b8 EXTCODESIZE
0x8b9 ISZERO
0x8ba ISZERO
0x8bb PUSH2 0x8c3
0x8be JUMPI
---
0x860: JUMPDEST 
0x861: V798 = 0x0
0x863: V799 = S[0x0]
0x864: V800 = 0x1
0x866: V801 = 0xa0
0x868: V802 = 0x2
0x86a: V803 = EXP 0x2 0xa0
0x86b: V804 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86c: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff V799
0x86d: V806 = 0xe1f21c67
0x872: V807 = CALLER
0x875: V808 = 0x40
0x877: V809 = M[0x40]
0x878: V810 = 0xe0
0x87a: V811 = 0x2
0x87c: V812 = EXP 0x2 0xe0
0x87d: V813 = 0xffffffff
0x883: V814 = AND 0xe1f21c67 0xffffffff
0x884: V815 = MUL 0xe1f21c67 0x100000000000000000000000000000000000000000000000000000000
0x886: M[V809] = 0xe1f21c6700000000000000000000000000000000000000000000000000000000
0x887: V816 = 0x1
0x889: V817 = 0xa0
0x88b: V818 = 0x2
0x88d: V819 = EXP 0x2 0xa0
0x88e: V820 = SUB 0x10000000000000000000000000000000000000000 0x1
0x891: V821 = AND 0xffffffffffffffffffffffffffffffffffffffff V807
0x892: V822 = 0x4
0x895: V823 = ADD V809 0x4
0x896: M[V823] = V821
0x89a: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x89b: V825 = 0x24
0x89e: V826 = ADD V809 0x24
0x89f: M[V826] = V824
0x8a0: V827 = 0x44
0x8a3: V828 = ADD V809 0x44
0x8a7: M[V828] = V193
0x8a8: V829 = 0x64
0x8aa: V830 = ADD 0x64 V809
0x8ab: V831 = 0x0
0x8ad: V832 = 0x40
0x8af: V833 = M[0x40]
0x8b2: V834 = SUB V830 V833
0x8b4: V835 = 0x0
0x8b8: V836 = EXTCODESIZE V805
0x8b9: V837 = ISZERO V836
0x8ba: V838 = ISZERO V837
0x8bb: V839 = 0x8c3
0x8be: JUMPI 0x8c3 V838
---
Entry stack: [V12, 0x244, V191, V193]
Stack pops: 2
Stack additions: [S1, S0, V805, 0xe1f21c67, V830, 0x0, V833, V834, V833, 0x0, V805]
Exit stack: [V12, 0x244, V191, V193, V805, 0xe1f21c67, V830, 0x0, V833, V834, V833, 0x0, V805]

================================

Block 0x8bf
[0x8bf:0x8c2]
---
Predecessors: [0x860]
Successors: []
---
0x8bf PUSH1 0x0
0x8c1 DUP1
0x8c2 REVERT
---
0x8bf: V840 = 0x0
0x8c2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V191, V193, V805, 0xe1f21c67, V830, 0x0, V833, V834, V833, 0x0, V805]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V191, V193, V805, 0xe1f21c67, V830, 0x0, V833, V834, V833, 0x0, V805]

================================

Block 0x8c3
[0x8c3:0x8cf]
---
Predecessors: [0x860]
Successors: [0x8d0, 0x8d4]
---
0x8c3 JUMPDEST
0x8c4 PUSH2 0x2c6
0x8c7 GAS
0x8c8 SUB
0x8c9 CALL
0x8ca ISZERO
0x8cb ISZERO
0x8cc PUSH2 0x8d4
0x8cf JUMPI
---
0x8c3: JUMPDEST 
0x8c4: V841 = 0x2c6
0x8c7: V842 = GAS
0x8c8: V843 = SUB V842 0x2c6
0x8c9: V844 = CALL V843 V805 0x0 V833 V834 V833 0x0
0x8ca: V845 = ISZERO V844
0x8cb: V846 = ISZERO V845
0x8cc: V847 = 0x8d4
0x8cf: JUMPI 0x8d4 V846
---
Entry stack: [V12, 0x244, V191, V193, V805, 0xe1f21c67, V830, 0x0, V833, V834, V833, 0x0, V805]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x244, V191, V193, V805, 0xe1f21c67, V830]

================================

Block 0x8d0
[0x8d0:0x8d3]
---
Predecessors: [0x8c3]
Successors: []
---
0x8d0 PUSH1 0x0
0x8d2 DUP1
0x8d3 REVERT
---
0x8d0: V848 = 0x0
0x8d3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V191, V193, V805, 0xe1f21c67, V830]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V191, V193, V805, 0xe1f21c67, V830]

================================

Block 0x8d4
[0x8d4:0x91e]
---
Predecessors: [0x8c3]
Successors: [0x91f]
---
0x8d4 JUMPDEST
0x8d5 POP
0x8d6 POP
0x8d7 POP
0x8d8 DUP2
0x8d9 PUSH1 0x1
0x8db PUSH1 0xa0
0x8dd PUSH1 0x2
0x8df EXP
0x8e0 SUB
0x8e1 AND
0x8e2 CALLER
0x8e3 PUSH1 0x1
0x8e5 PUSH1 0xa0
0x8e7 PUSH1 0x2
0x8e9 EXP
0x8ea SUB
0x8eb AND
0x8ec PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x90d DUP4
0x90e PUSH1 0x40
0x910 MLOAD
0x911 SWAP1
0x912 DUP2
0x913 MSTORE
0x914 PUSH1 0x20
0x916 ADD
0x917 PUSH1 0x40
0x919 MLOAD
0x91a DUP1
0x91b SWAP2
0x91c SUB
0x91d SWAP1
0x91e LOG3
---
0x8d4: JUMPDEST 
0x8d9: V849 = 0x1
0x8db: V850 = 0xa0
0x8dd: V851 = 0x2
0x8df: V852 = EXP 0x2 0xa0
0x8e0: V853 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e1: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x8e2: V855 = CALLER
0x8e3: V856 = 0x1
0x8e5: V857 = 0xa0
0x8e7: V858 = 0x2
0x8e9: V859 = EXP 0x2 0xa0
0x8ea: V860 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8eb: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V855
0x8ec: V862 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x90e: V863 = 0x40
0x910: V864 = M[0x40]
0x913: M[V864] = V193
0x914: V865 = 0x20
0x916: V866 = ADD 0x20 V864
0x917: V867 = 0x40
0x919: V868 = M[0x40]
0x91c: V869 = SUB V866 V868
0x91e: LOG V868 V869 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V861 V854
---
Entry stack: [V12, 0x244, V191, V193, V805, 0xe1f21c67, V830]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V12, 0x244, V191, V193]

================================

Block 0x91f
[0x91f:0x922]
---
Predecessors: [0x8d4]
Successors: [0x244]
---
0x91f JUMPDEST
0x920 POP
0x921 POP
0x922 JUMP
---
0x91f: JUMPDEST 
0x922: JUMP 0x244
---
Entry stack: [V12, 0x244, V191, V193]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x923
[0x923:0x966]
---
Predecessors: [0x251]
Successors: [0x967, 0x96b]
---
0x923 JUMPDEST
0x924 PUSH1 0x0
0x926 DUP1
0x927 SLOAD
0x928 PUSH1 0x1
0x92a PUSH1 0xa0
0x92c PUSH1 0x2
0x92e EXP
0x92f SUB
0x930 AND
0x931 PUSH4 0x18160ddd
0x936 DUP3
0x937 PUSH1 0x40
0x939 MLOAD
0x93a PUSH1 0x20
0x93c ADD
0x93d MSTORE
0x93e PUSH1 0x40
0x940 MLOAD
0x941 DUP2
0x942 PUSH4 0xffffffff
0x947 AND
0x948 PUSH1 0xe0
0x94a PUSH1 0x2
0x94c EXP
0x94d MUL
0x94e DUP2
0x94f MSTORE
0x950 PUSH1 0x4
0x952 ADD
0x953 PUSH1 0x20
0x955 PUSH1 0x40
0x957 MLOAD
0x958 DUP1
0x959 DUP4
0x95a SUB
0x95b DUP2
0x95c PUSH1 0x0
0x95e DUP8
0x95f DUP1
0x960 EXTCODESIZE
0x961 ISZERO
0x962 ISZERO
0x963 PUSH2 0x96b
0x966 JUMPI
---
0x923: JUMPDEST 
0x924: V870 = 0x0
0x927: V871 = S[0x0]
0x928: V872 = 0x1
0x92a: V873 = 0xa0
0x92c: V874 = 0x2
0x92e: V875 = EXP 0x2 0xa0
0x92f: V876 = SUB 0x10000000000000000000000000000000000000000 0x1
0x930: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff V871
0x931: V878 = 0x18160ddd
0x937: V879 = 0x40
0x939: V880 = M[0x40]
0x93a: V881 = 0x20
0x93c: V882 = ADD 0x20 V880
0x93d: M[V882] = 0x0
0x93e: V883 = 0x40
0x940: V884 = M[0x40]
0x942: V885 = 0xffffffff
0x947: V886 = AND 0xffffffff 0x18160ddd
0x948: V887 = 0xe0
0x94a: V888 = 0x2
0x94c: V889 = EXP 0x2 0xe0
0x94d: V890 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0x94f: M[V884] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x950: V891 = 0x4
0x952: V892 = ADD 0x4 V884
0x953: V893 = 0x20
0x955: V894 = 0x40
0x957: V895 = M[0x40]
0x95a: V896 = SUB V892 V895
0x95c: V897 = 0x0
0x960: V898 = EXTCODESIZE V877
0x961: V899 = ISZERO V898
0x962: V900 = ISZERO V899
0x963: V901 = 0x96b
0x966: JUMPI 0x96b V900
---
Entry stack: [V12, 0x259]
Stack pops: 0
Stack additions: [0x0, V877, 0x18160ddd, V892, 0x20, V895, V896, V895, 0x0, V877]
Exit stack: [V12, 0x259, 0x0, V877, 0x18160ddd, V892, 0x20, V895, V896, V895, 0x0, V877]

================================

Block 0x967
[0x967:0x96a]
---
Predecessors: [0x923]
Successors: []
---
0x967 PUSH1 0x0
0x969 DUP1
0x96a REVERT
---
0x967: V902 = 0x0
0x96a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x259, 0x0, V877, 0x18160ddd, V892, 0x20, V895, V896, V895, 0x0, V877]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x259, 0x0, V877, 0x18160ddd, V892, 0x20, V895, V896, V895, 0x0, V877]

================================

Block 0x96b
[0x96b:0x977]
---
Predecessors: [0x923, 0x98b, 0xa86, 0xb80, 0xf3b]
Successors: [0x978, 0x97c]
---
0x96b JUMPDEST
0x96c PUSH2 0x2c6
0x96f GAS
0x970 SUB
0x971 CALL
0x972 ISZERO
0x973 ISZERO
0x974 PUSH2 0x97c
0x977 JUMPI
---
0x96b: JUMPDEST 
0x96c: V903 = 0x2c6
0x96f: V904 = GAS
0x970: V905 = SUB V904 0x2c6
0x971: V906 = CALL V905 S0 0x0 S2 S3 S4 0x20
0x972: V907 = ISZERO V906
0x973: V908 = ISZERO V907
0x974: V909 = 0x97c
0x977: JUMPI 0x97c V908
---
Entry stack: [V12, 0x259, 0x0, S8, {0x18160ddd, 0x1e93c209, 0x40695363, 0x753ed1bd, 0xbabd7012}, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x259, 0x0, S8, {0x18160ddd, 0x1e93c209, 0x40695363, 0x753ed1bd, 0xbabd7012}, S6]

================================

Block 0x978
[0x978:0x97b]
---
Predecessors: [0x96b]
Successors: []
---
0x978 PUSH1 0x0
0x97a DUP1
0x97b REVERT
---
0x978: V910 = 0x0
0x97b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x259, 0x0, S2, {0x18160ddd, 0x1e93c209, 0x40695363, 0x753ed1bd, 0xbabd7012}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x259, 0x0, S2, {0x18160ddd, 0x1e93c209, 0x40695363, 0x753ed1bd, 0xbabd7012}, S0]

================================

Block 0x97c
[0x97c:0x987]
---
Predecessors: [0x96b, 0x9d3, 0xace, 0xbc8, 0xf83]
Successors: [0x988]
---
0x97c JUMPDEST
0x97d POP
0x97e POP
0x97f POP
0x980 PUSH1 0x40
0x982 MLOAD
0x983 DUP1
0x984 MLOAD
0x985 SWAP2
0x986 POP
0x987 POP
---
0x97c: JUMPDEST 
0x980: V911 = 0x40
0x982: V912 = M[0x40]
0x984: V913 = M[V912]
---
Entry stack: [V12, 0x259, 0x0, S2, {0x18160ddd, 0x1e93c209, 0x40695363, 0x753ed1bd, 0xbabd7012}, S0]
Stack pops: 4
Stack additions: [V913]
Exit stack: [V12, 0x259, V913]

================================

Block 0x988
[0x988:0x98a]
---
Predecessors: [0x97c]
Successors: [0x259]
---
0x988 JUMPDEST
0x989 SWAP1
0x98a JUMP
---
0x988: JUMPDEST 
0x98a: JUMP 0x259
---
Entry stack: [V12, 0x259, V913]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V913]

================================

Block 0x98b
[0x98b:0x9ce]
---
Predecessors: [0x276]
Successors: [0x96b, 0x9cf]
---
0x98b JUMPDEST
0x98c PUSH1 0x0
0x98e DUP1
0x98f SLOAD
0x990 PUSH1 0x1
0x992 PUSH1 0xa0
0x994 PUSH1 0x2
0x996 EXP
0x997 SUB
0x998 AND
0x999 PUSH4 0x1e93c209
0x99e DUP3
0x99f PUSH1 0x40
0x9a1 MLOAD
0x9a2 PUSH1 0x20
0x9a4 ADD
0x9a5 MSTORE
0x9a6 PUSH1 0x40
0x9a8 MLOAD
0x9a9 DUP2
0x9aa PUSH4 0xffffffff
0x9af AND
0x9b0 PUSH1 0xe0
0x9b2 PUSH1 0x2
0x9b4 EXP
0x9b5 MUL
0x9b6 DUP2
0x9b7 MSTORE
0x9b8 PUSH1 0x4
0x9ba ADD
0x9bb PUSH1 0x20
0x9bd PUSH1 0x40
0x9bf MLOAD
0x9c0 DUP1
0x9c1 DUP4
0x9c2 SUB
0x9c3 DUP2
0x9c4 PUSH1 0x0
0x9c6 DUP8
0x9c7 DUP1
0x9c8 EXTCODESIZE
0x9c9 ISZERO
0x9ca ISZERO
0x9cb PUSH2 0x96b
0x9ce JUMPI
---
0x98b: JUMPDEST 
0x98c: V914 = 0x0
0x98f: V915 = S[0x0]
0x990: V916 = 0x1
0x992: V917 = 0xa0
0x994: V918 = 0x2
0x996: V919 = EXP 0x2 0xa0
0x997: V920 = SUB 0x10000000000000000000000000000000000000000 0x1
0x998: V921 = AND 0xffffffffffffffffffffffffffffffffffffffff V915
0x999: V922 = 0x1e93c209
0x99f: V923 = 0x40
0x9a1: V924 = M[0x40]
0x9a2: V925 = 0x20
0x9a4: V926 = ADD 0x20 V924
0x9a5: M[V926] = 0x0
0x9a6: V927 = 0x40
0x9a8: V928 = M[0x40]
0x9aa: V929 = 0xffffffff
0x9af: V930 = AND 0xffffffff 0x1e93c209
0x9b0: V931 = 0xe0
0x9b2: V932 = 0x2
0x9b4: V933 = EXP 0x2 0xe0
0x9b5: V934 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1e93c209
0x9b7: M[V928] = 0x1e93c20900000000000000000000000000000000000000000000000000000000
0x9b8: V935 = 0x4
0x9ba: V936 = ADD 0x4 V928
0x9bb: V937 = 0x20
0x9bd: V938 = 0x40
0x9bf: V939 = M[0x40]
0x9c2: V940 = SUB V936 V939
0x9c4: V941 = 0x0
0x9c8: V942 = EXTCODESIZE V921
0x9c9: V943 = ISZERO V942
0x9ca: V944 = ISZERO V943
0x9cb: V945 = 0x96b
0x9ce: JUMPI 0x96b V944
---
Entry stack: [V12, 0x259]
Stack pops: 0
Stack additions: [0x0, V921, 0x1e93c209, V936, 0x20, V939, V940, V939, 0x0, V921]
Exit stack: [V12, 0x259, 0x0, V921, 0x1e93c209, V936, 0x20, V939, V940, V939, 0x0, V921]

================================

Block 0x9cf
[0x9cf:0x9d2]
---
Predecessors: [0x98b]
Successors: []
---
0x9cf PUSH1 0x0
0x9d1 DUP1
0x9d2 REVERT
---
0x9cf: V946 = 0x0
0x9d2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x259, 0x0, V921, 0x1e93c209, V936, 0x20, V939, V940, V939, 0x0, V921]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x259, 0x0, V921, 0x1e93c209, V936, 0x20, V939, V940, V939, 0x0, V921]

================================

Block 0x9d3
[0x9d3:0x9df]
---
Predecessors: []
Successors: [0x97c, 0x9e0]
---
0x9d3 JUMPDEST
0x9d4 PUSH2 0x2c6
0x9d7 GAS
0x9d8 SUB
0x9d9 CALL
0x9da ISZERO
0x9db ISZERO
0x9dc PUSH2 0x97c
0x9df JUMPI
---
0x9d3: JUMPDEST 
0x9d4: V947 = 0x2c6
0x9d7: V948 = GAS
0x9d8: V949 = SUB V948 0x2c6
0x9d9: V950 = CALL V949 S0 S1 S2 S3 S4 S5
0x9da: V951 = ISZERO V950
0x9db: V952 = ISZERO V951
0x9dc: V953 = 0x97c
0x9df: JUMPI 0x97c V952
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x9e0
[0x9e0:0x9ef]
---
Predecessors: [0x9d3]
Successors: [0x9f0]
---
0x9e0 PUSH1 0x0
0x9e2 DUP1
0x9e3 REVERT
0x9e4 JUMPDEST
0x9e5 POP
0x9e6 POP
0x9e7 POP
0x9e8 PUSH1 0x40
0x9ea MLOAD
0x9eb DUP1
0x9ec MLOAD
0x9ed SWAP2
0x9ee POP
0x9ef POP
---
0x9e0: V954 = 0x0
0x9e3: REVERT 0x0 0x0
0x9e4: JUMPDEST 
0x9e8: V955 = 0x40
0x9ea: V956 = M[0x40]
0x9ec: V957 = M[V956]
---
Entry stack: []
Stack pops: 0
Stack additions: [V957]
Exit stack: []

================================

Block 0x9f0
[0x9f0:0x9f2]
---
Predecessors: [0x9e0]
Successors: []
Has unresolved jump.
---
0x9f0 JUMPDEST
0x9f1 SWAP1
0x9f2 JUMP
---
0x9f0: JUMPDEST 
0x9f2: JUMP S1
---
Entry stack: [V957]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V957]

================================

Block 0x9f3
[0x9f3:0x9fc]
---
Predecessors: [0x29b]
Successors: [0x1388]
---
0x9f3 JUMPDEST
0x9f4 PUSH1 0x0
0x9f6 PUSH2 0x9fd
0x9f9 PUSH2 0x1388
0x9fc JUMP
---
0x9f3: JUMPDEST 
0x9f4: V958 = 0x0
0x9f6: V959 = 0x9fd
0x9f9: V960 = 0x1388
0x9fc: JUMP 0x1388
---
Entry stack: [V12, 0x2b8, V233, V236, V238]
Stack pops: 0
Stack additions: [0x0, 0x9fd]
Exit stack: [V12, 0x2b8, V233, V236, V238, 0x0, 0x9fd]

================================

Block 0x9fd
[0x9fd:0xa08]
---
Predecessors: [0x1388]
Successors: [0xdfa]
---
0x9fd JUMPDEST
0x9fe PUSH2 0xa09
0xa01 DUP6
0xa02 DUP6
0xa03 DUP6
0xa04 DUP5
0xa05 PUSH2 0xdfa
0xa08 JUMP
---
0x9fd: JUMPDEST 
0x9fe: V961 = 0xa09
0xa05: V962 = 0xdfa
0xa08: JUMP 0xdfa
---
Entry stack: [V12, S5, S4, S3, S2, S1, V1912]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0xa09, S4, S3, S2, S0]
Exit stack: [V12, S5, S4, S3, S2, S1, V1912, 0xa09, S4, S3, S2, V1912]

================================

Block 0xa09
[0xa09:0xa0b]
---
Predecessors: [0xf33]
Successors: [0xa0c]
---
0xa09 JUMPDEST
0xa0a SWAP2
0xa0b POP
---
0xa09: JUMPDEST 
---
Entry stack: [V12, 0x2b8, S5, S4, S3, S2, S1, 0x1]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V12, 0x2b8, S5, S4, S3, 0x1, S1]

================================

Block 0xa0c
[0xa0c:0xa13]
---
Predecessors: [0xa09]
Successors: [0x2b8]
---
0xa0c JUMPDEST
0xa0d POP
0xa0e SWAP4
0xa0f SWAP3
0xa10 POP
0xa11 POP
0xa12 POP
0xa13 JUMP
---
0xa0c: JUMPDEST 
0xa13: JUMP 0x2b8
---
Entry stack: [V12, 0x2b8, S4, S3, S2, 0x1, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V12, 0x1]

================================

Block 0xa14
[0xa14:0xa19]
---
Predecessors: [0x2d7]
Successors: [0x259]
---
0xa14 JUMPDEST
0xa15 PUSH1 0x3
0xa17 SLOAD
0xa18 DUP2
0xa19 JUMP
---
0xa14: JUMPDEST 
0xa15: V963 = 0x3
0xa17: V964 = S[0x3]
0xa19: JUMP 0x259
---
Entry stack: [V12, 0x259]
Stack pops: 1
Stack additions: [S0, V964]
Exit stack: [V12, 0x259, V964]

================================

Block 0xa1a
[0xa1a:0xa21]
---
Predecessors: [0x2fc]
Successors: [0x1388]
---
0xa1a JUMPDEST
0xa1b PUSH2 0xa22
0xa1e PUSH2 0x1388
0xa21 JUMP
---
0xa1a: JUMPDEST 
0xa1b: V965 = 0xa22
0xa1e: V966 = 0x1388
0xa21: JUMP 0x1388
---
Entry stack: [V12, 0x244, V274, V277, V279]
Stack pops: 0
Stack additions: [0xa22]
Exit stack: [V12, 0x244, V274, V277, V279, 0xa22]

================================

Block 0xa22
[0xa22:0xa38]
---
Predecessors: [0x1388]
Successors: [0xa39, 0xa3d]
---
0xa22 JUMPDEST
0xa23 PUSH1 0x0
0xa25 SLOAD
0xa26 CALLER
0xa27 PUSH1 0x1
0xa29 PUSH1 0xa0
0xa2b PUSH1 0x2
0xa2d EXP
0xa2e SUB
0xa2f SWAP1
0xa30 DUP2
0xa31 AND
0xa32 SWAP2
0xa33 AND
0xa34 EQ
0xa35 PUSH2 0xa3d
0xa38 JUMPI
---
0xa22: JUMPDEST 
0xa23: V967 = 0x0
0xa25: V968 = S[0x0]
0xa26: V969 = CALLER
0xa27: V970 = 0x1
0xa29: V971 = 0xa0
0xa2b: V972 = 0x2
0xa2d: V973 = EXP 0x2 0xa0
0xa2e: V974 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa31: V975 = AND 0xffffffffffffffffffffffffffffffffffffffff V969
0xa33: V976 = AND V968 0xffffffffffffffffffffffffffffffffffffffff
0xa34: V977 = EQ V976 V975
0xa35: V978 = 0xa3d
0xa38: JUMPI 0xa3d V977
---
Entry stack: [V12, S5, S4, S3, S2, S1, V1912]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, V1912]

================================

Block 0xa39
[0xa39:0xa3c]
---
Predecessors: [0xa22]
Successors: []
---
0xa39 PUSH1 0x0
0xa3b DUP1
0xa3c REVERT
---
0xa39: V979 = 0x0
0xa3c: REVERT 0x0 0x0
---
Entry stack: [V12, S5, S4, S3, S2, S1, V1912]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, V1912]

================================

Block 0xa3d
[0xa3d:0xa48]
---
Predecessors: [0xa22]
Successors: [0x128f]
---
0xa3d JUMPDEST
0xa3e PUSH2 0xa49
0xa41 DUP5
0xa42 DUP5
0xa43 DUP5
0xa44 DUP5
0xa45 PUSH2 0x128f
0xa48 JUMP
---
0xa3d: JUMPDEST 
0xa3e: V980 = 0xa49
0xa45: V981 = 0x128f
0xa48: JUMP 0x128f
---
Entry stack: [V12, S5, S4, S3, S2, S1, V1912]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xa49, S3, S2, S1, S0]
Exit stack: [V12, S5, S4, S3, S2, S1, V1912, 0xa49, S3, S2, S1, V1912]

================================

Block 0xa49
[0xa49:0xa7e]
---
Predecessors: [0x1380]
Successors: [0xa7f]
---
0xa49 JUMPDEST
0xa4a DUP3
0xa4b PUSH1 0x1
0xa4d PUSH1 0xa0
0xa4f PUSH1 0x2
0xa51 EXP
0xa52 SUB
0xa53 AND
0xa54 DUP5
0xa55 PUSH1 0x1
0xa57 PUSH1 0xa0
0xa59 PUSH1 0x2
0xa5b EXP
0xa5c SUB
0xa5d AND
0xa5e PUSH1 0x0
0xa60 DUP1
0xa61 MLOAD
0xa62 PUSH1 0x20
0xa64 PUSH2 0x139b
0xa67 DUP4
0xa68 CODECOPY
0xa69 DUP2
0xa6a MLOAD
0xa6b SWAP2
0xa6c MSTORE
0xa6d DUP5
0xa6e PUSH1 0x40
0xa70 MLOAD
0xa71 SWAP1
0xa72 DUP2
0xa73 MSTORE
0xa74 PUSH1 0x20
0xa76 ADD
0xa77 PUSH1 0x40
0xa79 MLOAD
0xa7a DUP1
0xa7b SWAP2
0xa7c SUB
0xa7d SWAP1
0xa7e LOG3
---
0xa49: JUMPDEST 
0xa4b: V982 = 0x1
0xa4d: V983 = 0xa0
0xa4f: V984 = 0x2
0xa51: V985 = EXP 0x2 0xa0
0xa52: V986 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa53: V987 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa55: V988 = 0x1
0xa57: V989 = 0xa0
0xa59: V990 = 0x2
0xa5b: V991 = EXP 0x2 0xa0
0xa5c: V992 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5d: V993 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa5e: V994 = 0x0
0xa61: V995 = M[0x0]
0xa62: V996 = 0x20
0xa64: V997 = 0x139b
0xa68: CODECOPY 0x0 0x139b 0x20
0xa6a: V998 = M[0x0]
0xa6c: M[0x0] = V995
0xa6e: V999 = 0x40
0xa70: V1000 = M[0x40]
0xa73: M[V1000] = S1
0xa74: V1001 = 0x20
0xa76: V1002 = ADD 0x20 V1000
0xa77: V1003 = 0x40
0xa79: V1004 = M[0x40]
0xa7c: V1005 = SUB V1002 V1004
0xa7e: LOG V1004 V1005 V998 V993 V987
---
Entry stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa7f
[0xa7f:0xa7f]
---
Predecessors: [0xa49, 0xdc3]
Successors: [0xa80]
---
0xa7f JUMPDEST
---
0xa7f: JUMPDEST 
---
Entry stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa80
[0xa80:0xa85]
---
Predecessors: [0xa7f]
Successors: [0x244, 0xafb]
---
0xa80 JUMPDEST
0xa81 POP
0xa82 POP
0xa83 POP
0xa84 POP
0xa85 JUMP
---
0xa80: JUMPDEST 
0xa85: JUMP S4
---
Entry stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5]

================================

Block 0xa86
[0xa86:0xac9]
---
Predecessors: [0x326]
Successors: [0x96b, 0xaca]
---
0xa86 JUMPDEST
0xa87 PUSH1 0x0
0xa89 DUP1
0xa8a SLOAD
0xa8b PUSH1 0x1
0xa8d PUSH1 0xa0
0xa8f PUSH1 0x2
0xa91 EXP
0xa92 SUB
0xa93 AND
0xa94 PUSH4 0x40695363
0xa99 DUP3
0xa9a PUSH1 0x40
0xa9c MLOAD
0xa9d PUSH1 0x20
0xa9f ADD
0xaa0 MSTORE
0xaa1 PUSH1 0x40
0xaa3 MLOAD
0xaa4 DUP2
0xaa5 PUSH4 0xffffffff
0xaaa AND
0xaab PUSH1 0xe0
0xaad PUSH1 0x2
0xaaf EXP
0xab0 MUL
0xab1 DUP2
0xab2 MSTORE
0xab3 PUSH1 0x4
0xab5 ADD
0xab6 PUSH1 0x20
0xab8 PUSH1 0x40
0xaba MLOAD
0xabb DUP1
0xabc DUP4
0xabd SUB
0xabe DUP2
0xabf PUSH1 0x0
0xac1 DUP8
0xac2 DUP1
0xac3 EXTCODESIZE
0xac4 ISZERO
0xac5 ISZERO
0xac6 PUSH2 0x96b
0xac9 JUMPI
---
0xa86: JUMPDEST 
0xa87: V1006 = 0x0
0xa8a: V1007 = S[0x0]
0xa8b: V1008 = 0x1
0xa8d: V1009 = 0xa0
0xa8f: V1010 = 0x2
0xa91: V1011 = EXP 0x2 0xa0
0xa92: V1012 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa93: V1013 = AND 0xffffffffffffffffffffffffffffffffffffffff V1007
0xa94: V1014 = 0x40695363
0xa9a: V1015 = 0x40
0xa9c: V1016 = M[0x40]
0xa9d: V1017 = 0x20
0xa9f: V1018 = ADD 0x20 V1016
0xaa0: M[V1018] = 0x0
0xaa1: V1019 = 0x40
0xaa3: V1020 = M[0x40]
0xaa5: V1021 = 0xffffffff
0xaaa: V1022 = AND 0xffffffff 0x40695363
0xaab: V1023 = 0xe0
0xaad: V1024 = 0x2
0xaaf: V1025 = EXP 0x2 0xe0
0xab0: V1026 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x40695363
0xab2: M[V1020] = 0x4069536300000000000000000000000000000000000000000000000000000000
0xab3: V1027 = 0x4
0xab5: V1028 = ADD 0x4 V1020
0xab6: V1029 = 0x20
0xab8: V1030 = 0x40
0xaba: V1031 = M[0x40]
0xabd: V1032 = SUB V1028 V1031
0xabf: V1033 = 0x0
0xac3: V1034 = EXTCODESIZE V1013
0xac4: V1035 = ISZERO V1034
0xac5: V1036 = ISZERO V1035
0xac6: V1037 = 0x96b
0xac9: JUMPI 0x96b V1036
---
Entry stack: [V12, 0x259]
Stack pops: 0
Stack additions: [0x0, V1013, 0x40695363, V1028, 0x20, V1031, V1032, V1031, 0x0, V1013]
Exit stack: [V12, 0x259, 0x0, V1013, 0x40695363, V1028, 0x20, V1031, V1032, V1031, 0x0, V1013]

================================

Block 0xaca
[0xaca:0xacd]
---
Predecessors: [0xa86]
Successors: []
---
0xaca PUSH1 0x0
0xacc DUP1
0xacd REVERT
---
0xaca: V1038 = 0x0
0xacd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x259, 0x0, V1013, 0x40695363, V1028, 0x20, V1031, V1032, V1031, 0x0, V1013]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x259, 0x0, V1013, 0x40695363, V1028, 0x20, V1031, V1032, V1031, 0x0, V1013]

================================

Block 0xace
[0xace:0xada]
---
Predecessors: []
Successors: [0x97c, 0xadb]
---
0xace JUMPDEST
0xacf PUSH2 0x2c6
0xad2 GAS
0xad3 SUB
0xad4 CALL
0xad5 ISZERO
0xad6 ISZERO
0xad7 PUSH2 0x97c
0xada JUMPI
---
0xace: JUMPDEST 
0xacf: V1039 = 0x2c6
0xad2: V1040 = GAS
0xad3: V1041 = SUB V1040 0x2c6
0xad4: V1042 = CALL V1041 S0 S1 S2 S3 S4 S5
0xad5: V1043 = ISZERO V1042
0xad6: V1044 = ISZERO V1043
0xad7: V1045 = 0x97c
0xada: JUMPI 0x97c V1044
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xadb
[0xadb:0xaea]
---
Predecessors: [0xace]
Successors: [0xaeb]
---
0xadb PUSH1 0x0
0xadd DUP1
0xade REVERT
0xadf JUMPDEST
0xae0 POP
0xae1 POP
0xae2 POP
0xae3 PUSH1 0x40
0xae5 MLOAD
0xae6 DUP1
0xae7 MLOAD
0xae8 SWAP2
0xae9 POP
0xaea POP
---
0xadb: V1046 = 0x0
0xade: REVERT 0x0 0x0
0xadf: JUMPDEST 
0xae3: V1047 = 0x40
0xae5: V1048 = M[0x40]
0xae7: V1049 = M[V1048]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1049]
Exit stack: []

================================

Block 0xaeb
[0xaeb:0xaed]
---
Predecessors: [0xadb]
Successors: []
Has unresolved jump.
---
0xaeb JUMPDEST
0xaec SWAP1
0xaed JUMP
---
0xaeb: JUMPDEST 
0xaed: JUMP S1
---
Entry stack: [V1049]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V1049]

================================

Block 0xaee
[0xaee:0xafa]
---
Predecessors: [0x34b]
Successors: [0xfa3]
---
0xaee JUMPDEST
0xaef PUSH1 0x0
0xaf1 PUSH2 0xafb
0xaf4 DUP5
0xaf5 DUP5
0xaf6 DUP5
0xaf7 PUSH2 0xfa3
0xafa JUMP
---
0xaee: JUMPDEST 
0xaef: V1050 = 0x0
0xaf1: V1051 = 0xafb
0xaf7: V1052 = 0xfa3
0xafa: JUMP 0xfa3
---
Entry stack: [V12, 0x2b8, V306, V308, V322]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0xafb, S2, S1, S0]
Exit stack: [V12, 0x2b8, V306, V308, V322, 0x0, 0xafb, V306, V308, V322]

================================

Block 0xafb
[0xafb:0xafd]
---
Predecessors: [0xa80, 0x10e6]
Successors: [0xafe]
---
0xafb JUMPDEST
0xafc SWAP1
0xafd POP
---
0xafb: JUMPDEST 
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xafe
[0xafe:0xb04]
---
Predecessors: [0xafb]
Successors: [0x2b8]
---
0xafe JUMPDEST
0xaff SWAP4
0xb00 SWAP3
0xb01 POP
0xb02 POP
0xb03 POP
0xb04 JUMP
---
0xafe: JUMPDEST 
0xb04: JUMP S4
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, S6, S5, S0]

================================

Block 0xb05
[0xb05:0xb59]
---
Predecessors: [0x3c4]
Successors: [0xb5a, 0xb5e]
---
0xb05 JUMPDEST
0xb06 PUSH1 0x0
0xb08 DUP1
0xb09 SLOAD
0xb0a PUSH1 0x1
0xb0c PUSH1 0xa0
0xb0e PUSH1 0x2
0xb10 EXP
0xb11 SUB
0xb12 AND
0xb13 PUSH4 0x9ab95202
0xb18 DUP4
0xb19 DUP4
0xb1a PUSH1 0x40
0xb1c MLOAD
0xb1d PUSH1 0x20
0xb1f ADD
0xb20 MSTORE
0xb21 PUSH1 0x40
0xb23 MLOAD
0xb24 PUSH1 0xe0
0xb26 PUSH1 0x2
0xb28 EXP
0xb29 PUSH4 0xffffffff
0xb2e DUP5
0xb2f AND
0xb30 MUL
0xb31 DUP2
0xb32 MSTORE
0xb33 PUSH1 0x1
0xb35 PUSH1 0xa0
0xb37 PUSH1 0x2
0xb39 EXP
0xb3a SUB
0xb3b SWAP1
0xb3c SWAP2
0xb3d AND
0xb3e PUSH1 0x4
0xb40 DUP3
0xb41 ADD
0xb42 MSTORE
0xb43 PUSH1 0x24
0xb45 ADD
0xb46 PUSH1 0x20
0xb48 PUSH1 0x40
0xb4a MLOAD
0xb4b DUP1
0xb4c DUP4
0xb4d SUB
0xb4e DUP2
0xb4f PUSH1 0x0
0xb51 DUP8
0xb52 DUP1
0xb53 EXTCODESIZE
0xb54 ISZERO
0xb55 ISZERO
0xb56 PUSH2 0xb5e
0xb59 JUMPI
---
0xb05: JUMPDEST 
0xb06: V1053 = 0x0
0xb09: V1054 = S[0x0]
0xb0a: V1055 = 0x1
0xb0c: V1056 = 0xa0
0xb0e: V1057 = 0x2
0xb10: V1058 = EXP 0x2 0xa0
0xb11: V1059 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb12: V1060 = AND 0xffffffffffffffffffffffffffffffffffffffff V1054
0xb13: V1061 = 0x9ab95202
0xb1a: V1062 = 0x40
0xb1c: V1063 = M[0x40]
0xb1d: V1064 = 0x20
0xb1f: V1065 = ADD 0x20 V1063
0xb20: M[V1065] = 0x0
0xb21: V1066 = 0x40
0xb23: V1067 = M[0x40]
0xb24: V1068 = 0xe0
0xb26: V1069 = 0x2
0xb28: V1070 = EXP 0x2 0xe0
0xb29: V1071 = 0xffffffff
0xb2f: V1072 = AND 0x9ab95202 0xffffffff
0xb30: V1073 = MUL 0x9ab95202 0x100000000000000000000000000000000000000000000000000000000
0xb32: M[V1067] = 0x9ab9520200000000000000000000000000000000000000000000000000000000
0xb33: V1074 = 0x1
0xb35: V1075 = 0xa0
0xb37: V1076 = 0x2
0xb39: V1077 = EXP 0x2 0xa0
0xb3a: V1078 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3d: V1079 = AND V349 0xffffffffffffffffffffffffffffffffffffffff
0xb3e: V1080 = 0x4
0xb41: V1081 = ADD V1067 0x4
0xb42: M[V1081] = V1079
0xb43: V1082 = 0x24
0xb45: V1083 = ADD 0x24 V1067
0xb46: V1084 = 0x20
0xb48: V1085 = 0x40
0xb4a: V1086 = M[0x40]
0xb4d: V1087 = SUB V1083 V1086
0xb4f: V1088 = 0x0
0xb53: V1089 = EXTCODESIZE V1060
0xb54: V1090 = ISZERO V1089
0xb55: V1091 = ISZERO V1090
0xb56: V1092 = 0xb5e
0xb59: JUMPI 0xb5e V1091
---
Entry stack: [V12, 0x259, V349]
Stack pops: 1
Stack additions: [S0, 0x0, V1060, 0x9ab95202, V1083, 0x20, V1086, V1087, V1086, 0x0, V1060]
Exit stack: [V12, 0x259, V349, 0x0, V1060, 0x9ab95202, V1083, 0x20, V1086, V1087, V1086, 0x0, V1060]

================================

Block 0xb5a
[0xb5a:0xb5d]
---
Predecessors: [0xb05]
Successors: []
---
0xb5a PUSH1 0x0
0xb5c DUP1
0xb5d REVERT
---
0xb5a: V1093 = 0x0
0xb5d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x259, V349, 0x0, V1060, 0x9ab95202, V1083, 0x20, V1086, V1087, V1086, 0x0, V1060]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x259, V349, 0x0, V1060, 0x9ab95202, V1083, 0x20, V1086, V1087, V1086, 0x0, V1060]

================================

Block 0xb5e
[0xb5e:0xb6a]
---
Predecessors: [0xb05]
Successors: [0xb6b, 0xb6f]
---
0xb5e JUMPDEST
0xb5f PUSH2 0x2c6
0xb62 GAS
0xb63 SUB
0xb64 CALL
0xb65 ISZERO
0xb66 ISZERO
0xb67 PUSH2 0xb6f
0xb6a JUMPI
---
0xb5e: JUMPDEST 
0xb5f: V1094 = 0x2c6
0xb62: V1095 = GAS
0xb63: V1096 = SUB V1095 0x2c6
0xb64: V1097 = CALL V1096 V1060 0x0 V1086 V1087 V1086 0x20
0xb65: V1098 = ISZERO V1097
0xb66: V1099 = ISZERO V1098
0xb67: V1100 = 0xb6f
0xb6a: JUMPI 0xb6f V1099
---
Entry stack: [V12, 0x259, V349, 0x0, V1060, 0x9ab95202, V1083, 0x20, V1086, V1087, V1086, 0x0, V1060]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x259, V349, 0x0, V1060, 0x9ab95202, V1083]

================================

Block 0xb6b
[0xb6b:0xb6e]
---
Predecessors: [0xb5e]
Successors: []
---
0xb6b PUSH1 0x0
0xb6d DUP1
0xb6e REVERT
---
0xb6b: V1101 = 0x0
0xb6e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x259, V349, 0x0, V1060, 0x9ab95202, V1083]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x259, V349, 0x0, V1060, 0x9ab95202, V1083]

================================

Block 0xb6f
[0xb6f:0xb7a]
---
Predecessors: [0xb5e]
Successors: [0xb7b]
---
0xb6f JUMPDEST
0xb70 POP
0xb71 POP
0xb72 POP
0xb73 PUSH1 0x40
0xb75 MLOAD
0xb76 DUP1
0xb77 MLOAD
0xb78 SWAP2
0xb79 POP
0xb7a POP
---
0xb6f: JUMPDEST 
0xb73: V1102 = 0x40
0xb75: V1103 = M[0x40]
0xb77: V1104 = M[V1103]
---
Entry stack: [V12, 0x259, V349, 0x0, V1060, 0x9ab95202, V1083]
Stack pops: 4
Stack additions: [V1104]
Exit stack: [V12, 0x259, V349, V1104]

================================

Block 0xb7b
[0xb7b:0xb7f]
---
Predecessors: [0xb6f]
Successors: [0x259]
---
0xb7b JUMPDEST
0xb7c SWAP2
0xb7d SWAP1
0xb7e POP
0xb7f JUMP
---
0xb7b: JUMPDEST 
0xb7f: JUMP 0x259
---
Entry stack: [V12, 0x259, V349, V1104]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V1104]

================================

Block 0xb80
[0xb80:0xbc3]
---
Predecessors: [0x3f5]
Successors: [0x96b, 0xbc4]
---
0xb80 JUMPDEST
0xb81 PUSH1 0x0
0xb83 DUP1
0xb84 SLOAD
0xb85 PUSH1 0x1
0xb87 PUSH1 0xa0
0xb89 PUSH1 0x2
0xb8b EXP
0xb8c SUB
0xb8d AND
0xb8e PUSH4 0x753ed1bd
0xb93 DUP3
0xb94 PUSH1 0x40
0xb96 MLOAD
0xb97 PUSH1 0x20
0xb99 ADD
0xb9a MSTORE
0xb9b PUSH1 0x40
0xb9d MLOAD
0xb9e DUP2
0xb9f PUSH4 0xffffffff
0xba4 AND
0xba5 PUSH1 0xe0
0xba7 PUSH1 0x2
0xba9 EXP
0xbaa MUL
0xbab DUP2
0xbac MSTORE
0xbad PUSH1 0x4
0xbaf ADD
0xbb0 PUSH1 0x20
0xbb2 PUSH1 0x40
0xbb4 MLOAD
0xbb5 DUP1
0xbb6 DUP4
0xbb7 SUB
0xbb8 DUP2
0xbb9 PUSH1 0x0
0xbbb DUP8
0xbbc DUP1
0xbbd EXTCODESIZE
0xbbe ISZERO
0xbbf ISZERO
0xbc0 PUSH2 0x96b
0xbc3 JUMPI
---
0xb80: JUMPDEST 
0xb81: V1105 = 0x0
0xb84: V1106 = S[0x0]
0xb85: V1107 = 0x1
0xb87: V1108 = 0xa0
0xb89: V1109 = 0x2
0xb8b: V1110 = EXP 0x2 0xa0
0xb8c: V1111 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb8d: V1112 = AND 0xffffffffffffffffffffffffffffffffffffffff V1106
0xb8e: V1113 = 0x753ed1bd
0xb94: V1114 = 0x40
0xb96: V1115 = M[0x40]
0xb97: V1116 = 0x20
0xb99: V1117 = ADD 0x20 V1115
0xb9a: M[V1117] = 0x0
0xb9b: V1118 = 0x40
0xb9d: V1119 = M[0x40]
0xb9f: V1120 = 0xffffffff
0xba4: V1121 = AND 0xffffffff 0x753ed1bd
0xba5: V1122 = 0xe0
0xba7: V1123 = 0x2
0xba9: V1124 = EXP 0x2 0xe0
0xbaa: V1125 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x753ed1bd
0xbac: M[V1119] = 0x753ed1bd00000000000000000000000000000000000000000000000000000000
0xbad: V1126 = 0x4
0xbaf: V1127 = ADD 0x4 V1119
0xbb0: V1128 = 0x20
0xbb2: V1129 = 0x40
0xbb4: V1130 = M[0x40]
0xbb7: V1131 = SUB V1127 V1130
0xbb9: V1132 = 0x0
0xbbd: V1133 = EXTCODESIZE V1112
0xbbe: V1134 = ISZERO V1133
0xbbf: V1135 = ISZERO V1134
0xbc0: V1136 = 0x96b
0xbc3: JUMPI 0x96b V1135
---
Entry stack: [V12, 0x259]
Stack pops: 0
Stack additions: [0x0, V1112, 0x753ed1bd, V1127, 0x20, V1130, V1131, V1130, 0x0, V1112]
Exit stack: [V12, 0x259, 0x0, V1112, 0x753ed1bd, V1127, 0x20, V1130, V1131, V1130, 0x0, V1112]

================================

Block 0xbc4
[0xbc4:0xbc7]
---
Predecessors: [0xb80]
Successors: []
---
0xbc4 PUSH1 0x0
0xbc6 DUP1
0xbc7 REVERT
---
0xbc4: V1137 = 0x0
0xbc7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x259, 0x0, V1112, 0x753ed1bd, V1127, 0x20, V1130, V1131, V1130, 0x0, V1112]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x259, 0x0, V1112, 0x753ed1bd, V1127, 0x20, V1130, V1131, V1130, 0x0, V1112]

================================

Block 0xbc8
[0xbc8:0xbd4]
---
Predecessors: []
Successors: [0x97c, 0xbd5]
---
0xbc8 JUMPDEST
0xbc9 PUSH2 0x2c6
0xbcc GAS
0xbcd SUB
0xbce CALL
0xbcf ISZERO
0xbd0 ISZERO
0xbd1 PUSH2 0x97c
0xbd4 JUMPI
---
0xbc8: JUMPDEST 
0xbc9: V1138 = 0x2c6
0xbcc: V1139 = GAS
0xbcd: V1140 = SUB V1139 0x2c6
0xbce: V1141 = CALL V1140 S0 S1 S2 S3 S4 S5
0xbcf: V1142 = ISZERO V1141
0xbd0: V1143 = ISZERO V1142
0xbd1: V1144 = 0x97c
0xbd4: JUMPI 0x97c V1143
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xbd5
[0xbd5:0xbe4]
---
Predecessors: [0xbc8]
Successors: [0xbe5]
---
0xbd5 PUSH1 0x0
0xbd7 DUP1
0xbd8 REVERT
0xbd9 JUMPDEST
0xbda POP
0xbdb POP
0xbdc POP
0xbdd PUSH1 0x40
0xbdf MLOAD
0xbe0 DUP1
0xbe1 MLOAD
0xbe2 SWAP2
0xbe3 POP
0xbe4 POP
---
0xbd5: V1145 = 0x0
0xbd8: REVERT 0x0 0x0
0xbd9: JUMPDEST 
0xbdd: V1146 = 0x40
0xbdf: V1147 = M[0x40]
0xbe1: V1148 = M[V1147]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1148]
Exit stack: []

================================

Block 0xbe5
[0xbe5:0xbe7]
---
Predecessors: [0xbd5]
Successors: []
Has unresolved jump.
---
0xbe5 JUMPDEST
0xbe6 SWAP1
0xbe7 JUMP
---
0xbe5: JUMPDEST 
0xbe7: JUMP S1
---
Entry stack: [V1148]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V1148]

================================

Block 0xbe8
[0xbe8:0xbfe]
---
Predecessors: [0x41a]
Successors: [0xbff, 0xc03]
---
0xbe8 JUMPDEST
0xbe9 PUSH1 0x0
0xbeb SLOAD
0xbec CALLER
0xbed PUSH1 0x1
0xbef PUSH1 0xa0
0xbf1 PUSH1 0x2
0xbf3 EXP
0xbf4 SUB
0xbf5 SWAP1
0xbf6 DUP2
0xbf7 AND
0xbf8 SWAP2
0xbf9 AND
0xbfa EQ
0xbfb PUSH2 0xc03
0xbfe JUMPI
---
0xbe8: JUMPDEST 
0xbe9: V1149 = 0x0
0xbeb: V1150 = S[0x0]
0xbec: V1151 = CALLER
0xbed: V1152 = 0x1
0xbef: V1153 = 0xa0
0xbf1: V1154 = 0x2
0xbf3: V1155 = EXP 0x2 0xa0
0xbf4: V1156 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf7: V1157 = AND 0xffffffffffffffffffffffffffffffffffffffff V1151
0xbf9: V1158 = AND V1150 0xffffffffffffffffffffffffffffffffffffffff
0xbfa: V1159 = EQ V1158 V1157
0xbfb: V1160 = 0xc03
0xbfe: JUMPI 0xc03 V1159
---
Entry stack: [V12, 0x244, V383, V386, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V383, V386, V388]

================================

Block 0xbff
[0xbff:0xc02]
---
Predecessors: [0xbe8]
Successors: []
---
0xbff PUSH1 0x0
0xc01 DUP1
0xc02 REVERT
---
0xbff: V1161 = 0x0
0xc02: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V383, V386, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V383, V386, V388]

================================

Block 0xc03
[0xc03:0xc15]
---
Predecessors: [0xbe8]
Successors: [0xc16, 0xc17]
---
0xc03 JUMPDEST
0xc04 PUSH1 0x1
0xc06 PUSH1 0xa0
0xc08 PUSH1 0x2
0xc0a EXP
0xc0b SUB
0xc0c ADDRESS
0xc0d AND
0xc0e BALANCE
0xc0f DUP2
0xc10 GT
0xc11 ISZERO
0xc12 PUSH2 0xc17
0xc15 JUMPI
---
0xc03: JUMPDEST 
0xc04: V1162 = 0x1
0xc06: V1163 = 0xa0
0xc08: V1164 = 0x2
0xc0a: V1165 = EXP 0x2 0xa0
0xc0b: V1166 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc0c: V1167 = ADDRESS
0xc0d: V1168 = AND V1167 0xffffffffffffffffffffffffffffffffffffffff
0xc0e: V1169 = BALANCE V1168
0xc10: V1170 = GT V388 V1169
0xc11: V1171 = ISZERO V1170
0xc12: V1172 = 0xc17
0xc15: JUMPI 0xc17 V1171
---
Entry stack: [V12, 0x244, V383, V386, V388]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x244, V383, V386, V388]

================================

Block 0xc16
[0xc16:0xc16]
---
Predecessors: [0xc03]
Successors: []
---
0xc16 INVALID
---
0xc16: INVALID 
---
Entry stack: [V12, 0x244, V383, V386, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V383, V386, V388]

================================

Block 0xc17
[0xc17:0xc60]
---
Predecessors: [0xc03]
Successors: [0xc61, 0xc65]
---
0xc17 JUMPDEST
0xc18 DUP3
0xc19 PUSH1 0x1
0xc1b PUSH1 0xa0
0xc1d PUSH1 0x2
0xc1f EXP
0xc20 SUB
0xc21 AND
0xc22 PUSH4 0x8a252831
0xc27 DUP3
0xc28 DUP5
0xc29 PUSH1 0x40
0xc2b MLOAD
0xc2c PUSH1 0xe0
0xc2e PUSH1 0x2
0xc30 EXP
0xc31 PUSH4 0xffffffff
0xc36 DUP6
0xc37 AND
0xc38 MUL
0xc39 DUP2
0xc3a MSTORE
0xc3b PUSH1 0x1
0xc3d PUSH1 0xa0
0xc3f PUSH1 0x2
0xc41 EXP
0xc42 SUB
0xc43 SWAP1
0xc44 SWAP2
0xc45 AND
0xc46 PUSH1 0x4
0xc48 DUP3
0xc49 ADD
0xc4a MSTORE
0xc4b PUSH1 0x24
0xc4d ADD
0xc4e PUSH1 0x0
0xc50 PUSH1 0x40
0xc52 MLOAD
0xc53 DUP1
0xc54 DUP4
0xc55 SUB
0xc56 DUP2
0xc57 DUP6
0xc58 DUP9
0xc59 DUP1
0xc5a EXTCODESIZE
0xc5b ISZERO
0xc5c ISZERO
0xc5d PUSH2 0xc65
0xc60 JUMPI
---
0xc17: JUMPDEST 
0xc19: V1173 = 0x1
0xc1b: V1174 = 0xa0
0xc1d: V1175 = 0x2
0xc1f: V1176 = EXP 0x2 0xa0
0xc20: V1177 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc21: V1178 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0xc22: V1179 = 0x8a252831
0xc29: V1180 = 0x40
0xc2b: V1181 = M[0x40]
0xc2c: V1182 = 0xe0
0xc2e: V1183 = 0x2
0xc30: V1184 = EXP 0x2 0xe0
0xc31: V1185 = 0xffffffff
0xc37: V1186 = AND 0x8a252831 0xffffffff
0xc38: V1187 = MUL 0x8a252831 0x100000000000000000000000000000000000000000000000000000000
0xc3a: M[V1181] = 0x8a25283100000000000000000000000000000000000000000000000000000000
0xc3b: V1188 = 0x1
0xc3d: V1189 = 0xa0
0xc3f: V1190 = 0x2
0xc41: V1191 = EXP 0x2 0xa0
0xc42: V1192 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc45: V1193 = AND V386 0xffffffffffffffffffffffffffffffffffffffff
0xc46: V1194 = 0x4
0xc49: V1195 = ADD V1181 0x4
0xc4a: M[V1195] = V1193
0xc4b: V1196 = 0x24
0xc4d: V1197 = ADD 0x24 V1181
0xc4e: V1198 = 0x0
0xc50: V1199 = 0x40
0xc52: V1200 = M[0x40]
0xc55: V1201 = SUB V1197 V1200
0xc5a: V1202 = EXTCODESIZE V1178
0xc5b: V1203 = ISZERO V1202
0xc5c: V1204 = ISZERO V1203
0xc5d: V1205 = 0xc65
0xc60: JUMPI 0xc65 V1204
---
Entry stack: [V12, 0x244, V383, V386, V388]
Stack pops: 3
Stack additions: [S2, S1, S0, V1178, 0x8a252831, S0, V1197, 0x0, V1200, V1201, V1200, S0, V1178]
Exit stack: [V12, 0x244, V383, V386, V388, V1178, 0x8a252831, V388, V1197, 0x0, V1200, V1201, V1200, V388, V1178]

================================

Block 0xc61
[0xc61:0xc64]
---
Predecessors: [0xc17]
Successors: []
---
0xc61 PUSH1 0x0
0xc63 DUP1
0xc64 REVERT
---
0xc61: V1206 = 0x0
0xc64: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V383, V386, V388, V1178, 0x8a252831, V388, V1197, 0x0, V1200, V1201, V1200, V388, V1178]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V383, V386, V388, V1178, 0x8a252831, V388, V1197, 0x0, V1200, V1201, V1200, V388, V1178]

================================

Block 0xc65
[0xc65:0xc71]
---
Predecessors: [0xc17]
Successors: [0xc72, 0xc76]
---
0xc65 JUMPDEST
0xc66 PUSH2 0x25ee
0xc69 GAS
0xc6a SUB
0xc6b CALL
0xc6c ISZERO
0xc6d ISZERO
0xc6e PUSH2 0xc76
0xc71 JUMPI
---
0xc65: JUMPDEST 
0xc66: V1207 = 0x25ee
0xc69: V1208 = GAS
0xc6a: V1209 = SUB V1208 0x25ee
0xc6b: V1210 = CALL V1209 V1178 V388 V1200 V1201 V1200 0x0
0xc6c: V1211 = ISZERO V1210
0xc6d: V1212 = ISZERO V1211
0xc6e: V1213 = 0xc76
0xc71: JUMPI 0xc76 V1212
---
Entry stack: [V12, 0x244, V383, V386, V388, V1178, 0x8a252831, V388, V1197, 0x0, V1200, V1201, V1200, V388, V1178]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x244, V383, V386, V388, V1178, 0x8a252831, V388, V1197]

================================

Block 0xc72
[0xc72:0xc75]
---
Predecessors: [0xc65]
Successors: []
---
0xc72 PUSH1 0x0
0xc74 DUP1
0xc75 REVERT
---
0xc72: V1214 = 0x0
0xc75: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V383, V386, V388, V1178, 0x8a252831, V388, V1197]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V383, V386, V388, V1178, 0x8a252831, V388, V1197]

================================

Block 0xc76
[0xc76:0xc7a]
---
Predecessors: [0xc65]
Successors: [0xc7b]
---
0xc76 JUMPDEST
0xc77 POP
0xc78 POP
0xc79 POP
0xc7a POP
---
0xc76: JUMPDEST 
---
Entry stack: [V12, 0x244, V383, V386, V388, V1178, 0x8a252831, V388, V1197]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x244, V383, V386, V388]

================================

Block 0xc7b
[0xc7b:0xc7b]
---
Predecessors: [0xc76]
Successors: [0xc7c]
---
0xc7b JUMPDEST
---
0xc7b: JUMPDEST 
---
Entry stack: [V12, 0x244, V383, V386, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V383, V386, V388]

================================

Block 0xc7c
[0xc7c:0xc80]
---
Predecessors: [0xc7b]
Successors: [0x244]
---
0xc7c JUMPDEST
0xc7d POP
0xc7e POP
0xc7f POP
0xc80 JUMP
---
0xc7c: JUMPDEST 
0xc80: JUMP 0x244
---
Entry stack: [V12, 0x244, V383, V386, V388]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0xc81
[0xc81:0xc8f]
---
Predecessors: [0x444]
Successors: [0x44c]
---
0xc81 JUMPDEST
0xc82 PUSH1 0x0
0xc84 SLOAD
0xc85 PUSH1 0x1
0xc87 PUSH1 0xa0
0xc89 PUSH1 0x2
0xc8b EXP
0xc8c SUB
0xc8d AND
0xc8e DUP2
0xc8f JUMP
---
0xc81: JUMPDEST 
0xc82: V1215 = 0x0
0xc84: V1216 = S[0x0]
0xc85: V1217 = 0x1
0xc87: V1218 = 0xa0
0xc89: V1219 = 0x2
0xc8b: V1220 = EXP 0x2 0xa0
0xc8c: V1221 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc8d: V1222 = AND 0xffffffffffffffffffffffffffffffffffffffff V1216
0xc8f: JUMP 0x44c
---
Entry stack: [V12, 0x44c]
Stack pops: 1
Stack additions: [S0, V1222]
Exit stack: [V12, 0x44c, V1222]

================================

Block 0xc90
[0xc90:0xcdf]
---
Predecessors: [0x473]
Successors: [0x858, 0xce0]
---
0xc90 JUMPDEST
0xc91 PUSH1 0x2
0xc93 DUP1
0xc94 SLOAD
0xc95 PUSH1 0x1
0xc97 DUP2
0xc98 PUSH1 0x1
0xc9a AND
0xc9b ISZERO
0xc9c PUSH2 0x100
0xc9f MUL
0xca0 SUB
0xca1 AND
0xca2 PUSH1 0x2
0xca4 SWAP1
0xca5 DIV
0xca6 DUP1
0xca7 PUSH1 0x1f
0xca9 ADD
0xcaa PUSH1 0x20
0xcac DUP1
0xcad SWAP2
0xcae DIV
0xcaf MUL
0xcb0 PUSH1 0x20
0xcb2 ADD
0xcb3 PUSH1 0x40
0xcb5 MLOAD
0xcb6 SWAP1
0xcb7 DUP2
0xcb8 ADD
0xcb9 PUSH1 0x40
0xcbb MSTORE
0xcbc DUP1
0xcbd SWAP3
0xcbe SWAP2
0xcbf SWAP1
0xcc0 DUP2
0xcc1 DUP2
0xcc2 MSTORE
0xcc3 PUSH1 0x20
0xcc5 ADD
0xcc6 DUP3
0xcc7 DUP1
0xcc8 SLOAD
0xcc9 PUSH1 0x1
0xccb DUP2
0xccc PUSH1 0x1
0xcce AND
0xccf ISZERO
0xcd0 PUSH2 0x100
0xcd3 MUL
0xcd4 SUB
0xcd5 AND
0xcd6 PUSH1 0x2
0xcd8 SWAP1
0xcd9 DIV
0xcda DUP1
0xcdb ISZERO
0xcdc PUSH2 0x858
0xcdf JUMPI
---
0xc90: JUMPDEST 
0xc91: V1223 = 0x2
0xc94: V1224 = S[0x2]
0xc95: V1225 = 0x1
0xc98: V1226 = 0x1
0xc9a: V1227 = AND 0x1 V1224
0xc9b: V1228 = ISZERO V1227
0xc9c: V1229 = 0x100
0xc9f: V1230 = MUL 0x100 V1228
0xca0: V1231 = SUB V1230 0x1
0xca1: V1232 = AND V1231 V1224
0xca2: V1233 = 0x2
0xca5: V1234 = DIV V1232 0x2
0xca7: V1235 = 0x1f
0xca9: V1236 = ADD 0x1f V1234
0xcaa: V1237 = 0x20
0xcae: V1238 = DIV V1236 0x20
0xcaf: V1239 = MUL V1238 0x20
0xcb0: V1240 = 0x20
0xcb2: V1241 = ADD 0x20 V1239
0xcb3: V1242 = 0x40
0xcb5: V1243 = M[0x40]
0xcb8: V1244 = ADD V1243 V1241
0xcb9: V1245 = 0x40
0xcbb: M[0x40] = V1244
0xcc2: M[V1243] = V1234
0xcc3: V1246 = 0x20
0xcc5: V1247 = ADD 0x20 V1243
0xcc8: V1248 = S[0x2]
0xcc9: V1249 = 0x1
0xccc: V1250 = 0x1
0xcce: V1251 = AND 0x1 V1248
0xccf: V1252 = ISZERO V1251
0xcd0: V1253 = 0x100
0xcd3: V1254 = MUL 0x100 V1252
0xcd4: V1255 = SUB V1254 0x1
0xcd5: V1256 = AND V1255 V1248
0xcd6: V1257 = 0x2
0xcd9: V1258 = DIV V1256 0x2
0xcdb: V1259 = ISZERO V1258
0xcdc: V1260 = 0x858
0xcdf: JUMPI 0x858 V1259
---
Entry stack: [V12, 0x1aa]
Stack pops: 0
Stack additions: [V1243, 0x2, V1234, V1247, 0x2, V1258]
Exit stack: [V12, 0x1aa, V1243, 0x2, V1234, V1247, 0x2, V1258]

================================

Block 0xce0
[0xce0:0xce7]
---
Predecessors: [0xc90]
Successors: [0x82d, 0xce8]
---
0xce0 DUP1
0xce1 PUSH1 0x1f
0xce3 LT
0xce4 PUSH2 0x82d
0xce7 JUMPI
---
0xce1: V1261 = 0x1f
0xce3: V1262 = LT 0x1f V1258
0xce4: V1263 = 0x82d
0xce7: JUMPI 0x82d V1262
---
Entry stack: [V12, 0x1aa, V1243, 0x2, V1234, V1247, 0x2, V1258]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1aa, V1243, 0x2, V1234, V1247, 0x2, V1258]

================================

Block 0xce8
[0xce8:0xcfa]
---
Predecessors: [0xce0]
Successors: [0x858]
---
0xce8 PUSH2 0x100
0xceb DUP1
0xcec DUP4
0xced SLOAD
0xcee DIV
0xcef MUL
0xcf0 DUP4
0xcf1 MSTORE
0xcf2 SWAP2
0xcf3 PUSH1 0x20
0xcf5 ADD
0xcf6 SWAP2
0xcf7 PUSH2 0x858
0xcfa JUMP
---
0xce8: V1264 = 0x100
0xced: V1265 = S[0x2]
0xcee: V1266 = DIV V1265 0x100
0xcef: V1267 = MUL V1266 0x100
0xcf1: M[V1247] = V1267
0xcf3: V1268 = 0x20
0xcf5: V1269 = ADD 0x20 V1247
0xcf7: V1270 = 0x858
0xcfa: JUMP 0x858
---
Entry stack: [V12, 0x1aa, V1243, 0x2, V1234, V1247, 0x2, V1258]
Stack pops: 3
Stack additions: [V1269, S1, S0]
Exit stack: [V12, 0x1aa, V1243, 0x2, V1234, V1269, 0x2, V1258]

================================

Block 0xcfb
[0xcfb:0xd08]
---
Predecessors: []
Successors: [0xd09]
---
0xcfb JUMPDEST
0xcfc DUP3
0xcfd ADD
0xcfe SWAP2
0xcff SWAP1
0xd00 PUSH1 0x0
0xd02 MSTORE
0xd03 PUSH1 0x20
0xd05 PUSH1 0x0
0xd07 SHA3
0xd08 SWAP1
---
0xcfb: JUMPDEST 
0xcfd: V1271 = ADD S2 S0
0xd00: V1272 = 0x0
0xd02: M[0x0] = S1
0xd03: V1273 = 0x20
0xd05: V1274 = 0x0
0xd07: V1275 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V1271, V1275, S2]
Exit stack: [V1271, V1275, S2]

================================

Block 0xd09
[0xd09:0xd1c]
---
Predecessors: [0xcfb]
Successors: [0x83b, 0xd1d]
---
0xd09 JUMPDEST
0xd0a DUP2
0xd0b SLOAD
0xd0c DUP2
0xd0d MSTORE
0xd0e SWAP1
0xd0f PUSH1 0x1
0xd11 ADD
0xd12 SWAP1
0xd13 PUSH1 0x20
0xd15 ADD
0xd16 DUP1
0xd17 DUP4
0xd18 GT
0xd19 PUSH2 0x83b
0xd1c JUMPI
---
0xd09: JUMPDEST 
0xd0b: V1276 = S[V1275]
0xd0d: M[S0] = V1276
0xd0f: V1277 = 0x1
0xd11: V1278 = ADD 0x1 V1275
0xd13: V1279 = 0x20
0xd15: V1280 = ADD 0x20 S0
0xd18: V1281 = GT V1271 V1280
0xd19: V1282 = 0x83b
0xd1c: JUMPI 0x83b V1281
---
Entry stack: [V1271, V1275, S0]
Stack pops: 3
Stack additions: [S2, V1278, V1280]
Exit stack: [V1271, V1278, V1280]

================================

Block 0xd1d
[0xd1d:0xd25]
---
Predecessors: [0xd09]
Successors: [0xd26]
---
0xd1d DUP3
0xd1e SWAP1
0xd1f SUB
0xd20 PUSH1 0x1f
0xd22 AND
0xd23 DUP3
0xd24 ADD
0xd25 SWAP2
---
0xd1f: V1283 = SUB V1280 V1271
0xd20: V1284 = 0x1f
0xd22: V1285 = AND 0x1f V1283
0xd24: V1286 = ADD V1271 V1285
---
Entry stack: [V1271, V1278, V1280]
Stack pops: 3
Stack additions: [V1286, S1, S2]
Exit stack: [V1286, V1278, V1271]

================================

Block 0xd26
[0xd26:0xd2d]
---
Predecessors: [0xd1d]
Successors: []
Has unresolved jump.
---
0xd26 JUMPDEST
0xd27 POP
0xd28 POP
0xd29 POP
0xd2a POP
0xd2b POP
0xd2c DUP2
0xd2d JUMP
---
0xd26: JUMPDEST 
0xd2d: JUMP S6
---
Entry stack: [V1286, V1278, V1271]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0xd2e
[0xd2e:0xdbe]
---
Predecessors: [0x4fe]
Successors: [0xdbf, 0xdc3]
---
0xd2e JUMPDEST
0xd2f PUSH1 0x0
0xd31 SLOAD
0xd32 PUSH1 0x1
0xd34 PUSH1 0xa0
0xd36 PUSH1 0x2
0xd38 EXP
0xd39 SUB
0xd3a SWAP1
0xd3b DUP2
0xd3c AND
0xd3d SWAP1
0xd3e CALLER
0xd3f AND
0xd40 PUSH1 0x0
0xd42 DUP1
0xd43 MLOAD
0xd44 PUSH1 0x20
0xd46 PUSH2 0x139b
0xd49 DUP4
0xd4a CODECOPY
0xd4b DUP2
0xd4c MLOAD
0xd4d SWAP2
0xd4e MSTORE
0xd4f DUP4
0xd50 PUSH1 0x40
0xd52 MLOAD
0xd53 SWAP1
0xd54 DUP2
0xd55 MSTORE
0xd56 PUSH1 0x20
0xd58 ADD
0xd59 PUSH1 0x40
0xd5b MLOAD
0xd5c DUP1
0xd5d SWAP2
0xd5e SUB
0xd5f SWAP1
0xd60 LOG3
0xd61 PUSH1 0x0
0xd63 SLOAD
0xd64 PUSH1 0x1
0xd66 PUSH1 0xa0
0xd68 PUSH1 0x2
0xd6a EXP
0xd6b SUB
0xd6c AND
0xd6d PUSH4 0x94009bbc
0xd72 CALLER
0xd73 DUP1
0xd74 DUP5
0xd75 PUSH1 0x40
0xd77 MLOAD
0xd78 PUSH1 0xe0
0xd7a PUSH1 0x2
0xd7c EXP
0xd7d PUSH4 0xffffffff
0xd82 DUP7
0xd83 AND
0xd84 MUL
0xd85 DUP2
0xd86 MSTORE
0xd87 PUSH1 0x1
0xd89 PUSH1 0xa0
0xd8b PUSH1 0x2
0xd8d EXP
0xd8e SUB
0xd8f SWAP4
0xd90 DUP5
0xd91 AND
0xd92 PUSH1 0x4
0xd94 DUP3
0xd95 ADD
0xd96 MSTORE
0xd97 SWAP2
0xd98 SWAP1
0xd99 SWAP3
0xd9a AND
0xd9b PUSH1 0x24
0xd9d DUP3
0xd9e ADD
0xd9f MSTORE
0xda0 PUSH1 0x44
0xda2 DUP2
0xda3 ADD
0xda4 SWAP2
0xda5 SWAP1
0xda6 SWAP2
0xda7 MSTORE
0xda8 PUSH1 0x64
0xdaa ADD
0xdab PUSH1 0x0
0xdad PUSH1 0x40
0xdaf MLOAD
0xdb0 DUP1
0xdb1 DUP4
0xdb2 SUB
0xdb3 DUP2
0xdb4 PUSH1 0x0
0xdb6 DUP8
0xdb7 DUP1
0xdb8 EXTCODESIZE
0xdb9 ISZERO
0xdba ISZERO
0xdbb PUSH2 0xdc3
0xdbe JUMPI
---
0xd2e: JUMPDEST 
0xd2f: V1287 = 0x0
0xd31: V1288 = S[0x0]
0xd32: V1289 = 0x1
0xd34: V1290 = 0xa0
0xd36: V1291 = 0x2
0xd38: V1292 = EXP 0x2 0xa0
0xd39: V1293 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3c: V1294 = AND 0xffffffffffffffffffffffffffffffffffffffff V1288
0xd3e: V1295 = CALLER
0xd3f: V1296 = AND V1295 0xffffffffffffffffffffffffffffffffffffffff
0xd40: V1297 = 0x0
0xd43: V1298 = M[0x0]
0xd44: V1299 = 0x20
0xd46: V1300 = 0x139b
0xd4a: CODECOPY 0x0 0x139b 0x20
0xd4c: V1301 = M[0x0]
0xd4e: M[0x0] = V1298
0xd50: V1302 = 0x40
0xd52: V1303 = M[0x40]
0xd55: M[V1303] = V461
0xd56: V1304 = 0x20
0xd58: V1305 = ADD 0x20 V1303
0xd59: V1306 = 0x40
0xd5b: V1307 = M[0x40]
0xd5e: V1308 = SUB V1305 V1307
0xd60: LOG V1307 V1308 V1301 V1296 V1294
0xd61: V1309 = 0x0
0xd63: V1310 = S[0x0]
0xd64: V1311 = 0x1
0xd66: V1312 = 0xa0
0xd68: V1313 = 0x2
0xd6a: V1314 = EXP 0x2 0xa0
0xd6b: V1315 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6c: V1316 = AND 0xffffffffffffffffffffffffffffffffffffffff V1310
0xd6d: V1317 = 0x94009bbc
0xd72: V1318 = CALLER
0xd75: V1319 = 0x40
0xd77: V1320 = M[0x40]
0xd78: V1321 = 0xe0
0xd7a: V1322 = 0x2
0xd7c: V1323 = EXP 0x2 0xe0
0xd7d: V1324 = 0xffffffff
0xd83: V1325 = AND 0x94009bbc 0xffffffff
0xd84: V1326 = MUL 0x94009bbc 0x100000000000000000000000000000000000000000000000000000000
0xd86: M[V1320] = 0x94009bbc00000000000000000000000000000000000000000000000000000000
0xd87: V1327 = 0x1
0xd89: V1328 = 0xa0
0xd8b: V1329 = 0x2
0xd8d: V1330 = EXP 0x2 0xa0
0xd8e: V1331 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd91: V1332 = AND 0xffffffffffffffffffffffffffffffffffffffff V1318
0xd92: V1333 = 0x4
0xd95: V1334 = ADD V1320 0x4
0xd96: M[V1334] = V1332
0xd9a: V1335 = AND 0xffffffffffffffffffffffffffffffffffffffff V1318
0xd9b: V1336 = 0x24
0xd9e: V1337 = ADD V1320 0x24
0xd9f: M[V1337] = V1335
0xda0: V1338 = 0x44
0xda3: V1339 = ADD V1320 0x44
0xda7: M[V1339] = V461
0xda8: V1340 = 0x64
0xdaa: V1341 = ADD 0x64 V1320
0xdab: V1342 = 0x0
0xdad: V1343 = 0x40
0xdaf: V1344 = M[0x40]
0xdb2: V1345 = SUB V1341 V1344
0xdb4: V1346 = 0x0
0xdb8: V1347 = EXTCODESIZE V1316
0xdb9: V1348 = ISZERO V1347
0xdba: V1349 = ISZERO V1348
0xdbb: V1350 = 0xdc3
0xdbe: JUMPI 0xdc3 V1349
---
Entry stack: [V12, 0x244, V461]
Stack pops: 1
Stack additions: [S0, V1316, 0x94009bbc, V1341, 0x0, V1344, V1345, V1344, 0x0, V1316]
Exit stack: [V12, 0x244, V461, V1316, 0x94009bbc, V1341, 0x0, V1344, V1345, V1344, 0x0, V1316]

================================

Block 0xdbf
[0xdbf:0xdc2]
---
Predecessors: [0xd2e]
Successors: []
---
0xdbf PUSH1 0x0
0xdc1 DUP1
0xdc2 REVERT
---
0xdbf: V1351 = 0x0
0xdc2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V461, V1316, 0x94009bbc, V1341, 0x0, V1344, V1345, V1344, 0x0, V1316]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V461, V1316, 0x94009bbc, V1341, 0x0, V1344, V1345, V1344, 0x0, V1316]

================================

Block 0xdc3
[0xdc3:0xdcf]
---
Predecessors: [0xd2e]
Successors: [0xa7f, 0xdd0]
---
0xdc3 JUMPDEST
0xdc4 PUSH2 0x2c6
0xdc7 GAS
0xdc8 SUB
0xdc9 CALL
0xdca ISZERO
0xdcb ISZERO
0xdcc PUSH2 0xa7f
0xdcf JUMPI
---
0xdc3: JUMPDEST 
0xdc4: V1352 = 0x2c6
0xdc7: V1353 = GAS
0xdc8: V1354 = SUB V1353 0x2c6
0xdc9: V1355 = CALL V1354 V1316 0x0 V1344 V1345 V1344 0x0
0xdca: V1356 = ISZERO V1355
0xdcb: V1357 = ISZERO V1356
0xdcc: V1358 = 0xa7f
0xdcf: JUMPI 0xa7f V1357
---
Entry stack: [V12, 0x244, V461, V1316, 0x94009bbc, V1341, 0x0, V1344, V1345, V1344, 0x0, V1316]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x244, V461, V1316, 0x94009bbc, V1341]

================================

Block 0xdd0
[0xdd0:0xdd3]
---
Predecessors: [0xdc3]
Successors: []
---
0xdd0 PUSH1 0x0
0xdd2 DUP1
0xdd3 REVERT
---
0xdd0: V1359 = 0x0
0xdd3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V461, V1316, 0x94009bbc, V1341]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V461, V1316, 0x94009bbc, V1341]

================================

Block 0xdd4
[0xdd4:0xdd7]
---
Predecessors: []
Successors: [0xdd8]
---
0xdd4 JUMPDEST
0xdd5 POP
0xdd6 POP
0xdd7 POP
---
0xdd4: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xdd8
[0xdd8:0xdda]
---
Predecessors: [0xdd4]
Successors: []
Has unresolved jump.
---
0xdd8 JUMPDEST
0xdd9 POP
0xdda JUMP
---
0xdd8: JUMPDEST 
0xdda: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xddb
[0xddb:0xde4]
---
Predecessors: [0x516]
Successors: [0x1388]
---
0xddb JUMPDEST
0xddc PUSH1 0x0
0xdde PUSH2 0xde5
0xde1 PUSH2 0x1388
0xde4 JUMP
---
0xddb: JUMPDEST 
0xddc: V1360 = 0x0
0xdde: V1361 = 0xde5
0xde1: V1362 = 0x1388
0xde4: JUMP 0x1388
---
Entry stack: [V12, 0x2b8, V475, V477]
Stack pops: 0
Stack additions: [0x0, 0xde5]
Exit stack: [V12, 0x2b8, V475, V477, 0x0, 0xde5]

================================

Block 0xde5
[0xde5:0xdef]
---
Predecessors: [0x1388]
Successors: [0xfa3]
---
0xde5 JUMPDEST
0xde6 PUSH2 0xdf0
0xde9 DUP5
0xdea DUP5
0xdeb DUP4
0xdec PUSH2 0xfa3
0xdef JUMP
---
0xde5: JUMPDEST 
0xde6: V1363 = 0xdf0
0xdec: V1364 = 0xfa3
0xdef: JUMP 0xfa3
---
Entry stack: [V12, S5, S4, S3, S2, S1, V1912]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xdf0, S3, S2, S0]
Exit stack: [V12, S5, S4, S3, S2, S1, V1912, 0xdf0, S3, S2, V1912]

================================

Block 0xdf0
[0xdf0:0xdf2]
---
Predecessors: [0x10e6]
Successors: [0xdf3]
---
0xdf0 JUMPDEST
0xdf1 SWAP2
0xdf2 POP
---
0xdf0: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [S0, S1]

================================

Block 0xdf3
[0xdf3:0xdf9]
---
Predecessors: [0xdf0]
Successors: []
Has unresolved jump.
---
0xdf3 JUMPDEST
0xdf4 POP
0xdf5 SWAP3
0xdf6 SWAP2
0xdf7 POP
0xdf8 POP
0xdf9 JUMP
---
0xdf3: JUMPDEST 
0xdf9: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xdfa
[0xdfa:0xe71]
---
Predecessors: [0x54c, 0x9fd]
Successors: [0xe72]
---
0xdfa JUMPDEST
0xdfb PUSH1 0x0
0xdfd DUP1
0xdfe SLOAD
0xdff PUSH1 0x1
0xe01 PUSH1 0xa0
0xe03 PUSH1 0x2
0xe05 EXP
0xe06 SUB
0xe07 AND
0xe08 PUSH4 0x4a280a55
0xe0d CALLER
0xe0e DUP8
0xe0f DUP8
0xe10 DUP8
0xe11 DUP8
0xe12 PUSH1 0x40
0xe14 MLOAD
0xe15 PUSH1 0xe0
0xe17 PUSH1 0x2
0xe19 EXP
0xe1a PUSH4 0xffffffff
0xe1f DUP9
0xe20 AND
0xe21 MUL
0xe22 DUP2
0xe23 MSTORE
0xe24 PUSH1 0x1
0xe26 PUSH1 0xa0
0xe28 PUSH1 0x2
0xe2a EXP
0xe2b SUB
0xe2c DUP1
0xe2d DUP8
0xe2e AND
0xe2f PUSH1 0x4
0xe31 DUP4
0xe32 ADD
0xe33 SWAP1
0xe34 DUP2
0xe35 MSTORE
0xe36 DUP7
0xe37 DUP3
0xe38 AND
0xe39 PUSH1 0x24
0xe3b DUP5
0xe3c ADD
0xe3d MSTORE
0xe3e SWAP1
0xe3f DUP6
0xe40 AND
0xe41 PUSH1 0x44
0xe43 DUP4
0xe44 ADD
0xe45 MSTORE
0xe46 PUSH1 0x64
0xe48 DUP3
0xe49 ADD
0xe4a DUP5
0xe4b SWAP1
0xe4c MSTORE
0xe4d PUSH1 0xa0
0xe4f PUSH1 0x84
0xe51 DUP4
0xe52 ADD
0xe53 SWAP1
0xe54 DUP2
0xe55 MSTORE
0xe56 SWAP1
0xe57 SWAP2
0xe58 PUSH1 0xa4
0xe5a ADD
0xe5b DUP4
0xe5c DUP2
0xe5d DUP2
0xe5e MLOAD
0xe5f DUP2
0xe60 MSTORE
0xe61 PUSH1 0x20
0xe63 ADD
0xe64 SWAP2
0xe65 POP
0xe66 DUP1
0xe67 MLOAD
0xe68 SWAP1
0xe69 PUSH1 0x20
0xe6b ADD
0xe6c SWAP1
0xe6d DUP1
0xe6e DUP4
0xe6f DUP4
0xe70 PUSH1 0x0
---
0xdfa: JUMPDEST 
0xdfb: V1365 = 0x0
0xdfe: V1366 = S[0x0]
0xdff: V1367 = 0x1
0xe01: V1368 = 0xa0
0xe03: V1369 = 0x2
0xe05: V1370 = EXP 0x2 0xa0
0xe06: V1371 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe07: V1372 = AND 0xffffffffffffffffffffffffffffffffffffffff V1366
0xe08: V1373 = 0x4a280a55
0xe0d: V1374 = CALLER
0xe12: V1375 = 0x40
0xe14: V1376 = M[0x40]
0xe15: V1377 = 0xe0
0xe17: V1378 = 0x2
0xe19: V1379 = EXP 0x2 0xe0
0xe1a: V1380 = 0xffffffff
0xe20: V1381 = AND 0x4a280a55 0xffffffff
0xe21: V1382 = MUL 0x4a280a55 0x100000000000000000000000000000000000000000000000000000000
0xe23: M[V1376] = 0x4a280a5500000000000000000000000000000000000000000000000000000000
0xe24: V1383 = 0x1
0xe26: V1384 = 0xa0
0xe28: V1385 = 0x2
0xe2a: V1386 = EXP 0x2 0xa0
0xe2b: V1387 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2e: V1388 = AND V1374 0xffffffffffffffffffffffffffffffffffffffff
0xe2f: V1389 = 0x4
0xe32: V1390 = ADD V1376 0x4
0xe35: M[V1390] = V1388
0xe38: V1391 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe39: V1392 = 0x24
0xe3c: V1393 = ADD V1376 0x24
0xe3d: M[V1393] = V1391
0xe40: V1394 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xe41: V1395 = 0x44
0xe44: V1396 = ADD V1376 0x44
0xe45: M[V1396] = V1394
0xe46: V1397 = 0x64
0xe49: V1398 = ADD V1376 0x64
0xe4c: M[V1398] = S1
0xe4d: V1399 = 0xa0
0xe4f: V1400 = 0x84
0xe52: V1401 = ADD V1376 0x84
0xe55: M[V1401] = 0xa0
0xe58: V1402 = 0xa4
0xe5a: V1403 = ADD 0xa4 V1376
0xe5e: V1404 = M[S0]
0xe60: M[V1403] = V1404
0xe61: V1405 = 0x20
0xe63: V1406 = ADD 0x20 V1403
0xe67: V1407 = M[S0]
0xe69: V1408 = 0x20
0xe6b: V1409 = ADD 0x20 S0
0xe70: V1410 = 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, {0x2b8, 0xa09}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, V1372, 0x4a280a55, V1374, S3, S2, S1, S0, V1390, V1401, V1406, V1409, V1407, V1407, V1406, V1409, 0x0]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, {0x2b8, 0xa09}, S3, S2, S1, S0, 0x0, V1372, 0x4a280a55, V1374, S3, S2, S1, S0, V1390, V1401, V1406, V1409, V1407, V1407, V1406, V1409, 0x0]

================================

Block 0xe72
[0xe72:0xe7a]
---
Predecessors: [0xdfa, 0xe83]
Successors: [0xe7b, 0xe8b]
---
0xe72 JUMPDEST
0xe73 DUP4
0xe74 DUP2
0xe75 LT
0xe76 ISZERO
0xe77 PUSH2 0xe8b
0xe7a JUMPI
---
0xe72: JUMPDEST 
0xe75: V1411 = LT S0 V1407
0xe76: V1412 = ISZERO V1411
0xe77: V1413 = 0xe8b
0xe7a: JUMPI 0xe8b V1412
---
Entry stack: [V12, S27, S26, S25, S24, S23, S22, {0x2b8, 0xa09}, S20, S19, S18, S17, 0x0, V1372, 0x4a280a55, V1374, S12, S11, S10, S9, V1390, V1401, V1406, V1409, V1407, V1407, V1406, V1409, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S27, S26, S25, S24, S23, S22, {0x2b8, 0xa09}, S20, S19, S18, S17, 0x0, V1372, 0x4a280a55, V1374, S12, S11, S10, S9, V1390, V1401, V1406, V1409, V1407, V1407, V1406, V1409, S0]

================================

Block 0xe7b
[0xe7b:0xe82]
---
Predecessors: [0xe72]
Successors: [0xe83]
---
0xe7b DUP1
0xe7c DUP3
0xe7d ADD
0xe7e MLOAD
0xe7f DUP2
0xe80 DUP5
0xe81 ADD
0xe82 MSTORE
---
0xe7d: V1414 = ADD V1409 S0
0xe7e: V1415 = M[V1414]
0xe81: V1416 = ADD V1406 S0
0xe82: M[V1416] = V1415
---
Entry stack: [V12, S27, S26, S25, S24, S23, S22, {0x2b8, 0xa09}, S20, S19, S18, S17, 0x0, V1372, 0x4a280a55, V1374, S12, S11, S10, S9, V1390, V1401, V1406, V1409, V1407, V1407, V1406, V1409, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S27, S26, S25, S24, S23, S22, {0x2b8, 0xa09}, S20, S19, S18, S17, 0x0, V1372, 0x4a280a55, V1374, S12, S11, S10, S9, V1390, V1401, V1406, V1409, V1407, V1407, V1406, V1409, S0]

================================

Block 0xe83
[0xe83:0xe8a]
---
Predecessors: [0xe7b]
Successors: [0xe72]
---
0xe83 JUMPDEST
0xe84 PUSH1 0x20
0xe86 ADD
0xe87 PUSH2 0xe72
0xe8a JUMP
---
0xe83: JUMPDEST 
0xe84: V1417 = 0x20
0xe86: V1418 = ADD 0x20 S0
0xe87: V1419 = 0xe72
0xe8a: JUMP 0xe72
---
Entry stack: [V12, S27, S26, S25, S24, S23, S22, {0x2b8, 0xa09}, S20, S19, S18, S17, 0x0, V1372, 0x4a280a55, V1374, S12, S11, S10, S9, V1390, V1401, V1406, V1409, V1407, V1407, V1406, V1409, S0]
Stack pops: 1
Stack additions: [V1418]
Exit stack: [V12, S27, S26, S25, S24, S23, S22, {0x2b8, 0xa09}, S20, S19, S18, S17, 0x0, V1372, 0x4a280a55, V1374, S12, S11, S10, S9, V1390, V1401, V1406, V1409, V1407, V1407, V1406, V1409, V1418]

================================

Block 0xe8b
[0xe8b:0xe9e]
---
Predecessors: [0xe72]
Successors: [0xe9f, 0xeb8]
---
0xe8b JUMPDEST
0xe8c POP
0xe8d POP
0xe8e POP
0xe8f POP
0xe90 SWAP1
0xe91 POP
0xe92 SWAP1
0xe93 DUP2
0xe94 ADD
0xe95 SWAP1
0xe96 PUSH1 0x1f
0xe98 AND
0xe99 DUP1
0xe9a ISZERO
0xe9b PUSH2 0xeb8
0xe9e JUMPI
---
0xe8b: JUMPDEST 
0xe94: V1420 = ADD V1407 V1406
0xe96: V1421 = 0x1f
0xe98: V1422 = AND 0x1f V1407
0xe9a: V1423 = ISZERO V1422
0xe9b: V1424 = 0xeb8
0xe9e: JUMPI 0xeb8 V1423
---
Entry stack: [V12, S27, S26, S25, S24, S23, S22, {0x2b8, 0xa09}, S20, S19, S18, S17, 0x0, V1372, 0x4a280a55, V1374, S12, S11, S10, S9, V1390, V1401, V1406, V1409, V1407, V1407, V1406, V1409, S0]
Stack pops: 7
Stack additions: [V1420, V1422]
Exit stack: [V12, S27, S26, S25, S24, S23, S22, {0x2b8, 0xa09}, S20, S19, S18, S17, 0x0, V1372, 0x4a280a55, V1374, S12, S11, S10, S9, V1390, V1401, V1420, V1422]

================================

Block 0xe9f
[0xe9f:0xeb7]
---
Predecessors: [0xe8b]
Successors: [0xeb8]
---
0xe9f DUP1
0xea0 DUP3
0xea1 SUB
0xea2 DUP1
0xea3 MLOAD
0xea4 PUSH1 0x1
0xea6 DUP4
0xea7 PUSH1 0x20
0xea9 SUB
0xeaa PUSH2 0x100
0xead EXP
0xeae SUB
0xeaf NOT
0xeb0 AND
0xeb1 DUP2
0xeb2 MSTORE
0xeb3 PUSH1 0x20
0xeb5 ADD
0xeb6 SWAP2
0xeb7 POP
---
0xea1: V1425 = SUB V1420 V1422
0xea3: V1426 = M[V1425]
0xea4: V1427 = 0x1
0xea7: V1428 = 0x20
0xea9: V1429 = SUB 0x20 V1422
0xeaa: V1430 = 0x100
0xead: V1431 = EXP 0x100 V1429
0xeae: V1432 = SUB V1431 0x1
0xeaf: V1433 = NOT V1432
0xeb0: V1434 = AND V1433 V1426
0xeb2: M[V1425] = V1434
0xeb3: V1435 = 0x20
0xeb5: V1436 = ADD 0x20 V1425
---
Entry stack: [V12, S22, S21, S20, S19, S18, S17, {0x2b8, 0xa09}, S15, S14, S13, S12, 0x0, V1372, 0x4a280a55, V1374, S7, S6, S5, S4, V1390, V1401, V1420, V1422]
Stack pops: 2
Stack additions: [V1436, S0]
Exit stack: [V12, S22, S21, S20, S19, S18, S17, {0x2b8, 0xa09}, S15, S14, S13, S12, 0x0, V1372, 0x4a280a55, V1374, S7, S6, S5, S4, V1390, V1401, V1436, V1422]

================================

Block 0xeb8
[0xeb8:0xed5]
---
Predecessors: [0xe8b, 0xe9f]
Successors: [0xed6, 0xeda]
---
0xeb8 JUMPDEST
0xeb9 POP
0xeba SWAP7
0xebb POP
0xebc POP
0xebd POP
0xebe POP
0xebf POP
0xec0 POP
0xec1 POP
0xec2 PUSH1 0x0
0xec4 PUSH1 0x40
0xec6 MLOAD
0xec7 DUP1
0xec8 DUP4
0xec9 SUB
0xeca DUP2
0xecb PUSH1 0x0
0xecd DUP8
0xece DUP1
0xecf EXTCODESIZE
0xed0 ISZERO
0xed1 ISZERO
0xed2 PUSH2 0xeda
0xed5 JUMPI
---
0xeb8: JUMPDEST 
0xec2: V1437 = 0x0
0xec4: V1438 = 0x40
0xec6: V1439 = M[0x40]
0xec9: V1440 = SUB S1 V1439
0xecb: V1441 = 0x0
0xecf: V1442 = EXTCODESIZE V1372
0xed0: V1443 = ISZERO V1442
0xed1: V1444 = ISZERO V1443
0xed2: V1445 = 0xeda
0xed5: JUMPI 0xeda V1444
---
Entry stack: [V12, S22, S21, S20, S19, S18, S17, {0x2b8, 0xa09}, S15, S14, S13, S12, 0x0, V1372, 0x4a280a55, V1374, S7, S6, S5, S4, V1390, V1401, S1, V1422]
Stack pops: 11
Stack additions: [S10, S9, S1, 0x0, V1439, V1440, V1439, 0x0, S10]
Exit stack: [V12, S22, S21, S20, S19, S18, S17, {0x2b8, 0xa09}, S15, S14, S13, S12, 0x0, V1372, 0x4a280a55, S1, 0x0, V1439, V1440, V1439, 0x0, V1372]

================================

Block 0xed6
[0xed6:0xed9]
---
Predecessors: [0xeb8]
Successors: []
---
0xed6 PUSH1 0x0
0xed8 DUP1
0xed9 REVERT
---
0xed6: V1446 = 0x0
0xed9: REVERT 0x0 0x0
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, {0x2b8, 0xa09}, S13, S12, S11, S10, 0x0, V1372, 0x4a280a55, S6, 0x0, V1439, V1440, V1439, 0x0, V1372]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, {0x2b8, 0xa09}, S13, S12, S11, S10, 0x0, V1372, 0x4a280a55, S6, 0x0, V1439, V1440, V1439, 0x0, V1372]

================================

Block 0xeda
[0xeda:0xee6]
---
Predecessors: [0xeb8]
Successors: [0xee7, 0xeeb]
---
0xeda JUMPDEST
0xedb PUSH2 0x2c6
0xede GAS
0xedf SUB
0xee0 CALL
0xee1 ISZERO
0xee2 ISZERO
0xee3 PUSH2 0xeeb
0xee6 JUMPI
---
0xeda: JUMPDEST 
0xedb: V1447 = 0x2c6
0xede: V1448 = GAS
0xedf: V1449 = SUB V1448 0x2c6
0xee0: V1450 = CALL V1449 V1372 0x0 V1439 V1440 V1439 0x0
0xee1: V1451 = ISZERO V1450
0xee2: V1452 = ISZERO V1451
0xee3: V1453 = 0xeeb
0xee6: JUMPI 0xeeb V1452
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, {0x2b8, 0xa09}, S13, S12, S11, S10, 0x0, V1372, 0x4a280a55, S6, 0x0, V1439, V1440, V1439, 0x0, V1372]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, {0x2b8, 0xa09}, S13, S12, S11, S10, 0x0, V1372, 0x4a280a55, S6]

================================

Block 0xee7
[0xee7:0xeea]
---
Predecessors: [0xeda]
Successors: []
---
0xee7 PUSH1 0x0
0xee9 DUP1
0xeea REVERT
---
0xee7: V1454 = 0x0
0xeea: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, {0x2b8, 0xa09}, S7, S6, S5, S4, 0x0, V1372, 0x4a280a55, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, {0x2b8, 0xa09}, S7, S6, S5, S4, 0x0, V1372, 0x4a280a55, S0]

================================

Block 0xeeb
[0xeeb:0xf2e]
---
Predecessors: [0xeda]
Successors: [0x128f]
---
0xeeb JUMPDEST
0xeec POP
0xeed POP
0xeee POP
0xeef DUP4
0xef0 PUSH1 0x1
0xef2 PUSH1 0xa0
0xef4 PUSH1 0x2
0xef6 EXP
0xef7 SUB
0xef8 AND
0xef9 DUP6
0xefa PUSH1 0x1
0xefc PUSH1 0xa0
0xefe PUSH1 0x2
0xf00 EXP
0xf01 SUB
0xf02 AND
0xf03 PUSH1 0x0
0xf05 DUP1
0xf06 MLOAD
0xf07 PUSH1 0x20
0xf09 PUSH2 0x139b
0xf0c DUP4
0xf0d CODECOPY
0xf0e DUP2
0xf0f MLOAD
0xf10 SWAP2
0xf11 MSTORE
0xf12 DUP6
0xf13 PUSH1 0x40
0xf15 MLOAD
0xf16 SWAP1
0xf17 DUP2
0xf18 MSTORE
0xf19 PUSH1 0x20
0xf1b ADD
0xf1c PUSH1 0x40
0xf1e MLOAD
0xf1f DUP1
0xf20 SWAP2
0xf21 SUB
0xf22 SWAP1
0xf23 LOG3
0xf24 PUSH2 0xf2f
0xf27 DUP6
0xf28 DUP6
0xf29 DUP6
0xf2a DUP6
0xf2b PUSH2 0x128f
0xf2e JUMP
---
0xeeb: JUMPDEST 
0xef0: V1455 = 0x1
0xef2: V1456 = 0xa0
0xef4: V1457 = 0x2
0xef6: V1458 = EXP 0x2 0xa0
0xef7: V1459 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef8: V1460 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xefa: V1461 = 0x1
0xefc: V1462 = 0xa0
0xefe: V1463 = 0x2
0xf00: V1464 = EXP 0x2 0xa0
0xf01: V1465 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf02: V1466 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0xf03: V1467 = 0x0
0xf06: V1468 = M[0x0]
0xf07: V1469 = 0x20
0xf09: V1470 = 0x139b
0xf0d: CODECOPY 0x0 0x139b 0x20
0xf0f: V1471 = M[0x0]
0xf11: M[0x0] = V1468
0xf13: V1472 = 0x40
0xf15: V1473 = M[0x40]
0xf18: M[V1473] = S5
0xf19: V1474 = 0x20
0xf1b: V1475 = ADD 0x20 V1473
0xf1c: V1476 = 0x40
0xf1e: V1477 = M[0x40]
0xf21: V1478 = SUB V1475 V1477
0xf23: LOG V1477 V1478 V1471 V1466 V1460
0xf24: V1479 = 0xf2f
0xf2b: V1480 = 0x128f
0xf2e: JUMP 0x128f
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, {0x2b8, 0xa09}, S7, S6, S5, S4, 0x0, V1372, 0x4a280a55, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, 0xf2f, S7, S6, S5, S4]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, {0x2b8, 0xa09}, S7, S6, S5, S4, 0x0, 0xf2f, S7, S6, S5, S4]

================================

Block 0xf2f
[0xf2f:0xf32]
---
Predecessors: [0x1380]
Successors: [0xf33]
---
0xf2f JUMPDEST
0xf30 POP
0xf31 PUSH1 0x1
---
0xf2f: JUMPDEST 
0xf31: V1481 = 0x1
---
Entry stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0xf33
[0xf33:0xf3a]
---
Predecessors: [0xf2f]
Successors: [0x2b8, 0xa09]
---
0xf33 JUMPDEST
0xf34 SWAP5
0xf35 SWAP4
0xf36 POP
0xf37 POP
0xf38 POP
0xf39 POP
0xf3a JUMP
---
0xf33: JUMPDEST 
0xf3a: JUMP S5
---
Entry stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V12, 0x2b8, S10, S9, S8, S7, S6, 0x1]

================================

Block 0xf3b
[0xf3b:0xf7e]
---
Predecessors: [0x5cc]
Successors: [0x96b, 0xf7f]
---
0xf3b JUMPDEST
0xf3c PUSH1 0x0
0xf3e DUP1
0xf3f SLOAD
0xf40 PUSH1 0x1
0xf42 PUSH1 0xa0
0xf44 PUSH1 0x2
0xf46 EXP
0xf47 SUB
0xf48 AND
0xf49 PUSH4 0xbabd7012
0xf4e DUP3
0xf4f PUSH1 0x40
0xf51 MLOAD
0xf52 PUSH1 0x20
0xf54 ADD
0xf55 MSTORE
0xf56 PUSH1 0x40
0xf58 MLOAD
0xf59 DUP2
0xf5a PUSH4 0xffffffff
0xf5f AND
0xf60 PUSH1 0xe0
0xf62 PUSH1 0x2
0xf64 EXP
0xf65 MUL
0xf66 DUP2
0xf67 MSTORE
0xf68 PUSH1 0x4
0xf6a ADD
0xf6b PUSH1 0x20
0xf6d PUSH1 0x40
0xf6f MLOAD
0xf70 DUP1
0xf71 DUP4
0xf72 SUB
0xf73 DUP2
0xf74 PUSH1 0x0
0xf76 DUP8
0xf77 DUP1
0xf78 EXTCODESIZE
0xf79 ISZERO
0xf7a ISZERO
0xf7b PUSH2 0x96b
0xf7e JUMPI
---
0xf3b: JUMPDEST 
0xf3c: V1482 = 0x0
0xf3f: V1483 = S[0x0]
0xf40: V1484 = 0x1
0xf42: V1485 = 0xa0
0xf44: V1486 = 0x2
0xf46: V1487 = EXP 0x2 0xa0
0xf47: V1488 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf48: V1489 = AND 0xffffffffffffffffffffffffffffffffffffffff V1483
0xf49: V1490 = 0xbabd7012
0xf4f: V1491 = 0x40
0xf51: V1492 = M[0x40]
0xf52: V1493 = 0x20
0xf54: V1494 = ADD 0x20 V1492
0xf55: M[V1494] = 0x0
0xf56: V1495 = 0x40
0xf58: V1496 = M[0x40]
0xf5a: V1497 = 0xffffffff
0xf5f: V1498 = AND 0xffffffff 0xbabd7012
0xf60: V1499 = 0xe0
0xf62: V1500 = 0x2
0xf64: V1501 = EXP 0x2 0xe0
0xf65: V1502 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xbabd7012
0xf67: M[V1496] = 0xbabd701200000000000000000000000000000000000000000000000000000000
0xf68: V1503 = 0x4
0xf6a: V1504 = ADD 0x4 V1496
0xf6b: V1505 = 0x20
0xf6d: V1506 = 0x40
0xf6f: V1507 = M[0x40]
0xf72: V1508 = SUB V1504 V1507
0xf74: V1509 = 0x0
0xf78: V1510 = EXTCODESIZE V1489
0xf79: V1511 = ISZERO V1510
0xf7a: V1512 = ISZERO V1511
0xf7b: V1513 = 0x96b
0xf7e: JUMPI 0x96b V1512
---
Entry stack: [V12, 0x259]
Stack pops: 0
Stack additions: [0x0, V1489, 0xbabd7012, V1504, 0x20, V1507, V1508, V1507, 0x0, V1489]
Exit stack: [V12, 0x259, 0x0, V1489, 0xbabd7012, V1504, 0x20, V1507, V1508, V1507, 0x0, V1489]

================================

Block 0xf7f
[0xf7f:0xf82]
---
Predecessors: [0xf3b]
Successors: []
---
0xf7f PUSH1 0x0
0xf81 DUP1
0xf82 REVERT
---
0xf7f: V1514 = 0x0
0xf82: REVERT 0x0 0x0
---
Entry stack: [V12, 0x259, 0x0, V1489, 0xbabd7012, V1504, 0x20, V1507, V1508, V1507, 0x0, V1489]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x259, 0x0, V1489, 0xbabd7012, V1504, 0x20, V1507, V1508, V1507, 0x0, V1489]

================================

Block 0xf83
[0xf83:0xf8f]
---
Predecessors: []
Successors: [0x97c, 0xf90]
---
0xf83 JUMPDEST
0xf84 PUSH2 0x2c6
0xf87 GAS
0xf88 SUB
0xf89 CALL
0xf8a ISZERO
0xf8b ISZERO
0xf8c PUSH2 0x97c
0xf8f JUMPI
---
0xf83: JUMPDEST 
0xf84: V1515 = 0x2c6
0xf87: V1516 = GAS
0xf88: V1517 = SUB V1516 0x2c6
0xf89: V1518 = CALL V1517 S0 S1 S2 S3 S4 S5
0xf8a: V1519 = ISZERO V1518
0xf8b: V1520 = ISZERO V1519
0xf8c: V1521 = 0x97c
0xf8f: JUMPI 0x97c V1520
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xf90
[0xf90:0xf9f]
---
Predecessors: [0xf83]
Successors: [0xfa0]
---
0xf90 PUSH1 0x0
0xf92 DUP1
0xf93 REVERT
0xf94 JUMPDEST
0xf95 POP
0xf96 POP
0xf97 POP
0xf98 PUSH1 0x40
0xf9a MLOAD
0xf9b DUP1
0xf9c MLOAD
0xf9d SWAP2
0xf9e POP
0xf9f POP
---
0xf90: V1522 = 0x0
0xf93: REVERT 0x0 0x0
0xf94: JUMPDEST 
0xf98: V1523 = 0x40
0xf9a: V1524 = M[0x40]
0xf9c: V1525 = M[V1524]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1525]
Exit stack: []

================================

Block 0xfa0
[0xfa0:0xfa2]
---
Predecessors: [0xf90]
Successors: []
Has unresolved jump.
---
0xfa0 JUMPDEST
0xfa1 SWAP1
0xfa2 JUMP
---
0xfa0: JUMPDEST 
0xfa2: JUMP S1
---
Entry stack: [V1525]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V1525]

================================

Block 0xfa3
[0xfa3:0x1025]
---
Predecessors: [0x5f1, 0xaee, 0xde5]
Successors: [0x1026]
---
0xfa3 JUMPDEST
0xfa4 PUSH1 0x0
0xfa6 DUP1
0xfa7 SLOAD
0xfa8 PUSH1 0x1
0xfaa PUSH1 0xa0
0xfac PUSH1 0x2
0xfae EXP
0xfaf SUB
0xfb0 AND
0xfb1 PUSH4 0x12a837b4
0xfb6 CALLER
0xfb7 DUP7
0xfb8 DUP7
0xfb9 DUP7
0xfba PUSH1 0x40
0xfbc MLOAD
0xfbd DUP6
0xfbe PUSH4 0xffffffff
0xfc3 AND
0xfc4 PUSH1 0xe0
0xfc6 PUSH1 0x2
0xfc8 EXP
0xfc9 MUL
0xfca DUP2
0xfcb MSTORE
0xfcc PUSH1 0x4
0xfce ADD
0xfcf DUP1
0xfd0 DUP6
0xfd1 PUSH1 0x1
0xfd3 PUSH1 0xa0
0xfd5 PUSH1 0x2
0xfd7 EXP
0xfd8 SUB
0xfd9 AND
0xfda PUSH1 0x1
0xfdc PUSH1 0xa0
0xfde PUSH1 0x2
0xfe0 EXP
0xfe1 SUB
0xfe2 AND
0xfe3 DUP2
0xfe4 MSTORE
0xfe5 PUSH1 0x20
0xfe7 ADD
0xfe8 DUP5
0xfe9 PUSH1 0x1
0xfeb PUSH1 0xa0
0xfed PUSH1 0x2
0xfef EXP
0xff0 SUB
0xff1 AND
0xff2 PUSH1 0x1
0xff4 PUSH1 0xa0
0xff6 PUSH1 0x2
0xff8 EXP
0xff9 SUB
0xffa AND
0xffb DUP2
0xffc MSTORE
0xffd PUSH1 0x20
0xfff ADD
0x1000 DUP4
0x1001 DUP2
0x1002 MSTORE
0x1003 PUSH1 0x20
0x1005 ADD
0x1006 DUP1
0x1007 PUSH1 0x20
0x1009 ADD
0x100a DUP3
0x100b DUP2
0x100c SUB
0x100d DUP3
0x100e MSTORE
0x100f DUP4
0x1010 DUP2
0x1011 DUP2
0x1012 MLOAD
0x1013 DUP2
0x1014 MSTORE
0x1015 PUSH1 0x20
0x1017 ADD
0x1018 SWAP2
0x1019 POP
0x101a DUP1
0x101b MLOAD
0x101c SWAP1
0x101d PUSH1 0x20
0x101f ADD
0x1020 SWAP1
0x1021 DUP1
0x1022 DUP4
0x1023 DUP4
0x1024 PUSH1 0x0
---
0xfa3: JUMPDEST 
0xfa4: V1526 = 0x0
0xfa7: V1527 = S[0x0]
0xfa8: V1528 = 0x1
0xfaa: V1529 = 0xa0
0xfac: V1530 = 0x2
0xfae: V1531 = EXP 0x2 0xa0
0xfaf: V1532 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb0: V1533 = AND 0xffffffffffffffffffffffffffffffffffffffff V1527
0xfb1: V1534 = 0x12a837b4
0xfb6: V1535 = CALLER
0xfba: V1536 = 0x40
0xfbc: V1537 = M[0x40]
0xfbe: V1538 = 0xffffffff
0xfc3: V1539 = AND 0xffffffff 0x12a837b4
0xfc4: V1540 = 0xe0
0xfc6: V1541 = 0x2
0xfc8: V1542 = EXP 0x2 0xe0
0xfc9: V1543 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x12a837b4
0xfcb: M[V1537] = 0x12a837b400000000000000000000000000000000000000000000000000000000
0xfcc: V1544 = 0x4
0xfce: V1545 = ADD 0x4 V1537
0xfd1: V1546 = 0x1
0xfd3: V1547 = 0xa0
0xfd5: V1548 = 0x2
0xfd7: V1549 = EXP 0x2 0xa0
0xfd8: V1550 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd9: V1551 = AND 0xffffffffffffffffffffffffffffffffffffffff V1535
0xfda: V1552 = 0x1
0xfdc: V1553 = 0xa0
0xfde: V1554 = 0x2
0xfe0: V1555 = EXP 0x2 0xa0
0xfe1: V1556 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfe2: V1557 = AND 0xffffffffffffffffffffffffffffffffffffffff V1551
0xfe4: M[V1545] = V1557
0xfe5: V1558 = 0x20
0xfe7: V1559 = ADD 0x20 V1545
0xfe9: V1560 = 0x1
0xfeb: V1561 = 0xa0
0xfed: V1562 = 0x2
0xfef: V1563 = EXP 0x2 0xa0
0xff0: V1564 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff1: V1565 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xff2: V1566 = 0x1
0xff4: V1567 = 0xa0
0xff6: V1568 = 0x2
0xff8: V1569 = EXP 0x2 0xa0
0xff9: V1570 = SUB 0x10000000000000000000000000000000000000000 0x1
0xffa: V1571 = AND 0xffffffffffffffffffffffffffffffffffffffff V1565
0xffc: M[V1559] = V1571
0xffd: V1572 = 0x20
0xfff: V1573 = ADD 0x20 V1559
0x1002: M[V1573] = S1
0x1003: V1574 = 0x20
0x1005: V1575 = ADD 0x20 V1573
0x1007: V1576 = 0x20
0x1009: V1577 = ADD 0x20 V1575
0x100c: V1578 = SUB V1577 V1545
0x100e: M[V1575] = V1578
0x1012: V1579 = M[S0]
0x1014: M[V1577] = V1579
0x1015: V1580 = 0x20
0x1017: V1581 = ADD 0x20 V1577
0x101b: V1582 = M[S0]
0x101d: V1583 = 0x20
0x101f: V1584 = ADD 0x20 S0
0x1024: V1585 = 0x0
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, {0x2b8, 0xafb, 0xdf0}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V1533, 0x12a837b4, V1535, S2, S1, S0, V1545, V1575, V1581, V1584, V1582, V1582, V1581, V1584, 0x0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, {0x2b8, 0xafb, 0xdf0}, S2, S1, S0, 0x0, V1533, 0x12a837b4, V1535, S2, S1, S0, V1545, V1575, V1581, V1584, V1582, V1582, V1581, V1584, 0x0]

================================

Block 0x1026
[0x1026:0x102e]
---
Predecessors: [0xfa3, 0x1037]
Successors: [0x102f, 0x103f]
---
0x1026 JUMPDEST
0x1027 DUP4
0x1028 DUP2
0x1029 LT
0x102a ISZERO
0x102b PUSH2 0x103f
0x102e JUMPI
---
0x1026: JUMPDEST 
0x1029: V1586 = LT S0 V1582
0x102a: V1587 = ISZERO V1586
0x102b: V1588 = 0x103f
0x102e: JUMPI 0x103f V1587
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, {0x2b8, 0xafb, 0xdf0}, S18, S17, S16, 0x0, V1533, 0x12a837b4, V1535, S11, S10, S9, V1545, V1575, V1581, V1584, V1582, V1582, V1581, V1584, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S25, S24, S23, S22, S21, S20, {0x2b8, 0xafb, 0xdf0}, S18, S17, S16, 0x0, V1533, 0x12a837b4, V1535, S11, S10, S9, V1545, V1575, V1581, V1584, V1582, V1582, V1581, V1584, S0]

================================

Block 0x102f
[0x102f:0x1036]
---
Predecessors: [0x1026]
Successors: [0x1037]
---
0x102f DUP1
0x1030 DUP3
0x1031 ADD
0x1032 MLOAD
0x1033 DUP2
0x1034 DUP5
0x1035 ADD
0x1036 MSTORE
---
0x1031: V1589 = ADD V1584 S0
0x1032: V1590 = M[V1589]
0x1035: V1591 = ADD V1581 S0
0x1036: M[V1591] = V1590
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, {0x2b8, 0xafb, 0xdf0}, S18, S17, S16, 0x0, V1533, 0x12a837b4, V1535, S11, S10, S9, V1545, V1575, V1581, V1584, V1582, V1582, V1581, V1584, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S25, S24, S23, S22, S21, S20, {0x2b8, 0xafb, 0xdf0}, S18, S17, S16, 0x0, V1533, 0x12a837b4, V1535, S11, S10, S9, V1545, V1575, V1581, V1584, V1582, V1582, V1581, V1584, S0]

================================

Block 0x1037
[0x1037:0x103e]
---
Predecessors: [0x102f]
Successors: [0x1026]
---
0x1037 JUMPDEST
0x1038 PUSH1 0x20
0x103a ADD
0x103b PUSH2 0x1026
0x103e JUMP
---
0x1037: JUMPDEST 
0x1038: V1592 = 0x20
0x103a: V1593 = ADD 0x20 S0
0x103b: V1594 = 0x1026
0x103e: JUMP 0x1026
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, {0x2b8, 0xafb, 0xdf0}, S18, S17, S16, 0x0, V1533, 0x12a837b4, V1535, S11, S10, S9, V1545, V1575, V1581, V1584, V1582, V1582, V1581, V1584, S0]
Stack pops: 1
Stack additions: [V1593]
Exit stack: [V12, S25, S24, S23, S22, S21, S20, {0x2b8, 0xafb, 0xdf0}, S18, S17, S16, 0x0, V1533, 0x12a837b4, V1535, S11, S10, S9, V1545, V1575, V1581, V1584, V1582, V1582, V1581, V1584, V1593]

================================

Block 0x103f
[0x103f:0x1052]
---
Predecessors: [0x1026]
Successors: [0x1053, 0x106c]
---
0x103f JUMPDEST
0x1040 POP
0x1041 POP
0x1042 POP
0x1043 POP
0x1044 SWAP1
0x1045 POP
0x1046 SWAP1
0x1047 DUP2
0x1048 ADD
0x1049 SWAP1
0x104a PUSH1 0x1f
0x104c AND
0x104d DUP1
0x104e ISZERO
0x104f PUSH2 0x106c
0x1052 JUMPI
---
0x103f: JUMPDEST 
0x1048: V1595 = ADD V1582 V1581
0x104a: V1596 = 0x1f
0x104c: V1597 = AND 0x1f V1582
0x104e: V1598 = ISZERO V1597
0x104f: V1599 = 0x106c
0x1052: JUMPI 0x106c V1598
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, {0x2b8, 0xafb, 0xdf0}, S18, S17, S16, 0x0, V1533, 0x12a837b4, V1535, S11, S10, S9, V1545, V1575, V1581, V1584, V1582, V1582, V1581, V1584, S0]
Stack pops: 7
Stack additions: [V1595, V1597]
Exit stack: [V12, S25, S24, S23, S22, S21, S20, {0x2b8, 0xafb, 0xdf0}, S18, S17, S16, 0x0, V1533, 0x12a837b4, V1535, S11, S10, S9, V1545, V1575, V1595, V1597]

================================

Block 0x1053
[0x1053:0x106b]
---
Predecessors: [0x103f]
Successors: [0x106c]
---
0x1053 DUP1
0x1054 DUP3
0x1055 SUB
0x1056 DUP1
0x1057 MLOAD
0x1058 PUSH1 0x1
0x105a DUP4
0x105b PUSH1 0x20
0x105d SUB
0x105e PUSH2 0x100
0x1061 EXP
0x1062 SUB
0x1063 NOT
0x1064 AND
0x1065 DUP2
0x1066 MSTORE
0x1067 PUSH1 0x20
0x1069 ADD
0x106a SWAP2
0x106b POP
---
0x1055: V1600 = SUB V1595 V1597
0x1057: V1601 = M[V1600]
0x1058: V1602 = 0x1
0x105b: V1603 = 0x20
0x105d: V1604 = SUB 0x20 V1597
0x105e: V1605 = 0x100
0x1061: V1606 = EXP 0x100 V1604
0x1062: V1607 = SUB V1606 0x1
0x1063: V1608 = NOT V1607
0x1064: V1609 = AND V1608 V1601
0x1066: M[V1600] = V1609
0x1067: V1610 = 0x20
0x1069: V1611 = ADD 0x20 V1600
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, {0x2b8, 0xafb, 0xdf0}, S13, S12, S11, 0x0, V1533, 0x12a837b4, V1535, S6, S5, S4, V1545, V1575, V1595, V1597]
Stack pops: 2
Stack additions: [V1611, S0]
Exit stack: [V12, S20, S19, S18, S17, S16, S15, {0x2b8, 0xafb, 0xdf0}, S13, S12, S11, 0x0, V1533, 0x12a837b4, V1535, S6, S5, S4, V1545, V1575, V1611, V1597]

================================

Block 0x106c
[0x106c:0x1088]
---
Predecessors: [0x103f, 0x1053]
Successors: [0x1089, 0x108d]
---
0x106c JUMPDEST
0x106d POP
0x106e SWAP6
0x106f POP
0x1070 POP
0x1071 POP
0x1072 POP
0x1073 POP
0x1074 POP
0x1075 PUSH1 0x0
0x1077 PUSH1 0x40
0x1079 MLOAD
0x107a DUP1
0x107b DUP4
0x107c SUB
0x107d DUP2
0x107e PUSH1 0x0
0x1080 DUP8
0x1081 DUP1
0x1082 EXTCODESIZE
0x1083 ISZERO
0x1084 ISZERO
0x1085 PUSH2 0x108d
0x1088 JUMPI
---
0x106c: JUMPDEST 
0x1075: V1612 = 0x0
0x1077: V1613 = 0x40
0x1079: V1614 = M[0x40]
0x107c: V1615 = SUB S1 V1614
0x107e: V1616 = 0x0
0x1082: V1617 = EXTCODESIZE V1533
0x1083: V1618 = ISZERO V1617
0x1084: V1619 = ISZERO V1618
0x1085: V1620 = 0x108d
0x1088: JUMPI 0x108d V1619
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, {0x2b8, 0xafb, 0xdf0}, S13, S12, S11, 0x0, V1533, 0x12a837b4, V1535, S6, S5, S4, V1545, V1575, S1, V1597]
Stack pops: 10
Stack additions: [S9, S8, S1, 0x0, V1614, V1615, V1614, 0x0, S9]
Exit stack: [V12, S20, S19, S18, S17, S16, S15, {0x2b8, 0xafb, 0xdf0}, S13, S12, S11, 0x0, V1533, 0x12a837b4, S1, 0x0, V1614, V1615, V1614, 0x0, V1533]

================================

Block 0x1089
[0x1089:0x108c]
---
Predecessors: [0x106c]
Successors: []
---
0x1089 PUSH1 0x0
0x108b DUP1
0x108c REVERT
---
0x1089: V1621 = 0x0
0x108c: REVERT 0x0 0x0
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, {0x2b8, 0xafb, 0xdf0}, S12, S11, S10, 0x0, V1533, 0x12a837b4, S6, 0x0, V1614, V1615, V1614, 0x0, V1533]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S19, S18, S17, S16, S15, S14, {0x2b8, 0xafb, 0xdf0}, S12, S11, S10, 0x0, V1533, 0x12a837b4, S6, 0x0, V1614, V1615, V1614, 0x0, V1533]

================================

Block 0x108d
[0x108d:0x1099]
---
Predecessors: [0x106c]
Successors: [0x109a, 0x109e]
---
0x108d JUMPDEST
0x108e PUSH2 0x2c6
0x1091 GAS
0x1092 SUB
0x1093 CALL
0x1094 ISZERO
0x1095 ISZERO
0x1096 PUSH2 0x109e
0x1099 JUMPI
---
0x108d: JUMPDEST 
0x108e: V1622 = 0x2c6
0x1091: V1623 = GAS
0x1092: V1624 = SUB V1623 0x2c6
0x1093: V1625 = CALL V1624 V1533 0x0 V1614 V1615 V1614 0x0
0x1094: V1626 = ISZERO V1625
0x1095: V1627 = ISZERO V1626
0x1096: V1628 = 0x109e
0x1099: JUMPI 0x109e V1627
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, {0x2b8, 0xafb, 0xdf0}, S12, S11, S10, 0x0, V1533, 0x12a837b4, S6, 0x0, V1614, V1615, V1614, 0x0, V1533]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S19, S18, S17, S16, S15, S14, {0x2b8, 0xafb, 0xdf0}, S12, S11, S10, 0x0, V1533, 0x12a837b4, S6]

================================

Block 0x109a
[0x109a:0x109d]
---
Predecessors: [0x108d]
Successors: []
---
0x109a PUSH1 0x0
0x109c DUP1
0x109d REVERT
---
0x109a: V1629 = 0x0
0x109d: REVERT 0x0 0x0
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, {0x2b8, 0xafb, 0xdf0}, S6, S5, S4, 0x0, V1533, 0x12a837b4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, {0x2b8, 0xafb, 0xdf0}, S6, S5, S4, 0x0, V1533, 0x12a837b4, S0]

================================

Block 0x109e
[0x109e:0x10e1]
---
Predecessors: [0x108d]
Successors: [0x128f]
---
0x109e JUMPDEST
0x109f POP
0x10a0 POP
0x10a1 POP
0x10a2 DUP4
0x10a3 PUSH1 0x1
0x10a5 PUSH1 0xa0
0x10a7 PUSH1 0x2
0x10a9 EXP
0x10aa SUB
0x10ab AND
0x10ac CALLER
0x10ad PUSH1 0x1
0x10af PUSH1 0xa0
0x10b1 PUSH1 0x2
0x10b3 EXP
0x10b4 SUB
0x10b5 AND
0x10b6 PUSH1 0x0
0x10b8 DUP1
0x10b9 MLOAD
0x10ba PUSH1 0x20
0x10bc PUSH2 0x139b
0x10bf DUP4
0x10c0 CODECOPY
0x10c1 DUP2
0x10c2 MLOAD
0x10c3 SWAP2
0x10c4 MSTORE
0x10c5 DUP6
0x10c6 PUSH1 0x40
0x10c8 MLOAD
0x10c9 SWAP1
0x10ca DUP2
0x10cb MSTORE
0x10cc PUSH1 0x20
0x10ce ADD
0x10cf PUSH1 0x40
0x10d1 MLOAD
0x10d2 DUP1
0x10d3 SWAP2
0x10d4 SUB
0x10d5 SWAP1
0x10d6 LOG3
0x10d7 PUSH2 0x10e2
0x10da CALLER
0x10db DUP6
0x10dc DUP6
0x10dd DUP6
0x10de PUSH2 0x128f
0x10e1 JUMP
---
0x109e: JUMPDEST 
0x10a3: V1630 = 0x1
0x10a5: V1631 = 0xa0
0x10a7: V1632 = 0x2
0x10a9: V1633 = EXP 0x2 0xa0
0x10aa: V1634 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10ab: V1635 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x10ac: V1636 = CALLER
0x10ad: V1637 = 0x1
0x10af: V1638 = 0xa0
0x10b1: V1639 = 0x2
0x10b3: V1640 = EXP 0x2 0xa0
0x10b4: V1641 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b5: V1642 = AND 0xffffffffffffffffffffffffffffffffffffffff V1636
0x10b6: V1643 = 0x0
0x10b9: V1644 = M[0x0]
0x10ba: V1645 = 0x20
0x10bc: V1646 = 0x139b
0x10c0: CODECOPY 0x0 0x139b 0x20
0x10c2: V1647 = M[0x0]
0x10c4: M[0x0] = V1644
0x10c6: V1648 = 0x40
0x10c8: V1649 = M[0x40]
0x10cb: M[V1649] = S5
0x10cc: V1650 = 0x20
0x10ce: V1651 = ADD 0x20 V1649
0x10cf: V1652 = 0x40
0x10d1: V1653 = M[0x40]
0x10d4: V1654 = SUB V1651 V1653
0x10d6: LOG V1653 V1654 V1647 V1642 V1635
0x10d7: V1655 = 0x10e2
0x10da: V1656 = CALLER
0x10de: V1657 = 0x128f
0x10e1: JUMP 0x128f
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, {0x2b8, 0xafb, 0xdf0}, S6, S5, S4, 0x0, V1533, 0x12a837b4, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, 0x10e2, V1656, S6, S5, S4]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, {0x2b8, 0xafb, 0xdf0}, S6, S5, S4, 0x0, 0x10e2, V1656, S6, S5, S4]

================================

Block 0x10e2
[0x10e2:0x10e5]
---
Predecessors: [0x1380]
Successors: [0x10e6]
---
0x10e2 JUMPDEST
0x10e3 POP
0x10e4 PUSH1 0x1
---
0x10e2: JUMPDEST 
0x10e4: V1658 = 0x1
---
Entry stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x10e6
[0x10e6:0x10ec]
---
Predecessors: [0x10e2]
Successors: [0x244, 0x2b8, 0xafb, 0xdf0]
---
0x10e6 JUMPDEST
0x10e7 SWAP4
0x10e8 SWAP3
0x10e9 POP
0x10ea POP
0x10eb POP
0x10ec JUMP
---
0x10e6: JUMPDEST 
0x10ec: JUMP S4
---
Entry stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, 0x2b8, S10, S9, S8, S7, S6, S5, 0x1]

================================

Block 0x10ed
[0x10ed:0x10f4]
---
Predecessors: [0x66a]
Successors: [0x10f5, 0x10f9]
---
0x10ed JUMPDEST
0x10ee DUP1
0x10ef ISZERO
0x10f0 ISZERO
0x10f1 PUSH2 0x10f9
0x10f4 JUMPI
---
0x10ed: JUMPDEST 
0x10ef: V1659 = ISZERO V598
0x10f0: V1660 = ISZERO V1659
0x10f1: V1661 = 0x10f9
0x10f4: JUMPI 0x10f9 V1660
---
Entry stack: [V12, 0x244, V596, V598]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x244, V596, V598]

================================

Block 0x10f5
[0x10f5:0x10f8]
---
Predecessors: [0x10ed]
Successors: []
---
0x10f5 PUSH1 0x0
0x10f7 DUP1
0x10f8 REVERT
---
0x10f5: V1662 = 0x0
0x10f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V596, V598]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V596, V598]

================================

Block 0x10f9
[0x10f9:0x1153]
---
Predecessors: [0x10ed]
Successors: [0x1154, 0x1158]
---
0x10f9 JUMPDEST
0x10fa PUSH1 0x0
0x10fc SLOAD
0x10fd PUSH1 0x1
0x10ff PUSH1 0xa0
0x1101 PUSH1 0x2
0x1103 EXP
0x1104 SUB
0x1105 AND
0x1106 PUSH4 0x6a272462
0x110b CALLER
0x110c DUP5
0x110d DUP5
0x110e PUSH1 0x40
0x1110 MLOAD
0x1111 PUSH1 0xe0
0x1113 PUSH1 0x2
0x1115 EXP
0x1116 PUSH4 0xffffffff
0x111b DUP7
0x111c AND
0x111d MUL
0x111e DUP2
0x111f MSTORE
0x1120 PUSH1 0x1
0x1122 PUSH1 0xa0
0x1124 PUSH1 0x2
0x1126 EXP
0x1127 SUB
0x1128 SWAP1
0x1129 SWAP4
0x112a AND
0x112b PUSH1 0x4
0x112d DUP5
0x112e ADD
0x112f MSTORE
0x1130 PUSH1 0x24
0x1132 DUP4
0x1133 ADD
0x1134 SWAP2
0x1135 SWAP1
0x1136 SWAP2
0x1137 MSTORE
0x1138 PUSH1 0x44
0x113a DUP3
0x113b ADD
0x113c MSTORE
0x113d PUSH1 0x64
0x113f ADD
0x1140 PUSH1 0x0
0x1142 PUSH1 0x40
0x1144 MLOAD
0x1145 DUP1
0x1146 DUP4
0x1147 SUB
0x1148 DUP2
0x1149 PUSH1 0x0
0x114b DUP8
0x114c DUP1
0x114d EXTCODESIZE
0x114e ISZERO
0x114f ISZERO
0x1150 PUSH2 0x1158
0x1153 JUMPI
---
0x10f9: JUMPDEST 
0x10fa: V1663 = 0x0
0x10fc: V1664 = S[0x0]
0x10fd: V1665 = 0x1
0x10ff: V1666 = 0xa0
0x1101: V1667 = 0x2
0x1103: V1668 = EXP 0x2 0xa0
0x1104: V1669 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1105: V1670 = AND 0xffffffffffffffffffffffffffffffffffffffff V1664
0x1106: V1671 = 0x6a272462
0x110b: V1672 = CALLER
0x110e: V1673 = 0x40
0x1110: V1674 = M[0x40]
0x1111: V1675 = 0xe0
0x1113: V1676 = 0x2
0x1115: V1677 = EXP 0x2 0xe0
0x1116: V1678 = 0xffffffff
0x111c: V1679 = AND 0x6a272462 0xffffffff
0x111d: V1680 = MUL 0x6a272462 0x100000000000000000000000000000000000000000000000000000000
0x111f: M[V1674] = 0x6a27246200000000000000000000000000000000000000000000000000000000
0x1120: V1681 = 0x1
0x1122: V1682 = 0xa0
0x1124: V1683 = 0x2
0x1126: V1684 = EXP 0x2 0xa0
0x1127: V1685 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112a: V1686 = AND V1672 0xffffffffffffffffffffffffffffffffffffffff
0x112b: V1687 = 0x4
0x112e: V1688 = ADD V1674 0x4
0x112f: M[V1688] = V1686
0x1130: V1689 = 0x24
0x1133: V1690 = ADD V1674 0x24
0x1137: M[V1690] = V596
0x1138: V1691 = 0x44
0x113b: V1692 = ADD V1674 0x44
0x113c: M[V1692] = V598
0x113d: V1693 = 0x64
0x113f: V1694 = ADD 0x64 V1674
0x1140: V1695 = 0x0
0x1142: V1696 = 0x40
0x1144: V1697 = M[0x40]
0x1147: V1698 = SUB V1694 V1697
0x1149: V1699 = 0x0
0x114d: V1700 = EXTCODESIZE V1670
0x114e: V1701 = ISZERO V1700
0x114f: V1702 = ISZERO V1701
0x1150: V1703 = 0x1158
0x1153: JUMPI 0x1158 V1702
---
Entry stack: [V12, 0x244, V596, V598]
Stack pops: 2
Stack additions: [S1, S0, V1670, 0x6a272462, V1694, 0x0, V1697, V1698, V1697, 0x0, V1670]
Exit stack: [V12, 0x244, V596, V598, V1670, 0x6a272462, V1694, 0x0, V1697, V1698, V1697, 0x0, V1670]

================================

Block 0x1154
[0x1154:0x1157]
---
Predecessors: [0x10f9]
Successors: []
---
0x1154 PUSH1 0x0
0x1156 DUP1
0x1157 REVERT
---
0x1154: V1704 = 0x0
0x1157: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V596, V598, V1670, 0x6a272462, V1694, 0x0, V1697, V1698, V1697, 0x0, V1670]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V596, V598, V1670, 0x6a272462, V1694, 0x0, V1697, V1698, V1697, 0x0, V1670]

================================

Block 0x1158
[0x1158:0x1164]
---
Predecessors: [0x10f9]
Successors: [0x1165, 0x1169]
---
0x1158 JUMPDEST
0x1159 PUSH2 0x2c6
0x115c GAS
0x115d SUB
0x115e CALL
0x115f ISZERO
0x1160 ISZERO
0x1161 PUSH2 0x1169
0x1164 JUMPI
---
0x1158: JUMPDEST 
0x1159: V1705 = 0x2c6
0x115c: V1706 = GAS
0x115d: V1707 = SUB V1706 0x2c6
0x115e: V1708 = CALL V1707 V1670 0x0 V1697 V1698 V1697 0x0
0x115f: V1709 = ISZERO V1708
0x1160: V1710 = ISZERO V1709
0x1161: V1711 = 0x1169
0x1164: JUMPI 0x1169 V1710
---
Entry stack: [V12, 0x244, V596, V598, V1670, 0x6a272462, V1694, 0x0, V1697, V1698, V1697, 0x0, V1670]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x244, V596, V598, V1670, 0x6a272462, V1694]

================================

Block 0x1165
[0x1165:0x1168]
---
Predecessors: [0x1158]
Successors: []
---
0x1165 PUSH1 0x0
0x1167 DUP1
0x1168 REVERT
---
0x1165: V1712 = 0x0
0x1168: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V596, V598, V1670, 0x6a272462, V1694]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V596, V598, V1670, 0x6a272462, V1694]

================================

Block 0x1169
[0x1169:0x11a9]
---
Predecessors: [0x1158]
Successors: [0x11aa]
---
0x1169 JUMPDEST
0x116a POP
0x116b POP
0x116c POP
0x116d CALLER
0x116e PUSH1 0x1
0x1170 PUSH1 0xa0
0x1172 PUSH1 0x2
0x1174 EXP
0x1175 SUB
0x1176 AND
0x1177 PUSH32 0x5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df09
0x1198 DUP3
0x1199 PUSH1 0x40
0x119b MLOAD
0x119c SWAP1
0x119d DUP2
0x119e MSTORE
0x119f PUSH1 0x20
0x11a1 ADD
0x11a2 PUSH1 0x40
0x11a4 MLOAD
0x11a5 DUP1
0x11a6 SWAP2
0x11a7 SUB
0x11a8 SWAP1
0x11a9 LOG2
---
0x1169: JUMPDEST 
0x116d: V1713 = CALLER
0x116e: V1714 = 0x1
0x1170: V1715 = 0xa0
0x1172: V1716 = 0x2
0x1174: V1717 = EXP 0x2 0xa0
0x1175: V1718 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1176: V1719 = AND 0xffffffffffffffffffffffffffffffffffffffff V1713
0x1177: V1720 = 0x5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df09
0x1199: V1721 = 0x40
0x119b: V1722 = M[0x40]
0x119e: M[V1722] = V598
0x119f: V1723 = 0x20
0x11a1: V1724 = ADD 0x20 V1722
0x11a2: V1725 = 0x40
0x11a4: V1726 = M[0x40]
0x11a7: V1727 = SUB V1724 V1726
0x11a9: LOG V1726 V1727 0x5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df09 V1719
---
Entry stack: [V12, 0x244, V596, V598, V1670, 0x6a272462, V1694]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x244, V596, V598]

================================

Block 0x11aa
[0x11aa:0x11ad]
---
Predecessors: [0x1169]
Successors: [0x244]
---
0x11aa JUMPDEST
0x11ab POP
0x11ac POP
0x11ad JUMP
---
0x11aa: JUMPDEST 
0x11ad: JUMP 0x244
---
Entry stack: [V12, 0x244, V596, V598]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x11ae
[0x11ae:0x120a]
---
Predecessors: [0x685]
Successors: [0x120b, 0x120f]
---
0x11ae JUMPDEST
0x11af PUSH1 0x0
0x11b1 DUP1
0x11b2 SLOAD
0x11b3 PUSH1 0x1
0x11b5 PUSH1 0xa0
0x11b7 PUSH1 0x2
0x11b9 EXP
0x11ba SUB
0x11bb AND
0x11bc PUSH4 0xdd62ed3e
0x11c1 DUP5
0x11c2 DUP5
0x11c3 DUP5
0x11c4 PUSH1 0x40
0x11c6 MLOAD
0x11c7 PUSH1 0x20
0x11c9 ADD
0x11ca MSTORE
0x11cb PUSH1 0x40
0x11cd MLOAD
0x11ce PUSH1 0xe0
0x11d0 PUSH1 0x2
0x11d2 EXP
0x11d3 PUSH4 0xffffffff
0x11d8 DUP6
0x11d9 AND
0x11da MUL
0x11db DUP2
0x11dc MSTORE
0x11dd PUSH1 0x1
0x11df PUSH1 0xa0
0x11e1 PUSH1 0x2
0x11e3 EXP
0x11e4 SUB
0x11e5 SWAP3
0x11e6 DUP4
0x11e7 AND
0x11e8 PUSH1 0x4
0x11ea DUP3
0x11eb ADD
0x11ec MSTORE
0x11ed SWAP2
0x11ee AND
0x11ef PUSH1 0x24
0x11f1 DUP3
0x11f2 ADD
0x11f3 MSTORE
0x11f4 PUSH1 0x44
0x11f6 ADD
0x11f7 PUSH1 0x20
0x11f9 PUSH1 0x40
0x11fb MLOAD
0x11fc DUP1
0x11fd DUP4
0x11fe SUB
0x11ff DUP2
0x1200 PUSH1 0x0
0x1202 DUP8
0x1203 DUP1
0x1204 EXTCODESIZE
0x1205 ISZERO
0x1206 ISZERO
0x1207 PUSH2 0x120f
0x120a JUMPI
---
0x11ae: JUMPDEST 
0x11af: V1728 = 0x0
0x11b2: V1729 = S[0x0]
0x11b3: V1730 = 0x1
0x11b5: V1731 = 0xa0
0x11b7: V1732 = 0x2
0x11b9: V1733 = EXP 0x2 0xa0
0x11ba: V1734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11bb: V1735 = AND 0xffffffffffffffffffffffffffffffffffffffff V1729
0x11bc: V1736 = 0xdd62ed3e
0x11c4: V1737 = 0x40
0x11c6: V1738 = M[0x40]
0x11c7: V1739 = 0x20
0x11c9: V1740 = ADD 0x20 V1738
0x11ca: M[V1740] = 0x0
0x11cb: V1741 = 0x40
0x11cd: V1742 = M[0x40]
0x11ce: V1743 = 0xe0
0x11d0: V1744 = 0x2
0x11d2: V1745 = EXP 0x2 0xe0
0x11d3: V1746 = 0xffffffff
0x11d9: V1747 = AND 0xdd62ed3e 0xffffffff
0x11da: V1748 = MUL 0xdd62ed3e 0x100000000000000000000000000000000000000000000000000000000
0x11dc: M[V1742] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x11dd: V1749 = 0x1
0x11df: V1750 = 0xa0
0x11e1: V1751 = 0x2
0x11e3: V1752 = EXP 0x2 0xa0
0x11e4: V1753 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e7: V1754 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0x11e8: V1755 = 0x4
0x11eb: V1756 = ADD V1742 0x4
0x11ec: M[V1756] = V1754
0x11ee: V1757 = AND 0xffffffffffffffffffffffffffffffffffffffff V615
0x11ef: V1758 = 0x24
0x11f2: V1759 = ADD V1742 0x24
0x11f3: M[V1759] = V1757
0x11f4: V1760 = 0x44
0x11f6: V1761 = ADD 0x44 V1742
0x11f7: V1762 = 0x20
0x11f9: V1763 = 0x40
0x11fb: V1764 = M[0x40]
0x11fe: V1765 = SUB V1761 V1764
0x1200: V1766 = 0x0
0x1204: V1767 = EXTCODESIZE V1735
0x1205: V1768 = ISZERO V1767
0x1206: V1769 = ISZERO V1768
0x1207: V1770 = 0x120f
0x120a: JUMPI 0x120f V1769
---
Entry stack: [V12, 0x259, V612, V615]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1735, 0xdd62ed3e, V1761, 0x20, V1764, V1765, V1764, 0x0, V1735]
Exit stack: [V12, 0x259, V612, V615, 0x0, V1735, 0xdd62ed3e, V1761, 0x20, V1764, V1765, V1764, 0x0, V1735]

================================

Block 0x120b
[0x120b:0x120e]
---
Predecessors: [0x11ae]
Successors: []
---
0x120b PUSH1 0x0
0x120d DUP1
0x120e REVERT
---
0x120b: V1771 = 0x0
0x120e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x259, V612, V615, 0x0, V1735, 0xdd62ed3e, V1761, 0x20, V1764, V1765, V1764, 0x0, V1735]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x259, V612, V615, 0x0, V1735, 0xdd62ed3e, V1761, 0x20, V1764, V1765, V1764, 0x0, V1735]

================================

Block 0x120f
[0x120f:0x121b]
---
Predecessors: [0x11ae]
Successors: [0x121c, 0x1220]
---
0x120f JUMPDEST
0x1210 PUSH2 0x2c6
0x1213 GAS
0x1214 SUB
0x1215 CALL
0x1216 ISZERO
0x1217 ISZERO
0x1218 PUSH2 0x1220
0x121b JUMPI
---
0x120f: JUMPDEST 
0x1210: V1772 = 0x2c6
0x1213: V1773 = GAS
0x1214: V1774 = SUB V1773 0x2c6
0x1215: V1775 = CALL V1774 V1735 0x0 V1764 V1765 V1764 0x20
0x1216: V1776 = ISZERO V1775
0x1217: V1777 = ISZERO V1776
0x1218: V1778 = 0x1220
0x121b: JUMPI 0x1220 V1777
---
Entry stack: [V12, 0x259, V612, V615, 0x0, V1735, 0xdd62ed3e, V1761, 0x20, V1764, V1765, V1764, 0x0, V1735]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x259, V612, V615, 0x0, V1735, 0xdd62ed3e, V1761]

================================

Block 0x121c
[0x121c:0x121f]
---
Predecessors: [0x120f]
Successors: []
---
0x121c PUSH1 0x0
0x121e DUP1
0x121f REVERT
---
0x121c: V1779 = 0x0
0x121f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x259, V612, V615, 0x0, V1735, 0xdd62ed3e, V1761]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x259, V612, V615, 0x0, V1735, 0xdd62ed3e, V1761]

================================

Block 0x1220
[0x1220:0x122b]
---
Predecessors: [0x120f]
Successors: [0x122c]
---
0x1220 JUMPDEST
0x1221 POP
0x1222 POP
0x1223 POP
0x1224 PUSH1 0x40
0x1226 MLOAD
0x1227 DUP1
0x1228 MLOAD
0x1229 SWAP2
0x122a POP
0x122b POP
---
0x1220: JUMPDEST 
0x1224: V1780 = 0x40
0x1226: V1781 = M[0x40]
0x1228: V1782 = M[V1781]
---
Entry stack: [V12, 0x259, V612, V615, 0x0, V1735, 0xdd62ed3e, V1761]
Stack pops: 4
Stack additions: [V1782]
Exit stack: [V12, 0x259, V612, V615, V1782]

================================

Block 0x122c
[0x122c:0x1231]
---
Predecessors: [0x1220]
Successors: [0x259]
---
0x122c JUMPDEST
0x122d SWAP3
0x122e SWAP2
0x122f POP
0x1230 POP
0x1231 JUMP
---
0x122c: JUMPDEST 
0x1231: JUMP 0x259
---
Entry stack: [V12, 0x259, V612, V615, V1782]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V1782]

================================

Block 0x1232
[0x1232:0x1248]
---
Predecessors: [0x6c9]
Successors: [0x1249, 0x124d]
---
0x1232 JUMPDEST
0x1233 PUSH1 0x0
0x1235 SLOAD
0x1236 CALLER
0x1237 PUSH1 0x1
0x1239 PUSH1 0xa0
0x123b PUSH1 0x2
0x123d EXP
0x123e SUB
0x123f SWAP1
0x1240 DUP2
0x1241 AND
0x1242 SWAP2
0x1243 AND
0x1244 EQ
0x1245 PUSH2 0x124d
0x1248 JUMPI
---
0x1232: JUMPDEST 
0x1233: V1783 = 0x0
0x1235: V1784 = S[0x0]
0x1236: V1785 = CALLER
0x1237: V1786 = 0x1
0x1239: V1787 = 0xa0
0x123b: V1788 = 0x2
0x123d: V1789 = EXP 0x2 0xa0
0x123e: V1790 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1241: V1791 = AND 0xffffffffffffffffffffffffffffffffffffffff V1785
0x1243: V1792 = AND V1784 0xffffffffffffffffffffffffffffffffffffffff
0x1244: V1793 = EQ V1792 V1791
0x1245: V1794 = 0x124d
0x1248: JUMPI 0x124d V1793
---
Entry stack: [V12, 0x244, V640]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V640]

================================

Block 0x1249
[0x1249:0x124c]
---
Predecessors: [0x1232]
Successors: []
---
0x1249 PUSH1 0x0
0x124b DUP1
0x124c REVERT
---
0x1249: V1795 = 0x0
0x124c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V640]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V640]

================================

Block 0x124d
[0x124d:0x125d]
---
Predecessors: [0x1232]
Successors: [0x125e, 0x1262]
---
0x124d JUMPDEST
0x124e PUSH1 0x1
0x1250 PUSH1 0xa0
0x1252 PUSH1 0x2
0x1254 EXP
0x1255 SUB
0x1256 DUP2
0x1257 AND
0x1258 ISZERO
0x1259 ISZERO
0x125a PUSH2 0x1262
0x125d JUMPI
---
0x124d: JUMPDEST 
0x124e: V1796 = 0x1
0x1250: V1797 = 0xa0
0x1252: V1798 = 0x2
0x1254: V1799 = EXP 0x2 0xa0
0x1255: V1800 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1257: V1801 = AND V640 0xffffffffffffffffffffffffffffffffffffffff
0x1258: V1802 = ISZERO V1801
0x1259: V1803 = ISZERO V1802
0x125a: V1804 = 0x1262
0x125d: JUMPI 0x1262 V1803
---
Entry stack: [V12, 0x244, V640]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x244, V640]

================================

Block 0x125e
[0x125e:0x1261]
---
Predecessors: [0x124d]
Successors: []
---
0x125e PUSH1 0x0
0x1260 DUP1
0x1261 REVERT
---
0x125e: V1805 = 0x0
0x1261: REVERT 0x0 0x0
---
Entry stack: [V12, 0x244, V640]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V640]

================================

Block 0x1262
[0x1262:0x128a]
---
Predecessors: [0x124d]
Successors: [0x128b]
---
0x1262 JUMPDEST
0x1263 PUSH1 0x0
0x1265 DUP1
0x1266 SLOAD
0x1267 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x127c NOT
0x127d AND
0x127e PUSH1 0x1
0x1280 PUSH1 0xa0
0x1282 PUSH1 0x2
0x1284 EXP
0x1285 SUB
0x1286 DUP4
0x1287 AND
0x1288 OR
0x1289 SWAP1
0x128a SSTORE
---
0x1262: JUMPDEST 
0x1263: V1806 = 0x0
0x1266: V1807 = S[0x0]
0x1267: V1808 = 0xffffffffffffffffffffffffffffffffffffffff
0x127c: V1809 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x127d: V1810 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1807
0x127e: V1811 = 0x1
0x1280: V1812 = 0xa0
0x1282: V1813 = 0x2
0x1284: V1814 = EXP 0x2 0xa0
0x1285: V1815 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1287: V1816 = AND V640 0xffffffffffffffffffffffffffffffffffffffff
0x1288: V1817 = OR V1816 V1810
0x128a: S[0x0] = V1817
---
Entry stack: [V12, 0x244, V640]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x244, V640]

================================

Block 0x128b
[0x128b:0x128b]
---
Predecessors: [0x1262]
Successors: [0x128c]
---
0x128b JUMPDEST
---
0x128b: JUMPDEST 
---
Entry stack: [V12, 0x244, V640]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x244, V640]

================================

Block 0x128c
[0x128c:0x128e]
---
Predecessors: [0x128b]
Successors: [0x244]
---
0x128c JUMPDEST
0x128d POP
0x128e JUMP
---
0x128c: JUMPDEST 
0x128e: JUMP 0x244
---
Entry stack: [V12, 0x244, V640]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x128f
[0x128f:0x129b]
---
Predecessors: [0x773, 0xa3d, 0xeeb, 0x109e]
Successors: [0x129c, 0x137f]
---
0x128f JUMPDEST
0x1290 DUP3
0x1291 EXTCODESIZE
0x1292 PUSH1 0x0
0x1294 DUP1
0x1295 DUP3
0x1296 GT
0x1297 ISZERO
0x1298 PUSH2 0x137f
0x129b JUMPI
---
0x128f: JUMPDEST 
0x1291: V1818 = EXTCODESIZE S2
0x1292: V1819 = 0x0
0x1296: V1820 = GT V1818 0x0
0x1297: V1821 = ISZERO V1820
0x1298: V1822 = 0x137f
0x129b: JUMPI 0x137f V1821
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1818, 0x0]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S3, S2, S1, S0, V1818, 0x0]

================================

Block 0x129c
[0x129c:0x1303]
---
Predecessors: [0x128f]
Successors: [0x1304]
---
0x129c POP
0x129d DUP4
0x129e PUSH1 0x1
0x12a0 PUSH1 0xa0
0x12a2 PUSH1 0x2
0x12a4 EXP
0x12a5 SUB
0x12a6 DUP2
0x12a7 AND
0x12a8 PUSH4 0xc0ee0b8a
0x12ad DUP8
0x12ae DUP7
0x12af DUP7
0x12b0 PUSH1 0x40
0x12b2 MLOAD
0x12b3 DUP5
0x12b4 PUSH4 0xffffffff
0x12b9 AND
0x12ba PUSH1 0xe0
0x12bc PUSH1 0x2
0x12be EXP
0x12bf MUL
0x12c0 DUP2
0x12c1 MSTORE
0x12c2 PUSH1 0x4
0x12c4 ADD
0x12c5 DUP1
0x12c6 DUP5
0x12c7 PUSH1 0x1
0x12c9 PUSH1 0xa0
0x12cb PUSH1 0x2
0x12cd EXP
0x12ce SUB
0x12cf AND
0x12d0 PUSH1 0x1
0x12d2 PUSH1 0xa0
0x12d4 PUSH1 0x2
0x12d6 EXP
0x12d7 SUB
0x12d8 AND
0x12d9 DUP2
0x12da MSTORE
0x12db PUSH1 0x20
0x12dd ADD
0x12de DUP4
0x12df DUP2
0x12e0 MSTORE
0x12e1 PUSH1 0x20
0x12e3 ADD
0x12e4 DUP1
0x12e5 PUSH1 0x20
0x12e7 ADD
0x12e8 DUP3
0x12e9 DUP2
0x12ea SUB
0x12eb DUP3
0x12ec MSTORE
0x12ed DUP4
0x12ee DUP2
0x12ef DUP2
0x12f0 MLOAD
0x12f1 DUP2
0x12f2 MSTORE
0x12f3 PUSH1 0x20
0x12f5 ADD
0x12f6 SWAP2
0x12f7 POP
0x12f8 DUP1
0x12f9 MLOAD
0x12fa SWAP1
0x12fb PUSH1 0x20
0x12fd ADD
0x12fe SWAP1
0x12ff DUP1
0x1300 DUP4
0x1301 DUP4
0x1302 PUSH1 0x0
---
0x129e: V1823 = 0x1
0x12a0: V1824 = 0xa0
0x12a2: V1825 = 0x2
0x12a4: V1826 = EXP 0x2 0xa0
0x12a5: V1827 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12a7: V1828 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x12a8: V1829 = 0xc0ee0b8a
0x12b0: V1830 = 0x40
0x12b2: V1831 = M[0x40]
0x12b4: V1832 = 0xffffffff
0x12b9: V1833 = AND 0xffffffff 0xc0ee0b8a
0x12ba: V1834 = 0xe0
0x12bc: V1835 = 0x2
0x12be: V1836 = EXP 0x2 0xe0
0x12bf: V1837 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc0ee0b8a
0x12c1: M[V1831] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x12c2: V1838 = 0x4
0x12c4: V1839 = ADD 0x4 V1831
0x12c7: V1840 = 0x1
0x12c9: V1841 = 0xa0
0x12cb: V1842 = 0x2
0x12cd: V1843 = EXP 0x2 0xa0
0x12ce: V1844 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12cf: V1845 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x12d0: V1846 = 0x1
0x12d2: V1847 = 0xa0
0x12d4: V1848 = 0x2
0x12d6: V1849 = EXP 0x2 0xa0
0x12d7: V1850 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d8: V1851 = AND 0xffffffffffffffffffffffffffffffffffffffff V1845
0x12da: M[V1839] = V1851
0x12db: V1852 = 0x20
0x12dd: V1853 = ADD 0x20 V1839
0x12e0: M[V1853] = S3
0x12e1: V1854 = 0x20
0x12e3: V1855 = ADD 0x20 V1853
0x12e5: V1856 = 0x20
0x12e7: V1857 = ADD 0x20 V1855
0x12ea: V1858 = SUB V1857 V1839
0x12ec: M[V1855] = V1858
0x12f0: V1859 = M[S2]
0x12f2: M[V1857] = V1859
0x12f3: V1860 = 0x20
0x12f5: V1861 = ADD 0x20 V1857
0x12f9: V1862 = M[S2]
0x12fb: V1863 = 0x20
0x12fd: V1864 = ADD 0x20 S2
0x1302: V1865 = 0x0
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S5, S4, S3, S2, V1818, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S4, V1828, 0xc0ee0b8a, S5, S3, S2, V1839, V1855, V1861, V1864, V1862, V1862, V1861, V1864, 0x0]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S5, S4, S3, S2, V1818, S4, V1828, 0xc0ee0b8a, S5, S3, S2, V1839, V1855, V1861, V1864, V1862, V1862, V1861, V1864, 0x0]

================================

Block 0x1304
[0x1304:0x130c]
---
Predecessors: [0x129c, 0x1315]
Successors: [0x130d, 0x131d]
---
0x1304 JUMPDEST
0x1305 DUP4
0x1306 DUP2
0x1307 LT
0x1308 ISZERO
0x1309 PUSH2 0x131d
0x130c JUMPI
---
0x1304: JUMPDEST 
0x1307: V1866 = LT S0 V1862
0x1308: V1867 = ISZERO V1866
0x1309: V1868 = 0x131d
0x130c: JUMPI 0x131d V1867
---
Entry stack: [V12, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S19, S18, S17, S16, S15, S14, V1828, 0xc0ee0b8a, S11, S10, S9, V1839, V1855, V1861, V1864, V1862, V1862, V1861, V1864, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S19, S18, S17, S16, S15, S14, V1828, 0xc0ee0b8a, S11, S10, S9, V1839, V1855, V1861, V1864, V1862, V1862, V1861, V1864, S0]

================================

Block 0x130d
[0x130d:0x1314]
---
Predecessors: [0x1304]
Successors: [0x1315]
---
0x130d DUP1
0x130e DUP3
0x130f ADD
0x1310 MLOAD
0x1311 DUP2
0x1312 DUP5
0x1313 ADD
0x1314 MSTORE
---
0x130f: V1869 = ADD V1864 S0
0x1310: V1870 = M[V1869]
0x1313: V1871 = ADD V1861 S0
0x1314: M[V1871] = V1870
---
Entry stack: [V12, 0x2b8, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S19, S18, S17, S16, S15, S14, V1828, 0xc0ee0b8a, S11, S10, S9, V1839, V1855, V1861, V1864, V1862, V1862, V1861, V1864, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x2b8, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S19, S18, S17, S16, S15, S14, V1828, 0xc0ee0b8a, S11, S10, S9, V1839, V1855, V1861, V1864, V1862, V1862, V1861, V1864, S0]

================================

Block 0x1315
[0x1315:0x131c]
---
Predecessors: [0x130d]
Successors: [0x1304]
---
0x1315 JUMPDEST
0x1316 PUSH1 0x20
0x1318 ADD
0x1319 PUSH2 0x1304
0x131c JUMP
---
0x1315: JUMPDEST 
0x1316: V1872 = 0x20
0x1318: V1873 = ADD 0x20 S0
0x1319: V1874 = 0x1304
0x131c: JUMP 0x1304
---
Entry stack: [V12, 0x2b8, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S19, S18, S17, S16, S15, S14, V1828, 0xc0ee0b8a, S11, S10, S9, V1839, V1855, V1861, V1864, V1862, V1862, V1861, V1864, S0]
Stack pops: 1
Stack additions: [V1873]
Exit stack: [V12, 0x2b8, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S19, S18, S17, S16, S15, S14, V1828, 0xc0ee0b8a, S11, S10, S9, V1839, V1855, V1861, V1864, V1862, V1862, V1861, V1864, V1873]

================================

Block 0x131d
[0x131d:0x1330]
---
Predecessors: [0x1304]
Successors: [0x1331, 0x134a]
---
0x131d JUMPDEST
0x131e POP
0x131f POP
0x1320 POP
0x1321 POP
0x1322 SWAP1
0x1323 POP
0x1324 SWAP1
0x1325 DUP2
0x1326 ADD
0x1327 SWAP1
0x1328 PUSH1 0x1f
0x132a AND
0x132b DUP1
0x132c ISZERO
0x132d PUSH2 0x134a
0x1330 JUMPI
---
0x131d: JUMPDEST 
0x1326: V1875 = ADD V1862 V1861
0x1328: V1876 = 0x1f
0x132a: V1877 = AND 0x1f V1862
0x132c: V1878 = ISZERO V1877
0x132d: V1879 = 0x134a
0x1330: JUMPI 0x134a V1878
---
Entry stack: [V12, 0x2b8, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S19, S18, S17, S16, S15, S14, V1828, 0xc0ee0b8a, S11, S10, S9, V1839, V1855, V1861, V1864, V1862, V1862, V1861, V1864, S0]
Stack pops: 7
Stack additions: [V1875, V1877]
Exit stack: [V12, 0x2b8, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S19, S18, S17, S16, S15, S14, V1828, 0xc0ee0b8a, S11, S10, S9, V1839, V1855, V1875, V1877]

================================

Block 0x1331
[0x1331:0x1349]
---
Predecessors: [0x131d]
Successors: [0x134a]
---
0x1331 DUP1
0x1332 DUP3
0x1333 SUB
0x1334 DUP1
0x1335 MLOAD
0x1336 PUSH1 0x1
0x1338 DUP4
0x1339 PUSH1 0x20
0x133b SUB
0x133c PUSH2 0x100
0x133f EXP
0x1340 SUB
0x1341 NOT
0x1342 AND
0x1343 DUP2
0x1344 MSTORE
0x1345 PUSH1 0x20
0x1347 ADD
0x1348 SWAP2
0x1349 POP
---
0x1333: V1880 = SUB V1875 V1877
0x1335: V1881 = M[V1880]
0x1336: V1882 = 0x1
0x1339: V1883 = 0x20
0x133b: V1884 = SUB 0x20 V1877
0x133c: V1885 = 0x100
0x133f: V1886 = EXP 0x100 V1884
0x1340: V1887 = SUB V1886 0x1
0x1341: V1888 = NOT V1887
0x1342: V1889 = AND V1888 V1881
0x1344: M[V1880] = V1889
0x1345: V1890 = 0x20
0x1347: V1891 = ADD 0x20 V1880
---
Entry stack: [V12, 0x2b8, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S14, S13, S12, S11, S10, S9, V1828, 0xc0ee0b8a, S6, S5, S4, V1839, V1855, V1875, V1877]
Stack pops: 2
Stack additions: [V1891, S0]
Exit stack: [V12, 0x2b8, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S14, S13, S12, S11, S10, S9, V1828, 0xc0ee0b8a, S6, S5, S4, V1839, V1855, V1891, V1877]

================================

Block 0x134a
[0x134a:0x1365]
---
Predecessors: [0x131d, 0x1331]
Successors: [0x1366, 0x136a]
---
0x134a JUMPDEST
0x134b POP
0x134c SWAP5
0x134d POP
0x134e POP
0x134f POP
0x1350 POP
0x1351 POP
0x1352 PUSH1 0x0
0x1354 PUSH1 0x40
0x1356 MLOAD
0x1357 DUP1
0x1358 DUP4
0x1359 SUB
0x135a DUP2
0x135b PUSH1 0x0
0x135d DUP8
0x135e DUP1
0x135f EXTCODESIZE
0x1360 ISZERO
0x1361 ISZERO
0x1362 PUSH2 0x136a
0x1365 JUMPI
---
0x134a: JUMPDEST 
0x1352: V1892 = 0x0
0x1354: V1893 = 0x40
0x1356: V1894 = M[0x40]
0x1359: V1895 = SUB S1 V1894
0x135b: V1896 = 0x0
0x135f: V1897 = EXTCODESIZE V1828
0x1360: V1898 = ISZERO V1897
0x1361: V1899 = ISZERO V1898
0x1362: V1900 = 0x136a
0x1365: JUMPI 0x136a V1899
---
Entry stack: [V12, 0x2b8, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S14, S13, S12, S11, S10, S9, V1828, 0xc0ee0b8a, S6, S5, S4, V1839, V1855, S1, V1877]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V1894, V1895, V1894, 0x0, S8]
Exit stack: [V12, 0x2b8, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S14, S13, S12, S11, S10, S9, V1828, 0xc0ee0b8a, S1, 0x0, V1894, V1895, V1894, 0x0, V1828]

================================

Block 0x1366
[0x1366:0x1369]
---
Predecessors: [0x134a]
Successors: []
---
0x1366 PUSH1 0x0
0x1368 DUP1
0x1369 REVERT
---
0x1366: V1901 = 0x0
0x1369: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2b8, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S14, S13, S12, S11, S10, S9, V1828, 0xc0ee0b8a, S6, 0x0, V1894, V1895, V1894, 0x0, V1828]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b8, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S14, S13, S12, S11, S10, S9, V1828, 0xc0ee0b8a, S6, 0x0, V1894, V1895, V1894, 0x0, V1828]

================================

Block 0x136a
[0x136a:0x1376]
---
Predecessors: [0x134a]
Successors: [0x1377, 0x137b]
---
0x136a JUMPDEST
0x136b PUSH2 0x2c6
0x136e GAS
0x136f SUB
0x1370 CALL
0x1371 ISZERO
0x1372 ISZERO
0x1373 PUSH2 0x137b
0x1376 JUMPI
---
0x136a: JUMPDEST 
0x136b: V1902 = 0x2c6
0x136e: V1903 = GAS
0x136f: V1904 = SUB V1903 0x2c6
0x1370: V1905 = CALL V1904 V1828 0x0 V1894 V1895 V1894 0x0
0x1371: V1906 = ISZERO V1905
0x1372: V1907 = ISZERO V1906
0x1373: V1908 = 0x137b
0x1376: JUMPI 0x137b V1907
---
Entry stack: [V12, 0x2b8, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S14, S13, S12, S11, S10, S9, V1828, 0xc0ee0b8a, S6, 0x0, V1894, V1895, V1894, 0x0, V1828]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2b8, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S14, S13, S12, S11, S10, S9, V1828, 0xc0ee0b8a, S6]

================================

Block 0x1377
[0x1377:0x137a]
---
Predecessors: [0x136a]
Successors: []
---
0x1377 PUSH1 0x0
0x1379 DUP1
0x137a REVERT
---
0x1377: V1909 = 0x0
0x137a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2b8, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S8, S7, S6, S5, S4, S3, V1828, 0xc0ee0b8a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b8, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S8, S7, S6, S5, S4, S3, V1828, 0xc0ee0b8a, S0]

================================

Block 0x137b
[0x137b:0x137e]
---
Predecessors: [0x136a]
Successors: [0x137f]
---
0x137b JUMPDEST
0x137c POP
0x137d POP
0x137e POP
---
0x137b: JUMPDEST 
---
Entry stack: [V12, 0x2b8, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S8, S7, S6, S5, S4, S3, V1828, 0xc0ee0b8a, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x2b8, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S8, S7, S6, S5, S4, S3]

================================

Block 0x137f
[0x137f:0x137f]
---
Predecessors: [0x128f, 0x137b]
Successors: [0x1380]
---
0x137f JUMPDEST
---
0x137f: JUMPDEST 
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S5, S4, S3, S2, S1, S0]

================================

Block 0x1380
[0x1380:0x1387]
---
Predecessors: [0x137f]
Successors: [0x7bc, 0xa49, 0xf2f, 0x10e2]
---
0x1380 JUMPDEST
0x1381 POP
0x1382 POP
0x1383 POP
0x1384 POP
0x1385 POP
0x1386 POP
0x1387 JUMP
---
0x1380: JUMPDEST 
0x1387: JUMP {0x7bc, 0xa49, 0xf2f, 0x10e2}
---
Entry stack: [V12, 0x2b8, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x7bc, 0xa49, 0xf2f, 0x10e2}, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V12, 0x2b8, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7]

================================

Block 0x1388
[0x1388:0x1399]
---
Predecessors: [0x6df, 0x9f3, 0xa1a, 0xddb]
Successors: [0x6e9, 0x9fd, 0xa22, 0xde5]
---
0x1388 JUMPDEST
0x1389 PUSH1 0x20
0x138b PUSH1 0x40
0x138d MLOAD
0x138e SWAP1
0x138f DUP2
0x1390 ADD
0x1391 PUSH1 0x40
0x1393 MSTORE
0x1394 PUSH1 0x0
0x1396 DUP2
0x1397 MSTORE
0x1398 SWAP1
0x1399 JUMP
---
0x1388: JUMPDEST 
0x1389: V1910 = 0x20
0x138b: V1911 = 0x40
0x138d: V1912 = M[0x40]
0x1390: V1913 = ADD V1912 0x20
0x1391: V1914 = 0x40
0x1393: M[0x40] = V1913
0x1394: V1915 = 0x0
0x1397: M[V1912] = 0x0
0x1399: JUMP {0x6e9, 0x9fd, 0xa22, 0xde5}
---
Entry stack: [V12, S5, S4, S3, S2, S1, {0x6e9, 0x9fd, 0xa22, 0xde5}]
Stack pops: 1
Stack additions: [V1912]
Exit stack: [V12, S5, S4, S3, S2, S1, V1912]

================================

Block 0x139a
[0x139a:0x13df]
---
Predecessors: []
Successors: [0x13e0]
Has unresolved jump.
---
0x139a STOP
0x139b MISSING 0xdd
0x139c CALLCODE
0x139d MSTORE
0x139e MISSING 0xad
0x139f SHL
0x13a0 MISSING 0xe2
0x13a1 MISSING 0xc8
0x13a2 SWAP12
0x13a3 PUSH10 0xc2b068fc378daa952ba7
0x13ae CALL
0x13af PUSH4 0xc4a11628
0x13b4 CREATE2
0x13b5 GAS
0x13b6 MISSING 0x4d
0x13b7 CREATE2
0x13b8 MISSING 0x23
0x13b9 MISSING 0xb3
0x13ba MISSING 0xef
0x13bb LOG1
0x13bc PUSH6 0x627a7a723058
0x13c3 SHA3
0x13c4 MISSING 0xe7
0x13c5 XOR
0x13c6 DUP8
0x13c7 PUSH18 0xbf5d7a226186fe3e1f737db42cbe645d83df
0x13da DUP2
0x13db MISSING 0xf
0x13dc MISSING 0xda
0x13dd MISSING 0xe6
0x13de MISSING 0xd5
0x13df JUMPI
---
0x139a: STOP 
0x139b: MISSING 0xdd
0x139c: V1916 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x139d: M[V1916] = S7
0x139e: MISSING 0xad
0x139f: V1917 = SHL S0 S1
0x13a0: MISSING 0xe2
0x13a1: MISSING 0xc8
0x13a3: V1918 = 0xc2b068fc378daa952ba7
0x13ae: V1919 = CALL 0xc2b068fc378daa952ba7 S12 S1 S2 S3 S4 S5
0x13af: V1920 = 0xc4a11628
0x13b4: V1921 = CREATE2 0xc4a11628 V1919 S6 S7
0x13b5: V1922 = GAS
0x13b6: MISSING 0x4d
0x13b7: V1923 = CREATE2 S0 S1 S2 S3
0x13b8: MISSING 0x23
0x13b9: MISSING 0xb3
0x13ba: MISSING 0xef
0x13bb: LOG S0 S1 S2
0x13bc: V1924 = 0x627a7a723058
0x13c3: V1925 = SHA3 0x627a7a723058 S3
0x13c4: MISSING 0xe7
0x13c5: V1926 = XOR S0 S1
0x13c7: V1927 = 0xbf5d7a226186fe3e1f737db42cbe645d83df
0x13db: MISSING 0xf
0x13dc: MISSING 0xda
0x13dd: MISSING 0xe6
0x13de: MISSING 0xd5
0x13df: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V1917, V1922, V1921, S8, S9, S10, S11, S0, V1923, V1925, S8, 0xbf5d7a226186fe3e1f737db42cbe645d83df, S8, V1926, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Block 0x13e0
[0x13e0:0x13f1]
---
Predecessors: [0x139a]
Successors: []
---
0x13e0 MISSING 0xe4
0x13e1 MISSING 0xf8
0x13e2 MISSING 0xf9
0x13e3 PUSH14 0x29
---
0x13e0: MISSING 0xe4
0x13e1: MISSING 0xf8
0x13e2: MISSING 0xf9
0x13e3: V1928 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x197
Exit block: 0x214
Body: 0x197, 0x19e, 0x1a2, 0x1aa, 0x1ce, 0x1d7, 0x1df, 0x1e7, 0x1fb, 0x214, 0x7c2, 0x812, 0x81a, 0x82d, 0x83b, 0x84f, 0x858

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x222
Exit block: 0x244
Body: 0x222, 0x229, 0x22d, 0x244, 0x860, 0x8bf, 0x8c3, 0x8d0, 0x8d4, 0x91f

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x246
Exit block: 0x259
Body: 0x246, 0x24d, 0x251, 0x259, 0x923, 0x967, 0x96b, 0x978, 0x97c, 0x988

Function 3:
Public function signature: 0x1e93c209
Entry block: 0x26b
Exit block: 0x259
Body: 0x259, 0x26b, 0x272, 0x276, 0x96b, 0x978, 0x97c, 0x988, 0x98b, 0x9cf

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x290
Exit block: 0xee7
Body: 0x290, 0x297, 0x29b, 0x9f3, 0x9fd, 0xee7

Function 5:
Public function signature: 0x313ce567
Entry block: 0x2cc
Exit block: 0x259
Body: 0x259, 0x2cc, 0x2d3, 0x2d7, 0xa14

Function 6:
Public function signature: 0x3df2b29d
Entry block: 0x2f1
Exit block: 0x2b8
Body: 0x244, 0x2b8, 0x2f1, 0x2f8, 0x2fc, 0xa1a, 0xa22, 0xa39, 0xa3d, 0xa49, 0xa7f, 0xa80, 0xafb, 0xafe

Function 7:
Public function signature: 0x40695363
Entry block: 0x31b
Exit block: 0x259
Body: 0x259, 0x31b, 0x322, 0x326, 0x96b, 0x978, 0x97c, 0x988, 0xa86, 0xaca

Function 8:
Public function signature: 0x422810ea
Entry block: 0x340
Exit block: 0x2b8
Body: 0x2b8, 0x340, 0x347, 0x34b, 0xaee, 0xafb, 0xafe

Function 9:
Public function signature: 0x70a08231
Entry block: 0x3b9
Exit block: 0x259
Body: 0x259, 0x3b9, 0x3c0, 0x3c4, 0xb05, 0xb5a, 0xb5e, 0xb6b, 0xb6f, 0xb7b

Function 10:
Public function signature: 0x753ed1bd
Entry block: 0x3ea
Exit block: 0x259
Body: 0x259, 0x3ea, 0x3f1, 0x3f5, 0x96b, 0x978, 0x97c, 0x988, 0xb80, 0xbc4

Function 11:
Public function signature: 0x8bcff416
Entry block: 0x40f
Exit block: 0x244
Body: 0x244, 0x40f, 0x416, 0x41a, 0xbe8, 0xbff, 0xc03, 0xc16, 0xc17, 0xc61, 0xc65, 0xc72, 0xc76, 0xc7b, 0xc7c

Function 12:
Public function signature: 0x8da5cb5b
Entry block: 0x439
Exit block: 0x44c
Body: 0x439, 0x440, 0x444, 0x44c, 0xc81

Function 13:
Public function signature: 0x95d89b41
Entry block: 0x468
Exit block: 0x214
Body: 0x1aa, 0x1ce, 0x1d7, 0x1df, 0x1e7, 0x1fb, 0x214, 0x468, 0x46f, 0x473, 0x82d, 0x83b, 0x84f, 0x858, 0xc90, 0xce0, 0xce8

Function 14:
Public function signature: 0x9a6bd379
Entry block: 0x4f3
Exit block: 0x2b8
Body: 0x244, 0x2b8, 0x4f3, 0x4fa, 0x4fe, 0xa7f, 0xa80, 0xafb, 0xafe, 0xd2e, 0xdbf, 0xdc3, 0xdd0

Function 15:
Public function signature: 0xa9059cbb
Entry block: 0x50b
Exit block: 0x1089
Body: 0x50b, 0x512, 0x516, 0xddb, 0xde5, 0x1089

Function 16:
Public function signature: 0xab67aa58
Entry block: 0x541
Exit block: 0x548
Body: 0x2b8, 0x541, 0x548, 0x54c

Function 17:
Public function signature: 0xbabd7012
Entry block: 0x5c1
Exit block: 0x259
Body: 0x259, 0x5c1, 0x5c8, 0x5cc, 0x96b, 0x978, 0x97c, 0x988, 0xf3b, 0xf7f

Function 18:
Public function signature: 0xbe45fd62
Entry block: 0x5e6
Exit block: 0x2b8
Body: 0x2b8, 0x5e6, 0x5ed, 0x5f1

Function 19:
Public function signature: 0xd79875eb
Entry block: 0x65f
Exit block: 0x244
Body: 0x244, 0x65f, 0x666, 0x66a, 0x10ed, 0x10f5, 0x10f9, 0x1154, 0x1158, 0x1165, 0x1169, 0x11aa

Function 20:
Public function signature: 0xdd62ed3e
Entry block: 0x67a
Exit block: 0x259
Body: 0x259, 0x67a, 0x681, 0x685, 0x11ae, 0x120b, 0x120f, 0x121c, 0x1220, 0x122c

Function 21:
Public function signature: 0xefef39a1
Entry block: 0x6b1
Exit block: 0x244
Body: 0x244, 0x6b1

Function 22:
Public function signature: 0xf2fde38b
Entry block: 0x6be
Exit block: 0x244
Body: 0x244, 0x6be, 0x6c5, 0x6c9, 0x1232, 0x1249, 0x124d, 0x125e, 0x1262, 0x128b, 0x128c

Function 23:
Public fallback function
Entry block: 0x117
Exit block: 0x194
Body: 0x117, 0x118, 0x15c, 0x160, 0x16d, 0x171, 0x186, 0x18f, 0x193, 0x194

Function 24:
Private function
Entry block: 0x128f
Exit block: 0x1380
Body: 0x128f, 0x129c, 0x1304, 0x130d, 0x1315, 0x131d, 0x1331, 0x134a, 0x136a, 0x137b, 0x137f, 0x1380

Function 25:
Private function
Entry block: 0xfa3
Exit block: 0x10e6
Body: 0xfa3, 0x1026, 0x102f, 0x1037, 0x103f, 0x1053, 0x106c, 0x108d, 0x109e, 0x10e2, 0x10e6

Function 26:
Private function
Entry block: 0xdfa
Exit block: 0xf33
Body: 0xdfa, 0xe72, 0xe7b, 0xe83, 0xe8b, 0xe9f, 0xeb8, 0xeda, 0xeeb, 0xf2f, 0xf33

Function 27:
Private function
Entry block: 0x6df
Exit block: 0x7bd
Body: 0x6df, 0x6e9, 0x6f6, 0x762, 0x773, 0x7bc, 0x7bd

