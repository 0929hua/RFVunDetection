Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x8a]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x1d709ab4
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x8a
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x1d709ab4
0x22: V15 = EQ V13 0x1d709ab4
0x23: V16 = 0x8a
0x26: JUMPI 0x8a V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xa2]
---
0x27 DUP1
0x28 PUSH4 0x6ca7c216
0x2d EQ
0x2e PUSH2 0xa2
0x31 JUMPI
---
0x28: V17 = 0x6ca7c216
0x2d: V18 = EQ 0x6ca7c216 V13
0x2e: V19 = 0xa2
0x31: JUMPI 0xa2 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xc9]
---
0x32 DUP1
0x33 PUSH4 0x8da5cb5b
0x38 EQ
0x39 PUSH2 0xc9
0x3c JUMPI
---
0x33: V20 = 0x8da5cb5b
0x38: V21 = EQ 0x8da5cb5b V13
0x39: V22 = 0xc9
0x3c: JUMPI 0xc9 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xfa]
---
0x3d DUP1
0x3e PUSH4 0x8f272c0b
0x43 EQ
0x44 PUSH2 0xfa
0x47 JUMPI
---
0x3e: V23 = 0x8f272c0b
0x43: V24 = EQ 0x8f272c0b V13
0x44: V25 = 0xfa
0x47: JUMPI 0xfa V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x10f]
---
0x48 DUP1
0x49 PUSH4 0xb029c2c8
0x4e EQ
0x4f PUSH2 0x10f
0x52 JUMPI
---
0x49: V26 = 0xb029c2c8
0x4e: V27 = EQ 0xb029c2c8 V13
0x4f: V28 = 0x10f
0x52: JUMPI 0x10f V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x139]
---
0x53 DUP1
0x54 PUSH4 0xcbc1cfd2
0x59 EQ
0x5a PUSH2 0x139
0x5d JUMPI
---
0x54: V29 = 0xcbc1cfd2
0x59: V30 = EQ 0xcbc1cfd2 V13
0x5a: V31 = 0x139
0x5d: JUMPI 0x139 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x14e]
---
0x5e DUP1
0x5f PUSH4 0xe4171746
0x64 EQ
0x65 PUSH2 0x14e
0x68 JUMPI
---
0x5f: V32 = 0xe4171746
0x64: V33 = EQ 0xe4171746 V13
0x65: V34 = 0x14e
0x68: JUMPI 0x14e V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x163]
---
0x69 DUP1
0x6a PUSH4 0xf023d600
0x6f EQ
0x70 PUSH2 0x163
0x73 JUMPI
---
0x6a: V35 = 0xf023d600
0x6f: V36 = EQ 0xf023d600 V13
0x70: V37 = 0x163
0x73: JUMPI 0x163 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x178]
---
0x74 DUP1
0x75 PUSH4 0xf2fde38b
0x7a EQ
0x7b PUSH2 0x178
0x7e JUMPI
---
0x75: V38 = 0xf2fde38b
0x7a: V39 = EQ 0xf2fde38b V13
0x7b: V40 = 0x178
0x7e: JUMPI 0x178 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x87]
---
Predecessors: [0x0, 0x74]
Successors: [0x199]
---
0x7f JUMPDEST
0x80 PUSH2 0x88
0x83 CALLVALUE
0x84 PUSH2 0x199
0x87 JUMP
---
0x7f: JUMPDEST 
0x80: V41 = 0x88
0x83: V42 = CALLVALUE
0x84: V43 = 0x199
0x87: JUMP 0x199
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x88, V42]
Exit stack: [V13, 0x88, V42]

================================

Block 0x88
[0x88:0x89]
---
Predecessors: [0x249, 0x26a, 0x33b, 0x395, 0x3e5]
Successors: []
---
0x88 JUMPDEST
0x89 STOP
---
0x88: JUMPDEST 
0x89: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0xd]
Successors: [0x92, 0x96]
---
0x8a JUMPDEST
0x8b CALLVALUE
0x8c DUP1
0x8d ISZERO
0x8e PUSH2 0x96
0x91 JUMPI
---
0x8a: JUMPDEST 
0x8b: V44 = CALLVALUE
0x8d: V45 = ISZERO V44
0x8e: V46 = 0x96
0x91: JUMPI 0x96 V45
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V13, V44]

================================

Block 0x92
[0x92:0x95]
---
Predecessors: [0x8a]
Successors: []
---
0x92 PUSH1 0x0
0x94 DUP1
0x95 REVERT
---
0x92: V47 = 0x0
0x95: REVERT 0x0 0x0
---
Entry stack: [V13, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V44]

================================

Block 0x96
[0x96:0xa1]
---
Predecessors: [0x8a]
Successors: [0x24f]
---
0x96 JUMPDEST
0x97 POP
0x98 PUSH2 0x88
0x9b PUSH1 0x4
0x9d CALLDATALOAD
0x9e PUSH2 0x24f
0xa1 JUMP
---
0x96: JUMPDEST 
0x98: V48 = 0x88
0x9b: V49 = 0x4
0x9d: V50 = CALLDATALOAD 0x4
0x9e: V51 = 0x24f
0xa1: JUMP 0x24f
---
Entry stack: [V13, V44]
Stack pops: 1
Stack additions: [0x88, V50]
Exit stack: [V13, 0x88, V50]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0x27]
Successors: [0xaa, 0xae]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa2: JUMPDEST 
0xa3: V52 = CALLVALUE
0xa5: V53 = ISZERO V52
0xa6: V54 = 0xae
0xa9: JUMPI 0xae V53
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V52]
Exit stack: [V13, V52]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa2]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V55 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V13, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V52]

================================

Block 0xae
[0xae:0xb6]
---
Predecessors: [0xa2]
Successors: [0x26f]
---
0xae JUMPDEST
0xaf POP
0xb0 PUSH2 0xb7
0xb3 PUSH2 0x26f
0xb6 JUMP
---
0xae: JUMPDEST 
0xb0: V56 = 0xb7
0xb3: V57 = 0x26f
0xb6: JUMP 0x26f
---
Entry stack: [V13, V52]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V13, 0xb7]

================================

Block 0xb7
[0xb7:0xc8]
---
Predecessors: [0x26f]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH1 0x40
0xba DUP1
0xbb MLOAD
0xbc SWAP2
0xbd DUP3
0xbe MSTORE
0xbf MLOAD
0xc0 SWAP1
0xc1 DUP2
0xc2 SWAP1
0xc3 SUB
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 RETURN
---
0xb7: JUMPDEST 
0xb8: V58 = 0x40
0xbb: V59 = M[0x40]
0xbe: M[V59] = V219
0xbf: V60 = M[0x40]
0xc3: V61 = SUB V59 V60
0xc4: V62 = 0x20
0xc6: V63 = ADD 0x20 V61
0xc8: RETURN V60 V63
---
Entry stack: [V13, 0xb7, V219]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xb7]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x32]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V64 = CALLVALUE
0xcc: V65 = ISZERO V64
0xcd: V66 = 0xd5
0xd0: JUMPI 0xd5 V65
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V13, V64]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V67 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V13, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V64]

================================

Block 0xd5
[0xd5:0xdd]
---
Predecessors: [0xc9]
Successors: [0x275]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0xde
0xda PUSH2 0x275
0xdd JUMP
---
0xd5: JUMPDEST 
0xd7: V68 = 0xde
0xda: V69 = 0x275
0xdd: JUMP 0x275
---
Entry stack: [V13, V64]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V13, 0xde]

================================

Block 0xde
[0xde:0xf9]
---
Predecessors: [0x275, 0x284, 0x397, 0x3a6]
Successors: []
---
0xde JUMPDEST
0xdf PUSH1 0x40
0xe1 DUP1
0xe2 MLOAD
0xe3 PUSH1 0x1
0xe5 PUSH1 0xa0
0xe7 PUSH1 0x2
0xe9 EXP
0xea SUB
0xeb SWAP1
0xec SWAP3
0xed AND
0xee DUP3
0xef MSTORE
0xf0 MLOAD
0xf1 SWAP1
0xf2 DUP2
0xf3 SWAP1
0xf4 SUB
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 RETURN
---
0xde: JUMPDEST 
0xdf: V70 = 0x40
0xe2: V71 = M[0x40]
0xe3: V72 = 0x1
0xe5: V73 = 0xa0
0xe7: V74 = 0x2
0xe9: V75 = EXP 0x2 0xa0
0xea: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed: V77 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xef: M[V71] = V77
0xf0: V78 = M[0x40]
0xf4: V79 = SUB V71 V78
0xf5: V80 = 0x20
0xf7: V81 = ADD 0x20 V79
0xf9: RETURN V78 V81
---
Entry stack: [V13, 0xde, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xde]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x3d]
Successors: [0x102, 0x106]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfa: JUMPDEST 
0xfb: V82 = CALLVALUE
0xfd: V83 = ISZERO V82
0xfe: V84 = 0x106
0x101: JUMPI 0x106 V83
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V13, V82]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfa]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V85 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V13, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V82]

================================

Block 0x106
[0x106:0x10e]
---
Predecessors: [0xfa]
Successors: [0x284]
---
0x106 JUMPDEST
0x107 POP
0x108 PUSH2 0xde
0x10b PUSH2 0x284
0x10e JUMP
---
0x106: JUMPDEST 
0x108: V86 = 0xde
0x10b: V87 = 0x284
0x10e: JUMP 0x284
---
Entry stack: [V13, V82]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V13, 0xde]

================================

Block 0x10f
[0x10f:0x116]
---
Predecessors: [0x48]
Successors: [0x117, 0x11b]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 DUP1
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x10f: JUMPDEST 
0x110: V88 = CALLVALUE
0x112: V89 = ISZERO V88
0x113: V90 = 0x11b
0x116: JUMPI 0x11b V89
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V13, V88]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x10f]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V91 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V13, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V88]

================================

Block 0x11b
[0x11b:0x138]
---
Predecessors: [0x10f]
Successors: [0x293]
---
0x11b JUMPDEST
0x11c POP
0x11d PUSH2 0x88
0x120 PUSH1 0x1
0x122 PUSH1 0xa0
0x124 PUSH1 0x2
0x126 EXP
0x127 SUB
0x128 PUSH1 0x4
0x12a CALLDATALOAD
0x12b DUP2
0x12c AND
0x12d SWAP1
0x12e PUSH1 0x24
0x130 CALLDATALOAD
0x131 AND
0x132 PUSH1 0x44
0x134 CALLDATALOAD
0x135 PUSH2 0x293
0x138 JUMP
---
0x11b: JUMPDEST 
0x11d: V92 = 0x88
0x120: V93 = 0x1
0x122: V94 = 0xa0
0x124: V95 = 0x2
0x126: V96 = EXP 0x2 0xa0
0x127: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x128: V98 = 0x4
0x12a: V99 = CALLDATALOAD 0x4
0x12c: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x12e: V101 = 0x24
0x130: V102 = CALLDATALOAD 0x24
0x131: V103 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x132: V104 = 0x44
0x134: V105 = CALLDATALOAD 0x44
0x135: V106 = 0x293
0x138: JUMP 0x293
---
Entry stack: [V13, V88]
Stack pops: 1
Stack additions: [0x88, V100, V103, V105]
Exit stack: [V13, 0x88, V100, V103, V105]

================================

Block 0x139
[0x139:0x140]
---
Predecessors: [0x53]
Successors: [0x141, 0x145]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b DUP1
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x139: JUMPDEST 
0x13a: V107 = CALLVALUE
0x13c: V108 = ISZERO V107
0x13d: V109 = 0x145
0x140: JUMPI 0x145 V108
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V107]
Exit stack: [V13, V107]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x139]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V110 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V13, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V107]

================================

Block 0x145
[0x145:0x14d]
---
Predecessors: [0x139]
Successors: [0x342]
---
0x145 JUMPDEST
0x146 POP
0x147 PUSH2 0x88
0x14a PUSH2 0x342
0x14d JUMP
---
0x145: JUMPDEST 
0x147: V111 = 0x88
0x14a: V112 = 0x342
0x14d: JUMP 0x342
---
Entry stack: [V13, V107]
Stack pops: 1
Stack additions: [0x88]
Exit stack: [V13, 0x88]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x5e]
Successors: [0x156, 0x15a]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 DUP1
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x14e: JUMPDEST 
0x14f: V113 = CALLVALUE
0x151: V114 = ISZERO V113
0x152: V115 = 0x15a
0x155: JUMPI 0x15a V114
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V113]
Exit stack: [V13, V113]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x14e]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V116 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V13, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V113]

================================

Block 0x15a
[0x15a:0x162]
---
Predecessors: [0x14e]
Successors: [0x397]
---
0x15a JUMPDEST
0x15b POP
0x15c PUSH2 0xde
0x15f PUSH2 0x397
0x162 JUMP
---
0x15a: JUMPDEST 
0x15c: V117 = 0xde
0x15f: V118 = 0x397
0x162: JUMP 0x397
---
Entry stack: [V13, V113]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V13, 0xde]

================================

Block 0x163
[0x163:0x16a]
---
Predecessors: [0x69]
Successors: [0x16b, 0x16f]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 DUP1
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x163: JUMPDEST 
0x164: V119 = CALLVALUE
0x166: V120 = ISZERO V119
0x167: V121 = 0x16f
0x16a: JUMPI 0x16f V120
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V13, V119]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x163]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V122 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V13, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V119]

================================

Block 0x16f
[0x16f:0x177]
---
Predecessors: [0x163]
Successors: [0x3a6]
---
0x16f JUMPDEST
0x170 POP
0x171 PUSH2 0xde
0x174 PUSH2 0x3a6
0x177 JUMP
---
0x16f: JUMPDEST 
0x171: V123 = 0xde
0x174: V124 = 0x3a6
0x177: JUMP 0x3a6
---
Entry stack: [V13, V119]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V13, 0xde]

================================

Block 0x178
[0x178:0x17f]
---
Predecessors: [0x74]
Successors: [0x180, 0x184]
---
0x178 JUMPDEST
0x179 CALLVALUE
0x17a DUP1
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x178: JUMPDEST 
0x179: V125 = CALLVALUE
0x17b: V126 = ISZERO V125
0x17c: V127 = 0x184
0x17f: JUMPI 0x184 V126
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V13, V125]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x178]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V128 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V13, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V125]

================================

Block 0x184
[0x184:0x198]
---
Predecessors: [0x178]
Successors: [0x3b5]
---
0x184 JUMPDEST
0x185 POP
0x186 PUSH2 0x88
0x189 PUSH1 0x1
0x18b PUSH1 0xa0
0x18d PUSH1 0x2
0x18f EXP
0x190 SUB
0x191 PUSH1 0x4
0x193 CALLDATALOAD
0x194 AND
0x195 PUSH2 0x3b5
0x198 JUMP
---
0x184: JUMPDEST 
0x186: V129 = 0x88
0x189: V130 = 0x1
0x18b: V131 = 0xa0
0x18d: V132 = 0x2
0x18f: V133 = EXP 0x2 0xa0
0x190: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x191: V135 = 0x4
0x193: V136 = CALLDATALOAD 0x4
0x194: V137 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x195: V138 = 0x3b5
0x198: JUMP 0x3b5
---
Entry stack: [V13, V125]
Stack pops: 1
Stack additions: [0x88, V137]
Exit stack: [V13, 0x88, V137]

================================

Block 0x199
[0x199:0x1dd]
---
Predecessors: [0x7f]
Successors: [0x1de, 0x1e2]
---
0x199 JUMPDEST
0x19a PUSH1 0x0
0x19c DUP1
0x19d DUP1
0x19e PUSH2 0x40b
0x1a1 PUSH1 0x15
0x1a3 DUP6
0x1a4 MUL
0x1a5 DIV
0x1a6 SWAP3
0x1a7 POP
0x1a8 PUSH2 0x40b
0x1ab PUSH1 0xe
0x1ad DUP6
0x1ae MUL
0x1af PUSH1 0x2
0x1b1 SLOAD
0x1b2 PUSH1 0x4
0x1b4 SLOAD
0x1b5 PUSH1 0x40
0x1b7 MLOAD
0x1b8 SWAP4
0x1b9 SWAP1
0x1ba SWAP3
0x1bb DIV
0x1bc SWAP5
0x1bd POP
0x1be PUSH1 0x1
0x1c0 PUSH1 0xa0
0x1c2 PUSH1 0x2
0x1c4 EXP
0x1c5 SUB
0x1c6 AND
0x1c7 SWAP2
0x1c8 DUP6
0x1c9 SWAP1
0x1ca PUSH1 0x0
0x1cc DUP2
0x1cd DUP2
0x1ce DUP2
0x1cf DUP6
0x1d0 DUP9
0x1d1 DUP9
0x1d2 CALL
0x1d3 SWAP4
0x1d4 POP
0x1d5 POP
0x1d6 POP
0x1d7 POP
0x1d8 ISZERO
0x1d9 ISZERO
0x1da PUSH2 0x1e2
0x1dd JUMPI
---
0x199: JUMPDEST 
0x19a: V139 = 0x0
0x19e: V140 = 0x40b
0x1a1: V141 = 0x15
0x1a4: V142 = MUL V42 0x15
0x1a5: V143 = DIV V142 0x40b
0x1a8: V144 = 0x40b
0x1ab: V145 = 0xe
0x1ae: V146 = MUL V42 0xe
0x1af: V147 = 0x2
0x1b1: V148 = S[0x2]
0x1b2: V149 = 0x4
0x1b4: V150 = S[0x4]
0x1b5: V151 = 0x40
0x1b7: V152 = M[0x40]
0x1bb: V153 = DIV V146 0x40b
0x1be: V154 = 0x1
0x1c0: V155 = 0xa0
0x1c2: V156 = 0x2
0x1c4: V157 = EXP 0x2 0xa0
0x1c5: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c6: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x1ca: V160 = 0x0
0x1d2: V161 = CALL V150 V159 V143 V152 0x0 V152 0x0
0x1d8: V162 = ISZERO V161
0x1d9: V163 = ISZERO V162
0x1da: V164 = 0x1e2
0x1dd: JUMPI 0x1e2 V163
---
Entry stack: [V13, 0x88, V42]
Stack pops: 1
Stack additions: [S0, V143, V153, 0x0]
Exit stack: [V13, 0x88, V42, V143, V153, 0x0]

================================

Block 0x1de
[0x1de:0x1e1]
---
Predecessors: [0x199]
Successors: []
---
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 REVERT
---
0x1de: V165 = 0x0
0x1e1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V42, V143, V153, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V42, V143, V153, 0x0]

================================

Block 0x1e2
[0x1e2:0x20d]
---
Predecessors: [0x199]
Successors: [0x20e, 0x212]
---
0x1e2 JUMPDEST
0x1e3 PUSH1 0x3
0x1e5 SLOAD
0x1e6 PUSH1 0x4
0x1e8 SLOAD
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec PUSH1 0x1
0x1ee PUSH1 0xa0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 SUB
0x1f4 SWAP1
0x1f5 SWAP3
0x1f6 AND
0x1f7 SWAP2
0x1f8 DUP5
0x1f9 SWAP1
0x1fa PUSH1 0x0
0x1fc DUP2
0x1fd DUP2
0x1fe DUP2
0x1ff DUP6
0x200 DUP9
0x201 DUP9
0x202 CALL
0x203 SWAP4
0x204 POP
0x205 POP
0x206 POP
0x207 POP
0x208 ISZERO
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V166 = 0x3
0x1e5: V167 = S[0x3]
0x1e6: V168 = 0x4
0x1e8: V169 = S[0x4]
0x1e9: V170 = 0x40
0x1eb: V171 = M[0x40]
0x1ec: V172 = 0x1
0x1ee: V173 = 0xa0
0x1f0: V174 = 0x2
0x1f2: V175 = EXP 0x2 0xa0
0x1f3: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f6: V177 = AND V167 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V178 = 0x0
0x202: V179 = CALL V169 V177 V153 V171 0x0 V171 0x0
0x208: V180 = ISZERO V179
0x209: V181 = ISZERO V180
0x20a: V182 = 0x212
0x20d: JUMPI 0x212 V181
---
Entry stack: [V13, 0x88, V42, V143, V153, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x88, V42, V143, V153, 0x0]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x1e2]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V183 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V42, V143, V153, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V42, V143, V153, 0x0]

================================

Block 0x212
[0x212:0x244]
---
Predecessors: [0x1e2]
Successors: [0x245, 0x249]
---
0x212 JUMPDEST
0x213 POP
0x214 PUSH1 0x1
0x216 SLOAD
0x217 PUSH1 0x4
0x219 SLOAD
0x21a PUSH1 0x40
0x21c MLOAD
0x21d DUP5
0x21e DUP7
0x21f SUB
0x220 DUP5
0x221 SWAP1
0x222 SUB
0x223 SWAP3
0x224 PUSH1 0x1
0x226 PUSH1 0xa0
0x228 PUSH1 0x2
0x22a EXP
0x22b SUB
0x22c AND
0x22d SWAP2
0x22e SWAP1
0x22f DUP4
0x230 SWAP1
0x231 PUSH1 0x0
0x233 DUP2
0x234 DUP2
0x235 DUP2
0x236 DUP6
0x237 DUP9
0x238 DUP9
0x239 CALL
0x23a SWAP4
0x23b POP
0x23c POP
0x23d POP
0x23e POP
0x23f ISZERO
0x240 ISZERO
0x241 PUSH2 0x249
0x244 JUMPI
---
0x212: JUMPDEST 
0x214: V184 = 0x1
0x216: V185 = S[0x1]
0x217: V186 = 0x4
0x219: V187 = S[0x4]
0x21a: V188 = 0x40
0x21c: V189 = M[0x40]
0x21f: V190 = SUB V42 V143
0x222: V191 = SUB V190 V153
0x224: V192 = 0x1
0x226: V193 = 0xa0
0x228: V194 = 0x2
0x22a: V195 = EXP 0x2 0xa0
0x22b: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22c: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x231: V198 = 0x0
0x239: V199 = CALL V187 V197 V191 V189 0x0 V189 0x0
0x23f: V200 = ISZERO V199
0x240: V201 = ISZERO V200
0x241: V202 = 0x249
0x244: JUMPI 0x249 V201
---
Entry stack: [V13, 0x88, V42, V143, V153, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V191]
Exit stack: [V13, 0x88, V42, V143, V153, V191]

================================

Block 0x245
[0x245:0x248]
---
Predecessors: [0x212]
Successors: []
---
0x245 PUSH1 0x0
0x247 DUP1
0x248 REVERT
---
0x245: V203 = 0x0
0x248: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V42, V143, V153, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V42, V143, V153, V191]

================================

Block 0x249
[0x249:0x24e]
---
Predecessors: [0x212]
Successors: [0x88]
---
0x249 JUMPDEST
0x24a POP
0x24b POP
0x24c POP
0x24d POP
0x24e JUMP
---
0x249: JUMPDEST 
0x24e: JUMP 0x88
---
Entry stack: [V13, 0x88, V42, V143, V153, V191]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x24f
[0x24f:0x265]
---
Predecessors: [0x96]
Successors: [0x266, 0x26a]
---
0x24f JUMPDEST
0x250 PUSH1 0x0
0x252 SLOAD
0x253 CALLER
0x254 PUSH1 0x1
0x256 PUSH1 0xa0
0x258 PUSH1 0x2
0x25a EXP
0x25b SUB
0x25c SWAP1
0x25d DUP2
0x25e AND
0x25f SWAP2
0x260 AND
0x261 EQ
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x24f: JUMPDEST 
0x250: V204 = 0x0
0x252: V205 = S[0x0]
0x253: V206 = CALLER
0x254: V207 = 0x1
0x256: V208 = 0xa0
0x258: V209 = 0x2
0x25a: V210 = EXP 0x2 0xa0
0x25b: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x260: V213 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x261: V214 = EQ V213 V212
0x262: V215 = 0x26a
0x265: JUMPI 0x26a V214
---
Entry stack: [V13, 0x88, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V50]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x24f]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V216 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V50]

================================

Block 0x26a
[0x26a:0x26e]
---
Predecessors: [0x24f]
Successors: [0x88]
---
0x26a JUMPDEST
0x26b PUSH1 0x4
0x26d SSTORE
0x26e JUMP
---
0x26a: JUMPDEST 
0x26b: V217 = 0x4
0x26d: S[0x4] = V50
0x26e: JUMP 0x88
---
Entry stack: [V13, 0x88, V50]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x26f
[0x26f:0x274]
---
Predecessors: [0xae]
Successors: [0xb7]
---
0x26f JUMPDEST
0x270 PUSH1 0x4
0x272 SLOAD
0x273 DUP2
0x274 JUMP
---
0x26f: JUMPDEST 
0x270: V218 = 0x4
0x272: V219 = S[0x4]
0x274: JUMP 0xb7
---
Entry stack: [V13, 0xb7]
Stack pops: 1
Stack additions: [S0, V219]
Exit stack: [V13, 0xb7, V219]

================================

Block 0x275
[0x275:0x283]
---
Predecessors: [0xd5]
Successors: [0xde]
---
0x275 JUMPDEST
0x276 PUSH1 0x0
0x278 SLOAD
0x279 PUSH1 0x1
0x27b PUSH1 0xa0
0x27d PUSH1 0x2
0x27f EXP
0x280 SUB
0x281 AND
0x282 DUP2
0x283 JUMP
---
0x275: JUMPDEST 
0x276: V220 = 0x0
0x278: V221 = S[0x0]
0x279: V222 = 0x1
0x27b: V223 = 0xa0
0x27d: V224 = 0x2
0x27f: V225 = EXP 0x2 0xa0
0x280: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x283: JUMP 0xde
---
Entry stack: [V13, 0xde]
Stack pops: 1
Stack additions: [S0, V227]
Exit stack: [V13, 0xde, V227]

================================

Block 0x284
[0x284:0x292]
---
Predecessors: [0x106]
Successors: [0xde]
---
0x284 JUMPDEST
0x285 PUSH1 0x3
0x287 SLOAD
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 AND
0x291 DUP2
0x292 JUMP
---
0x284: JUMPDEST 
0x285: V228 = 0x3
0x287: V229 = S[0x3]
0x288: V230 = 0x1
0x28a: V231 = 0xa0
0x28c: V232 = 0x2
0x28e: V233 = EXP 0x2 0xa0
0x28f: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x292: JUMP 0xde
---
Entry stack: [V13, 0xde]
Stack pops: 1
Stack additions: [S0, V235]
Exit stack: [V13, 0xde, V235]

================================

Block 0x293
[0x293:0x2a9]
---
Predecessors: [0x11b]
Successors: [0x2aa, 0x2ae]
---
0x293 JUMPDEST
0x294 PUSH1 0x0
0x296 SLOAD
0x297 CALLER
0x298 PUSH1 0x1
0x29a PUSH1 0xa0
0x29c PUSH1 0x2
0x29e EXP
0x29f SUB
0x2a0 SWAP1
0x2a1 DUP2
0x2a2 AND
0x2a3 SWAP2
0x2a4 AND
0x2a5 EQ
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x293: JUMPDEST 
0x294: V236 = 0x0
0x296: V237 = S[0x0]
0x297: V238 = CALLER
0x298: V239 = 0x1
0x29a: V240 = 0xa0
0x29c: V241 = 0x2
0x29e: V242 = EXP 0x2 0xa0
0x29f: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a2: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x2a4: V245 = AND V237 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V246 = EQ V245 V244
0x2a6: V247 = 0x2ae
0x2a9: JUMPI 0x2ae V246
---
Entry stack: [V13, 0x88, V100, V103, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V100, V103, V105]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x293]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V248 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V100, V103, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V100, V103, V105]

================================

Block 0x2ae
[0x2ae:0x30c]
---
Predecessors: [0x293]
Successors: [0x30d, 0x311]
---
0x2ae JUMPDEST
0x2af DUP3
0x2b0 PUSH1 0x1
0x2b2 PUSH1 0xa0
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 SUB
0x2b8 AND
0x2b9 PUSH4 0x95ea7b3
0x2be DUP4
0x2bf DUP4
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 DUP4
0x2c4 PUSH4 0xffffffff
0x2c9 AND
0x2ca PUSH1 0xe0
0x2cc PUSH1 0x2
0x2ce EXP
0x2cf MUL
0x2d0 DUP2
0x2d1 MSTORE
0x2d2 PUSH1 0x4
0x2d4 ADD
0x2d5 DUP1
0x2d6 DUP4
0x2d7 PUSH1 0x1
0x2d9 PUSH1 0xa0
0x2db PUSH1 0x2
0x2dd EXP
0x2de SUB
0x2df AND
0x2e0 PUSH1 0x1
0x2e2 PUSH1 0xa0
0x2e4 PUSH1 0x2
0x2e6 EXP
0x2e7 SUB
0x2e8 AND
0x2e9 DUP2
0x2ea MSTORE
0x2eb PUSH1 0x20
0x2ed ADD
0x2ee DUP3
0x2ef DUP2
0x2f0 MSTORE
0x2f1 PUSH1 0x20
0x2f3 ADD
0x2f4 SWAP3
0x2f5 POP
0x2f6 POP
0x2f7 POP
0x2f8 PUSH1 0x20
0x2fa PUSH1 0x40
0x2fc MLOAD
0x2fd DUP1
0x2fe DUP4
0x2ff SUB
0x300 DUP2
0x301 PUSH1 0x0
0x303 DUP8
0x304 DUP1
0x305 EXTCODESIZE
0x306 ISZERO
0x307 DUP1
0x308 ISZERO
0x309 PUSH2 0x311
0x30c JUMPI
---
0x2ae: JUMPDEST 
0x2b0: V249 = 0x1
0x2b2: V250 = 0xa0
0x2b4: V251 = 0x2
0x2b6: V252 = EXP 0x2 0xa0
0x2b7: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b8: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x2b9: V255 = 0x95ea7b3
0x2c0: V256 = 0x40
0x2c2: V257 = M[0x40]
0x2c4: V258 = 0xffffffff
0x2c9: V259 = AND 0xffffffff 0x95ea7b3
0x2ca: V260 = 0xe0
0x2cc: V261 = 0x2
0x2ce: V262 = EXP 0x2 0xe0
0x2cf: V263 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x95ea7b3
0x2d1: M[V257] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x2d2: V264 = 0x4
0x2d4: V265 = ADD 0x4 V257
0x2d7: V266 = 0x1
0x2d9: V267 = 0xa0
0x2db: V268 = 0x2
0x2dd: V269 = EXP 0x2 0xa0
0x2de: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2df: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x2e0: V272 = 0x1
0x2e2: V273 = 0xa0
0x2e4: V274 = 0x2
0x2e6: V275 = EXP 0x2 0xa0
0x2e7: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e8: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x2ea: M[V265] = V277
0x2eb: V278 = 0x20
0x2ed: V279 = ADD 0x20 V265
0x2f0: M[V279] = V105
0x2f1: V280 = 0x20
0x2f3: V281 = ADD 0x20 V279
0x2f8: V282 = 0x20
0x2fa: V283 = 0x40
0x2fc: V284 = M[0x40]
0x2ff: V285 = SUB V281 V284
0x301: V286 = 0x0
0x305: V287 = EXTCODESIZE V254
0x306: V288 = ISZERO V287
0x308: V289 = ISZERO V288
0x309: V290 = 0x311
0x30c: JUMPI 0x311 V289
---
Entry stack: [V13, 0x88, V100, V103, V105]
Stack pops: 3
Stack additions: [S2, S1, S0, V254, 0x95ea7b3, V281, 0x20, V284, V285, V284, 0x0, V254, V288]
Exit stack: [V13, 0x88, V100, V103, V105, V254, 0x95ea7b3, V281, 0x20, V284, V285, V284, 0x0, V254, V288]

================================

Block 0x30d
[0x30d:0x310]
---
Predecessors: [0x2ae]
Successors: []
---
0x30d PUSH1 0x0
0x30f DUP1
0x310 REVERT
---
0x30d: V291 = 0x0
0x310: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V100, V103, V105, V254, 0x95ea7b3, V281, 0x20, V284, V285, V284, 0x0, V254, V288]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V100, V103, V105, V254, 0x95ea7b3, V281, 0x20, V284, V285, V284, 0x0, V254, V288]

================================

Block 0x311
[0x311:0x31b]
---
Predecessors: [0x2ae]
Successors: [0x31c, 0x325]
---
0x311 JUMPDEST
0x312 POP
0x313 GAS
0x314 CALL
0x315 ISZERO
0x316 DUP1
0x317 ISZERO
0x318 PUSH2 0x325
0x31b JUMPI
---
0x311: JUMPDEST 
0x313: V292 = GAS
0x314: V293 = CALL V292 V254 0x0 V284 V285 V284 0x20
0x315: V294 = ISZERO V293
0x317: V295 = ISZERO V294
0x318: V296 = 0x325
0x31b: JUMPI 0x325 V295
---
Entry stack: [V13, 0x88, V100, V103, V105, V254, 0x95ea7b3, V281, 0x20, V284, V285, V284, 0x0, V254, V288]
Stack pops: 7
Stack additions: [V294]
Exit stack: [V13, 0x88, V100, V103, V105, V254, 0x95ea7b3, V281, V294]

================================

Block 0x31c
[0x31c:0x324]
---
Predecessors: [0x311]
Successors: []
---
0x31c RETURNDATASIZE
0x31d PUSH1 0x0
0x31f DUP1
0x320 RETURNDATACOPY
0x321 RETURNDATASIZE
0x322 PUSH1 0x0
0x324 REVERT
---
0x31c: V297 = RETURNDATASIZE
0x31d: V298 = 0x0
0x320: RETURNDATACOPY 0x0 0x0 V297
0x321: V299 = RETURNDATASIZE
0x322: V300 = 0x0
0x324: REVERT 0x0 V299
---
Entry stack: [V13, 0x88, V100, V103, V105, V254, 0x95ea7b3, V281, V294]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V100, V103, V105, V254, 0x95ea7b3, V281, V294]

================================

Block 0x325
[0x325:0x336]
---
Predecessors: [0x311]
Successors: [0x337, 0x33b]
---
0x325 JUMPDEST
0x326 POP
0x327 POP
0x328 POP
0x329 POP
0x32a PUSH1 0x40
0x32c MLOAD
0x32d RETURNDATASIZE
0x32e PUSH1 0x20
0x330 DUP2
0x331 LT
0x332 ISZERO
0x333 PUSH2 0x33b
0x336 JUMPI
---
0x325: JUMPDEST 
0x32a: V301 = 0x40
0x32c: V302 = M[0x40]
0x32d: V303 = RETURNDATASIZE
0x32e: V304 = 0x20
0x331: V305 = LT V303 0x20
0x332: V306 = ISZERO V305
0x333: V307 = 0x33b
0x336: JUMPI 0x33b V306
---
Entry stack: [V13, 0x88, V100, V103, V105, V254, 0x95ea7b3, V281, V294]
Stack pops: 4
Stack additions: [V302, V303]
Exit stack: [V13, 0x88, V100, V103, V105, V302, V303]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x325]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V308 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V100, V103, V105, V302, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V100, V103, V105, V302, V303]

================================

Block 0x33b
[0x33b:0x341]
---
Predecessors: [0x325]
Successors: [0x88]
---
0x33b JUMPDEST
0x33c POP
0x33d POP
0x33e POP
0x33f POP
0x340 POP
0x341 JUMP
---
0x33b: JUMPDEST 
0x341: JUMP 0x88
---
Entry stack: [V13, 0x88, V100, V103, V105, V302, V303]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x342
[0x342:0x358]
---
Predecessors: [0x145]
Successors: [0x359, 0x35d]
---
0x342 JUMPDEST
0x343 PUSH1 0x0
0x345 SLOAD
0x346 CALLER
0x347 PUSH1 0x1
0x349 PUSH1 0xa0
0x34b PUSH1 0x2
0x34d EXP
0x34e SUB
0x34f SWAP1
0x350 DUP2
0x351 AND
0x352 SWAP2
0x353 AND
0x354 EQ
0x355 PUSH2 0x35d
0x358 JUMPI
---
0x342: JUMPDEST 
0x343: V309 = 0x0
0x345: V310 = S[0x0]
0x346: V311 = CALLER
0x347: V312 = 0x1
0x349: V313 = 0xa0
0x34b: V314 = 0x2
0x34d: V315 = EXP 0x2 0xa0
0x34e: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x351: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x353: V318 = AND V310 0xffffffffffffffffffffffffffffffffffffffff
0x354: V319 = EQ V318 V317
0x355: V320 = 0x35d
0x358: JUMPI 0x35d V319
---
Entry stack: [V13, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88]

================================

Block 0x359
[0x359:0x35c]
---
Predecessors: [0x342]
Successors: []
---
0x359 PUSH1 0x0
0x35b DUP1
0x35c REVERT
---
0x359: V321 = 0x0
0x35c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88]

================================

Block 0x35d
[0x35d:0x390]
---
Predecessors: [0x342]
Successors: [0x391, 0x395]
---
0x35d JUMPDEST
0x35e CALLER
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 AND
0x368 PUSH1 0x4
0x36a SLOAD
0x36b ADDRESS
0x36c PUSH1 0x1
0x36e PUSH1 0xa0
0x370 PUSH1 0x2
0x372 EXP
0x373 SUB
0x374 AND
0x375 BALANCE
0x376 PUSH1 0x40
0x378 MLOAD
0x379 PUSH1 0x0
0x37b PUSH1 0x40
0x37d MLOAD
0x37e DUP1
0x37f DUP4
0x380 SUB
0x381 DUP2
0x382 DUP6
0x383 DUP9
0x384 DUP9
0x385 CALL
0x386 SWAP4
0x387 POP
0x388 POP
0x389 POP
0x38a POP
0x38b ISZERO
0x38c ISZERO
0x38d PUSH2 0x395
0x390 JUMPI
---
0x35d: JUMPDEST 
0x35e: V322 = CALLER
0x35f: V323 = 0x1
0x361: V324 = 0xa0
0x363: V325 = 0x2
0x365: V326 = EXP 0x2 0xa0
0x366: V327 = SUB 0x10000000000000000000000000000000000000000 0x1
0x367: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x368: V329 = 0x4
0x36a: V330 = S[0x4]
0x36b: V331 = ADDRESS
0x36c: V332 = 0x1
0x36e: V333 = 0xa0
0x370: V334 = 0x2
0x372: V335 = EXP 0x2 0xa0
0x373: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x374: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x375: V338 = BALANCE V337
0x376: V339 = 0x40
0x378: V340 = M[0x40]
0x379: V341 = 0x0
0x37b: V342 = 0x40
0x37d: V343 = M[0x40]
0x380: V344 = SUB V340 V343
0x385: V345 = CALL V330 V328 V338 V343 V344 V343 0x0
0x38b: V346 = ISZERO V345
0x38c: V347 = ISZERO V346
0x38d: V348 = 0x395
0x390: JUMPI 0x395 V347
---
Entry stack: [V13, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88]

================================

Block 0x391
[0x391:0x394]
---
Predecessors: [0x35d]
Successors: []
---
0x391 PUSH1 0x0
0x393 DUP1
0x394 REVERT
---
0x391: V349 = 0x0
0x394: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88]

================================

Block 0x395
[0x395:0x396]
---
Predecessors: [0x35d]
Successors: [0x88]
---
0x395 JUMPDEST
0x396 JUMP
---
0x395: JUMPDEST 
0x396: JUMP 0x88
---
Entry stack: [V13, 0x88]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x397
[0x397:0x3a5]
---
Predecessors: [0x15a]
Successors: [0xde]
---
0x397 JUMPDEST
0x398 PUSH1 0x2
0x39a SLOAD
0x39b PUSH1 0x1
0x39d PUSH1 0xa0
0x39f PUSH1 0x2
0x3a1 EXP
0x3a2 SUB
0x3a3 AND
0x3a4 DUP2
0x3a5 JUMP
---
0x397: JUMPDEST 
0x398: V350 = 0x2
0x39a: V351 = S[0x2]
0x39b: V352 = 0x1
0x39d: V353 = 0xa0
0x39f: V354 = 0x2
0x3a1: V355 = EXP 0x2 0xa0
0x3a2: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a3: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x3a5: JUMP 0xde
---
Entry stack: [V13, 0xde]
Stack pops: 1
Stack additions: [S0, V357]
Exit stack: [V13, 0xde, V357]

================================

Block 0x3a6
[0x3a6:0x3b4]
---
Predecessors: [0x16f]
Successors: [0xde]
---
0x3a6 JUMPDEST
0x3a7 PUSH1 0x1
0x3a9 SLOAD
0x3aa PUSH1 0x1
0x3ac PUSH1 0xa0
0x3ae PUSH1 0x2
0x3b0 EXP
0x3b1 SUB
0x3b2 AND
0x3b3 DUP2
0x3b4 JUMP
---
0x3a6: JUMPDEST 
0x3a7: V358 = 0x1
0x3a9: V359 = S[0x1]
0x3aa: V360 = 0x1
0x3ac: V361 = 0xa0
0x3ae: V362 = 0x2
0x3b0: V363 = EXP 0x2 0xa0
0x3b1: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b2: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x3b4: JUMP 0xde
---
Entry stack: [V13, 0xde]
Stack pops: 1
Stack additions: [S0, V365]
Exit stack: [V13, 0xde, V365]

================================

Block 0x3b5
[0x3b5:0x3cb]
---
Predecessors: [0x184]
Successors: [0x3cc, 0x3d0]
---
0x3b5 JUMPDEST
0x3b6 PUSH1 0x0
0x3b8 SLOAD
0x3b9 CALLER
0x3ba PUSH1 0x1
0x3bc PUSH1 0xa0
0x3be PUSH1 0x2
0x3c0 EXP
0x3c1 SUB
0x3c2 SWAP1
0x3c3 DUP2
0x3c4 AND
0x3c5 SWAP2
0x3c6 AND
0x3c7 EQ
0x3c8 PUSH2 0x3d0
0x3cb JUMPI
---
0x3b5: JUMPDEST 
0x3b6: V366 = 0x0
0x3b8: V367 = S[0x0]
0x3b9: V368 = CALLER
0x3ba: V369 = 0x1
0x3bc: V370 = 0xa0
0x3be: V371 = 0x2
0x3c0: V372 = EXP 0x2 0xa0
0x3c1: V373 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c4: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x3c6: V375 = AND V367 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: V376 = EQ V375 V374
0x3c8: V377 = 0x3d0
0x3cb: JUMPI 0x3d0 V376
---
Entry stack: [V13, 0x88, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V137]

================================

Block 0x3cc
[0x3cc:0x3cf]
---
Predecessors: [0x3b5]
Successors: []
---
0x3cc PUSH1 0x0
0x3ce DUP1
0x3cf REVERT
---
0x3cc: V378 = 0x0
0x3cf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V137]

================================

Block 0x3d0
[0x3d0:0x3e0]
---
Predecessors: [0x3b5]
Successors: [0x3e1, 0x3e5]
---
0x3d0 JUMPDEST
0x3d1 PUSH1 0x1
0x3d3 PUSH1 0xa0
0x3d5 PUSH1 0x2
0x3d7 EXP
0x3d8 SUB
0x3d9 DUP2
0x3da AND
0x3db ISZERO
0x3dc ISZERO
0x3dd PUSH2 0x3e5
0x3e0 JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V379 = 0x1
0x3d3: V380 = 0xa0
0x3d5: V381 = 0x2
0x3d7: V382 = EXP 0x2 0xa0
0x3d8: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3da: V384 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x3db: V385 = ISZERO V384
0x3dc: V386 = ISZERO V385
0x3dd: V387 = 0x3e5
0x3e0: JUMPI 0x3e5 V386
---
Entry stack: [V13, 0x88, V137]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x88, V137]

================================

Block 0x3e1
[0x3e1:0x3e4]
---
Predecessors: [0x3d0]
Successors: []
---
0x3e1 PUSH1 0x0
0x3e3 DUP1
0x3e4 REVERT
---
0x3e1: V388 = 0x0
0x3e4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V137]

================================

Block 0x3e5
[0x3e5:0x406]
---
Predecessors: [0x3d0]
Successors: [0x88]
---
0x3e5 JUMPDEST
0x3e6 PUSH1 0x0
0x3e8 DUP1
0x3e9 SLOAD
0x3ea PUSH1 0x1
0x3ec PUSH1 0xa0
0x3ee PUSH1 0x2
0x3f0 EXP
0x3f1 SUB
0x3f2 NOT
0x3f3 AND
0x3f4 PUSH1 0x1
0x3f6 PUSH1 0xa0
0x3f8 PUSH1 0x2
0x3fa EXP
0x3fb SUB
0x3fc SWAP3
0x3fd SWAP1
0x3fe SWAP3
0x3ff AND
0x400 SWAP2
0x401 SWAP1
0x402 SWAP2
0x403 OR
0x404 SWAP1
0x405 SSTORE
0x406 JUMP
---
0x3e5: JUMPDEST 
0x3e6: V389 = 0x0
0x3e9: V390 = S[0x0]
0x3ea: V391 = 0x1
0x3ec: V392 = 0xa0
0x3ee: V393 = 0x2
0x3f0: V394 = EXP 0x2 0xa0
0x3f1: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f2: V396 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3f3: V397 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V390
0x3f4: V398 = 0x1
0x3f6: V399 = 0xa0
0x3f8: V400 = 0x2
0x3fa: V401 = EXP 0x2 0xa0
0x3fb: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ff: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x403: V404 = OR V403 V397
0x405: S[0x0] = V404
0x406: JUMP 0x88
---
Entry stack: [V13, 0x88, V137]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x407
[0x407:0x437]
---
Predecessors: []
Successors: []
---
0x407 STOP
0x408 LOG1
0x409 PUSH6 0x627a7a723058
0x410 SHA3
0x411 SWAP14
0x412 MISSING 0xc5
0x413 MISSING 0xcf
0x414 MISSING 0x1f
0x415 EXTCODESIZE
0x416 MISSING 0x5f
0x417 MISSING 0x25
0x418 SWAP14
0x419 CALLER
0x41a MISSING 0xaf
0x41b DUP9
0x41c CALLDATACOPY
0x41d MISSING 0x46
0x41e DUP5
0x41f SHL
0x420 MISSING 0xd2
0x421 DUP7
0x422 MSTORE8
0x423 MISSING 0x1e
0x424 AND
0x425 MISSING 0xb4
0x426 JUMPDEST
0x427 DELEGATECALL
0x428 PUSH15 0x5337d5abbe0d6540029
---
0x407: STOP 
0x408: LOG S0 S1 S2
0x409: V405 = 0x627a7a723058
0x410: V406 = SHA3 0x627a7a723058 S3
0x412: MISSING 0xc5
0x413: MISSING 0xcf
0x414: MISSING 0x1f
0x415: V407 = EXTCODESIZE S0
0x416: MISSING 0x5f
0x417: MISSING 0x25
0x419: V408 = CALLER
0x41a: MISSING 0xaf
0x41c: CALLDATACOPY S8 S0 S1
0x41d: MISSING 0x46
0x41f: V409 = SHL S4 S0
0x420: MISSING 0xd2
0x422: M8[S6] = S0
0x423: MISSING 0x1e
0x424: V410 = AND S0 S1
0x425: MISSING 0xb4
0x426: JUMPDEST 
0x427: V411 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x428: V412 = 0x5337d5abbe0d6540029
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V406, V407, V408, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, S2, S3, S4, S5, S6, S7, S8, V409, S1, S2, S3, S4, S1, S2, S3, S4, S5, S6, V410, 0x5337d5abbe0d6540029, V411]
Exit stack: []

================================

Function 0:
Public function signature: 0x1d709ab4
Entry block: 0x8a
Exit block: 0x88
Body: 0x88, 0x8a, 0x92, 0x96, 0x24f, 0x266, 0x26a

Function 1:
Public function signature: 0x6ca7c216
Entry block: 0xa2
Exit block: 0xb7
Body: 0xa2, 0xaa, 0xae, 0xb7, 0x26f

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xc9
Exit block: 0xde
Body: 0xc9, 0xd1, 0xd5, 0xde, 0x275

Function 3:
Public function signature: 0x8f272c0b
Entry block: 0xfa
Exit block: 0xde
Body: 0xde, 0xfa, 0x102, 0x106, 0x284

Function 4:
Public function signature: 0xb029c2c8
Entry block: 0x10f
Exit block: 0x88
Body: 0x88, 0x10f, 0x117, 0x11b, 0x293, 0x2aa, 0x2ae, 0x30d, 0x311, 0x31c, 0x325, 0x337, 0x33b

Function 5:
Public function signature: 0xcbc1cfd2
Entry block: 0x139
Exit block: 0x88
Body: 0x88, 0x139, 0x141, 0x145, 0x342, 0x359, 0x35d, 0x391, 0x395

Function 6:
Public function signature: 0xe4171746
Entry block: 0x14e
Exit block: 0xde
Body: 0xde, 0x14e, 0x156, 0x15a, 0x397

Function 7:
Public function signature: 0xf023d600
Entry block: 0x163
Exit block: 0xde
Body: 0xde, 0x163, 0x16b, 0x16f, 0x3a6

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x178
Exit block: 0x88
Body: 0x88, 0x178, 0x180, 0x184, 0x3b5, 0x3cc, 0x3d0, 0x3e1, 0x3e5

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x88
Body: 0x7f, 0x88, 0x199, 0x1de, 0x1e2, 0x20e, 0x212, 0x245, 0x249

