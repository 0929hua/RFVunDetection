Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x60]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x60
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x60
0xa: JUMPI 0x60 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xff]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x1b9265b8
0x3a EQ
0x3b PUSH2 0xff
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x1b9265b8
0x3a: V12 = EQ 0x1b9265b8 V10
0x3b: V13 = 0xff
0x3e: JUMPI 0xff V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x109]
---
0x3f DUP1
0x40 PUSH4 0x40c82671
0x45 EQ
0x46 PUSH2 0x109
0x49 JUMPI
---
0x40: V14 = 0x40c82671
0x45: V15 = EQ 0x40c82671 V10
0x46: V16 = 0x109
0x49: JUMPI 0x109 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x129]
---
0x4a DUP1
0x4b PUSH4 0x63bd1d4a
0x50 EQ
0x51 PUSH2 0x129
0x54 JUMPI
---
0x4b: V17 = 0x63bd1d4a
0x50: V18 = EQ 0x63bd1d4a V10
0x51: V19 = 0x129
0x54: JUMPI 0x129 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x13b]
---
0x55 DUP1
0x56 PUSH4 0xd1d80fdf
0x5b EQ
0x5c PUSH2 0x13b
0x5f JUMPI
---
0x56: V20 = 0xd1d80fdf
0x5b: V21 = EQ 0xd1d80fdf V10
0x5c: V22 = 0x13b
0x5f: JUMPI 0x13b V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x0, 0x55]
Successors: [0x64]
---
0x60 JUMPDEST
0x61 PUSH2 0xfd
---
0x60: JUMPDEST 
0x61: V23 = 0xfd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfd]
Exit stack: [V10, 0xfd]

================================

Block 0x64
[0x64:0xe7]
---
Predecessors: [0x60]
Successors: [0xe8, 0xe9]
---
0x64 JUMPDEST
0x65 PUSH1 0x0
0x67 PUSH1 0x0
0x69 SWAP1
0x6a SLOAD
0x6b SWAP1
0x6c PUSH2 0x100
0x6f EXP
0x70 SWAP1
0x71 DIV
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d AND
0x9e PUSH4 0xdb88031a
0xa3 PUSH1 0x40
0xa5 MLOAD
0xa6 DUP2
0xa7 PUSH4 0xffffffff
0xac AND
0xad PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xcb MUL
0xcc DUP2
0xcd MSTORE
0xce PUSH1 0x4
0xd0 ADD
0xd1 DUP1
0xd2 SWAP1
0xd3 POP
0xd4 PUSH1 0x0
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 DUP1
0xda DUP4
0xdb SUB
0xdc DUP2
0xdd PUSH1 0x0
0xdf DUP8
0xe0 DUP1
0xe1 EXTCODESIZE
0xe2 ISZERO
0xe3 ISZERO
0xe4 PUSH2 0xe9
0xe7 JUMPI
---
0x64: JUMPDEST 
0x65: V24 = 0x0
0x67: V25 = 0x0
0x6a: V26 = S[0x0]
0x6c: V27 = 0x100
0x6f: V28 = EXP 0x100 0x0
0x71: V29 = DIV V26 0x1
0x72: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x88: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x9e: V34 = 0xdb88031a
0xa3: V35 = 0x40
0xa5: V36 = M[0x40]
0xa7: V37 = 0xffffffff
0xac: V38 = AND 0xffffffff 0xdb88031a
0xad: V39 = 0x100000000000000000000000000000000000000000000000000000000
0xcb: V40 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xdb88031a
0xcd: M[V36] = 0xdb88031a00000000000000000000000000000000000000000000000000000000
0xce: V41 = 0x4
0xd0: V42 = ADD 0x4 V36
0xd4: V43 = 0x0
0xd6: V44 = 0x40
0xd8: V45 = M[0x40]
0xdb: V46 = SUB V42 V45
0xdd: V47 = 0x0
0xe1: V48 = EXTCODESIZE V33
0xe2: V49 = ISZERO V48
0xe3: V50 = ISZERO V49
0xe4: V51 = 0xe9
0xe7: JUMPI 0xe9 V50
---
Entry stack: [V10, 0xfd]
Stack pops: 0
Stack additions: [V33, 0xdb88031a, V42, 0x0, V45, V46, V45, 0x0, V33]
Exit stack: [V10, 0xfd, V33, 0xdb88031a, V42, 0x0, V45, V46, V45, 0x0, V33]

================================

Block 0xe8
[0xe8:0xe8]
---
Predecessors: [0x64]
Successors: []
---
0xe8 INVALID
---
0xe8: INVALID 
---
Entry stack: [V10, 0xfd, V33, 0xdb88031a, V42, 0x0, V45, V46, V45, 0x0, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfd, V33, 0xdb88031a, V42, 0x0, V45, V46, V45, 0x0, V33]

================================

Block 0xe9
[0xe9:0xf5]
---
Predecessors: [0x64]
Successors: [0xf6, 0xf7]
---
0xe9 JUMPDEST
0xea PUSH2 0x2c6
0xed GAS
0xee SUB
0xef CALL
0xf0 ISZERO
0xf1 ISZERO
0xf2 PUSH2 0xf7
0xf5 JUMPI
---
0xe9: JUMPDEST 
0xea: V52 = 0x2c6
0xed: V53 = GAS
0xee: V54 = SUB V53 0x2c6
0xef: V55 = CALL V54 V33 0x0 V45 V46 V45 0x0
0xf0: V56 = ISZERO V55
0xf1: V57 = ISZERO V56
0xf2: V58 = 0xf7
0xf5: JUMPI 0xf7 V57
---
Entry stack: [V10, 0xfd, V33, 0xdb88031a, V42, 0x0, V45, V46, V45, 0x0, V33]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xfd, V33, 0xdb88031a, V42]

================================

Block 0xf6
[0xf6:0xf6]
---
Predecessors: [0xe9]
Successors: []
---
0xf6 INVALID
---
0xf6: INVALID 
---
Entry stack: [V10, 0xfd, V33, 0xdb88031a, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfd, V33, 0xdb88031a, V42]

================================

Block 0xf7
[0xf7:0xfa]
---
Predecessors: [0xe9]
Successors: [0xfb]
---
0xf7 JUMPDEST
0xf8 POP
0xf9 POP
0xfa POP
---
0xf7: JUMPDEST 
---
Entry stack: [V10, 0xfd, V33, 0xdb88031a, V42]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0xfd]

================================

Block 0xfb
[0xfb:0xfc]
---
Predecessors: [0xf7]
Successors: [0xfd]
---
0xfb JUMPDEST
0xfc JUMP
---
0xfb: JUMPDEST 
0xfc: JUMP 0xfd
---
Entry stack: [V10, 0xfd]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xfd
[0xfd:0xfe]
---
Predecessors: [0xfb]
Successors: []
---
0xfd JUMPDEST
0xfe STOP
---
0xfd: JUMPDEST 
0xfe: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xff
[0xff:0x106]
---
Predecessors: [0xb]
Successors: [0x171]
---
0xff JUMPDEST
0x100 PUSH2 0x107
0x103 PUSH2 0x171
0x106 JUMP
---
0xff: JUMPDEST 
0x100: V59 = 0x107
0x103: V60 = 0x171
0x106: JUMP 0x171
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V10, 0x107]

================================

Block 0x107
[0x107:0x108]
---
Predecessors: [0x172]
Successors: []
---
0x107 JUMPDEST
0x108 STOP
---
0x107: JUMPDEST 
0x108: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x109
[0x109:0x10f]
---
Predecessors: [0x3f]
Successors: [0x110, 0x111]
---
0x109 JUMPDEST
0x10a CALLVALUE
0x10b ISZERO
0x10c PUSH2 0x111
0x10f JUMPI
---
0x109: JUMPDEST 
0x10a: V61 = CALLVALUE
0x10b: V62 = ISZERO V61
0x10c: V63 = 0x111
0x10f: JUMPI 0x111 V62
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x110
[0x110:0x110]
---
Predecessors: [0x109]
Successors: []
---
0x110 INVALID
---
0x110: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x111
[0x111:0x126]
---
Predecessors: [0x109]
Successors: [0x174]
---
0x111 JUMPDEST
0x112 PUSH2 0x127
0x115 PUSH1 0x4
0x117 DUP1
0x118 DUP1
0x119 CALLDATALOAD
0x11a SWAP1
0x11b PUSH1 0x20
0x11d ADD
0x11e SWAP1
0x11f SWAP2
0x120 SWAP1
0x121 POP
0x122 POP
0x123 PUSH2 0x174
0x126 JUMP
---
0x111: JUMPDEST 
0x112: V64 = 0x127
0x115: V65 = 0x4
0x119: V66 = CALLDATALOAD 0x4
0x11b: V67 = 0x20
0x11d: V68 = ADD 0x20 0x4
0x123: V69 = 0x174
0x126: JUMP 0x174
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x127, V66]
Exit stack: [V10, 0x127, V66]

================================

Block 0x127
[0x127:0x128]
---
Predecessors: [0x261]
Successors: []
---
0x127 JUMPDEST
0x128 STOP
---
0x127: JUMPDEST 
0x128: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x129
[0x129:0x12f]
---
Predecessors: [0x4a]
Successors: [0x130, 0x131]
---
0x129 JUMPDEST
0x12a CALLVALUE
0x12b ISZERO
0x12c PUSH2 0x131
0x12f JUMPI
---
0x129: JUMPDEST 
0x12a: V70 = CALLVALUE
0x12b: V71 = ISZERO V70
0x12c: V72 = 0x131
0x12f: JUMPI 0x131 V71
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x130
[0x130:0x130]
---
Predecessors: [0x129]
Successors: []
---
0x130 INVALID
---
0x130: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x131
[0x131:0x138]
---
Predecessors: [0x129]
Successors: [0x264]
---
0x131 JUMPDEST
0x132 PUSH2 0x139
0x135 PUSH2 0x264
0x138 JUMP
---
0x131: JUMPDEST 
0x132: V73 = 0x139
0x135: V74 = 0x264
0x138: JUMP 0x264
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x139]
Exit stack: [V10, 0x139]

================================

Block 0x139
[0x139:0x13a]
---
Predecessors: [0x2b5]
Successors: []
---
0x139 JUMPDEST
0x13a STOP
---
0x139: JUMPDEST 
0x13a: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13b
[0x13b:0x141]
---
Predecessors: [0x55]
Successors: [0x142, 0x143]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d ISZERO
0x13e PUSH2 0x143
0x141 JUMPI
---
0x13b: JUMPDEST 
0x13c: V75 = CALLVALUE
0x13d: V76 = ISZERO V75
0x13e: V77 = 0x143
0x141: JUMPI 0x143 V76
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x142
[0x142:0x142]
---
Predecessors: [0x13b]
Successors: []
---
0x142 INVALID
---
0x142: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x143
[0x143:0x16e]
---
Predecessors: [0x13b]
Successors: [0x2b7]
---
0x143 JUMPDEST
0x144 PUSH2 0x16f
0x147 PUSH1 0x4
0x149 DUP1
0x14a DUP1
0x14b CALLDATALOAD
0x14c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x161 AND
0x162 SWAP1
0x163 PUSH1 0x20
0x165 ADD
0x166 SWAP1
0x167 SWAP2
0x168 SWAP1
0x169 POP
0x16a POP
0x16b PUSH2 0x2b7
0x16e JUMP
---
0x143: JUMPDEST 
0x144: V78 = 0x16f
0x147: V79 = 0x4
0x14b: V80 = CALLDATALOAD 0x4
0x14c: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x161: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x163: V83 = 0x20
0x165: V84 = ADD 0x20 0x4
0x16b: V85 = 0x2b7
0x16e: JUMP 0x2b7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x16f, V82]
Exit stack: [V10, 0x16f, V82]

================================

Block 0x16f
[0x16f:0x170]
---
Predecessors: [0x2f9]
Successors: []
---
0x16f JUMPDEST
0x170 STOP
---
0x16f: JUMPDEST 
0x170: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x171
[0x171:0x171]
---
Predecessors: [0xff]
Successors: [0x172]
---
0x171 JUMPDEST
---
0x171: JUMPDEST 
---
Entry stack: [V10, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107]

================================

Block 0x172
[0x172:0x173]
---
Predecessors: [0x171]
Successors: [0x107]
---
0x172 JUMPDEST
0x173 JUMP
---
0x172: JUMPDEST 
0x173: JUMP 0x107
---
Entry stack: [V10, 0x107]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x174
[0x174:0x24d]
---
Predecessors: [0x111]
Successors: [0x24e, 0x24f]
---
0x174 JUMPDEST
0x175 PUSH1 0x0
0x177 PUSH1 0x0
0x179 SWAP1
0x17a SLOAD
0x17b SWAP1
0x17c PUSH2 0x100
0x17f EXP
0x180 SWAP1
0x181 DIV
0x182 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x197 AND
0x198 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ad AND
0x1ae DUP2
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 SWAP1
0x1b4 POP
0x1b5 PUSH1 0x0
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba DUP1
0x1bb DUP4
0x1bc SUB
0x1bd DUP2
0x1be DUP6
0x1bf DUP8
0x1c0 PUSH2 0x8796
0x1c3 GAS
0x1c4 SUB
0x1c5 CALL
0x1c6 SWAP3
0x1c7 POP
0x1c8 POP
0x1c9 POP
0x1ca POP
0x1cb PUSH1 0x0
0x1cd PUSH1 0x0
0x1cf SWAP1
0x1d0 SLOAD
0x1d1 SWAP1
0x1d2 PUSH2 0x100
0x1d5 EXP
0x1d6 SWAP1
0x1d7 DIV
0x1d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ed AND
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 PUSH4 0xdb88031a
0x209 PUSH1 0x40
0x20b MLOAD
0x20c DUP2
0x20d PUSH4 0xffffffff
0x212 AND
0x213 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x231 MUL
0x232 DUP2
0x233 MSTORE
0x234 PUSH1 0x4
0x236 ADD
0x237 DUP1
0x238 SWAP1
0x239 POP
0x23a PUSH1 0x0
0x23c PUSH1 0x40
0x23e MLOAD
0x23f DUP1
0x240 DUP4
0x241 SUB
0x242 DUP2
0x243 PUSH1 0x0
0x245 DUP8
0x246 DUP1
0x247 EXTCODESIZE
0x248 ISZERO
0x249 ISZERO
0x24a PUSH2 0x24f
0x24d JUMPI
---
0x174: JUMPDEST 
0x175: V86 = 0x0
0x177: V87 = 0x0
0x17a: V88 = S[0x0]
0x17c: V89 = 0x100
0x17f: V90 = EXP 0x100 0x0
0x181: V91 = DIV V88 0x1
0x182: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x197: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x198: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1af: V96 = 0x40
0x1b1: V97 = M[0x40]
0x1b5: V98 = 0x0
0x1b7: V99 = 0x40
0x1b9: V100 = M[0x40]
0x1bc: V101 = SUB V97 V100
0x1c0: V102 = 0x8796
0x1c3: V103 = GAS
0x1c4: V104 = SUB V103 0x8796
0x1c5: V105 = CALL V104 V95 V66 V100 V101 V100 0x0
0x1cb: V106 = 0x0
0x1cd: V107 = 0x0
0x1d0: V108 = S[0x0]
0x1d2: V109 = 0x100
0x1d5: V110 = EXP 0x100 0x0
0x1d7: V111 = DIV V108 0x1
0x1d8: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1ee: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x204: V116 = 0xdb88031a
0x209: V117 = 0x40
0x20b: V118 = M[0x40]
0x20d: V119 = 0xffffffff
0x212: V120 = AND 0xffffffff 0xdb88031a
0x213: V121 = 0x100000000000000000000000000000000000000000000000000000000
0x231: V122 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xdb88031a
0x233: M[V118] = 0xdb88031a00000000000000000000000000000000000000000000000000000000
0x234: V123 = 0x4
0x236: V124 = ADD 0x4 V118
0x23a: V125 = 0x0
0x23c: V126 = 0x40
0x23e: V127 = M[0x40]
0x241: V128 = SUB V124 V127
0x243: V129 = 0x0
0x247: V130 = EXTCODESIZE V115
0x248: V131 = ISZERO V130
0x249: V132 = ISZERO V131
0x24a: V133 = 0x24f
0x24d: JUMPI 0x24f V132
---
Entry stack: [V10, 0x127, V66]
Stack pops: 1
Stack additions: [S0, V115, 0xdb88031a, V124, 0x0, V127, V128, V127, 0x0, V115]
Exit stack: [V10, 0x127, V66, V115, 0xdb88031a, V124, 0x0, V127, V128, V127, 0x0, V115]

================================

Block 0x24e
[0x24e:0x24e]
---
Predecessors: [0x174]
Successors: []
---
0x24e INVALID
---
0x24e: INVALID 
---
Entry stack: [V10, 0x127, V66, V115, 0xdb88031a, V124, 0x0, V127, V128, V127, 0x0, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x127, V66, V115, 0xdb88031a, V124, 0x0, V127, V128, V127, 0x0, V115]

================================

Block 0x24f
[0x24f:0x25b]
---
Predecessors: [0x174]
Successors: [0x25c, 0x25d]
---
0x24f JUMPDEST
0x250 PUSH2 0x2c6
0x253 GAS
0x254 SUB
0x255 CALL
0x256 ISZERO
0x257 ISZERO
0x258 PUSH2 0x25d
0x25b JUMPI
---
0x24f: JUMPDEST 
0x250: V134 = 0x2c6
0x253: V135 = GAS
0x254: V136 = SUB V135 0x2c6
0x255: V137 = CALL V136 V115 0x0 V127 V128 V127 0x0
0x256: V138 = ISZERO V137
0x257: V139 = ISZERO V138
0x258: V140 = 0x25d
0x25b: JUMPI 0x25d V139
---
Entry stack: [V10, 0x127, V66, V115, 0xdb88031a, V124, 0x0, V127, V128, V127, 0x0, V115]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x127, V66, V115, 0xdb88031a, V124]

================================

Block 0x25c
[0x25c:0x25c]
---
Predecessors: [0x24f]
Successors: []
---
0x25c INVALID
---
0x25c: INVALID 
---
Entry stack: [V10, 0x127, V66, V115, 0xdb88031a, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x127, V66, V115, 0xdb88031a, V124]

================================

Block 0x25d
[0x25d:0x260]
---
Predecessors: [0x24f]
Successors: [0x261]
---
0x25d JUMPDEST
0x25e POP
0x25f POP
0x260 POP
---
0x25d: JUMPDEST 
---
Entry stack: [V10, 0x127, V66, V115, 0xdb88031a, V124]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x127, V66]

================================

Block 0x261
[0x261:0x263]
---
Predecessors: [0x25d]
Successors: [0x127]
---
0x261 JUMPDEST
0x262 POP
0x263 JUMP
---
0x261: JUMPDEST 
0x263: JUMP 0x127
---
Entry stack: [V10, 0x127, V66]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x264
[0x264:0x2b4]
---
Predecessors: [0x131]
Successors: [0x2b5]
---
0x264 JUMPDEST
0x265 CALLER
0x266 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27b AND
0x27c PUSH2 0x8fc
0x27f ADDRESS
0x280 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x295 AND
0x296 BALANCE
0x297 SWAP1
0x298 DUP2
0x299 ISZERO
0x29a MUL
0x29b SWAP1
0x29c PUSH1 0x40
0x29e MLOAD
0x29f DUP1
0x2a0 SWAP1
0x2a1 POP
0x2a2 PUSH1 0x0
0x2a4 PUSH1 0x40
0x2a6 MLOAD
0x2a7 DUP1
0x2a8 DUP4
0x2a9 SUB
0x2aa DUP2
0x2ab DUP6
0x2ac DUP9
0x2ad DUP9
0x2ae CALL
0x2af SWAP4
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 POP
0x2b4 POP
---
0x264: JUMPDEST 
0x265: V141 = CALLER
0x266: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x27c: V144 = 0x8fc
0x27f: V145 = ADDRESS
0x280: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x295: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x296: V148 = BALANCE V147
0x299: V149 = ISZERO V148
0x29a: V150 = MUL V149 0x8fc
0x29c: V151 = 0x40
0x29e: V152 = M[0x40]
0x2a2: V153 = 0x0
0x2a4: V154 = 0x40
0x2a6: V155 = M[0x40]
0x2a9: V156 = SUB V152 V155
0x2ae: V157 = CALL V150 V143 V148 V155 V156 V155 0x0
---
Entry stack: [V10, 0x139]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x139]

================================

Block 0x2b5
[0x2b5:0x2b6]
---
Predecessors: [0x264]
Successors: [0x139]
---
0x2b5 JUMPDEST
0x2b6 JUMP
---
0x2b5: JUMPDEST 
0x2b6: JUMP 0x139
---
Entry stack: [V10, 0x139]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b7
[0x2b7:0x2f8]
---
Predecessors: [0x143]
Successors: [0x2f9]
---
0x2b7 JUMPDEST
0x2b8 DUP1
0x2b9 PUSH1 0x0
0x2bb PUSH1 0x0
0x2bd PUSH2 0x100
0x2c0 EXP
0x2c1 DUP2
0x2c2 SLOAD
0x2c3 DUP2
0x2c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d9 MUL
0x2da NOT
0x2db AND
0x2dc SWAP1
0x2dd DUP4
0x2de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f3 AND
0x2f4 MUL
0x2f5 OR
0x2f6 SWAP1
0x2f7 SSTORE
0x2f8 POP
---
0x2b7: JUMPDEST 
0x2b9: V158 = 0x0
0x2bb: V159 = 0x0
0x2bd: V160 = 0x100
0x2c0: V161 = EXP 0x100 0x0
0x2c2: V162 = S[0x0]
0x2c4: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V164 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2da: V165 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V166 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V162
0x2de: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x2f4: V169 = MUL V168 0x1
0x2f5: V170 = OR V169 V166
0x2f7: S[0x0] = V170
---
Entry stack: [V10, 0x16f, V82]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x16f, V82]

================================

Block 0x2f9
[0x2f9:0x2fb]
---
Predecessors: [0x2b7]
Successors: [0x16f]
---
0x2f9 JUMPDEST
0x2fa POP
0x2fb JUMP
---
0x2f9: JUMPDEST 
0x2fb: JUMP 0x16f
---
Entry stack: [V10, 0x16f, V82]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fc
[0x2fc:0x327]
---
Predecessors: []
Successors: []
---
0x2fc STOP
0x2fd LOG1
0x2fe PUSH6 0x627a7a723058
0x305 SHA3
0x306 SWAP10
0x307 EXTCODESIZE
0x308 PUSH30 0x4ea4e8f72349a7f9ff23b61202345b2fbd825dbf8ac39e60a43feaa08b00
0x327 MISSING 0x29
---
0x2fc: STOP 
0x2fd: LOG S0 S1 S2
0x2fe: V171 = 0x627a7a723058
0x305: V172 = SHA3 0x627a7a723058 S3
0x307: V173 = EXTCODESIZE S13
0x308: V174 = 0x4ea4e8f72349a7f9ff23b61202345b2fbd825dbf8ac39e60a43feaa08b00
0x327: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x4ea4e8f72349a7f9ff23b61202345b2fbd825dbf8ac39e60a43feaa08b00, V173, S4, S5, S6, S7, S8, S9, S10, S11, S12, V172]
Exit stack: []

================================

Function 0:
Public function signature: 0x1b9265b8
Entry block: 0xff
Exit block: 0x107
Body: 0xff, 0x107, 0x171, 0x172

Function 1:
Public function signature: 0x40c82671
Entry block: 0x109
Exit block: 0x127
Body: 0x109, 0x110, 0x111, 0x127, 0x174, 0x24e, 0x24f, 0x25c, 0x25d, 0x261

Function 2:
Public function signature: 0x63bd1d4a
Entry block: 0x129
Exit block: 0x139
Body: 0x129, 0x130, 0x131, 0x139, 0x264, 0x2b5

Function 3:
Public function signature: 0xd1d80fdf
Entry block: 0x13b
Exit block: 0x16f
Body: 0x13b, 0x142, 0x143, 0x16f, 0x2b7, 0x2f9

Function 4:
Public fallback function
Entry block: 0x60
Exit block: 0xfd
Body: 0x60, 0x64, 0xe8, 0xe9, 0xf6, 0xf7, 0xfb, 0xfd

