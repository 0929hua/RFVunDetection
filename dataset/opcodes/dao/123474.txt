Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x13fff718
0x3c EQ
0x3d PUSH2 0x4e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x13fff718
0x3c: V13 = EQ 0x13fff718 V11
0x3d: V14 = 0x4e
0x40: JUMPI 0x4e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x58]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0x58
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0x58
0x4b: JUMPI 0x58 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x4d]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d STOP
---
0x4c: JUMPDEST 
0x4d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x55]
---
Predecessors: [0xd]
Successors: [0x6f]
---
0x4e JUMPDEST
0x4f PUSH2 0x56
0x52 PUSH2 0x6f
0x55 JUMP
---
0x4e: JUMPDEST 
0x4f: V18 = 0x56
0x52: V19 = 0x6f
0x55: JUMP 0x6f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x168]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5f]
---
Predecessors: [0x41]
Successors: [0x60, 0x64]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a DUP1
0x5b ISZERO
0x5c PUSH2 0x64
0x5f JUMPI
---
0x58: JUMPDEST 
0x59: V20 = CALLVALUE
0x5b: V21 = ISZERO V20
0x5c: V22 = 0x64
0x5f: JUMPI 0x64 V21
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V20]
Exit stack: [V11, V20]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x58]
Successors: []
---
0x60 PUSH1 0x0
0x62 DUP1
0x63 REVERT
---
0x60: V23 = 0x0
0x63: REVERT 0x0 0x0
---
Entry stack: [V11, V20]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V20]

================================

Block 0x64
[0x64:0x6c]
---
Predecessors: [0x58]
Successors: [0x16b]
---
0x64 JUMPDEST
0x65 POP
0x66 PUSH2 0x6d
0x69 PUSH2 0x16b
0x6c JUMP
---
0x64: JUMPDEST 
0x66: V24 = 0x6d
0x69: V25 = 0x16b
0x6c: JUMP 0x16b
---
Entry stack: [V11, V20]
Stack pops: 1
Stack additions: [0x6d]
Exit stack: [V11, 0x6d]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: []
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6f
[0x6f:0xc7]
---
Predecessors: [0x4e]
Successors: [0xc8, 0xcc]
---
0x6f JUMPDEST
0x70 PUSH1 0x0
0x72 DUP1
0x73 PUSH1 0x0
0x75 SWAP1
0x76 SLOAD
0x77 SWAP1
0x78 PUSH2 0x100
0x7b EXP
0x7c SWAP1
0x7d DIV
0x7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93 AND
0x94 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9 AND
0xaa CALLER
0xab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0 AND
0xc1 EQ
0xc2 ISZERO
0xc3 ISZERO
0xc4 PUSH2 0xcc
0xc7 JUMPI
---
0x6f: JUMPDEST 
0x70: V26 = 0x0
0x73: V27 = 0x0
0x76: V28 = S[0x0]
0x78: V29 = 0x100
0x7b: V30 = EXP 0x100 0x0
0x7d: V31 = DIV V28 0x1
0x7e: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x93: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x94: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xaa: V36 = CALLER
0xab: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xc1: V39 = EQ V38 V35
0xc2: V40 = ISZERO V39
0xc3: V41 = ISZERO V40
0xc4: V42 = 0xcc
0xc7: JUMPI 0xcc V41
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x56, 0x0]

================================

Block 0xc8
[0xc8:0xcb]
---
Predecessors: [0x6f]
Successors: []
---
0xc8 PUSH1 0x0
0xca DUP1
0xcb REVERT
---
0xc8: V43 = 0x0
0xcb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, 0x0]

================================

Block 0xcc
[0xcc:0x163]
---
Predecessors: [0x6f]
Successors: [0x164, 0x168]
---
0xcc JUMPDEST
0xcd ADDRESS
0xce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3 AND
0xe4 BALANCE
0xe5 SWAP1
0xe6 POP
0xe7 PUSH1 0x1
0xe9 PUSH1 0x0
0xeb SWAP1
0xec SLOAD
0xed SWAP1
0xee PUSH2 0x100
0xf1 EXP
0xf2 SWAP1
0xf3 DIV
0xf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109 AND
0x10a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f AND
0x120 PUSH8 0x1bc16d674ec8000
0x129 PUSH3 0x13880
0x12d SWAP1
0x12e PUSH1 0x40
0x130 MLOAD
0x131 PUSH1 0x0
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 DUP4
0x138 SUB
0x139 DUP2
0x13a DUP6
0x13b DUP9
0x13c DUP9
0x13d CALL
0x13e SWAP4
0x13f POP
0x140 POP
0x141 POP
0x142 POP
0x143 POP
0x144 DUP1
0x145 ADDRESS
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c BALANCE
0x15d GT
0x15e ISZERO
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0xcc: JUMPDEST 
0xcd: V44 = ADDRESS
0xce: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xe4: V47 = BALANCE V46
0xe7: V48 = 0x1
0xe9: V49 = 0x0
0xec: V50 = S[0x1]
0xee: V51 = 0x100
0xf1: V52 = EXP 0x100 0x0
0xf3: V53 = DIV V50 0x1
0xf4: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x109: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x10a: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x120: V58 = 0x1bc16d674ec8000
0x129: V59 = 0x13880
0x12e: V60 = 0x40
0x130: V61 = M[0x40]
0x131: V62 = 0x0
0x133: V63 = 0x40
0x135: V64 = M[0x40]
0x138: V65 = SUB V61 V64
0x13d: V66 = CALL 0x13880 V57 0x1bc16d674ec8000 V64 V65 V64 0x0
0x145: V67 = ADDRESS
0x146: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x15c: V70 = BALANCE V69
0x15d: V71 = GT V70 V47
0x15e: V72 = ISZERO V71
0x15f: V73 = ISZERO V72
0x160: V74 = 0x168
0x163: JUMPI 0x168 V73
---
Entry stack: [V11, 0x56, 0x0]
Stack pops: 1
Stack additions: [V47]
Exit stack: [V11, 0x56, V47]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0xcc]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V75 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V47]

================================

Block 0x168
[0x168:0x16a]
---
Predecessors: [0xcc]
Successors: [0x56]
---
0x168 JUMPDEST
0x169 POP
0x16a JUMP
---
0x168: JUMPDEST 
0x16a: JUMP 0x56
---
Entry stack: [V11, 0x56, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x16b
[0x16b:0x1c1]
---
Predecessors: [0x64]
Successors: [0x1c2, 0x1c6]
---
0x16b JUMPDEST
0x16c PUSH1 0x0
0x16e DUP1
0x16f SWAP1
0x170 SLOAD
0x171 SWAP1
0x172 PUSH2 0x100
0x175 EXP
0x176 SWAP1
0x177 DIV
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d AND
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 CALLER
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb EQ
0x1bc ISZERO
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x16b: JUMPDEST 
0x16c: V76 = 0x0
0x170: V77 = S[0x0]
0x172: V78 = 0x100
0x175: V79 = EXP 0x100 0x0
0x177: V80 = DIV V77 0x1
0x178: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x18e: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x1a4: V85 = CALLER
0x1a5: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x1bb: V88 = EQ V87 V84
0x1bc: V89 = ISZERO V88
0x1bd: V90 = ISZERO V89
0x1be: V91 = 0x1c6
0x1c1: JUMPI 0x1c6 V90
---
Entry stack: [V11, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6d]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x16b]
Successors: []
---
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c2: V92 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6d]

================================

Block 0x1c6
[0x1c6:0x1ff]
---
Predecessors: [0x16b]
Successors: []
---
0x1c6 JUMPDEST
0x1c7 PUSH1 0x0
0x1c9 DUP1
0x1ca SWAP1
0x1cb SLOAD
0x1cc SWAP1
0x1cd PUSH2 0x100
0x1d0 EXP
0x1d1 SWAP1
0x1d2 DIV
0x1d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e8 AND
0x1e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fe AND
0x1ff SELFDESTRUCT
---
0x1c6: JUMPDEST 
0x1c7: V93 = 0x0
0x1cb: V94 = S[0x0]
0x1cd: V95 = 0x100
0x1d0: V96 = EXP 0x100 0x0
0x1d2: V97 = DIV V94 0x1
0x1d3: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1e9: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1ff: SELFDESTRUCT V101
---
Entry stack: [V11, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6d]

================================

Block 0x200
[0x200:0x22b]
---
Predecessors: []
Successors: []
---
0x200 STOP
0x201 LOG1
0x202 PUSH6 0x627a7a723058
0x209 SHA3
0x20a DUP1
0x20b CALLDATALOAD
0x20c MOD
0x20d REVERT
0x20e SIGNEXTEND
0x20f MISSING 0x4c
0x210 DELEGATECALL
0x211 GT
0x212 MISSING 0x24
0x213 MISSING 0xca
0x214 RETURN
0x215 MISSING 0x2b
0x216 SWAP16
0x217 MISSING 0xcb
0x218 MISSING 0x4c
0x219 ADDMOD
0x21a DUP6
0x21b PUSH9 0x3f4acbd16bcc29f727
0x225 MISSING 0xac
0x226 MISSING 0xbc
0x227 MISSING 0xcc
0x228 CALLDATALOAD
0x229 SWAP16
0x22a STOP
0x22b MISSING 0x29
---
0x200: STOP 
0x201: LOG S0 S1 S2
0x202: V102 = 0x627a7a723058
0x209: V103 = SHA3 0x627a7a723058 S3
0x20b: V104 = CALLDATALOAD V103
0x20c: V105 = MOD V104 V103
0x20d: REVERT V105 S4
0x20e: V106 = SIGNEXTEND S0 S1
0x20f: MISSING 0x4c
0x210: V107 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x211: V108 = GT V107 S6
0x212: MISSING 0x24
0x213: MISSING 0xca
0x214: RETURN S0 S1
0x215: MISSING 0x2b
0x217: MISSING 0xcb
0x218: MISSING 0x4c
0x219: V109 = ADDMOD S0 S1 S2
0x21b: V110 = 0x3f4acbd16bcc29f727
0x225: MISSING 0xac
0x226: MISSING 0xbc
0x227: MISSING 0xcc
0x228: V111 = CALLDATALOAD S0
0x22a: STOP 
0x22b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V106, V108, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, 0x3f4acbd16bcc29f727, S7, V109, S3, S4, S5, S6, S7, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V111]
Exit stack: []

================================

Function 0:
Public function signature: 0x13fff718
Entry block: 0x4e
Exit block: 0x56
Body: 0x4e, 0x56, 0x6f, 0xc8, 0xcc, 0x164, 0x168

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x58
Exit block: 0x1c6
Body: 0x58, 0x60, 0x64, 0x16b, 0x1c2, 0x1c6

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

