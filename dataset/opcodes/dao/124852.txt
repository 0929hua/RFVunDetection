Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x53]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x53
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x53
0xc: JUMPI 0x53 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x109]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x9e69ede
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x109
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x9e69ede
0x22: V15 = EQ V13 0x9e69ede
0x23: V16 = 0x109
0x26: JUMPI 0x109 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x146]
---
0x27 DUP1
0x28 PUSH4 0x4a3b68cc
0x2d EQ
0x2e PUSH2 0x146
0x31 JUMPI
---
0x28: V17 = 0x4a3b68cc
0x2d: V18 = EQ 0x4a3b68cc V13
0x2e: V19 = 0x146
0x31: JUMPI 0x146 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x17b]
---
0x32 DUP1
0x33 PUSH4 0x8fe123d7
0x38 EQ
0x39 PUSH2 0x17b
0x3c JUMPI
---
0x33: V20 = 0x8fe123d7
0x38: V21 = EQ 0x8fe123d7 V13
0x39: V22 = 0x17b
0x3c: JUMPI 0x17b V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x19c]
---
0x3d DUP1
0x3e PUSH4 0xd35ada32
0x43 EQ
0x44 PUSH2 0x19c
0x47 JUMPI
---
0x3e: V23 = 0xd35ada32
0x43: V24 = EQ 0xd35ada32 V13
0x44: V25 = 0x19c
0x47: JUMPI 0x19c V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x1b6]
---
0x48 DUP1
0x49 PUSH4 0xfefa9bb1
0x4e EQ
0x4f PUSH2 0x1b6
0x52 JUMPI
---
0x49: V26 = 0xfefa9bb1
0x4e: V27 = EQ 0xfefa9bb1 V13
0x4f: V28 = 0x1b6
0x52: JUMPI 0x1b6 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x72]
---
Predecessors: [0x0, 0x48]
Successors: [0x73, 0x82]
---
0x53 JUMPDEST
0x54 CALLER
0x55 PUSH1 0x0
0x57 SWAP1
0x58 DUP2
0x59 MSTORE
0x5a PUSH1 0x20
0x5c DUP2
0x5d SWAP1
0x5e MSTORE
0x5f PUSH1 0x40
0x61 SWAP1
0x62 SHA3
0x63 SLOAD
0x64 PUSH1 0x1
0x66 PUSH1 0xa0
0x68 PUSH1 0x2
0x6a EXP
0x6b SUB
0x6c AND
0x6d ISZERO
0x6e ISZERO
0x6f PUSH2 0x82
0x72 JUMPI
---
0x53: JUMPDEST 
0x54: V29 = CALLER
0x55: V30 = 0x0
0x59: M[0x0] = V29
0x5a: V31 = 0x20
0x5e: M[0x20] = 0x0
0x5f: V32 = 0x40
0x62: V33 = SHA3 0x0 0x40
0x63: V34 = S[V33]
0x64: V35 = 0x1
0x66: V36 = 0xa0
0x68: V37 = 0x2
0x6a: V38 = EXP 0x2 0xa0
0x6b: V39 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x6d: V41 = ISZERO V40
0x6e: V42 = ISZERO V41
0x6f: V43 = 0x82
0x72: JUMPI 0x82 V42
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x73
[0x73:0x7c]
---
Predecessors: [0x53]
Successors: [0x1d7]
---
0x73 PUSH2 0x7d
0x76 CALLER
0x77 PUSH1 0x0
0x79 PUSH2 0x1d7
0x7c JUMP
---
0x73: V44 = 0x7d
0x76: V45 = CALLER
0x77: V46 = 0x0
0x79: V47 = 0x1d7
0x7c: JUMP 0x1d7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x7d, V45, 0x0]
Exit stack: [V13, 0x7d, V45, 0x0]

================================

Block 0x7d
[0x7d:0x81]
---
Predecessors: [0x416]
Successors: [0x107]
---
0x7d JUMPDEST
0x7e PUSH2 0x107
0x81 JUMP
---
0x7d: JUMPDEST 
0x7e: V48 = 0x107
0x81: JUMP 0x107
---
Entry stack: [V838]
Stack pops: 0
Stack additions: []
Exit stack: [V838]

================================

Block 0x82
[0x82:0x88]
---
Predecessors: [0x53]
Successors: [0x89, 0xfe]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 ISZERO
0x85 PUSH2 0xfe
0x88 JUMPI
---
0x82: JUMPDEST 
0x83: V49 = CALLVALUE
0x84: V50 = ISZERO V49
0x85: V51 = 0xfe
0x88: JUMPI 0xfe V50
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x89
[0x89:0xfd]
---
Predecessors: [0x82]
Successors: []
---
0x89 PUSH1 0x40
0x8b DUP1
0x8c MLOAD
0x8d PUSH1 0xe5
0x8f PUSH1 0x2
0x91 EXP
0x92 PUSH3 0x461bcd
0x96 MUL
0x97 DUP2
0x98 MSTORE
0x99 PUSH1 0x20
0x9b PUSH1 0x4
0x9d DUP3
0x9e ADD
0x9f MSTORE
0xa0 PUSH1 0x28
0xa2 PUSH1 0x24
0xa4 DUP3
0xa5 ADD
0xa6 MSTORE
0xa7 PUSH32 0x3020657468657220746f206d616e75616c6c79206d616b652061206461696c79
0xc8 PUSH1 0x44
0xca DUP3
0xcb ADD
0xcc MSTORE
0xcd PUSH32 0x207061796d656e74000000000000000000000000000000000000000000000000
0xee PUSH1 0x64
0xf0 DUP3
0xf1 ADD
0xf2 MSTORE
0xf3 SWAP1
0xf4 MLOAD
0xf5 SWAP1
0xf6 DUP2
0xf7 SWAP1
0xf8 SUB
0xf9 PUSH1 0x84
0xfb ADD
0xfc SWAP1
0xfd REVERT
---
0x89: V52 = 0x40
0x8c: V53 = M[0x40]
0x8d: V54 = 0xe5
0x8f: V55 = 0x2
0x91: V56 = EXP 0x2 0xe5
0x92: V57 = 0x461bcd
0x96: V58 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x98: M[V53] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x99: V59 = 0x20
0x9b: V60 = 0x4
0x9e: V61 = ADD V53 0x4
0x9f: M[V61] = 0x20
0xa0: V62 = 0x28
0xa2: V63 = 0x24
0xa5: V64 = ADD V53 0x24
0xa6: M[V64] = 0x28
0xa7: V65 = 0x3020657468657220746f206d616e75616c6c79206d616b652061206461696c79
0xc8: V66 = 0x44
0xcb: V67 = ADD V53 0x44
0xcc: M[V67] = 0x3020657468657220746f206d616e75616c6c79206d616b652061206461696c79
0xcd: V68 = 0x207061796d656e74000000000000000000000000000000000000000000000000
0xee: V69 = 0x64
0xf1: V70 = ADD V53 0x64
0xf2: M[V70] = 0x207061796d656e74000000000000000000000000000000000000000000000000
0xf4: V71 = M[0x40]
0xf8: V72 = SUB V53 V71
0xf9: V73 = 0x84
0xfb: V74 = ADD 0x84 V72
0xfd: REVERT V71 V74
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xfe
[0xfe:0x106]
---
Predecessors: [0x82]
Successors: [0x456]
---
0xfe JUMPDEST
0xff PUSH2 0x107
0x102 CALLER
0x103 PUSH2 0x456
0x106 JUMP
---
0xfe: JUMPDEST 
0xff: V75 = 0x107
0x102: V76 = CALLER
0x103: V77 = 0x456
0x106: JUMP 0x456
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x107, V76]
Exit stack: [V13, 0x107, V76]

================================

Block 0x107
[0x107:0x108]
---
Predecessors: [0x7d, 0x416, 0x5c6, 0x760]
Successors: []
---
0x107 JUMPDEST
0x108 STOP
---
0x107: JUMPDEST 
0x108: STOP 
---
Entry stack: [V838, {0x7d, 0x107}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V838, {0x7d, 0x107}, S1, S0]

================================

Block 0x109
[0x109:0x110]
---
Predecessors: [0xd]
Successors: [0x111, 0x115]
---
0x109 JUMPDEST
0x10a CALLVALUE
0x10b DUP1
0x10c ISZERO
0x10d PUSH2 0x115
0x110 JUMPI
---
0x109: JUMPDEST 
0x10a: V78 = CALLVALUE
0x10c: V79 = ISZERO V78
0x10d: V80 = 0x115
0x110: JUMPI 0x115 V79
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V13, V78]

================================

Block 0x111
[0x111:0x114]
---
Predecessors: [0x109]
Successors: []
---
0x111 PUSH1 0x0
0x113 DUP1
0x114 REVERT
---
0x111: V81 = 0x0
0x114: REVERT 0x0 0x0
---
Entry stack: [V13, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V78]

================================

Block 0x115
[0x115:0x129]
---
Predecessors: [0x109]
Successors: [0x5cb]
---
0x115 JUMPDEST
0x116 POP
0x117 PUSH2 0x12a
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 PUSH1 0x4
0x124 CALLDATALOAD
0x125 AND
0x126 PUSH2 0x5cb
0x129 JUMP
---
0x115: JUMPDEST 
0x117: V82 = 0x12a
0x11a: V83 = 0x1
0x11c: V84 = 0xa0
0x11e: V85 = 0x2
0x120: V86 = EXP 0x2 0xa0
0x121: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x122: V88 = 0x4
0x124: V89 = CALLDATALOAD 0x4
0x125: V90 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x126: V91 = 0x5cb
0x129: JUMP 0x5cb
---
Entry stack: [V13, V78]
Stack pops: 1
Stack additions: [0x12a, V90]
Exit stack: [V13, 0x12a, V90]

================================

Block 0x12a
[0x12a:0x145]
---
Predecessors: [0x5cb]
Successors: []
---
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d DUP1
0x12e MLOAD
0x12f PUSH1 0x1
0x131 PUSH1 0xa0
0x133 PUSH1 0x2
0x135 EXP
0x136 SUB
0x137 SWAP1
0x138 SWAP3
0x139 AND
0x13a DUP3
0x13b MSTORE
0x13c MLOAD
0x13d SWAP1
0x13e DUP2
0x13f SWAP1
0x140 SUB
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP1
0x145 RETURN
---
0x12a: JUMPDEST 
0x12b: V92 = 0x40
0x12e: V93 = M[0x40]
0x12f: V94 = 0x1
0x131: V95 = 0xa0
0x133: V96 = 0x2
0x135: V97 = EXP 0x2 0xa0
0x136: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V99 = AND V468 0xffffffffffffffffffffffffffffffffffffffff
0x13b: M[V93] = V99
0x13c: V100 = M[0x40]
0x140: V101 = SUB V93 V100
0x141: V102 = 0x20
0x143: V103 = ADD 0x20 V101
0x145: RETURN V100 V103
---
Entry stack: [V13, 0x12a, V468]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x12a]

================================

Block 0x146
[0x146:0x14d]
---
Predecessors: [0x27]
Successors: [0x14e, 0x152]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 DUP1
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0x146: JUMPDEST 
0x147: V104 = CALLVALUE
0x149: V105 = ISZERO V104
0x14a: V106 = 0x152
0x14d: JUMPI 0x152 V105
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V13, V104]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x146]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V107 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V13, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V104]

================================

Block 0x152
[0x152:0x166]
---
Predecessors: [0x146]
Successors: [0x5e6]
---
0x152 JUMPDEST
0x153 POP
0x154 PUSH2 0x167
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f PUSH1 0x4
0x161 CALLDATALOAD
0x162 AND
0x163 PUSH2 0x5e6
0x166 JUMP
---
0x152: JUMPDEST 
0x154: V108 = 0x167
0x157: V109 = 0x1
0x159: V110 = 0xa0
0x15b: V111 = 0x2
0x15d: V112 = EXP 0x2 0xa0
0x15e: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V114 = 0x4
0x161: V115 = CALLDATALOAD 0x4
0x162: V116 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x163: V117 = 0x5e6
0x166: JUMP 0x5e6
---
Entry stack: [V13, V104]
Stack pops: 1
Stack additions: [0x167, V116]
Exit stack: [V13, 0x167, V116]

================================

Block 0x167
[0x167:0x17a]
---
Predecessors: [0x5e6]
Successors: []
---
0x167 JUMPDEST
0x168 PUSH1 0x40
0x16a DUP1
0x16b MLOAD
0x16c SWAP2
0x16d ISZERO
0x16e ISZERO
0x16f DUP3
0x170 MSTORE
0x171 MLOAD
0x172 SWAP1
0x173 DUP2
0x174 SWAP1
0x175 SUB
0x176 PUSH1 0x20
0x178 ADD
0x179 SWAP1
0x17a RETURN
---
0x167: JUMPDEST 
0x168: V118 = 0x40
0x16b: V119 = M[0x40]
0x16d: V120 = ISZERO V476
0x16e: V121 = ISZERO V120
0x170: M[V119] = V121
0x171: V122 = M[0x40]
0x175: V123 = SUB V119 V122
0x176: V124 = 0x20
0x178: V125 = ADD 0x20 V123
0x17a: RETURN V122 V125
---
Entry stack: [V13, 0x167, V476]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x167]

================================

Block 0x17b
[0x17b:0x182]
---
Predecessors: [0x32]
Successors: [0x183, 0x187]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d DUP1
0x17e ISZERO
0x17f PUSH2 0x187
0x182 JUMPI
---
0x17b: JUMPDEST 
0x17c: V126 = CALLVALUE
0x17e: V127 = ISZERO V126
0x17f: V128 = 0x187
0x182: JUMPI 0x187 V127
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V126]
Exit stack: [V13, V126]

================================

Block 0x183
[0x183:0x186]
---
Predecessors: [0x17b]
Successors: []
---
0x183 PUSH1 0x0
0x185 DUP1
0x186 REVERT
---
0x183: V129 = 0x0
0x186: REVERT 0x0 0x0
---
Entry stack: [V13, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V126]

================================

Block 0x187
[0x187:0x19b]
---
Predecessors: [0x17b]
Successors: [0x456]
---
0x187 JUMPDEST
0x188 POP
0x189 PUSH2 0x107
0x18c PUSH1 0x1
0x18e PUSH1 0xa0
0x190 PUSH1 0x2
0x192 EXP
0x193 SUB
0x194 PUSH1 0x4
0x196 CALLDATALOAD
0x197 AND
0x198 PUSH2 0x456
0x19b JUMP
---
0x187: JUMPDEST 
0x189: V130 = 0x107
0x18c: V131 = 0x1
0x18e: V132 = 0xa0
0x190: V133 = 0x2
0x192: V134 = EXP 0x2 0xa0
0x193: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V136 = 0x4
0x196: V137 = CALLDATALOAD 0x4
0x197: V138 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x198: V139 = 0x456
0x19b: JUMP 0x456
---
Entry stack: [V13, V126]
Stack pops: 1
Stack additions: [0x107, V138]
Exit stack: [V13, 0x107, V138]

================================

Block 0x19c
[0x19c:0x1b5]
---
Predecessors: [0x3d, 0xaee]
Successors: [0x1d7]
---
0x19c JUMPDEST
0x19d PUSH2 0x107
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 PUSH1 0x4
0x1aa CALLDATALOAD
0x1ab DUP2
0x1ac AND
0x1ad SWAP1
0x1ae PUSH1 0x24
0x1b0 CALLDATALOAD
0x1b1 AND
0x1b2 PUSH2 0x1d7
0x1b5 JUMP
---
0x19c: JUMPDEST 
0x19d: V140 = 0x107
0x1a0: V141 = 0x1
0x1a2: V142 = 0xa0
0x1a4: V143 = 0x2
0x1a6: V144 = EXP 0x2 0xa0
0x1a7: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V146 = 0x4
0x1aa: V147 = CALLDATALOAD 0x4
0x1ac: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x1ae: V149 = 0x24
0x1b0: V150 = CALLDATALOAD 0x24
0x1b1: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V152 = 0x1d7
0x1b5: JUMP 0x1d7
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [0x107, V148, V151]
Exit stack: [S0, 0x107, V148, V151]

================================

Block 0x1b6
[0x1b6:0x1bd]
---
Predecessors: [0x48]
Successors: [0x1be, 0x1c2]
---
0x1b6 JUMPDEST
0x1b7 CALLVALUE
0x1b8 DUP1
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V153 = CALLVALUE
0x1b9: V154 = ISZERO V153
0x1ba: V155 = 0x1c2
0x1bd: JUMPI 0x1c2 V154
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V153]
Exit stack: [V13, V153]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b6]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V156 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V13, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V153]

================================

Block 0x1c2
[0x1c2:0x1d6]
---
Predecessors: [0x1b6]
Successors: [0x5fb]
---
0x1c2 JUMPDEST
0x1c3 POP
0x1c4 PUSH2 0x107
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf PUSH1 0x4
0x1d1 CALLDATALOAD
0x1d2 AND
0x1d3 PUSH2 0x5fb
0x1d6 JUMP
---
0x1c2: JUMPDEST 
0x1c4: V157 = 0x107
0x1c7: V158 = 0x1
0x1c9: V159 = 0xa0
0x1cb: V160 = 0x2
0x1cd: V161 = EXP 0x2 0xa0
0x1ce: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cf: V163 = 0x4
0x1d1: V164 = CALLDATALOAD 0x4
0x1d2: V165 = AND V164 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V166 = 0x5fb
0x1d6: JUMP 0x5fb
---
Entry stack: [V13, V153]
Stack pops: 1
Stack additions: [0x107, V165]
Exit stack: [V13, 0x107, V165]

================================

Block 0x1d7
[0x1d7:0x1f7]
---
Predecessors: [0x73, 0x19c]
Successors: [0x1f8, 0x26d]
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x1
0x1da PUSH1 0xa0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SUB
0x1e0 DUP3
0x1e1 DUP2
0x1e2 AND
0x1e3 PUSH1 0x0
0x1e5 SWAP1
0x1e6 DUP2
0x1e7 MSTORE
0x1e8 PUSH1 0x20
0x1ea DUP2
0x1eb SWAP1
0x1ec MSTORE
0x1ed PUSH1 0x40
0x1ef SWAP1
0x1f0 SHA3
0x1f1 SLOAD
0x1f2 AND
0x1f3 ISZERO
0x1f4 PUSH2 0x26d
0x1f7 JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V167 = 0x1
0x1da: V168 = 0xa0
0x1dc: V169 = 0x2
0x1de: V170 = EXP 0x2 0xa0
0x1df: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1e3: V173 = 0x0
0x1e7: M[0x0] = V172
0x1e8: V174 = 0x20
0x1ec: M[0x20] = 0x0
0x1ed: V175 = 0x40
0x1f0: V176 = SHA3 0x0 0x40
0x1f1: V177 = S[V176]
0x1f2: V178 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V179 = ISZERO V178
0x1f4: V180 = 0x26d
0x1f7: JUMPI 0x26d V179
---
Entry stack: [S3, {0x7d, 0x107}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S3, {0x7d, 0x107}, S1, S0]

================================

Block 0x1f8
[0x1f8:0x26c]
---
Predecessors: [0x1d7]
Successors: []
---
0x1f8 PUSH1 0x40
0x1fa DUP1
0x1fb MLOAD
0x1fc PUSH1 0xe5
0x1fe PUSH1 0x2
0x200 EXP
0x201 PUSH3 0x461bcd
0x205 MUL
0x206 DUP2
0x207 MSTORE
0x208 PUSH1 0x20
0x20a PUSH1 0x4
0x20c DUP3
0x20d ADD
0x20e MSTORE
0x20f PUSH1 0x26
0x211 PUSH1 0x24
0x213 DUP3
0x214 ADD
0x215 MSTORE
0x216 PUSH32 0x54686973207061727469636970616e7420697320616c72656164792072656769
0x237 PUSH1 0x44
0x239 DUP3
0x23a ADD
0x23b MSTORE
0x23c PUSH32 0x7374657265640000000000000000000000000000000000000000000000000000
0x25d PUSH1 0x64
0x25f DUP3
0x260 ADD
0x261 MSTORE
0x262 SWAP1
0x263 MLOAD
0x264 SWAP1
0x265 DUP2
0x266 SWAP1
0x267 SUB
0x268 PUSH1 0x84
0x26a ADD
0x26b SWAP1
0x26c REVERT
---
0x1f8: V181 = 0x40
0x1fb: V182 = M[0x40]
0x1fc: V183 = 0xe5
0x1fe: V184 = 0x2
0x200: V185 = EXP 0x2 0xe5
0x201: V186 = 0x461bcd
0x205: V187 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x207: M[V182] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x208: V188 = 0x20
0x20a: V189 = 0x4
0x20d: V190 = ADD V182 0x4
0x20e: M[V190] = 0x20
0x20f: V191 = 0x26
0x211: V192 = 0x24
0x214: V193 = ADD V182 0x24
0x215: M[V193] = 0x26
0x216: V194 = 0x54686973207061727469636970616e7420697320616c72656164792072656769
0x237: V195 = 0x44
0x23a: V196 = ADD V182 0x44
0x23b: M[V196] = 0x54686973207061727469636970616e7420697320616c72656164792072656769
0x23c: V197 = 0x7374657265640000000000000000000000000000000000000000000000000000
0x25d: V198 = 0x64
0x260: V199 = ADD V182 0x64
0x261: M[V199] = 0x7374657265640000000000000000000000000000000000000000000000000000
0x263: V200 = M[0x40]
0x267: V201 = SUB V182 V200
0x268: V202 = 0x84
0x26a: V203 = ADD 0x84 V201
0x26c: REVERT V200 V203
---
Entry stack: [S3, {0x7d, 0x107}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S3, {0x7d, 0x107}, S1, S0]

================================

Block 0x26d
[0x26d:0x27f]
---
Predecessors: [0x1d7]
Successors: [0x280, 0x28e]
---
0x26d JUMPDEST
0x26e PUSH8 0x63eb89da4ed0000
0x277 CALLVALUE
0x278 LT
0x279 ISZERO
0x27a DUP1
0x27b ISZERO
0x27c PUSH2 0x28e
0x27f JUMPI
---
0x26d: JUMPDEST 
0x26e: V204 = 0x63eb89da4ed0000
0x277: V205 = CALLVALUE
0x278: V206 = LT V205 0x63eb89da4ed0000
0x279: V207 = ISZERO V206
0x27b: V208 = ISZERO V207
0x27c: V209 = 0x28e
0x27f: JUMPI 0x28e V208
---
Entry stack: [S3, {0x7d, 0x107}, S1, S0]
Stack pops: 0
Stack additions: [V207]
Exit stack: [S3, {0x7d, 0x107}, S1, S0, V207]

================================

Block 0x280
[0x280:0x28d]
---
Predecessors: [0x26d]
Successors: [0x28e]
---
0x280 POP
0x281 PUSH9 0xc328093e61ee40000
0x28b CALLVALUE
0x28c GT
0x28d ISZERO
---
0x281: V210 = 0xc328093e61ee40000
0x28b: V211 = CALLVALUE
0x28c: V212 = GT V211 0xc328093e61ee40000
0x28d: V213 = ISZERO V212
---
Entry stack: [S4, {0x7d, 0x107}, S2, S1, V207]
Stack pops: 1
Stack additions: [V213]
Exit stack: [S4, {0x7d, 0x107}, S2, S1, V213]

================================

Block 0x28e
[0x28e:0x294]
---
Predecessors: [0x26d, 0x280]
Successors: [0x295, 0x30a]
---
0x28e JUMPDEST
0x28f ISZERO
0x290 ISZERO
0x291 PUSH2 0x30a
0x294 JUMPI
---
0x28e: JUMPDEST 
0x28f: V214 = ISZERO S0
0x290: V215 = ISZERO V214
0x291: V216 = 0x30a
0x294: JUMPI 0x30a V215
---
Entry stack: [S4, {0x7d, 0x107}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S4, {0x7d, 0x107}, S2, S1]

================================

Block 0x295
[0x295:0x309]
---
Predecessors: [0x28e]
Successors: []
---
0x295 PUSH1 0x40
0x297 DUP1
0x298 MLOAD
0x299 PUSH1 0xe5
0x29b PUSH1 0x2
0x29d EXP
0x29e PUSH3 0x461bcd
0x2a2 MUL
0x2a3 DUP2
0x2a4 MSTORE
0x2a5 PUSH1 0x20
0x2a7 PUSH1 0x4
0x2a9 DUP3
0x2aa ADD
0x2ab MSTORE
0x2ac PUSH1 0x3c
0x2ae PUSH1 0x24
0x2b0 DUP3
0x2b1 ADD
0x2b2 MSTORE
0x2b3 PUSH32 0x4465706f7369742073686f756c64206265206265747765656e20302e34352065
0x2d4 PUSH1 0x44
0x2d6 DUP3
0x2d7 ADD
0x2d8 MSTORE
0x2d9 PUSH32 0x7468657220616e64203232352065746865722028343520646179732900000000
0x2fa PUSH1 0x64
0x2fc DUP3
0x2fd ADD
0x2fe MSTORE
0x2ff SWAP1
0x300 MLOAD
0x301 SWAP1
0x302 DUP2
0x303 SWAP1
0x304 SUB
0x305 PUSH1 0x84
0x307 ADD
0x308 SWAP1
0x309 REVERT
---
0x295: V217 = 0x40
0x298: V218 = M[0x40]
0x299: V219 = 0xe5
0x29b: V220 = 0x2
0x29d: V221 = EXP 0x2 0xe5
0x29e: V222 = 0x461bcd
0x2a2: V223 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x2a4: M[V218] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2a5: V224 = 0x20
0x2a7: V225 = 0x4
0x2aa: V226 = ADD V218 0x4
0x2ab: M[V226] = 0x20
0x2ac: V227 = 0x3c
0x2ae: V228 = 0x24
0x2b1: V229 = ADD V218 0x24
0x2b2: M[V229] = 0x3c
0x2b3: V230 = 0x4465706f7369742073686f756c64206265206265747765656e20302e34352065
0x2d4: V231 = 0x44
0x2d7: V232 = ADD V218 0x44
0x2d8: M[V232] = 0x4465706f7369742073686f756c64206265206265747765656e20302e34352065
0x2d9: V233 = 0x7468657220616e64203232352065746865722028343520646179732900000000
0x2fa: V234 = 0x64
0x2fd: V235 = ADD V218 0x64
0x2fe: M[V235] = 0x7468657220616e64203232352065746865722028343520646179732900000000
0x300: V236 = M[0x40]
0x304: V237 = SUB V218 V236
0x305: V238 = 0x84
0x307: V239 = ADD 0x84 V237
0x309: REVERT V236 V239
---
Entry stack: [S3, {0x7d, 0x107}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S3, {0x7d, 0x107}, S1, S0]

================================

Block 0x30a
[0x30a:0x316]
---
Predecessors: [0x28e]
Successors: [0x7ad]
---
0x30a JUMPDEST
0x30b DUP2
0x30c PUSH1 0x2d
0x30e CALLVALUE
0x30f DIV
0x310 PUSH2 0x317
0x313 PUSH2 0x7ad
0x316 JUMP
---
0x30a: JUMPDEST 
0x30c: V240 = 0x2d
0x30e: V241 = CALLVALUE
0x30f: V242 = DIV V241 0x2d
0x310: V243 = 0x317
0x313: V244 = 0x7ad
0x316: JUMP 0x7ad
---
Entry stack: [S3, {0x7d, 0x107}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, V242, 0x317]
Exit stack: [S3, {0x7d, 0x107}, S1, S0, S1, V242, 0x317]

================================

Block 0x317
[0x317:0x33e]
---
Predecessors: [0x7ad]
Successors: [0x33f, 0x348]
---
0x317 JUMPDEST
0x318 PUSH1 0x1
0x31a PUSH1 0xa0
0x31c PUSH1 0x2
0x31e EXP
0x31f SUB
0x320 SWAP1
0x321 SWAP3
0x322 AND
0x323 DUP3
0x324 MSTORE
0x325 PUSH1 0x20
0x327 DUP3
0x328 ADD
0x329 MSTORE
0x32a PUSH1 0x40
0x32c DUP1
0x32d MLOAD
0x32e SWAP2
0x32f DUP3
0x330 SWAP1
0x331 SUB
0x332 ADD
0x333 SWAP1
0x334 PUSH1 0x0
0x336 CREATE
0x337 DUP1
0x338 ISZERO
0x339 DUP1
0x33a ISZERO
0x33b PUSH2 0x348
0x33e JUMPI
---
0x317: JUMPDEST 
0x318: V245 = 0x1
0x31a: V246 = 0xa0
0x31c: V247 = 0x2
0x31e: V248 = EXP 0x2 0xa0
0x31f: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x322: V250 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x324: M[V624] = V250
0x325: V251 = 0x20
0x328: V252 = ADD V624 0x20
0x329: M[V252] = V242
0x32a: V253 = 0x40
0x32d: V254 = M[0x40]
0x331: V255 = SUB V624 V254
0x332: V256 = ADD V255 0x40
0x334: V257 = 0x0
0x336: V258 = CREATE 0x0 V254 V256
0x338: V259 = ISZERO V258
0x33a: V260 = ISZERO V259
0x33b: V261 = 0x348
0x33e: JUMPI 0x348 V260
---
Entry stack: [S6, {0x7d, 0x107}, S4, S3, S2, V242, V624]
Stack pops: 3
Stack additions: [V258, V259]
Exit stack: [S6, {0x7d, 0x107}, S4, S3, V258, V259]

================================

Block 0x33f
[0x33f:0x347]
---
Predecessors: [0x317]
Successors: []
---
0x33f RETURNDATASIZE
0x340 PUSH1 0x0
0x342 DUP1
0x343 RETURNDATACOPY
0x344 RETURNDATASIZE
0x345 PUSH1 0x0
0x347 REVERT
---
0x33f: V262 = RETURNDATASIZE
0x340: V263 = 0x0
0x343: RETURNDATACOPY 0x0 0x0 V262
0x344: V264 = RETURNDATASIZE
0x345: V265 = 0x0
0x347: REVERT 0x0 V264
---
Entry stack: [S5, {0x7d, 0x107}, S3, S2, V258, V259]
Stack pops: 0
Stack additions: []
Exit stack: [S5, {0x7d, 0x107}, S3, S2, V258, V259]

================================

Block 0x348
[0x348:0x38d]
---
Predecessors: [0x317]
Successors: [0x456]
---
0x348 JUMPDEST
0x349 POP
0x34a PUSH1 0x1
0x34c PUSH1 0xa0
0x34e PUSH1 0x2
0x350 EXP
0x351 SUB
0x352 DUP4
0x353 DUP2
0x354 AND
0x355 PUSH1 0x0
0x357 SWAP1
0x358 DUP2
0x359 MSTORE
0x35a PUSH1 0x20
0x35c DUP2
0x35d SWAP1
0x35e MSTORE
0x35f PUSH1 0x40
0x361 SWAP1
0x362 SHA3
0x363 DUP1
0x364 SLOAD
0x365 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37a NOT
0x37b AND
0x37c SWAP3
0x37d SWAP1
0x37e SWAP2
0x37f AND
0x380 SWAP2
0x381 SWAP1
0x382 SWAP2
0x383 OR
0x384 SWAP1
0x385 SSTORE
0x386 PUSH2 0x38e
0x389 DUP3
0x38a PUSH2 0x456
0x38d JUMP
---
0x348: JUMPDEST 
0x34a: V266 = 0x1
0x34c: V267 = 0xa0
0x34e: V268 = 0x2
0x350: V269 = EXP 0x2 0xa0
0x351: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x354: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x355: V272 = 0x0
0x359: M[0x0] = V271
0x35a: V273 = 0x20
0x35e: M[0x20] = 0x0
0x35f: V274 = 0x40
0x362: V275 = SHA3 0x0 0x40
0x364: V276 = S[V275]
0x365: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x37a: V278 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V279 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V276
0x37f: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x383: V281 = OR V280 V279
0x385: S[V275] = V281
0x386: V282 = 0x38e
0x38a: V283 = 0x456
0x38d: JUMP 0x456
---
Entry stack: [S5, {0x7d, 0x107}, S3, S2, V258, V259]
Stack pops: 4
Stack additions: [S3, S2, 0x38e, S3]
Exit stack: [S5, {0x7d, 0x107}, S3, S2, 0x38e, S3]

================================

Block 0x38e
[0x38e:0x3cb]
---
Predecessors: [0x5c6]
Successors: [0x3cc, 0x3e9]
---
0x38e JUMPDEST
0x38f PUSH1 0x2
0x391 SLOAD
0x392 PUSH1 0x40
0x394 MLOAD
0x395 PUSH1 0x1
0x397 PUSH1 0xa0
0x399 PUSH1 0x2
0x39b EXP
0x39c SUB
0x39d SWAP1
0x39e SWAP2
0x39f AND
0x3a0 SWAP1
0x3a1 PUSH1 0x14
0x3a3 CALLVALUE
0x3a4 DIV
0x3a5 DUP1
0x3a6 ISZERO
0x3a7 PUSH2 0x8fc
0x3aa MUL
0x3ab SWAP2
0x3ac PUSH1 0x0
0x3ae DUP2
0x3af DUP2
0x3b0 DUP2
0x3b1 DUP6
0x3b2 DUP9
0x3b3 DUP9
0x3b4 CALL
0x3b5 POP
0x3b6 POP
0x3b7 POP
0x3b8 POP
0x3b9 POP
0x3ba PUSH1 0x1
0x3bc PUSH1 0xa0
0x3be PUSH1 0x2
0x3c0 EXP
0x3c1 SUB
0x3c2 DUP2
0x3c3 AND
0x3c4 ISZERO
0x3c5 DUP1
0x3c6 ISZERO
0x3c7 SWAP1
0x3c8 PUSH2 0x3e9
0x3cb JUMPI
---
0x38e: JUMPDEST 
0x38f: V284 = 0x2
0x391: V285 = S[0x2]
0x392: V286 = 0x40
0x394: V287 = M[0x40]
0x395: V288 = 0x1
0x397: V289 = 0xa0
0x399: V290 = 0x2
0x39b: V291 = EXP 0x2 0xa0
0x39c: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39f: V293 = AND V285 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V294 = 0x14
0x3a3: V295 = CALLVALUE
0x3a4: V296 = DIV V295 0x14
0x3a6: V297 = ISZERO V296
0x3a7: V298 = 0x8fc
0x3aa: V299 = MUL 0x8fc V297
0x3ac: V300 = 0x0
0x3b4: V301 = CALL V299 V293 V296 V287 0x0 V287 0x0
0x3ba: V302 = 0x1
0x3bc: V303 = 0xa0
0x3be: V304 = 0x2
0x3c0: V305 = EXP 0x2 0xa0
0x3c1: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c3: V307 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V308 = ISZERO V307
0x3c6: V309 = ISZERO V308
0x3c8: V310 = 0x3e9
0x3cb: JUMPI 0x3e9 V308
---
Entry stack: [V838, {0x7d, 0x107}, S1, S0]
Stack pops: 1
Stack additions: [S0, V309]
Exit stack: [V838, {0x7d, 0x107}, S1, S0, V309]

================================

Block 0x3cc
[0x3cc:0x3e8]
---
Predecessors: [0x38e]
Successors: [0x3e9]
---
0x3cc POP
0x3cd PUSH1 0x1
0x3cf PUSH1 0xa0
0x3d1 PUSH1 0x2
0x3d3 EXP
0x3d4 SUB
0x3d5 DUP2
0x3d6 AND
0x3d7 PUSH1 0x0
0x3d9 SWAP1
0x3da DUP2
0x3db MSTORE
0x3dc PUSH1 0x1
0x3de PUSH1 0x20
0x3e0 MSTORE
0x3e1 PUSH1 0x40
0x3e3 SWAP1
0x3e4 SHA3
0x3e5 SLOAD
0x3e6 PUSH1 0xff
0x3e8 AND
---
0x3cd: V311 = 0x1
0x3cf: V312 = 0xa0
0x3d1: V313 = 0x2
0x3d3: V314 = EXP 0x2 0xa0
0x3d4: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d6: V316 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x3d7: V317 = 0x0
0x3db: M[0x0] = V316
0x3dc: V318 = 0x1
0x3de: V319 = 0x20
0x3e0: M[0x20] = 0x1
0x3e1: V320 = 0x40
0x3e4: V321 = SHA3 0x0 0x40
0x3e5: V322 = S[V321]
0x3e6: V323 = 0xff
0x3e8: V324 = AND 0xff V322
---
Entry stack: [V838, {0x7d, 0x107}, S2, S1, V309]
Stack pops: 2
Stack additions: [S1, V324]
Exit stack: [V838, {0x7d, 0x107}, S2, S1, V324]

================================

Block 0x3e9
[0x3e9:0x3ee]
---
Predecessors: [0x38e, 0x3cc]
Successors: [0x3ef, 0x416]
---
0x3e9 JUMPDEST
0x3ea ISZERO
0x3eb PUSH2 0x416
0x3ee JUMPI
---
0x3e9: JUMPDEST 
0x3ea: V325 = ISZERO S0
0x3eb: V326 = 0x416
0x3ee: JUMPI 0x416 V325
---
Entry stack: [V838, {0x7d, 0x107}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V838, {0x7d, 0x107}, S2, S1]

================================

Block 0x3ef
[0x3ef:0x415]
---
Predecessors: [0x3e9]
Successors: [0x416]
---
0x3ef PUSH1 0x40
0x3f1 MLOAD
0x3f2 PUSH1 0x1
0x3f4 PUSH1 0xa0
0x3f6 PUSH1 0x2
0x3f8 EXP
0x3f9 SUB
0x3fa DUP3
0x3fb AND
0x3fc SWAP1
0x3fd PUSH1 0x14
0x3ff CALLVALUE
0x400 DIV
0x401 DUP1
0x402 ISZERO
0x403 PUSH2 0x8fc
0x406 MUL
0x407 SWAP2
0x408 PUSH1 0x0
0x40a DUP2
0x40b DUP2
0x40c DUP2
0x40d DUP6
0x40e DUP9
0x40f DUP9
0x410 CALL
0x411 POP
0x412 POP
0x413 POP
0x414 POP
0x415 POP
---
0x3ef: V327 = 0x40
0x3f1: V328 = M[0x40]
0x3f2: V329 = 0x1
0x3f4: V330 = 0xa0
0x3f6: V331 = 0x2
0x3f8: V332 = EXP 0x2 0xa0
0x3f9: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fb: V334 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3fd: V335 = 0x14
0x3ff: V336 = CALLVALUE
0x400: V337 = DIV V336 0x14
0x402: V338 = ISZERO V337
0x403: V339 = 0x8fc
0x406: V340 = MUL 0x8fc V338
0x408: V341 = 0x0
0x410: V342 = CALL V340 V334 V337 V328 0x0 V328 0x0
---
Entry stack: [V838, {0x7d, 0x107}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V838, {0x7d, 0x107}, S1, S0]

================================

Block 0x416
[0x416:0x455]
---
Predecessors: [0x3e9, 0x3ef]
Successors: [0x7d, 0x107]
---
0x416 JUMPDEST
0x417 PUSH1 0x40
0x419 DUP1
0x41a MLOAD
0x41b PUSH1 0x1
0x41d PUSH1 0xa0
0x41f PUSH1 0x2
0x421 EXP
0x422 SUB
0x423 DUP5
0x424 AND
0x425 DUP2
0x426 MSTORE
0x427 SWAP1
0x428 MLOAD
0x429 PUSH32 0x31d3ac54da09405b02d1de0ee0de648de637fbdc111123be0d7fc31f2a544c0b
0x44a SWAP2
0x44b DUP2
0x44c SWAP1
0x44d SUB
0x44e PUSH1 0x20
0x450 ADD
0x451 SWAP1
0x452 LOG1
0x453 POP
0x454 POP
0x455 JUMP
---
0x416: JUMPDEST 
0x417: V343 = 0x40
0x41a: V344 = M[0x40]
0x41b: V345 = 0x1
0x41d: V346 = 0xa0
0x41f: V347 = 0x2
0x421: V348 = EXP 0x2 0xa0
0x422: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x424: V350 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x426: M[V344] = V350
0x428: V351 = M[0x40]
0x429: V352 = 0x31d3ac54da09405b02d1de0ee0de648de637fbdc111123be0d7fc31f2a544c0b
0x44d: V353 = SUB V344 V351
0x44e: V354 = 0x20
0x450: V355 = ADD 0x20 V353
0x452: LOG V351 V355 0x31d3ac54da09405b02d1de0ee0de648de637fbdc111123be0d7fc31f2a544c0b
0x455: JUMP {0x7d, 0x107}
---
Entry stack: [V838, {0x7d, 0x107}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V838]

================================

Block 0x456
[0x456:0x4c4]
---
Predecessors: [0xfe, 0x187, 0x348]
Successors: [0x4c5, 0x4c9]
---
0x456 JUMPDEST
0x457 PUSH1 0x1
0x459 PUSH1 0xa0
0x45b PUSH1 0x2
0x45d EXP
0x45e SUB
0x45f DUP1
0x460 DUP3
0x461 AND
0x462 PUSH1 0x0
0x464 SWAP1
0x465 DUP2
0x466 MSTORE
0x467 PUSH1 0x20
0x469 DUP2
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x40
0x46e DUP1
0x46f DUP4
0x470 SHA3
0x471 SLOAD
0x472 DUP2
0x473 MLOAD
0x474 PUSH32 0x4528c69900000000000000000000000000000000000000000000000000000000
0x495 DUP2
0x496 MSTORE
0x497 SWAP2
0x498 MLOAD
0x499 SWAP5
0x49a AND
0x49b SWAP4
0x49c DUP5
0x49d SWAP3
0x49e PUSH4 0xc33fb877
0x4a3 SWAP3
0x4a4 DUP5
0x4a5 SWAP3
0x4a6 PUSH4 0x4528c699
0x4ab SWAP3
0x4ac PUSH1 0x4
0x4ae DUP1
0x4af DUP5
0x4b0 ADD
0x4b1 SWAP4
0x4b2 SWAP2
0x4b3 SWAP3
0x4b4 SWAP2
0x4b5 DUP3
0x4b6 SWAP1
0x4b7 SUB
0x4b8 ADD
0x4b9 DUP2
0x4ba DUP10
0x4bb DUP8
0x4bc DUP1
0x4bd EXTCODESIZE
0x4be ISZERO
0x4bf DUP1
0x4c0 ISZERO
0x4c1 PUSH2 0x4c9
0x4c4 JUMPI
---
0x456: JUMPDEST 
0x457: V356 = 0x1
0x459: V357 = 0xa0
0x45b: V358 = 0x2
0x45d: V359 = EXP 0x2 0xa0
0x45e: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x461: V361 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x462: V362 = 0x0
0x466: M[0x0] = V361
0x467: V363 = 0x20
0x46b: M[0x20] = 0x0
0x46c: V364 = 0x40
0x470: V365 = SHA3 0x0 0x40
0x471: V366 = S[V365]
0x473: V367 = M[0x40]
0x474: V368 = 0x4528c69900000000000000000000000000000000000000000000000000000000
0x496: M[V367] = 0x4528c69900000000000000000000000000000000000000000000000000000000
0x498: V369 = M[0x40]
0x49a: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x49e: V371 = 0xc33fb877
0x4a6: V372 = 0x4528c699
0x4ac: V373 = 0x4
0x4b0: V374 = ADD V367 0x4
0x4b7: V375 = SUB V367 V369
0x4b8: V376 = ADD V375 0x4
0x4bd: V377 = EXTCODESIZE V370
0x4be: V378 = ISZERO V377
0x4c0: V379 = ISZERO V378
0x4c1: V380 = 0x4c9
0x4c4: JUMPI 0x4c9 V379
---
Entry stack: [S5, {0x7d, 0x107}, S3, S2, {0x107, 0x38e}, S0]
Stack pops: 1
Stack additions: [S0, V370, 0x0, V370, 0xc33fb877, V370, 0x4528c699, V374, 0x20, V369, V376, V369, 0x0, V370, V378]
Exit stack: [S5, {0x7d, 0x107}, S3, S2, {0x107, 0x38e}, S0, V370, 0x0, V370, 0xc33fb877, V370, 0x4528c699, V374, 0x20, V369, V376, V369, 0x0, V370, V378]

================================

Block 0x4c5
[0x4c5:0x4c8]
---
Predecessors: [0x456]
Successors: []
---
0x4c5 PUSH1 0x0
0x4c7 DUP1
0x4c8 REVERT
---
0x4c5: V381 = 0x0
0x4c8: REVERT 0x0 0x0
---
Entry stack: [V838, {0x7d, 0x107}, S17, S16, {0x107, 0x38e}, S14, V370, 0x0, V370, 0xc33fb877, V370, 0x4528c699, V374, 0x20, V369, V376, V369, 0x0, V370, V378]
Stack pops: 0
Stack additions: []
Exit stack: [V838, {0x7d, 0x107}, S17, S16, {0x107, 0x38e}, S14, V370, 0x0, V370, 0xc33fb877, V370, 0x4528c699, V374, 0x20, V369, V376, V369, 0x0, V370, V378]

================================

Block 0x4c9
[0x4c9:0x4d3]
---
Predecessors: [0x456]
Successors: [0x4d4, 0x4dd]
---
0x4c9 JUMPDEST
0x4ca POP
0x4cb GAS
0x4cc CALL
0x4cd ISZERO
0x4ce DUP1
0x4cf ISZERO
0x4d0 PUSH2 0x4dd
0x4d3 JUMPI
---
0x4c9: JUMPDEST 
0x4cb: V382 = GAS
0x4cc: V383 = CALL V382 V370 0x0 V369 V376 V369 0x20
0x4cd: V384 = ISZERO V383
0x4cf: V385 = ISZERO V384
0x4d0: V386 = 0x4dd
0x4d3: JUMPI 0x4dd V385
---
Entry stack: [V838, {0x7d, 0x107}, S17, S16, {0x107, 0x38e}, S14, V370, 0x0, V370, 0xc33fb877, V370, 0x4528c699, V374, 0x20, V369, V376, V369, 0x0, V370, V378]
Stack pops: 7
Stack additions: [V384]
Exit stack: [V838, {0x7d, 0x107}, S17, S16, {0x107, 0x38e}, S14, V370, 0x0, V370, 0xc33fb877, V370, 0x4528c699, V374, V384]

================================

Block 0x4d4
[0x4d4:0x4dc]
---
Predecessors: [0x4c9]
Successors: []
---
0x4d4 RETURNDATASIZE
0x4d5 PUSH1 0x0
0x4d7 DUP1
0x4d8 RETURNDATACOPY
0x4d9 RETURNDATASIZE
0x4da PUSH1 0x0
0x4dc REVERT
---
0x4d4: V387 = RETURNDATASIZE
0x4d5: V388 = 0x0
0x4d8: RETURNDATACOPY 0x0 0x0 V387
0x4d9: V389 = RETURNDATASIZE
0x4da: V390 = 0x0
0x4dc: REVERT 0x0 V389
---
Entry stack: [V838, {0x7d, 0x107}, S11, S10, {0x107, 0x38e}, S8, S7, 0x0, S5, 0xc33fb877, S3, 0x4528c699, S1, V384]
Stack pops: 0
Stack additions: []
Exit stack: [V838, {0x7d, 0x107}, S11, S10, {0x107, 0x38e}, S8, S7, 0x0, S5, 0xc33fb877, S3, 0x4528c699, S1, V384]

================================

Block 0x4dd
[0x4dd:0x4ee]
---
Predecessors: [0x4c9]
Successors: [0x4ef, 0x4f3]
---
0x4dd JUMPDEST
0x4de POP
0x4df POP
0x4e0 POP
0x4e1 POP
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 RETURNDATASIZE
0x4e6 PUSH1 0x20
0x4e8 DUP2
0x4e9 LT
0x4ea ISZERO
0x4eb PUSH2 0x4f3
0x4ee JUMPI
---
0x4dd: JUMPDEST 
0x4e2: V391 = 0x40
0x4e4: V392 = M[0x40]
0x4e5: V393 = RETURNDATASIZE
0x4e6: V394 = 0x20
0x4e9: V395 = LT V393 0x20
0x4ea: V396 = ISZERO V395
0x4eb: V397 = 0x4f3
0x4ee: JUMPI 0x4f3 V396
---
Entry stack: [V838, {0x7d, 0x107}, S11, S10, {0x107, 0x38e}, S8, S7, 0x0, S5, 0xc33fb877, S3, 0x4528c699, S1, V384]
Stack pops: 4
Stack additions: [V392, V393]
Exit stack: [V838, {0x7d, 0x107}, S11, S10, {0x107, 0x38e}, S8, S7, 0x0, S5, 0xc33fb877, V392, V393]

================================

Block 0x4ef
[0x4ef:0x4f2]
---
Predecessors: [0x4dd]
Successors: []
---
0x4ef PUSH1 0x0
0x4f1 DUP1
0x4f2 REVERT
---
0x4ef: V398 = 0x0
0x4f2: REVERT 0x0 0x0
---
Entry stack: [V838, {0x7d, 0x107}, S9, S8, {0x107, 0x38e}, S6, S5, 0x0, S3, 0xc33fb877, V392, V393]
Stack pops: 0
Stack additions: []
Exit stack: [V838, {0x7d, 0x107}, S9, S8, {0x107, 0x38e}, S6, S5, 0x0, S3, 0xc33fb877, V392, V393]

================================

Block 0x4f3
[0x4f3:0x525]
---
Predecessors: [0x4dd]
Successors: [0x526, 0x52a]
---
0x4f3 JUMPDEST
0x4f4 POP
0x4f5 MLOAD
0x4f6 PUSH1 0x40
0x4f8 DUP1
0x4f9 MLOAD
0x4fa PUSH1 0xe0
0x4fc PUSH1 0x2
0x4fe EXP
0x4ff PUSH4 0xffffffff
0x504 DUP6
0x505 AND
0x506 MUL
0x507 DUP2
0x508 MSTORE
0x509 SWAP1
0x50a MLOAD
0x50b PUSH1 0x4
0x50d DUP1
0x50e DUP4
0x50f ADD
0x510 SWAP3
0x511 PUSH1 0x20
0x513 SWAP3
0x514 SWAP2
0x515 SWAP1
0x516 DUP3
0x517 SWAP1
0x518 SUB
0x519 ADD
0x51a DUP2
0x51b DUP6
0x51c DUP9
0x51d DUP1
0x51e EXTCODESIZE
0x51f ISZERO
0x520 DUP1
0x521 ISZERO
0x522 PUSH2 0x52a
0x525 JUMPI
---
0x4f3: JUMPDEST 
0x4f5: V399 = M[V392]
0x4f6: V400 = 0x40
0x4f9: V401 = M[0x40]
0x4fa: V402 = 0xe0
0x4fc: V403 = 0x2
0x4fe: V404 = EXP 0x2 0xe0
0x4ff: V405 = 0xffffffff
0x505: V406 = AND 0xc33fb877 0xffffffff
0x506: V407 = MUL 0xc33fb877 0x100000000000000000000000000000000000000000000000000000000
0x508: M[V401] = 0xc33fb87700000000000000000000000000000000000000000000000000000000
0x50a: V408 = M[0x40]
0x50b: V409 = 0x4
0x50f: V410 = ADD V401 0x4
0x511: V411 = 0x20
0x518: V412 = SUB V401 V408
0x519: V413 = ADD V412 0x4
0x51e: V414 = EXTCODESIZE S3
0x51f: V415 = ISZERO V414
0x521: V416 = ISZERO V415
0x522: V417 = 0x52a
0x525: JUMPI 0x52a V416
---
Entry stack: [V838, {0x7d, 0x107}, S9, S8, {0x107, 0x38e}, S6, S5, 0x0, S3, 0xc33fb877, V392, V393]
Stack pops: 4
Stack additions: [S3, S2, V399, V410, 0x20, V408, V413, V408, V399, S3, V415]
Exit stack: [V838, {0x7d, 0x107}, S9, S8, {0x107, 0x38e}, S6, S5, 0x0, S3, 0xc33fb877, V399, V410, 0x20, V408, V413, V408, V399, S3, V415]

================================

Block 0x526
[0x526:0x529]
---
Predecessors: [0x4f3]
Successors: []
---
0x526 PUSH1 0x0
0x528 DUP1
0x529 REVERT
---
0x526: V418 = 0x0
0x529: REVERT 0x0 0x0
---
Entry stack: [V838, {0x7d, 0x107}, S16, S15, {0x107, 0x38e}, S13, S12, 0x0, S10, 0xc33fb877, V399, V410, 0x20, V408, V413, V408, V399, S1, V415]
Stack pops: 0
Stack additions: []
Exit stack: [V838, {0x7d, 0x107}, S16, S15, {0x107, 0x38e}, S13, S12, 0x0, S10, 0xc33fb877, V399, V410, 0x20, V408, V413, V408, V399, S1, V415]

================================

Block 0x52a
[0x52a:0x534]
---
Predecessors: [0x4f3]
Successors: [0x535, 0x53e]
---
0x52a JUMPDEST
0x52b POP
0x52c GAS
0x52d CALL
0x52e ISZERO
0x52f DUP1
0x530 ISZERO
0x531 PUSH2 0x53e
0x534 JUMPI
---
0x52a: JUMPDEST 
0x52c: V419 = GAS
0x52d: V420 = CALL V419 S1 V399 V408 V413 V408 0x20
0x52e: V421 = ISZERO V420
0x530: V422 = ISZERO V421
0x531: V423 = 0x53e
0x534: JUMPI 0x53e V422
---
Entry stack: [V838, {0x7d, 0x107}, S16, S15, {0x107, 0x38e}, S13, S12, 0x0, S10, 0xc33fb877, V399, V410, 0x20, V408, V413, V408, V399, S1, V415]
Stack pops: 7
Stack additions: [V421]
Exit stack: [V838, {0x7d, 0x107}, S16, S15, {0x107, 0x38e}, S13, S12, 0x0, S10, 0xc33fb877, V399, V410, V421]

================================

Block 0x535
[0x535:0x53d]
---
Predecessors: [0x52a]
Successors: []
---
0x535 RETURNDATASIZE
0x536 PUSH1 0x0
0x538 DUP1
0x539 RETURNDATACOPY
0x53a RETURNDATASIZE
0x53b PUSH1 0x0
0x53d REVERT
---
0x535: V424 = RETURNDATASIZE
0x536: V425 = 0x0
0x539: RETURNDATACOPY 0x0 0x0 V424
0x53a: V426 = RETURNDATASIZE
0x53b: V427 = 0x0
0x53d: REVERT 0x0 V426
---
Entry stack: [V838, {0x7d, 0x107}, S10, S9, {0x107, 0x38e}, S7, S6, 0x0, S4, 0xc33fb877, S2, S1, V421]
Stack pops: 0
Stack additions: []
Exit stack: [V838, {0x7d, 0x107}, S10, S9, {0x107, 0x38e}, S7, S6, 0x0, S4, 0xc33fb877, S2, S1, V421]

================================

Block 0x53e
[0x53e:0x550]
---
Predecessors: [0x52a]
Successors: [0x551, 0x555]
---
0x53e JUMPDEST
0x53f POP
0x540 POP
0x541 POP
0x542 POP
0x543 POP
0x544 PUSH1 0x40
0x546 MLOAD
0x547 RETURNDATASIZE
0x548 PUSH1 0x20
0x54a DUP2
0x54b LT
0x54c ISZERO
0x54d PUSH2 0x555
0x550 JUMPI
---
0x53e: JUMPDEST 
0x544: V428 = 0x40
0x546: V429 = M[0x40]
0x547: V430 = RETURNDATASIZE
0x548: V431 = 0x20
0x54b: V432 = LT V430 0x20
0x54c: V433 = ISZERO V432
0x54d: V434 = 0x555
0x550: JUMPI 0x555 V433
---
Entry stack: [V838, {0x7d, 0x107}, S10, S9, {0x107, 0x38e}, S7, S6, 0x0, S4, 0xc33fb877, S2, S1, V421]
Stack pops: 5
Stack additions: [V429, V430]
Exit stack: [V838, {0x7d, 0x107}, S10, S9, {0x107, 0x38e}, S7, S6, 0x0, V429, V430]

================================

Block 0x551
[0x551:0x554]
---
Predecessors: [0x53e]
Successors: []
---
0x551 PUSH1 0x0
0x553 DUP1
0x554 REVERT
---
0x551: V435 = 0x0
0x554: REVERT 0x0 0x0
---
Entry stack: [V838, {0x7d, 0x107}, S7, S6, {0x107, 0x38e}, S4, S3, 0x0, V429, V430]
Stack pops: 0
Stack additions: []
Exit stack: [V838, {0x7d, 0x107}, S7, S6, {0x107, 0x38e}, S4, S3, 0x0, V429, V430]

================================

Block 0x555
[0x555:0x55f]
---
Predecessors: [0x53e]
Successors: [0x560, 0x5c6]
---
0x555 JUMPDEST
0x556 POP
0x557 MLOAD
0x558 SWAP1
0x559 POP
0x55a DUP1
0x55b ISZERO
0x55c PUSH2 0x5c6
0x55f JUMPI
---
0x555: JUMPDEST 
0x557: V436 = M[V429]
0x55b: V437 = ISZERO V436
0x55c: V438 = 0x5c6
0x55f: JUMPI 0x5c6 V437
---
Entry stack: [V838, {0x7d, 0x107}, S7, S6, {0x107, 0x38e}, S4, S3, 0x0, V429, V430]
Stack pops: 3
Stack additions: [V436]
Exit stack: [V838, {0x7d, 0x107}, S7, S6, {0x107, 0x38e}, S4, S3, V436]

================================

Block 0x560
[0x560:0x5c5]
---
Predecessors: [0x555]
Successors: [0x5c6]
---
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 DUP4
0x569 AND
0x56a PUSH1 0x0
0x56c DUP2
0x56d DUP2
0x56e MSTORE
0x56f PUSH1 0x20
0x571 DUP2
0x572 DUP2
0x573 MSTORE
0x574 PUSH1 0x40
0x576 SWAP2
0x577 DUP3
0x578 SWAP1
0x579 SHA3
0x57a DUP1
0x57b SLOAD
0x57c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x591 NOT
0x592 AND
0x593 SWAP1
0x594 SSTORE
0x595 DUP2
0x596 MLOAD
0x597 SWAP3
0x598 DUP4
0x599 MSTORE
0x59a SWAP1
0x59b MLOAD
0x59c PUSH32 0x1a5e355a9a34d7eac1e439a6c610ba1fa72aa45f7645724ce5187fa19c3bd3fc
0x5bd SWAP3
0x5be DUP2
0x5bf SWAP1
0x5c0 SUB
0x5c1 SWAP1
0x5c2 SWAP2
0x5c3 ADD
0x5c4 SWAP1
0x5c5 LOG1
---
0x560: V439 = 0x1
0x562: V440 = 0xa0
0x564: V441 = 0x2
0x566: V442 = EXP 0x2 0xa0
0x567: V443 = SUB 0x10000000000000000000000000000000000000000 0x1
0x569: V444 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x56a: V445 = 0x0
0x56e: M[0x0] = V444
0x56f: V446 = 0x20
0x573: M[0x20] = 0x0
0x574: V447 = 0x40
0x579: V448 = SHA3 0x0 0x40
0x57b: V449 = S[V448]
0x57c: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x591: V451 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x592: V452 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V449
0x594: S[V448] = V452
0x596: V453 = M[0x40]
0x599: M[V453] = V444
0x59b: V454 = M[0x40]
0x59c: V455 = 0x1a5e355a9a34d7eac1e439a6c610ba1fa72aa45f7645724ce5187fa19c3bd3fc
0x5c0: V456 = SUB V453 V454
0x5c3: V457 = ADD 0x20 V456
0x5c5: LOG V454 V457 0x1a5e355a9a34d7eac1e439a6c610ba1fa72aa45f7645724ce5187fa19c3bd3fc
---
Entry stack: [V838, {0x7d, 0x107}, S5, S4, {0x107, 0x38e}, S2, S1, V436]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V838, {0x7d, 0x107}, S5, S4, {0x107, 0x38e}, S2, S1, V436]

================================

Block 0x5c6
[0x5c6:0x5ca]
---
Predecessors: [0x555, 0x560]
Successors: [0x107, 0x38e]
---
0x5c6 JUMPDEST
0x5c7 POP
0x5c8 POP
0x5c9 POP
0x5ca JUMP
---
0x5c6: JUMPDEST 
0x5ca: JUMP {0x107, 0x38e}
---
Entry stack: [V838, {0x7d, 0x107}, S5, S4, {0x107, 0x38e}, S2, S1, V436]
Stack pops: 4
Stack additions: []
Exit stack: [V838, {0x7d, 0x107}, S5, S4]

================================

Block 0x5cb
[0x5cb:0x5e5]
---
Predecessors: [0x115]
Successors: [0x12a]
---
0x5cb JUMPDEST
0x5cc PUSH1 0x0
0x5ce PUSH1 0x20
0x5d0 DUP2
0x5d1 SWAP1
0x5d2 MSTORE
0x5d3 SWAP1
0x5d4 DUP2
0x5d5 MSTORE
0x5d6 PUSH1 0x40
0x5d8 SWAP1
0x5d9 SHA3
0x5da SLOAD
0x5db PUSH1 0x1
0x5dd PUSH1 0xa0
0x5df PUSH1 0x2
0x5e1 EXP
0x5e2 SUB
0x5e3 AND
0x5e4 DUP2
0x5e5 JUMP
---
0x5cb: JUMPDEST 
0x5cc: V458 = 0x0
0x5ce: V459 = 0x20
0x5d2: M[0x20] = 0x0
0x5d5: M[0x0] = V90
0x5d6: V460 = 0x40
0x5d9: V461 = SHA3 0x0 0x40
0x5da: V462 = S[V461]
0x5db: V463 = 0x1
0x5dd: V464 = 0xa0
0x5df: V465 = 0x2
0x5e1: V466 = EXP 0x2 0xa0
0x5e2: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e3: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x5e5: JUMP 0x12a
---
Entry stack: [V13, 0x12a, V90]
Stack pops: 2
Stack additions: [S1, V468]
Exit stack: [V13, 0x12a, V468]

================================

Block 0x5e6
[0x5e6:0x5fa]
---
Predecessors: [0x152]
Successors: [0x167]
---
0x5e6 JUMPDEST
0x5e7 PUSH1 0x1
0x5e9 PUSH1 0x20
0x5eb MSTORE
0x5ec PUSH1 0x0
0x5ee SWAP1
0x5ef DUP2
0x5f0 MSTORE
0x5f1 PUSH1 0x40
0x5f3 SWAP1
0x5f4 SHA3
0x5f5 SLOAD
0x5f6 PUSH1 0xff
0x5f8 AND
0x5f9 DUP2
0x5fa JUMP
---
0x5e6: JUMPDEST 
0x5e7: V469 = 0x1
0x5e9: V470 = 0x20
0x5eb: M[0x20] = 0x1
0x5ec: V471 = 0x0
0x5f0: M[0x0] = V116
0x5f1: V472 = 0x40
0x5f4: V473 = SHA3 0x0 0x40
0x5f5: V474 = S[V473]
0x5f6: V475 = 0xff
0x5f8: V476 = AND 0xff V474
0x5fa: JUMP 0x167
---
Entry stack: [V13, 0x167, V116]
Stack pops: 2
Stack additions: [S1, V476]
Exit stack: [V13, 0x167, V476]

================================

Block 0x5fb
[0x5fb:0x61c]
---
Predecessors: [0x1c2]
Successors: [0x61d, 0x692]
---
0x5fb JUMPDEST
0x5fc PUSH1 0x1
0x5fe PUSH1 0xa0
0x600 PUSH1 0x2
0x602 EXP
0x603 SUB
0x604 DUP2
0x605 AND
0x606 PUSH1 0x0
0x608 SWAP1
0x609 DUP2
0x60a MSTORE
0x60b PUSH1 0x1
0x60d PUSH1 0x20
0x60f MSTORE
0x610 PUSH1 0x40
0x612 DUP2
0x613 SHA3
0x614 SLOAD
0x615 PUSH1 0xff
0x617 AND
0x618 ISZERO
0x619 PUSH2 0x692
0x61c JUMPI
---
0x5fb: JUMPDEST 
0x5fc: V477 = 0x1
0x5fe: V478 = 0xa0
0x600: V479 = 0x2
0x602: V480 = EXP 0x2 0xa0
0x603: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x605: V482 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x606: V483 = 0x0
0x60a: M[0x0] = V482
0x60b: V484 = 0x1
0x60d: V485 = 0x20
0x60f: M[0x20] = 0x1
0x610: V486 = 0x40
0x613: V487 = SHA3 0x0 0x40
0x614: V488 = S[V487]
0x615: V489 = 0xff
0x617: V490 = AND 0xff V488
0x618: V491 = ISZERO V490
0x619: V492 = 0x692
0x61c: JUMPI 0x692 V491
---
Entry stack: [V13, 0x107, V165]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V13, 0x107, V165, 0x0]

================================

Block 0x61d
[0x61d:0x691]
---
Predecessors: [0x5fb]
Successors: []
---
0x61d PUSH1 0x40
0x61f DUP1
0x620 MLOAD
0x621 PUSH1 0xe5
0x623 PUSH1 0x2
0x625 EXP
0x626 PUSH3 0x461bcd
0x62a MUL
0x62b DUP2
0x62c MSTORE
0x62d PUSH1 0x20
0x62f PUSH1 0x4
0x631 DUP3
0x632 ADD
0x633 MSTORE
0x634 PUSH1 0x22
0x636 PUSH1 0x24
0x638 DUP3
0x639 ADD
0x63a MSTORE
0x63b PUSH32 0x54686973206164647265737320697320616c7265616479206120726566657272
0x65c PUSH1 0x44
0x65e DUP3
0x65f ADD
0x660 MSTORE
0x661 PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000
0x682 PUSH1 0x64
0x684 DUP3
0x685 ADD
0x686 MSTORE
0x687 SWAP1
0x688 MLOAD
0x689 SWAP1
0x68a DUP2
0x68b SWAP1
0x68c SUB
0x68d PUSH1 0x84
0x68f ADD
0x690 SWAP1
0x691 REVERT
---
0x61d: V493 = 0x40
0x620: V494 = M[0x40]
0x621: V495 = 0xe5
0x623: V496 = 0x2
0x625: V497 = EXP 0x2 0xe5
0x626: V498 = 0x461bcd
0x62a: V499 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x62c: M[V494] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x62d: V500 = 0x20
0x62f: V501 = 0x4
0x632: V502 = ADD V494 0x4
0x633: M[V502] = 0x20
0x634: V503 = 0x22
0x636: V504 = 0x24
0x639: V505 = ADD V494 0x24
0x63a: M[V505] = 0x22
0x63b: V506 = 0x54686973206164647265737320697320616c7265616479206120726566657272
0x65c: V507 = 0x44
0x65f: V508 = ADD V494 0x44
0x660: M[V508] = 0x54686973206164647265737320697320616c7265616479206120726566657272
0x661: V509 = 0x6572000000000000000000000000000000000000000000000000000000000000
0x682: V510 = 0x64
0x685: V511 = ADD V494 0x64
0x686: M[V511] = 0x6572000000000000000000000000000000000000000000000000000000000000
0x688: V512 = M[0x40]
0x68c: V513 = SUB V494 V512
0x68d: V514 = 0x84
0x68f: V515 = ADD 0x84 V513
0x691: REVERT V512 V515
---
Entry stack: [V13, 0x107, V165, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x107, V165, 0x0]

================================

Block 0x692
[0x692:0x6c0]
---
Predecessors: [0x5fb]
Successors: [0x7bd]
---
0x692 JUMPDEST
0x693 PUSH1 0x1
0x695 PUSH1 0xa0
0x697 PUSH1 0x2
0x699 EXP
0x69a SUB
0x69b DUP3
0x69c AND
0x69d PUSH1 0x0
0x69f SWAP1
0x6a0 DUP2
0x6a1 MSTORE
0x6a2 PUSH1 0x1
0x6a4 PUSH1 0x20
0x6a6 DUP2
0x6a7 SWAP1
0x6a8 MSTORE
0x6a9 PUSH1 0x40
0x6ab SWAP1
0x6ac SWAP2
0x6ad SHA3
0x6ae DUP1
0x6af SLOAD
0x6b0 PUSH1 0xff
0x6b2 NOT
0x6b3 AND
0x6b4 SWAP1
0x6b5 SWAP2
0x6b6 OR
0x6b7 SWAP1
0x6b8 SSTORE
0x6b9 ADDRESS
0x6ba PUSH2 0x6c1
0x6bd PUSH2 0x7bd
0x6c0 JUMP
---
0x692: JUMPDEST 
0x693: V516 = 0x1
0x695: V517 = 0xa0
0x697: V518 = 0x2
0x699: V519 = EXP 0x2 0xa0
0x69a: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69c: V521 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x69d: V522 = 0x0
0x6a1: M[0x0] = V521
0x6a2: V523 = 0x1
0x6a4: V524 = 0x20
0x6a8: M[0x20] = 0x1
0x6a9: V525 = 0x40
0x6ad: V526 = SHA3 0x0 0x40
0x6af: V527 = S[V526]
0x6b0: V528 = 0xff
0x6b2: V529 = NOT 0xff
0x6b3: V530 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V527
0x6b6: V531 = OR 0x1 V530
0x6b8: S[V526] = V531
0x6b9: V532 = ADDRESS
0x6ba: V533 = 0x6c1
0x6bd: V534 = 0x7bd
0x6c0: JUMP 0x7bd
---
Entry stack: [V13, 0x107, V165, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V532, 0x6c1]
Exit stack: [V13, 0x107, V165, 0x0, V532, 0x6c1]

================================

Block 0x6c1
[0x6c1:0x6e4]
---
Predecessors: [0x7bd]
Successors: [0x6e5, 0x6ee]
---
0x6c1 JUMPDEST
0x6c2 PUSH1 0x1
0x6c4 PUSH1 0xa0
0x6c6 PUSH1 0x2
0x6c8 EXP
0x6c9 SUB
0x6ca SWAP1
0x6cb SWAP2
0x6cc AND
0x6cd DUP2
0x6ce MSTORE
0x6cf PUSH1 0x40
0x6d1 MLOAD
0x6d2 SWAP1
0x6d3 DUP2
0x6d4 SWAP1
0x6d5 SUB
0x6d6 PUSH1 0x20
0x6d8 ADD
0x6d9 SWAP1
0x6da PUSH1 0x0
0x6dc CREATE
0x6dd DUP1
0x6de ISZERO
0x6df DUP1
0x6e0 ISZERO
0x6e1 PUSH2 0x6ee
0x6e4 JUMPI
---
0x6c1: JUMPDEST 
0x6c2: V535 = 0x1
0x6c4: V536 = 0xa0
0x6c6: V537 = 0x2
0x6c8: V538 = EXP 0x2 0xa0
0x6c9: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cc: V540 = AND V532 0xffffffffffffffffffffffffffffffffffffffff
0x6ce: M[V629] = V540
0x6cf: V541 = 0x40
0x6d1: V542 = M[0x40]
0x6d5: V543 = SUB V629 V542
0x6d6: V544 = 0x20
0x6d8: V545 = ADD 0x20 V543
0x6da: V546 = 0x0
0x6dc: V547 = CREATE 0x0 V542 V545
0x6de: V548 = ISZERO V547
0x6e0: V549 = ISZERO V548
0x6e1: V550 = 0x6ee
0x6e4: JUMPI 0x6ee V549
---
Entry stack: [V13, 0x107, V165, 0x0, V532, V629]
Stack pops: 2
Stack additions: [V547, V548]
Exit stack: [V13, 0x107, V165, 0x0, V547, V548]

================================

Block 0x6e5
[0x6e5:0x6ed]
---
Predecessors: [0x6c1]
Successors: []
---
0x6e5 RETURNDATASIZE
0x6e6 PUSH1 0x0
0x6e8 DUP1
0x6e9 RETURNDATACOPY
0x6ea RETURNDATASIZE
0x6eb PUSH1 0x0
0x6ed REVERT
---
0x6e5: V551 = RETURNDATASIZE
0x6e6: V552 = 0x0
0x6e9: RETURNDATACOPY 0x0 0x0 V551
0x6ea: V553 = RETURNDATASIZE
0x6eb: V554 = 0x0
0x6ed: REVERT 0x0 V553
---
Entry stack: [V13, 0x107, V165, 0x0, V547, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x107, V165, 0x0, V547, V548]

================================

Block 0x6ee
[0x6ee:0x747]
---
Predecessors: [0x6c1]
Successors: [0x748, 0x74c]
---
0x6ee JUMPDEST
0x6ef POP
0x6f0 SWAP1
0x6f1 POP
0x6f2 DUP1
0x6f3 PUSH1 0x1
0x6f5 PUSH1 0xa0
0x6f7 PUSH1 0x2
0x6f9 EXP
0x6fa SUB
0x6fb AND
0x6fc PUSH4 0xa18a7bfc
0x701 DUP4
0x702 PUSH1 0x40
0x704 MLOAD
0x705 DUP3
0x706 PUSH4 0xffffffff
0x70b AND
0x70c PUSH1 0xe0
0x70e PUSH1 0x2
0x710 EXP
0x711 MUL
0x712 DUP2
0x713 MSTORE
0x714 PUSH1 0x4
0x716 ADD
0x717 DUP1
0x718 DUP3
0x719 PUSH1 0x1
0x71b PUSH1 0xa0
0x71d PUSH1 0x2
0x71f EXP
0x720 SUB
0x721 AND
0x722 PUSH1 0x1
0x724 PUSH1 0xa0
0x726 PUSH1 0x2
0x728 EXP
0x729 SUB
0x72a AND
0x72b DUP2
0x72c MSTORE
0x72d PUSH1 0x20
0x72f ADD
0x730 SWAP2
0x731 POP
0x732 POP
0x733 PUSH1 0x0
0x735 PUSH1 0x40
0x737 MLOAD
0x738 DUP1
0x739 DUP4
0x73a SUB
0x73b DUP2
0x73c PUSH1 0x0
0x73e DUP8
0x73f DUP1
0x740 EXTCODESIZE
0x741 ISZERO
0x742 DUP1
0x743 ISZERO
0x744 PUSH2 0x74c
0x747 JUMPI
---
0x6ee: JUMPDEST 
0x6f3: V555 = 0x1
0x6f5: V556 = 0xa0
0x6f7: V557 = 0x2
0x6f9: V558 = EXP 0x2 0xa0
0x6fa: V559 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fb: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x6fc: V561 = 0xa18a7bfc
0x702: V562 = 0x40
0x704: V563 = M[0x40]
0x706: V564 = 0xffffffff
0x70b: V565 = AND 0xffffffff 0xa18a7bfc
0x70c: V566 = 0xe0
0x70e: V567 = 0x2
0x710: V568 = EXP 0x2 0xe0
0x711: V569 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa18a7bfc
0x713: M[V563] = 0xa18a7bfc00000000000000000000000000000000000000000000000000000000
0x714: V570 = 0x4
0x716: V571 = ADD 0x4 V563
0x719: V572 = 0x1
0x71b: V573 = 0xa0
0x71d: V574 = 0x2
0x71f: V575 = EXP 0x2 0xa0
0x720: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x721: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x722: V578 = 0x1
0x724: V579 = 0xa0
0x726: V580 = 0x2
0x728: V581 = EXP 0x2 0xa0
0x729: V582 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72a: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V577
0x72c: M[V571] = V583
0x72d: V584 = 0x20
0x72f: V585 = ADD 0x20 V571
0x733: V586 = 0x0
0x735: V587 = 0x40
0x737: V588 = M[0x40]
0x73a: V589 = SUB V585 V588
0x73c: V590 = 0x0
0x740: V591 = EXTCODESIZE V560
0x741: V592 = ISZERO V591
0x743: V593 = ISZERO V592
0x744: V594 = 0x74c
0x747: JUMPI 0x74c V593
---
Entry stack: [V13, 0x107, V165, 0x0, V547, V548]
Stack pops: 4
Stack additions: [S3, S1, V560, 0xa18a7bfc, V585, 0x0, V588, V589, V588, 0x0, V560, V592]
Exit stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, 0x0, V588, V589, V588, 0x0, V560, V592]

================================

Block 0x748
[0x748:0x74b]
---
Predecessors: [0x6ee]
Successors: []
---
0x748 PUSH1 0x0
0x74a DUP1
0x74b REVERT
---
0x748: V595 = 0x0
0x74b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, 0x0, V588, V589, V588, 0x0, V560, V592]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, 0x0, V588, V589, V588, 0x0, V560, V592]

================================

Block 0x74c
[0x74c:0x756]
---
Predecessors: [0x6ee]
Successors: [0x757, 0x760]
---
0x74c JUMPDEST
0x74d POP
0x74e GAS
0x74f CALL
0x750 ISZERO
0x751 DUP1
0x752 ISZERO
0x753 PUSH2 0x760
0x756 JUMPI
---
0x74c: JUMPDEST 
0x74e: V596 = GAS
0x74f: V597 = CALL V596 V560 0x0 V588 V589 V588 0x0
0x750: V598 = ISZERO V597
0x752: V599 = ISZERO V598
0x753: V600 = 0x760
0x756: JUMPI 0x760 V599
---
Entry stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, 0x0, V588, V589, V588, 0x0, V560, V592]
Stack pops: 7
Stack additions: [V598]
Exit stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, V598]

================================

Block 0x757
[0x757:0x75f]
---
Predecessors: [0x74c]
Successors: []
---
0x757 RETURNDATASIZE
0x758 PUSH1 0x0
0x75a DUP1
0x75b RETURNDATACOPY
0x75c RETURNDATASIZE
0x75d PUSH1 0x0
0x75f REVERT
---
0x757: V601 = RETURNDATASIZE
0x758: V602 = 0x0
0x75b: RETURNDATACOPY 0x0 0x0 V601
0x75c: V603 = RETURNDATASIZE
0x75d: V604 = 0x0
0x75f: REVERT 0x0 V603
---
Entry stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, V598]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, V598]

================================

Block 0x760
[0x760:0x7ac]
---
Predecessors: [0x74c]
Successors: [0x107]
---
0x760 JUMPDEST
0x761 POP
0x762 POP
0x763 PUSH1 0x40
0x765 DUP1
0x766 MLOAD
0x767 PUSH1 0x1
0x769 PUSH1 0xa0
0x76b PUSH1 0x2
0x76d EXP
0x76e SUB
0x76f DUP1
0x770 DUP7
0x771 AND
0x772 DUP3
0x773 MSTORE
0x774 DUP7
0x775 AND
0x776 PUSH1 0x20
0x778 DUP3
0x779 ADD
0x77a MSTORE
0x77b DUP2
0x77c MLOAD
0x77d PUSH32 0xec49a3c8c4ae06c18160fe86119c381c9d213ac3e052ff35b594da8687b193c7
0x79e SWAP5
0x79f POP
0x7a0 SWAP1
0x7a1 DUP2
0x7a2 SWAP1
0x7a3 SUB
0x7a4 SWAP1
0x7a5 SWAP2
0x7a6 ADD
0x7a7 SWAP2
0x7a8 POP
0x7a9 LOG1
0x7aa POP
0x7ab POP
0x7ac JUMP
---
0x760: JUMPDEST 
0x763: V605 = 0x40
0x766: V606 = M[0x40]
0x767: V607 = 0x1
0x769: V608 = 0xa0
0x76b: V609 = 0x2
0x76d: V610 = EXP 0x2 0xa0
0x76e: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x771: V612 = AND V547 0xffffffffffffffffffffffffffffffffffffffff
0x773: M[V606] = V612
0x775: V613 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x776: V614 = 0x20
0x779: V615 = ADD V606 0x20
0x77a: M[V615] = V613
0x77c: V616 = M[0x40]
0x77d: V617 = 0xec49a3c8c4ae06c18160fe86119c381c9d213ac3e052ff35b594da8687b193c7
0x7a3: V618 = SUB V606 V616
0x7a6: V619 = ADD 0x40 V618
0x7a9: LOG V616 V619 0xec49a3c8c4ae06c18160fe86119c381c9d213ac3e052ff35b594da8687b193c7
0x7ac: JUMP 0x107
---
Entry stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, V598]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x7ad
[0x7ad:0x7bc]
---
Predecessors: [0x30a]
Successors: [0x317]
---
0x7ad JUMPDEST
0x7ae PUSH1 0x40
0x7b0 MLOAD
0x7b1 PUSH2 0x290
0x7b4 DUP1
0x7b5 PUSH2 0x7ce
0x7b8 DUP4
0x7b9 CODECOPY
0x7ba ADD
0x7bb SWAP1
0x7bc JUMP
---
0x7ad: JUMPDEST 
0x7ae: V620 = 0x40
0x7b0: V621 = M[0x40]
0x7b1: V622 = 0x290
0x7b5: V623 = 0x7ce
0x7b9: CODECOPY V621 0x7ce 0x290
0x7ba: V624 = ADD 0x290 V621
0x7bc: JUMP 0x317
---
Entry stack: [S6, {0x7d, 0x107}, S4, S3, S2, V242, 0x317]
Stack pops: 1
Stack additions: [V624]
Exit stack: [S6, {0x7d, 0x107}, S4, S3, S2, V242, V624]

================================

Block 0x7bd
[0x7bd:0x7cc]
---
Predecessors: [0x692]
Successors: [0x6c1]
---
0x7bd JUMPDEST
0x7be PUSH1 0x40
0x7c0 MLOAD
0x7c1 PUSH2 0x313
0x7c4 DUP1
0x7c5 PUSH2 0xa5e
0x7c8 DUP4
0x7c9 CODECOPY
0x7ca ADD
0x7cb SWAP1
0x7cc JUMP
---
0x7bd: JUMPDEST 
0x7be: V625 = 0x40
0x7c0: V626 = M[0x40]
0x7c1: V627 = 0x313
0x7c5: V628 = 0xa5e
0x7c9: CODECOPY V626 0xa5e 0x313
0x7ca: V629 = ADD 0x313 V626
0x7cc: JUMP 0x6c1
---
Entry stack: [V13, 0x107, V165, 0x0, V532, 0x6c1]
Stack pops: 1
Stack additions: [V629]
Exit stack: [V13, 0x107, V165, 0x0, V532, V629]

================================

Block 0x7cd
[0x7cd:0x7d9]
---
Predecessors: []
Successors: [0x7da]
---
0x7cd STOP
0x7ce PUSH1 0x80
0x7d0 PUSH1 0x40
0x7d2 MSTORE
0x7d3 CALLVALUE
0x7d4 DUP1
0x7d5 ISZERO
0x7d6 PUSH2 0x10
0x7d9 JUMPI
---
0x7cd: STOP 
0x7ce: V630 = 0x80
0x7d0: V631 = 0x40
0x7d2: M[0x40] = 0x80
0x7d3: V632 = CALLVALUE
0x7d5: V633 = ISZERO V632
0x7d6: V634 = 0x10
0x7d9: THROWI V633
---
Entry stack: []
Stack pops: 0
Stack additions: [V632]
Exit stack: []

================================

Block 0x7da
[0x7da:0x839]
---
Predecessors: [0x7cd]
Successors: [0x83a]
---
0x7da PUSH1 0x0
0x7dc DUP1
0x7dd REVERT
0x7de JUMPDEST
0x7df POP
0x7e0 PUSH1 0x40
0x7e2 MLOAD
0x7e3 PUSH1 0x40
0x7e5 DUP1
0x7e6 PUSH2 0x290
0x7e9 DUP4
0x7ea CODECOPY
0x7eb DUP2
0x7ec ADD
0x7ed PUSH1 0x40
0x7ef MSTORE
0x7f0 DUP1
0x7f1 MLOAD
0x7f2 PUSH1 0x20
0x7f4 SWAP1
0x7f5 SWAP2
0x7f6 ADD
0x7f7 MLOAD
0x7f8 PUSH1 0x0
0x7fa DUP1
0x7fb SLOAD
0x7fc PUSH1 0x1
0x7fe PUSH1 0xa0
0x800 PUSH1 0x2
0x802 EXP
0x803 SUB
0x804 SWAP1
0x805 SWAP4
0x806 AND
0x807 PUSH1 0x1
0x809 PUSH1 0xa0
0x80b PUSH1 0x2
0x80d EXP
0x80e SUB
0x80f NOT
0x810 SWAP1
0x811 SWAP4
0x812 AND
0x813 SWAP3
0x814 SWAP1
0x815 SWAP3
0x816 OR
0x817 DUP3
0x818 SSTORE
0x819 PUSH1 0x1
0x81b SSTORE
0x81c PUSH1 0x2
0x81e SSTORE
0x81f PUSH2 0x231
0x822 DUP1
0x823 PUSH2 0x5f
0x826 PUSH1 0x0
0x828 CODECOPY
0x829 PUSH1 0x0
0x82b RETURN
0x82c STOP
0x82d PUSH1 0x80
0x82f PUSH1 0x40
0x831 MSTORE
0x832 PUSH1 0x4
0x834 CALLDATASIZE
0x835 LT
0x836 PUSH2 0x61
0x839 JUMPI
---
0x7da: V635 = 0x0
0x7dd: REVERT 0x0 0x0
0x7de: JUMPDEST 
0x7e0: V636 = 0x40
0x7e2: V637 = M[0x40]
0x7e3: V638 = 0x40
0x7e6: V639 = 0x290
0x7ea: CODECOPY V637 0x290 0x40
0x7ec: V640 = ADD V637 0x40
0x7ed: V641 = 0x40
0x7ef: M[0x40] = V640
0x7f1: V642 = M[V637]
0x7f2: V643 = 0x20
0x7f6: V644 = ADD V637 0x20
0x7f7: V645 = M[V644]
0x7f8: V646 = 0x0
0x7fb: V647 = S[0x0]
0x7fc: V648 = 0x1
0x7fe: V649 = 0xa0
0x800: V650 = 0x2
0x802: V651 = EXP 0x2 0xa0
0x803: V652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x806: V653 = AND V642 0xffffffffffffffffffffffffffffffffffffffff
0x807: V654 = 0x1
0x809: V655 = 0xa0
0x80b: V656 = 0x2
0x80d: V657 = EXP 0x2 0xa0
0x80e: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80f: V659 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x812: V660 = AND V647 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x816: V661 = OR V660 V653
0x818: S[0x0] = V661
0x819: V662 = 0x1
0x81b: S[0x1] = V645
0x81c: V663 = 0x2
0x81e: S[0x2] = 0x0
0x81f: V664 = 0x231
0x823: V665 = 0x5f
0x826: V666 = 0x0
0x828: CODECOPY 0x0 0x5f 0x231
0x829: V667 = 0x0
0x82b: RETURN 0x0 0x231
0x82c: STOP 
0x82d: V668 = 0x80
0x82f: V669 = 0x40
0x831: M[0x40] = 0x80
0x832: V670 = 0x4
0x834: V671 = CALLDATASIZE
0x835: V672 = LT V671 0x4
0x836: V673 = 0x61
0x839: THROWI V672
---
Entry stack: [V632]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x83a
[0x83a:0x86c]
---
Predecessors: [0x7da]
Successors: [0x86d]
---
0x83a PUSH4 0xffffffff
0x83f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x85d PUSH1 0x0
0x85f CALLDATALOAD
0x860 DIV
0x861 AND
0x862 PUSH4 0x2986c0e5
0x867 DUP2
0x868 EQ
0x869 PUSH2 0x63
0x86c JUMPI
---
0x83a: V674 = 0xffffffff
0x83f: V675 = 0x100000000000000000000000000000000000000000000000000000000
0x85d: V676 = 0x0
0x85f: V677 = CALLDATALOAD 0x0
0x860: V678 = DIV V677 0x100000000000000000000000000000000000000000000000000000000
0x861: V679 = AND V678 0xffffffff
0x862: V680 = 0x2986c0e5
0x868: V681 = EQ V679 0x2986c0e5
0x869: V682 = 0x63
0x86c: THROWI V681
---
Entry stack: []
Stack pops: 0
Stack additions: [V679]
Exit stack: [V679]

================================

Block 0x86d
[0x86d:0x877]
---
Predecessors: [0x83a]
Successors: [0x878]
---
0x86d DUP1
0x86e PUSH4 0x4528c699
0x873 EQ
0x874 PUSH2 0x8a
0x877 JUMPI
---
0x86e: V683 = 0x4528c699
0x873: V684 = EQ 0x4528c699 V679
0x874: V685 = 0x8a
0x877: THROWI V684
---
Entry stack: [V679]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V679]

================================

Block 0x878
[0x878:0x882]
---
Predecessors: [0x86d]
Successors: [0x883]
---
0x878 DUP1
0x879 PUSH4 0x8da5cb5b
0x87e EQ
0x87f PUSH2 0x9f
0x882 JUMPI
---
0x879: V686 = 0x8da5cb5b
0x87e: V687 = EQ 0x8da5cb5b V679
0x87f: V688 = 0x9f
0x882: THROWI V687
---
Entry stack: [V679]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V679]

================================

Block 0x883
[0x883:0x88d]
---
Predecessors: [0x878]
Successors: [0x88e]
---
0x883 DUP1
0x884 PUSH4 0xc33fb877
0x889 EQ
0x88a PUSH2 0xdd
0x88d JUMPI
---
0x884: V689 = 0xc33fb877
0x889: V690 = EQ 0xc33fb877 V679
0x88a: V691 = 0xdd
0x88d: THROWI V690
---
Entry stack: [V679]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V679]

================================

Block 0x88e
[0x88e:0x897]
---
Predecessors: [0x883]
Successors: [0x898]
---
0x88e JUMPDEST
0x88f STOP
0x890 JUMPDEST
0x891 CALLVALUE
0x892 DUP1
0x893 ISZERO
0x894 PUSH2 0x6f
0x897 JUMPI
---
0x88e: JUMPDEST 
0x88f: STOP 
0x890: JUMPDEST 
0x891: V692 = CALLVALUE
0x893: V693 = ISZERO V692
0x894: V694 = 0x6f
0x897: THROWI V693
---
Entry stack: [V679]
Stack pops: 0
Stack additions: [V692]
Exit stack: []

================================

Block 0x898
[0x898:0x8be]
---
Predecessors: [0x88e]
Successors: [0x8bf]
---
0x898 PUSH1 0x0
0x89a DUP1
0x89b REVERT
0x89c JUMPDEST
0x89d POP
0x89e PUSH2 0x78
0x8a1 PUSH2 0xf9
0x8a4 JUMP
0x8a5 JUMPDEST
0x8a6 PUSH1 0x40
0x8a8 DUP1
0x8a9 MLOAD
0x8aa SWAP2
0x8ab DUP3
0x8ac MSTORE
0x8ad MLOAD
0x8ae SWAP1
0x8af DUP2
0x8b0 SWAP1
0x8b1 SUB
0x8b2 PUSH1 0x20
0x8b4 ADD
0x8b5 SWAP1
0x8b6 RETURN
0x8b7 JUMPDEST
0x8b8 CALLVALUE
0x8b9 DUP1
0x8ba ISZERO
0x8bb PUSH2 0x96
0x8be JUMPI
---
0x898: V695 = 0x0
0x89b: REVERT 0x0 0x0
0x89c: JUMPDEST 
0x89e: V696 = 0x78
0x8a1: V697 = 0xf9
0x8a4: THROW 
0x8a5: JUMPDEST 
0x8a6: V698 = 0x40
0x8a9: V699 = M[0x40]
0x8ac: M[V699] = S0
0x8ad: V700 = M[0x40]
0x8b1: V701 = SUB V699 V700
0x8b2: V702 = 0x20
0x8b4: V703 = ADD 0x20 V701
0x8b6: RETURN V700 V703
0x8b7: JUMPDEST 
0x8b8: V704 = CALLVALUE
0x8ba: V705 = ISZERO V704
0x8bb: V706 = 0x96
0x8be: THROWI V705
---
Entry stack: [V692]
Stack pops: 0
Stack additions: [0x78, V704]
Exit stack: []

================================

Block 0x8bf
[0x8bf:0x8d3]
---
Predecessors: [0x898]
Successors: [0x8d4]
---
0x8bf PUSH1 0x0
0x8c1 DUP1
0x8c2 REVERT
0x8c3 JUMPDEST
0x8c4 POP
0x8c5 PUSH2 0x78
0x8c8 PUSH2 0xff
0x8cb JUMP
0x8cc JUMPDEST
0x8cd CALLVALUE
0x8ce DUP1
0x8cf ISZERO
0x8d0 PUSH2 0xab
0x8d3 JUMPI
---
0x8bf: V707 = 0x0
0x8c2: REVERT 0x0 0x0
0x8c3: JUMPDEST 
0x8c5: V708 = 0x78
0x8c8: V709 = 0xff
0x8cb: THROW 
0x8cc: JUMPDEST 
0x8cd: V710 = CALLVALUE
0x8cf: V711 = ISZERO V710
0x8d0: V712 = 0xab
0x8d3: THROWI V711
---
Entry stack: [V704]
Stack pops: 0
Stack additions: [0x78, V710]
Exit stack: []

================================

Block 0x8d4
[0x8d4:0x95a]
---
Predecessors: [0x8bf]
Successors: [0x95b]
---
0x8d4 PUSH1 0x0
0x8d6 DUP1
0x8d7 REVERT
0x8d8 JUMPDEST
0x8d9 POP
0x8da PUSH2 0xb4
0x8dd PUSH2 0x105
0x8e0 JUMP
0x8e1 JUMPDEST
0x8e2 PUSH1 0x40
0x8e4 DUP1
0x8e5 MLOAD
0x8e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8fb SWAP1
0x8fc SWAP3
0x8fd AND
0x8fe DUP3
0x8ff MSTORE
0x900 MLOAD
0x901 SWAP1
0x902 DUP2
0x903 SWAP1
0x904 SUB
0x905 PUSH1 0x20
0x907 ADD
0x908 SWAP1
0x909 RETURN
0x90a JUMPDEST
0x90b PUSH2 0xe5
0x90e PUSH2 0x121
0x911 JUMP
0x912 JUMPDEST
0x913 PUSH1 0x40
0x915 DUP1
0x916 MLOAD
0x917 SWAP2
0x918 ISZERO
0x919 ISZERO
0x91a DUP3
0x91b MSTORE
0x91c MLOAD
0x91d SWAP1
0x91e DUP2
0x91f SWAP1
0x920 SUB
0x921 PUSH1 0x20
0x923 ADD
0x924 SWAP1
0x925 RETURN
0x926 JUMPDEST
0x927 PUSH1 0x2
0x929 SLOAD
0x92a DUP2
0x92b JUMP
0x92c JUMPDEST
0x92d PUSH1 0x1
0x92f SLOAD
0x930 DUP2
0x931 JUMP
0x932 JUMPDEST
0x933 PUSH1 0x0
0x935 SLOAD
0x936 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94b AND
0x94c DUP2
0x94d JUMP
0x94e JUMPDEST
0x94f PUSH1 0x1
0x951 SLOAD
0x952 PUSH1 0x0
0x954 SWAP1
0x955 CALLVALUE
0x956 EQ
0x957 PUSH2 0x194
0x95a JUMPI
---
0x8d4: V713 = 0x0
0x8d7: REVERT 0x0 0x0
0x8d8: JUMPDEST 
0x8da: V714 = 0xb4
0x8dd: V715 = 0x105
0x8e0: THROW 
0x8e1: JUMPDEST 
0x8e2: V716 = 0x40
0x8e5: V717 = M[0x40]
0x8e6: V718 = 0xffffffffffffffffffffffffffffffffffffffff
0x8fd: V719 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8ff: M[V717] = V719
0x900: V720 = M[0x40]
0x904: V721 = SUB V717 V720
0x905: V722 = 0x20
0x907: V723 = ADD 0x20 V721
0x909: RETURN V720 V723
0x90a: JUMPDEST 
0x90b: V724 = 0xe5
0x90e: V725 = 0x121
0x911: THROW 
0x912: JUMPDEST 
0x913: V726 = 0x40
0x916: V727 = M[0x40]
0x918: V728 = ISZERO S0
0x919: V729 = ISZERO V728
0x91b: M[V727] = V729
0x91c: V730 = M[0x40]
0x920: V731 = SUB V727 V730
0x921: V732 = 0x20
0x923: V733 = ADD 0x20 V731
0x925: RETURN V730 V733
0x926: JUMPDEST 
0x927: V734 = 0x2
0x929: V735 = S[0x2]
0x92b: JUMP S0
0x92c: JUMPDEST 
0x92d: V736 = 0x1
0x92f: V737 = S[0x1]
0x931: JUMP S0
0x932: JUMPDEST 
0x933: V738 = 0x0
0x935: V739 = S[0x0]
0x936: V740 = 0xffffffffffffffffffffffffffffffffffffffff
0x94b: V741 = AND 0xffffffffffffffffffffffffffffffffffffffff V739
0x94d: JUMP S0
0x94e: JUMPDEST 
0x94f: V742 = 0x1
0x951: V743 = S[0x1]
0x952: V744 = 0x0
0x955: V745 = CALLVALUE
0x956: V746 = EQ V745 V743
0x957: V747 = 0x194
0x95a: THROWI V746
---
Entry stack: [V710]
Stack pops: 0
Stack additions: [0xb4, 0xe5, V735, S0, V737, S0, V741, S0, 0x0]
Exit stack: []

================================

Block 0x95b
[0x95b:0xa69]
---
Predecessors: [0x8d4]
Successors: [0xa6a]
---
0x95b PUSH1 0x40
0x95d DUP1
0x95e MLOAD
0x95f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x980 DUP2
0x981 MSTORE
0x982 PUSH1 0x20
0x984 PUSH1 0x4
0x986 DUP3
0x987 ADD
0x988 MSTORE
0x989 PUSH1 0xd
0x98b PUSH1 0x24
0x98d DUP3
0x98e ADD
0x98f MSTORE
0x990 PUSH32 0x496e76616c69642076616c756500000000000000000000000000000000000000
0x9b1 PUSH1 0x44
0x9b3 DUP3
0x9b4 ADD
0x9b5 MSTORE
0x9b6 SWAP1
0x9b7 MLOAD
0x9b8 SWAP1
0x9b9 DUP2
0x9ba SWAP1
0x9bb SUB
0x9bc PUSH1 0x64
0x9be ADD
0x9bf SWAP1
0x9c0 REVERT
0x9c1 JUMPDEST
0x9c2 PUSH1 0x40
0x9c4 MLOAD
0x9c5 PUSH20 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23
0x9da SWAP1
0x9db CALLVALUE
0x9dc SWAP1
0x9dd PUSH1 0x0
0x9df DUP2
0x9e0 DUP2
0x9e1 DUP2
0x9e2 DUP6
0x9e3 DUP8
0x9e4 GAS
0x9e5 CALL
0x9e6 POP
0x9e7 POP
0x9e8 PUSH1 0x0
0x9ea DUP1
0x9eb SLOAD
0x9ec PUSH1 0x40
0x9ee MLOAD
0x9ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa04 SWAP1
0xa05 SWAP2
0xa06 AND
0xa07 SWAP4
0xa08 POP
0xa09 ADDRESS
0xa0a BALANCE
0xa0b DUP1
0xa0c ISZERO
0xa0d PUSH2 0x8fc
0xa10 MUL
0xa11 SWAP4
0xa12 POP
0xa13 SWAP2
0xa14 DUP2
0xa15 DUP2
0xa16 DUP2
0xa17 DUP6
0xa18 DUP9
0xa19 DUP9
0xa1a CALL
0xa1b POP
0xa1c POP
0xa1d PUSH1 0x2
0xa1f DUP1
0xa20 SLOAD
0xa21 PUSH1 0x1
0xa23 ADD
0xa24 SWAP1
0xa25 DUP2
0xa26 SWAP1
0xa27 SSTORE
0xa28 PUSH1 0x2d
0xa2a EQ
0xa2b SWAP4
0xa2c POP
0xa2d POP
0xa2e POP
0xa2f POP
0xa30 SWAP1
0xa31 JUMP
0xa32 STOP
0xa33 LOG1
0xa34 PUSH6 0x627a7a723058
0xa3b SHA3
0xa3c MISSING 0x47
0xa3d MISSING 0xf7
0xa3e LOG2
0xa3f MISSING 0xc0
0xa40 MISSING 0xb8
0xa41 MISSING 0xb7
0xa42 SWAP12
0xa43 MISSING 0xe5
0xa44 INVALID
0xa45 MISSING 0xd9
0xa46 MISSING 0x5d
0xa47 MISSING 0xc9
0xa48 MISSING 0x2d
0xa49 PUSH8 0xb0c3947ba12890c4
0xa52 MISSING 0x47
0xa53 MISSING 0x2f
0xa54 MISSING 0xc2
0xa55 MISSING 0xbc
0xa56 MISSING 0xeb
0xa57 DIFFICULTY
0xa58 DUP7
0xa59 MISSING 0x2a
0xa5a MOD
0xa5b DUP15
0xa5c STOP
0xa5d MISSING 0x29
0xa5e PUSH1 0x80
0xa60 PUSH1 0x40
0xa62 MSTORE
0xa63 CALLVALUE
0xa64 DUP1
0xa65 ISZERO
0xa66 PUSH2 0x10
0xa69 JUMPI
---
0x95b: V748 = 0x40
0x95e: V749 = M[0x40]
0x95f: V750 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x981: M[V749] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x982: V751 = 0x20
0x984: V752 = 0x4
0x987: V753 = ADD V749 0x4
0x988: M[V753] = 0x20
0x989: V754 = 0xd
0x98b: V755 = 0x24
0x98e: V756 = ADD V749 0x24
0x98f: M[V756] = 0xd
0x990: V757 = 0x496e76616c69642076616c756500000000000000000000000000000000000000
0x9b1: V758 = 0x44
0x9b4: V759 = ADD V749 0x44
0x9b5: M[V759] = 0x496e76616c69642076616c756500000000000000000000000000000000000000
0x9b7: V760 = M[0x40]
0x9bb: V761 = SUB V749 V760
0x9bc: V762 = 0x64
0x9be: V763 = ADD 0x64 V761
0x9c0: REVERT V760 V763
0x9c1: JUMPDEST 
0x9c2: V764 = 0x40
0x9c4: V765 = M[0x40]
0x9c5: V766 = 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23
0x9db: V767 = CALLVALUE
0x9dd: V768 = 0x0
0x9e4: V769 = GAS
0x9e5: V770 = CALL V769 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23 V767 V765 0x0 V765 0x0
0x9e8: V771 = 0x0
0x9eb: V772 = S[0x0]
0x9ec: V773 = 0x40
0x9ee: V774 = M[0x40]
0x9ef: V775 = 0xffffffffffffffffffffffffffffffffffffffff
0xa06: V776 = AND V772 0xffffffffffffffffffffffffffffffffffffffff
0xa09: V777 = ADDRESS
0xa0a: V778 = BALANCE V777
0xa0c: V779 = ISZERO V778
0xa0d: V780 = 0x8fc
0xa10: V781 = MUL 0x8fc V779
0xa1a: V782 = CALL V781 V776 V778 V774 0x0 V774 0x0
0xa1d: V783 = 0x2
0xa20: V784 = S[0x2]
0xa21: V785 = 0x1
0xa23: V786 = ADD 0x1 V784
0xa27: S[0x2] = V786
0xa28: V787 = 0x2d
0xa2a: V788 = EQ 0x2d V786
0xa31: JUMP S1
0xa32: STOP 
0xa33: LOG S0 S1 S2
0xa34: V789 = 0x627a7a723058
0xa3b: V790 = SHA3 0x627a7a723058 S3
0xa3c: MISSING 0x47
0xa3d: MISSING 0xf7
0xa3e: LOG S0 S1 S2 S3
0xa3f: MISSING 0xc0
0xa40: MISSING 0xb8
0xa41: MISSING 0xb7
0xa43: MISSING 0xe5
0xa44: INVALID 
0xa45: MISSING 0xd9
0xa46: MISSING 0x5d
0xa47: MISSING 0xc9
0xa48: MISSING 0x2d
0xa49: V791 = 0xb0c3947ba12890c4
0xa52: MISSING 0x47
0xa53: MISSING 0x2f
0xa54: MISSING 0xc2
0xa55: MISSING 0xbc
0xa56: MISSING 0xeb
0xa57: V792 = DIFFICULTY
0xa59: MISSING 0x2a
0xa5a: V793 = MOD S0 S1
0xa5c: STOP 
0xa5d: MISSING 0x29
0xa5e: V794 = 0x80
0xa60: V795 = 0x40
0xa62: M[0x40] = 0x80
0xa63: V796 = CALLVALUE
0xa65: V797 = ISZERO V796
0xa66: V798 = 0x10
0xa69: THROWI V797
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V788, V790, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, 0xb0c3947ba12890c4, S5, V792, S0, S1, S2, S3, S4, S5, S15, V793, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V796]
Exit stack: []

================================

Block 0xa6a
[0xa6a:0xaba]
---
Predecessors: [0x95b]
Successors: [0xabb]
---
0xa6a PUSH1 0x0
0xa6c DUP1
0xa6d REVERT
0xa6e JUMPDEST
0xa6f POP
0xa70 PUSH1 0x40
0xa72 MLOAD
0xa73 PUSH1 0x20
0xa75 DUP1
0xa76 PUSH2 0x313
0xa79 DUP4
0xa7a CODECOPY
0xa7b DUP2
0xa7c ADD
0xa7d PUSH1 0x40
0xa7f MSTORE
0xa80 MLOAD
0xa81 PUSH1 0x1
0xa83 DUP1
0xa84 SLOAD
0xa85 PUSH1 0x1
0xa87 PUSH1 0xa0
0xa89 PUSH1 0x2
0xa8b EXP
0xa8c SUB
0xa8d NOT
0xa8e AND
0xa8f PUSH1 0x1
0xa91 PUSH1 0xa0
0xa93 PUSH1 0x2
0xa95 EXP
0xa96 SUB
0xa97 SWAP1
0xa98 SWAP3
0xa99 AND
0xa9a SWAP2
0xa9b SWAP1
0xa9c SWAP2
0xa9d OR
0xa9e SWAP1
0xa9f SSTORE
0xaa0 PUSH2 0x2c3
0xaa3 DUP1
0xaa4 PUSH2 0x50
0xaa7 PUSH1 0x0
0xaa9 CODECOPY
0xaaa PUSH1 0x0
0xaac RETURN
0xaad STOP
0xaae PUSH1 0x80
0xab0 PUSH1 0x40
0xab2 MSTORE
0xab3 PUSH1 0x4
0xab5 CALLDATASIZE
0xab6 LT
0xab7 PUSH2 0x56
0xaba JUMPI
---
0xa6a: V799 = 0x0
0xa6d: REVERT 0x0 0x0
0xa6e: JUMPDEST 
0xa70: V800 = 0x40
0xa72: V801 = M[0x40]
0xa73: V802 = 0x20
0xa76: V803 = 0x313
0xa7a: CODECOPY V801 0x313 0x20
0xa7c: V804 = ADD V801 0x20
0xa7d: V805 = 0x40
0xa7f: M[0x40] = V804
0xa80: V806 = M[V801]
0xa81: V807 = 0x1
0xa84: V808 = S[0x1]
0xa85: V809 = 0x1
0xa87: V810 = 0xa0
0xa89: V811 = 0x2
0xa8b: V812 = EXP 0x2 0xa0
0xa8c: V813 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8d: V814 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa8e: V815 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V808
0xa8f: V816 = 0x1
0xa91: V817 = 0xa0
0xa93: V818 = 0x2
0xa95: V819 = EXP 0x2 0xa0
0xa96: V820 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa99: V821 = AND V806 0xffffffffffffffffffffffffffffffffffffffff
0xa9d: V822 = OR V821 V815
0xa9f: S[0x1] = V822
0xaa0: V823 = 0x2c3
0xaa4: V824 = 0x50
0xaa7: V825 = 0x0
0xaa9: CODECOPY 0x0 0x50 0x2c3
0xaaa: V826 = 0x0
0xaac: RETURN 0x0 0x2c3
0xaad: STOP 
0xaae: V827 = 0x80
0xab0: V828 = 0x40
0xab2: M[0x40] = 0x80
0xab3: V829 = 0x4
0xab5: V830 = CALLDATASIZE
0xab6: V831 = LT V830 0x4
0xab7: V832 = 0x56
0xaba: THROWI V831
---
Entry stack: [V796]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xabb
[0xabb:0xaed]
---
Predecessors: [0xa6a]
Successors: [0xaee]
---
0xabb PUSH4 0xffffffff
0xac0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xade PUSH1 0x0
0xae0 CALLDATALOAD
0xae1 DIV
0xae2 AND
0xae3 PUSH4 0x2423081e
0xae8 DUP2
0xae9 EQ
0xaea PUSH2 0x16b
0xaed JUMPI
---
0xabb: V833 = 0xffffffff
0xac0: V834 = 0x100000000000000000000000000000000000000000000000000000000
0xade: V835 = 0x0
0xae0: V836 = CALLDATALOAD 0x0
0xae1: V837 = DIV V836 0x100000000000000000000000000000000000000000000000000000000
0xae2: V838 = AND V837 0xffffffff
0xae3: V839 = 0x2423081e
0xae9: V840 = EQ V838 0x2423081e
0xaea: V841 = 0x16b
0xaed: THROWI V840
---
Entry stack: []
Stack pops: 0
Stack additions: [V838]
Exit stack: [V838]

================================

Block 0xaee
[0xaee:0xaf8]
---
Predecessors: [0xabb]
Successors: [0x19c, 0xaf9]
---
0xaee DUP1
0xaef PUSH4 0x68447c93
0xaf4 EQ
0xaf5 PUSH2 0x19c
0xaf8 JUMPI
---
0xaef: V842 = 0x68447c93
0xaf4: V843 = EQ 0x68447c93 V838
0xaf5: V844 = 0x19c
0xaf8: JUMPI 0x19c V843
---
Entry stack: [V838]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V838]

================================

Block 0xaf9
[0xaf9:0xb03]
---
Predecessors: [0xaee]
Successors: [0xb04]
---
0xaf9 DUP1
0xafa PUSH4 0xa18a7bfc
0xaff EQ
0xb00 PUSH2 0x1b1
0xb03 JUMPI
---
0xafa: V845 = 0xa18a7bfc
0xaff: V846 = EQ 0xa18a7bfc V838
0xb00: V847 = 0x1b1
0xb03: THROWI V846
---
Entry stack: [V838]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V838]

================================

Block 0xb04
[0xb04:0xb0d]
---
Predecessors: [0xaf9]
Successors: [0xb0e]
---
0xb04 JUMPDEST
0xb05 PUSH1 0x0
0xb07 CALLVALUE
0xb08 GT
0xb09 ISZERO
0xb0a PUSH2 0xeb
0xb0d JUMPI
---
0xb04: JUMPDEST 
0xb05: V848 = 0x0
0xb07: V849 = CALLVALUE
0xb08: V850 = GT V849 0x0
0xb09: V851 = ISZERO V850
0xb0a: V852 = 0xeb
0xb0d: THROWI V851
---
Entry stack: [V838]
Stack pops: 0
Stack additions: []
Exit stack: [V838]

================================

Block 0xb0e
[0xb0e:0xb76]
---
Predecessors: [0xb04]
Successors: [0xb77]
---
0xb0e PUSH1 0x1
0xb10 SLOAD
0xb11 PUSH1 0x0
0xb13 DUP1
0xb14 SLOAD
0xb15 PUSH1 0x40
0xb17 DUP1
0xb18 MLOAD
0xb19 PUSH32 0xd35ada3200000000000000000000000000000000000000000000000000000000
0xb3a DUP2
0xb3b MSTORE
0xb3c CALLER
0xb3d PUSH1 0x4
0xb3f DUP3
0xb40 ADD
0xb41 MSTORE
0xb42 PUSH1 0x1
0xb44 PUSH1 0xa0
0xb46 PUSH1 0x2
0xb48 EXP
0xb49 SUB
0xb4a SWAP3
0xb4b DUP4
0xb4c AND
0xb4d PUSH1 0x24
0xb4f DUP3
0xb50 ADD
0xb51 MSTORE
0xb52 SWAP1
0xb53 MLOAD
0xb54 SWAP2
0xb55 SWAP1
0xb56 SWAP4
0xb57 AND
0xb58 SWAP3
0xb59 PUSH4 0xd35ada32
0xb5e SWAP3
0xb5f CALLVALUE
0xb60 SWAP3
0xb61 PUSH1 0x44
0xb63 DUP1
0xb64 DUP5
0xb65 ADD
0xb66 SWAP4
0xb67 DUP3
0xb68 SWAP1
0xb69 SUB
0xb6a ADD
0xb6b DUP2
0xb6c DUP6
0xb6d DUP9
0xb6e DUP1
0xb6f EXTCODESIZE
0xb70 ISZERO
0xb71 DUP1
0xb72 ISZERO
0xb73 PUSH2 0xcd
0xb76 JUMPI
---
0xb0e: V853 = 0x1
0xb10: V854 = S[0x1]
0xb11: V855 = 0x0
0xb14: V856 = S[0x0]
0xb15: V857 = 0x40
0xb18: V858 = M[0x40]
0xb19: V859 = 0xd35ada3200000000000000000000000000000000000000000000000000000000
0xb3b: M[V858] = 0xd35ada3200000000000000000000000000000000000000000000000000000000
0xb3c: V860 = CALLER
0xb3d: V861 = 0x4
0xb40: V862 = ADD V858 0x4
0xb41: M[V862] = V860
0xb42: V863 = 0x1
0xb44: V864 = 0xa0
0xb46: V865 = 0x2
0xb48: V866 = EXP 0x2 0xa0
0xb49: V867 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4c: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V856
0xb4d: V869 = 0x24
0xb50: V870 = ADD V858 0x24
0xb51: M[V870] = V868
0xb53: V871 = M[0x40]
0xb57: V872 = AND V854 0xffffffffffffffffffffffffffffffffffffffff
0xb59: V873 = 0xd35ada32
0xb5f: V874 = CALLVALUE
0xb61: V875 = 0x44
0xb65: V876 = ADD V858 0x44
0xb69: V877 = SUB V858 V871
0xb6a: V878 = ADD V877 0x44
0xb6f: V879 = EXTCODESIZE V872
0xb70: V880 = ISZERO V879
0xb72: V881 = ISZERO V880
0xb73: V882 = 0xcd
0xb76: THROWI V881
---
Entry stack: [V838]
Stack pops: 0
Stack additions: [V872, 0xd35ada32, V874, V876, 0x0, V871, V878, V871, V874, V872, V880]
Exit stack: [V838, V872, 0xd35ada32, V874, V876, 0x0, V871, V878, V871, V874, V872, V880]

================================

Block 0xb77
[0xb77:0xb85]
---
Predecessors: [0xb0e]
Successors: [0xb86]
---
0xb77 PUSH1 0x0
0xb79 DUP1
0xb7a REVERT
0xb7b JUMPDEST
0xb7c POP
0xb7d GAS
0xb7e CALL
0xb7f ISZERO
0xb80 DUP1
0xb81 ISZERO
0xb82 PUSH2 0xe1
0xb85 JUMPI
---
0xb77: V883 = 0x0
0xb7a: REVERT 0x0 0x0
0xb7b: JUMPDEST 
0xb7d: V884 = GAS
0xb7e: V885 = CALL V884 S1 S2 S3 S4 S5 S6
0xb7f: V886 = ISZERO V885
0xb81: V887 = ISZERO V886
0xb82: V888 = 0xe1
0xb85: THROWI V887
---
Entry stack: [V838, V872, 0xd35ada32, V874, V876, 0x0, V871, V878, V871, V874, V872, V880]
Stack pops: 0
Stack additions: [V886]
Exit stack: []

================================

Block 0xb86
[0xb86:0xbf9]
---
Predecessors: [0xb77]
Successors: [0xbfa]
---
0xb86 RETURNDATASIZE
0xb87 PUSH1 0x0
0xb89 DUP1
0xb8a RETURNDATACOPY
0xb8b RETURNDATASIZE
0xb8c PUSH1 0x0
0xb8e REVERT
0xb8f JUMPDEST
0xb90 POP
0xb91 POP
0xb92 POP
0xb93 POP
0xb94 POP
0xb95 PUSH2 0x169
0xb98 JUMP
0xb99 JUMPDEST
0xb9a PUSH1 0x1
0xb9c SLOAD
0xb9d PUSH1 0x40
0xb9f DUP1
0xba0 MLOAD
0xba1 PUSH32 0x8fe123d700000000000000000000000000000000000000000000000000000000
0xbc2 DUP2
0xbc3 MSTORE
0xbc4 CALLER
0xbc5 PUSH1 0x4
0xbc7 DUP3
0xbc8 ADD
0xbc9 MSTORE
0xbca SWAP1
0xbcb MLOAD
0xbcc PUSH1 0x1
0xbce PUSH1 0xa0
0xbd0 PUSH1 0x2
0xbd2 EXP
0xbd3 SUB
0xbd4 SWAP1
0xbd5 SWAP3
0xbd6 AND
0xbd7 SWAP2
0xbd8 PUSH4 0x8fe123d7
0xbdd SWAP2
0xbde PUSH1 0x24
0xbe0 DUP1
0xbe1 DUP3
0xbe2 ADD
0xbe3 SWAP3
0xbe4 PUSH1 0x0
0xbe6 SWAP3
0xbe7 SWAP1
0xbe8 SWAP2
0xbe9 SWAP1
0xbea DUP3
0xbeb SWAP1
0xbec SUB
0xbed ADD
0xbee DUP2
0xbef DUP4
0xbf0 DUP8
0xbf1 DUP1
0xbf2 EXTCODESIZE
0xbf3 ISZERO
0xbf4 DUP1
0xbf5 ISZERO
0xbf6 PUSH2 0x150
0xbf9 JUMPI
---
0xb86: V889 = RETURNDATASIZE
0xb87: V890 = 0x0
0xb8a: RETURNDATACOPY 0x0 0x0 V889
0xb8b: V891 = RETURNDATASIZE
0xb8c: V892 = 0x0
0xb8e: REVERT 0x0 V891
0xb8f: JUMPDEST 
0xb95: V893 = 0x169
0xb98: THROW 
0xb99: JUMPDEST 
0xb9a: V894 = 0x1
0xb9c: V895 = S[0x1]
0xb9d: V896 = 0x40
0xba0: V897 = M[0x40]
0xba1: V898 = 0x8fe123d700000000000000000000000000000000000000000000000000000000
0xbc3: M[V897] = 0x8fe123d700000000000000000000000000000000000000000000000000000000
0xbc4: V899 = CALLER
0xbc5: V900 = 0x4
0xbc8: V901 = ADD V897 0x4
0xbc9: M[V901] = V899
0xbcb: V902 = M[0x40]
0xbcc: V903 = 0x1
0xbce: V904 = 0xa0
0xbd0: V905 = 0x2
0xbd2: V906 = EXP 0x2 0xa0
0xbd3: V907 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd6: V908 = AND V895 0xffffffffffffffffffffffffffffffffffffffff
0xbd8: V909 = 0x8fe123d7
0xbde: V910 = 0x24
0xbe2: V911 = ADD V897 0x24
0xbe4: V912 = 0x0
0xbec: V913 = SUB V897 V902
0xbed: V914 = ADD V913 0x24
0xbf2: V915 = EXTCODESIZE V908
0xbf3: V916 = ISZERO V915
0xbf5: V917 = ISZERO V916
0xbf6: V918 = 0x150
0xbf9: THROWI V917
---
Entry stack: [V886]
Stack pops: 0
Stack additions: [V916, V908, 0x0, V902, V914, V902, 0x0, V911, 0x8fe123d7, V908]
Exit stack: []

================================

Block 0xbfa
[0xbfa:0xc08]
---
Predecessors: [0xb86]
Successors: [0xc09]
---
0xbfa PUSH1 0x0
0xbfc DUP1
0xbfd REVERT
0xbfe JUMPDEST
0xbff POP
0xc00 GAS
0xc01 CALL
0xc02 ISZERO
0xc03 DUP1
0xc04 ISZERO
0xc05 PUSH2 0x164
0xc08 JUMPI
---
0xbfa: V919 = 0x0
0xbfd: REVERT 0x0 0x0
0xbfe: JUMPDEST 
0xc00: V920 = GAS
0xc01: V921 = CALL V920 S1 S2 S3 S4 S5 S6
0xc02: V922 = ISZERO V921
0xc04: V923 = ISZERO V922
0xc05: V924 = 0x164
0xc08: THROWI V923
---
Entry stack: [V908, 0x8fe123d7, V911, 0x0, V902, V914, V902, 0x0, V908, V916]
Stack pops: 0
Stack additions: [V922]
Exit stack: []

================================

Block 0xc09
[0xc09:0xc16]
---
Predecessors: [0xbfa]
Successors: [0xc17]
---
0xc09 RETURNDATASIZE
0xc0a PUSH1 0x0
0xc0c DUP1
0xc0d RETURNDATACOPY
0xc0e RETURNDATASIZE
0xc0f PUSH1 0x0
0xc11 REVERT
0xc12 JUMPDEST
0xc13 POP
0xc14 POP
0xc15 POP
0xc16 POP
---
0xc09: V925 = RETURNDATASIZE
0xc0a: V926 = 0x0
0xc0d: RETURNDATACOPY 0x0 0x0 V925
0xc0e: V927 = RETURNDATASIZE
0xc0f: V928 = 0x0
0xc11: REVERT 0x0 V927
0xc12: JUMPDEST 
---
Entry stack: [V922]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc17
[0xc17:0xc20]
---
Predecessors: [0xc09]
Successors: [0xc21]
---
0xc17 JUMPDEST
0xc18 STOP
0xc19 JUMPDEST
0xc1a CALLVALUE
0xc1b DUP1
0xc1c ISZERO
0xc1d PUSH2 0x177
0xc20 JUMPI
---
0xc17: JUMPDEST 
0xc18: STOP 
0xc19: JUMPDEST 
0xc1a: V929 = CALLVALUE
0xc1c: V930 = ISZERO V929
0xc1d: V931 = 0x177
0xc20: THROWI V930
---
Entry stack: []
Stack pops: 0
Stack additions: [V929]
Exit stack: []

================================

Block 0xc21
[0xc21:0xc51]
---
Predecessors: [0xc17]
Successors: [0xc52]
---
0xc21 PUSH1 0x0
0xc23 DUP1
0xc24 REVERT
0xc25 JUMPDEST
0xc26 POP
0xc27 PUSH2 0x180
0xc2a PUSH2 0x1d2
0xc2d JUMP
0xc2e JUMPDEST
0xc2f PUSH1 0x40
0xc31 DUP1
0xc32 MLOAD
0xc33 PUSH1 0x1
0xc35 PUSH1 0xa0
0xc37 PUSH1 0x2
0xc39 EXP
0xc3a SUB
0xc3b SWAP1
0xc3c SWAP3
0xc3d AND
0xc3e DUP3
0xc3f MSTORE
0xc40 MLOAD
0xc41 SWAP1
0xc42 DUP2
0xc43 SWAP1
0xc44 SUB
0xc45 PUSH1 0x20
0xc47 ADD
0xc48 SWAP1
0xc49 RETURN
0xc4a JUMPDEST
0xc4b CALLVALUE
0xc4c DUP1
0xc4d ISZERO
0xc4e PUSH2 0x1a8
0xc51 JUMPI
---
0xc21: V932 = 0x0
0xc24: REVERT 0x0 0x0
0xc25: JUMPDEST 
0xc27: V933 = 0x180
0xc2a: V934 = 0x1d2
0xc2d: THROW 
0xc2e: JUMPDEST 
0xc2f: V935 = 0x40
0xc32: V936 = M[0x40]
0xc33: V937 = 0x1
0xc35: V938 = 0xa0
0xc37: V939 = 0x2
0xc39: V940 = EXP 0x2 0xa0
0xc3a: V941 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc3d: V942 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xc3f: M[V936] = V942
0xc40: V943 = M[0x40]
0xc44: V944 = SUB V936 V943
0xc45: V945 = 0x20
0xc47: V946 = ADD 0x20 V944
0xc49: RETURN V943 V946
0xc4a: JUMPDEST 
0xc4b: V947 = CALLVALUE
0xc4d: V948 = ISZERO V947
0xc4e: V949 = 0x1a8
0xc51: THROWI V948
---
Entry stack: [V929]
Stack pops: 0
Stack additions: [0x180, V947]
Exit stack: []

================================

Block 0xc52
[0xc52:0xc66]
---
Predecessors: [0xc21]
Successors: [0xc67]
---
0xc52 PUSH1 0x0
0xc54 DUP1
0xc55 REVERT
0xc56 JUMPDEST
0xc57 POP
0xc58 PUSH2 0x180
0xc5b PUSH2 0x1e1
0xc5e JUMP
0xc5f JUMPDEST
0xc60 CALLVALUE
0xc61 DUP1
0xc62 ISZERO
0xc63 PUSH2 0x1bd
0xc66 JUMPI
---
0xc52: V950 = 0x0
0xc55: REVERT 0x0 0x0
0xc56: JUMPDEST 
0xc58: V951 = 0x180
0xc5b: V952 = 0x1e1
0xc5e: THROW 
0xc5f: JUMPDEST 
0xc60: V953 = CALLVALUE
0xc62: V954 = ISZERO V953
0xc63: V955 = 0x1bd
0xc66: THROWI V954
---
Entry stack: [V947]
Stack pops: 0
Stack additions: [0x180, V953]
Exit stack: []

================================

Block 0xc67
[0xc67:0xcaf]
---
Predecessors: [0xc52]
Successors: [0xcb0]
---
0xc67 PUSH1 0x0
0xc69 DUP1
0xc6a REVERT
0xc6b JUMPDEST
0xc6c POP
0xc6d PUSH2 0x169
0xc70 PUSH1 0x1
0xc72 PUSH1 0xa0
0xc74 PUSH1 0x2
0xc76 EXP
0xc77 SUB
0xc78 PUSH1 0x4
0xc7a CALLDATALOAD
0xc7b AND
0xc7c PUSH2 0x1f0
0xc7f JUMP
0xc80 JUMPDEST
0xc81 PUSH1 0x1
0xc83 SLOAD
0xc84 PUSH1 0x1
0xc86 PUSH1 0xa0
0xc88 PUSH1 0x2
0xc8a EXP
0xc8b SUB
0xc8c AND
0xc8d DUP2
0xc8e JUMP
0xc8f JUMPDEST
0xc90 PUSH1 0x0
0xc92 SLOAD
0xc93 PUSH1 0x1
0xc95 PUSH1 0xa0
0xc97 PUSH1 0x2
0xc99 EXP
0xc9a SUB
0xc9b AND
0xc9c DUP2
0xc9d JUMP
0xc9e JUMPDEST
0xc9f PUSH1 0x0
0xca1 SLOAD
0xca2 PUSH1 0x1
0xca4 PUSH1 0xa0
0xca6 PUSH1 0x2
0xca8 EXP
0xca9 SUB
0xcaa AND
0xcab ISZERO
0xcac PUSH2 0x268
0xcaf JUMPI
---
0xc67: V956 = 0x0
0xc6a: REVERT 0x0 0x0
0xc6b: JUMPDEST 
0xc6d: V957 = 0x169
0xc70: V958 = 0x1
0xc72: V959 = 0xa0
0xc74: V960 = 0x2
0xc76: V961 = EXP 0x2 0xa0
0xc77: V962 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc78: V963 = 0x4
0xc7a: V964 = CALLDATALOAD 0x4
0xc7b: V965 = AND V964 0xffffffffffffffffffffffffffffffffffffffff
0xc7c: V966 = 0x1f0
0xc7f: THROW 
0xc80: JUMPDEST 
0xc81: V967 = 0x1
0xc83: V968 = S[0x1]
0xc84: V969 = 0x1
0xc86: V970 = 0xa0
0xc88: V971 = 0x2
0xc8a: V972 = EXP 0x2 0xa0
0xc8b: V973 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc8c: V974 = AND 0xffffffffffffffffffffffffffffffffffffffff V968
0xc8e: JUMP S0
0xc8f: JUMPDEST 
0xc90: V975 = 0x0
0xc92: V976 = S[0x0]
0xc93: V977 = 0x1
0xc95: V978 = 0xa0
0xc97: V979 = 0x2
0xc99: V980 = EXP 0x2 0xa0
0xc9a: V981 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc9b: V982 = AND 0xffffffffffffffffffffffffffffffffffffffff V976
0xc9d: JUMP S0
0xc9e: JUMPDEST 
0xc9f: V983 = 0x0
0xca1: V984 = S[0x0]
0xca2: V985 = 0x1
0xca4: V986 = 0xa0
0xca6: V987 = 0x2
0xca8: V988 = EXP 0x2 0xa0
0xca9: V989 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcaa: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V984
0xcab: V991 = ISZERO V990
0xcac: V992 = 0x268
0xcaf: THROWI V991
---
Entry stack: [V953]
Stack pops: 0
Stack additions: [V965, 0x169, V974, S0, V982, S0]
Exit stack: []

================================

Block 0xcb0
[0xcb0:0xd9b]
---
Predecessors: [0xc67]
Successors: []
---
0xcb0 PUSH1 0x40
0xcb2 DUP1
0xcb3 MLOAD
0xcb4 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xcd5 DUP2
0xcd6 MSTORE
0xcd7 PUSH1 0x20
0xcd9 PUSH1 0x4
0xcdb DUP3
0xcdc ADD
0xcdd MSTORE
0xcde PUSH1 0x1d
0xce0 PUSH1 0x24
0xce2 DUP3
0xce3 ADD
0xce4 MSTORE
0xce5 PUSH32 0x72656665727265722063616e206f6e6c7920626520736574206f6e6365000000
0xd06 PUSH1 0x44
0xd08 DUP3
0xd09 ADD
0xd0a MSTORE
0xd0b SWAP1
0xd0c MLOAD
0xd0d SWAP1
0xd0e DUP2
0xd0f SWAP1
0xd10 SUB
0xd11 PUSH1 0x64
0xd13 ADD
0xd14 SWAP1
0xd15 REVERT
0xd16 JUMPDEST
0xd17 PUSH1 0x0
0xd19 DUP1
0xd1a SLOAD
0xd1b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd30 NOT
0xd31 AND
0xd32 PUSH1 0x1
0xd34 PUSH1 0xa0
0xd36 PUSH1 0x2
0xd38 EXP
0xd39 SUB
0xd3a SWAP3
0xd3b SWAP1
0xd3c SWAP3
0xd3d AND
0xd3e SWAP2
0xd3f SWAP1
0xd40 SWAP2
0xd41 OR
0xd42 SWAP1
0xd43 SSTORE
0xd44 JUMP
0xd45 STOP
0xd46 LOG1
0xd47 PUSH6 0x627a7a723058
0xd4e SHA3
0xd4f MISSING 0xd2
0xd50 PUSH1 0xe2
0xd52 MISSING 0xa7
0xd53 DUP2
0xd54 DUP3
0xd55 DUP1
0xd56 DIV
0xd57 GASLIMIT
0xd58 EXTCODECOPY
0xd59 MISSING 0xe5
0xd5a MISSING 0x47
0xd5b MISSING 0x2e
0xd5c MISSING 0xd6
0xd5d STOP
0xd5e MISSING 0xe
0xd5f XOR
0xd60 MISSING 0xb5
0xd61 MLOAD
0xd62 TIMESTAMP
0xd63 MISSING 0xdf
0xd64 MISSING 0x1f
0xd65 GT
0xd66 MISSING 0xce
0xd67 MISSING 0x4d
0xd68 MISSING 0xb1
0xd69 MISSING 0xcb
0xd6a MUL
0xd6b MISSING 0xd9
0xd6c MISSING 0xf8
0xd6d MISSING 0xfb
0xd6e SWAP6
0xd6f STOP
0xd70 MISSING 0x29
0xd71 LOG1
0xd72 PUSH6 0x627a7a723058
0xd79 SHA3
0xd7a MISSING 0xcc
0xd7b MISSING 0xad
0xd7c PUSH28 0x18fb5640f5e1857329222bfedd4eb97485f87c204468c098fbff024c
0xd99 MISSING 0xd6
0xd9a STOP
0xd9b MISSING 0x29
---
0xcb0: V993 = 0x40
0xcb3: V994 = M[0x40]
0xcb4: V995 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xcd6: M[V994] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xcd7: V996 = 0x20
0xcd9: V997 = 0x4
0xcdc: V998 = ADD V994 0x4
0xcdd: M[V998] = 0x20
0xcde: V999 = 0x1d
0xce0: V1000 = 0x24
0xce3: V1001 = ADD V994 0x24
0xce4: M[V1001] = 0x1d
0xce5: V1002 = 0x72656665727265722063616e206f6e6c7920626520736574206f6e6365000000
0xd06: V1003 = 0x44
0xd09: V1004 = ADD V994 0x44
0xd0a: M[V1004] = 0x72656665727265722063616e206f6e6c7920626520736574206f6e6365000000
0xd0c: V1005 = M[0x40]
0xd10: V1006 = SUB V994 V1005
0xd11: V1007 = 0x64
0xd13: V1008 = ADD 0x64 V1006
0xd15: REVERT V1005 V1008
0xd16: JUMPDEST 
0xd17: V1009 = 0x0
0xd1a: V1010 = S[0x0]
0xd1b: V1011 = 0xffffffffffffffffffffffffffffffffffffffff
0xd30: V1012 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd31: V1013 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1010
0xd32: V1014 = 0x1
0xd34: V1015 = 0xa0
0xd36: V1016 = 0x2
0xd38: V1017 = EXP 0x2 0xa0
0xd39: V1018 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3d: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xd41: V1020 = OR V1019 V1013
0xd43: S[0x0] = V1020
0xd44: JUMP S1
0xd45: STOP 
0xd46: LOG S0 S1 S2
0xd47: V1021 = 0x627a7a723058
0xd4e: V1022 = SHA3 0x627a7a723058 S3
0xd4f: MISSING 0xd2
0xd50: V1023 = 0xe2
0xd52: MISSING 0xa7
0xd56: V1024 = DIV S1 S1
0xd57: V1025 = GASLIMIT
0xd58: EXTCODECOPY V1025 V1024 S1 S0
0xd59: MISSING 0xe5
0xd5a: MISSING 0x47
0xd5b: MISSING 0x2e
0xd5c: MISSING 0xd6
0xd5d: STOP 
0xd5e: MISSING 0xe
0xd5f: V1026 = XOR S0 S1
0xd60: MISSING 0xb5
0xd61: V1027 = M[S0]
0xd62: V1028 = TIMESTAMP
0xd63: MISSING 0xdf
0xd64: MISSING 0x1f
0xd65: V1029 = GT S0 S1
0xd66: MISSING 0xce
0xd67: MISSING 0x4d
0xd68: MISSING 0xb1
0xd69: MISSING 0xcb
0xd6a: V1030 = MUL S0 S1
0xd6b: MISSING 0xd9
0xd6c: MISSING 0xf8
0xd6d: MISSING 0xfb
0xd6f: STOP 
0xd70: MISSING 0x29
0xd71: LOG S0 S1 S2
0xd72: V1031 = 0x627a7a723058
0xd79: V1032 = SHA3 0x627a7a723058 S3
0xd7a: MISSING 0xcc
0xd7b: MISSING 0xad
0xd7c: V1033 = 0x18fb5640f5e1857329222bfedd4eb97485f87c204468c098fbff024c
0xd99: MISSING 0xd6
0xd9a: STOP 
0xd9b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1022, 0xe2, S1, V1026, V1028, V1027, V1029, V1030, S6, S1, S2, S3, S4, S5, S0, V1032, 0x18fb5640f5e1857329222bfedd4eb97485f87c204468c098fbff024c]
Exit stack: []

================================

Function 0:
Public function signature: 0x9e69ede
Entry block: 0x109
Exit block: 0x12a
Body: 0x109, 0x111, 0x115, 0x12a, 0x5cb

Function 1:
Public function signature: 0x4a3b68cc
Entry block: 0x146
Exit block: 0x167
Body: 0x146, 0x14e, 0x152, 0x167, 0x5e6

Function 2:
Public function signature: 0x8fe123d7
Entry block: 0x17b
Exit block: 0x183
Body: 0x107, 0x17b, 0x183, 0x187

Function 3:
Public function signature: 0xd35ada32
Entry block: 0x19c
Exit block: 0x107
Body: 0x107, 0x19c

Function 4:
Public function signature: 0xfefa9bb1
Entry block: 0x1b6
Exit block: 0x107
Body: 0x107, 0x1b6, 0x1be, 0x1c2, 0x5fb, 0x61d, 0x692, 0x6c1, 0x6e5, 0x6ee, 0x748, 0x74c, 0x757, 0x760, 0x7bd

Function 5:
Public fallback function
Entry block: 0x53
Exit block: 0x107
Body: 0x53, 0x73, 0x7d, 0x82, 0x89, 0xfe, 0x107

Function 6:
Private function
Entry block: 0x456
Exit block: 0x5c6
Body: 0x456, 0x4c9, 0x4dd, 0x4f3, 0x52a, 0x53e, 0x555, 0x560, 0x5c6

Function 7:
Private function
Entry block: 0x1d7
Exit block: 0x416
Body: 0x1d7, 0x26d, 0x280, 0x28e, 0x30a, 0x317, 0x348, 0x38e, 0x3cc, 0x3e9, 0x3ef, 0x416, 0x7ad

