Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8e]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8e
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8e
0xc: JUMPI 0x8e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x93]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4749f79d
0x3c EQ
0x3d PUSH2 0x93
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4749f79d
0x3c: V13 = EQ 0x4749f79d V11
0x3d: V14 = 0x93
0x40: JUMPI 0x93 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xf3]
---
0x41 DUP1
0x42 PUSH4 0x66f9fe8f
0x47 EQ
0x48 PUSH2 0xf3
0x4b JUMPI
---
0x42: V15 = 0x66f9fe8f
0x47: V16 = EQ 0x66f9fe8f V11
0x48: V17 = 0xf3
0x4b: JUMPI 0xf3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x16a]
---
0x4c DUP1
0x4d PUSH4 0x715018a6
0x52 EQ
0x53 PUSH2 0x16a
0x56 JUMPI
---
0x4d: V18 = 0x715018a6
0x52: V19 = EQ 0x715018a6 V11
0x53: V20 = 0x16a
0x56: JUMPI 0x16a V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x181]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0x181
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0x181
0x61: JUMPI 0x181 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1d8]
---
0x62 DUP1
0x63 PUSH4 0x8f32d59b
0x68 EQ
0x69 PUSH2 0x1d8
0x6c JUMPI
---
0x63: V24 = 0x8f32d59b
0x68: V25 = EQ 0x8f32d59b V11
0x69: V26 = 0x1d8
0x6c: JUMPI 0x1d8 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x207]
---
0x6d DUP1
0x6e PUSH4 0xb8066bcb
0x73 EQ
0x74 PUSH2 0x207
0x77 JUMPI
---
0x6e: V27 = 0xb8066bcb
0x73: V28 = EQ 0xb8066bcb V11
0x74: V29 = 0x207
0x77: JUMPI 0x207 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x25e]
---
0x78 DUP1
0x79 PUSH4 0xdc52c49a
0x7e EQ
0x7f PUSH2 0x25e
0x82 JUMPI
---
0x79: V30 = 0xdc52c49a
0x7e: V31 = EQ 0xdc52c49a V11
0x7f: V32 = 0x25e
0x82: JUMPI 0x25e V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x2a1]
---
0x83 DUP1
0x84 PUSH4 0xf2fde38b
0x89 EQ
0x8a PUSH2 0x2a1
0x8d JUMPI
---
0x84: V33 = 0xf2fde38b
0x89: V34 = EQ 0xf2fde38b V11
0x8a: V35 = 0x2a1
0x8d: JUMPI 0x2a1 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x92]
---
Predecessors: [0x0, 0x83]
Successors: []
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8e: JUMPDEST 
0x8f: V36 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0xf0]
---
Predecessors: [0xd]
Successors: [0x2e4]
---
0x93 JUMPDEST
0x94 PUSH2 0xf1
0x97 PUSH1 0x4
0x99 DUP1
0x9a CALLDATASIZE
0x9b SUB
0x9c DUP2
0x9d ADD
0x9e SWAP1
0x9f DUP1
0xa0 DUP1
0xa1 CALLDATALOAD
0xa2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7 AND
0xb8 SWAP1
0xb9 PUSH1 0x20
0xbb ADD
0xbc SWAP1
0xbd SWAP3
0xbe SWAP2
0xbf SWAP1
0xc0 DUP1
0xc1 CALLDATALOAD
0xc2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7 AND
0xd8 SWAP1
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP1
0xdd SWAP3
0xde SWAP2
0xdf SWAP1
0xe0 DUP1
0xe1 CALLDATALOAD
0xe2 SWAP1
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP1
0xe7 SWAP3
0xe8 SWAP2
0xe9 SWAP1
0xea POP
0xeb POP
0xec POP
0xed PUSH2 0x2e4
0xf0 JUMP
---
0x93: JUMPDEST 
0x94: V37 = 0xf1
0x97: V38 = 0x4
0x9a: V39 = CALLDATASIZE
0x9b: V40 = SUB V39 0x4
0x9d: V41 = ADD 0x4 V40
0xa1: V42 = CALLDATALOAD 0x4
0xa2: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xb9: V45 = 0x20
0xbb: V46 = ADD 0x20 0x4
0xc1: V47 = CALLDATALOAD 0x24
0xc2: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xd9: V50 = 0x20
0xdb: V51 = ADD 0x20 0x24
0xe1: V52 = CALLDATALOAD 0x44
0xe3: V53 = 0x20
0xe5: V54 = ADD 0x20 0x44
0xed: V55 = 0x2e4
0xf0: JUMP 0x2e4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf1, V44, V49, V52]
Exit stack: [V11, 0xf1, V44, V49, V52]

================================

Block 0xf1
[0xf1:0xf2]
---
Predecessors: [0x7b1]
Successors: []
---
0xf1 JUMPDEST
0xf2 STOP
---
0xf1: JUMPDEST 
0xf2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0x41]
Successors: [0xfb, 0xff]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 DUP1
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xf3: JUMPDEST 
0xf4: V56 = CALLVALUE
0xf6: V57 = ISZERO V56
0xf7: V58 = 0xff
0xfa: JUMPI 0xff V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V11, V56]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xf3]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V59 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V11, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V56]

================================

Block 0xff
[0xff:0x167]
---
Predecessors: [0xf3]
Successors: [0x7b8]
---
0xff JUMPDEST
0x100 POP
0x101 PUSH2 0x168
0x104 PUSH1 0x4
0x106 DUP1
0x107 CALLDATASIZE
0x108 SUB
0x109 DUP2
0x10a ADD
0x10b SWAP1
0x10c DUP1
0x10d DUP1
0x10e CALLDATALOAD
0x10f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x124 AND
0x125 SWAP1
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP1
0x12a SWAP3
0x12b SWAP2
0x12c SWAP1
0x12d DUP1
0x12e CALLDATALOAD
0x12f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x144 AND
0x145 SWAP1
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP1
0x14a SWAP3
0x14b SWAP2
0x14c SWAP1
0x14d DUP1
0x14e CALLDATALOAD
0x14f SWAP1
0x150 PUSH1 0x20
0x152 ADD
0x153 SWAP1
0x154 SWAP3
0x155 SWAP2
0x156 SWAP1
0x157 DUP1
0x158 CALLDATALOAD
0x159 SWAP1
0x15a PUSH1 0x20
0x15c ADD
0x15d SWAP1
0x15e SWAP3
0x15f SWAP2
0x160 SWAP1
0x161 POP
0x162 POP
0x163 POP
0x164 PUSH2 0x7b8
0x167 JUMP
---
0xff: JUMPDEST 
0x101: V60 = 0x168
0x104: V61 = 0x4
0x107: V62 = CALLDATASIZE
0x108: V63 = SUB V62 0x4
0x10a: V64 = ADD 0x4 V63
0x10e: V65 = CALLDATALOAD 0x4
0x10f: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x124: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x126: V68 = 0x20
0x128: V69 = ADD 0x20 0x4
0x12e: V70 = CALLDATALOAD 0x24
0x12f: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x144: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x146: V73 = 0x20
0x148: V74 = ADD 0x20 0x24
0x14e: V75 = CALLDATALOAD 0x44
0x150: V76 = 0x20
0x152: V77 = ADD 0x20 0x44
0x158: V78 = CALLDATALOAD 0x64
0x15a: V79 = 0x20
0x15c: V80 = ADD 0x20 0x64
0x164: V81 = 0x7b8
0x167: JUMP 0x7b8
---
Entry stack: [V11, V56]
Stack pops: 1
Stack additions: [0x168, V67, V72, V75, V78]
Exit stack: [V11, 0x168, V67, V72, V75, V78]

================================

Block 0x168
[0x168:0x169]
---
Predecessors: [0xf75]
Successors: []
---
0x168 JUMPDEST
0x169 STOP
---
0x168: JUMPDEST 
0x169: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x4c]
Successors: [0x172, 0x176]
---
0x16a JUMPDEST
0x16b CALLVALUE
0x16c DUP1
0x16d ISZERO
0x16e PUSH2 0x176
0x171 JUMPI
---
0x16a: JUMPDEST 
0x16b: V82 = CALLVALUE
0x16d: V83 = ISZERO V82
0x16e: V84 = 0x176
0x171: JUMPI 0x176 V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V11, V82]

================================

Block 0x172
[0x172:0x175]
---
Predecessors: [0x16a]
Successors: []
---
0x172 PUSH1 0x0
0x174 DUP1
0x175 REVERT
---
0x172: V85 = 0x0
0x175: REVERT 0x0 0x0
---
Entry stack: [V11, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V82]

================================

Block 0x176
[0x176:0x17e]
---
Predecessors: [0x16a]
Successors: [0xf7d]
---
0x176 JUMPDEST
0x177 POP
0x178 PUSH2 0x17f
0x17b PUSH2 0xf7d
0x17e JUMP
---
0x176: JUMPDEST 
0x178: V86 = 0x17f
0x17b: V87 = 0xf7d
0x17e: JUMP 0xf7d
---
Entry stack: [V11, V82]
Stack pops: 1
Stack additions: [0x17f]
Exit stack: [V11, 0x17f]

================================

Block 0x17f
[0x17f:0x180]
---
Predecessors: [0xf90]
Successors: []
---
0x17f JUMPDEST
0x180 STOP
---
0x17f: JUMPDEST 
0x180: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x181
[0x181:0x188]
---
Predecessors: [0x57]
Successors: [0x189, 0x18d]
---
0x181 JUMPDEST
0x182 CALLVALUE
0x183 DUP1
0x184 ISZERO
0x185 PUSH2 0x18d
0x188 JUMPI
---
0x181: JUMPDEST 
0x182: V88 = CALLVALUE
0x184: V89 = ISZERO V88
0x185: V90 = 0x18d
0x188: JUMPI 0x18d V89
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V11, V88]

================================

Block 0x189
[0x189:0x18c]
---
Predecessors: [0x181]
Successors: []
---
0x189 PUSH1 0x0
0x18b DUP1
0x18c REVERT
---
0x189: V91 = 0x0
0x18c: REVERT 0x0 0x0
---
Entry stack: [V11, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V88]

================================

Block 0x18d
[0x18d:0x195]
---
Predecessors: [0x181]
Successors: [0x104f]
---
0x18d JUMPDEST
0x18e POP
0x18f PUSH2 0x196
0x192 PUSH2 0x104f
0x195 JUMP
---
0x18d: JUMPDEST 
0x18f: V92 = 0x196
0x192: V93 = 0x104f
0x195: JUMP 0x104f
---
Entry stack: [V11, V88]
Stack pops: 1
Stack additions: [0x196]
Exit stack: [V11, 0x196]

================================

Block 0x196
[0x196:0x1d7]
---
Predecessors: [0x104f]
Successors: []
---
0x196 JUMPDEST
0x197 PUSH1 0x40
0x199 MLOAD
0x19a DUP1
0x19b DUP3
0x19c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b1 AND
0x1b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c7 AND
0x1c8 DUP2
0x1c9 MSTORE
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd SWAP2
0x1ce POP
0x1cf POP
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 SWAP2
0x1d5 SUB
0x1d6 SWAP1
0x1d7 RETURN
---
0x196: JUMPDEST 
0x197: V94 = 0x40
0x199: V95 = M[0x40]
0x19c: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V845
0x1b2: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1c9: M[V95] = V99
0x1ca: V100 = 0x20
0x1cc: V101 = ADD 0x20 V95
0x1d0: V102 = 0x40
0x1d2: V103 = M[0x40]
0x1d5: V104 = SUB V101 V103
0x1d7: RETURN V103 V104
---
Entry stack: [V11, V845]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d8
[0x1d8:0x1df]
---
Predecessors: [0x62]
Successors: [0x1e0, 0x1e4]
---
0x1d8 JUMPDEST
0x1d9 CALLVALUE
0x1da DUP1
0x1db ISZERO
0x1dc PUSH2 0x1e4
0x1df JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V105 = CALLVALUE
0x1db: V106 = ISZERO V105
0x1dc: V107 = 0x1e4
0x1df: JUMPI 0x1e4 V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V105]
Exit stack: [V11, V105]

================================

Block 0x1e0
[0x1e0:0x1e3]
---
Predecessors: [0x1d8]
Successors: []
---
0x1e0 PUSH1 0x0
0x1e2 DUP1
0x1e3 REVERT
---
0x1e0: V108 = 0x0
0x1e3: REVERT 0x0 0x0
---
Entry stack: [V11, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V105]

================================

Block 0x1e4
[0x1e4:0x1ec]
---
Predecessors: [0x1d8]
Successors: [0x1078]
---
0x1e4 JUMPDEST
0x1e5 POP
0x1e6 PUSH2 0x1ed
0x1e9 PUSH2 0x1078
0x1ec JUMP
---
0x1e4: JUMPDEST 
0x1e6: V109 = 0x1ed
0x1e9: V110 = 0x1078
0x1ec: JUMP 0x1078
---
Entry stack: [V11, V105]
Stack pops: 1
Stack additions: [0x1ed]
Exit stack: [V11, 0x1ed]

================================

Block 0x1ed
[0x1ed:0x206]
---
Predecessors: [0x1078]
Successors: []
---
0x1ed JUMPDEST
0x1ee PUSH1 0x40
0x1f0 MLOAD
0x1f1 DUP1
0x1f2 DUP3
0x1f3 ISZERO
0x1f4 ISZERO
0x1f5 ISZERO
0x1f6 ISZERO
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc SWAP2
0x1fd POP
0x1fe POP
0x1ff PUSH1 0x40
0x201 MLOAD
0x202 DUP1
0x203 SWAP2
0x204 SUB
0x205 SWAP1
0x206 RETURN
---
0x1ed: JUMPDEST 
0x1ee: V111 = 0x40
0x1f0: V112 = M[0x40]
0x1f3: V113 = ISZERO V859
0x1f4: V114 = ISZERO V113
0x1f5: V115 = ISZERO V114
0x1f6: V116 = ISZERO V115
0x1f8: M[V112] = V116
0x1f9: V117 = 0x20
0x1fb: V118 = ADD 0x20 V112
0x1ff: V119 = 0x40
0x201: V120 = M[0x40]
0x204: V121 = SUB V118 V120
0x206: RETURN V120 V121
---
Entry stack: [V11, S2, S1, V859]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0x207
[0x207:0x20e]
---
Predecessors: [0x6d]
Successors: [0x20f, 0x213]
---
0x207 JUMPDEST
0x208 CALLVALUE
0x209 DUP1
0x20a ISZERO
0x20b PUSH2 0x213
0x20e JUMPI
---
0x207: JUMPDEST 
0x208: V122 = CALLVALUE
0x20a: V123 = ISZERO V122
0x20b: V124 = 0x213
0x20e: JUMPI 0x213 V123
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V122]
Exit stack: [V11, V122]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x207]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V125 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V11, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V122]

================================

Block 0x213
[0x213:0x21b]
---
Predecessors: [0x207]
Successors: [0x10cf]
---
0x213 JUMPDEST
0x214 POP
0x215 PUSH2 0x21c
0x218 PUSH2 0x10cf
0x21b JUMP
---
0x213: JUMPDEST 
0x215: V126 = 0x21c
0x218: V127 = 0x10cf
0x21b: JUMP 0x10cf
---
Entry stack: [V11, V122]
Stack pops: 1
Stack additions: [0x21c]
Exit stack: [V11, 0x21c]

================================

Block 0x21c
[0x21c:0x25d]
---
Predecessors: [0x10cf]
Successors: []
---
0x21c JUMPDEST
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 DUP3
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 AND
0x238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24d AND
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x20
0x252 ADD
0x253 SWAP2
0x254 POP
0x255 POP
0x256 PUSH1 0x40
0x258 MLOAD
0x259 DUP1
0x25a SWAP2
0x25b SUB
0x25c SWAP1
0x25d RETURN
---
0x21c: JUMPDEST 
0x21d: V128 = 0x40
0x21f: V129 = M[0x40]
0x222: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V868
0x238: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x24f: M[V129] = V133
0x250: V134 = 0x20
0x252: V135 = ADD 0x20 V129
0x256: V136 = 0x40
0x258: V137 = M[0x40]
0x25b: V138 = SUB V135 V137
0x25d: RETURN V137 V138
---
Entry stack: [V11, V868]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x25e
[0x25e:0x265]
---
Predecessors: [0x78]
Successors: [0x266, 0x26a]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 DUP1
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x25e: JUMPDEST 
0x25f: V139 = CALLVALUE
0x261: V140 = ISZERO V139
0x262: V141 = 0x26a
0x265: JUMPI 0x26a V140
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V139]
Exit stack: [V11, V139]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x25e]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V142 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V11, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V139]

================================

Block 0x26a
[0x26a:0x29e]
---
Predecessors: [0x25e]
Successors: [0x10f9]
---
0x26a JUMPDEST
0x26b POP
0x26c PUSH2 0x29f
0x26f PUSH1 0x4
0x271 DUP1
0x272 CALLDATASIZE
0x273 SUB
0x274 DUP2
0x275 ADD
0x276 SWAP1
0x277 DUP1
0x278 DUP1
0x279 CALLDATALOAD
0x27a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28f AND
0x290 SWAP1
0x291 PUSH1 0x20
0x293 ADD
0x294 SWAP1
0x295 SWAP3
0x296 SWAP2
0x297 SWAP1
0x298 POP
0x299 POP
0x29a POP
0x29b PUSH2 0x10f9
0x29e JUMP
---
0x26a: JUMPDEST 
0x26c: V143 = 0x29f
0x26f: V144 = 0x4
0x272: V145 = CALLDATASIZE
0x273: V146 = SUB V145 0x4
0x275: V147 = ADD 0x4 V146
0x279: V148 = CALLDATALOAD 0x4
0x27a: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x291: V151 = 0x20
0x293: V152 = ADD 0x20 0x4
0x29b: V153 = 0x10f9
0x29e: JUMP 0x10f9
---
Entry stack: [V11, V139]
Stack pops: 1
Stack additions: [0x29f, V150]
Exit stack: [V11, 0x29f, V150]

================================

Block 0x29f
[0x29f:0x2a0]
---
Predecessors: [0x110c, 0x116c]
Successors: []
---
0x29f JUMPDEST
0x2a0 STOP
---
0x29f: JUMPDEST 
0x2a0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a1
[0x2a1:0x2a8]
---
Predecessors: [0x83]
Successors: [0x2a9, 0x2ad]
---
0x2a1 JUMPDEST
0x2a2 CALLVALUE
0x2a3 DUP1
0x2a4 ISZERO
0x2a5 PUSH2 0x2ad
0x2a8 JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V154 = CALLVALUE
0x2a4: V155 = ISZERO V154
0x2a5: V156 = 0x2ad
0x2a8: JUMPI 0x2ad V155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V11, V154]

================================

Block 0x2a9
[0x2a9:0x2ac]
---
Predecessors: [0x2a1]
Successors: []
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
---
0x2a9: V157 = 0x0
0x2ac: REVERT 0x0 0x0
---
Entry stack: [V11, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V154]

================================

Block 0x2ad
[0x2ad:0x2e1]
---
Predecessors: [0x2a1]
Successors: [0x1150]
---
0x2ad JUMPDEST
0x2ae POP
0x2af PUSH2 0x2e2
0x2b2 PUSH1 0x4
0x2b4 DUP1
0x2b5 CALLDATASIZE
0x2b6 SUB
0x2b7 DUP2
0x2b8 ADD
0x2b9 SWAP1
0x2ba DUP1
0x2bb DUP1
0x2bc CALLDATALOAD
0x2bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d2 AND
0x2d3 SWAP1
0x2d4 PUSH1 0x20
0x2d6 ADD
0x2d7 SWAP1
0x2d8 SWAP3
0x2d9 SWAP2
0x2da SWAP1
0x2db POP
0x2dc POP
0x2dd POP
0x2de PUSH2 0x1150
0x2e1 JUMP
---
0x2ad: JUMPDEST 
0x2af: V158 = 0x2e2
0x2b2: V159 = 0x4
0x2b5: V160 = CALLDATASIZE
0x2b6: V161 = SUB V160 0x4
0x2b8: V162 = ADD 0x4 V161
0x2bc: V163 = CALLDATALOAD 0x4
0x2bd: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2d4: V166 = 0x20
0x2d6: V167 = ADD 0x20 0x4
0x2de: V168 = 0x1150
0x2e1: JUMP 0x1150
---
Entry stack: [V11, V154]
Stack pops: 1
Stack additions: [0x2e2, V165]
Exit stack: [V11, 0x2e2, V165]

================================

Block 0x2e2
[0x2e2:0x2e3]
---
Predecessors: [0x110c, 0x116c]
Successors: []
---
0x2e2 JUMPDEST
0x2e3 STOP
---
0x2e2: JUMPDEST 
0x2e3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e4
[0x2e4:0x340]
---
Predecessors: [0x93]
Successors: [0x341, 0x3ae]
---
0x2e4 JUMPDEST
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 PUSH1 0x0
0x2ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ff AND
0x300 PUSH1 0x1
0x302 PUSH1 0x0
0x304 SWAP1
0x305 SLOAD
0x306 SWAP1
0x307 PUSH2 0x100
0x30a EXP
0x30b SWAP1
0x30c DIV
0x30d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x322 AND
0x323 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x338 AND
0x339 EQ
0x33a ISZERO
0x33b ISZERO
0x33c ISZERO
0x33d PUSH2 0x3ae
0x340 JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V169 = 0x0
0x2e8: V170 = 0x0
0x2ea: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ff: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x300: V173 = 0x1
0x302: V174 = 0x0
0x305: V175 = S[0x1]
0x307: V176 = 0x100
0x30a: V177 = EXP 0x100 0x0
0x30c: V178 = DIV V175 0x1
0x30d: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x322: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x323: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x338: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x339: V183 = EQ V182 0x0
0x33a: V184 = ISZERO V183
0x33b: V185 = ISZERO V184
0x33c: V186 = ISZERO V185
0x33d: V187 = 0x3ae
0x340: JUMPI 0x3ae V186
---
Entry stack: [V11, 0xf1, V44, V49, V52]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0xf1, V44, V49, V52, 0x0, 0x0]

================================

Block 0x341
[0x341:0x3ad]
---
Predecessors: [0x2e4]
Successors: []
---
0x341 PUSH1 0x40
0x343 MLOAD
0x344 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x365 DUP2
0x366 MSTORE
0x367 PUSH1 0x4
0x369 ADD
0x36a DUP1
0x36b DUP1
0x36c PUSH1 0x20
0x36e ADD
0x36f DUP3
0x370 DUP2
0x371 SUB
0x372 DUP3
0x373 MSTORE
0x374 PUSH1 0x1e
0x376 DUP2
0x377 MSTORE
0x378 PUSH1 0x20
0x37a ADD
0x37b DUP1
0x37c PUSH32 0x4574686572546f6b656e2061646472657373206d757374206265207365740000
0x39d DUP2
0x39e MSTORE
0x39f POP
0x3a0 PUSH1 0x20
0x3a2 ADD
0x3a3 SWAP2
0x3a4 POP
0x3a5 POP
0x3a6 PUSH1 0x40
0x3a8 MLOAD
0x3a9 DUP1
0x3aa SWAP2
0x3ab SUB
0x3ac SWAP1
0x3ad REVERT
---
0x341: V188 = 0x40
0x343: V189 = M[0x40]
0x344: V190 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x366: M[V189] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x367: V191 = 0x4
0x369: V192 = ADD 0x4 V189
0x36c: V193 = 0x20
0x36e: V194 = ADD 0x20 V192
0x371: V195 = SUB V194 V192
0x373: M[V192] = V195
0x374: V196 = 0x1e
0x377: M[V194] = 0x1e
0x378: V197 = 0x20
0x37a: V198 = ADD 0x20 V194
0x37c: V199 = 0x4574686572546f6b656e2061646472657373206d757374206265207365740000
0x39e: M[V198] = 0x4574686572546f6b656e2061646472657373206d757374206265207365740000
0x3a0: V200 = 0x20
0x3a2: V201 = ADD 0x20 V198
0x3a6: V202 = 0x40
0x3a8: V203 = M[0x40]
0x3ab: V204 = SUB V201 V203
0x3ad: REVERT V203 V204
---
Entry stack: [V11, 0xf1, V44, V49, V52, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, 0x0, 0x0]

================================

Block 0x3ae
[0x3ae:0x3e5]
---
Predecessors: [0x2e4]
Successors: [0x3e6, 0x453]
---
0x3ae JUMPDEST
0x3af PUSH1 0x0
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 AND
0x3c7 DUP5
0x3c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3dd AND
0x3de EQ
0x3df ISZERO
0x3e0 ISZERO
0x3e1 ISZERO
0x3e2 PUSH2 0x453
0x3e5 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V205 = 0x0
0x3b1: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3c8: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x3de: V210 = EQ V209 0x0
0x3df: V211 = ISZERO V210
0x3e0: V212 = ISZERO V211
0x3e1: V213 = ISZERO V212
0x3e2: V214 = 0x453
0x3e5: JUMPI 0x453 V213
---
Entry stack: [V11, 0xf1, V44, V49, V52, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xf1, V44, V49, V52, 0x0, 0x0]

================================

Block 0x3e6
[0x3e6:0x452]
---
Predecessors: [0x3ae]
Successors: []
---
0x3e6 PUSH1 0x40
0x3e8 MLOAD
0x3e9 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x40a DUP2
0x40b MSTORE
0x40c PUSH1 0x4
0x40e ADD
0x40f DUP1
0x410 DUP1
0x411 PUSH1 0x20
0x413 ADD
0x414 DUP3
0x415 DUP2
0x416 SUB
0x417 DUP3
0x418 MSTORE
0x419 PUSH1 0x1d
0x41b DUP2
0x41c MSTORE
0x41d PUSH1 0x20
0x41f ADD
0x420 DUP1
0x421 PUSH32 0x546f6b656e206164647265737320636f696c64206e6f74206265203078000000
0x442 DUP2
0x443 MSTORE
0x444 POP
0x445 PUSH1 0x20
0x447 ADD
0x448 SWAP2
0x449 POP
0x44a POP
0x44b PUSH1 0x40
0x44d MLOAD
0x44e DUP1
0x44f SWAP2
0x450 SUB
0x451 SWAP1
0x452 REVERT
---
0x3e6: V215 = 0x40
0x3e8: V216 = M[0x40]
0x3e9: V217 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x40b: M[V216] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x40c: V218 = 0x4
0x40e: V219 = ADD 0x4 V216
0x411: V220 = 0x20
0x413: V221 = ADD 0x20 V219
0x416: V222 = SUB V221 V219
0x418: M[V219] = V222
0x419: V223 = 0x1d
0x41c: M[V221] = 0x1d
0x41d: V224 = 0x20
0x41f: V225 = ADD 0x20 V221
0x421: V226 = 0x546f6b656e206164647265737320636f696c64206e6f74206265203078000000
0x443: M[V225] = 0x546f6b656e206164647265737320636f696c64206e6f74206265203078000000
0x445: V227 = 0x20
0x447: V228 = ADD 0x20 V225
0x44b: V229 = 0x40
0x44d: V230 = M[0x40]
0x450: V231 = SUB V228 V230
0x452: REVERT V230 V231
---
Entry stack: [V11, 0xf1, V44, V49, V52, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, 0x0, 0x0]

================================

Block 0x453
[0x453:0x477]
---
Predecessors: [0x3ae]
Successors: [0x478, 0x50b]
---
0x453 JUMPDEST
0x454 ADDRESS
0x455 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46a AND
0x46b BALANCE
0x46c SWAP2
0x46d POP
0x46e PUSH1 0x0
0x470 DUP3
0x471 GT
0x472 ISZERO
0x473 ISZERO
0x474 PUSH2 0x50b
0x477 JUMPI
---
0x453: JUMPDEST 
0x454: V232 = ADDRESS
0x455: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x46b: V235 = BALANCE V234
0x46e: V236 = 0x0
0x471: V237 = GT V235 0x0
0x472: V238 = ISZERO V237
0x473: V239 = ISZERO V238
0x474: V240 = 0x50b
0x477: JUMPI 0x50b V239
---
Entry stack: [V11, 0xf1, V44, V49, V52, 0x0, 0x0]
Stack pops: 2
Stack additions: [V235, S0]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]

================================

Block 0x478
[0x478:0x50a]
---
Predecessors: [0x453]
Successors: []
---
0x478 PUSH1 0x40
0x47a MLOAD
0x47b PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x49c DUP2
0x49d MSTORE
0x49e PUSH1 0x4
0x4a0 ADD
0x4a1 DUP1
0x4a2 DUP1
0x4a3 PUSH1 0x20
0x4a5 ADD
0x4a6 DUP3
0x4a7 DUP2
0x4a8 SUB
0x4a9 DUP3
0x4aa MSTORE
0x4ab PUSH1 0x21
0x4ad DUP2
0x4ae MSTORE
0x4af PUSH1 0x20
0x4b1 ADD
0x4b2 DUP1
0x4b3 PUSH32 0x45746820616d6f756e74206d7573742062652067726561746572207468616e20
0x4d4 DUP2
0x4d5 MSTORE
0x4d6 PUSH1 0x20
0x4d8 ADD
0x4d9 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000
0x4fa DUP2
0x4fb MSTORE
0x4fc POP
0x4fd PUSH1 0x40
0x4ff ADD
0x500 SWAP2
0x501 POP
0x502 POP
0x503 PUSH1 0x40
0x505 MLOAD
0x506 DUP1
0x507 SWAP2
0x508 SUB
0x509 SWAP1
0x50a REVERT
---
0x478: V241 = 0x40
0x47a: V242 = M[0x40]
0x47b: V243 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x49d: M[V242] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x49e: V244 = 0x4
0x4a0: V245 = ADD 0x4 V242
0x4a3: V246 = 0x20
0x4a5: V247 = ADD 0x20 V245
0x4a8: V248 = SUB V247 V245
0x4aa: M[V245] = V248
0x4ab: V249 = 0x21
0x4ae: M[V247] = 0x21
0x4af: V250 = 0x20
0x4b1: V251 = ADD 0x20 V247
0x4b3: V252 = 0x45746820616d6f756e74206d7573742062652067726561746572207468616e20
0x4d5: M[V251] = 0x45746820616d6f756e74206d7573742062652067726561746572207468616e20
0x4d6: V253 = 0x20
0x4d8: V254 = ADD 0x20 V251
0x4d9: V255 = 0x3000000000000000000000000000000000000000000000000000000000000000
0x4fb: M[V254] = 0x3000000000000000000000000000000000000000000000000000000000000000
0x4fd: V256 = 0x40
0x4ff: V257 = ADD 0x40 V251
0x503: V258 = 0x40
0x505: V259 = M[0x40]
0x508: V260 = SUB V257 V259
0x50a: REVERT V259 V260
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]

================================

Block 0x50b
[0x50b:0x55f]
---
Predecessors: [0x453]
Successors: [0x560, 0x564]
---
0x50b JUMPDEST
0x50c PUSH1 0x1
0x50e PUSH1 0x0
0x510 SWAP1
0x511 SLOAD
0x512 SWAP1
0x513 PUSH2 0x100
0x516 EXP
0x517 SWAP1
0x518 DIV
0x519 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52e AND
0x52f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x544 AND
0x545 DUP3
0x546 PUSH1 0x40
0x548 MLOAD
0x549 PUSH1 0x0
0x54b PUSH1 0x40
0x54d MLOAD
0x54e DUP1
0x54f DUP4
0x550 SUB
0x551 DUP2
0x552 DUP6
0x553 DUP8
0x554 GAS
0x555 CALL
0x556 SWAP3
0x557 POP
0x558 POP
0x559 POP
0x55a ISZERO
0x55b ISZERO
0x55c PUSH2 0x564
0x55f JUMPI
---
0x50b: JUMPDEST 
0x50c: V261 = 0x1
0x50e: V262 = 0x0
0x511: V263 = S[0x1]
0x513: V264 = 0x100
0x516: V265 = EXP 0x100 0x0
0x518: V266 = DIV V263 0x1
0x519: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x52e: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x52f: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x544: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x546: V271 = 0x40
0x548: V272 = M[0x40]
0x549: V273 = 0x0
0x54b: V274 = 0x40
0x54d: V275 = M[0x40]
0x550: V276 = SUB V272 V275
0x554: V277 = GAS
0x555: V278 = CALL V277 V270 V235 V275 V276 V275 0x0
0x55a: V279 = ISZERO V278
0x55b: V280 = ISZERO V279
0x55c: V281 = 0x564
0x55f: JUMPI 0x564 V280
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]

================================

Block 0x560
[0x560:0x563]
---
Predecessors: [0x50b]
Successors: []
---
0x560 PUSH1 0x0
0x562 DUP1
0x563 REVERT
---
0x560: V282 = 0x0
0x563: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]

================================

Block 0x564
[0x564:0x662]
---
Predecessors: [0x50b]
Successors: [0x663, 0x667]
---
0x564 JUMPDEST
0x565 PUSH1 0x0
0x567 DUP6
0x568 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57d AND
0x57e PUSH4 0x5e5144eb
0x583 PUSH1 0x1
0x585 PUSH1 0x0
0x587 SWAP1
0x588 SLOAD
0x589 SWAP1
0x58a PUSH2 0x100
0x58d EXP
0x58e SWAP1
0x58f DIV
0x590 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a5 AND
0x5a6 DUP8
0x5a7 DUP7
0x5a8 DUP9
0x5a9 PUSH1 0x40
0x5ab MLOAD
0x5ac DUP6
0x5ad PUSH4 0xffffffff
0x5b2 AND
0x5b3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5d1 MUL
0x5d2 DUP2
0x5d3 MSTORE
0x5d4 PUSH1 0x4
0x5d6 ADD
0x5d7 DUP1
0x5d8 DUP6
0x5d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ee AND
0x5ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x604 AND
0x605 DUP2
0x606 MSTORE
0x607 PUSH1 0x20
0x609 ADD
0x60a DUP5
0x60b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x620 AND
0x621 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x636 AND
0x637 DUP2
0x638 MSTORE
0x639 PUSH1 0x20
0x63b ADD
0x63c DUP4
0x63d DUP2
0x63e MSTORE
0x63f PUSH1 0x20
0x641 ADD
0x642 DUP3
0x643 DUP2
0x644 MSTORE
0x645 PUSH1 0x20
0x647 ADD
0x648 SWAP5
0x649 POP
0x64a POP
0x64b POP
0x64c POP
0x64d POP
0x64e PUSH1 0x20
0x650 PUSH1 0x40
0x652 MLOAD
0x653 DUP1
0x654 DUP4
0x655 SUB
0x656 DUP2
0x657 PUSH1 0x0
0x659 DUP8
0x65a DUP1
0x65b EXTCODESIZE
0x65c ISZERO
0x65d DUP1
0x65e ISZERO
0x65f PUSH2 0x667
0x662 JUMPI
---
0x564: JUMPDEST 
0x565: V283 = 0x0
0x568: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x57d: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x57e: V286 = 0x5e5144eb
0x583: V287 = 0x1
0x585: V288 = 0x0
0x588: V289 = S[0x1]
0x58a: V290 = 0x100
0x58d: V291 = EXP 0x100 0x0
0x58f: V292 = DIV V289 0x1
0x590: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a5: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x5a9: V295 = 0x40
0x5ab: V296 = M[0x40]
0x5ad: V297 = 0xffffffff
0x5b2: V298 = AND 0xffffffff 0x5e5144eb
0x5b3: V299 = 0x100000000000000000000000000000000000000000000000000000000
0x5d1: V300 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x5e5144eb
0x5d3: M[V296] = 0x5e5144eb00000000000000000000000000000000000000000000000000000000
0x5d4: V301 = 0x4
0x5d6: V302 = ADD 0x4 V296
0x5d9: V303 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ee: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x5ef: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x604: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x606: M[V302] = V306
0x607: V307 = 0x20
0x609: V308 = ADD 0x20 V302
0x60b: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x620: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x621: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x636: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x638: M[V308] = V312
0x639: V313 = 0x20
0x63b: V314 = ADD 0x20 V308
0x63e: M[V314] = V235
0x63f: V315 = 0x20
0x641: V316 = ADD 0x20 V314
0x644: M[V316] = V52
0x645: V317 = 0x20
0x647: V318 = ADD 0x20 V316
0x64e: V319 = 0x20
0x650: V320 = 0x40
0x652: V321 = M[0x40]
0x655: V322 = SUB V318 V321
0x657: V323 = 0x0
0x65b: V324 = EXTCODESIZE V285
0x65c: V325 = ISZERO V324
0x65e: V326 = ISZERO V325
0x65f: V327 = 0x667
0x662: JUMPI 0x667 V326
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, V285, 0x5e5144eb, V318, 0x20, V321, V322, V321, 0x0, V285, V325]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V285, 0x5e5144eb, V318, 0x20, V321, V322, V321, 0x0, V285, V325]

================================

Block 0x663
[0x663:0x666]
---
Predecessors: [0x564]
Successors: []
---
0x663 PUSH1 0x0
0x665 DUP1
0x666 REVERT
---
0x663: V328 = 0x0
0x666: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V285, 0x5e5144eb, V318, 0x20, V321, V322, V321, 0x0, V285, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V285, 0x5e5144eb, V318, 0x20, V321, V322, V321, 0x0, V285, V325]

================================

Block 0x667
[0x667:0x671]
---
Predecessors: [0x564]
Successors: [0x672, 0x67b]
---
0x667 JUMPDEST
0x668 POP
0x669 GAS
0x66a CALL
0x66b ISZERO
0x66c DUP1
0x66d ISZERO
0x66e PUSH2 0x67b
0x671 JUMPI
---
0x667: JUMPDEST 
0x669: V329 = GAS
0x66a: V330 = CALL V329 V285 0x0 V321 V322 V321 0x20
0x66b: V331 = ISZERO V330
0x66d: V332 = ISZERO V331
0x66e: V333 = 0x67b
0x671: JUMPI 0x67b V332
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V285, 0x5e5144eb, V318, 0x20, V321, V322, V321, 0x0, V285, V325]
Stack pops: 7
Stack additions: [V331]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V285, 0x5e5144eb, V318, V331]

================================

Block 0x672
[0x672:0x67a]
---
Predecessors: [0x667]
Successors: []
---
0x672 RETURNDATASIZE
0x673 PUSH1 0x0
0x675 DUP1
0x676 RETURNDATACOPY
0x677 RETURNDATASIZE
0x678 PUSH1 0x0
0x67a REVERT
---
0x672: V334 = RETURNDATASIZE
0x673: V335 = 0x0
0x676: RETURNDATACOPY 0x0 0x0 V334
0x677: V336 = RETURNDATASIZE
0x678: V337 = 0x0
0x67a: REVERT 0x0 V336
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V285, 0x5e5144eb, V318, V331]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V285, 0x5e5144eb, V318, V331]

================================

Block 0x67b
[0x67b:0x68c]
---
Predecessors: [0x667]
Successors: [0x68d, 0x691]
---
0x67b JUMPDEST
0x67c POP
0x67d POP
0x67e POP
0x67f POP
0x680 PUSH1 0x40
0x682 MLOAD
0x683 RETURNDATASIZE
0x684 PUSH1 0x20
0x686 DUP2
0x687 LT
0x688 ISZERO
0x689 PUSH2 0x691
0x68c JUMPI
---
0x67b: JUMPDEST 
0x680: V338 = 0x40
0x682: V339 = M[0x40]
0x683: V340 = RETURNDATASIZE
0x684: V341 = 0x20
0x687: V342 = LT V340 0x20
0x688: V343 = ISZERO V342
0x689: V344 = 0x691
0x68c: JUMPI 0x691 V343
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V285, 0x5e5144eb, V318, V331]
Stack pops: 4
Stack additions: [V339, V340]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V339, V340]

================================

Block 0x68d
[0x68d:0x690]
---
Predecessors: [0x67b]
Successors: []
---
0x68d PUSH1 0x0
0x68f DUP1
0x690 REVERT
---
0x68d: V345 = 0x0
0x690: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V339, V340]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V339, V340]

================================

Block 0x691
[0x691:0x6a9]
---
Predecessors: [0x67b]
Successors: [0x6aa, 0x6ae]
---
0x691 JUMPDEST
0x692 DUP2
0x693 ADD
0x694 SWAP1
0x695 DUP1
0x696 DUP1
0x697 MLOAD
0x698 SWAP1
0x699 PUSH1 0x20
0x69b ADD
0x69c SWAP1
0x69d SWAP3
0x69e SWAP2
0x69f SWAP1
0x6a0 POP
0x6a1 POP
0x6a2 POP
0x6a3 GT
0x6a4 ISZERO
0x6a5 ISZERO
0x6a6 PUSH2 0x6ae
0x6a9 JUMPI
---
0x691: JUMPDEST 
0x693: V346 = ADD V339 V340
0x697: V347 = M[V339]
0x699: V348 = 0x20
0x69b: V349 = ADD 0x20 V339
0x6a3: V350 = GT V347 0x0
0x6a4: V351 = ISZERO V350
0x6a5: V352 = ISZERO V351
0x6a6: V353 = 0x6ae
0x6a9: JUMPI 0x6ae V352
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, 0x0, V339, V340]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]

================================

Block 0x6aa
[0x6aa:0x6ad]
---
Predecessors: [0x691]
Successors: []
---
0x6aa PUSH1 0x0
0x6ac DUP1
0x6ad REVERT
---
0x6aa: V354 = 0x0
0x6ad: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]

================================

Block 0x6ae
[0x6ae:0x744]
---
Predecessors: [0x691]
Successors: [0x745, 0x749]
---
0x6ae JUMPDEST
0x6af DUP4
0x6b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c5 AND
0x6c6 PUSH4 0x70a08231
0x6cb ADDRESS
0x6cc PUSH1 0x40
0x6ce MLOAD
0x6cf DUP3
0x6d0 PUSH4 0xffffffff
0x6d5 AND
0x6d6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6f4 MUL
0x6f5 DUP2
0x6f6 MSTORE
0x6f7 PUSH1 0x4
0x6f9 ADD
0x6fa DUP1
0x6fb DUP3
0x6fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x711 AND
0x712 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x727 AND
0x728 DUP2
0x729 MSTORE
0x72a PUSH1 0x20
0x72c ADD
0x72d SWAP2
0x72e POP
0x72f POP
0x730 PUSH1 0x20
0x732 PUSH1 0x40
0x734 MLOAD
0x735 DUP1
0x736 DUP4
0x737 SUB
0x738 DUP2
0x739 PUSH1 0x0
0x73b DUP8
0x73c DUP1
0x73d EXTCODESIZE
0x73e ISZERO
0x73f DUP1
0x740 ISZERO
0x741 PUSH2 0x749
0x744 JUMPI
---
0x6ae: JUMPDEST 
0x6b0: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c5: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x6c6: V357 = 0x70a08231
0x6cb: V358 = ADDRESS
0x6cc: V359 = 0x40
0x6ce: V360 = M[0x40]
0x6d0: V361 = 0xffffffff
0x6d5: V362 = AND 0xffffffff 0x70a08231
0x6d6: V363 = 0x100000000000000000000000000000000000000000000000000000000
0x6f4: V364 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x6f6: M[V360] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6f7: V365 = 0x4
0x6f9: V366 = ADD 0x4 V360
0x6fc: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x711: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x712: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x727: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x729: M[V366] = V370
0x72a: V371 = 0x20
0x72c: V372 = ADD 0x20 V366
0x730: V373 = 0x20
0x732: V374 = 0x40
0x734: V375 = M[0x40]
0x737: V376 = SUB V372 V375
0x739: V377 = 0x0
0x73d: V378 = EXTCODESIZE V356
0x73e: V379 = ISZERO V378
0x740: V380 = ISZERO V379
0x741: V381 = 0x749
0x744: JUMPI 0x749 V380
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V356, 0x70a08231, V372, 0x20, V375, V376, V375, 0x0, V356, V379]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V356, 0x70a08231, V372, 0x20, V375, V376, V375, 0x0, V356, V379]

================================

Block 0x745
[0x745:0x748]
---
Predecessors: [0x6ae]
Successors: []
---
0x745 PUSH1 0x0
0x747 DUP1
0x748 REVERT
---
0x745: V382 = 0x0
0x748: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V356, 0x70a08231, V372, 0x20, V375, V376, V375, 0x0, V356, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V356, 0x70a08231, V372, 0x20, V375, V376, V375, 0x0, V356, V379]

================================

Block 0x749
[0x749:0x753]
---
Predecessors: [0x6ae]
Successors: [0x754, 0x75d]
---
0x749 JUMPDEST
0x74a POP
0x74b GAS
0x74c CALL
0x74d ISZERO
0x74e DUP1
0x74f ISZERO
0x750 PUSH2 0x75d
0x753 JUMPI
---
0x749: JUMPDEST 
0x74b: V383 = GAS
0x74c: V384 = CALL V383 V356 0x0 V375 V376 V375 0x20
0x74d: V385 = ISZERO V384
0x74f: V386 = ISZERO V385
0x750: V387 = 0x75d
0x753: JUMPI 0x75d V386
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V356, 0x70a08231, V372, 0x20, V375, V376, V375, 0x0, V356, V379]
Stack pops: 7
Stack additions: [V385]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V356, 0x70a08231, V372, V385]

================================

Block 0x754
[0x754:0x75c]
---
Predecessors: [0x749]
Successors: []
---
0x754 RETURNDATASIZE
0x755 PUSH1 0x0
0x757 DUP1
0x758 RETURNDATACOPY
0x759 RETURNDATASIZE
0x75a PUSH1 0x0
0x75c REVERT
---
0x754: V388 = RETURNDATASIZE
0x755: V389 = 0x0
0x758: RETURNDATACOPY 0x0 0x0 V388
0x759: V390 = RETURNDATASIZE
0x75a: V391 = 0x0
0x75c: REVERT 0x0 V390
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V356, 0x70a08231, V372, V385]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V356, 0x70a08231, V372, V385]

================================

Block 0x75d
[0x75d:0x76e]
---
Predecessors: [0x749]
Successors: [0x76f, 0x773]
---
0x75d JUMPDEST
0x75e POP
0x75f POP
0x760 POP
0x761 POP
0x762 PUSH1 0x40
0x764 MLOAD
0x765 RETURNDATASIZE
0x766 PUSH1 0x20
0x768 DUP2
0x769 LT
0x76a ISZERO
0x76b PUSH2 0x773
0x76e JUMPI
---
0x75d: JUMPDEST 
0x762: V392 = 0x40
0x764: V393 = M[0x40]
0x765: V394 = RETURNDATASIZE
0x766: V395 = 0x20
0x769: V396 = LT V394 0x20
0x76a: V397 = ISZERO V396
0x76b: V398 = 0x773
0x76e: JUMPI 0x773 V397
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V356, 0x70a08231, V372, V385]
Stack pops: 4
Stack additions: [V393, V394]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V393, V394]

================================

Block 0x76f
[0x76f:0x772]
---
Predecessors: [0x75d]
Successors: []
---
0x76f PUSH1 0x0
0x771 DUP1
0x772 REVERT
---
0x76f: V399 = 0x0
0x772: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V393, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V393, V394]

================================

Block 0x773
[0x773:0x7b0]
---
Predecessors: [0x75d]
Successors: [0x116f]
---
0x773 JUMPDEST
0x774 DUP2
0x775 ADD
0x776 SWAP1
0x777 DUP1
0x778 DUP1
0x779 MLOAD
0x77a SWAP1
0x77b PUSH1 0x20
0x77d ADD
0x77e SWAP1
0x77f SWAP3
0x780 SWAP2
0x781 SWAP1
0x782 POP
0x783 POP
0x784 POP
0x785 SWAP1
0x786 POP
0x787 PUSH2 0x7b1
0x78a ORIGIN
0x78b DUP3
0x78c DUP7
0x78d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a2 AND
0x7a3 PUSH2 0x116f
0x7a6 SWAP1
0x7a7 SWAP3
0x7a8 SWAP2
0x7a9 SWAP1
0x7aa PUSH4 0xffffffff
0x7af AND
0x7b0 JUMP
---
0x773: JUMPDEST 
0x775: V400 = ADD V393 V394
0x779: V401 = M[V393]
0x77b: V402 = 0x20
0x77d: V403 = ADD 0x20 V393
0x787: V404 = 0x7b1
0x78a: V405 = ORIGIN
0x78d: V406 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a2: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x7a3: V408 = 0x116f
0x7aa: V409 = 0xffffffff
0x7af: V410 = AND 0xffffffff 0x116f
0x7b0: JUMP 0x116f
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, 0x0, V393, V394]
Stack pops: 6
Stack additions: [S5, S4, S3, V401, 0x7b1, V407, V405, V401]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401]

================================

Block 0x7b1
[0x7b1:0x7b7]
---
Predecessors: [0x1258]
Successors: [0xf1]
---
0x7b1 JUMPDEST
0x7b2 POP
0x7b3 POP
0x7b4 POP
0x7b5 POP
0x7b6 POP
0x7b7 JUMP
---
0x7b1: JUMPDEST 
0x7b7: JUMP 0xf1
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, V401]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x7b8
[0x7b8:0x814]
---
Predecessors: [0xff]
Successors: [0x815, 0x882]
---
0x7b8 JUMPDEST
0x7b9 PUSH1 0x0
0x7bb DUP1
0x7bc PUSH1 0x0
0x7be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d3 AND
0x7d4 PUSH1 0x1
0x7d6 PUSH1 0x0
0x7d8 SWAP1
0x7d9 SLOAD
0x7da SWAP1
0x7db PUSH2 0x100
0x7de EXP
0x7df SWAP1
0x7e0 DIV
0x7e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f6 AND
0x7f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80c AND
0x80d EQ
0x80e ISZERO
0x80f ISZERO
0x810 ISZERO
0x811 PUSH2 0x882
0x814 JUMPI
---
0x7b8: JUMPDEST 
0x7b9: V411 = 0x0
0x7bc: V412 = 0x0
0x7be: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d3: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x7d4: V415 = 0x1
0x7d6: V416 = 0x0
0x7d9: V417 = S[0x1]
0x7db: V418 = 0x100
0x7de: V419 = EXP 0x100 0x0
0x7e0: V420 = DIV V417 0x1
0x7e1: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f6: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x7f7: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x80c: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x80d: V425 = EQ V424 0x0
0x80e: V426 = ISZERO V425
0x80f: V427 = ISZERO V426
0x810: V428 = ISZERO V427
0x811: V429 = 0x882
0x814: JUMPI 0x882 V428
---
Entry stack: [V11, 0x168, V67, V72, V75, V78]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]

================================

Block 0x815
[0x815:0x881]
---
Predecessors: [0x7b8]
Successors: []
---
0x815 PUSH1 0x40
0x817 MLOAD
0x818 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x839 DUP2
0x83a MSTORE
0x83b PUSH1 0x4
0x83d ADD
0x83e DUP1
0x83f DUP1
0x840 PUSH1 0x20
0x842 ADD
0x843 DUP3
0x844 DUP2
0x845 SUB
0x846 DUP3
0x847 MSTORE
0x848 PUSH1 0x1e
0x84a DUP2
0x84b MSTORE
0x84c PUSH1 0x20
0x84e ADD
0x84f DUP1
0x850 PUSH32 0x4574686572546f6b656e2061646472657373206d757374206265207365740000
0x871 DUP2
0x872 MSTORE
0x873 POP
0x874 PUSH1 0x20
0x876 ADD
0x877 SWAP2
0x878 POP
0x879 POP
0x87a PUSH1 0x40
0x87c MLOAD
0x87d DUP1
0x87e SWAP2
0x87f SUB
0x880 SWAP1
0x881 REVERT
---
0x815: V430 = 0x40
0x817: V431 = M[0x40]
0x818: V432 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x83a: M[V431] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x83b: V433 = 0x4
0x83d: V434 = ADD 0x4 V431
0x840: V435 = 0x20
0x842: V436 = ADD 0x20 V434
0x845: V437 = SUB V436 V434
0x847: M[V434] = V437
0x848: V438 = 0x1e
0x84b: M[V436] = 0x1e
0x84c: V439 = 0x20
0x84e: V440 = ADD 0x20 V436
0x850: V441 = 0x4574686572546f6b656e2061646472657373206d757374206265207365740000
0x872: M[V440] = 0x4574686572546f6b656e2061646472657373206d757374206265207365740000
0x874: V442 = 0x20
0x876: V443 = ADD 0x20 V440
0x87a: V444 = 0x40
0x87c: V445 = M[0x40]
0x87f: V446 = SUB V443 V445
0x881: REVERT V445 V446
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]

================================

Block 0x882
[0x882:0x8b9]
---
Predecessors: [0x7b8]
Successors: [0x8ba, 0x927]
---
0x882 JUMPDEST
0x883 PUSH1 0x0
0x885 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89a AND
0x89b DUP6
0x89c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b1 AND
0x8b2 EQ
0x8b3 ISZERO
0x8b4 ISZERO
0x8b5 ISZERO
0x8b6 PUSH2 0x927
0x8b9 JUMPI
---
0x882: JUMPDEST 
0x883: V447 = 0x0
0x885: V448 = 0xffffffffffffffffffffffffffffffffffffffff
0x89a: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x89c: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b1: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x8b2: V452 = EQ V451 0x0
0x8b3: V453 = ISZERO V452
0x8b4: V454 = ISZERO V453
0x8b5: V455 = ISZERO V454
0x8b6: V456 = 0x927
0x8b9: JUMPI 0x927 V455
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]

================================

Block 0x8ba
[0x8ba:0x926]
---
Predecessors: [0x882]
Successors: []
---
0x8ba PUSH1 0x40
0x8bc MLOAD
0x8bd PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8de DUP2
0x8df MSTORE
0x8e0 PUSH1 0x4
0x8e2 ADD
0x8e3 DUP1
0x8e4 DUP1
0x8e5 PUSH1 0x20
0x8e7 ADD
0x8e8 DUP3
0x8e9 DUP2
0x8ea SUB
0x8eb DUP3
0x8ec MSTORE
0x8ed PUSH1 0x1d
0x8ef DUP2
0x8f0 MSTORE
0x8f1 PUSH1 0x20
0x8f3 ADD
0x8f4 DUP1
0x8f5 PUSH32 0x546f6b656e206164647265737320636f696c64206e6f74206265203078000000
0x916 DUP2
0x917 MSTORE
0x918 POP
0x919 PUSH1 0x20
0x91b ADD
0x91c SWAP2
0x91d POP
0x91e POP
0x91f PUSH1 0x40
0x921 MLOAD
0x922 DUP1
0x923 SWAP2
0x924 SUB
0x925 SWAP1
0x926 REVERT
---
0x8ba: V457 = 0x40
0x8bc: V458 = M[0x40]
0x8bd: V459 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8df: M[V458] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8e0: V460 = 0x4
0x8e2: V461 = ADD 0x4 V458
0x8e5: V462 = 0x20
0x8e7: V463 = ADD 0x20 V461
0x8ea: V464 = SUB V463 V461
0x8ec: M[V461] = V464
0x8ed: V465 = 0x1d
0x8f0: M[V463] = 0x1d
0x8f1: V466 = 0x20
0x8f3: V467 = ADD 0x20 V463
0x8f5: V468 = 0x546f6b656e206164647265737320636f696c64206e6f74206265203078000000
0x917: M[V467] = 0x546f6b656e206164647265737320636f696c64206e6f74206265203078000000
0x919: V469 = 0x20
0x91b: V470 = ADD 0x20 V467
0x91f: V471 = 0x40
0x921: V472 = M[0x40]
0x924: V473 = SUB V470 V472
0x926: REVERT V472 V473
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]

================================

Block 0x927
[0x927:0x9f2]
---
Predecessors: [0x882]
Successors: [0x9f3, 0x9f7]
---
0x927 JUMPDEST
0x928 DUP4
0x929 DUP6
0x92a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93f AND
0x940 PUSH4 0xdd62ed3e
0x945 ORIGIN
0x946 ADDRESS
0x947 PUSH1 0x40
0x949 MLOAD
0x94a DUP4
0x94b PUSH4 0xffffffff
0x950 AND
0x951 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x96f MUL
0x970 DUP2
0x971 MSTORE
0x972 PUSH1 0x4
0x974 ADD
0x975 DUP1
0x976 DUP4
0x977 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98c AND
0x98d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a2 AND
0x9a3 DUP2
0x9a4 MSTORE
0x9a5 PUSH1 0x20
0x9a7 ADD
0x9a8 DUP3
0x9a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9be AND
0x9bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d4 AND
0x9d5 DUP2
0x9d6 MSTORE
0x9d7 PUSH1 0x20
0x9d9 ADD
0x9da SWAP3
0x9db POP
0x9dc POP
0x9dd POP
0x9de PUSH1 0x20
0x9e0 PUSH1 0x40
0x9e2 MLOAD
0x9e3 DUP1
0x9e4 DUP4
0x9e5 SUB
0x9e6 DUP2
0x9e7 PUSH1 0x0
0x9e9 DUP8
0x9ea DUP1
0x9eb EXTCODESIZE
0x9ec ISZERO
0x9ed DUP1
0x9ee ISZERO
0x9ef PUSH2 0x9f7
0x9f2 JUMPI
---
0x927: JUMPDEST 
0x92a: V474 = 0xffffffffffffffffffffffffffffffffffffffff
0x93f: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x940: V476 = 0xdd62ed3e
0x945: V477 = ORIGIN
0x946: V478 = ADDRESS
0x947: V479 = 0x40
0x949: V480 = M[0x40]
0x94b: V481 = 0xffffffff
0x950: V482 = AND 0xffffffff 0xdd62ed3e
0x951: V483 = 0x100000000000000000000000000000000000000000000000000000000
0x96f: V484 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xdd62ed3e
0x971: M[V480] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x972: V485 = 0x4
0x974: V486 = ADD 0x4 V480
0x977: V487 = 0xffffffffffffffffffffffffffffffffffffffff
0x98c: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x98d: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a2: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x9a4: M[V486] = V490
0x9a5: V491 = 0x20
0x9a7: V492 = ADD 0x20 V486
0x9a9: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x9be: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x9bf: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d4: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x9d6: M[V492] = V496
0x9d7: V497 = 0x20
0x9d9: V498 = ADD 0x20 V492
0x9de: V499 = 0x20
0x9e0: V500 = 0x40
0x9e2: V501 = M[0x40]
0x9e5: V502 = SUB V498 V501
0x9e7: V503 = 0x0
0x9eb: V504 = EXTCODESIZE V475
0x9ec: V505 = ISZERO V504
0x9ee: V506 = ISZERO V505
0x9ef: V507 = 0x9f7
0x9f2: JUMPI 0x9f7 V506
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S3, V475, 0xdd62ed3e, V498, 0x20, V501, V502, V501, 0x0, V475, V505]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V475, 0xdd62ed3e, V498, 0x20, V501, V502, V501, 0x0, V475, V505]

================================

Block 0x9f3
[0x9f3:0x9f6]
---
Predecessors: [0x927]
Successors: []
---
0x9f3 PUSH1 0x0
0x9f5 DUP1
0x9f6 REVERT
---
0x9f3: V508 = 0x0
0x9f6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V475, 0xdd62ed3e, V498, 0x20, V501, V502, V501, 0x0, V475, V505]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V475, 0xdd62ed3e, V498, 0x20, V501, V502, V501, 0x0, V475, V505]

================================

Block 0x9f7
[0x9f7:0xa01]
---
Predecessors: [0x927]
Successors: [0xa02, 0xa0b]
---
0x9f7 JUMPDEST
0x9f8 POP
0x9f9 GAS
0x9fa CALL
0x9fb ISZERO
0x9fc DUP1
0x9fd ISZERO
0x9fe PUSH2 0xa0b
0xa01 JUMPI
---
0x9f7: JUMPDEST 
0x9f9: V509 = GAS
0x9fa: V510 = CALL V509 V475 0x0 V501 V502 V501 0x20
0x9fb: V511 = ISZERO V510
0x9fd: V512 = ISZERO V511
0x9fe: V513 = 0xa0b
0xa01: JUMPI 0xa0b V512
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V475, 0xdd62ed3e, V498, 0x20, V501, V502, V501, 0x0, V475, V505]
Stack pops: 7
Stack additions: [V511]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V475, 0xdd62ed3e, V498, V511]

================================

Block 0xa02
[0xa02:0xa0a]
---
Predecessors: [0x9f7]
Successors: []
---
0xa02 RETURNDATASIZE
0xa03 PUSH1 0x0
0xa05 DUP1
0xa06 RETURNDATACOPY
0xa07 RETURNDATASIZE
0xa08 PUSH1 0x0
0xa0a REVERT
---
0xa02: V514 = RETURNDATASIZE
0xa03: V515 = 0x0
0xa06: RETURNDATACOPY 0x0 0x0 V514
0xa07: V516 = RETURNDATASIZE
0xa08: V517 = 0x0
0xa0a: REVERT 0x0 V516
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V475, 0xdd62ed3e, V498, V511]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V475, 0xdd62ed3e, V498, V511]

================================

Block 0xa0b
[0xa0b:0xa1c]
---
Predecessors: [0x9f7]
Successors: [0xa1d, 0xa21]
---
0xa0b JUMPDEST
0xa0c POP
0xa0d POP
0xa0e POP
0xa0f POP
0xa10 PUSH1 0x40
0xa12 MLOAD
0xa13 RETURNDATASIZE
0xa14 PUSH1 0x20
0xa16 DUP2
0xa17 LT
0xa18 ISZERO
0xa19 PUSH2 0xa21
0xa1c JUMPI
---
0xa0b: JUMPDEST 
0xa10: V518 = 0x40
0xa12: V519 = M[0x40]
0xa13: V520 = RETURNDATASIZE
0xa14: V521 = 0x20
0xa17: V522 = LT V520 0x20
0xa18: V523 = ISZERO V522
0xa19: V524 = 0xa21
0xa1c: JUMPI 0xa21 V523
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V475, 0xdd62ed3e, V498, V511]
Stack pops: 4
Stack additions: [V519, V520]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V519, V520]

================================

Block 0xa1d
[0xa1d:0xa20]
---
Predecessors: [0xa0b]
Successors: []
---
0xa1d PUSH1 0x0
0xa1f DUP1
0xa20 REVERT
---
0xa1d: V525 = 0x0
0xa20: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V519, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V519, V520]

================================

Block 0xa21
[0xa21:0xa3a]
---
Predecessors: [0xa0b]
Successors: [0xa3b, 0xace]
---
0xa21 JUMPDEST
0xa22 DUP2
0xa23 ADD
0xa24 SWAP1
0xa25 DUP1
0xa26 DUP1
0xa27 MLOAD
0xa28 SWAP1
0xa29 PUSH1 0x20
0xa2b ADD
0xa2c SWAP1
0xa2d SWAP3
0xa2e SWAP2
0xa2f SWAP1
0xa30 POP
0xa31 POP
0xa32 POP
0xa33 LT
0xa34 ISZERO
0xa35 ISZERO
0xa36 ISZERO
0xa37 PUSH2 0xace
0xa3a JUMPI
---
0xa21: JUMPDEST 
0xa23: V526 = ADD V519 V520
0xa27: V527 = M[V519]
0xa29: V528 = 0x20
0xa2b: V529 = ADD 0x20 V519
0xa33: V530 = LT V527 V75
0xa34: V531 = ISZERO V530
0xa35: V532 = ISZERO V531
0xa36: V533 = ISZERO V532
0xa37: V534 = 0xace
0xa3a: JUMPI 0xace V533
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V75, V519, V520]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]

================================

Block 0xa3b
[0xa3b:0xacd]
---
Predecessors: [0xa21]
Successors: []
---
0xa3b PUSH1 0x40
0xa3d MLOAD
0xa3e PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa5f DUP2
0xa60 MSTORE
0xa61 PUSH1 0x4
0xa63 ADD
0xa64 DUP1
0xa65 DUP1
0xa66 PUSH1 0x20
0xa68 ADD
0xa69 DUP3
0xa6a DUP2
0xa6b SUB
0xa6c DUP3
0xa6d MSTORE
0xa6e PUSH1 0x30
0xa70 DUP2
0xa71 MSTORE
0xa72 PUSH1 0x20
0xa74 ADD
0xa75 DUP1
0xa76 PUSH32 0x546f6b656e20616c6c6f77616e63652073686f756c6420626520677265617465
0xa97 DUP2
0xa98 MSTORE
0xa99 PUSH1 0x20
0xa9b ADD
0xa9c PUSH32 0x72207468616e20746b6e416d6f756e7400000000000000000000000000000000
0xabd DUP2
0xabe MSTORE
0xabf POP
0xac0 PUSH1 0x40
0xac2 ADD
0xac3 SWAP2
0xac4 POP
0xac5 POP
0xac6 PUSH1 0x40
0xac8 MLOAD
0xac9 DUP1
0xaca SWAP2
0xacb SUB
0xacc SWAP1
0xacd REVERT
---
0xa3b: V535 = 0x40
0xa3d: V536 = M[0x40]
0xa3e: V537 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa60: M[V536] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa61: V538 = 0x4
0xa63: V539 = ADD 0x4 V536
0xa66: V540 = 0x20
0xa68: V541 = ADD 0x20 V539
0xa6b: V542 = SUB V541 V539
0xa6d: M[V539] = V542
0xa6e: V543 = 0x30
0xa71: M[V541] = 0x30
0xa72: V544 = 0x20
0xa74: V545 = ADD 0x20 V541
0xa76: V546 = 0x546f6b656e20616c6c6f77616e63652073686f756c6420626520677265617465
0xa98: M[V545] = 0x546f6b656e20616c6c6f77616e63652073686f756c6420626520677265617465
0xa99: V547 = 0x20
0xa9b: V548 = ADD 0x20 V545
0xa9c: V549 = 0x72207468616e20746b6e416d6f756e7400000000000000000000000000000000
0xabe: M[V548] = 0x72207468616e20746b6e416d6f756e7400000000000000000000000000000000
0xac0: V550 = 0x40
0xac2: V551 = ADD 0x40 V545
0xac6: V552 = 0x40
0xac8: V553 = M[0x40]
0xacb: V554 = SUB V551 V553
0xacd: REVERT V553 V554
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]

================================

Block 0xace
[0xace:0xafa]
---
Predecessors: [0xa21]
Successors: [0x125d]
---
0xace JUMPDEST
0xacf PUSH2 0xafb
0xad2 ORIGIN
0xad3 ADDRESS
0xad4 DUP7
0xad5 DUP9
0xad6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaeb AND
0xaec PUSH2 0x125d
0xaef SWAP1
0xaf0 SWAP4
0xaf1 SWAP3
0xaf2 SWAP2
0xaf3 SWAP1
0xaf4 PUSH4 0xffffffff
0xaf9 AND
0xafa JUMP
---
0xace: JUMPDEST 
0xacf: V555 = 0xafb
0xad2: V556 = ORIGIN
0xad3: V557 = ADDRESS
0xad6: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0xaeb: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0xaec: V560 = 0x125d
0xaf4: V561 = 0xffffffff
0xaf9: V562 = AND 0xffffffff 0x125d
0xafa: JUMP 0x125d
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0xafb, V559, V556, V557, S3]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75]

================================

Block 0xafb
[0xafb:0xbf9]
---
Predecessors: [0x137a]
Successors: [0xbfa, 0xbfe]
---
0xafb JUMPDEST
0xafc PUSH1 0x0
0xafe DUP7
0xaff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb14 AND
0xb15 PUSH4 0x5e5144eb
0xb1a DUP8
0xb1b PUSH1 0x1
0xb1d PUSH1 0x0
0xb1f SWAP1
0xb20 SLOAD
0xb21 SWAP1
0xb22 PUSH2 0x100
0xb25 EXP
0xb26 SWAP1
0xb27 DIV
0xb28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3d AND
0xb3e DUP9
0xb3f DUP9
0xb40 PUSH1 0x40
0xb42 MLOAD
0xb43 DUP6
0xb44 PUSH4 0xffffffff
0xb49 AND
0xb4a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb68 MUL
0xb69 DUP2
0xb6a MSTORE
0xb6b PUSH1 0x4
0xb6d ADD
0xb6e DUP1
0xb6f DUP6
0xb70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb85 AND
0xb86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9b AND
0xb9c DUP2
0xb9d MSTORE
0xb9e PUSH1 0x20
0xba0 ADD
0xba1 DUP5
0xba2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb7 AND
0xbb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbcd AND
0xbce DUP2
0xbcf MSTORE
0xbd0 PUSH1 0x20
0xbd2 ADD
0xbd3 DUP4
0xbd4 DUP2
0xbd5 MSTORE
0xbd6 PUSH1 0x20
0xbd8 ADD
0xbd9 DUP3
0xbda DUP2
0xbdb MSTORE
0xbdc PUSH1 0x20
0xbde ADD
0xbdf SWAP5
0xbe0 POP
0xbe1 POP
0xbe2 POP
0xbe3 POP
0xbe4 POP
0xbe5 PUSH1 0x20
0xbe7 PUSH1 0x40
0xbe9 MLOAD
0xbea DUP1
0xbeb DUP4
0xbec SUB
0xbed DUP2
0xbee PUSH1 0x0
0xbf0 DUP8
0xbf1 DUP1
0xbf2 EXTCODESIZE
0xbf3 ISZERO
0xbf4 DUP1
0xbf5 ISZERO
0xbf6 PUSH2 0xbfe
0xbf9 JUMPI
---
0xafb: JUMPDEST 
0xafc: V563 = 0x0
0xaff: V564 = 0xffffffffffffffffffffffffffffffffffffffff
0xb14: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0xb15: V566 = 0x5e5144eb
0xb1b: V567 = 0x1
0xb1d: V568 = 0x0
0xb20: V569 = S[0x1]
0xb22: V570 = 0x100
0xb25: V571 = EXP 0x100 0x0
0xb27: V572 = DIV V569 0x1
0xb28: V573 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3d: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0xb40: V575 = 0x40
0xb42: V576 = M[0x40]
0xb44: V577 = 0xffffffff
0xb49: V578 = AND 0xffffffff 0x5e5144eb
0xb4a: V579 = 0x100000000000000000000000000000000000000000000000000000000
0xb68: V580 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x5e5144eb
0xb6a: M[V576] = 0x5e5144eb00000000000000000000000000000000000000000000000000000000
0xb6b: V581 = 0x4
0xb6d: V582 = ADD 0x4 V576
0xb70: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0xb85: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0xb86: V585 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9b: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V584
0xb9d: M[V582] = V586
0xb9e: V587 = 0x20
0xba0: V588 = ADD 0x20 V582
0xba2: V589 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb7: V590 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0xbb8: V591 = 0xffffffffffffffffffffffffffffffffffffffff
0xbcd: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0xbcf: M[V588] = V592
0xbd0: V593 = 0x20
0xbd2: V594 = ADD 0x20 V588
0xbd5: M[V594] = V75
0xbd6: V595 = 0x20
0xbd8: V596 = ADD 0x20 V594
0xbdb: M[V596] = V78
0xbdc: V597 = 0x20
0xbde: V598 = ADD 0x20 V596
0xbe5: V599 = 0x20
0xbe7: V600 = 0x40
0xbe9: V601 = M[0x40]
0xbec: V602 = SUB V598 V601
0xbee: V603 = 0x0
0xbf2: V604 = EXTCODESIZE V565
0xbf3: V605 = ISZERO V604
0xbf5: V606 = ISZERO V605
0xbf6: V607 = 0xbfe
0xbf9: JUMPI 0xbfe V606
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x0, V565, 0x5e5144eb, V598, 0x20, V601, V602, V601, 0x0, V565, V605]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V565, 0x5e5144eb, V598, 0x20, V601, V602, V601, 0x0, V565, V605]

================================

Block 0xbfa
[0xbfa:0xbfd]
---
Predecessors: [0xafb]
Successors: []
---
0xbfa PUSH1 0x0
0xbfc DUP1
0xbfd REVERT
---
0xbfa: V608 = 0x0
0xbfd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V565, 0x5e5144eb, V598, 0x20, V601, V602, V601, 0x0, V565, V605]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V565, 0x5e5144eb, V598, 0x20, V601, V602, V601, 0x0, V565, V605]

================================

Block 0xbfe
[0xbfe:0xc08]
---
Predecessors: [0xafb]
Successors: [0xc09, 0xc12]
---
0xbfe JUMPDEST
0xbff POP
0xc00 GAS
0xc01 CALL
0xc02 ISZERO
0xc03 DUP1
0xc04 ISZERO
0xc05 PUSH2 0xc12
0xc08 JUMPI
---
0xbfe: JUMPDEST 
0xc00: V609 = GAS
0xc01: V610 = CALL V609 V565 0x0 V601 V602 V601 0x20
0xc02: V611 = ISZERO V610
0xc04: V612 = ISZERO V611
0xc05: V613 = 0xc12
0xc08: JUMPI 0xc12 V612
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V565, 0x5e5144eb, V598, 0x20, V601, V602, V601, 0x0, V565, V605]
Stack pops: 7
Stack additions: [V611]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V565, 0x5e5144eb, V598, V611]

================================

Block 0xc09
[0xc09:0xc11]
---
Predecessors: [0xbfe]
Successors: []
---
0xc09 RETURNDATASIZE
0xc0a PUSH1 0x0
0xc0c DUP1
0xc0d RETURNDATACOPY
0xc0e RETURNDATASIZE
0xc0f PUSH1 0x0
0xc11 REVERT
---
0xc09: V614 = RETURNDATASIZE
0xc0a: V615 = 0x0
0xc0d: RETURNDATACOPY 0x0 0x0 V614
0xc0e: V616 = RETURNDATASIZE
0xc0f: V617 = 0x0
0xc11: REVERT 0x0 V616
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V565, 0x5e5144eb, V598, V611]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V565, 0x5e5144eb, V598, V611]

================================

Block 0xc12
[0xc12:0xc23]
---
Predecessors: [0xbfe]
Successors: [0xc24, 0xc28]
---
0xc12 JUMPDEST
0xc13 POP
0xc14 POP
0xc15 POP
0xc16 POP
0xc17 PUSH1 0x40
0xc19 MLOAD
0xc1a RETURNDATASIZE
0xc1b PUSH1 0x20
0xc1d DUP2
0xc1e LT
0xc1f ISZERO
0xc20 PUSH2 0xc28
0xc23 JUMPI
---
0xc12: JUMPDEST 
0xc17: V618 = 0x40
0xc19: V619 = M[0x40]
0xc1a: V620 = RETURNDATASIZE
0xc1b: V621 = 0x20
0xc1e: V622 = LT V620 0x20
0xc1f: V623 = ISZERO V622
0xc20: V624 = 0xc28
0xc23: JUMPI 0xc28 V623
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V565, 0x5e5144eb, V598, V611]
Stack pops: 4
Stack additions: [V619, V620]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V619, V620]

================================

Block 0xc24
[0xc24:0xc27]
---
Predecessors: [0xc12]
Successors: []
---
0xc24 PUSH1 0x0
0xc26 DUP1
0xc27 REVERT
---
0xc24: V625 = 0x0
0xc27: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V619, V620]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V619, V620]

================================

Block 0xc28
[0xc28:0xc40]
---
Predecessors: [0xc12]
Successors: [0xc41, 0xc45]
---
0xc28 JUMPDEST
0xc29 DUP2
0xc2a ADD
0xc2b SWAP1
0xc2c DUP1
0xc2d DUP1
0xc2e MLOAD
0xc2f SWAP1
0xc30 PUSH1 0x20
0xc32 ADD
0xc33 SWAP1
0xc34 SWAP3
0xc35 SWAP2
0xc36 SWAP1
0xc37 POP
0xc38 POP
0xc39 POP
0xc3a GT
0xc3b ISZERO
0xc3c ISZERO
0xc3d PUSH2 0xc45
0xc40 JUMPI
---
0xc28: JUMPDEST 
0xc2a: V626 = ADD V619 V620
0xc2e: V627 = M[V619]
0xc30: V628 = 0x20
0xc32: V629 = ADD 0x20 V619
0xc3a: V630 = GT V627 0x0
0xc3b: V631 = ISZERO V630
0xc3c: V632 = ISZERO V631
0xc3d: V633 = 0xc45
0xc40: JUMPI 0xc45 V632
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0x0, V619, V620]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]

================================

Block 0xc41
[0xc41:0xc44]
---
Predecessors: [0xc28]
Successors: []
---
0xc41 PUSH1 0x0
0xc43 DUP1
0xc44 REVERT
---
0xc41: V634 = 0x0
0xc44: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]

================================

Block 0xc45
[0xc45:0xcfd]
---
Predecessors: [0xc28]
Successors: [0xcfe, 0xd02]
---
0xc45 JUMPDEST
0xc46 PUSH1 0x1
0xc48 PUSH1 0x0
0xc4a SWAP1
0xc4b SLOAD
0xc4c SWAP1
0xc4d PUSH2 0x100
0xc50 EXP
0xc51 SWAP1
0xc52 DIV
0xc53 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc68 AND
0xc69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7e AND
0xc7f PUSH4 0x70a08231
0xc84 ADDRESS
0xc85 PUSH1 0x40
0xc87 MLOAD
0xc88 DUP3
0xc89 PUSH4 0xffffffff
0xc8e AND
0xc8f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xcad MUL
0xcae DUP2
0xcaf MSTORE
0xcb0 PUSH1 0x4
0xcb2 ADD
0xcb3 DUP1
0xcb4 DUP3
0xcb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcca AND
0xccb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce0 AND
0xce1 DUP2
0xce2 MSTORE
0xce3 PUSH1 0x20
0xce5 ADD
0xce6 SWAP2
0xce7 POP
0xce8 POP
0xce9 PUSH1 0x20
0xceb PUSH1 0x40
0xced MLOAD
0xcee DUP1
0xcef DUP4
0xcf0 SUB
0xcf1 DUP2
0xcf2 PUSH1 0x0
0xcf4 DUP8
0xcf5 DUP1
0xcf6 EXTCODESIZE
0xcf7 ISZERO
0xcf8 DUP1
0xcf9 ISZERO
0xcfa PUSH2 0xd02
0xcfd JUMPI
---
0xc45: JUMPDEST 
0xc46: V635 = 0x1
0xc48: V636 = 0x0
0xc4b: V637 = S[0x1]
0xc4d: V638 = 0x100
0xc50: V639 = EXP 0x100 0x0
0xc52: V640 = DIV V637 0x1
0xc53: V641 = 0xffffffffffffffffffffffffffffffffffffffff
0xc68: V642 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0xc69: V643 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7e: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff V642
0xc7f: V645 = 0x70a08231
0xc84: V646 = ADDRESS
0xc85: V647 = 0x40
0xc87: V648 = M[0x40]
0xc89: V649 = 0xffffffff
0xc8e: V650 = AND 0xffffffff 0x70a08231
0xc8f: V651 = 0x100000000000000000000000000000000000000000000000000000000
0xcad: V652 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xcaf: M[V648] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xcb0: V653 = 0x4
0xcb2: V654 = ADD 0x4 V648
0xcb5: V655 = 0xffffffffffffffffffffffffffffffffffffffff
0xcca: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0xccb: V657 = 0xffffffffffffffffffffffffffffffffffffffff
0xce0: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff V656
0xce2: M[V654] = V658
0xce3: V659 = 0x20
0xce5: V660 = ADD 0x20 V654
0xce9: V661 = 0x20
0xceb: V662 = 0x40
0xced: V663 = M[0x40]
0xcf0: V664 = SUB V660 V663
0xcf2: V665 = 0x0
0xcf6: V666 = EXTCODESIZE V644
0xcf7: V667 = ISZERO V666
0xcf9: V668 = ISZERO V667
0xcfa: V669 = 0xd02
0xcfd: JUMPI 0xd02 V668
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]
Stack pops: 0
Stack additions: [V644, 0x70a08231, V660, 0x20, V663, V664, V663, 0x0, V644, V667]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V644, 0x70a08231, V660, 0x20, V663, V664, V663, 0x0, V644, V667]

================================

Block 0xcfe
[0xcfe:0xd01]
---
Predecessors: [0xc45]
Successors: []
---
0xcfe PUSH1 0x0
0xd00 DUP1
0xd01 REVERT
---
0xcfe: V670 = 0x0
0xd01: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V644, 0x70a08231, V660, 0x20, V663, V664, V663, 0x0, V644, V667]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V644, 0x70a08231, V660, 0x20, V663, V664, V663, 0x0, V644, V667]

================================

Block 0xd02
[0xd02:0xd0c]
---
Predecessors: [0xc45]
Successors: [0xd0d, 0xd16]
---
0xd02 JUMPDEST
0xd03 POP
0xd04 GAS
0xd05 CALL
0xd06 ISZERO
0xd07 DUP1
0xd08 ISZERO
0xd09 PUSH2 0xd16
0xd0c JUMPI
---
0xd02: JUMPDEST 
0xd04: V671 = GAS
0xd05: V672 = CALL V671 V644 0x0 V663 V664 V663 0x20
0xd06: V673 = ISZERO V672
0xd08: V674 = ISZERO V673
0xd09: V675 = 0xd16
0xd0c: JUMPI 0xd16 V674
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V644, 0x70a08231, V660, 0x20, V663, V664, V663, 0x0, V644, V667]
Stack pops: 7
Stack additions: [V673]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V644, 0x70a08231, V660, V673]

================================

Block 0xd0d
[0xd0d:0xd15]
---
Predecessors: [0xd02]
Successors: []
---
0xd0d RETURNDATASIZE
0xd0e PUSH1 0x0
0xd10 DUP1
0xd11 RETURNDATACOPY
0xd12 RETURNDATASIZE
0xd13 PUSH1 0x0
0xd15 REVERT
---
0xd0d: V676 = RETURNDATASIZE
0xd0e: V677 = 0x0
0xd11: RETURNDATACOPY 0x0 0x0 V676
0xd12: V678 = RETURNDATASIZE
0xd13: V679 = 0x0
0xd15: REVERT 0x0 V678
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V644, 0x70a08231, V660, V673]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V644, 0x70a08231, V660, V673]

================================

Block 0xd16
[0xd16:0xd27]
---
Predecessors: [0xd02]
Successors: [0xd28, 0xd2c]
---
0xd16 JUMPDEST
0xd17 POP
0xd18 POP
0xd19 POP
0xd1a POP
0xd1b PUSH1 0x40
0xd1d MLOAD
0xd1e RETURNDATASIZE
0xd1f PUSH1 0x20
0xd21 DUP2
0xd22 LT
0xd23 ISZERO
0xd24 PUSH2 0xd2c
0xd27 JUMPI
---
0xd16: JUMPDEST 
0xd1b: V680 = 0x40
0xd1d: V681 = M[0x40]
0xd1e: V682 = RETURNDATASIZE
0xd1f: V683 = 0x20
0xd22: V684 = LT V682 0x20
0xd23: V685 = ISZERO V684
0xd24: V686 = 0xd2c
0xd27: JUMPI 0xd2c V685
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V644, 0x70a08231, V660, V673]
Stack pops: 4
Stack additions: [V681, V682]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V681, V682]

================================

Block 0xd28
[0xd28:0xd2b]
---
Predecessors: [0xd16]
Successors: []
---
0xd28 PUSH1 0x0
0xd2a DUP1
0xd2b REVERT
---
0xd28: V687 = 0x0
0xd2b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V681, V682]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V681, V682]

================================

Block 0xd2c
[0xd2c:0xd49]
---
Predecessors: [0xd16]
Successors: [0xd4a, 0xddd]
---
0xd2c JUMPDEST
0xd2d DUP2
0xd2e ADD
0xd2f SWAP1
0xd30 DUP1
0xd31 DUP1
0xd32 MLOAD
0xd33 SWAP1
0xd34 PUSH1 0x20
0xd36 ADD
0xd37 SWAP1
0xd38 SWAP3
0xd39 SWAP2
0xd3a SWAP1
0xd3b POP
0xd3c POP
0xd3d POP
0xd3e SWAP2
0xd3f POP
0xd40 PUSH1 0x0
0xd42 DUP3
0xd43 GT
0xd44 ISZERO
0xd45 ISZERO
0xd46 PUSH2 0xddd
0xd49 JUMPI
---
0xd2c: JUMPDEST 
0xd2e: V688 = ADD V681 V682
0xd32: V689 = M[V681]
0xd34: V690 = 0x20
0xd36: V691 = ADD 0x20 V681
0xd40: V692 = 0x0
0xd43: V693 = GT V689 0x0
0xd44: V694 = ISZERO V693
0xd45: V695 = ISZERO V694
0xd46: V696 = 0xddd
0xd49: JUMPI 0xddd V695
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, V681, V682]
Stack pops: 4
Stack additions: [V689, S2]
Exit stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0]

================================

Block 0xd4a
[0xd4a:0xddc]
---
Predecessors: [0xd2c]
Successors: []
---
0xd4a PUSH1 0x40
0xd4c MLOAD
0xd4d PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xd6e DUP2
0xd6f MSTORE
0xd70 PUSH1 0x4
0xd72 ADD
0xd73 DUP1
0xd74 DUP1
0xd75 PUSH1 0x20
0xd77 ADD
0xd78 DUP3
0xd79 DUP2
0xd7a SUB
0xd7b DUP3
0xd7c MSTORE
0xd7d PUSH1 0x24
0xd7f DUP2
0xd80 MSTORE
0xd81 PUSH1 0x20
0xd83 ADD
0xd84 DUP1
0xd85 PUSH32 0x457468546b6e20616d6f756e74206d7573742062652067726561746572207468
0xda6 DUP2
0xda7 MSTORE
0xda8 PUSH1 0x20
0xdaa ADD
0xdab PUSH32 0x616e203000000000000000000000000000000000000000000000000000000000
0xdcc DUP2
0xdcd MSTORE
0xdce POP
0xdcf PUSH1 0x40
0xdd1 ADD
0xdd2 SWAP2
0xdd3 POP
0xdd4 POP
0xdd5 PUSH1 0x40
0xdd7 MLOAD
0xdd8 DUP1
0xdd9 SWAP2
0xdda SUB
0xddb SWAP1
0xddc REVERT
---
0xd4a: V697 = 0x40
0xd4c: V698 = M[0x40]
0xd4d: V699 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xd6f: M[V698] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xd70: V700 = 0x4
0xd72: V701 = ADD 0x4 V698
0xd75: V702 = 0x20
0xd77: V703 = ADD 0x20 V701
0xd7a: V704 = SUB V703 V701
0xd7c: M[V701] = V704
0xd7d: V705 = 0x24
0xd80: M[V703] = 0x24
0xd81: V706 = 0x20
0xd83: V707 = ADD 0x20 V703
0xd85: V708 = 0x457468546b6e20616d6f756e74206d7573742062652067726561746572207468
0xda7: M[V707] = 0x457468546b6e20616d6f756e74206d7573742062652067726561746572207468
0xda8: V709 = 0x20
0xdaa: V710 = ADD 0x20 V707
0xdab: V711 = 0x616e203000000000000000000000000000000000000000000000000000000000
0xdcd: M[V710] = 0x616e203000000000000000000000000000000000000000000000000000000000
0xdcf: V712 = 0x40
0xdd1: V713 = ADD 0x40 V707
0xdd5: V714 = 0x40
0xdd7: V715 = M[0x40]
0xdda: V716 = SUB V713 V715
0xddc: REVERT V715 V716
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0]

================================

Block 0xddd
[0xddd:0xe69]
---
Predecessors: [0xd2c]
Successors: [0xe6a, 0xe6e]
---
0xddd JUMPDEST
0xdde PUSH1 0x1
0xde0 PUSH1 0x0
0xde2 SWAP1
0xde3 SLOAD
0xde4 SWAP1
0xde5 PUSH2 0x100
0xde8 EXP
0xde9 SWAP1
0xdea DIV
0xdeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe00 AND
0xe01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe16 AND
0xe17 PUSH4 0x2e1a7d4d
0xe1c DUP4
0xe1d PUSH1 0x40
0xe1f MLOAD
0xe20 DUP3
0xe21 PUSH4 0xffffffff
0xe26 AND
0xe27 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe45 MUL
0xe46 DUP2
0xe47 MSTORE
0xe48 PUSH1 0x4
0xe4a ADD
0xe4b DUP1
0xe4c DUP3
0xe4d DUP2
0xe4e MSTORE
0xe4f PUSH1 0x20
0xe51 ADD
0xe52 SWAP2
0xe53 POP
0xe54 POP
0xe55 PUSH1 0x0
0xe57 PUSH1 0x40
0xe59 MLOAD
0xe5a DUP1
0xe5b DUP4
0xe5c SUB
0xe5d DUP2
0xe5e PUSH1 0x0
0xe60 DUP8
0xe61 DUP1
0xe62 EXTCODESIZE
0xe63 ISZERO
0xe64 DUP1
0xe65 ISZERO
0xe66 PUSH2 0xe6e
0xe69 JUMPI
---
0xddd: JUMPDEST 
0xdde: V717 = 0x1
0xde0: V718 = 0x0
0xde3: V719 = S[0x1]
0xde5: V720 = 0x100
0xde8: V721 = EXP 0x100 0x0
0xdea: V722 = DIV V719 0x1
0xdeb: V723 = 0xffffffffffffffffffffffffffffffffffffffff
0xe00: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff V722
0xe01: V725 = 0xffffffffffffffffffffffffffffffffffffffff
0xe16: V726 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0xe17: V727 = 0x2e1a7d4d
0xe1d: V728 = 0x40
0xe1f: V729 = M[0x40]
0xe21: V730 = 0xffffffff
0xe26: V731 = AND 0xffffffff 0x2e1a7d4d
0xe27: V732 = 0x100000000000000000000000000000000000000000000000000000000
0xe45: V733 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2e1a7d4d
0xe47: M[V729] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0xe48: V734 = 0x4
0xe4a: V735 = ADD 0x4 V729
0xe4e: M[V735] = V689
0xe4f: V736 = 0x20
0xe51: V737 = ADD 0x20 V735
0xe55: V738 = 0x0
0xe57: V739 = 0x40
0xe59: V740 = M[0x40]
0xe5c: V741 = SUB V737 V740
0xe5e: V742 = 0x0
0xe62: V743 = EXTCODESIZE V726
0xe63: V744 = ISZERO V743
0xe65: V745 = ISZERO V744
0xe66: V746 = 0xe6e
0xe69: JUMPI 0xe6e V745
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V726, 0x2e1a7d4d, V737, 0x0, V740, V741, V740, 0x0, V726, V744]
Exit stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0, V726, 0x2e1a7d4d, V737, 0x0, V740, V741, V740, 0x0, V726, V744]

================================

Block 0xe6a
[0xe6a:0xe6d]
---
Predecessors: [0xddd]
Successors: []
---
0xe6a PUSH1 0x0
0xe6c DUP1
0xe6d REVERT
---
0xe6a: V747 = 0x0
0xe6d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0, V726, 0x2e1a7d4d, V737, 0x0, V740, V741, V740, 0x0, V726, V744]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0, V726, 0x2e1a7d4d, V737, 0x0, V740, V741, V740, 0x0, V726, V744]

================================

Block 0xe6e
[0xe6e:0xe78]
---
Predecessors: [0xddd]
Successors: [0xe79, 0xe82]
---
0xe6e JUMPDEST
0xe6f POP
0xe70 GAS
0xe71 CALL
0xe72 ISZERO
0xe73 DUP1
0xe74 ISZERO
0xe75 PUSH2 0xe82
0xe78 JUMPI
---
0xe6e: JUMPDEST 
0xe70: V748 = GAS
0xe71: V749 = CALL V748 V726 0x0 V740 V741 V740 0x0
0xe72: V750 = ISZERO V749
0xe74: V751 = ISZERO V750
0xe75: V752 = 0xe82
0xe78: JUMPI 0xe82 V751
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0, V726, 0x2e1a7d4d, V737, 0x0, V740, V741, V740, 0x0, V726, V744]
Stack pops: 7
Stack additions: [V750]
Exit stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0, V726, 0x2e1a7d4d, V737, V750]

================================

Block 0xe79
[0xe79:0xe81]
---
Predecessors: [0xe6e]
Successors: []
---
0xe79 RETURNDATASIZE
0xe7a PUSH1 0x0
0xe7c DUP1
0xe7d RETURNDATACOPY
0xe7e RETURNDATASIZE
0xe7f PUSH1 0x0
0xe81 REVERT
---
0xe79: V753 = RETURNDATASIZE
0xe7a: V754 = 0x0
0xe7d: RETURNDATACOPY 0x0 0x0 V753
0xe7e: V755 = RETURNDATASIZE
0xe7f: V756 = 0x0
0xe81: REVERT 0x0 V755
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0, V726, 0x2e1a7d4d, V737, V750]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0, V726, 0x2e1a7d4d, V737, V750]

================================

Block 0xe82
[0xe82:0xeaa]
---
Predecessors: [0xe6e]
Successors: [0xeab, 0xf3e]
---
0xe82 JUMPDEST
0xe83 POP
0xe84 POP
0xe85 POP
0xe86 POP
0xe87 ADDRESS
0xe88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9d AND
0xe9e BALANCE
0xe9f SWAP1
0xea0 POP
0xea1 PUSH1 0x0
0xea3 DUP2
0xea4 GT
0xea5 ISZERO
0xea6 ISZERO
0xea7 PUSH2 0xf3e
0xeaa JUMPI
---
0xe82: JUMPDEST 
0xe87: V757 = ADDRESS
0xe88: V758 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9d: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0xe9e: V760 = BALANCE V759
0xea1: V761 = 0x0
0xea4: V762 = GT V760 0x0
0xea5: V763 = ISZERO V762
0xea6: V764 = ISZERO V763
0xea7: V765 = 0xf3e
0xeaa: JUMPI 0xf3e V764
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, V689, 0x0, V726, 0x2e1a7d4d, V737, V750]
Stack pops: 5
Stack additions: [V760]
Exit stack: [V11, 0x168, V67, V72, V75, V78, V689, V760]

================================

Block 0xeab
[0xeab:0xf3d]
---
Predecessors: [0xe82]
Successors: []
---
0xeab PUSH1 0x40
0xead MLOAD
0xeae PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xecf DUP2
0xed0 MSTORE
0xed1 PUSH1 0x4
0xed3 ADD
0xed4 DUP1
0xed5 DUP1
0xed6 PUSH1 0x20
0xed8 ADD
0xed9 DUP3
0xeda DUP2
0xedb SUB
0xedc DUP3
0xedd MSTORE
0xede PUSH1 0x21
0xee0 DUP2
0xee1 MSTORE
0xee2 PUSH1 0x20
0xee4 ADD
0xee5 DUP1
0xee6 PUSH32 0x45746820616d6f756e74206d7573742062652067726561746572207468616e20
0xf07 DUP2
0xf08 MSTORE
0xf09 PUSH1 0x20
0xf0b ADD
0xf0c PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000
0xf2d DUP2
0xf2e MSTORE
0xf2f POP
0xf30 PUSH1 0x40
0xf32 ADD
0xf33 SWAP2
0xf34 POP
0xf35 POP
0xf36 PUSH1 0x40
0xf38 MLOAD
0xf39 DUP1
0xf3a SWAP2
0xf3b SUB
0xf3c SWAP1
0xf3d REVERT
---
0xeab: V766 = 0x40
0xead: V767 = M[0x40]
0xeae: V768 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xed0: M[V767] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xed1: V769 = 0x4
0xed3: V770 = ADD 0x4 V767
0xed6: V771 = 0x20
0xed8: V772 = ADD 0x20 V770
0xedb: V773 = SUB V772 V770
0xedd: M[V770] = V773
0xede: V774 = 0x21
0xee1: M[V772] = 0x21
0xee2: V775 = 0x20
0xee4: V776 = ADD 0x20 V772
0xee6: V777 = 0x45746820616d6f756e74206d7573742062652067726561746572207468616e20
0xf08: M[V776] = 0x45746820616d6f756e74206d7573742062652067726561746572207468616e20
0xf09: V778 = 0x20
0xf0b: V779 = ADD 0x20 V776
0xf0c: V780 = 0x3000000000000000000000000000000000000000000000000000000000000000
0xf2e: M[V779] = 0x3000000000000000000000000000000000000000000000000000000000000000
0xf30: V781 = 0x40
0xf32: V782 = ADD 0x40 V776
0xf36: V783 = 0x40
0xf38: V784 = M[0x40]
0xf3b: V785 = SUB V782 V784
0xf3d: REVERT V784 V785
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, V689, V760]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, V689, V760]

================================

Block 0xf3e
[0xf3e:0xf70]
---
Predecessors: [0xe82]
Successors: [0xf71, 0xf75]
---
0xf3e JUMPDEST
0xf3f ORIGIN
0xf40 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf55 AND
0xf56 DUP2
0xf57 PUSH1 0x40
0xf59 MLOAD
0xf5a PUSH1 0x0
0xf5c PUSH1 0x40
0xf5e MLOAD
0xf5f DUP1
0xf60 DUP4
0xf61 SUB
0xf62 DUP2
0xf63 DUP6
0xf64 DUP8
0xf65 GAS
0xf66 CALL
0xf67 SWAP3
0xf68 POP
0xf69 POP
0xf6a POP
0xf6b ISZERO
0xf6c ISZERO
0xf6d PUSH2 0xf75
0xf70 JUMPI
---
0xf3e: JUMPDEST 
0xf3f: V786 = ORIGIN
0xf40: V787 = 0xffffffffffffffffffffffffffffffffffffffff
0xf55: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V786
0xf57: V789 = 0x40
0xf59: V790 = M[0x40]
0xf5a: V791 = 0x0
0xf5c: V792 = 0x40
0xf5e: V793 = M[0x40]
0xf61: V794 = SUB V790 V793
0xf65: V795 = GAS
0xf66: V796 = CALL V795 V788 V760 V793 V794 V793 0x0
0xf6b: V797 = ISZERO V796
0xf6c: V798 = ISZERO V797
0xf6d: V799 = 0xf75
0xf70: JUMPI 0xf75 V798
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, V689, V760]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x168, V67, V72, V75, V78, V689, V760]

================================

Block 0xf71
[0xf71:0xf74]
---
Predecessors: [0xf3e]
Successors: []
---
0xf71 PUSH1 0x0
0xf73 DUP1
0xf74 REVERT
---
0xf71: V800 = 0x0
0xf74: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, V689, V760]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, V689, V760]

================================

Block 0xf75
[0xf75:0xf7c]
---
Predecessors: [0xf3e]
Successors: [0x168]
---
0xf75 JUMPDEST
0xf76 POP
0xf77 POP
0xf78 POP
0xf79 POP
0xf7a POP
0xf7b POP
0xf7c JUMP
---
0xf75: JUMPDEST 
0xf7c: JUMP 0x168
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, V689, V760]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0xf7d
[0xf7d:0xf84]
---
Predecessors: [0x176]
Successors: [0x1078]
---
0xf7d JUMPDEST
0xf7e PUSH2 0xf85
0xf81 PUSH2 0x1078
0xf84 JUMP
---
0xf7d: JUMPDEST 
0xf7e: V801 = 0xf85
0xf81: V802 = 0x1078
0xf84: JUMP 0x1078
---
Entry stack: [V11, 0x17f]
Stack pops: 0
Stack additions: [0xf85]
Exit stack: [V11, 0x17f, 0xf85]

================================

Block 0xf85
[0xf85:0xf8b]
---
Predecessors: [0x1078]
Successors: [0xf8c, 0xf90]
---
0xf85 JUMPDEST
0xf86 ISZERO
0xf87 ISZERO
0xf88 PUSH2 0xf90
0xf8b JUMPI
---
0xf85: JUMPDEST 
0xf86: V803 = ISZERO V859
0xf87: V804 = ISZERO V803
0xf88: V805 = 0xf90
0xf8b: JUMPI 0xf90 V804
---
Entry stack: [V11, S2, S1, V859]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0xf8c
[0xf8c:0xf8f]
---
Predecessors: [0xf85]
Successors: []
---
0xf8c PUSH1 0x0
0xf8e DUP1
0xf8f REVERT
---
0xf8c: V806 = 0x0
0xf8f: REVERT 0x0 0x0
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0xf90
[0xf90:0x104e]
---
Predecessors: [0xf85]
Successors: [0x17f]
---
0xf90 JUMPDEST
0xf91 PUSH1 0x0
0xf93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa8 AND
0xfa9 PUSH1 0x0
0xfab DUP1
0xfac SWAP1
0xfad SLOAD
0xfae SWAP1
0xfaf PUSH2 0x100
0xfb2 EXP
0xfb3 SWAP1
0xfb4 DIV
0xfb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfca AND
0xfcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe0 AND
0xfe1 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1002 PUSH1 0x40
0x1004 MLOAD
0x1005 PUSH1 0x40
0x1007 MLOAD
0x1008 DUP1
0x1009 SWAP2
0x100a SUB
0x100b SWAP1
0x100c LOG3
0x100d PUSH1 0x0
0x100f DUP1
0x1010 PUSH1 0x0
0x1012 PUSH2 0x100
0x1015 EXP
0x1016 DUP2
0x1017 SLOAD
0x1018 DUP2
0x1019 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x102e MUL
0x102f NOT
0x1030 AND
0x1031 SWAP1
0x1032 DUP4
0x1033 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1048 AND
0x1049 MUL
0x104a OR
0x104b SWAP1
0x104c SSTORE
0x104d POP
0x104e JUMP
---
0xf90: JUMPDEST 
0xf91: V807 = 0x0
0xf93: V808 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa8: V809 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xfa9: V810 = 0x0
0xfad: V811 = S[0x0]
0xfaf: V812 = 0x100
0xfb2: V813 = EXP 0x100 0x0
0xfb4: V814 = DIV V811 0x1
0xfb5: V815 = 0xffffffffffffffffffffffffffffffffffffffff
0xfca: V816 = AND 0xffffffffffffffffffffffffffffffffffffffff V814
0xfcb: V817 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe0: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0xfe1: V819 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1002: V820 = 0x40
0x1004: V821 = M[0x40]
0x1005: V822 = 0x40
0x1007: V823 = M[0x40]
0x100a: V824 = SUB V821 V823
0x100c: LOG V823 V824 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V818 0x0
0x100d: V825 = 0x0
0x1010: V826 = 0x0
0x1012: V827 = 0x100
0x1015: V828 = EXP 0x100 0x0
0x1017: V829 = S[0x0]
0x1019: V830 = 0xffffffffffffffffffffffffffffffffffffffff
0x102e: V831 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x102f: V832 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1030: V833 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V829
0x1033: V834 = 0xffffffffffffffffffffffffffffffffffffffff
0x1048: V835 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1049: V836 = MUL 0x0 0x1
0x104a: V837 = OR 0x0 V833
0x104c: S[0x0] = V837
0x104e: JUMP S0
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x104f
[0x104f:0x1077]
---
Predecessors: [0x18d]
Successors: [0x196]
---
0x104f JUMPDEST
0x1050 PUSH1 0x0
0x1052 DUP1
0x1053 PUSH1 0x0
0x1055 SWAP1
0x1056 SLOAD
0x1057 SWAP1
0x1058 PUSH2 0x100
0x105b EXP
0x105c SWAP1
0x105d DIV
0x105e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1073 AND
0x1074 SWAP1
0x1075 POP
0x1076 SWAP1
0x1077 JUMP
---
0x104f: JUMPDEST 
0x1050: V838 = 0x0
0x1053: V839 = 0x0
0x1056: V840 = S[0x0]
0x1058: V841 = 0x100
0x105b: V842 = EXP 0x100 0x0
0x105d: V843 = DIV V840 0x1
0x105e: V844 = 0xffffffffffffffffffffffffffffffffffffffff
0x1073: V845 = AND 0xffffffffffffffffffffffffffffffffffffffff V843
0x1077: JUMP 0x196
---
Entry stack: [V11, 0x196]
Stack pops: 1
Stack additions: [V845]
Exit stack: [V11, V845]

================================

Block 0x1078
[0x1078:0x10ce]
---
Predecessors: [0x1e4, 0xf7d, 0x10f9, 0x1150]
Successors: [0x1ed, 0xf85, 0x1101, 0x1158]
---
0x1078 JUMPDEST
0x1079 PUSH1 0x0
0x107b DUP1
0x107c PUSH1 0x0
0x107e SWAP1
0x107f SLOAD
0x1080 SWAP1
0x1081 PUSH2 0x100
0x1084 EXP
0x1085 SWAP1
0x1086 DIV
0x1087 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109c AND
0x109d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b2 AND
0x10b3 CALLER
0x10b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c9 AND
0x10ca EQ
0x10cb SWAP1
0x10cc POP
0x10cd SWAP1
0x10ce JUMP
---
0x1078: JUMPDEST 
0x1079: V846 = 0x0
0x107c: V847 = 0x0
0x107f: V848 = S[0x0]
0x1081: V849 = 0x100
0x1084: V850 = EXP 0x100 0x0
0x1086: V851 = DIV V848 0x1
0x1087: V852 = 0xffffffffffffffffffffffffffffffffffffffff
0x109c: V853 = AND 0xffffffffffffffffffffffffffffffffffffffff V851
0x109d: V854 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b2: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V853
0x10b3: V856 = CALLER
0x10b4: V857 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c9: V858 = AND 0xffffffffffffffffffffffffffffffffffffffff V856
0x10ca: V859 = EQ V858 V855
0x10ce: JUMP {0x1ed, 0xf85, 0x1101, 0x1158}
---
Entry stack: [V11, S2, S1, {0x1ed, 0xf85, 0x1101, 0x1158}]
Stack pops: 1
Stack additions: [V859]
Exit stack: [V11, S2, S1, V859]

================================

Block 0x10cf
[0x10cf:0x10f8]
---
Predecessors: [0x213]
Successors: [0x21c]
---
0x10cf JUMPDEST
0x10d0 PUSH1 0x0
0x10d2 PUSH1 0x1
0x10d4 PUSH1 0x0
0x10d6 SWAP1
0x10d7 SLOAD
0x10d8 SWAP1
0x10d9 PUSH2 0x100
0x10dc EXP
0x10dd SWAP1
0x10de DIV
0x10df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f4 AND
0x10f5 SWAP1
0x10f6 POP
0x10f7 SWAP1
0x10f8 JUMP
---
0x10cf: JUMPDEST 
0x10d0: V860 = 0x0
0x10d2: V861 = 0x1
0x10d4: V862 = 0x0
0x10d7: V863 = S[0x1]
0x10d9: V864 = 0x100
0x10dc: V865 = EXP 0x100 0x0
0x10de: V866 = DIV V863 0x1
0x10df: V867 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f4: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V866
0x10f8: JUMP 0x21c
---
Entry stack: [V11, 0x21c]
Stack pops: 1
Stack additions: [V868]
Exit stack: [V11, V868]

================================

Block 0x10f9
[0x10f9:0x1100]
---
Predecessors: [0x26a]
Successors: [0x1078]
---
0x10f9 JUMPDEST
0x10fa PUSH2 0x1101
0x10fd PUSH2 0x1078
0x1100 JUMP
---
0x10f9: JUMPDEST 
0x10fa: V869 = 0x1101
0x10fd: V870 = 0x1078
0x1100: JUMP 0x1078
---
Entry stack: [V11, 0x29f, V150]
Stack pops: 0
Stack additions: [0x1101]
Exit stack: [V11, 0x29f, V150, 0x1101]

================================

Block 0x1101
[0x1101:0x1107]
---
Predecessors: [0x1078]
Successors: [0x1108, 0x110c]
---
0x1101 JUMPDEST
0x1102 ISZERO
0x1103 ISZERO
0x1104 PUSH2 0x110c
0x1107 JUMPI
---
0x1101: JUMPDEST 
0x1102: V871 = ISZERO V859
0x1103: V872 = ISZERO V871
0x1104: V873 = 0x110c
0x1107: JUMPI 0x110c V872
---
Entry stack: [V11, S2, S1, V859]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0x1108
[0x1108:0x110b]
---
Predecessors: [0x1101]
Successors: []
---
0x1108 PUSH1 0x0
0x110a DUP1
0x110b REVERT
---
0x1108: V874 = 0x0
0x110b: REVERT 0x0 0x0
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x110c
[0x110c:0x114f]
---
Predecessors: [0x1101]
Successors: [0x29f, 0x2e2]
---
0x110c JUMPDEST
0x110d DUP1
0x110e PUSH1 0x1
0x1110 PUSH1 0x0
0x1112 PUSH2 0x100
0x1115 EXP
0x1116 DUP2
0x1117 SLOAD
0x1118 DUP2
0x1119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112e MUL
0x112f NOT
0x1130 AND
0x1131 SWAP1
0x1132 DUP4
0x1133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1148 AND
0x1149 MUL
0x114a OR
0x114b SWAP1
0x114c SSTORE
0x114d POP
0x114e POP
0x114f JUMP
---
0x110c: JUMPDEST 
0x110e: V875 = 0x1
0x1110: V876 = 0x0
0x1112: V877 = 0x100
0x1115: V878 = EXP 0x100 0x0
0x1117: V879 = S[0x1]
0x1119: V880 = 0xffffffffffffffffffffffffffffffffffffffff
0x112e: V881 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x112f: V882 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1130: V883 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V879
0x1133: V884 = 0xffffffffffffffffffffffffffffffffffffffff
0x1148: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1149: V886 = MUL V885 0x1
0x114a: V887 = OR V886 V883
0x114c: S[0x1] = V887
0x114f: JUMP S1
---
Entry stack: [V11, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1150
[0x1150:0x1157]
---
Predecessors: [0x2ad]
Successors: [0x1078]
---
0x1150 JUMPDEST
0x1151 PUSH2 0x1158
0x1154 PUSH2 0x1078
0x1157 JUMP
---
0x1150: JUMPDEST 
0x1151: V888 = 0x1158
0x1154: V889 = 0x1078
0x1157: JUMP 0x1078
---
Entry stack: [V11, 0x2e2, V165]
Stack pops: 0
Stack additions: [0x1158]
Exit stack: [V11, 0x2e2, V165, 0x1158]

================================

Block 0x1158
[0x1158:0x115e]
---
Predecessors: [0x1078]
Successors: [0x115f, 0x1163]
---
0x1158 JUMPDEST
0x1159 ISZERO
0x115a ISZERO
0x115b PUSH2 0x1163
0x115e JUMPI
---
0x1158: JUMPDEST 
0x1159: V890 = ISZERO V859
0x115a: V891 = ISZERO V890
0x115b: V892 = 0x1163
0x115e: JUMPI 0x1163 V891
---
Entry stack: [V11, S2, S1, V859]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0x115f
[0x115f:0x1162]
---
Predecessors: [0x1158]
Successors: []
---
0x115f PUSH1 0x0
0x1161 DUP1
0x1162 REVERT
---
0x115f: V893 = 0x0
0x1162: REVERT 0x0 0x0
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x1163
[0x1163:0x116b]
---
Predecessors: [0x1158]
Successors: [0x1380]
---
0x1163 JUMPDEST
0x1164 PUSH2 0x116c
0x1167 DUP2
0x1168 PUSH2 0x1380
0x116b JUMP
---
0x1163: JUMPDEST 
0x1164: V894 = 0x116c
0x1168: V895 = 0x1380
0x116b: JUMP 0x1380
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x116c, S0]
Exit stack: [V11, S1, S0, 0x116c, S0]

================================

Block 0x116c
[0x116c:0x116e]
---
Predecessors: [0x13bc]
Successors: [0x29f, 0x2e2]
---
0x116c JUMPDEST
0x116d POP
0x116e JUMP
---
0x116c: JUMPDEST 
0x116e: JUMP S1
---
Entry stack: [V11, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x116f
[0x116f:0x120d]
---
Predecessors: [0x773]
Successors: [0x120e, 0x1212]
---
0x116f JUMPDEST
0x1170 DUP3
0x1171 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1186 AND
0x1187 PUSH4 0xa9059cbb
0x118c DUP4
0x118d DUP4
0x118e PUSH1 0x40
0x1190 MLOAD
0x1191 DUP4
0x1192 PUSH4 0xffffffff
0x1197 AND
0x1198 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11b6 MUL
0x11b7 DUP2
0x11b8 MSTORE
0x11b9 PUSH1 0x4
0x11bb ADD
0x11bc DUP1
0x11bd DUP4
0x11be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d3 AND
0x11d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e9 AND
0x11ea DUP2
0x11eb MSTORE
0x11ec PUSH1 0x20
0x11ee ADD
0x11ef DUP3
0x11f0 DUP2
0x11f1 MSTORE
0x11f2 PUSH1 0x20
0x11f4 ADD
0x11f5 SWAP3
0x11f6 POP
0x11f7 POP
0x11f8 POP
0x11f9 PUSH1 0x20
0x11fb PUSH1 0x40
0x11fd MLOAD
0x11fe DUP1
0x11ff DUP4
0x1200 SUB
0x1201 DUP2
0x1202 PUSH1 0x0
0x1204 DUP8
0x1205 DUP1
0x1206 EXTCODESIZE
0x1207 ISZERO
0x1208 DUP1
0x1209 ISZERO
0x120a PUSH2 0x1212
0x120d JUMPI
---
0x116f: JUMPDEST 
0x1171: V896 = 0xffffffffffffffffffffffffffffffffffffffff
0x1186: V897 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x1187: V898 = 0xa9059cbb
0x118e: V899 = 0x40
0x1190: V900 = M[0x40]
0x1192: V901 = 0xffffffff
0x1197: V902 = AND 0xffffffff 0xa9059cbb
0x1198: V903 = 0x100000000000000000000000000000000000000000000000000000000
0x11b6: V904 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x11b8: M[V900] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x11b9: V905 = 0x4
0x11bb: V906 = ADD 0x4 V900
0x11be: V907 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d3: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x11d4: V909 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e9: V910 = AND 0xffffffffffffffffffffffffffffffffffffffff V908
0x11eb: M[V906] = V910
0x11ec: V911 = 0x20
0x11ee: V912 = ADD 0x20 V906
0x11f1: M[V912] = V401
0x11f2: V913 = 0x20
0x11f4: V914 = ADD 0x20 V912
0x11f9: V915 = 0x20
0x11fb: V916 = 0x40
0x11fd: V917 = M[0x40]
0x1200: V918 = SUB V914 V917
0x1202: V919 = 0x0
0x1206: V920 = EXTCODESIZE V897
0x1207: V921 = ISZERO V920
0x1209: V922 = ISZERO V921
0x120a: V923 = 0x1212
0x120d: JUMPI 0x1212 V922
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401]
Stack pops: 3
Stack additions: [S2, S1, S0, V897, 0xa9059cbb, V914, 0x20, V917, V918, V917, 0x0, V897, V921]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V897, 0xa9059cbb, V914, 0x20, V917, V918, V917, 0x0, V897, V921]

================================

Block 0x120e
[0x120e:0x1211]
---
Predecessors: [0x116f]
Successors: []
---
0x120e PUSH1 0x0
0x1210 DUP1
0x1211 REVERT
---
0x120e: V924 = 0x0
0x1211: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V897, 0xa9059cbb, V914, 0x20, V917, V918, V917, 0x0, V897, V921]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V897, 0xa9059cbb, V914, 0x20, V917, V918, V917, 0x0, V897, V921]

================================

Block 0x1212
[0x1212:0x121c]
---
Predecessors: [0x116f]
Successors: [0x121d, 0x1226]
---
0x1212 JUMPDEST
0x1213 POP
0x1214 GAS
0x1215 CALL
0x1216 ISZERO
0x1217 DUP1
0x1218 ISZERO
0x1219 PUSH2 0x1226
0x121c JUMPI
---
0x1212: JUMPDEST 
0x1214: V925 = GAS
0x1215: V926 = CALL V925 V897 0x0 V917 V918 V917 0x20
0x1216: V927 = ISZERO V926
0x1218: V928 = ISZERO V927
0x1219: V929 = 0x1226
0x121c: JUMPI 0x1226 V928
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V897, 0xa9059cbb, V914, 0x20, V917, V918, V917, 0x0, V897, V921]
Stack pops: 7
Stack additions: [V927]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V897, 0xa9059cbb, V914, V927]

================================

Block 0x121d
[0x121d:0x1225]
---
Predecessors: [0x1212]
Successors: []
---
0x121d RETURNDATASIZE
0x121e PUSH1 0x0
0x1220 DUP1
0x1221 RETURNDATACOPY
0x1222 RETURNDATASIZE
0x1223 PUSH1 0x0
0x1225 REVERT
---
0x121d: V930 = RETURNDATASIZE
0x121e: V931 = 0x0
0x1221: RETURNDATACOPY 0x0 0x0 V930
0x1222: V932 = RETURNDATASIZE
0x1223: V933 = 0x0
0x1225: REVERT 0x0 V932
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V897, 0xa9059cbb, V914, V927]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V897, 0xa9059cbb, V914, V927]

================================

Block 0x1226
[0x1226:0x1237]
---
Predecessors: [0x1212]
Successors: [0x1238, 0x123c]
---
0x1226 JUMPDEST
0x1227 POP
0x1228 POP
0x1229 POP
0x122a POP
0x122b PUSH1 0x40
0x122d MLOAD
0x122e RETURNDATASIZE
0x122f PUSH1 0x20
0x1231 DUP2
0x1232 LT
0x1233 ISZERO
0x1234 PUSH2 0x123c
0x1237 JUMPI
---
0x1226: JUMPDEST 
0x122b: V934 = 0x40
0x122d: V935 = M[0x40]
0x122e: V936 = RETURNDATASIZE
0x122f: V937 = 0x20
0x1232: V938 = LT V936 0x20
0x1233: V939 = ISZERO V938
0x1234: V940 = 0x123c
0x1237: JUMPI 0x123c V939
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V897, 0xa9059cbb, V914, V927]
Stack pops: 4
Stack additions: [V935, V936]
Exit stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V935, V936]

================================

Block 0x1238
[0x1238:0x123b]
---
Predecessors: [0x1226]
Successors: []
---
0x1238 PUSH1 0x0
0x123a DUP1
0x123b REVERT
---
0x1238: V941 = 0x0
0x123b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V935, V936]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V935, V936]

================================

Block 0x123c
[0x123c:0x1253]
---
Predecessors: [0x1226]
Successors: [0x1254, 0x1258]
---
0x123c JUMPDEST
0x123d DUP2
0x123e ADD
0x123f SWAP1
0x1240 DUP1
0x1241 DUP1
0x1242 MLOAD
0x1243 SWAP1
0x1244 PUSH1 0x20
0x1246 ADD
0x1247 SWAP1
0x1248 SWAP3
0x1249 SWAP2
0x124a SWAP1
0x124b POP
0x124c POP
0x124d POP
0x124e ISZERO
0x124f ISZERO
0x1250 PUSH2 0x1258
0x1253 JUMPI
---
0x123c: JUMPDEST 
0x123e: V942 = ADD V935 V936
0x1242: V943 = M[V935]
0x1244: V944 = 0x20
0x1246: V945 = ADD 0x20 V935
0x124e: V946 = ISZERO V943
0x124f: V947 = ISZERO V946
0x1250: V948 = 0x1258
0x1253: JUMPI 0x1258 V947
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401, V935, V936]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401]

================================

Block 0x1254
[0x1254:0x1257]
---
Predecessors: [0x123c]
Successors: []
---
0x1254 PUSH1 0x0
0x1256 DUP1
0x1257 REVERT
---
0x1254: V949 = 0x0
0x1257: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401]

================================

Block 0x1258
[0x1258:0x125c]
---
Predecessors: [0x123c]
Successors: [0x7b1]
---
0x1258 JUMPDEST
0x1259 POP
0x125a POP
0x125b POP
0x125c JUMP
---
0x1258: JUMPDEST 
0x125c: JUMP 0x7b1
---
Entry stack: [V11, 0xf1, V44, V49, V52, V235, V401, 0x7b1, V407, V405, V401]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xf1, V44, V49, V52, V235, V401]

================================

Block 0x125d
[0x125d:0x132f]
---
Predecessors: [0xace]
Successors: [0x1330, 0x1334]
---
0x125d JUMPDEST
0x125e DUP4
0x125f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1274 AND
0x1275 PUSH4 0x23b872dd
0x127a DUP5
0x127b DUP5
0x127c DUP5
0x127d PUSH1 0x40
0x127f MLOAD
0x1280 DUP5
0x1281 PUSH4 0xffffffff
0x1286 AND
0x1287 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12a5 MUL
0x12a6 DUP2
0x12a7 MSTORE
0x12a8 PUSH1 0x4
0x12aa ADD
0x12ab DUP1
0x12ac DUP5
0x12ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c2 AND
0x12c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12d8 AND
0x12d9 DUP2
0x12da MSTORE
0x12db PUSH1 0x20
0x12dd ADD
0x12de DUP4
0x12df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f4 AND
0x12f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x130a AND
0x130b DUP2
0x130c MSTORE
0x130d PUSH1 0x20
0x130f ADD
0x1310 DUP3
0x1311 DUP2
0x1312 MSTORE
0x1313 PUSH1 0x20
0x1315 ADD
0x1316 SWAP4
0x1317 POP
0x1318 POP
0x1319 POP
0x131a POP
0x131b PUSH1 0x20
0x131d PUSH1 0x40
0x131f MLOAD
0x1320 DUP1
0x1321 DUP4
0x1322 SUB
0x1323 DUP2
0x1324 PUSH1 0x0
0x1326 DUP8
0x1327 DUP1
0x1328 EXTCODESIZE
0x1329 ISZERO
0x132a DUP1
0x132b ISZERO
0x132c PUSH2 0x1334
0x132f JUMPI
---
0x125d: JUMPDEST 
0x125f: V950 = 0xffffffffffffffffffffffffffffffffffffffff
0x1274: V951 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x1275: V952 = 0x23b872dd
0x127d: V953 = 0x40
0x127f: V954 = M[0x40]
0x1281: V955 = 0xffffffff
0x1286: V956 = AND 0xffffffff 0x23b872dd
0x1287: V957 = 0x100000000000000000000000000000000000000000000000000000000
0x12a5: V958 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x12a7: M[V954] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x12a8: V959 = 0x4
0x12aa: V960 = ADD 0x4 V954
0x12ad: V961 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c2: V962 = AND 0xffffffffffffffffffffffffffffffffffffffff V556
0x12c3: V963 = 0xffffffffffffffffffffffffffffffffffffffff
0x12d8: V964 = AND 0xffffffffffffffffffffffffffffffffffffffff V962
0x12da: M[V960] = V964
0x12db: V965 = 0x20
0x12dd: V966 = ADD 0x20 V960
0x12df: V967 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f4: V968 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x12f5: V969 = 0xffffffffffffffffffffffffffffffffffffffff
0x130a: V970 = AND 0xffffffffffffffffffffffffffffffffffffffff V968
0x130c: M[V966] = V970
0x130d: V971 = 0x20
0x130f: V972 = ADD 0x20 V966
0x1312: M[V972] = V75
0x1313: V973 = 0x20
0x1315: V974 = ADD 0x20 V972
0x131b: V975 = 0x20
0x131d: V976 = 0x40
0x131f: V977 = M[0x40]
0x1322: V978 = SUB V974 V977
0x1324: V979 = 0x0
0x1328: V980 = EXTCODESIZE V951
0x1329: V981 = ISZERO V980
0x132b: V982 = ISZERO V981
0x132c: V983 = 0x1334
0x132f: JUMPI 0x1334 V982
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V951, 0x23b872dd, V974, 0x20, V977, V978, V977, 0x0, V951, V981]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V951, 0x23b872dd, V974, 0x20, V977, V978, V977, 0x0, V951, V981]

================================

Block 0x1330
[0x1330:0x1333]
---
Predecessors: [0x125d]
Successors: []
---
0x1330 PUSH1 0x0
0x1332 DUP1
0x1333 REVERT
---
0x1330: V984 = 0x0
0x1333: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V951, 0x23b872dd, V974, 0x20, V977, V978, V977, 0x0, V951, V981]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V951, 0x23b872dd, V974, 0x20, V977, V978, V977, 0x0, V951, V981]

================================

Block 0x1334
[0x1334:0x133e]
---
Predecessors: [0x125d]
Successors: [0x133f, 0x1348]
---
0x1334 JUMPDEST
0x1335 POP
0x1336 GAS
0x1337 CALL
0x1338 ISZERO
0x1339 DUP1
0x133a ISZERO
0x133b PUSH2 0x1348
0x133e JUMPI
---
0x1334: JUMPDEST 
0x1336: V985 = GAS
0x1337: V986 = CALL V985 V951 0x0 V977 V978 V977 0x20
0x1338: V987 = ISZERO V986
0x133a: V988 = ISZERO V987
0x133b: V989 = 0x1348
0x133e: JUMPI 0x1348 V988
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V951, 0x23b872dd, V974, 0x20, V977, V978, V977, 0x0, V951, V981]
Stack pops: 7
Stack additions: [V987]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V951, 0x23b872dd, V974, V987]

================================

Block 0x133f
[0x133f:0x1347]
---
Predecessors: [0x1334]
Successors: []
---
0x133f RETURNDATASIZE
0x1340 PUSH1 0x0
0x1342 DUP1
0x1343 RETURNDATACOPY
0x1344 RETURNDATASIZE
0x1345 PUSH1 0x0
0x1347 REVERT
---
0x133f: V990 = RETURNDATASIZE
0x1340: V991 = 0x0
0x1343: RETURNDATACOPY 0x0 0x0 V990
0x1344: V992 = RETURNDATASIZE
0x1345: V993 = 0x0
0x1347: REVERT 0x0 V992
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V951, 0x23b872dd, V974, V987]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V951, 0x23b872dd, V974, V987]

================================

Block 0x1348
[0x1348:0x1359]
---
Predecessors: [0x1334]
Successors: [0x135a, 0x135e]
---
0x1348 JUMPDEST
0x1349 POP
0x134a POP
0x134b POP
0x134c POP
0x134d PUSH1 0x40
0x134f MLOAD
0x1350 RETURNDATASIZE
0x1351 PUSH1 0x20
0x1353 DUP2
0x1354 LT
0x1355 ISZERO
0x1356 PUSH2 0x135e
0x1359 JUMPI
---
0x1348: JUMPDEST 
0x134d: V994 = 0x40
0x134f: V995 = M[0x40]
0x1350: V996 = RETURNDATASIZE
0x1351: V997 = 0x20
0x1354: V998 = LT V996 0x20
0x1355: V999 = ISZERO V998
0x1356: V1000 = 0x135e
0x1359: JUMPI 0x135e V999
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V951, 0x23b872dd, V974, V987]
Stack pops: 4
Stack additions: [V995, V996]
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V995, V996]

================================

Block 0x135a
[0x135a:0x135d]
---
Predecessors: [0x1348]
Successors: []
---
0x135a PUSH1 0x0
0x135c DUP1
0x135d REVERT
---
0x135a: V1001 = 0x0
0x135d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V995, V996]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V995, V996]

================================

Block 0x135e
[0x135e:0x1375]
---
Predecessors: [0x1348]
Successors: [0x1376, 0x137a]
---
0x135e JUMPDEST
0x135f DUP2
0x1360 ADD
0x1361 SWAP1
0x1362 DUP1
0x1363 DUP1
0x1364 MLOAD
0x1365 SWAP1
0x1366 PUSH1 0x20
0x1368 ADD
0x1369 SWAP1
0x136a SWAP3
0x136b SWAP2
0x136c SWAP1
0x136d POP
0x136e POP
0x136f POP
0x1370 ISZERO
0x1371 ISZERO
0x1372 PUSH2 0x137a
0x1375 JUMPI
---
0x135e: JUMPDEST 
0x1360: V1002 = ADD V995 V996
0x1364: V1003 = M[V995]
0x1366: V1004 = 0x20
0x1368: V1005 = ADD 0x20 V995
0x1370: V1006 = ISZERO V1003
0x1371: V1007 = ISZERO V1006
0x1372: V1008 = 0x137a
0x1375: JUMPI 0x137a V1007
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75, V995, V996]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75]

================================

Block 0x1376
[0x1376:0x1379]
---
Predecessors: [0x135e]
Successors: []
---
0x1376 PUSH1 0x0
0x1378 DUP1
0x1379 REVERT
---
0x1376: V1009 = 0x0
0x1379: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75]

================================

Block 0x137a
[0x137a:0x137f]
---
Predecessors: [0x135e]
Successors: [0xafb]
---
0x137a JUMPDEST
0x137b POP
0x137c POP
0x137d POP
0x137e POP
0x137f JUMP
---
0x137a: JUMPDEST 
0x137f: JUMP 0xafb
---
Entry stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0, 0xafb, V559, V556, V557, V75]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x168, V67, V72, V75, V78, 0x0, 0x0]

================================

Block 0x1380
[0x1380:0x13b7]
---
Predecessors: [0x1163]
Successors: [0x13b8, 0x13bc]
---
0x1380 JUMPDEST
0x1381 PUSH1 0x0
0x1383 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1398 AND
0x1399 DUP2
0x139a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13af AND
0x13b0 EQ
0x13b1 ISZERO
0x13b2 ISZERO
0x13b3 ISZERO
0x13b4 PUSH2 0x13bc
0x13b7 JUMPI
---
0x1380: JUMPDEST 
0x1381: V1010 = 0x0
0x1383: V1011 = 0xffffffffffffffffffffffffffffffffffffffff
0x1398: V1012 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x139a: V1013 = 0xffffffffffffffffffffffffffffffffffffffff
0x13af: V1014 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x13b0: V1015 = EQ V1014 0x0
0x13b1: V1016 = ISZERO V1015
0x13b2: V1017 = ISZERO V1016
0x13b3: V1018 = ISZERO V1017
0x13b4: V1019 = 0x13bc
0x13b7: JUMPI 0x13bc V1018
---
Entry stack: [V11, S3, S2, 0x116c, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S3, S2, 0x116c, S0]

================================

Block 0x13b8
[0x13b8:0x13bb]
---
Predecessors: [0x1380]
Successors: []
---
0x13b8 PUSH1 0x0
0x13ba DUP1
0x13bb REVERT
---
0x13b8: V1020 = 0x0
0x13bb: REVERT 0x0 0x0
---
Entry stack: [V11, S3, S2, 0x116c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S3, S2, 0x116c, S0]

================================

Block 0x13bc
[0x13bc:0x1479]
---
Predecessors: [0x1380]
Successors: [0x116c]
---
0x13bc JUMPDEST
0x13bd DUP1
0x13be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13d3 AND
0x13d4 PUSH1 0x0
0x13d6 DUP1
0x13d7 SWAP1
0x13d8 SLOAD
0x13d9 SWAP1
0x13da PUSH2 0x100
0x13dd EXP
0x13de SWAP1
0x13df DIV
0x13e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13f5 AND
0x13f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x140b AND
0x140c PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x142d PUSH1 0x40
0x142f MLOAD
0x1430 PUSH1 0x40
0x1432 MLOAD
0x1433 DUP1
0x1434 SWAP2
0x1435 SUB
0x1436 SWAP1
0x1437 LOG3
0x1438 DUP1
0x1439 PUSH1 0x0
0x143b DUP1
0x143c PUSH2 0x100
0x143f EXP
0x1440 DUP2
0x1441 SLOAD
0x1442 DUP2
0x1443 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1458 MUL
0x1459 NOT
0x145a AND
0x145b SWAP1
0x145c DUP4
0x145d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1472 AND
0x1473 MUL
0x1474 OR
0x1475 SWAP1
0x1476 SSTORE
0x1477 POP
0x1478 POP
0x1479 JUMP
---
0x13bc: JUMPDEST 
0x13be: V1021 = 0xffffffffffffffffffffffffffffffffffffffff
0x13d3: V1022 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x13d4: V1023 = 0x0
0x13d8: V1024 = S[0x0]
0x13da: V1025 = 0x100
0x13dd: V1026 = EXP 0x100 0x0
0x13df: V1027 = DIV V1024 0x1
0x13e0: V1028 = 0xffffffffffffffffffffffffffffffffffffffff
0x13f5: V1029 = AND 0xffffffffffffffffffffffffffffffffffffffff V1027
0x13f6: V1030 = 0xffffffffffffffffffffffffffffffffffffffff
0x140b: V1031 = AND 0xffffffffffffffffffffffffffffffffffffffff V1029
0x140c: V1032 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x142d: V1033 = 0x40
0x142f: V1034 = M[0x40]
0x1430: V1035 = 0x40
0x1432: V1036 = M[0x40]
0x1435: V1037 = SUB V1034 V1036
0x1437: LOG V1036 V1037 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1031 V1022
0x1439: V1038 = 0x0
0x143c: V1039 = 0x100
0x143f: V1040 = EXP 0x100 0x0
0x1441: V1041 = S[0x0]
0x1443: V1042 = 0xffffffffffffffffffffffffffffffffffffffff
0x1458: V1043 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1459: V1044 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x145a: V1045 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1041
0x145d: V1046 = 0xffffffffffffffffffffffffffffffffffffffff
0x1472: V1047 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1473: V1048 = MUL V1047 0x1
0x1474: V1049 = OR V1048 V1045
0x1476: S[0x0] = V1049
0x1479: JUMP 0x116c
---
Entry stack: [V11, S3, S2, 0x116c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S3, S2]

================================

Block 0x147a
[0x147a:0x14a5]
---
Predecessors: []
Successors: []
---
0x147a STOP
0x147b LOG1
0x147c PUSH6 0x627a7a723058
0x1483 SHA3
0x1484 DUP8
0x1485 MISSING 0xb1
0x1486 MISSING 0x26
0x1487 PUSH26 0x2af3740afad111bdb5766aff6b4343923cb86b75f017560ac24c
0x14a2 MISSING 0xd8
0x14a3 MISSING 0xd9
0x14a4 STOP
0x14a5 MISSING 0x29
---
0x147a: STOP 
0x147b: LOG S0 S1 S2
0x147c: V1050 = 0x627a7a723058
0x1483: V1051 = SHA3 0x627a7a723058 S3
0x1485: MISSING 0xb1
0x1486: MISSING 0x26
0x1487: V1052 = 0x2af3740afad111bdb5766aff6b4343923cb86b75f017560ac24c
0x14a2: MISSING 0xd8
0x14a3: MISSING 0xd9
0x14a4: STOP 
0x14a5: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S10, V1051, S4, S5, S6, S7, S8, S9, S10, 0x2af3740afad111bdb5766aff6b4343923cb86b75f017560ac24c]
Exit stack: []

================================

Function 0:
Public function signature: 0x4749f79d
Entry block: 0x93
Exit block: 0xf1
Body: 0x93, 0xf1, 0x2e4, 0x341, 0x3ae, 0x3e6, 0x453, 0x478, 0x50b, 0x560, 0x564, 0x663, 0x667, 0x672, 0x67b, 0x68d, 0x691, 0x6aa, 0x6ae, 0x745, 0x749, 0x754, 0x75d, 0x76f, 0x773, 0x7b1, 0x116f, 0x120e, 0x1212, 0x121d, 0x1226, 0x1238, 0x123c, 0x1254, 0x1258

Function 1:
Public function signature: 0x66f9fe8f
Entry block: 0xf3
Exit block: 0x168
Body: 0xf3, 0xfb, 0xff, 0x168, 0x7b8, 0x815, 0x882, 0x8ba, 0x927, 0x9f3, 0x9f7, 0xa02, 0xa0b, 0xa1d, 0xa21, 0xa3b, 0xace, 0xafb, 0xbfa, 0xbfe, 0xc09, 0xc12, 0xc24, 0xc28, 0xc41, 0xc45, 0xcfe, 0xd02, 0xd0d, 0xd16, 0xd28, 0xd2c, 0xd4a, 0xddd, 0xe6a, 0xe6e, 0xe79, 0xe82, 0xeab, 0xf3e, 0xf71, 0xf75, 0x125d, 0x1330, 0x1334, 0x133f, 0x1348, 0x135a, 0x135e, 0x1376, 0x137a

Function 2:
Public function signature: 0x715018a6
Entry block: 0x16a
Exit block: 0x17f
Body: 0x16a, 0x172, 0x176, 0x17f, 0xf7d, 0xf85, 0xf8c, 0xf90

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x181
Exit block: 0x196
Body: 0x181, 0x189, 0x18d, 0x196, 0x104f

Function 4:
Public function signature: 0x8f32d59b
Entry block: 0x1d8
Exit block: 0x1e0
Body: 0x1d8, 0x1e0, 0x1e4, 0x1ed

Function 5:
Public function signature: 0xb8066bcb
Entry block: 0x207
Exit block: 0x21c
Body: 0x207, 0x20f, 0x213, 0x21c, 0x10cf

Function 6:
Public function signature: 0xdc52c49a
Entry block: 0x25e
Exit block: 0x2e2
Body: 0x25e, 0x266, 0x26a, 0x29f, 0x2e2, 0x10f9, 0x1101, 0x1108, 0x110c

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x2a1
Exit block: 0x29f
Body: 0x29f, 0x2a1, 0x2a9, 0x2ad, 0x2e2, 0x1150, 0x1158, 0x115f, 0x1163, 0x116c, 0x1380, 0x13b8, 0x13bc

Function 8:
Public fallback function
Entry block: 0x8e
Exit block: 0x8e
Body: 0x8e

