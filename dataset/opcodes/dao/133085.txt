Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x49]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x49
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x49
0xa: JUMPI 0x49 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x10d]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6b9f96ea
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x10d
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6b9f96ea
0x39: V12 = EQ V10 0x6b9f96ea
0x3a: V13 = 0x10d
0x3d: JUMPI 0x10d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x11f]
---
0x3e DUP1
0x3f PUSH4 0xca325469
0x44 EQ
0x45 PUSH2 0x11f
0x48 JUMPI
---
0x3f: V14 = 0xca325469
0x44: V15 = EQ 0xca325469 V10
0x45: V16 = 0x11f
0x48: JUMPI 0x11f V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x4c]
---
Predecessors: [0x0, 0x3e]
Successors: [0x4d]
---
0x49 JUMPDEST
0x4a PUSH2 0x10b
---
0x49: JUMPDEST 
0x4a: V17 = 0x10b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10b]
Exit stack: [V10, 0x10b]

================================

Block 0x4d
[0x4d:0x8f]
---
Predecessors: [0x49]
Successors: [0x90, 0x95]
---
0x4d JUMPDEST
0x4e PUSH1 0x0
0x50 DUP1
0x51 SLOAD
0x52 PUSH1 0x40
0x54 MLOAD
0x55 PUSH1 0x1
0x57 PUSH1 0xa0
0x59 PUSH1 0x2
0x5b EXP
0x5c SUB
0x5d SWAP1
0x5e SWAP2
0x5f AND
0x60 SWAP2
0x61 CALLVALUE
0x62 SWAP2
0x63 CALLDATASIZE
0x64 SWAP1
0x65 DUP1
0x66 DUP4
0x67 DUP4
0x68 DUP1
0x69 DUP3
0x6a DUP5
0x6b CALLDATACOPY
0x6c DUP3
0x6d ADD
0x6e SWAP2
0x6f POP
0x70 POP
0x71 SWAP3
0x72 POP
0x73 POP
0x74 POP
0x75 PUSH1 0x0
0x77 PUSH1 0x40
0x79 MLOAD
0x7a DUP1
0x7b DUP4
0x7c SUB
0x7d DUP2
0x7e DUP6
0x7f DUP8
0x80 PUSH2 0x8796
0x83 GAS
0x84 SUB
0x85 CALL
0x86 SWAP3
0x87 POP
0x88 POP
0x89 POP
0x8a ISZERO
0x8b ISZERO
0x8c PUSH2 0x95
0x8f JUMPI
---
0x4d: JUMPDEST 
0x4e: V18 = 0x0
0x51: V19 = S[0x0]
0x52: V20 = 0x40
0x54: V21 = M[0x40]
0x55: V22 = 0x1
0x57: V23 = 0xa0
0x59: V24 = 0x2
0x5b: V25 = EXP 0x2 0xa0
0x5c: V26 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f: V27 = AND V19 0xffffffffffffffffffffffffffffffffffffffff
0x61: V28 = CALLVALUE
0x63: V29 = CALLDATASIZE
0x6b: CALLDATACOPY V21 0x0 V29
0x6d: V30 = ADD V21 V29
0x75: V31 = 0x0
0x77: V32 = 0x40
0x79: V33 = M[0x40]
0x7c: V34 = SUB V30 V33
0x80: V35 = 0x8796
0x83: V36 = GAS
0x84: V37 = SUB V36 0x8796
0x85: V38 = CALL V37 V27 V28 V33 V34 V33 0x0
0x8a: V39 = ISZERO V38
0x8b: V40 = ISZERO V39
0x8c: V41 = 0x95
0x8f: JUMPI 0x95 V40
---
Entry stack: [V10, 0x10b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b]

================================

Block 0x90
[0x90:0x94]
---
Predecessors: [0x4d]
Successors: []
---
0x90 PUSH1 0x0
0x92 PUSH1 0x0
0x94 REVERT
---
0x90: V42 = 0x0
0x92: V43 = 0x0
0x94: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b]

================================

Block 0x95
[0x95:0x108]
---
Predecessors: [0x4d]
Successors: [0x109]
---
0x95 JUMPDEST
0x96 PUSH32 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
0xb7 CALLER
0xb8 CALLVALUE
0xb9 PUSH1 0x0
0xbb CALLDATASIZE
0xbc PUSH1 0x40
0xbe MLOAD
0xbf DUP1
0xc0 DUP6
0xc1 PUSH1 0x1
0xc3 PUSH1 0xa0
0xc5 PUSH1 0x2
0xc7 EXP
0xc8 SUB
0xc9 AND
0xca PUSH1 0x1
0xcc PUSH1 0xa0
0xce PUSH1 0x2
0xd0 EXP
0xd1 SUB
0xd2 AND
0xd3 DUP2
0xd4 MSTORE
0xd5 PUSH1 0x20
0xd7 ADD
0xd8 DUP5
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x20
0xdd ADD
0xde DUP1
0xdf PUSH1 0x20
0xe1 ADD
0xe2 DUP3
0xe3 DUP2
0xe4 SUB
0xe5 DUP3
0xe6 MSTORE
0xe7 DUP5
0xe8 DUP5
0xe9 DUP3
0xea DUP2
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP3
0xf1 POP
0xf2 DUP1
0xf3 DUP3
0xf4 DUP5
0xf5 CALLDATACOPY
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 SWAP3
0xfa ADD
0xfb DUP3
0xfc SWAP1
0xfd SUB
0xfe SWAP8
0xff POP
0x100 SWAP1
0x101 SWAP6
0x102 POP
0x103 POP
0x104 POP
0x105 POP
0x106 POP
0x107 POP
0x108 LOG1
---
0x95: JUMPDEST 
0x96: V44 = 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
0xb7: V45 = CALLER
0xb8: V46 = CALLVALUE
0xb9: V47 = 0x0
0xbb: V48 = CALLDATASIZE
0xbc: V49 = 0x40
0xbe: V50 = M[0x40]
0xc1: V51 = 0x1
0xc3: V52 = 0xa0
0xc5: V53 = 0x2
0xc7: V54 = EXP 0x2 0xa0
0xc8: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc9: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xca: V57 = 0x1
0xcc: V58 = 0xa0
0xce: V59 = 0x2
0xd0: V60 = EXP 0x2 0xa0
0xd1: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xd4: M[V50] = V62
0xd5: V63 = 0x20
0xd7: V64 = ADD 0x20 V50
0xda: M[V64] = V46
0xdb: V65 = 0x20
0xdd: V66 = ADD 0x20 V64
0xdf: V67 = 0x20
0xe1: V68 = ADD 0x20 V66
0xe4: V69 = SUB V68 V50
0xe6: M[V66] = V69
0xec: M[V68] = V48
0xed: V70 = 0x20
0xef: V71 = ADD 0x20 V68
0xf5: CALLDATACOPY V71 0x0 V48
0xf6: V72 = 0x40
0xf8: V73 = M[0x40]
0xfa: V74 = ADD V71 V48
0xfd: V75 = SUB V74 V73
0x108: LOG V73 V75 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
---
Entry stack: [V10, 0x10b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b]

================================

Block 0x109
[0x109:0x10a]
---
Predecessors: [0x95, 0x14b]
Successors: [0x10b]
---
0x109 JUMPDEST
0x10a JUMP
---
0x109: JUMPDEST 
0x10a: JUMP 0x10b
---
Entry stack: [V10, 0x10b]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: [0x109]
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10d
[0x10d:0x113]
---
Predecessors: [0xb]
Successors: [0x114, 0x115]
---
0x10d JUMPDEST
0x10e CALLVALUE
0x10f ISZERO
0x110 PUSH2 0x115
0x113 JUMPI
---
0x10d: JUMPDEST 
0x10e: V76 = CALLVALUE
0x10f: V77 = ISZERO V76
0x110: V78 = 0x115
0x113: JUMPI 0x115 V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x114
[0x114:0x114]
---
Predecessors: [0x10d]
Successors: []
---
0x114 INVALID
---
0x114: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x115
[0x115:0x11c]
---
Predecessors: [0x10d]
Successors: [0x14b]
---
0x115 JUMPDEST
0x116 PUSH2 0x10b
0x119 PUSH2 0x14b
0x11c JUMP
---
0x115: JUMPDEST 
0x116: V79 = 0x10b
0x119: V80 = 0x14b
0x11c: JUMP 0x14b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10b]
Exit stack: [V10, 0x10b]

================================

Block 0x11d
[0x11d:0x11e]
---
Predecessors: []
Successors: []
---
0x11d JUMPDEST
0x11e STOP
---
0x11d: JUMPDEST 
0x11e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11f
[0x11f:0x125]
---
Predecessors: [0x3e]
Successors: [0x126, 0x127]
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 ISZERO
0x122 PUSH2 0x127
0x125 JUMPI
---
0x11f: JUMPDEST 
0x120: V81 = CALLVALUE
0x121: V82 = ISZERO V81
0x122: V83 = 0x127
0x125: JUMPI 0x127 V82
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x126
[0x126:0x126]
---
Predecessors: [0x11f]
Successors: []
---
0x126 INVALID
---
0x126: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x127
[0x127:0x12e]
---
Predecessors: [0x11f]
Successors: [0x182]
---
0x127 JUMPDEST
0x128 PUSH2 0x12f
0x12b PUSH2 0x182
0x12e JUMP
---
0x127: JUMPDEST 
0x128: V84 = 0x12f
0x12b: V85 = 0x182
0x12e: JUMP 0x182
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12f]
Exit stack: [V10, 0x12f]

================================

Block 0x12f
[0x12f:0x14a]
---
Predecessors: [0x182]
Successors: []
---
0x12f JUMPDEST
0x130 PUSH1 0x40
0x132 DUP1
0x133 MLOAD
0x134 PUSH1 0x1
0x136 PUSH1 0xa0
0x138 PUSH1 0x2
0x13a EXP
0x13b SUB
0x13c SWAP1
0x13d SWAP3
0x13e AND
0x13f DUP3
0x140 MSTORE
0x141 MLOAD
0x142 SWAP1
0x143 DUP2
0x144 SWAP1
0x145 SUB
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP1
0x14a RETURN
---
0x12f: JUMPDEST 
0x130: V86 = 0x40
0x133: V87 = M[0x40]
0x134: V88 = 0x1
0x136: V89 = 0xa0
0x138: V90 = 0x2
0x13a: V91 = EXP 0x2 0xa0
0x13b: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V93 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x140: M[V87] = V93
0x141: V94 = M[0x40]
0x145: V95 = SUB V87 V94
0x146: V96 = 0x20
0x148: V97 = ADD 0x20 V95
0x14a: RETURN V94 V97
---
Entry stack: [V10, 0x12f, V127]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x12f]

================================

Block 0x14b
[0x14b:0x179]
---
Predecessors: [0x115]
Successors: [0x109, 0x17a]
---
0x14b JUMPDEST
0x14c PUSH1 0x0
0x14e DUP1
0x14f SLOAD
0x150 PUSH1 0x40
0x152 MLOAD
0x153 PUSH1 0x1
0x155 PUSH1 0xa0
0x157 PUSH1 0x2
0x159 EXP
0x15a SUB
0x15b SWAP2
0x15c DUP3
0x15d AND
0x15e SWAP3
0x15f ADDRESS
0x160 SWAP1
0x161 SWAP3
0x162 AND
0x163 BALANCE
0x164 SWAP2
0x165 DUP2
0x166 DUP2
0x167 DUP2
0x168 DUP6
0x169 DUP8
0x16a PUSH2 0x8796
0x16d GAS
0x16e SUB
0x16f CALL
0x170 SWAP3
0x171 POP
0x172 POP
0x173 POP
0x174 ISZERO
0x175 ISZERO
0x176 PUSH2 0x109
0x179 JUMPI
---
0x14b: JUMPDEST 
0x14c: V98 = 0x0
0x14f: V99 = S[0x0]
0x150: V100 = 0x40
0x152: V101 = M[0x40]
0x153: V102 = 0x1
0x155: V103 = 0xa0
0x157: V104 = 0x2
0x159: V105 = EXP 0x2 0xa0
0x15a: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15d: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x15f: V108 = ADDRESS
0x162: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x163: V110 = BALANCE V109
0x16a: V111 = 0x8796
0x16d: V112 = GAS
0x16e: V113 = SUB V112 0x8796
0x16f: V114 = CALL V113 V107 V110 V101 0x0 V101 0x0
0x174: V115 = ISZERO V114
0x175: V116 = ISZERO V115
0x176: V117 = 0x109
0x179: JUMPI 0x109 V116
---
Entry stack: [V10, 0x10b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b]

================================

Block 0x17a
[0x17a:0x17e]
---
Predecessors: [0x14b]
Successors: []
---
0x17a PUSH1 0x0
0x17c PUSH1 0x0
0x17e REVERT
---
0x17a: V118 = 0x0
0x17c: V119 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b]

================================

Block 0x17f
[0x17f:0x17f]
---
Predecessors: []
Successors: [0x180]
---
0x17f JUMPDEST
---
0x17f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x180
[0x180:0x181]
---
Predecessors: [0x17f]
Successors: []
Has unresolved jump.
---
0x180 JUMPDEST
0x181 JUMP
---
0x180: JUMPDEST 
0x181: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x182
[0x182:0x190]
---
Predecessors: [0x127]
Successors: [0x12f]
---
0x182 JUMPDEST
0x183 PUSH1 0x0
0x185 SLOAD
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e AND
0x18f DUP2
0x190 JUMP
---
0x182: JUMPDEST 
0x183: V120 = 0x0
0x185: V121 = S[0x0]
0x186: V122 = 0x1
0x188: V123 = 0xa0
0x18a: V124 = 0x2
0x18c: V125 = EXP 0x2 0xa0
0x18d: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18e: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x190: JUMP 0x12f
---
Entry stack: [V10, 0x12f]
Stack pops: 1
Stack additions: [S0, V127]
Exit stack: [V10, 0x12f, V127]

================================

Block 0x191
[0x191:0x1bc]
---
Predecessors: []
Successors: []
---
0x191 STOP
0x192 LOG1
0x193 PUSH6 0x627a7a723058
0x19a SHA3
0x19b MISSING 0xe3
0x19c MISSING 0xa8
0x19d MISSING 0x2d
0x19e MISSING 0xb5
0x19f MISSING 0xc1
0x1a0 CALL
0x1a1 MISSING 0x2c
0x1a2 PUSH23 0xe90797c6c2d7583248b3192a9f2b055b99238fcbb59281
0x1ba EQ
0x1bb STOP
0x1bc MISSING 0x29
---
0x191: STOP 
0x192: LOG S0 S1 S2
0x193: V128 = 0x627a7a723058
0x19a: V129 = SHA3 0x627a7a723058 S3
0x19b: MISSING 0xe3
0x19c: MISSING 0xa8
0x19d: MISSING 0x2d
0x19e: MISSING 0xb5
0x19f: MISSING 0xc1
0x1a0: V130 = CALL S0 S1 S2 S3 S4 S5 S6
0x1a1: MISSING 0x2c
0x1a2: V131 = 0xe90797c6c2d7583248b3192a9f2b055b99238fcbb59281
0x1ba: V132 = EQ 0xe90797c6c2d7583248b3192a9f2b055b99238fcbb59281 S0
0x1bb: STOP 
0x1bc: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V129, V130, V132]
Exit stack: []

================================

Function 0:
Public function signature: 0x6b9f96ea
Entry block: 0x10d
Exit block: 0x10b
Body: 0x109, 0x10b, 0x10d, 0x114, 0x115, 0x14b, 0x17a

Function 1:
Public function signature: 0xca325469
Entry block: 0x11f
Exit block: 0x12f
Body: 0x11f, 0x126, 0x127, 0x12f, 0x182

Function 2:
Public fallback function
Entry block: 0x49
Exit block: 0x10b
Body: 0x49, 0x4d, 0x90, 0x95, 0x109, 0x10b

