Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11610c25
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11610c25
0x3c: V13 = EQ 0x11610c25 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x5b]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0x5b
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0x5b
0x4b: JUMPI 0x5b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x70]
---
0x51 JUMPDEST
0x52 PUSH2 0x59
0x55 PUSH2 0x70
0x58 JUMP
---
0x51: JUMPDEST 
0x52: V19 = 0x59
0x55: V20 = 0x70
0x58: JUMP 0x70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x59]
Exit stack: [V11, 0x59]

================================

Block 0x59
[0x59:0x5a]
---
Predecessors: [0x1a1]
Successors: []
---
0x59 JUMPDEST
0x5a STOP
---
0x59: JUMPDEST 
0x5a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b
[0x5b:0x61]
---
Predecessors: [0x41]
Successors: [0x62, 0x66]
---
0x5b JUMPDEST
0x5c CALLVALUE
0x5d ISZERO
0x5e PUSH2 0x66
0x61 JUMPI
---
0x5b: JUMPDEST 
0x5c: V21 = CALLVALUE
0x5d: V22 = ISZERO V21
0x5e: V23 = 0x66
0x61: JUMPI 0x66 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x62
[0x62:0x65]
---
Predecessors: [0x5b]
Successors: []
---
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0x6d]
---
Predecessors: [0x5b]
Successors: [0x1a4]
---
0x66 JUMPDEST
0x67 PUSH2 0x6e
0x6a PUSH2 0x1a4
0x6d JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x6e
0x6a: V26 = 0x1a4
0x6d: JUMP 0x1a4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V11, 0x6e]

================================

Block 0x6e
[0x6e:0x6f]
---
Predecessors: [0x257]
Successors: []
---
0x6e JUMPDEST
0x6f STOP
---
0x6e: JUMPDEST 
0x6f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x70
[0x70:0x19c]
---
Predecessors: [0x51]
Successors: [0x19d, 0x1a1]
---
0x70 JUMPDEST
0x71 PUSH1 0x0
0x73 ADDRESS
0x74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89 AND
0x8a BALANCE
0x8b SWAP1
0x8c POP
0x8d PUSH1 0x0
0x8f DUP1
0x90 SWAP1
0x91 SLOAD
0x92 SWAP1
0x93 PUSH2 0x100
0x96 EXP
0x97 SWAP1
0x98 DIV
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 PUSH7 0x2386f26fc10000
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 DUP1
0xd1 DUP1
0xd2 PUSH32 0x62657428626f6f6c290000000000000000000000000000000000000000000000
0xf3 DUP2
0xf4 MSTORE
0xf5 POP
0xf6 PUSH1 0x9
0xf8 ADD
0xf9 SWAP1
0xfa POP
0xfb PUSH1 0x40
0xfd MLOAD
0xfe DUP1
0xff SWAP2
0x100 SUB
0x101 SWAP1
0x102 SHA3
0x103 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x121 SWAP1
0x122 DIV
0x123 SWAP1
0x124 PUSH1 0x0
0x126 PUSH1 0x40
0x128 MLOAD
0x129 DUP4
0x12a PUSH4 0xffffffff
0x12f AND
0x130 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x14e MUL
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x4
0x153 ADD
0x154 DUP1
0x155 DUP3
0x156 ISZERO
0x157 ISZERO
0x158 ISZERO
0x159 ISZERO
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP2
0x160 POP
0x161 POP
0x162 PUSH1 0x0
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 DUP4
0x169 SUB
0x16a DUP2
0x16b DUP6
0x16c DUP9
0x16d GAS
0x16e CALL
0x16f SWAP4
0x170 POP
0x171 POP
0x172 POP
0x173 POP
0x174 POP
0x175 PUSH7 0x11c37937e08000
0x17d DUP2
0x17e ADD
0x17f ADDRESS
0x180 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x195 AND
0x196 BALANCE
0x197 LT
0x198 ISZERO
0x199 PUSH2 0x1a1
0x19c JUMPI
---
0x70: JUMPDEST 
0x71: V27 = 0x0
0x73: V28 = ADDRESS
0x74: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x89: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x8a: V31 = BALANCE V30
0x8d: V32 = 0x0
0x91: V33 = S[0x0]
0x93: V34 = 0x100
0x96: V35 = EXP 0x100 0x0
0x98: V36 = DIV V33 0x1
0x99: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xaf: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xc5: V41 = 0x2386f26fc10000
0xcd: V42 = 0x40
0xcf: V43 = M[0x40]
0xd2: V44 = 0x62657428626f6f6c290000000000000000000000000000000000000000000000
0xf4: M[V43] = 0x62657428626f6f6c290000000000000000000000000000000000000000000000
0xf6: V45 = 0x9
0xf8: V46 = ADD 0x9 V43
0xfb: V47 = 0x40
0xfd: V48 = M[0x40]
0x100: V49 = SUB V46 V48
0x102: V50 = SHA3 V48 V49
0x103: V51 = 0x100000000000000000000000000000000000000000000000000000000
0x122: V52 = DIV V50 0x100000000000000000000000000000000000000000000000000000000
0x124: V53 = 0x0
0x126: V54 = 0x40
0x128: V55 = M[0x40]
0x12a: V56 = 0xffffffff
0x12f: V57 = AND 0xffffffff V52
0x130: V58 = 0x100000000000000000000000000000000000000000000000000000000
0x14e: V59 = MUL 0x100000000000000000000000000000000000000000000000000000000 V57
0x150: M[V55] = V59
0x151: V60 = 0x4
0x153: V61 = ADD 0x4 V55
0x156: V62 = ISZERO 0x0
0x157: V63 = ISZERO 0x1
0x158: V64 = ISZERO 0x0
0x159: V65 = ISZERO 0x1
0x15b: M[V61] = 0x0
0x15c: V66 = 0x20
0x15e: V67 = ADD 0x20 V61
0x162: V68 = 0x0
0x164: V69 = 0x40
0x166: V70 = M[0x40]
0x169: V71 = SUB V67 V70
0x16d: V72 = GAS
0x16e: V73 = CALL V72 V40 0x2386f26fc10000 V70 V71 V70 0x0
0x175: V74 = 0x11c37937e08000
0x17e: V75 = ADD V31 0x11c37937e08000
0x17f: V76 = ADDRESS
0x180: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x195: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x196: V79 = BALANCE V78
0x197: V80 = LT V79 V75
0x198: V81 = ISZERO V80
0x199: V82 = 0x1a1
0x19c: JUMPI 0x1a1 V81
---
Entry stack: [V11, 0x59]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, 0x59, V31]

================================

Block 0x19d
[0x19d:0x1a0]
---
Predecessors: [0x70]
Successors: []
---
0x19d PUSH1 0x0
0x19f DUP1
0x1a0 REVERT
---
0x19d: V83 = 0x0
0x1a0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x59, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x59, V31]

================================

Block 0x1a1
[0x1a1:0x1a3]
---
Predecessors: [0x70]
Successors: [0x59]
---
0x1a1 JUMPDEST
0x1a2 POP
0x1a3 JUMP
---
0x1a1: JUMPDEST 
0x1a3: JUMP 0x59
---
Entry stack: [V11, 0x59, V31]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a4
[0x1a4:0x1fb]
---
Predecessors: [0x66]
Successors: [0x1fc, 0x200]
---
0x1a4 JUMPDEST
0x1a5 PUSH1 0x1
0x1a7 PUSH1 0x0
0x1a9 SWAP1
0x1aa SLOAD
0x1ab SWAP1
0x1ac PUSH2 0x100
0x1af EXP
0x1b0 SWAP1
0x1b1 DIV
0x1b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c7 AND
0x1c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1dd AND
0x1de CALLER
0x1df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f4 AND
0x1f5 EQ
0x1f6 ISZERO
0x1f7 ISZERO
0x1f8 PUSH2 0x200
0x1fb JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V84 = 0x1
0x1a7: V85 = 0x0
0x1aa: V86 = S[0x1]
0x1ac: V87 = 0x100
0x1af: V88 = EXP 0x100 0x0
0x1b1: V89 = DIV V86 0x1
0x1b2: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1c8: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1dd: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x1de: V94 = CALLER
0x1df: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1f5: V97 = EQ V96 V93
0x1f6: V98 = ISZERO V97
0x1f7: V99 = ISZERO V98
0x1f8: V100 = 0x200
0x1fb: JUMPI 0x200 V99
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x1fc
[0x1fc:0x1ff]
---
Predecessors: [0x1a4]
Successors: []
---
0x1fc PUSH1 0x0
0x1fe DUP1
0x1ff REVERT
---
0x1fc: V101 = 0x0
0x1ff: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x200
[0x200:0x252]
---
Predecessors: [0x1a4]
Successors: [0x253, 0x257]
---
0x200 JUMPDEST
0x201 CALLER
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 PUSH2 0x8fc
0x21b ADDRESS
0x21c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x231 AND
0x232 BALANCE
0x233 SWAP1
0x234 DUP2
0x235 ISZERO
0x236 MUL
0x237 SWAP1
0x238 PUSH1 0x40
0x23a MLOAD
0x23b PUSH1 0x0
0x23d PUSH1 0x40
0x23f MLOAD
0x240 DUP1
0x241 DUP4
0x242 SUB
0x243 DUP2
0x244 DUP6
0x245 DUP9
0x246 DUP9
0x247 CALL
0x248 SWAP4
0x249 POP
0x24a POP
0x24b POP
0x24c POP
0x24d ISZERO
0x24e ISZERO
0x24f PUSH2 0x257
0x252 JUMPI
---
0x200: JUMPDEST 
0x201: V102 = CALLER
0x202: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x218: V105 = 0x8fc
0x21b: V106 = ADDRESS
0x21c: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x231: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x232: V109 = BALANCE V108
0x235: V110 = ISZERO V109
0x236: V111 = MUL V110 0x8fc
0x238: V112 = 0x40
0x23a: V113 = M[0x40]
0x23b: V114 = 0x0
0x23d: V115 = 0x40
0x23f: V116 = M[0x40]
0x242: V117 = SUB V113 V116
0x247: V118 = CALL V111 V104 V109 V116 V117 V116 0x0
0x24d: V119 = ISZERO V118
0x24e: V120 = ISZERO V119
0x24f: V121 = 0x257
0x252: JUMPI 0x257 V120
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x253
[0x253:0x256]
---
Predecessors: [0x200]
Successors: []
---
0x253 PUSH1 0x0
0x255 DUP1
0x256 REVERT
---
0x253: V122 = 0x0
0x256: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x257
[0x257:0x258]
---
Predecessors: [0x200]
Successors: [0x6e]
---
0x257 JUMPDEST
0x258 JUMP
---
0x257: JUMPDEST 
0x258: JUMP 0x6e
---
Entry stack: [V11, 0x6e]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x259
[0x259:0x284]
---
Predecessors: []
Successors: []
---
0x259 STOP
0x25a LOG1
0x25b PUSH6 0x627a7a723058
0x262 SHA3
0x263 MISSING 0xce
0x264 EXTCODECOPY
0x265 SWAP11
0x266 SWAP13
0x267 MISSING 0x5e
0x268 MISSING 0xc8
0x269 ADDMOD
0x26a MISSING 0xa9
0x26b MISSING 0xed
0x26c MISSING 0xeb
0x26d MISSING 0xda
0x26e MISSING 0xbf
0x26f MISSING 0x2d
0x270 MISSING 0x4f
0x271 DUP10
0x272 MISSING 0xca
0x273 MISSING 0x29
0x274 MISSING 0x1e
0x275 MULMOD
0x276 MISSING 0xb9
0x277 MISSING 0xd1
0x278 MISSING 0xe3
0x279 MISSING 0xac
0x27a MISSING 0x2f
0x27b MISSING 0x4d
0x27c SWAP8
0x27d DUP9
0x27e MISSING 0xec
0x27f MISSING 0x2c
0x280 MISSING 0x29
0x281 RETURNDATASIZE
0x282 MISSING 0xc9
0x283 STOP
0x284 MISSING 0x29
---
0x259: STOP 
0x25a: LOG S0 S1 S2
0x25b: V123 = 0x627a7a723058
0x262: V124 = SHA3 0x627a7a723058 S3
0x263: MISSING 0xce
0x264: EXTCODECOPY S0 S1 S2 S3
0x267: MISSING 0x5e
0x268: MISSING 0xc8
0x269: V125 = ADDMOD S0 S1 S2
0x26a: MISSING 0xa9
0x26b: MISSING 0xed
0x26c: MISSING 0xeb
0x26d: MISSING 0xda
0x26e: MISSING 0xbf
0x26f: MISSING 0x2d
0x270: MISSING 0x4f
0x272: MISSING 0xca
0x273: MISSING 0x29
0x274: MISSING 0x1e
0x275: V126 = MULMOD S0 S1 S2
0x276: MISSING 0xb9
0x277: MISSING 0xd1
0x278: MISSING 0xe3
0x279: MISSING 0xac
0x27a: MISSING 0x2f
0x27b: MISSING 0x4d
0x27e: MISSING 0xec
0x27f: MISSING 0x2c
0x280: MISSING 0x29
0x281: V127 = RETURNDATASIZE
0x282: MISSING 0xc9
0x283: STOP 
0x284: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V124, S17, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S4, S16, S15, V125, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V126, S0, S8, S1, S2, S3, S4, S5, S6, S7, S0, V127]
Exit stack: []

================================

Function 0:
Public function signature: 0x11610c25
Entry block: 0x51
Exit block: 0x59
Body: 0x51, 0x59, 0x70, 0x19d, 0x1a1

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x5b
Exit block: 0x6e
Body: 0x5b, 0x62, 0x66, 0x6e, 0x1a4, 0x1fc, 0x200, 0x253, 0x257

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

