Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x9e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x9e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x9e
0xa: JUMPI 0x9e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xa7]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xa19b14a
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xa7
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xa19b14a
0x20: V14 = EQ V12 0xa19b14a
0x21: V15 = 0xa7
0x24: JUMPI 0xa7 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xf6]
---
0x25 DUP1
0x26 PUSH4 0x2cf2c0af
0x2b EQ
0x2c PUSH2 0xf6
0x2f JUMPI
---
0x26: V16 = 0x2cf2c0af
0x2b: V17 = EQ 0x2cf2c0af V12
0x2c: V18 = 0xf6
0x2f: JUMPI 0xf6 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x10e]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0x10e
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0x10e
0x3a: JUMPI 0x10e V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x126]
---
0x3b DUP1
0x3c PUSH4 0x43d726d6
0x41 EQ
0x42 PUSH2 0x126
0x45 JUMPI
---
0x3c: V22 = 0x43d726d6
0x41: V23 = EQ 0x43d726d6 V12
0x42: V24 = 0x126
0x45: JUMPI 0x126 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x13b]
---
0x46 DUP1
0x47 PUSH4 0x4e12ac40
0x4c EQ
0x4d PUSH2 0x13b
0x50 JUMPI
---
0x47: V25 = 0x4e12ac40
0x4c: V26 = EQ 0x4e12ac40 V12
0x4d: V27 = 0x13b
0x50: JUMPI 0x13b V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x16c]
---
0x51 DUP1
0x52 PUSH4 0x5c73dcea
0x57 EQ
0x58 PUSH2 0x16c
0x5b JUMPI
---
0x52: V28 = 0x5c73dcea
0x57: V29 = EQ 0x5c73dcea V12
0x58: V30 = 0x16c
0x5b: JUMPI 0x16c V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1cd]
---
0x5c DUP1
0x5d PUSH4 0x70a08231
0x62 EQ
0x63 PUSH2 0x1cd
0x66 JUMPI
---
0x5d: V31 = 0x70a08231
0x62: V32 = EQ 0x70a08231 V12
0x63: V33 = 0x1cd
0x66: JUMPI 0x1cd V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1fe]
---
0x67 DUP1
0x68 PUSH4 0x8da5cb5b
0x6d EQ
0x6e PUSH2 0x1fe
0x71 JUMPI
---
0x68: V34 = 0x8da5cb5b
0x6d: V35 = EQ 0x8da5cb5b V12
0x6e: V36 = 0x1fe
0x71: JUMPI 0x1fe V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x22d]
---
0x72 DUP1
0x73 PUSH4 0x9063b12c
0x78 EQ
0x79 PUSH2 0x22d
0x7c JUMPI
---
0x73: V37 = 0x9063b12c
0x78: V38 = EQ 0x9063b12c V12
0x79: V39 = 0x22d
0x7c: JUMPI 0x22d V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x25e]
---
0x7d DUP1
0x7e PUSH4 0xd0e30db0
0x83 EQ
0x84 PUSH2 0x25e
0x87 JUMPI
---
0x7e: V40 = 0xd0e30db0
0x83: V41 = EQ 0xd0e30db0 V12
0x84: V42 = 0x25e
0x87: JUMPI 0x25e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x268]
---
0x88 DUP1
0x89 PUSH4 0xf1b83630
0x8e EQ
0x8f PUSH2 0x268
0x92 JUMPI
---
0x89: V43 = 0xf1b83630
0x8e: V44 = EQ 0xf1b83630 V12
0x8f: V45 = 0x268
0x92: JUMPI 0x268 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x280]
---
0x93 DUP1
0x94 PUSH4 0xf4054940
0x99 EQ
0x9a PUSH2 0x280
0x9d JUMPI
---
0x94: V46 = 0xf4054940
0x99: V47 = EQ 0xf4054940 V12
0x9a: V48 = 0x280
0x9d: JUMPI 0x280 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x0, 0x93]
Successors: [0xa2]
---
0x9e JUMPDEST
0x9f PUSH2 0xa5
---
0x9e: JUMPDEST 
0x9f: V49 = 0xa5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V12, 0xa5]

================================

Block 0xa2
[0xa2:0xa2]
---
Predecessors: [0x9e]
Successors: [0xa3]
---
0xa2 JUMPDEST
---
0xa2: JUMPDEST 
---
Entry stack: [V12, 0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0xa2]
Successors: [0xa5]
---
0xa3 JUMPDEST
0xa4 JUMP
---
0xa3: JUMPDEST 
0xa4: JUMP 0xa5
---
Entry stack: [V12, 0xa5]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xa5
[0xa5:0xa6]
---
Predecessors: [0xa3, 0x4df, 0x561, 0x5b5, 0xaa3, 0xb21]
Successors: []
---
0xa5 JUMPDEST
0xa6 STOP
---
0xa5: JUMPDEST 
0xa6: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa7
[0xa7:0xad]
---
Predecessors: [0xb]
Successors: [0xae, 0xb2]
---
0xa7 JUMPDEST
0xa8 CALLVALUE
0xa9 ISZERO
0xaa PUSH2 0xb2
0xad JUMPI
---
0xa7: JUMPDEST 
0xa8: V50 = CALLVALUE
0xa9: V51 = ISZERO V50
0xaa: V52 = 0xb2
0xad: JUMPI 0xb2 V51
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xae
[0xae:0xb1]
---
Predecessors: [0xa7]
Successors: []
---
0xae PUSH1 0x0
0xb0 DUP1
0xb1 REVERT
---
0xae: V53 = 0x0
0xb1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb2
[0xb2:0xf3]
---
Predecessors: [0xa7]
Successors: [0x2b7]
---
0xb2 JUMPDEST
0xb3 PUSH2 0xa5
0xb6 PUSH1 0x1
0xb8 PUSH1 0xa0
0xba PUSH1 0x2
0xbc EXP
0xbd SUB
0xbe PUSH1 0x4
0xc0 CALLDATALOAD
0xc1 DUP2
0xc2 AND
0xc3 SWAP1
0xc4 PUSH1 0x24
0xc6 CALLDATALOAD
0xc7 SWAP1
0xc8 PUSH1 0x44
0xca CALLDATALOAD
0xcb DUP2
0xcc AND
0xcd SWAP1
0xce PUSH1 0x64
0xd0 CALLDATALOAD
0xd1 SWAP1
0xd2 PUSH1 0x84
0xd4 CALLDATALOAD
0xd5 SWAP1
0xd6 PUSH1 0xa4
0xd8 CALLDATALOAD
0xd9 SWAP1
0xda PUSH1 0xc4
0xdc CALLDATALOAD
0xdd AND
0xde PUSH1 0xff
0xe0 PUSH1 0xe4
0xe2 CALLDATALOAD
0xe3 AND
0xe4 PUSH2 0x104
0xe7 CALLDATALOAD
0xe8 PUSH2 0x124
0xeb CALLDATALOAD
0xec PUSH2 0x144
0xef CALLDATALOAD
0xf0 PUSH2 0x2b7
0xf3 JUMP
---
0xb2: JUMPDEST 
0xb3: V54 = 0xa5
0xb6: V55 = 0x1
0xb8: V56 = 0xa0
0xba: V57 = 0x2
0xbc: V58 = EXP 0x2 0xa0
0xbd: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe: V60 = 0x4
0xc0: V61 = CALLDATALOAD 0x4
0xc2: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xc4: V63 = 0x24
0xc6: V64 = CALLDATALOAD 0x24
0xc8: V65 = 0x44
0xca: V66 = CALLDATALOAD 0x44
0xcc: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0xce: V68 = 0x64
0xd0: V69 = CALLDATALOAD 0x64
0xd2: V70 = 0x84
0xd4: V71 = CALLDATALOAD 0x84
0xd6: V72 = 0xa4
0xd8: V73 = CALLDATALOAD 0xa4
0xda: V74 = 0xc4
0xdc: V75 = CALLDATALOAD 0xc4
0xdd: V76 = AND V75 0xffffffffffffffffffffffffffffffffffffffff
0xde: V77 = 0xff
0xe0: V78 = 0xe4
0xe2: V79 = CALLDATALOAD 0xe4
0xe3: V80 = AND V79 0xff
0xe4: V81 = 0x104
0xe7: V82 = CALLDATALOAD 0x104
0xe8: V83 = 0x124
0xeb: V84 = CALLDATALOAD 0x124
0xec: V85 = 0x144
0xef: V86 = CALLDATALOAD 0x144
0xf0: V87 = 0x2b7
0xf3: JUMP 0x2b7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86]
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86]

================================

Block 0xf4
[0xf4:0xf5]
---
Predecessors: []
Successors: []
---
0xf4 JUMPDEST
0xf5 STOP
---
0xf4: JUMPDEST 
0xf5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf6
[0xf6:0xfc]
---
Predecessors: [0x25]
Successors: [0xfd, 0x101]
---
0xf6 JUMPDEST
0xf7 CALLVALUE
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf6: JUMPDEST 
0xf7: V88 = CALLVALUE
0xf8: V89 = ISZERO V88
0xf9: V90 = 0x101
0xfc: JUMPI 0x101 V89
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf6]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V91 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x4ed]
---
0x101 JUMPDEST
0x102 PUSH2 0xa5
0x105 PUSH1 0x4
0x107 CALLDATALOAD
0x108 PUSH2 0x4ed
0x10b JUMP
---
0x101: JUMPDEST 
0x102: V92 = 0xa5
0x105: V93 = 0x4
0x107: V94 = CALLDATALOAD 0x4
0x108: V95 = 0x4ed
0x10b: JUMP 0x4ed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5, V94]
Exit stack: [V12, 0xa5, V94]

================================

Block 0x10c
[0x10c:0x10d]
---
Predecessors: []
Successors: []
---
0x10c JUMPDEST
0x10d STOP
---
0x10c: JUMPDEST 
0x10d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10e
[0x10e:0x114]
---
Predecessors: [0x30]
Successors: [0x115, 0x119]
---
0x10e JUMPDEST
0x10f CALLVALUE
0x110 ISZERO
0x111 PUSH2 0x119
0x114 JUMPI
---
0x10e: JUMPDEST 
0x10f: V96 = CALLVALUE
0x110: V97 = ISZERO V96
0x111: V98 = 0x119
0x114: JUMPI 0x119 V97
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x115
[0x115:0x118]
---
Predecessors: [0x10e]
Successors: []
---
0x115 PUSH1 0x0
0x117 DUP1
0x118 REVERT
---
0x115: V99 = 0x0
0x118: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x119
[0x119:0x123]
---
Predecessors: [0x10e]
Successors: [0x565]
---
0x119 JUMPDEST
0x11a PUSH2 0xa5
0x11d PUSH1 0x4
0x11f CALLDATALOAD
0x120 PUSH2 0x565
0x123 JUMP
---
0x119: JUMPDEST 
0x11a: V100 = 0xa5
0x11d: V101 = 0x4
0x11f: V102 = CALLDATALOAD 0x4
0x120: V103 = 0x565
0x123: JUMP 0x565
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5, V102]
Exit stack: [V12, 0xa5, V102]

================================

Block 0x124
[0x124:0x125]
---
Predecessors: []
Successors: []
---
0x124 JUMPDEST
0x125 STOP
---
0x124: JUMPDEST 
0x125: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x126
[0x126:0x12c]
---
Predecessors: [0x3b]
Successors: [0x12d, 0x131]
---
0x126 JUMPDEST
0x127 CALLVALUE
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x126: JUMPDEST 
0x127: V104 = CALLVALUE
0x128: V105 = ISZERO V104
0x129: V106 = 0x131
0x12c: JUMPI 0x131 V105
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x126]
Successors: []
---
0x12d PUSH1 0x0
0x12f DUP1
0x130 REVERT
---
0x12d: V107 = 0x0
0x130: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x131
[0x131:0x138]
---
Predecessors: [0x126]
Successors: [0x5b8]
---
0x131 JUMPDEST
0x132 PUSH2 0xa5
0x135 PUSH2 0x5b8
0x138 JUMP
---
0x131: JUMPDEST 
0x132: V108 = 0xa5
0x135: V109 = 0x5b8
0x138: JUMP 0x5b8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V12, 0xa5]

================================

Block 0x139
[0x139:0x13a]
---
Predecessors: []
Successors: []
---
0x139 JUMPDEST
0x13a STOP
---
0x139: JUMPDEST 
0x13a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13b
[0x13b:0x141]
---
Predecessors: [0x46]
Successors: [0x142, 0x146]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x13b: JUMPDEST 
0x13c: V110 = CALLVALUE
0x13d: V111 = ISZERO V110
0x13e: V112 = 0x146
0x141: JUMPI 0x146 V111
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x13b]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V113 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x146
[0x146:0x159]
---
Predecessors: [0x13b]
Successors: [0x5e4]
---
0x146 JUMPDEST
0x147 PUSH2 0x15a
0x14a PUSH1 0x1
0x14c PUSH1 0xa0
0x14e PUSH1 0x2
0x150 EXP
0x151 SUB
0x152 PUSH1 0x4
0x154 CALLDATALOAD
0x155 AND
0x156 PUSH2 0x5e4
0x159 JUMP
---
0x146: JUMPDEST 
0x147: V114 = 0x15a
0x14a: V115 = 0x1
0x14c: V116 = 0xa0
0x14e: V117 = 0x2
0x150: V118 = EXP 0x2 0xa0
0x151: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x152: V120 = 0x4
0x154: V121 = CALLDATALOAD 0x4
0x155: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x156: V123 = 0x5e4
0x159: JUMP 0x5e4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V122]
Exit stack: [V12, 0x15a, V122]

================================

Block 0x15a
[0x15a:0x16b]
---
Predecessors: [0x74f, 0x974, 0xa22, 0xc3d]
Successors: []
---
0x15a JUMPDEST
0x15b PUSH1 0x40
0x15d MLOAD
0x15e SWAP1
0x15f DUP2
0x160 MSTORE
0x161 PUSH1 0x20
0x163 ADD
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x15a: JUMPDEST 
0x15b: V124 = 0x40
0x15d: V125 = M[0x40]
0x160: M[V125] = S0
0x161: V126 = 0x20
0x163: V127 = ADD 0x20 V125
0x164: V128 = 0x40
0x166: V129 = M[0x40]
0x169: V130 = SUB V127 V129
0x16b: RETURN V129 V130
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x16c
[0x16c:0x172]
---
Predecessors: [0x51]
Successors: [0x173, 0x177]
---
0x16c JUMPDEST
0x16d CALLVALUE
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x16c: JUMPDEST 
0x16d: V131 = CALLVALUE
0x16e: V132 = ISZERO V131
0x16f: V133 = 0x177
0x172: JUMPI 0x177 V132
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x16c]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V134 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x177
[0x177:0x1b8]
---
Predecessors: [0x16c]
Successors: [0x756]
---
0x177 JUMPDEST
0x178 PUSH2 0x1b9
0x17b PUSH1 0x1
0x17d PUSH1 0xa0
0x17f PUSH1 0x2
0x181 EXP
0x182 SUB
0x183 PUSH1 0x4
0x185 CALLDATALOAD
0x186 DUP2
0x187 AND
0x188 SWAP1
0x189 PUSH1 0x24
0x18b CALLDATALOAD
0x18c SWAP1
0x18d PUSH1 0x44
0x18f CALLDATALOAD
0x190 DUP2
0x191 AND
0x192 SWAP1
0x193 PUSH1 0x64
0x195 CALLDATALOAD
0x196 SWAP1
0x197 PUSH1 0x84
0x199 CALLDATALOAD
0x19a SWAP1
0x19b PUSH1 0xa4
0x19d CALLDATALOAD
0x19e SWAP1
0x19f PUSH1 0xc4
0x1a1 CALLDATALOAD
0x1a2 AND
0x1a3 PUSH1 0xff
0x1a5 PUSH1 0xe4
0x1a7 CALLDATALOAD
0x1a8 AND
0x1a9 PUSH2 0x104
0x1ac CALLDATALOAD
0x1ad PUSH2 0x124
0x1b0 CALLDATALOAD
0x1b1 PUSH2 0x144
0x1b4 CALLDATALOAD
0x1b5 PUSH2 0x756
0x1b8 JUMP
---
0x177: JUMPDEST 
0x178: V135 = 0x1b9
0x17b: V136 = 0x1
0x17d: V137 = 0xa0
0x17f: V138 = 0x2
0x181: V139 = EXP 0x2 0xa0
0x182: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V141 = 0x4
0x185: V142 = CALLDATALOAD 0x4
0x187: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x189: V144 = 0x24
0x18b: V145 = CALLDATALOAD 0x24
0x18d: V146 = 0x44
0x18f: V147 = CALLDATALOAD 0x44
0x191: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x193: V149 = 0x64
0x195: V150 = CALLDATALOAD 0x64
0x197: V151 = 0x84
0x199: V152 = CALLDATALOAD 0x84
0x19b: V153 = 0xa4
0x19d: V154 = CALLDATALOAD 0xa4
0x19f: V155 = 0xc4
0x1a1: V156 = CALLDATALOAD 0xc4
0x1a2: V157 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V158 = 0xff
0x1a5: V159 = 0xe4
0x1a7: V160 = CALLDATALOAD 0xe4
0x1a8: V161 = AND V160 0xff
0x1a9: V162 = 0x104
0x1ac: V163 = CALLDATALOAD 0x104
0x1ad: V164 = 0x124
0x1b0: V165 = CALLDATALOAD 0x124
0x1b1: V166 = 0x144
0x1b4: V167 = CALLDATALOAD 0x144
0x1b5: V168 = 0x756
0x1b8: JUMP 0x756
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167]
Exit stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167]

================================

Block 0x1b9
[0x1b9:0x1cc]
---
Predecessors: [0x84c]
Successors: []
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd SWAP1
0x1be ISZERO
0x1bf ISZERO
0x1c0 DUP2
0x1c1 MSTORE
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc RETURN
---
0x1b9: JUMPDEST 
0x1ba: V169 = 0x40
0x1bc: V170 = M[0x40]
0x1be: V171 = ISZERO V768
0x1bf: V172 = ISZERO V171
0x1c1: M[V170] = V172
0x1c2: V173 = 0x20
0x1c4: V174 = ADD 0x20 V170
0x1c5: V175 = 0x40
0x1c7: V176 = M[0x40]
0x1ca: V177 = SUB V174 V176
0x1cc: RETURN V176 V177
---
Entry stack: [V12, V768]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cd
[0x1cd:0x1d3]
---
Predecessors: [0x5c]
Successors: [0x1d4, 0x1d8]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V178 = CALLVALUE
0x1cf: V179 = ISZERO V178
0x1d0: V180 = 0x1d8
0x1d3: JUMPI 0x1d8 V179
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V181 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d8
[0x1d8:0x1eb]
---
Predecessors: [0x1cd]
Successors: [0x85c]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0x15a
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 PUSH1 0x4
0x1e6 CALLDATALOAD
0x1e7 AND
0x1e8 PUSH2 0x85c
0x1eb JUMP
---
0x1d8: JUMPDEST 
0x1d9: V182 = 0x15a
0x1dc: V183 = 0x1
0x1de: V184 = 0xa0
0x1e0: V185 = 0x2
0x1e2: V186 = EXP 0x2 0xa0
0x1e3: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e4: V188 = 0x4
0x1e6: V189 = CALLDATALOAD 0x4
0x1e7: V190 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V191 = 0x85c
0x1eb: JUMP 0x85c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V190]
Exit stack: [V12, 0x15a, V190]

================================

Block 0x1ec
[0x1ec:0x1fd]
---
Predecessors: []
Successors: []
---
0x1ec JUMPDEST
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 SWAP1
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 PUSH1 0x20
0x1f5 ADD
0x1f6 PUSH1 0x40
0x1f8 MLOAD
0x1f9 DUP1
0x1fa SWAP2
0x1fb SUB
0x1fc SWAP1
0x1fd RETURN
---
0x1ec: JUMPDEST 
0x1ed: V192 = 0x40
0x1ef: V193 = M[0x40]
0x1f2: M[V193] = S0
0x1f3: V194 = 0x20
0x1f5: V195 = ADD 0x20 V193
0x1f6: V196 = 0x40
0x1f8: V197 = M[0x40]
0x1fb: V198 = SUB V195 V197
0x1fd: RETURN V197 V198
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1fe
[0x1fe:0x204]
---
Predecessors: [0x67]
Successors: [0x205, 0x209]
---
0x1fe JUMPDEST
0x1ff CALLVALUE
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V199 = CALLVALUE
0x200: V200 = ISZERO V199
0x201: V201 = 0x209
0x204: JUMPI 0x209 V200
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1fe]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V202 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x209
[0x209:0x210]
---
Predecessors: [0x1fe]
Successors: [0x97b]
---
0x209 JUMPDEST
0x20a PUSH2 0x211
0x20d PUSH2 0x97b
0x210 JUMP
---
0x209: JUMPDEST 
0x20a: V203 = 0x211
0x20d: V204 = 0x97b
0x210: JUMP 0x97b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x211]
Exit stack: [V12, 0x211]

================================

Block 0x211
[0x211:0x22c]
---
Predecessors: [0x97b]
Successors: []
---
0x211 JUMPDEST
0x212 PUSH1 0x40
0x214 MLOAD
0x215 PUSH1 0x1
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c SUB
0x21d SWAP1
0x21e SWAP2
0x21f AND
0x220 DUP2
0x221 MSTORE
0x222 PUSH1 0x20
0x224 ADD
0x225 PUSH1 0x40
0x227 MLOAD
0x228 DUP1
0x229 SWAP2
0x22a SUB
0x22b SWAP1
0x22c RETURN
---
0x211: JUMPDEST 
0x212: V205 = 0x40
0x214: V206 = M[0x40]
0x215: V207 = 0x1
0x217: V208 = 0xa0
0x219: V209 = 0x2
0x21b: V210 = EXP 0x2 0xa0
0x21c: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21f: V212 = AND V890 0xffffffffffffffffffffffffffffffffffffffff
0x221: M[V206] = V212
0x222: V213 = 0x20
0x224: V214 = ADD 0x20 V206
0x225: V215 = 0x40
0x227: V216 = M[0x40]
0x22a: V217 = SUB V214 V216
0x22c: RETURN V216 V217
---
Entry stack: [V12, 0x211, V890]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x211]

================================

Block 0x22d
[0x22d:0x233]
---
Predecessors: [0x72]
Successors: [0x234, 0x238]
---
0x22d JUMPDEST
0x22e CALLVALUE
0x22f ISZERO
0x230 PUSH2 0x238
0x233 JUMPI
---
0x22d: JUMPDEST 
0x22e: V218 = CALLVALUE
0x22f: V219 = ISZERO V218
0x230: V220 = 0x238
0x233: JUMPI 0x238 V219
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x234
[0x234:0x237]
---
Predecessors: [0x22d]
Successors: []
---
0x234 PUSH1 0x0
0x236 DUP1
0x237 REVERT
---
0x234: V221 = 0x0
0x237: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x238
[0x238:0x24b]
---
Predecessors: [0x22d]
Successors: [0x98a]
---
0x238 JUMPDEST
0x239 PUSH2 0x15a
0x23c PUSH1 0x1
0x23e PUSH1 0xa0
0x240 PUSH1 0x2
0x242 EXP
0x243 SUB
0x244 PUSH1 0x4
0x246 CALLDATALOAD
0x247 AND
0x248 PUSH2 0x98a
0x24b JUMP
---
0x238: JUMPDEST 
0x239: V222 = 0x15a
0x23c: V223 = 0x1
0x23e: V224 = 0xa0
0x240: V225 = 0x2
0x242: V226 = EXP 0x2 0xa0
0x243: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V228 = 0x4
0x246: V229 = CALLDATALOAD 0x4
0x247: V230 = AND V229 0xffffffffffffffffffffffffffffffffffffffff
0x248: V231 = 0x98a
0x24b: JUMP 0x98a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V230]
Exit stack: [V12, 0x15a, V230]

================================

Block 0x24c
[0x24c:0x25d]
---
Predecessors: []
Successors: []
---
0x24c JUMPDEST
0x24d PUSH1 0x40
0x24f MLOAD
0x250 SWAP1
0x251 DUP2
0x252 MSTORE
0x253 PUSH1 0x20
0x255 ADD
0x256 PUSH1 0x40
0x258 MLOAD
0x259 DUP1
0x25a SWAP2
0x25b SUB
0x25c SWAP1
0x25d RETURN
---
0x24c: JUMPDEST 
0x24d: V232 = 0x40
0x24f: V233 = M[0x40]
0x252: M[V233] = S0
0x253: V234 = 0x20
0x255: V235 = ADD 0x20 V233
0x256: V236 = 0x40
0x258: V237 = M[0x40]
0x25b: V238 = SUB V235 V237
0x25d: RETURN V237 V238
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x25e
[0x25e:0x265]
---
Predecessors: [0x7d]
Successors: [0xa28]
---
0x25e JUMPDEST
0x25f PUSH2 0xa5
0x262 PUSH2 0xa28
0x265 JUMP
---
0x25e: JUMPDEST 
0x25f: V239 = 0xa5
0x262: V240 = 0xa28
0x265: JUMP 0xa28
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V12, 0xa5]

================================

Block 0x266
[0x266:0x267]
---
Predecessors: []
Successors: []
---
0x266 JUMPDEST
0x267 STOP
---
0x266: JUMPDEST 
0x267: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x268
[0x268:0x26e]
---
Predecessors: [0x88]
Successors: [0x26f, 0x273]
---
0x268 JUMPDEST
0x269 CALLVALUE
0x26a ISZERO
0x26b PUSH2 0x273
0x26e JUMPI
---
0x268: JUMPDEST 
0x269: V241 = CALLVALUE
0x26a: V242 = ISZERO V241
0x26b: V243 = 0x273
0x26e: JUMPI 0x273 V242
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26f
[0x26f:0x272]
---
Predecessors: [0x268]
Successors: []
---
0x26f PUSH1 0x0
0x271 DUP1
0x272 REVERT
---
0x26f: V244 = 0x0
0x272: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x273
[0x273:0x27d]
---
Predecessors: [0x268]
Successors: [0xaa5]
---
0x273 JUMPDEST
0x274 PUSH2 0xa5
0x277 PUSH1 0x4
0x279 CALLDATALOAD
0x27a PUSH2 0xaa5
0x27d JUMP
---
0x273: JUMPDEST 
0x274: V245 = 0xa5
0x277: V246 = 0x4
0x279: V247 = CALLDATALOAD 0x4
0x27a: V248 = 0xaa5
0x27d: JUMP 0xaa5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5, V247]
Exit stack: [V12, 0xa5, V247]

================================

Block 0x27e
[0x27e:0x27f]
---
Predecessors: []
Successors: []
---
0x27e JUMPDEST
0x27f STOP
---
0x27e: JUMPDEST 
0x27f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x280
[0x280:0x286]
---
Predecessors: [0x93]
Successors: [0x287, 0x28b]
---
0x280 JUMPDEST
0x281 CALLVALUE
0x282 ISZERO
0x283 PUSH2 0x28b
0x286 JUMPI
---
0x280: JUMPDEST 
0x281: V249 = CALLVALUE
0x282: V250 = ISZERO V249
0x283: V251 = 0x28b
0x286: JUMPI 0x28b V250
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x287
[0x287:0x28a]
---
Predecessors: [0x280]
Successors: []
---
0x287 PUSH1 0x0
0x289 DUP1
0x28a REVERT
---
0x287: V252 = 0x0
0x28a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28b
[0x28b:0x2a4]
---
Predecessors: [0x280]
Successors: [0xb25]
---
0x28b JUMPDEST
0x28c PUSH2 0x15a
0x28f PUSH1 0x1
0x291 PUSH1 0xa0
0x293 PUSH1 0x2
0x295 EXP
0x296 SUB
0x297 PUSH1 0x4
0x299 CALLDATALOAD
0x29a DUP2
0x29b AND
0x29c SWAP1
0x29d PUSH1 0x24
0x29f CALLDATALOAD
0x2a0 AND
0x2a1 PUSH2 0xb25
0x2a4 JUMP
---
0x28b: JUMPDEST 
0x28c: V253 = 0x15a
0x28f: V254 = 0x1
0x291: V255 = 0xa0
0x293: V256 = 0x2
0x295: V257 = EXP 0x2 0xa0
0x296: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x297: V259 = 0x4
0x299: V260 = CALLDATALOAD 0x4
0x29b: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x29d: V262 = 0x24
0x29f: V263 = CALLDATALOAD 0x24
0x2a0: V264 = AND V263 0xffffffffffffffffffffffffffffffffffffffff
0x2a1: V265 = 0xb25
0x2a4: JUMP 0xb25
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V261, V264]
Exit stack: [V12, 0x15a, V261, V264]

================================

Block 0x2a5
[0x2a5:0x2b6]
---
Predecessors: []
Successors: []
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x40
0x2a8 MLOAD
0x2a9 SWAP1
0x2aa DUP2
0x2ab MSTORE
0x2ac PUSH1 0x20
0x2ae ADD
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 DUP1
0x2b3 SWAP2
0x2b4 SUB
0x2b5 SWAP1
0x2b6 RETURN
---
0x2a5: JUMPDEST 
0x2a6: V266 = 0x40
0x2a8: V267 = M[0x40]
0x2ab: M[V267] = S0
0x2ac: V268 = 0x20
0x2ae: V269 = ADD 0x20 V267
0x2af: V270 = 0x40
0x2b1: V271 = M[0x40]
0x2b4: V272 = SUB V269 V271
0x2b6: RETURN V271 V272
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b7
[0x2b7:0x2ce]
---
Predecessors: [0xb2]
Successors: [0x2cf, 0x2d3]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb SLOAD
0x2bc CALLER
0x2bd PUSH1 0x1
0x2bf PUSH1 0xa0
0x2c1 PUSH1 0x2
0x2c3 EXP
0x2c4 SUB
0x2c5 SWAP1
0x2c6 DUP2
0x2c7 AND
0x2c8 SWAP2
0x2c9 AND
0x2ca EQ
0x2cb PUSH2 0x2d3
0x2ce JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V273 = 0x0
0x2bb: V274 = S[0x0]
0x2bc: V275 = CALLER
0x2bd: V276 = 0x1
0x2bf: V277 = 0xa0
0x2c1: V278 = 0x2
0x2c3: V279 = EXP 0x2 0xa0
0x2c4: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c7: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x2c9: V282 = AND V274 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V283 = EQ V282 V281
0x2cb: V284 = 0x2d3
0x2ce: JUMPI 0x2d3 V283
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, 0x0]

================================

Block 0x2cf
[0x2cf:0x2d2]
---
Predecessors: [0x2b7]
Successors: []
---
0x2cf PUSH1 0x0
0x2d1 DUP1
0x2d2 REVERT
---
0x2cf: V285 = 0x0
0x2d2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, 0x0]

================================

Block 0x2d3
[0x2d3:0x388]
---
Predecessors: [0x2b7]
Successors: [0x389, 0x38d]
---
0x2d3 JUMPDEST
0x2d4 POP
0x2d5 PUSH1 0x1
0x2d7 SLOAD
0x2d8 PUSH1 0x1
0x2da PUSH1 0xa0
0x2dc PUSH1 0x2
0x2de EXP
0x2df SUB
0x2e0 AND
0x2e1 DUP1
0x2e2 PUSH4 0x6c86888b
0x2e7 DUP14
0x2e8 DUP14
0x2e9 DUP14
0x2ea DUP14
0x2eb DUP14
0x2ec DUP14
0x2ed DUP14
0x2ee DUP14
0x2ef DUP14
0x2f0 DUP14
0x2f1 DUP14
0x2f2 ADDRESS
0x2f3 PUSH1 0x0
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb MSTORE
0x2fc PUSH1 0x40
0x2fe MLOAD
0x2ff PUSH1 0xe0
0x301 PUSH1 0x2
0x303 EXP
0x304 PUSH4 0xffffffff
0x309 DUP16
0x30a AND
0x30b MUL
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 SWAP13
0x317 DUP14
0x318 AND
0x319 PUSH1 0x4
0x31b DUP3
0x31c ADD
0x31d MSTORE
0x31e PUSH1 0x24
0x320 DUP2
0x321 ADD
0x322 SWAP12
0x323 SWAP1
0x324 SWAP12
0x325 MSTORE
0x326 SWAP9
0x327 DUP12
0x328 AND
0x329 PUSH1 0x44
0x32b DUP12
0x32c ADD
0x32d MSTORE
0x32e PUSH1 0x64
0x330 DUP11
0x331 ADD
0x332 SWAP8
0x333 SWAP1
0x334 SWAP8
0x335 MSTORE
0x336 PUSH1 0x84
0x338 DUP10
0x339 ADD
0x33a SWAP6
0x33b SWAP1
0x33c SWAP6
0x33d MSTORE
0x33e PUSH1 0xa4
0x340 DUP9
0x341 ADD
0x342 SWAP4
0x343 SWAP1
0x344 SWAP4
0x345 MSTORE
0x346 SWAP1
0x347 DUP8
0x348 AND
0x349 PUSH1 0xc4
0x34b DUP8
0x34c ADD
0x34d MSTORE
0x34e PUSH1 0xff
0x350 AND
0x351 PUSH1 0xe4
0x353 DUP7
0x354 ADD
0x355 MSTORE
0x356 PUSH2 0x104
0x359 DUP6
0x35a ADD
0x35b MSTORE
0x35c PUSH2 0x124
0x35f DUP5
0x360 ADD
0x361 MSTORE
0x362 PUSH2 0x144
0x365 DUP4
0x366 ADD
0x367 MSTORE
0x368 SWAP1
0x369 SWAP2
0x36a AND
0x36b PUSH2 0x164
0x36e DUP3
0x36f ADD
0x370 MSTORE
0x371 PUSH2 0x184
0x374 ADD
0x375 PUSH1 0x20
0x377 PUSH1 0x40
0x379 MLOAD
0x37a DUP1
0x37b DUP4
0x37c SUB
0x37d DUP2
0x37e PUSH1 0x0
0x380 DUP8
0x381 DUP1
0x382 EXTCODESIZE
0x383 ISZERO
0x384 ISZERO
0x385 PUSH2 0x38d
0x388 JUMPI
---
0x2d3: JUMPDEST 
0x2d5: V286 = 0x1
0x2d7: V287 = S[0x1]
0x2d8: V288 = 0x1
0x2da: V289 = 0xa0
0x2dc: V290 = 0x2
0x2de: V291 = EXP 0x2 0xa0
0x2df: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e0: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x2e2: V294 = 0x6c86888b
0x2f2: V295 = ADDRESS
0x2f3: V296 = 0x0
0x2f5: V297 = 0x40
0x2f7: V298 = M[0x40]
0x2f8: V299 = 0x20
0x2fa: V300 = ADD 0x20 V298
0x2fb: M[V300] = 0x0
0x2fc: V301 = 0x40
0x2fe: V302 = M[0x40]
0x2ff: V303 = 0xe0
0x301: V304 = 0x2
0x303: V305 = EXP 0x2 0xe0
0x304: V306 = 0xffffffff
0x30a: V307 = AND 0x6c86888b 0xffffffff
0x30b: V308 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x30d: M[V302] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x30e: V309 = 0x1
0x310: V310 = 0xa0
0x312: V311 = 0x2
0x314: V312 = EXP 0x2 0xa0
0x315: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x318: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x319: V315 = 0x4
0x31c: V316 = ADD V302 0x4
0x31d: M[V316] = V314
0x31e: V317 = 0x24
0x321: V318 = ADD V302 0x24
0x325: M[V318] = V64
0x328: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x329: V320 = 0x44
0x32c: V321 = ADD V302 0x44
0x32d: M[V321] = V319
0x32e: V322 = 0x64
0x331: V323 = ADD V302 0x64
0x335: M[V323] = V69
0x336: V324 = 0x84
0x339: V325 = ADD V302 0x84
0x33d: M[V325] = V71
0x33e: V326 = 0xa4
0x341: V327 = ADD V302 0xa4
0x345: M[V327] = V73
0x348: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x349: V329 = 0xc4
0x34c: V330 = ADD V302 0xc4
0x34d: M[V330] = V328
0x34e: V331 = 0xff
0x350: V332 = AND 0xff V80
0x351: V333 = 0xe4
0x354: V334 = ADD V302 0xe4
0x355: M[V334] = V332
0x356: V335 = 0x104
0x35a: V336 = ADD V302 0x104
0x35b: M[V336] = V82
0x35c: V337 = 0x124
0x360: V338 = ADD V302 0x124
0x361: M[V338] = V84
0x362: V339 = 0x144
0x366: V340 = ADD V302 0x144
0x367: M[V340] = V86
0x36a: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x36b: V342 = 0x164
0x36f: V343 = ADD V302 0x164
0x370: M[V343] = V341
0x371: V344 = 0x184
0x374: V345 = ADD 0x184 V302
0x375: V346 = 0x20
0x377: V347 = 0x40
0x379: V348 = M[0x40]
0x37c: V349 = SUB V345 V348
0x37e: V350 = 0x0
0x382: V351 = EXTCODESIZE V293
0x383: V352 = ISZERO V351
0x384: V353 = ISZERO V352
0x385: V354 = 0x38d
0x388: JUMPI 0x38d V353
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V293, V293, 0x6c86888b, V345, 0x20, V348, V349, V348, 0x0, V293]
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V293, 0x6c86888b, V345, 0x20, V348, V349, V348, 0x0, V293]

================================

Block 0x389
[0x389:0x38c]
---
Predecessors: [0x2d3]
Successors: []
---
0x389 PUSH1 0x0
0x38b DUP1
0x38c REVERT
---
0x389: V355 = 0x0
0x38c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V293, 0x6c86888b, V345, 0x20, V348, V349, V348, 0x0, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V293, 0x6c86888b, V345, 0x20, V348, V349, V348, 0x0, V293]

================================

Block 0x38d
[0x38d:0x399]
---
Predecessors: [0x2d3]
Successors: [0x39a, 0x39e]
---
0x38d JUMPDEST
0x38e PUSH2 0x2c6
0x391 GAS
0x392 SUB
0x393 CALL
0x394 ISZERO
0x395 ISZERO
0x396 PUSH2 0x39e
0x399 JUMPI
---
0x38d: JUMPDEST 
0x38e: V356 = 0x2c6
0x391: V357 = GAS
0x392: V358 = SUB V357 0x2c6
0x393: V359 = CALL V358 V293 0x0 V348 V349 V348 0x20
0x394: V360 = ISZERO V359
0x395: V361 = ISZERO V360
0x396: V362 = 0x39e
0x399: JUMPI 0x39e V361
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V293, 0x6c86888b, V345, 0x20, V348, V349, V348, 0x0, V293]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V293, 0x6c86888b, V345]

================================

Block 0x39a
[0x39a:0x39d]
---
Predecessors: [0x38d]
Successors: []
---
0x39a PUSH1 0x0
0x39c DUP1
0x39d REVERT
---
0x39a: V363 = 0x0
0x39d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V293, 0x6c86888b, V345]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V293, 0x6c86888b, V345]

================================

Block 0x39e
[0x39e:0x3ad]
---
Predecessors: [0x38d]
Successors: [0x3ae, 0x4a8]
---
0x39e JUMPDEST
0x39f POP
0x3a0 POP
0x3a1 POP
0x3a2 PUSH1 0x40
0x3a4 MLOAD
0x3a5 DUP1
0x3a6 MLOAD
0x3a7 SWAP1
0x3a8 POP
0x3a9 ISZERO
0x3aa PUSH2 0x4a8
0x3ad JUMPI
---
0x39e: JUMPDEST 
0x3a2: V364 = 0x40
0x3a4: V365 = M[0x40]
0x3a6: V366 = M[V365]
0x3a9: V367 = ISZERO V366
0x3aa: V368 = 0x4a8
0x3ad: JUMPI 0x4a8 V367
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V293, 0x6c86888b, V345]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293]

================================

Block 0x3ae
[0x3ae:0x48a]
---
Predecessors: [0x39e]
Successors: [0x48b, 0x48f]
---
0x3ae PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x3cf PUSH1 0x14
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 SWAP1
0x3d5 DUP2
0x3d6 MSTORE
0x3d7 PUSH1 0x20
0x3d9 ADD
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd DUP1
0x3de SWAP2
0x3df SUB
0x3e0 SWAP1
0x3e1 LOG1
0x3e2 DUP1
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb AND
0x3ec PUSH4 0xa19b14a
0x3f1 DUP14
0x3f2 DUP14
0x3f3 DUP14
0x3f4 DUP14
0x3f5 DUP14
0x3f6 DUP14
0x3f7 DUP14
0x3f8 DUP14
0x3f9 DUP14
0x3fa DUP14
0x3fb DUP14
0x3fc PUSH1 0x40
0x3fe MLOAD
0x3ff PUSH1 0xe0
0x401 PUSH1 0x2
0x403 EXP
0x404 PUSH4 0xffffffff
0x409 DUP15
0x40a AND
0x40b MUL
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x1
0x410 PUSH1 0xa0
0x412 PUSH1 0x2
0x414 EXP
0x415 SUB
0x416 SWAP12
0x417 DUP13
0x418 AND
0x419 PUSH1 0x4
0x41b DUP3
0x41c ADD
0x41d MSTORE
0x41e PUSH1 0x24
0x420 DUP2
0x421 ADD
0x422 SWAP11
0x423 SWAP1
0x424 SWAP11
0x425 MSTORE
0x426 SWAP8
0x427 DUP11
0x428 AND
0x429 PUSH1 0x44
0x42b DUP11
0x42c ADD
0x42d MSTORE
0x42e PUSH1 0x64
0x430 DUP10
0x431 ADD
0x432 SWAP7
0x433 SWAP1
0x434 SWAP7
0x435 MSTORE
0x436 PUSH1 0x84
0x438 DUP9
0x439 ADD
0x43a SWAP5
0x43b SWAP1
0x43c SWAP5
0x43d MSTORE
0x43e PUSH1 0xa4
0x440 DUP8
0x441 ADD
0x442 SWAP3
0x443 SWAP1
0x444 SWAP3
0x445 MSTORE
0x446 SWAP1
0x447 SWAP6
0x448 AND
0x449 PUSH1 0xc4
0x44b DUP6
0x44c ADD
0x44d MSTORE
0x44e PUSH1 0xff
0x450 SWAP1
0x451 SWAP5
0x452 AND
0x453 PUSH1 0xe4
0x455 DUP5
0x456 ADD
0x457 MSTORE
0x458 PUSH2 0x104
0x45b DUP4
0x45c ADD
0x45d SWAP4
0x45e SWAP1
0x45f SWAP4
0x460 MSTORE
0x461 PUSH2 0x124
0x464 DUP3
0x465 ADD
0x466 SWAP3
0x467 SWAP1
0x468 SWAP3
0x469 MSTORE
0x46a PUSH2 0x144
0x46d DUP2
0x46e ADD
0x46f SWAP2
0x470 SWAP1
0x471 SWAP2
0x472 MSTORE
0x473 PUSH2 0x164
0x476 ADD
0x477 PUSH1 0x0
0x479 PUSH1 0x40
0x47b MLOAD
0x47c DUP1
0x47d DUP4
0x47e SUB
0x47f DUP2
0x480 PUSH1 0x0
0x482 DUP8
0x483 DUP1
0x484 EXTCODESIZE
0x485 ISZERO
0x486 ISZERO
0x487 PUSH2 0x48f
0x48a JUMPI
---
0x3ae: V369 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x3cf: V370 = 0x14
0x3d1: V371 = 0x40
0x3d3: V372 = M[0x40]
0x3d6: M[V372] = 0x14
0x3d7: V373 = 0x20
0x3d9: V374 = ADD 0x20 V372
0x3da: V375 = 0x40
0x3dc: V376 = M[0x40]
0x3df: V377 = SUB V374 V376
0x3e1: LOG V376 V377 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x3e3: V378 = 0x1
0x3e5: V379 = 0xa0
0x3e7: V380 = 0x2
0x3e9: V381 = EXP 0x2 0xa0
0x3ea: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3eb: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x3ec: V384 = 0xa19b14a
0x3fc: V385 = 0x40
0x3fe: V386 = M[0x40]
0x3ff: V387 = 0xe0
0x401: V388 = 0x2
0x403: V389 = EXP 0x2 0xe0
0x404: V390 = 0xffffffff
0x40a: V391 = AND 0xa19b14a 0xffffffff
0x40b: V392 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x40d: M[V386] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x40e: V393 = 0x1
0x410: V394 = 0xa0
0x412: V395 = 0x2
0x414: V396 = EXP 0x2 0xa0
0x415: V397 = SUB 0x10000000000000000000000000000000000000000 0x1
0x418: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x419: V399 = 0x4
0x41c: V400 = ADD V386 0x4
0x41d: M[V400] = V398
0x41e: V401 = 0x24
0x421: V402 = ADD V386 0x24
0x425: M[V402] = V64
0x428: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x429: V404 = 0x44
0x42c: V405 = ADD V386 0x44
0x42d: M[V405] = V403
0x42e: V406 = 0x64
0x431: V407 = ADD V386 0x64
0x435: M[V407] = V69
0x436: V408 = 0x84
0x439: V409 = ADD V386 0x84
0x43d: M[V409] = V71
0x43e: V410 = 0xa4
0x441: V411 = ADD V386 0xa4
0x445: M[V411] = V73
0x448: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x449: V413 = 0xc4
0x44c: V414 = ADD V386 0xc4
0x44d: M[V414] = V412
0x44e: V415 = 0xff
0x452: V416 = AND V80 0xff
0x453: V417 = 0xe4
0x456: V418 = ADD V386 0xe4
0x457: M[V418] = V416
0x458: V419 = 0x104
0x45c: V420 = ADD V386 0x104
0x460: M[V420] = V82
0x461: V421 = 0x124
0x465: V422 = ADD V386 0x124
0x469: M[V422] = V84
0x46a: V423 = 0x144
0x46e: V424 = ADD V386 0x144
0x472: M[V424] = V86
0x473: V425 = 0x164
0x476: V426 = ADD 0x164 V386
0x477: V427 = 0x0
0x479: V428 = 0x40
0x47b: V429 = M[0x40]
0x47e: V430 = SUB V426 V429
0x480: V431 = 0x0
0x484: V432 = EXTCODESIZE V383
0x485: V433 = ISZERO V432
0x486: V434 = ISZERO V433
0x487: V435 = 0x48f
0x48a: JUMPI 0x48f V434
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V383, 0xa19b14a, V426, 0x0, V429, V430, V429, 0x0, V383]
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V383, 0xa19b14a, V426, 0x0, V429, V430, V429, 0x0, V383]

================================

Block 0x48b
[0x48b:0x48e]
---
Predecessors: [0x3ae]
Successors: []
---
0x48b PUSH1 0x0
0x48d DUP1
0x48e REVERT
---
0x48b: V436 = 0x0
0x48e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V383, 0xa19b14a, V426, 0x0, V429, V430, V429, 0x0, V383]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V383, 0xa19b14a, V426, 0x0, V429, V430, V429, 0x0, V383]

================================

Block 0x48f
[0x48f:0x49b]
---
Predecessors: [0x3ae]
Successors: [0x49c, 0x4a0]
---
0x48f JUMPDEST
0x490 PUSH2 0x2c6
0x493 GAS
0x494 SUB
0x495 CALL
0x496 ISZERO
0x497 ISZERO
0x498 PUSH2 0x4a0
0x49b JUMPI
---
0x48f: JUMPDEST 
0x490: V437 = 0x2c6
0x493: V438 = GAS
0x494: V439 = SUB V438 0x2c6
0x495: V440 = CALL V439 V383 0x0 V429 V430 V429 0x0
0x496: V441 = ISZERO V440
0x497: V442 = ISZERO V441
0x498: V443 = 0x4a0
0x49b: JUMPI 0x4a0 V442
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V383, 0xa19b14a, V426, 0x0, V429, V430, V429, 0x0, V383]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V383, 0xa19b14a, V426]

================================

Block 0x49c
[0x49c:0x49f]
---
Predecessors: [0x48f]
Successors: []
---
0x49c PUSH1 0x0
0x49e DUP1
0x49f REVERT
---
0x49c: V444 = 0x0
0x49f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V383, 0xa19b14a, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V383, 0xa19b14a, V426]

================================

Block 0x4a0
[0x4a0:0x4a7]
---
Predecessors: [0x48f]
Successors: [0x4dd]
---
0x4a0 JUMPDEST
0x4a1 POP
0x4a2 POP
0x4a3 POP
0x4a4 PUSH2 0x4dd
0x4a7 JUMP
---
0x4a0: JUMPDEST 
0x4a4: V445 = 0x4dd
0x4a7: JUMP 0x4dd
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293, V383, 0xa19b14a, V426]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293]

================================

Block 0x4a8
[0x4a8:0x4dc]
---
Predecessors: [0x39e]
Successors: [0x4dd]
---
0x4a8 JUMPDEST
0x4a9 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x4ca PUSH1 0x15
0x4cc PUSH1 0x40
0x4ce MLOAD
0x4cf SWAP1
0x4d0 DUP2
0x4d1 MSTORE
0x4d2 PUSH1 0x20
0x4d4 ADD
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 DUP1
0x4d9 SWAP2
0x4da SUB
0x4db SWAP1
0x4dc LOG1
---
0x4a8: JUMPDEST 
0x4a9: V446 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x4ca: V447 = 0x15
0x4cc: V448 = 0x40
0x4ce: V449 = M[0x40]
0x4d1: M[V449] = 0x15
0x4d2: V450 = 0x20
0x4d4: V451 = ADD 0x20 V449
0x4d5: V452 = 0x40
0x4d7: V453 = M[0x40]
0x4da: V454 = SUB V451 V453
0x4dc: LOG V453 V454 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293]

================================

Block 0x4dd
[0x4dd:0x4dd]
---
Predecessors: [0x4a0, 0x4a8]
Successors: [0x4de]
---
0x4dd JUMPDEST
---
0x4dd: JUMPDEST 
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293]

================================

Block 0x4de
[0x4de:0x4de]
---
Predecessors: [0x4dd]
Successors: [0x4df]
---
0x4de JUMPDEST
---
0x4de: JUMPDEST 
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293]

================================

Block 0x4df
[0x4df:0x4ec]
---
Predecessors: [0x4de]
Successors: [0xa5]
---
0x4df JUMPDEST
0x4e0 POP
0x4e1 POP
0x4e2 POP
0x4e3 POP
0x4e4 POP
0x4e5 POP
0x4e6 POP
0x4e7 POP
0x4e8 POP
0x4e9 POP
0x4ea POP
0x4eb POP
0x4ec JUMP
---
0x4df: JUMPDEST 
0x4ec: JUMP 0xa5
---
Entry stack: [V12, 0xa5, V62, V64, V67, V69, V71, V73, V76, V80, V82, V84, V86, V293]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ed
[0x4ed:0x504]
---
Predecessors: [0x101]
Successors: [0x505, 0x509]
---
0x4ed JUMPDEST
0x4ee PUSH1 0x0
0x4f0 DUP1
0x4f1 SLOAD
0x4f2 CALLER
0x4f3 PUSH1 0x1
0x4f5 PUSH1 0xa0
0x4f7 PUSH1 0x2
0x4f9 EXP
0x4fa SUB
0x4fb SWAP1
0x4fc DUP2
0x4fd AND
0x4fe SWAP2
0x4ff AND
0x500 EQ
0x501 PUSH2 0x509
0x504 JUMPI
---
0x4ed: JUMPDEST 
0x4ee: V455 = 0x0
0x4f1: V456 = S[0x0]
0x4f2: V457 = CALLER
0x4f3: V458 = 0x1
0x4f5: V459 = 0xa0
0x4f7: V460 = 0x2
0x4f9: V461 = EXP 0x2 0xa0
0x4fa: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x4ff: V464 = AND V456 0xffffffffffffffffffffffffffffffffffffffff
0x500: V465 = EQ V464 V463
0x501: V466 = 0x509
0x504: JUMPI 0x509 V465
---
Entry stack: [V12, 0xa5, V94]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xa5, V94, 0x0]

================================

Block 0x505
[0x505:0x508]
---
Predecessors: [0x4ed]
Successors: []
---
0x505 PUSH1 0x0
0x507 DUP1
0x508 REVERT
---
0x505: V467 = 0x0
0x508: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V94, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V94, 0x0]

================================

Block 0x509
[0x509:0x545]
---
Predecessors: [0x4ed]
Successors: [0x546, 0x54a]
---
0x509 JUMPDEST
0x50a POP
0x50b PUSH1 0x1
0x50d SLOAD
0x50e PUSH1 0x1
0x510 PUSH1 0xa0
0x512 PUSH1 0x2
0x514 EXP
0x515 SUB
0x516 AND
0x517 DUP1
0x518 PUSH4 0xd0e30db0
0x51d DUP4
0x51e PUSH1 0x40
0x520 MLOAD
0x521 DUP3
0x522 PUSH4 0xffffffff
0x527 AND
0x528 PUSH1 0xe0
0x52a PUSH1 0x2
0x52c EXP
0x52d MUL
0x52e DUP2
0x52f MSTORE
0x530 PUSH1 0x4
0x532 ADD
0x533 PUSH1 0x0
0x535 PUSH1 0x40
0x537 MLOAD
0x538 DUP1
0x539 DUP4
0x53a SUB
0x53b DUP2
0x53c DUP6
0x53d DUP9
0x53e DUP1
0x53f EXTCODESIZE
0x540 ISZERO
0x541 ISZERO
0x542 PUSH2 0x54a
0x545 JUMPI
---
0x509: JUMPDEST 
0x50b: V468 = 0x1
0x50d: V469 = S[0x1]
0x50e: V470 = 0x1
0x510: V471 = 0xa0
0x512: V472 = 0x2
0x514: V473 = EXP 0x2 0xa0
0x515: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x516: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x518: V476 = 0xd0e30db0
0x51e: V477 = 0x40
0x520: V478 = M[0x40]
0x522: V479 = 0xffffffff
0x527: V480 = AND 0xffffffff 0xd0e30db0
0x528: V481 = 0xe0
0x52a: V482 = 0x2
0x52c: V483 = EXP 0x2 0xe0
0x52d: V484 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x52f: M[V478] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x530: V485 = 0x4
0x532: V486 = ADD 0x4 V478
0x533: V487 = 0x0
0x535: V488 = 0x40
0x537: V489 = M[0x40]
0x53a: V490 = SUB V486 V489
0x53f: V491 = EXTCODESIZE V475
0x540: V492 = ISZERO V491
0x541: V493 = ISZERO V492
0x542: V494 = 0x54a
0x545: JUMPI 0x54a V493
---
Entry stack: [V12, 0xa5, V94, 0x0]
Stack pops: 2
Stack additions: [S1, V475, V475, 0xd0e30db0, S1, V486, 0x0, V489, V490, V489, S1, V475]
Exit stack: [V12, 0xa5, V94, V475, V475, 0xd0e30db0, V94, V486, 0x0, V489, V490, V489, V94, V475]

================================

Block 0x546
[0x546:0x549]
---
Predecessors: [0x509]
Successors: []
---
0x546 PUSH1 0x0
0x548 DUP1
0x549 REVERT
---
0x546: V495 = 0x0
0x549: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V94, V475, V475, 0xd0e30db0, V94, V486, 0x0, V489, V490, V489, V94, V475]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V94, V475, V475, 0xd0e30db0, V94, V486, 0x0, V489, V490, V489, V94, V475]

================================

Block 0x54a
[0x54a:0x556]
---
Predecessors: [0x509]
Successors: [0x557, 0x55b]
---
0x54a JUMPDEST
0x54b PUSH2 0x25ee
0x54e GAS
0x54f SUB
0x550 CALL
0x551 ISZERO
0x552 ISZERO
0x553 PUSH2 0x55b
0x556 JUMPI
---
0x54a: JUMPDEST 
0x54b: V496 = 0x25ee
0x54e: V497 = GAS
0x54f: V498 = SUB V497 0x25ee
0x550: V499 = CALL V498 V475 V94 V489 V490 V489 0x0
0x551: V500 = ISZERO V499
0x552: V501 = ISZERO V500
0x553: V502 = 0x55b
0x556: JUMPI 0x55b V501
---
Entry stack: [V12, 0xa5, V94, V475, V475, 0xd0e30db0, V94, V486, 0x0, V489, V490, V489, V94, V475]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V94, V475, V475, 0xd0e30db0, V94, V486]

================================

Block 0x557
[0x557:0x55a]
---
Predecessors: [0x54a]
Successors: []
---
0x557 PUSH1 0x0
0x559 DUP1
0x55a REVERT
---
0x557: V503 = 0x0
0x55a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V94, V475, V475, 0xd0e30db0, V94, V486]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V94, V475, V475, 0xd0e30db0, V94, V486]

================================

Block 0x55b
[0x55b:0x55f]
---
Predecessors: [0x54a]
Successors: [0x560]
---
0x55b JUMPDEST
0x55c POP
0x55d POP
0x55e POP
0x55f POP
---
0x55b: JUMPDEST 
---
Entry stack: [V12, 0xa5, V94, V475, V475, 0xd0e30db0, V94, V486]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xa5, V94, V475]

================================

Block 0x560
[0x560:0x560]
---
Predecessors: [0x55b]
Successors: [0x561]
---
0x560 JUMPDEST
---
0x560: JUMPDEST 
---
Entry stack: [V12, 0xa5, V94, V475]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V94, V475]

================================

Block 0x561
[0x561:0x564]
---
Predecessors: [0x560]
Successors: [0xa5]
---
0x561 JUMPDEST
0x562 POP
0x563 POP
0x564 JUMP
---
0x561: JUMPDEST 
0x564: JUMP 0xa5
---
Entry stack: [V12, 0xa5, V94, V475]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x565
[0x565:0x57b]
---
Predecessors: [0x119]
Successors: [0x57c, 0x580]
---
0x565 JUMPDEST
0x566 PUSH1 0x0
0x568 SLOAD
0x569 CALLER
0x56a PUSH1 0x1
0x56c PUSH1 0xa0
0x56e PUSH1 0x2
0x570 EXP
0x571 SUB
0x572 SWAP1
0x573 DUP2
0x574 AND
0x575 SWAP2
0x576 AND
0x577 EQ
0x578 PUSH2 0x580
0x57b JUMPI
---
0x565: JUMPDEST 
0x566: V504 = 0x0
0x568: V505 = S[0x0]
0x569: V506 = CALLER
0x56a: V507 = 0x1
0x56c: V508 = 0xa0
0x56e: V509 = 0x2
0x570: V510 = EXP 0x2 0xa0
0x571: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x574: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x576: V513 = AND V505 0xffffffffffffffffffffffffffffffffffffffff
0x577: V514 = EQ V513 V512
0x578: V515 = 0x580
0x57b: JUMPI 0x580 V514
---
Entry stack: [V12, 0xa5, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V102]

================================

Block 0x57c
[0x57c:0x57f]
---
Predecessors: [0x565]
Successors: []
---
0x57c PUSH1 0x0
0x57e DUP1
0x57f REVERT
---
0x57c: V516 = 0x0
0x57f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V102]

================================

Block 0x580
[0x580:0x5ae]
---
Predecessors: [0x565]
Successors: [0x5af, 0x5b3]
---
0x580 JUMPDEST
0x581 PUSH1 0x0
0x583 SLOAD
0x584 PUSH1 0x1
0x586 PUSH1 0xa0
0x588 PUSH1 0x2
0x58a EXP
0x58b SUB
0x58c AND
0x58d DUP2
0x58e ISZERO
0x58f PUSH2 0x8fc
0x592 MUL
0x593 DUP3
0x594 PUSH1 0x40
0x596 MLOAD
0x597 PUSH1 0x0
0x599 PUSH1 0x40
0x59b MLOAD
0x59c DUP1
0x59d DUP4
0x59e SUB
0x59f DUP2
0x5a0 DUP6
0x5a1 DUP9
0x5a2 DUP9
0x5a3 CALL
0x5a4 SWAP4
0x5a5 POP
0x5a6 POP
0x5a7 POP
0x5a8 POP
0x5a9 ISZERO
0x5aa ISZERO
0x5ab PUSH2 0x5b3
0x5ae JUMPI
---
0x580: JUMPDEST 
0x581: V517 = 0x0
0x583: V518 = S[0x0]
0x584: V519 = 0x1
0x586: V520 = 0xa0
0x588: V521 = 0x2
0x58a: V522 = EXP 0x2 0xa0
0x58b: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58c: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x58e: V525 = ISZERO V102
0x58f: V526 = 0x8fc
0x592: V527 = MUL 0x8fc V525
0x594: V528 = 0x40
0x596: V529 = M[0x40]
0x597: V530 = 0x0
0x599: V531 = 0x40
0x59b: V532 = M[0x40]
0x59e: V533 = SUB V529 V532
0x5a3: V534 = CALL V527 V524 V102 V532 V533 V532 0x0
0x5a9: V535 = ISZERO V534
0x5aa: V536 = ISZERO V535
0x5ab: V537 = 0x5b3
0x5ae: JUMPI 0x5b3 V536
---
Entry stack: [V12, 0xa5, V102]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xa5, V102]

================================

Block 0x5af
[0x5af:0x5b2]
---
Predecessors: [0x580]
Successors: []
---
0x5af PUSH1 0x0
0x5b1 DUP1
0x5b2 REVERT
---
0x5af: V538 = 0x0
0x5b2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V102]

================================

Block 0x5b3
[0x5b3:0x5b3]
---
Predecessors: [0x580]
Successors: [0x5b4]
---
0x5b3 JUMPDEST
---
0x5b3: JUMPDEST 
---
Entry stack: [V12, 0xa5, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V102]

================================

Block 0x5b4
[0x5b4:0x5b4]
---
Predecessors: [0x5b3]
Successors: [0x5b5]
---
0x5b4 JUMPDEST
---
0x5b4: JUMPDEST 
---
Entry stack: [V12, 0xa5, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V102]

================================

Block 0x5b5
[0x5b5:0x5b7]
---
Predecessors: [0x5b4]
Successors: [0xa5]
---
0x5b5 JUMPDEST
0x5b6 POP
0x5b7 JUMP
---
0x5b5: JUMPDEST 
0x5b7: JUMP 0xa5
---
Entry stack: [V12, 0xa5, V102]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b8
[0x5b8:0x5ce]
---
Predecessors: [0x131]
Successors: [0x5cf, 0x5d3]
---
0x5b8 JUMPDEST
0x5b9 PUSH1 0x0
0x5bb SLOAD
0x5bc CALLER
0x5bd PUSH1 0x1
0x5bf PUSH1 0xa0
0x5c1 PUSH1 0x2
0x5c3 EXP
0x5c4 SUB
0x5c5 SWAP1
0x5c6 DUP2
0x5c7 AND
0x5c8 SWAP2
0x5c9 AND
0x5ca EQ
0x5cb PUSH2 0x5d3
0x5ce JUMPI
---
0x5b8: JUMPDEST 
0x5b9: V539 = 0x0
0x5bb: V540 = S[0x0]
0x5bc: V541 = CALLER
0x5bd: V542 = 0x1
0x5bf: V543 = 0xa0
0x5c1: V544 = 0x2
0x5c3: V545 = EXP 0x2 0xa0
0x5c4: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c7: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V541
0x5c9: V548 = AND V540 0xffffffffffffffffffffffffffffffffffffffff
0x5ca: V549 = EQ V548 V547
0x5cb: V550 = 0x5d3
0x5ce: JUMPI 0x5d3 V549
---
Entry stack: [V12, 0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5]

================================

Block 0x5cf
[0x5cf:0x5d2]
---
Predecessors: [0x5b8]
Successors: []
---
0x5cf PUSH1 0x0
0x5d1 DUP1
0x5d2 REVERT
---
0x5cf: V551 = 0x0
0x5d2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5]

================================

Block 0x5d3
[0x5d3:0x5e0]
---
Predecessors: [0x5b8]
Successors: []
---
0x5d3 JUMPDEST
0x5d4 PUSH1 0x0
0x5d6 SLOAD
0x5d7 PUSH1 0x1
0x5d9 PUSH1 0xa0
0x5db PUSH1 0x2
0x5dd EXP
0x5de SUB
0x5df AND
0x5e0 SELFDESTRUCT
---
0x5d3: JUMPDEST 
0x5d4: V552 = 0x0
0x5d6: V553 = S[0x0]
0x5d7: V554 = 0x1
0x5d9: V555 = 0xa0
0x5db: V556 = 0x2
0x5dd: V557 = EXP 0x2 0xa0
0x5de: V558 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5df: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x5e0: SELFDESTRUCT V559
---
Entry stack: [V12, 0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5]

================================

Block 0x5e1
[0x5e1:0x5e1]
---
Predecessors: []
Successors: [0x5e2]
---
0x5e1 JUMPDEST
---
0x5e1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5e2
[0x5e2:0x5e3]
---
Predecessors: [0x5e1]
Successors: []
Has unresolved jump.
---
0x5e2 JUMPDEST
0x5e3 JUMP
---
0x5e2: JUMPDEST 
0x5e3: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5e4
[0x5e4:0x5ff]
---
Predecessors: [0x146]
Successors: [0x600, 0x604]
---
0x5e4 JUMPDEST
0x5e5 PUSH1 0x0
0x5e7 DUP1
0x5e8 SLOAD
0x5e9 DUP2
0x5ea SWAP1
0x5eb DUP2
0x5ec SWAP1
0x5ed CALLER
0x5ee PUSH1 0x1
0x5f0 PUSH1 0xa0
0x5f2 PUSH1 0x2
0x5f4 EXP
0x5f5 SUB
0x5f6 SWAP1
0x5f7 DUP2
0x5f8 AND
0x5f9 SWAP2
0x5fa AND
0x5fb EQ
0x5fc PUSH2 0x604
0x5ff JUMPI
---
0x5e4: JUMPDEST 
0x5e5: V560 = 0x0
0x5e8: V561 = S[0x0]
0x5ed: V562 = CALLER
0x5ee: V563 = 0x1
0x5f0: V564 = 0xa0
0x5f2: V565 = 0x2
0x5f4: V566 = EXP 0x2 0xa0
0x5f5: V567 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f8: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x5fa: V569 = AND V561 0xffffffffffffffffffffffffffffffffffffffff
0x5fb: V570 = EQ V569 V568
0x5fc: V571 = 0x604
0x5ff: JUMPI 0x604 V570
---
Entry stack: [V12, 0x15a, V122]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x15a, V122, 0x0, 0x0, 0x0]

================================

Block 0x600
[0x600:0x603]
---
Predecessors: [0x5e4]
Successors: []
---
0x600 PUSH1 0x0
0x602 DUP1
0x603 REVERT
---
0x600: V572 = 0x0
0x603: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V122, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V122, 0x0, 0x0, 0x0]

================================

Block 0x604
[0x604:0x6d6]
---
Predecessors: [0x5e4]
Successors: [0x6d7, 0x6db]
---
0x604 JUMPDEST
0x605 PUSH20 0xd8912c10681d8b21fd3742244f44658dba12264e
0x61a SWAP4
0x61b POP
0x61c PUSH1 0x0
0x61e DUP1
0x61f MLOAD
0x620 PUSH1 0x20
0x622 PUSH2 0xc46
0x625 DUP4
0x626 CODECOPY
0x627 DUP2
0x628 MLOAD
0x629 SWAP2
0x62a MSTORE
0x62b DUP5
0x62c PUSH20 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x641 PUSH1 0x40
0x643 MLOAD
0x644 PUSH1 0x1
0x646 PUSH1 0xa0
0x648 PUSH1 0x2
0x64a EXP
0x64b SUB
0x64c SWAP3
0x64d DUP4
0x64e AND
0x64f DUP2
0x650 MSTORE
0x651 SWAP2
0x652 AND
0x653 PUSH1 0x20
0x655 DUP3
0x656 ADD
0x657 MSTORE
0x658 PUSH1 0x40
0x65a SWAP1
0x65b DUP2
0x65c ADD
0x65d SWAP1
0x65e MLOAD
0x65f DUP1
0x660 SWAP2
0x661 SUB
0x662 SWAP1
0x663 LOG1
0x664 PUSH1 0x1
0x666 SLOAD
0x667 PUSH1 0x1
0x669 PUSH1 0xa0
0x66b PUSH1 0x2
0x66d EXP
0x66e SUB
0x66f AND
0x670 SWAP2
0x671 POP
0x672 DUP2
0x673 PUSH4 0xf7888aec
0x678 DUP6
0x679 PUSH20 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x68e PUSH1 0x0
0x690 PUSH1 0x40
0x692 MLOAD
0x693 PUSH1 0x20
0x695 ADD
0x696 MSTORE
0x697 PUSH1 0x40
0x699 MLOAD
0x69a PUSH1 0xe0
0x69c PUSH1 0x2
0x69e EXP
0x69f PUSH4 0xffffffff
0x6a4 DUP6
0x6a5 AND
0x6a6 MUL
0x6a7 DUP2
0x6a8 MSTORE
0x6a9 PUSH1 0x1
0x6ab PUSH1 0xa0
0x6ad PUSH1 0x2
0x6af EXP
0x6b0 SUB
0x6b1 SWAP3
0x6b2 DUP4
0x6b3 AND
0x6b4 PUSH1 0x4
0x6b6 DUP3
0x6b7 ADD
0x6b8 MSTORE
0x6b9 SWAP2
0x6ba AND
0x6bb PUSH1 0x24
0x6bd DUP3
0x6be ADD
0x6bf MSTORE
0x6c0 PUSH1 0x44
0x6c2 ADD
0x6c3 PUSH1 0x20
0x6c5 PUSH1 0x40
0x6c7 MLOAD
0x6c8 DUP1
0x6c9 DUP4
0x6ca SUB
0x6cb DUP2
0x6cc PUSH1 0x0
0x6ce DUP8
0x6cf DUP1
0x6d0 EXTCODESIZE
0x6d1 ISZERO
0x6d2 ISZERO
0x6d3 PUSH2 0x6db
0x6d6 JUMPI
---
0x604: JUMPDEST 
0x605: V573 = 0xd8912c10681d8b21fd3742244f44658dba12264e
0x61c: V574 = 0x0
0x61f: V575 = M[0x0]
0x620: V576 = 0x20
0x622: V577 = 0xc46
0x626: CODECOPY 0x0 0xc46 0x20
0x628: V578 = M[0x0]
0x62a: M[0x0] = V575
0x62c: V579 = 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x641: V580 = 0x40
0x643: V581 = M[0x40]
0x644: V582 = 0x1
0x646: V583 = 0xa0
0x648: V584 = 0x2
0x64a: V585 = EXP 0x2 0xa0
0x64b: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64e: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xd8912c10681d8b21fd3742244f44658dba12264e
0x650: M[V581] = 0xd8912c10681d8b21fd3742244f44658dba12264e
0x652: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x653: V589 = 0x20
0x656: V590 = ADD V581 0x20
0x657: M[V590] = 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x658: V591 = 0x40
0x65c: V592 = ADD 0x40 V581
0x65e: V593 = M[0x40]
0x661: V594 = SUB V592 V593
0x663: LOG V593 V594 V578
0x664: V595 = 0x1
0x666: V596 = S[0x1]
0x667: V597 = 0x1
0x669: V598 = 0xa0
0x66b: V599 = 0x2
0x66d: V600 = EXP 0x2 0xa0
0x66e: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66f: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0x673: V603 = 0xf7888aec
0x679: V604 = 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x68e: V605 = 0x0
0x690: V606 = 0x40
0x692: V607 = M[0x40]
0x693: V608 = 0x20
0x695: V609 = ADD 0x20 V607
0x696: M[V609] = 0x0
0x697: V610 = 0x40
0x699: V611 = M[0x40]
0x69a: V612 = 0xe0
0x69c: V613 = 0x2
0x69e: V614 = EXP 0x2 0xe0
0x69f: V615 = 0xffffffff
0x6a5: V616 = AND 0xf7888aec 0xffffffff
0x6a6: V617 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x6a8: M[V611] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x6a9: V618 = 0x1
0x6ab: V619 = 0xa0
0x6ad: V620 = 0x2
0x6af: V621 = EXP 0x2 0xa0
0x6b0: V622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b3: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xd8912c10681d8b21fd3742244f44658dba12264e
0x6b4: V624 = 0x4
0x6b7: V625 = ADD V611 0x4
0x6b8: M[V625] = 0xd8912c10681d8b21fd3742244f44658dba12264e
0x6ba: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x6bb: V627 = 0x24
0x6be: V628 = ADD V611 0x24
0x6bf: M[V628] = 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x6c0: V629 = 0x44
0x6c2: V630 = ADD 0x44 V611
0x6c3: V631 = 0x20
0x6c5: V632 = 0x40
0x6c7: V633 = M[0x40]
0x6ca: V634 = SUB V630 V633
0x6cc: V635 = 0x0
0x6d0: V636 = EXTCODESIZE V602
0x6d1: V637 = ISZERO V636
0x6d2: V638 = ISZERO V637
0x6d3: V639 = 0x6db
0x6d6: JUMPI 0x6db V638
---
Entry stack: [V12, 0x15a, V122, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0xd8912c10681d8b21fd3742244f44658dba12264e, S2, V602, S0, V602, 0xf7888aec, V630, 0x20, V633, V634, V633, 0x0, V602]
Exit stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, 0x0, V602, 0x0, V602, 0xf7888aec, V630, 0x20, V633, V634, V633, 0x0, V602]

================================

Block 0x6d7
[0x6d7:0x6da]
---
Predecessors: [0x604]
Successors: []
---
0x6d7 PUSH1 0x0
0x6d9 DUP1
0x6da REVERT
---
0x6d7: V640 = 0x0
0x6da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, 0x0, V602, 0x0, V602, 0xf7888aec, V630, 0x20, V633, V634, V633, 0x0, V602]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, 0x0, V602, 0x0, V602, 0xf7888aec, V630, 0x20, V633, V634, V633, 0x0, V602]

================================

Block 0x6db
[0x6db:0x6e7]
---
Predecessors: [0x604]
Successors: [0x6e8, 0x6ec]
---
0x6db JUMPDEST
0x6dc PUSH2 0x2c6
0x6df GAS
0x6e0 SUB
0x6e1 CALL
0x6e2 ISZERO
0x6e3 ISZERO
0x6e4 PUSH2 0x6ec
0x6e7 JUMPI
---
0x6db: JUMPDEST 
0x6dc: V641 = 0x2c6
0x6df: V642 = GAS
0x6e0: V643 = SUB V642 0x2c6
0x6e1: V644 = CALL V643 V602 0x0 V633 V634 V633 0x20
0x6e2: V645 = ISZERO V644
0x6e3: V646 = ISZERO V645
0x6e4: V647 = 0x6ec
0x6e7: JUMPI 0x6ec V646
---
Entry stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, 0x0, V602, 0x0, V602, 0xf7888aec, V630, 0x20, V633, V634, V633, 0x0, V602]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, 0x0, V602, 0x0, V602, 0xf7888aec, V630]

================================

Block 0x6e8
[0x6e8:0x6eb]
---
Predecessors: [0x6db]
Successors: []
---
0x6e8 PUSH1 0x0
0x6ea DUP1
0x6eb REVERT
---
0x6e8: V648 = 0x0
0x6eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, 0x0, V602, 0x0, V602, 0xf7888aec, V630]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, 0x0, V602, 0x0, V602, 0xf7888aec, V630]

================================

Block 0x6ec
[0x6ec:0x74d]
---
Predecessors: [0x6db]
Successors: [0x74e]
---
0x6ec JUMPDEST
0x6ed POP
0x6ee POP
0x6ef POP
0x6f0 PUSH1 0x40
0x6f2 MLOAD
0x6f3 DUP1
0x6f4 MLOAD
0x6f5 SWAP1
0x6f6 POP
0x6f7 SWAP1
0x6f8 POP
0x6f9 PUSH1 0x0
0x6fb DUP1
0x6fc MLOAD
0x6fd PUSH1 0x20
0x6ff PUSH2 0xc66
0x702 DUP4
0x703 CODECOPY
0x704 DUP2
0x705 MLOAD
0x706 SWAP2
0x707 MSTORE
0x708 DUP5
0x709 PUSH20 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x71e DUP4
0x71f PUSH1 0x40
0x721 MLOAD
0x722 PUSH1 0x1
0x724 PUSH1 0xa0
0x726 PUSH1 0x2
0x728 EXP
0x729 SUB
0x72a SWAP4
0x72b DUP5
0x72c AND
0x72d DUP2
0x72e MSTORE
0x72f SWAP2
0x730 SWAP1
0x731 SWAP3
0x732 AND
0x733 PUSH1 0x20
0x735 DUP3
0x736 ADD
0x737 MSTORE
0x738 PUSH1 0x40
0x73a DUP1
0x73b DUP3
0x73c ADD
0x73d SWAP3
0x73e SWAP1
0x73f SWAP3
0x740 MSTORE
0x741 PUSH1 0x60
0x743 ADD
0x744 SWAP1
0x745 MLOAD
0x746 DUP1
0x747 SWAP2
0x748 SUB
0x749 SWAP1
0x74a LOG1
0x74b DUP1
0x74c SWAP3
0x74d POP
---
0x6ec: JUMPDEST 
0x6f0: V649 = 0x40
0x6f2: V650 = M[0x40]
0x6f4: V651 = M[V650]
0x6f9: V652 = 0x0
0x6fc: V653 = M[0x0]
0x6fd: V654 = 0x20
0x6ff: V655 = 0xc66
0x703: CODECOPY 0x0 0xc66 0x20
0x705: V656 = M[0x0]
0x707: M[0x0] = V653
0x709: V657 = 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x71f: V658 = 0x40
0x721: V659 = M[0x40]
0x722: V660 = 0x1
0x724: V661 = 0xa0
0x726: V662 = 0x2
0x728: V663 = EXP 0x2 0xa0
0x729: V664 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72c: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xd8912c10681d8b21fd3742244f44658dba12264e
0x72e: M[V659] = 0xd8912c10681d8b21fd3742244f44658dba12264e
0x732: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x733: V667 = 0x20
0x736: V668 = ADD V659 0x20
0x737: M[V668] = 0x4c2fb430e95954bcfa54ce4741a9fc2ff6e415ad
0x738: V669 = 0x40
0x73c: V670 = ADD V659 0x40
0x740: M[V670] = V651
0x741: V671 = 0x60
0x743: V672 = ADD 0x60 V659
0x745: V673 = M[0x40]
0x748: V674 = SUB V672 V673
0x74a: LOG V673 V674 V656
---
Entry stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, 0x0, V602, 0x0, V602, 0xf7888aec, V630]
Stack pops: 7
Stack additions: [S6, V651, S4, V651]
Exit stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, V651, V602, V651]

================================

Block 0x74e
[0x74e:0x74e]
---
Predecessors: [0x6ec]
Successors: [0x74f]
---
0x74e JUMPDEST
---
0x74e: JUMPDEST 
---
Entry stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, V651, V602, V651]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, V651, V602, V651]

================================

Block 0x74f
[0x74f:0x755]
---
Predecessors: [0x74e]
Successors: [0x15a]
---
0x74f JUMPDEST
0x750 POP
0x751 POP
0x752 SWAP2
0x753 SWAP1
0x754 POP
0x755 JUMP
---
0x74f: JUMPDEST 
0x755: JUMP 0x15a
---
Entry stack: [V12, 0x15a, 0xd8912c10681d8b21fd3742244f44658dba12264e, V651, V602, V651]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V651]

================================

Block 0x756
[0x756:0x76f]
---
Predecessors: [0x177]
Successors: [0x770, 0x774]
---
0x756 JUMPDEST
0x757 PUSH1 0x0
0x759 DUP1
0x75a SLOAD
0x75b DUP2
0x75c SWAP1
0x75d CALLER
0x75e PUSH1 0x1
0x760 PUSH1 0xa0
0x762 PUSH1 0x2
0x764 EXP
0x765 SUB
0x766 SWAP1
0x767 DUP2
0x768 AND
0x769 SWAP2
0x76a AND
0x76b EQ
0x76c PUSH2 0x774
0x76f JUMPI
---
0x756: JUMPDEST 
0x757: V675 = 0x0
0x75a: V676 = S[0x0]
0x75d: V677 = CALLER
0x75e: V678 = 0x1
0x760: V679 = 0xa0
0x762: V680 = 0x2
0x764: V681 = EXP 0x2 0xa0
0x765: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x768: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0x76a: V684 = AND V676 0xffffffffffffffffffffffffffffffffffffffff
0x76b: V685 = EQ V684 V683
0x76c: V686 = 0x774
0x76f: JUMPI 0x774 V685
---
Entry stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, 0x0]

================================

Block 0x770
[0x770:0x773]
---
Predecessors: [0x756]
Successors: []
---
0x770 PUSH1 0x0
0x772 DUP1
0x773 REVERT
---
0x770: V687 = 0x0
0x773: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, 0x0]

================================

Block 0x774
[0x774:0x829]
---
Predecessors: [0x756]
Successors: [0x82a, 0x82e]
---
0x774 JUMPDEST
0x775 POP
0x776 PUSH1 0x1
0x778 SLOAD
0x779 PUSH1 0x1
0x77b PUSH1 0xa0
0x77d PUSH1 0x2
0x77f EXP
0x780 SUB
0x781 AND
0x782 DUP1
0x783 PUSH4 0x6c86888b
0x788 DUP15
0x789 DUP15
0x78a DUP15
0x78b DUP15
0x78c DUP15
0x78d DUP15
0x78e DUP15
0x78f DUP15
0x790 DUP15
0x791 DUP15
0x792 DUP15
0x793 ADDRESS
0x794 PUSH1 0x0
0x796 PUSH1 0x40
0x798 MLOAD
0x799 PUSH1 0x20
0x79b ADD
0x79c MSTORE
0x79d PUSH1 0x40
0x79f MLOAD
0x7a0 PUSH1 0xe0
0x7a2 PUSH1 0x2
0x7a4 EXP
0x7a5 PUSH4 0xffffffff
0x7aa DUP16
0x7ab AND
0x7ac MUL
0x7ad DUP2
0x7ae MSTORE
0x7af PUSH1 0x1
0x7b1 PUSH1 0xa0
0x7b3 PUSH1 0x2
0x7b5 EXP
0x7b6 SUB
0x7b7 SWAP13
0x7b8 DUP14
0x7b9 AND
0x7ba PUSH1 0x4
0x7bc DUP3
0x7bd ADD
0x7be MSTORE
0x7bf PUSH1 0x24
0x7c1 DUP2
0x7c2 ADD
0x7c3 SWAP12
0x7c4 SWAP1
0x7c5 SWAP12
0x7c6 MSTORE
0x7c7 SWAP9
0x7c8 DUP12
0x7c9 AND
0x7ca PUSH1 0x44
0x7cc DUP12
0x7cd ADD
0x7ce MSTORE
0x7cf PUSH1 0x64
0x7d1 DUP11
0x7d2 ADD
0x7d3 SWAP8
0x7d4 SWAP1
0x7d5 SWAP8
0x7d6 MSTORE
0x7d7 PUSH1 0x84
0x7d9 DUP10
0x7da ADD
0x7db SWAP6
0x7dc SWAP1
0x7dd SWAP6
0x7de MSTORE
0x7df PUSH1 0xa4
0x7e1 DUP9
0x7e2 ADD
0x7e3 SWAP4
0x7e4 SWAP1
0x7e5 SWAP4
0x7e6 MSTORE
0x7e7 SWAP1
0x7e8 DUP8
0x7e9 AND
0x7ea PUSH1 0xc4
0x7ec DUP8
0x7ed ADD
0x7ee MSTORE
0x7ef PUSH1 0xff
0x7f1 AND
0x7f2 PUSH1 0xe4
0x7f4 DUP7
0x7f5 ADD
0x7f6 MSTORE
0x7f7 PUSH2 0x104
0x7fa DUP6
0x7fb ADD
0x7fc MSTORE
0x7fd PUSH2 0x124
0x800 DUP5
0x801 ADD
0x802 MSTORE
0x803 PUSH2 0x144
0x806 DUP4
0x807 ADD
0x808 MSTORE
0x809 SWAP1
0x80a SWAP2
0x80b AND
0x80c PUSH2 0x164
0x80f DUP3
0x810 ADD
0x811 MSTORE
0x812 PUSH2 0x184
0x815 ADD
0x816 PUSH1 0x20
0x818 PUSH1 0x40
0x81a MLOAD
0x81b DUP1
0x81c DUP4
0x81d SUB
0x81e DUP2
0x81f PUSH1 0x0
0x821 DUP8
0x822 DUP1
0x823 EXTCODESIZE
0x824 ISZERO
0x825 ISZERO
0x826 PUSH2 0x82e
0x829 JUMPI
---
0x774: JUMPDEST 
0x776: V688 = 0x1
0x778: V689 = S[0x1]
0x779: V690 = 0x1
0x77b: V691 = 0xa0
0x77d: V692 = 0x2
0x77f: V693 = EXP 0x2 0xa0
0x780: V694 = SUB 0x10000000000000000000000000000000000000000 0x1
0x781: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0x783: V696 = 0x6c86888b
0x793: V697 = ADDRESS
0x794: V698 = 0x0
0x796: V699 = 0x40
0x798: V700 = M[0x40]
0x799: V701 = 0x20
0x79b: V702 = ADD 0x20 V700
0x79c: M[V702] = 0x0
0x79d: V703 = 0x40
0x79f: V704 = M[0x40]
0x7a0: V705 = 0xe0
0x7a2: V706 = 0x2
0x7a4: V707 = EXP 0x2 0xe0
0x7a5: V708 = 0xffffffff
0x7ab: V709 = AND 0x6c86888b 0xffffffff
0x7ac: V710 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x7ae: M[V704] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x7af: V711 = 0x1
0x7b1: V712 = 0xa0
0x7b3: V713 = 0x2
0x7b5: V714 = EXP 0x2 0xa0
0x7b6: V715 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b9: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x7ba: V717 = 0x4
0x7bd: V718 = ADD V704 0x4
0x7be: M[V718] = V716
0x7bf: V719 = 0x24
0x7c2: V720 = ADD V704 0x24
0x7c6: M[V720] = V145
0x7c9: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x7ca: V722 = 0x44
0x7cd: V723 = ADD V704 0x44
0x7ce: M[V723] = V721
0x7cf: V724 = 0x64
0x7d2: V725 = ADD V704 0x64
0x7d6: M[V725] = V150
0x7d7: V726 = 0x84
0x7da: V727 = ADD V704 0x84
0x7de: M[V727] = V152
0x7df: V728 = 0xa4
0x7e2: V729 = ADD V704 0xa4
0x7e6: M[V729] = V154
0x7e9: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x7ea: V731 = 0xc4
0x7ed: V732 = ADD V704 0xc4
0x7ee: M[V732] = V730
0x7ef: V733 = 0xff
0x7f1: V734 = AND 0xff V161
0x7f2: V735 = 0xe4
0x7f5: V736 = ADD V704 0xe4
0x7f6: M[V736] = V734
0x7f7: V737 = 0x104
0x7fb: V738 = ADD V704 0x104
0x7fc: M[V738] = V163
0x7fd: V739 = 0x124
0x801: V740 = ADD V704 0x124
0x802: M[V740] = V165
0x803: V741 = 0x144
0x807: V742 = ADD V704 0x144
0x808: M[V742] = V167
0x80b: V743 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0x80c: V744 = 0x164
0x810: V745 = ADD V704 0x164
0x811: M[V745] = V743
0x812: V746 = 0x184
0x815: V747 = ADD 0x184 V704
0x816: V748 = 0x20
0x818: V749 = 0x40
0x81a: V750 = M[0x40]
0x81d: V751 = SUB V747 V750
0x81f: V752 = 0x0
0x823: V753 = EXTCODESIZE V695
0x824: V754 = ISZERO V753
0x825: V755 = ISZERO V754
0x826: V756 = 0x82e
0x829: JUMPI 0x82e V755
---
Entry stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V695, V695, 0x6c86888b, V747, 0x20, V750, V751, V750, 0x0, V695]
Exit stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, V695, V695, 0x6c86888b, V747, 0x20, V750, V751, V750, 0x0, V695]

================================

Block 0x82a
[0x82a:0x82d]
---
Predecessors: [0x774]
Successors: []
---
0x82a PUSH1 0x0
0x82c DUP1
0x82d REVERT
---
0x82a: V757 = 0x0
0x82d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, V695, V695, 0x6c86888b, V747, 0x20, V750, V751, V750, 0x0, V695]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, V695, V695, 0x6c86888b, V747, 0x20, V750, V751, V750, 0x0, V695]

================================

Block 0x82e
[0x82e:0x83a]
---
Predecessors: [0x774]
Successors: [0x83b, 0x83f]
---
0x82e JUMPDEST
0x82f PUSH2 0x2c6
0x832 GAS
0x833 SUB
0x834 CALL
0x835 ISZERO
0x836 ISZERO
0x837 PUSH2 0x83f
0x83a JUMPI
---
0x82e: JUMPDEST 
0x82f: V758 = 0x2c6
0x832: V759 = GAS
0x833: V760 = SUB V759 0x2c6
0x834: V761 = CALL V760 V695 0x0 V750 V751 V750 0x20
0x835: V762 = ISZERO V761
0x836: V763 = ISZERO V762
0x837: V764 = 0x83f
0x83a: JUMPI 0x83f V763
---
Entry stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, V695, V695, 0x6c86888b, V747, 0x20, V750, V751, V750, 0x0, V695]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, V695, V695, 0x6c86888b, V747]

================================

Block 0x83b
[0x83b:0x83e]
---
Predecessors: [0x82e]
Successors: []
---
0x83b PUSH1 0x0
0x83d DUP1
0x83e REVERT
---
0x83b: V765 = 0x0
0x83e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, V695, V695, 0x6c86888b, V747]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, V695, V695, 0x6c86888b, V747]

================================

Block 0x83f
[0x83f:0x84a]
---
Predecessors: [0x82e]
Successors: [0x84b]
---
0x83f JUMPDEST
0x840 POP
0x841 POP
0x842 POP
0x843 PUSH1 0x40
0x845 MLOAD
0x846 DUP1
0x847 MLOAD
0x848 SWAP3
0x849 POP
0x84a POP
---
0x83f: JUMPDEST 
0x843: V766 = 0x40
0x845: V767 = M[0x40]
0x847: V768 = M[V767]
---
Entry stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, 0x0, V695, V695, 0x6c86888b, V747]
Stack pops: 5
Stack additions: [V768, S3]
Exit stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, V768, V695]

================================

Block 0x84b
[0x84b:0x84b]
---
Predecessors: [0x83f]
Successors: [0x84c]
---
0x84b JUMPDEST
---
0x84b: JUMPDEST 
---
Entry stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, V768, V695]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, V768, V695]

================================

Block 0x84c
[0x84c:0x85b]
---
Predecessors: [0x84b]
Successors: [0x1b9]
---
0x84c JUMPDEST
0x84d POP
0x84e SWAP12
0x84f SWAP11
0x850 POP
0x851 POP
0x852 POP
0x853 POP
0x854 POP
0x855 POP
0x856 POP
0x857 POP
0x858 POP
0x859 POP
0x85a POP
0x85b JUMP
---
0x84c: JUMPDEST 
0x85b: JUMP 0x1b9
---
Entry stack: [V12, 0x1b9, V143, V145, V148, V150, V152, V154, V157, V161, V163, V165, V167, V768, V695]
Stack pops: 14
Stack additions: [S1]
Exit stack: [V12, V768]

================================

Block 0x85c
[0x85c:0x877]
---
Predecessors: [0x1d8]
Successors: [0x878, 0x87c]
---
0x85c JUMPDEST
0x85d PUSH1 0x0
0x85f DUP1
0x860 SLOAD
0x861 DUP2
0x862 SWAP1
0x863 DUP2
0x864 SWAP1
0x865 CALLER
0x866 PUSH1 0x1
0x868 PUSH1 0xa0
0x86a PUSH1 0x2
0x86c EXP
0x86d SUB
0x86e SWAP1
0x86f DUP2
0x870 AND
0x871 SWAP2
0x872 AND
0x873 EQ
0x874 PUSH2 0x87c
0x877 JUMPI
---
0x85c: JUMPDEST 
0x85d: V769 = 0x0
0x860: V770 = S[0x0]
0x865: V771 = CALLER
0x866: V772 = 0x1
0x868: V773 = 0xa0
0x86a: V774 = 0x2
0x86c: V775 = EXP 0x2 0xa0
0x86d: V776 = SUB 0x10000000000000000000000000000000000000000 0x1
0x870: V777 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x872: V778 = AND V770 0xffffffffffffffffffffffffffffffffffffffff
0x873: V779 = EQ V778 V777
0x874: V780 = 0x87c
0x877: JUMPI 0x87c V779
---
Entry stack: [V12, 0x15a, V190]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x15a, V190, 0x0, 0x0, 0x0]

================================

Block 0x878
[0x878:0x87b]
---
Predecessors: [0x85c]
Successors: []
---
0x878 PUSH1 0x0
0x87a DUP1
0x87b REVERT
---
0x878: V781 = 0x0
0x87b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V190, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V190, 0x0, 0x0, 0x0]

================================

Block 0x87c
[0x87c:0x90f]
---
Predecessors: [0x85c]
Successors: [0x910, 0x914]
---
0x87c JUMPDEST
0x87d PUSH1 0x0
0x87f DUP1
0x880 MLOAD
0x881 PUSH1 0x20
0x883 PUSH2 0xc46
0x886 DUP4
0x887 CODECOPY
0x888 DUP2
0x889 MLOAD
0x88a SWAP2
0x88b MSTORE
0x88c DUP5
0x88d ADDRESS
0x88e PUSH1 0x40
0x890 MLOAD
0x891 PUSH1 0x1
0x893 PUSH1 0xa0
0x895 PUSH1 0x2
0x897 EXP
0x898 SUB
0x899 SWAP3
0x89a DUP4
0x89b AND
0x89c DUP2
0x89d MSTORE
0x89e SWAP2
0x89f AND
0x8a0 PUSH1 0x20
0x8a2 DUP3
0x8a3 ADD
0x8a4 MSTORE
0x8a5 PUSH1 0x40
0x8a7 SWAP1
0x8a8 DUP2
0x8a9 ADD
0x8aa SWAP1
0x8ab MLOAD
0x8ac DUP1
0x8ad SWAP2
0x8ae SUB
0x8af SWAP1
0x8b0 LOG1
0x8b1 PUSH1 0x1
0x8b3 SLOAD
0x8b4 PUSH1 0x1
0x8b6 PUSH1 0xa0
0x8b8 PUSH1 0x2
0x8ba EXP
0x8bb SUB
0x8bc AND
0x8bd SWAP2
0x8be POP
0x8bf DUP2
0x8c0 PUSH4 0xf7888aec
0x8c5 DUP6
0x8c6 ADDRESS
0x8c7 PUSH1 0x0
0x8c9 PUSH1 0x40
0x8cb MLOAD
0x8cc PUSH1 0x20
0x8ce ADD
0x8cf MSTORE
0x8d0 PUSH1 0x40
0x8d2 MLOAD
0x8d3 PUSH1 0xe0
0x8d5 PUSH1 0x2
0x8d7 EXP
0x8d8 PUSH4 0xffffffff
0x8dd DUP6
0x8de AND
0x8df MUL
0x8e0 DUP2
0x8e1 MSTORE
0x8e2 PUSH1 0x1
0x8e4 PUSH1 0xa0
0x8e6 PUSH1 0x2
0x8e8 EXP
0x8e9 SUB
0x8ea SWAP3
0x8eb DUP4
0x8ec AND
0x8ed PUSH1 0x4
0x8ef DUP3
0x8f0 ADD
0x8f1 MSTORE
0x8f2 SWAP2
0x8f3 AND
0x8f4 PUSH1 0x24
0x8f6 DUP3
0x8f7 ADD
0x8f8 MSTORE
0x8f9 PUSH1 0x44
0x8fb ADD
0x8fc PUSH1 0x20
0x8fe PUSH1 0x40
0x900 MLOAD
0x901 DUP1
0x902 DUP4
0x903 SUB
0x904 DUP2
0x905 PUSH1 0x0
0x907 DUP8
0x908 DUP1
0x909 EXTCODESIZE
0x90a ISZERO
0x90b ISZERO
0x90c PUSH2 0x914
0x90f JUMPI
---
0x87c: JUMPDEST 
0x87d: V782 = 0x0
0x880: V783 = M[0x0]
0x881: V784 = 0x20
0x883: V785 = 0xc46
0x887: CODECOPY 0x0 0xc46 0x20
0x889: V786 = M[0x0]
0x88b: M[0x0] = V783
0x88d: V787 = ADDRESS
0x88e: V788 = 0x40
0x890: V789 = M[0x40]
0x891: V790 = 0x1
0x893: V791 = 0xa0
0x895: V792 = 0x2
0x897: V793 = EXP 0x2 0xa0
0x898: V794 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89b: V795 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x89d: M[V789] = V795
0x89f: V796 = AND 0xffffffffffffffffffffffffffffffffffffffff V787
0x8a0: V797 = 0x20
0x8a3: V798 = ADD V789 0x20
0x8a4: M[V798] = V796
0x8a5: V799 = 0x40
0x8a9: V800 = ADD 0x40 V789
0x8ab: V801 = M[0x40]
0x8ae: V802 = SUB V800 V801
0x8b0: LOG V801 V802 V786
0x8b1: V803 = 0x1
0x8b3: V804 = S[0x1]
0x8b4: V805 = 0x1
0x8b6: V806 = 0xa0
0x8b8: V807 = 0x2
0x8ba: V808 = EXP 0x2 0xa0
0x8bb: V809 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8bc: V810 = AND 0xffffffffffffffffffffffffffffffffffffffff V804
0x8c0: V811 = 0xf7888aec
0x8c6: V812 = ADDRESS
0x8c7: V813 = 0x0
0x8c9: V814 = 0x40
0x8cb: V815 = M[0x40]
0x8cc: V816 = 0x20
0x8ce: V817 = ADD 0x20 V815
0x8cf: M[V817] = 0x0
0x8d0: V818 = 0x40
0x8d2: V819 = M[0x40]
0x8d3: V820 = 0xe0
0x8d5: V821 = 0x2
0x8d7: V822 = EXP 0x2 0xe0
0x8d8: V823 = 0xffffffff
0x8de: V824 = AND 0xf7888aec 0xffffffff
0x8df: V825 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x8e1: M[V819] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x8e2: V826 = 0x1
0x8e4: V827 = 0xa0
0x8e6: V828 = 0x2
0x8e8: V829 = EXP 0x2 0xa0
0x8e9: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ec: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x8ed: V832 = 0x4
0x8f0: V833 = ADD V819 0x4
0x8f1: M[V833] = V831
0x8f3: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x8f4: V835 = 0x24
0x8f7: V836 = ADD V819 0x24
0x8f8: M[V836] = V834
0x8f9: V837 = 0x44
0x8fb: V838 = ADD 0x44 V819
0x8fc: V839 = 0x20
0x8fe: V840 = 0x40
0x900: V841 = M[0x40]
0x903: V842 = SUB V838 V841
0x905: V843 = 0x0
0x909: V844 = EXTCODESIZE V810
0x90a: V845 = ISZERO V844
0x90b: V846 = ISZERO V845
0x90c: V847 = 0x914
0x90f: JUMPI 0x914 V846
---
Entry stack: [V12, 0x15a, V190, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V810, S0, V810, 0xf7888aec, V838, 0x20, V841, V842, V841, 0x0, V810]
Exit stack: [V12, 0x15a, V190, 0x0, V810, 0x0, V810, 0xf7888aec, V838, 0x20, V841, V842, V841, 0x0, V810]

================================

Block 0x910
[0x910:0x913]
---
Predecessors: [0x87c]
Successors: []
---
0x910 PUSH1 0x0
0x912 DUP1
0x913 REVERT
---
0x910: V848 = 0x0
0x913: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V190, 0x0, V810, 0x0, V810, 0xf7888aec, V838, 0x20, V841, V842, V841, 0x0, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V190, 0x0, V810, 0x0, V810, 0xf7888aec, V838, 0x20, V841, V842, V841, 0x0, V810]

================================

Block 0x914
[0x914:0x920]
---
Predecessors: [0x87c]
Successors: [0x921, 0x925]
---
0x914 JUMPDEST
0x915 PUSH2 0x2c6
0x918 GAS
0x919 SUB
0x91a CALL
0x91b ISZERO
0x91c ISZERO
0x91d PUSH2 0x925
0x920 JUMPI
---
0x914: JUMPDEST 
0x915: V849 = 0x2c6
0x918: V850 = GAS
0x919: V851 = SUB V850 0x2c6
0x91a: V852 = CALL V851 V810 0x0 V841 V842 V841 0x20
0x91b: V853 = ISZERO V852
0x91c: V854 = ISZERO V853
0x91d: V855 = 0x925
0x920: JUMPI 0x925 V854
---
Entry stack: [V12, 0x15a, V190, 0x0, V810, 0x0, V810, 0xf7888aec, V838, 0x20, V841, V842, V841, 0x0, V810]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, V190, 0x0, V810, 0x0, V810, 0xf7888aec, V838]

================================

Block 0x921
[0x921:0x924]
---
Predecessors: [0x914]
Successors: []
---
0x921 PUSH1 0x0
0x923 DUP1
0x924 REVERT
---
0x921: V856 = 0x0
0x924: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V190, 0x0, V810, 0x0, V810, 0xf7888aec, V838]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V190, 0x0, V810, 0x0, V810, 0xf7888aec, V838]

================================

Block 0x925
[0x925:0x972]
---
Predecessors: [0x914]
Successors: [0x973]
---
0x925 JUMPDEST
0x926 POP
0x927 POP
0x928 POP
0x929 PUSH1 0x40
0x92b MLOAD
0x92c DUP1
0x92d MLOAD
0x92e SWAP1
0x92f POP
0x930 SWAP1
0x931 POP
0x932 PUSH1 0x0
0x934 DUP1
0x935 MLOAD
0x936 PUSH1 0x20
0x938 PUSH2 0xc66
0x93b DUP4
0x93c CODECOPY
0x93d DUP2
0x93e MLOAD
0x93f SWAP2
0x940 MSTORE
0x941 DUP5
0x942 ADDRESS
0x943 DUP4
0x944 PUSH1 0x40
0x946 MLOAD
0x947 PUSH1 0x1
0x949 PUSH1 0xa0
0x94b PUSH1 0x2
0x94d EXP
0x94e SUB
0x94f SWAP4
0x950 DUP5
0x951 AND
0x952 DUP2
0x953 MSTORE
0x954 SWAP2
0x955 SWAP1
0x956 SWAP3
0x957 AND
0x958 PUSH1 0x20
0x95a DUP3
0x95b ADD
0x95c MSTORE
0x95d PUSH1 0x40
0x95f DUP1
0x960 DUP3
0x961 ADD
0x962 SWAP3
0x963 SWAP1
0x964 SWAP3
0x965 MSTORE
0x966 PUSH1 0x60
0x968 ADD
0x969 SWAP1
0x96a MLOAD
0x96b DUP1
0x96c SWAP2
0x96d SUB
0x96e SWAP1
0x96f LOG1
0x970 DUP1
0x971 SWAP3
0x972 POP
---
0x925: JUMPDEST 
0x929: V857 = 0x40
0x92b: V858 = M[0x40]
0x92d: V859 = M[V858]
0x932: V860 = 0x0
0x935: V861 = M[0x0]
0x936: V862 = 0x20
0x938: V863 = 0xc66
0x93c: CODECOPY 0x0 0xc66 0x20
0x93e: V864 = M[0x0]
0x940: M[0x0] = V861
0x942: V865 = ADDRESS
0x944: V866 = 0x40
0x946: V867 = M[0x40]
0x947: V868 = 0x1
0x949: V869 = 0xa0
0x94b: V870 = 0x2
0x94d: V871 = EXP 0x2 0xa0
0x94e: V872 = SUB 0x10000000000000000000000000000000000000000 0x1
0x951: V873 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x953: M[V867] = V873
0x957: V874 = AND 0xffffffffffffffffffffffffffffffffffffffff V865
0x958: V875 = 0x20
0x95b: V876 = ADD V867 0x20
0x95c: M[V876] = V874
0x95d: V877 = 0x40
0x961: V878 = ADD V867 0x40
0x965: M[V878] = V859
0x966: V879 = 0x60
0x968: V880 = ADD 0x60 V867
0x96a: V881 = M[0x40]
0x96d: V882 = SUB V880 V881
0x96f: LOG V881 V882 V864
---
Entry stack: [V12, 0x15a, V190, 0x0, V810, 0x0, V810, 0xf7888aec, V838]
Stack pops: 7
Stack additions: [S6, V859, S4, V859]
Exit stack: [V12, 0x15a, V190, V859, V810, V859]

================================

Block 0x973
[0x973:0x973]
---
Predecessors: [0x925]
Successors: [0x974]
---
0x973 JUMPDEST
---
0x973: JUMPDEST 
---
Entry stack: [V12, 0x15a, V190, V859, V810, V859]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V190, V859, V810, V859]

================================

Block 0x974
[0x974:0x97a]
---
Predecessors: [0x973]
Successors: [0x15a]
---
0x974 JUMPDEST
0x975 POP
0x976 POP
0x977 SWAP2
0x978 SWAP1
0x979 POP
0x97a JUMP
---
0x974: JUMPDEST 
0x97a: JUMP 0x15a
---
Entry stack: [V12, 0x15a, V190, V859, V810, V859]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V859]

================================

Block 0x97b
[0x97b:0x989]
---
Predecessors: [0x209]
Successors: [0x211]
---
0x97b JUMPDEST
0x97c PUSH1 0x0
0x97e SLOAD
0x97f PUSH1 0x1
0x981 PUSH1 0xa0
0x983 PUSH1 0x2
0x985 EXP
0x986 SUB
0x987 AND
0x988 DUP2
0x989 JUMP
---
0x97b: JUMPDEST 
0x97c: V883 = 0x0
0x97e: V884 = S[0x0]
0x97f: V885 = 0x1
0x981: V886 = 0xa0
0x983: V887 = 0x2
0x985: V888 = EXP 0x2 0xa0
0x986: V889 = SUB 0x10000000000000000000000000000000000000000 0x1
0x987: V890 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0x989: JUMP 0x211
---
Entry stack: [V12, 0x211]
Stack pops: 1
Stack additions: [S0, V890]
Exit stack: [V12, 0x211, V890]

================================

Block 0x98a
[0x98a:0x9a3]
---
Predecessors: [0x238]
Successors: [0x9a4, 0x9a8]
---
0x98a JUMPDEST
0x98b PUSH1 0x0
0x98d DUP1
0x98e SLOAD
0x98f DUP2
0x990 SWAP1
0x991 CALLER
0x992 PUSH1 0x1
0x994 PUSH1 0xa0
0x996 PUSH1 0x2
0x998 EXP
0x999 SUB
0x99a SWAP1
0x99b DUP2
0x99c AND
0x99d SWAP2
0x99e AND
0x99f EQ
0x9a0 PUSH2 0x9a8
0x9a3 JUMPI
---
0x98a: JUMPDEST 
0x98b: V891 = 0x0
0x98e: V892 = S[0x0]
0x991: V893 = CALLER
0x992: V894 = 0x1
0x994: V895 = 0xa0
0x996: V896 = 0x2
0x998: V897 = EXP 0x2 0xa0
0x999: V898 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99c: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff V893
0x99e: V900 = AND V892 0xffffffffffffffffffffffffffffffffffffffff
0x99f: V901 = EQ V900 V899
0x9a0: V902 = 0x9a8
0x9a3: JUMPI 0x9a8 V901
---
Entry stack: [V12, 0x15a, V230]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x15a, V230, 0x0, 0x0]

================================

Block 0x9a4
[0x9a4:0x9a7]
---
Predecessors: [0x98a]
Successors: []
---
0x9a4 PUSH1 0x0
0x9a6 DUP1
0x9a7 REVERT
---
0x9a4: V903 = 0x0
0x9a7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V230, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V230, 0x0, 0x0]

================================

Block 0x9a8
[0x9a8:0xa20]
---
Predecessors: [0x98a]
Successors: [0xa21]
---
0x9a8 JUMPDEST
0x9a9 PUSH1 0x0
0x9ab DUP1
0x9ac MLOAD
0x9ad PUSH1 0x20
0x9af PUSH2 0xc46
0x9b2 DUP4
0x9b3 CODECOPY
0x9b4 DUP2
0x9b5 MLOAD
0x9b6 SWAP2
0x9b7 MSTORE
0x9b8 DUP4
0x9b9 ADDRESS
0x9ba PUSH1 0x40
0x9bc MLOAD
0x9bd PUSH1 0x1
0x9bf PUSH1 0xa0
0x9c1 PUSH1 0x2
0x9c3 EXP
0x9c4 SUB
0x9c5 SWAP3
0x9c6 DUP4
0x9c7 AND
0x9c8 DUP2
0x9c9 MSTORE
0x9ca SWAP2
0x9cb AND
0x9cc PUSH1 0x20
0x9ce DUP3
0x9cf ADD
0x9d0 MSTORE
0x9d1 PUSH1 0x40
0x9d3 SWAP1
0x9d4 DUP2
0x9d5 ADD
0x9d6 SWAP1
0x9d7 MLOAD
0x9d8 DUP1
0x9d9 SWAP2
0x9da SUB
0x9db SWAP1
0x9dc LOG1
0x9dd POP
0x9de PUSH1 0x1
0x9e0 PUSH1 0x0
0x9e2 DUP1
0x9e3 MLOAD
0x9e4 PUSH1 0x20
0x9e6 PUSH2 0xc66
0x9e9 DUP4
0x9ea CODECOPY
0x9eb DUP2
0x9ec MLOAD
0x9ed SWAP2
0x9ee MSTORE
0x9ef DUP4
0x9f0 ADDRESS
0x9f1 DUP4
0x9f2 PUSH1 0x40
0x9f4 MLOAD
0x9f5 PUSH1 0x1
0x9f7 PUSH1 0xa0
0x9f9 PUSH1 0x2
0x9fb EXP
0x9fc SUB
0x9fd SWAP4
0x9fe DUP5
0x9ff AND
0xa00 DUP2
0xa01 MSTORE
0xa02 SWAP2
0xa03 SWAP1
0xa04 SWAP3
0xa05 AND
0xa06 PUSH1 0x20
0xa08 DUP3
0xa09 ADD
0xa0a MSTORE
0xa0b PUSH1 0x40
0xa0d DUP1
0xa0e DUP3
0xa0f ADD
0xa10 SWAP3
0xa11 SWAP1
0xa12 SWAP3
0xa13 MSTORE
0xa14 PUSH1 0x60
0xa16 ADD
0xa17 SWAP1
0xa18 MLOAD
0xa19 DUP1
0xa1a SWAP2
0xa1b SUB
0xa1c SWAP1
0xa1d LOG1
0xa1e DUP1
0xa1f SWAP2
0xa20 POP
---
0x9a8: JUMPDEST 
0x9a9: V904 = 0x0
0x9ac: V905 = M[0x0]
0x9ad: V906 = 0x20
0x9af: V907 = 0xc46
0x9b3: CODECOPY 0x0 0xc46 0x20
0x9b5: V908 = M[0x0]
0x9b7: M[0x0] = V905
0x9b9: V909 = ADDRESS
0x9ba: V910 = 0x40
0x9bc: V911 = M[0x40]
0x9bd: V912 = 0x1
0x9bf: V913 = 0xa0
0x9c1: V914 = 0x2
0x9c3: V915 = EXP 0x2 0xa0
0x9c4: V916 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c7: V917 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x9c9: M[V911] = V917
0x9cb: V918 = AND 0xffffffffffffffffffffffffffffffffffffffff V909
0x9cc: V919 = 0x20
0x9cf: V920 = ADD V911 0x20
0x9d0: M[V920] = V918
0x9d1: V921 = 0x40
0x9d5: V922 = ADD 0x40 V911
0x9d7: V923 = M[0x40]
0x9da: V924 = SUB V922 V923
0x9dc: LOG V923 V924 V908
0x9de: V925 = 0x1
0x9e0: V926 = 0x0
0x9e3: V927 = M[0x0]
0x9e4: V928 = 0x20
0x9e6: V929 = 0xc66
0x9ea: CODECOPY 0x0 0xc66 0x20
0x9ec: V930 = M[0x0]
0x9ee: M[0x0] = V927
0x9f0: V931 = ADDRESS
0x9f2: V932 = 0x40
0x9f4: V933 = M[0x40]
0x9f5: V934 = 0x1
0x9f7: V935 = 0xa0
0x9f9: V936 = 0x2
0x9fb: V937 = EXP 0x2 0xa0
0x9fc: V938 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ff: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0xa01: M[V933] = V939
0xa05: V940 = AND 0xffffffffffffffffffffffffffffffffffffffff V931
0xa06: V941 = 0x20
0xa09: V942 = ADD V933 0x20
0xa0a: M[V942] = V940
0xa0b: V943 = 0x40
0xa0f: V944 = ADD V933 0x40
0xa13: M[V944] = 0x1
0xa14: V945 = 0x60
0xa16: V946 = ADD 0x60 V933
0xa18: V947 = M[0x40]
0xa1b: V948 = SUB V946 V947
0xa1d: LOG V947 V948 V930
---
Entry stack: [V12, 0x15a, V230, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, 0x1, 0x1]
Exit stack: [V12, 0x15a, V230, 0x1, 0x1]

================================

Block 0xa21
[0xa21:0xa21]
---
Predecessors: [0x9a8]
Successors: [0xa22]
---
0xa21 JUMPDEST
---
0xa21: JUMPDEST 
---
Entry stack: [V12, 0x15a, V230, 0x1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V230, 0x1, 0x1]

================================

Block 0xa22
[0xa22:0xa27]
---
Predecessors: [0xa21]
Successors: [0x15a]
---
0xa22 JUMPDEST
0xa23 POP
0xa24 SWAP2
0xa25 SWAP1
0xa26 POP
0xa27 JUMP
---
0xa22: JUMPDEST 
0xa27: JUMP 0x15a
---
Entry stack: [V12, 0x15a, V230, 0x1, 0x1]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, 0x1]

================================

Block 0xa28
[0xa28:0xaa2]
---
Predecessors: [0x25e]
Successors: [0xaa3]
---
0xa28 JUMPDEST
0xa29 PUSH32 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
0xa4a ADDRESS
0xa4b PUSH1 0x40
0xa4d MLOAD
0xa4e PUSH1 0x1
0xa50 PUSH1 0xa0
0xa52 PUSH1 0x2
0xa54 EXP
0xa55 SUB
0xa56 SWAP1
0xa57 SWAP2
0xa58 AND
0xa59 DUP2
0xa5a MSTORE
0xa5b PUSH1 0x20
0xa5d ADD
0xa5e PUSH1 0x40
0xa60 MLOAD
0xa61 DUP1
0xa62 SWAP2
0xa63 SUB
0xa64 SWAP1
0xa65 LOG1
0xa66 PUSH32 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
0xa87 ADDRESS
0xa88 PUSH1 0x40
0xa8a MLOAD
0xa8b PUSH1 0x1
0xa8d PUSH1 0xa0
0xa8f PUSH1 0x2
0xa91 EXP
0xa92 SUB
0xa93 SWAP1
0xa94 SWAP2
0xa95 AND
0xa96 DUP2
0xa97 MSTORE
0xa98 PUSH1 0x20
0xa9a ADD
0xa9b PUSH1 0x40
0xa9d MLOAD
0xa9e DUP1
0xa9f SWAP2
0xaa0 SUB
0xaa1 SWAP1
0xaa2 LOG1
---
0xa28: JUMPDEST 
0xa29: V949 = 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
0xa4a: V950 = ADDRESS
0xa4b: V951 = 0x40
0xa4d: V952 = M[0x40]
0xa4e: V953 = 0x1
0xa50: V954 = 0xa0
0xa52: V955 = 0x2
0xa54: V956 = EXP 0x2 0xa0
0xa55: V957 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa58: V958 = AND V950 0xffffffffffffffffffffffffffffffffffffffff
0xa5a: M[V952] = V958
0xa5b: V959 = 0x20
0xa5d: V960 = ADD 0x20 V952
0xa5e: V961 = 0x40
0xa60: V962 = M[0x40]
0xa63: V963 = SUB V960 V962
0xa65: LOG V962 V963 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
0xa66: V964 = 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
0xa87: V965 = ADDRESS
0xa88: V966 = 0x40
0xa8a: V967 = M[0x40]
0xa8b: V968 = 0x1
0xa8d: V969 = 0xa0
0xa8f: V970 = 0x2
0xa91: V971 = EXP 0x2 0xa0
0xa92: V972 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa95: V973 = AND V965 0xffffffffffffffffffffffffffffffffffffffff
0xa97: M[V967] = V973
0xa98: V974 = 0x20
0xa9a: V975 = ADD 0x20 V967
0xa9b: V976 = 0x40
0xa9d: V977 = M[0x40]
0xaa0: V978 = SUB V975 V977
0xaa2: LOG V977 V978 0xdbb758fe70d47351a55f51963774f9d9e0c5b67725243e287762cf701e66f639
---
Entry stack: [V12, 0xa5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5]

================================

Block 0xaa3
[0xaa3:0xaa4]
---
Predecessors: [0xa28]
Successors: [0xa5]
---
0xaa3 JUMPDEST
0xaa4 JUMP
---
0xaa3: JUMPDEST 
0xaa4: JUMP 0xa5
---
Entry stack: [V12, 0xa5]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xaa5
[0xaa5:0xabc]
---
Predecessors: [0x273]
Successors: [0xabd, 0xac1]
---
0xaa5 JUMPDEST
0xaa6 PUSH1 0x0
0xaa8 DUP1
0xaa9 SLOAD
0xaaa CALLER
0xaab PUSH1 0x1
0xaad PUSH1 0xa0
0xaaf PUSH1 0x2
0xab1 EXP
0xab2 SUB
0xab3 SWAP1
0xab4 DUP2
0xab5 AND
0xab6 SWAP2
0xab7 AND
0xab8 EQ
0xab9 PUSH2 0xac1
0xabc JUMPI
---
0xaa5: JUMPDEST 
0xaa6: V979 = 0x0
0xaa9: V980 = S[0x0]
0xaaa: V981 = CALLER
0xaab: V982 = 0x1
0xaad: V983 = 0xa0
0xaaf: V984 = 0x2
0xab1: V985 = EXP 0x2 0xa0
0xab2: V986 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab5: V987 = AND 0xffffffffffffffffffffffffffffffffffffffff V981
0xab7: V988 = AND V980 0xffffffffffffffffffffffffffffffffffffffff
0xab8: V989 = EQ V988 V987
0xab9: V990 = 0xac1
0xabc: JUMPI 0xac1 V989
---
Entry stack: [V12, 0xa5, V247]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xa5, V247, 0x0]

================================

Block 0xabd
[0xabd:0xac0]
---
Predecessors: [0xaa5]
Successors: []
---
0xabd PUSH1 0x0
0xabf DUP1
0xac0 REVERT
---
0xabd: V991 = 0x0
0xac0: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V247, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V247, 0x0]

================================

Block 0xac1
[0xac1:0xb06]
---
Predecessors: [0xaa5]
Successors: [0xb07, 0xb0b]
---
0xac1 JUMPDEST
0xac2 POP
0xac3 PUSH1 0x1
0xac5 SLOAD
0xac6 PUSH1 0x1
0xac8 PUSH1 0xa0
0xaca PUSH1 0x2
0xacc EXP
0xacd SUB
0xace AND
0xacf DUP1
0xad0 PUSH4 0x2e1a7d4d
0xad5 DUP4
0xad6 PUSH1 0x40
0xad8 MLOAD
0xad9 PUSH1 0xe0
0xadb PUSH1 0x2
0xadd EXP
0xade PUSH4 0xffffffff
0xae3 DUP5
0xae4 AND
0xae5 MUL
0xae6 DUP2
0xae7 MSTORE
0xae8 PUSH1 0x4
0xaea DUP2
0xaeb ADD
0xaec SWAP2
0xaed SWAP1
0xaee SWAP2
0xaef MSTORE
0xaf0 PUSH1 0x24
0xaf2 ADD
0xaf3 PUSH1 0x0
0xaf5 PUSH1 0x40
0xaf7 MLOAD
0xaf8 DUP1
0xaf9 DUP4
0xafa SUB
0xafb DUP2
0xafc PUSH1 0x0
0xafe DUP8
0xaff DUP1
0xb00 EXTCODESIZE
0xb01 ISZERO
0xb02 ISZERO
0xb03 PUSH2 0xb0b
0xb06 JUMPI
---
0xac1: JUMPDEST 
0xac3: V992 = 0x1
0xac5: V993 = S[0x1]
0xac6: V994 = 0x1
0xac8: V995 = 0xa0
0xaca: V996 = 0x2
0xacc: V997 = EXP 0x2 0xa0
0xacd: V998 = SUB 0x10000000000000000000000000000000000000000 0x1
0xace: V999 = AND 0xffffffffffffffffffffffffffffffffffffffff V993
0xad0: V1000 = 0x2e1a7d4d
0xad6: V1001 = 0x40
0xad8: V1002 = M[0x40]
0xad9: V1003 = 0xe0
0xadb: V1004 = 0x2
0xadd: V1005 = EXP 0x2 0xe0
0xade: V1006 = 0xffffffff
0xae4: V1007 = AND 0x2e1a7d4d 0xffffffff
0xae5: V1008 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0xae7: M[V1002] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0xae8: V1009 = 0x4
0xaeb: V1010 = ADD V1002 0x4
0xaef: M[V1010] = V247
0xaf0: V1011 = 0x24
0xaf2: V1012 = ADD 0x24 V1002
0xaf3: V1013 = 0x0
0xaf5: V1014 = 0x40
0xaf7: V1015 = M[0x40]
0xafa: V1016 = SUB V1012 V1015
0xafc: V1017 = 0x0
0xb00: V1018 = EXTCODESIZE V999
0xb01: V1019 = ISZERO V1018
0xb02: V1020 = ISZERO V1019
0xb03: V1021 = 0xb0b
0xb06: JUMPI 0xb0b V1020
---
Entry stack: [V12, 0xa5, V247, 0x0]
Stack pops: 2
Stack additions: [S1, V999, V999, 0x2e1a7d4d, V1012, 0x0, V1015, V1016, V1015, 0x0, V999]
Exit stack: [V12, 0xa5, V247, V999, V999, 0x2e1a7d4d, V1012, 0x0, V1015, V1016, V1015, 0x0, V999]

================================

Block 0xb07
[0xb07:0xb0a]
---
Predecessors: [0xac1]
Successors: []
---
0xb07 PUSH1 0x0
0xb09 DUP1
0xb0a REVERT
---
0xb07: V1022 = 0x0
0xb0a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V247, V999, V999, 0x2e1a7d4d, V1012, 0x0, V1015, V1016, V1015, 0x0, V999]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V247, V999, V999, 0x2e1a7d4d, V1012, 0x0, V1015, V1016, V1015, 0x0, V999]

================================

Block 0xb0b
[0xb0b:0xb17]
---
Predecessors: [0xac1]
Successors: [0xb18, 0xb1c]
---
0xb0b JUMPDEST
0xb0c PUSH2 0x2c6
0xb0f GAS
0xb10 SUB
0xb11 CALL
0xb12 ISZERO
0xb13 ISZERO
0xb14 PUSH2 0xb1c
0xb17 JUMPI
---
0xb0b: JUMPDEST 
0xb0c: V1023 = 0x2c6
0xb0f: V1024 = GAS
0xb10: V1025 = SUB V1024 0x2c6
0xb11: V1026 = CALL V1025 V999 0x0 V1015 V1016 V1015 0x0
0xb12: V1027 = ISZERO V1026
0xb13: V1028 = ISZERO V1027
0xb14: V1029 = 0xb1c
0xb17: JUMPI 0xb1c V1028
---
Entry stack: [V12, 0xa5, V247, V999, V999, 0x2e1a7d4d, V1012, 0x0, V1015, V1016, V1015, 0x0, V999]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa5, V247, V999, V999, 0x2e1a7d4d, V1012]

================================

Block 0xb18
[0xb18:0xb1b]
---
Predecessors: [0xb0b]
Successors: []
---
0xb18 PUSH1 0x0
0xb1a DUP1
0xb1b REVERT
---
0xb18: V1030 = 0x0
0xb1b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa5, V247, V999, V999, 0x2e1a7d4d, V1012]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V247, V999, V999, 0x2e1a7d4d, V1012]

================================

Block 0xb1c
[0xb1c:0xb1f]
---
Predecessors: [0xb0b]
Successors: [0xb20]
---
0xb1c JUMPDEST
0xb1d POP
0xb1e POP
0xb1f POP
---
0xb1c: JUMPDEST 
---
Entry stack: [V12, 0xa5, V247, V999, V999, 0x2e1a7d4d, V1012]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xa5, V247, V999]

================================

Block 0xb20
[0xb20:0xb20]
---
Predecessors: [0xb1c]
Successors: [0xb21]
---
0xb20 JUMPDEST
---
0xb20: JUMPDEST 
---
Entry stack: [V12, 0xa5, V247, V999]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa5, V247, V999]

================================

Block 0xb21
[0xb21:0xb24]
---
Predecessors: [0xb20]
Successors: [0xa5]
---
0xb21 JUMPDEST
0xb22 POP
0xb23 POP
0xb24 JUMP
---
0xb21: JUMPDEST 
0xb24: JUMP 0xa5
---
Entry stack: [V12, 0xa5, V247, V999]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xb25
[0xb25:0xb40]
---
Predecessors: [0x28b]
Successors: [0xb41, 0xb45]
---
0xb25 JUMPDEST
0xb26 PUSH1 0x0
0xb28 DUP1
0xb29 SLOAD
0xb2a DUP2
0xb2b SWAP1
0xb2c DUP2
0xb2d SWAP1
0xb2e CALLER
0xb2f PUSH1 0x1
0xb31 PUSH1 0xa0
0xb33 PUSH1 0x2
0xb35 EXP
0xb36 SUB
0xb37 SWAP1
0xb38 DUP2
0xb39 AND
0xb3a SWAP2
0xb3b AND
0xb3c EQ
0xb3d PUSH2 0xb45
0xb40 JUMPI
---
0xb25: JUMPDEST 
0xb26: V1031 = 0x0
0xb29: V1032 = S[0x0]
0xb2e: V1033 = CALLER
0xb2f: V1034 = 0x1
0xb31: V1035 = 0xa0
0xb33: V1036 = 0x2
0xb35: V1037 = EXP 0x2 0xa0
0xb36: V1038 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb39: V1039 = AND 0xffffffffffffffffffffffffffffffffffffffff V1033
0xb3b: V1040 = AND V1032 0xffffffffffffffffffffffffffffffffffffffff
0xb3c: V1041 = EQ V1040 V1039
0xb3d: V1042 = 0xb45
0xb40: JUMPI 0xb45 V1041
---
Entry stack: [V12, 0x15a, V261, V264]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x15a, V261, V264, 0x0, 0x0, 0x0]

================================

Block 0xb41
[0xb41:0xb44]
---
Predecessors: [0xb25]
Successors: []
---
0xb41 PUSH1 0x0
0xb43 DUP1
0xb44 REVERT
---
0xb41: V1043 = 0x0
0xb44: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V261, V264, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V261, V264, 0x0, 0x0, 0x0]

================================

Block 0xb45
[0xb45:0xbd8]
---
Predecessors: [0xb25]
Successors: [0xbd9, 0xbdd]
---
0xb45 JUMPDEST
0xb46 PUSH1 0x0
0xb48 DUP1
0xb49 MLOAD
0xb4a PUSH1 0x20
0xb4c PUSH2 0xc46
0xb4f DUP4
0xb50 CODECOPY
0xb51 DUP2
0xb52 MLOAD
0xb53 SWAP2
0xb54 MSTORE
0xb55 DUP6
0xb56 DUP6
0xb57 PUSH1 0x40
0xb59 MLOAD
0xb5a PUSH1 0x1
0xb5c PUSH1 0xa0
0xb5e PUSH1 0x2
0xb60 EXP
0xb61 SUB
0xb62 SWAP3
0xb63 DUP4
0xb64 AND
0xb65 DUP2
0xb66 MSTORE
0xb67 SWAP2
0xb68 AND
0xb69 PUSH1 0x20
0xb6b DUP3
0xb6c ADD
0xb6d MSTORE
0xb6e PUSH1 0x40
0xb70 SWAP1
0xb71 DUP2
0xb72 ADD
0xb73 SWAP1
0xb74 MLOAD
0xb75 DUP1
0xb76 SWAP2
0xb77 SUB
0xb78 SWAP1
0xb79 LOG1
0xb7a PUSH1 0x1
0xb7c SLOAD
0xb7d PUSH1 0x1
0xb7f PUSH1 0xa0
0xb81 PUSH1 0x2
0xb83 EXP
0xb84 SUB
0xb85 AND
0xb86 SWAP2
0xb87 POP
0xb88 DUP2
0xb89 PUSH4 0xf7888aec
0xb8e DUP7
0xb8f DUP7
0xb90 PUSH1 0x0
0xb92 PUSH1 0x40
0xb94 MLOAD
0xb95 PUSH1 0x20
0xb97 ADD
0xb98 MSTORE
0xb99 PUSH1 0x40
0xb9b MLOAD
0xb9c PUSH1 0xe0
0xb9e PUSH1 0x2
0xba0 EXP
0xba1 PUSH4 0xffffffff
0xba6 DUP6
0xba7 AND
0xba8 MUL
0xba9 DUP2
0xbaa MSTORE
0xbab PUSH1 0x1
0xbad PUSH1 0xa0
0xbaf PUSH1 0x2
0xbb1 EXP
0xbb2 SUB
0xbb3 SWAP3
0xbb4 DUP4
0xbb5 AND
0xbb6 PUSH1 0x4
0xbb8 DUP3
0xbb9 ADD
0xbba MSTORE
0xbbb SWAP2
0xbbc AND
0xbbd PUSH1 0x24
0xbbf DUP3
0xbc0 ADD
0xbc1 MSTORE
0xbc2 PUSH1 0x44
0xbc4 ADD
0xbc5 PUSH1 0x20
0xbc7 PUSH1 0x40
0xbc9 MLOAD
0xbca DUP1
0xbcb DUP4
0xbcc SUB
0xbcd DUP2
0xbce PUSH1 0x0
0xbd0 DUP8
0xbd1 DUP1
0xbd2 EXTCODESIZE
0xbd3 ISZERO
0xbd4 ISZERO
0xbd5 PUSH2 0xbdd
0xbd8 JUMPI
---
0xb45: JUMPDEST 
0xb46: V1044 = 0x0
0xb49: V1045 = M[0x0]
0xb4a: V1046 = 0x20
0xb4c: V1047 = 0xc46
0xb50: CODECOPY 0x0 0xc46 0x20
0xb52: V1048 = M[0x0]
0xb54: M[0x0] = V1045
0xb57: V1049 = 0x40
0xb59: V1050 = M[0x40]
0xb5a: V1051 = 0x1
0xb5c: V1052 = 0xa0
0xb5e: V1053 = 0x2
0xb60: V1054 = EXP 0x2 0xa0
0xb61: V1055 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb64: V1056 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0xb66: M[V1050] = V1056
0xb68: V1057 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0xb69: V1058 = 0x20
0xb6c: V1059 = ADD V1050 0x20
0xb6d: M[V1059] = V1057
0xb6e: V1060 = 0x40
0xb72: V1061 = ADD 0x40 V1050
0xb74: V1062 = M[0x40]
0xb77: V1063 = SUB V1061 V1062
0xb79: LOG V1062 V1063 V1048
0xb7a: V1064 = 0x1
0xb7c: V1065 = S[0x1]
0xb7d: V1066 = 0x1
0xb7f: V1067 = 0xa0
0xb81: V1068 = 0x2
0xb83: V1069 = EXP 0x2 0xa0
0xb84: V1070 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb85: V1071 = AND 0xffffffffffffffffffffffffffffffffffffffff V1065
0xb89: V1072 = 0xf7888aec
0xb90: V1073 = 0x0
0xb92: V1074 = 0x40
0xb94: V1075 = M[0x40]
0xb95: V1076 = 0x20
0xb97: V1077 = ADD 0x20 V1075
0xb98: M[V1077] = 0x0
0xb99: V1078 = 0x40
0xb9b: V1079 = M[0x40]
0xb9c: V1080 = 0xe0
0xb9e: V1081 = 0x2
0xba0: V1082 = EXP 0x2 0xe0
0xba1: V1083 = 0xffffffff
0xba7: V1084 = AND 0xf7888aec 0xffffffff
0xba8: V1085 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0xbaa: M[V1079] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0xbab: V1086 = 0x1
0xbad: V1087 = 0xa0
0xbaf: V1088 = 0x2
0xbb1: V1089 = EXP 0x2 0xa0
0xbb2: V1090 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb5: V1091 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0xbb6: V1092 = 0x4
0xbb9: V1093 = ADD V1079 0x4
0xbba: M[V1093] = V1091
0xbbc: V1094 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0xbbd: V1095 = 0x24
0xbc0: V1096 = ADD V1079 0x24
0xbc1: M[V1096] = V1094
0xbc2: V1097 = 0x44
0xbc4: V1098 = ADD 0x44 V1079
0xbc5: V1099 = 0x20
0xbc7: V1100 = 0x40
0xbc9: V1101 = M[0x40]
0xbcc: V1102 = SUB V1098 V1101
0xbce: V1103 = 0x0
0xbd2: V1104 = EXTCODESIZE V1071
0xbd3: V1105 = ISZERO V1104
0xbd4: V1106 = ISZERO V1105
0xbd5: V1107 = 0xbdd
0xbd8: JUMPI 0xbdd V1106
---
Entry stack: [V12, 0x15a, V261, V264, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, V1071, S0, V1071, 0xf7888aec, V1098, 0x20, V1101, V1102, V1101, 0x0, V1071]
Exit stack: [V12, 0x15a, V261, V264, 0x0, V1071, 0x0, V1071, 0xf7888aec, V1098, 0x20, V1101, V1102, V1101, 0x0, V1071]

================================

Block 0xbd9
[0xbd9:0xbdc]
---
Predecessors: [0xb45]
Successors: []
---
0xbd9 PUSH1 0x0
0xbdb DUP1
0xbdc REVERT
---
0xbd9: V1108 = 0x0
0xbdc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V261, V264, 0x0, V1071, 0x0, V1071, 0xf7888aec, V1098, 0x20, V1101, V1102, V1101, 0x0, V1071]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V261, V264, 0x0, V1071, 0x0, V1071, 0xf7888aec, V1098, 0x20, V1101, V1102, V1101, 0x0, V1071]

================================

Block 0xbdd
[0xbdd:0xbe9]
---
Predecessors: [0xb45]
Successors: [0xbea, 0xbee]
---
0xbdd JUMPDEST
0xbde PUSH2 0x2c6
0xbe1 GAS
0xbe2 SUB
0xbe3 CALL
0xbe4 ISZERO
0xbe5 ISZERO
0xbe6 PUSH2 0xbee
0xbe9 JUMPI
---
0xbdd: JUMPDEST 
0xbde: V1109 = 0x2c6
0xbe1: V1110 = GAS
0xbe2: V1111 = SUB V1110 0x2c6
0xbe3: V1112 = CALL V1111 V1071 0x0 V1101 V1102 V1101 0x20
0xbe4: V1113 = ISZERO V1112
0xbe5: V1114 = ISZERO V1113
0xbe6: V1115 = 0xbee
0xbe9: JUMPI 0xbee V1114
---
Entry stack: [V12, 0x15a, V261, V264, 0x0, V1071, 0x0, V1071, 0xf7888aec, V1098, 0x20, V1101, V1102, V1101, 0x0, V1071]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, V261, V264, 0x0, V1071, 0x0, V1071, 0xf7888aec, V1098]

================================

Block 0xbea
[0xbea:0xbed]
---
Predecessors: [0xbdd]
Successors: []
---
0xbea PUSH1 0x0
0xbec DUP1
0xbed REVERT
---
0xbea: V1116 = 0x0
0xbed: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15a, V261, V264, 0x0, V1071, 0x0, V1071, 0xf7888aec, V1098]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V261, V264, 0x0, V1071, 0x0, V1071, 0xf7888aec, V1098]

================================

Block 0xbee
[0xbee:0xc3b]
---
Predecessors: [0xbdd]
Successors: [0xc3c]
---
0xbee JUMPDEST
0xbef POP
0xbf0 POP
0xbf1 POP
0xbf2 PUSH1 0x40
0xbf4 MLOAD
0xbf5 DUP1
0xbf6 MLOAD
0xbf7 SWAP1
0xbf8 POP
0xbf9 SWAP1
0xbfa POP
0xbfb PUSH1 0x0
0xbfd DUP1
0xbfe MLOAD
0xbff PUSH1 0x20
0xc01 PUSH2 0xc66
0xc04 DUP4
0xc05 CODECOPY
0xc06 DUP2
0xc07 MLOAD
0xc08 SWAP2
0xc09 MSTORE
0xc0a DUP6
0xc0b DUP6
0xc0c DUP4
0xc0d PUSH1 0x40
0xc0f MLOAD
0xc10 PUSH1 0x1
0xc12 PUSH1 0xa0
0xc14 PUSH1 0x2
0xc16 EXP
0xc17 SUB
0xc18 SWAP4
0xc19 DUP5
0xc1a AND
0xc1b DUP2
0xc1c MSTORE
0xc1d SWAP2
0xc1e SWAP1
0xc1f SWAP3
0xc20 AND
0xc21 PUSH1 0x20
0xc23 DUP3
0xc24 ADD
0xc25 MSTORE
0xc26 PUSH1 0x40
0xc28 DUP1
0xc29 DUP3
0xc2a ADD
0xc2b SWAP3
0xc2c SWAP1
0xc2d SWAP3
0xc2e MSTORE
0xc2f PUSH1 0x60
0xc31 ADD
0xc32 SWAP1
0xc33 MLOAD
0xc34 DUP1
0xc35 SWAP2
0xc36 SUB
0xc37 SWAP1
0xc38 LOG1
0xc39 DUP1
0xc3a SWAP3
0xc3b POP
---
0xbee: JUMPDEST 
0xbf2: V1117 = 0x40
0xbf4: V1118 = M[0x40]
0xbf6: V1119 = M[V1118]
0xbfb: V1120 = 0x0
0xbfe: V1121 = M[0x0]
0xbff: V1122 = 0x20
0xc01: V1123 = 0xc66
0xc05: CODECOPY 0x0 0xc66 0x20
0xc07: V1124 = M[0x0]
0xc09: M[0x0] = V1121
0xc0d: V1125 = 0x40
0xc0f: V1126 = M[0x40]
0xc10: V1127 = 0x1
0xc12: V1128 = 0xa0
0xc14: V1129 = 0x2
0xc16: V1130 = EXP 0x2 0xa0
0xc17: V1131 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1a: V1132 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0xc1c: M[V1126] = V1132
0xc20: V1133 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0xc21: V1134 = 0x20
0xc24: V1135 = ADD V1126 0x20
0xc25: M[V1135] = V1133
0xc26: V1136 = 0x40
0xc2a: V1137 = ADD V1126 0x40
0xc2e: M[V1137] = V1119
0xc2f: V1138 = 0x60
0xc31: V1139 = ADD 0x60 V1126
0xc33: V1140 = M[0x40]
0xc36: V1141 = SUB V1139 V1140
0xc38: LOG V1140 V1141 V1124
---
Entry stack: [V12, 0x15a, V261, V264, 0x0, V1071, 0x0, V1071, 0xf7888aec, V1098]
Stack pops: 8
Stack additions: [S7, S6, V1119, S4, V1119]
Exit stack: [V12, 0x15a, V261, V264, V1119, V1071, V1119]

================================

Block 0xc3c
[0xc3c:0xc3c]
---
Predecessors: [0xbee]
Successors: [0xc3d]
---
0xc3c JUMPDEST
---
0xc3c: JUMPDEST 
---
Entry stack: [V12, 0x15a, V261, V264, V1119, V1071, V1119]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V261, V264, V1119, V1071, V1119]

================================

Block 0xc3d
[0xc3d:0xc44]
---
Predecessors: [0xc3c]
Successors: [0x15a]
---
0xc3d JUMPDEST
0xc3e POP
0xc3f POP
0xc40 SWAP3
0xc41 SWAP2
0xc42 POP
0xc43 POP
0xc44 JUMP
---
0xc3d: JUMPDEST 
0xc44: JUMP 0x15a
---
Entry stack: [V12, 0x15a, V261, V264, V1119, V1071, V1119]
Stack pops: 6
Stack additions: [S2]
Exit stack: [V12, V1119]

================================

Block 0xc45
[0xc45:0xcb7]
---
Predecessors: []
Successors: []
---
0xc45 STOP
0xc46 MISSING 0xd4
0xc47 AND
0xc48 MISSING 0xd4
0xc49 RETURN
0xc4a MISSING 0xee
0xc4b MISSING 0xce
0xc4c MISSING 0xaa
0xc4d PUSH13 0x6514c693e93b35aeb9c6e112a6
0xc5b MISSING 0xa9
0xc5c CODECOPY
0xc5d BALANCE
0xc5e MUL
0xc5f DUP8
0xc60 MISSING 0xcb
0xc61 PUSH1 0x17
0xc63 MISSING 0x48
0xc64 ISZERO
0xc65 MISSING 0xeb
0xc66 MSTORE8
0xc67 SHL
0xc68 MISSING 0xc6
0xc69 MISSING 0xef
0xc6a MISSING 0xea
0xc6b MISSING 0xad
0xc6c BALANCE
0xc6d MISSING 0xa7
0xc6e DUP11
0xc6f INVALID
0xc70 MISSING 0xb3
0xc71 MISSING 0xa6
0xc72 MISSING 0xd4
0xc73 ADD
0xc74 MISSING 0xb2
0xc75 SSTORE
0xc76 MISSING 0xdb
0xc77 MISSING 0xdd
0xc78 BALANCE
0xc79 PUSH8 0x7b76f4c4b6af724d
0xc82 MULMOD
0xc83 DUP1
0xc84 SWAP9
0xc85 MISSING 0x4f
0xc86 LOG1
0xc87 PUSH6 0x627a7a723058
0xc8e SHA3
0xc8f LOG1
0xc90 PUSH4 0x74e880e3
0xc95 SDIV
0xc96 MISSING 0xb7
0xc97 PUSH32 0xd0b3ddbc3b3e538b2aaa6cae03f7e504013a2117a910b60029
---
0xc45: STOP 
0xc46: MISSING 0xd4
0xc47: V1142 = AND S0 S1
0xc48: MISSING 0xd4
0xc49: RETURN S0 S1
0xc4a: MISSING 0xee
0xc4b: MISSING 0xce
0xc4c: MISSING 0xaa
0xc4d: V1143 = 0x6514c693e93b35aeb9c6e112a6
0xc5b: MISSING 0xa9
0xc5c: CODECOPY S0 S1 S2
0xc5d: V1144 = BALANCE S3
0xc5e: V1145 = MUL V1144 S4
0xc60: MISSING 0xcb
0xc61: V1146 = 0x17
0xc63: MISSING 0x48
0xc64: V1147 = ISZERO S0
0xc65: MISSING 0xeb
0xc66: M8[S0] = S1
0xc67: V1148 = SHL S2 S3
0xc68: MISSING 0xc6
0xc69: MISSING 0xef
0xc6a: MISSING 0xea
0xc6b: MISSING 0xad
0xc6c: V1149 = BALANCE S0
0xc6d: MISSING 0xa7
0xc6f: INVALID 
0xc70: MISSING 0xb3
0xc71: MISSING 0xa6
0xc72: MISSING 0xd4
0xc73: V1150 = ADD S0 S1
0xc74: MISSING 0xb2
0xc75: S[S0] = S1
0xc76: MISSING 0xdb
0xc77: MISSING 0xdd
0xc78: V1151 = BALANCE S0
0xc79: V1152 = 0x7b76f4c4b6af724d
0xc82: V1153 = MULMOD 0x7b76f4c4b6af724d V1151 S1
0xc85: MISSING 0x4f
0xc86: LOG S0 S1 S2
0xc87: V1154 = 0x627a7a723058
0xc8e: V1155 = SHA3 0x627a7a723058 S3
0xc8f: LOG V1155 S4 S5
0xc90: V1156 = 0x74e880e3
0xc95: V1157 = SDIV 0x74e880e3 S6
0xc96: MISSING 0xb7
0xc97: V1158 = 0xd0b3ddbc3b3e538b2aaa6cae03f7e504013a2117a910b60029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1142, 0x6514c693e93b35aeb9c6e112a6, S11, V1145, S5, S6, S7, S8, S9, S10, S11, 0x17, V1147, V1148, V1149, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V1150, S9, V1153, S2, S3, S4, S5, S6, S7, S8, V1153, V1157, 0xd0b3ddbc3b3e538b2aaa6cae03f7e504013a2117a910b60029]
Exit stack: []

================================

Function 0:
Public function signature: 0xa19b14a
Entry block: 0xa7
Exit block: 0xa5
Body: 0xa5, 0xa7, 0xae, 0xb2, 0x2b7, 0x2cf, 0x2d3, 0x389, 0x38d, 0x39a, 0x39e, 0x3ae, 0x48b, 0x48f, 0x49c, 0x4a0, 0x4a8, 0x4dd, 0x4de, 0x4df

Function 1:
Public function signature: 0x2cf2c0af
Entry block: 0xf6
Exit block: 0xa5
Body: 0xa5, 0xf6, 0xfd, 0x101, 0x4ed, 0x505, 0x509, 0x546, 0x54a, 0x557, 0x55b, 0x560, 0x561

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0x10e
Exit block: 0xa5
Body: 0xa5, 0x10e, 0x115, 0x119, 0x565, 0x57c, 0x580, 0x5af, 0x5b3, 0x5b4, 0x5b5

Function 3:
Public function signature: 0x43d726d6
Entry block: 0x126
Exit block: 0x5d3
Body: 0x126, 0x12d, 0x131, 0x5b8, 0x5cf, 0x5d3

Function 4:
Public function signature: 0x4e12ac40
Entry block: 0x13b
Exit block: 0x15a
Body: 0x13b, 0x142, 0x146, 0x15a, 0x5e4, 0x600, 0x604, 0x6d7, 0x6db, 0x6e8, 0x6ec, 0x74e, 0x74f

Function 5:
Public function signature: 0x5c73dcea
Entry block: 0x16c
Exit block: 0x1b9
Body: 0x16c, 0x173, 0x177, 0x1b9, 0x756, 0x770, 0x774, 0x82a, 0x82e, 0x83b, 0x83f, 0x84b, 0x84c

Function 6:
Public function signature: 0x70a08231
Entry block: 0x1cd
Exit block: 0x15a
Body: 0x15a, 0x1cd, 0x1d4, 0x1d8, 0x85c, 0x878, 0x87c, 0x910, 0x914, 0x921, 0x925, 0x973, 0x974

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x1fe
Exit block: 0x211
Body: 0x1fe, 0x205, 0x209, 0x211, 0x97b

Function 8:
Public function signature: 0x9063b12c
Entry block: 0x22d
Exit block: 0x15a
Body: 0x15a, 0x22d, 0x234, 0x238, 0x98a, 0x9a4, 0x9a8, 0xa21, 0xa22

Function 9:
Public function signature: 0xd0e30db0
Entry block: 0x25e
Exit block: 0xa5
Body: 0xa5, 0x25e, 0xa28, 0xaa3

Function 10:
Public function signature: 0xf1b83630
Entry block: 0x268
Exit block: 0xa5
Body: 0xa5, 0x268, 0x26f, 0x273, 0xaa5, 0xabd, 0xac1, 0xb07, 0xb0b, 0xb18, 0xb1c, 0xb20, 0xb21

Function 11:
Public function signature: 0xf4054940
Entry block: 0x280
Exit block: 0x15a
Body: 0x15a, 0x280, 0x287, 0x28b, 0xb25, 0xb41, 0xb45, 0xbd9, 0xbdd, 0xbea, 0xbee, 0xc3c, 0xc3d

Function 12:
Public fallback function
Entry block: 0x9e
Exit block: 0xa5
Body: 0x9e, 0xa2, 0xa3, 0xa5

