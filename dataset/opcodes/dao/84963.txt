Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4b]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4b
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4b
0xc: JUMPI 0x4b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x50]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x70d1abe1
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x50
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x70d1abe1
0x3b: V13 = EQ V11 0x70d1abe1
0x3c: V14 = 0x50
0x3f: JUMPI 0x50 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x7c]
---
0x40 DUP1
0x41 PUSH4 0xb69ef8a8
0x46 EQ
0x47 PUSH2 0x7c
0x4a JUMPI
---
0x41: V15 = 0xb69ef8a8
0x46: V16 = EQ 0xb69ef8a8 V11
0x47: V17 = 0x7c
0x4a: JUMPI 0x7c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x4f]
---
Predecessors: [0x0, 0x40]
Successors: []
---
0x4b JUMPDEST
0x4c PUSH1 0x0
0x4e DUP1
0x4f REVERT
---
0x4b: JUMPDEST 
0x4c: V18 = 0x0
0x4f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x50
[0x50:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x50 JUMPDEST
0x51 CALLVALUE
0x52 DUP1
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x50: JUMPDEST 
0x51: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x50]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5c
[0x5c:0x67]
---
Predecessors: [0x50]
Successors: [0xa3]
---
0x5c JUMPDEST
0x5d POP
0x5e PUSH2 0x68
0x61 PUSH1 0x4
0x63 CALLDATALOAD
0x64 PUSH2 0xa3
0x67 JUMP
---
0x5c: JUMPDEST 
0x5e: V23 = 0x68
0x61: V24 = 0x4
0x63: V25 = CALLDATALOAD 0x4
0x64: V26 = 0xa3
0x67: JUMP 0xa3
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x68, V25]
Exit stack: [V11, 0x68, V25]

================================

Block 0x68
[0x68:0x7b]
---
Predecessors: [0x253]
Successors: []
---
0x68 JUMPDEST
0x69 PUSH1 0x40
0x6b DUP1
0x6c MLOAD
0x6d SWAP2
0x6e ISZERO
0x6f ISZERO
0x70 DUP3
0x71 MSTORE
0x72 MLOAD
0x73 SWAP1
0x74 DUP2
0x75 SWAP1
0x76 SUB
0x77 PUSH1 0x20
0x79 ADD
0x7a SWAP1
0x7b RETURN
---
0x68: JUMPDEST 
0x69: V27 = 0x40
0x6c: V28 = M[0x40]
0x6e: V29 = ISZERO {0x0, 0x1}
0x6f: V30 = ISZERO V29
0x71: M[V28] = V30
0x72: V31 = M[0x40]
0x76: V32 = SUB V28 V31
0x77: V33 = 0x20
0x79: V34 = ADD 0x20 V32
0x7b: RETURN V31 V34
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x83]
---
Predecessors: [0x40]
Successors: [0x84, 0x88]
---
0x7c JUMPDEST
0x7d CALLVALUE
0x7e DUP1
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7c: JUMPDEST 
0x7d: V35 = CALLVALUE
0x7f: V36 = ISZERO V35
0x80: V37 = 0x88
0x83: JUMPI 0x88 V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V35]
Exit stack: [V11, V35]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7c]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V38 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V35]

================================

Block 0x88
[0x88:0x90]
---
Predecessors: [0x7c]
Successors: [0x259]
---
0x88 JUMPDEST
0x89 POP
0x8a PUSH2 0x91
0x8d PUSH2 0x259
0x90 JUMP
---
0x88: JUMPDEST 
0x8a: V39 = 0x91
0x8d: V40 = 0x259
0x90: JUMP 0x259
---
Entry stack: [V11, V35]
Stack pops: 1
Stack additions: [0x91]
Exit stack: [V11, 0x91]

================================

Block 0x91
[0x91:0xa2]
---
Predecessors: [0x259]
Successors: []
---
0x91 JUMPDEST
0x92 PUSH1 0x40
0x94 DUP1
0x95 MLOAD
0x96 SWAP2
0x97 DUP3
0x98 MSTORE
0x99 MLOAD
0x9a SWAP1
0x9b DUP2
0x9c SWAP1
0x9d SUB
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP1
0xa2 RETURN
---
0x91: JUMPDEST 
0x92: V41 = 0x40
0x95: V42 = M[0x40]
0x98: M[V42] = V138
0x99: V43 = M[0x40]
0x9d: V44 = SUB V42 V43
0x9e: V45 = 0x20
0xa0: V46 = ADD 0x20 V44
0xa2: RETURN V43 V46
---
Entry stack: [V11, V138]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xc5]
---
Predecessors: [0x5c]
Successors: [0xc6, 0xca]
---
0xa3 JUMPDEST
0xa4 PUSH1 0x0
0xa6 DUP1
0xa7 SLOAD
0xa8 DUP2
0xa9 SWAP1
0xaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf AND
0xc0 CALLER
0xc1 EQ
0xc2 PUSH2 0xca
0xc5 JUMPI
---
0xa3: JUMPDEST 
0xa4: V47 = 0x0
0xa7: V48 = S[0x0]
0xaa: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xc0: V51 = CALLER
0xc1: V52 = EQ V51 V50
0xc2: V53 = 0xca
0xc5: JUMPI 0xca V52
---
Entry stack: [V11, 0x68, V25]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x68, V25, 0x0, 0x0]

================================

Block 0xc6
[0xc6:0xc9]
---
Predecessors: [0xa3]
Successors: []
---
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 REVERT
---
0xc6: V54 = 0x0
0xc9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x68, V25, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x68, V25, 0x0, 0x0]

================================

Block 0xca
[0xca:0x19d]
---
Predecessors: [0xa3]
Successors: [0x19e]
---
0xca JUMPDEST
0xcb PUSH1 0x40
0xcd DUP1
0xce MLOAD
0xcf PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0xf0 PUSH1 0x20
0xf2 DUP1
0xf3 DUP4
0xf4 ADD
0xf5 SWAP2
0xf6 SWAP1
0xf7 SWAP2
0xf8 MSTORE
0xf9 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x11a PUSH1 0x21
0x11c DUP4
0x11d ADD
0x11e MSTORE
0x11f PUSH13 0x1000000000000000000000000
0x12d ADDRESS
0x12e MUL
0x12f PUSH1 0x22
0x131 DUP4
0x132 ADD
0x133 MSTORE
0x134 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x155 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x176 DUP8
0x177 MUL
0x178 AND
0x179 PUSH1 0x36
0x17b DUP4
0x17c ADD
0x17d MSTORE
0x17e DUP3
0x17f MLOAD
0x180 PUSH1 0x17
0x182 DUP2
0x183 DUP5
0x184 SUB
0x185 ADD
0x186 DUP2
0x187 MSTORE
0x188 PUSH1 0x37
0x18a SWAP1
0x18b SWAP3
0x18c ADD
0x18d SWAP3
0x18e DUP4
0x18f SWAP1
0x190 MSTORE
0x191 DUP2
0x192 MLOAD
0x193 SWAP2
0x194 SWAP3
0x195 SWAP2
0x196 DUP3
0x197 SWAP2
0x198 DUP5
0x199 ADD
0x19a SWAP1
0x19b DUP1
0x19c DUP4
0x19d DUP4
---
0xca: JUMPDEST 
0xcb: V55 = 0x40
0xce: V56 = M[0x40]
0xcf: V57 = 0xd600000000000000000000000000000000000000000000000000000000000000
0xf0: V58 = 0x20
0xf4: V59 = ADD V56 0x20
0xf8: M[V59] = 0xd600000000000000000000000000000000000000000000000000000000000000
0xf9: V60 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x11a: V61 = 0x21
0x11d: V62 = ADD V56 0x21
0x11e: M[V62] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x11f: V63 = 0x1000000000000000000000000
0x12d: V64 = ADDRESS
0x12e: V65 = MUL V64 0x1000000000000000000000000
0x12f: V66 = 0x22
0x132: V67 = ADD V56 0x22
0x133: M[V67] = V65
0x134: V68 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x155: V69 = 0x100000000000000000000000000000000000000000000000000000000000000
0x177: V70 = MUL V25 0x100000000000000000000000000000000000000000000000000000000000000
0x178: V71 = AND V70 0xff00000000000000000000000000000000000000000000000000000000000000
0x179: V72 = 0x36
0x17c: V73 = ADD V56 0x36
0x17d: M[V73] = V71
0x17f: V74 = M[0x40]
0x180: V75 = 0x17
0x184: V76 = SUB V56 V74
0x185: V77 = ADD V76 0x17
0x187: M[V74] = V77
0x188: V78 = 0x37
0x18c: V79 = ADD V56 0x37
0x190: M[0x40] = V79
0x192: V80 = M[V74]
0x199: V81 = ADD V74 0x20
---
Entry stack: [V11, 0x68, V25, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V74, V79, V79, V81, V80, V80, V79, V81]
Exit stack: [V11, 0x68, V25, 0x0, 0x0, V74, V79, V79, V81, V80, V80, V79, V81]

================================

Block 0x19e
[0x19e:0x1a6]
---
Predecessors: [0xca, 0x1a7]
Successors: [0x1a7, 0x1bd]
---
0x19e JUMPDEST
0x19f PUSH1 0x20
0x1a1 DUP4
0x1a2 LT
0x1a3 PUSH2 0x1bd
0x1a6 JUMPI
---
0x19e: JUMPDEST 
0x19f: V82 = 0x20
0x1a2: V83 = LT S2 0x20
0x1a3: V84 = 0x1bd
0x1a6: JUMPI 0x1bd V83
---
Entry stack: [V11, 0x68, V25, 0x0, 0x0, V74, V79, V79, V81, V80, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x68, V25, 0x0, 0x0, V74, V79, V79, V81, V80, S2, S1, S0]

================================

Block 0x1a7
[0x1a7:0x1bc]
---
Predecessors: [0x19e]
Successors: [0x19e]
---
0x1a7 DUP1
0x1a8 MLOAD
0x1a9 DUP3
0x1aa MSTORE
0x1ab PUSH1 0x1f
0x1ad NOT
0x1ae SWAP1
0x1af SWAP3
0x1b0 ADD
0x1b1 SWAP2
0x1b2 PUSH1 0x20
0x1b4 SWAP2
0x1b5 DUP3
0x1b6 ADD
0x1b7 SWAP2
0x1b8 ADD
0x1b9 PUSH2 0x19e
0x1bc JUMP
---
0x1a8: V85 = M[S0]
0x1aa: M[S1] = V85
0x1ab: V86 = 0x1f
0x1ad: V87 = NOT 0x1f
0x1b0: V88 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1b2: V89 = 0x20
0x1b6: V90 = ADD 0x20 S1
0x1b8: V91 = ADD 0x20 S0
0x1b9: V92 = 0x19e
0x1bc: JUMP 0x19e
---
Entry stack: [V11, 0x68, V25, 0x0, 0x0, V74, V79, V79, V81, V80, S2, S1, S0]
Stack pops: 3
Stack additions: [V88, V90, V91]
Exit stack: [V11, 0x68, V25, 0x0, 0x0, V74, V79, V79, V81, V80, V88, V90, V91]

================================

Block 0x1bd
[0x1bd:0x21f]
---
Predecessors: [0x19e]
Successors: [0x220, 0x24e]
---
0x1bd JUMPDEST
0x1be MLOAD
0x1bf DUP2
0x1c0 MLOAD
0x1c1 PUSH1 0x20
0x1c3 SWAP4
0x1c4 SWAP1
0x1c5 SWAP4
0x1c6 SUB
0x1c7 PUSH2 0x100
0x1ca EXP
0x1cb PUSH1 0x0
0x1cd NOT
0x1ce ADD
0x1cf DUP1
0x1d0 NOT
0x1d1 SWAP1
0x1d2 SWAP2
0x1d3 AND
0x1d4 SWAP3
0x1d5 AND
0x1d6 SWAP2
0x1d7 SWAP1
0x1d8 SWAP2
0x1d9 OR
0x1da SWAP1
0x1db MSTORE
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df SWAP3
0x1e0 ADD
0x1e1 DUP3
0x1e2 SWAP1
0x1e3 SUB
0x1e4 DUP3
0x1e5 SHA3
0x1e6 SWAP5
0x1e7 POP
0x1e8 POP
0x1e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fe DUP5
0x1ff AND
0x200 SWAP3
0x201 POP
0x202 PUSH8 0x16345785d8a0000
0x20b SWAP2
0x20c POP
0x20d PUSH1 0x0
0x20f DUP2
0x210 DUP2
0x211 DUP2
0x212 DUP6
0x213 DUP8
0x214 GAS
0x215 CALL
0x216 SWAP3
0x217 POP
0x218 POP
0x219 POP
0x21a ISZERO
0x21b ISZERO
0x21c PUSH2 0x24e
0x21f JUMPI
---
0x1bd: JUMPDEST 
0x1be: V93 = M[S0]
0x1c0: V94 = M[S1]
0x1c1: V95 = 0x20
0x1c6: V96 = SUB 0x20 S2
0x1c7: V97 = 0x100
0x1ca: V98 = EXP 0x100 V96
0x1cb: V99 = 0x0
0x1cd: V100 = NOT 0x0
0x1ce: V101 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V98
0x1d0: V102 = NOT V101
0x1d3: V103 = AND V93 V102
0x1d5: V104 = AND V94 V101
0x1d9: V105 = OR V104 V103
0x1db: M[S1] = V105
0x1dc: V106 = 0x40
0x1de: V107 = M[0x40]
0x1e0: V108 = ADD V79 V80
0x1e3: V109 = SUB V108 V107
0x1e5: V110 = SHA3 V107 V109
0x1e9: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V112 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x202: V113 = 0x16345785d8a0000
0x20d: V114 = 0x0
0x214: V115 = GAS
0x215: V116 = CALL V115 V112 0x16345785d8a0000 V107 0x0 V107 0x0
0x21a: V117 = ISZERO V116
0x21b: V118 = ISZERO V117
0x21c: V119 = 0x24e
0x21f: JUMPI 0x24e V118
---
Entry stack: [V11, 0x68, V25, 0x0, 0x0, V74, V79, V79, V81, V80, S2, S1, S0]
Stack pops: 9
Stack additions: [V110]
Exit stack: [V11, 0x68, V25, 0x0, V110]

================================

Block 0x220
[0x220:0x226]
---
Predecessors: [0x1bd]
Successors: [0x25e]
---
0x220 PUSH2 0x227
0x223 PUSH2 0x25e
0x226 JUMP
---
0x220: V120 = 0x227
0x223: V121 = 0x25e
0x226: JUMP 0x25e
---
Entry stack: [V11, 0x68, V25, 0x0, V110]
Stack pops: 0
Stack additions: [0x227]
Exit stack: [V11, 0x68, V25, 0x0, V110, 0x227]

================================

Block 0x227
[0x227:0x239]
---
Predecessors: [0x25e]
Successors: [0x23a, 0x243]
---
0x227 JUMPDEST
0x228 PUSH1 0x40
0x22a MLOAD
0x22b DUP1
0x22c SWAP2
0x22d SUB
0x22e SWAP1
0x22f PUSH1 0x0
0x231 CREATE
0x232 DUP1
0x233 ISZERO
0x234 DUP1
0x235 ISZERO
0x236 PUSH2 0x243
0x239 JUMPI
---
0x227: JUMPDEST 
0x228: V122 = 0x40
0x22a: V123 = M[0x40]
0x22d: V124 = SUB V143 V123
0x22f: V125 = 0x0
0x231: V126 = CREATE 0x0 V123 V124
0x233: V127 = ISZERO V126
0x235: V128 = ISZERO V127
0x236: V129 = 0x243
0x239: JUMPI 0x243 V128
---
Entry stack: [V11, 0x68, V25, 0x0, V110, V143]
Stack pops: 1
Stack additions: [V126, V127]
Exit stack: [V11, 0x68, V25, 0x0, V110, V126, V127]

================================

Block 0x23a
[0x23a:0x242]
---
Predecessors: [0x227]
Successors: []
---
0x23a RETURNDATASIZE
0x23b PUSH1 0x0
0x23d DUP1
0x23e RETURNDATACOPY
0x23f RETURNDATASIZE
0x240 PUSH1 0x0
0x242 REVERT
---
0x23a: V130 = RETURNDATASIZE
0x23b: V131 = 0x0
0x23e: RETURNDATACOPY 0x0 0x0 V130
0x23f: V132 = RETURNDATASIZE
0x240: V133 = 0x0
0x242: REVERT 0x0 V132
---
Entry stack: [V11, 0x68, V25, 0x0, V110, V126, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x68, V25, 0x0, V110, V126, V127]

================================

Block 0x243
[0x243:0x24d]
---
Predecessors: [0x227]
Successors: [0x253]
---
0x243 JUMPDEST
0x244 POP
0x245 POP
0x246 PUSH1 0x1
0x248 SWAP2
0x249 POP
0x24a PUSH2 0x253
0x24d JUMP
---
0x243: JUMPDEST 
0x246: V134 = 0x1
0x24a: V135 = 0x253
0x24d: JUMP 0x253
---
Entry stack: [V11, 0x68, V25, 0x0, V110, V126, V127]
Stack pops: 4
Stack additions: [0x1, S2]
Exit stack: [V11, 0x68, V25, 0x1, V110]

================================

Block 0x24e
[0x24e:0x252]
---
Predecessors: [0x1bd]
Successors: [0x253]
---
0x24e JUMPDEST
0x24f PUSH1 0x0
0x251 SWAP2
0x252 POP
---
0x24e: JUMPDEST 
0x24f: V136 = 0x0
---
Entry stack: [V11, 0x68, V25, 0x0, V110]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x68, V25, 0x0, V110]

================================

Block 0x253
[0x253:0x258]
---
Predecessors: [0x243, 0x24e]
Successors: [0x68]
---
0x253 JUMPDEST
0x254 POP
0x255 SWAP2
0x256 SWAP1
0x257 POP
0x258 JUMP
---
0x253: JUMPDEST 
0x258: JUMP 0x68
---
Entry stack: [V11, 0x68, V25, {0x0, 0x1}, V110]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x259
[0x259:0x25d]
---
Predecessors: [0x88]
Successors: [0x91]
---
0x259 JUMPDEST
0x25a ADDRESS
0x25b BALANCE
0x25c SWAP1
0x25d JUMP
---
0x259: JUMPDEST 
0x25a: V137 = ADDRESS
0x25b: V138 = BALANCE V137
0x25d: JUMP 0x91
---
Entry stack: [V11, 0x91]
Stack pops: 1
Stack additions: [V138]
Exit stack: [V11, V138]

================================

Block 0x25e
[0x25e:0x26d]
---
Predecessors: [0x220]
Successors: [0x227]
---
0x25e JUMPDEST
0x25f PUSH1 0x40
0x261 MLOAD
0x262 PUSH2 0x11b
0x265 DUP1
0x266 PUSH2 0x26f
0x269 DUP4
0x26a CODECOPY
0x26b ADD
0x26c SWAP1
0x26d JUMP
---
0x25e: JUMPDEST 
0x25f: V139 = 0x40
0x261: V140 = M[0x40]
0x262: V141 = 0x11b
0x266: V142 = 0x26f
0x26a: CODECOPY V140 0x26f 0x11b
0x26b: V143 = ADD 0x11b V140
0x26d: JUMP 0x227
---
Entry stack: [V11, 0x68, V25, 0x0, V110, 0x227]
Stack pops: 1
Stack additions: [V143]
Exit stack: [V11, 0x68, V25, 0x0, V110, V143]

================================

Block 0x26e
[0x26e:0x29f]
---
Predecessors: []
Successors: [0x2a0]
---
0x26e STOP
0x26f PUSH1 0x80
0x271 PUSH1 0x40
0x273 MSTORE
0x274 PUSH1 0x0
0x276 DUP1
0x277 SLOAD
0x278 PUSH1 0x1
0x27a PUSH1 0xa0
0x27c PUSH1 0x2
0x27e EXP
0x27f SUB
0x280 NOT
0x281 AND
0x282 PUSH20 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c
0x297 OR
0x298 SWAP1
0x299 SSTORE
0x29a CALLVALUE
0x29b DUP1
0x29c ISZERO
0x29d PUSH1 0x35
0x29f JUMPI
---
0x26e: STOP 
0x26f: V144 = 0x80
0x271: V145 = 0x40
0x273: M[0x40] = 0x80
0x274: V146 = 0x0
0x277: V147 = S[0x0]
0x278: V148 = 0x1
0x27a: V149 = 0xa0
0x27c: V150 = 0x2
0x27e: V151 = EXP 0x2 0xa0
0x27f: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x280: V153 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x281: V154 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V147
0x282: V155 = 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c
0x297: V156 = OR 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c V154
0x299: S[0x0] = V156
0x29a: V157 = CALLVALUE
0x29c: V158 = ISZERO V157
0x29d: V159 = 0x35
0x29f: THROWI V158
---
Entry stack: []
Stack pops: 0
Stack additions: [V157]
Exit stack: []

================================

Block 0x2a0
[0x2a0:0x2d3]
---
Predecessors: [0x26e]
Successors: [0x2d4]
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
0x2a4 JUMPDEST
0x2a5 POP
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 SLOAD
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad PUSH1 0x1
0x2af PUSH1 0xa0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 SUB
0x2b5 SWAP1
0x2b6 SWAP2
0x2b7 AND
0x2b8 SWAP2
0x2b9 PUSH8 0x16345785d8a0000
0x2c2 SWAP2
0x2c3 SWAP1
0x2c4 DUP2
0x2c5 DUP2
0x2c6 DUP2
0x2c7 DUP6
0x2c8 DUP8
0x2c9 GAS
0x2ca CALL
0x2cb SWAP3
0x2cc POP
0x2cd POP
0x2ce POP
0x2cf ISZERO
0x2d0 ISZERO
0x2d1 PUSH1 0xd8
0x2d3 JUMPI
---
0x2a0: V160 = 0x0
0x2a3: REVERT 0x0 0x0
0x2a4: JUMPDEST 
0x2a6: V161 = 0x0
0x2a9: V162 = S[0x0]
0x2aa: V163 = 0x40
0x2ac: V164 = M[0x40]
0x2ad: V165 = 0x1
0x2af: V166 = 0xa0
0x2b1: V167 = 0x2
0x2b3: V168 = EXP 0x2 0xa0
0x2b4: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b7: V170 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V171 = 0x16345785d8a0000
0x2c9: V172 = GAS
0x2ca: V173 = CALL V172 V170 0x16345785d8a0000 V164 0x0 V164 0x0
0x2cf: V174 = ISZERO V173
0x2d0: V175 = ISZERO V174
0x2d1: V176 = 0xd8
0x2d3: THROWI V175
---
Entry stack: [V157]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2d4
[0x2d4:0x327]
---
Predecessors: [0x2a0]
Successors: [0x328]
---
0x2d4 PUSH1 0x0
0x2d6 DUP1
0x2d7 SLOAD
0x2d8 PUSH1 0x40
0x2da DUP1
0x2db MLOAD
0x2dc PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2fd DUP2
0x2fe MSTORE
0x2ff SWAP1
0x300 MLOAD
0x301 PUSH1 0x1
0x303 PUSH1 0xa0
0x305 PUSH1 0x2
0x307 EXP
0x308 SUB
0x309 SWAP1
0x30a SWAP3
0x30b AND
0x30c SWAP3
0x30d PUSH4 0x3ccfd60b
0x312 SWAP3
0x313 PUSH1 0x4
0x315 DUP1
0x316 DUP5
0x317 ADD
0x318 SWAP4
0x319 DUP3
0x31a SWAP1
0x31b SUB
0x31c ADD
0x31d DUP2
0x31e DUP4
0x31f DUP8
0x320 DUP1
0x321 EXTCODESIZE
0x322 ISZERO
0x323 DUP1
0x324 ISZERO
0x325 PUSH1 0xbd
0x327 JUMPI
---
0x2d4: V177 = 0x0
0x2d7: V178 = S[0x0]
0x2d8: V179 = 0x40
0x2db: V180 = M[0x40]
0x2dc: V181 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2fe: M[V180] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x300: V182 = M[0x40]
0x301: V183 = 0x1
0x303: V184 = 0xa0
0x305: V185 = 0x2
0x307: V186 = EXP 0x2 0xa0
0x308: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30b: V188 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V189 = 0x3ccfd60b
0x313: V190 = 0x4
0x317: V191 = ADD V180 0x4
0x31b: V192 = SUB V180 V182
0x31c: V193 = ADD V192 0x4
0x321: V194 = EXTCODESIZE V188
0x322: V195 = ISZERO V194
0x324: V196 = ISZERO V195
0x325: V197 = 0xbd
0x327: THROWI V196
---
Entry stack: []
Stack pops: 0
Stack additions: [V188, 0x3ccfd60b, V191, 0x0, V182, V193, V182, 0x0, V188, V195]
Exit stack: [V188, 0x3ccfd60b, V191, 0x0, V182, V193, V182, 0x0, V188, V195]

================================

Block 0x328
[0x328:0x335]
---
Predecessors: [0x2d4]
Successors: [0x336]
---
0x328 PUSH1 0x0
0x32a DUP1
0x32b REVERT
0x32c JUMPDEST
0x32d POP
0x32e GAS
0x32f CALL
0x330 ISZERO
0x331 DUP1
0x332 ISZERO
0x333 PUSH1 0xd0
0x335 JUMPI
---
0x328: V198 = 0x0
0x32b: REVERT 0x0 0x0
0x32c: JUMPDEST 
0x32e: V199 = GAS
0x32f: V200 = CALL V199 S1 S2 S3 S4 S5 S6
0x330: V201 = ISZERO V200
0x332: V202 = ISZERO V201
0x333: V203 = 0xd0
0x335: THROWI V202
---
Entry stack: [V188, 0x3ccfd60b, V191, 0x0, V182, V193, V182, 0x0, V188, V195]
Stack pops: 0
Stack additions: [V201]
Exit stack: []

================================

Block 0x336
[0x336:0x3bd]
---
Predecessors: [0x328]
Successors: []
---
0x336 RETURNDATASIZE
0x337 PUSH1 0x0
0x339 DUP1
0x33a RETURNDATACOPY
0x33b RETURNDATASIZE
0x33c PUSH1 0x0
0x33e REVERT
0x33f JUMPDEST
0x340 POP
0x341 CALLER
0x342 SWAP3
0x343 POP
0x344 POP
0x345 POP
0x346 SELFDESTRUCT
0x347 JUMPDEST
0x348 PUSH1 0x35
0x34a DUP1
0x34b PUSH2 0xe6
0x34e PUSH1 0x0
0x350 CODECOPY
0x351 PUSH1 0x0
0x353 RETURN
0x354 STOP
0x355 PUSH1 0x80
0x357 PUSH1 0x40
0x359 MSTORE
0x35a PUSH1 0x0
0x35c DUP1
0x35d REVERT
0x35e STOP
0x35f LOG1
0x360 PUSH6 0x627a7a723058
0x367 SHA3
0x368 ADDMOD
0x369 ORIGIN
0x36a MISSING 0xde
0x36b CALLDATACOPY
0x36c DUP8
0x36d CODESIZE
0x36e DUP2
0x36f PUSH25 0x77040504bfea62ba9842f8231db68a85b022a29d29c9234f00
0x389 MISSING 0x29
0x38a LOG1
0x38b PUSH6 0x627a7a723058
0x392 SHA3
0x393 MISSING 0xc4
0x394 MISSING 0xdd
0x395 MISSING 0x2f
0x396 MISSING 0xce
0x397 MISSING 0xcf
0x398 MISSING 0xd7
0x399 SLT
0x39a MISSING 0xca
0x39b MISSING 0xe4
0x39c MISSING 0xbb
0x39d PUSH32 0x9a7ef591b337ab19964d00d0599e5a07912aeedf000029
---
0x336: V204 = RETURNDATASIZE
0x337: V205 = 0x0
0x33a: RETURNDATACOPY 0x0 0x0 V204
0x33b: V206 = RETURNDATASIZE
0x33c: V207 = 0x0
0x33e: REVERT 0x0 V206
0x33f: JUMPDEST 
0x341: V208 = CALLER
0x346: SELFDESTRUCT V208
0x347: JUMPDEST 
0x348: V209 = 0x35
0x34b: V210 = 0xe6
0x34e: V211 = 0x0
0x350: CODECOPY 0x0 0xe6 0x35
0x351: V212 = 0x0
0x353: RETURN 0x0 0x35
0x354: STOP 
0x355: V213 = 0x80
0x357: V214 = 0x40
0x359: M[0x40] = 0x80
0x35a: V215 = 0x0
0x35d: REVERT 0x0 0x0
0x35e: STOP 
0x35f: LOG S0 S1 S2
0x360: V216 = 0x627a7a723058
0x367: V217 = SHA3 0x627a7a723058 S3
0x368: V218 = ADDMOD V217 S4 S5
0x369: V219 = ORIGIN
0x36a: MISSING 0xde
0x36b: CALLDATACOPY S0 S1 S2
0x36d: V220 = CODESIZE
0x36f: V221 = 0x77040504bfea62ba9842f8231db68a85b022a29d29c9234f00
0x389: MISSING 0x29
0x38a: LOG S0 S1 S2
0x38b: V222 = 0x627a7a723058
0x392: V223 = SHA3 0x627a7a723058 S3
0x393: MISSING 0xc4
0x394: MISSING 0xdd
0x395: MISSING 0x2f
0x396: MISSING 0xce
0x397: MISSING 0xcf
0x398: MISSING 0xd7
0x399: V224 = SLT S0 S1
0x39a: MISSING 0xca
0x39b: MISSING 0xe4
0x39c: MISSING 0xbb
0x39d: V225 = 0x9a7ef591b337ab19964d00d0599e5a07912aeedf000029
---
Entry stack: [V201]
Stack pops: 0
Stack additions: [V219, V218, 0x77040504bfea62ba9842f8231db68a85b022a29d29c9234f00, S10, V220, S10, S3, S4, S5, S6, S7, S8, S9, S10, V223, V224, 0x9a7ef591b337ab19964d00d0599e5a07912aeedf000029]
Exit stack: []

================================

Function 0:
Public function signature: 0x70d1abe1
Entry block: 0x50
Exit block: 0x23a
Body: 0x50, 0x58, 0x5c, 0x68, 0xa3, 0xc6, 0xca, 0x19e, 0x1a7, 0x1bd, 0x220, 0x227, 0x23a, 0x243, 0x24e, 0x253, 0x25e

Function 1:
Public function signature: 0xb69ef8a8
Entry block: 0x7c
Exit block: 0x91
Body: 0x7c, 0x84, 0x88, 0x91, 0x259

Function 2:
Public fallback function
Entry block: 0x4b
Exit block: 0x4b
Body: 0x4b

