Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x27]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x27
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x27
0xc: JUMPI 0x27 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x29]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x91c05b0b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x29
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x91c05b0b
0x22: V15 = EQ V13 0x91c05b0b
0x23: V16 = 0x29
0x26: JUMPI 0x29 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x28]
---
Predecessors: [0x0, 0xd, 0x45e]
Successors: []
---
0x27 JUMPDEST
0x28 STOP
---
0x27: JUMPDEST 
0x28: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x29
[0x29:0x30]
---
Predecessors: [0xd]
Successors: [0x31, 0x35]
---
0x29 JUMPDEST
0x2a CALLVALUE
0x2b DUP1
0x2c ISZERO
0x2d PUSH2 0x35
0x30 JUMPI
---
0x29: JUMPDEST 
0x2a: V17 = CALLVALUE
0x2c: V18 = ISZERO V17
0x2d: V19 = 0x35
0x30: JUMPI 0x35 V18
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V17]
Exit stack: [V13, V17]

================================

Block 0x31
[0x31:0x34]
---
Predecessors: [0x29]
Successors: []
---
0x31 PUSH1 0x0
0x33 DUP1
0x34 REVERT
---
0x31: V20 = 0x0
0x34: REVERT 0x0 0x0
---
Entry stack: [V13, V17]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V17]

================================

Block 0x35
[0x35:0x4c]
---
Predecessors: [0x29]
Successors: [0x4d, 0x52]
---
0x35 JUMPDEST
0x36 POP
0x37 PUSH2 0x27
0x3a PUSH1 0x4
0x3c CALLDATALOAD
0x3d PUSH1 0x0
0x3f DUP1
0x40 PUSH1 0x0
0x42 DUP1
0x43 PUSH1 0x0
0x45 DUP6
0x46 GT
0x47 DUP1
0x48 ISZERO
0x49 PUSH2 0x52
0x4c JUMPI
---
0x35: JUMPDEST 
0x37: V21 = 0x27
0x3a: V22 = 0x4
0x3c: V23 = CALLDATALOAD 0x4
0x3d: V24 = 0x0
0x40: V25 = 0x0
0x43: V26 = 0x0
0x46: V27 = GT V23 0x0
0x48: V28 = ISZERO V27
0x49: V29 = 0x52
0x4c: JUMPI 0x52 V28
---
Entry stack: [V13, V17]
Stack pops: 1
Stack additions: [0x27, V23, 0x0, 0x0, 0x0, 0x0, V27]
Exit stack: [V13, 0x27, V23, 0x0, 0x0, 0x0, 0x0, V27]

================================

Block 0x4d
[0x4d:0x51]
---
Predecessors: [0x35]
Successors: [0x52]
---
0x4d POP
0x4e PUSH1 0x64
0x50 DUP6
0x51 LT
---
0x4e: V30 = 0x64
0x51: V31 = LT V23 0x64
---
Entry stack: [V13, 0x27, V23, 0x0, 0x0, 0x0, 0x0, V27]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V31]
Exit stack: [V13, 0x27, V23, 0x0, 0x0, 0x0, 0x0, V31]

================================

Block 0x52
[0x52:0x58]
---
Predecessors: [0x35, 0x4d]
Successors: [0x59, 0x5d]
---
0x52 JUMPDEST
0x53 ISZERO
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x52: JUMPDEST 
0x53: V32 = ISZERO S0
0x54: V33 = ISZERO V32
0x55: V34 = 0x5d
0x58: JUMPI 0x5d V33
---
Entry stack: [V13, 0x27, V23, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x27, V23, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x52]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V35 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5d
[0x5d:0xd5]
---
Predecessors: [0x52]
Successors: [0xd6, 0xda]
---
0x5d JUMPDEST
0x5e CALLER
0x5f SWAP4
0x60 POP
0x61 ADDRESS
0x62 BALANCE
0x63 SWAP3
0x64 POP
0x65 PUSH1 0x64
0x67 DUP6
0x68 DUP2
0x69 SUB
0x6a DUP5
0x6b MUL
0x6c PUSH1 0x1
0x6e SLOAD
0x6f PUSH1 0x0
0x71 SLOAD
0x72 PUSH1 0x40
0x74 DUP1
0x75 MLOAD
0x76 PUSH32 0xf088d54700000000000000000000000000000000000000000000000000000000
0x97 DUP2
0x98 MSTORE
0x99 PUSH1 0x1
0x9b PUSH1 0xa0
0x9d PUSH1 0x2
0x9f EXP
0xa0 SUB
0xa1 SWAP3
0xa2 DUP4
0xa3 AND
0xa4 PUSH1 0x4
0xa6 DUP3
0xa7 ADD
0xa8 MSTORE
0xa9 SWAP1
0xaa MLOAD
0xab SWAP5
0xac SWAP1
0xad SWAP4
0xae DIV
0xaf SWAP6
0xb0 POP
0xb1 AND
0xb2 SWAP2
0xb3 PUSH4 0xf088d547
0xb8 SWAP2
0xb9 DUP7
0xba SWAP2
0xbb PUSH1 0x24
0xbd DUP1
0xbe DUP4
0xbf ADD
0xc0 SWAP3
0xc1 PUSH1 0x20
0xc3 SWAP3
0xc4 SWAP2
0xc5 SWAP1
0xc6 DUP3
0xc7 SWAP1
0xc8 SUB
0xc9 ADD
0xca DUP2
0xcb DUP6
0xcc DUP9
0xcd DUP1
0xce EXTCODESIZE
0xcf ISZERO
0xd0 DUP1
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0x5d: JUMPDEST 
0x5e: V36 = CALLER
0x61: V37 = ADDRESS
0x62: V38 = BALANCE V37
0x65: V39 = 0x64
0x69: V40 = SUB 0x64 V23
0x6b: V41 = MUL V38 V40
0x6c: V42 = 0x1
0x6e: V43 = S[0x1]
0x6f: V44 = 0x0
0x71: V45 = S[0x0]
0x72: V46 = 0x40
0x75: V47 = M[0x40]
0x76: V48 = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x98: M[V47] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x99: V49 = 0x1
0x9b: V50 = 0xa0
0x9d: V51 = 0x2
0x9f: V52 = EXP 0x2 0xa0
0xa0: V53 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xa4: V55 = 0x4
0xa7: V56 = ADD V47 0x4
0xa8: M[V56] = V54
0xaa: V57 = M[0x40]
0xae: V58 = DIV V41 0x64
0xb1: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xb3: V60 = 0xf088d547
0xbb: V61 = 0x24
0xbf: V62 = ADD V47 0x24
0xc1: V63 = 0x20
0xc8: V64 = SUB V47 V57
0xc9: V65 = ADD V64 0x24
0xce: V66 = EXTCODESIZE V59
0xcf: V67 = ISZERO V66
0xd1: V68 = ISZERO V67
0xd2: V69 = 0xda
0xd5: JUMPI 0xda V68
---
Entry stack: [V13, 0x27, V23, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, V36, V38, V58, S0, V59, 0xf088d547, V38, V62, 0x20, V57, V65, V57, V38, V59, V67]
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V59, 0xf088d547, V38, V62, 0x20, V57, V65, V57, V38, V59, V67]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0x5d]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V70 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V59, 0xf088d547, V38, V62, 0x20, V57, V65, V57, V38, V59, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V59, 0xf088d547, V38, V62, 0x20, V57, V65, V57, V38, V59, V67]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0x5d]
Successors: [0xe5, 0xee]
---
0xda JUMPDEST
0xdb POP
0xdc GAS
0xdd CALL
0xde ISZERO
0xdf DUP1
0xe0 ISZERO
0xe1 PUSH2 0xee
0xe4 JUMPI
---
0xda: JUMPDEST 
0xdc: V71 = GAS
0xdd: V72 = CALL V71 V59 V38 V57 V65 V57 0x20
0xde: V73 = ISZERO V72
0xe0: V74 = ISZERO V73
0xe1: V75 = 0xee
0xe4: JUMPI 0xee V74
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V59, 0xf088d547, V38, V62, 0x20, V57, V65, V57, V38, V59, V67]
Stack pops: 7
Stack additions: [V73]
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V59, 0xf088d547, V38, V62, V73]

================================

Block 0xe5
[0xe5:0xed]
---
Predecessors: [0xda]
Successors: []
---
0xe5 RETURNDATASIZE
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 RETURNDATACOPY
0xea RETURNDATASIZE
0xeb PUSH1 0x0
0xed REVERT
---
0xe5: V76 = RETURNDATASIZE
0xe6: V77 = 0x0
0xe9: RETURNDATACOPY 0x0 0x0 V76
0xea: V78 = RETURNDATASIZE
0xeb: V79 = 0x0
0xed: REVERT 0x0 V78
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V59, 0xf088d547, V38, V62, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V59, 0xf088d547, V38, V62, V73]

================================

Block 0xee
[0xee:0x100]
---
Predecessors: [0xda]
Successors: [0x101, 0x105]
---
0xee JUMPDEST
0xef POP
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 RETURNDATASIZE
0xf8 PUSH1 0x20
0xfa DUP2
0xfb LT
0xfc ISZERO
0xfd PUSH2 0x105
0x100 JUMPI
---
0xee: JUMPDEST 
0xf4: V80 = 0x40
0xf6: V81 = M[0x40]
0xf7: V82 = RETURNDATASIZE
0xf8: V83 = 0x20
0xfb: V84 = LT V82 0x20
0xfc: V85 = ISZERO V84
0xfd: V86 = 0x105
0x100: JUMPI 0x105 V85
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V59, 0xf088d547, V38, V62, V73]
Stack pops: 5
Stack additions: [V81, V82]
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V81, V82]

================================

Block 0x101
[0x101:0x104]
---
Predecessors: [0xee]
Successors: []
---
0x101 PUSH1 0x0
0x103 DUP1
0x104 REVERT
---
0x101: V87 = 0x0
0x104: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V81, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V81, V82]

================================

Block 0x105
[0x105:0x170]
---
Predecessors: [0xee]
Successors: [0x171, 0x175]
---
0x105 JUMPDEST
0x106 POP
0x107 POP
0x108 PUSH1 0x1
0x10a SLOAD
0x10b PUSH1 0x40
0x10d DUP1
0x10e MLOAD
0x10f PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x130 DUP2
0x131 MSTORE
0x132 ADDRESS
0x133 PUSH1 0x4
0x135 DUP3
0x136 ADD
0x137 MSTORE
0x138 SWAP1
0x139 MLOAD
0x13a PUSH1 0x1
0x13c PUSH1 0xa0
0x13e PUSH1 0x2
0x140 EXP
0x141 SUB
0x142 SWAP1
0x143 SWAP3
0x144 AND
0x145 SWAP2
0x146 PUSH4 0xe4849b32
0x14b SWAP2
0x14c DUP4
0x14d SWAP2
0x14e PUSH4 0x70a08231
0x153 SWAP2
0x154 PUSH1 0x24
0x156 DUP1
0x157 DUP3
0x158 ADD
0x159 SWAP3
0x15a PUSH1 0x20
0x15c SWAP3
0x15d SWAP1
0x15e SWAP2
0x15f SWAP1
0x160 DUP3
0x161 SWAP1
0x162 SUB
0x163 ADD
0x164 DUP2
0x165 PUSH1 0x0
0x167 DUP8
0x168 DUP1
0x169 EXTCODESIZE
0x16a ISZERO
0x16b DUP1
0x16c ISZERO
0x16d PUSH2 0x175
0x170 JUMPI
---
0x105: JUMPDEST 
0x108: V88 = 0x1
0x10a: V89 = S[0x1]
0x10b: V90 = 0x40
0x10e: V91 = M[0x40]
0x10f: V92 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x131: M[V91] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x132: V93 = ADDRESS
0x133: V94 = 0x4
0x136: V95 = ADD V91 0x4
0x137: M[V95] = V93
0x139: V96 = M[0x40]
0x13a: V97 = 0x1
0x13c: V98 = 0xa0
0x13e: V99 = 0x2
0x140: V100 = EXP 0x2 0xa0
0x141: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x144: V102 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x146: V103 = 0xe4849b32
0x14e: V104 = 0x70a08231
0x154: V105 = 0x24
0x158: V106 = ADD V91 0x24
0x15a: V107 = 0x20
0x162: V108 = SUB V91 V96
0x163: V109 = ADD V108 0x24
0x165: V110 = 0x0
0x169: V111 = EXTCODESIZE V102
0x16a: V112 = ISZERO V111
0x16c: V113 = ISZERO V112
0x16d: V114 = 0x175
0x170: JUMPI 0x175 V113
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V81, V82]
Stack pops: 2
Stack additions: [V102, 0xe4849b32, V102, 0x70a08231, V106, 0x20, V96, V109, V96, 0x0, V102, V112]
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V102, 0x70a08231, V106, 0x20, V96, V109, V96, 0x0, V102, V112]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x105]
Successors: []
---
0x171 PUSH1 0x0
0x173 DUP1
0x174 REVERT
---
0x171: V115 = 0x0
0x174: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V102, 0x70a08231, V106, 0x20, V96, V109, V96, 0x0, V102, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V102, 0x70a08231, V106, 0x20, V96, V109, V96, 0x0, V102, V112]

================================

Block 0x175
[0x175:0x17f]
---
Predecessors: [0x105]
Successors: [0x180, 0x189]
---
0x175 JUMPDEST
0x176 POP
0x177 GAS
0x178 CALL
0x179 ISZERO
0x17a DUP1
0x17b ISZERO
0x17c PUSH2 0x189
0x17f JUMPI
---
0x175: JUMPDEST 
0x177: V116 = GAS
0x178: V117 = CALL V116 V102 0x0 V96 V109 V96 0x20
0x179: V118 = ISZERO V117
0x17b: V119 = ISZERO V118
0x17c: V120 = 0x189
0x17f: JUMPI 0x189 V119
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V102, 0x70a08231, V106, 0x20, V96, V109, V96, 0x0, V102, V112]
Stack pops: 7
Stack additions: [V118]
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V102, 0x70a08231, V106, V118]

================================

Block 0x180
[0x180:0x188]
---
Predecessors: [0x175]
Successors: []
---
0x180 RETURNDATASIZE
0x181 PUSH1 0x0
0x183 DUP1
0x184 RETURNDATACOPY
0x185 RETURNDATASIZE
0x186 PUSH1 0x0
0x188 REVERT
---
0x180: V121 = RETURNDATASIZE
0x181: V122 = 0x0
0x184: RETURNDATACOPY 0x0 0x0 V121
0x185: V123 = RETURNDATASIZE
0x186: V124 = 0x0
0x188: REVERT 0x0 V123
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V102, 0x70a08231, V106, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V102, 0x70a08231, V106, V118]

================================

Block 0x189
[0x189:0x19a]
---
Predecessors: [0x175]
Successors: [0x19b, 0x19f]
---
0x189 JUMPDEST
0x18a POP
0x18b POP
0x18c POP
0x18d POP
0x18e PUSH1 0x40
0x190 MLOAD
0x191 RETURNDATASIZE
0x192 PUSH1 0x20
0x194 DUP2
0x195 LT
0x196 ISZERO
0x197 PUSH2 0x19f
0x19a JUMPI
---
0x189: JUMPDEST 
0x18e: V125 = 0x40
0x190: V126 = M[0x40]
0x191: V127 = RETURNDATASIZE
0x192: V128 = 0x20
0x195: V129 = LT V127 0x20
0x196: V130 = ISZERO V129
0x197: V131 = 0x19f
0x19a: JUMPI 0x19f V130
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V102, 0x70a08231, V106, V118]
Stack pops: 4
Stack additions: [V126, V127]
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V126, V127]

================================

Block 0x19b
[0x19b:0x19e]
---
Predecessors: [0x189]
Successors: []
---
0x19b PUSH1 0x0
0x19d DUP1
0x19e REVERT
---
0x19b: V132 = 0x0
0x19e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V126, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V126, V127]

================================

Block 0x19f
[0x19f:0x1d8]
---
Predecessors: [0x189]
Successors: [0x1d9, 0x1dd]
---
0x19f JUMPDEST
0x1a0 POP
0x1a1 MLOAD
0x1a2 PUSH1 0x40
0x1a4 DUP1
0x1a5 MLOAD
0x1a6 PUSH1 0xe0
0x1a8 PUSH1 0x2
0x1aa EXP
0x1ab PUSH4 0xffffffff
0x1b0 DUP6
0x1b1 AND
0x1b2 MUL
0x1b3 DUP2
0x1b4 MSTORE
0x1b5 PUSH1 0x4
0x1b7 DUP2
0x1b8 ADD
0x1b9 SWAP3
0x1ba SWAP1
0x1bb SWAP3
0x1bc MSTORE
0x1bd MLOAD
0x1be PUSH1 0x24
0x1c0 DUP1
0x1c1 DUP4
0x1c2 ADD
0x1c3 SWAP3
0x1c4 PUSH1 0x0
0x1c6 SWAP3
0x1c7 SWAP2
0x1c8 SWAP1
0x1c9 DUP3
0x1ca SWAP1
0x1cb SUB
0x1cc ADD
0x1cd DUP2
0x1ce DUP4
0x1cf DUP8
0x1d0 DUP1
0x1d1 EXTCODESIZE
0x1d2 ISZERO
0x1d3 DUP1
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x19f: JUMPDEST 
0x1a1: V133 = M[V126]
0x1a2: V134 = 0x40
0x1a5: V135 = M[0x40]
0x1a6: V136 = 0xe0
0x1a8: V137 = 0x2
0x1aa: V138 = EXP 0x2 0xe0
0x1ab: V139 = 0xffffffff
0x1b1: V140 = AND 0xe4849b32 0xffffffff
0x1b2: V141 = MUL 0xe4849b32 0x100000000000000000000000000000000000000000000000000000000
0x1b4: M[V135] = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x1b5: V142 = 0x4
0x1b8: V143 = ADD V135 0x4
0x1bc: M[V143] = V133
0x1bd: V144 = M[0x40]
0x1be: V145 = 0x24
0x1c2: V146 = ADD V135 0x24
0x1c4: V147 = 0x0
0x1cb: V148 = SUB V135 V144
0x1cc: V149 = ADD V148 0x24
0x1d1: V150 = EXTCODESIZE V102
0x1d2: V151 = ISZERO V150
0x1d4: V152 = ISZERO V151
0x1d5: V153 = 0x1dd
0x1d8: JUMPI 0x1dd V152
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V126, V127]
Stack pops: 4
Stack additions: [S3, S2, V146, 0x0, V144, V149, V144, 0x0, S3, V151]
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V146, 0x0, V144, V149, V144, 0x0, V102, V151]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x19f]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
---
0x1d9: V154 = 0x0
0x1dc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V146, 0x0, V144, V149, V144, 0x0, V102, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V146, 0x0, V144, V149, V144, 0x0, V102, V151]

================================

Block 0x1dd
[0x1dd:0x1e7]
---
Predecessors: [0x19f]
Successors: [0x1e8, 0x1f1]
---
0x1dd JUMPDEST
0x1de POP
0x1df GAS
0x1e0 CALL
0x1e1 ISZERO
0x1e2 DUP1
0x1e3 ISZERO
0x1e4 PUSH2 0x1f1
0x1e7 JUMPI
---
0x1dd: JUMPDEST 
0x1df: V155 = GAS
0x1e0: V156 = CALL V155 V102 0x0 V144 V149 V144 0x0
0x1e1: V157 = ISZERO V156
0x1e3: V158 = ISZERO V157
0x1e4: V159 = 0x1f1
0x1e7: JUMPI 0x1f1 V158
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V146, 0x0, V144, V149, V144, 0x0, V102, V151]
Stack pops: 7
Stack additions: [V157]
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V146, V157]

================================

Block 0x1e8
[0x1e8:0x1f0]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e8 RETURNDATASIZE
0x1e9 PUSH1 0x0
0x1eb DUP1
0x1ec RETURNDATACOPY
0x1ed RETURNDATASIZE
0x1ee PUSH1 0x0
0x1f0 REVERT
---
0x1e8: V160 = RETURNDATASIZE
0x1e9: V161 = 0x0
0x1ec: RETURNDATACOPY 0x0 0x0 V160
0x1ed: V162 = RETURNDATASIZE
0x1ee: V163 = 0x0
0x1f0: REVERT 0x0 V162
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V146, V157]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V146, V157]

================================

Block 0x1f1
[0x1f1:0x254]
---
Predecessors: [0x1dd]
Successors: [0x255, 0x259]
---
0x1f1 JUMPDEST
0x1f2 POP
0x1f3 POP
0x1f4 PUSH1 0x1
0x1f6 SLOAD
0x1f7 PUSH1 0x40
0x1f9 DUP1
0x1fa MLOAD
0x1fb PUSH31 0x65318b00000000000000000000000000000000000000000000000000000000
0x21b DUP2
0x21c MSTORE
0x21d ADDRESS
0x21e PUSH1 0x4
0x220 DUP3
0x221 ADD
0x222 MSTORE
0x223 SWAP1
0x224 MLOAD
0x225 PUSH1 0x1
0x227 PUSH1 0xa0
0x229 PUSH1 0x2
0x22b EXP
0x22c SUB
0x22d SWAP1
0x22e SWAP3
0x22f AND
0x230 SWAP4
0x231 POP
0x232 PUSH3 0x65318b
0x236 SWAP3
0x237 POP
0x238 PUSH1 0x24
0x23a DUP1
0x23b DUP3
0x23c ADD
0x23d SWAP3
0x23e PUSH1 0x20
0x240 SWAP3
0x241 SWAP1
0x242 SWAP2
0x243 SWAP1
0x244 DUP3
0x245 SWAP1
0x246 SUB
0x247 ADD
0x248 DUP2
0x249 PUSH1 0x0
0x24b DUP8
0x24c DUP1
0x24d EXTCODESIZE
0x24e ISZERO
0x24f DUP1
0x250 ISZERO
0x251 PUSH2 0x259
0x254 JUMPI
---
0x1f1: JUMPDEST 
0x1f4: V164 = 0x1
0x1f6: V165 = S[0x1]
0x1f7: V166 = 0x40
0x1fa: V167 = M[0x40]
0x1fb: V168 = 0x65318b00000000000000000000000000000000000000000000000000000000
0x21c: M[V167] = 0x65318b00000000000000000000000000000000000000000000000000000000
0x21d: V169 = ADDRESS
0x21e: V170 = 0x4
0x221: V171 = ADD V167 0x4
0x222: M[V171] = V169
0x224: V172 = M[0x40]
0x225: V173 = 0x1
0x227: V174 = 0xa0
0x229: V175 = 0x2
0x22b: V176 = EXP 0x2 0xa0
0x22c: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22f: V178 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x232: V179 = 0x65318b
0x238: V180 = 0x24
0x23c: V181 = ADD V167 0x24
0x23e: V182 = 0x20
0x246: V183 = SUB V167 V172
0x247: V184 = ADD V183 0x24
0x249: V185 = 0x0
0x24d: V186 = EXTCODESIZE V178
0x24e: V187 = ISZERO V186
0x250: V188 = ISZERO V187
0x251: V189 = 0x259
0x254: JUMPI 0x259 V188
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V102, 0xe4849b32, V146, V157]
Stack pops: 4
Stack additions: [V178, 0x65318b, V181, 0x20, V172, V184, V172, 0x0, V178, V187]
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V178, 0x65318b, V181, 0x20, V172, V184, V172, 0x0, V178, V187]

================================

Block 0x255
[0x255:0x258]
---
Predecessors: [0x1f1]
Successors: []
---
0x255 PUSH1 0x0
0x257 DUP1
0x258 REVERT
---
0x255: V190 = 0x0
0x258: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V178, 0x65318b, V181, 0x20, V172, V184, V172, 0x0, V178, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V178, 0x65318b, V181, 0x20, V172, V184, V172, 0x0, V178, V187]

================================

Block 0x259
[0x259:0x263]
---
Predecessors: [0x1f1]
Successors: [0x264, 0x26d]
---
0x259 JUMPDEST
0x25a POP
0x25b GAS
0x25c CALL
0x25d ISZERO
0x25e DUP1
0x25f ISZERO
0x260 PUSH2 0x26d
0x263 JUMPI
---
0x259: JUMPDEST 
0x25b: V191 = GAS
0x25c: V192 = CALL V191 V178 0x0 V172 V184 V172 0x20
0x25d: V193 = ISZERO V192
0x25f: V194 = ISZERO V193
0x260: V195 = 0x26d
0x263: JUMPI 0x26d V194
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V178, 0x65318b, V181, 0x20, V172, V184, V172, 0x0, V178, V187]
Stack pops: 7
Stack additions: [V193]
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V178, 0x65318b, V181, V193]

================================

Block 0x264
[0x264:0x26c]
---
Predecessors: [0x259]
Successors: []
---
0x264 RETURNDATASIZE
0x265 PUSH1 0x0
0x267 DUP1
0x268 RETURNDATACOPY
0x269 RETURNDATASIZE
0x26a PUSH1 0x0
0x26c REVERT
---
0x264: V196 = RETURNDATASIZE
0x265: V197 = 0x0
0x268: RETURNDATACOPY 0x0 0x0 V196
0x269: V198 = RETURNDATASIZE
0x26a: V199 = 0x0
0x26c: REVERT 0x0 V198
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V178, 0x65318b, V181, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V178, 0x65318b, V181, V193]

================================

Block 0x26d
[0x26d:0x27e]
---
Predecessors: [0x259]
Successors: [0x27f, 0x283]
---
0x26d JUMPDEST
0x26e POP
0x26f POP
0x270 POP
0x271 POP
0x272 PUSH1 0x40
0x274 MLOAD
0x275 RETURNDATASIZE
0x276 PUSH1 0x20
0x278 DUP2
0x279 LT
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x26d: JUMPDEST 
0x272: V200 = 0x40
0x274: V201 = M[0x40]
0x275: V202 = RETURNDATASIZE
0x276: V203 = 0x20
0x279: V204 = LT V202 0x20
0x27a: V205 = ISZERO V204
0x27b: V206 = 0x283
0x27e: JUMPI 0x283 V205
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V178, 0x65318b, V181, V193]
Stack pops: 4
Stack additions: [V201, V202]
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V201, V202]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x26d]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V207 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V201, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V201, V202]

================================

Block 0x283
[0x283:0x287]
---
Predecessors: [0x26d]
Successors: [0x288]
---
0x283 JUMPDEST
0x284 POP
0x285 MLOAD
0x286 SWAP1
0x287 POP
---
0x283: JUMPDEST 
0x285: V208 = M[V201]
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, 0x0, V201, V202]
Stack pops: 3
Stack additions: [V208]
Exit stack: [V13, 0x27, V23, V36, V38, V58, V208]

================================

Block 0x288
[0x288:0x28f]
---
Predecessors: [0x283, 0x3e4]
Successors: [0x290, 0x3f7]
---
0x288 JUMPDEST
0x289 DUP2
0x28a DUP2
0x28b LT
0x28c PUSH2 0x3f7
0x28f JUMPI
---
0x288: JUMPDEST 
0x28b: V209 = LT S0 V58
0x28c: V210 = 0x3f7
0x28f: JUMPI 0x3f7 V209
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x27, V23, V36, V38, V58, S0]

================================

Block 0x290
[0x290:0x2dd]
---
Predecessors: [0x288]
Successors: [0x2de, 0x2e2]
---
0x290 PUSH1 0x1
0x292 PUSH1 0x0
0x294 SWAP1
0x295 SLOAD
0x296 SWAP1
0x297 PUSH2 0x100
0x29a EXP
0x29b SWAP1
0x29c DIV
0x29d PUSH1 0x1
0x29f PUSH1 0xa0
0x2a1 PUSH1 0x2
0x2a3 EXP
0x2a4 SUB
0x2a5 AND
0x2a6 PUSH1 0x1
0x2a8 PUSH1 0xa0
0x2aa PUSH1 0x2
0x2ac EXP
0x2ad SUB
0x2ae AND
0x2af PUSH4 0xfdb5a03e
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 DUP2
0x2b8 PUSH4 0xffffffff
0x2bd AND
0x2be PUSH1 0xe0
0x2c0 PUSH1 0x2
0x2c2 EXP
0x2c3 MUL
0x2c4 DUP2
0x2c5 MSTORE
0x2c6 PUSH1 0x4
0x2c8 ADD
0x2c9 PUSH1 0x0
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce DUP1
0x2cf DUP4
0x2d0 SUB
0x2d1 DUP2
0x2d2 PUSH1 0x0
0x2d4 DUP8
0x2d5 DUP1
0x2d6 EXTCODESIZE
0x2d7 ISZERO
0x2d8 DUP1
0x2d9 ISZERO
0x2da PUSH2 0x2e2
0x2dd JUMPI
---
0x290: V211 = 0x1
0x292: V212 = 0x0
0x295: V213 = S[0x1]
0x297: V214 = 0x100
0x29a: V215 = EXP 0x100 0x0
0x29c: V216 = DIV V213 0x1
0x29d: V217 = 0x1
0x29f: V218 = 0xa0
0x2a1: V219 = 0x2
0x2a3: V220 = EXP 0x2 0xa0
0x2a4: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a5: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2a6: V223 = 0x1
0x2a8: V224 = 0xa0
0x2aa: V225 = 0x2
0x2ac: V226 = EXP 0x2 0xa0
0x2ad: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ae: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x2af: V229 = 0xfdb5a03e
0x2b4: V230 = 0x40
0x2b6: V231 = M[0x40]
0x2b8: V232 = 0xffffffff
0x2bd: V233 = AND 0xffffffff 0xfdb5a03e
0x2be: V234 = 0xe0
0x2c0: V235 = 0x2
0x2c2: V236 = EXP 0x2 0xe0
0x2c3: V237 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xfdb5a03e
0x2c5: M[V231] = 0xfdb5a03e00000000000000000000000000000000000000000000000000000000
0x2c6: V238 = 0x4
0x2c8: V239 = ADD 0x4 V231
0x2c9: V240 = 0x0
0x2cb: V241 = 0x40
0x2cd: V242 = M[0x40]
0x2d0: V243 = SUB V239 V242
0x2d2: V244 = 0x0
0x2d6: V245 = EXTCODESIZE V228
0x2d7: V246 = ISZERO V245
0x2d9: V247 = ISZERO V246
0x2da: V248 = 0x2e2
0x2dd: JUMPI 0x2e2 V247
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S0]
Stack pops: 0
Stack additions: [V228, 0xfdb5a03e, V239, 0x0, V242, V243, V242, 0x0, V228, V246]
Exit stack: [V13, 0x27, V23, V36, V38, V58, S0, V228, 0xfdb5a03e, V239, 0x0, V242, V243, V242, 0x0, V228, V246]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x290]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V249 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S10, V228, 0xfdb5a03e, V239, 0x0, V242, V243, V242, 0x0, V228, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, S10, V228, 0xfdb5a03e, V239, 0x0, V242, V243, V242, 0x0, V228, V246]

================================

Block 0x2e2
[0x2e2:0x2ec]
---
Predecessors: [0x290]
Successors: [0x2ed, 0x2f6]
---
0x2e2 JUMPDEST
0x2e3 POP
0x2e4 GAS
0x2e5 CALL
0x2e6 ISZERO
0x2e7 DUP1
0x2e8 ISZERO
0x2e9 PUSH2 0x2f6
0x2ec JUMPI
---
0x2e2: JUMPDEST 
0x2e4: V250 = GAS
0x2e5: V251 = CALL V250 V228 0x0 V242 V243 V242 0x0
0x2e6: V252 = ISZERO V251
0x2e8: V253 = ISZERO V252
0x2e9: V254 = 0x2f6
0x2ec: JUMPI 0x2f6 V253
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S10, V228, 0xfdb5a03e, V239, 0x0, V242, V243, V242, 0x0, V228, V246]
Stack pops: 7
Stack additions: [V252]
Exit stack: [V13, 0x27, V23, V36, V38, V58, S10, V228, 0xfdb5a03e, V239, V252]

================================

Block 0x2ed
[0x2ed:0x2f5]
---
Predecessors: [0x2e2]
Successors: []
---
0x2ed RETURNDATASIZE
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 RETURNDATACOPY
0x2f2 RETURNDATASIZE
0x2f3 PUSH1 0x0
0x2f5 REVERT
---
0x2ed: V255 = RETURNDATASIZE
0x2ee: V256 = 0x0
0x2f1: RETURNDATACOPY 0x0 0x0 V255
0x2f2: V257 = RETURNDATASIZE
0x2f3: V258 = 0x0
0x2f5: REVERT 0x0 V257
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S4, V228, 0xfdb5a03e, V239, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, S4, V228, 0xfdb5a03e, V239, V252]

================================

Block 0x2f6
[0x2f6:0x363]
---
Predecessors: [0x2e2]
Successors: [0x364, 0x368]
---
0x2f6 JUMPDEST
0x2f7 POP
0x2f8 POP
0x2f9 PUSH1 0x1
0x2fb SLOAD
0x2fc PUSH1 0x40
0x2fe DUP1
0x2ff MLOAD
0x300 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x321 DUP2
0x322 MSTORE
0x323 ADDRESS
0x324 PUSH1 0x4
0x326 DUP3
0x327 ADD
0x328 MSTORE
0x329 SWAP1
0x32a MLOAD
0x32b PUSH1 0x1
0x32d PUSH1 0xa0
0x32f PUSH1 0x2
0x331 EXP
0x332 SUB
0x333 SWAP1
0x334 SWAP3
0x335 AND
0x336 SWAP4
0x337 POP
0x338 PUSH4 0xe4849b32
0x33d SWAP3
0x33e POP
0x33f DUP4
0x340 SWAP2
0x341 PUSH4 0x70a08231
0x346 SWAP2
0x347 PUSH1 0x24
0x349 DUP1
0x34a DUP3
0x34b ADD
0x34c SWAP3
0x34d PUSH1 0x20
0x34f SWAP3
0x350 SWAP1
0x351 SWAP2
0x352 SWAP1
0x353 DUP3
0x354 SWAP1
0x355 SUB
0x356 ADD
0x357 DUP2
0x358 PUSH1 0x0
0x35a DUP8
0x35b DUP1
0x35c EXTCODESIZE
0x35d ISZERO
0x35e DUP1
0x35f ISZERO
0x360 PUSH2 0x368
0x363 JUMPI
---
0x2f6: JUMPDEST 
0x2f9: V259 = 0x1
0x2fb: V260 = S[0x1]
0x2fc: V261 = 0x40
0x2ff: V262 = M[0x40]
0x300: V263 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x322: M[V262] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x323: V264 = ADDRESS
0x324: V265 = 0x4
0x327: V266 = ADD V262 0x4
0x328: M[V266] = V264
0x32a: V267 = M[0x40]
0x32b: V268 = 0x1
0x32d: V269 = 0xa0
0x32f: V270 = 0x2
0x331: V271 = EXP 0x2 0xa0
0x332: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x335: V273 = AND V260 0xffffffffffffffffffffffffffffffffffffffff
0x338: V274 = 0xe4849b32
0x341: V275 = 0x70a08231
0x347: V276 = 0x24
0x34b: V277 = ADD V262 0x24
0x34d: V278 = 0x20
0x355: V279 = SUB V262 V267
0x356: V280 = ADD V279 0x24
0x358: V281 = 0x0
0x35c: V282 = EXTCODESIZE V273
0x35d: V283 = ISZERO V282
0x35f: V284 = ISZERO V283
0x360: V285 = 0x368
0x363: JUMPI 0x368 V284
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S4, V228, 0xfdb5a03e, V239, V252]
Stack pops: 4
Stack additions: [V273, 0xe4849b32, V273, 0x70a08231, V277, 0x20, V267, V280, V267, 0x0, V273, V283]
Exit stack: [V13, 0x27, V23, V36, V38, V58, S4, V273, 0xe4849b32, V273, 0x70a08231, V277, 0x20, V267, V280, V267, 0x0, V273, V283]

================================

Block 0x364
[0x364:0x367]
---
Predecessors: [0x2f6]
Successors: []
---
0x364 PUSH1 0x0
0x366 DUP1
0x367 REVERT
---
0x364: V286 = 0x0
0x367: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S12, V273, 0xe4849b32, V273, 0x70a08231, V277, 0x20, V267, V280, V267, 0x0, V273, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, S12, V273, 0xe4849b32, V273, 0x70a08231, V277, 0x20, V267, V280, V267, 0x0, V273, V283]

================================

Block 0x368
[0x368:0x372]
---
Predecessors: [0x2f6]
Successors: [0x373, 0x37c]
---
0x368 JUMPDEST
0x369 POP
0x36a GAS
0x36b CALL
0x36c ISZERO
0x36d DUP1
0x36e ISZERO
0x36f PUSH2 0x37c
0x372 JUMPI
---
0x368: JUMPDEST 
0x36a: V287 = GAS
0x36b: V288 = CALL V287 V273 0x0 V267 V280 V267 0x20
0x36c: V289 = ISZERO V288
0x36e: V290 = ISZERO V289
0x36f: V291 = 0x37c
0x372: JUMPI 0x37c V290
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S12, V273, 0xe4849b32, V273, 0x70a08231, V277, 0x20, V267, V280, V267, 0x0, V273, V283]
Stack pops: 7
Stack additions: [V289]
Exit stack: [V13, 0x27, V23, V36, V38, V58, S12, V273, 0xe4849b32, V273, 0x70a08231, V277, V289]

================================

Block 0x373
[0x373:0x37b]
---
Predecessors: [0x368]
Successors: []
---
0x373 RETURNDATASIZE
0x374 PUSH1 0x0
0x376 DUP1
0x377 RETURNDATACOPY
0x378 RETURNDATASIZE
0x379 PUSH1 0x0
0x37b REVERT
---
0x373: V292 = RETURNDATASIZE
0x374: V293 = 0x0
0x377: RETURNDATACOPY 0x0 0x0 V292
0x378: V294 = RETURNDATASIZE
0x379: V295 = 0x0
0x37b: REVERT 0x0 V294
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S6, V273, 0xe4849b32, V273, 0x70a08231, V277, V289]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, S6, V273, 0xe4849b32, V273, 0x70a08231, V277, V289]

================================

Block 0x37c
[0x37c:0x38d]
---
Predecessors: [0x368]
Successors: [0x38e, 0x392]
---
0x37c JUMPDEST
0x37d POP
0x37e POP
0x37f POP
0x380 POP
0x381 PUSH1 0x40
0x383 MLOAD
0x384 RETURNDATASIZE
0x385 PUSH1 0x20
0x387 DUP2
0x388 LT
0x389 ISZERO
0x38a PUSH2 0x392
0x38d JUMPI
---
0x37c: JUMPDEST 
0x381: V296 = 0x40
0x383: V297 = M[0x40]
0x384: V298 = RETURNDATASIZE
0x385: V299 = 0x20
0x388: V300 = LT V298 0x20
0x389: V301 = ISZERO V300
0x38a: V302 = 0x392
0x38d: JUMPI 0x392 V301
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S6, V273, 0xe4849b32, V273, 0x70a08231, V277, V289]
Stack pops: 4
Stack additions: [V297, V298]
Exit stack: [V13, 0x27, V23, V36, V38, V58, S6, V273, 0xe4849b32, V297, V298]

================================

Block 0x38e
[0x38e:0x391]
---
Predecessors: [0x37c]
Successors: []
---
0x38e PUSH1 0x0
0x390 DUP1
0x391 REVERT
---
0x38e: V303 = 0x0
0x391: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S4, V273, 0xe4849b32, V297, V298]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, S4, V273, 0xe4849b32, V297, V298]

================================

Block 0x392
[0x392:0x3cb]
---
Predecessors: [0x37c]
Successors: [0x3cc, 0x3d0]
---
0x392 JUMPDEST
0x393 POP
0x394 MLOAD
0x395 PUSH1 0x40
0x397 DUP1
0x398 MLOAD
0x399 PUSH1 0xe0
0x39b PUSH1 0x2
0x39d EXP
0x39e PUSH4 0xffffffff
0x3a3 DUP6
0x3a4 AND
0x3a5 MUL
0x3a6 DUP2
0x3a7 MSTORE
0x3a8 PUSH1 0x4
0x3aa DUP2
0x3ab ADD
0x3ac SWAP3
0x3ad SWAP1
0x3ae SWAP3
0x3af MSTORE
0x3b0 MLOAD
0x3b1 PUSH1 0x24
0x3b3 DUP1
0x3b4 DUP4
0x3b5 ADD
0x3b6 SWAP3
0x3b7 PUSH1 0x0
0x3b9 SWAP3
0x3ba SWAP2
0x3bb SWAP1
0x3bc DUP3
0x3bd SWAP1
0x3be SUB
0x3bf ADD
0x3c0 DUP2
0x3c1 DUP4
0x3c2 DUP8
0x3c3 DUP1
0x3c4 EXTCODESIZE
0x3c5 ISZERO
0x3c6 DUP1
0x3c7 ISZERO
0x3c8 PUSH2 0x3d0
0x3cb JUMPI
---
0x392: JUMPDEST 
0x394: V304 = M[V297]
0x395: V305 = 0x40
0x398: V306 = M[0x40]
0x399: V307 = 0xe0
0x39b: V308 = 0x2
0x39d: V309 = EXP 0x2 0xe0
0x39e: V310 = 0xffffffff
0x3a4: V311 = AND 0xe4849b32 0xffffffff
0x3a5: V312 = MUL 0xe4849b32 0x100000000000000000000000000000000000000000000000000000000
0x3a7: M[V306] = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x3a8: V313 = 0x4
0x3ab: V314 = ADD V306 0x4
0x3af: M[V314] = V304
0x3b0: V315 = M[0x40]
0x3b1: V316 = 0x24
0x3b5: V317 = ADD V306 0x24
0x3b7: V318 = 0x0
0x3be: V319 = SUB V306 V315
0x3bf: V320 = ADD V319 0x24
0x3c4: V321 = EXTCODESIZE V273
0x3c5: V322 = ISZERO V321
0x3c7: V323 = ISZERO V322
0x3c8: V324 = 0x3d0
0x3cb: JUMPI 0x3d0 V323
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S4, V273, 0xe4849b32, V297, V298]
Stack pops: 4
Stack additions: [S3, S2, V317, 0x0, V315, V320, V315, 0x0, S3, V322]
Exit stack: [V13, 0x27, V23, V36, V38, V58, S4, V273, 0xe4849b32, V317, 0x0, V315, V320, V315, 0x0, V273, V322]

================================

Block 0x3cc
[0x3cc:0x3cf]
---
Predecessors: [0x392]
Successors: []
---
0x3cc PUSH1 0x0
0x3ce DUP1
0x3cf REVERT
---
0x3cc: V325 = 0x0
0x3cf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S10, V273, 0xe4849b32, V317, 0x0, V315, V320, V315, 0x0, V273, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, S10, V273, 0xe4849b32, V317, 0x0, V315, V320, V315, 0x0, V273, V322]

================================

Block 0x3d0
[0x3d0:0x3da]
---
Predecessors: [0x392]
Successors: [0x3db, 0x3e4]
---
0x3d0 JUMPDEST
0x3d1 POP
0x3d2 GAS
0x3d3 CALL
0x3d4 ISZERO
0x3d5 DUP1
0x3d6 ISZERO
0x3d7 PUSH2 0x3e4
0x3da JUMPI
---
0x3d0: JUMPDEST 
0x3d2: V326 = GAS
0x3d3: V327 = CALL V326 V273 0x0 V315 V320 V315 0x0
0x3d4: V328 = ISZERO V327
0x3d6: V329 = ISZERO V328
0x3d7: V330 = 0x3e4
0x3da: JUMPI 0x3e4 V329
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S10, V273, 0xe4849b32, V317, 0x0, V315, V320, V315, 0x0, V273, V322]
Stack pops: 7
Stack additions: [V328]
Exit stack: [V13, 0x27, V23, V36, V38, V58, S10, V273, 0xe4849b32, V317, V328]

================================

Block 0x3db
[0x3db:0x3e3]
---
Predecessors: [0x3d0]
Successors: []
---
0x3db RETURNDATASIZE
0x3dc PUSH1 0x0
0x3de DUP1
0x3df RETURNDATACOPY
0x3e0 RETURNDATASIZE
0x3e1 PUSH1 0x0
0x3e3 REVERT
---
0x3db: V331 = RETURNDATASIZE
0x3dc: V332 = 0x0
0x3df: RETURNDATACOPY 0x0 0x0 V331
0x3e0: V333 = RETURNDATASIZE
0x3e1: V334 = 0x0
0x3e3: REVERT 0x0 V333
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S4, V273, 0xe4849b32, V317, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, S4, V273, 0xe4849b32, V317, V328]

================================

Block 0x3e4
[0x3e4:0x3f6]
---
Predecessors: [0x3d0]
Successors: [0x288]
---
0x3e4 JUMPDEST
0x3e5 POP
0x3e6 PUSH1 0x64
0x3e8 SWAP3
0x3e9 POP
0x3ea POP
0x3eb POP
0x3ec PUSH1 0x40
0x3ee DUP3
0x3ef MUL
0x3f0 DIV
0x3f1 SWAP1
0x3f2 POP
0x3f3 PUSH2 0x288
0x3f6 JUMP
---
0x3e4: JUMPDEST 
0x3e6: V335 = 0x64
0x3ec: V336 = 0x40
0x3ef: V337 = MUL S4 0x40
0x3f0: V338 = DIV V337 0x64
0x3f3: V339 = 0x288
0x3f6: JUMP 0x288
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S4, V273, 0xe4849b32, V317, V328]
Stack pops: 5
Stack additions: [V338]
Exit stack: [V13, 0x27, V23, V36, V38, V58, V338]

================================

Block 0x3f7
[0x3f7:0x445]
---
Predecessors: [0x288]
Successors: [0x446, 0x44a]
---
0x3f7 JUMPDEST
0x3f8 PUSH1 0x1
0x3fa PUSH1 0x0
0x3fc SWAP1
0x3fd SLOAD
0x3fe SWAP1
0x3ff PUSH2 0x100
0x402 EXP
0x403 SWAP1
0x404 DIV
0x405 PUSH1 0x1
0x407 PUSH1 0xa0
0x409 PUSH1 0x2
0x40b EXP
0x40c SUB
0x40d AND
0x40e PUSH1 0x1
0x410 PUSH1 0xa0
0x412 PUSH1 0x2
0x414 EXP
0x415 SUB
0x416 AND
0x417 PUSH4 0x3ccfd60b
0x41c PUSH1 0x40
0x41e MLOAD
0x41f DUP2
0x420 PUSH4 0xffffffff
0x425 AND
0x426 PUSH1 0xe0
0x428 PUSH1 0x2
0x42a EXP
0x42b MUL
0x42c DUP2
0x42d MSTORE
0x42e PUSH1 0x4
0x430 ADD
0x431 PUSH1 0x0
0x433 PUSH1 0x40
0x435 MLOAD
0x436 DUP1
0x437 DUP4
0x438 SUB
0x439 DUP2
0x43a PUSH1 0x0
0x43c DUP8
0x43d DUP1
0x43e EXTCODESIZE
0x43f ISZERO
0x440 DUP1
0x441 ISZERO
0x442 PUSH2 0x44a
0x445 JUMPI
---
0x3f7: JUMPDEST 
0x3f8: V340 = 0x1
0x3fa: V341 = 0x0
0x3fd: V342 = S[0x1]
0x3ff: V343 = 0x100
0x402: V344 = EXP 0x100 0x0
0x404: V345 = DIV V342 0x1
0x405: V346 = 0x1
0x407: V347 = 0xa0
0x409: V348 = 0x2
0x40b: V349 = EXP 0x2 0xa0
0x40c: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40d: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x40e: V352 = 0x1
0x410: V353 = 0xa0
0x412: V354 = 0x2
0x414: V355 = EXP 0x2 0xa0
0x415: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x416: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x417: V358 = 0x3ccfd60b
0x41c: V359 = 0x40
0x41e: V360 = M[0x40]
0x420: V361 = 0xffffffff
0x425: V362 = AND 0xffffffff 0x3ccfd60b
0x426: V363 = 0xe0
0x428: V364 = 0x2
0x42a: V365 = EXP 0x2 0xe0
0x42b: V366 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x42d: M[V360] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x42e: V367 = 0x4
0x430: V368 = ADD 0x4 V360
0x431: V369 = 0x0
0x433: V370 = 0x40
0x435: V371 = M[0x40]
0x438: V372 = SUB V368 V371
0x43a: V373 = 0x0
0x43e: V374 = EXTCODESIZE V357
0x43f: V375 = ISZERO V374
0x441: V376 = ISZERO V375
0x442: V377 = 0x44a
0x445: JUMPI 0x44a V376
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S0]
Stack pops: 0
Stack additions: [V357, 0x3ccfd60b, V368, 0x0, V371, V372, V371, 0x0, V357, V375]
Exit stack: [V13, 0x27, V23, V36, V38, V58, S0, V357, 0x3ccfd60b, V368, 0x0, V371, V372, V371, 0x0, V357, V375]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x3f7]
Successors: []
---
0x446 PUSH1 0x0
0x448 DUP1
0x449 REVERT
---
0x446: V378 = 0x0
0x449: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S10, V357, 0x3ccfd60b, V368, 0x0, V371, V372, V371, 0x0, V357, V375]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, S10, V357, 0x3ccfd60b, V368, 0x0, V371, V372, V371, 0x0, V357, V375]

================================

Block 0x44a
[0x44a:0x454]
---
Predecessors: [0x3f7]
Successors: [0x455, 0x45e]
---
0x44a JUMPDEST
0x44b POP
0x44c GAS
0x44d CALL
0x44e ISZERO
0x44f DUP1
0x450 ISZERO
0x451 PUSH2 0x45e
0x454 JUMPI
---
0x44a: JUMPDEST 
0x44c: V379 = GAS
0x44d: V380 = CALL V379 V357 0x0 V371 V372 V371 0x0
0x44e: V381 = ISZERO V380
0x450: V382 = ISZERO V381
0x451: V383 = 0x45e
0x454: JUMPI 0x45e V382
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S10, V357, 0x3ccfd60b, V368, 0x0, V371, V372, V371, 0x0, V357, V375]
Stack pops: 7
Stack additions: [V381]
Exit stack: [V13, 0x27, V23, V36, V38, V58, S10, V357, 0x3ccfd60b, V368, V381]

================================

Block 0x455
[0x455:0x45d]
---
Predecessors: [0x44a]
Successors: []
---
0x455 RETURNDATASIZE
0x456 PUSH1 0x0
0x458 DUP1
0x459 RETURNDATACOPY
0x45a RETURNDATASIZE
0x45b PUSH1 0x0
0x45d REVERT
---
0x455: V384 = RETURNDATASIZE
0x456: V385 = 0x0
0x459: RETURNDATACOPY 0x0 0x0 V384
0x45a: V386 = RETURNDATASIZE
0x45b: V387 = 0x0
0x45d: REVERT 0x0 V386
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S4, V357, 0x3ccfd60b, V368, V381]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V23, V36, V38, V58, S4, V357, 0x3ccfd60b, V368, V381]

================================

Block 0x45e
[0x45e:0x4b9]
---
Predecessors: [0x44a]
Successors: [0x27]
---
0x45e JUMPDEST
0x45f POP
0x460 POP
0x461 PUSH1 0x40
0x463 DUP1
0x464 MLOAD
0x465 PUSH1 0x1
0x467 PUSH1 0xa0
0x469 PUSH1 0x2
0x46b EXP
0x46c SUB
0x46d DUP9
0x46e AND
0x46f DUP2
0x470 MSTORE
0x471 PUSH1 0x20
0x473 DUP2
0x474 ADD
0x475 DUP10
0x476 SWAP1
0x477 MSTORE
0x478 DUP1
0x479 DUP3
0x47a ADD
0x47b DUP8
0x47c SWAP1
0x47d MSTORE
0x47e ADDRESS
0x47f BALANCE
0x480 PUSH1 0x60
0x482 DUP3
0x483 ADD
0x484 MSTORE
0x485 SWAP1
0x486 MLOAD
0x487 PUSH32 0xd10d7522065f0638ad8985eb465490f05e2386a8962ef9ef3fe37445bbda7b31
0x4a8 SWAP4
0x4a9 POP
0x4aa SWAP1
0x4ab DUP2
0x4ac SWAP1
0x4ad SUB
0x4ae PUSH1 0x80
0x4b0 ADD
0x4b1 SWAP2
0x4b2 POP
0x4b3 LOG1
0x4b4 POP
0x4b5 POP
0x4b6 POP
0x4b7 POP
0x4b8 POP
0x4b9 JUMP
---
0x45e: JUMPDEST 
0x461: V388 = 0x40
0x464: V389 = M[0x40]
0x465: V390 = 0x1
0x467: V391 = 0xa0
0x469: V392 = 0x2
0x46b: V393 = EXP 0x2 0xa0
0x46c: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46e: V395 = AND V36 0xffffffffffffffffffffffffffffffffffffffff
0x470: M[V389] = V395
0x471: V396 = 0x20
0x474: V397 = ADD V389 0x20
0x477: M[V397] = V23
0x47a: V398 = ADD 0x40 V389
0x47d: M[V398] = V38
0x47e: V399 = ADDRESS
0x47f: V400 = BALANCE V399
0x480: V401 = 0x60
0x483: V402 = ADD V389 0x60
0x484: M[V402] = V400
0x486: V403 = M[0x40]
0x487: V404 = 0xd10d7522065f0638ad8985eb465490f05e2386a8962ef9ef3fe37445bbda7b31
0x4ad: V405 = SUB V389 V403
0x4ae: V406 = 0x80
0x4b0: V407 = ADD 0x80 V405
0x4b3: LOG V403 V407 0xd10d7522065f0638ad8985eb465490f05e2386a8962ef9ef3fe37445bbda7b31
0x4b9: JUMP 0x27
---
Entry stack: [V13, 0x27, V23, V36, V38, V58, S4, V357, 0x3ccfd60b, V368, V381]
Stack pops: 10
Stack additions: []
Exit stack: [V13]

================================

Block 0x4ba
[0x4ba:0x4d2]
---
Predecessors: []
Successors: [0x4d3]
---
0x4ba STOP
0x4bb LOG1
0x4bc PUSH6 0x627a7a723058
0x4c3 SHA3
0x4c4 MISSING 0xc9
0x4c5 PUSH5 0x5927623d85
0x4cb SWAP3
0x4cc MISSING 0xdf
0x4cd SLT
0x4ce MISSING 0xe8
0x4cf CREATE
0x4d0 EQ
0x4d1 MISSING 0x4e
0x4d2 BYTE
---
0x4ba: STOP 
0x4bb: LOG S0 S1 S2
0x4bc: V408 = 0x627a7a723058
0x4c3: V409 = SHA3 0x627a7a723058 S3
0x4c4: MISSING 0xc9
0x4c5: V410 = 0x5927623d85
0x4cc: MISSING 0xdf
0x4cd: V411 = SLT S0 S1
0x4ce: MISSING 0xe8
0x4cf: V412 = CREATE S0 S1 S2
0x4d0: V413 = EQ V412 S3
0x4d1: MISSING 0x4e
0x4d2: V414 = BYTE S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V409, S2, S0, S1, 0x5927623d85, V411, V413, V414]
Exit stack: []

================================

Block 0x4d3
[0x4d3:0x4f6]
---
Predecessors: [0x4ba]
Successors: []
---
0x4d3 JUMPDEST
0x4d4 SWAP1
0x4d5 MISSING 0xd2
0x4d6 PUSH32 0x4f69c5b3bcdd96862123bd2fd90029
---
0x4d3: JUMPDEST 
0x4d5: MISSING 0xd2
0x4d6: V415 = 0x4f69c5b3bcdd96862123bd2fd90029
---
Entry stack: [V414]
Stack pops: 2
Stack additions: [0x4f69c5b3bcdd96862123bd2fd90029]
Exit stack: []

================================

Function 0:
Public function signature: 0x91c05b0b
Entry block: 0x29
Exit block: 0x3db
Body: 0x27, 0x29, 0x31, 0x35, 0x4d, 0x52, 0x59, 0x5d, 0xd6, 0xda, 0xe5, 0xee, 0x101, 0x105, 0x171, 0x175, 0x180, 0x189, 0x19b, 0x19f, 0x1d9, 0x1dd, 0x1e8, 0x1f1, 0x255, 0x259, 0x264, 0x26d, 0x27f, 0x283, 0x288, 0x290, 0x2de, 0x2e2, 0x2ed, 0x2f6, 0x364, 0x368, 0x373, 0x37c, 0x38e, 0x392, 0x3cc, 0x3d0, 0x3db, 0x3e4, 0x3f7, 0x446, 0x44a, 0x455, 0x45e

Function 1:
Public fallback function
Entry block: 0x27
Exit block: 0x27
Body: 0x27

