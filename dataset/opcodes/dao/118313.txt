Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x81]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x1785f53c
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x81
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x1785f53c
0x22: V15 = EQ V13 0x1785f53c
0x23: V16 = 0x81
0x26: JUMPI 0x81 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xa2]
---
0x27 DUP1
0x28 PUSH4 0x40e6c16f
0x2d EQ
0x2e PUSH2 0xa2
0x31 JUMPI
---
0x28: V17 = 0x40e6c16f
0x2d: V18 = EQ 0x40e6c16f V13
0x2e: V19 = 0xa2
0x31: JUMPI 0xa2 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xc9]
---
0x32 DUP1
0x33 PUSH4 0x41c0e1b5
0x38 EQ
0x39 PUSH2 0xc9
0x3c JUMPI
---
0x33: V20 = 0x41c0e1b5
0x38: V21 = EQ 0x41c0e1b5 V13
0x39: V22 = 0xc9
0x3c: JUMPI 0xc9 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xde]
---
0x3d DUP1
0x3e PUSH4 0x6ec6333d
0x43 EQ
0x44 PUSH2 0xde
0x47 JUMPI
---
0x3e: V23 = 0x6ec6333d
0x43: V24 = EQ 0x6ec6333d V13
0x44: V25 = 0xde
0x47: JUMPI 0xde V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xff]
---
0x48 DUP1
0x49 PUSH4 0x786548dd
0x4e EQ
0x4f PUSH2 0xff
0x52 JUMPI
---
0x49: V26 = 0x786548dd
0x4e: V27 = EQ 0x786548dd V13
0x4f: V28 = 0xff
0x52: JUMPI 0xff V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x114]
---
0x53 DUP1
0x54 PUSH4 0xa70ef5b0
0x59 EQ
0x5a PUSH2 0x114
0x5d JUMPI
---
0x54: V29 = 0xa70ef5b0
0x59: V30 = EQ 0xa70ef5b0 V13
0x5a: V31 = 0x114
0x5d: JUMPI 0x114 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x142]
---
0x5e DUP1
0x5f PUSH4 0xbfaa4391
0x64 EQ
0x65 PUSH2 0x142
0x68 JUMPI
---
0x5f: V32 = 0xbfaa4391
0x64: V33 = EQ 0xbfaa4391 V13
0x65: V34 = 0x142
0x68: JUMPI 0x142 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x15a]
---
0x69 DUP1
0x6a PUSH4 0xdf207dff
0x6f EQ
0x70 PUSH2 0x15a
0x73 JUMPI
---
0x6a: V35 = 0xdf207dff
0x6f: V36 = EQ 0xdf207dff V13
0x70: V37 = 0x15a
0x73: JUMPI 0x15a V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x19f]
---
0x74 DUP1
0x75 PUSH4 0xe10c63ae
0x7a EQ
0x7b PUSH2 0x19f
0x7e JUMPI
---
0x75: V38 = 0xe10c63ae
0x7a: V39 = EQ 0xe10c63ae V13
0x7b: V40 = 0x19f
0x7e: JUMPI 0x19f V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x0, 0x74, 0x1ea, 0x288, 0x36d, 0x3a9, 0x4d4, 0x776]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x81
[0x81:0x88]
---
Predecessors: [0xd]
Successors: [0x89, 0x8d]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 DUP1
0x84 ISZERO
0x85 PUSH2 0x8d
0x88 JUMPI
---
0x81: JUMPDEST 
0x82: V41 = CALLVALUE
0x84: V42 = ISZERO V41
0x85: V43 = 0x8d
0x88: JUMPI 0x8d V42
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V13, V41]

================================

Block 0x89
[0x89:0x8c]
---
Predecessors: [0x81]
Successors: []
---
0x89 PUSH1 0x0
0x8b DUP1
0x8c REVERT
---
0x89: V44 = 0x0
0x8c: REVERT 0x0 0x0
---
Entry stack: [V13, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V41]

================================

Block 0x8d
[0x8d:0xa1]
---
Predecessors: [0x81]
Successors: [0x1b7]
---
0x8d JUMPDEST
0x8e POP
0x8f PUSH2 0x7f
0x92 PUSH1 0x1
0x94 PUSH1 0xa0
0x96 PUSH1 0x2
0x98 EXP
0x99 SUB
0x9a PUSH1 0x4
0x9c CALLDATALOAD
0x9d AND
0x9e PUSH2 0x1b7
0xa1 JUMP
---
0x8d: JUMPDEST 
0x8f: V45 = 0x7f
0x92: V46 = 0x1
0x94: V47 = 0xa0
0x96: V48 = 0x2
0x98: V49 = EXP 0x2 0xa0
0x99: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a: V51 = 0x4
0x9c: V52 = CALLDATALOAD 0x4
0x9d: V53 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x9e: V54 = 0x1b7
0xa1: JUMP 0x1b7
---
Entry stack: [V13, V41]
Stack pops: 1
Stack additions: [0x7f, V53]
Exit stack: [V13, 0x7f, V53]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0x27]
Successors: [0xaa, 0xae]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa2: JUMPDEST 
0xa3: V55 = CALLVALUE
0xa5: V56 = ISZERO V55
0xa6: V57 = 0xae
0xa9: JUMPI 0xae V56
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V13, V55]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa2]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V58 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V13, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V55]

================================

Block 0xae
[0xae:0xb6]
---
Predecessors: [0xa2]
Successors: [0x20b]
---
0xae JUMPDEST
0xaf POP
0xb0 PUSH2 0xb7
0xb3 PUSH2 0x20b
0xb6 JUMP
---
0xae: JUMPDEST 
0xb0: V59 = 0xb7
0xb3: V60 = 0x20b
0xb6: JUMP 0x20b
---
Entry stack: [V13, V55]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V13, 0xb7]

================================

Block 0xb7
[0xb7:0xc8]
---
Predecessors: [0x20b]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH1 0x40
0xba DUP1
0xbb MLOAD
0xbc SWAP2
0xbd DUP3
0xbe MSTORE
0xbf MLOAD
0xc0 SWAP1
0xc1 DUP2
0xc2 SWAP1
0xc3 SUB
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 RETURN
---
0xb7: JUMPDEST 
0xb8: V61 = 0x40
0xbb: V62 = M[0x40]
0xbe: M[V62] = V196
0xbf: V63 = M[0x40]
0xc3: V64 = SUB V62 V63
0xc4: V65 = 0x20
0xc6: V66 = ADD 0x20 V64
0xc8: RETURN V63 V66
---
Entry stack: [V13, V196]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x32]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V67 = CALLVALUE
0xcc: V68 = ISZERO V67
0xcd: V69 = 0xd5
0xd0: JUMPI 0xd5 V68
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V13, V67]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V70 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V13, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V67]

================================

Block 0xd5
[0xd5:0xdd]
---
Predecessors: [0xc9]
Successors: [0x214]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0x7f
0xda PUSH2 0x214
0xdd JUMP
---
0xd5: JUMPDEST 
0xd7: V71 = 0x7f
0xda: V72 = 0x214
0xdd: JUMP 0x214
---
Entry stack: [V13, V67]
Stack pops: 1
Stack additions: [0x7f]
Exit stack: [V13, 0x7f]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0x3d]
Successors: [0xe6, 0xea]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 DUP1
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xde: JUMPDEST 
0xdf: V73 = CALLVALUE
0xe1: V74 = ISZERO V73
0xe2: V75 = 0xea
0xe5: JUMPI 0xea V74
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V13, V73]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xde]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V76 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V13, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V73]

================================

Block 0xea
[0xea:0xfe]
---
Predecessors: [0xde]
Successors: [0x255]
---
0xea JUMPDEST
0xeb POP
0xec PUSH2 0x7f
0xef PUSH1 0x1
0xf1 PUSH1 0xa0
0xf3 PUSH1 0x2
0xf5 EXP
0xf6 SUB
0xf7 PUSH1 0x4
0xf9 CALLDATALOAD
0xfa AND
0xfb PUSH2 0x255
0xfe JUMP
---
0xea: JUMPDEST 
0xec: V77 = 0x7f
0xef: V78 = 0x1
0xf1: V79 = 0xa0
0xf3: V80 = 0x2
0xf5: V81 = EXP 0x2 0xa0
0xf6: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7: V83 = 0x4
0xf9: V84 = CALLDATALOAD 0x4
0xfa: V85 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V86 = 0x255
0xfe: JUMP 0x255
---
Entry stack: [V13, V73]
Stack pops: 1
Stack additions: [0x7f, V85]
Exit stack: [V13, 0x7f, V85]

================================

Block 0xff
[0xff:0x113]
---
Predecessors: [0x48]
Successors: [0x2af]
---
0xff JUMPDEST
0x100 PUSH2 0x7f
0x103 PUSH1 0x1
0x105 PUSH1 0xf0
0x107 PUSH1 0x2
0x109 EXP
0x10a SUB
0x10b NOT
0x10c PUSH1 0x4
0x10e CALLDATALOAD
0x10f AND
0x110 PUSH2 0x2af
0x113 JUMP
---
0xff: JUMPDEST 
0x100: V87 = 0x7f
0x103: V88 = 0x1
0x105: V89 = 0xf0
0x107: V90 = 0x2
0x109: V91 = EXP 0x2 0xf0
0x10a: V92 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x10b: V93 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x10c: V94 = 0x4
0x10e: V95 = CALLDATALOAD 0x4
0x10f: V96 = AND V95 0xffff000000000000000000000000000000000000000000000000000000000000
0x110: V97 = 0x2af
0x113: JUMP 0x2af
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x7f, V96]
Exit stack: [V13, 0x7f, V96]

================================

Block 0x114
[0x114:0x11b]
---
Predecessors: [0x53]
Successors: [0x11c, 0x120]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 DUP1
0x117 ISZERO
0x118 PUSH2 0x120
0x11b JUMPI
---
0x114: JUMPDEST 
0x115: V98 = CALLVALUE
0x117: V99 = ISZERO V98
0x118: V100 = 0x120
0x11b: JUMPI 0x120 V99
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V13, V98]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x114]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V101 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V13, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V98]

================================

Block 0x120
[0x120:0x141]
---
Predecessors: [0x114]
Successors: [0x376]
---
0x120 JUMPDEST
0x121 POP
0x122 PUSH2 0x7f
0x125 PUSH1 0x1
0x127 PUSH1 0xf0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d NOT
0x12e PUSH1 0x4
0x130 CALLDATALOAD
0x131 AND
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a PUSH1 0x24
0x13c CALLDATALOAD
0x13d AND
0x13e PUSH2 0x376
0x141 JUMP
---
0x120: JUMPDEST 
0x122: V102 = 0x7f
0x125: V103 = 0x1
0x127: V104 = 0xf0
0x129: V105 = 0x2
0x12b: V106 = EXP 0x2 0xf0
0x12c: V107 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x12d: V108 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x12e: V109 = 0x4
0x130: V110 = CALLDATALOAD 0x4
0x131: V111 = AND V110 0xffff000000000000000000000000000000000000000000000000000000000000
0x132: V112 = 0x1
0x134: V113 = 0xa0
0x136: V114 = 0x2
0x138: V115 = EXP 0x2 0xa0
0x139: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V117 = 0x24
0x13c: V118 = CALLDATALOAD 0x24
0x13d: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x13e: V120 = 0x376
0x141: JUMP 0x376
---
Entry stack: [V13, V98]
Stack pops: 1
Stack additions: [0x7f, V111, V119]
Exit stack: [V13, 0x7f, V111, V119]

================================

Block 0x142
[0x142:0x159]
---
Predecessors: [0x5e]
Successors: [0x3f0]
---
0x142 JUMPDEST
0x143 PUSH2 0x7f
0x146 PUSH1 0x4
0x148 CALLDATALOAD
0x149 PUSH1 0x1
0x14b PUSH1 0xf0
0x14d PUSH1 0x2
0x14f EXP
0x150 SUB
0x151 NOT
0x152 PUSH1 0x24
0x154 CALLDATALOAD
0x155 AND
0x156 PUSH2 0x3f0
0x159 JUMP
---
0x142: JUMPDEST 
0x143: V121 = 0x7f
0x146: V122 = 0x4
0x148: V123 = CALLDATALOAD 0x4
0x149: V124 = 0x1
0x14b: V125 = 0xf0
0x14d: V126 = 0x2
0x14f: V127 = EXP 0x2 0xf0
0x150: V128 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x151: V129 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x152: V130 = 0x24
0x154: V131 = CALLDATALOAD 0x24
0x155: V132 = AND V131 0xffff000000000000000000000000000000000000000000000000000000000000
0x156: V133 = 0x3f0
0x159: JUMP 0x3f0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x7f, V123, V132]
Exit stack: [V13, 0x7f, V123, V132]

================================

Block 0x15a
[0x15a:0x161]
---
Predecessors: [0x69]
Successors: [0x162, 0x166]
---
0x15a JUMPDEST
0x15b CALLVALUE
0x15c DUP1
0x15d ISZERO
0x15e PUSH2 0x166
0x161 JUMPI
---
0x15a: JUMPDEST 
0x15b: V134 = CALLVALUE
0x15d: V135 = ISZERO V134
0x15e: V136 = 0x166
0x161: JUMPI 0x166 V135
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V134]
Exit stack: [V13, V134]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x15a]
Successors: []
---
0x162 PUSH1 0x0
0x164 DUP1
0x165 REVERT
---
0x162: V137 = 0x0
0x165: REVERT 0x0 0x0
---
Entry stack: [V13, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V134]

================================

Block 0x166
[0x166:0x19e]
---
Predecessors: [0x15a]
Successors: [0x4d9]
---
0x166 JUMPDEST
0x167 POP
0x168 PUSH1 0x40
0x16a DUP1
0x16b MLOAD
0x16c PUSH2 0x120
0x16f DUP2
0x170 DUP2
0x171 ADD
0x172 SWAP1
0x173 SWAP3
0x174 MSTORE
0x175 PUSH2 0x7f
0x178 SWAP2
0x179 CALLDATASIZE
0x17a SWAP2
0x17b PUSH1 0x4
0x17d SWAP2
0x17e PUSH2 0x124
0x181 SWAP2
0x182 SWAP1
0x183 DUP4
0x184 SWAP1
0x185 PUSH1 0x9
0x187 SWAP1
0x188 DUP4
0x189 SWAP1
0x18a DUP4
0x18b SWAP1
0x18c DUP1
0x18d DUP3
0x18e DUP5
0x18f CALLDATACOPY
0x190 POP
0x191 SWAP4
0x192 SWAP7
0x193 POP
0x194 PUSH2 0x4d9
0x197 SWAP6
0x198 POP
0x199 POP
0x19a POP
0x19b POP
0x19c POP
0x19d POP
0x19e JUMP
---
0x166: JUMPDEST 
0x168: V138 = 0x40
0x16b: V139 = M[0x40]
0x16c: V140 = 0x120
0x171: V141 = ADD 0x120 V139
0x174: M[0x40] = V141
0x175: V142 = 0x7f
0x179: V143 = CALLDATASIZE
0x17b: V144 = 0x4
0x17e: V145 = 0x124
0x185: V146 = 0x9
0x18f: CALLDATACOPY V139 0x4 0x120
0x194: V147 = 0x4d9
0x19e: JUMP 0x4d9
---
Entry stack: [V13, V134]
Stack pops: 1
Stack additions: [0x7f, V139]
Exit stack: [V13, 0x7f, V139]

================================

Block 0x19f
[0x19f:0x1a6]
---
Predecessors: [0x74]
Successors: [0x1a7, 0x1ab]
---
0x19f JUMPDEST
0x1a0 CALLVALUE
0x1a1 DUP1
0x1a2 ISZERO
0x1a3 PUSH2 0x1ab
0x1a6 JUMPI
---
0x19f: JUMPDEST 
0x1a0: V148 = CALLVALUE
0x1a2: V149 = ISZERO V148
0x1a3: V150 = 0x1ab
0x1a6: JUMPI 0x1ab V149
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V148]
Exit stack: [V13, V148]

================================

Block 0x1a7
[0x1a7:0x1aa]
---
Predecessors: [0x19f]
Successors: []
---
0x1a7 PUSH1 0x0
0x1a9 DUP1
0x1aa REVERT
---
0x1a7: V151 = 0x0
0x1aa: REVERT 0x0 0x0
---
Entry stack: [V13, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V148]

================================

Block 0x1ab
[0x1ab:0x1b6]
---
Predecessors: [0x19f]
Successors: [0x72d]
---
0x1ab JUMPDEST
0x1ac POP
0x1ad PUSH2 0x7f
0x1b0 PUSH1 0x4
0x1b2 CALLDATALOAD
0x1b3 PUSH2 0x72d
0x1b6 JUMP
---
0x1ab: JUMPDEST 
0x1ad: V152 = 0x7f
0x1b0: V153 = 0x4
0x1b2: V154 = CALLDATALOAD 0x4
0x1b3: V155 = 0x72d
0x1b6: JUMP 0x72d
---
Entry stack: [V13, V148]
Stack pops: 1
Stack additions: [0x7f, V154]
Exit stack: [V13, 0x7f, V154]

================================

Block 0x1b7
[0x1b7:0x1cf]
---
Predecessors: [0x8d]
Successors: [0x1d0, 0x1df]
---
0x1b7 JUMPDEST
0x1b8 CALLER
0x1b9 PUSH1 0x0
0x1bb SWAP1
0x1bc DUP2
0x1bd MSTORE
0x1be PUSH1 0x1
0x1c0 PUSH1 0x20
0x1c2 MSTORE
0x1c3 PUSH1 0x40
0x1c5 SWAP1
0x1c6 SHA3
0x1c7 SLOAD
0x1c8 PUSH1 0xff
0x1ca AND
0x1cb DUP1
0x1cc PUSH2 0x1df
0x1cf JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V156 = CALLER
0x1b9: V157 = 0x0
0x1bd: M[0x0] = V156
0x1be: V158 = 0x1
0x1c0: V159 = 0x20
0x1c2: M[0x20] = 0x1
0x1c3: V160 = 0x40
0x1c6: V161 = SHA3 0x0 0x40
0x1c7: V162 = S[V161]
0x1c8: V163 = 0xff
0x1ca: V164 = AND 0xff V162
0x1cc: V165 = 0x1df
0x1cf: JUMPI 0x1df V164
---
Entry stack: [V13, 0x7f, V53]
Stack pops: 0
Stack additions: [V164]
Exit stack: [V13, 0x7f, V53, V164]

================================

Block 0x1d0
[0x1d0:0x1de]
---
Predecessors: [0x1b7]
Successors: [0x1df]
---
0x1d0 POP
0x1d1 PUSH1 0x0
0x1d3 SLOAD
0x1d4 PUSH1 0x1
0x1d6 PUSH1 0xa0
0x1d8 PUSH1 0x2
0x1da EXP
0x1db SUB
0x1dc AND
0x1dd CALLER
0x1de EQ
---
0x1d1: V166 = 0x0
0x1d3: V167 = S[0x0]
0x1d4: V168 = 0x1
0x1d6: V169 = 0xa0
0x1d8: V170 = 0x2
0x1da: V171 = EXP 0x2 0xa0
0x1db: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dc: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x1dd: V174 = CALLER
0x1de: V175 = EQ V174 V173
---
Entry stack: [V13, 0x7f, V53, V164]
Stack pops: 1
Stack additions: [V175]
Exit stack: [V13, 0x7f, V53, V175]

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0x1b7, 0x1d0]
Successors: [0x1e6, 0x1ea]
---
0x1df JUMPDEST
0x1e0 ISZERO
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V176 = ISZERO S0
0x1e1: V177 = ISZERO V176
0x1e2: V178 = 0x1ea
0x1e5: JUMPI 0x1ea V177
---
Entry stack: [V13, 0x7f, V53, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V53]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V179 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V53]

================================

Block 0x1ea
[0x1ea:0x20a]
---
Predecessors: [0x1df]
Successors: [0x7f]
---
0x1ea JUMPDEST
0x1eb PUSH1 0x1
0x1ed PUSH1 0xa0
0x1ef PUSH1 0x2
0x1f1 EXP
0x1f2 SUB
0x1f3 AND
0x1f4 PUSH1 0x0
0x1f6 SWAP1
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x1
0x1fb PUSH1 0x20
0x1fd MSTORE
0x1fe PUSH1 0x40
0x200 SWAP1
0x201 SHA3
0x202 DUP1
0x203 SLOAD
0x204 PUSH1 0xff
0x206 NOT
0x207 AND
0x208 SWAP1
0x209 SSTORE
0x20a JUMP
---
0x1ea: JUMPDEST 
0x1eb: V180 = 0x1
0x1ed: V181 = 0xa0
0x1ef: V182 = 0x2
0x1f1: V183 = EXP 0x2 0xa0
0x1f2: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f3: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x1f4: V186 = 0x0
0x1f8: M[0x0] = V185
0x1f9: V187 = 0x1
0x1fb: V188 = 0x20
0x1fd: M[0x20] = 0x1
0x1fe: V189 = 0x40
0x201: V190 = SHA3 0x0 0x40
0x203: V191 = S[V190]
0x204: V192 = 0xff
0x206: V193 = NOT 0xff
0x207: V194 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V191
0x209: S[V190] = V194
0x20a: JUMP 0x7f
---
Entry stack: [V13, 0x7f, V53]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x20b
[0x20b:0x213]
---
Predecessors: [0xae]
Successors: [0xb7]
---
0x20b JUMPDEST
0x20c PUSH4 0xdeadbeef
0x211 SLOAD
0x212 SWAP1
0x213 JUMP
---
0x20b: JUMPDEST 
0x20c: V195 = 0xdeadbeef
0x211: V196 = S[0xdeadbeef]
0x213: JUMP 0xb7
---
Entry stack: [V13, 0xb7]
Stack pops: 1
Stack additions: [V196]
Exit stack: [V13, V196]

================================

Block 0x214
[0x214:0x22c]
---
Predecessors: [0xd5]
Successors: [0x22d, 0x23c]
---
0x214 JUMPDEST
0x215 CALLER
0x216 PUSH1 0x0
0x218 SWAP1
0x219 DUP2
0x21a MSTORE
0x21b PUSH1 0x1
0x21d PUSH1 0x20
0x21f MSTORE
0x220 PUSH1 0x40
0x222 SWAP1
0x223 SHA3
0x224 SLOAD
0x225 PUSH1 0xff
0x227 AND
0x228 DUP1
0x229 PUSH2 0x23c
0x22c JUMPI
---
0x214: JUMPDEST 
0x215: V197 = CALLER
0x216: V198 = 0x0
0x21a: M[0x0] = V197
0x21b: V199 = 0x1
0x21d: V200 = 0x20
0x21f: M[0x20] = 0x1
0x220: V201 = 0x40
0x223: V202 = SHA3 0x0 0x40
0x224: V203 = S[V202]
0x225: V204 = 0xff
0x227: V205 = AND 0xff V203
0x229: V206 = 0x23c
0x22c: JUMPI 0x23c V205
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: [V205]
Exit stack: [V13, 0x7f, V205]

================================

Block 0x22d
[0x22d:0x23b]
---
Predecessors: [0x214]
Successors: [0x23c]
---
0x22d POP
0x22e PUSH1 0x0
0x230 SLOAD
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 AND
0x23a CALLER
0x23b EQ
---
0x22e: V207 = 0x0
0x230: V208 = S[0x0]
0x231: V209 = 0x1
0x233: V210 = 0xa0
0x235: V211 = 0x2
0x237: V212 = EXP 0x2 0xa0
0x238: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x23a: V215 = CALLER
0x23b: V216 = EQ V215 V214
---
Entry stack: [V13, 0x7f, V205]
Stack pops: 1
Stack additions: [V216]
Exit stack: [V13, 0x7f, V216]

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x214, 0x22d]
Successors: [0x243, 0x247]
---
0x23c JUMPDEST
0x23d ISZERO
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23d: V217 = ISZERO S0
0x23e: V218 = ISZERO V217
0x23f: V219 = 0x247
0x242: JUMPI 0x247 V218
---
Entry stack: [V13, 0x7f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x23c]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V220 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x247
[0x247:0x254]
---
Predecessors: [0x23c]
Successors: []
---
0x247 JUMPDEST
0x248 PUSH1 0x0
0x24a SLOAD
0x24b PUSH1 0x1
0x24d PUSH1 0xa0
0x24f PUSH1 0x2
0x251 EXP
0x252 SUB
0x253 AND
0x254 SELFDESTRUCT
---
0x247: JUMPDEST 
0x248: V221 = 0x0
0x24a: V222 = S[0x0]
0x24b: V223 = 0x1
0x24d: V224 = 0xa0
0x24f: V225 = 0x2
0x251: V226 = EXP 0x2 0xa0
0x252: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x253: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x254: SELFDESTRUCT V228
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x255
[0x255:0x26d]
---
Predecessors: [0xea]
Successors: [0x26e, 0x27d]
---
0x255 JUMPDEST
0x256 CALLER
0x257 PUSH1 0x0
0x259 SWAP1
0x25a DUP2
0x25b MSTORE
0x25c PUSH1 0x1
0x25e PUSH1 0x20
0x260 MSTORE
0x261 PUSH1 0x40
0x263 SWAP1
0x264 SHA3
0x265 SLOAD
0x266 PUSH1 0xff
0x268 AND
0x269 DUP1
0x26a PUSH2 0x27d
0x26d JUMPI
---
0x255: JUMPDEST 
0x256: V229 = CALLER
0x257: V230 = 0x0
0x25b: M[0x0] = V229
0x25c: V231 = 0x1
0x25e: V232 = 0x20
0x260: M[0x20] = 0x1
0x261: V233 = 0x40
0x264: V234 = SHA3 0x0 0x40
0x265: V235 = S[V234]
0x266: V236 = 0xff
0x268: V237 = AND 0xff V235
0x26a: V238 = 0x27d
0x26d: JUMPI 0x27d V237
---
Entry stack: [V13, 0x7f, V85]
Stack pops: 0
Stack additions: [V237]
Exit stack: [V13, 0x7f, V85, V237]

================================

Block 0x26e
[0x26e:0x27c]
---
Predecessors: [0x255]
Successors: [0x27d]
---
0x26e POP
0x26f PUSH1 0x0
0x271 SLOAD
0x272 PUSH1 0x1
0x274 PUSH1 0xa0
0x276 PUSH1 0x2
0x278 EXP
0x279 SUB
0x27a AND
0x27b CALLER
0x27c EQ
---
0x26f: V239 = 0x0
0x271: V240 = S[0x0]
0x272: V241 = 0x1
0x274: V242 = 0xa0
0x276: V243 = 0x2
0x278: V244 = EXP 0x2 0xa0
0x279: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27a: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x27b: V247 = CALLER
0x27c: V248 = EQ V247 V246
---
Entry stack: [V13, 0x7f, V85, V237]
Stack pops: 1
Stack additions: [V248]
Exit stack: [V13, 0x7f, V85, V248]

================================

Block 0x27d
[0x27d:0x283]
---
Predecessors: [0x255, 0x26e]
Successors: [0x284, 0x288]
---
0x27d JUMPDEST
0x27e ISZERO
0x27f ISZERO
0x280 PUSH2 0x288
0x283 JUMPI
---
0x27d: JUMPDEST 
0x27e: V249 = ISZERO S0
0x27f: V250 = ISZERO V249
0x280: V251 = 0x288
0x283: JUMPI 0x288 V250
---
Entry stack: [V13, 0x7f, V85, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V85]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x27d]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V252 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V85]

================================

Block 0x288
[0x288:0x2ae]
---
Predecessors: [0x27d]
Successors: [0x7f]
---
0x288 JUMPDEST
0x289 PUSH1 0x1
0x28b PUSH1 0xa0
0x28d PUSH1 0x2
0x28f EXP
0x290 SUB
0x291 AND
0x292 PUSH1 0x0
0x294 SWAP1
0x295 DUP2
0x296 MSTORE
0x297 PUSH1 0x1
0x299 PUSH1 0x20
0x29b DUP2
0x29c SWAP1
0x29d MSTORE
0x29e PUSH1 0x40
0x2a0 SWAP1
0x2a1 SWAP2
0x2a2 SHA3
0x2a3 DUP1
0x2a4 SLOAD
0x2a5 PUSH1 0xff
0x2a7 NOT
0x2a8 AND
0x2a9 SWAP1
0x2aa SWAP2
0x2ab OR
0x2ac SWAP1
0x2ad SSTORE
0x2ae JUMP
---
0x288: JUMPDEST 
0x289: V253 = 0x1
0x28b: V254 = 0xa0
0x28d: V255 = 0x2
0x28f: V256 = EXP 0x2 0xa0
0x290: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x291: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x292: V259 = 0x0
0x296: M[0x0] = V258
0x297: V260 = 0x1
0x299: V261 = 0x20
0x29d: M[0x20] = 0x1
0x29e: V262 = 0x40
0x2a2: V263 = SHA3 0x0 0x40
0x2a4: V264 = S[V263]
0x2a5: V265 = 0xff
0x2a7: V266 = NOT 0xff
0x2a8: V267 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V264
0x2ab: V268 = OR 0x1 V267
0x2ad: S[V263] = V268
0x2ae: JUMP 0x7f
---
Entry stack: [V13, 0x7f, V85]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x2af
[0x2af:0x2c7]
---
Predecessors: [0xff]
Successors: [0x2c8, 0x2d7]
---
0x2af JUMPDEST
0x2b0 CALLER
0x2b1 PUSH1 0x0
0x2b3 SWAP1
0x2b4 DUP2
0x2b5 MSTORE
0x2b6 PUSH1 0x1
0x2b8 PUSH1 0x20
0x2ba MSTORE
0x2bb PUSH1 0x40
0x2bd DUP2
0x2be SHA3
0x2bf SLOAD
0x2c0 PUSH1 0xff
0x2c2 AND
0x2c3 DUP1
0x2c4 PUSH2 0x2d7
0x2c7 JUMPI
---
0x2af: JUMPDEST 
0x2b0: V269 = CALLER
0x2b1: V270 = 0x0
0x2b5: M[0x0] = V269
0x2b6: V271 = 0x1
0x2b8: V272 = 0x20
0x2ba: M[0x20] = 0x1
0x2bb: V273 = 0x40
0x2be: V274 = SHA3 0x0 0x40
0x2bf: V275 = S[V274]
0x2c0: V276 = 0xff
0x2c2: V277 = AND 0xff V275
0x2c4: V278 = 0x2d7
0x2c7: JUMPI 0x2d7 V277
---
Entry stack: [V13, 0x7f, V96]
Stack pops: 0
Stack additions: [0x0, V277]
Exit stack: [V13, 0x7f, V96, 0x0, V277]

================================

Block 0x2c8
[0x2c8:0x2d6]
---
Predecessors: [0x2af]
Successors: [0x2d7]
---
0x2c8 POP
0x2c9 PUSH1 0x0
0x2cb SLOAD
0x2cc PUSH1 0x1
0x2ce PUSH1 0xa0
0x2d0 PUSH1 0x2
0x2d2 EXP
0x2d3 SUB
0x2d4 AND
0x2d5 CALLER
0x2d6 EQ
---
0x2c9: V279 = 0x0
0x2cb: V280 = S[0x0]
0x2cc: V281 = 0x1
0x2ce: V282 = 0xa0
0x2d0: V283 = 0x2
0x2d2: V284 = EXP 0x2 0xa0
0x2d3: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d4: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x2d5: V287 = CALLER
0x2d6: V288 = EQ V287 V286
---
Entry stack: [V13, 0x7f, V96, 0x0, V277]
Stack pops: 1
Stack additions: [V288]
Exit stack: [V13, 0x7f, V96, 0x0, V288]

================================

Block 0x2d7
[0x2d7:0x2dd]
---
Predecessors: [0x2af, 0x2c8]
Successors: [0x2de, 0x2e2]
---
0x2d7 JUMPDEST
0x2d8 ISZERO
0x2d9 ISZERO
0x2da PUSH2 0x2e2
0x2dd JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V289 = ISZERO S0
0x2d9: V290 = ISZERO V289
0x2da: V291 = 0x2e2
0x2dd: JUMPI 0x2e2 V290
---
Entry stack: [V13, 0x7f, V96, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V96, 0x0]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x2d7]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V292 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V96, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V96, 0x0]

================================

Block 0x2e2
[0x2e2:0x354]
---
Predecessors: [0x2d7]
Successors: [0x355, 0x359]
---
0x2e2 JUMPDEST
0x2e3 POP
0x2e4 PUSH1 0x1
0x2e6 PUSH1 0xf0
0x2e8 PUSH1 0x2
0x2ea EXP
0x2eb SUB
0x2ec NOT
0x2ed DUP2
0x2ee AND
0x2ef PUSH1 0x0
0x2f1 SWAP1
0x2f2 DUP2
0x2f3 MSTORE
0x2f4 PUSH1 0x2
0x2f6 PUSH1 0x20
0x2f8 MSTORE
0x2f9 PUSH1 0x40
0x2fb DUP1
0x2fc DUP3
0x2fd SHA3
0x2fe SLOAD
0x2ff DUP2
0x300 MLOAD
0x301 PUSH32 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x322 DUP2
0x323 MSTORE
0x324 SWAP2
0x325 MLOAD
0x326 PUSH1 0x1
0x328 PUSH1 0xa0
0x32a PUSH1 0x2
0x32c EXP
0x32d SUB
0x32e SWAP1
0x32f SWAP2
0x330 AND
0x331 SWAP3
0x332 DUP4
0x333 SWAP3
0x334 PUSH4 0xd0e30db0
0x339 SWAP3
0x33a CALLVALUE
0x33b SWAP3
0x33c PUSH1 0x4
0x33e DUP1
0x33f DUP5
0x340 ADD
0x341 SWAP4
0x342 SWAP2
0x343 SWAP3
0x344 SWAP2
0x345 DUP3
0x346 SWAP1
0x347 SUB
0x348 ADD
0x349 DUP2
0x34a DUP6
0x34b DUP9
0x34c DUP1
0x34d EXTCODESIZE
0x34e ISZERO
0x34f DUP1
0x350 ISZERO
0x351 PUSH2 0x359
0x354 JUMPI
---
0x2e2: JUMPDEST 
0x2e4: V293 = 0x1
0x2e6: V294 = 0xf0
0x2e8: V295 = 0x2
0x2ea: V296 = EXP 0x2 0xf0
0x2eb: V297 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x2ec: V298 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2ee: V299 = AND V96 0xffff000000000000000000000000000000000000000000000000000000000000
0x2ef: V300 = 0x0
0x2f3: M[0x0] = V299
0x2f4: V301 = 0x2
0x2f6: V302 = 0x20
0x2f8: M[0x20] = 0x2
0x2f9: V303 = 0x40
0x2fd: V304 = SHA3 0x0 0x40
0x2fe: V305 = S[V304]
0x300: V306 = M[0x40]
0x301: V307 = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x323: M[V306] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x325: V308 = M[0x40]
0x326: V309 = 0x1
0x328: V310 = 0xa0
0x32a: V311 = 0x2
0x32c: V312 = EXP 0x2 0xa0
0x32d: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x330: V314 = AND V305 0xffffffffffffffffffffffffffffffffffffffff
0x334: V315 = 0xd0e30db0
0x33a: V316 = CALLVALUE
0x33c: V317 = 0x4
0x340: V318 = ADD V306 0x4
0x347: V319 = SUB V306 V308
0x348: V320 = ADD V319 0x4
0x34d: V321 = EXTCODESIZE V314
0x34e: V322 = ISZERO V321
0x350: V323 = ISZERO V322
0x351: V324 = 0x359
0x354: JUMPI 0x359 V323
---
Entry stack: [V13, 0x7f, V96, 0x0]
Stack pops: 2
Stack additions: [S1, V314, V314, 0xd0e30db0, V316, V318, 0x0, V308, V320, V308, V316, V314, V322]
Exit stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, 0x0, V308, V320, V308, V316, V314, V322]

================================

Block 0x355
[0x355:0x358]
---
Predecessors: [0x2e2]
Successors: []
---
0x355 PUSH1 0x0
0x357 DUP1
0x358 REVERT
---
0x355: V325 = 0x0
0x358: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, 0x0, V308, V320, V308, V316, V314, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, 0x0, V308, V320, V308, V316, V314, V322]

================================

Block 0x359
[0x359:0x363]
---
Predecessors: [0x2e2]
Successors: [0x364, 0x36d]
---
0x359 JUMPDEST
0x35a POP
0x35b GAS
0x35c CALL
0x35d ISZERO
0x35e DUP1
0x35f ISZERO
0x360 PUSH2 0x36d
0x363 JUMPI
---
0x359: JUMPDEST 
0x35b: V326 = GAS
0x35c: V327 = CALL V326 V314 V316 V308 V320 V308 0x0
0x35d: V328 = ISZERO V327
0x35f: V329 = ISZERO V328
0x360: V330 = 0x36d
0x363: JUMPI 0x36d V329
---
Entry stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, 0x0, V308, V320, V308, V316, V314, V322]
Stack pops: 7
Stack additions: [V328]
Exit stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, V328]

================================

Block 0x364
[0x364:0x36c]
---
Predecessors: [0x359]
Successors: []
---
0x364 RETURNDATASIZE
0x365 PUSH1 0x0
0x367 DUP1
0x368 RETURNDATACOPY
0x369 RETURNDATASIZE
0x36a PUSH1 0x0
0x36c REVERT
---
0x364: V331 = RETURNDATASIZE
0x365: V332 = 0x0
0x368: RETURNDATACOPY 0x0 0x0 V331
0x369: V333 = RETURNDATASIZE
0x36a: V334 = 0x0
0x36c: REVERT 0x0 V333
---
Entry stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, V328]

================================

Block 0x36d
[0x36d:0x375]
---
Predecessors: [0x359]
Successors: [0x7f]
---
0x36d JUMPDEST
0x36e POP
0x36f POP
0x370 POP
0x371 POP
0x372 POP
0x373 POP
0x374 POP
0x375 JUMP
---
0x36d: JUMPDEST 
0x375: JUMP 0x7f
---
Entry stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, V328]
Stack pops: 8
Stack additions: []
Exit stack: [V13]

================================

Block 0x376
[0x376:0x38e]
---
Predecessors: [0x120]
Successors: [0x38f, 0x39e]
---
0x376 JUMPDEST
0x377 CALLER
0x378 PUSH1 0x0
0x37a SWAP1
0x37b DUP2
0x37c MSTORE
0x37d PUSH1 0x1
0x37f PUSH1 0x20
0x381 MSTORE
0x382 PUSH1 0x40
0x384 SWAP1
0x385 SHA3
0x386 SLOAD
0x387 PUSH1 0xff
0x389 AND
0x38a DUP1
0x38b PUSH2 0x39e
0x38e JUMPI
---
0x376: JUMPDEST 
0x377: V335 = CALLER
0x378: V336 = 0x0
0x37c: M[0x0] = V335
0x37d: V337 = 0x1
0x37f: V338 = 0x20
0x381: M[0x20] = 0x1
0x382: V339 = 0x40
0x385: V340 = SHA3 0x0 0x40
0x386: V341 = S[V340]
0x387: V342 = 0xff
0x389: V343 = AND 0xff V341
0x38b: V344 = 0x39e
0x38e: JUMPI 0x39e V343
---
Entry stack: [V13, 0x7f, V111, V119]
Stack pops: 0
Stack additions: [V343]
Exit stack: [V13, 0x7f, V111, V119, V343]

================================

Block 0x38f
[0x38f:0x39d]
---
Predecessors: [0x376]
Successors: [0x39e]
---
0x38f POP
0x390 PUSH1 0x0
0x392 SLOAD
0x393 PUSH1 0x1
0x395 PUSH1 0xa0
0x397 PUSH1 0x2
0x399 EXP
0x39a SUB
0x39b AND
0x39c CALLER
0x39d EQ
---
0x390: V345 = 0x0
0x392: V346 = S[0x0]
0x393: V347 = 0x1
0x395: V348 = 0xa0
0x397: V349 = 0x2
0x399: V350 = EXP 0x2 0xa0
0x39a: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39b: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x39c: V353 = CALLER
0x39d: V354 = EQ V353 V352
---
Entry stack: [V13, 0x7f, V111, V119, V343]
Stack pops: 1
Stack additions: [V354]
Exit stack: [V13, 0x7f, V111, V119, V354]

================================

Block 0x39e
[0x39e:0x3a4]
---
Predecessors: [0x376, 0x38f]
Successors: [0x3a5, 0x3a9]
---
0x39e JUMPDEST
0x39f ISZERO
0x3a0 ISZERO
0x3a1 PUSH2 0x3a9
0x3a4 JUMPI
---
0x39e: JUMPDEST 
0x39f: V355 = ISZERO S0
0x3a0: V356 = ISZERO V355
0x3a1: V357 = 0x3a9
0x3a4: JUMPI 0x3a9 V356
---
Entry stack: [V13, 0x7f, V111, V119, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V111, V119]

================================

Block 0x3a5
[0x3a5:0x3a8]
---
Predecessors: [0x39e]
Successors: []
---
0x3a5 PUSH1 0x0
0x3a7 DUP1
0x3a8 REVERT
---
0x3a5: V358 = 0x0
0x3a8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V111, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V111, V119]

================================

Block 0x3a9
[0x3a9:0x3ef]
---
Predecessors: [0x39e]
Successors: [0x7f]
---
0x3a9 JUMPDEST
0x3aa PUSH1 0x1
0x3ac PUSH1 0xf0
0x3ae PUSH1 0x2
0x3b0 EXP
0x3b1 SUB
0x3b2 NOT
0x3b3 SWAP2
0x3b4 SWAP1
0x3b5 SWAP2
0x3b6 AND
0x3b7 PUSH1 0x0
0x3b9 SWAP1
0x3ba DUP2
0x3bb MSTORE
0x3bc PUSH1 0x2
0x3be PUSH1 0x20
0x3c0 MSTORE
0x3c1 PUSH1 0x40
0x3c3 SWAP1
0x3c4 SHA3
0x3c5 DUP1
0x3c6 SLOAD
0x3c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3dc NOT
0x3dd AND
0x3de PUSH1 0x1
0x3e0 PUSH1 0xa0
0x3e2 PUSH1 0x2
0x3e4 EXP
0x3e5 SUB
0x3e6 SWAP1
0x3e7 SWAP3
0x3e8 AND
0x3e9 SWAP2
0x3ea SWAP1
0x3eb SWAP2
0x3ec OR
0x3ed SWAP1
0x3ee SSTORE
0x3ef JUMP
---
0x3a9: JUMPDEST 
0x3aa: V359 = 0x1
0x3ac: V360 = 0xf0
0x3ae: V361 = 0x2
0x3b0: V362 = EXP 0x2 0xf0
0x3b1: V363 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x3b2: V364 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3b6: V365 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V111
0x3b7: V366 = 0x0
0x3bb: M[0x0] = V365
0x3bc: V367 = 0x2
0x3be: V368 = 0x20
0x3c0: M[0x20] = 0x2
0x3c1: V369 = 0x40
0x3c4: V370 = SHA3 0x0 0x40
0x3c6: V371 = S[V370]
0x3c7: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x3dc: V373 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: V374 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V371
0x3de: V375 = 0x1
0x3e0: V376 = 0xa0
0x3e2: V377 = 0x2
0x3e4: V378 = EXP 0x2 0xa0
0x3e5: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e8: V380 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: V381 = OR V380 V374
0x3ee: S[V370] = V381
0x3ef: JUMP 0x7f
---
Entry stack: [V13, 0x7f, V111, V119]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x3f0
[0x3f0:0x408]
---
Predecessors: [0x142]
Successors: [0x409, 0x418]
---
0x3f0 JUMPDEST
0x3f1 CALLER
0x3f2 PUSH1 0x0
0x3f4 SWAP1
0x3f5 DUP2
0x3f6 MSTORE
0x3f7 PUSH1 0x1
0x3f9 PUSH1 0x20
0x3fb MSTORE
0x3fc PUSH1 0x40
0x3fe DUP2
0x3ff SHA3
0x400 SLOAD
0x401 PUSH1 0xff
0x403 AND
0x404 DUP1
0x405 PUSH2 0x418
0x408 JUMPI
---
0x3f0: JUMPDEST 
0x3f1: V382 = CALLER
0x3f2: V383 = 0x0
0x3f6: M[0x0] = V382
0x3f7: V384 = 0x1
0x3f9: V385 = 0x20
0x3fb: M[0x20] = 0x1
0x3fc: V386 = 0x40
0x3ff: V387 = SHA3 0x0 0x40
0x400: V388 = S[V387]
0x401: V389 = 0xff
0x403: V390 = AND 0xff V388
0x405: V391 = 0x418
0x408: JUMPI 0x418 V390
---
Entry stack: [V13, 0x7f, V123, V132]
Stack pops: 0
Stack additions: [0x0, V390]
Exit stack: [V13, 0x7f, V123, V132, 0x0, V390]

================================

Block 0x409
[0x409:0x417]
---
Predecessors: [0x3f0]
Successors: [0x418]
---
0x409 POP
0x40a PUSH1 0x0
0x40c SLOAD
0x40d PUSH1 0x1
0x40f PUSH1 0xa0
0x411 PUSH1 0x2
0x413 EXP
0x414 SUB
0x415 AND
0x416 CALLER
0x417 EQ
---
0x40a: V392 = 0x0
0x40c: V393 = S[0x0]
0x40d: V394 = 0x1
0x40f: V395 = 0xa0
0x411: V396 = 0x2
0x413: V397 = EXP 0x2 0xa0
0x414: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x415: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x416: V400 = CALLER
0x417: V401 = EQ V400 V399
---
Entry stack: [V13, 0x7f, V123, V132, 0x0, V390]
Stack pops: 1
Stack additions: [V401]
Exit stack: [V13, 0x7f, V123, V132, 0x0, V401]

================================

Block 0x418
[0x418:0x41e]
---
Predecessors: [0x3f0, 0x409]
Successors: [0x41f, 0x423]
---
0x418 JUMPDEST
0x419 ISZERO
0x41a ISZERO
0x41b PUSH2 0x423
0x41e JUMPI
---
0x418: JUMPDEST 
0x419: V402 = ISZERO S0
0x41a: V403 = ISZERO V402
0x41b: V404 = 0x423
0x41e: JUMPI 0x423 V403
---
Entry stack: [V13, 0x7f, V123, V132, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V123, V132, 0x0]

================================

Block 0x41f
[0x41f:0x422]
---
Predecessors: [0x418]
Successors: []
---
0x41f PUSH1 0x0
0x421 DUP1
0x422 REVERT
---
0x41f: V405 = 0x0
0x422: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V123, V132, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V123, V132, 0x0]

================================

Block 0x423
[0x423:0x498]
---
Predecessors: [0x418]
Successors: [0x499, 0x49d]
---
0x423 JUMPDEST
0x424 POP
0x425 PUSH1 0x1
0x427 PUSH1 0xf0
0x429 PUSH1 0x2
0x42b EXP
0x42c SUB
0x42d NOT
0x42e DUP2
0x42f AND
0x430 PUSH1 0x0
0x432 SWAP1
0x433 DUP2
0x434 MSTORE
0x435 PUSH1 0x2
0x437 PUSH1 0x20
0x439 MSTORE
0x43a PUSH1 0x40
0x43c DUP1
0x43d DUP3
0x43e SHA3
0x43f SLOAD
0x440 DUP2
0x441 MLOAD
0x442 PUSH32 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x463 DUP2
0x464 MSTORE
0x465 PUSH1 0x4
0x467 DUP2
0x468 ADD
0x469 DUP7
0x46a SWAP1
0x46b MSTORE
0x46c SWAP2
0x46d MLOAD
0x46e PUSH1 0x1
0x470 PUSH1 0xa0
0x472 PUSH1 0x2
0x474 EXP
0x475 SUB
0x476 SWAP1
0x477 SWAP2
0x478 AND
0x479 SWAP3
0x47a DUP4
0x47b SWAP3
0x47c PUSH4 0x2e1a7d4d
0x481 SWAP3
0x482 PUSH1 0x24
0x484 DUP1
0x485 DUP4
0x486 ADD
0x487 SWAP4
0x488 SWAP3
0x489 DUP3
0x48a SWAP1
0x48b SUB
0x48c ADD
0x48d DUP2
0x48e DUP4
0x48f DUP8
0x490 DUP1
0x491 EXTCODESIZE
0x492 ISZERO
0x493 DUP1
0x494 ISZERO
0x495 PUSH2 0x49d
0x498 JUMPI
---
0x423: JUMPDEST 
0x425: V406 = 0x1
0x427: V407 = 0xf0
0x429: V408 = 0x2
0x42b: V409 = EXP 0x2 0xf0
0x42c: V410 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x42d: V411 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x42f: V412 = AND V132 0xffff000000000000000000000000000000000000000000000000000000000000
0x430: V413 = 0x0
0x434: M[0x0] = V412
0x435: V414 = 0x2
0x437: V415 = 0x20
0x439: M[0x20] = 0x2
0x43a: V416 = 0x40
0x43e: V417 = SHA3 0x0 0x40
0x43f: V418 = S[V417]
0x441: V419 = M[0x40]
0x442: V420 = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x464: M[V419] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x465: V421 = 0x4
0x468: V422 = ADD V419 0x4
0x46b: M[V422] = V123
0x46d: V423 = M[0x40]
0x46e: V424 = 0x1
0x470: V425 = 0xa0
0x472: V426 = 0x2
0x474: V427 = EXP 0x2 0xa0
0x475: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x478: V429 = AND V418 0xffffffffffffffffffffffffffffffffffffffff
0x47c: V430 = 0x2e1a7d4d
0x482: V431 = 0x24
0x486: V432 = ADD V419 0x24
0x48b: V433 = SUB V419 V423
0x48c: V434 = ADD V433 0x24
0x491: V435 = EXTCODESIZE V429
0x492: V436 = ISZERO V435
0x494: V437 = ISZERO V436
0x495: V438 = 0x49d
0x498: JUMPI 0x49d V437
---
Entry stack: [V13, 0x7f, V123, V132, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V429, V429, 0x2e1a7d4d, V432, 0x0, V423, V434, V423, 0x0, V429, V436]
Exit stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, 0x0, V423, V434, V423, 0x0, V429, V436]

================================

Block 0x499
[0x499:0x49c]
---
Predecessors: [0x423]
Successors: []
---
0x499 PUSH1 0x0
0x49b DUP1
0x49c REVERT
---
0x499: V439 = 0x0
0x49c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, 0x0, V423, V434, V423, 0x0, V429, V436]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, 0x0, V423, V434, V423, 0x0, V429, V436]

================================

Block 0x49d
[0x49d:0x4a7]
---
Predecessors: [0x423]
Successors: [0x4a8, 0x4b1]
---
0x49d JUMPDEST
0x49e POP
0x49f GAS
0x4a0 CALL
0x4a1 ISZERO
0x4a2 DUP1
0x4a3 ISZERO
0x4a4 PUSH2 0x4b1
0x4a7 JUMPI
---
0x49d: JUMPDEST 
0x49f: V440 = GAS
0x4a0: V441 = CALL V440 V429 0x0 V423 V434 V423 0x0
0x4a1: V442 = ISZERO V441
0x4a3: V443 = ISZERO V442
0x4a4: V444 = 0x4b1
0x4a7: JUMPI 0x4b1 V443
---
Entry stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, 0x0, V423, V434, V423, 0x0, V429, V436]
Stack pops: 7
Stack additions: [V442]
Exit stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, V442]

================================

Block 0x4a8
[0x4a8:0x4b0]
---
Predecessors: [0x49d]
Successors: []
---
0x4a8 RETURNDATASIZE
0x4a9 PUSH1 0x0
0x4ab DUP1
0x4ac RETURNDATACOPY
0x4ad RETURNDATASIZE
0x4ae PUSH1 0x0
0x4b0 REVERT
---
0x4a8: V445 = RETURNDATASIZE
0x4a9: V446 = 0x0
0x4ac: RETURNDATACOPY 0x0 0x0 V445
0x4ad: V447 = RETURNDATASIZE
0x4ae: V448 = 0x0
0x4b0: REVERT 0x0 V447
---
Entry stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, V442]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, V442]

================================

Block 0x4b1
[0x4b1:0x4cf]
---
Predecessors: [0x49d]
Successors: [0x4d0, 0x4d4]
---
0x4b1 JUMPDEST
0x4b2 POP
0x4b3 POP
0x4b4 PUSH1 0x40
0x4b6 MLOAD
0x4b7 CALLER
0x4b8 SWAP3
0x4b9 POP
0x4ba DUP6
0x4bb SWAP2
0x4bc POP
0x4bd PUSH1 0x0
0x4bf DUP2
0x4c0 DUP2
0x4c1 DUP2
0x4c2 DUP6
0x4c3 DUP8
0x4c4 GAS
0x4c5 CALL
0x4c6 SWAP3
0x4c7 POP
0x4c8 POP
0x4c9 POP
0x4ca ISZERO
0x4cb ISZERO
0x4cc PUSH2 0x4d4
0x4cf JUMPI
---
0x4b1: JUMPDEST 
0x4b4: V449 = 0x40
0x4b6: V450 = M[0x40]
0x4b7: V451 = CALLER
0x4bd: V452 = 0x0
0x4c4: V453 = GAS
0x4c5: V454 = CALL V453 V451 V123 V450 0x0 V450 0x0
0x4ca: V455 = ISZERO V454
0x4cb: V456 = ISZERO V455
0x4cc: V457 = 0x4d4
0x4cf: JUMPI 0x4d4 V456
---
Entry stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, V442]
Stack pops: 7
Stack additions: [S6, S5, S4]
Exit stack: [V13, 0x7f, V123, V132, V429]

================================

Block 0x4d0
[0x4d0:0x4d3]
---
Predecessors: [0x4b1]
Successors: []
---
0x4d0 PUSH1 0x0
0x4d2 DUP1
0x4d3 REVERT
---
0x4d0: V458 = 0x0
0x4d3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V123, V132, V429]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V123, V132, V429]

================================

Block 0x4d4
[0x4d4:0x4d8]
---
Predecessors: [0x4b1, 0x7a6]
Successors: [0x7f]
---
0x4d4 JUMPDEST
0x4d5 POP
0x4d6 POP
0x4d7 POP
0x4d8 JUMP
---
0x4d4: JUMPDEST 
0x4d8: JUMP 0x7f
---
Entry stack: [V13, 0x7f, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x4d9
[0x4d9:0x4f3]
---
Predecessors: [0x166]
Successors: [0x4f4, 0x503]
---
0x4d9 JUMPDEST
0x4da CALLER
0x4db PUSH1 0x0
0x4dd SWAP1
0x4de DUP2
0x4df MSTORE
0x4e0 PUSH1 0x1
0x4e2 PUSH1 0x20
0x4e4 MSTORE
0x4e5 PUSH1 0x40
0x4e7 DUP2
0x4e8 SHA3
0x4e9 SLOAD
0x4ea DUP2
0x4eb SWAP1
0x4ec PUSH1 0xff
0x4ee AND
0x4ef DUP1
0x4f0 PUSH2 0x503
0x4f3 JUMPI
---
0x4d9: JUMPDEST 
0x4da: V459 = CALLER
0x4db: V460 = 0x0
0x4df: M[0x0] = V459
0x4e0: V461 = 0x1
0x4e2: V462 = 0x20
0x4e4: M[0x20] = 0x1
0x4e5: V463 = 0x40
0x4e8: V464 = SHA3 0x0 0x40
0x4e9: V465 = S[V464]
0x4ec: V466 = 0xff
0x4ee: V467 = AND 0xff V465
0x4f0: V468 = 0x503
0x4f3: JUMPI 0x503 V467
---
Entry stack: [V13, 0x7f, V139]
Stack pops: 0
Stack additions: [0x0, 0x0, V467]
Exit stack: [V13, 0x7f, V139, 0x0, 0x0, V467]

================================

Block 0x4f4
[0x4f4:0x502]
---
Predecessors: [0x4d9]
Successors: [0x503]
---
0x4f4 POP
0x4f5 PUSH1 0x0
0x4f7 SLOAD
0x4f8 PUSH1 0x1
0x4fa PUSH1 0xa0
0x4fc PUSH1 0x2
0x4fe EXP
0x4ff SUB
0x500 AND
0x501 CALLER
0x502 EQ
---
0x4f5: V469 = 0x0
0x4f7: V470 = S[0x0]
0x4f8: V471 = 0x1
0x4fa: V472 = 0xa0
0x4fc: V473 = 0x2
0x4fe: V474 = EXP 0x2 0xa0
0x4ff: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x501: V477 = CALLER
0x502: V478 = EQ V477 V476
---
Entry stack: [V13, 0x7f, V139, 0x0, 0x0, V467]
Stack pops: 1
Stack additions: [V478]
Exit stack: [V13, 0x7f, V139, 0x0, 0x0, V478]

================================

Block 0x503
[0x503:0x509]
---
Predecessors: [0x4d9, 0x4f4]
Successors: [0x50a, 0x50e]
---
0x503 JUMPDEST
0x504 ISZERO
0x505 ISZERO
0x506 PUSH2 0x50e
0x509 JUMPI
---
0x503: JUMPDEST 
0x504: V479 = ISZERO S0
0x505: V480 = ISZERO V479
0x506: V481 = 0x50e
0x509: JUMPI 0x50e V480
---
Entry stack: [V13, 0x7f, V139, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V139, 0x0, 0x0]

================================

Block 0x50a
[0x50a:0x50d]
---
Predecessors: [0x503]
Successors: []
---
0x50a PUSH1 0x0
0x50c DUP1
0x50d REVERT
---
0x50a: V482 = 0x0
0x50d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, 0x0, 0x0]

================================

Block 0x50e
[0x50e:0x676]
---
Predecessors: [0x503]
Successors: [0x677, 0x680]
---
0x50e JUMPDEST
0x50f GAS
0x510 PUSH2 0x100
0x513 DUP5
0x514 ADD
0x515 DUP1
0x516 MLOAD
0x517 PUSH1 0x1
0x519 PUSH1 0xf0
0x51b PUSH1 0x2
0x51d EXP
0x51e SUB
0x51f NOT
0x520 PUSH31 0x1000000000000000000000000000000000000000000000000000000000000
0x540 SWAP2
0x541 DUP3
0x542 MUL
0x543 DUP2
0x544 AND
0x545 PUSH1 0x0
0x547 SWAP1
0x548 DUP2
0x549 MSTORE
0x54a PUSH1 0x2
0x54c PUSH1 0x20
0x54e DUP2
0x54f DUP2
0x550 MSTORE
0x551 PUSH1 0x40
0x553 DUP1
0x554 DUP5
0x555 SHA3
0x556 SLOAD
0x557 DUP8
0x558 MLOAD
0x559 DUP3
0x55a DUP14
0x55b ADD
0x55c MLOAD
0x55d SWAP8
0x55e DUP2
0x55f MUL
0x560 SWAP1
0x561 SWAP7
0x562 AND
0x563 DUP6
0x564 MSTORE
0x565 DUP2
0x566 DUP6
0x567 SHA3
0x568 SLOAD
0x569 DUP13
0x56a MLOAD
0x56b PUSH1 0xe0
0x56d DUP15
0x56e ADD
0x56f MLOAD
0x570 SWAP10
0x571 MLOAD
0x572 DUP5
0x573 MLOAD
0x574 PUSH1 0x1
0x576 PUSH1 0xa0
0x578 PUSH1 0x2
0x57a EXP
0x57b SUB
0x57c SWAP4
0x57d DUP5
0x57e AND
0x57f PUSH13 0x1000000000000000000000000
0x58d SWAP1
0x58e DUP2
0x58f MUL
0x590 DUP3
0x591 MSTORE
0x592 SWAP3
0x593 DUP4
0x594 MUL
0x595 DUP4
0x596 SWAP1
0x597 DIV
0x598 DUP5
0x599 AND
0x59a DUP4
0x59b MUL
0x59c PUSH1 0x14
0x59e DUP3
0x59f ADD
0x5a0 MSTORE
0x5a1 PUSH21 0x10000000000000000000000000000000000000000
0x5b7 PUSH9 0x10000000000000000
0x5c1 DUP14
0x5c2 MUL
0x5c3 DUP2
0x5c4 SWAP1
0x5c5 DIV
0x5c6 PUSH1 0x28
0x5c8 DUP4
0x5c9 ADD
0x5ca MSTORE
0x5cb PUSH1 0x48
0x5cd DUP3
0x5ce ADD
0x5cf DUP11
0x5d0 SWAP1
0x5d1 MSTORE
0x5d2 SWAP12
0x5d3 DUP13
0x5d4 MUL
0x5d5 DUP13
0x5d6 SWAP1
0x5d7 DIV
0x5d8 PUSH1 0x49
0x5da DUP3
0x5db ADD
0x5dc MSTORE
0x5dd PUSH1 0xe0
0x5df PUSH1 0x2
0x5e1 EXP
0x5e2 PUSH7 0x1000000000000
0x5ea DUP4
0x5eb MUL
0x5ec DIV
0x5ed PUSH1 0x69
0x5ef DUP3
0x5f0 ADD
0x5f1 MSTORE
0x5f2 PUSH25 0x1000000000000000000000000000000000000000000000000
0x60c PUSH11 0x100000000000000000000
0x618 SWAP1
0x619 SWAP3
0x61a MUL
0x61b SWAP2
0x61c SWAP1
0x61d SWAP2
0x61e DIV
0x61f PUSH1 0x89
0x621 DUP3
0x622 ADD
0x623 MSTORE
0x624 SWAP4
0x625 MLOAD
0x626 PUSH2 0x9470
0x629 SWAP12
0x62a SWAP1
0x62b SWAP12
0x62c ADD
0x62d SWAP13
0x62e POP
0x62f SWAP2
0x630 AND
0x631 SWAP10
0x632 POP
0x633 PUSH19 0x1000000000000000000000000000000000000
0x647 SWAP1
0x648 SWAP6
0x649 MUL
0x64a SWAP7
0x64b SWAP1
0x64c SWAP7
0x64d DIV
0x64e SWAP7
0x64f DUP9
0x650 SWAP7
0x651 PUSH4 0x19774d43
0x656 SWAP7
0x657 DUP7
0x658 MUL
0x659 SWAP6
0x65a SWAP1
0x65b SWAP6
0x65c DIV
0x65d SWAP5
0x65e SWAP3
0x65f SWAP4
0x660 PUSH1 0xa9
0x662 DUP1
0x663 DUP6
0x664 ADD
0x665 SWAP5
0x666 DUP4
0x667 SWAP1
0x668 SUB
0x669 ADD
0x66a SWAP1
0x66b DUP3
0x66c SWAP1
0x66d DUP7
0x66e GAS
0x66f CALL
0x670 ISZERO
0x671 DUP1
0x672 ISZERO
0x673 PUSH2 0x680
0x676 JUMPI
---
0x50e: JUMPDEST 
0x50f: V483 = GAS
0x510: V484 = 0x100
0x514: V485 = ADD V139 0x100
0x516: V486 = M[V485]
0x517: V487 = 0x1
0x519: V488 = 0xf0
0x51b: V489 = 0x2
0x51d: V490 = EXP 0x2 0xf0
0x51e: V491 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x51f: V492 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x520: V493 = 0x1000000000000000000000000000000000000000000000000000000000000
0x542: V494 = MUL 0x1000000000000000000000000000000000000000000000000000000000000 V486
0x544: V495 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V494
0x545: V496 = 0x0
0x549: M[0x0] = V495
0x54a: V497 = 0x2
0x54c: V498 = 0x20
0x550: M[0x20] = 0x2
0x551: V499 = 0x40
0x555: V500 = SHA3 0x0 0x40
0x556: V501 = S[V500]
0x558: V502 = M[V485]
0x55b: V503 = ADD V139 0x40
0x55c: V504 = M[V503]
0x55f: V505 = MUL V502 0x1000000000000000000000000000000000000000000000000000000000000
0x562: V506 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V505
0x564: M[0x0] = V506
0x567: V507 = SHA3 0x0 0x40
0x568: V508 = S[V507]
0x56a: V509 = M[V139]
0x56b: V510 = 0xe0
0x56e: V511 = ADD V139 0xe0
0x56f: V512 = M[V511]
0x571: V513 = M[V485]
0x573: V514 = M[0x40]
0x574: V515 = 0x1
0x576: V516 = 0xa0
0x578: V517 = 0x2
0x57a: V518 = EXP 0x2 0xa0
0x57b: V519 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57e: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x57f: V521 = 0x1000000000000000000000000
0x58f: V522 = MUL 0x1000000000000000000000000 V520
0x591: M[V514] = V522
0x594: V523 = MUL 0x1000000000000000000000000 V509
0x597: V524 = DIV V523 0x1000000000000000000000000
0x599: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x59b: V526 = MUL 0x1000000000000000000000000 V525
0x59c: V527 = 0x14
0x59f: V528 = ADD V514 0x14
0x5a0: M[V528] = V526
0x5a1: V529 = 0x10000000000000000000000000000000000000000
0x5b7: V530 = 0x10000000000000000
0x5c2: V531 = MUL V512 0x10000000000000000
0x5c5: V532 = DIV V531 0x10000000000000000000000000000000000000000
0x5c6: V533 = 0x28
0x5c9: V534 = ADD V514 0x28
0x5ca: M[V534] = V532
0x5cb: V535 = 0x48
0x5ce: V536 = ADD V514 0x48
0x5d1: M[V536] = 0x0
0x5d4: V537 = MUL 0x10000000000000000000000000000000000000000 V512
0x5d7: V538 = DIV V537 0x10000000000000000000000000000000000000000
0x5d8: V539 = 0x49
0x5db: V540 = ADD V514 0x49
0x5dc: M[V540] = V538
0x5dd: V541 = 0xe0
0x5df: V542 = 0x2
0x5e1: V543 = EXP 0x2 0xe0
0x5e2: V544 = 0x1000000000000
0x5eb: V545 = MUL V513 0x1000000000000
0x5ec: V546 = DIV V545 0x100000000000000000000000000000000000000000000000000000000
0x5ed: V547 = 0x69
0x5f0: V548 = ADD V514 0x69
0x5f1: M[V548] = V546
0x5f2: V549 = 0x1000000000000000000000000000000000000000000000000
0x60c: V550 = 0x100000000000000000000
0x61a: V551 = MUL V513 0x100000000000000000000
0x61e: V552 = DIV V551 0x1000000000000000000000000000000000000000000000000
0x61f: V553 = 0x89
0x622: V554 = ADD V514 0x89
0x623: M[V554] = V552
0x625: V555 = M[0x40]
0x626: V556 = 0x9470
0x62c: V557 = ADD 0x9470 V483
0x630: V558 = AND V501 0xffffffffffffffffffffffffffffffffffffffff
0x633: V559 = 0x1000000000000000000000000000000000000
0x649: V560 = MUL V502 0x1000000000000000000000000000000000000
0x64d: V561 = DIV V560 0x10000000000000000000000000000000000000000
0x651: V562 = 0x19774d43
0x658: V563 = MUL 0x1000000000000000000000000 V504
0x65c: V564 = DIV V563 0x1000000000000000000000000
0x660: V565 = 0xa9
0x664: V566 = ADD V514 0xa9
0x668: V567 = SUB V514 V555
0x669: V568 = ADD V567 0xa9
0x66e: V569 = GAS
0x66f: V570 = CALL V569 0x2 0x0 V555 V568 V555 0x20
0x670: V571 = ISZERO V570
0x672: V572 = ISZERO V571
0x673: V573 = 0x680
0x676: JUMPI 0x680 V572
---
Entry stack: [V13, 0x7f, V139, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, V557, V558, V561, V558, 0x19774d43, V564, 0x2, V566, V571]
Exit stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V564, 0x2, V566, V571]

================================

Block 0x677
[0x677:0x67f]
---
Predecessors: [0x50e]
Successors: []
---
0x677 RETURNDATASIZE
0x678 PUSH1 0x0
0x67a DUP1
0x67b RETURNDATACOPY
0x67c RETURNDATASIZE
0x67d PUSH1 0x0
0x67f REVERT
---
0x677: V574 = RETURNDATASIZE
0x678: V575 = 0x0
0x67b: RETURNDATACOPY 0x0 0x0 V574
0x67c: V576 = RETURNDATASIZE
0x67d: V577 = 0x0
0x67f: REVERT 0x0 V576
---
Entry stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V564, 0x2, V566, V571]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V564, 0x2, V566, V571]

================================

Block 0x680
[0x680:0x690]
---
Predecessors: [0x50e]
Successors: [0x691, 0x695]
---
0x680 JUMPDEST
0x681 POP
0x682 POP
0x683 POP
0x684 PUSH1 0x40
0x686 MLOAD
0x687 RETURNDATASIZE
0x688 PUSH1 0x20
0x68a DUP2
0x68b LT
0x68c ISZERO
0x68d PUSH2 0x695
0x690 JUMPI
---
0x680: JUMPDEST 
0x684: V578 = 0x40
0x686: V579 = M[0x40]
0x687: V580 = RETURNDATASIZE
0x688: V581 = 0x20
0x68b: V582 = LT V580 0x20
0x68c: V583 = ISZERO V582
0x68d: V584 = 0x695
0x690: JUMPI 0x695 V583
---
Entry stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V564, 0x2, V566, V571]
Stack pops: 3
Stack additions: [V579, V580]
Exit stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V564, V579, V580]

================================

Block 0x691
[0x691:0x694]
---
Predecessors: [0x680]
Successors: []
---
0x691 PUSH1 0x0
0x693 DUP1
0x694 REVERT
---
0x691: V585 = 0x0
0x694: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V564, V579, V580]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V564, V579, V580]

================================

Block 0x695
[0x695:0x6df]
---
Predecessors: [0x680]
Successors: [0x6e0, 0x6e4]
---
0x695 JUMPDEST
0x696 POP
0x697 MLOAD
0x698 PUSH1 0x40
0x69a DUP1
0x69b MLOAD
0x69c PUSH1 0xe0
0x69e PUSH1 0x2
0x6a0 EXP
0x6a1 PUSH4 0xffffffff
0x6a6 DUP7
0x6a7 AND
0x6a8 MUL
0x6a9 DUP2
0x6aa MSTORE
0x6ab PUSH1 0x1
0x6ad PUSH1 0xa0
0x6af PUSH1 0x2
0x6b1 EXP
0x6b2 SUB
0x6b3 SWAP1
0x6b4 SWAP4
0x6b5 AND
0x6b6 PUSH1 0x4
0x6b8 DUP5
0x6b9 ADD
0x6ba MSTORE
0x6bb PUSH1 0x24
0x6bd DUP4
0x6be ADD
0x6bf SWAP2
0x6c0 SWAP1
0x6c1 SWAP2
0x6c2 MSTORE
0x6c3 MLOAD
0x6c4 PUSH1 0x44
0x6c6 DUP1
0x6c7 DUP4
0x6c8 ADD
0x6c9 SWAP3
0x6ca PUSH1 0x20
0x6cc SWAP3
0x6cd SWAP2
0x6ce SWAP1
0x6cf DUP3
0x6d0 SWAP1
0x6d1 SUB
0x6d2 ADD
0x6d3 DUP2
0x6d4 PUSH1 0x0
0x6d6 DUP8
0x6d7 DUP1
0x6d8 EXTCODESIZE
0x6d9 ISZERO
0x6da DUP1
0x6db ISZERO
0x6dc PUSH2 0x6e4
0x6df JUMPI
---
0x695: JUMPDEST 
0x697: V586 = M[V579]
0x698: V587 = 0x40
0x69b: V588 = M[0x40]
0x69c: V589 = 0xe0
0x69e: V590 = 0x2
0x6a0: V591 = EXP 0x2 0xe0
0x6a1: V592 = 0xffffffff
0x6a7: V593 = AND 0x19774d43 0xffffffff
0x6a8: V594 = MUL 0x19774d43 0x100000000000000000000000000000000000000000000000000000000
0x6aa: M[V588] = 0x19774d4300000000000000000000000000000000000000000000000000000000
0x6ab: V595 = 0x1
0x6ad: V596 = 0xa0
0x6af: V597 = 0x2
0x6b1: V598 = EXP 0x2 0xa0
0x6b2: V599 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b5: V600 = AND V564 0xffffffffffffffffffffffffffffffffffffffff
0x6b6: V601 = 0x4
0x6b9: V602 = ADD V588 0x4
0x6ba: M[V602] = V600
0x6bb: V603 = 0x24
0x6be: V604 = ADD V588 0x24
0x6c2: M[V604] = V586
0x6c3: V605 = M[0x40]
0x6c4: V606 = 0x44
0x6c8: V607 = ADD V588 0x44
0x6ca: V608 = 0x20
0x6d1: V609 = SUB V588 V605
0x6d2: V610 = ADD V609 0x44
0x6d4: V611 = 0x0
0x6d8: V612 = EXTCODESIZE V558
0x6d9: V613 = ISZERO V612
0x6db: V614 = ISZERO V613
0x6dc: V615 = 0x6e4
0x6df: JUMPI 0x6e4 V614
---
Entry stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V564, V579, V580]
Stack pops: 5
Stack additions: [S4, S3, V607, 0x20, V605, V610, V605, 0x0, S4, V613]
Exit stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V607, 0x20, V605, V610, V605, 0x0, V558, V613]

================================

Block 0x6e0
[0x6e0:0x6e3]
---
Predecessors: [0x695]
Successors: []
---
0x6e0 PUSH1 0x0
0x6e2 DUP1
0x6e3 REVERT
---
0x6e0: V616 = 0x0
0x6e3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V607, 0x20, V605, V610, V605, 0x0, V558, V613]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V607, 0x20, V605, V610, V605, 0x0, V558, V613]

================================

Block 0x6e4
[0x6e4:0x6ee]
---
Predecessors: [0x695]
Successors: [0x6ef, 0x6f8]
---
0x6e4 JUMPDEST
0x6e5 POP
0x6e6 GAS
0x6e7 CALL
0x6e8 ISZERO
0x6e9 DUP1
0x6ea ISZERO
0x6eb PUSH2 0x6f8
0x6ee JUMPI
---
0x6e4: JUMPDEST 
0x6e6: V617 = GAS
0x6e7: V618 = CALL V617 V558 0x0 V605 V610 V605 0x20
0x6e8: V619 = ISZERO V618
0x6ea: V620 = ISZERO V619
0x6eb: V621 = 0x6f8
0x6ee: JUMPI 0x6f8 V620
---
Entry stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V607, 0x20, V605, V610, V605, 0x0, V558, V613]
Stack pops: 7
Stack additions: [V619]
Exit stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V607, V619]

================================

Block 0x6ef
[0x6ef:0x6f7]
---
Predecessors: [0x6e4]
Successors: []
---
0x6ef RETURNDATASIZE
0x6f0 PUSH1 0x0
0x6f2 DUP1
0x6f3 RETURNDATACOPY
0x6f4 RETURNDATASIZE
0x6f5 PUSH1 0x0
0x6f7 REVERT
---
0x6ef: V622 = RETURNDATASIZE
0x6f0: V623 = 0x0
0x6f3: RETURNDATACOPY 0x0 0x0 V622
0x6f4: V624 = RETURNDATASIZE
0x6f5: V625 = 0x0
0x6f7: REVERT 0x0 V624
---
Entry stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V607, V619]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V607, V619]

================================

Block 0x6f8
[0x6f8:0x709]
---
Predecessors: [0x6e4]
Successors: [0x70a, 0x70e]
---
0x6f8 JUMPDEST
0x6f9 POP
0x6fa POP
0x6fb POP
0x6fc POP
0x6fd PUSH1 0x40
0x6ff MLOAD
0x700 RETURNDATASIZE
0x701 PUSH1 0x20
0x703 DUP2
0x704 LT
0x705 ISZERO
0x706 PUSH2 0x70e
0x709 JUMPI
---
0x6f8: JUMPDEST 
0x6fd: V626 = 0x40
0x6ff: V627 = M[0x40]
0x700: V628 = RETURNDATASIZE
0x701: V629 = 0x20
0x704: V630 = LT V628 0x20
0x705: V631 = ISZERO V630
0x706: V632 = 0x70e
0x709: JUMPI 0x70e V631
---
Entry stack: [V13, 0x7f, V139, V557, V558, V561, V558, 0x19774d43, V607, V619]
Stack pops: 4
Stack additions: [V627, V628]
Exit stack: [V13, 0x7f, V139, V557, V558, V561, V627, V628]

================================

Block 0x70a
[0x70a:0x70d]
---
Predecessors: [0x6f8]
Successors: []
---
0x70a PUSH1 0x0
0x70c DUP1
0x70d REVERT
---
0x70a: V633 = 0x0
0x70d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, V557, V558, V561, V627, V628]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V557, V558, V561, V627, V628]

================================

Block 0x70e
[0x70e:0x722]
---
Predecessors: [0x6f8]
Successors: [0x723, 0x724]
---
0x70e JUMPDEST
0x70f POP
0x710 MLOAD
0x711 POP
0x712 POP
0x713 PUSH2 0x4d4
0x716 PUSH2 0x61a8
0x719 GAS
0x71a DUP5
0x71b SUB
0x71c DUP2
0x71d ISZERO
0x71e ISZERO
0x71f PUSH2 0x724
0x722 JUMPI
---
0x70e: JUMPDEST 
0x710: V634 = M[V627]
0x713: V635 = 0x4d4
0x716: V636 = 0x61a8
0x719: V637 = GAS
0x71b: V638 = SUB V557 V637
0x71d: V639 = ISZERO 0x61a8
0x71e: V640 = ISZERO 0x0
0x71f: V641 = 0x724
0x722: JUMPI 0x724 0x1
---
Entry stack: [V13, 0x7f, V139, V557, V558, V561, V627, V628]
Stack pops: 5
Stack additions: [S4, S3, 0x4d4, 0x61a8, V638]
Exit stack: [V13, 0x7f, V139, V557, V558, 0x4d4, 0x61a8, V638]

================================

Block 0x723
[0x723:0x723]
---
Predecessors: [0x70e]
Successors: []
---
0x723 INVALID
---
0x723: INVALID 
---
Entry stack: [V13, 0x7f, V139, V557, V558, 0x4d4, 0x61a8, V638]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V557, V558, 0x4d4, 0x61a8, V638]

================================

Block 0x724
[0x724:0x72c]
---
Predecessors: [0x70e]
Successors: [0x77e]
---
0x724 JUMPDEST
0x725 DIV
0x726 PUSH1 0x1
0x728 ADD
0x729 PUSH2 0x77e
0x72c JUMP
---
0x724: JUMPDEST 
0x725: V642 = DIV V638 0x61a8
0x726: V643 = 0x1
0x728: V644 = ADD 0x1 V642
0x729: V645 = 0x77e
0x72c: JUMP 0x77e
---
Entry stack: [V13, 0x7f, V139, V557, V558, 0x4d4, 0x61a8, V638]
Stack pops: 2
Stack additions: [V644]
Exit stack: [V13, 0x7f, V139, V557, V558, 0x4d4, V644]

================================

Block 0x72d
[0x72d:0x73e]
---
Predecessors: [0x1ab]
Successors: [0x73f, 0x743]
---
0x72d JUMPDEST
0x72e PUSH4 0xdeadbeef
0x733 PUSH1 0x0
0x735 DUP1
0x736 DUP1
0x737 DUP1
0x738 DUP6
0x739 ISZERO
0x73a ISZERO
0x73b PUSH2 0x743
0x73e JUMPI
---
0x72d: JUMPDEST 
0x72e: V646 = 0xdeadbeef
0x733: V647 = 0x0
0x739: V648 = ISZERO V154
0x73a: V649 = ISZERO V648
0x73b: V650 = 0x743
0x73e: JUMPI 0x743 V649
---
Entry stack: [V13, 0x7f, V154]
Stack pops: 1
Stack additions: [S0, 0xdeadbeef, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x73f
[0x73f:0x742]
---
Predecessors: [0x72d]
Successors: [0x776]
---
0x73f PUSH2 0x776
0x742 JUMP
---
0x73f: V651 = 0x776
0x742: JUMP 0x776
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x743
[0x743:0x75b]
---
Predecessors: [0x72d]
Successors: [0x75c, 0x776]
---
0x743 JUMPDEST
0x744 DUP5
0x745 SLOAD
0x746 SWAP4
0x747 POP
0x748 DUP4
0x749 DUP6
0x74a ADD
0x74b PUSH1 0x1
0x74d DUP2
0x74e ADD
0x74f SWAP4
0x750 POP
0x751 DUP7
0x752 ADD
0x753 SWAP2
0x754 POP
0x755 DUP3
0x756 DUP3
0x757 LT
0x758 PUSH2 0x776
0x75b JUMPI
---
0x743: JUMPDEST 
0x745: V652 = S[0xdeadbeef]
0x74a: V653 = ADD 0xdeadbeef V652
0x74b: V654 = 0x1
0x74e: V655 = ADD V653 0x1
0x752: V656 = ADD V154 V653
0x757: V657 = LT V656 V655
0x758: V658 = 0x776
0x75b: JUMPI 0x776 V657
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, V652, V655, V656, S0]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, V652, V655, V656, 0x0]

================================

Block 0x75c
[0x75c:0x75d]
---
Predecessors: [0x743]
Successors: [0x75e]
---
0x75c POP
0x75d DUP2
---
0x75c: NOP 
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, V652, V655, V656, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, V652, V655, V656, V655]

================================

Block 0x75e
[0x75e:0x765]
---
Predecessors: [0x75c, 0x766]
Successors: [0x766, 0x770]
---
0x75e JUMPDEST
0x75f DUP2
0x760 DUP2
0x761 GT
0x762 PUSH2 0x770
0x765 JUMPI
---
0x75e: JUMPDEST 
0x761: V659 = GT S0 V656
0x762: V660 = 0x770
0x765: JUMPI 0x770 V659
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, V652, V655, V656, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, V652, V655, V656, S0]

================================

Block 0x766
[0x766:0x76f]
---
Predecessors: [0x75e]
Successors: [0x75e]
---
0x766 PUSH1 0x1
0x768 DUP1
0x769 DUP3
0x76a SSTORE
0x76b ADD
0x76c PUSH2 0x75e
0x76f JUMP
---
0x766: V661 = 0x1
0x76a: S[S0] = 0x1
0x76b: V662 = ADD 0x1 S0
0x76c: V663 = 0x75e
0x76f: JUMP 0x75e
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, V652, V655, V656, S0]
Stack pops: 1
Stack additions: [V662]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, V652, V655, V656, V662]

================================

Block 0x770
[0x770:0x775]
---
Predecessors: [0x75e]
Successors: [0x776]
---
0x770 JUMPDEST
0x771 DUP6
0x772 DUP5
0x773 ADD
0x774 DUP6
0x775 SSTORE
---
0x770: JUMPDEST 
0x773: V664 = ADD V652 V154
0x775: S[0xdeadbeef] = V664
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, V652, V655, V656, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, V652, V655, V656, S0]

================================

Block 0x776
[0x776:0x77d]
---
Predecessors: [0x73f, 0x743, 0x770]
Successors: [0x7f]
---
0x776 JUMPDEST
0x777 POP
0x778 POP
0x779 POP
0x77a POP
0x77b POP
0x77c POP
0x77d JUMP
---
0x776: JUMPDEST 
0x77d: JUMP 0x7f
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x77e
[0x77e:0x792]
---
Predecessors: [0x724]
Successors: [0x793]
---
0x77e JUMPDEST
0x77f PUSH4 0xdeadbeef
0x784 DUP1
0x785 SLOAD
0x786 PUSH4 0xdeadbef0
0x78b DUP4
0x78c DUP3
0x78d SUB
0x78e ADD
0x78f DUP2
0x790 DUP4
0x791 ADD
0x792 DUP2
---
0x77e: JUMPDEST 
0x77f: V665 = 0xdeadbeef
0x785: V666 = S[0xdeadbeef]
0x786: V667 = 0xdeadbef0
0x78d: V668 = SUB V666 V644
0x78e: V669 = ADD V668 0xdeadbef0
0x791: V670 = ADD 0xdeadbeef V666
---
Entry stack: [V13, 0x7f, V139, V557, V558, 0x4d4, V644]
Stack pops: 1
Stack additions: [S0, 0xdeadbeef, V666, V669, V670, V669]
Exit stack: [V13, 0x7f, V139, V557, V558, 0x4d4, V644, 0xdeadbeef, V666, V669, V670, V669]

================================

Block 0x793
[0x793:0x79a]
---
Predecessors: [0x77e, 0x79b]
Successors: [0x79b, 0x7a6]
---
0x793 JUMPDEST
0x794 DUP2
0x795 DUP2
0x796 GT
0x797 PUSH2 0x7a6
0x79a JUMPI
---
0x793: JUMPDEST 
0x796: V671 = GT S0 V670
0x797: V672 = 0x7a6
0x79a: JUMPI 0x7a6 V671
---
Entry stack: [V13, 0x7f, V139, V557, V558, 0x4d4, V644, 0xdeadbeef, V666, V669, V670, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x7f, V139, V557, V558, 0x4d4, V644, 0xdeadbeef, V666, V669, V670, S0]

================================

Block 0x79b
[0x79b:0x7a5]
---
Predecessors: [0x793]
Successors: [0x793]
---
0x79b PUSH1 0x0
0x79d DUP2
0x79e SSTORE
0x79f PUSH1 0x1
0x7a1 ADD
0x7a2 PUSH2 0x793
0x7a5 JUMP
---
0x79b: V673 = 0x0
0x79e: S[S0] = 0x0
0x79f: V674 = 0x1
0x7a1: V675 = ADD 0x1 S0
0x7a2: V676 = 0x793
0x7a5: JUMP 0x793
---
Entry stack: [V13, 0x7f, V139, V557, V558, 0x4d4, V644, 0xdeadbeef, V666, V669, V670, S0]
Stack pops: 1
Stack additions: [V675]
Exit stack: [V13, 0x7f, V139, V557, V558, 0x4d4, V644, 0xdeadbeef, V666, V669, V670, V675]

================================

Block 0x7a6
[0x7a6:0x7b0]
---
Predecessors: [0x793]
Successors: [0x4d4]
---
0x7a6 JUMPDEST
0x7a7 POP
0x7a8 POP
0x7a9 POP
0x7aa SWAP2
0x7ab SWAP1
0x7ac SWAP2
0x7ad SUB
0x7ae SWAP1
0x7af SSTORE
0x7b0 JUMP
---
0x7a6: JUMPDEST 
0x7ad: V677 = SUB V666 V644
0x7af: S[0xdeadbeef] = V677
0x7b0: JUMP 0x4d4
---
Entry stack: [V13, 0x7f, V139, V557, V558, 0x4d4, V644, 0xdeadbeef, V666, V669, V670, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V13, 0x7f, V139, V557, V558]

================================

Block 0x7b1
[0x7b1:0x7df]
---
Predecessors: []
Successors: []
---
0x7b1 STOP
0x7b2 LOG1
0x7b3 PUSH6 0x627a7a723058
0x7ba SHA3
0x7bb MISSING 0xae
0x7bc MISSING 0xab
0x7bd MISSING 0x23
0x7be PUSH6 0x2359e47d5123
0x7c5 INVALID
0x7c6 DUP12
0x7c7 PUSH24 0x23acfce56f637e396b34c7ab65f591c7049e210029
---
0x7b1: STOP 
0x7b2: LOG S0 S1 S2
0x7b3: V678 = 0x627a7a723058
0x7ba: V679 = SHA3 0x627a7a723058 S3
0x7bb: MISSING 0xae
0x7bc: MISSING 0xab
0x7bd: MISSING 0x23
0x7be: V680 = 0x2359e47d5123
0x7c5: INVALID 
0x7c7: V681 = 0x23acfce56f637e396b34c7ab65f591c7049e210029
---
Entry stack: []
Stack pops: 0
Stack additions: [V679, 0x2359e47d5123, 0x23acfce56f637e396b34c7ab65f591c7049e210029, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Function 0:
Public function signature: 0x1785f53c
Entry block: 0x81
Exit block: 0x7f
Body: 0x7f, 0x81, 0x89, 0x8d, 0x1b7, 0x1d0, 0x1df, 0x1e6, 0x1ea

Function 1:
Public function signature: 0x40e6c16f
Entry block: 0xa2
Exit block: 0xb7
Body: 0xa2, 0xaa, 0xae, 0xb7, 0x20b

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xc9
Exit block: 0x247
Body: 0xc9, 0xd1, 0xd5, 0x214, 0x22d, 0x23c, 0x243, 0x247

Function 3:
Public function signature: 0x6ec6333d
Entry block: 0xde
Exit block: 0x7f
Body: 0x7f, 0xde, 0xe6, 0xea, 0x255, 0x26e, 0x27d, 0x284, 0x288

Function 4:
Public function signature: 0x786548dd
Entry block: 0xff
Exit block: 0x7f
Body: 0x7f, 0xff, 0x2af, 0x2c8, 0x2d7, 0x2de, 0x2e2, 0x355, 0x359, 0x364, 0x36d

Function 5:
Public function signature: 0xa70ef5b0
Entry block: 0x114
Exit block: 0x7f
Body: 0x7f, 0x114, 0x11c, 0x120, 0x376, 0x38f, 0x39e, 0x3a5, 0x3a9

Function 6:
Public function signature: 0xbfaa4391
Entry block: 0x142
Exit block: 0x7f
Body: 0x7f, 0x142, 0x3f0, 0x409, 0x418, 0x41f, 0x423, 0x499, 0x49d, 0x4a8, 0x4b1, 0x4d0, 0x4d4

Function 7:
Public function signature: 0xdf207dff
Entry block: 0x15a
Exit block: 0x7f
Body: 0x7f, 0x15a, 0x162, 0x166, 0x4d4, 0x4d9, 0x4f4, 0x503, 0x50a, 0x50e, 0x677, 0x680, 0x691, 0x695, 0x6e0, 0x6e4, 0x6ef, 0x6f8, 0x70a, 0x70e, 0x723, 0x724, 0x77e, 0x793, 0x79b, 0x7a6

Function 8:
Public function signature: 0xe10c63ae
Entry block: 0x19f
Exit block: 0x7f
Body: 0x7f, 0x19f, 0x1a7, 0x1ab, 0x72d, 0x73f, 0x743, 0x75c, 0x75e, 0x766, 0x770, 0x776

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x7f
Body: 0x7f

