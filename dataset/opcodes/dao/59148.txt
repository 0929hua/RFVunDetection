Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1e569a9
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1e569a9
0x3c: V13 = EQ 0x1e569a9 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb1]
---
0x41 DUP1
0x42 PUSH4 0x2e1a7d4d
0x47 EQ
0x48 PUSH2 0xb1
0x4b JUMPI
---
0x42: V15 = 0x2e1a7d4d
0x47: V16 = EQ 0x2e1a7d4d V11
0x48: V17 = 0xb1
0x4b: JUMPI 0xb1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xde]
---
0x4c DUP1
0x4d PUSH4 0xca4b208b
0x52 EQ
0x53 PUSH2 0xde
0x56 JUMPI
---
0x4d: V18 = 0xca4b208b
0x52: V19 = EQ 0xca4b208b V11
0x53: V20 = 0xde
0x56: JUMPI 0xde V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x135]
---
0x57 DUP1
0x58 PUSH4 0xfe0d94c1
0x5d EQ
0x5e PUSH2 0x135
0x61 JUMPI
---
0x58: V21 = 0xfe0d94c1
0x5d: V22 = EQ 0xfe0d94c1 V11
0x5e: V23 = 0x135
0x61: JUMPI 0x135 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0xae]
---
Predecessors: [0xd]
Successors: [0x155]
---
0x67 JUMPDEST
0x68 PUSH2 0xaf
0x6b PUSH1 0x4
0x6d DUP1
0x6e CALLDATASIZE
0x6f SUB
0x70 DUP2
0x71 ADD
0x72 SWAP1
0x73 DUP1
0x74 DUP1
0x75 CALLDATALOAD
0x76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b AND
0x8c SWAP1
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP1
0x91 SWAP3
0x92 SWAP2
0x93 SWAP1
0x94 DUP1
0x95 CALLDATALOAD
0x96 SWAP1
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP1
0x9b SWAP3
0x9c SWAP2
0x9d SWAP1
0x9e DUP1
0x9f CALLDATALOAD
0xa0 SWAP1
0xa1 PUSH1 0x20
0xa3 ADD
0xa4 SWAP1
0xa5 SWAP3
0xa6 SWAP2
0xa7 SWAP1
0xa8 POP
0xa9 POP
0xaa POP
0xab PUSH2 0x155
0xae JUMP
---
0x67: JUMPDEST 
0x68: V25 = 0xaf
0x6b: V26 = 0x4
0x6e: V27 = CALLDATASIZE
0x6f: V28 = SUB V27 0x4
0x71: V29 = ADD 0x4 V28
0x75: V30 = CALLDATALOAD 0x4
0x76: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x8d: V33 = 0x20
0x8f: V34 = ADD 0x20 0x4
0x95: V35 = CALLDATALOAD 0x24
0x97: V36 = 0x20
0x99: V37 = ADD 0x20 0x24
0x9f: V38 = CALLDATALOAD 0x44
0xa1: V39 = 0x20
0xa3: V40 = ADD 0x20 0x44
0xab: V41 = 0x155
0xae: JUMP 0x155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xaf, V32, V35, V38]
Exit stack: [V11, 0xaf, V32, V35, V38]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: [0x213]
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb8]
---
Predecessors: [0x41]
Successors: [0xb9, 0xbd]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 DUP1
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xb1: JUMPDEST 
0xb2: V42 = CALLVALUE
0xb4: V43 = ISZERO V42
0xb5: V44 = 0xbd
0xb8: JUMPI 0xbd V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xb1]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V45 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0xbd
[0xbd:0xdb]
---
Predecessors: [0xb1]
Successors: [0x218]
---
0xbd JUMPDEST
0xbe POP
0xbf PUSH2 0xdc
0xc2 PUSH1 0x4
0xc4 DUP1
0xc5 CALLDATASIZE
0xc6 SUB
0xc7 DUP2
0xc8 ADD
0xc9 SWAP1
0xca DUP1
0xcb DUP1
0xcc CALLDATALOAD
0xcd SWAP1
0xce PUSH1 0x20
0xd0 ADD
0xd1 SWAP1
0xd2 SWAP3
0xd3 SWAP2
0xd4 SWAP1
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 PUSH2 0x218
0xdb JUMP
---
0xbd: JUMPDEST 
0xbf: V46 = 0xdc
0xc2: V47 = 0x4
0xc5: V48 = CALLDATASIZE
0xc6: V49 = SUB V48 0x4
0xc8: V50 = ADD 0x4 V49
0xcc: V51 = CALLDATALOAD 0x4
0xce: V52 = 0x20
0xd0: V53 = ADD 0x20 0x4
0xd8: V54 = 0x218
0xdb: JUMP 0x218
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: [0xdc, V51]
Exit stack: [V11, 0xdc, V51]

================================

Block 0xdc
[0xdc:0xdd]
---
Predecessors: [0x27f]
Successors: []
---
0xdc JUMPDEST
0xdd STOP
---
0xdc: JUMPDEST 
0xdd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0x4c]
Successors: [0xe6, 0xea]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 DUP1
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xde: JUMPDEST 
0xdf: V55 = CALLVALUE
0xe1: V56 = ISZERO V55
0xe2: V57 = 0xea
0xe5: JUMPI 0xea V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V11, V55]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xde]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V58 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V11, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55]

================================

Block 0xea
[0xea:0xf2]
---
Predecessors: [0xde]
Successors: [0x283]
---
0xea JUMPDEST
0xeb POP
0xec PUSH2 0xf3
0xef PUSH2 0x283
0xf2 JUMP
---
0xea: JUMPDEST 
0xec: V59 = 0xf3
0xef: V60 = 0x283
0xf2: JUMP 0x283
---
Entry stack: [V11, V55]
Stack pops: 1
Stack additions: [0xf3]
Exit stack: [V11, 0xf3]

================================

Block 0xf3
[0xf3:0x134]
---
Predecessors: [0x283]
Successors: []
---
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 DUP3
0xf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e AND
0x10f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x124 AND
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP2
0x12b POP
0x12c POP
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 SWAP2
0x132 SUB
0x133 SWAP1
0x134 RETURN
---
0xf3: JUMPDEST 
0xf4: V61 = 0x40
0xf6: V62 = M[0x40]
0xf9: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x10f: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x124: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x126: M[V62] = V66
0x127: V67 = 0x20
0x129: V68 = ADD 0x20 V62
0x12d: V69 = 0x40
0x12f: V70 = M[0x40]
0x132: V71 = SUB V68 V70
0x134: RETURN V70 V71
---
Entry stack: [V11, 0xf3, V163]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf3]

================================

Block 0x135
[0x135:0x152]
---
Predecessors: [0x57]
Successors: [0x2a8]
---
0x135 JUMPDEST
0x136 PUSH2 0x153
0x139 PUSH1 0x4
0x13b DUP1
0x13c CALLDATASIZE
0x13d SUB
0x13e DUP2
0x13f ADD
0x140 SWAP1
0x141 DUP1
0x142 DUP1
0x143 CALLDATALOAD
0x144 SWAP1
0x145 PUSH1 0x20
0x147 ADD
0x148 SWAP1
0x149 SWAP3
0x14a SWAP2
0x14b SWAP1
0x14c POP
0x14d POP
0x14e POP
0x14f PUSH2 0x2a8
0x152 JUMP
---
0x135: JUMPDEST 
0x136: V72 = 0x153
0x139: V73 = 0x4
0x13c: V74 = CALLDATASIZE
0x13d: V75 = SUB V74 0x4
0x13f: V76 = ADD 0x4 V75
0x143: V77 = CALLDATALOAD 0x4
0x145: V78 = 0x20
0x147: V79 = ADD 0x20 0x4
0x14f: V80 = 0x2a8
0x152: JUMP 0x2a8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x153, V77]
Exit stack: [V11, 0x153, V77]

================================

Block 0x153
[0x153:0x154]
---
Predecessors: [0x2a8]
Successors: []
---
0x153 JUMPDEST
0x154 STOP
---
0x153: JUMPDEST 
0x154: STOP 
---
Entry stack: [V11, 0xaf, V32, V35, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf, V32, V35, S0]

================================

Block 0x155
[0x155:0x1bf]
---
Predecessors: [0x67]
Successors: [0x1c0, 0x1c4]
---
0x155 JUMPDEST
0x156 DUP3
0x157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16c AND
0x16d PUSH4 0xd8ccd0f3
0x172 DUP4
0x173 PUSH1 0x40
0x175 MLOAD
0x176 DUP3
0x177 PUSH4 0xffffffff
0x17c AND
0x17d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x19b MUL
0x19c DUP2
0x19d MSTORE
0x19e PUSH1 0x4
0x1a0 ADD
0x1a1 DUP1
0x1a2 DUP3
0x1a3 DUP2
0x1a4 MSTORE
0x1a5 PUSH1 0x20
0x1a7 ADD
0x1a8 SWAP2
0x1a9 POP
0x1aa POP
0x1ab PUSH1 0x20
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 DUP4
0x1b2 SUB
0x1b3 DUP2
0x1b4 PUSH1 0x0
0x1b6 DUP8
0x1b7 DUP1
0x1b8 EXTCODESIZE
0x1b9 ISZERO
0x1ba DUP1
0x1bb ISZERO
0x1bc PUSH2 0x1c4
0x1bf JUMPI
---
0x155: JUMPDEST 
0x157: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x16d: V83 = 0xd8ccd0f3
0x173: V84 = 0x40
0x175: V85 = M[0x40]
0x177: V86 = 0xffffffff
0x17c: V87 = AND 0xffffffff 0xd8ccd0f3
0x17d: V88 = 0x100000000000000000000000000000000000000000000000000000000
0x19b: V89 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd8ccd0f3
0x19d: M[V85] = 0xd8ccd0f300000000000000000000000000000000000000000000000000000000
0x19e: V90 = 0x4
0x1a0: V91 = ADD 0x4 V85
0x1a4: M[V91] = V35
0x1a5: V92 = 0x20
0x1a7: V93 = ADD 0x20 V91
0x1ab: V94 = 0x20
0x1ad: V95 = 0x40
0x1af: V96 = M[0x40]
0x1b2: V97 = SUB V93 V96
0x1b4: V98 = 0x0
0x1b8: V99 = EXTCODESIZE V82
0x1b9: V100 = ISZERO V99
0x1bb: V101 = ISZERO V100
0x1bc: V102 = 0x1c4
0x1bf: JUMPI 0x1c4 V101
---
Entry stack: [V11, 0xaf, V32, V35, V38]
Stack pops: 3
Stack additions: [S2, S1, S0, V82, 0xd8ccd0f3, V93, 0x20, V96, V97, V96, 0x0, V82, V100]
Exit stack: [V11, 0xaf, V32, V35, V38, V82, 0xd8ccd0f3, V93, 0x20, V96, V97, V96, 0x0, V82, V100]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x155]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
---
0x1c0: V103 = 0x0
0x1c3: REVERT 0x0 0x0
---
Entry stack: [V11, 0xaf, V32, V35, V38, V82, 0xd8ccd0f3, V93, 0x20, V96, V97, V96, 0x0, V82, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf, V32, V35, V38, V82, 0xd8ccd0f3, V93, 0x20, V96, V97, V96, 0x0, V82, V100]

================================

Block 0x1c4
[0x1c4:0x1ce]
---
Predecessors: [0x155]
Successors: [0x1cf, 0x1d8]
---
0x1c4 JUMPDEST
0x1c5 POP
0x1c6 GAS
0x1c7 CALL
0x1c8 ISZERO
0x1c9 DUP1
0x1ca ISZERO
0x1cb PUSH2 0x1d8
0x1ce JUMPI
---
0x1c4: JUMPDEST 
0x1c6: V104 = GAS
0x1c7: V105 = CALL V104 V82 0x0 V96 V97 V96 0x20
0x1c8: V106 = ISZERO V105
0x1ca: V107 = ISZERO V106
0x1cb: V108 = 0x1d8
0x1ce: JUMPI 0x1d8 V107
---
Entry stack: [V11, 0xaf, V32, V35, V38, V82, 0xd8ccd0f3, V93, 0x20, V96, V97, V96, 0x0, V82, V100]
Stack pops: 7
Stack additions: [V106]
Exit stack: [V11, 0xaf, V32, V35, V38, V82, 0xd8ccd0f3, V93, V106]

================================

Block 0x1cf
[0x1cf:0x1d7]
---
Predecessors: [0x1c4]
Successors: []
---
0x1cf RETURNDATASIZE
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 RETURNDATACOPY
0x1d4 RETURNDATASIZE
0x1d5 PUSH1 0x0
0x1d7 REVERT
---
0x1cf: V109 = RETURNDATASIZE
0x1d0: V110 = 0x0
0x1d3: RETURNDATACOPY 0x0 0x0 V109
0x1d4: V111 = RETURNDATASIZE
0x1d5: V112 = 0x0
0x1d7: REVERT 0x0 V111
---
Entry stack: [V11, 0xaf, V32, V35, V38, V82, 0xd8ccd0f3, V93, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf, V32, V35, V38, V82, 0xd8ccd0f3, V93, V106]

================================

Block 0x1d8
[0x1d8:0x1e9]
---
Predecessors: [0x1c4]
Successors: [0x1ea, 0x1ee]
---
0x1d8 JUMPDEST
0x1d9 POP
0x1da POP
0x1db POP
0x1dc POP
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 RETURNDATASIZE
0x1e1 PUSH1 0x20
0x1e3 DUP2
0x1e4 LT
0x1e5 ISZERO
0x1e6 PUSH2 0x1ee
0x1e9 JUMPI
---
0x1d8: JUMPDEST 
0x1dd: V113 = 0x40
0x1df: V114 = M[0x40]
0x1e0: V115 = RETURNDATASIZE
0x1e1: V116 = 0x20
0x1e4: V117 = LT V115 0x20
0x1e5: V118 = ISZERO V117
0x1e6: V119 = 0x1ee
0x1e9: JUMPI 0x1ee V118
---
Entry stack: [V11, 0xaf, V32, V35, V38, V82, 0xd8ccd0f3, V93, V106]
Stack pops: 4
Stack additions: [V114, V115]
Exit stack: [V11, 0xaf, V32, V35, V38, V114, V115]

================================

Block 0x1ea
[0x1ea:0x1ed]
---
Predecessors: [0x1d8]
Successors: []
---
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed REVERT
---
0x1ea: V120 = 0x0
0x1ed: REVERT 0x0 0x0
---
Entry stack: [V11, 0xaf, V32, V35, V38, V114, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf, V32, V35, V38, V114, V115]

================================

Block 0x1ee
[0x1ee:0x205]
---
Predecessors: [0x1d8]
Successors: [0x206, 0x20a]
---
0x1ee JUMPDEST
0x1ef DUP2
0x1f0 ADD
0x1f1 SWAP1
0x1f2 DUP1
0x1f3 DUP1
0x1f4 MLOAD
0x1f5 SWAP1
0x1f6 PUSH1 0x20
0x1f8 ADD
0x1f9 SWAP1
0x1fa SWAP3
0x1fb SWAP2
0x1fc SWAP1
0x1fd POP
0x1fe POP
0x1ff POP
0x200 ISZERO
0x201 ISZERO
0x202 PUSH2 0x20a
0x205 JUMPI
---
0x1ee: JUMPDEST 
0x1f0: V121 = ADD V114 V115
0x1f4: V122 = M[V114]
0x1f6: V123 = 0x20
0x1f8: V124 = ADD 0x20 V114
0x200: V125 = ISZERO V122
0x201: V126 = ISZERO V125
0x202: V127 = 0x20a
0x205: JUMPI 0x20a V126
---
Entry stack: [V11, 0xaf, V32, V35, V38, V114, V115]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xaf, V32, V35, V38]

================================

Block 0x206
[0x206:0x209]
---
Predecessors: [0x1ee]
Successors: []
---
0x206 PUSH1 0x0
0x208 DUP1
0x209 REVERT
---
0x206: V128 = 0x0
0x209: REVERT 0x0 0x0
---
Entry stack: [V11, 0xaf, V32, V35, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf, V32, V35, V38]

================================

Block 0x20a
[0x20a:0x212]
---
Predecessors: [0x1ee]
Successors: [0x2a8]
---
0x20a JUMPDEST
0x20b PUSH2 0x213
0x20e DUP2
0x20f PUSH2 0x2a8
0x212 JUMP
---
0x20a: JUMPDEST 
0x20b: V129 = 0x213
0x20f: V130 = 0x2a8
0x212: JUMP 0x2a8
---
Entry stack: [V11, 0xaf, V32, V35, V38]
Stack pops: 1
Stack additions: [S0, 0x213, S0]
Exit stack: [V11, 0xaf, V32, V35, V38, 0x213, V38]

================================

Block 0x213
[0x213:0x217]
---
Predecessors: [0x2a8]
Successors: [0xaf]
---
0x213 JUMPDEST
0x214 POP
0x215 POP
0x216 POP
0x217 JUMP
---
0x213: JUMPDEST 
0x217: JUMP 0xaf
---
Entry stack: [V11, 0xaf, V32, V35, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x218
[0x218:0x275]
---
Predecessors: [0xbd]
Successors: [0x276, 0x27f]
---
0x218 JUMPDEST
0x219 PUSH1 0x0
0x21b DUP1
0x21c SWAP1
0x21d SLOAD
0x21e SWAP1
0x21f PUSH2 0x100
0x222 EXP
0x223 SWAP1
0x224 DIV
0x225 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23a AND
0x23b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x250 AND
0x251 PUSH2 0x8fc
0x254 DUP3
0x255 SWAP1
0x256 DUP2
0x257 ISZERO
0x258 MUL
0x259 SWAP1
0x25a PUSH1 0x40
0x25c MLOAD
0x25d PUSH1 0x0
0x25f PUSH1 0x40
0x261 MLOAD
0x262 DUP1
0x263 DUP4
0x264 SUB
0x265 DUP2
0x266 DUP6
0x267 DUP9
0x268 DUP9
0x269 CALL
0x26a SWAP4
0x26b POP
0x26c POP
0x26d POP
0x26e POP
0x26f ISZERO
0x270 DUP1
0x271 ISZERO
0x272 PUSH2 0x27f
0x275 JUMPI
---
0x218: JUMPDEST 
0x219: V131 = 0x0
0x21d: V132 = S[0x0]
0x21f: V133 = 0x100
0x222: V134 = EXP 0x100 0x0
0x224: V135 = DIV V132 0x1
0x225: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x23a: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x23b: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x250: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x251: V140 = 0x8fc
0x257: V141 = ISZERO V51
0x258: V142 = MUL V141 0x8fc
0x25a: V143 = 0x40
0x25c: V144 = M[0x40]
0x25d: V145 = 0x0
0x25f: V146 = 0x40
0x261: V147 = M[0x40]
0x264: V148 = SUB V144 V147
0x269: V149 = CALL V142 V139 V51 V147 V148 V147 0x0
0x26f: V150 = ISZERO V149
0x271: V151 = ISZERO V150
0x272: V152 = 0x27f
0x275: JUMPI 0x27f V151
---
Entry stack: [V11, 0xdc, V51]
Stack pops: 1
Stack additions: [S0, V150]
Exit stack: [V11, 0xdc, V51, V150]

================================

Block 0x276
[0x276:0x27e]
---
Predecessors: [0x218]
Successors: []
---
0x276 RETURNDATASIZE
0x277 PUSH1 0x0
0x279 DUP1
0x27a RETURNDATACOPY
0x27b RETURNDATASIZE
0x27c PUSH1 0x0
0x27e REVERT
---
0x276: V153 = RETURNDATASIZE
0x277: V154 = 0x0
0x27a: RETURNDATACOPY 0x0 0x0 V153
0x27b: V155 = RETURNDATASIZE
0x27c: V156 = 0x0
0x27e: REVERT 0x0 V155
---
Entry stack: [V11, 0xdc, V51, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdc, V51, V150]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x218]
Successors: [0xdc]
---
0x27f JUMPDEST
0x280 POP
0x281 POP
0x282 JUMP
---
0x27f: JUMPDEST 
0x282: JUMP 0xdc
---
Entry stack: [V11, 0xdc, V51, V150]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x283
[0x283:0x2a7]
---
Predecessors: [0xea]
Successors: [0xf3]
---
0x283 JUMPDEST
0x284 PUSH1 0x0
0x286 DUP1
0x287 SWAP1
0x288 SLOAD
0x289 SWAP1
0x28a PUSH2 0x100
0x28d EXP
0x28e SWAP1
0x28f DIV
0x290 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a5 AND
0x2a6 DUP2
0x2a7 JUMP
---
0x283: JUMPDEST 
0x284: V157 = 0x0
0x288: V158 = S[0x0]
0x28a: V159 = 0x100
0x28d: V160 = EXP 0x100 0x0
0x28f: V161 = DIV V158 0x1
0x290: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x2a7: JUMP 0xf3
---
Entry stack: [V11, 0xf3]
Stack pops: 1
Stack additions: [S0, V163]
Exit stack: [V11, 0xf3, V163]

================================

Block 0x2a8
[0x2a8:0x33a]
---
Predecessors: [0x135, 0x20a]
Successors: [0x153, 0x213]
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x1
0x2ab PUSH1 0x0
0x2ad SWAP1
0x2ae SLOAD
0x2af SWAP1
0x2b0 PUSH2 0x100
0x2b3 EXP
0x2b4 SWAP1
0x2b5 DIV
0x2b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cb AND
0x2cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e1 AND
0x2e2 DUP2
0x2e3 PUSH4 0xa15d575b
0x2e8 SWAP1
0x2e9 PUSH1 0x0
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee DUP4
0x2ef PUSH4 0xffffffff
0x2f4 AND
0x2f5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x313 MUL
0x314 DUP2
0x315 MSTORE
0x316 PUSH1 0x4
0x318 ADD
0x319 DUP1
0x31a DUP3
0x31b PUSH1 0xff
0x31d AND
0x31e DUP2
0x31f MSTORE
0x320 PUSH1 0x20
0x322 ADD
0x323 SWAP2
0x324 POP
0x325 POP
0x326 PUSH1 0x0
0x328 PUSH1 0x40
0x32a MLOAD
0x32b DUP1
0x32c DUP4
0x32d SUB
0x32e DUP2
0x32f DUP6
0x330 DUP9
0x331 GAS
0x332 CALL
0x333 SWAP4
0x334 POP
0x335 POP
0x336 POP
0x337 POP
0x338 POP
0x339 POP
0x33a JUMP
---
0x2a8: JUMPDEST 
0x2a9: V164 = 0x1
0x2ab: V165 = 0x0
0x2ae: V166 = S[0x1]
0x2b0: V167 = 0x100
0x2b3: V168 = EXP 0x100 0x0
0x2b5: V169 = DIV V166 0x1
0x2b6: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cb: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2cc: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e1: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x2e3: V174 = 0xa15d575b
0x2e9: V175 = 0x0
0x2eb: V176 = 0x40
0x2ed: V177 = M[0x40]
0x2ef: V178 = 0xffffffff
0x2f4: V179 = AND 0xffffffff 0xa15d575b
0x2f5: V180 = 0x100000000000000000000000000000000000000000000000000000000
0x313: V181 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa15d575b
0x315: M[V177] = 0xa15d575b00000000000000000000000000000000000000000000000000000000
0x316: V182 = 0x4
0x318: V183 = ADD 0x4 V177
0x31b: V184 = 0xff
0x31d: V185 = AND 0xff 0x0
0x31f: M[V183] = 0x0
0x320: V186 = 0x20
0x322: V187 = ADD 0x20 V183
0x326: V188 = 0x0
0x328: V189 = 0x40
0x32a: V190 = M[0x40]
0x32d: V191 = SUB V187 V190
0x331: V192 = GAS
0x332: V193 = CALL V192 V173 S0 V190 V191 V190 0x0
0x33a: JUMP {0x153, 0x213}
---
Entry stack: [V11, 0xaf, V32, V35, S2, {0x153, 0x213}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xaf, V32, V35, S2]

================================

Block 0x33b
[0x33b:0x377]
---
Predecessors: []
Successors: []
---
0x33b STOP
0x33c LOG1
0x33d PUSH6 0x627a7a723058
0x344 SHA3
0x345 CALLDATASIZE
0x346 PUSH14 0x15eeffddcd9df9c8d6d5d2bd0649
0x355 MISSING 0xd1
0x356 MISSING 0x5c
0x357 MISSING 0xec
0x358 CALLVALUE
0x359 PUSH30 0xa043e4ac7c85bacc210ad80029
---
0x33b: STOP 
0x33c: LOG S0 S1 S2
0x33d: V194 = 0x627a7a723058
0x344: V195 = SHA3 0x627a7a723058 S3
0x345: V196 = CALLDATASIZE
0x346: V197 = 0x15eeffddcd9df9c8d6d5d2bd0649
0x355: MISSING 0xd1
0x356: MISSING 0x5c
0x357: MISSING 0xec
0x358: V198 = CALLVALUE
0x359: V199 = 0xa043e4ac7c85bacc210ad80029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x15eeffddcd9df9c8d6d5d2bd0649, V196, V195, 0xa043e4ac7c85bacc210ad80029, V198]
Exit stack: []

================================

Function 0:
Public function signature: 0x1e569a9
Entry block: 0x67
Exit block: 0xaf
Body: 0x67, 0xaf, 0x155, 0x1c0, 0x1c4, 0x1cf, 0x1d8, 0x1ea, 0x1ee, 0x206, 0x20a, 0x213

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0xb1
Exit block: 0xdc
Body: 0xb1, 0xb9, 0xbd, 0xdc, 0x218, 0x276, 0x27f

Function 2:
Public function signature: 0xca4b208b
Entry block: 0xde
Exit block: 0xf3
Body: 0xde, 0xe6, 0xea, 0xf3, 0x283

Function 3:
Public function signature: 0xfe0d94c1
Entry block: 0x135
Exit block: 0x153
Body: 0x135, 0x153

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

