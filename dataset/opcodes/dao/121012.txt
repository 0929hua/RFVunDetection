Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x47]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x12065fe0
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x47
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x12065fe0
0x14: V9 = EQ V7 0x12065fe0
0x15: V10 = 0x47
0x18: JUMPI 0x47 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x68]
---
0x19 DUP1
0x1a PUSH4 0x2f364213
0x1f EQ
0x20 PUSH2 0x68
0x23 JUMPI
---
0x1a: V11 = 0x2f364213
0x1f: V12 = EQ 0x2f364213 V7
0x20: V13 = 0x68
0x23: JUMPI 0x68 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0x19]
Successors: [0x2f, 0x151]
---
0x24 DUP1
0x25 PUSH4 0xb163cc38
0x2a EQ
0x2b PUSH2 0x151
0x2e JUMPI
---
0x25: V14 = 0xb163cc38
0x2a: V15 = EQ 0xb163cc38 V7
0x2b: V16 = 0x151
0x2e: JUMPI 0x151 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0x174]
---
0x2f DUP1
0x30 PUSH4 0xcd3228eb
0x35 EQ
0x36 PUSH2 0x174
0x39 JUMPI
---
0x30: V17 = 0xcd3228eb
0x35: V18 = EQ 0xcd3228eb V7
0x36: V19 = 0x174
0x39: JUMPI 0x174 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0x2f]
Successors: [0x45, 0x25d]
---
0x3a DUP1
0x3b PUSH4 0xe8cc00ad
0x40 EQ
0x41 PUSH2 0x25d
0x44 JUMPI
---
0x3b: V20 = 0xe8cc00ad
0x40: V21 = EQ 0xe8cc00ad V7
0x41: V22 = 0x25d
0x44: JUMPI 0x25d V21
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x45
[0x45:0x46]
---
Predecessors: [0x3a, 0x14f, 0x151, 0x197, 0x27b]
Successors: []
---
0x45 JUMPDEST
0x46 STOP
---
0x45: JUMPDEST 
0x46: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x47
[0x47:0x67]
---
Predecessors: [0x0]
Successors: []
---
0x47 JUMPDEST
0x48 PUSH1 0x1
0x4a PUSH1 0xa0
0x4c PUSH1 0x2
0x4e EXP
0x4f SUB
0x50 CALLER
0x51 AND
0x52 PUSH1 0x0
0x54 SWAP1
0x55 DUP2
0x56 MSTORE
0x57 PUSH1 0x20
0x59 DUP2
0x5a DUP2
0x5b MSTORE
0x5c PUSH1 0x40
0x5e SWAP1
0x5f SWAP2
0x60 SHA3
0x61 SLOAD
0x62 PUSH1 0x60
0x64 SWAP1
0x65 DUP2
0x66 MSTORE
0x67 RETURN
---
0x47: JUMPDEST 
0x48: V23 = 0x1
0x4a: V24 = 0xa0
0x4c: V25 = 0x2
0x4e: V26 = EXP 0x2 0xa0
0x4f: V27 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50: V28 = CALLER
0x51: V29 = AND V28 0xffffffffffffffffffffffffffffffffffffffff
0x52: V30 = 0x0
0x56: M[0x0] = V29
0x57: V31 = 0x20
0x5b: M[0x20] = 0x0
0x5c: V32 = 0x40
0x60: V33 = SHA3 0x0 0x40
0x61: V34 = S[V33]
0x62: V35 = 0x60
0x66: M[0x60] = V34
0x67: RETURN 0x60 0x20
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x68
[0x68:0x8a]
---
Predecessors: [0x19]
Successors: [0x8b, 0x14f]
---
0x68 JUMPDEST
0x69 PUSH2 0x45
0x6c CALLER
0x6d PUSH1 0x1
0x6f PUSH1 0xa0
0x71 PUSH1 0x2
0x73 EXP
0x74 SUB
0x75 AND
0x76 PUSH1 0x0
0x78 SWAP1
0x79 DUP2
0x7a MSTORE
0x7b PUSH1 0x20
0x7d DUP2
0x7e SWAP1
0x7f MSTORE
0x80 PUSH1 0x40
0x82 DUP2
0x83 SHA3
0x84 SLOAD
0x85 GT
0x86 ISZERO
0x87 PUSH2 0x14f
0x8a JUMPI
---
0x68: JUMPDEST 
0x69: V36 = 0x45
0x6c: V37 = CALLER
0x6d: V38 = 0x1
0x6f: V39 = 0xa0
0x71: V40 = 0x2
0x73: V41 = EXP 0x2 0xa0
0x74: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x76: V44 = 0x0
0x7a: M[0x0] = V43
0x7b: V45 = 0x20
0x7f: M[0x20] = 0x0
0x80: V46 = 0x40
0x83: V47 = SHA3 0x0 0x40
0x84: V48 = S[V47]
0x85: V49 = GT V48 0x0
0x86: V50 = ISZERO V49
0x87: V51 = 0x14f
0x8a: JUMPI 0x14f V50
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x45]
Exit stack: [V7, 0x45]

================================

Block 0x8b
[0x8b:0x14e]
---
Predecessors: [0x68]
Successors: [0x14f]
---
0x8b PUSH1 0x20
0x8d PUSH1 0x60
0x8f SWAP1
0x90 DUP2
0x91 MSTORE
0x92 PUSH1 0x19
0x94 PUSH1 0x80
0x96 MSTORE
0x97 PUSH32 0x57697468647261772043616c6c656420576974682053656e6400000000000000
0xb8 PUSH1 0xa0
0xba MSTORE
0xbb PUSH32 0x79941d9e35be42850c8a3c8ba8ab5f793ef8fa44d6c6a936f6bb686f0c37ab85
0xdc SWAP1
0xdd DUP1
0xde LOG1
0xdf CALLER
0xe0 PUSH1 0x1
0xe2 PUSH1 0xa0
0xe4 PUSH1 0x2
0xe6 EXP
0xe7 SUB
0xe8 AND
0xe9 PUSH1 0x0
0xeb PUSH1 0x0
0xed PUSH1 0x0
0xef POP
0xf0 PUSH1 0x0
0xf2 CALLER
0xf3 PUSH1 0x1
0xf5 PUSH1 0xa0
0xf7 PUSH1 0x2
0xf9 EXP
0xfa SUB
0xfb AND
0xfc DUP2
0xfd MSTORE
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP1
0x102 DUP2
0x103 MSTORE
0x104 PUSH1 0x20
0x106 ADD
0x107 PUSH1 0x0
0x109 SHA3
0x10a PUSH1 0x0
0x10c POP
0x10d SLOAD
0x10e PUSH1 0x40
0x110 MLOAD
0x111 DUP1
0x112 SWAP1
0x113 POP
0x114 PUSH1 0x0
0x116 PUSH1 0x40
0x118 MLOAD
0x119 DUP1
0x11a DUP4
0x11b SUB
0x11c DUP2
0x11d DUP6
0x11e DUP9
0x11f DUP9
0x120 CALL
0x121 SWAP4
0x122 POP
0x123 POP
0x124 POP
0x125 POP
0x126 POP
0x127 PUSH1 0x0
0x129 PUSH1 0x0
0x12b PUSH1 0x0
0x12d POP
0x12e PUSH1 0x0
0x130 CALLER
0x131 PUSH1 0x1
0x133 PUSH1 0xa0
0x135 PUSH1 0x2
0x137 EXP
0x138 SUB
0x139 AND
0x13a DUP2
0x13b MSTORE
0x13c PUSH1 0x20
0x13e ADD
0x13f SWAP1
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 ADD
0x145 PUSH1 0x0
0x147 SHA3
0x148 PUSH1 0x0
0x14a POP
0x14b DUP2
0x14c SWAP1
0x14d SSTORE
0x14e POP
---
0x8b: V52 = 0x20
0x8d: V53 = 0x60
0x91: M[0x60] = 0x20
0x92: V54 = 0x19
0x94: V55 = 0x80
0x96: M[0x80] = 0x19
0x97: V56 = 0x57697468647261772043616c6c656420576974682053656e6400000000000000
0xb8: V57 = 0xa0
0xba: M[0xa0] = 0x57697468647261772043616c6c656420576974682053656e6400000000000000
0xbb: V58 = 0x79941d9e35be42850c8a3c8ba8ab5f793ef8fa44d6c6a936f6bb686f0c37ab85
0xde: LOG 0x60 0x60 0x79941d9e35be42850c8a3c8ba8ab5f793ef8fa44d6c6a936f6bb686f0c37ab85
0xdf: V59 = CALLER
0xe0: V60 = 0x1
0xe2: V61 = 0xa0
0xe4: V62 = 0x2
0xe6: V63 = EXP 0x2 0xa0
0xe7: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe8: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xe9: V66 = 0x0
0xeb: V67 = 0x0
0xed: V68 = 0x0
0xf0: V69 = 0x0
0xf2: V70 = CALLER
0xf3: V71 = 0x1
0xf5: V72 = 0xa0
0xf7: V73 = 0x2
0xf9: V74 = EXP 0x2 0xa0
0xfa: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0xfd: M[0x0] = V76
0xfe: V77 = 0x20
0x100: V78 = ADD 0x20 0x0
0x103: M[0x20] = 0x0
0x104: V79 = 0x20
0x106: V80 = ADD 0x20 0x20
0x107: V81 = 0x0
0x109: V82 = SHA3 0x0 0x40
0x10a: V83 = 0x0
0x10d: V84 = S[V82]
0x10e: V85 = 0x40
0x110: V86 = M[0x40]
0x114: V87 = 0x0
0x116: V88 = 0x40
0x118: V89 = M[0x40]
0x11b: V90 = SUB V86 V89
0x120: V91 = CALL 0x0 V65 V84 V89 V90 V89 0x0
0x127: V92 = 0x0
0x129: V93 = 0x0
0x12b: V94 = 0x0
0x12e: V95 = 0x0
0x130: V96 = CALLER
0x131: V97 = 0x1
0x133: V98 = 0xa0
0x135: V99 = 0x2
0x137: V100 = EXP 0x2 0xa0
0x138: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x13b: M[0x0] = V102
0x13c: V103 = 0x20
0x13e: V104 = ADD 0x20 0x0
0x141: M[0x20] = 0x0
0x142: V105 = 0x20
0x144: V106 = ADD 0x20 0x20
0x145: V107 = 0x0
0x147: V108 = SHA3 0x0 0x40
0x148: V109 = 0x0
0x14d: S[V108] = 0x0
---
Entry stack: [V7, 0x45]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45]

================================

Block 0x14f
[0x14f:0x150]
---
Predecessors: [0x68, 0x8b, 0x174, 0x277]
Successors: [0x45]
---
0x14f JUMPDEST
0x150 JUMP
---
0x14f: JUMPDEST 
0x150: JUMP 0x45
---
Entry stack: [V7, 0x45]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x151
[0x151:0x173]
---
Predecessors: [0x24]
Successors: [0x45]
---
0x151 JUMPDEST
0x152 PUSH2 0x45
0x155 CALLER
0x156 PUSH1 0x1
0x158 PUSH1 0xa0
0x15a PUSH1 0x2
0x15c EXP
0x15d SUB
0x15e AND
0x15f PUSH1 0x0
0x161 SWAP1
0x162 DUP2
0x163 MSTORE
0x164 PUSH1 0x20
0x166 DUP2
0x167 SWAP1
0x168 MSTORE
0x169 PUSH1 0x40
0x16b SWAP1
0x16c SHA3
0x16d DUP1
0x16e SLOAD
0x16f CALLVALUE
0x170 ADD
0x171 SWAP1
0x172 SSTORE
0x173 JUMP
---
0x151: JUMPDEST 
0x152: V110 = 0x45
0x155: V111 = CALLER
0x156: V112 = 0x1
0x158: V113 = 0xa0
0x15a: V114 = 0x2
0x15c: V115 = EXP 0x2 0xa0
0x15d: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15e: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x15f: V118 = 0x0
0x163: M[0x0] = V117
0x164: V119 = 0x20
0x168: M[0x20] = 0x0
0x169: V120 = 0x40
0x16c: V121 = SHA3 0x0 0x40
0x16e: V122 = S[V121]
0x16f: V123 = CALLVALUE
0x170: V124 = ADD V123 V122
0x172: S[V121] = V124
0x173: JUMP 0x45
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x174
[0x174:0x196]
---
Predecessors: [0x2f]
Successors: [0x14f, 0x197]
---
0x174 JUMPDEST
0x175 PUSH2 0x45
0x178 CALLER
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 AND
0x182 PUSH1 0x0
0x184 SWAP1
0x185 DUP2
0x186 MSTORE
0x187 PUSH1 0x20
0x189 DUP2
0x18a SWAP1
0x18b MSTORE
0x18c PUSH1 0x40
0x18e DUP2
0x18f SHA3
0x190 SLOAD
0x191 GT
0x192 ISZERO
0x193 PUSH2 0x14f
0x196 JUMPI
---
0x174: JUMPDEST 
0x175: V125 = 0x45
0x178: V126 = CALLER
0x179: V127 = 0x1
0x17b: V128 = 0xa0
0x17d: V129 = 0x2
0x17f: V130 = EXP 0x2 0xa0
0x180: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x182: V133 = 0x0
0x186: M[0x0] = V132
0x187: V134 = 0x20
0x18b: M[0x20] = 0x0
0x18c: V135 = 0x40
0x18f: V136 = SHA3 0x0 0x40
0x190: V137 = S[V136]
0x191: V138 = GT V137 0x0
0x192: V139 = ISZERO V138
0x193: V140 = 0x14f
0x196: JUMPI 0x14f V139
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x45]
Exit stack: [V7, 0x45]

================================

Block 0x197
[0x197:0x25c]
---
Predecessors: [0x174]
Successors: [0x45]
---
0x197 PUSH1 0x20
0x199 PUSH1 0x60
0x19b SWAP1
0x19c DUP2
0x19d MSTORE
0x19e PUSH1 0x1a
0x1a0 PUSH1 0x80
0x1a2 MSTORE
0x1a3 PUSH32 0x57697468647261772043616c6c6564205573696e672043616c6c000000000000
0x1c4 PUSH1 0xa0
0x1c6 MSTORE
0x1c7 PUSH32 0x79941d9e35be42850c8a3c8ba8ab5f793ef8fa44d6c6a936f6bb686f0c37ab85
0x1e8 SWAP1
0x1e9 DUP1
0x1ea LOG1
0x1eb CALLER
0x1ec PUSH1 0x1
0x1ee PUSH1 0xa0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 SUB
0x1f4 AND
0x1f5 PUSH1 0x0
0x1f7 PUSH1 0x0
0x1f9 POP
0x1fa PUSH1 0x0
0x1fc CALLER
0x1fd PUSH1 0x1
0x1ff PUSH1 0xa0
0x201 PUSH1 0x2
0x203 EXP
0x204 SUB
0x205 AND
0x206 DUP2
0x207 MSTORE
0x208 PUSH1 0x20
0x20a ADD
0x20b SWAP1
0x20c DUP2
0x20d MSTORE
0x20e PUSH1 0x20
0x210 ADD
0x211 PUSH1 0x0
0x213 SHA3
0x214 PUSH1 0x0
0x216 POP
0x217 SLOAD
0x218 PUSH1 0x40
0x21a MLOAD
0x21b DUP1
0x21c SWAP1
0x21d POP
0x21e PUSH1 0x0
0x220 PUSH1 0x40
0x222 MLOAD
0x223 DUP1
0x224 DUP4
0x225 SUB
0x226 DUP2
0x227 DUP6
0x228 DUP8
0x229 PUSH2 0x8502
0x22c GAS
0x22d SUB
0x22e CALL
0x22f SWAP3
0x230 POP
0x231 POP
0x232 POP
0x233 POP
0x234 PUSH1 0x0
0x236 PUSH1 0x0
0x238 PUSH1 0x0
0x23a POP
0x23b PUSH1 0x0
0x23d CALLER
0x23e PUSH1 0x1
0x240 PUSH1 0xa0
0x242 PUSH1 0x2
0x244 EXP
0x245 SUB
0x246 AND
0x247 DUP2
0x248 MSTORE
0x249 PUSH1 0x20
0x24b ADD
0x24c SWAP1
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x20
0x251 ADD
0x252 PUSH1 0x0
0x254 SHA3
0x255 PUSH1 0x0
0x257 POP
0x258 DUP2
0x259 SWAP1
0x25a SSTORE
0x25b POP
0x25c JUMP
---
0x197: V141 = 0x20
0x199: V142 = 0x60
0x19d: M[0x60] = 0x20
0x19e: V143 = 0x1a
0x1a0: V144 = 0x80
0x1a2: M[0x80] = 0x1a
0x1a3: V145 = 0x57697468647261772043616c6c6564205573696e672043616c6c000000000000
0x1c4: V146 = 0xa0
0x1c6: M[0xa0] = 0x57697468647261772043616c6c6564205573696e672043616c6c000000000000
0x1c7: V147 = 0x79941d9e35be42850c8a3c8ba8ab5f793ef8fa44d6c6a936f6bb686f0c37ab85
0x1ea: LOG 0x60 0x60 0x79941d9e35be42850c8a3c8ba8ab5f793ef8fa44d6c6a936f6bb686f0c37ab85
0x1eb: V148 = CALLER
0x1ec: V149 = 0x1
0x1ee: V150 = 0xa0
0x1f0: V151 = 0x2
0x1f2: V152 = EXP 0x2 0xa0
0x1f3: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f4: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x1f5: V155 = 0x0
0x1f7: V156 = 0x0
0x1fa: V157 = 0x0
0x1fc: V158 = CALLER
0x1fd: V159 = 0x1
0x1ff: V160 = 0xa0
0x201: V161 = 0x2
0x203: V162 = EXP 0x2 0xa0
0x204: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x205: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x207: M[0x0] = V164
0x208: V165 = 0x20
0x20a: V166 = ADD 0x20 0x0
0x20d: M[0x20] = 0x0
0x20e: V167 = 0x20
0x210: V168 = ADD 0x20 0x20
0x211: V169 = 0x0
0x213: V170 = SHA3 0x0 0x40
0x214: V171 = 0x0
0x217: V172 = S[V170]
0x218: V173 = 0x40
0x21a: V174 = M[0x40]
0x21e: V175 = 0x0
0x220: V176 = 0x40
0x222: V177 = M[0x40]
0x225: V178 = SUB V174 V177
0x229: V179 = 0x8502
0x22c: V180 = GAS
0x22d: V181 = SUB V180 0x8502
0x22e: V182 = CALL V181 V154 V172 V177 V178 V177 0x0
0x234: V183 = 0x0
0x236: V184 = 0x0
0x238: V185 = 0x0
0x23b: V186 = 0x0
0x23d: V187 = CALLER
0x23e: V188 = 0x1
0x240: V189 = 0xa0
0x242: V190 = 0x2
0x244: V191 = EXP 0x2 0xa0
0x245: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x246: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x248: M[0x0] = V193
0x249: V194 = 0x20
0x24b: V195 = ADD 0x20 0x0
0x24e: M[0x20] = 0x0
0x24f: V196 = 0x20
0x251: V197 = ADD 0x20 0x20
0x252: V198 = 0x0
0x254: V199 = SHA3 0x0 0x40
0x255: V200 = 0x0
0x25a: S[V199] = 0x0
0x25c: JUMP 0x45
---
Entry stack: [V7, 0x45]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x25d
[0x25d:0x276]
---
Predecessors: [0x3a]
Successors: [0x277, 0x27b]
---
0x25d JUMPDEST
0x25e PUSH2 0x45
0x261 PUSH1 0x1
0x263 SLOAD
0x264 CALLER
0x265 PUSH1 0x1
0x267 PUSH1 0xa0
0x269 PUSH1 0x2
0x26b EXP
0x26c SUB
0x26d SWAP1
0x26e DUP2
0x26f AND
0x270 SWAP2
0x271 AND
0x272 EQ
0x273 PUSH2 0x27b
0x276 JUMPI
---
0x25d: JUMPDEST 
0x25e: V201 = 0x45
0x261: V202 = 0x1
0x263: V203 = S[0x1]
0x264: V204 = CALLER
0x265: V205 = 0x1
0x267: V206 = 0xa0
0x269: V207 = 0x2
0x26b: V208 = EXP 0x2 0xa0
0x26c: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26f: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x271: V211 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x272: V212 = EQ V211 V210
0x273: V213 = 0x27b
0x276: JUMPI 0x27b V212
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x45]
Exit stack: [V7, 0x45]

================================

Block 0x277
[0x277:0x27a]
---
Predecessors: [0x25d]
Successors: [0x14f]
---
0x277 PUSH2 0x14f
0x27a JUMP
---
0x277: V214 = 0x14f
0x27a: JUMP 0x14f
---
Entry stack: [V7, 0x45]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45]

================================

Block 0x27b
[0x27b:0x29d]
---
Predecessors: [0x25d]
Successors: [0x45]
---
0x27b JUMPDEST
0x27c PUSH1 0x1
0x27e PUSH1 0xa0
0x280 PUSH1 0x2
0x282 EXP
0x283 SUB
0x284 CALLER
0x285 DUP2
0x286 AND
0x287 SWAP1
0x288 PUSH1 0x0
0x28a SWAP1
0x28b ADDRESS
0x28c AND
0x28d BALANCE
0x28e PUSH1 0x60
0x290 DUP3
0x291 DUP2
0x292 DUP2
0x293 DUP2
0x294 DUP6
0x295 DUP9
0x296 DUP4
0x297 CALL
0x298 POP
0x299 POP
0x29a POP
0x29b POP
0x29c POP
0x29d JUMP
---
0x27b: JUMPDEST 
0x27c: V215 = 0x1
0x27e: V216 = 0xa0
0x280: V217 = 0x2
0x282: V218 = EXP 0x2 0xa0
0x283: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V220 = CALLER
0x286: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x288: V222 = 0x0
0x28b: V223 = ADDRESS
0x28c: V224 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V225 = BALANCE V224
0x28e: V226 = 0x60
0x297: V227 = CALL 0x0 V221 V225 0x60 0x0 0x60 0x0
0x29d: JUMP 0x45
---
Entry stack: [V7, 0x45]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0x47
Exit block: 0x47
Body: 0x47

Function 1:
Public function signature: 0x2f364213
Entry block: 0x68
Exit block: 0x45
Body: 0x45, 0x68, 0x8b, 0x14f

Function 2:
Public function signature: 0xb163cc38
Entry block: 0x151
Exit block: 0x45
Body: 0x45, 0x151

Function 3:
Public function signature: 0xcd3228eb
Entry block: 0x174
Exit block: 0x45
Body: 0x45, 0x14f, 0x174, 0x197

Function 4:
Public function signature: 0xe8cc00ad
Entry block: 0x25d
Exit block: 0x45
Body: 0x45, 0x14f, 0x25d, 0x277, 0x27b

Function 5:
Public fallback function
Entry block: 0x45
Exit block: 0x45
Body: 0x45

