Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3f
0xa: JUMPI 0x3f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x1fb]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0xc96cd46f
0x3a EQ
0x3b PUSH2 0x1fb
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0xc96cd46f
0x3a: V12 = EQ 0xc96cd46f V10
0x3b: V13 = 0x1fb
0x3e: JUMPI 0x1fb V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x42]
---
Predecessors: [0x0, 0xb]
Successors: [0x43]
---
0x3f JUMPDEST
0x40 PUSH2 0x1f9
---
0x3f: JUMPDEST 
0x40: V14 = 0x1f9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V10, 0x1f9]

================================

Block 0x43
[0x43:0x1e1]
---
Predecessors: [0x3f]
Successors: [0x1e2, 0x1e3]
---
0x43 JUMPDEST
0x44 PUSH1 0x0
0x46 CALLER
0x47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c AND
0x5d PUSH1 0x1
0x5f MUL
0x60 CALLER
0x61 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76 AND
0x77 PUSH1 0x1
0x79 MUL
0x7a XOR
0x7b PUSH1 0x40
0x7d MLOAD
0x7e DUP1
0x7f DUP3
0x80 PUSH1 0x0
0x82 NOT
0x83 AND
0x84 PUSH1 0x0
0x86 NOT
0x87 AND
0x88 DUP2
0x89 MSTORE
0x8a PUSH1 0x20
0x8c ADD
0x8d SWAP2
0x8e POP
0x8f POP
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 SWAP2
0x95 SUB
0x96 SWAP1
0x97 SHA3
0x98 SWAP1
0x99 POP
0x9a PUSH1 0x1
0x9c PUSH1 0x0
0x9e SWAP1
0x9f SLOAD
0xa0 SWAP1
0xa1 PUSH2 0x100
0xa4 EXP
0xa5 SWAP1
0xa6 DIV
0xa7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc AND
0xbd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd2 AND
0xd3 PUSH4 0x1c9981f8
0xd8 ADDRESS
0xd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee AND
0xef BALANCE
0xf0 CALLER
0xf1 CALLER
0xf2 DUP6
0xf3 PUSH1 0x40
0xf5 MLOAD
0xf6 DUP6
0xf7 PUSH4 0xffffffff
0xfc AND
0xfd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11b MUL
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x4
0x120 ADD
0x121 DUP1
0x122 DUP5
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e AND
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 ADD
0x154 DUP4
0x155 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16a AND
0x16b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x180 AND
0x181 DUP2
0x182 MSTORE
0x183 PUSH1 0x20
0x185 ADD
0x186 DUP3
0x187 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1a4 NOT
0x1a5 AND
0x1a6 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1c3 NOT
0x1c4 AND
0x1c5 DUP2
0x1c6 MSTORE
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca SWAP4
0x1cb POP
0x1cc POP
0x1cd POP
0x1ce POP
0x1cf PUSH1 0x0
0x1d1 PUSH1 0x40
0x1d3 MLOAD
0x1d4 DUP1
0x1d5 DUP4
0x1d6 SUB
0x1d7 DUP2
0x1d8 DUP6
0x1d9 DUP9
0x1da DUP1
0x1db EXTCODESIZE
0x1dc ISZERO
0x1dd ISZERO
0x1de PUSH2 0x1e3
0x1e1 JUMPI
---
0x43: JUMPDEST 
0x44: V15 = 0x0
0x46: V16 = CALLER
0x47: V17 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c: V18 = AND 0xffffffffffffffffffffffffffffffffffffffff V16
0x5d: V19 = 0x1
0x5f: V20 = MUL 0x1 V18
0x60: V21 = CALLER
0x61: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x76: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x77: V24 = 0x1
0x79: V25 = MUL 0x1 V23
0x7a: V26 = XOR V25 V20
0x7b: V27 = 0x40
0x7d: V28 = M[0x40]
0x80: V29 = 0x0
0x82: V30 = NOT 0x0
0x83: V31 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V26
0x84: V32 = 0x0
0x86: V33 = NOT 0x0
0x87: V34 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V31
0x89: M[V28] = V34
0x8a: V35 = 0x20
0x8c: V36 = ADD 0x20 V28
0x90: V37 = 0x40
0x92: V38 = M[0x40]
0x95: V39 = SUB V36 V38
0x97: V40 = SHA3 V38 V39
0x9a: V41 = 0x1
0x9c: V42 = 0x0
0x9f: V43 = S[0x1]
0xa1: V44 = 0x100
0xa4: V45 = EXP 0x100 0x0
0xa6: V46 = DIV V43 0x1
0xa7: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xbd: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xd3: V51 = 0x1c9981f8
0xd8: V52 = ADDRESS
0xd9: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xee: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xef: V55 = BALANCE V54
0xf0: V56 = CALLER
0xf1: V57 = CALLER
0xf3: V58 = 0x40
0xf5: V59 = M[0x40]
0xf7: V60 = 0xffffffff
0xfc: V61 = AND 0xffffffff 0x1c9981f8
0xfd: V62 = 0x100000000000000000000000000000000000000000000000000000000
0x11b: V63 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1c9981f8
0x11d: M[V59] = 0x1c9981f800000000000000000000000000000000000000000000000000000000
0x11e: V64 = 0x4
0x120: V65 = ADD 0x4 V59
0x123: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x139: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x150: M[V65] = V69
0x151: V70 = 0x20
0x153: V71 = ADD 0x20 V65
0x155: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x16a: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x16b: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x180: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x182: M[V71] = V75
0x183: V76 = 0x20
0x185: V77 = ADD 0x20 V71
0x187: V78 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1a4: V79 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1a5: V80 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V40
0x1a6: V81 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1c3: V82 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1c4: V83 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V80
0x1c6: M[V77] = V83
0x1c7: V84 = 0x20
0x1c9: V85 = ADD 0x20 V77
0x1cf: V86 = 0x0
0x1d1: V87 = 0x40
0x1d3: V88 = M[0x40]
0x1d6: V89 = SUB V85 V88
0x1db: V90 = EXTCODESIZE V50
0x1dc: V91 = ISZERO V90
0x1dd: V92 = ISZERO V91
0x1de: V93 = 0x1e3
0x1e1: JUMPI 0x1e3 V92
---
Entry stack: [V10, 0x1f9]
Stack pops: 0
Stack additions: [V40, V50, 0x1c9981f8, V55, V85, 0x0, V88, V89, V88, V55, V50]
Exit stack: [V10, 0x1f9, V40, V50, 0x1c9981f8, V55, V85, 0x0, V88, V89, V88, V55, V50]

================================

Block 0x1e2
[0x1e2:0x1e2]
---
Predecessors: [0x43]
Successors: []
---
0x1e2 INVALID
---
0x1e2: INVALID 
---
Entry stack: [V10, 0x1f9, V40, V50, 0x1c9981f8, V55, V85, 0x0, V88, V89, V88, V55, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9, V40, V50, 0x1c9981f8, V55, V85, 0x0, V88, V89, V88, V55, V50]

================================

Block 0x1e3
[0x1e3:0x1ef]
---
Predecessors: [0x43]
Successors: [0x1f0, 0x1f1]
---
0x1e3 JUMPDEST
0x1e4 PUSH2 0x235a
0x1e7 GAS
0x1e8 SUB
0x1e9 CALL
0x1ea ISZERO
0x1eb ISZERO
0x1ec PUSH2 0x1f1
0x1ef JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V94 = 0x235a
0x1e7: V95 = GAS
0x1e8: V96 = SUB V95 0x235a
0x1e9: V97 = CALL V96 V50 V55 V88 V89 V88 0x0
0x1ea: V98 = ISZERO V97
0x1eb: V99 = ISZERO V98
0x1ec: V100 = 0x1f1
0x1ef: JUMPI 0x1f1 V99
---
Entry stack: [V10, 0x1f9, V40, V50, 0x1c9981f8, V55, V85, 0x0, V88, V89, V88, V55, V50]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1f9, V40, V50, 0x1c9981f8, V55, V85]

================================

Block 0x1f0
[0x1f0:0x1f0]
---
Predecessors: [0x1e3]
Successors: []
---
0x1f0 INVALID
---
0x1f0: INVALID 
---
Entry stack: [V10, 0x1f9, V40, V50, 0x1c9981f8, V55, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9, V40, V50, 0x1c9981f8, V55, V85]

================================

Block 0x1f1
[0x1f1:0x1f5]
---
Predecessors: [0x1e3]
Successors: [0x1f6]
---
0x1f1 JUMPDEST
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
---
0x1f1: JUMPDEST 
---
Entry stack: [V10, 0x1f9, V40, V50, 0x1c9981f8, V55, V85]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x1f9, V40]

================================

Block 0x1f6
[0x1f6:0x1f8]
---
Predecessors: [0x1f1]
Successors: [0x1f9]
---
0x1f6 JUMPDEST
0x1f7 POP
0x1f8 JUMP
---
0x1f6: JUMPDEST 
0x1f8: JUMP 0x1f9
---
Entry stack: [V10, 0x1f9, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f9
[0x1f9:0x1fa]
---
Predecessors: [0x1f6]
Successors: []
---
0x1f9 JUMPDEST
0x1fa STOP
---
0x1f9: JUMPDEST 
0x1fa: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fb
[0x1fb:0x201]
---
Predecessors: [0xb]
Successors: [0x202, 0x203]
---
0x1fb JUMPDEST
0x1fc CALLVALUE
0x1fd ISZERO
0x1fe PUSH2 0x203
0x201 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V101 = CALLVALUE
0x1fd: V102 = ISZERO V101
0x1fe: V103 = 0x203
0x201: JUMPI 0x203 V102
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x202
[0x202:0x202]
---
Predecessors: [0x1fb]
Successors: []
---
0x202 INVALID
---
0x202: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x203
[0x203:0x20a]
---
Predecessors: [0x1fb]
Successors: [0x20d]
---
0x203 JUMPDEST
0x204 PUSH2 0x20b
0x207 PUSH2 0x20d
0x20a JUMP
---
0x203: JUMPDEST 
0x204: V104 = 0x20b
0x207: V105 = 0x20d
0x20a: JUMP 0x20d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x20b]
Exit stack: [V10, 0x20b]

================================

Block 0x20b
[0x20b:0x20c]
---
Predecessors: []
Successors: []
---
0x20b JUMPDEST
0x20c STOP
---
0x20b: JUMPDEST 
0x20c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x20d
[0x20d:0x264]
---
Predecessors: [0x203]
Successors: [0x265, 0x26a]
---
0x20d JUMPDEST
0x20e PUSH1 0x0
0x210 PUSH1 0x0
0x212 SWAP1
0x213 SLOAD
0x214 SWAP1
0x215 PUSH2 0x100
0x218 EXP
0x219 SWAP1
0x21a DIV
0x21b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x230 AND
0x231 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x246 AND
0x247 CALLER
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e EQ
0x25f ISZERO
0x260 ISZERO
0x261 PUSH2 0x26a
0x264 JUMPI
---
0x20d: JUMPDEST 
0x20e: V106 = 0x0
0x210: V107 = 0x0
0x213: V108 = S[0x0]
0x215: V109 = 0x100
0x218: V110 = EXP 0x100 0x0
0x21a: V111 = DIV V108 0x1
0x21b: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x230: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x231: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x246: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x247: V116 = CALLER
0x248: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x25e: V119 = EQ V118 V115
0x25f: V120 = ISZERO V119
0x260: V121 = ISZERO V120
0x261: V122 = 0x26a
0x264: JUMPI 0x26a V121
---
Entry stack: [V10, 0x20b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x20b]

================================

Block 0x265
[0x265:0x269]
---
Predecessors: [0x20d]
Successors: []
---
0x265 PUSH1 0x0
0x267 PUSH1 0x0
0x269 REVERT
---
0x265: V123 = 0x0
0x267: V124 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V10, 0x20b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x20b]

================================

Block 0x26a
[0x26a:0x2a4]
---
Predecessors: [0x20d]
Successors: []
---
0x26a JUMPDEST
0x26b PUSH1 0x0
0x26d PUSH1 0x0
0x26f SWAP1
0x270 SLOAD
0x271 SWAP1
0x272 PUSH2 0x100
0x275 EXP
0x276 SWAP1
0x277 DIV
0x278 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28d AND
0x28e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a3 AND
0x2a4 SELFDESTRUCT
---
0x26a: JUMPDEST 
0x26b: V125 = 0x0
0x26d: V126 = 0x0
0x270: V127 = S[0x0]
0x272: V128 = 0x100
0x275: V129 = EXP 0x100 0x0
0x277: V130 = DIV V127 0x1
0x278: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x28e: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x2a4: SELFDESTRUCT V134
---
Entry stack: [V10, 0x20b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x20b]

================================

Block 0x2a5
[0x2a5:0x2de]
---
Predecessors: []
Successors: []
---
0x2a5 JUMPDEST
0x2a6 JUMP
0x2a7 STOP
0x2a8 LOG1
0x2a9 PUSH6 0x627a7a723058
0x2b0 SHA3
0x2b1 MISSING 0xa5
0x2b2 CREATE2
0x2b3 MISSING 0xae
0x2b4 CALLDATASIZE
0x2b5 MISSING 0x4a
0x2b6 MISSING 0xb4
0x2b7 MISSING 0x24
0x2b8 MISSING 0xe7
0x2b9 MISSING 0xbe
0x2ba SWAP5
0x2bb MISSING 0x28
0x2bc PUSH11 0x25a511e4a64afedcb03f5a
0x2c8 CREATE2
0x2c9 STOP
0x2ca MISSING 0xb9
0x2cb MISSING 0xec
0x2cc MISSING 0xe
0x2cd PUSH17 0xf9228f0029
---
0x2a5: JUMPDEST 
0x2a6: JUMP S0
0x2a7: STOP 
0x2a8: LOG S0 S1 S2
0x2a9: V135 = 0x627a7a723058
0x2b0: V136 = SHA3 0x627a7a723058 S3
0x2b1: MISSING 0xa5
0x2b2: V137 = CREATE2 S0 S1 S2 S3
0x2b3: MISSING 0xae
0x2b4: V138 = CALLDATASIZE
0x2b5: MISSING 0x4a
0x2b6: MISSING 0xb4
0x2b7: MISSING 0x24
0x2b8: MISSING 0xe7
0x2b9: MISSING 0xbe
0x2bb: MISSING 0x28
0x2bc: V139 = 0x25a511e4a64afedcb03f5a
0x2c8: V140 = CREATE2 0x25a511e4a64afedcb03f5a S0 S1 S2
0x2c9: STOP 
0x2ca: MISSING 0xb9
0x2cb: MISSING 0xec
0x2cc: MISSING 0xe
0x2cd: V141 = 0xf9228f0029
---
Entry stack: []
Stack pops: 12696
Stack additions: [0xf9228f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xc96cd46f
Entry block: 0x1fb
Exit block: 0x265
Body: 0x1fb, 0x202, 0x203, 0x20d, 0x265, 0x26a

Function 1:
Public fallback function
Entry block: 0x3f
Exit block: 0x1f9
Body: 0x3f, 0x43, 0x1e2, 0x1e3, 0x1f0, 0x1f1, 0x1f6, 0x1f9

