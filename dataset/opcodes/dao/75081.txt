Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa0]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa0
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa0
0xc: JUMPI 0xa0 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xa2]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x3ccfd60b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xa2
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x3ccfd60b
0x22: V15 = EQ V13 0x3ccfd60b
0x23: V16 = 0xa2
0x26: JUMPI 0xa2 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xb7]
---
0x27 DUP1
0x28 PUSH4 0x4311de8f
0x2d EQ
0x2e PUSH2 0xb7
0x31 JUMPI
---
0x28: V17 = 0x4311de8f
0x2d: V18 = EQ 0x4311de8f V13
0x2e: V19 = 0xb7
0x31: JUMPI 0xb7 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xcc]
---
0x32 DUP1
0x33 PUSH4 0x688abbf7
0x38 EQ
0x39 PUSH2 0xcc
0x3c JUMPI
---
0x33: V20 = 0x688abbf7
0x38: V21 = EQ 0x688abbf7 V13
0x39: V22 = 0xcc
0x3c: JUMPI 0xcc V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xf8]
---
0x3d DUP1
0x3e PUSH4 0x8da5cb5b
0x43 EQ
0x44 PUSH2 0xf8
0x47 JUMPI
---
0x3e: V23 = 0x8da5cb5b
0x43: V24 = EQ 0x8da5cb5b V13
0x44: V25 = 0xf8
0x47: JUMPI 0xf8 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x129]
---
0x48 DUP1
0x49 PUSH4 0x949e8acd
0x4e EQ
0x4f PUSH2 0x129
0x52 JUMPI
---
0x49: V26 = 0x949e8acd
0x4e: V27 = EQ 0x949e8acd V13
0x4f: V28 = 0x129
0x52: JUMPI 0x129 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x13e]
---
0x53 DUP1
0x54 PUSH4 0x9547dd5b
0x59 EQ
0x5a PUSH2 0x13e
0x5d JUMPI
---
0x54: V29 = 0x9547dd5b
0x59: V30 = EQ 0x9547dd5b V13
0x5a: V31 = 0x13e
0x5d: JUMPI 0x13e V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x155]
---
0x5e DUP1
0x5f PUSH4 0xa9059cbb
0x64 EQ
0x65 PUSH2 0x155
0x68 JUMPI
---
0x5f: V32 = 0xa9059cbb
0x64: V33 = EQ 0xa9059cbb V13
0x65: V34 = 0x155
0x68: JUMPI 0x155 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x179]
---
0x69 DUP1
0x6a PUSH4 0xe4849b32
0x6f EQ
0x70 PUSH2 0x179
0x73 JUMPI
---
0x6a: V35 = 0xe4849b32
0x6f: V36 = EQ 0xe4849b32 V13
0x70: V37 = 0x179
0x73: JUMPI 0x179 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x191]
---
0x74 DUP1
0x75 PUSH4 0xe9fad8ee
0x7a EQ
0x7b PUSH2 0x191
0x7e JUMPI
---
0x75: V38 = 0xe9fad8ee
0x7a: V39 = EQ 0xe9fad8ee V13
0x7b: V40 = 0x191
0x7e: JUMPI 0x191 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1a6]
---
0x7f DUP1
0x80 PUSH4 0xf088d547
0x85 EQ
0x86 PUSH2 0x1a6
0x89 JUMPI
---
0x80: V41 = 0xf088d547
0x85: V42 = EQ 0xf088d547 V13
0x86: V43 = 0x1a6
0x89: JUMPI 0x1a6 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x1ba]
---
0x8a DUP1
0x8b PUSH4 0xf6613ff5
0x90 EQ
0x91 PUSH2 0x1ba
0x94 JUMPI
---
0x8b: V44 = 0xf6613ff5
0x90: V45 = EQ 0xf6613ff5 V13
0x91: V46 = 0x1ba
0x94: JUMPI 0x1ba V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x1cf]
---
0x95 DUP1
0x96 PUSH4 0xfdb5a03e
0x9b EQ
0x9c PUSH2 0x1cf
0x9f JUMPI
---
0x96: V47 = 0xfdb5a03e
0x9b: V48 = EQ 0xfdb5a03e V13
0x9c: V49 = 0x1cf
0x9f: JUMPI 0x1cf V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xa1]
---
Predecessors: [0x0, 0x95, 0x262, 0x2a3, 0x4e8, 0x72f]
Successors: []
---
0xa0 JUMPDEST
0xa1 STOP
---
0xa0: JUMPDEST 
0xa1: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0xd]
Successors: [0xaa, 0xae]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa2: JUMPDEST 
0xa3: V50 = CALLVALUE
0xa5: V51 = ISZERO V50
0xa6: V52 = 0xae
0xa9: JUMPI 0xae V51
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V13, V50]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa2]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V53 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V13, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50]

================================

Block 0xae
[0xae:0xb6]
---
Predecessors: [0xa2]
Successors: [0x1e4]
---
0xae JUMPDEST
0xaf POP
0xb0 PUSH2 0xa0
0xb3 PUSH2 0x1e4
0xb6 JUMP
---
0xae: JUMPDEST 
0xb0: V54 = 0xa0
0xb3: V55 = 0x1e4
0xb6: JUMP 0x1e4
---
Entry stack: [V13, V50]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V13, 0xa0]

================================

Block 0xb7
[0xb7:0xbe]
---
Predecessors: [0x27]
Successors: [0xbf, 0xc3]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 DUP1
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xb7: JUMPDEST 
0xb8: V56 = CALLVALUE
0xba: V57 = ISZERO V56
0xbb: V58 = 0xc3
0xbe: JUMPI 0xc3 V57
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V13, V56]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xb7]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V59 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V13, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V56]

================================

Block 0xc3
[0xc3:0xcb]
---
Predecessors: [0xb7]
Successors: [0x268]
---
0xc3 JUMPDEST
0xc4 POP
0xc5 PUSH2 0xa0
0xc8 PUSH2 0x268
0xcb JUMP
---
0xc3: JUMPDEST 
0xc5: V60 = 0xa0
0xc8: V61 = 0x268
0xcb: JUMP 0x268
---
Entry stack: [V13, V56]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V13, 0xa0]

================================

Block 0xcc
[0xcc:0xd3]
---
Predecessors: [0x32]
Successors: [0xd4, 0xd8]
---
0xcc JUMPDEST
0xcd CALLVALUE
0xce DUP1
0xcf ISZERO
0xd0 PUSH2 0xd8
0xd3 JUMPI
---
0xcc: JUMPDEST 
0xcd: V62 = CALLVALUE
0xcf: V63 = ISZERO V62
0xd0: V64 = 0xd8
0xd3: JUMPI 0xd8 V63
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V62]
Exit stack: [V13, V62]

================================

Block 0xd4
[0xd4:0xd7]
---
Predecessors: [0xcc]
Successors: []
---
0xd4 PUSH1 0x0
0xd6 DUP1
0xd7 REVERT
---
0xd4: V65 = 0x0
0xd7: REVERT 0x0 0x0
---
Entry stack: [V13, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V62]

================================

Block 0xd8
[0xd8:0xe5]
---
Predecessors: [0xcc]
Successors: [0x2a6]
---
0xd8 JUMPDEST
0xd9 POP
0xda PUSH2 0xe6
0xdd PUSH1 0x4
0xdf CALLDATALOAD
0xe0 ISZERO
0xe1 ISZERO
0xe2 PUSH2 0x2a6
0xe5 JUMP
---
0xd8: JUMPDEST 
0xda: V66 = 0xe6
0xdd: V67 = 0x4
0xdf: V68 = CALLDATALOAD 0x4
0xe0: V69 = ISZERO V68
0xe1: V70 = ISZERO V69
0xe2: V71 = 0x2a6
0xe5: JUMP 0x2a6
---
Entry stack: [V13, V62]
Stack pops: 1
Stack additions: [0xe6, V70]
Exit stack: [V13, 0xe6, V70]

================================

Block 0xe6
[0xe6:0xf7]
---
Predecessors: [0x337, 0x3d7]
Successors: []
---
0xe6 JUMPDEST
0xe7 PUSH1 0x40
0xe9 DUP1
0xea MLOAD
0xeb SWAP2
0xec DUP3
0xed MSTORE
0xee MLOAD
0xef SWAP1
0xf0 DUP2
0xf1 SWAP1
0xf2 SUB
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 SWAP1
0xf7 RETURN
---
0xe6: JUMPDEST 
0xe7: V72 = 0x40
0xea: V73 = M[0x40]
0xed: M[V73] = S0
0xee: V74 = M[0x40]
0xf2: V75 = SUB V73 V74
0xf3: V76 = 0x20
0xf5: V77 = ADD 0x20 V75
0xf7: RETURN V74 V77
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0x3d]
Successors: [0x100, 0x104]
---
0xf8 JUMPDEST
0xf9 CALLVALUE
0xfa DUP1
0xfb ISZERO
0xfc PUSH2 0x104
0xff JUMPI
---
0xf8: JUMPDEST 
0xf9: V78 = CALLVALUE
0xfb: V79 = ISZERO V78
0xfc: V80 = 0x104
0xff: JUMPI 0x104 V79
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V13, V78]

================================

Block 0x100
[0x100:0x103]
---
Predecessors: [0xf8]
Successors: []
---
0x100 PUSH1 0x0
0x102 DUP1
0x103 REVERT
---
0x100: V81 = 0x0
0x103: REVERT 0x0 0x0
---
Entry stack: [V13, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V78]

================================

Block 0x104
[0x104:0x10c]
---
Predecessors: [0xf8]
Successors: [0x33f]
---
0x104 JUMPDEST
0x105 POP
0x106 PUSH2 0x10d
0x109 PUSH2 0x33f
0x10c JUMP
---
0x104: JUMPDEST 
0x106: V82 = 0x10d
0x109: V83 = 0x33f
0x10c: JUMP 0x33f
---
Entry stack: [V13, V78]
Stack pops: 1
Stack additions: [0x10d]
Exit stack: [V13, 0x10d]

================================

Block 0x10d
[0x10d:0x128]
---
Predecessors: [0x33f, 0x734]
Successors: []
---
0x10d JUMPDEST
0x10e PUSH1 0x40
0x110 DUP1
0x111 MLOAD
0x112 PUSH1 0x1
0x114 PUSH1 0xa0
0x116 PUSH1 0x2
0x118 EXP
0x119 SUB
0x11a SWAP1
0x11b SWAP3
0x11c AND
0x11d DUP3
0x11e MSTORE
0x11f MLOAD
0x120 SWAP1
0x121 DUP2
0x122 SWAP1
0x123 SUB
0x124 PUSH1 0x20
0x126 ADD
0x127 SWAP1
0x128 RETURN
---
0x10d: JUMPDEST 
0x10e: V84 = 0x40
0x111: V85 = M[0x40]
0x112: V86 = 0x1
0x114: V87 = 0xa0
0x116: V88 = 0x2
0x118: V89 = EXP 0x2 0xa0
0x119: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V91 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x11e: M[V85] = V91
0x11f: V92 = M[0x40]
0x123: V93 = SUB V85 V92
0x124: V94 = 0x20
0x126: V95 = ADD 0x20 V93
0x128: RETURN V92 V95
---
Entry stack: [V13, 0x10d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x10d]

================================

Block 0x129
[0x129:0x130]
---
Predecessors: [0x48]
Successors: [0x131, 0x135]
---
0x129 JUMPDEST
0x12a CALLVALUE
0x12b DUP1
0x12c ISZERO
0x12d PUSH2 0x135
0x130 JUMPI
---
0x129: JUMPDEST 
0x12a: V96 = CALLVALUE
0x12c: V97 = ISZERO V96
0x12d: V98 = 0x135
0x130: JUMPI 0x135 V97
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V13, V96]

================================

Block 0x131
[0x131:0x134]
---
Predecessors: [0x129]
Successors: []
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
---
0x131: V99 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V13, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V96]

================================

Block 0x135
[0x135:0x13d]
---
Predecessors: [0x129]
Successors: [0x34e]
---
0x135 JUMPDEST
0x136 POP
0x137 PUSH2 0xe6
0x13a PUSH2 0x34e
0x13d JUMP
---
0x135: JUMPDEST 
0x137: V100 = 0xe6
0x13a: V101 = 0x34e
0x13d: JUMP 0x34e
---
Entry stack: [V13, V96]
Stack pops: 1
Stack additions: [0xe6]
Exit stack: [V13, 0xe6]

================================

Block 0x13e
[0x13e:0x154]
---
Predecessors: [0x53]
Successors: [0x3de]
---
0x13e JUMPDEST
0x13f PUSH2 0xa0
0x142 PUSH1 0x1
0x144 PUSH1 0xa0
0x146 PUSH1 0x2
0x148 EXP
0x149 SUB
0x14a PUSH1 0x4
0x14c CALLDATALOAD
0x14d AND
0x14e PUSH1 0x24
0x150 CALLDATALOAD
0x151 PUSH2 0x3de
0x154 JUMP
---
0x13e: JUMPDEST 
0x13f: V102 = 0xa0
0x142: V103 = 0x1
0x144: V104 = 0xa0
0x146: V105 = 0x2
0x148: V106 = EXP 0x2 0xa0
0x149: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14a: V108 = 0x4
0x14c: V109 = CALLDATALOAD 0x4
0x14d: V110 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V111 = 0x24
0x150: V112 = CALLDATALOAD 0x24
0x151: V113 = 0x3de
0x154: JUMP 0x3de
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa0, V110, V112]
Exit stack: [V13, 0xa0, V110, V112]

================================

Block 0x155
[0x155:0x15c]
---
Predecessors: [0x5e]
Successors: [0x15d, 0x161]
---
0x155 JUMPDEST
0x156 CALLVALUE
0x157 DUP1
0x158 ISZERO
0x159 PUSH2 0x161
0x15c JUMPI
---
0x155: JUMPDEST 
0x156: V114 = CALLVALUE
0x158: V115 = ISZERO V114
0x159: V116 = 0x161
0x15c: JUMPI 0x161 V115
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V114]
Exit stack: [V13, V114]

================================

Block 0x15d
[0x15d:0x160]
---
Predecessors: [0x155]
Successors: []
---
0x15d PUSH1 0x0
0x15f DUP1
0x160 REVERT
---
0x15d: V117 = 0x0
0x160: REVERT 0x0 0x0
---
Entry stack: [V13, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V114]

================================

Block 0x161
[0x161:0x178]
---
Predecessors: [0x155]
Successors: [0x4ef]
---
0x161 JUMPDEST
0x162 POP
0x163 PUSH2 0xa0
0x166 PUSH1 0x1
0x168 PUSH1 0xa0
0x16a PUSH1 0x2
0x16c EXP
0x16d SUB
0x16e PUSH1 0x4
0x170 CALLDATALOAD
0x171 AND
0x172 PUSH1 0x24
0x174 CALLDATALOAD
0x175 PUSH2 0x4ef
0x178 JUMP
---
0x161: JUMPDEST 
0x163: V118 = 0xa0
0x166: V119 = 0x1
0x168: V120 = 0xa0
0x16a: V121 = 0x2
0x16c: V122 = EXP 0x2 0xa0
0x16d: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16e: V124 = 0x4
0x170: V125 = CALLDATALOAD 0x4
0x171: V126 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x172: V127 = 0x24
0x174: V128 = CALLDATALOAD 0x24
0x175: V129 = 0x4ef
0x178: JUMP 0x4ef
---
Entry stack: [V13, V114]
Stack pops: 1
Stack additions: [0xa0, V126, V128]
Exit stack: [V13, 0xa0, V126, V128]

================================

Block 0x179
[0x179:0x180]
---
Predecessors: [0x69]
Successors: [0x181, 0x185]
---
0x179 JUMPDEST
0x17a CALLVALUE
0x17b DUP1
0x17c ISZERO
0x17d PUSH2 0x185
0x180 JUMPI
---
0x179: JUMPDEST 
0x17a: V130 = CALLVALUE
0x17c: V131 = ISZERO V130
0x17d: V132 = 0x185
0x180: JUMPI 0x185 V131
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V130]
Exit stack: [V13, V130]

================================

Block 0x181
[0x181:0x184]
---
Predecessors: [0x179]
Successors: []
---
0x181 PUSH1 0x0
0x183 DUP1
0x184 REVERT
---
0x181: V133 = 0x0
0x184: REVERT 0x0 0x0
---
Entry stack: [V13, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V130]

================================

Block 0x185
[0x185:0x190]
---
Predecessors: [0x179]
Successors: [0x59f]
---
0x185 JUMPDEST
0x186 POP
0x187 PUSH2 0xa0
0x18a PUSH1 0x4
0x18c CALLDATALOAD
0x18d PUSH2 0x59f
0x190 JUMP
---
0x185: JUMPDEST 
0x187: V134 = 0xa0
0x18a: V135 = 0x4
0x18c: V136 = CALLDATALOAD 0x4
0x18d: V137 = 0x59f
0x190: JUMP 0x59f
---
Entry stack: [V13, V130]
Stack pops: 1
Stack additions: [0xa0, V136]
Exit stack: [V13, 0xa0, V136]

================================

Block 0x191
[0x191:0x198]
---
Predecessors: [0x74]
Successors: [0x199, 0x19d]
---
0x191 JUMPDEST
0x192 CALLVALUE
0x193 DUP1
0x194 ISZERO
0x195 PUSH2 0x19d
0x198 JUMPI
---
0x191: JUMPDEST 
0x192: V138 = CALLVALUE
0x194: V139 = ISZERO V138
0x195: V140 = 0x19d
0x198: JUMPI 0x19d V139
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V138]
Exit stack: [V13, V138]

================================

Block 0x199
[0x199:0x19c]
---
Predecessors: [0x191]
Successors: []
---
0x199 PUSH1 0x0
0x19b DUP1
0x19c REVERT
---
0x199: V141 = 0x0
0x19c: REVERT 0x0 0x0
---
Entry stack: [V13, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V138]

================================

Block 0x19d
[0x19d:0x1a5]
---
Predecessors: [0x191]
Successors: [0x630]
---
0x19d JUMPDEST
0x19e POP
0x19f PUSH2 0xa0
0x1a2 PUSH2 0x630
0x1a5 JUMP
---
0x19d: JUMPDEST 
0x19f: V142 = 0xa0
0x1a2: V143 = 0x630
0x1a5: JUMP 0x630
---
Entry stack: [V13, V138]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V13, 0xa0]

================================

Block 0x1a6
[0x1a6:0x1b9]
---
Predecessors: [0x7f]
Successors: [0x69a]
---
0x1a6 JUMPDEST
0x1a7 PUSH2 0xa0
0x1aa PUSH1 0x1
0x1ac PUSH1 0xa0
0x1ae PUSH1 0x2
0x1b0 EXP
0x1b1 SUB
0x1b2 PUSH1 0x4
0x1b4 CALLDATALOAD
0x1b5 AND
0x1b6 PUSH2 0x69a
0x1b9 JUMP
---
0x1a6: JUMPDEST 
0x1a7: V144 = 0xa0
0x1aa: V145 = 0x1
0x1ac: V146 = 0xa0
0x1ae: V147 = 0x2
0x1b0: V148 = EXP 0x2 0xa0
0x1b1: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b2: V150 = 0x4
0x1b4: V151 = CALLDATALOAD 0x4
0x1b5: V152 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V153 = 0x69a
0x1b9: JUMP 0x69a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa0, V152]
Exit stack: [V13, 0xa0, V152]

================================

Block 0x1ba
[0x1ba:0x1c1]
---
Predecessors: [0x8a]
Successors: [0x1c2, 0x1c6]
---
0x1ba JUMPDEST
0x1bb CALLVALUE
0x1bc DUP1
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x1ba: JUMPDEST 
0x1bb: V154 = CALLVALUE
0x1bd: V155 = ISZERO V154
0x1be: V156 = 0x1c6
0x1c1: JUMPI 0x1c6 V155
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V13, V154]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x1ba]
Successors: []
---
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c2: V157 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V13, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V154]

================================

Block 0x1c6
[0x1c6:0x1ce]
---
Predecessors: [0x1ba]
Successors: [0x734]
---
0x1c6 JUMPDEST
0x1c7 POP
0x1c8 PUSH2 0x10d
0x1cb PUSH2 0x734
0x1ce JUMP
---
0x1c6: JUMPDEST 
0x1c8: V158 = 0x10d
0x1cb: V159 = 0x734
0x1ce: JUMP 0x734
---
Entry stack: [V13, V154]
Stack pops: 1
Stack additions: [0x10d]
Exit stack: [V13, 0x10d]

================================

Block 0x1cf
[0x1cf:0x1d6]
---
Predecessors: [0x95]
Successors: [0x1d7, 0x1db]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 DUP1
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V160 = CALLVALUE
0x1d2: V161 = ISZERO V160
0x1d3: V162 = 0x1db
0x1d6: JUMPI 0x1db V161
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V160]
Exit stack: [V13, V160]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V163 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V13, V160]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V160]

================================

Block 0x1db
[0x1db:0x1e3]
---
Predecessors: [0x1cf]
Successors: [0x743]
---
0x1db JUMPDEST
0x1dc POP
0x1dd PUSH2 0xa0
0x1e0 PUSH2 0x743
0x1e3 JUMP
---
0x1db: JUMPDEST 
0x1dd: V164 = 0xa0
0x1e0: V165 = 0x743
0x1e3: JUMP 0x743
---
Entry stack: [V13, V160]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V13, 0xa0]

================================

Block 0x1e4
[0x1e4:0x1f6]
---
Predecessors: [0xae]
Successors: [0x1f7, 0x1fb]
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x0
0x1e7 SLOAD
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 AND
0x1f1 CALLER
0x1f2 EQ
0x1f3 PUSH2 0x1fb
0x1f6 JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V166 = 0x0
0x1e7: V167 = S[0x0]
0x1e8: V168 = 0x1
0x1ea: V169 = 0xa0
0x1ec: V170 = 0x2
0x1ee: V171 = EXP 0x2 0xa0
0x1ef: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f0: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x1f1: V174 = CALLER
0x1f2: V175 = EQ V174 V173
0x1f3: V176 = 0x1fb
0x1f6: JUMPI 0x1fb V175
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x1f7
[0x1f7:0x1fa]
---
Predecessors: [0x1e4]
Successors: []
---
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa REVERT
---
0x1f7: V177 = 0x0
0x1fa: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x1fb
[0x1fb:0x249]
---
Predecessors: [0x1e4]
Successors: [0x24a, 0x24e]
---
0x1fb JUMPDEST
0x1fc PUSH1 0x1
0x1fe PUSH1 0x0
0x200 SWAP1
0x201 SLOAD
0x202 SWAP1
0x203 PUSH2 0x100
0x206 EXP
0x207 SWAP1
0x208 DIV
0x209 PUSH1 0x1
0x20b PUSH1 0xa0
0x20d PUSH1 0x2
0x20f EXP
0x210 SUB
0x211 AND
0x212 PUSH1 0x1
0x214 PUSH1 0xa0
0x216 PUSH1 0x2
0x218 EXP
0x219 SUB
0x21a AND
0x21b PUSH4 0x3ccfd60b
0x220 PUSH1 0x40
0x222 MLOAD
0x223 DUP2
0x224 PUSH4 0xffffffff
0x229 AND
0x22a PUSH1 0xe0
0x22c PUSH1 0x2
0x22e EXP
0x22f MUL
0x230 DUP2
0x231 MSTORE
0x232 PUSH1 0x4
0x234 ADD
0x235 PUSH1 0x0
0x237 PUSH1 0x40
0x239 MLOAD
0x23a DUP1
0x23b DUP4
0x23c SUB
0x23d DUP2
0x23e PUSH1 0x0
0x240 DUP8
0x241 DUP1
0x242 EXTCODESIZE
0x243 ISZERO
0x244 DUP1
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V178 = 0x1
0x1fe: V179 = 0x0
0x201: V180 = S[0x1]
0x203: V181 = 0x100
0x206: V182 = EXP 0x100 0x0
0x208: V183 = DIV V180 0x1
0x209: V184 = 0x1
0x20b: V185 = 0xa0
0x20d: V186 = 0x2
0x20f: V187 = EXP 0x2 0xa0
0x210: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x211: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x212: V190 = 0x1
0x214: V191 = 0xa0
0x216: V192 = 0x2
0x218: V193 = EXP 0x2 0xa0
0x219: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21a: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x21b: V196 = 0x3ccfd60b
0x220: V197 = 0x40
0x222: V198 = M[0x40]
0x224: V199 = 0xffffffff
0x229: V200 = AND 0xffffffff 0x3ccfd60b
0x22a: V201 = 0xe0
0x22c: V202 = 0x2
0x22e: V203 = EXP 0x2 0xe0
0x22f: V204 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x231: M[V198] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x232: V205 = 0x4
0x234: V206 = ADD 0x4 V198
0x235: V207 = 0x0
0x237: V208 = 0x40
0x239: V209 = M[0x40]
0x23c: V210 = SUB V206 V209
0x23e: V211 = 0x0
0x242: V212 = EXTCODESIZE V195
0x243: V213 = ISZERO V212
0x245: V214 = ISZERO V213
0x246: V215 = 0x24e
0x249: JUMPI 0x24e V214
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: [V195, 0x3ccfd60b, V206, 0x0, V209, V210, V209, 0x0, V195, V213]
Exit stack: [V13, 0xa0, V195, 0x3ccfd60b, V206, 0x0, V209, V210, V209, 0x0, V195, V213]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x1fb]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V216 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V195, 0x3ccfd60b, V206, 0x0, V209, V210, V209, 0x0, V195, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V195, 0x3ccfd60b, V206, 0x0, V209, V210, V209, 0x0, V195, V213]

================================

Block 0x24e
[0x24e:0x258]
---
Predecessors: [0x1fb, 0x647, 0x75a]
Successors: [0x259, 0x262]
---
0x24e JUMPDEST
0x24f POP
0x250 GAS
0x251 CALL
0x252 ISZERO
0x253 DUP1
0x254 ISZERO
0x255 PUSH2 0x262
0x258 JUMPI
---
0x24e: JUMPDEST 
0x250: V217 = GAS
0x251: V218 = CALL V217 S1 0x0 S3 S4 S5 0x0
0x252: V219 = ISZERO V218
0x254: V220 = ISZERO V219
0x255: V221 = 0x262
0x258: JUMPI 0x262 V220
---
Entry stack: [V13, 0xa0, S9, {0x3ccfd60b, 0xe9fad8ee, 0xfdb5a03e}, S7, 0x0, S5, S4, S3, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V219]
Exit stack: [V13, 0xa0, S9, {0x3ccfd60b, 0xe9fad8ee, 0xfdb5a03e}, S7, V219]

================================

Block 0x259
[0x259:0x261]
---
Predecessors: [0x24e]
Successors: []
---
0x259 RETURNDATASIZE
0x25a PUSH1 0x0
0x25c DUP1
0x25d RETURNDATACOPY
0x25e RETURNDATASIZE
0x25f PUSH1 0x0
0x261 REVERT
---
0x259: V222 = RETURNDATASIZE
0x25a: V223 = 0x0
0x25d: RETURNDATACOPY 0x0 0x0 V222
0x25e: V224 = RETURNDATASIZE
0x25f: V225 = 0x0
0x261: REVERT 0x0 V224
---
Entry stack: [V13, 0xa0, S3, {0x3ccfd60b, 0xe9fad8ee, 0xfdb5a03e}, S1, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, S3, {0x3ccfd60b, 0xe9fad8ee, 0xfdb5a03e}, S1, V219]

================================

Block 0x262
[0x262:0x267]
---
Predecessors: [0x24e, 0x4a1, 0x589]
Successors: [0xa0]
---
0x262 JUMPDEST
0x263 POP
0x264 POP
0x265 POP
0x266 POP
0x267 JUMP
---
0x262: JUMPDEST 
0x267: JUMP 0xa0
---
Entry stack: [V13, 0xa0, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x268
[0x268:0x299]
---
Predecessors: [0xc3]
Successors: [0x29a, 0x2a3]
---
0x268 JUMPDEST
0x269 PUSH1 0x0
0x26b DUP1
0x26c SLOAD
0x26d PUSH1 0x40
0x26f MLOAD
0x270 PUSH1 0x1
0x272 PUSH1 0xa0
0x274 PUSH1 0x2
0x276 EXP
0x277 SUB
0x278 SWAP1
0x279 SWAP2
0x27a AND
0x27b SWAP2
0x27c ADDRESS
0x27d BALANCE
0x27e DUP1
0x27f ISZERO
0x280 PUSH2 0x8fc
0x283 MUL
0x284 SWAP3
0x285 SWAP1
0x286 SWAP2
0x287 DUP2
0x288 DUP2
0x289 DUP2
0x28a DUP6
0x28b DUP9
0x28c DUP9
0x28d CALL
0x28e SWAP4
0x28f POP
0x290 POP
0x291 POP
0x292 POP
0x293 ISZERO
0x294 DUP1
0x295 ISZERO
0x296 PUSH2 0x2a3
0x299 JUMPI
---
0x268: JUMPDEST 
0x269: V226 = 0x0
0x26c: V227 = S[0x0]
0x26d: V228 = 0x40
0x26f: V229 = M[0x40]
0x270: V230 = 0x1
0x272: V231 = 0xa0
0x274: V232 = 0x2
0x276: V233 = EXP 0x2 0xa0
0x277: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27a: V235 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V236 = ADDRESS
0x27d: V237 = BALANCE V236
0x27f: V238 = ISZERO V237
0x280: V239 = 0x8fc
0x283: V240 = MUL 0x8fc V238
0x28d: V241 = CALL V240 V235 V237 V229 0x0 V229 0x0
0x293: V242 = ISZERO V241
0x295: V243 = ISZERO V242
0x296: V244 = 0x2a3
0x299: JUMPI 0x2a3 V243
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: [V242]
Exit stack: [V13, 0xa0, V242]

================================

Block 0x29a
[0x29a:0x2a2]
---
Predecessors: [0x268]
Successors: []
---
0x29a RETURNDATASIZE
0x29b PUSH1 0x0
0x29d DUP1
0x29e RETURNDATACOPY
0x29f RETURNDATASIZE
0x2a0 PUSH1 0x0
0x2a2 REVERT
---
0x29a: V245 = RETURNDATASIZE
0x29b: V246 = 0x0
0x29e: RETURNDATACOPY 0x0 0x0 V245
0x29f: V247 = RETURNDATASIZE
0x2a0: V248 = 0x0
0x2a2: REVERT 0x0 V247
---
Entry stack: [V13, 0xa0, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V242]

================================

Block 0x2a3
[0x2a3:0x2a5]
---
Predecessors: [0x268]
Successors: [0xa0]
---
0x2a3 JUMPDEST
0x2a4 POP
0x2a5 JUMP
---
0x2a3: JUMPDEST 
0x2a5: JUMP 0xa0
---
Entry stack: [V13, 0xa0, V242]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a6
[0x2a6:0x308]
---
Predecessors: [0xd8]
Successors: [0x309, 0x30d]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x1
0x2a9 SLOAD
0x2aa PUSH1 0x40
0x2ac DUP1
0x2ad MLOAD
0x2ae PUSH32 0x688abbf700000000000000000000000000000000000000000000000000000000
0x2cf DUP2
0x2d0 MSTORE
0x2d1 DUP4
0x2d2 ISZERO
0x2d3 ISZERO
0x2d4 PUSH1 0x4
0x2d6 DUP3
0x2d7 ADD
0x2d8 MSTORE
0x2d9 SWAP1
0x2da MLOAD
0x2db PUSH1 0x0
0x2dd SWAP3
0x2de PUSH1 0x1
0x2e0 PUSH1 0xa0
0x2e2 PUSH1 0x2
0x2e4 EXP
0x2e5 SUB
0x2e6 AND
0x2e7 SWAP2
0x2e8 PUSH4 0x688abbf7
0x2ed SWAP2
0x2ee PUSH1 0x24
0x2f0 DUP1
0x2f1 DUP4
0x2f2 ADD
0x2f3 SWAP3
0x2f4 PUSH1 0x20
0x2f6 SWAP3
0x2f7 SWAP2
0x2f8 SWAP1
0x2f9 DUP3
0x2fa SWAP1
0x2fb SUB
0x2fc ADD
0x2fd DUP2
0x2fe DUP8
0x2ff DUP8
0x300 DUP1
0x301 EXTCODESIZE
0x302 ISZERO
0x303 DUP1
0x304 ISZERO
0x305 PUSH2 0x30d
0x308 JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V249 = 0x1
0x2a9: V250 = S[0x1]
0x2aa: V251 = 0x40
0x2ad: V252 = M[0x40]
0x2ae: V253 = 0x688abbf700000000000000000000000000000000000000000000000000000000
0x2d0: M[V252] = 0x688abbf700000000000000000000000000000000000000000000000000000000
0x2d2: V254 = ISZERO V70
0x2d3: V255 = ISZERO V254
0x2d4: V256 = 0x4
0x2d7: V257 = ADD V252 0x4
0x2d8: M[V257] = V255
0x2da: V258 = M[0x40]
0x2db: V259 = 0x0
0x2de: V260 = 0x1
0x2e0: V261 = 0xa0
0x2e2: V262 = 0x2
0x2e4: V263 = EXP 0x2 0xa0
0x2e5: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e6: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x2e8: V266 = 0x688abbf7
0x2ee: V267 = 0x24
0x2f2: V268 = ADD V252 0x24
0x2f4: V269 = 0x20
0x2fb: V270 = SUB V252 V258
0x2fc: V271 = ADD V270 0x24
0x301: V272 = EXTCODESIZE V265
0x302: V273 = ISZERO V272
0x304: V274 = ISZERO V273
0x305: V275 = 0x30d
0x308: JUMPI 0x30d V274
---
Entry stack: [V13, 0xe6, V70]
Stack pops: 1
Stack additions: [S0, 0x0, V265, 0x688abbf7, V268, 0x20, V258, V271, V258, 0x0, V265, V273]
Exit stack: [V13, 0xe6, V70, 0x0, V265, 0x688abbf7, V268, 0x20, V258, V271, V258, 0x0, V265, V273]

================================

Block 0x309
[0x309:0x30c]
---
Predecessors: [0x2a6]
Successors: []
---
0x309 PUSH1 0x0
0x30b DUP1
0x30c REVERT
---
0x309: V276 = 0x0
0x30c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe6, V70, 0x0, V265, 0x688abbf7, V268, 0x20, V258, V271, V258, 0x0, V265, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe6, V70, 0x0, V265, 0x688abbf7, V268, 0x20, V258, V271, V258, 0x0, V265, V273]

================================

Block 0x30d
[0x30d:0x317]
---
Predecessors: [0x2a6]
Successors: [0x318, 0x321]
---
0x30d JUMPDEST
0x30e POP
0x30f GAS
0x310 CALL
0x311 ISZERO
0x312 DUP1
0x313 ISZERO
0x314 PUSH2 0x321
0x317 JUMPI
---
0x30d: JUMPDEST 
0x30f: V277 = GAS
0x310: V278 = CALL V277 V265 0x0 V258 V271 V258 0x20
0x311: V279 = ISZERO V278
0x313: V280 = ISZERO V279
0x314: V281 = 0x321
0x317: JUMPI 0x321 V280
---
Entry stack: [V13, 0xe6, V70, 0x0, V265, 0x688abbf7, V268, 0x20, V258, V271, V258, 0x0, V265, V273]
Stack pops: 7
Stack additions: [V279]
Exit stack: [V13, 0xe6, V70, 0x0, V265, 0x688abbf7, V268, V279]

================================

Block 0x318
[0x318:0x320]
---
Predecessors: [0x30d]
Successors: []
---
0x318 RETURNDATASIZE
0x319 PUSH1 0x0
0x31b DUP1
0x31c RETURNDATACOPY
0x31d RETURNDATASIZE
0x31e PUSH1 0x0
0x320 REVERT
---
0x318: V282 = RETURNDATASIZE
0x319: V283 = 0x0
0x31c: RETURNDATACOPY 0x0 0x0 V282
0x31d: V284 = RETURNDATASIZE
0x31e: V285 = 0x0
0x320: REVERT 0x0 V284
---
Entry stack: [V13, 0xe6, V70, 0x0, V265, 0x688abbf7, V268, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe6, V70, 0x0, V265, 0x688abbf7, V268, V279]

================================

Block 0x321
[0x321:0x332]
---
Predecessors: [0x30d]
Successors: [0x333, 0x337]
---
0x321 JUMPDEST
0x322 POP
0x323 POP
0x324 POP
0x325 POP
0x326 PUSH1 0x40
0x328 MLOAD
0x329 RETURNDATASIZE
0x32a PUSH1 0x20
0x32c DUP2
0x32d LT
0x32e ISZERO
0x32f PUSH2 0x337
0x332 JUMPI
---
0x321: JUMPDEST 
0x326: V286 = 0x40
0x328: V287 = M[0x40]
0x329: V288 = RETURNDATASIZE
0x32a: V289 = 0x20
0x32d: V290 = LT V288 0x20
0x32e: V291 = ISZERO V290
0x32f: V292 = 0x337
0x332: JUMPI 0x337 V291
---
Entry stack: [V13, 0xe6, V70, 0x0, V265, 0x688abbf7, V268, V279]
Stack pops: 4
Stack additions: [V287, V288]
Exit stack: [V13, 0xe6, V70, 0x0, V287, V288]

================================

Block 0x333
[0x333:0x336]
---
Predecessors: [0x321]
Successors: []
---
0x333 PUSH1 0x0
0x335 DUP1
0x336 REVERT
---
0x333: V293 = 0x0
0x336: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe6, V70, 0x0, V287, V288]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe6, V70, 0x0, V287, V288]

================================

Block 0x337
[0x337:0x33e]
---
Predecessors: [0x321]
Successors: [0xe6]
---
0x337 JUMPDEST
0x338 POP
0x339 MLOAD
0x33a SWAP3
0x33b SWAP2
0x33c POP
0x33d POP
0x33e JUMP
---
0x337: JUMPDEST 
0x339: V294 = M[V287]
0x33e: JUMP 0xe6
---
Entry stack: [V13, 0xe6, V70, 0x0, V287, V288]
Stack pops: 5
Stack additions: [V294]
Exit stack: [V13, V294]

================================

Block 0x33f
[0x33f:0x34d]
---
Predecessors: [0x104]
Successors: [0x10d]
---
0x33f JUMPDEST
0x340 PUSH1 0x0
0x342 SLOAD
0x343 PUSH1 0x1
0x345 PUSH1 0xa0
0x347 PUSH1 0x2
0x349 EXP
0x34a SUB
0x34b AND
0x34c DUP2
0x34d JUMP
---
0x33f: JUMPDEST 
0x340: V295 = 0x0
0x342: V296 = S[0x0]
0x343: V297 = 0x1
0x345: V298 = 0xa0
0x347: V299 = 0x2
0x349: V300 = EXP 0x2 0xa0
0x34a: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34b: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x34d: JUMP 0x10d
---
Entry stack: [V13, 0x10d]
Stack pops: 1
Stack additions: [S0, V302]
Exit stack: [V13, 0x10d, V302]

================================

Block 0x34e
[0x34e:0x3a8]
---
Predecessors: [0x135]
Successors: [0x3a9, 0x3ad]
---
0x34e JUMPDEST
0x34f PUSH1 0x1
0x351 SLOAD
0x352 PUSH1 0x40
0x354 DUP1
0x355 MLOAD
0x356 PUSH32 0x949e8acd00000000000000000000000000000000000000000000000000000000
0x377 DUP2
0x378 MSTORE
0x379 SWAP1
0x37a MLOAD
0x37b PUSH1 0x0
0x37d SWAP3
0x37e PUSH1 0x1
0x380 PUSH1 0xa0
0x382 PUSH1 0x2
0x384 EXP
0x385 SUB
0x386 AND
0x387 SWAP2
0x388 PUSH4 0x949e8acd
0x38d SWAP2
0x38e PUSH1 0x4
0x390 DUP1
0x391 DUP4
0x392 ADD
0x393 SWAP3
0x394 PUSH1 0x20
0x396 SWAP3
0x397 SWAP2
0x398 SWAP1
0x399 DUP3
0x39a SWAP1
0x39b SUB
0x39c ADD
0x39d DUP2
0x39e DUP8
0x39f DUP8
0x3a0 DUP1
0x3a1 EXTCODESIZE
0x3a2 ISZERO
0x3a3 DUP1
0x3a4 ISZERO
0x3a5 PUSH2 0x3ad
0x3a8 JUMPI
---
0x34e: JUMPDEST 
0x34f: V303 = 0x1
0x351: V304 = S[0x1]
0x352: V305 = 0x40
0x355: V306 = M[0x40]
0x356: V307 = 0x949e8acd00000000000000000000000000000000000000000000000000000000
0x378: M[V306] = 0x949e8acd00000000000000000000000000000000000000000000000000000000
0x37a: V308 = M[0x40]
0x37b: V309 = 0x0
0x37e: V310 = 0x1
0x380: V311 = 0xa0
0x382: V312 = 0x2
0x384: V313 = EXP 0x2 0xa0
0x385: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x386: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x388: V316 = 0x949e8acd
0x38e: V317 = 0x4
0x392: V318 = ADD V306 0x4
0x394: V319 = 0x20
0x39b: V320 = SUB V306 V308
0x39c: V321 = ADD V320 0x4
0x3a1: V322 = EXTCODESIZE V315
0x3a2: V323 = ISZERO V322
0x3a4: V324 = ISZERO V323
0x3a5: V325 = 0x3ad
0x3a8: JUMPI 0x3ad V324
---
Entry stack: [V13, 0xe6]
Stack pops: 0
Stack additions: [0x0, V315, 0x949e8acd, V318, 0x20, V308, V321, V308, 0x0, V315, V323]
Exit stack: [V13, 0xe6, 0x0, V315, 0x949e8acd, V318, 0x20, V308, V321, V308, 0x0, V315, V323]

================================

Block 0x3a9
[0x3a9:0x3ac]
---
Predecessors: [0x34e]
Successors: []
---
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac REVERT
---
0x3a9: V326 = 0x0
0x3ac: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe6, 0x0, V315, 0x949e8acd, V318, 0x20, V308, V321, V308, 0x0, V315, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe6, 0x0, V315, 0x949e8acd, V318, 0x20, V308, V321, V308, 0x0, V315, V323]

================================

Block 0x3ad
[0x3ad:0x3b7]
---
Predecessors: [0x34e]
Successors: [0x3b8, 0x3c1]
---
0x3ad JUMPDEST
0x3ae POP
0x3af GAS
0x3b0 CALL
0x3b1 ISZERO
0x3b2 DUP1
0x3b3 ISZERO
0x3b4 PUSH2 0x3c1
0x3b7 JUMPI
---
0x3ad: JUMPDEST 
0x3af: V327 = GAS
0x3b0: V328 = CALL V327 V315 0x0 V308 V321 V308 0x20
0x3b1: V329 = ISZERO V328
0x3b3: V330 = ISZERO V329
0x3b4: V331 = 0x3c1
0x3b7: JUMPI 0x3c1 V330
---
Entry stack: [V13, 0xe6, 0x0, V315, 0x949e8acd, V318, 0x20, V308, V321, V308, 0x0, V315, V323]
Stack pops: 7
Stack additions: [V329]
Exit stack: [V13, 0xe6, 0x0, V315, 0x949e8acd, V318, V329]

================================

Block 0x3b8
[0x3b8:0x3c0]
---
Predecessors: [0x3ad]
Successors: []
---
0x3b8 RETURNDATASIZE
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc RETURNDATACOPY
0x3bd RETURNDATASIZE
0x3be PUSH1 0x0
0x3c0 REVERT
---
0x3b8: V332 = RETURNDATASIZE
0x3b9: V333 = 0x0
0x3bc: RETURNDATACOPY 0x0 0x0 V332
0x3bd: V334 = RETURNDATASIZE
0x3be: V335 = 0x0
0x3c0: REVERT 0x0 V334
---
Entry stack: [V13, 0xe6, 0x0, V315, 0x949e8acd, V318, V329]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe6, 0x0, V315, 0x949e8acd, V318, V329]

================================

Block 0x3c1
[0x3c1:0x3d2]
---
Predecessors: [0x3ad]
Successors: [0x3d3, 0x3d7]
---
0x3c1 JUMPDEST
0x3c2 POP
0x3c3 POP
0x3c4 POP
0x3c5 POP
0x3c6 PUSH1 0x40
0x3c8 MLOAD
0x3c9 RETURNDATASIZE
0x3ca PUSH1 0x20
0x3cc DUP2
0x3cd LT
0x3ce ISZERO
0x3cf PUSH2 0x3d7
0x3d2 JUMPI
---
0x3c1: JUMPDEST 
0x3c6: V336 = 0x40
0x3c8: V337 = M[0x40]
0x3c9: V338 = RETURNDATASIZE
0x3ca: V339 = 0x20
0x3cd: V340 = LT V338 0x20
0x3ce: V341 = ISZERO V340
0x3cf: V342 = 0x3d7
0x3d2: JUMPI 0x3d7 V341
---
Entry stack: [V13, 0xe6, 0x0, V315, 0x949e8acd, V318, V329]
Stack pops: 4
Stack additions: [V337, V338]
Exit stack: [V13, 0xe6, 0x0, V337, V338]

================================

Block 0x3d3
[0x3d3:0x3d6]
---
Predecessors: [0x3c1]
Successors: []
---
0x3d3 PUSH1 0x0
0x3d5 DUP1
0x3d6 REVERT
---
0x3d3: V343 = 0x0
0x3d6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe6, 0x0, V337, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe6, 0x0, V337, V338]

================================

Block 0x3d7
[0x3d7:0x3dd]
---
Predecessors: [0x3c1]
Successors: [0xe6]
---
0x3d7 JUMPDEST
0x3d8 POP
0x3d9 MLOAD
0x3da SWAP1
0x3db POP
0x3dc SWAP1
0x3dd JUMP
---
0x3d7: JUMPDEST 
0x3d9: V344 = M[V337]
0x3dd: JUMP 0xe6
---
Entry stack: [V13, 0xe6, 0x0, V337, V338]
Stack pops: 4
Stack additions: [V344]
Exit stack: [V13, V344]

================================

Block 0x3de
[0x3de:0x3f5]
---
Predecessors: [0x13e]
Successors: [0x3f6, 0x3fa]
---
0x3de JUMPDEST
0x3df PUSH1 0x1
0x3e1 SLOAD
0x3e2 PUSH1 0x1
0x3e4 PUSH1 0xa0
0x3e6 PUSH1 0x2
0x3e8 EXP
0x3e9 SUB
0x3ea AND
0x3eb BALANCE
0x3ec PUSH1 0x0
0x3ee DUP3
0x3ef DUP3
0x3f0 GT
0x3f1 ISZERO
0x3f2 PUSH2 0x3fa
0x3f5 JUMPI
---
0x3de: JUMPDEST 
0x3df: V345 = 0x1
0x3e1: V346 = S[0x1]
0x3e2: V347 = 0x1
0x3e4: V348 = 0xa0
0x3e6: V349 = 0x2
0x3e8: V350 = EXP 0x2 0xa0
0x3e9: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ea: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x3eb: V353 = BALANCE V352
0x3ec: V354 = 0x0
0x3f0: V355 = GT V353 V112
0x3f1: V356 = ISZERO V355
0x3f2: V357 = 0x3fa
0x3f5: JUMPI 0x3fa V356
---
Entry stack: [V13, 0xa0, V110, V112]
Stack pops: 1
Stack additions: [S0, V353, 0x0]
Exit stack: [V13, 0xa0, V110, V112, V353, 0x0]

================================

Block 0x3f6
[0x3f6:0x3f9]
---
Predecessors: [0x3de]
Successors: []
---
0x3f6 PUSH1 0x0
0x3f8 DUP1
0x3f9 REVERT
---
0x3f6: V358 = 0x0
0x3f9: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V110, V112, V353, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V110, V112, V353, 0x0]

================================

Block 0x3fa
[0x3fa:0x407]
---
Predecessors: [0x3de]
Successors: [0x408, 0x40c]
---
0x3fa JUMPDEST
0x3fb CALLVALUE
0x3fc SWAP1
0x3fd POP
0x3fe DUP3
0x3ff CALLVALUE
0x400 DUP4
0x401 ADD
0x402 GT
0x403 ISZERO
0x404 PUSH2 0x40c
0x407 JUMPI
---
0x3fa: JUMPDEST 
0x3fb: V359 = CALLVALUE
0x3ff: V360 = CALLVALUE
0x401: V361 = ADD V353 V360
0x402: V362 = GT V361 V112
0x403: V363 = ISZERO V362
0x404: V364 = 0x40c
0x407: JUMPI 0x40c V363
---
Entry stack: [V13, 0xa0, V110, V112, V353, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V359]
Exit stack: [V13, 0xa0, V110, V112, V353, V359]

================================

Block 0x408
[0x408:0x40b]
---
Predecessors: [0x3fa]
Successors: [0x40c]
---
0x408 POP
0x409 DUP1
0x40a DUP3
0x40b SUB
---
0x40b: V365 = SUB V112 V353
---
Entry stack: [V13, 0xa0, V110, V112, V353, V359]
Stack pops: 3
Stack additions: [S2, S1, V365]
Exit stack: [V13, 0xa0, V110, V112, V353, V365]

================================

Block 0x40c
[0x40c:0x471]
---
Predecessors: [0x3fa, 0x408]
Successors: [0x472, 0x476]
---
0x40c JUMPDEST
0x40d PUSH1 0x1
0x40f SLOAD
0x410 PUSH1 0x40
0x412 DUP1
0x413 MLOAD
0x414 PUSH32 0xf088d54700000000000000000000000000000000000000000000000000000000
0x435 DUP2
0x436 MSTORE
0x437 PUSH1 0x1
0x439 PUSH1 0xa0
0x43b PUSH1 0x2
0x43d EXP
0x43e SUB
0x43f DUP8
0x440 DUP2
0x441 AND
0x442 PUSH1 0x4
0x444 DUP4
0x445 ADD
0x446 MSTORE
0x447 SWAP2
0x448 MLOAD
0x449 SWAP2
0x44a SWAP1
0x44b SWAP3
0x44c AND
0x44d SWAP2
0x44e PUSH4 0xf088d547
0x453 SWAP2
0x454 DUP5
0x455 SWAP2
0x456 PUSH1 0x24
0x458 DUP1
0x459 DUP3
0x45a ADD
0x45b SWAP3
0x45c PUSH1 0x20
0x45e SWAP3
0x45f SWAP1
0x460 SWAP2
0x461 SWAP1
0x462 DUP3
0x463 SWAP1
0x464 SUB
0x465 ADD
0x466 DUP2
0x467 DUP6
0x468 DUP9
0x469 DUP1
0x46a EXTCODESIZE
0x46b ISZERO
0x46c DUP1
0x46d ISZERO
0x46e PUSH2 0x476
0x471 JUMPI
---
0x40c: JUMPDEST 
0x40d: V366 = 0x1
0x40f: V367 = S[0x1]
0x410: V368 = 0x40
0x413: V369 = M[0x40]
0x414: V370 = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x436: M[V369] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x437: V371 = 0x1
0x439: V372 = 0xa0
0x43b: V373 = 0x2
0x43d: V374 = EXP 0x2 0xa0
0x43e: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x441: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x442: V377 = 0x4
0x445: V378 = ADD V369 0x4
0x446: M[V378] = V376
0x448: V379 = M[0x40]
0x44c: V380 = AND V367 0xffffffffffffffffffffffffffffffffffffffff
0x44e: V381 = 0xf088d547
0x456: V382 = 0x24
0x45a: V383 = ADD V369 0x24
0x45c: V384 = 0x20
0x464: V385 = SUB V369 V379
0x465: V386 = ADD V385 0x24
0x46a: V387 = EXTCODESIZE V380
0x46b: V388 = ISZERO V387
0x46d: V389 = ISZERO V388
0x46e: V390 = 0x476
0x471: JUMPI 0x476 V389
---
Entry stack: [V13, 0xa0, V110, V112, V353, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V380, 0xf088d547, S0, V383, 0x20, V379, V386, V379, S0, V380, V388]
Exit stack: [V13, 0xa0, V110, V112, V353, S0, V380, 0xf088d547, S0, V383, 0x20, V379, V386, V379, S0, V380, V388]

================================

Block 0x472
[0x472:0x475]
---
Predecessors: [0x40c]
Successors: []
---
0x472 PUSH1 0x0
0x474 DUP1
0x475 REVERT
---
0x472: V391 = 0x0
0x475: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V110, V112, V353, S11, V380, 0xf088d547, S8, V383, 0x20, V379, V386, V379, S2, V380, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V110, V112, V353, S11, V380, 0xf088d547, S8, V383, 0x20, V379, V386, V379, S2, V380, V388]

================================

Block 0x476
[0x476:0x480]
---
Predecessors: [0x40c]
Successors: [0x481, 0x48a]
---
0x476 JUMPDEST
0x477 POP
0x478 GAS
0x479 CALL
0x47a ISZERO
0x47b DUP1
0x47c ISZERO
0x47d PUSH2 0x48a
0x480 JUMPI
---
0x476: JUMPDEST 
0x478: V392 = GAS
0x479: V393 = CALL V392 V380 S2 V379 V386 V379 0x20
0x47a: V394 = ISZERO V393
0x47c: V395 = ISZERO V394
0x47d: V396 = 0x48a
0x480: JUMPI 0x48a V395
---
Entry stack: [V13, 0xa0, V110, V112, V353, S11, V380, 0xf088d547, S8, V383, 0x20, V379, V386, V379, S2, V380, V388]
Stack pops: 7
Stack additions: [V394]
Exit stack: [V13, 0xa0, V110, V112, V353, S11, V380, 0xf088d547, S8, V383, V394]

================================

Block 0x481
[0x481:0x489]
---
Predecessors: [0x476]
Successors: []
---
0x481 RETURNDATASIZE
0x482 PUSH1 0x0
0x484 DUP1
0x485 RETURNDATACOPY
0x486 RETURNDATASIZE
0x487 PUSH1 0x0
0x489 REVERT
---
0x481: V397 = RETURNDATASIZE
0x482: V398 = 0x0
0x485: RETURNDATACOPY 0x0 0x0 V397
0x486: V399 = RETURNDATASIZE
0x487: V400 = 0x0
0x489: REVERT 0x0 V399
---
Entry stack: [V13, 0xa0, V110, V112, V353, S5, V380, 0xf088d547, S2, V383, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V110, V112, V353, S5, V380, 0xf088d547, S2, V383, V394]

================================

Block 0x48a
[0x48a:0x49c]
---
Predecessors: [0x476]
Successors: [0x49d, 0x4a1]
---
0x48a JUMPDEST
0x48b POP
0x48c POP
0x48d POP
0x48e POP
0x48f POP
0x490 PUSH1 0x40
0x492 MLOAD
0x493 RETURNDATASIZE
0x494 PUSH1 0x20
0x496 DUP2
0x497 LT
0x498 ISZERO
0x499 PUSH2 0x4a1
0x49c JUMPI
---
0x48a: JUMPDEST 
0x490: V401 = 0x40
0x492: V402 = M[0x40]
0x493: V403 = RETURNDATASIZE
0x494: V404 = 0x20
0x497: V405 = LT V403 0x20
0x498: V406 = ISZERO V405
0x499: V407 = 0x4a1
0x49c: JUMPI 0x4a1 V406
---
Entry stack: [V13, 0xa0, V110, V112, V353, S5, V380, 0xf088d547, S2, V383, V394]
Stack pops: 5
Stack additions: [V402, V403]
Exit stack: [V13, 0xa0, V110, V112, V353, S5, V402, V403]

================================

Block 0x49d
[0x49d:0x4a0]
---
Predecessors: [0x48a]
Successors: []
---
0x49d PUSH1 0x0
0x49f DUP1
0x4a0 REVERT
---
0x49d: V408 = 0x0
0x4a0: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V110, V112, V353, S2, V402, V403]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V110, V112, V353, S2, V402, V403]

================================

Block 0x4a1
[0x4a1:0x4ad]
---
Predecessors: [0x48a]
Successors: [0x262, 0x4ae]
---
0x4a1 JUMPDEST
0x4a2 POP
0x4a3 POP
0x4a4 PUSH1 0x0
0x4a6 ADDRESS
0x4a7 BALANCE
0x4a8 GT
0x4a9 ISZERO
0x4aa PUSH2 0x262
0x4ad JUMPI
---
0x4a1: JUMPDEST 
0x4a4: V409 = 0x0
0x4a6: V410 = ADDRESS
0x4a7: V411 = BALANCE V410
0x4a8: V412 = GT V411 0x0
0x4a9: V413 = ISZERO V412
0x4aa: V414 = 0x262
0x4ad: JUMPI 0x262 V413
---
Entry stack: [V13, 0xa0, V110, V112, V353, S2, V402, V403]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xa0, V110, V112, V353, S2]

================================

Block 0x4ae
[0x4ae:0x4de]
---
Predecessors: [0x4a1]
Successors: [0x4df, 0x4e8]
---
0x4ae PUSH1 0x0
0x4b0 DUP1
0x4b1 SLOAD
0x4b2 PUSH1 0x40
0x4b4 MLOAD
0x4b5 PUSH1 0x1
0x4b7 PUSH1 0xa0
0x4b9 PUSH1 0x2
0x4bb EXP
0x4bc SUB
0x4bd SWAP1
0x4be SWAP2
0x4bf AND
0x4c0 SWAP2
0x4c1 ADDRESS
0x4c2 BALANCE
0x4c3 DUP1
0x4c4 ISZERO
0x4c5 PUSH2 0x8fc
0x4c8 MUL
0x4c9 SWAP3
0x4ca SWAP1
0x4cb SWAP2
0x4cc DUP2
0x4cd DUP2
0x4ce DUP2
0x4cf DUP6
0x4d0 DUP9
0x4d1 DUP9
0x4d2 CALL
0x4d3 SWAP4
0x4d4 POP
0x4d5 POP
0x4d6 POP
0x4d7 POP
0x4d8 ISZERO
0x4d9 DUP1
0x4da ISZERO
0x4db PUSH2 0x4e8
0x4de JUMPI
---
0x4ae: V415 = 0x0
0x4b1: V416 = S[0x0]
0x4b2: V417 = 0x40
0x4b4: V418 = M[0x40]
0x4b5: V419 = 0x1
0x4b7: V420 = 0xa0
0x4b9: V421 = 0x2
0x4bb: V422 = EXP 0x2 0xa0
0x4bc: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bf: V424 = AND V416 0xffffffffffffffffffffffffffffffffffffffff
0x4c1: V425 = ADDRESS
0x4c2: V426 = BALANCE V425
0x4c4: V427 = ISZERO V426
0x4c5: V428 = 0x8fc
0x4c8: V429 = MUL 0x8fc V427
0x4d2: V430 = CALL V429 V424 V426 V418 0x0 V418 0x0
0x4d8: V431 = ISZERO V430
0x4da: V432 = ISZERO V431
0x4db: V433 = 0x4e8
0x4de: JUMPI 0x4e8 V432
---
Entry stack: [V13, 0xa0, V110, V112, V353, S0]
Stack pops: 0
Stack additions: [V431]
Exit stack: [V13, 0xa0, V110, V112, V353, S0, V431]

================================

Block 0x4df
[0x4df:0x4e7]
---
Predecessors: [0x4ae]
Successors: []
---
0x4df RETURNDATASIZE
0x4e0 PUSH1 0x0
0x4e2 DUP1
0x4e3 RETURNDATACOPY
0x4e4 RETURNDATASIZE
0x4e5 PUSH1 0x0
0x4e7 REVERT
---
0x4df: V434 = RETURNDATASIZE
0x4e0: V435 = 0x0
0x4e3: RETURNDATACOPY 0x0 0x0 V434
0x4e4: V436 = RETURNDATASIZE
0x4e5: V437 = 0x0
0x4e7: REVERT 0x0 V436
---
Entry stack: [V13, 0xa0, V110, V112, V353, S1, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V110, V112, V353, S1, V431]

================================

Block 0x4e8
[0x4e8:0x4ee]
---
Predecessors: [0x4ae, 0x61c]
Successors: [0xa0]
---
0x4e8 JUMPDEST
0x4e9 POP
0x4ea POP
0x4eb POP
0x4ec POP
0x4ed POP
0x4ee JUMP
---
0x4e8: JUMPDEST 
0x4ee: JUMP 0xa0
---
Entry stack: [V13, 0xa0, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x4ef
[0x4ef:0x501]
---
Predecessors: [0x161]
Successors: [0x502, 0x506]
---
0x4ef JUMPDEST
0x4f0 PUSH1 0x0
0x4f2 SLOAD
0x4f3 PUSH1 0x1
0x4f5 PUSH1 0xa0
0x4f7 PUSH1 0x2
0x4f9 EXP
0x4fa SUB
0x4fb AND
0x4fc CALLER
0x4fd EQ
0x4fe PUSH2 0x506
0x501 JUMPI
---
0x4ef: JUMPDEST 
0x4f0: V438 = 0x0
0x4f2: V439 = S[0x0]
0x4f3: V440 = 0x1
0x4f5: V441 = 0xa0
0x4f7: V442 = 0x2
0x4f9: V443 = EXP 0x2 0xa0
0x4fa: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fb: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x4fc: V446 = CALLER
0x4fd: V447 = EQ V446 V445
0x4fe: V448 = 0x506
0x501: JUMPI 0x506 V447
---
Entry stack: [V13, 0xa0, V126, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V126, V128]

================================

Block 0x502
[0x502:0x505]
---
Predecessors: [0x4ef]
Successors: []
---
0x502 PUSH1 0x0
0x504 DUP1
0x505 REVERT
---
0x502: V449 = 0x0
0x505: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V126, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V126, V128]

================================

Block 0x506
[0x506:0x570]
---
Predecessors: [0x4ef]
Successors: [0x571, 0x575]
---
0x506 JUMPDEST
0x507 PUSH1 0x1
0x509 SLOAD
0x50a PUSH1 0x40
0x50c DUP1
0x50d MLOAD
0x50e PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x52f DUP2
0x530 MSTORE
0x531 PUSH1 0x1
0x533 PUSH1 0xa0
0x535 PUSH1 0x2
0x537 EXP
0x538 SUB
0x539 DUP6
0x53a DUP2
0x53b AND
0x53c PUSH1 0x4
0x53e DUP4
0x53f ADD
0x540 MSTORE
0x541 PUSH1 0x24
0x543 DUP3
0x544 ADD
0x545 DUP6
0x546 SWAP1
0x547 MSTORE
0x548 SWAP2
0x549 MLOAD
0x54a SWAP2
0x54b SWAP1
0x54c SWAP3
0x54d AND
0x54e SWAP2
0x54f PUSH4 0xa9059cbb
0x554 SWAP2
0x555 PUSH1 0x44
0x557 DUP1
0x558 DUP4
0x559 ADD
0x55a SWAP3
0x55b PUSH1 0x20
0x55d SWAP3
0x55e SWAP2
0x55f SWAP1
0x560 DUP3
0x561 SWAP1
0x562 SUB
0x563 ADD
0x564 DUP2
0x565 PUSH1 0x0
0x567 DUP8
0x568 DUP1
0x569 EXTCODESIZE
0x56a ISZERO
0x56b DUP1
0x56c ISZERO
0x56d PUSH2 0x575
0x570 JUMPI
---
0x506: JUMPDEST 
0x507: V450 = 0x1
0x509: V451 = S[0x1]
0x50a: V452 = 0x40
0x50d: V453 = M[0x40]
0x50e: V454 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x530: M[V453] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x531: V455 = 0x1
0x533: V456 = 0xa0
0x535: V457 = 0x2
0x537: V458 = EXP 0x2 0xa0
0x538: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53b: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x53c: V461 = 0x4
0x53f: V462 = ADD V453 0x4
0x540: M[V462] = V460
0x541: V463 = 0x24
0x544: V464 = ADD V453 0x24
0x547: M[V464] = V128
0x549: V465 = M[0x40]
0x54d: V466 = AND V451 0xffffffffffffffffffffffffffffffffffffffff
0x54f: V467 = 0xa9059cbb
0x555: V468 = 0x44
0x559: V469 = ADD V453 0x44
0x55b: V470 = 0x20
0x562: V471 = SUB V453 V465
0x563: V472 = ADD V471 0x44
0x565: V473 = 0x0
0x569: V474 = EXTCODESIZE V466
0x56a: V475 = ISZERO V474
0x56c: V476 = ISZERO V475
0x56d: V477 = 0x575
0x570: JUMPI 0x575 V476
---
Entry stack: [V13, 0xa0, V126, V128]
Stack pops: 2
Stack additions: [S1, S0, V466, 0xa9059cbb, V469, 0x20, V465, V472, V465, 0x0, V466, V475]
Exit stack: [V13, 0xa0, V126, V128, V466, 0xa9059cbb, V469, 0x20, V465, V472, V465, 0x0, V466, V475]

================================

Block 0x571
[0x571:0x574]
---
Predecessors: [0x506]
Successors: []
---
0x571 PUSH1 0x0
0x573 DUP1
0x574 REVERT
---
0x571: V478 = 0x0
0x574: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V126, V128, V466, 0xa9059cbb, V469, 0x20, V465, V472, V465, 0x0, V466, V475]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V126, V128, V466, 0xa9059cbb, V469, 0x20, V465, V472, V465, 0x0, V466, V475]

================================

Block 0x575
[0x575:0x57f]
---
Predecessors: [0x506]
Successors: [0x580, 0x589]
---
0x575 JUMPDEST
0x576 POP
0x577 GAS
0x578 CALL
0x579 ISZERO
0x57a DUP1
0x57b ISZERO
0x57c PUSH2 0x589
0x57f JUMPI
---
0x575: JUMPDEST 
0x577: V479 = GAS
0x578: V480 = CALL V479 V466 0x0 V465 V472 V465 0x20
0x579: V481 = ISZERO V480
0x57b: V482 = ISZERO V481
0x57c: V483 = 0x589
0x57f: JUMPI 0x589 V482
---
Entry stack: [V13, 0xa0, V126, V128, V466, 0xa9059cbb, V469, 0x20, V465, V472, V465, 0x0, V466, V475]
Stack pops: 7
Stack additions: [V481]
Exit stack: [V13, 0xa0, V126, V128, V466, 0xa9059cbb, V469, V481]

================================

Block 0x580
[0x580:0x588]
---
Predecessors: [0x575]
Successors: []
---
0x580 RETURNDATASIZE
0x581 PUSH1 0x0
0x583 DUP1
0x584 RETURNDATACOPY
0x585 RETURNDATASIZE
0x586 PUSH1 0x0
0x588 REVERT
---
0x580: V484 = RETURNDATASIZE
0x581: V485 = 0x0
0x584: RETURNDATACOPY 0x0 0x0 V484
0x585: V486 = RETURNDATASIZE
0x586: V487 = 0x0
0x588: REVERT 0x0 V486
---
Entry stack: [V13, 0xa0, V126, V128, V466, 0xa9059cbb, V469, V481]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V126, V128, V466, 0xa9059cbb, V469, V481]

================================

Block 0x589
[0x589:0x59a]
---
Predecessors: [0x575]
Successors: [0x262, 0x59b]
---
0x589 JUMPDEST
0x58a POP
0x58b POP
0x58c POP
0x58d POP
0x58e PUSH1 0x40
0x590 MLOAD
0x591 RETURNDATASIZE
0x592 PUSH1 0x20
0x594 DUP2
0x595 LT
0x596 ISZERO
0x597 PUSH2 0x262
0x59a JUMPI
---
0x589: JUMPDEST 
0x58e: V488 = 0x40
0x590: V489 = M[0x40]
0x591: V490 = RETURNDATASIZE
0x592: V491 = 0x20
0x595: V492 = LT V490 0x20
0x596: V493 = ISZERO V492
0x597: V494 = 0x262
0x59a: JUMPI 0x262 V493
---
Entry stack: [V13, 0xa0, V126, V128, V466, 0xa9059cbb, V469, V481]
Stack pops: 4
Stack additions: [V489, V490]
Exit stack: [V13, 0xa0, V126, V128, V489, V490]

================================

Block 0x59b
[0x59b:0x59e]
---
Predecessors: [0x589]
Successors: []
---
0x59b PUSH1 0x0
0x59d DUP1
0x59e REVERT
---
0x59b: V495 = 0x0
0x59e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V126, V128, V489, V490]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V126, V128, V489, V490]

================================

Block 0x59f
[0x59f:0x5b1]
---
Predecessors: [0x185]
Successors: [0x5b2, 0x5b6]
---
0x59f JUMPDEST
0x5a0 PUSH1 0x0
0x5a2 SLOAD
0x5a3 PUSH1 0x1
0x5a5 PUSH1 0xa0
0x5a7 PUSH1 0x2
0x5a9 EXP
0x5aa SUB
0x5ab AND
0x5ac CALLER
0x5ad EQ
0x5ae PUSH2 0x5b6
0x5b1 JUMPI
---
0x59f: JUMPDEST 
0x5a0: V496 = 0x0
0x5a2: V497 = S[0x0]
0x5a3: V498 = 0x1
0x5a5: V499 = 0xa0
0x5a7: V500 = 0x2
0x5a9: V501 = EXP 0x2 0xa0
0x5aa: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ab: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x5ac: V504 = CALLER
0x5ad: V505 = EQ V504 V503
0x5ae: V506 = 0x5b6
0x5b1: JUMPI 0x5b6 V505
---
Entry stack: [V13, 0xa0, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V136]

================================

Block 0x5b2
[0x5b2:0x5b5]
---
Predecessors: [0x59f]
Successors: []
---
0x5b2 PUSH1 0x0
0x5b4 DUP1
0x5b5 REVERT
---
0x5b2: V507 = 0x0
0x5b5: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V136]

================================

Block 0x5b6
[0x5b6:0x617]
---
Predecessors: [0x59f]
Successors: [0x618, 0x61c]
---
0x5b6 JUMPDEST
0x5b7 PUSH1 0x1
0x5b9 SLOAD
0x5ba PUSH1 0x40
0x5bc DUP1
0x5bd MLOAD
0x5be PUSH32 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x5df DUP2
0x5e0 MSTORE
0x5e1 PUSH1 0x4
0x5e3 DUP2
0x5e4 ADD
0x5e5 DUP5
0x5e6 SWAP1
0x5e7 MSTORE
0x5e8 SWAP1
0x5e9 MLOAD
0x5ea PUSH1 0x1
0x5ec PUSH1 0xa0
0x5ee PUSH1 0x2
0x5f0 EXP
0x5f1 SUB
0x5f2 SWAP1
0x5f3 SWAP3
0x5f4 AND
0x5f5 SWAP2
0x5f6 PUSH4 0xe4849b32
0x5fb SWAP2
0x5fc PUSH1 0x24
0x5fe DUP1
0x5ff DUP3
0x600 ADD
0x601 SWAP3
0x602 PUSH1 0x0
0x604 SWAP3
0x605 SWAP1
0x606 SWAP2
0x607 SWAP1
0x608 DUP3
0x609 SWAP1
0x60a SUB
0x60b ADD
0x60c DUP2
0x60d DUP4
0x60e DUP8
0x60f DUP1
0x610 EXTCODESIZE
0x611 ISZERO
0x612 DUP1
0x613 ISZERO
0x614 PUSH2 0x61c
0x617 JUMPI
---
0x5b6: JUMPDEST 
0x5b7: V508 = 0x1
0x5b9: V509 = S[0x1]
0x5ba: V510 = 0x40
0x5bd: V511 = M[0x40]
0x5be: V512 = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x5e0: M[V511] = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x5e1: V513 = 0x4
0x5e4: V514 = ADD V511 0x4
0x5e7: M[V514] = V136
0x5e9: V515 = M[0x40]
0x5ea: V516 = 0x1
0x5ec: V517 = 0xa0
0x5ee: V518 = 0x2
0x5f0: V519 = EXP 0x2 0xa0
0x5f1: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f4: V521 = AND V509 0xffffffffffffffffffffffffffffffffffffffff
0x5f6: V522 = 0xe4849b32
0x5fc: V523 = 0x24
0x600: V524 = ADD V511 0x24
0x602: V525 = 0x0
0x60a: V526 = SUB V511 V515
0x60b: V527 = ADD V526 0x24
0x610: V528 = EXTCODESIZE V521
0x611: V529 = ISZERO V528
0x613: V530 = ISZERO V529
0x614: V531 = 0x61c
0x617: JUMPI 0x61c V530
---
Entry stack: [V13, 0xa0, V136]
Stack pops: 1
Stack additions: [S0, V521, 0xe4849b32, V524, 0x0, V515, V527, V515, 0x0, V521, V529]
Exit stack: [V13, 0xa0, V136, V521, 0xe4849b32, V524, 0x0, V515, V527, V515, 0x0, V521, V529]

================================

Block 0x618
[0x618:0x61b]
---
Predecessors: [0x5b6]
Successors: []
---
0x618 PUSH1 0x0
0x61a DUP1
0x61b REVERT
---
0x618: V532 = 0x0
0x61b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V136, V521, 0xe4849b32, V524, 0x0, V515, V527, V515, 0x0, V521, V529]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V136, V521, 0xe4849b32, V524, 0x0, V515, V527, V515, 0x0, V521, V529]

================================

Block 0x61c
[0x61c:0x626]
---
Predecessors: [0x5b6]
Successors: [0x4e8, 0x627]
---
0x61c JUMPDEST
0x61d POP
0x61e GAS
0x61f CALL
0x620 ISZERO
0x621 DUP1
0x622 ISZERO
0x623 PUSH2 0x4e8
0x626 JUMPI
---
0x61c: JUMPDEST 
0x61e: V533 = GAS
0x61f: V534 = CALL V533 V521 0x0 V515 V527 V515 0x0
0x620: V535 = ISZERO V534
0x622: V536 = ISZERO V535
0x623: V537 = 0x4e8
0x626: JUMPI 0x4e8 V536
---
Entry stack: [V13, 0xa0, V136, V521, 0xe4849b32, V524, 0x0, V515, V527, V515, 0x0, V521, V529]
Stack pops: 7
Stack additions: [V535]
Exit stack: [V13, 0xa0, V136, V521, 0xe4849b32, V524, V535]

================================

Block 0x627
[0x627:0x62f]
---
Predecessors: [0x61c]
Successors: []
---
0x627 RETURNDATASIZE
0x628 PUSH1 0x0
0x62a DUP1
0x62b RETURNDATACOPY
0x62c RETURNDATASIZE
0x62d PUSH1 0x0
0x62f REVERT
---
0x627: V538 = RETURNDATASIZE
0x628: V539 = 0x0
0x62b: RETURNDATACOPY 0x0 0x0 V538
0x62c: V540 = RETURNDATASIZE
0x62d: V541 = 0x0
0x62f: REVERT 0x0 V540
---
Entry stack: [V13, 0xa0, V136, V521, 0xe4849b32, V524, V535]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V136, V521, 0xe4849b32, V524, V535]

================================

Block 0x630
[0x630:0x642]
---
Predecessors: [0x19d]
Successors: [0x643, 0x647]
---
0x630 JUMPDEST
0x631 PUSH1 0x0
0x633 SLOAD
0x634 PUSH1 0x1
0x636 PUSH1 0xa0
0x638 PUSH1 0x2
0x63a EXP
0x63b SUB
0x63c AND
0x63d CALLER
0x63e EQ
0x63f PUSH2 0x647
0x642 JUMPI
---
0x630: JUMPDEST 
0x631: V542 = 0x0
0x633: V543 = S[0x0]
0x634: V544 = 0x1
0x636: V545 = 0xa0
0x638: V546 = 0x2
0x63a: V547 = EXP 0x2 0xa0
0x63b: V548 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63c: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V543
0x63d: V550 = CALLER
0x63e: V551 = EQ V550 V549
0x63f: V552 = 0x647
0x642: JUMPI 0x647 V551
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x643
[0x643:0x646]
---
Predecessors: [0x630]
Successors: []
---
0x643 PUSH1 0x0
0x645 DUP1
0x646 REVERT
---
0x643: V553 = 0x0
0x646: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x647
[0x647:0x695]
---
Predecessors: [0x630]
Successors: [0x24e, 0x696]
---
0x647 JUMPDEST
0x648 PUSH1 0x1
0x64a PUSH1 0x0
0x64c SWAP1
0x64d SLOAD
0x64e SWAP1
0x64f PUSH2 0x100
0x652 EXP
0x653 SWAP1
0x654 DIV
0x655 PUSH1 0x1
0x657 PUSH1 0xa0
0x659 PUSH1 0x2
0x65b EXP
0x65c SUB
0x65d AND
0x65e PUSH1 0x1
0x660 PUSH1 0xa0
0x662 PUSH1 0x2
0x664 EXP
0x665 SUB
0x666 AND
0x667 PUSH4 0xe9fad8ee
0x66c PUSH1 0x40
0x66e MLOAD
0x66f DUP2
0x670 PUSH4 0xffffffff
0x675 AND
0x676 PUSH1 0xe0
0x678 PUSH1 0x2
0x67a EXP
0x67b MUL
0x67c DUP2
0x67d MSTORE
0x67e PUSH1 0x4
0x680 ADD
0x681 PUSH1 0x0
0x683 PUSH1 0x40
0x685 MLOAD
0x686 DUP1
0x687 DUP4
0x688 SUB
0x689 DUP2
0x68a PUSH1 0x0
0x68c DUP8
0x68d DUP1
0x68e EXTCODESIZE
0x68f ISZERO
0x690 DUP1
0x691 ISZERO
0x692 PUSH2 0x24e
0x695 JUMPI
---
0x647: JUMPDEST 
0x648: V554 = 0x1
0x64a: V555 = 0x0
0x64d: V556 = S[0x1]
0x64f: V557 = 0x100
0x652: V558 = EXP 0x100 0x0
0x654: V559 = DIV V556 0x1
0x655: V560 = 0x1
0x657: V561 = 0xa0
0x659: V562 = 0x2
0x65b: V563 = EXP 0x2 0xa0
0x65c: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65d: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x65e: V566 = 0x1
0x660: V567 = 0xa0
0x662: V568 = 0x2
0x664: V569 = EXP 0x2 0xa0
0x665: V570 = SUB 0x10000000000000000000000000000000000000000 0x1
0x666: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x667: V572 = 0xe9fad8ee
0x66c: V573 = 0x40
0x66e: V574 = M[0x40]
0x670: V575 = 0xffffffff
0x675: V576 = AND 0xffffffff 0xe9fad8ee
0x676: V577 = 0xe0
0x678: V578 = 0x2
0x67a: V579 = EXP 0x2 0xe0
0x67b: V580 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe9fad8ee
0x67d: M[V574] = 0xe9fad8ee00000000000000000000000000000000000000000000000000000000
0x67e: V581 = 0x4
0x680: V582 = ADD 0x4 V574
0x681: V583 = 0x0
0x683: V584 = 0x40
0x685: V585 = M[0x40]
0x688: V586 = SUB V582 V585
0x68a: V587 = 0x0
0x68e: V588 = EXTCODESIZE V571
0x68f: V589 = ISZERO V588
0x691: V590 = ISZERO V589
0x692: V591 = 0x24e
0x695: JUMPI 0x24e V590
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: [V571, 0xe9fad8ee, V582, 0x0, V585, V586, V585, 0x0, V571, V589]
Exit stack: [V13, 0xa0, V571, 0xe9fad8ee, V582, 0x0, V585, V586, V585, 0x0, V571, V589]

================================

Block 0x696
[0x696:0x699]
---
Predecessors: [0x647]
Successors: []
---
0x696 PUSH1 0x0
0x698 DUP1
0x699 REVERT
---
0x696: V592 = 0x0
0x699: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V571, 0xe9fad8ee, V582, 0x0, V585, V586, V585, 0x0, V571, V589]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V571, 0xe9fad8ee, V582, 0x0, V585, V586, V585, 0x0, V571, V589]

================================

Block 0x69a
[0x69a:0x6ff]
---
Predecessors: [0x1a6]
Successors: [0x700, 0x704]
---
0x69a JUMPDEST
0x69b PUSH1 0x1
0x69d SLOAD
0x69e PUSH1 0x40
0x6a0 DUP1
0x6a1 MLOAD
0x6a2 PUSH32 0xf088d54700000000000000000000000000000000000000000000000000000000
0x6c3 DUP2
0x6c4 MSTORE
0x6c5 PUSH1 0x1
0x6c7 PUSH1 0xa0
0x6c9 PUSH1 0x2
0x6cb EXP
0x6cc SUB
0x6cd DUP5
0x6ce DUP2
0x6cf AND
0x6d0 PUSH1 0x4
0x6d2 DUP4
0x6d3 ADD
0x6d4 MSTORE
0x6d5 SWAP2
0x6d6 MLOAD
0x6d7 SWAP2
0x6d8 SWAP1
0x6d9 SWAP3
0x6da AND
0x6db SWAP2
0x6dc PUSH4 0xf088d547
0x6e1 SWAP2
0x6e2 CALLVALUE
0x6e3 SWAP2
0x6e4 PUSH1 0x24
0x6e6 DUP1
0x6e7 DUP3
0x6e8 ADD
0x6e9 SWAP3
0x6ea PUSH1 0x20
0x6ec SWAP3
0x6ed SWAP1
0x6ee SWAP2
0x6ef SWAP1
0x6f0 DUP3
0x6f1 SWAP1
0x6f2 SUB
0x6f3 ADD
0x6f4 DUP2
0x6f5 DUP6
0x6f6 DUP9
0x6f7 DUP1
0x6f8 EXTCODESIZE
0x6f9 ISZERO
0x6fa DUP1
0x6fb ISZERO
0x6fc PUSH2 0x704
0x6ff JUMPI
---
0x69a: JUMPDEST 
0x69b: V593 = 0x1
0x69d: V594 = S[0x1]
0x69e: V595 = 0x40
0x6a1: V596 = M[0x40]
0x6a2: V597 = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x6c4: M[V596] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x6c5: V598 = 0x1
0x6c7: V599 = 0xa0
0x6c9: V600 = 0x2
0x6cb: V601 = EXP 0x2 0xa0
0x6cc: V602 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cf: V603 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x6d0: V604 = 0x4
0x6d3: V605 = ADD V596 0x4
0x6d4: M[V605] = V603
0x6d6: V606 = M[0x40]
0x6da: V607 = AND V594 0xffffffffffffffffffffffffffffffffffffffff
0x6dc: V608 = 0xf088d547
0x6e2: V609 = CALLVALUE
0x6e4: V610 = 0x24
0x6e8: V611 = ADD V596 0x24
0x6ea: V612 = 0x20
0x6f2: V613 = SUB V596 V606
0x6f3: V614 = ADD V613 0x24
0x6f8: V615 = EXTCODESIZE V607
0x6f9: V616 = ISZERO V615
0x6fb: V617 = ISZERO V616
0x6fc: V618 = 0x704
0x6ff: JUMPI 0x704 V617
---
Entry stack: [V13, 0xa0, V152]
Stack pops: 1
Stack additions: [S0, V607, 0xf088d547, V609, V611, 0x20, V606, V614, V606, V609, V607, V616]
Exit stack: [V13, 0xa0, V152, V607, 0xf088d547, V609, V611, 0x20, V606, V614, V606, V609, V607, V616]

================================

Block 0x700
[0x700:0x703]
---
Predecessors: [0x69a]
Successors: []
---
0x700 PUSH1 0x0
0x702 DUP1
0x703 REVERT
---
0x700: V619 = 0x0
0x703: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V152, V607, 0xf088d547, V609, V611, 0x20, V606, V614, V606, V609, V607, V616]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V152, V607, 0xf088d547, V609, V611, 0x20, V606, V614, V606, V609, V607, V616]

================================

Block 0x704
[0x704:0x70e]
---
Predecessors: [0x69a]
Successors: [0x70f, 0x718]
---
0x704 JUMPDEST
0x705 POP
0x706 GAS
0x707 CALL
0x708 ISZERO
0x709 DUP1
0x70a ISZERO
0x70b PUSH2 0x718
0x70e JUMPI
---
0x704: JUMPDEST 
0x706: V620 = GAS
0x707: V621 = CALL V620 V607 V609 V606 V614 V606 0x20
0x708: V622 = ISZERO V621
0x70a: V623 = ISZERO V622
0x70b: V624 = 0x718
0x70e: JUMPI 0x718 V623
---
Entry stack: [V13, 0xa0, V152, V607, 0xf088d547, V609, V611, 0x20, V606, V614, V606, V609, V607, V616]
Stack pops: 7
Stack additions: [V622]
Exit stack: [V13, 0xa0, V152, V607, 0xf088d547, V609, V611, V622]

================================

Block 0x70f
[0x70f:0x717]
---
Predecessors: [0x704]
Successors: []
---
0x70f RETURNDATASIZE
0x710 PUSH1 0x0
0x712 DUP1
0x713 RETURNDATACOPY
0x714 RETURNDATASIZE
0x715 PUSH1 0x0
0x717 REVERT
---
0x70f: V625 = RETURNDATASIZE
0x710: V626 = 0x0
0x713: RETURNDATACOPY 0x0 0x0 V625
0x714: V627 = RETURNDATASIZE
0x715: V628 = 0x0
0x717: REVERT 0x0 V627
---
Entry stack: [V13, 0xa0, V152, V607, 0xf088d547, V609, V611, V622]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V152, V607, 0xf088d547, V609, V611, V622]

================================

Block 0x718
[0x718:0x72a]
---
Predecessors: [0x704]
Successors: [0x72b, 0x72f]
---
0x718 JUMPDEST
0x719 POP
0x71a POP
0x71b POP
0x71c POP
0x71d POP
0x71e PUSH1 0x40
0x720 MLOAD
0x721 RETURNDATASIZE
0x722 PUSH1 0x20
0x724 DUP2
0x725 LT
0x726 ISZERO
0x727 PUSH2 0x72f
0x72a JUMPI
---
0x718: JUMPDEST 
0x71e: V629 = 0x40
0x720: V630 = M[0x40]
0x721: V631 = RETURNDATASIZE
0x722: V632 = 0x20
0x725: V633 = LT V631 0x20
0x726: V634 = ISZERO V633
0x727: V635 = 0x72f
0x72a: JUMPI 0x72f V634
---
Entry stack: [V13, 0xa0, V152, V607, 0xf088d547, V609, V611, V622]
Stack pops: 5
Stack additions: [V630, V631]
Exit stack: [V13, 0xa0, V152, V630, V631]

================================

Block 0x72b
[0x72b:0x72e]
---
Predecessors: [0x718]
Successors: []
---
0x72b PUSH1 0x0
0x72d DUP1
0x72e REVERT
---
0x72b: V636 = 0x0
0x72e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V152, V630, V631]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V152, V630, V631]

================================

Block 0x72f
[0x72f:0x733]
---
Predecessors: [0x718]
Successors: [0xa0]
---
0x72f JUMPDEST
0x730 POP
0x731 POP
0x732 POP
0x733 JUMP
---
0x72f: JUMPDEST 
0x733: JUMP 0xa0
---
Entry stack: [V13, 0xa0, V152, V630, V631]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x734
[0x734:0x742]
---
Predecessors: [0x1c6]
Successors: [0x10d]
---
0x734 JUMPDEST
0x735 PUSH1 0x1
0x737 SLOAD
0x738 PUSH1 0x1
0x73a PUSH1 0xa0
0x73c PUSH1 0x2
0x73e EXP
0x73f SUB
0x740 AND
0x741 DUP2
0x742 JUMP
---
0x734: JUMPDEST 
0x735: V637 = 0x1
0x737: V638 = S[0x1]
0x738: V639 = 0x1
0x73a: V640 = 0xa0
0x73c: V641 = 0x2
0x73e: V642 = EXP 0x2 0xa0
0x73f: V643 = SUB 0x10000000000000000000000000000000000000000 0x1
0x740: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0x742: JUMP 0x10d
---
Entry stack: [V13, 0x10d]
Stack pops: 1
Stack additions: [S0, V644]
Exit stack: [V13, 0x10d, V644]

================================

Block 0x743
[0x743:0x755]
---
Predecessors: [0x1db]
Successors: [0x756, 0x75a]
---
0x743 JUMPDEST
0x744 PUSH1 0x0
0x746 SLOAD
0x747 PUSH1 0x1
0x749 PUSH1 0xa0
0x74b PUSH1 0x2
0x74d EXP
0x74e SUB
0x74f AND
0x750 CALLER
0x751 EQ
0x752 PUSH2 0x75a
0x755 JUMPI
---
0x743: JUMPDEST 
0x744: V645 = 0x0
0x746: V646 = S[0x0]
0x747: V647 = 0x1
0x749: V648 = 0xa0
0x74b: V649 = 0x2
0x74d: V650 = EXP 0x2 0xa0
0x74e: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74f: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0x750: V653 = CALLER
0x751: V654 = EQ V653 V652
0x752: V655 = 0x75a
0x755: JUMPI 0x75a V654
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x756
[0x756:0x759]
---
Predecessors: [0x743]
Successors: []
---
0x756 PUSH1 0x0
0x758 DUP1
0x759 REVERT
---
0x756: V656 = 0x0
0x759: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x75a
[0x75a:0x7a8]
---
Predecessors: [0x743]
Successors: [0x24e, 0x7a9]
---
0x75a JUMPDEST
0x75b PUSH1 0x1
0x75d PUSH1 0x0
0x75f SWAP1
0x760 SLOAD
0x761 SWAP1
0x762 PUSH2 0x100
0x765 EXP
0x766 SWAP1
0x767 DIV
0x768 PUSH1 0x1
0x76a PUSH1 0xa0
0x76c PUSH1 0x2
0x76e EXP
0x76f SUB
0x770 AND
0x771 PUSH1 0x1
0x773 PUSH1 0xa0
0x775 PUSH1 0x2
0x777 EXP
0x778 SUB
0x779 AND
0x77a PUSH4 0xfdb5a03e
0x77f PUSH1 0x40
0x781 MLOAD
0x782 DUP2
0x783 PUSH4 0xffffffff
0x788 AND
0x789 PUSH1 0xe0
0x78b PUSH1 0x2
0x78d EXP
0x78e MUL
0x78f DUP2
0x790 MSTORE
0x791 PUSH1 0x4
0x793 ADD
0x794 PUSH1 0x0
0x796 PUSH1 0x40
0x798 MLOAD
0x799 DUP1
0x79a DUP4
0x79b SUB
0x79c DUP2
0x79d PUSH1 0x0
0x79f DUP8
0x7a0 DUP1
0x7a1 EXTCODESIZE
0x7a2 ISZERO
0x7a3 DUP1
0x7a4 ISZERO
0x7a5 PUSH2 0x24e
0x7a8 JUMPI
---
0x75a: JUMPDEST 
0x75b: V657 = 0x1
0x75d: V658 = 0x0
0x760: V659 = S[0x1]
0x762: V660 = 0x100
0x765: V661 = EXP 0x100 0x0
0x767: V662 = DIV V659 0x1
0x768: V663 = 0x1
0x76a: V664 = 0xa0
0x76c: V665 = 0x2
0x76e: V666 = EXP 0x2 0xa0
0x76f: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x770: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0x771: V669 = 0x1
0x773: V670 = 0xa0
0x775: V671 = 0x2
0x777: V672 = EXP 0x2 0xa0
0x778: V673 = SUB 0x10000000000000000000000000000000000000000 0x1
0x779: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V668
0x77a: V675 = 0xfdb5a03e
0x77f: V676 = 0x40
0x781: V677 = M[0x40]
0x783: V678 = 0xffffffff
0x788: V679 = AND 0xffffffff 0xfdb5a03e
0x789: V680 = 0xe0
0x78b: V681 = 0x2
0x78d: V682 = EXP 0x2 0xe0
0x78e: V683 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xfdb5a03e
0x790: M[V677] = 0xfdb5a03e00000000000000000000000000000000000000000000000000000000
0x791: V684 = 0x4
0x793: V685 = ADD 0x4 V677
0x794: V686 = 0x0
0x796: V687 = 0x40
0x798: V688 = M[0x40]
0x79b: V689 = SUB V685 V688
0x79d: V690 = 0x0
0x7a1: V691 = EXTCODESIZE V674
0x7a2: V692 = ISZERO V691
0x7a4: V693 = ISZERO V692
0x7a5: V694 = 0x24e
0x7a8: JUMPI 0x24e V693
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: [V674, 0xfdb5a03e, V685, 0x0, V688, V689, V688, 0x0, V674, V692]
Exit stack: [V13, 0xa0, V674, 0xfdb5a03e, V685, 0x0, V688, V689, V688, 0x0, V674, V692]

================================

Block 0x7a9
[0x7a9:0x7ac]
---
Predecessors: [0x75a]
Successors: []
---
0x7a9 PUSH1 0x0
0x7ab DUP1
0x7ac REVERT
---
0x7a9: V695 = 0x0
0x7ac: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V674, 0xfdb5a03e, V685, 0x0, V688, V689, V688, 0x0, V674, V692]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V674, 0xfdb5a03e, V685, 0x0, V688, V689, V688, 0x0, V674, V692]

================================

Block 0x7ad
[0x7ad:0x7dc]
---
Predecessors: []
Successors: []
---
0x7ad STOP
0x7ae LOG1
0x7af PUSH6 0x627a7a723058
0x7b6 SHA3
0x7b7 MISSING 0xaf
0x7b8 MISSING 0x5f
0x7b9 MISSING 0x22
0x7ba MISSING 0xe1
0x7bb MISSING 0xe0
0x7bc CALLVALUE
0x7bd GASPRICE
0x7be XOR
0x7bf DIV
0x7c0 DUP14
0x7c1 SWAP5
0x7c2 MOD
0x7c3 MISSING 0xe4
0x7c4 GAS
0x7c5 ADDMOD
0x7c6 PUSH22 0x726e2ce3c2bca06900b1a32f46047a9f0029
---
0x7ad: STOP 
0x7ae: LOG S0 S1 S2
0x7af: V696 = 0x627a7a723058
0x7b6: V697 = SHA3 0x627a7a723058 S3
0x7b7: MISSING 0xaf
0x7b8: MISSING 0x5f
0x7b9: MISSING 0x22
0x7ba: MISSING 0xe1
0x7bb: MISSING 0xe0
0x7bc: V698 = CALLVALUE
0x7bd: V699 = GASPRICE
0x7be: V700 = XOR V699 V698
0x7bf: V701 = DIV V700 S0
0x7c2: V702 = MOD S4 V701
0x7c3: MISSING 0xe4
0x7c4: V703 = GAS
0x7c5: V704 = ADDMOD V703 S0 S1
0x7c6: V705 = 0x726e2ce3c2bca06900b1a32f46047a9f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V697, V702, S1, S2, S3, S13, S5, S6, S7, S8, S9, S10, S11, S12, S13, 0x726e2ce3c2bca06900b1a32f46047a9f0029, V704]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0xa2
Exit block: 0xa0
Body: 0xa0, 0xa2, 0xaa, 0xae, 0x1e4, 0x1f7, 0x1fb, 0x24a, 0x24e, 0x259, 0x262

Function 1:
Public function signature: 0x4311de8f
Entry block: 0xb7
Exit block: 0xa0
Body: 0xa0, 0xb7, 0xbf, 0xc3, 0x268, 0x29a, 0x2a3

Function 2:
Public function signature: 0x688abbf7
Entry block: 0xcc
Exit block: 0xe6
Body: 0xcc, 0xd4, 0xd8, 0xe6, 0x2a6, 0x309, 0x30d, 0x318, 0x321, 0x333, 0x337

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xf8
Exit block: 0x10d
Body: 0xf8, 0x100, 0x104, 0x10d, 0x33f

Function 4:
Public function signature: 0x949e8acd
Entry block: 0x129
Exit block: 0xe6
Body: 0xe6, 0x129, 0x131, 0x135, 0x34e, 0x3a9, 0x3ad, 0x3b8, 0x3c1, 0x3d3, 0x3d7

Function 5:
Public function signature: 0x9547dd5b
Entry block: 0x13e
Exit block: 0xa0
Body: 0xa0, 0x13e, 0x262, 0x3de, 0x3f6, 0x3fa, 0x408, 0x40c, 0x472, 0x476, 0x481, 0x48a, 0x49d, 0x4a1, 0x4ae, 0x4df, 0x4e8

Function 6:
Public function signature: 0xa9059cbb
Entry block: 0x155
Exit block: 0xa0
Body: 0xa0, 0x155, 0x15d, 0x161, 0x262, 0x4ef, 0x502, 0x506, 0x571, 0x575, 0x580, 0x589, 0x59b

Function 7:
Public function signature: 0xe4849b32
Entry block: 0x179
Exit block: 0xa0
Body: 0xa0, 0x179, 0x181, 0x185, 0x4e8, 0x59f, 0x5b2, 0x5b6, 0x618, 0x61c, 0x627

Function 8:
Public function signature: 0xe9fad8ee
Entry block: 0x191
Exit block: 0xa0
Body: 0xa0, 0x191, 0x199, 0x19d, 0x24e, 0x259, 0x262, 0x630, 0x643, 0x647, 0x696

Function 9:
Public function signature: 0xf088d547
Entry block: 0x1a6
Exit block: 0xa0
Body: 0xa0, 0x1a6, 0x69a, 0x700, 0x704, 0x70f, 0x718, 0x72b, 0x72f

Function 10:
Public function signature: 0xf6613ff5
Entry block: 0x1ba
Exit block: 0x10d
Body: 0x10d, 0x1ba, 0x1c2, 0x1c6, 0x734

Function 11:
Public function signature: 0xfdb5a03e
Entry block: 0x1cf
Exit block: 0xa0
Body: 0xa0, 0x1cf, 0x1d7, 0x1db, 0x24e, 0x259, 0x262, 0x743, 0x756, 0x75a, 0x7a9

Function 12:
Public fallback function
Entry block: 0xa0
Exit block: 0xa0
Body: 0xa0

