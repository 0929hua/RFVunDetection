Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4a
0xa: JUMPI 0x4a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x152]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6b9f96ea
0x3a EQ
0x3b PUSH2 0x152
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6b9f96ea
0x3a: V12 = EQ 0x6b9f96ea V10
0x3b: V13 = 0x152
0x3e: JUMPI 0x152 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x164]
---
0x3f DUP1
0x40 PUSH4 0xca325469
0x45 EQ
0x46 PUSH2 0x164
0x49 JUMPI
---
0x40: V14 = 0xca325469
0x45: V15 = EQ 0xca325469 V10
0x46: V16 = 0x164
0x49: JUMPI 0x164 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x4d]
---
Predecessors: [0x0, 0x3f]
Successors: [0x4e]
---
0x4a JUMPDEST
0x4b PUSH2 0x150
---
0x4a: JUMPDEST 
0x4b: V17 = 0x150
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V10, 0x150]

================================

Block 0x4e
[0x4e:0xb9]
---
Predecessors: [0x4a]
Successors: [0xba, 0xbf]
---
0x4e JUMPDEST
0x4f PUSH1 0x0
0x51 PUSH1 0x0
0x53 SWAP1
0x54 SLOAD
0x55 SWAP1
0x56 PUSH2 0x100
0x59 EXP
0x5a SWAP1
0x5b DIV
0x5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71 AND
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 CALLVALUE
0x89 PUSH1 0x0
0x8b CALLDATASIZE
0x8c PUSH1 0x40
0x8e MLOAD
0x8f DUP1
0x90 DUP4
0x91 DUP4
0x92 DUP1
0x93 DUP3
0x94 DUP5
0x95 CALLDATACOPY
0x96 DUP3
0x97 ADD
0x98 SWAP2
0x99 POP
0x9a POP
0x9b SWAP3
0x9c POP
0x9d POP
0x9e POP
0x9f PUSH1 0x0
0xa1 PUSH1 0x40
0xa3 MLOAD
0xa4 DUP1
0xa5 DUP4
0xa6 SUB
0xa7 DUP2
0xa8 DUP6
0xa9 DUP8
0xaa PUSH2 0x8796
0xad GAS
0xae SUB
0xaf CALL
0xb0 SWAP3
0xb1 POP
0xb2 POP
0xb3 POP
0xb4 ISZERO
0xb5 ISZERO
0xb6 PUSH2 0xbf
0xb9 JUMPI
---
0x4e: JUMPDEST 
0x4f: V18 = 0x0
0x51: V19 = 0x0
0x54: V20 = S[0x0]
0x56: V21 = 0x100
0x59: V22 = EXP 0x100 0x0
0x5b: V23 = DIV V20 0x1
0x5c: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x71: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x72: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x88: V28 = CALLVALUE
0x89: V29 = 0x0
0x8b: V30 = CALLDATASIZE
0x8c: V31 = 0x40
0x8e: V32 = M[0x40]
0x95: CALLDATACOPY V32 0x0 V30
0x97: V33 = ADD V32 V30
0x9f: V34 = 0x0
0xa1: V35 = 0x40
0xa3: V36 = M[0x40]
0xa6: V37 = SUB V33 V36
0xaa: V38 = 0x8796
0xad: V39 = GAS
0xae: V40 = SUB V39 0x8796
0xaf: V41 = CALL V40 V27 V28 V36 V37 V36 0x0
0xb4: V42 = ISZERO V41
0xb5: V43 = ISZERO V42
0xb6: V44 = 0xbf
0xb9: JUMPI 0xbf V43
---
Entry stack: [V10, 0x150]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x150]

================================

Block 0xba
[0xba:0xbe]
---
Predecessors: [0x4e]
Successors: []
---
0xba PUSH1 0x0
0xbc PUSH1 0x0
0xbe REVERT
---
0xba: V45 = 0x0
0xbc: V46 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V10, 0x150]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x150]

================================

Block 0xbf
[0xbf:0x14d]
---
Predecessors: [0x4e]
Successors: [0x14e]
---
0xbf JUMPDEST
0xc0 PUSH32 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
0xe1 CALLER
0xe2 CALLVALUE
0xe3 PUSH1 0x0
0xe5 CALLDATASIZE
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea DUP6
0xeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100 AND
0x101 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116 AND
0x117 DUP2
0x118 MSTORE
0x119 PUSH1 0x20
0x11b ADD
0x11c DUP5
0x11d DUP2
0x11e MSTORE
0x11f PUSH1 0x20
0x121 ADD
0x122 DUP1
0x123 PUSH1 0x20
0x125 ADD
0x126 DUP3
0x127 DUP2
0x128 SUB
0x129 DUP3
0x12a MSTORE
0x12b DUP5
0x12c DUP5
0x12d DUP3
0x12e DUP2
0x12f DUP2
0x130 MSTORE
0x131 PUSH1 0x20
0x133 ADD
0x134 SWAP3
0x135 POP
0x136 DUP1
0x137 DUP3
0x138 DUP5
0x139 CALLDATACOPY
0x13a DUP3
0x13b ADD
0x13c SWAP2
0x13d POP
0x13e POP
0x13f SWAP6
0x140 POP
0x141 POP
0x142 POP
0x143 POP
0x144 POP
0x145 POP
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a SWAP2
0x14b SUB
0x14c SWAP1
0x14d LOG1
---
0xbf: JUMPDEST 
0xc0: V47 = 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
0xe1: V48 = CALLER
0xe2: V49 = CALLVALUE
0xe3: V50 = 0x0
0xe5: V51 = CALLDATASIZE
0xe6: V52 = 0x40
0xe8: V53 = M[0x40]
0xeb: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x100: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x101: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x116: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x118: M[V53] = V57
0x119: V58 = 0x20
0x11b: V59 = ADD 0x20 V53
0x11e: M[V59] = V49
0x11f: V60 = 0x20
0x121: V61 = ADD 0x20 V59
0x123: V62 = 0x20
0x125: V63 = ADD 0x20 V61
0x128: V64 = SUB V63 V53
0x12a: M[V61] = V64
0x130: M[V63] = V51
0x131: V65 = 0x20
0x133: V66 = ADD 0x20 V63
0x139: CALLDATACOPY V66 0x0 V51
0x13b: V67 = ADD V66 V51
0x146: V68 = 0x40
0x148: V69 = M[0x40]
0x14b: V70 = SUB V67 V69
0x14d: LOG V69 V70 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
---
Entry stack: [V10, 0x150]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x150]

================================

Block 0x14e
[0x14e:0x14f]
---
Predecessors: [0xbf]
Successors: [0x150]
---
0x14e JUMPDEST
0x14f JUMP
---
0x14e: JUMPDEST 
0x14f: JUMP 0x150
---
Entry stack: [V10, 0x150]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x150
[0x150:0x151]
---
Predecessors: [0x14e]
Successors: []
---
0x150 JUMPDEST
0x151 STOP
---
0x150: JUMPDEST 
0x151: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x152
[0x152:0x158]
---
Predecessors: [0xb]
Successors: [0x159, 0x15a]
---
0x152 JUMPDEST
0x153 CALLVALUE
0x154 ISZERO
0x155 PUSH2 0x15a
0x158 JUMPI
---
0x152: JUMPDEST 
0x153: V71 = CALLVALUE
0x154: V72 = ISZERO V71
0x155: V73 = 0x15a
0x158: JUMPI 0x15a V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x159
[0x159:0x159]
---
Predecessors: [0x152]
Successors: []
---
0x159 INVALID
---
0x159: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15a
[0x15a:0x161]
---
Predecessors: [0x152]
Successors: [0x1b6]
---
0x15a JUMPDEST
0x15b PUSH2 0x162
0x15e PUSH2 0x1b6
0x161 JUMP
---
0x15a: JUMPDEST 
0x15b: V74 = 0x162
0x15e: V75 = 0x1b6
0x161: JUMP 0x1b6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x162]
Exit stack: [V10, 0x162]

================================

Block 0x162
[0x162:0x163]
---
Predecessors: [0x22f]
Successors: []
---
0x162 JUMPDEST
0x163 STOP
---
0x162: JUMPDEST 
0x163: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x164
[0x164:0x16a]
---
Predecessors: [0x3f]
Successors: [0x16b, 0x16c]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 ISZERO
0x167 PUSH2 0x16c
0x16a JUMPI
---
0x164: JUMPDEST 
0x165: V76 = CALLVALUE
0x166: V77 = ISZERO V76
0x167: V78 = 0x16c
0x16a: JUMPI 0x16c V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16b
[0x16b:0x16b]
---
Predecessors: [0x164]
Successors: []
---
0x16b INVALID
---
0x16b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x164]
Successors: [0x231]
---
0x16c JUMPDEST
0x16d PUSH2 0x174
0x170 PUSH2 0x231
0x173 JUMP
---
0x16c: JUMPDEST 
0x16d: V79 = 0x174
0x170: V80 = 0x231
0x173: JUMP 0x231
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x174]
Exit stack: [V10, 0x174]

================================

Block 0x174
[0x174:0x1b5]
---
Predecessors: [0x231]
Successors: []
---
0x174 JUMPDEST
0x175 PUSH1 0x40
0x177 MLOAD
0x178 DUP1
0x179 DUP3
0x17a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18f AND
0x190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a5 AND
0x1a6 DUP2
0x1a7 MSTORE
0x1a8 PUSH1 0x20
0x1aa ADD
0x1ab SWAP2
0x1ac POP
0x1ad POP
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 DUP1
0x1b2 SWAP2
0x1b3 SUB
0x1b4 SWAP1
0x1b5 RETURN
---
0x174: JUMPDEST 
0x175: V81 = 0x40
0x177: V82 = M[0x40]
0x17a: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x190: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x1a7: M[V82] = V86
0x1a8: V87 = 0x20
0x1aa: V88 = ADD 0x20 V82
0x1ae: V89 = 0x40
0x1b0: V90 = M[0x40]
0x1b3: V91 = SUB V88 V90
0x1b5: RETURN V90 V91
---
Entry stack: [V10, 0x174, V128]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x174]

================================

Block 0x1b6
[0x1b6:0x228]
---
Predecessors: [0x15a]
Successors: [0x229, 0x22e]
---
0x1b6 JUMPDEST
0x1b7 PUSH1 0x0
0x1b9 PUSH1 0x0
0x1bb SWAP1
0x1bc SLOAD
0x1bd SWAP1
0x1be PUSH2 0x100
0x1c1 EXP
0x1c2 SWAP1
0x1c3 DIV
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ef AND
0x1f0 ADDRESS
0x1f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x206 AND
0x207 BALANCE
0x208 PUSH1 0x40
0x20a MLOAD
0x20b DUP1
0x20c SWAP1
0x20d POP
0x20e PUSH1 0x0
0x210 PUSH1 0x40
0x212 MLOAD
0x213 DUP1
0x214 DUP4
0x215 SUB
0x216 DUP2
0x217 DUP6
0x218 DUP8
0x219 PUSH2 0x8796
0x21c GAS
0x21d SUB
0x21e CALL
0x21f SWAP3
0x220 POP
0x221 POP
0x222 POP
0x223 ISZERO
0x224 ISZERO
0x225 PUSH2 0x22e
0x228 JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V92 = 0x0
0x1b9: V93 = 0x0
0x1bc: V94 = S[0x0]
0x1be: V95 = 0x100
0x1c1: V96 = EXP 0x100 0x0
0x1c3: V97 = DIV V94 0x1
0x1c4: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1da: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ef: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1f0: V102 = ADDRESS
0x1f1: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x206: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x207: V105 = BALANCE V104
0x208: V106 = 0x40
0x20a: V107 = M[0x40]
0x20e: V108 = 0x0
0x210: V109 = 0x40
0x212: V110 = M[0x40]
0x215: V111 = SUB V107 V110
0x219: V112 = 0x8796
0x21c: V113 = GAS
0x21d: V114 = SUB V113 0x8796
0x21e: V115 = CALL V114 V101 V105 V110 V111 V110 0x0
0x223: V116 = ISZERO V115
0x224: V117 = ISZERO V116
0x225: V118 = 0x22e
0x228: JUMPI 0x22e V117
---
Entry stack: [V10, 0x162]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x162]

================================

Block 0x229
[0x229:0x22d]
---
Predecessors: [0x1b6]
Successors: []
---
0x229 PUSH1 0x0
0x22b PUSH1 0x0
0x22d REVERT
---
0x229: V119 = 0x0
0x22b: V120 = 0x0
0x22d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x162]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x162]

================================

Block 0x22e
[0x22e:0x22e]
---
Predecessors: [0x1b6]
Successors: [0x22f]
---
0x22e JUMPDEST
---
0x22e: JUMPDEST 
---
Entry stack: [V10, 0x162]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x162]

================================

Block 0x22f
[0x22f:0x230]
---
Predecessors: [0x22e]
Successors: [0x162]
---
0x22f JUMPDEST
0x230 JUMP
---
0x22f: JUMPDEST 
0x230: JUMP 0x162
---
Entry stack: [V10, 0x162]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x231
[0x231:0x256]
---
Predecessors: [0x16c]
Successors: [0x174]
---
0x231 JUMPDEST
0x232 PUSH1 0x0
0x234 PUSH1 0x0
0x236 SWAP1
0x237 SLOAD
0x238 SWAP1
0x239 PUSH2 0x100
0x23c EXP
0x23d SWAP1
0x23e DIV
0x23f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x254 AND
0x255 DUP2
0x256 JUMP
---
0x231: JUMPDEST 
0x232: V121 = 0x0
0x234: V122 = 0x0
0x237: V123 = S[0x0]
0x239: V124 = 0x100
0x23c: V125 = EXP 0x100 0x0
0x23e: V126 = DIV V123 0x1
0x23f: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x254: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x256: JUMP 0x174
---
Entry stack: [V10, 0x174]
Stack pops: 1
Stack additions: [S0, V128]
Exit stack: [V10, 0x174, V128]

================================

Block 0x257
[0x257:0x282]
---
Predecessors: []
Successors: []
---
0x257 STOP
0x258 LOG1
0x259 PUSH6 0x627a7a723058
0x260 SHA3
0x261 MISSING 0xdc
0x262 EQ
0x263 MISSING 0xb1
0x264 PUSH30 0x742db41c71268a1d4e93d14a91e4d86ef6ce0551f464dc280c9fc8490029
---
0x257: STOP 
0x258: LOG S0 S1 S2
0x259: V129 = 0x627a7a723058
0x260: V130 = SHA3 0x627a7a723058 S3
0x261: MISSING 0xdc
0x262: V131 = EQ S0 S1
0x263: MISSING 0xb1
0x264: V132 = 0x742db41c71268a1d4e93d14a91e4d86ef6ce0551f464dc280c9fc8490029
---
Entry stack: []
Stack pops: 0
Stack additions: [V130, V131, 0x742db41c71268a1d4e93d14a91e4d86ef6ce0551f464dc280c9fc8490029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6b9f96ea
Entry block: 0x152
Exit block: 0x162
Body: 0x152, 0x159, 0x15a, 0x162, 0x1b6, 0x229, 0x22e, 0x22f

Function 1:
Public function signature: 0xca325469
Entry block: 0x164
Exit block: 0x174
Body: 0x164, 0x16b, 0x16c, 0x174, 0x231

Function 2:
Public fallback function
Entry block: 0x4a
Exit block: 0x150
Body: 0x4a, 0x4e, 0xba, 0xbf, 0x14e, 0x150

