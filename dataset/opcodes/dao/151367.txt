Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x1c7]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0x1c7
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0x1c7
0x40: JUMPI 0x1c7 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x257]
---
0x41 DUP1
0x42 PUSH4 0x10639ea0
0x47 EQ
0x48 PUSH2 0x257
0x4b JUMPI
---
0x42: V15 = 0x10639ea0
0x47: V16 = EQ 0x10639ea0 V11
0x48: V17 = 0x257
0x4b: JUMPI 0x257 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x286]
---
0x4c DUP1
0x4d PUSH4 0x200d2ed2
0x52 EQ
0x53 PUSH2 0x286
0x56 JUMPI
---
0x4d: V18 = 0x200d2ed2
0x52: V19 = EQ 0x200d2ed2 V11
0x53: V20 = 0x286
0x56: JUMPI 0x286 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x31b]
---
0x57 DUP1
0x58 PUSH4 0x66d38203
0x5d EQ
0x5e PUSH2 0x31b
0x61 JUMPI
---
0x58: V21 = 0x66d38203
0x5d: V22 = EQ 0x66d38203 V11
0x5e: V23 = 0x31b
0x61: JUMPI 0x31b V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x35e]
---
0x62 DUP1
0x63 PUSH4 0x88d761f2
0x68 EQ
0x69 PUSH2 0x35e
0x6c JUMPI
---
0x63: V24 = 0x88d761f2
0x68: V25 = EQ 0x88d761f2 V11
0x69: V26 = 0x35e
0x6c: JUMPI 0x35e V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x38d]
---
0x6d DUP1
0x6e PUSH4 0xa0f52da0
0x73 EQ
0x74 PUSH2 0x38d
0x77 JUMPI
---
0x6e: V27 = 0xa0f52da0
0x73: V28 = EQ 0xa0f52da0 V11
0x74: V29 = 0x38d
0x77: JUMPI 0x38d V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x3e8]
---
0x78 DUP1
0x79 PUSH4 0xd0e30db0
0x7e EQ
0x7f PUSH2 0x3e8
0x82 JUMPI
---
0x79: V30 = 0xd0e30db0
0x7e: V31 = EQ 0xd0e30db0 V11
0x7f: V32 = 0x3e8
0x82: JUMPI 0x3e8 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x1c6]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 PUSH1 0x1
0x86 PUSH1 0x0
0x88 SWAP1
0x89 SLOAD
0x8a SWAP1
0x8b PUSH2 0x100
0x8e EXP
0x8f SWAP1
0x90 DIV
0x91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6 AND
0xa7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc AND
0xbd ADDRESS
0xbe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3 AND
0xd4 BALANCE
0xd5 PUSH1 0x40
0xd7 MLOAD
0xd8 DUP1
0xd9 DUP1
0xda PUSH32 0x6465706f73697428616464726573732900000000000000000000000000000000
0xfb DUP2
0xfc MSTORE
0xfd POP
0xfe PUSH1 0x10
0x100 ADD
0x101 SWAP1
0x102 POP
0x103 PUSH1 0x40
0x105 MLOAD
0x106 DUP1
0x107 SWAP2
0x108 SUB
0x109 SWAP1
0x10a SHA3
0x10b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x129 SWAP1
0x12a DIV
0x12b SWAP1
0x12c PUSH1 0x1
0x12e PUSH1 0x0
0x130 SWAP1
0x131 SLOAD
0x132 SWAP1
0x133 PUSH2 0x100
0x136 EXP
0x137 SWAP1
0x138 DIV
0x139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e AND
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP4
0x153 PUSH4 0xffffffff
0x158 AND
0x159 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x177 MUL
0x178 DUP2
0x179 MSTORE
0x17a PUSH1 0x4
0x17c ADD
0x17d DUP1
0x17e DUP3
0x17f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x194 AND
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab DUP2
0x1ac MSTORE
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 SWAP2
0x1b1 POP
0x1b2 POP
0x1b3 PUSH1 0x0
0x1b5 PUSH1 0x40
0x1b7 MLOAD
0x1b8 DUP1
0x1b9 DUP4
0x1ba SUB
0x1bb DUP2
0x1bc DUP6
0x1bd DUP9
0x1be GAS
0x1bf CALL
0x1c0 SWAP4
0x1c1 POP
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 STOP
---
0x83: JUMPDEST 
0x84: V33 = 0x1
0x86: V34 = 0x0
0x89: V35 = S[0x1]
0x8b: V36 = 0x100
0x8e: V37 = EXP 0x100 0x0
0x90: V38 = DIV V35 0x1
0x91: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xa7: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xbd: V43 = ADDRESS
0xbe: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xd4: V46 = BALANCE V45
0xd5: V47 = 0x40
0xd7: V48 = M[0x40]
0xda: V49 = 0x6465706f73697428616464726573732900000000000000000000000000000000
0xfc: M[V48] = 0x6465706f73697428616464726573732900000000000000000000000000000000
0xfe: V50 = 0x10
0x100: V51 = ADD 0x10 V48
0x103: V52 = 0x40
0x105: V53 = M[0x40]
0x108: V54 = SUB V51 V53
0x10a: V55 = SHA3 V53 V54
0x10b: V56 = 0x100000000000000000000000000000000000000000000000000000000
0x12a: V57 = DIV V55 0x100000000000000000000000000000000000000000000000000000000
0x12c: V58 = 0x1
0x12e: V59 = 0x0
0x131: V60 = S[0x1]
0x133: V61 = 0x100
0x136: V62 = EXP 0x100 0x0
0x138: V63 = DIV V60 0x1
0x139: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x14f: V66 = 0x40
0x151: V67 = M[0x40]
0x153: V68 = 0xffffffff
0x158: V69 = AND 0xffffffff V57
0x159: V70 = 0x100000000000000000000000000000000000000000000000000000000
0x177: V71 = MUL 0x100000000000000000000000000000000000000000000000000000000 V69
0x179: M[V67] = V71
0x17a: V72 = 0x4
0x17c: V73 = ADD 0x4 V67
0x17f: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x194: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x195: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x1ac: M[V73] = V77
0x1ad: V78 = 0x20
0x1af: V79 = ADD 0x20 V73
0x1b3: V80 = 0x0
0x1b5: V81 = 0x40
0x1b7: V82 = M[0x40]
0x1ba: V83 = SUB V79 V82
0x1be: V84 = GAS
0x1bf: V85 = CALL V84 V42 V46 V82 V83 V82 0x0
0x1c6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c7
[0x1c7:0x1ce]
---
Predecessors: [0xd]
Successors: [0x1cf, 0x1d3]
---
0x1c7 JUMPDEST
0x1c8 CALLVALUE
0x1c9 DUP1
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V86 = CALLVALUE
0x1ca: V87 = ISZERO V86
0x1cb: V88 = 0x1d3
0x1ce: JUMPI 0x1d3 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V11, V86]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1c7]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V89 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V11, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V86]

================================

Block 0x1d3
[0x1d3:0x1db]
---
Predecessors: [0x1c7]
Successors: [0x40a]
---
0x1d3 JUMPDEST
0x1d4 POP
0x1d5 PUSH2 0x1dc
0x1d8 PUSH2 0x40a
0x1db JUMP
---
0x1d3: JUMPDEST 
0x1d5: V90 = 0x1dc
0x1d8: V91 = 0x40a
0x1db: JUMP 0x40a
---
Entry stack: [V11, V86]
Stack pops: 1
Stack additions: [0x1dc]
Exit stack: [V11, 0x1dc]

================================

Block 0x1dc
[0x1dc:0x200]
---
Predecessors: [0x4a0]
Successors: [0x201]
---
0x1dc JUMPDEST
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 DUP1
0x1e1 DUP1
0x1e2 PUSH1 0x20
0x1e4 ADD
0x1e5 DUP3
0x1e6 DUP2
0x1e7 SUB
0x1e8 DUP3
0x1e9 MSTORE
0x1ea DUP4
0x1eb DUP2
0x1ec DUP2
0x1ed MLOAD
0x1ee DUP2
0x1ef MSTORE
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 SWAP2
0x1f4 POP
0x1f5 DUP1
0x1f6 MLOAD
0x1f7 SWAP1
0x1f8 PUSH1 0x20
0x1fa ADD
0x1fb SWAP1
0x1fc DUP1
0x1fd DUP4
0x1fe DUP4
0x1ff PUSH1 0x0
---
0x1dc: JUMPDEST 
0x1dd: V92 = 0x40
0x1df: V93 = M[0x40]
0x1e2: V94 = 0x20
0x1e4: V95 = ADD 0x20 V93
0x1e7: V96 = SUB V95 V93
0x1e9: M[V93] = V96
0x1ed: V97 = M[V270]
0x1ef: M[V95] = V97
0x1f0: V98 = 0x20
0x1f2: V99 = ADD 0x20 V95
0x1f6: V100 = M[V270]
0x1f8: V101 = 0x20
0x1fa: V102 = ADD 0x20 V270
0x1ff: V103 = 0x0
---
Entry stack: [V11, 0x1dc, V270]
Stack pops: 1
Stack additions: [S0, V93, V93, V99, V102, V100, V100, V99, V102, 0x0]
Exit stack: [V11, 0x1dc, V270, V93, V93, V99, V102, V100, V100, V99, V102, 0x0]

================================

Block 0x201
[0x201:0x209]
---
Predecessors: [0x1dc, 0x20a]
Successors: [0x20a, 0x21c]
---
0x201 JUMPDEST
0x202 DUP4
0x203 DUP2
0x204 LT
0x205 ISZERO
0x206 PUSH2 0x21c
0x209 JUMPI
---
0x201: JUMPDEST 
0x204: V104 = LT S0 V100
0x205: V105 = ISZERO V104
0x206: V106 = 0x21c
0x209: JUMPI 0x21c V105
---
Entry stack: [V11, 0x1dc, V270, V93, V93, V99, V102, V100, V100, V99, V102, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1dc, V270, V93, V93, V99, V102, V100, V100, V99, V102, S0]

================================

Block 0x20a
[0x20a:0x21b]
---
Predecessors: [0x201]
Successors: [0x201]
---
0x20a DUP1
0x20b DUP3
0x20c ADD
0x20d MLOAD
0x20e DUP2
0x20f DUP5
0x210 ADD
0x211 MSTORE
0x212 PUSH1 0x20
0x214 DUP2
0x215 ADD
0x216 SWAP1
0x217 POP
0x218 PUSH2 0x201
0x21b JUMP
---
0x20c: V107 = ADD V102 S0
0x20d: V108 = M[V107]
0x210: V109 = ADD V99 S0
0x211: M[V109] = V108
0x212: V110 = 0x20
0x215: V111 = ADD S0 0x20
0x218: V112 = 0x201
0x21b: JUMP 0x201
---
Entry stack: [V11, 0x1dc, V270, V93, V93, V99, V102, V100, V100, V99, V102, S0]
Stack pops: 3
Stack additions: [S2, S1, V111]
Exit stack: [V11, 0x1dc, V270, V93, V93, V99, V102, V100, V100, V99, V102, V111]

================================

Block 0x21c
[0x21c:0x22f]
---
Predecessors: [0x201]
Successors: [0x230, 0x249]
---
0x21c JUMPDEST
0x21d POP
0x21e POP
0x21f POP
0x220 POP
0x221 SWAP1
0x222 POP
0x223 SWAP1
0x224 DUP2
0x225 ADD
0x226 SWAP1
0x227 PUSH1 0x1f
0x229 AND
0x22a DUP1
0x22b ISZERO
0x22c PUSH2 0x249
0x22f JUMPI
---
0x21c: JUMPDEST 
0x225: V113 = ADD V100 V99
0x227: V114 = 0x1f
0x229: V115 = AND 0x1f V100
0x22b: V116 = ISZERO V115
0x22c: V117 = 0x249
0x22f: JUMPI 0x249 V116
---
Entry stack: [V11, 0x1dc, V270, V93, V93, V99, V102, V100, V100, V99, V102, S0]
Stack pops: 7
Stack additions: [V113, V115]
Exit stack: [V11, 0x1dc, V270, V93, V93, V113, V115]

================================

Block 0x230
[0x230:0x248]
---
Predecessors: [0x21c]
Successors: [0x249]
---
0x230 DUP1
0x231 DUP3
0x232 SUB
0x233 DUP1
0x234 MLOAD
0x235 PUSH1 0x1
0x237 DUP4
0x238 PUSH1 0x20
0x23a SUB
0x23b PUSH2 0x100
0x23e EXP
0x23f SUB
0x240 NOT
0x241 AND
0x242 DUP2
0x243 MSTORE
0x244 PUSH1 0x20
0x246 ADD
0x247 SWAP2
0x248 POP
---
0x232: V118 = SUB V113 V115
0x234: V119 = M[V118]
0x235: V120 = 0x1
0x238: V121 = 0x20
0x23a: V122 = SUB 0x20 V115
0x23b: V123 = 0x100
0x23e: V124 = EXP 0x100 V122
0x23f: V125 = SUB V124 0x1
0x240: V126 = NOT V125
0x241: V127 = AND V126 V119
0x243: M[V118] = V127
0x244: V128 = 0x20
0x246: V129 = ADD 0x20 V118
---
Entry stack: [V11, 0x1dc, V270, V93, V93, V113, V115]
Stack pops: 2
Stack additions: [V129, S0]
Exit stack: [V11, 0x1dc, V270, V93, V93, V129, V115]

================================

Block 0x249
[0x249:0x256]
---
Predecessors: [0x21c, 0x230]
Successors: []
---
0x249 JUMPDEST
0x24a POP
0x24b SWAP3
0x24c POP
0x24d POP
0x24e POP
0x24f PUSH1 0x40
0x251 MLOAD
0x252 DUP1
0x253 SWAP2
0x254 SUB
0x255 SWAP1
0x256 RETURN
---
0x249: JUMPDEST 
0x24f: V130 = 0x40
0x251: V131 = M[0x40]
0x254: V132 = SUB S1 V131
0x256: RETURN V131 V132
---
Entry stack: [V11, 0x1dc, V270, V93, V93, S1, V115]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x1dc]

================================

Block 0x257
[0x257:0x25e]
---
Predecessors: [0x41]
Successors: [0x25f, 0x263]
---
0x257 JUMPDEST
0x258 CALLVALUE
0x259 DUP1
0x25a ISZERO
0x25b PUSH2 0x263
0x25e JUMPI
---
0x257: JUMPDEST 
0x258: V133 = CALLVALUE
0x25a: V134 = ISZERO V133
0x25b: V135 = 0x263
0x25e: JUMPI 0x263 V134
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V133]
Exit stack: [V11, V133]

================================

Block 0x25f
[0x25f:0x262]
---
Predecessors: [0x257]
Successors: []
---
0x25f PUSH1 0x0
0x261 DUP1
0x262 REVERT
---
0x25f: V136 = 0x0
0x262: REVERT 0x0 0x0
---
Entry stack: [V11, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V133]

================================

Block 0x263
[0x263:0x26b]
---
Predecessors: [0x257]
Successors: [0x4a8]
---
0x263 JUMPDEST
0x264 POP
0x265 PUSH2 0x26c
0x268 PUSH2 0x4a8
0x26b JUMP
---
0x263: JUMPDEST 
0x265: V137 = 0x26c
0x268: V138 = 0x4a8
0x26b: JUMP 0x4a8
---
Entry stack: [V11, V133]
Stack pops: 1
Stack additions: [0x26c]
Exit stack: [V11, 0x26c]

================================

Block 0x26c
[0x26c:0x285]
---
Predecessors: [0x5bb]
Successors: []
---
0x26c JUMPDEST
0x26d PUSH1 0x40
0x26f MLOAD
0x270 DUP1
0x271 DUP3
0x272 ISZERO
0x273 ISZERO
0x274 ISZERO
0x275 ISZERO
0x276 DUP2
0x277 MSTORE
0x278 PUSH1 0x20
0x27a ADD
0x27b SWAP2
0x27c POP
0x27d POP
0x27e PUSH1 0x40
0x280 MLOAD
0x281 DUP1
0x282 SWAP2
0x283 SUB
0x284 SWAP1
0x285 RETURN
---
0x26c: JUMPDEST 
0x26d: V139 = 0x40
0x26f: V140 = M[0x40]
0x272: V141 = ISZERO 0x1
0x273: V142 = ISZERO 0x0
0x274: V143 = ISZERO 0x1
0x275: V144 = ISZERO 0x0
0x277: M[V140] = 0x1
0x278: V145 = 0x20
0x27a: V146 = ADD 0x20 V140
0x27e: V147 = 0x40
0x280: V148 = M[0x40]
0x283: V149 = SUB V146 V148
0x285: RETURN V148 V149
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x286
[0x286:0x28d]
---
Predecessors: [0x4c]
Successors: [0x28e, 0x292]
---
0x286 JUMPDEST
0x287 CALLVALUE
0x288 DUP1
0x289 ISZERO
0x28a PUSH2 0x292
0x28d JUMPI
---
0x286: JUMPDEST 
0x287: V150 = CALLVALUE
0x289: V151 = ISZERO V150
0x28a: V152 = 0x292
0x28d: JUMPI 0x292 V151
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V150]
Exit stack: [V11, V150]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x286]
Successors: []
---
0x28e PUSH1 0x0
0x290 DUP1
0x291 REVERT
---
0x28e: V153 = 0x0
0x291: REVERT 0x0 0x0
---
Entry stack: [V11, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V150]

================================

Block 0x292
[0x292:0x29a]
---
Predecessors: [0x286]
Successors: [0x604]
---
0x292 JUMPDEST
0x293 POP
0x294 PUSH2 0x29b
0x297 PUSH2 0x604
0x29a JUMP
---
0x292: JUMPDEST 
0x294: V154 = 0x29b
0x297: V155 = 0x604
0x29a: JUMP 0x604
---
Entry stack: [V11, V150]
Stack pops: 1
Stack additions: [0x29b]
Exit stack: [V11, 0x29b]

================================

Block 0x29b
[0x29b:0x31a]
---
Predecessors: [0x604]
Successors: []
---
0x29b JUMPDEST
0x29c PUSH1 0x40
0x29e MLOAD
0x29f DUP1
0x2a0 DUP5
0x2a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b6 AND
0x2b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cc AND
0x2cd DUP2
0x2ce MSTORE
0x2cf PUSH1 0x20
0x2d1 ADD
0x2d2 DUP4
0x2d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e8 AND
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff DUP2
0x300 MSTORE
0x301 PUSH1 0x20
0x303 ADD
0x304 DUP3
0x305 ISZERO
0x306 ISZERO
0x307 ISZERO
0x308 ISZERO
0x309 DUP2
0x30a MSTORE
0x30b PUSH1 0x20
0x30d ADD
0x30e SWAP4
0x30f POP
0x310 POP
0x311 POP
0x312 POP
0x313 PUSH1 0x40
0x315 MLOAD
0x316 DUP1
0x317 SWAP2
0x318 SUB
0x319 SWAP1
0x31a RETURN
---
0x29b: JUMPDEST 
0x29c: V156 = 0x40
0x29e: V157 = M[0x40]
0x2a1: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x2b7: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x2ce: M[V157] = V161
0x2cf: V162 = 0x20
0x2d1: V163 = ADD 0x20 V157
0x2d3: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e8: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x2e9: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x300: M[V163] = V167
0x301: V168 = 0x20
0x303: V169 = ADD 0x20 V163
0x305: V170 = ISZERO V395
0x306: V171 = ISZERO V170
0x307: V172 = ISZERO V171
0x308: V173 = ISZERO V172
0x30a: M[V169] = V173
0x30b: V174 = 0x20
0x30d: V175 = ADD 0x20 V169
0x313: V176 = 0x40
0x315: V177 = M[0x40]
0x318: V178 = SUB V175 V177
0x31a: RETURN V177 V178
---
Entry stack: [V11, V379, V387, V395]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x31b
[0x31b:0x322]
---
Predecessors: [0x57]
Successors: [0x323, 0x327]
---
0x31b JUMPDEST
0x31c CALLVALUE
0x31d DUP1
0x31e ISZERO
0x31f PUSH2 0x327
0x322 JUMPI
---
0x31b: JUMPDEST 
0x31c: V179 = CALLVALUE
0x31e: V180 = ISZERO V179
0x31f: V181 = 0x327
0x322: JUMPI 0x327 V180
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V179]
Exit stack: [V11, V179]

================================

Block 0x323
[0x323:0x326]
---
Predecessors: [0x31b]
Successors: []
---
0x323 PUSH1 0x0
0x325 DUP1
0x326 REVERT
---
0x323: V182 = 0x0
0x326: REVERT 0x0 0x0
---
Entry stack: [V11, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V179]

================================

Block 0x327
[0x327:0x35b]
---
Predecessors: [0x31b]
Successors: [0x66a]
---
0x327 JUMPDEST
0x328 POP
0x329 PUSH2 0x35c
0x32c PUSH1 0x4
0x32e DUP1
0x32f CALLDATASIZE
0x330 SUB
0x331 DUP2
0x332 ADD
0x333 SWAP1
0x334 DUP1
0x335 DUP1
0x336 CALLDATALOAD
0x337 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34c AND
0x34d SWAP1
0x34e PUSH1 0x20
0x350 ADD
0x351 SWAP1
0x352 SWAP3
0x353 SWAP2
0x354 SWAP1
0x355 POP
0x356 POP
0x357 POP
0x358 PUSH2 0x66a
0x35b JUMP
---
0x327: JUMPDEST 
0x329: V183 = 0x35c
0x32c: V184 = 0x4
0x32f: V185 = CALLDATASIZE
0x330: V186 = SUB V185 0x4
0x332: V187 = ADD 0x4 V186
0x336: V188 = CALLDATALOAD 0x4
0x337: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x34e: V191 = 0x20
0x350: V192 = ADD 0x20 0x4
0x358: V193 = 0x66a
0x35b: JUMP 0x66a
---
Entry stack: [V11, V179]
Stack pops: 1
Stack additions: [0x35c, V190]
Exit stack: [V11, 0x35c, V190]

================================

Block 0x35c
[0x35c:0x35d]
---
Predecessors: [0x71b]
Successors: []
---
0x35c JUMPDEST
0x35d STOP
---
0x35c: JUMPDEST 
0x35d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x35e
[0x35e:0x365]
---
Predecessors: [0x62]
Successors: [0x366, 0x36a]
---
0x35e JUMPDEST
0x35f CALLVALUE
0x360 DUP1
0x361 ISZERO
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x35e: JUMPDEST 
0x35f: V194 = CALLVALUE
0x361: V195 = ISZERO V194
0x362: V196 = 0x36a
0x365: JUMPI 0x36a V195
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V194]
Exit stack: [V11, V194]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x35e]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V197 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [V11, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V194]

================================

Block 0x36a
[0x36a:0x372]
---
Predecessors: [0x35e]
Successors: [0x77a]
---
0x36a JUMPDEST
0x36b POP
0x36c PUSH2 0x373
0x36f PUSH2 0x77a
0x372 JUMP
---
0x36a: JUMPDEST 
0x36c: V198 = 0x373
0x36f: V199 = 0x77a
0x372: JUMP 0x77a
---
Entry stack: [V11, V194]
Stack pops: 1
Stack additions: [0x373]
Exit stack: [V11, 0x373]

================================

Block 0x373
[0x373:0x38c]
---
Predecessors: [0x88d]
Successors: []
---
0x373 JUMPDEST
0x374 PUSH1 0x40
0x376 MLOAD
0x377 DUP1
0x378 DUP3
0x379 ISZERO
0x37a ISZERO
0x37b ISZERO
0x37c ISZERO
0x37d DUP2
0x37e MSTORE
0x37f PUSH1 0x20
0x381 ADD
0x382 SWAP2
0x383 POP
0x384 POP
0x385 PUSH1 0x40
0x387 MLOAD
0x388 DUP1
0x389 SWAP2
0x38a SUB
0x38b SWAP1
0x38c RETURN
---
0x373: JUMPDEST 
0x374: V200 = 0x40
0x376: V201 = M[0x40]
0x379: V202 = ISZERO 0x1
0x37a: V203 = ISZERO 0x0
0x37b: V204 = ISZERO 0x1
0x37c: V205 = ISZERO 0x0
0x37e: M[V201] = 0x1
0x37f: V206 = 0x20
0x381: V207 = ADD 0x20 V201
0x385: V208 = 0x40
0x387: V209 = M[0x40]
0x38a: V210 = SUB V207 V209
0x38c: RETURN V209 V210
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x38d
[0x38d:0x394]
---
Predecessors: [0x6d]
Successors: [0x395, 0x399]
---
0x38d JUMPDEST
0x38e CALLVALUE
0x38f DUP1
0x390 ISZERO
0x391 PUSH2 0x399
0x394 JUMPI
---
0x38d: JUMPDEST 
0x38e: V211 = CALLVALUE
0x390: V212 = ISZERO V211
0x391: V213 = 0x399
0x394: JUMPI 0x399 V212
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V211]
Exit stack: [V11, V211]

================================

Block 0x395
[0x395:0x398]
---
Predecessors: [0x38d]
Successors: []
---
0x395 PUSH1 0x0
0x397 DUP1
0x398 REVERT
---
0x395: V214 = 0x0
0x398: REVERT 0x0 0x0
---
Entry stack: [V11, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V211]

================================

Block 0x399
[0x399:0x3cd]
---
Predecessors: [0x38d]
Successors: [0x939]
---
0x399 JUMPDEST
0x39a POP
0x39b PUSH2 0x3ce
0x39e PUSH1 0x4
0x3a0 DUP1
0x3a1 CALLDATASIZE
0x3a2 SUB
0x3a3 DUP2
0x3a4 ADD
0x3a5 SWAP1
0x3a6 DUP1
0x3a7 DUP1
0x3a8 CALLDATALOAD
0x3a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3be AND
0x3bf SWAP1
0x3c0 PUSH1 0x20
0x3c2 ADD
0x3c3 SWAP1
0x3c4 SWAP3
0x3c5 SWAP2
0x3c6 SWAP1
0x3c7 POP
0x3c8 POP
0x3c9 POP
0x3ca PUSH2 0x939
0x3cd JUMP
---
0x399: JUMPDEST 
0x39b: V215 = 0x3ce
0x39e: V216 = 0x4
0x3a1: V217 = CALLDATASIZE
0x3a2: V218 = SUB V217 0x4
0x3a4: V219 = ADD 0x4 V218
0x3a8: V220 = CALLDATALOAD 0x4
0x3a9: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3be: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x3c0: V223 = 0x20
0x3c2: V224 = ADD 0x20 0x4
0x3ca: V225 = 0x939
0x3cd: JUMP 0x939
---
Entry stack: [V11, V211]
Stack pops: 1
Stack additions: [0x3ce, V222]
Exit stack: [V11, 0x3ce, V222]

================================

Block 0x3ce
[0x3ce:0x3e7]
---
Predecessors: [0xb46]
Successors: []
---
0x3ce JUMPDEST
0x3cf PUSH1 0x40
0x3d1 MLOAD
0x3d2 DUP1
0x3d3 DUP3
0x3d4 ISZERO
0x3d5 ISZERO
0x3d6 ISZERO
0x3d7 ISZERO
0x3d8 DUP2
0x3d9 MSTORE
0x3da PUSH1 0x20
0x3dc ADD
0x3dd SWAP2
0x3de POP
0x3df POP
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 DUP1
0x3e4 SWAP2
0x3e5 SUB
0x3e6 SWAP1
0x3e7 RETURN
---
0x3ce: JUMPDEST 
0x3cf: V226 = 0x40
0x3d1: V227 = M[0x40]
0x3d4: V228 = ISZERO {0x0, 0x1}
0x3d5: V229 = ISZERO V228
0x3d6: V230 = ISZERO V229
0x3d7: V231 = ISZERO V230
0x3d9: M[V227] = V231
0x3da: V232 = 0x20
0x3dc: V233 = ADD 0x20 V227
0x3e0: V234 = 0x40
0x3e2: V235 = M[0x40]
0x3e5: V236 = SUB V233 V235
0x3e7: RETURN V235 V236
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e8
[0x3e8:0x3ef]
---
Predecessors: [0x78]
Successors: [0xb4b]
---
0x3e8 JUMPDEST
0x3e9 PUSH2 0x3f0
0x3ec PUSH2 0xb4b
0x3ef JUMP
---
0x3e8: JUMPDEST 
0x3e9: V237 = 0x3f0
0x3ec: V238 = 0xb4b
0x3ef: JUMP 0xb4b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3f0]
Exit stack: [V11, 0x3f0]

================================

Block 0x3f0
[0x3f0:0x409]
---
Predecessors: [0xdbd]
Successors: []
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x40
0x3f3 MLOAD
0x3f4 DUP1
0x3f5 DUP3
0x3f6 ISZERO
0x3f7 ISZERO
0x3f8 ISZERO
0x3f9 ISZERO
0x3fa DUP2
0x3fb MSTORE
0x3fc PUSH1 0x20
0x3fe ADD
0x3ff SWAP2
0x400 POP
0x401 POP
0x402 PUSH1 0x40
0x404 MLOAD
0x405 DUP1
0x406 SWAP2
0x407 SUB
0x408 SWAP1
0x409 RETURN
---
0x3f0: JUMPDEST 
0x3f1: V239 = 0x40
0x3f3: V240 = M[0x40]
0x3f6: V241 = ISZERO {0x0, 0x1}
0x3f7: V242 = ISZERO V241
0x3f8: V243 = ISZERO V242
0x3f9: V244 = ISZERO V243
0x3fb: M[V240] = V244
0x3fc: V245 = 0x20
0x3fe: V246 = ADD 0x20 V240
0x402: V247 = 0x40
0x404: V248 = M[0x40]
0x407: V249 = SUB V246 V248
0x409: RETURN V248 V249
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x40a
[0x40a:0x459]
---
Predecessors: [0x1d3]
Successors: [0x45a, 0x4a0]
---
0x40a JUMPDEST
0x40b PUSH1 0x0
0x40d DUP1
0x40e SLOAD
0x40f PUSH1 0x1
0x411 DUP2
0x412 PUSH1 0x1
0x414 AND
0x415 ISZERO
0x416 PUSH2 0x100
0x419 MUL
0x41a SUB
0x41b AND
0x41c PUSH1 0x2
0x41e SWAP1
0x41f DIV
0x420 DUP1
0x421 PUSH1 0x1f
0x423 ADD
0x424 PUSH1 0x20
0x426 DUP1
0x427 SWAP2
0x428 DIV
0x429 MUL
0x42a PUSH1 0x20
0x42c ADD
0x42d PUSH1 0x40
0x42f MLOAD
0x430 SWAP1
0x431 DUP2
0x432 ADD
0x433 PUSH1 0x40
0x435 MSTORE
0x436 DUP1
0x437 SWAP3
0x438 SWAP2
0x439 SWAP1
0x43a DUP2
0x43b DUP2
0x43c MSTORE
0x43d PUSH1 0x20
0x43f ADD
0x440 DUP3
0x441 DUP1
0x442 SLOAD
0x443 PUSH1 0x1
0x445 DUP2
0x446 PUSH1 0x1
0x448 AND
0x449 ISZERO
0x44a PUSH2 0x100
0x44d MUL
0x44e SUB
0x44f AND
0x450 PUSH1 0x2
0x452 SWAP1
0x453 DIV
0x454 DUP1
0x455 ISZERO
0x456 PUSH2 0x4a0
0x459 JUMPI
---
0x40a: JUMPDEST 
0x40b: V250 = 0x0
0x40e: V251 = S[0x0]
0x40f: V252 = 0x1
0x412: V253 = 0x1
0x414: V254 = AND 0x1 V251
0x415: V255 = ISZERO V254
0x416: V256 = 0x100
0x419: V257 = MUL 0x100 V255
0x41a: V258 = SUB V257 0x1
0x41b: V259 = AND V258 V251
0x41c: V260 = 0x2
0x41f: V261 = DIV V259 0x2
0x421: V262 = 0x1f
0x423: V263 = ADD 0x1f V261
0x424: V264 = 0x20
0x428: V265 = DIV V263 0x20
0x429: V266 = MUL V265 0x20
0x42a: V267 = 0x20
0x42c: V268 = ADD 0x20 V266
0x42d: V269 = 0x40
0x42f: V270 = M[0x40]
0x432: V271 = ADD V270 V268
0x433: V272 = 0x40
0x435: M[0x40] = V271
0x43c: M[V270] = V261
0x43d: V273 = 0x20
0x43f: V274 = ADD 0x20 V270
0x442: V275 = S[0x0]
0x443: V276 = 0x1
0x446: V277 = 0x1
0x448: V278 = AND 0x1 V275
0x449: V279 = ISZERO V278
0x44a: V280 = 0x100
0x44d: V281 = MUL 0x100 V279
0x44e: V282 = SUB V281 0x1
0x44f: V283 = AND V282 V275
0x450: V284 = 0x2
0x453: V285 = DIV V283 0x2
0x455: V286 = ISZERO V285
0x456: V287 = 0x4a0
0x459: JUMPI 0x4a0 V286
---
Entry stack: [V11, 0x1dc]
Stack pops: 0
Stack additions: [V270, 0x0, V261, V274, 0x0, V285]
Exit stack: [V11, 0x1dc, V270, 0x0, V261, V274, 0x0, V285]

================================

Block 0x45a
[0x45a:0x461]
---
Predecessors: [0x40a]
Successors: [0x462, 0x475]
---
0x45a DUP1
0x45b PUSH1 0x1f
0x45d LT
0x45e PUSH2 0x475
0x461 JUMPI
---
0x45b: V288 = 0x1f
0x45d: V289 = LT 0x1f V285
0x45e: V290 = 0x475
0x461: JUMPI 0x475 V289
---
Entry stack: [V11, 0x1dc, V270, 0x0, V261, V274, 0x0, V285]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1dc, V270, 0x0, V261, V274, 0x0, V285]

================================

Block 0x462
[0x462:0x474]
---
Predecessors: [0x45a]
Successors: [0x4a0]
---
0x462 PUSH2 0x100
0x465 DUP1
0x466 DUP4
0x467 SLOAD
0x468 DIV
0x469 MUL
0x46a DUP4
0x46b MSTORE
0x46c SWAP2
0x46d PUSH1 0x20
0x46f ADD
0x470 SWAP2
0x471 PUSH2 0x4a0
0x474 JUMP
---
0x462: V291 = 0x100
0x467: V292 = S[0x0]
0x468: V293 = DIV V292 0x100
0x469: V294 = MUL V293 0x100
0x46b: M[V274] = V294
0x46d: V295 = 0x20
0x46f: V296 = ADD 0x20 V274
0x471: V297 = 0x4a0
0x474: JUMP 0x4a0
---
Entry stack: [V11, 0x1dc, V270, 0x0, V261, V274, 0x0, V285]
Stack pops: 3
Stack additions: [V296, S1, S0]
Exit stack: [V11, 0x1dc, V270, 0x0, V261, V296, 0x0, V285]

================================

Block 0x475
[0x475:0x482]
---
Predecessors: [0x45a]
Successors: [0x483]
---
0x475 JUMPDEST
0x476 DUP3
0x477 ADD
0x478 SWAP2
0x479 SWAP1
0x47a PUSH1 0x0
0x47c MSTORE
0x47d PUSH1 0x20
0x47f PUSH1 0x0
0x481 SHA3
0x482 SWAP1
---
0x475: JUMPDEST 
0x477: V298 = ADD V274 V285
0x47a: V299 = 0x0
0x47c: M[0x0] = 0x0
0x47d: V300 = 0x20
0x47f: V301 = 0x0
0x481: V302 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x1dc, V270, 0x0, V261, V274, 0x0, V285]
Stack pops: 3
Stack additions: [V298, V302, S2]
Exit stack: [V11, 0x1dc, V270, 0x0, V261, V298, V302, V274]

================================

Block 0x483
[0x483:0x496]
---
Predecessors: [0x475, 0x483]
Successors: [0x483, 0x497]
---
0x483 JUMPDEST
0x484 DUP2
0x485 SLOAD
0x486 DUP2
0x487 MSTORE
0x488 SWAP1
0x489 PUSH1 0x1
0x48b ADD
0x48c SWAP1
0x48d PUSH1 0x20
0x48f ADD
0x490 DUP1
0x491 DUP4
0x492 GT
0x493 PUSH2 0x483
0x496 JUMPI
---
0x483: JUMPDEST 
0x485: V303 = S[S1]
0x487: M[S0] = V303
0x489: V304 = 0x1
0x48b: V305 = ADD 0x1 S1
0x48d: V306 = 0x20
0x48f: V307 = ADD 0x20 S0
0x492: V308 = GT V298 V307
0x493: V309 = 0x483
0x496: JUMPI 0x483 V308
---
Entry stack: [V11, 0x1dc, V270, 0x0, V261, V298, S1, S0]
Stack pops: 3
Stack additions: [S2, V305, V307]
Exit stack: [V11, 0x1dc, V270, 0x0, V261, V298, V305, V307]

================================

Block 0x497
[0x497:0x49f]
---
Predecessors: [0x483]
Successors: [0x4a0]
---
0x497 DUP3
0x498 SWAP1
0x499 SUB
0x49a PUSH1 0x1f
0x49c AND
0x49d DUP3
0x49e ADD
0x49f SWAP2
---
0x499: V310 = SUB V307 V298
0x49a: V311 = 0x1f
0x49c: V312 = AND 0x1f V310
0x49e: V313 = ADD V298 V312
---
Entry stack: [V11, 0x1dc, V270, 0x0, V261, V298, V305, V307]
Stack pops: 3
Stack additions: [V313, S1, S2]
Exit stack: [V11, 0x1dc, V270, 0x0, V261, V313, V305, V298]

================================

Block 0x4a0
[0x4a0:0x4a7]
---
Predecessors: [0x40a, 0x462, 0x497]
Successors: [0x1dc]
---
0x4a0 JUMPDEST
0x4a1 POP
0x4a2 POP
0x4a3 POP
0x4a4 POP
0x4a5 POP
0x4a6 DUP2
0x4a7 JUMP
---
0x4a0: JUMPDEST 
0x4a7: JUMP 0x1dc
---
Entry stack: [V11, 0x1dc, V270, 0x0, V261, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x1dc, V270]

================================

Block 0x4a8
[0x4a8:0x501]
---
Predecessors: [0x263]
Successors: [0x502, 0x5bb]
---
0x4a8 JUMPDEST
0x4a9 PUSH1 0x0
0x4ab PUSH1 0x1
0x4ad PUSH1 0x0
0x4af SWAP1
0x4b0 SLOAD
0x4b1 SWAP1
0x4b2 PUSH2 0x100
0x4b5 EXP
0x4b6 SWAP1
0x4b7 DIV
0x4b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cd AND
0x4ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e3 AND
0x4e4 CALLER
0x4e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fa AND
0x4fb EQ
0x4fc ISZERO
0x4fd ISZERO
0x4fe PUSH2 0x5bb
0x501 JUMPI
---
0x4a8: JUMPDEST 
0x4a9: V314 = 0x0
0x4ab: V315 = 0x1
0x4ad: V316 = 0x0
0x4b0: V317 = S[0x1]
0x4b2: V318 = 0x100
0x4b5: V319 = EXP 0x100 0x0
0x4b7: V320 = DIV V317 0x1
0x4b8: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x4ce: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e3: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x4e4: V325 = CALLER
0x4e5: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x4fb: V328 = EQ V327 V324
0x4fc: V329 = ISZERO V328
0x4fd: V330 = ISZERO V329
0x4fe: V331 = 0x5bb
0x501: JUMPI 0x5bb V330
---
Entry stack: [V11, 0x26c]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x26c, 0x0]

================================

Block 0x502
[0x502:0x5ba]
---
Predecessors: [0x4a8]
Successors: []
---
0x502 PUSH1 0x40
0x504 MLOAD
0x505 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x526 DUP2
0x527 MSTORE
0x528 PUSH1 0x4
0x52a ADD
0x52b DUP1
0x52c DUP1
0x52d PUSH1 0x20
0x52f ADD
0x530 DUP3
0x531 DUP2
0x532 SUB
0x533 DUP3
0x534 MSTORE
0x535 PUSH1 0x47
0x537 DUP2
0x538 MSTORE
0x539 PUSH1 0x20
0x53b ADD
0x53c DUP1
0x53d PUSH32 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x55e DUP2
0x55f MSTORE
0x560 PUSH1 0x20
0x562 ADD
0x563 PUSH32 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x584 DUP2
0x585 MSTORE
0x586 PUSH1 0x20
0x588 ADD
0x589 PUSH32 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x5aa DUP2
0x5ab MSTORE
0x5ac POP
0x5ad PUSH1 0x60
0x5af ADD
0x5b0 SWAP2
0x5b1 POP
0x5b2 POP
0x5b3 PUSH1 0x40
0x5b5 MLOAD
0x5b6 DUP1
0x5b7 SWAP2
0x5b8 SUB
0x5b9 SWAP1
0x5ba REVERT
---
0x502: V332 = 0x40
0x504: V333 = M[0x40]
0x505: V334 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x527: M[V333] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x528: V335 = 0x4
0x52a: V336 = ADD 0x4 V333
0x52d: V337 = 0x20
0x52f: V338 = ADD 0x20 V336
0x532: V339 = SUB V338 V336
0x534: M[V336] = V339
0x535: V340 = 0x47
0x538: M[V338] = 0x47
0x539: V341 = 0x20
0x53b: V342 = ADD 0x20 V338
0x53d: V343 = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x55f: M[V342] = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x560: V344 = 0x20
0x562: V345 = ADD 0x20 V342
0x563: V346 = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x585: M[V345] = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x586: V347 = 0x20
0x588: V348 = ADD 0x20 V345
0x589: V349 = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x5ab: M[V348] = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x5ad: V350 = 0x60
0x5af: V351 = ADD 0x60 V342
0x5b3: V352 = 0x40
0x5b5: V353 = M[0x40]
0x5b8: V354 = SUB V351 V353
0x5ba: REVERT V353 V354
---
Entry stack: [V11, 0x26c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x26c, 0x0]

================================

Block 0x5bb
[0x5bb:0x603]
---
Predecessors: [0x4a8]
Successors: [0x26c]
---
0x5bb JUMPDEST
0x5bc PUSH1 0x0
0x5be PUSH1 0x2
0x5c0 PUSH1 0x0
0x5c2 PUSH2 0x100
0x5c5 EXP
0x5c6 DUP2
0x5c7 SLOAD
0x5c8 DUP2
0x5c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5de MUL
0x5df NOT
0x5e0 AND
0x5e1 SWAP1
0x5e2 DUP4
0x5e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f8 AND
0x5f9 MUL
0x5fa OR
0x5fb SWAP1
0x5fc SSTORE
0x5fd POP
0x5fe PUSH1 0x1
0x600 SWAP1
0x601 POP
0x602 SWAP1
0x603 JUMP
---
0x5bb: JUMPDEST 
0x5bc: V355 = 0x0
0x5be: V356 = 0x2
0x5c0: V357 = 0x0
0x5c2: V358 = 0x100
0x5c5: V359 = EXP 0x100 0x0
0x5c7: V360 = S[0x2]
0x5c9: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x5de: V362 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x5df: V363 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5e0: V364 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V360
0x5e3: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f8: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x5f9: V367 = MUL 0x0 0x1
0x5fa: V368 = OR 0x0 V364
0x5fc: S[0x2] = V368
0x5fe: V369 = 0x1
0x603: JUMP 0x26c
---
Entry stack: [V11, 0x26c, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x604
[0x604:0x669]
---
Predecessors: [0x292]
Successors: [0x29b]
---
0x604 JUMPDEST
0x605 PUSH1 0x0
0x607 DUP1
0x608 PUSH1 0x0
0x60a PUSH1 0x1
0x60c PUSH1 0x0
0x60e SWAP1
0x60f SLOAD
0x610 SWAP1
0x611 PUSH2 0x100
0x614 EXP
0x615 SWAP1
0x616 DIV
0x617 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62c AND
0x62d PUSH1 0x2
0x62f PUSH1 0x0
0x631 SWAP1
0x632 SLOAD
0x633 SWAP1
0x634 PUSH2 0x100
0x637 EXP
0x638 SWAP1
0x639 DIV
0x63a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64f AND
0x650 PUSH1 0x2
0x652 PUSH1 0x14
0x654 SWAP1
0x655 SLOAD
0x656 SWAP1
0x657 PUSH2 0x100
0x65a EXP
0x65b SWAP1
0x65c DIV
0x65d PUSH1 0xff
0x65f AND
0x660 SWAP3
0x661 POP
0x662 SWAP3
0x663 POP
0x664 SWAP3
0x665 POP
0x666 SWAP1
0x667 SWAP2
0x668 SWAP3
0x669 JUMP
---
0x604: JUMPDEST 
0x605: V370 = 0x0
0x608: V371 = 0x0
0x60a: V372 = 0x1
0x60c: V373 = 0x0
0x60f: V374 = S[0x1]
0x611: V375 = 0x100
0x614: V376 = EXP 0x100 0x0
0x616: V377 = DIV V374 0x1
0x617: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x62c: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x62d: V380 = 0x2
0x62f: V381 = 0x0
0x632: V382 = S[0x2]
0x634: V383 = 0x100
0x637: V384 = EXP 0x100 0x0
0x639: V385 = DIV V382 0x1
0x63a: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x64f: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x650: V388 = 0x2
0x652: V389 = 0x14
0x655: V390 = S[0x2]
0x657: V391 = 0x100
0x65a: V392 = EXP 0x100 0x14
0x65c: V393 = DIV V390 0x10000000000000000000000000000000000000000
0x65d: V394 = 0xff
0x65f: V395 = AND 0xff V393
0x669: JUMP 0x29b
---
Entry stack: [V11, 0x29b]
Stack pops: 1
Stack additions: [V379, V387, V395]
Exit stack: [V11, V379, V387, V395]

================================

Block 0x66a
[0x66a:0x687]
---
Predecessors: [0x327]
Successors: [0x688, 0x71b]
---
0x66a JUMPDEST
0x66b PUSH1 0x1
0x66d ISZERO
0x66e ISZERO
0x66f PUSH1 0x2
0x671 PUSH1 0x14
0x673 SWAP1
0x674 SLOAD
0x675 SWAP1
0x676 PUSH2 0x100
0x679 EXP
0x67a SWAP1
0x67b DIV
0x67c PUSH1 0xff
0x67e AND
0x67f ISZERO
0x680 ISZERO
0x681 EQ
0x682 ISZERO
0x683 ISZERO
0x684 PUSH2 0x71b
0x687 JUMPI
---
0x66a: JUMPDEST 
0x66b: V396 = 0x1
0x66d: V397 = ISZERO 0x1
0x66e: V398 = ISZERO 0x0
0x66f: V399 = 0x2
0x671: V400 = 0x14
0x674: V401 = S[0x2]
0x676: V402 = 0x100
0x679: V403 = EXP 0x100 0x14
0x67b: V404 = DIV V401 0x10000000000000000000000000000000000000000
0x67c: V405 = 0xff
0x67e: V406 = AND 0xff V404
0x67f: V407 = ISZERO V406
0x680: V408 = ISZERO V407
0x681: V409 = EQ V408 0x1
0x682: V410 = ISZERO V409
0x683: V411 = ISZERO V410
0x684: V412 = 0x71b
0x687: JUMPI 0x71b V411
---
Entry stack: [V11, 0x35c, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x35c, V190]

================================

Block 0x688
[0x688:0x71a]
---
Predecessors: [0x66a]
Successors: []
---
0x688 PUSH1 0x40
0x68a MLOAD
0x68b PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6ac DUP2
0x6ad MSTORE
0x6ae PUSH1 0x4
0x6b0 ADD
0x6b1 DUP1
0x6b2 DUP1
0x6b3 PUSH1 0x20
0x6b5 ADD
0x6b6 DUP3
0x6b7 DUP2
0x6b8 SUB
0x6b9 DUP3
0x6ba MSTORE
0x6bb PUSH1 0x35
0x6bd DUP2
0x6be MSTORE
0x6bf PUSH1 0x20
0x6c1 ADD
0x6c2 DUP1
0x6c3 PUSH32 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x6e4 DUP2
0x6e5 MSTORE
0x6e6 PUSH1 0x20
0x6e8 ADD
0x6e9 PUSH32 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x70a DUP2
0x70b MSTORE
0x70c POP
0x70d PUSH1 0x40
0x70f ADD
0x710 SWAP2
0x711 POP
0x712 POP
0x713 PUSH1 0x40
0x715 MLOAD
0x716 DUP1
0x717 SWAP2
0x718 SUB
0x719 SWAP1
0x71a REVERT
---
0x688: V413 = 0x40
0x68a: V414 = M[0x40]
0x68b: V415 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6ad: M[V414] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6ae: V416 = 0x4
0x6b0: V417 = ADD 0x4 V414
0x6b3: V418 = 0x20
0x6b5: V419 = ADD 0x20 V417
0x6b8: V420 = SUB V419 V417
0x6ba: M[V417] = V420
0x6bb: V421 = 0x35
0x6be: M[V419] = 0x35
0x6bf: V422 = 0x20
0x6c1: V423 = ADD 0x20 V419
0x6c3: V424 = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x6e5: M[V423] = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x6e6: V425 = 0x20
0x6e8: V426 = ADD 0x20 V423
0x6e9: V427 = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x70b: M[V426] = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x70d: V428 = 0x40
0x70f: V429 = ADD 0x40 V423
0x713: V430 = 0x40
0x715: V431 = M[0x40]
0x718: V432 = SUB V429 V431
0x71a: REVERT V431 V432
---
Entry stack: [V11, 0x35c, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x35c, V190]

================================

Block 0x71b
[0x71b:0x779]
---
Predecessors: [0x66a]
Successors: [0x35c]
---
0x71b JUMPDEST
0x71c DUP1
0x71d PUSH1 0x1
0x71f PUSH1 0x0
0x721 PUSH2 0x100
0x724 EXP
0x725 DUP2
0x726 SLOAD
0x727 DUP2
0x728 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73d MUL
0x73e NOT
0x73f AND
0x740 SWAP1
0x741 DUP4
0x742 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x757 AND
0x758 MUL
0x759 OR
0x75a SWAP1
0x75b SSTORE
0x75c POP
0x75d PUSH1 0x0
0x75f PUSH1 0x2
0x761 PUSH1 0x14
0x763 PUSH2 0x100
0x766 EXP
0x767 DUP2
0x768 SLOAD
0x769 DUP2
0x76a PUSH1 0xff
0x76c MUL
0x76d NOT
0x76e AND
0x76f SWAP1
0x770 DUP4
0x771 ISZERO
0x772 ISZERO
0x773 MUL
0x774 OR
0x775 SWAP1
0x776 SSTORE
0x777 POP
0x778 POP
0x779 JUMP
---
0x71b: JUMPDEST 
0x71d: V433 = 0x1
0x71f: V434 = 0x0
0x721: V435 = 0x100
0x724: V436 = EXP 0x100 0x0
0x726: V437 = S[0x1]
0x728: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x73d: V439 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x73e: V440 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x73f: V441 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V437
0x742: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x757: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x758: V444 = MUL V443 0x1
0x759: V445 = OR V444 V441
0x75b: S[0x1] = V445
0x75d: V446 = 0x0
0x75f: V447 = 0x2
0x761: V448 = 0x14
0x763: V449 = 0x100
0x766: V450 = EXP 0x100 0x14
0x768: V451 = S[0x2]
0x76a: V452 = 0xff
0x76c: V453 = MUL 0xff 0x10000000000000000000000000000000000000000
0x76d: V454 = NOT 0xff0000000000000000000000000000000000000000
0x76e: V455 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V451
0x771: V456 = ISZERO 0x0
0x772: V457 = ISZERO 0x1
0x773: V458 = MUL 0x0 0x10000000000000000000000000000000000000000
0x774: V459 = OR 0x0 V455
0x776: S[0x2] = V459
0x779: JUMP 0x35c
---
Entry stack: [V11, 0x35c, V190]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x77a
[0x77a:0x7d3]
---
Predecessors: [0x36a]
Successors: [0x7d4, 0x88d]
---
0x77a JUMPDEST
0x77b PUSH1 0x0
0x77d PUSH1 0x2
0x77f PUSH1 0x0
0x781 SWAP1
0x782 SLOAD
0x783 SWAP1
0x784 PUSH2 0x100
0x787 EXP
0x788 SWAP1
0x789 DIV
0x78a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79f AND
0x7a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b5 AND
0x7b6 CALLER
0x7b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cc AND
0x7cd EQ
0x7ce ISZERO
0x7cf ISZERO
0x7d0 PUSH2 0x88d
0x7d3 JUMPI
---
0x77a: JUMPDEST 
0x77b: V460 = 0x0
0x77d: V461 = 0x2
0x77f: V462 = 0x0
0x782: V463 = S[0x2]
0x784: V464 = 0x100
0x787: V465 = EXP 0x100 0x0
0x789: V466 = DIV V463 0x1
0x78a: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x79f: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x7a0: V469 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b5: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x7b6: V471 = CALLER
0x7b7: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cc: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x7cd: V474 = EQ V473 V470
0x7ce: V475 = ISZERO V474
0x7cf: V476 = ISZERO V475
0x7d0: V477 = 0x88d
0x7d3: JUMPI 0x88d V476
---
Entry stack: [V11, 0x373]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x373, 0x0]

================================

Block 0x7d4
[0x7d4:0x88c]
---
Predecessors: [0x77a]
Successors: []
---
0x7d4 PUSH1 0x40
0x7d6 MLOAD
0x7d7 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7f8 DUP2
0x7f9 MSTORE
0x7fa PUSH1 0x4
0x7fc ADD
0x7fd DUP1
0x7fe DUP1
0x7ff PUSH1 0x20
0x801 ADD
0x802 DUP3
0x803 DUP2
0x804 SUB
0x805 DUP3
0x806 MSTORE
0x807 PUSH1 0x43
0x809 DUP2
0x80a MSTORE
0x80b PUSH1 0x20
0x80d ADD
0x80e DUP1
0x80f PUSH32 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x830 DUP2
0x831 MSTORE
0x832 PUSH1 0x20
0x834 ADD
0x835 PUSH32 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x856 DUP2
0x857 MSTORE
0x858 PUSH1 0x20
0x85a ADD
0x85b PUSH32 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x87c DUP2
0x87d MSTORE
0x87e POP
0x87f PUSH1 0x60
0x881 ADD
0x882 SWAP2
0x883 POP
0x884 POP
0x885 PUSH1 0x40
0x887 MLOAD
0x888 DUP1
0x889 SWAP2
0x88a SUB
0x88b SWAP1
0x88c REVERT
---
0x7d4: V478 = 0x40
0x7d6: V479 = M[0x40]
0x7d7: V480 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7f9: M[V479] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7fa: V481 = 0x4
0x7fc: V482 = ADD 0x4 V479
0x7ff: V483 = 0x20
0x801: V484 = ADD 0x20 V482
0x804: V485 = SUB V484 V482
0x806: M[V482] = V485
0x807: V486 = 0x43
0x80a: M[V484] = 0x43
0x80b: V487 = 0x20
0x80d: V488 = ADD 0x20 V484
0x80f: V489 = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x831: M[V488] = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x832: V490 = 0x20
0x834: V491 = ADD 0x20 V488
0x835: V492 = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x857: M[V491] = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x858: V493 = 0x20
0x85a: V494 = ADD 0x20 V491
0x85b: V495 = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x87d: M[V494] = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x87f: V496 = 0x60
0x881: V497 = ADD 0x60 V488
0x885: V498 = 0x40
0x887: V499 = M[0x40]
0x88a: V500 = SUB V497 V499
0x88c: REVERT V499 V500
---
Entry stack: [V11, 0x373, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x373, 0x0]

================================

Block 0x88d
[0x88d:0x938]
---
Predecessors: [0x77a]
Successors: [0x373]
---
0x88d JUMPDEST
0x88e PUSH1 0x2
0x890 PUSH1 0x0
0x892 SWAP1
0x893 SLOAD
0x894 SWAP1
0x895 PUSH2 0x100
0x898 EXP
0x899 SWAP1
0x89a DIV
0x89b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b0 AND
0x8b1 PUSH1 0x1
0x8b3 PUSH1 0x0
0x8b5 PUSH2 0x100
0x8b8 EXP
0x8b9 DUP2
0x8ba SLOAD
0x8bb DUP2
0x8bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d1 MUL
0x8d2 NOT
0x8d3 AND
0x8d4 SWAP1
0x8d5 DUP4
0x8d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8eb AND
0x8ec MUL
0x8ed OR
0x8ee SWAP1
0x8ef SSTORE
0x8f0 POP
0x8f1 PUSH1 0x0
0x8f3 PUSH1 0x2
0x8f5 PUSH1 0x0
0x8f7 PUSH2 0x100
0x8fa EXP
0x8fb DUP2
0x8fc SLOAD
0x8fd DUP2
0x8fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x913 MUL
0x914 NOT
0x915 AND
0x916 SWAP1
0x917 DUP4
0x918 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92d AND
0x92e MUL
0x92f OR
0x930 SWAP1
0x931 SSTORE
0x932 POP
0x933 PUSH1 0x1
0x935 SWAP1
0x936 POP
0x937 SWAP1
0x938 JUMP
---
0x88d: JUMPDEST 
0x88e: V501 = 0x2
0x890: V502 = 0x0
0x893: V503 = S[0x2]
0x895: V504 = 0x100
0x898: V505 = EXP 0x100 0x0
0x89a: V506 = DIV V503 0x1
0x89b: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b0: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x8b1: V509 = 0x1
0x8b3: V510 = 0x0
0x8b5: V511 = 0x100
0x8b8: V512 = EXP 0x100 0x0
0x8ba: V513 = S[0x1]
0x8bc: V514 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d1: V515 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x8d2: V516 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8d3: V517 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V513
0x8d6: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x8eb: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x8ec: V520 = MUL V519 0x1
0x8ed: V521 = OR V520 V517
0x8ef: S[0x1] = V521
0x8f1: V522 = 0x0
0x8f3: V523 = 0x2
0x8f5: V524 = 0x0
0x8f7: V525 = 0x100
0x8fa: V526 = EXP 0x100 0x0
0x8fc: V527 = S[0x2]
0x8fe: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x913: V529 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x914: V530 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x915: V531 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V527
0x918: V532 = 0xffffffffffffffffffffffffffffffffffffffff
0x92d: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x92e: V534 = MUL 0x0 0x1
0x92f: V535 = OR 0x0 V531
0x931: S[0x2] = V535
0x933: V536 = 0x1
0x938: JUMP 0x373
---
Entry stack: [V11, 0x373, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x939
[0x939:0x992]
---
Predecessors: [0x399]
Successors: [0x993, 0xa4c]
---
0x939 JUMPDEST
0x93a PUSH1 0x0
0x93c PUSH1 0x1
0x93e PUSH1 0x0
0x940 SWAP1
0x941 SLOAD
0x942 SWAP1
0x943 PUSH2 0x100
0x946 EXP
0x947 SWAP1
0x948 DIV
0x949 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95e AND
0x95f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x974 AND
0x975 CALLER
0x976 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98b AND
0x98c EQ
0x98d ISZERO
0x98e ISZERO
0x98f PUSH2 0xa4c
0x992 JUMPI
---
0x939: JUMPDEST 
0x93a: V537 = 0x0
0x93c: V538 = 0x1
0x93e: V539 = 0x0
0x941: V540 = S[0x1]
0x943: V541 = 0x100
0x946: V542 = EXP 0x100 0x0
0x948: V543 = DIV V540 0x1
0x949: V544 = 0xffffffffffffffffffffffffffffffffffffffff
0x95e: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff V543
0x95f: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x974: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x975: V548 = CALLER
0x976: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x98b: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x98c: V551 = EQ V550 V547
0x98d: V552 = ISZERO V551
0x98e: V553 = ISZERO V552
0x98f: V554 = 0xa4c
0x992: JUMPI 0xa4c V553
---
Entry stack: [V11, 0x3ce, V222]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x3ce, V222, 0x0]

================================

Block 0x993
[0x993:0xa4b]
---
Predecessors: [0x939]
Successors: []
---
0x993 PUSH1 0x40
0x995 MLOAD
0x996 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x9b7 DUP2
0x9b8 MSTORE
0x9b9 PUSH1 0x4
0x9bb ADD
0x9bc DUP1
0x9bd DUP1
0x9be PUSH1 0x20
0x9c0 ADD
0x9c1 DUP3
0x9c2 DUP2
0x9c3 SUB
0x9c4 DUP3
0x9c5 MSTORE
0x9c6 PUSH1 0x46
0x9c8 DUP2
0x9c9 MSTORE
0x9ca PUSH1 0x20
0x9cc ADD
0x9cd DUP1
0x9ce PUSH32 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x9ef DUP2
0x9f0 MSTORE
0x9f1 PUSH1 0x20
0x9f3 ADD
0x9f4 PUSH32 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0xa15 DUP2
0xa16 MSTORE
0xa17 PUSH1 0x20
0xa19 ADD
0xa1a PUSH32 0x702062616e6b0000000000000000000000000000000000000000000000000000
0xa3b DUP2
0xa3c MSTORE
0xa3d POP
0xa3e PUSH1 0x60
0xa40 ADD
0xa41 SWAP2
0xa42 POP
0xa43 POP
0xa44 PUSH1 0x40
0xa46 MLOAD
0xa47 DUP1
0xa48 SWAP2
0xa49 SUB
0xa4a SWAP1
0xa4b REVERT
---
0x993: V555 = 0x40
0x995: V556 = M[0x40]
0x996: V557 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x9b8: M[V556] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x9b9: V558 = 0x4
0x9bb: V559 = ADD 0x4 V556
0x9be: V560 = 0x20
0x9c0: V561 = ADD 0x20 V559
0x9c3: V562 = SUB V561 V559
0x9c5: M[V559] = V562
0x9c6: V563 = 0x46
0x9c9: M[V561] = 0x46
0x9ca: V564 = 0x20
0x9cc: V565 = ADD 0x20 V561
0x9ce: V566 = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x9f0: M[V565] = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x9f1: V567 = 0x20
0x9f3: V568 = ADD 0x20 V565
0x9f4: V569 = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0xa16: M[V568] = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0xa17: V570 = 0x20
0xa19: V571 = ADD 0x20 V568
0xa1a: V572 = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0xa3c: M[V571] = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0xa3e: V573 = 0x60
0xa40: V574 = ADD 0x60 V565
0xa44: V575 = 0x40
0xa46: V576 = M[0x40]
0xa49: V577 = SUB V574 V576
0xa4b: REVERT V576 V577
---
Entry stack: [V11, 0x3ce, V222, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3ce, V222, 0x0]

================================

Block 0xa4c
[0xa4c:0xaaf]
---
Predecessors: [0x939]
Successors: [0xab0, 0xab4]
---
0xa4c JUMPDEST
0xa4d PUSH1 0x1
0xa4f ISZERO
0xa50 ISZERO
0xa51 DUP3
0xa52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa67 AND
0xa68 PUSH4 0x839e0fb
0xa6d PUSH1 0x40
0xa6f MLOAD
0xa70 DUP2
0xa71 PUSH4 0xffffffff
0xa76 AND
0xa77 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa95 MUL
0xa96 DUP2
0xa97 MSTORE
0xa98 PUSH1 0x4
0xa9a ADD
0xa9b PUSH1 0x20
0xa9d PUSH1 0x40
0xa9f MLOAD
0xaa0 DUP1
0xaa1 DUP4
0xaa2 SUB
0xaa3 DUP2
0xaa4 PUSH1 0x0
0xaa6 DUP8
0xaa7 DUP1
0xaa8 EXTCODESIZE
0xaa9 ISZERO
0xaaa DUP1
0xaab ISZERO
0xaac PUSH2 0xab4
0xaaf JUMPI
---
0xa4c: JUMPDEST 
0xa4d: V578 = 0x1
0xa4f: V579 = ISZERO 0x1
0xa50: V580 = ISZERO 0x0
0xa52: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0xa67: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0xa68: V583 = 0x839e0fb
0xa6d: V584 = 0x40
0xa6f: V585 = M[0x40]
0xa71: V586 = 0xffffffff
0xa76: V587 = AND 0xffffffff 0x839e0fb
0xa77: V588 = 0x100000000000000000000000000000000000000000000000000000000
0xa95: V589 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x839e0fb
0xa97: M[V585] = 0x839e0fb00000000000000000000000000000000000000000000000000000000
0xa98: V590 = 0x4
0xa9a: V591 = ADD 0x4 V585
0xa9b: V592 = 0x20
0xa9d: V593 = 0x40
0xa9f: V594 = M[0x40]
0xaa2: V595 = SUB V591 V594
0xaa4: V596 = 0x0
0xaa8: V597 = EXTCODESIZE V582
0xaa9: V598 = ISZERO V597
0xaab: V599 = ISZERO V598
0xaac: V600 = 0xab4
0xaaf: JUMPI 0xab4 V599
---
Entry stack: [V11, 0x3ce, V222, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x1, V582, 0x839e0fb, V591, 0x20, V594, V595, V594, 0x0, V582, V598]
Exit stack: [V11, 0x3ce, V222, 0x0, 0x1, V582, 0x839e0fb, V591, 0x20, V594, V595, V594, 0x0, V582, V598]

================================

Block 0xab0
[0xab0:0xab3]
---
Predecessors: [0xa4c]
Successors: []
---
0xab0 PUSH1 0x0
0xab2 DUP1
0xab3 REVERT
---
0xab0: V601 = 0x0
0xab3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3ce, V222, 0x0, 0x1, V582, 0x839e0fb, V591, 0x20, V594, V595, V594, 0x0, V582, V598]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3ce, V222, 0x0, 0x1, V582, 0x839e0fb, V591, 0x20, V594, V595, V594, 0x0, V582, V598]

================================

Block 0xab4
[0xab4:0xabe]
---
Predecessors: [0xa4c]
Successors: [0xabf, 0xac8]
---
0xab4 JUMPDEST
0xab5 POP
0xab6 GAS
0xab7 CALL
0xab8 ISZERO
0xab9 DUP1
0xaba ISZERO
0xabb PUSH2 0xac8
0xabe JUMPI
---
0xab4: JUMPDEST 
0xab6: V602 = GAS
0xab7: V603 = CALL V602 V582 0x0 V594 V595 V594 0x20
0xab8: V604 = ISZERO V603
0xaba: V605 = ISZERO V604
0xabb: V606 = 0xac8
0xabe: JUMPI 0xac8 V605
---
Entry stack: [V11, 0x3ce, V222, 0x0, 0x1, V582, 0x839e0fb, V591, 0x20, V594, V595, V594, 0x0, V582, V598]
Stack pops: 7
Stack additions: [V604]
Exit stack: [V11, 0x3ce, V222, 0x0, 0x1, V582, 0x839e0fb, V591, V604]

================================

Block 0xabf
[0xabf:0xac7]
---
Predecessors: [0xab4]
Successors: []
---
0xabf RETURNDATASIZE
0xac0 PUSH1 0x0
0xac2 DUP1
0xac3 RETURNDATACOPY
0xac4 RETURNDATASIZE
0xac5 PUSH1 0x0
0xac7 REVERT
---
0xabf: V607 = RETURNDATASIZE
0xac0: V608 = 0x0
0xac3: RETURNDATACOPY 0x0 0x0 V607
0xac4: V609 = RETURNDATASIZE
0xac5: V610 = 0x0
0xac7: REVERT 0x0 V609
---
Entry stack: [V11, 0x3ce, V222, 0x0, 0x1, V582, 0x839e0fb, V591, V604]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3ce, V222, 0x0, 0x1, V582, 0x839e0fb, V591, V604]

================================

Block 0xac8
[0xac8:0xad9]
---
Predecessors: [0xab4]
Successors: [0xada, 0xade]
---
0xac8 JUMPDEST
0xac9 POP
0xaca POP
0xacb POP
0xacc POP
0xacd PUSH1 0x40
0xacf MLOAD
0xad0 RETURNDATASIZE
0xad1 PUSH1 0x20
0xad3 DUP2
0xad4 LT
0xad5 ISZERO
0xad6 PUSH2 0xade
0xad9 JUMPI
---
0xac8: JUMPDEST 
0xacd: V611 = 0x40
0xacf: V612 = M[0x40]
0xad0: V613 = RETURNDATASIZE
0xad1: V614 = 0x20
0xad4: V615 = LT V613 0x20
0xad5: V616 = ISZERO V615
0xad6: V617 = 0xade
0xad9: JUMPI 0xade V616
---
Entry stack: [V11, 0x3ce, V222, 0x0, 0x1, V582, 0x839e0fb, V591, V604]
Stack pops: 4
Stack additions: [V612, V613]
Exit stack: [V11, 0x3ce, V222, 0x0, 0x1, V612, V613]

================================

Block 0xada
[0xada:0xadd]
---
Predecessors: [0xac8]
Successors: []
---
0xada PUSH1 0x0
0xadc DUP1
0xadd REVERT
---
0xada: V618 = 0x0
0xadd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3ce, V222, 0x0, 0x1, V612, V613]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3ce, V222, 0x0, 0x1, V612, V613]

================================

Block 0xade
[0xade:0xaf7]
---
Predecessors: [0xac8]
Successors: [0xaf8, 0xb41]
---
0xade JUMPDEST
0xadf DUP2
0xae0 ADD
0xae1 SWAP1
0xae2 DUP1
0xae3 DUP1
0xae4 MLOAD
0xae5 SWAP1
0xae6 PUSH1 0x20
0xae8 ADD
0xae9 SWAP1
0xaea SWAP3
0xaeb SWAP2
0xaec SWAP1
0xaed POP
0xaee POP
0xaef POP
0xaf0 ISZERO
0xaf1 ISZERO
0xaf2 EQ
0xaf3 ISZERO
0xaf4 PUSH2 0xb41
0xaf7 JUMPI
---
0xade: JUMPDEST 
0xae0: V619 = ADD V612 V613
0xae4: V620 = M[V612]
0xae6: V621 = 0x20
0xae8: V622 = ADD 0x20 V612
0xaf0: V623 = ISZERO V620
0xaf1: V624 = ISZERO V623
0xaf2: V625 = EQ V624 0x1
0xaf3: V626 = ISZERO V625
0xaf4: V627 = 0xb41
0xaf7: JUMPI 0xb41 V626
---
Entry stack: [V11, 0x3ce, V222, 0x0, 0x1, V612, V613]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x3ce, V222, 0x0]

================================

Block 0xaf8
[0xaf8:0xb40]
---
Predecessors: [0xade]
Successors: [0xb46]
---
0xaf8 DUP2
0xaf9 PUSH1 0x2
0xafb PUSH1 0x0
0xafd PUSH2 0x100
0xb00 EXP
0xb01 DUP2
0xb02 SLOAD
0xb03 DUP2
0xb04 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb19 MUL
0xb1a NOT
0xb1b AND
0xb1c SWAP1
0xb1d DUP4
0xb1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb33 AND
0xb34 MUL
0xb35 OR
0xb36 SWAP1
0xb37 SSTORE
0xb38 POP
0xb39 PUSH1 0x1
0xb3b SWAP1
0xb3c POP
0xb3d PUSH2 0xb46
0xb40 JUMP
---
0xaf9: V628 = 0x2
0xafb: V629 = 0x0
0xafd: V630 = 0x100
0xb00: V631 = EXP 0x100 0x0
0xb02: V632 = S[0x2]
0xb04: V633 = 0xffffffffffffffffffffffffffffffffffffffff
0xb19: V634 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xb1a: V635 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb1b: V636 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V632
0xb1e: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0xb33: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0xb34: V639 = MUL V638 0x1
0xb35: V640 = OR V639 V636
0xb37: S[0x2] = V640
0xb39: V641 = 0x1
0xb3d: V642 = 0xb46
0xb40: JUMP 0xb46
---
Entry stack: [V11, 0x3ce, V222, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V11, 0x3ce, V222, 0x1]

================================

Block 0xb41
[0xb41:0xb45]
---
Predecessors: [0xade]
Successors: [0xb46]
---
0xb41 JUMPDEST
0xb42 PUSH1 0x0
0xb44 SWAP1
0xb45 POP
---
0xb41: JUMPDEST 
0xb42: V643 = 0x0
---
Entry stack: [V11, 0x3ce, V222, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x3ce, V222, 0x0]

================================

Block 0xb46
[0xb46:0xb4a]
---
Predecessors: [0xaf8, 0xb41]
Successors: [0x3ce]
---
0xb46 JUMPDEST
0xb47 SWAP2
0xb48 SWAP1
0xb49 POP
0xb4a JUMP
---
0xb46: JUMPDEST 
0xb4a: JUMP 0x3ce
---
Entry stack: [V11, 0x3ce, V222, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0xb4b
[0xb4b:0xb56]
---
Predecessors: [0x3e8]
Successors: [0xb57, 0xbea]
---
0xb4b JUMPDEST
0xb4c PUSH1 0x0
0xb4e DUP1
0xb4f CALLVALUE
0xb50 GT
0xb51 ISZERO
0xb52 ISZERO
0xb53 PUSH2 0xbea
0xb56 JUMPI
---
0xb4b: JUMPDEST 
0xb4c: V644 = 0x0
0xb4f: V645 = CALLVALUE
0xb50: V646 = GT V645 0x0
0xb51: V647 = ISZERO V646
0xb52: V648 = ISZERO V647
0xb53: V649 = 0xbea
0xb56: JUMPI 0xbea V648
---
Entry stack: [V11, 0x3f0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x3f0, 0x0]

================================

Block 0xb57
[0xb57:0xbe9]
---
Predecessors: [0xb4b]
Successors: []
---
0xb57 PUSH1 0x40
0xb59 MLOAD
0xb5a PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb7b DUP2
0xb7c MSTORE
0xb7d PUSH1 0x4
0xb7f ADD
0xb80 DUP1
0xb81 DUP1
0xb82 PUSH1 0x20
0xb84 ADD
0xb85 DUP3
0xb86 DUP2
0xb87 SUB
0xb88 DUP3
0xb89 MSTORE
0xb8a PUSH1 0x34
0xb8c DUP2
0xb8d MSTORE
0xb8e PUSH1 0x20
0xb90 ADD
0xb91 DUP1
0xb92 PUSH32 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0xbb3 DUP2
0xbb4 MSTORE
0xbb5 PUSH1 0x20
0xbb7 ADD
0xbb8 PUSH32 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0xbd9 DUP2
0xbda MSTORE
0xbdb POP
0xbdc PUSH1 0x40
0xbde ADD
0xbdf SWAP2
0xbe0 POP
0xbe1 POP
0xbe2 PUSH1 0x40
0xbe4 MLOAD
0xbe5 DUP1
0xbe6 SWAP2
0xbe7 SUB
0xbe8 SWAP1
0xbe9 REVERT
---
0xb57: V650 = 0x40
0xb59: V651 = M[0x40]
0xb5a: V652 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb7c: M[V651] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb7d: V653 = 0x4
0xb7f: V654 = ADD 0x4 V651
0xb82: V655 = 0x20
0xb84: V656 = ADD 0x20 V654
0xb87: V657 = SUB V656 V654
0xb89: M[V654] = V657
0xb8a: V658 = 0x34
0xb8d: M[V656] = 0x34
0xb8e: V659 = 0x20
0xb90: V660 = ADD 0x20 V656
0xb92: V661 = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0xbb4: M[V660] = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0xbb5: V662 = 0x20
0xbb7: V663 = ADD 0x20 V660
0xbb8: V664 = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0xbda: M[V663] = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0xbdc: V665 = 0x40
0xbde: V666 = ADD 0x40 V660
0xbe2: V667 = 0x40
0xbe4: V668 = M[0x40]
0xbe7: V669 = SUB V666 V668
0xbe9: REVERT V668 V669
---
Entry stack: [V11, 0x3f0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3f0, 0x0]

================================

Block 0xbea
[0xbea:0xc07]
---
Predecessors: [0xb4b]
Successors: [0xc08, 0xc9b]
---
0xbea JUMPDEST
0xbeb PUSH1 0x0
0xbed ISZERO
0xbee ISZERO
0xbef PUSH1 0x2
0xbf1 PUSH1 0x14
0xbf3 SWAP1
0xbf4 SLOAD
0xbf5 SWAP1
0xbf6 PUSH2 0x100
0xbf9 EXP
0xbfa SWAP1
0xbfb DIV
0xbfc PUSH1 0xff
0xbfe AND
0xbff ISZERO
0xc00 ISZERO
0xc01 EQ
0xc02 ISZERO
0xc03 ISZERO
0xc04 PUSH2 0xc9b
0xc07 JUMPI
---
0xbea: JUMPDEST 
0xbeb: V670 = 0x0
0xbed: V671 = ISZERO 0x0
0xbee: V672 = ISZERO 0x1
0xbef: V673 = 0x2
0xbf1: V674 = 0x14
0xbf4: V675 = S[0x2]
0xbf6: V676 = 0x100
0xbf9: V677 = EXP 0x100 0x14
0xbfb: V678 = DIV V675 0x10000000000000000000000000000000000000000
0xbfc: V679 = 0xff
0xbfe: V680 = AND 0xff V678
0xbff: V681 = ISZERO V680
0xc00: V682 = ISZERO V681
0xc01: V683 = EQ V682 0x0
0xc02: V684 = ISZERO V683
0xc03: V685 = ISZERO V684
0xc04: V686 = 0xc9b
0xc07: JUMPI 0xc9b V685
---
Entry stack: [V11, 0x3f0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3f0, 0x0]

================================

Block 0xc08
[0xc08:0xc9a]
---
Predecessors: [0xbea]
Successors: []
---
0xc08 PUSH1 0x40
0xc0a MLOAD
0xc0b PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc2c DUP2
0xc2d MSTORE
0xc2e PUSH1 0x4
0xc30 ADD
0xc31 DUP1
0xc32 DUP1
0xc33 PUSH1 0x20
0xc35 ADD
0xc36 DUP3
0xc37 DUP2
0xc38 SUB
0xc39 DUP3
0xc3a MSTORE
0xc3b PUSH1 0x2d
0xc3d DUP2
0xc3e MSTORE
0xc3f PUSH1 0x20
0xc41 ADD
0xc42 DUP1
0xc43 PUSH32 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0xc64 DUP2
0xc65 MSTORE
0xc66 PUSH1 0x20
0xc68 ADD
0xc69 PUSH32 0x67697374657265642062616e6b00000000000000000000000000000000000000
0xc8a DUP2
0xc8b MSTORE
0xc8c POP
0xc8d PUSH1 0x40
0xc8f ADD
0xc90 SWAP2
0xc91 POP
0xc92 POP
0xc93 PUSH1 0x40
0xc95 MLOAD
0xc96 DUP1
0xc97 SWAP2
0xc98 SUB
0xc99 SWAP1
0xc9a REVERT
---
0xc08: V687 = 0x40
0xc0a: V688 = M[0x40]
0xc0b: V689 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc2d: M[V688] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc2e: V690 = 0x4
0xc30: V691 = ADD 0x4 V688
0xc33: V692 = 0x20
0xc35: V693 = ADD 0x20 V691
0xc38: V694 = SUB V693 V691
0xc3a: M[V691] = V694
0xc3b: V695 = 0x2d
0xc3e: M[V693] = 0x2d
0xc3f: V696 = 0x20
0xc41: V697 = ADD 0x20 V693
0xc43: V698 = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0xc65: M[V697] = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0xc66: V699 = 0x20
0xc68: V700 = ADD 0x20 V697
0xc69: V701 = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0xc8b: M[V700] = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0xc8d: V702 = 0x40
0xc8f: V703 = ADD 0x40 V697
0xc93: V704 = 0x40
0xc95: V705 = M[0x40]
0xc98: V706 = SUB V703 V705
0xc9a: REVERT V705 V706
---
Entry stack: [V11, 0x3f0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3f0, 0x0]

================================

Block 0xc9b
[0xc9b:0xdaf]
---
Predecessors: [0xbea]
Successors: [0xdb0, 0xdb8]
---
0xc9b JUMPDEST
0xc9c PUSH1 0x1
0xc9e ISZERO
0xc9f ISZERO
0xca0 PUSH1 0x1
0xca2 PUSH1 0x0
0xca4 SWAP1
0xca5 SLOAD
0xca6 SWAP1
0xca7 PUSH2 0x100
0xcaa EXP
0xcab SWAP1
0xcac DIV
0xcad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc2 AND
0xcc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd8 AND
0xcd9 CALLVALUE
0xcda PUSH1 0x40
0xcdc MLOAD
0xcdd DUP1
0xcde DUP1
0xcdf PUSH32 0x6465706f73697428616464726573732900000000000000000000000000000000
0xd00 DUP2
0xd01 MSTORE
0xd02 POP
0xd03 PUSH1 0x10
0xd05 ADD
0xd06 SWAP1
0xd07 POP
0xd08 PUSH1 0x40
0xd0a MLOAD
0xd0b DUP1
0xd0c SWAP2
0xd0d SUB
0xd0e SWAP1
0xd0f SHA3
0xd10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xd2e SWAP1
0xd2f DIV
0xd30 SWAP1
0xd31 CALLER
0xd32 PUSH1 0x40
0xd34 MLOAD
0xd35 DUP4
0xd36 PUSH4 0xffffffff
0xd3b AND
0xd3c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xd5a MUL
0xd5b DUP2
0xd5c MSTORE
0xd5d PUSH1 0x4
0xd5f ADD
0xd60 DUP1
0xd61 DUP3
0xd62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd77 AND
0xd78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8d AND
0xd8e DUP2
0xd8f MSTORE
0xd90 PUSH1 0x20
0xd92 ADD
0xd93 SWAP2
0xd94 POP
0xd95 POP
0xd96 PUSH1 0x0
0xd98 PUSH1 0x40
0xd9a MLOAD
0xd9b DUP1
0xd9c DUP4
0xd9d SUB
0xd9e DUP2
0xd9f DUP6
0xda0 DUP9
0xda1 GAS
0xda2 CALL
0xda3 SWAP4
0xda4 POP
0xda5 POP
0xda6 POP
0xda7 POP
0xda8 ISZERO
0xda9 ISZERO
0xdaa EQ
0xdab ISZERO
0xdac PUSH2 0xdb8
0xdaf JUMPI
---
0xc9b: JUMPDEST 
0xc9c: V707 = 0x1
0xc9e: V708 = ISZERO 0x1
0xc9f: V709 = ISZERO 0x0
0xca0: V710 = 0x1
0xca2: V711 = 0x0
0xca5: V712 = S[0x1]
0xca7: V713 = 0x100
0xcaa: V714 = EXP 0x100 0x0
0xcac: V715 = DIV V712 0x1
0xcad: V716 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc2: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0xcc3: V718 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd8: V719 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0xcd9: V720 = CALLVALUE
0xcda: V721 = 0x40
0xcdc: V722 = M[0x40]
0xcdf: V723 = 0x6465706f73697428616464726573732900000000000000000000000000000000
0xd01: M[V722] = 0x6465706f73697428616464726573732900000000000000000000000000000000
0xd03: V724 = 0x10
0xd05: V725 = ADD 0x10 V722
0xd08: V726 = 0x40
0xd0a: V727 = M[0x40]
0xd0d: V728 = SUB V725 V727
0xd0f: V729 = SHA3 V727 V728
0xd10: V730 = 0x100000000000000000000000000000000000000000000000000000000
0xd2f: V731 = DIV V729 0x100000000000000000000000000000000000000000000000000000000
0xd31: V732 = CALLER
0xd32: V733 = 0x40
0xd34: V734 = M[0x40]
0xd36: V735 = 0xffffffff
0xd3b: V736 = AND 0xffffffff V731
0xd3c: V737 = 0x100000000000000000000000000000000000000000000000000000000
0xd5a: V738 = MUL 0x100000000000000000000000000000000000000000000000000000000 V736
0xd5c: M[V734] = V738
0xd5d: V739 = 0x4
0xd5f: V740 = ADD 0x4 V734
0xd62: V741 = 0xffffffffffffffffffffffffffffffffffffffff
0xd77: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V732
0xd78: V743 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8d: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V742
0xd8f: M[V740] = V744
0xd90: V745 = 0x20
0xd92: V746 = ADD 0x20 V740
0xd96: V747 = 0x0
0xd98: V748 = 0x40
0xd9a: V749 = M[0x40]
0xd9d: V750 = SUB V746 V749
0xda1: V751 = GAS
0xda2: V752 = CALL V751 V719 V720 V749 V750 V749 0x0
0xda8: V753 = ISZERO V752
0xda9: V754 = ISZERO V753
0xdaa: V755 = EQ V754 0x1
0xdab: V756 = ISZERO V755
0xdac: V757 = 0xdb8
0xdaf: JUMPI 0xdb8 V756
---
Entry stack: [V11, 0x3f0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3f0, 0x0]

================================

Block 0xdb0
[0xdb0:0xdb7]
---
Predecessors: [0xc9b]
Successors: [0xdbd]
---
0xdb0 PUSH1 0x1
0xdb2 SWAP1
0xdb3 POP
0xdb4 PUSH2 0xdbd
0xdb7 JUMP
---
0xdb0: V758 = 0x1
0xdb4: V759 = 0xdbd
0xdb7: JUMP 0xdbd
---
Entry stack: [V11, 0x3f0, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x3f0, 0x1]

================================

Block 0xdb8
[0xdb8:0xdbc]
---
Predecessors: [0xc9b]
Successors: [0xdbd]
---
0xdb8 JUMPDEST
0xdb9 PUSH1 0x0
0xdbb SWAP1
0xdbc POP
---
0xdb8: JUMPDEST 
0xdb9: V760 = 0x0
---
Entry stack: [V11, 0x3f0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x3f0, 0x0]

================================

Block 0xdbd
[0xdbd:0xdbf]
---
Predecessors: [0xdb0, 0xdb8]
Successors: [0x3f0]
---
0xdbd JUMPDEST
0xdbe SWAP1
0xdbf JUMP
---
0xdbd: JUMPDEST 
0xdbf: JUMP 0x3f0
---
Entry stack: [V11, 0x3f0, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0xdc0
[0xdc0:0xdeb]
---
Predecessors: []
Successors: []
---
0xdc0 STOP
0xdc1 LOG1
0xdc2 PUSH6 0x627a7a723058
0xdc9 SHA3
0xdca DUP12
0xdcb PUSH20 0xcd80fc7255f0d8bb723f9d9d0043e2da3ec5a33a
0xde0 MISSING 0x4c
0xde1 PUSH2 0x2940
0xde4 SWAP3
0xde5 EXTCODEHASH
0xde6 MISSING 0xdd
0xde7 MISSING 0xae
0xde8 MISSING 0x5d
0xde9 MISSING 0xc6
0xdea STOP
0xdeb MISSING 0x29
---
0xdc0: STOP 
0xdc1: LOG S0 S1 S2
0xdc2: V761 = 0x627a7a723058
0xdc9: V762 = SHA3 0x627a7a723058 S3
0xdcb: V763 = 0xcd80fc7255f0d8bb723f9d9d0043e2da3ec5a33a
0xde0: MISSING 0x4c
0xde1: V764 = 0x2940
0xde5: V765 = EXTCODEHASH S2
0xde6: MISSING 0xdd
0xde7: MISSING 0xae
0xde8: MISSING 0x5d
0xde9: MISSING 0xc6
0xdea: STOP 
0xdeb: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xcd80fc7255f0d8bb723f9d9d0043e2da3ec5a33a, S14, V762, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V765, S0, S1, 0x2940]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x1c7
Exit block: 0x249
Body: 0x1c7, 0x1cf, 0x1d3, 0x1dc, 0x201, 0x20a, 0x21c, 0x230, 0x249, 0x40a, 0x45a, 0x462, 0x475, 0x483, 0x497, 0x4a0

Function 1:
Public function signature: 0x10639ea0
Entry block: 0x257
Exit block: 0x26c
Body: 0x257, 0x25f, 0x263, 0x26c, 0x4a8, 0x502, 0x5bb

Function 2:
Public function signature: 0x200d2ed2
Entry block: 0x286
Exit block: 0x29b
Body: 0x286, 0x28e, 0x292, 0x29b, 0x604

Function 3:
Public function signature: 0x66d38203
Entry block: 0x31b
Exit block: 0x35c
Body: 0x31b, 0x323, 0x327, 0x35c, 0x66a, 0x688, 0x71b

Function 4:
Public function signature: 0x88d761f2
Entry block: 0x35e
Exit block: 0x373
Body: 0x35e, 0x366, 0x36a, 0x373, 0x77a, 0x7d4, 0x88d

Function 5:
Public function signature: 0xa0f52da0
Entry block: 0x38d
Exit block: 0x3ce
Body: 0x38d, 0x395, 0x399, 0x3ce, 0x939, 0x993, 0xa4c, 0xab0, 0xab4, 0xabf, 0xac8, 0xada, 0xade, 0xaf8, 0xb41, 0xb46

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x3e8
Exit block: 0x3f0
Body: 0x3e8, 0x3f0, 0xb4b, 0xb57, 0xbea, 0xc08, 0xc9b, 0xdb0, 0xdb8, 0xdbd

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

