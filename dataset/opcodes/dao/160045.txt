Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x9e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x9e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x9e
0xa: JUMPI 0x9e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xa2]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xa3cb72e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xa2
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xa3cb72e
0x20: V14 = EQ V12 0xa3cb72e
0x21: V15 = 0xa2
0x24: JUMPI 0xa2 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x133]
---
0x25 DUP1
0x26 PUSH4 0x12065fe0
0x2b EQ
0x2c PUSH2 0x133
0x2f JUMPI
---
0x26: V16 = 0x12065fe0
0x2b: V17 = EQ 0x12065fe0 V12
0x2c: V18 = 0x133
0x2f: JUMPI 0x133 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x158]
---
0x30 DUP1
0x31 PUSH4 0x1d0ab337
0x36 EQ
0x37 PUSH2 0x158
0x3a JUMPI
---
0x31: V19 = 0x1d0ab337
0x36: V20 = EQ 0x1d0ab337 V12
0x37: V21 = 0x158
0x3a: JUMPI 0x158 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1e9]
---
0x3b DUP1
0x3c PUSH4 0x2e1a7d4d
0x41 EQ
0x42 PUSH2 0x1e9
0x45 JUMPI
---
0x3c: V22 = 0x2e1a7d4d
0x41: V23 = EQ 0x2e1a7d4d V12
0x42: V24 = 0x1e9
0x45: JUMPI 0x1e9 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x201]
---
0x46 DUP1
0x47 PUSH4 0x33f63b33
0x4c EQ
0x4d PUSH2 0x201
0x50 JUMPI
---
0x47: V25 = 0x33f63b33
0x4c: V26 = EQ 0x33f63b33 V12
0x4d: V27 = 0x201
0x50: JUMPI 0x201 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x228]
---
0x51 DUP1
0x52 PUSH4 0x477bddaa
0x57 EQ
0x58 PUSH2 0x228
0x5b JUMPI
---
0x52: V28 = 0x477bddaa
0x57: V29 = EQ 0x477bddaa V12
0x58: V30 = 0x228
0x5b: JUMPI 0x228 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x249]
---
0x5c DUP1
0x5d PUSH4 0x5fd8c710
0x62 EQ
0x63 PUSH2 0x249
0x66 JUMPI
---
0x5d: V31 = 0x5fd8c710
0x62: V32 = EQ 0x5fd8c710 V12
0x63: V33 = 0x249
0x66: JUMPI 0x249 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x25e]
---
0x67 DUP1
0x68 PUSH4 0x6ec1da08
0x6d EQ
0x6e PUSH2 0x25e
0x71 JUMPI
---
0x68: V34 = 0x6ec1da08
0x6d: V35 = EQ 0x6ec1da08 V12
0x6e: V36 = 0x25e
0x71: JUMPI 0x25e V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x285]
---
0x72 DUP1
0x73 PUSH4 0x853828b6
0x78 EQ
0x79 PUSH2 0x285
0x7c JUMPI
---
0x73: V37 = 0x853828b6
0x78: V38 = EQ 0x853828b6 V12
0x79: V39 = 0x285
0x7c: JUMPI 0x285 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x29a]
---
0x7d DUP1
0x7e PUSH4 0x95035d82
0x83 EQ
0x84 PUSH2 0x29a
0x87 JUMPI
---
0x7e: V40 = 0x95035d82
0x83: V41 = EQ 0x95035d82 V12
0x84: V42 = 0x29a
0x87: JUMPI 0x29a V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x32b]
---
0x88 DUP1
0x89 PUSH4 0xb2bdfa7b
0x8e EQ
0x8f PUSH2 0x32b
0x92 JUMPI
---
0x89: V43 = 0xb2bdfa7b
0x8e: V44 = EQ 0xb2bdfa7b V12
0x8f: V45 = 0x32b
0x92: JUMPI 0x32b V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x35a]
---
0x93 DUP1
0x94 PUSH4 0xd0e30db0
0x99 EQ
0x9a PUSH2 0x35a
0x9d JUMPI
---
0x94: V46 = 0xd0e30db0
0x99: V47 = EQ 0xd0e30db0 V12
0x9a: V48 = 0x35a
0x9d: JUMPI 0x35a V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0x9e]
---
Predecessors: [0x0, 0x93, 0x760, 0x91b, 0x94a, 0xa2c]
Successors: [0x9f]
---
0x9e JUMPDEST
---
0x9e: JUMPDEST 
---
Entry stack: [V12, S3, {0x9e, 0x949}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0x9e, 0x949}, S1, S0]

================================

Block 0x9f
[0x9f:0x9f]
---
Predecessors: [0x9e]
Successors: [0xa0]
---
0x9f JUMPDEST
---
0x9f: JUMPDEST 
---
Entry stack: [V12, S3, {0x9e, 0x949}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0x9e, 0x949}, S1, S0]

================================

Block 0xa0
[0xa0:0xa1]
---
Predecessors: [0x9f]
Successors: []
---
0xa0 JUMPDEST
0xa1 STOP
---
0xa0: JUMPDEST 
0xa1: STOP 
---
Entry stack: [V12, S3, {0x9e, 0x949}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0x9e, 0x949}, S1, S0]

================================

Block 0xa2
[0xa2:0xa8]
---
Predecessors: [0xb]
Successors: [0xa9, 0xad]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 ISZERO
0xa5 PUSH2 0xad
0xa8 JUMPI
---
0xa2: JUMPDEST 
0xa3: V49 = CALLVALUE
0xa4: V50 = ISZERO V49
0xa5: V51 = 0xad
0xa8: JUMPI 0xad V50
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0xa2]
Successors: []
---
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa9: V52 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xad
[0xad:0x130]
---
Predecessors: [0xa2]
Successors: [0x364]
---
0xad JUMPDEST
0xae PUSH2 0x9e
0xb1 PUSH1 0x4
0xb3 PUSH1 0x24
0xb5 DUP2
0xb6 CALLDATALOAD
0xb7 DUP2
0xb8 DUP2
0xb9 ADD
0xba SWAP1
0xbb DUP4
0xbc ADD
0xbd CALLDATALOAD
0xbe DUP1
0xbf PUSH1 0x20
0xc1 DUP2
0xc2 DUP2
0xc3 MUL
0xc4 ADD
0xc5 PUSH1 0x40
0xc7 MLOAD
0xc8 SWAP1
0xc9 DUP2
0xca ADD
0xcb PUSH1 0x40
0xcd MSTORE
0xce DUP1
0xcf SWAP4
0xd0 SWAP3
0xd1 SWAP2
0xd2 SWAP1
0xd3 DUP2
0xd4 DUP2
0xd5 MSTORE
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 DUP4
0xda DUP4
0xdb PUSH1 0x20
0xdd MUL
0xde DUP1
0xdf DUP3
0xe0 DUP5
0xe1 CALLDATACOPY
0xe2 DUP3
0xe3 ADD
0xe4 SWAP2
0xe5 POP
0xe6 POP
0xe7 POP
0xe8 POP
0xe9 POP
0xea POP
0xeb SWAP2
0xec SWAP1
0xed DUP1
0xee CALLDATALOAD
0xef SWAP1
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP1
0xf4 DUP3
0xf5 ADD
0xf6 DUP1
0xf7 CALLDATALOAD
0xf8 SWAP1
0xf9 PUSH1 0x20
0xfb ADD
0xfc SWAP1
0xfd DUP1
0xfe DUP1
0xff PUSH1 0x20
0x101 MUL
0x102 PUSH1 0x20
0x104 ADD
0x105 PUSH1 0x40
0x107 MLOAD
0x108 SWAP1
0x109 DUP2
0x10a ADD
0x10b PUSH1 0x40
0x10d MSTORE
0x10e DUP1
0x10f SWAP4
0x110 SWAP3
0x111 SWAP2
0x112 SWAP1
0x113 DUP2
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x20
0x118 ADD
0x119 DUP4
0x11a DUP4
0x11b PUSH1 0x20
0x11d MUL
0x11e DUP1
0x11f DUP3
0x120 DUP5
0x121 CALLDATACOPY
0x122 POP
0x123 SWAP5
0x124 SWAP7
0x125 POP
0x126 PUSH2 0x364
0x129 SWAP6
0x12a POP
0x12b POP
0x12c POP
0x12d POP
0x12e POP
0x12f POP
0x130 JUMP
---
0xad: JUMPDEST 
0xae: V53 = 0x9e
0xb1: V54 = 0x4
0xb3: V55 = 0x24
0xb6: V56 = CALLDATALOAD 0x4
0xb9: V57 = ADD V56 0x24
0xbc: V58 = ADD 0x4 V56
0xbd: V59 = CALLDATALOAD V58
0xbf: V60 = 0x20
0xc3: V61 = MUL 0x20 V59
0xc4: V62 = ADD V61 0x20
0xc5: V63 = 0x40
0xc7: V64 = M[0x40]
0xca: V65 = ADD V64 V62
0xcb: V66 = 0x40
0xcd: M[0x40] = V65
0xd5: M[V64] = V59
0xd6: V67 = 0x20
0xd8: V68 = ADD 0x20 V64
0xdb: V69 = 0x20
0xdd: V70 = MUL 0x20 V59
0xe1: CALLDATACOPY V68 V57 V70
0xe3: V71 = ADD V68 V70
0xee: V72 = CALLDATALOAD 0x24
0xf0: V73 = 0x20
0xf2: V74 = ADD 0x20 0x24
0xf5: V75 = ADD 0x4 V72
0xf7: V76 = CALLDATALOAD V75
0xf9: V77 = 0x20
0xfb: V78 = ADD 0x20 V75
0xff: V79 = 0x20
0x101: V80 = MUL 0x20 V76
0x102: V81 = 0x20
0x104: V82 = ADD 0x20 V80
0x105: V83 = 0x40
0x107: V84 = M[0x40]
0x10a: V85 = ADD V84 V82
0x10b: V86 = 0x40
0x10d: M[0x40] = V85
0x115: M[V84] = V76
0x116: V87 = 0x20
0x118: V88 = ADD 0x20 V84
0x11b: V89 = 0x20
0x11d: V90 = MUL 0x20 V76
0x121: CALLDATACOPY V88 V78 V90
0x126: V91 = 0x364
0x130: JUMP 0x364
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9e, V64, V84]
Exit stack: [V12, 0x9e, V64, V84]

================================

Block 0x131
[0x131:0x132]
---
Predecessors: []
Successors: []
---
0x131 JUMPDEST
0x132 STOP
---
0x131: JUMPDEST 
0x132: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x133
[0x133:0x139]
---
Predecessors: [0x25]
Successors: [0x13a, 0x13e]
---
0x133 JUMPDEST
0x134 CALLVALUE
0x135 ISZERO
0x136 PUSH2 0x13e
0x139 JUMPI
---
0x133: JUMPDEST 
0x134: V92 = CALLVALUE
0x135: V93 = ISZERO V92
0x136: V94 = 0x13e
0x139: JUMPI 0x13e V93
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13a
[0x13a:0x13d]
---
Predecessors: [0x133]
Successors: []
---
0x13a PUSH1 0x0
0x13c DUP1
0x13d REVERT
---
0x13a: V95 = 0x0
0x13d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x133]
Successors: [0x764]
---
0x13e JUMPDEST
0x13f PUSH2 0x146
0x142 PUSH2 0x764
0x145 JUMP
---
0x13e: JUMPDEST 
0x13f: V96 = 0x146
0x142: V97 = 0x764
0x145: JUMP 0x764
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x146]
Exit stack: [V12, 0x146]

================================

Block 0x146
[0x146:0x157]
---
Predecessors: [0x7e4]
Successors: []
---
0x146 JUMPDEST
0x147 PUSH1 0x40
0x149 MLOAD
0x14a SWAP1
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x20
0x14f ADD
0x150 PUSH1 0x40
0x152 MLOAD
0x153 DUP1
0x154 SWAP2
0x155 SUB
0x156 SWAP1
0x157 RETURN
---
0x146: JUMPDEST 
0x147: V98 = 0x40
0x149: V99 = M[0x40]
0x14c: M[V99] = S0
0x14d: V100 = 0x20
0x14f: V101 = ADD 0x20 V99
0x150: V102 = 0x40
0x152: V103 = M[0x40]
0x155: V104 = SUB V101 V103
0x157: RETURN V103 V104
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1]

================================

Block 0x158
[0x158:0x15e]
---
Predecessors: [0x30]
Successors: [0x15f, 0x163]
---
0x158 JUMPDEST
0x159 CALLVALUE
0x15a ISZERO
0x15b PUSH2 0x163
0x15e JUMPI
---
0x158: JUMPDEST 
0x159: V105 = CALLVALUE
0x15a: V106 = ISZERO V105
0x15b: V107 = 0x163
0x15e: JUMPI 0x163 V106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15f
[0x15f:0x162]
---
Predecessors: [0x158]
Successors: []
---
0x15f PUSH1 0x0
0x161 DUP1
0x162 REVERT
---
0x15f: V108 = 0x0
0x162: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x163
[0x163:0x16a]
---
Predecessors: [0x158]
Successors: [0x7e7]
---
0x163 JUMPDEST
0x164 PUSH2 0x16b
0x167 PUSH2 0x7e7
0x16a JUMP
---
0x163: JUMPDEST 
0x164: V109 = 0x16b
0x167: V110 = 0x7e7
0x16a: JUMP 0x7e7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x16b]
Exit stack: [V12, 0x16b]

================================

Block 0x16b
[0x16b:0x1e8]
---
Predecessors: [0x7e7, 0x980]
Successors: []
---
0x16b JUMPDEST
0x16c PUSH1 0x40
0x16e MLOAD
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 SWAP13
0x178 DUP14
0x179 AND
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e DUP2
0x17f ADD
0x180 SWAP12
0x181 SWAP1
0x182 SWAP12
0x183 MSTORE
0x184 SWAP9
0x185 DUP12
0x186 AND
0x187 PUSH1 0x40
0x189 DUP1
0x18a DUP13
0x18b ADD
0x18c SWAP2
0x18d SWAP1
0x18e SWAP2
0x18f MSTORE
0x190 PUSH1 0x60
0x192 DUP12
0x193 ADD
0x194 SWAP9
0x195 SWAP1
0x196 SWAP9
0x197 MSTORE
0x198 PUSH1 0x80
0x19a DUP11
0x19b ADD
0x19c SWAP7
0x19d SWAP1
0x19e SWAP7
0x19f MSTORE
0x1a0 PUSH1 0xa0
0x1a2 DUP10
0x1a3 ADD
0x1a4 SWAP5
0x1a5 SWAP1
0x1a6 SWAP5
0x1a7 MSTORE
0x1a8 SWAP2
0x1a9 SWAP1
0x1aa SWAP8
0x1ab AND
0x1ac PUSH1 0xc0
0x1ae DUP8
0x1af ADD
0x1b0 MSTORE
0x1b1 PUSH1 0xff
0x1b3 SWAP1
0x1b4 SWAP7
0x1b5 AND
0x1b6 PUSH1 0xe0
0x1b8 DUP7
0x1b9 ADD
0x1ba MSTORE
0x1bb PUSH2 0x100
0x1be DUP6
0x1bf ADD
0x1c0 SWAP6
0x1c1 SWAP1
0x1c2 SWAP6
0x1c3 MSTORE
0x1c4 PUSH2 0x120
0x1c7 DUP5
0x1c8 ADD
0x1c9 SWAP5
0x1ca SWAP1
0x1cb SWAP5
0x1cc MSTORE
0x1cd PUSH2 0x140
0x1d0 DUP4
0x1d1 ADD
0x1d2 SWAP4
0x1d3 SWAP1
0x1d4 SWAP4
0x1d5 MSTORE
0x1d6 ISZERO
0x1d7 ISZERO
0x1d8 PUSH2 0x160
0x1db DUP3
0x1dc ADD
0x1dd MSTORE
0x1de PUSH2 0x180
0x1e1 ADD
0x1e2 SWAP1
0x1e3 MLOAD
0x1e4 DUP1
0x1e5 SWAP2
0x1e6 SUB
0x1e7 SWAP1
0x1e8 RETURN
---
0x16b: JUMPDEST 
0x16c: V111 = 0x40
0x16e: V112 = M[0x40]
0x16f: V113 = 0x1
0x171: V114 = 0xa0
0x173: V115 = 0x2
0x175: V116 = EXP 0x2 0xa0
0x176: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x179: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x17b: M[V112] = V118
0x17c: V119 = 0x20
0x17f: V120 = ADD V112 0x20
0x183: M[V120] = S10
0x186: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x187: V122 = 0x40
0x18b: V123 = ADD V112 0x40
0x18f: M[V123] = V121
0x190: V124 = 0x60
0x193: V125 = ADD V112 0x60
0x197: M[V125] = S8
0x198: V126 = 0x80
0x19b: V127 = ADD V112 0x80
0x19f: M[V127] = S7
0x1a0: V128 = 0xa0
0x1a3: V129 = ADD V112 0xa0
0x1a7: M[V129] = S6
0x1ab: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x1ac: V131 = 0xc0
0x1af: V132 = ADD V112 0xc0
0x1b0: M[V132] = V130
0x1b1: V133 = 0xff
0x1b5: V134 = AND S4 0xff
0x1b6: V135 = 0xe0
0x1b9: V136 = ADD V112 0xe0
0x1ba: M[V136] = V134
0x1bb: V137 = 0x100
0x1bf: V138 = ADD V112 0x100
0x1c3: M[V138] = S3
0x1c4: V139 = 0x120
0x1c8: V140 = ADD V112 0x120
0x1cc: M[V140] = S2
0x1cd: V141 = 0x140
0x1d1: V142 = ADD V112 0x140
0x1d5: M[V142] = S1
0x1d6: V143 = ISZERO S0
0x1d7: V144 = ISZERO V143
0x1d8: V145 = 0x160
0x1dc: V146 = ADD V112 0x160
0x1dd: M[V146] = V144
0x1de: V147 = 0x180
0x1e1: V148 = ADD 0x180 V112
0x1e3: V149 = M[0x40]
0x1e6: V150 = SUB V148 V149
0x1e8: RETURN V149 V150
---
Entry stack: [V12, 0x16b, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: []
Exit stack: [V12, 0x16b]

================================

Block 0x1e9
[0x1e9:0x1ef]
---
Predecessors: [0x3b]
Successors: [0x1f0, 0x1f4]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb ISZERO
0x1ec PUSH2 0x1f4
0x1ef JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V151 = CALLVALUE
0x1eb: V152 = ISZERO V151
0x1ec: V153 = 0x1f4
0x1ef: JUMPI 0x1f4 V152
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f0
[0x1f0:0x1f3]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f0 PUSH1 0x0
0x1f2 DUP1
0x1f3 REVERT
---
0x1f0: V154 = 0x0
0x1f3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f4
[0x1f4:0x1fe]
---
Predecessors: [0x1e9]
Successors: [0x82f]
---
0x1f4 JUMPDEST
0x1f5 PUSH2 0x9e
0x1f8 PUSH1 0x4
0x1fa CALLDATALOAD
0x1fb PUSH2 0x82f
0x1fe JUMP
---
0x1f4: JUMPDEST 
0x1f5: V155 = 0x9e
0x1f8: V156 = 0x4
0x1fa: V157 = CALLDATALOAD 0x4
0x1fb: V158 = 0x82f
0x1fe: JUMP 0x82f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9e, V157]
Exit stack: [V12, 0x9e, V157]

================================

Block 0x1ff
[0x1ff:0x200]
---
Predecessors: []
Successors: []
---
0x1ff JUMPDEST
0x200 STOP
---
0x1ff: JUMPDEST 
0x200: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x201
[0x201:0x207]
---
Predecessors: [0x46]
Successors: [0x208, 0x20c]
---
0x201 JUMPDEST
0x202 CALLVALUE
0x203 ISZERO
0x204 PUSH2 0x20c
0x207 JUMPI
---
0x201: JUMPDEST 
0x202: V159 = CALLVALUE
0x203: V160 = ISZERO V159
0x204: V161 = 0x20c
0x207: JUMPI 0x20c V160
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x208
[0x208:0x20b]
---
Predecessors: [0x201]
Successors: []
---
0x208 PUSH1 0x0
0x20a DUP1
0x20b REVERT
---
0x208: V162 = 0x0
0x20b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20c
[0x20c:0x213]
---
Predecessors: [0x201]
Successors: [0x8c9]
---
0x20c JUMPDEST
0x20d PUSH2 0x214
0x210 PUSH2 0x8c9
0x213 JUMP
---
0x20c: JUMPDEST 
0x20d: V163 = 0x214
0x210: V164 = 0x8c9
0x213: JUMP 0x8c9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x214]
Exit stack: [V12, 0x214]

================================

Block 0x214
[0x214:0x227]
---
Predecessors: [0x8d0, 0x94c]
Successors: []
---
0x214 JUMPDEST
0x215 PUSH1 0x40
0x217 MLOAD
0x218 SWAP1
0x219 ISZERO
0x21a ISZERO
0x21b DUP2
0x21c MSTORE
0x21d PUSH1 0x20
0x21f ADD
0x220 PUSH1 0x40
0x222 MLOAD
0x223 DUP1
0x224 SWAP2
0x225 SUB
0x226 SWAP1
0x227 RETURN
---
0x214: JUMPDEST 
0x215: V165 = 0x40
0x217: V166 = M[0x40]
0x219: V167 = ISZERO S0
0x21a: V168 = ISZERO V167
0x21c: M[V166] = V168
0x21d: V169 = 0x20
0x21f: V170 = ADD 0x20 V166
0x220: V171 = 0x40
0x222: V172 = M[0x40]
0x225: V173 = SUB V170 V172
0x227: RETURN V172 V173
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x228
[0x228:0x22e]
---
Predecessors: [0x51]
Successors: [0x22f, 0x233]
---
0x228 JUMPDEST
0x229 CALLVALUE
0x22a ISZERO
0x22b PUSH2 0x233
0x22e JUMPI
---
0x228: JUMPDEST 
0x229: V174 = CALLVALUE
0x22a: V175 = ISZERO V174
0x22b: V176 = 0x233
0x22e: JUMPI 0x233 V175
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22f
[0x22f:0x232]
---
Predecessors: [0x228]
Successors: []
---
0x22f PUSH1 0x0
0x231 DUP1
0x232 REVERT
---
0x22f: V177 = 0x0
0x232: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x233
[0x233:0x246]
---
Predecessors: [0x228]
Successors: [0x8d3]
---
0x233 JUMPDEST
0x234 PUSH2 0x9e
0x237 PUSH1 0x1
0x239 PUSH1 0xa0
0x23b PUSH1 0x2
0x23d EXP
0x23e SUB
0x23f PUSH1 0x4
0x241 CALLDATALOAD
0x242 AND
0x243 PUSH2 0x8d3
0x246 JUMP
---
0x233: JUMPDEST 
0x234: V178 = 0x9e
0x237: V179 = 0x1
0x239: V180 = 0xa0
0x23b: V181 = 0x2
0x23d: V182 = EXP 0x2 0xa0
0x23e: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23f: V184 = 0x4
0x241: V185 = CALLDATALOAD 0x4
0x242: V186 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x243: V187 = 0x8d3
0x246: JUMP 0x8d3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9e, V186]
Exit stack: [V12, 0x9e, V186]

================================

Block 0x247
[0x247:0x248]
---
Predecessors: []
Successors: []
---
0x247 JUMPDEST
0x248 STOP
---
0x247: JUMPDEST 
0x248: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x249
[0x249:0x24f]
---
Predecessors: [0x5c]
Successors: [0x250, 0x254]
---
0x249 JUMPDEST
0x24a CALLVALUE
0x24b ISZERO
0x24c PUSH2 0x254
0x24f JUMPI
---
0x249: JUMPDEST 
0x24a: V188 = CALLVALUE
0x24b: V189 = ISZERO V188
0x24c: V190 = 0x254
0x24f: JUMPI 0x254 V189
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x250
[0x250:0x253]
---
Predecessors: [0x249]
Successors: []
---
0x250 PUSH1 0x0
0x252 DUP1
0x253 REVERT
---
0x250: V191 = 0x0
0x253: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x254
[0x254:0x25b]
---
Predecessors: [0x249]
Successors: [0x91e]
---
0x254 JUMPDEST
0x255 PUSH2 0x9e
0x258 PUSH2 0x91e
0x25b JUMP
---
0x254: JUMPDEST 
0x255: V192 = 0x9e
0x258: V193 = 0x91e
0x25b: JUMP 0x91e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9e]
Exit stack: [V12, 0x9e]

================================

Block 0x25c
[0x25c:0x25d]
---
Predecessors: []
Successors: []
---
0x25c JUMPDEST
0x25d STOP
---
0x25c: JUMPDEST 
0x25d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x25e
[0x25e:0x264]
---
Predecessors: [0x67]
Successors: [0x265, 0x269]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x25e: JUMPDEST 
0x25f: V194 = CALLVALUE
0x260: V195 = ISZERO V194
0x261: V196 = 0x269
0x264: JUMPI 0x269 V195
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x25e]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V197 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x25e]
Successors: [0x94c]
---
0x269 JUMPDEST
0x26a PUSH2 0x214
0x26d PUSH2 0x94c
0x270 JUMP
---
0x269: JUMPDEST 
0x26a: V198 = 0x214
0x26d: V199 = 0x94c
0x270: JUMP 0x94c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x214]
Exit stack: [V12, 0x214]

================================

Block 0x271
[0x271:0x284]
---
Predecessors: []
Successors: []
---
0x271 JUMPDEST
0x272 PUSH1 0x40
0x274 MLOAD
0x275 SWAP1
0x276 ISZERO
0x277 ISZERO
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x20
0x27c ADD
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 SWAP2
0x282 SUB
0x283 SWAP1
0x284 RETURN
---
0x271: JUMPDEST 
0x272: V200 = 0x40
0x274: V201 = M[0x40]
0x276: V202 = ISZERO S0
0x277: V203 = ISZERO V202
0x279: M[V201] = V203
0x27a: V204 = 0x20
0x27c: V205 = ADD 0x20 V201
0x27d: V206 = 0x40
0x27f: V207 = M[0x40]
0x282: V208 = SUB V205 V207
0x284: RETURN V207 V208
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x285
[0x285:0x28b]
---
Predecessors: [0x72]
Successors: [0x28c, 0x290]
---
0x285 JUMPDEST
0x286 CALLVALUE
0x287 ISZERO
0x288 PUSH2 0x290
0x28b JUMPI
---
0x285: JUMPDEST 
0x286: V209 = CALLVALUE
0x287: V210 = ISZERO V209
0x288: V211 = 0x290
0x28b: JUMPI 0x290 V210
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x285]
Successors: []
---
0x28c PUSH1 0x0
0x28e DUP1
0x28f REVERT
---
0x28c: V212 = 0x0
0x28f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x290
[0x290:0x297]
---
Predecessors: [0x285]
Successors: [0x955]
---
0x290 JUMPDEST
0x291 PUSH2 0x9e
0x294 PUSH2 0x955
0x297 JUMP
---
0x290: JUMPDEST 
0x291: V213 = 0x9e
0x294: V214 = 0x955
0x297: JUMP 0x955
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9e]
Exit stack: [V12, 0x9e]

================================

Block 0x298
[0x298:0x299]
---
Predecessors: []
Successors: []
---
0x298 JUMPDEST
0x299 STOP
---
0x298: JUMPDEST 
0x299: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29a
[0x29a:0x2a0]
---
Predecessors: [0x7d]
Successors: [0x2a1, 0x2a5]
---
0x29a JUMPDEST
0x29b CALLVALUE
0x29c ISZERO
0x29d PUSH2 0x2a5
0x2a0 JUMPI
---
0x29a: JUMPDEST 
0x29b: V215 = CALLVALUE
0x29c: V216 = ISZERO V215
0x29d: V217 = 0x2a5
0x2a0: JUMPI 0x2a5 V216
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a1
[0x2a1:0x2a4]
---
Predecessors: [0x29a]
Successors: []
---
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
---
0x2a1: V218 = 0x0
0x2a4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a5
[0x2a5:0x2ac]
---
Predecessors: [0x29a]
Successors: [0x980]
---
0x2a5 JUMPDEST
0x2a6 PUSH2 0x16b
0x2a9 PUSH2 0x980
0x2ac JUMP
---
0x2a5: JUMPDEST 
0x2a6: V219 = 0x16b
0x2a9: V220 = 0x980
0x2ac: JUMP 0x980
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x16b]
Exit stack: [V12, 0x16b]

================================

Block 0x2ad
[0x2ad:0x32a]
---
Predecessors: []
Successors: []
---
0x2ad JUMPDEST
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 PUSH1 0x1
0x2b3 PUSH1 0xa0
0x2b5 PUSH1 0x2
0x2b7 EXP
0x2b8 SUB
0x2b9 SWAP13
0x2ba DUP14
0x2bb AND
0x2bc DUP2
0x2bd MSTORE
0x2be PUSH1 0x20
0x2c0 DUP2
0x2c1 ADD
0x2c2 SWAP12
0x2c3 SWAP1
0x2c4 SWAP12
0x2c5 MSTORE
0x2c6 SWAP9
0x2c7 DUP12
0x2c8 AND
0x2c9 PUSH1 0x40
0x2cb DUP1
0x2cc DUP13
0x2cd ADD
0x2ce SWAP2
0x2cf SWAP1
0x2d0 SWAP2
0x2d1 MSTORE
0x2d2 PUSH1 0x60
0x2d4 DUP12
0x2d5 ADD
0x2d6 SWAP9
0x2d7 SWAP1
0x2d8 SWAP9
0x2d9 MSTORE
0x2da PUSH1 0x80
0x2dc DUP11
0x2dd ADD
0x2de SWAP7
0x2df SWAP1
0x2e0 SWAP7
0x2e1 MSTORE
0x2e2 PUSH1 0xa0
0x2e4 DUP10
0x2e5 ADD
0x2e6 SWAP5
0x2e7 SWAP1
0x2e8 SWAP5
0x2e9 MSTORE
0x2ea SWAP2
0x2eb SWAP1
0x2ec SWAP8
0x2ed AND
0x2ee PUSH1 0xc0
0x2f0 DUP8
0x2f1 ADD
0x2f2 MSTORE
0x2f3 PUSH1 0xff
0x2f5 SWAP1
0x2f6 SWAP7
0x2f7 AND
0x2f8 PUSH1 0xe0
0x2fa DUP7
0x2fb ADD
0x2fc MSTORE
0x2fd PUSH2 0x100
0x300 DUP6
0x301 ADD
0x302 SWAP6
0x303 SWAP1
0x304 SWAP6
0x305 MSTORE
0x306 PUSH2 0x120
0x309 DUP5
0x30a ADD
0x30b SWAP5
0x30c SWAP1
0x30d SWAP5
0x30e MSTORE
0x30f PUSH2 0x140
0x312 DUP4
0x313 ADD
0x314 SWAP4
0x315 SWAP1
0x316 SWAP4
0x317 MSTORE
0x318 ISZERO
0x319 ISZERO
0x31a PUSH2 0x160
0x31d DUP3
0x31e ADD
0x31f MSTORE
0x320 PUSH2 0x180
0x323 ADD
0x324 SWAP1
0x325 MLOAD
0x326 DUP1
0x327 SWAP2
0x328 SUB
0x329 SWAP1
0x32a RETURN
---
0x2ad: JUMPDEST 
0x2ae: V221 = 0x40
0x2b0: V222 = M[0x40]
0x2b1: V223 = 0x1
0x2b3: V224 = 0xa0
0x2b5: V225 = 0x2
0x2b7: V226 = EXP 0x2 0xa0
0x2b8: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bb: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x2bd: M[V222] = V228
0x2be: V229 = 0x20
0x2c1: V230 = ADD V222 0x20
0x2c5: M[V230] = S10
0x2c8: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x2c9: V232 = 0x40
0x2cd: V233 = ADD V222 0x40
0x2d1: M[V233] = V231
0x2d2: V234 = 0x60
0x2d5: V235 = ADD V222 0x60
0x2d9: M[V235] = S8
0x2da: V236 = 0x80
0x2dd: V237 = ADD V222 0x80
0x2e1: M[V237] = S7
0x2e2: V238 = 0xa0
0x2e5: V239 = ADD V222 0xa0
0x2e9: M[V239] = S6
0x2ed: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x2ee: V241 = 0xc0
0x2f1: V242 = ADD V222 0xc0
0x2f2: M[V242] = V240
0x2f3: V243 = 0xff
0x2f7: V244 = AND S4 0xff
0x2f8: V245 = 0xe0
0x2fb: V246 = ADD V222 0xe0
0x2fc: M[V246] = V244
0x2fd: V247 = 0x100
0x301: V248 = ADD V222 0x100
0x305: M[V248] = S3
0x306: V249 = 0x120
0x30a: V250 = ADD V222 0x120
0x30e: M[V250] = S2
0x30f: V251 = 0x140
0x313: V252 = ADD V222 0x140
0x317: M[V252] = S1
0x318: V253 = ISZERO S0
0x319: V254 = ISZERO V253
0x31a: V255 = 0x160
0x31e: V256 = ADD V222 0x160
0x31f: M[V256] = V254
0x320: V257 = 0x180
0x323: V258 = ADD 0x180 V222
0x325: V259 = M[0x40]
0x328: V260 = SUB V258 V259
0x32a: RETURN V259 V260
---
Entry stack: []
Stack pops: 12
Stack additions: []
Exit stack: []

================================

Block 0x32b
[0x32b:0x331]
---
Predecessors: [0x88]
Successors: [0x332, 0x336]
---
0x32b JUMPDEST
0x32c CALLVALUE
0x32d ISZERO
0x32e PUSH2 0x336
0x331 JUMPI
---
0x32b: JUMPDEST 
0x32c: V261 = CALLVALUE
0x32d: V262 = ISZERO V261
0x32e: V263 = 0x336
0x331: JUMPI 0x336 V262
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x332
[0x332:0x335]
---
Predecessors: [0x32b]
Successors: []
---
0x332 PUSH1 0x0
0x334 DUP1
0x335 REVERT
---
0x332: V264 = 0x0
0x335: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x336
[0x336:0x33d]
---
Predecessors: [0x32b]
Successors: [0x9c8]
---
0x336 JUMPDEST
0x337 PUSH2 0x33e
0x33a PUSH2 0x9c8
0x33d JUMP
---
0x336: JUMPDEST 
0x337: V265 = 0x33e
0x33a: V266 = 0x9c8
0x33d: JUMP 0x9c8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x33e]
Exit stack: [V12, 0x33e]

================================

Block 0x33e
[0x33e:0x359]
---
Predecessors: [0x9c8]
Successors: []
---
0x33e JUMPDEST
0x33f PUSH1 0x40
0x341 MLOAD
0x342 PUSH1 0x1
0x344 PUSH1 0xa0
0x346 PUSH1 0x2
0x348 EXP
0x349 SUB
0x34a SWAP1
0x34b SWAP2
0x34c AND
0x34d DUP2
0x34e MSTORE
0x34f PUSH1 0x20
0x351 ADD
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 SWAP2
0x357 SUB
0x358 SWAP1
0x359 RETURN
---
0x33e: JUMPDEST 
0x33f: V267 = 0x40
0x341: V268 = M[0x40]
0x342: V269 = 0x1
0x344: V270 = 0xa0
0x346: V271 = 0x2
0x348: V272 = EXP 0x2 0xa0
0x349: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34c: V274 = AND V1018 0xffffffffffffffffffffffffffffffffffffffff
0x34e: M[V268] = V274
0x34f: V275 = 0x20
0x351: V276 = ADD 0x20 V268
0x352: V277 = 0x40
0x354: V278 = M[0x40]
0x357: V279 = SUB V276 V278
0x359: RETURN V278 V279
---
Entry stack: [V12, 0x33e, V1018]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x33e]

================================

Block 0x35a
[0x35a:0x361]
---
Predecessors: [0x93]
Successors: [0x9d7]
---
0x35a JUMPDEST
0x35b PUSH2 0x9e
0x35e PUSH2 0x9d7
0x361 JUMP
---
0x35a: JUMPDEST 
0x35b: V280 = 0x9e
0x35e: V281 = 0x9d7
0x361: JUMP 0x9d7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9e]
Exit stack: [V12, 0x9e]

================================

Block 0x362
[0x362:0x363]
---
Predecessors: []
Successors: []
---
0x362 JUMPDEST
0x363 STOP
---
0x362: JUMPDEST 
0x363: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x364
[0x364:0x376]
---
Predecessors: [0xad]
Successors: [0xa2e]
---
0x364 JUMPDEST
0x365 PUSH1 0x19
0x367 DUP1
0x368 SLOAD
0x369 PUSH1 0xff
0x36b NOT
0x36c AND
0x36d SWAP1
0x36e SSTORE
0x36f PUSH2 0x377
0x372 DUP3
0x373 PUSH2 0xa2e
0x376 JUMP
---
0x364: JUMPDEST 
0x365: V282 = 0x19
0x368: V283 = S[0x19]
0x369: V284 = 0xff
0x36b: V285 = NOT 0xff
0x36c: V286 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V283
0x36e: S[0x19] = V286
0x36f: V287 = 0x377
0x373: V288 = 0xa2e
0x376: JUMP 0xa2e
---
Entry stack: [V12, 0x9e, V64, V84]
Stack pops: 2
Stack additions: [S1, S0, 0x377, S1]
Exit stack: [V12, 0x9e, V64, V84, 0x377, V64]

================================

Block 0x377
[0x377:0x472]
---
Predecessors: [0xb9d]
Successors: [0xa2e]
---
0x377 JUMPDEST
0x378 PUSH1 0x3
0x37a DUP2
0x37b MLOAD
0x37c DUP2
0x37d SLOAD
0x37e PUSH1 0x1
0x380 PUSH1 0xa0
0x382 PUSH1 0x2
0x384 EXP
0x385 SUB
0x386 NOT
0x387 AND
0x388 PUSH1 0x1
0x38a PUSH1 0xa0
0x38c PUSH1 0x2
0x38e EXP
0x38f SUB
0x390 SWAP2
0x391 SWAP1
0x392 SWAP2
0x393 AND
0x394 OR
0x395 DUP2
0x396 SSTORE
0x397 PUSH1 0x20
0x399 DUP3
0x39a ADD
0x39b MLOAD
0x39c DUP2
0x39d PUSH1 0x1
0x39f ADD
0x3a0 SSTORE
0x3a1 PUSH1 0x40
0x3a3 DUP3
0x3a4 ADD
0x3a5 MLOAD
0x3a6 PUSH1 0x2
0x3a8 DUP3
0x3a9 ADD
0x3aa DUP1
0x3ab SLOAD
0x3ac PUSH1 0x1
0x3ae PUSH1 0xa0
0x3b0 PUSH1 0x2
0x3b2 EXP
0x3b3 SUB
0x3b4 NOT
0x3b5 AND
0x3b6 PUSH1 0x1
0x3b8 PUSH1 0xa0
0x3ba PUSH1 0x2
0x3bc EXP
0x3bd SUB
0x3be SWAP3
0x3bf SWAP1
0x3c0 SWAP3
0x3c1 AND
0x3c2 SWAP2
0x3c3 SWAP1
0x3c4 SWAP2
0x3c5 OR
0x3c6 SWAP1
0x3c7 SSTORE
0x3c8 PUSH1 0x60
0x3ca DUP3
0x3cb ADD
0x3cc MLOAD
0x3cd DUP2
0x3ce PUSH1 0x3
0x3d0 ADD
0x3d1 SSTORE
0x3d2 PUSH1 0x80
0x3d4 DUP3
0x3d5 ADD
0x3d6 MLOAD
0x3d7 DUP2
0x3d8 PUSH1 0x4
0x3da ADD
0x3db SSTORE
0x3dc PUSH1 0xa0
0x3de DUP3
0x3df ADD
0x3e0 MLOAD
0x3e1 DUP2
0x3e2 PUSH1 0x5
0x3e4 ADD
0x3e5 SSTORE
0x3e6 PUSH1 0xc0
0x3e8 DUP3
0x3e9 ADD
0x3ea MLOAD
0x3eb PUSH1 0x6
0x3ed DUP3
0x3ee ADD
0x3ef DUP1
0x3f0 SLOAD
0x3f1 PUSH1 0x1
0x3f3 PUSH1 0xa0
0x3f5 PUSH1 0x2
0x3f7 EXP
0x3f8 SUB
0x3f9 NOT
0x3fa AND
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 SWAP3
0x404 SWAP1
0x405 SWAP3
0x406 AND
0x407 SWAP2
0x408 SWAP1
0x409 SWAP2
0x40a OR
0x40b SWAP1
0x40c SSTORE
0x40d PUSH1 0xe0
0x40f DUP3
0x410 ADD
0x411 MLOAD
0x412 DUP2
0x413 PUSH1 0x6
0x415 ADD
0x416 PUSH1 0x14
0x418 PUSH2 0x100
0x41b EXP
0x41c DUP2
0x41d SLOAD
0x41e DUP2
0x41f PUSH1 0xff
0x421 MUL
0x422 NOT
0x423 AND
0x424 SWAP1
0x425 DUP4
0x426 PUSH1 0xff
0x428 AND
0x429 MUL
0x42a OR
0x42b SWAP1
0x42c SSTORE
0x42d POP
0x42e PUSH2 0x100
0x431 DUP3
0x432 ADD
0x433 MLOAD
0x434 PUSH1 0x7
0x436 DUP3
0x437 ADD
0x438 SSTORE
0x439 PUSH2 0x120
0x43c DUP3
0x43d ADD
0x43e MLOAD
0x43f PUSH1 0x8
0x441 DUP3
0x442 ADD
0x443 SSTORE
0x444 PUSH2 0x140
0x447 DUP3
0x448 ADD
0x449 MLOAD
0x44a DUP2
0x44b PUSH1 0x9
0x44d ADD
0x44e SSTORE
0x44f PUSH2 0x160
0x452 DUP3
0x453 ADD
0x454 MLOAD
0x455 PUSH1 0xa
0x457 SWAP2
0x458 SWAP1
0x459 SWAP2
0x45a ADD
0x45b DUP1
0x45c SLOAD
0x45d PUSH1 0xff
0x45f NOT
0x460 AND
0x461 SWAP2
0x462 ISZERO
0x463 ISZERO
0x464 SWAP2
0x465 SWAP1
0x466 SWAP2
0x467 OR
0x468 SWAP1
0x469 SSTORE
0x46a POP
0x46b PUSH2 0x473
0x46e DUP2
0x46f PUSH2 0xa2e
0x472 JUMP
---
0x377: JUMPDEST 
0x378: V289 = 0x3
0x37b: V290 = M[S0]
0x37d: V291 = S[0x3]
0x37e: V292 = 0x1
0x380: V293 = 0xa0
0x382: V294 = 0x2
0x384: V295 = EXP 0x2 0xa0
0x385: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x386: V297 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x387: V298 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V291
0x388: V299 = 0x1
0x38a: V300 = 0xa0
0x38c: V301 = 0x2
0x38e: V302 = EXP 0x2 0xa0
0x38f: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x393: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x394: V305 = OR V304 V298
0x396: S[0x3] = V305
0x397: V306 = 0x20
0x39a: V307 = ADD S0 0x20
0x39b: V308 = M[V307]
0x39d: V309 = 0x1
0x39f: V310 = ADD 0x1 0x3
0x3a0: S[0x4] = V308
0x3a1: V311 = 0x40
0x3a4: V312 = ADD S0 0x40
0x3a5: V313 = M[V312]
0x3a6: V314 = 0x2
0x3a9: V315 = ADD 0x3 0x2
0x3ab: V316 = S[0x5]
0x3ac: V317 = 0x1
0x3ae: V318 = 0xa0
0x3b0: V319 = 0x2
0x3b2: V320 = EXP 0x2 0xa0
0x3b3: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b4: V322 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V323 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V316
0x3b6: V324 = 0x1
0x3b8: V325 = 0xa0
0x3ba: V326 = 0x2
0x3bc: V327 = EXP 0x2 0xa0
0x3bd: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c1: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x3c5: V330 = OR V329 V323
0x3c7: S[0x5] = V330
0x3c8: V331 = 0x60
0x3cb: V332 = ADD S0 0x60
0x3cc: V333 = M[V332]
0x3ce: V334 = 0x3
0x3d0: V335 = ADD 0x3 0x3
0x3d1: S[0x6] = V333
0x3d2: V336 = 0x80
0x3d5: V337 = ADD S0 0x80
0x3d6: V338 = M[V337]
0x3d8: V339 = 0x4
0x3da: V340 = ADD 0x4 0x3
0x3db: S[0x7] = V338
0x3dc: V341 = 0xa0
0x3df: V342 = ADD S0 0xa0
0x3e0: V343 = M[V342]
0x3e2: V344 = 0x5
0x3e4: V345 = ADD 0x5 0x3
0x3e5: S[0x8] = V343
0x3e6: V346 = 0xc0
0x3e9: V347 = ADD S0 0xc0
0x3ea: V348 = M[V347]
0x3eb: V349 = 0x6
0x3ee: V350 = ADD 0x3 0x6
0x3f0: V351 = S[0x9]
0x3f1: V352 = 0x1
0x3f3: V353 = 0xa0
0x3f5: V354 = 0x2
0x3f7: V355 = EXP 0x2 0xa0
0x3f8: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f9: V357 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3fa: V358 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V351
0x3fb: V359 = 0x1
0x3fd: V360 = 0xa0
0x3ff: V361 = 0x2
0x401: V362 = EXP 0x2 0xa0
0x402: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x406: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x40a: V365 = OR V364 V358
0x40c: S[0x9] = V365
0x40d: V366 = 0xe0
0x410: V367 = ADD S0 0xe0
0x411: V368 = M[V367]
0x413: V369 = 0x6
0x415: V370 = ADD 0x6 0x3
0x416: V371 = 0x14
0x418: V372 = 0x100
0x41b: V373 = EXP 0x100 0x14
0x41d: V374 = S[0x9]
0x41f: V375 = 0xff
0x421: V376 = MUL 0xff 0x10000000000000000000000000000000000000000
0x422: V377 = NOT 0xff0000000000000000000000000000000000000000
0x423: V378 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V374
0x426: V379 = 0xff
0x428: V380 = AND 0xff V368
0x429: V381 = MUL V380 0x10000000000000000000000000000000000000000
0x42a: V382 = OR V381 V378
0x42c: S[0x9] = V382
0x42e: V383 = 0x100
0x432: V384 = ADD S0 0x100
0x433: V385 = M[V384]
0x434: V386 = 0x7
0x437: V387 = ADD 0x3 0x7
0x438: S[0xa] = V385
0x439: V388 = 0x120
0x43d: V389 = ADD S0 0x120
0x43e: V390 = M[V389]
0x43f: V391 = 0x8
0x442: V392 = ADD 0x3 0x8
0x443: S[0xb] = V390
0x444: V393 = 0x140
0x448: V394 = ADD S0 0x140
0x449: V395 = M[V394]
0x44b: V396 = 0x9
0x44d: V397 = ADD 0x9 0x3
0x44e: S[0xc] = V395
0x44f: V398 = 0x160
0x453: V399 = ADD S0 0x160
0x454: V400 = M[V399]
0x455: V401 = 0xa
0x45a: V402 = ADD 0xa 0x3
0x45c: V403 = S[0xd]
0x45d: V404 = 0xff
0x45f: V405 = NOT 0xff
0x460: V406 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V403
0x462: V407 = ISZERO V400
0x463: V408 = ISZERO V407
0x467: V409 = OR V408 V406
0x469: S[0xd] = V409
0x46b: V410 = 0x473
0x46f: V411 = 0xa2e
0x472: JUMP 0xa2e
---
Entry stack: [V12, 0x9e, V64, V84, S0]
Stack pops: 2
Stack additions: [S1, 0x473, S1]
Exit stack: [V12, 0x9e, V64, V84, 0x473, V84]

================================

Block 0x473
[0x473:0x645]
---
Predecessors: [0xb9d]
Successors: [0x646, 0x64a]
---
0x473 JUMPDEST
0x474 PUSH1 0xe
0x476 DUP2
0x477 MLOAD
0x478 DUP2
0x479 SLOAD
0x47a PUSH1 0x1
0x47c PUSH1 0xa0
0x47e PUSH1 0x2
0x480 EXP
0x481 SUB
0x482 NOT
0x483 AND
0x484 PUSH1 0x1
0x486 PUSH1 0xa0
0x488 PUSH1 0x2
0x48a EXP
0x48b SUB
0x48c SWAP2
0x48d SWAP1
0x48e SWAP2
0x48f AND
0x490 OR
0x491 DUP2
0x492 SSTORE
0x493 PUSH1 0x20
0x495 DUP3
0x496 ADD
0x497 MLOAD
0x498 DUP2
0x499 PUSH1 0x1
0x49b ADD
0x49c SSTORE
0x49d PUSH1 0x40
0x49f DUP3
0x4a0 ADD
0x4a1 MLOAD
0x4a2 PUSH1 0x2
0x4a4 DUP3
0x4a5 ADD
0x4a6 DUP1
0x4a7 SLOAD
0x4a8 PUSH1 0x1
0x4aa PUSH1 0xa0
0x4ac PUSH1 0x2
0x4ae EXP
0x4af SUB
0x4b0 NOT
0x4b1 AND
0x4b2 PUSH1 0x1
0x4b4 PUSH1 0xa0
0x4b6 PUSH1 0x2
0x4b8 EXP
0x4b9 SUB
0x4ba SWAP3
0x4bb SWAP1
0x4bc SWAP3
0x4bd AND
0x4be SWAP2
0x4bf SWAP1
0x4c0 SWAP2
0x4c1 OR
0x4c2 SWAP1
0x4c3 SSTORE
0x4c4 PUSH1 0x60
0x4c6 DUP3
0x4c7 ADD
0x4c8 MLOAD
0x4c9 DUP2
0x4ca PUSH1 0x3
0x4cc ADD
0x4cd SSTORE
0x4ce PUSH1 0x80
0x4d0 DUP3
0x4d1 ADD
0x4d2 MLOAD
0x4d3 DUP2
0x4d4 PUSH1 0x4
0x4d6 ADD
0x4d7 SSTORE
0x4d8 PUSH1 0xa0
0x4da DUP3
0x4db ADD
0x4dc MLOAD
0x4dd DUP2
0x4de PUSH1 0x5
0x4e0 ADD
0x4e1 SSTORE
0x4e2 PUSH1 0xc0
0x4e4 DUP3
0x4e5 ADD
0x4e6 MLOAD
0x4e7 PUSH1 0x6
0x4e9 DUP3
0x4ea ADD
0x4eb DUP1
0x4ec SLOAD
0x4ed PUSH1 0x1
0x4ef PUSH1 0xa0
0x4f1 PUSH1 0x2
0x4f3 EXP
0x4f4 SUB
0x4f5 NOT
0x4f6 AND
0x4f7 PUSH1 0x1
0x4f9 PUSH1 0xa0
0x4fb PUSH1 0x2
0x4fd EXP
0x4fe SUB
0x4ff SWAP3
0x500 SWAP1
0x501 SWAP3
0x502 AND
0x503 SWAP2
0x504 SWAP1
0x505 SWAP2
0x506 OR
0x507 SWAP1
0x508 SSTORE
0x509 PUSH1 0xe0
0x50b DUP3
0x50c ADD
0x50d MLOAD
0x50e DUP2
0x50f PUSH1 0x6
0x511 ADD
0x512 PUSH1 0x14
0x514 PUSH2 0x100
0x517 EXP
0x518 DUP2
0x519 SLOAD
0x51a DUP2
0x51b PUSH1 0xff
0x51d MUL
0x51e NOT
0x51f AND
0x520 SWAP1
0x521 DUP4
0x522 PUSH1 0xff
0x524 AND
0x525 MUL
0x526 OR
0x527 SWAP1
0x528 SSTORE
0x529 POP
0x52a PUSH2 0x100
0x52d DUP3
0x52e ADD
0x52f MLOAD
0x530 PUSH1 0x7
0x532 DUP3
0x533 ADD
0x534 SSTORE
0x535 PUSH2 0x120
0x538 DUP3
0x539 ADD
0x53a MLOAD
0x53b PUSH1 0x8
0x53d DUP3
0x53e ADD
0x53f SSTORE
0x540 PUSH2 0x140
0x543 DUP3
0x544 ADD
0x545 MLOAD
0x546 DUP2
0x547 PUSH1 0x9
0x549 ADD
0x54a SSTORE
0x54b PUSH2 0x160
0x54e DUP3
0x54f ADD
0x550 MLOAD
0x551 PUSH1 0xa
0x553 SWAP2
0x554 SWAP1
0x555 SWAP2
0x556 ADD
0x557 DUP1
0x558 SLOAD
0x559 PUSH1 0xff
0x55b NOT
0x55c AND
0x55d SWAP2
0x55e ISZERO
0x55f ISZERO
0x560 SWAP2
0x561 SWAP1
0x562 SWAP2
0x563 OR
0x564 SWAP1
0x565 SSTORE
0x566 POP
0x567 PUSH1 0x1
0x569 SLOAD
0x56a PUSH1 0x1
0x56c PUSH1 0xa0
0x56e PUSH1 0x2
0x570 EXP
0x571 SUB
0x572 AND
0x573 PUSH4 0xa19b14a
0x578 GAS
0x579 PUSH1 0x3
0x57b SLOAD
0x57c PUSH1 0x4
0x57e SLOAD
0x57f PUSH1 0x5
0x581 SLOAD
0x582 PUSH1 0x6
0x584 SLOAD
0x585 PUSH1 0x7
0x587 SLOAD
0x588 PUSH1 0x8
0x58a SLOAD
0x58b PUSH1 0x9
0x58d SLOAD
0x58e PUSH1 0xa
0x590 SLOAD
0x591 PUSH1 0xb
0x593 SLOAD
0x594 PUSH1 0xc
0x596 SLOAD
0x597 PUSH1 0x1
0x599 PUSH1 0xa0
0x59b PUSH1 0x2
0x59d EXP
0x59e SUB
0x59f SWAP10
0x5a0 DUP11
0x5a1 AND
0x5a2 SWAP10
0x5a3 SWAP8
0x5a4 DUP9
0x5a5 AND
0x5a6 SWAP8
0x5a7 DUP5
0x5a8 AND
0x5a9 SWAP4
0x5aa PUSH1 0xa0
0x5ac PUSH1 0x2
0x5ae EXP
0x5af SWAP1
0x5b0 DIV
0x5b1 PUSH1 0xff
0x5b3 AND
0x5b4 SWAP3
0x5b5 SWAP2
0x5b6 SWAP1
0x5b7 PUSH1 0x40
0x5b9 MLOAD
0x5ba PUSH1 0xe0
0x5bc PUSH1 0x2
0x5be EXP
0x5bf PUSH4 0xffffffff
0x5c4 DUP16
0x5c5 AND
0x5c6 MUL
0x5c7 DUP2
0x5c8 MSTORE
0x5c9 PUSH1 0x1
0x5cb PUSH1 0xa0
0x5cd PUSH1 0x2
0x5cf EXP
0x5d0 SUB
0x5d1 SWAP12
0x5d2 DUP13
0x5d3 AND
0x5d4 PUSH1 0x4
0x5d6 DUP3
0x5d7 ADD
0x5d8 MSTORE
0x5d9 PUSH1 0x24
0x5db DUP2
0x5dc ADD
0x5dd SWAP11
0x5de SWAP1
0x5df SWAP11
0x5e0 MSTORE
0x5e1 SWAP8
0x5e2 DUP11
0x5e3 AND
0x5e4 PUSH1 0x44
0x5e6 DUP11
0x5e7 ADD
0x5e8 MSTORE
0x5e9 PUSH1 0x64
0x5eb DUP10
0x5ec ADD
0x5ed SWAP7
0x5ee SWAP1
0x5ef SWAP7
0x5f0 MSTORE
0x5f1 PUSH1 0x84
0x5f3 DUP9
0x5f4 ADD
0x5f5 SWAP5
0x5f6 SWAP1
0x5f7 SWAP5
0x5f8 MSTORE
0x5f9 PUSH1 0xa4
0x5fb DUP8
0x5fc ADD
0x5fd SWAP3
0x5fe SWAP1
0x5ff SWAP3
0x600 MSTORE
0x601 SWAP1
0x602 SWAP6
0x603 AND
0x604 PUSH1 0xc4
0x606 DUP6
0x607 ADD
0x608 MSTORE
0x609 PUSH1 0xff
0x60b SWAP1
0x60c SWAP5
0x60d AND
0x60e PUSH1 0xe4
0x610 DUP5
0x611 ADD
0x612 MSTORE
0x613 PUSH2 0x104
0x616 DUP4
0x617 ADD
0x618 SWAP4
0x619 SWAP1
0x61a SWAP4
0x61b MSTORE
0x61c PUSH2 0x124
0x61f DUP3
0x620 ADD
0x621 SWAP3
0x622 SWAP1
0x623 SWAP3
0x624 MSTORE
0x625 PUSH2 0x144
0x628 DUP2
0x629 ADD
0x62a SWAP2
0x62b SWAP1
0x62c SWAP2
0x62d MSTORE
0x62e PUSH2 0x164
0x631 ADD
0x632 PUSH1 0x0
0x634 PUSH1 0x40
0x636 MLOAD
0x637 DUP1
0x638 DUP4
0x639 SUB
0x63a DUP2
0x63b PUSH1 0x0
0x63d DUP9
0x63e DUP1
0x63f EXTCODESIZE
0x640 ISZERO
0x641 ISZERO
0x642 PUSH2 0x64a
0x645 JUMPI
---
0x473: JUMPDEST 
0x474: V412 = 0xe
0x477: V413 = M[S0]
0x479: V414 = S[0xe]
0x47a: V415 = 0x1
0x47c: V416 = 0xa0
0x47e: V417 = 0x2
0x480: V418 = EXP 0x2 0xa0
0x481: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x482: V420 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x483: V421 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V414
0x484: V422 = 0x1
0x486: V423 = 0xa0
0x488: V424 = 0x2
0x48a: V425 = EXP 0x2 0xa0
0x48b: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48f: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V413
0x490: V428 = OR V427 V421
0x492: S[0xe] = V428
0x493: V429 = 0x20
0x496: V430 = ADD S0 0x20
0x497: V431 = M[V430]
0x499: V432 = 0x1
0x49b: V433 = ADD 0x1 0xe
0x49c: S[0xf] = V431
0x49d: V434 = 0x40
0x4a0: V435 = ADD S0 0x40
0x4a1: V436 = M[V435]
0x4a2: V437 = 0x2
0x4a5: V438 = ADD 0xe 0x2
0x4a7: V439 = S[0x10]
0x4a8: V440 = 0x1
0x4aa: V441 = 0xa0
0x4ac: V442 = 0x2
0x4ae: V443 = EXP 0x2 0xa0
0x4af: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b0: V445 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4b1: V446 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V439
0x4b2: V447 = 0x1
0x4b4: V448 = 0xa0
0x4b6: V449 = 0x2
0x4b8: V450 = EXP 0x2 0xa0
0x4b9: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bd: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x4c1: V453 = OR V452 V446
0x4c3: S[0x10] = V453
0x4c4: V454 = 0x60
0x4c7: V455 = ADD S0 0x60
0x4c8: V456 = M[V455]
0x4ca: V457 = 0x3
0x4cc: V458 = ADD 0x3 0xe
0x4cd: S[0x11] = V456
0x4ce: V459 = 0x80
0x4d1: V460 = ADD S0 0x80
0x4d2: V461 = M[V460]
0x4d4: V462 = 0x4
0x4d6: V463 = ADD 0x4 0xe
0x4d7: S[0x12] = V461
0x4d8: V464 = 0xa0
0x4db: V465 = ADD S0 0xa0
0x4dc: V466 = M[V465]
0x4de: V467 = 0x5
0x4e0: V468 = ADD 0x5 0xe
0x4e1: S[0x13] = V466
0x4e2: V469 = 0xc0
0x4e5: V470 = ADD S0 0xc0
0x4e6: V471 = M[V470]
0x4e7: V472 = 0x6
0x4ea: V473 = ADD 0xe 0x6
0x4ec: V474 = S[0x14]
0x4ed: V475 = 0x1
0x4ef: V476 = 0xa0
0x4f1: V477 = 0x2
0x4f3: V478 = EXP 0x2 0xa0
0x4f4: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f5: V480 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4f6: V481 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V474
0x4f7: V482 = 0x1
0x4f9: V483 = 0xa0
0x4fb: V484 = 0x2
0x4fd: V485 = EXP 0x2 0xa0
0x4fe: V486 = SUB 0x10000000000000000000000000000000000000000 0x1
0x502: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x506: V488 = OR V487 V481
0x508: S[0x14] = V488
0x509: V489 = 0xe0
0x50c: V490 = ADD S0 0xe0
0x50d: V491 = M[V490]
0x50f: V492 = 0x6
0x511: V493 = ADD 0x6 0xe
0x512: V494 = 0x14
0x514: V495 = 0x100
0x517: V496 = EXP 0x100 0x14
0x519: V497 = S[0x14]
0x51b: V498 = 0xff
0x51d: V499 = MUL 0xff 0x10000000000000000000000000000000000000000
0x51e: V500 = NOT 0xff0000000000000000000000000000000000000000
0x51f: V501 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V497
0x522: V502 = 0xff
0x524: V503 = AND 0xff V491
0x525: V504 = MUL V503 0x10000000000000000000000000000000000000000
0x526: V505 = OR V504 V501
0x528: S[0x14] = V505
0x52a: V506 = 0x100
0x52e: V507 = ADD S0 0x100
0x52f: V508 = M[V507]
0x530: V509 = 0x7
0x533: V510 = ADD 0xe 0x7
0x534: S[0x15] = V508
0x535: V511 = 0x120
0x539: V512 = ADD S0 0x120
0x53a: V513 = M[V512]
0x53b: V514 = 0x8
0x53e: V515 = ADD 0xe 0x8
0x53f: S[0x16] = V513
0x540: V516 = 0x140
0x544: V517 = ADD S0 0x140
0x545: V518 = M[V517]
0x547: V519 = 0x9
0x549: V520 = ADD 0x9 0xe
0x54a: S[0x17] = V518
0x54b: V521 = 0x160
0x54f: V522 = ADD S0 0x160
0x550: V523 = M[V522]
0x551: V524 = 0xa
0x556: V525 = ADD 0xa 0xe
0x558: V526 = S[0x18]
0x559: V527 = 0xff
0x55b: V528 = NOT 0xff
0x55c: V529 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V526
0x55e: V530 = ISZERO V523
0x55f: V531 = ISZERO V530
0x563: V532 = OR V531 V529
0x565: S[0x18] = V532
0x567: V533 = 0x1
0x569: V534 = S[0x1]
0x56a: V535 = 0x1
0x56c: V536 = 0xa0
0x56e: V537 = 0x2
0x570: V538 = EXP 0x2 0xa0
0x571: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x572: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x573: V541 = 0xa19b14a
0x578: V542 = GAS
0x579: V543 = 0x3
0x57b: V544 = S[0x3]
0x57c: V545 = 0x4
0x57e: V546 = S[0x4]
0x57f: V547 = 0x5
0x581: V548 = S[0x5]
0x582: V549 = 0x6
0x584: V550 = S[0x6]
0x585: V551 = 0x7
0x587: V552 = S[0x7]
0x588: V553 = 0x8
0x58a: V554 = S[0x8]
0x58b: V555 = 0x9
0x58d: V556 = S[0x9]
0x58e: V557 = 0xa
0x590: V558 = S[0xa]
0x591: V559 = 0xb
0x593: V560 = S[0xb]
0x594: V561 = 0xc
0x596: V562 = S[0xc]
0x597: V563 = 0x1
0x599: V564 = 0xa0
0x59b: V565 = 0x2
0x59d: V566 = EXP 0x2 0xa0
0x59e: V567 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a1: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0x5a5: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x5a8: V570 = AND V556 0xffffffffffffffffffffffffffffffffffffffff
0x5aa: V571 = 0xa0
0x5ac: V572 = 0x2
0x5ae: V573 = EXP 0x2 0xa0
0x5b0: V574 = DIV V556 0x10000000000000000000000000000000000000000
0x5b1: V575 = 0xff
0x5b3: V576 = AND 0xff V574
0x5b7: V577 = 0x40
0x5b9: V578 = M[0x40]
0x5ba: V579 = 0xe0
0x5bc: V580 = 0x2
0x5be: V581 = EXP 0x2 0xe0
0x5bf: V582 = 0xffffffff
0x5c5: V583 = AND 0xa19b14a 0xffffffff
0x5c6: V584 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x5c8: M[V578] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x5c9: V585 = 0x1
0x5cb: V586 = 0xa0
0x5cd: V587 = 0x2
0x5cf: V588 = EXP 0x2 0xa0
0x5d0: V589 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d3: V590 = AND 0xffffffffffffffffffffffffffffffffffffffff V568
0x5d4: V591 = 0x4
0x5d7: V592 = ADD V578 0x4
0x5d8: M[V592] = V590
0x5d9: V593 = 0x24
0x5dc: V594 = ADD V578 0x24
0x5e0: M[V594] = V546
0x5e3: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x5e4: V596 = 0x44
0x5e7: V597 = ADD V578 0x44
0x5e8: M[V597] = V595
0x5e9: V598 = 0x64
0x5ec: V599 = ADD V578 0x64
0x5f0: M[V599] = V550
0x5f1: V600 = 0x84
0x5f4: V601 = ADD V578 0x84
0x5f8: M[V601] = V552
0x5f9: V602 = 0xa4
0x5fc: V603 = ADD V578 0xa4
0x600: M[V603] = V554
0x603: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V570
0x604: V605 = 0xc4
0x607: V606 = ADD V578 0xc4
0x608: M[V606] = V604
0x609: V607 = 0xff
0x60d: V608 = AND V576 0xff
0x60e: V609 = 0xe4
0x611: V610 = ADD V578 0xe4
0x612: M[V610] = V608
0x613: V611 = 0x104
0x617: V612 = ADD V578 0x104
0x61b: M[V612] = V558
0x61c: V613 = 0x124
0x620: V614 = ADD V578 0x124
0x624: M[V614] = V560
0x625: V615 = 0x144
0x629: V616 = ADD V578 0x144
0x62d: M[V616] = V562
0x62e: V617 = 0x164
0x631: V618 = ADD 0x164 V578
0x632: V619 = 0x0
0x634: V620 = 0x40
0x636: V621 = M[0x40]
0x639: V622 = SUB V618 V621
0x63b: V623 = 0x0
0x63f: V624 = EXTCODESIZE V540
0x640: V625 = ISZERO V624
0x641: V626 = ISZERO V625
0x642: V627 = 0x64a
0x645: JUMPI 0x64a V626
---
Entry stack: [V12, 0x9e, V64, V84, S0]
Stack pops: 1
Stack additions: [V540, 0xa19b14a, V542, V618, 0x0, V621, V622, V621, 0x0, V540]
Exit stack: [V12, 0x9e, V64, V84, V540, 0xa19b14a, V542, V618, 0x0, V621, V622, V621, 0x0, V540]

================================

Block 0x646
[0x646:0x649]
---
Predecessors: [0x473]
Successors: []
---
0x646 PUSH1 0x0
0x648 DUP1
0x649 REVERT
---
0x646: V628 = 0x0
0x649: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9e, V64, V84, V540, 0xa19b14a, V542, V618, 0x0, V621, V622, V621, 0x0, V540]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, V540, 0xa19b14a, V542, V618, 0x0, V621, V622, V621, 0x0, V540]

================================

Block 0x64a
[0x64a:0x652]
---
Predecessors: [0x473]
Successors: [0x653, 0x657]
---
0x64a JUMPDEST
0x64b DUP8
0x64c CALL
0x64d ISZERO
0x64e ISZERO
0x64f PUSH2 0x657
0x652 JUMPI
---
0x64a: JUMPDEST 
0x64c: V629 = CALL V542 V540 0x0 V621 V622 V621 0x0
0x64d: V630 = ISZERO V629
0x64e: V631 = ISZERO V630
0x64f: V632 = 0x657
0x652: JUMPI 0x657 V631
---
Entry stack: [V12, 0x9e, V64, V84, V540, 0xa19b14a, V542, V618, 0x0, V621, V622, V621, 0x0, V540]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, 0x9e, V64, V84, V540, 0xa19b14a, V542, V618]

================================

Block 0x653
[0x653:0x656]
---
Predecessors: [0x64a]
Successors: []
---
0x653 PUSH1 0x0
0x655 DUP1
0x656 REVERT
---
0x653: V633 = 0x0
0x656: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9e, V64, V84, V540, 0xa19b14a, V542, V618]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, V540, 0xa19b14a, V542, V618]

================================

Block 0x657
[0x657:0x73c]
---
Predecessors: [0x64a]
Successors: [0x73d, 0x741]
---
0x657 JUMPDEST
0x658 POP
0x659 POP
0x65a PUSH1 0x1
0x65c SLOAD
0x65d PUSH1 0x1
0x65f PUSH1 0xa0
0x661 PUSH1 0x2
0x663 EXP
0x664 SUB
0x665 AND
0x666 SWAP2
0x667 POP
0x668 PUSH4 0xa19b14a
0x66d SWAP1
0x66e POP
0x66f GAS
0x670 PUSH1 0xe
0x672 SLOAD
0x673 PUSH1 0xf
0x675 SLOAD
0x676 PUSH1 0x10
0x678 SLOAD
0x679 PUSH1 0x11
0x67b SLOAD
0x67c PUSH1 0x12
0x67e SLOAD
0x67f PUSH1 0x13
0x681 SLOAD
0x682 PUSH1 0x14
0x684 SLOAD
0x685 PUSH1 0x15
0x687 SLOAD
0x688 PUSH1 0x16
0x68a SLOAD
0x68b PUSH1 0x17
0x68d SLOAD
0x68e PUSH1 0x1
0x690 PUSH1 0xa0
0x692 PUSH1 0x2
0x694 EXP
0x695 SUB
0x696 SWAP10
0x697 DUP11
0x698 AND
0x699 SWAP10
0x69a SWAP8
0x69b DUP9
0x69c AND
0x69d SWAP8
0x69e DUP5
0x69f AND
0x6a0 SWAP4
0x6a1 PUSH1 0xa0
0x6a3 PUSH1 0x2
0x6a5 EXP
0x6a6 SWAP1
0x6a7 DIV
0x6a8 PUSH1 0xff
0x6aa AND
0x6ab SWAP3
0x6ac SWAP2
0x6ad SWAP1
0x6ae PUSH1 0x40
0x6b0 MLOAD
0x6b1 PUSH1 0xe0
0x6b3 PUSH1 0x2
0x6b5 EXP
0x6b6 PUSH4 0xffffffff
0x6bb DUP16
0x6bc AND
0x6bd MUL
0x6be DUP2
0x6bf MSTORE
0x6c0 PUSH1 0x1
0x6c2 PUSH1 0xa0
0x6c4 PUSH1 0x2
0x6c6 EXP
0x6c7 SUB
0x6c8 SWAP12
0x6c9 DUP13
0x6ca AND
0x6cb PUSH1 0x4
0x6cd DUP3
0x6ce ADD
0x6cf MSTORE
0x6d0 PUSH1 0x24
0x6d2 DUP2
0x6d3 ADD
0x6d4 SWAP11
0x6d5 SWAP1
0x6d6 SWAP11
0x6d7 MSTORE
0x6d8 SWAP8
0x6d9 DUP11
0x6da AND
0x6db PUSH1 0x44
0x6dd DUP11
0x6de ADD
0x6df MSTORE
0x6e0 PUSH1 0x64
0x6e2 DUP10
0x6e3 ADD
0x6e4 SWAP7
0x6e5 SWAP1
0x6e6 SWAP7
0x6e7 MSTORE
0x6e8 PUSH1 0x84
0x6ea DUP9
0x6eb ADD
0x6ec SWAP5
0x6ed SWAP1
0x6ee SWAP5
0x6ef MSTORE
0x6f0 PUSH1 0xa4
0x6f2 DUP8
0x6f3 ADD
0x6f4 SWAP3
0x6f5 SWAP1
0x6f6 SWAP3
0x6f7 MSTORE
0x6f8 SWAP1
0x6f9 SWAP6
0x6fa AND
0x6fb PUSH1 0xc4
0x6fd DUP6
0x6fe ADD
0x6ff MSTORE
0x700 PUSH1 0xff
0x702 SWAP1
0x703 SWAP5
0x704 AND
0x705 PUSH1 0xe4
0x707 DUP5
0x708 ADD
0x709 MSTORE
0x70a PUSH2 0x104
0x70d DUP4
0x70e ADD
0x70f SWAP4
0x710 SWAP1
0x711 SWAP4
0x712 MSTORE
0x713 PUSH2 0x124
0x716 DUP3
0x717 ADD
0x718 SWAP3
0x719 SWAP1
0x71a SWAP3
0x71b MSTORE
0x71c PUSH2 0x144
0x71f DUP2
0x720 ADD
0x721 SWAP2
0x722 SWAP1
0x723 SWAP2
0x724 MSTORE
0x725 PUSH2 0x164
0x728 ADD
0x729 PUSH1 0x0
0x72b PUSH1 0x40
0x72d MLOAD
0x72e DUP1
0x72f DUP4
0x730 SUB
0x731 DUP2
0x732 PUSH1 0x0
0x734 DUP9
0x735 DUP1
0x736 EXTCODESIZE
0x737 ISZERO
0x738 ISZERO
0x739 PUSH2 0x741
0x73c JUMPI
---
0x657: JUMPDEST 
0x65a: V634 = 0x1
0x65c: V635 = S[0x1]
0x65d: V636 = 0x1
0x65f: V637 = 0xa0
0x661: V638 = 0x2
0x663: V639 = EXP 0x2 0xa0
0x664: V640 = SUB 0x10000000000000000000000000000000000000000 0x1
0x665: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V635
0x668: V642 = 0xa19b14a
0x66f: V643 = GAS
0x670: V644 = 0xe
0x672: V645 = S[0xe]
0x673: V646 = 0xf
0x675: V647 = S[0xf]
0x676: V648 = 0x10
0x678: V649 = S[0x10]
0x679: V650 = 0x11
0x67b: V651 = S[0x11]
0x67c: V652 = 0x12
0x67e: V653 = S[0x12]
0x67f: V654 = 0x13
0x681: V655 = S[0x13]
0x682: V656 = 0x14
0x684: V657 = S[0x14]
0x685: V658 = 0x15
0x687: V659 = S[0x15]
0x688: V660 = 0x16
0x68a: V661 = S[0x16]
0x68b: V662 = 0x17
0x68d: V663 = S[0x17]
0x68e: V664 = 0x1
0x690: V665 = 0xa0
0x692: V666 = 0x2
0x694: V667 = EXP 0x2 0xa0
0x695: V668 = SUB 0x10000000000000000000000000000000000000000 0x1
0x698: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V645
0x69c: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0x69f: V671 = AND V657 0xffffffffffffffffffffffffffffffffffffffff
0x6a1: V672 = 0xa0
0x6a3: V673 = 0x2
0x6a5: V674 = EXP 0x2 0xa0
0x6a7: V675 = DIV V657 0x10000000000000000000000000000000000000000
0x6a8: V676 = 0xff
0x6aa: V677 = AND 0xff V675
0x6ae: V678 = 0x40
0x6b0: V679 = M[0x40]
0x6b1: V680 = 0xe0
0x6b3: V681 = 0x2
0x6b5: V682 = EXP 0x2 0xe0
0x6b6: V683 = 0xffffffff
0x6bc: V684 = AND 0xa19b14a 0xffffffff
0x6bd: V685 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x6bf: M[V679] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x6c0: V686 = 0x1
0x6c2: V687 = 0xa0
0x6c4: V688 = 0x2
0x6c6: V689 = EXP 0x2 0xa0
0x6c7: V690 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ca: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V669
0x6cb: V692 = 0x4
0x6ce: V693 = ADD V679 0x4
0x6cf: M[V693] = V691
0x6d0: V694 = 0x24
0x6d3: V695 = ADD V679 0x24
0x6d7: M[V695] = V647
0x6da: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V670
0x6db: V697 = 0x44
0x6de: V698 = ADD V679 0x44
0x6df: M[V698] = V696
0x6e0: V699 = 0x64
0x6e3: V700 = ADD V679 0x64
0x6e7: M[V700] = V651
0x6e8: V701 = 0x84
0x6eb: V702 = ADD V679 0x84
0x6ef: M[V702] = V653
0x6f0: V703 = 0xa4
0x6f3: V704 = ADD V679 0xa4
0x6f7: M[V704] = V655
0x6fa: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V671
0x6fb: V706 = 0xc4
0x6fe: V707 = ADD V679 0xc4
0x6ff: M[V707] = V705
0x700: V708 = 0xff
0x704: V709 = AND V677 0xff
0x705: V710 = 0xe4
0x708: V711 = ADD V679 0xe4
0x709: M[V711] = V709
0x70a: V712 = 0x104
0x70e: V713 = ADD V679 0x104
0x712: M[V713] = V659
0x713: V714 = 0x124
0x717: V715 = ADD V679 0x124
0x71b: M[V715] = V661
0x71c: V716 = 0x144
0x720: V717 = ADD V679 0x144
0x724: M[V717] = V663
0x725: V718 = 0x164
0x728: V719 = ADD 0x164 V679
0x729: V720 = 0x0
0x72b: V721 = 0x40
0x72d: V722 = M[0x40]
0x730: V723 = SUB V719 V722
0x732: V724 = 0x0
0x736: V725 = EXTCODESIZE V641
0x737: V726 = ISZERO V725
0x738: V727 = ISZERO V726
0x739: V728 = 0x741
0x73c: JUMPI 0x741 V727
---
Entry stack: [V12, 0x9e, V64, V84, V540, 0xa19b14a, V542, V618]
Stack pops: 4
Stack additions: [V641, 0xa19b14a, V643, V719, 0x0, V722, V723, V722, 0x0, V641]
Exit stack: [V12, 0x9e, V64, V84, V641, 0xa19b14a, V643, V719, 0x0, V722, V723, V722, 0x0, V641]

================================

Block 0x73d
[0x73d:0x740]
---
Predecessors: [0x657]
Successors: []
---
0x73d PUSH1 0x0
0x73f DUP1
0x740 REVERT
---
0x73d: V729 = 0x0
0x740: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9e, V64, V84, V641, 0xa19b14a, V643, V719, 0x0, V722, V723, V722, 0x0, V641]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, V641, 0xa19b14a, V643, V719, 0x0, V722, V723, V722, 0x0, V641]

================================

Block 0x741
[0x741:0x749]
---
Predecessors: [0x657]
Successors: [0x74a, 0x74e]
---
0x741 JUMPDEST
0x742 DUP8
0x743 CALL
0x744 ISZERO
0x745 ISZERO
0x746 PUSH2 0x74e
0x749 JUMPI
---
0x741: JUMPDEST 
0x743: V730 = CALL V643 V641 0x0 V722 V723 V722 0x0
0x744: V731 = ISZERO V730
0x745: V732 = ISZERO V731
0x746: V733 = 0x74e
0x749: JUMPI 0x74e V732
---
Entry stack: [V12, 0x9e, V64, V84, V641, 0xa19b14a, V643, V719, 0x0, V722, V723, V722, 0x0, V641]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, 0x9e, V64, V84, V641, 0xa19b14a, V643, V719]

================================

Block 0x74a
[0x74a:0x74d]
---
Predecessors: [0x741]
Successors: []
---
0x74a PUSH1 0x0
0x74c DUP1
0x74d REVERT
---
0x74a: V734 = 0x0
0x74d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9e, V64, V84, V641, 0xa19b14a, V643, V719]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, V641, 0xa19b14a, V643, V719]

================================

Block 0x74e
[0x74e:0x75f]
---
Predecessors: [0x741]
Successors: [0x760]
---
0x74e JUMPDEST
0x74f POP
0x750 POP
0x751 PUSH1 0x19
0x753 DUP1
0x754 SLOAD
0x755 PUSH1 0xff
0x757 NOT
0x758 AND
0x759 PUSH1 0x1
0x75b OR
0x75c SWAP1
0x75d SSTORE
0x75e POP
0x75f POP
---
0x74e: JUMPDEST 
0x751: V735 = 0x19
0x754: V736 = S[0x19]
0x755: V737 = 0xff
0x757: V738 = NOT 0xff
0x758: V739 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V736
0x759: V740 = 0x1
0x75b: V741 = OR 0x1 V739
0x75d: S[0x19] = V741
---
Entry stack: [V12, 0x9e, V64, V84, V641, 0xa19b14a, V643, V719]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84]

================================

Block 0x760
[0x760:0x763]
---
Predecessors: [0x74e, 0x91b]
Successors: [0x9e, 0x949]
---
0x760 JUMPDEST
0x761 POP
0x762 POP
0x763 JUMP
---
0x760: JUMPDEST 
0x763: JUMP {0x9e, 0x949}
---
Entry stack: [V12, S3, {0x9e, 0x949}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S3]

================================

Block 0x764
[0x764:0x7c2]
---
Predecessors: [0x13e, 0x84a, 0x96d]
Successors: [0x7c3, 0x7c7]
---
0x764 JUMPDEST
0x765 PUSH1 0x1
0x767 SLOAD
0x768 PUSH1 0x0
0x76a SWAP1
0x76b PUSH1 0x1
0x76d PUSH1 0xa0
0x76f PUSH1 0x2
0x771 EXP
0x772 SUB
0x773 AND
0x774 PUSH4 0xf7888aec
0x779 DUP3
0x77a ADDRESS
0x77b DUP2
0x77c PUSH1 0x40
0x77e MLOAD
0x77f PUSH1 0x20
0x781 ADD
0x782 MSTORE
0x783 PUSH1 0x40
0x785 MLOAD
0x786 PUSH1 0xe0
0x788 PUSH1 0x2
0x78a EXP
0x78b PUSH4 0xffffffff
0x790 DUP6
0x791 AND
0x792 MUL
0x793 DUP2
0x794 MSTORE
0x795 PUSH1 0x1
0x797 PUSH1 0xa0
0x799 PUSH1 0x2
0x79b EXP
0x79c SUB
0x79d SWAP3
0x79e DUP4
0x79f AND
0x7a0 PUSH1 0x4
0x7a2 DUP3
0x7a3 ADD
0x7a4 MSTORE
0x7a5 SWAP2
0x7a6 AND
0x7a7 PUSH1 0x24
0x7a9 DUP3
0x7aa ADD
0x7ab MSTORE
0x7ac PUSH1 0x44
0x7ae ADD
0x7af PUSH1 0x20
0x7b1 PUSH1 0x40
0x7b3 MLOAD
0x7b4 DUP1
0x7b5 DUP4
0x7b6 SUB
0x7b7 DUP2
0x7b8 PUSH1 0x0
0x7ba DUP8
0x7bb DUP1
0x7bc EXTCODESIZE
0x7bd ISZERO
0x7be ISZERO
0x7bf PUSH2 0x7c7
0x7c2 JUMPI
---
0x764: JUMPDEST 
0x765: V742 = 0x1
0x767: V743 = S[0x1]
0x768: V744 = 0x0
0x76b: V745 = 0x1
0x76d: V746 = 0xa0
0x76f: V747 = 0x2
0x771: V748 = EXP 0x2 0xa0
0x772: V749 = SUB 0x10000000000000000000000000000000000000000 0x1
0x773: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V743
0x774: V751 = 0xf7888aec
0x77a: V752 = ADDRESS
0x77c: V753 = 0x40
0x77e: V754 = M[0x40]
0x77f: V755 = 0x20
0x781: V756 = ADD 0x20 V754
0x782: M[V756] = 0x0
0x783: V757 = 0x40
0x785: V758 = M[0x40]
0x786: V759 = 0xe0
0x788: V760 = 0x2
0x78a: V761 = EXP 0x2 0xe0
0x78b: V762 = 0xffffffff
0x791: V763 = AND 0xf7888aec 0xffffffff
0x792: V764 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x794: M[V758] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x795: V765 = 0x1
0x797: V766 = 0xa0
0x799: V767 = 0x2
0x79b: V768 = EXP 0x2 0xa0
0x79c: V769 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79f: V770 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x7a0: V771 = 0x4
0x7a3: V772 = ADD V758 0x4
0x7a4: M[V772] = 0x0
0x7a6: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V752
0x7a7: V774 = 0x24
0x7aa: V775 = ADD V758 0x24
0x7ab: M[V775] = V773
0x7ac: V776 = 0x44
0x7ae: V777 = ADD 0x44 V758
0x7af: V778 = 0x20
0x7b1: V779 = 0x40
0x7b3: V780 = M[0x40]
0x7b6: V781 = SUB V777 V780
0x7b8: V782 = 0x0
0x7bc: V783 = EXTCODESIZE V750
0x7bd: V784 = ISZERO V783
0x7be: V785 = ISZERO V784
0x7bf: V786 = 0x7c7
0x7c2: JUMPI 0x7c7 V785
---
Entry stack: [V12, S4, S3, S2, S1, {0x146, 0x852, 0x978}]
Stack pops: 0
Stack additions: [0x0, V750, 0xf7888aec, V777, 0x20, V780, V781, V780, 0x0, V750]
Exit stack: [V12, S4, S3, S2, S1, {0x146, 0x852, 0x978}, 0x0, V750, 0xf7888aec, V777, 0x20, V780, V781, V780, 0x0, V750]

================================

Block 0x7c3
[0x7c3:0x7c6]
---
Predecessors: [0x764]
Successors: []
---
0x7c3 PUSH1 0x0
0x7c5 DUP1
0x7c6 REVERT
---
0x7c3: V787 = 0x0
0x7c6: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, {0x146, 0x852, 0x978}, 0x0, V750, 0xf7888aec, V777, 0x20, V780, V781, V780, 0x0, V750]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, {0x146, 0x852, 0x978}, 0x0, V750, 0xf7888aec, V777, 0x20, V780, V781, V780, 0x0, V750]

================================

Block 0x7c7
[0x7c7:0x7d3]
---
Predecessors: [0x764]
Successors: [0x7d4, 0x7d8]
---
0x7c7 JUMPDEST
0x7c8 PUSH2 0x2c6
0x7cb GAS
0x7cc SUB
0x7cd CALL
0x7ce ISZERO
0x7cf ISZERO
0x7d0 PUSH2 0x7d8
0x7d3 JUMPI
---
0x7c7: JUMPDEST 
0x7c8: V788 = 0x2c6
0x7cb: V789 = GAS
0x7cc: V790 = SUB V789 0x2c6
0x7cd: V791 = CALL V790 V750 0x0 V780 V781 V780 0x20
0x7ce: V792 = ISZERO V791
0x7cf: V793 = ISZERO V792
0x7d0: V794 = 0x7d8
0x7d3: JUMPI 0x7d8 V793
---
Entry stack: [V12, S14, S13, S12, S11, {0x146, 0x852, 0x978}, 0x0, V750, 0xf7888aec, V777, 0x20, V780, V781, V780, 0x0, V750]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, {0x146, 0x852, 0x978}, 0x0, V750, 0xf7888aec, V777]

================================

Block 0x7d4
[0x7d4:0x7d7]
---
Predecessors: [0x7c7]
Successors: []
---
0x7d4 PUSH1 0x0
0x7d6 DUP1
0x7d7 REVERT
---
0x7d4: V795 = 0x0
0x7d7: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, {0x146, 0x852, 0x978}, 0x0, S2, 0xf7888aec, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, {0x146, 0x852, 0x978}, 0x0, S2, 0xf7888aec, S0]

================================

Block 0x7d8
[0x7d8:0x7e3]
---
Predecessors: [0x7c7]
Successors: [0x7e4]
---
0x7d8 JUMPDEST
0x7d9 POP
0x7da POP
0x7db POP
0x7dc PUSH1 0x40
0x7de MLOAD
0x7df DUP1
0x7e0 MLOAD
0x7e1 SWAP2
0x7e2 POP
0x7e3 POP
---
0x7d8: JUMPDEST 
0x7dc: V796 = 0x40
0x7de: V797 = M[0x40]
0x7e0: V798 = M[V797]
---
Entry stack: [V12, S8, S7, S6, S5, {0x146, 0x852, 0x978}, 0x0, S2, 0xf7888aec, S0]
Stack pops: 4
Stack additions: [V798]
Exit stack: [V12, S8, S7, S6, S5, {0x146, 0x852, 0x978}, V798]

================================

Block 0x7e4
[0x7e4:0x7e6]
---
Predecessors: [0x7d8]
Successors: [0x146, 0x852, 0x978]
---
0x7e4 JUMPDEST
0x7e5 SWAP1
0x7e6 JUMP
---
0x7e4: JUMPDEST 
0x7e6: JUMP {0x146, 0x852, 0x978}
---
Entry stack: [V12, S5, S4, S3, S2, {0x146, 0x852, 0x978}, V798]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S5, S4, S3, S2, V798]

================================

Block 0x7e7
[0x7e7:0x82e]
---
Predecessors: [0x163]
Successors: [0x16b]
---
0x7e7 JUMPDEST
0x7e8 PUSH1 0x3
0x7ea SLOAD
0x7eb PUSH1 0x4
0x7ed SLOAD
0x7ee PUSH1 0x5
0x7f0 SLOAD
0x7f1 PUSH1 0x6
0x7f3 SLOAD
0x7f4 PUSH1 0x7
0x7f6 SLOAD
0x7f7 PUSH1 0x8
0x7f9 SLOAD
0x7fa PUSH1 0x9
0x7fc SLOAD
0x7fd PUSH1 0xa
0x7ff SLOAD
0x800 PUSH1 0xb
0x802 SLOAD
0x803 PUSH1 0xc
0x805 SLOAD
0x806 PUSH1 0xd
0x808 SLOAD
0x809 PUSH1 0x1
0x80b PUSH1 0xa0
0x80d PUSH1 0x2
0x80f EXP
0x810 SUB
0x811 SWAP11
0x812 DUP12
0x813 AND
0x814 SWAP11
0x815 SWAP9
0x816 DUP10
0x817 AND
0x818 SWAP9
0x819 DUP6
0x81a AND
0x81b SWAP5
0x81c PUSH1 0xff
0x81e PUSH1 0xa0
0x820 PUSH1 0x2
0x822 EXP
0x823 SWAP1
0x824 SWAP2
0x825 DIV
0x826 DUP2
0x827 AND
0x828 SWAP5
0x829 SWAP4
0x82a SWAP3
0x82b SWAP2
0x82c AND
0x82d DUP13
0x82e JUMP
---
0x7e7: JUMPDEST 
0x7e8: V799 = 0x3
0x7ea: V800 = S[0x3]
0x7eb: V801 = 0x4
0x7ed: V802 = S[0x4]
0x7ee: V803 = 0x5
0x7f0: V804 = S[0x5]
0x7f1: V805 = 0x6
0x7f3: V806 = S[0x6]
0x7f4: V807 = 0x7
0x7f6: V808 = S[0x7]
0x7f7: V809 = 0x8
0x7f9: V810 = S[0x8]
0x7fa: V811 = 0x9
0x7fc: V812 = S[0x9]
0x7fd: V813 = 0xa
0x7ff: V814 = S[0xa]
0x800: V815 = 0xb
0x802: V816 = S[0xb]
0x803: V817 = 0xc
0x805: V818 = S[0xc]
0x806: V819 = 0xd
0x808: V820 = S[0xd]
0x809: V821 = 0x1
0x80b: V822 = 0xa0
0x80d: V823 = 0x2
0x80f: V824 = EXP 0x2 0xa0
0x810: V825 = SUB 0x10000000000000000000000000000000000000000 0x1
0x813: V826 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0x817: V827 = AND 0xffffffffffffffffffffffffffffffffffffffff V804
0x81a: V828 = AND V812 0xffffffffffffffffffffffffffffffffffffffff
0x81c: V829 = 0xff
0x81e: V830 = 0xa0
0x820: V831 = 0x2
0x822: V832 = EXP 0x2 0xa0
0x825: V833 = DIV V812 0x10000000000000000000000000000000000000000
0x827: V834 = AND 0xff V833
0x82c: V835 = AND V820 0xff
0x82e: JUMP 0x16b
---
Entry stack: [V12, 0x16b]
Stack pops: 1
Stack additions: [S0, V826, V802, V827, V806, V808, V810, V828, V834, V814, V816, V818, V835]
Exit stack: [V12, 0x16b, V826, V802, V827, V806, V808, V810, V828, V834, V814, V816, V818, V835]

================================

Block 0x82f
[0x82f:0x848]
---
Predecessors: [0x1f4, 0x978]
Successors: [0x849, 0x84a]
---
0x82f JUMPDEST
0x830 PUSH1 0x2
0x832 SLOAD
0x833 PUSH1 0x0
0x835 SWAP1
0x836 CALLER
0x837 PUSH1 0x1
0x839 PUSH1 0xa0
0x83b PUSH1 0x2
0x83d EXP
0x83e SUB
0x83f SWAP1
0x840 DUP2
0x841 AND
0x842 SWAP2
0x843 AND
0x844 EQ
0x845 PUSH2 0x84a
0x848 JUMPI
---
0x82f: JUMPDEST 
0x830: V836 = 0x2
0x832: V837 = S[0x2]
0x833: V838 = 0x0
0x836: V839 = CALLER
0x837: V840 = 0x1
0x839: V841 = 0xa0
0x83b: V842 = 0x2
0x83d: V843 = EXP 0x2 0xa0
0x83e: V844 = SUB 0x10000000000000000000000000000000000000000 0x1
0x841: V845 = AND 0xffffffffffffffffffffffffffffffffffffffff V839
0x843: V846 = AND V837 0xffffffffffffffffffffffffffffffffffffffff
0x844: V847 = EQ V846 V845
0x845: V848 = 0x84a
0x848: JUMPI 0x84a V847
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x849
[0x849:0x849]
---
Predecessors: [0x82f]
Successors: []
---
0x849 INVALID
---
0x849: INVALID 
---
Entry stack: [V12, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x84a
[0x84a:0x851]
---
Predecessors: [0x82f]
Successors: [0x764]
---
0x84a JUMPDEST
0x84b PUSH2 0x852
0x84e PUSH2 0x764
0x851 JUMP
---
0x84a: JUMPDEST 
0x84b: V849 = 0x852
0x84e: V850 = 0x764
0x851: JUMP 0x764
---
Entry stack: [V12, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: [0x852]
Exit stack: [V12, S5, S4, S3, S2, S1, 0x0, 0x852]

================================

Block 0x852
[0x852:0x85f]
---
Predecessors: [0x7e4]
Successors: [0x860, 0x861]
---
0x852 JUMPDEST
0x853 SWAP1
0x854 POP
0x855 PUSH1 0x0
0x857 DUP3
0x858 DUP3
0x859 SUB
0x85a LT
0x85b ISZERO
0x85c PUSH2 0x861
0x85f JUMPI
---
0x852: JUMPDEST 
0x855: V851 = 0x0
0x859: V852 = SUB V798 S2
0x85a: V853 = LT V852 0x0
0x85b: V854 = ISZERO V853
0x85c: V855 = 0x861
0x85f: JUMPI 0x861 V854
---
Entry stack: [V12, S4, S3, S2, S1, V798]
Stack pops: 3
Stack additions: [S2, S0]
Exit stack: [V12, S4, S3, S2, V798]

================================

Block 0x860
[0x860:0x860]
---
Predecessors: [0x852]
Successors: []
---
0x860 INVALID
---
0x860: INVALID 
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0x861
[0x861:0x8a5]
---
Predecessors: [0x852]
Successors: [0x8a6, 0x8aa]
---
0x861 JUMPDEST
0x862 PUSH1 0x1
0x864 SLOAD
0x865 PUSH1 0x1
0x867 PUSH1 0xa0
0x869 PUSH1 0x2
0x86b EXP
0x86c SUB
0x86d AND
0x86e PUSH4 0x2e1a7d4d
0x873 GAS
0x874 DUP5
0x875 PUSH1 0x40
0x877 MLOAD
0x878 PUSH1 0xe0
0x87a PUSH1 0x2
0x87c EXP
0x87d PUSH4 0xffffffff
0x882 DUP6
0x883 AND
0x884 MUL
0x885 DUP2
0x886 MSTORE
0x887 PUSH1 0x4
0x889 DUP2
0x88a ADD
0x88b SWAP2
0x88c SWAP1
0x88d SWAP2
0x88e MSTORE
0x88f PUSH1 0x24
0x891 ADD
0x892 PUSH1 0x0
0x894 PUSH1 0x40
0x896 MLOAD
0x897 DUP1
0x898 DUP4
0x899 SUB
0x89a DUP2
0x89b PUSH1 0x0
0x89d DUP9
0x89e DUP1
0x89f EXTCODESIZE
0x8a0 ISZERO
0x8a1 ISZERO
0x8a2 PUSH2 0x8aa
0x8a5 JUMPI
---
0x861: JUMPDEST 
0x862: V856 = 0x1
0x864: V857 = S[0x1]
0x865: V858 = 0x1
0x867: V859 = 0xa0
0x869: V860 = 0x2
0x86b: V861 = EXP 0x2 0xa0
0x86c: V862 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86d: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff V857
0x86e: V864 = 0x2e1a7d4d
0x873: V865 = GAS
0x875: V866 = 0x40
0x877: V867 = M[0x40]
0x878: V868 = 0xe0
0x87a: V869 = 0x2
0x87c: V870 = EXP 0x2 0xe0
0x87d: V871 = 0xffffffff
0x883: V872 = AND 0x2e1a7d4d 0xffffffff
0x884: V873 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x886: M[V867] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x887: V874 = 0x4
0x88a: V875 = ADD V867 0x4
0x88e: M[V875] = S1
0x88f: V876 = 0x24
0x891: V877 = ADD 0x24 V867
0x892: V878 = 0x0
0x894: V879 = 0x40
0x896: V880 = M[0x40]
0x899: V881 = SUB V877 V880
0x89b: V882 = 0x0
0x89f: V883 = EXTCODESIZE V863
0x8a0: V884 = ISZERO V883
0x8a1: V885 = ISZERO V884
0x8a2: V886 = 0x8aa
0x8a5: JUMPI 0x8aa V885
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V863, 0x2e1a7d4d, V865, V877, 0x0, V880, V881, V880, 0x0, V863]
Exit stack: [V12, S3, S2, S1, S0, V863, 0x2e1a7d4d, V865, V877, 0x0, V880, V881, V880, 0x0, V863]

================================

Block 0x8a6
[0x8a6:0x8a9]
---
Predecessors: [0x861]
Successors: []
---
0x8a6 PUSH1 0x0
0x8a8 DUP1
0x8a9 REVERT
---
0x8a6: V887 = 0x0
0x8a9: REVERT 0x0 0x0
---
Entry stack: [V12, S13, {0x9e, 0x949}, S11, S10, V863, 0x2e1a7d4d, V865, V877, 0x0, V880, V881, V880, 0x0, V863]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, {0x9e, 0x949}, S11, S10, V863, 0x2e1a7d4d, V865, V877, 0x0, V880, V881, V880, 0x0, V863]

================================

Block 0x8aa
[0x8aa:0x8b2]
---
Predecessors: [0x861]
Successors: [0x8b3, 0x8b7]
---
0x8aa JUMPDEST
0x8ab DUP8
0x8ac CALL
0x8ad ISZERO
0x8ae ISZERO
0x8af PUSH2 0x8b7
0x8b2 JUMPI
---
0x8aa: JUMPDEST 
0x8ac: V888 = CALL V865 V863 0x0 V880 V881 V880 0x0
0x8ad: V889 = ISZERO V888
0x8ae: V890 = ISZERO V889
0x8af: V891 = 0x8b7
0x8b2: JUMPI 0x8b7 V890
---
Entry stack: [V12, S13, {0x9e, 0x949}, S11, S10, V863, 0x2e1a7d4d, V865, V877, 0x0, V880, V881, V880, 0x0, V863]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, S13, {0x9e, 0x949}, S11, S10, V863, 0x2e1a7d4d, V865, V877]

================================

Block 0x8b3
[0x8b3:0x8b6]
---
Predecessors: [0x8aa]
Successors: []
---
0x8b3 PUSH1 0x0
0x8b5 DUP1
0x8b6 REVERT
---
0x8b3: V892 = 0x0
0x8b6: REVERT 0x0 0x0
---
Entry stack: [V12, S7, {0x9e, 0x949}, S5, S4, S3, 0x2e1a7d4d, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, {0x9e, 0x949}, S5, S4, S3, 0x2e1a7d4d, S1, S0]

================================

Block 0x8b7
[0x8b7:0x8c3]
---
Predecessors: [0x8aa]
Successors: [0xba2]
---
0x8b7 JUMPDEST
0x8b8 POP
0x8b9 POP
0x8ba POP
0x8bb POP
0x8bc PUSH2 0x760
0x8bf DUP3
0x8c0 PUSH2 0xba2
0x8c3 JUMP
---
0x8b7: JUMPDEST 
0x8bc: V893 = 0x760
0x8c0: V894 = 0xba2
0x8c3: JUMP 0xba2
---
Entry stack: [V12, S7, {0x9e, 0x949}, S5, S4, S3, 0x2e1a7d4d, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, 0x760, S5]
Exit stack: [V12, S7, {0x9e, 0x949}, S5, S4, 0x760, S5]

================================

Block 0x8c4
[0x8c4:0x8c4]
---
Predecessors: []
Successors: [0x8c5]
---
0x8c4 JUMPDEST
---
0x8c4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8c5
[0x8c5:0x8c8]
---
Predecessors: [0x8c4]
Successors: []
Has unresolved jump.
---
0x8c5 JUMPDEST
0x8c6 POP
0x8c7 POP
0x8c8 JUMP
---
0x8c5: JUMPDEST 
0x8c8: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x8c9
[0x8c9:0x8cf]
---
Predecessors: [0x20c]
Successors: [0x8d0]
---
0x8c9 JUMPDEST
0x8ca PUSH1 0x19
0x8cc SLOAD
0x8cd PUSH1 0xff
0x8cf AND
---
0x8c9: JUMPDEST 
0x8ca: V895 = 0x19
0x8cc: V896 = S[0x19]
0x8cd: V897 = 0xff
0x8cf: V898 = AND 0xff V896
---
Entry stack: [V12, 0x214]
Stack pops: 0
Stack additions: [V898]
Exit stack: [V12, 0x214, V898]

================================

Block 0x8d0
[0x8d0:0x8d2]
---
Predecessors: [0x8c9]
Successors: [0x214]
---
0x8d0 JUMPDEST
0x8d1 SWAP1
0x8d2 JUMP
---
0x8d0: JUMPDEST 
0x8d2: JUMP 0x214
---
Entry stack: [V12, 0x214, V898]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V898]

================================

Block 0x8d3
[0x8d3:0x8e9]
---
Predecessors: [0x233]
Successors: [0x8ea, 0x8eb]
---
0x8d3 JUMPDEST
0x8d4 PUSH1 0x2
0x8d6 SLOAD
0x8d7 CALLER
0x8d8 PUSH1 0x1
0x8da PUSH1 0xa0
0x8dc PUSH1 0x2
0x8de EXP
0x8df SUB
0x8e0 SWAP1
0x8e1 DUP2
0x8e2 AND
0x8e3 SWAP2
0x8e4 AND
0x8e5 EQ
0x8e6 PUSH2 0x8eb
0x8e9 JUMPI
---
0x8d3: JUMPDEST 
0x8d4: V899 = 0x2
0x8d6: V900 = S[0x2]
0x8d7: V901 = CALLER
0x8d8: V902 = 0x1
0x8da: V903 = 0xa0
0x8dc: V904 = 0x2
0x8de: V905 = EXP 0x2 0xa0
0x8df: V906 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e2: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff V901
0x8e4: V908 = AND V900 0xffffffffffffffffffffffffffffffffffffffff
0x8e5: V909 = EQ V908 V907
0x8e6: V910 = 0x8eb
0x8e9: JUMPI 0x8eb V909
---
Entry stack: [V12, 0x9e, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V186]

================================

Block 0x8ea
[0x8ea:0x8ea]
---
Predecessors: [0x8d3]
Successors: []
---
0x8ea INVALID
---
0x8ea: INVALID 
---
Entry stack: [V12, 0x9e, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V186]

================================

Block 0x8eb
[0x8eb:0x91a]
---
Predecessors: [0x8d3]
Successors: [0x91b]
---
0x8eb JUMPDEST
0x8ec PUSH1 0x0
0x8ee DUP1
0x8ef SLOAD
0x8f0 PUSH1 0x1
0x8f2 PUSH1 0xa0
0x8f4 PUSH1 0x2
0x8f6 EXP
0x8f7 SUB
0x8f8 DUP1
0x8f9 DUP5
0x8fa AND
0x8fb PUSH1 0x1
0x8fd PUSH1 0xa0
0x8ff PUSH1 0x2
0x901 EXP
0x902 SUB
0x903 NOT
0x904 SWAP3
0x905 DUP4
0x906 AND
0x907 OR
0x908 SWAP3
0x909 DUP4
0x90a SWAP1
0x90b SSTORE
0x90c PUSH1 0x1
0x90e DUP1
0x90f SLOAD
0x910 SWAP1
0x911 SWAP3
0x912 AND
0x913 SWAP3
0x914 AND
0x915 SWAP2
0x916 SWAP1
0x917 SWAP2
0x918 OR
0x919 SWAP1
0x91a SSTORE
---
0x8eb: JUMPDEST 
0x8ec: V911 = 0x0
0x8ef: V912 = S[0x0]
0x8f0: V913 = 0x1
0x8f2: V914 = 0xa0
0x8f4: V915 = 0x2
0x8f6: V916 = EXP 0x2 0xa0
0x8f7: V917 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8fa: V918 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x8fb: V919 = 0x1
0x8fd: V920 = 0xa0
0x8ff: V921 = 0x2
0x901: V922 = EXP 0x2 0xa0
0x902: V923 = SUB 0x10000000000000000000000000000000000000000 0x1
0x903: V924 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x906: V925 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V912
0x907: V926 = OR V925 V918
0x90b: S[0x0] = V926
0x90c: V927 = 0x1
0x90f: V928 = S[0x1]
0x912: V929 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V928
0x914: V930 = AND V926 0xffffffffffffffffffffffffffffffffffffffff
0x918: V931 = OR V930 V929
0x91a: S[0x1] = V931
---
Entry stack: [V12, 0x9e, V186]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9e, V186]

================================

Block 0x91b
[0x91b:0x91d]
---
Predecessors: [0x8eb, 0xba2]
Successors: [0x9e, 0x760, 0x949]
---
0x91b JUMPDEST
0x91c POP
0x91d JUMP
---
0x91b: JUMPDEST 
0x91d: JUMP {0x9e, 0x760, 0x949}
---
Entry stack: [V12, S5, {0x9e, 0x949}, S3, S2, {0x9e, 0x760, 0x949}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S5, {0x9e, 0x949}, S3, S2]

================================

Block 0x91e
[0x91e:0x934]
---
Predecessors: [0x254]
Successors: [0x935, 0x936]
---
0x91e JUMPDEST
0x91f PUSH1 0x2
0x921 SLOAD
0x922 CALLER
0x923 PUSH1 0x1
0x925 PUSH1 0xa0
0x927 PUSH1 0x2
0x929 EXP
0x92a SUB
0x92b SWAP1
0x92c DUP2
0x92d AND
0x92e SWAP2
0x92f AND
0x930 EQ
0x931 PUSH2 0x936
0x934 JUMPI
---
0x91e: JUMPDEST 
0x91f: V932 = 0x2
0x921: V933 = S[0x2]
0x922: V934 = CALLER
0x923: V935 = 0x1
0x925: V936 = 0xa0
0x927: V937 = 0x2
0x929: V938 = EXP 0x2 0xa0
0x92a: V939 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92d: V940 = AND 0xffffffffffffffffffffffffffffffffffffffff V934
0x92f: V941 = AND V933 0xffffffffffffffffffffffffffffffffffffffff
0x930: V942 = EQ V941 V940
0x931: V943 = 0x936
0x934: JUMPI 0x936 V942
---
Entry stack: [V12, 0x9e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e]

================================

Block 0x935
[0x935:0x935]
---
Predecessors: [0x91e]
Successors: []
---
0x935 INVALID
---
0x935: INVALID 
---
Entry stack: [V12, 0x9e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e]

================================

Block 0x936
[0x936:0x948]
---
Predecessors: [0x91e]
Successors: [0xba2]
---
0x936 JUMPDEST
0x937 PUSH2 0x949
0x93a ADDRESS
0x93b PUSH1 0x1
0x93d PUSH1 0xa0
0x93f PUSH1 0x2
0x941 EXP
0x942 SUB
0x943 AND
0x944 BALANCE
0x945 PUSH2 0xba2
0x948 JUMP
---
0x936: JUMPDEST 
0x937: V944 = 0x949
0x93a: V945 = ADDRESS
0x93b: V946 = 0x1
0x93d: V947 = 0xa0
0x93f: V948 = 0x2
0x941: V949 = EXP 0x2 0xa0
0x942: V950 = SUB 0x10000000000000000000000000000000000000000 0x1
0x943: V951 = AND 0xffffffffffffffffffffffffffffffffffffffff V945
0x944: V952 = BALANCE V951
0x945: V953 = 0xba2
0x948: JUMP 0xba2
---
Entry stack: [V12, 0x9e]
Stack pops: 0
Stack additions: [0x949, V952]
Exit stack: [V12, 0x9e, 0x949, V952]

================================

Block 0x949
[0x949:0x949]
---
Predecessors: [0x760, 0x91b]
Successors: [0x94a]
---
0x949 JUMPDEST
---
0x949: JUMPDEST 
---
Entry stack: [V12, S3, {0x9e, 0x949}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0x9e, 0x949}, S1, S0]

================================

Block 0x94a
[0x94a:0x94b]
---
Predecessors: [0x949]
Successors: [0x9e]
---
0x94a JUMPDEST
0x94b JUMP
---
0x94a: JUMPDEST 
0x94b: JUMP S0
---
Entry stack: [V12, S3, {0x9e, 0x949}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S3, {0x9e, 0x949}, S1]

================================

Block 0x94c
[0x94c:0x954]
---
Predecessors: [0x269]
Successors: [0x214]
---
0x94c JUMPDEST
0x94d PUSH1 0x19
0x94f SLOAD
0x950 PUSH1 0xff
0x952 AND
0x953 DUP2
0x954 JUMP
---
0x94c: JUMPDEST 
0x94d: V954 = 0x19
0x94f: V955 = S[0x19]
0x950: V956 = 0xff
0x952: V957 = AND 0xff V955
0x954: JUMP 0x214
---
Entry stack: [V12, 0x214]
Stack pops: 1
Stack additions: [S0, V957]
Exit stack: [V12, 0x214, V957]

================================

Block 0x955
[0x955:0x96b]
---
Predecessors: [0x290]
Successors: [0x96c, 0x96d]
---
0x955 JUMPDEST
0x956 PUSH1 0x2
0x958 SLOAD
0x959 CALLER
0x95a PUSH1 0x1
0x95c PUSH1 0xa0
0x95e PUSH1 0x2
0x960 EXP
0x961 SUB
0x962 SWAP1
0x963 DUP2
0x964 AND
0x965 SWAP2
0x966 AND
0x967 EQ
0x968 PUSH2 0x96d
0x96b JUMPI
---
0x955: JUMPDEST 
0x956: V958 = 0x2
0x958: V959 = S[0x2]
0x959: V960 = CALLER
0x95a: V961 = 0x1
0x95c: V962 = 0xa0
0x95e: V963 = 0x2
0x960: V964 = EXP 0x2 0xa0
0x961: V965 = SUB 0x10000000000000000000000000000000000000000 0x1
0x964: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V960
0x966: V967 = AND V959 0xffffffffffffffffffffffffffffffffffffffff
0x967: V968 = EQ V967 V966
0x968: V969 = 0x96d
0x96b: JUMPI 0x96d V968
---
Entry stack: [V12, 0x9e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e]

================================

Block 0x96c
[0x96c:0x96c]
---
Predecessors: [0x955]
Successors: []
---
0x96c INVALID
---
0x96c: INVALID 
---
Entry stack: [V12, 0x9e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e]

================================

Block 0x96d
[0x96d:0x977]
---
Predecessors: [0x955]
Successors: [0x764]
---
0x96d JUMPDEST
0x96e PUSH2 0x949
0x971 PUSH2 0x978
0x974 PUSH2 0x764
0x977 JUMP
---
0x96d: JUMPDEST 
0x96e: V970 = 0x949
0x971: V971 = 0x978
0x974: V972 = 0x764
0x977: JUMP 0x764
---
Entry stack: [V12, 0x9e]
Stack pops: 0
Stack additions: [0x949, 0x978]
Exit stack: [V12, 0x9e, 0x949, 0x978]

================================

Block 0x978
[0x978:0x97c]
---
Predecessors: [0x7e4]
Successors: [0x82f]
---
0x978 JUMPDEST
0x979 PUSH2 0x82f
0x97c JUMP
---
0x978: JUMPDEST 
0x979: V973 = 0x82f
0x97c: JUMP 0x82f
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0x97d
[0x97d:0x97d]
---
Predecessors: []
Successors: [0x97e]
---
0x97d JUMPDEST
---
0x97d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x97e
[0x97e:0x97f]
---
Predecessors: [0x97d]
Successors: []
Has unresolved jump.
---
0x97e JUMPDEST
0x97f JUMP
---
0x97e: JUMPDEST 
0x97f: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x980
[0x980:0x9c7]
---
Predecessors: [0x2a5]
Successors: [0x16b]
---
0x980 JUMPDEST
0x981 PUSH1 0xe
0x983 SLOAD
0x984 PUSH1 0xf
0x986 SLOAD
0x987 PUSH1 0x10
0x989 SLOAD
0x98a PUSH1 0x11
0x98c SLOAD
0x98d PUSH1 0x12
0x98f SLOAD
0x990 PUSH1 0x13
0x992 SLOAD
0x993 PUSH1 0x14
0x995 SLOAD
0x996 PUSH1 0x15
0x998 SLOAD
0x999 PUSH1 0x16
0x99b SLOAD
0x99c PUSH1 0x17
0x99e SLOAD
0x99f PUSH1 0x18
0x9a1 SLOAD
0x9a2 PUSH1 0x1
0x9a4 PUSH1 0xa0
0x9a6 PUSH1 0x2
0x9a8 EXP
0x9a9 SUB
0x9aa SWAP11
0x9ab DUP12
0x9ac AND
0x9ad SWAP11
0x9ae SWAP9
0x9af DUP10
0x9b0 AND
0x9b1 SWAP9
0x9b2 DUP6
0x9b3 AND
0x9b4 SWAP5
0x9b5 PUSH1 0xff
0x9b7 PUSH1 0xa0
0x9b9 PUSH1 0x2
0x9bb EXP
0x9bc SWAP1
0x9bd SWAP2
0x9be DIV
0x9bf DUP2
0x9c0 AND
0x9c1 SWAP5
0x9c2 SWAP4
0x9c3 SWAP3
0x9c4 SWAP2
0x9c5 AND
0x9c6 DUP13
0x9c7 JUMP
---
0x980: JUMPDEST 
0x981: V974 = 0xe
0x983: V975 = S[0xe]
0x984: V976 = 0xf
0x986: V977 = S[0xf]
0x987: V978 = 0x10
0x989: V979 = S[0x10]
0x98a: V980 = 0x11
0x98c: V981 = S[0x11]
0x98d: V982 = 0x12
0x98f: V983 = S[0x12]
0x990: V984 = 0x13
0x992: V985 = S[0x13]
0x993: V986 = 0x14
0x995: V987 = S[0x14]
0x996: V988 = 0x15
0x998: V989 = S[0x15]
0x999: V990 = 0x16
0x99b: V991 = S[0x16]
0x99c: V992 = 0x17
0x99e: V993 = S[0x17]
0x99f: V994 = 0x18
0x9a1: V995 = S[0x18]
0x9a2: V996 = 0x1
0x9a4: V997 = 0xa0
0x9a6: V998 = 0x2
0x9a8: V999 = EXP 0x2 0xa0
0x9a9: V1000 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ac: V1001 = AND 0xffffffffffffffffffffffffffffffffffffffff V975
0x9b0: V1002 = AND 0xffffffffffffffffffffffffffffffffffffffff V979
0x9b3: V1003 = AND V987 0xffffffffffffffffffffffffffffffffffffffff
0x9b5: V1004 = 0xff
0x9b7: V1005 = 0xa0
0x9b9: V1006 = 0x2
0x9bb: V1007 = EXP 0x2 0xa0
0x9be: V1008 = DIV V987 0x10000000000000000000000000000000000000000
0x9c0: V1009 = AND 0xff V1008
0x9c5: V1010 = AND V995 0xff
0x9c7: JUMP 0x16b
---
Entry stack: [V12, 0x16b]
Stack pops: 1
Stack additions: [S0, V1001, V977, V1002, V981, V983, V985, V1003, V1009, V989, V991, V993, V1010]
Exit stack: [V12, 0x16b, V1001, V977, V1002, V981, V983, V985, V1003, V1009, V989, V991, V993, V1010]

================================

Block 0x9c8
[0x9c8:0x9d6]
---
Predecessors: [0x336]
Successors: [0x33e]
---
0x9c8 JUMPDEST
0x9c9 PUSH1 0x2
0x9cb SLOAD
0x9cc PUSH1 0x1
0x9ce PUSH1 0xa0
0x9d0 PUSH1 0x2
0x9d2 EXP
0x9d3 SUB
0x9d4 AND
0x9d5 DUP2
0x9d6 JUMP
---
0x9c8: JUMPDEST 
0x9c9: V1011 = 0x2
0x9cb: V1012 = S[0x2]
0x9cc: V1013 = 0x1
0x9ce: V1014 = 0xa0
0x9d0: V1015 = 0x2
0x9d2: V1016 = EXP 0x2 0xa0
0x9d3: V1017 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d4: V1018 = AND 0xffffffffffffffffffffffffffffffffffffffff V1012
0x9d6: JUMP 0x33e
---
Entry stack: [V12, 0x33e]
Stack pops: 1
Stack additions: [S0, V1018]
Exit stack: [V12, 0x33e, V1018]

================================

Block 0x9d7
[0x9d7:0xa11]
---
Predecessors: [0x35a]
Successors: [0xa12, 0xa16]
---
0x9d7 JUMPDEST
0x9d8 PUSH1 0x1
0x9da SLOAD
0x9db PUSH1 0x1
0x9dd PUSH1 0xa0
0x9df PUSH1 0x2
0x9e1 EXP
0x9e2 SUB
0x9e3 AND
0x9e4 PUSH4 0xd0e30db0
0x9e9 CALLVALUE
0x9ea PUSH1 0x40
0x9ec MLOAD
0x9ed DUP3
0x9ee PUSH4 0xffffffff
0x9f3 AND
0x9f4 PUSH1 0xe0
0x9f6 PUSH1 0x2
0x9f8 EXP
0x9f9 MUL
0x9fa DUP2
0x9fb MSTORE
0x9fc PUSH1 0x4
0x9fe ADD
0x9ff PUSH1 0x0
0xa01 PUSH1 0x40
0xa03 MLOAD
0xa04 DUP1
0xa05 DUP4
0xa06 SUB
0xa07 DUP2
0xa08 DUP6
0xa09 DUP9
0xa0a DUP1
0xa0b EXTCODESIZE
0xa0c ISZERO
0xa0d ISZERO
0xa0e PUSH2 0xa16
0xa11 JUMPI
---
0x9d7: JUMPDEST 
0x9d8: V1019 = 0x1
0x9da: V1020 = S[0x1]
0x9db: V1021 = 0x1
0x9dd: V1022 = 0xa0
0x9df: V1023 = 0x2
0x9e1: V1024 = EXP 0x2 0xa0
0x9e2: V1025 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e3: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffff V1020
0x9e4: V1027 = 0xd0e30db0
0x9e9: V1028 = CALLVALUE
0x9ea: V1029 = 0x40
0x9ec: V1030 = M[0x40]
0x9ee: V1031 = 0xffffffff
0x9f3: V1032 = AND 0xffffffff 0xd0e30db0
0x9f4: V1033 = 0xe0
0x9f6: V1034 = 0x2
0x9f8: V1035 = EXP 0x2 0xe0
0x9f9: V1036 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x9fb: M[V1030] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x9fc: V1037 = 0x4
0x9fe: V1038 = ADD 0x4 V1030
0x9ff: V1039 = 0x0
0xa01: V1040 = 0x40
0xa03: V1041 = M[0x40]
0xa06: V1042 = SUB V1038 V1041
0xa0b: V1043 = EXTCODESIZE V1026
0xa0c: V1044 = ISZERO V1043
0xa0d: V1045 = ISZERO V1044
0xa0e: V1046 = 0xa16
0xa11: JUMPI 0xa16 V1045
---
Entry stack: [V12, 0x9e]
Stack pops: 0
Stack additions: [V1026, 0xd0e30db0, V1028, V1038, 0x0, V1041, V1042, V1041, V1028, V1026]
Exit stack: [V12, 0x9e, V1026, 0xd0e30db0, V1028, V1038, 0x0, V1041, V1042, V1041, V1028, V1026]

================================

Block 0xa12
[0xa12:0xa15]
---
Predecessors: [0x9d7]
Successors: []
---
0xa12 PUSH1 0x0
0xa14 DUP1
0xa15 REVERT
---
0xa12: V1047 = 0x0
0xa15: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9e, V1026, 0xd0e30db0, V1028, V1038, 0x0, V1041, V1042, V1041, V1028, V1026]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V1026, 0xd0e30db0, V1028, V1038, 0x0, V1041, V1042, V1041, V1028, V1026]

================================

Block 0xa16
[0xa16:0xa22]
---
Predecessors: [0x9d7]
Successors: [0xa23, 0xa27]
---
0xa16 JUMPDEST
0xa17 PUSH2 0x25ee
0xa1a GAS
0xa1b SUB
0xa1c CALL
0xa1d ISZERO
0xa1e ISZERO
0xa1f PUSH2 0xa27
0xa22 JUMPI
---
0xa16: JUMPDEST 
0xa17: V1048 = 0x25ee
0xa1a: V1049 = GAS
0xa1b: V1050 = SUB V1049 0x25ee
0xa1c: V1051 = CALL V1050 V1026 V1028 V1041 V1042 V1041 0x0
0xa1d: V1052 = ISZERO V1051
0xa1e: V1053 = ISZERO V1052
0xa1f: V1054 = 0xa27
0xa22: JUMPI 0xa27 V1053
---
Entry stack: [V12, 0x9e, V1026, 0xd0e30db0, V1028, V1038, 0x0, V1041, V1042, V1041, V1028, V1026]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x9e, V1026, 0xd0e30db0, V1028, V1038]

================================

Block 0xa23
[0xa23:0xa26]
---
Predecessors: [0xa16]
Successors: []
---
0xa23 PUSH1 0x0
0xa25 DUP1
0xa26 REVERT
---
0xa23: V1055 = 0x0
0xa26: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9e, V1026, 0xd0e30db0, V1028, V1038]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V1026, 0xd0e30db0, V1028, V1038]

================================

Block 0xa27
[0xa27:0xa2b]
---
Predecessors: [0xa16]
Successors: [0xa2c]
---
0xa27 JUMPDEST
0xa28 POP
0xa29 POP
0xa2a POP
0xa2b POP
---
0xa27: JUMPDEST 
---
Entry stack: [V12, 0x9e, V1026, 0xd0e30db0, V1028, V1038]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x9e]

================================

Block 0xa2c
[0xa2c:0xa2d]
---
Predecessors: [0xa27]
Successors: [0x9e]
---
0xa2c JUMPDEST
0xa2d JUMP
---
0xa2c: JUMPDEST 
0xa2d: JUMP 0x9e
---
Entry stack: [V12, 0x9e]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xa2e
[0xa2e:0xa35]
---
Predecessors: [0x364, 0x377]
Successors: [0xbd6]
---
0xa2e JUMPDEST
0xa2f PUSH2 0xa36
0xa32 PUSH2 0xbd6
0xa35 JUMP
---
0xa2e: JUMPDEST 
0xa2f: V1056 = 0xa36
0xa32: V1057 = 0xbd6
0xa35: JUMP 0xbd6
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S0]
Stack pops: 0
Stack additions: [0xa36]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S0, 0xa36]

================================

Block 0xa36
[0xa36:0xa4e]
---
Predecessors: [0xbd6]
Successors: [0xa4f, 0xa50]
---
0xa36 JUMPDEST
0xa37 PUSH2 0x180
0xa3a PUSH1 0x40
0xa3c MLOAD
0xa3d SWAP1
0xa3e DUP2
0xa3f ADD
0xa40 PUSH1 0x40
0xa42 MSTORE
0xa43 DUP1
0xa44 DUP4
0xa45 PUSH1 0x0
0xa47 DUP2
0xa48 MLOAD
0xa49 DUP2
0xa4a LT
0xa4b PUSH2 0xa50
0xa4e JUMPI
---
0xa36: JUMPDEST 
0xa37: V1058 = 0x180
0xa3a: V1059 = 0x40
0xa3c: V1060 = M[0x40]
0xa3f: V1061 = ADD V1060 0x180
0xa40: V1062 = 0x40
0xa42: M[0x40] = V1061
0xa45: V1063 = 0x0
0xa48: V1064 = M[S1]
0xa4a: V1065 = LT 0x0 V1064
0xa4b: V1066 = 0xa50
0xa4e: JUMPI 0xa50 V1065
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S1, V1240]
Stack pops: 2
Stack additions: [S1, S0, V1060, V1060, S1, 0x0]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S1, V1240, V1060, V1060, S1, 0x0]

================================

Block 0xa4f
[0xa4f:0xa4f]
---
Predecessors: [0xa36]
Successors: []
---
0xa4f INVALID
---
0xa4f: INVALID 
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, V1060, V1060, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, V1060, V1060, S1, 0x0]

================================

Block 0xa50
[0xa50:0xa73]
---
Predecessors: [0xa36]
Successors: [0xa74, 0xa75]
---
0xa50 JUMPDEST
0xa51 SWAP1
0xa52 PUSH1 0x20
0xa54 ADD
0xa55 SWAP1
0xa56 PUSH1 0x20
0xa58 MUL
0xa59 ADD
0xa5a MLOAD
0xa5b PUSH1 0x1
0xa5d PUSH1 0xa0
0xa5f PUSH1 0x2
0xa61 EXP
0xa62 SUB
0xa63 AND
0xa64 DUP2
0xa65 MSTORE
0xa66 PUSH1 0x20
0xa68 ADD
0xa69 DUP4
0xa6a PUSH1 0x1
0xa6c DUP2
0xa6d MLOAD
0xa6e DUP2
0xa6f LT
0xa70 PUSH2 0xa75
0xa73 JUMPI
---
0xa50: JUMPDEST 
0xa52: V1067 = 0x20
0xa54: V1068 = ADD 0x20 S1
0xa56: V1069 = 0x20
0xa58: V1070 = MUL 0x20 0x0
0xa59: V1071 = ADD 0x0 V1068
0xa5a: V1072 = M[V1071]
0xa5b: V1073 = 0x1
0xa5d: V1074 = 0xa0
0xa5f: V1075 = 0x2
0xa61: V1076 = EXP 0x2 0xa0
0xa62: V1077 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa63: V1078 = AND 0xffffffffffffffffffffffffffffffffffffffff V1072
0xa65: M[V1060] = V1078
0xa66: V1079 = 0x20
0xa68: V1080 = ADD 0x20 V1060
0xa6a: V1081 = 0x1
0xa6d: V1082 = M[S5]
0xa6f: V1083 = LT 0x1 V1082
0xa70: V1084 = 0xa75
0xa73: JUMPI 0xa75 V1083
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, V1060, V1060, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V1080, S5, 0x1]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, V1060, V1080, S5, 0x1]

================================

Block 0xa74
[0xa74:0xa74]
---
Predecessors: [0xa50]
Successors: []
---
0xa74 INVALID
---
0xa74: INVALID 
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1080, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1080, S1, 0x1]

================================

Block 0xa75
[0xa75:0xa8f]
---
Predecessors: [0xa50]
Successors: [0xa90, 0xa91]
---
0xa75 JUMPDEST
0xa76 SWAP1
0xa77 PUSH1 0x20
0xa79 ADD
0xa7a SWAP1
0xa7b PUSH1 0x20
0xa7d MUL
0xa7e ADD
0xa7f MLOAD
0xa80 DUP2
0xa81 MSTORE
0xa82 PUSH1 0x20
0xa84 ADD
0xa85 DUP4
0xa86 PUSH1 0x2
0xa88 DUP2
0xa89 MLOAD
0xa8a DUP2
0xa8b LT
0xa8c PUSH2 0xa91
0xa8f JUMPI
---
0xa75: JUMPDEST 
0xa77: V1085 = 0x20
0xa79: V1086 = ADD 0x20 S1
0xa7b: V1087 = 0x20
0xa7d: V1088 = MUL 0x20 0x1
0xa7e: V1089 = ADD 0x20 V1086
0xa7f: V1090 = M[V1089]
0xa81: M[V1080] = V1090
0xa82: V1091 = 0x20
0xa84: V1092 = ADD 0x20 V1080
0xa86: V1093 = 0x2
0xa89: V1094 = M[S5]
0xa8b: V1095 = LT 0x2 V1094
0xa8c: V1096 = 0xa91
0xa8f: JUMPI 0xa91 V1095
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1080, S1, 0x1]
Stack pops: 6
Stack additions: [S5, S4, S3, V1092, S5, 0x2]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1092, S5, 0x2]

================================

Block 0xa90
[0xa90:0xa90]
---
Predecessors: [0xa75]
Successors: []
---
0xa90 INVALID
---
0xa90: INVALID 
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1092, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1092, S1, 0x2]

================================

Block 0xa91
[0xa91:0xab4]
---
Predecessors: [0xa75]
Successors: [0xab5, 0xab6]
---
0xa91 JUMPDEST
0xa92 SWAP1
0xa93 PUSH1 0x20
0xa95 ADD
0xa96 SWAP1
0xa97 PUSH1 0x20
0xa99 MUL
0xa9a ADD
0xa9b MLOAD
0xa9c PUSH1 0x1
0xa9e PUSH1 0xa0
0xaa0 PUSH1 0x2
0xaa2 EXP
0xaa3 SUB
0xaa4 AND
0xaa5 DUP2
0xaa6 MSTORE
0xaa7 PUSH1 0x20
0xaa9 ADD
0xaaa DUP4
0xaab PUSH1 0x3
0xaad DUP2
0xaae MLOAD
0xaaf DUP2
0xab0 LT
0xab1 PUSH2 0xab6
0xab4 JUMPI
---
0xa91: JUMPDEST 
0xa93: V1097 = 0x20
0xa95: V1098 = ADD 0x20 S1
0xa97: V1099 = 0x20
0xa99: V1100 = MUL 0x20 0x2
0xa9a: V1101 = ADD 0x40 V1098
0xa9b: V1102 = M[V1101]
0xa9c: V1103 = 0x1
0xa9e: V1104 = 0xa0
0xaa0: V1105 = 0x2
0xaa2: V1106 = EXP 0x2 0xa0
0xaa3: V1107 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa4: V1108 = AND 0xffffffffffffffffffffffffffffffffffffffff V1102
0xaa6: M[V1092] = V1108
0xaa7: V1109 = 0x20
0xaa9: V1110 = ADD 0x20 V1092
0xaab: V1111 = 0x3
0xaae: V1112 = M[S5]
0xab0: V1113 = LT 0x3 V1112
0xab1: V1114 = 0xab6
0xab4: JUMPI 0xab6 V1113
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1092, S1, 0x2]
Stack pops: 6
Stack additions: [S5, S4, S3, V1110, S5, 0x3]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1110, S5, 0x3]

================================

Block 0xab5
[0xab5:0xab5]
---
Predecessors: [0xa91]
Successors: []
---
0xab5 INVALID
---
0xab5: INVALID 
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1110, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1110, S1, 0x3]

================================

Block 0xab6
[0xab6:0xad0]
---
Predecessors: [0xa91]
Successors: [0xad1, 0xad2]
---
0xab6 JUMPDEST
0xab7 SWAP1
0xab8 PUSH1 0x20
0xaba ADD
0xabb SWAP1
0xabc PUSH1 0x20
0xabe MUL
0xabf ADD
0xac0 MLOAD
0xac1 DUP2
0xac2 MSTORE
0xac3 PUSH1 0x20
0xac5 ADD
0xac6 DUP4
0xac7 PUSH1 0x4
0xac9 DUP2
0xaca MLOAD
0xacb DUP2
0xacc LT
0xacd PUSH2 0xad2
0xad0 JUMPI
---
0xab6: JUMPDEST 
0xab8: V1115 = 0x20
0xaba: V1116 = ADD 0x20 S1
0xabc: V1117 = 0x20
0xabe: V1118 = MUL 0x20 0x3
0xabf: V1119 = ADD 0x60 V1116
0xac0: V1120 = M[V1119]
0xac2: M[V1110] = V1120
0xac3: V1121 = 0x20
0xac5: V1122 = ADD 0x20 V1110
0xac7: V1123 = 0x4
0xaca: V1124 = M[S5]
0xacc: V1125 = LT 0x4 V1124
0xacd: V1126 = 0xad2
0xad0: JUMPI 0xad2 V1125
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1110, S1, 0x3]
Stack pops: 6
Stack additions: [S5, S4, S3, V1122, S5, 0x4]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1122, S5, 0x4]

================================

Block 0xad1
[0xad1:0xad1]
---
Predecessors: [0xab6]
Successors: []
---
0xad1 INVALID
---
0xad1: INVALID 
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1122, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1122, S1, 0x4]

================================

Block 0xad2
[0xad2:0xaec]
---
Predecessors: [0xab6]
Successors: [0xaed, 0xaee]
---
0xad2 JUMPDEST
0xad3 SWAP1
0xad4 PUSH1 0x20
0xad6 ADD
0xad7 SWAP1
0xad8 PUSH1 0x20
0xada MUL
0xadb ADD
0xadc MLOAD
0xadd DUP2
0xade MSTORE
0xadf PUSH1 0x20
0xae1 ADD
0xae2 DUP4
0xae3 PUSH1 0x5
0xae5 DUP2
0xae6 MLOAD
0xae7 DUP2
0xae8 LT
0xae9 PUSH2 0xaee
0xaec JUMPI
---
0xad2: JUMPDEST 
0xad4: V1127 = 0x20
0xad6: V1128 = ADD 0x20 S1
0xad8: V1129 = 0x20
0xada: V1130 = MUL 0x20 0x4
0xadb: V1131 = ADD 0x80 V1128
0xadc: V1132 = M[V1131]
0xade: M[V1122] = V1132
0xadf: V1133 = 0x20
0xae1: V1134 = ADD 0x20 V1122
0xae3: V1135 = 0x5
0xae6: V1136 = M[S5]
0xae8: V1137 = LT 0x5 V1136
0xae9: V1138 = 0xaee
0xaec: JUMPI 0xaee V1137
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1122, S1, 0x4]
Stack pops: 6
Stack additions: [S5, S4, S3, V1134, S5, 0x5]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1134, S5, 0x5]

================================

Block 0xaed
[0xaed:0xaed]
---
Predecessors: [0xad2]
Successors: []
---
0xaed INVALID
---
0xaed: INVALID 
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1134, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1134, S1, 0x5]

================================

Block 0xaee
[0xaee:0xb08]
---
Predecessors: [0xad2]
Successors: [0xb09, 0xb0a]
---
0xaee JUMPDEST
0xaef SWAP1
0xaf0 PUSH1 0x20
0xaf2 ADD
0xaf3 SWAP1
0xaf4 PUSH1 0x20
0xaf6 MUL
0xaf7 ADD
0xaf8 MLOAD
0xaf9 DUP2
0xafa MSTORE
0xafb PUSH1 0x20
0xafd ADD
0xafe DUP4
0xaff PUSH1 0x6
0xb01 DUP2
0xb02 MLOAD
0xb03 DUP2
0xb04 LT
0xb05 PUSH2 0xb0a
0xb08 JUMPI
---
0xaee: JUMPDEST 
0xaf0: V1139 = 0x20
0xaf2: V1140 = ADD 0x20 S1
0xaf4: V1141 = 0x20
0xaf6: V1142 = MUL 0x20 0x5
0xaf7: V1143 = ADD 0xa0 V1140
0xaf8: V1144 = M[V1143]
0xafa: M[V1134] = V1144
0xafb: V1145 = 0x20
0xafd: V1146 = ADD 0x20 V1134
0xaff: V1147 = 0x6
0xb02: V1148 = M[S5]
0xb04: V1149 = LT 0x6 V1148
0xb05: V1150 = 0xb0a
0xb08: JUMPI 0xb0a V1149
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1134, S1, 0x5]
Stack pops: 6
Stack additions: [S5, S4, S3, V1146, S5, 0x6]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1146, S5, 0x6]

================================

Block 0xb09
[0xb09:0xb09]
---
Predecessors: [0xaee]
Successors: []
---
0xb09 INVALID
---
0xb09: INVALID 
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1146, S1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1146, S1, 0x6]

================================

Block 0xb0a
[0xb0a:0xb2d]
---
Predecessors: [0xaee]
Successors: [0xb2e, 0xb2f]
---
0xb0a JUMPDEST
0xb0b SWAP1
0xb0c PUSH1 0x20
0xb0e ADD
0xb0f SWAP1
0xb10 PUSH1 0x20
0xb12 MUL
0xb13 ADD
0xb14 MLOAD
0xb15 PUSH1 0x1
0xb17 PUSH1 0xa0
0xb19 PUSH1 0x2
0xb1b EXP
0xb1c SUB
0xb1d AND
0xb1e DUP2
0xb1f MSTORE
0xb20 PUSH1 0x20
0xb22 ADD
0xb23 DUP4
0xb24 PUSH1 0x7
0xb26 DUP2
0xb27 MLOAD
0xb28 DUP2
0xb29 LT
0xb2a PUSH2 0xb2f
0xb2d JUMPI
---
0xb0a: JUMPDEST 
0xb0c: V1151 = 0x20
0xb0e: V1152 = ADD 0x20 S1
0xb10: V1153 = 0x20
0xb12: V1154 = MUL 0x20 0x6
0xb13: V1155 = ADD 0xc0 V1152
0xb14: V1156 = M[V1155]
0xb15: V1157 = 0x1
0xb17: V1158 = 0xa0
0xb19: V1159 = 0x2
0xb1b: V1160 = EXP 0x2 0xa0
0xb1c: V1161 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1d: V1162 = AND 0xffffffffffffffffffffffffffffffffffffffff V1156
0xb1f: M[V1146] = V1162
0xb20: V1163 = 0x20
0xb22: V1164 = ADD 0x20 V1146
0xb24: V1165 = 0x7
0xb27: V1166 = M[S5]
0xb29: V1167 = LT 0x7 V1166
0xb2a: V1168 = 0xb2f
0xb2d: JUMPI 0xb2f V1167
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1146, S1, 0x6]
Stack pops: 6
Stack additions: [S5, S4, S3, V1164, S5, 0x7]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1164, S5, 0x7]

================================

Block 0xb2e
[0xb2e:0xb2e]
---
Predecessors: [0xb0a]
Successors: []
---
0xb2e INVALID
---
0xb2e: INVALID 
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1164, S1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1164, S1, 0x7]

================================

Block 0xb2f
[0xb2f:0xb4c]
---
Predecessors: [0xb0a]
Successors: [0xb4d, 0xb4e]
---
0xb2f JUMPDEST
0xb30 SWAP1
0xb31 PUSH1 0x20
0xb33 ADD
0xb34 SWAP1
0xb35 PUSH1 0x20
0xb37 MUL
0xb38 ADD
0xb39 MLOAD
0xb3a PUSH1 0xff
0xb3c AND
0xb3d DUP2
0xb3e MSTORE
0xb3f PUSH1 0x20
0xb41 ADD
0xb42 DUP4
0xb43 PUSH1 0x8
0xb45 DUP2
0xb46 MLOAD
0xb47 DUP2
0xb48 LT
0xb49 PUSH2 0xb4e
0xb4c JUMPI
---
0xb2f: JUMPDEST 
0xb31: V1169 = 0x20
0xb33: V1170 = ADD 0x20 S1
0xb35: V1171 = 0x20
0xb37: V1172 = MUL 0x20 0x7
0xb38: V1173 = ADD 0xe0 V1170
0xb39: V1174 = M[V1173]
0xb3a: V1175 = 0xff
0xb3c: V1176 = AND 0xff V1174
0xb3e: M[V1164] = V1176
0xb3f: V1177 = 0x20
0xb41: V1178 = ADD 0x20 V1164
0xb43: V1179 = 0x8
0xb46: V1180 = M[S5]
0xb48: V1181 = LT 0x8 V1180
0xb49: V1182 = 0xb4e
0xb4c: JUMPI 0xb4e V1181
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1164, S1, 0x7]
Stack pops: 6
Stack additions: [S5, S4, S3, V1178, S5, 0x8]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1178, S5, 0x8]

================================

Block 0xb4d
[0xb4d:0xb4d]
---
Predecessors: [0xb2f]
Successors: []
---
0xb4d INVALID
---
0xb4d: INVALID 
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1178, S1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1178, S1, 0x8]

================================

Block 0xb4e
[0xb4e:0xb68]
---
Predecessors: [0xb2f]
Successors: [0xb69, 0xb6a]
---
0xb4e JUMPDEST
0xb4f SWAP1
0xb50 PUSH1 0x20
0xb52 ADD
0xb53 SWAP1
0xb54 PUSH1 0x20
0xb56 MUL
0xb57 ADD
0xb58 MLOAD
0xb59 DUP2
0xb5a MSTORE
0xb5b PUSH1 0x20
0xb5d ADD
0xb5e DUP4
0xb5f PUSH1 0x9
0xb61 DUP2
0xb62 MLOAD
0xb63 DUP2
0xb64 LT
0xb65 PUSH2 0xb6a
0xb68 JUMPI
---
0xb4e: JUMPDEST 
0xb50: V1183 = 0x20
0xb52: V1184 = ADD 0x20 S1
0xb54: V1185 = 0x20
0xb56: V1186 = MUL 0x20 0x8
0xb57: V1187 = ADD 0x100 V1184
0xb58: V1188 = M[V1187]
0xb5a: M[V1178] = V1188
0xb5b: V1189 = 0x20
0xb5d: V1190 = ADD 0x20 V1178
0xb5f: V1191 = 0x9
0xb62: V1192 = M[S5]
0xb64: V1193 = LT 0x9 V1192
0xb65: V1194 = 0xb6a
0xb68: JUMPI 0xb6a V1193
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1178, S1, 0x8]
Stack pops: 6
Stack additions: [S5, S4, S3, V1190, S5, 0x9]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1190, S5, 0x9]

================================

Block 0xb69
[0xb69:0xb69]
---
Predecessors: [0xb4e]
Successors: []
---
0xb69 INVALID
---
0xb69: INVALID 
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1190, S1, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1190, S1, 0x9]

================================

Block 0xb6a
[0xb6a:0xb84]
---
Predecessors: [0xb4e]
Successors: [0xb85, 0xb86]
---
0xb6a JUMPDEST
0xb6b SWAP1
0xb6c PUSH1 0x20
0xb6e ADD
0xb6f SWAP1
0xb70 PUSH1 0x20
0xb72 MUL
0xb73 ADD
0xb74 MLOAD
0xb75 DUP2
0xb76 MSTORE
0xb77 PUSH1 0x20
0xb79 ADD
0xb7a DUP4
0xb7b PUSH1 0xa
0xb7d DUP2
0xb7e MLOAD
0xb7f DUP2
0xb80 LT
0xb81 PUSH2 0xb86
0xb84 JUMPI
---
0xb6a: JUMPDEST 
0xb6c: V1195 = 0x20
0xb6e: V1196 = ADD 0x20 S1
0xb70: V1197 = 0x20
0xb72: V1198 = MUL 0x20 0x9
0xb73: V1199 = ADD 0x120 V1196
0xb74: V1200 = M[V1199]
0xb76: M[V1190] = V1200
0xb77: V1201 = 0x20
0xb79: V1202 = ADD 0x20 V1190
0xb7b: V1203 = 0xa
0xb7e: V1204 = M[S5]
0xb80: V1205 = LT 0xa V1204
0xb81: V1206 = 0xb86
0xb84: JUMPI 0xb86 V1205
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1190, S1, 0x9]
Stack pops: 6
Stack additions: [S5, S4, S3, V1202, S5, 0xa]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1202, S5, 0xa]

================================

Block 0xb85
[0xb85:0xb85]
---
Predecessors: [0xb6a]
Successors: []
---
0xb85 INVALID
---
0xb85: INVALID 
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1202, S1, 0xa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1202, S1, 0xa]

================================

Block 0xb86
[0xb86:0xb9c]
---
Predecessors: [0xb6a]
Successors: [0xb9d]
---
0xb86 JUMPDEST
0xb87 SWAP1
0xb88 PUSH1 0x20
0xb8a ADD
0xb8b SWAP1
0xb8c PUSH1 0x20
0xb8e MUL
0xb8f ADD
0xb90 MLOAD
0xb91 DUP2
0xb92 MSTORE
0xb93 PUSH1 0x1
0xb95 PUSH1 0x20
0xb97 SWAP1
0xb98 SWAP2
0xb99 ADD
0xb9a MSTORE
0xb9b SWAP1
0xb9c POP
---
0xb86: JUMPDEST 
0xb88: V1207 = 0x20
0xb8a: V1208 = ADD 0x20 S1
0xb8c: V1209 = 0x20
0xb8e: V1210 = MUL 0x20 0xa
0xb8f: V1211 = ADD 0x140 V1208
0xb90: V1212 = M[V1211]
0xb92: M[V1202] = V1212
0xb93: V1213 = 0x1
0xb95: V1214 = 0x20
0xb99: V1215 = ADD V1202 0x20
0xb9a: M[V1215] = 0x1
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S4, S3, V1202, S1, 0xa]
Stack pops: 5
Stack additions: [S3]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S5, S3]

================================

Block 0xb9d
[0xb9d:0xba1]
---
Predecessors: [0xb86]
Successors: [0x377, 0x473]
---
0xb9d JUMPDEST
0xb9e SWAP2
0xb9f SWAP1
0xba0 POP
0xba1 JUMP
---
0xb9d: JUMPDEST 
0xba1: JUMP {0x377, 0x473}
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x9e, V64, V84, S0]

================================

Block 0xba2
[0xba2:0xbcd]
---
Predecessors: [0x8b7, 0x936]
Successors: [0x91b, 0xbce]
---
0xba2 JUMPDEST
0xba3 PUSH1 0x2
0xba5 SLOAD
0xba6 PUSH1 0x1
0xba8 PUSH1 0xa0
0xbaa PUSH1 0x2
0xbac EXP
0xbad SUB
0xbae AND
0xbaf DUP2
0xbb0 PUSH1 0x40
0xbb2 MLOAD
0xbb3 PUSH1 0x0
0xbb5 PUSH1 0x40
0xbb7 MLOAD
0xbb8 DUP1
0xbb9 DUP4
0xbba SUB
0xbbb DUP2
0xbbc DUP6
0xbbd DUP8
0xbbe PUSH2 0x8796
0xbc1 GAS
0xbc2 SUB
0xbc3 CALL
0xbc4 SWAP3
0xbc5 POP
0xbc6 POP
0xbc7 POP
0xbc8 ISZERO
0xbc9 ISZERO
0xbca PUSH2 0x91b
0xbcd JUMPI
---
0xba2: JUMPDEST 
0xba3: V1216 = 0x2
0xba5: V1217 = S[0x2]
0xba6: V1218 = 0x1
0xba8: V1219 = 0xa0
0xbaa: V1220 = 0x2
0xbac: V1221 = EXP 0x2 0xa0
0xbad: V1222 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbae: V1223 = AND 0xffffffffffffffffffffffffffffffffffffffff V1217
0xbb0: V1224 = 0x40
0xbb2: V1225 = M[0x40]
0xbb3: V1226 = 0x0
0xbb5: V1227 = 0x40
0xbb7: V1228 = M[0x40]
0xbba: V1229 = SUB V1225 V1228
0xbbe: V1230 = 0x8796
0xbc1: V1231 = GAS
0xbc2: V1232 = SUB V1231 0x8796
0xbc3: V1233 = CALL V1232 V1223 S0 V1228 V1229 V1228 0x0
0xbc8: V1234 = ISZERO V1233
0xbc9: V1235 = ISZERO V1234
0xbca: V1236 = 0x91b
0xbcd: JUMPI 0x91b V1235
---
Entry stack: [V12, S5, {0x9e, 0x949}, S3, S2, {0x760, 0x949}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S5, {0x9e, 0x949}, S3, S2, {0x760, 0x949}, S0]

================================

Block 0xbce
[0xbce:0xbd1]
---
Predecessors: [0xba2]
Successors: []
---
0xbce PUSH1 0x0
0xbd0 DUP1
0xbd1 REVERT
---
0xbce: V1237 = 0x0
0xbd1: REVERT 0x0 0x0
---
Entry stack: [V12, S5, {0x9e, 0x949}, S3, S2, {0x760, 0x949}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, {0x9e, 0x949}, S3, S2, {0x760, 0x949}, S0]

================================

Block 0xbd2
[0xbd2:0xbd2]
---
Predecessors: []
Successors: [0xbd3]
---
0xbd2 JUMPDEST
---
0xbd2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbd3
[0xbd3:0xbd5]
---
Predecessors: [0xbd2]
Successors: []
Has unresolved jump.
---
0xbd3 JUMPDEST
0xbd4 POP
0xbd5 JUMP
---
0xbd3: JUMPDEST 
0xbd5: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xbd6
[0xbd6:0xc39]
---
Predecessors: [0xa2e]
Successors: [0xa36]
---
0xbd6 JUMPDEST
0xbd7 PUSH2 0x180
0xbda PUSH1 0x40
0xbdc MLOAD
0xbdd SWAP1
0xbde DUP2
0xbdf ADD
0xbe0 PUSH1 0x40
0xbe2 SWAP1
0xbe3 DUP2
0xbe4 MSTORE
0xbe5 PUSH1 0x0
0xbe7 DUP1
0xbe8 DUP4
0xbe9 MSTORE
0xbea PUSH1 0x20
0xbec DUP4
0xbed ADD
0xbee DUP2
0xbef SWAP1
0xbf0 MSTORE
0xbf1 SWAP1
0xbf2 DUP3
0xbf3 ADD
0xbf4 DUP2
0xbf5 SWAP1
0xbf6 MSTORE
0xbf7 PUSH1 0x60
0xbf9 DUP3
0xbfa ADD
0xbfb DUP2
0xbfc SWAP1
0xbfd MSTORE
0xbfe PUSH1 0x80
0xc00 DUP3
0xc01 ADD
0xc02 DUP2
0xc03 SWAP1
0xc04 MSTORE
0xc05 PUSH1 0xa0
0xc07 DUP3
0xc08 ADD
0xc09 DUP2
0xc0a SWAP1
0xc0b MSTORE
0xc0c PUSH1 0xc0
0xc0e DUP3
0xc0f ADD
0xc10 DUP2
0xc11 SWAP1
0xc12 MSTORE
0xc13 PUSH1 0xe0
0xc15 DUP3
0xc16 ADD
0xc17 DUP2
0xc18 SWAP1
0xc19 MSTORE
0xc1a PUSH2 0x100
0xc1d DUP3
0xc1e ADD
0xc1f DUP2
0xc20 SWAP1
0xc21 MSTORE
0xc22 PUSH2 0x120
0xc25 DUP3
0xc26 ADD
0xc27 DUP2
0xc28 SWAP1
0xc29 MSTORE
0xc2a PUSH2 0x140
0xc2d DUP3
0xc2e ADD
0xc2f DUP2
0xc30 SWAP1
0xc31 MSTORE
0xc32 PUSH2 0x160
0xc35 DUP3
0xc36 ADD
0xc37 MSTORE
0xc38 SWAP1
0xc39 JUMP
---
0xbd6: JUMPDEST 
0xbd7: V1238 = 0x180
0xbda: V1239 = 0x40
0xbdc: V1240 = M[0x40]
0xbdf: V1241 = ADD V1240 0x180
0xbe0: V1242 = 0x40
0xbe4: M[0x40] = V1241
0xbe5: V1243 = 0x0
0xbe9: M[V1240] = 0x0
0xbea: V1244 = 0x20
0xbed: V1245 = ADD V1240 0x20
0xbf0: M[V1245] = 0x0
0xbf3: V1246 = ADD V1240 0x40
0xbf6: M[V1246] = 0x0
0xbf7: V1247 = 0x60
0xbfa: V1248 = ADD V1240 0x60
0xbfd: M[V1248] = 0x0
0xbfe: V1249 = 0x80
0xc01: V1250 = ADD V1240 0x80
0xc04: M[V1250] = 0x0
0xc05: V1251 = 0xa0
0xc08: V1252 = ADD V1240 0xa0
0xc0b: M[V1252] = 0x0
0xc0c: V1253 = 0xc0
0xc0f: V1254 = ADD V1240 0xc0
0xc12: M[V1254] = 0x0
0xc13: V1255 = 0xe0
0xc16: V1256 = ADD V1240 0xe0
0xc19: M[V1256] = 0x0
0xc1a: V1257 = 0x100
0xc1e: V1258 = ADD V1240 0x100
0xc21: M[V1258] = 0x0
0xc22: V1259 = 0x120
0xc26: V1260 = ADD V1240 0x120
0xc29: M[V1260] = 0x0
0xc2a: V1261 = 0x140
0xc2e: V1262 = ADD V1240 0x140
0xc31: M[V1262] = 0x0
0xc32: V1263 = 0x160
0xc36: V1264 = ADD V1240 0x160
0xc37: M[V1264] = 0x0
0xc39: JUMP 0xa36
---
Entry stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S1, 0xa36]
Stack pops: 1
Stack additions: [V1240]
Exit stack: [V12, 0x9e, V64, V84, {0x377, 0x473}, S1, V1240]

================================

Block 0xc3a
[0xc3a:0xc65]
---
Predecessors: []
Successors: []
---
0xc3a STOP
0xc3b LOG1
0xc3c PUSH6 0x627a7a723058
0xc43 SHA3
0xc44 DUP3
0xc45 MISSING 0xc0
0xc46 SWAP15
0xc47 MISSING 0xb1
0xc48 MISSING 0x24
0xc49 MISSING 0x28
0xc4a MISSING 0x2c
0xc4b MISSING 0x5c
0xc4c EXTCODESIZE
0xc4d MSTORE
0xc4e MISSING 0xd4
0xc4f DUP11
0xc50 MISSING 0xa5
0xc51 PUSH16 0xcee38aab3eedc1518b5a252ed614599a
0xc62 EXTCODESIZE
0xc63 NUMBER
0xc64 STOP
0xc65 MISSING 0x29
---
0xc3a: STOP 
0xc3b: LOG S0 S1 S2
0xc3c: V1265 = 0x627a7a723058
0xc43: V1266 = SHA3 0x627a7a723058 S3
0xc45: MISSING 0xc0
0xc47: MISSING 0xb1
0xc48: MISSING 0x24
0xc49: MISSING 0x28
0xc4a: MISSING 0x2c
0xc4b: MISSING 0x5c
0xc4c: V1267 = EXTCODESIZE S0
0xc4d: M[V1267] = S1
0xc4e: MISSING 0xd4
0xc50: MISSING 0xa5
0xc51: V1268 = 0xcee38aab3eedc1518b5a252ed614599a
0xc62: V1269 = EXTCODESIZE 0xcee38aab3eedc1518b5a252ed614599a
0xc63: V1270 = NUMBER
0xc64: STOP 
0xc65: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S5, V1266, S4, S5, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V1270, V1269]
Exit stack: []

================================

Function 0:
Public function signature: 0xa3cb72e
Entry block: 0xa2
Exit block: 0x646
Body: 0xa2, 0xa9, 0xad, 0x364, 0x377, 0x646

Function 1:
Public function signature: 0x12065fe0
Entry block: 0x133
Exit block: 0x146
Body: 0x133, 0x13a, 0x13e, 0x146

Function 2:
Public function signature: 0x1d0ab337
Entry block: 0x158
Exit block: 0x16b
Body: 0x158, 0x15f, 0x163, 0x16b, 0x7e7

Function 3:
Public function signature: 0x2e1a7d4d
Entry block: 0x1e9
Exit block: 0xa0
Body: 0x9e, 0x9f, 0xa0, 0x1e9, 0x1f0, 0x1f4, 0x760, 0x82f, 0x849, 0x84a, 0x852, 0x860, 0x861, 0x8a6, 0x8aa, 0x8b3, 0x8b7, 0x949, 0x94a

Function 4:
Public function signature: 0x33f63b33
Entry block: 0x201
Exit block: 0x214
Body: 0x201, 0x208, 0x20c, 0x214, 0x8c9, 0x8d0

Function 5:
Public function signature: 0x477bddaa
Entry block: 0x228
Exit block: 0xa0
Body: 0x9e, 0x9f, 0xa0, 0x228, 0x22f, 0x233, 0x8d3, 0x8ea, 0x8eb

Function 6:
Public function signature: 0x5fd8c710
Entry block: 0x249
Exit block: 0xa0
Body: 0x9e, 0x9f, 0xa0, 0x249, 0x250, 0x254, 0x91e, 0x935, 0x936, 0x949, 0x94a

Function 7:
Public function signature: 0x6ec1da08
Entry block: 0x25e
Exit block: 0x214
Body: 0x214, 0x25e, 0x265, 0x269, 0x94c

Function 8:
Public function signature: 0x853828b6
Entry block: 0x285
Exit block: 0xa0
Body: 0x9e, 0x9f, 0xa0, 0x285, 0x28c, 0x290, 0x760, 0x82f, 0x849, 0x84a, 0x852, 0x860, 0x861, 0x8a6, 0x8aa, 0x8b3, 0x8b7, 0x949, 0x94a, 0x955, 0x96c, 0x96d, 0x978

Function 9:
Public function signature: 0x95035d82
Entry block: 0x29a
Exit block: 0x16b
Body: 0x16b, 0x29a, 0x2a1, 0x2a5, 0x980

Function 10:
Public function signature: 0xb2bdfa7b
Entry block: 0x32b
Exit block: 0x33e
Body: 0x32b, 0x332, 0x336, 0x33e, 0x9c8

Function 11:
Public function signature: 0xd0e30db0
Entry block: 0x35a
Exit block: 0xa0
Body: 0x9e, 0x9f, 0xa0, 0x35a, 0x9d7, 0xa12, 0xa16, 0xa23, 0xa27, 0xa2c

Function 12:
Public fallback function
Entry block: 0x9e
Exit block: 0xa0
Body: 0x9e, 0x9f, 0xa0

Function 13:
Private function
Entry block: 0xba2
Exit block: 0x91b
Body: 0x91b, 0xba2

Function 14:
Private function
Entry block: 0xa2e
Exit block: 0xb9d
Body: 0xa2e, 0xa36, 0xa50, 0xa75, 0xa91, 0xab6, 0xad2, 0xaee, 0xb0a, 0xb2f, 0xb4e, 0xb6a, 0xb86, 0xb9d, 0xbd6

Function 15:
Private function
Entry block: 0x764
Exit block: 0x7e4
Body: 0x764, 0x7c7, 0x7d8, 0x7e4

