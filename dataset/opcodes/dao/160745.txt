Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3b
0xa: JUMPI 0x3b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x89]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xd172a01
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x89
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xd172a01
0x20: V14 = EQ V12 0xd172a01
0x21: V15 = 0x89
0x24: JUMPI 0x89 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xb3]
---
0x25 DUP1
0x26 PUSH4 0x8da5cb5b
0x2b EQ
0x2c PUSH2 0xb3
0x2f JUMPI
---
0x26: V16 = 0x8da5cb5b
0x2b: V17 = EQ 0x8da5cb5b V12
0x2c: V18 = 0xb3
0x2f: JUMPI 0xb3 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xe2]
---
0x30 DUP1
0x31 PUSH4 0x94081e21
0x36 EQ
0x37 PUSH2 0xe2
0x3a JUMPI
---
0x31: V19 = 0x94081e21
0x36: V20 = EQ 0x94081e21 V12
0x37: V21 = 0xe2
0x3a: JUMPI 0xe2 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x3b]
---
Predecessors: [0x0, 0x30]
Successors: [0x3c]
---
0x3b JUMPDEST
---
0x3b: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c
[0x3c:0x44]
---
Predecessors: [0x3b]
Successors: [0x45, 0x49]
---
0x3c JUMPDEST
0x3d PUSH1 0x0
0x3f CALLVALUE
0x40 GT
0x41 PUSH2 0x49
0x44 JUMPI
---
0x3c: JUMPDEST 
0x3d: V22 = 0x0
0x3f: V23 = CALLVALUE
0x40: V24 = GT V23 0x0
0x41: V25 = 0x49
0x44: JUMPI 0x49 V24
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x45
[0x45:0x48]
---
Predecessors: [0x3c]
Successors: []
---
0x45 PUSH1 0x0
0x47 DUP1
0x48 REVERT
---
0x45: V26 = 0x0
0x48: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x49
[0x49:0x86]
---
Predecessors: [0x3c]
Successors: [0x87]
---
0x49 JUMPDEST
0x4a CALLER
0x4b PUSH1 0x1
0x4d PUSH1 0xa0
0x4f PUSH1 0x2
0x51 EXP
0x52 SUB
0x53 AND
0x54 PUSH32 0xa58b71ad2e6ce803dd1eec62e2f3717a164a8912ee33eb51a57a234ba56b5535
0x75 CALLVALUE
0x76 PUSH1 0x40
0x78 MLOAD
0x79 SWAP1
0x7a DUP2
0x7b MSTORE
0x7c PUSH1 0x20
0x7e ADD
0x7f PUSH1 0x40
0x81 MLOAD
0x82 DUP1
0x83 SWAP2
0x84 SUB
0x85 SWAP1
0x86 LOG2
---
0x49: JUMPDEST 
0x4a: V27 = CALLER
0x4b: V28 = 0x1
0x4d: V29 = 0xa0
0x4f: V30 = 0x2
0x51: V31 = EXP 0x2 0xa0
0x52: V32 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x54: V34 = 0xa58b71ad2e6ce803dd1eec62e2f3717a164a8912ee33eb51a57a234ba56b5535
0x75: V35 = CALLVALUE
0x76: V36 = 0x40
0x78: V37 = M[0x40]
0x7b: M[V37] = V35
0x7c: V38 = 0x20
0x7e: V39 = ADD 0x20 V37
0x7f: V40 = 0x40
0x81: V41 = M[0x40]
0x84: V42 = SUB V39 V41
0x86: LOG V41 V42 0xa58b71ad2e6ce803dd1eec62e2f3717a164a8912ee33eb51a57a234ba56b5535 V33
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x87
[0x87:0x88]
---
Predecessors: [0x49, 0x262, 0x30f]
Successors: []
---
0x87 JUMPDEST
0x88 STOP
---
0x87: JUMPDEST 
0x88: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0x8f]
---
Predecessors: [0xb]
Successors: [0x90, 0x94]
---
0x89 JUMPDEST
0x8a CALLVALUE
0x8b ISZERO
0x8c PUSH2 0x94
0x8f JUMPI
---
0x89: JUMPDEST 
0x8a: V43 = CALLVALUE
0x8b: V44 = ISZERO V43
0x8c: V45 = 0x94
0x8f: JUMPI 0x94 V44
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x90
[0x90:0x93]
---
Predecessors: [0x89]
Successors: []
---
0x90 PUSH1 0x0
0x92 DUP1
0x93 REVERT
---
0x90: V46 = 0x0
0x93: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x94
[0x94:0xb0]
---
Predecessors: [0x89]
Successors: [0x106]
---
0x94 JUMPDEST
0x95 PUSH2 0x87
0x98 PUSH1 0x1
0x9a PUSH1 0xa0
0x9c PUSH1 0x2
0x9e EXP
0x9f SUB
0xa0 PUSH1 0x4
0xa2 CALLDATALOAD
0xa3 DUP2
0xa4 AND
0xa5 SWAP1
0xa6 PUSH1 0x24
0xa8 CALLDATALOAD
0xa9 AND
0xaa PUSH1 0x44
0xac CALLDATALOAD
0xad PUSH2 0x106
0xb0 JUMP
---
0x94: JUMPDEST 
0x95: V47 = 0x87
0x98: V48 = 0x1
0x9a: V49 = 0xa0
0x9c: V50 = 0x2
0x9e: V51 = EXP 0x2 0xa0
0x9f: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0: V53 = 0x4
0xa2: V54 = CALLDATALOAD 0x4
0xa4: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xa6: V56 = 0x24
0xa8: V57 = CALLDATALOAD 0x24
0xa9: V58 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V59 = 0x44
0xac: V60 = CALLDATALOAD 0x44
0xad: V61 = 0x106
0xb0: JUMP 0x106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x87, V55, V58, V60]
Exit stack: [V12, 0x87, V55, V58, V60]

================================

Block 0xb1
[0xb1:0xb2]
---
Predecessors: []
Successors: []
---
0xb1 JUMPDEST
0xb2 STOP
---
0xb1: JUMPDEST 
0xb2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb3
[0xb3:0xb9]
---
Predecessors: [0x25]
Successors: [0xba, 0xbe]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb3: JUMPDEST 
0xb4: V62 = CALLVALUE
0xb5: V63 = ISZERO V62
0xb6: V64 = 0xbe
0xb9: JUMPI 0xbe V63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb3]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V65 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbe
[0xbe:0xc5]
---
Predecessors: [0xb3]
Successors: [0x268]
---
0xbe JUMPDEST
0xbf PUSH2 0xc6
0xc2 PUSH2 0x268
0xc5 JUMP
---
0xbe: JUMPDEST 
0xbf: V66 = 0xc6
0xc2: V67 = 0x268
0xc5: JUMP 0x268
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V12, 0xc6]

================================

Block 0xc6
[0xc6:0xe1]
---
Predecessors: [0x268]
Successors: []
---
0xc6 JUMPDEST
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca PUSH1 0x1
0xcc PUSH1 0xa0
0xce PUSH1 0x2
0xd0 EXP
0xd1 SUB
0xd2 SWAP1
0xd3 SWAP2
0xd4 AND
0xd5 DUP2
0xd6 MSTORE
0xd7 PUSH1 0x20
0xd9 ADD
0xda PUSH1 0x40
0xdc MLOAD
0xdd DUP1
0xde SWAP2
0xdf SUB
0xe0 SWAP1
0xe1 RETURN
---
0xc6: JUMPDEST 
0xc7: V68 = 0x40
0xc9: V69 = M[0x40]
0xca: V70 = 0x1
0xcc: V71 = 0xa0
0xce: V72 = 0x2
0xd0: V73 = EXP 0x2 0xa0
0xd1: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd4: V75 = AND V257 0xffffffffffffffffffffffffffffffffffffffff
0xd6: M[V69] = V75
0xd7: V76 = 0x20
0xd9: V77 = ADD 0x20 V69
0xda: V78 = 0x40
0xdc: V79 = M[0x40]
0xdf: V80 = SUB V77 V79
0xe1: RETURN V79 V80
---
Entry stack: [V12, 0xc6, V257]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc6]

================================

Block 0xe2
[0xe2:0xe8]
---
Predecessors: [0x30]
Successors: [0xe9, 0xed]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0xe2: JUMPDEST 
0xe3: V81 = CALLVALUE
0xe4: V82 = ISZERO V81
0xe5: V83 = 0xed
0xe8: JUMPI 0xed V82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0xe2]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V84 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xed
[0xed:0x103]
---
Predecessors: [0xe2]
Successors: [0x277]
---
0xed JUMPDEST
0xee PUSH2 0x87
0xf1 PUSH1 0x1
0xf3 PUSH1 0xa0
0xf5 PUSH1 0x2
0xf7 EXP
0xf8 SUB
0xf9 PUSH1 0x4
0xfb CALLDATALOAD
0xfc AND
0xfd PUSH1 0x24
0xff CALLDATALOAD
0x100 PUSH2 0x277
0x103 JUMP
---
0xed: JUMPDEST 
0xee: V85 = 0x87
0xf1: V86 = 0x1
0xf3: V87 = 0xa0
0xf5: V88 = 0x2
0xf7: V89 = EXP 0x2 0xa0
0xf8: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9: V91 = 0x4
0xfb: V92 = CALLDATALOAD 0x4
0xfc: V93 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V94 = 0x24
0xff: V95 = CALLDATALOAD 0x24
0x100: V96 = 0x277
0x103: JUMP 0x277
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x87, V93, V95]
Exit stack: [V12, 0x87, V93, V95]

================================

Block 0x104
[0x104:0x105]
---
Predecessors: []
Successors: []
---
0x104 JUMPDEST
0x105 STOP
---
0x104: JUMPDEST 
0x105: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x106
[0x106:0x11d]
---
Predecessors: [0x94]
Successors: [0x11e, 0x122]
---
0x106 JUMPDEST
0x107 PUSH1 0x0
0x109 DUP1
0x10a SLOAD
0x10b CALLER
0x10c PUSH1 0x1
0x10e PUSH1 0xa0
0x110 PUSH1 0x2
0x112 EXP
0x113 SUB
0x114 SWAP1
0x115 DUP2
0x116 AND
0x117 SWAP2
0x118 AND
0x119 EQ
0x11a PUSH2 0x122
0x11d JUMPI
---
0x106: JUMPDEST 
0x107: V97 = 0x0
0x10a: V98 = S[0x0]
0x10b: V99 = CALLER
0x10c: V100 = 0x1
0x10e: V101 = 0xa0
0x110: V102 = 0x2
0x112: V103 = EXP 0x2 0xa0
0x113: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x116: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x118: V106 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x119: V107 = EQ V106 V105
0x11a: V108 = 0x122
0x11d: JUMPI 0x122 V107
---
Entry stack: [V12, 0x87, V55, V58, V60]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x87, V55, V58, V60, 0x0]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x106]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V109 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V12, 0x87, V55, V58, V60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, 0x0]

================================

Block 0x122
[0x122:0x132]
---
Predecessors: [0x106]
Successors: [0x133, 0x134]
---
0x122 JUMPDEST
0x123 PUSH1 0x1
0x125 PUSH1 0xa0
0x127 PUSH1 0x2
0x129 EXP
0x12a SUB
0x12b DUP5
0x12c AND
0x12d ISZERO
0x12e ISZERO
0x12f PUSH2 0x134
0x132 JUMPI
---
0x122: JUMPDEST 
0x123: V110 = 0x1
0x125: V111 = 0xa0
0x127: V112 = 0x2
0x129: V113 = EXP 0x2 0xa0
0x12a: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12c: V115 = AND V55 0xffffffffffffffffffffffffffffffffffffffff
0x12d: V116 = ISZERO V115
0x12e: V117 = ISZERO V116
0x12f: V118 = 0x134
0x132: JUMPI 0x134 V117
---
Entry stack: [V12, 0x87, V55, V58, V60, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x87, V55, V58, V60, 0x0]

================================

Block 0x133
[0x133:0x133]
---
Predecessors: [0x122]
Successors: []
---
0x133 INVALID
---
0x133: INVALID 
---
Entry stack: [V12, 0x87, V55, V58, V60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, 0x0]

================================

Block 0x134
[0x134:0x144]
---
Predecessors: [0x122]
Successors: [0x145, 0x146]
---
0x134 JUMPDEST
0x135 PUSH1 0x1
0x137 PUSH1 0xa0
0x139 PUSH1 0x2
0x13b EXP
0x13c SUB
0x13d DUP4
0x13e AND
0x13f ISZERO
0x140 ISZERO
0x141 PUSH2 0x146
0x144 JUMPI
---
0x134: JUMPDEST 
0x135: V119 = 0x1
0x137: V120 = 0xa0
0x139: V121 = 0x2
0x13b: V122 = EXP 0x2 0xa0
0x13c: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V124 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V125 = ISZERO V124
0x140: V126 = ISZERO V125
0x141: V127 = 0x146
0x144: JUMPI 0x146 V126
---
Entry stack: [V12, 0x87, V55, V58, V60, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x87, V55, V58, V60, 0x0]

================================

Block 0x145
[0x145:0x145]
---
Predecessors: [0x134]
Successors: []
---
0x145 INVALID
---
0x145: INVALID 
---
Entry stack: [V12, 0x87, V55, V58, V60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, 0x0]

================================

Block 0x146
[0x146:0x198]
---
Predecessors: [0x134]
Successors: [0x199, 0x19d]
---
0x146 JUMPDEST
0x147 DUP4
0x148 PUSH1 0x1
0x14a PUSH1 0xa0
0x14c PUSH1 0x2
0x14e EXP
0x14f SUB
0x150 AND
0x151 PUSH4 0x70a08231
0x156 ADDRESS
0x157 PUSH1 0x0
0x159 PUSH1 0x40
0x15b MLOAD
0x15c PUSH1 0x20
0x15e ADD
0x15f MSTORE
0x160 PUSH1 0x40
0x162 MLOAD
0x163 PUSH1 0xe0
0x165 PUSH1 0x2
0x167 EXP
0x168 PUSH4 0xffffffff
0x16d DUP5
0x16e AND
0x16f MUL
0x170 DUP2
0x171 MSTORE
0x172 PUSH1 0x1
0x174 PUSH1 0xa0
0x176 PUSH1 0x2
0x178 EXP
0x179 SUB
0x17a SWAP1
0x17b SWAP2
0x17c AND
0x17d PUSH1 0x4
0x17f DUP3
0x180 ADD
0x181 MSTORE
0x182 PUSH1 0x24
0x184 ADD
0x185 PUSH1 0x20
0x187 PUSH1 0x40
0x189 MLOAD
0x18a DUP1
0x18b DUP4
0x18c SUB
0x18d DUP2
0x18e PUSH1 0x0
0x190 DUP8
0x191 DUP1
0x192 EXTCODESIZE
0x193 ISZERO
0x194 ISZERO
0x195 PUSH2 0x19d
0x198 JUMPI
---
0x146: JUMPDEST 
0x148: V128 = 0x1
0x14a: V129 = 0xa0
0x14c: V130 = 0x2
0x14e: V131 = EXP 0x2 0xa0
0x14f: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x150: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x151: V134 = 0x70a08231
0x156: V135 = ADDRESS
0x157: V136 = 0x0
0x159: V137 = 0x40
0x15b: V138 = M[0x40]
0x15c: V139 = 0x20
0x15e: V140 = ADD 0x20 V138
0x15f: M[V140] = 0x0
0x160: V141 = 0x40
0x162: V142 = M[0x40]
0x163: V143 = 0xe0
0x165: V144 = 0x2
0x167: V145 = EXP 0x2 0xe0
0x168: V146 = 0xffffffff
0x16e: V147 = AND 0x70a08231 0xffffffff
0x16f: V148 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x171: M[V142] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x172: V149 = 0x1
0x174: V150 = 0xa0
0x176: V151 = 0x2
0x178: V152 = EXP 0x2 0xa0
0x179: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17c: V154 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V155 = 0x4
0x180: V156 = ADD V142 0x4
0x181: M[V156] = V154
0x182: V157 = 0x24
0x184: V158 = ADD 0x24 V142
0x185: V159 = 0x20
0x187: V160 = 0x40
0x189: V161 = M[0x40]
0x18c: V162 = SUB V158 V161
0x18e: V163 = 0x0
0x192: V164 = EXTCODESIZE V133
0x193: V165 = ISZERO V164
0x194: V166 = ISZERO V165
0x195: V167 = 0x19d
0x198: JUMPI 0x19d V166
---
Entry stack: [V12, 0x87, V55, V58, V60, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V133, 0x70a08231, V158, 0x20, V161, V162, V161, 0x0, V133]
Exit stack: [V12, 0x87, V55, V58, V60, 0x0, V133, 0x70a08231, V158, 0x20, V161, V162, V161, 0x0, V133]

================================

Block 0x199
[0x199:0x19c]
---
Predecessors: [0x146]
Successors: []
---
0x199 PUSH1 0x0
0x19b DUP1
0x19c REVERT
---
0x199: V168 = 0x0
0x19c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x87, V55, V58, V60, 0x0, V133, 0x70a08231, V158, 0x20, V161, V162, V161, 0x0, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, 0x0, V133, 0x70a08231, V158, 0x20, V161, V162, V161, 0x0, V133]

================================

Block 0x19d
[0x19d:0x1a9]
---
Predecessors: [0x146]
Successors: [0x1aa, 0x1ae]
---
0x19d JUMPDEST
0x19e PUSH2 0x2c6
0x1a1 GAS
0x1a2 SUB
0x1a3 CALL
0x1a4 ISZERO
0x1a5 ISZERO
0x1a6 PUSH2 0x1ae
0x1a9 JUMPI
---
0x19d: JUMPDEST 
0x19e: V169 = 0x2c6
0x1a1: V170 = GAS
0x1a2: V171 = SUB V170 0x2c6
0x1a3: V172 = CALL V171 V133 0x0 V161 V162 V161 0x20
0x1a4: V173 = ISZERO V172
0x1a5: V174 = ISZERO V173
0x1a6: V175 = 0x1ae
0x1a9: JUMPI 0x1ae V174
---
Entry stack: [V12, 0x87, V55, V58, V60, 0x0, V133, 0x70a08231, V158, 0x20, V161, V162, V161, 0x0, V133]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, 0x0, V133, 0x70a08231, V158]

================================

Block 0x1aa
[0x1aa:0x1ad]
---
Predecessors: [0x19d]
Successors: []
---
0x1aa PUSH1 0x0
0x1ac DUP1
0x1ad REVERT
---
0x1aa: V176 = 0x0
0x1ad: REVERT 0x0 0x0
---
Entry stack: [V12, 0x87, V55, V58, V60, 0x0, V133, 0x70a08231, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, 0x0, V133, 0x70a08231, V158]

================================

Block 0x1ae
[0x1ae:0x1c3]
---
Predecessors: [0x19d]
Successors: [0x1c4, 0x1c9]
---
0x1ae JUMPDEST
0x1af POP
0x1b0 POP
0x1b1 POP
0x1b2 PUSH1 0x40
0x1b4 MLOAD
0x1b5 DUP1
0x1b6 MLOAD
0x1b7 SWAP2
0x1b8 POP
0x1b9 POP
0x1ba PUSH1 0x0
0x1bc DUP2
0x1bd GT
0x1be DUP1
0x1bf ISZERO
0x1c0 PUSH2 0x1c9
0x1c3 JUMPI
---
0x1ae: JUMPDEST 
0x1b2: V177 = 0x40
0x1b4: V178 = M[0x40]
0x1b6: V179 = M[V178]
0x1ba: V180 = 0x0
0x1bd: V181 = GT V179 0x0
0x1bf: V182 = ISZERO V181
0x1c0: V183 = 0x1c9
0x1c3: JUMPI 0x1c9 V182
---
Entry stack: [V12, 0x87, V55, V58, V60, 0x0, V133, 0x70a08231, V158]
Stack pops: 4
Stack additions: [V179, V181]
Exit stack: [V12, 0x87, V55, V58, V60, V179, V181]

================================

Block 0x1c4
[0x1c4:0x1c8]
---
Predecessors: [0x1ae]
Successors: [0x1c9]
---
0x1c4 POP
0x1c5 PUSH1 0x0
0x1c7 DUP3
0x1c8 GT
---
0x1c5: V184 = 0x0
0x1c8: V185 = GT V60 0x0
---
Entry stack: [V12, 0x87, V55, V58, V60, V179, V181]
Stack pops: 3
Stack additions: [S2, S1, V185]
Exit stack: [V12, 0x87, V55, V58, V60, V179, V185]

================================

Block 0x1c9
[0x1c9:0x1cf]
---
Predecessors: [0x1ae, 0x1c4]
Successors: [0x1d0, 0x1d5]
---
0x1c9 JUMPDEST
0x1ca DUP1
0x1cb ISZERO
0x1cc PUSH2 0x1d5
0x1cf JUMPI
---
0x1c9: JUMPDEST 
0x1cb: V186 = ISZERO S0
0x1cc: V187 = 0x1d5
0x1cf: JUMPI 0x1d5 V186
---
Entry stack: [V12, 0x87, V55, V58, V60, V179, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x87, V55, V58, V60, V179, S0]

================================

Block 0x1d0
[0x1d0:0x1d4]
---
Predecessors: [0x1c9]
Successors: [0x1d5]
---
0x1d0 POP
0x1d1 DUP2
0x1d2 DUP2
0x1d3 LT
0x1d4 ISZERO
---
0x1d3: V188 = LT V179 V60
0x1d4: V189 = ISZERO V188
---
Entry stack: [V12, 0x87, V55, V58, V60, V179, S0]
Stack pops: 3
Stack additions: [S2, S1, V189]
Exit stack: [V12, 0x87, V55, V58, V60, V179, V189]

================================

Block 0x1d5
[0x1d5:0x1db]
---
Predecessors: [0x1c9, 0x1d0]
Successors: [0x1dc, 0x1e0]
---
0x1d5 JUMPDEST
0x1d6 ISZERO
0x1d7 ISZERO
0x1d8 PUSH2 0x1e0
0x1db JUMPI
---
0x1d5: JUMPDEST 
0x1d6: V190 = ISZERO S0
0x1d7: V191 = ISZERO V190
0x1d8: V192 = 0x1e0
0x1db: JUMPI 0x1e0 V191
---
Entry stack: [V12, 0x87, V55, V58, V60, V179, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, V179]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x1d5]
Successors: []
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df REVERT
---
0x1dc: V193 = 0x0
0x1df: REVERT 0x0 0x0
---
Entry stack: [V12, 0x87, V55, V58, V60, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, V179]

================================

Block 0x1e0
[0x1e0:0x238]
---
Predecessors: [0x1d5]
Successors: [0x239, 0x23d]
---
0x1e0 JUMPDEST
0x1e1 DUP4
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea AND
0x1eb PUSH4 0xa9059cbb
0x1f0 DUP5
0x1f1 DUP5
0x1f2 PUSH1 0x0
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa MSTORE
0x1fb PUSH1 0x40
0x1fd MLOAD
0x1fe PUSH1 0xe0
0x200 PUSH1 0x2
0x202 EXP
0x203 PUSH4 0xffffffff
0x208 DUP6
0x209 AND
0x20a MUL
0x20b DUP2
0x20c MSTORE
0x20d PUSH1 0x1
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SUB
0x215 SWAP1
0x216 SWAP3
0x217 AND
0x218 PUSH1 0x4
0x21a DUP4
0x21b ADD
0x21c MSTORE
0x21d PUSH1 0x24
0x21f DUP3
0x220 ADD
0x221 MSTORE
0x222 PUSH1 0x44
0x224 ADD
0x225 PUSH1 0x20
0x227 PUSH1 0x40
0x229 MLOAD
0x22a DUP1
0x22b DUP4
0x22c SUB
0x22d DUP2
0x22e PUSH1 0x0
0x230 DUP8
0x231 DUP1
0x232 EXTCODESIZE
0x233 ISZERO
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x1e0: JUMPDEST 
0x1e2: V194 = 0x1
0x1e4: V195 = 0xa0
0x1e6: V196 = 0x2
0x1e8: V197 = EXP 0x2 0xa0
0x1e9: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ea: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x1eb: V200 = 0xa9059cbb
0x1f2: V201 = 0x0
0x1f4: V202 = 0x40
0x1f6: V203 = M[0x40]
0x1f7: V204 = 0x20
0x1f9: V205 = ADD 0x20 V203
0x1fa: M[V205] = 0x0
0x1fb: V206 = 0x40
0x1fd: V207 = M[0x40]
0x1fe: V208 = 0xe0
0x200: V209 = 0x2
0x202: V210 = EXP 0x2 0xe0
0x203: V211 = 0xffffffff
0x209: V212 = AND 0xa9059cbb 0xffffffff
0x20a: V213 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x20c: M[V207] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x20d: V214 = 0x1
0x20f: V215 = 0xa0
0x211: V216 = 0x2
0x213: V217 = EXP 0x2 0xa0
0x214: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x217: V219 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0x218: V220 = 0x4
0x21b: V221 = ADD V207 0x4
0x21c: M[V221] = V219
0x21d: V222 = 0x24
0x220: V223 = ADD V207 0x24
0x221: M[V223] = V60
0x222: V224 = 0x44
0x224: V225 = ADD 0x44 V207
0x225: V226 = 0x20
0x227: V227 = 0x40
0x229: V228 = M[0x40]
0x22c: V229 = SUB V225 V228
0x22e: V230 = 0x0
0x232: V231 = EXTCODESIZE V199
0x233: V232 = ISZERO V231
0x234: V233 = ISZERO V232
0x235: V234 = 0x23d
0x238: JUMPI 0x23d V233
---
Entry stack: [V12, 0x87, V55, V58, V60, V179]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V199, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V199]
Exit stack: [V12, 0x87, V55, V58, V60, V179, V199, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V199]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x1e0]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V235 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x87, V55, V58, V60, V179, V199, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, V179, V199, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V199]

================================

Block 0x23d
[0x23d:0x249]
---
Predecessors: [0x1e0]
Successors: [0x24a, 0x24e]
---
0x23d JUMPDEST
0x23e PUSH2 0x2c6
0x241 GAS
0x242 SUB
0x243 CALL
0x244 ISZERO
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x23d: JUMPDEST 
0x23e: V236 = 0x2c6
0x241: V237 = GAS
0x242: V238 = SUB V237 0x2c6
0x243: V239 = CALL V238 V199 0x0 V228 V229 V228 0x20
0x244: V240 = ISZERO V239
0x245: V241 = ISZERO V240
0x246: V242 = 0x24e
0x249: JUMPI 0x24e V241
---
Entry stack: [V12, 0x87, V55, V58, V60, V179, V199, 0xa9059cbb, V225, 0x20, V228, V229, V228, 0x0, V199]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, V179, V199, 0xa9059cbb, V225]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x23d]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V243 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x87, V55, V58, V60, V179, V199, 0xa9059cbb, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, V179, V199, 0xa9059cbb, V225]

================================

Block 0x24e
[0x24e:0x25e]
---
Predecessors: [0x23d]
Successors: [0x25f, 0x260]
---
0x24e JUMPDEST
0x24f POP
0x250 POP
0x251 POP
0x252 PUSH1 0x40
0x254 MLOAD
0x255 DUP1
0x256 MLOAD
0x257 SWAP1
0x258 POP
0x259 ISZERO
0x25a ISZERO
0x25b PUSH2 0x260
0x25e JUMPI
---
0x24e: JUMPDEST 
0x252: V244 = 0x40
0x254: V245 = M[0x40]
0x256: V246 = M[V245]
0x259: V247 = ISZERO V246
0x25a: V248 = ISZERO V247
0x25b: V249 = 0x260
0x25e: JUMPI 0x260 V248
---
Entry stack: [V12, 0x87, V55, V58, V60, V179, V199, 0xa9059cbb, V225]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, V179]

================================

Block 0x25f
[0x25f:0x25f]
---
Predecessors: [0x24e]
Successors: []
---
0x25f INVALID
---
0x25f: INVALID 
---
Entry stack: [V12, 0x87, V55, V58, V60, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, V179]

================================

Block 0x260
[0x260:0x260]
---
Predecessors: [0x24e]
Successors: [0x261]
---
0x260 JUMPDEST
---
0x260: JUMPDEST 
---
Entry stack: [V12, 0x87, V55, V58, V60, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, V179]

================================

Block 0x261
[0x261:0x261]
---
Predecessors: [0x260]
Successors: [0x262]
---
0x261 JUMPDEST
---
0x261: JUMPDEST 
---
Entry stack: [V12, 0x87, V55, V58, V60, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V55, V58, V60, V179]

================================

Block 0x262
[0x262:0x267]
---
Predecessors: [0x261]
Successors: [0x87]
---
0x262 JUMPDEST
0x263 POP
0x264 POP
0x265 POP
0x266 POP
0x267 JUMP
---
0x262: JUMPDEST 
0x267: JUMP 0x87
---
Entry stack: [V12, 0x87, V55, V58, V60, V179]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x268
[0x268:0x276]
---
Predecessors: [0xbe]
Successors: [0xc6]
---
0x268 JUMPDEST
0x269 PUSH1 0x0
0x26b SLOAD
0x26c PUSH1 0x1
0x26e PUSH1 0xa0
0x270 PUSH1 0x2
0x272 EXP
0x273 SUB
0x274 AND
0x275 DUP2
0x276 JUMP
---
0x268: JUMPDEST 
0x269: V250 = 0x0
0x26b: V251 = S[0x0]
0x26c: V252 = 0x1
0x26e: V253 = 0xa0
0x270: V254 = 0x2
0x272: V255 = EXP 0x2 0xa0
0x273: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x274: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x276: JUMP 0xc6
---
Entry stack: [V12, 0xc6]
Stack pops: 1
Stack additions: [S0, V257]
Exit stack: [V12, 0xc6, V257]

================================

Block 0x277
[0x277:0x28d]
---
Predecessors: [0xed]
Successors: [0x28e, 0x292]
---
0x277 JUMPDEST
0x278 PUSH1 0x0
0x27a SLOAD
0x27b CALLER
0x27c PUSH1 0x1
0x27e PUSH1 0xa0
0x280 PUSH1 0x2
0x282 EXP
0x283 SUB
0x284 SWAP1
0x285 DUP2
0x286 AND
0x287 SWAP2
0x288 AND
0x289 EQ
0x28a PUSH2 0x292
0x28d JUMPI
---
0x277: JUMPDEST 
0x278: V258 = 0x0
0x27a: V259 = S[0x0]
0x27b: V260 = CALLER
0x27c: V261 = 0x1
0x27e: V262 = 0xa0
0x280: V263 = 0x2
0x282: V264 = EXP 0x2 0xa0
0x283: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x286: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x288: V267 = AND V259 0xffffffffffffffffffffffffffffffffffffffff
0x289: V268 = EQ V267 V266
0x28a: V269 = 0x292
0x28d: JUMPI 0x292 V268
---
Entry stack: [V12, 0x87, V93, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V93, V95]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x277]
Successors: []
---
0x28e PUSH1 0x0
0x290 DUP1
0x291 REVERT
---
0x28e: V270 = 0x0
0x291: REVERT 0x0 0x0
---
Entry stack: [V12, 0x87, V93, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V93, V95]

================================

Block 0x292
[0x292:0x2a2]
---
Predecessors: [0x277]
Successors: [0x2a3, 0x2a7]
---
0x292 JUMPDEST
0x293 PUSH1 0x1
0x295 PUSH1 0xa0
0x297 PUSH1 0x2
0x299 EXP
0x29a SUB
0x29b DUP3
0x29c AND
0x29d ISZERO
0x29e ISZERO
0x29f PUSH2 0x2a7
0x2a2 JUMPI
---
0x292: JUMPDEST 
0x293: V271 = 0x1
0x295: V272 = 0xa0
0x297: V273 = 0x2
0x299: V274 = EXP 0x2 0xa0
0x29a: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29c: V276 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V277 = ISZERO V276
0x29e: V278 = ISZERO V277
0x29f: V279 = 0x2a7
0x2a2: JUMPI 0x2a7 V278
---
Entry stack: [V12, 0x87, V93, V95]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x87, V93, V95]

================================

Block 0x2a3
[0x2a3:0x2a6]
---
Predecessors: [0x292]
Successors: []
---
0x2a3 PUSH1 0x0
0x2a5 DUP1
0x2a6 REVERT
---
0x2a3: V280 = 0x0
0x2a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x87, V93, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V93, V95]

================================

Block 0x2a7
[0x2a7:0x2bb]
---
Predecessors: [0x292]
Successors: [0x2bc, 0x2c1]
---
0x2a7 JUMPDEST
0x2a8 PUSH1 0x0
0x2aa ADDRESS
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 AND
0x2b4 BALANCE
0x2b5 GT
0x2b6 DUP1
0x2b7 ISZERO
0x2b8 PUSH2 0x2c1
0x2bb JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V281 = 0x0
0x2aa: V282 = ADDRESS
0x2ab: V283 = 0x1
0x2ad: V284 = 0xa0
0x2af: V285 = 0x2
0x2b1: V286 = EXP 0x2 0xa0
0x2b2: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x2b4: V289 = BALANCE V288
0x2b5: V290 = GT V289 0x0
0x2b7: V291 = ISZERO V290
0x2b8: V292 = 0x2c1
0x2bb: JUMPI 0x2c1 V291
---
Entry stack: [V12, 0x87, V93, V95]
Stack pops: 0
Stack additions: [V290]
Exit stack: [V12, 0x87, V93, V95, V290]

================================

Block 0x2bc
[0x2bc:0x2c0]
---
Predecessors: [0x2a7]
Successors: [0x2c1]
---
0x2bc POP
0x2bd PUSH1 0x0
0x2bf DUP2
0x2c0 GT
---
0x2bd: V293 = 0x0
0x2c0: V294 = GT V95 0x0
---
Entry stack: [V12, 0x87, V93, V95, V290]
Stack pops: 2
Stack additions: [S1, V294]
Exit stack: [V12, 0x87, V93, V95, V294]

================================

Block 0x2c1
[0x2c1:0x2c7]
---
Predecessors: [0x2a7, 0x2bc]
Successors: [0x2c8, 0x2d7]
---
0x2c1 JUMPDEST
0x2c2 DUP1
0x2c3 ISZERO
0x2c4 PUSH2 0x2d7
0x2c7 JUMPI
---
0x2c1: JUMPDEST 
0x2c3: V295 = ISZERO S0
0x2c4: V296 = 0x2d7
0x2c7: JUMPI 0x2d7 V295
---
Entry stack: [V12, 0x87, V93, V95, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x87, V93, V95, S0]

================================

Block 0x2c8
[0x2c8:0x2d6]
---
Predecessors: [0x2c1]
Successors: [0x2d7]
---
0x2c8 POP
0x2c9 DUP1
0x2ca ADDRESS
0x2cb PUSH1 0x1
0x2cd PUSH1 0xa0
0x2cf PUSH1 0x2
0x2d1 EXP
0x2d2 SUB
0x2d3 AND
0x2d4 BALANCE
0x2d5 LT
0x2d6 ISZERO
---
0x2ca: V297 = ADDRESS
0x2cb: V298 = 0x1
0x2cd: V299 = 0xa0
0x2cf: V300 = 0x2
0x2d1: V301 = EXP 0x2 0xa0
0x2d2: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d3: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x2d4: V304 = BALANCE V303
0x2d5: V305 = LT V304 V95
0x2d6: V306 = ISZERO V305
---
Entry stack: [V12, 0x87, V93, V95, S0]
Stack pops: 2
Stack additions: [S1, V306]
Exit stack: [V12, 0x87, V93, V95, V306]

================================

Block 0x2d7
[0x2d7:0x2dd]
---
Predecessors: [0x2c1, 0x2c8]
Successors: [0x2de, 0x2e2]
---
0x2d7 JUMPDEST
0x2d8 ISZERO
0x2d9 ISZERO
0x2da PUSH2 0x2e2
0x2dd JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V307 = ISZERO S0
0x2d9: V308 = ISZERO V307
0x2da: V309 = 0x2e2
0x2dd: JUMPI 0x2e2 V308
---
Entry stack: [V12, 0x87, V93, V95, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x87, V93, V95]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x2d7]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V310 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x87, V93, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V93, V95]

================================

Block 0x2e2
[0x2e2:0x30b]
---
Predecessors: [0x2d7]
Successors: [0x30c, 0x30d]
---
0x2e2 JUMPDEST
0x2e3 DUP2
0x2e4 PUSH1 0x1
0x2e6 PUSH1 0xa0
0x2e8 PUSH1 0x2
0x2ea EXP
0x2eb SUB
0x2ec AND
0x2ed DUP2
0x2ee PUSH1 0x40
0x2f0 MLOAD
0x2f1 PUSH1 0x0
0x2f3 PUSH1 0x40
0x2f5 MLOAD
0x2f6 DUP1
0x2f7 DUP4
0x2f8 SUB
0x2f9 DUP2
0x2fa DUP6
0x2fb DUP8
0x2fc PUSH2 0x8796
0x2ff GAS
0x300 SUB
0x301 CALL
0x302 SWAP3
0x303 POP
0x304 POP
0x305 POP
0x306 ISZERO
0x307 ISZERO
0x308 PUSH2 0x30d
0x30b JUMPI
---
0x2e2: JUMPDEST 
0x2e4: V311 = 0x1
0x2e6: V312 = 0xa0
0x2e8: V313 = 0x2
0x2ea: V314 = EXP 0x2 0xa0
0x2eb: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ec: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x2ee: V317 = 0x40
0x2f0: V318 = M[0x40]
0x2f1: V319 = 0x0
0x2f3: V320 = 0x40
0x2f5: V321 = M[0x40]
0x2f8: V322 = SUB V318 V321
0x2fc: V323 = 0x8796
0x2ff: V324 = GAS
0x300: V325 = SUB V324 0x8796
0x301: V326 = CALL V325 V316 V95 V321 V322 V321 0x0
0x306: V327 = ISZERO V326
0x307: V328 = ISZERO V327
0x308: V329 = 0x30d
0x30b: JUMPI 0x30d V328
---
Entry stack: [V12, 0x87, V93, V95]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x87, V93, V95]

================================

Block 0x30c
[0x30c:0x30c]
---
Predecessors: [0x2e2]
Successors: []
---
0x30c INVALID
---
0x30c: INVALID 
---
Entry stack: [V12, 0x87, V93, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V93, V95]

================================

Block 0x30d
[0x30d:0x30d]
---
Predecessors: [0x2e2]
Successors: [0x30e]
---
0x30d JUMPDEST
---
0x30d: JUMPDEST 
---
Entry stack: [V12, 0x87, V93, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V93, V95]

================================

Block 0x30e
[0x30e:0x30e]
---
Predecessors: [0x30d]
Successors: [0x30f]
---
0x30e JUMPDEST
---
0x30e: JUMPDEST 
---
Entry stack: [V12, 0x87, V93, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x87, V93, V95]

================================

Block 0x30f
[0x30f:0x312]
---
Predecessors: [0x30e]
Successors: [0x87]
---
0x30f JUMPDEST
0x310 POP
0x311 POP
0x312 JUMP
---
0x30f: JUMPDEST 
0x312: JUMP 0x87
---
Entry stack: [V12, 0x87, V93, V95]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x313
[0x313:0x350]
---
Predecessors: []
Successors: []
---
0x313 STOP
0x314 LOG1
0x315 PUSH6 0x627a7a723058
0x31c SHA3
0x31d SWAP13
0x31e MISSING 0x47
0x31f MISSING 0xed
0x320 MISSING 0x5e
0x321 MISSING 0xdc
0x322 DUP8
0x323 MISSING 0xac
0x324 MISSING 0xd6
0x325 SHR
0x326 MISSING 0x5c
0x327 NOT
0x328 DELEGATECALL
0x329 MISSING 0xb0
0x32a SWAP9
0x32b SWAP4
0x32c GASLIMIT
0x32d MISSING 0xeb
0x32e MISSING 0xfc
0x32f MISSING 0xc5
0x330 MISSING 0xbb
0x331 MISSING 0xd8
0x332 MISSING 0x47
0x333 MISSING 0xb1
0x334 PUSH2 0xabfc
0x337 PUSH25 0x3da10e60520029
---
0x313: STOP 
0x314: LOG S0 S1 S2
0x315: V330 = 0x627a7a723058
0x31c: V331 = SHA3 0x627a7a723058 S3
0x31e: MISSING 0x47
0x31f: MISSING 0xed
0x320: MISSING 0x5e
0x321: MISSING 0xdc
0x323: MISSING 0xac
0x324: MISSING 0xd6
0x325: V332 = SHR S0 S1
0x326: MISSING 0x5c
0x327: V333 = NOT S0
0x328: V334 = DELEGATECALL V333 S1 S2 S3 S4 S5
0x329: MISSING 0xb0
0x32c: V335 = GASLIMIT
0x32d: MISSING 0xeb
0x32e: MISSING 0xfc
0x32f: MISSING 0xc5
0x330: MISSING 0xbb
0x331: MISSING 0xd8
0x332: MISSING 0x47
0x333: MISSING 0xb1
0x334: V336 = 0xabfc
0x337: V337 = 0x3da10e60520029
---
Entry stack: []
Stack pops: 0
Stack additions: [S16, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V331, S7, S0, S1, S2, S3, S4, S5, S6, S7, V332, V334, V335, S4, S1, S2, S3, S9, S5, S6, S7, S8, S0, 0x3da10e60520029, 0xabfc]
Exit stack: []

================================

Function 0:
Public function signature: 0xd172a01
Entry block: 0x89
Exit block: 0x87
Body: 0x87, 0x89, 0x90, 0x94, 0x106, 0x11e, 0x122, 0x133, 0x134, 0x145, 0x146, 0x199, 0x19d, 0x1aa, 0x1ae, 0x1c4, 0x1c9, 0x1d0, 0x1d5, 0x1dc, 0x1e0, 0x239, 0x23d, 0x24a, 0x24e, 0x25f, 0x260, 0x261, 0x262

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xb3
Exit block: 0xc6
Body: 0xb3, 0xba, 0xbe, 0xc6, 0x268

Function 2:
Public function signature: 0x94081e21
Entry block: 0xe2
Exit block: 0x87
Body: 0x87, 0xe2, 0xe9, 0xed, 0x277, 0x28e, 0x292, 0x2a3, 0x2a7, 0x2bc, 0x2c1, 0x2c8, 0x2d7, 0x2de, 0x2e2, 0x30c, 0x30d, 0x30e, 0x30f

Function 3:
Public fallback function
Entry block: 0x3b
Exit block: 0x87
Body: 0x3b, 0x3c, 0x45, 0x49, 0x87

