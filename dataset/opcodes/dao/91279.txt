Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x116]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6d427fa3
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x116
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6d427fa3
0x3b: V13 = EQ V11 0x6d427fa3
0x3c: V14 = 0x116
0x3f: JUMPI 0x116 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x130]
---
0x40 DUP1
0x41 PUSH4 0x715018a6
0x46 EQ
0x47 PUSH2 0x130
0x4a JUMPI
---
0x41: V15 = 0x715018a6
0x46: V16 = EQ 0x715018a6 V11
0x47: V17 = 0x130
0x4a: JUMPI 0x130 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x145]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0x145
0x55 JUMPI
---
0x4c: V18 = 0x8da5cb5b
0x51: V19 = EQ 0x8da5cb5b V11
0x52: V20 = 0x145
0x55: JUMPI 0x145 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x176]
---
0x56 DUP1
0x57 PUSH4 0xa42b7e0b
0x5c EQ
0x5d PUSH2 0x176
0x60 JUMPI
---
0x57: V21 = 0xa42b7e0b
0x5c: V22 = EQ 0xa42b7e0b V11
0x5d: V23 = 0x176
0x60: JUMPI 0x176 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x18b]
---
0x61 DUP1
0x62 PUSH4 0xc5aa6e77
0x67 EQ
0x68 PUSH2 0x18b
0x6b JUMPI
---
0x62: V24 = 0xc5aa6e77
0x67: V25 = EQ 0xc5aa6e77 V11
0x68: V26 = 0x18b
0x6b: JUMPI 0x18b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1b2]
---
0x6c DUP1
0x6d PUSH4 0xead3a0fe
0x72 EQ
0x73 PUSH2 0x1b2
0x76 JUMPI
---
0x6d: V27 = 0xead3a0fe
0x72: V28 = EQ 0xead3a0fe V11
0x73: V29 = 0x1b2
0x76: JUMPI 0x1b2 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1c7]
---
0x77 DUP1
0x78 PUSH4 0xf2fde38b
0x7d EQ
0x7e PUSH2 0x1c7
0x81 JUMPI
---
0x78: V30 = 0xf2fde38b
0x7d: V31 = EQ 0xf2fde38b V11
0x7e: V32 = 0x1c7
0x81: JUMPI 0x1c7 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x0, 0x77]
Successors: [0x8d, 0x91]
---
0x82 JUMPDEST
0x83 PUSH1 0x2
0x85 SLOAD
0x86 CALLVALUE
0x87 LT
0x88 ISZERO
0x89 PUSH2 0x91
0x8c JUMPI
---
0x82: JUMPDEST 
0x83: V33 = 0x2
0x85: V34 = S[0x2]
0x86: V35 = CALLVALUE
0x87: V36 = LT V35 V34
0x88: V37 = ISZERO V36
0x89: V38 = 0x91
0x8c: JUMPI 0x91 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x90]
---
Predecessors: [0x82]
Successors: []
---
0x8d PUSH1 0x0
0x8f DUP1
0x90 REVERT
---
0x8d: V39 = 0x0
0x90: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x91
[0x91:0xf7]
---
Predecessors: [0x82]
Successors: [0xf8, 0xfc]
---
0x91 JUMPDEST
0x92 PUSH1 0x1
0x94 SLOAD
0x95 PUSH1 0x40
0x97 DUP1
0x98 MLOAD
0x99 PUSH32 0xb64afbe500000000000000000000000000000000000000000000000000000000
0xba DUP2
0xbb MSTORE
0xbc CALLER
0xbd PUSH1 0x4
0xbf DUP3
0xc0 ADD
0xc1 MSTORE
0xc2 CALLVALUE
0xc3 PUSH1 0x24
0xc5 DUP3
0xc6 ADD
0xc7 MSTORE
0xc8 SWAP1
0xc9 MLOAD
0xca PUSH1 0x1
0xcc PUSH1 0xa0
0xce PUSH1 0x2
0xd0 EXP
0xd1 SUB
0xd2 SWAP1
0xd3 SWAP3
0xd4 AND
0xd5 SWAP2
0xd6 PUSH4 0xb64afbe5
0xdb SWAP2
0xdc PUSH1 0x44
0xde DUP1
0xdf DUP3
0xe0 ADD
0xe1 SWAP3
0xe2 PUSH1 0x0
0xe4 SWAP3
0xe5 SWAP1
0xe6 SWAP2
0xe7 SWAP1
0xe8 DUP3
0xe9 SWAP1
0xea SUB
0xeb ADD
0xec DUP2
0xed DUP4
0xee DUP8
0xef DUP1
0xf0 EXTCODESIZE
0xf1 ISZERO
0xf2 DUP1
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0x91: JUMPDEST 
0x92: V40 = 0x1
0x94: V41 = S[0x1]
0x95: V42 = 0x40
0x98: V43 = M[0x40]
0x99: V44 = 0xb64afbe500000000000000000000000000000000000000000000000000000000
0xbb: M[V43] = 0xb64afbe500000000000000000000000000000000000000000000000000000000
0xbc: V45 = CALLER
0xbd: V46 = 0x4
0xc0: V47 = ADD V43 0x4
0xc1: M[V47] = V45
0xc2: V48 = CALLVALUE
0xc3: V49 = 0x24
0xc6: V50 = ADD V43 0x24
0xc7: M[V50] = V48
0xc9: V51 = M[0x40]
0xca: V52 = 0x1
0xcc: V53 = 0xa0
0xce: V54 = 0x2
0xd0: V55 = EXP 0x2 0xa0
0xd1: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd4: V57 = AND V41 0xffffffffffffffffffffffffffffffffffffffff
0xd6: V58 = 0xb64afbe5
0xdc: V59 = 0x44
0xe0: V60 = ADD V43 0x44
0xe2: V61 = 0x0
0xea: V62 = SUB V43 V51
0xeb: V63 = ADD V62 0x44
0xf0: V64 = EXTCODESIZE V57
0xf1: V65 = ISZERO V64
0xf3: V66 = ISZERO V65
0xf4: V67 = 0xfc
0xf7: JUMPI 0xfc V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57, 0xb64afbe5, V60, 0x0, V51, V63, V51, 0x0, V57, V65]
Exit stack: [V11, V57, 0xb64afbe5, V60, 0x0, V51, V63, V51, 0x0, V57, V65]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0x91]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V68 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V11, V57, 0xb64afbe5, V60, 0x0, V51, V63, V51, 0x0, V57, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57, 0xb64afbe5, V60, 0x0, V51, V63, V51, 0x0, V57, V65]

================================

Block 0xfc
[0xfc:0x106]
---
Predecessors: [0x91]
Successors: [0x107, 0x110]
---
0xfc JUMPDEST
0xfd POP
0xfe GAS
0xff CALL
0x100 ISZERO
0x101 DUP1
0x102 ISZERO
0x103 PUSH2 0x110
0x106 JUMPI
---
0xfc: JUMPDEST 
0xfe: V69 = GAS
0xff: V70 = CALL V69 V57 0x0 V51 V63 V51 0x0
0x100: V71 = ISZERO V70
0x102: V72 = ISZERO V71
0x103: V73 = 0x110
0x106: JUMPI 0x110 V72
---
Entry stack: [V11, V57, 0xb64afbe5, V60, 0x0, V51, V63, V51, 0x0, V57, V65]
Stack pops: 7
Stack additions: [V71]
Exit stack: [V11, V57, 0xb64afbe5, V60, V71]

================================

Block 0x107
[0x107:0x10f]
---
Predecessors: [0xfc]
Successors: []
---
0x107 RETURNDATASIZE
0x108 PUSH1 0x0
0x10a DUP1
0x10b RETURNDATACOPY
0x10c RETURNDATASIZE
0x10d PUSH1 0x0
0x10f REVERT
---
0x107: V74 = RETURNDATASIZE
0x108: V75 = 0x0
0x10b: RETURNDATACOPY 0x0 0x0 V74
0x10c: V76 = RETURNDATASIZE
0x10d: V77 = 0x0
0x10f: REVERT 0x0 V76
---
Entry stack: [V11, V57, 0xb64afbe5, V60, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57, 0xb64afbe5, V60, V71]

================================

Block 0x110
[0x110:0x115]
---
Predecessors: [0xfc]
Successors: []
---
0x110 JUMPDEST
0x111 POP
0x112 POP
0x113 POP
0x114 POP
0x115 STOP
---
0x110: JUMPDEST 
0x115: STOP 
---
Entry stack: [V11, V57, 0xb64afbe5, V60, V71]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x116
[0x116:0x11d]
---
Predecessors: [0xd]
Successors: [0x11e, 0x122]
---
0x116 JUMPDEST
0x117 CALLVALUE
0x118 DUP1
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x116: JUMPDEST 
0x117: V78 = CALLVALUE
0x119: V79 = ISZERO V78
0x11a: V80 = 0x122
0x11d: JUMPI 0x122 V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V11, V78]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x116]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V81 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V11, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V78]

================================

Block 0x122
[0x122:0x12d]
---
Predecessors: [0x116]
Successors: [0x1e8]
---
0x122 JUMPDEST
0x123 POP
0x124 PUSH2 0x12e
0x127 PUSH1 0x4
0x129 CALLDATALOAD
0x12a PUSH2 0x1e8
0x12d JUMP
---
0x122: JUMPDEST 
0x124: V82 = 0x12e
0x127: V83 = 0x4
0x129: V84 = CALLDATALOAD 0x4
0x12a: V85 = 0x1e8
0x12d: JUMP 0x1e8
---
Entry stack: [V11, V78]
Stack pops: 1
Stack additions: [0x12e, V84]
Exit stack: [V11, 0x12e, V84]

================================

Block 0x12e
[0x12e:0x12f]
---
Predecessors: [0x1ff, 0x21b, 0x373]
Successors: []
---
0x12e JUMPDEST
0x12f STOP
---
0x12e: JUMPDEST 
0x12f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x130
[0x130:0x137]
---
Predecessors: [0x40]
Successors: [0x138, 0x13c]
---
0x130 JUMPDEST
0x131 CALLVALUE
0x132 DUP1
0x133 ISZERO
0x134 PUSH2 0x13c
0x137 JUMPI
---
0x130: JUMPDEST 
0x131: V86 = CALLVALUE
0x133: V87 = ISZERO V86
0x134: V88 = 0x13c
0x137: JUMPI 0x13c V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V11, V86]

================================

Block 0x138
[0x138:0x13b]
---
Predecessors: [0x130]
Successors: []
---
0x138 PUSH1 0x0
0x13a DUP1
0x13b REVERT
---
0x138: V89 = 0x0
0x13b: REVERT 0x0 0x0
---
Entry stack: [V11, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V86]

================================

Block 0x13c
[0x13c:0x144]
---
Predecessors: [0x130]
Successors: [0x204]
---
0x13c JUMPDEST
0x13d POP
0x13e PUSH2 0x12e
0x141 PUSH2 0x204
0x144 JUMP
---
0x13c: JUMPDEST 
0x13e: V90 = 0x12e
0x141: V91 = 0x204
0x144: JUMP 0x204
---
Entry stack: [V11, V86]
Stack pops: 1
Stack additions: [0x12e]
Exit stack: [V11, 0x12e]

================================

Block 0x145
[0x145:0x14c]
---
Predecessors: [0x4b]
Successors: [0x14d, 0x151]
---
0x145 JUMPDEST
0x146 CALLVALUE
0x147 DUP1
0x148 ISZERO
0x149 PUSH2 0x151
0x14c JUMPI
---
0x145: JUMPDEST 
0x146: V92 = CALLVALUE
0x148: V93 = ISZERO V92
0x149: V94 = 0x151
0x14c: JUMPI 0x151 V93
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V92]
Exit stack: [V11, V92]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x145]
Successors: []
---
0x14d PUSH1 0x0
0x14f DUP1
0x150 REVERT
---
0x14d: V95 = 0x0
0x150: REVERT 0x0 0x0
---
Entry stack: [V11, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V92]

================================

Block 0x151
[0x151:0x159]
---
Predecessors: [0x145]
Successors: [0x270]
---
0x151 JUMPDEST
0x152 POP
0x153 PUSH2 0x15a
0x156 PUSH2 0x270
0x159 JUMP
---
0x151: JUMPDEST 
0x153: V96 = 0x15a
0x156: V97 = 0x270
0x159: JUMP 0x270
---
Entry stack: [V11, V92]
Stack pops: 1
Stack additions: [0x15a]
Exit stack: [V11, 0x15a]

================================

Block 0x15a
[0x15a:0x175]
---
Predecessors: [0x270, 0x27f]
Successors: []
---
0x15a JUMPDEST
0x15b PUSH1 0x40
0x15d DUP1
0x15e MLOAD
0x15f PUSH1 0x1
0x161 PUSH1 0xa0
0x163 PUSH1 0x2
0x165 EXP
0x166 SUB
0x167 SWAP1
0x168 SWAP3
0x169 AND
0x16a DUP3
0x16b MSTORE
0x16c MLOAD
0x16d SWAP1
0x16e DUP2
0x16f SWAP1
0x170 SUB
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP1
0x175 RETURN
---
0x15a: JUMPDEST 
0x15b: V98 = 0x40
0x15e: V99 = M[0x40]
0x15f: V100 = 0x1
0x161: V101 = 0xa0
0x163: V102 = 0x2
0x165: V103 = EXP 0x2 0xa0
0x166: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x169: V105 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x16b: M[V99] = V105
0x16c: V106 = M[0x40]
0x170: V107 = SUB V99 V106
0x171: V108 = 0x20
0x173: V109 = ADD 0x20 V107
0x175: RETURN V106 V109
---
Entry stack: [V11, 0x15a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x15a]

================================

Block 0x176
[0x176:0x17d]
---
Predecessors: [0x56]
Successors: [0x17e, 0x182]
---
0x176 JUMPDEST
0x177 CALLVALUE
0x178 DUP1
0x179 ISZERO
0x17a PUSH2 0x182
0x17d JUMPI
---
0x176: JUMPDEST 
0x177: V110 = CALLVALUE
0x179: V111 = ISZERO V110
0x17a: V112 = 0x182
0x17d: JUMPI 0x182 V111
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V110]
Exit stack: [V11, V110]

================================

Block 0x17e
[0x17e:0x181]
---
Predecessors: [0x176]
Successors: []
---
0x17e PUSH1 0x0
0x180 DUP1
0x181 REVERT
---
0x17e: V113 = 0x0
0x181: REVERT 0x0 0x0
---
Entry stack: [V11, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V110]

================================

Block 0x182
[0x182:0x18a]
---
Predecessors: [0x176]
Successors: [0x27f]
---
0x182 JUMPDEST
0x183 POP
0x184 PUSH2 0x15a
0x187 PUSH2 0x27f
0x18a JUMP
---
0x182: JUMPDEST 
0x184: V114 = 0x15a
0x187: V115 = 0x27f
0x18a: JUMP 0x27f
---
Entry stack: [V11, V110]
Stack pops: 1
Stack additions: [0x15a]
Exit stack: [V11, 0x15a]

================================

Block 0x18b
[0x18b:0x192]
---
Predecessors: [0x61]
Successors: [0x193, 0x197]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d DUP1
0x18e ISZERO
0x18f PUSH2 0x197
0x192 JUMPI
---
0x18b: JUMPDEST 
0x18c: V116 = CALLVALUE
0x18e: V117 = ISZERO V116
0x18f: V118 = 0x197
0x192: JUMPI 0x197 V117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V11, V116]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x18b]
Successors: []
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
---
0x193: V119 = 0x0
0x196: REVERT 0x0 0x0
---
Entry stack: [V11, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V116]

================================

Block 0x197
[0x197:0x19f]
---
Predecessors: [0x18b]
Successors: [0x28e]
---
0x197 JUMPDEST
0x198 POP
0x199 PUSH2 0x1a0
0x19c PUSH2 0x28e
0x19f JUMP
---
0x197: JUMPDEST 
0x199: V120 = 0x1a0
0x19c: V121 = 0x28e
0x19f: JUMP 0x28e
---
Entry stack: [V11, V116]
Stack pops: 1
Stack additions: [0x1a0]
Exit stack: [V11, 0x1a0]

================================

Block 0x1a0
[0x1a0:0x1b1]
---
Predecessors: [0x28e, 0x34f]
Successors: []
---
0x1a0 JUMPDEST
0x1a1 PUSH1 0x40
0x1a3 DUP1
0x1a4 MLOAD
0x1a5 SWAP2
0x1a6 DUP3
0x1a7 MSTORE
0x1a8 MLOAD
0x1a9 SWAP1
0x1aa DUP2
0x1ab SWAP1
0x1ac SUB
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 SWAP1
0x1b1 RETURN
---
0x1a0: JUMPDEST 
0x1a1: V122 = 0x40
0x1a4: V123 = M[0x40]
0x1a7: M[V123] = S0
0x1a8: V124 = M[0x40]
0x1ac: V125 = SUB V123 V124
0x1ad: V126 = 0x20
0x1af: V127 = ADD 0x20 V125
0x1b1: RETURN V124 V127
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x1b2
[0x1b2:0x1b9]
---
Predecessors: [0x6c]
Successors: [0x1ba, 0x1be]
---
0x1b2 JUMPDEST
0x1b3 CALLVALUE
0x1b4 DUP1
0x1b5 ISZERO
0x1b6 PUSH2 0x1be
0x1b9 JUMPI
---
0x1b2: JUMPDEST 
0x1b3: V128 = CALLVALUE
0x1b5: V129 = ISZERO V128
0x1b6: V130 = 0x1be
0x1b9: JUMPI 0x1be V129
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V128]
Exit stack: [V11, V128]

================================

Block 0x1ba
[0x1ba:0x1bd]
---
Predecessors: [0x1b2]
Successors: []
---
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd REVERT
---
0x1ba: V131 = 0x0
0x1bd: REVERT 0x0 0x0
---
Entry stack: [V11, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V128]

================================

Block 0x1be
[0x1be:0x1c6]
---
Predecessors: [0x1b2]
Successors: [0x294]
---
0x1be JUMPDEST
0x1bf POP
0x1c0 PUSH2 0x1a0
0x1c3 PUSH2 0x294
0x1c6 JUMP
---
0x1be: JUMPDEST 
0x1c0: V132 = 0x1a0
0x1c3: V133 = 0x294
0x1c6: JUMP 0x294
---
Entry stack: [V11, V128]
Stack pops: 1
Stack additions: [0x1a0]
Exit stack: [V11, 0x1a0]

================================

Block 0x1c7
[0x1c7:0x1ce]
---
Predecessors: [0x77]
Successors: [0x1cf, 0x1d3]
---
0x1c7 JUMPDEST
0x1c8 CALLVALUE
0x1c9 DUP1
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V134 = CALLVALUE
0x1ca: V135 = ISZERO V134
0x1cb: V136 = 0x1d3
0x1ce: JUMPI 0x1d3 V135
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V134]
Exit stack: [V11, V134]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1c7]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V137 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V11, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V134]

================================

Block 0x1d3
[0x1d3:0x1e7]
---
Predecessors: [0x1c7]
Successors: [0x353]
---
0x1d3 JUMPDEST
0x1d4 POP
0x1d5 PUSH2 0x12e
0x1d8 PUSH1 0x1
0x1da PUSH1 0xa0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SUB
0x1e0 PUSH1 0x4
0x1e2 CALLDATALOAD
0x1e3 AND
0x1e4 PUSH2 0x353
0x1e7 JUMP
---
0x1d3: JUMPDEST 
0x1d5: V138 = 0x12e
0x1d8: V139 = 0x1
0x1da: V140 = 0xa0
0x1dc: V141 = 0x2
0x1de: V142 = EXP 0x2 0xa0
0x1df: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e0: V144 = 0x4
0x1e2: V145 = CALLDATALOAD 0x4
0x1e3: V146 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V147 = 0x353
0x1e7: JUMP 0x353
---
Entry stack: [V11, V134]
Stack pops: 1
Stack additions: [0x12e, V146]
Exit stack: [V11, 0x12e, V146]

================================

Block 0x1e8
[0x1e8:0x1fa]
---
Predecessors: [0x122]
Successors: [0x1fb, 0x1ff]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x0
0x1eb SLOAD
0x1ec PUSH1 0x1
0x1ee PUSH1 0xa0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 SUB
0x1f4 AND
0x1f5 CALLER
0x1f6 EQ
0x1f7 PUSH2 0x1ff
0x1fa JUMPI
---
0x1e8: JUMPDEST 
0x1e9: V148 = 0x0
0x1eb: V149 = S[0x0]
0x1ec: V150 = 0x1
0x1ee: V151 = 0xa0
0x1f0: V152 = 0x2
0x1f2: V153 = EXP 0x2 0xa0
0x1f3: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f4: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x1f5: V156 = CALLER
0x1f6: V157 = EQ V156 V155
0x1f7: V158 = 0x1ff
0x1fa: JUMPI 0x1ff V157
---
Entry stack: [V11, 0x12e, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12e, V84]

================================

Block 0x1fb
[0x1fb:0x1fe]
---
Predecessors: [0x1e8]
Successors: []
---
0x1fb PUSH1 0x0
0x1fd DUP1
0x1fe REVERT
---
0x1fb: V159 = 0x0
0x1fe: REVERT 0x0 0x0
---
Entry stack: [V11, 0x12e, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12e, V84]

================================

Block 0x1ff
[0x1ff:0x203]
---
Predecessors: [0x1e8]
Successors: [0x12e]
---
0x1ff JUMPDEST
0x200 PUSH1 0x2
0x202 SSTORE
0x203 JUMP
---
0x1ff: JUMPDEST 
0x200: V160 = 0x2
0x202: S[0x2] = V84
0x203: JUMP 0x12e
---
Entry stack: [V11, 0x12e, V84]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x204
[0x204:0x216]
---
Predecessors: [0x13c]
Successors: [0x217, 0x21b]
---
0x204 JUMPDEST
0x205 PUSH1 0x0
0x207 SLOAD
0x208 PUSH1 0x1
0x20a PUSH1 0xa0
0x20c PUSH1 0x2
0x20e EXP
0x20f SUB
0x210 AND
0x211 CALLER
0x212 EQ
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x204: JUMPDEST 
0x205: V161 = 0x0
0x207: V162 = S[0x0]
0x208: V163 = 0x1
0x20a: V164 = 0xa0
0x20c: V165 = 0x2
0x20e: V166 = EXP 0x2 0xa0
0x20f: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x210: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x211: V169 = CALLER
0x212: V170 = EQ V169 V168
0x213: V171 = 0x21b
0x216: JUMPI 0x21b V170
---
Entry stack: [V11, 0x12e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12e]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x204]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V172 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x12e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12e]

================================

Block 0x21b
[0x21b:0x26f]
---
Predecessors: [0x204]
Successors: [0x12e]
---
0x21b JUMPDEST
0x21c PUSH1 0x0
0x21e DUP1
0x21f SLOAD
0x220 PUSH1 0x40
0x222 MLOAD
0x223 PUSH1 0x1
0x225 PUSH1 0xa0
0x227 PUSH1 0x2
0x229 EXP
0x22a SUB
0x22b SWAP1
0x22c SWAP2
0x22d AND
0x22e SWAP2
0x22f PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x250 SWAP2
0x251 LOG2
0x252 PUSH1 0x0
0x254 DUP1
0x255 SLOAD
0x256 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26b NOT
0x26c AND
0x26d SWAP1
0x26e SSTORE
0x26f JUMP
---
0x21b: JUMPDEST 
0x21c: V173 = 0x0
0x21f: V174 = S[0x0]
0x220: V175 = 0x40
0x222: V176 = M[0x40]
0x223: V177 = 0x1
0x225: V178 = 0xa0
0x227: V179 = 0x2
0x229: V180 = EXP 0x2 0xa0
0x22a: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22d: V182 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V183 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x251: LOG V176 0x0 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V182
0x252: V184 = 0x0
0x255: V185 = S[0x0]
0x256: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x26b: V187 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V188 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V185
0x26e: S[0x0] = V188
0x26f: JUMP 0x12e
---
Entry stack: [V11, 0x12e]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x270
[0x270:0x27e]
---
Predecessors: [0x151]
Successors: [0x15a]
---
0x270 JUMPDEST
0x271 PUSH1 0x0
0x273 SLOAD
0x274 PUSH1 0x1
0x276 PUSH1 0xa0
0x278 PUSH1 0x2
0x27a EXP
0x27b SUB
0x27c AND
0x27d DUP2
0x27e JUMP
---
0x270: JUMPDEST 
0x271: V189 = 0x0
0x273: V190 = S[0x0]
0x274: V191 = 0x1
0x276: V192 = 0xa0
0x278: V193 = 0x2
0x27a: V194 = EXP 0x2 0xa0
0x27b: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x27e: JUMP 0x15a
---
Entry stack: [V11, 0x15a]
Stack pops: 1
Stack additions: [S0, V196]
Exit stack: [V11, 0x15a, V196]

================================

Block 0x27f
[0x27f:0x28d]
---
Predecessors: [0x182]
Successors: [0x15a]
---
0x27f JUMPDEST
0x280 PUSH1 0x1
0x282 SLOAD
0x283 PUSH1 0x1
0x285 PUSH1 0xa0
0x287 PUSH1 0x2
0x289 EXP
0x28a SUB
0x28b AND
0x28c DUP2
0x28d JUMP
---
0x27f: JUMPDEST 
0x280: V197 = 0x1
0x282: V198 = S[0x1]
0x283: V199 = 0x1
0x285: V200 = 0xa0
0x287: V201 = 0x2
0x289: V202 = EXP 0x2 0xa0
0x28a: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28b: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x28d: JUMP 0x15a
---
Entry stack: [V11, 0x15a]
Stack pops: 1
Stack additions: [S0, V204]
Exit stack: [V11, 0x15a, V204]

================================

Block 0x28e
[0x28e:0x293]
---
Predecessors: [0x197]
Successors: [0x1a0]
---
0x28e JUMPDEST
0x28f PUSH1 0x2
0x291 SLOAD
0x292 DUP2
0x293 JUMP
---
0x28e: JUMPDEST 
0x28f: V205 = 0x2
0x291: V206 = S[0x2]
0x293: JUMP 0x1a0
---
Entry stack: [V11, 0x1a0]
Stack pops: 1
Stack additions: [S0, V206]
Exit stack: [V11, 0x1a0, V206]

================================

Block 0x294
[0x294:0x2ab]
---
Predecessors: [0x1be]
Successors: [0x2ac, 0x2b0]
---
0x294 JUMPDEST
0x295 PUSH1 0x1
0x297 SLOAD
0x298 PUSH1 0x0
0x29a SWAP1
0x29b DUP2
0x29c SWAP1
0x29d PUSH1 0x1
0x29f PUSH1 0xa0
0x2a1 PUSH1 0x2
0x2a3 EXP
0x2a4 SUB
0x2a5 AND
0x2a6 CALLER
0x2a7 EQ
0x2a8 PUSH2 0x2b0
0x2ab JUMPI
---
0x294: JUMPDEST 
0x295: V207 = 0x1
0x297: V208 = S[0x1]
0x298: V209 = 0x0
0x29d: V210 = 0x1
0x29f: V211 = 0xa0
0x2a1: V212 = 0x2
0x2a3: V213 = EXP 0x2 0xa0
0x2a4: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a5: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x2a6: V216 = CALLER
0x2a7: V217 = EQ V216 V215
0x2a8: V218 = 0x2b0
0x2ab: JUMPI 0x2b0 V217
---
Entry stack: [V11, 0x1a0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x1a0, 0x0, 0x0]

================================

Block 0x2ac
[0x2ac:0x2af]
---
Predecessors: [0x294]
Successors: []
---
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af REVERT
---
0x2ac: V219 = 0x0
0x2af: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a0, 0x0, 0x0]

================================

Block 0x2b0
[0x2b0:0x2bd]
---
Predecessors: [0x294]
Successors: [0x2be, 0x34a]
---
0x2b0 JUMPDEST
0x2b1 POP
0x2b2 PUSH1 0x2
0x2b4 SLOAD
0x2b5 ADDRESS
0x2b6 BALANCE
0x2b7 SWAP1
0x2b8 DUP2
0x2b9 LT
0x2ba PUSH2 0x34a
0x2bd JUMPI
---
0x2b0: JUMPDEST 
0x2b2: V220 = 0x2
0x2b4: V221 = S[0x2]
0x2b5: V222 = ADDRESS
0x2b6: V223 = BALANCE V222
0x2b9: V224 = LT V223 V221
0x2ba: V225 = 0x34a
0x2bd: JUMPI 0x34a V224
---
Entry stack: [V11, 0x1a0, 0x0, 0x0]
Stack pops: 1
Stack additions: [V223]
Exit stack: [V11, 0x1a0, 0x0, V223]

================================

Block 0x2be
[0x2be:0x324]
---
Predecessors: [0x2b0]
Successors: [0x325, 0x329]
---
0x2be PUSH1 0x1
0x2c0 PUSH1 0x0
0x2c2 SWAP1
0x2c3 SLOAD
0x2c4 SWAP1
0x2c5 PUSH2 0x100
0x2c8 EXP
0x2c9 SWAP1
0x2ca DIV
0x2cb PUSH1 0x1
0x2cd PUSH1 0xa0
0x2cf PUSH1 0x2
0x2d1 EXP
0x2d2 SUB
0x2d3 AND
0x2d4 PUSH1 0x1
0x2d6 PUSH1 0xa0
0x2d8 PUSH1 0x2
0x2da EXP
0x2db SUB
0x2dc AND
0x2dd PUSH4 0x4d9b3735
0x2e2 DUP3
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 DUP3
0x2e7 PUSH4 0xffffffff
0x2ec AND
0x2ed PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30b MUL
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x4
0x310 ADD
0x311 PUSH1 0x0
0x313 PUSH1 0x40
0x315 MLOAD
0x316 DUP1
0x317 DUP4
0x318 SUB
0x319 DUP2
0x31a DUP6
0x31b DUP9
0x31c DUP1
0x31d EXTCODESIZE
0x31e ISZERO
0x31f DUP1
0x320 ISZERO
0x321 PUSH2 0x329
0x324 JUMPI
---
0x2be: V226 = 0x1
0x2c0: V227 = 0x0
0x2c3: V228 = S[0x1]
0x2c5: V229 = 0x100
0x2c8: V230 = EXP 0x100 0x0
0x2ca: V231 = DIV V228 0x1
0x2cb: V232 = 0x1
0x2cd: V233 = 0xa0
0x2cf: V234 = 0x2
0x2d1: V235 = EXP 0x2 0xa0
0x2d2: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d3: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x2d4: V238 = 0x1
0x2d6: V239 = 0xa0
0x2d8: V240 = 0x2
0x2da: V241 = EXP 0x2 0xa0
0x2db: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dc: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x2dd: V244 = 0x4d9b3735
0x2e3: V245 = 0x40
0x2e5: V246 = M[0x40]
0x2e7: V247 = 0xffffffff
0x2ec: V248 = AND 0xffffffff 0x4d9b3735
0x2ed: V249 = 0x100000000000000000000000000000000000000000000000000000000
0x30b: V250 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4d9b3735
0x30d: M[V246] = 0x4d9b373500000000000000000000000000000000000000000000000000000000
0x30e: V251 = 0x4
0x310: V252 = ADD 0x4 V246
0x311: V253 = 0x0
0x313: V254 = 0x40
0x315: V255 = M[0x40]
0x318: V256 = SUB V252 V255
0x31d: V257 = EXTCODESIZE V243
0x31e: V258 = ISZERO V257
0x320: V259 = ISZERO V258
0x321: V260 = 0x329
0x324: JUMPI 0x329 V259
---
Entry stack: [V11, 0x1a0, 0x0, V223]
Stack pops: 1
Stack additions: [S0, V243, 0x4d9b3735, S0, V252, 0x0, V255, V256, V255, S0, V243, V258]
Exit stack: [V11, 0x1a0, 0x0, V223, V243, 0x4d9b3735, V223, V252, 0x0, V255, V256, V255, V223, V243, V258]

================================

Block 0x325
[0x325:0x328]
---
Predecessors: [0x2be]
Successors: []
---
0x325 PUSH1 0x0
0x327 DUP1
0x328 REVERT
---
0x325: V261 = 0x0
0x328: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a0, 0x0, V223, V243, 0x4d9b3735, V223, V252, 0x0, V255, V256, V255, V223, V243, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a0, 0x0, V223, V243, 0x4d9b3735, V223, V252, 0x0, V255, V256, V255, V223, V243, V258]

================================

Block 0x329
[0x329:0x333]
---
Predecessors: [0x2be]
Successors: [0x334, 0x33d]
---
0x329 JUMPDEST
0x32a POP
0x32b GAS
0x32c CALL
0x32d ISZERO
0x32e DUP1
0x32f ISZERO
0x330 PUSH2 0x33d
0x333 JUMPI
---
0x329: JUMPDEST 
0x32b: V262 = GAS
0x32c: V263 = CALL V262 V243 V223 V255 V256 V255 0x0
0x32d: V264 = ISZERO V263
0x32f: V265 = ISZERO V264
0x330: V266 = 0x33d
0x333: JUMPI 0x33d V265
---
Entry stack: [V11, 0x1a0, 0x0, V223, V243, 0x4d9b3735, V223, V252, 0x0, V255, V256, V255, V223, V243, V258]
Stack pops: 7
Stack additions: [V264]
Exit stack: [V11, 0x1a0, 0x0, V223, V243, 0x4d9b3735, V223, V252, V264]

================================

Block 0x334
[0x334:0x33c]
---
Predecessors: [0x329]
Successors: []
---
0x334 RETURNDATASIZE
0x335 PUSH1 0x0
0x337 DUP1
0x338 RETURNDATACOPY
0x339 RETURNDATASIZE
0x33a PUSH1 0x0
0x33c REVERT
---
0x334: V267 = RETURNDATASIZE
0x335: V268 = 0x0
0x338: RETURNDATACOPY 0x0 0x0 V267
0x339: V269 = RETURNDATASIZE
0x33a: V270 = 0x0
0x33c: REVERT 0x0 V269
---
Entry stack: [V11, 0x1a0, 0x0, V223, V243, 0x4d9b3735, V223, V252, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a0, 0x0, V223, V243, 0x4d9b3735, V223, V252, V264]

================================

Block 0x33d
[0x33d:0x349]
---
Predecessors: [0x329]
Successors: [0x34f]
---
0x33d JUMPDEST
0x33e POP
0x33f POP
0x340 POP
0x341 POP
0x342 POP
0x343 DUP1
0x344 SWAP2
0x345 POP
0x346 PUSH2 0x34f
0x349 JUMP
---
0x33d: JUMPDEST 
0x346: V271 = 0x34f
0x349: JUMP 0x34f
---
Entry stack: [V11, 0x1a0, 0x0, V223, V243, 0x4d9b3735, V223, V252, V264]
Stack pops: 7
Stack additions: [S5, S5]
Exit stack: [V11, 0x1a0, V223, V223]

================================

Block 0x34a
[0x34a:0x34e]
---
Predecessors: [0x2b0]
Successors: [0x34f]
---
0x34a JUMPDEST
0x34b PUSH1 0x0
0x34d SWAP2
0x34e POP
---
0x34a: JUMPDEST 
0x34b: V272 = 0x0
---
Entry stack: [V11, 0x1a0, 0x0, V223]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x1a0, 0x0, V223]

================================

Block 0x34f
[0x34f:0x352]
---
Predecessors: [0x33d, 0x34a]
Successors: [0x1a0]
---
0x34f JUMPDEST
0x350 POP
0x351 SWAP1
0x352 JUMP
---
0x34f: JUMPDEST 
0x352: JUMP 0x1a0
---
Entry stack: [V11, 0x1a0, S1, V223]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, S1]

================================

Block 0x353
[0x353:0x365]
---
Predecessors: [0x1d3]
Successors: [0x366, 0x36a]
---
0x353 JUMPDEST
0x354 PUSH1 0x0
0x356 SLOAD
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f AND
0x360 CALLER
0x361 EQ
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x353: JUMPDEST 
0x354: V273 = 0x0
0x356: V274 = S[0x0]
0x357: V275 = 0x1
0x359: V276 = 0xa0
0x35b: V277 = 0x2
0x35d: V278 = EXP 0x2 0xa0
0x35e: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x360: V281 = CALLER
0x361: V282 = EQ V281 V280
0x362: V283 = 0x36a
0x365: JUMPI 0x36a V282
---
Entry stack: [V11, 0x12e, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12e, V146]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x353]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V284 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [V11, 0x12e, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12e, V146]

================================

Block 0x36a
[0x36a:0x372]
---
Predecessors: [0x353]
Successors: [0x376]
---
0x36a JUMPDEST
0x36b PUSH2 0x373
0x36e DUP2
0x36f PUSH2 0x376
0x372 JUMP
---
0x36a: JUMPDEST 
0x36b: V285 = 0x373
0x36f: V286 = 0x376
0x372: JUMP 0x376
---
Entry stack: [V11, 0x12e, V146]
Stack pops: 1
Stack additions: [S0, 0x373, S0]
Exit stack: [V11, 0x12e, V146, 0x373, V146]

================================

Block 0x373
[0x373:0x375]
---
Predecessors: [0x38b]
Successors: [0x12e]
---
0x373 JUMPDEST
0x374 POP
0x375 JUMP
---
0x373: JUMPDEST 
0x375: JUMP 0x12e
---
Entry stack: [V11, 0x12e, V146]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x376
[0x376:0x386]
---
Predecessors: [0x36a]
Successors: [0x387, 0x38b]
---
0x376 JUMPDEST
0x377 PUSH1 0x1
0x379 PUSH1 0xa0
0x37b PUSH1 0x2
0x37d EXP
0x37e SUB
0x37f DUP2
0x380 AND
0x381 ISZERO
0x382 ISZERO
0x383 PUSH2 0x38b
0x386 JUMPI
---
0x376: JUMPDEST 
0x377: V287 = 0x1
0x379: V288 = 0xa0
0x37b: V289 = 0x2
0x37d: V290 = EXP 0x2 0xa0
0x37e: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x380: V292 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x381: V293 = ISZERO V292
0x382: V294 = ISZERO V293
0x383: V295 = 0x38b
0x386: JUMPI 0x38b V294
---
Entry stack: [V11, 0x12e, V146, 0x373, V146]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x12e, V146, 0x373, V146]

================================

Block 0x387
[0x387:0x38a]
---
Predecessors: [0x376]
Successors: []
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
---
0x387: V296 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x12e, V146, 0x373, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12e, V146, 0x373, V146]

================================

Block 0x38b
[0x38b:0x3f2]
---
Predecessors: [0x376]
Successors: [0x373]
---
0x38b JUMPDEST
0x38c PUSH1 0x0
0x38e DUP1
0x38f SLOAD
0x390 PUSH1 0x40
0x392 MLOAD
0x393 PUSH1 0x1
0x395 PUSH1 0xa0
0x397 PUSH1 0x2
0x399 EXP
0x39a SUB
0x39b DUP1
0x39c DUP6
0x39d AND
0x39e SWAP4
0x39f SWAP3
0x3a0 AND
0x3a1 SWAP2
0x3a2 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3c3 SWAP2
0x3c4 LOG3
0x3c5 PUSH1 0x0
0x3c7 DUP1
0x3c8 SLOAD
0x3c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3de NOT
0x3df AND
0x3e0 PUSH1 0x1
0x3e2 PUSH1 0xa0
0x3e4 PUSH1 0x2
0x3e6 EXP
0x3e7 SUB
0x3e8 SWAP3
0x3e9 SWAP1
0x3ea SWAP3
0x3eb AND
0x3ec SWAP2
0x3ed SWAP1
0x3ee SWAP2
0x3ef OR
0x3f0 SWAP1
0x3f1 SSTORE
0x3f2 JUMP
---
0x38b: JUMPDEST 
0x38c: V297 = 0x0
0x38f: V298 = S[0x0]
0x390: V299 = 0x40
0x392: V300 = M[0x40]
0x393: V301 = 0x1
0x395: V302 = 0xa0
0x397: V303 = 0x2
0x399: V304 = EXP 0x2 0xa0
0x39a: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39d: V306 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x3a0: V307 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V308 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3c4: LOG V300 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V307 V306
0x3c5: V309 = 0x0
0x3c8: V310 = S[0x0]
0x3c9: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x3de: V312 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3df: V313 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V310
0x3e0: V314 = 0x1
0x3e2: V315 = 0xa0
0x3e4: V316 = 0x2
0x3e6: V317 = EXP 0x2 0xa0
0x3e7: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3eb: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x3ef: V320 = OR V319 V313
0x3f1: S[0x0] = V320
0x3f2: JUMP 0x373
---
Entry stack: [V11, 0x12e, V146, 0x373, V146]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x12e, V146]

================================

Block 0x3f3
[0x3f3:0x41e]
---
Predecessors: []
Successors: []
---
0x3f3 STOP
0x3f4 LOG1
0x3f5 PUSH6 0x627a7a723058
0x3fc SHA3
0x3fd MISSING 0xd7
0x3fe OR
0x3ff MSIZE
0x400 MISSING 0xb5
0x401 MISSING 0xba
0x402 OR
0x403 CODECOPY
0x404 PUSH7 0xfcbce3deb68286
0x40c LOG1
0x40d SWAP15
0x40e MISSING 0x5e
0x40f SWAP16
0x410 MOD
0x411 MISSING 0xc5
0x412 MLOAD
0x413 BALANCE
0x414 EXTCODEHASH
0x415 MISSING 0xd6
0x416 DUP7
0x417 MISSING 0xb9
0x418 MISSING 0xb9
0x419 AND
0x41a MISSING 0xa6
0x41b PC
0x41c MISSING 0xee
0x41d STOP
0x41e MISSING 0x29
---
0x3f3: STOP 
0x3f4: LOG S0 S1 S2
0x3f5: V321 = 0x627a7a723058
0x3fc: V322 = SHA3 0x627a7a723058 S3
0x3fd: MISSING 0xd7
0x3fe: V323 = OR S0 S1
0x3ff: V324 = MSIZE
0x400: MISSING 0xb5
0x401: MISSING 0xba
0x402: V325 = OR S0 S1
0x403: CODECOPY V325 S2 S3
0x404: V326 = 0xfcbce3deb68286
0x40c: LOG 0xfcbce3deb68286 S4 S5
0x40e: MISSING 0x5e
0x410: V327 = MOD S16 S1
0x411: MISSING 0xc5
0x412: V328 = M[S0]
0x413: V329 = BALANCE V328
0x414: V330 = EXTCODEHASH V329
0x415: MISSING 0xd6
0x417: MISSING 0xb9
0x418: MISSING 0xb9
0x419: V331 = AND S0 S1
0x41a: MISSING 0xa6
0x41b: V332 = PC
0x41c: MISSING 0xee
0x41d: STOP 
0x41e: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V322, V324, V323, S21, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S6, V327, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, V330, S6, S0, S1, S2, S3, S4, S5, S6, V331, V332]
Exit stack: []

================================

Function 0:
Public function signature: 0x6d427fa3
Entry block: 0x116
Exit block: 0x12e
Body: 0x116, 0x11e, 0x122, 0x12e, 0x1e8, 0x1fb, 0x1ff

Function 1:
Public function signature: 0x715018a6
Entry block: 0x130
Exit block: 0x12e
Body: 0x12e, 0x130, 0x138, 0x13c, 0x204, 0x217, 0x21b

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x145
Exit block: 0x15a
Body: 0x145, 0x14d, 0x151, 0x15a, 0x270

Function 3:
Public function signature: 0xa42b7e0b
Entry block: 0x176
Exit block: 0x15a
Body: 0x15a, 0x176, 0x17e, 0x182, 0x27f

Function 4:
Public function signature: 0xc5aa6e77
Entry block: 0x18b
Exit block: 0x1a0
Body: 0x18b, 0x193, 0x197, 0x1a0, 0x28e

Function 5:
Public function signature: 0xead3a0fe
Entry block: 0x1b2
Exit block: 0x334
Body: 0x1a0, 0x1b2, 0x1ba, 0x1be, 0x294, 0x2ac, 0x2b0, 0x2be, 0x325, 0x329, 0x334, 0x33d, 0x34a, 0x34f

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x1c7
Exit block: 0x12e
Body: 0x12e, 0x1c7, 0x1cf, 0x1d3, 0x353, 0x366, 0x36a, 0x373, 0x376, 0x387, 0x38b

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x107
Body: 0x82, 0x8d, 0x91, 0xf8, 0xfc, 0x107, 0x110

