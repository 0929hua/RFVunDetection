Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x5dd07e63
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x5dd07e63
0x3c: V13 = EQ 0x5dd07e63 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x6e]
---
0x41 DUP1
0x42 PUSH4 0x96e63d78
0x47 EQ
0x48 PUSH2 0x6e
0x4b JUMPI
---
0x42: V15 = 0x96e63d78
0x47: V16 = EQ 0x96e63d78 V11
0x48: V17 = 0x6e
0x4b: JUMPI 0x6e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xc5]
---
0x4c DUP1
0x4d PUSH4 0xba13a572
0x52 EQ
0x53 PUSH2 0xc5
0x56 JUMPI
---
0x4d: V18 = 0xba13a572
0x52: V19 = EQ 0xba13a572 V11
0x53: V20 = 0xc5
0x56: JUMPI 0xc5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x11c]
---
0x57 DUP1
0x58 PUSH4 0xda733a7f
0x5d EQ
0x5e PUSH2 0x11c
0x61 JUMPI
---
0x58: V21 = 0xda733a7f
0x5d: V22 = EQ 0xda733a7f V11
0x5e: V23 = 0x11c
0x61: JUMPI 0x11c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0xd]
Successors: [0x173]
---
0x64 JUMPDEST
0x65 PUSH2 0x6c
0x68 PUSH2 0x173
0x6b JUMP
---
0x64: JUMPDEST 
0x65: V24 = 0x6c
0x68: V25 = 0x173
0x6b: JUMP 0x173
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x46b]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x75]
---
Predecessors: [0x41]
Successors: [0x76, 0x7a]
---
0x6e JUMPDEST
0x6f CALLVALUE
0x70 DUP1
0x71 ISZERO
0x72 PUSH2 0x7a
0x75 JUMPI
---
0x6e: JUMPDEST 
0x6f: V26 = CALLVALUE
0x71: V27 = ISZERO V26
0x72: V28 = 0x7a
0x75: JUMPI 0x7a V27
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V26]
Exit stack: [V11, V26]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x6e]
Successors: []
---
0x76 PUSH1 0x0
0x78 DUP1
0x79 REVERT
---
0x76: V29 = 0x0
0x79: REVERT 0x0 0x0
---
Entry stack: [V11, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V26]

================================

Block 0x7a
[0x7a:0x82]
---
Predecessors: [0x6e]
Successors: [0x46e]
---
0x7a JUMPDEST
0x7b POP
0x7c PUSH2 0x83
0x7f PUSH2 0x46e
0x82 JUMP
---
0x7a: JUMPDEST 
0x7c: V30 = 0x83
0x7f: V31 = 0x46e
0x82: JUMP 0x46e
---
Entry stack: [V11, V26]
Stack pops: 1
Stack additions: [0x83]
Exit stack: [V11, 0x83]

================================

Block 0x83
[0x83:0xc4]
---
Predecessors: [0x46e]
Successors: []
---
0x83 JUMPDEST
0x84 PUSH1 0x40
0x86 MLOAD
0x87 DUP1
0x88 DUP3
0x89 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e AND
0x9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4 AND
0xb5 DUP2
0xb6 MSTORE
0xb7 PUSH1 0x20
0xb9 ADD
0xba SWAP2
0xbb POP
0xbc POP
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 DUP1
0xc1 SWAP2
0xc2 SUB
0xc3 SWAP1
0xc4 RETURN
---
0x83: JUMPDEST 
0x84: V32 = 0x40
0x86: V33 = M[0x40]
0x89: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x9f: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0xb6: M[V33] = V37
0xb7: V38 = 0x20
0xb9: V39 = ADD 0x20 V33
0xbd: V40 = 0x40
0xbf: V41 = M[0x40]
0xc2: V42 = SUB V39 V41
0xc4: RETURN V41 V42
---
Entry stack: [V11, 0x83, V260]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x83]

================================

Block 0xc5
[0xc5:0xcc]
---
Predecessors: [0x4c]
Successors: [0xcd, 0xd1]
---
0xc5 JUMPDEST
0xc6 CALLVALUE
0xc7 DUP1
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc5: JUMPDEST 
0xc6: V43 = CALLVALUE
0xc8: V44 = ISZERO V43
0xc9: V45 = 0xd1
0xcc: JUMPI 0xd1 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc5]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V46 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0xd1
[0xd1:0xd9]
---
Predecessors: [0xc5]
Successors: [0x494]
---
0xd1 JUMPDEST
0xd2 POP
0xd3 PUSH2 0xda
0xd6 PUSH2 0x494
0xd9 JUMP
---
0xd1: JUMPDEST 
0xd3: V47 = 0xda
0xd6: V48 = 0x494
0xd9: JUMP 0x494
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0xda]
Exit stack: [V11, 0xda]

================================

Block 0xda
[0xda:0x11b]
---
Predecessors: [0x494]
Successors: []
---
0xda JUMPDEST
0xdb PUSH1 0x40
0xdd MLOAD
0xde DUP1
0xdf DUP3
0xe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5 AND
0xf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b AND
0x10c DUP2
0x10d MSTORE
0x10e PUSH1 0x20
0x110 ADD
0x111 SWAP2
0x112 POP
0x113 POP
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 SWAP2
0x119 SUB
0x11a SWAP1
0x11b RETURN
---
0xda: JUMPDEST 
0xdb: V49 = 0x40
0xdd: V50 = M[0x40]
0xe0: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0xf6: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x10d: M[V50] = V54
0x10e: V55 = 0x20
0x110: V56 = ADD 0x20 V50
0x114: V57 = 0x40
0x116: V58 = M[0x40]
0x119: V59 = SUB V56 V58
0x11b: RETURN V58 V59
---
Entry stack: [V11, 0xda, V268]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x11c
[0x11c:0x123]
---
Predecessors: [0x57]
Successors: [0x124, 0x128]
---
0x11c JUMPDEST
0x11d CALLVALUE
0x11e DUP1
0x11f ISZERO
0x120 PUSH2 0x128
0x123 JUMPI
---
0x11c: JUMPDEST 
0x11d: V60 = CALLVALUE
0x11f: V61 = ISZERO V60
0x120: V62 = 0x128
0x123: JUMPI 0x128 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V60]
Exit stack: [V11, V60]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0x11c]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V63 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V11, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V60]

================================

Block 0x128
[0x128:0x130]
---
Predecessors: [0x11c]
Successors: [0x4ba]
---
0x128 JUMPDEST
0x129 POP
0x12a PUSH2 0x131
0x12d PUSH2 0x4ba
0x130 JUMP
---
0x128: JUMPDEST 
0x12a: V64 = 0x131
0x12d: V65 = 0x4ba
0x130: JUMP 0x4ba
---
Entry stack: [V11, V60]
Stack pops: 1
Stack additions: [0x131]
Exit stack: [V11, 0x131]

================================

Block 0x131
[0x131:0x172]
---
Predecessors: [0x4ba]
Successors: []
---
0x131 JUMPDEST
0x132 PUSH1 0x40
0x134 MLOAD
0x135 DUP1
0x136 DUP3
0x137 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14c AND
0x14d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x162 AND
0x163 DUP2
0x164 MSTORE
0x165 PUSH1 0x20
0x167 ADD
0x168 SWAP2
0x169 POP
0x16a POP
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f SWAP2
0x170 SUB
0x171 SWAP1
0x172 RETURN
---
0x131: JUMPDEST 
0x132: V66 = 0x40
0x134: V67 = M[0x40]
0x137: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x14c: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x14d: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x162: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x164: M[V67] = V71
0x165: V72 = 0x20
0x167: V73 = ADD 0x20 V67
0x16b: V74 = 0x40
0x16d: V75 = M[0x40]
0x170: V76 = SUB V73 V75
0x172: RETURN V75 V76
---
Entry stack: [V11, 0x131, V275]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x131]

================================

Block 0x173
[0x173:0x253]
---
Predecessors: [0x64]
Successors: [0x254, 0x258]
---
0x173 JUMPDEST
0x174 PUSH1 0x2
0x176 PUSH1 0x0
0x178 SWAP1
0x179 SLOAD
0x17a SWAP1
0x17b PUSH2 0x100
0x17e EXP
0x17f SWAP1
0x180 DIV
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 AND
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad PUSH4 0xf088d547
0x1b2 PUSH7 0x2386f26fc10000
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd SWAP1
0x1be SLOAD
0x1bf SWAP1
0x1c0 PUSH2 0x100
0x1c3 EXP
0x1c4 SWAP1
0x1c5 DIV
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP4
0x1e0 PUSH4 0xffffffff
0x1e5 AND
0x1e6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x204 MUL
0x205 DUP2
0x206 MSTORE
0x207 PUSH1 0x4
0x209 ADD
0x20a DUP1
0x20b DUP3
0x20c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x221 AND
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 AND
0x238 DUP2
0x239 MSTORE
0x23a PUSH1 0x20
0x23c ADD
0x23d SWAP2
0x23e POP
0x23f POP
0x240 PUSH1 0x20
0x242 PUSH1 0x40
0x244 MLOAD
0x245 DUP1
0x246 DUP4
0x247 SUB
0x248 DUP2
0x249 DUP6
0x24a DUP9
0x24b DUP1
0x24c EXTCODESIZE
0x24d ISZERO
0x24e DUP1
0x24f ISZERO
0x250 PUSH2 0x258
0x253 JUMPI
---
0x173: JUMPDEST 
0x174: V77 = 0x2
0x176: V78 = 0x0
0x179: V79 = S[0x2]
0x17b: V80 = 0x100
0x17e: V81 = EXP 0x100 0x0
0x180: V82 = DIV V79 0x1
0x181: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x197: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x1ad: V87 = 0xf088d547
0x1b2: V88 = 0x2386f26fc10000
0x1ba: V89 = 0x0
0x1be: V90 = S[0x0]
0x1c0: V91 = 0x100
0x1c3: V92 = EXP 0x100 0x0
0x1c5: V93 = DIV V90 0x1
0x1c6: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1dc: V96 = 0x40
0x1de: V97 = M[0x40]
0x1e0: V98 = 0xffffffff
0x1e5: V99 = AND 0xffffffff 0xf088d547
0x1e6: V100 = 0x100000000000000000000000000000000000000000000000000000000
0x204: V101 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf088d547
0x206: M[V97] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x207: V102 = 0x4
0x209: V103 = ADD 0x4 V97
0x20c: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x221: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x222: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x239: M[V103] = V107
0x23a: V108 = 0x20
0x23c: V109 = ADD 0x20 V103
0x240: V110 = 0x20
0x242: V111 = 0x40
0x244: V112 = M[0x40]
0x247: V113 = SUB V109 V112
0x24c: V114 = EXTCODESIZE V86
0x24d: V115 = ISZERO V114
0x24f: V116 = ISZERO V115
0x250: V117 = 0x258
0x253: JUMPI 0x258 V116
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: [V86, 0xf088d547, 0x2386f26fc10000, V109, 0x20, V112, V113, V112, 0x2386f26fc10000, V86, V115]
Exit stack: [V11, 0x6c, V86, 0xf088d547, 0x2386f26fc10000, V109, 0x20, V112, V113, V112, 0x2386f26fc10000, V86, V115]

================================

Block 0x254
[0x254:0x257]
---
Predecessors: [0x173]
Successors: []
---
0x254 PUSH1 0x0
0x256 DUP1
0x257 REVERT
---
0x254: V118 = 0x0
0x257: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V86, 0xf088d547, 0x2386f26fc10000, V109, 0x20, V112, V113, V112, 0x2386f26fc10000, V86, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V86, 0xf088d547, 0x2386f26fc10000, V109, 0x20, V112, V113, V112, 0x2386f26fc10000, V86, V115]

================================

Block 0x258
[0x258:0x262]
---
Predecessors: [0x173]
Successors: [0x263, 0x26c]
---
0x258 JUMPDEST
0x259 POP
0x25a GAS
0x25b CALL
0x25c ISZERO
0x25d DUP1
0x25e ISZERO
0x25f PUSH2 0x26c
0x262 JUMPI
---
0x258: JUMPDEST 
0x25a: V119 = GAS
0x25b: V120 = CALL V119 V86 0x2386f26fc10000 V112 V113 V112 0x20
0x25c: V121 = ISZERO V120
0x25e: V122 = ISZERO V121
0x25f: V123 = 0x26c
0x262: JUMPI 0x26c V122
---
Entry stack: [V11, 0x6c, V86, 0xf088d547, 0x2386f26fc10000, V109, 0x20, V112, V113, V112, 0x2386f26fc10000, V86, V115]
Stack pops: 7
Stack additions: [V121]
Exit stack: [V11, 0x6c, V86, 0xf088d547, 0x2386f26fc10000, V109, V121]

================================

Block 0x263
[0x263:0x26b]
---
Predecessors: [0x258]
Successors: []
---
0x263 RETURNDATASIZE
0x264 PUSH1 0x0
0x266 DUP1
0x267 RETURNDATACOPY
0x268 RETURNDATASIZE
0x269 PUSH1 0x0
0x26b REVERT
---
0x263: V124 = RETURNDATASIZE
0x264: V125 = 0x0
0x267: RETURNDATACOPY 0x0 0x0 V124
0x268: V126 = RETURNDATASIZE
0x269: V127 = 0x0
0x26b: REVERT 0x0 V126
---
Entry stack: [V11, 0x6c, V86, 0xf088d547, 0x2386f26fc10000, V109, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V86, 0xf088d547, 0x2386f26fc10000, V109, V121]

================================

Block 0x26c
[0x26c:0x27e]
---
Predecessors: [0x258]
Successors: [0x27f, 0x283]
---
0x26c JUMPDEST
0x26d POP
0x26e POP
0x26f POP
0x270 POP
0x271 POP
0x272 PUSH1 0x40
0x274 MLOAD
0x275 RETURNDATASIZE
0x276 PUSH1 0x20
0x278 DUP2
0x279 LT
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x26c: JUMPDEST 
0x272: V128 = 0x40
0x274: V129 = M[0x40]
0x275: V130 = RETURNDATASIZE
0x276: V131 = 0x20
0x279: V132 = LT V130 0x20
0x27a: V133 = ISZERO V132
0x27b: V134 = 0x283
0x27e: JUMPI 0x283 V133
---
Entry stack: [V11, 0x6c, V86, 0xf088d547, 0x2386f26fc10000, V109, V121]
Stack pops: 5
Stack additions: [V129, V130]
Exit stack: [V11, 0x6c, V129, V130]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x26c]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V135 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V129, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V129, V130]

================================

Block 0x283
[0x283:0x32d]
---
Predecessors: [0x26c]
Successors: [0x32e, 0x332]
---
0x283 JUMPDEST
0x284 DUP2
0x285 ADD
0x286 SWAP1
0x287 DUP1
0x288 DUP1
0x289 MLOAD
0x28a SWAP1
0x28b PUSH1 0x20
0x28d ADD
0x28e SWAP1
0x28f SWAP3
0x290 SWAP2
0x291 SWAP1
0x292 POP
0x293 POP
0x294 POP
0x295 POP
0x296 PUSH1 0x1
0x298 PUSH1 0x0
0x29a SWAP1
0x29b SLOAD
0x29c SWAP1
0x29d PUSH2 0x100
0x2a0 EXP
0x2a1 SWAP1
0x2a2 DIV
0x2a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b8 AND
0x2b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ce AND
0x2cf PUSH4 0xd0e30db0
0x2d4 ADDRESS
0x2d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ea AND
0x2eb BALANCE
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef DUP3
0x2f0 PUSH4 0xffffffff
0x2f5 AND
0x2f6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x314 MUL
0x315 DUP2
0x316 MSTORE
0x317 PUSH1 0x4
0x319 ADD
0x31a PUSH1 0x0
0x31c PUSH1 0x40
0x31e MLOAD
0x31f DUP1
0x320 DUP4
0x321 SUB
0x322 DUP2
0x323 DUP6
0x324 DUP9
0x325 DUP1
0x326 EXTCODESIZE
0x327 ISZERO
0x328 DUP1
0x329 ISZERO
0x32a PUSH2 0x332
0x32d JUMPI
---
0x283: JUMPDEST 
0x285: V136 = ADD V129 V130
0x289: V137 = M[V129]
0x28b: V138 = 0x20
0x28d: V139 = ADD 0x20 V129
0x296: V140 = 0x1
0x298: V141 = 0x0
0x29b: V142 = S[0x1]
0x29d: V143 = 0x100
0x2a0: V144 = EXP 0x100 0x0
0x2a2: V145 = DIV V142 0x1
0x2a3: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x2b9: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x2cf: V150 = 0xd0e30db0
0x2d4: V151 = ADDRESS
0x2d5: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x2eb: V154 = BALANCE V153
0x2ec: V155 = 0x40
0x2ee: V156 = M[0x40]
0x2f0: V157 = 0xffffffff
0x2f5: V158 = AND 0xffffffff 0xd0e30db0
0x2f6: V159 = 0x100000000000000000000000000000000000000000000000000000000
0x314: V160 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x316: M[V156] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x317: V161 = 0x4
0x319: V162 = ADD 0x4 V156
0x31a: V163 = 0x0
0x31c: V164 = 0x40
0x31e: V165 = M[0x40]
0x321: V166 = SUB V162 V165
0x326: V167 = EXTCODESIZE V149
0x327: V168 = ISZERO V167
0x329: V169 = ISZERO V168
0x32a: V170 = 0x332
0x32d: JUMPI 0x332 V169
---
Entry stack: [V11, 0x6c, V129, V130]
Stack pops: 2
Stack additions: [V149, 0xd0e30db0, V154, V162, 0x0, V165, V166, V165, V154, V149, V168]
Exit stack: [V11, 0x6c, V149, 0xd0e30db0, V154, V162, 0x0, V165, V166, V165, V154, V149, V168]

================================

Block 0x32e
[0x32e:0x331]
---
Predecessors: [0x283]
Successors: []
---
0x32e PUSH1 0x0
0x330 DUP1
0x331 REVERT
---
0x32e: V171 = 0x0
0x331: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V149, 0xd0e30db0, V154, V162, 0x0, V165, V166, V165, V154, V149, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V149, 0xd0e30db0, V154, V162, 0x0, V165, V166, V165, V154, V149, V168]

================================

Block 0x332
[0x332:0x33c]
---
Predecessors: [0x283]
Successors: [0x33d, 0x346]
---
0x332 JUMPDEST
0x333 POP
0x334 GAS
0x335 CALL
0x336 ISZERO
0x337 DUP1
0x338 ISZERO
0x339 PUSH2 0x346
0x33c JUMPI
---
0x332: JUMPDEST 
0x334: V172 = GAS
0x335: V173 = CALL V172 V149 V154 V165 V166 V165 0x0
0x336: V174 = ISZERO V173
0x338: V175 = ISZERO V174
0x339: V176 = 0x346
0x33c: JUMPI 0x346 V175
---
Entry stack: [V11, 0x6c, V149, 0xd0e30db0, V154, V162, 0x0, V165, V166, V165, V154, V149, V168]
Stack pops: 7
Stack additions: [V174]
Exit stack: [V11, 0x6c, V149, 0xd0e30db0, V154, V162, V174]

================================

Block 0x33d
[0x33d:0x345]
---
Predecessors: [0x332]
Successors: []
---
0x33d RETURNDATASIZE
0x33e PUSH1 0x0
0x340 DUP1
0x341 RETURNDATACOPY
0x342 RETURNDATASIZE
0x343 PUSH1 0x0
0x345 REVERT
---
0x33d: V177 = RETURNDATASIZE
0x33e: V178 = 0x0
0x341: RETURNDATACOPY 0x0 0x0 V177
0x342: V179 = RETURNDATASIZE
0x343: V180 = 0x0
0x345: REVERT 0x0 V179
---
Entry stack: [V11, 0x6c, V149, 0xd0e30db0, V154, V162, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V149, 0xd0e30db0, V154, V162, V174]

================================

Block 0x346
[0x346:0x3cc]
---
Predecessors: [0x332]
Successors: [0x3cd, 0x3d1]
---
0x346 JUMPDEST
0x347 POP
0x348 POP
0x349 POP
0x34a POP
0x34b POP
0x34c PUSH1 0x2
0x34e PUSH1 0x0
0x350 SWAP1
0x351 SLOAD
0x352 SWAP1
0x353 PUSH2 0x100
0x356 EXP
0x357 SWAP1
0x358 DIV
0x359 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36e AND
0x36f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x384 AND
0x385 PUSH4 0xe9fad8ee
0x38a PUSH1 0x40
0x38c MLOAD
0x38d DUP2
0x38e PUSH4 0xffffffff
0x393 AND
0x394 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3b2 MUL
0x3b3 DUP2
0x3b4 MSTORE
0x3b5 PUSH1 0x4
0x3b7 ADD
0x3b8 PUSH1 0x0
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd DUP1
0x3be DUP4
0x3bf SUB
0x3c0 DUP2
0x3c1 PUSH1 0x0
0x3c3 DUP8
0x3c4 DUP1
0x3c5 EXTCODESIZE
0x3c6 ISZERO
0x3c7 DUP1
0x3c8 ISZERO
0x3c9 PUSH2 0x3d1
0x3cc JUMPI
---
0x346: JUMPDEST 
0x34c: V181 = 0x2
0x34e: V182 = 0x0
0x351: V183 = S[0x2]
0x353: V184 = 0x100
0x356: V185 = EXP 0x100 0x0
0x358: V186 = DIV V183 0x1
0x359: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x36e: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x36f: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x384: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x385: V191 = 0xe9fad8ee
0x38a: V192 = 0x40
0x38c: V193 = M[0x40]
0x38e: V194 = 0xffffffff
0x393: V195 = AND 0xffffffff 0xe9fad8ee
0x394: V196 = 0x100000000000000000000000000000000000000000000000000000000
0x3b2: V197 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe9fad8ee
0x3b4: M[V193] = 0xe9fad8ee00000000000000000000000000000000000000000000000000000000
0x3b5: V198 = 0x4
0x3b7: V199 = ADD 0x4 V193
0x3b8: V200 = 0x0
0x3ba: V201 = 0x40
0x3bc: V202 = M[0x40]
0x3bf: V203 = SUB V199 V202
0x3c1: V204 = 0x0
0x3c5: V205 = EXTCODESIZE V190
0x3c6: V206 = ISZERO V205
0x3c8: V207 = ISZERO V206
0x3c9: V208 = 0x3d1
0x3cc: JUMPI 0x3d1 V207
---
Entry stack: [V11, 0x6c, V149, 0xd0e30db0, V154, V162, V174]
Stack pops: 5
Stack additions: [V190, 0xe9fad8ee, V199, 0x0, V202, V203, V202, 0x0, V190, V206]
Exit stack: [V11, 0x6c, V190, 0xe9fad8ee, V199, 0x0, V202, V203, V202, 0x0, V190, V206]

================================

Block 0x3cd
[0x3cd:0x3d0]
---
Predecessors: [0x346]
Successors: []
---
0x3cd PUSH1 0x0
0x3cf DUP1
0x3d0 REVERT
---
0x3cd: V209 = 0x0
0x3d0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V190, 0xe9fad8ee, V199, 0x0, V202, V203, V202, 0x0, V190, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V190, 0xe9fad8ee, V199, 0x0, V202, V203, V202, 0x0, V190, V206]

================================

Block 0x3d1
[0x3d1:0x3db]
---
Predecessors: [0x346]
Successors: [0x3dc, 0x3e5]
---
0x3d1 JUMPDEST
0x3d2 POP
0x3d3 GAS
0x3d4 CALL
0x3d5 ISZERO
0x3d6 DUP1
0x3d7 ISZERO
0x3d8 PUSH2 0x3e5
0x3db JUMPI
---
0x3d1: JUMPDEST 
0x3d3: V210 = GAS
0x3d4: V211 = CALL V210 V190 0x0 V202 V203 V202 0x0
0x3d5: V212 = ISZERO V211
0x3d7: V213 = ISZERO V212
0x3d8: V214 = 0x3e5
0x3db: JUMPI 0x3e5 V213
---
Entry stack: [V11, 0x6c, V190, 0xe9fad8ee, V199, 0x0, V202, V203, V202, 0x0, V190, V206]
Stack pops: 7
Stack additions: [V212]
Exit stack: [V11, 0x6c, V190, 0xe9fad8ee, V199, V212]

================================

Block 0x3dc
[0x3dc:0x3e4]
---
Predecessors: [0x3d1]
Successors: []
---
0x3dc RETURNDATASIZE
0x3dd PUSH1 0x0
0x3df DUP1
0x3e0 RETURNDATACOPY
0x3e1 RETURNDATASIZE
0x3e2 PUSH1 0x0
0x3e4 REVERT
---
0x3dc: V215 = RETURNDATASIZE
0x3dd: V216 = 0x0
0x3e0: RETURNDATACOPY 0x0 0x0 V215
0x3e1: V217 = RETURNDATASIZE
0x3e2: V218 = 0x0
0x3e4: REVERT 0x0 V217
---
Entry stack: [V11, 0x6c, V190, 0xe9fad8ee, V199, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V190, 0xe9fad8ee, V199, V212]

================================

Block 0x3e5
[0x3e5:0x409]
---
Predecessors: [0x3d1]
Successors: [0x40a, 0x40e]
---
0x3e5 JUMPDEST
0x3e6 POP
0x3e7 POP
0x3e8 POP
0x3e9 POP
0x3ea CALLVALUE
0x3eb ADDRESS
0x3ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x401 AND
0x402 BALANCE
0x403 GT
0x404 ISZERO
0x405 ISZERO
0x406 PUSH2 0x40e
0x409 JUMPI
---
0x3e5: JUMPDEST 
0x3ea: V219 = CALLVALUE
0x3eb: V220 = ADDRESS
0x3ec: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x401: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x402: V223 = BALANCE V222
0x403: V224 = GT V223 V219
0x404: V225 = ISZERO V224
0x405: V226 = ISZERO V225
0x406: V227 = 0x40e
0x409: JUMPI 0x40e V226
---
Entry stack: [V11, 0x6c, V190, 0xe9fad8ee, V199, V212]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x40a
[0x40a:0x40d]
---
Predecessors: [0x3e5]
Successors: []
---
0x40a PUSH1 0x0
0x40c DUP1
0x40d REVERT
---
0x40a: V228 = 0x0
0x40d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x40e
[0x40e:0x461]
---
Predecessors: [0x3e5]
Successors: [0x462, 0x46b]
---
0x40e JUMPDEST
0x40f CALLER
0x410 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x425 AND
0x426 PUSH2 0x8fc
0x429 ADDRESS
0x42a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43f AND
0x440 BALANCE
0x441 SWAP1
0x442 DUP2
0x443 ISZERO
0x444 MUL
0x445 SWAP1
0x446 PUSH1 0x40
0x448 MLOAD
0x449 PUSH1 0x0
0x44b PUSH1 0x40
0x44d MLOAD
0x44e DUP1
0x44f DUP4
0x450 SUB
0x451 DUP2
0x452 DUP6
0x453 DUP9
0x454 DUP9
0x455 CALL
0x456 SWAP4
0x457 POP
0x458 POP
0x459 POP
0x45a POP
0x45b ISZERO
0x45c DUP1
0x45d ISZERO
0x45e PUSH2 0x46b
0x461 JUMPI
---
0x40e: JUMPDEST 
0x40f: V229 = CALLER
0x410: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x425: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x426: V232 = 0x8fc
0x429: V233 = ADDRESS
0x42a: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x43f: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x440: V236 = BALANCE V235
0x443: V237 = ISZERO V236
0x444: V238 = MUL V237 0x8fc
0x446: V239 = 0x40
0x448: V240 = M[0x40]
0x449: V241 = 0x0
0x44b: V242 = 0x40
0x44d: V243 = M[0x40]
0x450: V244 = SUB V240 V243
0x455: V245 = CALL V238 V231 V236 V243 V244 V243 0x0
0x45b: V246 = ISZERO V245
0x45d: V247 = ISZERO V246
0x45e: V248 = 0x46b
0x461: JUMPI 0x46b V247
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: [V246]
Exit stack: [V11, 0x6c, V246]

================================

Block 0x462
[0x462:0x46a]
---
Predecessors: [0x40e]
Successors: []
---
0x462 RETURNDATASIZE
0x463 PUSH1 0x0
0x465 DUP1
0x466 RETURNDATACOPY
0x467 RETURNDATASIZE
0x468 PUSH1 0x0
0x46a REVERT
---
0x462: V249 = RETURNDATASIZE
0x463: V250 = 0x0
0x466: RETURNDATACOPY 0x0 0x0 V249
0x467: V251 = RETURNDATASIZE
0x468: V252 = 0x0
0x46a: REVERT 0x0 V251
---
Entry stack: [V11, 0x6c, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V246]

================================

Block 0x46b
[0x46b:0x46d]
---
Predecessors: [0x40e]
Successors: [0x6c]
---
0x46b JUMPDEST
0x46c POP
0x46d JUMP
---
0x46b: JUMPDEST 
0x46d: JUMP 0x6c
---
Entry stack: [V11, 0x6c, V246]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x46e
[0x46e:0x493]
---
Predecessors: [0x7a]
Successors: [0x83]
---
0x46e JUMPDEST
0x46f PUSH1 0x2
0x471 PUSH1 0x0
0x473 SWAP1
0x474 SLOAD
0x475 SWAP1
0x476 PUSH2 0x100
0x479 EXP
0x47a SWAP1
0x47b DIV
0x47c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x491 AND
0x492 DUP2
0x493 JUMP
---
0x46e: JUMPDEST 
0x46f: V253 = 0x2
0x471: V254 = 0x0
0x474: V255 = S[0x2]
0x476: V256 = 0x100
0x479: V257 = EXP 0x100 0x0
0x47b: V258 = DIV V255 0x1
0x47c: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x491: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x493: JUMP 0x83
---
Entry stack: [V11, 0x83]
Stack pops: 1
Stack additions: [S0, V260]
Exit stack: [V11, 0x83, V260]

================================

Block 0x494
[0x494:0x4b9]
---
Predecessors: [0xd1]
Successors: [0xda]
---
0x494 JUMPDEST
0x495 PUSH1 0x1
0x497 PUSH1 0x0
0x499 SWAP1
0x49a SLOAD
0x49b SWAP1
0x49c PUSH2 0x100
0x49f EXP
0x4a0 SWAP1
0x4a1 DIV
0x4a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b7 AND
0x4b8 DUP2
0x4b9 JUMP
---
0x494: JUMPDEST 
0x495: V261 = 0x1
0x497: V262 = 0x0
0x49a: V263 = S[0x1]
0x49c: V264 = 0x100
0x49f: V265 = EXP 0x100 0x0
0x4a1: V266 = DIV V263 0x1
0x4a2: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b7: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x4b9: JUMP 0xda
---
Entry stack: [V11, 0xda]
Stack pops: 1
Stack additions: [S0, V268]
Exit stack: [V11, 0xda, V268]

================================

Block 0x4ba
[0x4ba:0x4de]
---
Predecessors: [0x128]
Successors: [0x131]
---
0x4ba JUMPDEST
0x4bb PUSH1 0x0
0x4bd DUP1
0x4be SWAP1
0x4bf SLOAD
0x4c0 SWAP1
0x4c1 PUSH2 0x100
0x4c4 EXP
0x4c5 SWAP1
0x4c6 DIV
0x4c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4dc AND
0x4dd DUP2
0x4de JUMP
---
0x4ba: JUMPDEST 
0x4bb: V269 = 0x0
0x4bf: V270 = S[0x0]
0x4c1: V271 = 0x100
0x4c4: V272 = EXP 0x100 0x0
0x4c6: V273 = DIV V270 0x1
0x4c7: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x4dc: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x4de: JUMP 0x131
---
Entry stack: [V11, 0x131]
Stack pops: 1
Stack additions: [S0, V275]
Exit stack: [V11, 0x131, V275]

================================

Block 0x4df
[0x4df:0x50a]
---
Predecessors: []
Successors: []
---
0x4df STOP
0x4e0 LOG1
0x4e1 PUSH6 0x627a7a723058
0x4e8 SHA3
0x4e9 EXTCODEHASH
0x4ea PUSH14 0xa4fcd86d2ff9640970468573eb1d
0x4f9 MISSING 0x26
0x4fa MISSING 0xf7
0x4fb MISSING 0xae
0x4fc CALLCODE
0x4fd BALANCE
0x4fe DUP5
0x4ff SWAP4
0x500 MISSING 0xb4
0x501 MISSING 0xc
0x502 MISSING 0xf7
0x503 SSTORE
0x504 SWAP2
0x505 MISSING 0x5d
0x506 MISSING 0xb0
0x507 MISSING 0xe9
0x508 MISSING 0xcd
0x509 STOP
0x50a MISSING 0x29
---
0x4df: STOP 
0x4e0: LOG S0 S1 S2
0x4e1: V276 = 0x627a7a723058
0x4e8: V277 = SHA3 0x627a7a723058 S3
0x4e9: V278 = EXTCODEHASH V277
0x4ea: V279 = 0xa4fcd86d2ff9640970468573eb1d
0x4f9: MISSING 0x26
0x4fa: MISSING 0xf7
0x4fb: MISSING 0xae
0x4fc: V280 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x4fd: V281 = BALANCE V280
0x500: MISSING 0xb4
0x501: MISSING 0xc
0x502: MISSING 0xf7
0x503: S[S0] = S1
0x505: MISSING 0x5d
0x506: MISSING 0xb0
0x507: MISSING 0xe9
0x508: MISSING 0xcd
0x509: STOP 
0x50a: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa4fcd86d2ff9640970468573eb1d, V278, S9, V281, S7, S8, S10, S10, S4, S3, S2]
Exit stack: []

================================

Function 0:
Public function signature: 0x5dd07e63
Entry block: 0x64
Exit block: 0x6c
Body: 0x64, 0x6c, 0x173, 0x254, 0x258, 0x263, 0x26c, 0x27f, 0x283, 0x32e, 0x332, 0x33d, 0x346, 0x3cd, 0x3d1, 0x3dc, 0x3e5, 0x40a, 0x40e, 0x462, 0x46b

Function 1:
Public function signature: 0x96e63d78
Entry block: 0x6e
Exit block: 0x83
Body: 0x6e, 0x76, 0x7a, 0x83, 0x46e

Function 2:
Public function signature: 0xba13a572
Entry block: 0xc5
Exit block: 0xda
Body: 0xc5, 0xcd, 0xd1, 0xda, 0x494

Function 3:
Public function signature: 0xda733a7f
Entry block: 0x11c
Exit block: 0x131
Body: 0x11c, 0x124, 0x128, 0x131, 0x4ba

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

