Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x93]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x93
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x93
0xa: JUMPI 0x93 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x9c]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xd8e6e2c
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x9c
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xd8e6e2c
0x20: V14 = EQ V12 0xd8e6e2c
0x21: V15 = 0x9c
0x24: JUMPI 0x9c V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xc1]
---
0x25 DUP1
0x26 PUSH4 0x2cf2c0af
0x2b EQ
0x2c PUSH2 0xc1
0x2f JUMPI
---
0x26: V16 = 0x2cf2c0af
0x2b: V17 = EQ 0x2cf2c0af V12
0x2c: V18 = 0xc1
0x2f: JUMPI 0xc1 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xd9]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0xd9
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0xd9
0x3a: JUMPI 0xd9 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xf1]
---
0x3b DUP1
0x3c PUSH4 0x43d726d6
0x41 EQ
0x42 PUSH2 0xf1
0x45 JUMPI
---
0x3c: V22 = 0x43d726d6
0x41: V23 = EQ 0x43d726d6 V12
0x42: V24 = 0xf1
0x45: JUMPI 0xf1 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x106]
---
0x46 DUP1
0x47 PUSH4 0x5c73dcea
0x4c EQ
0x4d PUSH2 0x106
0x50 JUMPI
---
0x47: V25 = 0x5c73dcea
0x4c: V26 = EQ 0x5c73dcea V12
0x4d: V27 = 0x106
0x50: JUMPI 0x106 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x167]
---
0x51 DUP1
0x52 PUSH4 0x5dfb7f3f
0x57 EQ
0x58 PUSH2 0x167
0x5b JUMPI
---
0x52: V28 = 0x5dfb7f3f
0x57: V29 = EQ 0x5dfb7f3f V12
0x58: V30 = 0x167
0x5b: JUMPI 0x167 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1af]
---
0x5c DUP1
0x5d PUSH4 0x70a08231
0x62 EQ
0x63 PUSH2 0x1af
0x66 JUMPI
---
0x5d: V31 = 0x70a08231
0x62: V32 = EQ 0x70a08231 V12
0x63: V33 = 0x1af
0x66: JUMPI 0x1af V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1e0]
---
0x67 DUP1
0x68 PUSH4 0x8da5cb5b
0x6d EQ
0x6e PUSH2 0x1e0
0x71 JUMPI
---
0x68: V34 = 0x8da5cb5b
0x6d: V35 = EQ 0x8da5cb5b V12
0x6e: V36 = 0x1e0
0x71: JUMPI 0x1e0 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x20f]
---
0x72 DUP1
0x73 PUSH4 0xcb75bb56
0x78 EQ
0x79 PUSH2 0x20f
0x7c JUMPI
---
0x73: V37 = 0xcb75bb56
0x78: V38 = EQ 0xcb75bb56 V12
0x79: V39 = 0x20f
0x7c: JUMPI 0x20f V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2e0]
---
0x7d DUP1
0x7e PUSH4 0xd0e30db0
0x83 EQ
0x84 PUSH2 0x2e0
0x87 JUMPI
---
0x7e: V40 = 0xd0e30db0
0x83: V41 = EQ 0xd0e30db0 V12
0x84: V42 = 0x2e0
0x87: JUMPI 0x2e0 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2ea]
---
0x88 DUP1
0x89 PUSH4 0xf1b83630
0x8e EQ
0x8f PUSH2 0x2ea
0x92 JUMPI
---
0x89: V43 = 0xf1b83630
0x8e: V44 = EQ 0xf1b83630 V12
0x8f: V45 = 0x2ea
0x92: JUMPI 0x2ea V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x0, 0x88]
Successors: [0x97]
---
0x93 JUMPDEST
0x94 PUSH2 0x9a
---
0x93: JUMPDEST 
0x94: V46 = 0x9a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a]
Exit stack: [V12, 0x9a]

================================

Block 0x97
[0x97:0x97]
---
Predecessors: [0x93, 0x2e0]
Successors: [0x98]
---
0x97 JUMPDEST
---
0x97: JUMPDEST 
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x98
[0x98:0x99]
---
Predecessors: [0x97]
Successors: [0x9a]
---
0x98 JUMPDEST
0x99 JUMP
---
0x98: JUMPDEST 
0x99: JUMP 0x9a
---
Entry stack: [V12, 0x9a]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x9a
[0x9a:0x9b]
---
Predecessors: [0x98, 0x37c, 0x3d0, 0x6bb, 0x7b6, 0x83a]
Successors: []
---
0x9a JUMPDEST
0x9b STOP
---
0x9a: JUMPDEST 
0x9b: STOP 
---
Entry stack: [V12, 0x9a, V141, V144, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9c
[0x9c:0xa2]
---
Predecessors: [0xb]
Successors: [0xa3, 0xa7]
---
0x9c JUMPDEST
0x9d CALLVALUE
0x9e ISZERO
0x9f PUSH2 0xa7
0xa2 JUMPI
---
0x9c: JUMPDEST 
0x9d: V47 = CALLVALUE
0x9e: V48 = ISZERO V47
0x9f: V49 = 0xa7
0xa2: JUMPI 0xa7 V48
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3
[0xa3:0xa6]
---
Predecessors: [0x9c]
Successors: []
---
0xa3 PUSH1 0x0
0xa5 DUP1
0xa6 REVERT
---
0xa3: V50 = 0x0
0xa6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa7
[0xa7:0xae]
---
Predecessors: [0x9c]
Successors: [0x302]
---
0xa7 JUMPDEST
0xa8 PUSH2 0xaf
0xab PUSH2 0x302
0xae JUMP
---
0xa7: JUMPDEST 
0xa8: V51 = 0xaf
0xab: V52 = 0x302
0xae: JUMP 0x302
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xaf]
Exit stack: [V12, 0xaf]

================================

Block 0xaf
[0xaf:0xc0]
---
Predecessors: [0x305, 0x74c]
Successors: []
---
0xaf JUMPDEST
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 SWAP1
0xb4 DUP2
0xb5 MSTORE
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 PUSH1 0x40
0xbb MLOAD
0xbc DUP1
0xbd SWAP2
0xbe SUB
0xbf SWAP1
0xc0 RETURN
---
0xaf: JUMPDEST 
0xb0: V53 = 0x40
0xb2: V54 = M[0x40]
0xb5: M[V54] = S0
0xb6: V55 = 0x20
0xb8: V56 = ADD 0x20 V54
0xb9: V57 = 0x40
0xbb: V58 = M[0x40]
0xbe: V59 = SUB V56 V58
0xc0: RETURN V58 V59
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc1
[0xc1:0xc7]
---
Predecessors: [0x25]
Successors: [0xc8, 0xcc]
---
0xc1 JUMPDEST
0xc2 CALLVALUE
0xc3 ISZERO
0xc4 PUSH2 0xcc
0xc7 JUMPI
---
0xc1: JUMPDEST 
0xc2: V60 = CALLVALUE
0xc3: V61 = ISZERO V60
0xc4: V62 = 0xcc
0xc7: JUMPI 0xcc V61
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc8
[0xc8:0xcb]
---
Predecessors: [0xc1]
Successors: []
---
0xc8 PUSH1 0x0
0xca DUP1
0xcb REVERT
---
0xc8: V63 = 0x0
0xcb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0x308]
---
0xcc JUMPDEST
0xcd PUSH2 0x9a
0xd0 PUSH1 0x4
0xd2 CALLDATALOAD
0xd3 PUSH2 0x308
0xd6 JUMP
---
0xcc: JUMPDEST 
0xcd: V64 = 0x9a
0xd0: V65 = 0x4
0xd2: V66 = CALLDATALOAD 0x4
0xd3: V67 = 0x308
0xd6: JUMP 0x308
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a, V66]
Exit stack: [V12, 0x9a, V66]

================================

Block 0xd7
[0xd7:0xd8]
---
Predecessors: []
Successors: []
---
0xd7 JUMPDEST
0xd8 STOP
---
0xd7: JUMPDEST 
0xd8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd9
[0xd9:0xdf]
---
Predecessors: [0x30]
Successors: [0xe0, 0xe4]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0xd9: JUMPDEST 
0xda: V68 = CALLVALUE
0xdb: V69 = ISZERO V68
0xdc: V70 = 0xe4
0xdf: JUMPI 0xe4 V69
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0xd9]
Successors: []
---
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 REVERT
---
0xe0: V71 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe4
[0xe4:0xee]
---
Predecessors: [0xd9]
Successors: [0x380]
---
0xe4 JUMPDEST
0xe5 PUSH2 0x9a
0xe8 PUSH1 0x4
0xea CALLDATALOAD
0xeb PUSH2 0x380
0xee JUMP
---
0xe4: JUMPDEST 
0xe5: V72 = 0x9a
0xe8: V73 = 0x4
0xea: V74 = CALLDATALOAD 0x4
0xeb: V75 = 0x380
0xee: JUMP 0x380
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a, V74]
Exit stack: [V12, 0x9a, V74]

================================

Block 0xef
[0xef:0xf0]
---
Predecessors: []
Successors: []
---
0xef JUMPDEST
0xf0 STOP
---
0xef: JUMPDEST 
0xf0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0x3b]
Successors: [0xf8, 0xfc]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V76 = CALLVALUE
0xf3: V77 = ISZERO V76
0xf4: V78 = 0xfc
0xf7: JUMPI 0xfc V77
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V79 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0xf1]
Successors: [0x3d3]
---
0xfc JUMPDEST
0xfd PUSH2 0x9a
0x100 PUSH2 0x3d3
0x103 JUMP
---
0xfc: JUMPDEST 
0xfd: V80 = 0x9a
0x100: V81 = 0x3d3
0x103: JUMP 0x3d3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a]
Exit stack: [V12, 0x9a]

================================

Block 0x104
[0x104:0x105]
---
Predecessors: []
Successors: []
---
0x104 JUMPDEST
0x105 STOP
---
0x104: JUMPDEST 
0x105: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x106
[0x106:0x10c]
---
Predecessors: [0x46]
Successors: [0x10d, 0x111]
---
0x106 JUMPDEST
0x107 CALLVALUE
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x106: JUMPDEST 
0x107: V82 = CALLVALUE
0x108: V83 = ISZERO V82
0x109: V84 = 0x111
0x10c: JUMPI 0x111 V83
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x106]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V85 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x111
[0x111:0x152]
---
Predecessors: [0x106]
Successors: [0x3ff]
---
0x111 JUMPDEST
0x112 PUSH2 0x153
0x115 PUSH1 0x1
0x117 PUSH1 0xa0
0x119 PUSH1 0x2
0x11b EXP
0x11c SUB
0x11d PUSH1 0x4
0x11f CALLDATALOAD
0x120 DUP2
0x121 AND
0x122 SWAP1
0x123 PUSH1 0x24
0x125 CALLDATALOAD
0x126 SWAP1
0x127 PUSH1 0x44
0x129 CALLDATALOAD
0x12a DUP2
0x12b AND
0x12c SWAP1
0x12d PUSH1 0x64
0x12f CALLDATALOAD
0x130 SWAP1
0x131 PUSH1 0x84
0x133 CALLDATALOAD
0x134 SWAP1
0x135 PUSH1 0xa4
0x137 CALLDATALOAD
0x138 SWAP1
0x139 PUSH1 0xc4
0x13b CALLDATALOAD
0x13c AND
0x13d PUSH1 0xff
0x13f PUSH1 0xe4
0x141 CALLDATALOAD
0x142 AND
0x143 PUSH2 0x104
0x146 CALLDATALOAD
0x147 PUSH2 0x124
0x14a CALLDATALOAD
0x14b PUSH2 0x144
0x14e CALLDATALOAD
0x14f PUSH2 0x3ff
0x152 JUMP
---
0x111: JUMPDEST 
0x112: V86 = 0x153
0x115: V87 = 0x1
0x117: V88 = 0xa0
0x119: V89 = 0x2
0x11b: V90 = EXP 0x2 0xa0
0x11c: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V92 = 0x4
0x11f: V93 = CALLDATALOAD 0x4
0x121: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x123: V95 = 0x24
0x125: V96 = CALLDATALOAD 0x24
0x127: V97 = 0x44
0x129: V98 = CALLDATALOAD 0x44
0x12b: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x12d: V100 = 0x64
0x12f: V101 = CALLDATALOAD 0x64
0x131: V102 = 0x84
0x133: V103 = CALLDATALOAD 0x84
0x135: V104 = 0xa4
0x137: V105 = CALLDATALOAD 0xa4
0x139: V106 = 0xc4
0x13b: V107 = CALLDATALOAD 0xc4
0x13c: V108 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x13d: V109 = 0xff
0x13f: V110 = 0xe4
0x141: V111 = CALLDATALOAD 0xe4
0x142: V112 = AND V111 0xff
0x143: V113 = 0x104
0x146: V114 = CALLDATALOAD 0x104
0x147: V115 = 0x124
0x14a: V116 = CALLDATALOAD 0x124
0x14b: V117 = 0x144
0x14e: V118 = CALLDATALOAD 0x144
0x14f: V119 = 0x3ff
0x152: JUMP 0x3ff
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118]
Exit stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118]

================================

Block 0x153
[0x153:0x166]
---
Predecessors: [0x4d7]
Successors: []
---
0x153 JUMPDEST
0x154 PUSH1 0x40
0x156 MLOAD
0x157 SWAP1
0x158 ISZERO
0x159 ISZERO
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f PUSH1 0x40
0x161 MLOAD
0x162 DUP1
0x163 SWAP2
0x164 SUB
0x165 SWAP1
0x166 RETURN
---
0x153: JUMPDEST 
0x154: V120 = 0x40
0x156: V121 = M[0x40]
0x158: V122 = ISZERO V464
0x159: V123 = ISZERO V122
0x15b: M[V121] = V123
0x15c: V124 = 0x20
0x15e: V125 = ADD 0x20 V121
0x15f: V126 = 0x40
0x161: V127 = M[0x40]
0x164: V128 = SUB V125 V127
0x166: RETURN V127 V128
---
Entry stack: [V12, V464]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x167
[0x167:0x16d]
---
Predecessors: [0x51]
Successors: [0x16e, 0x172]
---
0x167 JUMPDEST
0x168 CALLVALUE
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0x167: JUMPDEST 
0x168: V129 = CALLVALUE
0x169: V130 = ISZERO V129
0x16a: V131 = 0x172
0x16d: JUMPI 0x172 V130
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x167]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V132 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x172
[0x172:0x1ac]
---
Predecessors: [0x167]
Successors: [0x4e7]
---
0x172 JUMPDEST
0x173 PUSH2 0x9a
0x176 PUSH1 0x1
0x178 PUSH1 0xa0
0x17a PUSH1 0x2
0x17c EXP
0x17d SUB
0x17e PUSH1 0x4
0x180 CALLDATALOAD
0x181 DUP2
0x182 AND
0x183 SWAP1
0x184 PUSH1 0x24
0x186 CALLDATALOAD
0x187 DUP2
0x188 AND
0x189 SWAP1
0x18a PUSH1 0x44
0x18c CALLDATALOAD
0x18d AND
0x18e PUSH1 0x64
0x190 CALLDATALOAD
0x191 PUSH1 0x84
0x193 CALLDATALOAD
0x194 PUSH1 0xa4
0x196 CALLDATALOAD
0x197 PUSH1 0xc4
0x199 CALLDATALOAD
0x19a PUSH1 0xe4
0x19c CALLDATALOAD
0x19d PUSH2 0x104
0x1a0 CALLDATALOAD
0x1a1 PUSH2 0x124
0x1a4 CALLDATALOAD
0x1a5 PUSH2 0x144
0x1a8 CALLDATALOAD
0x1a9 PUSH2 0x4e7
0x1ac JUMP
---
0x172: JUMPDEST 
0x173: V133 = 0x9a
0x176: V134 = 0x1
0x178: V135 = 0xa0
0x17a: V136 = 0x2
0x17c: V137 = EXP 0x2 0xa0
0x17d: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17e: V139 = 0x4
0x180: V140 = CALLDATALOAD 0x4
0x182: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x184: V142 = 0x24
0x186: V143 = CALLDATALOAD 0x24
0x188: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x18a: V145 = 0x44
0x18c: V146 = CALLDATALOAD 0x44
0x18d: V147 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V148 = 0x64
0x190: V149 = CALLDATALOAD 0x64
0x191: V150 = 0x84
0x193: V151 = CALLDATALOAD 0x84
0x194: V152 = 0xa4
0x196: V153 = CALLDATALOAD 0xa4
0x197: V154 = 0xc4
0x199: V155 = CALLDATALOAD 0xc4
0x19a: V156 = 0xe4
0x19c: V157 = CALLDATALOAD 0xe4
0x19d: V158 = 0x104
0x1a0: V159 = CALLDATALOAD 0x104
0x1a1: V160 = 0x124
0x1a4: V161 = CALLDATALOAD 0x124
0x1a5: V162 = 0x144
0x1a8: V163 = CALLDATALOAD 0x144
0x1a9: V164 = 0x4e7
0x1ac: JUMP 0x4e7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, V161, V163]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, V161, V163]

================================

Block 0x1ad
[0x1ad:0x1ae]
---
Predecessors: []
Successors: []
---
0x1ad JUMPDEST
0x1ae STOP
---
0x1ad: JUMPDEST 
0x1ae: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1af
[0x1af:0x1b5]
---
Predecessors: [0x5c]
Successors: [0x1b6, 0x1ba]
---
0x1af JUMPDEST
0x1b0 CALLVALUE
0x1b1 ISZERO
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x1af: JUMPDEST 
0x1b0: V165 = CALLVALUE
0x1b1: V166 = ISZERO V165
0x1b2: V167 = 0x1ba
0x1b5: JUMPI 0x1ba V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x1af]
Successors: []
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 REVERT
---
0x1b6: V168 = 0x0
0x1b9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ba
[0x1ba:0x1cd]
---
Predecessors: [0x1af]
Successors: [0x6cb]
---
0x1ba JUMPDEST
0x1bb PUSH2 0xaf
0x1be PUSH1 0x1
0x1c0 PUSH1 0xa0
0x1c2 PUSH1 0x2
0x1c4 EXP
0x1c5 SUB
0x1c6 PUSH1 0x4
0x1c8 CALLDATALOAD
0x1c9 AND
0x1ca PUSH2 0x6cb
0x1cd JUMP
---
0x1ba: JUMPDEST 
0x1bb: V169 = 0xaf
0x1be: V170 = 0x1
0x1c0: V171 = 0xa0
0x1c2: V172 = 0x2
0x1c4: V173 = EXP 0x2 0xa0
0x1c5: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c6: V175 = 0x4
0x1c8: V176 = CALLDATALOAD 0x4
0x1c9: V177 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V178 = 0x6cb
0x1cd: JUMP 0x6cb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xaf, V177]
Exit stack: [V12, 0xaf, V177]

================================

Block 0x1ce
[0x1ce:0x1df]
---
Predecessors: []
Successors: []
---
0x1ce JUMPDEST
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 SWAP1
0x1d3 DUP2
0x1d4 MSTORE
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db DUP1
0x1dc SWAP2
0x1dd SUB
0x1de SWAP1
0x1df RETURN
---
0x1ce: JUMPDEST 
0x1cf: V179 = 0x40
0x1d1: V180 = M[0x40]
0x1d4: M[V180] = S0
0x1d5: V181 = 0x20
0x1d7: V182 = ADD 0x20 V180
0x1d8: V183 = 0x40
0x1da: V184 = M[0x40]
0x1dd: V185 = SUB V182 V184
0x1df: RETURN V184 V185
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e0
[0x1e0:0x1e6]
---
Predecessors: [0x67]
Successors: [0x1e7, 0x1eb]
---
0x1e0 JUMPDEST
0x1e1 CALLVALUE
0x1e2 ISZERO
0x1e3 PUSH2 0x1eb
0x1e6 JUMPI
---
0x1e0: JUMPDEST 
0x1e1: V186 = CALLVALUE
0x1e2: V187 = ISZERO V186
0x1e3: V188 = 0x1eb
0x1e6: JUMPI 0x1eb V187
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e7
[0x1e7:0x1ea]
---
Predecessors: [0x1e0]
Successors: []
---
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea REVERT
---
0x1e7: V189 = 0x0
0x1ea: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1eb
[0x1eb:0x1f2]
---
Predecessors: [0x1e0]
Successors: [0x752]
---
0x1eb JUMPDEST
0x1ec PUSH2 0x1f3
0x1ef PUSH2 0x752
0x1f2 JUMP
---
0x1eb: JUMPDEST 
0x1ec: V190 = 0x1f3
0x1ef: V191 = 0x752
0x1f2: JUMP 0x752
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f3]
Exit stack: [V12, 0x1f3]

================================

Block 0x1f3
[0x1f3:0x20e]
---
Predecessors: [0x752]
Successors: []
---
0x1f3 JUMPDEST
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 PUSH1 0x1
0x1f9 PUSH1 0xa0
0x1fb PUSH1 0x2
0x1fd EXP
0x1fe SUB
0x1ff SWAP1
0x200 SWAP2
0x201 AND
0x202 DUP2
0x203 MSTORE
0x204 PUSH1 0x20
0x206 ADD
0x207 PUSH1 0x40
0x209 MLOAD
0x20a DUP1
0x20b SWAP2
0x20c SUB
0x20d SWAP1
0x20e RETURN
---
0x1f3: JUMPDEST 
0x1f4: V192 = 0x40
0x1f6: V193 = M[0x40]
0x1f7: V194 = 0x1
0x1f9: V195 = 0xa0
0x1fb: V196 = 0x2
0x1fd: V197 = EXP 0x2 0xa0
0x1fe: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x201: V199 = AND V695 0xffffffffffffffffffffffffffffffffffffffff
0x203: M[V193] = V199
0x204: V200 = 0x20
0x206: V201 = ADD 0x20 V193
0x207: V202 = 0x40
0x209: V203 = M[0x40]
0x20c: V204 = SUB V201 V203
0x20e: RETURN V203 V204
---
Entry stack: [V12, 0x1f3, V695]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1f3]

================================

Block 0x20f
[0x20f:0x215]
---
Predecessors: [0x72]
Successors: [0x216, 0x21a]
---
0x20f JUMPDEST
0x210 CALLVALUE
0x211 ISZERO
0x212 PUSH2 0x21a
0x215 JUMPI
---
0x20f: JUMPDEST 
0x210: V205 = CALLVALUE
0x211: V206 = ISZERO V205
0x212: V207 = 0x21a
0x215: JUMPI 0x21a V206
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x216
[0x216:0x219]
---
Predecessors: [0x20f]
Successors: []
---
0x216 PUSH1 0x0
0x218 DUP1
0x219 REVERT
---
0x216: V208 = 0x0
0x219: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21a
[0x21a:0x2dd]
---
Predecessors: [0x20f]
Successors: [0x761]
---
0x21a JUMPDEST
0x21b PUSH2 0x9a
0x21e PUSH1 0x4
0x220 PUSH1 0x24
0x222 DUP2
0x223 CALLDATALOAD
0x224 DUP2
0x225 DUP2
0x226 ADD
0x227 SWAP1
0x228 DUP4
0x229 ADD
0x22a CALLDATALOAD
0x22b DUP1
0x22c PUSH1 0x20
0x22e DUP2
0x22f DUP2
0x230 MUL
0x231 ADD
0x232 PUSH1 0x40
0x234 MLOAD
0x235 SWAP1
0x236 DUP2
0x237 ADD
0x238 PUSH1 0x40
0x23a MSTORE
0x23b DUP1
0x23c SWAP4
0x23d SWAP3
0x23e SWAP2
0x23f SWAP1
0x240 DUP2
0x241 DUP2
0x242 MSTORE
0x243 PUSH1 0x20
0x245 ADD
0x246 DUP4
0x247 DUP4
0x248 PUSH1 0x20
0x24a MUL
0x24b DUP1
0x24c DUP3
0x24d DUP5
0x24e CALLDATACOPY
0x24f DUP3
0x250 ADD
0x251 SWAP2
0x252 POP
0x253 POP
0x254 POP
0x255 POP
0x256 POP
0x257 POP
0x258 SWAP2
0x259 SWAP1
0x25a DUP1
0x25b CALLDATALOAD
0x25c SWAP1
0x25d PUSH1 0x20
0x25f ADD
0x260 SWAP1
0x261 DUP3
0x262 ADD
0x263 DUP1
0x264 CALLDATALOAD
0x265 SWAP1
0x266 PUSH1 0x20
0x268 ADD
0x269 SWAP1
0x26a DUP1
0x26b DUP1
0x26c PUSH1 0x20
0x26e MUL
0x26f PUSH1 0x20
0x271 ADD
0x272 PUSH1 0x40
0x274 MLOAD
0x275 SWAP1
0x276 DUP2
0x277 ADD
0x278 PUSH1 0x40
0x27a MSTORE
0x27b DUP1
0x27c SWAP4
0x27d SWAP3
0x27e SWAP2
0x27f SWAP1
0x280 DUP2
0x281 DUP2
0x282 MSTORE
0x283 PUSH1 0x20
0x285 ADD
0x286 DUP4
0x287 DUP4
0x288 PUSH1 0x20
0x28a MUL
0x28b DUP1
0x28c DUP3
0x28d DUP5
0x28e CALLDATACOPY
0x28f DUP3
0x290 ADD
0x291 SWAP2
0x292 POP
0x293 POP
0x294 POP
0x295 POP
0x296 POP
0x297 POP
0x298 SWAP2
0x299 SWAP1
0x29a DUP1
0x29b CALLDATALOAD
0x29c SWAP1
0x29d PUSH1 0x20
0x29f ADD
0x2a0 SWAP1
0x2a1 DUP3
0x2a2 ADD
0x2a3 DUP1
0x2a4 CALLDATALOAD
0x2a5 SWAP1
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 SWAP1
0x2aa DUP1
0x2ab DUP1
0x2ac PUSH1 0x20
0x2ae MUL
0x2af PUSH1 0x20
0x2b1 ADD
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 SWAP1
0x2b6 DUP2
0x2b7 ADD
0x2b8 PUSH1 0x40
0x2ba MSTORE
0x2bb DUP1
0x2bc SWAP4
0x2bd SWAP3
0x2be SWAP2
0x2bf SWAP1
0x2c0 DUP2
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 DUP4
0x2c7 DUP4
0x2c8 PUSH1 0x20
0x2ca MUL
0x2cb DUP1
0x2cc DUP3
0x2cd DUP5
0x2ce CALLDATACOPY
0x2cf POP
0x2d0 SWAP5
0x2d1 SWAP7
0x2d2 POP
0x2d3 PUSH2 0x761
0x2d6 SWAP6
0x2d7 POP
0x2d8 POP
0x2d9 POP
0x2da POP
0x2db POP
0x2dc POP
0x2dd JUMP
---
0x21a: JUMPDEST 
0x21b: V209 = 0x9a
0x21e: V210 = 0x4
0x220: V211 = 0x24
0x223: V212 = CALLDATALOAD 0x4
0x226: V213 = ADD V212 0x24
0x229: V214 = ADD 0x4 V212
0x22a: V215 = CALLDATALOAD V214
0x22c: V216 = 0x20
0x230: V217 = MUL 0x20 V215
0x231: V218 = ADD V217 0x20
0x232: V219 = 0x40
0x234: V220 = M[0x40]
0x237: V221 = ADD V220 V218
0x238: V222 = 0x40
0x23a: M[0x40] = V221
0x242: M[V220] = V215
0x243: V223 = 0x20
0x245: V224 = ADD 0x20 V220
0x248: V225 = 0x20
0x24a: V226 = MUL 0x20 V215
0x24e: CALLDATACOPY V224 V213 V226
0x250: V227 = ADD V224 V226
0x25b: V228 = CALLDATALOAD 0x24
0x25d: V229 = 0x20
0x25f: V230 = ADD 0x20 0x24
0x262: V231 = ADD 0x4 V228
0x264: V232 = CALLDATALOAD V231
0x266: V233 = 0x20
0x268: V234 = ADD 0x20 V231
0x26c: V235 = 0x20
0x26e: V236 = MUL 0x20 V232
0x26f: V237 = 0x20
0x271: V238 = ADD 0x20 V236
0x272: V239 = 0x40
0x274: V240 = M[0x40]
0x277: V241 = ADD V240 V238
0x278: V242 = 0x40
0x27a: M[0x40] = V241
0x282: M[V240] = V232
0x283: V243 = 0x20
0x285: V244 = ADD 0x20 V240
0x288: V245 = 0x20
0x28a: V246 = MUL 0x20 V232
0x28e: CALLDATACOPY V244 V234 V246
0x290: V247 = ADD V244 V246
0x29b: V248 = CALLDATALOAD 0x44
0x29d: V249 = 0x20
0x29f: V250 = ADD 0x20 0x44
0x2a2: V251 = ADD 0x4 V248
0x2a4: V252 = CALLDATALOAD V251
0x2a6: V253 = 0x20
0x2a8: V254 = ADD 0x20 V251
0x2ac: V255 = 0x20
0x2ae: V256 = MUL 0x20 V252
0x2af: V257 = 0x20
0x2b1: V258 = ADD 0x20 V256
0x2b2: V259 = 0x40
0x2b4: V260 = M[0x40]
0x2b7: V261 = ADD V260 V258
0x2b8: V262 = 0x40
0x2ba: M[0x40] = V261
0x2c2: M[V260] = V252
0x2c3: V263 = 0x20
0x2c5: V264 = ADD 0x20 V260
0x2c8: V265 = 0x20
0x2ca: V266 = MUL 0x20 V252
0x2ce: CALLDATACOPY V264 V254 V266
0x2d3: V267 = 0x761
0x2dd: JUMP 0x761
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a, V220, V240, V260]
Exit stack: [V12, 0x9a, V220, V240, V260]

================================

Block 0x2de
[0x2de:0x2df]
---
Predecessors: []
Successors: []
---
0x2de JUMPDEST
0x2df STOP
---
0x2de: JUMPDEST 
0x2df: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2e0
[0x2e0:0x2e7]
---
Predecessors: [0x7d]
Successors: [0x97]
---
0x2e0 JUMPDEST
0x2e1 PUSH2 0x9a
0x2e4 PUSH2 0x97
0x2e7 JUMP
---
0x2e0: JUMPDEST 
0x2e1: V268 = 0x9a
0x2e4: V269 = 0x97
0x2e7: JUMP 0x97
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a]
Exit stack: [V12, 0x9a]

================================

Block 0x2e8
[0x2e8:0x2e9]
---
Predecessors: []
Successors: []
---
0x2e8 JUMPDEST
0x2e9 STOP
---
0x2e8: JUMPDEST 
0x2e9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ea
[0x2ea:0x2f0]
---
Predecessors: [0x88]
Successors: [0x2f1, 0x2f5]
---
0x2ea JUMPDEST
0x2eb CALLVALUE
0x2ec ISZERO
0x2ed PUSH2 0x2f5
0x2f0 JUMPI
---
0x2ea: JUMPDEST 
0x2eb: V270 = CALLVALUE
0x2ec: V271 = ISZERO V270
0x2ed: V272 = 0x2f5
0x2f0: JUMPI 0x2f5 V271
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f1
[0x2f1:0x2f4]
---
Predecessors: [0x2ea]
Successors: []
---
0x2f1 PUSH1 0x0
0x2f3 DUP1
0x2f4 REVERT
---
0x2f1: V273 = 0x0
0x2f4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f5
[0x2f5:0x2ff]
---
Predecessors: [0x2ea]
Successors: [0x7be]
---
0x2f5 JUMPDEST
0x2f6 PUSH2 0x9a
0x2f9 PUSH1 0x4
0x2fb CALLDATALOAD
0x2fc PUSH2 0x7be
0x2ff JUMP
---
0x2f5: JUMPDEST 
0x2f6: V274 = 0x9a
0x2f9: V275 = 0x4
0x2fb: V276 = CALLDATALOAD 0x4
0x2fc: V277 = 0x7be
0x2ff: JUMP 0x7be
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a, V276]
Exit stack: [V12, 0x9a, V276]

================================

Block 0x300
[0x300:0x301]
---
Predecessors: []
Successors: []
---
0x300 JUMPDEST
0x301 STOP
---
0x300: JUMPDEST 
0x301: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x302
[0x302:0x304]
---
Predecessors: [0xa7]
Successors: [0x305]
---
0x302 JUMPDEST
0x303 PUSH1 0x1
---
0x302: JUMPDEST 
0x303: V278 = 0x1
---
Entry stack: [V12, 0xaf]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0xaf, 0x1]

================================

Block 0x305
[0x305:0x307]
---
Predecessors: [0x302]
Successors: [0xaf]
---
0x305 JUMPDEST
0x306 SWAP1
0x307 JUMP
---
0x305: JUMPDEST 
0x307: JUMP 0xaf
---
Entry stack: [V12, 0xaf, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x308
[0x308:0x31f]
---
Predecessors: [0xcc]
Successors: [0x320, 0x324]
---
0x308 JUMPDEST
0x309 PUSH1 0x0
0x30b DUP1
0x30c SLOAD
0x30d CALLER
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 SWAP1
0x317 DUP2
0x318 AND
0x319 SWAP2
0x31a AND
0x31b EQ
0x31c PUSH2 0x324
0x31f JUMPI
---
0x308: JUMPDEST 
0x309: V279 = 0x0
0x30c: V280 = S[0x0]
0x30d: V281 = CALLER
0x30e: V282 = 0x1
0x310: V283 = 0xa0
0x312: V284 = 0x2
0x314: V285 = EXP 0x2 0xa0
0x315: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x318: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x31a: V288 = AND V280 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V289 = EQ V288 V287
0x31c: V290 = 0x324
0x31f: JUMPI 0x324 V289
---
Entry stack: [V12, 0x9a, V66]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x9a, V66, 0x0]

================================

Block 0x320
[0x320:0x323]
---
Predecessors: [0x308]
Successors: []
---
0x320 PUSH1 0x0
0x322 DUP1
0x323 REVERT
---
0x320: V291 = 0x0
0x323: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V66, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V66, 0x0]

================================

Block 0x324
[0x324:0x360]
---
Predecessors: [0x308]
Successors: [0x361, 0x365]
---
0x324 JUMPDEST
0x325 POP
0x326 PUSH1 0x1
0x328 SLOAD
0x329 PUSH1 0x1
0x32b PUSH1 0xa0
0x32d PUSH1 0x2
0x32f EXP
0x330 SUB
0x331 AND
0x332 DUP1
0x333 PUSH4 0xd0e30db0
0x338 DUP4
0x339 PUSH1 0x40
0x33b MLOAD
0x33c DUP3
0x33d PUSH4 0xffffffff
0x342 AND
0x343 PUSH1 0xe0
0x345 PUSH1 0x2
0x347 EXP
0x348 MUL
0x349 DUP2
0x34a MSTORE
0x34b PUSH1 0x4
0x34d ADD
0x34e PUSH1 0x0
0x350 PUSH1 0x40
0x352 MLOAD
0x353 DUP1
0x354 DUP4
0x355 SUB
0x356 DUP2
0x357 DUP6
0x358 DUP9
0x359 DUP1
0x35a EXTCODESIZE
0x35b ISZERO
0x35c ISZERO
0x35d PUSH2 0x365
0x360 JUMPI
---
0x324: JUMPDEST 
0x326: V292 = 0x1
0x328: V293 = S[0x1]
0x329: V294 = 0x1
0x32b: V295 = 0xa0
0x32d: V296 = 0x2
0x32f: V297 = EXP 0x2 0xa0
0x330: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x331: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x333: V300 = 0xd0e30db0
0x339: V301 = 0x40
0x33b: V302 = M[0x40]
0x33d: V303 = 0xffffffff
0x342: V304 = AND 0xffffffff 0xd0e30db0
0x343: V305 = 0xe0
0x345: V306 = 0x2
0x347: V307 = EXP 0x2 0xe0
0x348: V308 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x34a: M[V302] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x34b: V309 = 0x4
0x34d: V310 = ADD 0x4 V302
0x34e: V311 = 0x0
0x350: V312 = 0x40
0x352: V313 = M[0x40]
0x355: V314 = SUB V310 V313
0x35a: V315 = EXTCODESIZE V299
0x35b: V316 = ISZERO V315
0x35c: V317 = ISZERO V316
0x35d: V318 = 0x365
0x360: JUMPI 0x365 V317
---
Entry stack: [V12, 0x9a, V66, 0x0]
Stack pops: 2
Stack additions: [S1, V299, V299, 0xd0e30db0, S1, V310, 0x0, V313, V314, V313, S1, V299]
Exit stack: [V12, 0x9a, V66, V299, V299, 0xd0e30db0, V66, V310, 0x0, V313, V314, V313, V66, V299]

================================

Block 0x361
[0x361:0x364]
---
Predecessors: [0x324]
Successors: []
---
0x361 PUSH1 0x0
0x363 DUP1
0x364 REVERT
---
0x361: V319 = 0x0
0x364: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V66, V299, V299, 0xd0e30db0, V66, V310, 0x0, V313, V314, V313, V66, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V66, V299, V299, 0xd0e30db0, V66, V310, 0x0, V313, V314, V313, V66, V299]

================================

Block 0x365
[0x365:0x371]
---
Predecessors: [0x324]
Successors: [0x372, 0x376]
---
0x365 JUMPDEST
0x366 PUSH2 0x25ee
0x369 GAS
0x36a SUB
0x36b CALL
0x36c ISZERO
0x36d ISZERO
0x36e PUSH2 0x376
0x371 JUMPI
---
0x365: JUMPDEST 
0x366: V320 = 0x25ee
0x369: V321 = GAS
0x36a: V322 = SUB V321 0x25ee
0x36b: V323 = CALL V322 V299 V66 V313 V314 V313 0x0
0x36c: V324 = ISZERO V323
0x36d: V325 = ISZERO V324
0x36e: V326 = 0x376
0x371: JUMPI 0x376 V325
---
Entry stack: [V12, 0x9a, V66, V299, V299, 0xd0e30db0, V66, V310, 0x0, V313, V314, V313, V66, V299]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x9a, V66, V299, V299, 0xd0e30db0, V66, V310]

================================

Block 0x372
[0x372:0x375]
---
Predecessors: [0x365]
Successors: []
---
0x372 PUSH1 0x0
0x374 DUP1
0x375 REVERT
---
0x372: V327 = 0x0
0x375: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V66, V299, V299, 0xd0e30db0, V66, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V66, V299, V299, 0xd0e30db0, V66, V310]

================================

Block 0x376
[0x376:0x37a]
---
Predecessors: [0x365]
Successors: [0x37b]
---
0x376 JUMPDEST
0x377 POP
0x378 POP
0x379 POP
0x37a POP
---
0x376: JUMPDEST 
---
Entry stack: [V12, 0x9a, V66, V299, V299, 0xd0e30db0, V66, V310]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x9a, V66, V299]

================================

Block 0x37b
[0x37b:0x37b]
---
Predecessors: [0x376]
Successors: [0x37c]
---
0x37b JUMPDEST
---
0x37b: JUMPDEST 
---
Entry stack: [V12, 0x9a, V66, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V66, V299]

================================

Block 0x37c
[0x37c:0x37f]
---
Predecessors: [0x37b]
Successors: [0x9a]
---
0x37c JUMPDEST
0x37d POP
0x37e POP
0x37f JUMP
---
0x37c: JUMPDEST 
0x37f: JUMP 0x9a
---
Entry stack: [V12, 0x9a, V66, V299]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x380
[0x380:0x396]
---
Predecessors: [0xe4]
Successors: [0x397, 0x39b]
---
0x380 JUMPDEST
0x381 PUSH1 0x0
0x383 SLOAD
0x384 CALLER
0x385 PUSH1 0x1
0x387 PUSH1 0xa0
0x389 PUSH1 0x2
0x38b EXP
0x38c SUB
0x38d SWAP1
0x38e DUP2
0x38f AND
0x390 SWAP2
0x391 AND
0x392 EQ
0x393 PUSH2 0x39b
0x396 JUMPI
---
0x380: JUMPDEST 
0x381: V328 = 0x0
0x383: V329 = S[0x0]
0x384: V330 = CALLER
0x385: V331 = 0x1
0x387: V332 = 0xa0
0x389: V333 = 0x2
0x38b: V334 = EXP 0x2 0xa0
0x38c: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38f: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x391: V337 = AND V329 0xffffffffffffffffffffffffffffffffffffffff
0x392: V338 = EQ V337 V336
0x393: V339 = 0x39b
0x396: JUMPI 0x39b V338
---
Entry stack: [V12, 0x9a, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V74]

================================

Block 0x397
[0x397:0x39a]
---
Predecessors: [0x380]
Successors: []
---
0x397 PUSH1 0x0
0x399 DUP1
0x39a REVERT
---
0x397: V340 = 0x0
0x39a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V74]

================================

Block 0x39b
[0x39b:0x3c9]
---
Predecessors: [0x380]
Successors: [0x3ca, 0x3ce]
---
0x39b JUMPDEST
0x39c PUSH1 0x0
0x39e SLOAD
0x39f PUSH1 0x1
0x3a1 PUSH1 0xa0
0x3a3 PUSH1 0x2
0x3a5 EXP
0x3a6 SUB
0x3a7 AND
0x3a8 DUP2
0x3a9 ISZERO
0x3aa PUSH2 0x8fc
0x3ad MUL
0x3ae DUP3
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 PUSH1 0x0
0x3b4 PUSH1 0x40
0x3b6 MLOAD
0x3b7 DUP1
0x3b8 DUP4
0x3b9 SUB
0x3ba DUP2
0x3bb DUP6
0x3bc DUP9
0x3bd DUP9
0x3be CALL
0x3bf SWAP4
0x3c0 POP
0x3c1 POP
0x3c2 POP
0x3c3 POP
0x3c4 ISZERO
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x39b: JUMPDEST 
0x39c: V341 = 0x0
0x39e: V342 = S[0x0]
0x39f: V343 = 0x1
0x3a1: V344 = 0xa0
0x3a3: V345 = 0x2
0x3a5: V346 = EXP 0x2 0xa0
0x3a6: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x3a9: V349 = ISZERO V74
0x3aa: V350 = 0x8fc
0x3ad: V351 = MUL 0x8fc V349
0x3af: V352 = 0x40
0x3b1: V353 = M[0x40]
0x3b2: V354 = 0x0
0x3b4: V355 = 0x40
0x3b6: V356 = M[0x40]
0x3b9: V357 = SUB V353 V356
0x3be: V358 = CALL V351 V348 V74 V356 V357 V356 0x0
0x3c4: V359 = ISZERO V358
0x3c5: V360 = ISZERO V359
0x3c6: V361 = 0x3ce
0x3c9: JUMPI 0x3ce V360
---
Entry stack: [V12, 0x9a, V74]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V74]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x39b]
Successors: []
---
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd REVERT
---
0x3ca: V362 = 0x0
0x3cd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V74]

================================

Block 0x3ce
[0x3ce:0x3ce]
---
Predecessors: [0x39b]
Successors: [0x3cf]
---
0x3ce JUMPDEST
---
0x3ce: JUMPDEST 
---
Entry stack: [V12, 0x9a, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V74]

================================

Block 0x3cf
[0x3cf:0x3cf]
---
Predecessors: [0x3ce]
Successors: [0x3d0]
---
0x3cf JUMPDEST
---
0x3cf: JUMPDEST 
---
Entry stack: [V12, 0x9a, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V74]

================================

Block 0x3d0
[0x3d0:0x3d2]
---
Predecessors: [0x3cf]
Successors: [0x9a]
---
0x3d0 JUMPDEST
0x3d1 POP
0x3d2 JUMP
---
0x3d0: JUMPDEST 
0x3d2: JUMP 0x9a
---
Entry stack: [V12, 0x9a, V74]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d3
[0x3d3:0x3e9]
---
Predecessors: [0xfc]
Successors: [0x3ea, 0x3ee]
---
0x3d3 JUMPDEST
0x3d4 PUSH1 0x0
0x3d6 SLOAD
0x3d7 CALLER
0x3d8 PUSH1 0x1
0x3da PUSH1 0xa0
0x3dc PUSH1 0x2
0x3de EXP
0x3df SUB
0x3e0 SWAP1
0x3e1 DUP2
0x3e2 AND
0x3e3 SWAP2
0x3e4 AND
0x3e5 EQ
0x3e6 PUSH2 0x3ee
0x3e9 JUMPI
---
0x3d3: JUMPDEST 
0x3d4: V363 = 0x0
0x3d6: V364 = S[0x0]
0x3d7: V365 = CALLER
0x3d8: V366 = 0x1
0x3da: V367 = 0xa0
0x3dc: V368 = 0x2
0x3de: V369 = EXP 0x2 0xa0
0x3df: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e2: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x3e4: V372 = AND V364 0xffffffffffffffffffffffffffffffffffffffff
0x3e5: V373 = EQ V372 V371
0x3e6: V374 = 0x3ee
0x3e9: JUMPI 0x3ee V373
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x3ea
[0x3ea:0x3ed]
---
Predecessors: [0x3d3]
Successors: []
---
0x3ea PUSH1 0x0
0x3ec DUP1
0x3ed REVERT
---
0x3ea: V375 = 0x0
0x3ed: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x3ee
[0x3ee:0x3fb]
---
Predecessors: [0x3d3]
Successors: []
---
0x3ee JUMPDEST
0x3ef PUSH1 0x0
0x3f1 SLOAD
0x3f2 PUSH1 0x1
0x3f4 PUSH1 0xa0
0x3f6 PUSH1 0x2
0x3f8 EXP
0x3f9 SUB
0x3fa AND
0x3fb SELFDESTRUCT
---
0x3ee: JUMPDEST 
0x3ef: V376 = 0x0
0x3f1: V377 = S[0x0]
0x3f2: V378 = 0x1
0x3f4: V379 = 0xa0
0x3f6: V380 = 0x2
0x3f8: V381 = EXP 0x2 0xa0
0x3f9: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fa: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x3fb: SELFDESTRUCT V383
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x3fc
[0x3fc:0x3fc]
---
Predecessors: []
Successors: [0x3fd]
---
0x3fc JUMPDEST
---
0x3fc: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3fd
[0x3fd:0x3fe]
---
Predecessors: [0x3fc]
Successors: []
Has unresolved jump.
---
0x3fd JUMPDEST
0x3fe JUMP
---
0x3fd: JUMPDEST 
0x3fe: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3ff
[0x3ff:0x4b5]
---
Predecessors: [0x111]
Successors: [0x4b6, 0x4ba]
---
0x3ff JUMPDEST
0x400 PUSH1 0x1
0x402 SLOAD
0x403 PUSH1 0x0
0x405 SWAP1
0x406 PUSH1 0x1
0x408 PUSH1 0xa0
0x40a PUSH1 0x2
0x40c EXP
0x40d SUB
0x40e AND
0x40f DUP1
0x410 PUSH4 0x6c86888b
0x415 DUP15
0x416 DUP15
0x417 DUP15
0x418 DUP15
0x419 DUP15
0x41a DUP15
0x41b DUP15
0x41c DUP15
0x41d DUP15
0x41e DUP15
0x41f DUP15
0x420 ADDRESS
0x421 DUP16
0x422 PUSH1 0x40
0x424 MLOAD
0x425 PUSH1 0x20
0x427 ADD
0x428 MSTORE
0x429 PUSH1 0x40
0x42b MLOAD
0x42c PUSH1 0xe0
0x42e PUSH1 0x2
0x430 EXP
0x431 PUSH4 0xffffffff
0x436 DUP16
0x437 AND
0x438 MUL
0x439 DUP2
0x43a MSTORE
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 SWAP13
0x444 DUP14
0x445 AND
0x446 PUSH1 0x4
0x448 DUP3
0x449 ADD
0x44a MSTORE
0x44b PUSH1 0x24
0x44d DUP2
0x44e ADD
0x44f SWAP12
0x450 SWAP1
0x451 SWAP12
0x452 MSTORE
0x453 SWAP9
0x454 DUP12
0x455 AND
0x456 PUSH1 0x44
0x458 DUP12
0x459 ADD
0x45a MSTORE
0x45b PUSH1 0x64
0x45d DUP11
0x45e ADD
0x45f SWAP8
0x460 SWAP1
0x461 SWAP8
0x462 MSTORE
0x463 PUSH1 0x84
0x465 DUP10
0x466 ADD
0x467 SWAP6
0x468 SWAP1
0x469 SWAP6
0x46a MSTORE
0x46b PUSH1 0xa4
0x46d DUP9
0x46e ADD
0x46f SWAP4
0x470 SWAP1
0x471 SWAP4
0x472 MSTORE
0x473 SWAP1
0x474 DUP8
0x475 AND
0x476 PUSH1 0xc4
0x478 DUP8
0x479 ADD
0x47a MSTORE
0x47b PUSH1 0xff
0x47d AND
0x47e PUSH1 0xe4
0x480 DUP7
0x481 ADD
0x482 MSTORE
0x483 PUSH2 0x104
0x486 DUP6
0x487 ADD
0x488 MSTORE
0x489 PUSH2 0x124
0x48c DUP5
0x48d ADD
0x48e MSTORE
0x48f PUSH2 0x144
0x492 DUP4
0x493 ADD
0x494 MSTORE
0x495 SWAP1
0x496 SWAP2
0x497 AND
0x498 PUSH2 0x164
0x49b DUP3
0x49c ADD
0x49d MSTORE
0x49e PUSH2 0x184
0x4a1 ADD
0x4a2 PUSH1 0x20
0x4a4 PUSH1 0x40
0x4a6 MLOAD
0x4a7 DUP1
0x4a8 DUP4
0x4a9 SUB
0x4aa DUP2
0x4ab PUSH1 0x0
0x4ad DUP8
0x4ae DUP1
0x4af EXTCODESIZE
0x4b0 ISZERO
0x4b1 ISZERO
0x4b2 PUSH2 0x4ba
0x4b5 JUMPI
---
0x3ff: JUMPDEST 
0x400: V384 = 0x1
0x402: V385 = S[0x1]
0x403: V386 = 0x0
0x406: V387 = 0x1
0x408: V388 = 0xa0
0x40a: V389 = 0x2
0x40c: V390 = EXP 0x2 0xa0
0x40d: V391 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40e: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x410: V393 = 0x6c86888b
0x420: V394 = ADDRESS
0x422: V395 = 0x40
0x424: V396 = M[0x40]
0x425: V397 = 0x20
0x427: V398 = ADD 0x20 V396
0x428: M[V398] = 0x0
0x429: V399 = 0x40
0x42b: V400 = M[0x40]
0x42c: V401 = 0xe0
0x42e: V402 = 0x2
0x430: V403 = EXP 0x2 0xe0
0x431: V404 = 0xffffffff
0x437: V405 = AND 0x6c86888b 0xffffffff
0x438: V406 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x43a: M[V400] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x43b: V407 = 0x1
0x43d: V408 = 0xa0
0x43f: V409 = 0x2
0x441: V410 = EXP 0x2 0xa0
0x442: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x445: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x446: V413 = 0x4
0x449: V414 = ADD V400 0x4
0x44a: M[V414] = V412
0x44b: V415 = 0x24
0x44e: V416 = ADD V400 0x24
0x452: M[V416] = V96
0x455: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x456: V418 = 0x44
0x459: V419 = ADD V400 0x44
0x45a: M[V419] = V417
0x45b: V420 = 0x64
0x45e: V421 = ADD V400 0x64
0x462: M[V421] = V101
0x463: V422 = 0x84
0x466: V423 = ADD V400 0x84
0x46a: M[V423] = V103
0x46b: V424 = 0xa4
0x46e: V425 = ADD V400 0xa4
0x472: M[V425] = V105
0x475: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x476: V427 = 0xc4
0x479: V428 = ADD V400 0xc4
0x47a: M[V428] = V426
0x47b: V429 = 0xff
0x47d: V430 = AND 0xff V112
0x47e: V431 = 0xe4
0x481: V432 = ADD V400 0xe4
0x482: M[V432] = V430
0x483: V433 = 0x104
0x487: V434 = ADD V400 0x104
0x488: M[V434] = V114
0x489: V435 = 0x124
0x48d: V436 = ADD V400 0x124
0x48e: M[V436] = V116
0x48f: V437 = 0x144
0x493: V438 = ADD V400 0x144
0x494: M[V438] = V118
0x497: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x498: V440 = 0x164
0x49c: V441 = ADD V400 0x164
0x49d: M[V441] = V439
0x49e: V442 = 0x184
0x4a1: V443 = ADD 0x184 V400
0x4a2: V444 = 0x20
0x4a4: V445 = 0x40
0x4a6: V446 = M[0x40]
0x4a9: V447 = SUB V443 V446
0x4ab: V448 = 0x0
0x4af: V449 = EXTCODESIZE V392
0x4b0: V450 = ISZERO V449
0x4b1: V451 = ISZERO V450
0x4b2: V452 = 0x4ba
0x4b5: JUMPI 0x4ba V451
---
Entry stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V392, V392, 0x6c86888b, V443, 0x20, V446, V447, V446, 0x0, V392]
Exit stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118, 0x0, V392, V392, 0x6c86888b, V443, 0x20, V446, V447, V446, 0x0, V392]

================================

Block 0x4b6
[0x4b6:0x4b9]
---
Predecessors: [0x3ff]
Successors: []
---
0x4b6 PUSH1 0x0
0x4b8 DUP1
0x4b9 REVERT
---
0x4b6: V453 = 0x0
0x4b9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118, 0x0, V392, V392, 0x6c86888b, V443, 0x20, V446, V447, V446, 0x0, V392]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118, 0x0, V392, V392, 0x6c86888b, V443, 0x20, V446, V447, V446, 0x0, V392]

================================

Block 0x4ba
[0x4ba:0x4c6]
---
Predecessors: [0x3ff]
Successors: [0x4c7, 0x4cb]
---
0x4ba JUMPDEST
0x4bb PUSH2 0x2c6
0x4be GAS
0x4bf SUB
0x4c0 CALL
0x4c1 ISZERO
0x4c2 ISZERO
0x4c3 PUSH2 0x4cb
0x4c6 JUMPI
---
0x4ba: JUMPDEST 
0x4bb: V454 = 0x2c6
0x4be: V455 = GAS
0x4bf: V456 = SUB V455 0x2c6
0x4c0: V457 = CALL V456 V392 0x0 V446 V447 V446 0x20
0x4c1: V458 = ISZERO V457
0x4c2: V459 = ISZERO V458
0x4c3: V460 = 0x4cb
0x4c6: JUMPI 0x4cb V459
---
Entry stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118, 0x0, V392, V392, 0x6c86888b, V443, 0x20, V446, V447, V446, 0x0, V392]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118, 0x0, V392, V392, 0x6c86888b, V443]

================================

Block 0x4c7
[0x4c7:0x4ca]
---
Predecessors: [0x4ba]
Successors: []
---
0x4c7 PUSH1 0x0
0x4c9 DUP1
0x4ca REVERT
---
0x4c7: V461 = 0x0
0x4ca: REVERT 0x0 0x0
---
Entry stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118, 0x0, V392, V392, 0x6c86888b, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118, 0x0, V392, V392, 0x6c86888b, V443]

================================

Block 0x4cb
[0x4cb:0x4d6]
---
Predecessors: [0x4ba]
Successors: [0x4d7]
---
0x4cb JUMPDEST
0x4cc POP
0x4cd POP
0x4ce POP
0x4cf PUSH1 0x40
0x4d1 MLOAD
0x4d2 DUP1
0x4d3 MLOAD
0x4d4 SWAP3
0x4d5 POP
0x4d6 POP
---
0x4cb: JUMPDEST 
0x4cf: V462 = 0x40
0x4d1: V463 = M[0x40]
0x4d3: V464 = M[V463]
---
Entry stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118, 0x0, V392, V392, 0x6c86888b, V443]
Stack pops: 5
Stack additions: [V464, S3]
Exit stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118, V464, V392]

================================

Block 0x4d7
[0x4d7:0x4e6]
---
Predecessors: [0x4cb]
Successors: [0x153]
---
0x4d7 JUMPDEST
0x4d8 POP
0x4d9 SWAP12
0x4da SWAP11
0x4db POP
0x4dc POP
0x4dd POP
0x4de POP
0x4df POP
0x4e0 POP
0x4e1 POP
0x4e2 POP
0x4e3 POP
0x4e4 POP
0x4e5 POP
0x4e6 JUMP
---
0x4d7: JUMPDEST 
0x4e6: JUMP 0x153
---
Entry stack: [V12, 0x153, V94, V96, V99, V101, V103, V105, V108, V112, V114, V116, V118, V464, V392]
Stack pops: 14
Stack additions: [S1]
Exit stack: [V12, V464]

================================

Block 0x4e7
[0x4e7:0x4ee]
---
Predecessors: [0x172]
Successors: [0xb75]
---
0x4e7 JUMPDEST
0x4e8 PUSH2 0x4ef
0x4eb PUSH2 0xb75
0x4ee JUMP
---
0x4e7: JUMPDEST 
0x4e8: V465 = 0x4ef
0x4eb: V466 = 0xb75
0x4ee: JUMP 0xb75
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, V161, V163]
Stack pops: 0
Stack additions: [0x4ef]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, V161, V163, 0x4ef]

================================

Block 0x4ef
[0x4ef:0x4f8]
---
Predecessors: [0xb75]
Successors: [0xb75]
---
0x4ef JUMPDEST
0x4f0 PUSH1 0x0
0x4f2 PUSH2 0x4f9
0x4f5 PUSH2 0xb75
0x4f8 JUMP
---
0x4ef: JUMPDEST 
0x4f0: V467 = 0x0
0x4f2: V468 = 0x4f9
0x4f5: V469 = 0xb75
0x4f8: JUMP 0xb75
---
Entry stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1072]
Stack pops: 0
Stack additions: [0x0, 0x4f9]
Exit stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1072, 0x0, 0x4f9]

================================

Block 0x4f9
[0x4f9:0x50f]
---
Predecessors: [0xb75]
Successors: [0x510, 0x514]
---
0x4f9 JUMPDEST
0x4fa PUSH1 0x0
0x4fc SLOAD
0x4fd CALLER
0x4fe PUSH1 0x1
0x500 PUSH1 0xa0
0x502 PUSH1 0x2
0x504 EXP
0x505 SUB
0x506 SWAP1
0x507 DUP2
0x508 AND
0x509 SWAP2
0x50a AND
0x50b EQ
0x50c PUSH2 0x514
0x50f JUMPI
---
0x4f9: JUMPDEST 
0x4fa: V470 = 0x0
0x4fc: V471 = S[0x0]
0x4fd: V472 = CALLER
0x4fe: V473 = 0x1
0x500: V474 = 0xa0
0x502: V475 = 0x2
0x504: V476 = EXP 0x2 0xa0
0x505: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x508: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x50a: V479 = AND V471 0xffffffffffffffffffffffffffffffffffffffff
0x50b: V480 = EQ V479 V478
0x50c: V481 = 0x514
0x50f: JUMPI 0x514 V480
---
Entry stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1072]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1072]

================================

Block 0x510
[0x510:0x513]
---
Predecessors: [0x4f9]
Successors: []
---
0x510 PUSH1 0x0
0x512 DUP1
0x513 REVERT
---
0x510: V482 = 0x0
0x513: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1072]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1072]

================================

Block 0x514
[0x514:0x520]
---
Predecessors: [0x4f9]
Successors: [0x521, 0x523]
---
0x514 JUMPDEST
0x515 PUSH1 0x6
0x517 PUSH1 0x40
0x519 MLOAD
0x51a DUP1
0x51b MSIZE
0x51c LT
0x51d PUSH2 0x523
0x520 JUMPI
---
0x514: JUMPDEST 
0x515: V483 = 0x6
0x517: V484 = 0x40
0x519: V485 = M[0x40]
0x51b: V486 = MSIZE
0x51c: V487 = LT V486 V485
0x51d: V488 = 0x523
0x520: JUMPI 0x523 V487
---
Entry stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1072]
Stack pops: 0
Stack additions: [0x6, V485]
Exit stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1072, 0x6, V485]

================================

Block 0x521
[0x521:0x522]
---
Predecessors: [0x514]
Successors: [0x523]
---
0x521 POP
0x522 MSIZE
---
0x522: V489 = MSIZE
---
Entry stack: [V12, 0x9a, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1072, 0x6, V485]
Stack pops: 1
Stack additions: [V489]
Exit stack: [V12, 0x9a, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1072, 0x6, V489]

================================

Block 0x523
[0x523:0x533]
---
Predecessors: [0x514, 0x521]
Successors: [0x534]
---
0x523 JUMPDEST
0x524 SWAP1
0x525 DUP1
0x526 DUP3
0x527 MSTORE
0x528 DUP1
0x529 PUSH1 0x20
0x52b MUL
0x52c PUSH1 0x20
0x52e ADD
0x52f DUP3
0x530 ADD
0x531 PUSH1 0x40
0x533 MSTORE
---
0x523: JUMPDEST 
0x527: M[S0] = 0x6
0x529: V490 = 0x20
0x52b: V491 = MUL 0x20 0x6
0x52c: V492 = 0x20
0x52e: V493 = ADD 0x20 0xc0
0x530: V494 = ADD S0 0xe0
0x531: V495 = 0x40
0x533: M[0x40] = V494
---
Entry stack: [V12, 0x9a, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1072, 0x6, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, 0x9a, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1072, S0, 0x6]

================================

Block 0x534
[0x534:0x543]
---
Predecessors: [0x523]
Successors: [0x544, 0x545]
---
0x534 JUMPDEST
0x535 POP
0x536 SWAP3
0x537 POP
0x538 DUP11
0x539 DUP4
0x53a PUSH1 0x0
0x53c DUP2
0x53d MLOAD
0x53e DUP2
0x53f LT
0x540 PUSH2 0x545
0x543 JUMPI
---
0x534: JUMPDEST 
0x53a: V496 = 0x0
0x53d: V497 = M[S1]
0x53f: V498 = LT 0x0 V497
0x540: V499 = 0x545
0x543: JUMPI 0x545 V498
---
Entry stack: [V12, 0x9a, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1072, S1, 0x6]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S1, S3, S2, S12, S1, 0x0]
Exit stack: [S17, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1, S3, S2, S12, S1, 0x0]

================================

Block 0x544
[0x544:0x544]
---
Predecessors: [0x534]
Successors: []
---
0x544 INVALID
---
0x544: INVALID 
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x545
[0x545:0x55b]
---
Predecessors: [0x534]
Successors: [0x55c, 0x55d]
---
0x545 JUMPDEST
0x546 PUSH1 0x20
0x548 SWAP1
0x549 DUP2
0x54a MUL
0x54b SWAP1
0x54c SWAP2
0x54d ADD
0x54e ADD
0x54f MSTORE
0x550 DUP10
0x551 DUP4
0x552 PUSH1 0x1
0x554 DUP2
0x555 MLOAD
0x556 DUP2
0x557 LT
0x558 PUSH2 0x55d
0x55b JUMPI
---
0x545: JUMPDEST 
0x546: V500 = 0x20
0x54a: V501 = MUL 0x20 0x0
0x54d: V502 = ADD S1 0x0
0x54e: V503 = ADD V502 0x20
0x54f: M[V503] = S2
0x552: V504 = 0x1
0x555: V505 = M[S5]
0x557: V506 = LT 0x1 V505
0x558: V507 = 0x55d
0x55b: JUMPI 0x55d V506
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S12, S5, 0x1]
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S12, S5, 0x1]

================================

Block 0x55c
[0x55c:0x55c]
---
Predecessors: [0x545]
Successors: []
---
0x55c INVALID
---
0x55c: INVALID 
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x55d
[0x55d:0x573]
---
Predecessors: [0x545]
Successors: [0x574, 0x575]
---
0x55d JUMPDEST
0x55e PUSH1 0x20
0x560 SWAP1
0x561 DUP2
0x562 MUL
0x563 SWAP1
0x564 SWAP2
0x565 ADD
0x566 ADD
0x567 MSTORE
0x568 DUP9
0x569 DUP4
0x56a PUSH1 0x2
0x56c DUP2
0x56d MLOAD
0x56e DUP2
0x56f LT
0x570 PUSH2 0x575
0x573 JUMPI
---
0x55d: JUMPDEST 
0x55e: V508 = 0x20
0x562: V509 = MUL 0x20 0x1
0x565: V510 = ADD S1 0x20
0x566: V511 = ADD V510 0x20
0x567: M[V511] = S2
0x56a: V512 = 0x2
0x56d: V513 = M[S5]
0x56f: V514 = LT 0x2 V513
0x570: V515 = 0x575
0x573: JUMPI 0x575 V514
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S11, S5, 0x2]
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S11, S5, 0x2]

================================

Block 0x574
[0x574:0x574]
---
Predecessors: [0x55d]
Successors: []
---
0x574 INVALID
---
0x574: INVALID 
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]

================================

Block 0x575
[0x575:0x58b]
---
Predecessors: [0x55d]
Successors: [0x58c, 0x58d]
---
0x575 JUMPDEST
0x576 PUSH1 0x20
0x578 SWAP1
0x579 DUP2
0x57a MUL
0x57b SWAP1
0x57c SWAP2
0x57d ADD
0x57e ADD
0x57f MSTORE
0x580 DUP8
0x581 DUP4
0x582 PUSH1 0x3
0x584 DUP2
0x585 MLOAD
0x586 DUP2
0x587 LT
0x588 PUSH2 0x58d
0x58b JUMPI
---
0x575: JUMPDEST 
0x576: V516 = 0x20
0x57a: V517 = MUL 0x20 0x2
0x57d: V518 = ADD S1 0x40
0x57e: V519 = ADD V518 0x20
0x57f: M[V519] = S2
0x582: V520 = 0x3
0x585: V521 = M[S5]
0x587: V522 = LT 0x3 V521
0x588: V523 = 0x58d
0x58b: JUMPI 0x58d V522
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S10, S5, 0x3]
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S10, S5, 0x3]

================================

Block 0x58c
[0x58c:0x58c]
---
Predecessors: [0x575]
Successors: []
---
0x58c INVALID
---
0x58c: INVALID 
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x58d
[0x58d:0x5a3]
---
Predecessors: [0x575]
Successors: [0x5a4, 0x5a5]
---
0x58d JUMPDEST
0x58e PUSH1 0x20
0x590 SWAP1
0x591 DUP2
0x592 MUL
0x593 SWAP1
0x594 SWAP2
0x595 ADD
0x596 ADD
0x597 MSTORE
0x598 DUP7
0x599 DUP4
0x59a PUSH1 0x4
0x59c DUP2
0x59d MLOAD
0x59e DUP2
0x59f LT
0x5a0 PUSH2 0x5a5
0x5a3 JUMPI
---
0x58d: JUMPDEST 
0x58e: V524 = 0x20
0x592: V525 = MUL 0x20 0x3
0x595: V526 = ADD S1 0x60
0x596: V527 = ADD V526 0x20
0x597: M[V527] = S2
0x59a: V528 = 0x4
0x59d: V529 = M[S5]
0x59f: V530 = LT 0x4 V529
0x5a0: V531 = 0x5a5
0x5a3: JUMPI 0x5a5 V530
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S9, S5, 0x4]
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S9, S5, 0x4]

================================

Block 0x5a4
[0x5a4:0x5a4]
---
Predecessors: [0x58d]
Successors: []
---
0x5a4 INVALID
---
0x5a4: INVALID 
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]

================================

Block 0x5a5
[0x5a5:0x5bb]
---
Predecessors: [0x58d]
Successors: [0x5bc, 0x5bd]
---
0x5a5 JUMPDEST
0x5a6 PUSH1 0x20
0x5a8 SWAP1
0x5a9 DUP2
0x5aa MUL
0x5ab SWAP1
0x5ac SWAP2
0x5ad ADD
0x5ae ADD
0x5af MSTORE
0x5b0 DUP6
0x5b1 DUP4
0x5b2 PUSH1 0x5
0x5b4 DUP2
0x5b5 MLOAD
0x5b6 DUP2
0x5b7 LT
0x5b8 PUSH2 0x5bd
0x5bb JUMPI
---
0x5a5: JUMPDEST 
0x5a6: V532 = 0x20
0x5aa: V533 = MUL 0x20 0x4
0x5ad: V534 = ADD S1 0x80
0x5ae: V535 = ADD V534 0x20
0x5af: M[V535] = S2
0x5b2: V536 = 0x5
0x5b5: V537 = M[S5]
0x5b7: V538 = LT 0x5 V537
0x5b8: V539 = 0x5bd
0x5bb: JUMPI 0x5bd V538
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S8, S5, 0x5]
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S8, S5, 0x5]

================================

Block 0x5bc
[0x5bc:0x5bc]
---
Predecessors: [0x5a5]
Successors: []
---
0x5bc INVALID
---
0x5bc: INVALID 
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x5]

================================

Block 0x5bd
[0x5bd:0x5cb]
---
Predecessors: [0x5a5]
Successors: [0x5cc]
---
0x5bd JUMPDEST
0x5be PUSH1 0x20
0x5c0 SWAP1
0x5c1 DUP2
0x5c2 MUL
0x5c3 SWAP1
0x5c4 SWAP2
0x5c5 ADD
0x5c6 ADD
0x5c7 MSTORE
0x5c8 PUSH1 0x0
0x5ca SWAP2
0x5cb POP
---
0x5bd: JUMPDEST 
0x5be: V540 = 0x20
0x5c2: V541 = MUL 0x20 0x5
0x5c5: V542 = ADD S1 0xa0
0x5c6: V543 = ADD V542 0x20
0x5c7: M[V543] = S2
0x5c8: V544 = 0x0
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x5]
Stack pops: 5
Stack additions: [0x0, S3]
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, S3]

================================

Block 0x5cc
[0x5cc:0x5d5]
---
Predecessors: [0x5bd, 0x610]
Successors: [0x5d6, 0x61b]
---
0x5cc JUMPDEST
0x5cd PUSH1 0x6
0x5cf DUP3
0x5d0 LT
0x5d1 ISZERO
0x5d2 PUSH2 0x61b
0x5d5 JUMPI
---
0x5cc: JUMPDEST 
0x5cd: V545 = 0x6
0x5d0: V546 = LT S1 0x6
0x5d1: V547 = ISZERO V546
0x5d2: V548 = 0x61b
0x5d5: JUMPI 0x61b V547
---
Entry stack: [V12, 0x9a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x9a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5d6
[0x5d6:0x5e3]
---
Predecessors: [0x5cc]
Successors: [0x5e4, 0x5e5]
---
0x5d6 DUP2
0x5d7 PUSH1 0xd
0x5d9 ADD
0x5da DUP4
0x5db DUP4
0x5dc DUP2
0x5dd MLOAD
0x5de DUP2
0x5df LT
0x5e0 PUSH2 0x5e5
0x5e3 JUMPI
---
0x5d7: V549 = 0xd
0x5d9: V550 = ADD 0xd S1
0x5dd: V551 = M[S2]
0x5df: V552 = LT S1 V551
0x5e0: V553 = 0x5e5
0x5e3: JUMPI 0x5e5 V552
---
Entry stack: [V12, 0x9a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V550, S2, S1]
Exit stack: [V12, 0x9a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V550, S2, S1]

================================

Block 0x5e4
[0x5e4:0x5e4]
---
Predecessors: [0x5d6]
Successors: []
---
0x5e4 INVALID
---
0x5e4: INVALID 
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V550, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V550, S1, S0]

================================

Block 0x5e5
[0x5e5:0x5f6]
---
Predecessors: [0x5d6]
Successors: [0x5f7, 0x5f8]
---
0x5e5 JUMPDEST
0x5e6 SWAP1
0x5e7 PUSH1 0x20
0x5e9 ADD
0x5ea SWAP1
0x5eb PUSH1 0x20
0x5ed MUL
0x5ee ADD
0x5ef MLOAD
0x5f0 DUP2
0x5f1 ISZERO
0x5f2 ISZERO
0x5f3 PUSH2 0x5f8
0x5f6 JUMPI
---
0x5e5: JUMPDEST 
0x5e7: V554 = 0x20
0x5e9: V555 = ADD 0x20 S1
0x5eb: V556 = 0x20
0x5ed: V557 = MUL 0x20 S0
0x5ee: V558 = ADD V557 V555
0x5ef: V559 = M[V558]
0x5f1: V560 = ISZERO V550
0x5f2: V561 = ISZERO V560
0x5f3: V562 = 0x5f8
0x5f6: JUMPI 0x5f8 V561
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V550, S1, S0]
Stack pops: 3
Stack additions: [S2, V559]
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V550, V559]

================================

Block 0x5f7
[0x5f7:0x5f7]
---
Predecessors: [0x5e5]
Successors: []
---
0x5f7 INVALID
---
0x5f7: INVALID 
---
Entry stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V550, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V550, V559]

================================

Block 0x5f8
[0x5f8:0x603]
---
Predecessors: [0x5e5]
Successors: [0x604, 0x605]
---
0x5f8 JUMPDEST
0x5f9 DIV
0x5fa DUP4
0x5fb DUP4
0x5fc DUP2
0x5fd MLOAD
0x5fe DUP2
0x5ff LT
0x600 PUSH2 0x605
0x603 JUMPI
---
0x5f8: JUMPDEST 
0x5f9: V563 = DIV V559 V550
0x5fd: V564 = M[S4]
0x5ff: V565 = LT S3 V564
0x600: V566 = 0x605
0x603: JUMPI 0x605 V565
---
Entry stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V550, V559]
Stack pops: 5
Stack additions: [S4, S3, S2, V563, S4, S3]
Exit stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V563, S4, S3]

================================

Block 0x604
[0x604:0x604]
---
Predecessors: [0x5f8]
Successors: []
---
0x604 INVALID
---
0x604: INVALID 
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V563, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V563, S1, S0]

================================

Block 0x605
[0x605:0x60f]
---
Predecessors: [0x5f8]
Successors: [0x610]
---
0x605 JUMPDEST
0x606 PUSH1 0x20
0x608 SWAP1
0x609 DUP2
0x60a MUL
0x60b SWAP1
0x60c SWAP2
0x60d ADD
0x60e ADD
0x60f MSTORE
---
0x605: JUMPDEST 
0x606: V567 = 0x20
0x60a: V568 = MUL 0x20 S0
0x60d: V569 = ADD S1 V568
0x60e: V570 = ADD V569 0x20
0x60f: M[V570] = V563
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V563, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x610
[0x610:0x61a]
---
Predecessors: [0x605]
Successors: [0x5cc]
---
0x610 JUMPDEST
0x611 PUSH1 0x1
0x613 SWAP1
0x614 SWAP2
0x615 ADD
0x616 SWAP1
0x617 PUSH2 0x5cc
0x61a JUMP
---
0x610: JUMPDEST 
0x611: V571 = 0x1
0x615: V572 = ADD S1 0x1
0x617: V573 = 0x5cc
0x61a: JUMP 0x5cc
---
Entry stack: [V12, 0x9a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V572, S0]
Exit stack: [V12, 0x9a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V572, S0]

================================

Block 0x61b
[0x61b:0x627]
---
Predecessors: [0x5cc]
Successors: [0x628, 0x62a]
---
0x61b JUMPDEST
0x61c PUSH1 0x3
0x61e PUSH1 0x40
0x620 MLOAD
0x621 DUP1
0x622 MSIZE
0x623 LT
0x624 PUSH2 0x62a
0x627 JUMPI
---
0x61b: JUMPDEST 
0x61c: V574 = 0x3
0x61e: V575 = 0x40
0x620: V576 = M[0x40]
0x622: V577 = MSIZE
0x623: V578 = LT V577 V576
0x624: V579 = 0x62a
0x627: JUMPI 0x62a V578
---
Entry stack: [V12, 0x9a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3, V576]
Exit stack: [V12, 0x9a, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x3, V576]

================================

Block 0x628
[0x628:0x629]
---
Predecessors: [0x61b]
Successors: [0x62a]
---
0x628 POP
0x629 MSIZE
---
0x629: V580 = MSIZE
---
Entry stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, V576]
Stack pops: 1
Stack additions: [V580]
Exit stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, V580]

================================

Block 0x62a
[0x62a:0x63a]
---
Predecessors: [0x61b, 0x628]
Successors: [0x63b]
---
0x62a JUMPDEST
0x62b SWAP1
0x62c DUP1
0x62d DUP3
0x62e MSTORE
0x62f DUP1
0x630 PUSH1 0x20
0x632 MUL
0x633 PUSH1 0x20
0x635 ADD
0x636 DUP3
0x637 ADD
0x638 PUSH1 0x40
0x63a MSTORE
---
0x62a: JUMPDEST 
0x62e: M[S0] = 0x3
0x630: V581 = 0x20
0x632: V582 = MUL 0x20 0x3
0x633: V583 = 0x20
0x635: V584 = ADD 0x20 0x60
0x637: V585 = ADD S0 0x80
0x638: V586 = 0x40
0x63a: M[0x40] = V585
---
Entry stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, 0x3]

================================

Block 0x63b
[0x63b:0x64a]
---
Predecessors: [0x62a]
Successors: [0x64b, 0x64c]
---
0x63b JUMPDEST
0x63c POP
0x63d SWAP1
0x63e POP
0x63f DUP14
0x640 DUP2
0x641 PUSH1 0x0
0x643 DUP2
0x644 MLOAD
0x645 DUP2
0x646 LT
0x647 PUSH2 0x64c
0x64a JUMPI
---
0x63b: JUMPDEST 
0x641: V587 = 0x0
0x644: V588 = M[S1]
0x646: V589 = LT 0x0 V588
0x647: V590 = 0x64c
0x64a: JUMPI 0x64c V589
---
Entry stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1, S15, S1, 0x0]
Exit stack: [V12, 0x9a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1, S15, S1, 0x0]

================================

Block 0x64b
[0x64b:0x64b]
---
Predecessors: [0x63b]
Successors: []
---
0x64b INVALID
---
0x64b: INVALID 
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x64c
[0x64c:0x66f]
---
Predecessors: [0x63b]
Successors: [0x670, 0x671]
---
0x64c JUMPDEST
0x64d PUSH1 0x1
0x64f PUSH1 0xa0
0x651 PUSH1 0x2
0x653 EXP
0x654 SUB
0x655 SWAP1
0x656 SWAP3
0x657 AND
0x658 PUSH1 0x20
0x65a SWAP3
0x65b DUP4
0x65c MUL
0x65d SWAP1
0x65e SWAP2
0x65f ADD
0x660 SWAP1
0x661 SWAP2
0x662 ADD
0x663 MSTORE
0x664 DUP13
0x665 DUP2
0x666 PUSH1 0x1
0x668 DUP2
0x669 MLOAD
0x66a DUP2
0x66b LT
0x66c PUSH2 0x671
0x66f JUMPI
---
0x64c: JUMPDEST 
0x64d: V591 = 0x1
0x64f: V592 = 0xa0
0x651: V593 = 0x2
0x653: V594 = EXP 0x2 0xa0
0x654: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x657: V596 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x658: V597 = 0x20
0x65c: V598 = MUL 0x20 0x0
0x65f: V599 = ADD S1 0x0
0x662: V600 = ADD 0x20 V599
0x663: M[V600] = V596
0x666: V601 = 0x1
0x669: V602 = M[S3]
0x66b: V603 = LT 0x1 V602
0x66c: V604 = 0x671
0x66f: JUMPI 0x671 V603
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S15, S3, 0x1]
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S15, S3, 0x1]

================================

Block 0x670
[0x670:0x670]
---
Predecessors: [0x64c]
Successors: []
---
0x670 INVALID
---
0x670: INVALID 
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x671
[0x671:0x694]
---
Predecessors: [0x64c]
Successors: [0x695, 0x696]
---
0x671 JUMPDEST
0x672 PUSH1 0x1
0x674 PUSH1 0xa0
0x676 PUSH1 0x2
0x678 EXP
0x679 SUB
0x67a SWAP1
0x67b SWAP3
0x67c AND
0x67d PUSH1 0x20
0x67f SWAP3
0x680 DUP4
0x681 MUL
0x682 SWAP1
0x683 SWAP2
0x684 ADD
0x685 SWAP1
0x686 SWAP2
0x687 ADD
0x688 MSTORE
0x689 DUP12
0x68a DUP2
0x68b PUSH1 0x2
0x68d DUP2
0x68e MLOAD
0x68f DUP2
0x690 LT
0x691 PUSH2 0x696
0x694 JUMPI
---
0x671: JUMPDEST 
0x672: V605 = 0x1
0x674: V606 = 0xa0
0x676: V607 = 0x2
0x678: V608 = EXP 0x2 0xa0
0x679: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67c: V610 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x67d: V611 = 0x20
0x681: V612 = MUL 0x20 0x1
0x684: V613 = ADD S1 0x20
0x687: V614 = ADD 0x20 V613
0x688: M[V614] = V610
0x68b: V615 = 0x2
0x68e: V616 = M[S3]
0x690: V617 = LT 0x2 V616
0x691: V618 = 0x696
0x694: JUMPI 0x696 V617
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S14, S3, 0x2]
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S14, S3, 0x2]

================================

Block 0x695
[0x695:0x695]
---
Predecessors: [0x671]
Successors: []
---
0x695 INVALID
---
0x695: INVALID 
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]

================================

Block 0x696
[0x696:0x6b8]
---
Predecessors: [0x671]
Successors: [0x83e]
---
0x696 JUMPDEST
0x697 PUSH1 0x1
0x699 PUSH1 0xa0
0x69b PUSH1 0x2
0x69d EXP
0x69e SUB
0x69f SWAP1
0x6a0 SWAP3
0x6a1 AND
0x6a2 PUSH1 0x20
0x6a4 SWAP3
0x6a5 DUP4
0x6a6 MUL
0x6a7 SWAP1
0x6a8 SWAP2
0x6a9 ADD
0x6aa SWAP1
0x6ab SWAP2
0x6ac ADD
0x6ad MSTORE
0x6ae PUSH2 0x6b9
0x6b1 DUP2
0x6b2 DUP5
0x6b3 DUP8
0x6b4 DUP8
0x6b5 PUSH2 0x83e
0x6b8 JUMP
---
0x696: JUMPDEST 
0x697: V619 = 0x1
0x699: V620 = 0xa0
0x69b: V621 = 0x2
0x69d: V622 = EXP 0x2 0xa0
0x69e: V623 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a1: V624 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x6a2: V625 = 0x20
0x6a6: V626 = MUL 0x20 0x2
0x6a9: V627 = ADD S1 0x40
0x6ac: V628 = ADD 0x20 V627
0x6ad: M[V628] = V624
0x6ae: V629 = 0x6b9
0x6b5: V630 = 0x83e
0x6b8: JUMP 0x83e
---
Entry stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, 0x6b9, S3, S5, S7, S6]
Exit stack: [V12, 0x9a, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x6b9, S3, S5, S7, S6]

================================

Block 0x6b9
[0x6b9:0x6b9]
---
Predecessors: [0x83a]
Successors: [0x6ba]
---
0x6b9 JUMPDEST
---
0x6b9: JUMPDEST 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S4, S3, S2, S1, S0]

================================

Block 0x6ba
[0x6ba:0x6ba]
---
Predecessors: [0x6b9]
Successors: [0x6bb]
---
0x6ba JUMPDEST
---
0x6ba: JUMPDEST 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S4, S3, S2, S1, S0]

================================

Block 0x6bb
[0x6bb:0x6ca]
---
Predecessors: [0x6ba]
Successors: [0x9a]
---
0x6bb JUMPDEST
0x6bc POP
0x6bd POP
0x6be POP
0x6bf POP
0x6c0 POP
0x6c1 POP
0x6c2 POP
0x6c3 POP
0x6c4 POP
0x6c5 POP
0x6c6 POP
0x6c7 POP
0x6c8 POP
0x6c9 POP
0x6ca JUMP
---
0x6bb: JUMPDEST 
0x6ca: JUMP 0x9a
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S4, S3, S2, S1, S0]
Stack pops: 15
Stack additions: []
Exit stack: [V12]

================================

Block 0x6cb
[0x6cb:0x72a]
---
Predecessors: [0x1ba]
Successors: [0x72b, 0x72f]
---
0x6cb JUMPDEST
0x6cc PUSH1 0x1
0x6ce SLOAD
0x6cf PUSH1 0x0
0x6d1 SWAP1
0x6d2 PUSH1 0x1
0x6d4 PUSH1 0xa0
0x6d6 PUSH1 0x2
0x6d8 EXP
0x6d9 SUB
0x6da AND
0x6db DUP1
0x6dc PUSH4 0xf7888aec
0x6e1 DUP5
0x6e2 ADDRESS
0x6e3 DUP6
0x6e4 PUSH1 0x40
0x6e6 MLOAD
0x6e7 PUSH1 0x20
0x6e9 ADD
0x6ea MSTORE
0x6eb PUSH1 0x40
0x6ed MLOAD
0x6ee PUSH1 0xe0
0x6f0 PUSH1 0x2
0x6f2 EXP
0x6f3 PUSH4 0xffffffff
0x6f8 DUP6
0x6f9 AND
0x6fa MUL
0x6fb DUP2
0x6fc MSTORE
0x6fd PUSH1 0x1
0x6ff PUSH1 0xa0
0x701 PUSH1 0x2
0x703 EXP
0x704 SUB
0x705 SWAP3
0x706 DUP4
0x707 AND
0x708 PUSH1 0x4
0x70a DUP3
0x70b ADD
0x70c MSTORE
0x70d SWAP2
0x70e AND
0x70f PUSH1 0x24
0x711 DUP3
0x712 ADD
0x713 MSTORE
0x714 PUSH1 0x44
0x716 ADD
0x717 PUSH1 0x20
0x719 PUSH1 0x40
0x71b MLOAD
0x71c DUP1
0x71d DUP4
0x71e SUB
0x71f DUP2
0x720 PUSH1 0x0
0x722 DUP8
0x723 DUP1
0x724 EXTCODESIZE
0x725 ISZERO
0x726 ISZERO
0x727 PUSH2 0x72f
0x72a JUMPI
---
0x6cb: JUMPDEST 
0x6cc: V631 = 0x1
0x6ce: V632 = S[0x1]
0x6cf: V633 = 0x0
0x6d2: V634 = 0x1
0x6d4: V635 = 0xa0
0x6d6: V636 = 0x2
0x6d8: V637 = EXP 0x2 0xa0
0x6d9: V638 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6da: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x6dc: V640 = 0xf7888aec
0x6e2: V641 = ADDRESS
0x6e4: V642 = 0x40
0x6e6: V643 = M[0x40]
0x6e7: V644 = 0x20
0x6e9: V645 = ADD 0x20 V643
0x6ea: M[V645] = 0x0
0x6eb: V646 = 0x40
0x6ed: V647 = M[0x40]
0x6ee: V648 = 0xe0
0x6f0: V649 = 0x2
0x6f2: V650 = EXP 0x2 0xe0
0x6f3: V651 = 0xffffffff
0x6f9: V652 = AND 0xf7888aec 0xffffffff
0x6fa: V653 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x6fc: M[V647] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x6fd: V654 = 0x1
0x6ff: V655 = 0xa0
0x701: V656 = 0x2
0x703: V657 = EXP 0x2 0xa0
0x704: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x707: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x708: V660 = 0x4
0x70b: V661 = ADD V647 0x4
0x70c: M[V661] = V659
0x70e: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x70f: V663 = 0x24
0x712: V664 = ADD V647 0x24
0x713: M[V664] = V662
0x714: V665 = 0x44
0x716: V666 = ADD 0x44 V647
0x717: V667 = 0x20
0x719: V668 = 0x40
0x71b: V669 = M[0x40]
0x71e: V670 = SUB V666 V669
0x720: V671 = 0x0
0x724: V672 = EXTCODESIZE V639
0x725: V673 = ISZERO V672
0x726: V674 = ISZERO V673
0x727: V675 = 0x72f
0x72a: JUMPI 0x72f V674
---
Entry stack: [V12, 0xaf, V177]
Stack pops: 1
Stack additions: [S0, 0x0, V639, V639, 0xf7888aec, V666, 0x20, V669, V670, V669, 0x0, V639]
Exit stack: [V12, 0xaf, V177, 0x0, V639, V639, 0xf7888aec, V666, 0x20, V669, V670, V669, 0x0, V639]

================================

Block 0x72b
[0x72b:0x72e]
---
Predecessors: [0x6cb]
Successors: []
---
0x72b PUSH1 0x0
0x72d DUP1
0x72e REVERT
---
0x72b: V676 = 0x0
0x72e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xaf, V177, 0x0, V639, V639, 0xf7888aec, V666, 0x20, V669, V670, V669, 0x0, V639]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xaf, V177, 0x0, V639, V639, 0xf7888aec, V666, 0x20, V669, V670, V669, 0x0, V639]

================================

Block 0x72f
[0x72f:0x73b]
---
Predecessors: [0x6cb]
Successors: [0x73c, 0x740]
---
0x72f JUMPDEST
0x730 PUSH2 0x2c6
0x733 GAS
0x734 SUB
0x735 CALL
0x736 ISZERO
0x737 ISZERO
0x738 PUSH2 0x740
0x73b JUMPI
---
0x72f: JUMPDEST 
0x730: V677 = 0x2c6
0x733: V678 = GAS
0x734: V679 = SUB V678 0x2c6
0x735: V680 = CALL V679 V639 0x0 V669 V670 V669 0x20
0x736: V681 = ISZERO V680
0x737: V682 = ISZERO V681
0x738: V683 = 0x740
0x73b: JUMPI 0x740 V682
---
Entry stack: [V12, 0xaf, V177, 0x0, V639, V639, 0xf7888aec, V666, 0x20, V669, V670, V669, 0x0, V639]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xaf, V177, 0x0, V639, V639, 0xf7888aec, V666]

================================

Block 0x73c
[0x73c:0x73f]
---
Predecessors: [0x72f]
Successors: []
---
0x73c PUSH1 0x0
0x73e DUP1
0x73f REVERT
---
0x73c: V684 = 0x0
0x73f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xaf, V177, 0x0, V639, V639, 0xf7888aec, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xaf, V177, 0x0, V639, V639, 0xf7888aec, V666]

================================

Block 0x740
[0x740:0x74b]
---
Predecessors: [0x72f]
Successors: [0x74c]
---
0x740 JUMPDEST
0x741 POP
0x742 POP
0x743 POP
0x744 PUSH1 0x40
0x746 MLOAD
0x747 DUP1
0x748 MLOAD
0x749 SWAP3
0x74a POP
0x74b POP
---
0x740: JUMPDEST 
0x744: V685 = 0x40
0x746: V686 = M[0x40]
0x748: V687 = M[V686]
---
Entry stack: [V12, 0xaf, V177, 0x0, V639, V639, 0xf7888aec, V666]
Stack pops: 5
Stack additions: [V687, S3]
Exit stack: [V12, 0xaf, V177, V687, V639]

================================

Block 0x74c
[0x74c:0x751]
---
Predecessors: [0x740]
Successors: [0xaf]
---
0x74c JUMPDEST
0x74d POP
0x74e SWAP2
0x74f SWAP1
0x750 POP
0x751 JUMP
---
0x74c: JUMPDEST 
0x751: JUMP 0xaf
---
Entry stack: [V12, 0xaf, V177, V687, V639]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V687]

================================

Block 0x752
[0x752:0x760]
---
Predecessors: [0x1eb]
Successors: [0x1f3]
---
0x752 JUMPDEST
0x753 PUSH1 0x0
0x755 SLOAD
0x756 PUSH1 0x1
0x758 PUSH1 0xa0
0x75a PUSH1 0x2
0x75c EXP
0x75d SUB
0x75e AND
0x75f DUP2
0x760 JUMP
---
0x752: JUMPDEST 
0x753: V688 = 0x0
0x755: V689 = S[0x0]
0x756: V690 = 0x1
0x758: V691 = 0xa0
0x75a: V692 = 0x2
0x75c: V693 = EXP 0x2 0xa0
0x75d: V694 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75e: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0x760: JUMP 0x1f3
---
Entry stack: [V12, 0x1f3]
Stack pops: 1
Stack additions: [S0, V695]
Exit stack: [V12, 0x1f3, V695]

================================

Block 0x761
[0x761:0x777]
---
Predecessors: [0x21a]
Successors: [0x778, 0x77c]
---
0x761 JUMPDEST
0x762 PUSH1 0x0
0x764 SLOAD
0x765 CALLER
0x766 PUSH1 0x1
0x768 PUSH1 0xa0
0x76a PUSH1 0x2
0x76c EXP
0x76d SUB
0x76e SWAP1
0x76f DUP2
0x770 AND
0x771 SWAP2
0x772 AND
0x773 EQ
0x774 PUSH2 0x77c
0x777 JUMPI
---
0x761: JUMPDEST 
0x762: V696 = 0x0
0x764: V697 = S[0x0]
0x765: V698 = CALLER
0x766: V699 = 0x1
0x768: V700 = 0xa0
0x76a: V701 = 0x2
0x76c: V702 = EXP 0x2 0xa0
0x76d: V703 = SUB 0x10000000000000000000000000000000000000000 0x1
0x770: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V698
0x772: V705 = AND V697 0xffffffffffffffffffffffffffffffffffffffff
0x773: V706 = EQ V705 V704
0x774: V707 = 0x77c
0x777: JUMPI 0x77c V706
---
Entry stack: [V12, 0x9a, V220, V240, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V220, V240, V260]

================================

Block 0x778
[0x778:0x77b]
---
Predecessors: [0x761]
Successors: []
---
0x778 PUSH1 0x0
0x77a DUP1
0x77b REVERT
---
0x778: V708 = 0x0
0x77b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V220, V240, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V220, V240, V260]

================================

Block 0x77c
[0x77c:0x78c]
---
Predecessors: [0x761]
Successors: [0x78d, 0x78e]
---
0x77c JUMPDEST
0x77d PUSH2 0x7b4
0x780 DUP4
0x781 DUP4
0x782 DUP4
0x783 PUSH1 0x0
0x785 DUP2
0x786 MLOAD
0x787 DUP2
0x788 LT
0x789 PUSH2 0x78e
0x78c JUMPI
---
0x77c: JUMPDEST 
0x77d: V709 = 0x7b4
0x783: V710 = 0x0
0x786: V711 = M[V260]
0x788: V712 = LT 0x0 V711
0x789: V713 = 0x78e
0x78c: JUMPI 0x78e V712
---
Entry stack: [V12, 0x9a, V220, V240, V260]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x7b4, S2, S1, S0, 0x0]
Exit stack: [V12, 0x9a, V220, V240, V260, 0x7b4, V220, V240, V260, 0x0]

================================

Block 0x78d
[0x78d:0x78d]
---
Predecessors: [0x77c]
Successors: []
---
0x78d INVALID
---
0x78d: INVALID 
---
Entry stack: [V12, 0x9a, V220, V240, V260, 0x7b4, V220, V240, V260, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V220, V240, V260, 0x7b4, V220, V240, V260, 0x0]

================================

Block 0x78e
[0x78e:0x7a3]
---
Predecessors: [0x77c]
Successors: [0x7a4, 0x7a5]
---
0x78e JUMPDEST
0x78f SWAP1
0x790 PUSH1 0x20
0x792 ADD
0x793 SWAP1
0x794 PUSH1 0x20
0x796 MUL
0x797 ADD
0x798 MLOAD
0x799 DUP5
0x79a PUSH1 0x1
0x79c DUP2
0x79d MLOAD
0x79e DUP2
0x79f LT
0x7a0 PUSH2 0x7a5
0x7a3 JUMPI
---
0x78e: JUMPDEST 
0x790: V714 = 0x20
0x792: V715 = ADD 0x20 V260
0x794: V716 = 0x20
0x796: V717 = MUL 0x20 0x0
0x797: V718 = ADD 0x0 V715
0x798: V719 = M[V718]
0x79a: V720 = 0x1
0x79d: V721 = M[V260]
0x79f: V722 = LT 0x1 V721
0x7a0: V723 = 0x7a5
0x7a3: JUMPI 0x7a5 V722
---
Entry stack: [V12, 0x9a, V220, V240, V260, 0x7b4, V220, V240, V260, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V719, S5, 0x1]
Exit stack: [V12, 0x9a, V220, V240, V260, 0x7b4, V220, V240, V719, V260, 0x1]

================================

Block 0x7a4
[0x7a4:0x7a4]
---
Predecessors: [0x78e]
Successors: []
---
0x7a4 INVALID
---
0x7a4: INVALID 
---
Entry stack: [V12, 0x9a, V220, V240, V260, 0x7b4, V220, V240, V719, V260, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V220, V240, V260, 0x7b4, V220, V240, V719, V260, 0x1]

================================

Block 0x7a5
[0x7a5:0x7b3]
---
Predecessors: [0x78e]
Successors: [0x83e]
---
0x7a5 JUMPDEST
0x7a6 SWAP1
0x7a7 PUSH1 0x20
0x7a9 ADD
0x7aa SWAP1
0x7ab PUSH1 0x20
0x7ad MUL
0x7ae ADD
0x7af MLOAD
0x7b0 PUSH2 0x83e
0x7b3 JUMP
---
0x7a5: JUMPDEST 
0x7a7: V724 = 0x20
0x7a9: V725 = ADD 0x20 V260
0x7ab: V726 = 0x20
0x7ad: V727 = MUL 0x20 0x1
0x7ae: V728 = ADD 0x20 V725
0x7af: V729 = M[V728]
0x7b0: V730 = 0x83e
0x7b3: JUMP 0x83e
---
Entry stack: [V12, 0x9a, V220, V240, V260, 0x7b4, V220, V240, V719, V260, 0x1]
Stack pops: 2
Stack additions: [V729]
Exit stack: [V12, 0x9a, V220, V240, V260, 0x7b4, V220, V240, V719, V729]

================================

Block 0x7b4
[0x7b4:0x7b4]
---
Predecessors: [0x83a]
Successors: [0x7b5]
---
0x7b4 JUMPDEST
---
0x7b4: JUMPDEST 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S4, S3, S2, S1, S0]

================================

Block 0x7b5
[0x7b5:0x7b5]
---
Predecessors: [0x7b4]
Successors: [0x7b6]
---
0x7b5 JUMPDEST
---
0x7b5: JUMPDEST 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S4, S3, S2, S1, S0]

================================

Block 0x7b6
[0x7b6:0x7ba]
---
Predecessors: [0x7b5]
Successors: [0x9a]
---
0x7b6 JUMPDEST
0x7b7 POP
0x7b8 POP
0x7b9 POP
0x7ba JUMP
---
0x7b6: JUMPDEST 
0x7ba: JUMP S3
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S4]

================================

Block 0x7bb
[0x7bb:0x7bb]
---
Predecessors: []
Successors: [0x7bc]
---
0x7bb JUMPDEST
---
0x7bb: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7bc
[0x7bc:0x7bd]
---
Predecessors: [0x7bb]
Successors: []
Has unresolved jump.
---
0x7bc JUMPDEST
0x7bd JUMP
---
0x7bc: JUMPDEST 
0x7bd: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7be
[0x7be:0x7d5]
---
Predecessors: [0x2f5]
Successors: [0x7d6, 0x7da]
---
0x7be JUMPDEST
0x7bf PUSH1 0x0
0x7c1 DUP1
0x7c2 SLOAD
0x7c3 CALLER
0x7c4 PUSH1 0x1
0x7c6 PUSH1 0xa0
0x7c8 PUSH1 0x2
0x7ca EXP
0x7cb SUB
0x7cc SWAP1
0x7cd DUP2
0x7ce AND
0x7cf SWAP2
0x7d0 AND
0x7d1 EQ
0x7d2 PUSH2 0x7da
0x7d5 JUMPI
---
0x7be: JUMPDEST 
0x7bf: V731 = 0x0
0x7c2: V732 = S[0x0]
0x7c3: V733 = CALLER
0x7c4: V734 = 0x1
0x7c6: V735 = 0xa0
0x7c8: V736 = 0x2
0x7ca: V737 = EXP 0x2 0xa0
0x7cb: V738 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ce: V739 = AND 0xffffffffffffffffffffffffffffffffffffffff V733
0x7d0: V740 = AND V732 0xffffffffffffffffffffffffffffffffffffffff
0x7d1: V741 = EQ V740 V739
0x7d2: V742 = 0x7da
0x7d5: JUMPI 0x7da V741
---
Entry stack: [V12, 0x9a, V276]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x9a, V276, 0x0]

================================

Block 0x7d6
[0x7d6:0x7d9]
---
Predecessors: [0x7be]
Successors: []
---
0x7d6 PUSH1 0x0
0x7d8 DUP1
0x7d9 REVERT
---
0x7d6: V743 = 0x0
0x7d9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V276, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V276, 0x0]

================================

Block 0x7da
[0x7da:0x81f]
---
Predecessors: [0x7be]
Successors: [0x820, 0x824]
---
0x7da JUMPDEST
0x7db POP
0x7dc PUSH1 0x1
0x7de SLOAD
0x7df PUSH1 0x1
0x7e1 PUSH1 0xa0
0x7e3 PUSH1 0x2
0x7e5 EXP
0x7e6 SUB
0x7e7 AND
0x7e8 DUP1
0x7e9 PUSH4 0x2e1a7d4d
0x7ee DUP4
0x7ef PUSH1 0x40
0x7f1 MLOAD
0x7f2 PUSH1 0xe0
0x7f4 PUSH1 0x2
0x7f6 EXP
0x7f7 PUSH4 0xffffffff
0x7fc DUP5
0x7fd AND
0x7fe MUL
0x7ff DUP2
0x800 MSTORE
0x801 PUSH1 0x4
0x803 DUP2
0x804 ADD
0x805 SWAP2
0x806 SWAP1
0x807 SWAP2
0x808 MSTORE
0x809 PUSH1 0x24
0x80b ADD
0x80c PUSH1 0x0
0x80e PUSH1 0x40
0x810 MLOAD
0x811 DUP1
0x812 DUP4
0x813 SUB
0x814 DUP2
0x815 PUSH1 0x0
0x817 DUP8
0x818 DUP1
0x819 EXTCODESIZE
0x81a ISZERO
0x81b ISZERO
0x81c PUSH2 0x824
0x81f JUMPI
---
0x7da: JUMPDEST 
0x7dc: V744 = 0x1
0x7de: V745 = S[0x1]
0x7df: V746 = 0x1
0x7e1: V747 = 0xa0
0x7e3: V748 = 0x2
0x7e5: V749 = EXP 0x2 0xa0
0x7e6: V750 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e7: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V745
0x7e9: V752 = 0x2e1a7d4d
0x7ef: V753 = 0x40
0x7f1: V754 = M[0x40]
0x7f2: V755 = 0xe0
0x7f4: V756 = 0x2
0x7f6: V757 = EXP 0x2 0xe0
0x7f7: V758 = 0xffffffff
0x7fd: V759 = AND 0x2e1a7d4d 0xffffffff
0x7fe: V760 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x800: M[V754] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x801: V761 = 0x4
0x804: V762 = ADD V754 0x4
0x808: M[V762] = V276
0x809: V763 = 0x24
0x80b: V764 = ADD 0x24 V754
0x80c: V765 = 0x0
0x80e: V766 = 0x40
0x810: V767 = M[0x40]
0x813: V768 = SUB V764 V767
0x815: V769 = 0x0
0x819: V770 = EXTCODESIZE V751
0x81a: V771 = ISZERO V770
0x81b: V772 = ISZERO V771
0x81c: V773 = 0x824
0x81f: JUMPI 0x824 V772
---
Entry stack: [V12, 0x9a, V276, 0x0]
Stack pops: 2
Stack additions: [S1, V751, V751, 0x2e1a7d4d, V764, 0x0, V767, V768, V767, 0x0, V751]
Exit stack: [V12, 0x9a, V276, V751, V751, 0x2e1a7d4d, V764, 0x0, V767, V768, V767, 0x0, V751]

================================

Block 0x820
[0x820:0x823]
---
Predecessors: [0x7da]
Successors: []
---
0x820 PUSH1 0x0
0x822 DUP1
0x823 REVERT
---
0x820: V774 = 0x0
0x823: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V276, V751, V751, 0x2e1a7d4d, V764, 0x0, V767, V768, V767, 0x0, V751]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V276, V751, V751, 0x2e1a7d4d, V764, 0x0, V767, V768, V767, 0x0, V751]

================================

Block 0x824
[0x824:0x830]
---
Predecessors: [0x7da]
Successors: [0x831, 0x835]
---
0x824 JUMPDEST
0x825 PUSH2 0x2c6
0x828 GAS
0x829 SUB
0x82a CALL
0x82b ISZERO
0x82c ISZERO
0x82d PUSH2 0x835
0x830 JUMPI
---
0x824: JUMPDEST 
0x825: V775 = 0x2c6
0x828: V776 = GAS
0x829: V777 = SUB V776 0x2c6
0x82a: V778 = CALL V777 V751 0x0 V767 V768 V767 0x0
0x82b: V779 = ISZERO V778
0x82c: V780 = ISZERO V779
0x82d: V781 = 0x835
0x830: JUMPI 0x835 V780
---
Entry stack: [V12, 0x9a, V276, V751, V751, 0x2e1a7d4d, V764, 0x0, V767, V768, V767, 0x0, V751]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x9a, V276, V751, V751, 0x2e1a7d4d, V764]

================================

Block 0x831
[0x831:0x834]
---
Predecessors: [0x824]
Successors: []
---
0x831 PUSH1 0x0
0x833 DUP1
0x834 REVERT
---
0x831: V782 = 0x0
0x834: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V276, V751, V751, 0x2e1a7d4d, V764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V276, V751, V751, 0x2e1a7d4d, V764]

================================

Block 0x835
[0x835:0x838]
---
Predecessors: [0x824, 0xb67]
Successors: [0x839]
---
0x835 JUMPDEST
0x836 POP
0x837 POP
0x838 POP
---
0x835: JUMPDEST 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S10, S9, S8, S7, S6, {0x9a, 0x6b9, 0x7b4}, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S10, S9, S8, S7, S6, {0x9a, 0x6b9, 0x7b4}, S4, S3]

================================

Block 0x839
[0x839:0x839]
---
Predecessors: [0x835]
Successors: [0x83a]
---
0x839 JUMPDEST
---
0x839: JUMPDEST 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S7, S6, S5, S4, S3, {0x9a, 0x6b9, 0x7b4}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S7, S6, S5, S4, S3, {0x9a, 0x6b9, 0x7b4}, S1, S0]

================================

Block 0x83a
[0x83a:0x83d]
---
Predecessors: [0x839]
Successors: [0x9a, 0x6b9, 0x7b4]
---
0x83a JUMPDEST
0x83b POP
0x83c POP
0x83d JUMP
---
0x83a: JUMPDEST 
0x83d: JUMP {0x9a, 0x6b9, 0x7b4}
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S7, S6, S5, S4, S3, {0x9a, 0x6b9, 0x7b4}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S7, S6, S5, S4, S3]

================================

Block 0x83e
[0x83e:0x855]
---
Predecessors: [0x696, 0x7a5]
Successors: [0x856, 0x85a]
---
0x83e JUMPDEST
0x83f PUSH1 0x0
0x841 DUP1
0x842 SLOAD
0x843 CALLER
0x844 PUSH1 0x1
0x846 PUSH1 0xa0
0x848 PUSH1 0x2
0x84a EXP
0x84b SUB
0x84c SWAP1
0x84d DUP2
0x84e AND
0x84f SWAP2
0x850 AND
0x851 EQ
0x852 PUSH2 0x85a
0x855 JUMPI
---
0x83e: JUMPDEST 
0x83f: V783 = 0x0
0x842: V784 = S[0x0]
0x843: V785 = CALLER
0x844: V786 = 0x1
0x846: V787 = 0xa0
0x848: V788 = 0x2
0x84a: V789 = EXP 0x2 0xa0
0x84b: V790 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84e: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff V785
0x850: V792 = AND V784 0xffffffffffffffffffffffffffffffffffffffff
0x851: V793 = EQ V792 V791
0x852: V794 = 0x85a
0x855: JUMPI 0x85a V793
---
Entry stack: [V12, 0x9a, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x6b9, 0x7b4}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x9a, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x6b9, 0x7b4}, S3, S2, S1, S0, 0x0]

================================

Block 0x856
[0x856:0x859]
---
Predecessors: [0x83e]
Successors: []
---
0x856 PUSH1 0x0
0x858 DUP1
0x859 REVERT
---
0x856: V795 = 0x0
0x859: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x6b9, 0x7b4}, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x6b9, 0x7b4}, S4, S3, S2, S1, 0x0]

================================

Block 0x85a
[0x85a:0x865]
---
Predecessors: [0x83e]
Successors: [0x866, 0x867]
---
0x85a JUMPDEST
0x85b DUP4
0x85c PUSH1 0x5
0x85e DUP2
0x85f MLOAD
0x860 DUP2
0x861 LT
0x862 PUSH2 0x867
0x865 JUMPI
---
0x85a: JUMPDEST 
0x85c: V796 = 0x5
0x85f: V797 = M[S3]
0x861: V798 = LT 0x5 V797
0x862: V799 = 0x867
0x865: JUMPI 0x867 V798
---
Entry stack: [V12, 0x9a, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x6b9, 0x7b4}, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x5]
Exit stack: [V12, 0x9a, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x6b9, 0x7b4}, S4, S3, S2, S1, 0x0, S3, 0x5]

================================

Block 0x866
[0x866:0x866]
---
Predecessors: [0x85a]
Successors: []
---
0x866 INVALID
---
0x866: INVALID 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S12, S11, S10, S9, S8, {0x6b9, 0x7b4}, S6, S5, S4, S3, 0x0, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S12, S11, S10, S9, S8, {0x6b9, 0x7b4}, S6, S5, S4, S3, 0x0, S1, 0x5]

================================

Block 0x867
[0x867:0x881]
---
Predecessors: [0x85a]
Successors: [0x882, 0x883]
---
0x867 JUMPDEST
0x868 SWAP1
0x869 PUSH1 0x20
0x86b ADD
0x86c SWAP1
0x86d PUSH1 0x20
0x86f MUL
0x870 ADD
0x871 MLOAD
0x872 SWAP1
0x873 POP
0x874 PUSH2 0x835
0x877 DUP6
0x878 PUSH1 0x0
0x87a DUP2
0x87b MLOAD
0x87c DUP2
0x87d LT
0x87e PUSH2 0x883
0x881 JUMPI
---
0x867: JUMPDEST 
0x869: V800 = 0x20
0x86b: V801 = ADD 0x20 S1
0x86d: V802 = 0x20
0x86f: V803 = MUL 0x20 0x5
0x870: V804 = ADD 0xa0 V801
0x871: V805 = M[V804]
0x874: V806 = 0x835
0x878: V807 = 0x0
0x87b: V808 = M[S6]
0x87d: V809 = LT 0x0 V808
0x87e: V810 = 0x883
0x881: JUMPI 0x883 V809
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S12, S11, S10, S9, S8, {0x6b9, 0x7b4}, S6, S5, S4, S3, 0x0, S1, 0x5]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V805, 0x835, S6, 0x0]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S12, S11, S10, S9, S8, {0x6b9, 0x7b4}, S6, S5, S4, S3, V805, 0x835, S6, 0x0]

================================

Block 0x882
[0x882:0x882]
---
Predecessors: [0x867]
Successors: []
---
0x882 INVALID
---
0x882: INVALID 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S13, S12, S11, S10, S9, {0x6b9, 0x7b4}, S7, S6, S5, S4, V805, 0x835, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S13, S12, S11, S10, S9, {0x6b9, 0x7b4}, S7, S6, S5, S4, V805, 0x835, S1, 0x0]

================================

Block 0x883
[0x883:0x898]
---
Predecessors: [0x867]
Successors: [0x899, 0x89a]
---
0x883 JUMPDEST
0x884 SWAP1
0x885 PUSH1 0x20
0x887 ADD
0x888 SWAP1
0x889 PUSH1 0x20
0x88b MUL
0x88c ADD
0x88d MLOAD
0x88e DUP6
0x88f PUSH1 0x0
0x891 DUP2
0x892 MLOAD
0x893 DUP2
0x894 LT
0x895 PUSH2 0x89a
0x898 JUMPI
---
0x883: JUMPDEST 
0x885: V811 = 0x20
0x887: V812 = ADD 0x20 S1
0x889: V813 = 0x20
0x88b: V814 = MUL 0x20 0x0
0x88c: V815 = ADD 0x0 V812
0x88d: V816 = M[V815]
0x88f: V817 = 0x0
0x892: V818 = M[S6]
0x894: V819 = LT 0x0 V818
0x895: V820 = 0x89a
0x898: JUMPI 0x89a V819
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S13, S12, S11, S10, S9, {0x6b9, 0x7b4}, S7, S6, S5, S4, V805, 0x835, S1, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V816, S6, 0x0]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S13, S12, S11, S10, S9, {0x6b9, 0x7b4}, S7, S6, S5, S4, V805, 0x835, V816, S6, 0x0]

================================

Block 0x899
[0x899:0x899]
---
Predecessors: [0x883]
Successors: []
---
0x899 INVALID
---
0x899: INVALID 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S14, S13, S12, S11, S10, {0x6b9, 0x7b4}, S8, S7, S6, S5, S4, 0x835, V816, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S14, S13, S12, S11, S10, {0x6b9, 0x7b4}, S8, S7, S6, S5, S4, 0x835, V816, S1, 0x0]

================================

Block 0x89a
[0x89a:0x8af]
---
Predecessors: [0x883]
Successors: [0x8b0, 0x8b1]
---
0x89a JUMPDEST
0x89b SWAP1
0x89c PUSH1 0x20
0x89e ADD
0x89f SWAP1
0x8a0 PUSH1 0x20
0x8a2 MUL
0x8a3 ADD
0x8a4 MLOAD
0x8a5 DUP8
0x8a6 PUSH1 0x1
0x8a8 DUP2
0x8a9 MLOAD
0x8aa DUP2
0x8ab LT
0x8ac PUSH2 0x8b1
0x8af JUMPI
---
0x89a: JUMPDEST 
0x89c: V821 = 0x20
0x89e: V822 = ADD 0x20 S1
0x8a0: V823 = 0x20
0x8a2: V824 = MUL 0x20 0x0
0x8a3: V825 = ADD 0x0 V822
0x8a4: V826 = M[V825]
0x8a6: V827 = 0x1
0x8a9: V828 = M[S8]
0x8ab: V829 = LT 0x1 V828
0x8ac: V830 = 0x8b1
0x8af: JUMPI 0x8b1 V829
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S14, S13, S12, S11, S10, {0x6b9, 0x7b4}, S8, S7, S6, S5, S4, 0x835, V816, S1, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V826, S8, 0x1]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S14, S13, S12, S11, S10, {0x6b9, 0x7b4}, S8, S7, S6, S5, S4, 0x835, V816, V826, S8, 0x1]

================================

Block 0x8b0
[0x8b0:0x8b0]
---
Predecessors: [0x89a]
Successors: []
---
0x8b0 INVALID
---
0x8b0: INVALID 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S15, S14, S13, S12, S11, {0x6b9, 0x7b4}, S9, S8, S7, S6, S5, 0x835, S3, V826, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S15, S14, S13, S12, S11, {0x6b9, 0x7b4}, S9, S8, S7, S6, S5, 0x835, S3, V826, S1, 0x1]

================================

Block 0x8b1
[0x8b1:0x8c6]
---
Predecessors: [0x89a]
Successors: [0x8c7, 0x8c8]
---
0x8b1 JUMPDEST
0x8b2 SWAP1
0x8b3 PUSH1 0x20
0x8b5 ADD
0x8b6 SWAP1
0x8b7 PUSH1 0x20
0x8b9 MUL
0x8ba ADD
0x8bb MLOAD
0x8bc DUP8
0x8bd PUSH1 0x1
0x8bf DUP2
0x8c0 MLOAD
0x8c1 DUP2
0x8c2 LT
0x8c3 PUSH2 0x8c8
0x8c6 JUMPI
---
0x8b1: JUMPDEST 
0x8b3: V831 = 0x20
0x8b5: V832 = ADD 0x20 S1
0x8b7: V833 = 0x20
0x8b9: V834 = MUL 0x20 0x1
0x8ba: V835 = ADD 0x20 V832
0x8bb: V836 = M[V835]
0x8bd: V837 = 0x1
0x8c0: V838 = M[S8]
0x8c2: V839 = LT 0x1 V838
0x8c3: V840 = 0x8c8
0x8c6: JUMPI 0x8c8 V839
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S15, S14, S13, S12, S11, {0x6b9, 0x7b4}, S9, S8, S7, S6, S5, 0x835, S3, V826, S1, 0x1]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V836, S8, 0x1]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S15, S14, S13, S12, S11, {0x6b9, 0x7b4}, S9, S8, S7, S6, S5, 0x835, S3, V826, V836, S8, 0x1]

================================

Block 0x8c7
[0x8c7:0x8c7]
---
Predecessors: [0x8b1]
Successors: []
---
0x8c7 INVALID
---
0x8c7: INVALID 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S16, S15, S14, S13, S12, {0x6b9, 0x7b4}, S10, S9, S8, S7, S6, 0x835, S4, S3, V836, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S16, S15, S14, S13, S12, {0x6b9, 0x7b4}, S10, S9, S8, S7, S6, 0x835, S4, S3, V836, S1, 0x1]

================================

Block 0x8c8
[0x8c8:0x8dd]
---
Predecessors: [0x8b1]
Successors: [0x8de, 0x8df]
---
0x8c8 JUMPDEST
0x8c9 SWAP1
0x8ca PUSH1 0x20
0x8cc ADD
0x8cd SWAP1
0x8ce PUSH1 0x20
0x8d0 MUL
0x8d1 ADD
0x8d2 MLOAD
0x8d3 DUP9
0x8d4 PUSH1 0x3
0x8d6 DUP2
0x8d7 MLOAD
0x8d8 DUP2
0x8d9 LT
0x8da PUSH2 0x8df
0x8dd JUMPI
---
0x8c8: JUMPDEST 
0x8ca: V841 = 0x20
0x8cc: V842 = ADD 0x20 S1
0x8ce: V843 = 0x20
0x8d0: V844 = MUL 0x20 0x1
0x8d1: V845 = ADD 0x20 V842
0x8d2: V846 = M[V845]
0x8d4: V847 = 0x3
0x8d7: V848 = M[S9]
0x8d9: V849 = LT 0x3 V848
0x8da: V850 = 0x8df
0x8dd: JUMPI 0x8df V849
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S16, S15, S14, S13, S12, {0x6b9, 0x7b4}, S10, S9, S8, S7, S6, 0x835, S4, S3, V836, S1, 0x1]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V846, S9, 0x3]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S16, S15, S14, S13, S12, {0x6b9, 0x7b4}, S10, S9, S8, S7, S6, 0x835, S4, S3, V836, V846, S9, 0x3]

================================

Block 0x8de
[0x8de:0x8de]
---
Predecessors: [0x8c8]
Successors: []
---
0x8de INVALID
---
0x8de: INVALID 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S17, S16, S15, S14, S13, {0x6b9, 0x7b4}, S11, S10, S9, S8, S7, 0x835, S5, S4, S3, V846, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S17, S16, S15, S14, S13, {0x6b9, 0x7b4}, S11, S10, S9, S8, S7, 0x835, S5, S4, S3, V846, S1, 0x3]

================================

Block 0x8df
[0x8df:0x8f4]
---
Predecessors: [0x8c8]
Successors: [0x8f5, 0x8f6]
---
0x8df JUMPDEST
0x8e0 SWAP1
0x8e1 PUSH1 0x20
0x8e3 ADD
0x8e4 SWAP1
0x8e5 PUSH1 0x20
0x8e7 MUL
0x8e8 ADD
0x8e9 MLOAD
0x8ea DUP10
0x8eb PUSH1 0x4
0x8ed DUP2
0x8ee MLOAD
0x8ef DUP2
0x8f0 LT
0x8f1 PUSH2 0x8f6
0x8f4 JUMPI
---
0x8df: JUMPDEST 
0x8e1: V851 = 0x20
0x8e3: V852 = ADD 0x20 S1
0x8e5: V853 = 0x20
0x8e7: V854 = MUL 0x20 0x3
0x8e8: V855 = ADD 0x60 V852
0x8e9: V856 = M[V855]
0x8eb: V857 = 0x4
0x8ee: V858 = M[S10]
0x8f0: V859 = LT 0x4 V858
0x8f1: V860 = 0x8f6
0x8f4: JUMPI 0x8f6 V859
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S17, S16, S15, S14, S13, {0x6b9, 0x7b4}, S11, S10, S9, S8, S7, 0x835, S5, S4, S3, V846, S1, 0x3]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V856, S10, 0x4]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S17, S16, S15, S14, S13, {0x6b9, 0x7b4}, S11, S10, S9, S8, S7, 0x835, S5, S4, S3, V846, V856, S10, 0x4]

================================

Block 0x8f5
[0x8f5:0x8f5]
---
Predecessors: [0x8df]
Successors: []
---
0x8f5 INVALID
---
0x8f5: INVALID 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S18, S17, S16, S15, S14, {0x6b9, 0x7b4}, S12, S11, S10, S9, S8, 0x835, S6, S5, S4, S3, V856, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S18, S17, S16, S15, S14, {0x6b9, 0x7b4}, S12, S11, S10, S9, S8, 0x835, S6, S5, S4, S3, V856, S1, 0x4]

================================

Block 0x8f6
[0x8f6:0x90b]
---
Predecessors: [0x8df]
Successors: [0x90c, 0x90d]
---
0x8f6 JUMPDEST
0x8f7 SWAP1
0x8f8 PUSH1 0x20
0x8fa ADD
0x8fb SWAP1
0x8fc PUSH1 0x20
0x8fe MUL
0x8ff ADD
0x900 MLOAD
0x901 DUP12
0x902 PUSH1 0x2
0x904 DUP2
0x905 MLOAD
0x906 DUP2
0x907 LT
0x908 PUSH2 0x90d
0x90b JUMPI
---
0x8f6: JUMPDEST 
0x8f8: V861 = 0x20
0x8fa: V862 = ADD 0x20 S1
0x8fc: V863 = 0x20
0x8fe: V864 = MUL 0x20 0x4
0x8ff: V865 = ADD 0x80 V862
0x900: V866 = M[V865]
0x902: V867 = 0x2
0x905: V868 = M[S12]
0x907: V869 = LT 0x2 V868
0x908: V870 = 0x90d
0x90b: JUMPI 0x90d V869
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S18, S17, S16, S15, S14, {0x6b9, 0x7b4}, S12, S11, S10, S9, S8, 0x835, S6, S5, S4, S3, V856, S1, 0x4]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V866, S12, 0x2]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S18, S17, S16, S15, S14, {0x6b9, 0x7b4}, S12, S11, S10, S9, S8, 0x835, S6, S5, S4, S3, V856, V866, S12, 0x2]

================================

Block 0x90c
[0x90c:0x90c]
---
Predecessors: [0x8f6]
Successors: []
---
0x90c INVALID
---
0x90c: INVALID 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S19, S18, S17, S16, S15, {0x6b9, 0x7b4}, S13, S12, S11, S10, S9, 0x835, S7, S6, S5, S4, S3, V866, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S19, S18, S17, S16, S15, {0x6b9, 0x7b4}, S13, S12, S11, S10, S9, 0x835, S7, S6, S5, S4, S3, V866, S1, 0x2]

================================

Block 0x90d
[0x90d:0x925]
---
Predecessors: [0x8f6]
Successors: [0x926, 0x927]
---
0x90d JUMPDEST
0x90e SWAP1
0x90f PUSH1 0x20
0x911 ADD
0x912 SWAP1
0x913 PUSH1 0x20
0x915 MUL
0x916 ADD
0x917 MLOAD
0x918 DUP9
0x919 DUP12
0x91a DUP12
0x91b DUP15
0x91c PUSH1 0x2
0x91e DUP2
0x91f MLOAD
0x920 DUP2
0x921 LT
0x922 PUSH2 0x927
0x925 JUMPI
---
0x90d: JUMPDEST 
0x90f: V871 = 0x20
0x911: V872 = ADD 0x20 S1
0x913: V873 = 0x20
0x915: V874 = MUL 0x20 0x2
0x916: V875 = ADD 0x40 V872
0x917: V876 = M[V875]
0x91c: V877 = 0x2
0x91f: V878 = M[S12]
0x921: V879 = LT 0x2 V878
0x922: V880 = 0x927
0x925: JUMPI 0x927 V879
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S19, S18, S17, S16, S15, {0x6b9, 0x7b4}, S13, S12, S11, S10, S9, 0x835, S7, S6, S5, S4, S3, V866, S1, 0x2]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V876, S9, S11, S10, S12, 0x2]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S19, S18, S17, S16, S15, {0x6b9, 0x7b4}, S13, S12, S11, S10, S9, 0x835, S7, S6, S5, S4, S3, V866, V876, S9, S11, S10, S12, 0x2]

================================

Block 0x926
[0x926:0x926]
---
Predecessors: [0x90d]
Successors: []
---
0x926 INVALID
---
0x926: INVALID 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, V876, S4, S3, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, V876, S4, S3, S2, S1, 0x2]

================================

Block 0x927
[0x927:0x935]
---
Predecessors: [0x90d]
Successors: [0x93f]
---
0x927 JUMPDEST
0x928 SWAP1
0x929 PUSH1 0x20
0x92b ADD
0x92c SWAP1
0x92d PUSH1 0x20
0x92f MUL
0x930 ADD
0x931 MLOAD
0x932 PUSH2 0x93f
0x935 JUMP
---
0x927: JUMPDEST 
0x929: V881 = 0x20
0x92b: V882 = ADD 0x20 S1
0x92d: V883 = 0x20
0x92f: V884 = MUL 0x20 0x2
0x930: V885 = ADD 0x40 V882
0x931: V886 = M[V885]
0x932: V887 = 0x93f
0x935: JUMP 0x93f
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, V876, S4, S3, S2, S1, 0x2]
Stack pops: 2
Stack additions: [V886]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, V876, S4, S3, S2, V886]

================================

Block 0x936
[0x936:0x936]
---
Predecessors: []
Successors: [0x937]
---
0x936 JUMPDEST
---
0x936: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x937
[0x937:0x937]
---
Predecessors: [0x936]
Successors: [0x938]
---
0x937 JUMPDEST
---
0x937: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x938
[0x938:0x93e]
---
Predecessors: [0x937]
Successors: []
Has unresolved jump.
---
0x938 JUMPDEST
0x939 POP
0x93a POP
0x93b POP
0x93c POP
0x93d POP
0x93e JUMP
---
0x938: JUMPDEST 
0x93e: JUMP S5
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x93f
[0x93f:0x956]
---
Predecessors: [0x927]
Successors: [0x957, 0x95b]
---
0x93f JUMPDEST
0x940 PUSH1 0x0
0x942 DUP1
0x943 SLOAD
0x944 CALLER
0x945 PUSH1 0x1
0x947 PUSH1 0xa0
0x949 PUSH1 0x2
0x94b EXP
0x94c SUB
0x94d SWAP1
0x94e DUP2
0x94f AND
0x950 SWAP2
0x951 AND
0x952 EQ
0x953 PUSH2 0x95b
0x956 JUMPI
---
0x93f: JUMPDEST 
0x940: V888 = 0x0
0x943: V889 = S[0x0]
0x944: V890 = CALLER
0x945: V891 = 0x1
0x947: V892 = 0xa0
0x949: V893 = 0x2
0x94b: V894 = EXP 0x2 0xa0
0x94c: V895 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94f: V896 = AND 0xffffffffffffffffffffffffffffffffffffffff V890
0x951: V897 = AND V889 0xffffffffffffffffffffffffffffffffffffffff
0x952: V898 = EQ V897 V896
0x953: V899 = 0x95b
0x956: JUMPI 0x95b V898
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S22, S21, S20, S19, S18, {0x6b9, 0x7b4}, S16, S15, S14, S13, S12, 0x835, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V886]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S22, S21, S20, S19, S18, {0x6b9, 0x7b4}, S16, S15, S14, S13, S12, 0x835, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V886, 0x0]

================================

Block 0x957
[0x957:0x95a]
---
Predecessors: [0x93f]
Successors: []
---
0x957 PUSH1 0x0
0x959 DUP1
0x95a REVERT
---
0x957: V900 = 0x0
0x95a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x95b
[0x95b:0xa10]
---
Predecessors: [0x93f]
Successors: [0xa11, 0xa15]
---
0x95b JUMPDEST
0x95c POP
0x95d PUSH1 0x1
0x95f SLOAD
0x960 PUSH1 0x1
0x962 PUSH1 0xa0
0x964 PUSH1 0x2
0x966 EXP
0x967 SUB
0x968 AND
0x969 DUP1
0x96a PUSH4 0x6c86888b
0x96f DUP14
0x970 DUP14
0x971 DUP14
0x972 DUP14
0x973 DUP14
0x974 DUP14
0x975 DUP14
0x976 DUP14
0x977 DUP14
0x978 DUP14
0x979 DUP14
0x97a ADDRESS
0x97b PUSH1 0x0
0x97d PUSH1 0x40
0x97f MLOAD
0x980 PUSH1 0x20
0x982 ADD
0x983 MSTORE
0x984 PUSH1 0x40
0x986 MLOAD
0x987 PUSH1 0xe0
0x989 PUSH1 0x2
0x98b EXP
0x98c PUSH4 0xffffffff
0x991 DUP16
0x992 AND
0x993 MUL
0x994 DUP2
0x995 MSTORE
0x996 PUSH1 0x1
0x998 PUSH1 0xa0
0x99a PUSH1 0x2
0x99c EXP
0x99d SUB
0x99e SWAP13
0x99f DUP14
0x9a0 AND
0x9a1 PUSH1 0x4
0x9a3 DUP3
0x9a4 ADD
0x9a5 MSTORE
0x9a6 PUSH1 0x24
0x9a8 DUP2
0x9a9 ADD
0x9aa SWAP12
0x9ab SWAP1
0x9ac SWAP12
0x9ad MSTORE
0x9ae SWAP9
0x9af DUP12
0x9b0 AND
0x9b1 PUSH1 0x44
0x9b3 DUP12
0x9b4 ADD
0x9b5 MSTORE
0x9b6 PUSH1 0x64
0x9b8 DUP11
0x9b9 ADD
0x9ba SWAP8
0x9bb SWAP1
0x9bc SWAP8
0x9bd MSTORE
0x9be PUSH1 0x84
0x9c0 DUP10
0x9c1 ADD
0x9c2 SWAP6
0x9c3 SWAP1
0x9c4 SWAP6
0x9c5 MSTORE
0x9c6 PUSH1 0xa4
0x9c8 DUP9
0x9c9 ADD
0x9ca SWAP4
0x9cb SWAP1
0x9cc SWAP4
0x9cd MSTORE
0x9ce SWAP1
0x9cf DUP8
0x9d0 AND
0x9d1 PUSH1 0xc4
0x9d3 DUP8
0x9d4 ADD
0x9d5 MSTORE
0x9d6 PUSH1 0xff
0x9d8 AND
0x9d9 PUSH1 0xe4
0x9db DUP7
0x9dc ADD
0x9dd MSTORE
0x9de PUSH2 0x104
0x9e1 DUP6
0x9e2 ADD
0x9e3 MSTORE
0x9e4 PUSH2 0x124
0x9e7 DUP5
0x9e8 ADD
0x9e9 MSTORE
0x9ea PUSH2 0x144
0x9ed DUP4
0x9ee ADD
0x9ef MSTORE
0x9f0 SWAP1
0x9f1 SWAP2
0x9f2 AND
0x9f3 PUSH2 0x164
0x9f6 DUP3
0x9f7 ADD
0x9f8 MSTORE
0x9f9 PUSH2 0x184
0x9fc ADD
0x9fd PUSH1 0x20
0x9ff PUSH1 0x40
0xa01 MLOAD
0xa02 DUP1
0xa03 DUP4
0xa04 SUB
0xa05 DUP2
0xa06 PUSH1 0x0
0xa08 DUP8
0xa09 DUP1
0xa0a EXTCODESIZE
0xa0b ISZERO
0xa0c ISZERO
0xa0d PUSH2 0xa15
0xa10 JUMPI
---
0x95b: JUMPDEST 
0x95d: V901 = 0x1
0x95f: V902 = S[0x1]
0x960: V903 = 0x1
0x962: V904 = 0xa0
0x964: V905 = 0x2
0x966: V906 = EXP 0x2 0xa0
0x967: V907 = SUB 0x10000000000000000000000000000000000000000 0x1
0x968: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V902
0x96a: V909 = 0x6c86888b
0x97a: V910 = ADDRESS
0x97b: V911 = 0x0
0x97d: V912 = 0x40
0x97f: V913 = M[0x40]
0x980: V914 = 0x20
0x982: V915 = ADD 0x20 V913
0x983: M[V915] = 0x0
0x984: V916 = 0x40
0x986: V917 = M[0x40]
0x987: V918 = 0xe0
0x989: V919 = 0x2
0x98b: V920 = EXP 0x2 0xe0
0x98c: V921 = 0xffffffff
0x992: V922 = AND 0x6c86888b 0xffffffff
0x993: V923 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x995: M[V917] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x996: V924 = 0x1
0x998: V925 = 0xa0
0x99a: V926 = 0x2
0x99c: V927 = EXP 0x2 0xa0
0x99d: V928 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a0: V929 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x9a1: V930 = 0x4
0x9a4: V931 = ADD V917 0x4
0x9a5: M[V931] = V929
0x9a6: V932 = 0x24
0x9a9: V933 = ADD V917 0x24
0x9ad: M[V933] = S10
0x9b0: V934 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x9b1: V935 = 0x44
0x9b4: V936 = ADD V917 0x44
0x9b5: M[V936] = V934
0x9b6: V937 = 0x64
0x9b9: V938 = ADD V917 0x64
0x9bd: M[V938] = S8
0x9be: V939 = 0x84
0x9c1: V940 = ADD V917 0x84
0x9c5: M[V940] = S7
0x9c6: V941 = 0xa4
0x9c9: V942 = ADD V917 0xa4
0x9cd: M[V942] = S6
0x9d0: V943 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x9d1: V944 = 0xc4
0x9d4: V945 = ADD V917 0xc4
0x9d5: M[V945] = V943
0x9d6: V946 = 0xff
0x9d8: V947 = AND 0xff S4
0x9d9: V948 = 0xe4
0x9dc: V949 = ADD V917 0xe4
0x9dd: M[V949] = V947
0x9de: V950 = 0x104
0x9e2: V951 = ADD V917 0x104
0x9e3: M[V951] = S3
0x9e4: V952 = 0x124
0x9e8: V953 = ADD V917 0x124
0x9e9: M[V953] = S2
0x9ea: V954 = 0x144
0x9ee: V955 = ADD V917 0x144
0x9ef: M[V955] = S1
0x9f2: V956 = AND 0xffffffffffffffffffffffffffffffffffffffff V910
0x9f3: V957 = 0x164
0x9f7: V958 = ADD V917 0x164
0x9f8: M[V958] = V956
0x9f9: V959 = 0x184
0x9fc: V960 = ADD 0x184 V917
0x9fd: V961 = 0x20
0x9ff: V962 = 0x40
0xa01: V963 = M[0x40]
0xa04: V964 = SUB V960 V963
0xa06: V965 = 0x0
0xa0a: V966 = EXTCODESIZE V908
0xa0b: V967 = ISZERO V966
0xa0c: V968 = ISZERO V967
0xa0d: V969 = 0xa15
0xa10: JUMPI 0xa15 V968
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V908, V908, 0x6c86888b, V960, 0x20, V963, V964, V963, 0x0, V908]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V908, V908, 0x6c86888b, V960, 0x20, V963, V964, V963, 0x0, V908]

================================

Block 0xa11
[0xa11:0xa14]
---
Predecessors: [0x95b]
Successors: []
---
0xa11 PUSH1 0x0
0xa13 DUP1
0xa14 REVERT
---
0xa11: V970 = 0x0
0xa14: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S32, S31, S30, S29, S28, {0x6b9, 0x7b4}, S26, S25, S24, S23, S22, 0x835, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V908, V908, 0x6c86888b, V960, 0x20, V963, V964, V963, 0x0, V908]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S32, S31, S30, S29, S28, {0x6b9, 0x7b4}, S26, S25, S24, S23, S22, 0x835, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V908, V908, 0x6c86888b, V960, 0x20, V963, V964, V963, 0x0, V908]

================================

Block 0xa15
[0xa15:0xa21]
---
Predecessors: [0x95b]
Successors: [0xa22, 0xa26]
---
0xa15 JUMPDEST
0xa16 PUSH2 0x2c6
0xa19 GAS
0xa1a SUB
0xa1b CALL
0xa1c ISZERO
0xa1d ISZERO
0xa1e PUSH2 0xa26
0xa21 JUMPI
---
0xa15: JUMPDEST 
0xa16: V971 = 0x2c6
0xa19: V972 = GAS
0xa1a: V973 = SUB V972 0x2c6
0xa1b: V974 = CALL V973 V908 0x0 V963 V964 V963 0x20
0xa1c: V975 = ISZERO V974
0xa1d: V976 = ISZERO V975
0xa1e: V977 = 0xa26
0xa21: JUMPI 0xa26 V976
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S32, S31, S30, S29, S28, {0x6b9, 0x7b4}, S26, S25, S24, S23, S22, 0x835, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V908, V908, 0x6c86888b, V960, 0x20, V963, V964, V963, 0x0, V908]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S32, S31, S30, S29, S28, {0x6b9, 0x7b4}, S26, S25, S24, S23, S22, 0x835, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V908, V908, 0x6c86888b, V960]

================================

Block 0xa22
[0xa22:0xa25]
---
Predecessors: [0xa15]
Successors: []
---
0xa22 PUSH1 0x0
0xa24 DUP1
0xa25 REVERT
---
0xa22: V978 = 0x0
0xa25: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S26, S25, S24, S23, S22, {0x6b9, 0x7b4}, S20, S19, S18, S17, S16, 0x835, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x6c86888b, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S26, S25, S24, S23, S22, {0x6b9, 0x7b4}, S20, S19, S18, S17, S16, 0x835, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x6c86888b, S0]

================================

Block 0xa26
[0xa26:0xa35]
---
Predecessors: [0xa15]
Successors: [0xa36, 0xb30]
---
0xa26 JUMPDEST
0xa27 POP
0xa28 POP
0xa29 POP
0xa2a PUSH1 0x40
0xa2c MLOAD
0xa2d DUP1
0xa2e MLOAD
0xa2f SWAP1
0xa30 POP
0xa31 ISZERO
0xa32 PUSH2 0xb30
0xa35 JUMPI
---
0xa26: JUMPDEST 
0xa2a: V979 = 0x40
0xa2c: V980 = M[0x40]
0xa2e: V981 = M[V980]
0xa31: V982 = ISZERO V981
0xa32: V983 = 0xb30
0xa35: JUMPI 0xb30 V982
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S26, S25, S24, S23, S22, {0x6b9, 0x7b4}, S20, S19, S18, S17, S16, 0x835, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x6c86888b, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S26, S25, S24, S23, S22, {0x6b9, 0x7b4}, S20, S19, S18, S17, S16, 0x835, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xa36
[0xa36:0xb12]
---
Predecessors: [0xa26]
Successors: [0xb13, 0xb17]
---
0xa36 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xa57 PUSH1 0x14
0xa59 PUSH1 0x40
0xa5b MLOAD
0xa5c SWAP1
0xa5d DUP2
0xa5e MSTORE
0xa5f PUSH1 0x20
0xa61 ADD
0xa62 PUSH1 0x40
0xa64 MLOAD
0xa65 DUP1
0xa66 SWAP2
0xa67 SUB
0xa68 SWAP1
0xa69 LOG1
0xa6a DUP1
0xa6b PUSH1 0x1
0xa6d PUSH1 0xa0
0xa6f PUSH1 0x2
0xa71 EXP
0xa72 SUB
0xa73 AND
0xa74 PUSH4 0xa19b14a
0xa79 DUP14
0xa7a DUP14
0xa7b DUP14
0xa7c DUP14
0xa7d DUP14
0xa7e DUP14
0xa7f DUP14
0xa80 DUP14
0xa81 DUP14
0xa82 DUP14
0xa83 DUP14
0xa84 PUSH1 0x40
0xa86 MLOAD
0xa87 PUSH1 0xe0
0xa89 PUSH1 0x2
0xa8b EXP
0xa8c PUSH4 0xffffffff
0xa91 DUP15
0xa92 AND
0xa93 MUL
0xa94 DUP2
0xa95 MSTORE
0xa96 PUSH1 0x1
0xa98 PUSH1 0xa0
0xa9a PUSH1 0x2
0xa9c EXP
0xa9d SUB
0xa9e SWAP12
0xa9f DUP13
0xaa0 AND
0xaa1 PUSH1 0x4
0xaa3 DUP3
0xaa4 ADD
0xaa5 MSTORE
0xaa6 PUSH1 0x24
0xaa8 DUP2
0xaa9 ADD
0xaaa SWAP11
0xaab SWAP1
0xaac SWAP11
0xaad MSTORE
0xaae SWAP8
0xaaf DUP11
0xab0 AND
0xab1 PUSH1 0x44
0xab3 DUP11
0xab4 ADD
0xab5 MSTORE
0xab6 PUSH1 0x64
0xab8 DUP10
0xab9 ADD
0xaba SWAP7
0xabb SWAP1
0xabc SWAP7
0xabd MSTORE
0xabe PUSH1 0x84
0xac0 DUP9
0xac1 ADD
0xac2 SWAP5
0xac3 SWAP1
0xac4 SWAP5
0xac5 MSTORE
0xac6 PUSH1 0xa4
0xac8 DUP8
0xac9 ADD
0xaca SWAP3
0xacb SWAP1
0xacc SWAP3
0xacd MSTORE
0xace SWAP1
0xacf SWAP6
0xad0 AND
0xad1 PUSH1 0xc4
0xad3 DUP6
0xad4 ADD
0xad5 MSTORE
0xad6 PUSH1 0xff
0xad8 SWAP1
0xad9 SWAP5
0xada AND
0xadb PUSH1 0xe4
0xadd DUP5
0xade ADD
0xadf MSTORE
0xae0 PUSH2 0x104
0xae3 DUP4
0xae4 ADD
0xae5 SWAP4
0xae6 SWAP1
0xae7 SWAP4
0xae8 MSTORE
0xae9 PUSH2 0x124
0xaec DUP3
0xaed ADD
0xaee SWAP3
0xaef SWAP1
0xaf0 SWAP3
0xaf1 MSTORE
0xaf2 PUSH2 0x144
0xaf5 DUP2
0xaf6 ADD
0xaf7 SWAP2
0xaf8 SWAP1
0xaf9 SWAP2
0xafa MSTORE
0xafb PUSH2 0x164
0xafe ADD
0xaff PUSH1 0x0
0xb01 PUSH1 0x40
0xb03 MLOAD
0xb04 DUP1
0xb05 DUP4
0xb06 SUB
0xb07 DUP2
0xb08 PUSH1 0x0
0xb0a DUP8
0xb0b DUP1
0xb0c EXTCODESIZE
0xb0d ISZERO
0xb0e ISZERO
0xb0f PUSH2 0xb17
0xb12 JUMPI
---
0xa36: V984 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xa57: V985 = 0x14
0xa59: V986 = 0x40
0xa5b: V987 = M[0x40]
0xa5e: M[V987] = 0x14
0xa5f: V988 = 0x20
0xa61: V989 = ADD 0x20 V987
0xa62: V990 = 0x40
0xa64: V991 = M[0x40]
0xa67: V992 = SUB V989 V991
0xa69: LOG V991 V992 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xa6b: V993 = 0x1
0xa6d: V994 = 0xa0
0xa6f: V995 = 0x2
0xa71: V996 = EXP 0x2 0xa0
0xa72: V997 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa73: V998 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa74: V999 = 0xa19b14a
0xa84: V1000 = 0x40
0xa86: V1001 = M[0x40]
0xa87: V1002 = 0xe0
0xa89: V1003 = 0x2
0xa8b: V1004 = EXP 0x2 0xe0
0xa8c: V1005 = 0xffffffff
0xa92: V1006 = AND 0xa19b14a 0xffffffff
0xa93: V1007 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0xa95: M[V1001] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0xa96: V1008 = 0x1
0xa98: V1009 = 0xa0
0xa9a: V1010 = 0x2
0xa9c: V1011 = EXP 0x2 0xa0
0xa9d: V1012 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa0: V1013 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xaa1: V1014 = 0x4
0xaa4: V1015 = ADD V1001 0x4
0xaa5: M[V1015] = V1013
0xaa6: V1016 = 0x24
0xaa9: V1017 = ADD V1001 0x24
0xaad: M[V1017] = S10
0xab0: V1018 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0xab1: V1019 = 0x44
0xab4: V1020 = ADD V1001 0x44
0xab5: M[V1020] = V1018
0xab6: V1021 = 0x64
0xab9: V1022 = ADD V1001 0x64
0xabd: M[V1022] = S8
0xabe: V1023 = 0x84
0xac1: V1024 = ADD V1001 0x84
0xac5: M[V1024] = S7
0xac6: V1025 = 0xa4
0xac9: V1026 = ADD V1001 0xa4
0xacd: M[V1026] = S6
0xad0: V1027 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xad1: V1028 = 0xc4
0xad4: V1029 = ADD V1001 0xc4
0xad5: M[V1029] = V1027
0xad6: V1030 = 0xff
0xada: V1031 = AND S4 0xff
0xadb: V1032 = 0xe4
0xade: V1033 = ADD V1001 0xe4
0xadf: M[V1033] = V1031
0xae0: V1034 = 0x104
0xae4: V1035 = ADD V1001 0x104
0xae8: M[V1035] = S3
0xae9: V1036 = 0x124
0xaed: V1037 = ADD V1001 0x124
0xaf1: M[V1037] = S2
0xaf2: V1038 = 0x144
0xaf6: V1039 = ADD V1001 0x144
0xafa: M[V1039] = S1
0xafb: V1040 = 0x164
0xafe: V1041 = ADD 0x164 V1001
0xaff: V1042 = 0x0
0xb01: V1043 = 0x40
0xb03: V1044 = M[0x40]
0xb06: V1045 = SUB V1041 V1044
0xb08: V1046 = 0x0
0xb0c: V1047 = EXTCODESIZE V998
0xb0d: V1048 = ISZERO V1047
0xb0e: V1049 = ISZERO V1048
0xb0f: V1050 = 0xb17
0xb12: JUMPI 0xb17 V1049
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V998, 0xa19b14a, V1041, 0x0, V1044, V1045, V1044, 0x0, V998]
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V998, 0xa19b14a, V1041, 0x0, V1044, V1045, V1044, 0x0, V998]

================================

Block 0xb13
[0xb13:0xb16]
---
Predecessors: [0xa36]
Successors: []
---
0xb13 PUSH1 0x0
0xb15 DUP1
0xb16 REVERT
---
0xb13: V1051 = 0x0
0xb16: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S32, S31, S30, S29, S28, {0x6b9, 0x7b4}, S26, S25, S24, S23, S22, 0x835, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V998, 0xa19b14a, V1041, 0x0, V1044, V1045, V1044, 0x0, V998]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S32, S31, S30, S29, S28, {0x6b9, 0x7b4}, S26, S25, S24, S23, S22, 0x835, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V998, 0xa19b14a, V1041, 0x0, V1044, V1045, V1044, 0x0, V998]

================================

Block 0xb17
[0xb17:0xb23]
---
Predecessors: [0xa36]
Successors: [0xb24, 0xb28]
---
0xb17 JUMPDEST
0xb18 PUSH2 0x2c6
0xb1b GAS
0xb1c SUB
0xb1d CALL
0xb1e ISZERO
0xb1f ISZERO
0xb20 PUSH2 0xb28
0xb23 JUMPI
---
0xb17: JUMPDEST 
0xb18: V1052 = 0x2c6
0xb1b: V1053 = GAS
0xb1c: V1054 = SUB V1053 0x2c6
0xb1d: V1055 = CALL V1054 V998 0x0 V1044 V1045 V1044 0x0
0xb1e: V1056 = ISZERO V1055
0xb1f: V1057 = ISZERO V1056
0xb20: V1058 = 0xb28
0xb23: JUMPI 0xb28 V1057
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S32, S31, S30, S29, S28, {0x6b9, 0x7b4}, S26, S25, S24, S23, S22, 0x835, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V998, 0xa19b14a, V1041, 0x0, V1044, V1045, V1044, 0x0, V998]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S32, S31, S30, S29, S28, {0x6b9, 0x7b4}, S26, S25, S24, S23, S22, 0x835, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V998, 0xa19b14a, V1041]

================================

Block 0xb24
[0xb24:0xb27]
---
Predecessors: [0xb17]
Successors: []
---
0xb24 PUSH1 0x0
0xb26 DUP1
0xb27 REVERT
---
0xb24: V1059 = 0x0
0xb27: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S26, S25, S24, S23, S22, {0x6b9, 0x7b4}, S20, S19, S18, S17, S16, 0x835, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa19b14a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S26, S25, S24, S23, S22, {0x6b9, 0x7b4}, S20, S19, S18, S17, S16, 0x835, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa19b14a, S0]

================================

Block 0xb28
[0xb28:0xb2f]
---
Predecessors: [0xb17]
Successors: [0xb65]
---
0xb28 JUMPDEST
0xb29 POP
0xb2a POP
0xb2b POP
0xb2c PUSH2 0xb65
0xb2f JUMP
---
0xb28: JUMPDEST 
0xb2c: V1060 = 0xb65
0xb2f: JUMP 0xb65
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S26, S25, S24, S23, S22, {0x6b9, 0x7b4}, S20, S19, S18, S17, S16, 0x835, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa19b14a, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S26, S25, S24, S23, S22, {0x6b9, 0x7b4}, S20, S19, S18, S17, S16, 0x835, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xb30
[0xb30:0xb64]
---
Predecessors: [0xa26]
Successors: [0xb65]
---
0xb30 JUMPDEST
0xb31 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xb52 PUSH1 0x15
0xb54 PUSH1 0x40
0xb56 MLOAD
0xb57 SWAP1
0xb58 DUP2
0xb59 MSTORE
0xb5a PUSH1 0x20
0xb5c ADD
0xb5d PUSH1 0x40
0xb5f MLOAD
0xb60 DUP1
0xb61 SWAP2
0xb62 SUB
0xb63 SWAP1
0xb64 LOG1
---
0xb30: JUMPDEST 
0xb31: V1061 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xb52: V1062 = 0x15
0xb54: V1063 = 0x40
0xb56: V1064 = M[0x40]
0xb59: M[V1064] = 0x15
0xb5a: V1065 = 0x20
0xb5c: V1066 = ADD 0x20 V1064
0xb5d: V1067 = 0x40
0xb5f: V1068 = M[0x40]
0xb62: V1069 = SUB V1066 V1068
0xb64: LOG V1068 V1069 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xb65
[0xb65:0xb65]
---
Predecessors: [0xb28, 0xb30]
Successors: [0xb66]
---
0xb65 JUMPDEST
---
0xb65: JUMPDEST 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xb66
[0xb66:0xb66]
---
Predecessors: [0xb65]
Successors: [0xb67]
---
0xb66 JUMPDEST
---
0xb66: JUMPDEST 
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xb67
[0xb67:0xb74]
---
Predecessors: [0xb66]
Successors: [0x835]
---
0xb67 JUMPDEST
0xb68 POP
0xb69 POP
0xb6a POP
0xb6b POP
0xb6c POP
0xb6d POP
0xb6e POP
0xb6f POP
0xb70 POP
0xb71 POP
0xb72 POP
0xb73 POP
0xb74 JUMP
---
0xb67: JUMPDEST 
0xb74: JUMP 0x835
---
Entry stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13, 0x835, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V12, 0x9a, V141, V144, V147, V149, V151, V153, V155, V157, V159, S23, S22, S21, S20, S19, {0x6b9, 0x7b4}, S17, S16, S15, S14, S13]

================================

Block 0xb75
[0xb75:0xb86]
---
Predecessors: [0x4e7, 0x4ef]
Successors: [0x4ef, 0x4f9]
---
0xb75 JUMPDEST
0xb76 PUSH1 0x20
0xb78 PUSH1 0x40
0xb7a MLOAD
0xb7b SWAP1
0xb7c DUP2
0xb7d ADD
0xb7e PUSH1 0x40
0xb80 MSTORE
0xb81 PUSH1 0x0
0xb83 DUP2
0xb84 MSTORE
0xb85 SWAP1
0xb86 JUMP
---
0xb75: JUMPDEST 
0xb76: V1070 = 0x20
0xb78: V1071 = 0x40
0xb7a: V1072 = M[0x40]
0xb7d: V1073 = ADD V1072 0x20
0xb7e: V1074 = 0x40
0xb80: M[0x40] = V1073
0xb81: V1075 = 0x0
0xb84: M[V1072] = 0x0
0xb86: JUMP {0x4ef, 0x4f9}
---
Entry stack: [V12, 0x9a, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x4ef, 0x4f9}]
Stack pops: 1
Stack additions: [V1072]
Exit stack: [V12, 0x9a, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1072]

================================

Block 0xb87
[0xb87:0xbda]
---
Predecessors: []
Successors: []
---
0xb87 JUMPDEST
0xb88 PUSH1 0x20
0xb8a PUSH1 0x40
0xb8c MLOAD
0xb8d SWAP1
0xb8e DUP2
0xb8f ADD
0xb90 PUSH1 0x40
0xb92 MSTORE
0xb93 PUSH1 0x0
0xb95 DUP2
0xb96 MSTORE
0xb97 SWAP1
0xb98 JUMP
0xb99 STOP
0xb9a LOG1
0xb9b PUSH6 0x627a7a723058
0xba2 SHA3
0xba3 MISSING 0xd1
0xba4 MISSING 0xfb
0xba5 MISSING 0x21
0xba6 LOG4
0xba7 MISSING 0xc0
0xba8 DUP15
0xba9 MISSING 0xd0
0xbaa MISSING 0xe0
0xbab MISSING 0xe4
0xbac CODECOPY
0xbad MISSING 0xca
0xbae MISSING 0xed
0xbaf SGT
0xbb0 MISSING 0xd0
0xbb1 MISSING 0xf9
0xbb2 PUSH10 0xfb9ec1db3f7074ba0795
0xbbd JUMP
0xbbe PUSH28 0xb29471ee0029
---
0xb87: JUMPDEST 
0xb88: V1076 = 0x20
0xb8a: V1077 = 0x40
0xb8c: V1078 = M[0x40]
0xb8f: V1079 = ADD V1078 0x20
0xb90: V1080 = 0x40
0xb92: M[0x40] = V1079
0xb93: V1081 = 0x0
0xb96: M[V1078] = 0x0
0xb98: JUMP S0
0xb99: STOP 
0xb9a: LOG S0 S1 S2
0xb9b: V1082 = 0x627a7a723058
0xba2: V1083 = SHA3 0x627a7a723058 S3
0xba3: MISSING 0xd1
0xba4: MISSING 0xfb
0xba5: MISSING 0x21
0xba6: LOG S0 S1 S2 S3 S4 S5
0xba7: MISSING 0xc0
0xba9: MISSING 0xd0
0xbaa: MISSING 0xe0
0xbab: MISSING 0xe4
0xbac: CODECOPY S0 S1 S2
0xbad: MISSING 0xca
0xbae: MISSING 0xed
0xbaf: V1084 = SGT S0 S1
0xbb0: MISSING 0xd0
0xbb1: MISSING 0xf9
0xbb2: V1085 = 0xfb9ec1db3f7074ba0795
0xbbd: THROW 
0xbbe: V1086 = 0xb29471ee0029
---
Entry stack: []
Stack pops: 4092
Stack additions: [0xb29471ee0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xd8e6e2c
Entry block: 0x9c
Exit block: 0xaf
Body: 0x9c, 0xa3, 0xa7, 0xaf, 0x302, 0x305

Function 1:
Public function signature: 0x2cf2c0af
Entry block: 0xc1
Exit block: 0x9a
Body: 0x9a, 0xc1, 0xc8, 0xcc, 0x308, 0x320, 0x324, 0x361, 0x365, 0x372, 0x376, 0x37b, 0x37c

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0xd9
Exit block: 0x9a
Body: 0x9a, 0xd9, 0xe0, 0xe4, 0x380, 0x397, 0x39b, 0x3ca, 0x3ce, 0x3cf, 0x3d0

Function 3:
Public function signature: 0x43d726d6
Entry block: 0xf1
Exit block: 0x3ee
Body: 0xf1, 0xf8, 0xfc, 0x3d3, 0x3ea, 0x3ee

Function 4:
Public function signature: 0x5c73dcea
Entry block: 0x106
Exit block: 0x153
Body: 0x106, 0x10d, 0x111, 0x153, 0x3ff, 0x4b6, 0x4ba, 0x4c7, 0x4cb, 0x4d7

Function 5:
Public function signature: 0x5dfb7f3f
Entry block: 0x167
Exit block: 0x9a
Body: 0x9a, 0x167, 0x16e, 0x172, 0x4e7, 0x4ef, 0x4f9, 0x510, 0x514, 0x521, 0x523, 0x534, 0x544, 0x545, 0x55c, 0x55d, 0x574, 0x575, 0x58c, 0x58d, 0x5a4, 0x5a5, 0x5bc, 0x5bd, 0x5cc, 0x5d6, 0x5e4, 0x5e5, 0x5f7, 0x5f8, 0x604, 0x605, 0x610, 0x61b, 0x628, 0x62a, 0x63b, 0x64b, 0x64c, 0x670, 0x671, 0x695, 0x696, 0x6b9, 0x6ba, 0x6bb, 0x7b4, 0x7b5, 0x7b6, 0x835, 0x839, 0x83a, 0x83e, 0x856, 0x85a, 0x866, 0x867, 0x882, 0x883, 0x899, 0x89a, 0x8b0, 0x8b1, 0x8c7, 0x8c8, 0x8de, 0x8df, 0x8f5, 0x8f6, 0x90c, 0x90d, 0x926, 0x927, 0x93f, 0x957, 0x95b, 0xa11, 0xa15, 0xa22, 0xa26, 0xa36, 0xb13, 0xb17, 0xb24, 0xb28, 0xb30, 0xb65, 0xb66, 0xb67, 0xb75

Function 6:
Public function signature: 0x70a08231
Entry block: 0x1af
Exit block: 0xaf
Body: 0xaf, 0x1af, 0x1b6, 0x1ba, 0x6cb, 0x72b, 0x72f, 0x73c, 0x740, 0x74c

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x1e0
Exit block: 0x1f3
Body: 0x1e0, 0x1e7, 0x1eb, 0x1f3, 0x752

Function 8:
Public function signature: 0xcb75bb56
Entry block: 0x20f
Exit block: 0x9a
Body: 0x9a, 0x20f, 0x216, 0x21a, 0x6b9, 0x6ba, 0x6bb, 0x761, 0x778, 0x77c, 0x78d, 0x78e, 0x7a4, 0x7a5, 0x7b4, 0x7b5, 0x7b6, 0x835, 0x839, 0x83a, 0x83e, 0x856, 0x85a, 0x866, 0x867, 0x882, 0x883, 0x899, 0x89a, 0x8b0, 0x8b1, 0x8c7, 0x8c8, 0x8de, 0x8df, 0x8f5, 0x8f6, 0x90c, 0x90d, 0x926, 0x927, 0x93f, 0x957, 0x95b, 0xa11, 0xa15, 0xa22, 0xa26, 0xa36, 0xb13, 0xb17, 0xb24, 0xb28, 0xb30, 0xb65, 0xb66, 0xb67

Function 9:
Public function signature: 0xd0e30db0
Entry block: 0x2e0
Exit block: 0x9a
Body: 0x97, 0x98, 0x9a, 0x2e0

Function 10:
Public function signature: 0xf1b83630
Entry block: 0x2ea
Exit block: 0x9a
Body: 0x9a, 0x2ea, 0x2f1, 0x2f5, 0x6b9, 0x6ba, 0x6bb, 0x7b4, 0x7b5, 0x7b6, 0x7be, 0x7d6, 0x7da, 0x820, 0x824, 0x831, 0x835, 0x839, 0x83a

Function 11:
Public fallback function
Entry block: 0x93
Exit block: 0x9a
Body: 0x93, 0x97, 0x98, 0x9a

