Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8a
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8a
0xc: JUMPI 0x8a V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x95]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x114af17
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x95
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x114af17
0x22: V15 = EQ V13 0x114af17
0x23: V16 = 0x95
0x26: JUMPI 0x95 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xc4]
---
0x27 DUP1
0x28 PUSH4 0x1d709ab4
0x2d EQ
0x2e PUSH2 0xc4
0x31 JUMPI
---
0x28: V17 = 0x1d709ab4
0x2d: V18 = EQ 0x1d709ab4 V13
0x2e: V19 = 0xc4
0x31: JUMPI 0xc4 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xda]
---
0x32 DUP1
0x33 PUSH4 0x6ca7c216
0x38 EQ
0x39 PUSH2 0xda
0x3c JUMPI
---
0x33: V20 = 0x6ca7c216
0x38: V21 = EQ 0x6ca7c216 V13
0x39: V22 = 0xda
0x3c: JUMPI 0xda V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xff]
---
0x3d DUP1
0x3e PUSH4 0x8da5cb5b
0x43 EQ
0x44 PUSH2 0xff
0x47 JUMPI
---
0x3e: V23 = 0x8da5cb5b
0x43: V24 = EQ 0x8da5cb5b V13
0x44: V25 = 0xff
0x47: JUMPI 0xff V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x112]
---
0x48 DUP1
0x49 PUSH4 0x8f272c0b
0x4e EQ
0x4f PUSH2 0x112
0x52 JUMPI
---
0x49: V26 = 0x8f272c0b
0x4e: V27 = EQ 0x8f272c0b V13
0x4f: V28 = 0x112
0x52: JUMPI 0x112 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x125]
---
0x53 DUP1
0x54 PUSH4 0xb029c2c8
0x59 EQ
0x5a PUSH2 0x125
0x5d JUMPI
---
0x54: V29 = 0xb029c2c8
0x59: V30 = EQ 0xb029c2c8 V13
0x5a: V31 = 0x125
0x5d: JUMPI 0x125 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x14d]
---
0x5e DUP1
0x5f PUSH4 0xcbc1cfd2
0x64 EQ
0x65 PUSH2 0x14d
0x68 JUMPI
---
0x5f: V32 = 0xcbc1cfd2
0x64: V33 = EQ 0xcbc1cfd2 V13
0x65: V34 = 0x14d
0x68: JUMPI 0x14d V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x160]
---
0x69 DUP1
0x6a PUSH4 0xe0187d18
0x6f EQ
0x70 PUSH2 0x160
0x73 JUMPI
---
0x6a: V35 = 0xe0187d18
0x6f: V36 = EQ 0xe0187d18 V13
0x70: V37 = 0x160
0x73: JUMPI 0x160 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x173]
---
0x74 DUP1
0x75 PUSH4 0xe4171746
0x7a EQ
0x7b PUSH2 0x173
0x7e JUMPI
---
0x75: V38 = 0xe4171746
0x7a: V39 = EQ 0xe4171746 V13
0x7b: V40 = 0x173
0x7e: JUMPI 0x173 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x186]
---
0x7f DUP1
0x80 PUSH4 0xf2fde38b
0x85 EQ
0x86 PUSH2 0x186
0x89 JUMPI
---
0x80: V41 = 0xf2fde38b
0x85: V42 = EQ 0xf2fde38b V13
0x86: V43 = 0x186
0x89: JUMPI 0x186 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x92]
---
Predecessors: [0x0, 0x7f]
Successors: [0x1a5]
---
0x8a JUMPDEST
0x8b PUSH2 0x93
0x8e CALLVALUE
0x8f PUSH2 0x1a5
0x92 JUMP
---
0x8a: JUMPDEST 
0x8b: V44 = 0x93
0x8e: V45 = CALLVALUE
0x8f: V46 = 0x1a5
0x92: JUMP 0x1a5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x93, V45]
Exit stack: [V13, 0x93, V45]

================================

Block 0x93
[0x93:0x94]
---
Predecessors: [0x294, 0x2c5, 0x377, 0x3d9, 0x429]
Successors: []
---
0x93 JUMPDEST
0x94 STOP
---
0x93: JUMPDEST 
0x94: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9b]
---
Predecessors: [0xd]
Successors: [0x9c, 0xa0]
---
0x95 JUMPDEST
0x96 CALLVALUE
0x97 ISZERO
0x98 PUSH2 0xa0
0x9b JUMPI
---
0x95: JUMPDEST 
0x96: V47 = CALLVALUE
0x97: V48 = ISZERO V47
0x98: V49 = 0xa0
0x9b: JUMPI 0xa0 V48
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x9c
[0x9c:0x9f]
---
Predecessors: [0x95]
Successors: []
---
0x9c PUSH1 0x0
0x9e DUP1
0x9f REVERT
---
0x9c: V50 = 0x0
0x9f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xa7]
---
Predecessors: [0x95]
Successors: [0x29b]
---
0xa0 JUMPDEST
0xa1 PUSH2 0xa8
0xa4 PUSH2 0x29b
0xa7 JUMP
---
0xa0: JUMPDEST 
0xa1: V51 = 0xa8
0xa4: V52 = 0x29b
0xa7: JUMP 0x29b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V13, 0xa8]

================================

Block 0xa8
[0xa8:0xc3]
---
Predecessors: [0x29b, 0x2d0, 0x2df, 0x3db, 0x3ea]
Successors: []
---
0xa8 JUMPDEST
0xa9 PUSH1 0x40
0xab MLOAD
0xac PUSH1 0x1
0xae PUSH1 0xa0
0xb0 PUSH1 0x2
0xb2 EXP
0xb3 SUB
0xb4 SWAP1
0xb5 SWAP2
0xb6 AND
0xb7 DUP2
0xb8 MSTORE
0xb9 PUSH1 0x20
0xbb ADD
0xbc PUSH1 0x40
0xbe MLOAD
0xbf DUP1
0xc0 SWAP2
0xc1 SUB
0xc2 SWAP1
0xc3 RETURN
---
0xa8: JUMPDEST 
0xa9: V53 = 0x40
0xab: V54 = M[0x40]
0xac: V55 = 0x1
0xae: V56 = 0xa0
0xb0: V57 = 0x2
0xb2: V58 = EXP 0x2 0xa0
0xb3: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6: V60 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xb8: M[V54] = V60
0xb9: V61 = 0x20
0xbb: V62 = ADD 0x20 V54
0xbc: V63 = 0x40
0xbe: V64 = M[0x40]
0xc1: V65 = SUB V62 V64
0xc3: RETURN V64 V65
---
Entry stack: [V13, 0xa8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xa8]

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0x27]
Successors: [0xcb, 0xcf]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V66 = CALLVALUE
0xc6: V67 = ISZERO V66
0xc7: V68 = 0xcf
0xca: JUMPI 0xcf V67
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V69 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0x2aa]
---
0xcf JUMPDEST
0xd0 PUSH2 0x93
0xd3 PUSH1 0x4
0xd5 CALLDATALOAD
0xd6 PUSH2 0x2aa
0xd9 JUMP
---
0xcf: JUMPDEST 
0xd0: V70 = 0x93
0xd3: V71 = 0x4
0xd5: V72 = CALLDATALOAD 0x4
0xd6: V73 = 0x2aa
0xd9: JUMP 0x2aa
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x93, V72]
Exit stack: [V13, 0x93, V72]

================================

Block 0xda
[0xda:0xe0]
---
Predecessors: [0x32]
Successors: [0xe1, 0xe5]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc ISZERO
0xdd PUSH2 0xe5
0xe0 JUMPI
---
0xda: JUMPDEST 
0xdb: V74 = CALLVALUE
0xdc: V75 = ISZERO V74
0xdd: V76 = 0xe5
0xe0: JUMPI 0xe5 V75
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe1
[0xe1:0xe4]
---
Predecessors: [0xda]
Successors: []
---
0xe1 PUSH1 0x0
0xe3 DUP1
0xe4 REVERT
---
0xe1: V77 = 0x0
0xe4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe5
[0xe5:0xec]
---
Predecessors: [0xda]
Successors: [0x2ca]
---
0xe5 JUMPDEST
0xe6 PUSH2 0xed
0xe9 PUSH2 0x2ca
0xec JUMP
---
0xe5: JUMPDEST 
0xe6: V78 = 0xed
0xe9: V79 = 0x2ca
0xec: JUMP 0x2ca
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xed]
Exit stack: [V13, 0xed]

================================

Block 0xed
[0xed:0xfe]
---
Predecessors: [0x2ca]
Successors: []
---
0xed JUMPDEST
0xee PUSH1 0x40
0xf0 MLOAD
0xf1 SWAP1
0xf2 DUP2
0xf3 MSTORE
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 PUSH1 0x40
0xf9 MLOAD
0xfa DUP1
0xfb SWAP2
0xfc SUB
0xfd SWAP1
0xfe RETURN
---
0xed: JUMPDEST 
0xee: V80 = 0x40
0xf0: V81 = M[0x40]
0xf3: M[V81] = V269
0xf4: V82 = 0x20
0xf6: V83 = ADD 0x20 V81
0xf7: V84 = 0x40
0xf9: V85 = M[0x40]
0xfc: V86 = SUB V83 V85
0xfe: RETURN V85 V86
---
Entry stack: [V13, 0xed, V269]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xed]

================================

Block 0xff
[0xff:0x105]
---
Predecessors: [0x3d]
Successors: [0x106, 0x10a]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0xff: JUMPDEST 
0x100: V87 = CALLVALUE
0x101: V88 = ISZERO V87
0x102: V89 = 0x10a
0x105: JUMPI 0x10a V88
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0xff]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V90 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x10a
[0x10a:0x111]
---
Predecessors: [0xff]
Successors: [0x2d0]
---
0x10a JUMPDEST
0x10b PUSH2 0xa8
0x10e PUSH2 0x2d0
0x111 JUMP
---
0x10a: JUMPDEST 
0x10b: V91 = 0xa8
0x10e: V92 = 0x2d0
0x111: JUMP 0x2d0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V13, 0xa8]

================================

Block 0x112
[0x112:0x118]
---
Predecessors: [0x48]
Successors: [0x119, 0x11d]
---
0x112 JUMPDEST
0x113 CALLVALUE
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x112: JUMPDEST 
0x113: V93 = CALLVALUE
0x114: V94 = ISZERO V93
0x115: V95 = 0x11d
0x118: JUMPI 0x11d V94
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x112]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V96 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11d
[0x11d:0x124]
---
Predecessors: [0x112]
Successors: [0x2df]
---
0x11d JUMPDEST
0x11e PUSH2 0xa8
0x121 PUSH2 0x2df
0x124 JUMP
---
0x11d: JUMPDEST 
0x11e: V97 = 0xa8
0x121: V98 = 0x2df
0x124: JUMP 0x2df
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V13, 0xa8]

================================

Block 0x125
[0x125:0x12b]
---
Predecessors: [0x53]
Successors: [0x12c, 0x130]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 ISZERO
0x128 PUSH2 0x130
0x12b JUMPI
---
0x125: JUMPDEST 
0x126: V99 = CALLVALUE
0x127: V100 = ISZERO V99
0x128: V101 = 0x130
0x12b: JUMPI 0x130 V100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0x125]
Successors: []
---
0x12c PUSH1 0x0
0x12e DUP1
0x12f REVERT
---
0x12c: V102 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x130
[0x130:0x14c]
---
Predecessors: [0x125]
Successors: [0x2ee]
---
0x130 JUMPDEST
0x131 PUSH2 0x93
0x134 PUSH1 0x1
0x136 PUSH1 0xa0
0x138 PUSH1 0x2
0x13a EXP
0x13b SUB
0x13c PUSH1 0x4
0x13e CALLDATALOAD
0x13f DUP2
0x140 AND
0x141 SWAP1
0x142 PUSH1 0x24
0x144 CALLDATALOAD
0x145 AND
0x146 PUSH1 0x44
0x148 CALLDATALOAD
0x149 PUSH2 0x2ee
0x14c JUMP
---
0x130: JUMPDEST 
0x131: V103 = 0x93
0x134: V104 = 0x1
0x136: V105 = 0xa0
0x138: V106 = 0x2
0x13a: V107 = EXP 0x2 0xa0
0x13b: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13c: V109 = 0x4
0x13e: V110 = CALLDATALOAD 0x4
0x140: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x142: V112 = 0x24
0x144: V113 = CALLDATALOAD 0x24
0x145: V114 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x146: V115 = 0x44
0x148: V116 = CALLDATALOAD 0x44
0x149: V117 = 0x2ee
0x14c: JUMP 0x2ee
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x93, V111, V114, V116]
Exit stack: [V13, 0x93, V111, V114, V116]

================================

Block 0x14d
[0x14d:0x153]
---
Predecessors: [0x5e]
Successors: [0x154, 0x158]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x14d: JUMPDEST 
0x14e: V118 = CALLVALUE
0x14f: V119 = ISZERO V118
0x150: V120 = 0x158
0x153: JUMPI 0x158 V119
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x14d]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V121 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x158
[0x158:0x15f]
---
Predecessors: [0x14d]
Successors: [0x386]
---
0x158 JUMPDEST
0x159 PUSH2 0x93
0x15c PUSH2 0x386
0x15f JUMP
---
0x158: JUMPDEST 
0x159: V122 = 0x93
0x15c: V123 = 0x386
0x15f: JUMP 0x386
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x93]
Exit stack: [V13, 0x93]

================================

Block 0x160
[0x160:0x166]
---
Predecessors: [0x69]
Successors: [0x167, 0x16b]
---
0x160 JUMPDEST
0x161 CALLVALUE
0x162 ISZERO
0x163 PUSH2 0x16b
0x166 JUMPI
---
0x160: JUMPDEST 
0x161: V124 = CALLVALUE
0x162: V125 = ISZERO V124
0x163: V126 = 0x16b
0x166: JUMPI 0x16b V125
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x167
[0x167:0x16a]
---
Predecessors: [0x160]
Successors: []
---
0x167 PUSH1 0x0
0x169 DUP1
0x16a REVERT
---
0x167: V127 = 0x0
0x16a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x16b
[0x16b:0x172]
---
Predecessors: [0x160]
Successors: [0x3db]
---
0x16b JUMPDEST
0x16c PUSH2 0xa8
0x16f PUSH2 0x3db
0x172 JUMP
---
0x16b: JUMPDEST 
0x16c: V128 = 0xa8
0x16f: V129 = 0x3db
0x172: JUMP 0x3db
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V13, 0xa8]

================================

Block 0x173
[0x173:0x179]
---
Predecessors: [0x74]
Successors: [0x17a, 0x17e]
---
0x173 JUMPDEST
0x174 CALLVALUE
0x175 ISZERO
0x176 PUSH2 0x17e
0x179 JUMPI
---
0x173: JUMPDEST 
0x174: V130 = CALLVALUE
0x175: V131 = ISZERO V130
0x176: V132 = 0x17e
0x179: JUMPI 0x17e V131
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x17a
[0x17a:0x17d]
---
Predecessors: [0x173]
Successors: []
---
0x17a PUSH1 0x0
0x17c DUP1
0x17d REVERT
---
0x17a: V133 = 0x0
0x17d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x17e
[0x17e:0x185]
---
Predecessors: [0x173]
Successors: [0x3ea]
---
0x17e JUMPDEST
0x17f PUSH2 0xa8
0x182 PUSH2 0x3ea
0x185 JUMP
---
0x17e: JUMPDEST 
0x17f: V134 = 0xa8
0x182: V135 = 0x3ea
0x185: JUMP 0x3ea
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V13, 0xa8]

================================

Block 0x186
[0x186:0x18c]
---
Predecessors: [0x7f]
Successors: [0x18d, 0x191]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 ISZERO
0x189 PUSH2 0x191
0x18c JUMPI
---
0x186: JUMPDEST 
0x187: V136 = CALLVALUE
0x188: V137 = ISZERO V136
0x189: V138 = 0x191
0x18c: JUMPI 0x191 V137
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x18d
[0x18d:0x190]
---
Predecessors: [0x186]
Successors: []
---
0x18d PUSH1 0x0
0x18f DUP1
0x190 REVERT
---
0x18d: V139 = 0x0
0x190: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x191
[0x191:0x1a4]
---
Predecessors: [0x186]
Successors: [0x3f9]
---
0x191 JUMPDEST
0x192 PUSH2 0x93
0x195 PUSH1 0x1
0x197 PUSH1 0xa0
0x199 PUSH1 0x2
0x19b EXP
0x19c SUB
0x19d PUSH1 0x4
0x19f CALLDATALOAD
0x1a0 AND
0x1a1 PUSH2 0x3f9
0x1a4 JUMP
---
0x191: JUMPDEST 
0x192: V140 = 0x93
0x195: V141 = 0x1
0x197: V142 = 0xa0
0x199: V143 = 0x2
0x19b: V144 = EXP 0x2 0xa0
0x19c: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19d: V146 = 0x4
0x19f: V147 = CALLDATALOAD 0x4
0x1a0: V148 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x1a1: V149 = 0x3f9
0x1a4: JUMP 0x3f9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x93, V148]
Exit stack: [V13, 0x93, V148]

================================

Block 0x1a5
[0x1a5:0x1ed]
---
Predecessors: [0x8a]
Successors: [0x1ee, 0x1f2]
---
0x1a5 JUMPDEST
0x1a6 PUSH1 0x2
0x1a8 DUP1
0x1a9 SLOAD
0x1aa PUSH1 0x5
0x1ac DUP1
0x1ad SLOAD
0x1ae PUSH1 0x6e
0x1b0 PUSH1 0x3
0x1b2 DUP7
0x1b3 MUL
0x1b4 DUP2
0x1b5 SWAP1
0x1b6 DIV
0x1b7 SWAP5
0x1b8 DUP7
0x1b9 MUL
0x1ba DUP2
0x1bb SWAP1
0x1bc DIV
0x1bd SWAP4
0x1be SWAP3
0x1bf DUP7
0x1c0 MUL
0x1c1 DIV
0x1c2 SWAP2
0x1c3 PUSH1 0x0
0x1c5 SWAP2
0x1c6 PUSH1 0x1
0x1c8 PUSH1 0xa0
0x1ca PUSH1 0x2
0x1cc EXP
0x1cd SUB
0x1ce SWAP1
0x1cf SWAP2
0x1d0 AND
0x1d1 SWAP1
0x1d2 DUP6
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 PUSH1 0x0
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db DUP1
0x1dc DUP4
0x1dd SUB
0x1de DUP2
0x1df DUP6
0x1e0 DUP9
0x1e1 DUP9
0x1e2 CALL
0x1e3 SWAP4
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 POP
0x1e8 ISZERO
0x1e9 ISZERO
0x1ea PUSH2 0x1f2
0x1ed JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V150 = 0x2
0x1a9: V151 = S[0x2]
0x1aa: V152 = 0x5
0x1ad: V153 = S[0x5]
0x1ae: V154 = 0x6e
0x1b0: V155 = 0x3
0x1b3: V156 = MUL V45 0x3
0x1b6: V157 = DIV V156 0x6e
0x1b9: V158 = MUL V45 0x2
0x1bc: V159 = DIV V158 0x6e
0x1c0: V160 = MUL V45 0x5
0x1c1: V161 = DIV V160 0x6e
0x1c3: V162 = 0x0
0x1c6: V163 = 0x1
0x1c8: V164 = 0xa0
0x1ca: V165 = 0x2
0x1cc: V166 = EXP 0x2 0xa0
0x1cd: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d0: V168 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V169 = 0x40
0x1d5: V170 = M[0x40]
0x1d6: V171 = 0x0
0x1d8: V172 = 0x40
0x1da: V173 = M[0x40]
0x1dd: V174 = SUB V170 V173
0x1e2: V175 = CALL V153 V168 V157 V173 V174 V173 0x0
0x1e8: V176 = ISZERO V175
0x1e9: V177 = ISZERO V176
0x1ea: V178 = 0x1f2
0x1ed: JUMPI 0x1f2 V177
---
Entry stack: [V13, 0x93, V45]
Stack pops: 1
Stack additions: [S0, V157, V159, V161, 0x0]
Exit stack: [V13, 0x93, V45, V157, V159, V161, 0x0]

================================

Block 0x1ee
[0x1ee:0x1f1]
---
Predecessors: [0x1a5]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 REVERT
---
0x1ee: V179 = 0x0
0x1f1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93, V45, V157, V159, V161, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V45, V157, V159, V161, 0x0]

================================

Block 0x1f2
[0x1f2:0x220]
---
Predecessors: [0x1a5]
Successors: [0x221, 0x225]
---
0x1f2 JUMPDEST
0x1f3 PUSH1 0x3
0x1f5 SLOAD
0x1f6 PUSH1 0x5
0x1f8 SLOAD
0x1f9 PUSH1 0x1
0x1fb PUSH1 0xa0
0x1fd PUSH1 0x2
0x1ff EXP
0x200 SUB
0x201 SWAP1
0x202 SWAP2
0x203 AND
0x204 SWAP1
0x205 DUP5
0x206 PUSH1 0x40
0x208 MLOAD
0x209 PUSH1 0x0
0x20b PUSH1 0x40
0x20d MLOAD
0x20e DUP1
0x20f DUP4
0x210 SUB
0x211 DUP2
0x212 DUP6
0x213 DUP9
0x214 DUP9
0x215 CALL
0x216 SWAP4
0x217 POP
0x218 POP
0x219 POP
0x21a POP
0x21b ISZERO
0x21c ISZERO
0x21d PUSH2 0x225
0x220 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V180 = 0x3
0x1f5: V181 = S[0x3]
0x1f6: V182 = 0x5
0x1f8: V183 = S[0x5]
0x1f9: V184 = 0x1
0x1fb: V185 = 0xa0
0x1fd: V186 = 0x2
0x1ff: V187 = EXP 0x2 0xa0
0x200: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x203: V189 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0x206: V190 = 0x40
0x208: V191 = M[0x40]
0x209: V192 = 0x0
0x20b: V193 = 0x40
0x20d: V194 = M[0x40]
0x210: V195 = SUB V191 V194
0x215: V196 = CALL V183 V189 V159 V194 V195 V194 0x0
0x21b: V197 = ISZERO V196
0x21c: V198 = ISZERO V197
0x21d: V199 = 0x225
0x220: JUMPI 0x225 V198
---
Entry stack: [V13, 0x93, V45, V157, V159, V161, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x93, V45, V157, V159, V161, 0x0]

================================

Block 0x221
[0x221:0x224]
---
Predecessors: [0x1f2]
Successors: []
---
0x221 PUSH1 0x0
0x223 DUP1
0x224 REVERT
---
0x221: V200 = 0x0
0x224: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93, V45, V157, V159, V161, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V45, V157, V159, V161, 0x0]

================================

Block 0x225
[0x225:0x253]
---
Predecessors: [0x1f2]
Successors: [0x254, 0x258]
---
0x225 JUMPDEST
0x226 PUSH1 0x4
0x228 SLOAD
0x229 PUSH1 0x5
0x22b SLOAD
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 SWAP1
0x235 SWAP2
0x236 AND
0x237 SWAP1
0x238 DUP4
0x239 PUSH1 0x40
0x23b MLOAD
0x23c PUSH1 0x0
0x23e PUSH1 0x40
0x240 MLOAD
0x241 DUP1
0x242 DUP4
0x243 SUB
0x244 DUP2
0x245 DUP6
0x246 DUP9
0x247 DUP9
0x248 CALL
0x249 SWAP4
0x24a POP
0x24b POP
0x24c POP
0x24d POP
0x24e ISZERO
0x24f ISZERO
0x250 PUSH2 0x258
0x253 JUMPI
---
0x225: JUMPDEST 
0x226: V201 = 0x4
0x228: V202 = S[0x4]
0x229: V203 = 0x5
0x22b: V204 = S[0x5]
0x22c: V205 = 0x1
0x22e: V206 = 0xa0
0x230: V207 = 0x2
0x232: V208 = EXP 0x2 0xa0
0x233: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V210 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x239: V211 = 0x40
0x23b: V212 = M[0x40]
0x23c: V213 = 0x0
0x23e: V214 = 0x40
0x240: V215 = M[0x40]
0x243: V216 = SUB V212 V215
0x248: V217 = CALL V204 V210 V161 V215 V216 V215 0x0
0x24e: V218 = ISZERO V217
0x24f: V219 = ISZERO V218
0x250: V220 = 0x258
0x253: JUMPI 0x258 V219
---
Entry stack: [V13, 0x93, V45, V157, V159, V161, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x93, V45, V157, V159, V161, 0x0]

================================

Block 0x254
[0x254:0x257]
---
Predecessors: [0x225]
Successors: []
---
0x254 PUSH1 0x0
0x256 DUP1
0x257 REVERT
---
0x254: V221 = 0x0
0x257: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93, V45, V157, V159, V161, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V45, V157, V159, V161, 0x0]

================================

Block 0x258
[0x258:0x28f]
---
Predecessors: [0x225]
Successors: [0x290, 0x294]
---
0x258 JUMPDEST
0x259 POP
0x25a PUSH1 0x1
0x25c SLOAD
0x25d PUSH1 0x5
0x25f SLOAD
0x260 DUP5
0x261 DUP7
0x262 SUB
0x263 DUP5
0x264 SWAP1
0x265 SUB
0x266 DUP4
0x267 SWAP1
0x268 SUB
0x269 SWAP2
0x26a PUSH1 0x1
0x26c PUSH1 0xa0
0x26e PUSH1 0x2
0x270 EXP
0x271 SUB
0x272 AND
0x273 SWAP1
0x274 DUP3
0x275 PUSH1 0x40
0x277 MLOAD
0x278 PUSH1 0x0
0x27a PUSH1 0x40
0x27c MLOAD
0x27d DUP1
0x27e DUP4
0x27f SUB
0x280 DUP2
0x281 DUP6
0x282 DUP9
0x283 DUP9
0x284 CALL
0x285 SWAP4
0x286 POP
0x287 POP
0x288 POP
0x289 POP
0x28a ISZERO
0x28b ISZERO
0x28c PUSH2 0x294
0x28f JUMPI
---
0x258: JUMPDEST 
0x25a: V222 = 0x1
0x25c: V223 = S[0x1]
0x25d: V224 = 0x5
0x25f: V225 = S[0x5]
0x262: V226 = SUB V45 V157
0x265: V227 = SUB V226 V159
0x268: V228 = SUB V227 V161
0x26a: V229 = 0x1
0x26c: V230 = 0xa0
0x26e: V231 = 0x2
0x270: V232 = EXP 0x2 0xa0
0x271: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x272: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x275: V235 = 0x40
0x277: V236 = M[0x40]
0x278: V237 = 0x0
0x27a: V238 = 0x40
0x27c: V239 = M[0x40]
0x27f: V240 = SUB V236 V239
0x284: V241 = CALL V225 V234 V228 V239 V240 V239 0x0
0x28a: V242 = ISZERO V241
0x28b: V243 = ISZERO V242
0x28c: V244 = 0x294
0x28f: JUMPI 0x294 V243
---
Entry stack: [V13, 0x93, V45, V157, V159, V161, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V228]
Exit stack: [V13, 0x93, V45, V157, V159, V161, V228]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x258]
Successors: []
---
0x290 PUSH1 0x0
0x292 DUP1
0x293 REVERT
---
0x290: V245 = 0x0
0x293: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93, V45, V157, V159, V161, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V45, V157, V159, V161, V228]

================================

Block 0x294
[0x294:0x29a]
---
Predecessors: [0x258]
Successors: [0x93]
---
0x294 JUMPDEST
0x295 POP
0x296 POP
0x297 POP
0x298 POP
0x299 POP
0x29a JUMP
---
0x294: JUMPDEST 
0x29a: JUMP 0x93
---
Entry stack: [V13, 0x93, V45, V157, V159, V161, V228]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x29b
[0x29b:0x2a9]
---
Predecessors: [0xa0]
Successors: [0xa8]
---
0x29b JUMPDEST
0x29c PUSH1 0x1
0x29e SLOAD
0x29f PUSH1 0x1
0x2a1 PUSH1 0xa0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 SUB
0x2a7 AND
0x2a8 DUP2
0x2a9 JUMP
---
0x29b: JUMPDEST 
0x29c: V246 = 0x1
0x29e: V247 = S[0x1]
0x29f: V248 = 0x1
0x2a1: V249 = 0xa0
0x2a3: V250 = 0x2
0x2a5: V251 = EXP 0x2 0xa0
0x2a6: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a7: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x2a9: JUMP 0xa8
---
Entry stack: [V13, 0xa8]
Stack pops: 1
Stack additions: [S0, V253]
Exit stack: [V13, 0xa8, V253]

================================

Block 0x2aa
[0x2aa:0x2c0]
---
Predecessors: [0xcf]
Successors: [0x2c1, 0x2c5]
---
0x2aa JUMPDEST
0x2ab PUSH1 0x0
0x2ad SLOAD
0x2ae CALLER
0x2af PUSH1 0x1
0x2b1 PUSH1 0xa0
0x2b3 PUSH1 0x2
0x2b5 EXP
0x2b6 SUB
0x2b7 SWAP1
0x2b8 DUP2
0x2b9 AND
0x2ba SWAP2
0x2bb AND
0x2bc EQ
0x2bd PUSH2 0x2c5
0x2c0 JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V254 = 0x0
0x2ad: V255 = S[0x0]
0x2ae: V256 = CALLER
0x2af: V257 = 0x1
0x2b1: V258 = 0xa0
0x2b3: V259 = 0x2
0x2b5: V260 = EXP 0x2 0xa0
0x2b6: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b9: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x2bb: V263 = AND V255 0xffffffffffffffffffffffffffffffffffffffff
0x2bc: V264 = EQ V263 V262
0x2bd: V265 = 0x2c5
0x2c0: JUMPI 0x2c5 V264
---
Entry stack: [V13, 0x93, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V72]

================================

Block 0x2c1
[0x2c1:0x2c4]
---
Predecessors: [0x2aa]
Successors: []
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 REVERT
---
0x2c1: V266 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V72]

================================

Block 0x2c5
[0x2c5:0x2c9]
---
Predecessors: [0x2aa]
Successors: [0x93]
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x5
0x2c8 SSTORE
0x2c9 JUMP
---
0x2c5: JUMPDEST 
0x2c6: V267 = 0x5
0x2c8: S[0x5] = V72
0x2c9: JUMP 0x93
---
Entry stack: [V13, 0x93, V72]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ca
[0x2ca:0x2cf]
---
Predecessors: [0xe5]
Successors: [0xed]
---
0x2ca JUMPDEST
0x2cb PUSH1 0x5
0x2cd SLOAD
0x2ce DUP2
0x2cf JUMP
---
0x2ca: JUMPDEST 
0x2cb: V268 = 0x5
0x2cd: V269 = S[0x5]
0x2cf: JUMP 0xed
---
Entry stack: [V13, 0xed]
Stack pops: 1
Stack additions: [S0, V269]
Exit stack: [V13, 0xed, V269]

================================

Block 0x2d0
[0x2d0:0x2de]
---
Predecessors: [0x10a]
Successors: [0xa8]
---
0x2d0 JUMPDEST
0x2d1 PUSH1 0x0
0x2d3 SLOAD
0x2d4 PUSH1 0x1
0x2d6 PUSH1 0xa0
0x2d8 PUSH1 0x2
0x2da EXP
0x2db SUB
0x2dc AND
0x2dd DUP2
0x2de JUMP
---
0x2d0: JUMPDEST 
0x2d1: V270 = 0x0
0x2d3: V271 = S[0x0]
0x2d4: V272 = 0x1
0x2d6: V273 = 0xa0
0x2d8: V274 = 0x2
0x2da: V275 = EXP 0x2 0xa0
0x2db: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dc: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x2de: JUMP 0xa8
---
Entry stack: [V13, 0xa8]
Stack pops: 1
Stack additions: [S0, V277]
Exit stack: [V13, 0xa8, V277]

================================

Block 0x2df
[0x2df:0x2ed]
---
Predecessors: [0x11d]
Successors: [0xa8]
---
0x2df JUMPDEST
0x2e0 PUSH1 0x3
0x2e2 SLOAD
0x2e3 PUSH1 0x1
0x2e5 PUSH1 0xa0
0x2e7 PUSH1 0x2
0x2e9 EXP
0x2ea SUB
0x2eb AND
0x2ec DUP2
0x2ed JUMP
---
0x2df: JUMPDEST 
0x2e0: V278 = 0x3
0x2e2: V279 = S[0x3]
0x2e3: V280 = 0x1
0x2e5: V281 = 0xa0
0x2e7: V282 = 0x2
0x2e9: V283 = EXP 0x2 0xa0
0x2ea: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x2ed: JUMP 0xa8
---
Entry stack: [V13, 0xa8]
Stack pops: 1
Stack additions: [S0, V285]
Exit stack: [V13, 0xa8, V285]

================================

Block 0x2ee
[0x2ee:0x304]
---
Predecessors: [0x130]
Successors: [0x305, 0x309]
---
0x2ee JUMPDEST
0x2ef PUSH1 0x0
0x2f1 SLOAD
0x2f2 CALLER
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 PUSH1 0x2
0x2f9 EXP
0x2fa SUB
0x2fb SWAP1
0x2fc DUP2
0x2fd AND
0x2fe SWAP2
0x2ff AND
0x300 EQ
0x301 PUSH2 0x309
0x304 JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V286 = 0x0
0x2f1: V287 = S[0x0]
0x2f2: V288 = CALLER
0x2f3: V289 = 0x1
0x2f5: V290 = 0xa0
0x2f7: V291 = 0x2
0x2f9: V292 = EXP 0x2 0xa0
0x2fa: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fd: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x2ff: V295 = AND V287 0xffffffffffffffffffffffffffffffffffffffff
0x300: V296 = EQ V295 V294
0x301: V297 = 0x309
0x304: JUMPI 0x309 V296
---
Entry stack: [V13, 0x93, V111, V114, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V111, V114, V116]

================================

Block 0x305
[0x305:0x308]
---
Predecessors: [0x2ee]
Successors: []
---
0x305 PUSH1 0x0
0x307 DUP1
0x308 REVERT
---
0x305: V298 = 0x0
0x308: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93, V111, V114, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V111, V114, V116]

================================

Block 0x309
[0x309:0x361]
---
Predecessors: [0x2ee]
Successors: [0x362, 0x366]
---
0x309 JUMPDEST
0x30a DUP3
0x30b PUSH1 0x1
0x30d PUSH1 0xa0
0x30f PUSH1 0x2
0x311 EXP
0x312 SUB
0x313 AND
0x314 PUSH4 0x95ea7b3
0x319 DUP4
0x31a DUP4
0x31b PUSH1 0x0
0x31d PUSH1 0x40
0x31f MLOAD
0x320 PUSH1 0x20
0x322 ADD
0x323 MSTORE
0x324 PUSH1 0x40
0x326 MLOAD
0x327 PUSH1 0xe0
0x329 PUSH1 0x2
0x32b EXP
0x32c PUSH4 0xffffffff
0x331 DUP6
0x332 AND
0x333 MUL
0x334 DUP2
0x335 MSTORE
0x336 PUSH1 0x1
0x338 PUSH1 0xa0
0x33a PUSH1 0x2
0x33c EXP
0x33d SUB
0x33e SWAP1
0x33f SWAP3
0x340 AND
0x341 PUSH1 0x4
0x343 DUP4
0x344 ADD
0x345 MSTORE
0x346 PUSH1 0x24
0x348 DUP3
0x349 ADD
0x34a MSTORE
0x34b PUSH1 0x44
0x34d ADD
0x34e PUSH1 0x20
0x350 PUSH1 0x40
0x352 MLOAD
0x353 DUP1
0x354 DUP4
0x355 SUB
0x356 DUP2
0x357 PUSH1 0x0
0x359 DUP8
0x35a DUP1
0x35b EXTCODESIZE
0x35c ISZERO
0x35d ISZERO
0x35e PUSH2 0x366
0x361 JUMPI
---
0x309: JUMPDEST 
0x30b: V299 = 0x1
0x30d: V300 = 0xa0
0x30f: V301 = 0x2
0x311: V302 = EXP 0x2 0xa0
0x312: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x313: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x314: V305 = 0x95ea7b3
0x31b: V306 = 0x0
0x31d: V307 = 0x40
0x31f: V308 = M[0x40]
0x320: V309 = 0x20
0x322: V310 = ADD 0x20 V308
0x323: M[V310] = 0x0
0x324: V311 = 0x40
0x326: V312 = M[0x40]
0x327: V313 = 0xe0
0x329: V314 = 0x2
0x32b: V315 = EXP 0x2 0xe0
0x32c: V316 = 0xffffffff
0x332: V317 = AND 0x95ea7b3 0xffffffff
0x333: V318 = MUL 0x95ea7b3 0x100000000000000000000000000000000000000000000000000000000
0x335: M[V312] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x336: V319 = 0x1
0x338: V320 = 0xa0
0x33a: V321 = 0x2
0x33c: V322 = EXP 0x2 0xa0
0x33d: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x340: V324 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0x341: V325 = 0x4
0x344: V326 = ADD V312 0x4
0x345: M[V326] = V324
0x346: V327 = 0x24
0x349: V328 = ADD V312 0x24
0x34a: M[V328] = V116
0x34b: V329 = 0x44
0x34d: V330 = ADD 0x44 V312
0x34e: V331 = 0x20
0x350: V332 = 0x40
0x352: V333 = M[0x40]
0x355: V334 = SUB V330 V333
0x357: V335 = 0x0
0x35b: V336 = EXTCODESIZE V304
0x35c: V337 = ISZERO V336
0x35d: V338 = ISZERO V337
0x35e: V339 = 0x366
0x361: JUMPI 0x366 V338
---
Entry stack: [V13, 0x93, V111, V114, V116]
Stack pops: 3
Stack additions: [S2, S1, S0, V304, 0x95ea7b3, V330, 0x20, V333, V334, V333, 0x0, V304]
Exit stack: [V13, 0x93, V111, V114, V116, V304, 0x95ea7b3, V330, 0x20, V333, V334, V333, 0x0, V304]

================================

Block 0x362
[0x362:0x365]
---
Predecessors: [0x309]
Successors: []
---
0x362 PUSH1 0x0
0x364 DUP1
0x365 REVERT
---
0x362: V340 = 0x0
0x365: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93, V111, V114, V116, V304, 0x95ea7b3, V330, 0x20, V333, V334, V333, 0x0, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V111, V114, V116, V304, 0x95ea7b3, V330, 0x20, V333, V334, V333, 0x0, V304]

================================

Block 0x366
[0x366:0x372]
---
Predecessors: [0x309]
Successors: [0x373, 0x377]
---
0x366 JUMPDEST
0x367 PUSH2 0x2c6
0x36a GAS
0x36b SUB
0x36c CALL
0x36d ISZERO
0x36e ISZERO
0x36f PUSH2 0x377
0x372 JUMPI
---
0x366: JUMPDEST 
0x367: V341 = 0x2c6
0x36a: V342 = GAS
0x36b: V343 = SUB V342 0x2c6
0x36c: V344 = CALL V343 V304 0x0 V333 V334 V333 0x20
0x36d: V345 = ISZERO V344
0x36e: V346 = ISZERO V345
0x36f: V347 = 0x377
0x372: JUMPI 0x377 V346
---
Entry stack: [V13, 0x93, V111, V114, V116, V304, 0x95ea7b3, V330, 0x20, V333, V334, V333, 0x0, V304]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x93, V111, V114, V116, V304, 0x95ea7b3, V330]

================================

Block 0x373
[0x373:0x376]
---
Predecessors: [0x366]
Successors: []
---
0x373 PUSH1 0x0
0x375 DUP1
0x376 REVERT
---
0x373: V348 = 0x0
0x376: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93, V111, V114, V116, V304, 0x95ea7b3, V330]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V111, V114, V116, V304, 0x95ea7b3, V330]

================================

Block 0x377
[0x377:0x385]
---
Predecessors: [0x366]
Successors: [0x93]
---
0x377 JUMPDEST
0x378 POP
0x379 POP
0x37a POP
0x37b PUSH1 0x40
0x37d MLOAD
0x37e DUP1
0x37f MLOAD
0x380 POP
0x381 POP
0x382 POP
0x383 POP
0x384 POP
0x385 JUMP
---
0x377: JUMPDEST 
0x37b: V349 = 0x40
0x37d: V350 = M[0x40]
0x37f: V351 = M[V350]
0x385: JUMP 0x93
---
Entry stack: [V13, 0x93, V111, V114, V116, V304, 0x95ea7b3, V330]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x386
[0x386:0x39c]
---
Predecessors: [0x158]
Successors: [0x39d, 0x3a1]
---
0x386 JUMPDEST
0x387 PUSH1 0x0
0x389 SLOAD
0x38a CALLER
0x38b PUSH1 0x1
0x38d PUSH1 0xa0
0x38f PUSH1 0x2
0x391 EXP
0x392 SUB
0x393 SWAP1
0x394 DUP2
0x395 AND
0x396 SWAP2
0x397 AND
0x398 EQ
0x399 PUSH2 0x3a1
0x39c JUMPI
---
0x386: JUMPDEST 
0x387: V352 = 0x0
0x389: V353 = S[0x0]
0x38a: V354 = CALLER
0x38b: V355 = 0x1
0x38d: V356 = 0xa0
0x38f: V357 = 0x2
0x391: V358 = EXP 0x2 0xa0
0x392: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x395: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x397: V361 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x398: V362 = EQ V361 V360
0x399: V363 = 0x3a1
0x39c: JUMPI 0x3a1 V362
---
Entry stack: [V13, 0x93]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93]

================================

Block 0x39d
[0x39d:0x3a0]
---
Predecessors: [0x386]
Successors: []
---
0x39d PUSH1 0x0
0x39f DUP1
0x3a0 REVERT
---
0x39d: V364 = 0x0
0x3a0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93]

================================

Block 0x3a1
[0x3a1:0x3d4]
---
Predecessors: [0x386]
Successors: [0x3d5, 0x3d9]
---
0x3a1 JUMPDEST
0x3a2 CALLER
0x3a3 PUSH1 0x1
0x3a5 PUSH1 0xa0
0x3a7 PUSH1 0x2
0x3a9 EXP
0x3aa SUB
0x3ab AND
0x3ac PUSH1 0x5
0x3ae SLOAD
0x3af ADDRESS
0x3b0 PUSH1 0x1
0x3b2 PUSH1 0xa0
0x3b4 PUSH1 0x2
0x3b6 EXP
0x3b7 SUB
0x3b8 AND
0x3b9 BALANCE
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd PUSH1 0x0
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 DUP1
0x3c3 DUP4
0x3c4 SUB
0x3c5 DUP2
0x3c6 DUP6
0x3c7 DUP9
0x3c8 DUP9
0x3c9 CALL
0x3ca SWAP4
0x3cb POP
0x3cc POP
0x3cd POP
0x3ce POP
0x3cf ISZERO
0x3d0 ISZERO
0x3d1 PUSH2 0x3d9
0x3d4 JUMPI
---
0x3a1: JUMPDEST 
0x3a2: V365 = CALLER
0x3a3: V366 = 0x1
0x3a5: V367 = 0xa0
0x3a7: V368 = 0x2
0x3a9: V369 = EXP 0x2 0xa0
0x3aa: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ab: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x3ac: V372 = 0x5
0x3ae: V373 = S[0x5]
0x3af: V374 = ADDRESS
0x3b0: V375 = 0x1
0x3b2: V376 = 0xa0
0x3b4: V377 = 0x2
0x3b6: V378 = EXP 0x2 0xa0
0x3b7: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b8: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x3b9: V381 = BALANCE V380
0x3ba: V382 = 0x40
0x3bc: V383 = M[0x40]
0x3bd: V384 = 0x0
0x3bf: V385 = 0x40
0x3c1: V386 = M[0x40]
0x3c4: V387 = SUB V383 V386
0x3c9: V388 = CALL V373 V371 V381 V386 V387 V386 0x0
0x3cf: V389 = ISZERO V388
0x3d0: V390 = ISZERO V389
0x3d1: V391 = 0x3d9
0x3d4: JUMPI 0x3d9 V390
---
Entry stack: [V13, 0x93]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93]

================================

Block 0x3d5
[0x3d5:0x3d8]
---
Predecessors: [0x3a1]
Successors: []
---
0x3d5 PUSH1 0x0
0x3d7 DUP1
0x3d8 REVERT
---
0x3d5: V392 = 0x0
0x3d8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93]

================================

Block 0x3d9
[0x3d9:0x3da]
---
Predecessors: [0x3a1]
Successors: [0x93]
---
0x3d9 JUMPDEST
0x3da JUMP
---
0x3d9: JUMPDEST 
0x3da: JUMP 0x93
---
Entry stack: [V13, 0x93]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x3db
[0x3db:0x3e9]
---
Predecessors: [0x16b]
Successors: [0xa8]
---
0x3db JUMPDEST
0x3dc PUSH1 0x4
0x3de SLOAD
0x3df PUSH1 0x1
0x3e1 PUSH1 0xa0
0x3e3 PUSH1 0x2
0x3e5 EXP
0x3e6 SUB
0x3e7 AND
0x3e8 DUP2
0x3e9 JUMP
---
0x3db: JUMPDEST 
0x3dc: V393 = 0x4
0x3de: V394 = S[0x4]
0x3df: V395 = 0x1
0x3e1: V396 = 0xa0
0x3e3: V397 = 0x2
0x3e5: V398 = EXP 0x2 0xa0
0x3e6: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e7: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x3e9: JUMP 0xa8
---
Entry stack: [V13, 0xa8]
Stack pops: 1
Stack additions: [S0, V400]
Exit stack: [V13, 0xa8, V400]

================================

Block 0x3ea
[0x3ea:0x3f8]
---
Predecessors: [0x17e]
Successors: [0xa8]
---
0x3ea JUMPDEST
0x3eb PUSH1 0x2
0x3ed SLOAD
0x3ee PUSH1 0x1
0x3f0 PUSH1 0xa0
0x3f2 PUSH1 0x2
0x3f4 EXP
0x3f5 SUB
0x3f6 AND
0x3f7 DUP2
0x3f8 JUMP
---
0x3ea: JUMPDEST 
0x3eb: V401 = 0x2
0x3ed: V402 = S[0x2]
0x3ee: V403 = 0x1
0x3f0: V404 = 0xa0
0x3f2: V405 = 0x2
0x3f4: V406 = EXP 0x2 0xa0
0x3f5: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f6: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x3f8: JUMP 0xa8
---
Entry stack: [V13, 0xa8]
Stack pops: 1
Stack additions: [S0, V408]
Exit stack: [V13, 0xa8, V408]

================================

Block 0x3f9
[0x3f9:0x40f]
---
Predecessors: [0x191]
Successors: [0x410, 0x414]
---
0x3f9 JUMPDEST
0x3fa PUSH1 0x0
0x3fc SLOAD
0x3fd CALLER
0x3fe PUSH1 0x1
0x400 PUSH1 0xa0
0x402 PUSH1 0x2
0x404 EXP
0x405 SUB
0x406 SWAP1
0x407 DUP2
0x408 AND
0x409 SWAP2
0x40a AND
0x40b EQ
0x40c PUSH2 0x414
0x40f JUMPI
---
0x3f9: JUMPDEST 
0x3fa: V409 = 0x0
0x3fc: V410 = S[0x0]
0x3fd: V411 = CALLER
0x3fe: V412 = 0x1
0x400: V413 = 0xa0
0x402: V414 = 0x2
0x404: V415 = EXP 0x2 0xa0
0x405: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x408: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x40a: V418 = AND V410 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V419 = EQ V418 V417
0x40c: V420 = 0x414
0x40f: JUMPI 0x414 V419
---
Entry stack: [V13, 0x93, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V148]

================================

Block 0x410
[0x410:0x413]
---
Predecessors: [0x3f9]
Successors: []
---
0x410 PUSH1 0x0
0x412 DUP1
0x413 REVERT
---
0x410: V421 = 0x0
0x413: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V148]

================================

Block 0x414
[0x414:0x424]
---
Predecessors: [0x3f9]
Successors: [0x425, 0x429]
---
0x414 JUMPDEST
0x415 PUSH1 0x1
0x417 PUSH1 0xa0
0x419 PUSH1 0x2
0x41b EXP
0x41c SUB
0x41d DUP2
0x41e AND
0x41f ISZERO
0x420 ISZERO
0x421 PUSH2 0x429
0x424 JUMPI
---
0x414: JUMPDEST 
0x415: V422 = 0x1
0x417: V423 = 0xa0
0x419: V424 = 0x2
0x41b: V425 = EXP 0x2 0xa0
0x41c: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41e: V427 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x41f: V428 = ISZERO V427
0x420: V429 = ISZERO V428
0x421: V430 = 0x429
0x424: JUMPI 0x429 V429
---
Entry stack: [V13, 0x93, V148]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x93, V148]

================================

Block 0x425
[0x425:0x428]
---
Predecessors: [0x414]
Successors: []
---
0x425 PUSH1 0x0
0x427 DUP1
0x428 REVERT
---
0x425: V431 = 0x0
0x428: REVERT 0x0 0x0
---
Entry stack: [V13, 0x93, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x93, V148]

================================

Block 0x429
[0x429:0x44a]
---
Predecessors: [0x414]
Successors: [0x93]
---
0x429 JUMPDEST
0x42a PUSH1 0x0
0x42c DUP1
0x42d SLOAD
0x42e PUSH1 0x1
0x430 PUSH1 0xa0
0x432 PUSH1 0x2
0x434 EXP
0x435 SUB
0x436 NOT
0x437 AND
0x438 PUSH1 0x1
0x43a PUSH1 0xa0
0x43c PUSH1 0x2
0x43e EXP
0x43f SUB
0x440 SWAP3
0x441 SWAP1
0x442 SWAP3
0x443 AND
0x444 SWAP2
0x445 SWAP1
0x446 SWAP2
0x447 OR
0x448 SWAP1
0x449 SSTORE
0x44a JUMP
---
0x429: JUMPDEST 
0x42a: V432 = 0x0
0x42d: V433 = S[0x0]
0x42e: V434 = 0x1
0x430: V435 = 0xa0
0x432: V436 = 0x2
0x434: V437 = EXP 0x2 0xa0
0x435: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x436: V439 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x437: V440 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V433
0x438: V441 = 0x1
0x43a: V442 = 0xa0
0x43c: V443 = 0x2
0x43e: V444 = EXP 0x2 0xa0
0x43f: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x443: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x447: V447 = OR V446 V440
0x449: S[0x0] = V447
0x44a: JUMP 0x93
---
Entry stack: [V13, 0x93, V148]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x44b
[0x44b:0x48a]
---
Predecessors: []
Successors: []
---
0x44b STOP
0x44c LOG1
0x44d PUSH6 0x627a7a723058
0x454 SHA3
0x455 SHL
0x456 MISSING 0xc2
0x457 PUSH18 0x32dac83c8052687bbcce1ac1755a0c297e6b
0x46a DUP1
0x46b MISSING 0xac
0x46c LOG3
0x46d DUP8
0x46e MISSING 0x5d
0x46f MISSING 0xef
0x470 EQ
0x471 PUSH25 0x88cf3f0029
---
0x44b: STOP 
0x44c: LOG S0 S1 S2
0x44d: V448 = 0x627a7a723058
0x454: V449 = SHA3 0x627a7a723058 S3
0x455: V450 = SHL V449 S4
0x456: MISSING 0xc2
0x457: V451 = 0x32dac83c8052687bbcce1ac1755a0c297e6b
0x46b: MISSING 0xac
0x46c: LOG S0 S1 S2 S3 S4
0x46e: MISSING 0x5d
0x46f: MISSING 0xef
0x470: V452 = EQ S0 S1
0x471: V453 = 0x88cf3f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V450, 0x32dac83c8052687bbcce1ac1755a0c297e6b, 0x32dac83c8052687bbcce1ac1755a0c297e6b, S12, S5, S6, S7, S8, S9, S10, S11, S12, 0x88cf3f0029, V452]
Exit stack: []

================================

Function 0:
Public function signature: 0x114af17
Entry block: 0x95
Exit block: 0xa8
Body: 0x95, 0x9c, 0xa0, 0xa8, 0x29b

Function 1:
Public function signature: 0x1d709ab4
Entry block: 0xc4
Exit block: 0x93
Body: 0x93, 0xc4, 0xcb, 0xcf, 0x2aa, 0x2c1, 0x2c5

Function 2:
Public function signature: 0x6ca7c216
Entry block: 0xda
Exit block: 0xed
Body: 0xda, 0xe1, 0xe5, 0xed, 0x2ca

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xff
Exit block: 0xa8
Body: 0xa8, 0xff, 0x106, 0x10a, 0x2d0

Function 4:
Public function signature: 0x8f272c0b
Entry block: 0x112
Exit block: 0xa8
Body: 0xa8, 0x112, 0x119, 0x11d, 0x2df

Function 5:
Public function signature: 0xb029c2c8
Entry block: 0x125
Exit block: 0x93
Body: 0x93, 0x125, 0x12c, 0x130, 0x2ee, 0x305, 0x309, 0x362, 0x366, 0x373, 0x377

Function 6:
Public function signature: 0xcbc1cfd2
Entry block: 0x14d
Exit block: 0x93
Body: 0x93, 0x14d, 0x154, 0x158, 0x386, 0x39d, 0x3a1, 0x3d5, 0x3d9

Function 7:
Public function signature: 0xe0187d18
Entry block: 0x160
Exit block: 0xa8
Body: 0xa8, 0x160, 0x167, 0x16b, 0x3db

Function 8:
Public function signature: 0xe4171746
Entry block: 0x173
Exit block: 0xa8
Body: 0xa8, 0x173, 0x17a, 0x17e, 0x3ea

Function 9:
Public function signature: 0xf2fde38b
Entry block: 0x186
Exit block: 0x93
Body: 0x93, 0x186, 0x18d, 0x191, 0x3f9, 0x410, 0x414, 0x425, 0x429

Function 10:
Public fallback function
Entry block: 0x8a
Exit block: 0x93
Body: 0x8a, 0x93, 0x1a5, 0x1ee, 0x1f2, 0x221, 0x225, 0x254, 0x258, 0x290, 0x294

