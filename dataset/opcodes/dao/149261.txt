Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x11b]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6fdde03
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x11b
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6fdde03
0x3b: V13 = EQ V11 0x6fdde03
0x3c: V14 = 0x11b
0x3f: JUMPI 0x11b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x1a5]
---
0x40 DUP1
0x41 PUSH4 0x10639ea0
0x46 EQ
0x47 PUSH2 0x1a5
0x4a JUMPI
---
0x41: V15 = 0x10639ea0
0x46: V16 = EQ 0x10639ea0 V11
0x47: V17 = 0x1a5
0x4a: JUMPI 0x1a5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1ce]
---
0x4b DUP1
0x4c PUSH4 0x200d2ed2
0x51 EQ
0x52 PUSH2 0x1ce
0x55 JUMPI
---
0x4c: V18 = 0x200d2ed2
0x51: V19 = EQ 0x200d2ed2 V11
0x52: V20 = 0x1ce
0x55: JUMPI 0x1ce V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x20f]
---
0x56 DUP1
0x57 PUSH4 0x66d38203
0x5c EQ
0x5d PUSH2 0x20f
0x60 JUMPI
---
0x57: V21 = 0x66d38203
0x5c: V22 = EQ 0x66d38203 V11
0x5d: V23 = 0x20f
0x60: JUMPI 0x20f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x232]
---
0x61 DUP1
0x62 PUSH4 0x88d761f2
0x67 EQ
0x68 PUSH2 0x232
0x6b JUMPI
---
0x62: V24 = 0x88d761f2
0x67: V25 = EQ 0x88d761f2 V11
0x68: V26 = 0x232
0x6b: JUMPI 0x232 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x247]
---
0x6c DUP1
0x6d PUSH4 0xa0f52da0
0x72 EQ
0x73 PUSH2 0x247
0x76 JUMPI
---
0x6d: V27 = 0xa0f52da0
0x72: V28 = EQ 0xa0f52da0 V11
0x73: V29 = 0x247
0x76: JUMPI 0x247 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x268]
---
0x77 DUP1
0x78 PUSH4 0xd0e30db0
0x7d EQ
0x7e PUSH2 0x268
0x81 JUMPI
---
0x78: V30 = 0xd0e30db0
0x7d: V31 = EQ 0xd0e30db0 V11
0x7e: V32 = 0x268
0x81: JUMPI 0x268 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0xe7]
---
Predecessors: [0x0, 0x77]
Successors: [0xe8, 0xec]
---
0x82 JUMPDEST
0x83 PUSH1 0x1
0x85 SLOAD
0x86 PUSH1 0x40
0x88 DUP1
0x89 MLOAD
0x8a PUSH32 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xab DUP2
0xac MSTORE
0xad PUSH1 0x1
0xaf PUSH1 0xa0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 SUB
0xb5 SWAP1
0xb6 SWAP3
0xb7 AND
0xb8 PUSH1 0x4
0xba DUP4
0xbb ADD
0xbc DUP2
0xbd SWAP1
0xbe MSTORE
0xbf SWAP1
0xc0 MLOAD
0xc1 SWAP1
0xc2 SWAP2
0xc3 PUSH4 0xf340fa01
0xc8 SWAP2
0xc9 ADDRESS
0xca BALANCE
0xcb SWAP2
0xcc PUSH1 0x24
0xce DUP1
0xcf DUP3
0xd0 ADD
0xd1 SWAP3
0xd2 PUSH1 0x20
0xd4 SWAP3
0xd5 SWAP1
0xd6 SWAP2
0xd7 SWAP1
0xd8 DUP3
0xd9 SWAP1
0xda SUB
0xdb ADD
0xdc DUP2
0xdd DUP6
0xde DUP9
0xdf DUP1
0xe0 EXTCODESIZE
0xe1 ISZERO
0xe2 DUP1
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0x82: JUMPDEST 
0x83: V33 = 0x1
0x85: V34 = S[0x1]
0x86: V35 = 0x40
0x89: V36 = M[0x40]
0x8a: V37 = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xac: M[V36] = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xad: V38 = 0x1
0xaf: V39 = 0xa0
0xb1: V40 = 0x2
0xb3: V41 = EXP 0x2 0xa0
0xb4: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7: V43 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V44 = 0x4
0xbb: V45 = ADD V36 0x4
0xbe: M[V45] = V43
0xc0: V46 = M[0x40]
0xc3: V47 = 0xf340fa01
0xc9: V48 = ADDRESS
0xca: V49 = BALANCE V48
0xcc: V50 = 0x24
0xd0: V51 = ADD V36 0x24
0xd2: V52 = 0x20
0xda: V53 = SUB V36 V46
0xdb: V54 = ADD V53 0x24
0xe0: V55 = EXTCODESIZE V43
0xe1: V56 = ISZERO V55
0xe3: V57 = ISZERO V56
0xe4: V58 = 0xec
0xe7: JUMPI 0xec V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Exit stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0x82]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V59 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]

================================

Block 0xec
[0xec:0xf6]
---
Predecessors: [0x82]
Successors: [0xf7, 0x100]
---
0xec JUMPDEST
0xed POP
0xee GAS
0xef CALL
0xf0 ISZERO
0xf1 DUP1
0xf2 ISZERO
0xf3 PUSH2 0x100
0xf6 JUMPI
---
0xec: JUMPDEST 
0xee: V60 = GAS
0xef: V61 = CALL V60 V43 V49 V46 V54 V46 0x20
0xf0: V62 = ISZERO V61
0xf2: V63 = ISZERO V62
0xf3: V64 = 0x100
0xf6: JUMPI 0x100 V63
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Stack pops: 7
Stack additions: [V62]
Exit stack: [V11, V43, 0xf340fa01, V49, V51, V62]

================================

Block 0xf7
[0xf7:0xff]
---
Predecessors: [0xec]
Successors: []
---
0xf7 RETURNDATASIZE
0xf8 PUSH1 0x0
0xfa DUP1
0xfb RETURNDATACOPY
0xfc RETURNDATASIZE
0xfd PUSH1 0x0
0xff REVERT
---
0xf7: V65 = RETURNDATASIZE
0xf8: V66 = 0x0
0xfb: RETURNDATACOPY 0x0 0x0 V65
0xfc: V67 = RETURNDATASIZE
0xfd: V68 = 0x0
0xff: REVERT 0x0 V67
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43, 0xf340fa01, V49, V51, V62]

================================

Block 0x100
[0x100:0x112]
---
Predecessors: [0xec]
Successors: [0x113, 0x117]
---
0x100 JUMPDEST
0x101 POP
0x102 POP
0x103 POP
0x104 POP
0x105 POP
0x106 PUSH1 0x40
0x108 MLOAD
0x109 RETURNDATASIZE
0x10a PUSH1 0x20
0x10c DUP2
0x10d LT
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x100: JUMPDEST 
0x106: V69 = 0x40
0x108: V70 = M[0x40]
0x109: V71 = RETURNDATASIZE
0x10a: V72 = 0x20
0x10d: V73 = LT V71 0x20
0x10e: V74 = ISZERO V73
0x10f: V75 = 0x117
0x112: JUMPI 0x117 V74
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, V62]
Stack pops: 5
Stack additions: [V70, V71]
Exit stack: [V11, V70, V71]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x100]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V76 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V11, V70, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V70, V71]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x100]
Successors: []
---
0x117 JUMPDEST
0x118 POP
0x119 POP
0x11a STOP
---
0x117: JUMPDEST 
0x11a: STOP 
---
Entry stack: [V11, V70, V71]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0xd]
Successors: [0x123, 0x127]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d DUP1
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11b: JUMPDEST 
0x11c: V77 = CALLVALUE
0x11e: V78 = ISZERO V77
0x11f: V79 = 0x127
0x122: JUMPI 0x127 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11b]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V80 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x127
[0x127:0x12f]
---
Predecessors: [0x11b]
Successors: [0x270]
---
0x127 JUMPDEST
0x128 POP
0x129 PUSH2 0x130
0x12c PUSH2 0x270
0x12f JUMP
---
0x127: JUMPDEST 
0x129: V81 = 0x130
0x12c: V82 = 0x270
0x12f: JUMP 0x270
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x130]
Exit stack: [V11, 0x130]

================================

Block 0x130
[0x130:0x151]
---
Predecessors: [0x2f6]
Successors: [0x152]
---
0x130 JUMPDEST
0x131 PUSH1 0x40
0x133 DUP1
0x134 MLOAD
0x135 PUSH1 0x20
0x137 DUP1
0x138 DUP3
0x139 MSTORE
0x13a DUP4
0x13b MLOAD
0x13c DUP2
0x13d DUP4
0x13e ADD
0x13f MSTORE
0x140 DUP4
0x141 MLOAD
0x142 SWAP2
0x143 SWAP3
0x144 DUP4
0x145 SWAP3
0x146 SWAP1
0x147 DUP4
0x148 ADD
0x149 SWAP2
0x14a DUP6
0x14b ADD
0x14c SWAP1
0x14d DUP1
0x14e DUP4
0x14f DUP4
0x150 PUSH1 0x0
---
0x130: JUMPDEST 
0x131: V83 = 0x40
0x134: V84 = M[0x40]
0x135: V85 = 0x20
0x139: M[V84] = 0x20
0x13b: V86 = M[V198]
0x13e: V87 = ADD V84 0x20
0x13f: M[V87] = V86
0x141: V88 = M[V198]
0x148: V89 = ADD V84 0x40
0x14b: V90 = ADD V198 0x20
0x150: V91 = 0x0
---
Entry stack: [V11, 0x130, V198]
Stack pops: 1
Stack additions: [S0, V84, V84, V89, V90, V88, V88, V89, V90, 0x0]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, 0x0]

================================

Block 0x152
[0x152:0x15a]
---
Predecessors: [0x130, 0x15b]
Successors: [0x15b, 0x16a]
---
0x152 JUMPDEST
0x153 DUP4
0x154 DUP2
0x155 LT
0x156 ISZERO
0x157 PUSH2 0x16a
0x15a JUMPI
---
0x152: JUMPDEST 
0x155: V92 = LT S0 V88
0x156: V93 = ISZERO V92
0x157: V94 = 0x16a
0x15a: JUMPI 0x16a V93
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]

================================

Block 0x15b
[0x15b:0x169]
---
Predecessors: [0x152]
Successors: [0x152]
---
0x15b DUP2
0x15c DUP2
0x15d ADD
0x15e MLOAD
0x15f DUP4
0x160 DUP3
0x161 ADD
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 PUSH2 0x152
0x169 JUMP
---
0x15d: V95 = ADD S0 V90
0x15e: V96 = M[V95]
0x161: V97 = ADD S0 V89
0x162: M[V97] = V96
0x163: V98 = 0x20
0x165: V99 = ADD 0x20 S0
0x166: V100 = 0x152
0x169: JUMP 0x152
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 3
Stack additions: [S2, S1, V99]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, V99]

================================

Block 0x16a
[0x16a:0x17d]
---
Predecessors: [0x152]
Successors: [0x17e, 0x197]
---
0x16a JUMPDEST
0x16b POP
0x16c POP
0x16d POP
0x16e POP
0x16f SWAP1
0x170 POP
0x171 SWAP1
0x172 DUP2
0x173 ADD
0x174 SWAP1
0x175 PUSH1 0x1f
0x177 AND
0x178 DUP1
0x179 ISZERO
0x17a PUSH2 0x197
0x17d JUMPI
---
0x16a: JUMPDEST 
0x173: V101 = ADD V88 V89
0x175: V102 = 0x1f
0x177: V103 = AND 0x1f V88
0x179: V104 = ISZERO V103
0x17a: V105 = 0x197
0x17d: JUMPI 0x197 V104
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 7
Stack additions: [V101, V103]
Exit stack: [V11, 0x130, V198, V84, V84, V101, V103]

================================

Block 0x17e
[0x17e:0x196]
---
Predecessors: [0x16a]
Successors: [0x197]
---
0x17e DUP1
0x17f DUP3
0x180 SUB
0x181 DUP1
0x182 MLOAD
0x183 PUSH1 0x1
0x185 DUP4
0x186 PUSH1 0x20
0x188 SUB
0x189 PUSH2 0x100
0x18c EXP
0x18d SUB
0x18e NOT
0x18f AND
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 SWAP2
0x196 POP
---
0x180: V106 = SUB V101 V103
0x182: V107 = M[V106]
0x183: V108 = 0x1
0x186: V109 = 0x20
0x188: V110 = SUB 0x20 V103
0x189: V111 = 0x100
0x18c: V112 = EXP 0x100 V110
0x18d: V113 = SUB V112 0x1
0x18e: V114 = NOT V113
0x18f: V115 = AND V114 V107
0x191: M[V106] = V115
0x192: V116 = 0x20
0x194: V117 = ADD 0x20 V106
---
Entry stack: [V11, 0x130, V198, V84, V84, V101, V103]
Stack pops: 2
Stack additions: [V117, S0]
Exit stack: [V11, 0x130, V198, V84, V84, V117, V103]

================================

Block 0x197
[0x197:0x1a4]
---
Predecessors: [0x16a, 0x17e]
Successors: []
---
0x197 JUMPDEST
0x198 POP
0x199 SWAP3
0x19a POP
0x19b POP
0x19c POP
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 DUP1
0x1a1 SWAP2
0x1a2 SUB
0x1a3 SWAP1
0x1a4 RETURN
---
0x197: JUMPDEST 
0x19d: V118 = 0x40
0x19f: V119 = M[0x40]
0x1a2: V120 = SUB S1 V119
0x1a4: RETURN V119 V120
---
Entry stack: [V11, 0x130, V198, V84, V84, S1, V103]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x130]

================================

Block 0x1a5
[0x1a5:0x1ac]
---
Predecessors: [0x40]
Successors: [0x1ad, 0x1b1]
---
0x1a5 JUMPDEST
0x1a6 CALLVALUE
0x1a7 DUP1
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V121 = CALLVALUE
0x1a8: V122 = ISZERO V121
0x1a9: V123 = 0x1b1
0x1ac: JUMPI 0x1b1 V122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V121]
Exit stack: [V11, V121]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a5]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V124 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V11, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V121]

================================

Block 0x1b1
[0x1b1:0x1b9]
---
Predecessors: [0x1a5]
Successors: [0x2fe]
---
0x1b1 JUMPDEST
0x1b2 POP
0x1b3 PUSH2 0x1ba
0x1b6 PUSH2 0x2fe
0x1b9 JUMP
---
0x1b1: JUMPDEST 
0x1b3: V125 = 0x1ba
0x1b6: V126 = 0x2fe
0x1b9: JUMP 0x2fe
---
Entry stack: [V11, V121]
Stack pops: 1
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x1ba
[0x1ba:0x1cd]
---
Predecessors: [0x3af, 0x59c, 0x746, 0x89c]
Successors: []
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd DUP1
0x1be MLOAD
0x1bf SWAP2
0x1c0 ISZERO
0x1c1 ISZERO
0x1c2 DUP3
0x1c3 MSTORE
0x1c4 MLOAD
0x1c5 SWAP1
0x1c6 DUP2
0x1c7 SWAP1
0x1c8 SUB
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP1
0x1cd RETURN
---
0x1ba: JUMPDEST 
0x1bb: V127 = 0x40
0x1be: V128 = M[0x40]
0x1c0: V129 = ISZERO {0x0, 0x1}
0x1c1: V130 = ISZERO V129
0x1c3: M[V128] = V130
0x1c4: V131 = M[0x40]
0x1c8: V132 = SUB V128 V131
0x1c9: V133 = 0x20
0x1cb: V134 = ADD 0x20 V132
0x1cd: RETURN V131 V134
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ce
[0x1ce:0x1d5]
---
Predecessors: [0x4b]
Successors: [0x1d6, 0x1da]
---
0x1ce JUMPDEST
0x1cf CALLVALUE
0x1d0 DUP1
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V135 = CALLVALUE
0x1d1: V136 = ISZERO V135
0x1d2: V137 = 0x1da
0x1d5: JUMPI 0x1da V136
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V135]
Exit stack: [V11, V135]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V138 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V11, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V135]

================================

Block 0x1da
[0x1da:0x1e2]
---
Predecessors: [0x1ce]
Successors: [0x3d2]
---
0x1da JUMPDEST
0x1db POP
0x1dc PUSH2 0x1e3
0x1df PUSH2 0x3d2
0x1e2 JUMP
---
0x1da: JUMPDEST 
0x1dc: V139 = 0x1e3
0x1df: V140 = 0x3d2
0x1e2: JUMP 0x3d2
---
Entry stack: [V11, V135]
Stack pops: 1
Stack additions: [0x1e3]
Exit stack: [V11, 0x1e3]

================================

Block 0x1e3
[0x1e3:0x20e]
---
Predecessors: [0x3d2]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x40
0x1e6 DUP1
0x1e7 MLOAD
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 SWAP5
0x1f1 DUP6
0x1f2 AND
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 SWAP3
0x1f6 SWAP1
0x1f7 SWAP4
0x1f8 AND
0x1f9 PUSH1 0x20
0x1fb DUP4
0x1fc ADD
0x1fd MSTORE
0x1fe ISZERO
0x1ff ISZERO
0x200 DUP2
0x201 DUP4
0x202 ADD
0x203 MSTORE
0x204 SWAP1
0x205 MLOAD
0x206 SWAP1
0x207 DUP2
0x208 SWAP1
0x209 SUB
0x20a PUSH1 0x60
0x20c ADD
0x20d SWAP1
0x20e RETURN
---
0x1e3: JUMPDEST 
0x1e4: V141 = 0x40
0x1e7: V142 = M[0x40]
0x1e8: V143 = 0x1
0x1ea: V144 = 0xa0
0x1ec: V145 = 0x2
0x1ee: V146 = EXP 0x2 0xa0
0x1ef: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x1f4: M[V142] = V148
0x1f8: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x1f9: V150 = 0x20
0x1fc: V151 = ADD V142 0x20
0x1fd: M[V151] = V149
0x1fe: V152 = ISZERO V304
0x1ff: V153 = ISZERO V152
0x202: V154 = ADD 0x40 V142
0x203: M[V154] = V153
0x205: V155 = M[0x40]
0x209: V156 = SUB V142 V155
0x20a: V157 = 0x60
0x20c: V158 = ADD 0x60 V156
0x20e: RETURN V155 V158
---
Entry stack: [V11, V299, V300, V304]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x216]
---
Predecessors: [0x56]
Successors: [0x217, 0x21b]
---
0x20f JUMPDEST
0x210 CALLVALUE
0x211 DUP1
0x212 ISZERO
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x20f: JUMPDEST 
0x210: V159 = CALLVALUE
0x212: V160 = ISZERO V159
0x213: V161 = 0x21b
0x216: JUMPI 0x21b V160
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V159]
Exit stack: [V11, V159]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x20f]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V162 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V11, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V159]

================================

Block 0x21b
[0x21b:0x22f]
---
Predecessors: [0x20f]
Successors: [0x407]
---
0x21b JUMPDEST
0x21c POP
0x21d PUSH2 0x230
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 PUSH1 0x4
0x22a CALLDATALOAD
0x22b AND
0x22c PUSH2 0x407
0x22f JUMP
---
0x21b: JUMPDEST 
0x21d: V163 = 0x230
0x220: V164 = 0x1
0x222: V165 = 0xa0
0x224: V166 = 0x2
0x226: V167 = EXP 0x2 0xa0
0x227: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V169 = 0x4
0x22a: V170 = CALLDATALOAD 0x4
0x22b: V171 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V172 = 0x407
0x22f: JUMP 0x407
---
Entry stack: [V11, V159]
Stack pops: 1
Stack additions: [0x230, V171]
Exit stack: [V11, 0x230, V171]

================================

Block 0x230
[0x230:0x231]
---
Predecessors: [0x4a4]
Successors: []
---
0x230 JUMPDEST
0x231 STOP
---
0x230: JUMPDEST 
0x231: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x232
[0x232:0x239]
---
Predecessors: [0x61]
Successors: [0x23a, 0x23e]
---
0x232 JUMPDEST
0x233 CALLVALUE
0x234 DUP1
0x235 ISZERO
0x236 PUSH2 0x23e
0x239 JUMPI
---
0x232: JUMPDEST 
0x233: V173 = CALLVALUE
0x235: V174 = ISZERO V173
0x236: V175 = 0x23e
0x239: JUMPI 0x23e V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V173]
Exit stack: [V11, V173]

================================

Block 0x23a
[0x23a:0x23d]
---
Predecessors: [0x232]
Successors: []
---
0x23a PUSH1 0x0
0x23c DUP1
0x23d REVERT
---
0x23a: V176 = 0x0
0x23d: REVERT 0x0 0x0
---
Entry stack: [V11, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V173]

================================

Block 0x23e
[0x23e:0x246]
---
Predecessors: [0x232]
Successors: [0x4eb]
---
0x23e JUMPDEST
0x23f POP
0x240 PUSH2 0x1ba
0x243 PUSH2 0x4eb
0x246 JUMP
---
0x23e: JUMPDEST 
0x240: V177 = 0x1ba
0x243: V178 = 0x4eb
0x246: JUMP 0x4eb
---
Entry stack: [V11, V173]
Stack pops: 1
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x6c]
Successors: [0x24f, 0x253]
---
0x247 JUMPDEST
0x248 CALLVALUE
0x249 DUP1
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x247: JUMPDEST 
0x248: V179 = CALLVALUE
0x24a: V180 = ISZERO V179
0x24b: V181 = 0x253
0x24e: JUMPI 0x253 V180
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V179]
Exit stack: [V11, V179]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x247]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V182 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V11, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V179]

================================

Block 0x253
[0x253:0x267]
---
Predecessors: [0x247]
Successors: [0x5d4]
---
0x253 JUMPDEST
0x254 POP
0x255 PUSH2 0x1ba
0x258 PUSH1 0x1
0x25a PUSH1 0xa0
0x25c PUSH1 0x2
0x25e EXP
0x25f SUB
0x260 PUSH1 0x4
0x262 CALLDATALOAD
0x263 AND
0x264 PUSH2 0x5d4
0x267 JUMP
---
0x253: JUMPDEST 
0x255: V183 = 0x1ba
0x258: V184 = 0x1
0x25a: V185 = 0xa0
0x25c: V186 = 0x2
0x25e: V187 = EXP 0x2 0xa0
0x25f: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x260: V189 = 0x4
0x262: V190 = CALLDATALOAD 0x4
0x263: V191 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x264: V192 = 0x5d4
0x267: JUMP 0x5d4
---
Entry stack: [V11, V179]
Stack pops: 1
Stack additions: [0x1ba, V191]
Exit stack: [V11, 0x1ba, V191]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x77]
Successors: [0x74b]
---
0x268 JUMPDEST
0x269 PUSH2 0x1ba
0x26c PUSH2 0x74b
0x26f JUMP
---
0x268: JUMPDEST 
0x269: V193 = 0x1ba
0x26c: V194 = 0x74b
0x26f: JUMP 0x74b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x270
[0x270:0x2af]
---
Predecessors: [0x127]
Successors: [0x2b0, 0x2f6]
---
0x270 JUMPDEST
0x271 PUSH1 0x0
0x273 DUP1
0x274 SLOAD
0x275 PUSH1 0x40
0x277 DUP1
0x278 MLOAD
0x279 PUSH1 0x20
0x27b PUSH1 0x2
0x27d PUSH1 0x1
0x27f DUP6
0x280 AND
0x281 ISZERO
0x282 PUSH2 0x100
0x285 MUL
0x286 PUSH1 0x0
0x288 NOT
0x289 ADD
0x28a SWAP1
0x28b SWAP5
0x28c AND
0x28d SWAP4
0x28e SWAP1
0x28f SWAP4
0x290 DIV
0x291 PUSH1 0x1f
0x293 DUP2
0x294 ADD
0x295 DUP5
0x296 SWAP1
0x297 DIV
0x298 DUP5
0x299 MUL
0x29a DUP3
0x29b ADD
0x29c DUP5
0x29d ADD
0x29e SWAP1
0x29f SWAP3
0x2a0 MSTORE
0x2a1 DUP2
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 SWAP3
0x2a5 SWAP2
0x2a6 DUP4
0x2a7 ADD
0x2a8 DUP3
0x2a9 DUP3
0x2aa DUP1
0x2ab ISZERO
0x2ac PUSH2 0x2f6
0x2af JUMPI
---
0x270: JUMPDEST 
0x271: V195 = 0x0
0x274: V196 = S[0x0]
0x275: V197 = 0x40
0x278: V198 = M[0x40]
0x279: V199 = 0x20
0x27b: V200 = 0x2
0x27d: V201 = 0x1
0x280: V202 = AND V196 0x1
0x281: V203 = ISZERO V202
0x282: V204 = 0x100
0x285: V205 = MUL 0x100 V203
0x286: V206 = 0x0
0x288: V207 = NOT 0x0
0x289: V208 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V205
0x28c: V209 = AND V196 V208
0x290: V210 = DIV V209 0x2
0x291: V211 = 0x1f
0x294: V212 = ADD V210 0x1f
0x297: V213 = DIV V212 0x20
0x299: V214 = MUL 0x20 V213
0x29b: V215 = ADD V198 V214
0x29d: V216 = ADD 0x20 V215
0x2a0: M[0x40] = V216
0x2a3: M[V198] = V210
0x2a7: V217 = ADD V198 0x20
0x2ab: V218 = ISZERO V210
0x2ac: V219 = 0x2f6
0x2af: JUMPI 0x2f6 V218
---
Entry stack: [V11, 0x130]
Stack pops: 0
Stack additions: [V198, 0x0, V210, V217, 0x0, V210]
Exit stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]

================================

Block 0x2b0
[0x2b0:0x2b7]
---
Predecessors: [0x270]
Successors: [0x2b8, 0x2cb]
---
0x2b0 DUP1
0x2b1 PUSH1 0x1f
0x2b3 LT
0x2b4 PUSH2 0x2cb
0x2b7 JUMPI
---
0x2b1: V220 = 0x1f
0x2b3: V221 = LT 0x1f V210
0x2b4: V222 = 0x2cb
0x2b7: JUMPI 0x2cb V221
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]

================================

Block 0x2b8
[0x2b8:0x2ca]
---
Predecessors: [0x2b0]
Successors: [0x2f6]
---
0x2b8 PUSH2 0x100
0x2bb DUP1
0x2bc DUP4
0x2bd SLOAD
0x2be DIV
0x2bf MUL
0x2c0 DUP4
0x2c1 MSTORE
0x2c2 SWAP2
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 SWAP2
0x2c7 PUSH2 0x2f6
0x2ca JUMP
---
0x2b8: V223 = 0x100
0x2bd: V224 = S[0x0]
0x2be: V225 = DIV V224 0x100
0x2bf: V226 = MUL V225 0x100
0x2c1: M[V217] = V226
0x2c3: V227 = 0x20
0x2c5: V228 = ADD 0x20 V217
0x2c7: V229 = 0x2f6
0x2ca: JUMP 0x2f6
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 3
Stack additions: [V228, S1, S0]
Exit stack: [V11, 0x130, V198, 0x0, V210, V228, 0x0, V210]

================================

Block 0x2cb
[0x2cb:0x2d8]
---
Predecessors: [0x2b0]
Successors: [0x2d9]
---
0x2cb JUMPDEST
0x2cc DUP3
0x2cd ADD
0x2ce SWAP2
0x2cf SWAP1
0x2d0 PUSH1 0x0
0x2d2 MSTORE
0x2d3 PUSH1 0x20
0x2d5 PUSH1 0x0
0x2d7 SHA3
0x2d8 SWAP1
---
0x2cb: JUMPDEST 
0x2cd: V230 = ADD V217 V210
0x2d0: V231 = 0x0
0x2d2: M[0x0] = 0x0
0x2d3: V232 = 0x20
0x2d5: V233 = 0x0
0x2d7: V234 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 3
Stack additions: [V230, V234, S2]
Exit stack: [V11, 0x130, V198, 0x0, V210, V230, V234, V217]

================================

Block 0x2d9
[0x2d9:0x2ec]
---
Predecessors: [0x2cb, 0x2d9]
Successors: [0x2d9, 0x2ed]
---
0x2d9 JUMPDEST
0x2da DUP2
0x2db SLOAD
0x2dc DUP2
0x2dd MSTORE
0x2de SWAP1
0x2df PUSH1 0x1
0x2e1 ADD
0x2e2 SWAP1
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 DUP1
0x2e7 DUP4
0x2e8 GT
0x2e9 PUSH2 0x2d9
0x2ec JUMPI
---
0x2d9: JUMPDEST 
0x2db: V235 = S[S1]
0x2dd: M[S0] = V235
0x2df: V236 = 0x1
0x2e1: V237 = ADD 0x1 S1
0x2e3: V238 = 0x20
0x2e5: V239 = ADD 0x20 S0
0x2e8: V240 = GT V230 V239
0x2e9: V241 = 0x2d9
0x2ec: JUMPI 0x2d9 V240
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V230, S1, S0]
Stack pops: 3
Stack additions: [S2, V237, V239]
Exit stack: [V11, 0x130, V198, 0x0, V210, V230, V237, V239]

================================

Block 0x2ed
[0x2ed:0x2f5]
---
Predecessors: [0x2d9]
Successors: [0x2f6]
---
0x2ed DUP3
0x2ee SWAP1
0x2ef SUB
0x2f0 PUSH1 0x1f
0x2f2 AND
0x2f3 DUP3
0x2f4 ADD
0x2f5 SWAP2
---
0x2ef: V242 = SUB V239 V230
0x2f0: V243 = 0x1f
0x2f2: V244 = AND 0x1f V242
0x2f4: V245 = ADD V230 V244
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V230, V237, V239]
Stack pops: 3
Stack additions: [V245, S1, S2]
Exit stack: [V11, 0x130, V198, 0x0, V210, V245, V237, V230]

================================

Block 0x2f6
[0x2f6:0x2fd]
---
Predecessors: [0x270, 0x2b8, 0x2ed]
Successors: [0x130]
---
0x2f6 JUMPDEST
0x2f7 POP
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc DUP2
0x2fd JUMP
---
0x2f6: JUMPDEST 
0x2fd: JUMP 0x130
---
Entry stack: [V11, 0x130, V198, 0x0, V210, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x130, V198]

================================

Block 0x2fe
[0x2fe:0x313]
---
Predecessors: [0x1b1]
Successors: [0x314, 0x3af]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x1
0x301 SLOAD
0x302 PUSH1 0x0
0x304 SWAP1
0x305 PUSH1 0x1
0x307 PUSH1 0xa0
0x309 PUSH1 0x2
0x30b EXP
0x30c SUB
0x30d AND
0x30e CALLER
0x30f EQ
0x310 PUSH2 0x3af
0x313 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V246 = 0x1
0x301: V247 = S[0x1]
0x302: V248 = 0x0
0x305: V249 = 0x1
0x307: V250 = 0xa0
0x309: V251 = 0x2
0x30b: V252 = EXP 0x2 0xa0
0x30c: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30d: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x30e: V255 = CALLER
0x30f: V256 = EQ V255 V254
0x310: V257 = 0x3af
0x313: JUMPI 0x3af V256
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x314
[0x314:0x3ae]
---
Predecessors: [0x2fe]
Successors: []
---
0x314 PUSH1 0x40
0x316 DUP1
0x317 MLOAD
0x318 PUSH1 0xe5
0x31a PUSH1 0x2
0x31c EXP
0x31d PUSH3 0x461bcd
0x321 MUL
0x322 DUP2
0x323 MSTORE
0x324 PUSH1 0x20
0x326 PUSH1 0x4
0x328 DUP3
0x329 ADD
0x32a MSTORE
0x32b PUSH1 0x47
0x32d PUSH1 0x24
0x32f DUP3
0x330 ADD
0x331 MSTORE
0x332 PUSH32 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x353 PUSH1 0x44
0x355 DUP3
0x356 ADD
0x357 MSTORE
0x358 PUSH32 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x379 PUSH1 0x64
0x37b DUP3
0x37c ADD
0x37d MSTORE
0x37e PUSH32 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x39f PUSH1 0x84
0x3a1 DUP3
0x3a2 ADD
0x3a3 MSTORE
0x3a4 SWAP1
0x3a5 MLOAD
0x3a6 SWAP1
0x3a7 DUP2
0x3a8 SWAP1
0x3a9 SUB
0x3aa PUSH1 0xa4
0x3ac ADD
0x3ad SWAP1
0x3ae REVERT
---
0x314: V258 = 0x40
0x317: V259 = M[0x40]
0x318: V260 = 0xe5
0x31a: V261 = 0x2
0x31c: V262 = EXP 0x2 0xe5
0x31d: V263 = 0x461bcd
0x321: V264 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x323: M[V259] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x324: V265 = 0x20
0x326: V266 = 0x4
0x329: V267 = ADD V259 0x4
0x32a: M[V267] = 0x20
0x32b: V268 = 0x47
0x32d: V269 = 0x24
0x330: V270 = ADD V259 0x24
0x331: M[V270] = 0x47
0x332: V271 = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x353: V272 = 0x44
0x356: V273 = ADD V259 0x44
0x357: M[V273] = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x358: V274 = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x379: V275 = 0x64
0x37c: V276 = ADD V259 0x64
0x37d: M[V276] = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x37e: V277 = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x39f: V278 = 0x84
0x3a2: V279 = ADD V259 0x84
0x3a3: M[V279] = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x3a5: V280 = M[0x40]
0x3a9: V281 = SUB V259 V280
0x3aa: V282 = 0xa4
0x3ac: V283 = ADD 0xa4 V281
0x3ae: REVERT V280 V283
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x3af
[0x3af:0x3d1]
---
Predecessors: [0x2fe]
Successors: [0x1ba]
---
0x3af JUMPDEST
0x3b0 POP
0x3b1 PUSH1 0x2
0x3b3 DUP1
0x3b4 SLOAD
0x3b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ca NOT
0x3cb AND
0x3cc SWAP1
0x3cd SSTORE
0x3ce PUSH1 0x1
0x3d0 SWAP1
0x3d1 JUMP
---
0x3af: JUMPDEST 
0x3b1: V284 = 0x2
0x3b4: V285 = S[0x2]
0x3b5: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ca: V287 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V288 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V285
0x3cd: S[0x2] = V288
0x3ce: V289 = 0x1
0x3d1: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x3d2
[0x3d2:0x406]
---
Predecessors: [0x1da]
Successors: [0x1e3]
---
0x3d2 JUMPDEST
0x3d3 PUSH1 0x1
0x3d5 SLOAD
0x3d6 PUSH1 0x2
0x3d8 SLOAD
0x3d9 PUSH1 0x1
0x3db PUSH1 0xa0
0x3dd PUSH1 0x2
0x3df EXP
0x3e0 SUB
0x3e1 SWAP2
0x3e2 DUP3
0x3e3 AND
0x3e4 SWAP3
0x3e5 SWAP2
0x3e6 DUP2
0x3e7 AND
0x3e8 SWAP2
0x3e9 PUSH21 0x10000000000000000000000000000000000000000
0x3ff SWAP1
0x400 SWAP2
0x401 DIV
0x402 PUSH1 0xff
0x404 AND
0x405 SWAP1
0x406 JUMP
---
0x3d2: JUMPDEST 
0x3d3: V290 = 0x1
0x3d5: V291 = S[0x1]
0x3d6: V292 = 0x2
0x3d8: V293 = S[0x2]
0x3d9: V294 = 0x1
0x3db: V295 = 0xa0
0x3dd: V296 = 0x2
0x3df: V297 = EXP 0x2 0xa0
0x3e0: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e3: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x3e7: V300 = AND V293 0xffffffffffffffffffffffffffffffffffffffff
0x3e9: V301 = 0x10000000000000000000000000000000000000000
0x401: V302 = DIV V293 0x10000000000000000000000000000000000000000
0x402: V303 = 0xff
0x404: V304 = AND 0xff V302
0x406: JUMP 0x1e3
---
Entry stack: [V11, 0x1e3]
Stack pops: 1
Stack additions: [V299, V300, V304]
Exit stack: [V11, V299, V300, V304]

================================

Block 0x407
[0x407:0x42e]
---
Predecessors: [0x21b]
Successors: [0x42f, 0x4a4]
---
0x407 JUMPDEST
0x408 PUSH1 0x2
0x40a SLOAD
0x40b PUSH21 0x10000000000000000000000000000000000000000
0x421 SWAP1
0x422 DIV
0x423 PUSH1 0xff
0x425 AND
0x426 ISZERO
0x427 ISZERO
0x428 PUSH1 0x1
0x42a EQ
0x42b PUSH2 0x4a4
0x42e JUMPI
---
0x407: JUMPDEST 
0x408: V305 = 0x2
0x40a: V306 = S[0x2]
0x40b: V307 = 0x10000000000000000000000000000000000000000
0x422: V308 = DIV V306 0x10000000000000000000000000000000000000000
0x423: V309 = 0xff
0x425: V310 = AND 0xff V308
0x426: V311 = ISZERO V310
0x427: V312 = ISZERO V311
0x428: V313 = 0x1
0x42a: V314 = EQ 0x1 V312
0x42b: V315 = 0x4a4
0x42e: JUMPI 0x4a4 V314
---
Entry stack: [V11, 0x230, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x230, V171]

================================

Block 0x42f
[0x42f:0x4a3]
---
Predecessors: [0x407]
Successors: []
---
0x42f PUSH1 0x40
0x431 DUP1
0x432 MLOAD
0x433 PUSH1 0xe5
0x435 PUSH1 0x2
0x437 EXP
0x438 PUSH3 0x461bcd
0x43c MUL
0x43d DUP2
0x43e MSTORE
0x43f PUSH1 0x20
0x441 PUSH1 0x4
0x443 DUP3
0x444 ADD
0x445 MSTORE
0x446 PUSH1 0x35
0x448 PUSH1 0x24
0x44a DUP3
0x44b ADD
0x44c MSTORE
0x44d PUSH32 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x46e PUSH1 0x44
0x470 DUP3
0x471 ADD
0x472 MSTORE
0x473 PUSH32 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x494 PUSH1 0x64
0x496 DUP3
0x497 ADD
0x498 MSTORE
0x499 SWAP1
0x49a MLOAD
0x49b SWAP1
0x49c DUP2
0x49d SWAP1
0x49e SUB
0x49f PUSH1 0x84
0x4a1 ADD
0x4a2 SWAP1
0x4a3 REVERT
---
0x42f: V316 = 0x40
0x432: V317 = M[0x40]
0x433: V318 = 0xe5
0x435: V319 = 0x2
0x437: V320 = EXP 0x2 0xe5
0x438: V321 = 0x461bcd
0x43c: V322 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x43e: M[V317] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x43f: V323 = 0x20
0x441: V324 = 0x4
0x444: V325 = ADD V317 0x4
0x445: M[V325] = 0x20
0x446: V326 = 0x35
0x448: V327 = 0x24
0x44b: V328 = ADD V317 0x24
0x44c: M[V328] = 0x35
0x44d: V329 = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x46e: V330 = 0x44
0x471: V331 = ADD V317 0x44
0x472: M[V331] = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x473: V332 = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x494: V333 = 0x64
0x497: V334 = ADD V317 0x64
0x498: M[V334] = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x49a: V335 = M[0x40]
0x49e: V336 = SUB V317 V335
0x49f: V337 = 0x84
0x4a1: V338 = ADD 0x84 V336
0x4a3: REVERT V335 V338
---
Entry stack: [V11, 0x230, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x230, V171]

================================

Block 0x4a4
[0x4a4:0x4ea]
---
Predecessors: [0x407]
Successors: [0x230]
---
0x4a4 JUMPDEST
0x4a5 PUSH1 0x2
0x4a7 DUP1
0x4a8 SLOAD
0x4a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4be NOT
0x4bf AND
0x4c0 PUSH1 0x1
0x4c2 PUSH1 0xa0
0x4c4 PUSH1 0x2
0x4c6 EXP
0x4c7 SUB
0x4c8 SWAP3
0x4c9 SWAP1
0x4ca SWAP3
0x4cb AND
0x4cc SWAP2
0x4cd SWAP1
0x4ce SWAP2
0x4cf OR
0x4d0 PUSH21 0xff0000000000000000000000000000000000000000
0x4e6 NOT
0x4e7 AND
0x4e8 SWAP1
0x4e9 SSTORE
0x4ea JUMP
---
0x4a4: JUMPDEST 
0x4a5: V339 = 0x2
0x4a8: V340 = S[0x2]
0x4a9: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x4be: V342 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4bf: V343 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V340
0x4c0: V344 = 0x1
0x4c2: V345 = 0xa0
0x4c4: V346 = 0x2
0x4c6: V347 = EXP 0x2 0xa0
0x4c7: V348 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cb: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x4cf: V350 = OR V349 V343
0x4d0: V351 = 0xff0000000000000000000000000000000000000000
0x4e6: V352 = NOT 0xff0000000000000000000000000000000000000000
0x4e7: V353 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V350
0x4e9: S[0x2] = V353
0x4ea: JUMP 0x230
---
Entry stack: [V11, 0x230, V171]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4eb
[0x4eb:0x500]
---
Predecessors: [0x23e]
Successors: [0x501, 0x59c]
---
0x4eb JUMPDEST
0x4ec PUSH1 0x2
0x4ee SLOAD
0x4ef PUSH1 0x0
0x4f1 SWAP1
0x4f2 PUSH1 0x1
0x4f4 PUSH1 0xa0
0x4f6 PUSH1 0x2
0x4f8 EXP
0x4f9 SUB
0x4fa AND
0x4fb CALLER
0x4fc EQ
0x4fd PUSH2 0x59c
0x500 JUMPI
---
0x4eb: JUMPDEST 
0x4ec: V354 = 0x2
0x4ee: V355 = S[0x2]
0x4ef: V356 = 0x0
0x4f2: V357 = 0x1
0x4f4: V358 = 0xa0
0x4f6: V359 = 0x2
0x4f8: V360 = EXP 0x2 0xa0
0x4f9: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fa: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x4fb: V363 = CALLER
0x4fc: V364 = EQ V363 V362
0x4fd: V365 = 0x59c
0x500: JUMPI 0x59c V364
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x501
[0x501:0x59b]
---
Predecessors: [0x4eb]
Successors: []
---
0x501 PUSH1 0x40
0x503 DUP1
0x504 MLOAD
0x505 PUSH1 0xe5
0x507 PUSH1 0x2
0x509 EXP
0x50a PUSH3 0x461bcd
0x50e MUL
0x50f DUP2
0x510 MSTORE
0x511 PUSH1 0x20
0x513 PUSH1 0x4
0x515 DUP3
0x516 ADD
0x517 MSTORE
0x518 PUSH1 0x43
0x51a PUSH1 0x24
0x51c DUP3
0x51d ADD
0x51e MSTORE
0x51f PUSH32 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x540 PUSH1 0x44
0x542 DUP3
0x543 ADD
0x544 MSTORE
0x545 PUSH32 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x566 PUSH1 0x64
0x568 DUP3
0x569 ADD
0x56a MSTORE
0x56b PUSH32 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x58c PUSH1 0x84
0x58e DUP3
0x58f ADD
0x590 MSTORE
0x591 SWAP1
0x592 MLOAD
0x593 SWAP1
0x594 DUP2
0x595 SWAP1
0x596 SUB
0x597 PUSH1 0xa4
0x599 ADD
0x59a SWAP1
0x59b REVERT
---
0x501: V366 = 0x40
0x504: V367 = M[0x40]
0x505: V368 = 0xe5
0x507: V369 = 0x2
0x509: V370 = EXP 0x2 0xe5
0x50a: V371 = 0x461bcd
0x50e: V372 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x510: M[V367] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x511: V373 = 0x20
0x513: V374 = 0x4
0x516: V375 = ADD V367 0x4
0x517: M[V375] = 0x20
0x518: V376 = 0x43
0x51a: V377 = 0x24
0x51d: V378 = ADD V367 0x24
0x51e: M[V378] = 0x43
0x51f: V379 = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x540: V380 = 0x44
0x543: V381 = ADD V367 0x44
0x544: M[V381] = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x545: V382 = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x566: V383 = 0x64
0x569: V384 = ADD V367 0x64
0x56a: M[V384] = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x56b: V385 = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x58c: V386 = 0x84
0x58f: V387 = ADD V367 0x84
0x590: M[V387] = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x592: V388 = M[0x40]
0x596: V389 = SUB V367 V388
0x597: V390 = 0xa4
0x599: V391 = ADD 0xa4 V389
0x59b: REVERT V388 V391
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x59c
[0x59c:0x5d3]
---
Predecessors: [0x4eb]
Successors: [0x1ba]
---
0x59c JUMPDEST
0x59d POP
0x59e PUSH1 0x2
0x5a0 DUP1
0x5a1 SLOAD
0x5a2 PUSH1 0x1
0x5a4 DUP1
0x5a5 SLOAD
0x5a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bb NOT
0x5bc SWAP1
0x5bd DUP2
0x5be AND
0x5bf PUSH1 0x1
0x5c1 PUSH1 0xa0
0x5c3 PUSH1 0x2
0x5c5 EXP
0x5c6 SUB
0x5c7 DUP5
0x5c8 AND
0x5c9 OR
0x5ca DUP3
0x5cb SSTORE
0x5cc SWAP1
0x5cd SWAP2
0x5ce AND
0x5cf SWAP1
0x5d0 SWAP2
0x5d1 SSTORE
0x5d2 SWAP1
0x5d3 JUMP
---
0x59c: JUMPDEST 
0x59e: V392 = 0x2
0x5a1: V393 = S[0x2]
0x5a2: V394 = 0x1
0x5a5: V395 = S[0x1]
0x5a6: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bb: V397 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5be: V398 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V395
0x5bf: V399 = 0x1
0x5c1: V400 = 0xa0
0x5c3: V401 = 0x2
0x5c5: V402 = EXP 0x2 0xa0
0x5c6: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c8: V404 = AND V393 0xffffffffffffffffffffffffffffffffffffffff
0x5c9: V405 = OR V404 V398
0x5cb: S[0x1] = V405
0x5ce: V406 = AND V393 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x5d1: S[0x2] = V406
0x5d3: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x5d4
[0x5d4:0x5e9]
---
Predecessors: [0x253]
Successors: [0x5ea, 0x685]
---
0x5d4 JUMPDEST
0x5d5 PUSH1 0x1
0x5d7 SLOAD
0x5d8 PUSH1 0x0
0x5da SWAP1
0x5db PUSH1 0x1
0x5dd PUSH1 0xa0
0x5df PUSH1 0x2
0x5e1 EXP
0x5e2 SUB
0x5e3 AND
0x5e4 CALLER
0x5e5 EQ
0x5e6 PUSH2 0x685
0x5e9 JUMPI
---
0x5d4: JUMPDEST 
0x5d5: V407 = 0x1
0x5d7: V408 = S[0x1]
0x5d8: V409 = 0x0
0x5db: V410 = 0x1
0x5dd: V411 = 0xa0
0x5df: V412 = 0x2
0x5e1: V413 = EXP 0x2 0xa0
0x5e2: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e3: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x5e4: V416 = CALLER
0x5e5: V417 = EQ V416 V415
0x5e6: V418 = 0x685
0x5e9: JUMPI 0x685 V417
---
Entry stack: [V11, 0x1ba, V191]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x5ea
[0x5ea:0x684]
---
Predecessors: [0x5d4]
Successors: []
---
0x5ea PUSH1 0x40
0x5ec DUP1
0x5ed MLOAD
0x5ee PUSH1 0xe5
0x5f0 PUSH1 0x2
0x5f2 EXP
0x5f3 PUSH3 0x461bcd
0x5f7 MUL
0x5f8 DUP2
0x5f9 MSTORE
0x5fa PUSH1 0x20
0x5fc PUSH1 0x4
0x5fe DUP3
0x5ff ADD
0x600 MSTORE
0x601 PUSH1 0x46
0x603 PUSH1 0x24
0x605 DUP3
0x606 ADD
0x607 MSTORE
0x608 PUSH32 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x629 PUSH1 0x44
0x62b DUP3
0x62c ADD
0x62d MSTORE
0x62e PUSH32 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x64f PUSH1 0x64
0x651 DUP3
0x652 ADD
0x653 MSTORE
0x654 PUSH32 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x675 PUSH1 0x84
0x677 DUP3
0x678 ADD
0x679 MSTORE
0x67a SWAP1
0x67b MLOAD
0x67c SWAP1
0x67d DUP2
0x67e SWAP1
0x67f SUB
0x680 PUSH1 0xa4
0x682 ADD
0x683 SWAP1
0x684 REVERT
---
0x5ea: V419 = 0x40
0x5ed: V420 = M[0x40]
0x5ee: V421 = 0xe5
0x5f0: V422 = 0x2
0x5f2: V423 = EXP 0x2 0xe5
0x5f3: V424 = 0x461bcd
0x5f7: V425 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x5f9: M[V420] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5fa: V426 = 0x20
0x5fc: V427 = 0x4
0x5ff: V428 = ADD V420 0x4
0x600: M[V428] = 0x20
0x601: V429 = 0x46
0x603: V430 = 0x24
0x606: V431 = ADD V420 0x24
0x607: M[V431] = 0x46
0x608: V432 = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x629: V433 = 0x44
0x62c: V434 = ADD V420 0x44
0x62d: M[V434] = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x62e: V435 = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x64f: V436 = 0x64
0x652: V437 = ADD V420 0x64
0x653: M[V437] = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x654: V438 = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x675: V439 = 0x84
0x678: V440 = ADD V420 0x84
0x679: M[V440] = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x67b: V441 = M[0x40]
0x67f: V442 = SUB V420 V441
0x680: V443 = 0xa4
0x682: V444 = ADD 0xa4 V442
0x684: REVERT V441 V444
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x685
[0x685:0x6d7]
---
Predecessors: [0x5d4]
Successors: [0x6d8, 0x6dc]
---
0x685 JUMPDEST
0x686 DUP2
0x687 PUSH1 0x1
0x689 PUSH1 0xa0
0x68b PUSH1 0x2
0x68d EXP
0x68e SUB
0x68f AND
0x690 PUSH4 0x839e0fb
0x695 PUSH1 0x40
0x697 MLOAD
0x698 DUP2
0x699 PUSH4 0xffffffff
0x69e AND
0x69f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6bd MUL
0x6be DUP2
0x6bf MSTORE
0x6c0 PUSH1 0x4
0x6c2 ADD
0x6c3 PUSH1 0x20
0x6c5 PUSH1 0x40
0x6c7 MLOAD
0x6c8 DUP1
0x6c9 DUP4
0x6ca SUB
0x6cb DUP2
0x6cc PUSH1 0x0
0x6ce DUP8
0x6cf DUP1
0x6d0 EXTCODESIZE
0x6d1 ISZERO
0x6d2 DUP1
0x6d3 ISZERO
0x6d4 PUSH2 0x6dc
0x6d7 JUMPI
---
0x685: JUMPDEST 
0x687: V445 = 0x1
0x689: V446 = 0xa0
0x68b: V447 = 0x2
0x68d: V448 = EXP 0x2 0xa0
0x68e: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68f: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x690: V451 = 0x839e0fb
0x695: V452 = 0x40
0x697: V453 = M[0x40]
0x699: V454 = 0xffffffff
0x69e: V455 = AND 0xffffffff 0x839e0fb
0x69f: V456 = 0x100000000000000000000000000000000000000000000000000000000
0x6bd: V457 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x839e0fb
0x6bf: M[V453] = 0x839e0fb00000000000000000000000000000000000000000000000000000000
0x6c0: V458 = 0x4
0x6c2: V459 = ADD 0x4 V453
0x6c3: V460 = 0x20
0x6c5: V461 = 0x40
0x6c7: V462 = M[0x40]
0x6ca: V463 = SUB V459 V462
0x6cc: V464 = 0x0
0x6d0: V465 = EXTCODESIZE V450
0x6d1: V466 = ISZERO V465
0x6d3: V467 = ISZERO V466
0x6d4: V468 = 0x6dc
0x6d7: JUMPI 0x6dc V467
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V450, 0x839e0fb, V459, 0x20, V462, V463, V462, 0x0, V450, V466]
Exit stack: [V11, 0x1ba, V191, 0x0, V450, 0x839e0fb, V459, 0x20, V462, V463, V462, 0x0, V450, V466]

================================

Block 0x6d8
[0x6d8:0x6db]
---
Predecessors: [0x685]
Successors: []
---
0x6d8 PUSH1 0x0
0x6da DUP1
0x6db REVERT
---
0x6d8: V469 = 0x0
0x6db: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0, V450, 0x839e0fb, V459, 0x20, V462, V463, V462, 0x0, V450, V466]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V450, 0x839e0fb, V459, 0x20, V462, V463, V462, 0x0, V450, V466]

================================

Block 0x6dc
[0x6dc:0x6e6]
---
Predecessors: [0x685]
Successors: [0x6e7, 0x6f0]
---
0x6dc JUMPDEST
0x6dd POP
0x6de GAS
0x6df CALL
0x6e0 ISZERO
0x6e1 DUP1
0x6e2 ISZERO
0x6e3 PUSH2 0x6f0
0x6e6 JUMPI
---
0x6dc: JUMPDEST 
0x6de: V470 = GAS
0x6df: V471 = CALL V470 V450 0x0 V462 V463 V462 0x20
0x6e0: V472 = ISZERO V471
0x6e2: V473 = ISZERO V472
0x6e3: V474 = 0x6f0
0x6e6: JUMPI 0x6f0 V473
---
Entry stack: [V11, 0x1ba, V191, 0x0, V450, 0x839e0fb, V459, 0x20, V462, V463, V462, 0x0, V450, V466]
Stack pops: 7
Stack additions: [V472]
Exit stack: [V11, 0x1ba, V191, 0x0, V450, 0x839e0fb, V459, V472]

================================

Block 0x6e7
[0x6e7:0x6ef]
---
Predecessors: [0x6dc]
Successors: []
---
0x6e7 RETURNDATASIZE
0x6e8 PUSH1 0x0
0x6ea DUP1
0x6eb RETURNDATACOPY
0x6ec RETURNDATASIZE
0x6ed PUSH1 0x0
0x6ef REVERT
---
0x6e7: V475 = RETURNDATASIZE
0x6e8: V476 = 0x0
0x6eb: RETURNDATACOPY 0x0 0x0 V475
0x6ec: V477 = RETURNDATASIZE
0x6ed: V478 = 0x0
0x6ef: REVERT 0x0 V477
---
Entry stack: [V11, 0x1ba, V191, 0x0, V450, 0x839e0fb, V459, V472]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V450, 0x839e0fb, V459, V472]

================================

Block 0x6f0
[0x6f0:0x701]
---
Predecessors: [0x6dc]
Successors: [0x702, 0x706]
---
0x6f0 JUMPDEST
0x6f1 POP
0x6f2 POP
0x6f3 POP
0x6f4 POP
0x6f5 PUSH1 0x40
0x6f7 MLOAD
0x6f8 RETURNDATASIZE
0x6f9 PUSH1 0x20
0x6fb DUP2
0x6fc LT
0x6fd ISZERO
0x6fe PUSH2 0x706
0x701 JUMPI
---
0x6f0: JUMPDEST 
0x6f5: V479 = 0x40
0x6f7: V480 = M[0x40]
0x6f8: V481 = RETURNDATASIZE
0x6f9: V482 = 0x20
0x6fc: V483 = LT V481 0x20
0x6fd: V484 = ISZERO V483
0x6fe: V485 = 0x706
0x701: JUMPI 0x706 V484
---
Entry stack: [V11, 0x1ba, V191, 0x0, V450, 0x839e0fb, V459, V472]
Stack pops: 4
Stack additions: [V480, V481]
Exit stack: [V11, 0x1ba, V191, 0x0, V480, V481]

================================

Block 0x702
[0x702:0x705]
---
Predecessors: [0x6f0]
Successors: []
---
0x702 PUSH1 0x0
0x704 DUP1
0x705 REVERT
---
0x702: V486 = 0x0
0x705: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0, V480, V481]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V480, V481]

================================

Block 0x706
[0x706:0x712]
---
Predecessors: [0x6f0]
Successors: [0x713, 0x742]
---
0x706 JUMPDEST
0x707 POP
0x708 MLOAD
0x709 ISZERO
0x70a ISZERO
0x70b PUSH1 0x1
0x70d EQ
0x70e ISZERO
0x70f PUSH2 0x742
0x712 JUMPI
---
0x706: JUMPDEST 
0x708: V487 = M[V480]
0x709: V488 = ISZERO V487
0x70a: V489 = ISZERO V488
0x70b: V490 = 0x1
0x70d: V491 = EQ 0x1 V489
0x70e: V492 = ISZERO V491
0x70f: V493 = 0x742
0x712: JUMPI 0x742 V492
---
Entry stack: [V11, 0x1ba, V191, 0x0, V480, V481]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x713
[0x713:0x741]
---
Predecessors: [0x706]
Successors: [0x746]
---
0x713 POP
0x714 PUSH1 0x2
0x716 DUP1
0x717 SLOAD
0x718 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72d NOT
0x72e AND
0x72f PUSH1 0x1
0x731 PUSH1 0xa0
0x733 PUSH1 0x2
0x735 EXP
0x736 SUB
0x737 DUP4
0x738 AND
0x739 OR
0x73a SWAP1
0x73b SSTORE
0x73c PUSH1 0x1
0x73e PUSH2 0x746
0x741 JUMP
---
0x714: V494 = 0x2
0x717: V495 = S[0x2]
0x718: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x72d: V497 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x72e: V498 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V495
0x72f: V499 = 0x1
0x731: V500 = 0xa0
0x733: V501 = 0x2
0x735: V502 = EXP 0x2 0xa0
0x736: V503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x738: V504 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x739: V505 = OR V504 V498
0x73b: S[0x2] = V505
0x73c: V506 = 0x1
0x73e: V507 = 0x746
0x741: JUMP 0x746
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V11, 0x1ba, V191, 0x1]

================================

Block 0x742
[0x742:0x745]
---
Predecessors: [0x706]
Successors: [0x746]
---
0x742 JUMPDEST
0x743 POP
0x744 PUSH1 0x0
---
0x742: JUMPDEST 
0x744: V508 = 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x746
[0x746:0x74a]
---
Predecessors: [0x713, 0x742]
Successors: [0x1ba]
---
0x746 JUMPDEST
0x747 SWAP2
0x748 SWAP1
0x749 POP
0x74a JUMP
---
0x746: JUMPDEST 
0x74a: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, V191, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x74b
[0x74b:0x754]
---
Predecessors: [0x268]
Successors: [0x755, 0x7ca]
---
0x74b JUMPDEST
0x74c PUSH1 0x0
0x74e CALLVALUE
0x74f DUP2
0x750 LT
0x751 PUSH2 0x7ca
0x754 JUMPI
---
0x74b: JUMPDEST 
0x74c: V509 = 0x0
0x74e: V510 = CALLVALUE
0x750: V511 = LT 0x0 V510
0x751: V512 = 0x7ca
0x754: JUMPI 0x7ca V511
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x755
[0x755:0x7c9]
---
Predecessors: [0x74b]
Successors: []
---
0x755 PUSH1 0x40
0x757 DUP1
0x758 MLOAD
0x759 PUSH1 0xe5
0x75b PUSH1 0x2
0x75d EXP
0x75e PUSH3 0x461bcd
0x762 MUL
0x763 DUP2
0x764 MSTORE
0x765 PUSH1 0x20
0x767 PUSH1 0x4
0x769 DUP3
0x76a ADD
0x76b MSTORE
0x76c PUSH1 0x34
0x76e PUSH1 0x24
0x770 DUP3
0x771 ADD
0x772 MSTORE
0x773 PUSH32 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0x794 PUSH1 0x44
0x796 DUP3
0x797 ADD
0x798 MSTORE
0x799 PUSH32 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0x7ba PUSH1 0x64
0x7bc DUP3
0x7bd ADD
0x7be MSTORE
0x7bf SWAP1
0x7c0 MLOAD
0x7c1 SWAP1
0x7c2 DUP2
0x7c3 SWAP1
0x7c4 SUB
0x7c5 PUSH1 0x84
0x7c7 ADD
0x7c8 SWAP1
0x7c9 REVERT
---
0x755: V513 = 0x40
0x758: V514 = M[0x40]
0x759: V515 = 0xe5
0x75b: V516 = 0x2
0x75d: V517 = EXP 0x2 0xe5
0x75e: V518 = 0x461bcd
0x762: V519 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x764: M[V514] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x765: V520 = 0x20
0x767: V521 = 0x4
0x76a: V522 = ADD V514 0x4
0x76b: M[V522] = 0x20
0x76c: V523 = 0x34
0x76e: V524 = 0x24
0x771: V525 = ADD V514 0x24
0x772: M[V525] = 0x34
0x773: V526 = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0x794: V527 = 0x44
0x797: V528 = ADD V514 0x44
0x798: M[V528] = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0x799: V529 = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0x7ba: V530 = 0x64
0x7bd: V531 = ADD V514 0x64
0x7be: M[V531] = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0x7c0: V532 = M[0x40]
0x7c4: V533 = SUB V514 V532
0x7c5: V534 = 0x84
0x7c7: V535 = ADD 0x84 V533
0x7c9: REVERT V532 V535
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x7ca
[0x7ca:0x7ed]
---
Predecessors: [0x74b]
Successors: [0x7ee, 0x863]
---
0x7ca JUMPDEST
0x7cb PUSH1 0x2
0x7cd SLOAD
0x7ce PUSH21 0x10000000000000000000000000000000000000000
0x7e4 SWAP1
0x7e5 DIV
0x7e6 PUSH1 0xff
0x7e8 AND
0x7e9 ISZERO
0x7ea PUSH2 0x863
0x7ed JUMPI
---
0x7ca: JUMPDEST 
0x7cb: V536 = 0x2
0x7cd: V537 = S[0x2]
0x7ce: V538 = 0x10000000000000000000000000000000000000000
0x7e5: V539 = DIV V537 0x10000000000000000000000000000000000000000
0x7e6: V540 = 0xff
0x7e8: V541 = AND 0xff V539
0x7e9: V542 = ISZERO V541
0x7ea: V543 = 0x863
0x7ed: JUMPI 0x863 V542
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x7ee
[0x7ee:0x862]
---
Predecessors: [0x7ca]
Successors: []
---
0x7ee PUSH1 0x40
0x7f0 DUP1
0x7f1 MLOAD
0x7f2 PUSH1 0xe5
0x7f4 PUSH1 0x2
0x7f6 EXP
0x7f7 PUSH3 0x461bcd
0x7fb MUL
0x7fc DUP2
0x7fd MSTORE
0x7fe PUSH1 0x20
0x800 PUSH1 0x4
0x802 DUP3
0x803 ADD
0x804 MSTORE
0x805 PUSH1 0x2d
0x807 PUSH1 0x24
0x809 DUP3
0x80a ADD
0x80b MSTORE
0x80c PUSH32 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x82d PUSH1 0x44
0x82f DUP3
0x830 ADD
0x831 MSTORE
0x832 PUSH32 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x853 PUSH1 0x64
0x855 DUP3
0x856 ADD
0x857 MSTORE
0x858 SWAP1
0x859 MLOAD
0x85a SWAP1
0x85b DUP2
0x85c SWAP1
0x85d SUB
0x85e PUSH1 0x84
0x860 ADD
0x861 SWAP1
0x862 REVERT
---
0x7ee: V544 = 0x40
0x7f1: V545 = M[0x40]
0x7f2: V546 = 0xe5
0x7f4: V547 = 0x2
0x7f6: V548 = EXP 0x2 0xe5
0x7f7: V549 = 0x461bcd
0x7fb: V550 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x7fd: M[V545] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7fe: V551 = 0x20
0x800: V552 = 0x4
0x803: V553 = ADD V545 0x4
0x804: M[V553] = 0x20
0x805: V554 = 0x2d
0x807: V555 = 0x24
0x80a: V556 = ADD V545 0x24
0x80b: M[V556] = 0x2d
0x80c: V557 = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x82d: V558 = 0x44
0x830: V559 = ADD V545 0x44
0x831: M[V559] = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x832: V560 = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x853: V561 = 0x64
0x856: V562 = ADD V545 0x64
0x857: M[V562] = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x859: V563 = M[0x40]
0x85d: V564 = SUB V545 V563
0x85e: V565 = 0x84
0x860: V566 = ADD 0x84 V564
0x862: REVERT V563 V566
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x863
[0x863:0x892]
---
Predecessors: [0x7ca]
Successors: [0x893, 0x89c]
---
0x863 JUMPDEST
0x864 PUSH1 0x2
0x866 SLOAD
0x867 PUSH1 0x40
0x869 MLOAD
0x86a PUSH1 0x1
0x86c PUSH1 0xa0
0x86e PUSH1 0x2
0x870 EXP
0x871 SUB
0x872 SWAP1
0x873 SWAP2
0x874 AND
0x875 SWAP1
0x876 CALLVALUE
0x877 DUP1
0x878 ISZERO
0x879 PUSH2 0x8fc
0x87c MUL
0x87d SWAP2
0x87e PUSH1 0x0
0x880 DUP2
0x881 DUP2
0x882 DUP2
0x883 DUP6
0x884 DUP9
0x885 DUP9
0x886 CALL
0x887 SWAP4
0x888 POP
0x889 POP
0x88a POP
0x88b POP
0x88c ISZERO
0x88d DUP1
0x88e ISZERO
0x88f PUSH2 0x89c
0x892 JUMPI
---
0x863: JUMPDEST 
0x864: V567 = 0x2
0x866: V568 = S[0x2]
0x867: V569 = 0x40
0x869: V570 = M[0x40]
0x86a: V571 = 0x1
0x86c: V572 = 0xa0
0x86e: V573 = 0x2
0x870: V574 = EXP 0x2 0xa0
0x871: V575 = SUB 0x10000000000000000000000000000000000000000 0x1
0x874: V576 = AND V568 0xffffffffffffffffffffffffffffffffffffffff
0x876: V577 = CALLVALUE
0x878: V578 = ISZERO V577
0x879: V579 = 0x8fc
0x87c: V580 = MUL 0x8fc V578
0x87e: V581 = 0x0
0x886: V582 = CALL V580 V576 V577 V570 0x0 V570 0x0
0x88c: V583 = ISZERO V582
0x88e: V584 = ISZERO V583
0x88f: V585 = 0x89c
0x892: JUMPI 0x89c V584
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: [V583]
Exit stack: [V11, 0x1ba, 0x0, V583]

================================

Block 0x893
[0x893:0x89b]
---
Predecessors: [0x863]
Successors: []
---
0x893 RETURNDATASIZE
0x894 PUSH1 0x0
0x896 DUP1
0x897 RETURNDATACOPY
0x898 RETURNDATASIZE
0x899 PUSH1 0x0
0x89b REVERT
---
0x893: V586 = RETURNDATASIZE
0x894: V587 = 0x0
0x897: RETURNDATACOPY 0x0 0x0 V586
0x898: V588 = RETURNDATASIZE
0x899: V589 = 0x0
0x89b: REVERT 0x0 V588
---
Entry stack: [V11, 0x1ba, 0x0, V583]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, V583]

================================

Block 0x89c
[0x89c:0x8a3]
---
Predecessors: [0x863]
Successors: [0x1ba]
---
0x89c JUMPDEST
0x89d POP
0x89e PUSH1 0x1
0x8a0 SWAP1
0x8a1 POP
0x8a2 SWAP1
0x8a3 JUMP
---
0x89c: JUMPDEST 
0x89e: V590 = 0x1
0x8a3: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, 0x0, V583]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x8a4
[0x8a4:0x8d0]
---
Predecessors: []
Successors: []
---
0x8a4 STOP
0x8a5 LOG1
0x8a6 PUSH6 0x627a7a723058
0x8ad SHA3
0x8ae MISSING 0xac
0x8af MISSING 0x4d
0x8b0 SWAP10
0x8b1 SWAP11
0x8b2 STOP
0x8b3 PUSH29 0xf98cbf0284b1b4a53d147d94854dd501b02d87657bf5ab26e9a00029
---
0x8a4: STOP 
0x8a5: LOG S0 S1 S2
0x8a6: V591 = 0x627a7a723058
0x8ad: V592 = SHA3 0x627a7a723058 S3
0x8ae: MISSING 0xac
0x8af: MISSING 0x4d
0x8b2: STOP 
0x8b3: V593 = 0xf98cbf0284b1b4a53d147d94854dd501b02d87657bf5ab26e9a00029
---
Entry stack: []
Stack pops: 0
Stack additions: [V592, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, S10, 0xf98cbf0284b1b4a53d147d94854dd501b02d87657bf5ab26e9a00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x11b
Exit block: 0x197
Body: 0x11b, 0x123, 0x127, 0x130, 0x152, 0x15b, 0x16a, 0x17e, 0x197, 0x270, 0x2b0, 0x2b8, 0x2cb, 0x2d9, 0x2ed, 0x2f6

Function 1:
Public function signature: 0x10639ea0
Entry block: 0x1a5
Exit block: 0x1ba
Body: 0x1a5, 0x1ad, 0x1b1, 0x1ba, 0x2fe, 0x314, 0x3af

Function 2:
Public function signature: 0x200d2ed2
Entry block: 0x1ce
Exit block: 0x1e3
Body: 0x1ce, 0x1d6, 0x1da, 0x1e3, 0x3d2

Function 3:
Public function signature: 0x66d38203
Entry block: 0x20f
Exit block: 0x230
Body: 0x20f, 0x217, 0x21b, 0x230, 0x407, 0x42f, 0x4a4

Function 4:
Public function signature: 0x88d761f2
Entry block: 0x232
Exit block: 0x1ba
Body: 0x1ba, 0x232, 0x23a, 0x23e, 0x4eb, 0x501, 0x59c

Function 5:
Public function signature: 0xa0f52da0
Entry block: 0x247
Exit block: 0x1ba
Body: 0x1ba, 0x247, 0x24f, 0x253, 0x5d4, 0x5ea, 0x685, 0x6d8, 0x6dc, 0x6e7, 0x6f0, 0x702, 0x706, 0x713, 0x742, 0x746

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x268
Exit block: 0x1ba
Body: 0x1ba, 0x268, 0x74b, 0x755, 0x7ca, 0x7ee, 0x863, 0x893, 0x89c

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x113
Body: 0x82, 0xe8, 0xec, 0xf7, 0x100, 0x113, 0x117

