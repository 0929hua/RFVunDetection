Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x60]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x60
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x60
0xa: JUMPI 0x60 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x62]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x14c01d9f
0x3a EQ
0x3b PUSH2 0x62
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x14c01d9f
0x3a: V12 = EQ 0x14c01d9f V10
0x3b: V13 = 0x62
0x3e: JUMPI 0x62 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x9b]
---
0x3f DUP1
0x40 PUSH4 0x72e208eb
0x45 EQ
0x46 PUSH2 0x9b
0x49 JUMPI
---
0x40: V14 = 0x72e208eb
0x45: V15 = EQ 0x72e208eb V10
0x46: V16 = 0x9b
0x49: JUMPI 0x9b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xf0]
---
0x4a DUP1
0x4b PUSH4 0x793cd71e
0x50 EQ
0x51 PUSH2 0xf0
0x54 JUMPI
---
0x4b: V17 = 0x793cd71e
0x50: V18 = EQ 0x793cd71e V10
0x51: V19 = 0xf0
0x54: JUMPI 0xf0 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x105]
---
0x55 DUP1
0x56 PUSH4 0xf5632bf1
0x5b EQ
0x5c PUSH2 0x105
0x5f JUMPI
---
0x56: V20 = 0xf5632bf1
0x5b: V21 = EQ 0xf5632bf1 V10
0x5c: V22 = 0x105
0x5f: JUMPI 0x105 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x61]
---
Predecessors: [0x0, 0x55]
Successors: []
---
0x60 JUMPDEST
0x61 STOP
---
0x60: JUMPDEST 
0x61: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x62
[0x62:0x68]
---
Predecessors: [0xb]
Successors: [0x69, 0x6d]
---
0x62 JUMPDEST
0x63 CALLVALUE
0x64 ISZERO
0x65 PUSH2 0x6d
0x68 JUMPI
---
0x62: JUMPDEST 
0x63: V23 = CALLVALUE
0x64: V24 = ISZERO V23
0x65: V25 = 0x6d
0x68: JUMPI 0x6d V24
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x69
[0x69:0x6c]
---
Predecessors: [0x62]
Successors: []
---
0x69 PUSH1 0x0
0x6b DUP1
0x6c REVERT
---
0x69: V26 = 0x0
0x6c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6d
[0x6d:0x98]
---
Predecessors: [0x62]
Successors: [0x10f]
---
0x6d JUMPDEST
0x6e PUSH2 0x99
0x71 PUSH1 0x4
0x73 DUP1
0x74 DUP1
0x75 CALLDATALOAD
0x76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b AND
0x8c SWAP1
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP1
0x91 SWAP2
0x92 SWAP1
0x93 POP
0x94 POP
0x95 PUSH2 0x10f
0x98 JUMP
---
0x6d: JUMPDEST 
0x6e: V27 = 0x99
0x71: V28 = 0x4
0x75: V29 = CALLDATALOAD 0x4
0x76: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x8d: V32 = 0x20
0x8f: V33 = ADD 0x20 0x4
0x95: V34 = 0x10f
0x98: JUMP 0x10f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x99, V31]
Exit stack: [V10, 0x99, V31]

================================

Block 0x99
[0x99:0x9a]
---
Predecessors: [0x16a]
Successors: []
---
0x99 JUMPDEST
0x9a STOP
---
0x99: JUMPDEST 
0x9a: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9b
[0x9b:0xa1]
---
Predecessors: [0x3f]
Successors: [0xa2, 0xa6]
---
0x9b JUMPDEST
0x9c CALLVALUE
0x9d ISZERO
0x9e PUSH2 0xa6
0xa1 JUMPI
---
0x9b: JUMPDEST 
0x9c: V35 = CALLVALUE
0x9d: V36 = ISZERO V35
0x9e: V37 = 0xa6
0xa1: JUMPI 0xa6 V36
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x9b]
Successors: []
---
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 REVERT
---
0xa2: V38 = 0x0
0xa5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa6
[0xa6:0xad]
---
Predecessors: [0x9b]
Successors: [0x1ae]
---
0xa6 JUMPDEST
0xa7 PUSH2 0xae
0xaa PUSH2 0x1ae
0xad JUMP
---
0xa6: JUMPDEST 
0xa7: V39 = 0xae
0xaa: V40 = 0x1ae
0xad: JUMP 0x1ae
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xae]
Exit stack: [V10, 0xae]

================================

Block 0xae
[0xae:0xef]
---
Predecessors: [0x1ae]
Successors: []
---
0xae JUMPDEST
0xaf PUSH1 0x40
0xb1 MLOAD
0xb2 DUP1
0xb3 DUP3
0xb4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9 AND
0xca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf AND
0xe0 DUP2
0xe1 MSTORE
0xe2 PUSH1 0x20
0xe4 ADD
0xe5 SWAP2
0xe6 POP
0xe7 POP
0xe8 PUSH1 0x40
0xea MLOAD
0xeb DUP1
0xec SWAP2
0xed SUB
0xee SWAP1
0xef RETURN
---
0xae: JUMPDEST 
0xaf: V41 = 0x40
0xb1: V42 = M[0x40]
0xb4: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0xca: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xe1: M[V42] = V46
0xe2: V47 = 0x20
0xe4: V48 = ADD 0x20 V42
0xe8: V49 = 0x40
0xea: V50 = M[0x40]
0xed: V51 = SUB V48 V50
0xef: RETURN V50 V51
---
Entry stack: [V10, 0xae, V97]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xae]

================================

Block 0xf0
[0xf0:0xf6]
---
Predecessors: [0x4a]
Successors: [0xf7, 0xfb]
---
0xf0 JUMPDEST
0xf1 CALLVALUE
0xf2 ISZERO
0xf3 PUSH2 0xfb
0xf6 JUMPI
---
0xf0: JUMPDEST 
0xf1: V52 = CALLVALUE
0xf2: V53 = ISZERO V52
0xf3: V54 = 0xfb
0xf6: JUMPI 0xfb V53
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf7
[0xf7:0xfa]
---
Predecessors: [0xf0]
Successors: []
---
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa REVERT
---
0xf7: V55 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfb
[0xfb:0x102]
---
Predecessors: [0xf0]
Successors: [0x1d4]
---
0xfb JUMPDEST
0xfc PUSH2 0x103
0xff PUSH2 0x1d4
0x102 JUMP
---
0xfb: JUMPDEST 
0xfc: V56 = 0x103
0xff: V57 = 0x1d4
0x102: JUMP 0x1d4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x103]
Exit stack: [V10, 0x103]

================================

Block 0x103
[0x103:0x104]
---
Predecessors: [0x24c]
Successors: []
---
0x103 JUMPDEST
0x104 STOP
---
0x103: JUMPDEST 
0x104: STOP 
---
Entry stack: [V10, 0x10d, V129, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10d, V129, S0]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0x55]
Successors: [0x24e]
---
0x105 JUMPDEST
0x106 PUSH2 0x10d
0x109 PUSH2 0x24e
0x10c JUMP
---
0x105: JUMPDEST 
0x106: V58 = 0x10d
0x109: V59 = 0x24e
0x10c: JUMP 0x24e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10d]
Exit stack: [V10, 0x10d]

================================

Block 0x10d
[0x10d:0x10e]
---
Predecessors: [0x4b7]
Successors: []
---
0x10d JUMPDEST
0x10e STOP
---
0x10d: JUMPDEST 
0x10e: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10f
[0x10f:0x165]
---
Predecessors: [0x6d]
Successors: [0x166, 0x16a]
---
0x10f JUMPDEST
0x110 PUSH1 0x0
0x112 DUP1
0x113 SWAP1
0x114 SLOAD
0x115 SWAP1
0x116 PUSH2 0x100
0x119 EXP
0x11a SWAP1
0x11b DIV
0x11c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x131 AND
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 AND
0x148 CALLER
0x149 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15e AND
0x15f EQ
0x160 ISZERO
0x161 ISZERO
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x10f: JUMPDEST 
0x110: V60 = 0x0
0x114: V61 = S[0x0]
0x116: V62 = 0x100
0x119: V63 = EXP 0x100 0x0
0x11b: V64 = DIV V61 0x1
0x11c: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x131: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x132: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x147: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x148: V69 = CALLER
0x149: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x15f: V72 = EQ V71 V68
0x160: V73 = ISZERO V72
0x161: V74 = ISZERO V73
0x162: V75 = 0x16a
0x165: JUMPI 0x16a V74
---
Entry stack: [V10, 0x99, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x99, V31]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x10f]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V76 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V10, 0x99, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x99, V31]

================================

Block 0x16a
[0x16a:0x1ad]
---
Predecessors: [0x10f]
Successors: [0x99]
---
0x16a JUMPDEST
0x16b DUP1
0x16c PUSH1 0x1
0x16e PUSH1 0x0
0x170 PUSH2 0x100
0x173 EXP
0x174 DUP2
0x175 SLOAD
0x176 DUP2
0x177 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18c MUL
0x18d NOT
0x18e AND
0x18f SWAP1
0x190 DUP4
0x191 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a6 AND
0x1a7 MUL
0x1a8 OR
0x1a9 SWAP1
0x1aa SSTORE
0x1ab POP
0x1ac POP
0x1ad JUMP
---
0x16a: JUMPDEST 
0x16c: V77 = 0x1
0x16e: V78 = 0x0
0x170: V79 = 0x100
0x173: V80 = EXP 0x100 0x0
0x175: V81 = S[0x1]
0x177: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V83 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x18d: V84 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V85 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V81
0x191: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x1a7: V88 = MUL V87 0x1
0x1a8: V89 = OR V88 V85
0x1aa: S[0x1] = V89
0x1ad: JUMP 0x99
---
Entry stack: [V10, 0x99, V31]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ae
[0x1ae:0x1d3]
---
Predecessors: [0xa6]
Successors: [0xae]
---
0x1ae JUMPDEST
0x1af PUSH1 0x1
0x1b1 PUSH1 0x0
0x1b3 SWAP1
0x1b4 SLOAD
0x1b5 SWAP1
0x1b6 PUSH2 0x100
0x1b9 EXP
0x1ba SWAP1
0x1bb DIV
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 DUP2
0x1d3 JUMP
---
0x1ae: JUMPDEST 
0x1af: V90 = 0x1
0x1b1: V91 = 0x0
0x1b4: V92 = S[0x1]
0x1b6: V93 = 0x100
0x1b9: V94 = EXP 0x100 0x0
0x1bb: V95 = DIV V92 0x1
0x1bc: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1d3: JUMP 0xae
---
Entry stack: [V10, 0xae]
Stack pops: 1
Stack additions: [S0, V97]
Exit stack: [V10, 0xae, V97]

================================

Block 0x1d4
[0x1d4:0x247]
---
Predecessors: [0xfb, 0x4af]
Successors: [0x248, 0x24c]
---
0x1d4 JUMPDEST
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 SWAP1
0x1d9 SLOAD
0x1da SWAP1
0x1db PUSH2 0x100
0x1de EXP
0x1df SWAP1
0x1e0 DIV
0x1e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f6 AND
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d PUSH2 0x8fc
0x210 ADDRESS
0x211 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x226 AND
0x227 BALANCE
0x228 SWAP1
0x229 DUP2
0x22a ISZERO
0x22b MUL
0x22c SWAP1
0x22d PUSH1 0x40
0x22f MLOAD
0x230 PUSH1 0x0
0x232 PUSH1 0x40
0x234 MLOAD
0x235 DUP1
0x236 DUP4
0x237 SUB
0x238 DUP2
0x239 DUP6
0x23a DUP9
0x23b DUP9
0x23c CALL
0x23d SWAP4
0x23e POP
0x23f POP
0x240 POP
0x241 POP
0x242 ISZERO
0x243 ISZERO
0x244 PUSH2 0x24c
0x247 JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V98 = 0x0
0x1d9: V99 = S[0x0]
0x1db: V100 = 0x100
0x1de: V101 = EXP 0x100 0x0
0x1e0: V102 = DIV V99 0x1
0x1e1: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1f7: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x20d: V107 = 0x8fc
0x210: V108 = ADDRESS
0x211: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x226: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x227: V111 = BALANCE V110
0x22a: V112 = ISZERO V111
0x22b: V113 = MUL V112 0x8fc
0x22d: V114 = 0x40
0x22f: V115 = M[0x40]
0x230: V116 = 0x0
0x232: V117 = 0x40
0x234: V118 = M[0x40]
0x237: V119 = SUB V115 V118
0x23c: V120 = CALL V113 V106 V111 V118 V119 V118 0x0
0x242: V121 = ISZERO V120
0x243: V122 = ISZERO V121
0x244: V123 = 0x24c
0x247: JUMPI 0x24c V122
---
Entry stack: [V10, 0x10d, V129, S1, {0x103, 0x4b7}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10d, V129, S1, {0x103, 0x4b7}]

================================

Block 0x248
[0x248:0x24b]
---
Predecessors: [0x1d4]
Successors: []
---
0x248 PUSH1 0x0
0x24a DUP1
0x24b REVERT
---
0x248: V124 = 0x0
0x24b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10d, V129, S1, {0x103, 0x4b7}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10d, V129, S1, {0x103, 0x4b7}]

================================

Block 0x24c
[0x24c:0x24d]
---
Predecessors: [0x1d4]
Successors: [0x103, 0x4b7]
---
0x24c JUMPDEST
0x24d JUMP
---
0x24c: JUMPDEST 
0x24d: JUMP {0x103, 0x4b7}
---
Entry stack: [V10, 0x10d, V129, S1, {0x103, 0x4b7}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x10d, V129, S1]

================================

Block 0x24e
[0x24e:0x325]
---
Predecessors: [0x105]
Successors: [0x326, 0x32a]
---
0x24e JUMPDEST
0x24f PUSH1 0x0
0x251 DUP1
0x252 ADDRESS
0x253 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x268 AND
0x269 BALANCE
0x26a SWAP2
0x26b POP
0x26c PUSH1 0x1
0x26e PUSH1 0x0
0x270 SWAP1
0x271 SLOAD
0x272 SWAP1
0x273 PUSH2 0x100
0x276 EXP
0x277 SWAP1
0x278 DIV
0x279 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28e AND
0x28f SWAP1
0x290 POP
0x291 DUP1
0x292 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a7 AND
0x2a8 PUSH4 0x19ab453c
0x2ad ADDRESS
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 DUP3
0x2b2 PUSH4 0xffffffff
0x2b7 AND
0x2b8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d6 MUL
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0x4
0x2db ADD
0x2dc DUP1
0x2dd DUP3
0x2de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f3 AND
0x2f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x309 AND
0x30a DUP2
0x30b MSTORE
0x30c PUSH1 0x20
0x30e ADD
0x30f SWAP2
0x310 POP
0x311 POP
0x312 PUSH1 0x0
0x314 PUSH1 0x40
0x316 MLOAD
0x317 DUP1
0x318 DUP4
0x319 SUB
0x31a DUP2
0x31b PUSH1 0x0
0x31d DUP8
0x31e DUP1
0x31f EXTCODESIZE
0x320 ISZERO
0x321 ISZERO
0x322 PUSH2 0x32a
0x325 JUMPI
---
0x24e: JUMPDEST 
0x24f: V125 = 0x0
0x252: V126 = ADDRESS
0x253: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x268: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x269: V129 = BALANCE V128
0x26c: V130 = 0x1
0x26e: V131 = 0x0
0x271: V132 = S[0x1]
0x273: V133 = 0x100
0x276: V134 = EXP 0x100 0x0
0x278: V135 = DIV V132 0x1
0x279: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x28e: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x292: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x2a8: V140 = 0x19ab453c
0x2ad: V141 = ADDRESS
0x2ae: V142 = 0x40
0x2b0: V143 = M[0x40]
0x2b2: V144 = 0xffffffff
0x2b7: V145 = AND 0xffffffff 0x19ab453c
0x2b8: V146 = 0x100000000000000000000000000000000000000000000000000000000
0x2d6: V147 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x19ab453c
0x2d8: M[V143] = 0x19ab453c00000000000000000000000000000000000000000000000000000000
0x2d9: V148 = 0x4
0x2db: V149 = ADD 0x4 V143
0x2de: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x2f4: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x309: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x30b: M[V149] = V153
0x30c: V154 = 0x20
0x30e: V155 = ADD 0x20 V149
0x312: V156 = 0x0
0x314: V157 = 0x40
0x316: V158 = M[0x40]
0x319: V159 = SUB V155 V158
0x31b: V160 = 0x0
0x31f: V161 = EXTCODESIZE V139
0x320: V162 = ISZERO V161
0x321: V163 = ISZERO V162
0x322: V164 = 0x32a
0x325: JUMPI 0x32a V163
---
Entry stack: [V10, 0x10d]
Stack pops: 0
Stack additions: [V129, V137, V139, 0x19ab453c, V155, 0x0, V158, V159, V158, 0x0, V139]
Exit stack: [V10, 0x10d, V129, V137, V139, 0x19ab453c, V155, 0x0, V158, V159, V158, 0x0, V139]

================================

Block 0x326
[0x326:0x329]
---
Predecessors: [0x24e]
Successors: []
---
0x326 PUSH1 0x0
0x328 DUP1
0x329 REVERT
---
0x326: V165 = 0x0
0x329: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10d, V129, V137, V139, 0x19ab453c, V155, 0x0, V158, V159, V158, 0x0, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10d, V129, V137, V139, 0x19ab453c, V155, 0x0, V158, V159, V158, 0x0, V139]

================================

Block 0x32a
[0x32a:0x336]
---
Predecessors: [0x24e]
Successors: [0x337, 0x33b]
---
0x32a JUMPDEST
0x32b PUSH2 0x2c6
0x32e GAS
0x32f SUB
0x330 CALL
0x331 ISZERO
0x332 ISZERO
0x333 PUSH2 0x33b
0x336 JUMPI
---
0x32a: JUMPDEST 
0x32b: V166 = 0x2c6
0x32e: V167 = GAS
0x32f: V168 = SUB V167 0x2c6
0x330: V169 = CALL V168 V139 0x0 V158 V159 V158 0x0
0x331: V170 = ISZERO V169
0x332: V171 = ISZERO V170
0x333: V172 = 0x33b
0x336: JUMPI 0x33b V171
---
Entry stack: [V10, 0x10d, V129, V137, V139, 0x19ab453c, V155, 0x0, V158, V159, V158, 0x0, V139]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x10d, V129, V137, V139, 0x19ab453c, V155]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x32a]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V173 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10d, V129, V137, V139, 0x19ab453c, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10d, V129, V137, V139, 0x19ab453c, V155]

================================

Block 0x33b
[0x33b:0x3a4]
---
Predecessors: [0x32a]
Successors: [0x3a5, 0x3a9]
---
0x33b JUMPDEST
0x33c POP
0x33d POP
0x33e POP
0x33f DUP1
0x340 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x355 AND
0x356 PUSH4 0x8386927a
0x35b PUSH8 0xde0b6b3a7640000
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP3
0x368 PUSH4 0xffffffff
0x36d AND
0x36e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x38c MUL
0x38d DUP2
0x38e MSTORE
0x38f PUSH1 0x4
0x391 ADD
0x392 PUSH1 0x0
0x394 PUSH1 0x40
0x396 MLOAD
0x397 DUP1
0x398 DUP4
0x399 SUB
0x39a DUP2
0x39b DUP6
0x39c DUP9
0x39d DUP1
0x39e EXTCODESIZE
0x39f ISZERO
0x3a0 ISZERO
0x3a1 PUSH2 0x3a9
0x3a4 JUMPI
---
0x33b: JUMPDEST 
0x340: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x355: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x356: V176 = 0x8386927a
0x35b: V177 = 0xde0b6b3a7640000
0x364: V178 = 0x40
0x366: V179 = M[0x40]
0x368: V180 = 0xffffffff
0x36d: V181 = AND 0xffffffff 0x8386927a
0x36e: V182 = 0x100000000000000000000000000000000000000000000000000000000
0x38c: V183 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8386927a
0x38e: M[V179] = 0x8386927a00000000000000000000000000000000000000000000000000000000
0x38f: V184 = 0x4
0x391: V185 = ADD 0x4 V179
0x392: V186 = 0x0
0x394: V187 = 0x40
0x396: V188 = M[0x40]
0x399: V189 = SUB V185 V188
0x39e: V190 = EXTCODESIZE V175
0x39f: V191 = ISZERO V190
0x3a0: V192 = ISZERO V191
0x3a1: V193 = 0x3a9
0x3a4: JUMPI 0x3a9 V192
---
Entry stack: [V10, 0x10d, V129, V137, V139, 0x19ab453c, V155]
Stack pops: 4
Stack additions: [S3, V175, 0x8386927a, 0xde0b6b3a7640000, V185, 0x0, V188, V189, V188, 0xde0b6b3a7640000, V175]
Exit stack: [V10, 0x10d, V129, V137, V175, 0x8386927a, 0xde0b6b3a7640000, V185, 0x0, V188, V189, V188, 0xde0b6b3a7640000, V175]

================================

Block 0x3a5
[0x3a5:0x3a8]
---
Predecessors: [0x33b]
Successors: []
---
0x3a5 PUSH1 0x0
0x3a7 DUP1
0x3a8 REVERT
---
0x3a5: V194 = 0x0
0x3a8: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10d, V129, V137, V175, 0x8386927a, 0xde0b6b3a7640000, V185, 0x0, V188, V189, V188, 0xde0b6b3a7640000, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10d, V129, V137, V175, 0x8386927a, 0xde0b6b3a7640000, V185, 0x0, V188, V189, V188, 0xde0b6b3a7640000, V175]

================================

Block 0x3a9
[0x3a9:0x3b5]
---
Predecessors: [0x33b]
Successors: [0x3b6, 0x3ba]
---
0x3a9 JUMPDEST
0x3aa PUSH2 0x25ee
0x3ad GAS
0x3ae SUB
0x3af CALL
0x3b0 ISZERO
0x3b1 ISZERO
0x3b2 PUSH2 0x3ba
0x3b5 JUMPI
---
0x3a9: JUMPDEST 
0x3aa: V195 = 0x25ee
0x3ad: V196 = GAS
0x3ae: V197 = SUB V196 0x25ee
0x3af: V198 = CALL V197 V175 0xde0b6b3a7640000 V188 V189 V188 0x0
0x3b0: V199 = ISZERO V198
0x3b1: V200 = ISZERO V199
0x3b2: V201 = 0x3ba
0x3b5: JUMPI 0x3ba V200
---
Entry stack: [V10, 0x10d, V129, V137, V175, 0x8386927a, 0xde0b6b3a7640000, V185, 0x0, V188, V189, V188, 0xde0b6b3a7640000, V175]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x10d, V129, V137, V175, 0x8386927a, 0xde0b6b3a7640000, V185]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x3a9]
Successors: []
---
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 REVERT
---
0x3b6: V202 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10d, V129, V137, V175, 0x8386927a, 0xde0b6b3a7640000, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10d, V129, V137, V175, 0x8386927a, 0xde0b6b3a7640000, V185]

================================

Block 0x3ba
[0x3ba:0x472]
---
Predecessors: [0x3a9]
Successors: [0x473, 0x477]
---
0x3ba JUMPDEST
0x3bb POP
0x3bc POP
0x3bd POP
0x3be POP
0x3bf DUP1
0x3c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d5 AND
0x3d6 PUSH4 0xb0a77ef7
0x3db ADDRESS
0x3dc DUP4
0x3dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f2 AND
0x3f3 BALANCE
0x3f4 PUSH1 0x40
0x3f6 MLOAD
0x3f7 DUP4
0x3f8 PUSH4 0xffffffff
0x3fd AND
0x3fe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x41c MUL
0x41d DUP2
0x41e MSTORE
0x41f PUSH1 0x4
0x421 ADD
0x422 DUP1
0x423 DUP4
0x424 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x439 AND
0x43a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44f AND
0x450 DUP2
0x451 MSTORE
0x452 PUSH1 0x20
0x454 ADD
0x455 DUP3
0x456 DUP2
0x457 MSTORE
0x458 PUSH1 0x20
0x45a ADD
0x45b SWAP3
0x45c POP
0x45d POP
0x45e POP
0x45f PUSH1 0x0
0x461 PUSH1 0x40
0x463 MLOAD
0x464 DUP1
0x465 DUP4
0x466 SUB
0x467 DUP2
0x468 PUSH1 0x0
0x46a DUP8
0x46b DUP1
0x46c EXTCODESIZE
0x46d ISZERO
0x46e ISZERO
0x46f PUSH2 0x477
0x472 JUMPI
---
0x3ba: JUMPDEST 
0x3c0: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d5: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x3d6: V205 = 0xb0a77ef7
0x3db: V206 = ADDRESS
0x3dd: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f2: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x3f3: V209 = BALANCE V208
0x3f4: V210 = 0x40
0x3f6: V211 = M[0x40]
0x3f8: V212 = 0xffffffff
0x3fd: V213 = AND 0xffffffff 0xb0a77ef7
0x3fe: V214 = 0x100000000000000000000000000000000000000000000000000000000
0x41c: V215 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb0a77ef7
0x41e: M[V211] = 0xb0a77ef700000000000000000000000000000000000000000000000000000000
0x41f: V216 = 0x4
0x421: V217 = ADD 0x4 V211
0x424: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x439: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x43a: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x451: M[V217] = V221
0x452: V222 = 0x20
0x454: V223 = ADD 0x20 V217
0x457: M[V223] = V209
0x458: V224 = 0x20
0x45a: V225 = ADD 0x20 V223
0x45f: V226 = 0x0
0x461: V227 = 0x40
0x463: V228 = M[0x40]
0x466: V229 = SUB V225 V228
0x468: V230 = 0x0
0x46c: V231 = EXTCODESIZE V204
0x46d: V232 = ISZERO V231
0x46e: V233 = ISZERO V232
0x46f: V234 = 0x477
0x472: JUMPI 0x477 V233
---
Entry stack: [V10, 0x10d, V129, V137, V175, 0x8386927a, 0xde0b6b3a7640000, V185]
Stack pops: 5
Stack additions: [S4, V204, 0xb0a77ef7, V225, 0x0, V228, V229, V228, 0x0, V204]
Exit stack: [V10, 0x10d, V129, V137, V204, 0xb0a77ef7, V225, 0x0, V228, V229, V228, 0x0, V204]

================================

Block 0x473
[0x473:0x476]
---
Predecessors: [0x3ba]
Successors: []
---
0x473 PUSH1 0x0
0x475 DUP1
0x476 REVERT
---
0x473: V235 = 0x0
0x476: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10d, V129, V137, V204, 0xb0a77ef7, V225, 0x0, V228, V229, V228, 0x0, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10d, V129, V137, V204, 0xb0a77ef7, V225, 0x0, V228, V229, V228, 0x0, V204]

================================

Block 0x477
[0x477:0x483]
---
Predecessors: [0x3ba]
Successors: [0x484, 0x488]
---
0x477 JUMPDEST
0x478 PUSH2 0x2c6
0x47b GAS
0x47c SUB
0x47d CALL
0x47e ISZERO
0x47f ISZERO
0x480 PUSH2 0x488
0x483 JUMPI
---
0x477: JUMPDEST 
0x478: V236 = 0x2c6
0x47b: V237 = GAS
0x47c: V238 = SUB V237 0x2c6
0x47d: V239 = CALL V238 V204 0x0 V228 V229 V228 0x0
0x47e: V240 = ISZERO V239
0x47f: V241 = ISZERO V240
0x480: V242 = 0x488
0x483: JUMPI 0x488 V241
---
Entry stack: [V10, 0x10d, V129, V137, V204, 0xb0a77ef7, V225, 0x0, V228, V229, V228, 0x0, V204]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x10d, V129, V137, V204, 0xb0a77ef7, V225]

================================

Block 0x484
[0x484:0x487]
---
Predecessors: [0x477]
Successors: []
---
0x484 PUSH1 0x0
0x486 DUP1
0x487 REVERT
---
0x484: V243 = 0x0
0x487: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10d, V129, V137, V204, 0xb0a77ef7, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10d, V129, V137, V204, 0xb0a77ef7, V225]

================================

Block 0x488
[0x488:0x4aa]
---
Predecessors: [0x477]
Successors: [0x4ab, 0x4af]
---
0x488 JUMPDEST
0x489 POP
0x48a POP
0x48b POP
0x48c ADDRESS
0x48d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a2 AND
0x4a3 BALANCE
0x4a4 DUP3
0x4a5 GT
0x4a6 ISZERO
0x4a7 PUSH2 0x4af
0x4aa JUMPI
---
0x488: JUMPDEST 
0x48c: V244 = ADDRESS
0x48d: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x4a3: V247 = BALANCE V246
0x4a5: V248 = GT V129 V247
0x4a6: V249 = ISZERO V248
0x4a7: V250 = 0x4af
0x4aa: JUMPI 0x4af V249
---
Entry stack: [V10, 0x10d, V129, V137, V204, 0xb0a77ef7, V225]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, 0x10d, V129, V137]

================================

Block 0x4ab
[0x4ab:0x4ae]
---
Predecessors: [0x488]
Successors: []
---
0x4ab PUSH1 0x0
0x4ad DUP1
0x4ae REVERT
---
0x4ab: V251 = 0x0
0x4ae: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10d, V129, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10d, V129, V137]

================================

Block 0x4af
[0x4af:0x4b6]
---
Predecessors: [0x488]
Successors: [0x1d4]
---
0x4af JUMPDEST
0x4b0 PUSH2 0x4b7
0x4b3 PUSH2 0x1d4
0x4b6 JUMP
---
0x4af: JUMPDEST 
0x4b0: V252 = 0x4b7
0x4b3: V253 = 0x1d4
0x4b6: JUMP 0x1d4
---
Entry stack: [V10, 0x10d, V129, V137]
Stack pops: 0
Stack additions: [0x4b7]
Exit stack: [V10, 0x10d, V129, V137, 0x4b7]

================================

Block 0x4b7
[0x4b7:0x4ba]
---
Predecessors: [0x24c]
Successors: [0x10d]
---
0x4b7 JUMPDEST
0x4b8 POP
0x4b9 POP
0x4ba JUMP
---
0x4b7: JUMPDEST 
0x4ba: JUMP 0x10d
---
Entry stack: [V10, 0x10d, V129, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x4bb
[0x4bb:0x4ee]
---
Predecessors: []
Successors: []
---
0x4bb STOP
0x4bc LOG1
0x4bd PUSH6 0x627a7a723058
0x4c4 SHA3
0x4c5 DUP9
0x4c6 SWAP6
0x4c7 CALLER
0x4c8 MISSING 0xdd
0x4c9 MISSING 0x5f
0x4ca DUP9
0x4cb MISSING 0x48
0x4cc MISSING 0xc4
0x4cd SWAP13
0x4ce MISSING 0xbb
0x4cf MISSING 0xcb
0x4d0 MISSING 0xea
0x4d1 MISSING 0xee
0x4d2 MISSING 0x22
0x4d3 MSIZE
0x4d4 MISSING 0x27
0x4d5 MISSING 0x2a
0x4d6 DUP9
0x4d7 DIV
0x4d8 MISSING 0x2e
0x4d9 COINBASE
0x4da SSTORE
0x4db DUP2
0x4dc PUSH1 0x4b
0x4de LOG0
0x4df MUL
0x4e0 EQ
0x4e1 CALLDATALOAD
0x4e2 PUSH12 0x9c5b0029
---
0x4bb: STOP 
0x4bc: LOG S0 S1 S2
0x4bd: V254 = 0x627a7a723058
0x4c4: V255 = SHA3 0x627a7a723058 S3
0x4c7: V256 = CALLER
0x4c8: MISSING 0xdd
0x4c9: MISSING 0x5f
0x4cb: MISSING 0x48
0x4cc: MISSING 0xc4
0x4ce: MISSING 0xbb
0x4cf: MISSING 0xcb
0x4d0: MISSING 0xea
0x4d1: MISSING 0xee
0x4d2: MISSING 0x22
0x4d3: V257 = MSIZE
0x4d4: MISSING 0x27
0x4d5: MISSING 0x2a
0x4d7: V258 = DIV S8 S0
0x4d8: MISSING 0x2e
0x4d9: V259 = COINBASE
0x4da: S[V259] = S0
0x4dc: V260 = 0x4b
0x4de: LOG 0x4b S2
0x4df: V261 = MUL S1 S2
0x4e0: V262 = EQ V261 S3
0x4e1: V263 = CALLDATALOAD V262
0x4e2: V264 = 0x9c5b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V256, S8, V255, S4, S5, S6, S7, S11, S9, S10, S11, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, V257, V258, S1, S2, S3, S4, S5, S6, S7, S8, 0x9c5b0029, V263]
Exit stack: []

================================

Function 0:
Public function signature: 0x14c01d9f
Entry block: 0x62
Exit block: 0x99
Body: 0x62, 0x69, 0x6d, 0x99, 0x10f, 0x166, 0x16a

Function 1:
Public function signature: 0x72e208eb
Entry block: 0x9b
Exit block: 0xae
Body: 0x9b, 0xa2, 0xa6, 0xae, 0x1ae

Function 2:
Public function signature: 0x793cd71e
Entry block: 0xf0
Exit block: 0x103
Body: 0xf0, 0xf7, 0xfb, 0x103

Function 3:
Public function signature: 0xf5632bf1
Entry block: 0x105
Exit block: 0x10d
Body: 0x105, 0x10d, 0x24e, 0x326, 0x32a, 0x337, 0x33b, 0x3a5, 0x3a9, 0x3b6, 0x3ba, 0x473, 0x477, 0x484, 0x488, 0x4ab, 0x4af, 0x4b7

Function 4:
Public fallback function
Entry block: 0x60
Exit block: 0x60
Body: 0x60

Function 5:
Private function
Entry block: 0x1d4
Exit block: 0x24c
Body: 0x1d4, 0x24c

