Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x49]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x49
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x49
0xa: JUMPI 0x49 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xe7]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x2ebf1d58
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xe7
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x2ebf1d58
0x39: V12 = EQ V10 0x2ebf1d58
0x3a: V13 = 0xe7
0x3d: JUMPI 0xe7 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x105]
---
0x3e DUP1
0x3f PUSH4 0xd709e978
0x44 EQ
0x45 PUSH2 0x105
0x48 JUMPI
---
0x3f: V14 = 0xd709e978
0x44: V15 = EQ 0xd709e978 V10
0x45: V16 = 0x105
0x48: JUMPI 0x105 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x4c]
---
Predecessors: [0x0, 0x3e]
Successors: [0x4d]
---
0x49 JUMPDEST
0x4a PUSH2 0xe5
---
0x49: JUMPDEST 
0x4a: V17 = 0xe5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe5]
Exit stack: [V10, 0xe5]

================================

Block 0x4d
[0x4d:0x55]
---
Predecessors: [0x49]
Successors: [0x56, 0x5b]
---
0x4d JUMPDEST
0x4e PUSH1 0x0
0x50 CALLVALUE
0x51 GT
0x52 PUSH2 0x5b
0x55 JUMPI
---
0x4d: JUMPDEST 
0x4e: V18 = 0x0
0x50: V19 = CALLVALUE
0x51: V20 = GT V19 0x0
0x52: V21 = 0x5b
0x55: JUMPI 0x5b V20
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x56
[0x56:0x5a]
---
Predecessors: [0x4d]
Successors: []
---
0x56 PUSH1 0x0
0x58 PUSH1 0x0
0x5a REVERT
---
0x56: V22 = 0x0
0x58: V23 = 0x0
0x5a: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x5b
[0x5b:0x74]
---
Predecessors: [0x4d]
Successors: [0x75, 0xe2]
---
0x5b JUMPDEST
0x5c PUSH8 0x16345785d8a0000
0x65 PUSH1 0x1
0x67 PUSH1 0xa0
0x69 PUSH1 0x2
0x6b EXP
0x6c SUB
0x6d ADDRESS
0x6e AND
0x6f BALANCE
0x70 LT
0x71 PUSH2 0xe2
0x74 JUMPI
---
0x5b: JUMPDEST 
0x5c: V24 = 0x16345785d8a0000
0x65: V25 = 0x1
0x67: V26 = 0xa0
0x69: V27 = 0x2
0x6b: V28 = EXP 0x2 0xa0
0x6c: V29 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d: V30 = ADDRESS
0x6e: V31 = AND V30 0xffffffffffffffffffffffffffffffffffffffff
0x6f: V32 = BALANCE V31
0x70: V33 = LT V32 0x16345785d8a0000
0x71: V34 = 0xe2
0x74: JUMPI 0xe2 V33
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x75
[0x75:0xcd]
---
Predecessors: [0x5b]
Successors: [0xce, 0xcf]
---
0x75 PUSH1 0x0
0x77 DUP1
0x78 SLOAD
0x79 PUSH1 0x40
0x7b DUP1
0x7c MLOAD
0x7d PUSH32 0xe29df2200000000000000000000000000000000000000000000000000000000
0x9e DUP2
0x9f MSTORE
0xa0 SWAP1
0xa1 MLOAD
0xa2 PUSH1 0x1
0xa4 PUSH1 0xa0
0xa6 PUSH1 0x2
0xa8 EXP
0xa9 SUB
0xaa SWAP3
0xab DUP4
0xac AND
0xad SWAP4
0xae PUSH4 0xe29df22
0xb3 SWAP4
0xb4 ADDRESS
0xb5 AND
0xb6 BALANCE
0xb7 SWAP3
0xb8 PUSH1 0x4
0xba DUP1
0xbb DUP3
0xbc ADD
0xbd SWAP4
0xbe SWAP2
0xbf DUP3
0xc0 SWAP1
0xc1 SUB
0xc2 ADD
0xc3 DUP2
0xc4 DUP6
0xc5 DUP9
0xc6 DUP1
0xc7 EXTCODESIZE
0xc8 ISZERO
0xc9 ISZERO
0xca PUSH2 0xcf
0xcd JUMPI
---
0x75: V35 = 0x0
0x78: V36 = S[0x0]
0x79: V37 = 0x40
0x7c: V38 = M[0x40]
0x7d: V39 = 0xe29df2200000000000000000000000000000000000000000000000000000000
0x9f: M[V38] = 0xe29df2200000000000000000000000000000000000000000000000000000000
0xa1: V40 = M[0x40]
0xa2: V41 = 0x1
0xa4: V42 = 0xa0
0xa6: V43 = 0x2
0xa8: V44 = EXP 0x2 0xa0
0xa9: V45 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xae: V47 = 0xe29df22
0xb4: V48 = ADDRESS
0xb5: V49 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0xb6: V50 = BALANCE V49
0xb8: V51 = 0x4
0xbc: V52 = ADD V38 0x4
0xc1: V53 = SUB V38 V40
0xc2: V54 = ADD V53 0x4
0xc7: V55 = EXTCODESIZE V46
0xc8: V56 = ISZERO V55
0xc9: V57 = ISZERO V56
0xca: V58 = 0xcf
0xcd: JUMPI 0xcf V57
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: [V46, 0xe29df22, V50, V52, 0x0, V40, V54, V40, V50, V46]
Exit stack: [V10, 0xe5, V46, 0xe29df22, V50, V52, 0x0, V40, V54, V40, V50, V46]

================================

Block 0xce
[0xce:0xce]
---
Predecessors: [0x75]
Successors: []
---
0xce INVALID
---
0xce: INVALID 
---
Entry stack: [V10, 0xe5, V46, 0xe29df22, V50, V52, 0x0, V40, V54, V40, V50, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5, V46, 0xe29df22, V50, V52, 0x0, V40, V54, V40, V50, V46]

================================

Block 0xcf
[0xcf:0xdb]
---
Predecessors: [0x75]
Successors: [0xdc, 0xdd]
---
0xcf JUMPDEST
0xd0 PUSH2 0x25ee
0xd3 GAS
0xd4 SUB
0xd5 CALL
0xd6 ISZERO
0xd7 ISZERO
0xd8 PUSH2 0xdd
0xdb JUMPI
---
0xcf: JUMPDEST 
0xd0: V59 = 0x25ee
0xd3: V60 = GAS
0xd4: V61 = SUB V60 0x25ee
0xd5: V62 = CALL V61 V46 V50 V40 V54 V40 0x0
0xd6: V63 = ISZERO V62
0xd7: V64 = ISZERO V63
0xd8: V65 = 0xdd
0xdb: JUMPI 0xdd V64
---
Entry stack: [V10, 0xe5, V46, 0xe29df22, V50, V52, 0x0, V40, V54, V40, V50, V46]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xe5, V46, 0xe29df22, V50, V52]

================================

Block 0xdc
[0xdc:0xdc]
---
Predecessors: [0xcf]
Successors: []
---
0xdc INVALID
---
0xdc: INVALID 
---
Entry stack: [V10, 0xe5, V46, 0xe29df22, V50, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5, V46, 0xe29df22, V50, V52]

================================

Block 0xdd
[0xdd:0xe1]
---
Predecessors: [0xcf]
Successors: [0xe2]
---
0xdd JUMPDEST
0xde POP
0xdf POP
0xe0 POP
0xe1 POP
---
0xdd: JUMPDEST 
---
Entry stack: [V10, 0xe5, V46, 0xe29df22, V50, V52]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0xe2
[0xe2:0xe2]
---
Predecessors: [0x5b, 0xdd]
Successors: [0xe3]
---
0xe2 JUMPDEST
---
0xe2: JUMPDEST 
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0xe3
[0xe3:0xe4]
---
Predecessors: [0xe2]
Successors: [0xe5]
---
0xe3 JUMPDEST
0xe4 JUMP
---
0xe3: JUMPDEST 
0xe4: JUMP 0xe5
---
Entry stack: [V10, 0xe5]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xe5
[0xe5:0xe6]
---
Predecessors: [0xe3]
Successors: []
---
0xe5 JUMPDEST
0xe6 STOP
---
0xe5: JUMPDEST 
0xe6: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe7
[0xe7:0xed]
---
Predecessors: [0xb]
Successors: [0xee, 0xef]
---
0xe7 JUMPDEST
0xe8 CALLVALUE
0xe9 ISZERO
0xea PUSH2 0xef
0xed JUMPI
---
0xe7: JUMPDEST 
0xe8: V66 = CALLVALUE
0xe9: V67 = ISZERO V66
0xea: V68 = 0xef
0xed: JUMPI 0xef V67
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xee
[0xee:0xee]
---
Predecessors: [0xe7]
Successors: []
---
0xee INVALID
---
0xee: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xef
[0xef:0x102]
---
Predecessors: [0xe7]
Successors: [0x133]
---
0xef JUMPDEST
0xf0 PUSH2 0xe5
0xf3 PUSH1 0x1
0xf5 PUSH1 0xa0
0xf7 PUSH1 0x2
0xf9 EXP
0xfa SUB
0xfb PUSH1 0x4
0xfd CALLDATALOAD
0xfe AND
0xff PUSH2 0x133
0x102 JUMP
---
0xef: JUMPDEST 
0xf0: V69 = 0xe5
0xf3: V70 = 0x1
0xf5: V71 = 0xa0
0xf7: V72 = 0x2
0xf9: V73 = EXP 0x2 0xa0
0xfa: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb: V75 = 0x4
0xfd: V76 = CALLDATALOAD 0x4
0xfe: V77 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0xff: V78 = 0x133
0x102: JUMP 0x133
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe5, V77]
Exit stack: [V10, 0xe5, V77]

================================

Block 0x103
[0x103:0x104]
---
Predecessors: []
Successors: []
---
0x103 JUMPDEST
0x104 STOP
---
0x103: JUMPDEST 
0x104: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x105
[0x105:0x10b]
---
Predecessors: [0x3e]
Successors: [0x10c, 0x10d]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 ISZERO
0x108 PUSH2 0x10d
0x10b JUMPI
---
0x105: JUMPDEST 
0x106: V79 = CALLVALUE
0x107: V80 = ISZERO V79
0x108: V81 = 0x10d
0x10b: JUMPI 0x10d V80
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10c
[0x10c:0x10c]
---
Predecessors: [0x105]
Successors: []
---
0x10c INVALID
---
0x10c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10d
[0x10d:0x120]
---
Predecessors: [0x105]
Successors: [0x252]
---
0x10d JUMPDEST
0x10e PUSH2 0x121
0x111 PUSH1 0x1
0x113 PUSH1 0xa0
0x115 PUSH1 0x2
0x117 EXP
0x118 SUB
0x119 PUSH1 0x4
0x11b CALLDATALOAD
0x11c AND
0x11d PUSH2 0x252
0x120 JUMP
---
0x10d: JUMPDEST 
0x10e: V82 = 0x121
0x111: V83 = 0x1
0x113: V84 = 0xa0
0x115: V85 = 0x2
0x117: V86 = EXP 0x2 0xa0
0x118: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x119: V88 = 0x4
0x11b: V89 = CALLDATALOAD 0x4
0x11c: V90 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x11d: V91 = 0x252
0x120: JUMP 0x252
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x121, V90]
Exit stack: [V10, 0x121, V90]

================================

Block 0x121
[0x121:0x132]
---
Predecessors: [0x393]
Successors: []
---
0x121 JUMPDEST
0x122 PUSH1 0x40
0x124 DUP1
0x125 MLOAD
0x126 SWAP2
0x127 DUP3
0x128 MSTORE
0x129 MLOAD
0x12a SWAP1
0x12b DUP2
0x12c SWAP1
0x12d SUB
0x12e PUSH1 0x20
0x130 ADD
0x131 SWAP1
0x132 RETURN
---
0x121: JUMPDEST 
0x122: V92 = 0x40
0x125: V93 = M[0x40]
0x128: M[V93] = S0
0x129: V94 = M[0x40]
0x12d: V95 = SUB V93 V94
0x12e: V96 = 0x20
0x130: V97 = ADD 0x20 V95
0x132: RETURN V94 V97
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x133
[0x133:0x1a8]
---
Predecessors: [0xef]
Successors: [0x1a9, 0x1aa]
---
0x133 JUMPDEST
0x134 PUSH1 0x1
0x136 SLOAD
0x137 PUSH1 0x40
0x139 DUP1
0x13a MLOAD
0x13b PUSH1 0x0
0x13d PUSH1 0x20
0x13f SWAP2
0x140 DUP3
0x141 ADD
0x142 DUP2
0x143 SWAP1
0x144 MSTORE
0x145 DUP3
0x146 MLOAD
0x147 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x168 DUP2
0x169 MSTORE
0x16a PUSH1 0x1
0x16c PUSH1 0xa0
0x16e PUSH1 0x2
0x170 EXP
0x171 SUB
0x172 DUP7
0x173 DUP2
0x174 AND
0x175 PUSH1 0x4
0x177 DUP4
0x178 ADD
0x179 MSTORE
0x17a SWAP4
0x17b MLOAD
0x17c SWAP4
0x17d SWAP1
0x17e SWAP5
0x17f AND
0x180 SWAP4
0x181 PUSH4 0xa9059cbb
0x186 SWAP4
0x187 DUP7
0x188 SWAP4
0x189 DUP7
0x18a SWAP4
0x18b PUSH4 0x70a08231
0x190 SWAP4
0x191 PUSH1 0x24
0x193 DUP1
0x194 DUP3
0x195 ADD
0x196 SWAP5
0x197 SWAP3
0x198 SWAP2
0x199 DUP4
0x19a SWAP1
0x19b SUB
0x19c ADD
0x19d SWAP1
0x19e DUP3
0x19f SWAP1
0x1a0 DUP8
0x1a1 DUP1
0x1a2 EXTCODESIZE
0x1a3 ISZERO
0x1a4 ISZERO
0x1a5 PUSH2 0x1aa
0x1a8 JUMPI
---
0x133: JUMPDEST 
0x134: V98 = 0x1
0x136: V99 = S[0x1]
0x137: V100 = 0x40
0x13a: V101 = M[0x40]
0x13b: V102 = 0x0
0x13d: V103 = 0x20
0x141: V104 = ADD 0x20 V101
0x144: M[V104] = 0x0
0x146: V105 = M[0x40]
0x147: V106 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x169: M[V105] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x16a: V107 = 0x1
0x16c: V108 = 0xa0
0x16e: V109 = 0x2
0x170: V110 = EXP 0x2 0xa0
0x171: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x174: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x175: V113 = 0x4
0x178: V114 = ADD V105 0x4
0x179: M[V114] = V112
0x17b: V115 = M[0x40]
0x17f: V116 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0x181: V117 = 0xa9059cbb
0x18b: V118 = 0x70a08231
0x191: V119 = 0x24
0x195: V120 = ADD V105 0x24
0x19b: V121 = SUB V105 V115
0x19c: V122 = ADD V121 0x24
0x1a2: V123 = EXTCODESIZE V116
0x1a3: V124 = ISZERO V123
0x1a4: V125 = ISZERO V124
0x1a5: V126 = 0x1aa
0x1a8: JUMPI 0x1aa V125
---
Entry stack: [V10, 0xe5, V77]
Stack pops: 1
Stack additions: [S0, V116, 0xa9059cbb, S0, V116, 0x70a08231, V120, 0x20, V115, V122, V115, 0x0, V116]
Exit stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V77, V116, 0x70a08231, V120, 0x20, V115, V122, V115, 0x0, V116]

================================

Block 0x1a9
[0x1a9:0x1a9]
---
Predecessors: [0x133]
Successors: []
---
0x1a9 INVALID
---
0x1a9: INVALID 
---
Entry stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V77, V116, 0x70a08231, V120, 0x20, V115, V122, V115, 0x0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V77, V116, 0x70a08231, V120, 0x20, V115, V122, V115, 0x0, V116]

================================

Block 0x1aa
[0x1aa:0x1b6]
---
Predecessors: [0x133]
Successors: [0x1b7, 0x1b8]
---
0x1aa JUMPDEST
0x1ab PUSH2 0x2c6
0x1ae GAS
0x1af SUB
0x1b0 CALL
0x1b1 ISZERO
0x1b2 ISZERO
0x1b3 PUSH2 0x1b8
0x1b6 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V127 = 0x2c6
0x1ae: V128 = GAS
0x1af: V129 = SUB V128 0x2c6
0x1b0: V130 = CALL V129 V116 0x0 V115 V122 V115 0x20
0x1b1: V131 = ISZERO V130
0x1b2: V132 = ISZERO V131
0x1b3: V133 = 0x1b8
0x1b6: JUMPI 0x1b8 V132
---
Entry stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V77, V116, 0x70a08231, V120, 0x20, V115, V122, V115, 0x0, V116]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V77, V116, 0x70a08231, V120]

================================

Block 0x1b7
[0x1b7:0x1b7]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b7 INVALID
---
0x1b7: INVALID 
---
Entry stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V77, V116, 0x70a08231, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V77, V116, 0x70a08231, V120]

================================

Block 0x1b8
[0x1b8:0x230]
---
Predecessors: [0x1aa]
Successors: [0x231, 0x232]
---
0x1b8 JUMPDEST
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP1
0x1c0 MLOAD
0x1c1 SWAP1
0x1c2 POP
0x1c3 PUSH1 0x0
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb MSTORE
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf DUP4
0x1d0 PUSH4 0xffffffff
0x1d5 AND
0x1d6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1f4 MUL
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 PUSH1 0x4
0x1f9 ADD
0x1fa DUP1
0x1fb DUP4
0x1fc PUSH1 0x1
0x1fe PUSH1 0xa0
0x200 PUSH1 0x2
0x202 EXP
0x203 SUB
0x204 AND
0x205 PUSH1 0x1
0x207 PUSH1 0xa0
0x209 PUSH1 0x2
0x20b EXP
0x20c SUB
0x20d AND
0x20e DUP2
0x20f MSTORE
0x210 PUSH1 0x20
0x212 ADD
0x213 DUP3
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x20
0x218 ADD
0x219 SWAP3
0x21a POP
0x21b POP
0x21c POP
0x21d PUSH1 0x20
0x21f PUSH1 0x40
0x221 MLOAD
0x222 DUP1
0x223 DUP4
0x224 SUB
0x225 DUP2
0x226 PUSH1 0x0
0x228 DUP8
0x229 DUP1
0x22a EXTCODESIZE
0x22b ISZERO
0x22c ISZERO
0x22d PUSH2 0x232
0x230 JUMPI
---
0x1b8: JUMPDEST 
0x1bc: V134 = 0x40
0x1be: V135 = M[0x40]
0x1c0: V136 = M[V135]
0x1c3: V137 = 0x0
0x1c5: V138 = 0x40
0x1c7: V139 = M[0x40]
0x1c8: V140 = 0x20
0x1ca: V141 = ADD 0x20 V139
0x1cb: M[V141] = 0x0
0x1cc: V142 = 0x40
0x1ce: V143 = M[0x40]
0x1d0: V144 = 0xffffffff
0x1d5: V145 = AND 0xffffffff 0xa9059cbb
0x1d6: V146 = 0x100000000000000000000000000000000000000000000000000000000
0x1f4: V147 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x1f6: M[V143] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1f7: V148 = 0x4
0x1f9: V149 = ADD 0x4 V143
0x1fc: V150 = 0x1
0x1fe: V151 = 0xa0
0x200: V152 = 0x2
0x202: V153 = EXP 0x2 0xa0
0x203: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x204: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x205: V156 = 0x1
0x207: V157 = 0xa0
0x209: V158 = 0x2
0x20b: V159 = EXP 0x2 0xa0
0x20c: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20d: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x20f: M[V149] = V161
0x210: V162 = 0x20
0x212: V163 = ADD 0x20 V149
0x215: M[V163] = V136
0x216: V164 = 0x20
0x218: V165 = ADD 0x20 V163
0x21d: V166 = 0x20
0x21f: V167 = 0x40
0x221: V168 = M[0x40]
0x224: V169 = SUB V165 V168
0x226: V170 = 0x0
0x22a: V171 = EXTCODESIZE V116
0x22b: V172 = ISZERO V171
0x22c: V173 = ISZERO V172
0x22d: V174 = 0x232
0x230: JUMPI 0x232 V173
---
Entry stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V77, V116, 0x70a08231, V120]
Stack pops: 6
Stack additions: [S5, S4, V165, 0x20, V168, V169, V168, 0x0, S5]
Exit stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V165, 0x20, V168, V169, V168, 0x0, V116]

================================

Block 0x231
[0x231:0x231]
---
Predecessors: [0x1b8]
Successors: []
---
0x231 INVALID
---
0x231: INVALID 
---
Entry stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V165, 0x20, V168, V169, V168, 0x0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V165, 0x20, V168, V169, V168, 0x0, V116]

================================

Block 0x232
[0x232:0x23e]
---
Predecessors: [0x1b8]
Successors: [0x23f, 0x240]
---
0x232 JUMPDEST
0x233 PUSH2 0x2c6
0x236 GAS
0x237 SUB
0x238 CALL
0x239 ISZERO
0x23a ISZERO
0x23b PUSH2 0x240
0x23e JUMPI
---
0x232: JUMPDEST 
0x233: V175 = 0x2c6
0x236: V176 = GAS
0x237: V177 = SUB V176 0x2c6
0x238: V178 = CALL V177 V116 0x0 V168 V169 V168 0x20
0x239: V179 = ISZERO V178
0x23a: V180 = ISZERO V179
0x23b: V181 = 0x240
0x23e: JUMPI 0x240 V180
---
Entry stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V165, 0x20, V168, V169, V168, 0x0, V116]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V165]

================================

Block 0x23f
[0x23f:0x23f]
---
Predecessors: [0x232]
Successors: []
---
0x23f INVALID
---
0x23f: INVALID 
---
Entry stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V165]

================================

Block 0x240
[0x240:0x24e]
---
Predecessors: [0x232]
Successors: []
---
0x240 JUMPDEST
0x241 POP
0x242 POP
0x243 POP
0x244 PUSH1 0x1
0x246 PUSH1 0xa0
0x248 PUSH1 0x2
0x24a EXP
0x24b SUB
0x24c DUP2
0x24d AND
0x24e SELFDESTRUCT
---
0x240: JUMPDEST 
0x244: V182 = 0x1
0x246: V183 = 0xa0
0x248: V184 = 0x2
0x24a: V185 = EXP 0x2 0xa0
0x24b: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24d: V187 = AND V77 0xffffffffffffffffffffffffffffffffffffffff
0x24e: SELFDESTRUCT V187
---
Entry stack: [V10, 0xe5, V77, V116, 0xa9059cbb, V165]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0xe5, V77]

================================

Block 0x24f
[0x24f:0x251]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x24f JUMPDEST
0x250 POP
0x251 JUMP
---
0x24f: JUMPDEST 
0x251: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x252
[0x252:0x26b]
---
Predecessors: [0x10d]
Successors: [0x26c, 0x271]
---
0x252 JUMPDEST
0x253 PUSH1 0x0
0x255 DUP1
0x256 SLOAD
0x257 DUP2
0x258 SWAP1
0x259 CALLER
0x25a PUSH1 0x1
0x25c PUSH1 0xa0
0x25e PUSH1 0x2
0x260 EXP
0x261 SUB
0x262 SWAP1
0x263 DUP2
0x264 AND
0x265 SWAP2
0x266 AND
0x267 EQ
0x268 PUSH2 0x271
0x26b JUMPI
---
0x252: JUMPDEST 
0x253: V188 = 0x0
0x256: V189 = S[0x0]
0x259: V190 = CALLER
0x25a: V191 = 0x1
0x25c: V192 = 0xa0
0x25e: V193 = 0x2
0x260: V194 = EXP 0x2 0xa0
0x261: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x266: V197 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x267: V198 = EQ V197 V196
0x268: V199 = 0x271
0x26b: JUMPI 0x271 V198
---
Entry stack: [V10, 0x121, V90]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x121, V90, 0x0, 0x0]

================================

Block 0x26c
[0x26c:0x270]
---
Predecessors: [0x252]
Successors: []
---
0x26c PUSH1 0x0
0x26e PUSH1 0x0
0x270 REVERT
---
0x26c: V200 = 0x0
0x26e: V201 = 0x0
0x270: REVERT 0x0 0x0
---
Entry stack: [V10, 0x121, V90, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x121, V90, 0x0, 0x0]

================================

Block 0x271
[0x271:0x2dd]
---
Predecessors: [0x252]
Successors: [0x2de, 0x2df]
---
0x271 JUMPDEST
0x272 PUSH1 0x1
0x274 SLOAD
0x275 PUSH1 0x40
0x277 DUP1
0x278 MLOAD
0x279 PUSH1 0x0
0x27b PUSH1 0x20
0x27d SWAP2
0x27e DUP3
0x27f ADD
0x280 DUP2
0x281 SWAP1
0x282 MSTORE
0x283 DUP3
0x284 MLOAD
0x285 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2a6 DUP2
0x2a7 MSTORE
0x2a8 PUSH1 0x1
0x2aa PUSH1 0xa0
0x2ac PUSH1 0x2
0x2ae EXP
0x2af SUB
0x2b0 ADDRESS
0x2b1 DUP2
0x2b2 AND
0x2b3 PUSH1 0x4
0x2b5 DUP4
0x2b6 ADD
0x2b7 MSTORE
0x2b8 SWAP4
0x2b9 MLOAD
0x2ba SWAP4
0x2bb SWAP1
0x2bc SWAP5
0x2bd AND
0x2be SWAP4
0x2bf PUSH4 0x70a08231
0x2c4 SWAP4
0x2c5 PUSH1 0x24
0x2c7 DUP1
0x2c8 DUP4
0x2c9 ADD
0x2ca SWAP5
0x2cb SWAP4
0x2cc SWAP2
0x2cd SWAP3
0x2ce DUP4
0x2cf SWAP1
0x2d0 SUB
0x2d1 ADD
0x2d2 SWAP1
0x2d3 DUP3
0x2d4 SWAP1
0x2d5 DUP8
0x2d6 DUP1
0x2d7 EXTCODESIZE
0x2d8 ISZERO
0x2d9 ISZERO
0x2da PUSH2 0x2df
0x2dd JUMPI
---
0x271: JUMPDEST 
0x272: V202 = 0x1
0x274: V203 = S[0x1]
0x275: V204 = 0x40
0x278: V205 = M[0x40]
0x279: V206 = 0x0
0x27b: V207 = 0x20
0x27f: V208 = ADD 0x20 V205
0x282: M[V208] = 0x0
0x284: V209 = M[0x40]
0x285: V210 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2a7: M[V209] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2a8: V211 = 0x1
0x2aa: V212 = 0xa0
0x2ac: V213 = 0x2
0x2ae: V214 = EXP 0x2 0xa0
0x2af: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b0: V216 = ADDRESS
0x2b2: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2b3: V218 = 0x4
0x2b6: V219 = ADD V209 0x4
0x2b7: M[V219] = V217
0x2b9: V220 = M[0x40]
0x2bd: V221 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V222 = 0x70a08231
0x2c5: V223 = 0x24
0x2c9: V224 = ADD V209 0x24
0x2d0: V225 = SUB V209 V220
0x2d1: V226 = ADD V225 0x24
0x2d7: V227 = EXTCODESIZE V221
0x2d8: V228 = ISZERO V227
0x2d9: V229 = ISZERO V228
0x2da: V230 = 0x2df
0x2dd: JUMPI 0x2df V229
---
Entry stack: [V10, 0x121, V90, 0x0, 0x0]
Stack pops: 0
Stack additions: [V221, 0x70a08231, V224, 0x20, V220, V226, V220, 0x0, V221]
Exit stack: [V10, 0x121, V90, 0x0, 0x0, V221, 0x70a08231, V224, 0x20, V220, V226, V220, 0x0, V221]

================================

Block 0x2de
[0x2de:0x2de]
---
Predecessors: [0x271]
Successors: []
---
0x2de INVALID
---
0x2de: INVALID 
---
Entry stack: [V10, 0x121, V90, 0x0, 0x0, V221, 0x70a08231, V224, 0x20, V220, V226, V220, 0x0, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x121, V90, 0x0, 0x0, V221, 0x70a08231, V224, 0x20, V220, V226, V220, 0x0, V221]

================================

Block 0x2df
[0x2df:0x2eb]
---
Predecessors: [0x271]
Successors: [0x2ec, 0x2ed]
---
0x2df JUMPDEST
0x2e0 PUSH2 0x2c6
0x2e3 GAS
0x2e4 SUB
0x2e5 CALL
0x2e6 ISZERO
0x2e7 ISZERO
0x2e8 PUSH2 0x2ed
0x2eb JUMPI
---
0x2df: JUMPDEST 
0x2e0: V231 = 0x2c6
0x2e3: V232 = GAS
0x2e4: V233 = SUB V232 0x2c6
0x2e5: V234 = CALL V233 V221 0x0 V220 V226 V220 0x20
0x2e6: V235 = ISZERO V234
0x2e7: V236 = ISZERO V235
0x2e8: V237 = 0x2ed
0x2eb: JUMPI 0x2ed V236
---
Entry stack: [V10, 0x121, V90, 0x0, 0x0, V221, 0x70a08231, V224, 0x20, V220, V226, V220, 0x0, V221]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x121, V90, 0x0, 0x0, V221, 0x70a08231, V224]

================================

Block 0x2ec
[0x2ec:0x2ec]
---
Predecessors: [0x2df]
Successors: []
---
0x2ec INVALID
---
0x2ec: INVALID 
---
Entry stack: [V10, 0x121, V90, 0x0, 0x0, V221, 0x70a08231, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x121, V90, 0x0, 0x0, V221, 0x70a08231, V224]

================================

Block 0x2ed
[0x2ed:0x368]
---
Predecessors: [0x2df]
Successors: [0x369, 0x36a]
---
0x2ed JUMPDEST
0x2ee POP
0x2ef POP
0x2f0 PUSH1 0x40
0x2f2 DUP1
0x2f3 MLOAD
0x2f4 DUP1
0x2f5 MLOAD
0x2f6 PUSH1 0x1
0x2f8 SLOAD
0x2f9 PUSH1 0x0
0x2fb PUSH1 0x20
0x2fd SWAP4
0x2fe DUP5
0x2ff ADD
0x300 DUP2
0x301 SWAP1
0x302 MSTORE
0x303 DUP5
0x304 MLOAD
0x305 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x326 DUP2
0x327 MSTORE
0x328 PUSH1 0x1
0x32a PUSH1 0xa0
0x32c PUSH1 0x2
0x32e EXP
0x32f SUB
0x330 DUP11
0x331 DUP2
0x332 AND
0x333 PUSH1 0x4
0x335 DUP4
0x336 ADD
0x337 MSTORE
0x338 PUSH1 0x24
0x33a DUP3
0x33b ADD
0x33c DUP6
0x33d SWAP1
0x33e MSTORE
0x33f SWAP6
0x340 MLOAD
0x341 SWAP4
0x342 SWAP8
0x343 POP
0x344 SWAP5
0x345 SWAP1
0x346 SWAP2
0x347 AND
0x348 SWAP5
0x349 POP
0x34a PUSH4 0xa9059cbb
0x34f SWAP4
0x350 PUSH1 0x44
0x352 DUP1
0x353 DUP3
0x354 ADD
0x355 SWAP5
0x356 SWAP4
0x357 SWAP3
0x358 SWAP2
0x359 DUP4
0x35a SWAP1
0x35b SUB
0x35c ADD
0x35d SWAP1
0x35e DUP3
0x35f SWAP1
0x360 DUP8
0x361 DUP1
0x362 EXTCODESIZE
0x363 ISZERO
0x364 ISZERO
0x365 PUSH2 0x36a
0x368 JUMPI
---
0x2ed: JUMPDEST 
0x2f0: V238 = 0x40
0x2f3: V239 = M[0x40]
0x2f5: V240 = M[V239]
0x2f6: V241 = 0x1
0x2f8: V242 = S[0x1]
0x2f9: V243 = 0x0
0x2fb: V244 = 0x20
0x2ff: V245 = ADD 0x20 V239
0x302: M[V245] = 0x0
0x304: V246 = M[0x40]
0x305: V247 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x327: M[V246] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x328: V248 = 0x1
0x32a: V249 = 0xa0
0x32c: V250 = 0x2
0x32e: V251 = EXP 0x2 0xa0
0x32f: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x332: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x333: V254 = 0x4
0x336: V255 = ADD V246 0x4
0x337: M[V255] = V253
0x338: V256 = 0x24
0x33b: V257 = ADD V246 0x24
0x33e: M[V257] = V240
0x340: V258 = M[0x40]
0x347: V259 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x34a: V260 = 0xa9059cbb
0x350: V261 = 0x44
0x354: V262 = ADD V246 0x44
0x35b: V263 = SUB V246 V258
0x35c: V264 = ADD V263 0x44
0x362: V265 = EXTCODESIZE V259
0x363: V266 = ISZERO V265
0x364: V267 = ISZERO V266
0x365: V268 = 0x36a
0x368: JUMPI 0x36a V267
---
Entry stack: [V10, 0x121, V90, 0x0, 0x0, V221, 0x70a08231, V224]
Stack pops: 6
Stack additions: [S5, S4, V240, V259, 0xa9059cbb, V262, 0x20, V258, V264, V258, 0x0, V259]
Exit stack: [V10, 0x121, V90, 0x0, V240, V259, 0xa9059cbb, V262, 0x20, V258, V264, V258, 0x0, V259]

================================

Block 0x369
[0x369:0x369]
---
Predecessors: [0x2ed]
Successors: []
---
0x369 INVALID
---
0x369: INVALID 
---
Entry stack: [V10, 0x121, V90, 0x0, V240, V259, 0xa9059cbb, V262, 0x20, V258, V264, V258, 0x0, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x121, V90, 0x0, V240, V259, 0xa9059cbb, V262, 0x20, V258, V264, V258, 0x0, V259]

================================

Block 0x36a
[0x36a:0x376]
---
Predecessors: [0x2ed]
Successors: [0x377, 0x378]
---
0x36a JUMPDEST
0x36b PUSH2 0x2c6
0x36e GAS
0x36f SUB
0x370 CALL
0x371 ISZERO
0x372 ISZERO
0x373 PUSH2 0x378
0x376 JUMPI
---
0x36a: JUMPDEST 
0x36b: V269 = 0x2c6
0x36e: V270 = GAS
0x36f: V271 = SUB V270 0x2c6
0x370: V272 = CALL V271 V259 0x0 V258 V264 V258 0x20
0x371: V273 = ISZERO V272
0x372: V274 = ISZERO V273
0x373: V275 = 0x378
0x376: JUMPI 0x378 V274
---
Entry stack: [V10, 0x121, V90, 0x0, V240, V259, 0xa9059cbb, V262, 0x20, V258, V264, V258, 0x0, V259]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x121, V90, 0x0, V240, V259, 0xa9059cbb, V262]

================================

Block 0x377
[0x377:0x377]
---
Predecessors: [0x36a]
Successors: []
---
0x377 INVALID
---
0x377: INVALID 
---
Entry stack: [V10, 0x121, V90, 0x0, V240, V259, 0xa9059cbb, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x121, V90, 0x0, V240, V259, 0xa9059cbb, V262]

================================

Block 0x378
[0x378:0x385]
---
Predecessors: [0x36a]
Successors: [0x386, 0x38d]
---
0x378 JUMPDEST
0x379 POP
0x37a POP
0x37b PUSH1 0x40
0x37d MLOAD
0x37e MLOAD
0x37f ISZERO
0x380 SWAP1
0x381 POP
0x382 PUSH2 0x38d
0x385 JUMPI
---
0x378: JUMPDEST 
0x37b: V276 = 0x40
0x37d: V277 = M[0x40]
0x37e: V278 = M[V277]
0x37f: V279 = ISZERO V278
0x382: V280 = 0x38d
0x385: JUMPI 0x38d V279
---
Entry stack: [V10, 0x121, V90, 0x0, V240, V259, 0xa9059cbb, V262]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x121, V90, 0x0, V240]

================================

Block 0x386
[0x386:0x38c]
---
Predecessors: [0x378]
Successors: [0x392]
---
0x386 DUP1
0x387 SWAP2
0x388 POP
0x389 PUSH2 0x392
0x38c JUMP
---
0x389: V281 = 0x392
0x38c: JUMP 0x392
---
Entry stack: [V10, 0x121, V90, 0x0, V240]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x121, V90, V240, V240]

================================

Block 0x38d
[0x38d:0x391]
---
Predecessors: [0x378]
Successors: [0x392]
---
0x38d JUMPDEST
0x38e PUSH1 0x0
0x390 SWAP2
0x391 POP
---
0x38d: JUMPDEST 
0x38e: V282 = 0x0
---
Entry stack: [V10, 0x121, V90, 0x0, V240]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x121, V90, 0x0, V240]

================================

Block 0x392
[0x392:0x392]
---
Predecessors: [0x386, 0x38d]
Successors: [0x393]
---
0x392 JUMPDEST
---
0x392: JUMPDEST 
---
Entry stack: [V10, 0x121, V90, S1, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x121, V90, S1, V240]

================================

Block 0x393
[0x393:0x398]
---
Predecessors: [0x392]
Successors: [0x121]
---
0x393 JUMPDEST
0x394 POP
0x395 SWAP2
0x396 SWAP1
0x397 POP
0x398 JUMP
---
0x393: JUMPDEST 
0x398: JUMP 0x121
---
Entry stack: [V10, 0x121, V90, S1, V240]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, S1]

================================

Block 0x399
[0x399:0x3c7]
---
Predecessors: []
Successors: []
---
0x399 STOP
0x39a LOG1
0x39b PUSH6 0x627a7a723058
0x3a2 SHA3
0x3a3 MISSING 0xaa
0x3a4 MISSING 0xc9
0x3a5 BALANCE
0x3a6 DUP8
0x3a7 DUP7
0x3a8 CALLDATALOAD
0x3a9 DUP9
0x3aa CALLDATALOAD
0x3ab PUSH28 0x83eb1aeae3c536d3584531ddbf13863028e25d8d1929320029
---
0x399: STOP 
0x39a: LOG S0 S1 S2
0x39b: V283 = 0x627a7a723058
0x3a2: V284 = SHA3 0x627a7a723058 S3
0x3a3: MISSING 0xaa
0x3a4: MISSING 0xc9
0x3a5: V285 = BALANCE S0
0x3a8: V286 = CALLDATALOAD S5
0x3aa: V287 = CALLDATALOAD S6
0x3ab: V288 = 0x83eb1aeae3c536d3584531ddbf13863028e25d8d1929320029
---
Entry stack: []
Stack pops: 0
Stack additions: [V284, 0x83eb1aeae3c536d3584531ddbf13863028e25d8d1929320029, V287, V286, S7, V285, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0x2ebf1d58
Entry block: 0xe7
Exit block: 0x23f
Body: 0xe7, 0xee, 0xef, 0x133, 0x1a9, 0x1aa, 0x1b7, 0x1b8, 0x231, 0x232, 0x23f, 0x240

Function 1:
Public function signature: 0xd709e978
Entry block: 0x105
Exit block: 0x121
Body: 0x105, 0x10c, 0x10d, 0x121, 0x252, 0x26c, 0x271, 0x2de, 0x2df, 0x2ec, 0x2ed, 0x369, 0x36a, 0x377, 0x378, 0x386, 0x38d, 0x392, 0x393

Function 2:
Public fallback function
Entry block: 0x49
Exit block: 0xdc
Body: 0x49, 0x4d, 0x56, 0x5b, 0x75, 0xce, 0xcf, 0xdc, 0xdd, 0xe2, 0xe3, 0xe5

