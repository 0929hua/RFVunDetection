Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xfdb1c10
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xfdb1c10
0x3c: V13 = EQ 0xfdb1c10 V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x86]
---
0x41 DUP1
0x42 PUSH4 0x11610c25
0x47 EQ
0x48 PUSH2 0x86
0x4b JUMPI
---
0x42: V15 = 0x11610c25
0x47: V16 = EQ 0x11610c25 V11
0x48: V17 = 0x86
0x4b: JUMPI 0x86 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x9d]
---
0x4c DUP1
0x4d PUSH4 0x14029756
0x52 EQ
0x53 PUSH2 0x9d
0x56 JUMPI
---
0x4d: V18 = 0x14029756
0x52: V19 = EQ 0x14029756 V11
0x53: V20 = 0x9d
0x56: JUMPI 0x9d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe0]
---
0x57 DUP1
0x58 PUSH4 0x5ec01e4d
0x5d EQ
0x5e PUSH2 0xe0
0x61 JUMPI
---
0x58: V21 = 0x5ec01e4d
0x5d: V22 = EQ 0x5ec01e4d V11
0x5e: V23 = 0xe0
0x61: JUMPI 0xe0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x111]
---
0x62 DUP1
0x63 PUSH4 0xb69ef8a8
0x68 EQ
0x69 PUSH2 0x111
0x6c JUMPI
---
0x63: V24 = 0xb69ef8a8
0x68: V25 = EQ 0xb69ef8a8 V11
0x69: V26 = 0x111
0x6c: JUMPI 0x111 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0xd]
Successors: [0x77, 0x7b]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 DUP1
0x72 ISZERO
0x73 PUSH2 0x7b
0x76 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x72: V28 = ISZERO V27
0x73: V29 = 0x7b
0x76: JUMPI 0x7b V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x77
[0x77:0x7a]
---
Predecessors: [0x6f]
Successors: []
---
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x77: V30 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V11, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V27]

================================

Block 0x7b
[0x7b:0x83]
---
Predecessors: [0x6f]
Successors: [0x13c]
---
0x7b JUMPDEST
0x7c POP
0x7d PUSH2 0x84
0x80 PUSH2 0x13c
0x83 JUMP
---
0x7b: JUMPDEST 
0x7d: V31 = 0x84
0x80: V32 = 0x13c
0x83: JUMP 0x13c
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [0x84]
Exit stack: [V11, 0x84]

================================

Block 0x84
[0x84:0x85]
---
Predecessors: [0x1ac]
Successors: []
---
0x84 JUMPDEST
0x85 STOP
---
0x84: JUMPDEST 
0x85: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x86
[0x86:0x8d]
---
Predecessors: [0x41]
Successors: [0x8e, 0x92]
---
0x86 JUMPDEST
0x87 CALLVALUE
0x88 DUP1
0x89 ISZERO
0x8a PUSH2 0x92
0x8d JUMPI
---
0x86: JUMPDEST 
0x87: V33 = CALLVALUE
0x89: V34 = ISZERO V33
0x8a: V35 = 0x92
0x8d: JUMPI 0x92 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V33]
Exit stack: [V11, V33]

================================

Block 0x8e
[0x8e:0x91]
---
Predecessors: [0x86]
Successors: []
---
0x8e PUSH1 0x0
0x90 DUP1
0x91 REVERT
---
0x8e: V36 = 0x0
0x91: REVERT 0x0 0x0
---
Entry stack: [V11, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V33]

================================

Block 0x92
[0x92:0x9a]
---
Predecessors: [0x86]
Successors: [0x1ae]
---
0x92 JUMPDEST
0x93 POP
0x94 PUSH2 0x9b
0x97 PUSH2 0x1ae
0x9a JUMP
---
0x92: JUMPDEST 
0x94: V37 = 0x9b
0x97: V38 = 0x1ae
0x9a: JUMP 0x1ae
---
Entry stack: [V11, V33]
Stack pops: 1
Stack additions: [0x9b]
Exit stack: [V11, 0x9b]

================================

Block 0x9b
[0x9b:0x9c]
---
Predecessors: [0x2b4]
Successors: []
---
0x9b JUMPDEST
0x9c STOP
---
0x9b: JUMPDEST 
0x9c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa4]
---
Predecessors: [0x4c]
Successors: [0xa5, 0xa9]
---
0x9d JUMPDEST
0x9e CALLVALUE
0x9f DUP1
0xa0 ISZERO
0xa1 PUSH2 0xa9
0xa4 JUMPI
---
0x9d: JUMPDEST 
0x9e: V39 = CALLVALUE
0xa0: V40 = ISZERO V39
0xa1: V41 = 0xa9
0xa4: JUMPI 0xa9 V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V39]
Exit stack: [V11, V39]

================================

Block 0xa5
[0xa5:0xa8]
---
Predecessors: [0x9d]
Successors: []
---
0xa5 PUSH1 0x0
0xa7 DUP1
0xa8 REVERT
---
0xa5: V42 = 0x0
0xa8: REVERT 0x0 0x0
---
Entry stack: [V11, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V39]

================================

Block 0xa9
[0xa9:0xdd]
---
Predecessors: [0x9d]
Successors: [0x2b6]
---
0xa9 JUMPDEST
0xaa POP
0xab PUSH2 0xde
0xae PUSH1 0x4
0xb0 DUP1
0xb1 CALLDATASIZE
0xb2 SUB
0xb3 DUP2
0xb4 ADD
0xb5 SWAP1
0xb6 DUP1
0xb7 DUP1
0xb8 CALLDATALOAD
0xb9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce AND
0xcf SWAP1
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP1
0xd4 SWAP3
0xd5 SWAP2
0xd6 SWAP1
0xd7 POP
0xd8 POP
0xd9 POP
0xda PUSH2 0x2b6
0xdd JUMP
---
0xa9: JUMPDEST 
0xab: V43 = 0xde
0xae: V44 = 0x4
0xb1: V45 = CALLDATASIZE
0xb2: V46 = SUB V45 0x4
0xb4: V47 = ADD 0x4 V46
0xb8: V48 = CALLDATALOAD 0x4
0xb9: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xce: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xd0: V51 = 0x20
0xd2: V52 = ADD 0x20 0x4
0xda: V53 = 0x2b6
0xdd: JUMP 0x2b6
---
Entry stack: [V11, V39]
Stack pops: 1
Stack additions: [0xde, V50]
Exit stack: [V11, 0xde, V50]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: [0x2b6]
Successors: []
---
0xde JUMPDEST
0xdf STOP
---
0xde: JUMPDEST 
0xdf: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0xe7]
---
Predecessors: [0x57]
Successors: [0xe8, 0xec]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 DUP1
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0xe0: JUMPDEST 
0xe1: V54 = CALLVALUE
0xe3: V55 = ISZERO V54
0xe4: V56 = 0xec
0xe7: JUMPI 0xec V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0xe0]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V57 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xec
[0xec:0xf4]
---
Predecessors: [0xe0]
Successors: [0x2f9]
---
0xec JUMPDEST
0xed POP
0xee PUSH2 0xf5
0xf1 PUSH2 0x2f9
0xf4 JUMP
---
0xec: JUMPDEST 
0xee: V58 = 0xf5
0xf1: V59 = 0x2f9
0xf4: JUMP 0x2f9
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: [0xf5]
Exit stack: [V11, 0xf5]

================================

Block 0xf5
[0xf5:0x110]
---
Predecessors: [0x329]
Successors: []
---
0xf5 JUMPDEST
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 DUP1
0xfa DUP3
0xfb PUSH1 0xff
0xfd AND
0xfe PUSH1 0xff
0x100 AND
0x101 DUP2
0x102 MSTORE
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP2
0x107 POP
0x108 POP
0x109 PUSH1 0x40
0x10b MLOAD
0x10c DUP1
0x10d SWAP2
0x10e SUB
0x10f SWAP1
0x110 RETURN
---
0xf5: JUMPDEST 
0xf6: V60 = 0x40
0xf8: V61 = M[0x40]
0xfb: V62 = 0xff
0xfd: V63 = AND 0xff V195
0xfe: V64 = 0xff
0x100: V65 = AND 0xff V63
0x102: M[V61] = V65
0x103: V66 = 0x20
0x105: V67 = ADD 0x20 V61
0x109: V68 = 0x40
0x10b: V69 = M[0x40]
0x10e: V70 = SUB V67 V69
0x110: RETURN V69 V70
---
Entry stack: [V11, 0x9b, 0x1, S1, V195]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x9b, 0x1, S1]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0x62]
Successors: [0x119, 0x11d]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 DUP1
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x111: JUMPDEST 
0x112: V71 = CALLVALUE
0x114: V72 = ISZERO V71
0x115: V73 = 0x11d
0x118: JUMPI 0x11d V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V71]
Exit stack: [V11, V71]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x111]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V74 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V11, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V71]

================================

Block 0x11d
[0x11d:0x125]
---
Predecessors: [0x111]
Successors: [0x32f]
---
0x11d JUMPDEST
0x11e POP
0x11f PUSH2 0x126
0x122 PUSH2 0x32f
0x125 JUMP
---
0x11d: JUMPDEST 
0x11f: V75 = 0x126
0x122: V76 = 0x32f
0x125: JUMP 0x32f
---
Entry stack: [V11, V71]
Stack pops: 1
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x126
[0x126:0x13b]
---
Predecessors: [0x32f]
Successors: []
---
0x126 JUMPDEST
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP1
0x12b DUP3
0x12c DUP2
0x12d MSTORE
0x12e PUSH1 0x20
0x130 ADD
0x131 SWAP2
0x132 POP
0x133 POP
0x134 PUSH1 0x40
0x136 MLOAD
0x137 DUP1
0x138 SWAP2
0x139 SUB
0x13a SWAP1
0x13b RETURN
---
0x126: JUMPDEST 
0x127: V77 = 0x40
0x129: V78 = M[0x40]
0x12d: M[V78] = V200
0x12e: V79 = 0x20
0x130: V80 = ADD 0x20 V78
0x134: V81 = 0x40
0x136: V82 = M[0x40]
0x139: V83 = SUB V80 V82
0x13b: RETURN V82 V83
---
Entry stack: [V11, V200]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x13c
[0x13c:0x1a7]
---
Predecessors: [0x7b]
Successors: [0x1a8, 0x1ac]
---
0x13c JUMPDEST
0x13d PUSH1 0x1
0x13f PUSH1 0x0
0x141 SWAP1
0x142 SLOAD
0x143 SWAP1
0x144 PUSH2 0x100
0x147 EXP
0x148 SWAP1
0x149 DIV
0x14a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15f AND
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 ADDRESS
0x177 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18c AND
0x18d BALANCE
0x18e PUSH1 0x40
0x190 MLOAD
0x191 PUSH1 0x0
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 DUP4
0x198 SUB
0x199 DUP2
0x19a DUP6
0x19b DUP8
0x19c GAS
0x19d CALL
0x19e SWAP3
0x19f POP
0x1a0 POP
0x1a1 POP
0x1a2 ISZERO
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x13c: JUMPDEST 
0x13d: V84 = 0x1
0x13f: V85 = 0x0
0x142: V86 = S[0x1]
0x144: V87 = 0x100
0x147: V88 = EXP 0x100 0x0
0x149: V89 = DIV V86 0x1
0x14a: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x160: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x176: V94 = ADDRESS
0x177: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x18d: V97 = BALANCE V96
0x18e: V98 = 0x40
0x190: V99 = M[0x40]
0x191: V100 = 0x0
0x193: V101 = 0x40
0x195: V102 = M[0x40]
0x198: V103 = SUB V99 V102
0x19c: V104 = GAS
0x19d: V105 = CALL V104 V93 V97 V102 V103 V102 0x0
0x1a2: V106 = ISZERO V105
0x1a3: V107 = ISZERO V106
0x1a4: V108 = 0x1ac
0x1a7: JUMPI 0x1ac V107
---
Entry stack: [V11, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x13c]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V109 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V11, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84]

================================

Block 0x1ac
[0x1ac:0x1ad]
---
Predecessors: [0x13c]
Successors: [0x84]
---
0x1ac JUMPDEST
0x1ad JUMP
---
0x1ac: JUMPDEST 
0x1ad: JUMP 0x84
---
Entry stack: [V11, 0x84]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ae
[0x1ae:0x1b9]
---
Predecessors: [0x92]
Successors: [0x2f9]
---
0x1ae JUMPDEST
0x1af PUSH1 0x1
0x1b1 PUSH1 0x2
0x1b3 PUSH2 0x1ba
0x1b6 PUSH2 0x2f9
0x1b9 JUMP
---
0x1ae: JUMPDEST 
0x1af: V110 = 0x1
0x1b1: V111 = 0x2
0x1b3: V112 = 0x1ba
0x1b6: V113 = 0x2f9
0x1b9: JUMP 0x2f9
---
Entry stack: [V11, 0x9b]
Stack pops: 0
Stack additions: [0x1, 0x2, 0x1ba]
Exit stack: [V11, 0x9b, 0x1, 0x2, 0x1ba]

================================

Block 0x1ba
[0x1ba:0x1c4]
---
Predecessors: [0x329]
Successors: [0x1c5, 0x1c6]
---
0x1ba JUMPDEST
0x1bb PUSH1 0xff
0x1bd AND
0x1be DUP2
0x1bf ISZERO
0x1c0 ISZERO
0x1c1 PUSH2 0x1c6
0x1c4 JUMPI
---
0x1ba: JUMPDEST 
0x1bb: V114 = 0xff
0x1bd: V115 = AND 0xff V195
0x1bf: V116 = ISZERO S1
0x1c0: V117 = ISZERO V116
0x1c1: V118 = 0x1c6
0x1c4: JUMPI 0x1c6 V117
---
Entry stack: [V11, 0x9b, 0x1, S1, V195]
Stack pops: 2
Stack additions: [S1, V115]
Exit stack: [V11, 0x9b, 0x1, S1, V115]

================================

Block 0x1c5
[0x1c5:0x1c5]
---
Predecessors: [0x1ba]
Successors: []
---
0x1c5 INVALID
---
0x1c5: INVALID 
---
Entry stack: [V11, 0x9b, 0x1, S1, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9b, 0x1, S1, V115]

================================

Block 0x1c6
[0x1c6:0x1d0]
---
Predecessors: [0x1ba]
Successors: [0x1d1, 0x2b4]
---
0x1c6 JUMPDEST
0x1c7 MOD
0x1c8 PUSH1 0xff
0x1ca AND
0x1cb EQ
0x1cc ISZERO
0x1cd PUSH2 0x2b4
0x1d0 JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V119 = MOD V115 S1
0x1c8: V120 = 0xff
0x1ca: V121 = AND 0xff V119
0x1cb: V122 = EQ V121 0x1
0x1cc: V123 = ISZERO V122
0x1cd: V124 = 0x2b4
0x1d0: JUMPI 0x2b4 V123
---
Entry stack: [V11, 0x9b, 0x1, S1, V115]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x9b]

================================

Block 0x1d1
[0x1d1:0x2ae]
---
Predecessors: [0x1c6]
Successors: [0x2af, 0x2b3]
---
0x1d1 PUSH1 0x0
0x1d3 DUP1
0x1d4 SWAP1
0x1d5 SLOAD
0x1d6 SWAP1
0x1d7 PUSH2 0x100
0x1da EXP
0x1db SWAP1
0x1dc DIV
0x1dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f2 AND
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 PUSH8 0xde0b6b3a7640000
0x212 PUSH1 0x40
0x214 MLOAD
0x215 DUP1
0x216 DUP1
0x217 PUSH32 0x6265742829000000000000000000000000000000000000000000000000000000
0x238 DUP2
0x239 MSTORE
0x23a POP
0x23b PUSH1 0x5
0x23d ADD
0x23e SWAP1
0x23f POP
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 SWAP2
0x245 SUB
0x246 SWAP1
0x247 SHA3
0x248 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x266 SWAP1
0x267 DIV
0x268 SWAP1
0x269 PUSH1 0x40
0x26b MLOAD
0x26c DUP3
0x26d PUSH4 0xffffffff
0x272 AND
0x273 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x291 MUL
0x292 DUP2
0x293 MSTORE
0x294 PUSH1 0x4
0x296 ADD
0x297 PUSH1 0x0
0x299 PUSH1 0x40
0x29b MLOAD
0x29c DUP1
0x29d DUP4
0x29e SUB
0x29f DUP2
0x2a0 DUP6
0x2a1 DUP9
0x2a2 GAS
0x2a3 CALL
0x2a4 SWAP4
0x2a5 POP
0x2a6 POP
0x2a7 POP
0x2a8 POP
0x2a9 ISZERO
0x2aa ISZERO
0x2ab PUSH2 0x2b3
0x2ae JUMPI
---
0x1d1: V125 = 0x0
0x1d5: V126 = S[0x0]
0x1d7: V127 = 0x100
0x1da: V128 = EXP 0x100 0x0
0x1dc: V129 = DIV V126 0x1
0x1dd: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x1f3: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x209: V134 = 0xde0b6b3a7640000
0x212: V135 = 0x40
0x214: V136 = M[0x40]
0x217: V137 = 0x6265742829000000000000000000000000000000000000000000000000000000
0x239: M[V136] = 0x6265742829000000000000000000000000000000000000000000000000000000
0x23b: V138 = 0x5
0x23d: V139 = ADD 0x5 V136
0x240: V140 = 0x40
0x242: V141 = M[0x40]
0x245: V142 = SUB V139 V141
0x247: V143 = SHA3 V141 V142
0x248: V144 = 0x100000000000000000000000000000000000000000000000000000000
0x267: V145 = DIV V143 0x100000000000000000000000000000000000000000000000000000000
0x269: V146 = 0x40
0x26b: V147 = M[0x40]
0x26d: V148 = 0xffffffff
0x272: V149 = AND 0xffffffff V145
0x273: V150 = 0x100000000000000000000000000000000000000000000000000000000
0x291: V151 = MUL 0x100000000000000000000000000000000000000000000000000000000 V149
0x293: M[V147] = V151
0x294: V152 = 0x4
0x296: V153 = ADD 0x4 V147
0x297: V154 = 0x0
0x299: V155 = 0x40
0x29b: V156 = M[0x40]
0x29e: V157 = SUB V153 V156
0x2a2: V158 = GAS
0x2a3: V159 = CALL V158 V133 0xde0b6b3a7640000 V156 V157 V156 0x0
0x2a9: V160 = ISZERO V159
0x2aa: V161 = ISZERO V160
0x2ab: V162 = 0x2b3
0x2ae: JUMPI 0x2b3 V161
---
Entry stack: [V11, 0x9b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9b]

================================

Block 0x2af
[0x2af:0x2b2]
---
Predecessors: [0x1d1]
Successors: []
---
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 REVERT
---
0x2af: V163 = 0x0
0x2b2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9b]

================================

Block 0x2b3
[0x2b3:0x2b3]
---
Predecessors: [0x1d1]
Successors: [0x2b4]
---
0x2b3 JUMPDEST
---
0x2b3: JUMPDEST 
---
Entry stack: [V11, 0x9b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9b]

================================

Block 0x2b4
[0x2b4:0x2b5]
---
Predecessors: [0x1c6, 0x2b3]
Successors: [0x9b]
---
0x2b4 JUMPDEST
0x2b5 JUMP
---
0x2b4: JUMPDEST 
0x2b5: JUMP 0x9b
---
Entry stack: [V11, 0x9b]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b6
[0x2b6:0x2f8]
---
Predecessors: [0xa9]
Successors: [0xde]
---
0x2b6 JUMPDEST
0x2b7 DUP1
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb PUSH2 0x100
0x2be EXP
0x2bf DUP2
0x2c0 SLOAD
0x2c1 DUP2
0x2c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d7 MUL
0x2d8 NOT
0x2d9 AND
0x2da SWAP1
0x2db DUP4
0x2dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f1 AND
0x2f2 MUL
0x2f3 OR
0x2f4 SWAP1
0x2f5 SSTORE
0x2f6 POP
0x2f7 POP
0x2f8 JUMP
---
0x2b6: JUMPDEST 
0x2b8: V164 = 0x0
0x2bb: V165 = 0x100
0x2be: V166 = EXP 0x100 0x0
0x2c0: V167 = S[0x0]
0x2c2: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V169 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2d8: V170 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V171 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V167
0x2dc: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f1: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x2f2: V174 = MUL V173 0x1
0x2f3: V175 = OR V174 V171
0x2f5: S[0x0] = V175
0x2f8: JUMP 0xde
---
Entry stack: [V11, 0xde, V50]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f9
[0x2f9:0x327]
---
Predecessors: [0xec, 0x1ae]
Successors: [0x328, 0x329]
---
0x2f9 JUMPDEST
0x2fa PUSH1 0x0
0x2fc PUSH2 0x100
0x2ff TIMESTAMP
0x300 DIFFICULTY
0x301 PUSH1 0x40
0x303 MLOAD
0x304 DUP1
0x305 DUP4
0x306 DUP2
0x307 MSTORE
0x308 PUSH1 0x20
0x30a ADD
0x30b DUP3
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP3
0x312 POP
0x313 POP
0x314 POP
0x315 PUSH1 0x40
0x317 MLOAD
0x318 DUP1
0x319 SWAP2
0x31a SUB
0x31b SWAP1
0x31c SHA3
0x31d PUSH1 0x1
0x31f SWAP1
0x320 DIV
0x321 DUP2
0x322 ISZERO
0x323 ISZERO
0x324 PUSH2 0x329
0x327 JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V176 = 0x0
0x2fc: V177 = 0x100
0x2ff: V178 = TIMESTAMP
0x300: V179 = DIFFICULTY
0x301: V180 = 0x40
0x303: V181 = M[0x40]
0x307: M[V181] = V178
0x308: V182 = 0x20
0x30a: V183 = ADD 0x20 V181
0x30d: M[V183] = V179
0x30e: V184 = 0x20
0x310: V185 = ADD 0x20 V183
0x315: V186 = 0x40
0x317: V187 = M[0x40]
0x31a: V188 = SUB V185 V187
0x31c: V189 = SHA3 V187 V188
0x31d: V190 = 0x1
0x320: V191 = DIV V189 0x1
0x322: V192 = ISZERO 0x100
0x323: V193 = ISZERO 0x0
0x324: V194 = 0x329
0x327: JUMPI 0x329 0x1
---
Entry stack: [V11, 0x9b, 0x1, S1, {0xf5, 0x1ba}]
Stack pops: 0
Stack additions: [0x0, 0x100, V191]
Exit stack: [V11, 0x9b, 0x1, S1, {0xf5, 0x1ba}, 0x0, 0x100, V191]

================================

Block 0x328
[0x328:0x328]
---
Predecessors: [0x2f9]
Successors: []
---
0x328 INVALID
---
0x328: INVALID 
---
Entry stack: [V11, 0x9b, 0x1, S4, {0xf5, 0x1ba}, 0x0, 0x100, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9b, 0x1, S4, {0xf5, 0x1ba}, 0x0, 0x100, V191]

================================

Block 0x329
[0x329:0x32e]
---
Predecessors: [0x2f9]
Successors: [0xf5, 0x1ba]
---
0x329 JUMPDEST
0x32a MOD
0x32b SWAP1
0x32c POP
0x32d SWAP1
0x32e JUMP
---
0x329: JUMPDEST 
0x32a: V195 = MOD V191 0x100
0x32e: JUMP {0xf5, 0x1ba}
---
Entry stack: [V11, 0x9b, 0x1, S4, {0xf5, 0x1ba}, 0x0, 0x100, V191]
Stack pops: 4
Stack additions: [V195]
Exit stack: [V11, 0x9b, 0x1, S4, V195]

================================

Block 0x32f
[0x32f:0x34d]
---
Predecessors: [0x11d]
Successors: [0x126]
---
0x32f JUMPDEST
0x330 PUSH1 0x0
0x332 ADDRESS
0x333 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x348 AND
0x349 BALANCE
0x34a SWAP1
0x34b POP
0x34c SWAP1
0x34d JUMP
---
0x32f: JUMPDEST 
0x330: V196 = 0x0
0x332: V197 = ADDRESS
0x333: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x348: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x349: V200 = BALANCE V199
0x34d: JUMP 0x126
---
Entry stack: [V11, 0x126]
Stack pops: 1
Stack additions: [V200]
Exit stack: [V11, V200]

================================

Block 0x34e
[0x34e:0x388]
---
Predecessors: []
Successors: []
---
0x34e STOP
0x34f LOG1
0x350 PUSH6 0x627a7a723058
0x357 SHA3
0x358 DUP16
0x359 PUSH12 0x5b507554b7ad85ec6a15ef41
0x366 MISSING 0xef
0x367 EXTCODECOPY
0x368 NUMBER
0x369 PUSH31 0x8ff51c44bb6b4ab5498c5d53c3520029
---
0x34e: STOP 
0x34f: LOG S0 S1 S2
0x350: V201 = 0x627a7a723058
0x357: V202 = SHA3 0x627a7a723058 S3
0x359: V203 = 0x5b507554b7ad85ec6a15ef41
0x366: MISSING 0xef
0x367: EXTCODECOPY S0 S1 S2 S3
0x368: V204 = NUMBER
0x369: V205 = 0x8ff51c44bb6b4ab5498c5d53c3520029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x5b507554b7ad85ec6a15ef41, S18, V202, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, 0x8ff51c44bb6b4ab5498c5d53c3520029, V204]
Exit stack: []

================================

Function 0:
Public function signature: 0xfdb1c10
Entry block: 0x6f
Exit block: 0x84
Body: 0x6f, 0x77, 0x7b, 0x84, 0x13c, 0x1a8, 0x1ac

Function 1:
Public function signature: 0x11610c25
Entry block: 0x86
Exit block: 0x9b
Body: 0x86, 0x8e, 0x92, 0x9b, 0x1ae, 0x1ba, 0x1c5, 0x1c6, 0x1d1, 0x2af, 0x2b3, 0x2b4

Function 2:
Public function signature: 0x14029756
Entry block: 0x9d
Exit block: 0xde
Body: 0x9d, 0xa5, 0xa9, 0xde, 0x2b6

Function 3:
Public function signature: 0x5ec01e4d
Entry block: 0xe0
Exit block: 0xf5
Body: 0xe0, 0xe8, 0xec, 0xf5

Function 4:
Public function signature: 0xb69ef8a8
Entry block: 0x111
Exit block: 0x126
Body: 0x111, 0x119, 0x11d, 0x126, 0x32f

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

Function 6:
Private function
Entry block: 0x2f9
Exit block: 0x329
Body: 0x2f9, 0x329

