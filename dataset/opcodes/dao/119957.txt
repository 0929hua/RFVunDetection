Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa0]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa0
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa0
0xc: JUMPI 0xa0 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xa2]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x3ccfd60b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xa2
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x3ccfd60b
0x22: V15 = EQ V13 0x3ccfd60b
0x23: V16 = 0xa2
0x26: JUMPI 0xa2 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xb7]
---
0x27 DUP1
0x28 PUSH4 0x4311de8f
0x2d EQ
0x2e PUSH2 0xb7
0x31 JUMPI
---
0x28: V17 = 0x4311de8f
0x2d: V18 = EQ 0x4311de8f V13
0x2e: V19 = 0xb7
0x31: JUMPI 0xb7 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xcc]
---
0x32 DUP1
0x33 PUSH4 0x614baf5c
0x38 EQ
0x39 PUSH2 0xcc
0x3c JUMPI
---
0x33: V20 = 0x614baf5c
0x38: V21 = EQ 0x614baf5c V13
0x39: V22 = 0xcc
0x3c: JUMPI 0xcc V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xe1]
---
0x3d DUP1
0x3e PUSH4 0x8da5cb5b
0x43 EQ
0x44 PUSH2 0xe1
0x47 JUMPI
---
0x3e: V23 = 0x8da5cb5b
0x43: V24 = EQ 0x8da5cb5b V13
0x44: V25 = 0xe1
0x47: JUMPI 0xe1 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x112]
---
0x48 DUP1
0x49 PUSH4 0x949e8acd
0x4e EQ
0x4f PUSH2 0x112
0x52 JUMPI
---
0x49: V26 = 0x949e8acd
0x4e: V27 = EQ 0x949e8acd V13
0x4f: V28 = 0x112
0x52: JUMPI 0x112 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x139]
---
0x53 DUP1
0x54 PUSH4 0x9547dd5b
0x59 EQ
0x5a PUSH2 0x139
0x5d JUMPI
---
0x54: V29 = 0x9547dd5b
0x59: V30 = EQ 0x9547dd5b V13
0x5a: V31 = 0x139
0x5d: JUMPI 0x139 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x150]
---
0x5e DUP1
0x5f PUSH4 0xa9059cbb
0x64 EQ
0x65 PUSH2 0x150
0x68 JUMPI
---
0x5f: V32 = 0xa9059cbb
0x64: V33 = EQ 0xa9059cbb V13
0x65: V34 = 0x150
0x68: JUMPI 0x150 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x174]
---
0x69 DUP1
0x6a PUSH4 0xe4849b32
0x6f EQ
0x70 PUSH2 0x174
0x73 JUMPI
---
0x6a: V35 = 0xe4849b32
0x6f: V36 = EQ 0xe4849b32 V13
0x70: V37 = 0x174
0x73: JUMPI 0x174 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x18c]
---
0x74 DUP1
0x75 PUSH4 0xe9fad8ee
0x7a EQ
0x7b PUSH2 0x18c
0x7e JUMPI
---
0x75: V38 = 0xe9fad8ee
0x7a: V39 = EQ 0xe9fad8ee V13
0x7b: V40 = 0x18c
0x7e: JUMPI 0x18c V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1a1]
---
0x7f DUP1
0x80 PUSH4 0xee2ece60
0x85 EQ
0x86 PUSH2 0x1a1
0x89 JUMPI
---
0x80: V41 = 0xee2ece60
0x85: V42 = EQ 0xee2ece60 V13
0x86: V43 = 0x1a1
0x89: JUMPI 0x1a1 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x1b6]
---
0x8a DUP1
0x8b PUSH4 0xf088d547
0x90 EQ
0x91 PUSH2 0x1b6
0x94 JUMPI
---
0x8b: V44 = 0xf088d547
0x90: V45 = EQ 0xf088d547 V13
0x91: V46 = 0x1b6
0x94: JUMPI 0x1b6 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x1ca]
---
0x95 DUP1
0x96 PUSH4 0xf6613ff5
0x9b EQ
0x9c PUSH2 0x1ca
0x9f JUMPI
---
0x96: V47 = 0xf6613ff5
0x9b: V48 = EQ 0xf6613ff5 V13
0x9c: V49 = 0x1ca
0x9f: JUMPI 0x1ca V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xa1]
---
Predecessors: [0x0, 0x95, 0x28a, 0x2da, 0x52a, 0x810]
Successors: []
---
0xa0 JUMPDEST
0xa1 STOP
---
0xa0: JUMPDEST 
0xa1: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0xd]
Successors: [0xaa, 0xae]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa2: JUMPDEST 
0xa3: V50 = CALLVALUE
0xa5: V51 = ISZERO V50
0xa6: V52 = 0xae
0xa9: JUMPI 0xae V51
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V13, V50]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa2]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V53 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V13, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50]

================================

Block 0xae
[0xae:0xb6]
---
Predecessors: [0xa2]
Successors: [0x1df]
---
0xae JUMPDEST
0xaf POP
0xb0 PUSH2 0xa0
0xb3 PUSH2 0x1df
0xb6 JUMP
---
0xae: JUMPDEST 
0xb0: V54 = 0xa0
0xb3: V55 = 0x1df
0xb6: JUMP 0x1df
---
Entry stack: [V13, V50]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V13, 0xa0]

================================

Block 0xb7
[0xb7:0xbe]
---
Predecessors: [0x27]
Successors: [0xbf, 0xc3]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 DUP1
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xb7: JUMPDEST 
0xb8: V56 = CALLVALUE
0xba: V57 = ISZERO V56
0xbb: V58 = 0xc3
0xbe: JUMPI 0xc3 V57
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V13, V56]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xb7]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V59 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V13, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V56]

================================

Block 0xc3
[0xc3:0xcb]
---
Predecessors: [0xb7]
Successors: [0x290]
---
0xc3 JUMPDEST
0xc4 POP
0xc5 PUSH2 0xa0
0xc8 PUSH2 0x290
0xcb JUMP
---
0xc3: JUMPDEST 
0xc5: V60 = 0xa0
0xc8: V61 = 0x290
0xcb: JUMP 0x290
---
Entry stack: [V13, V56]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V13, 0xa0]

================================

Block 0xcc
[0xcc:0xd3]
---
Predecessors: [0x32]
Successors: [0xd4, 0xd8]
---
0xcc JUMPDEST
0xcd CALLVALUE
0xce DUP1
0xcf ISZERO
0xd0 PUSH2 0xd8
0xd3 JUMPI
---
0xcc: JUMPDEST 
0xcd: V62 = CALLVALUE
0xcf: V63 = ISZERO V62
0xd0: V64 = 0xd8
0xd3: JUMPI 0xd8 V63
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V62]
Exit stack: [V13, V62]

================================

Block 0xd4
[0xd4:0xd7]
---
Predecessors: [0xcc]
Successors: []
---
0xd4 PUSH1 0x0
0xd6 DUP1
0xd7 REVERT
---
0xd4: V65 = 0x0
0xd7: REVERT 0x0 0x0
---
Entry stack: [V13, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V62]

================================

Block 0xd8
[0xd8:0xe0]
---
Predecessors: [0xcc]
Successors: [0x2dd]
---
0xd8 JUMPDEST
0xd9 POP
0xda PUSH2 0xa0
0xdd PUSH2 0x2dd
0xe0 JUMP
---
0xd8: JUMPDEST 
0xda: V66 = 0xa0
0xdd: V67 = 0x2dd
0xe0: JUMP 0x2dd
---
Entry stack: [V13, V62]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V13, 0xa0]

================================

Block 0xe1
[0xe1:0xe8]
---
Predecessors: [0x3d]
Successors: [0xe9, 0xed]
---
0xe1 JUMPDEST
0xe2 CALLVALUE
0xe3 DUP1
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0xe1: JUMPDEST 
0xe2: V68 = CALLVALUE
0xe4: V69 = ISZERO V68
0xe5: V70 = 0xed
0xe8: JUMPI 0xed V69
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V68]
Exit stack: [V13, V68]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0xe1]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V71 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V13, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V68]

================================

Block 0xed
[0xed:0xf5]
---
Predecessors: [0xe1]
Successors: [0x374]
---
0xed JUMPDEST
0xee POP
0xef PUSH2 0xf6
0xf2 PUSH2 0x374
0xf5 JUMP
---
0xed: JUMPDEST 
0xef: V72 = 0xf6
0xf2: V73 = 0x374
0xf5: JUMP 0x374
---
Entry stack: [V13, V68]
Stack pops: 1
Stack additions: [0xf6]
Exit stack: [V13, 0xf6]

================================

Block 0xf6
[0xf6:0x111]
---
Predecessors: [0x374, 0x763, 0x815]
Successors: []
---
0xf6 JUMPDEST
0xf7 PUSH1 0x40
0xf9 DUP1
0xfa MLOAD
0xfb PUSH1 0x1
0xfd PUSH1 0xa0
0xff PUSH1 0x2
0x101 EXP
0x102 SUB
0x103 SWAP1
0x104 SWAP3
0x105 AND
0x106 DUP3
0x107 MSTORE
0x108 MLOAD
0x109 SWAP1
0x10a DUP2
0x10b SWAP1
0x10c SUB
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 RETURN
---
0xf6: JUMPDEST 
0xf7: V74 = 0x40
0xfa: V75 = M[0x40]
0xfb: V76 = 0x1
0xfd: V77 = 0xa0
0xff: V78 = 0x2
0x101: V79 = EXP 0x2 0xa0
0x102: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0x105: V81 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x107: M[V75] = V81
0x108: V82 = M[0x40]
0x10c: V83 = SUB V75 V82
0x10d: V84 = 0x20
0x10f: V85 = ADD 0x20 V83
0x111: RETURN V82 V85
---
Entry stack: [V13, 0xf6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xf6]

================================

Block 0x112
[0x112:0x119]
---
Predecessors: [0x48]
Successors: [0x11a, 0x11e]
---
0x112 JUMPDEST
0x113 CALLVALUE
0x114 DUP1
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x112: JUMPDEST 
0x113: V86 = CALLVALUE
0x115: V87 = ISZERO V86
0x116: V88 = 0x11e
0x119: JUMPI 0x11e V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V13, V86]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x112]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V89 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V13, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V86]

================================

Block 0x11e
[0x11e:0x126]
---
Predecessors: [0x112]
Successors: [0x383]
---
0x11e JUMPDEST
0x11f POP
0x120 PUSH2 0x127
0x123 PUSH2 0x383
0x126 JUMP
---
0x11e: JUMPDEST 
0x120: V90 = 0x127
0x123: V91 = 0x383
0x126: JUMP 0x383
---
Entry stack: [V13, V86]
Stack pops: 1
Stack additions: [0x127]
Exit stack: [V13, 0x127]

================================

Block 0x127
[0x127:0x138]
---
Predecessors: [0x40c]
Successors: []
---
0x127 JUMPDEST
0x128 PUSH1 0x40
0x12a DUP1
0x12b MLOAD
0x12c SWAP2
0x12d DUP3
0x12e MSTORE
0x12f MLOAD
0x130 SWAP1
0x131 DUP2
0x132 SWAP1
0x133 SUB
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP1
0x138 RETURN
---
0x127: JUMPDEST 
0x128: V92 = 0x40
0x12b: V93 = M[0x40]
0x12e: M[V93] = V371
0x12f: V94 = M[0x40]
0x133: V95 = SUB V93 V94
0x134: V96 = 0x20
0x136: V97 = ADD 0x20 V95
0x138: RETURN V94 V97
---
Entry stack: [V13, V371]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x139
[0x139:0x14f]
---
Predecessors: [0x53]
Successors: [0x413]
---
0x139 JUMPDEST
0x13a PUSH2 0xa0
0x13d PUSH1 0x1
0x13f PUSH1 0xa0
0x141 PUSH1 0x2
0x143 EXP
0x144 SUB
0x145 PUSH1 0x4
0x147 CALLDATALOAD
0x148 AND
0x149 PUSH1 0x24
0x14b CALLDATALOAD
0x14c PUSH2 0x413
0x14f JUMP
---
0x139: JUMPDEST 
0x13a: V98 = 0xa0
0x13d: V99 = 0x1
0x13f: V100 = 0xa0
0x141: V101 = 0x2
0x143: V102 = EXP 0x2 0xa0
0x144: V103 = SUB 0x10000000000000000000000000000000000000000 0x1
0x145: V104 = 0x4
0x147: V105 = CALLDATALOAD 0x4
0x148: V106 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x149: V107 = 0x24
0x14b: V108 = CALLDATALOAD 0x24
0x14c: V109 = 0x413
0x14f: JUMP 0x413
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa0, V106, V108]
Exit stack: [V13, 0xa0, V106, V108]

================================

Block 0x150
[0x150:0x157]
---
Predecessors: [0x5e]
Successors: [0x158, 0x15c]
---
0x150 JUMPDEST
0x151 CALLVALUE
0x152 DUP1
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x150: JUMPDEST 
0x151: V110 = CALLVALUE
0x153: V111 = ISZERO V110
0x154: V112 = 0x15c
0x157: JUMPI 0x15c V111
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V110]
Exit stack: [V13, V110]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x150]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V113 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V13, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V110]

================================

Block 0x15c
[0x15c:0x173]
---
Predecessors: [0x150]
Successors: [0x531]
---
0x15c JUMPDEST
0x15d POP
0x15e PUSH2 0xa0
0x161 PUSH1 0x1
0x163 PUSH1 0xa0
0x165 PUSH1 0x2
0x167 EXP
0x168 SUB
0x169 PUSH1 0x4
0x16b CALLDATALOAD
0x16c AND
0x16d PUSH1 0x24
0x16f CALLDATALOAD
0x170 PUSH2 0x531
0x173 JUMP
---
0x15c: JUMPDEST 
0x15e: V114 = 0xa0
0x161: V115 = 0x1
0x163: V116 = 0xa0
0x165: V117 = 0x2
0x167: V118 = EXP 0x2 0xa0
0x168: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x169: V120 = 0x4
0x16b: V121 = CALLDATALOAD 0x4
0x16c: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V123 = 0x24
0x16f: V124 = CALLDATALOAD 0x24
0x170: V125 = 0x531
0x173: JUMP 0x531
---
Entry stack: [V13, V110]
Stack pops: 1
Stack additions: [0xa0, V122, V124]
Exit stack: [V13, 0xa0, V122, V124]

================================

Block 0x174
[0x174:0x17b]
---
Predecessors: [0x69]
Successors: [0x17c, 0x180]
---
0x174 JUMPDEST
0x175 CALLVALUE
0x176 DUP1
0x177 ISZERO
0x178 PUSH2 0x180
0x17b JUMPI
---
0x174: JUMPDEST 
0x175: V126 = CALLVALUE
0x177: V127 = ISZERO V126
0x178: V128 = 0x180
0x17b: JUMPI 0x180 V127
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V126]
Exit stack: [V13, V126]

================================

Block 0x17c
[0x17c:0x17f]
---
Predecessors: [0x174]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f REVERT
---
0x17c: V129 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V13, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V126]

================================

Block 0x180
[0x180:0x18b]
---
Predecessors: [0x174]
Successors: [0x60e]
---
0x180 JUMPDEST
0x181 POP
0x182 PUSH2 0xa0
0x185 PUSH1 0x4
0x187 CALLDATALOAD
0x188 PUSH2 0x60e
0x18b JUMP
---
0x180: JUMPDEST 
0x182: V130 = 0xa0
0x185: V131 = 0x4
0x187: V132 = CALLDATALOAD 0x4
0x188: V133 = 0x60e
0x18b: JUMP 0x60e
---
Entry stack: [V13, V126]
Stack pops: 1
Stack additions: [0xa0, V132]
Exit stack: [V13, 0xa0, V132]

================================

Block 0x18c
[0x18c:0x193]
---
Predecessors: [0x74]
Successors: [0x194, 0x198]
---
0x18c JUMPDEST
0x18d CALLVALUE
0x18e DUP1
0x18f ISZERO
0x190 PUSH2 0x198
0x193 JUMPI
---
0x18c: JUMPDEST 
0x18d: V134 = CALLVALUE
0x18f: V135 = ISZERO V134
0x190: V136 = 0x198
0x193: JUMPI 0x198 V135
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V134]
Exit stack: [V13, V134]

================================

Block 0x194
[0x194:0x197]
---
Predecessors: [0x18c]
Successors: []
---
0x194 PUSH1 0x0
0x196 DUP1
0x197 REVERT
---
0x194: V137 = 0x0
0x197: REVERT 0x0 0x0
---
Entry stack: [V13, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V134]

================================

Block 0x198
[0x198:0x1a0]
---
Predecessors: [0x18c]
Successors: [0x6cc]
---
0x198 JUMPDEST
0x199 POP
0x19a PUSH2 0xa0
0x19d PUSH2 0x6cc
0x1a0 JUMP
---
0x198: JUMPDEST 
0x19a: V138 = 0xa0
0x19d: V139 = 0x6cc
0x1a0: JUMP 0x6cc
---
Entry stack: [V13, V134]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V13, 0xa0]

================================

Block 0x1a1
[0x1a1:0x1a8]
---
Predecessors: [0x7f]
Successors: [0x1a9, 0x1ad]
---
0x1a1 JUMPDEST
0x1a2 CALLVALUE
0x1a3 DUP1
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V140 = CALLVALUE
0x1a4: V141 = ISZERO V140
0x1a5: V142 = 0x1ad
0x1a8: JUMPI 0x1ad V141
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V140]
Exit stack: [V13, V140]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x1a1]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V143 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V13, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V140]

================================

Block 0x1ad
[0x1ad:0x1b5]
---
Predecessors: [0x1a1]
Successors: [0x763]
---
0x1ad JUMPDEST
0x1ae POP
0x1af PUSH2 0xf6
0x1b2 PUSH2 0x763
0x1b5 JUMP
---
0x1ad: JUMPDEST 
0x1af: V144 = 0xf6
0x1b2: V145 = 0x763
0x1b5: JUMP 0x763
---
Entry stack: [V13, V140]
Stack pops: 1
Stack additions: [0xf6]
Exit stack: [V13, 0xf6]

================================

Block 0x1b6
[0x1b6:0x1c9]
---
Predecessors: [0x8a]
Successors: [0x77b]
---
0x1b6 JUMPDEST
0x1b7 PUSH2 0xa0
0x1ba PUSH1 0x1
0x1bc PUSH1 0xa0
0x1be PUSH1 0x2
0x1c0 EXP
0x1c1 SUB
0x1c2 PUSH1 0x4
0x1c4 CALLDATALOAD
0x1c5 AND
0x1c6 PUSH2 0x77b
0x1c9 JUMP
---
0x1b6: JUMPDEST 
0x1b7: V146 = 0xa0
0x1ba: V147 = 0x1
0x1bc: V148 = 0xa0
0x1be: V149 = 0x2
0x1c0: V150 = EXP 0x2 0xa0
0x1c1: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c2: V152 = 0x4
0x1c4: V153 = CALLDATALOAD 0x4
0x1c5: V154 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V155 = 0x77b
0x1c9: JUMP 0x77b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa0, V154]
Exit stack: [V13, 0xa0, V154]

================================

Block 0x1ca
[0x1ca:0x1d1]
---
Predecessors: [0x95]
Successors: [0x1d2, 0x1d6]
---
0x1ca JUMPDEST
0x1cb CALLVALUE
0x1cc DUP1
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V156 = CALLVALUE
0x1cd: V157 = ISZERO V156
0x1ce: V158 = 0x1d6
0x1d1: JUMPI 0x1d6 V157
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V156]
Exit stack: [V13, V156]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V159 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V13, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V156]

================================

Block 0x1d6
[0x1d6:0x1de]
---
Predecessors: [0x1ca]
Successors: [0x815]
---
0x1d6 JUMPDEST
0x1d7 POP
0x1d8 PUSH2 0xf6
0x1db PUSH2 0x815
0x1de JUMP
---
0x1d6: JUMPDEST 
0x1d8: V160 = 0xf6
0x1db: V161 = 0x815
0x1de: JUMP 0x815
---
Entry stack: [V13, V156]
Stack pops: 1
Stack additions: [0xf6]
Exit stack: [V13, 0xf6]

================================

Block 0x1df
[0x1df:0x1f6]
---
Predecessors: [0xae]
Successors: [0x1f7, 0x218]
---
0x1df JUMPDEST
0x1e0 PUSH1 0x0
0x1e2 SLOAD
0x1e3 CALLER
0x1e4 PUSH1 0x1
0x1e6 PUSH1 0xa0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb SUB
0x1ec SWAP1
0x1ed DUP2
0x1ee AND
0x1ef SWAP2
0x1f0 AND
0x1f1 EQ
0x1f2 DUP1
0x1f3 PUSH2 0x218
0x1f6 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V162 = 0x0
0x1e2: V163 = S[0x0]
0x1e3: V164 = CALLER
0x1e4: V165 = 0x1
0x1e6: V166 = 0xa0
0x1e8: V167 = 0x2
0x1ea: V168 = EXP 0x2 0xa0
0x1eb: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ee: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1f0: V171 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V172 = EQ V171 V170
0x1f3: V173 = 0x218
0x1f6: JUMPI 0x218 V172
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: [V172]
Exit stack: [V13, 0xa0, V172]

================================

Block 0x1f7
[0x1f7:0x217]
---
Predecessors: [0x1df]
Successors: [0x218]
---
0x1f7 POP
0x1f8 CALLER
0x1f9 PUSH1 0x1
0x1fb PUSH1 0xa0
0x1fd PUSH1 0x2
0x1ff EXP
0x200 SUB
0x201 AND
0x202 PUSH20 0x5da469e35b6b697f976f866320b851d88214426
0x217 EQ
---
0x1f8: V174 = CALLER
0x1f9: V175 = 0x1
0x1fb: V176 = 0xa0
0x1fd: V177 = 0x2
0x1ff: V178 = EXP 0x2 0xa0
0x200: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x201: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x202: V181 = 0x5da469e35b6b697f976f866320b851d88214426
0x217: V182 = EQ 0x5da469e35b6b697f976f866320b851d88214426 V180
---
Entry stack: [V13, 0xa0, V172]
Stack pops: 1
Stack additions: [V182]
Exit stack: [V13, 0xa0, V182]

================================

Block 0x218
[0x218:0x21e]
---
Predecessors: [0x1df, 0x1f7]
Successors: [0x21f, 0x223]
---
0x218 JUMPDEST
0x219 ISZERO
0x21a ISZERO
0x21b PUSH2 0x223
0x21e JUMPI
---
0x218: JUMPDEST 
0x219: V183 = ISZERO S0
0x21a: V184 = ISZERO V183
0x21b: V185 = 0x223
0x21e: JUMPI 0x223 V184
---
Entry stack: [V13, 0xa0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x21f
[0x21f:0x222]
---
Predecessors: [0x218]
Successors: []
---
0x21f PUSH1 0x0
0x221 DUP1
0x222 REVERT
---
0x21f: V186 = 0x0
0x222: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x223
[0x223:0x271]
---
Predecessors: [0x218]
Successors: [0x272, 0x276]
---
0x223 JUMPDEST
0x224 PUSH1 0x1
0x226 PUSH1 0x0
0x228 SWAP1
0x229 SLOAD
0x22a SWAP1
0x22b PUSH2 0x100
0x22e EXP
0x22f SWAP1
0x230 DIV
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 AND
0x23a PUSH1 0x1
0x23c PUSH1 0xa0
0x23e PUSH1 0x2
0x240 EXP
0x241 SUB
0x242 AND
0x243 PUSH4 0x3ccfd60b
0x248 PUSH1 0x40
0x24a MLOAD
0x24b DUP2
0x24c PUSH4 0xffffffff
0x251 AND
0x252 PUSH1 0xe0
0x254 PUSH1 0x2
0x256 EXP
0x257 MUL
0x258 DUP2
0x259 MSTORE
0x25a PUSH1 0x4
0x25c ADD
0x25d PUSH1 0x0
0x25f PUSH1 0x40
0x261 MLOAD
0x262 DUP1
0x263 DUP4
0x264 SUB
0x265 DUP2
0x266 PUSH1 0x0
0x268 DUP8
0x269 DUP1
0x26a EXTCODESIZE
0x26b ISZERO
0x26c DUP1
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x223: JUMPDEST 
0x224: V187 = 0x1
0x226: V188 = 0x0
0x229: V189 = S[0x1]
0x22b: V190 = 0x100
0x22e: V191 = EXP 0x100 0x0
0x230: V192 = DIV V189 0x1
0x231: V193 = 0x1
0x233: V194 = 0xa0
0x235: V195 = 0x2
0x237: V196 = EXP 0x2 0xa0
0x238: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x23a: V199 = 0x1
0x23c: V200 = 0xa0
0x23e: V201 = 0x2
0x240: V202 = EXP 0x2 0xa0
0x241: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x242: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x243: V205 = 0x3ccfd60b
0x248: V206 = 0x40
0x24a: V207 = M[0x40]
0x24c: V208 = 0xffffffff
0x251: V209 = AND 0xffffffff 0x3ccfd60b
0x252: V210 = 0xe0
0x254: V211 = 0x2
0x256: V212 = EXP 0x2 0xe0
0x257: V213 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x259: M[V207] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x25a: V214 = 0x4
0x25c: V215 = ADD 0x4 V207
0x25d: V216 = 0x0
0x25f: V217 = 0x40
0x261: V218 = M[0x40]
0x264: V219 = SUB V215 V218
0x266: V220 = 0x0
0x26a: V221 = EXTCODESIZE V204
0x26b: V222 = ISZERO V221
0x26d: V223 = ISZERO V222
0x26e: V224 = 0x276
0x271: JUMPI 0x276 V223
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: [V204, 0x3ccfd60b, V215, 0x0, V218, V219, V218, 0x0, V204, V222]
Exit stack: [V13, 0xa0, V204, 0x3ccfd60b, V215, 0x0, V218, V219, V218, 0x0, V204, V222]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x223]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V225 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V204, 0x3ccfd60b, V215, 0x0, V218, V219, V218, 0x0, V204, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V204, 0x3ccfd60b, V215, 0x0, V218, V219, V218, 0x0, V204, V222]

================================

Block 0x276
[0x276:0x280]
---
Predecessors: [0x223, 0x321, 0x710]
Successors: [0x281, 0x28a]
---
0x276 JUMPDEST
0x277 POP
0x278 GAS
0x279 CALL
0x27a ISZERO
0x27b DUP1
0x27c ISZERO
0x27d PUSH2 0x28a
0x280 JUMPI
---
0x276: JUMPDEST 
0x278: V226 = GAS
0x279: V227 = CALL V226 S1 0x0 S3 S4 S5 0x0
0x27a: V228 = ISZERO V227
0x27c: V229 = ISZERO V228
0x27d: V230 = 0x28a
0x280: JUMPI 0x28a V229
---
Entry stack: [V13, 0xa0, S9, {0x3ccfd60b, 0x614baf5c, 0xe9fad8ee}, S7, 0x0, S5, S4, S3, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V228]
Exit stack: [V13, 0xa0, S9, {0x3ccfd60b, 0x614baf5c, 0xe9fad8ee}, S7, V228]

================================

Block 0x281
[0x281:0x289]
---
Predecessors: [0x276]
Successors: []
---
0x281 RETURNDATASIZE
0x282 PUSH1 0x0
0x284 DUP1
0x285 RETURNDATACOPY
0x286 RETURNDATASIZE
0x287 PUSH1 0x0
0x289 REVERT
---
0x281: V231 = RETURNDATASIZE
0x282: V232 = 0x0
0x285: RETURNDATACOPY 0x0 0x0 V231
0x286: V233 = RETURNDATASIZE
0x287: V234 = 0x0
0x289: REVERT 0x0 V233
---
Entry stack: [V13, 0xa0, S3, {0x3ccfd60b, 0x614baf5c, 0xe9fad8ee}, S1, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, S3, {0x3ccfd60b, 0x614baf5c, 0xe9fad8ee}, S1, V228]

================================

Block 0x28a
[0x28a:0x28f]
---
Predecessors: [0x276, 0x4d6, 0x5f8]
Successors: [0xa0]
---
0x28a JUMPDEST
0x28b POP
0x28c POP
0x28d POP
0x28e POP
0x28f JUMP
---
0x28a: JUMPDEST 
0x28f: JUMP 0xa0
---
Entry stack: [V13, 0xa0, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x290
[0x290:0x2d0]
---
Predecessors: [0xc3]
Successors: [0x2d1, 0x2da]
---
0x290 JUMPDEST
0x291 PUSH1 0x40
0x293 MLOAD
0x294 PUSH20 0x5da469e35b6b697f976f866320b851d88214426
0x2a9 SWAP1
0x2aa ADDRESS
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 AND
0x2b4 BALANCE
0x2b5 DUP1
0x2b6 ISZERO
0x2b7 PUSH2 0x8fc
0x2ba MUL
0x2bb SWAP2
0x2bc PUSH1 0x0
0x2be DUP2
0x2bf DUP2
0x2c0 DUP2
0x2c1 DUP6
0x2c2 DUP9
0x2c3 DUP9
0x2c4 CALL
0x2c5 SWAP4
0x2c6 POP
0x2c7 POP
0x2c8 POP
0x2c9 POP
0x2ca ISZERO
0x2cb DUP1
0x2cc ISZERO
0x2cd PUSH2 0x2da
0x2d0 JUMPI
---
0x290: JUMPDEST 
0x291: V235 = 0x40
0x293: V236 = M[0x40]
0x294: V237 = 0x5da469e35b6b697f976f866320b851d88214426
0x2aa: V238 = ADDRESS
0x2ab: V239 = 0x1
0x2ad: V240 = 0xa0
0x2af: V241 = 0x2
0x2b1: V242 = EXP 0x2 0xa0
0x2b2: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x2b4: V245 = BALANCE V244
0x2b6: V246 = ISZERO V245
0x2b7: V247 = 0x8fc
0x2ba: V248 = MUL 0x8fc V246
0x2bc: V249 = 0x0
0x2c4: V250 = CALL V248 0x5da469e35b6b697f976f866320b851d88214426 V245 V236 0x0 V236 0x0
0x2ca: V251 = ISZERO V250
0x2cc: V252 = ISZERO V251
0x2cd: V253 = 0x2da
0x2d0: JUMPI 0x2da V252
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: [V251]
Exit stack: [V13, 0xa0, V251]

================================

Block 0x2d1
[0x2d1:0x2d9]
---
Predecessors: [0x290]
Successors: []
---
0x2d1 RETURNDATASIZE
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 RETURNDATACOPY
0x2d6 RETURNDATASIZE
0x2d7 PUSH1 0x0
0x2d9 REVERT
---
0x2d1: V254 = RETURNDATASIZE
0x2d2: V255 = 0x0
0x2d5: RETURNDATACOPY 0x0 0x0 V254
0x2d6: V256 = RETURNDATASIZE
0x2d7: V257 = 0x0
0x2d9: REVERT 0x0 V256
---
Entry stack: [V13, 0xa0, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V251]

================================

Block 0x2da
[0x2da:0x2dc]
---
Predecessors: [0x290]
Successors: [0xa0]
---
0x2da JUMPDEST
0x2db POP
0x2dc JUMP
---
0x2da: JUMPDEST 
0x2dc: JUMP 0xa0
---
Entry stack: [V13, 0xa0, V251]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x2dd
[0x2dd:0x2f4]
---
Predecessors: [0xd8]
Successors: [0x2f5, 0x316]
---
0x2dd JUMPDEST
0x2de PUSH1 0x0
0x2e0 SLOAD
0x2e1 CALLER
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0xa0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 SUB
0x2ea SWAP1
0x2eb DUP2
0x2ec AND
0x2ed SWAP2
0x2ee AND
0x2ef EQ
0x2f0 DUP1
0x2f1 PUSH2 0x316
0x2f4 JUMPI
---
0x2dd: JUMPDEST 
0x2de: V258 = 0x0
0x2e0: V259 = S[0x0]
0x2e1: V260 = CALLER
0x2e2: V261 = 0x1
0x2e4: V262 = 0xa0
0x2e6: V263 = 0x2
0x2e8: V264 = EXP 0x2 0xa0
0x2e9: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ec: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x2ee: V267 = AND V259 0xffffffffffffffffffffffffffffffffffffffff
0x2ef: V268 = EQ V267 V266
0x2f1: V269 = 0x316
0x2f4: JUMPI 0x316 V268
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: [V268]
Exit stack: [V13, 0xa0, V268]

================================

Block 0x2f5
[0x2f5:0x315]
---
Predecessors: [0x2dd]
Successors: [0x316]
---
0x2f5 POP
0x2f6 CALLER
0x2f7 PUSH1 0x1
0x2f9 PUSH1 0xa0
0x2fb PUSH1 0x2
0x2fd EXP
0x2fe SUB
0x2ff AND
0x300 PUSH20 0x5da469e35b6b697f976f866320b851d88214426
0x315 EQ
---
0x2f6: V270 = CALLER
0x2f7: V271 = 0x1
0x2f9: V272 = 0xa0
0x2fb: V273 = 0x2
0x2fd: V274 = EXP 0x2 0xa0
0x2fe: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ff: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x300: V277 = 0x5da469e35b6b697f976f866320b851d88214426
0x315: V278 = EQ 0x5da469e35b6b697f976f866320b851d88214426 V276
---
Entry stack: [V13, 0xa0, V268]
Stack pops: 1
Stack additions: [V278]
Exit stack: [V13, 0xa0, V278]

================================

Block 0x316
[0x316:0x31c]
---
Predecessors: [0x2dd, 0x2f5]
Successors: [0x31d, 0x321]
---
0x316 JUMPDEST
0x317 ISZERO
0x318 ISZERO
0x319 PUSH2 0x321
0x31c JUMPI
---
0x316: JUMPDEST 
0x317: V279 = ISZERO S0
0x318: V280 = ISZERO V279
0x319: V281 = 0x321
0x31c: JUMPI 0x321 V280
---
Entry stack: [V13, 0xa0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x316]
Successors: []
---
0x31d PUSH1 0x0
0x31f DUP1
0x320 REVERT
---
0x31d: V282 = 0x0
0x320: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x321
[0x321:0x36f]
---
Predecessors: [0x316]
Successors: [0x276, 0x370]
---
0x321 JUMPDEST
0x322 PUSH1 0x1
0x324 PUSH1 0x0
0x326 SWAP1
0x327 SLOAD
0x328 SWAP1
0x329 PUSH2 0x100
0x32c EXP
0x32d SWAP1
0x32e DIV
0x32f PUSH1 0x1
0x331 PUSH1 0xa0
0x333 PUSH1 0x2
0x335 EXP
0x336 SUB
0x337 AND
0x338 PUSH1 0x1
0x33a PUSH1 0xa0
0x33c PUSH1 0x2
0x33e EXP
0x33f SUB
0x340 AND
0x341 PUSH4 0x614baf5c
0x346 PUSH1 0x40
0x348 MLOAD
0x349 DUP2
0x34a PUSH4 0xffffffff
0x34f AND
0x350 PUSH1 0xe0
0x352 PUSH1 0x2
0x354 EXP
0x355 MUL
0x356 DUP2
0x357 MSTORE
0x358 PUSH1 0x4
0x35a ADD
0x35b PUSH1 0x0
0x35d PUSH1 0x40
0x35f MLOAD
0x360 DUP1
0x361 DUP4
0x362 SUB
0x363 DUP2
0x364 PUSH1 0x0
0x366 DUP8
0x367 DUP1
0x368 EXTCODESIZE
0x369 ISZERO
0x36a DUP1
0x36b ISZERO
0x36c PUSH2 0x276
0x36f JUMPI
---
0x321: JUMPDEST 
0x322: V283 = 0x1
0x324: V284 = 0x0
0x327: V285 = S[0x1]
0x329: V286 = 0x100
0x32c: V287 = EXP 0x100 0x0
0x32e: V288 = DIV V285 0x1
0x32f: V289 = 0x1
0x331: V290 = 0xa0
0x333: V291 = 0x2
0x335: V292 = EXP 0x2 0xa0
0x336: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x337: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x338: V295 = 0x1
0x33a: V296 = 0xa0
0x33c: V297 = 0x2
0x33e: V298 = EXP 0x2 0xa0
0x33f: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x340: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x341: V301 = 0x614baf5c
0x346: V302 = 0x40
0x348: V303 = M[0x40]
0x34a: V304 = 0xffffffff
0x34f: V305 = AND 0xffffffff 0x614baf5c
0x350: V306 = 0xe0
0x352: V307 = 0x2
0x354: V308 = EXP 0x2 0xe0
0x355: V309 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x614baf5c
0x357: M[V303] = 0x614baf5c00000000000000000000000000000000000000000000000000000000
0x358: V310 = 0x4
0x35a: V311 = ADD 0x4 V303
0x35b: V312 = 0x0
0x35d: V313 = 0x40
0x35f: V314 = M[0x40]
0x362: V315 = SUB V311 V314
0x364: V316 = 0x0
0x368: V317 = EXTCODESIZE V300
0x369: V318 = ISZERO V317
0x36b: V319 = ISZERO V318
0x36c: V320 = 0x276
0x36f: JUMPI 0x276 V319
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: [V300, 0x614baf5c, V311, 0x0, V314, V315, V314, 0x0, V300, V318]
Exit stack: [V13, 0xa0, V300, 0x614baf5c, V311, 0x0, V314, V315, V314, 0x0, V300, V318]

================================

Block 0x370
[0x370:0x373]
---
Predecessors: [0x321]
Successors: []
---
0x370 PUSH1 0x0
0x372 DUP1
0x373 REVERT
---
0x370: V321 = 0x0
0x373: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V300, 0x614baf5c, V311, 0x0, V314, V315, V314, 0x0, V300, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V300, 0x614baf5c, V311, 0x0, V314, V315, V314, 0x0, V300, V318]

================================

Block 0x374
[0x374:0x382]
---
Predecessors: [0xed]
Successors: [0xf6]
---
0x374 JUMPDEST
0x375 PUSH1 0x0
0x377 SLOAD
0x378 PUSH1 0x1
0x37a PUSH1 0xa0
0x37c PUSH1 0x2
0x37e EXP
0x37f SUB
0x380 AND
0x381 DUP2
0x382 JUMP
---
0x374: JUMPDEST 
0x375: V322 = 0x0
0x377: V323 = S[0x0]
0x378: V324 = 0x1
0x37a: V325 = 0xa0
0x37c: V326 = 0x2
0x37e: V327 = EXP 0x2 0xa0
0x37f: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x380: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x382: JUMP 0xf6
---
Entry stack: [V13, 0xf6]
Stack pops: 1
Stack additions: [S0, V329]
Exit stack: [V13, 0xf6, V329]

================================

Block 0x383
[0x383:0x3dd]
---
Predecessors: [0x11e]
Successors: [0x3de, 0x3e2]
---
0x383 JUMPDEST
0x384 PUSH1 0x1
0x386 SLOAD
0x387 PUSH1 0x40
0x389 DUP1
0x38a MLOAD
0x38b PUSH32 0x949e8acd00000000000000000000000000000000000000000000000000000000
0x3ac DUP2
0x3ad MSTORE
0x3ae SWAP1
0x3af MLOAD
0x3b0 PUSH1 0x0
0x3b2 SWAP3
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0xa0
0x3b7 PUSH1 0x2
0x3b9 EXP
0x3ba SUB
0x3bb AND
0x3bc SWAP2
0x3bd PUSH4 0x949e8acd
0x3c2 SWAP2
0x3c3 PUSH1 0x4
0x3c5 DUP1
0x3c6 DUP4
0x3c7 ADD
0x3c8 SWAP3
0x3c9 PUSH1 0x20
0x3cb SWAP3
0x3cc SWAP2
0x3cd SWAP1
0x3ce DUP3
0x3cf SWAP1
0x3d0 SUB
0x3d1 ADD
0x3d2 DUP2
0x3d3 DUP8
0x3d4 DUP8
0x3d5 DUP1
0x3d6 EXTCODESIZE
0x3d7 ISZERO
0x3d8 DUP1
0x3d9 ISZERO
0x3da PUSH2 0x3e2
0x3dd JUMPI
---
0x383: JUMPDEST 
0x384: V330 = 0x1
0x386: V331 = S[0x1]
0x387: V332 = 0x40
0x38a: V333 = M[0x40]
0x38b: V334 = 0x949e8acd00000000000000000000000000000000000000000000000000000000
0x3ad: M[V333] = 0x949e8acd00000000000000000000000000000000000000000000000000000000
0x3af: V335 = M[0x40]
0x3b0: V336 = 0x0
0x3b3: V337 = 0x1
0x3b5: V338 = 0xa0
0x3b7: V339 = 0x2
0x3b9: V340 = EXP 0x2 0xa0
0x3ba: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bb: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x3bd: V343 = 0x949e8acd
0x3c3: V344 = 0x4
0x3c7: V345 = ADD V333 0x4
0x3c9: V346 = 0x20
0x3d0: V347 = SUB V333 V335
0x3d1: V348 = ADD V347 0x4
0x3d6: V349 = EXTCODESIZE V342
0x3d7: V350 = ISZERO V349
0x3d9: V351 = ISZERO V350
0x3da: V352 = 0x3e2
0x3dd: JUMPI 0x3e2 V351
---
Entry stack: [V13, 0x127]
Stack pops: 0
Stack additions: [0x0, V342, 0x949e8acd, V345, 0x20, V335, V348, V335, 0x0, V342, V350]
Exit stack: [V13, 0x127, 0x0, V342, 0x949e8acd, V345, 0x20, V335, V348, V335, 0x0, V342, V350]

================================

Block 0x3de
[0x3de:0x3e1]
---
Predecessors: [0x383]
Successors: []
---
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 REVERT
---
0x3de: V353 = 0x0
0x3e1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x127, 0x0, V342, 0x949e8acd, V345, 0x20, V335, V348, V335, 0x0, V342, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x127, 0x0, V342, 0x949e8acd, V345, 0x20, V335, V348, V335, 0x0, V342, V350]

================================

Block 0x3e2
[0x3e2:0x3ec]
---
Predecessors: [0x383]
Successors: [0x3ed, 0x3f6]
---
0x3e2 JUMPDEST
0x3e3 POP
0x3e4 GAS
0x3e5 CALL
0x3e6 ISZERO
0x3e7 DUP1
0x3e8 ISZERO
0x3e9 PUSH2 0x3f6
0x3ec JUMPI
---
0x3e2: JUMPDEST 
0x3e4: V354 = GAS
0x3e5: V355 = CALL V354 V342 0x0 V335 V348 V335 0x20
0x3e6: V356 = ISZERO V355
0x3e8: V357 = ISZERO V356
0x3e9: V358 = 0x3f6
0x3ec: JUMPI 0x3f6 V357
---
Entry stack: [V13, 0x127, 0x0, V342, 0x949e8acd, V345, 0x20, V335, V348, V335, 0x0, V342, V350]
Stack pops: 7
Stack additions: [V356]
Exit stack: [V13, 0x127, 0x0, V342, 0x949e8acd, V345, V356]

================================

Block 0x3ed
[0x3ed:0x3f5]
---
Predecessors: [0x3e2]
Successors: []
---
0x3ed RETURNDATASIZE
0x3ee PUSH1 0x0
0x3f0 DUP1
0x3f1 RETURNDATACOPY
0x3f2 RETURNDATASIZE
0x3f3 PUSH1 0x0
0x3f5 REVERT
---
0x3ed: V359 = RETURNDATASIZE
0x3ee: V360 = 0x0
0x3f1: RETURNDATACOPY 0x0 0x0 V359
0x3f2: V361 = RETURNDATASIZE
0x3f3: V362 = 0x0
0x3f5: REVERT 0x0 V361
---
Entry stack: [V13, 0x127, 0x0, V342, 0x949e8acd, V345, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x127, 0x0, V342, 0x949e8acd, V345, V356]

================================

Block 0x3f6
[0x3f6:0x407]
---
Predecessors: [0x3e2]
Successors: [0x408, 0x40c]
---
0x3f6 JUMPDEST
0x3f7 POP
0x3f8 POP
0x3f9 POP
0x3fa POP
0x3fb PUSH1 0x40
0x3fd MLOAD
0x3fe RETURNDATASIZE
0x3ff PUSH1 0x20
0x401 DUP2
0x402 LT
0x403 ISZERO
0x404 PUSH2 0x40c
0x407 JUMPI
---
0x3f6: JUMPDEST 
0x3fb: V363 = 0x40
0x3fd: V364 = M[0x40]
0x3fe: V365 = RETURNDATASIZE
0x3ff: V366 = 0x20
0x402: V367 = LT V365 0x20
0x403: V368 = ISZERO V367
0x404: V369 = 0x40c
0x407: JUMPI 0x40c V368
---
Entry stack: [V13, 0x127, 0x0, V342, 0x949e8acd, V345, V356]
Stack pops: 4
Stack additions: [V364, V365]
Exit stack: [V13, 0x127, 0x0, V364, V365]

================================

Block 0x408
[0x408:0x40b]
---
Predecessors: [0x3f6]
Successors: []
---
0x408 PUSH1 0x0
0x40a DUP1
0x40b REVERT
---
0x408: V370 = 0x0
0x40b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x127, 0x0, V364, V365]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x127, 0x0, V364, V365]

================================

Block 0x40c
[0x40c:0x412]
---
Predecessors: [0x3f6]
Successors: [0x127]
---
0x40c JUMPDEST
0x40d POP
0x40e MLOAD
0x40f SWAP1
0x410 POP
0x411 SWAP1
0x412 JUMP
---
0x40c: JUMPDEST 
0x40e: V371 = M[V364]
0x412: JUMP 0x127
---
Entry stack: [V13, 0x127, 0x0, V364, V365]
Stack pops: 4
Stack additions: [V371]
Exit stack: [V13, V371]

================================

Block 0x413
[0x413:0x42a]
---
Predecessors: [0x139]
Successors: [0x42b, 0x42f]
---
0x413 JUMPDEST
0x414 PUSH1 0x1
0x416 SLOAD
0x417 PUSH1 0x1
0x419 PUSH1 0xa0
0x41b PUSH1 0x2
0x41d EXP
0x41e SUB
0x41f AND
0x420 BALANCE
0x421 PUSH1 0x0
0x423 DUP3
0x424 DUP3
0x425 GT
0x426 ISZERO
0x427 PUSH2 0x42f
0x42a JUMPI
---
0x413: JUMPDEST 
0x414: V372 = 0x1
0x416: V373 = S[0x1]
0x417: V374 = 0x1
0x419: V375 = 0xa0
0x41b: V376 = 0x2
0x41d: V377 = EXP 0x2 0xa0
0x41e: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41f: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x420: V380 = BALANCE V379
0x421: V381 = 0x0
0x425: V382 = GT V380 V108
0x426: V383 = ISZERO V382
0x427: V384 = 0x42f
0x42a: JUMPI 0x42f V383
---
Entry stack: [V13, 0xa0, V106, V108]
Stack pops: 1
Stack additions: [S0, V380, 0x0]
Exit stack: [V13, 0xa0, V106, V108, V380, 0x0]

================================

Block 0x42b
[0x42b:0x42e]
---
Predecessors: [0x413]
Successors: []
---
0x42b PUSH1 0x0
0x42d DUP1
0x42e REVERT
---
0x42b: V385 = 0x0
0x42e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V106, V108, V380, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V106, V108, V380, 0x0]

================================

Block 0x42f
[0x42f:0x43c]
---
Predecessors: [0x413]
Successors: [0x43d, 0x441]
---
0x42f JUMPDEST
0x430 CALLVALUE
0x431 SWAP1
0x432 POP
0x433 DUP3
0x434 CALLVALUE
0x435 DUP4
0x436 ADD
0x437 GT
0x438 ISZERO
0x439 PUSH2 0x441
0x43c JUMPI
---
0x42f: JUMPDEST 
0x430: V386 = CALLVALUE
0x434: V387 = CALLVALUE
0x436: V388 = ADD V380 V387
0x437: V389 = GT V388 V108
0x438: V390 = ISZERO V389
0x439: V391 = 0x441
0x43c: JUMPI 0x441 V390
---
Entry stack: [V13, 0xa0, V106, V108, V380, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V386]
Exit stack: [V13, 0xa0, V106, V108, V380, V386]

================================

Block 0x43d
[0x43d:0x440]
---
Predecessors: [0x42f]
Successors: [0x441]
---
0x43d POP
0x43e DUP1
0x43f DUP3
0x440 SUB
---
0x440: V392 = SUB V108 V380
---
Entry stack: [V13, 0xa0, V106, V108, V380, V386]
Stack pops: 3
Stack additions: [S2, S1, V392]
Exit stack: [V13, 0xa0, V106, V108, V380, V392]

================================

Block 0x441
[0x441:0x4a6]
---
Predecessors: [0x42f, 0x43d]
Successors: [0x4a7, 0x4ab]
---
0x441 JUMPDEST
0x442 PUSH1 0x1
0x444 SLOAD
0x445 PUSH1 0x40
0x447 DUP1
0x448 MLOAD
0x449 PUSH32 0xf088d54700000000000000000000000000000000000000000000000000000000
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x1
0x46e PUSH1 0xa0
0x470 PUSH1 0x2
0x472 EXP
0x473 SUB
0x474 DUP8
0x475 DUP2
0x476 AND
0x477 PUSH1 0x4
0x479 DUP4
0x47a ADD
0x47b MSTORE
0x47c SWAP2
0x47d MLOAD
0x47e SWAP2
0x47f SWAP1
0x480 SWAP3
0x481 AND
0x482 SWAP2
0x483 PUSH4 0xf088d547
0x488 SWAP2
0x489 DUP5
0x48a SWAP2
0x48b PUSH1 0x24
0x48d DUP1
0x48e DUP3
0x48f ADD
0x490 SWAP3
0x491 PUSH1 0x20
0x493 SWAP3
0x494 SWAP1
0x495 SWAP2
0x496 SWAP1
0x497 DUP3
0x498 SWAP1
0x499 SUB
0x49a ADD
0x49b DUP2
0x49c DUP6
0x49d DUP9
0x49e DUP1
0x49f EXTCODESIZE
0x4a0 ISZERO
0x4a1 DUP1
0x4a2 ISZERO
0x4a3 PUSH2 0x4ab
0x4a6 JUMPI
---
0x441: JUMPDEST 
0x442: V393 = 0x1
0x444: V394 = S[0x1]
0x445: V395 = 0x40
0x448: V396 = M[0x40]
0x449: V397 = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x46b: M[V396] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x46c: V398 = 0x1
0x46e: V399 = 0xa0
0x470: V400 = 0x2
0x472: V401 = EXP 0x2 0xa0
0x473: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x476: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x477: V404 = 0x4
0x47a: V405 = ADD V396 0x4
0x47b: M[V405] = V403
0x47d: V406 = M[0x40]
0x481: V407 = AND V394 0xffffffffffffffffffffffffffffffffffffffff
0x483: V408 = 0xf088d547
0x48b: V409 = 0x24
0x48f: V410 = ADD V396 0x24
0x491: V411 = 0x20
0x499: V412 = SUB V396 V406
0x49a: V413 = ADD V412 0x24
0x49f: V414 = EXTCODESIZE V407
0x4a0: V415 = ISZERO V414
0x4a2: V416 = ISZERO V415
0x4a3: V417 = 0x4ab
0x4a6: JUMPI 0x4ab V416
---
Entry stack: [V13, 0xa0, V106, V108, V380, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V407, 0xf088d547, S0, V410, 0x20, V406, V413, V406, S0, V407, V415]
Exit stack: [V13, 0xa0, V106, V108, V380, S0, V407, 0xf088d547, S0, V410, 0x20, V406, V413, V406, S0, V407, V415]

================================

Block 0x4a7
[0x4a7:0x4aa]
---
Predecessors: [0x441]
Successors: []
---
0x4a7 PUSH1 0x0
0x4a9 DUP1
0x4aa REVERT
---
0x4a7: V418 = 0x0
0x4aa: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V106, V108, V380, S11, V407, 0xf088d547, S8, V410, 0x20, V406, V413, V406, S2, V407, V415]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V106, V108, V380, S11, V407, 0xf088d547, S8, V410, 0x20, V406, V413, V406, S2, V407, V415]

================================

Block 0x4ab
[0x4ab:0x4b5]
---
Predecessors: [0x441]
Successors: [0x4b6, 0x4bf]
---
0x4ab JUMPDEST
0x4ac POP
0x4ad GAS
0x4ae CALL
0x4af ISZERO
0x4b0 DUP1
0x4b1 ISZERO
0x4b2 PUSH2 0x4bf
0x4b5 JUMPI
---
0x4ab: JUMPDEST 
0x4ad: V419 = GAS
0x4ae: V420 = CALL V419 V407 S2 V406 V413 V406 0x20
0x4af: V421 = ISZERO V420
0x4b1: V422 = ISZERO V421
0x4b2: V423 = 0x4bf
0x4b5: JUMPI 0x4bf V422
---
Entry stack: [V13, 0xa0, V106, V108, V380, S11, V407, 0xf088d547, S8, V410, 0x20, V406, V413, V406, S2, V407, V415]
Stack pops: 7
Stack additions: [V421]
Exit stack: [V13, 0xa0, V106, V108, V380, S11, V407, 0xf088d547, S8, V410, V421]

================================

Block 0x4b6
[0x4b6:0x4be]
---
Predecessors: [0x4ab]
Successors: []
---
0x4b6 RETURNDATASIZE
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba RETURNDATACOPY
0x4bb RETURNDATASIZE
0x4bc PUSH1 0x0
0x4be REVERT
---
0x4b6: V424 = RETURNDATASIZE
0x4b7: V425 = 0x0
0x4ba: RETURNDATACOPY 0x0 0x0 V424
0x4bb: V426 = RETURNDATASIZE
0x4bc: V427 = 0x0
0x4be: REVERT 0x0 V426
---
Entry stack: [V13, 0xa0, V106, V108, V380, S5, V407, 0xf088d547, S2, V410, V421]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V106, V108, V380, S5, V407, 0xf088d547, S2, V410, V421]

================================

Block 0x4bf
[0x4bf:0x4d1]
---
Predecessors: [0x4ab]
Successors: [0x4d2, 0x4d6]
---
0x4bf JUMPDEST
0x4c0 POP
0x4c1 POP
0x4c2 POP
0x4c3 POP
0x4c4 POP
0x4c5 PUSH1 0x40
0x4c7 MLOAD
0x4c8 RETURNDATASIZE
0x4c9 PUSH1 0x20
0x4cb DUP2
0x4cc LT
0x4cd ISZERO
0x4ce PUSH2 0x4d6
0x4d1 JUMPI
---
0x4bf: JUMPDEST 
0x4c5: V428 = 0x40
0x4c7: V429 = M[0x40]
0x4c8: V430 = RETURNDATASIZE
0x4c9: V431 = 0x20
0x4cc: V432 = LT V430 0x20
0x4cd: V433 = ISZERO V432
0x4ce: V434 = 0x4d6
0x4d1: JUMPI 0x4d6 V433
---
Entry stack: [V13, 0xa0, V106, V108, V380, S5, V407, 0xf088d547, S2, V410, V421]
Stack pops: 5
Stack additions: [V429, V430]
Exit stack: [V13, 0xa0, V106, V108, V380, S5, V429, V430]

================================

Block 0x4d2
[0x4d2:0x4d5]
---
Predecessors: [0x4bf]
Successors: []
---
0x4d2 PUSH1 0x0
0x4d4 DUP1
0x4d5 REVERT
---
0x4d2: V435 = 0x0
0x4d5: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V106, V108, V380, S2, V429, V430]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V106, V108, V380, S2, V429, V430]

================================

Block 0x4d6
[0x4d6:0x4eb]
---
Predecessors: [0x4bf]
Successors: [0x28a, 0x4ec]
---
0x4d6 JUMPDEST
0x4d7 POP
0x4d8 POP
0x4d9 PUSH1 0x0
0x4db PUSH1 0x1
0x4dd PUSH1 0xa0
0x4df PUSH1 0x2
0x4e1 EXP
0x4e2 SUB
0x4e3 ADDRESS
0x4e4 AND
0x4e5 BALANCE
0x4e6 GT
0x4e7 ISZERO
0x4e8 PUSH2 0x28a
0x4eb JUMPI
---
0x4d6: JUMPDEST 
0x4d9: V436 = 0x0
0x4db: V437 = 0x1
0x4dd: V438 = 0xa0
0x4df: V439 = 0x2
0x4e1: V440 = EXP 0x2 0xa0
0x4e2: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e3: V442 = ADDRESS
0x4e4: V443 = AND V442 0xffffffffffffffffffffffffffffffffffffffff
0x4e5: V444 = BALANCE V443
0x4e6: V445 = GT V444 0x0
0x4e7: V446 = ISZERO V445
0x4e8: V447 = 0x28a
0x4eb: JUMPI 0x28a V446
---
Entry stack: [V13, 0xa0, V106, V108, V380, S2, V429, V430]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xa0, V106, V108, V380, S2]

================================

Block 0x4ec
[0x4ec:0x520]
---
Predecessors: [0x4d6]
Successors: [0x521, 0x52a]
---
0x4ec PUSH1 0x0
0x4ee DUP1
0x4ef SLOAD
0x4f0 PUSH1 0x40
0x4f2 MLOAD
0x4f3 PUSH1 0x1
0x4f5 PUSH1 0xa0
0x4f7 PUSH1 0x2
0x4f9 EXP
0x4fa SUB
0x4fb SWAP2
0x4fc DUP3
0x4fd AND
0x4fe SWAP3
0x4ff ADDRESS
0x500 SWAP1
0x501 SWAP3
0x502 AND
0x503 BALANCE
0x504 DUP1
0x505 ISZERO
0x506 PUSH2 0x8fc
0x509 MUL
0x50a SWAP3
0x50b SWAP1
0x50c SWAP2
0x50d SWAP1
0x50e DUP2
0x50f DUP2
0x510 DUP2
0x511 DUP6
0x512 DUP9
0x513 DUP9
0x514 CALL
0x515 SWAP4
0x516 POP
0x517 POP
0x518 POP
0x519 POP
0x51a ISZERO
0x51b DUP1
0x51c ISZERO
0x51d PUSH2 0x52a
0x520 JUMPI
---
0x4ec: V448 = 0x0
0x4ef: V449 = S[0x0]
0x4f0: V450 = 0x40
0x4f2: V451 = M[0x40]
0x4f3: V452 = 0x1
0x4f5: V453 = 0xa0
0x4f7: V454 = 0x2
0x4f9: V455 = EXP 0x2 0xa0
0x4fa: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x4ff: V458 = ADDRESS
0x502: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x503: V460 = BALANCE V459
0x505: V461 = ISZERO V460
0x506: V462 = 0x8fc
0x509: V463 = MUL 0x8fc V461
0x514: V464 = CALL V463 V457 V460 V451 0x0 V451 0x0
0x51a: V465 = ISZERO V464
0x51c: V466 = ISZERO V465
0x51d: V467 = 0x52a
0x520: JUMPI 0x52a V466
---
Entry stack: [V13, 0xa0, V106, V108, V380, S0]
Stack pops: 0
Stack additions: [V465]
Exit stack: [V13, 0xa0, V106, V108, V380, S0, V465]

================================

Block 0x521
[0x521:0x529]
---
Predecessors: [0x4ec]
Successors: []
---
0x521 RETURNDATASIZE
0x522 PUSH1 0x0
0x524 DUP1
0x525 RETURNDATACOPY
0x526 RETURNDATASIZE
0x527 PUSH1 0x0
0x529 REVERT
---
0x521: V468 = RETURNDATASIZE
0x522: V469 = 0x0
0x525: RETURNDATACOPY 0x0 0x0 V468
0x526: V470 = RETURNDATASIZE
0x527: V471 = 0x0
0x529: REVERT 0x0 V470
---
Entry stack: [V13, 0xa0, V106, V108, V380, S1, V465]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V106, V108, V380, S1, V465]

================================

Block 0x52a
[0x52a:0x530]
---
Predecessors: [0x4ec, 0x6b8]
Successors: [0xa0]
---
0x52a JUMPDEST
0x52b POP
0x52c POP
0x52d POP
0x52e POP
0x52f POP
0x530 JUMP
---
0x52a: JUMPDEST 
0x530: JUMP 0xa0
---
Entry stack: [V13, 0xa0, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x531
[0x531:0x548]
---
Predecessors: [0x15c]
Successors: [0x549, 0x56a]
---
0x531 JUMPDEST
0x532 PUSH1 0x0
0x534 SLOAD
0x535 CALLER
0x536 PUSH1 0x1
0x538 PUSH1 0xa0
0x53a PUSH1 0x2
0x53c EXP
0x53d SUB
0x53e SWAP1
0x53f DUP2
0x540 AND
0x541 SWAP2
0x542 AND
0x543 EQ
0x544 DUP1
0x545 PUSH2 0x56a
0x548 JUMPI
---
0x531: JUMPDEST 
0x532: V472 = 0x0
0x534: V473 = S[0x0]
0x535: V474 = CALLER
0x536: V475 = 0x1
0x538: V476 = 0xa0
0x53a: V477 = 0x2
0x53c: V478 = EXP 0x2 0xa0
0x53d: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x540: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x542: V481 = AND V473 0xffffffffffffffffffffffffffffffffffffffff
0x543: V482 = EQ V481 V480
0x545: V483 = 0x56a
0x548: JUMPI 0x56a V482
---
Entry stack: [V13, 0xa0, V122, V124]
Stack pops: 0
Stack additions: [V482]
Exit stack: [V13, 0xa0, V122, V124, V482]

================================

Block 0x549
[0x549:0x569]
---
Predecessors: [0x531]
Successors: [0x56a]
---
0x549 POP
0x54a CALLER
0x54b PUSH1 0x1
0x54d PUSH1 0xa0
0x54f PUSH1 0x2
0x551 EXP
0x552 SUB
0x553 AND
0x554 PUSH20 0x5da469e35b6b697f976f866320b851d88214426
0x569 EQ
---
0x54a: V484 = CALLER
0x54b: V485 = 0x1
0x54d: V486 = 0xa0
0x54f: V487 = 0x2
0x551: V488 = EXP 0x2 0xa0
0x552: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x553: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x554: V491 = 0x5da469e35b6b697f976f866320b851d88214426
0x569: V492 = EQ 0x5da469e35b6b697f976f866320b851d88214426 V490
---
Entry stack: [V13, 0xa0, V122, V124, V482]
Stack pops: 1
Stack additions: [V492]
Exit stack: [V13, 0xa0, V122, V124, V492]

================================

Block 0x56a
[0x56a:0x570]
---
Predecessors: [0x531, 0x549]
Successors: [0x571, 0x575]
---
0x56a JUMPDEST
0x56b ISZERO
0x56c ISZERO
0x56d PUSH2 0x575
0x570 JUMPI
---
0x56a: JUMPDEST 
0x56b: V493 = ISZERO S0
0x56c: V494 = ISZERO V493
0x56d: V495 = 0x575
0x570: JUMPI 0x575 V494
---
Entry stack: [V13, 0xa0, V122, V124, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xa0, V122, V124]

================================

Block 0x571
[0x571:0x574]
---
Predecessors: [0x56a]
Successors: []
---
0x571 PUSH1 0x0
0x573 DUP1
0x574 REVERT
---
0x571: V496 = 0x0
0x574: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V122, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V122, V124]

================================

Block 0x575
[0x575:0x5df]
---
Predecessors: [0x56a]
Successors: [0x5e0, 0x5e4]
---
0x575 JUMPDEST
0x576 PUSH1 0x1
0x578 SLOAD
0x579 PUSH1 0x40
0x57b DUP1
0x57c MLOAD
0x57d PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x59e DUP2
0x59f MSTORE
0x5a0 PUSH1 0x1
0x5a2 PUSH1 0xa0
0x5a4 PUSH1 0x2
0x5a6 EXP
0x5a7 SUB
0x5a8 DUP6
0x5a9 DUP2
0x5aa AND
0x5ab PUSH1 0x4
0x5ad DUP4
0x5ae ADD
0x5af MSTORE
0x5b0 PUSH1 0x24
0x5b2 DUP3
0x5b3 ADD
0x5b4 DUP6
0x5b5 SWAP1
0x5b6 MSTORE
0x5b7 SWAP2
0x5b8 MLOAD
0x5b9 SWAP2
0x5ba SWAP1
0x5bb SWAP3
0x5bc AND
0x5bd SWAP2
0x5be PUSH4 0xa9059cbb
0x5c3 SWAP2
0x5c4 PUSH1 0x44
0x5c6 DUP1
0x5c7 DUP4
0x5c8 ADD
0x5c9 SWAP3
0x5ca PUSH1 0x20
0x5cc SWAP3
0x5cd SWAP2
0x5ce SWAP1
0x5cf DUP3
0x5d0 SWAP1
0x5d1 SUB
0x5d2 ADD
0x5d3 DUP2
0x5d4 PUSH1 0x0
0x5d6 DUP8
0x5d7 DUP1
0x5d8 EXTCODESIZE
0x5d9 ISZERO
0x5da DUP1
0x5db ISZERO
0x5dc PUSH2 0x5e4
0x5df JUMPI
---
0x575: JUMPDEST 
0x576: V497 = 0x1
0x578: V498 = S[0x1]
0x579: V499 = 0x40
0x57c: V500 = M[0x40]
0x57d: V501 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x59f: M[V500] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5a0: V502 = 0x1
0x5a2: V503 = 0xa0
0x5a4: V504 = 0x2
0x5a6: V505 = EXP 0x2 0xa0
0x5a7: V506 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5aa: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x5ab: V508 = 0x4
0x5ae: V509 = ADD V500 0x4
0x5af: M[V509] = V507
0x5b0: V510 = 0x24
0x5b3: V511 = ADD V500 0x24
0x5b6: M[V511] = V124
0x5b8: V512 = M[0x40]
0x5bc: V513 = AND V498 0xffffffffffffffffffffffffffffffffffffffff
0x5be: V514 = 0xa9059cbb
0x5c4: V515 = 0x44
0x5c8: V516 = ADD V500 0x44
0x5ca: V517 = 0x20
0x5d1: V518 = SUB V500 V512
0x5d2: V519 = ADD V518 0x44
0x5d4: V520 = 0x0
0x5d8: V521 = EXTCODESIZE V513
0x5d9: V522 = ISZERO V521
0x5db: V523 = ISZERO V522
0x5dc: V524 = 0x5e4
0x5df: JUMPI 0x5e4 V523
---
Entry stack: [V13, 0xa0, V122, V124]
Stack pops: 2
Stack additions: [S1, S0, V513, 0xa9059cbb, V516, 0x20, V512, V519, V512, 0x0, V513, V522]
Exit stack: [V13, 0xa0, V122, V124, V513, 0xa9059cbb, V516, 0x20, V512, V519, V512, 0x0, V513, V522]

================================

Block 0x5e0
[0x5e0:0x5e3]
---
Predecessors: [0x575]
Successors: []
---
0x5e0 PUSH1 0x0
0x5e2 DUP1
0x5e3 REVERT
---
0x5e0: V525 = 0x0
0x5e3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V122, V124, V513, 0xa9059cbb, V516, 0x20, V512, V519, V512, 0x0, V513, V522]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V122, V124, V513, 0xa9059cbb, V516, 0x20, V512, V519, V512, 0x0, V513, V522]

================================

Block 0x5e4
[0x5e4:0x5ee]
---
Predecessors: [0x575]
Successors: [0x5ef, 0x5f8]
---
0x5e4 JUMPDEST
0x5e5 POP
0x5e6 GAS
0x5e7 CALL
0x5e8 ISZERO
0x5e9 DUP1
0x5ea ISZERO
0x5eb PUSH2 0x5f8
0x5ee JUMPI
---
0x5e4: JUMPDEST 
0x5e6: V526 = GAS
0x5e7: V527 = CALL V526 V513 0x0 V512 V519 V512 0x20
0x5e8: V528 = ISZERO V527
0x5ea: V529 = ISZERO V528
0x5eb: V530 = 0x5f8
0x5ee: JUMPI 0x5f8 V529
---
Entry stack: [V13, 0xa0, V122, V124, V513, 0xa9059cbb, V516, 0x20, V512, V519, V512, 0x0, V513, V522]
Stack pops: 7
Stack additions: [V528]
Exit stack: [V13, 0xa0, V122, V124, V513, 0xa9059cbb, V516, V528]

================================

Block 0x5ef
[0x5ef:0x5f7]
---
Predecessors: [0x5e4]
Successors: []
---
0x5ef RETURNDATASIZE
0x5f0 PUSH1 0x0
0x5f2 DUP1
0x5f3 RETURNDATACOPY
0x5f4 RETURNDATASIZE
0x5f5 PUSH1 0x0
0x5f7 REVERT
---
0x5ef: V531 = RETURNDATASIZE
0x5f0: V532 = 0x0
0x5f3: RETURNDATACOPY 0x0 0x0 V531
0x5f4: V533 = RETURNDATASIZE
0x5f5: V534 = 0x0
0x5f7: REVERT 0x0 V533
---
Entry stack: [V13, 0xa0, V122, V124, V513, 0xa9059cbb, V516, V528]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V122, V124, V513, 0xa9059cbb, V516, V528]

================================

Block 0x5f8
[0x5f8:0x609]
---
Predecessors: [0x5e4]
Successors: [0x28a, 0x60a]
---
0x5f8 JUMPDEST
0x5f9 POP
0x5fa POP
0x5fb POP
0x5fc POP
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 RETURNDATASIZE
0x601 PUSH1 0x20
0x603 DUP2
0x604 LT
0x605 ISZERO
0x606 PUSH2 0x28a
0x609 JUMPI
---
0x5f8: JUMPDEST 
0x5fd: V535 = 0x40
0x5ff: V536 = M[0x40]
0x600: V537 = RETURNDATASIZE
0x601: V538 = 0x20
0x604: V539 = LT V537 0x20
0x605: V540 = ISZERO V539
0x606: V541 = 0x28a
0x609: JUMPI 0x28a V540
---
Entry stack: [V13, 0xa0, V122, V124, V513, 0xa9059cbb, V516, V528]
Stack pops: 4
Stack additions: [V536, V537]
Exit stack: [V13, 0xa0, V122, V124, V536, V537]

================================

Block 0x60a
[0x60a:0x60d]
---
Predecessors: [0x5f8]
Successors: []
---
0x60a PUSH1 0x0
0x60c DUP1
0x60d REVERT
---
0x60a: V542 = 0x0
0x60d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V122, V124, V536, V537]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V122, V124, V536, V537]

================================

Block 0x60e
[0x60e:0x625]
---
Predecessors: [0x180]
Successors: [0x626, 0x647]
---
0x60e JUMPDEST
0x60f PUSH1 0x0
0x611 SLOAD
0x612 CALLER
0x613 PUSH1 0x1
0x615 PUSH1 0xa0
0x617 PUSH1 0x2
0x619 EXP
0x61a SUB
0x61b SWAP1
0x61c DUP2
0x61d AND
0x61e SWAP2
0x61f AND
0x620 EQ
0x621 DUP1
0x622 PUSH2 0x647
0x625 JUMPI
---
0x60e: JUMPDEST 
0x60f: V543 = 0x0
0x611: V544 = S[0x0]
0x612: V545 = CALLER
0x613: V546 = 0x1
0x615: V547 = 0xa0
0x617: V548 = 0x2
0x619: V549 = EXP 0x2 0xa0
0x61a: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61d: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x61f: V552 = AND V544 0xffffffffffffffffffffffffffffffffffffffff
0x620: V553 = EQ V552 V551
0x622: V554 = 0x647
0x625: JUMPI 0x647 V553
---
Entry stack: [V13, 0xa0, V132]
Stack pops: 0
Stack additions: [V553]
Exit stack: [V13, 0xa0, V132, V553]

================================

Block 0x626
[0x626:0x646]
---
Predecessors: [0x60e]
Successors: [0x647]
---
0x626 POP
0x627 CALLER
0x628 PUSH1 0x1
0x62a PUSH1 0xa0
0x62c PUSH1 0x2
0x62e EXP
0x62f SUB
0x630 AND
0x631 PUSH20 0x5da469e35b6b697f976f866320b851d88214426
0x646 EQ
---
0x627: V555 = CALLER
0x628: V556 = 0x1
0x62a: V557 = 0xa0
0x62c: V558 = 0x2
0x62e: V559 = EXP 0x2 0xa0
0x62f: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x630: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x631: V562 = 0x5da469e35b6b697f976f866320b851d88214426
0x646: V563 = EQ 0x5da469e35b6b697f976f866320b851d88214426 V561
---
Entry stack: [V13, 0xa0, V132, V553]
Stack pops: 1
Stack additions: [V563]
Exit stack: [V13, 0xa0, V132, V563]

================================

Block 0x647
[0x647:0x64d]
---
Predecessors: [0x60e, 0x626]
Successors: [0x64e, 0x652]
---
0x647 JUMPDEST
0x648 ISZERO
0x649 ISZERO
0x64a PUSH2 0x652
0x64d JUMPI
---
0x647: JUMPDEST 
0x648: V564 = ISZERO S0
0x649: V565 = ISZERO V564
0x64a: V566 = 0x652
0x64d: JUMPI 0x652 V565
---
Entry stack: [V13, 0xa0, V132, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xa0, V132]

================================

Block 0x64e
[0x64e:0x651]
---
Predecessors: [0x647]
Successors: []
---
0x64e PUSH1 0x0
0x650 DUP1
0x651 REVERT
---
0x64e: V567 = 0x0
0x651: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V132]

================================

Block 0x652
[0x652:0x6b3]
---
Predecessors: [0x647]
Successors: [0x6b4, 0x6b8]
---
0x652 JUMPDEST
0x653 PUSH1 0x1
0x655 SLOAD
0x656 PUSH1 0x40
0x658 DUP1
0x659 MLOAD
0x65a PUSH32 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x67b DUP2
0x67c MSTORE
0x67d PUSH1 0x4
0x67f DUP2
0x680 ADD
0x681 DUP5
0x682 SWAP1
0x683 MSTORE
0x684 SWAP1
0x685 MLOAD
0x686 PUSH1 0x1
0x688 PUSH1 0xa0
0x68a PUSH1 0x2
0x68c EXP
0x68d SUB
0x68e SWAP1
0x68f SWAP3
0x690 AND
0x691 SWAP2
0x692 PUSH4 0xe4849b32
0x697 SWAP2
0x698 PUSH1 0x24
0x69a DUP1
0x69b DUP3
0x69c ADD
0x69d SWAP3
0x69e PUSH1 0x0
0x6a0 SWAP3
0x6a1 SWAP1
0x6a2 SWAP2
0x6a3 SWAP1
0x6a4 DUP3
0x6a5 SWAP1
0x6a6 SUB
0x6a7 ADD
0x6a8 DUP2
0x6a9 DUP4
0x6aa DUP8
0x6ab DUP1
0x6ac EXTCODESIZE
0x6ad ISZERO
0x6ae DUP1
0x6af ISZERO
0x6b0 PUSH2 0x6b8
0x6b3 JUMPI
---
0x652: JUMPDEST 
0x653: V568 = 0x1
0x655: V569 = S[0x1]
0x656: V570 = 0x40
0x659: V571 = M[0x40]
0x65a: V572 = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x67c: M[V571] = 0xe4849b3200000000000000000000000000000000000000000000000000000000
0x67d: V573 = 0x4
0x680: V574 = ADD V571 0x4
0x683: M[V574] = V132
0x685: V575 = M[0x40]
0x686: V576 = 0x1
0x688: V577 = 0xa0
0x68a: V578 = 0x2
0x68c: V579 = EXP 0x2 0xa0
0x68d: V580 = SUB 0x10000000000000000000000000000000000000000 0x1
0x690: V581 = AND V569 0xffffffffffffffffffffffffffffffffffffffff
0x692: V582 = 0xe4849b32
0x698: V583 = 0x24
0x69c: V584 = ADD V571 0x24
0x69e: V585 = 0x0
0x6a6: V586 = SUB V571 V575
0x6a7: V587 = ADD V586 0x24
0x6ac: V588 = EXTCODESIZE V581
0x6ad: V589 = ISZERO V588
0x6af: V590 = ISZERO V589
0x6b0: V591 = 0x6b8
0x6b3: JUMPI 0x6b8 V590
---
Entry stack: [V13, 0xa0, V132]
Stack pops: 1
Stack additions: [S0, V581, 0xe4849b32, V584, 0x0, V575, V587, V575, 0x0, V581, V589]
Exit stack: [V13, 0xa0, V132, V581, 0xe4849b32, V584, 0x0, V575, V587, V575, 0x0, V581, V589]

================================

Block 0x6b4
[0x6b4:0x6b7]
---
Predecessors: [0x652]
Successors: []
---
0x6b4 PUSH1 0x0
0x6b6 DUP1
0x6b7 REVERT
---
0x6b4: V592 = 0x0
0x6b7: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V132, V581, 0xe4849b32, V584, 0x0, V575, V587, V575, 0x0, V581, V589]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V132, V581, 0xe4849b32, V584, 0x0, V575, V587, V575, 0x0, V581, V589]

================================

Block 0x6b8
[0x6b8:0x6c2]
---
Predecessors: [0x652]
Successors: [0x52a, 0x6c3]
---
0x6b8 JUMPDEST
0x6b9 POP
0x6ba GAS
0x6bb CALL
0x6bc ISZERO
0x6bd DUP1
0x6be ISZERO
0x6bf PUSH2 0x52a
0x6c2 JUMPI
---
0x6b8: JUMPDEST 
0x6ba: V593 = GAS
0x6bb: V594 = CALL V593 V581 0x0 V575 V587 V575 0x0
0x6bc: V595 = ISZERO V594
0x6be: V596 = ISZERO V595
0x6bf: V597 = 0x52a
0x6c2: JUMPI 0x52a V596
---
Entry stack: [V13, 0xa0, V132, V581, 0xe4849b32, V584, 0x0, V575, V587, V575, 0x0, V581, V589]
Stack pops: 7
Stack additions: [V595]
Exit stack: [V13, 0xa0, V132, V581, 0xe4849b32, V584, V595]

================================

Block 0x6c3
[0x6c3:0x6cb]
---
Predecessors: [0x6b8]
Successors: []
---
0x6c3 RETURNDATASIZE
0x6c4 PUSH1 0x0
0x6c6 DUP1
0x6c7 RETURNDATACOPY
0x6c8 RETURNDATASIZE
0x6c9 PUSH1 0x0
0x6cb REVERT
---
0x6c3: V598 = RETURNDATASIZE
0x6c4: V599 = 0x0
0x6c7: RETURNDATACOPY 0x0 0x0 V598
0x6c8: V600 = RETURNDATASIZE
0x6c9: V601 = 0x0
0x6cb: REVERT 0x0 V600
---
Entry stack: [V13, 0xa0, V132, V581, 0xe4849b32, V584, V595]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V132, V581, 0xe4849b32, V584, V595]

================================

Block 0x6cc
[0x6cc:0x6e3]
---
Predecessors: [0x198]
Successors: [0x6e4, 0x705]
---
0x6cc JUMPDEST
0x6cd PUSH1 0x0
0x6cf SLOAD
0x6d0 CALLER
0x6d1 PUSH1 0x1
0x6d3 PUSH1 0xa0
0x6d5 PUSH1 0x2
0x6d7 EXP
0x6d8 SUB
0x6d9 SWAP1
0x6da DUP2
0x6db AND
0x6dc SWAP2
0x6dd AND
0x6de EQ
0x6df DUP1
0x6e0 PUSH2 0x705
0x6e3 JUMPI
---
0x6cc: JUMPDEST 
0x6cd: V602 = 0x0
0x6cf: V603 = S[0x0]
0x6d0: V604 = CALLER
0x6d1: V605 = 0x1
0x6d3: V606 = 0xa0
0x6d5: V607 = 0x2
0x6d7: V608 = EXP 0x2 0xa0
0x6d8: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6db: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0x6dd: V611 = AND V603 0xffffffffffffffffffffffffffffffffffffffff
0x6de: V612 = EQ V611 V610
0x6e0: V613 = 0x705
0x6e3: JUMPI 0x705 V612
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: [V612]
Exit stack: [V13, 0xa0, V612]

================================

Block 0x6e4
[0x6e4:0x704]
---
Predecessors: [0x6cc]
Successors: [0x705]
---
0x6e4 POP
0x6e5 CALLER
0x6e6 PUSH1 0x1
0x6e8 PUSH1 0xa0
0x6ea PUSH1 0x2
0x6ec EXP
0x6ed SUB
0x6ee AND
0x6ef PUSH20 0x5da469e35b6b697f976f866320b851d88214426
0x704 EQ
---
0x6e5: V614 = CALLER
0x6e6: V615 = 0x1
0x6e8: V616 = 0xa0
0x6ea: V617 = 0x2
0x6ec: V618 = EXP 0x2 0xa0
0x6ed: V619 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ee: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0x6ef: V621 = 0x5da469e35b6b697f976f866320b851d88214426
0x704: V622 = EQ 0x5da469e35b6b697f976f866320b851d88214426 V620
---
Entry stack: [V13, 0xa0, V612]
Stack pops: 1
Stack additions: [V622]
Exit stack: [V13, 0xa0, V622]

================================

Block 0x705
[0x705:0x70b]
---
Predecessors: [0x6cc, 0x6e4]
Successors: [0x70c, 0x710]
---
0x705 JUMPDEST
0x706 ISZERO
0x707 ISZERO
0x708 PUSH2 0x710
0x70b JUMPI
---
0x705: JUMPDEST 
0x706: V623 = ISZERO S0
0x707: V624 = ISZERO V623
0x708: V625 = 0x710
0x70b: JUMPI 0x710 V624
---
Entry stack: [V13, 0xa0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x70c
[0x70c:0x70f]
---
Predecessors: [0x705]
Successors: []
---
0x70c PUSH1 0x0
0x70e DUP1
0x70f REVERT
---
0x70c: V626 = 0x0
0x70f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0]

================================

Block 0x710
[0x710:0x75e]
---
Predecessors: [0x705]
Successors: [0x276, 0x75f]
---
0x710 JUMPDEST
0x711 PUSH1 0x1
0x713 PUSH1 0x0
0x715 SWAP1
0x716 SLOAD
0x717 SWAP1
0x718 PUSH2 0x100
0x71b EXP
0x71c SWAP1
0x71d DIV
0x71e PUSH1 0x1
0x720 PUSH1 0xa0
0x722 PUSH1 0x2
0x724 EXP
0x725 SUB
0x726 AND
0x727 PUSH1 0x1
0x729 PUSH1 0xa0
0x72b PUSH1 0x2
0x72d EXP
0x72e SUB
0x72f AND
0x730 PUSH4 0xe9fad8ee
0x735 PUSH1 0x40
0x737 MLOAD
0x738 DUP2
0x739 PUSH4 0xffffffff
0x73e AND
0x73f PUSH1 0xe0
0x741 PUSH1 0x2
0x743 EXP
0x744 MUL
0x745 DUP2
0x746 MSTORE
0x747 PUSH1 0x4
0x749 ADD
0x74a PUSH1 0x0
0x74c PUSH1 0x40
0x74e MLOAD
0x74f DUP1
0x750 DUP4
0x751 SUB
0x752 DUP2
0x753 PUSH1 0x0
0x755 DUP8
0x756 DUP1
0x757 EXTCODESIZE
0x758 ISZERO
0x759 DUP1
0x75a ISZERO
0x75b PUSH2 0x276
0x75e JUMPI
---
0x710: JUMPDEST 
0x711: V627 = 0x1
0x713: V628 = 0x0
0x716: V629 = S[0x1]
0x718: V630 = 0x100
0x71b: V631 = EXP 0x100 0x0
0x71d: V632 = DIV V629 0x1
0x71e: V633 = 0x1
0x720: V634 = 0xa0
0x722: V635 = 0x2
0x724: V636 = EXP 0x2 0xa0
0x725: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x726: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x727: V639 = 0x1
0x729: V640 = 0xa0
0x72b: V641 = 0x2
0x72d: V642 = EXP 0x2 0xa0
0x72e: V643 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72f: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0x730: V645 = 0xe9fad8ee
0x735: V646 = 0x40
0x737: V647 = M[0x40]
0x739: V648 = 0xffffffff
0x73e: V649 = AND 0xffffffff 0xe9fad8ee
0x73f: V650 = 0xe0
0x741: V651 = 0x2
0x743: V652 = EXP 0x2 0xe0
0x744: V653 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe9fad8ee
0x746: M[V647] = 0xe9fad8ee00000000000000000000000000000000000000000000000000000000
0x747: V654 = 0x4
0x749: V655 = ADD 0x4 V647
0x74a: V656 = 0x0
0x74c: V657 = 0x40
0x74e: V658 = M[0x40]
0x751: V659 = SUB V655 V658
0x753: V660 = 0x0
0x757: V661 = EXTCODESIZE V644
0x758: V662 = ISZERO V661
0x75a: V663 = ISZERO V662
0x75b: V664 = 0x276
0x75e: JUMPI 0x276 V663
---
Entry stack: [V13, 0xa0]
Stack pops: 0
Stack additions: [V644, 0xe9fad8ee, V655, 0x0, V658, V659, V658, 0x0, V644, V662]
Exit stack: [V13, 0xa0, V644, 0xe9fad8ee, V655, 0x0, V658, V659, V658, 0x0, V644, V662]

================================

Block 0x75f
[0x75f:0x762]
---
Predecessors: [0x710]
Successors: []
---
0x75f PUSH1 0x0
0x761 DUP1
0x762 REVERT
---
0x75f: V665 = 0x0
0x762: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V644, 0xe9fad8ee, V655, 0x0, V658, V659, V658, 0x0, V644, V662]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V644, 0xe9fad8ee, V655, 0x0, V658, V659, V658, 0x0, V644, V662]

================================

Block 0x763
[0x763:0x77a]
---
Predecessors: [0x1ad]
Successors: [0xf6]
---
0x763 JUMPDEST
0x764 PUSH20 0x5da469e35b6b697f976f866320b851d88214426
0x779 DUP2
0x77a JUMP
---
0x763: JUMPDEST 
0x764: V666 = 0x5da469e35b6b697f976f866320b851d88214426
0x77a: JUMP 0xf6
---
Entry stack: [V13, 0xf6]
Stack pops: 1
Stack additions: [S0, 0x5da469e35b6b697f976f866320b851d88214426]
Exit stack: [V13, 0xf6, 0x5da469e35b6b697f976f866320b851d88214426]

================================

Block 0x77b
[0x77b:0x7e0]
---
Predecessors: [0x1b6]
Successors: [0x7e1, 0x7e5]
---
0x77b JUMPDEST
0x77c PUSH1 0x1
0x77e SLOAD
0x77f PUSH1 0x40
0x781 DUP1
0x782 MLOAD
0x783 PUSH32 0xf088d54700000000000000000000000000000000000000000000000000000000
0x7a4 DUP2
0x7a5 MSTORE
0x7a6 PUSH1 0x1
0x7a8 PUSH1 0xa0
0x7aa PUSH1 0x2
0x7ac EXP
0x7ad SUB
0x7ae DUP5
0x7af DUP2
0x7b0 AND
0x7b1 PUSH1 0x4
0x7b3 DUP4
0x7b4 ADD
0x7b5 MSTORE
0x7b6 SWAP2
0x7b7 MLOAD
0x7b8 SWAP2
0x7b9 SWAP1
0x7ba SWAP3
0x7bb AND
0x7bc SWAP2
0x7bd PUSH4 0xf088d547
0x7c2 SWAP2
0x7c3 CALLVALUE
0x7c4 SWAP2
0x7c5 PUSH1 0x24
0x7c7 DUP1
0x7c8 DUP3
0x7c9 ADD
0x7ca SWAP3
0x7cb PUSH1 0x20
0x7cd SWAP3
0x7ce SWAP1
0x7cf SWAP2
0x7d0 SWAP1
0x7d1 DUP3
0x7d2 SWAP1
0x7d3 SUB
0x7d4 ADD
0x7d5 DUP2
0x7d6 DUP6
0x7d7 DUP9
0x7d8 DUP1
0x7d9 EXTCODESIZE
0x7da ISZERO
0x7db DUP1
0x7dc ISZERO
0x7dd PUSH2 0x7e5
0x7e0 JUMPI
---
0x77b: JUMPDEST 
0x77c: V667 = 0x1
0x77e: V668 = S[0x1]
0x77f: V669 = 0x40
0x782: V670 = M[0x40]
0x783: V671 = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x7a5: M[V670] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x7a6: V672 = 0x1
0x7a8: V673 = 0xa0
0x7aa: V674 = 0x2
0x7ac: V675 = EXP 0x2 0xa0
0x7ad: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b0: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x7b1: V678 = 0x4
0x7b4: V679 = ADD V670 0x4
0x7b5: M[V679] = V677
0x7b7: V680 = M[0x40]
0x7bb: V681 = AND V668 0xffffffffffffffffffffffffffffffffffffffff
0x7bd: V682 = 0xf088d547
0x7c3: V683 = CALLVALUE
0x7c5: V684 = 0x24
0x7c9: V685 = ADD V670 0x24
0x7cb: V686 = 0x20
0x7d3: V687 = SUB V670 V680
0x7d4: V688 = ADD V687 0x24
0x7d9: V689 = EXTCODESIZE V681
0x7da: V690 = ISZERO V689
0x7dc: V691 = ISZERO V690
0x7dd: V692 = 0x7e5
0x7e0: JUMPI 0x7e5 V691
---
Entry stack: [V13, 0xa0, V154]
Stack pops: 1
Stack additions: [S0, V681, 0xf088d547, V683, V685, 0x20, V680, V688, V680, V683, V681, V690]
Exit stack: [V13, 0xa0, V154, V681, 0xf088d547, V683, V685, 0x20, V680, V688, V680, V683, V681, V690]

================================

Block 0x7e1
[0x7e1:0x7e4]
---
Predecessors: [0x77b]
Successors: []
---
0x7e1 PUSH1 0x0
0x7e3 DUP1
0x7e4 REVERT
---
0x7e1: V693 = 0x0
0x7e4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V154, V681, 0xf088d547, V683, V685, 0x20, V680, V688, V680, V683, V681, V690]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V154, V681, 0xf088d547, V683, V685, 0x20, V680, V688, V680, V683, V681, V690]

================================

Block 0x7e5
[0x7e5:0x7ef]
---
Predecessors: [0x77b]
Successors: [0x7f0, 0x7f9]
---
0x7e5 JUMPDEST
0x7e6 POP
0x7e7 GAS
0x7e8 CALL
0x7e9 ISZERO
0x7ea DUP1
0x7eb ISZERO
0x7ec PUSH2 0x7f9
0x7ef JUMPI
---
0x7e5: JUMPDEST 
0x7e7: V694 = GAS
0x7e8: V695 = CALL V694 V681 V683 V680 V688 V680 0x20
0x7e9: V696 = ISZERO V695
0x7eb: V697 = ISZERO V696
0x7ec: V698 = 0x7f9
0x7ef: JUMPI 0x7f9 V697
---
Entry stack: [V13, 0xa0, V154, V681, 0xf088d547, V683, V685, 0x20, V680, V688, V680, V683, V681, V690]
Stack pops: 7
Stack additions: [V696]
Exit stack: [V13, 0xa0, V154, V681, 0xf088d547, V683, V685, V696]

================================

Block 0x7f0
[0x7f0:0x7f8]
---
Predecessors: [0x7e5]
Successors: []
---
0x7f0 RETURNDATASIZE
0x7f1 PUSH1 0x0
0x7f3 DUP1
0x7f4 RETURNDATACOPY
0x7f5 RETURNDATASIZE
0x7f6 PUSH1 0x0
0x7f8 REVERT
---
0x7f0: V699 = RETURNDATASIZE
0x7f1: V700 = 0x0
0x7f4: RETURNDATACOPY 0x0 0x0 V699
0x7f5: V701 = RETURNDATASIZE
0x7f6: V702 = 0x0
0x7f8: REVERT 0x0 V701
---
Entry stack: [V13, 0xa0, V154, V681, 0xf088d547, V683, V685, V696]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V154, V681, 0xf088d547, V683, V685, V696]

================================

Block 0x7f9
[0x7f9:0x80b]
---
Predecessors: [0x7e5]
Successors: [0x80c, 0x810]
---
0x7f9 JUMPDEST
0x7fa POP
0x7fb POP
0x7fc POP
0x7fd POP
0x7fe POP
0x7ff PUSH1 0x40
0x801 MLOAD
0x802 RETURNDATASIZE
0x803 PUSH1 0x20
0x805 DUP2
0x806 LT
0x807 ISZERO
0x808 PUSH2 0x810
0x80b JUMPI
---
0x7f9: JUMPDEST 
0x7ff: V703 = 0x40
0x801: V704 = M[0x40]
0x802: V705 = RETURNDATASIZE
0x803: V706 = 0x20
0x806: V707 = LT V705 0x20
0x807: V708 = ISZERO V707
0x808: V709 = 0x810
0x80b: JUMPI 0x810 V708
---
Entry stack: [V13, 0xa0, V154, V681, 0xf088d547, V683, V685, V696]
Stack pops: 5
Stack additions: [V704, V705]
Exit stack: [V13, 0xa0, V154, V704, V705]

================================

Block 0x80c
[0x80c:0x80f]
---
Predecessors: [0x7f9]
Successors: []
---
0x80c PUSH1 0x0
0x80e DUP1
0x80f REVERT
---
0x80c: V710 = 0x0
0x80f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V154, V704, V705]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V154, V704, V705]

================================

Block 0x810
[0x810:0x814]
---
Predecessors: [0x7f9]
Successors: [0xa0]
---
0x810 JUMPDEST
0x811 POP
0x812 POP
0x813 POP
0x814 JUMP
---
0x810: JUMPDEST 
0x814: JUMP 0xa0
---
Entry stack: [V13, 0xa0, V154, V704, V705]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x815
[0x815:0x823]
---
Predecessors: [0x1d6]
Successors: [0xf6]
---
0x815 JUMPDEST
0x816 PUSH1 0x1
0x818 SLOAD
0x819 PUSH1 0x1
0x81b PUSH1 0xa0
0x81d PUSH1 0x2
0x81f EXP
0x820 SUB
0x821 AND
0x822 DUP2
0x823 JUMP
---
0x815: JUMPDEST 
0x816: V711 = 0x1
0x818: V712 = S[0x1]
0x819: V713 = 0x1
0x81b: V714 = 0xa0
0x81d: V715 = 0x2
0x81f: V716 = EXP 0x2 0xa0
0x820: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x821: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V712
0x823: JUMP 0xf6
---
Entry stack: [V13, 0xf6]
Stack pops: 1
Stack additions: [S0, V718]
Exit stack: [V13, 0xf6, V718]

================================

Block 0x824
[0x824:0x850]
---
Predecessors: []
Successors: []
---
0x824 STOP
0x825 LOG1
0x826 PUSH6 0x627a7a723058
0x82d SHA3
0x82e MISSING 0x29
0x82f MISSING 0x26
0x830 PUSH1 0x4d
0x832 MISSING 0xac
0x833 MISSING 0xe3
0x834 PUSH28 0x72421a1d67c4995cd6be434f14693bf8dc3b73397bb9c4d2380029
---
0x824: STOP 
0x825: LOG S0 S1 S2
0x826: V719 = 0x627a7a723058
0x82d: V720 = SHA3 0x627a7a723058 S3
0x82e: MISSING 0x29
0x82f: MISSING 0x26
0x830: V721 = 0x4d
0x832: MISSING 0xac
0x833: MISSING 0xe3
0x834: V722 = 0x72421a1d67c4995cd6be434f14693bf8dc3b73397bb9c4d2380029
---
Entry stack: []
Stack pops: 0
Stack additions: [V720, 0x4d, 0x72421a1d67c4995cd6be434f14693bf8dc3b73397bb9c4d2380029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0xa2
Exit block: 0xa0
Body: 0xa0, 0xa2, 0xaa, 0xae, 0x1df, 0x1f7, 0x218, 0x21f, 0x223, 0x272, 0x276, 0x281, 0x28a

Function 1:
Public function signature: 0x4311de8f
Entry block: 0xb7
Exit block: 0xa0
Body: 0xa0, 0xb7, 0xbf, 0xc3, 0x290, 0x2d1, 0x2da

Function 2:
Public function signature: 0x614baf5c
Entry block: 0xcc
Exit block: 0xa0
Body: 0xa0, 0xcc, 0xd4, 0xd8, 0x276, 0x281, 0x28a, 0x2dd, 0x2f5, 0x316, 0x31d, 0x321, 0x370

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xe1
Exit block: 0xf6
Body: 0xe1, 0xe9, 0xed, 0xf6, 0x374

Function 4:
Public function signature: 0x949e8acd
Entry block: 0x112
Exit block: 0x127
Body: 0x112, 0x11a, 0x11e, 0x127, 0x383, 0x3de, 0x3e2, 0x3ed, 0x3f6, 0x408, 0x40c

Function 5:
Public function signature: 0x9547dd5b
Entry block: 0x139
Exit block: 0xa0
Body: 0xa0, 0x139, 0x28a, 0x413, 0x42b, 0x42f, 0x43d, 0x441, 0x4a7, 0x4ab, 0x4b6, 0x4bf, 0x4d2, 0x4d6, 0x4ec, 0x521, 0x52a

Function 6:
Public function signature: 0xa9059cbb
Entry block: 0x150
Exit block: 0xa0
Body: 0xa0, 0x150, 0x158, 0x15c, 0x28a, 0x531, 0x549, 0x56a, 0x571, 0x575, 0x5e0, 0x5e4, 0x5ef, 0x5f8, 0x60a

Function 7:
Public function signature: 0xe4849b32
Entry block: 0x174
Exit block: 0xa0
Body: 0xa0, 0x174, 0x17c, 0x180, 0x52a, 0x60e, 0x626, 0x647, 0x64e, 0x652, 0x6b4, 0x6b8, 0x6c3

Function 8:
Public function signature: 0xe9fad8ee
Entry block: 0x18c
Exit block: 0xa0
Body: 0xa0, 0x18c, 0x194, 0x198, 0x276, 0x281, 0x28a, 0x6cc, 0x6e4, 0x705, 0x70c, 0x710, 0x75f

Function 9:
Public function signature: 0xee2ece60
Entry block: 0x1a1
Exit block: 0xf6
Body: 0xf6, 0x1a1, 0x1a9, 0x1ad, 0x763

Function 10:
Public function signature: 0xf088d547
Entry block: 0x1b6
Exit block: 0xa0
Body: 0xa0, 0x1b6, 0x77b, 0x7e1, 0x7e5, 0x7f0, 0x7f9, 0x80c, 0x810

Function 11:
Public function signature: 0xf6613ff5
Entry block: 0x1ca
Exit block: 0xf6
Body: 0xf6, 0x1ca, 0x1d2, 0x1d6, 0x815

Function 12:
Public fallback function
Entry block: 0xa0
Exit block: 0xa0
Body: 0xa0

