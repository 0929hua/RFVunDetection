Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x316]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6fdde03
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x316
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6fdde03
0x3b: V13 = EQ V11 0x6fdde03
0x3c: V14 = 0x316
0x3f: JUMPI 0x316 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x3a0]
---
0x40 DUP1
0x41 PUSH4 0x1d7695d9
0x46 EQ
0x47 PUSH2 0x3a0
0x4a JUMPI
---
0x41: V15 = 0x1d7695d9
0x46: V16 = EQ 0x1d7695d9 V11
0x47: V17 = 0x3a0
0x4a: JUMPI 0x3a0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x3d1]
---
0x4b DUP1
0x4c PUSH4 0x4fd205cb
0x51 EQ
0x52 PUSH2 0x3d1
0x55 JUMPI
---
0x4c: V18 = 0x4fd205cb
0x51: V19 = EQ 0x4fd205cb V11
0x52: V20 = 0x3d1
0x55: JUMPI 0x3d1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x3e6]
---
0x56 DUP1
0x57 PUSH4 0x95d89b41
0x5c EQ
0x5d PUSH2 0x3e6
0x60 JUMPI
---
0x57: V21 = 0x95d89b41
0x5c: V22 = EQ 0x95d89b41 V11
0x5d: V23 = 0x3e6
0x60: JUMPI 0x3e6 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x3fb]
---
0x61 DUP1
0x62 PUSH4 0xd2731b32
0x67 EQ
0x68 PUSH2 0x3fb
0x6b JUMPI
---
0x62: V24 = 0xd2731b32
0x67: V25 = EQ 0xd2731b32 V11
0x68: V26 = 0x3fb
0x6b: JUMPI 0x3fb V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x410]
---
0x6c DUP1
0x6d PUSH4 0xf4f3c8a4
0x72 EQ
0x73 PUSH2 0x410
0x76 JUMPI
---
0x6d: V27 = 0xf4f3c8a4
0x72: V28 = EQ 0xf4f3c8a4 V11
0x73: V29 = 0x410
0x76: JUMPI 0x410 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x89]
---
Predecessors: [0x0, 0x6c]
Successors: [0x8a, 0xf0]
---
0x77 JUMPDEST
0x78 PUSH1 0x0
0x7a DUP1
0x7b DUP1
0x7c PUSH7 0x38d7ea4c68000
0x84 CALLVALUE
0x85 GT
0x86 PUSH2 0xf0
0x89 JUMPI
---
0x77: JUMPDEST 
0x78: V30 = 0x0
0x7c: V31 = 0x38d7ea4c68000
0x84: V32 = CALLVALUE
0x85: V33 = GT V32 0x38d7ea4c68000
0x86: V34 = 0xf0
0x89: JUMPI 0xf0 V33
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0x8a
[0x8a:0xef]
---
Predecessors: [0x77]
Successors: []
---
0x8a PUSH1 0x40
0x8c DUP1
0x8d MLOAD
0x8e PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xaf DUP2
0xb0 MSTORE
0xb1 PUSH1 0x20
0xb3 PUSH1 0x4
0xb5 DUP3
0xb6 ADD
0xb7 MSTORE
0xb8 PUSH1 0xc
0xba PUSH1 0x24
0xbc DUP3
0xbd ADD
0xbe MSTORE
0xbf PUSH32 0x5350414d2050524556454e540000000000000000000000000000000000000000
0xe0 PUSH1 0x44
0xe2 DUP3
0xe3 ADD
0xe4 MSTORE
0xe5 SWAP1
0xe6 MLOAD
0xe7 SWAP1
0xe8 DUP2
0xe9 SWAP1
0xea SUB
0xeb PUSH1 0x64
0xed ADD
0xee SWAP1
0xef REVERT
---
0x8a: V35 = 0x40
0x8d: V36 = M[0x40]
0x8e: V37 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb0: M[V36] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb1: V38 = 0x20
0xb3: V39 = 0x4
0xb6: V40 = ADD V36 0x4
0xb7: M[V40] = 0x20
0xb8: V41 = 0xc
0xba: V42 = 0x24
0xbd: V43 = ADD V36 0x24
0xbe: M[V43] = 0xc
0xbf: V44 = 0x5350414d2050524556454e540000000000000000000000000000000000000000
0xe0: V45 = 0x44
0xe3: V46 = ADD V36 0x44
0xe4: M[V46] = 0x5350414d2050524556454e540000000000000000000000000000000000000000
0xe6: V47 = M[0x40]
0xea: V48 = SUB V36 V47
0xeb: V49 = 0x64
0xed: V50 = ADD 0x64 V48
0xef: REVERT V47 V50
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0]

================================

Block 0xf0
[0xf0:0x122]
---
Predecessors: [0x77]
Successors: [0x123, 0x16e]
---
0xf0 JUMPDEST
0xf1 PUSH1 0x4
0xf3 SLOAD
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 PUSH1 0x2
0xf9 CALLVALUE
0xfa DIV
0xfb SWAP5
0xfc POP
0xfd PUSH1 0x1
0xff PUSH1 0xa0
0x101 PUSH1 0x2
0x103 EXP
0x104 SUB
0x105 SWAP1
0x106 SWAP2
0x107 AND
0x108 SWAP1
0x109 PUSH3 0x249f0
0x10d SWAP1
0x10e DUP6
0x10f SWAP1
0x110 PUSH1 0x0
0x112 DUP2
0x113 DUP2
0x114 DUP2
0x115 DUP6
0x116 DUP9
0x117 DUP9
0x118 CALL
0x119 SWAP4
0x11a POP
0x11b POP
0x11c POP
0x11d POP
0x11e ISZERO
0x11f PUSH2 0x16e
0x122 JUMPI
---
0xf0: JUMPDEST 
0xf1: V51 = 0x4
0xf3: V52 = S[0x4]
0xf4: V53 = 0x40
0xf6: V54 = M[0x40]
0xf7: V55 = 0x2
0xf9: V56 = CALLVALUE
0xfa: V57 = DIV V56 0x2
0xfd: V58 = 0x1
0xff: V59 = 0xa0
0x101: V60 = 0x2
0x103: V61 = EXP 0x2 0xa0
0x104: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0x107: V63 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x109: V64 = 0x249f0
0x110: V65 = 0x0
0x118: V66 = CALL 0x249f0 V63 V57 V54 0x0 V54 0x0
0x11e: V67 = ISZERO V66
0x11f: V68 = 0x16e
0x122: JUMPI 0x16e V67
---
Entry stack: [V11, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V57, S1, S0]
Exit stack: [V11, V57, 0x0, 0x0]

================================

Block 0x123
[0x123:0x16d]
---
Predecessors: [0xf0]
Successors: [0x16e]
---
0x123 PUSH1 0x4
0x125 SLOAD
0x126 PUSH1 0x40
0x128 DUP1
0x129 MLOAD
0x12a ADDRESS
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x1
0x12f PUSH1 0xa0
0x131 PUSH1 0x2
0x133 EXP
0x134 SUB
0x135 SWAP1
0x136 SWAP3
0x137 AND
0x138 PUSH1 0x20
0x13a DUP4
0x13b ADD
0x13c MSTORE
0x13d DUP2
0x13e DUP2
0x13f ADD
0x140 DUP6
0x141 SWAP1
0x142 MSTORE
0x143 MLOAD
0x144 PUSH32 0xebe7adb4feddf2afa5de463169fdc706254a55c9cf2b930ac84bb49e28cfe6bb
0x165 SWAP2
0x166 DUP2
0x167 SWAP1
0x168 SUB
0x169 PUSH1 0x60
0x16b ADD
0x16c SWAP1
0x16d LOG1
---
0x123: V69 = 0x4
0x125: V70 = S[0x4]
0x126: V71 = 0x40
0x129: V72 = M[0x40]
0x12a: V73 = ADDRESS
0x12c: M[V72] = V73
0x12d: V74 = 0x1
0x12f: V75 = 0xa0
0x131: V76 = 0x2
0x133: V77 = EXP 0x2 0xa0
0x134: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0x137: V79 = AND V70 0xffffffffffffffffffffffffffffffffffffffff
0x138: V80 = 0x20
0x13b: V81 = ADD V72 0x20
0x13c: M[V81] = V79
0x13f: V82 = ADD 0x40 V72
0x142: M[V82] = V57
0x143: V83 = M[0x40]
0x144: V84 = 0xebe7adb4feddf2afa5de463169fdc706254a55c9cf2b930ac84bb49e28cfe6bb
0x168: V85 = SUB V72 V83
0x169: V86 = 0x60
0x16b: V87 = ADD 0x60 V85
0x16d: LOG V83 V87 0xebe7adb4feddf2afa5de463169fdc706254a55c9cf2b930ac84bb49e28cfe6bb
---
Entry stack: [V11, V57, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, V57, 0x0, 0x0]

================================

Block 0x16e
[0x16e:0x19e]
---
Predecessors: [0xf0, 0x123]
Successors: [0x19f, 0x1ea]
---
0x16e JUMPDEST
0x16f PUSH1 0x3
0x171 SLOAD
0x172 PUSH1 0x40
0x174 MLOAD
0x175 ADDRESS
0x176 BALANCE
0x177 SWAP4
0x178 POP
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 SWAP1
0x182 SWAP2
0x183 AND
0x184 SWAP1
0x185 PUSH3 0x249f0
0x189 SWAP1
0x18a DUP5
0x18b SWAP1
0x18c PUSH1 0x0
0x18e DUP2
0x18f DUP2
0x190 DUP2
0x191 DUP6
0x192 DUP9
0x193 DUP9
0x194 CALL
0x195 SWAP4
0x196 POP
0x197 POP
0x198 POP
0x199 POP
0x19a ISZERO
0x19b PUSH2 0x1ea
0x19e JUMPI
---
0x16e: JUMPDEST 
0x16f: V88 = 0x3
0x171: V89 = S[0x3]
0x172: V90 = 0x40
0x174: V91 = M[0x40]
0x175: V92 = ADDRESS
0x176: V93 = BALANCE V92
0x179: V94 = 0x1
0x17b: V95 = 0xa0
0x17d: V96 = 0x2
0x17f: V97 = EXP 0x2 0xa0
0x180: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V99 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x185: V100 = 0x249f0
0x18c: V101 = 0x0
0x194: V102 = CALL 0x249f0 V99 V93 V91 0x0 V91 0x0
0x19a: V103 = ISZERO V102
0x19b: V104 = 0x1ea
0x19e: JUMPI 0x1ea V103
---
Entry stack: [V11, V57, 0x0, 0x0]
Stack pops: 2
Stack additions: [V93, S0]
Exit stack: [V11, V57, V93, 0x0]

================================

Block 0x19f
[0x19f:0x1e9]
---
Predecessors: [0x16e]
Successors: [0x1ea]
---
0x19f PUSH1 0x3
0x1a1 SLOAD
0x1a2 PUSH1 0x40
0x1a4 DUP1
0x1a5 MLOAD
0x1a6 ADDRESS
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x1
0x1ab PUSH1 0xa0
0x1ad PUSH1 0x2
0x1af EXP
0x1b0 SUB
0x1b1 SWAP1
0x1b2 SWAP3
0x1b3 AND
0x1b4 PUSH1 0x20
0x1b6 DUP4
0x1b7 ADD
0x1b8 MSTORE
0x1b9 DUP2
0x1ba DUP2
0x1bb ADD
0x1bc DUP5
0x1bd SWAP1
0x1be MSTORE
0x1bf MLOAD
0x1c0 PUSH32 0xebe7adb4feddf2afa5de463169fdc706254a55c9cf2b930ac84bb49e28cfe6bb
0x1e1 SWAP2
0x1e2 DUP2
0x1e3 SWAP1
0x1e4 SUB
0x1e5 PUSH1 0x60
0x1e7 ADD
0x1e8 SWAP1
0x1e9 LOG1
---
0x19f: V105 = 0x3
0x1a1: V106 = S[0x3]
0x1a2: V107 = 0x40
0x1a5: V108 = M[0x40]
0x1a6: V109 = ADDRESS
0x1a8: M[V108] = V109
0x1a9: V110 = 0x1
0x1ab: V111 = 0xa0
0x1ad: V112 = 0x2
0x1af: V113 = EXP 0x2 0xa0
0x1b0: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b3: V115 = AND V106 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V116 = 0x20
0x1b7: V117 = ADD V108 0x20
0x1b8: M[V117] = V115
0x1bb: V118 = ADD 0x40 V108
0x1be: M[V118] = V93
0x1bf: V119 = M[0x40]
0x1c0: V120 = 0xebe7adb4feddf2afa5de463169fdc706254a55c9cf2b930ac84bb49e28cfe6bb
0x1e4: V121 = SUB V108 V119
0x1e5: V122 = 0x60
0x1e7: V123 = ADD 0x60 V121
0x1e9: LOG V119 V123 0xebe7adb4feddf2afa5de463169fdc706254a55c9cf2b930ac84bb49e28cfe6bb
---
Entry stack: [V11, V57, V93, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, V57, V93, 0x0]

================================

Block 0x1ea
[0x1ea:0x24b]
---
Predecessors: [0x16e, 0x19f]
Successors: [0x24c, 0x250]
---
0x1ea JUMPDEST
0x1eb PUSH1 0x5
0x1ed SLOAD
0x1ee PUSH1 0x40
0x1f0 DUP1
0x1f1 MLOAD
0x1f2 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x213 DUP2
0x214 MSTORE
0x215 ADDRESS
0x216 PUSH1 0x4
0x218 DUP3
0x219 ADD
0x21a MSTORE
0x21b SWAP1
0x21c MLOAD
0x21d PUSH1 0x1
0x21f PUSH1 0xa0
0x221 PUSH1 0x2
0x223 EXP
0x224 SUB
0x225 SWAP1
0x226 SWAP3
0x227 AND
0x228 SWAP2
0x229 PUSH4 0x70a08231
0x22e SWAP2
0x22f PUSH1 0x24
0x231 DUP1
0x232 DUP3
0x233 ADD
0x234 SWAP3
0x235 PUSH1 0x20
0x237 SWAP3
0x238 SWAP1
0x239 SWAP2
0x23a SWAP1
0x23b DUP3
0x23c SWAP1
0x23d SUB
0x23e ADD
0x23f DUP2
0x240 PUSH1 0x0
0x242 DUP8
0x243 DUP1
0x244 EXTCODESIZE
0x245 ISZERO
0x246 DUP1
0x247 ISZERO
0x248 PUSH2 0x250
0x24b JUMPI
---
0x1ea: JUMPDEST 
0x1eb: V124 = 0x5
0x1ed: V125 = S[0x5]
0x1ee: V126 = 0x40
0x1f1: V127 = M[0x40]
0x1f2: V128 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x214: M[V127] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x215: V129 = ADDRESS
0x216: V130 = 0x4
0x219: V131 = ADD V127 0x4
0x21a: M[V131] = V129
0x21c: V132 = M[0x40]
0x21d: V133 = 0x1
0x21f: V134 = 0xa0
0x221: V135 = 0x2
0x223: V136 = EXP 0x2 0xa0
0x224: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V138 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x229: V139 = 0x70a08231
0x22f: V140 = 0x24
0x233: V141 = ADD V127 0x24
0x235: V142 = 0x20
0x23d: V143 = SUB V127 V132
0x23e: V144 = ADD V143 0x24
0x240: V145 = 0x0
0x244: V146 = EXTCODESIZE V138
0x245: V147 = ISZERO V146
0x247: V148 = ISZERO V147
0x248: V149 = 0x250
0x24b: JUMPI 0x250 V148
---
Entry stack: [V11, V57, V93, 0x0]
Stack pops: 0
Stack additions: [V138, 0x70a08231, V141, 0x20, V132, V144, V132, 0x0, V138, V147]
Exit stack: [V11, V57, V93, 0x0, V138, 0x70a08231, V141, 0x20, V132, V144, V132, 0x0, V138, V147]

================================

Block 0x24c
[0x24c:0x24f]
---
Predecessors: [0x1ea]
Successors: []
---
0x24c PUSH1 0x0
0x24e DUP1
0x24f REVERT
---
0x24c: V150 = 0x0
0x24f: REVERT 0x0 0x0
---
Entry stack: [V11, V57, V93, 0x0, V138, 0x70a08231, V141, 0x20, V132, V144, V132, 0x0, V138, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57, V93, 0x0, V138, 0x70a08231, V141, 0x20, V132, V144, V132, 0x0, V138, V147]

================================

Block 0x250
[0x250:0x25a]
---
Predecessors: [0x1ea]
Successors: [0x25b, 0x264]
---
0x250 JUMPDEST
0x251 POP
0x252 GAS
0x253 CALL
0x254 ISZERO
0x255 DUP1
0x256 ISZERO
0x257 PUSH2 0x264
0x25a JUMPI
---
0x250: JUMPDEST 
0x252: V151 = GAS
0x253: V152 = CALL V151 V138 0x0 V132 V144 V132 0x20
0x254: V153 = ISZERO V152
0x256: V154 = ISZERO V153
0x257: V155 = 0x264
0x25a: JUMPI 0x264 V154
---
Entry stack: [V11, V57, V93, 0x0, V138, 0x70a08231, V141, 0x20, V132, V144, V132, 0x0, V138, V147]
Stack pops: 7
Stack additions: [V153]
Exit stack: [V11, V57, V93, 0x0, V138, 0x70a08231, V141, V153]

================================

Block 0x25b
[0x25b:0x263]
---
Predecessors: [0x250]
Successors: []
---
0x25b RETURNDATASIZE
0x25c PUSH1 0x0
0x25e DUP1
0x25f RETURNDATACOPY
0x260 RETURNDATASIZE
0x261 PUSH1 0x0
0x263 REVERT
---
0x25b: V156 = RETURNDATASIZE
0x25c: V157 = 0x0
0x25f: RETURNDATACOPY 0x0 0x0 V156
0x260: V158 = RETURNDATASIZE
0x261: V159 = 0x0
0x263: REVERT 0x0 V158
---
Entry stack: [V11, V57, V93, 0x0, V138, 0x70a08231, V141, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57, V93, 0x0, V138, 0x70a08231, V141, V153]

================================

Block 0x264
[0x264:0x275]
---
Predecessors: [0x250]
Successors: [0x276, 0x27a]
---
0x264 JUMPDEST
0x265 POP
0x266 POP
0x267 POP
0x268 POP
0x269 PUSH1 0x40
0x26b MLOAD
0x26c RETURNDATASIZE
0x26d PUSH1 0x20
0x26f DUP2
0x270 LT
0x271 ISZERO
0x272 PUSH2 0x27a
0x275 JUMPI
---
0x264: JUMPDEST 
0x269: V160 = 0x40
0x26b: V161 = M[0x40]
0x26c: V162 = RETURNDATASIZE
0x26d: V163 = 0x20
0x270: V164 = LT V162 0x20
0x271: V165 = ISZERO V164
0x272: V166 = 0x27a
0x275: JUMPI 0x27a V165
---
Entry stack: [V11, V57, V93, 0x0, V138, 0x70a08231, V141, V153]
Stack pops: 4
Stack additions: [V161, V162]
Exit stack: [V11, V57, V93, 0x0, V161, V162]

================================

Block 0x276
[0x276:0x279]
---
Predecessors: [0x264]
Successors: []
---
0x276 PUSH1 0x0
0x278 DUP1
0x279 REVERT
---
0x276: V167 = 0x0
0x279: REVERT 0x0 0x0
---
Entry stack: [V11, V57, V93, 0x0, V161, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57, V93, 0x0, V161, V162]

================================

Block 0x27a
[0x27a:0x287]
---
Predecessors: [0x264]
Successors: [0x288, 0x311]
---
0x27a JUMPDEST
0x27b POP
0x27c MLOAD
0x27d SWAP1
0x27e POP
0x27f PUSH1 0x0
0x281 DUP2
0x282 GT
0x283 ISZERO
0x284 PUSH2 0x311
0x287 JUMPI
---
0x27a: JUMPDEST 
0x27c: V168 = M[V161]
0x27f: V169 = 0x0
0x282: V170 = GT V168 0x0
0x283: V171 = ISZERO V170
0x284: V172 = 0x311
0x287: JUMPI 0x311 V171
---
Entry stack: [V11, V57, V93, 0x0, V161, V162]
Stack pops: 3
Stack additions: [V168]
Exit stack: [V11, V57, V93, V168]

================================

Block 0x288
[0x288:0x2f3]
---
Predecessors: [0x27a]
Successors: [0x2f4, 0x2f8]
---
0x288 PUSH1 0x5
0x28a SLOAD
0x28b PUSH1 0x3
0x28d SLOAD
0x28e PUSH1 0x40
0x290 DUP1
0x291 MLOAD
0x292 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2b3 DUP2
0x2b4 MSTORE
0x2b5 PUSH1 0x1
0x2b7 PUSH1 0xa0
0x2b9 PUSH1 0x2
0x2bb EXP
0x2bc SUB
0x2bd SWAP3
0x2be DUP4
0x2bf AND
0x2c0 PUSH1 0x4
0x2c2 DUP3
0x2c3 ADD
0x2c4 MSTORE
0x2c5 PUSH1 0x24
0x2c7 DUP2
0x2c8 ADD
0x2c9 DUP6
0x2ca SWAP1
0x2cb MSTORE
0x2cc SWAP1
0x2cd MLOAD
0x2ce SWAP2
0x2cf SWAP1
0x2d0 SWAP3
0x2d1 AND
0x2d2 SWAP2
0x2d3 PUSH4 0xa9059cbb
0x2d8 SWAP2
0x2d9 PUSH1 0x44
0x2db DUP1
0x2dc DUP4
0x2dd ADD
0x2de SWAP3
0x2df PUSH1 0x0
0x2e1 SWAP3
0x2e2 SWAP2
0x2e3 SWAP1
0x2e4 DUP3
0x2e5 SWAP1
0x2e6 SUB
0x2e7 ADD
0x2e8 DUP2
0x2e9 DUP4
0x2ea DUP8
0x2eb DUP1
0x2ec EXTCODESIZE
0x2ed ISZERO
0x2ee DUP1
0x2ef ISZERO
0x2f0 PUSH2 0x2f8
0x2f3 JUMPI
---
0x288: V173 = 0x5
0x28a: V174 = S[0x5]
0x28b: V175 = 0x3
0x28d: V176 = S[0x3]
0x28e: V177 = 0x40
0x291: V178 = M[0x40]
0x292: V179 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2b4: M[V178] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2b5: V180 = 0x1
0x2b7: V181 = 0xa0
0x2b9: V182 = 0x2
0x2bb: V183 = EXP 0x2 0xa0
0x2bc: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bf: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x2c0: V186 = 0x4
0x2c3: V187 = ADD V178 0x4
0x2c4: M[V187] = V185
0x2c5: V188 = 0x24
0x2c8: V189 = ADD V178 0x24
0x2cb: M[V189] = V168
0x2cd: V190 = M[0x40]
0x2d1: V191 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V192 = 0xa9059cbb
0x2d9: V193 = 0x44
0x2dd: V194 = ADD V178 0x44
0x2df: V195 = 0x0
0x2e6: V196 = SUB V178 V190
0x2e7: V197 = ADD V196 0x44
0x2ec: V198 = EXTCODESIZE V191
0x2ed: V199 = ISZERO V198
0x2ef: V200 = ISZERO V199
0x2f0: V201 = 0x2f8
0x2f3: JUMPI 0x2f8 V200
---
Entry stack: [V11, V57, V93, V168]
Stack pops: 1
Stack additions: [S0, V191, 0xa9059cbb, V194, 0x0, V190, V197, V190, 0x0, V191, V199]
Exit stack: [V11, V57, V93, V168, V191, 0xa9059cbb, V194, 0x0, V190, V197, V190, 0x0, V191, V199]

================================

Block 0x2f4
[0x2f4:0x2f7]
---
Predecessors: [0x288]
Successors: []
---
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 REVERT
---
0x2f4: V202 = 0x0
0x2f7: REVERT 0x0 0x0
---
Entry stack: [V11, V57, V93, V168, V191, 0xa9059cbb, V194, 0x0, V190, V197, V190, 0x0, V191, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57, V93, V168, V191, 0xa9059cbb, V194, 0x0, V190, V197, V190, 0x0, V191, V199]

================================

Block 0x2f8
[0x2f8:0x302]
---
Predecessors: [0x288]
Successors: [0x303, 0x30c]
---
0x2f8 JUMPDEST
0x2f9 POP
0x2fa GAS
0x2fb CALL
0x2fc ISZERO
0x2fd DUP1
0x2fe ISZERO
0x2ff PUSH2 0x30c
0x302 JUMPI
---
0x2f8: JUMPDEST 
0x2fa: V203 = GAS
0x2fb: V204 = CALL V203 V191 0x0 V190 V197 V190 0x0
0x2fc: V205 = ISZERO V204
0x2fe: V206 = ISZERO V205
0x2ff: V207 = 0x30c
0x302: JUMPI 0x30c V206
---
Entry stack: [V11, V57, V93, V168, V191, 0xa9059cbb, V194, 0x0, V190, V197, V190, 0x0, V191, V199]
Stack pops: 7
Stack additions: [V205]
Exit stack: [V11, V57, V93, V168, V191, 0xa9059cbb, V194, V205]

================================

Block 0x303
[0x303:0x30b]
---
Predecessors: [0x2f8]
Successors: []
---
0x303 RETURNDATASIZE
0x304 PUSH1 0x0
0x306 DUP1
0x307 RETURNDATACOPY
0x308 RETURNDATASIZE
0x309 PUSH1 0x0
0x30b REVERT
---
0x303: V208 = RETURNDATASIZE
0x304: V209 = 0x0
0x307: RETURNDATACOPY 0x0 0x0 V208
0x308: V210 = RETURNDATASIZE
0x309: V211 = 0x0
0x30b: REVERT 0x0 V210
---
Entry stack: [V11, V57, V93, V168, V191, 0xa9059cbb, V194, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57, V93, V168, V191, 0xa9059cbb, V194, V205]

================================

Block 0x30c
[0x30c:0x310]
---
Predecessors: [0x2f8]
Successors: [0x311]
---
0x30c JUMPDEST
0x30d POP
0x30e POP
0x30f POP
0x310 POP
---
0x30c: JUMPDEST 
---
Entry stack: [V11, V57, V93, V168, V191, 0xa9059cbb, V194, V205]
Stack pops: 4
Stack additions: []
Exit stack: [V11, V57, V93, V168]

================================

Block 0x311
[0x311:0x315]
---
Predecessors: [0x27a, 0x30c]
Successors: []
---
0x311 JUMPDEST
0x312 POP
0x313 POP
0x314 POP
0x315 STOP
---
0x311: JUMPDEST 
0x315: STOP 
---
Entry stack: [V11, V57, V93, V168]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x316
[0x316:0x31d]
---
Predecessors: [0xd]
Successors: [0x31e, 0x322]
---
0x316 JUMPDEST
0x317 CALLVALUE
0x318 DUP1
0x319 ISZERO
0x31a PUSH2 0x322
0x31d JUMPI
---
0x316: JUMPDEST 
0x317: V212 = CALLVALUE
0x319: V213 = ISZERO V212
0x31a: V214 = 0x322
0x31d: JUMPI 0x322 V213
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V212]
Exit stack: [V11, V212]

================================

Block 0x31e
[0x31e:0x321]
---
Predecessors: [0x316]
Successors: []
---
0x31e PUSH1 0x0
0x320 DUP1
0x321 REVERT
---
0x31e: V215 = 0x0
0x321: REVERT 0x0 0x0
---
Entry stack: [V11, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V212]

================================

Block 0x322
[0x322:0x32a]
---
Predecessors: [0x316]
Successors: [0x425]
---
0x322 JUMPDEST
0x323 POP
0x324 PUSH2 0x32b
0x327 PUSH2 0x425
0x32a JUMP
---
0x322: JUMPDEST 
0x324: V216 = 0x32b
0x327: V217 = 0x425
0x32a: JUMP 0x425
---
Entry stack: [V11, V212]
Stack pops: 1
Stack additions: [0x32b]
Exit stack: [V11, 0x32b]

================================

Block 0x32b
[0x32b:0x34c]
---
Predecessors: [0x4ab]
Successors: [0x34d]
---
0x32b JUMPDEST
0x32c PUSH1 0x40
0x32e DUP1
0x32f MLOAD
0x330 PUSH1 0x20
0x332 DUP1
0x333 DUP3
0x334 MSTORE
0x335 DUP4
0x336 MLOAD
0x337 DUP2
0x338 DUP4
0x339 ADD
0x33a MSTORE
0x33b DUP4
0x33c MLOAD
0x33d SWAP2
0x33e SWAP3
0x33f DUP4
0x340 SWAP3
0x341 SWAP1
0x342 DUP4
0x343 ADD
0x344 SWAP2
0x345 DUP6
0x346 ADD
0x347 SWAP1
0x348 DUP1
0x349 DUP4
0x34a DUP4
0x34b PUSH1 0x0
---
0x32b: JUMPDEST 
0x32c: V218 = 0x40
0x32f: V219 = M[0x40]
0x330: V220 = 0x20
0x334: M[V219] = 0x20
0x336: V221 = M[S0]
0x339: V222 = ADD V219 0x20
0x33a: M[V222] = V221
0x33c: V223 = M[S0]
0x343: V224 = ADD V219 0x40
0x346: V225 = ADD S0 0x20
0x34b: V226 = 0x0
---
Entry stack: [V11, 0x32b, S0]
Stack pops: 1
Stack additions: [S0, V219, V219, V224, V225, V223, V223, V224, V225, 0x0]
Exit stack: [V11, 0x32b, S0, V219, V219, V224, V225, V223, V223, V224, V225, 0x0]

================================

Block 0x34d
[0x34d:0x355]
---
Predecessors: [0x32b, 0x356]
Successors: [0x356, 0x365]
---
0x34d JUMPDEST
0x34e DUP4
0x34f DUP2
0x350 LT
0x351 ISZERO
0x352 PUSH2 0x365
0x355 JUMPI
---
0x34d: JUMPDEST 
0x350: V227 = LT S0 V223
0x351: V228 = ISZERO V227
0x352: V229 = 0x365
0x355: JUMPI 0x365 V228
---
Entry stack: [V11, 0x32b, S9, V219, V219, V224, V225, V223, V223, V224, V225, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x32b, S9, V219, V219, V224, V225, V223, V223, V224, V225, S0]

================================

Block 0x356
[0x356:0x364]
---
Predecessors: [0x34d]
Successors: [0x34d]
---
0x356 DUP2
0x357 DUP2
0x358 ADD
0x359 MLOAD
0x35a DUP4
0x35b DUP3
0x35c ADD
0x35d MSTORE
0x35e PUSH1 0x20
0x360 ADD
0x361 PUSH2 0x34d
0x364 JUMP
---
0x358: V230 = ADD S0 V225
0x359: V231 = M[V230]
0x35c: V232 = ADD S0 V224
0x35d: M[V232] = V231
0x35e: V233 = 0x20
0x360: V234 = ADD 0x20 S0
0x361: V235 = 0x34d
0x364: JUMP 0x34d
---
Entry stack: [V11, 0x32b, S9, V219, V219, V224, V225, V223, V223, V224, V225, S0]
Stack pops: 3
Stack additions: [S2, S1, V234]
Exit stack: [V11, 0x32b, S9, V219, V219, V224, V225, V223, V223, V224, V225, V234]

================================

Block 0x365
[0x365:0x378]
---
Predecessors: [0x34d]
Successors: [0x379, 0x392]
---
0x365 JUMPDEST
0x366 POP
0x367 POP
0x368 POP
0x369 POP
0x36a SWAP1
0x36b POP
0x36c SWAP1
0x36d DUP2
0x36e ADD
0x36f SWAP1
0x370 PUSH1 0x1f
0x372 AND
0x373 DUP1
0x374 ISZERO
0x375 PUSH2 0x392
0x378 JUMPI
---
0x365: JUMPDEST 
0x36e: V236 = ADD V223 V224
0x370: V237 = 0x1f
0x372: V238 = AND 0x1f V223
0x374: V239 = ISZERO V238
0x375: V240 = 0x392
0x378: JUMPI 0x392 V239
---
Entry stack: [V11, 0x32b, S9, V219, V219, V224, V225, V223, V223, V224, V225, S0]
Stack pops: 7
Stack additions: [V236, V238]
Exit stack: [V11, 0x32b, S9, V219, V219, V236, V238]

================================

Block 0x379
[0x379:0x391]
---
Predecessors: [0x365]
Successors: [0x392]
---
0x379 DUP1
0x37a DUP3
0x37b SUB
0x37c DUP1
0x37d MLOAD
0x37e PUSH1 0x1
0x380 DUP4
0x381 PUSH1 0x20
0x383 SUB
0x384 PUSH2 0x100
0x387 EXP
0x388 SUB
0x389 NOT
0x38a AND
0x38b DUP2
0x38c MSTORE
0x38d PUSH1 0x20
0x38f ADD
0x390 SWAP2
0x391 POP
---
0x37b: V241 = SUB V236 V238
0x37d: V242 = M[V241]
0x37e: V243 = 0x1
0x381: V244 = 0x20
0x383: V245 = SUB 0x20 V238
0x384: V246 = 0x100
0x387: V247 = EXP 0x100 V245
0x388: V248 = SUB V247 0x1
0x389: V249 = NOT V248
0x38a: V250 = AND V249 V242
0x38c: M[V241] = V250
0x38d: V251 = 0x20
0x38f: V252 = ADD 0x20 V241
---
Entry stack: [V11, 0x32b, S4, V219, V219, V236, V238]
Stack pops: 2
Stack additions: [V252, S0]
Exit stack: [V11, 0x32b, S4, V219, V219, V252, V238]

================================

Block 0x392
[0x392:0x39f]
---
Predecessors: [0x365, 0x379]
Successors: []
---
0x392 JUMPDEST
0x393 POP
0x394 SWAP3
0x395 POP
0x396 POP
0x397 POP
0x398 PUSH1 0x40
0x39a MLOAD
0x39b DUP1
0x39c SWAP2
0x39d SUB
0x39e SWAP1
0x39f RETURN
---
0x392: JUMPDEST 
0x398: V253 = 0x40
0x39a: V254 = M[0x40]
0x39d: V255 = SUB S1 V254
0x39f: RETURN V254 V255
---
Entry stack: [V11, 0x32b, S4, V219, V219, S1, V238]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x32b]

================================

Block 0x3a0
[0x3a0:0x3a7]
---
Predecessors: [0x40]
Successors: [0x3a8, 0x3ac]
---
0x3a0 JUMPDEST
0x3a1 CALLVALUE
0x3a2 DUP1
0x3a3 ISZERO
0x3a4 PUSH2 0x3ac
0x3a7 JUMPI
---
0x3a0: JUMPDEST 
0x3a1: V256 = CALLVALUE
0x3a3: V257 = ISZERO V256
0x3a4: V258 = 0x3ac
0x3a7: JUMPI 0x3ac V257
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V256]
Exit stack: [V11, V256]

================================

Block 0x3a8
[0x3a8:0x3ab]
---
Predecessors: [0x3a0]
Successors: []
---
0x3a8 PUSH1 0x0
0x3aa DUP1
0x3ab REVERT
---
0x3a8: V259 = 0x0
0x3ab: REVERT 0x0 0x0
---
Entry stack: [V11, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V256]

================================

Block 0x3ac
[0x3ac:0x3b4]
---
Predecessors: [0x3a0]
Successors: [0x4b3]
---
0x3ac JUMPDEST
0x3ad POP
0x3ae PUSH2 0x3b5
0x3b1 PUSH2 0x4b3
0x3b4 JUMP
---
0x3ac: JUMPDEST 
0x3ae: V260 = 0x3b5
0x3b1: V261 = 0x4b3
0x3b4: JUMP 0x4b3
---
Entry stack: [V11, V256]
Stack pops: 1
Stack additions: [0x3b5]
Exit stack: [V11, 0x3b5]

================================

Block 0x3b5
[0x3b5:0x3d0]
---
Predecessors: [0x4b3, 0x4c2, 0x52b]
Successors: []
---
0x3b5 JUMPDEST
0x3b6 PUSH1 0x40
0x3b8 DUP1
0x3b9 MLOAD
0x3ba PUSH1 0x1
0x3bc PUSH1 0xa0
0x3be PUSH1 0x2
0x3c0 EXP
0x3c1 SUB
0x3c2 SWAP1
0x3c3 SWAP3
0x3c4 AND
0x3c5 DUP3
0x3c6 MSTORE
0x3c7 MLOAD
0x3c8 SWAP1
0x3c9 DUP2
0x3ca SWAP1
0x3cb SUB
0x3cc PUSH1 0x20
0x3ce ADD
0x3cf SWAP1
0x3d0 RETURN
---
0x3b5: JUMPDEST 
0x3b6: V262 = 0x40
0x3b9: V263 = M[0x40]
0x3ba: V264 = 0x1
0x3bc: V265 = 0xa0
0x3be: V266 = 0x2
0x3c0: V267 = EXP 0x2 0xa0
0x3c1: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c4: V269 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: M[V263] = V269
0x3c7: V270 = M[0x40]
0x3cb: V271 = SUB V263 V270
0x3cc: V272 = 0x20
0x3ce: V273 = ADD 0x20 V271
0x3d0: RETURN V270 V273
---
Entry stack: [V11, 0x3b5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3b5]

================================

Block 0x3d1
[0x3d1:0x3d8]
---
Predecessors: [0x4b]
Successors: [0x3d9, 0x3dd]
---
0x3d1 JUMPDEST
0x3d2 CALLVALUE
0x3d3 DUP1
0x3d4 ISZERO
0x3d5 PUSH2 0x3dd
0x3d8 JUMPI
---
0x3d1: JUMPDEST 
0x3d2: V274 = CALLVALUE
0x3d4: V275 = ISZERO V274
0x3d5: V276 = 0x3dd
0x3d8: JUMPI 0x3dd V275
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V274]
Exit stack: [V11, V274]

================================

Block 0x3d9
[0x3d9:0x3dc]
---
Predecessors: [0x3d1]
Successors: []
---
0x3d9 PUSH1 0x0
0x3db DUP1
0x3dc REVERT
---
0x3d9: V277 = 0x0
0x3dc: REVERT 0x0 0x0
---
Entry stack: [V11, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V274]

================================

Block 0x3dd
[0x3dd:0x3e5]
---
Predecessors: [0x3d1]
Successors: [0x4c2]
---
0x3dd JUMPDEST
0x3de POP
0x3df PUSH2 0x3b5
0x3e2 PUSH2 0x4c2
0x3e5 JUMP
---
0x3dd: JUMPDEST 
0x3df: V278 = 0x3b5
0x3e2: V279 = 0x4c2
0x3e5: JUMP 0x4c2
---
Entry stack: [V11, V274]
Stack pops: 1
Stack additions: [0x3b5]
Exit stack: [V11, 0x3b5]

================================

Block 0x3e6
[0x3e6:0x3ed]
---
Predecessors: [0x56]
Successors: [0x3ee, 0x3f2]
---
0x3e6 JUMPDEST
0x3e7 CALLVALUE
0x3e8 DUP1
0x3e9 ISZERO
0x3ea PUSH2 0x3f2
0x3ed JUMPI
---
0x3e6: JUMPDEST 
0x3e7: V280 = CALLVALUE
0x3e9: V281 = ISZERO V280
0x3ea: V282 = 0x3f2
0x3ed: JUMPI 0x3f2 V281
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V280]
Exit stack: [V11, V280]

================================

Block 0x3ee
[0x3ee:0x3f1]
---
Predecessors: [0x3e6]
Successors: []
---
0x3ee PUSH1 0x0
0x3f0 DUP1
0x3f1 REVERT
---
0x3ee: V283 = 0x0
0x3f1: REVERT 0x0 0x0
---
Entry stack: [V11, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V280]

================================

Block 0x3f2
[0x3f2:0x3fa]
---
Predecessors: [0x3e6]
Successors: [0x4d1]
---
0x3f2 JUMPDEST
0x3f3 POP
0x3f4 PUSH2 0x32b
0x3f7 PUSH2 0x4d1
0x3fa JUMP
---
0x3f2: JUMPDEST 
0x3f4: V284 = 0x32b
0x3f7: V285 = 0x4d1
0x3fa: JUMP 0x4d1
---
Entry stack: [V11, V280]
Stack pops: 1
Stack additions: [0x32b]
Exit stack: [V11, 0x32b]

================================

Block 0x3fb
[0x3fb:0x402]
---
Predecessors: [0x61]
Successors: [0x403, 0x407]
---
0x3fb JUMPDEST
0x3fc CALLVALUE
0x3fd DUP1
0x3fe ISZERO
0x3ff PUSH2 0x407
0x402 JUMPI
---
0x3fb: JUMPDEST 
0x3fc: V286 = CALLVALUE
0x3fe: V287 = ISZERO V286
0x3ff: V288 = 0x407
0x402: JUMPI 0x407 V287
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V286]
Exit stack: [V11, V286]

================================

Block 0x403
[0x403:0x406]
---
Predecessors: [0x3fb]
Successors: []
---
0x403 PUSH1 0x0
0x405 DUP1
0x406 REVERT
---
0x403: V289 = 0x0
0x406: REVERT 0x0 0x0
---
Entry stack: [V11, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V286]

================================

Block 0x407
[0x407:0x40f]
---
Predecessors: [0x3fb]
Successors: [0x52b]
---
0x407 JUMPDEST
0x408 POP
0x409 PUSH2 0x3b5
0x40c PUSH2 0x52b
0x40f JUMP
---
0x407: JUMPDEST 
0x409: V290 = 0x3b5
0x40c: V291 = 0x52b
0x40f: JUMP 0x52b
---
Entry stack: [V11, V286]
Stack pops: 1
Stack additions: [0x3b5]
Exit stack: [V11, 0x3b5]

================================

Block 0x410
[0x410:0x417]
---
Predecessors: [0x6c]
Successors: [0x418, 0x41c]
---
0x410 JUMPDEST
0x411 CALLVALUE
0x412 DUP1
0x413 ISZERO
0x414 PUSH2 0x41c
0x417 JUMPI
---
0x410: JUMPDEST 
0x411: V292 = CALLVALUE
0x413: V293 = ISZERO V292
0x414: V294 = 0x41c
0x417: JUMPI 0x41c V293
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V292]
Exit stack: [V11, V292]

================================

Block 0x418
[0x418:0x41b]
---
Predecessors: [0x410]
Successors: []
---
0x418 PUSH1 0x0
0x41a DUP1
0x41b REVERT
---
0x418: V295 = 0x0
0x41b: REVERT 0x0 0x0
---
Entry stack: [V11, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V292]

================================

Block 0x41c
[0x41c:0x424]
---
Predecessors: [0x410]
Successors: [0x53a]
---
0x41c JUMPDEST
0x41d POP
0x41e PUSH2 0x32b
0x421 PUSH2 0x53a
0x424 JUMP
---
0x41c: JUMPDEST 
0x41e: V296 = 0x32b
0x421: V297 = 0x53a
0x424: JUMP 0x53a
---
Entry stack: [V11, V292]
Stack pops: 1
Stack additions: [0x32b]
Exit stack: [V11, 0x32b]

================================

Block 0x425
[0x425:0x464]
---
Predecessors: [0x322]
Successors: [0x465, 0x4ab]
---
0x425 JUMPDEST
0x426 PUSH1 0x0
0x428 DUP1
0x429 SLOAD
0x42a PUSH1 0x40
0x42c DUP1
0x42d MLOAD
0x42e PUSH1 0x20
0x430 PUSH1 0x2
0x432 PUSH1 0x1
0x434 DUP6
0x435 AND
0x436 ISZERO
0x437 PUSH2 0x100
0x43a MUL
0x43b PUSH1 0x0
0x43d NOT
0x43e ADD
0x43f SWAP1
0x440 SWAP5
0x441 AND
0x442 SWAP4
0x443 SWAP1
0x444 SWAP4
0x445 DIV
0x446 PUSH1 0x1f
0x448 DUP2
0x449 ADD
0x44a DUP5
0x44b SWAP1
0x44c DIV
0x44d DUP5
0x44e MUL
0x44f DUP3
0x450 ADD
0x451 DUP5
0x452 ADD
0x453 SWAP1
0x454 SWAP3
0x455 MSTORE
0x456 DUP2
0x457 DUP2
0x458 MSTORE
0x459 SWAP3
0x45a SWAP2
0x45b DUP4
0x45c ADD
0x45d DUP3
0x45e DUP3
0x45f DUP1
0x460 ISZERO
0x461 PUSH2 0x4ab
0x464 JUMPI
---
0x425: JUMPDEST 
0x426: V298 = 0x0
0x429: V299 = S[0x0]
0x42a: V300 = 0x40
0x42d: V301 = M[0x40]
0x42e: V302 = 0x20
0x430: V303 = 0x2
0x432: V304 = 0x1
0x435: V305 = AND V299 0x1
0x436: V306 = ISZERO V305
0x437: V307 = 0x100
0x43a: V308 = MUL 0x100 V306
0x43b: V309 = 0x0
0x43d: V310 = NOT 0x0
0x43e: V311 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V308
0x441: V312 = AND V299 V311
0x445: V313 = DIV V312 0x2
0x446: V314 = 0x1f
0x449: V315 = ADD V313 0x1f
0x44c: V316 = DIV V315 0x20
0x44e: V317 = MUL 0x20 V316
0x450: V318 = ADD V301 V317
0x452: V319 = ADD 0x20 V318
0x455: M[0x40] = V319
0x458: M[V301] = V313
0x45c: V320 = ADD V301 0x20
0x460: V321 = ISZERO V313
0x461: V322 = 0x4ab
0x464: JUMPI 0x4ab V321
---
Entry stack: [V11, 0x32b]
Stack pops: 0
Stack additions: [V301, 0x0, V313, V320, 0x0, V313]
Exit stack: [V11, 0x32b, V301, 0x0, V313, V320, 0x0, V313]

================================

Block 0x465
[0x465:0x46c]
---
Predecessors: [0x425]
Successors: [0x46d, 0x480]
---
0x465 DUP1
0x466 PUSH1 0x1f
0x468 LT
0x469 PUSH2 0x480
0x46c JUMPI
---
0x466: V323 = 0x1f
0x468: V324 = LT 0x1f V313
0x469: V325 = 0x480
0x46c: JUMPI 0x480 V324
---
Entry stack: [V11, 0x32b, V301, 0x0, V313, V320, 0x0, V313]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x32b, V301, 0x0, V313, V320, 0x0, V313]

================================

Block 0x46d
[0x46d:0x47f]
---
Predecessors: [0x465]
Successors: [0x4ab]
---
0x46d PUSH2 0x100
0x470 DUP1
0x471 DUP4
0x472 SLOAD
0x473 DIV
0x474 MUL
0x475 DUP4
0x476 MSTORE
0x477 SWAP2
0x478 PUSH1 0x20
0x47a ADD
0x47b SWAP2
0x47c PUSH2 0x4ab
0x47f JUMP
---
0x46d: V326 = 0x100
0x472: V327 = S[0x0]
0x473: V328 = DIV V327 0x100
0x474: V329 = MUL V328 0x100
0x476: M[V320] = V329
0x478: V330 = 0x20
0x47a: V331 = ADD 0x20 V320
0x47c: V332 = 0x4ab
0x47f: JUMP 0x4ab
---
Entry stack: [V11, 0x32b, V301, 0x0, V313, V320, 0x0, V313]
Stack pops: 3
Stack additions: [V331, S1, S0]
Exit stack: [V11, 0x32b, V301, 0x0, V313, V331, 0x0, V313]

================================

Block 0x480
[0x480:0x48d]
---
Predecessors: [0x465, 0x510, 0x577]
Successors: [0x48e]
---
0x480 JUMPDEST
0x481 DUP3
0x482 ADD
0x483 SWAP2
0x484 SWAP1
0x485 PUSH1 0x0
0x487 MSTORE
0x488 PUSH1 0x20
0x48a PUSH1 0x0
0x48c SHA3
0x48d SWAP1
---
0x480: JUMPDEST 
0x482: V333 = ADD S2 S0
0x485: V334 = 0x0
0x487: M[0x0] = {0x0, 0x1, 0x2}
0x488: V335 = 0x20
0x48a: V336 = 0x0
0x48c: V337 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x32b, S5, {0x0, 0x1, 0x2}, S3, S2, {0x0, 0x1, 0x2}, S0]
Stack pops: 3
Stack additions: [V333, V337, S2]
Exit stack: [V11, 0x32b, S5, {0x0, 0x1, 0x2}, S3, V333, V337, S2]

================================

Block 0x48e
[0x48e:0x4a1]
---
Predecessors: [0x480, 0x48e]
Successors: [0x48e, 0x4a2]
---
0x48e JUMPDEST
0x48f DUP2
0x490 SLOAD
0x491 DUP2
0x492 MSTORE
0x493 SWAP1
0x494 PUSH1 0x1
0x496 ADD
0x497 SWAP1
0x498 PUSH1 0x20
0x49a ADD
0x49b DUP1
0x49c DUP4
0x49d GT
0x49e PUSH2 0x48e
0x4a1 JUMPI
---
0x48e: JUMPDEST 
0x490: V338 = S[S1]
0x492: M[S0] = V338
0x494: V339 = 0x1
0x496: V340 = ADD 0x1 S1
0x498: V341 = 0x20
0x49a: V342 = ADD 0x20 S0
0x49d: V343 = GT V333 V342
0x49e: V344 = 0x48e
0x4a1: JUMPI 0x48e V343
---
Entry stack: [V11, 0x32b, S5, {0x0, 0x1, 0x2}, S3, V333, S1, S0]
Stack pops: 3
Stack additions: [S2, V340, V342]
Exit stack: [V11, 0x32b, S5, {0x0, 0x1, 0x2}, S3, V333, V340, V342]

================================

Block 0x4a2
[0x4a2:0x4aa]
---
Predecessors: [0x48e]
Successors: [0x4ab]
---
0x4a2 DUP3
0x4a3 SWAP1
0x4a4 SUB
0x4a5 PUSH1 0x1f
0x4a7 AND
0x4a8 DUP3
0x4a9 ADD
0x4aa SWAP2
---
0x4a4: V345 = SUB V342 V333
0x4a5: V346 = 0x1f
0x4a7: V347 = AND 0x1f V345
0x4a9: V348 = ADD V333 V347
---
Entry stack: [V11, 0x32b, S5, {0x0, 0x1, 0x2}, S3, V333, V340, V342]
Stack pops: 3
Stack additions: [V348, S1, S2]
Exit stack: [V11, 0x32b, S5, {0x0, 0x1, 0x2}, S3, V348, V340, V333]

================================

Block 0x4ab
[0x4ab:0x4b2]
---
Predecessors: [0x425, 0x46d, 0x4a2, 0x4d1, 0x518, 0x53a, 0x57f]
Successors: [0x32b]
---
0x4ab JUMPDEST
0x4ac POP
0x4ad POP
0x4ae POP
0x4af POP
0x4b0 POP
0x4b1 DUP2
0x4b2 JUMP
---
0x4ab: JUMPDEST 
0x4b2: JUMP 0x32b
---
Entry stack: [V11, 0x32b, S5, {0x0, 0x1, 0x2}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x32b, S5]

================================

Block 0x4b3
[0x4b3:0x4c1]
---
Predecessors: [0x3ac]
Successors: [0x3b5]
---
0x4b3 JUMPDEST
0x4b4 PUSH1 0x3
0x4b6 SLOAD
0x4b7 PUSH1 0x1
0x4b9 PUSH1 0xa0
0x4bb PUSH1 0x2
0x4bd EXP
0x4be SUB
0x4bf AND
0x4c0 DUP2
0x4c1 JUMP
---
0x4b3: JUMPDEST 
0x4b4: V349 = 0x3
0x4b6: V350 = S[0x3]
0x4b7: V351 = 0x1
0x4b9: V352 = 0xa0
0x4bb: V353 = 0x2
0x4bd: V354 = EXP 0x2 0xa0
0x4be: V355 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bf: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x4c1: JUMP 0x3b5
---
Entry stack: [V11, 0x3b5]
Stack pops: 1
Stack additions: [S0, V356]
Exit stack: [V11, 0x3b5, V356]

================================

Block 0x4c2
[0x4c2:0x4d0]
---
Predecessors: [0x3dd]
Successors: [0x3b5]
---
0x4c2 JUMPDEST
0x4c3 PUSH1 0x5
0x4c5 SLOAD
0x4c6 PUSH1 0x1
0x4c8 PUSH1 0xa0
0x4ca PUSH1 0x2
0x4cc EXP
0x4cd SUB
0x4ce AND
0x4cf DUP2
0x4d0 JUMP
---
0x4c2: JUMPDEST 
0x4c3: V357 = 0x5
0x4c5: V358 = S[0x5]
0x4c6: V359 = 0x1
0x4c8: V360 = 0xa0
0x4ca: V361 = 0x2
0x4cc: V362 = EXP 0x2 0xa0
0x4cd: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ce: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x4d0: JUMP 0x3b5
---
Entry stack: [V11, 0x3b5]
Stack pops: 1
Stack additions: [S0, V364]
Exit stack: [V11, 0x3b5, V364]

================================

Block 0x4d1
[0x4d1:0x50f]
---
Predecessors: [0x3f2]
Successors: [0x4ab, 0x510]
---
0x4d1 JUMPDEST
0x4d2 PUSH1 0x1
0x4d4 DUP1
0x4d5 SLOAD
0x4d6 PUSH1 0x40
0x4d8 DUP1
0x4d9 MLOAD
0x4da PUSH1 0x20
0x4dc PUSH1 0x2
0x4de DUP5
0x4df DUP7
0x4e0 AND
0x4e1 ISZERO
0x4e2 PUSH2 0x100
0x4e5 MUL
0x4e6 PUSH1 0x0
0x4e8 NOT
0x4e9 ADD
0x4ea SWAP1
0x4eb SWAP5
0x4ec AND
0x4ed SWAP4
0x4ee SWAP1
0x4ef SWAP4
0x4f0 DIV
0x4f1 PUSH1 0x1f
0x4f3 DUP2
0x4f4 ADD
0x4f5 DUP5
0x4f6 SWAP1
0x4f7 DIV
0x4f8 DUP5
0x4f9 MUL
0x4fa DUP3
0x4fb ADD
0x4fc DUP5
0x4fd ADD
0x4fe SWAP1
0x4ff SWAP3
0x500 MSTORE
0x501 DUP2
0x502 DUP2
0x503 MSTORE
0x504 SWAP3
0x505 SWAP2
0x506 DUP4
0x507 ADD
0x508 DUP3
0x509 DUP3
0x50a DUP1
0x50b ISZERO
0x50c PUSH2 0x4ab
0x50f JUMPI
---
0x4d1: JUMPDEST 
0x4d2: V365 = 0x1
0x4d5: V366 = S[0x1]
0x4d6: V367 = 0x40
0x4d9: V368 = M[0x40]
0x4da: V369 = 0x20
0x4dc: V370 = 0x2
0x4e0: V371 = AND 0x1 V366
0x4e1: V372 = ISZERO V371
0x4e2: V373 = 0x100
0x4e5: V374 = MUL 0x100 V372
0x4e6: V375 = 0x0
0x4e8: V376 = NOT 0x0
0x4e9: V377 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V374
0x4ec: V378 = AND V366 V377
0x4f0: V379 = DIV V378 0x2
0x4f1: V380 = 0x1f
0x4f4: V381 = ADD V379 0x1f
0x4f7: V382 = DIV V381 0x20
0x4f9: V383 = MUL 0x20 V382
0x4fb: V384 = ADD V368 V383
0x4fd: V385 = ADD 0x20 V384
0x500: M[0x40] = V385
0x503: M[V368] = V379
0x507: V386 = ADD V368 0x20
0x50b: V387 = ISZERO V379
0x50c: V388 = 0x4ab
0x50f: JUMPI 0x4ab V387
---
Entry stack: [V11, 0x32b]
Stack pops: 0
Stack additions: [V368, 0x1, V379, V386, 0x1, V379]
Exit stack: [V11, 0x32b, V368, 0x1, V379, V386, 0x1, V379]

================================

Block 0x510
[0x510:0x517]
---
Predecessors: [0x4d1]
Successors: [0x480, 0x518]
---
0x510 DUP1
0x511 PUSH1 0x1f
0x513 LT
0x514 PUSH2 0x480
0x517 JUMPI
---
0x511: V389 = 0x1f
0x513: V390 = LT 0x1f V379
0x514: V391 = 0x480
0x517: JUMPI 0x480 V390
---
Entry stack: [V11, 0x32b, V368, 0x1, V379, V386, 0x1, V379]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x32b, V368, 0x1, V379, V386, 0x1, V379]

================================

Block 0x518
[0x518:0x52a]
---
Predecessors: [0x510]
Successors: [0x4ab]
---
0x518 PUSH2 0x100
0x51b DUP1
0x51c DUP4
0x51d SLOAD
0x51e DIV
0x51f MUL
0x520 DUP4
0x521 MSTORE
0x522 SWAP2
0x523 PUSH1 0x20
0x525 ADD
0x526 SWAP2
0x527 PUSH2 0x4ab
0x52a JUMP
---
0x518: V392 = 0x100
0x51d: V393 = S[0x1]
0x51e: V394 = DIV V393 0x100
0x51f: V395 = MUL V394 0x100
0x521: M[V386] = V395
0x523: V396 = 0x20
0x525: V397 = ADD 0x20 V386
0x527: V398 = 0x4ab
0x52a: JUMP 0x4ab
---
Entry stack: [V11, 0x32b, V368, 0x1, V379, V386, 0x1, V379]
Stack pops: 3
Stack additions: [V397, S1, S0]
Exit stack: [V11, 0x32b, V368, 0x1, V379, V397, 0x1, V379]

================================

Block 0x52b
[0x52b:0x539]
---
Predecessors: [0x407]
Successors: [0x3b5]
---
0x52b JUMPDEST
0x52c PUSH1 0x4
0x52e SLOAD
0x52f PUSH1 0x1
0x531 PUSH1 0xa0
0x533 PUSH1 0x2
0x535 EXP
0x536 SUB
0x537 AND
0x538 DUP2
0x539 JUMP
---
0x52b: JUMPDEST 
0x52c: V399 = 0x4
0x52e: V400 = S[0x4]
0x52f: V401 = 0x1
0x531: V402 = 0xa0
0x533: V403 = 0x2
0x535: V404 = EXP 0x2 0xa0
0x536: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x537: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x539: JUMP 0x3b5
---
Entry stack: [V11, 0x3b5]
Stack pops: 1
Stack additions: [S0, V406]
Exit stack: [V11, 0x3b5, V406]

================================

Block 0x53a
[0x53a:0x576]
---
Predecessors: [0x41c]
Successors: [0x4ab, 0x577]
---
0x53a JUMPDEST
0x53b PUSH1 0x2
0x53d DUP1
0x53e SLOAD
0x53f PUSH1 0x40
0x541 DUP1
0x542 MLOAD
0x543 PUSH1 0x20
0x545 PUSH1 0x1
0x547 DUP5
0x548 AND
0x549 ISZERO
0x54a PUSH2 0x100
0x54d MUL
0x54e PUSH1 0x0
0x550 NOT
0x551 ADD
0x552 SWAP1
0x553 SWAP4
0x554 AND
0x555 DUP5
0x556 SWAP1
0x557 DIV
0x558 PUSH1 0x1f
0x55a DUP2
0x55b ADD
0x55c DUP5
0x55d SWAP1
0x55e DIV
0x55f DUP5
0x560 MUL
0x561 DUP3
0x562 ADD
0x563 DUP5
0x564 ADD
0x565 SWAP1
0x566 SWAP3
0x567 MSTORE
0x568 DUP2
0x569 DUP2
0x56a MSTORE
0x56b SWAP3
0x56c SWAP2
0x56d DUP4
0x56e ADD
0x56f DUP3
0x570 DUP3
0x571 DUP1
0x572 ISZERO
0x573 PUSH2 0x4ab
0x576 JUMPI
---
0x53a: JUMPDEST 
0x53b: V407 = 0x2
0x53e: V408 = S[0x2]
0x53f: V409 = 0x40
0x542: V410 = M[0x40]
0x543: V411 = 0x20
0x545: V412 = 0x1
0x548: V413 = AND V408 0x1
0x549: V414 = ISZERO V413
0x54a: V415 = 0x100
0x54d: V416 = MUL 0x100 V414
0x54e: V417 = 0x0
0x550: V418 = NOT 0x0
0x551: V419 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V416
0x554: V420 = AND V408 V419
0x557: V421 = DIV V420 0x2
0x558: V422 = 0x1f
0x55b: V423 = ADD V421 0x1f
0x55e: V424 = DIV V423 0x20
0x560: V425 = MUL 0x20 V424
0x562: V426 = ADD V410 V425
0x564: V427 = ADD 0x20 V426
0x567: M[0x40] = V427
0x56a: M[V410] = V421
0x56e: V428 = ADD V410 0x20
0x572: V429 = ISZERO V421
0x573: V430 = 0x4ab
0x576: JUMPI 0x4ab V429
---
Entry stack: [V11, 0x32b]
Stack pops: 0
Stack additions: [V410, 0x2, V421, V428, 0x2, V421]
Exit stack: [V11, 0x32b, V410, 0x2, V421, V428, 0x2, V421]

================================

Block 0x577
[0x577:0x57e]
---
Predecessors: [0x53a]
Successors: [0x480, 0x57f]
---
0x577 DUP1
0x578 PUSH1 0x1f
0x57a LT
0x57b PUSH2 0x480
0x57e JUMPI
---
0x578: V431 = 0x1f
0x57a: V432 = LT 0x1f V421
0x57b: V433 = 0x480
0x57e: JUMPI 0x480 V432
---
Entry stack: [V11, 0x32b, V410, 0x2, V421, V428, 0x2, V421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x32b, V410, 0x2, V421, V428, 0x2, V421]

================================

Block 0x57f
[0x57f:0x591]
---
Predecessors: [0x577]
Successors: [0x4ab]
---
0x57f PUSH2 0x100
0x582 DUP1
0x583 DUP4
0x584 SLOAD
0x585 DIV
0x586 MUL
0x587 DUP4
0x588 MSTORE
0x589 SWAP2
0x58a PUSH1 0x20
0x58c ADD
0x58d SWAP2
0x58e PUSH2 0x4ab
0x591 JUMP
---
0x57f: V434 = 0x100
0x584: V435 = S[0x2]
0x585: V436 = DIV V435 0x100
0x586: V437 = MUL V436 0x100
0x588: M[V428] = V437
0x58a: V438 = 0x20
0x58c: V439 = ADD 0x20 V428
0x58e: V440 = 0x4ab
0x591: JUMP 0x4ab
---
Entry stack: [V11, 0x32b, V410, 0x2, V421, V428, 0x2, V421]
Stack pops: 3
Stack additions: [V439, S1, S0]
Exit stack: [V11, 0x32b, V410, 0x2, V421, V439, 0x2, V421]

================================

Block 0x592
[0x592:0x5c7]
---
Predecessors: []
Successors: []
---
0x592 STOP
0x593 LOG1
0x594 PUSH6 0x627a7a723058
0x59b SHA3
0x59c MISSING 0xbd
0x59d PUSH4 0x27b7b728
0x5a2 BYTE
0x5a3 MISSING 0xc5
0x5a4 MISSING 0x21
0x5a5 MISSING 0xd5
0x5a6 PUSH15 0x1aba493bd8f5b1bac651d988718de3
0x5b6 PUSH17 0x85e81cacd60029
---
0x592: STOP 
0x593: LOG S0 S1 S2
0x594: V441 = 0x627a7a723058
0x59b: V442 = SHA3 0x627a7a723058 S3
0x59c: MISSING 0xbd
0x59d: V443 = 0x27b7b728
0x5a2: V444 = BYTE 0x27b7b728 S0
0x5a3: MISSING 0xc5
0x5a4: MISSING 0x21
0x5a5: MISSING 0xd5
0x5a6: V445 = 0x1aba493bd8f5b1bac651d988718de3
0x5b6: V446 = 0x85e81cacd60029
---
Entry stack: []
Stack pops: 0
Stack additions: [V442, V444, 0x85e81cacd60029, 0x1aba493bd8f5b1bac651d988718de3]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x316
Exit block: 0x392
Body: 0x316, 0x31e, 0x322, 0x32b, 0x34d, 0x356, 0x365, 0x379, 0x392, 0x425, 0x465, 0x46d, 0x480, 0x48e, 0x4a2, 0x4ab

Function 1:
Public function signature: 0x1d7695d9
Entry block: 0x3a0
Exit block: 0x3b5
Body: 0x3a0, 0x3a8, 0x3ac, 0x3b5, 0x4b3

Function 2:
Public function signature: 0x4fd205cb
Entry block: 0x3d1
Exit block: 0x3b5
Body: 0x3b5, 0x3d1, 0x3d9, 0x3dd, 0x4c2

Function 3:
Public function signature: 0x95d89b41
Entry block: 0x3e6
Exit block: 0x392
Body: 0x32b, 0x34d, 0x356, 0x365, 0x379, 0x392, 0x3e6, 0x3ee, 0x3f2, 0x480, 0x48e, 0x4a2, 0x4ab, 0x4d1, 0x510, 0x518

Function 4:
Public function signature: 0xd2731b32
Entry block: 0x3fb
Exit block: 0x3b5
Body: 0x3b5, 0x3fb, 0x403, 0x407, 0x52b

Function 5:
Public function signature: 0xf4f3c8a4
Entry block: 0x410
Exit block: 0x392
Body: 0x32b, 0x34d, 0x356, 0x365, 0x379, 0x392, 0x410, 0x418, 0x41c, 0x480, 0x48e, 0x4a2, 0x4ab, 0x53a, 0x577, 0x57f

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x311
Body: 0x77, 0x8a, 0xf0, 0x123, 0x16e, 0x19f, 0x1ea, 0x24c, 0x250, 0x25b, 0x264, 0x276, 0x27a, 0x288, 0x2f4, 0x2f8, 0x303, 0x30c, 0x311

