Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4b]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4b
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4b
0xc: JUMPI 0x4b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x4d]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3ccfd60b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x4d
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3ccfd60b
0x3b: V13 = EQ V11 0x3ccfd60b
0x3c: V14 = 0x4d
0x3f: JUMPI 0x4d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x62]
---
0x40 DUP1
0x41 PUSH4 0xb0856748
0x46 EQ
0x47 PUSH2 0x62
0x4a JUMPI
---
0x41: V15 = 0xb0856748
0x46: V16 = EQ 0xb0856748 V11
0x47: V17 = 0x62
0x4a: JUMPI 0x62 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x4c]
---
Predecessors: [0x0, 0x40, 0x1cc, 0x287]
Successors: []
---
0x4b JUMPDEST
0x4c STOP
---
0x4b: JUMPDEST 
0x4c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d
[0x4d:0x54]
---
Predecessors: [0xd]
Successors: [0x55, 0x59]
---
0x4d JUMPDEST
0x4e CALLVALUE
0x4f DUP1
0x50 ISZERO
0x51 PUSH2 0x59
0x54 JUMPI
---
0x4d: JUMPDEST 
0x4e: V18 = CALLVALUE
0x50: V19 = ISZERO V18
0x51: V20 = 0x59
0x54: JUMPI 0x59 V19
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V18]
Exit stack: [V11, V18]

================================

Block 0x55
[0x55:0x58]
---
Predecessors: [0x4d]
Successors: []
---
0x55 PUSH1 0x0
0x57 DUP1
0x58 REVERT
---
0x55: V21 = 0x0
0x58: REVERT 0x0 0x0
---
Entry stack: [V11, V18]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V18]

================================

Block 0x59
[0x59:0x61]
---
Predecessors: [0x4d]
Successors: [0xcb]
---
0x59 JUMPDEST
0x5a POP
0x5b PUSH2 0x4b
0x5e PUSH2 0xcb
0x61 JUMP
---
0x59: JUMPDEST 
0x5b: V22 = 0x4b
0x5e: V23 = 0xcb
0x61: JUMP 0xcb
---
Entry stack: [V11, V18]
Stack pops: 1
Stack additions: [0x4b]
Exit stack: [V11, 0x4b]

================================

Block 0x62
[0x62:0xca]
---
Predecessors: [0x40]
Successors: [0x1d3]
---
0x62 JUMPDEST
0x63 PUSH1 0x40
0x65 DUP1
0x66 MLOAD
0x67 PUSH1 0x20
0x69 PUSH1 0x4
0x6b PUSH1 0x44
0x6d CALLDATALOAD
0x6e DUP2
0x6f DUP2
0x70 ADD
0x71 CALLDATALOAD
0x72 PUSH1 0x1f
0x74 DUP2
0x75 ADD
0x76 DUP5
0x77 SWAP1
0x78 DIV
0x79 DUP5
0x7a MUL
0x7b DUP6
0x7c ADD
0x7d DUP5
0x7e ADD
0x7f SWAP1
0x80 SWAP6
0x81 MSTORE
0x82 DUP5
0x83 DUP5
0x84 MSTORE
0x85 PUSH2 0x4b
0x88 SWAP5
0x89 DUP3
0x8a CALLDATALOAD
0x8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0 AND
0xa1 SWAP5
0xa2 PUSH1 0x24
0xa4 DUP1
0xa5 CALLDATALOAD
0xa6 SWAP6
0xa7 CALLDATASIZE
0xa8 SWAP6
0xa9 SWAP5
0xaa PUSH1 0x64
0xac SWAP5
0xad SWAP3
0xae ADD
0xaf SWAP2
0xb0 SWAP1
0xb1 DUP2
0xb2 SWAP1
0xb3 DUP5
0xb4 ADD
0xb5 DUP4
0xb6 DUP3
0xb7 DUP1
0xb8 DUP3
0xb9 DUP5
0xba CALLDATACOPY
0xbb POP
0xbc SWAP5
0xbd SWAP8
0xbe POP
0xbf PUSH2 0x1d3
0xc2 SWAP7
0xc3 POP
0xc4 POP
0xc5 POP
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 POP
0xca JUMP
---
0x62: JUMPDEST 
0x63: V24 = 0x40
0x66: V25 = M[0x40]
0x67: V26 = 0x20
0x69: V27 = 0x4
0x6b: V28 = 0x44
0x6d: V29 = CALLDATALOAD 0x44
0x70: V30 = ADD V29 0x4
0x71: V31 = CALLDATALOAD V30
0x72: V32 = 0x1f
0x75: V33 = ADD V31 0x1f
0x78: V34 = DIV V33 0x20
0x7a: V35 = MUL 0x20 V34
0x7c: V36 = ADD V25 V35
0x7e: V37 = ADD 0x20 V36
0x81: M[0x40] = V37
0x84: M[V25] = V31
0x85: V38 = 0x4b
0x8a: V39 = CALLDATALOAD 0x4
0x8b: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xa2: V42 = 0x24
0xa5: V43 = CALLDATALOAD 0x24
0xa7: V44 = CALLDATASIZE
0xaa: V45 = 0x64
0xae: V46 = ADD 0x24 V29
0xb4: V47 = ADD V25 0x20
0xba: CALLDATACOPY V47 V46 V31
0xbf: V48 = 0x1d3
0xca: JUMP 0x1d3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4b, V41, V43, V25]
Exit stack: [V11, 0x4b, V41, V43, V25]

================================

Block 0xcb
[0xcb:0x12d]
---
Predecessors: [0x59]
Successors: [0x12e, 0x132]
---
0xcb JUMPDEST
0xcc PUSH1 0x0
0xce DUP1
0xcf SLOAD
0xd0 PUSH1 0x40
0xd2 DUP1
0xd3 MLOAD
0xd4 PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0xf5 DUP2
0xf6 MSTORE
0xf7 SWAP1
0xf8 MLOAD
0xf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e SWAP1
0x10f SWAP3
0x110 AND
0x111 SWAP3
0x112 PUSH4 0x3ccfd60b
0x117 SWAP3
0x118 PUSH1 0x4
0x11a DUP1
0x11b DUP5
0x11c ADD
0x11d SWAP4
0x11e DUP3
0x11f SWAP1
0x120 SUB
0x121 ADD
0x122 DUP2
0x123 DUP4
0x124 DUP8
0x125 DUP1
0x126 EXTCODESIZE
0x127 ISZERO
0x128 DUP1
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0xcb: JUMPDEST 
0xcc: V49 = 0x0
0xcf: V50 = S[0x0]
0xd0: V51 = 0x40
0xd3: V52 = M[0x40]
0xd4: V53 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0xf6: M[V52] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0xf8: V54 = M[0x40]
0xf9: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0x110: V56 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0x112: V57 = 0x3ccfd60b
0x118: V58 = 0x4
0x11c: V59 = ADD V52 0x4
0x120: V60 = SUB V52 V54
0x121: V61 = ADD V60 0x4
0x126: V62 = EXTCODESIZE V56
0x127: V63 = ISZERO V62
0x129: V64 = ISZERO V63
0x12a: V65 = 0x132
0x12d: JUMPI 0x132 V64
---
Entry stack: [V11, 0x4b]
Stack pops: 0
Stack additions: [V56, 0x3ccfd60b, V59, 0x0, V54, V61, V54, 0x0, V56, V63]
Exit stack: [V11, 0x4b, V56, 0x3ccfd60b, V59, 0x0, V54, V61, V54, 0x0, V56, V63]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0xcb]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V66 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4b, V56, 0x3ccfd60b, V59, 0x0, V54, V61, V54, 0x0, V56, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b, V56, 0x3ccfd60b, V59, 0x0, V54, V61, V54, 0x0, V56, V63]

================================

Block 0x132
[0x132:0x13c]
---
Predecessors: [0xcb]
Successors: [0x13d, 0x146]
---
0x132 JUMPDEST
0x133 POP
0x134 GAS
0x135 CALL
0x136 ISZERO
0x137 DUP1
0x138 ISZERO
0x139 PUSH2 0x146
0x13c JUMPI
---
0x132: JUMPDEST 
0x134: V67 = GAS
0x135: V68 = CALL V67 V56 0x0 V54 V61 V54 0x0
0x136: V69 = ISZERO V68
0x138: V70 = ISZERO V69
0x139: V71 = 0x146
0x13c: JUMPI 0x146 V70
---
Entry stack: [V11, 0x4b, V56, 0x3ccfd60b, V59, 0x0, V54, V61, V54, 0x0, V56, V63]
Stack pops: 7
Stack additions: [V69]
Exit stack: [V11, 0x4b, V56, 0x3ccfd60b, V59, V69]

================================

Block 0x13d
[0x13d:0x145]
---
Predecessors: [0x132]
Successors: []
---
0x13d RETURNDATASIZE
0x13e PUSH1 0x0
0x140 DUP1
0x141 RETURNDATACOPY
0x142 RETURNDATASIZE
0x143 PUSH1 0x0
0x145 REVERT
---
0x13d: V72 = RETURNDATASIZE
0x13e: V73 = 0x0
0x141: RETURNDATACOPY 0x0 0x0 V72
0x142: V74 = RETURNDATASIZE
0x143: V75 = 0x0
0x145: REVERT 0x0 V74
---
Entry stack: [V11, 0x4b, V56, 0x3ccfd60b, V59, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b, V56, 0x3ccfd60b, V59, V69]

================================

Block 0x146
[0x146:0x1b3]
---
Predecessors: [0x132]
Successors: [0x1b4, 0x1b8]
---
0x146 JUMPDEST
0x147 POP
0x148 POP
0x149 PUSH1 0x1
0x14b SLOAD
0x14c PUSH1 0x40
0x14e DUP1
0x14f MLOAD
0x150 PUSH32 0xb60d428800000000000000000000000000000000000000000000000000000000
0x171 DUP2
0x172 MSTORE
0x173 SWAP1
0x174 MLOAD
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a SWAP1
0x18b SWAP3
0x18c AND
0x18d SWAP4
0x18e POP
0x18f PUSH4 0xb60d4288
0x194 SWAP3
0x195 POP
0x196 ADDRESS
0x197 BALANCE
0x198 SWAP2
0x199 PUSH1 0x4
0x19b DUP1
0x19c DUP4
0x19d ADD
0x19e SWAP3
0x19f PUSH1 0x0
0x1a1 SWAP3
0x1a2 SWAP2
0x1a3 SWAP1
0x1a4 DUP3
0x1a5 SWAP1
0x1a6 SUB
0x1a7 ADD
0x1a8 DUP2
0x1a9 DUP6
0x1aa DUP9
0x1ab DUP1
0x1ac EXTCODESIZE
0x1ad ISZERO
0x1ae DUP1
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x146: JUMPDEST 
0x149: V76 = 0x1
0x14b: V77 = S[0x1]
0x14c: V78 = 0x40
0x14f: V79 = M[0x40]
0x150: V80 = 0xb60d428800000000000000000000000000000000000000000000000000000000
0x172: M[V79] = 0xb60d428800000000000000000000000000000000000000000000000000000000
0x174: V81 = M[0x40]
0x175: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V83 = AND V77 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V84 = 0xb60d4288
0x196: V85 = ADDRESS
0x197: V86 = BALANCE V85
0x199: V87 = 0x4
0x19d: V88 = ADD V79 0x4
0x19f: V89 = 0x0
0x1a6: V90 = SUB V79 V81
0x1a7: V91 = ADD V90 0x4
0x1ac: V92 = EXTCODESIZE V83
0x1ad: V93 = ISZERO V92
0x1af: V94 = ISZERO V93
0x1b0: V95 = 0x1b8
0x1b3: JUMPI 0x1b8 V94
---
Entry stack: [V11, 0x4b, V56, 0x3ccfd60b, V59, V69]
Stack pops: 4
Stack additions: [V83, 0xb60d4288, V86, V88, 0x0, V81, V91, V81, V86, V83, V93]
Exit stack: [V11, 0x4b, V83, 0xb60d4288, V86, V88, 0x0, V81, V91, V81, V86, V83, V93]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x146]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V96 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4b, V83, 0xb60d4288, V86, V88, 0x0, V81, V91, V81, V86, V83, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b, V83, 0xb60d4288, V86, V88, 0x0, V81, V91, V81, V86, V83, V93]

================================

Block 0x1b8
[0x1b8:0x1c2]
---
Predecessors: [0x146]
Successors: [0x1c3, 0x1cc]
---
0x1b8 JUMPDEST
0x1b9 POP
0x1ba GAS
0x1bb CALL
0x1bc ISZERO
0x1bd DUP1
0x1be ISZERO
0x1bf PUSH2 0x1cc
0x1c2 JUMPI
---
0x1b8: JUMPDEST 
0x1ba: V97 = GAS
0x1bb: V98 = CALL V97 V83 V86 V81 V91 V81 0x0
0x1bc: V99 = ISZERO V98
0x1be: V100 = ISZERO V99
0x1bf: V101 = 0x1cc
0x1c2: JUMPI 0x1cc V100
---
Entry stack: [V11, 0x4b, V83, 0xb60d4288, V86, V88, 0x0, V81, V91, V81, V86, V83, V93]
Stack pops: 7
Stack additions: [V99]
Exit stack: [V11, 0x4b, V83, 0xb60d4288, V86, V88, V99]

================================

Block 0x1c3
[0x1c3:0x1cb]
---
Predecessors: [0x1b8]
Successors: []
---
0x1c3 RETURNDATASIZE
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 RETURNDATACOPY
0x1c8 RETURNDATASIZE
0x1c9 PUSH1 0x0
0x1cb REVERT
---
0x1c3: V102 = RETURNDATASIZE
0x1c4: V103 = 0x0
0x1c7: RETURNDATACOPY 0x0 0x0 V102
0x1c8: V104 = RETURNDATASIZE
0x1c9: V105 = 0x0
0x1cb: REVERT 0x0 V104
---
Entry stack: [V11, 0x4b, V83, 0xb60d4288, V86, V88, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b, V83, 0xb60d4288, V86, V88, V99]

================================

Block 0x1cc
[0x1cc:0x1d2]
---
Predecessors: [0x1b8]
Successors: [0x4b]
---
0x1cc JUMPDEST
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 POP
0x1d1 POP
0x1d2 JUMP
---
0x1cc: JUMPDEST 
0x1d2: JUMP 0x4b
---
Entry stack: [V11, 0x4b, V83, 0xb60d4288, V86, V88, V99]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d3
[0x1d3:0x1f2]
---
Predecessors: [0x62]
Successors: [0x1f3, 0x1f7]
---
0x1d3 JUMPDEST
0x1d4 PUSH1 0x1
0x1d6 SLOAD
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed CALLER
0x1ee EQ
0x1ef PUSH2 0x1f7
0x1f2 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V106 = 0x1
0x1d6: V107 = S[0x1]
0x1d7: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1ed: V110 = CALLER
0x1ee: V111 = EQ V110 V109
0x1ef: V112 = 0x1f7
0x1f2: JUMPI 0x1f7 V111
---
Entry stack: [V11, 0x4b, V41, V43, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b, V41, V43, V25]

================================

Block 0x1f3
[0x1f3:0x1f6]
---
Predecessors: [0x1d3]
Successors: []
---
0x1f3 PUSH1 0x0
0x1f5 DUP1
0x1f6 REVERT
---
0x1f3: V113 = 0x0
0x1f6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4b, V41, V43, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b, V41, V43, V25]

================================

Block 0x1f7
[0x1f7:0x221]
---
Predecessors: [0x1d3]
Successors: [0x222]
---
0x1f7 JUMPDEST
0x1f8 DUP3
0x1f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20e AND
0x20f DUP3
0x210 DUP3
0x211 PUSH1 0x40
0x213 MLOAD
0x214 DUP1
0x215 DUP3
0x216 DUP1
0x217 MLOAD
0x218 SWAP1
0x219 PUSH1 0x20
0x21b ADD
0x21c SWAP1
0x21d DUP1
0x21e DUP4
0x21f DUP4
0x220 PUSH1 0x0
---
0x1f7: JUMPDEST 
0x1f9: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x20e: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x211: V116 = 0x40
0x213: V117 = M[0x40]
0x217: V118 = M[V25]
0x219: V119 = 0x20
0x21b: V120 = ADD 0x20 V25
0x220: V121 = 0x0
---
Entry stack: [V11, 0x4b, V41, V43, V25]
Stack pops: 3
Stack additions: [S2, S1, S0, V115, S1, S0, V117, V117, V120, V118, V118, V117, V120, 0x0]
Exit stack: [V11, 0x4b, V41, V43, V25, V115, V43, V25, V117, V117, V120, V118, V118, V117, V120, 0x0]

================================

Block 0x222
[0x222:0x22a]
---
Predecessors: [0x1f7, 0x22b]
Successors: [0x22b, 0x23a]
---
0x222 JUMPDEST
0x223 DUP4
0x224 DUP2
0x225 LT
0x226 ISZERO
0x227 PUSH2 0x23a
0x22a JUMPI
---
0x222: JUMPDEST 
0x225: V122 = LT S0 V118
0x226: V123 = ISZERO V122
0x227: V124 = 0x23a
0x22a: JUMPI 0x23a V123
---
Entry stack: [V11, 0x4b, V41, V43, V25, V115, V43, V25, V117, V117, V120, V118, V118, V117, V120, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x4b, V41, V43, V25, V115, V43, V25, V117, V117, V120, V118, V118, V117, V120, S0]

================================

Block 0x22b
[0x22b:0x239]
---
Predecessors: [0x222]
Successors: [0x222]
---
0x22b DUP2
0x22c DUP2
0x22d ADD
0x22e MLOAD
0x22f DUP4
0x230 DUP3
0x231 ADD
0x232 MSTORE
0x233 PUSH1 0x20
0x235 ADD
0x236 PUSH2 0x222
0x239 JUMP
---
0x22d: V125 = ADD S0 V120
0x22e: V126 = M[V125]
0x231: V127 = ADD S0 V117
0x232: M[V127] = V126
0x233: V128 = 0x20
0x235: V129 = ADD 0x20 S0
0x236: V130 = 0x222
0x239: JUMP 0x222
---
Entry stack: [V11, 0x4b, V41, V43, V25, V115, V43, V25, V117, V117, V120, V118, V118, V117, V120, S0]
Stack pops: 3
Stack additions: [S2, S1, V129]
Exit stack: [V11, 0x4b, V41, V43, V25, V115, V43, V25, V117, V117, V120, V118, V118, V117, V120, V129]

================================

Block 0x23a
[0x23a:0x24d]
---
Predecessors: [0x222]
Successors: [0x24e, 0x267]
---
0x23a JUMPDEST
0x23b POP
0x23c POP
0x23d POP
0x23e POP
0x23f SWAP1
0x240 POP
0x241 SWAP1
0x242 DUP2
0x243 ADD
0x244 SWAP1
0x245 PUSH1 0x1f
0x247 AND
0x248 DUP1
0x249 ISZERO
0x24a PUSH2 0x267
0x24d JUMPI
---
0x23a: JUMPDEST 
0x243: V131 = ADD V118 V117
0x245: V132 = 0x1f
0x247: V133 = AND 0x1f V118
0x249: V134 = ISZERO V133
0x24a: V135 = 0x267
0x24d: JUMPI 0x267 V134
---
Entry stack: [V11, 0x4b, V41, V43, V25, V115, V43, V25, V117, V117, V120, V118, V118, V117, V120, S0]
Stack pops: 7
Stack additions: [V131, V133]
Exit stack: [V11, 0x4b, V41, V43, V25, V115, V43, V25, V117, V131, V133]

================================

Block 0x24e
[0x24e:0x266]
---
Predecessors: [0x23a]
Successors: [0x267]
---
0x24e DUP1
0x24f DUP3
0x250 SUB
0x251 DUP1
0x252 MLOAD
0x253 PUSH1 0x1
0x255 DUP4
0x256 PUSH1 0x20
0x258 SUB
0x259 PUSH2 0x100
0x25c EXP
0x25d SUB
0x25e NOT
0x25f AND
0x260 DUP2
0x261 MSTORE
0x262 PUSH1 0x20
0x264 ADD
0x265 SWAP2
0x266 POP
---
0x250: V136 = SUB V131 V133
0x252: V137 = M[V136]
0x253: V138 = 0x1
0x256: V139 = 0x20
0x258: V140 = SUB 0x20 V133
0x259: V141 = 0x100
0x25c: V142 = EXP 0x100 V140
0x25d: V143 = SUB V142 0x1
0x25e: V144 = NOT V143
0x25f: V145 = AND V144 V137
0x261: M[V136] = V145
0x262: V146 = 0x20
0x264: V147 = ADD 0x20 V136
---
Entry stack: [V11, 0x4b, V41, V43, V25, V115, V43, V25, V117, V131, V133]
Stack pops: 2
Stack additions: [V147, S0]
Exit stack: [V11, 0x4b, V41, V43, V25, V115, V43, V25, V117, V147, V133]

================================

Block 0x267
[0x267:0x282]
---
Predecessors: [0x23a, 0x24e]
Successors: [0x283, 0x287]
---
0x267 JUMPDEST
0x268 POP
0x269 SWAP2
0x26a POP
0x26b POP
0x26c PUSH1 0x0
0x26e PUSH1 0x40
0x270 MLOAD
0x271 DUP1
0x272 DUP4
0x273 SUB
0x274 DUP2
0x275 DUP6
0x276 DUP8
0x277 GAS
0x278 CALL
0x279 SWAP3
0x27a POP
0x27b POP
0x27c POP
0x27d ISZERO
0x27e ISZERO
0x27f PUSH2 0x287
0x282 JUMPI
---
0x267: JUMPDEST 
0x26c: V148 = 0x0
0x26e: V149 = 0x40
0x270: V150 = M[0x40]
0x273: V151 = SUB S1 V150
0x277: V152 = GAS
0x278: V153 = CALL V152 V115 V43 V150 V151 V150 0x0
0x27d: V154 = ISZERO V153
0x27e: V155 = ISZERO V154
0x27f: V156 = 0x287
0x282: JUMPI 0x287 V155
---
Entry stack: [V11, 0x4b, V41, V43, V25, V115, V43, V25, V117, S1, V133]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x4b, V41, V43, V25]

================================

Block 0x283
[0x283:0x286]
---
Predecessors: [0x267]
Successors: []
---
0x283 PUSH1 0x0
0x285 DUP1
0x286 REVERT
---
0x283: V157 = 0x0
0x286: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4b, V41, V43, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b, V41, V43, V25]

================================

Block 0x287
[0x287:0x28b]
---
Predecessors: [0x267]
Successors: [0x4b]
---
0x287 JUMPDEST
0x288 POP
0x289 POP
0x28a POP
0x28b JUMP
---
0x287: JUMPDEST 
0x28b: JUMP 0x4b
---
Entry stack: [V11, 0x4b, V41, V43, V25]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x28c
[0x28c:0x2b7]
---
Predecessors: []
Successors: []
---
0x28c STOP
0x28d LOG1
0x28e PUSH6 0x627a7a723058
0x295 SHA3
0x296 PUSH3 0xd2b857
0x29a PUSH20 0xc9d57e198e66d447d369a1216032f877efc36ff7
0x2af MISSING 0xd0
0x2b0 MISSING 0x2e
0x2b1 RETURNDATASIZE
0x2b2 PUSH5 0xcda31d0029
---
0x28c: STOP 
0x28d: LOG S0 S1 S2
0x28e: V158 = 0x627a7a723058
0x295: V159 = SHA3 0x627a7a723058 S3
0x296: V160 = 0xd2b857
0x29a: V161 = 0xc9d57e198e66d447d369a1216032f877efc36ff7
0x2af: MISSING 0xd0
0x2b0: MISSING 0x2e
0x2b1: V162 = RETURNDATASIZE
0x2b2: V163 = 0xcda31d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc9d57e198e66d447d369a1216032f877efc36ff7, 0xd2b857, V159, 0xcda31d0029, V162]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x4d
Exit block: 0x4b
Body: 0x4b, 0x4d, 0x55, 0x59, 0xcb, 0x12e, 0x132, 0x13d, 0x146, 0x1b4, 0x1b8, 0x1c3, 0x1cc

Function 1:
Public function signature: 0xb0856748
Entry block: 0x62
Exit block: 0x4b
Body: 0x4b, 0x62, 0x1d3, 0x1f3, 0x1f7, 0x222, 0x22b, 0x23a, 0x24e, 0x267, 0x283, 0x287

Function 2:
Public fallback function
Entry block: 0x4b
Exit block: 0x4b
Body: 0x4b

