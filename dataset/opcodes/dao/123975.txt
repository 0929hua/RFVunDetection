Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x77
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x77
0xa: JUMPI 0x77 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x82]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1c5d9faa
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x82
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1c5d9faa
0x1a: V12 = EQ V10 0x1c5d9faa
0x1b: V13 = 0x82
0x1e: JUMPI 0x82 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x150]
---
0x1f DUP1
0x20 PUSH4 0x3ccfd60b
0x25 EQ
0x26 PUSH2 0x150
0x29 JUMPI
---
0x20: V14 = 0x3ccfd60b
0x25: V15 = EQ 0x3ccfd60b V10
0x26: V16 = 0x150
0x29: JUMPI 0x150 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x1b1]
---
0x2a DUP1
0x2b PUSH4 0x4ba6f28e
0x30 EQ
0x31 PUSH2 0x1b1
0x34 JUMPI
---
0x2b: V17 = 0x4ba6f28e
0x30: V18 = EQ 0x4ba6f28e V10
0x31: V19 = 0x1b1
0x34: JUMPI 0x1b1 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x1ec]
---
0x35 DUP1
0x36 PUSH4 0x4c738909
0x3b EQ
0x3c PUSH2 0x1ec
0x3f JUMPI
---
0x36: V20 = 0x4c738909
0x3b: V21 = EQ 0x4c738909 V10
0x3c: V22 = 0x1ec
0x3f: JUMPI 0x1ec V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x20c]
---
0x40 DUP1
0x41 PUSH4 0x9dade07d
0x46 EQ
0x47 PUSH2 0x20c
0x4a JUMPI
---
0x41: V23 = 0x9dade07d
0x46: V24 = EQ 0x9dade07d V10
0x47: V25 = 0x20c
0x4a: JUMPI 0x20c V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x263]
---
0x4b DUP1
0x4c PUSH4 0x9ee1bd0f
0x51 EQ
0x52 PUSH2 0x263
0x55 JUMPI
---
0x4c: V26 = 0x9ee1bd0f
0x51: V27 = EQ 0x9ee1bd0f V10
0x52: V28 = 0x263
0x55: JUMPI 0x263 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x277]
---
0x56 DUP1
0x57 PUSH4 0xa6f9dae1
0x5c EQ
0x5d PUSH2 0x277
0x60 JUMPI
---
0x57: V29 = 0xa6f9dae1
0x5c: V30 = EQ 0xa6f9dae1 V10
0x5d: V31 = 0x277
0x60: JUMPI 0x277 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x2b1]
---
0x61 DUP1
0x62 PUSH4 0xdffeadd0
0x67 EQ
0x68 PUSH2 0x2b1
0x6b JUMPI
---
0x62: V32 = 0xdffeadd0
0x67: V33 = EQ 0xdffeadd0 V10
0x68: V34 = 0x2b1
0x6b: JUMPI 0x2b1 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x2f9]
---
0x6c DUP1
0x6d PUSH4 0xf8b2cb4f
0x72 EQ
0x73 PUSH2 0x2f9
0x76 JUMPI
---
0x6d: V35 = 0xf8b2cb4f
0x72: V36 = EQ 0xf8b2cb4f V10
0x73: V37 = 0x2f9
0x76: JUMPI 0x2f9 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x0, 0x6c]
Successors: [0x2b5]
---
0x77 JUMPDEST
0x78 PUSH2 0x31e
0x7b PUSH2 0x320
0x7e PUSH2 0x2b5
0x81 JUMP
---
0x77: JUMPDEST 
0x78: V38 = 0x31e
0x7b: V39 = 0x320
0x7e: V40 = 0x2b5
0x81: JUMP 0x2b5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31e, 0x320]
Exit stack: [V10, 0x31e, 0x320]

================================

Block 0x82
[0x82:0x127]
---
Predecessors: [0xb]
Successors: [0x128, 0x3d3]
---
0x82 JUMPDEST
0x83 PUSH1 0x40
0x85 DUP1
0x86 MLOAD
0x87 PUSH1 0x20
0x89 PUSH1 0x4
0x8b DUP1
0x8c CALLDATALOAD
0x8d DUP1
0x8e DUP3
0x8f ADD
0x90 CALLDATALOAD
0x91 PUSH1 0x1f
0x93 DUP2
0x94 ADD
0x95 DUP5
0x96 SWAP1
0x97 DIV
0x98 DUP5
0x99 MUL
0x9a DUP6
0x9b ADD
0x9c DUP5
0x9d ADD
0x9e SWAP1
0x9f SWAP6
0xa0 MSTORE
0xa1 DUP5
0xa2 DUP5
0xa3 MSTORE
0xa4 PUSH2 0x322
0xa7 SWAP5
0xa8 SWAP2
0xa9 SWAP4
0xaa PUSH1 0x24
0xac SWAP4
0xad SWAP1
0xae SWAP3
0xaf SWAP2
0xb0 DUP5
0xb1 ADD
0xb2 SWAP2
0xb3 SWAP1
0xb4 DUP2
0xb5 SWAP1
0xb6 DUP5
0xb7 ADD
0xb8 DUP4
0xb9 DUP3
0xba DUP1
0xbb DUP3
0xbc DUP5
0xbd CALLDATACOPY
0xbe POP
0xbf SWAP5
0xc0 SWAP7
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 POP
0xc5 POP
0xc6 POP
0xc7 POP
0xc8 PUSH1 0x40
0xca DUP1
0xcb MLOAD
0xcc PUSH1 0x20
0xce DUP2
0xcf DUP2
0xd0 ADD
0xd1 DUP4
0xd2 MSTORE
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 DUP4
0xd7 MSTORE
0xd8 CALLER
0xd9 PUSH1 0x1
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SUB
0xe1 AND
0xe2 DUP2
0xe3 MSTORE
0xe4 PUSH1 0x1
0xe6 DUP1
0xe7 DUP4
0xe8 MSTORE
0xe9 SWAP4
0xea DUP2
0xeb SHA3
0xec DUP6
0xed MLOAD
0xee SWAP1
0xef DUP6
0xf0 ADD
0xf1 DUP1
0xf2 SLOAD
0xf3 DUP2
0xf4 DUP5
0xf5 MSTORE
0xf6 SWAP3
0xf7 DUP5
0xf8 SWAP1
0xf9 SHA3
0xfa SWAP5
0xfb SWAP6
0xfc SWAP1
0xfd SWAP5
0xfe PUSH1 0x2
0x100 SWAP2
0x101 DUP5
0x102 AND
0x103 ISZERO
0x104 PUSH2 0x100
0x107 MUL
0x108 PUSH1 0x0
0x10a NOT
0x10b ADD
0x10c SWAP1
0x10d SWAP4
0x10e AND
0x10f DIV
0x110 PUSH1 0x1f
0x112 SWAP1
0x113 DUP2
0x114 ADD
0x115 DUP5
0x116 SWAP1
0x117 DIV
0x118 DUP4
0x119 ADD
0x11a SWAP4
0x11b SWAP2
0x11c SWAP3
0x11d SWAP2
0x11e DUP8
0x11f ADD
0x120 SWAP1
0x121 DUP4
0x122 SWAP1
0x123 LT
0x124 PUSH2 0x3d3
0x127 JUMPI
---
0x82: JUMPDEST 
0x83: V41 = 0x40
0x86: V42 = M[0x40]
0x87: V43 = 0x20
0x89: V44 = 0x4
0x8c: V45 = CALLDATALOAD 0x4
0x8f: V46 = ADD 0x4 V45
0x90: V47 = CALLDATALOAD V46
0x91: V48 = 0x1f
0x94: V49 = ADD V47 0x1f
0x97: V50 = DIV V49 0x20
0x99: V51 = MUL 0x20 V50
0x9b: V52 = ADD V42 V51
0x9d: V53 = ADD 0x20 V52
0xa0: M[0x40] = V53
0xa3: M[V42] = V47
0xa4: V54 = 0x322
0xaa: V55 = 0x24
0xb1: V56 = ADD 0x24 V45
0xb7: V57 = ADD V42 0x20
0xbd: CALLDATACOPY V57 V56 V47
0xc8: V58 = 0x40
0xcb: V59 = M[0x40]
0xcc: V60 = 0x20
0xd0: V61 = ADD 0x20 V59
0xd2: M[0x40] = V61
0xd3: V62 = 0x0
0xd7: M[V59] = 0x0
0xd8: V63 = CALLER
0xd9: V64 = 0x1
0xdb: V65 = 0xa0
0xdd: V66 = 0x2
0xdf: V67 = EXP 0x2 0xa0
0xe0: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xe3: M[0x0] = V69
0xe4: V70 = 0x1
0xe8: M[0x20] = 0x1
0xeb: V71 = SHA3 0x0 0x40
0xed: V72 = M[V42]
0xf0: V73 = ADD 0x1 V71
0xf2: V74 = S[V73]
0xf5: M[0x0] = V73
0xf9: V75 = SHA3 0x0 0x20
0xfe: V76 = 0x2
0x102: V77 = AND V74 0x1
0x103: V78 = ISZERO V77
0x104: V79 = 0x100
0x107: V80 = MUL 0x100 V78
0x108: V81 = 0x0
0x10a: V82 = NOT 0x0
0x10b: V83 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V80
0x10e: V84 = AND V74 V83
0x10f: V85 = DIV V84 0x2
0x110: V86 = 0x1f
0x114: V87 = ADD 0x1f V85
0x117: V88 = DIV V87 0x20
0x119: V89 = ADD V75 V88
0x11f: V90 = ADD V42 0x20
0x123: V91 = LT 0x1f V72
0x124: V92 = 0x3d3
0x127: JUMPI 0x3d3 V91
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x322, V42, V59, V73, V89, V72, V75, V90]
Exit stack: [V10, 0x322, V42, V59, V73, V89, V72, V75, V90]

================================

Block 0x128
[0x128:0x133]
---
Predecessors: [0x82]
Successors: [0x134]
---
0x128 DUP1
0x129 MLOAD
0x12a PUSH1 0xff
0x12c NOT
0x12d AND
0x12e DUP4
0x12f DUP1
0x130 ADD
0x131 OR
0x132 DUP6
0x133 SSTORE
---
0x129: V93 = M[V90]
0x12a: V94 = 0xff
0x12c: V95 = NOT 0xff
0x12d: V96 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V93
0x130: V97 = ADD V72 V72
0x131: V98 = OR V97 V96
0x133: S[V73] = V98
---
Entry stack: [V10, 0x322, V42, V59, V73, V89, V72, V75, V90]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x322, V42, V59, V73, V89, V72, V75, V90]

================================

Block 0x134
[0x134:0x13b]
---
Predecessors: [0x128, 0x3d3, 0x3e5]
Successors: [0x13c]
---
0x134 JUMPDEST
0x135 POP
0x136 PUSH2 0x403
0x139 SWAP3
0x13a SWAP2
0x13b POP
---
0x134: JUMPDEST 
0x136: V99 = 0x403
---
Entry stack: [V10, 0x322, V42, V59, V73, V89, S2, S1, S0]
Stack pops: 4
Stack additions: [0x403, S3, S1]
Exit stack: [V10, 0x322, V42, V59, V73, 0x403, V89, S1]

================================

Block 0x13c
[0x13c:0x144]
---
Predecessors: [0x134, 0x145]
Successors: [0x145, 0x4ae]
---
0x13c JUMPDEST
0x13d DUP1
0x13e DUP3
0x13f GT
0x140 ISZERO
0x141 PUSH2 0x4ae
0x144 JUMPI
---
0x13c: JUMPDEST 
0x13f: V100 = GT V89 S0
0x140: V101 = ISZERO V100
0x141: V102 = 0x4ae
0x144: JUMPI 0x4ae V101
---
Entry stack: [V10, 0x322, V42, V59, V73, 0x403, V89, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x322, V42, V59, V73, 0x403, V89, S0]

================================

Block 0x145
[0x145:0x14f]
---
Predecessors: [0x13c]
Successors: [0x13c]
---
0x145 PUSH1 0x0
0x147 DUP2
0x148 SSTORE
0x149 PUSH1 0x1
0x14b ADD
0x14c PUSH2 0x13c
0x14f JUMP
---
0x145: V103 = 0x0
0x148: S[S0] = 0x0
0x149: V104 = 0x1
0x14b: V105 = ADD 0x1 S0
0x14c: V106 = 0x13c
0x14f: JUMP 0x13c
---
Entry stack: [V10, 0x322, V42, V59, V73, 0x403, V89, S0]
Stack pops: 1
Stack additions: [V105]
Exit stack: [V10, 0x322, V42, V59, V73, 0x403, V89, V105]

================================

Block 0x150
[0x150:0x1b0]
---
Predecessors: [0x1f]
Successors: [0x31e]
---
0x150 JUMPDEST
0x151 PUSH2 0x31e
0x154 CALLER
0x155 PUSH1 0x1
0x157 PUSH1 0xa0
0x159 PUSH1 0x2
0x15b EXP
0x15c SUB
0x15d AND
0x15e PUSH1 0x0
0x160 DUP2
0x161 DUP2
0x162 MSTORE
0x163 PUSH1 0x1
0x165 PUSH1 0x20
0x167 MSTORE
0x168 PUSH1 0x40
0x16a DUP1
0x16b DUP3
0x16c SHA3
0x16d SLOAD
0x16e SWAP1
0x16f MLOAD
0x170 PUSH3 0x493e0
0x174 SWAP3
0x175 DUP2
0x176 DUP2
0x177 DUP2
0x178 DUP6
0x179 DUP9
0x17a DUP9
0x17b CALL
0x17c SWAP4
0x17d POP
0x17e POP
0x17f POP
0x180 POP
0x181 POP
0x182 PUSH1 0x0
0x184 PUSH1 0x1
0x186 PUSH1 0x0
0x188 POP
0x189 PUSH1 0x0
0x18b CALLER
0x18c PUSH1 0x1
0x18e PUSH1 0xa0
0x190 PUSH1 0x2
0x192 EXP
0x193 SUB
0x194 AND
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a SWAP1
0x19b DUP2
0x19c MSTORE
0x19d PUSH1 0x20
0x19f ADD
0x1a0 PUSH1 0x0
0x1a2 SHA3
0x1a3 PUSH1 0x0
0x1a5 POP
0x1a6 PUSH1 0x0
0x1a8 ADD
0x1a9 PUSH1 0x0
0x1ab POP
0x1ac DUP2
0x1ad SWAP1
0x1ae SSTORE
0x1af POP
0x1b0 JUMP
---
0x150: JUMPDEST 
0x151: V107 = 0x31e
0x154: V108 = CALLER
0x155: V109 = 0x1
0x157: V110 = 0xa0
0x159: V111 = 0x2
0x15b: V112 = EXP 0x2 0xa0
0x15c: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15d: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x15e: V115 = 0x0
0x162: M[0x0] = V114
0x163: V116 = 0x1
0x165: V117 = 0x20
0x167: M[0x20] = 0x1
0x168: V118 = 0x40
0x16c: V119 = SHA3 0x0 0x40
0x16d: V120 = S[V119]
0x16f: V121 = M[0x40]
0x170: V122 = 0x493e0
0x17b: V123 = CALL 0x493e0 V114 V120 V121 0x0 V121 0x0
0x182: V124 = 0x0
0x184: V125 = 0x1
0x186: V126 = 0x0
0x189: V127 = 0x0
0x18b: V128 = CALLER
0x18c: V129 = 0x1
0x18e: V130 = 0xa0
0x190: V131 = 0x2
0x192: V132 = EXP 0x2 0xa0
0x193: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x196: M[0x0] = V134
0x197: V135 = 0x20
0x199: V136 = ADD 0x20 0x0
0x19c: M[0x20] = 0x1
0x19d: V137 = 0x20
0x19f: V138 = ADD 0x20 0x20
0x1a0: V139 = 0x0
0x1a2: V140 = SHA3 0x0 0x40
0x1a3: V141 = 0x0
0x1a6: V142 = 0x0
0x1a8: V143 = ADD 0x0 V140
0x1a9: V144 = 0x0
0x1ae: S[V143] = 0x0
0x1b0: JUMP 0x31e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b1
[0x1b1:0x1e7]
---
Predecessors: [0x2a]
Successors: [0x1e8, 0x4b2]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x31e
0x1b5 PUSH1 0x0
0x1b7 DUP1
0x1b8 SLOAD
0x1b9 PUSH1 0x1
0x1bb PUSH1 0xa0
0x1bd PUSH1 0x2
0x1bf EXP
0x1c0 SUB
0x1c1 AND
0x1c2 DUP1
0x1c3 DUP3
0x1c4 MSTORE
0x1c5 PUSH1 0x2
0x1c7 PUSH1 0x20
0x1c9 MSTORE
0x1ca PUSH1 0x40
0x1cc DUP1
0x1cd DUP4
0x1ce SHA3
0x1cf SLOAD
0x1d0 SWAP1
0x1d1 MLOAD
0x1d2 SWAP2
0x1d3 SWAP3
0x1d4 SWAP2
0x1d5 DUP3
0x1d6 DUP2
0x1d7 DUP2
0x1d8 DUP2
0x1d9 DUP6
0x1da DUP9
0x1db DUP4
0x1dc CALL
0x1dd SWAP4
0x1de POP
0x1df POP
0x1e0 POP
0x1e1 POP
0x1e2 ISZERO
0x1e3 ISZERO
0x1e4 PUSH2 0x4b2
0x1e7 JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V145 = 0x31e
0x1b5: V146 = 0x0
0x1b8: V147 = S[0x0]
0x1b9: V148 = 0x1
0x1bb: V149 = 0xa0
0x1bd: V150 = 0x2
0x1bf: V151 = EXP 0x2 0xa0
0x1c0: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c1: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x1c4: M[0x0] = V153
0x1c5: V154 = 0x2
0x1c7: V155 = 0x20
0x1c9: M[0x20] = 0x2
0x1ca: V156 = 0x40
0x1ce: V157 = SHA3 0x0 0x40
0x1cf: V158 = S[V157]
0x1d1: V159 = M[0x40]
0x1dc: V160 = CALL 0x0 V153 V158 V159 0x0 V159 0x0
0x1e2: V161 = ISZERO V160
0x1e3: V162 = ISZERO V161
0x1e4: V163 = 0x4b2
0x1e7: JUMPI 0x4b2 V162
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31e]
Exit stack: [V10, 0x31e]

================================

Block 0x1e8
[0x1e8:0x1eb]
---
Predecessors: [0x1b1]
Successors: []
---
0x1e8 PUSH2 0x2
0x1eb JUMP
---
0x1e8: V164 = 0x2
0x1eb: THROW 
---
Entry stack: [V10, 0x31e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x31e]

================================

Block 0x1ec
[0x1ec:0x208]
---
Predecessors: [0x35]
Successors: [0x209]
---
0x1ec JUMPDEST
0x1ed PUSH2 0x390
0x1f0 CALLER
0x1f1 PUSH1 0x1
0x1f3 PUSH1 0xa0
0x1f5 PUSH1 0x2
0x1f7 EXP
0x1f8 SUB
0x1f9 AND
0x1fa PUSH1 0x0
0x1fc SWAP1
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x1
0x201 PUSH1 0x20
0x203 MSTORE
0x204 PUSH1 0x40
0x206 SWAP1
0x207 SHA3
0x208 SLOAD
---
0x1ec: JUMPDEST 
0x1ed: V165 = 0x390
0x1f0: V166 = CALLER
0x1f1: V167 = 0x1
0x1f3: V168 = 0xa0
0x1f5: V169 = 0x2
0x1f7: V170 = EXP 0x2 0xa0
0x1f8: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f9: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x1fa: V173 = 0x0
0x1fe: M[0x0] = V172
0x1ff: V174 = 0x1
0x201: V175 = 0x20
0x203: M[0x20] = 0x1
0x204: V176 = 0x40
0x207: V177 = SHA3 0x0 0x40
0x208: V178 = S[V177]
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x390, V178]
Exit stack: [V10, 0x390, V178]

================================

Block 0x209
[0x209:0x20b]
---
Predecessors: [0x1ec, 0x263]
Successors: [0x390, 0x3a2]
---
0x209 JUMPDEST
0x20a SWAP1
0x20b JUMP
---
0x209: JUMPDEST 
0x20b: JUMP {0x390, 0x3a2}
---
Entry stack: [V10, {0x390, 0x3a2}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x20c
[0x20c:0x227]
---
Predecessors: [0x40]
Successors: [0x228, 0x320]
---
0x20c JUMPDEST
0x20d PUSH2 0x31e
0x210 PUSH1 0x0
0x212 SLOAD
0x213 PUSH1 0x1
0x215 PUSH1 0xa0
0x217 PUSH1 0x2
0x219 EXP
0x21a SUB
0x21b SWAP1
0x21c DUP2
0x21d AND
0x21e CALLER
0x21f SWAP1
0x220 SWAP2
0x221 AND
0x222 EQ
0x223 ISZERO
0x224 PUSH2 0x320
0x227 JUMPI
---
0x20c: JUMPDEST 
0x20d: V179 = 0x31e
0x210: V180 = 0x0
0x212: V181 = S[0x0]
0x213: V182 = 0x1
0x215: V183 = 0xa0
0x217: V184 = 0x2
0x219: V185 = EXP 0x2 0xa0
0x21a: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21d: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x21e: V188 = CALLER
0x221: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x222: V190 = EQ V189 V187
0x223: V191 = ISZERO V190
0x224: V192 = 0x320
0x227: JUMPI 0x320 V191
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31e]
Exit stack: [V10, 0x31e]

================================

Block 0x228
[0x228:0x25e]
---
Predecessors: [0x20c]
Successors: [0x25f, 0x4fb]
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b SLOAD
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 SWAP1
0x235 DUP2
0x236 AND
0x237 DUP3
0x238 MSTORE
0x239 PUSH1 0x2
0x23b PUSH1 0x20
0x23d MSTORE
0x23e PUSH1 0x40
0x240 DUP1
0x241 DUP4
0x242 SHA3
0x243 SLOAD
0x244 SWAP1
0x245 MLOAD
0x246 CALLER
0x247 SWAP1
0x248 SWAP3
0x249 AND
0x24a SWAP3
0x24b SWAP2
0x24c DUP3
0x24d DUP2
0x24e DUP2
0x24f DUP2
0x250 DUP6
0x251 DUP9
0x252 DUP4
0x253 CALL
0x254 SWAP4
0x255 POP
0x256 POP
0x257 POP
0x258 POP
0x259 ISZERO
0x25a ISZERO
0x25b PUSH2 0x4fb
0x25e JUMPI
---
0x228: V193 = 0x0
0x22b: V194 = S[0x0]
0x22c: V195 = 0x1
0x22e: V196 = 0xa0
0x230: V197 = 0x2
0x232: V198 = EXP 0x2 0xa0
0x233: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x238: M[0x0] = V200
0x239: V201 = 0x2
0x23b: V202 = 0x20
0x23d: M[0x20] = 0x2
0x23e: V203 = 0x40
0x242: V204 = SHA3 0x0 0x40
0x243: V205 = S[V204]
0x245: V206 = M[0x40]
0x246: V207 = CALLER
0x249: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x253: V209 = CALL 0x0 V208 V205 V206 0x0 V206 0x0
0x259: V210 = ISZERO V209
0x25a: V211 = ISZERO V210
0x25b: V212 = 0x4fb
0x25e: JUMPI 0x4fb V211
---
Entry stack: [V10, 0x31e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x31e]

================================

Block 0x25f
[0x25f:0x262]
---
Predecessors: [0x228]
Successors: []
---
0x25f PUSH2 0x2
0x262 JUMP
---
0x25f: V213 = 0x2
0x262: THROW 
---
Entry stack: [V10, 0x31e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x31e]

================================

Block 0x263
[0x263:0x276]
---
Predecessors: [0x4b]
Successors: [0x209]
---
0x263 JUMPDEST
0x264 PUSH2 0x3a2
0x267 PUSH1 0x0
0x269 SLOAD
0x26a PUSH1 0x1
0x26c PUSH1 0xa0
0x26e PUSH1 0x2
0x270 EXP
0x271 SUB
0x272 AND
0x273 PUSH2 0x209
0x276 JUMP
---
0x263: JUMPDEST 
0x264: V214 = 0x3a2
0x267: V215 = 0x0
0x269: V216 = S[0x0]
0x26a: V217 = 0x1
0x26c: V218 = 0xa0
0x26e: V219 = 0x2
0x270: V220 = EXP 0x2 0xa0
0x271: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x272: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x273: V223 = 0x209
0x276: JUMP 0x209
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3a2, V222]
Exit stack: [V10, 0x3a2, V222]

================================

Block 0x277
[0x277:0x296]
---
Predecessors: [0x56]
Successors: [0x297, 0x319]
---
0x277 JUMPDEST
0x278 PUSH2 0x3bf
0x27b PUSH1 0x4
0x27d CALLDATALOAD
0x27e PUSH1 0x0
0x280 DUP1
0x281 SLOAD
0x282 PUSH1 0x1
0x284 PUSH1 0xa0
0x286 PUSH1 0x2
0x288 EXP
0x289 SUB
0x28a SWAP1
0x28b DUP2
0x28c AND
0x28d CALLER
0x28e SWAP1
0x28f SWAP2
0x290 AND
0x291 EQ
0x292 ISZERO
0x293 PUSH2 0x319
0x296 JUMPI
---
0x277: JUMPDEST 
0x278: V224 = 0x3bf
0x27b: V225 = 0x4
0x27d: V226 = CALLDATALOAD 0x4
0x27e: V227 = 0x0
0x281: V228 = S[0x0]
0x282: V229 = 0x1
0x284: V230 = 0xa0
0x286: V231 = 0x2
0x288: V232 = EXP 0x2 0xa0
0x289: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28c: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x28d: V235 = CALLER
0x290: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x291: V237 = EQ V236 V234
0x292: V238 = ISZERO V237
0x293: V239 = 0x319
0x296: JUMPI 0x319 V238
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3bf, V226, 0x0]
Exit stack: [V10, 0x3bf, V226, 0x0]

================================

Block 0x297
[0x297:0x2ac]
---
Predecessors: [0x277]
Successors: [0x2ad, 0x516]
---
0x297 DUP1
0x298 SLOAD
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d PUSH1 0x2
0x29f EXP
0x2a0 SUB
0x2a1 SWAP1
0x2a2 DUP2
0x2a3 AND
0x2a4 CALLER
0x2a5 SWAP1
0x2a6 SWAP2
0x2a7 AND
0x2a8 EQ
0x2a9 PUSH2 0x516
0x2ac JUMPI
---
0x298: V240 = S[0x0]
0x299: V241 = 0x1
0x29b: V242 = 0xa0
0x29d: V243 = 0x2
0x29f: V244 = EXP 0x2 0xa0
0x2a0: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a3: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x2a4: V247 = CALLER
0x2a7: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x2a8: V249 = EQ V248 V246
0x2a9: V250 = 0x516
0x2ac: JUMPI 0x516 V249
---
Entry stack: [V10, 0x3bf, V226, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3bf, V226, 0x0]

================================

Block 0x2ad
[0x2ad:0x2b0]
---
Predecessors: [0x297]
Successors: [0x319]
---
0x2ad PUSH2 0x319
0x2b0 JUMP
---
0x2ad: V251 = 0x319
0x2b0: JUMP 0x319
---
Entry stack: [V10, 0x3bf, V226, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3bf, V226, 0x0]

================================

Block 0x2b1
[0x2b1:0x2b4]
---
Predecessors: [0x61]
Successors: [0x2b5]
---
0x2b1 JUMPDEST
0x2b2 PUSH2 0x31e
---
0x2b1: JUMPDEST 
0x2b2: V252 = 0x31e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31e]
Exit stack: [V10, 0x31e]

================================

Block 0x2b5
[0x2b5:0x2f8]
---
Predecessors: [0x77, 0x2b1]
Successors: [0x31e, 0x320]
---
0x2b5 JUMPDEST
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 SLOAD
0x2ba PUSH1 0x1
0x2bc PUSH1 0xa0
0x2be PUSH1 0x2
0x2c0 EXP
0x2c1 SUB
0x2c2 SWAP1
0x2c3 DUP2
0x2c4 AND
0x2c5 DUP3
0x2c6 MSTORE
0x2c7 PUSH1 0x2
0x2c9 PUSH1 0x20
0x2cb SWAP1
0x2cc DUP2
0x2cd MSTORE
0x2ce PUSH1 0x40
0x2d0 DUP1
0x2d1 DUP5
0x2d2 SHA3
0x2d3 DUP1
0x2d4 SLOAD
0x2d5 PUSH1 0xa
0x2d7 CALLVALUE
0x2d8 SWAP1
0x2d9 DUP2
0x2da DIV
0x2db SWAP2
0x2dc DUP3
0x2dd ADD
0x2de SWAP1
0x2df SWAP3
0x2e0 SSTORE
0x2e1 CALLER
0x2e2 SWAP1
0x2e3 SWAP5
0x2e4 AND
0x2e5 DUP6
0x2e6 MSTORE
0x2e7 PUSH1 0x1
0x2e9 SWAP1
0x2ea SWAP3
0x2eb MSTORE
0x2ec SWAP1
0x2ed SWAP3
0x2ee SHA3
0x2ef DUP1
0x2f0 SLOAD
0x2f1 SWAP2
0x2f2 SWAP1
0x2f3 SWAP3
0x2f4 SUB
0x2f5 ADD
0x2f6 SWAP1
0x2f7 SSTORE
0x2f8 JUMP
---
0x2b5: JUMPDEST 
0x2b6: V253 = 0x0
0x2b9: V254 = S[0x0]
0x2ba: V255 = 0x1
0x2bc: V256 = 0xa0
0x2be: V257 = 0x2
0x2c0: V258 = EXP 0x2 0xa0
0x2c1: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c4: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x2c6: M[0x0] = V260
0x2c7: V261 = 0x2
0x2c9: V262 = 0x20
0x2cd: M[0x20] = 0x2
0x2ce: V263 = 0x40
0x2d2: V264 = SHA3 0x0 0x40
0x2d4: V265 = S[V264]
0x2d5: V266 = 0xa
0x2d7: V267 = CALLVALUE
0x2da: V268 = DIV V267 0xa
0x2dd: V269 = ADD V268 V265
0x2e0: S[V264] = V269
0x2e1: V270 = CALLER
0x2e4: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x2e6: M[0x0] = V271
0x2e7: V272 = 0x1
0x2eb: M[0x20] = 0x1
0x2ee: V273 = SHA3 0x0 0x40
0x2f0: V274 = S[V273]
0x2f4: V275 = SUB V267 V268
0x2f5: V276 = ADD V275 V274
0x2f7: S[V273] = V276
0x2f8: JUMP {0x31e, 0x320}
---
Entry stack: [V10, S1, {0x31e, 0x320}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x2f9
[0x2f9:0x318]
---
Predecessors: [0x6c]
Successors: [0x319]
---
0x2f9 JUMPDEST
0x2fa PUSH2 0x390
0x2fd PUSH1 0x4
0x2ff CALLDATALOAD
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 DUP2
0x309 AND
0x30a PUSH1 0x0
0x30c SWAP1
0x30d DUP2
0x30e MSTORE
0x30f PUSH1 0x1
0x311 PUSH1 0x20
0x313 MSTORE
0x314 PUSH1 0x40
0x316 SWAP1
0x317 SHA3
0x318 SLOAD
---
0x2f9: JUMPDEST 
0x2fa: V277 = 0x390
0x2fd: V278 = 0x4
0x2ff: V279 = CALLDATALOAD 0x4
0x300: V280 = 0x1
0x302: V281 = 0xa0
0x304: V282 = 0x2
0x306: V283 = EXP 0x2 0xa0
0x307: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x309: V285 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x30a: V286 = 0x0
0x30e: M[0x0] = V285
0x30f: V287 = 0x1
0x311: V288 = 0x20
0x313: M[0x20] = 0x1
0x314: V289 = 0x40
0x317: V290 = SHA3 0x0 0x40
0x318: V291 = S[V290]
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x390, V279, V291]
Exit stack: [V10, 0x390, V279, V291]

================================

Block 0x319
[0x319:0x31d]
---
Predecessors: [0x277, 0x2ad, 0x2f9, 0x49b, 0x516]
Successors: [0x322, 0x390, 0x3bf]
---
0x319 JUMPDEST
0x31a SWAP2
0x31b SWAP1
0x31c POP
0x31d JUMP
---
0x319: JUMPDEST 
0x31d: JUMP {0x322, 0x390, 0x3bf}
---
Entry stack: [V10, {0x322, 0x390, 0x3bf}, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x31e
[0x31e:0x31f]
---
Predecessors: [0x150, 0x2b5, 0x320, 0x4b2, 0x4fb]
Successors: []
---
0x31e JUMPDEST
0x31f STOP
---
0x31e: JUMPDEST 
0x31f: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x320
[0x320:0x321]
---
Predecessors: [0x20c, 0x2b5]
Successors: [0x31e]
---
0x320 JUMPDEST
0x321 JUMP
---
0x320: JUMPDEST 
0x321: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x322
[0x322:0x368]
---
Predecessors: [0x319]
Successors: [0x369, 0x382]
---
0x322 JUMPDEST
0x323 PUSH1 0x40
0x325 MLOAD
0x326 DUP1
0x327 DUP1
0x328 PUSH1 0x20
0x32a ADD
0x32b DUP3
0x32c DUP2
0x32d SUB
0x32e DUP3
0x32f MSTORE
0x330 DUP4
0x331 DUP2
0x332 DUP2
0x333 MLOAD
0x334 DUP2
0x335 MSTORE
0x336 PUSH1 0x20
0x338 ADD
0x339 SWAP2
0x33a POP
0x33b DUP1
0x33c MLOAD
0x33d SWAP1
0x33e PUSH1 0x20
0x340 ADD
0x341 SWAP1
0x342 DUP1
0x343 DUP4
0x344 DUP4
0x345 DUP3
0x346 SWAP1
0x347 PUSH1 0x0
0x349 PUSH1 0x4
0x34b PUSH1 0x20
0x34d DUP5
0x34e PUSH1 0x1f
0x350 ADD
0x351 DIV
0x352 PUSH1 0xf
0x354 MUL
0x355 PUSH1 0x3
0x357 ADD
0x358 CALL
0x359 POP
0x35a SWAP1
0x35b POP
0x35c SWAP1
0x35d DUP2
0x35e ADD
0x35f SWAP1
0x360 PUSH1 0x1f
0x362 AND
0x363 DUP1
0x364 ISZERO
0x365 PUSH2 0x382
0x368 JUMPI
---
0x322: JUMPDEST 
0x323: V292 = 0x40
0x325: V293 = M[0x40]
0x328: V294 = 0x20
0x32a: V295 = ADD 0x20 V293
0x32d: V296 = SUB V295 V293
0x32f: M[V293] = V296
0x333: V297 = M[S0]
0x335: M[V295] = V297
0x336: V298 = 0x20
0x338: V299 = ADD 0x20 V295
0x33c: V300 = M[S0]
0x33e: V301 = 0x20
0x340: V302 = ADD 0x20 S0
0x347: V303 = 0x0
0x349: V304 = 0x4
0x34b: V305 = 0x20
0x34e: V306 = 0x1f
0x350: V307 = ADD 0x1f V300
0x351: V308 = DIV V307 0x20
0x352: V309 = 0xf
0x354: V310 = MUL 0xf V308
0x355: V311 = 0x3
0x357: V312 = ADD 0x3 V310
0x358: V313 = CALL V312 0x4 0x0 V302 V300 V299 V300
0x35e: V314 = ADD V300 V299
0x360: V315 = 0x1f
0x362: V316 = AND 0x1f V300
0x364: V317 = ISZERO V316
0x365: V318 = 0x382
0x368: JUMPI 0x382 V317
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V293, V293, V314, V316]
Exit stack: [V10, S0, V293, V293, V314, V316]

================================

Block 0x369
[0x369:0x381]
---
Predecessors: [0x322]
Successors: [0x382]
---
0x369 DUP1
0x36a DUP3
0x36b SUB
0x36c DUP1
0x36d MLOAD
0x36e PUSH1 0x1
0x370 DUP4
0x371 PUSH1 0x20
0x373 SUB
0x374 PUSH2 0x100
0x377 EXP
0x378 SUB
0x379 NOT
0x37a AND
0x37b DUP2
0x37c MSTORE
0x37d PUSH1 0x20
0x37f ADD
0x380 SWAP2
0x381 POP
---
0x36b: V319 = SUB V314 V316
0x36d: V320 = M[V319]
0x36e: V321 = 0x1
0x371: V322 = 0x20
0x373: V323 = SUB 0x20 V316
0x374: V324 = 0x100
0x377: V325 = EXP 0x100 V323
0x378: V326 = SUB V325 0x1
0x379: V327 = NOT V326
0x37a: V328 = AND V327 V320
0x37c: M[V319] = V328
0x37d: V329 = 0x20
0x37f: V330 = ADD 0x20 V319
---
Entry stack: [V10, S4, V293, V293, V314, V316]
Stack pops: 2
Stack additions: [V330, S0]
Exit stack: [V10, S4, V293, V293, V330, V316]

================================

Block 0x382
[0x382:0x38f]
---
Predecessors: [0x322, 0x369]
Successors: []
---
0x382 JUMPDEST
0x383 POP
0x384 SWAP3
0x385 POP
0x386 POP
0x387 POP
0x388 PUSH1 0x40
0x38a MLOAD
0x38b DUP1
0x38c SWAP2
0x38d SUB
0x38e SWAP1
0x38f RETURN
---
0x382: JUMPDEST 
0x388: V331 = 0x40
0x38a: V332 = M[0x40]
0x38d: V333 = SUB S1 V332
0x38f: RETURN V332 V333
---
Entry stack: [V10, S4, V293, V293, S1, V316]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x390
[0x390:0x3a1]
---
Predecessors: [0x209, 0x319]
Successors: []
---
0x390 JUMPDEST
0x391 PUSH1 0x40
0x393 DUP1
0x394 MLOAD
0x395 SWAP2
0x396 DUP3
0x397 MSTORE
0x398 MLOAD
0x399 SWAP1
0x39a DUP2
0x39b SWAP1
0x39c SUB
0x39d PUSH1 0x20
0x39f ADD
0x3a0 SWAP1
0x3a1 RETURN
---
0x390: JUMPDEST 
0x391: V334 = 0x40
0x394: V335 = M[0x40]
0x397: M[V335] = S0
0x398: V336 = M[0x40]
0x39c: V337 = SUB V335 V336
0x39d: V338 = 0x20
0x39f: V339 = ADD 0x20 V337
0x3a1: RETURN V336 V339
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a2
[0x3a2:0x3be]
---
Predecessors: [0x209]
Successors: []
---
0x3a2 JUMPDEST
0x3a3 PUSH1 0x40
0x3a5 DUP1
0x3a6 MLOAD
0x3a7 PUSH1 0x1
0x3a9 PUSH1 0xa0
0x3ab PUSH1 0x2
0x3ad EXP
0x3ae SUB
0x3af SWAP3
0x3b0 SWAP1
0x3b1 SWAP3
0x3b2 AND
0x3b3 DUP3
0x3b4 MSTORE
0x3b5 MLOAD
0x3b6 SWAP1
0x3b7 DUP2
0x3b8 SWAP1
0x3b9 SUB
0x3ba PUSH1 0x20
0x3bc ADD
0x3bd SWAP1
0x3be RETURN
---
0x3a2: JUMPDEST 
0x3a3: V340 = 0x40
0x3a6: V341 = M[0x40]
0x3a7: V342 = 0x1
0x3a9: V343 = 0xa0
0x3ab: V344 = 0x2
0x3ad: V345 = EXP 0x2 0xa0
0x3ae: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b2: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3b4: M[V341] = V347
0x3b5: V348 = M[0x40]
0x3b9: V349 = SUB V341 V348
0x3ba: V350 = 0x20
0x3bc: V351 = ADD 0x20 V349
0x3be: RETURN V348 V351
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3bf
[0x3bf:0x3d2]
---
Predecessors: [0x319]
Successors: []
---
0x3bf JUMPDEST
0x3c0 PUSH1 0x40
0x3c2 DUP1
0x3c3 MLOAD
0x3c4 SWAP2
0x3c5 ISZERO
0x3c6 ISZERO
0x3c7 DUP3
0x3c8 MSTORE
0x3c9 MLOAD
0x3ca SWAP1
0x3cb DUP2
0x3cc SWAP1
0x3cd SUB
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 SWAP1
0x3d2 RETURN
---
0x3bf: JUMPDEST 
0x3c0: V352 = 0x40
0x3c3: V353 = M[0x40]
0x3c5: V354 = ISZERO S0
0x3c6: V355 = ISZERO V354
0x3c8: M[V353] = V355
0x3c9: V356 = M[0x40]
0x3cd: V357 = SUB V353 V356
0x3ce: V358 = 0x20
0x3d0: V359 = ADD 0x20 V357
0x3d2: RETURN V356 V359
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d3
[0x3d3:0x3e1]
---
Predecessors: [0x82]
Successors: [0x134, 0x3e2]
---
0x3d3 JUMPDEST
0x3d4 DUP3
0x3d5 DUP1
0x3d6 ADD
0x3d7 PUSH1 0x1
0x3d9 ADD
0x3da DUP6
0x3db SSTORE
0x3dc DUP3
0x3dd ISZERO
0x3de PUSH2 0x134
0x3e1 JUMPI
---
0x3d3: JUMPDEST 
0x3d6: V360 = ADD V72 V72
0x3d7: V361 = 0x1
0x3d9: V362 = ADD 0x1 V360
0x3db: S[V73] = V362
0x3dd: V363 = ISZERO V72
0x3de: V364 = 0x134
0x3e1: JUMPI 0x134 V363
---
Entry stack: [V10, 0x322, V42, V59, V73, V89, V72, V75, V90]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x322, V42, V59, V73, V89, V72, V75, V90]

================================

Block 0x3e2
[0x3e2:0x3e4]
---
Predecessors: [0x3d3]
Successors: [0x3e5]
---
0x3e2 SWAP2
0x3e3 DUP3
0x3e4 ADD
---
0x3e4: V365 = ADD V90 V72
---
Entry stack: [V10, 0x322, V42, V59, V73, V89, V72, V75, V90]
Stack pops: 3
Stack additions: [S0, S1, V365]
Exit stack: [V10, 0x322, V42, V59, V73, V89, V90, V75, V365]

================================

Block 0x3e5
[0x3e5:0x3ed]
---
Predecessors: [0x3e2, 0x3ee]
Successors: [0x134, 0x3ee]
---
0x3e5 JUMPDEST
0x3e6 DUP3
0x3e7 DUP2
0x3e8 GT
0x3e9 ISZERO
0x3ea PUSH2 0x134
0x3ed JUMPI
---
0x3e5: JUMPDEST 
0x3e8: V366 = GT V365 S2
0x3e9: V367 = ISZERO V366
0x3ea: V368 = 0x134
0x3ed: JUMPI 0x134 V367
---
Entry stack: [V10, 0x322, V42, V59, V73, V89, S2, S1, V365]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x322, V42, V59, V73, V89, S2, S1, V365]

================================

Block 0x3ee
[0x3ee:0x402]
---
Predecessors: [0x3e5]
Successors: [0x3e5]
---
0x3ee DUP3
0x3ef MLOAD
0x3f0 DUP3
0x3f1 PUSH1 0x0
0x3f3 POP
0x3f4 SSTORE
0x3f5 SWAP2
0x3f6 PUSH1 0x20
0x3f8 ADD
0x3f9 SWAP2
0x3fa SWAP1
0x3fb PUSH1 0x1
0x3fd ADD
0x3fe SWAP1
0x3ff PUSH2 0x3e5
0x402 JUMP
---
0x3ef: V369 = M[S2]
0x3f1: V370 = 0x0
0x3f4: S[S1] = V369
0x3f6: V371 = 0x20
0x3f8: V372 = ADD 0x20 S2
0x3fb: V373 = 0x1
0x3fd: V374 = ADD 0x1 S1
0x3ff: V375 = 0x3e5
0x402: JUMP 0x3e5
---
Entry stack: [V10, 0x322, V42, V59, V73, V89, S2, S1, V365]
Stack pops: 3
Stack additions: [V372, V374, S0]
Exit stack: [V10, 0x322, V42, V59, V73, V89, V372, V374, V365]

================================

Block 0x403
[0x403:0x481]
---
Predecessors: [0x4ae]
Successors: [0x482, 0x49b]
---
0x403 JUMPDEST
0x404 POP
0x405 POP
0x406 DUP2
0x407 SWAP1
0x408 POP
0x409 DUP1
0x40a POP
0x40b PUSH31 0x543f4e70cf8b41243ecbb7f551a6c7836ceac4d4564e9590ec3a5ba572f47e
0x42b CALLER
0x42c DUP3
0x42d PUSH1 0x40
0x42f MLOAD
0x430 DUP1
0x431 DUP4
0x432 PUSH1 0x1
0x434 PUSH1 0xa0
0x436 PUSH1 0x2
0x438 EXP
0x439 SUB
0x43a AND
0x43b DUP2
0x43c MSTORE
0x43d PUSH1 0x20
0x43f ADD
0x440 DUP1
0x441 PUSH1 0x20
0x443 ADD
0x444 DUP3
0x445 DUP2
0x446 SUB
0x447 DUP3
0x448 MSTORE
0x449 DUP4
0x44a DUP2
0x44b DUP2
0x44c MLOAD
0x44d DUP2
0x44e MSTORE
0x44f PUSH1 0x20
0x451 ADD
0x452 SWAP2
0x453 POP
0x454 DUP1
0x455 MLOAD
0x456 SWAP1
0x457 PUSH1 0x20
0x459 ADD
0x45a SWAP1
0x45b DUP1
0x45c DUP4
0x45d DUP4
0x45e DUP3
0x45f SWAP1
0x460 PUSH1 0x0
0x462 PUSH1 0x4
0x464 PUSH1 0x20
0x466 DUP5
0x467 PUSH1 0x1f
0x469 ADD
0x46a DIV
0x46b PUSH1 0xf
0x46d MUL
0x46e PUSH1 0x3
0x470 ADD
0x471 CALL
0x472 POP
0x473 SWAP1
0x474 POP
0x475 SWAP1
0x476 DUP2
0x477 ADD
0x478 SWAP1
0x479 PUSH1 0x1f
0x47b AND
0x47c DUP1
0x47d ISZERO
0x47e PUSH2 0x49b
0x481 JUMPI
---
0x403: JUMPDEST 
0x40b: V376 = 0x543f4e70cf8b41243ecbb7f551a6c7836ceac4d4564e9590ec3a5ba572f47e
0x42b: V377 = CALLER
0x42d: V378 = 0x40
0x42f: V379 = M[0x40]
0x432: V380 = 0x1
0x434: V381 = 0xa0
0x436: V382 = 0x2
0x438: V383 = EXP 0x2 0xa0
0x439: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43a: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x43c: M[V379] = V385
0x43d: V386 = 0x20
0x43f: V387 = ADD 0x20 V379
0x441: V388 = 0x20
0x443: V389 = ADD 0x20 V387
0x446: V390 = SUB V389 V379
0x448: M[V387] = V390
0x44c: V391 = M[V42]
0x44e: M[V389] = V391
0x44f: V392 = 0x20
0x451: V393 = ADD 0x20 V389
0x455: V394 = M[V42]
0x457: V395 = 0x20
0x459: V396 = ADD 0x20 V42
0x460: V397 = 0x0
0x462: V398 = 0x4
0x464: V399 = 0x20
0x467: V400 = 0x1f
0x469: V401 = ADD 0x1f V394
0x46a: V402 = DIV V401 0x20
0x46b: V403 = 0xf
0x46d: V404 = MUL 0xf V402
0x46e: V405 = 0x3
0x470: V406 = ADD 0x3 V404
0x471: V407 = CALL V406 0x4 0x0 V396 V394 V393 V394
0x477: V408 = ADD V394 V393
0x479: V409 = 0x1f
0x47b: V410 = AND 0x1f V394
0x47d: V411 = ISZERO V410
0x47e: V412 = 0x49b
0x481: JUMPI 0x49b V411
---
Entry stack: [V10, 0x322, V42, V59, V73, V89]
Stack pops: 4
Stack additions: [S3, S3, 0x543f4e70cf8b41243ecbb7f551a6c7836ceac4d4564e9590ec3a5ba572f47e, V377, S3, V379, V387, V408, V410]
Exit stack: [V10, 0x322, V42, V42, 0x543f4e70cf8b41243ecbb7f551a6c7836ceac4d4564e9590ec3a5ba572f47e, V377, V42, V379, V387, V408, V410]

================================

Block 0x482
[0x482:0x49a]
---
Predecessors: [0x403]
Successors: [0x49b]
---
0x482 DUP1
0x483 DUP3
0x484 SUB
0x485 DUP1
0x486 MLOAD
0x487 PUSH1 0x1
0x489 DUP4
0x48a PUSH1 0x20
0x48c SUB
0x48d PUSH2 0x100
0x490 EXP
0x491 SUB
0x492 NOT
0x493 AND
0x494 DUP2
0x495 MSTORE
0x496 PUSH1 0x20
0x498 ADD
0x499 SWAP2
0x49a POP
---
0x484: V413 = SUB V408 V410
0x486: V414 = M[V413]
0x487: V415 = 0x1
0x48a: V416 = 0x20
0x48c: V417 = SUB 0x20 V410
0x48d: V418 = 0x100
0x490: V419 = EXP 0x100 V417
0x491: V420 = SUB V419 0x1
0x492: V421 = NOT V420
0x493: V422 = AND V421 V414
0x495: M[V413] = V422
0x496: V423 = 0x20
0x498: V424 = ADD 0x20 V413
---
Entry stack: [V10, 0x322, V42, V42, 0x543f4e70cf8b41243ecbb7f551a6c7836ceac4d4564e9590ec3a5ba572f47e, V377, V42, V379, V387, V408, V410]
Stack pops: 2
Stack additions: [V424, S0]
Exit stack: [V10, 0x322, V42, V42, 0x543f4e70cf8b41243ecbb7f551a6c7836ceac4d4564e9590ec3a5ba572f47e, V377, V42, V379, V387, V424, V410]

================================

Block 0x49b
[0x49b:0x4ad]
---
Predecessors: [0x403, 0x482]
Successors: [0x319]
---
0x49b JUMPDEST
0x49c POP
0x49d SWAP4
0x49e POP
0x49f POP
0x4a0 POP
0x4a1 POP
0x4a2 PUSH1 0x40
0x4a4 MLOAD
0x4a5 DUP1
0x4a6 SWAP2
0x4a7 SUB
0x4a8 SWAP1
0x4a9 LOG1
0x4aa PUSH2 0x319
0x4ad JUMP
---
0x49b: JUMPDEST 
0x4a2: V425 = 0x40
0x4a4: V426 = M[0x40]
0x4a7: V427 = SUB S1 V426
0x4a9: LOG V426 V427 0x543f4e70cf8b41243ecbb7f551a6c7836ceac4d4564e9590ec3a5ba572f47e
0x4aa: V428 = 0x319
0x4ad: JUMP 0x319
---
Entry stack: [V10, 0x322, V42, V42, 0x543f4e70cf8b41243ecbb7f551a6c7836ceac4d4564e9590ec3a5ba572f47e, V377, V42, V379, V387, S1, V410]
Stack pops: 7
Stack additions: []
Exit stack: [V10, 0x322, V42, V42]

================================

Block 0x4ae
[0x4ae:0x4b1]
---
Predecessors: [0x13c]
Successors: [0x403]
---
0x4ae JUMPDEST
0x4af POP
0x4b0 SWAP1
0x4b1 JUMP
---
0x4ae: JUMPDEST 
0x4b1: JUMP 0x403
---
Entry stack: [V10, 0x322, V42, V59, V73, 0x403, V89, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x322, V42, V59, V73, V89]

================================

Block 0x4b2
[0x4b2:0x4fa]
---
Predecessors: [0x1b1]
Successors: [0x31e]
---
0x4b2 JUMPDEST
0x4b3 PUSH1 0x0
0x4b5 DUP1
0x4b6 SLOAD
0x4b7 PUSH1 0x1
0x4b9 PUSH1 0xa0
0x4bb PUSH1 0x2
0x4bd EXP
0x4be SUB
0x4bf SWAP1
0x4c0 DUP2
0x4c1 AND
0x4c2 DUP3
0x4c3 MSTORE
0x4c4 PUSH1 0x2
0x4c6 PUSH1 0x20
0x4c8 SWAP1
0x4c9 DUP2
0x4ca MSTORE
0x4cb PUSH1 0x40
0x4cd DUP1
0x4ce DUP5
0x4cf SHA3
0x4d0 DUP5
0x4d1 SWAP1
0x4d2 SSTORE
0x4d3 CALLER
0x4d4 SWAP1
0x4d5 SWAP3
0x4d6 AND
0x4d7 DUP1
0x4d8 DUP5
0x4d9 MSTORE
0x4da PUSH1 0x1
0x4dc SWAP1
0x4dd SWAP2
0x4de MSTORE
0x4df DUP2
0x4e0 DUP4
0x4e1 SHA3
0x4e2 SLOAD
0x4e3 SWAP2
0x4e4 MLOAD
0x4e5 SWAP1
0x4e6 SWAP3
0x4e7 PUSH3 0x493e0
0x4eb SWAP3
0x4ec SWAP2
0x4ed SWAP1
0x4ee DUP2
0x4ef DUP2
0x4f0 DUP2
0x4f1 DUP6
0x4f2 DUP9
0x4f3 DUP9
0x4f4 CALL
0x4f5 POP
0x4f6 POP
0x4f7 POP
0x4f8 POP
0x4f9 POP
0x4fa JUMP
---
0x4b2: JUMPDEST 
0x4b3: V429 = 0x0
0x4b6: V430 = S[0x0]
0x4b7: V431 = 0x1
0x4b9: V432 = 0xa0
0x4bb: V433 = 0x2
0x4bd: V434 = EXP 0x2 0xa0
0x4be: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c1: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x4c3: M[0x0] = V436
0x4c4: V437 = 0x2
0x4c6: V438 = 0x20
0x4ca: M[0x20] = 0x2
0x4cb: V439 = 0x40
0x4cf: V440 = SHA3 0x0 0x40
0x4d2: S[V440] = 0x0
0x4d3: V441 = CALLER
0x4d6: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x4d9: M[0x0] = V442
0x4da: V443 = 0x1
0x4de: M[0x20] = 0x1
0x4e1: V444 = SHA3 0x0 0x40
0x4e2: V445 = S[V444]
0x4e4: V446 = M[0x40]
0x4e7: V447 = 0x493e0
0x4f4: V448 = CALL 0x493e0 V442 V445 V446 0x0 V446 0x0
0x4fa: JUMP 0x31e
---
Entry stack: [V10, 0x31e]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x4fb
[0x4fb:0x515]
---
Predecessors: [0x228]
Successors: [0x31e]
---
0x4fb JUMPDEST
0x4fc PUSH1 0x0
0x4fe DUP1
0x4ff SLOAD
0x500 PUSH1 0x1
0x502 PUSH1 0xa0
0x504 PUSH1 0x2
0x506 EXP
0x507 SUB
0x508 AND
0x509 DUP2
0x50a MSTORE
0x50b PUSH1 0x2
0x50d PUSH1 0x20
0x50f MSTORE
0x510 PUSH1 0x40
0x512 DUP2
0x513 SHA3
0x514 SSTORE
0x515 JUMP
---
0x4fb: JUMPDEST 
0x4fc: V449 = 0x0
0x4ff: V450 = S[0x0]
0x500: V451 = 0x1
0x502: V452 = 0xa0
0x504: V453 = 0x2
0x506: V454 = EXP 0x2 0xa0
0x507: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x508: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x50a: M[0x0] = V456
0x50b: V457 = 0x2
0x50d: V458 = 0x20
0x50f: M[0x20] = 0x2
0x510: V459 = 0x40
0x513: V460 = SHA3 0x0 0x40
0x514: S[V460] = 0x0
0x515: JUMP 0x31e
---
Entry stack: [V10, 0x31e]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x516
[0x516:0x53c]
---
Predecessors: [0x297]
Successors: [0x319]
---
0x516 JUMPDEST
0x517 POP
0x518 PUSH1 0x0
0x51a DUP1
0x51b SLOAD
0x51c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x531 NOT
0x532 AND
0x533 DUP3
0x534 OR
0x535 SWAP1
0x536 SSTORE
0x537 PUSH1 0x1
0x539 PUSH2 0x319
0x53c JUMP
---
0x516: JUMPDEST 
0x518: V461 = 0x0
0x51b: V462 = S[0x0]
0x51c: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x531: V464 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x532: V465 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V462
0x534: V466 = OR V226 V465
0x536: S[0x0] = V466
0x537: V467 = 0x1
0x539: V468 = 0x319
0x53c: JUMP 0x319
---
Entry stack: [V10, 0x3bf, V226, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x3bf, V226, 0x1]

================================

Function 0:
Public function signature: 0x1c5d9faa
Entry block: 0x82
Exit block: 0x382
Body: 0x82, 0x128, 0x134, 0x13c, 0x145, 0x319, 0x322, 0x369, 0x382, 0x390, 0x3bf, 0x3d3, 0x3e2, 0x3e5, 0x3ee, 0x403, 0x482, 0x49b, 0x4ae

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x150
Exit block: 0x31e
Body: 0x150, 0x31e

Function 2:
Public function signature: 0x4ba6f28e
Entry block: 0x1b1
Exit block: 0x31e
Body: 0x1b1, 0x1e8, 0x31e, 0x4b2

Function 3:
Public function signature: 0x4c738909
Entry block: 0x1ec
Exit block: 0x390
Body: 0x1ec, 0x390

Function 4:
Public function signature: 0x9dade07d
Entry block: 0x20c
Exit block: 0x31e
Body: 0x20c, 0x228, 0x25f, 0x31e, 0x320, 0x4fb

Function 5:
Public function signature: 0x9ee1bd0f
Entry block: 0x263
Exit block: 0x3a2
Body: 0x263, 0x3a2

Function 6:
Public function signature: 0xa6f9dae1
Entry block: 0x277
Exit block: 0x382
Body: 0x277, 0x297, 0x2ad, 0x319, 0x322, 0x369, 0x382, 0x390, 0x3bf, 0x516

Function 7:
Public function signature: 0xdffeadd0
Entry block: 0x2b1
Exit block: 0x31e
Body: 0x2b1, 0x2b5, 0x31e, 0x320

Function 8:
Public function signature: 0xf8b2cb4f
Entry block: 0x2f9
Exit block: 0x382
Body: 0x2f9, 0x319, 0x322, 0x369, 0x382, 0x390, 0x3bf

Function 9:
Public fallback function
Entry block: 0x77
Exit block: 0x31e
Body: 0x77, 0x2b5, 0x31e, 0x320

