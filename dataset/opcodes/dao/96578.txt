Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x8f]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3ccfd60b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x8f
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3ccfd60b
0x3b: V13 = EQ V11 0x3ccfd60b
0x3c: V14 = 0x8f
0x3f: JUMPI 0x8f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xa4]
---
0x40 DUP1
0x41 PUSH4 0x43cce08e
0x46 EQ
0x47 PUSH2 0xa4
0x4a JUMPI
---
0x41: V15 = 0x43cce08e
0x46: V16 = EQ 0x43cce08e V11
0x47: V17 = 0xa4
0x4a: JUMPI 0xa4 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xcb]
---
0x4b DUP1
0x4c PUSH4 0x77052fba
0x51 EQ
0x52 PUSH2 0xcb
0x55 JUMPI
---
0x4c: V18 = 0x77052fba
0x51: V19 = EQ 0x77052fba V11
0x52: V20 = 0xcb
0x55: JUMPI 0xcb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xd6]
---
0x56 DUP1
0x57 PUSH4 0x8b7afe2e
0x5c EQ
0x5d PUSH2 0xd6
0x60 JUMPI
---
0x57: V21 = 0x8b7afe2e
0x5c: V22 = EQ 0x8b7afe2e V11
0x5d: V23 = 0xd6
0x60: JUMPI 0xd6 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xeb]
---
0x61 DUP1
0x62 PUSH4 0x8da5cb5b
0x67 EQ
0x68 PUSH2 0xeb
0x6b JUMPI
---
0x62: V24 = 0x8da5cb5b
0x67: V25 = EQ 0x8da5cb5b V11
0x68: V26 = 0xeb
0x6b: JUMPI 0xeb V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x11c]
---
0x6c DUP1
0x6d PUSH4 0xd4b83992
0x72 EQ
0x73 PUSH2 0x11c
0x76 JUMPI
---
0x6d: V27 = 0xd4b83992
0x72: V28 = EQ 0xd4b83992 V11
0x73: V29 = 0x11c
0x76: JUMPI 0x11c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x131]
---
0x77 DUP1
0x78 PUSH4 0xdb8d65f3
0x7d EQ
0x7e PUSH2 0x131
0x81 JUMPI
---
0x78: V30 = 0xdb8d65f3
0x7d: V31 = EQ 0xdb8d65f3 V11
0x7e: V32 = 0x131
0x81: JUMPI 0x131 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x146]
---
0x82 DUP1
0x83 PUSH4 0xdcf7bb5c
0x88 EQ
0x89 PUSH2 0x146
0x8c JUMPI
---
0x83: V33 = 0xdcf7bb5c
0x88: V34 = EQ 0xdcf7bb5c V11
0x89: V35 = 0x146
0x8c: JUMPI 0x146 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x0, 0x82, 0x1b8, 0x2c1, 0x3b5, 0x3d0]
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0xd]
Successors: [0x97, 0x9b]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 DUP1
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x8f: JUMPDEST 
0x90: V36 = CALLVALUE
0x92: V37 = ISZERO V36
0x93: V38 = 0x9b
0x96: JUMPI 0x9b V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x8f]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V39 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x9b
[0x9b:0xa3]
---
Predecessors: [0x8f]
Successors: [0x167]
---
0x9b JUMPDEST
0x9c POP
0x9d PUSH2 0x8d
0xa0 PUSH2 0x167
0xa3 JUMP
---
0x9b: JUMPDEST 
0x9d: V40 = 0x8d
0xa0: V41 = 0x167
0xa3: JUMP 0x167
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0xa4
[0xa4:0xab]
---
Predecessors: [0x40]
Successors: [0xac, 0xb0]
---
0xa4 JUMPDEST
0xa5 CALLVALUE
0xa6 DUP1
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa4: JUMPDEST 
0xa5: V42 = CALLVALUE
0xa7: V43 = ISZERO V42
0xa8: V44 = 0xb0
0xab: JUMPI 0xb0 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa4]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V45 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0xb0
[0xb0:0xb8]
---
Predecessors: [0xa4]
Successors: [0x1bb]
---
0xb0 JUMPDEST
0xb1 POP
0xb2 PUSH2 0xb9
0xb5 PUSH2 0x1bb
0xb8 JUMP
---
0xb0: JUMPDEST 
0xb2: V46 = 0xb9
0xb5: V47 = 0x1bb
0xb8: JUMP 0x1bb
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: [0xb9]
Exit stack: [V11, 0xb9]

================================

Block 0xb9
[0xb9:0xca]
---
Predecessors: [0x1bb, 0x2c6]
Successors: []
---
0xb9 JUMPDEST
0xba PUSH1 0x40
0xbc DUP1
0xbd MLOAD
0xbe SWAP2
0xbf DUP3
0xc0 MSTORE
0xc1 MLOAD
0xc2 SWAP1
0xc3 DUP2
0xc4 SWAP1
0xc5 SUB
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 SWAP1
0xca RETURN
---
0xb9: JUMPDEST 
0xba: V48 = 0x40
0xbd: V49 = M[0x40]
0xc0: M[V49] = S0
0xc1: V50 = M[0x40]
0xc5: V51 = SUB V49 V50
0xc6: V52 = 0x20
0xc8: V53 = ADD 0x20 V51
0xca: RETURN V50 V53
---
Entry stack: [V11, 0x8d, V56, 0x0, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8d, V56, 0x0, 0x0, S1]

================================

Block 0xcb
[0xcb:0xd5]
---
Predecessors: [0x4b]
Successors: [0x1cb]
---
0xcb JUMPDEST
0xcc PUSH2 0x8d
0xcf PUSH1 0x4
0xd1 CALLDATALOAD
0xd2 PUSH2 0x1cb
0xd5 JUMP
---
0xcb: JUMPDEST 
0xcc: V54 = 0x8d
0xcf: V55 = 0x4
0xd1: V56 = CALLDATALOAD 0x4
0xd2: V57 = 0x1cb
0xd5: JUMP 0x1cb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d, V56]
Exit stack: [V11, 0x8d, V56]

================================

Block 0xd6
[0xd6:0xdd]
---
Predecessors: [0x56]
Successors: [0xde, 0xe2]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 DUP1
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd6: JUMPDEST 
0xd7: V58 = CALLVALUE
0xd9: V59 = ISZERO V58
0xda: V60 = 0xe2
0xdd: JUMPI 0xe2 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd6]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V61 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xe2
[0xe2:0xea]
---
Predecessors: [0xd6]
Successors: [0x2c6]
---
0xe2 JUMPDEST
0xe3 POP
0xe4 PUSH2 0xb9
0xe7 PUSH2 0x2c6
0xea JUMP
---
0xe2: JUMPDEST 
0xe4: V62 = 0xb9
0xe7: V63 = 0x2c6
0xea: JUMP 0x2c6
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xb9]
Exit stack: [V11, 0xb9]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0x61]
Successors: [0xf3, 0xf7]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed DUP1
0xee ISZERO
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xeb: JUMPDEST 
0xec: V64 = CALLVALUE
0xee: V65 = ISZERO V64
0xef: V66 = 0xf7
0xf2: JUMPI 0xf7 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, V64]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xeb]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V67 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V11, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64]

================================

Block 0xf7
[0xf7:0xff]
---
Predecessors: [0xeb]
Successors: [0x2cb]
---
0xf7 JUMPDEST
0xf8 POP
0xf9 PUSH2 0x100
0xfc PUSH2 0x2cb
0xff JUMP
---
0xf7: JUMPDEST 
0xf9: V68 = 0x100
0xfc: V69 = 0x2cb
0xff: JUMP 0x2cb
---
Entry stack: [V11, V64]
Stack pops: 1
Stack additions: [0x100]
Exit stack: [V11, 0x100]

================================

Block 0x100
[0x100:0x11b]
---
Predecessors: [0x2cb, 0x2da]
Successors: []
---
0x100 JUMPDEST
0x101 PUSH1 0x40
0x103 DUP1
0x104 MLOAD
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d SWAP1
0x10e SWAP3
0x10f AND
0x110 DUP3
0x111 MSTORE
0x112 MLOAD
0x113 SWAP1
0x114 DUP2
0x115 SWAP1
0x116 SUB
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP1
0x11b RETURN
---
0x100: JUMPDEST 
0x101: V70 = 0x40
0x104: V71 = M[0x40]
0x105: V72 = 0x1
0x107: V73 = 0xa0
0x109: V74 = 0x2
0x10b: V75 = EXP 0x2 0xa0
0x10c: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V77 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x111: M[V71] = V77
0x112: V78 = M[0x40]
0x116: V79 = SUB V71 V78
0x117: V80 = 0x20
0x119: V81 = ADD 0x20 V79
0x11b: RETURN V78 V81
---
Entry stack: [V11, 0x100, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x100]

================================

Block 0x11c
[0x11c:0x123]
---
Predecessors: [0x6c]
Successors: [0x124, 0x128]
---
0x11c JUMPDEST
0x11d CALLVALUE
0x11e DUP1
0x11f ISZERO
0x120 PUSH2 0x128
0x123 JUMPI
---
0x11c: JUMPDEST 
0x11d: V82 = CALLVALUE
0x11f: V83 = ISZERO V82
0x120: V84 = 0x128
0x123: JUMPI 0x128 V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V11, V82]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0x11c]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V85 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V11, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V82]

================================

Block 0x128
[0x128:0x130]
---
Predecessors: [0x11c]
Successors: [0x2da]
---
0x128 JUMPDEST
0x129 POP
0x12a PUSH2 0x100
0x12d PUSH2 0x2da
0x130 JUMP
---
0x128: JUMPDEST 
0x12a: V86 = 0x100
0x12d: V87 = 0x2da
0x130: JUMP 0x2da
---
Entry stack: [V11, V82]
Stack pops: 1
Stack additions: [0x100]
Exit stack: [V11, 0x100]

================================

Block 0x131
[0x131:0x138]
---
Predecessors: [0x77]
Successors: [0x139, 0x13d]
---
0x131 JUMPDEST
0x132 CALLVALUE
0x133 DUP1
0x134 ISZERO
0x135 PUSH2 0x13d
0x138 JUMPI
---
0x131: JUMPDEST 
0x132: V88 = CALLVALUE
0x134: V89 = ISZERO V88
0x135: V90 = 0x13d
0x138: JUMPI 0x13d V89
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V11, V88]

================================

Block 0x139
[0x139:0x13c]
---
Predecessors: [0x131]
Successors: []
---
0x139 PUSH1 0x0
0x13b DUP1
0x13c REVERT
---
0x139: V91 = 0x0
0x13c: REVERT 0x0 0x0
---
Entry stack: [V11, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V88]

================================

Block 0x13d
[0x13d:0x145]
---
Predecessors: [0x131]
Successors: [0x2e9]
---
0x13d JUMPDEST
0x13e POP
0x13f PUSH2 0x8d
0x142 PUSH2 0x2e9
0x145 JUMP
---
0x13d: JUMPDEST 
0x13f: V92 = 0x8d
0x142: V93 = 0x2e9
0x145: JUMP 0x2e9
---
Entry stack: [V11, V88]
Stack pops: 1
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x146
[0x146:0x14d]
---
Predecessors: [0x82]
Successors: [0x14e, 0x152]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 DUP1
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0x146: JUMPDEST 
0x147: V94 = CALLVALUE
0x149: V95 = ISZERO V94
0x14a: V96 = 0x152
0x14d: JUMPI 0x152 V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V94]
Exit stack: [V11, V94]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x146]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V97 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V11, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V94]

================================

Block 0x152
[0x152:0x166]
---
Predecessors: [0x146]
Successors: [0x3b9]
---
0x152 JUMPDEST
0x153 POP
0x154 PUSH2 0x8d
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f PUSH1 0x4
0x161 CALLDATALOAD
0x162 AND
0x163 PUSH2 0x3b9
0x166 JUMP
---
0x152: JUMPDEST 
0x154: V98 = 0x8d
0x157: V99 = 0x1
0x159: V100 = 0xa0
0x15b: V101 = 0x2
0x15d: V102 = EXP 0x2 0xa0
0x15e: V103 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V104 = 0x4
0x161: V105 = CALLDATALOAD 0x4
0x162: V106 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x163: V107 = 0x3b9
0x166: JUMP 0x3b9
---
Entry stack: [V11, V94]
Stack pops: 1
Stack additions: [0x8d, V106]
Exit stack: [V11, 0x8d, V106]

================================

Block 0x167
[0x167:0x179]
---
Predecessors: [0x9b]
Successors: [0x17a, 0x17e]
---
0x167 JUMPDEST
0x168 PUSH1 0x1
0x16a SLOAD
0x16b PUSH1 0x1
0x16d PUSH1 0xa0
0x16f PUSH1 0x2
0x171 EXP
0x172 SUB
0x173 AND
0x174 CALLER
0x175 EQ
0x176 PUSH2 0x17e
0x179 JUMPI
---
0x167: JUMPDEST 
0x168: V108 = 0x1
0x16a: V109 = S[0x1]
0x16b: V110 = 0x1
0x16d: V111 = 0xa0
0x16f: V112 = 0x2
0x171: V113 = EXP 0x2 0xa0
0x172: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x173: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x174: V116 = CALLER
0x175: V117 = EQ V116 V115
0x176: V118 = 0x17e
0x179: JUMPI 0x17e V117
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x17a
[0x17a:0x17d]
---
Predecessors: [0x167]
Successors: []
---
0x17a PUSH1 0x0
0x17c DUP1
0x17d REVERT
---
0x17a: V119 = 0x0
0x17d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x17e
[0x17e:0x1ae]
---
Predecessors: [0x167]
Successors: [0x1af, 0x1b8]
---
0x17e JUMPDEST
0x17f PUSH1 0x1
0x181 SLOAD
0x182 PUSH1 0x40
0x184 MLOAD
0x185 PUSH1 0x1
0x187 PUSH1 0xa0
0x189 PUSH1 0x2
0x18b EXP
0x18c SUB
0x18d SWAP1
0x18e SWAP2
0x18f AND
0x190 SWAP1
0x191 ADDRESS
0x192 BALANCE
0x193 DUP1
0x194 ISZERO
0x195 PUSH2 0x8fc
0x198 MUL
0x199 SWAP2
0x19a PUSH1 0x0
0x19c DUP2
0x19d DUP2
0x19e DUP2
0x19f DUP6
0x1a0 DUP9
0x1a1 DUP9
0x1a2 CALL
0x1a3 SWAP4
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 POP
0x1a8 ISZERO
0x1a9 DUP1
0x1aa ISZERO
0x1ab PUSH2 0x1b8
0x1ae JUMPI
---
0x17e: JUMPDEST 
0x17f: V120 = 0x1
0x181: V121 = S[0x1]
0x182: V122 = 0x40
0x184: V123 = M[0x40]
0x185: V124 = 0x1
0x187: V125 = 0xa0
0x189: V126 = 0x2
0x18b: V127 = EXP 0x2 0xa0
0x18c: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18f: V129 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x191: V130 = ADDRESS
0x192: V131 = BALANCE V130
0x194: V132 = ISZERO V131
0x195: V133 = 0x8fc
0x198: V134 = MUL 0x8fc V132
0x19a: V135 = 0x0
0x1a2: V136 = CALL V134 V129 V131 V123 0x0 V123 0x0
0x1a8: V137 = ISZERO V136
0x1aa: V138 = ISZERO V137
0x1ab: V139 = 0x1b8
0x1ae: JUMPI 0x1b8 V138
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [V137]
Exit stack: [V11, 0x8d, V137]

================================

Block 0x1af
[0x1af:0x1b7]
---
Predecessors: [0x17e]
Successors: []
---
0x1af RETURNDATASIZE
0x1b0 PUSH1 0x0
0x1b2 DUP1
0x1b3 RETURNDATACOPY
0x1b4 RETURNDATASIZE
0x1b5 PUSH1 0x0
0x1b7 REVERT
---
0x1af: V140 = RETURNDATASIZE
0x1b0: V141 = 0x0
0x1b3: RETURNDATACOPY 0x0 0x0 V140
0x1b4: V142 = RETURNDATASIZE
0x1b5: V143 = 0x0
0x1b7: REVERT 0x0 V142
---
Entry stack: [V11, 0x8d, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V137]

================================

Block 0x1b8
[0x1b8:0x1ba]
---
Predecessors: [0x17e]
Successors: [0x8d]
---
0x1b8 JUMPDEST
0x1b9 POP
0x1ba JUMP
---
0x1b8: JUMPDEST 
0x1ba: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V137]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bb
[0x1bb:0x1ca]
---
Predecessors: [0xb0, 0x1e7]
Successors: [0xb9, 0x1f9]
---
0x1bb JUMPDEST
0x1bc PUSH1 0x0
0x1be SLOAD
0x1bf PUSH1 0x1
0x1c1 PUSH1 0xa0
0x1c3 PUSH1 0x2
0x1c5 EXP
0x1c6 SUB
0x1c7 AND
0x1c8 BALANCE
0x1c9 SWAP1
0x1ca JUMP
---
0x1bb: JUMPDEST 
0x1bc: V144 = 0x0
0x1be: V145 = S[0x0]
0x1bf: V146 = 0x1
0x1c1: V147 = 0xa0
0x1c3: V148 = 0x2
0x1c5: V149 = EXP 0x2 0xa0
0x1c6: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c7: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x1c8: V152 = BALANCE V151
0x1ca: JUMP {0xb9, 0x1f9}
---
Entry stack: [V11, 0x8d, V56, 0x0, 0x0, S1, {0xb9, 0x1f9}]
Stack pops: 1
Stack additions: [V152]
Exit stack: [V11, 0x8d, V56, 0x0, 0x0, S1, V152]

================================

Block 0x1cb
[0x1cb:0x1e2]
---
Predecessors: [0xcb]
Successors: [0x1e3, 0x1e7]
---
0x1cb JUMPDEST
0x1cc PUSH1 0x1
0x1ce SLOAD
0x1cf PUSH1 0x0
0x1d1 SWAP1
0x1d2 DUP2
0x1d3 SWAP1
0x1d4 PUSH1 0x1
0x1d6 PUSH1 0xa0
0x1d8 PUSH1 0x2
0x1da EXP
0x1db SUB
0x1dc AND
0x1dd CALLER
0x1de EQ
0x1df PUSH2 0x1e7
0x1e2 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V153 = 0x1
0x1ce: V154 = S[0x1]
0x1cf: V155 = 0x0
0x1d4: V156 = 0x1
0x1d6: V157 = 0xa0
0x1d8: V158 = 0x2
0x1da: V159 = EXP 0x2 0xa0
0x1db: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dc: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x1dd: V162 = CALLER
0x1de: V163 = EQ V162 V161
0x1df: V164 = 0x1e7
0x1e2: JUMPI 0x1e7 V163
---
Entry stack: [V11, 0x8d, V56]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x8d, V56, 0x0, 0x0]

================================

Block 0x1e3
[0x1e3:0x1e6]
---
Predecessors: [0x1cb]
Successors: []
---
0x1e3 PUSH1 0x0
0x1e5 DUP1
0x1e6 REVERT
---
0x1e3: V165 = 0x0
0x1e6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V56, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V56, 0x0, 0x0]

================================

Block 0x1e7
[0x1e7:0x1f8]
---
Predecessors: [0x1cb]
Successors: [0x1bb]
---
0x1e7 JUMPDEST
0x1e8 PUSH9 0xd8d726b7177a80000
0x1f2 PUSH2 0x1f9
0x1f5 PUSH2 0x1bb
0x1f8 JUMP
---
0x1e7: JUMPDEST 
0x1e8: V166 = 0xd8d726b7177a80000
0x1f2: V167 = 0x1f9
0x1f5: V168 = 0x1bb
0x1f8: JUMP 0x1bb
---
Entry stack: [V11, 0x8d, V56, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xd8d726b7177a80000, 0x1f9]
Exit stack: [V11, 0x8d, V56, 0x0, 0x0, 0xd8d726b7177a80000, 0x1f9]

================================

Block 0x1f9
[0x1f9:0x1fe]
---
Predecessors: [0x1bb]
Successors: [0x1ff, 0x203]
---
0x1f9 JUMPDEST
0x1fa LT
0x1fb PUSH2 0x203
0x1fe JUMPI
---
0x1f9: JUMPDEST 
0x1fa: V169 = LT V152 S1
0x1fb: V170 = 0x203
0x1fe: JUMPI 0x203 V169
---
Entry stack: [V11, 0x8d, V56, 0x0, 0x0, S1, V152]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x8d, V56, 0x0, 0x0]

================================

Block 0x1ff
[0x1ff:0x202]
---
Predecessors: [0x1f9]
Successors: []
---
0x1ff PUSH1 0x0
0x201 DUP1
0x202 REVERT
---
0x1ff: V171 = 0x0
0x202: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V56, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V56, 0x0, 0x0]

================================

Block 0x203
[0x203:0x213]
---
Predecessors: [0x1f9]
Successors: [0x214]
---
0x203 JUMPDEST
0x204 POP
0x205 POP
0x206 PUSH1 0x0
0x208 DUP1
0x209 SLOAD
0x20a PUSH1 0x1
0x20c PUSH1 0xa0
0x20e PUSH1 0x2
0x210 EXP
0x211 SUB
0x212 AND
0x213 SWAP1
---
0x203: JUMPDEST 
0x206: V172 = 0x0
0x209: V173 = S[0x0]
0x20a: V174 = 0x1
0x20c: V175 = 0xa0
0x20e: V176 = 0x2
0x210: V177 = EXP 0x2 0xa0
0x211: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x212: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
---
Entry stack: [V11, 0x8d, V56, 0x0, 0x0]
Stack pops: 2
Stack additions: [V179, 0x0]
Exit stack: [V11, 0x8d, V56, V179, 0x0]

================================

Block 0x214
[0x214:0x21c]
---
Predecessors: [0x203, 0x2b7]
Successors: [0x21d, 0x2c1]
---
0x214 JUMPDEST
0x215 DUP3
0x216 DUP2
0x217 LT
0x218 ISZERO
0x219 PUSH2 0x2c1
0x21c JUMPI
---
0x214: JUMPDEST 
0x217: V180 = LT S0 V56
0x218: V181 = ISZERO V180
0x219: V182 = 0x2c1
0x21c: JUMPI 0x2c1 V181
---
Entry stack: [V11, 0x8d, V56, V179, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d, V56, V179, S0]

================================

Block 0x21d
[0x21d:0x287]
---
Predecessors: [0x214]
Successors: [0x288, 0x28c]
---
0x21d PUSH1 0x1
0x21f SLOAD
0x220 PUSH1 0x40
0x222 DUP1
0x223 MLOAD
0x224 PUSH32 0xf088d54700000000000000000000000000000000000000000000000000000000
0x245 DUP2
0x246 MSTORE
0x247 PUSH1 0x1
0x249 PUSH1 0xa0
0x24b PUSH1 0x2
0x24d EXP
0x24e SUB
0x24f SWAP3
0x250 DUP4
0x251 AND
0x252 PUSH1 0x4
0x254 DUP3
0x255 ADD
0x256 MSTORE
0x257 SWAP1
0x258 MLOAD
0x259 SWAP2
0x25a DUP5
0x25b AND
0x25c SWAP2
0x25d PUSH4 0xf088d547
0x262 SWAP2
0x263 PUSH8 0x22b1c8c1227a0000
0x26c SWAP2
0x26d PUSH1 0x24
0x26f DUP1
0x270 DUP4
0x271 ADD
0x272 SWAP3
0x273 PUSH1 0x20
0x275 SWAP3
0x276 SWAP2
0x277 SWAP1
0x278 DUP3
0x279 SWAP1
0x27a SUB
0x27b ADD
0x27c DUP2
0x27d DUP6
0x27e DUP9
0x27f DUP1
0x280 EXTCODESIZE
0x281 ISZERO
0x282 DUP1
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x21d: V183 = 0x1
0x21f: V184 = S[0x1]
0x220: V185 = 0x40
0x223: V186 = M[0x40]
0x224: V187 = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x246: M[V186] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x247: V188 = 0x1
0x249: V189 = 0xa0
0x24b: V190 = 0x2
0x24d: V191 = EXP 0x2 0xa0
0x24e: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x251: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x252: V194 = 0x4
0x255: V195 = ADD V186 0x4
0x256: M[V195] = V193
0x258: V196 = M[0x40]
0x25b: V197 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V198 = 0xf088d547
0x263: V199 = 0x22b1c8c1227a0000
0x26d: V200 = 0x24
0x271: V201 = ADD V186 0x24
0x273: V202 = 0x20
0x27a: V203 = SUB V186 V196
0x27b: V204 = ADD V203 0x24
0x280: V205 = EXTCODESIZE V197
0x281: V206 = ISZERO V205
0x283: V207 = ISZERO V206
0x284: V208 = 0x28c
0x287: JUMPI 0x28c V207
---
Entry stack: [V11, 0x8d, V56, V179, S0]
Stack pops: 2
Stack additions: [S1, S0, V197, 0xf088d547, 0x22b1c8c1227a0000, V201, 0x20, V196, V204, V196, 0x22b1c8c1227a0000, V197, V206]
Exit stack: [V11, 0x8d, V56, V179, S0, V197, 0xf088d547, 0x22b1c8c1227a0000, V201, 0x20, V196, V204, V196, 0x22b1c8c1227a0000, V197, V206]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x21d]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V209 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V56, V179, S11, V197, 0xf088d547, 0x22b1c8c1227a0000, V201, 0x20, V196, V204, V196, 0x22b1c8c1227a0000, V197, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V56, V179, S11, V197, 0xf088d547, 0x22b1c8c1227a0000, V201, 0x20, V196, V204, V196, 0x22b1c8c1227a0000, V197, V206]

================================

Block 0x28c
[0x28c:0x296]
---
Predecessors: [0x21d]
Successors: [0x297, 0x2a0]
---
0x28c JUMPDEST
0x28d POP
0x28e GAS
0x28f CALL
0x290 ISZERO
0x291 DUP1
0x292 ISZERO
0x293 PUSH2 0x2a0
0x296 JUMPI
---
0x28c: JUMPDEST 
0x28e: V210 = GAS
0x28f: V211 = CALL V210 V197 0x22b1c8c1227a0000 V196 V204 V196 0x20
0x290: V212 = ISZERO V211
0x292: V213 = ISZERO V212
0x293: V214 = 0x2a0
0x296: JUMPI 0x2a0 V213
---
Entry stack: [V11, 0x8d, V56, V179, S11, V197, 0xf088d547, 0x22b1c8c1227a0000, V201, 0x20, V196, V204, V196, 0x22b1c8c1227a0000, V197, V206]
Stack pops: 7
Stack additions: [V212]
Exit stack: [V11, 0x8d, V56, V179, S11, V197, 0xf088d547, 0x22b1c8c1227a0000, V201, V212]

================================

Block 0x297
[0x297:0x29f]
---
Predecessors: [0x28c]
Successors: []
---
0x297 RETURNDATASIZE
0x298 PUSH1 0x0
0x29a DUP1
0x29b RETURNDATACOPY
0x29c RETURNDATASIZE
0x29d PUSH1 0x0
0x29f REVERT
---
0x297: V215 = RETURNDATASIZE
0x298: V216 = 0x0
0x29b: RETURNDATACOPY 0x0 0x0 V215
0x29c: V217 = RETURNDATASIZE
0x29d: V218 = 0x0
0x29f: REVERT 0x0 V217
---
Entry stack: [V11, 0x8d, V56, V179, S5, V197, 0xf088d547, 0x22b1c8c1227a0000, V201, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V56, V179, S5, V197, 0xf088d547, 0x22b1c8c1227a0000, V201, V212]

================================

Block 0x2a0
[0x2a0:0x2b2]
---
Predecessors: [0x28c]
Successors: [0x2b3, 0x2b7]
---
0x2a0 JUMPDEST
0x2a1 POP
0x2a2 POP
0x2a3 POP
0x2a4 POP
0x2a5 POP
0x2a6 PUSH1 0x40
0x2a8 MLOAD
0x2a9 RETURNDATASIZE
0x2aa PUSH1 0x20
0x2ac DUP2
0x2ad LT
0x2ae ISZERO
0x2af PUSH2 0x2b7
0x2b2 JUMPI
---
0x2a0: JUMPDEST 
0x2a6: V219 = 0x40
0x2a8: V220 = M[0x40]
0x2a9: V221 = RETURNDATASIZE
0x2aa: V222 = 0x20
0x2ad: V223 = LT V221 0x20
0x2ae: V224 = ISZERO V223
0x2af: V225 = 0x2b7
0x2b2: JUMPI 0x2b7 V224
---
Entry stack: [V11, 0x8d, V56, V179, S5, V197, 0xf088d547, 0x22b1c8c1227a0000, V201, V212]
Stack pops: 5
Stack additions: [V220, V221]
Exit stack: [V11, 0x8d, V56, V179, S5, V220, V221]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x2a0]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 REVERT
---
0x2b3: V226 = 0x0
0x2b6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V56, V179, S2, V220, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V56, V179, S2, V220, V221]

================================

Block 0x2b7
[0x2b7:0x2c0]
---
Predecessors: [0x2a0]
Successors: [0x214]
---
0x2b7 JUMPDEST
0x2b8 POP
0x2b9 POP
0x2ba PUSH1 0x1
0x2bc ADD
0x2bd PUSH2 0x214
0x2c0 JUMP
---
0x2b7: JUMPDEST 
0x2ba: V227 = 0x1
0x2bc: V228 = ADD 0x1 S2
0x2bd: V229 = 0x214
0x2c0: JUMP 0x214
---
Entry stack: [V11, 0x8d, V56, V179, S2, V220, V221]
Stack pops: 3
Stack additions: [V228]
Exit stack: [V11, 0x8d, V56, V179, V228]

================================

Block 0x2c1
[0x2c1:0x2c5]
---
Predecessors: [0x214]
Successors: [0x8d]
---
0x2c1 JUMPDEST
0x2c2 POP
0x2c3 POP
0x2c4 POP
0x2c5 JUMP
---
0x2c1: JUMPDEST 
0x2c5: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V56, V179, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c6
[0x2c6:0x2ca]
---
Predecessors: [0xe2]
Successors: [0xb9]
---
0x2c6 JUMPDEST
0x2c7 ADDRESS
0x2c8 BALANCE
0x2c9 SWAP1
0x2ca JUMP
---
0x2c6: JUMPDEST 
0x2c7: V230 = ADDRESS
0x2c8: V231 = BALANCE V230
0x2ca: JUMP 0xb9
---
Entry stack: [V11, 0xb9]
Stack pops: 1
Stack additions: [V231]
Exit stack: [V11, V231]

================================

Block 0x2cb
[0x2cb:0x2d9]
---
Predecessors: [0xf7]
Successors: [0x100]
---
0x2cb JUMPDEST
0x2cc PUSH1 0x1
0x2ce SLOAD
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 AND
0x2d8 DUP2
0x2d9 JUMP
---
0x2cb: JUMPDEST 
0x2cc: V232 = 0x1
0x2ce: V233 = S[0x1]
0x2cf: V234 = 0x1
0x2d1: V235 = 0xa0
0x2d3: V236 = 0x2
0x2d5: V237 = EXP 0x2 0xa0
0x2d6: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d7: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x2d9: JUMP 0x100
---
Entry stack: [V11, 0x100]
Stack pops: 1
Stack additions: [S0, V239]
Exit stack: [V11, 0x100, V239]

================================

Block 0x2da
[0x2da:0x2e8]
---
Predecessors: [0x128]
Successors: [0x100]
---
0x2da JUMPDEST
0x2db PUSH1 0x0
0x2dd SLOAD
0x2de PUSH1 0x1
0x2e0 PUSH1 0xa0
0x2e2 PUSH1 0x2
0x2e4 EXP
0x2e5 SUB
0x2e6 AND
0x2e7 DUP2
0x2e8 JUMP
---
0x2da: JUMPDEST 
0x2db: V240 = 0x0
0x2dd: V241 = S[0x0]
0x2de: V242 = 0x1
0x2e0: V243 = 0xa0
0x2e2: V244 = 0x2
0x2e4: V245 = EXP 0x2 0xa0
0x2e5: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e6: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x2e8: JUMP 0x100
---
Entry stack: [V11, 0x100]
Stack pops: 1
Stack additions: [S0, V247]
Exit stack: [V11, 0x100, V247]

================================

Block 0x2e9
[0x2e9:0x2fe]
---
Predecessors: [0x13d]
Successors: [0x2ff, 0x303]
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x1
0x2ec SLOAD
0x2ed PUSH1 0x0
0x2ef SWAP1
0x2f0 PUSH1 0x1
0x2f2 PUSH1 0xa0
0x2f4 PUSH1 0x2
0x2f6 EXP
0x2f7 SUB
0x2f8 AND
0x2f9 CALLER
0x2fa EQ
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V248 = 0x1
0x2ec: V249 = S[0x1]
0x2ed: V250 = 0x0
0x2f0: V251 = 0x1
0x2f2: V252 = 0xa0
0x2f4: V253 = 0x2
0x2f6: V254 = EXP 0x2 0xa0
0x2f7: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f8: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x2f9: V257 = CALLER
0x2fa: V258 = EQ V257 V256
0x2fb: V259 = 0x303
0x2fe: JUMPI 0x303 V258
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x8d, 0x0]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2e9]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V260 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, 0x0]

================================

Block 0x303
[0x303:0x35d]
---
Predecessors: [0x2e9]
Successors: [0x35e, 0x362]
---
0x303 JUMPDEST
0x304 POP
0x305 PUSH1 0x0
0x307 DUP1
0x308 SLOAD
0x309 PUSH1 0x40
0x30b DUP1
0x30c MLOAD
0x30d PUSH32 0xe9fad8ee00000000000000000000000000000000000000000000000000000000
0x32e DUP2
0x32f MSTORE
0x330 SWAP1
0x331 MLOAD
0x332 PUSH1 0x1
0x334 PUSH1 0xa0
0x336 PUSH1 0x2
0x338 EXP
0x339 SUB
0x33a SWAP1
0x33b SWAP3
0x33c AND
0x33d SWAP3
0x33e DUP4
0x33f SWAP3
0x340 PUSH4 0xe9fad8ee
0x345 SWAP3
0x346 PUSH1 0x4
0x348 DUP1
0x349 DUP3
0x34a ADD
0x34b SWAP4
0x34c SWAP3
0x34d SWAP2
0x34e DUP3
0x34f SWAP1
0x350 SUB
0x351 ADD
0x352 DUP2
0x353 DUP4
0x354 DUP8
0x355 DUP1
0x356 EXTCODESIZE
0x357 ISZERO
0x358 DUP1
0x359 ISZERO
0x35a PUSH2 0x362
0x35d JUMPI
---
0x303: JUMPDEST 
0x305: V261 = 0x0
0x308: V262 = S[0x0]
0x309: V263 = 0x40
0x30c: V264 = M[0x40]
0x30d: V265 = 0xe9fad8ee00000000000000000000000000000000000000000000000000000000
0x32f: M[V264] = 0xe9fad8ee00000000000000000000000000000000000000000000000000000000
0x331: V266 = M[0x40]
0x332: V267 = 0x1
0x334: V268 = 0xa0
0x336: V269 = 0x2
0x338: V270 = EXP 0x2 0xa0
0x339: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33c: V272 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0x340: V273 = 0xe9fad8ee
0x346: V274 = 0x4
0x34a: V275 = ADD V264 0x4
0x350: V276 = SUB V264 V266
0x351: V277 = ADD V276 0x4
0x356: V278 = EXTCODESIZE V272
0x357: V279 = ISZERO V278
0x359: V280 = ISZERO V279
0x35a: V281 = 0x362
0x35d: JUMPI 0x362 V280
---
Entry stack: [V11, 0x8d, 0x0]
Stack pops: 1
Stack additions: [V272, V272, 0xe9fad8ee, V275, 0x0, V266, V277, V266, 0x0, V272, V279]
Exit stack: [V11, 0x8d, V272, V272, 0xe9fad8ee, V275, 0x0, V266, V277, V266, 0x0, V272, V279]

================================

Block 0x35e
[0x35e:0x361]
---
Predecessors: [0x303]
Successors: []
---
0x35e PUSH1 0x0
0x360 DUP1
0x361 REVERT
---
0x35e: V282 = 0x0
0x361: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V272, V272, 0xe9fad8ee, V275, 0x0, V266, V277, V266, 0x0, V272, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V272, V272, 0xe9fad8ee, V275, 0x0, V266, V277, V266, 0x0, V272, V279]

================================

Block 0x362
[0x362:0x36c]
---
Predecessors: [0x303]
Successors: [0x36d, 0x376]
---
0x362 JUMPDEST
0x363 POP
0x364 GAS
0x365 CALL
0x366 ISZERO
0x367 DUP1
0x368 ISZERO
0x369 PUSH2 0x376
0x36c JUMPI
---
0x362: JUMPDEST 
0x364: V283 = GAS
0x365: V284 = CALL V283 V272 0x0 V266 V277 V266 0x0
0x366: V285 = ISZERO V284
0x368: V286 = ISZERO V285
0x369: V287 = 0x376
0x36c: JUMPI 0x376 V286
---
Entry stack: [V11, 0x8d, V272, V272, 0xe9fad8ee, V275, 0x0, V266, V277, V266, 0x0, V272, V279]
Stack pops: 7
Stack additions: [V285]
Exit stack: [V11, 0x8d, V272, V272, 0xe9fad8ee, V275, V285]

================================

Block 0x36d
[0x36d:0x375]
---
Predecessors: [0x362]
Successors: []
---
0x36d RETURNDATASIZE
0x36e PUSH1 0x0
0x370 DUP1
0x371 RETURNDATACOPY
0x372 RETURNDATASIZE
0x373 PUSH1 0x0
0x375 REVERT
---
0x36d: V288 = RETURNDATASIZE
0x36e: V289 = 0x0
0x371: RETURNDATACOPY 0x0 0x0 V288
0x372: V290 = RETURNDATASIZE
0x373: V291 = 0x0
0x375: REVERT 0x0 V290
---
Entry stack: [V11, 0x8d, V272, V272, 0xe9fad8ee, V275, V285]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V272, V272, 0xe9fad8ee, V275, V285]

================================

Block 0x376
[0x376:0x3ab]
---
Predecessors: [0x362]
Successors: [0x3ac, 0x3b5]
---
0x376 JUMPDEST
0x377 POP
0x378 POP
0x379 PUSH1 0x1
0x37b SLOAD
0x37c PUSH1 0x40
0x37e MLOAD
0x37f PUSH1 0x1
0x381 PUSH1 0xa0
0x383 PUSH1 0x2
0x385 EXP
0x386 SUB
0x387 SWAP1
0x388 SWAP2
0x389 AND
0x38a SWAP3
0x38b POP
0x38c ADDRESS
0x38d BALANCE
0x38e DUP1
0x38f ISZERO
0x390 PUSH2 0x8fc
0x393 MUL
0x394 SWAP3
0x395 POP
0x396 SWAP1
0x397 PUSH1 0x0
0x399 DUP2
0x39a DUP2
0x39b DUP2
0x39c DUP6
0x39d DUP9
0x39e DUP9
0x39f CALL
0x3a0 SWAP4
0x3a1 POP
0x3a2 POP
0x3a3 POP
0x3a4 POP
0x3a5 ISZERO
0x3a6 DUP1
0x3a7 ISZERO
0x3a8 PUSH2 0x3b5
0x3ab JUMPI
---
0x376: JUMPDEST 
0x379: V292 = 0x1
0x37b: V293 = S[0x1]
0x37c: V294 = 0x40
0x37e: V295 = M[0x40]
0x37f: V296 = 0x1
0x381: V297 = 0xa0
0x383: V298 = 0x2
0x385: V299 = EXP 0x2 0xa0
0x386: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x389: V301 = AND V293 0xffffffffffffffffffffffffffffffffffffffff
0x38c: V302 = ADDRESS
0x38d: V303 = BALANCE V302
0x38f: V304 = ISZERO V303
0x390: V305 = 0x8fc
0x393: V306 = MUL 0x8fc V304
0x397: V307 = 0x0
0x39f: V308 = CALL V306 V301 V303 V295 0x0 V295 0x0
0x3a5: V309 = ISZERO V308
0x3a7: V310 = ISZERO V309
0x3a8: V311 = 0x3b5
0x3ab: JUMPI 0x3b5 V310
---
Entry stack: [V11, 0x8d, V272, V272, 0xe9fad8ee, V275, V285]
Stack pops: 4
Stack additions: [V309]
Exit stack: [V11, 0x8d, V272, V309]

================================

Block 0x3ac
[0x3ac:0x3b4]
---
Predecessors: [0x376]
Successors: []
---
0x3ac RETURNDATASIZE
0x3ad PUSH1 0x0
0x3af DUP1
0x3b0 RETURNDATACOPY
0x3b1 RETURNDATASIZE
0x3b2 PUSH1 0x0
0x3b4 REVERT
---
0x3ac: V312 = RETURNDATASIZE
0x3ad: V313 = 0x0
0x3b0: RETURNDATACOPY 0x0 0x0 V312
0x3b1: V314 = RETURNDATASIZE
0x3b2: V315 = 0x0
0x3b4: REVERT 0x0 V314
---
Entry stack: [V11, 0x8d, V272, V309]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V272, V309]

================================

Block 0x3b5
[0x3b5:0x3b8]
---
Predecessors: [0x376]
Successors: [0x8d]
---
0x3b5 JUMPDEST
0x3b6 POP
0x3b7 POP
0x3b8 JUMP
---
0x3b5: JUMPDEST 
0x3b8: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V272, V309]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b9
[0x3b9:0x3cb]
---
Predecessors: [0x152]
Successors: [0x3cc, 0x3d0]
---
0x3b9 JUMPDEST
0x3ba PUSH1 0x1
0x3bc SLOAD
0x3bd PUSH1 0x1
0x3bf PUSH1 0xa0
0x3c1 PUSH1 0x2
0x3c3 EXP
0x3c4 SUB
0x3c5 AND
0x3c6 CALLER
0x3c7 EQ
0x3c8 PUSH2 0x3d0
0x3cb JUMPI
---
0x3b9: JUMPDEST 
0x3ba: V316 = 0x1
0x3bc: V317 = S[0x1]
0x3bd: V318 = 0x1
0x3bf: V319 = 0xa0
0x3c1: V320 = 0x2
0x3c3: V321 = EXP 0x2 0xa0
0x3c4: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c5: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x3c6: V324 = CALLER
0x3c7: V325 = EQ V324 V323
0x3c8: V326 = 0x3d0
0x3cb: JUMPI 0x3d0 V325
---
Entry stack: [V11, 0x8d, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V106]

================================

Block 0x3cc
[0x3cc:0x3cf]
---
Predecessors: [0x3b9]
Successors: []
---
0x3cc PUSH1 0x0
0x3ce DUP1
0x3cf REVERT
---
0x3cc: V327 = 0x0
0x3cf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V106]

================================

Block 0x3d0
[0x3d0:0x3fe]
---
Predecessors: [0x3b9]
Successors: [0x8d]
---
0x3d0 JUMPDEST
0x3d1 PUSH1 0x0
0x3d3 DUP1
0x3d4 SLOAD
0x3d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ea NOT
0x3eb AND
0x3ec PUSH1 0x1
0x3ee PUSH1 0xa0
0x3f0 PUSH1 0x2
0x3f2 EXP
0x3f3 SUB
0x3f4 SWAP3
0x3f5 SWAP1
0x3f6 SWAP3
0x3f7 AND
0x3f8 SWAP2
0x3f9 SWAP1
0x3fa SWAP2
0x3fb OR
0x3fc SWAP1
0x3fd SSTORE
0x3fe JUMP
---
0x3d0: JUMPDEST 
0x3d1: V328 = 0x0
0x3d4: V329 = S[0x0]
0x3d5: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V331 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3eb: V332 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V329
0x3ec: V333 = 0x1
0x3ee: V334 = 0xa0
0x3f0: V335 = 0x2
0x3f2: V336 = EXP 0x2 0xa0
0x3f3: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f7: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x3fb: V339 = OR V338 V332
0x3fd: S[0x0] = V339
0x3fe: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V106]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ff
[0x3ff:0x422]
---
Predecessors: []
Successors: [0x423]
---
0x3ff STOP
0x400 LOG1
0x401 PUSH6 0x627a7a723058
0x408 SHA3
0x409 SWAP14
0x40a PUSH24 0x8aeb3108b171f4d869c7a484a9099f79086bd1989ef23500
---
0x3ff: STOP 
0x400: LOG S0 S1 S2
0x401: V340 = 0x627a7a723058
0x408: V341 = SHA3 0x627a7a723058 S3
0x40a: V342 = 0x8aeb3108b171f4d869c7a484a9099f79086bd1989ef23500
---
Entry stack: []
Stack pops: 0
Stack additions: [0x8aeb3108b171f4d869c7a484a9099f79086bd1989ef23500, S17, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V341]
Exit stack: []

================================

Block 0x423
[0x423:0x42a]
---
Predecessors: [0x3ff]
Successors: []
---
0x423 JUMPDEST
0x424 SWAP8
0x425 MISSING 0xc0
0x426 DUP14
0x427 LOG4
0x428 EQ
0x429 STOP
0x42a MISSING 0x29
---
0x423: JUMPDEST 
0x425: MISSING 0xc0
0x427: LOG S13 S0 S1 S2 S3 S4
0x428: V343 = EQ S5 S6
0x429: STOP 
0x42a: MISSING 0x29
---
Entry stack: [V341, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x8aeb3108b171f4d869c7a484a9099f79086bd1989ef23500]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x8f
Exit block: 0x8d
Body: 0x8d, 0x8f, 0x97, 0x9b, 0x167, 0x17a, 0x17e, 0x1af, 0x1b8

Function 1:
Public function signature: 0x43cce08e
Entry block: 0xa4
Exit block: 0xac
Body: 0xa4, 0xac, 0xb0, 0xb9

Function 2:
Public function signature: 0x77052fba
Entry block: 0xcb
Exit block: 0x2b3
Body: 0x8d, 0xcb, 0x1cb, 0x1e3, 0x1e7, 0x1f9, 0x1ff, 0x203, 0x214, 0x21d, 0x288, 0x28c, 0x297, 0x2a0, 0x2b3, 0x2b7, 0x2c1

Function 3:
Public function signature: 0x8b7afe2e
Entry block: 0xd6
Exit block: 0xb9
Body: 0xb9, 0xd6, 0xde, 0xe2, 0x2c6

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0xeb
Exit block: 0x100
Body: 0xeb, 0xf3, 0xf7, 0x100, 0x2cb

Function 5:
Public function signature: 0xd4b83992
Entry block: 0x11c
Exit block: 0x100
Body: 0x100, 0x11c, 0x124, 0x128, 0x2da

Function 6:
Public function signature: 0xdb8d65f3
Entry block: 0x131
Exit block: 0x8d
Body: 0x8d, 0x131, 0x139, 0x13d, 0x2e9, 0x2ff, 0x303, 0x35e, 0x362, 0x36d, 0x376, 0x3ac, 0x3b5

Function 7:
Public function signature: 0xdcf7bb5c
Entry block: 0x146
Exit block: 0x8d
Body: 0x8d, 0x146, 0x14e, 0x152, 0x3b9, 0x3cc, 0x3d0

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x8d
Body: 0x8d

