Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xeb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xeb
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xeb
0xa: JUMPI 0xeb V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xf7]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2170ebf7
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xf7
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2170ebf7
0x20: V14 = EQ V12 0x2170ebf7
0x21: V15 = 0xf7
0x24: JUMPI 0xf7 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x121]
---
0x25 DUP1
0x26 PUSH4 0x358a08cb
0x2b EQ
0x2c PUSH2 0x121
0x2f JUMPI
---
0x26: V16 = 0x358a08cb
0x2b: V17 = EQ 0x358a08cb V12
0x2c: V18 = 0x121
0x2f: JUMPI 0x121 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x15f]
---
0x30 DUP1
0x31 PUSH4 0x38d52e0f
0x36 EQ
0x37 PUSH2 0x15f
0x3a JUMPI
---
0x31: V19 = 0x38d52e0f
0x36: V20 = EQ 0x38d52e0f V12
0x37: V21 = 0x15f
0x3a: JUMPI 0x15f V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x18e]
---
0x3b DUP1
0x3c PUSH4 0x4b750334
0x41 EQ
0x42 PUSH2 0x18e
0x45 JUMPI
---
0x3c: V22 = 0x4b750334
0x41: V23 = EQ 0x4b750334 V12
0x42: V24 = 0x18e
0x45: JUMPI 0x18e V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1b3]
---
0x46 DUP1
0x47 PUSH4 0x4ca50f59
0x4c EQ
0x4d PUSH2 0x1b3
0x50 JUMPI
---
0x47: V25 = 0x4ca50f59
0x4c: V26 = EQ 0x4ca50f59 V12
0x4d: V27 = 0x1b3
0x50: JUMPI 0x1b3 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1da]
---
0x51 DUP1
0x52 PUSH4 0x52954e5a
0x57 EQ
0x58 PUSH2 0x1da
0x5b JUMPI
---
0x52: V28 = 0x52954e5a
0x57: V29 = EQ 0x52954e5a V12
0x58: V30 = 0x1da
0x5b: JUMPI 0x1da V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x210]
---
0x5c DUP1
0x5d PUSH4 0x8620410b
0x62 EQ
0x63 PUSH2 0x210
0x66 JUMPI
---
0x5d: V31 = 0x8620410b
0x62: V32 = EQ 0x8620410b V12
0x63: V33 = 0x210
0x66: JUMPI 0x210 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x235]
---
0x67 DUP1
0x68 PUSH4 0x8da5cb5b
0x6d EQ
0x6e PUSH2 0x235
0x71 JUMPI
---
0x68: V34 = 0x8da5cb5b
0x6d: V35 = EQ 0x8da5cb5b V12
0x6e: V36 = 0x235
0x71: JUMPI 0x235 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x264]
---
0x72 DUP1
0x73 PUSH4 0x919f8cfc
0x78 EQ
0x79 PUSH2 0x264
0x7c JUMPI
---
0x73: V37 = 0x919f8cfc
0x78: V38 = EQ 0x919f8cfc V12
0x79: V39 = 0x264
0x7c: JUMPI 0x264 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x26e]
---
0x7d DUP1
0x7e PUSH4 0x976a8435
0x83 EQ
0x84 PUSH2 0x26e
0x87 JUMPI
---
0x7e: V40 = 0x976a8435
0x83: V41 = EQ 0x976a8435 V12
0x84: V42 = 0x26e
0x87: JUMPI 0x26e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x293]
---
0x88 DUP1
0x89 PUSH4 0xb1099347
0x8e EQ
0x8f PUSH2 0x293
0x92 JUMPI
---
0x89: V43 = 0xb1099347
0x8e: V44 = EQ 0xb1099347 V12
0x8f: V45 = 0x293
0x92: JUMPI 0x293 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2ba]
---
0x93 DUP1
0x94 PUSH4 0xbe86d5a7
0x99 EQ
0x9a PUSH2 0x2ba
0x9d JUMPI
---
0x94: V46 = 0xbe86d5a7
0x99: V47 = EQ 0xbe86d5a7 V12
0x9a: V48 = 0x2ba
0x9d: JUMPI 0x2ba V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2f0]
---
0x9e DUP1
0x9f PUSH4 0xc34764cf
0xa4 EQ
0xa5 PUSH2 0x2f0
0xa8 JUMPI
---
0x9f: V49 = 0xc34764cf
0xa4: V50 = EQ 0xc34764cf V12
0xa5: V51 = 0x2f0
0xa8: JUMPI 0x2f0 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0xeb]
---
0xa9 DUP1
0xaa PUSH4 0xc60ccb0e
0xaf EQ
0xb0 PUSH2 0xeb
0xb3 JUMPI
---
0xaa: V52 = 0xc60ccb0e
0xaf: V53 = EQ 0xc60ccb0e V12
0xb0: V54 = 0xeb
0xb3: JUMPI 0xeb V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x330]
---
0xb4 DUP1
0xb5 PUSH4 0xc668f71b
0xba EQ
0xbb PUSH2 0x330
0xbe JUMPI
---
0xb5: V55 = 0xc668f71b
0xba: V56 = EQ 0xc668f71b V12
0xbb: V57 = 0x330
0xbe: JUMPI 0x330 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x355]
---
0xbf DUP1
0xc0 PUSH4 0xcd53a3b7
0xc5 EQ
0xc6 PUSH2 0x355
0xc9 JUMPI
---
0xc0: V58 = 0xcd53a3b7
0xc5: V59 = EQ 0xcd53a3b7 V12
0xc6: V60 = 0x355
0xc9: JUMPI 0x355 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x37f]
---
0xca DUP1
0xcb PUSH4 0xd2f7265a
0xd0 EQ
0xd1 PUSH2 0x37f
0xd4 JUMPI
---
0xcb: V61 = 0xd2f7265a
0xd0: V62 = EQ 0xd2f7265a V12
0xd1: V63 = 0x37f
0xd4: JUMPI 0x37f V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3ae]
---
0xd5 DUP1
0xd6 PUSH4 0xeff883bd
0xdb EQ
0xdc PUSH2 0x3ae
0xdf JUMPI
---
0xd6: V64 = 0xeff883bd
0xdb: V65 = EQ 0xeff883bd V12
0xdc: V66 = 0x3ae
0xdf: JUMPI 0x3ae V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3c6]
---
0xe0 DUP1
0xe1 PUSH4 0xf2fde38b
0xe6 EQ
0xe7 PUSH2 0x3c6
0xea JUMPI
---
0xe1: V67 = 0xf2fde38b
0xe6: V68 = EQ 0xf2fde38b V12
0xe7: V69 = 0x3c6
0xea: JUMPI 0x3c6 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xeb]
---
Predecessors: [0x0, 0xa9, 0xe0]
Successors: [0xec]
---
0xeb JUMPDEST
---
0xeb: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xec
[0xec:0xf3]
---
Predecessors: [0xeb]
Successors: [0x3e7]
---
0xec JUMPDEST
0xed PUSH2 0xf4
0xf0 PUSH2 0x3e7
0xf3 JUMP
---
0xec: JUMPDEST 
0xed: V70 = 0xf4
0xf0: V71 = 0x3e7
0xf3: JUMP 0x3e7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf4]
Exit stack: [V12, 0xf4]

================================

Block 0xf4
[0xf4:0xf4]
---
Predecessors: [0x6c9, 0x974, 0xd9b, 0x1555, 0x15db]
Successors: [0xf5]
---
0xf4 JUMPDEST
---
0xf4: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf5
[0xf5:0xf6]
---
Predecessors: [0xf4]
Successors: []
---
0xf5 JUMPDEST
0xf6 STOP
---
0xf5: JUMPDEST 
0xf6: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf7
[0xf7:0xfd]
---
Predecessors: [0xb]
Successors: [0xfe, 0x102]
---
0xf7 JUMPDEST
0xf8 CALLVALUE
0xf9 ISZERO
0xfa PUSH2 0x102
0xfd JUMPI
---
0xf7: JUMPDEST 
0xf8: V72 = CALLVALUE
0xf9: V73 = ISZERO V72
0xfa: V74 = 0x102
0xfd: JUMPI 0x102 V73
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfe
[0xfe:0x101]
---
Predecessors: [0xf7]
Successors: []
---
0xfe PUSH1 0x0
0x100 DUP1
0x101 REVERT
---
0xfe: V75 = 0x0
0x101: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x102
[0x102:0x10c]
---
Predecessors: [0xf7]
Successors: [0x6ce]
---
0x102 JUMPDEST
0x103 PUSH2 0x10d
0x106 PUSH1 0x4
0x108 CALLDATALOAD
0x109 PUSH2 0x6ce
0x10c JUMP
---
0x102: JUMPDEST 
0x103: V76 = 0x10d
0x106: V77 = 0x4
0x108: V78 = CALLDATALOAD 0x4
0x109: V79 = 0x6ce
0x10c: JUMP 0x6ce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10d, V78]
Exit stack: [V12, 0x10d, V78]

================================

Block 0x10d
[0x10d:0x120]
---
Predecessors: [0x7f9, 0x993, 0xc13, 0xda3, 0x1008, 0x130f]
Successors: []
---
0x10d JUMPDEST
0x10e PUSH1 0x40
0x110 MLOAD
0x111 SWAP1
0x112 ISZERO
0x113 ISZERO
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x20
0x118 ADD
0x119 PUSH1 0x40
0x11b MLOAD
0x11c DUP1
0x11d SWAP2
0x11e SUB
0x11f SWAP1
0x120 RETURN
---
0x10d: JUMPDEST 
0x10e: V80 = 0x40
0x110: V81 = M[0x40]
0x112: V82 = ISZERO S0
0x113: V83 = ISZERO V82
0x115: M[V81] = V83
0x116: V84 = 0x20
0x118: V85 = ADD 0x20 V81
0x119: V86 = 0x40
0x11b: V87 = M[0x40]
0x11e: V88 = SUB V85 V87
0x120: RETURN V87 V88
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x121
[0x121:0x127]
---
Predecessors: [0x25]
Successors: [0x128, 0x12c]
---
0x121 JUMPDEST
0x122 CALLVALUE
0x123 ISZERO
0x124 PUSH2 0x12c
0x127 JUMPI
---
0x121: JUMPDEST 
0x122: V89 = CALLVALUE
0x123: V90 = ISZERO V89
0x124: V91 = 0x12c
0x127: JUMPI 0x12c V90
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x121]
Successors: []
---
0x128 PUSH1 0x0
0x12a DUP1
0x12b REVERT
---
0x128: V92 = 0x0
0x12b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12c
[0x12c:0x15c]
---
Predecessors: [0x121]
Successors: [0x7fe]
---
0x12c JUMPDEST
0x12d PUSH2 0xf4
0x130 PUSH1 0x1
0x132 PUSH1 0xa0
0x134 PUSH1 0x2
0x136 EXP
0x137 SUB
0x138 PUSH1 0x4
0x13a CALLDATALOAD
0x13b DUP2
0x13c AND
0x13d SWAP1
0x13e PUSH1 0x24
0x140 CALLDATALOAD
0x141 SWAP1
0x142 PUSH1 0x44
0x144 CALLDATALOAD
0x145 AND
0x146 PUSH1 0x64
0x148 CALLDATALOAD
0x149 PUSH1 0x84
0x14b CALLDATALOAD
0x14c PUSH1 0xa4
0x14e CALLDATALOAD
0x14f PUSH1 0xc4
0x151 CALLDATALOAD
0x152 ISZERO
0x153 ISZERO
0x154 PUSH1 0xe4
0x156 CALLDATALOAD
0x157 ISZERO
0x158 ISZERO
0x159 PUSH2 0x7fe
0x15c JUMP
---
0x12c: JUMPDEST 
0x12d: V93 = 0xf4
0x130: V94 = 0x1
0x132: V95 = 0xa0
0x134: V96 = 0x2
0x136: V97 = EXP 0x2 0xa0
0x137: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x138: V99 = 0x4
0x13a: V100 = CALLDATALOAD 0x4
0x13c: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x13e: V102 = 0x24
0x140: V103 = CALLDATALOAD 0x24
0x142: V104 = 0x44
0x144: V105 = CALLDATALOAD 0x44
0x145: V106 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x146: V107 = 0x64
0x148: V108 = CALLDATALOAD 0x64
0x149: V109 = 0x84
0x14b: V110 = CALLDATALOAD 0x84
0x14c: V111 = 0xa4
0x14e: V112 = CALLDATALOAD 0xa4
0x14f: V113 = 0xc4
0x151: V114 = CALLDATALOAD 0xc4
0x152: V115 = ISZERO V114
0x153: V116 = ISZERO V115
0x154: V117 = 0xe4
0x156: V118 = CALLDATALOAD 0xe4
0x157: V119 = ISZERO V118
0x158: V120 = ISZERO V119
0x159: V121 = 0x7fe
0x15c: JUMP 0x7fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf4, V101, V103, V106, V108, V110, V112, V116, V120]
Exit stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]

================================

Block 0x15d
[0x15d:0x15e]
---
Predecessors: []
Successors: []
---
0x15d JUMPDEST
0x15e STOP
---
0x15d: JUMPDEST 
0x15e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15f
[0x15f:0x165]
---
Predecessors: [0x30]
Successors: [0x166, 0x16a]
---
0x15f JUMPDEST
0x160 CALLVALUE
0x161 ISZERO
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x15f: JUMPDEST 
0x160: V122 = CALLVALUE
0x161: V123 = ISZERO V122
0x162: V124 = 0x16a
0x165: JUMPI 0x16a V123
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x15f]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V125 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x15f]
Successors: [0x97e]
---
0x16a JUMPDEST
0x16b PUSH2 0x172
0x16e PUSH2 0x97e
0x171 JUMP
---
0x16a: JUMPDEST 
0x16b: V126 = 0x172
0x16e: V127 = 0x97e
0x171: JUMP 0x97e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x172]
Exit stack: [V12, 0x172]

================================

Block 0x172
[0x172:0x18d]
---
Predecessors: [0x97e, 0xc1f, 0x1314]
Successors: []
---
0x172 JUMPDEST
0x173 PUSH1 0x40
0x175 MLOAD
0x176 PUSH1 0x1
0x178 PUSH1 0xa0
0x17a PUSH1 0x2
0x17c EXP
0x17d SUB
0x17e SWAP1
0x17f SWAP2
0x180 AND
0x181 DUP2
0x182 MSTORE
0x183 PUSH1 0x20
0x185 ADD
0x186 PUSH1 0x40
0x188 MLOAD
0x189 DUP1
0x18a SWAP2
0x18b SUB
0x18c SWAP1
0x18d RETURN
---
0x172: JUMPDEST 
0x173: V128 = 0x40
0x175: V129 = M[0x40]
0x176: V130 = 0x1
0x178: V131 = 0xa0
0x17a: V132 = 0x2
0x17c: V133 = EXP 0x2 0xa0
0x17d: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x180: V135 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x182: M[V129] = V135
0x183: V136 = 0x20
0x185: V137 = ADD 0x20 V129
0x186: V138 = 0x40
0x188: V139 = M[0x40]
0x18b: V140 = SUB V137 V139
0x18d: RETURN V139 V140
---
Entry stack: [V12, 0x172, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x172]

================================

Block 0x18e
[0x18e:0x194]
---
Predecessors: [0x3b]
Successors: [0x195, 0x199]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18e: JUMPDEST 
0x18f: V141 = CALLVALUE
0x190: V142 = ISZERO V141
0x191: V143 = 0x199
0x194: JUMPI 0x199 V142
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18e]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V144 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x199
[0x199:0x1a0]
---
Predecessors: [0x18e]
Successors: [0x98d]
---
0x199 JUMPDEST
0x19a PUSH2 0x1a1
0x19d PUSH2 0x98d
0x1a0 JUMP
---
0x199: JUMPDEST 
0x19a: V145 = 0x1a1
0x19d: V146 = 0x98d
0x1a0: JUMP 0x98d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a1]
Exit stack: [V12, 0x1a1]

================================

Block 0x1a1
[0x1a1:0x1b2]
---
Predecessors: [0x98d, 0xc19, 0xd9d, 0x1196]
Successors: []
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 SWAP1
0x1a6 DUP2
0x1a7 MSTORE
0x1a8 PUSH1 0x20
0x1aa ADD
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae DUP1
0x1af SWAP2
0x1b0 SUB
0x1b1 SWAP1
0x1b2 RETURN
---
0x1a1: JUMPDEST 
0x1a2: V147 = 0x40
0x1a4: V148 = M[0x40]
0x1a7: M[V148] = S0
0x1a8: V149 = 0x20
0x1aa: V150 = ADD 0x20 V148
0x1ab: V151 = 0x40
0x1ad: V152 = M[0x40]
0x1b0: V153 = SUB V150 V152
0x1b2: RETURN V152 V153
---
Entry stack: [V12, 0x1a1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1a1]

================================

Block 0x1b3
[0x1b3:0x1b9]
---
Predecessors: [0x46]
Successors: [0x1ba, 0x1be]
---
0x1b3 JUMPDEST
0x1b4 CALLVALUE
0x1b5 ISZERO
0x1b6 PUSH2 0x1be
0x1b9 JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V154 = CALLVALUE
0x1b5: V155 = ISZERO V154
0x1b6: V156 = 0x1be
0x1b9: JUMPI 0x1be V155
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ba
[0x1ba:0x1bd]
---
Predecessors: [0x1b3]
Successors: []
---
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd REVERT
---
0x1ba: V157 = 0x0
0x1bd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1be
[0x1be:0x1c5]
---
Predecessors: [0x1b3]
Successors: [0x993]
---
0x1be JUMPDEST
0x1bf PUSH2 0x10d
0x1c2 PUSH2 0x993
0x1c5 JUMP
---
0x1be: JUMPDEST 
0x1bf: V158 = 0x10d
0x1c2: V159 = 0x993
0x1c5: JUMP 0x993
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10d]
Exit stack: [V12, 0x10d]

================================

Block 0x1c6
[0x1c6:0x1d9]
---
Predecessors: []
Successors: []
---
0x1c6 JUMPDEST
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca SWAP1
0x1cb ISZERO
0x1cc ISZERO
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 DUP1
0x1d6 SWAP2
0x1d7 SUB
0x1d8 SWAP1
0x1d9 RETURN
---
0x1c6: JUMPDEST 
0x1c7: V160 = 0x40
0x1c9: V161 = M[0x40]
0x1cb: V162 = ISZERO S0
0x1cc: V163 = ISZERO V162
0x1ce: M[V161] = V163
0x1cf: V164 = 0x20
0x1d1: V165 = ADD 0x20 V161
0x1d2: V166 = 0x40
0x1d4: V167 = M[0x40]
0x1d7: V168 = SUB V165 V167
0x1d9: RETURN V167 V168
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1da
[0x1da:0x1e0]
---
Predecessors: [0x51]
Successors: [0x1e1, 0x1e5]
---
0x1da JUMPDEST
0x1db CALLVALUE
0x1dc ISZERO
0x1dd PUSH2 0x1e5
0x1e0 JUMPI
---
0x1da: JUMPDEST 
0x1db: V169 = CALLVALUE
0x1dc: V170 = ISZERO V169
0x1dd: V171 = 0x1e5
0x1e0: JUMPI 0x1e5 V170
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e1
[0x1e1:0x1e4]
---
Predecessors: [0x1da]
Successors: []
---
0x1e1 PUSH1 0x0
0x1e3 DUP1
0x1e4 REVERT
---
0x1e1: V172 = 0x0
0x1e4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e5
[0x1e5:0x1fb]
---
Predecessors: [0x1da]
Successors: [0x9a1]
---
0x1e5 JUMPDEST
0x1e6 PUSH2 0x10d
0x1e9 PUSH1 0x1
0x1eb PUSH1 0xa0
0x1ed PUSH1 0x2
0x1ef EXP
0x1f0 SUB
0x1f1 PUSH1 0x4
0x1f3 CALLDATALOAD
0x1f4 AND
0x1f5 PUSH1 0x24
0x1f7 CALLDATALOAD
0x1f8 PUSH2 0x9a1
0x1fb JUMP
---
0x1e5: JUMPDEST 
0x1e6: V173 = 0x10d
0x1e9: V174 = 0x1
0x1eb: V175 = 0xa0
0x1ed: V176 = 0x2
0x1ef: V177 = EXP 0x2 0xa0
0x1f0: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f1: V179 = 0x4
0x1f3: V180 = CALLDATALOAD 0x4
0x1f4: V181 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x1f5: V182 = 0x24
0x1f7: V183 = CALLDATALOAD 0x24
0x1f8: V184 = 0x9a1
0x1fb: JUMP 0x9a1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10d, V181, V183]
Exit stack: [V12, 0x10d, V181, V183]

================================

Block 0x1fc
[0x1fc:0x20f]
---
Predecessors: []
Successors: []
---
0x1fc JUMPDEST
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 SWAP1
0x201 ISZERO
0x202 ISZERO
0x203 DUP2
0x204 MSTORE
0x205 PUSH1 0x20
0x207 ADD
0x208 PUSH1 0x40
0x20a MLOAD
0x20b DUP1
0x20c SWAP2
0x20d SUB
0x20e SWAP1
0x20f RETURN
---
0x1fc: JUMPDEST 
0x1fd: V185 = 0x40
0x1ff: V186 = M[0x40]
0x201: V187 = ISZERO S0
0x202: V188 = ISZERO V187
0x204: M[V186] = V188
0x205: V189 = 0x20
0x207: V190 = ADD 0x20 V186
0x208: V191 = 0x40
0x20a: V192 = M[0x40]
0x20d: V193 = SUB V190 V192
0x20f: RETURN V192 V193
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x210
[0x210:0x216]
---
Predecessors: [0x5c]
Successors: [0x217, 0x21b]
---
0x210 JUMPDEST
0x211 CALLVALUE
0x212 ISZERO
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x210: JUMPDEST 
0x211: V194 = CALLVALUE
0x212: V195 = ISZERO V194
0x213: V196 = 0x21b
0x216: JUMPI 0x21b V195
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x210]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V197 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21b
[0x21b:0x222]
---
Predecessors: [0x210]
Successors: [0xc19]
---
0x21b JUMPDEST
0x21c PUSH2 0x1a1
0x21f PUSH2 0xc19
0x222 JUMP
---
0x21b: JUMPDEST 
0x21c: V198 = 0x1a1
0x21f: V199 = 0xc19
0x222: JUMP 0xc19
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a1]
Exit stack: [V12, 0x1a1]

================================

Block 0x223
[0x223:0x234]
---
Predecessors: []
Successors: []
---
0x223 JUMPDEST
0x224 PUSH1 0x40
0x226 MLOAD
0x227 SWAP1
0x228 DUP2
0x229 MSTORE
0x22a PUSH1 0x20
0x22c ADD
0x22d PUSH1 0x40
0x22f MLOAD
0x230 DUP1
0x231 SWAP2
0x232 SUB
0x233 SWAP1
0x234 RETURN
---
0x223: JUMPDEST 
0x224: V200 = 0x40
0x226: V201 = M[0x40]
0x229: M[V201] = S0
0x22a: V202 = 0x20
0x22c: V203 = ADD 0x20 V201
0x22d: V204 = 0x40
0x22f: V205 = M[0x40]
0x232: V206 = SUB V203 V205
0x234: RETURN V205 V206
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x235
[0x235:0x23b]
---
Predecessors: [0x67]
Successors: [0x23c, 0x240]
---
0x235 JUMPDEST
0x236 CALLVALUE
0x237 ISZERO
0x238 PUSH2 0x240
0x23b JUMPI
---
0x235: JUMPDEST 
0x236: V207 = CALLVALUE
0x237: V208 = ISZERO V207
0x238: V209 = 0x240
0x23b: JUMPI 0x240 V208
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23c
[0x23c:0x23f]
---
Predecessors: [0x235]
Successors: []
---
0x23c PUSH1 0x0
0x23e DUP1
0x23f REVERT
---
0x23c: V210 = 0x0
0x23f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x240
[0x240:0x247]
---
Predecessors: [0x235]
Successors: [0xc1f]
---
0x240 JUMPDEST
0x241 PUSH2 0x172
0x244 PUSH2 0xc1f
0x247 JUMP
---
0x240: JUMPDEST 
0x241: V211 = 0x172
0x244: V212 = 0xc1f
0x247: JUMP 0xc1f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x172]
Exit stack: [V12, 0x172]

================================

Block 0x248
[0x248:0x263]
---
Predecessors: []
Successors: []
---
0x248 JUMPDEST
0x249 PUSH1 0x40
0x24b MLOAD
0x24c PUSH1 0x1
0x24e PUSH1 0xa0
0x250 PUSH1 0x2
0x252 EXP
0x253 SUB
0x254 SWAP1
0x255 SWAP2
0x256 AND
0x257 DUP2
0x258 MSTORE
0x259 PUSH1 0x20
0x25b ADD
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 SWAP2
0x261 SUB
0x262 SWAP1
0x263 RETURN
---
0x248: JUMPDEST 
0x249: V213 = 0x40
0x24b: V214 = M[0x40]
0x24c: V215 = 0x1
0x24e: V216 = 0xa0
0x250: V217 = 0x2
0x252: V218 = EXP 0x2 0xa0
0x253: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x256: V220 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x258: M[V214] = V220
0x259: V221 = 0x20
0x25b: V222 = ADD 0x20 V214
0x25c: V223 = 0x40
0x25e: V224 = M[0x40]
0x261: V225 = SUB V222 V224
0x263: RETURN V224 V225
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x264
[0x264:0x26b]
---
Predecessors: [0x72]
Successors: [0xc2e]
---
0x264 JUMPDEST
0x265 PUSH2 0xf4
0x268 PUSH2 0xc2e
0x26b JUMP
---
0x264: JUMPDEST 
0x265: V226 = 0xf4
0x268: V227 = 0xc2e
0x26b: JUMP 0xc2e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf4]
Exit stack: [V12, 0xf4]

================================

Block 0x26c
[0x26c:0x26d]
---
Predecessors: []
Successors: []
---
0x26c JUMPDEST
0x26d STOP
---
0x26c: JUMPDEST 
0x26d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x26e
[0x26e:0x274]
---
Predecessors: [0x7d]
Successors: [0x275, 0x279]
---
0x26e JUMPDEST
0x26f CALLVALUE
0x270 ISZERO
0x271 PUSH2 0x279
0x274 JUMPI
---
0x26e: JUMPDEST 
0x26f: V228 = CALLVALUE
0x270: V229 = ISZERO V228
0x271: V230 = 0x279
0x274: JUMPI 0x279 V229
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x275
[0x275:0x278]
---
Predecessors: [0x26e]
Successors: []
---
0x275 PUSH1 0x0
0x277 DUP1
0x278 REVERT
---
0x275: V231 = 0x0
0x278: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x279
[0x279:0x280]
---
Predecessors: [0x26e]
Successors: [0xd9d]
---
0x279 JUMPDEST
0x27a PUSH2 0x1a1
0x27d PUSH2 0xd9d
0x280 JUMP
---
0x279: JUMPDEST 
0x27a: V232 = 0x1a1
0x27d: V233 = 0xd9d
0x280: JUMP 0xd9d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a1]
Exit stack: [V12, 0x1a1]

================================

Block 0x281
[0x281:0x292]
---
Predecessors: []
Successors: []
---
0x281 JUMPDEST
0x282 PUSH1 0x40
0x284 MLOAD
0x285 SWAP1
0x286 DUP2
0x287 MSTORE
0x288 PUSH1 0x20
0x28a ADD
0x28b PUSH1 0x40
0x28d MLOAD
0x28e DUP1
0x28f SWAP2
0x290 SUB
0x291 SWAP1
0x292 RETURN
---
0x281: JUMPDEST 
0x282: V234 = 0x40
0x284: V235 = M[0x40]
0x287: M[V235] = S0
0x288: V236 = 0x20
0x28a: V237 = ADD 0x20 V235
0x28b: V238 = 0x40
0x28d: V239 = M[0x40]
0x290: V240 = SUB V237 V239
0x292: RETURN V239 V240
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x293
[0x293:0x299]
---
Predecessors: [0x88]
Successors: [0x29a, 0x29e]
---
0x293 JUMPDEST
0x294 CALLVALUE
0x295 ISZERO
0x296 PUSH2 0x29e
0x299 JUMPI
---
0x293: JUMPDEST 
0x294: V241 = CALLVALUE
0x295: V242 = ISZERO V241
0x296: V243 = 0x29e
0x299: JUMPI 0x29e V242
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29a
[0x29a:0x29d]
---
Predecessors: [0x293]
Successors: []
---
0x29a PUSH1 0x0
0x29c DUP1
0x29d REVERT
---
0x29a: V244 = 0x0
0x29d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29e
[0x29e:0x2a5]
---
Predecessors: [0x293]
Successors: [0xda3]
---
0x29e JUMPDEST
0x29f PUSH2 0x10d
0x2a2 PUSH2 0xda3
0x2a5 JUMP
---
0x29e: JUMPDEST 
0x29f: V245 = 0x10d
0x2a2: V246 = 0xda3
0x2a5: JUMP 0xda3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10d]
Exit stack: [V12, 0x10d]

================================

Block 0x2a6
[0x2a6:0x2b9]
---
Predecessors: []
Successors: []
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa SWAP1
0x2ab ISZERO
0x2ac ISZERO
0x2ad DUP2
0x2ae MSTORE
0x2af PUSH1 0x20
0x2b1 ADD
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 DUP1
0x2b6 SWAP2
0x2b7 SUB
0x2b8 SWAP1
0x2b9 RETURN
---
0x2a6: JUMPDEST 
0x2a7: V247 = 0x40
0x2a9: V248 = M[0x40]
0x2ab: V249 = ISZERO S0
0x2ac: V250 = ISZERO V249
0x2ae: M[V248] = V250
0x2af: V251 = 0x20
0x2b1: V252 = ADD 0x20 V248
0x2b2: V253 = 0x40
0x2b4: V254 = M[0x40]
0x2b7: V255 = SUB V252 V254
0x2b9: RETURN V254 V255
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ba
[0x2ba:0x2c0]
---
Predecessors: [0x93]
Successors: [0x2c1, 0x2c5]
---
0x2ba JUMPDEST
0x2bb CALLVALUE
0x2bc ISZERO
0x2bd PUSH2 0x2c5
0x2c0 JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V256 = CALLVALUE
0x2bc: V257 = ISZERO V256
0x2bd: V258 = 0x2c5
0x2c0: JUMPI 0x2c5 V257
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c1
[0x2c1:0x2c4]
---
Predecessors: [0x2ba]
Successors: []
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 REVERT
---
0x2c1: V259 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c5
[0x2c5:0x2db]
---
Predecessors: [0x2ba]
Successors: [0xdac]
---
0x2c5 JUMPDEST
0x2c6 PUSH2 0x10d
0x2c9 PUSH1 0x1
0x2cb PUSH1 0xa0
0x2cd PUSH1 0x2
0x2cf EXP
0x2d0 SUB
0x2d1 PUSH1 0x4
0x2d3 CALLDATALOAD
0x2d4 AND
0x2d5 PUSH1 0x24
0x2d7 CALLDATALOAD
0x2d8 PUSH2 0xdac
0x2db JUMP
---
0x2c5: JUMPDEST 
0x2c6: V260 = 0x10d
0x2c9: V261 = 0x1
0x2cb: V262 = 0xa0
0x2cd: V263 = 0x2
0x2cf: V264 = EXP 0x2 0xa0
0x2d0: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d1: V266 = 0x4
0x2d3: V267 = CALLDATALOAD 0x4
0x2d4: V268 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: V269 = 0x24
0x2d7: V270 = CALLDATALOAD 0x24
0x2d8: V271 = 0xdac
0x2db: JUMP 0xdac
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10d, V268, V270]
Exit stack: [V12, 0x10d, V268, V270]

================================

Block 0x2dc
[0x2dc:0x2ef]
---
Predecessors: []
Successors: []
---
0x2dc JUMPDEST
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 SWAP1
0x2e1 ISZERO
0x2e2 ISZERO
0x2e3 DUP2
0x2e4 MSTORE
0x2e5 PUSH1 0x20
0x2e7 ADD
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec SWAP2
0x2ed SUB
0x2ee SWAP1
0x2ef RETURN
---
0x2dc: JUMPDEST 
0x2dd: V272 = 0x40
0x2df: V273 = M[0x40]
0x2e1: V274 = ISZERO S0
0x2e2: V275 = ISZERO V274
0x2e4: M[V273] = V275
0x2e5: V276 = 0x20
0x2e7: V277 = ADD 0x20 V273
0x2e8: V278 = 0x40
0x2ea: V279 = M[0x40]
0x2ed: V280 = SUB V277 V279
0x2ef: RETURN V279 V280
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f0
[0x2f0:0x2f6]
---
Predecessors: [0x9e]
Successors: [0x2f7, 0x2fb]
---
0x2f0 JUMPDEST
0x2f1 CALLVALUE
0x2f2 ISZERO
0x2f3 PUSH2 0x2fb
0x2f6 JUMPI
---
0x2f0: JUMPDEST 
0x2f1: V281 = CALLVALUE
0x2f2: V282 = ISZERO V281
0x2f3: V283 = 0x2fb
0x2f6: JUMPI 0x2fb V282
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f7
[0x2f7:0x2fa]
---
Predecessors: [0x2f0]
Successors: []
---
0x2f7 PUSH1 0x0
0x2f9 DUP1
0x2fa REVERT
---
0x2f7: V284 = 0x0
0x2fa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fb
[0x2fb:0x311]
---
Predecessors: [0x2f0]
Successors: [0x100e]
---
0x2fb JUMPDEST
0x2fc PUSH2 0x10d
0x2ff PUSH1 0x1
0x301 PUSH1 0xa0
0x303 PUSH1 0x2
0x305 EXP
0x306 SUB
0x307 PUSH1 0x4
0x309 CALLDATALOAD
0x30a AND
0x30b PUSH1 0x24
0x30d CALLDATALOAD
0x30e PUSH2 0x100e
0x311 JUMP
---
0x2fb: JUMPDEST 
0x2fc: V285 = 0x10d
0x2ff: V286 = 0x1
0x301: V287 = 0xa0
0x303: V288 = 0x2
0x305: V289 = EXP 0x2 0xa0
0x306: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x307: V291 = 0x4
0x309: V292 = CALLDATALOAD 0x4
0x30a: V293 = AND V292 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V294 = 0x24
0x30d: V295 = CALLDATALOAD 0x24
0x30e: V296 = 0x100e
0x311: JUMP 0x100e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10d, V293, V295]
Exit stack: [V12, 0x10d, V293, V295]

================================

Block 0x312
[0x312:0x32d]
---
Predecessors: []
Successors: [0x3e7]
---
0x312 JUMPDEST
0x313 PUSH1 0x40
0x315 MLOAD
0x316 SWAP1
0x317 ISZERO
0x318 ISZERO
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x20
0x31d ADD
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP1
0x322 SWAP2
0x323 SUB
0x324 SWAP1
0x325 RETURN
0x326 JUMPDEST
0x327 PUSH2 0xf4
0x32a PUSH2 0x3e7
0x32d JUMP
---
0x312: JUMPDEST 
0x313: V297 = 0x40
0x315: V298 = M[0x40]
0x317: V299 = ISZERO S0
0x318: V300 = ISZERO V299
0x31a: M[V298] = V300
0x31b: V301 = 0x20
0x31d: V302 = ADD 0x20 V298
0x31e: V303 = 0x40
0x320: V304 = M[0x40]
0x323: V305 = SUB V302 V304
0x325: RETURN V304 V305
0x326: JUMPDEST 
0x327: V306 = 0xf4
0x32a: V307 = 0x3e7
0x32d: JUMP 0x3e7
---
Entry stack: []
Stack pops: 2
Stack additions: [0xf4]
Exit stack: []

================================

Block 0x32e
[0x32e:0x32f]
---
Predecessors: []
Successors: []
---
0x32e JUMPDEST
0x32f STOP
---
0x32e: JUMPDEST 
0x32f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x330
[0x330:0x336]
---
Predecessors: [0xb4]
Successors: [0x337, 0x33b]
---
0x330 JUMPDEST
0x331 CALLVALUE
0x332 ISZERO
0x333 PUSH2 0x33b
0x336 JUMPI
---
0x330: JUMPDEST 
0x331: V308 = CALLVALUE
0x332: V309 = ISZERO V308
0x333: V310 = 0x33b
0x336: JUMPI 0x33b V309
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x330]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V311 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33b
[0x33b:0x342]
---
Predecessors: [0x330]
Successors: [0x1196]
---
0x33b JUMPDEST
0x33c PUSH2 0x1a1
0x33f PUSH2 0x1196
0x342 JUMP
---
0x33b: JUMPDEST 
0x33c: V312 = 0x1a1
0x33f: V313 = 0x1196
0x342: JUMP 0x1196
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a1]
Exit stack: [V12, 0x1a1]

================================

Block 0x343
[0x343:0x354]
---
Predecessors: []
Successors: []
---
0x343 JUMPDEST
0x344 PUSH1 0x40
0x346 MLOAD
0x347 SWAP1
0x348 DUP2
0x349 MSTORE
0x34a PUSH1 0x20
0x34c ADD
0x34d PUSH1 0x40
0x34f MLOAD
0x350 DUP1
0x351 SWAP2
0x352 SUB
0x353 SWAP1
0x354 RETURN
---
0x343: JUMPDEST 
0x344: V314 = 0x40
0x346: V315 = M[0x40]
0x349: M[V315] = S0
0x34a: V316 = 0x20
0x34c: V317 = ADD 0x20 V315
0x34d: V318 = 0x40
0x34f: V319 = M[0x40]
0x352: V320 = SUB V317 V319
0x354: RETURN V319 V320
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x355
[0x355:0x35b]
---
Predecessors: [0xbf]
Successors: [0x35c, 0x360]
---
0x355 JUMPDEST
0x356 CALLVALUE
0x357 ISZERO
0x358 PUSH2 0x360
0x35b JUMPI
---
0x355: JUMPDEST 
0x356: V321 = CALLVALUE
0x357: V322 = ISZERO V321
0x358: V323 = 0x360
0x35b: JUMPI 0x360 V322
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35c
[0x35c:0x35f]
---
Predecessors: [0x355]
Successors: []
---
0x35c PUSH1 0x0
0x35e DUP1
0x35f REVERT
---
0x35c: V324 = 0x0
0x35f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x360
[0x360:0x36a]
---
Predecessors: [0x355]
Successors: [0x119c]
---
0x360 JUMPDEST
0x361 PUSH2 0x10d
0x364 PUSH1 0x4
0x366 CALLDATALOAD
0x367 PUSH2 0x119c
0x36a JUMP
---
0x360: JUMPDEST 
0x361: V325 = 0x10d
0x364: V326 = 0x4
0x366: V327 = CALLDATALOAD 0x4
0x367: V328 = 0x119c
0x36a: JUMP 0x119c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10d, V327]
Exit stack: [V12, 0x10d, V327]

================================

Block 0x36b
[0x36b:0x37e]
---
Predecessors: []
Successors: []
---
0x36b JUMPDEST
0x36c PUSH1 0x40
0x36e MLOAD
0x36f SWAP1
0x370 ISZERO
0x371 ISZERO
0x372 DUP2
0x373 MSTORE
0x374 PUSH1 0x20
0x376 ADD
0x377 PUSH1 0x40
0x379 MLOAD
0x37a DUP1
0x37b SWAP2
0x37c SUB
0x37d SWAP1
0x37e RETURN
---
0x36b: JUMPDEST 
0x36c: V329 = 0x40
0x36e: V330 = M[0x40]
0x370: V331 = ISZERO S0
0x371: V332 = ISZERO V331
0x373: M[V330] = V332
0x374: V333 = 0x20
0x376: V334 = ADD 0x20 V330
0x377: V335 = 0x40
0x379: V336 = M[0x40]
0x37c: V337 = SUB V334 V336
0x37e: RETURN V336 V337
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x37f
[0x37f:0x385]
---
Predecessors: [0xca]
Successors: [0x386, 0x38a]
---
0x37f JUMPDEST
0x380 CALLVALUE
0x381 ISZERO
0x382 PUSH2 0x38a
0x385 JUMPI
---
0x37f: JUMPDEST 
0x380: V338 = CALLVALUE
0x381: V339 = ISZERO V338
0x382: V340 = 0x38a
0x385: JUMPI 0x38a V339
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x386
[0x386:0x389]
---
Predecessors: [0x37f]
Successors: []
---
0x386 PUSH1 0x0
0x388 DUP1
0x389 REVERT
---
0x386: V341 = 0x0
0x389: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38a
[0x38a:0x391]
---
Predecessors: [0x37f]
Successors: [0x1314]
---
0x38a JUMPDEST
0x38b PUSH2 0x172
0x38e PUSH2 0x1314
0x391 JUMP
---
0x38a: JUMPDEST 
0x38b: V342 = 0x172
0x38e: V343 = 0x1314
0x391: JUMP 0x1314
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x172]
Exit stack: [V12, 0x172]

================================

Block 0x392
[0x392:0x3ad]
---
Predecessors: []
Successors: []
---
0x392 JUMPDEST
0x393 PUSH1 0x40
0x395 MLOAD
0x396 PUSH1 0x1
0x398 PUSH1 0xa0
0x39a PUSH1 0x2
0x39c EXP
0x39d SUB
0x39e SWAP1
0x39f SWAP2
0x3a0 AND
0x3a1 DUP2
0x3a2 MSTORE
0x3a3 PUSH1 0x20
0x3a5 ADD
0x3a6 PUSH1 0x40
0x3a8 MLOAD
0x3a9 DUP1
0x3aa SWAP2
0x3ab SUB
0x3ac SWAP1
0x3ad RETURN
---
0x392: JUMPDEST 
0x393: V344 = 0x40
0x395: V345 = M[0x40]
0x396: V346 = 0x1
0x398: V347 = 0xa0
0x39a: V348 = 0x2
0x39c: V349 = EXP 0x2 0xa0
0x39d: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a0: V351 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: M[V345] = V351
0x3a3: V352 = 0x20
0x3a5: V353 = ADD 0x20 V345
0x3a6: V354 = 0x40
0x3a8: V355 = M[0x40]
0x3ab: V356 = SUB V353 V355
0x3ad: RETURN V355 V356
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3ae
[0x3ae:0x3b4]
---
Predecessors: [0xd5]
Successors: [0x3b5, 0x3b9]
---
0x3ae JUMPDEST
0x3af CALLVALUE
0x3b0 ISZERO
0x3b1 PUSH2 0x3b9
0x3b4 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V357 = CALLVALUE
0x3b0: V358 = ISZERO V357
0x3b1: V359 = 0x3b9
0x3b4: JUMPI 0x3b9 V358
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b5
[0x3b5:0x3b8]
---
Predecessors: [0x3ae]
Successors: []
---
0x3b5 PUSH1 0x0
0x3b7 DUP1
0x3b8 REVERT
---
0x3b5: V360 = 0x0
0x3b8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b9
[0x3b9:0x3c3]
---
Predecessors: [0x3ae]
Successors: [0x1323]
---
0x3b9 JUMPDEST
0x3ba PUSH2 0xf4
0x3bd PUSH1 0x4
0x3bf CALLDATALOAD
0x3c0 PUSH2 0x1323
0x3c3 JUMP
---
0x3b9: JUMPDEST 
0x3ba: V361 = 0xf4
0x3bd: V362 = 0x4
0x3bf: V363 = CALLDATALOAD 0x4
0x3c0: V364 = 0x1323
0x3c3: JUMP 0x1323
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf4, V363]
Exit stack: [V12, 0xf4, V363]

================================

Block 0x3c4
[0x3c4:0x3c5]
---
Predecessors: []
Successors: []
---
0x3c4 JUMPDEST
0x3c5 STOP
---
0x3c4: JUMPDEST 
0x3c5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3c6
[0x3c6:0x3cc]
---
Predecessors: [0xe0]
Successors: [0x3cd, 0x3d1]
---
0x3c6 JUMPDEST
0x3c7 CALLVALUE
0x3c8 ISZERO
0x3c9 PUSH2 0x3d1
0x3cc JUMPI
---
0x3c6: JUMPDEST 
0x3c7: V365 = CALLVALUE
0x3c8: V366 = ISZERO V365
0x3c9: V367 = 0x3d1
0x3cc: JUMPI 0x3d1 V366
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cd
[0x3cd:0x3d0]
---
Predecessors: [0x3c6]
Successors: []
---
0x3cd PUSH1 0x0
0x3cf DUP1
0x3d0 REVERT
---
0x3cd: V368 = 0x0
0x3d0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d1
[0x3d1:0x3e4]
---
Predecessors: [0x3c6]
Successors: [0x155a]
---
0x3d1 JUMPDEST
0x3d2 PUSH2 0xf4
0x3d5 PUSH1 0x1
0x3d7 PUSH1 0xa0
0x3d9 PUSH1 0x2
0x3db EXP
0x3dc SUB
0x3dd PUSH1 0x4
0x3df CALLDATALOAD
0x3e0 AND
0x3e1 PUSH2 0x155a
0x3e4 JUMP
---
0x3d1: JUMPDEST 
0x3d2: V369 = 0xf4
0x3d5: V370 = 0x1
0x3d7: V371 = 0xa0
0x3d9: V372 = 0x2
0x3db: V373 = EXP 0x2 0xa0
0x3dc: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dd: V375 = 0x4
0x3df: V376 = CALLDATALOAD 0x4
0x3e0: V377 = AND V376 0xffffffffffffffffffffffffffffffffffffffff
0x3e1: V378 = 0x155a
0x3e4: JUMP 0x155a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf4, V377]
Exit stack: [V12, 0xf4, V377]

================================

Block 0x3e5
[0x3e5:0x3e6]
---
Predecessors: []
Successors: []
---
0x3e5 JUMPDEST
0x3e6 STOP
---
0x3e5: JUMPDEST 
0x3e6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3e7
[0x3e7:0x460]
---
Predecessors: [0xec, 0x312]
Successors: [0x461, 0x465]
---
0x3e7 JUMPDEST
0x3e8 PUSH1 0x1
0x3ea SLOAD
0x3eb PUSH1 0x0
0x3ed DUP1
0x3ee SLOAD
0x3ef PUSH1 0x6
0x3f1 SLOAD
0x3f2 SWAP2
0x3f3 SWAP3
0x3f4 DUP4
0x3f5 SWAP3
0x3f6 DUP4
0x3f7 SWAP3
0x3f8 PUSH1 0x1
0x3fa PUSH1 0xa0
0x3fc PUSH1 0x2
0x3fe EXP
0x3ff SUB
0x400 SWAP3
0x401 DUP4
0x402 AND
0x403 SWAP3
0x404 PUSH4 0x23b872dd
0x409 SWAP3
0x40a SWAP2
0x40b AND
0x40c SWAP1
0x40d DUP4
0x40e SWAP1
0x40f DUP6
0x410 PUSH1 0x40
0x412 MLOAD
0x413 PUSH1 0x20
0x415 ADD
0x416 MSTORE
0x417 PUSH1 0x40
0x419 MLOAD
0x41a PUSH1 0xe0
0x41c PUSH1 0x2
0x41e EXP
0x41f PUSH4 0xffffffff
0x424 DUP7
0x425 AND
0x426 MUL
0x427 DUP2
0x428 MSTORE
0x429 PUSH1 0x1
0x42b PUSH1 0xa0
0x42d PUSH1 0x2
0x42f EXP
0x430 SUB
0x431 SWAP4
0x432 DUP5
0x433 AND
0x434 PUSH1 0x4
0x436 DUP3
0x437 ADD
0x438 MSTORE
0x439 SWAP2
0x43a SWAP1
0x43b SWAP3
0x43c AND
0x43d PUSH1 0x24
0x43f DUP3
0x440 ADD
0x441 MSTORE
0x442 PUSH1 0x44
0x444 DUP2
0x445 ADD
0x446 SWAP2
0x447 SWAP1
0x448 SWAP2
0x449 MSTORE
0x44a PUSH1 0x64
0x44c ADD
0x44d PUSH1 0x20
0x44f PUSH1 0x40
0x451 MLOAD
0x452 DUP1
0x453 DUP4
0x454 SUB
0x455 DUP2
0x456 PUSH1 0x0
0x458 DUP8
0x459 DUP1
0x45a EXTCODESIZE
0x45b ISZERO
0x45c ISZERO
0x45d PUSH2 0x465
0x460 JUMPI
---
0x3e7: JUMPDEST 
0x3e8: V379 = 0x1
0x3ea: V380 = S[0x1]
0x3eb: V381 = 0x0
0x3ee: V382 = S[0x0]
0x3ef: V383 = 0x6
0x3f1: V384 = S[0x6]
0x3f8: V385 = 0x1
0x3fa: V386 = 0xa0
0x3fc: V387 = 0x2
0x3fe: V388 = EXP 0x2 0xa0
0x3ff: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x402: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x404: V391 = 0x23b872dd
0x40b: V392 = AND V382 0xffffffffffffffffffffffffffffffffffffffff
0x410: V393 = 0x40
0x412: V394 = M[0x40]
0x413: V395 = 0x20
0x415: V396 = ADD 0x20 V394
0x416: M[V396] = 0x0
0x417: V397 = 0x40
0x419: V398 = M[0x40]
0x41a: V399 = 0xe0
0x41c: V400 = 0x2
0x41e: V401 = EXP 0x2 0xe0
0x41f: V402 = 0xffffffff
0x425: V403 = AND 0x23b872dd 0xffffffff
0x426: V404 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x428: M[V398] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x429: V405 = 0x1
0x42b: V406 = 0xa0
0x42d: V407 = 0x2
0x42f: V408 = EXP 0x2 0xa0
0x430: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x433: V410 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x434: V411 = 0x4
0x437: V412 = ADD V398 0x4
0x438: M[V412] = V410
0x43c: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x43d: V414 = 0x24
0x440: V415 = ADD V398 0x24
0x441: M[V415] = V413
0x442: V416 = 0x44
0x445: V417 = ADD V398 0x44
0x449: M[V417] = V384
0x44a: V418 = 0x64
0x44c: V419 = ADD 0x64 V398
0x44d: V420 = 0x20
0x44f: V421 = 0x40
0x451: V422 = M[0x40]
0x454: V423 = SUB V419 V422
0x456: V424 = 0x0
0x45a: V425 = EXTCODESIZE V390
0x45b: V426 = ISZERO V425
0x45c: V427 = ISZERO V426
0x45d: V428 = 0x465
0x460: JUMPI 0x465 V427
---
Entry stack: [V12, 0xf4]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V390, 0x23b872dd, V419, 0x20, V422, V423, V422, 0x0, V390]
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0, V390, 0x23b872dd, V419, 0x20, V422, V423, V422, 0x0, V390]

================================

Block 0x461
[0x461:0x464]
---
Predecessors: [0x3e7]
Successors: []
---
0x461 PUSH1 0x0
0x463 DUP1
0x464 REVERT
---
0x461: V429 = 0x0
0x464: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0, V390, 0x23b872dd, V419, 0x20, V422, V423, V422, 0x0, V390]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0, V390, 0x23b872dd, V419, 0x20, V422, V423, V422, 0x0, V390]

================================

Block 0x465
[0x465:0x471]
---
Predecessors: [0x3e7]
Successors: [0x472, 0x476]
---
0x465 JUMPDEST
0x466 PUSH2 0x2c6
0x469 GAS
0x46a SUB
0x46b CALL
0x46c ISZERO
0x46d ISZERO
0x46e PUSH2 0x476
0x471 JUMPI
---
0x465: JUMPDEST 
0x466: V430 = 0x2c6
0x469: V431 = GAS
0x46a: V432 = SUB V431 0x2c6
0x46b: V433 = CALL V432 V390 0x0 V422 V423 V422 0x20
0x46c: V434 = ISZERO V433
0x46d: V435 = ISZERO V434
0x46e: V436 = 0x476
0x471: JUMPI 0x476 V435
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0, V390, 0x23b872dd, V419, 0x20, V422, V423, V422, 0x0, V390]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0, V390, 0x23b872dd, V419]

================================

Block 0x472
[0x472:0x475]
---
Predecessors: [0x465]
Successors: []
---
0x472 PUSH1 0x0
0x474 DUP1
0x475 REVERT
---
0x472: V437 = 0x0
0x475: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0, V390, 0x23b872dd, V419]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0, V390, 0x23b872dd, V419]

================================

Block 0x476
[0x476:0x486]
---
Predecessors: [0x465]
Successors: [0x487, 0x48b]
---
0x476 JUMPDEST
0x477 POP
0x478 POP
0x479 POP
0x47a PUSH1 0x40
0x47c MLOAD
0x47d DUP1
0x47e MLOAD
0x47f SWAP1
0x480 POP
0x481 ISZERO
0x482 ISZERO
0x483 PUSH2 0x48b
0x486 JUMPI
---
0x476: JUMPDEST 
0x47a: V438 = 0x40
0x47c: V439 = M[0x40]
0x47e: V440 = M[V439]
0x481: V441 = ISZERO V440
0x482: V442 = ISZERO V441
0x483: V443 = 0x48b
0x486: JUMPI 0x48b V442
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0, V390, 0x23b872dd, V419]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0]

================================

Block 0x487
[0x487:0x48a]
---
Predecessors: [0x476]
Successors: []
---
0x487 PUSH1 0x0
0x489 DUP1
0x48a REVERT
---
0x487: V444 = 0x0
0x48a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0]

================================

Block 0x48b
[0x48b:0x49b]
---
Predecessors: [0x476]
Successors: [0x49c, 0x4af]
---
0x48b JUMPDEST
0x48c PUSH1 0x7
0x48e SLOAD
0x48f PUSH2 0x100
0x492 SWAP1
0x493 DIV
0x494 PUSH1 0xff
0x496 AND
0x497 DUP1
0x498 PUSH2 0x4af
0x49b JUMPI
---
0x48b: JUMPDEST 
0x48c: V445 = 0x7
0x48e: V446 = S[0x7]
0x48f: V447 = 0x100
0x493: V448 = DIV V446 0x100
0x494: V449 = 0xff
0x496: V450 = AND 0xff V448
0x498: V451 = 0x4af
0x49b: JUMPI 0x4af V450
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V450]
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0, V450]

================================

Block 0x49c
[0x49c:0x4ae]
---
Predecessors: [0x48b]
Successors: [0x4af]
---
0x49c POP
0x49d PUSH1 0x0
0x49f SLOAD
0x4a0 CALLER
0x4a1 PUSH1 0x1
0x4a3 PUSH1 0xa0
0x4a5 PUSH1 0x2
0x4a7 EXP
0x4a8 SUB
0x4a9 SWAP1
0x4aa DUP2
0x4ab AND
0x4ac SWAP2
0x4ad AND
0x4ae EQ
---
0x49d: V452 = 0x0
0x49f: V453 = S[0x0]
0x4a0: V454 = CALLER
0x4a1: V455 = 0x1
0x4a3: V456 = 0xa0
0x4a5: V457 = 0x2
0x4a7: V458 = EXP 0x2 0xa0
0x4a8: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ab: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x4ad: V461 = AND V453 0xffffffffffffffffffffffffffffffffffffffff
0x4ae: V462 = EQ V461 V460
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0, V450]
Stack pops: 1
Stack additions: [V462]
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0, V462]

================================

Block 0x4af
[0x4af:0x4b4]
---
Predecessors: [0x48b, 0x49c]
Successors: [0x4b5, 0x695]
---
0x4af JUMPDEST
0x4b0 ISZERO
0x4b1 PUSH2 0x695
0x4b4 JUMPI
---
0x4af: JUMPDEST 
0x4b0: V463 = ISZERO S0
0x4b1: V464 = 0x695
0x4b4: JUMPI 0x695 V463
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0]

================================

Block 0x4b5
[0x4b5:0x4bf]
---
Predecessors: [0x4af]
Successors: [0x4c0, 0x4c1]
---
0x4b5 PUSH1 0x4
0x4b7 SLOAD
0x4b8 CALLVALUE
0x4b9 DUP2
0x4ba ISZERO
0x4bb ISZERO
0x4bc PUSH2 0x4c1
0x4bf JUMPI
---
0x4b5: V465 = 0x4
0x4b7: V466 = S[0x4]
0x4b8: V467 = CALLVALUE
0x4ba: V468 = ISZERO V466
0x4bb: V469 = ISZERO V468
0x4bc: V470 = 0x4c1
0x4bf: JUMPI 0x4c1 V469
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V466, V467]
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0, V466, V467]

================================

Block 0x4c0
[0x4c0:0x4c0]
---
Predecessors: [0x4b5]
Successors: []
---
0x4c0 INVALID
---
0x4c0: INVALID 
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0, V466, V467]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0, V466, V467]

================================

Block 0x4c1
[0x4c1:0x51f]
---
Predecessors: [0x4b5]
Successors: [0x520, 0x524]
---
0x4c1 JUMPDEST
0x4c2 PUSH1 0x5
0x4c4 SLOAD
0x4c5 PUSH1 0x2
0x4c7 SLOAD
0x4c8 SWAP3
0x4c9 SWAP1
0x4ca SWAP2
0x4cb DIV
0x4cc SWAP5
0x4cd POP
0x4ce SWAP1
0x4cf PUSH1 0x1
0x4d1 PUSH1 0xa0
0x4d3 PUSH1 0x2
0x4d5 EXP
0x4d6 SUB
0x4d7 AND
0x4d8 PUSH4 0x70a08231
0x4dd ADDRESS
0x4de PUSH1 0x0
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 PUSH1 0x20
0x4e5 ADD
0x4e6 MSTORE
0x4e7 PUSH1 0x40
0x4e9 MLOAD
0x4ea PUSH1 0xe0
0x4ec PUSH1 0x2
0x4ee EXP
0x4ef PUSH4 0xffffffff
0x4f4 DUP5
0x4f5 AND
0x4f6 MUL
0x4f7 DUP2
0x4f8 MSTORE
0x4f9 PUSH1 0x1
0x4fb PUSH1 0xa0
0x4fd PUSH1 0x2
0x4ff EXP
0x500 SUB
0x501 SWAP1
0x502 SWAP2
0x503 AND
0x504 PUSH1 0x4
0x506 DUP3
0x507 ADD
0x508 MSTORE
0x509 PUSH1 0x24
0x50b ADD
0x50c PUSH1 0x20
0x50e PUSH1 0x40
0x510 MLOAD
0x511 DUP1
0x512 DUP4
0x513 SUB
0x514 DUP2
0x515 PUSH1 0x0
0x517 DUP8
0x518 DUP1
0x519 EXTCODESIZE
0x51a ISZERO
0x51b ISZERO
0x51c PUSH2 0x524
0x51f JUMPI
---
0x4c1: JUMPDEST 
0x4c2: V471 = 0x5
0x4c4: V472 = S[0x5]
0x4c5: V473 = 0x2
0x4c7: V474 = S[0x2]
0x4cb: V475 = DIV V467 V466
0x4cf: V476 = 0x1
0x4d1: V477 = 0xa0
0x4d3: V478 = 0x2
0x4d5: V479 = EXP 0x2 0xa0
0x4d6: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d7: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x4d8: V482 = 0x70a08231
0x4dd: V483 = ADDRESS
0x4de: V484 = 0x0
0x4e0: V485 = 0x40
0x4e2: V486 = M[0x40]
0x4e3: V487 = 0x20
0x4e5: V488 = ADD 0x20 V486
0x4e6: M[V488] = 0x0
0x4e7: V489 = 0x40
0x4e9: V490 = M[0x40]
0x4ea: V491 = 0xe0
0x4ec: V492 = 0x2
0x4ee: V493 = EXP 0x2 0xe0
0x4ef: V494 = 0xffffffff
0x4f5: V495 = AND 0x70a08231 0xffffffff
0x4f6: V496 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x4f8: M[V490] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4f9: V497 = 0x1
0x4fb: V498 = 0xa0
0x4fd: V499 = 0x2
0x4ff: V500 = EXP 0x2 0xa0
0x500: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x503: V502 = AND V483 0xffffffffffffffffffffffffffffffffffffffff
0x504: V503 = 0x4
0x507: V504 = ADD V490 0x4
0x508: M[V504] = V502
0x509: V505 = 0x24
0x50b: V506 = ADD 0x24 V490
0x50c: V507 = 0x20
0x50e: V508 = 0x40
0x510: V509 = M[0x40]
0x513: V510 = SUB V506 V509
0x515: V511 = 0x0
0x519: V512 = EXTCODESIZE V481
0x51a: V513 = ISZERO V512
0x51b: V514 = ISZERO V513
0x51c: V515 = 0x524
0x51f: JUMPI 0x524 V514
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0, V466, V467]
Stack pops: 5
Stack additions: [V475, S3, S2, V472, V481, 0x70a08231, V506, 0x20, V509, V510, V509, 0x0, V481]
Exit stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V481, 0x70a08231, V506, 0x20, V509, V510, V509, 0x0, V481]

================================

Block 0x520
[0x520:0x523]
---
Predecessors: [0x4c1]
Successors: []
---
0x520 PUSH1 0x0
0x522 DUP1
0x523 REVERT
---
0x520: V516 = 0x0
0x523: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V481, 0x70a08231, V506, 0x20, V509, V510, V509, 0x0, V481]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V481, 0x70a08231, V506, 0x20, V509, V510, V509, 0x0, V481]

================================

Block 0x524
[0x524:0x530]
---
Predecessors: [0x4c1]
Successors: [0x531, 0x535]
---
0x524 JUMPDEST
0x525 PUSH2 0x2c6
0x528 GAS
0x529 SUB
0x52a CALL
0x52b ISZERO
0x52c ISZERO
0x52d PUSH2 0x535
0x530 JUMPI
---
0x524: JUMPDEST 
0x525: V517 = 0x2c6
0x528: V518 = GAS
0x529: V519 = SUB V518 0x2c6
0x52a: V520 = CALL V519 V481 0x0 V509 V510 V509 0x20
0x52b: V521 = ISZERO V520
0x52c: V522 = ISZERO V521
0x52d: V523 = 0x535
0x530: JUMPI 0x535 V522
---
Entry stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V481, 0x70a08231, V506, 0x20, V509, V510, V509, 0x0, V481]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V481, 0x70a08231, V506]

================================

Block 0x531
[0x531:0x534]
---
Predecessors: [0x524]
Successors: []
---
0x531 PUSH1 0x0
0x533 DUP1
0x534 REVERT
---
0x531: V524 = 0x0
0x534: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V481, 0x70a08231, V506]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V481, 0x70a08231, V506]

================================

Block 0x535
[0x535:0x546]
---
Predecessors: [0x524]
Successors: [0x547, 0x548]
---
0x535 JUMPDEST
0x536 POP
0x537 POP
0x538 POP
0x539 PUSH1 0x40
0x53b MLOAD
0x53c DUP1
0x53d MLOAD
0x53e SWAP1
0x53f POP
0x540 DUP2
0x541 ISZERO
0x542 ISZERO
0x543 PUSH2 0x548
0x546 JUMPI
---
0x535: JUMPDEST 
0x539: V525 = 0x40
0x53b: V526 = M[0x40]
0x53d: V527 = M[V526]
0x541: V528 = ISZERO V472
0x542: V529 = ISZERO V528
0x543: V530 = 0x548
0x546: JUMPI 0x548 V529
---
Entry stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V481, 0x70a08231, V506]
Stack pops: 4
Stack additions: [S3, V527]
Exit stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V527]

================================

Block 0x547
[0x547:0x547]
---
Predecessors: [0x535]
Successors: []
---
0x547 INVALID
---
0x547: INVALID 
---
Entry stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V527]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V527]

================================

Block 0x548
[0x548:0x55b]
---
Predecessors: [0x535]
Successors: [0x55c, 0x568]
---
0x548 JUMPDEST
0x549 DIV
0x54a SWAP2
0x54b POP
0x54c PUSH1 0x0
0x54e SWAP1
0x54f POP
0x550 PUSH1 0x4
0x552 SLOAD
0x553 DUP3
0x554 MUL
0x555 CALLVALUE
0x556 GT
0x557 ISZERO
0x558 PUSH2 0x568
0x55b JUMPI
---
0x548: JUMPDEST 
0x549: V531 = DIV V527 V472
0x54c: V532 = 0x0
0x550: V533 = 0x4
0x552: V534 = S[0x4]
0x554: V535 = MUL V531 V534
0x555: V536 = CALLVALUE
0x556: V537 = GT V536 V535
0x557: V538 = ISZERO V537
0x558: V539 = 0x568
0x55b: JUMPI 0x568 V538
---
Entry stack: [V12, 0xf4, V475, 0x0, 0x0, V472, V527]
Stack pops: 4
Stack additions: [V531, 0x0]
Exit stack: [V12, 0xf4, V475, V531, 0x0]

================================

Block 0x55c
[0x55c:0x567]
---
Predecessors: [0x548]
Successors: [0x568]
---
0x55c PUSH1 0x4
0x55e SLOAD
0x55f DUP3
0x560 MUL
0x561 CALLVALUE
0x562 SUB
0x563 SWAP1
0x564 POP
0x565 DUP2
0x566 SWAP3
0x567 POP
---
0x55c: V540 = 0x4
0x55e: V541 = S[0x4]
0x560: V542 = MUL V531 V541
0x561: V543 = CALLVALUE
0x562: V544 = SUB V543 V542
---
Entry stack: [V12, 0xf4, V475, V531, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V544]
Exit stack: [V12, 0xf4, V531, V531, V544]

================================

Block 0x568
[0x568:0x571]
---
Predecessors: [0x548, 0x55c]
Successors: [0x572, 0x5a2]
---
0x568 JUMPDEST
0x569 PUSH1 0x0
0x56b DUP2
0x56c GT
0x56d ISZERO
0x56e PUSH2 0x5a2
0x571 JUMPI
---
0x568: JUMPDEST 
0x569: V545 = 0x0
0x56c: V546 = GT S0 0x0
0x56d: V547 = ISZERO V546
0x56e: V548 = 0x5a2
0x571: JUMPI 0x5a2 V547
---
Entry stack: [V12, 0xf4, S2, V531, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xf4, S2, V531, S0]

================================

Block 0x572
[0x572:0x59d]
---
Predecessors: [0x568]
Successors: [0x59e, 0x5a2]
---
0x572 PUSH1 0x1
0x574 PUSH1 0xa0
0x576 PUSH1 0x2
0x578 EXP
0x579 SUB
0x57a CALLER
0x57b AND
0x57c DUP2
0x57d ISZERO
0x57e PUSH2 0x8fc
0x581 MUL
0x582 DUP3
0x583 PUSH1 0x40
0x585 MLOAD
0x586 PUSH1 0x0
0x588 PUSH1 0x40
0x58a MLOAD
0x58b DUP1
0x58c DUP4
0x58d SUB
0x58e DUP2
0x58f DUP6
0x590 DUP9
0x591 DUP9
0x592 CALL
0x593 SWAP4
0x594 POP
0x595 POP
0x596 POP
0x597 POP
0x598 ISZERO
0x599 ISZERO
0x59a PUSH2 0x5a2
0x59d JUMPI
---
0x572: V549 = 0x1
0x574: V550 = 0xa0
0x576: V551 = 0x2
0x578: V552 = EXP 0x2 0xa0
0x579: V553 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57a: V554 = CALLER
0x57b: V555 = AND V554 0xffffffffffffffffffffffffffffffffffffffff
0x57d: V556 = ISZERO S0
0x57e: V557 = 0x8fc
0x581: V558 = MUL 0x8fc V556
0x583: V559 = 0x40
0x585: V560 = M[0x40]
0x586: V561 = 0x0
0x588: V562 = 0x40
0x58a: V563 = M[0x40]
0x58d: V564 = SUB V560 V563
0x592: V565 = CALL V558 V555 S0 V563 V564 V563 0x0
0x598: V566 = ISZERO V565
0x599: V567 = ISZERO V566
0x59a: V568 = 0x5a2
0x59d: JUMPI 0x5a2 V567
---
Entry stack: [V12, 0xf4, S2, V531, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xf4, S2, V531, S0]

================================

Block 0x59e
[0x59e:0x5a1]
---
Predecessors: [0x572]
Successors: []
---
0x59e PUSH1 0x0
0x5a0 DUP1
0x5a1 REVERT
---
0x59e: V569 = 0x0
0x5a1: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, S2, V531, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, S2, V531, S0]

================================

Block 0x5a2
[0x5a2:0x5a2]
---
Predecessors: [0x568, 0x572]
Successors: [0x5a3]
---
0x5a2 JUMPDEST
---
0x5a2: JUMPDEST 
---
Entry stack: [V12, 0xf4, S2, V531, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, S2, V531, S0]

================================

Block 0x5a3
[0x5a3:0x5ac]
---
Predecessors: [0x5a2]
Successors: [0x5ad, 0x63a]
---
0x5a3 JUMPDEST
0x5a4 PUSH1 0x0
0x5a6 DUP4
0x5a7 GT
0x5a8 ISZERO
0x5a9 PUSH2 0x63a
0x5ac JUMPI
---
0x5a3: JUMPDEST 
0x5a4: V570 = 0x0
0x5a7: V571 = GT S2 0x0
0x5a8: V572 = ISZERO V571
0x5a9: V573 = 0x63a
0x5ac: JUMPI 0x63a V572
---
Entry stack: [V12, 0xf4, S2, V531, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xf4, S2, V531, S0]

================================

Block 0x5ad
[0x5ad:0x60f]
---
Predecessors: [0x5a3]
Successors: [0x610, 0x614]
---
0x5ad PUSH1 0x2
0x5af SLOAD
0x5b0 PUSH1 0x5
0x5b2 SLOAD
0x5b3 PUSH1 0x1
0x5b5 PUSH1 0xa0
0x5b7 PUSH1 0x2
0x5b9 EXP
0x5ba SUB
0x5bb SWAP1
0x5bc SWAP2
0x5bd AND
0x5be SWAP1
0x5bf PUSH4 0xa9059cbb
0x5c4 SWAP1
0x5c5 CALLER
0x5c6 SWAP1
0x5c7 DUP7
0x5c8 MUL
0x5c9 PUSH1 0x0
0x5cb PUSH1 0x40
0x5cd MLOAD
0x5ce PUSH1 0x20
0x5d0 ADD
0x5d1 MSTORE
0x5d2 PUSH1 0x40
0x5d4 MLOAD
0x5d5 PUSH1 0xe0
0x5d7 PUSH1 0x2
0x5d9 EXP
0x5da PUSH4 0xffffffff
0x5df DUP6
0x5e0 AND
0x5e1 MUL
0x5e2 DUP2
0x5e3 MSTORE
0x5e4 PUSH1 0x1
0x5e6 PUSH1 0xa0
0x5e8 PUSH1 0x2
0x5ea EXP
0x5eb SUB
0x5ec SWAP1
0x5ed SWAP3
0x5ee AND
0x5ef PUSH1 0x4
0x5f1 DUP4
0x5f2 ADD
0x5f3 MSTORE
0x5f4 PUSH1 0x24
0x5f6 DUP3
0x5f7 ADD
0x5f8 MSTORE
0x5f9 PUSH1 0x44
0x5fb ADD
0x5fc PUSH1 0x20
0x5fe PUSH1 0x40
0x600 MLOAD
0x601 DUP1
0x602 DUP4
0x603 SUB
0x604 DUP2
0x605 PUSH1 0x0
0x607 DUP8
0x608 DUP1
0x609 EXTCODESIZE
0x60a ISZERO
0x60b ISZERO
0x60c PUSH2 0x614
0x60f JUMPI
---
0x5ad: V574 = 0x2
0x5af: V575 = S[0x2]
0x5b0: V576 = 0x5
0x5b2: V577 = S[0x5]
0x5b3: V578 = 0x1
0x5b5: V579 = 0xa0
0x5b7: V580 = 0x2
0x5b9: V581 = EXP 0x2 0xa0
0x5ba: V582 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bd: V583 = AND V575 0xffffffffffffffffffffffffffffffffffffffff
0x5bf: V584 = 0xa9059cbb
0x5c5: V585 = CALLER
0x5c8: V586 = MUL S2 V577
0x5c9: V587 = 0x0
0x5cb: V588 = 0x40
0x5cd: V589 = M[0x40]
0x5ce: V590 = 0x20
0x5d0: V591 = ADD 0x20 V589
0x5d1: M[V591] = 0x0
0x5d2: V592 = 0x40
0x5d4: V593 = M[0x40]
0x5d5: V594 = 0xe0
0x5d7: V595 = 0x2
0x5d9: V596 = EXP 0x2 0xe0
0x5da: V597 = 0xffffffff
0x5e0: V598 = AND 0xa9059cbb 0xffffffff
0x5e1: V599 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x5e3: M[V593] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5e4: V600 = 0x1
0x5e6: V601 = 0xa0
0x5e8: V602 = 0x2
0x5ea: V603 = EXP 0x2 0xa0
0x5eb: V604 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ee: V605 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x5ef: V606 = 0x4
0x5f2: V607 = ADD V593 0x4
0x5f3: M[V607] = V605
0x5f4: V608 = 0x24
0x5f7: V609 = ADD V593 0x24
0x5f8: M[V609] = V586
0x5f9: V610 = 0x44
0x5fb: V611 = ADD 0x44 V593
0x5fc: V612 = 0x20
0x5fe: V613 = 0x40
0x600: V614 = M[0x40]
0x603: V615 = SUB V611 V614
0x605: V616 = 0x0
0x609: V617 = EXTCODESIZE V583
0x60a: V618 = ISZERO V617
0x60b: V619 = ISZERO V618
0x60c: V620 = 0x614
0x60f: JUMPI 0x614 V619
---
Entry stack: [V12, 0xf4, S2, V531, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V583, 0xa9059cbb, V611, 0x20, V614, V615, V614, 0x0, V583]
Exit stack: [V12, 0xf4, S2, V531, S0, V583, 0xa9059cbb, V611, 0x20, V614, V615, V614, 0x0, V583]

================================

Block 0x610
[0x610:0x613]
---
Predecessors: [0x5ad]
Successors: []
---
0x610 PUSH1 0x0
0x612 DUP1
0x613 REVERT
---
0x610: V621 = 0x0
0x613: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, S11, V531, S9, V583, 0xa9059cbb, V611, 0x20, V614, V615, V614, 0x0, V583]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, S11, V531, S9, V583, 0xa9059cbb, V611, 0x20, V614, V615, V614, 0x0, V583]

================================

Block 0x614
[0x614:0x620]
---
Predecessors: [0x5ad]
Successors: [0x621, 0x625]
---
0x614 JUMPDEST
0x615 PUSH2 0x2c6
0x618 GAS
0x619 SUB
0x61a CALL
0x61b ISZERO
0x61c ISZERO
0x61d PUSH2 0x625
0x620 JUMPI
---
0x614: JUMPDEST 
0x615: V622 = 0x2c6
0x618: V623 = GAS
0x619: V624 = SUB V623 0x2c6
0x61a: V625 = CALL V624 V583 0x0 V614 V615 V614 0x20
0x61b: V626 = ISZERO V625
0x61c: V627 = ISZERO V626
0x61d: V628 = 0x625
0x620: JUMPI 0x625 V627
---
Entry stack: [V12, 0xf4, S11, V531, S9, V583, 0xa9059cbb, V611, 0x20, V614, V615, V614, 0x0, V583]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf4, S11, V531, S9, V583, 0xa9059cbb, V611]

================================

Block 0x621
[0x621:0x624]
---
Predecessors: [0x614]
Successors: []
---
0x621 PUSH1 0x0
0x623 DUP1
0x624 REVERT
---
0x621: V629 = 0x0
0x624: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, S5, V531, S3, V583, 0xa9059cbb, V611]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, S5, V531, S3, V583, 0xa9059cbb, V611]

================================

Block 0x625
[0x625:0x635]
---
Predecessors: [0x614]
Successors: [0x636, 0x63a]
---
0x625 JUMPDEST
0x626 POP
0x627 POP
0x628 POP
0x629 PUSH1 0x40
0x62b MLOAD
0x62c DUP1
0x62d MLOAD
0x62e SWAP1
0x62f POP
0x630 ISZERO
0x631 ISZERO
0x632 PUSH2 0x63a
0x635 JUMPI
---
0x625: JUMPDEST 
0x629: V630 = 0x40
0x62b: V631 = M[0x40]
0x62d: V632 = M[V631]
0x630: V633 = ISZERO V632
0x631: V634 = ISZERO V633
0x632: V635 = 0x63a
0x635: JUMPI 0x63a V634
---
Entry stack: [V12, 0xf4, S5, V531, S3, V583, 0xa9059cbb, V611]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xf4, S5, V531, S3]

================================

Block 0x636
[0x636:0x639]
---
Predecessors: [0x625]
Successors: []
---
0x636 PUSH1 0x0
0x638 DUP1
0x639 REVERT
---
0x636: V636 = 0x0
0x639: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, S2, V531, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, S2, V531, S0]

================================

Block 0x63a
[0x63a:0x63a]
---
Predecessors: [0x5a3, 0x625]
Successors: [0x63b]
---
0x63a JUMPDEST
---
0x63a: JUMPDEST 
---
Entry stack: [V12, 0xf4, S2, V531, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, S2, V531, S0]

================================

Block 0x63b
[0x63b:0x694]
---
Predecessors: [0x63a]
Successors: [0x6c7]
---
0x63b JUMPDEST
0x63c CALLER
0x63d PUSH1 0x1
0x63f PUSH1 0xa0
0x641 PUSH1 0x2
0x643 EXP
0x644 SUB
0x645 AND
0x646 PUSH32 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0x667 CALLVALUE
0x668 DUP4
0x669 PUSH1 0x5
0x66b SLOAD
0x66c DUP8
0x66d MUL
0x66e PUSH1 0x40
0x670 MLOAD
0x671 DUP1
0x672 DUP5
0x673 DUP2
0x674 MSTORE
0x675 PUSH1 0x20
0x677 ADD
0x678 DUP4
0x679 DUP2
0x67a MSTORE
0x67b PUSH1 0x20
0x67d ADD
0x67e DUP3
0x67f DUP2
0x680 MSTORE
0x681 PUSH1 0x20
0x683 ADD
0x684 SWAP4
0x685 POP
0x686 POP
0x687 POP
0x688 POP
0x689 PUSH1 0x40
0x68b MLOAD
0x68c DUP1
0x68d SWAP2
0x68e SUB
0x68f SWAP1
0x690 LOG2
0x691 PUSH2 0x6c7
0x694 JUMP
---
0x63b: JUMPDEST 
0x63c: V637 = CALLER
0x63d: V638 = 0x1
0x63f: V639 = 0xa0
0x641: V640 = 0x2
0x643: V641 = EXP 0x2 0xa0
0x644: V642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x645: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0x646: V644 = 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0x667: V645 = CALLVALUE
0x669: V646 = 0x5
0x66b: V647 = S[0x5]
0x66d: V648 = MUL S2 V647
0x66e: V649 = 0x40
0x670: V650 = M[0x40]
0x674: M[V650] = V645
0x675: V651 = 0x20
0x677: V652 = ADD 0x20 V650
0x67a: M[V652] = S0
0x67b: V653 = 0x20
0x67d: V654 = ADD 0x20 V652
0x680: M[V654] = V648
0x681: V655 = 0x20
0x683: V656 = ADD 0x20 V654
0x689: V657 = 0x40
0x68b: V658 = M[0x40]
0x68e: V659 = SUB V656 V658
0x690: LOG V658 V659 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217 V643
0x691: V660 = 0x6c7
0x694: JUMP 0x6c7
---
Entry stack: [V12, 0xf4, S2, V531, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xf4, S2, V531, S0]

================================

Block 0x695
[0x695:0x6c2]
---
Predecessors: [0x4af]
Successors: [0x6c3, 0x6c7]
---
0x695 JUMPDEST
0x696 PUSH1 0x1
0x698 PUSH1 0xa0
0x69a PUSH1 0x2
0x69c EXP
0x69d SUB
0x69e CALLER
0x69f AND
0x6a0 CALLVALUE
0x6a1 DUP1
0x6a2 ISZERO
0x6a3 PUSH2 0x8fc
0x6a6 MUL
0x6a7 SWAP1
0x6a8 PUSH1 0x40
0x6aa MLOAD
0x6ab PUSH1 0x0
0x6ad PUSH1 0x40
0x6af MLOAD
0x6b0 DUP1
0x6b1 DUP4
0x6b2 SUB
0x6b3 DUP2
0x6b4 DUP6
0x6b5 DUP9
0x6b6 DUP9
0x6b7 CALL
0x6b8 SWAP4
0x6b9 POP
0x6ba POP
0x6bb POP
0x6bc POP
0x6bd ISZERO
0x6be ISZERO
0x6bf PUSH2 0x6c7
0x6c2 JUMPI
---
0x695: JUMPDEST 
0x696: V661 = 0x1
0x698: V662 = 0xa0
0x69a: V663 = 0x2
0x69c: V664 = EXP 0x2 0xa0
0x69d: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69e: V666 = CALLER
0x69f: V667 = AND V666 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V668 = CALLVALUE
0x6a2: V669 = ISZERO V668
0x6a3: V670 = 0x8fc
0x6a6: V671 = MUL 0x8fc V669
0x6a8: V672 = 0x40
0x6aa: V673 = M[0x40]
0x6ab: V674 = 0x0
0x6ad: V675 = 0x40
0x6af: V676 = M[0x40]
0x6b2: V677 = SUB V673 V676
0x6b7: V678 = CALL V671 V667 V668 V676 V677 V676 0x0
0x6bd: V679 = ISZERO V678
0x6be: V680 = ISZERO V679
0x6bf: V681 = 0x6c7
0x6c2: JUMPI 0x6c7 V680
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0]

================================

Block 0x6c3
[0x6c3:0x6c6]
---
Predecessors: [0x695]
Successors: []
---
0x6c3 PUSH1 0x0
0x6c5 DUP1
0x6c6 REVERT
---
0x6c3: V682 = 0x0
0x6c6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, 0x0, 0x0, 0x0]

================================

Block 0x6c7
[0x6c7:0x6c7]
---
Predecessors: [0x63b, 0x695, 0x13e3]
Successors: [0x6c8]
---
0x6c7 JUMPDEST
---
0x6c7: JUMPDEST 
---
Entry stack: [V12, 0xf4, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, S2, S1, S0]

================================

Block 0x6c8
[0x6c8:0x6c8]
---
Predecessors: [0x6c7]
Successors: [0x6c9]
---
0x6c8 JUMPDEST
---
0x6c8: JUMPDEST 
---
Entry stack: [V12, 0xf4, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, S2, S1, S0]

================================

Block 0x6c9
[0x6c9:0x6cd]
---
Predecessors: [0x6c8]
Successors: [0xf4]
---
0x6c9 JUMPDEST
0x6ca POP
0x6cb POP
0x6cc POP
0x6cd JUMP
---
0x6c9: JUMPDEST 
0x6cd: JUMP 0xf4
---
Entry stack: [V12, 0xf4, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x6ce
[0x6ce:0x6e5]
---
Predecessors: [0x102]
Successors: [0x6e6, 0x6ea]
---
0x6ce JUMPDEST
0x6cf PUSH1 0x0
0x6d1 DUP1
0x6d2 SLOAD
0x6d3 CALLER
0x6d4 PUSH1 0x1
0x6d6 PUSH1 0xa0
0x6d8 PUSH1 0x2
0x6da EXP
0x6db SUB
0x6dc SWAP1
0x6dd DUP2
0x6de AND
0x6df SWAP2
0x6e0 AND
0x6e1 EQ
0x6e2 PUSH2 0x6ea
0x6e5 JUMPI
---
0x6ce: JUMPDEST 
0x6cf: V683 = 0x0
0x6d2: V684 = S[0x0]
0x6d3: V685 = CALLER
0x6d4: V686 = 0x1
0x6d6: V687 = 0xa0
0x6d8: V688 = 0x2
0x6da: V689 = EXP 0x2 0xa0
0x6db: V690 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6de: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0x6e0: V692 = AND V684 0xffffffffffffffffffffffffffffffffffffffff
0x6e1: V693 = EQ V692 V691
0x6e2: V694 = 0x6ea
0x6e5: JUMPI 0x6ea V693
---
Entry stack: [V12, 0x10d, V78]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x10d, V78, 0x0]

================================

Block 0x6e6
[0x6e6:0x6e9]
---
Predecessors: [0x6ce]
Successors: []
---
0x6e6 PUSH1 0x0
0x6e8 DUP1
0x6e9 REVERT
---
0x6e6: V695 = 0x0
0x6e9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V78, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V78, 0x0]

================================

Block 0x6ea
[0x6ea:0x75d]
---
Predecessors: [0x6ce]
Successors: [0x75e, 0x762]
---
0x6ea JUMPDEST
0x6eb PUSH1 0x1
0x6ed SLOAD
0x6ee PUSH1 0x0
0x6f0 DUP1
0x6f1 SLOAD
0x6f2 PUSH1 0x6
0x6f4 SLOAD
0x6f5 PUSH1 0x1
0x6f7 PUSH1 0xa0
0x6f9 PUSH1 0x2
0x6fb EXP
0x6fc SUB
0x6fd SWAP4
0x6fe DUP5
0x6ff AND
0x700 SWAP4
0x701 PUSH4 0x23b872dd
0x706 SWAP4
0x707 SWAP3
0x708 AND
0x709 SWAP2
0x70a DUP5
0x70b SWAP2
0x70c SWAP1
0x70d PUSH1 0x40
0x70f MLOAD
0x710 PUSH1 0x20
0x712 ADD
0x713 MSTORE
0x714 PUSH1 0x40
0x716 MLOAD
0x717 PUSH1 0xe0
0x719 PUSH1 0x2
0x71b EXP
0x71c PUSH4 0xffffffff
0x721 DUP7
0x722 AND
0x723 MUL
0x724 DUP2
0x725 MSTORE
0x726 PUSH1 0x1
0x728 PUSH1 0xa0
0x72a PUSH1 0x2
0x72c EXP
0x72d SUB
0x72e SWAP4
0x72f DUP5
0x730 AND
0x731 PUSH1 0x4
0x733 DUP3
0x734 ADD
0x735 MSTORE
0x736 SWAP2
0x737 SWAP1
0x738 SWAP3
0x739 AND
0x73a PUSH1 0x24
0x73c DUP3
0x73d ADD
0x73e MSTORE
0x73f PUSH1 0x44
0x741 DUP2
0x742 ADD
0x743 SWAP2
0x744 SWAP1
0x745 SWAP2
0x746 MSTORE
0x747 PUSH1 0x64
0x749 ADD
0x74a PUSH1 0x20
0x74c PUSH1 0x40
0x74e MLOAD
0x74f DUP1
0x750 DUP4
0x751 SUB
0x752 DUP2
0x753 PUSH1 0x0
0x755 DUP8
0x756 DUP1
0x757 EXTCODESIZE
0x758 ISZERO
0x759 ISZERO
0x75a PUSH2 0x762
0x75d JUMPI
---
0x6ea: JUMPDEST 
0x6eb: V696 = 0x1
0x6ed: V697 = S[0x1]
0x6ee: V698 = 0x0
0x6f1: V699 = S[0x0]
0x6f2: V700 = 0x6
0x6f4: V701 = S[0x6]
0x6f5: V702 = 0x1
0x6f7: V703 = 0xa0
0x6f9: V704 = 0x2
0x6fb: V705 = EXP 0x2 0xa0
0x6fc: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ff: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0x701: V708 = 0x23b872dd
0x708: V709 = AND V699 0xffffffffffffffffffffffffffffffffffffffff
0x70d: V710 = 0x40
0x70f: V711 = M[0x40]
0x710: V712 = 0x20
0x712: V713 = ADD 0x20 V711
0x713: M[V713] = 0x0
0x714: V714 = 0x40
0x716: V715 = M[0x40]
0x717: V716 = 0xe0
0x719: V717 = 0x2
0x71b: V718 = EXP 0x2 0xe0
0x71c: V719 = 0xffffffff
0x722: V720 = AND 0x23b872dd 0xffffffff
0x723: V721 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x725: M[V715] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x726: V722 = 0x1
0x728: V723 = 0xa0
0x72a: V724 = 0x2
0x72c: V725 = EXP 0x2 0xa0
0x72d: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x730: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0x731: V728 = 0x4
0x734: V729 = ADD V715 0x4
0x735: M[V729] = V727
0x739: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff V707
0x73a: V731 = 0x24
0x73d: V732 = ADD V715 0x24
0x73e: M[V732] = V730
0x73f: V733 = 0x44
0x742: V734 = ADD V715 0x44
0x746: M[V734] = V701
0x747: V735 = 0x64
0x749: V736 = ADD 0x64 V715
0x74a: V737 = 0x20
0x74c: V738 = 0x40
0x74e: V739 = M[0x40]
0x751: V740 = SUB V736 V739
0x753: V741 = 0x0
0x757: V742 = EXTCODESIZE V707
0x758: V743 = ISZERO V742
0x759: V744 = ISZERO V743
0x75a: V745 = 0x762
0x75d: JUMPI 0x762 V744
---
Entry stack: [V12, 0x10d, V78, 0x0]
Stack pops: 0
Stack additions: [V707, 0x23b872dd, V736, 0x20, V739, V740, V739, 0x0, V707]
Exit stack: [V12, 0x10d, V78, 0x0, V707, 0x23b872dd, V736, 0x20, V739, V740, V739, 0x0, V707]

================================

Block 0x75e
[0x75e:0x761]
---
Predecessors: [0x6ea]
Successors: []
---
0x75e PUSH1 0x0
0x760 DUP1
0x761 REVERT
---
0x75e: V746 = 0x0
0x761: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V78, 0x0, V707, 0x23b872dd, V736, 0x20, V739, V740, V739, 0x0, V707]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V78, 0x0, V707, 0x23b872dd, V736, 0x20, V739, V740, V739, 0x0, V707]

================================

Block 0x762
[0x762:0x76e]
---
Predecessors: [0x6ea]
Successors: [0x76f, 0x773]
---
0x762 JUMPDEST
0x763 PUSH2 0x2c6
0x766 GAS
0x767 SUB
0x768 CALL
0x769 ISZERO
0x76a ISZERO
0x76b PUSH2 0x773
0x76e JUMPI
---
0x762: JUMPDEST 
0x763: V747 = 0x2c6
0x766: V748 = GAS
0x767: V749 = SUB V748 0x2c6
0x768: V750 = CALL V749 V707 0x0 V739 V740 V739 0x20
0x769: V751 = ISZERO V750
0x76a: V752 = ISZERO V751
0x76b: V753 = 0x773
0x76e: JUMPI 0x773 V752
---
Entry stack: [V12, 0x10d, V78, 0x0, V707, 0x23b872dd, V736, 0x20, V739, V740, V739, 0x0, V707]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, V78, 0x0, V707, 0x23b872dd, V736]

================================

Block 0x76f
[0x76f:0x772]
---
Predecessors: [0x762]
Successors: []
---
0x76f PUSH1 0x0
0x771 DUP1
0x772 REVERT
---
0x76f: V754 = 0x0
0x772: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V78, 0x0, V707, 0x23b872dd, V736]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V78, 0x0, V707, 0x23b872dd, V736]

================================

Block 0x773
[0x773:0x783]
---
Predecessors: [0x762]
Successors: [0x784, 0x788]
---
0x773 JUMPDEST
0x774 POP
0x775 POP
0x776 POP
0x777 PUSH1 0x40
0x779 MLOAD
0x77a DUP1
0x77b MLOAD
0x77c SWAP1
0x77d POP
0x77e ISZERO
0x77f ISZERO
0x780 PUSH2 0x788
0x783 JUMPI
---
0x773: JUMPDEST 
0x777: V755 = 0x40
0x779: V756 = M[0x40]
0x77b: V757 = M[V756]
0x77e: V758 = ISZERO V757
0x77f: V759 = ISZERO V758
0x780: V760 = 0x788
0x783: JUMPI 0x788 V759
---
Entry stack: [V12, 0x10d, V78, 0x0, V707, 0x23b872dd, V736]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10d, V78, 0x0]

================================

Block 0x784
[0x784:0x787]
---
Predecessors: [0x773]
Successors: []
---
0x784 PUSH1 0x0
0x786 DUP1
0x787 REVERT
---
0x784: V761 = 0x0
0x787: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V78, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V78, 0x0]

================================

Block 0x788
[0x788:0x79a]
---
Predecessors: [0x773]
Successors: [0x79b, 0x7f7]
---
0x788 JUMPDEST
0x789 PUSH1 0x1
0x78b PUSH1 0xa0
0x78d PUSH1 0x2
0x78f EXP
0x790 SUB
0x791 ADDRESS
0x792 AND
0x793 BALANCE
0x794 DUP3
0x795 SWAP1
0x796 LT
0x797 PUSH2 0x7f7
0x79a JUMPI
---
0x788: JUMPDEST 
0x789: V762 = 0x1
0x78b: V763 = 0xa0
0x78d: V764 = 0x2
0x78f: V765 = EXP 0x2 0xa0
0x790: V766 = SUB 0x10000000000000000000000000000000000000000 0x1
0x791: V767 = ADDRESS
0x792: V768 = AND V767 0xffffffffffffffffffffffffffffffffffffffff
0x793: V769 = BALANCE V768
0x796: V770 = LT V769 V78
0x797: V771 = 0x7f7
0x79a: JUMPI 0x7f7 V770
---
Entry stack: [V12, 0x10d, V78, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x10d, V78, 0x0]

================================

Block 0x79b
[0x79b:0x7f6]
---
Predecessors: [0x788]
Successors: [0x7f7]
---
0x79b PUSH32 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x7bc DUP3
0x7bd PUSH1 0x40
0x7bf MLOAD
0x7c0 SWAP1
0x7c1 DUP2
0x7c2 MSTORE
0x7c3 PUSH1 0x20
0x7c5 ADD
0x7c6 PUSH1 0x40
0x7c8 MLOAD
0x7c9 DUP1
0x7ca SWAP2
0x7cb SUB
0x7cc SWAP1
0x7cd LOG1
0x7ce PUSH1 0x0
0x7d0 SLOAD
0x7d1 PUSH1 0x1
0x7d3 PUSH1 0xa0
0x7d5 PUSH1 0x2
0x7d7 EXP
0x7d8 SUB
0x7d9 AND
0x7da DUP3
0x7db ISZERO
0x7dc PUSH2 0x8fc
0x7df MUL
0x7e0 DUP4
0x7e1 PUSH1 0x40
0x7e3 MLOAD
0x7e4 PUSH1 0x0
0x7e6 PUSH1 0x40
0x7e8 MLOAD
0x7e9 DUP1
0x7ea DUP4
0x7eb SUB
0x7ec DUP2
0x7ed DUP6
0x7ee DUP9
0x7ef DUP9
0x7f0 CALL
0x7f1 SWAP5
0x7f2 POP
0x7f3 POP
0x7f4 POP
0x7f5 POP
0x7f6 POP
---
0x79b: V772 = 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x7bd: V773 = 0x40
0x7bf: V774 = M[0x40]
0x7c2: M[V774] = V78
0x7c3: V775 = 0x20
0x7c5: V776 = ADD 0x20 V774
0x7c6: V777 = 0x40
0x7c8: V778 = M[0x40]
0x7cb: V779 = SUB V776 V778
0x7cd: LOG V778 V779 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x7ce: V780 = 0x0
0x7d0: V781 = S[0x0]
0x7d1: V782 = 0x1
0x7d3: V783 = 0xa0
0x7d5: V784 = 0x2
0x7d7: V785 = EXP 0x2 0xa0
0x7d8: V786 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d9: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0x7db: V788 = ISZERO V78
0x7dc: V789 = 0x8fc
0x7df: V790 = MUL 0x8fc V788
0x7e1: V791 = 0x40
0x7e3: V792 = M[0x40]
0x7e4: V793 = 0x0
0x7e6: V794 = 0x40
0x7e8: V795 = M[0x40]
0x7eb: V796 = SUB V792 V795
0x7f0: V797 = CALL V790 V787 V78 V795 V796 V795 0x0
---
Entry stack: [V12, 0x10d, V78, 0x0]
Stack pops: 2
Stack additions: [S1, V797]
Exit stack: [V12, 0x10d, V78, V797]

================================

Block 0x7f7
[0x7f7:0x7f7]
---
Predecessors: [0x788, 0x79b]
Successors: [0x7f8]
---
0x7f7 JUMPDEST
---
0x7f7: JUMPDEST 
---
Entry stack: [V12, 0x10d, V78, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V78, S0]

================================

Block 0x7f8
[0x7f8:0x7f8]
---
Predecessors: [0x7f7]
Successors: [0x7f9]
---
0x7f8 JUMPDEST
---
0x7f8: JUMPDEST 
---
Entry stack: [V12, 0x10d, V78, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V78, S0]

================================

Block 0x7f9
[0x7f9:0x7fd]
---
Predecessors: [0x7f8]
Successors: [0x10d]
---
0x7f9 JUMPDEST
0x7fa SWAP2
0x7fb SWAP1
0x7fc POP
0x7fd JUMP
---
0x7f9: JUMPDEST 
0x7fd: JUMP 0x10d
---
Entry stack: [V12, 0x10d, V78, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x7fe
[0x7fe:0x814]
---
Predecessors: [0x12c]
Successors: [0x815, 0x819]
---
0x7fe JUMPDEST
0x7ff PUSH1 0x0
0x801 SLOAD
0x802 CALLER
0x803 PUSH1 0x1
0x805 PUSH1 0xa0
0x807 PUSH1 0x2
0x809 EXP
0x80a SUB
0x80b SWAP1
0x80c DUP2
0x80d AND
0x80e SWAP2
0x80f AND
0x810 EQ
0x811 PUSH2 0x819
0x814 JUMPI
---
0x7fe: JUMPDEST 
0x7ff: V798 = 0x0
0x801: V799 = S[0x0]
0x802: V800 = CALLER
0x803: V801 = 0x1
0x805: V802 = 0xa0
0x807: V803 = 0x2
0x809: V804 = EXP 0x2 0xa0
0x80a: V805 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80d: V806 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0x80f: V807 = AND V799 0xffffffffffffffffffffffffffffffffffffffff
0x810: V808 = EQ V807 V806
0x811: V809 = 0x819
0x814: JUMPI 0x819 V808
---
Entry stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]

================================

Block 0x815
[0x815:0x818]
---
Predecessors: [0x7fe]
Successors: []
---
0x815 PUSH1 0x0
0x817 DUP1
0x818 REVERT
---
0x815: V810 = 0x0
0x818: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]

================================

Block 0x819
[0x819:0x88c]
---
Predecessors: [0x7fe]
Successors: [0x88d, 0x891]
---
0x819 JUMPDEST
0x81a PUSH1 0x1
0x81c SLOAD
0x81d PUSH1 0x0
0x81f DUP1
0x820 SLOAD
0x821 PUSH1 0x6
0x823 SLOAD
0x824 PUSH1 0x1
0x826 PUSH1 0xa0
0x828 PUSH1 0x2
0x82a EXP
0x82b SUB
0x82c SWAP4
0x82d DUP5
0x82e AND
0x82f SWAP4
0x830 PUSH4 0x23b872dd
0x835 SWAP4
0x836 SWAP3
0x837 AND
0x838 SWAP2
0x839 DUP5
0x83a SWAP2
0x83b SWAP1
0x83c PUSH1 0x40
0x83e MLOAD
0x83f PUSH1 0x20
0x841 ADD
0x842 MSTORE
0x843 PUSH1 0x40
0x845 MLOAD
0x846 PUSH1 0xe0
0x848 PUSH1 0x2
0x84a EXP
0x84b PUSH4 0xffffffff
0x850 DUP7
0x851 AND
0x852 MUL
0x853 DUP2
0x854 MSTORE
0x855 PUSH1 0x1
0x857 PUSH1 0xa0
0x859 PUSH1 0x2
0x85b EXP
0x85c SUB
0x85d SWAP4
0x85e DUP5
0x85f AND
0x860 PUSH1 0x4
0x862 DUP3
0x863 ADD
0x864 MSTORE
0x865 SWAP2
0x866 SWAP1
0x867 SWAP3
0x868 AND
0x869 PUSH1 0x24
0x86b DUP3
0x86c ADD
0x86d MSTORE
0x86e PUSH1 0x44
0x870 DUP2
0x871 ADD
0x872 SWAP2
0x873 SWAP1
0x874 SWAP2
0x875 MSTORE
0x876 PUSH1 0x64
0x878 ADD
0x879 PUSH1 0x20
0x87b PUSH1 0x40
0x87d MLOAD
0x87e DUP1
0x87f DUP4
0x880 SUB
0x881 DUP2
0x882 PUSH1 0x0
0x884 DUP8
0x885 DUP1
0x886 EXTCODESIZE
0x887 ISZERO
0x888 ISZERO
0x889 PUSH2 0x891
0x88c JUMPI
---
0x819: JUMPDEST 
0x81a: V811 = 0x1
0x81c: V812 = S[0x1]
0x81d: V813 = 0x0
0x820: V814 = S[0x0]
0x821: V815 = 0x6
0x823: V816 = S[0x6]
0x824: V817 = 0x1
0x826: V818 = 0xa0
0x828: V819 = 0x2
0x82a: V820 = EXP 0x2 0xa0
0x82b: V821 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82e: V822 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x830: V823 = 0x23b872dd
0x837: V824 = AND V814 0xffffffffffffffffffffffffffffffffffffffff
0x83c: V825 = 0x40
0x83e: V826 = M[0x40]
0x83f: V827 = 0x20
0x841: V828 = ADD 0x20 V826
0x842: M[V828] = 0x0
0x843: V829 = 0x40
0x845: V830 = M[0x40]
0x846: V831 = 0xe0
0x848: V832 = 0x2
0x84a: V833 = EXP 0x2 0xe0
0x84b: V834 = 0xffffffff
0x851: V835 = AND 0x23b872dd 0xffffffff
0x852: V836 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x854: M[V830] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x855: V837 = 0x1
0x857: V838 = 0xa0
0x859: V839 = 0x2
0x85b: V840 = EXP 0x2 0xa0
0x85c: V841 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85f: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff V824
0x860: V843 = 0x4
0x863: V844 = ADD V830 0x4
0x864: M[V844] = V842
0x868: V845 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0x869: V846 = 0x24
0x86c: V847 = ADD V830 0x24
0x86d: M[V847] = V845
0x86e: V848 = 0x44
0x871: V849 = ADD V830 0x44
0x875: M[V849] = V816
0x876: V850 = 0x64
0x878: V851 = ADD 0x64 V830
0x879: V852 = 0x20
0x87b: V853 = 0x40
0x87d: V854 = M[0x40]
0x880: V855 = SUB V851 V854
0x882: V856 = 0x0
0x886: V857 = EXTCODESIZE V822
0x887: V858 = ISZERO V857
0x888: V859 = ISZERO V858
0x889: V860 = 0x891
0x88c: JUMPI 0x891 V859
---
Entry stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]
Stack pops: 0
Stack additions: [V822, 0x23b872dd, V851, 0x20, V854, V855, V854, 0x0, V822]
Exit stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120, V822, 0x23b872dd, V851, 0x20, V854, V855, V854, 0x0, V822]

================================

Block 0x88d
[0x88d:0x890]
---
Predecessors: [0x819]
Successors: []
---
0x88d PUSH1 0x0
0x88f DUP1
0x890 REVERT
---
0x88d: V861 = 0x0
0x890: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120, V822, 0x23b872dd, V851, 0x20, V854, V855, V854, 0x0, V822]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120, V822, 0x23b872dd, V851, 0x20, V854, V855, V854, 0x0, V822]

================================

Block 0x891
[0x891:0x89d]
---
Predecessors: [0x819]
Successors: [0x89e, 0x8a2]
---
0x891 JUMPDEST
0x892 PUSH2 0x2c6
0x895 GAS
0x896 SUB
0x897 CALL
0x898 ISZERO
0x899 ISZERO
0x89a PUSH2 0x8a2
0x89d JUMPI
---
0x891: JUMPDEST 
0x892: V862 = 0x2c6
0x895: V863 = GAS
0x896: V864 = SUB V863 0x2c6
0x897: V865 = CALL V864 V822 0x0 V854 V855 V854 0x20
0x898: V866 = ISZERO V865
0x899: V867 = ISZERO V866
0x89a: V868 = 0x8a2
0x89d: JUMPI 0x8a2 V867
---
Entry stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120, V822, 0x23b872dd, V851, 0x20, V854, V855, V854, 0x0, V822]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120, V822, 0x23b872dd, V851]

================================

Block 0x89e
[0x89e:0x8a1]
---
Predecessors: [0x891]
Successors: []
---
0x89e PUSH1 0x0
0x8a0 DUP1
0x8a1 REVERT
---
0x89e: V869 = 0x0
0x8a1: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120, V822, 0x23b872dd, V851]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120, V822, 0x23b872dd, V851]

================================

Block 0x8a2
[0x8a2:0x8b2]
---
Predecessors: [0x891]
Successors: [0x8b3, 0x8b7]
---
0x8a2 JUMPDEST
0x8a3 POP
0x8a4 POP
0x8a5 POP
0x8a6 PUSH1 0x40
0x8a8 MLOAD
0x8a9 DUP1
0x8aa MLOAD
0x8ab SWAP1
0x8ac POP
0x8ad ISZERO
0x8ae ISZERO
0x8af PUSH2 0x8b7
0x8b2 JUMPI
---
0x8a2: JUMPDEST 
0x8a6: V870 = 0x40
0x8a8: V871 = M[0x40]
0x8aa: V872 = M[V871]
0x8ad: V873 = ISZERO V872
0x8ae: V874 = ISZERO V873
0x8af: V875 = 0x8b7
0x8b2: JUMPI 0x8b7 V874
---
Entry stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120, V822, 0x23b872dd, V851]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]

================================

Block 0x8b3
[0x8b3:0x8b6]
---
Predecessors: [0x8a2]
Successors: []
---
0x8b3 PUSH1 0x0
0x8b5 DUP1
0x8b6 REVERT
---
0x8b3: V876 = 0x0
0x8b6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]

================================

Block 0x8b7
[0x8b7:0x972]
---
Predecessors: [0x8a2]
Successors: [0x973]
---
0x8b7 JUMPDEST
0x8b8 PUSH1 0x2
0x8ba DUP1
0x8bb SLOAD
0x8bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d1 NOT
0x8d2 SWAP1
0x8d3 DUP2
0x8d4 AND
0x8d5 PUSH1 0x1
0x8d7 PUSH1 0xa0
0x8d9 PUSH1 0x2
0x8db EXP
0x8dc SUB
0x8dd DUP12
0x8de DUP2
0x8df AND
0x8e0 SWAP2
0x8e1 SWAP1
0x8e2 SWAP2
0x8e3 OR
0x8e4 SWAP1
0x8e5 SWAP3
0x8e6 SSTORE
0x8e7 PUSH1 0x6
0x8e9 DUP10
0x8ea SWAP1
0x8eb SSTORE
0x8ec PUSH1 0x1
0x8ee DUP1
0x8ef SLOAD
0x8f0 SWAP1
0x8f1 SWAP2
0x8f2 AND
0x8f3 SWAP2
0x8f4 DUP9
0x8f5 AND
0x8f6 SWAP2
0x8f7 SWAP1
0x8f8 SWAP2
0x8f9 OR
0x8fa SWAP1
0x8fb SSTORE
0x8fc PUSH1 0x3
0x8fe DUP6
0x8ff SWAP1
0x900 SSTORE
0x901 PUSH1 0x4
0x903 DUP5
0x904 SWAP1
0x905 SSTORE
0x906 PUSH1 0x5
0x908 DUP4
0x909 SWAP1
0x90a SSTORE
0x90b PUSH1 0x7
0x90d DUP1
0x90e SLOAD
0x90f PUSH1 0xff
0x911 NOT
0x912 AND
0x913 DUP4
0x914 ISZERO
0x915 ISZERO
0x916 OR
0x917 PUSH2 0xff00
0x91a NOT
0x91b AND
0x91c PUSH2 0x100
0x91f DUP4
0x920 ISZERO
0x921 ISZERO
0x922 DUP2
0x923 MUL
0x924 SWAP2
0x925 SWAP1
0x926 SWAP2
0x927 OR
0x928 SWAP2
0x929 DUP3
0x92a SWAP1
0x92b SSTORE
0x92c PUSH32 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x94d SWAP2
0x94e PUSH1 0xff
0x950 DUP1
0x951 DUP3
0x952 AND
0x953 SWAP3
0x954 SWAP1
0x955 SWAP2
0x956 DIV
0x957 AND
0x958 PUSH1 0x40
0x95a MLOAD
0x95b SWAP2
0x95c ISZERO
0x95d ISZERO
0x95e DUP3
0x95f MSTORE
0x960 ISZERO
0x961 ISZERO
0x962 PUSH1 0x20
0x964 DUP3
0x965 ADD
0x966 MSTORE
0x967 PUSH1 0x40
0x969 SWAP1
0x96a DUP2
0x96b ADD
0x96c SWAP1
0x96d MLOAD
0x96e DUP1
0x96f SWAP2
0x970 SUB
0x971 SWAP1
0x972 LOG1
---
0x8b7: JUMPDEST 
0x8b8: V877 = 0x2
0x8bb: V878 = S[0x2]
0x8bc: V879 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d1: V880 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8d4: V881 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V878
0x8d5: V882 = 0x1
0x8d7: V883 = 0xa0
0x8d9: V884 = 0x2
0x8db: V885 = EXP 0x2 0xa0
0x8dc: V886 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8df: V887 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x8e3: V888 = OR V887 V881
0x8e6: S[0x2] = V888
0x8e7: V889 = 0x6
0x8eb: S[0x6] = V103
0x8ec: V890 = 0x1
0x8ef: V891 = S[0x1]
0x8f2: V892 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V891
0x8f5: V893 = AND V106 0xffffffffffffffffffffffffffffffffffffffff
0x8f9: V894 = OR V893 V892
0x8fb: S[0x1] = V894
0x8fc: V895 = 0x3
0x900: S[0x3] = V108
0x901: V896 = 0x4
0x905: S[0x4] = V110
0x906: V897 = 0x5
0x90a: S[0x5] = V112
0x90b: V898 = 0x7
0x90e: V899 = S[0x7]
0x90f: V900 = 0xff
0x911: V901 = NOT 0xff
0x912: V902 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V899
0x914: V903 = ISZERO V116
0x915: V904 = ISZERO V903
0x916: V905 = OR V904 V902
0x917: V906 = 0xff00
0x91a: V907 = NOT 0xff00
0x91b: V908 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V905
0x91c: V909 = 0x100
0x920: V910 = ISZERO V120
0x921: V911 = ISZERO V910
0x923: V912 = MUL 0x100 V911
0x927: V913 = OR V912 V908
0x92b: S[0x7] = V913
0x92c: V914 = 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x94e: V915 = 0xff
0x952: V916 = AND V913 0xff
0x956: V917 = DIV V913 0x100
0x957: V918 = AND V917 0xff
0x958: V919 = 0x40
0x95a: V920 = M[0x40]
0x95c: V921 = ISZERO V916
0x95d: V922 = ISZERO V921
0x95f: M[V920] = V922
0x960: V923 = ISZERO V918
0x961: V924 = ISZERO V923
0x962: V925 = 0x20
0x965: V926 = ADD V920 0x20
0x966: M[V926] = V924
0x967: V927 = 0x40
0x96b: V928 = ADD 0x40 V920
0x96d: V929 = M[0x40]
0x970: V930 = SUB V928 V929
0x972: LOG V929 V930 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
---
Entry stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]

================================

Block 0x973
[0x973:0x973]
---
Predecessors: [0x8b7]
Successors: [0x974]
---
0x973 JUMPDEST
---
0x973: JUMPDEST 
---
Entry stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]

================================

Block 0x974
[0x974:0x97d]
---
Predecessors: [0x973]
Successors: [0xf4]
---
0x974 JUMPDEST
0x975 POP
0x976 POP
0x977 POP
0x978 POP
0x979 POP
0x97a POP
0x97b POP
0x97c POP
0x97d JUMP
---
0x974: JUMPDEST 
0x97d: JUMP 0xf4
---
Entry stack: [V12, 0xf4, V101, V103, V106, V108, V110, V112, V116, V120]
Stack pops: 9
Stack additions: []
Exit stack: [V12]

================================

Block 0x97e
[0x97e:0x98c]
---
Predecessors: [0x16a]
Successors: [0x172]
---
0x97e JUMPDEST
0x97f PUSH1 0x2
0x981 SLOAD
0x982 PUSH1 0x1
0x984 PUSH1 0xa0
0x986 PUSH1 0x2
0x988 EXP
0x989 SUB
0x98a AND
0x98b DUP2
0x98c JUMP
---
0x97e: JUMPDEST 
0x97f: V931 = 0x2
0x981: V932 = S[0x2]
0x982: V933 = 0x1
0x984: V934 = 0xa0
0x986: V935 = 0x2
0x988: V936 = EXP 0x2 0xa0
0x989: V937 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98a: V938 = AND 0xffffffffffffffffffffffffffffffffffffffff V932
0x98c: JUMP 0x172
---
Entry stack: [V12, 0x172]
Stack pops: 1
Stack additions: [S0, V938]
Exit stack: [V12, 0x172, V938]

================================

Block 0x98d
[0x98d:0x992]
---
Predecessors: [0x199]
Successors: [0x1a1]
---
0x98d JUMPDEST
0x98e PUSH1 0x4
0x990 SLOAD
0x991 DUP2
0x992 JUMP
---
0x98d: JUMPDEST 
0x98e: V939 = 0x4
0x990: V940 = S[0x4]
0x992: JUMP 0x1a1
---
Entry stack: [V12, 0x1a1]
Stack pops: 1
Stack additions: [S0, V940]
Exit stack: [V12, 0x1a1, V940]

================================

Block 0x993
[0x993:0x9a0]
---
Predecessors: [0x1be]
Successors: [0x10d]
---
0x993 JUMPDEST
0x994 PUSH1 0x7
0x996 SLOAD
0x997 PUSH2 0x100
0x99a SWAP1
0x99b DIV
0x99c PUSH1 0xff
0x99e AND
0x99f DUP2
0x9a0 JUMP
---
0x993: JUMPDEST 
0x994: V941 = 0x7
0x996: V942 = S[0x7]
0x997: V943 = 0x100
0x99b: V944 = DIV V942 0x100
0x99c: V945 = 0xff
0x99e: V946 = AND 0xff V944
0x9a0: JUMP 0x10d
---
Entry stack: [V12, 0x10d]
Stack pops: 1
Stack additions: [S0, V946]
Exit stack: [V12, 0x10d, V946]

================================

Block 0x9a1
[0x9a1:0x9b8]
---
Predecessors: [0x1e5]
Successors: [0x9b9, 0x9bd]
---
0x9a1 JUMPDEST
0x9a2 PUSH1 0x0
0x9a4 DUP1
0x9a5 SLOAD
0x9a6 CALLER
0x9a7 PUSH1 0x1
0x9a9 PUSH1 0xa0
0x9ab PUSH1 0x2
0x9ad EXP
0x9ae SUB
0x9af SWAP1
0x9b0 DUP2
0x9b1 AND
0x9b2 SWAP2
0x9b3 AND
0x9b4 EQ
0x9b5 PUSH2 0x9bd
0x9b8 JUMPI
---
0x9a1: JUMPDEST 
0x9a2: V947 = 0x0
0x9a5: V948 = S[0x0]
0x9a6: V949 = CALLER
0x9a7: V950 = 0x1
0x9a9: V951 = 0xa0
0x9ab: V952 = 0x2
0x9ad: V953 = EXP 0x2 0xa0
0x9ae: V954 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b1: V955 = AND 0xffffffffffffffffffffffffffffffffffffffff V949
0x9b3: V956 = AND V948 0xffffffffffffffffffffffffffffffffffffffff
0x9b4: V957 = EQ V956 V955
0x9b5: V958 = 0x9bd
0x9b8: JUMPI 0x9bd V957
---
Entry stack: [V12, 0x10d, V181, V183]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x10d, V181, V183, 0x0]

================================

Block 0x9b9
[0x9b9:0x9bc]
---
Predecessors: [0x9a1]
Successors: []
---
0x9b9 PUSH1 0x0
0x9bb DUP1
0x9bc REVERT
---
0x9b9: V959 = 0x0
0x9bc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V181, V183, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0]

================================

Block 0x9bd
[0x9bd:0xa30]
---
Predecessors: [0x9a1]
Successors: [0xa31, 0xa35]
---
0x9bd JUMPDEST
0x9be PUSH1 0x1
0x9c0 SLOAD
0x9c1 PUSH1 0x0
0x9c3 DUP1
0x9c4 SLOAD
0x9c5 PUSH1 0x6
0x9c7 SLOAD
0x9c8 PUSH1 0x1
0x9ca PUSH1 0xa0
0x9cc PUSH1 0x2
0x9ce EXP
0x9cf SUB
0x9d0 SWAP4
0x9d1 DUP5
0x9d2 AND
0x9d3 SWAP4
0x9d4 PUSH4 0x23b872dd
0x9d9 SWAP4
0x9da SWAP3
0x9db AND
0x9dc SWAP2
0x9dd DUP5
0x9de SWAP2
0x9df SWAP1
0x9e0 PUSH1 0x40
0x9e2 MLOAD
0x9e3 PUSH1 0x20
0x9e5 ADD
0x9e6 MSTORE
0x9e7 PUSH1 0x40
0x9e9 MLOAD
0x9ea PUSH1 0xe0
0x9ec PUSH1 0x2
0x9ee EXP
0x9ef PUSH4 0xffffffff
0x9f4 DUP7
0x9f5 AND
0x9f6 MUL
0x9f7 DUP2
0x9f8 MSTORE
0x9f9 PUSH1 0x1
0x9fb PUSH1 0xa0
0x9fd PUSH1 0x2
0x9ff EXP
0xa00 SUB
0xa01 SWAP4
0xa02 DUP5
0xa03 AND
0xa04 PUSH1 0x4
0xa06 DUP3
0xa07 ADD
0xa08 MSTORE
0xa09 SWAP2
0xa0a SWAP1
0xa0b SWAP3
0xa0c AND
0xa0d PUSH1 0x24
0xa0f DUP3
0xa10 ADD
0xa11 MSTORE
0xa12 PUSH1 0x44
0xa14 DUP2
0xa15 ADD
0xa16 SWAP2
0xa17 SWAP1
0xa18 SWAP2
0xa19 MSTORE
0xa1a PUSH1 0x64
0xa1c ADD
0xa1d PUSH1 0x20
0xa1f PUSH1 0x40
0xa21 MLOAD
0xa22 DUP1
0xa23 DUP4
0xa24 SUB
0xa25 DUP2
0xa26 PUSH1 0x0
0xa28 DUP8
0xa29 DUP1
0xa2a EXTCODESIZE
0xa2b ISZERO
0xa2c ISZERO
0xa2d PUSH2 0xa35
0xa30 JUMPI
---
0x9bd: JUMPDEST 
0x9be: V960 = 0x1
0x9c0: V961 = S[0x1]
0x9c1: V962 = 0x0
0x9c4: V963 = S[0x0]
0x9c5: V964 = 0x6
0x9c7: V965 = S[0x6]
0x9c8: V966 = 0x1
0x9ca: V967 = 0xa0
0x9cc: V968 = 0x2
0x9ce: V969 = EXP 0x2 0xa0
0x9cf: V970 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d2: V971 = AND 0xffffffffffffffffffffffffffffffffffffffff V961
0x9d4: V972 = 0x23b872dd
0x9db: V973 = AND V963 0xffffffffffffffffffffffffffffffffffffffff
0x9e0: V974 = 0x40
0x9e2: V975 = M[0x40]
0x9e3: V976 = 0x20
0x9e5: V977 = ADD 0x20 V975
0x9e6: M[V977] = 0x0
0x9e7: V978 = 0x40
0x9e9: V979 = M[0x40]
0x9ea: V980 = 0xe0
0x9ec: V981 = 0x2
0x9ee: V982 = EXP 0x2 0xe0
0x9ef: V983 = 0xffffffff
0x9f5: V984 = AND 0x23b872dd 0xffffffff
0x9f6: V985 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x9f8: M[V979] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x9f9: V986 = 0x1
0x9fb: V987 = 0xa0
0x9fd: V988 = 0x2
0x9ff: V989 = EXP 0x2 0xa0
0xa00: V990 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa03: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff V973
0xa04: V992 = 0x4
0xa07: V993 = ADD V979 0x4
0xa08: M[V993] = V991
0xa0c: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff V971
0xa0d: V995 = 0x24
0xa10: V996 = ADD V979 0x24
0xa11: M[V996] = V994
0xa12: V997 = 0x44
0xa15: V998 = ADD V979 0x44
0xa19: M[V998] = V965
0xa1a: V999 = 0x64
0xa1c: V1000 = ADD 0x64 V979
0xa1d: V1001 = 0x20
0xa1f: V1002 = 0x40
0xa21: V1003 = M[0x40]
0xa24: V1004 = SUB V1000 V1003
0xa26: V1005 = 0x0
0xa2a: V1006 = EXTCODESIZE V971
0xa2b: V1007 = ISZERO V1006
0xa2c: V1008 = ISZERO V1007
0xa2d: V1009 = 0xa35
0xa30: JUMPI 0xa35 V1008
---
Entry stack: [V12, 0x10d, V181, V183, 0x0]
Stack pops: 0
Stack additions: [V971, 0x23b872dd, V1000, 0x20, V1003, V1004, V1003, 0x0, V971]
Exit stack: [V12, 0x10d, V181, V183, 0x0, V971, 0x23b872dd, V1000, 0x20, V1003, V1004, V1003, 0x0, V971]

================================

Block 0xa31
[0xa31:0xa34]
---
Predecessors: [0x9bd]
Successors: []
---
0xa31 PUSH1 0x0
0xa33 DUP1
0xa34 REVERT
---
0xa31: V1010 = 0x0
0xa34: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V971, 0x23b872dd, V1000, 0x20, V1003, V1004, V1003, 0x0, V971]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0, V971, 0x23b872dd, V1000, 0x20, V1003, V1004, V1003, 0x0, V971]

================================

Block 0xa35
[0xa35:0xa41]
---
Predecessors: [0x9bd]
Successors: [0xa42, 0xa46]
---
0xa35 JUMPDEST
0xa36 PUSH2 0x2c6
0xa39 GAS
0xa3a SUB
0xa3b CALL
0xa3c ISZERO
0xa3d ISZERO
0xa3e PUSH2 0xa46
0xa41 JUMPI
---
0xa35: JUMPDEST 
0xa36: V1011 = 0x2c6
0xa39: V1012 = GAS
0xa3a: V1013 = SUB V1012 0x2c6
0xa3b: V1014 = CALL V1013 V971 0x0 V1003 V1004 V1003 0x20
0xa3c: V1015 = ISZERO V1014
0xa3d: V1016 = ISZERO V1015
0xa3e: V1017 = 0xa46
0xa41: JUMPI 0xa46 V1016
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V971, 0x23b872dd, V1000, 0x20, V1003, V1004, V1003, 0x0, V971]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0, V971, 0x23b872dd, V1000]

================================

Block 0xa42
[0xa42:0xa45]
---
Predecessors: [0xa35]
Successors: []
---
0xa42 PUSH1 0x0
0xa44 DUP1
0xa45 REVERT
---
0xa42: V1018 = 0x0
0xa45: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V971, 0x23b872dd, V1000]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0, V971, 0x23b872dd, V1000]

================================

Block 0xa46
[0xa46:0xa56]
---
Predecessors: [0xa35]
Successors: [0xa57, 0xa5b]
---
0xa46 JUMPDEST
0xa47 POP
0xa48 POP
0xa49 POP
0xa4a PUSH1 0x40
0xa4c MLOAD
0xa4d DUP1
0xa4e MLOAD
0xa4f SWAP1
0xa50 POP
0xa51 ISZERO
0xa52 ISZERO
0xa53 PUSH2 0xa5b
0xa56 JUMPI
---
0xa46: JUMPDEST 
0xa4a: V1019 = 0x40
0xa4c: V1020 = M[0x40]
0xa4e: V1021 = M[V1020]
0xa51: V1022 = ISZERO V1021
0xa52: V1023 = ISZERO V1022
0xa53: V1024 = 0xa5b
0xa56: JUMPI 0xa5b V1023
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V971, 0x23b872dd, V1000]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0]

================================

Block 0xa57
[0xa57:0xa5a]
---
Predecessors: [0xa46]
Successors: []
---
0xa57 PUSH1 0x0
0xa59 DUP1
0xa5a REVERT
---
0xa57: V1025 = 0x0
0xa5a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V181, V183, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0]

================================

Block 0xa5b
[0xa5b:0xa9c]
---
Predecessors: [0xa46]
Successors: [0xa9d, 0xaa1]
---
0xa5b JUMPDEST
0xa5c DUP3
0xa5d PUSH1 0x1
0xa5f PUSH1 0xa0
0xa61 PUSH1 0x2
0xa63 EXP
0xa64 SUB
0xa65 AND
0xa66 PUSH4 0x8da5cb5b
0xa6b PUSH1 0x0
0xa6d PUSH1 0x40
0xa6f MLOAD
0xa70 PUSH1 0x20
0xa72 ADD
0xa73 MSTORE
0xa74 PUSH1 0x40
0xa76 MLOAD
0xa77 DUP2
0xa78 PUSH4 0xffffffff
0xa7d AND
0xa7e PUSH1 0xe0
0xa80 PUSH1 0x2
0xa82 EXP
0xa83 MUL
0xa84 DUP2
0xa85 MSTORE
0xa86 PUSH1 0x4
0xa88 ADD
0xa89 PUSH1 0x20
0xa8b PUSH1 0x40
0xa8d MLOAD
0xa8e DUP1
0xa8f DUP4
0xa90 SUB
0xa91 DUP2
0xa92 PUSH1 0x0
0xa94 DUP8
0xa95 DUP1
0xa96 EXTCODESIZE
0xa97 ISZERO
0xa98 ISZERO
0xa99 PUSH2 0xaa1
0xa9c JUMPI
---
0xa5b: JUMPDEST 
0xa5d: V1026 = 0x1
0xa5f: V1027 = 0xa0
0xa61: V1028 = 0x2
0xa63: V1029 = EXP 0x2 0xa0
0xa64: V1030 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa65: V1031 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0xa66: V1032 = 0x8da5cb5b
0xa6b: V1033 = 0x0
0xa6d: V1034 = 0x40
0xa6f: V1035 = M[0x40]
0xa70: V1036 = 0x20
0xa72: V1037 = ADD 0x20 V1035
0xa73: M[V1037] = 0x0
0xa74: V1038 = 0x40
0xa76: V1039 = M[0x40]
0xa78: V1040 = 0xffffffff
0xa7d: V1041 = AND 0xffffffff 0x8da5cb5b
0xa7e: V1042 = 0xe0
0xa80: V1043 = 0x2
0xa82: V1044 = EXP 0x2 0xe0
0xa83: V1045 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0xa85: M[V1039] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0xa86: V1046 = 0x4
0xa88: V1047 = ADD 0x4 V1039
0xa89: V1048 = 0x20
0xa8b: V1049 = 0x40
0xa8d: V1050 = M[0x40]
0xa90: V1051 = SUB V1047 V1050
0xa92: V1052 = 0x0
0xa96: V1053 = EXTCODESIZE V1031
0xa97: V1054 = ISZERO V1053
0xa98: V1055 = ISZERO V1054
0xa99: V1056 = 0xaa1
0xa9c: JUMPI 0xaa1 V1055
---
Entry stack: [V12, 0x10d, V181, V183, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1031, 0x8da5cb5b, V1047, 0x20, V1050, V1051, V1050, 0x0, V1031]
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1031, 0x8da5cb5b, V1047, 0x20, V1050, V1051, V1050, 0x0, V1031]

================================

Block 0xa9d
[0xa9d:0xaa0]
---
Predecessors: [0xa5b]
Successors: []
---
0xa9d PUSH1 0x0
0xa9f DUP1
0xaa0 REVERT
---
0xa9d: V1057 = 0x0
0xaa0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V1031, 0x8da5cb5b, V1047, 0x20, V1050, V1051, V1050, 0x0, V1031]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1031, 0x8da5cb5b, V1047, 0x20, V1050, V1051, V1050, 0x0, V1031]

================================

Block 0xaa1
[0xaa1:0xaad]
---
Predecessors: [0xa5b]
Successors: [0xaae, 0xab2]
---
0xaa1 JUMPDEST
0xaa2 PUSH2 0x2c6
0xaa5 GAS
0xaa6 SUB
0xaa7 CALL
0xaa8 ISZERO
0xaa9 ISZERO
0xaaa PUSH2 0xab2
0xaad JUMPI
---
0xaa1: JUMPDEST 
0xaa2: V1058 = 0x2c6
0xaa5: V1059 = GAS
0xaa6: V1060 = SUB V1059 0x2c6
0xaa7: V1061 = CALL V1060 V1031 0x0 V1050 V1051 V1050 0x20
0xaa8: V1062 = ISZERO V1061
0xaa9: V1063 = ISZERO V1062
0xaaa: V1064 = 0xab2
0xaad: JUMPI 0xab2 V1063
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V1031, 0x8da5cb5b, V1047, 0x20, V1050, V1051, V1050, 0x0, V1031]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1031, 0x8da5cb5b, V1047]

================================

Block 0xaae
[0xaae:0xab1]
---
Predecessors: [0xaa1]
Successors: []
---
0xaae PUSH1 0x0
0xab0 DUP1
0xab1 REVERT
---
0xaae: V1065 = 0x0
0xab1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V1031, 0x8da5cb5b, V1047]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1031, 0x8da5cb5b, V1047]

================================

Block 0xab2
[0xab2:0xad3]
---
Predecessors: [0xaa1]
Successors: [0xad4, 0xb47]
---
0xab2 JUMPDEST
0xab3 POP
0xab4 POP
0xab5 POP
0xab6 PUSH1 0x40
0xab8 MLOAD
0xab9 DUP1
0xaba MLOAD
0xabb PUSH1 0x0
0xabd SLOAD
0xabe PUSH1 0x1
0xac0 PUSH1 0xa0
0xac2 PUSH1 0x2
0xac4 EXP
0xac5 SUB
0xac6 SWAP1
0xac7 DUP2
0xac8 AND
0xac9 SWAP2
0xaca AND
0xacb EQ
0xacc SWAP1
0xacd POP
0xace DUP1
0xacf ISZERO
0xad0 PUSH2 0xb47
0xad3 JUMPI
---
0xab2: JUMPDEST 
0xab6: V1066 = 0x40
0xab8: V1067 = M[0x40]
0xaba: V1068 = M[V1067]
0xabb: V1069 = 0x0
0xabd: V1070 = S[0x0]
0xabe: V1071 = 0x1
0xac0: V1072 = 0xa0
0xac2: V1073 = 0x2
0xac4: V1074 = EXP 0x2 0xa0
0xac5: V1075 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac8: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffff V1070
0xaca: V1077 = AND V1068 0xffffffffffffffffffffffffffffffffffffffff
0xacb: V1078 = EQ V1077 V1076
0xacf: V1079 = ISZERO V1078
0xad0: V1080 = 0xb47
0xad3: JUMPI 0xb47 V1079
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V1031, 0x8da5cb5b, V1047]
Stack pops: 3
Stack additions: [V1078]
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1078]

================================

Block 0xad4
[0xad4:0xb15]
---
Predecessors: [0xab2]
Successors: [0xb16, 0xb1a]
---
0xad4 POP
0xad5 DUP3
0xad6 PUSH1 0x1
0xad8 PUSH1 0xa0
0xada PUSH1 0x2
0xadc EXP
0xadd SUB
0xade AND
0xadf PUSH4 0x38d52e0f
0xae4 PUSH1 0x0
0xae6 PUSH1 0x40
0xae8 MLOAD
0xae9 PUSH1 0x20
0xaeb ADD
0xaec MSTORE
0xaed PUSH1 0x40
0xaef MLOAD
0xaf0 DUP2
0xaf1 PUSH4 0xffffffff
0xaf6 AND
0xaf7 PUSH1 0xe0
0xaf9 PUSH1 0x2
0xafb EXP
0xafc MUL
0xafd DUP2
0xafe MSTORE
0xaff PUSH1 0x4
0xb01 ADD
0xb02 PUSH1 0x20
0xb04 PUSH1 0x40
0xb06 MLOAD
0xb07 DUP1
0xb08 DUP4
0xb09 SUB
0xb0a DUP2
0xb0b PUSH1 0x0
0xb0d DUP8
0xb0e DUP1
0xb0f EXTCODESIZE
0xb10 ISZERO
0xb11 ISZERO
0xb12 PUSH2 0xb1a
0xb15 JUMPI
---
0xad6: V1081 = 0x1
0xad8: V1082 = 0xa0
0xada: V1083 = 0x2
0xadc: V1084 = EXP 0x2 0xa0
0xadd: V1085 = SUB 0x10000000000000000000000000000000000000000 0x1
0xade: V1086 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0xadf: V1087 = 0x38d52e0f
0xae4: V1088 = 0x0
0xae6: V1089 = 0x40
0xae8: V1090 = M[0x40]
0xae9: V1091 = 0x20
0xaeb: V1092 = ADD 0x20 V1090
0xaec: M[V1092] = 0x0
0xaed: V1093 = 0x40
0xaef: V1094 = M[0x40]
0xaf1: V1095 = 0xffffffff
0xaf6: V1096 = AND 0xffffffff 0x38d52e0f
0xaf7: V1097 = 0xe0
0xaf9: V1098 = 0x2
0xafb: V1099 = EXP 0x2 0xe0
0xafc: V1100 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0xafe: M[V1094] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0xaff: V1101 = 0x4
0xb01: V1102 = ADD 0x4 V1094
0xb02: V1103 = 0x20
0xb04: V1104 = 0x40
0xb06: V1105 = M[0x40]
0xb09: V1106 = SUB V1102 V1105
0xb0b: V1107 = 0x0
0xb0f: V1108 = EXTCODESIZE V1086
0xb10: V1109 = ISZERO V1108
0xb11: V1110 = ISZERO V1109
0xb12: V1111 = 0xb1a
0xb15: JUMPI 0xb1a V1110
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V1078]
Stack pops: 4
Stack additions: [S3, S2, S1, V1086, 0x38d52e0f, V1102, 0x20, V1105, V1106, V1105, 0x0, V1086]
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1086, 0x38d52e0f, V1102, 0x20, V1105, V1106, V1105, 0x0, V1086]

================================

Block 0xb16
[0xb16:0xb19]
---
Predecessors: [0xad4]
Successors: []
---
0xb16 PUSH1 0x0
0xb18 DUP1
0xb19 REVERT
---
0xb16: V1112 = 0x0
0xb19: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V1086, 0x38d52e0f, V1102, 0x20, V1105, V1106, V1105, 0x0, V1086]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1086, 0x38d52e0f, V1102, 0x20, V1105, V1106, V1105, 0x0, V1086]

================================

Block 0xb1a
[0xb1a:0xb26]
---
Predecessors: [0xad4]
Successors: [0xb27, 0xb2b]
---
0xb1a JUMPDEST
0xb1b PUSH2 0x2c6
0xb1e GAS
0xb1f SUB
0xb20 CALL
0xb21 ISZERO
0xb22 ISZERO
0xb23 PUSH2 0xb2b
0xb26 JUMPI
---
0xb1a: JUMPDEST 
0xb1b: V1113 = 0x2c6
0xb1e: V1114 = GAS
0xb1f: V1115 = SUB V1114 0x2c6
0xb20: V1116 = CALL V1115 V1086 0x0 V1105 V1106 V1105 0x20
0xb21: V1117 = ISZERO V1116
0xb22: V1118 = ISZERO V1117
0xb23: V1119 = 0xb2b
0xb26: JUMPI 0xb2b V1118
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V1086, 0x38d52e0f, V1102, 0x20, V1105, V1106, V1105, 0x0, V1086]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1086, 0x38d52e0f, V1102]

================================

Block 0xb27
[0xb27:0xb2a]
---
Predecessors: [0xb1a]
Successors: []
---
0xb27 PUSH1 0x0
0xb29 DUP1
0xb2a REVERT
---
0xb27: V1120 = 0x0
0xb2a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V1086, 0x38d52e0f, V1102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1086, 0x38d52e0f, V1102]

================================

Block 0xb2b
[0xb2b:0xb46]
---
Predecessors: [0xb1a]
Successors: [0xb47]
---
0xb2b JUMPDEST
0xb2c POP
0xb2d POP
0xb2e POP
0xb2f PUSH1 0x40
0xb31 MLOAD
0xb32 DUP1
0xb33 MLOAD
0xb34 PUSH1 0x2
0xb36 SLOAD
0xb37 PUSH1 0x1
0xb39 PUSH1 0xa0
0xb3b PUSH1 0x2
0xb3d EXP
0xb3e SUB
0xb3f SWAP1
0xb40 DUP2
0xb41 AND
0xb42 SWAP2
0xb43 AND
0xb44 EQ
0xb45 SWAP1
0xb46 POP
---
0xb2b: JUMPDEST 
0xb2f: V1121 = 0x40
0xb31: V1122 = M[0x40]
0xb33: V1123 = M[V1122]
0xb34: V1124 = 0x2
0xb36: V1125 = S[0x2]
0xb37: V1126 = 0x1
0xb39: V1127 = 0xa0
0xb3b: V1128 = 0x2
0xb3d: V1129 = EXP 0x2 0xa0
0xb3e: V1130 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb41: V1131 = AND 0xffffffffffffffffffffffffffffffffffffffff V1125
0xb43: V1132 = AND V1123 0xffffffffffffffffffffffffffffffffffffffff
0xb44: V1133 = EQ V1132 V1131
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V1086, 0x38d52e0f, V1102]
Stack pops: 3
Stack additions: [V1133]
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1133]

================================

Block 0xb47
[0xb47:0xb4d]
---
Predecessors: [0xab2, 0xb2b]
Successors: [0xb4e, 0xb52]
---
0xb47 JUMPDEST
0xb48 ISZERO
0xb49 ISZERO
0xb4a PUSH2 0xb52
0xb4d JUMPI
---
0xb47: JUMPDEST 
0xb48: V1134 = ISZERO S0
0xb49: V1135 = ISZERO V1134
0xb4a: V1136 = 0xb52
0xb4d: JUMPI 0xb52 V1135
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0]

================================

Block 0xb4e
[0xb4e:0xb51]
---
Predecessors: [0xb47]
Successors: []
---
0xb4e PUSH1 0x0
0xb50 DUP1
0xb51 REVERT
---
0xb4e: V1137 = 0x0
0xb51: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V181, V183, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0]

================================

Block 0xb52
[0xb52:0xbf0]
---
Predecessors: [0xb47]
Successors: [0xbf1, 0xbf5]
---
0xb52 JUMPDEST
0xb53 PUSH32 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0xb74 DUP4
0xb75 DUP4
0xb76 PUSH1 0x40
0xb78 MLOAD
0xb79 PUSH1 0x1
0xb7b PUSH1 0xa0
0xb7d PUSH1 0x2
0xb7f EXP
0xb80 SUB
0xb81 SWAP1
0xb82 SWAP3
0xb83 AND
0xb84 DUP3
0xb85 MSTORE
0xb86 PUSH1 0x20
0xb88 DUP3
0xb89 ADD
0xb8a MSTORE
0xb8b PUSH1 0x40
0xb8d SWAP1
0xb8e DUP2
0xb8f ADD
0xb90 SWAP1
0xb91 MLOAD
0xb92 DUP1
0xb93 SWAP2
0xb94 SUB
0xb95 SWAP1
0xb96 LOG1
0xb97 PUSH1 0x2
0xb99 SLOAD
0xb9a PUSH1 0x1
0xb9c PUSH1 0xa0
0xb9e PUSH1 0x2
0xba0 EXP
0xba1 SUB
0xba2 AND
0xba3 PUSH4 0xa9059cbb
0xba8 DUP5
0xba9 DUP5
0xbaa PUSH1 0x0
0xbac PUSH1 0x40
0xbae MLOAD
0xbaf PUSH1 0x20
0xbb1 ADD
0xbb2 MSTORE
0xbb3 PUSH1 0x40
0xbb5 MLOAD
0xbb6 PUSH1 0xe0
0xbb8 PUSH1 0x2
0xbba EXP
0xbbb PUSH4 0xffffffff
0xbc0 DUP6
0xbc1 AND
0xbc2 MUL
0xbc3 DUP2
0xbc4 MSTORE
0xbc5 PUSH1 0x1
0xbc7 PUSH1 0xa0
0xbc9 PUSH1 0x2
0xbcb EXP
0xbcc SUB
0xbcd SWAP1
0xbce SWAP3
0xbcf AND
0xbd0 PUSH1 0x4
0xbd2 DUP4
0xbd3 ADD
0xbd4 MSTORE
0xbd5 PUSH1 0x24
0xbd7 DUP3
0xbd8 ADD
0xbd9 MSTORE
0xbda PUSH1 0x44
0xbdc ADD
0xbdd PUSH1 0x20
0xbdf PUSH1 0x40
0xbe1 MLOAD
0xbe2 DUP1
0xbe3 DUP4
0xbe4 SUB
0xbe5 DUP2
0xbe6 PUSH1 0x0
0xbe8 DUP8
0xbe9 DUP1
0xbea EXTCODESIZE
0xbeb ISZERO
0xbec ISZERO
0xbed PUSH2 0xbf5
0xbf0 JUMPI
---
0xb52: JUMPDEST 
0xb53: V1138 = 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0xb76: V1139 = 0x40
0xb78: V1140 = M[0x40]
0xb79: V1141 = 0x1
0xb7b: V1142 = 0xa0
0xb7d: V1143 = 0x2
0xb7f: V1144 = EXP 0x2 0xa0
0xb80: V1145 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb83: V1146 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0xb85: M[V1140] = V1146
0xb86: V1147 = 0x20
0xb89: V1148 = ADD V1140 0x20
0xb8a: M[V1148] = V183
0xb8b: V1149 = 0x40
0xb8f: V1150 = ADD 0x40 V1140
0xb91: V1151 = M[0x40]
0xb94: V1152 = SUB V1150 V1151
0xb96: LOG V1151 V1152 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0xb97: V1153 = 0x2
0xb99: V1154 = S[0x2]
0xb9a: V1155 = 0x1
0xb9c: V1156 = 0xa0
0xb9e: V1157 = 0x2
0xba0: V1158 = EXP 0x2 0xa0
0xba1: V1159 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba2: V1160 = AND 0xffffffffffffffffffffffffffffffffffffffff V1154
0xba3: V1161 = 0xa9059cbb
0xbaa: V1162 = 0x0
0xbac: V1163 = 0x40
0xbae: V1164 = M[0x40]
0xbaf: V1165 = 0x20
0xbb1: V1166 = ADD 0x20 V1164
0xbb2: M[V1166] = 0x0
0xbb3: V1167 = 0x40
0xbb5: V1168 = M[0x40]
0xbb6: V1169 = 0xe0
0xbb8: V1170 = 0x2
0xbba: V1171 = EXP 0x2 0xe0
0xbbb: V1172 = 0xffffffff
0xbc1: V1173 = AND 0xa9059cbb 0xffffffff
0xbc2: V1174 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xbc4: M[V1168] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xbc5: V1175 = 0x1
0xbc7: V1176 = 0xa0
0xbc9: V1177 = 0x2
0xbcb: V1178 = EXP 0x2 0xa0
0xbcc: V1179 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbcf: V1180 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0xbd0: V1181 = 0x4
0xbd3: V1182 = ADD V1168 0x4
0xbd4: M[V1182] = V1180
0xbd5: V1183 = 0x24
0xbd8: V1184 = ADD V1168 0x24
0xbd9: M[V1184] = V183
0xbda: V1185 = 0x44
0xbdc: V1186 = ADD 0x44 V1168
0xbdd: V1187 = 0x20
0xbdf: V1188 = 0x40
0xbe1: V1189 = M[0x40]
0xbe4: V1190 = SUB V1186 V1189
0xbe6: V1191 = 0x0
0xbea: V1192 = EXTCODESIZE V1160
0xbeb: V1193 = ISZERO V1192
0xbec: V1194 = ISZERO V1193
0xbed: V1195 = 0xbf5
0xbf0: JUMPI 0xbf5 V1194
---
Entry stack: [V12, 0x10d, V181, V183, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1160, 0xa9059cbb, V1186, 0x20, V1189, V1190, V1189, 0x0, V1160]
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1160, 0xa9059cbb, V1186, 0x20, V1189, V1190, V1189, 0x0, V1160]

================================

Block 0xbf1
[0xbf1:0xbf4]
---
Predecessors: [0xb52]
Successors: []
---
0xbf1 PUSH1 0x0
0xbf3 DUP1
0xbf4 REVERT
---
0xbf1: V1196 = 0x0
0xbf4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V181, V183, 0x0, V1160, 0xa9059cbb, V1186, 0x20, V1189, V1190, V1189, 0x0, V1160]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V181, V183, 0x0, V1160, 0xa9059cbb, V1186, 0x20, V1189, V1190, V1189, 0x0, V1160]

================================

Block 0xbf5
[0xbf5:0xc01]
---
Predecessors: [0xb52, 0x10c8]
Successors: [0xc02, 0xc06]
---
0xbf5 JUMPDEST
0xbf6 PUSH2 0x2c6
0xbf9 GAS
0xbfa SUB
0xbfb CALL
0xbfc ISZERO
0xbfd ISZERO
0xbfe PUSH2 0xc06
0xc01 JUMPI
---
0xbf5: JUMPDEST 
0xbf6: V1197 = 0x2c6
0xbf9: V1198 = GAS
0xbfa: V1199 = SUB V1198 0x2c6
0xbfb: V1200 = CALL V1199 S0 0x0 S2 S3 S4 0x20
0xbfc: V1201 = ISZERO V1200
0xbfd: V1202 = ISZERO V1201
0xbfe: V1203 = 0xc06
0xc01: JUMPI 0xc06 V1202
---
Entry stack: [V12, 0x10d, S11, S10, 0x0, S8, 0xa9059cbb, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, S11, S10, 0x0, S8, 0xa9059cbb, S6]

================================

Block 0xc02
[0xc02:0xc05]
---
Predecessors: [0xbf5]
Successors: []
---
0xc02 PUSH1 0x0
0xc04 DUP1
0xc05 REVERT
---
0xc02: V1204 = 0x0
0xc05: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, S5, S4, 0x0, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, S5, S4, 0x0, S2, 0xa9059cbb, S0]

================================

Block 0xc06
[0xc06:0xc11]
---
Predecessors: [0xbf5, 0x1172]
Successors: [0xc12]
---
0xc06 JUMPDEST
0xc07 POP
0xc08 POP
0xc09 POP
0xc0a PUSH1 0x40
0xc0c MLOAD
0xc0d DUP1
0xc0e MLOAD
0xc0f SWAP2
0xc10 POP
0xc11 POP
---
0xc06: JUMPDEST 
0xc0a: V1205 = 0x40
0xc0c: V1206 = M[0x40]
0xc0e: V1207 = M[V1206]
---
Entry stack: [V12, 0x10d, S5, S4, 0x0, S2, 0xa9059cbb, S0]
Stack pops: 4
Stack additions: [V1207]
Exit stack: [V12, 0x10d, S5, S4, V1207]

================================

Block 0xc12
[0xc12:0xc12]
---
Predecessors: [0xc06, 0xf5d]
Successors: [0xc13]
---
0xc12 JUMPDEST
---
0xc12: JUMPDEST 
---
Entry stack: [V12, 0x10d, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, S2, S1, S0]

================================

Block 0xc13
[0xc13:0xc18]
---
Predecessors: [0xc12]
Successors: [0x10d]
---
0xc13 JUMPDEST
0xc14 SWAP3
0xc15 SWAP2
0xc16 POP
0xc17 POP
0xc18 JUMP
---
0xc13: JUMPDEST 
0xc18: JUMP 0x10d
---
Entry stack: [V12, 0x10d, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0xc19
[0xc19:0xc1e]
---
Predecessors: [0x21b]
Successors: [0x1a1]
---
0xc19 JUMPDEST
0xc1a PUSH1 0x3
0xc1c SLOAD
0xc1d DUP2
0xc1e JUMP
---
0xc19: JUMPDEST 
0xc1a: V1208 = 0x3
0xc1c: V1209 = S[0x3]
0xc1e: JUMP 0x1a1
---
Entry stack: [V12, 0x1a1]
Stack pops: 1
Stack additions: [S0, V1209]
Exit stack: [V12, 0x1a1, V1209]

================================

Block 0xc1f
[0xc1f:0xc2d]
---
Predecessors: [0x240]
Successors: [0x172]
---
0xc1f JUMPDEST
0xc20 PUSH1 0x0
0xc22 SLOAD
0xc23 PUSH1 0x1
0xc25 PUSH1 0xa0
0xc27 PUSH1 0x2
0xc29 EXP
0xc2a SUB
0xc2b AND
0xc2c DUP2
0xc2d JUMP
---
0xc1f: JUMPDEST 
0xc20: V1210 = 0x0
0xc22: V1211 = S[0x0]
0xc23: V1212 = 0x1
0xc25: V1213 = 0xa0
0xc27: V1214 = 0x2
0xc29: V1215 = EXP 0x2 0xa0
0xc2a: V1216 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2b: V1217 = AND 0xffffffffffffffffffffffffffffffffffffffff V1211
0xc2d: JUMP 0x172
---
Entry stack: [V12, 0x172]
Stack pops: 1
Stack additions: [S0, V1217]
Exit stack: [V12, 0x172, V1217]

================================

Block 0xc2e
[0xc2e:0xc46]
---
Predecessors: [0x264]
Successors: [0xc47, 0xcbd]
---
0xc2e JUMPDEST
0xc2f PUSH1 0x0
0xc31 SLOAD
0xc32 CALLER
0xc33 PUSH1 0x1
0xc35 PUSH1 0xa0
0xc37 PUSH1 0x2
0xc39 EXP
0xc3a SUB
0xc3b SWAP1
0xc3c DUP2
0xc3d AND
0xc3e SWAP2
0xc3f AND
0xc40 EQ
0xc41 DUP1
0xc42 ISZERO
0xc43 PUSH2 0xcbd
0xc46 JUMPI
---
0xc2e: JUMPDEST 
0xc2f: V1218 = 0x0
0xc31: V1219 = S[0x0]
0xc32: V1220 = CALLER
0xc33: V1221 = 0x1
0xc35: V1222 = 0xa0
0xc37: V1223 = 0x2
0xc39: V1224 = EXP 0x2 0xa0
0xc3a: V1225 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc3d: V1226 = AND 0xffffffffffffffffffffffffffffffffffffffff V1220
0xc3f: V1227 = AND V1219 0xffffffffffffffffffffffffffffffffffffffff
0xc40: V1228 = EQ V1227 V1226
0xc42: V1229 = ISZERO V1228
0xc43: V1230 = 0xcbd
0xc46: JUMPI 0xcbd V1229
---
Entry stack: [V12, 0xf4]
Stack pops: 0
Stack additions: [V1228]
Exit stack: [V12, 0xf4, V1228]

================================

Block 0xc47
[0xc47:0xc92]
---
Predecessors: [0xc2e]
Successors: [0xc93, 0xc97]
---
0xc47 POP
0xc48 PUSH1 0x0
0xc4a DUP1
0xc4b SLOAD
0xc4c PUSH1 0x1
0xc4e PUSH1 0xa0
0xc50 PUSH1 0x2
0xc52 EXP
0xc53 SUB
0xc54 SWAP1
0xc55 DUP2
0xc56 AND
0xc57 SWAP2
0xc58 CALLER
0xc59 SWAP1
0xc5a SWAP2
0xc5b AND
0xc5c SWAP1
0xc5d PUSH4 0x8da5cb5b
0xc62 SWAP1
0xc63 PUSH1 0x40
0xc65 MLOAD
0xc66 PUSH1 0x20
0xc68 ADD
0xc69 MSTORE
0xc6a PUSH1 0x40
0xc6c MLOAD
0xc6d DUP2
0xc6e PUSH4 0xffffffff
0xc73 AND
0xc74 PUSH1 0xe0
0xc76 PUSH1 0x2
0xc78 EXP
0xc79 MUL
0xc7a DUP2
0xc7b MSTORE
0xc7c PUSH1 0x4
0xc7e ADD
0xc7f PUSH1 0x20
0xc81 PUSH1 0x40
0xc83 MLOAD
0xc84 DUP1
0xc85 DUP4
0xc86 SUB
0xc87 DUP2
0xc88 PUSH1 0x0
0xc8a DUP8
0xc8b DUP1
0xc8c EXTCODESIZE
0xc8d ISZERO
0xc8e ISZERO
0xc8f PUSH2 0xc97
0xc92 JUMPI
---
0xc48: V1231 = 0x0
0xc4b: V1232 = S[0x0]
0xc4c: V1233 = 0x1
0xc4e: V1234 = 0xa0
0xc50: V1235 = 0x2
0xc52: V1236 = EXP 0x2 0xa0
0xc53: V1237 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc56: V1238 = AND 0xffffffffffffffffffffffffffffffffffffffff V1232
0xc58: V1239 = CALLER
0xc5b: V1240 = AND 0xffffffffffffffffffffffffffffffffffffffff V1239
0xc5d: V1241 = 0x8da5cb5b
0xc63: V1242 = 0x40
0xc65: V1243 = M[0x40]
0xc66: V1244 = 0x20
0xc68: V1245 = ADD 0x20 V1243
0xc69: M[V1245] = 0x0
0xc6a: V1246 = 0x40
0xc6c: V1247 = M[0x40]
0xc6e: V1248 = 0xffffffff
0xc73: V1249 = AND 0xffffffff 0x8da5cb5b
0xc74: V1250 = 0xe0
0xc76: V1251 = 0x2
0xc78: V1252 = EXP 0x2 0xe0
0xc79: V1253 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0xc7b: M[V1247] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0xc7c: V1254 = 0x4
0xc7e: V1255 = ADD 0x4 V1247
0xc7f: V1256 = 0x20
0xc81: V1257 = 0x40
0xc83: V1258 = M[0x40]
0xc86: V1259 = SUB V1255 V1258
0xc88: V1260 = 0x0
0xc8c: V1261 = EXTCODESIZE V1240
0xc8d: V1262 = ISZERO V1261
0xc8e: V1263 = ISZERO V1262
0xc8f: V1264 = 0xc97
0xc92: JUMPI 0xc97 V1263
---
Entry stack: [V12, 0xf4, V1228]
Stack pops: 1
Stack additions: [V1238, V1240, 0x8da5cb5b, V1255, 0x20, V1258, V1259, V1258, 0x0, V1240]
Exit stack: [V12, 0xf4, V1238, V1240, 0x8da5cb5b, V1255, 0x20, V1258, V1259, V1258, 0x0, V1240]

================================

Block 0xc93
[0xc93:0xc96]
---
Predecessors: [0xc47]
Successors: []
---
0xc93 PUSH1 0x0
0xc95 DUP1
0xc96 REVERT
---
0xc93: V1265 = 0x0
0xc96: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V1238, V1240, 0x8da5cb5b, V1255, 0x20, V1258, V1259, V1258, 0x0, V1240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V1238, V1240, 0x8da5cb5b, V1255, 0x20, V1258, V1259, V1258, 0x0, V1240]

================================

Block 0xc97
[0xc97:0xca3]
---
Predecessors: [0xc47]
Successors: [0xca4, 0xca8]
---
0xc97 JUMPDEST
0xc98 PUSH2 0x2c6
0xc9b GAS
0xc9c SUB
0xc9d CALL
0xc9e ISZERO
0xc9f ISZERO
0xca0 PUSH2 0xca8
0xca3 JUMPI
---
0xc97: JUMPDEST 
0xc98: V1266 = 0x2c6
0xc9b: V1267 = GAS
0xc9c: V1268 = SUB V1267 0x2c6
0xc9d: V1269 = CALL V1268 V1240 0x0 V1258 V1259 V1258 0x20
0xc9e: V1270 = ISZERO V1269
0xc9f: V1271 = ISZERO V1270
0xca0: V1272 = 0xca8
0xca3: JUMPI 0xca8 V1271
---
Entry stack: [V12, 0xf4, V1238, V1240, 0x8da5cb5b, V1255, 0x20, V1258, V1259, V1258, 0x0, V1240]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf4, V1238, V1240, 0x8da5cb5b, V1255]

================================

Block 0xca4
[0xca4:0xca7]
---
Predecessors: [0xc97]
Successors: []
---
0xca4 PUSH1 0x0
0xca6 DUP1
0xca7 REVERT
---
0xca4: V1273 = 0x0
0xca7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V1238, V1240, 0x8da5cb5b, V1255]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V1238, V1240, 0x8da5cb5b, V1255]

================================

Block 0xca8
[0xca8:0xcbc]
---
Predecessors: [0xc97]
Successors: [0xcbd]
---
0xca8 JUMPDEST
0xca9 POP
0xcaa POP
0xcab POP
0xcac PUSH1 0x40
0xcae MLOAD
0xcaf DUP1
0xcb0 MLOAD
0xcb1 SWAP1
0xcb2 POP
0xcb3 PUSH1 0x1
0xcb5 PUSH1 0xa0
0xcb7 PUSH1 0x2
0xcb9 EXP
0xcba SUB
0xcbb AND
0xcbc EQ
---
0xca8: JUMPDEST 
0xcac: V1274 = 0x40
0xcae: V1275 = M[0x40]
0xcb0: V1276 = M[V1275]
0xcb3: V1277 = 0x1
0xcb5: V1278 = 0xa0
0xcb7: V1279 = 0x2
0xcb9: V1280 = EXP 0x2 0xa0
0xcba: V1281 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcbb: V1282 = AND 0xffffffffffffffffffffffffffffffffffffffff V1276
0xcbc: V1283 = EQ V1282 V1238
---
Entry stack: [V12, 0xf4, V1238, V1240, 0x8da5cb5b, V1255]
Stack pops: 4
Stack additions: [V1283]
Exit stack: [V12, 0xf4, V1283]

================================

Block 0xcbd
[0xcbd:0xcc3]
---
Predecessors: [0xc2e, 0xca8]
Successors: [0xcc4, 0xcc8]
---
0xcbd JUMPDEST
0xcbe ISZERO
0xcbf ISZERO
0xcc0 PUSH2 0xcc8
0xcc3 JUMPI
---
0xcbd: JUMPDEST 
0xcbe: V1284 = ISZERO S0
0xcbf: V1285 = ISZERO V1284
0xcc0: V1286 = 0xcc8
0xcc3: JUMPI 0xcc8 V1285
---
Entry stack: [V12, 0xf4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xf4]

================================

Block 0xcc4
[0xcc4:0xcc7]
---
Predecessors: [0xcbd]
Successors: []
---
0xcc4 PUSH1 0x0
0xcc6 DUP1
0xcc7 REVERT
---
0xcc4: V1287 = 0x0
0xcc7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4]

================================

Block 0xcc8
[0xcc8:0xd3b]
---
Predecessors: [0xcbd]
Successors: [0xd3c, 0xd40]
---
0xcc8 JUMPDEST
0xcc9 PUSH1 0x1
0xccb SLOAD
0xccc PUSH1 0x0
0xcce DUP1
0xccf SLOAD
0xcd0 PUSH1 0x6
0xcd2 SLOAD
0xcd3 PUSH1 0x1
0xcd5 PUSH1 0xa0
0xcd7 PUSH1 0x2
0xcd9 EXP
0xcda SUB
0xcdb SWAP4
0xcdc DUP5
0xcdd AND
0xcde SWAP4
0xcdf PUSH4 0x23b872dd
0xce4 SWAP4
0xce5 SWAP3
0xce6 AND
0xce7 SWAP2
0xce8 DUP5
0xce9 SWAP2
0xcea SWAP1
0xceb PUSH1 0x40
0xced MLOAD
0xcee PUSH1 0x20
0xcf0 ADD
0xcf1 MSTORE
0xcf2 PUSH1 0x40
0xcf4 MLOAD
0xcf5 PUSH1 0xe0
0xcf7 PUSH1 0x2
0xcf9 EXP
0xcfa PUSH4 0xffffffff
0xcff DUP7
0xd00 AND
0xd01 MUL
0xd02 DUP2
0xd03 MSTORE
0xd04 PUSH1 0x1
0xd06 PUSH1 0xa0
0xd08 PUSH1 0x2
0xd0a EXP
0xd0b SUB
0xd0c SWAP4
0xd0d DUP5
0xd0e AND
0xd0f PUSH1 0x4
0xd11 DUP3
0xd12 ADD
0xd13 MSTORE
0xd14 SWAP2
0xd15 SWAP1
0xd16 SWAP3
0xd17 AND
0xd18 PUSH1 0x24
0xd1a DUP3
0xd1b ADD
0xd1c MSTORE
0xd1d PUSH1 0x44
0xd1f DUP2
0xd20 ADD
0xd21 SWAP2
0xd22 SWAP1
0xd23 SWAP2
0xd24 MSTORE
0xd25 PUSH1 0x64
0xd27 ADD
0xd28 PUSH1 0x20
0xd2a PUSH1 0x40
0xd2c MLOAD
0xd2d DUP1
0xd2e DUP4
0xd2f SUB
0xd30 DUP2
0xd31 PUSH1 0x0
0xd33 DUP8
0xd34 DUP1
0xd35 EXTCODESIZE
0xd36 ISZERO
0xd37 ISZERO
0xd38 PUSH2 0xd40
0xd3b JUMPI
---
0xcc8: JUMPDEST 
0xcc9: V1288 = 0x1
0xccb: V1289 = S[0x1]
0xccc: V1290 = 0x0
0xccf: V1291 = S[0x0]
0xcd0: V1292 = 0x6
0xcd2: V1293 = S[0x6]
0xcd3: V1294 = 0x1
0xcd5: V1295 = 0xa0
0xcd7: V1296 = 0x2
0xcd9: V1297 = EXP 0x2 0xa0
0xcda: V1298 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcdd: V1299 = AND 0xffffffffffffffffffffffffffffffffffffffff V1289
0xcdf: V1300 = 0x23b872dd
0xce6: V1301 = AND V1291 0xffffffffffffffffffffffffffffffffffffffff
0xceb: V1302 = 0x40
0xced: V1303 = M[0x40]
0xcee: V1304 = 0x20
0xcf0: V1305 = ADD 0x20 V1303
0xcf1: M[V1305] = 0x0
0xcf2: V1306 = 0x40
0xcf4: V1307 = M[0x40]
0xcf5: V1308 = 0xe0
0xcf7: V1309 = 0x2
0xcf9: V1310 = EXP 0x2 0xe0
0xcfa: V1311 = 0xffffffff
0xd00: V1312 = AND 0x23b872dd 0xffffffff
0xd01: V1313 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0xd03: M[V1307] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xd04: V1314 = 0x1
0xd06: V1315 = 0xa0
0xd08: V1316 = 0x2
0xd0a: V1317 = EXP 0x2 0xa0
0xd0b: V1318 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0e: V1319 = AND 0xffffffffffffffffffffffffffffffffffffffff V1301
0xd0f: V1320 = 0x4
0xd12: V1321 = ADD V1307 0x4
0xd13: M[V1321] = V1319
0xd17: V1322 = AND 0xffffffffffffffffffffffffffffffffffffffff V1299
0xd18: V1323 = 0x24
0xd1b: V1324 = ADD V1307 0x24
0xd1c: M[V1324] = V1322
0xd1d: V1325 = 0x44
0xd20: V1326 = ADD V1307 0x44
0xd24: M[V1326] = V1293
0xd25: V1327 = 0x64
0xd27: V1328 = ADD 0x64 V1307
0xd28: V1329 = 0x20
0xd2a: V1330 = 0x40
0xd2c: V1331 = M[0x40]
0xd2f: V1332 = SUB V1328 V1331
0xd31: V1333 = 0x0
0xd35: V1334 = EXTCODESIZE V1299
0xd36: V1335 = ISZERO V1334
0xd37: V1336 = ISZERO V1335
0xd38: V1337 = 0xd40
0xd3b: JUMPI 0xd40 V1336
---
Entry stack: [V12, 0xf4]
Stack pops: 0
Stack additions: [V1299, 0x23b872dd, V1328, 0x20, V1331, V1332, V1331, 0x0, V1299]
Exit stack: [V12, 0xf4, V1299, 0x23b872dd, V1328, 0x20, V1331, V1332, V1331, 0x0, V1299]

================================

Block 0xd3c
[0xd3c:0xd3f]
---
Predecessors: [0xcc8]
Successors: []
---
0xd3c PUSH1 0x0
0xd3e DUP1
0xd3f REVERT
---
0xd3c: V1338 = 0x0
0xd3f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V1299, 0x23b872dd, V1328, 0x20, V1331, V1332, V1331, 0x0, V1299]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V1299, 0x23b872dd, V1328, 0x20, V1331, V1332, V1331, 0x0, V1299]

================================

Block 0xd40
[0xd40:0xd4c]
---
Predecessors: [0xcc8]
Successors: [0xd4d, 0xd51]
---
0xd40 JUMPDEST
0xd41 PUSH2 0x2c6
0xd44 GAS
0xd45 SUB
0xd46 CALL
0xd47 ISZERO
0xd48 ISZERO
0xd49 PUSH2 0xd51
0xd4c JUMPI
---
0xd40: JUMPDEST 
0xd41: V1339 = 0x2c6
0xd44: V1340 = GAS
0xd45: V1341 = SUB V1340 0x2c6
0xd46: V1342 = CALL V1341 V1299 0x0 V1331 V1332 V1331 0x20
0xd47: V1343 = ISZERO V1342
0xd48: V1344 = ISZERO V1343
0xd49: V1345 = 0xd51
0xd4c: JUMPI 0xd51 V1344
---
Entry stack: [V12, 0xf4, V1299, 0x23b872dd, V1328, 0x20, V1331, V1332, V1331, 0x0, V1299]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf4, V1299, 0x23b872dd, V1328]

================================

Block 0xd4d
[0xd4d:0xd50]
---
Predecessors: [0xd40]
Successors: []
---
0xd4d PUSH1 0x0
0xd4f DUP1
0xd50 REVERT
---
0xd4d: V1346 = 0x0
0xd50: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V1299, 0x23b872dd, V1328]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V1299, 0x23b872dd, V1328]

================================

Block 0xd51
[0xd51:0xd61]
---
Predecessors: [0xd40]
Successors: [0xd62, 0xd66]
---
0xd51 JUMPDEST
0xd52 POP
0xd53 POP
0xd54 POP
0xd55 PUSH1 0x40
0xd57 MLOAD
0xd58 DUP1
0xd59 MLOAD
0xd5a SWAP1
0xd5b POP
0xd5c ISZERO
0xd5d ISZERO
0xd5e PUSH2 0xd66
0xd61 JUMPI
---
0xd51: JUMPDEST 
0xd55: V1347 = 0x40
0xd57: V1348 = M[0x40]
0xd59: V1349 = M[V1348]
0xd5c: V1350 = ISZERO V1349
0xd5d: V1351 = ISZERO V1350
0xd5e: V1352 = 0xd66
0xd61: JUMPI 0xd66 V1351
---
Entry stack: [V12, 0xf4, V1299, 0x23b872dd, V1328]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xf4]

================================

Block 0xd62
[0xd62:0xd65]
---
Predecessors: [0xd51]
Successors: []
---
0xd62 PUSH1 0x0
0xd64 DUP1
0xd65 REVERT
---
0xd62: V1353 = 0x0
0xd65: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4]

================================

Block 0xd66
[0xd66:0xd99]
---
Predecessors: [0xd51]
Successors: [0xd9a]
---
0xd66 JUMPDEST
0xd67 PUSH32 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0xd88 CALLVALUE
0xd89 PUSH1 0x40
0xd8b MLOAD
0xd8c SWAP1
0xd8d DUP2
0xd8e MSTORE
0xd8f PUSH1 0x20
0xd91 ADD
0xd92 PUSH1 0x40
0xd94 MLOAD
0xd95 DUP1
0xd96 SWAP2
0xd97 SUB
0xd98 SWAP1
0xd99 LOG1
---
0xd66: JUMPDEST 
0xd67: V1354 = 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0xd88: V1355 = CALLVALUE
0xd89: V1356 = 0x40
0xd8b: V1357 = M[0x40]
0xd8e: M[V1357] = V1355
0xd8f: V1358 = 0x20
0xd91: V1359 = ADD 0x20 V1357
0xd92: V1360 = 0x40
0xd94: V1361 = M[0x40]
0xd97: V1362 = SUB V1359 V1361
0xd99: LOG V1361 V1362 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
---
Entry stack: [V12, 0xf4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4]

================================

Block 0xd9a
[0xd9a:0xd9a]
---
Predecessors: [0xd66]
Successors: [0xd9b]
---
0xd9a JUMPDEST
---
0xd9a: JUMPDEST 
---
Entry stack: [V12, 0xf4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4]

================================

Block 0xd9b
[0xd9b:0xd9c]
---
Predecessors: [0xd9a]
Successors: [0xf4]
---
0xd9b JUMPDEST
0xd9c JUMP
---
0xd9b: JUMPDEST 
0xd9c: JUMP 0xf4
---
Entry stack: [V12, 0xf4]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd9d
[0xd9d:0xda2]
---
Predecessors: [0x279]
Successors: [0x1a1]
---
0xd9d JUMPDEST
0xd9e PUSH1 0x5
0xda0 SLOAD
0xda1 DUP2
0xda2 JUMP
---
0xd9d: JUMPDEST 
0xd9e: V1363 = 0x5
0xda0: V1364 = S[0x5]
0xda2: JUMP 0x1a1
---
Entry stack: [V12, 0x1a1]
Stack pops: 1
Stack additions: [S0, V1364]
Exit stack: [V12, 0x1a1, V1364]

================================

Block 0xda3
[0xda3:0xdab]
---
Predecessors: [0x29e]
Successors: [0x10d]
---
0xda3 JUMPDEST
0xda4 PUSH1 0x7
0xda6 SLOAD
0xda7 PUSH1 0xff
0xda9 AND
0xdaa DUP2
0xdab JUMP
---
0xda3: JUMPDEST 
0xda4: V1365 = 0x7
0xda6: V1366 = S[0x7]
0xda7: V1367 = 0xff
0xda9: V1368 = AND 0xff V1366
0xdab: JUMP 0x10d
---
Entry stack: [V12, 0x10d]
Stack pops: 1
Stack additions: [S0, V1368]
Exit stack: [V12, 0x10d, V1368]

================================

Block 0xdac
[0xdac:0xdc3]
---
Predecessors: [0x2c5]
Successors: [0xdc4, 0xdc8]
---
0xdac JUMPDEST
0xdad PUSH1 0x0
0xdaf DUP1
0xdb0 SLOAD
0xdb1 CALLER
0xdb2 PUSH1 0x1
0xdb4 PUSH1 0xa0
0xdb6 PUSH1 0x2
0xdb8 EXP
0xdb9 SUB
0xdba SWAP1
0xdbb DUP2
0xdbc AND
0xdbd SWAP2
0xdbe AND
0xdbf EQ
0xdc0 PUSH2 0xdc8
0xdc3 JUMPI
---
0xdac: JUMPDEST 
0xdad: V1369 = 0x0
0xdb0: V1370 = S[0x0]
0xdb1: V1371 = CALLER
0xdb2: V1372 = 0x1
0xdb4: V1373 = 0xa0
0xdb6: V1374 = 0x2
0xdb8: V1375 = EXP 0x2 0xa0
0xdb9: V1376 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdbc: V1377 = AND 0xffffffffffffffffffffffffffffffffffffffff V1371
0xdbe: V1378 = AND V1370 0xffffffffffffffffffffffffffffffffffffffff
0xdbf: V1379 = EQ V1378 V1377
0xdc0: V1380 = 0xdc8
0xdc3: JUMPI 0xdc8 V1379
---
Entry stack: [V12, 0x10d, V268, V270]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x10d, V268, V270, 0x0]

================================

Block 0xdc4
[0xdc4:0xdc7]
---
Predecessors: [0xdac]
Successors: []
---
0xdc4 PUSH1 0x0
0xdc6 DUP1
0xdc7 REVERT
---
0xdc4: V1381 = 0x0
0xdc7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V268, V270, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0]

================================

Block 0xdc8
[0xdc8:0xe3b]
---
Predecessors: [0xdac]
Successors: [0xe3c, 0xe40]
---
0xdc8 JUMPDEST
0xdc9 PUSH1 0x1
0xdcb SLOAD
0xdcc PUSH1 0x0
0xdce DUP1
0xdcf SLOAD
0xdd0 PUSH1 0x6
0xdd2 SLOAD
0xdd3 PUSH1 0x1
0xdd5 PUSH1 0xa0
0xdd7 PUSH1 0x2
0xdd9 EXP
0xdda SUB
0xddb SWAP4
0xddc DUP5
0xddd AND
0xdde SWAP4
0xddf PUSH4 0x23b872dd
0xde4 SWAP4
0xde5 SWAP3
0xde6 AND
0xde7 SWAP2
0xde8 DUP5
0xde9 SWAP2
0xdea SWAP1
0xdeb PUSH1 0x40
0xded MLOAD
0xdee PUSH1 0x20
0xdf0 ADD
0xdf1 MSTORE
0xdf2 PUSH1 0x40
0xdf4 MLOAD
0xdf5 PUSH1 0xe0
0xdf7 PUSH1 0x2
0xdf9 EXP
0xdfa PUSH4 0xffffffff
0xdff DUP7
0xe00 AND
0xe01 MUL
0xe02 DUP2
0xe03 MSTORE
0xe04 PUSH1 0x1
0xe06 PUSH1 0xa0
0xe08 PUSH1 0x2
0xe0a EXP
0xe0b SUB
0xe0c SWAP4
0xe0d DUP5
0xe0e AND
0xe0f PUSH1 0x4
0xe11 DUP3
0xe12 ADD
0xe13 MSTORE
0xe14 SWAP2
0xe15 SWAP1
0xe16 SWAP3
0xe17 AND
0xe18 PUSH1 0x24
0xe1a DUP3
0xe1b ADD
0xe1c MSTORE
0xe1d PUSH1 0x44
0xe1f DUP2
0xe20 ADD
0xe21 SWAP2
0xe22 SWAP1
0xe23 SWAP2
0xe24 MSTORE
0xe25 PUSH1 0x64
0xe27 ADD
0xe28 PUSH1 0x20
0xe2a PUSH1 0x40
0xe2c MLOAD
0xe2d DUP1
0xe2e DUP4
0xe2f SUB
0xe30 DUP2
0xe31 PUSH1 0x0
0xe33 DUP8
0xe34 DUP1
0xe35 EXTCODESIZE
0xe36 ISZERO
0xe37 ISZERO
0xe38 PUSH2 0xe40
0xe3b JUMPI
---
0xdc8: JUMPDEST 
0xdc9: V1382 = 0x1
0xdcb: V1383 = S[0x1]
0xdcc: V1384 = 0x0
0xdcf: V1385 = S[0x0]
0xdd0: V1386 = 0x6
0xdd2: V1387 = S[0x6]
0xdd3: V1388 = 0x1
0xdd5: V1389 = 0xa0
0xdd7: V1390 = 0x2
0xdd9: V1391 = EXP 0x2 0xa0
0xdda: V1392 = SUB 0x10000000000000000000000000000000000000000 0x1
0xddd: V1393 = AND 0xffffffffffffffffffffffffffffffffffffffff V1383
0xddf: V1394 = 0x23b872dd
0xde6: V1395 = AND V1385 0xffffffffffffffffffffffffffffffffffffffff
0xdeb: V1396 = 0x40
0xded: V1397 = M[0x40]
0xdee: V1398 = 0x20
0xdf0: V1399 = ADD 0x20 V1397
0xdf1: M[V1399] = 0x0
0xdf2: V1400 = 0x40
0xdf4: V1401 = M[0x40]
0xdf5: V1402 = 0xe0
0xdf7: V1403 = 0x2
0xdf9: V1404 = EXP 0x2 0xe0
0xdfa: V1405 = 0xffffffff
0xe00: V1406 = AND 0x23b872dd 0xffffffff
0xe01: V1407 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0xe03: M[V1401] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xe04: V1408 = 0x1
0xe06: V1409 = 0xa0
0xe08: V1410 = 0x2
0xe0a: V1411 = EXP 0x2 0xa0
0xe0b: V1412 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe0e: V1413 = AND 0xffffffffffffffffffffffffffffffffffffffff V1395
0xe0f: V1414 = 0x4
0xe12: V1415 = ADD V1401 0x4
0xe13: M[V1415] = V1413
0xe17: V1416 = AND 0xffffffffffffffffffffffffffffffffffffffff V1393
0xe18: V1417 = 0x24
0xe1b: V1418 = ADD V1401 0x24
0xe1c: M[V1418] = V1416
0xe1d: V1419 = 0x44
0xe20: V1420 = ADD V1401 0x44
0xe24: M[V1420] = V1387
0xe25: V1421 = 0x64
0xe27: V1422 = ADD 0x64 V1401
0xe28: V1423 = 0x20
0xe2a: V1424 = 0x40
0xe2c: V1425 = M[0x40]
0xe2f: V1426 = SUB V1422 V1425
0xe31: V1427 = 0x0
0xe35: V1428 = EXTCODESIZE V1393
0xe36: V1429 = ISZERO V1428
0xe37: V1430 = ISZERO V1429
0xe38: V1431 = 0xe40
0xe3b: JUMPI 0xe40 V1430
---
Entry stack: [V12, 0x10d, V268, V270, 0x0]
Stack pops: 0
Stack additions: [V1393, 0x23b872dd, V1422, 0x20, V1425, V1426, V1425, 0x0, V1393]
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1393, 0x23b872dd, V1422, 0x20, V1425, V1426, V1425, 0x0, V1393]

================================

Block 0xe3c
[0xe3c:0xe3f]
---
Predecessors: [0xdc8]
Successors: []
---
0xe3c PUSH1 0x0
0xe3e DUP1
0xe3f REVERT
---
0xe3c: V1432 = 0x0
0xe3f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1393, 0x23b872dd, V1422, 0x20, V1425, V1426, V1425, 0x0, V1393]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1393, 0x23b872dd, V1422, 0x20, V1425, V1426, V1425, 0x0, V1393]

================================

Block 0xe40
[0xe40:0xe4c]
---
Predecessors: [0xdc8]
Successors: [0xe4d, 0xe51]
---
0xe40 JUMPDEST
0xe41 PUSH2 0x2c6
0xe44 GAS
0xe45 SUB
0xe46 CALL
0xe47 ISZERO
0xe48 ISZERO
0xe49 PUSH2 0xe51
0xe4c JUMPI
---
0xe40: JUMPDEST 
0xe41: V1433 = 0x2c6
0xe44: V1434 = GAS
0xe45: V1435 = SUB V1434 0x2c6
0xe46: V1436 = CALL V1435 V1393 0x0 V1425 V1426 V1425 0x20
0xe47: V1437 = ISZERO V1436
0xe48: V1438 = ISZERO V1437
0xe49: V1439 = 0xe51
0xe4c: JUMPI 0xe51 V1438
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1393, 0x23b872dd, V1422, 0x20, V1425, V1426, V1425, 0x0, V1393]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1393, 0x23b872dd, V1422]

================================

Block 0xe4d
[0xe4d:0xe50]
---
Predecessors: [0xe40]
Successors: []
---
0xe4d PUSH1 0x0
0xe4f DUP1
0xe50 REVERT
---
0xe4d: V1440 = 0x0
0xe50: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1393, 0x23b872dd, V1422]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1393, 0x23b872dd, V1422]

================================

Block 0xe51
[0xe51:0xe61]
---
Predecessors: [0xe40]
Successors: [0xe62, 0xe66]
---
0xe51 JUMPDEST
0xe52 POP
0xe53 POP
0xe54 POP
0xe55 PUSH1 0x40
0xe57 MLOAD
0xe58 DUP1
0xe59 MLOAD
0xe5a SWAP1
0xe5b POP
0xe5c ISZERO
0xe5d ISZERO
0xe5e PUSH2 0xe66
0xe61 JUMPI
---
0xe51: JUMPDEST 
0xe55: V1441 = 0x40
0xe57: V1442 = M[0x40]
0xe59: V1443 = M[V1442]
0xe5c: V1444 = ISZERO V1443
0xe5d: V1445 = ISZERO V1444
0xe5e: V1446 = 0xe66
0xe61: JUMPI 0xe66 V1445
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1393, 0x23b872dd, V1422]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0]

================================

Block 0xe62
[0xe62:0xe65]
---
Predecessors: [0xe51]
Successors: []
---
0xe62 PUSH1 0x0
0xe64 DUP1
0xe65 REVERT
---
0xe62: V1447 = 0x0
0xe65: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V268, V270, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0]

================================

Block 0xe66
[0xe66:0xea7]
---
Predecessors: [0xe51]
Successors: [0xea8, 0xeac]
---
0xe66 JUMPDEST
0xe67 DUP3
0xe68 PUSH1 0x1
0xe6a PUSH1 0xa0
0xe6c PUSH1 0x2
0xe6e EXP
0xe6f SUB
0xe70 AND
0xe71 PUSH4 0x8da5cb5b
0xe76 PUSH1 0x0
0xe78 PUSH1 0x40
0xe7a MLOAD
0xe7b PUSH1 0x20
0xe7d ADD
0xe7e MSTORE
0xe7f PUSH1 0x40
0xe81 MLOAD
0xe82 DUP2
0xe83 PUSH4 0xffffffff
0xe88 AND
0xe89 PUSH1 0xe0
0xe8b PUSH1 0x2
0xe8d EXP
0xe8e MUL
0xe8f DUP2
0xe90 MSTORE
0xe91 PUSH1 0x4
0xe93 ADD
0xe94 PUSH1 0x20
0xe96 PUSH1 0x40
0xe98 MLOAD
0xe99 DUP1
0xe9a DUP4
0xe9b SUB
0xe9c DUP2
0xe9d PUSH1 0x0
0xe9f DUP8
0xea0 DUP1
0xea1 EXTCODESIZE
0xea2 ISZERO
0xea3 ISZERO
0xea4 PUSH2 0xeac
0xea7 JUMPI
---
0xe66: JUMPDEST 
0xe68: V1448 = 0x1
0xe6a: V1449 = 0xa0
0xe6c: V1450 = 0x2
0xe6e: V1451 = EXP 0x2 0xa0
0xe6f: V1452 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe70: V1453 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0xe71: V1454 = 0x8da5cb5b
0xe76: V1455 = 0x0
0xe78: V1456 = 0x40
0xe7a: V1457 = M[0x40]
0xe7b: V1458 = 0x20
0xe7d: V1459 = ADD 0x20 V1457
0xe7e: M[V1459] = 0x0
0xe7f: V1460 = 0x40
0xe81: V1461 = M[0x40]
0xe83: V1462 = 0xffffffff
0xe88: V1463 = AND 0xffffffff 0x8da5cb5b
0xe89: V1464 = 0xe0
0xe8b: V1465 = 0x2
0xe8d: V1466 = EXP 0x2 0xe0
0xe8e: V1467 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0xe90: M[V1461] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0xe91: V1468 = 0x4
0xe93: V1469 = ADD 0x4 V1461
0xe94: V1470 = 0x20
0xe96: V1471 = 0x40
0xe98: V1472 = M[0x40]
0xe9b: V1473 = SUB V1469 V1472
0xe9d: V1474 = 0x0
0xea1: V1475 = EXTCODESIZE V1453
0xea2: V1476 = ISZERO V1475
0xea3: V1477 = ISZERO V1476
0xea4: V1478 = 0xeac
0xea7: JUMPI 0xeac V1477
---
Entry stack: [V12, 0x10d, V268, V270, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1453, 0x8da5cb5b, V1469, 0x20, V1472, V1473, V1472, 0x0, V1453]
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1453, 0x8da5cb5b, V1469, 0x20, V1472, V1473, V1472, 0x0, V1453]

================================

Block 0xea8
[0xea8:0xeab]
---
Predecessors: [0xe66]
Successors: []
---
0xea8 PUSH1 0x0
0xeaa DUP1
0xeab REVERT
---
0xea8: V1479 = 0x0
0xeab: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1453, 0x8da5cb5b, V1469, 0x20, V1472, V1473, V1472, 0x0, V1453]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1453, 0x8da5cb5b, V1469, 0x20, V1472, V1473, V1472, 0x0, V1453]

================================

Block 0xeac
[0xeac:0xeb8]
---
Predecessors: [0xe66]
Successors: [0xeb9, 0xebd]
---
0xeac JUMPDEST
0xead PUSH2 0x2c6
0xeb0 GAS
0xeb1 SUB
0xeb2 CALL
0xeb3 ISZERO
0xeb4 ISZERO
0xeb5 PUSH2 0xebd
0xeb8 JUMPI
---
0xeac: JUMPDEST 
0xead: V1480 = 0x2c6
0xeb0: V1481 = GAS
0xeb1: V1482 = SUB V1481 0x2c6
0xeb2: V1483 = CALL V1482 V1453 0x0 V1472 V1473 V1472 0x20
0xeb3: V1484 = ISZERO V1483
0xeb4: V1485 = ISZERO V1484
0xeb5: V1486 = 0xebd
0xeb8: JUMPI 0xebd V1485
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1453, 0x8da5cb5b, V1469, 0x20, V1472, V1473, V1472, 0x0, V1453]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1453, 0x8da5cb5b, V1469]

================================

Block 0xeb9
[0xeb9:0xebc]
---
Predecessors: [0xeac]
Successors: []
---
0xeb9 PUSH1 0x0
0xebb DUP1
0xebc REVERT
---
0xeb9: V1487 = 0x0
0xebc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1453, 0x8da5cb5b, V1469]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1453, 0x8da5cb5b, V1469]

================================

Block 0xebd
[0xebd:0xede]
---
Predecessors: [0xeac]
Successors: [0xedf, 0xf52]
---
0xebd JUMPDEST
0xebe POP
0xebf POP
0xec0 POP
0xec1 PUSH1 0x40
0xec3 MLOAD
0xec4 DUP1
0xec5 MLOAD
0xec6 PUSH1 0x0
0xec8 SLOAD
0xec9 PUSH1 0x1
0xecb PUSH1 0xa0
0xecd PUSH1 0x2
0xecf EXP
0xed0 SUB
0xed1 SWAP1
0xed2 DUP2
0xed3 AND
0xed4 SWAP2
0xed5 AND
0xed6 EQ
0xed7 SWAP1
0xed8 POP
0xed9 DUP1
0xeda ISZERO
0xedb PUSH2 0xf52
0xede JUMPI
---
0xebd: JUMPDEST 
0xec1: V1488 = 0x40
0xec3: V1489 = M[0x40]
0xec5: V1490 = M[V1489]
0xec6: V1491 = 0x0
0xec8: V1492 = S[0x0]
0xec9: V1493 = 0x1
0xecb: V1494 = 0xa0
0xecd: V1495 = 0x2
0xecf: V1496 = EXP 0x2 0xa0
0xed0: V1497 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed3: V1498 = AND 0xffffffffffffffffffffffffffffffffffffffff V1492
0xed5: V1499 = AND V1490 0xffffffffffffffffffffffffffffffffffffffff
0xed6: V1500 = EQ V1499 V1498
0xeda: V1501 = ISZERO V1500
0xedb: V1502 = 0xf52
0xede: JUMPI 0xf52 V1501
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1453, 0x8da5cb5b, V1469]
Stack pops: 3
Stack additions: [V1500]
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1500]

================================

Block 0xedf
[0xedf:0xf20]
---
Predecessors: [0xebd]
Successors: [0xf21, 0xf25]
---
0xedf POP
0xee0 DUP3
0xee1 PUSH1 0x1
0xee3 PUSH1 0xa0
0xee5 PUSH1 0x2
0xee7 EXP
0xee8 SUB
0xee9 AND
0xeea PUSH4 0x38d52e0f
0xeef PUSH1 0x0
0xef1 PUSH1 0x40
0xef3 MLOAD
0xef4 PUSH1 0x20
0xef6 ADD
0xef7 MSTORE
0xef8 PUSH1 0x40
0xefa MLOAD
0xefb DUP2
0xefc PUSH4 0xffffffff
0xf01 AND
0xf02 PUSH1 0xe0
0xf04 PUSH1 0x2
0xf06 EXP
0xf07 MUL
0xf08 DUP2
0xf09 MSTORE
0xf0a PUSH1 0x4
0xf0c ADD
0xf0d PUSH1 0x20
0xf0f PUSH1 0x40
0xf11 MLOAD
0xf12 DUP1
0xf13 DUP4
0xf14 SUB
0xf15 DUP2
0xf16 PUSH1 0x0
0xf18 DUP8
0xf19 DUP1
0xf1a EXTCODESIZE
0xf1b ISZERO
0xf1c ISZERO
0xf1d PUSH2 0xf25
0xf20 JUMPI
---
0xee1: V1503 = 0x1
0xee3: V1504 = 0xa0
0xee5: V1505 = 0x2
0xee7: V1506 = EXP 0x2 0xa0
0xee8: V1507 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee9: V1508 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0xeea: V1509 = 0x38d52e0f
0xeef: V1510 = 0x0
0xef1: V1511 = 0x40
0xef3: V1512 = M[0x40]
0xef4: V1513 = 0x20
0xef6: V1514 = ADD 0x20 V1512
0xef7: M[V1514] = 0x0
0xef8: V1515 = 0x40
0xefa: V1516 = M[0x40]
0xefc: V1517 = 0xffffffff
0xf01: V1518 = AND 0xffffffff 0x38d52e0f
0xf02: V1519 = 0xe0
0xf04: V1520 = 0x2
0xf06: V1521 = EXP 0x2 0xe0
0xf07: V1522 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0xf09: M[V1516] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0xf0a: V1523 = 0x4
0xf0c: V1524 = ADD 0x4 V1516
0xf0d: V1525 = 0x20
0xf0f: V1526 = 0x40
0xf11: V1527 = M[0x40]
0xf14: V1528 = SUB V1524 V1527
0xf16: V1529 = 0x0
0xf1a: V1530 = EXTCODESIZE V1508
0xf1b: V1531 = ISZERO V1530
0xf1c: V1532 = ISZERO V1531
0xf1d: V1533 = 0xf25
0xf20: JUMPI 0xf25 V1532
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1500]
Stack pops: 4
Stack additions: [S3, S2, S1, V1508, 0x38d52e0f, V1524, 0x20, V1527, V1528, V1527, 0x0, V1508]
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1508, 0x38d52e0f, V1524, 0x20, V1527, V1528, V1527, 0x0, V1508]

================================

Block 0xf21
[0xf21:0xf24]
---
Predecessors: [0xedf]
Successors: []
---
0xf21 PUSH1 0x0
0xf23 DUP1
0xf24 REVERT
---
0xf21: V1534 = 0x0
0xf24: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1508, 0x38d52e0f, V1524, 0x20, V1527, V1528, V1527, 0x0, V1508]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1508, 0x38d52e0f, V1524, 0x20, V1527, V1528, V1527, 0x0, V1508]

================================

Block 0xf25
[0xf25:0xf31]
---
Predecessors: [0xedf]
Successors: [0xf32, 0xf36]
---
0xf25 JUMPDEST
0xf26 PUSH2 0x2c6
0xf29 GAS
0xf2a SUB
0xf2b CALL
0xf2c ISZERO
0xf2d ISZERO
0xf2e PUSH2 0xf36
0xf31 JUMPI
---
0xf25: JUMPDEST 
0xf26: V1535 = 0x2c6
0xf29: V1536 = GAS
0xf2a: V1537 = SUB V1536 0x2c6
0xf2b: V1538 = CALL V1537 V1508 0x0 V1527 V1528 V1527 0x20
0xf2c: V1539 = ISZERO V1538
0xf2d: V1540 = ISZERO V1539
0xf2e: V1541 = 0xf36
0xf31: JUMPI 0xf36 V1540
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1508, 0x38d52e0f, V1524, 0x20, V1527, V1528, V1527, 0x0, V1508]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1508, 0x38d52e0f, V1524]

================================

Block 0xf32
[0xf32:0xf35]
---
Predecessors: [0xf25]
Successors: []
---
0xf32 PUSH1 0x0
0xf34 DUP1
0xf35 REVERT
---
0xf32: V1542 = 0x0
0xf35: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1508, 0x38d52e0f, V1524]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1508, 0x38d52e0f, V1524]

================================

Block 0xf36
[0xf36:0xf51]
---
Predecessors: [0xf25]
Successors: [0xf52]
---
0xf36 JUMPDEST
0xf37 POP
0xf38 POP
0xf39 POP
0xf3a PUSH1 0x40
0xf3c MLOAD
0xf3d DUP1
0xf3e MLOAD
0xf3f PUSH1 0x2
0xf41 SLOAD
0xf42 PUSH1 0x1
0xf44 PUSH1 0xa0
0xf46 PUSH1 0x2
0xf48 EXP
0xf49 SUB
0xf4a SWAP1
0xf4b DUP2
0xf4c AND
0xf4d SWAP2
0xf4e AND
0xf4f EQ
0xf50 SWAP1
0xf51 POP
---
0xf36: JUMPDEST 
0xf3a: V1543 = 0x40
0xf3c: V1544 = M[0x40]
0xf3e: V1545 = M[V1544]
0xf3f: V1546 = 0x2
0xf41: V1547 = S[0x2]
0xf42: V1548 = 0x1
0xf44: V1549 = 0xa0
0xf46: V1550 = 0x2
0xf48: V1551 = EXP 0x2 0xa0
0xf49: V1552 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4c: V1553 = AND 0xffffffffffffffffffffffffffffffffffffffff V1547
0xf4e: V1554 = AND V1545 0xffffffffffffffffffffffffffffffffffffffff
0xf4f: V1555 = EQ V1554 V1553
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1508, 0x38d52e0f, V1524]
Stack pops: 3
Stack additions: [V1555]
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1555]

================================

Block 0xf52
[0xf52:0xf58]
---
Predecessors: [0xebd, 0xf36]
Successors: [0xf59, 0xf5d]
---
0xf52 JUMPDEST
0xf53 ISZERO
0xf54 ISZERO
0xf55 PUSH2 0xf5d
0xf58 JUMPI
---
0xf52: JUMPDEST 
0xf53: V1556 = ISZERO S0
0xf54: V1557 = ISZERO V1556
0xf55: V1558 = 0xf5d
0xf58: JUMPI 0xf5d V1557
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0]

================================

Block 0xf59
[0xf59:0xf5c]
---
Predecessors: [0xf52]
Successors: []
---
0xf59 PUSH1 0x0
0xf5b DUP1
0xf5c REVERT
---
0xf59: V1559 = 0x0
0xf5c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V268, V270, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0]

================================

Block 0xf5d
[0xf5d:0xf6f]
---
Predecessors: [0xf52]
Successors: [0xc12, 0xf70]
---
0xf5d JUMPDEST
0xf5e PUSH1 0x1
0xf60 PUSH1 0xa0
0xf62 PUSH1 0x2
0xf64 EXP
0xf65 SUB
0xf66 ADDRESS
0xf67 AND
0xf68 BALANCE
0xf69 DUP3
0xf6a SWAP1
0xf6b LT
0xf6c PUSH2 0xc12
0xf6f JUMPI
---
0xf5d: JUMPDEST 
0xf5e: V1560 = 0x1
0xf60: V1561 = 0xa0
0xf62: V1562 = 0x2
0xf64: V1563 = EXP 0x2 0xa0
0xf65: V1564 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf66: V1565 = ADDRESS
0xf67: V1566 = AND V1565 0xffffffffffffffffffffffffffffffffffffffff
0xf68: V1567 = BALANCE V1566
0xf6b: V1568 = LT V1567 V270
0xf6c: V1569 = 0xc12
0xf6f: JUMPI 0xc12 V1568
---
Entry stack: [V12, 0x10d, V268, V270, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x10d, V268, V270, 0x0]

================================

Block 0xf70
[0xf70:0xfeb]
---
Predecessors: [0xf5d]
Successors: [0xfec, 0xff0]
---
0xf70 PUSH32 0x714b446590efbc5b722abe34b4c0cacf4b1f5607fbf924f957646590ce66c4ad
0xf91 DUP4
0xf92 DUP4
0xf93 PUSH1 0x40
0xf95 MLOAD
0xf96 PUSH1 0x1
0xf98 PUSH1 0xa0
0xf9a PUSH1 0x2
0xf9c EXP
0xf9d SUB
0xf9e SWAP1
0xf9f SWAP3
0xfa0 AND
0xfa1 DUP3
0xfa2 MSTORE
0xfa3 PUSH1 0x20
0xfa5 DUP3
0xfa6 ADD
0xfa7 MSTORE
0xfa8 PUSH1 0x40
0xfaa SWAP1
0xfab DUP2
0xfac ADD
0xfad SWAP1
0xfae MLOAD
0xfaf DUP1
0xfb0 SWAP2
0xfb1 SUB
0xfb2 SWAP1
0xfb3 LOG1
0xfb4 DUP3
0xfb5 PUSH1 0x1
0xfb7 PUSH1 0xa0
0xfb9 PUSH1 0x2
0xfbb EXP
0xfbc SUB
0xfbd AND
0xfbe PUSH4 0x919f8cfc
0xfc3 DUP4
0xfc4 PUSH1 0x40
0xfc6 MLOAD
0xfc7 DUP3
0xfc8 PUSH4 0xffffffff
0xfcd AND
0xfce PUSH1 0xe0
0xfd0 PUSH1 0x2
0xfd2 EXP
0xfd3 MUL
0xfd4 DUP2
0xfd5 MSTORE
0xfd6 PUSH1 0x4
0xfd8 ADD
0xfd9 PUSH1 0x0
0xfdb PUSH1 0x40
0xfdd MLOAD
0xfde DUP1
0xfdf DUP4
0xfe0 SUB
0xfe1 DUP2
0xfe2 DUP6
0xfe3 DUP9
0xfe4 DUP1
0xfe5 EXTCODESIZE
0xfe6 ISZERO
0xfe7 ISZERO
0xfe8 PUSH2 0xff0
0xfeb JUMPI
---
0xf70: V1570 = 0x714b446590efbc5b722abe34b4c0cacf4b1f5607fbf924f957646590ce66c4ad
0xf93: V1571 = 0x40
0xf95: V1572 = M[0x40]
0xf96: V1573 = 0x1
0xf98: V1574 = 0xa0
0xf9a: V1575 = 0x2
0xf9c: V1576 = EXP 0x2 0xa0
0xf9d: V1577 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfa0: V1578 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0xfa2: M[V1572] = V1578
0xfa3: V1579 = 0x20
0xfa6: V1580 = ADD V1572 0x20
0xfa7: M[V1580] = V270
0xfa8: V1581 = 0x40
0xfac: V1582 = ADD 0x40 V1572
0xfae: V1583 = M[0x40]
0xfb1: V1584 = SUB V1582 V1583
0xfb3: LOG V1583 V1584 0x714b446590efbc5b722abe34b4c0cacf4b1f5607fbf924f957646590ce66c4ad
0xfb5: V1585 = 0x1
0xfb7: V1586 = 0xa0
0xfb9: V1587 = 0x2
0xfbb: V1588 = EXP 0x2 0xa0
0xfbc: V1589 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfbd: V1590 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0xfbe: V1591 = 0x919f8cfc
0xfc4: V1592 = 0x40
0xfc6: V1593 = M[0x40]
0xfc8: V1594 = 0xffffffff
0xfcd: V1595 = AND 0xffffffff 0x919f8cfc
0xfce: V1596 = 0xe0
0xfd0: V1597 = 0x2
0xfd2: V1598 = EXP 0x2 0xe0
0xfd3: V1599 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x919f8cfc
0xfd5: M[V1593] = 0x919f8cfc00000000000000000000000000000000000000000000000000000000
0xfd6: V1600 = 0x4
0xfd8: V1601 = ADD 0x4 V1593
0xfd9: V1602 = 0x0
0xfdb: V1603 = 0x40
0xfdd: V1604 = M[0x40]
0xfe0: V1605 = SUB V1601 V1604
0xfe5: V1606 = EXTCODESIZE V1590
0xfe6: V1607 = ISZERO V1606
0xfe7: V1608 = ISZERO V1607
0xfe8: V1609 = 0xff0
0xfeb: JUMPI 0xff0 V1608
---
Entry stack: [V12, 0x10d, V268, V270, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1590, 0x919f8cfc, S1, V1601, 0x0, V1604, V1605, V1604, S1, V1590]
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1590, 0x919f8cfc, V270, V1601, 0x0, V1604, V1605, V1604, V270, V1590]

================================

Block 0xfec
[0xfec:0xfef]
---
Predecessors: [0xf70]
Successors: []
---
0xfec PUSH1 0x0
0xfee DUP1
0xfef REVERT
---
0xfec: V1610 = 0x0
0xfef: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1590, 0x919f8cfc, V270, V1601, 0x0, V1604, V1605, V1604, V270, V1590]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1590, 0x919f8cfc, V270, V1601, 0x0, V1604, V1605, V1604, V270, V1590]

================================

Block 0xff0
[0xff0:0xffc]
---
Predecessors: [0xf70]
Successors: [0xffd, 0x1001]
---
0xff0 JUMPDEST
0xff1 PUSH2 0x25ee
0xff4 GAS
0xff5 SUB
0xff6 CALL
0xff7 ISZERO
0xff8 ISZERO
0xff9 PUSH2 0x1001
0xffc JUMPI
---
0xff0: JUMPDEST 
0xff1: V1611 = 0x25ee
0xff4: V1612 = GAS
0xff5: V1613 = SUB V1612 0x25ee
0xff6: V1614 = CALL V1613 V1590 V270 V1604 V1605 V1604 0x0
0xff7: V1615 = ISZERO V1614
0xff8: V1616 = ISZERO V1615
0xff9: V1617 = 0x1001
0xffc: JUMPI 0x1001 V1616
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1590, 0x919f8cfc, V270, V1601, 0x0, V1604, V1605, V1604, V270, V1590]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1590, 0x919f8cfc, V270, V1601]

================================

Block 0xffd
[0xffd:0x1000]
---
Predecessors: [0xff0]
Successors: []
---
0xffd PUSH1 0x0
0xfff DUP1
0x1000 REVERT
---
0xffd: V1618 = 0x0
0x1000: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1590, 0x919f8cfc, V270, V1601]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0, V1590, 0x919f8cfc, V270, V1601]

================================

Block 0x1001
[0x1001:0x1005]
---
Predecessors: [0xff0]
Successors: [0x1006]
---
0x1001 JUMPDEST
0x1002 POP
0x1003 POP
0x1004 POP
0x1005 POP
---
0x1001: JUMPDEST 
---
Entry stack: [V12, 0x10d, V268, V270, 0x0, V1590, 0x919f8cfc, V270, V1601]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0]

================================

Block 0x1006
[0x1006:0x1006]
---
Predecessors: [0x1001]
Successors: [0x1007]
---
0x1006 JUMPDEST
---
0x1006: JUMPDEST 
---
Entry stack: [V12, 0x10d, V268, V270, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0]

================================

Block 0x1007
[0x1007:0x1007]
---
Predecessors: [0x1006]
Successors: [0x1008]
---
0x1007 JUMPDEST
---
0x1007: JUMPDEST 
---
Entry stack: [V12, 0x10d, V268, V270, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V268, V270, 0x0]

================================

Block 0x1008
[0x1008:0x100d]
---
Predecessors: [0x1007]
Successors: [0x10d]
---
0x1008 JUMPDEST
0x1009 SWAP3
0x100a SWAP2
0x100b POP
0x100c POP
0x100d JUMP
---
0x1008: JUMPDEST 
0x100d: JUMP 0x10d
---
Entry stack: [V12, 0x10d, V268, V270, 0x0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0x0]

================================

Block 0x100e
[0x100e:0x1025]
---
Predecessors: [0x2fb]
Successors: [0x1026, 0x102a]
---
0x100e JUMPDEST
0x100f PUSH1 0x0
0x1011 DUP1
0x1012 SLOAD
0x1013 CALLER
0x1014 PUSH1 0x1
0x1016 PUSH1 0xa0
0x1018 PUSH1 0x2
0x101a EXP
0x101b SUB
0x101c SWAP1
0x101d DUP2
0x101e AND
0x101f SWAP2
0x1020 AND
0x1021 EQ
0x1022 PUSH2 0x102a
0x1025 JUMPI
---
0x100e: JUMPDEST 
0x100f: V1619 = 0x0
0x1012: V1620 = S[0x0]
0x1013: V1621 = CALLER
0x1014: V1622 = 0x1
0x1016: V1623 = 0xa0
0x1018: V1624 = 0x2
0x101a: V1625 = EXP 0x2 0xa0
0x101b: V1626 = SUB 0x10000000000000000000000000000000000000000 0x1
0x101e: V1627 = AND 0xffffffffffffffffffffffffffffffffffffffff V1621
0x1020: V1628 = AND V1620 0xffffffffffffffffffffffffffffffffffffffff
0x1021: V1629 = EQ V1628 V1627
0x1022: V1630 = 0x102a
0x1025: JUMPI 0x102a V1629
---
Entry stack: [V12, 0x10d, V293, V295]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x10d, V293, V295, 0x0]

================================

Block 0x1026
[0x1026:0x1029]
---
Predecessors: [0x100e]
Successors: []
---
0x1026 PUSH1 0x0
0x1028 DUP1
0x1029 REVERT
---
0x1026: V1631 = 0x0
0x1029: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V293, V295, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V293, V295, 0x0]

================================

Block 0x102a
[0x102a:0x109d]
---
Predecessors: [0x100e]
Successors: [0x109e, 0x10a2]
---
0x102a JUMPDEST
0x102b PUSH1 0x1
0x102d SLOAD
0x102e PUSH1 0x0
0x1030 DUP1
0x1031 SLOAD
0x1032 PUSH1 0x6
0x1034 SLOAD
0x1035 PUSH1 0x1
0x1037 PUSH1 0xa0
0x1039 PUSH1 0x2
0x103b EXP
0x103c SUB
0x103d SWAP4
0x103e DUP5
0x103f AND
0x1040 SWAP4
0x1041 PUSH4 0x23b872dd
0x1046 SWAP4
0x1047 SWAP3
0x1048 AND
0x1049 SWAP2
0x104a DUP5
0x104b SWAP2
0x104c SWAP1
0x104d PUSH1 0x40
0x104f MLOAD
0x1050 PUSH1 0x20
0x1052 ADD
0x1053 MSTORE
0x1054 PUSH1 0x40
0x1056 MLOAD
0x1057 PUSH1 0xe0
0x1059 PUSH1 0x2
0x105b EXP
0x105c PUSH4 0xffffffff
0x1061 DUP7
0x1062 AND
0x1063 MUL
0x1064 DUP2
0x1065 MSTORE
0x1066 PUSH1 0x1
0x1068 PUSH1 0xa0
0x106a PUSH1 0x2
0x106c EXP
0x106d SUB
0x106e SWAP4
0x106f DUP5
0x1070 AND
0x1071 PUSH1 0x4
0x1073 DUP3
0x1074 ADD
0x1075 MSTORE
0x1076 SWAP2
0x1077 SWAP1
0x1078 SWAP3
0x1079 AND
0x107a PUSH1 0x24
0x107c DUP3
0x107d ADD
0x107e MSTORE
0x107f PUSH1 0x44
0x1081 DUP2
0x1082 ADD
0x1083 SWAP2
0x1084 SWAP1
0x1085 SWAP2
0x1086 MSTORE
0x1087 PUSH1 0x64
0x1089 ADD
0x108a PUSH1 0x20
0x108c PUSH1 0x40
0x108e MLOAD
0x108f DUP1
0x1090 DUP4
0x1091 SUB
0x1092 DUP2
0x1093 PUSH1 0x0
0x1095 DUP8
0x1096 DUP1
0x1097 EXTCODESIZE
0x1098 ISZERO
0x1099 ISZERO
0x109a PUSH2 0x10a2
0x109d JUMPI
---
0x102a: JUMPDEST 
0x102b: V1632 = 0x1
0x102d: V1633 = S[0x1]
0x102e: V1634 = 0x0
0x1031: V1635 = S[0x0]
0x1032: V1636 = 0x6
0x1034: V1637 = S[0x6]
0x1035: V1638 = 0x1
0x1037: V1639 = 0xa0
0x1039: V1640 = 0x2
0x103b: V1641 = EXP 0x2 0xa0
0x103c: V1642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x103f: V1643 = AND 0xffffffffffffffffffffffffffffffffffffffff V1633
0x1041: V1644 = 0x23b872dd
0x1048: V1645 = AND V1635 0xffffffffffffffffffffffffffffffffffffffff
0x104d: V1646 = 0x40
0x104f: V1647 = M[0x40]
0x1050: V1648 = 0x20
0x1052: V1649 = ADD 0x20 V1647
0x1053: M[V1649] = 0x0
0x1054: V1650 = 0x40
0x1056: V1651 = M[0x40]
0x1057: V1652 = 0xe0
0x1059: V1653 = 0x2
0x105b: V1654 = EXP 0x2 0xe0
0x105c: V1655 = 0xffffffff
0x1062: V1656 = AND 0x23b872dd 0xffffffff
0x1063: V1657 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x1065: M[V1651] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1066: V1658 = 0x1
0x1068: V1659 = 0xa0
0x106a: V1660 = 0x2
0x106c: V1661 = EXP 0x2 0xa0
0x106d: V1662 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1070: V1663 = AND 0xffffffffffffffffffffffffffffffffffffffff V1645
0x1071: V1664 = 0x4
0x1074: V1665 = ADD V1651 0x4
0x1075: M[V1665] = V1663
0x1079: V1666 = AND 0xffffffffffffffffffffffffffffffffffffffff V1643
0x107a: V1667 = 0x24
0x107d: V1668 = ADD V1651 0x24
0x107e: M[V1668] = V1666
0x107f: V1669 = 0x44
0x1082: V1670 = ADD V1651 0x44
0x1086: M[V1670] = V1637
0x1087: V1671 = 0x64
0x1089: V1672 = ADD 0x64 V1651
0x108a: V1673 = 0x20
0x108c: V1674 = 0x40
0x108e: V1675 = M[0x40]
0x1091: V1676 = SUB V1672 V1675
0x1093: V1677 = 0x0
0x1097: V1678 = EXTCODESIZE V1643
0x1098: V1679 = ISZERO V1678
0x1099: V1680 = ISZERO V1679
0x109a: V1681 = 0x10a2
0x109d: JUMPI 0x10a2 V1680
---
Entry stack: [V12, 0x10d, V293, V295, 0x0]
Stack pops: 0
Stack additions: [V1643, 0x23b872dd, V1672, 0x20, V1675, V1676, V1675, 0x0, V1643]
Exit stack: [V12, 0x10d, V293, V295, 0x0, V1643, 0x23b872dd, V1672, 0x20, V1675, V1676, V1675, 0x0, V1643]

================================

Block 0x109e
[0x109e:0x10a1]
---
Predecessors: [0x102a]
Successors: []
---
0x109e PUSH1 0x0
0x10a0 DUP1
0x10a1 REVERT
---
0x109e: V1682 = 0x0
0x10a1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V293, V295, 0x0, V1643, 0x23b872dd, V1672, 0x20, V1675, V1676, V1675, 0x0, V1643]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V293, V295, 0x0, V1643, 0x23b872dd, V1672, 0x20, V1675, V1676, V1675, 0x0, V1643]

================================

Block 0x10a2
[0x10a2:0x10ae]
---
Predecessors: [0x102a]
Successors: [0x10af, 0x10b3]
---
0x10a2 JUMPDEST
0x10a3 PUSH2 0x2c6
0x10a6 GAS
0x10a7 SUB
0x10a8 CALL
0x10a9 ISZERO
0x10aa ISZERO
0x10ab PUSH2 0x10b3
0x10ae JUMPI
---
0x10a2: JUMPDEST 
0x10a3: V1683 = 0x2c6
0x10a6: V1684 = GAS
0x10a7: V1685 = SUB V1684 0x2c6
0x10a8: V1686 = CALL V1685 V1643 0x0 V1675 V1676 V1675 0x20
0x10a9: V1687 = ISZERO V1686
0x10aa: V1688 = ISZERO V1687
0x10ab: V1689 = 0x10b3
0x10ae: JUMPI 0x10b3 V1688
---
Entry stack: [V12, 0x10d, V293, V295, 0x0, V1643, 0x23b872dd, V1672, 0x20, V1675, V1676, V1675, 0x0, V1643]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, V293, V295, 0x0, V1643, 0x23b872dd, V1672]

================================

Block 0x10af
[0x10af:0x10b2]
---
Predecessors: [0x10a2]
Successors: []
---
0x10af PUSH1 0x0
0x10b1 DUP1
0x10b2 REVERT
---
0x10af: V1690 = 0x0
0x10b2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V293, V295, 0x0, V1643, 0x23b872dd, V1672]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V293, V295, 0x0, V1643, 0x23b872dd, V1672]

================================

Block 0x10b3
[0x10b3:0x10c3]
---
Predecessors: [0x10a2]
Successors: [0x10c4, 0x10c8]
---
0x10b3 JUMPDEST
0x10b4 POP
0x10b5 POP
0x10b6 POP
0x10b7 PUSH1 0x40
0x10b9 MLOAD
0x10ba DUP1
0x10bb MLOAD
0x10bc SWAP1
0x10bd POP
0x10be ISZERO
0x10bf ISZERO
0x10c0 PUSH2 0x10c8
0x10c3 JUMPI
---
0x10b3: JUMPDEST 
0x10b7: V1691 = 0x40
0x10b9: V1692 = M[0x40]
0x10bb: V1693 = M[V1692]
0x10be: V1694 = ISZERO V1693
0x10bf: V1695 = ISZERO V1694
0x10c0: V1696 = 0x10c8
0x10c3: JUMPI 0x10c8 V1695
---
Entry stack: [V12, 0x10d, V293, V295, 0x0, V1643, 0x23b872dd, V1672]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10d, V293, V295, 0x0]

================================

Block 0x10c4
[0x10c4:0x10c7]
---
Predecessors: [0x10b3]
Successors: []
---
0x10c4 PUSH1 0x0
0x10c6 DUP1
0x10c7 REVERT
---
0x10c4: V1697 = 0x0
0x10c7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V293, V295, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V293, V295, 0x0]

================================

Block 0x10c8
[0x10c8:0x116d]
---
Predecessors: [0x10b3]
Successors: [0xbf5, 0x116e]
---
0x10c8 JUMPDEST
0x10c9 PUSH32 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0x10ea DUP4
0x10eb DUP4
0x10ec PUSH1 0x40
0x10ee MLOAD
0x10ef PUSH1 0x1
0x10f1 PUSH1 0xa0
0x10f3 PUSH1 0x2
0x10f5 EXP
0x10f6 SUB
0x10f7 SWAP1
0x10f8 SWAP3
0x10f9 AND
0x10fa DUP3
0x10fb MSTORE
0x10fc PUSH1 0x20
0x10fe DUP3
0x10ff ADD
0x1100 MSTORE
0x1101 PUSH1 0x40
0x1103 SWAP1
0x1104 DUP2
0x1105 ADD
0x1106 SWAP1
0x1107 MLOAD
0x1108 DUP1
0x1109 SWAP2
0x110a SUB
0x110b SWAP1
0x110c LOG1
0x110d PUSH1 0x0
0x110f DUP1
0x1110 SLOAD
0x1111 PUSH1 0x1
0x1113 PUSH1 0xa0
0x1115 PUSH1 0x2
0x1117 EXP
0x1118 SUB
0x1119 DUP1
0x111a DUP7
0x111b AND
0x111c SWAP3
0x111d PUSH4 0xa9059cbb
0x1122 SWAP3
0x1123 SWAP1
0x1124 SWAP2
0x1125 AND
0x1126 SWAP1
0x1127 DUP6
0x1128 SWAP1
0x1129 PUSH1 0x40
0x112b MLOAD
0x112c PUSH1 0x20
0x112e ADD
0x112f MSTORE
0x1130 PUSH1 0x40
0x1132 MLOAD
0x1133 PUSH1 0xe0
0x1135 PUSH1 0x2
0x1137 EXP
0x1138 PUSH4 0xffffffff
0x113d DUP6
0x113e AND
0x113f MUL
0x1140 DUP2
0x1141 MSTORE
0x1142 PUSH1 0x1
0x1144 PUSH1 0xa0
0x1146 PUSH1 0x2
0x1148 EXP
0x1149 SUB
0x114a SWAP1
0x114b SWAP3
0x114c AND
0x114d PUSH1 0x4
0x114f DUP4
0x1150 ADD
0x1151 MSTORE
0x1152 PUSH1 0x24
0x1154 DUP3
0x1155 ADD
0x1156 MSTORE
0x1157 PUSH1 0x44
0x1159 ADD
0x115a PUSH1 0x20
0x115c PUSH1 0x40
0x115e MLOAD
0x115f DUP1
0x1160 DUP4
0x1161 SUB
0x1162 DUP2
0x1163 PUSH1 0x0
0x1165 DUP8
0x1166 DUP1
0x1167 EXTCODESIZE
0x1168 ISZERO
0x1169 ISZERO
0x116a PUSH2 0xbf5
0x116d JUMPI
---
0x10c8: JUMPDEST 
0x10c9: V1698 = 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0x10ec: V1699 = 0x40
0x10ee: V1700 = M[0x40]
0x10ef: V1701 = 0x1
0x10f1: V1702 = 0xa0
0x10f3: V1703 = 0x2
0x10f5: V1704 = EXP 0x2 0xa0
0x10f6: V1705 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f9: V1706 = AND V293 0xffffffffffffffffffffffffffffffffffffffff
0x10fb: M[V1700] = V1706
0x10fc: V1707 = 0x20
0x10ff: V1708 = ADD V1700 0x20
0x1100: M[V1708] = V295
0x1101: V1709 = 0x40
0x1105: V1710 = ADD 0x40 V1700
0x1107: V1711 = M[0x40]
0x110a: V1712 = SUB V1710 V1711
0x110c: LOG V1711 V1712 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0x110d: V1713 = 0x0
0x1110: V1714 = S[0x0]
0x1111: V1715 = 0x1
0x1113: V1716 = 0xa0
0x1115: V1717 = 0x2
0x1117: V1718 = EXP 0x2 0xa0
0x1118: V1719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x111b: V1720 = AND V293 0xffffffffffffffffffffffffffffffffffffffff
0x111d: V1721 = 0xa9059cbb
0x1125: V1722 = AND 0xffffffffffffffffffffffffffffffffffffffff V1714
0x1129: V1723 = 0x40
0x112b: V1724 = M[0x40]
0x112c: V1725 = 0x20
0x112e: V1726 = ADD 0x20 V1724
0x112f: M[V1726] = 0x0
0x1130: V1727 = 0x40
0x1132: V1728 = M[0x40]
0x1133: V1729 = 0xe0
0x1135: V1730 = 0x2
0x1137: V1731 = EXP 0x2 0xe0
0x1138: V1732 = 0xffffffff
0x113e: V1733 = AND 0xa9059cbb 0xffffffff
0x113f: V1734 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x1141: M[V1728] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1142: V1735 = 0x1
0x1144: V1736 = 0xa0
0x1146: V1737 = 0x2
0x1148: V1738 = EXP 0x2 0xa0
0x1149: V1739 = SUB 0x10000000000000000000000000000000000000000 0x1
0x114c: V1740 = AND V1722 0xffffffffffffffffffffffffffffffffffffffff
0x114d: V1741 = 0x4
0x1150: V1742 = ADD V1728 0x4
0x1151: M[V1742] = V1740
0x1152: V1743 = 0x24
0x1155: V1744 = ADD V1728 0x24
0x1156: M[V1744] = V295
0x1157: V1745 = 0x44
0x1159: V1746 = ADD 0x44 V1728
0x115a: V1747 = 0x20
0x115c: V1748 = 0x40
0x115e: V1749 = M[0x40]
0x1161: V1750 = SUB V1746 V1749
0x1163: V1751 = 0x0
0x1167: V1752 = EXTCODESIZE V1720
0x1168: V1753 = ISZERO V1752
0x1169: V1754 = ISZERO V1753
0x116a: V1755 = 0xbf5
0x116d: JUMPI 0xbf5 V1754
---
Entry stack: [V12, 0x10d, V293, V295, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1720, 0xa9059cbb, V1746, 0x20, V1749, V1750, V1749, 0x0, V1720]
Exit stack: [V12, 0x10d, V293, V295, 0x0, V1720, 0xa9059cbb, V1746, 0x20, V1749, V1750, V1749, 0x0, V1720]

================================

Block 0x116e
[0x116e:0x1171]
---
Predecessors: [0x10c8]
Successors: []
---
0x116e PUSH1 0x0
0x1170 DUP1
0x1171 REVERT
---
0x116e: V1756 = 0x0
0x1171: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V293, V295, 0x0, V1720, 0xa9059cbb, V1746, 0x20, V1749, V1750, V1749, 0x0, V1720]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V293, V295, 0x0, V1720, 0xa9059cbb, V1746, 0x20, V1749, V1750, V1749, 0x0, V1720]

================================

Block 0x1172
[0x1172:0x117e]
---
Predecessors: []
Successors: [0xc06, 0x117f]
---
0x1172 JUMPDEST
0x1173 PUSH2 0x2c6
0x1176 GAS
0x1177 SUB
0x1178 CALL
0x1179 ISZERO
0x117a ISZERO
0x117b PUSH2 0xc06
0x117e JUMPI
---
0x1172: JUMPDEST 
0x1173: V1757 = 0x2c6
0x1176: V1758 = GAS
0x1177: V1759 = SUB V1758 0x2c6
0x1178: V1760 = CALL V1759 S0 S1 S2 S3 S4 S5
0x1179: V1761 = ISZERO V1760
0x117a: V1762 = ISZERO V1761
0x117b: V1763 = 0xc06
0x117e: JUMPI 0xc06 V1762
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x117f
[0x117f:0x118e]
---
Predecessors: [0x1172]
Successors: [0x118f]
---
0x117f PUSH1 0x0
0x1181 DUP1
0x1182 REVERT
0x1183 JUMPDEST
0x1184 POP
0x1185 POP
0x1186 POP
0x1187 PUSH1 0x40
0x1189 MLOAD
0x118a DUP1
0x118b MLOAD
0x118c SWAP2
0x118d POP
0x118e POP
---
0x117f: V1764 = 0x0
0x1182: REVERT 0x0 0x0
0x1183: JUMPDEST 
0x1187: V1765 = 0x40
0x1189: V1766 = M[0x40]
0x118b: V1767 = M[V1766]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1767]
Exit stack: []

================================

Block 0x118f
[0x118f:0x118f]
---
Predecessors: [0x117f]
Successors: [0x1190]
---
0x118f JUMPDEST
---
0x118f: JUMPDEST 
---
Entry stack: [V1767]
Stack pops: 0
Stack additions: []
Exit stack: [V1767]

================================

Block 0x1190
[0x1190:0x1195]
---
Predecessors: [0x118f]
Successors: []
Has unresolved jump.
---
0x1190 JUMPDEST
0x1191 SWAP3
0x1192 SWAP2
0x1193 POP
0x1194 POP
0x1195 JUMP
---
0x1190: JUMPDEST 
0x1195: JUMP S3
---
Entry stack: [V1767]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V1767]

================================

Block 0x1196
[0x1196:0x119b]
---
Predecessors: [0x33b]
Successors: [0x1a1]
---
0x1196 JUMPDEST
0x1197 PUSH1 0x6
0x1199 SLOAD
0x119a DUP2
0x119b JUMP
---
0x1196: JUMPDEST 
0x1197: V1768 = 0x6
0x1199: V1769 = S[0x6]
0x119b: JUMP 0x1a1
---
Entry stack: [V12, 0x1a1]
Stack pops: 1
Stack additions: [S0, V1769]
Exit stack: [V12, 0x1a1, V1769]

================================

Block 0x119c
[0x119c:0x11b3]
---
Predecessors: [0x360]
Successors: [0x11b4, 0x11b8]
---
0x119c JUMPDEST
0x119d PUSH1 0x0
0x119f DUP1
0x11a0 SLOAD
0x11a1 CALLER
0x11a2 PUSH1 0x1
0x11a4 PUSH1 0xa0
0x11a6 PUSH1 0x2
0x11a8 EXP
0x11a9 SUB
0x11aa SWAP1
0x11ab DUP2
0x11ac AND
0x11ad SWAP2
0x11ae AND
0x11af EQ
0x11b0 PUSH2 0x11b8
0x11b3 JUMPI
---
0x119c: JUMPDEST 
0x119d: V1770 = 0x0
0x11a0: V1771 = S[0x0]
0x11a1: V1772 = CALLER
0x11a2: V1773 = 0x1
0x11a4: V1774 = 0xa0
0x11a6: V1775 = 0x2
0x11a8: V1776 = EXP 0x2 0xa0
0x11a9: V1777 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11ac: V1778 = AND 0xffffffffffffffffffffffffffffffffffffffff V1772
0x11ae: V1779 = AND V1771 0xffffffffffffffffffffffffffffffffffffffff
0x11af: V1780 = EQ V1779 V1778
0x11b0: V1781 = 0x11b8
0x11b3: JUMPI 0x11b8 V1780
---
Entry stack: [V12, 0x10d, V327]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x10d, V327, 0x0]

================================

Block 0x11b4
[0x11b4:0x11b7]
---
Predecessors: [0x119c]
Successors: []
---
0x11b4 PUSH1 0x0
0x11b6 DUP1
0x11b7 REVERT
---
0x11b4: V1782 = 0x0
0x11b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V327, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V327, 0x0]

================================

Block 0x11b8
[0x11b8:0x122b]
---
Predecessors: [0x119c]
Successors: [0x122c, 0x1230]
---
0x11b8 JUMPDEST
0x11b9 PUSH1 0x1
0x11bb SLOAD
0x11bc PUSH1 0x0
0x11be DUP1
0x11bf SLOAD
0x11c0 PUSH1 0x6
0x11c2 SLOAD
0x11c3 PUSH1 0x1
0x11c5 PUSH1 0xa0
0x11c7 PUSH1 0x2
0x11c9 EXP
0x11ca SUB
0x11cb SWAP4
0x11cc DUP5
0x11cd AND
0x11ce SWAP4
0x11cf PUSH4 0x23b872dd
0x11d4 SWAP4
0x11d5 SWAP3
0x11d6 AND
0x11d7 SWAP2
0x11d8 DUP5
0x11d9 SWAP2
0x11da SWAP1
0x11db PUSH1 0x40
0x11dd MLOAD
0x11de PUSH1 0x20
0x11e0 ADD
0x11e1 MSTORE
0x11e2 PUSH1 0x40
0x11e4 MLOAD
0x11e5 PUSH1 0xe0
0x11e7 PUSH1 0x2
0x11e9 EXP
0x11ea PUSH4 0xffffffff
0x11ef DUP7
0x11f0 AND
0x11f1 MUL
0x11f2 DUP2
0x11f3 MSTORE
0x11f4 PUSH1 0x1
0x11f6 PUSH1 0xa0
0x11f8 PUSH1 0x2
0x11fa EXP
0x11fb SUB
0x11fc SWAP4
0x11fd DUP5
0x11fe AND
0x11ff PUSH1 0x4
0x1201 DUP3
0x1202 ADD
0x1203 MSTORE
0x1204 SWAP2
0x1205 SWAP1
0x1206 SWAP3
0x1207 AND
0x1208 PUSH1 0x24
0x120a DUP3
0x120b ADD
0x120c MSTORE
0x120d PUSH1 0x44
0x120f DUP2
0x1210 ADD
0x1211 SWAP2
0x1212 SWAP1
0x1213 SWAP2
0x1214 MSTORE
0x1215 PUSH1 0x64
0x1217 ADD
0x1218 PUSH1 0x20
0x121a PUSH1 0x40
0x121c MLOAD
0x121d DUP1
0x121e DUP4
0x121f SUB
0x1220 DUP2
0x1221 PUSH1 0x0
0x1223 DUP8
0x1224 DUP1
0x1225 EXTCODESIZE
0x1226 ISZERO
0x1227 ISZERO
0x1228 PUSH2 0x1230
0x122b JUMPI
---
0x11b8: JUMPDEST 
0x11b9: V1783 = 0x1
0x11bb: V1784 = S[0x1]
0x11bc: V1785 = 0x0
0x11bf: V1786 = S[0x0]
0x11c0: V1787 = 0x6
0x11c2: V1788 = S[0x6]
0x11c3: V1789 = 0x1
0x11c5: V1790 = 0xa0
0x11c7: V1791 = 0x2
0x11c9: V1792 = EXP 0x2 0xa0
0x11ca: V1793 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11cd: V1794 = AND 0xffffffffffffffffffffffffffffffffffffffff V1784
0x11cf: V1795 = 0x23b872dd
0x11d6: V1796 = AND V1786 0xffffffffffffffffffffffffffffffffffffffff
0x11db: V1797 = 0x40
0x11dd: V1798 = M[0x40]
0x11de: V1799 = 0x20
0x11e0: V1800 = ADD 0x20 V1798
0x11e1: M[V1800] = 0x0
0x11e2: V1801 = 0x40
0x11e4: V1802 = M[0x40]
0x11e5: V1803 = 0xe0
0x11e7: V1804 = 0x2
0x11e9: V1805 = EXP 0x2 0xe0
0x11ea: V1806 = 0xffffffff
0x11f0: V1807 = AND 0x23b872dd 0xffffffff
0x11f1: V1808 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x11f3: M[V1802] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x11f4: V1809 = 0x1
0x11f6: V1810 = 0xa0
0x11f8: V1811 = 0x2
0x11fa: V1812 = EXP 0x2 0xa0
0x11fb: V1813 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11fe: V1814 = AND 0xffffffffffffffffffffffffffffffffffffffff V1796
0x11ff: V1815 = 0x4
0x1202: V1816 = ADD V1802 0x4
0x1203: M[V1816] = V1814
0x1207: V1817 = AND 0xffffffffffffffffffffffffffffffffffffffff V1794
0x1208: V1818 = 0x24
0x120b: V1819 = ADD V1802 0x24
0x120c: M[V1819] = V1817
0x120d: V1820 = 0x44
0x1210: V1821 = ADD V1802 0x44
0x1214: M[V1821] = V1788
0x1215: V1822 = 0x64
0x1217: V1823 = ADD 0x64 V1802
0x1218: V1824 = 0x20
0x121a: V1825 = 0x40
0x121c: V1826 = M[0x40]
0x121f: V1827 = SUB V1823 V1826
0x1221: V1828 = 0x0
0x1225: V1829 = EXTCODESIZE V1794
0x1226: V1830 = ISZERO V1829
0x1227: V1831 = ISZERO V1830
0x1228: V1832 = 0x1230
0x122b: JUMPI 0x1230 V1831
---
Entry stack: [V12, 0x10d, V327, 0x0]
Stack pops: 0
Stack additions: [V1794, 0x23b872dd, V1823, 0x20, V1826, V1827, V1826, 0x0, V1794]
Exit stack: [V12, 0x10d, V327, 0x0, V1794, 0x23b872dd, V1823, 0x20, V1826, V1827, V1826, 0x0, V1794]

================================

Block 0x122c
[0x122c:0x122f]
---
Predecessors: [0x11b8]
Successors: []
---
0x122c PUSH1 0x0
0x122e DUP1
0x122f REVERT
---
0x122c: V1833 = 0x0
0x122f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V327, 0x0, V1794, 0x23b872dd, V1823, 0x20, V1826, V1827, V1826, 0x0, V1794]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V327, 0x0, V1794, 0x23b872dd, V1823, 0x20, V1826, V1827, V1826, 0x0, V1794]

================================

Block 0x1230
[0x1230:0x123c]
---
Predecessors: [0x11b8]
Successors: [0x123d, 0x1241]
---
0x1230 JUMPDEST
0x1231 PUSH2 0x2c6
0x1234 GAS
0x1235 SUB
0x1236 CALL
0x1237 ISZERO
0x1238 ISZERO
0x1239 PUSH2 0x1241
0x123c JUMPI
---
0x1230: JUMPDEST 
0x1231: V1834 = 0x2c6
0x1234: V1835 = GAS
0x1235: V1836 = SUB V1835 0x2c6
0x1236: V1837 = CALL V1836 V1794 0x0 V1826 V1827 V1826 0x20
0x1237: V1838 = ISZERO V1837
0x1238: V1839 = ISZERO V1838
0x1239: V1840 = 0x1241
0x123c: JUMPI 0x1241 V1839
---
Entry stack: [V12, 0x10d, V327, 0x0, V1794, 0x23b872dd, V1823, 0x20, V1826, V1827, V1826, 0x0, V1794]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, V327, 0x0, V1794, 0x23b872dd, V1823]

================================

Block 0x123d
[0x123d:0x1240]
---
Predecessors: [0x1230]
Successors: []
---
0x123d PUSH1 0x0
0x123f DUP1
0x1240 REVERT
---
0x123d: V1841 = 0x0
0x1240: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V327, 0x0, V1794, 0x23b872dd, V1823]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V327, 0x0, V1794, 0x23b872dd, V1823]

================================

Block 0x1241
[0x1241:0x1251]
---
Predecessors: [0x1230]
Successors: [0x1252, 0x1256]
---
0x1241 JUMPDEST
0x1242 POP
0x1243 POP
0x1244 POP
0x1245 PUSH1 0x40
0x1247 MLOAD
0x1248 DUP1
0x1249 MLOAD
0x124a SWAP1
0x124b POP
0x124c ISZERO
0x124d ISZERO
0x124e PUSH2 0x1256
0x1251 JUMPI
---
0x1241: JUMPDEST 
0x1245: V1842 = 0x40
0x1247: V1843 = M[0x40]
0x1249: V1844 = M[V1843]
0x124c: V1845 = ISZERO V1844
0x124d: V1846 = ISZERO V1845
0x124e: V1847 = 0x1256
0x1251: JUMPI 0x1256 V1846
---
Entry stack: [V12, 0x10d, V327, 0x0, V1794, 0x23b872dd, V1823]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10d, V327, 0x0]

================================

Block 0x1252
[0x1252:0x1255]
---
Predecessors: [0x1241]
Successors: []
---
0x1252 PUSH1 0x0
0x1254 DUP1
0x1255 REVERT
---
0x1252: V1848 = 0x0
0x1255: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V327, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V327, 0x0]

================================

Block 0x1256
[0x1256:0x12ec]
---
Predecessors: [0x1241]
Successors: [0x12ed, 0x12f1]
---
0x1256 JUMPDEST
0x1257 PUSH32 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0x1278 DUP3
0x1279 PUSH1 0x40
0x127b MLOAD
0x127c SWAP1
0x127d DUP2
0x127e MSTORE
0x127f PUSH1 0x20
0x1281 ADD
0x1282 PUSH1 0x40
0x1284 MLOAD
0x1285 DUP1
0x1286 SWAP2
0x1287 SUB
0x1288 SWAP1
0x1289 LOG1
0x128a PUSH1 0x2
0x128c SLOAD
0x128d PUSH1 0x0
0x128f DUP1
0x1290 SLOAD
0x1291 PUSH1 0x1
0x1293 PUSH1 0xa0
0x1295 PUSH1 0x2
0x1297 EXP
0x1298 SUB
0x1299 SWAP3
0x129a DUP4
0x129b AND
0x129c SWAP3
0x129d PUSH4 0xa9059cbb
0x12a2 SWAP3
0x12a3 SWAP2
0x12a4 AND
0x12a5 SWAP1
0x12a6 DUP6
0x12a7 SWAP1
0x12a8 PUSH1 0x40
0x12aa MLOAD
0x12ab PUSH1 0x20
0x12ad ADD
0x12ae MSTORE
0x12af PUSH1 0x40
0x12b1 MLOAD
0x12b2 PUSH1 0xe0
0x12b4 PUSH1 0x2
0x12b6 EXP
0x12b7 PUSH4 0xffffffff
0x12bc DUP6
0x12bd AND
0x12be MUL
0x12bf DUP2
0x12c0 MSTORE
0x12c1 PUSH1 0x1
0x12c3 PUSH1 0xa0
0x12c5 PUSH1 0x2
0x12c7 EXP
0x12c8 SUB
0x12c9 SWAP1
0x12ca SWAP3
0x12cb AND
0x12cc PUSH1 0x4
0x12ce DUP4
0x12cf ADD
0x12d0 MSTORE
0x12d1 PUSH1 0x24
0x12d3 DUP3
0x12d4 ADD
0x12d5 MSTORE
0x12d6 PUSH1 0x44
0x12d8 ADD
0x12d9 PUSH1 0x20
0x12db PUSH1 0x40
0x12dd MLOAD
0x12de DUP1
0x12df DUP4
0x12e0 SUB
0x12e1 DUP2
0x12e2 PUSH1 0x0
0x12e4 DUP8
0x12e5 DUP1
0x12e6 EXTCODESIZE
0x12e7 ISZERO
0x12e8 ISZERO
0x12e9 PUSH2 0x12f1
0x12ec JUMPI
---
0x1256: JUMPDEST 
0x1257: V1849 = 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0x1279: V1850 = 0x40
0x127b: V1851 = M[0x40]
0x127e: M[V1851] = V327
0x127f: V1852 = 0x20
0x1281: V1853 = ADD 0x20 V1851
0x1282: V1854 = 0x40
0x1284: V1855 = M[0x40]
0x1287: V1856 = SUB V1853 V1855
0x1289: LOG V1855 V1856 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0x128a: V1857 = 0x2
0x128c: V1858 = S[0x2]
0x128d: V1859 = 0x0
0x1290: V1860 = S[0x0]
0x1291: V1861 = 0x1
0x1293: V1862 = 0xa0
0x1295: V1863 = 0x2
0x1297: V1864 = EXP 0x2 0xa0
0x1298: V1865 = SUB 0x10000000000000000000000000000000000000000 0x1
0x129b: V1866 = AND 0xffffffffffffffffffffffffffffffffffffffff V1858
0x129d: V1867 = 0xa9059cbb
0x12a4: V1868 = AND V1860 0xffffffffffffffffffffffffffffffffffffffff
0x12a8: V1869 = 0x40
0x12aa: V1870 = M[0x40]
0x12ab: V1871 = 0x20
0x12ad: V1872 = ADD 0x20 V1870
0x12ae: M[V1872] = 0x0
0x12af: V1873 = 0x40
0x12b1: V1874 = M[0x40]
0x12b2: V1875 = 0xe0
0x12b4: V1876 = 0x2
0x12b6: V1877 = EXP 0x2 0xe0
0x12b7: V1878 = 0xffffffff
0x12bd: V1879 = AND 0xa9059cbb 0xffffffff
0x12be: V1880 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x12c0: M[V1874] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x12c1: V1881 = 0x1
0x12c3: V1882 = 0xa0
0x12c5: V1883 = 0x2
0x12c7: V1884 = EXP 0x2 0xa0
0x12c8: V1885 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12cb: V1886 = AND V1868 0xffffffffffffffffffffffffffffffffffffffff
0x12cc: V1887 = 0x4
0x12cf: V1888 = ADD V1874 0x4
0x12d0: M[V1888] = V1886
0x12d1: V1889 = 0x24
0x12d4: V1890 = ADD V1874 0x24
0x12d5: M[V1890] = V327
0x12d6: V1891 = 0x44
0x12d8: V1892 = ADD 0x44 V1874
0x12d9: V1893 = 0x20
0x12db: V1894 = 0x40
0x12dd: V1895 = M[0x40]
0x12e0: V1896 = SUB V1892 V1895
0x12e2: V1897 = 0x0
0x12e6: V1898 = EXTCODESIZE V1866
0x12e7: V1899 = ISZERO V1898
0x12e8: V1900 = ISZERO V1899
0x12e9: V1901 = 0x12f1
0x12ec: JUMPI 0x12f1 V1900
---
Entry stack: [V12, 0x10d, V327, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V1866, 0xa9059cbb, V1892, 0x20, V1895, V1896, V1895, 0x0, V1866]
Exit stack: [V12, 0x10d, V327, 0x0, V1866, 0xa9059cbb, V1892, 0x20, V1895, V1896, V1895, 0x0, V1866]

================================

Block 0x12ed
[0x12ed:0x12f0]
---
Predecessors: [0x1256]
Successors: []
---
0x12ed PUSH1 0x0
0x12ef DUP1
0x12f0 REVERT
---
0x12ed: V1902 = 0x0
0x12f0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V327, 0x0, V1866, 0xa9059cbb, V1892, 0x20, V1895, V1896, V1895, 0x0, V1866]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V327, 0x0, V1866, 0xa9059cbb, V1892, 0x20, V1895, V1896, V1895, 0x0, V1866]

================================

Block 0x12f1
[0x12f1:0x12fd]
---
Predecessors: [0x1256]
Successors: [0x12fe, 0x1302]
---
0x12f1 JUMPDEST
0x12f2 PUSH2 0x2c6
0x12f5 GAS
0x12f6 SUB
0x12f7 CALL
0x12f8 ISZERO
0x12f9 ISZERO
0x12fa PUSH2 0x1302
0x12fd JUMPI
---
0x12f1: JUMPDEST 
0x12f2: V1903 = 0x2c6
0x12f5: V1904 = GAS
0x12f6: V1905 = SUB V1904 0x2c6
0x12f7: V1906 = CALL V1905 V1866 0x0 V1895 V1896 V1895 0x20
0x12f8: V1907 = ISZERO V1906
0x12f9: V1908 = ISZERO V1907
0x12fa: V1909 = 0x1302
0x12fd: JUMPI 0x1302 V1908
---
Entry stack: [V12, 0x10d, V327, 0x0, V1866, 0xa9059cbb, V1892, 0x20, V1895, V1896, V1895, 0x0, V1866]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10d, V327, 0x0, V1866, 0xa9059cbb, V1892]

================================

Block 0x12fe
[0x12fe:0x1301]
---
Predecessors: [0x12f1]
Successors: []
---
0x12fe PUSH1 0x0
0x1300 DUP1
0x1301 REVERT
---
0x12fe: V1910 = 0x0
0x1301: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10d, V327, 0x0, V1866, 0xa9059cbb, V1892]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V327, 0x0, V1866, 0xa9059cbb, V1892]

================================

Block 0x1302
[0x1302:0x130d]
---
Predecessors: [0x12f1]
Successors: [0x130e]
---
0x1302 JUMPDEST
0x1303 POP
0x1304 POP
0x1305 POP
0x1306 PUSH1 0x40
0x1308 MLOAD
0x1309 DUP1
0x130a MLOAD
0x130b SWAP2
0x130c POP
0x130d POP
---
0x1302: JUMPDEST 
0x1306: V1911 = 0x40
0x1308: V1912 = M[0x40]
0x130a: V1913 = M[V1912]
---
Entry stack: [V12, 0x10d, V327, 0x0, V1866, 0xa9059cbb, V1892]
Stack pops: 4
Stack additions: [V1913]
Exit stack: [V12, 0x10d, V327, V1913]

================================

Block 0x130e
[0x130e:0x130e]
---
Predecessors: [0x1302]
Successors: [0x130f]
---
0x130e JUMPDEST
---
0x130e: JUMPDEST 
---
Entry stack: [V12, 0x10d, V327, V1913]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10d, V327, V1913]

================================

Block 0x130f
[0x130f:0x1313]
---
Predecessors: [0x130e]
Successors: [0x10d]
---
0x130f JUMPDEST
0x1310 SWAP2
0x1311 SWAP1
0x1312 POP
0x1313 JUMP
---
0x130f: JUMPDEST 
0x1313: JUMP 0x10d
---
Entry stack: [V12, 0x10d, V327, V1913]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V1913]

================================

Block 0x1314
[0x1314:0x1322]
---
Predecessors: [0x38a]
Successors: [0x172]
---
0x1314 JUMPDEST
0x1315 PUSH1 0x1
0x1317 SLOAD
0x1318 PUSH1 0x1
0x131a PUSH1 0xa0
0x131c PUSH1 0x2
0x131e EXP
0x131f SUB
0x1320 AND
0x1321 DUP2
0x1322 JUMP
---
0x1314: JUMPDEST 
0x1315: V1914 = 0x1
0x1317: V1915 = S[0x1]
0x1318: V1916 = 0x1
0x131a: V1917 = 0xa0
0x131c: V1918 = 0x2
0x131e: V1919 = EXP 0x2 0xa0
0x131f: V1920 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1320: V1921 = AND 0xffffffffffffffffffffffffffffffffffffffff V1915
0x1322: JUMP 0x172
---
Entry stack: [V12, 0x172]
Stack pops: 1
Stack additions: [S0, V1921]
Exit stack: [V12, 0x172, V1921]

================================

Block 0x1323
[0x1323:0x1399]
---
Predecessors: [0x3b9]
Successors: [0x139a, 0x139e]
---
0x1323 JUMPDEST
0x1324 PUSH1 0x1
0x1326 SLOAD
0x1327 PUSH1 0x0
0x1329 DUP1
0x132a SLOAD
0x132b PUSH1 0x6
0x132d SLOAD
0x132e SWAP2
0x132f SWAP3
0x1330 DUP4
0x1331 SWAP3
0x1332 PUSH1 0x1
0x1334 PUSH1 0xa0
0x1336 PUSH1 0x2
0x1338 EXP
0x1339 SUB
0x133a SWAP2
0x133b DUP3
0x133c AND
0x133d SWAP3
0x133e PUSH4 0x23b872dd
0x1343 SWAP3
0x1344 AND
0x1345 SWAP1
0x1346 DUP4
0x1347 SWAP1
0x1348 DUP6
0x1349 PUSH1 0x40
0x134b MLOAD
0x134c PUSH1 0x20
0x134e ADD
0x134f MSTORE
0x1350 PUSH1 0x40
0x1352 MLOAD
0x1353 PUSH1 0xe0
0x1355 PUSH1 0x2
0x1357 EXP
0x1358 PUSH4 0xffffffff
0x135d DUP7
0x135e AND
0x135f MUL
0x1360 DUP2
0x1361 MSTORE
0x1362 PUSH1 0x1
0x1364 PUSH1 0xa0
0x1366 PUSH1 0x2
0x1368 EXP
0x1369 SUB
0x136a SWAP4
0x136b DUP5
0x136c AND
0x136d PUSH1 0x4
0x136f DUP3
0x1370 ADD
0x1371 MSTORE
0x1372 SWAP2
0x1373 SWAP1
0x1374 SWAP3
0x1375 AND
0x1376 PUSH1 0x24
0x1378 DUP3
0x1379 ADD
0x137a MSTORE
0x137b PUSH1 0x44
0x137d DUP2
0x137e ADD
0x137f SWAP2
0x1380 SWAP1
0x1381 SWAP2
0x1382 MSTORE
0x1383 PUSH1 0x64
0x1385 ADD
0x1386 PUSH1 0x20
0x1388 PUSH1 0x40
0x138a MLOAD
0x138b DUP1
0x138c DUP4
0x138d SUB
0x138e DUP2
0x138f PUSH1 0x0
0x1391 DUP8
0x1392 DUP1
0x1393 EXTCODESIZE
0x1394 ISZERO
0x1395 ISZERO
0x1396 PUSH2 0x139e
0x1399 JUMPI
---
0x1323: JUMPDEST 
0x1324: V1922 = 0x1
0x1326: V1923 = S[0x1]
0x1327: V1924 = 0x0
0x132a: V1925 = S[0x0]
0x132b: V1926 = 0x6
0x132d: V1927 = S[0x6]
0x1332: V1928 = 0x1
0x1334: V1929 = 0xa0
0x1336: V1930 = 0x2
0x1338: V1931 = EXP 0x2 0xa0
0x1339: V1932 = SUB 0x10000000000000000000000000000000000000000 0x1
0x133c: V1933 = AND 0xffffffffffffffffffffffffffffffffffffffff V1923
0x133e: V1934 = 0x23b872dd
0x1344: V1935 = AND 0xffffffffffffffffffffffffffffffffffffffff V1925
0x1349: V1936 = 0x40
0x134b: V1937 = M[0x40]
0x134c: V1938 = 0x20
0x134e: V1939 = ADD 0x20 V1937
0x134f: M[V1939] = 0x0
0x1350: V1940 = 0x40
0x1352: V1941 = M[0x40]
0x1353: V1942 = 0xe0
0x1355: V1943 = 0x2
0x1357: V1944 = EXP 0x2 0xe0
0x1358: V1945 = 0xffffffff
0x135e: V1946 = AND 0x23b872dd 0xffffffff
0x135f: V1947 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x1361: M[V1941] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1362: V1948 = 0x1
0x1364: V1949 = 0xa0
0x1366: V1950 = 0x2
0x1368: V1951 = EXP 0x2 0xa0
0x1369: V1952 = SUB 0x10000000000000000000000000000000000000000 0x1
0x136c: V1953 = AND 0xffffffffffffffffffffffffffffffffffffffff V1935
0x136d: V1954 = 0x4
0x1370: V1955 = ADD V1941 0x4
0x1371: M[V1955] = V1953
0x1375: V1956 = AND 0xffffffffffffffffffffffffffffffffffffffff V1933
0x1376: V1957 = 0x24
0x1379: V1958 = ADD V1941 0x24
0x137a: M[V1958] = V1956
0x137b: V1959 = 0x44
0x137e: V1960 = ADD V1941 0x44
0x1382: M[V1960] = V1927
0x1383: V1961 = 0x64
0x1385: V1962 = ADD 0x64 V1941
0x1386: V1963 = 0x20
0x1388: V1964 = 0x40
0x138a: V1965 = M[0x40]
0x138d: V1966 = SUB V1962 V1965
0x138f: V1967 = 0x0
0x1393: V1968 = EXTCODESIZE V1933
0x1394: V1969 = ISZERO V1968
0x1395: V1970 = ISZERO V1969
0x1396: V1971 = 0x139e
0x1399: JUMPI 0x139e V1970
---
Entry stack: [V12, 0xf4, V363]
Stack pops: 0
Stack additions: [0x0, 0x0, V1933, 0x23b872dd, V1962, 0x20, V1965, V1966, V1965, 0x0, V1933]
Exit stack: [V12, 0xf4, V363, 0x0, 0x0, V1933, 0x23b872dd, V1962, 0x20, V1965, V1966, V1965, 0x0, V1933]

================================

Block 0x139a
[0x139a:0x139d]
---
Predecessors: [0x1323]
Successors: []
---
0x139a PUSH1 0x0
0x139c DUP1
0x139d REVERT
---
0x139a: V1972 = 0x0
0x139d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V363, 0x0, 0x0, V1933, 0x23b872dd, V1962, 0x20, V1965, V1966, V1965, 0x0, V1933]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V363, 0x0, 0x0, V1933, 0x23b872dd, V1962, 0x20, V1965, V1966, V1965, 0x0, V1933]

================================

Block 0x139e
[0x139e:0x13aa]
---
Predecessors: [0x1323]
Successors: [0x13ab, 0x13af]
---
0x139e JUMPDEST
0x139f PUSH2 0x2c6
0x13a2 GAS
0x13a3 SUB
0x13a4 CALL
0x13a5 ISZERO
0x13a6 ISZERO
0x13a7 PUSH2 0x13af
0x13aa JUMPI
---
0x139e: JUMPDEST 
0x139f: V1973 = 0x2c6
0x13a2: V1974 = GAS
0x13a3: V1975 = SUB V1974 0x2c6
0x13a4: V1976 = CALL V1975 V1933 0x0 V1965 V1966 V1965 0x20
0x13a5: V1977 = ISZERO V1976
0x13a6: V1978 = ISZERO V1977
0x13a7: V1979 = 0x13af
0x13aa: JUMPI 0x13af V1978
---
Entry stack: [V12, 0xf4, V363, 0x0, 0x0, V1933, 0x23b872dd, V1962, 0x20, V1965, V1966, V1965, 0x0, V1933]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf4, V363, 0x0, 0x0, V1933, 0x23b872dd, V1962]

================================

Block 0x13ab
[0x13ab:0x13ae]
---
Predecessors: [0x139e]
Successors: []
---
0x13ab PUSH1 0x0
0x13ad DUP1
0x13ae REVERT
---
0x13ab: V1980 = 0x0
0x13ae: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V363, 0x0, 0x0, V1933, 0x23b872dd, V1962]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V363, 0x0, 0x0, V1933, 0x23b872dd, V1962]

================================

Block 0x13af
[0x13af:0x13bf]
---
Predecessors: [0x139e]
Successors: [0x13c0, 0x13c4]
---
0x13af JUMPDEST
0x13b0 POP
0x13b1 POP
0x13b2 POP
0x13b3 PUSH1 0x40
0x13b5 MLOAD
0x13b6 DUP1
0x13b7 MLOAD
0x13b8 SWAP1
0x13b9 POP
0x13ba ISZERO
0x13bb ISZERO
0x13bc PUSH2 0x13c4
0x13bf JUMPI
---
0x13af: JUMPDEST 
0x13b3: V1981 = 0x40
0x13b5: V1982 = M[0x40]
0x13b7: V1983 = M[V1982]
0x13ba: V1984 = ISZERO V1983
0x13bb: V1985 = ISZERO V1984
0x13bc: V1986 = 0x13c4
0x13bf: JUMPI 0x13c4 V1985
---
Entry stack: [V12, 0xf4, V363, 0x0, 0x0, V1933, 0x23b872dd, V1962]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xf4, V363, 0x0, 0x0]

================================

Block 0x13c0
[0x13c0:0x13c3]
---
Predecessors: [0x13af]
Successors: []
---
0x13c0 PUSH1 0x0
0x13c2 DUP1
0x13c3 REVERT
---
0x13c0: V1987 = 0x0
0x13c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V363, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V363, 0x0, 0x0]

================================

Block 0x13c4
[0x13c4:0x13cf]
---
Predecessors: [0x13af]
Successors: [0x13d0, 0x13e3]
---
0x13c4 JUMPDEST
0x13c5 PUSH1 0x7
0x13c7 SLOAD
0x13c8 PUSH1 0xff
0x13ca AND
0x13cb DUP1
0x13cc PUSH2 0x13e3
0x13cf JUMPI
---
0x13c4: JUMPDEST 
0x13c5: V1988 = 0x7
0x13c7: V1989 = S[0x7]
0x13c8: V1990 = 0xff
0x13ca: V1991 = AND 0xff V1989
0x13cc: V1992 = 0x13e3
0x13cf: JUMPI 0x13e3 V1991
---
Entry stack: [V12, 0xf4, V363, 0x0, 0x0]
Stack pops: 0
Stack additions: [V1991]
Exit stack: [V12, 0xf4, V363, 0x0, 0x0, V1991]

================================

Block 0x13d0
[0x13d0:0x13e2]
---
Predecessors: [0x13c4]
Successors: [0x13e3]
---
0x13d0 POP
0x13d1 PUSH1 0x0
0x13d3 SLOAD
0x13d4 CALLER
0x13d5 PUSH1 0x1
0x13d7 PUSH1 0xa0
0x13d9 PUSH1 0x2
0x13db EXP
0x13dc SUB
0x13dd SWAP1
0x13de DUP2
0x13df AND
0x13e0 SWAP2
0x13e1 AND
0x13e2 EQ
---
0x13d1: V1993 = 0x0
0x13d3: V1994 = S[0x0]
0x13d4: V1995 = CALLER
0x13d5: V1996 = 0x1
0x13d7: V1997 = 0xa0
0x13d9: V1998 = 0x2
0x13db: V1999 = EXP 0x2 0xa0
0x13dc: V2000 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13df: V2001 = AND 0xffffffffffffffffffffffffffffffffffffffff V1995
0x13e1: V2002 = AND V1994 0xffffffffffffffffffffffffffffffffffffffff
0x13e2: V2003 = EQ V2002 V2001
---
Entry stack: [V12, 0xf4, V363, 0x0, 0x0, V1991]
Stack pops: 1
Stack additions: [V2003]
Exit stack: [V12, 0xf4, V363, 0x0, 0x0, V2003]

================================

Block 0x13e3
[0x13e3:0x13e8]
---
Predecessors: [0x13c4, 0x13d0]
Successors: [0x6c7, 0x13e9]
---
0x13e3 JUMPDEST
0x13e4 ISZERO
0x13e5 PUSH2 0x6c7
0x13e8 JUMPI
---
0x13e3: JUMPDEST 
0x13e4: V2004 = ISZERO S0
0x13e5: V2005 = 0x6c7
0x13e8: JUMPI 0x6c7 V2004
---
Entry stack: [V12, 0xf4, V363, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xf4, V363, 0x0, 0x0]

================================

Block 0x13e9
[0x13e9:0x13fd]
---
Predecessors: [0x13e3]
Successors: [0x13fe, 0x13ff]
---
0x13e9 PUSH1 0x3
0x13eb SLOAD
0x13ec ADDRESS
0x13ed PUSH1 0x1
0x13ef PUSH1 0xa0
0x13f1 PUSH1 0x2
0x13f3 EXP
0x13f4 SUB
0x13f5 AND
0x13f6 BALANCE
0x13f7 DUP2
0x13f8 ISZERO
0x13f9 ISZERO
0x13fa PUSH2 0x13ff
0x13fd JUMPI
---
0x13e9: V2006 = 0x3
0x13eb: V2007 = S[0x3]
0x13ec: V2008 = ADDRESS
0x13ed: V2009 = 0x1
0x13ef: V2010 = 0xa0
0x13f1: V2011 = 0x2
0x13f3: V2012 = EXP 0x2 0xa0
0x13f4: V2013 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f5: V2014 = AND 0xffffffffffffffffffffffffffffffffffffffff V2008
0x13f6: V2015 = BALANCE V2014
0x13f8: V2016 = ISZERO V2007
0x13f9: V2017 = ISZERO V2016
0x13fa: V2018 = 0x13ff
0x13fd: JUMPI 0x13ff V2017
---
Entry stack: [V12, 0xf4, V363, 0x0, 0x0]
Stack pops: 0
Stack additions: [V2007, V2015]
Exit stack: [V12, 0xf4, V363, 0x0, 0x0, V2007, V2015]

================================

Block 0x13fe
[0x13fe:0x13fe]
---
Predecessors: [0x13e9]
Successors: []
---
0x13fe INVALID
---
0x13fe: INVALID 
---
Entry stack: [V12, 0xf4, V363, 0x0, 0x0, V2007, V2015]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V363, 0x0, 0x0, V2007, V2015]

================================

Block 0x13ff
[0x13ff:0x140d]
---
Predecessors: [0x13e9]
Successors: [0x140e, 0x140f]
---
0x13ff JUMPDEST
0x1400 DIV
0x1401 SWAP2
0x1402 POP
0x1403 PUSH1 0x5
0x1405 SLOAD
0x1406 DUP4
0x1407 DUP2
0x1408 ISZERO
0x1409 ISZERO
0x140a PUSH2 0x140f
0x140d JUMPI
---
0x13ff: JUMPDEST 
0x1400: V2019 = DIV V2015 V2007
0x1403: V2020 = 0x5
0x1405: V2021 = S[0x5]
0x1408: V2022 = ISZERO V2021
0x1409: V2023 = ISZERO V2022
0x140a: V2024 = 0x140f
0x140d: JUMPI 0x140f V2023
---
Entry stack: [V12, 0xf4, V363, 0x0, 0x0, V2007, V2015]
Stack pops: 5
Stack additions: [S4, V2019, S2, V2021, S4]
Exit stack: [V12, 0xf4, V363, V2019, 0x0, V2021, V363]

================================

Block 0x140e
[0x140e:0x140e]
---
Predecessors: [0x13ff]
Successors: []
---
0x140e INVALID
---
0x140e: INVALID 
---
Entry stack: [V12, 0xf4, V363, V2019, 0x0, V2021, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V363, V2019, 0x0, V2021, V363]

================================

Block 0x140f
[0x140f:0x141a]
---
Predecessors: [0x13ff]
Successors: [0x141b, 0x141d]
---
0x140f JUMPDEST
0x1410 DIV
0x1411 SWAP1
0x1412 POP
0x1413 DUP2
0x1414 DUP2
0x1415 GT
0x1416 ISZERO
0x1417 PUSH2 0x141d
0x141a JUMPI
---
0x140f: JUMPDEST 
0x1410: V2025 = DIV V363 V2021
0x1415: V2026 = GT V2025 V2019
0x1416: V2027 = ISZERO V2026
0x1417: V2028 = 0x141d
0x141a: JUMPI 0x141d V2027
---
Entry stack: [V12, 0xf4, V363, V2019, 0x0, V2021, V363]
Stack pops: 4
Stack additions: [S3, V2025]
Exit stack: [V12, 0xf4, V363, V2019, V2025]

================================

Block 0x141b
[0x141b:0x141c]
---
Predecessors: [0x140f]
Successors: [0x141d]
---
0x141b POP
0x141c DUP1
---
0x141b: NOP 
---
Entry stack: [V12, 0xf4, V363, V2019, V2025]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V12, 0xf4, V363, V2019, V2019]

================================

Block 0x141d
[0x141d:0x1426]
---
Predecessors: [0x140f, 0x141b]
Successors: [0x1427, 0x14f9]
---
0x141d JUMPDEST
0x141e PUSH1 0x0
0x1420 DUP2
0x1421 GT
0x1422 ISZERO
0x1423 PUSH2 0x14f9
0x1426 JUMPI
---
0x141d: JUMPDEST 
0x141e: V2029 = 0x0
0x1421: V2030 = GT S0 0x0
0x1422: V2031 = ISZERO V2030
0x1423: V2032 = 0x14f9
0x1426: JUMPI 0x14f9 V2031
---
Entry stack: [V12, 0xf4, V363, V2019, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xf4, V363, V2019, S0]

================================

Block 0x1427
[0x1427:0x1497]
---
Predecessors: [0x141d]
Successors: [0x1498, 0x149c]
---
0x1427 PUSH1 0x2
0x1429 SLOAD
0x142a PUSH1 0x5
0x142c SLOAD
0x142d PUSH1 0x1
0x142f PUSH1 0xa0
0x1431 PUSH1 0x2
0x1433 EXP
0x1434 SUB
0x1435 SWAP1
0x1436 SWAP2
0x1437 AND
0x1438 SWAP1
0x1439 PUSH4 0x23b872dd
0x143e SWAP1
0x143f CALLER
0x1440 SWAP1
0x1441 ADDRESS
0x1442 SWAP1
0x1443 DUP6
0x1444 MUL
0x1445 PUSH1 0x0
0x1447 PUSH1 0x40
0x1449 MLOAD
0x144a PUSH1 0x20
0x144c ADD
0x144d MSTORE
0x144e PUSH1 0x40
0x1450 MLOAD
0x1451 PUSH1 0xe0
0x1453 PUSH1 0x2
0x1455 EXP
0x1456 PUSH4 0xffffffff
0x145b DUP7
0x145c AND
0x145d MUL
0x145e DUP2
0x145f MSTORE
0x1460 PUSH1 0x1
0x1462 PUSH1 0xa0
0x1464 PUSH1 0x2
0x1466 EXP
0x1467 SUB
0x1468 SWAP4
0x1469 DUP5
0x146a AND
0x146b PUSH1 0x4
0x146d DUP3
0x146e ADD
0x146f MSTORE
0x1470 SWAP2
0x1471 SWAP1
0x1472 SWAP3
0x1473 AND
0x1474 PUSH1 0x24
0x1476 DUP3
0x1477 ADD
0x1478 MSTORE
0x1479 PUSH1 0x44
0x147b DUP2
0x147c ADD
0x147d SWAP2
0x147e SWAP1
0x147f SWAP2
0x1480 MSTORE
0x1481 PUSH1 0x64
0x1483 ADD
0x1484 PUSH1 0x20
0x1486 PUSH1 0x40
0x1488 MLOAD
0x1489 DUP1
0x148a DUP4
0x148b SUB
0x148c DUP2
0x148d PUSH1 0x0
0x148f DUP8
0x1490 DUP1
0x1491 EXTCODESIZE
0x1492 ISZERO
0x1493 ISZERO
0x1494 PUSH2 0x149c
0x1497 JUMPI
---
0x1427: V2033 = 0x2
0x1429: V2034 = S[0x2]
0x142a: V2035 = 0x5
0x142c: V2036 = S[0x5]
0x142d: V2037 = 0x1
0x142f: V2038 = 0xa0
0x1431: V2039 = 0x2
0x1433: V2040 = EXP 0x2 0xa0
0x1434: V2041 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1437: V2042 = AND V2034 0xffffffffffffffffffffffffffffffffffffffff
0x1439: V2043 = 0x23b872dd
0x143f: V2044 = CALLER
0x1441: V2045 = ADDRESS
0x1444: V2046 = MUL S0 V2036
0x1445: V2047 = 0x0
0x1447: V2048 = 0x40
0x1449: V2049 = M[0x40]
0x144a: V2050 = 0x20
0x144c: V2051 = ADD 0x20 V2049
0x144d: M[V2051] = 0x0
0x144e: V2052 = 0x40
0x1450: V2053 = M[0x40]
0x1451: V2054 = 0xe0
0x1453: V2055 = 0x2
0x1455: V2056 = EXP 0x2 0xe0
0x1456: V2057 = 0xffffffff
0x145c: V2058 = AND 0x23b872dd 0xffffffff
0x145d: V2059 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x145f: M[V2053] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1460: V2060 = 0x1
0x1462: V2061 = 0xa0
0x1464: V2062 = 0x2
0x1466: V2063 = EXP 0x2 0xa0
0x1467: V2064 = SUB 0x10000000000000000000000000000000000000000 0x1
0x146a: V2065 = AND 0xffffffffffffffffffffffffffffffffffffffff V2044
0x146b: V2066 = 0x4
0x146e: V2067 = ADD V2053 0x4
0x146f: M[V2067] = V2065
0x1473: V2068 = AND 0xffffffffffffffffffffffffffffffffffffffff V2045
0x1474: V2069 = 0x24
0x1477: V2070 = ADD V2053 0x24
0x1478: M[V2070] = V2068
0x1479: V2071 = 0x44
0x147c: V2072 = ADD V2053 0x44
0x1480: M[V2072] = V2046
0x1481: V2073 = 0x64
0x1483: V2074 = ADD 0x64 V2053
0x1484: V2075 = 0x20
0x1486: V2076 = 0x40
0x1488: V2077 = M[0x40]
0x148b: V2078 = SUB V2074 V2077
0x148d: V2079 = 0x0
0x1491: V2080 = EXTCODESIZE V2042
0x1492: V2081 = ISZERO V2080
0x1493: V2082 = ISZERO V2081
0x1494: V2083 = 0x149c
0x1497: JUMPI 0x149c V2082
---
Entry stack: [V12, 0xf4, V363, V2019, S0]
Stack pops: 1
Stack additions: [S0, V2042, 0x23b872dd, V2074, 0x20, V2077, V2078, V2077, 0x0, V2042]
Exit stack: [V12, 0xf4, V363, V2019, S0, V2042, 0x23b872dd, V2074, 0x20, V2077, V2078, V2077, 0x0, V2042]

================================

Block 0x1498
[0x1498:0x149b]
---
Predecessors: [0x1427]
Successors: []
---
0x1498 PUSH1 0x0
0x149a DUP1
0x149b REVERT
---
0x1498: V2084 = 0x0
0x149b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V363, V2019, S9, V2042, 0x23b872dd, V2074, 0x20, V2077, V2078, V2077, 0x0, V2042]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V363, V2019, S9, V2042, 0x23b872dd, V2074, 0x20, V2077, V2078, V2077, 0x0, V2042]

================================

Block 0x149c
[0x149c:0x14a8]
---
Predecessors: [0x1427]
Successors: [0x14a9, 0x14ad]
---
0x149c JUMPDEST
0x149d PUSH2 0x2c6
0x14a0 GAS
0x14a1 SUB
0x14a2 CALL
0x14a3 ISZERO
0x14a4 ISZERO
0x14a5 PUSH2 0x14ad
0x14a8 JUMPI
---
0x149c: JUMPDEST 
0x149d: V2085 = 0x2c6
0x14a0: V2086 = GAS
0x14a1: V2087 = SUB V2086 0x2c6
0x14a2: V2088 = CALL V2087 V2042 0x0 V2077 V2078 V2077 0x20
0x14a3: V2089 = ISZERO V2088
0x14a4: V2090 = ISZERO V2089
0x14a5: V2091 = 0x14ad
0x14a8: JUMPI 0x14ad V2090
---
Entry stack: [V12, 0xf4, V363, V2019, S9, V2042, 0x23b872dd, V2074, 0x20, V2077, V2078, V2077, 0x0, V2042]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf4, V363, V2019, S9, V2042, 0x23b872dd, V2074]

================================

Block 0x14a9
[0x14a9:0x14ac]
---
Predecessors: [0x149c]
Successors: []
---
0x14a9 PUSH1 0x0
0x14ab DUP1
0x14ac REVERT
---
0x14a9: V2092 = 0x0
0x14ac: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V363, V2019, S3, V2042, 0x23b872dd, V2074]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V363, V2019, S3, V2042, 0x23b872dd, V2074]

================================

Block 0x14ad
[0x14ad:0x14bd]
---
Predecessors: [0x149c]
Successors: [0x14be, 0x14c2]
---
0x14ad JUMPDEST
0x14ae POP
0x14af POP
0x14b0 POP
0x14b1 PUSH1 0x40
0x14b3 MLOAD
0x14b4 DUP1
0x14b5 MLOAD
0x14b6 SWAP1
0x14b7 POP
0x14b8 ISZERO
0x14b9 ISZERO
0x14ba PUSH2 0x14c2
0x14bd JUMPI
---
0x14ad: JUMPDEST 
0x14b1: V2093 = 0x40
0x14b3: V2094 = M[0x40]
0x14b5: V2095 = M[V2094]
0x14b8: V2096 = ISZERO V2095
0x14b9: V2097 = ISZERO V2096
0x14ba: V2098 = 0x14c2
0x14bd: JUMPI 0x14c2 V2097
---
Entry stack: [V12, 0xf4, V363, V2019, S3, V2042, 0x23b872dd, V2074]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xf4, V363, V2019, S3]

================================

Block 0x14be
[0x14be:0x14c1]
---
Predecessors: [0x14ad]
Successors: []
---
0x14be PUSH1 0x0
0x14c0 DUP1
0x14c1 REVERT
---
0x14be: V2099 = 0x0
0x14c1: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V363, V2019, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V363, V2019, S0]

================================

Block 0x14c2
[0x14c2:0x14f4]
---
Predecessors: [0x14ad]
Successors: [0x14f5, 0x14f9]
---
0x14c2 JUMPDEST
0x14c3 CALLER
0x14c4 PUSH1 0x1
0x14c6 PUSH1 0xa0
0x14c8 PUSH1 0x2
0x14ca EXP
0x14cb SUB
0x14cc AND
0x14cd PUSH2 0x8fc
0x14d0 PUSH1 0x3
0x14d2 SLOAD
0x14d3 DUP4
0x14d4 MUL
0x14d5 SWAP1
0x14d6 DUP2
0x14d7 ISZERO
0x14d8 MUL
0x14d9 SWAP1
0x14da PUSH1 0x40
0x14dc MLOAD
0x14dd PUSH1 0x0
0x14df PUSH1 0x40
0x14e1 MLOAD
0x14e2 DUP1
0x14e3 DUP4
0x14e4 SUB
0x14e5 DUP2
0x14e6 DUP6
0x14e7 DUP9
0x14e8 DUP9
0x14e9 CALL
0x14ea SWAP4
0x14eb POP
0x14ec POP
0x14ed POP
0x14ee POP
0x14ef ISZERO
0x14f0 ISZERO
0x14f1 PUSH2 0x14f9
0x14f4 JUMPI
---
0x14c2: JUMPDEST 
0x14c3: V2100 = CALLER
0x14c4: V2101 = 0x1
0x14c6: V2102 = 0xa0
0x14c8: V2103 = 0x2
0x14ca: V2104 = EXP 0x2 0xa0
0x14cb: V2105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14cc: V2106 = AND 0xffffffffffffffffffffffffffffffffffffffff V2100
0x14cd: V2107 = 0x8fc
0x14d0: V2108 = 0x3
0x14d2: V2109 = S[0x3]
0x14d4: V2110 = MUL S0 V2109
0x14d7: V2111 = ISZERO V2110
0x14d8: V2112 = MUL V2111 0x8fc
0x14da: V2113 = 0x40
0x14dc: V2114 = M[0x40]
0x14dd: V2115 = 0x0
0x14df: V2116 = 0x40
0x14e1: V2117 = M[0x40]
0x14e4: V2118 = SUB V2114 V2117
0x14e9: V2119 = CALL V2112 V2106 V2110 V2117 V2118 V2117 0x0
0x14ef: V2120 = ISZERO V2119
0x14f0: V2121 = ISZERO V2120
0x14f1: V2122 = 0x14f9
0x14f4: JUMPI 0x14f9 V2121
---
Entry stack: [V12, 0xf4, V363, V2019, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xf4, V363, V2019, S0]

================================

Block 0x14f5
[0x14f5:0x14f8]
---
Predecessors: [0x14c2]
Successors: []
---
0x14f5 PUSH1 0x0
0x14f7 DUP1
0x14f8 REVERT
---
0x14f5: V2123 = 0x0
0x14f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V363, V2019, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V363, V2019, S0]

================================

Block 0x14f9
[0x14f9:0x14f9]
---
Predecessors: [0x141d, 0x14c2]
Successors: [0x14fa]
---
0x14f9 JUMPDEST
---
0x14f9: JUMPDEST 
---
Entry stack: [V12, 0xf4, V363, V2019, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V363, V2019, S0]

================================

Block 0x14fa
[0x14fa:0x1553]
---
Predecessors: [0x14f9]
Successors: [0x1554]
---
0x14fa JUMPDEST
0x14fb CALLER
0x14fc PUSH1 0x1
0x14fe PUSH1 0xa0
0x1500 PUSH1 0x2
0x1502 EXP
0x1503 SUB
0x1504 AND
0x1505 PUSH32 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0x1526 DUP5
0x1527 PUSH1 0x5
0x1529 SLOAD
0x152a DUP5
0x152b MUL
0x152c PUSH1 0x3
0x152e SLOAD
0x152f DUP6
0x1530 MUL
0x1531 PUSH1 0x40
0x1533 MLOAD
0x1534 DUP1
0x1535 DUP5
0x1536 DUP2
0x1537 MSTORE
0x1538 PUSH1 0x20
0x153a ADD
0x153b DUP4
0x153c DUP2
0x153d MSTORE
0x153e PUSH1 0x20
0x1540 ADD
0x1541 DUP3
0x1542 DUP2
0x1543 MSTORE
0x1544 PUSH1 0x20
0x1546 ADD
0x1547 SWAP4
0x1548 POP
0x1549 POP
0x154a POP
0x154b POP
0x154c PUSH1 0x40
0x154e MLOAD
0x154f DUP1
0x1550 SWAP2
0x1551 SUB
0x1552 SWAP1
0x1553 LOG2
---
0x14fa: JUMPDEST 
0x14fb: V2124 = CALLER
0x14fc: V2125 = 0x1
0x14fe: V2126 = 0xa0
0x1500: V2127 = 0x2
0x1502: V2128 = EXP 0x2 0xa0
0x1503: V2129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1504: V2130 = AND 0xffffffffffffffffffffffffffffffffffffffff V2124
0x1505: V2131 = 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0x1527: V2132 = 0x5
0x1529: V2133 = S[0x5]
0x152b: V2134 = MUL S0 V2133
0x152c: V2135 = 0x3
0x152e: V2136 = S[0x3]
0x1530: V2137 = MUL S0 V2136
0x1531: V2138 = 0x40
0x1533: V2139 = M[0x40]
0x1537: M[V2139] = V363
0x1538: V2140 = 0x20
0x153a: V2141 = ADD 0x20 V2139
0x153d: M[V2141] = V2134
0x153e: V2142 = 0x20
0x1540: V2143 = ADD 0x20 V2141
0x1543: M[V2143] = V2137
0x1544: V2144 = 0x20
0x1546: V2145 = ADD 0x20 V2143
0x154c: V2146 = 0x40
0x154e: V2147 = M[0x40]
0x1551: V2148 = SUB V2145 V2147
0x1553: LOG V2147 V2148 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683 V2130
---
Entry stack: [V12, 0xf4, V363, V2019, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xf4, V363, V2019, S0]

================================

Block 0x1554
[0x1554:0x1554]
---
Predecessors: [0x14fa]
Successors: [0x1555]
---
0x1554 JUMPDEST
---
0x1554: JUMPDEST 
---
Entry stack: [V12, 0xf4, V363, V2019, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V363, V2019, S0]

================================

Block 0x1555
[0x1555:0x1559]
---
Predecessors: [0x1554]
Successors: [0xf4]
---
0x1555 JUMPDEST
0x1556 POP
0x1557 POP
0x1558 POP
0x1559 JUMP
---
0x1555: JUMPDEST 
0x1559: JUMP 0xf4
---
Entry stack: [V12, 0xf4, V363, V2019, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x155a
[0x155a:0x1570]
---
Predecessors: [0x3d1]
Successors: [0x1571, 0x1575]
---
0x155a JUMPDEST
0x155b PUSH1 0x0
0x155d SLOAD
0x155e CALLER
0x155f PUSH1 0x1
0x1561 PUSH1 0xa0
0x1563 PUSH1 0x2
0x1565 EXP
0x1566 SUB
0x1567 SWAP1
0x1568 DUP2
0x1569 AND
0x156a SWAP2
0x156b AND
0x156c EQ
0x156d PUSH2 0x1575
0x1570 JUMPI
---
0x155a: JUMPDEST 
0x155b: V2149 = 0x0
0x155d: V2150 = S[0x0]
0x155e: V2151 = CALLER
0x155f: V2152 = 0x1
0x1561: V2153 = 0xa0
0x1563: V2154 = 0x2
0x1565: V2155 = EXP 0x2 0xa0
0x1566: V2156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1569: V2157 = AND 0xffffffffffffffffffffffffffffffffffffffff V2151
0x156b: V2158 = AND V2150 0xffffffffffffffffffffffffffffffffffffffff
0x156c: V2159 = EQ V2158 V2157
0x156d: V2160 = 0x1575
0x1570: JUMPI 0x1575 V2159
---
Entry stack: [V12, 0xf4, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V377]

================================

Block 0x1571
[0x1571:0x1574]
---
Predecessors: [0x155a]
Successors: []
---
0x1571 PUSH1 0x0
0x1573 DUP1
0x1574 REVERT
---
0x1571: V2161 = 0x0
0x1574: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf4, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V377]

================================

Block 0x1575
[0x1575:0x15d9]
---
Predecessors: [0x155a]
Successors: [0x15da]
---
0x1575 JUMPDEST
0x1576 PUSH1 0x0
0x1578 SLOAD
0x1579 PUSH1 0x1
0x157b PUSH1 0xa0
0x157d PUSH1 0x2
0x157f EXP
0x1580 SUB
0x1581 DUP1
0x1582 DUP4
0x1583 AND
0x1584 SWAP2
0x1585 AND
0x1586 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x15a7 PUSH1 0x40
0x15a9 MLOAD
0x15aa PUSH1 0x40
0x15ac MLOAD
0x15ad DUP1
0x15ae SWAP2
0x15af SUB
0x15b0 SWAP1
0x15b1 LOG3
0x15b2 PUSH1 0x0
0x15b4 DUP1
0x15b5 SLOAD
0x15b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15cb NOT
0x15cc AND
0x15cd PUSH1 0x1
0x15cf PUSH1 0xa0
0x15d1 PUSH1 0x2
0x15d3 EXP
0x15d4 SUB
0x15d5 DUP4
0x15d6 AND
0x15d7 OR
0x15d8 SWAP1
0x15d9 SSTORE
---
0x1575: JUMPDEST 
0x1576: V2162 = 0x0
0x1578: V2163 = S[0x0]
0x1579: V2164 = 0x1
0x157b: V2165 = 0xa0
0x157d: V2166 = 0x2
0x157f: V2167 = EXP 0x2 0xa0
0x1580: V2168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1583: V2169 = AND V377 0xffffffffffffffffffffffffffffffffffffffff
0x1585: V2170 = AND V2163 0xffffffffffffffffffffffffffffffffffffffff
0x1586: V2171 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x15a7: V2172 = 0x40
0x15a9: V2173 = M[0x40]
0x15aa: V2174 = 0x40
0x15ac: V2175 = M[0x40]
0x15af: V2176 = SUB V2173 V2175
0x15b1: LOG V2175 V2176 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V2170 V2169
0x15b2: V2177 = 0x0
0x15b5: V2178 = S[0x0]
0x15b6: V2179 = 0xffffffffffffffffffffffffffffffffffffffff
0x15cb: V2180 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x15cc: V2181 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V2178
0x15cd: V2182 = 0x1
0x15cf: V2183 = 0xa0
0x15d1: V2184 = 0x2
0x15d3: V2185 = EXP 0x2 0xa0
0x15d4: V2186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15d6: V2187 = AND V377 0xffffffffffffffffffffffffffffffffffffffff
0x15d7: V2188 = OR V2187 V2181
0x15d9: S[0x0] = V2188
---
Entry stack: [V12, 0xf4, V377]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xf4, V377]

================================

Block 0x15da
[0x15da:0x15da]
---
Predecessors: [0x1575]
Successors: [0x15db]
---
0x15da JUMPDEST
---
0x15da: JUMPDEST 
---
Entry stack: [V12, 0xf4, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf4, V377]

================================

Block 0x15db
[0x15db:0x15dd]
---
Predecessors: [0x15da]
Successors: [0xf4]
---
0x15db JUMPDEST
0x15dc POP
0x15dd JUMP
---
0x15db: JUMPDEST 
0x15dd: JUMP 0xf4
---
Entry stack: [V12, 0xf4, V377]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x15de
[0x15de:0x1619]
---
Predecessors: []
Successors: []
---
0x15de STOP
0x15df LOG1
0x15e0 PUSH6 0x627a7a723058
0x15e7 SHA3
0x15e8 EXP
0x15e9 MISSING 0xcd
0x15ea EXTCODESIZE
0x15eb MISSING 0xd4
0x15ec GASPRICE
0x15ed DUP11
0x15ee DUP13
0x15ef CALLDATALOAD
0x15f0 SIGNEXTEND
0x15f1 SHA3
0x15f2 MISSING 0xc
0x15f3 MISSING 0x2f
0x15f4 DUP12
0x15f5 SWAP3
0x15f6 RETURNDATACOPY
0x15f7 SAR
0x15f8 MISSING 0x4d
0x15f9 PUSH32 0xccc0911bf8f77f741a0f53e3f2890029
---
0x15de: STOP 
0x15df: LOG S0 S1 S2
0x15e0: V2189 = 0x627a7a723058
0x15e7: V2190 = SHA3 0x627a7a723058 S3
0x15e8: V2191 = EXP V2190 S4
0x15e9: MISSING 0xcd
0x15ea: V2192 = EXTCODESIZE S0
0x15eb: MISSING 0xd4
0x15ec: V2193 = GASPRICE
0x15ef: V2194 = CALLDATALOAD S10
0x15f0: V2195 = SIGNEXTEND V2194 S9
0x15f1: V2196 = SHA3 V2195 V2193
0x15f2: MISSING 0xc
0x15f3: MISSING 0x2f
0x15f6: RETURNDATACOPY S2 S0 S1
0x15f7: V2197 = SAR S11 S3
0x15f8: MISSING 0x4d
0x15f9: V2198 = 0xccc0911bf8f77f741a0f53e3f2890029
---
Entry stack: []
Stack pops: 0
Stack additions: [V2191, V2192, V2196, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V2197, S4, S5, S6, S7, S8, S9, S10, S11, 0xccc0911bf8f77f741a0f53e3f2890029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2170ebf7
Entry block: 0xf7
Exit block: 0x10d
Body: 0xf7, 0xfe, 0x102, 0x10d, 0x6ce, 0x6e6, 0x6ea, 0x75e, 0x762, 0x76f, 0x773, 0x784, 0x788, 0x79b, 0x7f7, 0x7f8, 0x7f9

Function 1:
Public function signature: 0x358a08cb
Entry block: 0x121
Exit block: 0xf5
Body: 0xf4, 0xf5, 0x121, 0x128, 0x12c, 0x7fe, 0x815, 0x819, 0x88d, 0x891, 0x89e, 0x8a2, 0x8b3, 0x8b7, 0x973, 0x974

Function 2:
Public function signature: 0x38d52e0f
Entry block: 0x15f
Exit block: 0x172
Body: 0x15f, 0x166, 0x16a, 0x172, 0x97e

Function 3:
Public function signature: 0x4b750334
Entry block: 0x18e
Exit block: 0x1a1
Body: 0x18e, 0x195, 0x199, 0x1a1, 0x98d

Function 4:
Public function signature: 0x4ca50f59
Entry block: 0x1b3
Exit block: 0x10d
Body: 0x10d, 0x1b3, 0x1ba, 0x1be, 0x993

Function 5:
Public function signature: 0x52954e5a
Entry block: 0x1da
Exit block: 0x10d
Body: 0x10d, 0x1da, 0x1e1, 0x1e5, 0x9a1, 0x9b9, 0x9bd, 0xa31, 0xa35, 0xa42, 0xa46, 0xa57, 0xa5b, 0xa9d, 0xaa1, 0xaae, 0xab2, 0xad4, 0xb16, 0xb1a, 0xb27, 0xb2b, 0xb47, 0xb4e, 0xb52, 0xbf1, 0xbf5, 0xc02, 0xc06, 0xc12, 0xc13

Function 6:
Public function signature: 0x8620410b
Entry block: 0x210
Exit block: 0x1a1
Body: 0x1a1, 0x210, 0x217, 0x21b, 0xc19

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x235
Exit block: 0x172
Body: 0x172, 0x235, 0x23c, 0x240, 0xc1f

Function 8:
Public function signature: 0x919f8cfc
Entry block: 0x264
Exit block: 0xf5
Body: 0xf4, 0xf5, 0x264, 0xc2e, 0xc47, 0xc93, 0xc97, 0xca4, 0xca8, 0xcbd, 0xcc4, 0xcc8, 0xd3c, 0xd40, 0xd4d, 0xd51, 0xd62, 0xd66, 0xd9a, 0xd9b

Function 9:
Public function signature: 0x976a8435
Entry block: 0x26e
Exit block: 0x1a1
Body: 0x1a1, 0x26e, 0x275, 0x279, 0xd9d

Function 10:
Public function signature: 0xb1099347
Entry block: 0x293
Exit block: 0x10d
Body: 0x10d, 0x293, 0x29a, 0x29e, 0xda3

Function 11:
Public function signature: 0xbe86d5a7
Entry block: 0x2ba
Exit block: 0x10d
Body: 0x10d, 0x2ba, 0x2c1, 0x2c5, 0xc12, 0xc13, 0xdac, 0xdc4, 0xdc8, 0xe3c, 0xe40, 0xe4d, 0xe51, 0xe62, 0xe66, 0xea8, 0xeac, 0xeb9, 0xebd, 0xedf, 0xf21, 0xf25, 0xf32, 0xf36, 0xf52, 0xf59, 0xf5d, 0xf70, 0xfec, 0xff0, 0xffd, 0x1001, 0x1006, 0x1007, 0x1008

Function 12:
Public function signature: 0xc34764cf
Entry block: 0x2f0
Exit block: 0x10d
Body: 0x10d, 0x2f0, 0x2f7, 0x2fb, 0xbf5, 0xc02, 0xc06, 0xc12, 0xc13, 0x100e, 0x1026, 0x102a, 0x109e, 0x10a2, 0x10af, 0x10b3, 0x10c4, 0x10c8, 0x116e

Function 13:
Public function signature: 0xc60ccb0e
Entry block: 0xeb
Exit block: 0xf5
Body: 0xeb, 0xec, 0xf4, 0xf5

Function 14:
Public function signature: 0xc668f71b
Entry block: 0x330
Exit block: 0x1a1
Body: 0x1a1, 0x330, 0x337, 0x33b, 0x1196

Function 15:
Public function signature: 0xcd53a3b7
Entry block: 0x355
Exit block: 0x10d
Body: 0x10d, 0x355, 0x35c, 0x360, 0x119c, 0x11b4, 0x11b8, 0x122c, 0x1230, 0x123d, 0x1241, 0x1252, 0x1256, 0x12ed, 0x12f1, 0x12fe, 0x1302, 0x130e, 0x130f

Function 16:
Public function signature: 0xd2f7265a
Entry block: 0x37f
Exit block: 0x172
Body: 0x172, 0x37f, 0x386, 0x38a, 0x1314

Function 17:
Public function signature: 0xeff883bd
Entry block: 0x3ae
Exit block: 0x14f5
Body: 0xf4, 0xf5, 0x3ae, 0x3b5, 0x3b9, 0x1323, 0x139a, 0x139e, 0x13ab, 0x13af, 0x13c0, 0x13c4, 0x13d0, 0x13e3, 0x13e9, 0x13fe, 0x13ff, 0x140e, 0x140f, 0x141b, 0x141d, 0x1427, 0x1498, 0x149c, 0x14a9, 0x14ad, 0x14be, 0x14c2, 0x14f5, 0x14f9, 0x14fa, 0x1554, 0x1555

Function 18:
Public function signature: 0xf2fde38b
Entry block: 0x3c6
Exit block: 0xf5
Body: 0xf4, 0xf5, 0x3c6, 0x3cd, 0x3d1, 0x155a, 0x1571, 0x1575, 0x15da, 0x15db

Function 19:
Public fallback function
Entry block: 0xeb
Exit block: 0xf5
Body: 0xeb, 0xec, 0xf4, 0xf5

Function 20:
Private function
Entry block: 0x3e7
Exit block: 0x15db
Body: 0x3e7, 0x465, 0x476, 0x48b, 0x49c, 0x4af, 0x4b5, 0x4c1, 0x524, 0x535, 0x548, 0x55c, 0x568, 0x572, 0x5a2, 0x5a3, 0x5ad, 0x614, 0x625, 0x63a, 0x63b, 0x695, 0x6c7, 0x6c8, 0x6c9

