Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x5e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x5e
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x5e
0xc: JUMPI 0x5e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x60]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x455ca6c
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x60
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x455ca6c
0x22: V15 = EQ V13 0x455ca6c
0x23: V16 = 0x60
0x26: JUMPI 0x60 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x73]
---
0x27 DUP1
0x28 PUSH4 0x3ccfd60b
0x2d EQ
0x2e PUSH2 0x73
0x31 JUMPI
---
0x28: V17 = 0x3ccfd60b
0x2d: V18 = EQ 0x3ccfd60b V13
0x2e: V19 = 0x73
0x31: JUMPI 0x73 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x9a]
---
0x32 DUP1
0x33 PUSH4 0x3d9287fa
0x38 EQ
0x39 PUSH2 0x9a
0x3c JUMPI
---
0x33: V20 = 0x3d9287fa
0x38: V21 = EQ 0x3d9287fa V13
0x39: V22 = 0x9a
0x3c: JUMPI 0x9a V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xc9]
---
0x3d DUP1
0x3e PUSH4 0x5d452201
0x43 EQ
0x44 PUSH2 0xc9
0x47 JUMPI
---
0x3e: V23 = 0x5d452201
0x43: V24 = EQ 0x5d452201 V13
0x44: V25 = 0xc9
0x47: JUMPI 0xc9 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xdc]
---
0x48 DUP1
0x49 PUSH4 0x8da5cb5b
0x4e EQ
0x4f PUSH2 0xdc
0x52 JUMPI
---
0x49: V26 = 0x8da5cb5b
0x4e: V27 = EQ 0x8da5cb5b V13
0x4f: V28 = 0xdc
0x52: JUMPI 0xdc V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0xef]
---
0x53 DUP1
0x54 PUSH4 0x9e281a98
0x59 EQ
0x5a PUSH2 0xef
0x5d JUMPI
---
0x54: V29 = 0x9e281a98
0x59: V30 = EQ 0x9e281a98 V13
0x5a: V31 = 0xef
0x5d: JUMPI 0xef V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x5f]
---
Predecessors: [0x0, 0x53, 0x1a5]
Successors: []
---
0x5e JUMPDEST
0x5f STOP
---
0x5e: JUMPDEST 
0x5f: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x60
[0x60:0x66]
---
Predecessors: [0xd]
Successors: [0x67, 0x6b]
---
0x60 JUMPDEST
0x61 CALLVALUE
0x62 ISZERO
0x63 PUSH2 0x6b
0x66 JUMPI
---
0x60: JUMPDEST 
0x61: V32 = CALLVALUE
0x62: V33 = ISZERO V32
0x63: V34 = 0x6b
0x66: JUMPI 0x6b V33
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x67
[0x67:0x6a]
---
Predecessors: [0x60]
Successors: []
---
0x67 PUSH1 0x0
0x69 DUP1
0x6a REVERT
---
0x67: V35 = 0x0
0x6a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6b
[0x6b:0x72]
---
Predecessors: [0x60]
Successors: [0x111]
---
0x6b JUMPDEST
0x6c PUSH2 0x5e
0x6f PUSH2 0x111
0x72 JUMP
---
0x6b: JUMPDEST 
0x6c: V36 = 0x5e
0x6f: V37 = 0x111
0x72: JUMP 0x111
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x5e]
Exit stack: [V13, 0x5e]

================================

Block 0x73
[0x73:0x79]
---
Predecessors: [0x27]
Successors: [0x7a, 0x7e]
---
0x73 JUMPDEST
0x74 CALLVALUE
0x75 ISZERO
0x76 PUSH2 0x7e
0x79 JUMPI
---
0x73: JUMPDEST 
0x74: V38 = CALLVALUE
0x75: V39 = ISZERO V38
0x76: V40 = 0x7e
0x79: JUMPI 0x7e V39
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x73]
Successors: []
---
0x7a PUSH1 0x0
0x7c DUP1
0x7d REVERT
---
0x7a: V41 = 0x0
0x7d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x7e
[0x7e:0x85]
---
Predecessors: [0x73]
Successors: [0x1a7]
---
0x7e JUMPDEST
0x7f PUSH2 0x86
0x82 PUSH2 0x1a7
0x85 JUMP
---
0x7e: JUMPDEST 
0x7f: V42 = 0x86
0x82: V43 = 0x1a7
0x85: JUMP 0x1a7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x86]
Exit stack: [V13, 0x86]

================================

Block 0x86
[0x86:0x99]
---
Predecessors: [0x1fc, 0x2c6]
Successors: []
---
0x86 JUMPDEST
0x87 PUSH1 0x40
0x89 MLOAD
0x8a SWAP1
0x8b ISZERO
0x8c ISZERO
0x8d DUP2
0x8e MSTORE
0x8f PUSH1 0x20
0x91 ADD
0x92 PUSH1 0x40
0x94 MLOAD
0x95 DUP1
0x96 SWAP2
0x97 SUB
0x98 SWAP1
0x99 RETURN
---
0x86: JUMPDEST 
0x87: V44 = 0x40
0x89: V45 = M[0x40]
0x8b: V46 = ISZERO S0
0x8c: V47 = ISZERO V46
0x8e: M[V45] = V47
0x8f: V48 = 0x20
0x91: V49 = ADD 0x20 V45
0x92: V50 = 0x40
0x94: V51 = M[0x40]
0x97: V52 = SUB V49 V51
0x99: RETURN V51 V52
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x9a
[0x9a:0xa0]
---
Predecessors: [0x32]
Successors: [0xa1, 0xa5]
---
0x9a JUMPDEST
0x9b CALLVALUE
0x9c ISZERO
0x9d PUSH2 0xa5
0xa0 JUMPI
---
0x9a: JUMPDEST 
0x9b: V53 = CALLVALUE
0x9c: V54 = ISZERO V53
0x9d: V55 = 0xa5
0xa0: JUMPI 0xa5 V54
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa1
[0xa1:0xa4]
---
Predecessors: [0x9a]
Successors: []
---
0xa1 PUSH1 0x0
0xa3 DUP1
0xa4 REVERT
---
0xa1: V56 = 0x0
0xa4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa5
[0xa5:0xac]
---
Predecessors: [0x9a]
Successors: [0x202]
---
0xa5 JUMPDEST
0xa6 PUSH2 0xad
0xa9 PUSH2 0x202
0xac JUMP
---
0xa5: JUMPDEST 
0xa6: V57 = 0xad
0xa9: V58 = 0x202
0xac: JUMP 0x202
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xad]
Exit stack: [V13, 0xad]

================================

Block 0xad
[0xad:0xc8]
---
Predecessors: [0x202, 0x211, 0x220]
Successors: []
---
0xad JUMPDEST
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 SWAP1
0xba SWAP2
0xbb AND
0xbc DUP2
0xbd MSTORE
0xbe PUSH1 0x20
0xc0 ADD
0xc1 PUSH1 0x40
0xc3 MLOAD
0xc4 DUP1
0xc5 SWAP2
0xc6 SUB
0xc7 SWAP1
0xc8 RETURN
---
0xad: JUMPDEST 
0xae: V59 = 0x40
0xb0: V60 = M[0x40]
0xb1: V61 = 0x1
0xb3: V62 = 0xa0
0xb5: V63 = 0x2
0xb7: V64 = EXP 0x2 0xa0
0xb8: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V66 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xbd: M[V60] = V66
0xbe: V67 = 0x20
0xc0: V68 = ADD 0x20 V60
0xc1: V69 = 0x40
0xc3: V70 = M[0x40]
0xc6: V71 = SUB V68 V70
0xc8: RETURN V70 V71
---
Entry stack: [V13, 0xad, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xad]

================================

Block 0xc9
[0xc9:0xcf]
---
Predecessors: [0x3d]
Successors: [0xd0, 0xd4]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xc9: JUMPDEST 
0xca: V72 = CALLVALUE
0xcb: V73 = ISZERO V72
0xcc: V74 = 0xd4
0xcf: JUMPI 0xd4 V73
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xc9]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V75 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd4
[0xd4:0xdb]
---
Predecessors: [0xc9]
Successors: [0x211]
---
0xd4 JUMPDEST
0xd5 PUSH2 0xad
0xd8 PUSH2 0x211
0xdb JUMP
---
0xd4: JUMPDEST 
0xd5: V76 = 0xad
0xd8: V77 = 0x211
0xdb: JUMP 0x211
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xad]
Exit stack: [V13, 0xad]

================================

Block 0xdc
[0xdc:0xe2]
---
Predecessors: [0x48]
Successors: [0xe3, 0xe7]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde ISZERO
0xdf PUSH2 0xe7
0xe2 JUMPI
---
0xdc: JUMPDEST 
0xdd: V78 = CALLVALUE
0xde: V79 = ISZERO V78
0xdf: V80 = 0xe7
0xe2: JUMPI 0xe7 V79
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe3
[0xe3:0xe6]
---
Predecessors: [0xdc]
Successors: []
---
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 REVERT
---
0xe3: V81 = 0x0
0xe6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0xdc]
Successors: [0x220]
---
0xe7 JUMPDEST
0xe8 PUSH2 0xad
0xeb PUSH2 0x220
0xee JUMP
---
0xe7: JUMPDEST 
0xe8: V82 = 0xad
0xeb: V83 = 0x220
0xee: JUMP 0x220
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xad]
Exit stack: [V13, 0xad]

================================

Block 0xef
[0xef:0xf5]
---
Predecessors: [0x53]
Successors: [0xf6, 0xfa]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xef: JUMPDEST 
0xf0: V84 = CALLVALUE
0xf1: V85 = ISZERO V84
0xf2: V86 = 0xfa
0xf5: JUMPI 0xfa V85
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xef]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V87 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xfa
[0xfa:0x110]
---
Predecessors: [0xef]
Successors: [0x22f]
---
0xfa JUMPDEST
0xfb PUSH2 0x86
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 PUSH1 0x4
0x108 CALLDATALOAD
0x109 AND
0x10a PUSH1 0x24
0x10c CALLDATALOAD
0x10d PUSH2 0x22f
0x110 JUMP
---
0xfa: JUMPDEST 
0xfb: V88 = 0x86
0xfe: V89 = 0x1
0x100: V90 = 0xa0
0x102: V91 = 0x2
0x104: V92 = EXP 0x2 0xa0
0x105: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x106: V94 = 0x4
0x108: V95 = CALLDATALOAD 0x4
0x109: V96 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x10a: V97 = 0x24
0x10c: V98 = CALLDATALOAD 0x24
0x10d: V99 = 0x22f
0x110: JUMP 0x22f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x86, V96, V98]
Exit stack: [V13, 0x86, V96, V98]

================================

Block 0x111
[0x111:0x124]
---
Predecessors: [0x6b]
Successors: [0x125, 0x1a5]
---
0x111 JUMPDEST
0x112 PUSH1 0x0
0x114 ADDRESS
0x115 PUSH1 0x1
0x117 PUSH1 0xa0
0x119 PUSH1 0x2
0x11b EXP
0x11c SUB
0x11d AND
0x11e BALANCE
0x11f GT
0x120 ISZERO
0x121 PUSH2 0x1a5
0x124 JUMPI
---
0x111: JUMPDEST 
0x112: V100 = 0x0
0x114: V101 = ADDRESS
0x115: V102 = 0x1
0x117: V103 = 0xa0
0x119: V104 = 0x2
0x11b: V105 = EXP 0x2 0xa0
0x11c: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x11e: V108 = BALANCE V107
0x11f: V109 = GT V108 0x0
0x120: V110 = ISZERO V109
0x121: V111 = 0x1a5
0x124: JUMPI 0x1a5 V110
---
Entry stack: [V13, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e]

================================

Block 0x125
[0x125:0x183]
---
Predecessors: [0x111]
Successors: [0x184, 0x188]
---
0x125 PUSH1 0x1
0x127 SLOAD
0x128 PUSH1 0x2
0x12a SLOAD
0x12b PUSH1 0x1
0x12d PUSH1 0xa0
0x12f PUSH1 0x2
0x131 EXP
0x132 SUB
0x133 SWAP2
0x134 DUP3
0x135 AND
0x136 SWAP2
0x137 PUSH4 0xf48c3054
0x13c SWAP2
0x13d ADDRESS
0x13e DUP3
0x13f AND
0x140 BALANCE
0x141 SWAP2
0x142 AND
0x143 PUSH1 0x0
0x145 PUSH1 0x40
0x147 MLOAD
0x148 PUSH1 0x20
0x14a ADD
0x14b MSTORE
0x14c PUSH1 0x40
0x14e MLOAD
0x14f PUSH1 0xe0
0x151 PUSH1 0x2
0x153 EXP
0x154 PUSH4 0xffffffff
0x159 DUP6
0x15a AND
0x15b MUL
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x1
0x160 PUSH1 0xa0
0x162 PUSH1 0x2
0x164 EXP
0x165 SUB
0x166 SWAP1
0x167 SWAP2
0x168 AND
0x169 PUSH1 0x4
0x16b DUP3
0x16c ADD
0x16d MSTORE
0x16e PUSH1 0x24
0x170 ADD
0x171 PUSH1 0x20
0x173 PUSH1 0x40
0x175 MLOAD
0x176 DUP1
0x177 DUP4
0x178 SUB
0x179 DUP2
0x17a DUP6
0x17b DUP9
0x17c DUP1
0x17d EXTCODESIZE
0x17e ISZERO
0x17f ISZERO
0x180 PUSH2 0x188
0x183 JUMPI
---
0x125: V112 = 0x1
0x127: V113 = S[0x1]
0x128: V114 = 0x2
0x12a: V115 = S[0x2]
0x12b: V116 = 0x1
0x12d: V117 = 0xa0
0x12f: V118 = 0x2
0x131: V119 = EXP 0x2 0xa0
0x132: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x135: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x137: V122 = 0xf48c3054
0x13d: V123 = ADDRESS
0x13f: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x140: V125 = BALANCE V124
0x142: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x143: V127 = 0x0
0x145: V128 = 0x40
0x147: V129 = M[0x40]
0x148: V130 = 0x20
0x14a: V131 = ADD 0x20 V129
0x14b: M[V131] = 0x0
0x14c: V132 = 0x40
0x14e: V133 = M[0x40]
0x14f: V134 = 0xe0
0x151: V135 = 0x2
0x153: V136 = EXP 0x2 0xe0
0x154: V137 = 0xffffffff
0x15a: V138 = AND 0xf48c3054 0xffffffff
0x15b: V139 = MUL 0xf48c3054 0x100000000000000000000000000000000000000000000000000000000
0x15d: M[V133] = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x15e: V140 = 0x1
0x160: V141 = 0xa0
0x162: V142 = 0x2
0x164: V143 = EXP 0x2 0xa0
0x165: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x168: V145 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x169: V146 = 0x4
0x16c: V147 = ADD V133 0x4
0x16d: M[V147] = V145
0x16e: V148 = 0x24
0x170: V149 = ADD 0x24 V133
0x171: V150 = 0x20
0x173: V151 = 0x40
0x175: V152 = M[0x40]
0x178: V153 = SUB V149 V152
0x17d: V154 = EXTCODESIZE V121
0x17e: V155 = ISZERO V154
0x17f: V156 = ISZERO V155
0x180: V157 = 0x188
0x183: JUMPI 0x188 V156
---
Entry stack: [V13, 0x5e]
Stack pops: 0
Stack additions: [V121, 0xf48c3054, V125, V149, 0x20, V152, V153, V152, V125, V121]
Exit stack: [V13, 0x5e, V121, 0xf48c3054, V125, V149, 0x20, V152, V153, V152, V125, V121]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x125]
Successors: []
---
0x184 PUSH1 0x0
0x186 DUP1
0x187 REVERT
---
0x184: V158 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V121, 0xf48c3054, V125, V149, 0x20, V152, V153, V152, V125, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V121, 0xf48c3054, V125, V149, 0x20, V152, V153, V152, V125, V121]

================================

Block 0x188
[0x188:0x194]
---
Predecessors: [0x125]
Successors: [0x195, 0x199]
---
0x188 JUMPDEST
0x189 PUSH2 0x25ee
0x18c GAS
0x18d SUB
0x18e CALL
0x18f ISZERO
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x188: JUMPDEST 
0x189: V159 = 0x25ee
0x18c: V160 = GAS
0x18d: V161 = SUB V160 0x25ee
0x18e: V162 = CALL V161 V121 V125 V152 V153 V152 0x20
0x18f: V163 = ISZERO V162
0x190: V164 = ISZERO V163
0x191: V165 = 0x199
0x194: JUMPI 0x199 V164
---
Entry stack: [V13, 0x5e, V121, 0xf48c3054, V125, V149, 0x20, V152, V153, V152, V125, V121]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x5e, V121, 0xf48c3054, V125, V149]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x188]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V166 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V121, 0xf48c3054, V125, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V121, 0xf48c3054, V125, V149]

================================

Block 0x199
[0x199:0x1a4]
---
Predecessors: [0x188]
Successors: [0x1a5]
---
0x199 JUMPDEST
0x19a POP
0x19b POP
0x19c POP
0x19d POP
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 MLOAD
0x1a3 POP
0x1a4 POP
---
0x199: JUMPDEST 
0x19e: V167 = 0x40
0x1a0: V168 = M[0x40]
0x1a2: V169 = M[V168]
---
Entry stack: [V13, 0x5e, V121, 0xf48c3054, V125, V149]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x5e]

================================

Block 0x1a5
[0x1a5:0x1a6]
---
Predecessors: [0x111, 0x199]
Successors: [0x5e]
---
0x1a5 JUMPDEST
0x1a6 JUMP
---
0x1a5: JUMPDEST 
0x1a6: JUMP 0x5e
---
Entry stack: [V13, 0x5e]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a7
[0x1a7:0x1be]
---
Predecessors: [0x7e]
Successors: [0x1bf, 0x1c3]
---
0x1a7 JUMPDEST
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab SLOAD
0x1ac CALLER
0x1ad PUSH1 0x1
0x1af PUSH1 0xa0
0x1b1 PUSH1 0x2
0x1b3 EXP
0x1b4 SUB
0x1b5 SWAP1
0x1b6 DUP2
0x1b7 AND
0x1b8 SWAP2
0x1b9 AND
0x1ba EQ
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V170 = 0x0
0x1ab: V171 = S[0x0]
0x1ac: V172 = CALLER
0x1ad: V173 = 0x1
0x1af: V174 = 0xa0
0x1b1: V175 = 0x2
0x1b3: V176 = EXP 0x2 0xa0
0x1b4: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b7: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x1b9: V179 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V180 = EQ V179 V178
0x1bb: V181 = 0x1c3
0x1be: JUMPI 0x1c3 V180
---
Entry stack: [V13, 0x86]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x86, 0x0]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1a7]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V182 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x86, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x86, 0x0]

================================

Block 0x1c3
[0x1c3:0x1f7]
---
Predecessors: [0x1a7]
Successors: [0x1f8, 0x1fc]
---
0x1c3 JUMPDEST
0x1c4 PUSH1 0x0
0x1c6 SLOAD
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf SWAP1
0x1d0 DUP2
0x1d1 AND
0x1d2 SWAP1
0x1d3 ADDRESS
0x1d4 AND
0x1d5 BALANCE
0x1d6 DUP1
0x1d7 ISZERO
0x1d8 PUSH2 0x8fc
0x1db MUL
0x1dc SWAP1
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 PUSH1 0x0
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 DUP1
0x1e6 DUP4
0x1e7 SUB
0x1e8 DUP2
0x1e9 DUP6
0x1ea DUP9
0x1eb DUP9
0x1ec CALL
0x1ed SWAP4
0x1ee POP
0x1ef POP
0x1f0 POP
0x1f1 POP
0x1f2 ISZERO
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V183 = 0x0
0x1c6: V184 = S[0x0]
0x1c7: V185 = 0x1
0x1c9: V186 = 0xa0
0x1cb: V187 = 0x2
0x1cd: V188 = EXP 0x2 0xa0
0x1ce: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x1d3: V191 = ADDRESS
0x1d4: V192 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V193 = BALANCE V192
0x1d7: V194 = ISZERO V193
0x1d8: V195 = 0x8fc
0x1db: V196 = MUL 0x8fc V194
0x1dd: V197 = 0x40
0x1df: V198 = M[0x40]
0x1e0: V199 = 0x0
0x1e2: V200 = 0x40
0x1e4: V201 = M[0x40]
0x1e7: V202 = SUB V198 V201
0x1ec: V203 = CALL V196 V190 V193 V201 V202 V201 0x0
0x1f2: V204 = ISZERO V203
0x1f3: V205 = ISZERO V204
0x1f4: V206 = 0x1fc
0x1f7: JUMPI 0x1fc V205
---
Entry stack: [V13, 0x86, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x86, 0x0]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1c3]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V207 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x86, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x86, 0x0]

================================

Block 0x1fc
[0x1fc:0x201]
---
Predecessors: [0x1c3]
Successors: [0x86]
---
0x1fc JUMPDEST
0x1fd POP
0x1fe PUSH1 0x1
0x200 SWAP1
0x201 JUMP
---
0x1fc: JUMPDEST 
0x1fe: V208 = 0x1
0x201: JUMP 0x86
---
Entry stack: [V13, 0x86, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x202
[0x202:0x210]
---
Predecessors: [0xa5]
Successors: [0xad]
---
0x202 JUMPDEST
0x203 PUSH1 0x2
0x205 SLOAD
0x206 PUSH1 0x1
0x208 PUSH1 0xa0
0x20a PUSH1 0x2
0x20c EXP
0x20d SUB
0x20e AND
0x20f DUP2
0x210 JUMP
---
0x202: JUMPDEST 
0x203: V209 = 0x2
0x205: V210 = S[0x2]
0x206: V211 = 0x1
0x208: V212 = 0xa0
0x20a: V213 = 0x2
0x20c: V214 = EXP 0x2 0xa0
0x20d: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20e: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x210: JUMP 0xad
---
Entry stack: [V13, 0xad]
Stack pops: 1
Stack additions: [S0, V216]
Exit stack: [V13, 0xad, V216]

================================

Block 0x211
[0x211:0x21f]
---
Predecessors: [0xd4]
Successors: [0xad]
---
0x211 JUMPDEST
0x212 PUSH1 0x1
0x214 SLOAD
0x215 PUSH1 0x1
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c SUB
0x21d AND
0x21e DUP2
0x21f JUMP
---
0x211: JUMPDEST 
0x212: V217 = 0x1
0x214: V218 = S[0x1]
0x215: V219 = 0x1
0x217: V220 = 0xa0
0x219: V221 = 0x2
0x21b: V222 = EXP 0x2 0xa0
0x21c: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21d: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x21f: JUMP 0xad
---
Entry stack: [V13, 0xad]
Stack pops: 1
Stack additions: [S0, V224]
Exit stack: [V13, 0xad, V224]

================================

Block 0x220
[0x220:0x22e]
---
Predecessors: [0xe7]
Successors: [0xad]
---
0x220 JUMPDEST
0x221 PUSH1 0x0
0x223 SLOAD
0x224 PUSH1 0x1
0x226 PUSH1 0xa0
0x228 PUSH1 0x2
0x22a EXP
0x22b SUB
0x22c AND
0x22d DUP2
0x22e JUMP
---
0x220: JUMPDEST 
0x221: V225 = 0x0
0x223: V226 = S[0x0]
0x224: V227 = 0x1
0x226: V228 = 0xa0
0x228: V229 = 0x2
0x22a: V230 = EXP 0x2 0xa0
0x22b: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22c: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x22e: JUMP 0xad
---
Entry stack: [V13, 0xad]
Stack pops: 1
Stack additions: [S0, V232]
Exit stack: [V13, 0xad, V232]

================================

Block 0x22f
[0x22f:0x248]
---
Predecessors: [0xfa]
Successors: [0x249, 0x24d]
---
0x22f JUMPDEST
0x230 PUSH1 0x0
0x232 DUP1
0x233 SLOAD
0x234 DUP2
0x235 SWAP1
0x236 CALLER
0x237 PUSH1 0x1
0x239 PUSH1 0xa0
0x23b PUSH1 0x2
0x23d EXP
0x23e SUB
0x23f SWAP1
0x240 DUP2
0x241 AND
0x242 SWAP2
0x243 AND
0x244 EQ
0x245 PUSH2 0x24d
0x248 JUMPI
---
0x22f: JUMPDEST 
0x230: V233 = 0x0
0x233: V234 = S[0x0]
0x236: V235 = CALLER
0x237: V236 = 0x1
0x239: V237 = 0xa0
0x23b: V238 = 0x2
0x23d: V239 = EXP 0x2 0xa0
0x23e: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x241: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x243: V242 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x244: V243 = EQ V242 V241
0x245: V244 = 0x24d
0x248: JUMPI 0x24d V243
---
Entry stack: [V13, 0x86, V96, V98]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x86, V96, V98, 0x0, 0x0]

================================

Block 0x249
[0x249:0x24c]
---
Predecessors: [0x22f]
Successors: []
---
0x249 PUSH1 0x0
0x24b DUP1
0x24c REVERT
---
0x249: V245 = 0x0
0x24c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x86, V96, V98, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x86, V96, V98, 0x0, 0x0]

================================

Block 0x24d
[0x24d:0x2b0]
---
Predecessors: [0x22f]
Successors: [0x2b1, 0x2b5]
---
0x24d JUMPDEST
0x24e POP
0x24f PUSH1 0x0
0x251 DUP1
0x252 SLOAD
0x253 DUP5
0x254 SWAP2
0x255 PUSH1 0x1
0x257 PUSH1 0xa0
0x259 PUSH1 0x2
0x25b EXP
0x25c SUB
0x25d DUP1
0x25e DUP5
0x25f AND
0x260 SWAP3
0x261 PUSH4 0xa9059cbb
0x266 SWAP3
0x267 SWAP2
0x268 AND
0x269 SWAP1
0x26a DUP7
0x26b SWAP1
0x26c PUSH1 0x40
0x26e MLOAD
0x26f PUSH1 0x20
0x271 ADD
0x272 MSTORE
0x273 PUSH1 0x40
0x275 MLOAD
0x276 PUSH1 0xe0
0x278 PUSH1 0x2
0x27a EXP
0x27b PUSH4 0xffffffff
0x280 DUP6
0x281 AND
0x282 MUL
0x283 DUP2
0x284 MSTORE
0x285 PUSH1 0x1
0x287 PUSH1 0xa0
0x289 PUSH1 0x2
0x28b EXP
0x28c SUB
0x28d SWAP1
0x28e SWAP3
0x28f AND
0x290 PUSH1 0x4
0x292 DUP4
0x293 ADD
0x294 MSTORE
0x295 PUSH1 0x24
0x297 DUP3
0x298 ADD
0x299 MSTORE
0x29a PUSH1 0x44
0x29c ADD
0x29d PUSH1 0x20
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 DUP1
0x2a3 DUP4
0x2a4 SUB
0x2a5 DUP2
0x2a6 PUSH1 0x0
0x2a8 DUP8
0x2a9 DUP1
0x2aa EXTCODESIZE
0x2ab ISZERO
0x2ac ISZERO
0x2ad PUSH2 0x2b5
0x2b0 JUMPI
---
0x24d: JUMPDEST 
0x24f: V246 = 0x0
0x252: V247 = S[0x0]
0x255: V248 = 0x1
0x257: V249 = 0xa0
0x259: V250 = 0x2
0x25b: V251 = EXP 0x2 0xa0
0x25c: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25f: V253 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x261: V254 = 0xa9059cbb
0x268: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x26c: V256 = 0x40
0x26e: V257 = M[0x40]
0x26f: V258 = 0x20
0x271: V259 = ADD 0x20 V257
0x272: M[V259] = 0x0
0x273: V260 = 0x40
0x275: V261 = M[0x40]
0x276: V262 = 0xe0
0x278: V263 = 0x2
0x27a: V264 = EXP 0x2 0xe0
0x27b: V265 = 0xffffffff
0x281: V266 = AND 0xa9059cbb 0xffffffff
0x282: V267 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x284: M[V261] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x285: V268 = 0x1
0x287: V269 = 0xa0
0x289: V270 = 0x2
0x28b: V271 = EXP 0x2 0xa0
0x28c: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28f: V273 = AND V255 0xffffffffffffffffffffffffffffffffffffffff
0x290: V274 = 0x4
0x293: V275 = ADD V261 0x4
0x294: M[V275] = V273
0x295: V276 = 0x24
0x298: V277 = ADD V261 0x24
0x299: M[V277] = V98
0x29a: V278 = 0x44
0x29c: V279 = ADD 0x44 V261
0x29d: V280 = 0x20
0x29f: V281 = 0x40
0x2a1: V282 = M[0x40]
0x2a4: V283 = SUB V279 V282
0x2a6: V284 = 0x0
0x2aa: V285 = EXTCODESIZE V253
0x2ab: V286 = ISZERO V285
0x2ac: V287 = ISZERO V286
0x2ad: V288 = 0x2b5
0x2b0: JUMPI 0x2b5 V287
---
Entry stack: [V13, 0x86, V96, V98, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, V253, 0xa9059cbb, V279, 0x20, V282, V283, V282, 0x0, V253]
Exit stack: [V13, 0x86, V96, V98, 0x0, V96, V253, 0xa9059cbb, V279, 0x20, V282, V283, V282, 0x0, V253]

================================

Block 0x2b1
[0x2b1:0x2b4]
---
Predecessors: [0x24d]
Successors: []
---
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 REVERT
---
0x2b1: V289 = 0x0
0x2b4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x86, V96, V98, 0x0, V96, V253, 0xa9059cbb, V279, 0x20, V282, V283, V282, 0x0, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x86, V96, V98, 0x0, V96, V253, 0xa9059cbb, V279, 0x20, V282, V283, V282, 0x0, V253]

================================

Block 0x2b5
[0x2b5:0x2c1]
---
Predecessors: [0x24d]
Successors: [0x2c2, 0x2c6]
---
0x2b5 JUMPDEST
0x2b6 PUSH2 0x2c6
0x2b9 GAS
0x2ba SUB
0x2bb CALL
0x2bc ISZERO
0x2bd ISZERO
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V290 = 0x2c6
0x2b9: V291 = GAS
0x2ba: V292 = SUB V291 0x2c6
0x2bb: V293 = CALL V292 V253 0x0 V282 V283 V282 0x20
0x2bc: V294 = ISZERO V293
0x2bd: V295 = ISZERO V294
0x2be: V296 = 0x2c6
0x2c1: JUMPI 0x2c6 V295
---
Entry stack: [V13, 0x86, V96, V98, 0x0, V96, V253, 0xa9059cbb, V279, 0x20, V282, V283, V282, 0x0, V253]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x86, V96, V98, 0x0, V96, V253, 0xa9059cbb, V279]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2b5]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V297 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x86, V96, V98, 0x0, V96, V253, 0xa9059cbb, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x86, V96, V98, 0x0, V96, V253, 0xa9059cbb, V279]

================================

Block 0x2c6
[0x2c6:0x2d6]
---
Predecessors: [0x2b5]
Successors: [0x86]
---
0x2c6 JUMPDEST
0x2c7 POP
0x2c8 POP
0x2c9 POP
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd DUP1
0x2ce MLOAD
0x2cf SWAP6
0x2d0 SWAP5
0x2d1 POP
0x2d2 POP
0x2d3 POP
0x2d4 POP
0x2d5 POP
0x2d6 JUMP
---
0x2c6: JUMPDEST 
0x2ca: V298 = 0x40
0x2cc: V299 = M[0x40]
0x2ce: V300 = M[V299]
0x2d6: JUMP 0x86
---
Entry stack: [V13, 0x86, V96, V98, 0x0, V96, V253, 0xa9059cbb, V279]
Stack pops: 8
Stack additions: [V300]
Exit stack: [V13, V300]

================================

Block 0x2d7
[0x2d7:0x30e]
---
Predecessors: []
Successors: []
---
0x2d7 STOP
0x2d8 LOG1
0x2d9 PUSH6 0x627a7a723058
0x2e0 SHA3
0x2e1 MISSING 0xce
0x2e2 MISSING 0x5f
0x2e3 MISSING 0x26
0x2e4 MISSING 0x49
0x2e5 MISSING 0xad
0x2e6 DELEGATECALL
0x2e7 PUSH4 0xfdfcac6a
0x2ec DIFFICULTY
0x2ed MISSING 0xe7
0x2ee SWAP2
0x2ef PUSH31 0xa2ae322e2f166445fe3ecc1cb11fc9a2a30029
---
0x2d7: STOP 
0x2d8: LOG S0 S1 S2
0x2d9: V301 = 0x627a7a723058
0x2e0: V302 = SHA3 0x627a7a723058 S3
0x2e1: MISSING 0xce
0x2e2: MISSING 0x5f
0x2e3: MISSING 0x26
0x2e4: MISSING 0x49
0x2e5: MISSING 0xad
0x2e6: V303 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x2e7: V304 = 0xfdfcac6a
0x2ec: V305 = DIFFICULTY
0x2ed: MISSING 0xe7
0x2ef: V306 = 0xa2ae322e2f166445fe3ecc1cb11fc9a2a30029
---
Entry stack: []
Stack pops: 0
Stack additions: [V302, V305, 0xfdfcac6a, V303, 0xa2ae322e2f166445fe3ecc1cb11fc9a2a30029, S2, S1, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x455ca6c
Entry block: 0x60
Exit block: 0x195
Body: 0x5e, 0x60, 0x67, 0x6b, 0x111, 0x125, 0x184, 0x188, 0x195, 0x199, 0x1a5

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x73
Exit block: 0x86
Body: 0x73, 0x7a, 0x7e, 0x86, 0x1a7, 0x1bf, 0x1c3, 0x1f8, 0x1fc

Function 2:
Public function signature: 0x3d9287fa
Entry block: 0x9a
Exit block: 0xad
Body: 0x9a, 0xa1, 0xa5, 0xad, 0x202

Function 3:
Public function signature: 0x5d452201
Entry block: 0xc9
Exit block: 0xad
Body: 0xad, 0xc9, 0xd0, 0xd4, 0x211

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0xdc
Exit block: 0xad
Body: 0xad, 0xdc, 0xe3, 0xe7, 0x220

Function 5:
Public function signature: 0x9e281a98
Entry block: 0xef
Exit block: 0x86
Body: 0x86, 0xef, 0xf6, 0xfa, 0x22f, 0x249, 0x24d, 0x2b1, 0x2b5, 0x2c2, 0x2c6

Function 6:
Public fallback function
Entry block: 0x5e
Exit block: 0x5e
Body: 0x5e

