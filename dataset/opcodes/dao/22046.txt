Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4a
0xa: JUMPI 0x4a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x4c]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x77a911d
0x3a EQ
0x3b PUSH2 0x4c
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x77a911d
0x3a: V12 = EQ 0x77a911d V10
0x3b: V13 = 0x4c
0x3e: JUMPI 0x4c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x8c]
---
0x3f DUP1
0x40 PUSH4 0xb4a99a4e
0x45 EQ
0x46 PUSH2 0x8c
0x49 JUMPI
---
0x40: V14 = 0xb4a99a4e
0x45: V15 = EQ 0xb4a99a4e V10
0x46: V16 = 0x8c
0x49: JUMPI 0x8c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x4b]
---
Predecessors: [0x0, 0x3f]
Successors: []
---
0x4a JUMPDEST
0x4b STOP
---
0x4a: JUMPDEST 
0x4b: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c
[0x4c:0x89]
---
Predecessors: [0xb]
Successors: [0xe1]
---
0x4c JUMPDEST
0x4d PUSH2 0x8a
0x50 PUSH1 0x4
0x52 DUP1
0x53 DUP1
0x54 CALLDATALOAD
0x55 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a AND
0x6b SWAP1
0x6c PUSH1 0x20
0x6e ADD
0x6f SWAP1
0x70 SWAP2
0x71 SWAP1
0x72 DUP1
0x73 CALLDATALOAD
0x74 SWAP1
0x75 PUSH1 0x20
0x77 ADD
0x78 SWAP1
0x79 SWAP2
0x7a SWAP1
0x7b DUP1
0x7c CALLDATALOAD
0x7d SWAP1
0x7e PUSH1 0x20
0x80 ADD
0x81 SWAP1
0x82 SWAP2
0x83 SWAP1
0x84 POP
0x85 POP
0x86 PUSH2 0xe1
0x89 JUMP
---
0x4c: JUMPDEST 
0x4d: V17 = 0x8a
0x50: V18 = 0x4
0x54: V19 = CALLDATALOAD 0x4
0x55: V20 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a: V21 = AND 0xffffffffffffffffffffffffffffffffffffffff V19
0x6c: V22 = 0x20
0x6e: V23 = ADD 0x20 0x4
0x73: V24 = CALLDATALOAD 0x24
0x75: V25 = 0x20
0x77: V26 = ADD 0x20 0x24
0x7c: V27 = CALLDATALOAD 0x44
0x7e: V28 = 0x20
0x80: V29 = ADD 0x20 0x44
0x86: V30 = 0xe1
0x89: JUMP 0xe1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8a, V21, V24, V27]
Exit stack: [V10, 0x8a, V21, V24, V27]

================================

Block 0x8a
[0x8a:0x8b]
---
Predecessors: [0x3dc]
Successors: []
---
0x8a JUMPDEST
0x8b STOP
---
0x8a: JUMPDEST 
0x8b: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x92]
---
Predecessors: [0x3f]
Successors: [0x93, 0x97]
---
0x8c JUMPDEST
0x8d CALLVALUE
0x8e ISZERO
0x8f PUSH2 0x97
0x92 JUMPI
---
0x8c: JUMPDEST 
0x8d: V31 = CALLVALUE
0x8e: V32 = ISZERO V31
0x8f: V33 = 0x97
0x92: JUMPI 0x97 V32
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x8c]
Successors: []
---
0x93 PUSH1 0x0
0x95 DUP1
0x96 REVERT
---
0x93: V34 = 0x0
0x96: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x97
[0x97:0x9e]
---
Predecessors: [0x8c]
Successors: [0x3e2]
---
0x97 JUMPDEST
0x98 PUSH2 0x9f
0x9b PUSH2 0x3e2
0x9e JUMP
---
0x97: JUMPDEST 
0x98: V35 = 0x9f
0x9b: V36 = 0x3e2
0x9e: JUMP 0x3e2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x9f]
Exit stack: [V10, 0x9f]

================================

Block 0x9f
[0x9f:0xe0]
---
Predecessors: [0x3e2]
Successors: []
---
0x9f JUMPDEST
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 DUP1
0xa4 DUP3
0xa5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba AND
0xbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0 AND
0xd1 DUP2
0xd2 MSTORE
0xd3 PUSH1 0x20
0xd5 ADD
0xd6 SWAP2
0xd7 POP
0xd8 POP
0xd9 PUSH1 0x40
0xdb MLOAD
0xdc DUP1
0xdd SWAP2
0xde SUB
0xdf SWAP1
0xe0 RETURN
---
0x9f: JUMPDEST 
0xa0: V37 = 0x40
0xa2: V38 = M[0x40]
0xa5: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xba: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0xbb: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xd2: M[V38] = V42
0xd3: V43 = 0x20
0xd5: V44 = ADD 0x20 V38
0xd9: V45 = 0x40
0xdb: V46 = M[0x40]
0xde: V47 = SUB V44 V46
0xe0: RETURN V46 V47
---
Entry stack: [V10, 0x9f, V195]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x9f]

================================

Block 0xe1
[0xe1:0x139]
---
Predecessors: [0x4c]
Successors: [0x13a, 0x13e]
---
0xe1 JUMPDEST
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 PUSH1 0x0
0xe7 SWAP1
0xe8 SLOAD
0xe9 SWAP1
0xea PUSH2 0x100
0xed EXP
0xee SWAP1
0xef DIV
0xf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105 AND
0x106 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b AND
0x11c CALLER
0x11d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132 AND
0x133 EQ
0x134 ISZERO
0x135 ISZERO
0x136 PUSH2 0x13e
0x139 JUMPI
---
0xe1: JUMPDEST 
0xe2: V48 = 0x0
0xe5: V49 = 0x0
0xe8: V50 = S[0x0]
0xea: V51 = 0x100
0xed: V52 = EXP 0x100 0x0
0xef: V53 = DIV V50 0x1
0xf0: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x105: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x106: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x11c: V58 = CALLER
0x11d: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x132: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x133: V61 = EQ V60 V57
0x134: V62 = ISZERO V61
0x135: V63 = ISZERO V62
0x136: V64 = 0x13e
0x139: JUMPI 0x13e V63
---
Entry stack: [V10, 0x8a, V21, V24, V27]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x8a, V21, V24, V27, 0x0]

================================

Block 0x13a
[0x13a:0x13d]
---
Predecessors: [0xe1]
Successors: []
---
0x13a PUSH1 0x0
0x13c DUP1
0x13d REVERT
---
0x13a: V65 = 0x0
0x13d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x8a, V21, V24, V27, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8a, V21, V24, V27, 0x0]

================================

Block 0x13e
[0x13e:0x2a8]
---
Predecessors: [0xe1]
Successors: [0x2a9]
---
0x13e JUMPDEST
0x13f DUP4
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 PUSH1 0x40
0x158 MLOAD
0x159 DUP1
0x15a DUP1
0x15b PUSH32 0x696e697469616c697a6528290000000000000000000000000000000000000000
0x17c DUP2
0x17d MSTORE
0x17e POP
0x17f PUSH1 0xc
0x181 ADD
0x182 SWAP1
0x183 POP
0x184 PUSH1 0x40
0x186 MLOAD
0x187 DUP1
0x188 SWAP2
0x189 SUB
0x18a SWAP1
0x18b SHA3
0x18c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1aa SWAP1
0x1ab DIV
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af DUP2
0x1b0 PUSH4 0xffffffff
0x1b5 AND
0x1b6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1d4 MUL
0x1d5 DUP2
0x1d6 MSTORE
0x1d7 PUSH1 0x4
0x1d9 ADD
0x1da PUSH1 0x0
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 DUP4
0x1e1 SUB
0x1e2 DUP2
0x1e3 PUSH1 0x0
0x1e5 DUP8
0x1e6 PUSH2 0x646e
0x1e9 GAS
0x1ea SUB
0x1eb CALL
0x1ec SWAP3
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 POP
0x1f1 DUP4
0x1f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x207 AND
0x208 DUP4
0x209 PUSH1 0x40
0x20b MLOAD
0x20c DUP1
0x20d DUP1
0x20e PUSH32 0x6465706f73697428290000000000000000000000000000000000000000000000
0x22f DUP2
0x230 MSTORE
0x231 POP
0x232 PUSH1 0x9
0x234 ADD
0x235 SWAP1
0x236 POP
0x237 PUSH1 0x40
0x239 MLOAD
0x23a DUP1
0x23b SWAP2
0x23c SUB
0x23d SWAP1
0x23e SHA3
0x23f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x25d SWAP1
0x25e DIV
0x25f SWAP1
0x260 PUSH1 0x40
0x262 MLOAD
0x263 DUP3
0x264 PUSH4 0xffffffff
0x269 AND
0x26a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x288 MUL
0x289 DUP2
0x28a MSTORE
0x28b PUSH1 0x4
0x28d ADD
0x28e PUSH1 0x0
0x290 PUSH1 0x40
0x292 MLOAD
0x293 DUP1
0x294 DUP4
0x295 SUB
0x296 DUP2
0x297 DUP6
0x298 DUP9
0x299 PUSH2 0x8796
0x29c GAS
0x29d SUB
0x29e CALL
0x29f SWAP4
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 POP
0x2a4 POP
0x2a5 PUSH1 0x0
0x2a7 SWAP1
0x2a8 POP
---
0x13e: JUMPDEST 
0x140: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x156: V68 = 0x40
0x158: V69 = M[0x40]
0x15b: V70 = 0x696e697469616c697a6528290000000000000000000000000000000000000000
0x17d: M[V69] = 0x696e697469616c697a6528290000000000000000000000000000000000000000
0x17f: V71 = 0xc
0x181: V72 = ADD 0xc V69
0x184: V73 = 0x40
0x186: V74 = M[0x40]
0x189: V75 = SUB V72 V74
0x18b: V76 = SHA3 V74 V75
0x18c: V77 = 0x100000000000000000000000000000000000000000000000000000000
0x1ab: V78 = DIV V76 0x100000000000000000000000000000000000000000000000000000000
0x1ac: V79 = 0x40
0x1ae: V80 = M[0x40]
0x1b0: V81 = 0xffffffff
0x1b5: V82 = AND 0xffffffff V78
0x1b6: V83 = 0x100000000000000000000000000000000000000000000000000000000
0x1d4: V84 = MUL 0x100000000000000000000000000000000000000000000000000000000 V82
0x1d6: M[V80] = V84
0x1d7: V85 = 0x4
0x1d9: V86 = ADD 0x4 V80
0x1da: V87 = 0x0
0x1dc: V88 = 0x40
0x1de: V89 = M[0x40]
0x1e1: V90 = SUB V86 V89
0x1e3: V91 = 0x0
0x1e6: V92 = 0x646e
0x1e9: V93 = GAS
0x1ea: V94 = SUB V93 0x646e
0x1eb: V95 = CALL V94 V67 0x0 V89 V90 V89 0x0
0x1f2: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x207: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x209: V98 = 0x40
0x20b: V99 = M[0x40]
0x20e: V100 = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x230: M[V99] = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x232: V101 = 0x9
0x234: V102 = ADD 0x9 V99
0x237: V103 = 0x40
0x239: V104 = M[0x40]
0x23c: V105 = SUB V102 V104
0x23e: V106 = SHA3 V104 V105
0x23f: V107 = 0x100000000000000000000000000000000000000000000000000000000
0x25e: V108 = DIV V106 0x100000000000000000000000000000000000000000000000000000000
0x260: V109 = 0x40
0x262: V110 = M[0x40]
0x264: V111 = 0xffffffff
0x269: V112 = AND 0xffffffff V108
0x26a: V113 = 0x100000000000000000000000000000000000000000000000000000000
0x288: V114 = MUL 0x100000000000000000000000000000000000000000000000000000000 V112
0x28a: M[V110] = V114
0x28b: V115 = 0x4
0x28d: V116 = ADD 0x4 V110
0x28e: V117 = 0x0
0x290: V118 = 0x40
0x292: V119 = M[0x40]
0x295: V120 = SUB V116 V119
0x299: V121 = 0x8796
0x29c: V122 = GAS
0x29d: V123 = SUB V122 0x8796
0x29e: V124 = CALL V123 V97 V24 V119 V120 V119 0x0
0x2a5: V125 = 0x0
---
Entry stack: [V10, 0x8a, V21, V24, V27, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x0]
Exit stack: [V10, 0x8a, V21, V24, V27, 0x0]

================================

Block 0x2a9
[0x2a9:0x2b1]
---
Predecessors: [0x13e, 0x378]
Successors: [0x2b2, 0x385]
---
0x2a9 JUMPDEST
0x2aa DUP2
0x2ab DUP2
0x2ac LT
0x2ad ISZERO
0x2ae PUSH2 0x385
0x2b1 JUMPI
---
0x2a9: JUMPDEST 
0x2ac: V126 = LT S0 V27
0x2ad: V127 = ISZERO V126
0x2ae: V128 = 0x385
0x2b1: JUMPI 0x385 V127
---
Entry stack: [V10, 0x8a, V21, V24, V27, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x8a, V21, V24, V27, S0]

================================

Block 0x2b2
[0x2b2:0x373]
---
Predecessors: [0x2a9]
Successors: [0x374, 0x378]
---
0x2b2 DUP4
0x2b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c8 AND
0x2c9 PUSH1 0x40
0x2cb MLOAD
0x2cc DUP1
0x2cd DUP1
0x2ce PUSH32 0x77697468647261772875696e7432353629000000000000000000000000000000
0x2ef DUP2
0x2f0 MSTORE
0x2f1 POP
0x2f2 PUSH1 0x11
0x2f4 ADD
0x2f5 SWAP1
0x2f6 POP
0x2f7 PUSH1 0x40
0x2f9 MLOAD
0x2fa DUP1
0x2fb SWAP2
0x2fc SUB
0x2fd SWAP1
0x2fe SHA3
0x2ff PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x31d SWAP1
0x31e DIV
0x31f DUP5
0x320 PUSH1 0x40
0x322 MLOAD
0x323 DUP3
0x324 PUSH4 0xffffffff
0x329 AND
0x32a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x348 MUL
0x349 DUP2
0x34a MSTORE
0x34b PUSH1 0x4
0x34d ADD
0x34e DUP1
0x34f DUP3
0x350 DUP2
0x351 MSTORE
0x352 PUSH1 0x20
0x354 ADD
0x355 SWAP2
0x356 POP
0x357 POP
0x358 PUSH1 0x0
0x35a PUSH1 0x40
0x35c MLOAD
0x35d DUP1
0x35e DUP4
0x35f SUB
0x360 DUP2
0x361 PUSH1 0x0
0x363 DUP8
0x364 PUSH2 0x646e
0x367 GAS
0x368 SUB
0x369 CALL
0x36a SWAP3
0x36b POP
0x36c POP
0x36d POP
0x36e ISZERO
0x36f ISZERO
0x370 PUSH2 0x378
0x373 JUMPI
---
0x2b3: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c8: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x2c9: V131 = 0x40
0x2cb: V132 = M[0x40]
0x2ce: V133 = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x2f0: M[V132] = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x2f2: V134 = 0x11
0x2f4: V135 = ADD 0x11 V132
0x2f7: V136 = 0x40
0x2f9: V137 = M[0x40]
0x2fc: V138 = SUB V135 V137
0x2fe: V139 = SHA3 V137 V138
0x2ff: V140 = 0x100000000000000000000000000000000000000000000000000000000
0x31e: V141 = DIV V139 0x100000000000000000000000000000000000000000000000000000000
0x320: V142 = 0x40
0x322: V143 = M[0x40]
0x324: V144 = 0xffffffff
0x329: V145 = AND 0xffffffff V141
0x32a: V146 = 0x100000000000000000000000000000000000000000000000000000000
0x348: V147 = MUL 0x100000000000000000000000000000000000000000000000000000000 V145
0x34a: M[V143] = V147
0x34b: V148 = 0x4
0x34d: V149 = ADD 0x4 V143
0x351: M[V149] = V24
0x352: V150 = 0x20
0x354: V151 = ADD 0x20 V149
0x358: V152 = 0x0
0x35a: V153 = 0x40
0x35c: V154 = M[0x40]
0x35f: V155 = SUB V151 V154
0x361: V156 = 0x0
0x364: V157 = 0x646e
0x367: V158 = GAS
0x368: V159 = SUB V158 0x646e
0x369: V160 = CALL V159 V130 0x0 V154 V155 V154 0x0
0x36e: V161 = ISZERO V160
0x36f: V162 = ISZERO V161
0x370: V163 = 0x378
0x373: JUMPI 0x378 V162
---
Entry stack: [V10, 0x8a, V21, V24, V27, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x8a, V21, V24, V27, S0]

================================

Block 0x374
[0x374:0x377]
---
Predecessors: [0x2b2]
Successors: []
---
0x374 PUSH1 0x0
0x376 DUP1
0x377 REVERT
---
0x374: V164 = 0x0
0x377: REVERT 0x0 0x0
---
Entry stack: [V10, 0x8a, V21, V24, V27, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8a, V21, V24, V27, S0]

================================

Block 0x378
[0x378:0x384]
---
Predecessors: [0x2b2]
Successors: [0x2a9]
---
0x378 JUMPDEST
0x379 DUP1
0x37a DUP1
0x37b PUSH1 0x1
0x37d ADD
0x37e SWAP2
0x37f POP
0x380 POP
0x381 PUSH2 0x2a9
0x384 JUMP
---
0x378: JUMPDEST 
0x37b: V165 = 0x1
0x37d: V166 = ADD 0x1 S0
0x381: V167 = 0x2a9
0x384: JUMP 0x2a9
---
Entry stack: [V10, 0x8a, V21, V24, V27, S0]
Stack pops: 1
Stack additions: [V166]
Exit stack: [V10, 0x8a, V21, V24, V27, V166]

================================

Block 0x385
[0x385:0x3d7]
---
Predecessors: [0x2a9]
Successors: [0x3d8, 0x3dc]
---
0x385 JUMPDEST
0x386 CALLER
0x387 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39c AND
0x39d PUSH2 0x8fc
0x3a0 ADDRESS
0x3a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b6 AND
0x3b7 BALANCE
0x3b8 SWAP1
0x3b9 DUP2
0x3ba ISZERO
0x3bb MUL
0x3bc SWAP1
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 PUSH1 0x0
0x3c2 PUSH1 0x40
0x3c4 MLOAD
0x3c5 DUP1
0x3c6 DUP4
0x3c7 SUB
0x3c8 DUP2
0x3c9 DUP6
0x3ca DUP9
0x3cb DUP9
0x3cc CALL
0x3cd SWAP4
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 ISZERO
0x3d3 ISZERO
0x3d4 PUSH2 0x3dc
0x3d7 JUMPI
---
0x385: JUMPDEST 
0x386: V168 = CALLER
0x387: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x39c: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x39d: V171 = 0x8fc
0x3a0: V172 = ADDRESS
0x3a1: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x3b7: V175 = BALANCE V174
0x3ba: V176 = ISZERO V175
0x3bb: V177 = MUL V176 0x8fc
0x3bd: V178 = 0x40
0x3bf: V179 = M[0x40]
0x3c0: V180 = 0x0
0x3c2: V181 = 0x40
0x3c4: V182 = M[0x40]
0x3c7: V183 = SUB V179 V182
0x3cc: V184 = CALL V177 V170 V175 V182 V183 V182 0x0
0x3d2: V185 = ISZERO V184
0x3d3: V186 = ISZERO V185
0x3d4: V187 = 0x3dc
0x3d7: JUMPI 0x3dc V186
---
Entry stack: [V10, 0x8a, V21, V24, V27, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8a, V21, V24, V27, S0]

================================

Block 0x3d8
[0x3d8:0x3db]
---
Predecessors: [0x385]
Successors: []
---
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db REVERT
---
0x3d8: V188 = 0x0
0x3db: REVERT 0x0 0x0
---
Entry stack: [V10, 0x8a, V21, V24, V27, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8a, V21, V24, V27, S0]

================================

Block 0x3dc
[0x3dc:0x3e1]
---
Predecessors: [0x385]
Successors: [0x8a]
---
0x3dc JUMPDEST
0x3dd POP
0x3de POP
0x3df POP
0x3e0 POP
0x3e1 JUMP
---
0x3dc: JUMPDEST 
0x3e1: JUMP 0x8a
---
Entry stack: [V10, 0x8a, V21, V24, V27, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e2
[0x3e2:0x406]
---
Predecessors: [0x97]
Successors: [0x9f]
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x0
0x3e5 DUP1
0x3e6 SWAP1
0x3e7 SLOAD
0x3e8 SWAP1
0x3e9 PUSH2 0x100
0x3ec EXP
0x3ed SWAP1
0x3ee DIV
0x3ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x404 AND
0x405 DUP2
0x406 JUMP
---
0x3e2: JUMPDEST 
0x3e3: V189 = 0x0
0x3e7: V190 = S[0x0]
0x3e9: V191 = 0x100
0x3ec: V192 = EXP 0x100 0x0
0x3ee: V193 = DIV V190 0x1
0x3ef: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x404: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x406: JUMP 0x9f
---
Entry stack: [V10, 0x9f]
Stack pops: 1
Stack additions: [S0, V195]
Exit stack: [V10, 0x9f, V195]

================================

Block 0x407
[0x407:0x41f]
---
Predecessors: []
Successors: [0x420]
Has unresolved jump.
---
0x407 STOP
0x408 LOG1
0x409 PUSH6 0x627a7a723058
0x410 SHA3
0x411 MISSING 0xf9
0x412 ADD
0x413 MISSING 0xee
0x414 PUSH2 0x7343
0x417 REVERT
0x418 SWAP15
0x419 MISSING 0xed
0x41a DUP7
0x41b MISSING 0x1f
0x41c JUMP
0x41d MISSING 0xc3
0x41e MISSING 0xf8
0x41f JUMPI
---
0x407: STOP 
0x408: LOG S0 S1 S2
0x409: V196 = 0x627a7a723058
0x410: V197 = SHA3 0x627a7a723058 S3
0x411: MISSING 0xf9
0x412: V198 = ADD S0 S1
0x413: MISSING 0xee
0x414: V199 = 0x7343
0x417: REVERT 0x7343 S0
0x419: MISSING 0xed
0x41b: MISSING 0x1f
0x41c: JUMP S0
0x41d: MISSING 0xc3
0x41e: MISSING 0xf8
0x41f: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V197, V198, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, S6, S0, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0x420
[0x420:0x433]
---
Predecessors: [0x407]
Successors: []
---
0x420 MISSING 0xb8
0x421 PUSH18 0x7e8d3c2df0904aff08f80feb1c84ec0029
---
0x420: MISSING 0xb8
0x421: V200 = 0x7e8d3c2df0904aff08f80feb1c84ec0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x7e8d3c2df0904aff08f80feb1c84ec0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x77a911d
Entry block: 0x4c
Exit block: 0x8a
Body: 0x4c, 0x8a, 0xe1, 0x13a, 0x13e, 0x2a9, 0x2b2, 0x374, 0x378, 0x385, 0x3d8, 0x3dc

Function 1:
Public function signature: 0xb4a99a4e
Entry block: 0x8c
Exit block: 0x9f
Body: 0x8c, 0x93, 0x97, 0x9f, 0x3e2

Function 2:
Public fallback function
Entry block: 0x4a
Exit block: 0x4a
Body: 0x4a

