Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xe2]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xe2
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xe2
0xc: JUMPI 0xe2 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x261]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x813fbab
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x261
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x813fbab
0x22: V15 = EQ V13 0x813fbab
0x23: V16 = 0x261
0x26: JUMPI 0x261 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x28f]
---
0x27 DUP1
0x28 PUSH4 0x163f9b4f
0x2d EQ
0x2e PUSH2 0x28f
0x31 JUMPI
---
0x28: V17 = 0x163f9b4f
0x2d: V18 = EQ 0x163f9b4f V13
0x2e: V19 = 0x28f
0x31: JUMPI 0x28f V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x2a4]
---
0x32 DUP1
0x33 PUSH4 0x21365597
0x38 EQ
0x39 PUSH2 0x2a4
0x3c JUMPI
---
0x33: V20 = 0x21365597
0x38: V21 = EQ 0x21365597 V13
0x39: V22 = 0x2a4
0x3c: JUMPI 0x2a4 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x2c9]
---
0x3d DUP1
0x3e PUSH4 0x29dcb0cf
0x43 EQ
0x44 PUSH2 0x2c9
0x47 JUMPI
---
0x3e: V23 = 0x29dcb0cf
0x43: V24 = EQ 0x29dcb0cf V13
0x44: V25 = 0x2c9
0x47: JUMPI 0x2c9 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x2dc]
---
0x48 DUP1
0x49 PUSH4 0x5627df88
0x4e EQ
0x4f PUSH2 0x2dc
0x52 JUMPI
---
0x49: V26 = 0x5627df88
0x4e: V27 = EQ 0x5627df88 V13
0x4f: V28 = 0x2dc
0x52: JUMPI 0x2dc V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x2fb]
---
0x53 DUP1
0x54 PUSH4 0x641ccd83
0x59 EQ
0x5a PUSH2 0x2fb
0x5d JUMPI
---
0x54: V29 = 0x641ccd83
0x59: V30 = EQ 0x641ccd83 V13
0x5a: V31 = 0x2fb
0x5d: JUMPI 0x2fb V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x317]
---
0x5e DUP1
0x5f PUSH4 0x6769d1f9
0x64 EQ
0x65 PUSH2 0x317
0x68 JUMPI
---
0x5f: V32 = 0x6769d1f9
0x64: V33 = EQ 0x6769d1f9 V13
0x65: V34 = 0x317
0x68: JUMPI 0x317 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x32a]
---
0x69 DUP1
0x6a PUSH4 0x692aa97e
0x6f EQ
0x70 PUSH2 0x32a
0x73 JUMPI
---
0x6a: V35 = 0x692aa97e
0x6f: V36 = EQ 0x692aa97e V13
0x70: V37 = 0x32a
0x73: JUMPI 0x32a V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x351]
---
0x74 DUP1
0x75 PUSH4 0x6e66f6e9
0x7a EQ
0x7b PUSH2 0x351
0x7e JUMPI
---
0x75: V38 = 0x6e66f6e9
0x7a: V39 = EQ 0x6e66f6e9 V13
0x7b: V40 = 0x351
0x7e: JUMPI 0x351 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x380]
---
0x7f DUP1
0x80 PUSH4 0x7a3a0e84
0x85 EQ
0x86 PUSH2 0x380
0x89 JUMPI
---
0x80: V41 = 0x7a3a0e84
0x85: V42 = EQ 0x7a3a0e84 V13
0x86: V43 = 0x380
0x89: JUMPI 0x380 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x393]
---
0x8a DUP1
0x8b PUSH4 0x7b4fd96e
0x90 EQ
0x91 PUSH2 0x393
0x94 JUMPI
---
0x8b: V44 = 0x7b4fd96e
0x90: V45 = EQ 0x7b4fd96e V13
0x91: V46 = 0x393
0x94: JUMPI 0x393 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x3a6]
---
0x95 DUP1
0x96 PUSH4 0x8da5cb5b
0x9b EQ
0x9c PUSH2 0x3a6
0x9f JUMPI
---
0x96: V47 = 0x8da5cb5b
0x9b: V48 = EQ 0x8da5cb5b V13
0x9c: V49 = 0x3a6
0x9f: JUMPI 0x3a6 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x3b9]
---
0xa0 DUP1
0xa1 PUSH4 0xa035b1fe
0xa6 EQ
0xa7 PUSH2 0x3b9
0xaa JUMPI
---
0xa1: V50 = 0xa035b1fe
0xa6: V51 = EQ 0xa035b1fe V13
0xa7: V52 = 0x3b9
0xaa: JUMPI 0x3b9 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x3cc]
---
0xab DUP1
0xac PUSH4 0xd424f628
0xb1 EQ
0xb2 PUSH2 0x3cc
0xb5 JUMPI
---
0xac: V53 = 0xd424f628
0xb1: V54 = EQ 0xd424f628 V13
0xb2: V55 = 0x3cc
0xb5: JUMPI 0x3cc V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x3df]
---
0xb6 DUP1
0xb7 PUSH4 0xd67c1a7a
0xbc EQ
0xbd PUSH2 0x3df
0xc0 JUMPI
---
0xb7: V56 = 0xd67c1a7a
0xbc: V57 = EQ 0xd67c1a7a V13
0xbd: V58 = 0x3df
0xc0: JUMPI 0x3df V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x3f2]
---
0xc1 DUP1
0xc2 PUSH4 0xd8c02754
0xc7 EQ
0xc8 PUSH2 0x3f2
0xcb JUMPI
---
0xc2: V59 = 0xd8c02754
0xc7: V60 = EQ 0xd8c02754 V13
0xc8: V61 = 0x3f2
0xcb: JUMPI 0x3f2 V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x461]
---
0xcc DUP1
0xcd PUSH4 0xf2fde38b
0xd2 EQ
0xd3 PUSH2 0x461
0xd6 JUMPI
---
0xcd: V62 = 0xf2fde38b
0xd2: V63 = EQ 0xf2fde38b V13
0xd3: V64 = 0x461
0xd6: JUMPI 0x461 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x480]
---
0xd7 DUP1
0xd8 PUSH4 0xf8b2cb4f
0xdd EQ
0xde PUSH2 0x480
0xe1 JUMPI
---
0xd8: V65 = 0xf8b2cb4f
0xdd: V66 = EQ 0xf8b2cb4f V13
0xde: V67 = 0x480
0xe1: JUMPI 0x480 V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xe2
[0xe2:0xfd]
---
Predecessors: [0x0, 0xd7]
Successors: [0xfe, 0x105]
---
0xe2 JUMPDEST
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 PUSH1 0x0
0xe8 PUSH1 0x7
0xea PUSH1 0x15
0xec SWAP1
0xed SLOAD
0xee SWAP1
0xef PUSH2 0x100
0xf2 EXP
0xf3 SWAP1
0xf4 DIV
0xf5 PUSH1 0xff
0xf7 AND
0xf8 ISZERO
0xf9 DUP1
0xfa PUSH2 0x105
0xfd JUMPI
---
0xe2: JUMPDEST 
0xe3: V68 = 0x0
0xe6: V69 = 0x0
0xe8: V70 = 0x7
0xea: V71 = 0x15
0xed: V72 = S[0x7]
0xef: V73 = 0x100
0xf2: V74 = EXP 0x100 0x15
0xf4: V75 = DIV V72 0x1000000000000000000000000000000000000000000
0xf5: V76 = 0xff
0xf7: V77 = AND 0xff V75
0xf8: V78 = ISZERO V77
0xfa: V79 = 0x105
0xfd: JUMPI 0x105 V78
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V78]
Exit stack: [V13, 0x0, 0x0, 0x0, V78]

================================

Block 0xfe
[0xfe:0x104]
---
Predecessors: [0xe2]
Successors: [0x105]
---
0xfe POP
0xff PUSH1 0x5
0x101 SLOAD
0x102 TIMESTAMP
0x103 LT
0x104 ISZERO
---
0xff: V80 = 0x5
0x101: V81 = S[0x5]
0x102: V82 = TIMESTAMP
0x103: V83 = LT V82 V81
0x104: V84 = ISZERO V83
---
Entry stack: [V13, 0x0, 0x0, 0x0, V78]
Stack pops: 1
Stack additions: [V84]
Exit stack: [V13, 0x0, 0x0, 0x0, V84]

================================

Block 0x105
[0x105:0x10a]
---
Predecessors: [0xe2, 0xfe]
Successors: [0x10b, 0x10f]
---
0x105 JUMPDEST
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0x105: JUMPDEST 
0x106: V85 = ISZERO S0
0x107: V86 = 0x10f
0x10a: JUMPI 0x10f V85
---
Entry stack: [V13, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0x105]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V87 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x10f
[0x10f:0x12f]
---
Predecessors: [0x105]
Successors: [0x130, 0x131]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 SWAP3
0x112 POP
0x113 DUP3
0x114 PUSH2 0x3e8
0x117 MUL
0x118 SWAP2
0x119 POP
0x11a PUSH1 0x8
0x11c PUSH1 0xa
0x11e EXP
0x11f PUSH2 0x3e8
0x122 PUSH1 0x6
0x124 SLOAD
0x125 PUSH1 0x2
0x127 SLOAD
0x128 DUP6
0x129 DUP2
0x12a ISZERO
0x12b ISZERO
0x12c PUSH2 0x131
0x12f JUMPI
---
0x10f: JUMPDEST 
0x110: V88 = CALLVALUE
0x114: V89 = 0x3e8
0x117: V90 = MUL 0x3e8 V88
0x11a: V91 = 0x8
0x11c: V92 = 0xa
0x11e: V93 = EXP 0xa 0x8
0x11f: V94 = 0x3e8
0x122: V95 = 0x6
0x124: V96 = S[0x6]
0x125: V97 = 0x2
0x127: V98 = S[0x2]
0x12a: V99 = ISZERO V98
0x12b: V100 = ISZERO V99
0x12c: V101 = 0x131
0x12f: JUMPI 0x131 V100
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V88, V90, S0, 0x5f5e100, 0x3e8, V96, V98, V90]
Exit stack: [V13, V88, V90, 0x0, 0x5f5e100, 0x3e8, V96, V98, V90]

================================

Block 0x130
[0x130:0x130]
---
Predecessors: [0x10f]
Successors: []
---
0x130 INVALID
---
0x130: INVALID 
---
Entry stack: [V13, V88, V90, 0x0, 0x5f5e100, 0x3e8, V96, V98, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V88, V90, 0x0, 0x5f5e100, 0x3e8, V96, V98, V90]

================================

Block 0x131
[0x131:0x13a]
---
Predecessors: [0x10f]
Successors: [0x13b, 0x13c]
---
0x131 JUMPDEST
0x132 DIV
0x133 MUL
0x134 DUP2
0x135 ISZERO
0x136 ISZERO
0x137 PUSH2 0x13c
0x13a JUMPI
---
0x131: JUMPDEST 
0x132: V102 = DIV V90 V98
0x133: V103 = MUL V102 V96
0x135: V104 = ISZERO 0x3e8
0x136: V105 = ISZERO 0x0
0x137: V106 = 0x13c
0x13a: JUMPI 0x13c 0x1
---
Entry stack: [V13, V88, V90, 0x0, 0x5f5e100, 0x3e8, V96, V98, V90]
Stack pops: 4
Stack additions: [S3, V103]
Exit stack: [V13, V88, V90, 0x0, 0x5f5e100, 0x3e8, V103]

================================

Block 0x13b
[0x13b:0x13b]
---
Predecessors: [0x131]
Successors: []
---
0x13b INVALID
---
0x13b: INVALID 
---
Entry stack: [V13, V88, V90, 0x0, 0x5f5e100, 0x3e8, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V88, V90, 0x0, 0x5f5e100, 0x3e8, V103]

================================

Block 0x13c
[0x13c:0x147]
---
Predecessors: [0x131]
Successors: [0x148, 0x152]
---
0x13c JUMPDEST
0x13d DIV
0x13e MUL
0x13f SWAP1
0x140 POP
0x141 DUP1
0x142 ISZERO
0x143 DUP1
0x144 PUSH2 0x152
0x147 JUMPI
---
0x13c: JUMPDEST 
0x13d: V107 = DIV V103 0x3e8
0x13e: V108 = MUL V107 0x5f5e100
0x142: V109 = ISZERO V108
0x144: V110 = 0x152
0x147: JUMPI 0x152 V109
---
Entry stack: [V13, V88, V90, 0x0, 0x5f5e100, 0x3e8, V103]
Stack pops: 4
Stack additions: [V108, V109]
Exit stack: [V13, V88, V90, V108, V109]

================================

Block 0x148
[0x148:0x151]
---
Predecessors: [0x13c]
Successors: [0x152]
---
0x148 POP
0x149 PUSH1 0x3
0x14b SLOAD
0x14c DUP2
0x14d PUSH1 0x4
0x14f SLOAD
0x150 ADD
0x151 GT
---
0x149: V111 = 0x3
0x14b: V112 = S[0x3]
0x14d: V113 = 0x4
0x14f: V114 = S[0x4]
0x150: V115 = ADD V114 V108
0x151: V116 = GT V115 V112
---
Entry stack: [V13, V88, V90, V108, V109]
Stack pops: 2
Stack additions: [S1, V116]
Exit stack: [V13, V88, V90, V108, V116]

================================

Block 0x152
[0x152:0x157]
---
Predecessors: [0x13c, 0x148]
Successors: [0x158, 0x15c]
---
0x152 JUMPDEST
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x152: JUMPDEST 
0x153: V117 = ISZERO S0
0x154: V118 = 0x15c
0x157: JUMPI 0x15c V117
---
Entry stack: [V13, V88, V90, V108, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, V88, V90, V108]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x152]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V119 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V13, V88, V90, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V88, V90, V108]

================================

Block 0x15c
[0x15c:0x1e0]
---
Predecessors: [0x152]
Successors: [0x1e1, 0x1e5]
---
0x15c JUMPDEST
0x15d CALLER
0x15e PUSH1 0x1
0x160 PUSH1 0xa0
0x162 PUSH1 0x2
0x164 EXP
0x165 SUB
0x166 DUP2
0x167 DUP2
0x168 AND
0x169 PUSH1 0x0
0x16b SWAP1
0x16c DUP2
0x16d MSTORE
0x16e PUSH1 0x8
0x170 PUSH1 0x20
0x172 MSTORE
0x173 PUSH1 0x40
0x175 SWAP1
0x176 DUP2
0x177 SWAP1
0x178 SHA3
0x179 DUP1
0x17a SLOAD
0x17b PUSH4 0x5f5e100
0x180 DUP9
0x181 DIV
0x182 ADD
0x183 DUP2
0x184 SSTORE
0x185 PUSH1 0x1
0x187 ADD
0x188 DUP1
0x189 SLOAD
0x18a DUP6
0x18b ADD
0x18c SWAP1
0x18d SSTORE
0x18e PUSH1 0x4
0x190 DUP1
0x191 SLOAD
0x192 DUP6
0x193 ADD
0x194 SWAP1
0x195 SSTORE
0x196 PUSH1 0x7
0x198 SLOAD
0x199 SWAP1
0x19a SWAP2
0x19b AND
0x19c SWAP2
0x19d PUSH4 0xa9059cbb
0x1a2 SWAP2
0x1a3 DUP5
0x1a4 SWAP1
0x1a5 MLOAD
0x1a6 PUSH1 0xe0
0x1a8 PUSH1 0x2
0x1aa EXP
0x1ab PUSH4 0xffffffff
0x1b0 DUP6
0x1b1 AND
0x1b2 MUL
0x1b3 DUP2
0x1b4 MSTORE
0x1b5 PUSH1 0x1
0x1b7 PUSH1 0xa0
0x1b9 PUSH1 0x2
0x1bb EXP
0x1bc SUB
0x1bd SWAP1
0x1be SWAP3
0x1bf AND
0x1c0 PUSH1 0x4
0x1c2 DUP4
0x1c3 ADD
0x1c4 MSTORE
0x1c5 PUSH1 0x24
0x1c7 DUP3
0x1c8 ADD
0x1c9 MSTORE
0x1ca PUSH1 0x44
0x1cc ADD
0x1cd PUSH1 0x0
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 DUP4
0x1d4 SUB
0x1d5 DUP2
0x1d6 PUSH1 0x0
0x1d8 DUP8
0x1d9 DUP1
0x1da EXTCODESIZE
0x1db ISZERO
0x1dc ISZERO
0x1dd PUSH2 0x1e5
0x1e0 JUMPI
---
0x15c: JUMPDEST 
0x15d: V120 = CALLER
0x15e: V121 = 0x1
0x160: V122 = 0xa0
0x162: V123 = 0x2
0x164: V124 = EXP 0x2 0xa0
0x165: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x168: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x169: V127 = 0x0
0x16d: M[0x0] = V126
0x16e: V128 = 0x8
0x170: V129 = 0x20
0x172: M[0x20] = 0x8
0x173: V130 = 0x40
0x178: V131 = SHA3 0x0 0x40
0x17a: V132 = S[V131]
0x17b: V133 = 0x5f5e100
0x181: V134 = DIV V88 0x5f5e100
0x182: V135 = ADD V134 V132
0x184: S[V131] = V135
0x185: V136 = 0x1
0x187: V137 = ADD 0x1 V131
0x189: V138 = S[V137]
0x18b: V139 = ADD V108 V138
0x18d: S[V137] = V139
0x18e: V140 = 0x4
0x191: V141 = S[0x4]
0x193: V142 = ADD V108 V141
0x195: S[0x4] = V142
0x196: V143 = 0x7
0x198: V144 = S[0x7]
0x19b: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x19d: V146 = 0xa9059cbb
0x1a5: V147 = M[0x40]
0x1a6: V148 = 0xe0
0x1a8: V149 = 0x2
0x1aa: V150 = EXP 0x2 0xe0
0x1ab: V151 = 0xffffffff
0x1b1: V152 = AND 0xa9059cbb 0xffffffff
0x1b2: V153 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x1b4: M[V147] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1b5: V154 = 0x1
0x1b7: V155 = 0xa0
0x1b9: V156 = 0x2
0x1bb: V157 = EXP 0x2 0xa0
0x1bc: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bf: V159 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V160 = 0x4
0x1c3: V161 = ADD V147 0x4
0x1c4: M[V161] = V159
0x1c5: V162 = 0x24
0x1c8: V163 = ADD V147 0x24
0x1c9: M[V163] = V108
0x1ca: V164 = 0x44
0x1cc: V165 = ADD 0x44 V147
0x1cd: V166 = 0x0
0x1cf: V167 = 0x40
0x1d1: V168 = M[0x40]
0x1d4: V169 = SUB V165 V168
0x1d6: V170 = 0x0
0x1da: V171 = EXTCODESIZE V145
0x1db: V172 = ISZERO V171
0x1dc: V173 = ISZERO V172
0x1dd: V174 = 0x1e5
0x1e0: JUMPI 0x1e5 V173
---
Entry stack: [V13, V88, V90, V108]
Stack pops: 3
Stack additions: [S2, S1, S0, V145, 0xa9059cbb, V165, 0x0, V168, V169, V168, 0x0, V145]
Exit stack: [V13, V88, V90, V108, V145, 0xa9059cbb, V165, 0x0, V168, V169, V168, 0x0, V145]

================================

Block 0x1e1
[0x1e1:0x1e4]
---
Predecessors: [0x15c]
Successors: []
---
0x1e1 PUSH1 0x0
0x1e3 DUP1
0x1e4 REVERT
---
0x1e1: V175 = 0x0
0x1e4: REVERT 0x0 0x0
---
Entry stack: [V13, V88, V90, V108, V145, 0xa9059cbb, V165, 0x0, V168, V169, V168, 0x0, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V88, V90, V108, V145, 0xa9059cbb, V165, 0x0, V168, V169, V168, 0x0, V145]

================================

Block 0x1e5
[0x1e5:0x1f1]
---
Predecessors: [0x15c]
Successors: [0x1f2, 0x1f6]
---
0x1e5 JUMPDEST
0x1e6 PUSH2 0x2c6
0x1e9 GAS
0x1ea SUB
0x1eb CALL
0x1ec ISZERO
0x1ed ISZERO
0x1ee PUSH2 0x1f6
0x1f1 JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V176 = 0x2c6
0x1e9: V177 = GAS
0x1ea: V178 = SUB V177 0x2c6
0x1eb: V179 = CALL V178 V145 0x0 V168 V169 V168 0x0
0x1ec: V180 = ISZERO V179
0x1ed: V181 = ISZERO V180
0x1ee: V182 = 0x1f6
0x1f1: JUMPI 0x1f6 V181
---
Entry stack: [V13, V88, V90, V108, V145, 0xa9059cbb, V165, 0x0, V168, V169, V168, 0x0, V145]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V88, V90, V108, V145, 0xa9059cbb, V165]

================================

Block 0x1f2
[0x1f2:0x1f5]
---
Predecessors: [0x1e5]
Successors: []
---
0x1f2 PUSH1 0x0
0x1f4 DUP1
0x1f5 REVERT
---
0x1f2: V183 = 0x0
0x1f5: REVERT 0x0 0x0
---
Entry stack: [V13, V88, V90, V108, V145, 0xa9059cbb, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V88, V90, V108, V145, 0xa9059cbb, V165]

================================

Block 0x1f6
[0x1f6:0x260]
---
Predecessors: [0x1e5]
Successors: []
---
0x1f6 JUMPDEST
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa PUSH32 0x580e269b852feaa417dcc438230790bb21e5d485bf49ff3e8615e5240c8fa928
0x21b CALLER
0x21c DUP5
0x21d DUP4
0x21e PUSH1 0x4
0x220 SLOAD
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 DUP6
0x226 PUSH1 0x1
0x228 PUSH1 0xa0
0x22a PUSH1 0x2
0x22c EXP
0x22d SUB
0x22e AND
0x22f PUSH1 0x1
0x231 PUSH1 0xa0
0x233 PUSH1 0x2
0x235 EXP
0x236 SUB
0x237 AND
0x238 DUP2
0x239 MSTORE
0x23a PUSH1 0x20
0x23c ADD
0x23d DUP5
0x23e DUP2
0x23f MSTORE
0x240 PUSH1 0x20
0x242 ADD
0x243 DUP4
0x244 DUP2
0x245 MSTORE
0x246 PUSH1 0x20
0x248 ADD
0x249 DUP3
0x24a DUP2
0x24b MSTORE
0x24c PUSH1 0x20
0x24e ADD
0x24f SWAP5
0x250 POP
0x251 POP
0x252 POP
0x253 POP
0x254 POP
0x255 PUSH1 0x40
0x257 MLOAD
0x258 DUP1
0x259 SWAP2
0x25a SUB
0x25b SWAP1
0x25c LOG1
0x25d POP
0x25e POP
0x25f POP
0x260 STOP
---
0x1f6: JUMPDEST 
0x1fa: V184 = 0x580e269b852feaa417dcc438230790bb21e5d485bf49ff3e8615e5240c8fa928
0x21b: V185 = CALLER
0x21e: V186 = 0x4
0x220: V187 = S[0x4]
0x221: V188 = 0x40
0x223: V189 = M[0x40]
0x226: V190 = 0x1
0x228: V191 = 0xa0
0x22a: V192 = 0x2
0x22c: V193 = EXP 0x2 0xa0
0x22d: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22e: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x22f: V196 = 0x1
0x231: V197 = 0xa0
0x233: V198 = 0x2
0x235: V199 = EXP 0x2 0xa0
0x236: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x237: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x239: M[V189] = V201
0x23a: V202 = 0x20
0x23c: V203 = ADD 0x20 V189
0x23f: M[V203] = V88
0x240: V204 = 0x20
0x242: V205 = ADD 0x20 V203
0x245: M[V205] = V108
0x246: V206 = 0x20
0x248: V207 = ADD 0x20 V205
0x24b: M[V207] = V187
0x24c: V208 = 0x20
0x24e: V209 = ADD 0x20 V207
0x255: V210 = 0x40
0x257: V211 = M[0x40]
0x25a: V212 = SUB V209 V211
0x25c: LOG V211 V212 0x580e269b852feaa417dcc438230790bb21e5d485bf49ff3e8615e5240c8fa928
0x260: STOP 
---
Entry stack: [V13, V88, V90, V108, V145, 0xa9059cbb, V165]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x261
[0x261:0x267]
---
Predecessors: [0xd]
Successors: [0x268, 0x26c]
---
0x261 JUMPDEST
0x262 CALLVALUE
0x263 ISZERO
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x261: JUMPDEST 
0x262: V213 = CALLVALUE
0x263: V214 = ISZERO V213
0x264: V215 = 0x26c
0x267: JUMPI 0x26c V214
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x261]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V216 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x26c
[0x26c:0x276]
---
Predecessors: [0x261]
Successors: [0x49f]
---
0x26c JUMPDEST
0x26d PUSH2 0x277
0x270 PUSH1 0x4
0x272 CALLDATALOAD
0x273 PUSH2 0x49f
0x276 JUMP
---
0x26c: JUMPDEST 
0x26d: V217 = 0x277
0x270: V218 = 0x4
0x272: V219 = CALLDATALOAD 0x4
0x273: V220 = 0x49f
0x276: JUMP 0x49f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x277, V219]
Exit stack: [V13, 0x277, V219]

================================

Block 0x277
[0x277:0x28e]
---
Predecessors: [0x49f, 0x566, 0xb44]
Successors: []
---
0x277 JUMPDEST
0x278 PUSH1 0x40
0x27a MLOAD
0x27b SWAP2
0x27c DUP3
0x27d MSTORE
0x27e PUSH1 0x20
0x280 DUP3
0x281 ADD
0x282 MSTORE
0x283 PUSH1 0x40
0x285 SWAP1
0x286 DUP2
0x287 ADD
0x288 SWAP1
0x289 MLOAD
0x28a DUP1
0x28b SWAP2
0x28c SUB
0x28d SWAP1
0x28e RETURN
---
0x277: JUMPDEST 
0x278: V221 = 0x40
0x27a: V222 = M[0x40]
0x27d: M[V222] = S1
0x27e: V223 = 0x20
0x281: V224 = ADD V222 0x20
0x282: M[V224] = S0
0x283: V225 = 0x40
0x287: V226 = ADD 0x40 V222
0x289: V227 = M[0x40]
0x28c: V228 = SUB V226 V227
0x28e: RETURN V227 V228
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S2]

================================

Block 0x28f
[0x28f:0x295]
---
Predecessors: [0x27]
Successors: [0x296, 0x29a]
---
0x28f JUMPDEST
0x290 CALLVALUE
0x291 ISZERO
0x292 PUSH2 0x29a
0x295 JUMPI
---
0x28f: JUMPDEST 
0x290: V229 = CALLVALUE
0x291: V230 = ISZERO V229
0x292: V231 = 0x29a
0x295: JUMPI 0x29a V230
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x296
[0x296:0x299]
---
Predecessors: [0x28f]
Successors: []
---
0x296 PUSH1 0x0
0x298 DUP1
0x299 REVERT
---
0x296: V232 = 0x0
0x299: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x29a
[0x29a:0x2a1]
---
Predecessors: [0x28f]
Successors: [0x4a9]
---
0x29a JUMPDEST
0x29b PUSH2 0x2a2
0x29e PUSH2 0x4a9
0x2a1 JUMP
---
0x29a: JUMPDEST 
0x29b: V233 = 0x2a2
0x29e: V234 = 0x4a9
0x2a1: JUMP 0x4a9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2a2]
Exit stack: [V13, 0x2a2]

================================

Block 0x2a2
[0x2a2:0x2a3]
---
Predecessors: [0x556, 0x716, 0x91c, 0xac7]
Successors: []
---
0x2a2 JUMPDEST
0x2a3 STOP
---
0x2a2: JUMPDEST 
0x2a3: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a4
[0x2a4:0x2aa]
---
Predecessors: [0x32]
Successors: [0x2ab, 0x2af]
---
0x2a4 JUMPDEST
0x2a5 CALLVALUE
0x2a6 ISZERO
0x2a7 PUSH2 0x2af
0x2aa JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V235 = CALLVALUE
0x2a6: V236 = ISZERO V235
0x2a7: V237 = 0x2af
0x2aa: JUMPI 0x2af V236
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ab
[0x2ab:0x2ae]
---
Predecessors: [0x2a4]
Successors: []
---
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae REVERT
---
0x2ab: V238 = 0x0
0x2ae: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2af
[0x2af:0x2b6]
---
Predecessors: [0x2a4]
Successors: [0x55a]
---
0x2af JUMPDEST
0x2b0 PUSH2 0x2b7
0x2b3 PUSH2 0x55a
0x2b6 JUMP
---
0x2af: JUMPDEST 
0x2b0: V239 = 0x2b7
0x2b3: V240 = 0x55a
0x2b6: JUMP 0x55a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2b7]
Exit stack: [V13, 0x2b7]

================================

Block 0x2b7
[0x2b7:0x2c8]
---
Predecessors: [0x55a, 0x560, 0x71b, 0x752, 0x758, 0x76d]
Successors: []
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb SWAP1
0x2bc DUP2
0x2bd MSTORE
0x2be PUSH1 0x20
0x2c0 ADD
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 DUP1
0x2c5 SWAP2
0x2c6 SUB
0x2c7 SWAP1
0x2c8 RETURN
---
0x2b7: JUMPDEST 
0x2b8: V241 = 0x40
0x2ba: V242 = M[0x40]
0x2bd: M[V242] = S0
0x2be: V243 = 0x20
0x2c0: V244 = ADD 0x20 V242
0x2c1: V245 = 0x40
0x2c3: V246 = M[0x40]
0x2c6: V247 = SUB V244 V246
0x2c8: RETURN V246 V247
---
Entry stack: [V13, 0x2b7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x2b7]

================================

Block 0x2c9
[0x2c9:0x2cf]
---
Predecessors: [0x3d]
Successors: [0x2d0, 0x2d4]
---
0x2c9 JUMPDEST
0x2ca CALLVALUE
0x2cb ISZERO
0x2cc PUSH2 0x2d4
0x2cf JUMPI
---
0x2c9: JUMPDEST 
0x2ca: V248 = CALLVALUE
0x2cb: V249 = ISZERO V248
0x2cc: V250 = 0x2d4
0x2cf: JUMPI 0x2d4 V249
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2d0
[0x2d0:0x2d3]
---
Predecessors: [0x2c9]
Successors: []
---
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 REVERT
---
0x2d0: V251 = 0x0
0x2d3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2d4
[0x2d4:0x2db]
---
Predecessors: [0x2c9]
Successors: [0x560]
---
0x2d4 JUMPDEST
0x2d5 PUSH2 0x2b7
0x2d8 PUSH2 0x560
0x2db JUMP
---
0x2d4: JUMPDEST 
0x2d5: V252 = 0x2b7
0x2d8: V253 = 0x560
0x2db: JUMP 0x560
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2b7]
Exit stack: [V13, 0x2b7]

================================

Block 0x2dc
[0x2dc:0x2e2]
---
Predecessors: [0x48]
Successors: [0x2e3, 0x2e7]
---
0x2dc JUMPDEST
0x2dd CALLVALUE
0x2de ISZERO
0x2df PUSH2 0x2e7
0x2e2 JUMPI
---
0x2dc: JUMPDEST 
0x2dd: V254 = CALLVALUE
0x2de: V255 = ISZERO V254
0x2df: V256 = 0x2e7
0x2e2: JUMPI 0x2e7 V255
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e3
[0x2e3:0x2e6]
---
Predecessors: [0x2dc]
Successors: []
---
0x2e3 PUSH1 0x0
0x2e5 DUP1
0x2e6 REVERT
---
0x2e3: V257 = 0x0
0x2e6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e7
[0x2e7:0x2fa]
---
Predecessors: [0x2dc]
Successors: [0x566]
---
0x2e7 JUMPDEST
0x2e8 PUSH2 0x277
0x2eb PUSH1 0x1
0x2ed PUSH1 0xa0
0x2ef PUSH1 0x2
0x2f1 EXP
0x2f2 SUB
0x2f3 PUSH1 0x4
0x2f5 CALLDATALOAD
0x2f6 AND
0x2f7 PUSH2 0x566
0x2fa JUMP
---
0x2e7: JUMPDEST 
0x2e8: V258 = 0x277
0x2eb: V259 = 0x1
0x2ed: V260 = 0xa0
0x2ef: V261 = 0x2
0x2f1: V262 = EXP 0x2 0xa0
0x2f2: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f3: V264 = 0x4
0x2f5: V265 = CALLDATALOAD 0x4
0x2f6: V266 = AND V265 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V267 = 0x566
0x2fa: JUMP 0x566
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x277, V266]
Exit stack: [V13, 0x277, V266]

================================

Block 0x2fb
[0x2fb:0x301]
---
Predecessors: [0x53]
Successors: [0x302, 0x306]
---
0x2fb JUMPDEST
0x2fc CALLVALUE
0x2fd ISZERO
0x2fe PUSH2 0x306
0x301 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V268 = CALLVALUE
0x2fd: V269 = ISZERO V268
0x2fe: V270 = 0x306
0x301: JUMPI 0x306 V269
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x302
[0x302:0x305]
---
Predecessors: [0x2fb]
Successors: []
---
0x302 PUSH1 0x0
0x304 DUP1
0x305 REVERT
---
0x302: V271 = 0x0
0x305: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x306
[0x306:0x316]
---
Predecessors: [0x2fb]
Successors: [0x57f]
---
0x306 JUMPDEST
0x307 PUSH2 0x2a2
0x30a PUSH1 0x4
0x30c CALLDATALOAD
0x30d PUSH1 0x24
0x30f CALLDATALOAD
0x310 PUSH1 0x44
0x312 CALLDATALOAD
0x313 PUSH2 0x57f
0x316 JUMP
---
0x306: JUMPDEST 
0x307: V272 = 0x2a2
0x30a: V273 = 0x4
0x30c: V274 = CALLDATALOAD 0x4
0x30d: V275 = 0x24
0x30f: V276 = CALLDATALOAD 0x24
0x310: V277 = 0x44
0x312: V278 = CALLDATALOAD 0x44
0x313: V279 = 0x57f
0x316: JUMP 0x57f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2a2, V274, V276, V278]
Exit stack: [V13, 0x2a2, V274, V276, V278]

================================

Block 0x317
[0x317:0x31d]
---
Predecessors: [0x5e]
Successors: [0x31e, 0x322]
---
0x317 JUMPDEST
0x318 CALLVALUE
0x319 ISZERO
0x31a PUSH2 0x322
0x31d JUMPI
---
0x317: JUMPDEST 
0x318: V280 = CALLVALUE
0x319: V281 = ISZERO V280
0x31a: V282 = 0x322
0x31d: JUMPI 0x322 V281
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x31e
[0x31e:0x321]
---
Predecessors: [0x317]
Successors: []
---
0x31e PUSH1 0x0
0x320 DUP1
0x321 REVERT
---
0x31e: V283 = 0x0
0x321: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x322
[0x322:0x329]
---
Predecessors: [0x317]
Successors: [0x71b]
---
0x322 JUMPDEST
0x323 PUSH2 0x2b7
0x326 PUSH2 0x71b
0x329 JUMP
---
0x322: JUMPDEST 
0x323: V284 = 0x2b7
0x326: V285 = 0x71b
0x329: JUMP 0x71b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2b7]
Exit stack: [V13, 0x2b7]

================================

Block 0x32a
[0x32a:0x330]
---
Predecessors: [0x69]
Successors: [0x331, 0x335]
---
0x32a JUMPDEST
0x32b CALLVALUE
0x32c ISZERO
0x32d PUSH2 0x335
0x330 JUMPI
---
0x32a: JUMPDEST 
0x32b: V286 = CALLVALUE
0x32c: V287 = ISZERO V286
0x32d: V288 = 0x335
0x330: JUMPI 0x335 V287
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x331
[0x331:0x334]
---
Predecessors: [0x32a]
Successors: []
---
0x331 PUSH1 0x0
0x333 DUP1
0x334 REVERT
---
0x331: V289 = 0x0
0x334: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x335
[0x335:0x33c]
---
Predecessors: [0x32a]
Successors: [0x721]
---
0x335 JUMPDEST
0x336 PUSH2 0x33d
0x339 PUSH2 0x721
0x33c JUMP
---
0x335: JUMPDEST 
0x336: V290 = 0x33d
0x339: V291 = 0x721
0x33c: JUMP 0x721
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x33d]
Exit stack: [V13, 0x33d]

================================

Block 0x33d
[0x33d:0x350]
---
Predecessors: [0x721, 0x773]
Successors: []
---
0x33d JUMPDEST
0x33e PUSH1 0x40
0x340 MLOAD
0x341 SWAP1
0x342 ISZERO
0x343 ISZERO
0x344 DUP2
0x345 MSTORE
0x346 PUSH1 0x20
0x348 ADD
0x349 PUSH1 0x40
0x34b MLOAD
0x34c DUP1
0x34d SWAP2
0x34e SUB
0x34f SWAP1
0x350 RETURN
---
0x33d: JUMPDEST 
0x33e: V292 = 0x40
0x340: V293 = M[0x40]
0x342: V294 = ISZERO S0
0x343: V295 = ISZERO V294
0x345: M[V293] = V295
0x346: V296 = 0x20
0x348: V297 = ADD 0x20 V293
0x349: V298 = 0x40
0x34b: V299 = M[0x40]
0x34e: V300 = SUB V297 V299
0x350: RETURN V299 V300
---
Entry stack: [V13, 0x33d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x33d]

================================

Block 0x351
[0x351:0x357]
---
Predecessors: [0x74]
Successors: [0x358, 0x35c]
---
0x351 JUMPDEST
0x352 CALLVALUE
0x353 ISZERO
0x354 PUSH2 0x35c
0x357 JUMPI
---
0x351: JUMPDEST 
0x352: V301 = CALLVALUE
0x353: V302 = ISZERO V301
0x354: V303 = 0x35c
0x357: JUMPI 0x35c V302
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x358
[0x358:0x35b]
---
Predecessors: [0x351]
Successors: []
---
0x358 PUSH1 0x0
0x35a DUP1
0x35b REVERT
---
0x358: V304 = 0x0
0x35b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x35c
[0x35c:0x363]
---
Predecessors: [0x351]
Successors: [0x743]
---
0x35c JUMPDEST
0x35d PUSH2 0x364
0x360 PUSH2 0x743
0x363 JUMP
---
0x35c: JUMPDEST 
0x35d: V305 = 0x364
0x360: V306 = 0x743
0x363: JUMP 0x743
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x364]
Exit stack: [V13, 0x364]

================================

Block 0x364
[0x364:0x37f]
---
Predecessors: [0x743, 0x75e]
Successors: []
---
0x364 JUMPDEST
0x365 PUSH1 0x40
0x367 MLOAD
0x368 PUSH1 0x1
0x36a PUSH1 0xa0
0x36c PUSH1 0x2
0x36e EXP
0x36f SUB
0x370 SWAP1
0x371 SWAP2
0x372 AND
0x373 DUP2
0x374 MSTORE
0x375 PUSH1 0x20
0x377 ADD
0x378 PUSH1 0x40
0x37a MLOAD
0x37b DUP1
0x37c SWAP2
0x37d SUB
0x37e SWAP1
0x37f RETURN
---
0x364: JUMPDEST 
0x365: V307 = 0x40
0x367: V308 = M[0x40]
0x368: V309 = 0x1
0x36a: V310 = 0xa0
0x36c: V311 = 0x2
0x36e: V312 = EXP 0x2 0xa0
0x36f: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x372: V314 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x374: M[V308] = V314
0x375: V315 = 0x20
0x377: V316 = ADD 0x20 V308
0x378: V317 = 0x40
0x37a: V318 = M[0x40]
0x37d: V319 = SUB V316 V318
0x37f: RETURN V318 V319
---
Entry stack: [V13, 0x364, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x364]

================================

Block 0x380
[0x380:0x386]
---
Predecessors: [0x7f]
Successors: [0x387, 0x38b]
---
0x380 JUMPDEST
0x381 CALLVALUE
0x382 ISZERO
0x383 PUSH2 0x38b
0x386 JUMPI
---
0x380: JUMPDEST 
0x381: V320 = CALLVALUE
0x382: V321 = ISZERO V320
0x383: V322 = 0x38b
0x386: JUMPI 0x38b V321
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x387
[0x387:0x38a]
---
Predecessors: [0x380]
Successors: []
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
---
0x387: V323 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x38b
[0x38b:0x392]
---
Predecessors: [0x380]
Successors: [0x752]
---
0x38b JUMPDEST
0x38c PUSH2 0x2b7
0x38f PUSH2 0x752
0x392 JUMP
---
0x38b: JUMPDEST 
0x38c: V324 = 0x2b7
0x38f: V325 = 0x752
0x392: JUMP 0x752
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2b7]
Exit stack: [V13, 0x2b7]

================================

Block 0x393
[0x393:0x399]
---
Predecessors: [0x8a]
Successors: [0x39a, 0x39e]
---
0x393 JUMPDEST
0x394 CALLVALUE
0x395 ISZERO
0x396 PUSH2 0x39e
0x399 JUMPI
---
0x393: JUMPDEST 
0x394: V326 = CALLVALUE
0x395: V327 = ISZERO V326
0x396: V328 = 0x39e
0x399: JUMPI 0x39e V327
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x39a
[0x39a:0x39d]
---
Predecessors: [0x393]
Successors: []
---
0x39a PUSH1 0x0
0x39c DUP1
0x39d REVERT
---
0x39a: V329 = 0x0
0x39d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x39e
[0x39e:0x3a5]
---
Predecessors: [0x393]
Successors: [0x758]
---
0x39e JUMPDEST
0x39f PUSH2 0x2b7
0x3a2 PUSH2 0x758
0x3a5 JUMP
---
0x39e: JUMPDEST 
0x39f: V330 = 0x2b7
0x3a2: V331 = 0x758
0x3a5: JUMP 0x758
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2b7]
Exit stack: [V13, 0x2b7]

================================

Block 0x3a6
[0x3a6:0x3ac]
---
Predecessors: [0x95]
Successors: [0x3ad, 0x3b1]
---
0x3a6 JUMPDEST
0x3a7 CALLVALUE
0x3a8 ISZERO
0x3a9 PUSH2 0x3b1
0x3ac JUMPI
---
0x3a6: JUMPDEST 
0x3a7: V332 = CALLVALUE
0x3a8: V333 = ISZERO V332
0x3a9: V334 = 0x3b1
0x3ac: JUMPI 0x3b1 V333
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3ad
[0x3ad:0x3b0]
---
Predecessors: [0x3a6]
Successors: []
---
0x3ad PUSH1 0x0
0x3af DUP1
0x3b0 REVERT
---
0x3ad: V335 = 0x0
0x3b0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3b1
[0x3b1:0x3b8]
---
Predecessors: [0x3a6]
Successors: [0x75e]
---
0x3b1 JUMPDEST
0x3b2 PUSH2 0x364
0x3b5 PUSH2 0x75e
0x3b8 JUMP
---
0x3b1: JUMPDEST 
0x3b2: V336 = 0x364
0x3b5: V337 = 0x75e
0x3b8: JUMP 0x75e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x364]
Exit stack: [V13, 0x364]

================================

Block 0x3b9
[0x3b9:0x3bf]
---
Predecessors: [0xa0]
Successors: [0x3c0, 0x3c4]
---
0x3b9 JUMPDEST
0x3ba CALLVALUE
0x3bb ISZERO
0x3bc PUSH2 0x3c4
0x3bf JUMPI
---
0x3b9: JUMPDEST 
0x3ba: V338 = CALLVALUE
0x3bb: V339 = ISZERO V338
0x3bc: V340 = 0x3c4
0x3bf: JUMPI 0x3c4 V339
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3c0
[0x3c0:0x3c3]
---
Predecessors: [0x3b9]
Successors: []
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
---
0x3c0: V341 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3c4
[0x3c4:0x3cb]
---
Predecessors: [0x3b9]
Successors: [0x76d]
---
0x3c4 JUMPDEST
0x3c5 PUSH2 0x2b7
0x3c8 PUSH2 0x76d
0x3cb JUMP
---
0x3c4: JUMPDEST 
0x3c5: V342 = 0x2b7
0x3c8: V343 = 0x76d
0x3cb: JUMP 0x76d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2b7]
Exit stack: [V13, 0x2b7]

================================

Block 0x3cc
[0x3cc:0x3d2]
---
Predecessors: [0xab]
Successors: [0x3d3, 0x3d7]
---
0x3cc JUMPDEST
0x3cd CALLVALUE
0x3ce ISZERO
0x3cf PUSH2 0x3d7
0x3d2 JUMPI
---
0x3cc: JUMPDEST 
0x3cd: V344 = CALLVALUE
0x3ce: V345 = ISZERO V344
0x3cf: V346 = 0x3d7
0x3d2: JUMPI 0x3d7 V345
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3d3
[0x3d3:0x3d6]
---
Predecessors: [0x3cc]
Successors: []
---
0x3d3 PUSH1 0x0
0x3d5 DUP1
0x3d6 REVERT
---
0x3d3: V347 = 0x0
0x3d6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3d7
[0x3d7:0x3de]
---
Predecessors: [0x3cc]
Successors: [0x773]
---
0x3d7 JUMPDEST
0x3d8 PUSH2 0x33d
0x3db PUSH2 0x773
0x3de JUMP
---
0x3d7: JUMPDEST 
0x3d8: V348 = 0x33d
0x3db: V349 = 0x773
0x3de: JUMP 0x773
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x33d]
Exit stack: [V13, 0x33d]

================================

Block 0x3df
[0x3df:0x3e5]
---
Predecessors: [0xb6]
Successors: [0x3e6, 0x3ea]
---
0x3df JUMPDEST
0x3e0 CALLVALUE
0x3e1 ISZERO
0x3e2 PUSH2 0x3ea
0x3e5 JUMPI
---
0x3df: JUMPDEST 
0x3e0: V350 = CALLVALUE
0x3e1: V351 = ISZERO V350
0x3e2: V352 = 0x3ea
0x3e5: JUMPI 0x3ea V351
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3e6
[0x3e6:0x3e9]
---
Predecessors: [0x3df]
Successors: []
---
0x3e6 PUSH1 0x0
0x3e8 DUP1
0x3e9 REVERT
---
0x3e6: V353 = 0x0
0x3e9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3ea
[0x3ea:0x3f1]
---
Predecessors: [0x3df]
Successors: [0x794]
---
0x3ea JUMPDEST
0x3eb PUSH2 0x2a2
0x3ee PUSH2 0x794
0x3f1 JUMP
---
0x3ea: JUMPDEST 
0x3eb: V354 = 0x2a2
0x3ee: V355 = 0x794
0x3f1: JUMP 0x794
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2a2]
Exit stack: [V13, 0x2a2]

================================

Block 0x3f2
[0x3f2:0x3f8]
---
Predecessors: [0xc1]
Successors: [0x3f9, 0x3fd]
---
0x3f2 JUMPDEST
0x3f3 CALLVALUE
0x3f4 ISZERO
0x3f5 PUSH2 0x3fd
0x3f8 JUMPI
---
0x3f2: JUMPDEST 
0x3f3: V356 = CALLVALUE
0x3f4: V357 = ISZERO V356
0x3f5: V358 = 0x3fd
0x3f8: JUMPI 0x3fd V357
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3f9
[0x3f9:0x3fc]
---
Predecessors: [0x3f2]
Successors: []
---
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc REVERT
---
0x3f9: V359 = 0x0
0x3fc: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3fd
[0x3fd:0x404]
---
Predecessors: [0x3f2]
Successors: [0x9b2]
---
0x3fd JUMPDEST
0x3fe PUSH2 0x405
0x401 PUSH2 0x9b2
0x404 JUMP
---
0x3fd: JUMPDEST 
0x3fe: V360 = 0x405
0x401: V361 = 0x9b2
0x404: JUMP 0x9b2
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x405]
Exit stack: [V13, 0x405]

================================

Block 0x405
[0x405:0x460]
---
Predecessors: [0xa8d]
Successors: []
---
0x405 JUMPDEST
0x406 PUSH1 0x40
0x408 MLOAD
0x409 SWAP11
0x40a DUP12
0x40b MSTORE
0x40c PUSH1 0x20
0x40e DUP12
0x40f ADD
0x410 SWAP10
0x411 SWAP1
0x412 SWAP10
0x413 MSTORE
0x414 PUSH1 0x40
0x416 DUP1
0x417 DUP12
0x418 ADD
0x419 SWAP9
0x41a SWAP1
0x41b SWAP9
0x41c MSTORE
0x41d PUSH1 0x60
0x41f DUP11
0x420 ADD
0x421 SWAP7
0x422 SWAP1
0x423 SWAP7
0x424 MSTORE
0x425 PUSH1 0x80
0x427 DUP10
0x428 ADD
0x429 SWAP5
0x42a SWAP1
0x42b SWAP5
0x42c MSTORE
0x42d PUSH1 0xa0
0x42f DUP9
0x430 ADD
0x431 SWAP3
0x432 SWAP1
0x433 SWAP3
0x434 MSTORE
0x435 PUSH1 0xc0
0x437 DUP8
0x438 ADD
0x439 MSTORE
0x43a PUSH1 0xe0
0x43c DUP7
0x43d ADD
0x43e MSTORE
0x43f PUSH2 0x100
0x442 DUP6
0x443 ADD
0x444 MSTORE
0x445 PUSH2 0x120
0x448 DUP5
0x449 ADD
0x44a MSTORE
0x44b PUSH2 0x140
0x44e DUP4
0x44f ADD
0x450 SWAP2
0x451 SWAP1
0x452 SWAP2
0x453 MSTORE
0x454 PUSH2 0x160
0x457 SWAP1
0x458 SWAP2
0x459 ADD
0x45a SWAP1
0x45b MLOAD
0x45c DUP1
0x45d SWAP2
0x45e SUB
0x45f SWAP1
0x460 RETURN
---
0x405: JUMPDEST 
0x406: V362 = 0x40
0x408: V363 = M[0x40]
0x40b: M[V363] = S10
0x40c: V364 = 0x20
0x40f: V365 = ADD V363 0x20
0x413: M[V365] = S9
0x414: V366 = 0x40
0x418: V367 = ADD V363 0x40
0x41c: M[V367] = S8
0x41d: V368 = 0x60
0x420: V369 = ADD V363 0x60
0x424: M[V369] = S7
0x425: V370 = 0x80
0x428: V371 = ADD V363 0x80
0x42c: M[V371] = S6
0x42d: V372 = 0xa0
0x430: V373 = ADD V363 0xa0
0x434: M[V373] = V905
0x435: V374 = 0xc0
0x438: V375 = ADD V363 0xc0
0x439: M[V375] = V906
0x43a: V376 = 0xe0
0x43d: V377 = ADD V363 0xe0
0x43e: M[V377] = S3
0x43f: V378 = 0x100
0x443: V379 = ADD V363 0x100
0x444: M[V379] = V910
0x445: V380 = 0x120
0x449: V381 = ADD V363 0x120
0x44a: M[V381] = V962
0x44b: V382 = 0x140
0x44f: V383 = ADD V363 0x140
0x453: M[V383] = V964
0x454: V384 = 0x160
0x459: V385 = ADD V363 0x160
0x45b: V386 = M[0x40]
0x45e: V387 = SUB V385 V386
0x460: RETURN V386 V387
---
Entry stack: [V13, S10, S9, S8, S7, S6, V905, V906, S3, V910, V962, V964]
Stack pops: 11
Stack additions: []
Exit stack: [V13]

================================

Block 0x461
[0x461:0x467]
---
Predecessors: [0xcc]
Successors: [0x468, 0x46c]
---
0x461 JUMPDEST
0x462 CALLVALUE
0x463 ISZERO
0x464 PUSH2 0x46c
0x467 JUMPI
---
0x461: JUMPDEST 
0x462: V388 = CALLVALUE
0x463: V389 = ISZERO V388
0x464: V390 = 0x46c
0x467: JUMPI 0x46c V389
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x468
[0x468:0x46b]
---
Predecessors: [0x461]
Successors: []
---
0x468 PUSH1 0x0
0x46a DUP1
0x46b REVERT
---
0x468: V391 = 0x0
0x46b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x46c
[0x46c:0x47f]
---
Predecessors: [0x461]
Successors: [0xaab]
---
0x46c JUMPDEST
0x46d PUSH2 0x2a2
0x470 PUSH1 0x1
0x472 PUSH1 0xa0
0x474 PUSH1 0x2
0x476 EXP
0x477 SUB
0x478 PUSH1 0x4
0x47a CALLDATALOAD
0x47b AND
0x47c PUSH2 0xaab
0x47f JUMP
---
0x46c: JUMPDEST 
0x46d: V392 = 0x2a2
0x470: V393 = 0x1
0x472: V394 = 0xa0
0x474: V395 = 0x2
0x476: V396 = EXP 0x2 0xa0
0x477: V397 = SUB 0x10000000000000000000000000000000000000000 0x1
0x478: V398 = 0x4
0x47a: V399 = CALLDATALOAD 0x4
0x47b: V400 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x47c: V401 = 0xaab
0x47f: JUMP 0xaab
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2a2, V400]
Exit stack: [V13, 0x2a2, V400]

================================

Block 0x480
[0x480:0x486]
---
Predecessors: [0xd7]
Successors: [0x487, 0x48b]
---
0x480 JUMPDEST
0x481 CALLVALUE
0x482 ISZERO
0x483 PUSH2 0x48b
0x486 JUMPI
---
0x480: JUMPDEST 
0x481: V402 = CALLVALUE
0x482: V403 = ISZERO V402
0x483: V404 = 0x48b
0x486: JUMPI 0x48b V403
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x487
[0x487:0x48a]
---
Predecessors: [0x480]
Successors: []
---
0x487 PUSH1 0x0
0x489 DUP1
0x48a REVERT
---
0x487: V405 = 0x0
0x48a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x48b
[0x48b:0x49e]
---
Predecessors: [0x480]
Successors: [0xb44]
---
0x48b JUMPDEST
0x48c PUSH2 0x277
0x48f PUSH1 0x1
0x491 PUSH1 0xa0
0x493 PUSH1 0x2
0x495 EXP
0x496 SUB
0x497 PUSH1 0x4
0x499 CALLDATALOAD
0x49a AND
0x49b PUSH2 0xb44
0x49e JUMP
---
0x48b: JUMPDEST 
0x48c: V406 = 0x277
0x48f: V407 = 0x1
0x491: V408 = 0xa0
0x493: V409 = 0x2
0x495: V410 = EXP 0x2 0xa0
0x496: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x497: V412 = 0x4
0x499: V413 = CALLDATALOAD 0x4
0x49a: V414 = AND V413 0xffffffffffffffffffffffffffffffffffffffff
0x49b: V415 = 0xb44
0x49e: JUMP 0xb44
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x277, V414]
Exit stack: [V13, 0x277, V414]

================================

Block 0x49f
[0x49f:0x4a8]
---
Predecessors: [0x26c]
Successors: [0x277]
---
0x49f JUMPDEST
0x4a0 PUSH1 0x6
0x4a2 SLOAD
0x4a3 SWAP2
0x4a4 SWAP1
0x4a5 DUP3
0x4a6 MUL
0x4a7 SWAP1
0x4a8 JUMP
---
0x49f: JUMPDEST 
0x4a0: V416 = 0x6
0x4a2: V417 = S[0x6]
0x4a6: V418 = MUL V417 V219
0x4a8: JUMP 0x277
---
Entry stack: [V13, 0x277, V219]
Stack pops: 2
Stack additions: [V417, V418]
Exit stack: [V13, V417, V418]

================================

Block 0x4a9
[0x4a9:0x4c2]
---
Predecessors: [0x29a]
Successors: [0x4c3, 0x4c7]
---
0x4a9 JUMPDEST
0x4aa PUSH1 0x0
0x4ac DUP1
0x4ad SLOAD
0x4ae DUP2
0x4af SWAP1
0x4b0 CALLER
0x4b1 PUSH1 0x1
0x4b3 PUSH1 0xa0
0x4b5 PUSH1 0x2
0x4b7 EXP
0x4b8 SUB
0x4b9 SWAP1
0x4ba DUP2
0x4bb AND
0x4bc SWAP2
0x4bd AND
0x4be EQ
0x4bf PUSH2 0x4c7
0x4c2 JUMPI
---
0x4a9: JUMPDEST 
0x4aa: V419 = 0x0
0x4ad: V420 = S[0x0]
0x4b0: V421 = CALLER
0x4b1: V422 = 0x1
0x4b3: V423 = 0xa0
0x4b5: V424 = 0x2
0x4b7: V425 = EXP 0x2 0xa0
0x4b8: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bb: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x4bd: V428 = AND V420 0xffffffffffffffffffffffffffffffffffffffff
0x4be: V429 = EQ V428 V427
0x4bf: V430 = 0x4c7
0x4c2: JUMPI 0x4c7 V429
---
Entry stack: [V13, 0x2a2]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x2a2, 0x0, 0x0]

================================

Block 0x4c3
[0x4c3:0x4c6]
---
Predecessors: [0x4a9]
Successors: []
---
0x4c3 PUSH1 0x0
0x4c5 DUP1
0x4c6 REVERT
---
0x4c3: V431 = 0x0
0x4c6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2a2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, 0x0, 0x0]

================================

Block 0x4c7
[0x4c7:0x4dd]
---
Predecessors: [0x4a9]
Successors: [0x4de, 0x556]
---
0x4c7 JUMPDEST
0x4c8 ADDRESS
0x4c9 PUSH1 0x1
0x4cb PUSH1 0xa0
0x4cd PUSH1 0x2
0x4cf EXP
0x4d0 SUB
0x4d1 AND
0x4d2 BALANCE
0x4d3 SWAP2
0x4d4 POP
0x4d5 PUSH1 0x0
0x4d7 DUP3
0x4d8 GT
0x4d9 ISZERO
0x4da PUSH2 0x556
0x4dd JUMPI
---
0x4c7: JUMPDEST 
0x4c8: V432 = ADDRESS
0x4c9: V433 = 0x1
0x4cb: V434 = 0xa0
0x4cd: V435 = 0x2
0x4cf: V436 = EXP 0x2 0xa0
0x4d0: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d1: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x4d2: V439 = BALANCE V438
0x4d5: V440 = 0x0
0x4d8: V441 = GT V439 0x0
0x4d9: V442 = ISZERO V441
0x4da: V443 = 0x556
0x4dd: JUMPI 0x556 V442
---
Entry stack: [V13, 0x2a2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V439, S0]
Exit stack: [V13, 0x2a2, V439, 0x0]

================================

Block 0x4de
[0x4de:0x555]
---
Predecessors: [0x4c7]
Successors: [0x556]
---
0x4de CALLER
0x4df PUSH1 0x1
0x4e1 PUSH1 0xa0
0x4e3 PUSH1 0x2
0x4e5 EXP
0x4e6 SUB
0x4e7 AND
0x4e8 DUP3
0x4e9 PUSH1 0x40
0x4eb MLOAD
0x4ec PUSH1 0x0
0x4ee PUSH1 0x40
0x4f0 MLOAD
0x4f1 DUP1
0x4f2 DUP4
0x4f3 SUB
0x4f4 DUP2
0x4f5 DUP6
0x4f6 DUP8
0x4f7 PUSH2 0x8796
0x4fa GAS
0x4fb SUB
0x4fc CALL
0x4fd SWAP3
0x4fe POP
0x4ff POP
0x500 POP
0x501 SWAP1
0x502 POP
0x503 PUSH32 0x5b8e8dabfb07633926aad60d1498e605e71a8ee067252f388e7ed6228f8a1f9c
0x524 CALLER
0x525 DUP4
0x526 DUP4
0x527 PUSH1 0x40
0x529 MLOAD
0x52a PUSH1 0x1
0x52c PUSH1 0xa0
0x52e PUSH1 0x2
0x530 EXP
0x531 SUB
0x532 SWAP1
0x533 SWAP4
0x534 AND
0x535 DUP4
0x536 MSTORE
0x537 PUSH1 0x20
0x539 DUP4
0x53a ADD
0x53b SWAP2
0x53c SWAP1
0x53d SWAP2
0x53e MSTORE
0x53f ISZERO
0x540 ISZERO
0x541 PUSH1 0x40
0x543 DUP1
0x544 DUP4
0x545 ADD
0x546 SWAP2
0x547 SWAP1
0x548 SWAP2
0x549 MSTORE
0x54a PUSH1 0x60
0x54c SWAP1
0x54d SWAP2
0x54e ADD
0x54f SWAP1
0x550 MLOAD
0x551 DUP1
0x552 SWAP2
0x553 SUB
0x554 SWAP1
0x555 LOG1
---
0x4de: V444 = CALLER
0x4df: V445 = 0x1
0x4e1: V446 = 0xa0
0x4e3: V447 = 0x2
0x4e5: V448 = EXP 0x2 0xa0
0x4e6: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e7: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x4e9: V451 = 0x40
0x4eb: V452 = M[0x40]
0x4ec: V453 = 0x0
0x4ee: V454 = 0x40
0x4f0: V455 = M[0x40]
0x4f3: V456 = SUB V452 V455
0x4f7: V457 = 0x8796
0x4fa: V458 = GAS
0x4fb: V459 = SUB V458 0x8796
0x4fc: V460 = CALL V459 V450 V439 V455 V456 V455 0x0
0x503: V461 = 0x5b8e8dabfb07633926aad60d1498e605e71a8ee067252f388e7ed6228f8a1f9c
0x524: V462 = CALLER
0x527: V463 = 0x40
0x529: V464 = M[0x40]
0x52a: V465 = 0x1
0x52c: V466 = 0xa0
0x52e: V467 = 0x2
0x530: V468 = EXP 0x2 0xa0
0x531: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x534: V470 = AND V462 0xffffffffffffffffffffffffffffffffffffffff
0x536: M[V464] = V470
0x537: V471 = 0x20
0x53a: V472 = ADD V464 0x20
0x53e: M[V472] = V439
0x53f: V473 = ISZERO V460
0x540: V474 = ISZERO V473
0x541: V475 = 0x40
0x545: V476 = ADD V464 0x40
0x549: M[V476] = V474
0x54a: V477 = 0x60
0x54e: V478 = ADD V464 0x60
0x550: V479 = M[0x40]
0x553: V480 = SUB V478 V479
0x555: LOG V479 V480 0x5b8e8dabfb07633926aad60d1498e605e71a8ee067252f388e7ed6228f8a1f9c
---
Entry stack: [V13, 0x2a2, V439, 0x0]
Stack pops: 2
Stack additions: [S1, V460]
Exit stack: [V13, 0x2a2, V439, V460]

================================

Block 0x556
[0x556:0x559]
---
Predecessors: [0x4c7, 0x4de]
Successors: [0x2a2]
---
0x556 JUMPDEST
0x557 POP
0x558 POP
0x559 JUMP
---
0x556: JUMPDEST 
0x559: JUMP 0x2a2
---
Entry stack: [V13, 0x2a2, V439, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x55a
[0x55a:0x55f]
---
Predecessors: [0x2af]
Successors: [0x2b7]
---
0x55a JUMPDEST
0x55b PUSH1 0x3
0x55d SLOAD
0x55e DUP2
0x55f JUMP
---
0x55a: JUMPDEST 
0x55b: V481 = 0x3
0x55d: V482 = S[0x3]
0x55f: JUMP 0x2b7
---
Entry stack: [V13, 0x2b7]
Stack pops: 1
Stack additions: [S0, V482]
Exit stack: [V13, 0x2b7, V482]

================================

Block 0x560
[0x560:0x565]
---
Predecessors: [0x2d4]
Successors: [0x2b7]
---
0x560 JUMPDEST
0x561 PUSH1 0x5
0x563 SLOAD
0x564 DUP2
0x565 JUMP
---
0x560: JUMPDEST 
0x561: V483 = 0x5
0x563: V484 = S[0x5]
0x565: JUMP 0x2b7
---
Entry stack: [V13, 0x2b7]
Stack pops: 1
Stack additions: [S0, V484]
Exit stack: [V13, 0x2b7, V484]

================================

Block 0x566
[0x566:0x57e]
---
Predecessors: [0x2e7]
Successors: [0x277]
---
0x566 JUMPDEST
0x567 PUSH1 0x8
0x569 PUSH1 0x20
0x56b MSTORE
0x56c PUSH1 0x0
0x56e SWAP1
0x56f DUP2
0x570 MSTORE
0x571 PUSH1 0x40
0x573 SWAP1
0x574 SHA3
0x575 DUP1
0x576 SLOAD
0x577 PUSH1 0x1
0x579 SWAP1
0x57a SWAP2
0x57b ADD
0x57c SLOAD
0x57d DUP3
0x57e JUMP
---
0x566: JUMPDEST 
0x567: V485 = 0x8
0x569: V486 = 0x20
0x56b: M[0x20] = 0x8
0x56c: V487 = 0x0
0x570: M[0x0] = V266
0x571: V488 = 0x40
0x574: V489 = SHA3 0x0 0x40
0x576: V490 = S[V489]
0x577: V491 = 0x1
0x57b: V492 = ADD V489 0x1
0x57c: V493 = S[V492]
0x57e: JUMP 0x277
---
Entry stack: [V13, 0x277, V266]
Stack pops: 2
Stack additions: [S1, V490, V493]
Exit stack: [V13, 0x277, V490, V493]

================================

Block 0x57f
[0x57f:0x595]
---
Predecessors: [0x306]
Successors: [0x596, 0x59a]
---
0x57f JUMPDEST
0x580 PUSH1 0x0
0x582 SLOAD
0x583 CALLER
0x584 PUSH1 0x1
0x586 PUSH1 0xa0
0x588 PUSH1 0x2
0x58a EXP
0x58b SUB
0x58c SWAP1
0x58d DUP2
0x58e AND
0x58f SWAP2
0x590 AND
0x591 EQ
0x592 PUSH2 0x59a
0x595 JUMPI
---
0x57f: JUMPDEST 
0x580: V494 = 0x0
0x582: V495 = S[0x0]
0x583: V496 = CALLER
0x584: V497 = 0x1
0x586: V498 = 0xa0
0x588: V499 = 0x2
0x58a: V500 = EXP 0x2 0xa0
0x58b: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58e: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x590: V503 = AND V495 0xffffffffffffffffffffffffffffffffffffffff
0x591: V504 = EQ V503 V502
0x592: V505 = 0x59a
0x595: JUMPI 0x59a V504
---
Entry stack: [V13, 0x2a2, V274, V276, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, V274, V276, V278]

================================

Block 0x596
[0x596:0x599]
---
Predecessors: [0x57f]
Successors: []
---
0x596 PUSH1 0x0
0x598 DUP1
0x599 REVERT
---
0x596: V506 = 0x0
0x599: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2a2, V274, V276, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, V274, V276, V278]

================================

Block 0x59a
[0x59a:0x5ad]
---
Predecessors: [0x57f]
Successors: [0x5ae, 0x5b3]
---
0x59a JUMPDEST
0x59b PUSH1 0x5
0x59d DUP3
0x59e SWAP1
0x59f SSTORE
0x5a0 PUSH1 0x6
0x5a2 DUP2
0x5a3 SWAP1
0x5a4 SSTORE
0x5a5 PUSH1 0x1
0x5a7 SLOAD
0x5a8 ISZERO
0x5a9 DUP1
0x5aa PUSH2 0x5b3
0x5ad JUMPI
---
0x59a: JUMPDEST 
0x59b: V507 = 0x5
0x59f: S[0x5] = V276
0x5a0: V508 = 0x6
0x5a4: S[0x6] = V278
0x5a5: V509 = 0x1
0x5a7: V510 = S[0x1]
0x5a8: V511 = ISZERO V510
0x5aa: V512 = 0x5b3
0x5ad: JUMPI 0x5b3 V511
---
Entry stack: [V13, 0x2a2, V274, V276, V278]
Stack pops: 2
Stack additions: [S1, S0, V511]
Exit stack: [V13, 0x2a2, V274, V276, V278, V511]

================================

Block 0x5ae
[0x5ae:0x5b2]
---
Predecessors: [0x59a]
Successors: [0x5b3]
---
0x5ae POP
0x5af PUSH1 0x3
0x5b1 SLOAD
0x5b2 ISZERO
---
0x5af: V513 = 0x3
0x5b1: V514 = S[0x3]
0x5b2: V515 = ISZERO V514
---
Entry stack: [V13, 0x2a2, V274, V276, V278, V511]
Stack pops: 1
Stack additions: [V515]
Exit stack: [V13, 0x2a2, V274, V276, V278, V515]

================================

Block 0x5b3
[0x5b3:0x5b8]
---
Predecessors: [0x59a, 0x5ae]
Successors: [0x5b9, 0x5c7]
---
0x5b3 JUMPDEST
0x5b4 DUP1
0x5b5 PUSH2 0x5c7
0x5b8 JUMPI
---
0x5b3: JUMPDEST 
0x5b5: V516 = 0x5c7
0x5b8: JUMPI 0x5c7 S0
---
Entry stack: [V13, 0x2a2, V274, V276, V278, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x2a2, V274, V276, V278, S0]

================================

Block 0x5b9
[0x5b9:0x5c6]
---
Predecessors: [0x5b3]
Successors: [0x5c7]
---
0x5b9 POP
0x5ba PUSH1 0x7
0x5bc SLOAD
0x5bd PUSH1 0x1
0x5bf PUSH1 0xa0
0x5c1 PUSH1 0x2
0x5c3 EXP
0x5c4 SUB
0x5c5 AND
0x5c6 ISZERO
---
0x5ba: V517 = 0x7
0x5bc: V518 = S[0x7]
0x5bd: V519 = 0x1
0x5bf: V520 = 0xa0
0x5c1: V521 = 0x2
0x5c3: V522 = EXP 0x2 0xa0
0x5c4: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c5: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x5c6: V525 = ISZERO V524
---
Entry stack: [V13, 0x2a2, V274, V276, V278, S0]
Stack pops: 1
Stack additions: [V525]
Exit stack: [V13, 0x2a2, V274, V276, V278, V525]

================================

Block 0x5c7
[0x5c7:0x5cc]
---
Predecessors: [0x5b3, 0x5b9]
Successors: [0x5cd, 0x5d2]
---
0x5c7 JUMPDEST
0x5c8 DUP1
0x5c9 PUSH2 0x5d2
0x5cc JUMPI
---
0x5c7: JUMPDEST 
0x5c9: V526 = 0x5d2
0x5cc: JUMPI 0x5d2 S0
---
Entry stack: [V13, 0x2a2, V274, V276, V278, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x2a2, V274, V276, V278, S0]

================================

Block 0x5cd
[0x5cd:0x5d1]
---
Predecessors: [0x5c7]
Successors: [0x5d2]
---
0x5cd POP
0x5ce TIMESTAMP
0x5cf DUP4
0x5d0 LT
0x5d1 ISZERO
---
0x5ce: V527 = TIMESTAMP
0x5d0: V528 = LT V274 V527
0x5d1: V529 = ISZERO V528
---
Entry stack: [V13, 0x2a2, V274, V276, V278, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V529]
Exit stack: [V13, 0x2a2, V274, V276, V278, V529]

================================

Block 0x5d2
[0x5d2:0x5d7]
---
Predecessors: [0x5c7, 0x5cd]
Successors: [0x5d8, 0x5dc]
---
0x5d2 JUMPDEST
0x5d3 ISZERO
0x5d4 PUSH2 0x5dc
0x5d7 JUMPI
---
0x5d2: JUMPDEST 
0x5d3: V530 = ISZERO S0
0x5d4: V531 = 0x5dc
0x5d7: JUMPI 0x5dc V530
---
Entry stack: [V13, 0x2a2, V274, V276, V278, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x2a2, V274, V276, V278]

================================

Block 0x5d8
[0x5d8:0x5db]
---
Predecessors: [0x5d2]
Successors: []
---
0x5d8 PUSH1 0x0
0x5da DUP1
0x5db REVERT
---
0x5d8: V532 = 0x0
0x5db: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2a2, V274, V276, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, V274, V276, V278]

================================

Block 0x5dc
[0x5dc:0x633]
---
Predecessors: [0x5d2]
Successors: [0x634, 0x638]
---
0x5dc JUMPDEST
0x5dd PUSH1 0x3
0x5df SLOAD
0x5e0 PUSH1 0x7
0x5e2 SLOAD
0x5e3 PUSH1 0x1
0x5e5 PUSH1 0xa0
0x5e7 PUSH1 0x2
0x5e9 EXP
0x5ea SUB
0x5eb AND
0x5ec PUSH4 0x70a08231
0x5f1 ADDRESS
0x5f2 PUSH1 0x0
0x5f4 PUSH1 0x40
0x5f6 MLOAD
0x5f7 PUSH1 0x20
0x5f9 ADD
0x5fa MSTORE
0x5fb PUSH1 0x40
0x5fd MLOAD
0x5fe PUSH1 0xe0
0x600 PUSH1 0x2
0x602 EXP
0x603 PUSH4 0xffffffff
0x608 DUP5
0x609 AND
0x60a MUL
0x60b DUP2
0x60c MSTORE
0x60d PUSH1 0x1
0x60f PUSH1 0xa0
0x611 PUSH1 0x2
0x613 EXP
0x614 SUB
0x615 SWAP1
0x616 SWAP2
0x617 AND
0x618 PUSH1 0x4
0x61a DUP3
0x61b ADD
0x61c MSTORE
0x61d PUSH1 0x24
0x61f ADD
0x620 PUSH1 0x20
0x622 PUSH1 0x40
0x624 MLOAD
0x625 DUP1
0x626 DUP4
0x627 SUB
0x628 DUP2
0x629 PUSH1 0x0
0x62b DUP8
0x62c DUP1
0x62d EXTCODESIZE
0x62e ISZERO
0x62f ISZERO
0x630 PUSH2 0x638
0x633 JUMPI
---
0x5dc: JUMPDEST 
0x5dd: V533 = 0x3
0x5df: V534 = S[0x3]
0x5e0: V535 = 0x7
0x5e2: V536 = S[0x7]
0x5e3: V537 = 0x1
0x5e5: V538 = 0xa0
0x5e7: V539 = 0x2
0x5e9: V540 = EXP 0x2 0xa0
0x5ea: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5eb: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x5ec: V543 = 0x70a08231
0x5f1: V544 = ADDRESS
0x5f2: V545 = 0x0
0x5f4: V546 = 0x40
0x5f6: V547 = M[0x40]
0x5f7: V548 = 0x20
0x5f9: V549 = ADD 0x20 V547
0x5fa: M[V549] = 0x0
0x5fb: V550 = 0x40
0x5fd: V551 = M[0x40]
0x5fe: V552 = 0xe0
0x600: V553 = 0x2
0x602: V554 = EXP 0x2 0xe0
0x603: V555 = 0xffffffff
0x609: V556 = AND 0x70a08231 0xffffffff
0x60a: V557 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x60c: M[V551] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x60d: V558 = 0x1
0x60f: V559 = 0xa0
0x611: V560 = 0x2
0x613: V561 = EXP 0x2 0xa0
0x614: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x617: V563 = AND V544 0xffffffffffffffffffffffffffffffffffffffff
0x618: V564 = 0x4
0x61b: V565 = ADD V551 0x4
0x61c: M[V565] = V563
0x61d: V566 = 0x24
0x61f: V567 = ADD 0x24 V551
0x620: V568 = 0x20
0x622: V569 = 0x40
0x624: V570 = M[0x40]
0x627: V571 = SUB V567 V570
0x629: V572 = 0x0
0x62d: V573 = EXTCODESIZE V542
0x62e: V574 = ISZERO V573
0x62f: V575 = ISZERO V574
0x630: V576 = 0x638
0x633: JUMPI 0x638 V575
---
Entry stack: [V13, 0x2a2, V274, V276, V278]
Stack pops: 0
Stack additions: [V534, V542, 0x70a08231, V567, 0x20, V570, V571, V570, 0x0, V542]
Exit stack: [V13, 0x2a2, V274, V276, V278, V534, V542, 0x70a08231, V567, 0x20, V570, V571, V570, 0x0, V542]

================================

Block 0x634
[0x634:0x637]
---
Predecessors: [0x5dc]
Successors: []
---
0x634 PUSH1 0x0
0x636 DUP1
0x637 REVERT
---
0x634: V577 = 0x0
0x637: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2a2, V274, V276, V278, V534, V542, 0x70a08231, V567, 0x20, V570, V571, V570, 0x0, V542]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, V274, V276, V278, V534, V542, 0x70a08231, V567, 0x20, V570, V571, V570, 0x0, V542]

================================

Block 0x638
[0x638:0x644]
---
Predecessors: [0x5dc]
Successors: [0x645, 0x649]
---
0x638 JUMPDEST
0x639 PUSH2 0x2c6
0x63c GAS
0x63d SUB
0x63e CALL
0x63f ISZERO
0x640 ISZERO
0x641 PUSH2 0x649
0x644 JUMPI
---
0x638: JUMPDEST 
0x639: V578 = 0x2c6
0x63c: V579 = GAS
0x63d: V580 = SUB V579 0x2c6
0x63e: V581 = CALL V580 V542 0x0 V570 V571 V570 0x20
0x63f: V582 = ISZERO V581
0x640: V583 = ISZERO V582
0x641: V584 = 0x649
0x644: JUMPI 0x649 V583
---
Entry stack: [V13, 0x2a2, V274, V276, V278, V534, V542, 0x70a08231, V567, 0x20, V570, V571, V570, 0x0, V542]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x2a2, V274, V276, V278, V534, V542, 0x70a08231, V567]

================================

Block 0x645
[0x645:0x648]
---
Predecessors: [0x638]
Successors: []
---
0x645 PUSH1 0x0
0x647 DUP1
0x648 REVERT
---
0x645: V585 = 0x0
0x648: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2a2, V274, V276, V278, V534, V542, 0x70a08231, V567]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, V274, V276, V278, V534, V542, 0x70a08231, V567]

================================

Block 0x649
[0x649:0x65a]
---
Predecessors: [0x638]
Successors: [0x65b, 0x716]
---
0x649 JUMPDEST
0x64a POP
0x64b POP
0x64c POP
0x64d PUSH1 0x40
0x64f MLOAD
0x650 DUP1
0x651 MLOAD
0x652 SWAP1
0x653 POP
0x654 LT
0x655 ISZERO
0x656 ISZERO
0x657 PUSH2 0x716
0x65a JUMPI
---
0x649: JUMPDEST 
0x64d: V586 = 0x40
0x64f: V587 = M[0x40]
0x651: V588 = M[V587]
0x654: V589 = LT V588 V534
0x655: V590 = ISZERO V589
0x656: V591 = ISZERO V590
0x657: V592 = 0x716
0x65a: JUMPI 0x716 V591
---
Entry stack: [V13, 0x2a2, V274, V276, V278, V534, V542, 0x70a08231, V567]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x2a2, V274, V276, V278]

================================

Block 0x65b
[0x65b:0x664]
---
Predecessors: [0x649]
Successors: [0x665, 0x66c]
---
0x65b TIMESTAMP
0x65c DUP4
0x65d GT
0x65e ISZERO
0x65f DUP1
0x660 ISZERO
0x661 PUSH2 0x66c
0x664 JUMPI
---
0x65b: V593 = TIMESTAMP
0x65d: V594 = GT V274 V593
0x65e: V595 = ISZERO V594
0x660: V596 = ISZERO V595
0x661: V597 = 0x66c
0x664: JUMPI 0x66c V596
---
Entry stack: [V13, 0x2a2, V274, V276, V278]
Stack pops: 3
Stack additions: [S2, S1, S0, V595]
Exit stack: [V13, 0x2a2, V274, V276, V278, V595]

================================

Block 0x665
[0x665:0x66b]
---
Predecessors: [0x65b]
Successors: [0x66c]
---
0x665 POP
0x666 PUSH1 0x5
0x668 SLOAD
0x669 TIMESTAMP
0x66a GT
0x66b ISZERO
---
0x666: V598 = 0x5
0x668: V599 = S[0x5]
0x669: V600 = TIMESTAMP
0x66a: V601 = GT V600 V599
0x66b: V602 = ISZERO V601
---
Entry stack: [V13, 0x2a2, V274, V276, V278, V595]
Stack pops: 1
Stack additions: [V602]
Exit stack: [V13, 0x2a2, V274, V276, V278, V602]

================================

Block 0x66c
[0x66c:0x671]
---
Predecessors: [0x65b, 0x665]
Successors: [0x672, 0x716]
---
0x66c JUMPDEST
0x66d ISZERO
0x66e PUSH2 0x716
0x671 JUMPI
---
0x66c: JUMPDEST 
0x66d: V603 = ISZERO S0
0x66e: V604 = 0x716
0x671: JUMPI 0x716 V603
---
Entry stack: [V13, 0x2a2, V274, V276, V278, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x2a2, V274, V276, V278]

================================

Block 0x672
[0x672:0x715]
---
Predecessors: [0x66c]
Successors: [0x716]
---
0x672 PUSH1 0x7
0x674 DUP1
0x675 SLOAD
0x676 PUSH22 0xff000000000000000000000000000000000000000000
0x68d NOT
0x68e AND
0x68f PUSH22 0x1000000000000000000000000000000000000000000
0x6a6 OR
0x6a7 SWAP1
0x6a8 SSTORE
0x6a9 PUSH1 0x1
0x6ab SLOAD
0x6ac PUSH1 0x5
0x6ae SLOAD
0x6af PUSH1 0x3
0x6b1 SLOAD
0x6b2 PUSH1 0x0
0x6b4 SLOAD
0x6b5 PUSH32 0x6a151b16df8b91a6230549a14ae94cf40f3c9426543b21802dc10201cd35648b
0x6d6 SWAP4
0x6d7 SWAP3
0x6d8 SWAP2
0x6d9 SWAP1
0x6da PUSH1 0x1
0x6dc PUSH1 0xa0
0x6de PUSH1 0x2
0x6e0 EXP
0x6e1 SUB
0x6e2 AND
0x6e3 PUSH1 0x40
0x6e5 MLOAD
0x6e6 SWAP4
0x6e7 DUP5
0x6e8 MSTORE
0x6e9 PUSH1 0x20
0x6eb DUP5
0x6ec ADD
0x6ed SWAP3
0x6ee SWAP1
0x6ef SWAP3
0x6f0 MSTORE
0x6f1 PUSH1 0x40
0x6f3 DUP1
0x6f4 DUP5
0x6f5 ADD
0x6f6 SWAP2
0x6f7 SWAP1
0x6f8 SWAP2
0x6f9 MSTORE
0x6fa PUSH1 0x1
0x6fc PUSH1 0xa0
0x6fe PUSH1 0x2
0x700 EXP
0x701 SUB
0x702 SWAP1
0x703 SWAP2
0x704 AND
0x705 PUSH1 0x60
0x707 DUP4
0x708 ADD
0x709 MSTORE
0x70a PUSH1 0x80
0x70c SWAP1
0x70d SWAP2
0x70e ADD
0x70f SWAP1
0x710 MLOAD
0x711 DUP1
0x712 SWAP2
0x713 SUB
0x714 SWAP1
0x715 LOG1
---
0x672: V605 = 0x7
0x675: V606 = S[0x7]
0x676: V607 = 0xff000000000000000000000000000000000000000000
0x68d: V608 = NOT 0xff000000000000000000000000000000000000000000
0x68e: V609 = AND 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff V606
0x68f: V610 = 0x1000000000000000000000000000000000000000000
0x6a6: V611 = OR 0x1000000000000000000000000000000000000000000 V609
0x6a8: S[0x7] = V611
0x6a9: V612 = 0x1
0x6ab: V613 = S[0x1]
0x6ac: V614 = 0x5
0x6ae: V615 = S[0x5]
0x6af: V616 = 0x3
0x6b1: V617 = S[0x3]
0x6b2: V618 = 0x0
0x6b4: V619 = S[0x0]
0x6b5: V620 = 0x6a151b16df8b91a6230549a14ae94cf40f3c9426543b21802dc10201cd35648b
0x6da: V621 = 0x1
0x6dc: V622 = 0xa0
0x6de: V623 = 0x2
0x6e0: V624 = EXP 0x2 0xa0
0x6e1: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e2: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V619
0x6e3: V627 = 0x40
0x6e5: V628 = M[0x40]
0x6e8: M[V628] = V613
0x6e9: V629 = 0x20
0x6ec: V630 = ADD V628 0x20
0x6f0: M[V630] = V615
0x6f1: V631 = 0x40
0x6f5: V632 = ADD V628 0x40
0x6f9: M[V632] = V617
0x6fa: V633 = 0x1
0x6fc: V634 = 0xa0
0x6fe: V635 = 0x2
0x700: V636 = EXP 0x2 0xa0
0x701: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x704: V638 = AND V626 0xffffffffffffffffffffffffffffffffffffffff
0x705: V639 = 0x60
0x708: V640 = ADD V628 0x60
0x709: M[V640] = V638
0x70a: V641 = 0x80
0x70e: V642 = ADD V628 0x80
0x710: V643 = M[0x40]
0x713: V644 = SUB V642 V643
0x715: LOG V643 V644 0x6a151b16df8b91a6230549a14ae94cf40f3c9426543b21802dc10201cd35648b
---
Entry stack: [V13, 0x2a2, V274, V276, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, V274, V276, V278]

================================

Block 0x716
[0x716:0x71a]
---
Predecessors: [0x649, 0x66c, 0x672]
Successors: [0x2a2]
---
0x716 JUMPDEST
0x717 POP
0x718 POP
0x719 POP
0x71a JUMP
---
0x716: JUMPDEST 
0x71a: JUMP 0x2a2
---
Entry stack: [V13, 0x2a2, V274, V276, V278]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x71b
[0x71b:0x720]
---
Predecessors: [0x322]
Successors: [0x2b7]
---
0x71b JUMPDEST
0x71c PUSH1 0x4
0x71e SLOAD
0x71f DUP2
0x720 JUMP
---
0x71b: JUMPDEST 
0x71c: V645 = 0x4
0x71e: V646 = S[0x4]
0x720: JUMP 0x2b7
---
Entry stack: [V13, 0x2b7]
Stack pops: 1
Stack additions: [S0, V646]
Exit stack: [V13, 0x2b7, V646]

================================

Block 0x721
[0x721:0x742]
---
Predecessors: [0x335]
Successors: [0x33d]
---
0x721 JUMPDEST
0x722 PUSH1 0x7
0x724 SLOAD
0x725 PUSH22 0x1000000000000000000000000000000000000000000
0x73c SWAP1
0x73d DIV
0x73e PUSH1 0xff
0x740 AND
0x741 DUP2
0x742 JUMP
---
0x721: JUMPDEST 
0x722: V647 = 0x7
0x724: V648 = S[0x7]
0x725: V649 = 0x1000000000000000000000000000000000000000000
0x73d: V650 = DIV V648 0x1000000000000000000000000000000000000000000
0x73e: V651 = 0xff
0x740: V652 = AND 0xff V650
0x742: JUMP 0x33d
---
Entry stack: [V13, 0x33d]
Stack pops: 1
Stack additions: [S0, V652]
Exit stack: [V13, 0x33d, V652]

================================

Block 0x743
[0x743:0x751]
---
Predecessors: [0x35c]
Successors: [0x364]
---
0x743 JUMPDEST
0x744 PUSH1 0x7
0x746 SLOAD
0x747 PUSH1 0x1
0x749 PUSH1 0xa0
0x74b PUSH1 0x2
0x74d EXP
0x74e SUB
0x74f AND
0x750 DUP2
0x751 JUMP
---
0x743: JUMPDEST 
0x744: V653 = 0x7
0x746: V654 = S[0x7]
0x747: V655 = 0x1
0x749: V656 = 0xa0
0x74b: V657 = 0x2
0x74d: V658 = EXP 0x2 0xa0
0x74e: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74f: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0x751: JUMP 0x364
---
Entry stack: [V13, 0x364]
Stack pops: 1
Stack additions: [S0, V660]
Exit stack: [V13, 0x364, V660]

================================

Block 0x752
[0x752:0x757]
---
Predecessors: [0x38b]
Successors: [0x2b7]
---
0x752 JUMPDEST
0x753 PUSH1 0x1
0x755 SLOAD
0x756 DUP2
0x757 JUMP
---
0x752: JUMPDEST 
0x753: V661 = 0x1
0x755: V662 = S[0x1]
0x757: JUMP 0x2b7
---
Entry stack: [V13, 0x2b7]
Stack pops: 1
Stack additions: [S0, V662]
Exit stack: [V13, 0x2b7, V662]

================================

Block 0x758
[0x758:0x75d]
---
Predecessors: [0x39e]
Successors: [0x2b7]
---
0x758 JUMPDEST
0x759 PUSH1 0x6
0x75b SLOAD
0x75c DUP2
0x75d JUMP
---
0x758: JUMPDEST 
0x759: V663 = 0x6
0x75b: V664 = S[0x6]
0x75d: JUMP 0x2b7
---
Entry stack: [V13, 0x2b7]
Stack pops: 1
Stack additions: [S0, V664]
Exit stack: [V13, 0x2b7, V664]

================================

Block 0x75e
[0x75e:0x76c]
---
Predecessors: [0x3b1]
Successors: [0x364]
---
0x75e JUMPDEST
0x75f PUSH1 0x0
0x761 SLOAD
0x762 PUSH1 0x1
0x764 PUSH1 0xa0
0x766 PUSH1 0x2
0x768 EXP
0x769 SUB
0x76a AND
0x76b DUP2
0x76c JUMP
---
0x75e: JUMPDEST 
0x75f: V665 = 0x0
0x761: V666 = S[0x0]
0x762: V667 = 0x1
0x764: V668 = 0xa0
0x766: V669 = 0x2
0x768: V670 = EXP 0x2 0xa0
0x769: V671 = SUB 0x10000000000000000000000000000000000000000 0x1
0x76a: V672 = AND 0xffffffffffffffffffffffffffffffffffffffff V666
0x76c: JUMP 0x364
---
Entry stack: [V13, 0x364]
Stack pops: 1
Stack additions: [S0, V672]
Exit stack: [V13, 0x364, V672]

================================

Block 0x76d
[0x76d:0x772]
---
Predecessors: [0x3c4]
Successors: [0x2b7]
---
0x76d JUMPDEST
0x76e PUSH1 0x2
0x770 SLOAD
0x771 DUP2
0x772 JUMP
---
0x76d: JUMPDEST 
0x76e: V673 = 0x2
0x770: V674 = S[0x2]
0x772: JUMP 0x2b7
---
Entry stack: [V13, 0x2b7]
Stack pops: 1
Stack additions: [S0, V674]
Exit stack: [V13, 0x2b7, V674]

================================

Block 0x773
[0x773:0x793]
---
Predecessors: [0x3d7]
Successors: [0x33d]
---
0x773 JUMPDEST
0x774 PUSH1 0x7
0x776 SLOAD
0x777 PUSH21 0x10000000000000000000000000000000000000000
0x78d SWAP1
0x78e DIV
0x78f PUSH1 0xff
0x791 AND
0x792 DUP2
0x793 JUMP
---
0x773: JUMPDEST 
0x774: V675 = 0x7
0x776: V676 = S[0x7]
0x777: V677 = 0x10000000000000000000000000000000000000000
0x78e: V678 = DIV V676 0x10000000000000000000000000000000000000000
0x78f: V679 = 0xff
0x791: V680 = AND 0xff V678
0x793: JUMP 0x33d
---
Entry stack: [V13, 0x33d]
Stack pops: 1
Stack additions: [S0, V680]
Exit stack: [V13, 0x33d, V680]

================================

Block 0x794
[0x794:0x7ab]
---
Predecessors: [0x3ea]
Successors: [0x7ac, 0x7b0]
---
0x794 JUMPDEST
0x795 PUSH1 0x0
0x797 DUP1
0x798 SLOAD
0x799 CALLER
0x79a PUSH1 0x1
0x79c PUSH1 0xa0
0x79e PUSH1 0x2
0x7a0 EXP
0x7a1 SUB
0x7a2 SWAP1
0x7a3 DUP2
0x7a4 AND
0x7a5 SWAP2
0x7a6 AND
0x7a7 EQ
0x7a8 PUSH2 0x7b0
0x7ab JUMPI
---
0x794: JUMPDEST 
0x795: V681 = 0x0
0x798: V682 = S[0x0]
0x799: V683 = CALLER
0x79a: V684 = 0x1
0x79c: V685 = 0xa0
0x79e: V686 = 0x2
0x7a0: V687 = EXP 0x2 0xa0
0x7a1: V688 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a4: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V683
0x7a6: V690 = AND V682 0xffffffffffffffffffffffffffffffffffffffff
0x7a7: V691 = EQ V690 V689
0x7a8: V692 = 0x7b0
0x7ab: JUMPI 0x7b0 V691
---
Entry stack: [V13, 0x2a2]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x2a2, 0x0]

================================

Block 0x7ac
[0x7ac:0x7af]
---
Predecessors: [0x794]
Successors: []
---
0x7ac PUSH1 0x0
0x7ae DUP1
0x7af REVERT
---
0x7ac: V693 = 0x0
0x7af: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2a2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, 0x0]

================================

Block 0x7b0
[0x7b0:0x7c3]
---
Predecessors: [0x794]
Successors: [0x7c4, 0x7f9]
---
0x7b0 JUMPDEST
0x7b1 PUSH1 0x1
0x7b3 SLOAD
0x7b4 PUSH1 0x1
0x7b6 PUSH1 0xa0
0x7b8 PUSH1 0x2
0x7ba EXP
0x7bb SUB
0x7bc ADDRESS
0x7bd AND
0x7be BALANCE
0x7bf LT
0x7c0 PUSH2 0x7f9
0x7c3 JUMPI
---
0x7b0: JUMPDEST 
0x7b1: V694 = 0x1
0x7b3: V695 = S[0x1]
0x7b4: V696 = 0x1
0x7b6: V697 = 0xa0
0x7b8: V698 = 0x2
0x7ba: V699 = EXP 0x2 0xa0
0x7bb: V700 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7bc: V701 = ADDRESS
0x7bd: V702 = AND V701 0xffffffffffffffffffffffffffffffffffffffff
0x7be: V703 = BALANCE V702
0x7bf: V704 = LT V703 V695
0x7c0: V705 = 0x7f9
0x7c3: JUMPI 0x7f9 V704
---
Entry stack: [V13, 0x2a2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, 0x0]

================================

Block 0x7c4
[0x7c4:0x7f8]
---
Predecessors: [0x7b0]
Successors: [0x7f9]
---
0x7c4 PUSH1 0x7
0x7c6 DUP1
0x7c7 SLOAD
0x7c8 PUSH21 0xff0000000000000000000000000000000000000000
0x7de NOT
0x7df AND
0x7e0 PUSH21 0x10000000000000000000000000000000000000000
0x7f6 OR
0x7f7 SWAP1
0x7f8 SSTORE
---
0x7c4: V706 = 0x7
0x7c7: V707 = S[0x7]
0x7c8: V708 = 0xff0000000000000000000000000000000000000000
0x7de: V709 = NOT 0xff0000000000000000000000000000000000000000
0x7df: V710 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V707
0x7e0: V711 = 0x10000000000000000000000000000000000000000
0x7f6: V712 = OR 0x10000000000000000000000000000000000000000 V710
0x7f8: S[0x7] = V712
---
Entry stack: [V13, 0x2a2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, 0x0]

================================

Block 0x7f9
[0x7f9:0x822]
---
Predecessors: [0x7b0, 0x7c4]
Successors: [0x823, 0x91c]
---
0x7f9 JUMPDEST
0x7fa PUSH1 0x7
0x7fc SLOAD
0x7fd PUSH22 0x1000000000000000000000000000000000000000000
0x814 SWAP1
0x815 DIV
0x816 PUSH1 0xff
0x818 AND
0x819 ISZERO
0x81a ISZERO
0x81b PUSH1 0x1
0x81d EQ
0x81e ISZERO
0x81f PUSH2 0x91c
0x822 JUMPI
---
0x7f9: JUMPDEST 
0x7fa: V713 = 0x7
0x7fc: V714 = S[0x7]
0x7fd: V715 = 0x1000000000000000000000000000000000000000000
0x815: V716 = DIV V714 0x1000000000000000000000000000000000000000000
0x816: V717 = 0xff
0x818: V718 = AND 0xff V716
0x819: V719 = ISZERO V718
0x81a: V720 = ISZERO V719
0x81b: V721 = 0x1
0x81d: V722 = EQ 0x1 V720
0x81e: V723 = ISZERO V722
0x81f: V724 = 0x91c
0x822: JUMPI 0x91c V723
---
Entry stack: [V13, 0x2a2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, 0x0]

================================

Block 0x823
[0x823:0x852]
---
Predecessors: [0x7f9]
Successors: [0x853, 0x91c]
---
0x823 POP
0x824 PUSH1 0x7
0x826 DUP1
0x827 SLOAD
0x828 PUSH22 0xff000000000000000000000000000000000000000000
0x83f NOT
0x840 AND
0x841 SWAP1
0x842 SSTORE
0x843 PUSH1 0x4
0x845 SLOAD
0x846 PUSH1 0x3
0x848 SLOAD
0x849 SUB
0x84a PUSH1 0x0
0x84c DUP2
0x84d GT
0x84e ISZERO
0x84f PUSH2 0x91c
0x852 JUMPI
---
0x824: V725 = 0x7
0x827: V726 = S[0x7]
0x828: V727 = 0xff000000000000000000000000000000000000000000
0x83f: V728 = NOT 0xff000000000000000000000000000000000000000000
0x840: V729 = AND 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff V726
0x842: S[0x7] = V729
0x843: V730 = 0x4
0x845: V731 = S[0x4]
0x846: V732 = 0x3
0x848: V733 = S[0x3]
0x849: V734 = SUB V733 V731
0x84a: V735 = 0x0
0x84d: V736 = GT V734 0x0
0x84e: V737 = ISZERO V736
0x84f: V738 = 0x91c
0x852: JUMPI 0x91c V737
---
Entry stack: [V13, 0x2a2, 0x0]
Stack pops: 1
Stack additions: [V734]
Exit stack: [V13, 0x2a2, V734]

================================

Block 0x853
[0x853:0x8ae]
---
Predecessors: [0x823]
Successors: [0x8af, 0x8b3]
---
0x853 PUSH1 0x7
0x855 SLOAD
0x856 PUSH1 0x4
0x858 SLOAD
0x859 PUSH1 0x3
0x85b SLOAD
0x85c PUSH1 0x1
0x85e PUSH1 0xa0
0x860 PUSH1 0x2
0x862 EXP
0x863 SUB
0x864 SWAP1
0x865 SWAP3
0x866 AND
0x867 SWAP2
0x868 PUSH4 0xa9059cbb
0x86d SWAP2
0x86e CALLER
0x86f SWAP2
0x870 SUB
0x871 PUSH1 0x40
0x873 MLOAD
0x874 PUSH1 0xe0
0x876 PUSH1 0x2
0x878 EXP
0x879 PUSH4 0xffffffff
0x87e DUP6
0x87f AND
0x880 MUL
0x881 DUP2
0x882 MSTORE
0x883 PUSH1 0x1
0x885 PUSH1 0xa0
0x887 PUSH1 0x2
0x889 EXP
0x88a SUB
0x88b SWAP1
0x88c SWAP3
0x88d AND
0x88e PUSH1 0x4
0x890 DUP4
0x891 ADD
0x892 MSTORE
0x893 PUSH1 0x24
0x895 DUP3
0x896 ADD
0x897 MSTORE
0x898 PUSH1 0x44
0x89a ADD
0x89b PUSH1 0x0
0x89d PUSH1 0x40
0x89f MLOAD
0x8a0 DUP1
0x8a1 DUP4
0x8a2 SUB
0x8a3 DUP2
0x8a4 PUSH1 0x0
0x8a6 DUP8
0x8a7 DUP1
0x8a8 EXTCODESIZE
0x8a9 ISZERO
0x8aa ISZERO
0x8ab PUSH2 0x8b3
0x8ae JUMPI
---
0x853: V739 = 0x7
0x855: V740 = S[0x7]
0x856: V741 = 0x4
0x858: V742 = S[0x4]
0x859: V743 = 0x3
0x85b: V744 = S[0x3]
0x85c: V745 = 0x1
0x85e: V746 = 0xa0
0x860: V747 = 0x2
0x862: V748 = EXP 0x2 0xa0
0x863: V749 = SUB 0x10000000000000000000000000000000000000000 0x1
0x866: V750 = AND V740 0xffffffffffffffffffffffffffffffffffffffff
0x868: V751 = 0xa9059cbb
0x86e: V752 = CALLER
0x870: V753 = SUB V744 V742
0x871: V754 = 0x40
0x873: V755 = M[0x40]
0x874: V756 = 0xe0
0x876: V757 = 0x2
0x878: V758 = EXP 0x2 0xe0
0x879: V759 = 0xffffffff
0x87f: V760 = AND 0xa9059cbb 0xffffffff
0x880: V761 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x882: M[V755] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x883: V762 = 0x1
0x885: V763 = 0xa0
0x887: V764 = 0x2
0x889: V765 = EXP 0x2 0xa0
0x88a: V766 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88d: V767 = AND V752 0xffffffffffffffffffffffffffffffffffffffff
0x88e: V768 = 0x4
0x891: V769 = ADD V755 0x4
0x892: M[V769] = V767
0x893: V770 = 0x24
0x896: V771 = ADD V755 0x24
0x897: M[V771] = V753
0x898: V772 = 0x44
0x89a: V773 = ADD 0x44 V755
0x89b: V774 = 0x0
0x89d: V775 = 0x40
0x89f: V776 = M[0x40]
0x8a2: V777 = SUB V773 V776
0x8a4: V778 = 0x0
0x8a8: V779 = EXTCODESIZE V750
0x8a9: V780 = ISZERO V779
0x8aa: V781 = ISZERO V780
0x8ab: V782 = 0x8b3
0x8ae: JUMPI 0x8b3 V781
---
Entry stack: [V13, 0x2a2, V734]
Stack pops: 0
Stack additions: [V750, 0xa9059cbb, V773, 0x0, V776, V777, V776, 0x0, V750]
Exit stack: [V13, 0x2a2, V734, V750, 0xa9059cbb, V773, 0x0, V776, V777, V776, 0x0, V750]

================================

Block 0x8af
[0x8af:0x8b2]
---
Predecessors: [0x853]
Successors: []
---
0x8af PUSH1 0x0
0x8b1 DUP1
0x8b2 REVERT
---
0x8af: V783 = 0x0
0x8b2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2a2, V734, V750, 0xa9059cbb, V773, 0x0, V776, V777, V776, 0x0, V750]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, V734, V750, 0xa9059cbb, V773, 0x0, V776, V777, V776, 0x0, V750]

================================

Block 0x8b3
[0x8b3:0x8bf]
---
Predecessors: [0x853]
Successors: [0x8c0, 0x8c4]
---
0x8b3 JUMPDEST
0x8b4 PUSH2 0x2c6
0x8b7 GAS
0x8b8 SUB
0x8b9 CALL
0x8ba ISZERO
0x8bb ISZERO
0x8bc PUSH2 0x8c4
0x8bf JUMPI
---
0x8b3: JUMPDEST 
0x8b4: V784 = 0x2c6
0x8b7: V785 = GAS
0x8b8: V786 = SUB V785 0x2c6
0x8b9: V787 = CALL V786 V750 0x0 V776 V777 V776 0x0
0x8ba: V788 = ISZERO V787
0x8bb: V789 = ISZERO V788
0x8bc: V790 = 0x8c4
0x8bf: JUMPI 0x8c4 V789
---
Entry stack: [V13, 0x2a2, V734, V750, 0xa9059cbb, V773, 0x0, V776, V777, V776, 0x0, V750]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x2a2, V734, V750, 0xa9059cbb, V773]

================================

Block 0x8c0
[0x8c0:0x8c3]
---
Predecessors: [0x8b3]
Successors: []
---
0x8c0 PUSH1 0x0
0x8c2 DUP1
0x8c3 REVERT
---
0x8c0: V791 = 0x0
0x8c3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2a2, V734, V750, 0xa9059cbb, V773]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, V734, V750, 0xa9059cbb, V773]

================================

Block 0x8c4
[0x8c4:0x91b]
---
Predecessors: [0x8b3]
Successors: [0x91c]
---
0x8c4 JUMPDEST
0x8c5 POP
0x8c6 POP
0x8c7 POP
0x8c8 PUSH32 0x860b533173a7b1027d391a00a46e79992fe2f681fc082e49c56ba22db74601c6
0x8e9 CALLER
0x8ea DUP3
0x8eb PUSH1 0x1
0x8ed PUSH1 0x40
0x8ef MLOAD
0x8f0 PUSH1 0x1
0x8f2 PUSH1 0xa0
0x8f4 PUSH1 0x2
0x8f6 EXP
0x8f7 SUB
0x8f8 SWAP1
0x8f9 SWAP4
0x8fa AND
0x8fb DUP4
0x8fc MSTORE
0x8fd PUSH1 0x20
0x8ff DUP4
0x900 ADD
0x901 SWAP2
0x902 SWAP1
0x903 SWAP2
0x904 MSTORE
0x905 ISZERO
0x906 ISZERO
0x907 PUSH1 0x40
0x909 DUP1
0x90a DUP4
0x90b ADD
0x90c SWAP2
0x90d SWAP1
0x90e SWAP2
0x90f MSTORE
0x910 PUSH1 0x60
0x912 SWAP1
0x913 SWAP2
0x914 ADD
0x915 SWAP1
0x916 MLOAD
0x917 DUP1
0x918 SWAP2
0x919 SUB
0x91a SWAP1
0x91b LOG1
---
0x8c4: JUMPDEST 
0x8c8: V792 = 0x860b533173a7b1027d391a00a46e79992fe2f681fc082e49c56ba22db74601c6
0x8e9: V793 = CALLER
0x8eb: V794 = 0x1
0x8ed: V795 = 0x40
0x8ef: V796 = M[0x40]
0x8f0: V797 = 0x1
0x8f2: V798 = 0xa0
0x8f4: V799 = 0x2
0x8f6: V800 = EXP 0x2 0xa0
0x8f7: V801 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8fa: V802 = AND V793 0xffffffffffffffffffffffffffffffffffffffff
0x8fc: M[V796] = V802
0x8fd: V803 = 0x20
0x900: V804 = ADD V796 0x20
0x904: M[V804] = V734
0x905: V805 = ISZERO 0x1
0x906: V806 = ISZERO 0x0
0x907: V807 = 0x40
0x90b: V808 = ADD V796 0x40
0x90f: M[V808] = 0x1
0x910: V809 = 0x60
0x914: V810 = ADD V796 0x60
0x916: V811 = M[0x40]
0x919: V812 = SUB V810 V811
0x91b: LOG V811 V812 0x860b533173a7b1027d391a00a46e79992fe2f681fc082e49c56ba22db74601c6
---
Entry stack: [V13, 0x2a2, V734, V750, 0xa9059cbb, V773]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V13, 0x2a2, V734]

================================

Block 0x91c
[0x91c:0x9b1]
---
Predecessors: [0x7f9, 0x823, 0x8c4]
Successors: [0x2a2]
---
0x91c JUMPDEST
0x91d PUSH32 0x3fab0e6c8b4b7241eab95ef91964a3cfcb8f58957be12d28897da2016af54a7e
0x93e PUSH1 0x0
0x940 DUP1
0x941 SWAP1
0x942 SLOAD
0x943 SWAP1
0x944 PUSH2 0x100
0x947 EXP
0x948 SWAP1
0x949 DIV
0x94a PUSH1 0x1
0x94c PUSH1 0xa0
0x94e PUSH1 0x2
0x950 EXP
0x951 SUB
0x952 AND
0x953 PUSH1 0x1
0x955 SLOAD
0x956 ADDRESS
0x957 PUSH1 0x1
0x959 PUSH1 0xa0
0x95b PUSH1 0x2
0x95d EXP
0x95e SUB
0x95f AND
0x960 BALANCE
0x961 PUSH1 0x7
0x963 PUSH1 0x14
0x965 SWAP1
0x966 SLOAD
0x967 SWAP1
0x968 PUSH2 0x100
0x96b EXP
0x96c SWAP1
0x96d DIV
0x96e PUSH1 0xff
0x970 AND
0x971 PUSH1 0x4
0x973 SLOAD
0x974 PUSH1 0x40
0x976 MLOAD
0x977 PUSH1 0x1
0x979 PUSH1 0xa0
0x97b PUSH1 0x2
0x97d EXP
0x97e SUB
0x97f SWAP1
0x980 SWAP6
0x981 AND
0x982 DUP6
0x983 MSTORE
0x984 PUSH1 0x20
0x986 DUP6
0x987 ADD
0x988 SWAP4
0x989 SWAP1
0x98a SWAP4
0x98b MSTORE
0x98c PUSH1 0x40
0x98e DUP1
0x98f DUP6
0x990 ADD
0x991 SWAP3
0x992 SWAP1
0x993 SWAP3
0x994 MSTORE
0x995 ISZERO
0x996 ISZERO
0x997 PUSH1 0x60
0x999 DUP5
0x99a ADD
0x99b MSTORE
0x99c PUSH1 0x80
0x99e DUP4
0x99f ADD
0x9a0 SWAP2
0x9a1 SWAP1
0x9a2 SWAP2
0x9a3 MSTORE
0x9a4 PUSH1 0xa0
0x9a6 SWAP1
0x9a7 SWAP2
0x9a8 ADD
0x9a9 SWAP1
0x9aa MLOAD
0x9ab DUP1
0x9ac SWAP2
0x9ad SUB
0x9ae SWAP1
0x9af LOG1
0x9b0 POP
0x9b1 JUMP
---
0x91c: JUMPDEST 
0x91d: V813 = 0x3fab0e6c8b4b7241eab95ef91964a3cfcb8f58957be12d28897da2016af54a7e
0x93e: V814 = 0x0
0x942: V815 = S[0x0]
0x944: V816 = 0x100
0x947: V817 = EXP 0x100 0x0
0x949: V818 = DIV V815 0x1
0x94a: V819 = 0x1
0x94c: V820 = 0xa0
0x94e: V821 = 0x2
0x950: V822 = EXP 0x2 0xa0
0x951: V823 = SUB 0x10000000000000000000000000000000000000000 0x1
0x952: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff V818
0x953: V825 = 0x1
0x955: V826 = S[0x1]
0x956: V827 = ADDRESS
0x957: V828 = 0x1
0x959: V829 = 0xa0
0x95b: V830 = 0x2
0x95d: V831 = EXP 0x2 0xa0
0x95e: V832 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95f: V833 = AND 0xffffffffffffffffffffffffffffffffffffffff V827
0x960: V834 = BALANCE V833
0x961: V835 = 0x7
0x963: V836 = 0x14
0x966: V837 = S[0x7]
0x968: V838 = 0x100
0x96b: V839 = EXP 0x100 0x14
0x96d: V840 = DIV V837 0x10000000000000000000000000000000000000000
0x96e: V841 = 0xff
0x970: V842 = AND 0xff V840
0x971: V843 = 0x4
0x973: V844 = S[0x4]
0x974: V845 = 0x40
0x976: V846 = M[0x40]
0x977: V847 = 0x1
0x979: V848 = 0xa0
0x97b: V849 = 0x2
0x97d: V850 = EXP 0x2 0xa0
0x97e: V851 = SUB 0x10000000000000000000000000000000000000000 0x1
0x981: V852 = AND V824 0xffffffffffffffffffffffffffffffffffffffff
0x983: M[V846] = V852
0x984: V853 = 0x20
0x987: V854 = ADD V846 0x20
0x98b: M[V854] = V826
0x98c: V855 = 0x40
0x990: V856 = ADD V846 0x40
0x994: M[V856] = V834
0x995: V857 = ISZERO V842
0x996: V858 = ISZERO V857
0x997: V859 = 0x60
0x99a: V860 = ADD V846 0x60
0x99b: M[V860] = V858
0x99c: V861 = 0x80
0x99f: V862 = ADD V846 0x80
0x9a3: M[V862] = V844
0x9a4: V863 = 0xa0
0x9a8: V864 = ADD V846 0xa0
0x9aa: V865 = M[0x40]
0x9ad: V866 = SUB V864 V865
0x9af: LOG V865 V866 0x3fab0e6c8b4b7241eab95ef91964a3cfcb8f58957be12d28897da2016af54a7e
0x9b1: JUMP 0x2a2
---
Entry stack: [V13, 0x2a2, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x9b2
[0x9b2:0x9cd]
---
Predecessors: [0x3fd]
Successors: [0x9ce, 0x9f1]
---
0x9b2 JUMPDEST
0x9b3 PUSH1 0x0
0x9b5 DUP1
0x9b6 PUSH1 0x0
0x9b8 DUP1
0x9b9 PUSH1 0x0
0x9bb DUP1
0x9bc PUSH1 0x0
0x9be DUP1
0x9bf PUSH1 0x0
0x9c1 DUP1
0x9c2 PUSH1 0x0
0x9c4 PUSH1 0x5
0x9c6 SLOAD
0x9c7 TIMESTAMP
0x9c8 LT
0x9c9 ISZERO
0x9ca PUSH2 0x9f1
0x9cd JUMPI
---
0x9b2: JUMPDEST 
0x9b3: V867 = 0x0
0x9b6: V868 = 0x0
0x9b9: V869 = 0x0
0x9bc: V870 = 0x0
0x9bf: V871 = 0x0
0x9c2: V872 = 0x0
0x9c4: V873 = 0x5
0x9c6: V874 = S[0x5]
0x9c7: V875 = TIMESTAMP
0x9c8: V876 = LT V875 V874
0x9c9: V877 = ISZERO V876
0x9ca: V878 = 0x9f1
0x9cd: JUMPI 0x9f1 V877
---
Entry stack: [V13, 0x405]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x405, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x9ce
[0x9ce:0x9f0]
---
Predecessors: [0x9b2]
Successors: [0x9f1]
---
0x9ce PUSH1 0x5
0x9d0 SLOAD
0x9d1 TIMESTAMP
0x9d2 SWAP12
0x9d3 POP
0x9d4 SWAP10
0x9d5 POP
0x9d6 PUSH3 0x15180
0x9da DUP12
0x9db DUP12
0x9dc SUB
0x9dd SWAP1
0x9de DUP2
0x9df DIV
0x9e0 SWAP10
0x9e1 POP
0x9e2 PUSH2 0xe10
0x9e5 DUP2
0x9e6 DIV
0x9e7 SWAP9
0x9e8 POP
0x9e9 PUSH1 0x3c
0x9eb DUP2
0x9ec DIV
0x9ed SWAP8
0x9ee POP
0x9ef SWAP4
0x9f0 POP
---
0x9ce: V879 = 0x5
0x9d0: V880 = S[0x5]
0x9d1: V881 = TIMESTAMP
0x9d6: V882 = 0x15180
0x9dc: V883 = SUB V880 V881
0x9df: V884 = DIV V883 0x15180
0x9e2: V885 = 0xe10
0x9e6: V886 = DIV V883 0xe10
0x9e9: V887 = 0x3c
0x9ec: V888 = DIV V883 0x3c
---
Entry stack: [V13, 0x405, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 11
Stack additions: [V881, V880, V884, V886, V888, S5, S4, V883, S2, S1, S0]
Exit stack: [V13, 0x405, V881, V880, V884, V886, V888, 0x0, 0x0, V883, 0x0, 0x0, 0x0]

================================

Block 0x9f1
[0x9f1:0xa77]
---
Predecessors: [0x9b2, 0x9ce]
Successors: [0xa78, 0xa7c]
---
0x9f1 JUMPDEST
0x9f2 PUSH1 0x1
0x9f4 SLOAD
0x9f5 PUSH1 0x4
0x9f7 SLOAD
0x9f8 PUSH1 0x3
0x9fa SLOAD
0x9fb PUSH8 0xde0b6b3a7640000
0xa04 ADDRESS
0xa05 PUSH1 0x1
0xa07 PUSH1 0xa0
0xa09 PUSH1 0x2
0xa0b EXP
0xa0c SUB
0xa0d AND
0xa0e DUP1
0xa0f BALANCE
0xa10 SWAP1
0xa11 SWAP5
0xa12 SUB
0xa13 DUP2
0xa14 SWAP1
0xa15 DIV
0xa16 SWAP10
0xa17 POP
0xa18 SWAP2
0xa19 SWAP1
0xa1a SUB
0xa1b SWAP7
0xa1c POP
0xa1d SWAP1
0xa1e BALANCE
0xa1f PUSH1 0x7
0xa21 SLOAD
0xa22 SWAP2
0xa23 SWAP1
0xa24 DIV
0xa25 SWAP4
0xa26 POP
0xa27 PUSH1 0x1
0xa29 PUSH1 0xa0
0xa2b PUSH1 0x2
0xa2d EXP
0xa2e SUB
0xa2f AND
0xa30 PUSH4 0x70a08231
0xa35 ADDRESS
0xa36 PUSH1 0x0
0xa38 PUSH1 0x40
0xa3a MLOAD
0xa3b PUSH1 0x20
0xa3d ADD
0xa3e MSTORE
0xa3f PUSH1 0x40
0xa41 MLOAD
0xa42 PUSH1 0xe0
0xa44 PUSH1 0x2
0xa46 EXP
0xa47 PUSH4 0xffffffff
0xa4c DUP5
0xa4d AND
0xa4e MUL
0xa4f DUP2
0xa50 MSTORE
0xa51 PUSH1 0x1
0xa53 PUSH1 0xa0
0xa55 PUSH1 0x2
0xa57 EXP
0xa58 SUB
0xa59 SWAP1
0xa5a SWAP2
0xa5b AND
0xa5c PUSH1 0x4
0xa5e DUP3
0xa5f ADD
0xa60 MSTORE
0xa61 PUSH1 0x24
0xa63 ADD
0xa64 PUSH1 0x20
0xa66 PUSH1 0x40
0xa68 MLOAD
0xa69 DUP1
0xa6a DUP4
0xa6b SUB
0xa6c DUP2
0xa6d PUSH1 0x0
0xa6f DUP8
0xa70 DUP1
0xa71 EXTCODESIZE
0xa72 ISZERO
0xa73 ISZERO
0xa74 PUSH2 0xa7c
0xa77 JUMPI
---
0x9f1: JUMPDEST 
0x9f2: V889 = 0x1
0x9f4: V890 = S[0x1]
0x9f5: V891 = 0x4
0x9f7: V892 = S[0x4]
0x9f8: V893 = 0x3
0x9fa: V894 = S[0x3]
0x9fb: V895 = 0xde0b6b3a7640000
0xa04: V896 = ADDRESS
0xa05: V897 = 0x1
0xa07: V898 = 0xa0
0xa09: V899 = 0x2
0xa0b: V900 = EXP 0x2 0xa0
0xa0c: V901 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0d: V902 = AND 0xffffffffffffffffffffffffffffffffffffffff V896
0xa0f: V903 = BALANCE V902
0xa12: V904 = SUB V890 V903
0xa15: V905 = DIV V904 0xde0b6b3a7640000
0xa1a: V906 = SUB V894 V892
0xa1e: V907 = BALANCE V902
0xa1f: V908 = 0x7
0xa21: V909 = S[0x7]
0xa24: V910 = DIV V907 0xde0b6b3a7640000
0xa27: V911 = 0x1
0xa29: V912 = 0xa0
0xa2b: V913 = 0x2
0xa2d: V914 = EXP 0x2 0xa0
0xa2e: V915 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2f: V916 = AND 0xffffffffffffffffffffffffffffffffffffffff V909
0xa30: V917 = 0x70a08231
0xa35: V918 = ADDRESS
0xa36: V919 = 0x0
0xa38: V920 = 0x40
0xa3a: V921 = M[0x40]
0xa3b: V922 = 0x20
0xa3d: V923 = ADD 0x20 V921
0xa3e: M[V923] = 0x0
0xa3f: V924 = 0x40
0xa41: V925 = M[0x40]
0xa42: V926 = 0xe0
0xa44: V927 = 0x2
0xa46: V928 = EXP 0x2 0xe0
0xa47: V929 = 0xffffffff
0xa4d: V930 = AND 0x70a08231 0xffffffff
0xa4e: V931 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xa50: M[V925] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa51: V932 = 0x1
0xa53: V933 = 0xa0
0xa55: V934 = 0x2
0xa57: V935 = EXP 0x2 0xa0
0xa58: V936 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5b: V937 = AND V918 0xffffffffffffffffffffffffffffffffffffffff
0xa5c: V938 = 0x4
0xa5f: V939 = ADD V925 0x4
0xa60: M[V939] = V937
0xa61: V940 = 0x24
0xa63: V941 = ADD 0x24 V925
0xa64: V942 = 0x20
0xa66: V943 = 0x40
0xa68: V944 = M[0x40]
0xa6b: V945 = SUB V941 V944
0xa6d: V946 = 0x0
0xa71: V947 = EXTCODESIZE V916
0xa72: V948 = ISZERO V947
0xa73: V949 = ISZERO V948
0xa74: V950 = 0xa7c
0xa77: JUMPI 0xa7c V949
---
Entry stack: [V13, 0x405, S10, S9, S8, S7, S6, 0x0, 0x0, S3, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [V905, V906, S3, V910, S1, S0, V916, 0x70a08231, V941, 0x20, V944, V945, V944, 0x0, V916]
Exit stack: [V13, 0x405, S10, S9, S8, S7, S6, V905, V906, S3, V910, 0x0, 0x0, V916, 0x70a08231, V941, 0x20, V944, V945, V944, 0x0, V916]

================================

Block 0xa78
[0xa78:0xa7b]
---
Predecessors: [0x9f1]
Successors: []
---
0xa78 PUSH1 0x0
0xa7a DUP1
0xa7b REVERT
---
0xa78: V951 = 0x0
0xa7b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x405, S19, S18, S17, S16, S15, V905, V906, S12, V910, 0x0, 0x0, V916, 0x70a08231, V941, 0x20, V944, V945, V944, 0x0, V916]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x405, S19, S18, S17, S16, S15, V905, V906, S12, V910, 0x0, 0x0, V916, 0x70a08231, V941, 0x20, V944, V945, V944, 0x0, V916]

================================

Block 0xa7c
[0xa7c:0xa88]
---
Predecessors: [0x9f1]
Successors: [0xa89, 0xa8d]
---
0xa7c JUMPDEST
0xa7d PUSH2 0x2c6
0xa80 GAS
0xa81 SUB
0xa82 CALL
0xa83 ISZERO
0xa84 ISZERO
0xa85 PUSH2 0xa8d
0xa88 JUMPI
---
0xa7c: JUMPDEST 
0xa7d: V952 = 0x2c6
0xa80: V953 = GAS
0xa81: V954 = SUB V953 0x2c6
0xa82: V955 = CALL V954 V916 0x0 V944 V945 V944 0x20
0xa83: V956 = ISZERO V955
0xa84: V957 = ISZERO V956
0xa85: V958 = 0xa8d
0xa88: JUMPI 0xa8d V957
---
Entry stack: [V13, 0x405, S19, S18, S17, S16, S15, V905, V906, S12, V910, 0x0, 0x0, V916, 0x70a08231, V941, 0x20, V944, V945, V944, 0x0, V916]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x405, S19, S18, S17, S16, S15, V905, V906, S12, V910, 0x0, 0x0, V916, 0x70a08231, V941]

================================

Block 0xa89
[0xa89:0xa8c]
---
Predecessors: [0xa7c]
Successors: []
---
0xa89 PUSH1 0x0
0xa8b DUP1
0xa8c REVERT
---
0xa89: V959 = 0x0
0xa8c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x405, S13, S12, S11, S10, S9, V905, V906, S6, V910, 0x0, 0x0, V916, 0x70a08231, V941]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x405, S13, S12, S11, S10, S9, V905, V906, S6, V910, 0x0, 0x0, V916, 0x70a08231, V941]

================================

Block 0xa8d
[0xa8d:0xaaa]
---
Predecessors: [0xa7c]
Successors: [0x405]
---
0xa8d JUMPDEST
0xa8e POP
0xa8f POP
0xa90 POP
0xa91 PUSH1 0x40
0xa93 MLOAD
0xa94 DUP1
0xa95 MLOAD
0xa96 SWAP1
0xa97 POP
0xa98 SWAP2
0xa99 POP
0xa9a PUSH1 0x3
0xa9c SLOAD
0xa9d SWAP1
0xa9e POP
0xa9f SWAP1
0xaa0 SWAP2
0xaa1 SWAP3
0xaa2 SWAP4
0xaa3 SWAP5
0xaa4 SWAP6
0xaa5 SWAP7
0xaa6 SWAP8
0xaa7 SWAP9
0xaa8 SWAP10
0xaa9 SWAP11
0xaaa JUMP
---
0xa8d: JUMPDEST 
0xa91: V960 = 0x40
0xa93: V961 = M[0x40]
0xa95: V962 = M[V961]
0xa9a: V963 = 0x3
0xa9c: V964 = S[0x3]
0xaaa: JUMP 0x405
---
Entry stack: [V13, 0x405, S13, S12, S11, S10, S9, V905, V906, S6, V910, 0x0, 0x0, V916, 0x70a08231, V941]
Stack pops: 15
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, V962, V964]
Exit stack: [V13, S13, S12, S11, S10, S9, V905, V906, S6, V910, V962, V964]

================================

Block 0xaab
[0xaab:0xac2]
---
Predecessors: [0x46c]
Successors: [0xac3, 0xac7]
---
0xaab JUMPDEST
0xaac PUSH1 0x0
0xaae DUP1
0xaaf SLOAD
0xab0 CALLER
0xab1 PUSH1 0x1
0xab3 PUSH1 0xa0
0xab5 PUSH1 0x2
0xab7 EXP
0xab8 SUB
0xab9 SWAP1
0xaba DUP2
0xabb AND
0xabc SWAP2
0xabd AND
0xabe EQ
0xabf PUSH2 0xac7
0xac2 JUMPI
---
0xaab: JUMPDEST 
0xaac: V965 = 0x0
0xaaf: V966 = S[0x0]
0xab0: V967 = CALLER
0xab1: V968 = 0x1
0xab3: V969 = 0xa0
0xab5: V970 = 0x2
0xab7: V971 = EXP 0x2 0xa0
0xab8: V972 = SUB 0x10000000000000000000000000000000000000000 0x1
0xabb: V973 = AND 0xffffffffffffffffffffffffffffffffffffffff V967
0xabd: V974 = AND V966 0xffffffffffffffffffffffffffffffffffffffff
0xabe: V975 = EQ V974 V973
0xabf: V976 = 0xac7
0xac2: JUMPI 0xac7 V975
---
Entry stack: [V13, 0x2a2, V400]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x2a2, V400, 0x0]

================================

Block 0xac3
[0xac3:0xac6]
---
Predecessors: [0xaab]
Successors: []
---
0xac3 PUSH1 0x0
0xac5 DUP1
0xac6 REVERT
---
0xac3: V977 = 0x0
0xac6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2a2, V400, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2a2, V400, 0x0]

================================

Block 0xac7
[0xac7:0xb43]
---
Predecessors: [0xaab]
Successors: [0x2a2]
---
0xac7 JUMPDEST
0xac8 POP
0xac9 PUSH1 0x0
0xacb DUP1
0xacc SLOAD
0xacd PUSH1 0x1
0xacf PUSH1 0xa0
0xad1 PUSH1 0x2
0xad3 EXP
0xad4 SUB
0xad5 DUP4
0xad6 DUP2
0xad7 AND
0xad8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaed NOT
0xaee DUP4
0xaef AND
0xaf0 OR
0xaf1 SWAP3
0xaf2 DUP4
0xaf3 SWAP1
0xaf4 SSTORE
0xaf5 SWAP1
0xaf6 DUP2
0xaf7 AND
0xaf8 SWAP2
0xaf9 PUSH32 0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c
0xb1a SWAP2
0xb1b DUP4
0xb1c SWAP2
0xb1d AND
0xb1e PUSH1 0x40
0xb20 MLOAD
0xb21 PUSH1 0x1
0xb23 PUSH1 0xa0
0xb25 PUSH1 0x2
0xb27 EXP
0xb28 SUB
0xb29 SWAP3
0xb2a DUP4
0xb2b AND
0xb2c DUP2
0xb2d MSTORE
0xb2e SWAP2
0xb2f AND
0xb30 PUSH1 0x20
0xb32 DUP3
0xb33 ADD
0xb34 MSTORE
0xb35 PUSH1 0x40
0xb37 SWAP1
0xb38 DUP2
0xb39 ADD
0xb3a SWAP1
0xb3b MLOAD
0xb3c DUP1
0xb3d SWAP2
0xb3e SUB
0xb3f SWAP1
0xb40 LOG1
0xb41 POP
0xb42 POP
0xb43 JUMP
---
0xac7: JUMPDEST 
0xac9: V978 = 0x0
0xacc: V979 = S[0x0]
0xacd: V980 = 0x1
0xacf: V981 = 0xa0
0xad1: V982 = 0x2
0xad3: V983 = EXP 0x2 0xa0
0xad4: V984 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad7: V985 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0xad8: V986 = 0xffffffffffffffffffffffffffffffffffffffff
0xaed: V987 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaef: V988 = AND V979 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xaf0: V989 = OR V988 V985
0xaf4: S[0x0] = V989
0xaf7: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V979
0xaf9: V991 = 0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c
0xb1d: V992 = AND V989 0xffffffffffffffffffffffffffffffffffffffff
0xb1e: V993 = 0x40
0xb20: V994 = M[0x40]
0xb21: V995 = 0x1
0xb23: V996 = 0xa0
0xb25: V997 = 0x2
0xb27: V998 = EXP 0x2 0xa0
0xb28: V999 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2b: V1000 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0xb2d: M[V994] = V1000
0xb2f: V1001 = AND 0xffffffffffffffffffffffffffffffffffffffff V992
0xb30: V1002 = 0x20
0xb33: V1003 = ADD V994 0x20
0xb34: M[V1003] = V1001
0xb35: V1004 = 0x40
0xb39: V1005 = ADD 0x40 V994
0xb3b: V1006 = M[0x40]
0xb3e: V1007 = SUB V1005 V1006
0xb40: LOG V1006 V1007 0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c
0xb43: JUMP 0x2a2
---
Entry stack: [V13, 0x2a2, V400, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0xb44
[0xb44:0xb7a]
---
Predecessors: [0x48b]
Successors: [0x277]
---
0xb44 JUMPDEST
0xb45 PUSH1 0x1
0xb47 PUSH1 0xa0
0xb49 PUSH1 0x2
0xb4b EXP
0xb4c SUB
0xb4d AND
0xb4e PUSH1 0x0
0xb50 SWAP1
0xb51 DUP2
0xb52 MSTORE
0xb53 PUSH1 0x8
0xb55 PUSH1 0x20
0xb57 MSTORE
0xb58 PUSH1 0x40
0xb5a SWAP1
0xb5b SHA3
0xb5c DUP1
0xb5d SLOAD
0xb5e PUSH1 0x1
0xb60 SWAP1
0xb61 SWAP2
0xb62 ADD
0xb63 SLOAD
0xb64 PUSH4 0x5f5e100
0xb69 PUSH8 0xde0b6b3a7640000
0xb72 SWAP1
0xb73 SWAP3
0xb74 MUL
0xb75 SWAP2
0xb76 SWAP1
0xb77 SWAP2
0xb78 DIV
0xb79 SWAP2
0xb7a JUMP
---
0xb44: JUMPDEST 
0xb45: V1008 = 0x1
0xb47: V1009 = 0xa0
0xb49: V1010 = 0x2
0xb4b: V1011 = EXP 0x2 0xa0
0xb4c: V1012 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4d: V1013 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0xb4e: V1014 = 0x0
0xb52: M[0x0] = V1013
0xb53: V1015 = 0x8
0xb55: V1016 = 0x20
0xb57: M[0x20] = 0x8
0xb58: V1017 = 0x40
0xb5b: V1018 = SHA3 0x0 0x40
0xb5d: V1019 = S[V1018]
0xb5e: V1020 = 0x1
0xb62: V1021 = ADD V1018 0x1
0xb63: V1022 = S[V1021]
0xb64: V1023 = 0x5f5e100
0xb69: V1024 = 0xde0b6b3a7640000
0xb74: V1025 = MUL V1019 0xde0b6b3a7640000
0xb78: V1026 = DIV V1025 0x5f5e100
0xb7a: JUMP 0x277
---
Entry stack: [V13, 0x277, V414]
Stack pops: 2
Stack additions: [V1026, V1022]
Exit stack: [V13, V1026, V1022]

================================

Block 0xb7b
[0xb7b:0xba6]
---
Predecessors: []
Successors: []
---
0xb7b STOP
0xb7c LOG1
0xb7d PUSH6 0x627a7a723058
0xb84 SHA3
0xb85 GASPRICE
0xb86 MISSING 0x1f
0xb87 SWAP7
0xb88 PUSH30 0x4c24b4870299c93a0b496bb2930d86295bb61d1ed2f704f61ee132320029
---
0xb7b: STOP 
0xb7c: LOG S0 S1 S2
0xb7d: V1027 = 0x627a7a723058
0xb84: V1028 = SHA3 0x627a7a723058 S3
0xb85: V1029 = GASPRICE
0xb86: MISSING 0x1f
0xb88: V1030 = 0x4c24b4870299c93a0b496bb2930d86295bb61d1ed2f704f61ee132320029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1029, V1028, 0x4c24b4870299c93a0b496bb2930d86295bb61d1ed2f704f61ee132320029, S7, S1, S2, S3, S4, S5, S6, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x813fbab
Entry block: 0x261
Exit block: 0x277
Body: 0x261, 0x268, 0x26c, 0x277, 0x49f

Function 1:
Public function signature: 0x163f9b4f
Entry block: 0x28f
Exit block: 0x2a2
Body: 0x28f, 0x296, 0x29a, 0x2a2, 0x4a9, 0x4c3, 0x4c7, 0x4de, 0x556

Function 2:
Public function signature: 0x21365597
Entry block: 0x2a4
Exit block: 0x2b7
Body: 0x2a4, 0x2ab, 0x2af, 0x2b7, 0x55a

Function 3:
Public function signature: 0x29dcb0cf
Entry block: 0x2c9
Exit block: 0x2b7
Body: 0x2b7, 0x2c9, 0x2d0, 0x2d4, 0x560

Function 4:
Public function signature: 0x5627df88
Entry block: 0x2dc
Exit block: 0x277
Body: 0x277, 0x2dc, 0x2e3, 0x2e7, 0x566

Function 5:
Public function signature: 0x641ccd83
Entry block: 0x2fb
Exit block: 0x2a2
Body: 0x2a2, 0x2fb, 0x302, 0x306, 0x57f, 0x596, 0x59a, 0x5ae, 0x5b3, 0x5b9, 0x5c7, 0x5cd, 0x5d2, 0x5d8, 0x5dc, 0x634, 0x638, 0x645, 0x649, 0x65b, 0x665, 0x66c, 0x672, 0x716

Function 6:
Public function signature: 0x6769d1f9
Entry block: 0x317
Exit block: 0x2b7
Body: 0x2b7, 0x317, 0x31e, 0x322, 0x71b

Function 7:
Public function signature: 0x692aa97e
Entry block: 0x32a
Exit block: 0x33d
Body: 0x32a, 0x331, 0x335, 0x33d, 0x721

Function 8:
Public function signature: 0x6e66f6e9
Entry block: 0x351
Exit block: 0x364
Body: 0x351, 0x358, 0x35c, 0x364, 0x743

Function 9:
Public function signature: 0x7a3a0e84
Entry block: 0x380
Exit block: 0x2b7
Body: 0x2b7, 0x380, 0x387, 0x38b, 0x752

Function 10:
Public function signature: 0x7b4fd96e
Entry block: 0x393
Exit block: 0x2b7
Body: 0x2b7, 0x393, 0x39a, 0x39e, 0x758

Function 11:
Public function signature: 0x8da5cb5b
Entry block: 0x3a6
Exit block: 0x364
Body: 0x364, 0x3a6, 0x3ad, 0x3b1, 0x75e

Function 12:
Public function signature: 0xa035b1fe
Entry block: 0x3b9
Exit block: 0x2b7
Body: 0x2b7, 0x3b9, 0x3c0, 0x3c4, 0x76d

Function 13:
Public function signature: 0xd424f628
Entry block: 0x3cc
Exit block: 0x33d
Body: 0x33d, 0x3cc, 0x3d3, 0x3d7, 0x773

Function 14:
Public function signature: 0xd67c1a7a
Entry block: 0x3df
Exit block: 0x8c0
Body: 0x2a2, 0x3df, 0x3e6, 0x3ea, 0x794, 0x7ac, 0x7b0, 0x7c4, 0x7f9, 0x823, 0x853, 0x8af, 0x8b3, 0x8c0, 0x8c4, 0x91c

Function 15:
Public function signature: 0xd8c02754
Entry block: 0x3f2
Exit block: 0x405
Body: 0x3f2, 0x3f9, 0x3fd, 0x405, 0x9b2, 0x9ce, 0x9f1, 0xa78, 0xa7c, 0xa89, 0xa8d

Function 16:
Public function signature: 0xf2fde38b
Entry block: 0x461
Exit block: 0x2a2
Body: 0x2a2, 0x461, 0x468, 0x46c, 0xaab, 0xac3, 0xac7

Function 17:
Public function signature: 0xf8b2cb4f
Entry block: 0x480
Exit block: 0x277
Body: 0x277, 0x480, 0x487, 0x48b, 0xb44

Function 18:
Public fallback function
Entry block: 0xe2
Exit block: 0x1f6
Body: 0xe2, 0xfe, 0x105, 0x10b, 0x10f, 0x130, 0x131, 0x13b, 0x13c, 0x148, 0x152, 0x158, 0x15c, 0x1e1, 0x1e5, 0x1f2, 0x1f6

