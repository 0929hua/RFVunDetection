Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x48
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x48
0xa: JUMPI 0x48 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x191]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x2e1a7d4d
0x34 EQ
0x35 PUSH2 0x191
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x2e1a7d4d
0x34: V10 = EQ 0x2e1a7d4d V8
0x35: V11 = 0x191
0x38: JUMPI 0x191 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x1a9]
---
0x39 DUP1
0x3a PUSH4 0x9e5faafc
0x3f EQ
0x40 PUSH2 0x1a9
0x43 JUMPI
---
0x3a: V12 = 0x9e5faafc
0x3f: V13 = EQ 0x9e5faafc V8
0x40: V14 = 0x1a9
0x43: JUMPI 0x1a9 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x47]
---
Predecessors: [0x39]
Successors: [0x48]
---
0x44 PUSH2 0x48
0x47 JUMP
---
0x44: V15 = 0x48
0x47: JUMP 0x48
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x48
[0x48:0x4b]
---
Predecessors: [0x0, 0x44]
Successors: [0x4c]
---
0x48 JUMPDEST
0x49 PUSH2 0x18f
---
0x48: JUMPDEST 
0x49: V16 = 0x18f
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x18f]
Exit stack: [V8, 0x18f]

================================

Block 0x4c
[0x4c:0x128]
---
Predecessors: [0x48]
Successors: [0x129]
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f PUSH1 0x0
0x51 SWAP1
0x52 SLOAD
0x53 SWAP1
0x54 PUSH2 0x100
0x57 EXP
0x58 SWAP1
0x59 DIV
0x5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f AND
0x70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85 AND
0x86 PUSH4 0x2e1a7d4d
0x8b PUSH1 0x0
0x8d PUSH1 0x0
0x8f SWAP1
0x90 SLOAD
0x91 SWAP1
0x92 PUSH2 0x100
0x95 EXP
0x96 SWAP1
0x97 DIV
0x98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad AND
0xae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3 AND
0xc4 PUSH4 0x70a08231
0xc9 ADDRESS
0xca PUSH1 0x40
0xcc MLOAD
0xcd DUP3
0xce PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xec MUL
0xed DUP2
0xee MSTORE
0xef PUSH1 0x4
0xf1 ADD
0xf2 DUP1
0xf3 DUP3
0xf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109 AND
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x20
0x10e ADD
0x10f SWAP2
0x110 POP
0x111 POP
0x112 PUSH1 0x20
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 DUP4
0x119 SUB
0x11a DUP2
0x11b PUSH1 0x0
0x11d DUP8
0x11e PUSH2 0x61da
0x121 GAS
0x122 SUB
0x123 CALL
0x124 ISZERO
0x125 PUSH2 0x2
0x128 JUMPI
---
0x4c: JUMPDEST 
0x4d: V17 = 0x0
0x4f: V18 = 0x0
0x52: V19 = S[0x0]
0x54: V20 = 0x100
0x57: V21 = EXP 0x100 0x0
0x59: V22 = DIV V19 0x1
0x5a: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x70: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x85: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x86: V27 = 0x2e1a7d4d
0x8b: V28 = 0x0
0x8d: V29 = 0x0
0x90: V30 = S[0x0]
0x92: V31 = 0x100
0x95: V32 = EXP 0x100 0x0
0x97: V33 = DIV V30 0x1
0x98: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xad: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xae: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0xc4: V38 = 0x70a08231
0xc9: V39 = ADDRESS
0xca: V40 = 0x40
0xcc: V41 = M[0x40]
0xce: V42 = 0x100000000000000000000000000000000000000000000000000000000
0xec: V43 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xee: M[V41] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xef: V44 = 0x4
0xf1: V45 = ADD 0x4 V41
0xf4: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0x109: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x10b: M[V45] = V47
0x10c: V48 = 0x20
0x10e: V49 = ADD 0x20 V45
0x112: V50 = 0x20
0x114: V51 = 0x40
0x116: V52 = M[0x40]
0x119: V53 = SUB V49 V52
0x11b: V54 = 0x0
0x11e: V55 = 0x61da
0x121: V56 = GAS
0x122: V57 = SUB V56 0x61da
0x123: V58 = CALL V57 V37 0x0 V52 V53 V52 0x20
0x124: V59 = ISZERO V58
0x125: V60 = 0x2
0x128: THROWI V59
---
Entry stack: [V8, 0x18f]
Stack pops: 0
Stack additions: [V26, 0x2e1a7d4d, V37, 0x70a08231, V49]
Exit stack: [V8, 0x18f, V26, 0x2e1a7d4d, V37, 0x70a08231, V49]

================================

Block 0x129
[0x129:0x17e]
---
Predecessors: [0x4c]
Successors: [0x17f]
---
0x129 POP
0x12a POP
0x12b POP
0x12c PUSH1 0x40
0x12e MLOAD
0x12f DUP1
0x130 MLOAD
0x131 SWAP1
0x132 PUSH1 0x20
0x134 ADD
0x135 POP
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP3
0x13a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x158 MUL
0x159 DUP2
0x15a MSTORE
0x15b PUSH1 0x4
0x15d ADD
0x15e DUP1
0x15f DUP3
0x160 DUP2
0x161 MSTORE
0x162 PUSH1 0x20
0x164 ADD
0x165 SWAP2
0x166 POP
0x167 POP
0x168 PUSH1 0x20
0x16a PUSH1 0x40
0x16c MLOAD
0x16d DUP1
0x16e DUP4
0x16f SUB
0x170 DUP2
0x171 PUSH1 0x0
0x173 DUP8
0x174 PUSH2 0x61da
0x177 GAS
0x178 SUB
0x179 CALL
0x17a ISZERO
0x17b PUSH2 0x2
0x17e JUMPI
---
0x12c: V61 = 0x40
0x12e: V62 = M[0x40]
0x130: V63 = M[V62]
0x132: V64 = 0x20
0x134: V65 = ADD 0x20 V62
0x136: V66 = 0x40
0x138: V67 = M[0x40]
0x13a: V68 = 0x100000000000000000000000000000000000000000000000000000000
0x158: V69 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2e1a7d4d
0x15a: M[V67] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x15b: V70 = 0x4
0x15d: V71 = ADD 0x4 V67
0x161: M[V71] = V63
0x162: V72 = 0x20
0x164: V73 = ADD 0x20 V71
0x168: V74 = 0x20
0x16a: V75 = 0x40
0x16c: V76 = M[0x40]
0x16f: V77 = SUB V73 V76
0x171: V78 = 0x0
0x174: V79 = 0x61da
0x177: V80 = GAS
0x178: V81 = SUB V80 0x61da
0x179: V82 = CALL V81 V26 0x0 V76 V77 V76 0x20
0x17a: V83 = ISZERO V82
0x17b: V84 = 0x2
0x17e: THROWI V83
---
Entry stack: [V8, 0x18f, V26, 0x2e1a7d4d, V37, 0x70a08231, V49]
Stack pops: 5
Stack additions: [S4, S3, V73]
Exit stack: [V8, 0x18f, V26, 0x2e1a7d4d, V73]

================================

Block 0x17f
[0x17f:0x18c]
---
Predecessors: [0x129]
Successors: [0x18d]
---
0x17f POP
0x180 POP
0x181 POP
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 MLOAD
0x187 SWAP1
0x188 PUSH1 0x20
0x18a ADD
0x18b POP
0x18c POP
---
0x182: V85 = 0x40
0x184: V86 = M[0x40]
0x186: V87 = M[V86]
0x188: V88 = 0x20
0x18a: V89 = ADD 0x20 V86
---
Entry stack: [V8, 0x18f, V26, 0x2e1a7d4d, V73]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0x18f]

================================

Block 0x18d
[0x18d:0x18e]
---
Predecessors: [0x17f]
Successors: [0x18f]
---
0x18d JUMPDEST
0x18e JUMP
---
0x18d: JUMPDEST 
0x18e: JUMP 0x18f
---
Entry stack: [V8, 0x18f]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x18f
[0x18f:0x190]
---
Predecessors: [0x18d]
Successors: []
---
0x18f JUMPDEST
0x190 STOP
---
0x18f: JUMPDEST 
0x190: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x191
[0x191:0x1a6]
---
Predecessors: [0xb]
Successors: [0x1b8]
---
0x191 JUMPDEST
0x192 PUSH2 0x1a7
0x195 PUSH1 0x4
0x197 DUP1
0x198 DUP1
0x199 CALLDATALOAD
0x19a SWAP1
0x19b PUSH1 0x20
0x19d ADD
0x19e SWAP1
0x19f SWAP2
0x1a0 SWAP1
0x1a1 POP
0x1a2 POP
0x1a3 PUSH2 0x1b8
0x1a6 JUMP
---
0x191: JUMPDEST 
0x192: V90 = 0x1a7
0x195: V91 = 0x4
0x199: V92 = CALLDATALOAD 0x4
0x19b: V93 = 0x20
0x19d: V94 = ADD 0x20 0x4
0x1a3: V95 = 0x1b8
0x1a6: JUMP 0x1b8
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1a7, V92]
Exit stack: [V8, 0x1a7, V92]

================================

Block 0x1a7
[0x1a7:0x1a8]
---
Predecessors: [0x2bc]
Successors: []
---
0x1a7 JUMPDEST
0x1a8 STOP
---
0x1a7: JUMPDEST 
0x1a8: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1a9
[0x1a9:0x1b5]
---
Predecessors: [0x39]
Successors: [0x2bf]
---
0x1a9 JUMPDEST
0x1aa PUSH2 0x1b6
0x1ad PUSH1 0x4
0x1af DUP1
0x1b0 POP
0x1b1 POP
0x1b2 PUSH2 0x2bf
0x1b5 JUMP
---
0x1a9: JUMPDEST 
0x1aa: V96 = 0x1b6
0x1ad: V97 = 0x4
0x1b2: V98 = 0x2bf
0x1b5: JUMP 0x2bf
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1b6]
Exit stack: [V8, 0x1b6]

================================

Block 0x1b6
[0x1b6:0x1b7]
---
Predecessors: [0x525]
Successors: []
---
0x1b6 JUMPDEST
0x1b7 STOP
---
0x1b6: JUMPDEST 
0x1b7: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1b8
[0x1b8:0x240]
---
Predecessors: [0x191]
Successors: [0x241]
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x0
0x1bb PUSH1 0x0
0x1bd SWAP1
0x1be SLOAD
0x1bf SWAP1
0x1c0 PUSH2 0x100
0x1c3 EXP
0x1c4 SWAP1
0x1c5 DIV
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f1 AND
0x1f2 PUSH4 0x2e1a7d4d
0x1f7 DUP3
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb DUP3
0x1fc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x21a MUL
0x21b DUP2
0x21c MSTORE
0x21d PUSH1 0x4
0x21f ADD
0x220 DUP1
0x221 DUP3
0x222 DUP2
0x223 MSTORE
0x224 PUSH1 0x20
0x226 ADD
0x227 SWAP2
0x228 POP
0x229 POP
0x22a PUSH1 0x20
0x22c PUSH1 0x40
0x22e MLOAD
0x22f DUP1
0x230 DUP4
0x231 SUB
0x232 DUP2
0x233 PUSH1 0x0
0x235 DUP8
0x236 PUSH2 0x61da
0x239 GAS
0x23a SUB
0x23b CALL
0x23c ISZERO
0x23d PUSH2 0x2
0x240 JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V99 = 0x0
0x1bb: V100 = 0x0
0x1be: V101 = S[0x0]
0x1c0: V102 = 0x100
0x1c3: V103 = EXP 0x100 0x0
0x1c5: V104 = DIV V101 0x1
0x1c6: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1dc: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1f2: V109 = 0x2e1a7d4d
0x1f8: V110 = 0x40
0x1fa: V111 = M[0x40]
0x1fc: V112 = 0x100000000000000000000000000000000000000000000000000000000
0x21a: V113 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2e1a7d4d
0x21c: M[V111] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x21d: V114 = 0x4
0x21f: V115 = ADD 0x4 V111
0x223: M[V115] = V92
0x224: V116 = 0x20
0x226: V117 = ADD 0x20 V115
0x22a: V118 = 0x20
0x22c: V119 = 0x40
0x22e: V120 = M[0x40]
0x231: V121 = SUB V117 V120
0x233: V122 = 0x0
0x236: V123 = 0x61da
0x239: V124 = GAS
0x23a: V125 = SUB V124 0x61da
0x23b: V126 = CALL V125 V108 0x0 V120 V121 V120 0x20
0x23c: V127 = ISZERO V126
0x23d: V128 = 0x2
0x240: THROWI V127
---
Entry stack: [V8, 0x1a7, V92]
Stack pops: 1
Stack additions: [S0, V108, 0x2e1a7d4d, V117]
Exit stack: [V8, 0x1a7, V92, V108, 0x2e1a7d4d, V117]

================================

Block 0x241
[0x241:0x2bb]
---
Predecessors: [0x1b8]
Successors: [0x2bc]
---
0x241 POP
0x242 POP
0x243 POP
0x244 PUSH1 0x40
0x246 MLOAD
0x247 DUP1
0x248 MLOAD
0x249 SWAP1
0x24a PUSH1 0x20
0x24c ADD
0x24d POP
0x24e POP
0x24f PUSH1 0x1
0x251 PUSH1 0x0
0x253 SWAP1
0x254 SLOAD
0x255 SWAP1
0x256 PUSH2 0x100
0x259 EXP
0x25a SWAP1
0x25b DIV
0x25c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x271 AND
0x272 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x287 AND
0x288 ADDRESS
0x289 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29e AND
0x29f BALANCE
0x2a0 PUSH1 0x40
0x2a2 MLOAD
0x2a3 DUP1
0x2a4 SWAP1
0x2a5 POP
0x2a6 PUSH1 0x0
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab DUP1
0x2ac DUP4
0x2ad SUB
0x2ae DUP2
0x2af DUP6
0x2b0 DUP8
0x2b1 PUSH2 0x8502
0x2b4 GAS
0x2b5 SUB
0x2b6 CALL
0x2b7 SWAP3
0x2b8 POP
0x2b9 POP
0x2ba POP
0x2bb POP
---
0x244: V129 = 0x40
0x246: V130 = M[0x40]
0x248: V131 = M[V130]
0x24a: V132 = 0x20
0x24c: V133 = ADD 0x20 V130
0x24f: V134 = 0x1
0x251: V135 = 0x0
0x254: V136 = S[0x1]
0x256: V137 = 0x100
0x259: V138 = EXP 0x100 0x0
0x25b: V139 = DIV V136 0x1
0x25c: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x271: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x272: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x287: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x288: V144 = ADDRESS
0x289: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x29e: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x29f: V147 = BALANCE V146
0x2a0: V148 = 0x40
0x2a2: V149 = M[0x40]
0x2a6: V150 = 0x0
0x2a8: V151 = 0x40
0x2aa: V152 = M[0x40]
0x2ad: V153 = SUB V149 V152
0x2b1: V154 = 0x8502
0x2b4: V155 = GAS
0x2b5: V156 = SUB V155 0x8502
0x2b6: V157 = CALL V156 V143 V147 V152 V153 V152 0x0
---
Entry stack: [V8, 0x1a7, V92, V108, 0x2e1a7d4d, V117]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0x1a7, V92]

================================

Block 0x2bc
[0x2bc:0x2be]
---
Predecessors: [0x241]
Successors: [0x1a7]
---
0x2bc JUMPDEST
0x2bd POP
0x2be JUMP
---
0x2bc: JUMPDEST 
0x2be: JUMP 0x1a7
---
Entry stack: [V8, 0x1a7, V92]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x2bf
[0x2bf:0x365]
---
Predecessors: [0x1a9]
Successors: [0x366]
---
0x2bf JUMPDEST
0x2c0 ADDRESS
0x2c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d6 AND
0x2d7 BALANCE
0x2d8 PUSH1 0x2
0x2da PUSH1 0x0
0x2dc POP
0x2dd DUP2
0x2de SWAP1
0x2df SSTORE
0x2e0 POP
0x2e1 PUSH1 0x0
0x2e3 PUSH1 0x0
0x2e5 SWAP1
0x2e6 SLOAD
0x2e7 SWAP1
0x2e8 PUSH2 0x100
0x2eb EXP
0x2ec SWAP1
0x2ed DIV
0x2ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x303 AND
0x304 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x319 AND
0x31a PUSH4 0xd0e30db0
0x31f PUSH1 0x2
0x321 PUSH1 0x0
0x323 POP
0x324 SLOAD
0x325 PUSH1 0x40
0x327 MLOAD
0x328 DUP3
0x329 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x347 MUL
0x348 DUP2
0x349 MSTORE
0x34a PUSH1 0x4
0x34c ADD
0x34d DUP1
0x34e SWAP1
0x34f POP
0x350 PUSH1 0x20
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 DUP4
0x357 SUB
0x358 DUP2
0x359 DUP6
0x35a DUP9
0x35b PUSH2 0x8502
0x35e GAS
0x35f SUB
0x360 CALL
0x361 ISZERO
0x362 PUSH2 0x2
0x365 JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V158 = ADDRESS
0x2c1: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d6: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x2d7: V161 = BALANCE V160
0x2d8: V162 = 0x2
0x2da: V163 = 0x0
0x2df: S[0x2] = V161
0x2e1: V164 = 0x0
0x2e3: V165 = 0x0
0x2e6: V166 = S[0x0]
0x2e8: V167 = 0x100
0x2eb: V168 = EXP 0x100 0x0
0x2ed: V169 = DIV V166 0x1
0x2ee: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x303: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x304: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x319: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x31a: V174 = 0xd0e30db0
0x31f: V175 = 0x2
0x321: V176 = 0x0
0x324: V177 = S[0x2]
0x325: V178 = 0x40
0x327: V179 = M[0x40]
0x329: V180 = 0x100000000000000000000000000000000000000000000000000000000
0x347: V181 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x349: M[V179] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x34a: V182 = 0x4
0x34c: V183 = ADD 0x4 V179
0x350: V184 = 0x20
0x352: V185 = 0x40
0x354: V186 = M[0x40]
0x357: V187 = SUB V183 V186
0x35b: V188 = 0x8502
0x35e: V189 = GAS
0x35f: V190 = SUB V189 0x8502
0x360: V191 = CALL V190 V173 V177 V186 V187 V186 0x20
0x361: V192 = ISZERO V191
0x362: V193 = 0x2
0x365: THROWI V192
---
Entry stack: [V8, 0x1b6]
Stack pops: 0
Stack additions: [V173, 0xd0e30db0, V177, V183]
Exit stack: [V8, 0x1b6, V173, 0xd0e30db0, V177, V183]

================================

Block 0x366
[0x366:0x450]
---
Predecessors: [0x2bf]
Successors: [0x451]
---
0x366 POP
0x367 POP
0x368 POP
0x369 POP
0x36a PUSH1 0x40
0x36c MLOAD
0x36d DUP1
0x36e MLOAD
0x36f SWAP1
0x370 PUSH1 0x20
0x372 ADD
0x373 POP
0x374 POP
0x375 PUSH1 0x0
0x377 PUSH1 0x0
0x379 SWAP1
0x37a SLOAD
0x37b SWAP1
0x37c PUSH2 0x100
0x37f EXP
0x380 SWAP1
0x381 DIV
0x382 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x397 AND
0x398 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ad AND
0x3ae PUSH4 0x2e1a7d4d
0x3b3 PUSH1 0x0
0x3b5 PUSH1 0x0
0x3b7 SWAP1
0x3b8 SLOAD
0x3b9 SWAP1
0x3ba PUSH2 0x100
0x3bd EXP
0x3be SWAP1
0x3bf DIV
0x3c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d5 AND
0x3d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3eb AND
0x3ec PUSH4 0x70a08231
0x3f1 ADDRESS
0x3f2 PUSH1 0x40
0x3f4 MLOAD
0x3f5 DUP3
0x3f6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x414 MUL
0x415 DUP2
0x416 MSTORE
0x417 PUSH1 0x4
0x419 ADD
0x41a DUP1
0x41b DUP3
0x41c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x431 AND
0x432 DUP2
0x433 MSTORE
0x434 PUSH1 0x20
0x436 ADD
0x437 SWAP2
0x438 POP
0x439 POP
0x43a PUSH1 0x20
0x43c PUSH1 0x40
0x43e MLOAD
0x43f DUP1
0x440 DUP4
0x441 SUB
0x442 DUP2
0x443 PUSH1 0x0
0x445 DUP8
0x446 PUSH2 0x61da
0x449 GAS
0x44a SUB
0x44b CALL
0x44c ISZERO
0x44d PUSH2 0x2
0x450 JUMPI
---
0x36a: V194 = 0x40
0x36c: V195 = M[0x40]
0x36e: V196 = M[V195]
0x370: V197 = 0x20
0x372: V198 = ADD 0x20 V195
0x375: V199 = 0x0
0x377: V200 = 0x0
0x37a: V201 = S[0x0]
0x37c: V202 = 0x100
0x37f: V203 = EXP 0x100 0x0
0x381: V204 = DIV V201 0x1
0x382: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x397: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x398: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ad: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x3ae: V209 = 0x2e1a7d4d
0x3b3: V210 = 0x0
0x3b5: V211 = 0x0
0x3b8: V212 = S[0x0]
0x3ba: V213 = 0x100
0x3bd: V214 = EXP 0x100 0x0
0x3bf: V215 = DIV V212 0x1
0x3c0: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d5: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x3d6: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x3eb: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x3ec: V220 = 0x70a08231
0x3f1: V221 = ADDRESS
0x3f2: V222 = 0x40
0x3f4: V223 = M[0x40]
0x3f6: V224 = 0x100000000000000000000000000000000000000000000000000000000
0x414: V225 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x416: M[V223] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x417: V226 = 0x4
0x419: V227 = ADD 0x4 V223
0x41c: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x431: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x433: M[V227] = V229
0x434: V230 = 0x20
0x436: V231 = ADD 0x20 V227
0x43a: V232 = 0x20
0x43c: V233 = 0x40
0x43e: V234 = M[0x40]
0x441: V235 = SUB V231 V234
0x443: V236 = 0x0
0x446: V237 = 0x61da
0x449: V238 = GAS
0x44a: V239 = SUB V238 0x61da
0x44b: V240 = CALL V239 V219 0x0 V234 V235 V234 0x20
0x44c: V241 = ISZERO V240
0x44d: V242 = 0x2
0x450: THROWI V241
---
Entry stack: [V8, 0x1b6, V173, 0xd0e30db0, V177, V183]
Stack pops: 4
Stack additions: [V208, 0x2e1a7d4d, V219, 0x70a08231, V231]
Exit stack: [V8, 0x1b6, V208, 0x2e1a7d4d, V219, 0x70a08231, V231]

================================

Block 0x451
[0x451:0x4a6]
---
Predecessors: [0x366]
Successors: [0x4a7]
---
0x451 POP
0x452 POP
0x453 POP
0x454 PUSH1 0x40
0x456 MLOAD
0x457 DUP1
0x458 MLOAD
0x459 SWAP1
0x45a PUSH1 0x20
0x45c ADD
0x45d POP
0x45e PUSH1 0x40
0x460 MLOAD
0x461 DUP3
0x462 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x480 MUL
0x481 DUP2
0x482 MSTORE
0x483 PUSH1 0x4
0x485 ADD
0x486 DUP1
0x487 DUP3
0x488 DUP2
0x489 MSTORE
0x48a PUSH1 0x20
0x48c ADD
0x48d SWAP2
0x48e POP
0x48f POP
0x490 PUSH1 0x20
0x492 PUSH1 0x40
0x494 MLOAD
0x495 DUP1
0x496 DUP4
0x497 SUB
0x498 DUP2
0x499 PUSH1 0x0
0x49b DUP8
0x49c PUSH2 0x61da
0x49f GAS
0x4a0 SUB
0x4a1 CALL
0x4a2 ISZERO
0x4a3 PUSH2 0x2
0x4a6 JUMPI
---
0x454: V243 = 0x40
0x456: V244 = M[0x40]
0x458: V245 = M[V244]
0x45a: V246 = 0x20
0x45c: V247 = ADD 0x20 V244
0x45e: V248 = 0x40
0x460: V249 = M[0x40]
0x462: V250 = 0x100000000000000000000000000000000000000000000000000000000
0x480: V251 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2e1a7d4d
0x482: M[V249] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x483: V252 = 0x4
0x485: V253 = ADD 0x4 V249
0x489: M[V253] = V245
0x48a: V254 = 0x20
0x48c: V255 = ADD 0x20 V253
0x490: V256 = 0x20
0x492: V257 = 0x40
0x494: V258 = M[0x40]
0x497: V259 = SUB V255 V258
0x499: V260 = 0x0
0x49c: V261 = 0x61da
0x49f: V262 = GAS
0x4a0: V263 = SUB V262 0x61da
0x4a1: V264 = CALL V263 V208 0x0 V258 V259 V258 0x20
0x4a2: V265 = ISZERO V264
0x4a3: V266 = 0x2
0x4a6: THROWI V265
---
Entry stack: [V8, 0x1b6, V208, 0x2e1a7d4d, V219, 0x70a08231, V231]
Stack pops: 5
Stack additions: [S4, S3, V255]
Exit stack: [V8, 0x1b6, V208, 0x2e1a7d4d, V255]

================================

Block 0x4a7
[0x4a7:0x524]
---
Predecessors: [0x451]
Successors: [0x525]
---
0x4a7 POP
0x4a8 POP
0x4a9 POP
0x4aa PUSH1 0x40
0x4ac MLOAD
0x4ad DUP1
0x4ae MLOAD
0x4af SWAP1
0x4b0 PUSH1 0x20
0x4b2 ADD
0x4b3 POP
0x4b4 POP
0x4b5 PUSH1 0x1
0x4b7 PUSH1 0x0
0x4b9 SWAP1
0x4ba SLOAD
0x4bb SWAP1
0x4bc PUSH2 0x100
0x4bf EXP
0x4c0 SWAP1
0x4c1 DIV
0x4c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d7 AND
0x4d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ed AND
0x4ee PUSH1 0x3
0x4f0 ADDRESS
0x4f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x506 AND
0x507 BALANCE
0x508 DIV
0x509 PUSH1 0x40
0x50b MLOAD
0x50c DUP1
0x50d SWAP1
0x50e POP
0x50f PUSH1 0x0
0x511 PUSH1 0x40
0x513 MLOAD
0x514 DUP1
0x515 DUP4
0x516 SUB
0x517 DUP2
0x518 DUP6
0x519 DUP8
0x51a PUSH2 0x8502
0x51d GAS
0x51e SUB
0x51f CALL
0x520 SWAP3
0x521 POP
0x522 POP
0x523 POP
0x524 POP
---
0x4aa: V267 = 0x40
0x4ac: V268 = M[0x40]
0x4ae: V269 = M[V268]
0x4b0: V270 = 0x20
0x4b2: V271 = ADD 0x20 V268
0x4b5: V272 = 0x1
0x4b7: V273 = 0x0
0x4ba: V274 = S[0x1]
0x4bc: V275 = 0x100
0x4bf: V276 = EXP 0x100 0x0
0x4c1: V277 = DIV V274 0x1
0x4c2: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d7: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x4d8: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ed: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x4ee: V282 = 0x3
0x4f0: V283 = ADDRESS
0x4f1: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x506: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x507: V286 = BALANCE V285
0x508: V287 = DIV V286 0x3
0x509: V288 = 0x40
0x50b: V289 = M[0x40]
0x50f: V290 = 0x0
0x511: V291 = 0x40
0x513: V292 = M[0x40]
0x516: V293 = SUB V289 V292
0x51a: V294 = 0x8502
0x51d: V295 = GAS
0x51e: V296 = SUB V295 0x8502
0x51f: V297 = CALL V296 V281 V287 V292 V293 V292 0x0
---
Entry stack: [V8, 0x1b6, V208, 0x2e1a7d4d, V255]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0x1b6]

================================

Block 0x525
[0x525:0x526]
---
Predecessors: [0x4a7]
Successors: [0x1b6]
---
0x525 JUMPDEST
0x526 JUMP
---
0x525: JUMPDEST 
0x526: JUMP 0x1b6
---
Entry stack: [V8, 0x1b6]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x191
Exit block: 0x1a7
Body: 0x191, 0x1a7, 0x1b8, 0x241, 0x2bc

Function 1:
Public function signature: 0x9e5faafc
Entry block: 0x1a9
Exit block: 0x1b6
Body: 0x1a9, 0x1b6, 0x2bf, 0x366, 0x451, 0x4a7, 0x525

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x18f
Body: 0x44, 0x48, 0x4c, 0x129, 0x17f, 0x18d, 0x18f

