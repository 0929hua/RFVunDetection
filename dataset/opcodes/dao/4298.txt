Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x67
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x67
0xa: JUMPI 0x67 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x6b]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x53e3169
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x6b
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x53e3169
0x20: V14 = EQ V12 0x53e3169
0x21: V15 = 0x6b
0x24: JUMPI 0x6b V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x90]
---
0x25 DUP1
0x26 PUSH4 0x13bd94d2
0x2b EQ
0x2c PUSH2 0x90
0x2f JUMPI
---
0x26: V16 = 0x13bd94d2
0x2b: V17 = EQ 0x13bd94d2 V12
0x2c: V18 = 0x90
0x2f: JUMPI 0x90 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xb5]
---
0x30 DUP1
0x31 PUSH4 0x49b85a16
0x36 EQ
0x37 PUSH2 0xb5
0x3a JUMPI
---
0x31: V19 = 0x49b85a16
0x36: V20 = EQ 0x49b85a16 V12
0x37: V21 = 0xb5
0x3a: JUMPI 0xb5 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xe4]
---
0x3b DUP1
0x3c PUSH4 0x6b100384
0x41 EQ
0x42 PUSH2 0xe4
0x45 JUMPI
---
0x3c: V22 = 0x6b100384
0x41: V23 = EQ 0x6b100384 V12
0x42: V24 = 0xe4
0x45: JUMPI 0xe4 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x104]
---
0x46 DUP1
0x47 PUSH4 0xa6f2ae3a
0x4c EQ
0x4d PUSH2 0x104
0x50 JUMPI
---
0x47: V25 = 0xa6f2ae3a
0x4c: V26 = EQ 0xa6f2ae3a V12
0x4d: V27 = 0x104
0x50: JUMPI 0x104 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x10e]
---
0x51 DUP1
0x52 PUSH4 0xb9420310
0x57 EQ
0x58 PUSH2 0x10e
0x5b JUMPI
---
0x52: V28 = 0xb9420310
0x57: V29 = EQ 0xb9420310 V12
0x58: V30 = 0x10e
0x5b: JUMPI 0x10e V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x13d]
---
0x5c DUP1
0x5d PUSH4 0xece53132
0x62 EQ
0x63 PUSH2 0x13d
0x66 JUMPI
---
0x5d: V31 = 0xece53132
0x62: V32 = EQ 0xece53132 V12
0x63: V33 = 0x13d
0x66: JUMPI 0x13d V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x67]
---
Predecessors: [0x0, 0x5c, 0x1ea, 0x29c]
Successors: [0x68]
---
0x67 JUMPDEST
---
0x67: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x68
[0x68:0x68]
---
Predecessors: [0x67]
Successors: [0x69]
---
0x68 JUMPDEST
---
0x68: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x69
[0x69:0x6a]
---
Predecessors: [0x68]
Successors: []
---
0x69 JUMPDEST
0x6a STOP
---
0x69: JUMPDEST 
0x6a: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6b
[0x6b:0x71]
---
Predecessors: [0xb]
Successors: [0x72, 0x76]
---
0x6b JUMPDEST
0x6c CALLVALUE
0x6d ISZERO
0x6e PUSH2 0x76
0x71 JUMPI
---
0x6b: JUMPDEST 
0x6c: V34 = CALLVALUE
0x6d: V35 = ISZERO V34
0x6e: V36 = 0x76
0x71: JUMPI 0x76 V35
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x6b]
Successors: []
---
0x72 PUSH1 0x0
0x74 DUP1
0x75 REVERT
---
0x72: V37 = 0x0
0x75: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76
[0x76:0x7d]
---
Predecessors: [0x6b]
Successors: [0x170]
---
0x76 JUMPDEST
0x77 PUSH2 0x7e
0x7a PUSH2 0x170
0x7d JUMP
---
0x76: JUMPDEST 
0x77: V38 = 0x7e
0x7a: V39 = 0x170
0x7d: JUMP 0x170
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7e]
Exit stack: [V12, 0x7e]

================================

Block 0x7e
[0x7e:0x8f]
---
Predecessors: [0x170, 0x176]
Successors: []
---
0x7e JUMPDEST
0x7f PUSH1 0x40
0x81 MLOAD
0x82 SWAP1
0x83 DUP2
0x84 MSTORE
0x85 PUSH1 0x20
0x87 ADD
0x88 PUSH1 0x40
0x8a MLOAD
0x8b DUP1
0x8c SWAP2
0x8d SUB
0x8e SWAP1
0x8f RETURN
---
0x7e: JUMPDEST 
0x7f: V40 = 0x40
0x81: V41 = M[0x40]
0x84: M[V41] = S0
0x85: V42 = 0x20
0x87: V43 = ADD 0x20 V41
0x88: V44 = 0x40
0x8a: V45 = M[0x40]
0x8d: V46 = SUB V43 V45
0x8f: RETURN V45 V46
---
Entry stack: [V12, 0x7e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7e]

================================

Block 0x90
[0x90:0x96]
---
Predecessors: [0x25]
Successors: [0x97, 0x9b]
---
0x90 JUMPDEST
0x91 CALLVALUE
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x90: JUMPDEST 
0x91: V47 = CALLVALUE
0x92: V48 = ISZERO V47
0x93: V49 = 0x9b
0x96: JUMPI 0x9b V48
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x90]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V50 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b
[0x9b:0xa2]
---
Predecessors: [0x90]
Successors: [0x176]
---
0x9b JUMPDEST
0x9c PUSH2 0x7e
0x9f PUSH2 0x176
0xa2 JUMP
---
0x9b: JUMPDEST 
0x9c: V51 = 0x7e
0x9f: V52 = 0x176
0xa2: JUMP 0x176
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7e]
Exit stack: [V12, 0x7e]

================================

Block 0xa3
[0xa3:0xb4]
---
Predecessors: []
Successors: []
---
0xa3 JUMPDEST
0xa4 PUSH1 0x40
0xa6 MLOAD
0xa7 SWAP1
0xa8 DUP2
0xa9 MSTORE
0xaa PUSH1 0x20
0xac ADD
0xad PUSH1 0x40
0xaf MLOAD
0xb0 DUP1
0xb1 SWAP2
0xb2 SUB
0xb3 SWAP1
0xb4 RETURN
---
0xa3: JUMPDEST 
0xa4: V53 = 0x40
0xa6: V54 = M[0x40]
0xa9: M[V54] = S0
0xaa: V55 = 0x20
0xac: V56 = ADD 0x20 V54
0xad: V57 = 0x40
0xaf: V58 = M[0x40]
0xb2: V59 = SUB V56 V58
0xb4: RETURN V58 V59
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb5
[0xb5:0xbb]
---
Predecessors: [0x30]
Successors: [0xbc, 0xc0]
---
0xb5 JUMPDEST
0xb6 CALLVALUE
0xb7 ISZERO
0xb8 PUSH2 0xc0
0xbb JUMPI
---
0xb5: JUMPDEST 
0xb6: V60 = CALLVALUE
0xb7: V61 = ISZERO V60
0xb8: V62 = 0xc0
0xbb: JUMPI 0xc0 V61
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbc
[0xbc:0xbf]
---
Predecessors: [0xb5]
Successors: []
---
0xbc PUSH1 0x0
0xbe DUP1
0xbf REVERT
---
0xbc: V63 = 0x0
0xbf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc0
[0xc0:0xc7]
---
Predecessors: [0xb5]
Successors: [0x17c]
---
0xc0 JUMPDEST
0xc1 PUSH2 0xc8
0xc4 PUSH2 0x17c
0xc7 JUMP
---
0xc0: JUMPDEST 
0xc1: V64 = 0xc8
0xc4: V65 = 0x17c
0xc7: JUMP 0x17c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc8]
Exit stack: [V12, 0xc8]

================================

Block 0xc8
[0xc8:0xe3]
---
Predecessors: [0x17c, 0x29e]
Successors: []
---
0xc8 JUMPDEST
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc PUSH1 0x1
0xce PUSH1 0xa0
0xd0 PUSH1 0x2
0xd2 EXP
0xd3 SUB
0xd4 SWAP1
0xd5 SWAP2
0xd6 AND
0xd7 DUP2
0xd8 MSTORE
0xd9 PUSH1 0x20
0xdb ADD
0xdc PUSH1 0x40
0xde MLOAD
0xdf DUP1
0xe0 SWAP2
0xe1 SUB
0xe2 SWAP1
0xe3 RETURN
---
0xc8: JUMPDEST 
0xc9: V66 = 0x40
0xcb: V67 = M[0x40]
0xcc: V68 = 0x1
0xce: V69 = 0xa0
0xd0: V70 = 0x2
0xd2: V71 = EXP 0x2 0xa0
0xd3: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6: V73 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd8: M[V67] = V73
0xd9: V74 = 0x20
0xdb: V75 = ADD 0x20 V67
0xdc: V76 = 0x40
0xde: V77 = M[0x40]
0xe1: V78 = SUB V75 V77
0xe3: RETURN V77 V78
---
Entry stack: [V12, 0xc8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc8]

================================

Block 0xe4
[0xe4:0x101]
---
Predecessors: [0x3b]
Successors: [0x18b]
---
0xe4 JUMPDEST
0xe5 PUSH2 0x67
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 PUSH1 0x4
0xf2 CALLDATALOAD
0xf3 DUP2
0xf4 AND
0xf5 SWAP1
0xf6 PUSH1 0x24
0xf8 CALLDATALOAD
0xf9 SWAP1
0xfa PUSH1 0x44
0xfc CALLDATALOAD
0xfd AND
0xfe PUSH2 0x18b
0x101 JUMP
---
0xe4: JUMPDEST 
0xe5: V79 = 0x67
0xe8: V80 = 0x1
0xea: V81 = 0xa0
0xec: V82 = 0x2
0xee: V83 = EXP 0x2 0xa0
0xef: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V85 = 0x4
0xf2: V86 = CALLDATALOAD 0x4
0xf4: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0xf6: V88 = 0x24
0xf8: V89 = CALLDATALOAD 0x24
0xfa: V90 = 0x44
0xfc: V91 = CALLDATALOAD 0x44
0xfd: V92 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0xfe: V93 = 0x18b
0x101: JUMP 0x18b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x67, V87, V89, V92]
Exit stack: [V12, 0x67, V87, V89, V92]

================================

Block 0x102
[0x102:0x103]
---
Predecessors: []
Successors: []
---
0x102 JUMPDEST
0x103 STOP
---
0x102: JUMPDEST 
0x103: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x104
[0x104:0x10b]
---
Predecessors: [0x46]
Successors: [0x1ef]
---
0x104 JUMPDEST
0x105 PUSH2 0x67
0x108 PUSH2 0x1ef
0x10b JUMP
---
0x104: JUMPDEST 
0x105: V94 = 0x67
0x108: V95 = 0x1ef
0x10b: JUMP 0x1ef
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x67]
Exit stack: [V12, 0x67]

================================

Block 0x10c
[0x10c:0x10d]
---
Predecessors: []
Successors: []
---
0x10c JUMPDEST
0x10d STOP
---
0x10c: JUMPDEST 
0x10d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10e
[0x10e:0x114]
---
Predecessors: [0x51]
Successors: [0x115, 0x119]
---
0x10e JUMPDEST
0x10f CALLVALUE
0x110 ISZERO
0x111 PUSH2 0x119
0x114 JUMPI
---
0x10e: JUMPDEST 
0x10f: V96 = CALLVALUE
0x110: V97 = ISZERO V96
0x111: V98 = 0x119
0x114: JUMPI 0x119 V97
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x115
[0x115:0x118]
---
Predecessors: [0x10e]
Successors: []
---
0x115 PUSH1 0x0
0x117 DUP1
0x118 REVERT
---
0x115: V99 = 0x0
0x118: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x119
[0x119:0x120]
---
Predecessors: [0x10e]
Successors: [0x29e]
---
0x119 JUMPDEST
0x11a PUSH2 0xc8
0x11d PUSH2 0x29e
0x120 JUMP
---
0x119: JUMPDEST 
0x11a: V100 = 0xc8
0x11d: V101 = 0x29e
0x120: JUMP 0x29e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc8]
Exit stack: [V12, 0xc8]

================================

Block 0x121
[0x121:0x13c]
---
Predecessors: []
Successors: []
---
0x121 JUMPDEST
0x122 PUSH1 0x40
0x124 MLOAD
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d SWAP1
0x12e SWAP2
0x12f AND
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 SWAP2
0x13a SUB
0x13b SWAP1
0x13c RETURN
---
0x121: JUMPDEST 
0x122: V102 = 0x40
0x124: V103 = M[0x40]
0x125: V104 = 0x1
0x127: V105 = 0xa0
0x129: V106 = 0x2
0x12b: V107 = EXP 0x2 0xa0
0x12c: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f: V109 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x131: M[V103] = V109
0x132: V110 = 0x20
0x134: V111 = ADD 0x20 V103
0x135: V112 = 0x40
0x137: V113 = M[0x40]
0x13a: V114 = SUB V111 V113
0x13c: RETURN V113 V114
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x5c]
Successors: [0x144, 0x148]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13d: JUMPDEST 
0x13e: V115 = CALLVALUE
0x13f: V116 = ISZERO V115
0x140: V117 = 0x148
0x143: JUMPI 0x148 V116
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13d]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V118 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x148
[0x148:0x15b]
---
Predecessors: [0x13d]
Successors: [0x2ad]
---
0x148 JUMPDEST
0x149 PUSH2 0x15c
0x14c PUSH1 0x1
0x14e PUSH1 0xa0
0x150 PUSH1 0x2
0x152 EXP
0x153 SUB
0x154 PUSH1 0x4
0x156 CALLDATALOAD
0x157 AND
0x158 PUSH2 0x2ad
0x15b JUMP
---
0x148: JUMPDEST 
0x149: V119 = 0x15c
0x14c: V120 = 0x1
0x14e: V121 = 0xa0
0x150: V122 = 0x2
0x152: V123 = EXP 0x2 0xa0
0x153: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x154: V125 = 0x4
0x156: V126 = CALLDATALOAD 0x4
0x157: V127 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x158: V128 = 0x2ad
0x15b: JUMP 0x2ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15c, V127]
Exit stack: [V12, 0x15c, V127]

================================

Block 0x15c
[0x15c:0x16f]
---
Predecessors: [0x417]
Successors: []
---
0x15c JUMPDEST
0x15d PUSH1 0x40
0x15f MLOAD
0x160 SWAP1
0x161 ISZERO
0x162 ISZERO
0x163 DUP2
0x164 MSTORE
0x165 PUSH1 0x20
0x167 ADD
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP1
0x16c SWAP2
0x16d SUB
0x16e SWAP1
0x16f RETURN
---
0x15c: JUMPDEST 
0x15d: V129 = 0x40
0x15f: V130 = M[0x40]
0x161: V131 = ISZERO 0x1
0x162: V132 = ISZERO 0x0
0x164: M[V130] = 0x1
0x165: V133 = 0x20
0x167: V134 = ADD 0x20 V130
0x168: V135 = 0x40
0x16a: V136 = M[0x40]
0x16d: V137 = SUB V134 V136
0x16f: RETURN V136 V137
---
Entry stack: [V12, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x170
[0x170:0x175]
---
Predecessors: [0x76]
Successors: [0x7e]
---
0x170 JUMPDEST
0x171 PUSH1 0x1
0x173 SLOAD
0x174 DUP2
0x175 JUMP
---
0x170: JUMPDEST 
0x171: V138 = 0x1
0x173: V139 = S[0x1]
0x175: JUMP 0x7e
---
Entry stack: [V12, 0x7e]
Stack pops: 1
Stack additions: [S0, V139]
Exit stack: [V12, 0x7e, V139]

================================

Block 0x176
[0x176:0x17b]
---
Predecessors: [0x9b]
Successors: [0x7e]
---
0x176 JUMPDEST
0x177 PUSH1 0x4
0x179 SLOAD
0x17a DUP2
0x17b JUMP
---
0x176: JUMPDEST 
0x177: V140 = 0x4
0x179: V141 = S[0x4]
0x17b: JUMP 0x7e
---
Entry stack: [V12, 0x7e]
Stack pops: 1
Stack additions: [S0, V141]
Exit stack: [V12, 0x7e, V141]

================================

Block 0x17c
[0x17c:0x18a]
---
Predecessors: [0xc0]
Successors: [0xc8]
---
0x17c JUMPDEST
0x17d PUSH1 0x2
0x17f SLOAD
0x180 PUSH1 0x1
0x182 PUSH1 0xa0
0x184 PUSH1 0x2
0x186 EXP
0x187 SUB
0x188 AND
0x189 DUP2
0x18a JUMP
---
0x17c: JUMPDEST 
0x17d: V142 = 0x2
0x17f: V143 = S[0x2]
0x180: V144 = 0x1
0x182: V145 = 0xa0
0x184: V146 = 0x2
0x186: V147 = EXP 0x2 0xa0
0x187: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x188: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x18a: JUMP 0xc8
---
Entry stack: [V12, 0xc8]
Stack pops: 1
Stack additions: [S0, V149]
Exit stack: [V12, 0xc8, V149]

================================

Block 0x18b
[0x18b:0x1a1]
---
Predecessors: [0xe4]
Successors: [0x1a2, 0x1a6]
---
0x18b JUMPDEST
0x18c PUSH1 0x0
0x18e SLOAD
0x18f CALLER
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 SWAP1
0x199 DUP2
0x19a AND
0x19b SWAP2
0x19c AND
0x19d EQ
0x19e PUSH2 0x1a6
0x1a1 JUMPI
---
0x18b: JUMPDEST 
0x18c: V150 = 0x0
0x18e: V151 = S[0x0]
0x18f: V152 = CALLER
0x190: V153 = 0x1
0x192: V154 = 0xa0
0x194: V155 = 0x2
0x196: V156 = EXP 0x2 0xa0
0x197: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19a: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x19c: V159 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V160 = EQ V159 V158
0x19e: V161 = 0x1a6
0x1a1: JUMPI 0x1a6 V160
---
Entry stack: [V12, 0x67, V87, V89, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x67, V87, V89, V92]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x18b]
Successors: []
---
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 REVERT
---
0x1a2: V162 = 0x0
0x1a5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x67, V87, V89, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x67, V87, V89, V92]

================================

Block 0x1a6
[0x1a6:0x1e8]
---
Predecessors: [0x18b]
Successors: [0x1e9]
---
0x1a6 JUMPDEST
0x1a7 PUSH1 0x2
0x1a9 DUP1
0x1aa SLOAD
0x1ab PUSH1 0x1
0x1ad PUSH1 0xa0
0x1af PUSH1 0x2
0x1b1 EXP
0x1b2 SUB
0x1b3 DUP1
0x1b4 DUP7
0x1b5 AND
0x1b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cb NOT
0x1cc SWAP3
0x1cd DUP4
0x1ce AND
0x1cf OR
0x1d0 SWAP1
0x1d1 SWAP3
0x1d2 SSTORE
0x1d3 PUSH1 0x1
0x1d5 DUP5
0x1d6 SWAP1
0x1d7 SSTORE
0x1d8 PUSH1 0x3
0x1da DUP1
0x1db SLOAD
0x1dc SWAP3
0x1dd DUP5
0x1de AND
0x1df SWAP3
0x1e0 SWAP1
0x1e1 SWAP2
0x1e2 AND
0x1e3 SWAP2
0x1e4 SWAP1
0x1e5 SWAP2
0x1e6 OR
0x1e7 SWAP1
0x1e8 SSTORE
---
0x1a6: JUMPDEST 
0x1a7: V163 = 0x2
0x1aa: V164 = S[0x2]
0x1ab: V165 = 0x1
0x1ad: V166 = 0xa0
0x1af: V167 = 0x2
0x1b1: V168 = EXP 0x2 0xa0
0x1b2: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b5: V170 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V172 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1ce: V173 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V164
0x1cf: V174 = OR V173 V170
0x1d2: S[0x2] = V174
0x1d3: V175 = 0x1
0x1d7: S[0x1] = V89
0x1d8: V176 = 0x3
0x1db: V177 = S[0x3]
0x1de: V178 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V179 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V177
0x1e6: V180 = OR V179 V178
0x1e8: S[0x3] = V180
---
Entry stack: [V12, 0x67, V87, V89, V92]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x67, V87, V89, V92]

================================

Block 0x1e9
[0x1e9:0x1e9]
---
Predecessors: [0x1a6]
Successors: [0x1ea]
---
0x1e9 JUMPDEST
---
0x1e9: JUMPDEST 
---
Entry stack: [V12, 0x67, V87, V89, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x67, V87, V89, V92]

================================

Block 0x1ea
[0x1ea:0x1ee]
---
Predecessors: [0x1e9]
Successors: [0x67]
---
0x1ea JUMPDEST
0x1eb POP
0x1ec POP
0x1ed POP
0x1ee JUMP
---
0x1ea: JUMPDEST 
0x1ee: JUMP 0x67
---
Entry stack: [V12, 0x67, V87, V89, V92]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ef
[0x1ef:0x1f8]
---
Predecessors: [0x104]
Successors: [0x1f9, 0x29a]
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x1
0x1f2 SLOAD
0x1f3 TIMESTAMP
0x1f4 LT
0x1f5 PUSH2 0x29a
0x1f8 JUMPI
---
0x1ef: JUMPDEST 
0x1f0: V181 = 0x1
0x1f2: V182 = S[0x1]
0x1f3: V183 = TIMESTAMP
0x1f4: V184 = LT V183 V182
0x1f5: V185 = 0x29a
0x1f8: JUMPI 0x29a V184
---
Entry stack: [V12, 0x67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x67]

================================

Block 0x1f9
[0x1f9:0x20c]
---
Predecessors: [0x1ef]
Successors: [0x20d, 0x212]
---
0x1f9 PUSH1 0x0
0x1fb ADDRESS
0x1fc PUSH1 0x1
0x1fe PUSH1 0xa0
0x200 PUSH1 0x2
0x202 EXP
0x203 SUB
0x204 AND
0x205 BALANCE
0x206 GT
0x207 DUP1
0x208 ISZERO
0x209 PUSH2 0x212
0x20c JUMPI
---
0x1f9: V186 = 0x0
0x1fb: V187 = ADDRESS
0x1fc: V188 = 0x1
0x1fe: V189 = 0xa0
0x200: V190 = 0x2
0x202: V191 = EXP 0x2 0xa0
0x203: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x204: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x205: V194 = BALANCE V193
0x206: V195 = GT V194 0x0
0x208: V196 = ISZERO V195
0x209: V197 = 0x212
0x20c: JUMPI 0x212 V196
---
Entry stack: [V12, 0x67]
Stack pops: 0
Stack additions: [V195]
Exit stack: [V12, 0x67, V195]

================================

Block 0x20d
[0x20d:0x211]
---
Predecessors: [0x1f9]
Successors: [0x212]
---
0x20d POP
0x20e PUSH1 0x4
0x210 SLOAD
0x211 ISZERO
---
0x20e: V198 = 0x4
0x210: V199 = S[0x4]
0x211: V200 = ISZERO V199
---
Entry stack: [V12, 0x67, V195]
Stack pops: 1
Stack additions: [V200]
Exit stack: [V12, 0x67, V200]

================================

Block 0x212
[0x212:0x217]
---
Predecessors: [0x1f9, 0x20d]
Successors: [0x218, 0x29a]
---
0x212 JUMPDEST
0x213 ISZERO
0x214 PUSH2 0x29a
0x217 JUMPI
---
0x212: JUMPDEST 
0x213: V201 = ISZERO S0
0x214: V202 = 0x29a
0x217: JUMPI 0x29a V201
---
Entry stack: [V12, 0x67, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x67]

================================

Block 0x218
[0x218:0x276]
---
Predecessors: [0x212]
Successors: [0x277, 0x27b]
---
0x218 PUSH1 0x3
0x21a SLOAD
0x21b PUSH1 0x2
0x21d SLOAD
0x21e PUSH1 0x1
0x220 PUSH1 0xa0
0x222 PUSH1 0x2
0x224 EXP
0x225 SUB
0x226 SWAP2
0x227 DUP3
0x228 AND
0x229 SWAP2
0x22a PUSH4 0xf088d547
0x22f SWAP2
0x230 ADDRESS
0x231 DUP3
0x232 AND
0x233 BALANCE
0x234 SWAP2
0x235 AND
0x236 PUSH1 0x0
0x238 PUSH1 0x40
0x23a MLOAD
0x23b PUSH1 0x20
0x23d ADD
0x23e MSTORE
0x23f PUSH1 0x40
0x241 MLOAD
0x242 PUSH1 0xe0
0x244 PUSH1 0x2
0x246 EXP
0x247 PUSH4 0xffffffff
0x24c DUP6
0x24d AND
0x24e MUL
0x24f DUP2
0x250 MSTORE
0x251 PUSH1 0x1
0x253 PUSH1 0xa0
0x255 PUSH1 0x2
0x257 EXP
0x258 SUB
0x259 SWAP1
0x25a SWAP2
0x25b AND
0x25c PUSH1 0x4
0x25e DUP3
0x25f ADD
0x260 MSTORE
0x261 PUSH1 0x24
0x263 ADD
0x264 PUSH1 0x20
0x266 PUSH1 0x40
0x268 MLOAD
0x269 DUP1
0x26a DUP4
0x26b SUB
0x26c DUP2
0x26d DUP6
0x26e DUP9
0x26f DUP1
0x270 EXTCODESIZE
0x271 ISZERO
0x272 ISZERO
0x273 PUSH2 0x27b
0x276 JUMPI
---
0x218: V203 = 0x3
0x21a: V204 = S[0x3]
0x21b: V205 = 0x2
0x21d: V206 = S[0x2]
0x21e: V207 = 0x1
0x220: V208 = 0xa0
0x222: V209 = 0x2
0x224: V210 = EXP 0x2 0xa0
0x225: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x22a: V213 = 0xf088d547
0x230: V214 = ADDRESS
0x232: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x233: V216 = BALANCE V215
0x235: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x236: V218 = 0x0
0x238: V219 = 0x40
0x23a: V220 = M[0x40]
0x23b: V221 = 0x20
0x23d: V222 = ADD 0x20 V220
0x23e: M[V222] = 0x0
0x23f: V223 = 0x40
0x241: V224 = M[0x40]
0x242: V225 = 0xe0
0x244: V226 = 0x2
0x246: V227 = EXP 0x2 0xe0
0x247: V228 = 0xffffffff
0x24d: V229 = AND 0xf088d547 0xffffffff
0x24e: V230 = MUL 0xf088d547 0x100000000000000000000000000000000000000000000000000000000
0x250: M[V224] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x251: V231 = 0x1
0x253: V232 = 0xa0
0x255: V233 = 0x2
0x257: V234 = EXP 0x2 0xa0
0x258: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25b: V236 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V237 = 0x4
0x25f: V238 = ADD V224 0x4
0x260: M[V238] = V236
0x261: V239 = 0x24
0x263: V240 = ADD 0x24 V224
0x264: V241 = 0x20
0x266: V242 = 0x40
0x268: V243 = M[0x40]
0x26b: V244 = SUB V240 V243
0x270: V245 = EXTCODESIZE V212
0x271: V246 = ISZERO V245
0x272: V247 = ISZERO V246
0x273: V248 = 0x27b
0x276: JUMPI 0x27b V247
---
Entry stack: [V12, 0x67]
Stack pops: 0
Stack additions: [V212, 0xf088d547, V216, V240, 0x20, V243, V244, V243, V216, V212]
Exit stack: [V12, 0x67, V212, 0xf088d547, V216, V240, 0x20, V243, V244, V243, V216, V212]

================================

Block 0x277
[0x277:0x27a]
---
Predecessors: [0x218]
Successors: []
---
0x277 PUSH1 0x0
0x279 DUP1
0x27a REVERT
---
0x277: V249 = 0x0
0x27a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x67, V212, 0xf088d547, V216, V240, 0x20, V243, V244, V243, V216, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x67, V212, 0xf088d547, V216, V240, 0x20, V243, V244, V243, V216, V212]

================================

Block 0x27b
[0x27b:0x287]
---
Predecessors: [0x218]
Successors: [0x288, 0x28c]
---
0x27b JUMPDEST
0x27c PUSH2 0x25ee
0x27f GAS
0x280 SUB
0x281 CALL
0x282 ISZERO
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x27b: JUMPDEST 
0x27c: V250 = 0x25ee
0x27f: V251 = GAS
0x280: V252 = SUB V251 0x25ee
0x281: V253 = CALL V252 V212 V216 V243 V244 V243 0x20
0x282: V254 = ISZERO V253
0x283: V255 = ISZERO V254
0x284: V256 = 0x28c
0x287: JUMPI 0x28c V255
---
Entry stack: [V12, 0x67, V212, 0xf088d547, V216, V240, 0x20, V243, V244, V243, V216, V212]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x67, V212, 0xf088d547, V216, V240]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x27b]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V257 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x67, V212, 0xf088d547, V216, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x67, V212, 0xf088d547, V216, V240]

================================

Block 0x28c
[0x28c:0x299]
---
Predecessors: [0x27b]
Successors: [0x29a]
---
0x28c JUMPDEST
0x28d POP
0x28e POP
0x28f POP
0x290 POP
0x291 PUSH1 0x40
0x293 MLOAD
0x294 DUP1
0x295 MLOAD
0x296 PUSH1 0x4
0x298 SSTORE
0x299 POP
---
0x28c: JUMPDEST 
0x291: V258 = 0x40
0x293: V259 = M[0x40]
0x295: V260 = M[V259]
0x296: V261 = 0x4
0x298: S[0x4] = V260
---
Entry stack: [V12, 0x67, V212, 0xf088d547, V216, V240]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x67]

================================

Block 0x29a
[0x29a:0x29a]
---
Predecessors: [0x1ef, 0x212, 0x28c]
Successors: [0x29b]
---
0x29a JUMPDEST
---
0x29a: JUMPDEST 
---
Entry stack: [V12, 0x67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x67]

================================

Block 0x29b
[0x29b:0x29b]
---
Predecessors: [0x29a]
Successors: [0x29c]
---
0x29b JUMPDEST
---
0x29b: JUMPDEST 
---
Entry stack: [V12, 0x67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x67]

================================

Block 0x29c
[0x29c:0x29d]
---
Predecessors: [0x29b]
Successors: [0x67]
---
0x29c JUMPDEST
0x29d JUMP
---
0x29c: JUMPDEST 
0x29d: JUMP 0x67
---
Entry stack: [V12, 0x67]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x29e
[0x29e:0x2ac]
---
Predecessors: [0x119]
Successors: [0xc8]
---
0x29e JUMPDEST
0x29f PUSH1 0x3
0x2a1 SLOAD
0x2a2 PUSH1 0x1
0x2a4 PUSH1 0xa0
0x2a6 PUSH1 0x2
0x2a8 EXP
0x2a9 SUB
0x2aa AND
0x2ab DUP2
0x2ac JUMP
---
0x29e: JUMPDEST 
0x29f: V262 = 0x3
0x2a1: V263 = S[0x3]
0x2a2: V264 = 0x1
0x2a4: V265 = 0xa0
0x2a6: V266 = 0x2
0x2a8: V267 = EXP 0x2 0xa0
0x2a9: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x2ac: JUMP 0xc8
---
Entry stack: [V12, 0xc8]
Stack pops: 1
Stack additions: [S0, V269]
Exit stack: [V12, 0xc8, V269]

================================

Block 0x2ad
[0x2ad:0x2c4]
---
Predecessors: [0x148]
Successors: [0x2c5, 0x2c9]
---
0x2ad JUMPDEST
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 SLOAD
0x2b2 CALLER
0x2b3 PUSH1 0x1
0x2b5 PUSH1 0xa0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba SUB
0x2bb SWAP1
0x2bc DUP2
0x2bd AND
0x2be SWAP2
0x2bf AND
0x2c0 EQ
0x2c1 PUSH2 0x2c9
0x2c4 JUMPI
---
0x2ad: JUMPDEST 
0x2ae: V270 = 0x0
0x2b1: V271 = S[0x0]
0x2b2: V272 = CALLER
0x2b3: V273 = 0x1
0x2b5: V274 = 0xa0
0x2b7: V275 = 0x2
0x2b9: V276 = EXP 0x2 0xa0
0x2ba: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bd: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x2bf: V279 = AND V271 0xffffffffffffffffffffffffffffffffffffffff
0x2c0: V280 = EQ V279 V278
0x2c1: V281 = 0x2c9
0x2c4: JUMPI 0x2c9 V280
---
Entry stack: [V12, 0x15c, V127]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x15c, V127, 0x0]

================================

Block 0x2c5
[0x2c5:0x2c8]
---
Predecessors: [0x2ad]
Successors: []
---
0x2c5 PUSH1 0x0
0x2c7 DUP1
0x2c8 REVERT
---
0x2c5: V282 = 0x0
0x2c8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15c, V127, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0]

================================

Block 0x2c9
[0x2c9:0x2dc]
---
Predecessors: [0x2ad]
Successors: [0x2dd, 0x319]
---
0x2c9 JUMPDEST
0x2ca PUSH1 0x0
0x2cc ADDRESS
0x2cd PUSH1 0x1
0x2cf PUSH1 0xa0
0x2d1 PUSH1 0x2
0x2d3 EXP
0x2d4 SUB
0x2d5 AND
0x2d6 BALANCE
0x2d7 GT
0x2d8 ISZERO
0x2d9 PUSH2 0x319
0x2dc JUMPI
---
0x2c9: JUMPDEST 
0x2ca: V283 = 0x0
0x2cc: V284 = ADDRESS
0x2cd: V285 = 0x1
0x2cf: V286 = 0xa0
0x2d1: V287 = 0x2
0x2d3: V288 = EXP 0x2 0xa0
0x2d4: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d5: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x2d6: V291 = BALANCE V290
0x2d7: V292 = GT V291 0x0
0x2d8: V293 = ISZERO V292
0x2d9: V294 = 0x319
0x2dc: JUMPI 0x319 V293
---
Entry stack: [V12, 0x15c, V127, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0]

================================

Block 0x2dd
[0x2dd:0x314]
---
Predecessors: [0x2c9]
Successors: [0x315, 0x319]
---
0x2dd CALLER
0x2de PUSH1 0x1
0x2e0 PUSH1 0xa0
0x2e2 PUSH1 0x2
0x2e4 EXP
0x2e5 SUB
0x2e6 AND
0x2e7 PUSH2 0x8fc
0x2ea ADDRESS
0x2eb PUSH1 0x1
0x2ed PUSH1 0xa0
0x2ef PUSH1 0x2
0x2f1 EXP
0x2f2 SUB
0x2f3 AND
0x2f4 BALANCE
0x2f5 SWAP1
0x2f6 DUP2
0x2f7 ISZERO
0x2f8 MUL
0x2f9 SWAP1
0x2fa PUSH1 0x40
0x2fc MLOAD
0x2fd PUSH1 0x0
0x2ff PUSH1 0x40
0x301 MLOAD
0x302 DUP1
0x303 DUP4
0x304 SUB
0x305 DUP2
0x306 DUP6
0x307 DUP9
0x308 DUP9
0x309 CALL
0x30a SWAP4
0x30b POP
0x30c POP
0x30d POP
0x30e POP
0x30f ISZERO
0x310 ISZERO
0x311 PUSH2 0x319
0x314 JUMPI
---
0x2dd: V295 = CALLER
0x2de: V296 = 0x1
0x2e0: V297 = 0xa0
0x2e2: V298 = 0x2
0x2e4: V299 = EXP 0x2 0xa0
0x2e5: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e6: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x2e7: V302 = 0x8fc
0x2ea: V303 = ADDRESS
0x2eb: V304 = 0x1
0x2ed: V305 = 0xa0
0x2ef: V306 = 0x2
0x2f1: V307 = EXP 0x2 0xa0
0x2f2: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f3: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x2f4: V310 = BALANCE V309
0x2f7: V311 = ISZERO V310
0x2f8: V312 = MUL V311 0x8fc
0x2fa: V313 = 0x40
0x2fc: V314 = M[0x40]
0x2fd: V315 = 0x0
0x2ff: V316 = 0x40
0x301: V317 = M[0x40]
0x304: V318 = SUB V314 V317
0x309: V319 = CALL V312 V301 V310 V317 V318 V317 0x0
0x30f: V320 = ISZERO V319
0x310: V321 = ISZERO V320
0x311: V322 = 0x319
0x314: JUMPI 0x319 V321
---
Entry stack: [V12, 0x15c, V127, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0]

================================

Block 0x315
[0x315:0x318]
---
Predecessors: [0x2dd]
Successors: []
---
0x315 PUSH1 0x0
0x317 DUP1
0x318 REVERT
---
0x315: V323 = 0x0
0x318: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15c, V127, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0]

================================

Block 0x319
[0x319:0x319]
---
Predecessors: [0x2c9, 0x2dd]
Successors: [0x31a]
---
0x319 JUMPDEST
---
0x319: JUMPDEST 
---
Entry stack: [V12, 0x15c, V127, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0]

================================

Block 0x31a
[0x31a:0x329]
---
Predecessors: [0x319]
Successors: [0x32a, 0x411]
---
0x31a JUMPDEST
0x31b PUSH1 0x1
0x31d PUSH1 0xa0
0x31f PUSH1 0x2
0x321 EXP
0x322 SUB
0x323 DUP3
0x324 AND
0x325 ISZERO
0x326 PUSH2 0x411
0x329 JUMPI
---
0x31a: JUMPDEST 
0x31b: V324 = 0x1
0x31d: V325 = 0xa0
0x31f: V326 = 0x2
0x321: V327 = EXP 0x2 0xa0
0x322: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x324: V329 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x325: V330 = ISZERO V329
0x326: V331 = 0x411
0x329: JUMPI 0x411 V330
---
Entry stack: [V12, 0x15c, V127, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x15c, V127, 0x0]

================================

Block 0x32a
[0x32a:0x382]
---
Predecessors: [0x31a]
Successors: [0x383, 0x387]
---
0x32a PUSH1 0x1
0x32c PUSH1 0xa0
0x32e PUSH1 0x2
0x330 EXP
0x331 SUB
0x332 DUP3
0x333 AND
0x334 PUSH4 0xa9059cbb
0x339 CALLER
0x33a DUP3
0x33b PUSH4 0x70a08231
0x340 ADDRESS
0x341 PUSH1 0x0
0x343 PUSH1 0x40
0x345 MLOAD
0x346 PUSH1 0x20
0x348 ADD
0x349 MSTORE
0x34a PUSH1 0x40
0x34c MLOAD
0x34d PUSH1 0xe0
0x34f PUSH1 0x2
0x351 EXP
0x352 PUSH4 0xffffffff
0x357 DUP5
0x358 AND
0x359 MUL
0x35a DUP2
0x35b MSTORE
0x35c PUSH1 0x1
0x35e PUSH1 0xa0
0x360 PUSH1 0x2
0x362 EXP
0x363 SUB
0x364 SWAP1
0x365 SWAP2
0x366 AND
0x367 PUSH1 0x4
0x369 DUP3
0x36a ADD
0x36b MSTORE
0x36c PUSH1 0x24
0x36e ADD
0x36f PUSH1 0x20
0x371 PUSH1 0x40
0x373 MLOAD
0x374 DUP1
0x375 DUP4
0x376 SUB
0x377 DUP2
0x378 PUSH1 0x0
0x37a DUP8
0x37b DUP1
0x37c EXTCODESIZE
0x37d ISZERO
0x37e ISZERO
0x37f PUSH2 0x387
0x382 JUMPI
---
0x32a: V332 = 0x1
0x32c: V333 = 0xa0
0x32e: V334 = 0x2
0x330: V335 = EXP 0x2 0xa0
0x331: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x333: V337 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x334: V338 = 0xa9059cbb
0x339: V339 = CALLER
0x33b: V340 = 0x70a08231
0x340: V341 = ADDRESS
0x341: V342 = 0x0
0x343: V343 = 0x40
0x345: V344 = M[0x40]
0x346: V345 = 0x20
0x348: V346 = ADD 0x20 V344
0x349: M[V346] = 0x0
0x34a: V347 = 0x40
0x34c: V348 = M[0x40]
0x34d: V349 = 0xe0
0x34f: V350 = 0x2
0x351: V351 = EXP 0x2 0xe0
0x352: V352 = 0xffffffff
0x358: V353 = AND 0x70a08231 0xffffffff
0x359: V354 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x35b: M[V348] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x35c: V355 = 0x1
0x35e: V356 = 0xa0
0x360: V357 = 0x2
0x362: V358 = EXP 0x2 0xa0
0x363: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x366: V360 = AND V341 0xffffffffffffffffffffffffffffffffffffffff
0x367: V361 = 0x4
0x36a: V362 = ADD V348 0x4
0x36b: M[V362] = V360
0x36c: V363 = 0x24
0x36e: V364 = ADD 0x24 V348
0x36f: V365 = 0x20
0x371: V366 = 0x40
0x373: V367 = M[0x40]
0x376: V368 = SUB V364 V367
0x378: V369 = 0x0
0x37c: V370 = EXTCODESIZE V337
0x37d: V371 = ISZERO V370
0x37e: V372 = ISZERO V371
0x37f: V373 = 0x387
0x382: JUMPI 0x387 V372
---
Entry stack: [V12, 0x15c, V127, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V337, 0xa9059cbb, V339, V337, 0x70a08231, V364, 0x20, V367, V368, V367, 0x0, V337]
Exit stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V339, V337, 0x70a08231, V364, 0x20, V367, V368, V367, 0x0, V337]

================================

Block 0x383
[0x383:0x386]
---
Predecessors: [0x32a]
Successors: []
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
---
0x383: V374 = 0x0
0x386: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V339, V337, 0x70a08231, V364, 0x20, V367, V368, V367, 0x0, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V339, V337, 0x70a08231, V364, 0x20, V367, V368, V367, 0x0, V337]

================================

Block 0x387
[0x387:0x393]
---
Predecessors: [0x32a]
Successors: [0x394, 0x398]
---
0x387 JUMPDEST
0x388 PUSH2 0x2c6
0x38b GAS
0x38c SUB
0x38d CALL
0x38e ISZERO
0x38f ISZERO
0x390 PUSH2 0x398
0x393 JUMPI
---
0x387: JUMPDEST 
0x388: V375 = 0x2c6
0x38b: V376 = GAS
0x38c: V377 = SUB V376 0x2c6
0x38d: V378 = CALL V377 V337 0x0 V367 V368 V367 0x20
0x38e: V379 = ISZERO V378
0x38f: V380 = ISZERO V379
0x390: V381 = 0x398
0x393: JUMPI 0x398 V380
---
Entry stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V339, V337, 0x70a08231, V364, 0x20, V367, V368, V367, 0x0, V337]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V339, V337, 0x70a08231, V364]

================================

Block 0x394
[0x394:0x397]
---
Predecessors: [0x387]
Successors: []
---
0x394 PUSH1 0x0
0x396 DUP1
0x397 REVERT
---
0x394: V382 = 0x0
0x397: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V339, V337, 0x70a08231, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V339, V337, 0x70a08231, V364]

================================

Block 0x398
[0x398:0x3e9]
---
Predecessors: [0x387]
Successors: [0x3ea, 0x3ee]
---
0x398 JUMPDEST
0x399 POP
0x39a POP
0x39b POP
0x39c PUSH1 0x40
0x39e MLOAD
0x39f DUP1
0x3a0 MLOAD
0x3a1 SWAP1
0x3a2 POP
0x3a3 PUSH1 0x0
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 PUSH1 0x20
0x3aa ADD
0x3ab MSTORE
0x3ac PUSH1 0x40
0x3ae MLOAD
0x3af PUSH1 0xe0
0x3b1 PUSH1 0x2
0x3b3 EXP
0x3b4 PUSH4 0xffffffff
0x3b9 DUP6
0x3ba AND
0x3bb MUL
0x3bc DUP2
0x3bd MSTORE
0x3be PUSH1 0x1
0x3c0 PUSH1 0xa0
0x3c2 PUSH1 0x2
0x3c4 EXP
0x3c5 SUB
0x3c6 SWAP1
0x3c7 SWAP3
0x3c8 AND
0x3c9 PUSH1 0x4
0x3cb DUP4
0x3cc ADD
0x3cd MSTORE
0x3ce PUSH1 0x24
0x3d0 DUP3
0x3d1 ADD
0x3d2 MSTORE
0x3d3 PUSH1 0x44
0x3d5 ADD
0x3d6 PUSH1 0x20
0x3d8 PUSH1 0x40
0x3da MLOAD
0x3db DUP1
0x3dc DUP4
0x3dd SUB
0x3de DUP2
0x3df PUSH1 0x0
0x3e1 DUP8
0x3e2 DUP1
0x3e3 EXTCODESIZE
0x3e4 ISZERO
0x3e5 ISZERO
0x3e6 PUSH2 0x3ee
0x3e9 JUMPI
---
0x398: JUMPDEST 
0x39c: V383 = 0x40
0x39e: V384 = M[0x40]
0x3a0: V385 = M[V384]
0x3a3: V386 = 0x0
0x3a5: V387 = 0x40
0x3a7: V388 = M[0x40]
0x3a8: V389 = 0x20
0x3aa: V390 = ADD 0x20 V388
0x3ab: M[V390] = 0x0
0x3ac: V391 = 0x40
0x3ae: V392 = M[0x40]
0x3af: V393 = 0xe0
0x3b1: V394 = 0x2
0x3b3: V395 = EXP 0x2 0xe0
0x3b4: V396 = 0xffffffff
0x3ba: V397 = AND 0xa9059cbb 0xffffffff
0x3bb: V398 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3bd: M[V392] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3be: V399 = 0x1
0x3c0: V400 = 0xa0
0x3c2: V401 = 0x2
0x3c4: V402 = EXP 0x2 0xa0
0x3c5: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c8: V404 = AND V339 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V405 = 0x4
0x3cc: V406 = ADD V392 0x4
0x3cd: M[V406] = V404
0x3ce: V407 = 0x24
0x3d1: V408 = ADD V392 0x24
0x3d2: M[V408] = V385
0x3d3: V409 = 0x44
0x3d5: V410 = ADD 0x44 V392
0x3d6: V411 = 0x20
0x3d8: V412 = 0x40
0x3da: V413 = M[0x40]
0x3dd: V414 = SUB V410 V413
0x3df: V415 = 0x0
0x3e3: V416 = EXTCODESIZE V337
0x3e4: V417 = ISZERO V416
0x3e5: V418 = ISZERO V417
0x3e6: V419 = 0x3ee
0x3e9: JUMPI 0x3ee V418
---
Entry stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V339, V337, 0x70a08231, V364]
Stack pops: 6
Stack additions: [S5, S4, V410, 0x20, V413, V414, V413, 0x0, S5]
Exit stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V410, 0x20, V413, V414, V413, 0x0, V337]

================================

Block 0x3ea
[0x3ea:0x3ed]
---
Predecessors: [0x398]
Successors: []
---
0x3ea PUSH1 0x0
0x3ec DUP1
0x3ed REVERT
---
0x3ea: V420 = 0x0
0x3ed: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V410, 0x20, V413, V414, V413, 0x0, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V410, 0x20, V413, V414, V413, 0x0, V337]

================================

Block 0x3ee
[0x3ee:0x3fa]
---
Predecessors: [0x398]
Successors: [0x3fb, 0x3ff]
---
0x3ee JUMPDEST
0x3ef PUSH2 0x2c6
0x3f2 GAS
0x3f3 SUB
0x3f4 CALL
0x3f5 ISZERO
0x3f6 ISZERO
0x3f7 PUSH2 0x3ff
0x3fa JUMPI
---
0x3ee: JUMPDEST 
0x3ef: V421 = 0x2c6
0x3f2: V422 = GAS
0x3f3: V423 = SUB V422 0x2c6
0x3f4: V424 = CALL V423 V337 0x0 V413 V414 V413 0x20
0x3f5: V425 = ISZERO V424
0x3f6: V426 = ISZERO V425
0x3f7: V427 = 0x3ff
0x3fa: JUMPI 0x3ff V426
---
Entry stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V410, 0x20, V413, V414, V413, 0x0, V337]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V410]

================================

Block 0x3fb
[0x3fb:0x3fe]
---
Predecessors: [0x3ee]
Successors: []
---
0x3fb PUSH1 0x0
0x3fd DUP1
0x3fe REVERT
---
0x3fb: V428 = 0x0
0x3fe: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V410]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V410]

================================

Block 0x3ff
[0x3ff:0x40f]
---
Predecessors: [0x3ee]
Successors: [0x410, 0x411]
---
0x3ff JUMPDEST
0x400 POP
0x401 POP
0x402 POP
0x403 PUSH1 0x40
0x405 MLOAD
0x406 DUP1
0x407 MLOAD
0x408 SWAP1
0x409 POP
0x40a ISZERO
0x40b ISZERO
0x40c PUSH2 0x411
0x40f JUMPI
---
0x3ff: JUMPDEST 
0x403: V429 = 0x40
0x405: V430 = M[0x40]
0x407: V431 = M[V430]
0x40a: V432 = ISZERO V431
0x40b: V433 = ISZERO V432
0x40c: V434 = 0x411
0x40f: JUMPI 0x411 V433
---
Entry stack: [V12, 0x15c, V127, 0x0, V337, 0xa9059cbb, V410]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0]

================================

Block 0x410
[0x410:0x410]
---
Predecessors: [0x3ff]
Successors: []
---
0x410 INVALID
---
0x410: INVALID 
---
Entry stack: [V12, 0x15c, V127, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0]

================================

Block 0x411
[0x411:0x411]
---
Predecessors: [0x31a, 0x3ff]
Successors: [0x412]
---
0x411 JUMPDEST
---
0x411: JUMPDEST 
---
Entry stack: [V12, 0x15c, V127, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x0]

================================

Block 0x412
[0x412:0x415]
---
Predecessors: [0x411]
Successors: [0x416]
---
0x412 JUMPDEST
0x413 POP
0x414 PUSH1 0x1
---
0x412: JUMPDEST 
0x414: V435 = 0x1
---
Entry stack: [V12, 0x15c, V127, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x15c, V127, 0x1]

================================

Block 0x416
[0x416:0x416]
---
Predecessors: [0x412]
Successors: [0x417]
---
0x416 JUMPDEST
---
0x416: JUMPDEST 
---
Entry stack: [V12, 0x15c, V127, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15c, V127, 0x1]

================================

Block 0x417
[0x417:0x41b]
---
Predecessors: [0x416]
Successors: [0x15c]
---
0x417 JUMPDEST
0x418 SWAP2
0x419 SWAP1
0x41a POP
0x41b JUMP
---
0x417: JUMPDEST 
0x41b: JUMP 0x15c
---
Entry stack: [V12, 0x15c, V127, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x41c
[0x41c:0x447]
---
Predecessors: []
Successors: []
---
0x41c STOP
0x41d LOG1
0x41e PUSH6 0x627a7a723058
0x425 SHA3
0x426 MISSING 0x4e
0x427 MISSING 0xa5
0x428 MISSING 0xe5
0x429 MISSING 0xa6
0x42a MISSING 0x1f
0x42b RETURNDATACOPY
0x42c GAS
0x42d CALLCODE
0x42e POP
0x42f DUP10
0x430 DUP6
0x431 GAS
0x432 MISSING 0x47
0x433 PUSH14 0x7bb6bcf0f7db2364f8a4b81429fd
0x442 MISSING 0xd1
0x443 MISSING 0xb2
0x444 MISSING 0xa7
0x445 SGT
0x446 STOP
0x447 MISSING 0x29
---
0x41c: STOP 
0x41d: LOG S0 S1 S2
0x41e: V436 = 0x627a7a723058
0x425: V437 = SHA3 0x627a7a723058 S3
0x426: MISSING 0x4e
0x427: MISSING 0xa5
0x428: MISSING 0xe5
0x429: MISSING 0xa6
0x42a: MISSING 0x1f
0x42b: RETURNDATACOPY S0 S1 S2
0x42c: V438 = GAS
0x42d: V439 = CALLCODE V438 S3 S4 S5 S6 S7 S8
0x431: V440 = GAS
0x432: MISSING 0x47
0x433: V441 = 0x7bb6bcf0f7db2364f8a4b81429fd
0x442: MISSING 0xd1
0x443: MISSING 0xb2
0x444: MISSING 0xa7
0x445: V442 = SGT S0 S1
0x446: STOP 
0x447: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V437, V440, S13, S18, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, 0x7bb6bcf0f7db2364f8a4b81429fd, V442]
Exit stack: []

================================

Function 0:
Public function signature: 0x53e3169
Entry block: 0x6b
Exit block: 0x7e
Body: 0x6b, 0x72, 0x76, 0x7e, 0x170

Function 1:
Public function signature: 0x13bd94d2
Entry block: 0x90
Exit block: 0x7e
Body: 0x7e, 0x90, 0x97, 0x9b, 0x176

Function 2:
Public function signature: 0x49b85a16
Entry block: 0xb5
Exit block: 0xc8
Body: 0xb5, 0xbc, 0xc0, 0xc8, 0x17c

Function 3:
Public function signature: 0x6b100384
Entry block: 0xe4
Exit block: 0x69
Body: 0x67, 0x68, 0x69, 0xe4, 0x18b, 0x1a2, 0x1a6, 0x1e9, 0x1ea

Function 4:
Public function signature: 0xa6f2ae3a
Entry block: 0x104
Exit block: 0x69
Body: 0x67, 0x68, 0x69, 0x104, 0x1ef, 0x1f9, 0x20d, 0x212, 0x218, 0x277, 0x27b, 0x288, 0x28c, 0x29a, 0x29b, 0x29c

Function 5:
Public function signature: 0xb9420310
Entry block: 0x10e
Exit block: 0xc8
Body: 0xc8, 0x10e, 0x115, 0x119, 0x29e

Function 6:
Public function signature: 0xece53132
Entry block: 0x13d
Exit block: 0x410
Body: 0x13d, 0x144, 0x148, 0x15c, 0x2ad, 0x2c5, 0x2c9, 0x2dd, 0x315, 0x319, 0x31a, 0x32a, 0x383, 0x387, 0x394, 0x398, 0x3ea, 0x3ee, 0x3fb, 0x3ff, 0x410, 0x411, 0x412, 0x416, 0x417

Function 7:
Public fallback function
Entry block: 0x67
Exit block: 0x69
Body: 0x67, 0x68, 0x69

