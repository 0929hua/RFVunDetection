Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x75]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x75
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x75
0xa: JUMPI 0x75 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x79]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x900f010
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x79
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x900f010
0x39: V12 = EQ V10 0x900f010
0x3a: V13 = 0x79
0x3d: JUMPI 0x79 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x9a]
---
0x3e DUP1
0x3f PUSH4 0x3f5a0bdd
0x44 EQ
0x45 PUSH2 0x9a
0x48 JUMPI
---
0x3f: V14 = 0x3f5a0bdd
0x44: V15 = EQ 0x3f5a0bdd V10
0x45: V16 = 0x9a
0x48: JUMPI 0x9a V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xbb]
---
0x49 DUP1
0x4a PUSH4 0x79cb5a2f
0x4f EQ
0x50 PUSH2 0xbb
0x53 JUMPI
---
0x4a: V17 = 0x79cb5a2f
0x4f: V18 = EQ 0x79cb5a2f V10
0x50: V19 = 0xbb
0x53: JUMPI 0xbb V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xdc]
---
0x54 DUP1
0x55 PUSH4 0x8ca17755
0x5a EQ
0x5b PUSH2 0xdc
0x5e JUMPI
---
0x55: V20 = 0x8ca17755
0x5a: V21 = EQ 0x8ca17755 V10
0x5b: V22 = 0xdc
0x5e: JUMPI 0xdc V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x10b]
---
0x5f DUP1
0x60 PUSH4 0xa3912ec8
0x65 EQ
0x66 PUSH2 0x10b
0x69 JUMPI
---
0x60: V23 = 0xa3912ec8
0x65: V24 = EQ 0xa3912ec8 V10
0x66: V25 = 0x10b
0x69: JUMPI 0x10b V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x115]
---
0x6a DUP1
0x6b PUSH4 0xc28de2cd
0x70 EQ
0x71 PUSH2 0x115
0x74 JUMPI
---
0x6b: V26 = 0xc28de2cd
0x70: V27 = EQ 0xc28de2cd V10
0x71: V28 = 0x115
0x74: JUMPI 0x115 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x75]
---
Predecessors: [0x0, 0x6a, 0x243, 0x2d6, 0x347]
Successors: [0x76]
---
0x75 JUMPDEST
---
0x75: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x76
[0x76:0x76]
---
Predecessors: [0x75]
Successors: [0x77]
---
0x76 JUMPDEST
---
0x76: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x76]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x79
[0x79:0x7f]
---
Predecessors: [0xb]
Successors: [0x80, 0x84]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x79: JUMPDEST 
0x7a: V29 = CALLVALUE
0x7b: V30 = ISZERO V29
0x7c: V31 = 0x84
0x7f: JUMPI 0x84 V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x79]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V32 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x84
[0x84:0x97]
---
Predecessors: [0x79]
Successors: [0x13c]
---
0x84 JUMPDEST
0x85 PUSH2 0x75
0x88 PUSH1 0x1
0x8a PUSH1 0xa0
0x8c PUSH1 0x2
0x8e EXP
0x8f SUB
0x90 PUSH1 0x4
0x92 CALLDATALOAD
0x93 AND
0x94 PUSH2 0x13c
0x97 JUMP
---
0x84: JUMPDEST 
0x85: V33 = 0x75
0x88: V34 = 0x1
0x8a: V35 = 0xa0
0x8c: V36 = 0x2
0x8e: V37 = EXP 0x2 0xa0
0x8f: V38 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90: V39 = 0x4
0x92: V40 = CALLDATALOAD 0x4
0x93: V41 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x94: V42 = 0x13c
0x97: JUMP 0x13c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75, V41]
Exit stack: [V10, 0x75, V41]

================================

Block 0x98
[0x98:0x99]
---
Predecessors: []
Successors: []
---
0x98 JUMPDEST
0x99 STOP
---
0x98: JUMPDEST 
0x99: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9a
[0x9a:0xa0]
---
Predecessors: [0x3e]
Successors: [0xa1, 0xa5]
---
0x9a JUMPDEST
0x9b CALLVALUE
0x9c ISZERO
0x9d PUSH2 0xa5
0xa0 JUMPI
---
0x9a: JUMPDEST 
0x9b: V43 = CALLVALUE
0x9c: V44 = ISZERO V43
0x9d: V45 = 0xa5
0xa0: JUMPI 0xa5 V44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xa4]
---
Predecessors: [0x9a]
Successors: []
---
0xa1 PUSH1 0x0
0xa3 DUP1
0xa4 REVERT
---
0xa1: V46 = 0x0
0xa4: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa5
[0xa5:0xb8]
---
Predecessors: [0x9a]
Successors: [0x246]
---
0xa5 JUMPDEST
0xa6 PUSH2 0x75
0xa9 PUSH1 0x1
0xab PUSH1 0xa0
0xad PUSH1 0x2
0xaf EXP
0xb0 SUB
0xb1 PUSH1 0x4
0xb3 CALLDATALOAD
0xb4 AND
0xb5 PUSH2 0x246
0xb8 JUMP
---
0xa5: JUMPDEST 
0xa6: V47 = 0x75
0xa9: V48 = 0x1
0xab: V49 = 0xa0
0xad: V50 = 0x2
0xaf: V51 = EXP 0x2 0xa0
0xb0: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1: V53 = 0x4
0xb3: V54 = CALLDATALOAD 0x4
0xb4: V55 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0xb5: V56 = 0x246
0xb8: JUMP 0x246
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75, V55]
Exit stack: [V10, 0x75, V55]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: []
Successors: []
---
0xb9 JUMPDEST
0xba STOP
---
0xb9: JUMPDEST 
0xba: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0x49]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V57 = CALLVALUE
0xbd: V58 = ISZERO V57
0xbe: V59 = 0xc6
0xc1: JUMPI 0xc6 V58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V60 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc6
[0xc6:0xd9]
---
Predecessors: [0xbb]
Successors: [0x287]
---
0xc6 JUMPDEST
0xc7 PUSH2 0x75
0xca PUSH1 0x1
0xcc PUSH1 0xa0
0xce PUSH1 0x2
0xd0 EXP
0xd1 SUB
0xd2 PUSH1 0x4
0xd4 CALLDATALOAD
0xd5 AND
0xd6 PUSH2 0x287
0xd9 JUMP
---
0xc6: JUMPDEST 
0xc7: V61 = 0x75
0xca: V62 = 0x1
0xcc: V63 = 0xa0
0xce: V64 = 0x2
0xd0: V65 = EXP 0x2 0xa0
0xd1: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2: V67 = 0x4
0xd4: V68 = CALLDATALOAD 0x4
0xd5: V69 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xd6: V70 = 0x287
0xd9: JUMP 0x287
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75, V69]
Exit stack: [V10, 0x75, V69]

================================

Block 0xda
[0xda:0xdb]
---
Predecessors: []
Successors: []
---
0xda JUMPDEST
0xdb STOP
---
0xda: JUMPDEST 
0xdb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdc
[0xdc:0xe2]
---
Predecessors: [0x54]
Successors: [0xe3, 0xe7]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde ISZERO
0xdf PUSH2 0xe7
0xe2 JUMPI
---
0xdc: JUMPDEST 
0xdd: V71 = CALLVALUE
0xde: V72 = ISZERO V71
0xdf: V73 = 0xe7
0xe2: JUMPI 0xe7 V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xe6]
---
Predecessors: [0xdc]
Successors: []
---
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 REVERT
---
0xe3: V74 = 0x0
0xe6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0xdc]
Successors: [0x2d9]
---
0xe7 JUMPDEST
0xe8 PUSH2 0xef
0xeb PUSH2 0x2d9
0xee JUMP
---
0xe7: JUMPDEST 
0xe8: V75 = 0xef
0xeb: V76 = 0x2d9
0xee: JUMP 0x2d9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V10, 0xef]

================================

Block 0xef
[0xef:0x10a]
---
Predecessors: [0x2d9]
Successors: []
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 MLOAD
0xf3 PUSH1 0x1
0xf5 PUSH1 0xa0
0xf7 PUSH1 0x2
0xf9 EXP
0xfa SUB
0xfb SWAP1
0xfc SWAP2
0xfd AND
0xfe DUP2
0xff MSTORE
0x100 PUSH1 0x20
0x102 ADD
0x103 PUSH1 0x40
0x105 MLOAD
0x106 DUP1
0x107 SWAP2
0x108 SUB
0x109 SWAP1
0x10a RETURN
---
0xef: JUMPDEST 
0xf0: V77 = 0x40
0xf2: V78 = M[0x40]
0xf3: V79 = 0x1
0xf5: V80 = 0xa0
0xf7: V81 = 0x2
0xf9: V82 = EXP 0x2 0xa0
0xfa: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd: V84 = AND V269 0xffffffffffffffffffffffffffffffffffffffff
0xff: M[V78] = V84
0x100: V85 = 0x20
0x102: V86 = ADD 0x20 V78
0x103: V87 = 0x40
0x105: V88 = M[0x40]
0x108: V89 = SUB V86 V88
0x10a: RETURN V88 V89
---
Entry stack: [V10, 0xef, V269]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xef]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x5f]
Successors: [0x2ed]
---
0x10b JUMPDEST
0x10c PUSH2 0x75
0x10f PUSH2 0x2ed
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V90 = 0x75
0x10f: V91 = 0x2ed
0x112: JUMP 0x2ed
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75]
Exit stack: [V10, 0x75]

================================

Block 0x113
[0x113:0x114]
---
Predecessors: []
Successors: []
---
0x113 JUMPDEST
0x114 STOP
---
0x113: JUMPDEST 
0x114: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x115
[0x115:0x11b]
---
Predecessors: [0x6a]
Successors: [0x11c, 0x120]
---
0x115 JUMPDEST
0x116 CALLVALUE
0x117 ISZERO
0x118 PUSH2 0x120
0x11b JUMPI
---
0x115: JUMPDEST 
0x116: V92 = CALLVALUE
0x117: V93 = ISZERO V92
0x118: V94 = 0x120
0x11b: JUMPI 0x120 V93
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x115]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V95 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x120
[0x120:0x127]
---
Predecessors: [0x115]
Successors: [0x349]
---
0x120 JUMPDEST
0x121 PUSH2 0x128
0x124 PUSH2 0x349
0x127 JUMP
---
0x120: JUMPDEST 
0x121: V96 = 0x128
0x124: V97 = 0x349
0x127: JUMP 0x349
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x128]
Exit stack: [V10, 0x128]

================================

Block 0x128
[0x128:0x13b]
---
Predecessors: [0x349]
Successors: []
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b MLOAD
0x12c SWAP1
0x12d ISZERO
0x12e ISZERO
0x12f DUP2
0x130 MSTORE
0x131 PUSH1 0x20
0x133 ADD
0x134 PUSH1 0x40
0x136 MLOAD
0x137 DUP1
0x138 SWAP2
0x139 SUB
0x13a SWAP1
0x13b RETURN
---
0x128: JUMPDEST 
0x129: V98 = 0x40
0x12b: V99 = M[0x40]
0x12d: V100 = ISZERO V300
0x12e: V101 = ISZERO V100
0x130: M[V99] = V101
0x131: V102 = 0x20
0x133: V103 = ADD 0x20 V99
0x134: V104 = 0x40
0x136: V105 = M[0x40]
0x139: V106 = SUB V103 V105
0x13b: RETURN V105 V106
---
Entry stack: [V10, 0x128, V300]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x128]

================================

Block 0x13c
[0x13c:0x157]
---
Predecessors: [0x84]
Successors: [0x158, 0x15c]
---
0x13c JUMPDEST
0x13d PUSH1 0x0
0x13f SLOAD
0x140 CALLER
0x141 PUSH1 0x1
0x143 PUSH1 0xa0
0x145 PUSH1 0x2
0x147 EXP
0x148 SUB
0x149 SWAP1
0x14a DUP2
0x14b AND
0x14c PUSH2 0x100
0x14f SWAP1
0x150 SWAP3
0x151 DIV
0x152 AND
0x153 EQ
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x13c: JUMPDEST 
0x13d: V107 = 0x0
0x13f: V108 = S[0x0]
0x140: V109 = CALLER
0x141: V110 = 0x1
0x143: V111 = 0xa0
0x145: V112 = 0x2
0x147: V113 = EXP 0x2 0xa0
0x148: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14b: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x14c: V116 = 0x100
0x151: V117 = DIV V108 0x100
0x152: V118 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x153: V119 = EQ V118 V115
0x154: V120 = 0x15c
0x157: JUMPI 0x15c V119
---
Entry stack: [V10, 0x75, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V41]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x13c]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V121 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V41]

================================

Block 0x15c
[0x15c:0x227]
---
Predecessors: [0x13c]
Successors: [0x228, 0x22c]
---
0x15c JUMPDEST
0x15d PUSH1 0x0
0x15f DUP1
0x160 SLOAD
0x161 PUSH1 0xff
0x163 NOT
0x164 AND
0x165 PUSH1 0x1
0x167 OR
0x168 SWAP1
0x169 SSTORE
0x16a PUSH32 0xaab9bba4fcd15de155f5c12ace41cb1b506009169b2ca88c26fa17282a6a2866
0x18b DUP2
0x18c PUSH1 0x1
0x18e PUSH1 0xa0
0x190 PUSH1 0x2
0x192 EXP
0x193 SUB
0x194 ADDRESS
0x195 AND
0x196 BALANCE
0x197 TIMESTAMP
0x198 PUSH1 0x40
0x19a MLOAD
0x19b DUP1
0x19c DUP5
0x19d PUSH1 0x1
0x19f PUSH1 0xa0
0x1a1 PUSH1 0x2
0x1a3 EXP
0x1a4 SUB
0x1a5 AND
0x1a6 PUSH1 0x1
0x1a8 PUSH1 0xa0
0x1aa PUSH1 0x2
0x1ac EXP
0x1ad SUB
0x1ae AND
0x1af DUP2
0x1b0 MSTORE
0x1b1 PUSH1 0x20
0x1b3 ADD
0x1b4 DUP4
0x1b5 DUP2
0x1b6 MSTORE
0x1b7 PUSH1 0x20
0x1b9 ADD
0x1ba DUP3
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP4
0x1c1 POP
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc LOG1
0x1cd DUP1
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 AND
0x1d7 PUSH4 0xa3912ec8
0x1dc ADDRESS
0x1dd PUSH1 0x1
0x1df PUSH1 0xa0
0x1e1 PUSH1 0x2
0x1e3 EXP
0x1e4 SUB
0x1e5 AND
0x1e6 BALANCE
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea DUP3
0x1eb PUSH4 0xffffffff
0x1f0 AND
0x1f1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x20f MUL
0x210 DUP2
0x211 MSTORE
0x212 PUSH1 0x4
0x214 ADD
0x215 PUSH1 0x0
0x217 PUSH1 0x40
0x219 MLOAD
0x21a DUP1
0x21b DUP4
0x21c SUB
0x21d DUP2
0x21e DUP6
0x21f DUP9
0x220 DUP1
0x221 EXTCODESIZE
0x222 ISZERO
0x223 ISZERO
0x224 PUSH2 0x22c
0x227 JUMPI
---
0x15c: JUMPDEST 
0x15d: V122 = 0x0
0x160: V123 = S[0x0]
0x161: V124 = 0xff
0x163: V125 = NOT 0xff
0x164: V126 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V123
0x165: V127 = 0x1
0x167: V128 = OR 0x1 V126
0x169: S[0x0] = V128
0x16a: V129 = 0xaab9bba4fcd15de155f5c12ace41cb1b506009169b2ca88c26fa17282a6a2866
0x18c: V130 = 0x1
0x18e: V131 = 0xa0
0x190: V132 = 0x2
0x192: V133 = EXP 0x2 0xa0
0x193: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V135 = ADDRESS
0x195: V136 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x196: V137 = BALANCE V136
0x197: V138 = TIMESTAMP
0x198: V139 = 0x40
0x19a: V140 = M[0x40]
0x19d: V141 = 0x1
0x19f: V142 = 0xa0
0x1a1: V143 = 0x2
0x1a3: V144 = EXP 0x2 0xa0
0x1a4: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a5: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x1a6: V147 = 0x1
0x1a8: V148 = 0xa0
0x1aa: V149 = 0x2
0x1ac: V150 = EXP 0x2 0xa0
0x1ad: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ae: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x1b0: M[V140] = V152
0x1b1: V153 = 0x20
0x1b3: V154 = ADD 0x20 V140
0x1b6: M[V154] = V137
0x1b7: V155 = 0x20
0x1b9: V156 = ADD 0x20 V154
0x1bc: M[V156] = V138
0x1bd: V157 = 0x20
0x1bf: V158 = ADD 0x20 V156
0x1c5: V159 = 0x40
0x1c7: V160 = M[0x40]
0x1ca: V161 = SUB V158 V160
0x1cc: LOG V160 V161 0xaab9bba4fcd15de155f5c12ace41cb1b506009169b2ca88c26fa17282a6a2866
0x1ce: V162 = 0x1
0x1d0: V163 = 0xa0
0x1d2: V164 = 0x2
0x1d4: V165 = EXP 0x2 0xa0
0x1d5: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d6: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x1d7: V168 = 0xa3912ec8
0x1dc: V169 = ADDRESS
0x1dd: V170 = 0x1
0x1df: V171 = 0xa0
0x1e1: V172 = 0x2
0x1e3: V173 = EXP 0x2 0xa0
0x1e4: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e5: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1e6: V176 = BALANCE V175
0x1e7: V177 = 0x40
0x1e9: V178 = M[0x40]
0x1eb: V179 = 0xffffffff
0x1f0: V180 = AND 0xffffffff 0xa3912ec8
0x1f1: V181 = 0x100000000000000000000000000000000000000000000000000000000
0x20f: V182 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa3912ec8
0x211: M[V178] = 0xa3912ec800000000000000000000000000000000000000000000000000000000
0x212: V183 = 0x4
0x214: V184 = ADD 0x4 V178
0x215: V185 = 0x0
0x217: V186 = 0x40
0x219: V187 = M[0x40]
0x21c: V188 = SUB V184 V187
0x221: V189 = EXTCODESIZE V167
0x222: V190 = ISZERO V189
0x223: V191 = ISZERO V190
0x224: V192 = 0x22c
0x227: JUMPI 0x22c V191
---
Entry stack: [V10, 0x75, V41]
Stack pops: 1
Stack additions: [S0, V167, 0xa3912ec8, V176, V184, 0x0, V187, V188, V187, V176, V167]
Exit stack: [V10, 0x75, V41, V167, 0xa3912ec8, V176, V184, 0x0, V187, V188, V187, V176, V167]

================================

Block 0x228
[0x228:0x22b]
---
Predecessors: [0x15c]
Successors: []
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b REVERT
---
0x228: V193 = 0x0
0x22b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V41, V167, 0xa3912ec8, V176, V184, 0x0, V187, V188, V187, V176, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V41, V167, 0xa3912ec8, V176, V184, 0x0, V187, V188, V187, V176, V167]

================================

Block 0x22c
[0x22c:0x238]
---
Predecessors: [0x15c]
Successors: [0x239, 0x23d]
---
0x22c JUMPDEST
0x22d PUSH2 0x25ee
0x230 GAS
0x231 SUB
0x232 CALL
0x233 ISZERO
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x22c: JUMPDEST 
0x22d: V194 = 0x25ee
0x230: V195 = GAS
0x231: V196 = SUB V195 0x25ee
0x232: V197 = CALL V196 V167 V176 V187 V188 V187 0x0
0x233: V198 = ISZERO V197
0x234: V199 = ISZERO V198
0x235: V200 = 0x23d
0x238: JUMPI 0x23d V199
---
Entry stack: [V10, 0x75, V41, V167, 0xa3912ec8, V176, V184, 0x0, V187, V188, V187, V176, V167]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x75, V41, V167, 0xa3912ec8, V176, V184]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x22c]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V201 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V41, V167, 0xa3912ec8, V176, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V41, V167, 0xa3912ec8, V176, V184]

================================

Block 0x23d
[0x23d:0x241]
---
Predecessors: [0x22c]
Successors: [0x242]
---
0x23d JUMPDEST
0x23e POP
0x23f POP
0x240 POP
0x241 POP
---
0x23d: JUMPDEST 
---
Entry stack: [V10, 0x75, V41, V167, 0xa3912ec8, V176, V184]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x75, V41]

================================

Block 0x242
[0x242:0x242]
---
Predecessors: [0x23d]
Successors: [0x243]
---
0x242 JUMPDEST
---
0x242: JUMPDEST 
---
Entry stack: [V10, 0x75, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V41]

================================

Block 0x243
[0x243:0x245]
---
Predecessors: [0x242]
Successors: [0x75]
---
0x243 JUMPDEST
0x244 POP
0x245 JUMP
---
0x243: JUMPDEST 
0x245: JUMP 0x75
---
Entry stack: [V10, 0x75, V41]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x246
[0x246:0x261]
---
Predecessors: [0xa5]
Successors: [0x262, 0x266]
---
0x246 JUMPDEST
0x247 PUSH1 0x0
0x249 SLOAD
0x24a CALLER
0x24b PUSH1 0x1
0x24d PUSH1 0xa0
0x24f PUSH1 0x2
0x251 EXP
0x252 SUB
0x253 SWAP1
0x254 DUP2
0x255 AND
0x256 PUSH2 0x100
0x259 SWAP1
0x25a SWAP3
0x25b DIV
0x25c AND
0x25d EQ
0x25e PUSH2 0x266
0x261 JUMPI
---
0x246: JUMPDEST 
0x247: V202 = 0x0
0x249: V203 = S[0x0]
0x24a: V204 = CALLER
0x24b: V205 = 0x1
0x24d: V206 = 0xa0
0x24f: V207 = 0x2
0x251: V208 = EXP 0x2 0xa0
0x252: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x255: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x256: V211 = 0x100
0x25b: V212 = DIV V203 0x100
0x25c: V213 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V214 = EQ V213 V210
0x25e: V215 = 0x266
0x261: JUMPI 0x266 V214
---
Entry stack: [V10, 0x75, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V55]

================================

Block 0x262
[0x262:0x265]
---
Predecessors: [0x246]
Successors: []
---
0x262 PUSH1 0x0
0x264 DUP1
0x265 REVERT
---
0x262: V216 = 0x0
0x265: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V55]

================================

Block 0x266
[0x266:0x272]
---
Predecessors: [0x246]
Successors: [0x273, 0x277]
---
0x266 JUMPDEST
0x267 PUSH1 0x0
0x269 SLOAD
0x26a PUSH1 0xff
0x26c AND
0x26d ISZERO
0x26e ISZERO
0x26f PUSH2 0x277
0x272 JUMPI
---
0x266: JUMPDEST 
0x267: V217 = 0x0
0x269: V218 = S[0x0]
0x26a: V219 = 0xff
0x26c: V220 = AND 0xff V218
0x26d: V221 = ISZERO V220
0x26e: V222 = ISZERO V221
0x26f: V223 = 0x277
0x272: JUMPI 0x277 V222
---
Entry stack: [V10, 0x75, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V55]

================================

Block 0x273
[0x273:0x276]
---
Predecessors: [0x266]
Successors: []
---
0x273 PUSH1 0x0
0x275 DUP1
0x276 REVERT
---
0x273: V224 = 0x0
0x276: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V55]

================================

Block 0x277
[0x277:0x282]
---
Predecessors: [0x266]
Successors: []
---
0x277 JUMPDEST
0x278 DUP1
0x279 PUSH1 0x1
0x27b PUSH1 0xa0
0x27d PUSH1 0x2
0x27f EXP
0x280 SUB
0x281 AND
0x282 SELFDESTRUCT
---
0x277: JUMPDEST 
0x279: V225 = 0x1
0x27b: V226 = 0xa0
0x27d: V227 = 0x2
0x27f: V228 = EXP 0x2 0xa0
0x280: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x282: SELFDESTRUCT V230
---
Entry stack: [V10, 0x75, V55]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x75, V55]

================================

Block 0x283
[0x283:0x283]
---
Predecessors: []
Successors: [0x284]
---
0x283 JUMPDEST
---
0x283: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x284
[0x284:0x286]
---
Predecessors: [0x283]
Successors: []
Has unresolved jump.
---
0x284 JUMPDEST
0x285 POP
0x286 JUMP
---
0x284: JUMPDEST 
0x286: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x287
[0x287:0x2a2]
---
Predecessors: [0xc6]
Successors: [0x2a3, 0x2a7]
---
0x287 JUMPDEST
0x288 PUSH1 0x0
0x28a SLOAD
0x28b CALLER
0x28c PUSH1 0x1
0x28e PUSH1 0xa0
0x290 PUSH1 0x2
0x292 EXP
0x293 SUB
0x294 SWAP1
0x295 DUP2
0x296 AND
0x297 PUSH2 0x100
0x29a SWAP1
0x29b SWAP3
0x29c DIV
0x29d AND
0x29e EQ
0x29f PUSH2 0x2a7
0x2a2 JUMPI
---
0x287: JUMPDEST 
0x288: V231 = 0x0
0x28a: V232 = S[0x0]
0x28b: V233 = CALLER
0x28c: V234 = 0x1
0x28e: V235 = 0xa0
0x290: V236 = 0x2
0x292: V237 = EXP 0x2 0xa0
0x293: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x296: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x297: V240 = 0x100
0x29c: V241 = DIV V232 0x100
0x29d: V242 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x29e: V243 = EQ V242 V239
0x29f: V244 = 0x2a7
0x2a2: JUMPI 0x2a7 V243
---
Entry stack: [V10, 0x75, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V69]

================================

Block 0x2a3
[0x2a3:0x2a6]
---
Predecessors: [0x287]
Successors: []
---
0x2a3 PUSH1 0x0
0x2a5 DUP1
0x2a6 REVERT
---
0x2a3: V245 = 0x0
0x2a6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V69]

================================

Block 0x2a7
[0x2a7:0x2d4]
---
Predecessors: [0x287]
Successors: [0x2d5]
---
0x2a7 JUMPDEST
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab SLOAD
0x2ac PUSH21 0xffffffffffffffffffffffffffffffffffffffff00
0x2c2 NOT
0x2c3 AND
0x2c4 PUSH2 0x100
0x2c7 PUSH1 0x1
0x2c9 PUSH1 0xa0
0x2cb PUSH1 0x2
0x2cd EXP
0x2ce SUB
0x2cf DUP5
0x2d0 AND
0x2d1 MUL
0x2d2 OR
0x2d3 SWAP1
0x2d4 SSTORE
---
0x2a7: JUMPDEST 
0x2a8: V246 = 0x0
0x2ab: V247 = S[0x0]
0x2ac: V248 = 0xffffffffffffffffffffffffffffffffffffffff00
0x2c2: V249 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x2c3: V250 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V247
0x2c4: V251 = 0x100
0x2c7: V252 = 0x1
0x2c9: V253 = 0xa0
0x2cb: V254 = 0x2
0x2cd: V255 = EXP 0x2 0xa0
0x2ce: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V257 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: V258 = MUL V257 0x100
0x2d2: V259 = OR V258 V250
0x2d4: S[0x0] = V259
---
Entry stack: [V10, 0x75, V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x75, V69]

================================

Block 0x2d5
[0x2d5:0x2d5]
---
Predecessors: [0x2a7]
Successors: [0x2d6]
---
0x2d5 JUMPDEST
---
0x2d5: JUMPDEST 
---
Entry stack: [V10, 0x75, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V69]

================================

Block 0x2d6
[0x2d6:0x2d8]
---
Predecessors: [0x2d5]
Successors: [0x75]
---
0x2d6 JUMPDEST
0x2d7 POP
0x2d8 JUMP
---
0x2d6: JUMPDEST 
0x2d8: JUMP 0x75
---
Entry stack: [V10, 0x75, V69]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d9
[0x2d9:0x2ec]
---
Predecessors: [0xe7]
Successors: [0xef]
---
0x2d9 JUMPDEST
0x2da PUSH1 0x0
0x2dc SLOAD
0x2dd PUSH2 0x100
0x2e0 SWAP1
0x2e1 DIV
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0xa0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 SUB
0x2ea AND
0x2eb DUP2
0x2ec JUMP
---
0x2d9: JUMPDEST 
0x2da: V260 = 0x0
0x2dc: V261 = S[0x0]
0x2dd: V262 = 0x100
0x2e1: V263 = DIV V261 0x100
0x2e2: V264 = 0x1
0x2e4: V265 = 0xa0
0x2e6: V266 = 0x2
0x2e8: V267 = EXP 0x2 0xa0
0x2e9: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x2ec: JUMP 0xef
---
Entry stack: [V10, 0xef]
Stack pops: 1
Stack additions: [S0, V269]
Exit stack: [V10, 0xef, V269]

================================

Block 0x2ed
[0x2ed:0x346]
---
Predecessors: [0x10b]
Successors: [0x347]
---
0x2ed JUMPDEST
0x2ee PUSH32 0x606bd383d36fb6a21cc52432fedf43ae990ef5625eb266d0ddf50cc9cc114c7a
0x30f CALLER
0x310 CALLVALUE
0x311 TIMESTAMP
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 DUP5
0x317 PUSH1 0x1
0x319 PUSH1 0xa0
0x31b PUSH1 0x2
0x31d EXP
0x31e SUB
0x31f AND
0x320 PUSH1 0x1
0x322 PUSH1 0xa0
0x324 PUSH1 0x2
0x326 EXP
0x327 SUB
0x328 AND
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x20
0x32d ADD
0x32e DUP4
0x32f DUP2
0x330 MSTORE
0x331 PUSH1 0x20
0x333 ADD
0x334 DUP3
0x335 DUP2
0x336 MSTORE
0x337 PUSH1 0x20
0x339 ADD
0x33a SWAP4
0x33b POP
0x33c POP
0x33d POP
0x33e POP
0x33f PUSH1 0x40
0x341 MLOAD
0x342 DUP1
0x343 SWAP2
0x344 SUB
0x345 SWAP1
0x346 LOG1
---
0x2ed: JUMPDEST 
0x2ee: V270 = 0x606bd383d36fb6a21cc52432fedf43ae990ef5625eb266d0ddf50cc9cc114c7a
0x30f: V271 = CALLER
0x310: V272 = CALLVALUE
0x311: V273 = TIMESTAMP
0x312: V274 = 0x40
0x314: V275 = M[0x40]
0x317: V276 = 0x1
0x319: V277 = 0xa0
0x31b: V278 = 0x2
0x31d: V279 = EXP 0x2 0xa0
0x31e: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31f: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x320: V282 = 0x1
0x322: V283 = 0xa0
0x324: V284 = 0x2
0x326: V285 = EXP 0x2 0xa0
0x327: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x328: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x32a: M[V275] = V287
0x32b: V288 = 0x20
0x32d: V289 = ADD 0x20 V275
0x330: M[V289] = V272
0x331: V290 = 0x20
0x333: V291 = ADD 0x20 V289
0x336: M[V291] = V273
0x337: V292 = 0x20
0x339: V293 = ADD 0x20 V291
0x33f: V294 = 0x40
0x341: V295 = M[0x40]
0x344: V296 = SUB V293 V295
0x346: LOG V295 V296 0x606bd383d36fb6a21cc52432fedf43ae990ef5625eb266d0ddf50cc9cc114c7a
---
Entry stack: [V10, 0x75]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75]

================================

Block 0x347
[0x347:0x348]
---
Predecessors: [0x2ed]
Successors: [0x75]
---
0x347 JUMPDEST
0x348 JUMP
---
0x347: JUMPDEST 
0x348: JUMP 0x75
---
Entry stack: [V10, 0x75]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x349
[0x349:0x351]
---
Predecessors: [0x120]
Successors: [0x128]
---
0x349 JUMPDEST
0x34a PUSH1 0x0
0x34c SLOAD
0x34d PUSH1 0xff
0x34f AND
0x350 DUP2
0x351 JUMP
---
0x349: JUMPDEST 
0x34a: V297 = 0x0
0x34c: V298 = S[0x0]
0x34d: V299 = 0xff
0x34f: V300 = AND 0xff V298
0x351: JUMP 0x128
---
Entry stack: [V10, 0x128]
Stack pops: 1
Stack additions: [S0, V300]
Exit stack: [V10, 0x128, V300]

================================

Block 0x352
[0x352:0x37d]
---
Predecessors: []
Successors: []
---
0x352 STOP
0x353 LOG1
0x354 PUSH6 0x627a7a723058
0x35b SHA3
0x35c PUSH20 0xf26daf6bd7f48851315bc2b39f30e10b3b7597f4
0x371 MISSING 0xe8
0x372 MISSING 0x47
0x373 DUP14
0x374 ADDMOD
0x375 MISSING 0x27
0x376 MISSING 0xd6
0x377 MISSING 0xdb
0x378 DUP12
0x379 MISSING 0xda
0x37a INVALID
0x37b SUB
0x37c STOP
0x37d MISSING 0x29
---
0x352: STOP 
0x353: LOG S0 S1 S2
0x354: V301 = 0x627a7a723058
0x35b: V302 = SHA3 0x627a7a723058 S3
0x35c: V303 = 0xf26daf6bd7f48851315bc2b39f30e10b3b7597f4
0x371: MISSING 0xe8
0x372: MISSING 0x47
0x374: V304 = ADDMOD S13 S0 S1
0x375: MISSING 0x27
0x376: MISSING 0xd6
0x377: MISSING 0xdb
0x379: MISSING 0xda
0x37a: INVALID 
0x37b: V305 = SUB S0 S1
0x37c: STOP 
0x37d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf26daf6bd7f48851315bc2b39f30e10b3b7597f4, V302, V304, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V305]
Exit stack: []

================================

Function 0:
Public function signature: 0x900f010
Entry block: 0x79
Exit block: 0x77
Body: 0x75, 0x76, 0x77, 0x79, 0x80, 0x84, 0x13c, 0x158, 0x15c, 0x228, 0x22c, 0x239, 0x23d, 0x242, 0x243

Function 1:
Public function signature: 0x3f5a0bdd
Entry block: 0x9a
Exit block: 0x273
Body: 0x9a, 0xa1, 0xa5, 0x246, 0x262, 0x266, 0x273, 0x277

Function 2:
Public function signature: 0x79cb5a2f
Entry block: 0xbb
Exit block: 0x77
Body: 0x75, 0x76, 0x77, 0xbb, 0xc2, 0xc6, 0x287, 0x2a3, 0x2a7, 0x2d5, 0x2d6

Function 3:
Public function signature: 0x8ca17755
Entry block: 0xdc
Exit block: 0xef
Body: 0xdc, 0xe3, 0xe7, 0xef, 0x2d9

Function 4:
Public function signature: 0xa3912ec8
Entry block: 0x10b
Exit block: 0x77
Body: 0x75, 0x76, 0x77, 0x10b, 0x2ed, 0x347

Function 5:
Public function signature: 0xc28de2cd
Entry block: 0x115
Exit block: 0x128
Body: 0x115, 0x11c, 0x120, 0x128, 0x349

Function 6:
Public fallback function
Entry block: 0x75
Exit block: 0x77
Body: 0x75, 0x76, 0x77

