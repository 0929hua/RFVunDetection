Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x81]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2cf2c0af
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x81
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2cf2c0af
0x20: V14 = EQ V12 0x2cf2c0af
0x21: V15 = 0x81
0x24: JUMPI 0x81 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x99]
---
0x25 DUP1
0x26 PUSH4 0x2e1a7d4d
0x2b EQ
0x2c PUSH2 0x99
0x2f JUMPI
---
0x26: V16 = 0x2e1a7d4d
0x2b: V17 = EQ 0x2e1a7d4d V12
0x2c: V18 = 0x99
0x2f: JUMPI 0x99 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xb1]
---
0x30 DUP1
0x31 PUSH4 0x43d726d6
0x36 EQ
0x37 PUSH2 0xb1
0x3a JUMPI
---
0x31: V19 = 0x43d726d6
0x36: V20 = EQ 0x43d726d6 V12
0x37: V21 = 0xb1
0x3a: JUMPI 0xb1 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xc6]
---
0x3b DUP1
0x3c PUSH4 0x5c73dcea
0x41 EQ
0x42 PUSH2 0xc6
0x45 JUMPI
---
0x3c: V22 = 0x5c73dcea
0x41: V23 = EQ 0x5c73dcea V12
0x42: V24 = 0xc6
0x45: JUMPI 0xc6 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x127]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x127
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x127
0x50: JUMPI 0x127 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x158]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x158
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x158
0x5b: JUMPI 0x158 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x187]
---
0x5c DUP1
0x5d PUSH4 0xd0e30db0
0x62 EQ
0x63 PUSH2 0x187
0x66 JUMPI
---
0x5d: V31 = 0xd0e30db0
0x62: V32 = EQ 0xd0e30db0 V12
0x63: V33 = 0x187
0x66: JUMPI 0x187 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x191]
---
0x67 DUP1
0x68 PUSH4 0xf1b83630
0x6d EQ
0x6e PUSH2 0x191
0x71 JUMPI
---
0x68: V34 = 0xf1b83630
0x6d: V35 = EQ 0xf1b83630 V12
0x6e: V36 = 0x191
0x71: JUMPI 0x191 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1a9]
---
0x72 DUP1
0x73 PUSH4 0xff293aae
0x78 EQ
0x79 PUSH2 0x1a9
0x7c JUMPI
---
0x73: V37 = 0xff293aae
0x78: V38 = EQ 0xff293aae V12
0x79: V39 = 0x1a9
0x7c: JUMPI 0x1a9 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x0, 0x72, 0x26a, 0x2be, 0x2eb, 0x4ea, 0x716]
Successors: [0x7e]
---
0x7d JUMPDEST
---
0x7d: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e
[0x7e:0x7e]
---
Predecessors: [0x7d]
Successors: [0x7f]
---
0x7e JUMPDEST
---
0x7e: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x7e]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81
[0x81:0x87]
---
Predecessors: [0xb]
Successors: [0x88, 0x8c]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 ISZERO
0x84 PUSH2 0x8c
0x87 JUMPI
---
0x81: JUMPDEST 
0x82: V40 = CALLVALUE
0x83: V41 = ISZERO V40
0x84: V42 = 0x8c
0x87: JUMPI 0x8c V41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x81]
Successors: []
---
0x88 PUSH1 0x0
0x8a DUP1
0x8b REVERT
---
0x88: V43 = 0x0
0x8b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x1f6]
---
0x8c JUMPDEST
0x8d PUSH2 0x7d
0x90 PUSH1 0x4
0x92 CALLDATALOAD
0x93 PUSH2 0x1f6
0x96 JUMP
---
0x8c: JUMPDEST 
0x8d: V44 = 0x7d
0x90: V45 = 0x4
0x92: V46 = CALLDATALOAD 0x4
0x93: V47 = 0x1f6
0x96: JUMP 0x1f6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V46]
Exit stack: [V12, 0x7d, V46]

================================

Block 0x97
[0x97:0x98]
---
Predecessors: []
Successors: []
---
0x97 JUMPDEST
0x98 STOP
---
0x97: JUMPDEST 
0x98: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x99
[0x99:0x9f]
---
Predecessors: [0x25]
Successors: [0xa0, 0xa4]
---
0x99 JUMPDEST
0x9a CALLVALUE
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x99: JUMPDEST 
0x9a: V48 = CALLVALUE
0x9b: V49 = ISZERO V48
0x9c: V50 = 0xa4
0x9f: JUMPI 0xa4 V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x99]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V51 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0x26e]
---
0xa4 JUMPDEST
0xa5 PUSH2 0x7d
0xa8 PUSH1 0x4
0xaa CALLDATALOAD
0xab PUSH2 0x26e
0xae JUMP
---
0xa4: JUMPDEST 
0xa5: V52 = 0x7d
0xa8: V53 = 0x4
0xaa: V54 = CALLDATALOAD 0x4
0xab: V55 = 0x26e
0xae: JUMP 0x26e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V54]
Exit stack: [V12, 0x7d, V54]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: []
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x30]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V56 = CALLVALUE
0xb3: V57 = ISZERO V56
0xb4: V58 = 0xbc
0xb7: JUMPI 0xbc V57
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V59 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb1]
Successors: [0x2c1]
---
0xbc JUMPDEST
0xbd PUSH2 0x7d
0xc0 PUSH2 0x2c1
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V60 = 0x7d
0xc0: V61 = 0x2c1
0xc3: JUMP 0x2c1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: []
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0x3b]
Successors: [0xcd, 0xd1]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V62 = CALLVALUE
0xc8: V63 = ISZERO V62
0xc9: V64 = 0xd1
0xcc: JUMPI 0xd1 V63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc6]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V65 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd1
[0xd1:0x112]
---
Predecessors: [0xc6]
Successors: [0x2ed]
---
0xd1 JUMPDEST
0xd2 PUSH2 0x113
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd PUSH1 0x4
0xdf CALLDATALOAD
0xe0 DUP2
0xe1 AND
0xe2 SWAP1
0xe3 PUSH1 0x24
0xe5 CALLDATALOAD
0xe6 SWAP1
0xe7 PUSH1 0x44
0xe9 CALLDATALOAD
0xea DUP2
0xeb AND
0xec SWAP1
0xed PUSH1 0x64
0xef CALLDATALOAD
0xf0 SWAP1
0xf1 PUSH1 0x84
0xf3 CALLDATALOAD
0xf4 SWAP1
0xf5 PUSH1 0xa4
0xf7 CALLDATALOAD
0xf8 SWAP1
0xf9 PUSH1 0xc4
0xfb CALLDATALOAD
0xfc AND
0xfd PUSH1 0xff
0xff PUSH1 0xe4
0x101 CALLDATALOAD
0x102 AND
0x103 PUSH2 0x104
0x106 CALLDATALOAD
0x107 PUSH2 0x124
0x10a CALLDATALOAD
0x10b PUSH2 0x144
0x10e CALLDATALOAD
0x10f PUSH2 0x2ed
0x112 JUMP
---
0xd1: JUMPDEST 
0xd2: V66 = 0x113
0xd5: V67 = 0x1
0xd7: V68 = 0xa0
0xd9: V69 = 0x2
0xdb: V70 = EXP 0x2 0xa0
0xdc: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd: V72 = 0x4
0xdf: V73 = CALLDATALOAD 0x4
0xe1: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0xe3: V75 = 0x24
0xe5: V76 = CALLDATALOAD 0x24
0xe7: V77 = 0x44
0xe9: V78 = CALLDATALOAD 0x44
0xeb: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0xed: V80 = 0x64
0xef: V81 = CALLDATALOAD 0x64
0xf1: V82 = 0x84
0xf3: V83 = CALLDATALOAD 0x84
0xf5: V84 = 0xa4
0xf7: V85 = CALLDATALOAD 0xa4
0xf9: V86 = 0xc4
0xfb: V87 = CALLDATALOAD 0xc4
0xfc: V88 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V89 = 0xff
0xff: V90 = 0xe4
0x101: V91 = CALLDATALOAD 0xe4
0x102: V92 = AND V91 0xff
0x103: V93 = 0x104
0x106: V94 = CALLDATALOAD 0x104
0x107: V95 = 0x124
0x10a: V96 = CALLDATALOAD 0x124
0x10b: V97 = 0x144
0x10e: V98 = CALLDATALOAD 0x144
0x10f: V99 = 0x2ed
0x112: JUMP 0x2ed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98]
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98]

================================

Block 0x113
[0x113:0x126]
---
Predecessors: [0x3c5]
Successors: []
---
0x113 JUMPDEST
0x114 PUSH1 0x40
0x116 MLOAD
0x117 SWAP1
0x118 ISZERO
0x119 ISZERO
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f PUSH1 0x40
0x121 MLOAD
0x122 DUP1
0x123 SWAP2
0x124 SUB
0x125 SWAP1
0x126 RETURN
---
0x113: JUMPDEST 
0x114: V100 = 0x40
0x116: V101 = M[0x40]
0x118: V102 = ISZERO V382
0x119: V103 = ISZERO V102
0x11b: M[V101] = V103
0x11c: V104 = 0x20
0x11e: V105 = ADD 0x20 V101
0x11f: V106 = 0x40
0x121: V107 = M[0x40]
0x124: V108 = SUB V105 V107
0x126: RETURN V107 V108
---
Entry stack: [V12, V382]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x127
[0x127:0x12d]
---
Predecessors: [0x46]
Successors: [0x12e, 0x132]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x127: JUMPDEST 
0x128: V109 = CALLVALUE
0x129: V110 = ISZERO V109
0x12a: V111 = 0x132
0x12d: JUMPI 0x132 V110
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x127]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V112 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x132
[0x132:0x145]
---
Predecessors: [0x127]
Successors: [0x3d5]
---
0x132 JUMPDEST
0x133 PUSH2 0x146
0x136 PUSH1 0x1
0x138 PUSH1 0xa0
0x13a PUSH1 0x2
0x13c EXP
0x13d SUB
0x13e PUSH1 0x4
0x140 CALLDATALOAD
0x141 AND
0x142 PUSH2 0x3d5
0x145 JUMP
---
0x132: JUMPDEST 
0x133: V113 = 0x146
0x136: V114 = 0x1
0x138: V115 = 0xa0
0x13a: V116 = 0x2
0x13c: V117 = EXP 0x2 0xa0
0x13d: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V119 = 0x4
0x140: V120 = CALLDATALOAD 0x4
0x141: V121 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x142: V122 = 0x3d5
0x145: JUMP 0x3d5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x146, V121]
Exit stack: [V12, 0x146, V121]

================================

Block 0x146
[0x146:0x157]
---
Predecessors: [0x456]
Successors: []
---
0x146 JUMPDEST
0x147 PUSH1 0x40
0x149 MLOAD
0x14a SWAP1
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x20
0x14f ADD
0x150 PUSH1 0x40
0x152 MLOAD
0x153 DUP1
0x154 SWAP2
0x155 SUB
0x156 SWAP1
0x157 RETURN
---
0x146: JUMPDEST 
0x147: V123 = 0x40
0x149: V124 = M[0x40]
0x14c: M[V124] = V439
0x14d: V125 = 0x20
0x14f: V126 = ADD 0x20 V124
0x150: V127 = 0x40
0x152: V128 = M[0x40]
0x155: V129 = SUB V126 V128
0x157: RETURN V128 V129
---
Entry stack: [V12, V439]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x158
[0x158:0x15e]
---
Predecessors: [0x51]
Successors: [0x15f, 0x163]
---
0x158 JUMPDEST
0x159 CALLVALUE
0x15a ISZERO
0x15b PUSH2 0x163
0x15e JUMPI
---
0x158: JUMPDEST 
0x159: V130 = CALLVALUE
0x15a: V131 = ISZERO V130
0x15b: V132 = 0x163
0x15e: JUMPI 0x163 V131
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15f
[0x15f:0x162]
---
Predecessors: [0x158]
Successors: []
---
0x15f PUSH1 0x0
0x161 DUP1
0x162 REVERT
---
0x15f: V133 = 0x0
0x162: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x163
[0x163:0x16a]
---
Predecessors: [0x158]
Successors: [0x45c]
---
0x163 JUMPDEST
0x164 PUSH2 0x16b
0x167 PUSH2 0x45c
0x16a JUMP
---
0x163: JUMPDEST 
0x164: V134 = 0x16b
0x167: V135 = 0x45c
0x16a: JUMP 0x45c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x16b]
Exit stack: [V12, 0x16b]

================================

Block 0x16b
[0x16b:0x186]
---
Predecessors: [0x45c]
Successors: []
---
0x16b JUMPDEST
0x16c PUSH1 0x40
0x16e MLOAD
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 SWAP1
0x178 SWAP2
0x179 AND
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e ADD
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 SWAP2
0x184 SUB
0x185 SWAP1
0x186 RETURN
---
0x16b: JUMPDEST 
0x16c: V136 = 0x40
0x16e: V137 = M[0x40]
0x16f: V138 = 0x1
0x171: V139 = 0xa0
0x173: V140 = 0x2
0x175: V141 = EXP 0x2 0xa0
0x176: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x179: V143 = AND V447 0xffffffffffffffffffffffffffffffffffffffff
0x17b: M[V137] = V143
0x17c: V144 = 0x20
0x17e: V145 = ADD 0x20 V137
0x17f: V146 = 0x40
0x181: V147 = M[0x40]
0x184: V148 = SUB V145 V147
0x186: RETURN V147 V148
---
Entry stack: [V12, 0x16b, V447]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x16b]

================================

Block 0x187
[0x187:0x18e]
---
Predecessors: [0x5c]
Successors: [0x2ea]
---
0x187 JUMPDEST
0x188 PUSH2 0x7d
0x18b PUSH2 0x2ea
0x18e JUMP
---
0x187: JUMPDEST 
0x188: V149 = 0x7d
0x18b: V150 = 0x2ea
0x18e: JUMP 0x2ea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0x18f
[0x18f:0x190]
---
Predecessors: []
Successors: []
---
0x18f JUMPDEST
0x190 STOP
---
0x18f: JUMPDEST 
0x190: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x191
[0x191:0x197]
---
Predecessors: [0x67]
Successors: [0x198, 0x19c]
---
0x191 JUMPDEST
0x192 CALLVALUE
0x193 ISZERO
0x194 PUSH2 0x19c
0x197 JUMPI
---
0x191: JUMPDEST 
0x192: V151 = CALLVALUE
0x193: V152 = ISZERO V151
0x194: V153 = 0x19c
0x197: JUMPI 0x19c V152
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x198
[0x198:0x19b]
---
Predecessors: [0x191]
Successors: []
---
0x198 PUSH1 0x0
0x19a DUP1
0x19b REVERT
---
0x198: V154 = 0x0
0x19b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19c
[0x19c:0x1a6]
---
Predecessors: [0x191]
Successors: [0x46e]
---
0x19c JUMPDEST
0x19d PUSH2 0x7d
0x1a0 PUSH1 0x4
0x1a2 CALLDATALOAD
0x1a3 PUSH2 0x46e
0x1a6 JUMP
---
0x19c: JUMPDEST 
0x19d: V155 = 0x7d
0x1a0: V156 = 0x4
0x1a2: V157 = CALLDATALOAD 0x4
0x1a3: V158 = 0x46e
0x1a6: JUMP 0x46e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V157]
Exit stack: [V12, 0x7d, V157]

================================

Block 0x1a7
[0x1a7:0x1a8]
---
Predecessors: []
Successors: []
---
0x1a7 JUMPDEST
0x1a8 STOP
---
0x1a7: JUMPDEST 
0x1a8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a9
[0x1a9:0x1af]
---
Predecessors: [0x72]
Successors: [0x1b0, 0x1b4]
---
0x1a9 JUMPDEST
0x1aa CALLVALUE
0x1ab ISZERO
0x1ac PUSH2 0x1b4
0x1af JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V159 = CALLVALUE
0x1ab: V160 = ISZERO V159
0x1ac: V161 = 0x1b4
0x1af: JUMPI 0x1b4 V160
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b0
[0x1b0:0x1b3]
---
Predecessors: [0x1a9]
Successors: []
---
0x1b0 PUSH1 0x0
0x1b2 DUP1
0x1b3 REVERT
---
0x1b0: V162 = 0x0
0x1b3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b4
[0x1b4:0x1f3]
---
Predecessors: [0x1a9]
Successors: [0x4ee]
---
0x1b4 JUMPDEST
0x1b5 PUSH2 0x7d
0x1b8 PUSH1 0x1
0x1ba PUSH1 0xa0
0x1bc PUSH1 0x2
0x1be EXP
0x1bf SUB
0x1c0 PUSH1 0x4
0x1c2 CALLDATALOAD
0x1c3 DUP2
0x1c4 AND
0x1c5 SWAP1
0x1c6 PUSH1 0x24
0x1c8 CALLDATALOAD
0x1c9 DUP2
0x1ca AND
0x1cb SWAP1
0x1cc PUSH1 0x44
0x1ce CALLDATALOAD
0x1cf SWAP1
0x1d0 PUSH1 0x64
0x1d2 CALLDATALOAD
0x1d3 SWAP1
0x1d4 PUSH1 0x84
0x1d6 CALLDATALOAD
0x1d7 AND
0x1d8 PUSH1 0xff
0x1da PUSH1 0xa4
0x1dc CALLDATALOAD
0x1dd AND
0x1de PUSH1 0xc4
0x1e0 CALLDATALOAD
0x1e1 PUSH1 0xe4
0x1e3 CALLDATALOAD
0x1e4 PUSH2 0x104
0x1e7 CALLDATALOAD
0x1e8 PUSH2 0x124
0x1eb CALLDATALOAD
0x1ec PUSH2 0x144
0x1ef CALLDATALOAD
0x1f0 PUSH2 0x4ee
0x1f3 JUMP
---
0x1b4: JUMPDEST 
0x1b5: V163 = 0x7d
0x1b8: V164 = 0x1
0x1ba: V165 = 0xa0
0x1bc: V166 = 0x2
0x1be: V167 = EXP 0x2 0xa0
0x1bf: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c0: V169 = 0x4
0x1c2: V170 = CALLDATALOAD 0x4
0x1c4: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x1c6: V172 = 0x24
0x1c8: V173 = CALLDATALOAD 0x24
0x1ca: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x1cc: V175 = 0x44
0x1ce: V176 = CALLDATALOAD 0x44
0x1d0: V177 = 0x64
0x1d2: V178 = CALLDATALOAD 0x64
0x1d4: V179 = 0x84
0x1d6: V180 = CALLDATALOAD 0x84
0x1d7: V181 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V182 = 0xff
0x1da: V183 = 0xa4
0x1dc: V184 = CALLDATALOAD 0xa4
0x1dd: V185 = AND V184 0xff
0x1de: V186 = 0xc4
0x1e0: V187 = CALLDATALOAD 0xc4
0x1e1: V188 = 0xe4
0x1e3: V189 = CALLDATALOAD 0xe4
0x1e4: V190 = 0x104
0x1e7: V191 = CALLDATALOAD 0x104
0x1e8: V192 = 0x124
0x1eb: V193 = CALLDATALOAD 0x124
0x1ec: V194 = 0x144
0x1ef: V195 = CALLDATALOAD 0x144
0x1f0: V196 = 0x4ee
0x1f3: JUMP 0x4ee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195]
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195]

================================

Block 0x1f4
[0x1f4:0x1f5]
---
Predecessors: []
Successors: []
---
0x1f4 JUMPDEST
0x1f5 STOP
---
0x1f4: JUMPDEST 
0x1f5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f6
[0x1f6:0x20d]
---
Predecessors: [0x8c]
Successors: [0x20e, 0x212]
---
0x1f6 JUMPDEST
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa SLOAD
0x1fb CALLER
0x1fc PUSH1 0x1
0x1fe PUSH1 0xa0
0x200 PUSH1 0x2
0x202 EXP
0x203 SUB
0x204 SWAP1
0x205 DUP2
0x206 AND
0x207 SWAP2
0x208 AND
0x209 EQ
0x20a PUSH2 0x212
0x20d JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V197 = 0x0
0x1fa: V198 = S[0x0]
0x1fb: V199 = CALLER
0x1fc: V200 = 0x1
0x1fe: V201 = 0xa0
0x200: V202 = 0x2
0x202: V203 = EXP 0x2 0xa0
0x203: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x206: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x208: V206 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0x209: V207 = EQ V206 V205
0x20a: V208 = 0x212
0x20d: JUMPI 0x212 V207
---
Entry stack: [V12, 0x7d, V46]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V46, 0x0]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x1f6]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V209 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, 0x0]

================================

Block 0x212
[0x212:0x24e]
---
Predecessors: [0x1f6]
Successors: [0x24f, 0x253]
---
0x212 JUMPDEST
0x213 POP
0x214 PUSH1 0x1
0x216 SLOAD
0x217 PUSH1 0x1
0x219 PUSH1 0xa0
0x21b PUSH1 0x2
0x21d EXP
0x21e SUB
0x21f AND
0x220 DUP1
0x221 PUSH4 0xd0e30db0
0x226 DUP4
0x227 PUSH1 0x40
0x229 MLOAD
0x22a DUP3
0x22b PUSH4 0xffffffff
0x230 AND
0x231 PUSH1 0xe0
0x233 PUSH1 0x2
0x235 EXP
0x236 MUL
0x237 DUP2
0x238 MSTORE
0x239 PUSH1 0x4
0x23b ADD
0x23c PUSH1 0x0
0x23e PUSH1 0x40
0x240 MLOAD
0x241 DUP1
0x242 DUP4
0x243 SUB
0x244 DUP2
0x245 DUP6
0x246 DUP9
0x247 DUP1
0x248 EXTCODESIZE
0x249 ISZERO
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x212: JUMPDEST 
0x214: V210 = 0x1
0x216: V211 = S[0x1]
0x217: V212 = 0x1
0x219: V213 = 0xa0
0x21b: V214 = 0x2
0x21d: V215 = EXP 0x2 0xa0
0x21e: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21f: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x221: V218 = 0xd0e30db0
0x227: V219 = 0x40
0x229: V220 = M[0x40]
0x22b: V221 = 0xffffffff
0x230: V222 = AND 0xffffffff 0xd0e30db0
0x231: V223 = 0xe0
0x233: V224 = 0x2
0x235: V225 = EXP 0x2 0xe0
0x236: V226 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x238: M[V220] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x239: V227 = 0x4
0x23b: V228 = ADD 0x4 V220
0x23c: V229 = 0x0
0x23e: V230 = 0x40
0x240: V231 = M[0x40]
0x243: V232 = SUB V228 V231
0x248: V233 = EXTCODESIZE V217
0x249: V234 = ISZERO V233
0x24a: V235 = ISZERO V234
0x24b: V236 = 0x253
0x24e: JUMPI 0x253 V235
---
Entry stack: [V12, 0x7d, V46, 0x0]
Stack pops: 2
Stack additions: [S1, V217, V217, 0xd0e30db0, S1, V228, 0x0, V231, V232, V231, S1, V217]
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x212]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V237 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]

================================

Block 0x253
[0x253:0x25f]
---
Predecessors: [0x212]
Successors: [0x260, 0x264]
---
0x253 JUMPDEST
0x254 PUSH2 0x25ee
0x257 GAS
0x258 SUB
0x259 CALL
0x25a ISZERO
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x253: JUMPDEST 
0x254: V238 = 0x25ee
0x257: V239 = GAS
0x258: V240 = SUB V239 0x25ee
0x259: V241 = CALL V240 V217 V46 V231 V232 V231 0x0
0x25a: V242 = ISZERO V241
0x25b: V243 = ISZERO V242
0x25c: V244 = 0x264
0x25f: JUMPI 0x264 V243
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x253]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V245 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]

================================

Block 0x264
[0x264:0x268]
---
Predecessors: [0x253]
Successors: [0x269]
---
0x264 JUMPDEST
0x265 POP
0x266 POP
0x267 POP
0x268 POP
---
0x264: JUMPDEST 
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217]

================================

Block 0x269
[0x269:0x269]
---
Predecessors: [0x264]
Successors: [0x26a]
---
0x269 JUMPDEST
---
0x269: JUMPDEST 
---
Entry stack: [V12, 0x7d, V46, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217]

================================

Block 0x26a
[0x26a:0x26d]
---
Predecessors: [0x269]
Successors: [0x7d]
---
0x26a JUMPDEST
0x26b POP
0x26c POP
0x26d JUMP
---
0x26a: JUMPDEST 
0x26d: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V46, V217]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x26e
[0x26e:0x284]
---
Predecessors: [0xa4]
Successors: [0x285, 0x289]
---
0x26e JUMPDEST
0x26f PUSH1 0x0
0x271 SLOAD
0x272 CALLER
0x273 PUSH1 0x1
0x275 PUSH1 0xa0
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b SWAP1
0x27c DUP2
0x27d AND
0x27e SWAP2
0x27f AND
0x280 EQ
0x281 PUSH2 0x289
0x284 JUMPI
---
0x26e: JUMPDEST 
0x26f: V246 = 0x0
0x271: V247 = S[0x0]
0x272: V248 = CALLER
0x273: V249 = 0x1
0x275: V250 = 0xa0
0x277: V251 = 0x2
0x279: V252 = EXP 0x2 0xa0
0x27a: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27d: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x27f: V255 = AND V247 0xffffffffffffffffffffffffffffffffffffffff
0x280: V256 = EQ V255 V254
0x281: V257 = 0x289
0x284: JUMPI 0x289 V256
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x26e]
Successors: []
---
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
---
0x285: V258 = 0x0
0x288: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x289
[0x289:0x2b7]
---
Predecessors: [0x26e]
Successors: [0x2b8, 0x2bc]
---
0x289 JUMPDEST
0x28a PUSH1 0x0
0x28c SLOAD
0x28d PUSH1 0x1
0x28f PUSH1 0xa0
0x291 PUSH1 0x2
0x293 EXP
0x294 SUB
0x295 AND
0x296 DUP2
0x297 ISZERO
0x298 PUSH2 0x8fc
0x29b MUL
0x29c DUP3
0x29d PUSH1 0x40
0x29f MLOAD
0x2a0 PUSH1 0x0
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 DUP1
0x2a6 DUP4
0x2a7 SUB
0x2a8 DUP2
0x2a9 DUP6
0x2aa DUP9
0x2ab DUP9
0x2ac CALL
0x2ad SWAP4
0x2ae POP
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 ISZERO
0x2b3 ISZERO
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x289: JUMPDEST 
0x28a: V259 = 0x0
0x28c: V260 = S[0x0]
0x28d: V261 = 0x1
0x28f: V262 = 0xa0
0x291: V263 = 0x2
0x293: V264 = EXP 0x2 0xa0
0x294: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x295: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x297: V267 = ISZERO V54
0x298: V268 = 0x8fc
0x29b: V269 = MUL 0x8fc V267
0x29d: V270 = 0x40
0x29f: V271 = M[0x40]
0x2a0: V272 = 0x0
0x2a2: V273 = 0x40
0x2a4: V274 = M[0x40]
0x2a7: V275 = SUB V271 V274
0x2ac: V276 = CALL V269 V266 V54 V274 V275 V274 0x0
0x2b2: V277 = ISZERO V276
0x2b3: V278 = ISZERO V277
0x2b4: V279 = 0x2bc
0x2b7: JUMPI 0x2bc V278
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x289]
Successors: []
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
---
0x2b8: V280 = 0x0
0x2bb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2bc
[0x2bc:0x2bc]
---
Predecessors: [0x289]
Successors: [0x2bd]
---
0x2bc JUMPDEST
---
0x2bc: JUMPDEST 
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2bd
[0x2bd:0x2bd]
---
Predecessors: [0x2bc]
Successors: [0x2be]
---
0x2bd JUMPDEST
---
0x2bd: JUMPDEST 
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2be
[0x2be:0x2c0]
---
Predecessors: [0x2bd]
Successors: [0x7d]
---
0x2be JUMPDEST
0x2bf POP
0x2c0 JUMP
---
0x2be: JUMPDEST 
0x2c0: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c1
[0x2c1:0x2d7]
---
Predecessors: [0xbc]
Successors: [0x2d8, 0x2dc]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x0
0x2c4 SLOAD
0x2c5 CALLER
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce SWAP1
0x2cf DUP2
0x2d0 AND
0x2d1 SWAP2
0x2d2 AND
0x2d3 EQ
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V281 = 0x0
0x2c4: V282 = S[0x0]
0x2c5: V283 = CALLER
0x2c6: V284 = 0x1
0x2c8: V285 = 0xa0
0x2ca: V286 = 0x2
0x2cc: V287 = EXP 0x2 0xa0
0x2cd: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x2d2: V290 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V291 = EQ V290 V289
0x2d4: V292 = 0x2dc
0x2d7: JUMPI 0x2dc V291
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2c1]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V293 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2dc
[0x2dc:0x2e9]
---
Predecessors: [0x2c1]
Successors: []
---
0x2dc JUMPDEST
0x2dd PUSH1 0x0
0x2df SLOAD
0x2e0 PUSH1 0x1
0x2e2 PUSH1 0xa0
0x2e4 PUSH1 0x2
0x2e6 EXP
0x2e7 SUB
0x2e8 AND
0x2e9 SELFDESTRUCT
---
0x2dc: JUMPDEST 
0x2dd: V294 = 0x0
0x2df: V295 = S[0x0]
0x2e0: V296 = 0x1
0x2e2: V297 = 0xa0
0x2e4: V298 = 0x2
0x2e6: V299 = EXP 0x2 0xa0
0x2e7: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e8: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x2e9: SELFDESTRUCT V301
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2ea
[0x2ea:0x2ea]
---
Predecessors: [0x187]
Successors: [0x2eb]
---
0x2ea JUMPDEST
---
0x2ea: JUMPDEST 
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2eb
[0x2eb:0x2ec]
---
Predecessors: [0x2ea]
Successors: [0x7d]
---
0x2eb JUMPDEST
0x2ec JUMP
---
0x2eb: JUMPDEST 
0x2ec: JUMP 0x7d
---
Entry stack: [V12, 0x7d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ed
[0x2ed:0x3a3]
---
Predecessors: [0xd1]
Successors: [0x3a4, 0x3a8]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x1
0x2f0 SLOAD
0x2f1 PUSH1 0x0
0x2f3 SWAP1
0x2f4 PUSH1 0x1
0x2f6 PUSH1 0xa0
0x2f8 PUSH1 0x2
0x2fa EXP
0x2fb SUB
0x2fc AND
0x2fd DUP1
0x2fe PUSH4 0x6c86888b
0x303 DUP15
0x304 DUP15
0x305 DUP15
0x306 DUP15
0x307 DUP15
0x308 DUP15
0x309 DUP15
0x30a DUP15
0x30b DUP15
0x30c DUP15
0x30d DUP15
0x30e ADDRESS
0x30f DUP16
0x310 PUSH1 0x40
0x312 MLOAD
0x313 PUSH1 0x20
0x315 ADD
0x316 MSTORE
0x317 PUSH1 0x40
0x319 MLOAD
0x31a PUSH1 0xe0
0x31c PUSH1 0x2
0x31e EXP
0x31f PUSH4 0xffffffff
0x324 DUP16
0x325 AND
0x326 MUL
0x327 DUP2
0x328 MSTORE
0x329 PUSH1 0x1
0x32b PUSH1 0xa0
0x32d PUSH1 0x2
0x32f EXP
0x330 SUB
0x331 SWAP13
0x332 DUP14
0x333 AND
0x334 PUSH1 0x4
0x336 DUP3
0x337 ADD
0x338 MSTORE
0x339 PUSH1 0x24
0x33b DUP2
0x33c ADD
0x33d SWAP12
0x33e SWAP1
0x33f SWAP12
0x340 MSTORE
0x341 SWAP9
0x342 DUP12
0x343 AND
0x344 PUSH1 0x44
0x346 DUP12
0x347 ADD
0x348 MSTORE
0x349 PUSH1 0x64
0x34b DUP11
0x34c ADD
0x34d SWAP8
0x34e SWAP1
0x34f SWAP8
0x350 MSTORE
0x351 PUSH1 0x84
0x353 DUP10
0x354 ADD
0x355 SWAP6
0x356 SWAP1
0x357 SWAP6
0x358 MSTORE
0x359 PUSH1 0xa4
0x35b DUP9
0x35c ADD
0x35d SWAP4
0x35e SWAP1
0x35f SWAP4
0x360 MSTORE
0x361 SWAP1
0x362 DUP8
0x363 AND
0x364 PUSH1 0xc4
0x366 DUP8
0x367 ADD
0x368 MSTORE
0x369 PUSH1 0xff
0x36b AND
0x36c PUSH1 0xe4
0x36e DUP7
0x36f ADD
0x370 MSTORE
0x371 PUSH2 0x104
0x374 DUP6
0x375 ADD
0x376 MSTORE
0x377 PUSH2 0x124
0x37a DUP5
0x37b ADD
0x37c MSTORE
0x37d PUSH2 0x144
0x380 DUP4
0x381 ADD
0x382 MSTORE
0x383 SWAP1
0x384 SWAP2
0x385 AND
0x386 PUSH2 0x164
0x389 DUP3
0x38a ADD
0x38b MSTORE
0x38c PUSH2 0x184
0x38f ADD
0x390 PUSH1 0x20
0x392 PUSH1 0x40
0x394 MLOAD
0x395 DUP1
0x396 DUP4
0x397 SUB
0x398 DUP2
0x399 PUSH1 0x0
0x39b DUP8
0x39c DUP1
0x39d EXTCODESIZE
0x39e ISZERO
0x39f ISZERO
0x3a0 PUSH2 0x3a8
0x3a3 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V302 = 0x1
0x2f0: V303 = S[0x1]
0x2f1: V304 = 0x0
0x2f4: V305 = 0x1
0x2f6: V306 = 0xa0
0x2f8: V307 = 0x2
0x2fa: V308 = EXP 0x2 0xa0
0x2fb: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fc: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x2fe: V311 = 0x6c86888b
0x30e: V312 = ADDRESS
0x310: V313 = 0x40
0x312: V314 = M[0x40]
0x313: V315 = 0x20
0x315: V316 = ADD 0x20 V314
0x316: M[V316] = 0x0
0x317: V317 = 0x40
0x319: V318 = M[0x40]
0x31a: V319 = 0xe0
0x31c: V320 = 0x2
0x31e: V321 = EXP 0x2 0xe0
0x31f: V322 = 0xffffffff
0x325: V323 = AND 0x6c86888b 0xffffffff
0x326: V324 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x328: M[V318] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x329: V325 = 0x1
0x32b: V326 = 0xa0
0x32d: V327 = 0x2
0x32f: V328 = EXP 0x2 0xa0
0x330: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x333: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x334: V331 = 0x4
0x337: V332 = ADD V318 0x4
0x338: M[V332] = V330
0x339: V333 = 0x24
0x33c: V334 = ADD V318 0x24
0x340: M[V334] = V76
0x343: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x344: V336 = 0x44
0x347: V337 = ADD V318 0x44
0x348: M[V337] = V335
0x349: V338 = 0x64
0x34c: V339 = ADD V318 0x64
0x350: M[V339] = V81
0x351: V340 = 0x84
0x354: V341 = ADD V318 0x84
0x358: M[V341] = V83
0x359: V342 = 0xa4
0x35c: V343 = ADD V318 0xa4
0x360: M[V343] = V85
0x363: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x364: V345 = 0xc4
0x367: V346 = ADD V318 0xc4
0x368: M[V346] = V344
0x369: V347 = 0xff
0x36b: V348 = AND 0xff V92
0x36c: V349 = 0xe4
0x36f: V350 = ADD V318 0xe4
0x370: M[V350] = V348
0x371: V351 = 0x104
0x375: V352 = ADD V318 0x104
0x376: M[V352] = V94
0x377: V353 = 0x124
0x37b: V354 = ADD V318 0x124
0x37c: M[V354] = V96
0x37d: V355 = 0x144
0x381: V356 = ADD V318 0x144
0x382: M[V356] = V98
0x385: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x386: V358 = 0x164
0x38a: V359 = ADD V318 0x164
0x38b: M[V359] = V357
0x38c: V360 = 0x184
0x38f: V361 = ADD 0x184 V318
0x390: V362 = 0x20
0x392: V363 = 0x40
0x394: V364 = M[0x40]
0x397: V365 = SUB V361 V364
0x399: V366 = 0x0
0x39d: V367 = EXTCODESIZE V310
0x39e: V368 = ISZERO V367
0x39f: V369 = ISZERO V368
0x3a0: V370 = 0x3a8
0x3a3: JUMPI 0x3a8 V369
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]

================================

Block 0x3a4
[0x3a4:0x3a7]
---
Predecessors: [0x2ed]
Successors: []
---
0x3a4 PUSH1 0x0
0x3a6 DUP1
0x3a7 REVERT
---
0x3a4: V371 = 0x0
0x3a7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]

================================

Block 0x3a8
[0x3a8:0x3b4]
---
Predecessors: [0x2ed]
Successors: [0x3b5, 0x3b9]
---
0x3a8 JUMPDEST
0x3a9 PUSH2 0x2c6
0x3ac GAS
0x3ad SUB
0x3ae CALL
0x3af ISZERO
0x3b0 ISZERO
0x3b1 PUSH2 0x3b9
0x3b4 JUMPI
---
0x3a8: JUMPDEST 
0x3a9: V372 = 0x2c6
0x3ac: V373 = GAS
0x3ad: V374 = SUB V373 0x2c6
0x3ae: V375 = CALL V374 V310 0x0 V364 V365 V364 0x20
0x3af: V376 = ISZERO V375
0x3b0: V377 = ISZERO V376
0x3b1: V378 = 0x3b9
0x3b4: JUMPI 0x3b9 V377
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]

================================

Block 0x3b5
[0x3b5:0x3b8]
---
Predecessors: [0x3a8]
Successors: []
---
0x3b5 PUSH1 0x0
0x3b7 DUP1
0x3b8 REVERT
---
0x3b5: V379 = 0x0
0x3b8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]

================================

Block 0x3b9
[0x3b9:0x3c4]
---
Predecessors: [0x3a8]
Successors: [0x3c5]
---
0x3b9 JUMPDEST
0x3ba POP
0x3bb POP
0x3bc POP
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 DUP1
0x3c1 MLOAD
0x3c2 SWAP3
0x3c3 POP
0x3c4 POP
---
0x3b9: JUMPDEST 
0x3bd: V380 = 0x40
0x3bf: V381 = M[0x40]
0x3c1: V382 = M[V381]
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]
Stack pops: 5
Stack additions: [V382, S3]
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, V382, V310]

================================

Block 0x3c5
[0x3c5:0x3d4]
---
Predecessors: [0x3b9]
Successors: [0x113]
---
0x3c5 JUMPDEST
0x3c6 POP
0x3c7 SWAP12
0x3c8 SWAP11
0x3c9 POP
0x3ca POP
0x3cb POP
0x3cc POP
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 POP
0x3d4 JUMP
---
0x3c5: JUMPDEST 
0x3d4: JUMP 0x113
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, V382, V310]
Stack pops: 14
Stack additions: [S1]
Exit stack: [V12, V382]

================================

Block 0x3d5
[0x3d5:0x434]
---
Predecessors: [0x132]
Successors: [0x435, 0x439]
---
0x3d5 JUMPDEST
0x3d6 PUSH1 0x1
0x3d8 SLOAD
0x3d9 PUSH1 0x0
0x3db SWAP1
0x3dc PUSH1 0x1
0x3de PUSH1 0xa0
0x3e0 PUSH1 0x2
0x3e2 EXP
0x3e3 SUB
0x3e4 AND
0x3e5 DUP1
0x3e6 PUSH4 0xf7888aec
0x3eb DUP5
0x3ec ADDRESS
0x3ed DUP6
0x3ee PUSH1 0x40
0x3f0 MLOAD
0x3f1 PUSH1 0x20
0x3f3 ADD
0x3f4 MSTORE
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 PUSH1 0xe0
0x3fa PUSH1 0x2
0x3fc EXP
0x3fd PUSH4 0xffffffff
0x402 DUP6
0x403 AND
0x404 MUL
0x405 DUP2
0x406 MSTORE
0x407 PUSH1 0x1
0x409 PUSH1 0xa0
0x40b PUSH1 0x2
0x40d EXP
0x40e SUB
0x40f SWAP3
0x410 DUP4
0x411 AND
0x412 PUSH1 0x4
0x414 DUP3
0x415 ADD
0x416 MSTORE
0x417 SWAP2
0x418 AND
0x419 PUSH1 0x24
0x41b DUP3
0x41c ADD
0x41d MSTORE
0x41e PUSH1 0x44
0x420 ADD
0x421 PUSH1 0x20
0x423 PUSH1 0x40
0x425 MLOAD
0x426 DUP1
0x427 DUP4
0x428 SUB
0x429 DUP2
0x42a PUSH1 0x0
0x42c DUP8
0x42d DUP1
0x42e EXTCODESIZE
0x42f ISZERO
0x430 ISZERO
0x431 PUSH2 0x439
0x434 JUMPI
---
0x3d5: JUMPDEST 
0x3d6: V383 = 0x1
0x3d8: V384 = S[0x1]
0x3d9: V385 = 0x0
0x3dc: V386 = 0x1
0x3de: V387 = 0xa0
0x3e0: V388 = 0x2
0x3e2: V389 = EXP 0x2 0xa0
0x3e3: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e4: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x3e6: V392 = 0xf7888aec
0x3ec: V393 = ADDRESS
0x3ee: V394 = 0x40
0x3f0: V395 = M[0x40]
0x3f1: V396 = 0x20
0x3f3: V397 = ADD 0x20 V395
0x3f4: M[V397] = 0x0
0x3f5: V398 = 0x40
0x3f7: V399 = M[0x40]
0x3f8: V400 = 0xe0
0x3fa: V401 = 0x2
0x3fc: V402 = EXP 0x2 0xe0
0x3fd: V403 = 0xffffffff
0x403: V404 = AND 0xf7888aec 0xffffffff
0x404: V405 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x406: M[V399] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x407: V406 = 0x1
0x409: V407 = 0xa0
0x40b: V408 = 0x2
0x40d: V409 = EXP 0x2 0xa0
0x40e: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x411: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x412: V412 = 0x4
0x415: V413 = ADD V399 0x4
0x416: M[V413] = V411
0x418: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x419: V415 = 0x24
0x41c: V416 = ADD V399 0x24
0x41d: M[V416] = V414
0x41e: V417 = 0x44
0x420: V418 = ADD 0x44 V399
0x421: V419 = 0x20
0x423: V420 = 0x40
0x425: V421 = M[0x40]
0x428: V422 = SUB V418 V421
0x42a: V423 = 0x0
0x42e: V424 = EXTCODESIZE V391
0x42f: V425 = ISZERO V424
0x430: V426 = ISZERO V425
0x431: V427 = 0x439
0x434: JUMPI 0x439 V426
---
Entry stack: [V12, 0x146, V121]
Stack pops: 1
Stack additions: [S0, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]

================================

Block 0x435
[0x435:0x438]
---
Predecessors: [0x3d5]
Successors: []
---
0x435 PUSH1 0x0
0x437 DUP1
0x438 REVERT
---
0x435: V428 = 0x0
0x438: REVERT 0x0 0x0
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]

================================

Block 0x439
[0x439:0x445]
---
Predecessors: [0x3d5]
Successors: [0x446, 0x44a]
---
0x439 JUMPDEST
0x43a PUSH2 0x2c6
0x43d GAS
0x43e SUB
0x43f CALL
0x440 ISZERO
0x441 ISZERO
0x442 PUSH2 0x44a
0x445 JUMPI
---
0x439: JUMPDEST 
0x43a: V429 = 0x2c6
0x43d: V430 = GAS
0x43e: V431 = SUB V430 0x2c6
0x43f: V432 = CALL V431 V391 0x0 V421 V422 V421 0x20
0x440: V433 = ISZERO V432
0x441: V434 = ISZERO V433
0x442: V435 = 0x44a
0x445: JUMPI 0x44a V434
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x439]
Successors: []
---
0x446 PUSH1 0x0
0x448 DUP1
0x449 REVERT
---
0x446: V436 = 0x0
0x449: REVERT 0x0 0x0
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]

================================

Block 0x44a
[0x44a:0x455]
---
Predecessors: [0x439]
Successors: [0x456]
---
0x44a JUMPDEST
0x44b POP
0x44c POP
0x44d POP
0x44e PUSH1 0x40
0x450 MLOAD
0x451 DUP1
0x452 MLOAD
0x453 SWAP3
0x454 POP
0x455 POP
---
0x44a: JUMPDEST 
0x44e: V437 = 0x40
0x450: V438 = M[0x40]
0x452: V439 = M[V438]
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]
Stack pops: 5
Stack additions: [V439, S3]
Exit stack: [V12, 0x146, V121, V439, V391]

================================

Block 0x456
[0x456:0x45b]
---
Predecessors: [0x44a]
Successors: [0x146]
---
0x456 JUMPDEST
0x457 POP
0x458 SWAP2
0x459 SWAP1
0x45a POP
0x45b JUMP
---
0x456: JUMPDEST 
0x45b: JUMP 0x146
---
Entry stack: [V12, 0x146, V121, V439, V391]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V439]

================================

Block 0x45c
[0x45c:0x46a]
---
Predecessors: [0x163]
Successors: [0x16b]
---
0x45c JUMPDEST
0x45d PUSH1 0x0
0x45f SLOAD
0x460 PUSH1 0x1
0x462 PUSH1 0xa0
0x464 PUSH1 0x2
0x466 EXP
0x467 SUB
0x468 AND
0x469 DUP2
0x46a JUMP
---
0x45c: JUMPDEST 
0x45d: V440 = 0x0
0x45f: V441 = S[0x0]
0x460: V442 = 0x1
0x462: V443 = 0xa0
0x464: V444 = 0x2
0x466: V445 = EXP 0x2 0xa0
0x467: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x468: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x46a: JUMP 0x16b
---
Entry stack: [V12, 0x16b]
Stack pops: 1
Stack additions: [S0, V447]
Exit stack: [V12, 0x16b, V447]

================================

Block 0x46b
[0x46b:0x46b]
---
Predecessors: []
Successors: [0x46c]
---
0x46b JUMPDEST
---
0x46b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x46c
[0x46c:0x46d]
---
Predecessors: [0x46b]
Successors: []
Has unresolved jump.
---
0x46c JUMPDEST
0x46d JUMP
---
0x46c: JUMPDEST 
0x46d: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x46e
[0x46e:0x485]
---
Predecessors: [0x19c]
Successors: [0x486, 0x48a]
---
0x46e JUMPDEST
0x46f PUSH1 0x0
0x471 DUP1
0x472 SLOAD
0x473 CALLER
0x474 PUSH1 0x1
0x476 PUSH1 0xa0
0x478 PUSH1 0x2
0x47a EXP
0x47b SUB
0x47c SWAP1
0x47d DUP2
0x47e AND
0x47f SWAP2
0x480 AND
0x481 EQ
0x482 PUSH2 0x48a
0x485 JUMPI
---
0x46e: JUMPDEST 
0x46f: V448 = 0x0
0x472: V449 = S[0x0]
0x473: V450 = CALLER
0x474: V451 = 0x1
0x476: V452 = 0xa0
0x478: V453 = 0x2
0x47a: V454 = EXP 0x2 0xa0
0x47b: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x480: V457 = AND V449 0xffffffffffffffffffffffffffffffffffffffff
0x481: V458 = EQ V457 V456
0x482: V459 = 0x48a
0x485: JUMPI 0x48a V458
---
Entry stack: [V12, 0x7d, V157]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V157, 0x0]

================================

Block 0x486
[0x486:0x489]
---
Predecessors: [0x46e]
Successors: []
---
0x486 PUSH1 0x0
0x488 DUP1
0x489 REVERT
---
0x486: V460 = 0x0
0x489: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V157, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V157, 0x0]

================================

Block 0x48a
[0x48a:0x4cf]
---
Predecessors: [0x46e]
Successors: [0x4d0, 0x4d4]
---
0x48a JUMPDEST
0x48b POP
0x48c PUSH1 0x1
0x48e SLOAD
0x48f PUSH1 0x1
0x491 PUSH1 0xa0
0x493 PUSH1 0x2
0x495 EXP
0x496 SUB
0x497 AND
0x498 DUP1
0x499 PUSH4 0x2e1a7d4d
0x49e DUP4
0x49f PUSH1 0x40
0x4a1 MLOAD
0x4a2 PUSH1 0xe0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 PUSH4 0xffffffff
0x4ac DUP5
0x4ad AND
0x4ae MUL
0x4af DUP2
0x4b0 MSTORE
0x4b1 PUSH1 0x4
0x4b3 DUP2
0x4b4 ADD
0x4b5 SWAP2
0x4b6 SWAP1
0x4b7 SWAP2
0x4b8 MSTORE
0x4b9 PUSH1 0x24
0x4bb ADD
0x4bc PUSH1 0x0
0x4be PUSH1 0x40
0x4c0 MLOAD
0x4c1 DUP1
0x4c2 DUP4
0x4c3 SUB
0x4c4 DUP2
0x4c5 PUSH1 0x0
0x4c7 DUP8
0x4c8 DUP1
0x4c9 EXTCODESIZE
0x4ca ISZERO
0x4cb ISZERO
0x4cc PUSH2 0x4d4
0x4cf JUMPI
---
0x48a: JUMPDEST 
0x48c: V461 = 0x1
0x48e: V462 = S[0x1]
0x48f: V463 = 0x1
0x491: V464 = 0xa0
0x493: V465 = 0x2
0x495: V466 = EXP 0x2 0xa0
0x496: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x497: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x499: V469 = 0x2e1a7d4d
0x49f: V470 = 0x40
0x4a1: V471 = M[0x40]
0x4a2: V472 = 0xe0
0x4a4: V473 = 0x2
0x4a6: V474 = EXP 0x2 0xe0
0x4a7: V475 = 0xffffffff
0x4ad: V476 = AND 0x2e1a7d4d 0xffffffff
0x4ae: V477 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x4b0: M[V471] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x4b1: V478 = 0x4
0x4b4: V479 = ADD V471 0x4
0x4b8: M[V479] = V157
0x4b9: V480 = 0x24
0x4bb: V481 = ADD 0x24 V471
0x4bc: V482 = 0x0
0x4be: V483 = 0x40
0x4c0: V484 = M[0x40]
0x4c3: V485 = SUB V481 V484
0x4c5: V486 = 0x0
0x4c9: V487 = EXTCODESIZE V468
0x4ca: V488 = ISZERO V487
0x4cb: V489 = ISZERO V488
0x4cc: V490 = 0x4d4
0x4cf: JUMPI 0x4d4 V489
---
Entry stack: [V12, 0x7d, V157, 0x0]
Stack pops: 2
Stack additions: [S1, V468, V468, 0x2e1a7d4d, V481, 0x0, V484, V485, V484, 0x0, V468]
Exit stack: [V12, 0x7d, V157, V468, V468, 0x2e1a7d4d, V481, 0x0, V484, V485, V484, 0x0, V468]

================================

Block 0x4d0
[0x4d0:0x4d3]
---
Predecessors: [0x48a]
Successors: []
---
0x4d0 PUSH1 0x0
0x4d2 DUP1
0x4d3 REVERT
---
0x4d0: V491 = 0x0
0x4d3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V157, V468, V468, 0x2e1a7d4d, V481, 0x0, V484, V485, V484, 0x0, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V157, V468, V468, 0x2e1a7d4d, V481, 0x0, V484, V485, V484, 0x0, V468]

================================

Block 0x4d4
[0x4d4:0x4e0]
---
Predecessors: [0x48a]
Successors: [0x4e1, 0x4e5]
---
0x4d4 JUMPDEST
0x4d5 PUSH2 0x2c6
0x4d8 GAS
0x4d9 SUB
0x4da CALL
0x4db ISZERO
0x4dc ISZERO
0x4dd PUSH2 0x4e5
0x4e0 JUMPI
---
0x4d4: JUMPDEST 
0x4d5: V492 = 0x2c6
0x4d8: V493 = GAS
0x4d9: V494 = SUB V493 0x2c6
0x4da: V495 = CALL V494 V468 0x0 V484 V485 V484 0x0
0x4db: V496 = ISZERO V495
0x4dc: V497 = ISZERO V496
0x4dd: V498 = 0x4e5
0x4e0: JUMPI 0x4e5 V497
---
Entry stack: [V12, 0x7d, V157, V468, V468, 0x2e1a7d4d, V481, 0x0, V484, V485, V484, 0x0, V468]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V157, V468, V468, 0x2e1a7d4d, V481]

================================

Block 0x4e1
[0x4e1:0x4e4]
---
Predecessors: [0x4d4]
Successors: []
---
0x4e1 PUSH1 0x0
0x4e3 DUP1
0x4e4 REVERT
---
0x4e1: V499 = 0x0
0x4e4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V157, V468, V468, 0x2e1a7d4d, V481]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V157, V468, V468, 0x2e1a7d4d, V481]

================================

Block 0x4e5
[0x4e5:0x4e8]
---
Predecessors: [0x4d4]
Successors: [0x4e9]
---
0x4e5 JUMPDEST
0x4e6 POP
0x4e7 POP
0x4e8 POP
---
0x4e5: JUMPDEST 
---
Entry stack: [V12, 0x7d, V157, V468, V468, 0x2e1a7d4d, V481]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V157, V468]

================================

Block 0x4e9
[0x4e9:0x4e9]
---
Predecessors: [0x4e5]
Successors: [0x4ea]
---
0x4e9 JUMPDEST
---
0x4e9: JUMPDEST 
---
Entry stack: [V12, 0x7d, V157, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V157, V468]

================================

Block 0x4ea
[0x4ea:0x4ed]
---
Predecessors: [0x4e9]
Successors: [0x7d]
---
0x4ea JUMPDEST
0x4eb POP
0x4ec POP
0x4ed JUMP
---
0x4ea: JUMPDEST 
0x4ed: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V157, V468]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ee
[0x4ee:0x505]
---
Predecessors: [0x1b4]
Successors: [0x506, 0x50a]
---
0x4ee JUMPDEST
0x4ef PUSH1 0x0
0x4f1 DUP1
0x4f2 SLOAD
0x4f3 CALLER
0x4f4 PUSH1 0x1
0x4f6 PUSH1 0xa0
0x4f8 PUSH1 0x2
0x4fa EXP
0x4fb SUB
0x4fc SWAP1
0x4fd DUP2
0x4fe AND
0x4ff SWAP2
0x500 AND
0x501 EQ
0x502 PUSH2 0x50a
0x505 JUMPI
---
0x4ee: JUMPDEST 
0x4ef: V500 = 0x0
0x4f2: V501 = S[0x0]
0x4f3: V502 = CALLER
0x4f4: V503 = 0x1
0x4f6: V504 = 0xa0
0x4f8: V505 = 0x2
0x4fa: V506 = EXP 0x2 0xa0
0x4fb: V507 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fe: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x500: V509 = AND V501 0xffffffffffffffffffffffffffffffffffffffff
0x501: V510 = EQ V509 V508
0x502: V511 = 0x50a
0x505: JUMPI 0x50a V510
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, 0x0]

================================

Block 0x506
[0x506:0x509]
---
Predecessors: [0x4ee]
Successors: []
---
0x506 PUSH1 0x0
0x508 DUP1
0x509 REVERT
---
0x506: V512 = 0x0
0x509: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, 0x0]

================================

Block 0x50a
[0x50a:0x5bf]
---
Predecessors: [0x4ee]
Successors: [0x5c0, 0x5c4]
---
0x50a JUMPDEST
0x50b POP
0x50c PUSH1 0x1
0x50e SLOAD
0x50f PUSH1 0x1
0x511 PUSH1 0xa0
0x513 PUSH1 0x2
0x515 EXP
0x516 SUB
0x517 AND
0x518 DUP1
0x519 PUSH4 0x6c86888b
0x51e DUP14
0x51f DUP13
0x520 DUP15
0x521 DUP14
0x522 DUP10
0x523 DUP10
0x524 DUP16
0x525 DUP16
0x526 DUP16
0x527 DUP16
0x528 DUP14
0x529 ADDRESS
0x52a PUSH1 0x0
0x52c PUSH1 0x40
0x52e MLOAD
0x52f PUSH1 0x20
0x531 ADD
0x532 MSTORE
0x533 PUSH1 0x40
0x535 MLOAD
0x536 PUSH1 0xe0
0x538 PUSH1 0x2
0x53a EXP
0x53b PUSH4 0xffffffff
0x540 DUP16
0x541 AND
0x542 MUL
0x543 DUP2
0x544 MSTORE
0x545 PUSH1 0x1
0x547 PUSH1 0xa0
0x549 PUSH1 0x2
0x54b EXP
0x54c SUB
0x54d SWAP13
0x54e DUP14
0x54f AND
0x550 PUSH1 0x4
0x552 DUP3
0x553 ADD
0x554 MSTORE
0x555 PUSH1 0x24
0x557 DUP2
0x558 ADD
0x559 SWAP12
0x55a SWAP1
0x55b SWAP12
0x55c MSTORE
0x55d SWAP9
0x55e DUP12
0x55f AND
0x560 PUSH1 0x44
0x562 DUP12
0x563 ADD
0x564 MSTORE
0x565 PUSH1 0x64
0x567 DUP11
0x568 ADD
0x569 SWAP8
0x56a SWAP1
0x56b SWAP8
0x56c MSTORE
0x56d PUSH1 0x84
0x56f DUP10
0x570 ADD
0x571 SWAP6
0x572 SWAP1
0x573 SWAP6
0x574 MSTORE
0x575 PUSH1 0xa4
0x577 DUP9
0x578 ADD
0x579 SWAP4
0x57a SWAP1
0x57b SWAP4
0x57c MSTORE
0x57d SWAP1
0x57e DUP8
0x57f AND
0x580 PUSH1 0xc4
0x582 DUP8
0x583 ADD
0x584 MSTORE
0x585 PUSH1 0xff
0x587 AND
0x588 PUSH1 0xe4
0x58a DUP7
0x58b ADD
0x58c MSTORE
0x58d PUSH2 0x104
0x590 DUP6
0x591 ADD
0x592 MSTORE
0x593 PUSH2 0x124
0x596 DUP5
0x597 ADD
0x598 MSTORE
0x599 PUSH2 0x144
0x59c DUP4
0x59d ADD
0x59e MSTORE
0x59f SWAP1
0x5a0 SWAP2
0x5a1 AND
0x5a2 PUSH2 0x164
0x5a5 DUP3
0x5a6 ADD
0x5a7 MSTORE
0x5a8 PUSH2 0x184
0x5ab ADD
0x5ac PUSH1 0x20
0x5ae PUSH1 0x40
0x5b0 MLOAD
0x5b1 DUP1
0x5b2 DUP4
0x5b3 SUB
0x5b4 DUP2
0x5b5 PUSH1 0x0
0x5b7 DUP8
0x5b8 DUP1
0x5b9 EXTCODESIZE
0x5ba ISZERO
0x5bb ISZERO
0x5bc PUSH2 0x5c4
0x5bf JUMPI
---
0x50a: JUMPDEST 
0x50c: V513 = 0x1
0x50e: V514 = S[0x1]
0x50f: V515 = 0x1
0x511: V516 = 0xa0
0x513: V517 = 0x2
0x515: V518 = EXP 0x2 0xa0
0x516: V519 = SUB 0x10000000000000000000000000000000000000000 0x1
0x517: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x519: V521 = 0x6c86888b
0x529: V522 = ADDRESS
0x52a: V523 = 0x0
0x52c: V524 = 0x40
0x52e: V525 = M[0x40]
0x52f: V526 = 0x20
0x531: V527 = ADD 0x20 V525
0x532: M[V527] = 0x0
0x533: V528 = 0x40
0x535: V529 = M[0x40]
0x536: V530 = 0xe0
0x538: V531 = 0x2
0x53a: V532 = EXP 0x2 0xe0
0x53b: V533 = 0xffffffff
0x541: V534 = AND 0x6c86888b 0xffffffff
0x542: V535 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x544: M[V529] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x545: V536 = 0x1
0x547: V537 = 0xa0
0x549: V538 = 0x2
0x54b: V539 = EXP 0x2 0xa0
0x54c: V540 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54f: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x550: V542 = 0x4
0x553: V543 = ADD V529 0x4
0x554: M[V543] = V541
0x555: V544 = 0x24
0x558: V545 = ADD V529 0x24
0x55c: M[V545] = V176
0x55f: V546 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x560: V547 = 0x44
0x563: V548 = ADD V529 0x44
0x564: M[V548] = V546
0x565: V549 = 0x64
0x568: V550 = ADD V529 0x64
0x56c: M[V550] = V178
0x56d: V551 = 0x84
0x570: V552 = ADD V529 0x84
0x574: M[V552] = V191
0x575: V553 = 0xa4
0x578: V554 = ADD V529 0xa4
0x57c: M[V554] = V193
0x57f: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x580: V556 = 0xc4
0x583: V557 = ADD V529 0xc4
0x584: M[V557] = V555
0x585: V558 = 0xff
0x587: V559 = AND 0xff V185
0x588: V560 = 0xe4
0x58b: V561 = ADD V529 0xe4
0x58c: M[V561] = V559
0x58d: V562 = 0x104
0x591: V563 = ADD V529 0x104
0x592: M[V563] = V187
0x593: V564 = 0x124
0x597: V565 = ADD V529 0x124
0x598: M[V565] = V189
0x599: V566 = 0x144
0x59d: V567 = ADD V529 0x144
0x59e: M[V567] = V195
0x5a1: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x5a2: V569 = 0x164
0x5a6: V570 = ADD V529 0x164
0x5a7: M[V570] = V568
0x5a8: V571 = 0x184
0x5ab: V572 = ADD 0x184 V529
0x5ac: V573 = 0x20
0x5ae: V574 = 0x40
0x5b0: V575 = M[0x40]
0x5b3: V576 = SUB V572 V575
0x5b5: V577 = 0x0
0x5b9: V578 = EXTCODESIZE V520
0x5ba: V579 = ISZERO V578
0x5bb: V580 = ISZERO V579
0x5bc: V581 = 0x5c4
0x5bf: JUMPI 0x5c4 V580
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V520, V520, 0x6c86888b, V572, 0x20, V575, V576, V575, 0x0, V520]
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V520, 0x6c86888b, V572, 0x20, V575, V576, V575, 0x0, V520]

================================

Block 0x5c0
[0x5c0:0x5c3]
---
Predecessors: [0x50a]
Successors: []
---
0x5c0 PUSH1 0x0
0x5c2 DUP1
0x5c3 REVERT
---
0x5c0: V582 = 0x0
0x5c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V520, 0x6c86888b, V572, 0x20, V575, V576, V575, 0x0, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V520, 0x6c86888b, V572, 0x20, V575, V576, V575, 0x0, V520]

================================

Block 0x5c4
[0x5c4:0x5d0]
---
Predecessors: [0x50a]
Successors: [0x5d1, 0x5d5]
---
0x5c4 JUMPDEST
0x5c5 PUSH2 0x2c6
0x5c8 GAS
0x5c9 SUB
0x5ca CALL
0x5cb ISZERO
0x5cc ISZERO
0x5cd PUSH2 0x5d5
0x5d0 JUMPI
---
0x5c4: JUMPDEST 
0x5c5: V583 = 0x2c6
0x5c8: V584 = GAS
0x5c9: V585 = SUB V584 0x2c6
0x5ca: V586 = CALL V585 V520 0x0 V575 V576 V575 0x20
0x5cb: V587 = ISZERO V586
0x5cc: V588 = ISZERO V587
0x5cd: V589 = 0x5d5
0x5d0: JUMPI 0x5d5 V588
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V520, 0x6c86888b, V572, 0x20, V575, V576, V575, 0x0, V520]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V520, 0x6c86888b, V572]

================================

Block 0x5d1
[0x5d1:0x5d4]
---
Predecessors: [0x5c4]
Successors: []
---
0x5d1 PUSH1 0x0
0x5d3 DUP1
0x5d4 REVERT
---
0x5d1: V590 = 0x0
0x5d4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V520, 0x6c86888b, V572]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V520, 0x6c86888b, V572]

================================

Block 0x5d5
[0x5d5:0x5e4]
---
Predecessors: [0x5c4]
Successors: [0x5e5, 0x6df]
---
0x5d5 JUMPDEST
0x5d6 POP
0x5d7 POP
0x5d8 POP
0x5d9 PUSH1 0x40
0x5db MLOAD
0x5dc DUP1
0x5dd MLOAD
0x5de SWAP1
0x5df POP
0x5e0 ISZERO
0x5e1 PUSH2 0x6df
0x5e4 JUMPI
---
0x5d5: JUMPDEST 
0x5d9: V591 = 0x40
0x5db: V592 = M[0x40]
0x5dd: V593 = M[V592]
0x5e0: V594 = ISZERO V593
0x5e1: V595 = 0x6df
0x5e4: JUMPI 0x6df V594
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V520, 0x6c86888b, V572]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520]

================================

Block 0x5e5
[0x5e5:0x6c1]
---
Predecessors: [0x5d5]
Successors: [0x6c2, 0x6c6]
---
0x5e5 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x606 PUSH1 0x0
0x608 PUSH1 0x40
0x60a MLOAD
0x60b SWAP1
0x60c DUP2
0x60d MSTORE
0x60e PUSH1 0x20
0x610 ADD
0x611 PUSH1 0x40
0x613 MLOAD
0x614 DUP1
0x615 SWAP2
0x616 SUB
0x617 SWAP1
0x618 LOG1
0x619 DUP1
0x61a PUSH1 0x1
0x61c PUSH1 0xa0
0x61e PUSH1 0x2
0x620 EXP
0x621 SUB
0x622 AND
0x623 PUSH4 0xa19b14a
0x628 DUP14
0x629 DUP13
0x62a DUP15
0x62b DUP14
0x62c DUP10
0x62d DUP10
0x62e DUP16
0x62f DUP16
0x630 DUP16
0x631 DUP16
0x632 DUP14
0x633 PUSH1 0x40
0x635 MLOAD
0x636 PUSH1 0xe0
0x638 PUSH1 0x2
0x63a EXP
0x63b PUSH4 0xffffffff
0x640 DUP15
0x641 AND
0x642 MUL
0x643 DUP2
0x644 MSTORE
0x645 PUSH1 0x1
0x647 PUSH1 0xa0
0x649 PUSH1 0x2
0x64b EXP
0x64c SUB
0x64d SWAP12
0x64e DUP13
0x64f AND
0x650 PUSH1 0x4
0x652 DUP3
0x653 ADD
0x654 MSTORE
0x655 PUSH1 0x24
0x657 DUP2
0x658 ADD
0x659 SWAP11
0x65a SWAP1
0x65b SWAP11
0x65c MSTORE
0x65d SWAP8
0x65e DUP11
0x65f AND
0x660 PUSH1 0x44
0x662 DUP11
0x663 ADD
0x664 MSTORE
0x665 PUSH1 0x64
0x667 DUP10
0x668 ADD
0x669 SWAP7
0x66a SWAP1
0x66b SWAP7
0x66c MSTORE
0x66d PUSH1 0x84
0x66f DUP9
0x670 ADD
0x671 SWAP5
0x672 SWAP1
0x673 SWAP5
0x674 MSTORE
0x675 PUSH1 0xa4
0x677 DUP8
0x678 ADD
0x679 SWAP3
0x67a SWAP1
0x67b SWAP3
0x67c MSTORE
0x67d SWAP1
0x67e SWAP6
0x67f AND
0x680 PUSH1 0xc4
0x682 DUP6
0x683 ADD
0x684 MSTORE
0x685 PUSH1 0xff
0x687 SWAP1
0x688 SWAP5
0x689 AND
0x68a PUSH1 0xe4
0x68c DUP5
0x68d ADD
0x68e MSTORE
0x68f PUSH2 0x104
0x692 DUP4
0x693 ADD
0x694 SWAP4
0x695 SWAP1
0x696 SWAP4
0x697 MSTORE
0x698 PUSH2 0x124
0x69b DUP3
0x69c ADD
0x69d SWAP3
0x69e SWAP1
0x69f SWAP3
0x6a0 MSTORE
0x6a1 PUSH2 0x144
0x6a4 DUP2
0x6a5 ADD
0x6a6 SWAP2
0x6a7 SWAP1
0x6a8 SWAP2
0x6a9 MSTORE
0x6aa PUSH2 0x164
0x6ad ADD
0x6ae PUSH1 0x0
0x6b0 PUSH1 0x40
0x6b2 MLOAD
0x6b3 DUP1
0x6b4 DUP4
0x6b5 SUB
0x6b6 DUP2
0x6b7 PUSH1 0x0
0x6b9 DUP8
0x6ba DUP1
0x6bb EXTCODESIZE
0x6bc ISZERO
0x6bd ISZERO
0x6be PUSH2 0x6c6
0x6c1 JUMPI
---
0x5e5: V596 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x606: V597 = 0x0
0x608: V598 = 0x40
0x60a: V599 = M[0x40]
0x60d: M[V599] = 0x0
0x60e: V600 = 0x20
0x610: V601 = ADD 0x20 V599
0x611: V602 = 0x40
0x613: V603 = M[0x40]
0x616: V604 = SUB V601 V603
0x618: LOG V603 V604 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x61a: V605 = 0x1
0x61c: V606 = 0xa0
0x61e: V607 = 0x2
0x620: V608 = EXP 0x2 0xa0
0x621: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x622: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x623: V611 = 0xa19b14a
0x633: V612 = 0x40
0x635: V613 = M[0x40]
0x636: V614 = 0xe0
0x638: V615 = 0x2
0x63a: V616 = EXP 0x2 0xe0
0x63b: V617 = 0xffffffff
0x641: V618 = AND 0xa19b14a 0xffffffff
0x642: V619 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x644: M[V613] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x645: V620 = 0x1
0x647: V621 = 0xa0
0x649: V622 = 0x2
0x64b: V623 = EXP 0x2 0xa0
0x64c: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64f: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x650: V626 = 0x4
0x653: V627 = ADD V613 0x4
0x654: M[V627] = V625
0x655: V628 = 0x24
0x658: V629 = ADD V613 0x24
0x65c: M[V629] = V176
0x65f: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x660: V631 = 0x44
0x663: V632 = ADD V613 0x44
0x664: M[V632] = V630
0x665: V633 = 0x64
0x668: V634 = ADD V613 0x64
0x66c: M[V634] = V178
0x66d: V635 = 0x84
0x670: V636 = ADD V613 0x84
0x674: M[V636] = V191
0x675: V637 = 0xa4
0x678: V638 = ADD V613 0xa4
0x67c: M[V638] = V193
0x67f: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x680: V640 = 0xc4
0x683: V641 = ADD V613 0xc4
0x684: M[V641] = V639
0x685: V642 = 0xff
0x689: V643 = AND V185 0xff
0x68a: V644 = 0xe4
0x68d: V645 = ADD V613 0xe4
0x68e: M[V645] = V643
0x68f: V646 = 0x104
0x693: V647 = ADD V613 0x104
0x697: M[V647] = V187
0x698: V648 = 0x124
0x69c: V649 = ADD V613 0x124
0x6a0: M[V649] = V189
0x6a1: V650 = 0x144
0x6a5: V651 = ADD V613 0x144
0x6a9: M[V651] = V195
0x6aa: V652 = 0x164
0x6ad: V653 = ADD 0x164 V613
0x6ae: V654 = 0x0
0x6b0: V655 = 0x40
0x6b2: V656 = M[0x40]
0x6b5: V657 = SUB V653 V656
0x6b7: V658 = 0x0
0x6bb: V659 = EXTCODESIZE V610
0x6bc: V660 = ISZERO V659
0x6bd: V661 = ISZERO V660
0x6be: V662 = 0x6c6
0x6c1: JUMPI 0x6c6 V661
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V610, 0xa19b14a, V653, 0x0, V656, V657, V656, 0x0, V610]
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V610, 0xa19b14a, V653, 0x0, V656, V657, V656, 0x0, V610]

================================

Block 0x6c2
[0x6c2:0x6c5]
---
Predecessors: [0x5e5]
Successors: []
---
0x6c2 PUSH1 0x0
0x6c4 DUP1
0x6c5 REVERT
---
0x6c2: V663 = 0x0
0x6c5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V610, 0xa19b14a, V653, 0x0, V656, V657, V656, 0x0, V610]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V610, 0xa19b14a, V653, 0x0, V656, V657, V656, 0x0, V610]

================================

Block 0x6c6
[0x6c6:0x6d2]
---
Predecessors: [0x5e5]
Successors: [0x6d3, 0x6d7]
---
0x6c6 JUMPDEST
0x6c7 PUSH2 0x2c6
0x6ca GAS
0x6cb SUB
0x6cc CALL
0x6cd ISZERO
0x6ce ISZERO
0x6cf PUSH2 0x6d7
0x6d2 JUMPI
---
0x6c6: JUMPDEST 
0x6c7: V664 = 0x2c6
0x6ca: V665 = GAS
0x6cb: V666 = SUB V665 0x2c6
0x6cc: V667 = CALL V666 V610 0x0 V656 V657 V656 0x0
0x6cd: V668 = ISZERO V667
0x6ce: V669 = ISZERO V668
0x6cf: V670 = 0x6d7
0x6d2: JUMPI 0x6d7 V669
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V610, 0xa19b14a, V653, 0x0, V656, V657, V656, 0x0, V610]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V610, 0xa19b14a, V653]

================================

Block 0x6d3
[0x6d3:0x6d6]
---
Predecessors: [0x6c6]
Successors: []
---
0x6d3 PUSH1 0x0
0x6d5 DUP1
0x6d6 REVERT
---
0x6d3: V671 = 0x0
0x6d6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V610, 0xa19b14a, V653]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V610, 0xa19b14a, V653]

================================

Block 0x6d7
[0x6d7:0x6de]
---
Predecessors: [0x6c6]
Successors: [0x714]
---
0x6d7 JUMPDEST
0x6d8 POP
0x6d9 POP
0x6da POP
0x6db PUSH2 0x714
0x6de JUMP
---
0x6d7: JUMPDEST 
0x6db: V672 = 0x714
0x6de: JUMP 0x714
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520, V610, 0xa19b14a, V653]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520]

================================

Block 0x6df
[0x6df:0x713]
---
Predecessors: [0x5d5]
Successors: [0x714]
---
0x6df JUMPDEST
0x6e0 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x701 PUSH1 0x1
0x703 PUSH1 0x40
0x705 MLOAD
0x706 SWAP1
0x707 DUP2
0x708 MSTORE
0x709 PUSH1 0x20
0x70b ADD
0x70c PUSH1 0x40
0x70e MLOAD
0x70f DUP1
0x710 SWAP2
0x711 SUB
0x712 SWAP1
0x713 LOG1
---
0x6df: JUMPDEST 
0x6e0: V673 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x701: V674 = 0x1
0x703: V675 = 0x40
0x705: V676 = M[0x40]
0x708: M[V676] = 0x1
0x709: V677 = 0x20
0x70b: V678 = ADD 0x20 V676
0x70c: V679 = 0x40
0x70e: V680 = M[0x40]
0x711: V681 = SUB V678 V680
0x713: LOG V680 V681 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520]

================================

Block 0x714
[0x714:0x714]
---
Predecessors: [0x6d7, 0x6df]
Successors: [0x715]
---
0x714 JUMPDEST
---
0x714: JUMPDEST 
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520]

================================

Block 0x715
[0x715:0x715]
---
Predecessors: [0x714]
Successors: [0x716]
---
0x715 JUMPDEST
---
0x715: JUMPDEST 
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520]

================================

Block 0x716
[0x716:0x723]
---
Predecessors: [0x715]
Successors: [0x7d]
---
0x716 JUMPDEST
0x717 POP
0x718 POP
0x719 POP
0x71a POP
0x71b POP
0x71c POP
0x71d POP
0x71e POP
0x71f POP
0x720 POP
0x721 POP
0x722 POP
0x723 JUMP
---
0x716: JUMPDEST 
0x723: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V171, V174, V176, V178, V181, V185, V187, V189, V191, V193, V195, V520]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0x724
[0x724:0x74f]
---
Predecessors: []
Successors: []
---
0x724 STOP
0x725 LOG1
0x726 PUSH6 0x627a7a723058
0x72d SHA3
0x72e NOT
0x72f MISSING 0xf
0x730 MISSING 0x5d
0x731 BYTE
0x732 MISSING 0xc3
0x733 SIGNEXTEND
0x734 ADDRESS
0x735 MISSING 0x29
0x736 MISSING 0x46
0x737 BYTE
0x738 DUP8
0x739 MISSING 0x4a
0x73a MISSING 0xda
0x73b SWAP7
0x73c SLT
0x73d MISSING 0x5d
0x73e DELEGATECALL
0x73f MISSING 0xaf
0x740 XOR
0x741 DIFFICULTY
0x742 SMOD
0x743 MISSING 0xc5
0x744 MISSING 0xea
0x745 MISSING 0xc5
0x746 MISSING 0xa8
0x747 MISSING 0xac
0x748 MISSING 0xea
0x749 LT
0x74a MISSING 0x5f
0x74b MISSING 0xc0
0x74c MISSING 0xcd
0x74d SMOD
0x74e STOP
0x74f MISSING 0x29
---
0x724: STOP 
0x725: LOG S0 S1 S2
0x726: V682 = 0x627a7a723058
0x72d: V683 = SHA3 0x627a7a723058 S3
0x72e: V684 = NOT V683
0x72f: MISSING 0xf
0x730: MISSING 0x5d
0x731: V685 = BYTE S0 S1
0x732: MISSING 0xc3
0x733: V686 = SIGNEXTEND S0 S1
0x734: V687 = ADDRESS
0x735: MISSING 0x29
0x736: MISSING 0x46
0x737: V688 = BYTE S0 S1
0x739: MISSING 0x4a
0x73a: MISSING 0xda
0x73c: V689 = SLT S7 S1
0x73d: MISSING 0x5d
0x73e: V690 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x73f: MISSING 0xaf
0x740: V691 = XOR S0 S1
0x741: V692 = DIFFICULTY
0x742: V693 = SMOD V692 V691
0x743: MISSING 0xc5
0x744: MISSING 0xea
0x745: MISSING 0xc5
0x746: MISSING 0xa8
0x747: MISSING 0xac
0x748: MISSING 0xea
0x749: V694 = LT S0 S1
0x74a: MISSING 0x5f
0x74b: MISSING 0xc0
0x74c: MISSING 0xcd
0x74d: V695 = SMOD S0 S1
0x74e: STOP 
0x74f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V684, V685, V687, V686, S8, V688, S2, S3, S4, S5, S6, S7, S8, V689, S2, S3, S4, S5, S6, S0, V690, V693, V694, V695]
Exit stack: []

================================

Function 0:
Public function signature: 0x2cf2c0af
Entry block: 0x81
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x81, 0x88, 0x8c, 0x1f6, 0x20e, 0x212, 0x24f, 0x253, 0x260, 0x264, 0x269, 0x26a

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x99
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x99, 0xa0, 0xa4, 0x26e, 0x285, 0x289, 0x2b8, 0x2bc, 0x2bd, 0x2be

Function 2:
Public function signature: 0x43d726d6
Entry block: 0xb1
Exit block: 0x2d8
Body: 0xb1, 0xb8, 0xbc, 0x2c1, 0x2d8, 0x2dc

Function 3:
Public function signature: 0x5c73dcea
Entry block: 0xc6
Exit block: 0x113
Body: 0xc6, 0xcd, 0xd1, 0x113, 0x2ed, 0x3a4, 0x3a8, 0x3b5, 0x3b9, 0x3c5

Function 4:
Public function signature: 0x70a08231
Entry block: 0x127
Exit block: 0x146
Body: 0x127, 0x12e, 0x132, 0x146, 0x3d5, 0x435, 0x439, 0x446, 0x44a, 0x456

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x158
Exit block: 0x16b
Body: 0x158, 0x15f, 0x163, 0x16b, 0x45c

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x187
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x187, 0x2ea, 0x2eb

Function 7:
Public function signature: 0xf1b83630
Entry block: 0x191
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x191, 0x198, 0x19c, 0x46e, 0x486, 0x48a, 0x4d0, 0x4d4, 0x4e1, 0x4e5, 0x4e9, 0x4ea

Function 8:
Public function signature: 0xff293aae
Entry block: 0x1a9
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1a9, 0x1b0, 0x1b4, 0x4ee, 0x506, 0x50a, 0x5c0, 0x5c4, 0x5d1, 0x5d5, 0x5e5, 0x6c2, 0x6c6, 0x6d3, 0x6d7, 0x6df, 0x714, 0x715, 0x716

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f

