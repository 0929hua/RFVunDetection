Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x72]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x72
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x72
0xa: JUMPI 0x72 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x7b]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2cf2c0af
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x7b
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2cf2c0af
0x20: V14 = EQ V12 0x2cf2c0af
0x21: V15 = 0x7b
0x24: JUMPI 0x7b V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x93]
---
0x25 DUP1
0x26 PUSH4 0x2e1a7d4d
0x2b EQ
0x2c PUSH2 0x93
0x2f JUMPI
---
0x26: V16 = 0x2e1a7d4d
0x2b: V17 = EQ 0x2e1a7d4d V12
0x2c: V18 = 0x93
0x2f: JUMPI 0x93 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xab]
---
0x30 DUP1
0x31 PUSH4 0x43d726d6
0x36 EQ
0x37 PUSH2 0xab
0x3a JUMPI
---
0x31: V19 = 0x43d726d6
0x36: V20 = EQ 0x43d726d6 V12
0x37: V21 = 0xab
0x3a: JUMPI 0xab V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xc0]
---
0x3b DUP1
0x3c PUSH4 0x70a08231
0x41 EQ
0x42 PUSH2 0xc0
0x45 JUMPI
---
0x3c: V22 = 0x70a08231
0x41: V23 = EQ 0x70a08231 V12
0x42: V24 = 0xc0
0x45: JUMPI 0xc0 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xf1]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0xf1
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0xf1
0x50: JUMPI 0xf1 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x120]
---
0x51 DUP1
0x52 PUSH4 0xcf8bb185
0x57 EQ
0x58 PUSH2 0x120
0x5b JUMPI
---
0x52: V28 = 0xcf8bb185
0x57: V29 = EQ 0xcf8bb185 V12
0x58: V30 = 0x120
0x5b: JUMPI 0x120 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x16f]
---
0x5c DUP1
0x5d PUSH4 0xd0e30db0
0x62 EQ
0x63 PUSH2 0x16f
0x66 JUMPI
---
0x5d: V31 = 0xd0e30db0
0x62: V32 = EQ 0xd0e30db0 V12
0x63: V33 = 0x16f
0x66: JUMPI 0x16f V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x179]
---
0x67 DUP1
0x68 PUSH4 0xf1b83630
0x6d EQ
0x6e PUSH2 0x179
0x71 JUMPI
---
0x68: V34 = 0xf1b83630
0x6d: V35 = EQ 0xf1b83630 V12
0x6e: V36 = 0x179
0x71: JUMPI 0x179 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x0, 0x67]
Successors: [0x76]
---
0x72 JUMPDEST
0x73 PUSH2 0x79
---
0x72: JUMPDEST 
0x73: V37 = 0x79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79]
Exit stack: [V12, 0x79]

================================

Block 0x76
[0x76:0x76]
---
Predecessors: [0x72, 0x16f]
Successors: [0x77]
---
0x76 JUMPDEST
---
0x76: JUMPDEST 
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x76]
Successors: [0x79]
---
0x77 JUMPDEST
0x78 JUMP
---
0x77: JUMPDEST 
0x78: JUMP 0x79
---
Entry stack: [V12, 0x79]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x79
[0x79:0x7a]
---
Predecessors: [0x77, 0x205, 0x259, 0x65a, 0x6e8]
Successors: []
---
0x79 JUMPDEST
0x7a STOP
---
0x79: JUMPDEST 
0x7a: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b
[0x7b:0x81]
---
Predecessors: [0xb]
Successors: [0x82, 0x86]
---
0x7b JUMPDEST
0x7c CALLVALUE
0x7d ISZERO
0x7e PUSH2 0x86
0x81 JUMPI
---
0x7b: JUMPDEST 
0x7c: V38 = CALLVALUE
0x7d: V39 = ISZERO V38
0x7e: V40 = 0x86
0x81: JUMPI 0x86 V39
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x7b]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V41 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x86
[0x86:0x90]
---
Predecessors: [0x7b]
Successors: [0x191]
---
0x86 JUMPDEST
0x87 PUSH2 0x79
0x8a PUSH1 0x4
0x8c CALLDATALOAD
0x8d PUSH2 0x191
0x90 JUMP
---
0x86: JUMPDEST 
0x87: V42 = 0x79
0x8a: V43 = 0x4
0x8c: V44 = CALLDATALOAD 0x4
0x8d: V45 = 0x191
0x90: JUMP 0x191
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79, V44]
Exit stack: [V12, 0x79, V44]

================================

Block 0x91
[0x91:0x92]
---
Predecessors: []
Successors: []
---
0x91 JUMPDEST
0x92 STOP
---
0x91: JUMPDEST 
0x92: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x93
[0x93:0x99]
---
Predecessors: [0x25]
Successors: [0x9a, 0x9e]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 ISZERO
0x96 PUSH2 0x9e
0x99 JUMPI
---
0x93: JUMPDEST 
0x94: V46 = CALLVALUE
0x95: V47 = ISZERO V46
0x96: V48 = 0x9e
0x99: JUMPI 0x9e V47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9a
[0x9a:0x9d]
---
Predecessors: [0x93]
Successors: []
---
0x9a PUSH1 0x0
0x9c DUP1
0x9d REVERT
---
0x9a: V49 = 0x0
0x9d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0x209]
---
0x9e JUMPDEST
0x9f PUSH2 0x79
0xa2 PUSH1 0x4
0xa4 CALLDATALOAD
0xa5 PUSH2 0x209
0xa8 JUMP
---
0x9e: JUMPDEST 
0x9f: V50 = 0x79
0xa2: V51 = 0x4
0xa4: V52 = CALLDATALOAD 0x4
0xa5: V53 = 0x209
0xa8: JUMP 0x209
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79, V52]
Exit stack: [V12, 0x79, V52]

================================

Block 0xa9
[0xa9:0xaa]
---
Predecessors: []
Successors: []
---
0xa9 JUMPDEST
0xaa STOP
---
0xa9: JUMPDEST 
0xaa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xab
[0xab:0xb1]
---
Predecessors: [0x30]
Successors: [0xb2, 0xb6]
---
0xab JUMPDEST
0xac CALLVALUE
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0xab: JUMPDEST 
0xac: V54 = CALLVALUE
0xad: V55 = ISZERO V54
0xae: V56 = 0xb6
0xb1: JUMPI 0xb6 V55
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0xab]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V57 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb6
[0xb6:0xbd]
---
Predecessors: [0xab]
Successors: [0x25c]
---
0xb6 JUMPDEST
0xb7 PUSH2 0x79
0xba PUSH2 0x25c
0xbd JUMP
---
0xb6: JUMPDEST 
0xb7: V58 = 0x79
0xba: V59 = 0x25c
0xbd: JUMP 0x25c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79]
Exit stack: [V12, 0x79]

================================

Block 0xbe
[0xbe:0xbf]
---
Predecessors: []
Successors: []
---
0xbe JUMPDEST
0xbf STOP
---
0xbe: JUMPDEST 
0xbf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc0
[0xc0:0xc6]
---
Predecessors: [0x3b]
Successors: [0xc7, 0xcb]
---
0xc0 JUMPDEST
0xc1 CALLVALUE
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xc0: JUMPDEST 
0xc1: V60 = CALLVALUE
0xc2: V61 = ISZERO V60
0xc3: V62 = 0xcb
0xc6: JUMPI 0xcb V61
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xc0]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V63 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb
[0xcb:0xde]
---
Predecessors: [0xc0]
Successors: [0x288]
---
0xcb JUMPDEST
0xcc PUSH2 0xdf
0xcf PUSH1 0x1
0xd1 PUSH1 0xa0
0xd3 PUSH1 0x2
0xd5 EXP
0xd6 SUB
0xd7 PUSH1 0x4
0xd9 CALLDATALOAD
0xda AND
0xdb PUSH2 0x288
0xde JUMP
---
0xcb: JUMPDEST 
0xcc: V64 = 0xdf
0xcf: V65 = 0x1
0xd1: V66 = 0xa0
0xd3: V67 = 0x2
0xd5: V68 = EXP 0x2 0xa0
0xd6: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V70 = 0x4
0xd9: V71 = CALLDATALOAD 0x4
0xda: V72 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V73 = 0x288
0xde: JUMP 0x288
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdf, V72]
Exit stack: [V12, 0xdf, V72]

================================

Block 0xdf
[0xdf:0xf0]
---
Predecessors: [0x309]
Successors: []
---
0xdf JUMPDEST
0xe0 PUSH1 0x40
0xe2 MLOAD
0xe3 SWAP1
0xe4 DUP2
0xe5 MSTORE
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed SWAP2
0xee SUB
0xef SWAP1
0xf0 RETURN
---
0xdf: JUMPDEST 
0xe0: V74 = 0x40
0xe2: V75 = M[0x40]
0xe5: M[V75] = V309
0xe6: V76 = 0x20
0xe8: V77 = ADD 0x20 V75
0xe9: V78 = 0x40
0xeb: V79 = M[0x40]
0xee: V80 = SUB V77 V79
0xf0: RETURN V79 V80
---
Entry stack: [V12, V309]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0x46]
Successors: [0xf8, 0xfc]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V81 = CALLVALUE
0xf3: V82 = ISZERO V81
0xf4: V83 = 0xfc
0xf7: JUMPI 0xfc V82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V84 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0xf1]
Successors: [0x30f]
---
0xfc JUMPDEST
0xfd PUSH2 0x104
0x100 PUSH2 0x30f
0x103 JUMP
---
0xfc: JUMPDEST 
0xfd: V85 = 0x104
0x100: V86 = 0x30f
0x103: JUMP 0x30f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x104
[0x104:0x11f]
---
Predecessors: [0x30f]
Successors: []
---
0x104 JUMPDEST
0x105 PUSH1 0x40
0x107 MLOAD
0x108 PUSH1 0x1
0x10a PUSH1 0xa0
0x10c PUSH1 0x2
0x10e EXP
0x10f SUB
0x110 SWAP1
0x111 SWAP2
0x112 AND
0x113 DUP2
0x114 MSTORE
0x115 PUSH1 0x20
0x117 ADD
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c SWAP2
0x11d SUB
0x11e SWAP1
0x11f RETURN
---
0x104: JUMPDEST 
0x105: V87 = 0x40
0x107: V88 = M[0x40]
0x108: V89 = 0x1
0x10a: V90 = 0xa0
0x10c: V91 = 0x2
0x10e: V92 = EXP 0x2 0xa0
0x10f: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112: V94 = AND V317 0xffffffffffffffffffffffffffffffffffffffff
0x114: M[V88] = V94
0x115: V95 = 0x20
0x117: V96 = ADD 0x20 V88
0x118: V97 = 0x40
0x11a: V98 = M[0x40]
0x11d: V99 = SUB V96 V98
0x11f: RETURN V98 V99
---
Entry stack: [V12, 0x104, V317]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x104]

================================

Block 0x120
[0x120:0x126]
---
Predecessors: [0x51]
Successors: [0x127, 0x12b]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x120: JUMPDEST 
0x121: V100 = CALLVALUE
0x122: V101 = ISZERO V100
0x123: V102 = 0x12b
0x126: JUMPI 0x12b V101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x120]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V103 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12b
[0x12b:0x16c]
---
Predecessors: [0x120]
Successors: [0x31e]
---
0x12b JUMPDEST
0x12c PUSH2 0x79
0x12f PUSH1 0x1
0x131 PUSH1 0xa0
0x133 PUSH1 0x2
0x135 EXP
0x136 SUB
0x137 PUSH1 0x4
0x139 CALLDATALOAD
0x13a DUP2
0x13b AND
0x13c SWAP1
0x13d PUSH1 0x24
0x13f CALLDATALOAD
0x140 SWAP1
0x141 PUSH1 0x44
0x143 CALLDATALOAD
0x144 DUP2
0x145 AND
0x146 SWAP1
0x147 PUSH1 0x64
0x149 CALLDATALOAD
0x14a SWAP1
0x14b PUSH1 0x84
0x14d CALLDATALOAD
0x14e SWAP1
0x14f PUSH1 0xa4
0x151 CALLDATALOAD
0x152 SWAP1
0x153 PUSH1 0xc4
0x155 CALLDATALOAD
0x156 AND
0x157 PUSH1 0xff
0x159 PUSH1 0xe4
0x15b CALLDATALOAD
0x15c AND
0x15d PUSH2 0x104
0x160 CALLDATALOAD
0x161 PUSH2 0x124
0x164 CALLDATALOAD
0x165 PUSH2 0x144
0x168 CALLDATALOAD
0x169 PUSH2 0x31e
0x16c JUMP
---
0x12b: JUMPDEST 
0x12c: V104 = 0x79
0x12f: V105 = 0x1
0x131: V106 = 0xa0
0x133: V107 = 0x2
0x135: V108 = EXP 0x2 0xa0
0x136: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x137: V110 = 0x4
0x139: V111 = CALLDATALOAD 0x4
0x13b: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x13d: V113 = 0x24
0x13f: V114 = CALLDATALOAD 0x24
0x141: V115 = 0x44
0x143: V116 = CALLDATALOAD 0x44
0x145: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x147: V118 = 0x64
0x149: V119 = CALLDATALOAD 0x64
0x14b: V120 = 0x84
0x14d: V121 = CALLDATALOAD 0x84
0x14f: V122 = 0xa4
0x151: V123 = CALLDATALOAD 0xa4
0x153: V124 = 0xc4
0x155: V125 = CALLDATALOAD 0xc4
0x156: V126 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x157: V127 = 0xff
0x159: V128 = 0xe4
0x15b: V129 = CALLDATALOAD 0xe4
0x15c: V130 = AND V129 0xff
0x15d: V131 = 0x104
0x160: V132 = CALLDATALOAD 0x104
0x161: V133 = 0x124
0x164: V134 = CALLDATALOAD 0x124
0x165: V135 = 0x144
0x168: V136 = CALLDATALOAD 0x144
0x169: V137 = 0x31e
0x16c: JUMP 0x31e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136]
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136]

================================

Block 0x16d
[0x16d:0x16e]
---
Predecessors: []
Successors: []
---
0x16d JUMPDEST
0x16e STOP
---
0x16d: JUMPDEST 
0x16e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x16f
[0x16f:0x176]
---
Predecessors: [0x5c]
Successors: [0x76]
---
0x16f JUMPDEST
0x170 PUSH2 0x79
0x173 PUSH2 0x76
0x176 JUMP
---
0x16f: JUMPDEST 
0x170: V138 = 0x79
0x173: V139 = 0x76
0x176: JUMP 0x76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79]
Exit stack: [V12, 0x79]

================================

Block 0x177
[0x177:0x178]
---
Predecessors: []
Successors: []
---
0x177 JUMPDEST
0x178 STOP
---
0x177: JUMPDEST 
0x178: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x179
[0x179:0x17f]
---
Predecessors: [0x67]
Successors: [0x180, 0x184]
---
0x179 JUMPDEST
0x17a CALLVALUE
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x179: JUMPDEST 
0x17a: V140 = CALLVALUE
0x17b: V141 = ISZERO V140
0x17c: V142 = 0x184
0x17f: JUMPI 0x184 V141
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x179]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V143 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x184
[0x184:0x18e]
---
Predecessors: [0x179]
Successors: [0x66c]
---
0x184 JUMPDEST
0x185 PUSH2 0x79
0x188 PUSH1 0x4
0x18a CALLDATALOAD
0x18b PUSH2 0x66c
0x18e JUMP
---
0x184: JUMPDEST 
0x185: V144 = 0x79
0x188: V145 = 0x4
0x18a: V146 = CALLDATALOAD 0x4
0x18b: V147 = 0x66c
0x18e: JUMP 0x66c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79, V146]
Exit stack: [V12, 0x79, V146]

================================

Block 0x18f
[0x18f:0x190]
---
Predecessors: []
Successors: []
---
0x18f JUMPDEST
0x190 STOP
---
0x18f: JUMPDEST 
0x190: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x191
[0x191:0x1a8]
---
Predecessors: [0x86]
Successors: [0x1a9, 0x1ad]
---
0x191 JUMPDEST
0x192 PUSH1 0x0
0x194 DUP1
0x195 SLOAD
0x196 CALLER
0x197 PUSH1 0x1
0x199 PUSH1 0xa0
0x19b PUSH1 0x2
0x19d EXP
0x19e SUB
0x19f SWAP1
0x1a0 DUP2
0x1a1 AND
0x1a2 SWAP2
0x1a3 AND
0x1a4 EQ
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x191: JUMPDEST 
0x192: V148 = 0x0
0x195: V149 = S[0x0]
0x196: V150 = CALLER
0x197: V151 = 0x1
0x199: V152 = 0xa0
0x19b: V153 = 0x2
0x19d: V154 = EXP 0x2 0xa0
0x19e: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a1: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x1a3: V157 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V158 = EQ V157 V156
0x1a5: V159 = 0x1ad
0x1a8: JUMPI 0x1ad V158
---
Entry stack: [V12, 0x79, V44]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x79, V44, 0x0]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x191]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V160 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V44, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V44, 0x0]

================================

Block 0x1ad
[0x1ad:0x1e9]
---
Predecessors: [0x191]
Successors: [0x1ea, 0x1ee]
---
0x1ad JUMPDEST
0x1ae POP
0x1af PUSH1 0x1
0x1b1 SLOAD
0x1b2 PUSH1 0x1
0x1b4 PUSH1 0xa0
0x1b6 PUSH1 0x2
0x1b8 EXP
0x1b9 SUB
0x1ba AND
0x1bb DUP1
0x1bc PUSH4 0xd0e30db0
0x1c1 DUP4
0x1c2 PUSH1 0x40
0x1c4 MLOAD
0x1c5 DUP3
0x1c6 PUSH4 0xffffffff
0x1cb AND
0x1cc PUSH1 0xe0
0x1ce PUSH1 0x2
0x1d0 EXP
0x1d1 MUL
0x1d2 DUP2
0x1d3 MSTORE
0x1d4 PUSH1 0x4
0x1d6 ADD
0x1d7 PUSH1 0x0
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc DUP1
0x1dd DUP4
0x1de SUB
0x1df DUP2
0x1e0 DUP6
0x1e1 DUP9
0x1e2 DUP1
0x1e3 EXTCODESIZE
0x1e4 ISZERO
0x1e5 ISZERO
0x1e6 PUSH2 0x1ee
0x1e9 JUMPI
---
0x1ad: JUMPDEST 
0x1af: V161 = 0x1
0x1b1: V162 = S[0x1]
0x1b2: V163 = 0x1
0x1b4: V164 = 0xa0
0x1b6: V165 = 0x2
0x1b8: V166 = EXP 0x2 0xa0
0x1b9: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ba: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x1bc: V169 = 0xd0e30db0
0x1c2: V170 = 0x40
0x1c4: V171 = M[0x40]
0x1c6: V172 = 0xffffffff
0x1cb: V173 = AND 0xffffffff 0xd0e30db0
0x1cc: V174 = 0xe0
0x1ce: V175 = 0x2
0x1d0: V176 = EXP 0x2 0xe0
0x1d1: V177 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x1d3: M[V171] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x1d4: V178 = 0x4
0x1d6: V179 = ADD 0x4 V171
0x1d7: V180 = 0x0
0x1d9: V181 = 0x40
0x1db: V182 = M[0x40]
0x1de: V183 = SUB V179 V182
0x1e3: V184 = EXTCODESIZE V168
0x1e4: V185 = ISZERO V184
0x1e5: V186 = ISZERO V185
0x1e6: V187 = 0x1ee
0x1e9: JUMPI 0x1ee V186
---
Entry stack: [V12, 0x79, V44, 0x0]
Stack pops: 2
Stack additions: [S1, V168, V168, 0xd0e30db0, S1, V179, 0x0, V182, V183, V182, S1, V168]
Exit stack: [V12, 0x79, V44, V168, V168, 0xd0e30db0, V44, V179, 0x0, V182, V183, V182, V44, V168]

================================

Block 0x1ea
[0x1ea:0x1ed]
---
Predecessors: [0x1ad]
Successors: []
---
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed REVERT
---
0x1ea: V188 = 0x0
0x1ed: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V44, V168, V168, 0xd0e30db0, V44, V179, 0x0, V182, V183, V182, V44, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V44, V168, V168, 0xd0e30db0, V44, V179, 0x0, V182, V183, V182, V44, V168]

================================

Block 0x1ee
[0x1ee:0x1fa]
---
Predecessors: [0x1ad]
Successors: [0x1fb, 0x1ff]
---
0x1ee JUMPDEST
0x1ef PUSH2 0x25ee
0x1f2 GAS
0x1f3 SUB
0x1f4 CALL
0x1f5 ISZERO
0x1f6 ISZERO
0x1f7 PUSH2 0x1ff
0x1fa JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V189 = 0x25ee
0x1f2: V190 = GAS
0x1f3: V191 = SUB V190 0x25ee
0x1f4: V192 = CALL V191 V168 V44 V182 V183 V182 0x0
0x1f5: V193 = ISZERO V192
0x1f6: V194 = ISZERO V193
0x1f7: V195 = 0x1ff
0x1fa: JUMPI 0x1ff V194
---
Entry stack: [V12, 0x79, V44, V168, V168, 0xd0e30db0, V44, V179, 0x0, V182, V183, V182, V44, V168]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x79, V44, V168, V168, 0xd0e30db0, V44, V179]

================================

Block 0x1fb
[0x1fb:0x1fe]
---
Predecessors: [0x1ee]
Successors: []
---
0x1fb PUSH1 0x0
0x1fd DUP1
0x1fe REVERT
---
0x1fb: V196 = 0x0
0x1fe: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V44, V168, V168, 0xd0e30db0, V44, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V44, V168, V168, 0xd0e30db0, V44, V179]

================================

Block 0x1ff
[0x1ff:0x203]
---
Predecessors: [0x1ee]
Successors: [0x204]
---
0x1ff JUMPDEST
0x200 POP
0x201 POP
0x202 POP
0x203 POP
---
0x1ff: JUMPDEST 
---
Entry stack: [V12, 0x79, V44, V168, V168, 0xd0e30db0, V44, V179]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x79, V44, V168]

================================

Block 0x204
[0x204:0x204]
---
Predecessors: [0x1ff]
Successors: [0x205]
---
0x204 JUMPDEST
---
0x204: JUMPDEST 
---
Entry stack: [V12, 0x79, V44, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V44, V168]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x204]
Successors: [0x79]
---
0x205 JUMPDEST
0x206 POP
0x207 POP
0x208 JUMP
---
0x205: JUMPDEST 
0x208: JUMP 0x79
---
Entry stack: [V12, 0x79, V44, V168]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x209
[0x209:0x21f]
---
Predecessors: [0x9e]
Successors: [0x220, 0x224]
---
0x209 JUMPDEST
0x20a PUSH1 0x0
0x20c SLOAD
0x20d CALLER
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 SWAP1
0x217 DUP2
0x218 AND
0x219 SWAP2
0x21a AND
0x21b EQ
0x21c PUSH2 0x224
0x21f JUMPI
---
0x209: JUMPDEST 
0x20a: V197 = 0x0
0x20c: V198 = S[0x0]
0x20d: V199 = CALLER
0x20e: V200 = 0x1
0x210: V201 = 0xa0
0x212: V202 = 0x2
0x214: V203 = EXP 0x2 0xa0
0x215: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x218: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x21a: V206 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V207 = EQ V206 V205
0x21c: V208 = 0x224
0x21f: JUMPI 0x224 V207
---
Entry stack: [V12, 0x79, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V52]

================================

Block 0x220
[0x220:0x223]
---
Predecessors: [0x209]
Successors: []
---
0x220 PUSH1 0x0
0x222 DUP1
0x223 REVERT
---
0x220: V209 = 0x0
0x223: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V52]

================================

Block 0x224
[0x224:0x252]
---
Predecessors: [0x209]
Successors: [0x253, 0x257]
---
0x224 JUMPDEST
0x225 PUSH1 0x0
0x227 SLOAD
0x228 PUSH1 0x1
0x22a PUSH1 0xa0
0x22c PUSH1 0x2
0x22e EXP
0x22f SUB
0x230 AND
0x231 DUP2
0x232 ISZERO
0x233 PUSH2 0x8fc
0x236 MUL
0x237 DUP3
0x238 PUSH1 0x40
0x23a MLOAD
0x23b PUSH1 0x0
0x23d PUSH1 0x40
0x23f MLOAD
0x240 DUP1
0x241 DUP4
0x242 SUB
0x243 DUP2
0x244 DUP6
0x245 DUP9
0x246 DUP9
0x247 CALL
0x248 SWAP4
0x249 POP
0x24a POP
0x24b POP
0x24c POP
0x24d ISZERO
0x24e ISZERO
0x24f PUSH2 0x257
0x252 JUMPI
---
0x224: JUMPDEST 
0x225: V210 = 0x0
0x227: V211 = S[0x0]
0x228: V212 = 0x1
0x22a: V213 = 0xa0
0x22c: V214 = 0x2
0x22e: V215 = EXP 0x2 0xa0
0x22f: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x230: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x232: V218 = ISZERO V52
0x233: V219 = 0x8fc
0x236: V220 = MUL 0x8fc V218
0x238: V221 = 0x40
0x23a: V222 = M[0x40]
0x23b: V223 = 0x0
0x23d: V224 = 0x40
0x23f: V225 = M[0x40]
0x242: V226 = SUB V222 V225
0x247: V227 = CALL V220 V217 V52 V225 V226 V225 0x0
0x24d: V228 = ISZERO V227
0x24e: V229 = ISZERO V228
0x24f: V230 = 0x257
0x252: JUMPI 0x257 V229
---
Entry stack: [V12, 0x79, V52]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x79, V52]

================================

Block 0x253
[0x253:0x256]
---
Predecessors: [0x224]
Successors: []
---
0x253 PUSH1 0x0
0x255 DUP1
0x256 REVERT
---
0x253: V231 = 0x0
0x256: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V52]

================================

Block 0x257
[0x257:0x257]
---
Predecessors: [0x224]
Successors: [0x258]
---
0x257 JUMPDEST
---
0x257: JUMPDEST 
---
Entry stack: [V12, 0x79, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V52]

================================

Block 0x258
[0x258:0x258]
---
Predecessors: [0x257]
Successors: [0x259]
---
0x258 JUMPDEST
---
0x258: JUMPDEST 
---
Entry stack: [V12, 0x79, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V52]

================================

Block 0x259
[0x259:0x25b]
---
Predecessors: [0x258]
Successors: [0x79]
---
0x259 JUMPDEST
0x25a POP
0x25b JUMP
---
0x259: JUMPDEST 
0x25b: JUMP 0x79
---
Entry stack: [V12, 0x79, V52]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x25c
[0x25c:0x272]
---
Predecessors: [0xb6]
Successors: [0x273, 0x277]
---
0x25c JUMPDEST
0x25d PUSH1 0x0
0x25f SLOAD
0x260 CALLER
0x261 PUSH1 0x1
0x263 PUSH1 0xa0
0x265 PUSH1 0x2
0x267 EXP
0x268 SUB
0x269 SWAP1
0x26a DUP2
0x26b AND
0x26c SWAP2
0x26d AND
0x26e EQ
0x26f PUSH2 0x277
0x272 JUMPI
---
0x25c: JUMPDEST 
0x25d: V232 = 0x0
0x25f: V233 = S[0x0]
0x260: V234 = CALLER
0x261: V235 = 0x1
0x263: V236 = 0xa0
0x265: V237 = 0x2
0x267: V238 = EXP 0x2 0xa0
0x268: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26b: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x26d: V241 = AND V233 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V242 = EQ V241 V240
0x26f: V243 = 0x277
0x272: JUMPI 0x277 V242
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x273
[0x273:0x276]
---
Predecessors: [0x25c]
Successors: []
---
0x273 PUSH1 0x0
0x275 DUP1
0x276 REVERT
---
0x273: V244 = 0x0
0x276: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x277
[0x277:0x284]
---
Predecessors: [0x25c]
Successors: []
---
0x277 JUMPDEST
0x278 PUSH1 0x0
0x27a SLOAD
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 AND
0x284 SELFDESTRUCT
---
0x277: JUMPDEST 
0x278: V245 = 0x0
0x27a: V246 = S[0x0]
0x27b: V247 = 0x1
0x27d: V248 = 0xa0
0x27f: V249 = 0x2
0x281: V250 = EXP 0x2 0xa0
0x282: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x283: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x284: SELFDESTRUCT V252
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x285
[0x285:0x285]
---
Predecessors: []
Successors: [0x286]
---
0x285 JUMPDEST
---
0x285: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x286
[0x286:0x287]
---
Predecessors: [0x285]
Successors: []
Has unresolved jump.
---
0x286 JUMPDEST
0x287 JUMP
---
0x286: JUMPDEST 
0x287: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x288
[0x288:0x2e7]
---
Predecessors: [0xcb]
Successors: [0x2e8, 0x2ec]
---
0x288 JUMPDEST
0x289 PUSH1 0x1
0x28b SLOAD
0x28c PUSH1 0x0
0x28e SWAP1
0x28f PUSH1 0x1
0x291 PUSH1 0xa0
0x293 PUSH1 0x2
0x295 EXP
0x296 SUB
0x297 AND
0x298 DUP1
0x299 PUSH4 0xf7888aec
0x29e DUP5
0x29f ADDRESS
0x2a0 DUP6
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 MSTORE
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab PUSH1 0xe0
0x2ad PUSH1 0x2
0x2af EXP
0x2b0 PUSH4 0xffffffff
0x2b5 DUP6
0x2b6 AND
0x2b7 MUL
0x2b8 DUP2
0x2b9 MSTORE
0x2ba PUSH1 0x1
0x2bc PUSH1 0xa0
0x2be PUSH1 0x2
0x2c0 EXP
0x2c1 SUB
0x2c2 SWAP3
0x2c3 DUP4
0x2c4 AND
0x2c5 PUSH1 0x4
0x2c7 DUP3
0x2c8 ADD
0x2c9 MSTORE
0x2ca SWAP2
0x2cb AND
0x2cc PUSH1 0x24
0x2ce DUP3
0x2cf ADD
0x2d0 MSTORE
0x2d1 PUSH1 0x44
0x2d3 ADD
0x2d4 PUSH1 0x20
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 DUP1
0x2da DUP4
0x2db SUB
0x2dc DUP2
0x2dd PUSH1 0x0
0x2df DUP8
0x2e0 DUP1
0x2e1 EXTCODESIZE
0x2e2 ISZERO
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x288: JUMPDEST 
0x289: V253 = 0x1
0x28b: V254 = S[0x1]
0x28c: V255 = 0x0
0x28f: V256 = 0x1
0x291: V257 = 0xa0
0x293: V258 = 0x2
0x295: V259 = EXP 0x2 0xa0
0x296: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x297: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x299: V262 = 0xf7888aec
0x29f: V263 = ADDRESS
0x2a1: V264 = 0x40
0x2a3: V265 = M[0x40]
0x2a4: V266 = 0x20
0x2a6: V267 = ADD 0x20 V265
0x2a7: M[V267] = 0x0
0x2a8: V268 = 0x40
0x2aa: V269 = M[0x40]
0x2ab: V270 = 0xe0
0x2ad: V271 = 0x2
0x2af: V272 = EXP 0x2 0xe0
0x2b0: V273 = 0xffffffff
0x2b6: V274 = AND 0xf7888aec 0xffffffff
0x2b7: V275 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x2b9: M[V269] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x2ba: V276 = 0x1
0x2bc: V277 = 0xa0
0x2be: V278 = 0x2
0x2c0: V279 = EXP 0x2 0xa0
0x2c1: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c4: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x2c5: V282 = 0x4
0x2c8: V283 = ADD V269 0x4
0x2c9: M[V283] = V281
0x2cb: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x2cc: V285 = 0x24
0x2cf: V286 = ADD V269 0x24
0x2d0: M[V286] = V284
0x2d1: V287 = 0x44
0x2d3: V288 = ADD 0x44 V269
0x2d4: V289 = 0x20
0x2d6: V290 = 0x40
0x2d8: V291 = M[0x40]
0x2db: V292 = SUB V288 V291
0x2dd: V293 = 0x0
0x2e1: V294 = EXTCODESIZE V261
0x2e2: V295 = ISZERO V294
0x2e3: V296 = ISZERO V295
0x2e4: V297 = 0x2ec
0x2e7: JUMPI 0x2ec V296
---
Entry stack: [V12, 0xdf, V72]
Stack pops: 1
Stack additions: [S0, 0x0, V261, V261, 0xf7888aec, V288, 0x20, V291, V292, V291, 0x0, V261]
Exit stack: [V12, 0xdf, V72, 0x0, V261, V261, 0xf7888aec, V288, 0x20, V291, V292, V291, 0x0, V261]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x288]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V298 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdf, V72, 0x0, V261, V261, 0xf7888aec, V288, 0x20, V291, V292, V291, 0x0, V261]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdf, V72, 0x0, V261, V261, 0xf7888aec, V288, 0x20, V291, V292, V291, 0x0, V261]

================================

Block 0x2ec
[0x2ec:0x2f8]
---
Predecessors: [0x288]
Successors: [0x2f9, 0x2fd]
---
0x2ec JUMPDEST
0x2ed PUSH2 0x2c6
0x2f0 GAS
0x2f1 SUB
0x2f2 CALL
0x2f3 ISZERO
0x2f4 ISZERO
0x2f5 PUSH2 0x2fd
0x2f8 JUMPI
---
0x2ec: JUMPDEST 
0x2ed: V299 = 0x2c6
0x2f0: V300 = GAS
0x2f1: V301 = SUB V300 0x2c6
0x2f2: V302 = CALL V301 V261 0x0 V291 V292 V291 0x20
0x2f3: V303 = ISZERO V302
0x2f4: V304 = ISZERO V303
0x2f5: V305 = 0x2fd
0x2f8: JUMPI 0x2fd V304
---
Entry stack: [V12, 0xdf, V72, 0x0, V261, V261, 0xf7888aec, V288, 0x20, V291, V292, V291, 0x0, V261]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xdf, V72, 0x0, V261, V261, 0xf7888aec, V288]

================================

Block 0x2f9
[0x2f9:0x2fc]
---
Predecessors: [0x2ec]
Successors: []
---
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc REVERT
---
0x2f9: V306 = 0x0
0x2fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdf, V72, 0x0, V261, V261, 0xf7888aec, V288]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdf, V72, 0x0, V261, V261, 0xf7888aec, V288]

================================

Block 0x2fd
[0x2fd:0x308]
---
Predecessors: [0x2ec]
Successors: [0x309]
---
0x2fd JUMPDEST
0x2fe POP
0x2ff POP
0x300 POP
0x301 PUSH1 0x40
0x303 MLOAD
0x304 DUP1
0x305 MLOAD
0x306 SWAP3
0x307 POP
0x308 POP
---
0x2fd: JUMPDEST 
0x301: V307 = 0x40
0x303: V308 = M[0x40]
0x305: V309 = M[V308]
---
Entry stack: [V12, 0xdf, V72, 0x0, V261, V261, 0xf7888aec, V288]
Stack pops: 5
Stack additions: [V309, S3]
Exit stack: [V12, 0xdf, V72, V309, V261]

================================

Block 0x309
[0x309:0x30e]
---
Predecessors: [0x2fd]
Successors: [0xdf]
---
0x309 JUMPDEST
0x30a POP
0x30b SWAP2
0x30c SWAP1
0x30d POP
0x30e JUMP
---
0x309: JUMPDEST 
0x30e: JUMP 0xdf
---
Entry stack: [V12, 0xdf, V72, V309, V261]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V309]

================================

Block 0x30f
[0x30f:0x31d]
---
Predecessors: [0xfc]
Successors: [0x104]
---
0x30f JUMPDEST
0x310 PUSH1 0x0
0x312 SLOAD
0x313 PUSH1 0x1
0x315 PUSH1 0xa0
0x317 PUSH1 0x2
0x319 EXP
0x31a SUB
0x31b AND
0x31c DUP2
0x31d JUMP
---
0x30f: JUMPDEST 
0x310: V310 = 0x0
0x312: V311 = S[0x0]
0x313: V312 = 0x1
0x315: V313 = 0xa0
0x317: V314 = 0x2
0x319: V315 = EXP 0x2 0xa0
0x31a: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31b: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x31d: JUMP 0x104
---
Entry stack: [V12, 0x104]
Stack pops: 1
Stack additions: [S0, V317]
Exit stack: [V12, 0x104, V317]

================================

Block 0x31e
[0x31e:0x337]
---
Predecessors: [0x12b]
Successors: [0x338, 0x33c]
---
0x31e JUMPDEST
0x31f PUSH1 0x0
0x321 DUP1
0x322 SLOAD
0x323 DUP2
0x324 SWAP1
0x325 CALLER
0x326 PUSH1 0x1
0x328 PUSH1 0xa0
0x32a PUSH1 0x2
0x32c EXP
0x32d SUB
0x32e SWAP1
0x32f DUP2
0x330 AND
0x331 SWAP2
0x332 AND
0x333 EQ
0x334 PUSH2 0x33c
0x337 JUMPI
---
0x31e: JUMPDEST 
0x31f: V318 = 0x0
0x322: V319 = S[0x0]
0x325: V320 = CALLER
0x326: V321 = 0x1
0x328: V322 = 0xa0
0x32a: V323 = 0x2
0x32c: V324 = EXP 0x2 0xa0
0x32d: V325 = SUB 0x10000000000000000000000000000000000000000 0x1
0x330: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x332: V327 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0x333: V328 = EQ V327 V326
0x334: V329 = 0x33c
0x337: JUMPI 0x33c V328
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, 0x0]

================================

Block 0x338
[0x338:0x33b]
---
Predecessors: [0x31e]
Successors: []
---
0x338 PUSH1 0x0
0x33a DUP1
0x33b REVERT
---
0x338: V330 = 0x0
0x33b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, 0x0]

================================

Block 0x33c
[0x33c:0x351]
---
Predecessors: [0x31e]
Successors: [0x352, 0x420]
---
0x33c JUMPDEST
0x33d PUSH1 0x1
0x33f SLOAD
0x340 PUSH1 0x1
0x342 PUSH1 0xa0
0x344 PUSH1 0x2
0x346 EXP
0x347 SUB
0x348 AND
0x349 SWAP2
0x34a POP
0x34b DUP3
0x34c ISZERO
0x34d ISZERO
0x34e PUSH2 0x420
0x351 JUMPI
---
0x33c: JUMPDEST 
0x33d: V331 = 0x1
0x33f: V332 = S[0x1]
0x340: V333 = 0x1
0x342: V334 = 0xa0
0x344: V335 = 0x2
0x346: V336 = EXP 0x2 0xa0
0x347: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x348: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x34c: V339 = ISZERO V136
0x34d: V340 = ISZERO V339
0x34e: V341 = 0x420
0x351: JUMPI 0x420 V340
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, V338, S0]
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, 0x0]

================================

Block 0x352
[0x352:0x3f9]
---
Predecessors: [0x33c]
Successors: [0x3fa, 0x3fe]
---
0x352 DUP2
0x353 PUSH1 0x1
0x355 PUSH1 0xa0
0x357 PUSH1 0x2
0x359 EXP
0x35a SUB
0x35b AND
0x35c PUSH4 0xfb6e155f
0x361 DUP15
0x362 DUP15
0x363 DUP15
0x364 DUP15
0x365 DUP15
0x366 DUP15
0x367 DUP15
0x368 DUP15
0x369 DUP15
0x36a DUP15
0x36b PUSH1 0x0
0x36d PUSH1 0x40
0x36f MLOAD
0x370 PUSH1 0x20
0x372 ADD
0x373 MSTORE
0x374 PUSH1 0x40
0x376 MLOAD
0x377 PUSH1 0xe0
0x379 PUSH1 0x2
0x37b EXP
0x37c PUSH4 0xffffffff
0x381 DUP14
0x382 AND
0x383 MUL
0x384 DUP2
0x385 MSTORE
0x386 PUSH1 0x1
0x388 PUSH1 0xa0
0x38a PUSH1 0x2
0x38c EXP
0x38d SUB
0x38e SWAP11
0x38f DUP12
0x390 AND
0x391 PUSH1 0x4
0x393 DUP3
0x394 ADD
0x395 MSTORE
0x396 PUSH1 0x24
0x398 DUP2
0x399 ADD
0x39a SWAP10
0x39b SWAP1
0x39c SWAP10
0x39d MSTORE
0x39e SWAP7
0x39f DUP10
0x3a0 AND
0x3a1 PUSH1 0x44
0x3a3 DUP10
0x3a4 ADD
0x3a5 MSTORE
0x3a6 PUSH1 0x64
0x3a8 DUP9
0x3a9 ADD
0x3aa SWAP6
0x3ab SWAP1
0x3ac SWAP6
0x3ad MSTORE
0x3ae PUSH1 0x84
0x3b0 DUP8
0x3b1 ADD
0x3b2 SWAP4
0x3b3 SWAP1
0x3b4 SWAP4
0x3b5 MSTORE
0x3b6 PUSH1 0xa4
0x3b8 DUP7
0x3b9 ADD
0x3ba SWAP2
0x3bb SWAP1
0x3bc SWAP2
0x3bd MSTORE
0x3be SWAP1
0x3bf SWAP5
0x3c0 AND
0x3c1 PUSH1 0xc4
0x3c3 DUP5
0x3c4 ADD
0x3c5 MSTORE
0x3c6 PUSH1 0xff
0x3c8 SWAP1
0x3c9 SWAP4
0x3ca AND
0x3cb PUSH1 0xe4
0x3cd DUP4
0x3ce ADD
0x3cf MSTORE
0x3d0 PUSH2 0x104
0x3d3 DUP3
0x3d4 ADD
0x3d5 SWAP3
0x3d6 SWAP1
0x3d7 SWAP3
0x3d8 MSTORE
0x3d9 PUSH2 0x124
0x3dc DUP2
0x3dd ADD
0x3de SWAP2
0x3df SWAP1
0x3e0 SWAP2
0x3e1 MSTORE
0x3e2 PUSH2 0x144
0x3e5 ADD
0x3e6 PUSH1 0x20
0x3e8 PUSH1 0x40
0x3ea MLOAD
0x3eb DUP1
0x3ec DUP4
0x3ed SUB
0x3ee DUP2
0x3ef PUSH1 0x0
0x3f1 DUP8
0x3f2 DUP1
0x3f3 EXTCODESIZE
0x3f4 ISZERO
0x3f5 ISZERO
0x3f6 PUSH2 0x3fe
0x3f9 JUMPI
---
0x353: V342 = 0x1
0x355: V343 = 0xa0
0x357: V344 = 0x2
0x359: V345 = EXP 0x2 0xa0
0x35a: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35b: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x35c: V348 = 0xfb6e155f
0x36b: V349 = 0x0
0x36d: V350 = 0x40
0x36f: V351 = M[0x40]
0x370: V352 = 0x20
0x372: V353 = ADD 0x20 V351
0x373: M[V353] = 0x0
0x374: V354 = 0x40
0x376: V355 = M[0x40]
0x377: V356 = 0xe0
0x379: V357 = 0x2
0x37b: V358 = EXP 0x2 0xe0
0x37c: V359 = 0xffffffff
0x382: V360 = AND 0xfb6e155f 0xffffffff
0x383: V361 = MUL 0xfb6e155f 0x100000000000000000000000000000000000000000000000000000000
0x385: M[V355] = 0xfb6e155f00000000000000000000000000000000000000000000000000000000
0x386: V362 = 0x1
0x388: V363 = 0xa0
0x38a: V364 = 0x2
0x38c: V365 = EXP 0x2 0xa0
0x38d: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x390: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x391: V368 = 0x4
0x394: V369 = ADD V355 0x4
0x395: M[V369] = V367
0x396: V370 = 0x24
0x399: V371 = ADD V355 0x24
0x39d: M[V371] = V114
0x3a0: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x3a1: V373 = 0x44
0x3a4: V374 = ADD V355 0x44
0x3a5: M[V374] = V372
0x3a6: V375 = 0x64
0x3a9: V376 = ADD V355 0x64
0x3ad: M[V376] = V119
0x3ae: V377 = 0x84
0x3b1: V378 = ADD V355 0x84
0x3b5: M[V378] = V121
0x3b6: V379 = 0xa4
0x3b9: V380 = ADD V355 0xa4
0x3bd: M[V380] = V123
0x3c0: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x3c1: V382 = 0xc4
0x3c4: V383 = ADD V355 0xc4
0x3c5: M[V383] = V381
0x3c6: V384 = 0xff
0x3ca: V385 = AND V130 0xff
0x3cb: V386 = 0xe4
0x3ce: V387 = ADD V355 0xe4
0x3cf: M[V387] = V385
0x3d0: V388 = 0x104
0x3d4: V389 = ADD V355 0x104
0x3d8: M[V389] = V132
0x3d9: V390 = 0x124
0x3dd: V391 = ADD V355 0x124
0x3e1: M[V391] = V134
0x3e2: V392 = 0x144
0x3e5: V393 = ADD 0x144 V355
0x3e6: V394 = 0x20
0x3e8: V395 = 0x40
0x3ea: V396 = M[0x40]
0x3ed: V397 = SUB V393 V396
0x3ef: V398 = 0x0
0x3f3: V399 = EXTCODESIZE V347
0x3f4: V400 = ISZERO V399
0x3f5: V401 = ISZERO V400
0x3f6: V402 = 0x3fe
0x3f9: JUMPI 0x3fe V401
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V347, 0xfb6e155f, V393, 0x20, V396, V397, V396, 0x0, V347]
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, 0x0, V347, 0xfb6e155f, V393, 0x20, V396, V397, V396, 0x0, V347]

================================

Block 0x3fa
[0x3fa:0x3fd]
---
Predecessors: [0x352]
Successors: []
---
0x3fa PUSH1 0x0
0x3fc DUP1
0x3fd REVERT
---
0x3fa: V403 = 0x0
0x3fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, 0x0, V347, 0xfb6e155f, V393, 0x20, V396, V397, V396, 0x0, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, 0x0, V347, 0xfb6e155f, V393, 0x20, V396, V397, V396, 0x0, V347]

================================

Block 0x3fe
[0x3fe:0x40a]
---
Predecessors: [0x352]
Successors: [0x40b, 0x40f]
---
0x3fe JUMPDEST
0x3ff PUSH2 0x2c6
0x402 GAS
0x403 SUB
0x404 CALL
0x405 ISZERO
0x406 ISZERO
0x407 PUSH2 0x40f
0x40a JUMPI
---
0x3fe: JUMPDEST 
0x3ff: V404 = 0x2c6
0x402: V405 = GAS
0x403: V406 = SUB V405 0x2c6
0x404: V407 = CALL V406 V347 0x0 V396 V397 V396 0x20
0x405: V408 = ISZERO V407
0x406: V409 = ISZERO V408
0x407: V410 = 0x40f
0x40a: JUMPI 0x40f V409
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, 0x0, V347, 0xfb6e155f, V393, 0x20, V396, V397, V396, 0x0, V347]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, 0x0, V347, 0xfb6e155f, V393]

================================

Block 0x40b
[0x40b:0x40e]
---
Predecessors: [0x3fe]
Successors: []
---
0x40b PUSH1 0x0
0x40d DUP1
0x40e REVERT
---
0x40b: V411 = 0x0
0x40e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, 0x0, V347, 0xfb6e155f, V393]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, 0x0, V347, 0xfb6e155f, V393]

================================

Block 0x40f
[0x40f:0x41f]
---
Predecessors: [0x3fe]
Successors: [0x423]
---
0x40f JUMPDEST
0x410 POP
0x411 POP
0x412 POP
0x413 PUSH1 0x40
0x415 MLOAD
0x416 DUP1
0x417 MLOAD
0x418 SWAP1
0x419 POP
0x41a SWAP1
0x41b POP
0x41c PUSH2 0x423
0x41f JUMP
---
0x40f: JUMPDEST 
0x413: V412 = 0x40
0x415: V413 = M[0x40]
0x417: V414 = M[V413]
0x41c: V415 = 0x423
0x41f: JUMP 0x423
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, 0x0, V347, 0xfb6e155f, V393]
Stack pops: 4
Stack additions: [V414]
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, V414]

================================

Block 0x420
[0x420:0x422]
---
Predecessors: [0x33c]
Successors: [0x423]
---
0x420 JUMPDEST
0x421 POP
0x422 DUP2
---
0x420: JUMPDEST 
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, V136]

================================

Block 0x423
[0x423:0x42c]
---
Predecessors: [0x40f, 0x420]
Successors: [0x42d, 0x635]
---
0x423 JUMPDEST
0x424 PUSH1 0x0
0x426 DUP2
0x427 GT
0x428 ISZERO
0x429 PUSH2 0x635
0x42c JUMPI
---
0x423: JUMPDEST 
0x424: V416 = 0x0
0x427: V417 = GT S0 0x0
0x428: V418 = ISZERO V417
0x429: V419 = 0x635
0x42c: JUMPI 0x635 V418
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]

================================

Block 0x42d
[0x42d:0x4ff]
---
Predecessors: [0x423]
Successors: [0x500, 0x504]
---
0x42d PUSH1 0x0
0x42f DUP1
0x430 MLOAD
0x431 PUSH1 0x20
0x433 PUSH2 0x6ed
0x436 DUP4
0x437 CODECOPY
0x438 DUP2
0x439 MLOAD
0x43a SWAP2
0x43b MSTORE
0x43c PUSH1 0x0
0x43e PUSH1 0x40
0x440 MLOAD
0x441 SWAP1
0x442 DUP2
0x443 MSTORE
0x444 PUSH1 0x20
0x446 ADD
0x447 PUSH1 0x40
0x449 MLOAD
0x44a DUP1
0x44b SWAP2
0x44c SUB
0x44d SWAP1
0x44e LOG1
0x44f DUP2
0x450 PUSH1 0x1
0x452 PUSH1 0xa0
0x454 PUSH1 0x2
0x456 EXP
0x457 SUB
0x458 AND
0x459 PUSH4 0x6c86888b
0x45e DUP15
0x45f DUP15
0x460 DUP15
0x461 DUP15
0x462 DUP15
0x463 DUP15
0x464 DUP15
0x465 DUP15
0x466 DUP15
0x467 DUP15
0x468 DUP13
0x469 ADDRESS
0x46a PUSH1 0x0
0x46c PUSH1 0x40
0x46e MLOAD
0x46f PUSH1 0x20
0x471 ADD
0x472 MSTORE
0x473 PUSH1 0x40
0x475 MLOAD
0x476 PUSH1 0xe0
0x478 PUSH1 0x2
0x47a EXP
0x47b PUSH4 0xffffffff
0x480 DUP16
0x481 AND
0x482 MUL
0x483 DUP2
0x484 MSTORE
0x485 PUSH1 0x1
0x487 PUSH1 0xa0
0x489 PUSH1 0x2
0x48b EXP
0x48c SUB
0x48d SWAP13
0x48e DUP14
0x48f AND
0x490 PUSH1 0x4
0x492 DUP3
0x493 ADD
0x494 MSTORE
0x495 PUSH1 0x24
0x497 DUP2
0x498 ADD
0x499 SWAP12
0x49a SWAP1
0x49b SWAP12
0x49c MSTORE
0x49d SWAP9
0x49e DUP12
0x49f AND
0x4a0 PUSH1 0x44
0x4a2 DUP12
0x4a3 ADD
0x4a4 MSTORE
0x4a5 PUSH1 0x64
0x4a7 DUP11
0x4a8 ADD
0x4a9 SWAP8
0x4aa SWAP1
0x4ab SWAP8
0x4ac MSTORE
0x4ad PUSH1 0x84
0x4af DUP10
0x4b0 ADD
0x4b1 SWAP6
0x4b2 SWAP1
0x4b3 SWAP6
0x4b4 MSTORE
0x4b5 PUSH1 0xa4
0x4b7 DUP9
0x4b8 ADD
0x4b9 SWAP4
0x4ba SWAP1
0x4bb SWAP4
0x4bc MSTORE
0x4bd SWAP1
0x4be DUP8
0x4bf AND
0x4c0 PUSH1 0xc4
0x4c2 DUP8
0x4c3 ADD
0x4c4 MSTORE
0x4c5 PUSH1 0xff
0x4c7 AND
0x4c8 PUSH1 0xe4
0x4ca DUP7
0x4cb ADD
0x4cc MSTORE
0x4cd PUSH2 0x104
0x4d0 DUP6
0x4d1 ADD
0x4d2 MSTORE
0x4d3 PUSH2 0x124
0x4d6 DUP5
0x4d7 ADD
0x4d8 MSTORE
0x4d9 PUSH2 0x144
0x4dc DUP4
0x4dd ADD
0x4de MSTORE
0x4df SWAP1
0x4e0 SWAP2
0x4e1 AND
0x4e2 PUSH2 0x164
0x4e5 DUP3
0x4e6 ADD
0x4e7 MSTORE
0x4e8 PUSH2 0x184
0x4eb ADD
0x4ec PUSH1 0x20
0x4ee PUSH1 0x40
0x4f0 MLOAD
0x4f1 DUP1
0x4f2 DUP4
0x4f3 SUB
0x4f4 DUP2
0x4f5 PUSH1 0x0
0x4f7 DUP8
0x4f8 DUP1
0x4f9 EXTCODESIZE
0x4fa ISZERO
0x4fb ISZERO
0x4fc PUSH2 0x504
0x4ff JUMPI
---
0x42d: V420 = 0x0
0x430: V421 = M[0x0]
0x431: V422 = 0x20
0x433: V423 = 0x6ed
0x437: CODECOPY 0x0 0x6ed 0x20
0x439: V424 = M[0x0]
0x43b: M[0x0] = V421
0x43c: V425 = 0x0
0x43e: V426 = 0x40
0x440: V427 = M[0x40]
0x443: M[V427] = 0x0
0x444: V428 = 0x20
0x446: V429 = ADD 0x20 V427
0x447: V430 = 0x40
0x449: V431 = M[0x40]
0x44c: V432 = SUB V429 V431
0x44e: LOG V431 V432 V424
0x450: V433 = 0x1
0x452: V434 = 0xa0
0x454: V435 = 0x2
0x456: V436 = EXP 0x2 0xa0
0x457: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x458: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x459: V439 = 0x6c86888b
0x469: V440 = ADDRESS
0x46a: V441 = 0x0
0x46c: V442 = 0x40
0x46e: V443 = M[0x40]
0x46f: V444 = 0x20
0x471: V445 = ADD 0x20 V443
0x472: M[V445] = 0x0
0x473: V446 = 0x40
0x475: V447 = M[0x40]
0x476: V448 = 0xe0
0x478: V449 = 0x2
0x47a: V450 = EXP 0x2 0xe0
0x47b: V451 = 0xffffffff
0x481: V452 = AND 0x6c86888b 0xffffffff
0x482: V453 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x484: M[V447] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x485: V454 = 0x1
0x487: V455 = 0xa0
0x489: V456 = 0x2
0x48b: V457 = EXP 0x2 0xa0
0x48c: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48f: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x490: V460 = 0x4
0x493: V461 = ADD V447 0x4
0x494: M[V461] = V459
0x495: V462 = 0x24
0x498: V463 = ADD V447 0x24
0x49c: M[V463] = V114
0x49f: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x4a0: V465 = 0x44
0x4a3: V466 = ADD V447 0x44
0x4a4: M[V466] = V464
0x4a5: V467 = 0x64
0x4a8: V468 = ADD V447 0x64
0x4ac: M[V468] = V119
0x4ad: V469 = 0x84
0x4b0: V470 = ADD V447 0x84
0x4b4: M[V470] = V121
0x4b5: V471 = 0xa4
0x4b8: V472 = ADD V447 0xa4
0x4bc: M[V472] = V123
0x4bf: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x4c0: V474 = 0xc4
0x4c3: V475 = ADD V447 0xc4
0x4c4: M[V475] = V473
0x4c5: V476 = 0xff
0x4c7: V477 = AND 0xff V130
0x4c8: V478 = 0xe4
0x4cb: V479 = ADD V447 0xe4
0x4cc: M[V479] = V477
0x4cd: V480 = 0x104
0x4d1: V481 = ADD V447 0x104
0x4d2: M[V481] = V132
0x4d3: V482 = 0x124
0x4d7: V483 = ADD V447 0x124
0x4d8: M[V483] = V134
0x4d9: V484 = 0x144
0x4dd: V485 = ADD V447 0x144
0x4de: M[V485] = S0
0x4e1: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x4e2: V487 = 0x164
0x4e6: V488 = ADD V447 0x164
0x4e7: M[V488] = V486
0x4e8: V489 = 0x184
0x4eb: V490 = ADD 0x184 V447
0x4ec: V491 = 0x20
0x4ee: V492 = 0x40
0x4f0: V493 = M[0x40]
0x4f3: V494 = SUB V490 V493
0x4f5: V495 = 0x0
0x4f9: V496 = EXTCODESIZE V438
0x4fa: V497 = ISZERO V496
0x4fb: V498 = ISZERO V497
0x4fc: V499 = 0x504
0x4ff: JUMPI 0x504 V498
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V438, 0x6c86888b, V490, 0x20, V493, V494, V493, 0x0, V438]
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0, V438, 0x6c86888b, V490, 0x20, V493, V494, V493, 0x0, V438]

================================

Block 0x500
[0x500:0x503]
---
Predecessors: [0x42d]
Successors: []
---
0x500 PUSH1 0x0
0x502 DUP1
0x503 REVERT
---
0x500: V500 = 0x0
0x503: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S9, V438, 0x6c86888b, V490, 0x20, V493, V494, V493, 0x0, V438]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S9, V438, 0x6c86888b, V490, 0x20, V493, V494, V493, 0x0, V438]

================================

Block 0x504
[0x504:0x510]
---
Predecessors: [0x42d]
Successors: [0x511, 0x515]
---
0x504 JUMPDEST
0x505 PUSH2 0x2c6
0x508 GAS
0x509 SUB
0x50a CALL
0x50b ISZERO
0x50c ISZERO
0x50d PUSH2 0x515
0x510 JUMPI
---
0x504: JUMPDEST 
0x505: V501 = 0x2c6
0x508: V502 = GAS
0x509: V503 = SUB V502 0x2c6
0x50a: V504 = CALL V503 V438 0x0 V493 V494 V493 0x20
0x50b: V505 = ISZERO V504
0x50c: V506 = ISZERO V505
0x50d: V507 = 0x515
0x510: JUMPI 0x515 V506
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S9, V438, 0x6c86888b, V490, 0x20, V493, V494, V493, 0x0, V438]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S9, V438, 0x6c86888b, V490]

================================

Block 0x511
[0x511:0x514]
---
Predecessors: [0x504]
Successors: []
---
0x511 PUSH1 0x0
0x513 DUP1
0x514 REVERT
---
0x511: V508 = 0x0
0x514: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S3, V438, 0x6c86888b, V490]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S3, V438, 0x6c86888b, V490]

================================

Block 0x515
[0x515:0x524]
---
Predecessors: [0x504]
Successors: [0x525, 0x60d]
---
0x515 JUMPDEST
0x516 POP
0x517 POP
0x518 POP
0x519 PUSH1 0x40
0x51b MLOAD
0x51c DUP1
0x51d MLOAD
0x51e SWAP1
0x51f POP
0x520 ISZERO
0x521 PUSH2 0x60d
0x524 JUMPI
---
0x515: JUMPDEST 
0x519: V509 = 0x40
0x51b: V510 = M[0x40]
0x51d: V511 = M[V510]
0x520: V512 = ISZERO V511
0x521: V513 = 0x60d
0x524: JUMPI 0x60d V512
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S3, V438, 0x6c86888b, V490]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S3]

================================

Block 0x525
[0x525:0x5ef]
---
Predecessors: [0x515]
Successors: [0x5f0, 0x5f4]
---
0x525 PUSH1 0x0
0x527 DUP1
0x528 MLOAD
0x529 PUSH1 0x20
0x52b PUSH2 0x6ed
0x52e DUP4
0x52f CODECOPY
0x530 DUP2
0x531 MLOAD
0x532 SWAP2
0x533 MSTORE
0x534 PUSH1 0x10
0x536 PUSH1 0x40
0x538 MLOAD
0x539 SWAP1
0x53a DUP2
0x53b MSTORE
0x53c PUSH1 0x20
0x53e ADD
0x53f PUSH1 0x40
0x541 MLOAD
0x542 DUP1
0x543 SWAP2
0x544 SUB
0x545 SWAP1
0x546 LOG1
0x547 DUP2
0x548 PUSH1 0x1
0x54a PUSH1 0xa0
0x54c PUSH1 0x2
0x54e EXP
0x54f SUB
0x550 AND
0x551 PUSH4 0xa19b14a
0x556 DUP15
0x557 DUP15
0x558 DUP15
0x559 DUP15
0x55a DUP15
0x55b DUP15
0x55c DUP15
0x55d DUP15
0x55e DUP15
0x55f DUP15
0x560 DUP13
0x561 PUSH1 0x40
0x563 MLOAD
0x564 PUSH1 0xe0
0x566 PUSH1 0x2
0x568 EXP
0x569 PUSH4 0xffffffff
0x56e DUP15
0x56f AND
0x570 MUL
0x571 DUP2
0x572 MSTORE
0x573 PUSH1 0x1
0x575 PUSH1 0xa0
0x577 PUSH1 0x2
0x579 EXP
0x57a SUB
0x57b SWAP12
0x57c DUP13
0x57d AND
0x57e PUSH1 0x4
0x580 DUP3
0x581 ADD
0x582 MSTORE
0x583 PUSH1 0x24
0x585 DUP2
0x586 ADD
0x587 SWAP11
0x588 SWAP1
0x589 SWAP11
0x58a MSTORE
0x58b SWAP8
0x58c DUP11
0x58d AND
0x58e PUSH1 0x44
0x590 DUP11
0x591 ADD
0x592 MSTORE
0x593 PUSH1 0x64
0x595 DUP10
0x596 ADD
0x597 SWAP7
0x598 SWAP1
0x599 SWAP7
0x59a MSTORE
0x59b PUSH1 0x84
0x59d DUP9
0x59e ADD
0x59f SWAP5
0x5a0 SWAP1
0x5a1 SWAP5
0x5a2 MSTORE
0x5a3 PUSH1 0xa4
0x5a5 DUP8
0x5a6 ADD
0x5a7 SWAP3
0x5a8 SWAP1
0x5a9 SWAP3
0x5aa MSTORE
0x5ab SWAP1
0x5ac SWAP6
0x5ad AND
0x5ae PUSH1 0xc4
0x5b0 DUP6
0x5b1 ADD
0x5b2 MSTORE
0x5b3 PUSH1 0xff
0x5b5 SWAP1
0x5b6 SWAP5
0x5b7 AND
0x5b8 PUSH1 0xe4
0x5ba DUP5
0x5bb ADD
0x5bc MSTORE
0x5bd PUSH2 0x104
0x5c0 DUP4
0x5c1 ADD
0x5c2 SWAP4
0x5c3 SWAP1
0x5c4 SWAP4
0x5c5 MSTORE
0x5c6 PUSH2 0x124
0x5c9 DUP3
0x5ca ADD
0x5cb SWAP3
0x5cc SWAP1
0x5cd SWAP3
0x5ce MSTORE
0x5cf PUSH2 0x144
0x5d2 DUP2
0x5d3 ADD
0x5d4 SWAP2
0x5d5 SWAP1
0x5d6 SWAP2
0x5d7 MSTORE
0x5d8 PUSH2 0x164
0x5db ADD
0x5dc PUSH1 0x0
0x5de PUSH1 0x40
0x5e0 MLOAD
0x5e1 DUP1
0x5e2 DUP4
0x5e3 SUB
0x5e4 DUP2
0x5e5 PUSH1 0x0
0x5e7 DUP8
0x5e8 DUP1
0x5e9 EXTCODESIZE
0x5ea ISZERO
0x5eb ISZERO
0x5ec PUSH2 0x5f4
0x5ef JUMPI
---
0x525: V514 = 0x0
0x528: V515 = M[0x0]
0x529: V516 = 0x20
0x52b: V517 = 0x6ed
0x52f: CODECOPY 0x0 0x6ed 0x20
0x531: V518 = M[0x0]
0x533: M[0x0] = V515
0x534: V519 = 0x10
0x536: V520 = 0x40
0x538: V521 = M[0x40]
0x53b: M[V521] = 0x10
0x53c: V522 = 0x20
0x53e: V523 = ADD 0x20 V521
0x53f: V524 = 0x40
0x541: V525 = M[0x40]
0x544: V526 = SUB V523 V525
0x546: LOG V525 V526 V518
0x548: V527 = 0x1
0x54a: V528 = 0xa0
0x54c: V529 = 0x2
0x54e: V530 = EXP 0x2 0xa0
0x54f: V531 = SUB 0x10000000000000000000000000000000000000000 0x1
0x550: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x551: V533 = 0xa19b14a
0x561: V534 = 0x40
0x563: V535 = M[0x40]
0x564: V536 = 0xe0
0x566: V537 = 0x2
0x568: V538 = EXP 0x2 0xe0
0x569: V539 = 0xffffffff
0x56f: V540 = AND 0xa19b14a 0xffffffff
0x570: V541 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x572: M[V535] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x573: V542 = 0x1
0x575: V543 = 0xa0
0x577: V544 = 0x2
0x579: V545 = EXP 0x2 0xa0
0x57a: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57d: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x57e: V548 = 0x4
0x581: V549 = ADD V535 0x4
0x582: M[V549] = V547
0x583: V550 = 0x24
0x586: V551 = ADD V535 0x24
0x58a: M[V551] = V114
0x58d: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x58e: V553 = 0x44
0x591: V554 = ADD V535 0x44
0x592: M[V554] = V552
0x593: V555 = 0x64
0x596: V556 = ADD V535 0x64
0x59a: M[V556] = V119
0x59b: V557 = 0x84
0x59e: V558 = ADD V535 0x84
0x5a2: M[V558] = V121
0x5a3: V559 = 0xa4
0x5a6: V560 = ADD V535 0xa4
0x5aa: M[V560] = V123
0x5ad: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x5ae: V562 = 0xc4
0x5b1: V563 = ADD V535 0xc4
0x5b2: M[V563] = V561
0x5b3: V564 = 0xff
0x5b7: V565 = AND V130 0xff
0x5b8: V566 = 0xe4
0x5bb: V567 = ADD V535 0xe4
0x5bc: M[V567] = V565
0x5bd: V568 = 0x104
0x5c1: V569 = ADD V535 0x104
0x5c5: M[V569] = V132
0x5c6: V570 = 0x124
0x5ca: V571 = ADD V535 0x124
0x5ce: M[V571] = V134
0x5cf: V572 = 0x144
0x5d3: V573 = ADD V535 0x144
0x5d7: M[V573] = S0
0x5d8: V574 = 0x164
0x5db: V575 = ADD 0x164 V535
0x5dc: V576 = 0x0
0x5de: V577 = 0x40
0x5e0: V578 = M[0x40]
0x5e3: V579 = SUB V575 V578
0x5e5: V580 = 0x0
0x5e9: V581 = EXTCODESIZE V532
0x5ea: V582 = ISZERO V581
0x5eb: V583 = ISZERO V582
0x5ec: V584 = 0x5f4
0x5ef: JUMPI 0x5f4 V583
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V532, 0xa19b14a, V575, 0x0, V578, V579, V578, 0x0, V532]
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0, V532, 0xa19b14a, V575, 0x0, V578, V579, V578, 0x0, V532]

================================

Block 0x5f0
[0x5f0:0x5f3]
---
Predecessors: [0x525]
Successors: []
---
0x5f0 PUSH1 0x0
0x5f2 DUP1
0x5f3 REVERT
---
0x5f0: V585 = 0x0
0x5f3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S9, V532, 0xa19b14a, V575, 0x0, V578, V579, V578, 0x0, V532]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S9, V532, 0xa19b14a, V575, 0x0, V578, V579, V578, 0x0, V532]

================================

Block 0x5f4
[0x5f4:0x600]
---
Predecessors: [0x525]
Successors: [0x601, 0x605]
---
0x5f4 JUMPDEST
0x5f5 PUSH2 0x2c6
0x5f8 GAS
0x5f9 SUB
0x5fa CALL
0x5fb ISZERO
0x5fc ISZERO
0x5fd PUSH2 0x605
0x600 JUMPI
---
0x5f4: JUMPDEST 
0x5f5: V586 = 0x2c6
0x5f8: V587 = GAS
0x5f9: V588 = SUB V587 0x2c6
0x5fa: V589 = CALL V588 V532 0x0 V578 V579 V578 0x0
0x5fb: V590 = ISZERO V589
0x5fc: V591 = ISZERO V590
0x5fd: V592 = 0x605
0x600: JUMPI 0x605 V591
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S9, V532, 0xa19b14a, V575, 0x0, V578, V579, V578, 0x0, V532]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S9, V532, 0xa19b14a, V575]

================================

Block 0x601
[0x601:0x604]
---
Predecessors: [0x5f4]
Successors: []
---
0x601 PUSH1 0x0
0x603 DUP1
0x604 REVERT
---
0x601: V593 = 0x0
0x604: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S3, V532, 0xa19b14a, V575]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S3, V532, 0xa19b14a, V575]

================================

Block 0x605
[0x605:0x60c]
---
Predecessors: [0x5f4]
Successors: [0x630]
---
0x605 JUMPDEST
0x606 POP
0x607 POP
0x608 POP
0x609 PUSH2 0x630
0x60c JUMP
---
0x605: JUMPDEST 
0x609: V594 = 0x630
0x60c: JUMP 0x630
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S3, V532, 0xa19b14a, V575]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S3]

================================

Block 0x60d
[0x60d:0x62f]
---
Predecessors: [0x515]
Successors: [0x630]
---
0x60d JUMPDEST
0x60e PUSH1 0x0
0x610 DUP1
0x611 MLOAD
0x612 PUSH1 0x20
0x614 PUSH2 0x6ed
0x617 DUP4
0x618 CODECOPY
0x619 DUP2
0x61a MLOAD
0x61b SWAP2
0x61c MSTORE
0x61d PUSH1 0x11
0x61f PUSH1 0x40
0x621 MLOAD
0x622 SWAP1
0x623 DUP2
0x624 MSTORE
0x625 PUSH1 0x20
0x627 ADD
0x628 PUSH1 0x40
0x62a MLOAD
0x62b DUP1
0x62c SWAP2
0x62d SUB
0x62e SWAP1
0x62f LOG1
---
0x60d: JUMPDEST 
0x60e: V595 = 0x0
0x611: V596 = M[0x0]
0x612: V597 = 0x20
0x614: V598 = 0x6ed
0x618: CODECOPY 0x0 0x6ed 0x20
0x61a: V599 = M[0x0]
0x61c: M[0x0] = V596
0x61d: V600 = 0x11
0x61f: V601 = 0x40
0x621: V602 = M[0x40]
0x624: M[V602] = 0x11
0x625: V603 = 0x20
0x627: V604 = ADD 0x20 V602
0x628: V605 = 0x40
0x62a: V606 = M[0x40]
0x62d: V607 = SUB V604 V606
0x62f: LOG V606 V607 V599
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]

================================

Block 0x630
[0x630:0x634]
---
Predecessors: [0x605, 0x60d]
Successors: [0x658]
---
0x630 JUMPDEST
0x631 PUSH2 0x658
0x634 JUMP
---
0x630: JUMPDEST 
0x631: V608 = 0x658
0x634: JUMP 0x658
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]

================================

Block 0x635
[0x635:0x657]
---
Predecessors: [0x423]
Successors: [0x658]
---
0x635 JUMPDEST
0x636 PUSH1 0x0
0x638 DUP1
0x639 MLOAD
0x63a PUSH1 0x20
0x63c PUSH2 0x6ed
0x63f DUP4
0x640 CODECOPY
0x641 DUP2
0x642 MLOAD
0x643 SWAP2
0x644 MSTORE
0x645 PUSH1 0x1
0x647 PUSH1 0x40
0x649 MLOAD
0x64a SWAP1
0x64b DUP2
0x64c MSTORE
0x64d PUSH1 0x20
0x64f ADD
0x650 PUSH1 0x40
0x652 MLOAD
0x653 DUP1
0x654 SWAP2
0x655 SUB
0x656 SWAP1
0x657 LOG1
---
0x635: JUMPDEST 
0x636: V609 = 0x0
0x639: V610 = M[0x0]
0x63a: V611 = 0x20
0x63c: V612 = 0x6ed
0x640: CODECOPY 0x0 0x6ed 0x20
0x642: V613 = M[0x0]
0x644: M[0x0] = V610
0x645: V614 = 0x1
0x647: V615 = 0x40
0x649: V616 = M[0x40]
0x64c: M[V616] = 0x1
0x64d: V617 = 0x20
0x64f: V618 = ADD 0x20 V616
0x650: V619 = 0x40
0x652: V620 = M[0x40]
0x655: V621 = SUB V618 V620
0x657: LOG V620 V621 V613
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]

================================

Block 0x658
[0x658:0x658]
---
Predecessors: [0x630, 0x635]
Successors: [0x659]
---
0x658 JUMPDEST
---
0x658: JUMPDEST 
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]

================================

Block 0x659
[0x659:0x659]
---
Predecessors: [0x658]
Successors: [0x65a]
---
0x659 JUMPDEST
---
0x659: JUMPDEST 
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]

================================

Block 0x65a
[0x65a:0x668]
---
Predecessors: [0x659]
Successors: [0x79]
---
0x65a JUMPDEST
0x65b POP
0x65c POP
0x65d POP
0x65e POP
0x65f POP
0x660 POP
0x661 POP
0x662 POP
0x663 POP
0x664 POP
0x665 POP
0x666 POP
0x667 POP
0x668 JUMP
---
0x65a: JUMPDEST 
0x668: JUMP 0x79
---
Entry stack: [V12, 0x79, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V338, S0]
Stack pops: 14
Stack additions: []
Exit stack: [V12]

================================

Block 0x669
[0x669:0x669]
---
Predecessors: []
Successors: [0x66a]
---
0x669 JUMPDEST
---
0x669: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x66a
[0x66a:0x66b]
---
Predecessors: [0x669]
Successors: []
Has unresolved jump.
---
0x66a JUMPDEST
0x66b JUMP
---
0x66a: JUMPDEST 
0x66b: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x66c
[0x66c:0x683]
---
Predecessors: [0x184]
Successors: [0x684, 0x688]
---
0x66c JUMPDEST
0x66d PUSH1 0x0
0x66f DUP1
0x670 SLOAD
0x671 CALLER
0x672 PUSH1 0x1
0x674 PUSH1 0xa0
0x676 PUSH1 0x2
0x678 EXP
0x679 SUB
0x67a SWAP1
0x67b DUP2
0x67c AND
0x67d SWAP2
0x67e AND
0x67f EQ
0x680 PUSH2 0x688
0x683 JUMPI
---
0x66c: JUMPDEST 
0x66d: V622 = 0x0
0x670: V623 = S[0x0]
0x671: V624 = CALLER
0x672: V625 = 0x1
0x674: V626 = 0xa0
0x676: V627 = 0x2
0x678: V628 = EXP 0x2 0xa0
0x679: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67c: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0x67e: V631 = AND V623 0xffffffffffffffffffffffffffffffffffffffff
0x67f: V632 = EQ V631 V630
0x680: V633 = 0x688
0x683: JUMPI 0x688 V632
---
Entry stack: [V12, 0x79, V146]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x79, V146, 0x0]

================================

Block 0x684
[0x684:0x687]
---
Predecessors: [0x66c]
Successors: []
---
0x684 PUSH1 0x0
0x686 DUP1
0x687 REVERT
---
0x684: V634 = 0x0
0x687: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V146, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V146, 0x0]

================================

Block 0x688
[0x688:0x6cd]
---
Predecessors: [0x66c]
Successors: [0x6ce, 0x6d2]
---
0x688 JUMPDEST
0x689 POP
0x68a PUSH1 0x1
0x68c SLOAD
0x68d PUSH1 0x1
0x68f PUSH1 0xa0
0x691 PUSH1 0x2
0x693 EXP
0x694 SUB
0x695 AND
0x696 DUP1
0x697 PUSH4 0x2e1a7d4d
0x69c DUP4
0x69d PUSH1 0x40
0x69f MLOAD
0x6a0 PUSH1 0xe0
0x6a2 PUSH1 0x2
0x6a4 EXP
0x6a5 PUSH4 0xffffffff
0x6aa DUP5
0x6ab AND
0x6ac MUL
0x6ad DUP2
0x6ae MSTORE
0x6af PUSH1 0x4
0x6b1 DUP2
0x6b2 ADD
0x6b3 SWAP2
0x6b4 SWAP1
0x6b5 SWAP2
0x6b6 MSTORE
0x6b7 PUSH1 0x24
0x6b9 ADD
0x6ba PUSH1 0x0
0x6bc PUSH1 0x40
0x6be MLOAD
0x6bf DUP1
0x6c0 DUP4
0x6c1 SUB
0x6c2 DUP2
0x6c3 PUSH1 0x0
0x6c5 DUP8
0x6c6 DUP1
0x6c7 EXTCODESIZE
0x6c8 ISZERO
0x6c9 ISZERO
0x6ca PUSH2 0x6d2
0x6cd JUMPI
---
0x688: JUMPDEST 
0x68a: V635 = 0x1
0x68c: V636 = S[0x1]
0x68d: V637 = 0x1
0x68f: V638 = 0xa0
0x691: V639 = 0x2
0x693: V640 = EXP 0x2 0xa0
0x694: V641 = SUB 0x10000000000000000000000000000000000000000 0x1
0x695: V642 = AND 0xffffffffffffffffffffffffffffffffffffffff V636
0x697: V643 = 0x2e1a7d4d
0x69d: V644 = 0x40
0x69f: V645 = M[0x40]
0x6a0: V646 = 0xe0
0x6a2: V647 = 0x2
0x6a4: V648 = EXP 0x2 0xe0
0x6a5: V649 = 0xffffffff
0x6ab: V650 = AND 0x2e1a7d4d 0xffffffff
0x6ac: V651 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x6ae: M[V645] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x6af: V652 = 0x4
0x6b2: V653 = ADD V645 0x4
0x6b6: M[V653] = V146
0x6b7: V654 = 0x24
0x6b9: V655 = ADD 0x24 V645
0x6ba: V656 = 0x0
0x6bc: V657 = 0x40
0x6be: V658 = M[0x40]
0x6c1: V659 = SUB V655 V658
0x6c3: V660 = 0x0
0x6c7: V661 = EXTCODESIZE V642
0x6c8: V662 = ISZERO V661
0x6c9: V663 = ISZERO V662
0x6ca: V664 = 0x6d2
0x6cd: JUMPI 0x6d2 V663
---
Entry stack: [V12, 0x79, V146, 0x0]
Stack pops: 2
Stack additions: [S1, V642, V642, 0x2e1a7d4d, V655, 0x0, V658, V659, V658, 0x0, V642]
Exit stack: [V12, 0x79, V146, V642, V642, 0x2e1a7d4d, V655, 0x0, V658, V659, V658, 0x0, V642]

================================

Block 0x6ce
[0x6ce:0x6d1]
---
Predecessors: [0x688]
Successors: []
---
0x6ce PUSH1 0x0
0x6d0 DUP1
0x6d1 REVERT
---
0x6ce: V665 = 0x0
0x6d1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V146, V642, V642, 0x2e1a7d4d, V655, 0x0, V658, V659, V658, 0x0, V642]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V146, V642, V642, 0x2e1a7d4d, V655, 0x0, V658, V659, V658, 0x0, V642]

================================

Block 0x6d2
[0x6d2:0x6de]
---
Predecessors: [0x688]
Successors: [0x6df, 0x6e3]
---
0x6d2 JUMPDEST
0x6d3 PUSH2 0x2c6
0x6d6 GAS
0x6d7 SUB
0x6d8 CALL
0x6d9 ISZERO
0x6da ISZERO
0x6db PUSH2 0x6e3
0x6de JUMPI
---
0x6d2: JUMPDEST 
0x6d3: V666 = 0x2c6
0x6d6: V667 = GAS
0x6d7: V668 = SUB V667 0x2c6
0x6d8: V669 = CALL V668 V642 0x0 V658 V659 V658 0x0
0x6d9: V670 = ISZERO V669
0x6da: V671 = ISZERO V670
0x6db: V672 = 0x6e3
0x6de: JUMPI 0x6e3 V671
---
Entry stack: [V12, 0x79, V146, V642, V642, 0x2e1a7d4d, V655, 0x0, V658, V659, V658, 0x0, V642]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x79, V146, V642, V642, 0x2e1a7d4d, V655]

================================

Block 0x6df
[0x6df:0x6e2]
---
Predecessors: [0x6d2]
Successors: []
---
0x6df PUSH1 0x0
0x6e1 DUP1
0x6e2 REVERT
---
0x6df: V673 = 0x0
0x6e2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V146, V642, V642, 0x2e1a7d4d, V655]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V146, V642, V642, 0x2e1a7d4d, V655]

================================

Block 0x6e3
[0x6e3:0x6e6]
---
Predecessors: [0x6d2]
Successors: [0x6e7]
---
0x6e3 JUMPDEST
0x6e4 POP
0x6e5 POP
0x6e6 POP
---
0x6e3: JUMPDEST 
---
Entry stack: [V12, 0x79, V146, V642, V642, 0x2e1a7d4d, V655]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x79, V146, V642]

================================

Block 0x6e7
[0x6e7:0x6e7]
---
Predecessors: [0x6e3]
Successors: [0x6e8]
---
0x6e7 JUMPDEST
---
0x6e7: JUMPDEST 
---
Entry stack: [V12, 0x79, V146, V642]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V146, V642]

================================

Block 0x6e8
[0x6e8:0x6eb]
---
Predecessors: [0x6e7]
Successors: [0x79]
---
0x6e8 JUMPDEST
0x6e9 POP
0x6ea POP
0x6eb JUMP
---
0x6e8: JUMPDEST 
0x6eb: JUMP 0x79
---
Entry stack: [V12, 0x79, V146, V642]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x6ec
[0x6ec:0x737]
---
Predecessors: []
Successors: []
---
0x6ec STOP
0x6ed CALLVALUE
0x6ee MISSING 0xd6
0x6ef MISSING 0xd9
0x6f0 MISSING 0xbe
0x6f1 MISSING 0xcd
0x6f2 PUSH27 0x327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9a1
0x70e PUSH6 0x627a7a723058
0x715 SHA3
0x716 MISSING 0xc
0x717 PUSH31 0xd79e3664f8d4e90a576da964fa519bfaead1c90e0a1533b99ce7e341427100
0x737 MISSING 0x29
---
0x6ec: STOP 
0x6ed: V674 = CALLVALUE
0x6ee: MISSING 0xd6
0x6ef: MISSING 0xd9
0x6f0: MISSING 0xbe
0x6f1: MISSING 0xcd
0x6f2: V675 = 0x327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9a1
0x70e: V676 = 0x627a7a723058
0x715: V677 = SHA3 0x627a7a723058 0x327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9a1
0x716: MISSING 0xc
0x717: V678 = 0xd79e3664f8d4e90a576da964fa519bfaead1c90e0a1533b99ce7e341427100
0x737: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V674, V677, 0xd79e3664f8d4e90a576da964fa519bfaead1c90e0a1533b99ce7e341427100]
Exit stack: []

================================

Function 0:
Public function signature: 0x2cf2c0af
Entry block: 0x7b
Exit block: 0x79
Body: 0x79, 0x7b, 0x82, 0x86, 0x191, 0x1a9, 0x1ad, 0x1ea, 0x1ee, 0x1fb, 0x1ff, 0x204, 0x205

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x93
Exit block: 0x79
Body: 0x79, 0x93, 0x9a, 0x9e, 0x209, 0x220, 0x224, 0x253, 0x257, 0x258, 0x259

Function 2:
Public function signature: 0x43d726d6
Entry block: 0xab
Exit block: 0x277
Body: 0xab, 0xb2, 0xb6, 0x25c, 0x273, 0x277

Function 3:
Public function signature: 0x70a08231
Entry block: 0xc0
Exit block: 0xdf
Body: 0xc0, 0xc7, 0xcb, 0xdf, 0x288, 0x2e8, 0x2ec, 0x2f9, 0x2fd, 0x309

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0xf1
Exit block: 0x104
Body: 0xf1, 0xf8, 0xfc, 0x104, 0x30f

Function 5:
Public function signature: 0xcf8bb185
Entry block: 0x120
Exit block: 0x601
Body: 0x79, 0x120, 0x127, 0x12b, 0x31e, 0x338, 0x33c, 0x352, 0x3fa, 0x3fe, 0x40b, 0x40f, 0x420, 0x423, 0x42d, 0x500, 0x504, 0x511, 0x515, 0x525, 0x5f0, 0x5f4, 0x601, 0x605, 0x60d, 0x630, 0x635, 0x658, 0x659, 0x65a

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x16f
Exit block: 0x79
Body: 0x76, 0x77, 0x79, 0x16f

Function 7:
Public function signature: 0xf1b83630
Entry block: 0x179
Exit block: 0x79
Body: 0x79, 0x179, 0x180, 0x184, 0x66c, 0x684, 0x688, 0x6ce, 0x6d2, 0x6df, 0x6e3, 0x6e7, 0x6e8

Function 8:
Public fallback function
Entry block: 0x72
Exit block: 0x79
Body: 0x72, 0x76, 0x77, 0x79

