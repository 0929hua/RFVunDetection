Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x95]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x95
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x95
0xc: JUMPI 0x95 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x12e]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x6fdde03
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x12e
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x6fdde03
0x22: V15 = EQ V13 0x6fdde03
0x23: V16 = 0x12e
0x26: JUMPI 0x12e V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x1b8]
---
0x27 DUP1
0x28 PUSH4 0x10639ea0
0x2d EQ
0x2e PUSH2 0x1b8
0x31 JUMPI
---
0x28: V17 = 0x10639ea0
0x2d: V18 = EQ 0x10639ea0 V13
0x2e: V19 = 0x1b8
0x31: JUMPI 0x1b8 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1e1]
---
0x32 DUP1
0x33 PUSH4 0x112dcbd8
0x38 EQ
0x39 PUSH2 0x1e1
0x3c JUMPI
---
0x33: V20 = 0x112dcbd8
0x38: V21 = EQ 0x112dcbd8 V13
0x39: V22 = 0x1e1
0x3c: JUMPI 0x1e1 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x212]
---
0x3d DUP1
0x3e PUSH4 0x200d2ed2
0x43 EQ
0x44 PUSH2 0x212
0x47 JUMPI
---
0x3e: V23 = 0x200d2ed2
0x43: V24 = EQ 0x200d2ed2 V13
0x44: V25 = 0x212
0x47: JUMPI 0x212 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x253]
---
0x48 DUP1
0x49 PUSH4 0x60d704db
0x4e EQ
0x4f PUSH2 0x253
0x52 JUMPI
---
0x49: V26 = 0x60d704db
0x4e: V27 = EQ 0x60d704db V13
0x4f: V28 = 0x253
0x52: JUMPI 0x253 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x268]
---
0x53 DUP1
0x54 PUSH4 0x66d38203
0x59 EQ
0x5a PUSH2 0x268
0x5d JUMPI
---
0x54: V29 = 0x66d38203
0x59: V30 = EQ 0x66d38203 V13
0x5a: V31 = 0x268
0x5d: JUMPI 0x268 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x28b]
---
0x5e DUP1
0x5f PUSH4 0x7c784a01
0x64 EQ
0x65 PUSH2 0x28b
0x68 JUMPI
---
0x5f: V32 = 0x7c784a01
0x64: V33 = EQ 0x7c784a01 V13
0x65: V34 = 0x28b
0x68: JUMPI 0x28b V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x2a0]
---
0x69 DUP1
0x6a PUSH4 0x88d761f2
0x6f EQ
0x70 PUSH2 0x2a0
0x73 JUMPI
---
0x6a: V35 = 0x88d761f2
0x6f: V36 = EQ 0x88d761f2 V13
0x70: V37 = 0x2a0
0x73: JUMPI 0x2a0 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x2b5]
---
0x74 DUP1
0x75 PUSH4 0xa0f52da0
0x7a EQ
0x7b PUSH2 0x2b5
0x7e JUMPI
---
0x75: V38 = 0xa0f52da0
0x7a: V39 = EQ 0xa0f52da0 V13
0x7b: V40 = 0x2b5
0x7e: JUMPI 0x2b5 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x2d6]
---
0x7f DUP1
0x80 PUSH4 0xd0e30db0
0x85 EQ
0x86 PUSH2 0x2d6
0x89 JUMPI
---
0x80: V41 = 0xd0e30db0
0x85: V42 = EQ 0xd0e30db0 V13
0x86: V43 = 0x2d6
0x89: JUMPI 0x2d6 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x2de]
---
0x8a DUP1
0x8b PUSH4 0xed78cf4a
0x90 EQ
0x91 PUSH2 0x2de
0x94 JUMPI
---
0x8b: V44 = 0xed78cf4a
0x90: V45 = EQ 0xed78cf4a V13
0x91: V46 = 0x2de
0x94: JUMPI 0x2de V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0xfa]
---
Predecessors: [0x0, 0x8a]
Successors: [0xfb, 0xff]
---
0x95 JUMPDEST
0x96 PUSH1 0x1
0x98 SLOAD
0x99 PUSH1 0x40
0x9b DUP1
0x9c MLOAD
0x9d PUSH32 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xbe DUP2
0xbf MSTORE
0xc0 PUSH1 0x1
0xc2 PUSH1 0xa0
0xc4 PUSH1 0x2
0xc6 EXP
0xc7 SUB
0xc8 SWAP1
0xc9 SWAP3
0xca AND
0xcb PUSH1 0x4
0xcd DUP4
0xce ADD
0xcf DUP2
0xd0 SWAP1
0xd1 MSTORE
0xd2 SWAP1
0xd3 MLOAD
0xd4 SWAP1
0xd5 SWAP2
0xd6 PUSH4 0xf340fa01
0xdb SWAP2
0xdc ADDRESS
0xdd BALANCE
0xde SWAP2
0xdf PUSH1 0x24
0xe1 DUP1
0xe2 DUP3
0xe3 ADD
0xe4 SWAP3
0xe5 PUSH1 0x20
0xe7 SWAP3
0xe8 SWAP1
0xe9 SWAP2
0xea SWAP1
0xeb DUP3
0xec SWAP1
0xed SUB
0xee ADD
0xef DUP2
0xf0 DUP6
0xf1 DUP9
0xf2 DUP1
0xf3 EXTCODESIZE
0xf4 ISZERO
0xf5 DUP1
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0x95: JUMPDEST 
0x96: V47 = 0x1
0x98: V48 = S[0x1]
0x99: V49 = 0x40
0x9c: V50 = M[0x40]
0x9d: V51 = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xbf: M[V50] = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xc0: V52 = 0x1
0xc2: V53 = 0xa0
0xc4: V54 = 0x2
0xc6: V55 = EXP 0x2 0xa0
0xc7: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca: V57 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0xcb: V58 = 0x4
0xce: V59 = ADD V50 0x4
0xd1: M[V59] = V57
0xd3: V60 = M[0x40]
0xd6: V61 = 0xf340fa01
0xdc: V62 = ADDRESS
0xdd: V63 = BALANCE V62
0xdf: V64 = 0x24
0xe3: V65 = ADD V50 0x24
0xe5: V66 = 0x20
0xed: V67 = SUB V50 V60
0xee: V68 = ADD V67 0x24
0xf3: V69 = EXTCODESIZE V57
0xf4: V70 = ISZERO V69
0xf6: V71 = ISZERO V70
0xf7: V72 = 0xff
0xfa: JUMPI 0xff V71
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V57, 0xf340fa01, V63, V65, 0x20, V60, V68, V60, V63, V57, V70]
Exit stack: [V13, V57, 0xf340fa01, V63, V65, 0x20, V60, V68, V60, V63, V57, V70]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0x95]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V73 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V13, V57, 0xf340fa01, V63, V65, 0x20, V60, V68, V60, V63, V57, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V57, 0xf340fa01, V63, V65, 0x20, V60, V68, V60, V63, V57, V70]

================================

Block 0xff
[0xff:0x109]
---
Predecessors: [0x95]
Successors: [0x10a, 0x113]
---
0xff JUMPDEST
0x100 POP
0x101 GAS
0x102 CALL
0x103 ISZERO
0x104 DUP1
0x105 ISZERO
0x106 PUSH2 0x113
0x109 JUMPI
---
0xff: JUMPDEST 
0x101: V74 = GAS
0x102: V75 = CALL V74 V57 V63 V60 V68 V60 0x20
0x103: V76 = ISZERO V75
0x105: V77 = ISZERO V76
0x106: V78 = 0x113
0x109: JUMPI 0x113 V77
---
Entry stack: [V13, V57, 0xf340fa01, V63, V65, 0x20, V60, V68, V60, V63, V57, V70]
Stack pops: 7
Stack additions: [V76]
Exit stack: [V13, V57, 0xf340fa01, V63, V65, V76]

================================

Block 0x10a
[0x10a:0x112]
---
Predecessors: [0xff]
Successors: []
---
0x10a RETURNDATASIZE
0x10b PUSH1 0x0
0x10d DUP1
0x10e RETURNDATACOPY
0x10f RETURNDATASIZE
0x110 PUSH1 0x0
0x112 REVERT
---
0x10a: V79 = RETURNDATASIZE
0x10b: V80 = 0x0
0x10e: RETURNDATACOPY 0x0 0x0 V79
0x10f: V81 = RETURNDATASIZE
0x110: V82 = 0x0
0x112: REVERT 0x0 V81
---
Entry stack: [V13, V57, 0xf340fa01, V63, V65, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V57, 0xf340fa01, V63, V65, V76]

================================

Block 0x113
[0x113:0x125]
---
Predecessors: [0xff]
Successors: [0x126, 0x12a]
---
0x113 JUMPDEST
0x114 POP
0x115 POP
0x116 POP
0x117 POP
0x118 POP
0x119 PUSH1 0x40
0x11b MLOAD
0x11c RETURNDATASIZE
0x11d PUSH1 0x20
0x11f DUP2
0x120 LT
0x121 ISZERO
0x122 PUSH2 0x12a
0x125 JUMPI
---
0x113: JUMPDEST 
0x119: V83 = 0x40
0x11b: V84 = M[0x40]
0x11c: V85 = RETURNDATASIZE
0x11d: V86 = 0x20
0x120: V87 = LT V85 0x20
0x121: V88 = ISZERO V87
0x122: V89 = 0x12a
0x125: JUMPI 0x12a V88
---
Entry stack: [V13, V57, 0xf340fa01, V63, V65, V76]
Stack pops: 5
Stack additions: [V84, V85]
Exit stack: [V13, V84, V85]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0x113]
Successors: []
---
0x126 PUSH1 0x0
0x128 DUP1
0x129 REVERT
---
0x126: V90 = 0x0
0x129: REVERT 0x0 0x0
---
Entry stack: [V13, V84, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V84, V85]

================================

Block 0x12a
[0x12a:0x12d]
---
Predecessors: [0x113]
Successors: []
---
0x12a JUMPDEST
0x12b POP
0x12c POP
0x12d STOP
---
0x12a: JUMPDEST 
0x12d: STOP 
---
Entry stack: [V13, V84, V85]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x12e
[0x12e:0x135]
---
Predecessors: [0xd]
Successors: [0x136, 0x13a]
---
0x12e JUMPDEST
0x12f CALLVALUE
0x130 DUP1
0x131 ISZERO
0x132 PUSH2 0x13a
0x135 JUMPI
---
0x12e: JUMPDEST 
0x12f: V91 = CALLVALUE
0x131: V92 = ISZERO V91
0x132: V93 = 0x13a
0x135: JUMPI 0x13a V92
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V91]
Exit stack: [V13, V91]

================================

Block 0x136
[0x136:0x139]
---
Predecessors: [0x12e]
Successors: []
---
0x136 PUSH1 0x0
0x138 DUP1
0x139 REVERT
---
0x136: V94 = 0x0
0x139: REVERT 0x0 0x0
---
Entry stack: [V13, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V91]

================================

Block 0x13a
[0x13a:0x142]
---
Predecessors: [0x12e]
Successors: [0x2e6]
---
0x13a JUMPDEST
0x13b POP
0x13c PUSH2 0x143
0x13f PUSH2 0x2e6
0x142 JUMP
---
0x13a: JUMPDEST 
0x13c: V95 = 0x143
0x13f: V96 = 0x2e6
0x142: JUMP 0x2e6
---
Entry stack: [V13, V91]
Stack pops: 1
Stack additions: [0x143]
Exit stack: [V13, 0x143]

================================

Block 0x143
[0x143:0x164]
---
Predecessors: [0x36c]
Successors: [0x165]
---
0x143 JUMPDEST
0x144 PUSH1 0x40
0x146 DUP1
0x147 MLOAD
0x148 PUSH1 0x20
0x14a DUP1
0x14b DUP3
0x14c MSTORE
0x14d DUP4
0x14e MLOAD
0x14f DUP2
0x150 DUP4
0x151 ADD
0x152 MSTORE
0x153 DUP4
0x154 MLOAD
0x155 SWAP2
0x156 SWAP3
0x157 DUP4
0x158 SWAP3
0x159 SWAP1
0x15a DUP4
0x15b ADD
0x15c SWAP2
0x15d DUP6
0x15e ADD
0x15f SWAP1
0x160 DUP1
0x161 DUP4
0x162 DUP4
0x163 PUSH1 0x0
---
0x143: JUMPDEST 
0x144: V97 = 0x40
0x147: V98 = M[0x40]
0x148: V99 = 0x20
0x14c: M[V98] = 0x20
0x14e: V100 = M[V244]
0x151: V101 = ADD V98 0x20
0x152: M[V101] = V100
0x154: V102 = M[V244]
0x15b: V103 = ADD V98 0x40
0x15e: V104 = ADD V244 0x20
0x163: V105 = 0x0
---
Entry stack: [V13, 0x143, V244]
Stack pops: 1
Stack additions: [S0, V98, V98, V103, V104, V102, V102, V103, V104, 0x0]
Exit stack: [V13, 0x143, V244, V98, V98, V103, V104, V102, V102, V103, V104, 0x0]

================================

Block 0x165
[0x165:0x16d]
---
Predecessors: [0x143, 0x16e]
Successors: [0x16e, 0x17d]
---
0x165 JUMPDEST
0x166 DUP4
0x167 DUP2
0x168 LT
0x169 ISZERO
0x16a PUSH2 0x17d
0x16d JUMPI
---
0x165: JUMPDEST 
0x168: V106 = LT S0 V102
0x169: V107 = ISZERO V106
0x16a: V108 = 0x17d
0x16d: JUMPI 0x17d V107
---
Entry stack: [V13, 0x143, V244, V98, V98, V103, V104, V102, V102, V103, V104, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x143, V244, V98, V98, V103, V104, V102, V102, V103, V104, S0]

================================

Block 0x16e
[0x16e:0x17c]
---
Predecessors: [0x165]
Successors: [0x165]
---
0x16e DUP2
0x16f DUP2
0x170 ADD
0x171 MLOAD
0x172 DUP4
0x173 DUP3
0x174 ADD
0x175 MSTORE
0x176 PUSH1 0x20
0x178 ADD
0x179 PUSH2 0x165
0x17c JUMP
---
0x170: V109 = ADD S0 V104
0x171: V110 = M[V109]
0x174: V111 = ADD S0 V103
0x175: M[V111] = V110
0x176: V112 = 0x20
0x178: V113 = ADD 0x20 S0
0x179: V114 = 0x165
0x17c: JUMP 0x165
---
Entry stack: [V13, 0x143, V244, V98, V98, V103, V104, V102, V102, V103, V104, S0]
Stack pops: 3
Stack additions: [S2, S1, V113]
Exit stack: [V13, 0x143, V244, V98, V98, V103, V104, V102, V102, V103, V104, V113]

================================

Block 0x17d
[0x17d:0x190]
---
Predecessors: [0x165]
Successors: [0x191, 0x1aa]
---
0x17d JUMPDEST
0x17e POP
0x17f POP
0x180 POP
0x181 POP
0x182 SWAP1
0x183 POP
0x184 SWAP1
0x185 DUP2
0x186 ADD
0x187 SWAP1
0x188 PUSH1 0x1f
0x18a AND
0x18b DUP1
0x18c ISZERO
0x18d PUSH2 0x1aa
0x190 JUMPI
---
0x17d: JUMPDEST 
0x186: V115 = ADD V102 V103
0x188: V116 = 0x1f
0x18a: V117 = AND 0x1f V102
0x18c: V118 = ISZERO V117
0x18d: V119 = 0x1aa
0x190: JUMPI 0x1aa V118
---
Entry stack: [V13, 0x143, V244, V98, V98, V103, V104, V102, V102, V103, V104, S0]
Stack pops: 7
Stack additions: [V115, V117]
Exit stack: [V13, 0x143, V244, V98, V98, V115, V117]

================================

Block 0x191
[0x191:0x1a9]
---
Predecessors: [0x17d]
Successors: [0x1aa]
---
0x191 DUP1
0x192 DUP3
0x193 SUB
0x194 DUP1
0x195 MLOAD
0x196 PUSH1 0x1
0x198 DUP4
0x199 PUSH1 0x20
0x19b SUB
0x19c PUSH2 0x100
0x19f EXP
0x1a0 SUB
0x1a1 NOT
0x1a2 AND
0x1a3 DUP2
0x1a4 MSTORE
0x1a5 PUSH1 0x20
0x1a7 ADD
0x1a8 SWAP2
0x1a9 POP
---
0x193: V120 = SUB V115 V117
0x195: V121 = M[V120]
0x196: V122 = 0x1
0x199: V123 = 0x20
0x19b: V124 = SUB 0x20 V117
0x19c: V125 = 0x100
0x19f: V126 = EXP 0x100 V124
0x1a0: V127 = SUB V126 0x1
0x1a1: V128 = NOT V127
0x1a2: V129 = AND V128 V121
0x1a4: M[V120] = V129
0x1a5: V130 = 0x20
0x1a7: V131 = ADD 0x20 V120
---
Entry stack: [V13, 0x143, V244, V98, V98, V115, V117]
Stack pops: 2
Stack additions: [V131, S0]
Exit stack: [V13, 0x143, V244, V98, V98, V131, V117]

================================

Block 0x1aa
[0x1aa:0x1b7]
---
Predecessors: [0x17d, 0x191]
Successors: []
---
0x1aa JUMPDEST
0x1ab POP
0x1ac SWAP3
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 RETURN
---
0x1aa: JUMPDEST 
0x1b0: V132 = 0x40
0x1b2: V133 = M[0x40]
0x1b5: V134 = SUB S1 V133
0x1b7: RETURN V133 V134
---
Entry stack: [V13, 0x143, V244, V98, V98, S1, V117]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x143]

================================

Block 0x1b8
[0x1b8:0x1bf]
---
Predecessors: [0x27]
Successors: [0x1c0, 0x1c4]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba DUP1
0x1bb ISZERO
0x1bc PUSH2 0x1c4
0x1bf JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V135 = CALLVALUE
0x1bb: V136 = ISZERO V135
0x1bc: V137 = 0x1c4
0x1bf: JUMPI 0x1c4 V136
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V135]
Exit stack: [V13, V135]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x1b8]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
---
0x1c0: V138 = 0x0
0x1c3: REVERT 0x0 0x0
---
Entry stack: [V13, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V135]

================================

Block 0x1c4
[0x1c4:0x1cc]
---
Predecessors: [0x1b8]
Successors: [0x374]
---
0x1c4 JUMPDEST
0x1c5 POP
0x1c6 PUSH2 0x1cd
0x1c9 PUSH2 0x374
0x1cc JUMP
---
0x1c4: JUMPDEST 
0x1c6: V139 = 0x1cd
0x1c9: V140 = 0x374
0x1cc: JUMP 0x374
---
Entry stack: [V13, V135]
Stack pops: 1
Stack additions: [0x1cd]
Exit stack: [V13, 0x1cd]

================================

Block 0x1cd
[0x1cd:0x1e0]
---
Predecessors: [0x446, 0x904, 0xa95]
Successors: []
---
0x1cd JUMPDEST
0x1ce PUSH1 0x40
0x1d0 DUP1
0x1d1 MLOAD
0x1d2 SWAP2
0x1d3 ISZERO
0x1d4 ISZERO
0x1d5 DUP3
0x1d6 MSTORE
0x1d7 MLOAD
0x1d8 SWAP1
0x1d9 DUP2
0x1da SWAP1
0x1db SUB
0x1dc PUSH1 0x20
0x1de ADD
0x1df SWAP1
0x1e0 RETURN
---
0x1cd: JUMPDEST 
0x1ce: V141 = 0x40
0x1d1: V142 = M[0x40]
0x1d3: V143 = ISZERO {0x0, 0x1}
0x1d4: V144 = ISZERO V143
0x1d6: M[V142] = V144
0x1d7: V145 = M[0x40]
0x1db: V146 = SUB V142 V145
0x1dc: V147 = 0x20
0x1de: V148 = ADD 0x20 V146
0x1e0: RETURN V145 V148
---
Entry stack: [V13, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e1
[0x1e1:0x1e8]
---
Predecessors: [0x32]
Successors: [0x1e9, 0x1ed]
---
0x1e1 JUMPDEST
0x1e2 CALLVALUE
0x1e3 DUP1
0x1e4 ISZERO
0x1e5 PUSH2 0x1ed
0x1e8 JUMPI
---
0x1e1: JUMPDEST 
0x1e2: V149 = CALLVALUE
0x1e4: V150 = ISZERO V149
0x1e5: V151 = 0x1ed
0x1e8: JUMPI 0x1ed V150
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V149]
Exit stack: [V13, V149]

================================

Block 0x1e9
[0x1e9:0x1ec]
---
Predecessors: [0x1e1]
Successors: []
---
0x1e9 PUSH1 0x0
0x1eb DUP1
0x1ec REVERT
---
0x1e9: V152 = 0x0
0x1ec: REVERT 0x0 0x0
---
Entry stack: [V13, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V149]

================================

Block 0x1ed
[0x1ed:0x1f5]
---
Predecessors: [0x1e1]
Successors: [0x449]
---
0x1ed JUMPDEST
0x1ee POP
0x1ef PUSH2 0x1f6
0x1f2 PUSH2 0x449
0x1f5 JUMP
---
0x1ed: JUMPDEST 
0x1ef: V153 = 0x1f6
0x1f2: V154 = 0x449
0x1f5: JUMP 0x449
---
Entry stack: [V13, V149]
Stack pops: 1
Stack additions: [0x1f6]
Exit stack: [V13, 0x1f6]

================================

Block 0x1f6
[0x1f6:0x211]
---
Predecessors: [0x53f]
Successors: []
---
0x1f6 JUMPDEST
0x1f7 PUSH1 0x40
0x1f9 DUP1
0x1fa MLOAD
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 SWAP1
0x204 SWAP3
0x205 AND
0x206 DUP3
0x207 MSTORE
0x208 MLOAD
0x209 SWAP1
0x20a DUP2
0x20b SWAP1
0x20c SUB
0x20d PUSH1 0x20
0x20f ADD
0x210 SWAP1
0x211 RETURN
---
0x1f6: JUMPDEST 
0x1f7: V155 = 0x40
0x1fa: V156 = M[0x40]
0x1fb: V157 = 0x1
0x1fd: V158 = 0xa0
0x1ff: V159 = 0x2
0x201: V160 = EXP 0x2 0xa0
0x202: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x205: V162 = AND V430 0xffffffffffffffffffffffffffffffffffffffff
0x207: M[V156] = V162
0x208: V163 = M[0x40]
0x20c: V164 = SUB V156 V163
0x20d: V165 = 0x20
0x20f: V166 = ADD 0x20 V164
0x211: RETURN V163 V166
---
Entry stack: [V13, V430]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x212
[0x212:0x219]
---
Predecessors: [0x3d]
Successors: [0x21a, 0x21e]
---
0x212 JUMPDEST
0x213 CALLVALUE
0x214 DUP1
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x212: JUMPDEST 
0x213: V167 = CALLVALUE
0x215: V168 = ISZERO V167
0x216: V169 = 0x21e
0x219: JUMPI 0x21e V168
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V167]
Exit stack: [V13, V167]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x212]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V170 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V13, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V167]

================================

Block 0x21e
[0x21e:0x226]
---
Predecessors: [0x212]
Successors: [0x546]
---
0x21e JUMPDEST
0x21f POP
0x220 PUSH2 0x227
0x223 PUSH2 0x546
0x226 JUMP
---
0x21e: JUMPDEST 
0x220: V171 = 0x227
0x223: V172 = 0x546
0x226: JUMP 0x546
---
Entry stack: [V13, V167]
Stack pops: 1
Stack additions: [0x227]
Exit stack: [V13, 0x227]

================================

Block 0x227
[0x227:0x252]
---
Predecessors: [0x546]
Successors: []
---
0x227 JUMPDEST
0x228 PUSH1 0x40
0x22a DUP1
0x22b MLOAD
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 SWAP5
0x235 DUP6
0x236 AND
0x237 DUP2
0x238 MSTORE
0x239 SWAP3
0x23a SWAP1
0x23b SWAP4
0x23c AND
0x23d PUSH1 0x20
0x23f DUP4
0x240 ADD
0x241 MSTORE
0x242 ISZERO
0x243 ISZERO
0x244 DUP2
0x245 DUP4
0x246 ADD
0x247 MSTORE
0x248 SWAP1
0x249 MLOAD
0x24a SWAP1
0x24b DUP2
0x24c SWAP1
0x24d SUB
0x24e PUSH1 0x60
0x250 ADD
0x251 SWAP1
0x252 RETURN
---
0x227: JUMPDEST 
0x228: V173 = 0x40
0x22b: V174 = M[0x40]
0x22c: V175 = 0x1
0x22e: V176 = 0xa0
0x230: V177 = 0x2
0x232: V178 = EXP 0x2 0xa0
0x233: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x238: M[V174] = V180
0x23c: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x23d: V182 = 0x20
0x240: V183 = ADD V174 0x20
0x241: M[V183] = V181
0x242: V184 = ISZERO V447
0x243: V185 = ISZERO V184
0x246: V186 = ADD 0x40 V174
0x247: M[V186] = V185
0x249: V187 = M[0x40]
0x24d: V188 = SUB V174 V187
0x24e: V189 = 0x60
0x250: V190 = ADD 0x60 V188
0x252: RETURN V187 V190
---
Entry stack: [V13, V440, V441, V447]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x253
[0x253:0x25a]
---
Predecessors: [0x48]
Successors: [0x25b, 0x25f]
---
0x253 JUMPDEST
0x254 CALLVALUE
0x255 DUP1
0x256 ISZERO
0x257 PUSH2 0x25f
0x25a JUMPI
---
0x253: JUMPDEST 
0x254: V191 = CALLVALUE
0x256: V192 = ISZERO V191
0x257: V193 = 0x25f
0x25a: JUMPI 0x25f V192
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V13, V191]

================================

Block 0x25b
[0x25b:0x25e]
---
Predecessors: [0x253]
Successors: []
---
0x25b PUSH1 0x0
0x25d DUP1
0x25e REVERT
---
0x25b: V194 = 0x0
0x25e: REVERT 0x0 0x0
---
Entry stack: [V13, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V191]

================================

Block 0x25f
[0x25f:0x267]
---
Predecessors: [0x253]
Successors: [0x56a]
---
0x25f JUMPDEST
0x260 POP
0x261 PUSH2 0x1f6
0x264 PUSH2 0x56a
0x267 JUMP
---
0x25f: JUMPDEST 
0x261: V195 = 0x1f6
0x264: V196 = 0x56a
0x267: JUMP 0x56a
---
Entry stack: [V13, V191]
Stack pops: 1
Stack additions: [0x1f6]
Exit stack: [V13, 0x1f6]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x53]
Successors: [0x270, 0x274]
---
0x268 JUMPDEST
0x269 CALLVALUE
0x26a DUP1
0x26b ISZERO
0x26c PUSH2 0x274
0x26f JUMPI
---
0x268: JUMPDEST 
0x269: V197 = CALLVALUE
0x26b: V198 = ISZERO V197
0x26c: V199 = 0x274
0x26f: JUMPI 0x274 V198
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V197]
Exit stack: [V13, V197]

================================

Block 0x270
[0x270:0x273]
---
Predecessors: [0x268]
Successors: []
---
0x270 PUSH1 0x0
0x272 DUP1
0x273 REVERT
---
0x270: V200 = 0x0
0x273: REVERT 0x0 0x0
---
Entry stack: [V13, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V197]

================================

Block 0x274
[0x274:0x288]
---
Predecessors: [0x268]
Successors: [0x636]
---
0x274 JUMPDEST
0x275 POP
0x276 PUSH2 0x289
0x279 PUSH1 0x1
0x27b PUSH1 0xa0
0x27d PUSH1 0x2
0x27f EXP
0x280 SUB
0x281 PUSH1 0x4
0x283 CALLDATALOAD
0x284 AND
0x285 PUSH2 0x636
0x288 JUMP
---
0x274: JUMPDEST 
0x276: V201 = 0x289
0x279: V202 = 0x1
0x27b: V203 = 0xa0
0x27d: V204 = 0x2
0x27f: V205 = EXP 0x2 0xa0
0x280: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V207 = 0x4
0x283: V208 = CALLDATALOAD 0x4
0x284: V209 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x285: V210 = 0x636
0x288: JUMP 0x636
---
Entry stack: [V13, V197]
Stack pops: 1
Stack additions: [0x289, V209]
Exit stack: [V13, 0x289, V209]

================================

Block 0x289
[0x289:0x28a]
---
Predecessors: [0x73a, 0xd67]
Successors: []
---
0x289 JUMPDEST
0x28a STOP
---
0x289: JUMPDEST 
0x28a: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x28b
[0x28b:0x292]
---
Predecessors: [0x5e]
Successors: [0x293, 0x297]
---
0x28b JUMPDEST
0x28c CALLVALUE
0x28d DUP1
0x28e ISZERO
0x28f PUSH2 0x297
0x292 JUMPI
---
0x28b: JUMPDEST 
0x28c: V211 = CALLVALUE
0x28e: V212 = ISZERO V211
0x28f: V213 = 0x297
0x292: JUMPI 0x297 V212
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V211]
Exit stack: [V13, V211]

================================

Block 0x293
[0x293:0x296]
---
Predecessors: [0x28b]
Successors: []
---
0x293 PUSH1 0x0
0x295 DUP1
0x296 REVERT
---
0x293: V214 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V13, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V211]

================================

Block 0x297
[0x297:0x29f]
---
Predecessors: [0x28b]
Successors: [0x787]
---
0x297 JUMPDEST
0x298 POP
0x299 PUSH2 0x1f6
0x29c PUSH2 0x787
0x29f JUMP
---
0x297: JUMPDEST 
0x299: V215 = 0x1f6
0x29c: V216 = 0x787
0x29f: JUMP 0x787
---
Entry stack: [V13, V211]
Stack pops: 1
Stack additions: [0x1f6]
Exit stack: [V13, 0x1f6]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0x69]
Successors: [0x2a8, 0x2ac]
---
0x2a0 JUMPDEST
0x2a1 CALLVALUE
0x2a2 DUP1
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V217 = CALLVALUE
0x2a3: V218 = ISZERO V217
0x2a4: V219 = 0x2ac
0x2a7: JUMPI 0x2ac V218
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V217]
Exit stack: [V13, V217]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x2a0]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V220 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V13, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V217]

================================

Block 0x2ac
[0x2ac:0x2b4]
---
Predecessors: [0x2a0]
Successors: [0x853]
---
0x2ac JUMPDEST
0x2ad POP
0x2ae PUSH2 0x1cd
0x2b1 PUSH2 0x853
0x2b4 JUMP
---
0x2ac: JUMPDEST 
0x2ae: V221 = 0x1cd
0x2b1: V222 = 0x853
0x2b4: JUMP 0x853
---
Entry stack: [V13, V217]
Stack pops: 1
Stack additions: [0x1cd]
Exit stack: [V13, 0x1cd]

================================

Block 0x2b5
[0x2b5:0x2bc]
---
Predecessors: [0x74]
Successors: [0x2bd, 0x2c1]
---
0x2b5 JUMPDEST
0x2b6 CALLVALUE
0x2b7 DUP1
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V223 = CALLVALUE
0x2b8: V224 = ISZERO V223
0x2b9: V225 = 0x2c1
0x2bc: JUMPI 0x2c1 V224
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V223]
Exit stack: [V13, V223]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x2b5]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V226 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V13, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V223]

================================

Block 0x2c1
[0x2c1:0x2d5]
---
Predecessors: [0x2b5]
Successors: [0x93c]
---
0x2c1 JUMPDEST
0x2c2 POP
0x2c3 PUSH2 0x1cd
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce PUSH1 0x4
0x2d0 CALLDATALOAD
0x2d1 AND
0x2d2 PUSH2 0x93c
0x2d5 JUMP
---
0x2c1: JUMPDEST 
0x2c3: V227 = 0x1cd
0x2c6: V228 = 0x1
0x2c8: V229 = 0xa0
0x2ca: V230 = 0x2
0x2cc: V231 = EXP 0x2 0xa0
0x2cd: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ce: V233 = 0x4
0x2d0: V234 = CALLDATALOAD 0x4
0x2d1: V235 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V236 = 0x93c
0x2d5: JUMP 0x93c
---
Entry stack: [V13, V223]
Stack pops: 1
Stack additions: [0x1cd, V235]
Exit stack: [V13, 0x1cd, V235]

================================

Block 0x2d6
[0x2d6:0x2dd]
---
Predecessors: [0x7f]
Successors: [0xa9a]
---
0x2d6 JUMPDEST
0x2d7 PUSH2 0x1cd
0x2da PUSH2 0xa9a
0x2dd JUMP
---
0x2d6: JUMPDEST 
0x2d7: V237 = 0x1cd
0x2da: V238 = 0xa9a
0x2dd: JUMP 0xa9a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V13, 0x1cd]

================================

Block 0x2de
[0x2de:0x2e5]
---
Predecessors: [0x8a]
Successors: [0xc3c]
---
0x2de JUMPDEST
0x2df PUSH2 0x289
0x2e2 PUSH2 0xc3c
0x2e5 JUMP
---
0x2de: JUMPDEST 
0x2df: V239 = 0x289
0x2e2: V240 = 0xc3c
0x2e5: JUMP 0xc3c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x289]
Exit stack: [V13, 0x289]

================================

Block 0x2e6
[0x2e6:0x325]
---
Predecessors: [0x13a]
Successors: [0x326, 0x36c]
---
0x2e6 JUMPDEST
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea SLOAD
0x2eb PUSH1 0x40
0x2ed DUP1
0x2ee MLOAD
0x2ef PUSH1 0x20
0x2f1 PUSH1 0x2
0x2f3 PUSH1 0x1
0x2f5 DUP6
0x2f6 AND
0x2f7 ISZERO
0x2f8 PUSH2 0x100
0x2fb MUL
0x2fc PUSH1 0x0
0x2fe NOT
0x2ff ADD
0x300 SWAP1
0x301 SWAP5
0x302 AND
0x303 SWAP4
0x304 SWAP1
0x305 SWAP4
0x306 DIV
0x307 PUSH1 0x1f
0x309 DUP2
0x30a ADD
0x30b DUP5
0x30c SWAP1
0x30d DIV
0x30e DUP5
0x30f MUL
0x310 DUP3
0x311 ADD
0x312 DUP5
0x313 ADD
0x314 SWAP1
0x315 SWAP3
0x316 MSTORE
0x317 DUP2
0x318 DUP2
0x319 MSTORE
0x31a SWAP3
0x31b SWAP2
0x31c DUP4
0x31d ADD
0x31e DUP3
0x31f DUP3
0x320 DUP1
0x321 ISZERO
0x322 PUSH2 0x36c
0x325 JUMPI
---
0x2e6: JUMPDEST 
0x2e7: V241 = 0x0
0x2ea: V242 = S[0x0]
0x2eb: V243 = 0x40
0x2ee: V244 = M[0x40]
0x2ef: V245 = 0x20
0x2f1: V246 = 0x2
0x2f3: V247 = 0x1
0x2f6: V248 = AND V242 0x1
0x2f7: V249 = ISZERO V248
0x2f8: V250 = 0x100
0x2fb: V251 = MUL 0x100 V249
0x2fc: V252 = 0x0
0x2fe: V253 = NOT 0x0
0x2ff: V254 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V251
0x302: V255 = AND V242 V254
0x306: V256 = DIV V255 0x2
0x307: V257 = 0x1f
0x30a: V258 = ADD V256 0x1f
0x30d: V259 = DIV V258 0x20
0x30f: V260 = MUL 0x20 V259
0x311: V261 = ADD V244 V260
0x313: V262 = ADD 0x20 V261
0x316: M[0x40] = V262
0x319: M[V244] = V256
0x31d: V263 = ADD V244 0x20
0x321: V264 = ISZERO V256
0x322: V265 = 0x36c
0x325: JUMPI 0x36c V264
---
Entry stack: [V13, 0x143]
Stack pops: 0
Stack additions: [V244, 0x0, V256, V263, 0x0, V256]
Exit stack: [V13, 0x143, V244, 0x0, V256, V263, 0x0, V256]

================================

Block 0x326
[0x326:0x32d]
---
Predecessors: [0x2e6]
Successors: [0x32e, 0x341]
---
0x326 DUP1
0x327 PUSH1 0x1f
0x329 LT
0x32a PUSH2 0x341
0x32d JUMPI
---
0x327: V266 = 0x1f
0x329: V267 = LT 0x1f V256
0x32a: V268 = 0x341
0x32d: JUMPI 0x341 V267
---
Entry stack: [V13, 0x143, V244, 0x0, V256, V263, 0x0, V256]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x143, V244, 0x0, V256, V263, 0x0, V256]

================================

Block 0x32e
[0x32e:0x340]
---
Predecessors: [0x326]
Successors: [0x36c]
---
0x32e PUSH2 0x100
0x331 DUP1
0x332 DUP4
0x333 SLOAD
0x334 DIV
0x335 MUL
0x336 DUP4
0x337 MSTORE
0x338 SWAP2
0x339 PUSH1 0x20
0x33b ADD
0x33c SWAP2
0x33d PUSH2 0x36c
0x340 JUMP
---
0x32e: V269 = 0x100
0x333: V270 = S[0x0]
0x334: V271 = DIV V270 0x100
0x335: V272 = MUL V271 0x100
0x337: M[V263] = V272
0x339: V273 = 0x20
0x33b: V274 = ADD 0x20 V263
0x33d: V275 = 0x36c
0x340: JUMP 0x36c
---
Entry stack: [V13, 0x143, V244, 0x0, V256, V263, 0x0, V256]
Stack pops: 3
Stack additions: [V274, S1, S0]
Exit stack: [V13, 0x143, V244, 0x0, V256, V274, 0x0, V256]

================================

Block 0x341
[0x341:0x34e]
---
Predecessors: [0x326]
Successors: [0x34f]
---
0x341 JUMPDEST
0x342 DUP3
0x343 ADD
0x344 SWAP2
0x345 SWAP1
0x346 PUSH1 0x0
0x348 MSTORE
0x349 PUSH1 0x20
0x34b PUSH1 0x0
0x34d SHA3
0x34e SWAP1
---
0x341: JUMPDEST 
0x343: V276 = ADD V263 V256
0x346: V277 = 0x0
0x348: M[0x0] = 0x0
0x349: V278 = 0x20
0x34b: V279 = 0x0
0x34d: V280 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x143, V244, 0x0, V256, V263, 0x0, V256]
Stack pops: 3
Stack additions: [V276, V280, S2]
Exit stack: [V13, 0x143, V244, 0x0, V256, V276, V280, V263]

================================

Block 0x34f
[0x34f:0x362]
---
Predecessors: [0x341, 0x34f]
Successors: [0x34f, 0x363]
---
0x34f JUMPDEST
0x350 DUP2
0x351 SLOAD
0x352 DUP2
0x353 MSTORE
0x354 SWAP1
0x355 PUSH1 0x1
0x357 ADD
0x358 SWAP1
0x359 PUSH1 0x20
0x35b ADD
0x35c DUP1
0x35d DUP4
0x35e GT
0x35f PUSH2 0x34f
0x362 JUMPI
---
0x34f: JUMPDEST 
0x351: V281 = S[S1]
0x353: M[S0] = V281
0x355: V282 = 0x1
0x357: V283 = ADD 0x1 S1
0x359: V284 = 0x20
0x35b: V285 = ADD 0x20 S0
0x35e: V286 = GT V276 V285
0x35f: V287 = 0x34f
0x362: JUMPI 0x34f V286
---
Entry stack: [V13, 0x143, V244, 0x0, V256, V276, S1, S0]
Stack pops: 3
Stack additions: [S2, V283, V285]
Exit stack: [V13, 0x143, V244, 0x0, V256, V276, V283, V285]

================================

Block 0x363
[0x363:0x36b]
---
Predecessors: [0x34f]
Successors: [0x36c]
---
0x363 DUP3
0x364 SWAP1
0x365 SUB
0x366 PUSH1 0x1f
0x368 AND
0x369 DUP3
0x36a ADD
0x36b SWAP2
---
0x365: V288 = SUB V285 V276
0x366: V289 = 0x1f
0x368: V290 = AND 0x1f V288
0x36a: V291 = ADD V276 V290
---
Entry stack: [V13, 0x143, V244, 0x0, V256, V276, V283, V285]
Stack pops: 3
Stack additions: [V291, S1, S2]
Exit stack: [V13, 0x143, V244, 0x0, V256, V291, V283, V276]

================================

Block 0x36c
[0x36c:0x373]
---
Predecessors: [0x2e6, 0x32e, 0x363]
Successors: [0x143]
---
0x36c JUMPDEST
0x36d POP
0x36e POP
0x36f POP
0x370 POP
0x371 POP
0x372 DUP2
0x373 JUMP
---
0x36c: JUMPDEST 
0x373: JUMP 0x143
---
Entry stack: [V13, 0x143, V244, 0x0, V256, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V13, 0x143, V244]

================================

Block 0x374
[0x374:0x389]
---
Predecessors: [0x1c4]
Successors: [0x38a, 0x425]
---
0x374 JUMPDEST
0x375 PUSH1 0x1
0x377 SLOAD
0x378 PUSH1 0x0
0x37a SWAP1
0x37b PUSH1 0x1
0x37d PUSH1 0xa0
0x37f PUSH1 0x2
0x381 EXP
0x382 SUB
0x383 AND
0x384 CALLER
0x385 EQ
0x386 PUSH2 0x425
0x389 JUMPI
---
0x374: JUMPDEST 
0x375: V292 = 0x1
0x377: V293 = S[0x1]
0x378: V294 = 0x0
0x37b: V295 = 0x1
0x37d: V296 = 0xa0
0x37f: V297 = 0x2
0x381: V298 = EXP 0x2 0xa0
0x382: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x383: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x384: V301 = CALLER
0x385: V302 = EQ V301 V300
0x386: V303 = 0x425
0x389: JUMPI 0x425 V302
---
Entry stack: [V13, 0x1cd]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1cd, 0x0]

================================

Block 0x38a
[0x38a:0x424]
---
Predecessors: [0x374]
Successors: []
---
0x38a PUSH1 0x40
0x38c DUP1
0x38d MLOAD
0x38e PUSH1 0xe5
0x390 PUSH1 0x2
0x392 EXP
0x393 PUSH3 0x461bcd
0x397 MUL
0x398 DUP2
0x399 MSTORE
0x39a PUSH1 0x20
0x39c PUSH1 0x4
0x39e DUP3
0x39f ADD
0x3a0 MSTORE
0x3a1 PUSH1 0x47
0x3a3 PUSH1 0x24
0x3a5 DUP3
0x3a6 ADD
0x3a7 MSTORE
0x3a8 PUSH32 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x3c9 PUSH1 0x44
0x3cb DUP3
0x3cc ADD
0x3cd MSTORE
0x3ce PUSH32 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x3ef PUSH1 0x64
0x3f1 DUP3
0x3f2 ADD
0x3f3 MSTORE
0x3f4 PUSH32 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x415 PUSH1 0x84
0x417 DUP3
0x418 ADD
0x419 MSTORE
0x41a SWAP1
0x41b MLOAD
0x41c SWAP1
0x41d DUP2
0x41e SWAP1
0x41f SUB
0x420 PUSH1 0xa4
0x422 ADD
0x423 SWAP1
0x424 REVERT
---
0x38a: V304 = 0x40
0x38d: V305 = M[0x40]
0x38e: V306 = 0xe5
0x390: V307 = 0x2
0x392: V308 = EXP 0x2 0xe5
0x393: V309 = 0x461bcd
0x397: V310 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x399: M[V305] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x39a: V311 = 0x20
0x39c: V312 = 0x4
0x39f: V313 = ADD V305 0x4
0x3a0: M[V313] = 0x20
0x3a1: V314 = 0x47
0x3a3: V315 = 0x24
0x3a6: V316 = ADD V305 0x24
0x3a7: M[V316] = 0x47
0x3a8: V317 = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x3c9: V318 = 0x44
0x3cc: V319 = ADD V305 0x44
0x3cd: M[V319] = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x3ce: V320 = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x3ef: V321 = 0x64
0x3f2: V322 = ADD V305 0x64
0x3f3: M[V322] = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x3f4: V323 = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x415: V324 = 0x84
0x418: V325 = ADD V305 0x84
0x419: M[V325] = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x41b: V326 = M[0x40]
0x41f: V327 = SUB V305 V326
0x420: V328 = 0xa4
0x422: V329 = ADD 0xa4 V327
0x424: REVERT V326 V329
---
Entry stack: [V13, 0x1cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, 0x0]

================================

Block 0x425
[0x425:0x445]
---
Predecessors: [0x374]
Successors: [0x446]
---
0x425 JUMPDEST
0x426 POP
0x427 PUSH1 0x2
0x429 DUP1
0x42a SLOAD
0x42b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x440 NOT
0x441 AND
0x442 SWAP1
0x443 SSTORE
0x444 PUSH1 0x1
---
0x425: JUMPDEST 
0x427: V330 = 0x2
0x42a: V331 = S[0x2]
0x42b: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x440: V333 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x441: V334 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V331
0x443: S[0x2] = V334
0x444: V335 = 0x1
---
Entry stack: [V13, 0x1cd, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V13, 0x1cd, 0x1]

================================

Block 0x446
[0x446:0x448]
---
Predecessors: [0x425, 0xc2d, 0xc34]
Successors: [0x1cd]
---
0x446 JUMPDEST
0x447 SWAP1
0x448 JUMP
---
0x446: JUMPDEST 
0x448: JUMP 0x1cd
---
Entry stack: [V13, 0x1cd, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, {0x0, 0x1}]

================================

Block 0x449
[0x449:0x45e]
---
Predecessors: [0x1ed]
Successors: [0x45f, 0x4c2]
---
0x449 JUMPDEST
0x44a PUSH1 0x2
0x44c SLOAD
0x44d PUSH1 0x0
0x44f SWAP1
0x450 PUSH1 0xa0
0x452 PUSH1 0x2
0x454 EXP
0x455 SWAP1
0x456 DIV
0x457 PUSH1 0xff
0x459 AND
0x45a ISZERO
0x45b PUSH2 0x4c2
0x45e JUMPI
---
0x449: JUMPDEST 
0x44a: V336 = 0x2
0x44c: V337 = S[0x2]
0x44d: V338 = 0x0
0x450: V339 = 0xa0
0x452: V340 = 0x2
0x454: V341 = EXP 0x2 0xa0
0x456: V342 = DIV V337 0x10000000000000000000000000000000000000000
0x457: V343 = 0xff
0x459: V344 = AND 0xff V342
0x45a: V345 = ISZERO V344
0x45b: V346 = 0x4c2
0x45e: JUMPI 0x4c2 V345
---
Entry stack: [V13, 0x1f6]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1f6, 0x0]

================================

Block 0x45f
[0x45f:0x4c1]
---
Predecessors: [0x449]
Successors: []
---
0x45f PUSH1 0x40
0x461 DUP1
0x462 MLOAD
0x463 PUSH1 0xe5
0x465 PUSH1 0x2
0x467 EXP
0x468 PUSH3 0x461bcd
0x46c MUL
0x46d DUP2
0x46e MSTORE
0x46f PUSH1 0x20
0x471 PUSH1 0x4
0x473 DUP3
0x474 ADD
0x475 MSTORE
0x476 PUSH1 0x2d
0x478 PUSH1 0x24
0x47a DUP3
0x47b ADD
0x47c MSTORE
0x47d PUSH32 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x49e PUSH1 0x44
0x4a0 DUP3
0x4a1 ADD
0x4a2 MSTORE
0x4a3 PUSH1 0x0
0x4a5 DUP1
0x4a6 MLOAD
0x4a7 PUSH1 0x20
0x4a9 PUSH2 0xd6b
0x4ac DUP4
0x4ad CODECOPY
0x4ae DUP2
0x4af MLOAD
0x4b0 SWAP2
0x4b1 MSTORE
0x4b2 PUSH1 0x64
0x4b4 DUP3
0x4b5 ADD
0x4b6 MSTORE
0x4b7 SWAP1
0x4b8 MLOAD
0x4b9 SWAP1
0x4ba DUP2
0x4bb SWAP1
0x4bc SUB
0x4bd PUSH1 0x84
0x4bf ADD
0x4c0 SWAP1
0x4c1 REVERT
---
0x45f: V347 = 0x40
0x462: V348 = M[0x40]
0x463: V349 = 0xe5
0x465: V350 = 0x2
0x467: V351 = EXP 0x2 0xe5
0x468: V352 = 0x461bcd
0x46c: V353 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x46e: M[V348] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x46f: V354 = 0x20
0x471: V355 = 0x4
0x474: V356 = ADD V348 0x4
0x475: M[V356] = 0x20
0x476: V357 = 0x2d
0x478: V358 = 0x24
0x47b: V359 = ADD V348 0x24
0x47c: M[V359] = 0x2d
0x47d: V360 = 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x49e: V361 = 0x44
0x4a1: V362 = ADD V348 0x44
0x4a2: M[V362] = 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x4a3: V363 = 0x0
0x4a6: V364 = M[0x0]
0x4a7: V365 = 0x20
0x4a9: V366 = 0xd6b
0x4ad: CODECOPY 0x0 0xd6b 0x20
0x4af: V367 = M[0x0]
0x4b1: M[0x0] = V364
0x4b2: V368 = 0x64
0x4b5: V369 = ADD V348 0x64
0x4b6: M[V369] = V367
0x4b8: V370 = M[0x40]
0x4bc: V371 = SUB V348 V370
0x4bd: V372 = 0x84
0x4bf: V373 = ADD 0x84 V371
0x4c1: REVERT V370 V373
---
Entry stack: [V13, 0x1f6, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1f6, 0x0]

================================

Block 0x4c2
[0x4c2:0x510]
---
Predecessors: [0x449]
Successors: [0x511, 0x515]
---
0x4c2 JUMPDEST
0x4c3 PUSH1 0x1
0x4c5 PUSH1 0x0
0x4c7 SWAP1
0x4c8 SLOAD
0x4c9 SWAP1
0x4ca PUSH2 0x100
0x4cd EXP
0x4ce SWAP1
0x4cf DIV
0x4d0 PUSH1 0x1
0x4d2 PUSH1 0xa0
0x4d4 PUSH1 0x2
0x4d6 EXP
0x4d7 SUB
0x4d8 AND
0x4d9 PUSH1 0x1
0x4db PUSH1 0xa0
0x4dd PUSH1 0x2
0x4df EXP
0x4e0 SUB
0x4e1 AND
0x4e2 PUSH4 0x112dcbd8
0x4e7 PUSH1 0x40
0x4e9 MLOAD
0x4ea DUP2
0x4eb PUSH4 0xffffffff
0x4f0 AND
0x4f1 PUSH1 0xe0
0x4f3 PUSH1 0x2
0x4f5 EXP
0x4f6 MUL
0x4f7 DUP2
0x4f8 MSTORE
0x4f9 PUSH1 0x4
0x4fb ADD
0x4fc PUSH1 0x20
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 DUP1
0x502 DUP4
0x503 SUB
0x504 DUP2
0x505 PUSH1 0x0
0x507 DUP8
0x508 DUP1
0x509 EXTCODESIZE
0x50a ISZERO
0x50b DUP1
0x50c ISZERO
0x50d PUSH2 0x515
0x510 JUMPI
---
0x4c2: JUMPDEST 
0x4c3: V374 = 0x1
0x4c5: V375 = 0x0
0x4c8: V376 = S[0x1]
0x4ca: V377 = 0x100
0x4cd: V378 = EXP 0x100 0x0
0x4cf: V379 = DIV V376 0x1
0x4d0: V380 = 0x1
0x4d2: V381 = 0xa0
0x4d4: V382 = 0x2
0x4d6: V383 = EXP 0x2 0xa0
0x4d7: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d8: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x4d9: V386 = 0x1
0x4db: V387 = 0xa0
0x4dd: V388 = 0x2
0x4df: V389 = EXP 0x2 0xa0
0x4e0: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e1: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x4e2: V392 = 0x112dcbd8
0x4e7: V393 = 0x40
0x4e9: V394 = M[0x40]
0x4eb: V395 = 0xffffffff
0x4f0: V396 = AND 0xffffffff 0x112dcbd8
0x4f1: V397 = 0xe0
0x4f3: V398 = 0x2
0x4f5: V399 = EXP 0x2 0xe0
0x4f6: V400 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x112dcbd8
0x4f8: M[V394] = 0x112dcbd800000000000000000000000000000000000000000000000000000000
0x4f9: V401 = 0x4
0x4fb: V402 = ADD 0x4 V394
0x4fc: V403 = 0x20
0x4fe: V404 = 0x40
0x500: V405 = M[0x40]
0x503: V406 = SUB V402 V405
0x505: V407 = 0x0
0x509: V408 = EXTCODESIZE V391
0x50a: V409 = ISZERO V408
0x50c: V410 = ISZERO V409
0x50d: V411 = 0x515
0x510: JUMPI 0x515 V410
---
Entry stack: [V13, 0x1f6, 0x0]
Stack pops: 0
Stack additions: [V391, 0x112dcbd8, V402, 0x20, V405, V406, V405, 0x0, V391, V409]
Exit stack: [V13, 0x1f6, 0x0, V391, 0x112dcbd8, V402, 0x20, V405, V406, V405, 0x0, V391, V409]

================================

Block 0x511
[0x511:0x514]
---
Predecessors: [0x4c2]
Successors: []
---
0x511 PUSH1 0x0
0x513 DUP1
0x514 REVERT
---
0x511: V412 = 0x0
0x514: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1f6, 0x0, V391, 0x112dcbd8, V402, 0x20, V405, V406, V405, 0x0, V391, V409]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1f6, 0x0, V391, 0x112dcbd8, V402, 0x20, V405, V406, V405, 0x0, V391, V409]

================================

Block 0x515
[0x515:0x51f]
---
Predecessors: [0x4c2, 0x5e3, 0x800]
Successors: [0x520, 0x529]
---
0x515 JUMPDEST
0x516 POP
0x517 GAS
0x518 CALL
0x519 ISZERO
0x51a DUP1
0x51b ISZERO
0x51c PUSH2 0x529
0x51f JUMPI
---
0x515: JUMPDEST 
0x517: V413 = GAS
0x518: V414 = CALL V413 S1 0x0 S3 S4 S5 0x20
0x519: V415 = ISZERO V414
0x51b: V416 = ISZERO V415
0x51c: V417 = 0x529
0x51f: JUMPI 0x529 V416
---
Entry stack: [V13, 0x1f6, 0x0, S9, {0x112dcbd8, 0x60d704db, 0x7c784a01}, S7, 0x20, S5, S4, S3, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V415]
Exit stack: [V13, 0x1f6, 0x0, S9, {0x112dcbd8, 0x60d704db, 0x7c784a01}, S7, V415]

================================

Block 0x520
[0x520:0x528]
---
Predecessors: [0x515]
Successors: []
---
0x520 RETURNDATASIZE
0x521 PUSH1 0x0
0x523 DUP1
0x524 RETURNDATACOPY
0x525 RETURNDATASIZE
0x526 PUSH1 0x0
0x528 REVERT
---
0x520: V418 = RETURNDATASIZE
0x521: V419 = 0x0
0x524: RETURNDATACOPY 0x0 0x0 V418
0x525: V420 = RETURNDATASIZE
0x526: V421 = 0x0
0x528: REVERT 0x0 V420
---
Entry stack: [V13, 0x1f6, 0x0, S3, {0x112dcbd8, 0x60d704db, 0x7c784a01}, S1, V415]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1f6, 0x0, S3, {0x112dcbd8, 0x60d704db, 0x7c784a01}, S1, V415]

================================

Block 0x529
[0x529:0x53a]
---
Predecessors: [0x515]
Successors: [0x53b, 0x53f]
---
0x529 JUMPDEST
0x52a POP
0x52b POP
0x52c POP
0x52d POP
0x52e PUSH1 0x40
0x530 MLOAD
0x531 RETURNDATASIZE
0x532 PUSH1 0x20
0x534 DUP2
0x535 LT
0x536 ISZERO
0x537 PUSH2 0x53f
0x53a JUMPI
---
0x529: JUMPDEST 
0x52e: V422 = 0x40
0x530: V423 = M[0x40]
0x531: V424 = RETURNDATASIZE
0x532: V425 = 0x20
0x535: V426 = LT V424 0x20
0x536: V427 = ISZERO V426
0x537: V428 = 0x53f
0x53a: JUMPI 0x53f V427
---
Entry stack: [V13, 0x1f6, 0x0, S3, {0x112dcbd8, 0x60d704db, 0x7c784a01}, S1, V415]
Stack pops: 4
Stack additions: [V423, V424]
Exit stack: [V13, 0x1f6, 0x0, V423, V424]

================================

Block 0x53b
[0x53b:0x53e]
---
Predecessors: [0x529]
Successors: []
---
0x53b PUSH1 0x0
0x53d DUP1
0x53e REVERT
---
0x53b: V429 = 0x0
0x53e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1f6, 0x0, V423, V424]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1f6, 0x0, V423, V424]

================================

Block 0x53f
[0x53f:0x545]
---
Predecessors: [0x529]
Successors: [0x1f6]
---
0x53f JUMPDEST
0x540 POP
0x541 MLOAD
0x542 SWAP1
0x543 POP
0x544 SWAP1
0x545 JUMP
---
0x53f: JUMPDEST 
0x541: V430 = M[V423]
0x545: JUMP 0x1f6
---
Entry stack: [V13, 0x1f6, 0x0, V423, V424]
Stack pops: 4
Stack additions: [V430]
Exit stack: [V13, V430]

================================

Block 0x546
[0x546:0x569]
---
Predecessors: [0x21e]
Successors: [0x227]
---
0x546 JUMPDEST
0x547 PUSH1 0x1
0x549 SLOAD
0x54a PUSH1 0x2
0x54c SLOAD
0x54d PUSH1 0x1
0x54f PUSH1 0xa0
0x551 PUSH1 0x2
0x553 EXP
0x554 SUB
0x555 SWAP2
0x556 DUP3
0x557 AND
0x558 SWAP3
0x559 SWAP2
0x55a DUP2
0x55b AND
0x55c SWAP2
0x55d PUSH1 0xa0
0x55f PUSH1 0x2
0x561 EXP
0x562 SWAP1
0x563 SWAP2
0x564 DIV
0x565 PUSH1 0xff
0x567 AND
0x568 SWAP1
0x569 JUMP
---
0x546: JUMPDEST 
0x547: V431 = 0x1
0x549: V432 = S[0x1]
0x54a: V433 = 0x2
0x54c: V434 = S[0x2]
0x54d: V435 = 0x1
0x54f: V436 = 0xa0
0x551: V437 = 0x2
0x553: V438 = EXP 0x2 0xa0
0x554: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x557: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x55b: V441 = AND V434 0xffffffffffffffffffffffffffffffffffffffff
0x55d: V442 = 0xa0
0x55f: V443 = 0x2
0x561: V444 = EXP 0x2 0xa0
0x564: V445 = DIV V434 0x10000000000000000000000000000000000000000
0x565: V446 = 0xff
0x567: V447 = AND 0xff V445
0x569: JUMP 0x227
---
Entry stack: [V13, 0x227]
Stack pops: 1
Stack additions: [V440, V441, V447]
Exit stack: [V13, V440, V441, V447]

================================

Block 0x56a
[0x56a:0x57f]
---
Predecessors: [0x25f]
Successors: [0x580, 0x5e3]
---
0x56a JUMPDEST
0x56b PUSH1 0x2
0x56d SLOAD
0x56e PUSH1 0x0
0x570 SWAP1
0x571 PUSH1 0xa0
0x573 PUSH1 0x2
0x575 EXP
0x576 SWAP1
0x577 DIV
0x578 PUSH1 0xff
0x57a AND
0x57b ISZERO
0x57c PUSH2 0x5e3
0x57f JUMPI
---
0x56a: JUMPDEST 
0x56b: V448 = 0x2
0x56d: V449 = S[0x2]
0x56e: V450 = 0x0
0x571: V451 = 0xa0
0x573: V452 = 0x2
0x575: V453 = EXP 0x2 0xa0
0x577: V454 = DIV V449 0x10000000000000000000000000000000000000000
0x578: V455 = 0xff
0x57a: V456 = AND 0xff V454
0x57b: V457 = ISZERO V456
0x57c: V458 = 0x5e3
0x57f: JUMPI 0x5e3 V457
---
Entry stack: [V13, 0x1f6]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1f6, 0x0]

================================

Block 0x580
[0x580:0x5e2]
---
Predecessors: [0x56a]
Successors: []
---
0x580 PUSH1 0x40
0x582 DUP1
0x583 MLOAD
0x584 PUSH1 0xe5
0x586 PUSH1 0x2
0x588 EXP
0x589 PUSH3 0x461bcd
0x58d MUL
0x58e DUP2
0x58f MSTORE
0x590 PUSH1 0x20
0x592 PUSH1 0x4
0x594 DUP3
0x595 ADD
0x596 MSTORE
0x597 PUSH1 0x2d
0x599 PUSH1 0x24
0x59b DUP3
0x59c ADD
0x59d MSTORE
0x59e PUSH32 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x5bf PUSH1 0x44
0x5c1 DUP3
0x5c2 ADD
0x5c3 MSTORE
0x5c4 PUSH1 0x0
0x5c6 DUP1
0x5c7 MLOAD
0x5c8 PUSH1 0x20
0x5ca PUSH2 0xd6b
0x5cd DUP4
0x5ce CODECOPY
0x5cf DUP2
0x5d0 MLOAD
0x5d1 SWAP2
0x5d2 MSTORE
0x5d3 PUSH1 0x64
0x5d5 DUP3
0x5d6 ADD
0x5d7 MSTORE
0x5d8 SWAP1
0x5d9 MLOAD
0x5da SWAP1
0x5db DUP2
0x5dc SWAP1
0x5dd SUB
0x5de PUSH1 0x84
0x5e0 ADD
0x5e1 SWAP1
0x5e2 REVERT
---
0x580: V459 = 0x40
0x583: V460 = M[0x40]
0x584: V461 = 0xe5
0x586: V462 = 0x2
0x588: V463 = EXP 0x2 0xe5
0x589: V464 = 0x461bcd
0x58d: V465 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x58f: M[V460] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x590: V466 = 0x20
0x592: V467 = 0x4
0x595: V468 = ADD V460 0x4
0x596: M[V468] = 0x20
0x597: V469 = 0x2d
0x599: V470 = 0x24
0x59c: V471 = ADD V460 0x24
0x59d: M[V471] = 0x2d
0x59e: V472 = 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x5bf: V473 = 0x44
0x5c2: V474 = ADD V460 0x44
0x5c3: M[V474] = 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x5c4: V475 = 0x0
0x5c7: V476 = M[0x0]
0x5c8: V477 = 0x20
0x5ca: V478 = 0xd6b
0x5ce: CODECOPY 0x0 0xd6b 0x20
0x5d0: V479 = M[0x0]
0x5d2: M[0x0] = V476
0x5d3: V480 = 0x64
0x5d6: V481 = ADD V460 0x64
0x5d7: M[V481] = V479
0x5d9: V482 = M[0x40]
0x5dd: V483 = SUB V460 V482
0x5de: V484 = 0x84
0x5e0: V485 = ADD 0x84 V483
0x5e2: REVERT V482 V485
---
Entry stack: [V13, 0x1f6, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1f6, 0x0]

================================

Block 0x5e3
[0x5e3:0x631]
---
Predecessors: [0x56a]
Successors: [0x515, 0x632]
---
0x5e3 JUMPDEST
0x5e4 PUSH1 0x1
0x5e6 PUSH1 0x0
0x5e8 SWAP1
0x5e9 SLOAD
0x5ea SWAP1
0x5eb PUSH2 0x100
0x5ee EXP
0x5ef SWAP1
0x5f0 DIV
0x5f1 PUSH1 0x1
0x5f3 PUSH1 0xa0
0x5f5 PUSH1 0x2
0x5f7 EXP
0x5f8 SUB
0x5f9 AND
0x5fa PUSH1 0x1
0x5fc PUSH1 0xa0
0x5fe PUSH1 0x2
0x600 EXP
0x601 SUB
0x602 AND
0x603 PUSH4 0x60d704db
0x608 PUSH1 0x40
0x60a MLOAD
0x60b DUP2
0x60c PUSH4 0xffffffff
0x611 AND
0x612 PUSH1 0xe0
0x614 PUSH1 0x2
0x616 EXP
0x617 MUL
0x618 DUP2
0x619 MSTORE
0x61a PUSH1 0x4
0x61c ADD
0x61d PUSH1 0x20
0x61f PUSH1 0x40
0x621 MLOAD
0x622 DUP1
0x623 DUP4
0x624 SUB
0x625 DUP2
0x626 PUSH1 0x0
0x628 DUP8
0x629 DUP1
0x62a EXTCODESIZE
0x62b ISZERO
0x62c DUP1
0x62d ISZERO
0x62e PUSH2 0x515
0x631 JUMPI
---
0x5e3: JUMPDEST 
0x5e4: V486 = 0x1
0x5e6: V487 = 0x0
0x5e9: V488 = S[0x1]
0x5eb: V489 = 0x100
0x5ee: V490 = EXP 0x100 0x0
0x5f0: V491 = DIV V488 0x1
0x5f1: V492 = 0x1
0x5f3: V493 = 0xa0
0x5f5: V494 = 0x2
0x5f7: V495 = EXP 0x2 0xa0
0x5f8: V496 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f9: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x5fa: V498 = 0x1
0x5fc: V499 = 0xa0
0x5fe: V500 = 0x2
0x600: V501 = EXP 0x2 0xa0
0x601: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x602: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x603: V504 = 0x60d704db
0x608: V505 = 0x40
0x60a: V506 = M[0x40]
0x60c: V507 = 0xffffffff
0x611: V508 = AND 0xffffffff 0x60d704db
0x612: V509 = 0xe0
0x614: V510 = 0x2
0x616: V511 = EXP 0x2 0xe0
0x617: V512 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x60d704db
0x619: M[V506] = 0x60d704db00000000000000000000000000000000000000000000000000000000
0x61a: V513 = 0x4
0x61c: V514 = ADD 0x4 V506
0x61d: V515 = 0x20
0x61f: V516 = 0x40
0x621: V517 = M[0x40]
0x624: V518 = SUB V514 V517
0x626: V519 = 0x0
0x62a: V520 = EXTCODESIZE V503
0x62b: V521 = ISZERO V520
0x62d: V522 = ISZERO V521
0x62e: V523 = 0x515
0x631: JUMPI 0x515 V522
---
Entry stack: [V13, 0x1f6, 0x0]
Stack pops: 0
Stack additions: [V503, 0x60d704db, V514, 0x20, V517, V518, V517, 0x0, V503, V521]
Exit stack: [V13, 0x1f6, 0x0, V503, 0x60d704db, V514, 0x20, V517, V518, V517, 0x0, V503, V521]

================================

Block 0x632
[0x632:0x635]
---
Predecessors: [0x5e3]
Successors: []
---
0x632 PUSH1 0x0
0x634 DUP1
0x635 REVERT
---
0x632: V524 = 0x0
0x635: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1f6, 0x0, V503, 0x60d704db, V514, 0x20, V517, V518, V517, 0x0, V503, V521]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1f6, 0x0, V503, 0x60d704db, V514, 0x20, V517, V518, V517, 0x0, V503, V521]

================================

Block 0x636
[0x636:0x64c]
---
Predecessors: [0x274]
Successors: [0x64d, 0x6c2]
---
0x636 JUMPDEST
0x637 PUSH1 0x2
0x639 SLOAD
0x63a PUSH1 0xa0
0x63c PUSH1 0x2
0x63e EXP
0x63f SWAP1
0x640 DIV
0x641 PUSH1 0xff
0x643 AND
0x644 ISZERO
0x645 ISZERO
0x646 PUSH1 0x1
0x648 EQ
0x649 PUSH2 0x6c2
0x64c JUMPI
---
0x636: JUMPDEST 
0x637: V525 = 0x2
0x639: V526 = S[0x2]
0x63a: V527 = 0xa0
0x63c: V528 = 0x2
0x63e: V529 = EXP 0x2 0xa0
0x640: V530 = DIV V526 0x10000000000000000000000000000000000000000
0x641: V531 = 0xff
0x643: V532 = AND 0xff V530
0x644: V533 = ISZERO V532
0x645: V534 = ISZERO V533
0x646: V535 = 0x1
0x648: V536 = EQ 0x1 V534
0x649: V537 = 0x6c2
0x64c: JUMPI 0x6c2 V536
---
Entry stack: [V13, 0x289, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289, V209]

================================

Block 0x64d
[0x64d:0x6c1]
---
Predecessors: [0x636]
Successors: []
---
0x64d PUSH1 0x40
0x64f DUP1
0x650 MLOAD
0x651 PUSH1 0xe5
0x653 PUSH1 0x2
0x655 EXP
0x656 PUSH3 0x461bcd
0x65a MUL
0x65b DUP2
0x65c MSTORE
0x65d PUSH1 0x20
0x65f PUSH1 0x4
0x661 DUP3
0x662 ADD
0x663 MSTORE
0x664 PUSH1 0x35
0x666 PUSH1 0x24
0x668 DUP3
0x669 ADD
0x66a MSTORE
0x66b PUSH32 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x68c PUSH1 0x44
0x68e DUP3
0x68f ADD
0x690 MSTORE
0x691 PUSH32 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x6b2 PUSH1 0x64
0x6b4 DUP3
0x6b5 ADD
0x6b6 MSTORE
0x6b7 SWAP1
0x6b8 MLOAD
0x6b9 SWAP1
0x6ba DUP2
0x6bb SWAP1
0x6bc SUB
0x6bd PUSH1 0x84
0x6bf ADD
0x6c0 SWAP1
0x6c1 REVERT
---
0x64d: V538 = 0x40
0x650: V539 = M[0x40]
0x651: V540 = 0xe5
0x653: V541 = 0x2
0x655: V542 = EXP 0x2 0xe5
0x656: V543 = 0x461bcd
0x65a: V544 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x65c: M[V539] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x65d: V545 = 0x20
0x65f: V546 = 0x4
0x662: V547 = ADD V539 0x4
0x663: M[V547] = 0x20
0x664: V548 = 0x35
0x666: V549 = 0x24
0x669: V550 = ADD V539 0x24
0x66a: M[V550] = 0x35
0x66b: V551 = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x68c: V552 = 0x44
0x68f: V553 = ADD V539 0x44
0x690: M[V553] = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x691: V554 = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x6b2: V555 = 0x64
0x6b5: V556 = ADD V539 0x64
0x6b6: M[V556] = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x6b8: V557 = M[0x40]
0x6bc: V558 = SUB V539 V557
0x6bd: V559 = 0x84
0x6bf: V560 = ADD 0x84 V558
0x6c1: REVERT V557 V560
---
Entry stack: [V13, 0x289, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289, V209]

================================

Block 0x6c2
[0x6c2:0x6fb]
---
Predecessors: [0x636]
Successors: [0x6fc, 0x700]
---
0x6c2 JUMPDEST
0x6c3 DUP1
0x6c4 PUSH1 0x1
0x6c6 PUSH1 0xa0
0x6c8 PUSH1 0x2
0x6ca EXP
0x6cb SUB
0x6cc AND
0x6cd PUSH4 0x839e0fb
0x6d2 PUSH1 0x40
0x6d4 MLOAD
0x6d5 DUP2
0x6d6 PUSH4 0xffffffff
0x6db AND
0x6dc PUSH1 0xe0
0x6de PUSH1 0x2
0x6e0 EXP
0x6e1 MUL
0x6e2 DUP2
0x6e3 MSTORE
0x6e4 PUSH1 0x4
0x6e6 ADD
0x6e7 PUSH1 0x20
0x6e9 PUSH1 0x40
0x6eb MLOAD
0x6ec DUP1
0x6ed DUP4
0x6ee SUB
0x6ef DUP2
0x6f0 PUSH1 0x0
0x6f2 DUP8
0x6f3 DUP1
0x6f4 EXTCODESIZE
0x6f5 ISZERO
0x6f6 DUP1
0x6f7 ISZERO
0x6f8 PUSH2 0x700
0x6fb JUMPI
---
0x6c2: JUMPDEST 
0x6c4: V561 = 0x1
0x6c6: V562 = 0xa0
0x6c8: V563 = 0x2
0x6ca: V564 = EXP 0x2 0xa0
0x6cb: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cc: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x6cd: V567 = 0x839e0fb
0x6d2: V568 = 0x40
0x6d4: V569 = M[0x40]
0x6d6: V570 = 0xffffffff
0x6db: V571 = AND 0xffffffff 0x839e0fb
0x6dc: V572 = 0xe0
0x6de: V573 = 0x2
0x6e0: V574 = EXP 0x2 0xe0
0x6e1: V575 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x839e0fb
0x6e3: M[V569] = 0x839e0fb00000000000000000000000000000000000000000000000000000000
0x6e4: V576 = 0x4
0x6e6: V577 = ADD 0x4 V569
0x6e7: V578 = 0x20
0x6e9: V579 = 0x40
0x6eb: V580 = M[0x40]
0x6ee: V581 = SUB V577 V580
0x6f0: V582 = 0x0
0x6f4: V583 = EXTCODESIZE V566
0x6f5: V584 = ISZERO V583
0x6f7: V585 = ISZERO V584
0x6f8: V586 = 0x700
0x6fb: JUMPI 0x700 V585
---
Entry stack: [V13, 0x289, V209]
Stack pops: 1
Stack additions: [S0, V566, 0x839e0fb, V577, 0x20, V580, V581, V580, 0x0, V566, V584]
Exit stack: [V13, 0x289, V209, V566, 0x839e0fb, V577, 0x20, V580, V581, V580, 0x0, V566, V584]

================================

Block 0x6fc
[0x6fc:0x6ff]
---
Predecessors: [0x6c2]
Successors: []
---
0x6fc PUSH1 0x0
0x6fe DUP1
0x6ff REVERT
---
0x6fc: V587 = 0x0
0x6ff: REVERT 0x0 0x0
---
Entry stack: [V13, 0x289, V209, V566, 0x839e0fb, V577, 0x20, V580, V581, V580, 0x0, V566, V584]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289, V209, V566, 0x839e0fb, V577, 0x20, V580, V581, V580, 0x0, V566, V584]

================================

Block 0x700
[0x700:0x70a]
---
Predecessors: [0x6c2]
Successors: [0x70b, 0x714]
---
0x700 JUMPDEST
0x701 POP
0x702 GAS
0x703 CALL
0x704 ISZERO
0x705 DUP1
0x706 ISZERO
0x707 PUSH2 0x714
0x70a JUMPI
---
0x700: JUMPDEST 
0x702: V588 = GAS
0x703: V589 = CALL V588 V566 0x0 V580 V581 V580 0x20
0x704: V590 = ISZERO V589
0x706: V591 = ISZERO V590
0x707: V592 = 0x714
0x70a: JUMPI 0x714 V591
---
Entry stack: [V13, 0x289, V209, V566, 0x839e0fb, V577, 0x20, V580, V581, V580, 0x0, V566, V584]
Stack pops: 7
Stack additions: [V590]
Exit stack: [V13, 0x289, V209, V566, 0x839e0fb, V577, V590]

================================

Block 0x70b
[0x70b:0x713]
---
Predecessors: [0x700]
Successors: []
---
0x70b RETURNDATASIZE
0x70c PUSH1 0x0
0x70e DUP1
0x70f RETURNDATACOPY
0x710 RETURNDATASIZE
0x711 PUSH1 0x0
0x713 REVERT
---
0x70b: V593 = RETURNDATASIZE
0x70c: V594 = 0x0
0x70f: RETURNDATACOPY 0x0 0x0 V593
0x710: V595 = RETURNDATASIZE
0x711: V596 = 0x0
0x713: REVERT 0x0 V595
---
Entry stack: [V13, 0x289, V209, V566, 0x839e0fb, V577, V590]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289, V209, V566, 0x839e0fb, V577, V590]

================================

Block 0x714
[0x714:0x725]
---
Predecessors: [0x700]
Successors: [0x726, 0x72a]
---
0x714 JUMPDEST
0x715 POP
0x716 POP
0x717 POP
0x718 POP
0x719 PUSH1 0x40
0x71b MLOAD
0x71c RETURNDATASIZE
0x71d PUSH1 0x20
0x71f DUP2
0x720 LT
0x721 ISZERO
0x722 PUSH2 0x72a
0x725 JUMPI
---
0x714: JUMPDEST 
0x719: V597 = 0x40
0x71b: V598 = M[0x40]
0x71c: V599 = RETURNDATASIZE
0x71d: V600 = 0x20
0x720: V601 = LT V599 0x20
0x721: V602 = ISZERO V601
0x722: V603 = 0x72a
0x725: JUMPI 0x72a V602
---
Entry stack: [V13, 0x289, V209, V566, 0x839e0fb, V577, V590]
Stack pops: 4
Stack additions: [V598, V599]
Exit stack: [V13, 0x289, V209, V598, V599]

================================

Block 0x726
[0x726:0x729]
---
Predecessors: [0x714]
Successors: []
---
0x726 PUSH1 0x0
0x728 DUP1
0x729 REVERT
---
0x726: V604 = 0x0
0x729: REVERT 0x0 0x0
---
Entry stack: [V13, 0x289, V209, V598, V599]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289, V209, V598, V599]

================================

Block 0x72a
[0x72a:0x735]
---
Predecessors: [0x714]
Successors: [0x736, 0x73a]
---
0x72a JUMPDEST
0x72b POP
0x72c MLOAD
0x72d ISZERO
0x72e ISZERO
0x72f PUSH1 0x1
0x731 EQ
0x732 PUSH2 0x73a
0x735 JUMPI
---
0x72a: JUMPDEST 
0x72c: V605 = M[V598]
0x72d: V606 = ISZERO V605
0x72e: V607 = ISZERO V606
0x72f: V608 = 0x1
0x731: V609 = EQ 0x1 V607
0x732: V610 = 0x73a
0x735: JUMPI 0x73a V609
---
Entry stack: [V13, 0x289, V209, V598, V599]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x289, V209]

================================

Block 0x736
[0x736:0x739]
---
Predecessors: [0x72a]
Successors: []
---
0x736 PUSH1 0x0
0x738 DUP1
0x739 REVERT
---
0x736: V611 = 0x0
0x739: REVERT 0x0 0x0
---
Entry stack: [V13, 0x289, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289, V209]

================================

Block 0x73a
[0x73a:0x786]
---
Predecessors: [0x72a]
Successors: [0x289]
---
0x73a JUMPDEST
0x73b PUSH1 0x1
0x73d DUP1
0x73e SLOAD
0x73f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x754 NOT
0x755 AND
0x756 PUSH1 0x1
0x758 PUSH1 0xa0
0x75a PUSH1 0x2
0x75c EXP
0x75d SUB
0x75e SWAP3
0x75f SWAP1
0x760 SWAP3
0x761 AND
0x762 SWAP2
0x763 SWAP1
0x764 SWAP2
0x765 OR
0x766 SWAP1
0x767 SSTORE
0x768 PUSH1 0x2
0x76a DUP1
0x76b SLOAD
0x76c PUSH21 0xff0000000000000000000000000000000000000000
0x782 NOT
0x783 AND
0x784 SWAP1
0x785 SSTORE
0x786 JUMP
---
0x73a: JUMPDEST 
0x73b: V612 = 0x1
0x73e: V613 = S[0x1]
0x73f: V614 = 0xffffffffffffffffffffffffffffffffffffffff
0x754: V615 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x755: V616 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V613
0x756: V617 = 0x1
0x758: V618 = 0xa0
0x75a: V619 = 0x2
0x75c: V620 = EXP 0x2 0xa0
0x75d: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x761: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x765: V623 = OR V622 V616
0x767: S[0x1] = V623
0x768: V624 = 0x2
0x76b: V625 = S[0x2]
0x76c: V626 = 0xff0000000000000000000000000000000000000000
0x782: V627 = NOT 0xff0000000000000000000000000000000000000000
0x783: V628 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V625
0x785: S[0x2] = V628
0x786: JUMP 0x289
---
Entry stack: [V13, 0x289, V209]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x787
[0x787:0x79c]
---
Predecessors: [0x297]
Successors: [0x79d, 0x800]
---
0x787 JUMPDEST
0x788 PUSH1 0x2
0x78a SLOAD
0x78b PUSH1 0x0
0x78d SWAP1
0x78e PUSH1 0xa0
0x790 PUSH1 0x2
0x792 EXP
0x793 SWAP1
0x794 DIV
0x795 PUSH1 0xff
0x797 AND
0x798 ISZERO
0x799 PUSH2 0x800
0x79c JUMPI
---
0x787: JUMPDEST 
0x788: V629 = 0x2
0x78a: V630 = S[0x2]
0x78b: V631 = 0x0
0x78e: V632 = 0xa0
0x790: V633 = 0x2
0x792: V634 = EXP 0x2 0xa0
0x794: V635 = DIV V630 0x10000000000000000000000000000000000000000
0x795: V636 = 0xff
0x797: V637 = AND 0xff V635
0x798: V638 = ISZERO V637
0x799: V639 = 0x800
0x79c: JUMPI 0x800 V638
---
Entry stack: [V13, 0x1f6]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1f6, 0x0]

================================

Block 0x79d
[0x79d:0x7ff]
---
Predecessors: [0x787]
Successors: []
---
0x79d PUSH1 0x40
0x79f DUP1
0x7a0 MLOAD
0x7a1 PUSH1 0xe5
0x7a3 PUSH1 0x2
0x7a5 EXP
0x7a6 PUSH3 0x461bcd
0x7aa MUL
0x7ab DUP2
0x7ac MSTORE
0x7ad PUSH1 0x20
0x7af PUSH1 0x4
0x7b1 DUP3
0x7b2 ADD
0x7b3 MSTORE
0x7b4 PUSH1 0x2d
0x7b6 PUSH1 0x24
0x7b8 DUP3
0x7b9 ADD
0x7ba MSTORE
0x7bb PUSH32 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x7dc PUSH1 0x44
0x7de DUP3
0x7df ADD
0x7e0 MSTORE
0x7e1 PUSH1 0x0
0x7e3 DUP1
0x7e4 MLOAD
0x7e5 PUSH1 0x20
0x7e7 PUSH2 0xd6b
0x7ea DUP4
0x7eb CODECOPY
0x7ec DUP2
0x7ed MLOAD
0x7ee SWAP2
0x7ef MSTORE
0x7f0 PUSH1 0x64
0x7f2 DUP3
0x7f3 ADD
0x7f4 MSTORE
0x7f5 SWAP1
0x7f6 MLOAD
0x7f7 SWAP1
0x7f8 DUP2
0x7f9 SWAP1
0x7fa SUB
0x7fb PUSH1 0x84
0x7fd ADD
0x7fe SWAP1
0x7ff REVERT
---
0x79d: V640 = 0x40
0x7a0: V641 = M[0x40]
0x7a1: V642 = 0xe5
0x7a3: V643 = 0x2
0x7a5: V644 = EXP 0x2 0xe5
0x7a6: V645 = 0x461bcd
0x7aa: V646 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x7ac: M[V641] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7ad: V647 = 0x20
0x7af: V648 = 0x4
0x7b2: V649 = ADD V641 0x4
0x7b3: M[V649] = 0x20
0x7b4: V650 = 0x2d
0x7b6: V651 = 0x24
0x7b9: V652 = ADD V641 0x24
0x7ba: M[V652] = 0x2d
0x7bb: V653 = 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x7dc: V654 = 0x44
0x7df: V655 = ADD V641 0x44
0x7e0: M[V655] = 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x7e1: V656 = 0x0
0x7e4: V657 = M[0x0]
0x7e5: V658 = 0x20
0x7e7: V659 = 0xd6b
0x7eb: CODECOPY 0x0 0xd6b 0x20
0x7ed: V660 = M[0x0]
0x7ef: M[0x0] = V657
0x7f0: V661 = 0x64
0x7f3: V662 = ADD V641 0x64
0x7f4: M[V662] = V660
0x7f6: V663 = M[0x40]
0x7fa: V664 = SUB V641 V663
0x7fb: V665 = 0x84
0x7fd: V666 = ADD 0x84 V664
0x7ff: REVERT V663 V666
---
Entry stack: [V13, 0x1f6, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1f6, 0x0]

================================

Block 0x800
[0x800:0x84e]
---
Predecessors: [0x787]
Successors: [0x515, 0x84f]
---
0x800 JUMPDEST
0x801 PUSH1 0x1
0x803 PUSH1 0x0
0x805 SWAP1
0x806 SLOAD
0x807 SWAP1
0x808 PUSH2 0x100
0x80b EXP
0x80c SWAP1
0x80d DIV
0x80e PUSH1 0x1
0x810 PUSH1 0xa0
0x812 PUSH1 0x2
0x814 EXP
0x815 SUB
0x816 AND
0x817 PUSH1 0x1
0x819 PUSH1 0xa0
0x81b PUSH1 0x2
0x81d EXP
0x81e SUB
0x81f AND
0x820 PUSH4 0x7c784a01
0x825 PUSH1 0x40
0x827 MLOAD
0x828 DUP2
0x829 PUSH4 0xffffffff
0x82e AND
0x82f PUSH1 0xe0
0x831 PUSH1 0x2
0x833 EXP
0x834 MUL
0x835 DUP2
0x836 MSTORE
0x837 PUSH1 0x4
0x839 ADD
0x83a PUSH1 0x20
0x83c PUSH1 0x40
0x83e MLOAD
0x83f DUP1
0x840 DUP4
0x841 SUB
0x842 DUP2
0x843 PUSH1 0x0
0x845 DUP8
0x846 DUP1
0x847 EXTCODESIZE
0x848 ISZERO
0x849 DUP1
0x84a ISZERO
0x84b PUSH2 0x515
0x84e JUMPI
---
0x800: JUMPDEST 
0x801: V667 = 0x1
0x803: V668 = 0x0
0x806: V669 = S[0x1]
0x808: V670 = 0x100
0x80b: V671 = EXP 0x100 0x0
0x80d: V672 = DIV V669 0x1
0x80e: V673 = 0x1
0x810: V674 = 0xa0
0x812: V675 = 0x2
0x814: V676 = EXP 0x2 0xa0
0x815: V677 = SUB 0x10000000000000000000000000000000000000000 0x1
0x816: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V672
0x817: V679 = 0x1
0x819: V680 = 0xa0
0x81b: V681 = 0x2
0x81d: V682 = EXP 0x2 0xa0
0x81e: V683 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81f: V684 = AND 0xffffffffffffffffffffffffffffffffffffffff V678
0x820: V685 = 0x7c784a01
0x825: V686 = 0x40
0x827: V687 = M[0x40]
0x829: V688 = 0xffffffff
0x82e: V689 = AND 0xffffffff 0x7c784a01
0x82f: V690 = 0xe0
0x831: V691 = 0x2
0x833: V692 = EXP 0x2 0xe0
0x834: V693 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7c784a01
0x836: M[V687] = 0x7c784a0100000000000000000000000000000000000000000000000000000000
0x837: V694 = 0x4
0x839: V695 = ADD 0x4 V687
0x83a: V696 = 0x20
0x83c: V697 = 0x40
0x83e: V698 = M[0x40]
0x841: V699 = SUB V695 V698
0x843: V700 = 0x0
0x847: V701 = EXTCODESIZE V684
0x848: V702 = ISZERO V701
0x84a: V703 = ISZERO V702
0x84b: V704 = 0x515
0x84e: JUMPI 0x515 V703
---
Entry stack: [V13, 0x1f6, 0x0]
Stack pops: 0
Stack additions: [V684, 0x7c784a01, V695, 0x20, V698, V699, V698, 0x0, V684, V702]
Exit stack: [V13, 0x1f6, 0x0, V684, 0x7c784a01, V695, 0x20, V698, V699, V698, 0x0, V684, V702]

================================

Block 0x84f
[0x84f:0x852]
---
Predecessors: [0x800]
Successors: []
---
0x84f PUSH1 0x0
0x851 DUP1
0x852 REVERT
---
0x84f: V705 = 0x0
0x852: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1f6, 0x0, V684, 0x7c784a01, V695, 0x20, V698, V699, V698, 0x0, V684, V702]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1f6, 0x0, V684, 0x7c784a01, V695, 0x20, V698, V699, V698, 0x0, V684, V702]

================================

Block 0x853
[0x853:0x868]
---
Predecessors: [0x2ac]
Successors: [0x869, 0x904]
---
0x853 JUMPDEST
0x854 PUSH1 0x2
0x856 SLOAD
0x857 PUSH1 0x0
0x859 SWAP1
0x85a PUSH1 0x1
0x85c PUSH1 0xa0
0x85e PUSH1 0x2
0x860 EXP
0x861 SUB
0x862 AND
0x863 CALLER
0x864 EQ
0x865 PUSH2 0x904
0x868 JUMPI
---
0x853: JUMPDEST 
0x854: V706 = 0x2
0x856: V707 = S[0x2]
0x857: V708 = 0x0
0x85a: V709 = 0x1
0x85c: V710 = 0xa0
0x85e: V711 = 0x2
0x860: V712 = EXP 0x2 0xa0
0x861: V713 = SUB 0x10000000000000000000000000000000000000000 0x1
0x862: V714 = AND 0xffffffffffffffffffffffffffffffffffffffff V707
0x863: V715 = CALLER
0x864: V716 = EQ V715 V714
0x865: V717 = 0x904
0x868: JUMPI 0x904 V716
---
Entry stack: [V13, 0x1cd]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1cd, 0x0]

================================

Block 0x869
[0x869:0x903]
---
Predecessors: [0x853]
Successors: []
---
0x869 PUSH1 0x40
0x86b DUP1
0x86c MLOAD
0x86d PUSH1 0xe5
0x86f PUSH1 0x2
0x871 EXP
0x872 PUSH3 0x461bcd
0x876 MUL
0x877 DUP2
0x878 MSTORE
0x879 PUSH1 0x20
0x87b PUSH1 0x4
0x87d DUP3
0x87e ADD
0x87f MSTORE
0x880 PUSH1 0x43
0x882 PUSH1 0x24
0x884 DUP3
0x885 ADD
0x886 MSTORE
0x887 PUSH32 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x8a8 PUSH1 0x44
0x8aa DUP3
0x8ab ADD
0x8ac MSTORE
0x8ad PUSH32 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x8ce PUSH1 0x64
0x8d0 DUP3
0x8d1 ADD
0x8d2 MSTORE
0x8d3 PUSH32 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x8f4 PUSH1 0x84
0x8f6 DUP3
0x8f7 ADD
0x8f8 MSTORE
0x8f9 SWAP1
0x8fa MLOAD
0x8fb SWAP1
0x8fc DUP2
0x8fd SWAP1
0x8fe SUB
0x8ff PUSH1 0xa4
0x901 ADD
0x902 SWAP1
0x903 REVERT
---
0x869: V718 = 0x40
0x86c: V719 = M[0x40]
0x86d: V720 = 0xe5
0x86f: V721 = 0x2
0x871: V722 = EXP 0x2 0xe5
0x872: V723 = 0x461bcd
0x876: V724 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x878: M[V719] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x879: V725 = 0x20
0x87b: V726 = 0x4
0x87e: V727 = ADD V719 0x4
0x87f: M[V727] = 0x20
0x880: V728 = 0x43
0x882: V729 = 0x24
0x885: V730 = ADD V719 0x24
0x886: M[V730] = 0x43
0x887: V731 = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x8a8: V732 = 0x44
0x8ab: V733 = ADD V719 0x44
0x8ac: M[V733] = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0x8ad: V734 = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x8ce: V735 = 0x64
0x8d1: V736 = ADD V719 0x64
0x8d2: M[V736] = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0x8d3: V737 = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x8f4: V738 = 0x84
0x8f7: V739 = ADD V719 0x84
0x8f8: M[V739] = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0x8fa: V740 = M[0x40]
0x8fe: V741 = SUB V719 V740
0x8ff: V742 = 0xa4
0x901: V743 = ADD 0xa4 V741
0x903: REVERT V740 V743
---
Entry stack: [V13, 0x1cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, 0x0]

================================

Block 0x904
[0x904:0x93b]
---
Predecessors: [0x853]
Successors: [0x1cd]
---
0x904 JUMPDEST
0x905 POP
0x906 PUSH1 0x2
0x908 DUP1
0x909 SLOAD
0x90a PUSH1 0x1
0x90c DUP1
0x90d SLOAD
0x90e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x923 NOT
0x924 SWAP1
0x925 DUP2
0x926 AND
0x927 PUSH1 0x1
0x929 PUSH1 0xa0
0x92b PUSH1 0x2
0x92d EXP
0x92e SUB
0x92f DUP5
0x930 AND
0x931 OR
0x932 DUP3
0x933 SSTORE
0x934 SWAP1
0x935 SWAP2
0x936 AND
0x937 SWAP1
0x938 SWAP2
0x939 SSTORE
0x93a SWAP1
0x93b JUMP
---
0x904: JUMPDEST 
0x906: V744 = 0x2
0x909: V745 = S[0x2]
0x90a: V746 = 0x1
0x90d: V747 = S[0x1]
0x90e: V748 = 0xffffffffffffffffffffffffffffffffffffffff
0x923: V749 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x926: V750 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V747
0x927: V751 = 0x1
0x929: V752 = 0xa0
0x92b: V753 = 0x2
0x92d: V754 = EXP 0x2 0xa0
0x92e: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x930: V756 = AND V745 0xffffffffffffffffffffffffffffffffffffffff
0x931: V757 = OR V756 V750
0x933: S[0x1] = V757
0x936: V758 = AND V745 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x939: S[0x2] = V758
0x93b: JUMP 0x1cd
---
Entry stack: [V13, 0x1cd, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x93c
[0x93c:0x951]
---
Predecessors: [0x2c1]
Successors: [0x952, 0x9ed]
---
0x93c JUMPDEST
0x93d PUSH1 0x1
0x93f SLOAD
0x940 PUSH1 0x0
0x942 SWAP1
0x943 PUSH1 0x1
0x945 PUSH1 0xa0
0x947 PUSH1 0x2
0x949 EXP
0x94a SUB
0x94b AND
0x94c CALLER
0x94d EQ
0x94e PUSH2 0x9ed
0x951 JUMPI
---
0x93c: JUMPDEST 
0x93d: V759 = 0x1
0x93f: V760 = S[0x1]
0x940: V761 = 0x0
0x943: V762 = 0x1
0x945: V763 = 0xa0
0x947: V764 = 0x2
0x949: V765 = EXP 0x2 0xa0
0x94a: V766 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94b: V767 = AND 0xffffffffffffffffffffffffffffffffffffffff V760
0x94c: V768 = CALLER
0x94d: V769 = EQ V768 V767
0x94e: V770 = 0x9ed
0x951: JUMPI 0x9ed V769
---
Entry stack: [V13, 0x1cd, V235]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1cd, V235, 0x0]

================================

Block 0x952
[0x952:0x9ec]
---
Predecessors: [0x93c]
Successors: []
---
0x952 PUSH1 0x40
0x954 DUP1
0x955 MLOAD
0x956 PUSH1 0xe5
0x958 PUSH1 0x2
0x95a EXP
0x95b PUSH3 0x461bcd
0x95f MUL
0x960 DUP2
0x961 MSTORE
0x962 PUSH1 0x20
0x964 PUSH1 0x4
0x966 DUP3
0x967 ADD
0x968 MSTORE
0x969 PUSH1 0x46
0x96b PUSH1 0x24
0x96d DUP3
0x96e ADD
0x96f MSTORE
0x970 PUSH32 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x991 PUSH1 0x44
0x993 DUP3
0x994 ADD
0x995 MSTORE
0x996 PUSH32 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x9b7 PUSH1 0x64
0x9b9 DUP3
0x9ba ADD
0x9bb MSTORE
0x9bc PUSH32 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x9dd PUSH1 0x84
0x9df DUP3
0x9e0 ADD
0x9e1 MSTORE
0x9e2 SWAP1
0x9e3 MLOAD
0x9e4 SWAP1
0x9e5 DUP2
0x9e6 SWAP1
0x9e7 SUB
0x9e8 PUSH1 0xa4
0x9ea ADD
0x9eb SWAP1
0x9ec REVERT
---
0x952: V771 = 0x40
0x955: V772 = M[0x40]
0x956: V773 = 0xe5
0x958: V774 = 0x2
0x95a: V775 = EXP 0x2 0xe5
0x95b: V776 = 0x461bcd
0x95f: V777 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x961: M[V772] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x962: V778 = 0x20
0x964: V779 = 0x4
0x967: V780 = ADD V772 0x4
0x968: M[V780] = 0x20
0x969: V781 = 0x46
0x96b: V782 = 0x24
0x96e: V783 = ADD V772 0x24
0x96f: M[V783] = 0x46
0x970: V784 = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x991: V785 = 0x44
0x994: V786 = ADD V772 0x44
0x995: M[V786] = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x996: V787 = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x9b7: V788 = 0x64
0x9ba: V789 = ADD V772 0x64
0x9bb: M[V789] = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0x9bc: V790 = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x9dd: V791 = 0x84
0x9e0: V792 = ADD V772 0x84
0x9e1: M[V792] = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0x9e3: V793 = M[0x40]
0x9e7: V794 = SUB V772 V793
0x9e8: V795 = 0xa4
0x9ea: V796 = ADD 0xa4 V794
0x9ec: REVERT V793 V796
---
Entry stack: [V13, 0x1cd, V235, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V235, 0x0]

================================

Block 0x9ed
[0x9ed:0xa26]
---
Predecessors: [0x93c]
Successors: [0xa27, 0xa2b]
---
0x9ed JUMPDEST
0x9ee DUP2
0x9ef PUSH1 0x1
0x9f1 PUSH1 0xa0
0x9f3 PUSH1 0x2
0x9f5 EXP
0x9f6 SUB
0x9f7 AND
0x9f8 PUSH4 0x839e0fb
0x9fd PUSH1 0x40
0x9ff MLOAD
0xa00 DUP2
0xa01 PUSH4 0xffffffff
0xa06 AND
0xa07 PUSH1 0xe0
0xa09 PUSH1 0x2
0xa0b EXP
0xa0c MUL
0xa0d DUP2
0xa0e MSTORE
0xa0f PUSH1 0x4
0xa11 ADD
0xa12 PUSH1 0x20
0xa14 PUSH1 0x40
0xa16 MLOAD
0xa17 DUP1
0xa18 DUP4
0xa19 SUB
0xa1a DUP2
0xa1b PUSH1 0x0
0xa1d DUP8
0xa1e DUP1
0xa1f EXTCODESIZE
0xa20 ISZERO
0xa21 DUP1
0xa22 ISZERO
0xa23 PUSH2 0xa2b
0xa26 JUMPI
---
0x9ed: JUMPDEST 
0x9ef: V797 = 0x1
0x9f1: V798 = 0xa0
0x9f3: V799 = 0x2
0x9f5: V800 = EXP 0x2 0xa0
0x9f6: V801 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f7: V802 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x9f8: V803 = 0x839e0fb
0x9fd: V804 = 0x40
0x9ff: V805 = M[0x40]
0xa01: V806 = 0xffffffff
0xa06: V807 = AND 0xffffffff 0x839e0fb
0xa07: V808 = 0xe0
0xa09: V809 = 0x2
0xa0b: V810 = EXP 0x2 0xe0
0xa0c: V811 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x839e0fb
0xa0e: M[V805] = 0x839e0fb00000000000000000000000000000000000000000000000000000000
0xa0f: V812 = 0x4
0xa11: V813 = ADD 0x4 V805
0xa12: V814 = 0x20
0xa14: V815 = 0x40
0xa16: V816 = M[0x40]
0xa19: V817 = SUB V813 V816
0xa1b: V818 = 0x0
0xa1f: V819 = EXTCODESIZE V802
0xa20: V820 = ISZERO V819
0xa22: V821 = ISZERO V820
0xa23: V822 = 0xa2b
0xa26: JUMPI 0xa2b V821
---
Entry stack: [V13, 0x1cd, V235, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V802, 0x839e0fb, V813, 0x20, V816, V817, V816, 0x0, V802, V820]
Exit stack: [V13, 0x1cd, V235, 0x0, V802, 0x839e0fb, V813, 0x20, V816, V817, V816, 0x0, V802, V820]

================================

Block 0xa27
[0xa27:0xa2a]
---
Predecessors: [0x9ed]
Successors: []
---
0xa27 PUSH1 0x0
0xa29 DUP1
0xa2a REVERT
---
0xa27: V823 = 0x0
0xa2a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cd, V235, 0x0, V802, 0x839e0fb, V813, 0x20, V816, V817, V816, 0x0, V802, V820]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V235, 0x0, V802, 0x839e0fb, V813, 0x20, V816, V817, V816, 0x0, V802, V820]

================================

Block 0xa2b
[0xa2b:0xa35]
---
Predecessors: [0x9ed]
Successors: [0xa36, 0xa3f]
---
0xa2b JUMPDEST
0xa2c POP
0xa2d GAS
0xa2e CALL
0xa2f ISZERO
0xa30 DUP1
0xa31 ISZERO
0xa32 PUSH2 0xa3f
0xa35 JUMPI
---
0xa2b: JUMPDEST 
0xa2d: V824 = GAS
0xa2e: V825 = CALL V824 V802 0x0 V816 V817 V816 0x20
0xa2f: V826 = ISZERO V825
0xa31: V827 = ISZERO V826
0xa32: V828 = 0xa3f
0xa35: JUMPI 0xa3f V827
---
Entry stack: [V13, 0x1cd, V235, 0x0, V802, 0x839e0fb, V813, 0x20, V816, V817, V816, 0x0, V802, V820]
Stack pops: 7
Stack additions: [V826]
Exit stack: [V13, 0x1cd, V235, 0x0, V802, 0x839e0fb, V813, V826]

================================

Block 0xa36
[0xa36:0xa3e]
---
Predecessors: [0xa2b]
Successors: []
---
0xa36 RETURNDATASIZE
0xa37 PUSH1 0x0
0xa39 DUP1
0xa3a RETURNDATACOPY
0xa3b RETURNDATASIZE
0xa3c PUSH1 0x0
0xa3e REVERT
---
0xa36: V829 = RETURNDATASIZE
0xa37: V830 = 0x0
0xa3a: RETURNDATACOPY 0x0 0x0 V829
0xa3b: V831 = RETURNDATASIZE
0xa3c: V832 = 0x0
0xa3e: REVERT 0x0 V831
---
Entry stack: [V13, 0x1cd, V235, 0x0, V802, 0x839e0fb, V813, V826]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V235, 0x0, V802, 0x839e0fb, V813, V826]

================================

Block 0xa3f
[0xa3f:0xa50]
---
Predecessors: [0xa2b]
Successors: [0xa51, 0xa55]
---
0xa3f JUMPDEST
0xa40 POP
0xa41 POP
0xa42 POP
0xa43 POP
0xa44 PUSH1 0x40
0xa46 MLOAD
0xa47 RETURNDATASIZE
0xa48 PUSH1 0x20
0xa4a DUP2
0xa4b LT
0xa4c ISZERO
0xa4d PUSH2 0xa55
0xa50 JUMPI
---
0xa3f: JUMPDEST 
0xa44: V833 = 0x40
0xa46: V834 = M[0x40]
0xa47: V835 = RETURNDATASIZE
0xa48: V836 = 0x20
0xa4b: V837 = LT V835 0x20
0xa4c: V838 = ISZERO V837
0xa4d: V839 = 0xa55
0xa50: JUMPI 0xa55 V838
---
Entry stack: [V13, 0x1cd, V235, 0x0, V802, 0x839e0fb, V813, V826]
Stack pops: 4
Stack additions: [V834, V835]
Exit stack: [V13, 0x1cd, V235, 0x0, V834, V835]

================================

Block 0xa51
[0xa51:0xa54]
---
Predecessors: [0xa3f]
Successors: []
---
0xa51 PUSH1 0x0
0xa53 DUP1
0xa54 REVERT
---
0xa51: V840 = 0x0
0xa54: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cd, V235, 0x0, V834, V835]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V235, 0x0, V834, V835]

================================

Block 0xa55
[0xa55:0xa61]
---
Predecessors: [0xa3f]
Successors: [0xa62, 0xa91]
---
0xa55 JUMPDEST
0xa56 POP
0xa57 MLOAD
0xa58 ISZERO
0xa59 ISZERO
0xa5a PUSH1 0x1
0xa5c EQ
0xa5d ISZERO
0xa5e PUSH2 0xa91
0xa61 JUMPI
---
0xa55: JUMPDEST 
0xa57: V841 = M[V834]
0xa58: V842 = ISZERO V841
0xa59: V843 = ISZERO V842
0xa5a: V844 = 0x1
0xa5c: V845 = EQ 0x1 V843
0xa5d: V846 = ISZERO V845
0xa5e: V847 = 0xa91
0xa61: JUMPI 0xa91 V846
---
Entry stack: [V13, 0x1cd, V235, 0x0, V834, V835]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x1cd, V235, 0x0]

================================

Block 0xa62
[0xa62:0xa90]
---
Predecessors: [0xa55]
Successors: [0xa95]
---
0xa62 POP
0xa63 PUSH1 0x2
0xa65 DUP1
0xa66 SLOAD
0xa67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7c NOT
0xa7d AND
0xa7e PUSH1 0x1
0xa80 PUSH1 0xa0
0xa82 PUSH1 0x2
0xa84 EXP
0xa85 SUB
0xa86 DUP4
0xa87 AND
0xa88 OR
0xa89 SWAP1
0xa8a SSTORE
0xa8b PUSH1 0x1
0xa8d PUSH2 0xa95
0xa90 JUMP
---
0xa63: V848 = 0x2
0xa66: V849 = S[0x2]
0xa67: V850 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7c: V851 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa7d: V852 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V849
0xa7e: V853 = 0x1
0xa80: V854 = 0xa0
0xa82: V855 = 0x2
0xa84: V856 = EXP 0x2 0xa0
0xa85: V857 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa87: V858 = AND V235 0xffffffffffffffffffffffffffffffffffffffff
0xa88: V859 = OR V858 V852
0xa8a: S[0x2] = V859
0xa8b: V860 = 0x1
0xa8d: V861 = 0xa95
0xa90: JUMP 0xa95
---
Entry stack: [V13, 0x1cd, V235, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V13, 0x1cd, V235, 0x1]

================================

Block 0xa91
[0xa91:0xa94]
---
Predecessors: [0xa55]
Successors: [0xa95]
---
0xa91 JUMPDEST
0xa92 POP
0xa93 PUSH1 0x0
---
0xa91: JUMPDEST 
0xa93: V862 = 0x0
---
Entry stack: [V13, 0x1cd, V235, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0x1cd, V235, 0x0]

================================

Block 0xa95
[0xa95:0xa99]
---
Predecessors: [0xa62, 0xa91]
Successors: [0x1cd]
---
0xa95 JUMPDEST
0xa96 SWAP2
0xa97 SWAP1
0xa98 POP
0xa99 JUMP
---
0xa95: JUMPDEST 
0xa99: JUMP 0x1cd
---
Entry stack: [V13, 0x1cd, V235, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V13, {0x0, 0x1}]

================================

Block 0xa9a
[0xa9a:0xaa3]
---
Predecessors: [0x2d6]
Successors: [0xaa4, 0xb19]
---
0xa9a JUMPDEST
0xa9b PUSH1 0x0
0xa9d CALLVALUE
0xa9e DUP2
0xa9f LT
0xaa0 PUSH2 0xb19
0xaa3 JUMPI
---
0xa9a: JUMPDEST 
0xa9b: V863 = 0x0
0xa9d: V864 = CALLVALUE
0xa9f: V865 = LT 0x0 V864
0xaa0: V866 = 0xb19
0xaa3: JUMPI 0xb19 V865
---
Entry stack: [V13, 0x1cd]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1cd, 0x0]

================================

Block 0xaa4
[0xaa4:0xb18]
---
Predecessors: [0xa9a]
Successors: []
---
0xaa4 PUSH1 0x40
0xaa6 DUP1
0xaa7 MLOAD
0xaa8 PUSH1 0xe5
0xaaa PUSH1 0x2
0xaac EXP
0xaad PUSH3 0x461bcd
0xab1 MUL
0xab2 DUP2
0xab3 MSTORE
0xab4 PUSH1 0x20
0xab6 PUSH1 0x4
0xab8 DUP3
0xab9 ADD
0xaba MSTORE
0xabb PUSH1 0x34
0xabd PUSH1 0x24
0xabf DUP3
0xac0 ADD
0xac1 MSTORE
0xac2 PUSH32 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0xae3 PUSH1 0x44
0xae5 DUP3
0xae6 ADD
0xae7 MSTORE
0xae8 PUSH32 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0xb09 PUSH1 0x64
0xb0b DUP3
0xb0c ADD
0xb0d MSTORE
0xb0e SWAP1
0xb0f MLOAD
0xb10 SWAP1
0xb11 DUP2
0xb12 SWAP1
0xb13 SUB
0xb14 PUSH1 0x84
0xb16 ADD
0xb17 SWAP1
0xb18 REVERT
---
0xaa4: V867 = 0x40
0xaa7: V868 = M[0x40]
0xaa8: V869 = 0xe5
0xaaa: V870 = 0x2
0xaac: V871 = EXP 0x2 0xe5
0xaad: V872 = 0x461bcd
0xab1: V873 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xab3: M[V868] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xab4: V874 = 0x20
0xab6: V875 = 0x4
0xab9: V876 = ADD V868 0x4
0xaba: M[V876] = 0x20
0xabb: V877 = 0x34
0xabd: V878 = 0x24
0xac0: V879 = ADD V868 0x24
0xac1: M[V879] = 0x34
0xac2: V880 = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0xae3: V881 = 0x44
0xae6: V882 = ADD V868 0x44
0xae7: M[V882] = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0xae8: V883 = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0xb09: V884 = 0x64
0xb0c: V885 = ADD V868 0x64
0xb0d: M[V885] = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0xb0f: V886 = M[0x40]
0xb13: V887 = SUB V868 V886
0xb14: V888 = 0x84
0xb16: V889 = ADD 0x84 V887
0xb18: REVERT V886 V889
---
Entry stack: [V13, 0x1cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, 0x0]

================================

Block 0xb19
[0xb19:0xb2b]
---
Predecessors: [0xa9a]
Successors: [0xb2c, 0xb8f]
---
0xb19 JUMPDEST
0xb1a PUSH1 0x2
0xb1c SLOAD
0xb1d PUSH1 0xa0
0xb1f PUSH1 0x2
0xb21 EXP
0xb22 SWAP1
0xb23 DIV
0xb24 PUSH1 0xff
0xb26 AND
0xb27 ISZERO
0xb28 PUSH2 0xb8f
0xb2b JUMPI
---
0xb19: JUMPDEST 
0xb1a: V890 = 0x2
0xb1c: V891 = S[0x2]
0xb1d: V892 = 0xa0
0xb1f: V893 = 0x2
0xb21: V894 = EXP 0x2 0xa0
0xb23: V895 = DIV V891 0x10000000000000000000000000000000000000000
0xb24: V896 = 0xff
0xb26: V897 = AND 0xff V895
0xb27: V898 = ISZERO V897
0xb28: V899 = 0xb8f
0xb2b: JUMPI 0xb8f V898
---
Entry stack: [V13, 0x1cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, 0x0]

================================

Block 0xb2c
[0xb2c:0xb8e]
---
Predecessors: [0xb19]
Successors: []
---
0xb2c PUSH1 0x40
0xb2e DUP1
0xb2f MLOAD
0xb30 PUSH1 0xe5
0xb32 PUSH1 0x2
0xb34 EXP
0xb35 PUSH3 0x461bcd
0xb39 MUL
0xb3a DUP2
0xb3b MSTORE
0xb3c PUSH1 0x20
0xb3e PUSH1 0x4
0xb40 DUP3
0xb41 ADD
0xb42 MSTORE
0xb43 PUSH1 0x2d
0xb45 PUSH1 0x24
0xb47 DUP3
0xb48 ADD
0xb49 MSTORE
0xb4a PUSH32 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0xb6b PUSH1 0x44
0xb6d DUP3
0xb6e ADD
0xb6f MSTORE
0xb70 PUSH1 0x0
0xb72 DUP1
0xb73 MLOAD
0xb74 PUSH1 0x20
0xb76 PUSH2 0xd6b
0xb79 DUP4
0xb7a CODECOPY
0xb7b DUP2
0xb7c MLOAD
0xb7d SWAP2
0xb7e MSTORE
0xb7f PUSH1 0x64
0xb81 DUP3
0xb82 ADD
0xb83 MSTORE
0xb84 SWAP1
0xb85 MLOAD
0xb86 SWAP1
0xb87 DUP2
0xb88 SWAP1
0xb89 SUB
0xb8a PUSH1 0x84
0xb8c ADD
0xb8d SWAP1
0xb8e REVERT
---
0xb2c: V900 = 0x40
0xb2f: V901 = M[0x40]
0xb30: V902 = 0xe5
0xb32: V903 = 0x2
0xb34: V904 = EXP 0x2 0xe5
0xb35: V905 = 0x461bcd
0xb39: V906 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xb3b: M[V901] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb3c: V907 = 0x20
0xb3e: V908 = 0x4
0xb41: V909 = ADD V901 0x4
0xb42: M[V909] = 0x20
0xb43: V910 = 0x2d
0xb45: V911 = 0x24
0xb48: V912 = ADD V901 0x24
0xb49: M[V912] = 0x2d
0xb4a: V913 = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0xb6b: V914 = 0x44
0xb6e: V915 = ADD V901 0x44
0xb6f: M[V915] = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0xb70: V916 = 0x0
0xb73: V917 = M[0x0]
0xb74: V918 = 0x20
0xb76: V919 = 0xd6b
0xb7a: CODECOPY 0x0 0xd6b 0x20
0xb7c: V920 = M[0x0]
0xb7e: M[0x0] = V917
0xb7f: V921 = 0x64
0xb82: V922 = ADD V901 0x64
0xb83: M[V922] = V920
0xb85: V923 = M[0x40]
0xb89: V924 = SUB V901 V923
0xb8a: V925 = 0x84
0xb8c: V926 = ADD 0x84 V924
0xb8e: REVERT V923 V926
---
Entry stack: [V13, 0x1cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, 0x0]

================================

Block 0xb8f
[0xb8f:0xbf0]
---
Predecessors: [0xb19]
Successors: [0xbf1, 0xbf5]
---
0xb8f JUMPDEST
0xb90 PUSH1 0x1
0xb92 SLOAD
0xb93 PUSH1 0x40
0xb95 DUP1
0xb96 MLOAD
0xb97 PUSH32 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xbb8 DUP2
0xbb9 MSTORE
0xbba CALLER
0xbbb PUSH1 0x4
0xbbd DUP3
0xbbe ADD
0xbbf MSTORE
0xbc0 SWAP1
0xbc1 MLOAD
0xbc2 PUSH1 0x1
0xbc4 PUSH1 0xa0
0xbc6 PUSH1 0x2
0xbc8 EXP
0xbc9 SUB
0xbca SWAP1
0xbcb SWAP3
0xbcc AND
0xbcd SWAP2
0xbce PUSH4 0xf340fa01
0xbd3 SWAP2
0xbd4 CALLVALUE
0xbd5 SWAP2
0xbd6 PUSH1 0x24
0xbd8 DUP1
0xbd9 DUP4
0xbda ADD
0xbdb SWAP3
0xbdc PUSH1 0x20
0xbde SWAP3
0xbdf SWAP2
0xbe0 SWAP1
0xbe1 DUP3
0xbe2 SWAP1
0xbe3 SUB
0xbe4 ADD
0xbe5 DUP2
0xbe6 DUP6
0xbe7 DUP9
0xbe8 DUP1
0xbe9 EXTCODESIZE
0xbea ISZERO
0xbeb DUP1
0xbec ISZERO
0xbed PUSH2 0xbf5
0xbf0 JUMPI
---
0xb8f: JUMPDEST 
0xb90: V927 = 0x1
0xb92: V928 = S[0x1]
0xb93: V929 = 0x40
0xb96: V930 = M[0x40]
0xb97: V931 = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xbb9: M[V930] = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xbba: V932 = CALLER
0xbbb: V933 = 0x4
0xbbe: V934 = ADD V930 0x4
0xbbf: M[V934] = V932
0xbc1: V935 = M[0x40]
0xbc2: V936 = 0x1
0xbc4: V937 = 0xa0
0xbc6: V938 = 0x2
0xbc8: V939 = EXP 0x2 0xa0
0xbc9: V940 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbcc: V941 = AND V928 0xffffffffffffffffffffffffffffffffffffffff
0xbce: V942 = 0xf340fa01
0xbd4: V943 = CALLVALUE
0xbd6: V944 = 0x24
0xbda: V945 = ADD V930 0x24
0xbdc: V946 = 0x20
0xbe3: V947 = SUB V930 V935
0xbe4: V948 = ADD V947 0x24
0xbe9: V949 = EXTCODESIZE V941
0xbea: V950 = ISZERO V949
0xbec: V951 = ISZERO V950
0xbed: V952 = 0xbf5
0xbf0: JUMPI 0xbf5 V951
---
Entry stack: [V13, 0x1cd, 0x0]
Stack pops: 0
Stack additions: [V941, 0xf340fa01, V943, V945, 0x20, V935, V948, V935, V943, V941, V950]
Exit stack: [V13, 0x1cd, 0x0, V941, 0xf340fa01, V943, V945, 0x20, V935, V948, V935, V943, V941, V950]

================================

Block 0xbf1
[0xbf1:0xbf4]
---
Predecessors: [0xb8f]
Successors: []
---
0xbf1 PUSH1 0x0
0xbf3 DUP1
0xbf4 REVERT
---
0xbf1: V953 = 0x0
0xbf4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cd, 0x0, V941, 0xf340fa01, V943, V945, 0x20, V935, V948, V935, V943, V941, V950]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, 0x0, V941, 0xf340fa01, V943, V945, 0x20, V935, V948, V935, V943, V941, V950]

================================

Block 0xbf5
[0xbf5:0xbff]
---
Predecessors: [0xb8f]
Successors: [0xc00, 0xc09]
---
0xbf5 JUMPDEST
0xbf6 POP
0xbf7 GAS
0xbf8 CALL
0xbf9 ISZERO
0xbfa DUP1
0xbfb ISZERO
0xbfc PUSH2 0xc09
0xbff JUMPI
---
0xbf5: JUMPDEST 
0xbf7: V954 = GAS
0xbf8: V955 = CALL V954 V941 V943 V935 V948 V935 0x20
0xbf9: V956 = ISZERO V955
0xbfb: V957 = ISZERO V956
0xbfc: V958 = 0xc09
0xbff: JUMPI 0xc09 V957
---
Entry stack: [V13, 0x1cd, 0x0, V941, 0xf340fa01, V943, V945, 0x20, V935, V948, V935, V943, V941, V950]
Stack pops: 7
Stack additions: [V956]
Exit stack: [V13, 0x1cd, 0x0, V941, 0xf340fa01, V943, V945, V956]

================================

Block 0xc00
[0xc00:0xc08]
---
Predecessors: [0xbf5]
Successors: []
---
0xc00 RETURNDATASIZE
0xc01 PUSH1 0x0
0xc03 DUP1
0xc04 RETURNDATACOPY
0xc05 RETURNDATASIZE
0xc06 PUSH1 0x0
0xc08 REVERT
---
0xc00: V959 = RETURNDATASIZE
0xc01: V960 = 0x0
0xc04: RETURNDATACOPY 0x0 0x0 V959
0xc05: V961 = RETURNDATASIZE
0xc06: V962 = 0x0
0xc08: REVERT 0x0 V961
---
Entry stack: [V13, 0x1cd, 0x0, V941, 0xf340fa01, V943, V945, V956]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, 0x0, V941, 0xf340fa01, V943, V945, V956]

================================

Block 0xc09
[0xc09:0xc1b]
---
Predecessors: [0xbf5]
Successors: [0xc1c, 0xc20]
---
0xc09 JUMPDEST
0xc0a POP
0xc0b POP
0xc0c POP
0xc0d POP
0xc0e POP
0xc0f PUSH1 0x40
0xc11 MLOAD
0xc12 RETURNDATASIZE
0xc13 PUSH1 0x20
0xc15 DUP2
0xc16 LT
0xc17 ISZERO
0xc18 PUSH2 0xc20
0xc1b JUMPI
---
0xc09: JUMPDEST 
0xc0f: V963 = 0x40
0xc11: V964 = M[0x40]
0xc12: V965 = RETURNDATASIZE
0xc13: V966 = 0x20
0xc16: V967 = LT V965 0x20
0xc17: V968 = ISZERO V967
0xc18: V969 = 0xc20
0xc1b: JUMPI 0xc20 V968
---
Entry stack: [V13, 0x1cd, 0x0, V941, 0xf340fa01, V943, V945, V956]
Stack pops: 5
Stack additions: [V964, V965]
Exit stack: [V13, 0x1cd, 0x0, V964, V965]

================================

Block 0xc1c
[0xc1c:0xc1f]
---
Predecessors: [0xc09]
Successors: []
---
0xc1c PUSH1 0x0
0xc1e DUP1
0xc1f REVERT
---
0xc1c: V970 = 0x0
0xc1f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cd, 0x0, V964, V965]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, 0x0, V964, V965]

================================

Block 0xc20
[0xc20:0xc2c]
---
Predecessors: [0xc09]
Successors: [0xc2d, 0xc34]
---
0xc20 JUMPDEST
0xc21 POP
0xc22 MLOAD
0xc23 ISZERO
0xc24 ISZERO
0xc25 PUSH1 0x1
0xc27 EQ
0xc28 ISZERO
0xc29 PUSH2 0xc34
0xc2c JUMPI
---
0xc20: JUMPDEST 
0xc22: V971 = M[V964]
0xc23: V972 = ISZERO V971
0xc24: V973 = ISZERO V972
0xc25: V974 = 0x1
0xc27: V975 = EQ 0x1 V973
0xc28: V976 = ISZERO V975
0xc29: V977 = 0xc34
0xc2c: JUMPI 0xc34 V976
---
Entry stack: [V13, 0x1cd, 0x0, V964, V965]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x1cd, 0x0]

================================

Block 0xc2d
[0xc2d:0xc33]
---
Predecessors: [0xc20]
Successors: [0x446]
---
0xc2d POP
0xc2e PUSH1 0x1
0xc30 PUSH2 0x446
0xc33 JUMP
---
0xc2e: V978 = 0x1
0xc30: V979 = 0x446
0xc33: JUMP 0x446
---
Entry stack: [V13, 0x1cd, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V13, 0x1cd, 0x1]

================================

Block 0xc34
[0xc34:0xc3b]
---
Predecessors: [0xc20]
Successors: [0x446]
---
0xc34 JUMPDEST
0xc35 POP
0xc36 PUSH1 0x0
0xc38 PUSH2 0x446
0xc3b JUMP
---
0xc34: JUMPDEST 
0xc36: V980 = 0x0
0xc38: V981 = 0x446
0xc3b: JUMP 0x446
---
Entry stack: [V13, 0x1cd, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0x1cd, 0x0]

================================

Block 0xc3c
[0xc3c:0xc4e]
---
Predecessors: [0x2de]
Successors: [0xc4f, 0xcb2]
---
0xc3c JUMPDEST
0xc3d PUSH1 0x2
0xc3f SLOAD
0xc40 PUSH1 0xa0
0xc42 PUSH1 0x2
0xc44 EXP
0xc45 SWAP1
0xc46 DIV
0xc47 PUSH1 0xff
0xc49 AND
0xc4a ISZERO
0xc4b PUSH2 0xcb2
0xc4e JUMPI
---
0xc3c: JUMPDEST 
0xc3d: V982 = 0x2
0xc3f: V983 = S[0x2]
0xc40: V984 = 0xa0
0xc42: V985 = 0x2
0xc44: V986 = EXP 0x2 0xa0
0xc46: V987 = DIV V983 0x10000000000000000000000000000000000000000
0xc47: V988 = 0xff
0xc49: V989 = AND 0xff V987
0xc4a: V990 = ISZERO V989
0xc4b: V991 = 0xcb2
0xc4e: JUMPI 0xcb2 V990
---
Entry stack: [V13, 0x289]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289]

================================

Block 0xc4f
[0xc4f:0xcb1]
---
Predecessors: [0xc3c]
Successors: []
---
0xc4f PUSH1 0x40
0xc51 DUP1
0xc52 MLOAD
0xc53 PUSH1 0xe5
0xc55 PUSH1 0x2
0xc57 EXP
0xc58 PUSH3 0x461bcd
0xc5c MUL
0xc5d DUP2
0xc5e MSTORE
0xc5f PUSH1 0x20
0xc61 PUSH1 0x4
0xc63 DUP3
0xc64 ADD
0xc65 MSTORE
0xc66 PUSH1 0x2d
0xc68 PUSH1 0x24
0xc6a DUP3
0xc6b ADD
0xc6c MSTORE
0xc6d PUSH32 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0xc8e PUSH1 0x44
0xc90 DUP3
0xc91 ADD
0xc92 MSTORE
0xc93 PUSH1 0x0
0xc95 DUP1
0xc96 MLOAD
0xc97 PUSH1 0x20
0xc99 PUSH2 0xd6b
0xc9c DUP4
0xc9d CODECOPY
0xc9e DUP2
0xc9f MLOAD
0xca0 SWAP2
0xca1 MSTORE
0xca2 PUSH1 0x64
0xca4 DUP3
0xca5 ADD
0xca6 MSTORE
0xca7 SWAP1
0xca8 MLOAD
0xca9 SWAP1
0xcaa DUP2
0xcab SWAP1
0xcac SUB
0xcad PUSH1 0x84
0xcaf ADD
0xcb0 SWAP1
0xcb1 REVERT
---
0xc4f: V992 = 0x40
0xc52: V993 = M[0x40]
0xc53: V994 = 0xe5
0xc55: V995 = 0x2
0xc57: V996 = EXP 0x2 0xe5
0xc58: V997 = 0x461bcd
0xc5c: V998 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xc5e: M[V993] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc5f: V999 = 0x20
0xc61: V1000 = 0x4
0xc64: V1001 = ADD V993 0x4
0xc65: M[V1001] = 0x20
0xc66: V1002 = 0x2d
0xc68: V1003 = 0x24
0xc6b: V1004 = ADD V993 0x24
0xc6c: M[V1004] = 0x2d
0xc6d: V1005 = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0xc8e: V1006 = 0x44
0xc91: V1007 = ADD V993 0x44
0xc92: M[V1007] = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0xc93: V1008 = 0x0
0xc96: V1009 = M[0x0]
0xc97: V1010 = 0x20
0xc99: V1011 = 0xd6b
0xc9d: CODECOPY 0x0 0xd6b 0x20
0xc9f: V1012 = M[0x0]
0xca1: M[0x0] = V1009
0xca2: V1013 = 0x64
0xca5: V1014 = ADD V993 0x64
0xca6: M[V1014] = V1012
0xca8: V1015 = M[0x40]
0xcac: V1016 = SUB V993 V1015
0xcad: V1017 = 0x84
0xcaf: V1018 = ADD 0x84 V1016
0xcb1: REVERT V1015 V1018
---
Entry stack: [V13, 0x289]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289]

================================

Block 0xcb2
[0xcb2:0xd00]
---
Predecessors: [0xc3c]
Successors: [0xd01, 0xd05]
---
0xcb2 JUMPDEST
0xcb3 PUSH1 0x1
0xcb5 PUSH1 0x0
0xcb7 SWAP1
0xcb8 SLOAD
0xcb9 SWAP1
0xcba PUSH2 0x100
0xcbd EXP
0xcbe SWAP1
0xcbf DIV
0xcc0 PUSH1 0x1
0xcc2 PUSH1 0xa0
0xcc4 PUSH1 0x2
0xcc6 EXP
0xcc7 SUB
0xcc8 AND
0xcc9 PUSH1 0x1
0xccb PUSH1 0xa0
0xccd PUSH1 0x2
0xccf EXP
0xcd0 SUB
0xcd1 AND
0xcd2 PUSH4 0x7c784a01
0xcd7 PUSH1 0x40
0xcd9 MLOAD
0xcda DUP2
0xcdb PUSH4 0xffffffff
0xce0 AND
0xce1 PUSH1 0xe0
0xce3 PUSH1 0x2
0xce5 EXP
0xce6 MUL
0xce7 DUP2
0xce8 MSTORE
0xce9 PUSH1 0x4
0xceb ADD
0xcec PUSH1 0x20
0xcee PUSH1 0x40
0xcf0 MLOAD
0xcf1 DUP1
0xcf2 DUP4
0xcf3 SUB
0xcf4 DUP2
0xcf5 PUSH1 0x0
0xcf7 DUP8
0xcf8 DUP1
0xcf9 EXTCODESIZE
0xcfa ISZERO
0xcfb DUP1
0xcfc ISZERO
0xcfd PUSH2 0xd05
0xd00 JUMPI
---
0xcb2: JUMPDEST 
0xcb3: V1019 = 0x1
0xcb5: V1020 = 0x0
0xcb8: V1021 = S[0x1]
0xcba: V1022 = 0x100
0xcbd: V1023 = EXP 0x100 0x0
0xcbf: V1024 = DIV V1021 0x1
0xcc0: V1025 = 0x1
0xcc2: V1026 = 0xa0
0xcc4: V1027 = 0x2
0xcc6: V1028 = EXP 0x2 0xa0
0xcc7: V1029 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc8: V1030 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0xcc9: V1031 = 0x1
0xccb: V1032 = 0xa0
0xccd: V1033 = 0x2
0xccf: V1034 = EXP 0x2 0xa0
0xcd0: V1035 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd1: V1036 = AND 0xffffffffffffffffffffffffffffffffffffffff V1030
0xcd2: V1037 = 0x7c784a01
0xcd7: V1038 = 0x40
0xcd9: V1039 = M[0x40]
0xcdb: V1040 = 0xffffffff
0xce0: V1041 = AND 0xffffffff 0x7c784a01
0xce1: V1042 = 0xe0
0xce3: V1043 = 0x2
0xce5: V1044 = EXP 0x2 0xe0
0xce6: V1045 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7c784a01
0xce8: M[V1039] = 0x7c784a0100000000000000000000000000000000000000000000000000000000
0xce9: V1046 = 0x4
0xceb: V1047 = ADD 0x4 V1039
0xcec: V1048 = 0x20
0xcee: V1049 = 0x40
0xcf0: V1050 = M[0x40]
0xcf3: V1051 = SUB V1047 V1050
0xcf5: V1052 = 0x0
0xcf9: V1053 = EXTCODESIZE V1036
0xcfa: V1054 = ISZERO V1053
0xcfc: V1055 = ISZERO V1054
0xcfd: V1056 = 0xd05
0xd00: JUMPI 0xd05 V1055
---
Entry stack: [V13, 0x289]
Stack pops: 0
Stack additions: [V1036, 0x7c784a01, V1047, 0x20, V1050, V1051, V1050, 0x0, V1036, V1054]
Exit stack: [V13, 0x289, V1036, 0x7c784a01, V1047, 0x20, V1050, V1051, V1050, 0x0, V1036, V1054]

================================

Block 0xd01
[0xd01:0xd04]
---
Predecessors: [0xcb2]
Successors: []
---
0xd01 PUSH1 0x0
0xd03 DUP1
0xd04 REVERT
---
0xd01: V1057 = 0x0
0xd04: REVERT 0x0 0x0
---
Entry stack: [V13, 0x289, V1036, 0x7c784a01, V1047, 0x20, V1050, V1051, V1050, 0x0, V1036, V1054]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289, V1036, 0x7c784a01, V1047, 0x20, V1050, V1051, V1050, 0x0, V1036, V1054]

================================

Block 0xd05
[0xd05:0xd0f]
---
Predecessors: [0xcb2]
Successors: [0xd10, 0xd19]
---
0xd05 JUMPDEST
0xd06 POP
0xd07 GAS
0xd08 CALL
0xd09 ISZERO
0xd0a DUP1
0xd0b ISZERO
0xd0c PUSH2 0xd19
0xd0f JUMPI
---
0xd05: JUMPDEST 
0xd07: V1058 = GAS
0xd08: V1059 = CALL V1058 V1036 0x0 V1050 V1051 V1050 0x20
0xd09: V1060 = ISZERO V1059
0xd0b: V1061 = ISZERO V1060
0xd0c: V1062 = 0xd19
0xd0f: JUMPI 0xd19 V1061
---
Entry stack: [V13, 0x289, V1036, 0x7c784a01, V1047, 0x20, V1050, V1051, V1050, 0x0, V1036, V1054]
Stack pops: 7
Stack additions: [V1060]
Exit stack: [V13, 0x289, V1036, 0x7c784a01, V1047, V1060]

================================

Block 0xd10
[0xd10:0xd18]
---
Predecessors: [0xd05]
Successors: []
---
0xd10 RETURNDATASIZE
0xd11 PUSH1 0x0
0xd13 DUP1
0xd14 RETURNDATACOPY
0xd15 RETURNDATASIZE
0xd16 PUSH1 0x0
0xd18 REVERT
---
0xd10: V1063 = RETURNDATASIZE
0xd11: V1064 = 0x0
0xd14: RETURNDATACOPY 0x0 0x0 V1063
0xd15: V1065 = RETURNDATASIZE
0xd16: V1066 = 0x0
0xd18: REVERT 0x0 V1065
---
Entry stack: [V13, 0x289, V1036, 0x7c784a01, V1047, V1060]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289, V1036, 0x7c784a01, V1047, V1060]

================================

Block 0xd19
[0xd19:0xd2a]
---
Predecessors: [0xd05]
Successors: [0xd2b, 0xd2f]
---
0xd19 JUMPDEST
0xd1a POP
0xd1b POP
0xd1c POP
0xd1d POP
0xd1e PUSH1 0x40
0xd20 MLOAD
0xd21 RETURNDATASIZE
0xd22 PUSH1 0x20
0xd24 DUP2
0xd25 LT
0xd26 ISZERO
0xd27 PUSH2 0xd2f
0xd2a JUMPI
---
0xd19: JUMPDEST 
0xd1e: V1067 = 0x40
0xd20: V1068 = M[0x40]
0xd21: V1069 = RETURNDATASIZE
0xd22: V1070 = 0x20
0xd25: V1071 = LT V1069 0x20
0xd26: V1072 = ISZERO V1071
0xd27: V1073 = 0xd2f
0xd2a: JUMPI 0xd2f V1072
---
Entry stack: [V13, 0x289, V1036, 0x7c784a01, V1047, V1060]
Stack pops: 4
Stack additions: [V1068, V1069]
Exit stack: [V13, 0x289, V1068, V1069]

================================

Block 0xd2b
[0xd2b:0xd2e]
---
Predecessors: [0xd19]
Successors: []
---
0xd2b PUSH1 0x0
0xd2d DUP1
0xd2e REVERT
---
0xd2b: V1074 = 0x0
0xd2e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x289, V1068, V1069]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289, V1068, V1069]

================================

Block 0xd2f
[0xd2f:0xd5d]
---
Predecessors: [0xd19]
Successors: [0xd5e, 0xd67]
---
0xd2f JUMPDEST
0xd30 POP
0xd31 MLOAD
0xd32 PUSH1 0x40
0xd34 MLOAD
0xd35 PUSH1 0x1
0xd37 PUSH1 0xa0
0xd39 PUSH1 0x2
0xd3b EXP
0xd3c SUB
0xd3d SWAP1
0xd3e SWAP2
0xd3f AND
0xd40 SWAP1
0xd41 CALLVALUE
0xd42 DUP1
0xd43 ISZERO
0xd44 PUSH2 0x8fc
0xd47 MUL
0xd48 SWAP2
0xd49 PUSH1 0x0
0xd4b DUP2
0xd4c DUP2
0xd4d DUP2
0xd4e DUP6
0xd4f DUP9
0xd50 DUP9
0xd51 CALL
0xd52 SWAP4
0xd53 POP
0xd54 POP
0xd55 POP
0xd56 POP
0xd57 ISZERO
0xd58 DUP1
0xd59 ISZERO
0xd5a PUSH2 0xd67
0xd5d JUMPI
---
0xd2f: JUMPDEST 
0xd31: V1075 = M[V1068]
0xd32: V1076 = 0x40
0xd34: V1077 = M[0x40]
0xd35: V1078 = 0x1
0xd37: V1079 = 0xa0
0xd39: V1080 = 0x2
0xd3b: V1081 = EXP 0x2 0xa0
0xd3c: V1082 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3f: V1083 = AND V1075 0xffffffffffffffffffffffffffffffffffffffff
0xd41: V1084 = CALLVALUE
0xd43: V1085 = ISZERO V1084
0xd44: V1086 = 0x8fc
0xd47: V1087 = MUL 0x8fc V1085
0xd49: V1088 = 0x0
0xd51: V1089 = CALL V1087 V1083 V1084 V1077 0x0 V1077 0x0
0xd57: V1090 = ISZERO V1089
0xd59: V1091 = ISZERO V1090
0xd5a: V1092 = 0xd67
0xd5d: JUMPI 0xd67 V1091
---
Entry stack: [V13, 0x289, V1068, V1069]
Stack pops: 2
Stack additions: [V1090]
Exit stack: [V13, 0x289, V1090]

================================

Block 0xd5e
[0xd5e:0xd66]
---
Predecessors: [0xd2f]
Successors: []
---
0xd5e RETURNDATASIZE
0xd5f PUSH1 0x0
0xd61 DUP1
0xd62 RETURNDATACOPY
0xd63 RETURNDATASIZE
0xd64 PUSH1 0x0
0xd66 REVERT
---
0xd5e: V1093 = RETURNDATASIZE
0xd5f: V1094 = 0x0
0xd62: RETURNDATACOPY 0x0 0x0 V1093
0xd63: V1095 = RETURNDATASIZE
0xd64: V1096 = 0x0
0xd66: REVERT 0x0 V1095
---
Entry stack: [V13, 0x289, V1090]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x289, V1090]

================================

Block 0xd67
[0xd67:0xd69]
---
Predecessors: [0xd2f]
Successors: [0x289]
---
0xd67 JUMPDEST
0xd68 POP
0xd69 JUMP
---
0xd67: JUMPDEST 
0xd69: JUMP 0x289
---
Entry stack: [V13, 0x289, V1090]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xd6a
[0xd6a:0xdb5]
---
Predecessors: []
Successors: []
---
0xd6a STOP
0xd6b PUSH8 0x6973746572656420
0xd74 PUSH3 0x616e6b
0xd78 STOP
0xd79 STOP
0xd7a STOP
0xd7b STOP
0xd7c STOP
0xd7d STOP
0xd7e STOP
0xd7f STOP
0xd80 STOP
0xd81 STOP
0xd82 STOP
0xd83 STOP
0xd84 STOP
0xd85 STOP
0xd86 STOP
0xd87 STOP
0xd88 STOP
0xd89 STOP
0xd8a STOP
0xd8b LOG1
0xd8c PUSH6 0x627a7a723058
0xd93 SHA3
0xd94 DUP10
0xd95 MISSING 0x4f
0xd96 MISSING 0xcb
0xd97 MISSING 0xe9
0xd98 SHA3
0xd99 MISSING 0x2f
0xd9a MISSING 0xea
0xd9b MULMOD
0xd9c SMOD
0xd9d SHA3
0xd9e SWAP14
0xd9f MISSING 0xb7
0xda0 MISSING 0xba
0xda1 MISSING 0x1f
0xda2 MISSING 0xc8
0xda3 STOP
0xda4 LOG4
0xda5 MISSING 0xe7
0xda6 CODESIZE
0xda7 DUP16
0xda8 ADD
0xda9 MISSING 0xb4
0xdaa MISSING 0x49
0xdab MISSING 0xf7
0xdac MISSING 0xe
0xdad BALANCE
0xdae SWAP5
0xdaf MISSING 0x28
0xdb0 MISSING 0xe4
0xdb1 MISSING 0xcd
0xdb2 MISSING 0xdc
0xdb3 MISSING 0xd2
0xdb4 STOP
0xdb5 MISSING 0x29
---
0xd6a: STOP 
0xd6b: V1097 = 0x6973746572656420
0xd74: V1098 = 0x616e6b
0xd78: STOP 
0xd79: STOP 
0xd7a: STOP 
0xd7b: STOP 
0xd7c: STOP 
0xd7d: STOP 
0xd7e: STOP 
0xd7f: STOP 
0xd80: STOP 
0xd81: STOP 
0xd82: STOP 
0xd83: STOP 
0xd84: STOP 
0xd85: STOP 
0xd86: STOP 
0xd87: STOP 
0xd88: STOP 
0xd89: STOP 
0xd8a: STOP 
0xd8b: LOG S0 S1 S2
0xd8c: V1099 = 0x627a7a723058
0xd93: V1100 = SHA3 0x627a7a723058 S3
0xd95: MISSING 0x4f
0xd96: MISSING 0xcb
0xd97: MISSING 0xe9
0xd98: V1101 = SHA3 S0 S1
0xd99: MISSING 0x2f
0xd9a: MISSING 0xea
0xd9b: V1102 = MULMOD S0 S1 S2
0xd9c: V1103 = SMOD V1102 S3
0xd9d: V1104 = SHA3 V1103 S4
0xd9f: MISSING 0xb7
0xda0: MISSING 0xba
0xda1: MISSING 0x1f
0xda2: MISSING 0xc8
0xda3: STOP 
0xda4: LOG S0 S1 S2 S3 S4 S5
0xda5: MISSING 0xe7
0xda6: V1105 = CODESIZE
0xda8: V1106 = ADD S14 V1105
0xda9: MISSING 0xb4
0xdaa: MISSING 0x49
0xdab: MISSING 0xf7
0xdac: MISSING 0xe
0xdad: V1107 = BALANCE S0
0xdaf: MISSING 0x28
0xdb0: MISSING 0xe4
0xdb1: MISSING 0xcd
0xdb2: MISSING 0xdc
0xdb3: MISSING 0xd2
0xdb4: STOP 
0xdb5: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x616e6b, 0x6973746572656420, S12, V1100, S4, S5, S6, S7, S8, S9, S10, S11, S12, V1101, S18, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V1104, V1106, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S5, S1, S2, S3, S4, V1107]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x12e
Exit block: 0x1aa
Body: 0x12e, 0x136, 0x13a, 0x143, 0x165, 0x16e, 0x17d, 0x191, 0x1aa, 0x2e6, 0x326, 0x32e, 0x341, 0x34f, 0x363, 0x36c

Function 1:
Public function signature: 0x10639ea0
Entry block: 0x1b8
Exit block: 0x1cd
Body: 0x1b8, 0x1c0, 0x1c4, 0x1cd, 0x374, 0x38a, 0x425, 0x446

Function 2:
Public function signature: 0x112dcbd8
Entry block: 0x1e1
Exit block: 0x1f6
Body: 0x1e1, 0x1e9, 0x1ed, 0x1f6, 0x449, 0x45f, 0x4c2, 0x511, 0x515, 0x520, 0x529, 0x53b, 0x53f

Function 3:
Public function signature: 0x200d2ed2
Entry block: 0x212
Exit block: 0x227
Body: 0x212, 0x21a, 0x21e, 0x227, 0x546

Function 4:
Public function signature: 0x60d704db
Entry block: 0x253
Exit block: 0x1f6
Body: 0x1f6, 0x253, 0x25b, 0x25f, 0x515, 0x520, 0x529, 0x53b, 0x53f, 0x56a, 0x580, 0x5e3, 0x632

Function 5:
Public function signature: 0x66d38203
Entry block: 0x268
Exit block: 0x289
Body: 0x268, 0x270, 0x274, 0x289, 0x636, 0x64d, 0x6c2, 0x6fc, 0x700, 0x70b, 0x714, 0x726, 0x72a, 0x736, 0x73a

Function 6:
Public function signature: 0x7c784a01
Entry block: 0x28b
Exit block: 0x1f6
Body: 0x1f6, 0x28b, 0x293, 0x297, 0x515, 0x520, 0x529, 0x53b, 0x53f, 0x787, 0x79d, 0x800, 0x84f

Function 7:
Public function signature: 0x88d761f2
Entry block: 0x2a0
Exit block: 0x1cd
Body: 0x1cd, 0x2a0, 0x2a8, 0x2ac, 0x853, 0x869, 0x904

Function 8:
Public function signature: 0xa0f52da0
Entry block: 0x2b5
Exit block: 0x1cd
Body: 0x1cd, 0x2b5, 0x2bd, 0x2c1, 0x93c, 0x952, 0x9ed, 0xa27, 0xa2b, 0xa36, 0xa3f, 0xa51, 0xa55, 0xa62, 0xa91, 0xa95

Function 9:
Public function signature: 0xd0e30db0
Entry block: 0x2d6
Exit block: 0x1cd
Body: 0x1cd, 0x2d6, 0x446, 0xa9a, 0xaa4, 0xb19, 0xb2c, 0xb8f, 0xbf1, 0xbf5, 0xc00, 0xc09, 0xc1c, 0xc20, 0xc2d, 0xc34

Function 10:
Public function signature: 0xed78cf4a
Entry block: 0x2de
Exit block: 0x289
Body: 0x289, 0x2de, 0xc3c, 0xc4f, 0xcb2, 0xd01, 0xd05, 0xd10, 0xd19, 0xd2b, 0xd2f, 0xd5e, 0xd67

Function 11:
Public fallback function
Entry block: 0x95
Exit block: 0x126
Body: 0x95, 0xfb, 0xff, 0x10a, 0x113, 0x126, 0x12a

