Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x53]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x53
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x53
0xc: JUMPI 0x53 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xd2]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x106b96ce
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xd2
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x106b96ce
0x22: V15 = EQ V13 0x106b96ce
0x23: V16 = 0xd2
0x26: JUMPI 0xd2 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xf1]
---
0x27 DUP1
0x28 PUSH4 0x41c0e1b5
0x2d EQ
0x2e PUSH2 0xf1
0x31 JUMPI
---
0x28: V17 = 0x41c0e1b5
0x2d: V18 = EQ 0x41c0e1b5 V13
0x2e: V19 = 0xf1
0x31: JUMPI 0xf1 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x104]
---
0x32 DUP1
0x33 PUSH4 0x8da5cb5b
0x38 EQ
0x39 PUSH2 0x104
0x3c JUMPI
---
0x33: V20 = 0x8da5cb5b
0x38: V21 = EQ 0x8da5cb5b V13
0x39: V22 = 0x104
0x3c: JUMPI 0x104 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x133]
---
0x3d DUP1
0x3e PUSH4 0x93fc9fbe
0x43 EQ
0x44 PUSH2 0x133
0x47 JUMPI
---
0x3e: V23 = 0x93fc9fbe
0x43: V24 = EQ 0x93fc9fbe V13
0x44: V25 = 0x133
0x47: JUMPI 0x133 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x146]
---
0x48 DUP1
0x49 PUSH4 0xde82efb4
0x4e EQ
0x4f PUSH2 0x146
0x52 JUMPI
---
0x49: V26 = 0xde82efb4
0x4e: V27 = EQ 0xde82efb4 V13
0x4f: V28 = 0x146
0x52: JUMPI 0x146 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5e]
---
Predecessors: [0x0, 0x48]
Successors: [0x5f, 0xd0]
---
0x53 JUMPDEST
0x54 PUSH3 0x186a0
0x58 GAS
0x59 GT
0x5a ISZERO
0x5b PUSH2 0xd0
0x5e JUMPI
---
0x53: JUMPDEST 
0x54: V29 = 0x186a0
0x58: V30 = GAS
0x59: V31 = GT V30 0x186a0
0x5a: V32 = ISZERO V31
0x5b: V33 = 0xd0
0x5e: JUMPI 0xd0 V32
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x5f
[0x5f:0xcf]
---
Predecessors: [0x53]
Successors: [0xd0]
---
0x5f PUSH1 0x0
0x61 SLOAD
0x62 PUSH1 0x1
0x64 PUSH1 0xa0
0x66 PUSH1 0x2
0x68 EXP
0x69 SUB
0x6a AND
0x6b PUSH3 0x249f0
0x6f PUSH1 0x40
0x71 MLOAD
0x72 PUSH32 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x5
0x97 ADD
0x98 PUSH1 0x40
0x9a MLOAD
0x9b DUP1
0x9c SWAP2
0x9d SUB
0x9e SWAP1
0x9f SHA3
0xa0 PUSH1 0xe0
0xa2 PUSH1 0x2
0xa4 EXP
0xa5 SWAP1
0xa6 DIV
0xa7 SWAP1
0xa8 PUSH1 0x40
0xaa MLOAD
0xab DUP3
0xac PUSH4 0xffffffff
0xb1 AND
0xb2 PUSH1 0xe0
0xb4 PUSH1 0x2
0xb6 EXP
0xb7 MUL
0xb8 DUP2
0xb9 MSTORE
0xba PUSH1 0x4
0xbc ADD
0xbd PUSH1 0x0
0xbf PUSH1 0x40
0xc1 MLOAD
0xc2 DUP1
0xc3 DUP4
0xc4 SUB
0xc5 DUP2
0xc6 PUSH1 0x0
0xc8 DUP9
0xc9 DUP8
0xca CALL
0xcb POP
0xcc POP
0xcd POP
0xce POP
0xcf POP
---
0x5f: V34 = 0x0
0x61: V35 = S[0x0]
0x62: V36 = 0x1
0x64: V37 = 0xa0
0x66: V38 = 0x2
0x68: V39 = EXP 0x2 0xa0
0x69: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x6b: V42 = 0x249f0
0x6f: V43 = 0x40
0x71: V44 = M[0x40]
0x72: V45 = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x94: M[V44] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x95: V46 = 0x5
0x97: V47 = ADD 0x5 V44
0x98: V48 = 0x40
0x9a: V49 = M[0x40]
0x9d: V50 = SUB V47 V49
0x9f: V51 = SHA3 V49 V50
0xa0: V52 = 0xe0
0xa2: V53 = 0x2
0xa4: V54 = EXP 0x2 0xe0
0xa6: V55 = DIV V51 0x100000000000000000000000000000000000000000000000000000000
0xa8: V56 = 0x40
0xaa: V57 = M[0x40]
0xac: V58 = 0xffffffff
0xb1: V59 = AND 0xffffffff V55
0xb2: V60 = 0xe0
0xb4: V61 = 0x2
0xb6: V62 = EXP 0x2 0xe0
0xb7: V63 = MUL 0x100000000000000000000000000000000000000000000000000000000 V59
0xb9: M[V57] = V63
0xba: V64 = 0x4
0xbc: V65 = ADD 0x4 V57
0xbd: V66 = 0x0
0xbf: V67 = 0x40
0xc1: V68 = M[0x40]
0xc4: V69 = SUB V65 V68
0xc6: V70 = 0x0
0xca: V71 = CALL 0x249f0 V41 0x0 V68 V69 V68 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd0
[0xd0:0xd1]
---
Predecessors: [0x53, 0x5f, 0x171, 0x27c]
Successors: []
---
0xd0 JUMPDEST
0xd1 STOP
---
0xd0: JUMPDEST 
0xd1: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0xd]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V72 = CALLVALUE
0xd4: V73 = ISZERO V72
0xd5: V74 = 0xdd
0xd8: JUMPI 0xdd V73
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V75 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xdd
[0xdd:0xf0]
---
Predecessors: [0xd2]
Successors: [0x159]
---
0xdd JUMPDEST
0xde PUSH2 0xd0
0xe1 PUSH1 0x1
0xe3 PUSH1 0xa0
0xe5 PUSH1 0x2
0xe7 EXP
0xe8 SUB
0xe9 PUSH1 0x4
0xeb CALLDATALOAD
0xec AND
0xed PUSH2 0x159
0xf0 JUMP
---
0xdd: JUMPDEST 
0xde: V76 = 0xd0
0xe1: V77 = 0x1
0xe3: V78 = 0xa0
0xe5: V79 = 0x2
0xe7: V80 = EXP 0x2 0xa0
0xe8: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe9: V82 = 0x4
0xeb: V83 = CALLDATALOAD 0x4
0xec: V84 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0xed: V85 = 0x159
0xf0: JUMP 0x159
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd0, V84]
Exit stack: [V13, 0xd0, V84]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0x27]
Successors: [0xf8, 0xfc]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V86 = CALLVALUE
0xf3: V87 = ISZERO V86
0xf4: V88 = 0xfc
0xf7: JUMPI 0xfc V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V89 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0xf1]
Successors: [0x220]
---
0xfc JUMPDEST
0xfd PUSH2 0xd0
0x100 PUSH2 0x220
0x103 JUMP
---
0xfc: JUMPDEST 
0xfd: V90 = 0xd0
0x100: V91 = 0x220
0x103: JUMP 0x220
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V13, 0xd0]

================================

Block 0x104
[0x104:0x10a]
---
Predecessors: [0x32]
Successors: [0x10b, 0x10f]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0x104: JUMPDEST 
0x105: V92 = CALLVALUE
0x106: V93 = ISZERO V92
0x107: V94 = 0x10f
0x10a: JUMPI 0x10f V93
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0x104]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V95 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x10f
[0x10f:0x116]
---
Predecessors: [0x104]
Successors: [0x246]
---
0x10f JUMPDEST
0x110 PUSH2 0x117
0x113 PUSH2 0x246
0x116 JUMP
---
0x10f: JUMPDEST 
0x110: V96 = 0x117
0x113: V97 = 0x246
0x116: JUMP 0x246
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V13, 0x117]

================================

Block 0x117
[0x117:0x132]
---
Predecessors: [0x246, 0x255]
Successors: []
---
0x117 JUMPDEST
0x118 PUSH1 0x40
0x11a MLOAD
0x11b PUSH1 0x1
0x11d PUSH1 0xa0
0x11f PUSH1 0x2
0x121 EXP
0x122 SUB
0x123 SWAP1
0x124 SWAP2
0x125 AND
0x126 DUP2
0x127 MSTORE
0x128 PUSH1 0x20
0x12a ADD
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f SWAP2
0x130 SUB
0x131 SWAP1
0x132 RETURN
---
0x117: JUMPDEST 
0x118: V98 = 0x40
0x11a: V99 = M[0x40]
0x11b: V100 = 0x1
0x11d: V101 = 0xa0
0x11f: V102 = 0x2
0x121: V103 = EXP 0x2 0xa0
0x122: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x125: V105 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x127: M[V99] = V105
0x128: V106 = 0x20
0x12a: V107 = ADD 0x20 V99
0x12b: V108 = 0x40
0x12d: V109 = M[0x40]
0x130: V110 = SUB V107 V109
0x132: RETURN V109 V110
---
Entry stack: [V13, 0x117, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x117]

================================

Block 0x133
[0x133:0x139]
---
Predecessors: [0x3d]
Successors: [0x13a, 0x13e]
---
0x133 JUMPDEST
0x134 CALLVALUE
0x135 ISZERO
0x136 PUSH2 0x13e
0x139 JUMPI
---
0x133: JUMPDEST 
0x134: V111 = CALLVALUE
0x135: V112 = ISZERO V111
0x136: V113 = 0x13e
0x139: JUMPI 0x13e V112
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13a
[0x13a:0x13d]
---
Predecessors: [0x133]
Successors: []
---
0x13a PUSH1 0x0
0x13c DUP1
0x13d REVERT
---
0x13a: V114 = 0x0
0x13d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x133]
Successors: [0x255]
---
0x13e JUMPDEST
0x13f PUSH2 0x117
0x142 PUSH2 0x255
0x145 JUMP
---
0x13e: JUMPDEST 
0x13f: V115 = 0x117
0x142: V116 = 0x255
0x145: JUMP 0x255
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V13, 0x117]

================================

Block 0x146
[0x146:0x14c]
---
Predecessors: [0x48]
Successors: [0x14d, 0x151]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 ISZERO
0x149 PUSH2 0x151
0x14c JUMPI
---
0x146: JUMPDEST 
0x147: V117 = CALLVALUE
0x148: V118 = ISZERO V117
0x149: V119 = 0x151
0x14c: JUMPI 0x151 V118
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x146]
Successors: []
---
0x14d PUSH1 0x0
0x14f DUP1
0x150 REVERT
---
0x14d: V120 = 0x0
0x150: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x151
[0x151:0x158]
---
Predecessors: [0x146]
Successors: [0x264]
---
0x151 JUMPDEST
0x152 PUSH2 0xd0
0x155 PUSH2 0x264
0x158 JUMP
---
0x151: JUMPDEST 
0x152: V121 = 0xd0
0x155: V122 = 0x264
0x158: JUMP 0x264
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V13, 0xd0]

================================

Block 0x159
[0x159:0x16f]
---
Predecessors: [0xdd]
Successors: [0x170, 0x171]
---
0x159 JUMPDEST
0x15a PUSH1 0x1
0x15c SLOAD
0x15d CALLER
0x15e PUSH1 0x1
0x160 PUSH1 0xa0
0x162 PUSH1 0x2
0x164 EXP
0x165 SUB
0x166 SWAP1
0x167 DUP2
0x168 AND
0x169 SWAP2
0x16a AND
0x16b EQ
0x16c PUSH2 0x171
0x16f JUMPI
---
0x159: JUMPDEST 
0x15a: V123 = 0x1
0x15c: V124 = S[0x1]
0x15d: V125 = CALLER
0x15e: V126 = 0x1
0x160: V127 = 0xa0
0x162: V128 = 0x2
0x164: V129 = EXP 0x2 0xa0
0x165: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x168: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x16a: V132 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V133 = EQ V132 V131
0x16c: V134 = 0x171
0x16f: JUMPI 0x171 V133
---
Entry stack: [V13, 0xd0, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0, V84]

================================

Block 0x170
[0x170:0x170]
---
Predecessors: [0x159]
Successors: []
---
0x170 INVALID
---
0x170: INVALID 
---
Entry stack: [V13, 0xd0, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0, V84]

================================

Block 0x171
[0x171:0x21f]
---
Predecessors: [0x159]
Successors: [0xd0]
---
0x171 JUMPDEST
0x172 PUSH1 0x0
0x174 DUP1
0x175 SLOAD
0x176 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18b NOT
0x18c AND
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 DUP4
0x196 DUP2
0x197 AND
0x198 SWAP2
0x199 SWAP1
0x19a SWAP2
0x19b OR
0x19c SWAP2
0x19d DUP3
0x19e SWAP1
0x19f SSTORE
0x1a0 AND
0x1a1 PUSH7 0x38d7ea4c68000
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac PUSH32 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x13
0x1d1 ADD
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 DUP1
0x1d6 SWAP2
0x1d7 SUB
0x1d8 SWAP1
0x1d9 SHA3
0x1da PUSH1 0xe0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SWAP1
0x1e0 DIV
0x1e1 SWAP1
0x1e2 DUP4
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 PUSH1 0xe0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb PUSH4 0xffffffff
0x1f0 DUP6
0x1f1 AND
0x1f2 MUL
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd SWAP1
0x1fe SWAP2
0x1ff AND
0x200 PUSH1 0x4
0x202 DUP3
0x203 ADD
0x204 MSTORE
0x205 PUSH1 0x24
0x207 ADD
0x208 PUSH1 0x0
0x20a PUSH1 0x40
0x20c MLOAD
0x20d DUP1
0x20e DUP4
0x20f SUB
0x210 DUP2
0x211 DUP6
0x212 DUP9
0x213 PUSH2 0x8796
0x216 GAS
0x217 SUB
0x218 CALL
0x219 POP
0x21a POP
0x21b POP
0x21c POP
0x21d POP
0x21e POP
0x21f JUMP
---
0x171: JUMPDEST 
0x172: V135 = 0x0
0x175: V136 = S[0x0]
0x176: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V138 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V139 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V136
0x18d: V140 = 0x1
0x18f: V141 = 0xa0
0x191: V142 = 0x2
0x193: V143 = EXP 0x2 0xa0
0x194: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x197: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x19b: V146 = OR V145 V139
0x19f: S[0x0] = V146
0x1a0: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x1a1: V148 = 0x38d7ea4c68000
0x1a9: V149 = 0x40
0x1ab: V150 = M[0x40]
0x1ac: V151 = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x1ce: M[V150] = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x1cf: V152 = 0x13
0x1d1: V153 = ADD 0x13 V150
0x1d2: V154 = 0x40
0x1d4: V155 = M[0x40]
0x1d7: V156 = SUB V153 V155
0x1d9: V157 = SHA3 V155 V156
0x1da: V158 = 0xe0
0x1dc: V159 = 0x2
0x1de: V160 = EXP 0x2 0xe0
0x1e0: V161 = DIV V157 0x100000000000000000000000000000000000000000000000000000000
0x1e3: V162 = 0x40
0x1e5: V163 = M[0x40]
0x1e6: V164 = 0xe0
0x1e8: V165 = 0x2
0x1ea: V166 = EXP 0x2 0xe0
0x1eb: V167 = 0xffffffff
0x1f1: V168 = AND V161 0xffffffff
0x1f2: V169 = MUL V168 0x100000000000000000000000000000000000000000000000000000000
0x1f4: M[V163] = V169
0x1f5: V170 = 0x1
0x1f7: V171 = 0xa0
0x1f9: V172 = 0x2
0x1fb: V173 = EXP 0x2 0xa0
0x1fc: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ff: V175 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x200: V176 = 0x4
0x203: V177 = ADD V163 0x4
0x204: M[V177] = V175
0x205: V178 = 0x24
0x207: V179 = ADD 0x24 V163
0x208: V180 = 0x0
0x20a: V181 = 0x40
0x20c: V182 = M[0x40]
0x20f: V183 = SUB V179 V182
0x213: V184 = 0x8796
0x216: V185 = GAS
0x217: V186 = SUB V185 0x8796
0x218: V187 = CALL V186 V147 0x38d7ea4c68000 V182 V183 V182 0x0
0x21f: JUMP 0xd0
---
Entry stack: [V13, 0xd0, V84]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x220
[0x220:0x236]
---
Predecessors: [0xfc]
Successors: [0x237, 0x238]
---
0x220 JUMPDEST
0x221 PUSH1 0x1
0x223 SLOAD
0x224 CALLER
0x225 PUSH1 0x1
0x227 PUSH1 0xa0
0x229 PUSH1 0x2
0x22b EXP
0x22c SUB
0x22d SWAP1
0x22e DUP2
0x22f AND
0x230 SWAP2
0x231 AND
0x232 EQ
0x233 PUSH2 0x238
0x236 JUMPI
---
0x220: JUMPDEST 
0x221: V188 = 0x1
0x223: V189 = S[0x1]
0x224: V190 = CALLER
0x225: V191 = 0x1
0x227: V192 = 0xa0
0x229: V193 = 0x2
0x22b: V194 = EXP 0x2 0xa0
0x22c: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22f: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x231: V197 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x232: V198 = EQ V197 V196
0x233: V199 = 0x238
0x236: JUMPI 0x238 V198
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x237
[0x237:0x237]
---
Predecessors: [0x220]
Successors: []
---
0x237 INVALID
---
0x237: INVALID 
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x238
[0x238:0x245]
---
Predecessors: [0x220]
Successors: []
---
0x238 JUMPDEST
0x239 PUSH1 0x1
0x23b SLOAD
0x23c PUSH1 0x1
0x23e PUSH1 0xa0
0x240 PUSH1 0x2
0x242 EXP
0x243 SUB
0x244 AND
0x245 SELFDESTRUCT
---
0x238: JUMPDEST 
0x239: V200 = 0x1
0x23b: V201 = S[0x1]
0x23c: V202 = 0x1
0x23e: V203 = 0xa0
0x240: V204 = 0x2
0x242: V205 = EXP 0x2 0xa0
0x243: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x245: SELFDESTRUCT V207
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x246
[0x246:0x254]
---
Predecessors: [0x10f]
Successors: [0x117]
---
0x246 JUMPDEST
0x247 PUSH1 0x1
0x249 SLOAD
0x24a PUSH1 0x1
0x24c PUSH1 0xa0
0x24e PUSH1 0x2
0x250 EXP
0x251 SUB
0x252 AND
0x253 DUP2
0x254 JUMP
---
0x246: JUMPDEST 
0x247: V208 = 0x1
0x249: V209 = S[0x1]
0x24a: V210 = 0x1
0x24c: V211 = 0xa0
0x24e: V212 = 0x2
0x250: V213 = EXP 0x2 0xa0
0x251: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x252: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x254: JUMP 0x117
---
Entry stack: [V13, 0x117]
Stack pops: 1
Stack additions: [S0, V215]
Exit stack: [V13, 0x117, V215]

================================

Block 0x255
[0x255:0x263]
---
Predecessors: [0x13e]
Successors: [0x117]
---
0x255 JUMPDEST
0x256 PUSH1 0x0
0x258 SLOAD
0x259 PUSH1 0x1
0x25b PUSH1 0xa0
0x25d PUSH1 0x2
0x25f EXP
0x260 SUB
0x261 AND
0x262 DUP2
0x263 JUMP
---
0x255: JUMPDEST 
0x256: V216 = 0x0
0x258: V217 = S[0x0]
0x259: V218 = 0x1
0x25b: V219 = 0xa0
0x25d: V220 = 0x2
0x25f: V221 = EXP 0x2 0xa0
0x260: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x261: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x263: JUMP 0x117
---
Entry stack: [V13, 0x117]
Stack pops: 1
Stack additions: [S0, V223]
Exit stack: [V13, 0x117, V223]

================================

Block 0x264
[0x264:0x27a]
---
Predecessors: [0x151]
Successors: [0x27b, 0x27c]
---
0x264 JUMPDEST
0x265 PUSH1 0x1
0x267 SLOAD
0x268 CALLER
0x269 PUSH1 0x1
0x26b PUSH1 0xa0
0x26d PUSH1 0x2
0x26f EXP
0x270 SUB
0x271 SWAP1
0x272 DUP2
0x273 AND
0x274 SWAP2
0x275 AND
0x276 EQ
0x277 PUSH2 0x27c
0x27a JUMPI
---
0x264: JUMPDEST 
0x265: V224 = 0x1
0x267: V225 = S[0x1]
0x268: V226 = CALLER
0x269: V227 = 0x1
0x26b: V228 = 0xa0
0x26d: V229 = 0x2
0x26f: V230 = EXP 0x2 0xa0
0x270: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x273: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x275: V233 = AND V225 0xffffffffffffffffffffffffffffffffffffffff
0x276: V234 = EQ V233 V232
0x277: V235 = 0x27c
0x27a: JUMPI 0x27c V234
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x27b
[0x27b:0x27b]
---
Predecessors: [0x264]
Successors: []
---
0x27b INVALID
---
0x27b: INVALID 
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x27c
[0x27c:0x2ee]
---
Predecessors: [0x264]
Successors: [0xd0]
---
0x27c JUMPDEST
0x27d PUSH1 0x0
0x27f SLOAD
0x280 PUSH1 0x1
0x282 PUSH1 0xa0
0x284 PUSH1 0x2
0x286 EXP
0x287 SUB
0x288 AND
0x289 PUSH3 0x249f0
0x28d PUSH1 0x40
0x28f MLOAD
0x290 PUSH32 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x2b1 DUP2
0x2b2 MSTORE
0x2b3 PUSH1 0x5
0x2b5 ADD
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 DUP1
0x2ba SWAP2
0x2bb SUB
0x2bc SWAP1
0x2bd SHA3
0x2be PUSH1 0xe0
0x2c0 PUSH1 0x2
0x2c2 EXP
0x2c3 SWAP1
0x2c4 DIV
0x2c5 SWAP1
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 DUP3
0x2ca PUSH4 0xffffffff
0x2cf AND
0x2d0 PUSH1 0xe0
0x2d2 PUSH1 0x2
0x2d4 EXP
0x2d5 MUL
0x2d6 DUP2
0x2d7 MSTORE
0x2d8 PUSH1 0x4
0x2da ADD
0x2db PUSH1 0x0
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 DUP1
0x2e1 DUP4
0x2e2 SUB
0x2e3 DUP2
0x2e4 PUSH1 0x0
0x2e6 DUP9
0x2e7 DUP8
0x2e8 CALL
0x2e9 POP
0x2ea POP
0x2eb POP
0x2ec POP
0x2ed POP
0x2ee JUMP
---
0x27c: JUMPDEST 
0x27d: V236 = 0x0
0x27f: V237 = S[0x0]
0x280: V238 = 0x1
0x282: V239 = 0xa0
0x284: V240 = 0x2
0x286: V241 = EXP 0x2 0xa0
0x287: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x288: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x289: V244 = 0x249f0
0x28d: V245 = 0x40
0x28f: V246 = M[0x40]
0x290: V247 = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x2b2: M[V246] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x2b3: V248 = 0x5
0x2b5: V249 = ADD 0x5 V246
0x2b6: V250 = 0x40
0x2b8: V251 = M[0x40]
0x2bb: V252 = SUB V249 V251
0x2bd: V253 = SHA3 V251 V252
0x2be: V254 = 0xe0
0x2c0: V255 = 0x2
0x2c2: V256 = EXP 0x2 0xe0
0x2c4: V257 = DIV V253 0x100000000000000000000000000000000000000000000000000000000
0x2c6: V258 = 0x40
0x2c8: V259 = M[0x40]
0x2ca: V260 = 0xffffffff
0x2cf: V261 = AND 0xffffffff V257
0x2d0: V262 = 0xe0
0x2d2: V263 = 0x2
0x2d4: V264 = EXP 0x2 0xe0
0x2d5: V265 = MUL 0x100000000000000000000000000000000000000000000000000000000 V261
0x2d7: M[V259] = V265
0x2d8: V266 = 0x4
0x2da: V267 = ADD 0x4 V259
0x2db: V268 = 0x0
0x2dd: V269 = 0x40
0x2df: V270 = M[0x40]
0x2e2: V271 = SUB V267 V270
0x2e4: V272 = 0x0
0x2e8: V273 = CALL 0x249f0 V243 0x0 V270 V271 V270 0x0
0x2ee: JUMP 0xd0
---
Entry stack: [V13, 0xd0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ef
[0x2ef:0x326]
---
Predecessors: []
Successors: []
---
0x2ef STOP
0x2f0 LOG1
0x2f1 PUSH6 0x627a7a723058
0x2f8 SHA3
0x2f9 MISSING 0xac
0x2fa DUP7
0x2fb PC
0x2fc TIMESTAMP
0x2fd MISSING 0xd7
0x2fe DIFFICULTY
0x2ff MISSING 0xb2
0x300 DUP13
0x301 RETURNDATASIZE
0x302 MISSING 0xa8
0x303 SHL
0x304 GAS
0x305 BLOCKHASH
0x306 MISSING 0xf9
0x307 COINBASE
0x308 SHA3
0x309 CALLDATACOPY
0x30a LOG4
0x30b POP
0x30c MISSING 0x5c
0x30d BYTE
0x30e DUP2
0x30f PUSH23 0x26585402078fcbce9e0029
---
0x2ef: STOP 
0x2f0: LOG S0 S1 S2
0x2f1: V274 = 0x627a7a723058
0x2f8: V275 = SHA3 0x627a7a723058 S3
0x2f9: MISSING 0xac
0x2fb: V276 = PC
0x2fc: V277 = TIMESTAMP
0x2fd: MISSING 0xd7
0x2fe: V278 = DIFFICULTY
0x2ff: MISSING 0xb2
0x301: V279 = RETURNDATASIZE
0x302: MISSING 0xa8
0x303: V280 = SHL S0 S1
0x304: V281 = GAS
0x305: V282 = BLOCKHASH V281
0x306: MISSING 0xf9
0x307: V283 = COINBASE
0x308: V284 = SHA3 V283 S0
0x309: CALLDATACOPY V284 S1 S2
0x30a: LOG S3 S4 S5 S6 S7 S8
0x30c: MISSING 0x5c
0x30d: V285 = BYTE S0 S1
0x30f: V286 = 0x26585402078fcbce9e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V275, V277, V276, S6, S0, S1, S2, S3, S4, S5, S6, V278, V279, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V282, V280, 0x26585402078fcbce9e0029, S2, V285, S2]
Exit stack: []

================================

Function 0:
Public function signature: 0x106b96ce
Entry block: 0xd2
Exit block: 0xd0
Body: 0xd0, 0xd2, 0xd9, 0xdd, 0x159, 0x170, 0x171

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xf1
Exit block: 0x237
Body: 0xf1, 0xf8, 0xfc, 0x220, 0x237, 0x238

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x104
Exit block: 0x117
Body: 0x104, 0x10b, 0x10f, 0x117, 0x246

Function 3:
Public function signature: 0x93fc9fbe
Entry block: 0x133
Exit block: 0x117
Body: 0x117, 0x133, 0x13a, 0x13e, 0x255

Function 4:
Public function signature: 0xde82efb4
Entry block: 0x146
Exit block: 0xd0
Body: 0xd0, 0x146, 0x14d, 0x151, 0x264, 0x27b, 0x27c

Function 5:
Public fallback function
Entry block: 0x53
Exit block: 0xd0
Body: 0x53, 0x5f, 0xd0

