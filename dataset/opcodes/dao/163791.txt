Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8b
0xa: JUMPI 0x8b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x167]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x18160ddd
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x167
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x18160ddd
0x39: V12 = EQ V10 0x18160ddd
0x3a: V13 = 0x167
0x3d: JUMPI 0x167 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x18c]
---
0x3e DUP1
0x3f PUSH4 0x1a39d8ef
0x44 EQ
0x45 PUSH2 0x18c
0x48 JUMPI
---
0x3f: V14 = 0x1a39d8ef
0x44: V15 = EQ 0x1a39d8ef V10
0x45: V16 = 0x18c
0x48: JUMPI 0x18c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1b1]
---
0x49 DUP1
0x4a PUSH4 0x3ccfd60b
0x4f EQ
0x50 PUSH2 0x1b1
0x53 JUMPI
---
0x4a: V17 = 0x3ccfd60b
0x4f: V18 = EQ 0x3ccfd60b V10
0x50: V19 = 0x1b1
0x53: JUMPI 0x1b1 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x1c6]
---
0x54 DUP1
0x55 PUSH4 0x8da5cb5b
0x5a EQ
0x5b PUSH2 0x1c6
0x5e JUMPI
---
0x55: V20 = 0x8da5cb5b
0x5a: V21 = EQ 0x8da5cb5b V10
0x5b: V22 = 0x1c6
0x5e: JUMPI 0x1c6 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x1f5]
---
0x5f DUP1
0x60 PUSH4 0xa6f9dae1
0x65 EQ
0x66 PUSH2 0x1f5
0x69 JUMPI
---
0x60: V23 = 0xa6f9dae1
0x65: V24 = EQ 0xa6f9dae1 V10
0x66: V25 = 0x1f5
0x69: JUMPI 0x1f5 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x216]
---
0x6a DUP1
0x6b PUSH4 0xbd9b6d86
0x70 EQ
0x71 PUSH2 0x216
0x74 JUMPI
---
0x6b: V26 = 0xbd9b6d86
0x70: V27 = EQ 0xbd9b6d86 V10
0x71: V28 = 0x216
0x74: JUMPI 0x216 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x22b]
---
0x75 DUP1
0x76 PUSH4 0xd4ee1d90
0x7b EQ
0x7c PUSH2 0x22b
0x7f JUMPI
---
0x76: V29 = 0xd4ee1d90
0x7b: V30 = EQ 0xd4ee1d90 V10
0x7c: V31 = 0x22b
0x7f: JUMPI 0x22b V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x25a]
---
0x80 DUP1
0x81 PUSH4 0xf441b1c8
0x86 EQ
0x87 PUSH2 0x25a
0x8a JUMPI
---
0x81: V32 = 0xf441b1c8
0x86: V33 = EQ 0xf441b1c8 V10
0x87: V34 = 0x25a
0x8a: JUMPI 0x25a V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x0, 0x80]
Successors: [0x8c]
---
0x8b JUMPDEST
---
0x8b: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0xa0]
---
Predecessors: [0x8b]
Successors: [0x27f]
---
0x8c JUMPDEST
0x8d PUSH1 0x4
0x8f SLOAD
0x90 CALLVALUE
0x91 SWAP1
0x92 PUSH2 0xa1
0x95 SWAP1
0x96 DUP3
0x97 PUSH4 0xffffffff
0x9c PUSH2 0x27f
0x9f AND
0xa0 JUMP
---
0x8c: JUMPDEST 
0x8d: V35 = 0x4
0x8f: V36 = S[0x4]
0x90: V37 = CALLVALUE
0x92: V38 = 0xa1
0x97: V39 = 0xffffffff
0x9c: V40 = 0x27f
0x9f: V41 = AND 0x27f 0xffffffff
0xa0: JUMP 0x27f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V37, 0xa1, V36, V37]
Exit stack: [V10, V37, 0xa1, V36, V37]

================================

Block 0xa1
[0xa1:0xb6]
---
Predecessors: [0x292]
Successors: [0x27f]
---
0xa1 JUMPDEST
0xa2 PUSH1 0x4
0xa4 SSTORE
0xa5 PUSH1 0x5
0xa7 SLOAD
0xa8 PUSH2 0xb7
0xab SWAP1
0xac DUP3
0xad PUSH4 0xffffffff
0xb2 PUSH2 0x27f
0xb5 AND
0xb6 JUMP
---
0xa1: JUMPDEST 
0xa2: V42 = 0x4
0xa4: S[0x4] = S0
0xa5: V43 = 0x5
0xa7: V44 = S[0x5]
0xa8: V45 = 0xb7
0xad: V46 = 0xffffffff
0xb2: V47 = 0x27f
0xb5: V48 = AND 0x27f 0xffffffff
0xb6: JUMP 0x27f
---
Entry stack: [V10, V37, S0]
Stack pops: 2
Stack additions: [S1, 0xb7, V44, S1]
Exit stack: [V10, V37, 0xb7, V44, V37]

================================

Block 0xb7
[0xb7:0xcc]
---
Predecessors: [0x292]
Successors: [0x27f]
---
0xb7 JUMPDEST
0xb8 PUSH1 0x5
0xba SSTORE
0xbb PUSH1 0x3
0xbd SLOAD
0xbe PUSH2 0xcd
0xc1 SWAP1
0xc2 DUP3
0xc3 PUSH4 0xffffffff
0xc8 PUSH2 0x27f
0xcb AND
0xcc JUMP
---
0xb7: JUMPDEST 
0xb8: V49 = 0x5
0xba: S[0x5] = S0
0xbb: V50 = 0x3
0xbd: V51 = S[0x3]
0xbe: V52 = 0xcd
0xc3: V53 = 0xffffffff
0xc8: V54 = 0x27f
0xcb: V55 = AND 0x27f 0xffffffff
0xcc: JUMP 0x27f
---
Entry stack: [V10, V37, S0]
Stack pops: 2
Stack additions: [S1, 0xcd, V51, S1]
Exit stack: [V10, V37, 0xcd, V51, V37]

================================

Block 0xcd
[0xcd:0x143]
---
Predecessors: [0x292]
Successors: [0x144, 0x148]
---
0xcd JUMPDEST
0xce PUSH1 0x3
0xd0 SSTORE
0xd1 PUSH1 0x2
0xd3 SLOAD
0xd4 PUSH1 0x1
0xd6 PUSH1 0xa0
0xd8 PUSH1 0x2
0xda EXP
0xdb SUB
0xdc AND
0xdd PUSH4 0x40c10f19
0xe2 CALLER
0xe3 DUP4
0xe4 PUSH1 0x0
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 PUSH1 0x20
0xeb ADD
0xec MSTORE
0xed PUSH1 0x40
0xef MLOAD
0xf0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x10e PUSH4 0xffffffff
0x113 DUP6
0x114 AND
0x115 MUL
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x1
0x11a PUSH1 0xa0
0x11c PUSH1 0x2
0x11e EXP
0x11f SUB
0x120 SWAP1
0x121 SWAP3
0x122 AND
0x123 PUSH1 0x4
0x125 DUP4
0x126 ADD
0x127 MSTORE
0x128 PUSH1 0x24
0x12a DUP3
0x12b ADD
0x12c MSTORE
0x12d PUSH1 0x44
0x12f ADD
0x130 PUSH1 0x20
0x132 PUSH1 0x40
0x134 MLOAD
0x135 DUP1
0x136 DUP4
0x137 SUB
0x138 DUP2
0x139 PUSH1 0x0
0x13b DUP8
0x13c DUP1
0x13d EXTCODESIZE
0x13e ISZERO
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0xcd: JUMPDEST 
0xce: V56 = 0x3
0xd0: S[0x3] = S0
0xd1: V57 = 0x2
0xd3: V58 = S[0x2]
0xd4: V59 = 0x1
0xd6: V60 = 0xa0
0xd8: V61 = 0x2
0xda: V62 = EXP 0x2 0xa0
0xdb: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xdd: V65 = 0x40c10f19
0xe2: V66 = CALLER
0xe4: V67 = 0x0
0xe6: V68 = 0x40
0xe8: V69 = M[0x40]
0xe9: V70 = 0x20
0xeb: V71 = ADD 0x20 V69
0xec: M[V71] = 0x0
0xed: V72 = 0x40
0xef: V73 = M[0x40]
0xf0: V74 = 0x100000000000000000000000000000000000000000000000000000000
0x10e: V75 = 0xffffffff
0x114: V76 = AND 0x40c10f19 0xffffffff
0x115: V77 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x117: M[V73] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x118: V78 = 0x1
0x11a: V79 = 0xa0
0x11c: V80 = 0x2
0x11e: V81 = EXP 0x2 0xa0
0x11f: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0x122: V83 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x123: V84 = 0x4
0x126: V85 = ADD V73 0x4
0x127: M[V85] = V83
0x128: V86 = 0x24
0x12b: V87 = ADD V73 0x24
0x12c: M[V87] = V37
0x12d: V88 = 0x44
0x12f: V89 = ADD 0x44 V73
0x130: V90 = 0x20
0x132: V91 = 0x40
0x134: V92 = M[0x40]
0x137: V93 = SUB V89 V92
0x139: V94 = 0x0
0x13d: V95 = EXTCODESIZE V64
0x13e: V96 = ISZERO V95
0x13f: V97 = ISZERO V96
0x140: V98 = 0x148
0x143: JUMPI 0x148 V97
---
Entry stack: [V10, V37, S0]
Stack pops: 2
Stack additions: [S1, V64, 0x40c10f19, V89, 0x20, V92, V93, V92, 0x0, V64]
Exit stack: [V10, V37, V64, 0x40c10f19, V89, 0x20, V92, V93, V92, 0x0, V64]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0xcd]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V99 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V10, V37, V64, 0x40c10f19, V89, 0x20, V92, V93, V92, 0x0, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V37, V64, 0x40c10f19, V89, 0x20, V92, V93, V92, 0x0, V64]

================================

Block 0x148
[0x148:0x154]
---
Predecessors: [0xcd]
Successors: [0x155, 0x159]
---
0x148 JUMPDEST
0x149 PUSH2 0x2c6
0x14c GAS
0x14d SUB
0x14e CALL
0x14f ISZERO
0x150 ISZERO
0x151 PUSH2 0x159
0x154 JUMPI
---
0x148: JUMPDEST 
0x149: V100 = 0x2c6
0x14c: V101 = GAS
0x14d: V102 = SUB V101 0x2c6
0x14e: V103 = CALL V102 V64 0x0 V92 V93 V92 0x20
0x14f: V104 = ISZERO V103
0x150: V105 = ISZERO V104
0x151: V106 = 0x159
0x154: JUMPI 0x159 V105
---
Entry stack: [V10, V37, V64, 0x40c10f19, V89, 0x20, V92, V93, V92, 0x0, V64]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V37, V64, 0x40c10f19, V89]

================================

Block 0x155
[0x155:0x158]
---
Predecessors: [0x148]
Successors: []
---
0x155 PUSH1 0x0
0x157 DUP1
0x158 REVERT
---
0x155: V107 = 0x0
0x158: REVERT 0x0 0x0
---
Entry stack: [V10, V37, V64, 0x40c10f19, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V37, V64, 0x40c10f19, V89]

================================

Block 0x159
[0x159:0x163]
---
Predecessors: [0x148]
Successors: [0x164]
---
0x159 JUMPDEST
0x15a POP
0x15b POP
0x15c POP
0x15d PUSH1 0x40
0x15f MLOAD
0x160 DUP1
0x161 MLOAD
0x162 POP
0x163 POP
---
0x159: JUMPDEST 
0x15d: V108 = 0x40
0x15f: V109 = M[0x40]
0x161: V110 = M[V109]
---
Entry stack: [V10, V37, V64, 0x40c10f19, V89]
Stack pops: 3
Stack additions: []
Exit stack: [V10, V37]

================================

Block 0x164
[0x164:0x166]
---
Predecessors: [0x159]
Successors: []
---
0x164 JUMPDEST
0x165 POP
0x166 STOP
---
0x164: JUMPDEST 
0x166: STOP 
---
Entry stack: [V10, V37]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x167
[0x167:0x16d]
---
Predecessors: [0xb]
Successors: [0x16e, 0x172]
---
0x167 JUMPDEST
0x168 CALLVALUE
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0x167: JUMPDEST 
0x168: V111 = CALLVALUE
0x169: V112 = ISZERO V111
0x16a: V113 = 0x172
0x16d: JUMPI 0x172 V112
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x167]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V114 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x172
[0x172:0x179]
---
Predecessors: [0x167]
Successors: [0x299]
---
0x172 JUMPDEST
0x173 PUSH2 0x17a
0x176 PUSH2 0x299
0x179 JUMP
---
0x172: JUMPDEST 
0x173: V115 = 0x17a
0x176: V116 = 0x299
0x179: JUMP 0x299
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17a]
Exit stack: [V10, 0x17a]

================================

Block 0x17a
[0x17a:0x18b]
---
Predecessors: [0x299, 0x29f, 0x3c5]
Successors: []
---
0x17a JUMPDEST
0x17b PUSH1 0x40
0x17d MLOAD
0x17e SWAP1
0x17f DUP2
0x180 MSTORE
0x181 PUSH1 0x20
0x183 ADD
0x184 PUSH1 0x40
0x186 MLOAD
0x187 DUP1
0x188 SWAP2
0x189 SUB
0x18a SWAP1
0x18b RETURN
---
0x17a: JUMPDEST 
0x17b: V117 = 0x40
0x17d: V118 = M[0x40]
0x180: M[V118] = S0
0x181: V119 = 0x20
0x183: V120 = ADD 0x20 V118
0x184: V121 = 0x40
0x186: V122 = M[0x40]
0x189: V123 = SUB V120 V122
0x18b: RETURN V122 V123
---
Entry stack: [V10, 0x17a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x17a]

================================

Block 0x18c
[0x18c:0x192]
---
Predecessors: [0x3e]
Successors: [0x193, 0x197]
---
0x18c JUMPDEST
0x18d CALLVALUE
0x18e ISZERO
0x18f PUSH2 0x197
0x192 JUMPI
---
0x18c: JUMPDEST 
0x18d: V124 = CALLVALUE
0x18e: V125 = ISZERO V124
0x18f: V126 = 0x197
0x192: JUMPI 0x197 V125
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x18c]
Successors: []
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
---
0x193: V127 = 0x0
0x196: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x197
[0x197:0x19e]
---
Predecessors: [0x18c]
Successors: [0x29f]
---
0x197 JUMPDEST
0x198 PUSH2 0x17a
0x19b PUSH2 0x29f
0x19e JUMP
---
0x197: JUMPDEST 
0x198: V128 = 0x17a
0x19b: V129 = 0x29f
0x19e: JUMP 0x29f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17a]
Exit stack: [V10, 0x17a]

================================

Block 0x19f
[0x19f:0x1b0]
---
Predecessors: []
Successors: []
---
0x19f JUMPDEST
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 SWAP1
0x1a4 DUP2
0x1a5 MSTORE
0x1a6 PUSH1 0x20
0x1a8 ADD
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac DUP1
0x1ad SWAP2
0x1ae SUB
0x1af SWAP1
0x1b0 RETURN
---
0x19f: JUMPDEST 
0x1a0: V130 = 0x40
0x1a2: V131 = M[0x40]
0x1a5: M[V131] = S0
0x1a6: V132 = 0x20
0x1a8: V133 = ADD 0x20 V131
0x1a9: V134 = 0x40
0x1ab: V135 = M[0x40]
0x1ae: V136 = SUB V133 V135
0x1b0: RETURN V135 V136
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b1
[0x1b1:0x1b7]
---
Predecessors: [0x49]
Successors: [0x1b8, 0x1bc]
---
0x1b1 JUMPDEST
0x1b2 CALLVALUE
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V137 = CALLVALUE
0x1b3: V138 = ISZERO V137
0x1b4: V139 = 0x1bc
0x1b7: JUMPI 0x1bc V138
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x1b1]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V140 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bc
[0x1bc:0x1c3]
---
Predecessors: [0x1b1]
Successors: [0x2a5]
---
0x1bc JUMPDEST
0x1bd PUSH2 0x1c4
0x1c0 PUSH2 0x2a5
0x1c3 JUMP
---
0x1bc: JUMPDEST 
0x1bd: V141 = 0x1c4
0x1c0: V142 = 0x2a5
0x1c3: JUMP 0x2a5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c4]
Exit stack: [V10, 0x1c4]

================================

Block 0x1c4
[0x1c4:0x1c5]
---
Predecessors: [0x2f8, 0x363, 0x3b4]
Successors: []
---
0x1c4 JUMPDEST
0x1c5 STOP
---
0x1c4: JUMPDEST 
0x1c5: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c6
[0x1c6:0x1cc]
---
Predecessors: [0x54]
Successors: [0x1cd, 0x1d1]
---
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V143 = CALLVALUE
0x1c8: V144 = ISZERO V143
0x1c9: V145 = 0x1d1
0x1cc: JUMPI 0x1d1 V144
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x1c6]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V146 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d1
[0x1d1:0x1d8]
---
Predecessors: [0x1c6]
Successors: [0x2fa]
---
0x1d1 JUMPDEST
0x1d2 PUSH2 0x1d9
0x1d5 PUSH2 0x2fa
0x1d8 JUMP
---
0x1d1: JUMPDEST 
0x1d2: V147 = 0x1d9
0x1d5: V148 = 0x2fa
0x1d8: JUMP 0x2fa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9]
Exit stack: [V10, 0x1d9]

================================

Block 0x1d9
[0x1d9:0x1f4]
---
Predecessors: [0x2fa, 0x3b6]
Successors: []
---
0x1d9 JUMPDEST
0x1da PUSH1 0x40
0x1dc MLOAD
0x1dd PUSH1 0x1
0x1df PUSH1 0xa0
0x1e1 PUSH1 0x2
0x1e3 EXP
0x1e4 SUB
0x1e5 SWAP1
0x1e6 SWAP2
0x1e7 AND
0x1e8 DUP2
0x1e9 MSTORE
0x1ea PUSH1 0x20
0x1ec ADD
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 DUP1
0x1f1 SWAP2
0x1f2 SUB
0x1f3 SWAP1
0x1f4 RETURN
---
0x1d9: JUMPDEST 
0x1da: V149 = 0x40
0x1dc: V150 = M[0x40]
0x1dd: V151 = 0x1
0x1df: V152 = 0xa0
0x1e1: V153 = 0x2
0x1e3: V154 = EXP 0x2 0xa0
0x1e4: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e7: V156 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: M[V150] = V156
0x1ea: V157 = 0x20
0x1ec: V158 = ADD 0x20 V150
0x1ed: V159 = 0x40
0x1ef: V160 = M[0x40]
0x1f2: V161 = SUB V158 V160
0x1f4: RETURN V160 V161
---
Entry stack: [V10, 0x1d9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d9]

================================

Block 0x1f5
[0x1f5:0x1fb]
---
Predecessors: [0x5f]
Successors: [0x1fc, 0x200]
---
0x1f5 JUMPDEST
0x1f6 CALLVALUE
0x1f7 ISZERO
0x1f8 PUSH2 0x200
0x1fb JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V162 = CALLVALUE
0x1f7: V163 = ISZERO V162
0x1f8: V164 = 0x200
0x1fb: JUMPI 0x200 V163
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fc
[0x1fc:0x1ff]
---
Predecessors: [0x1f5]
Successors: []
---
0x1fc PUSH1 0x0
0x1fe DUP1
0x1ff REVERT
---
0x1fc: V165 = 0x0
0x1ff: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x200
[0x200:0x213]
---
Predecessors: [0x1f5]
Successors: [0x309]
---
0x200 JUMPDEST
0x201 PUSH2 0x1c4
0x204 PUSH1 0x1
0x206 PUSH1 0xa0
0x208 PUSH1 0x2
0x20a EXP
0x20b SUB
0x20c PUSH1 0x4
0x20e CALLDATALOAD
0x20f AND
0x210 PUSH2 0x309
0x213 JUMP
---
0x200: JUMPDEST 
0x201: V166 = 0x1c4
0x204: V167 = 0x1
0x206: V168 = 0xa0
0x208: V169 = 0x2
0x20a: V170 = EXP 0x2 0xa0
0x20b: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20c: V172 = 0x4
0x20e: V173 = CALLDATALOAD 0x4
0x20f: V174 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x210: V175 = 0x309
0x213: JUMP 0x309
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c4, V174]
Exit stack: [V10, 0x1c4, V174]

================================

Block 0x214
[0x214:0x215]
---
Predecessors: []
Successors: []
---
0x214 JUMPDEST
0x215 STOP
---
0x214: JUMPDEST 
0x215: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x216
[0x216:0x21c]
---
Predecessors: [0x6a]
Successors: [0x21d, 0x221]
---
0x216 JUMPDEST
0x217 CALLVALUE
0x218 ISZERO
0x219 PUSH2 0x221
0x21c JUMPI
---
0x216: JUMPDEST 
0x217: V176 = CALLVALUE
0x218: V177 = ISZERO V176
0x219: V178 = 0x221
0x21c: JUMPI 0x221 V177
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21d
[0x21d:0x220]
---
Predecessors: [0x216]
Successors: []
---
0x21d PUSH1 0x0
0x21f DUP1
0x220 REVERT
---
0x21d: V179 = 0x0
0x220: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x221
[0x221:0x228]
---
Predecessors: [0x216]
Successors: [0x366]
---
0x221 JUMPDEST
0x222 PUSH2 0x1c4
0x225 PUSH2 0x366
0x228 JUMP
---
0x221: JUMPDEST 
0x222: V180 = 0x1c4
0x225: V181 = 0x366
0x228: JUMP 0x366
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c4]
Exit stack: [V10, 0x1c4]

================================

Block 0x229
[0x229:0x22a]
---
Predecessors: []
Successors: []
---
0x229 JUMPDEST
0x22a STOP
---
0x229: JUMPDEST 
0x22a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x22b
[0x22b:0x231]
---
Predecessors: [0x75]
Successors: [0x232, 0x236]
---
0x22b JUMPDEST
0x22c CALLVALUE
0x22d ISZERO
0x22e PUSH2 0x236
0x231 JUMPI
---
0x22b: JUMPDEST 
0x22c: V182 = CALLVALUE
0x22d: V183 = ISZERO V182
0x22e: V184 = 0x236
0x231: JUMPI 0x236 V183
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x22b]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V185 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x236
[0x236:0x23d]
---
Predecessors: [0x22b]
Successors: [0x3b6]
---
0x236 JUMPDEST
0x237 PUSH2 0x1d9
0x23a PUSH2 0x3b6
0x23d JUMP
---
0x236: JUMPDEST 
0x237: V186 = 0x1d9
0x23a: V187 = 0x3b6
0x23d: JUMP 0x3b6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d9]
Exit stack: [V10, 0x1d9]

================================

Block 0x23e
[0x23e:0x259]
---
Predecessors: []
Successors: []
---
0x23e JUMPDEST
0x23f PUSH1 0x40
0x241 MLOAD
0x242 PUSH1 0x1
0x244 PUSH1 0xa0
0x246 PUSH1 0x2
0x248 EXP
0x249 SUB
0x24a SWAP1
0x24b SWAP2
0x24c AND
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x20
0x251 ADD
0x252 PUSH1 0x40
0x254 MLOAD
0x255 DUP1
0x256 SWAP2
0x257 SUB
0x258 SWAP1
0x259 RETURN
---
0x23e: JUMPDEST 
0x23f: V188 = 0x40
0x241: V189 = M[0x40]
0x242: V190 = 0x1
0x244: V191 = 0xa0
0x246: V192 = 0x2
0x248: V193 = EXP 0x2 0xa0
0x249: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24c: V195 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x24e: M[V189] = V195
0x24f: V196 = 0x20
0x251: V197 = ADD 0x20 V189
0x252: V198 = 0x40
0x254: V199 = M[0x40]
0x257: V200 = SUB V197 V199
0x259: RETURN V199 V200
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x25a
[0x25a:0x260]
---
Predecessors: [0x80]
Successors: [0x261, 0x265]
---
0x25a JUMPDEST
0x25b CALLVALUE
0x25c ISZERO
0x25d PUSH2 0x265
0x260 JUMPI
---
0x25a: JUMPDEST 
0x25b: V201 = CALLVALUE
0x25c: V202 = ISZERO V201
0x25d: V203 = 0x265
0x260: JUMPI 0x265 V202
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x261
[0x261:0x264]
---
Predecessors: [0x25a]
Successors: []
---
0x261 PUSH1 0x0
0x263 DUP1
0x264 REVERT
---
0x261: V204 = 0x0
0x264: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x265
[0x265:0x26c]
---
Predecessors: [0x25a]
Successors: [0x3c5]
---
0x265 JUMPDEST
0x266 PUSH2 0x17a
0x269 PUSH2 0x3c5
0x26c JUMP
---
0x265: JUMPDEST 
0x266: V205 = 0x17a
0x269: V206 = 0x3c5
0x26c: JUMP 0x3c5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17a]
Exit stack: [V10, 0x17a]

================================

Block 0x26d
[0x26d:0x27e]
---
Predecessors: []
Successors: []
---
0x26d JUMPDEST
0x26e PUSH1 0x40
0x270 MLOAD
0x271 SWAP1
0x272 DUP2
0x273 MSTORE
0x274 PUSH1 0x20
0x276 ADD
0x277 PUSH1 0x40
0x279 MLOAD
0x27a DUP1
0x27b SWAP2
0x27c SUB
0x27d SWAP1
0x27e RETURN
---
0x26d: JUMPDEST 
0x26e: V207 = 0x40
0x270: V208 = M[0x40]
0x273: M[V208] = S0
0x274: V209 = 0x20
0x276: V210 = ADD 0x20 V208
0x277: V211 = 0x40
0x279: V212 = M[0x40]
0x27c: V213 = SUB V210 V212
0x27e: RETURN V212 V213
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x27f
[0x27f:0x28c]
---
Predecessors: [0x8c, 0xa1, 0xb7]
Successors: [0x28d, 0x28e]
---
0x27f JUMPDEST
0x280 PUSH1 0x0
0x282 DUP3
0x283 DUP3
0x284 ADD
0x285 DUP4
0x286 DUP2
0x287 LT
0x288 ISZERO
0x289 PUSH2 0x28e
0x28c JUMPI
---
0x27f: JUMPDEST 
0x280: V214 = 0x0
0x284: V215 = ADD V37 S1
0x287: V216 = LT V215 S1
0x288: V217 = ISZERO V216
0x289: V218 = 0x28e
0x28c: JUMPI 0x28e V217
---
Entry stack: [V10, V37, {0xa1, 0xb7, 0xcd}, S1, V37]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V215]
Exit stack: [V10, V37, {0xa1, 0xb7, 0xcd}, S1, V37, 0x0, V215]

================================

Block 0x28d
[0x28d:0x28d]
---
Predecessors: [0x27f]
Successors: []
---
0x28d INVALID
---
0x28d: INVALID 
---
Entry stack: [V10, V37, {0xa1, 0xb7, 0xcd}, S3, V37, 0x0, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V37, {0xa1, 0xb7, 0xcd}, S3, V37, 0x0, V215]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x27f]
Successors: [0x292]
---
0x28e JUMPDEST
0x28f DUP1
0x290 SWAP2
0x291 POP
---
0x28e: JUMPDEST 
---
Entry stack: [V10, V37, {0xa1, 0xb7, 0xcd}, S3, V37, 0x0, V215]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, V37, {0xa1, 0xb7, 0xcd}, S3, V37, V215, V215]

================================

Block 0x292
[0x292:0x298]
---
Predecessors: [0x28e]
Successors: [0xa1, 0xb7, 0xcd]
---
0x292 JUMPDEST
0x293 POP
0x294 SWAP3
0x295 SWAP2
0x296 POP
0x297 POP
0x298 JUMP
---
0x292: JUMPDEST 
0x298: JUMP {0xa1, 0xb7, 0xcd}
---
Entry stack: [V10, V37, {0xa1, 0xb7, 0xcd}, S3, V37, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, V37, S1]

================================

Block 0x299
[0x299:0x29e]
---
Predecessors: [0x172]
Successors: [0x17a]
---
0x299 JUMPDEST
0x29a PUSH1 0x3
0x29c SLOAD
0x29d DUP2
0x29e JUMP
---
0x299: JUMPDEST 
0x29a: V219 = 0x3
0x29c: V220 = S[0x3]
0x29e: JUMP 0x17a
---
Entry stack: [V10, 0x17a]
Stack pops: 1
Stack additions: [S0, V220]
Exit stack: [V10, 0x17a, V220]

================================

Block 0x29f
[0x29f:0x2a4]
---
Predecessors: [0x197]
Successors: [0x17a]
---
0x29f JUMPDEST
0x2a0 PUSH1 0x4
0x2a2 SLOAD
0x2a3 DUP2
0x2a4 JUMP
---
0x29f: JUMPDEST 
0x2a0: V221 = 0x4
0x2a2: V222 = S[0x4]
0x2a4: JUMP 0x17a
---
Entry stack: [V10, 0x17a]
Stack pops: 1
Stack additions: [S0, V222]
Exit stack: [V10, 0x17a, V222]

================================

Block 0x2a5
[0x2a5:0x2bb]
---
Predecessors: [0x1bc]
Successors: [0x2bc, 0x2c0]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x0
0x2a8 SLOAD
0x2a9 CALLER
0x2aa PUSH1 0x1
0x2ac PUSH1 0xa0
0x2ae PUSH1 0x2
0x2b0 EXP
0x2b1 SUB
0x2b2 SWAP1
0x2b3 DUP2
0x2b4 AND
0x2b5 SWAP2
0x2b6 AND
0x2b7 EQ
0x2b8 PUSH2 0x2c0
0x2bb JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V223 = 0x0
0x2a8: V224 = S[0x0]
0x2a9: V225 = CALLER
0x2aa: V226 = 0x1
0x2ac: V227 = 0xa0
0x2ae: V228 = 0x2
0x2b0: V229 = EXP 0x2 0xa0
0x2b1: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b4: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x2b6: V232 = AND V224 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V233 = EQ V232 V231
0x2b8: V234 = 0x2c0
0x2bb: JUMPI 0x2c0 V233
---
Entry stack: [V10, 0x1c4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4]

================================

Block 0x2bc
[0x2bc:0x2bf]
---
Predecessors: [0x2a5]
Successors: []
---
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf REVERT
---
0x2bc: V235 = 0x0
0x2bf: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1c4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4]

================================

Block 0x2c0
[0x2c0:0x2ec]
---
Predecessors: [0x2a5]
Successors: [0x2ed, 0x2f1]
---
0x2c0 JUMPDEST
0x2c1 CALLER
0x2c2 PUSH1 0x1
0x2c4 PUSH1 0xa0
0x2c6 PUSH1 0x2
0x2c8 EXP
0x2c9 SUB
0x2ca AND
0x2cb PUSH3 0x2dc6c0
0x2cf PUSH1 0x5
0x2d1 SLOAD
0x2d2 PUSH1 0x40
0x2d4 MLOAD
0x2d5 PUSH1 0x0
0x2d7 PUSH1 0x40
0x2d9 MLOAD
0x2da DUP1
0x2db DUP4
0x2dc SUB
0x2dd DUP2
0x2de DUP6
0x2df DUP9
0x2e0 DUP9
0x2e1 CALL
0x2e2 SWAP4
0x2e3 POP
0x2e4 POP
0x2e5 POP
0x2e6 POP
0x2e7 ISZERO
0x2e8 ISZERO
0x2e9 PUSH2 0x2f1
0x2ec JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V236 = CALLER
0x2c2: V237 = 0x1
0x2c4: V238 = 0xa0
0x2c6: V239 = 0x2
0x2c8: V240 = EXP 0x2 0xa0
0x2c9: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ca: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x2cb: V243 = 0x2dc6c0
0x2cf: V244 = 0x5
0x2d1: V245 = S[0x5]
0x2d2: V246 = 0x40
0x2d4: V247 = M[0x40]
0x2d5: V248 = 0x0
0x2d7: V249 = 0x40
0x2d9: V250 = M[0x40]
0x2dc: V251 = SUB V247 V250
0x2e1: V252 = CALL 0x2dc6c0 V242 V245 V250 V251 V250 0x0
0x2e7: V253 = ISZERO V252
0x2e8: V254 = ISZERO V253
0x2e9: V255 = 0x2f1
0x2ec: JUMPI 0x2f1 V254
---
Entry stack: [V10, 0x1c4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4]

================================

Block 0x2ed
[0x2ed:0x2f0]
---
Predecessors: [0x2c0]
Successors: []
---
0x2ed PUSH1 0x0
0x2ef DUP1
0x2f0 REVERT
---
0x2ed: V256 = 0x0
0x2f0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1c4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4]

================================

Block 0x2f1
[0x2f1:0x2f6]
---
Predecessors: [0x2c0]
Successors: [0x2f7]
---
0x2f1 JUMPDEST
0x2f2 PUSH1 0x0
0x2f4 PUSH1 0x5
0x2f6 SSTORE
---
0x2f1: JUMPDEST 
0x2f2: V257 = 0x0
0x2f4: V258 = 0x5
0x2f6: S[0x5] = 0x0
---
Entry stack: [V10, 0x1c4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4]

================================

Block 0x2f7
[0x2f7:0x2f7]
---
Predecessors: [0x2f1]
Successors: [0x2f8]
---
0x2f7 JUMPDEST
---
0x2f7: JUMPDEST 
---
Entry stack: [V10, 0x1c4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4]

================================

Block 0x2f8
[0x2f8:0x2f9]
---
Predecessors: [0x2f7]
Successors: [0x1c4]
---
0x2f8 JUMPDEST
0x2f9 JUMP
---
0x2f8: JUMPDEST 
0x2f9: JUMP 0x1c4
---
Entry stack: [V10, 0x1c4]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fa
[0x2fa:0x308]
---
Predecessors: [0x1d1]
Successors: [0x1d9]
---
0x2fa JUMPDEST
0x2fb PUSH1 0x0
0x2fd SLOAD
0x2fe PUSH1 0x1
0x300 PUSH1 0xa0
0x302 PUSH1 0x2
0x304 EXP
0x305 SUB
0x306 AND
0x307 DUP2
0x308 JUMP
---
0x2fa: JUMPDEST 
0x2fb: V259 = 0x0
0x2fd: V260 = S[0x0]
0x2fe: V261 = 0x1
0x300: V262 = 0xa0
0x302: V263 = 0x2
0x304: V264 = EXP 0x2 0xa0
0x305: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x308: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9]
Stack pops: 1
Stack additions: [S0, V266]
Exit stack: [V10, 0x1d9, V266]

================================

Block 0x309
[0x309:0x31f]
---
Predecessors: [0x200]
Successors: [0x320, 0x324]
---
0x309 JUMPDEST
0x30a PUSH1 0x0
0x30c SLOAD
0x30d CALLER
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 SWAP1
0x317 DUP2
0x318 AND
0x319 SWAP2
0x31a AND
0x31b EQ
0x31c PUSH2 0x324
0x31f JUMPI
---
0x309: JUMPDEST 
0x30a: V267 = 0x0
0x30c: V268 = S[0x0]
0x30d: V269 = CALLER
0x30e: V270 = 0x1
0x310: V271 = 0xa0
0x312: V272 = 0x2
0x314: V273 = EXP 0x2 0xa0
0x315: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x318: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x31a: V276 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V277 = EQ V276 V275
0x31c: V278 = 0x324
0x31f: JUMPI 0x324 V277
---
Entry stack: [V10, 0x1c4, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4, V174]

================================

Block 0x320
[0x320:0x323]
---
Predecessors: [0x309]
Successors: []
---
0x320 PUSH1 0x0
0x322 DUP1
0x323 REVERT
---
0x320: V279 = 0x0
0x323: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1c4, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4, V174]

================================

Block 0x324
[0x324:0x334]
---
Predecessors: [0x309]
Successors: [0x335, 0x339]
---
0x324 JUMPDEST
0x325 PUSH1 0x1
0x327 PUSH1 0xa0
0x329 PUSH1 0x2
0x32b EXP
0x32c SUB
0x32d DUP2
0x32e AND
0x32f ISZERO
0x330 ISZERO
0x331 PUSH2 0x339
0x334 JUMPI
---
0x324: JUMPDEST 
0x325: V280 = 0x1
0x327: V281 = 0xa0
0x329: V282 = 0x2
0x32b: V283 = EXP 0x2 0xa0
0x32c: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32e: V285 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x32f: V286 = ISZERO V285
0x330: V287 = ISZERO V286
0x331: V288 = 0x339
0x334: JUMPI 0x339 V287
---
Entry stack: [V10, 0x1c4, V174]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1c4, V174]

================================

Block 0x335
[0x335:0x338]
---
Predecessors: [0x324]
Successors: []
---
0x335 PUSH1 0x0
0x337 DUP1
0x338 REVERT
---
0x335: V289 = 0x0
0x338: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1c4, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4, V174]

================================

Block 0x339
[0x339:0x361]
---
Predecessors: [0x324]
Successors: [0x362]
---
0x339 JUMPDEST
0x33a PUSH1 0x1
0x33c DUP1
0x33d SLOAD
0x33e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x353 NOT
0x354 AND
0x355 PUSH1 0x1
0x357 PUSH1 0xa0
0x359 PUSH1 0x2
0x35b EXP
0x35c SUB
0x35d DUP4
0x35e AND
0x35f OR
0x360 SWAP1
0x361 SSTORE
---
0x339: JUMPDEST 
0x33a: V290 = 0x1
0x33d: V291 = S[0x1]
0x33e: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x353: V293 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x354: V294 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V291
0x355: V295 = 0x1
0x357: V296 = 0xa0
0x359: V297 = 0x2
0x35b: V298 = EXP 0x2 0xa0
0x35c: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35e: V300 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x35f: V301 = OR V300 V294
0x361: S[0x1] = V301
---
Entry stack: [V10, 0x1c4, V174]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1c4, V174]

================================

Block 0x362
[0x362:0x362]
---
Predecessors: [0x339]
Successors: [0x363]
---
0x362 JUMPDEST
---
0x362: JUMPDEST 
---
Entry stack: [V10, 0x1c4, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4, V174]

================================

Block 0x363
[0x363:0x365]
---
Predecessors: [0x362]
Successors: [0x1c4]
---
0x363 JUMPDEST
0x364 POP
0x365 JUMP
---
0x363: JUMPDEST 
0x365: JUMP 0x1c4
---
Entry stack: [V10, 0x1c4, V174]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x366
[0x366:0x37c]
---
Predecessors: [0x221]
Successors: [0x37d, 0x381]
---
0x366 JUMPDEST
0x367 PUSH1 0x1
0x369 SLOAD
0x36a CALLER
0x36b PUSH1 0x1
0x36d PUSH1 0xa0
0x36f PUSH1 0x2
0x371 EXP
0x372 SUB
0x373 SWAP1
0x374 DUP2
0x375 AND
0x376 SWAP2
0x377 AND
0x378 EQ
0x379 PUSH2 0x381
0x37c JUMPI
---
0x366: JUMPDEST 
0x367: V302 = 0x1
0x369: V303 = S[0x1]
0x36a: V304 = CALLER
0x36b: V305 = 0x1
0x36d: V306 = 0xa0
0x36f: V307 = 0x2
0x371: V308 = EXP 0x2 0xa0
0x372: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x375: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x377: V311 = AND V303 0xffffffffffffffffffffffffffffffffffffffff
0x378: V312 = EQ V311 V310
0x379: V313 = 0x381
0x37c: JUMPI 0x381 V312
---
Entry stack: [V10, 0x1c4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4]

================================

Block 0x37d
[0x37d:0x380]
---
Predecessors: [0x366]
Successors: []
---
0x37d PUSH1 0x0
0x37f DUP1
0x380 REVERT
---
0x37d: V314 = 0x0
0x380: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1c4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4]

================================

Block 0x381
[0x381:0x3b3]
---
Predecessors: [0x366]
Successors: [0x3b4]
---
0x381 JUMPDEST
0x382 PUSH1 0x1
0x384 DUP1
0x385 SLOAD
0x386 PUSH1 0x0
0x388 DUP1
0x389 SLOAD
0x38a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39f NOT
0x3a0 SWAP1
0x3a1 DUP2
0x3a2 AND
0x3a3 PUSH1 0x1
0x3a5 PUSH1 0xa0
0x3a7 PUSH1 0x2
0x3a9 EXP
0x3aa SUB
0x3ab DUP5
0x3ac AND
0x3ad OR
0x3ae SWAP1
0x3af SWAP2
0x3b0 SSTORE
0x3b1 AND
0x3b2 SWAP1
0x3b3 SSTORE
---
0x381: JUMPDEST 
0x382: V315 = 0x1
0x385: V316 = S[0x1]
0x386: V317 = 0x0
0x389: V318 = S[0x0]
0x38a: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V320 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V321 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V318
0x3a3: V322 = 0x1
0x3a5: V323 = 0xa0
0x3a7: V324 = 0x2
0x3a9: V325 = EXP 0x2 0xa0
0x3aa: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ac: V327 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0x3ad: V328 = OR V327 V321
0x3b0: S[0x0] = V328
0x3b1: V329 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V316
0x3b3: S[0x1] = V329
---
Entry stack: [V10, 0x1c4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c4]

================================

Block 0x3b4
[0x3b4:0x3b5]
---
Predecessors: [0x381]
Successors: [0x1c4]
---
0x3b4 JUMPDEST
0x3b5 JUMP
---
0x3b4: JUMPDEST 
0x3b5: JUMP 0x1c4
---
Entry stack: [V10, 0x1c4]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b6
[0x3b6:0x3c4]
---
Predecessors: [0x236]
Successors: [0x1d9]
---
0x3b6 JUMPDEST
0x3b7 PUSH1 0x1
0x3b9 SLOAD
0x3ba PUSH1 0x1
0x3bc PUSH1 0xa0
0x3be PUSH1 0x2
0x3c0 EXP
0x3c1 SUB
0x3c2 AND
0x3c3 DUP2
0x3c4 JUMP
---
0x3b6: JUMPDEST 
0x3b7: V330 = 0x1
0x3b9: V331 = S[0x1]
0x3ba: V332 = 0x1
0x3bc: V333 = 0xa0
0x3be: V334 = 0x2
0x3c0: V335 = EXP 0x2 0xa0
0x3c1: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c2: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x3c4: JUMP 0x1d9
---
Entry stack: [V10, 0x1d9]
Stack pops: 1
Stack additions: [S0, V337]
Exit stack: [V10, 0x1d9, V337]

================================

Block 0x3c5
[0x3c5:0x3ca]
---
Predecessors: [0x265]
Successors: [0x17a]
---
0x3c5 JUMPDEST
0x3c6 PUSH1 0x5
0x3c8 SLOAD
0x3c9 DUP2
0x3ca JUMP
---
0x3c5: JUMPDEST 
0x3c6: V338 = 0x5
0x3c8: V339 = S[0x5]
0x3ca: JUMP 0x17a
---
Entry stack: [V10, 0x17a]
Stack pops: 1
Stack additions: [S0, V339]
Exit stack: [V10, 0x17a, V339]

================================

Block 0x3cb
[0x3cb:0x3f6]
---
Predecessors: []
Successors: []
---
0x3cb STOP
0x3cc LOG1
0x3cd PUSH6 0x627a7a723058
0x3d4 SHA3
0x3d5 DUP11
0x3d6 MISSING 0xea
0x3d7 DUP16
0x3d8 MISSING 0xd6
0x3d9 MISSING 0x4c
0x3da MISSING 0xcc
0x3db MISSING 0xe8
0x3dc MISSING 0xa7
0x3dd MISSING 0xf6
0x3de PUSH1 0xd9
0x3e0 MISSING 0x2f
0x3e1 PUSH14 0x723a5265582f01104e0f89430757
0x3f0 MISSING 0x47
0x3f1 ISZERO
0x3f2 MISSING 0xe6
0x3f3 DUP11
0x3f4 MISSING 0x24
0x3f5 STOP
0x3f6 MISSING 0x29
---
0x3cb: STOP 
0x3cc: LOG S0 S1 S2
0x3cd: V340 = 0x627a7a723058
0x3d4: V341 = SHA3 0x627a7a723058 S3
0x3d6: MISSING 0xea
0x3d8: MISSING 0xd6
0x3d9: MISSING 0x4c
0x3da: MISSING 0xcc
0x3db: MISSING 0xe8
0x3dc: MISSING 0xa7
0x3dd: MISSING 0xf6
0x3de: V342 = 0xd9
0x3e0: MISSING 0x2f
0x3e1: V343 = 0x723a5265582f01104e0f89430757
0x3f0: MISSING 0x47
0x3f1: V344 = ISZERO S0
0x3f2: MISSING 0xe6
0x3f4: MISSING 0x24
0x3f5: STOP 
0x3f6: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S13, V341, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0xd9, 0x723a5265582f01104e0f89430757, V344, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10]
Exit stack: []

================================

Function 0:
Public function signature: 0x18160ddd
Entry block: 0x167
Exit block: 0x17a
Body: 0x167, 0x16e, 0x172, 0x17a, 0x299

Function 1:
Public function signature: 0x1a39d8ef
Entry block: 0x18c
Exit block: 0x17a
Body: 0x17a, 0x18c, 0x193, 0x197, 0x29f

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x1b1
Exit block: 0x1c4
Body: 0x1b1, 0x1b8, 0x1bc, 0x1c4, 0x2a5, 0x2bc, 0x2c0, 0x2ed, 0x2f1, 0x2f7, 0x2f8

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x1c6
Exit block: 0x1d9
Body: 0x1c6, 0x1cd, 0x1d1, 0x1d9, 0x2fa

Function 4:
Public function signature: 0xa6f9dae1
Entry block: 0x1f5
Exit block: 0x1c4
Body: 0x1c4, 0x1f5, 0x1fc, 0x200, 0x309, 0x320, 0x324, 0x335, 0x339, 0x362, 0x363

Function 5:
Public function signature: 0xbd9b6d86
Entry block: 0x216
Exit block: 0x1c4
Body: 0x1c4, 0x216, 0x21d, 0x221, 0x366, 0x37d, 0x381, 0x3b4

Function 6:
Public function signature: 0xd4ee1d90
Entry block: 0x22b
Exit block: 0x1d9
Body: 0x1d9, 0x22b, 0x232, 0x236, 0x3b6

Function 7:
Public function signature: 0xf441b1c8
Entry block: 0x25a
Exit block: 0x17a
Body: 0x17a, 0x25a, 0x261, 0x265, 0x3c5

Function 8:
Public fallback function
Entry block: 0x8b
Exit block: 0x144
Body: 0x8b, 0x8c, 0xa1, 0x144

Function 9:
Private function
Entry block: 0x27f
Exit block: 0x292
Body: 0x27f, 0x28e, 0x292

