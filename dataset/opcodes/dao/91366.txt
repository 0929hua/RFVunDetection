Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x9a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x27e235e3
0x3c EQ
0x3d PUSH2 0x9a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x27e235e3
0x3c: V13 = EQ 0x27e235e3 V11
0x3d: V14 = 0x9a
0x40: JUMPI 0x9a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xf1]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0xf1
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0xf1
0x4b: JUMPI 0xf1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x99]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d CALLVALUE
0x4e PUSH1 0x0
0x50 DUP1
0x51 CALLER
0x52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67 AND
0x68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d AND
0x7e DUP2
0x7f MSTORE
0x80 PUSH1 0x20
0x82 ADD
0x83 SWAP1
0x84 DUP2
0x85 MSTORE
0x86 PUSH1 0x20
0x88 ADD
0x89 PUSH1 0x0
0x8b SHA3
0x8c PUSH1 0x0
0x8e DUP3
0x8f DUP3
0x90 SLOAD
0x91 ADD
0x92 SWAP3
0x93 POP
0x94 POP
0x95 DUP2
0x96 SWAP1
0x97 SSTORE
0x98 POP
0x99 STOP
---
0x4c: JUMPDEST 
0x4d: V18 = CALLVALUE
0x4e: V19 = 0x0
0x51: V20 = CALLER
0x52: V21 = 0xffffffffffffffffffffffffffffffffffffffff
0x67: V22 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0x68: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x7f: M[0x0] = V24
0x80: V25 = 0x20
0x82: V26 = ADD 0x20 0x0
0x85: M[0x20] = 0x0
0x86: V27 = 0x20
0x88: V28 = ADD 0x20 0x20
0x89: V29 = 0x0
0x8b: V30 = SHA3 0x0 0x40
0x8c: V31 = 0x0
0x90: V32 = S[V30]
0x91: V33 = ADD V32 V18
0x97: S[V30] = V33
0x99: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9a
[0x9a:0xa1]
---
Predecessors: [0xd]
Successors: [0xa2, 0xa6]
---
0x9a JUMPDEST
0x9b CALLVALUE
0x9c DUP1
0x9d ISZERO
0x9e PUSH2 0xa6
0xa1 JUMPI
---
0x9a: JUMPDEST 
0x9b: V34 = CALLVALUE
0x9d: V35 = ISZERO V34
0x9e: V36 = 0xa6
0xa1: JUMPI 0xa6 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V34]
Exit stack: [V11, V34]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x9a]
Successors: []
---
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 REVERT
---
0xa2: V37 = 0x0
0xa5: REVERT 0x0 0x0
---
Entry stack: [V11, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V34]

================================

Block 0xa6
[0xa6:0xda]
---
Predecessors: [0x9a]
Successors: [0x108]
---
0xa6 JUMPDEST
0xa7 POP
0xa8 PUSH2 0xdb
0xab PUSH1 0x4
0xad DUP1
0xae CALLDATASIZE
0xaf SUB
0xb0 DUP2
0xb1 ADD
0xb2 SWAP1
0xb3 DUP1
0xb4 DUP1
0xb5 CALLDATALOAD
0xb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb AND
0xcc SWAP1
0xcd PUSH1 0x20
0xcf ADD
0xd0 SWAP1
0xd1 SWAP3
0xd2 SWAP2
0xd3 SWAP1
0xd4 POP
0xd5 POP
0xd6 POP
0xd7 PUSH2 0x108
0xda JUMP
---
0xa6: JUMPDEST 
0xa8: V38 = 0xdb
0xab: V39 = 0x4
0xae: V40 = CALLDATASIZE
0xaf: V41 = SUB V40 0x4
0xb1: V42 = ADD 0x4 V41
0xb5: V43 = CALLDATALOAD 0x4
0xb6: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xcd: V46 = 0x20
0xcf: V47 = ADD 0x20 0x4
0xd7: V48 = 0x108
0xda: JUMP 0x108
---
Entry stack: [V11, V34]
Stack pops: 1
Stack additions: [0xdb, V45]
Exit stack: [V11, 0xdb, V45]

================================

Block 0xdb
[0xdb:0xf0]
---
Predecessors: [0x108]
Successors: []
---
0xdb JUMPDEST
0xdc PUSH1 0x40
0xde MLOAD
0xdf DUP1
0xe0 DUP3
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP2
0xe7 POP
0xe8 POP
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed SWAP2
0xee SUB
0xef SWAP1
0xf0 RETURN
---
0xdb: JUMPDEST 
0xdc: V49 = 0x40
0xde: V50 = M[0x40]
0xe2: M[V50] = V69
0xe3: V51 = 0x20
0xe5: V52 = ADD 0x20 V50
0xe9: V53 = 0x40
0xeb: V54 = M[0x40]
0xee: V55 = SUB V52 V54
0xf0: RETURN V54 V55
---
Entry stack: [V11, 0xdb, V69]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xdb]

================================

Block 0xf1
[0xf1:0xf8]
---
Predecessors: [0x41]
Successors: [0xf9, 0xfd]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 DUP1
0xf4 ISZERO
0xf5 PUSH2 0xfd
0xf8 JUMPI
---
0xf1: JUMPDEST 
0xf2: V56 = CALLVALUE
0xf4: V57 = ISZERO V56
0xf5: V58 = 0xfd
0xf8: JUMPI 0xfd V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V11, V56]

================================

Block 0xf9
[0xf9:0xfc]
---
Predecessors: [0xf1]
Successors: []
---
0xf9 PUSH1 0x0
0xfb DUP1
0xfc REVERT
---
0xf9: V59 = 0x0
0xfc: REVERT 0x0 0x0
---
Entry stack: [V11, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V56]

================================

Block 0xfd
[0xfd:0x105]
---
Predecessors: [0xf1]
Successors: [0x120]
---
0xfd JUMPDEST
0xfe POP
0xff PUSH2 0x106
0x102 PUSH2 0x120
0x105 JUMP
---
0xfd: JUMPDEST 
0xff: V60 = 0x106
0x102: V61 = 0x120
0x105: JUMP 0x120
---
Entry stack: [V11, V56]
Stack pops: 1
Stack additions: [0x106]
Exit stack: [V11, 0x106]

================================

Block 0x106
[0x106:0x107]
---
Predecessors: [0x120]
Successors: []
---
0x106 JUMPDEST
0x107 STOP
---
0x106: JUMPDEST 
0x107: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x108
[0x108:0x11f]
---
Predecessors: [0xa6]
Successors: [0xdb]
---
0x108 JUMPDEST
0x109 PUSH1 0x0
0x10b PUSH1 0x20
0x10d MSTORE
0x10e DUP1
0x10f PUSH1 0x0
0x111 MSTORE
0x112 PUSH1 0x40
0x114 PUSH1 0x0
0x116 SHA3
0x117 PUSH1 0x0
0x119 SWAP2
0x11a POP
0x11b SWAP1
0x11c POP
0x11d SLOAD
0x11e DUP2
0x11f JUMP
---
0x108: JUMPDEST 
0x109: V62 = 0x0
0x10b: V63 = 0x20
0x10d: M[0x20] = 0x0
0x10f: V64 = 0x0
0x111: M[0x0] = V45
0x112: V65 = 0x40
0x114: V66 = 0x0
0x116: V67 = SHA3 0x0 0x40
0x117: V68 = 0x0
0x11d: V69 = S[V67]
0x11f: JUMP 0xdb
---
Entry stack: [V11, 0xdb, V45]
Stack pops: 2
Stack additions: [S1, V69]
Exit stack: [V11, 0xdb, V69]

================================

Block 0x120
[0x120:0x1d0]
---
Predecessors: [0xfd]
Successors: [0x106]
---
0x120 JUMPDEST
0x121 CALLER
0x122 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x137 AND
0x138 PUSH1 0x0
0x13a DUP1
0x13b CALLER
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 DUP2
0x169 MSTORE
0x16a PUSH1 0x20
0x16c ADD
0x16d SWAP1
0x16e DUP2
0x16f MSTORE
0x170 PUSH1 0x20
0x172 ADD
0x173 PUSH1 0x0
0x175 SHA3
0x176 SLOAD
0x177 PUSH1 0x40
0x179 MLOAD
0x17a PUSH1 0x0
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 DUP4
0x181 SUB
0x182 DUP2
0x183 DUP6
0x184 DUP8
0x185 GAS
0x186 CALL
0x187 SWAP3
0x188 POP
0x189 POP
0x18a POP
0x18b POP
0x18c PUSH1 0x0
0x18e DUP1
0x18f PUSH1 0x0
0x191 CALLER
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bd AND
0x1be DUP2
0x1bf MSTORE
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP1
0x1c4 DUP2
0x1c5 MSTORE
0x1c6 PUSH1 0x20
0x1c8 ADD
0x1c9 PUSH1 0x0
0x1cb SHA3
0x1cc DUP2
0x1cd SWAP1
0x1ce SSTORE
0x1cf POP
0x1d0 JUMP
---
0x120: JUMPDEST 
0x121: V70 = CALLER
0x122: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x137: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x138: V73 = 0x0
0x13b: V74 = CALLER
0x13c: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x152: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x169: M[0x0] = V78
0x16a: V79 = 0x20
0x16c: V80 = ADD 0x20 0x0
0x16f: M[0x20] = 0x0
0x170: V81 = 0x20
0x172: V82 = ADD 0x20 0x20
0x173: V83 = 0x0
0x175: V84 = SHA3 0x0 0x40
0x176: V85 = S[V84]
0x177: V86 = 0x40
0x179: V87 = M[0x40]
0x17a: V88 = 0x0
0x17c: V89 = 0x40
0x17e: V90 = M[0x40]
0x181: V91 = SUB V87 V90
0x185: V92 = GAS
0x186: V93 = CALL V92 V72 V85 V90 V91 V90 0x0
0x18c: V94 = 0x0
0x18f: V95 = 0x0
0x191: V96 = CALLER
0x192: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1a8: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1bf: M[0x0] = V100
0x1c0: V101 = 0x20
0x1c2: V102 = ADD 0x20 0x0
0x1c5: M[0x20] = 0x0
0x1c6: V103 = 0x20
0x1c8: V104 = ADD 0x20 0x20
0x1c9: V105 = 0x0
0x1cb: V106 = SHA3 0x0 0x40
0x1ce: S[V106] = 0x0
0x1d0: JUMP 0x106
---
Entry stack: [V11, 0x106]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d1
[0x1d1:0x1fc]
---
Predecessors: []
Successors: []
---
0x1d1 STOP
0x1d2 LOG1
0x1d3 PUSH6 0x627a7a723058
0x1da SHA3
0x1db MISSING 0xcb
0x1dc MISSING 0xb2
0x1dd MISSING 0xa5
0x1de DUP5
0x1df SWAP3
0x1e0 MISSING 0xb7
0x1e1 SMOD
0x1e2 SELFDESTRUCT
0x1e3 LOG3
0x1e4 MISSING 0x22
0x1e5 MISSING 0xcd
0x1e6 MISSING 0xac
0x1e7 SHL
0x1e8 STOP
0x1e9 MISSING 0xb7
0x1ea MISSING 0xe2
0x1eb MOD
0x1ec MISSING 0xcc
0x1ed SWAP13
0x1ee MISSING 0xda
0x1ef PUSH4 0x4ebf0a56
0x1f4 DUP8
0x1f5 MISSING 0xa9
0x1f6 MISSING 0xc2
0x1f7 MISSING 0xcd
0x1f8 MISSING 0x29
0x1f9 RETURN
0x1fa DUP9
0x1fb STOP
0x1fc MISSING 0x29
---
0x1d1: STOP 
0x1d2: LOG S0 S1 S2
0x1d3: V107 = 0x627a7a723058
0x1da: V108 = SHA3 0x627a7a723058 S3
0x1db: MISSING 0xcb
0x1dc: MISSING 0xb2
0x1dd: MISSING 0xa5
0x1e0: MISSING 0xb7
0x1e1: V109 = SMOD S0 S1
0x1e2: SELFDESTRUCT V109
0x1e3: LOG S0 S1 S2 S3 S4
0x1e4: MISSING 0x22
0x1e5: MISSING 0xcd
0x1e6: MISSING 0xac
0x1e7: V110 = SHL S0 S1
0x1e8: STOP 
0x1e9: MISSING 0xb7
0x1ea: MISSING 0xe2
0x1eb: V111 = MOD S0 S1
0x1ec: MISSING 0xcc
0x1ee: MISSING 0xda
0x1ef: V112 = 0x4ebf0a56
0x1f5: MISSING 0xa9
0x1f6: MISSING 0xc2
0x1f7: MISSING 0xcd
0x1f8: MISSING 0x29
0x1f9: RETURN S0 S1
0x1fb: STOP 
0x1fc: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V108, S2, S0, S1, S4, S3, S4, V110, V111, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, S6, 0x4ebf0a56, S0, S1, S2, S3, S4, S5, S6, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x27e235e3
Entry block: 0x9a
Exit block: 0xdb
Body: 0x9a, 0xa2, 0xa6, 0xdb, 0x108

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xf1
Exit block: 0x106
Body: 0xf1, 0xf9, 0xfd, 0x106, 0x120

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

