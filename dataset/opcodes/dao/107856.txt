Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x51]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x51
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x51
0xa: JUMPI 0x51 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x8f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x7822ed49
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x8f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x7822ed49
0x20: V14 = EQ V12 0x7822ed49
0x21: V15 = 0x8f
0x24: JUMPI 0x8f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xbe]
---
0x25 DUP1
0x26 PUSH4 0x8da5cb5b
0x2b EQ
0x2c PUSH2 0xbe
0x2f JUMPI
---
0x26: V16 = 0x8da5cb5b
0x2b: V17 = EQ 0x8da5cb5b V12
0x2c: V18 = 0xbe
0x2f: JUMPI 0xbe V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xed]
---
0x30 DUP1
0x31 PUSH4 0xc9b25f0f
0x36 EQ
0x37 PUSH2 0xed
0x3a JUMPI
---
0x31: V19 = 0xc9b25f0f
0x36: V20 = EQ 0xc9b25f0f V12
0x37: V21 = 0xed
0x3a: JUMPI 0xed V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x102]
---
0x3b DUP1
0x3c PUSH4 0xdeebeac9
0x41 EQ
0x42 PUSH2 0x102
0x45 JUMPI
---
0x3c: V22 = 0xdeebeac9
0x41: V23 = EQ 0xdeebeac9 V12
0x42: V24 = 0x102
0x45: JUMPI 0x102 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x123]
---
0x46 DUP1
0x47 PUSH4 0xfc3c0eee
0x4c EQ
0x4d PUSH2 0x123
0x50 JUMPI
---
0x47: V25 = 0xfc3c0eee
0x4c: V26 = EQ 0xfc3c0eee V12
0x4d: V27 = 0x123
0x50: JUMPI 0x123 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x51]
---
Predecessors: [0x0, 0x46]
Successors: [0x52]
---
0x51 JUMPDEST
---
0x51: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x52
[0x52:0x5a]
---
Predecessors: [0x51]
Successors: [0x5b, 0x5f]
---
0x52 JUMPDEST
0x53 PUSH1 0x0
0x55 CALLVALUE
0x56 GT
0x57 PUSH2 0x5f
0x5a JUMPI
---
0x52: JUMPDEST 
0x53: V28 = 0x0
0x55: V29 = CALLVALUE
0x56: V30 = GT V29 0x0
0x57: V31 = 0x5f
0x5a: JUMPI 0x5f V30
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b
[0x5b:0x5e]
---
Predecessors: [0x52]
Successors: []
---
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5b: V32 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5f
[0x5f:0x8a]
---
Predecessors: [0x52]
Successors: [0x8b, 0x8c]
---
0x5f JUMPDEST
0x60 PUSH1 0x1
0x62 SLOAD
0x63 PUSH1 0x1
0x65 PUSH1 0xa0
0x67 PUSH1 0x2
0x69 EXP
0x6a SUB
0x6b AND
0x6c CALLVALUE
0x6d PUSH1 0x40
0x6f MLOAD
0x70 PUSH1 0x0
0x72 PUSH1 0x40
0x74 MLOAD
0x75 DUP1
0x76 DUP4
0x77 SUB
0x78 DUP2
0x79 DUP6
0x7a DUP8
0x7b PUSH2 0x8796
0x7e GAS
0x7f SUB
0x80 CALL
0x81 SWAP3
0x82 POP
0x83 POP
0x84 POP
0x85 ISZERO
0x86 ISZERO
0x87 PUSH2 0x8c
0x8a JUMPI
---
0x5f: JUMPDEST 
0x60: V33 = 0x1
0x62: V34 = S[0x1]
0x63: V35 = 0x1
0x65: V36 = 0xa0
0x67: V37 = 0x2
0x69: V38 = EXP 0x2 0xa0
0x6a: V39 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x6c: V41 = CALLVALUE
0x6d: V42 = 0x40
0x6f: V43 = M[0x40]
0x70: V44 = 0x0
0x72: V45 = 0x40
0x74: V46 = M[0x40]
0x77: V47 = SUB V43 V46
0x7b: V48 = 0x8796
0x7e: V49 = GAS
0x7f: V50 = SUB V49 0x8796
0x80: V51 = CALL V50 V40 V41 V46 V47 V46 0x0
0x85: V52 = ISZERO V51
0x86: V53 = ISZERO V52
0x87: V54 = 0x8c
0x8a: JUMPI 0x8c V53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x5f]
Successors: []
---
0x8b INVALID
---
0x8b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0x8c]
---
Predecessors: [0x5f, 0x1c8, 0x300, 0x35e]
Successors: [0x8d]
---
0x8c JUMPDEST
---
0x8c: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x8c]
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f
[0x8f:0x95]
---
Predecessors: [0xb]
Successors: [0x96, 0x9a]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 ISZERO
0x92 PUSH2 0x9a
0x95 JUMPI
---
0x8f: JUMPDEST 
0x90: V55 = CALLVALUE
0x91: V56 = ISZERO V55
0x92: V57 = 0x9a
0x95: JUMPI 0x9a V56
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x8f]
Successors: []
---
0x96 PUSH1 0x0
0x98 DUP1
0x99 REVERT
---
0x96: V58 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9a
[0x9a:0xa1]
---
Predecessors: [0x8f]
Successors: [0x144]
---
0x9a JUMPDEST
0x9b PUSH2 0xa2
0x9e PUSH2 0x144
0xa1 JUMP
---
0x9a: JUMPDEST 
0x9b: V59 = 0xa2
0x9e: V60 = 0x144
0xa1: JUMP 0x144
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa2]
Exit stack: [V12, 0xa2]

================================

Block 0xa2
[0xa2:0xbd]
---
Predecessors: [0x144, 0x153]
Successors: []
---
0xa2 JUMPDEST
0xa3 PUSH1 0x40
0xa5 MLOAD
0xa6 PUSH1 0x1
0xa8 PUSH1 0xa0
0xaa PUSH1 0x2
0xac EXP
0xad SUB
0xae SWAP1
0xaf SWAP2
0xb0 AND
0xb1 DUP2
0xb2 MSTORE
0xb3 PUSH1 0x20
0xb5 ADD
0xb6 PUSH1 0x40
0xb8 MLOAD
0xb9 DUP1
0xba SWAP2
0xbb SUB
0xbc SWAP1
0xbd RETURN
---
0xa2: JUMPDEST 
0xa3: V61 = 0x40
0xa5: V62 = M[0x40]
0xa6: V63 = 0x1
0xa8: V64 = 0xa0
0xaa: V65 = 0x2
0xac: V66 = EXP 0x2 0xa0
0xad: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0: V68 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xb2: M[V62] = V68
0xb3: V69 = 0x20
0xb5: V70 = ADD 0x20 V62
0xb6: V71 = 0x40
0xb8: V72 = M[0x40]
0xbb: V73 = SUB V70 V72
0xbd: RETURN V72 V73
---
Entry stack: [V12, 0xa2, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa2]

================================

Block 0xbe
[0xbe:0xc4]
---
Predecessors: [0x25]
Successors: [0xc5, 0xc9]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 ISZERO
0xc1 PUSH2 0xc9
0xc4 JUMPI
---
0xbe: JUMPDEST 
0xbf: V74 = CALLVALUE
0xc0: V75 = ISZERO V74
0xc1: V76 = 0xc9
0xc4: JUMPI 0xc9 V75
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc5
[0xc5:0xc8]
---
Predecessors: [0xbe]
Successors: []
---
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 REVERT
---
0xc5: V77 = 0x0
0xc8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0xbe]
Successors: [0x153]
---
0xc9 JUMPDEST
0xca PUSH2 0xa2
0xcd PUSH2 0x153
0xd0 JUMP
---
0xc9: JUMPDEST 
0xca: V78 = 0xa2
0xcd: V79 = 0x153
0xd0: JUMP 0x153
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa2]
Exit stack: [V12, 0xa2]

================================

Block 0xd1
[0xd1:0xec]
---
Predecessors: []
Successors: []
---
0xd1 JUMPDEST
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd SWAP1
0xde SWAP2
0xdf AND
0xe0 DUP2
0xe1 MSTORE
0xe2 PUSH1 0x20
0xe4 ADD
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 SWAP2
0xea SUB
0xeb SWAP1
0xec RETURN
---
0xd1: JUMPDEST 
0xd2: V80 = 0x40
0xd4: V81 = M[0x40]
0xd5: V82 = 0x1
0xd7: V83 = 0xa0
0xd9: V84 = 0x2
0xdb: V85 = EXP 0x2 0xa0
0xdc: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V87 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe1: M[V81] = V87
0xe2: V88 = 0x20
0xe4: V89 = ADD 0x20 V81
0xe5: V90 = 0x40
0xe7: V91 = M[0x40]
0xea: V92 = SUB V89 V91
0xec: RETURN V91 V92
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xed
[0xed:0xf3]
---
Predecessors: [0x30]
Successors: [0xf4, 0xf8]
---
0xed JUMPDEST
0xee CALLVALUE
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xed: JUMPDEST 
0xee: V93 = CALLVALUE
0xef: V94 = ISZERO V93
0xf0: V95 = 0xf8
0xf3: JUMPI 0xf8 V94
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xed]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V96 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xed]
Successors: [0x162]
---
0xf8 JUMPDEST
0xf9 PUSH2 0x8c
0xfc PUSH2 0x162
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V97 = 0x8c
0xfc: V98 = 0x162
0xff: JUMP 0x162
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V12, 0x8c]

================================

Block 0x100
[0x100:0x101]
---
Predecessors: []
Successors: []
---
0x100 JUMPDEST
0x101 STOP
---
0x100: JUMPDEST 
0x101: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x102
[0x102:0x108]
---
Predecessors: [0x3b]
Successors: [0x109, 0x10d]
---
0x102 JUMPDEST
0x103 CALLVALUE
0x104 ISZERO
0x105 PUSH2 0x10d
0x108 JUMPI
---
0x102: JUMPDEST 
0x103: V99 = CALLVALUE
0x104: V100 = ISZERO V99
0x105: V101 = 0x10d
0x108: JUMPI 0x10d V100
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x109
[0x109:0x10c]
---
Predecessors: [0x102]
Successors: []
---
0x109 PUSH1 0x0
0x10b DUP1
0x10c REVERT
---
0x109: V102 = 0x0
0x10c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10d
[0x10d:0x120]
---
Predecessors: [0x102]
Successors: [0x1ca]
---
0x10d JUMPDEST
0x10e PUSH2 0x8c
0x111 PUSH1 0x1
0x113 PUSH1 0xa0
0x115 PUSH1 0x2
0x117 EXP
0x118 SUB
0x119 PUSH1 0x4
0x11b CALLDATALOAD
0x11c AND
0x11d PUSH2 0x1ca
0x120 JUMP
---
0x10d: JUMPDEST 
0x10e: V103 = 0x8c
0x111: V104 = 0x1
0x113: V105 = 0xa0
0x115: V106 = 0x2
0x117: V107 = EXP 0x2 0xa0
0x118: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x119: V109 = 0x4
0x11b: V110 = CALLDATALOAD 0x4
0x11c: V111 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x11d: V112 = 0x1ca
0x120: JUMP 0x1ca
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8c, V111]
Exit stack: [V12, 0x8c, V111]

================================

Block 0x121
[0x121:0x122]
---
Predecessors: []
Successors: []
---
0x121 JUMPDEST
0x122 STOP
---
0x121: JUMPDEST 
0x122: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x123
[0x123:0x129]
---
Predecessors: [0x46]
Successors: [0x12a, 0x12e]
---
0x123 JUMPDEST
0x124 CALLVALUE
0x125 ISZERO
0x126 PUSH2 0x12e
0x129 JUMPI
---
0x123: JUMPDEST 
0x124: V113 = CALLVALUE
0x125: V114 = ISZERO V113
0x126: V115 = 0x12e
0x129: JUMPI 0x12e V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12a
[0x12a:0x12d]
---
Predecessors: [0x123]
Successors: []
---
0x12a PUSH1 0x0
0x12c DUP1
0x12d REVERT
---
0x12a: V116 = 0x0
0x12d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12e
[0x12e:0x141]
---
Predecessors: [0x123]
Successors: [0x304]
---
0x12e JUMPDEST
0x12f PUSH2 0x8c
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a PUSH1 0x4
0x13c CALLDATALOAD
0x13d AND
0x13e PUSH2 0x304
0x141 JUMP
---
0x12e: JUMPDEST 
0x12f: V117 = 0x8c
0x132: V118 = 0x1
0x134: V119 = 0xa0
0x136: V120 = 0x2
0x138: V121 = EXP 0x2 0xa0
0x139: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V123 = 0x4
0x13c: V124 = CALLDATALOAD 0x4
0x13d: V125 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x13e: V126 = 0x304
0x141: JUMP 0x304
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8c, V125]
Exit stack: [V12, 0x8c, V125]

================================

Block 0x142
[0x142:0x143]
---
Predecessors: []
Successors: []
---
0x142 JUMPDEST
0x143 STOP
---
0x142: JUMPDEST 
0x143: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x144
[0x144:0x152]
---
Predecessors: [0x9a]
Successors: [0xa2]
---
0x144 JUMPDEST
0x145 PUSH1 0x1
0x147 SLOAD
0x148 PUSH1 0x1
0x14a PUSH1 0xa0
0x14c PUSH1 0x2
0x14e EXP
0x14f SUB
0x150 AND
0x151 DUP2
0x152 JUMP
---
0x144: JUMPDEST 
0x145: V127 = 0x1
0x147: V128 = S[0x1]
0x148: V129 = 0x1
0x14a: V130 = 0xa0
0x14c: V131 = 0x2
0x14e: V132 = EXP 0x2 0xa0
0x14f: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x150: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x152: JUMP 0xa2
---
Entry stack: [V12, 0xa2]
Stack pops: 1
Stack additions: [S0, V134]
Exit stack: [V12, 0xa2, V134]

================================

Block 0x153
[0x153:0x161]
---
Predecessors: [0xc9]
Successors: [0xa2]
---
0x153 JUMPDEST
0x154 PUSH1 0x0
0x156 SLOAD
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f AND
0x160 DUP2
0x161 JUMP
---
0x153: JUMPDEST 
0x154: V135 = 0x0
0x156: V136 = S[0x0]
0x157: V137 = 0x1
0x159: V138 = 0xa0
0x15b: V139 = 0x2
0x15d: V140 = EXP 0x2 0xa0
0x15e: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x161: JUMP 0xa2
---
Entry stack: [V12, 0xa2]
Stack pops: 1
Stack additions: [S0, V142]
Exit stack: [V12, 0xa2, V142]

================================

Block 0x162
[0x162:0x178]
---
Predecessors: [0xf8]
Successors: [0x179, 0x17d]
---
0x162 JUMPDEST
0x163 PUSH1 0x0
0x165 SLOAD
0x166 CALLER
0x167 PUSH1 0x1
0x169 PUSH1 0xa0
0x16b PUSH1 0x2
0x16d EXP
0x16e SUB
0x16f SWAP1
0x170 DUP2
0x171 AND
0x172 SWAP2
0x173 AND
0x174 EQ
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x162: JUMPDEST 
0x163: V143 = 0x0
0x165: V144 = S[0x0]
0x166: V145 = CALLER
0x167: V146 = 0x1
0x169: V147 = 0xa0
0x16b: V148 = 0x2
0x16d: V149 = EXP 0x2 0xa0
0x16e: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x173: V152 = AND V144 0xffffffffffffffffffffffffffffffffffffffff
0x174: V153 = EQ V152 V151
0x175: V154 = 0x17d
0x178: JUMPI 0x17d V153
---
Entry stack: [V12, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x162]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V155 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c]

================================

Block 0x17d
[0x17d:0x18f]
---
Predecessors: [0x162]
Successors: [0x190, 0x194]
---
0x17d JUMPDEST
0x17e PUSH1 0x0
0x180 PUSH1 0x1
0x182 PUSH1 0xa0
0x184 PUSH1 0x2
0x186 EXP
0x187 SUB
0x188 ADDRESS
0x189 AND
0x18a BALANCE
0x18b GT
0x18c PUSH2 0x194
0x18f JUMPI
---
0x17d: JUMPDEST 
0x17e: V156 = 0x0
0x180: V157 = 0x1
0x182: V158 = 0xa0
0x184: V159 = 0x2
0x186: V160 = EXP 0x2 0xa0
0x187: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x188: V162 = ADDRESS
0x189: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V164 = BALANCE V163
0x18b: V165 = GT V164 0x0
0x18c: V166 = 0x194
0x18f: JUMPI 0x194 V165
---
Entry stack: [V12, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x17d]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V167 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c]

================================

Block 0x194
[0x194:0x1c4]
---
Predecessors: [0x17d]
Successors: [0x1c5, 0x1c6]
---
0x194 JUMPDEST
0x195 PUSH1 0x1
0x197 SLOAD
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 AND
0x1a3 SWAP1
0x1a4 ADDRESS
0x1a5 AND
0x1a6 BALANCE
0x1a7 PUSH1 0x40
0x1a9 MLOAD
0x1aa PUSH1 0x0
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af DUP1
0x1b0 DUP4
0x1b1 SUB
0x1b2 DUP2
0x1b3 DUP6
0x1b4 DUP8
0x1b5 PUSH2 0x8796
0x1b8 GAS
0x1b9 SUB
0x1ba CALL
0x1bb SWAP3
0x1bc POP
0x1bd POP
0x1be POP
0x1bf ISZERO
0x1c0 ISZERO
0x1c1 PUSH2 0x1c6
0x1c4 JUMPI
---
0x194: JUMPDEST 
0x195: V168 = 0x1
0x197: V169 = S[0x1]
0x198: V170 = 0x1
0x19a: V171 = 0xa0
0x19c: V172 = 0x2
0x19e: V173 = EXP 0x2 0xa0
0x19f: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a2: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1a4: V176 = ADDRESS
0x1a5: V177 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V178 = BALANCE V177
0x1a7: V179 = 0x40
0x1a9: V180 = M[0x40]
0x1aa: V181 = 0x0
0x1ac: V182 = 0x40
0x1ae: V183 = M[0x40]
0x1b1: V184 = SUB V180 V183
0x1b5: V185 = 0x8796
0x1b8: V186 = GAS
0x1b9: V187 = SUB V186 0x8796
0x1ba: V188 = CALL V187 V175 V178 V183 V184 V183 0x0
0x1bf: V189 = ISZERO V188
0x1c0: V190 = ISZERO V189
0x1c1: V191 = 0x1c6
0x1c4: JUMPI 0x1c6 V190
---
Entry stack: [V12, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c]

================================

Block 0x1c5
[0x1c5:0x1c5]
---
Predecessors: [0x194]
Successors: []
---
0x1c5 INVALID
---
0x1c5: INVALID 
---
Entry stack: [V12, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c]

================================

Block 0x1c6
[0x1c6:0x1c6]
---
Predecessors: [0x194]
Successors: [0x1c7]
---
0x1c6 JUMPDEST
---
0x1c6: JUMPDEST 
---
Entry stack: [V12, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c]

================================

Block 0x1c7
[0x1c7:0x1c7]
---
Predecessors: [0x1c6]
Successors: [0x1c8]
---
0x1c7 JUMPDEST
---
0x1c7: JUMPDEST 
---
Entry stack: [V12, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c]

================================

Block 0x1c8
[0x1c8:0x1c9]
---
Predecessors: [0x1c7]
Successors: [0x8c]
---
0x1c8 JUMPDEST
0x1c9 JUMP
---
0x1c8: JUMPDEST 
0x1c9: JUMP 0x8c
---
Entry stack: [V12, 0x8c]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ca
[0x1ca:0x1e1]
---
Predecessors: [0x10d]
Successors: [0x1e2, 0x1e6]
---
0x1ca JUMPDEST
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce SLOAD
0x1cf CALLER
0x1d0 PUSH1 0x1
0x1d2 PUSH1 0xa0
0x1d4 PUSH1 0x2
0x1d6 EXP
0x1d7 SUB
0x1d8 SWAP1
0x1d9 DUP2
0x1da AND
0x1db SWAP2
0x1dc AND
0x1dd EQ
0x1de PUSH2 0x1e6
0x1e1 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V192 = 0x0
0x1ce: V193 = S[0x0]
0x1cf: V194 = CALLER
0x1d0: V195 = 0x1
0x1d2: V196 = 0xa0
0x1d4: V197 = 0x2
0x1d6: V198 = EXP 0x2 0xa0
0x1d7: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1da: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x1dc: V201 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x1dd: V202 = EQ V201 V200
0x1de: V203 = 0x1e6
0x1e1: JUMPI 0x1e6 V202
---
Entry stack: [V12, 0x8c, V111]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x8c, V111, 0x0]

================================

Block 0x1e2
[0x1e2:0x1e5]
---
Predecessors: [0x1ca]
Successors: []
---
0x1e2 PUSH1 0x0
0x1e4 DUP1
0x1e5 REVERT
---
0x1e2: V204 = 0x0
0x1e5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V111, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V111, 0x0]

================================

Block 0x1e6
[0x1e6:0x1f6]
---
Predecessors: [0x1ca]
Successors: [0x1f7, 0x1f8]
---
0x1e6 JUMPDEST
0x1e7 PUSH1 0x1
0x1e9 PUSH1 0xa0
0x1eb PUSH1 0x2
0x1ed EXP
0x1ee SUB
0x1ef DUP3
0x1f0 AND
0x1f1 ISZERO
0x1f2 ISZERO
0x1f3 PUSH2 0x1f8
0x1f6 JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V205 = 0x1
0x1e9: V206 = 0xa0
0x1eb: V207 = 0x2
0x1ed: V208 = EXP 0x2 0xa0
0x1ee: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f0: V210 = AND V111 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V211 = ISZERO V210
0x1f2: V212 = ISZERO V211
0x1f3: V213 = 0x1f8
0x1f6: JUMPI 0x1f8 V212
---
Entry stack: [V12, 0x8c, V111, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x8c, V111, 0x0]

================================

Block 0x1f7
[0x1f7:0x1f7]
---
Predecessors: [0x1e6]
Successors: []
---
0x1f7 INVALID
---
0x1f7: INVALID 
---
Entry stack: [V12, 0x8c, V111, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V111, 0x0]

================================

Block 0x1f8
[0x1f8:0x24a]
---
Predecessors: [0x1e6]
Successors: [0x24b, 0x24f]
---
0x1f8 JUMPDEST
0x1f9 DUP2
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 AND
0x203 PUSH4 0x70a08231
0x208 ADDRESS
0x209 PUSH1 0x0
0x20b PUSH1 0x40
0x20d MLOAD
0x20e PUSH1 0x20
0x210 ADD
0x211 MSTORE
0x212 PUSH1 0x40
0x214 MLOAD
0x215 PUSH1 0xe0
0x217 PUSH1 0x2
0x219 EXP
0x21a PUSH4 0xffffffff
0x21f DUP5
0x220 AND
0x221 MUL
0x222 DUP2
0x223 MSTORE
0x224 PUSH1 0x1
0x226 PUSH1 0xa0
0x228 PUSH1 0x2
0x22a EXP
0x22b SUB
0x22c SWAP1
0x22d SWAP2
0x22e AND
0x22f PUSH1 0x4
0x231 DUP3
0x232 ADD
0x233 MSTORE
0x234 PUSH1 0x24
0x236 ADD
0x237 PUSH1 0x20
0x239 PUSH1 0x40
0x23b MLOAD
0x23c DUP1
0x23d DUP4
0x23e SUB
0x23f DUP2
0x240 PUSH1 0x0
0x242 DUP8
0x243 DUP1
0x244 EXTCODESIZE
0x245 ISZERO
0x246 ISZERO
0x247 PUSH2 0x24f
0x24a JUMPI
---
0x1f8: JUMPDEST 
0x1fa: V214 = 0x1
0x1fc: V215 = 0xa0
0x1fe: V216 = 0x2
0x200: V217 = EXP 0x2 0xa0
0x201: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x203: V220 = 0x70a08231
0x208: V221 = ADDRESS
0x209: V222 = 0x0
0x20b: V223 = 0x40
0x20d: V224 = M[0x40]
0x20e: V225 = 0x20
0x210: V226 = ADD 0x20 V224
0x211: M[V226] = 0x0
0x212: V227 = 0x40
0x214: V228 = M[0x40]
0x215: V229 = 0xe0
0x217: V230 = 0x2
0x219: V231 = EXP 0x2 0xe0
0x21a: V232 = 0xffffffff
0x220: V233 = AND 0x70a08231 0xffffffff
0x221: V234 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x223: M[V228] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x224: V235 = 0x1
0x226: V236 = 0xa0
0x228: V237 = 0x2
0x22a: V238 = EXP 0x2 0xa0
0x22b: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22e: V240 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V241 = 0x4
0x232: V242 = ADD V228 0x4
0x233: M[V242] = V240
0x234: V243 = 0x24
0x236: V244 = ADD 0x24 V228
0x237: V245 = 0x20
0x239: V246 = 0x40
0x23b: V247 = M[0x40]
0x23e: V248 = SUB V244 V247
0x240: V249 = 0x0
0x244: V250 = EXTCODESIZE V219
0x245: V251 = ISZERO V250
0x246: V252 = ISZERO V251
0x247: V253 = 0x24f
0x24a: JUMPI 0x24f V252
---
Entry stack: [V12, 0x8c, V111, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V219, 0x70a08231, V244, 0x20, V247, V248, V247, 0x0, V219]
Exit stack: [V12, 0x8c, V111, 0x0, V219, 0x70a08231, V244, 0x20, V247, V248, V247, 0x0, V219]

================================

Block 0x24b
[0x24b:0x24e]
---
Predecessors: [0x1f8]
Successors: []
---
0x24b PUSH1 0x0
0x24d DUP1
0x24e REVERT
---
0x24b: V254 = 0x0
0x24e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V111, 0x0, V219, 0x70a08231, V244, 0x20, V247, V248, V247, 0x0, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V111, 0x0, V219, 0x70a08231, V244, 0x20, V247, V248, V247, 0x0, V219]

================================

Block 0x24f
[0x24f:0x25b]
---
Predecessors: [0x1f8]
Successors: [0x25c, 0x260]
---
0x24f JUMPDEST
0x250 PUSH2 0x2c6
0x253 GAS
0x254 SUB
0x255 CALL
0x256 ISZERO
0x257 ISZERO
0x258 PUSH2 0x260
0x25b JUMPI
---
0x24f: JUMPDEST 
0x250: V255 = 0x2c6
0x253: V256 = GAS
0x254: V257 = SUB V256 0x2c6
0x255: V258 = CALL V257 V219 0x0 V247 V248 V247 0x20
0x256: V259 = ISZERO V258
0x257: V260 = ISZERO V259
0x258: V261 = 0x260
0x25b: JUMPI 0x260 V260
---
Entry stack: [V12, 0x8c, V111, 0x0, V219, 0x70a08231, V244, 0x20, V247, V248, V247, 0x0, V219]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8c, V111, 0x0, V219, 0x70a08231, V244]

================================

Block 0x25c
[0x25c:0x25f]
---
Predecessors: [0x24f]
Successors: []
---
0x25c PUSH1 0x0
0x25e DUP1
0x25f REVERT
---
0x25c: V262 = 0x0
0x25f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V111, 0x0, V219, 0x70a08231, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V111, 0x0, V219, 0x70a08231, V244]

================================

Block 0x260
[0x260:0x273]
---
Predecessors: [0x24f]
Successors: [0x274, 0x278]
---
0x260 JUMPDEST
0x261 POP
0x262 POP
0x263 POP
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP1
0x268 MLOAD
0x269 SWAP2
0x26a POP
0x26b POP
0x26c PUSH1 0x0
0x26e DUP2
0x26f GT
0x270 PUSH2 0x278
0x273 JUMPI
---
0x260: JUMPDEST 
0x264: V263 = 0x40
0x266: V264 = M[0x40]
0x268: V265 = M[V264]
0x26c: V266 = 0x0
0x26f: V267 = GT V265 0x0
0x270: V268 = 0x278
0x273: JUMPI 0x278 V267
---
Entry stack: [V12, 0x8c, V111, 0x0, V219, 0x70a08231, V244]
Stack pops: 4
Stack additions: [V265]
Exit stack: [V12, 0x8c, V111, V265]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x260]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V269 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V111, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V111, V265]

================================

Block 0x278
[0x278:0x2d6]
---
Predecessors: [0x260]
Successors: [0x2d7, 0x2db]
---
0x278 JUMPDEST
0x279 PUSH1 0x1
0x27b SLOAD
0x27c PUSH1 0x1
0x27e PUSH1 0xa0
0x280 PUSH1 0x2
0x282 EXP
0x283 SUB
0x284 DUP1
0x285 DUP5
0x286 AND
0x287 SWAP2
0x288 PUSH4 0xa9059cbb
0x28d SWAP2
0x28e AND
0x28f DUP4
0x290 PUSH1 0x0
0x292 PUSH1 0x40
0x294 MLOAD
0x295 PUSH1 0x20
0x297 ADD
0x298 MSTORE
0x299 PUSH1 0x40
0x29b MLOAD
0x29c PUSH1 0xe0
0x29e PUSH1 0x2
0x2a0 EXP
0x2a1 PUSH4 0xffffffff
0x2a6 DUP6
0x2a7 AND
0x2a8 MUL
0x2a9 DUP2
0x2aa MSTORE
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 SWAP1
0x2b4 SWAP3
0x2b5 AND
0x2b6 PUSH1 0x4
0x2b8 DUP4
0x2b9 ADD
0x2ba MSTORE
0x2bb PUSH1 0x24
0x2bd DUP3
0x2be ADD
0x2bf MSTORE
0x2c0 PUSH1 0x44
0x2c2 ADD
0x2c3 PUSH1 0x20
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 DUP1
0x2c9 DUP4
0x2ca SUB
0x2cb DUP2
0x2cc PUSH1 0x0
0x2ce DUP8
0x2cf DUP1
0x2d0 EXTCODESIZE
0x2d1 ISZERO
0x2d2 ISZERO
0x2d3 PUSH2 0x2db
0x2d6 JUMPI
---
0x278: JUMPDEST 
0x279: V270 = 0x1
0x27b: V271 = S[0x1]
0x27c: V272 = 0x1
0x27e: V273 = 0xa0
0x280: V274 = 0x2
0x282: V275 = EXP 0x2 0xa0
0x283: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x286: V277 = AND V111 0xffffffffffffffffffffffffffffffffffffffff
0x288: V278 = 0xa9059cbb
0x28e: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x290: V280 = 0x0
0x292: V281 = 0x40
0x294: V282 = M[0x40]
0x295: V283 = 0x20
0x297: V284 = ADD 0x20 V282
0x298: M[V284] = 0x0
0x299: V285 = 0x40
0x29b: V286 = M[0x40]
0x29c: V287 = 0xe0
0x29e: V288 = 0x2
0x2a0: V289 = EXP 0x2 0xe0
0x2a1: V290 = 0xffffffff
0x2a7: V291 = AND 0xa9059cbb 0xffffffff
0x2a8: V292 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2aa: M[V286] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2ab: V293 = 0x1
0x2ad: V294 = 0xa0
0x2af: V295 = 0x2
0x2b1: V296 = EXP 0x2 0xa0
0x2b2: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V298 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: V299 = 0x4
0x2b9: V300 = ADD V286 0x4
0x2ba: M[V300] = V298
0x2bb: V301 = 0x24
0x2be: V302 = ADD V286 0x24
0x2bf: M[V302] = V265
0x2c0: V303 = 0x44
0x2c2: V304 = ADD 0x44 V286
0x2c3: V305 = 0x20
0x2c5: V306 = 0x40
0x2c7: V307 = M[0x40]
0x2ca: V308 = SUB V304 V307
0x2cc: V309 = 0x0
0x2d0: V310 = EXTCODESIZE V277
0x2d1: V311 = ISZERO V310
0x2d2: V312 = ISZERO V311
0x2d3: V313 = 0x2db
0x2d6: JUMPI 0x2db V312
---
Entry stack: [V12, 0x8c, V111, V265]
Stack pops: 2
Stack additions: [S1, S0, V277, 0xa9059cbb, V304, 0x20, V307, V308, V307, 0x0, V277]
Exit stack: [V12, 0x8c, V111, V265, V277, 0xa9059cbb, V304, 0x20, V307, V308, V307, 0x0, V277]

================================

Block 0x2d7
[0x2d7:0x2da]
---
Predecessors: [0x278]
Successors: []
---
0x2d7 PUSH1 0x0
0x2d9 DUP1
0x2da REVERT
---
0x2d7: V314 = 0x0
0x2da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V111, V265, V277, 0xa9059cbb, V304, 0x20, V307, V308, V307, 0x0, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V111, V265, V277, 0xa9059cbb, V304, 0x20, V307, V308, V307, 0x0, V277]

================================

Block 0x2db
[0x2db:0x2e7]
---
Predecessors: [0x278]
Successors: [0x2e8, 0x2ec]
---
0x2db JUMPDEST
0x2dc PUSH2 0x2c6
0x2df GAS
0x2e0 SUB
0x2e1 CALL
0x2e2 ISZERO
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x2db: JUMPDEST 
0x2dc: V315 = 0x2c6
0x2df: V316 = GAS
0x2e0: V317 = SUB V316 0x2c6
0x2e1: V318 = CALL V317 V277 0x0 V307 V308 V307 0x20
0x2e2: V319 = ISZERO V318
0x2e3: V320 = ISZERO V319
0x2e4: V321 = 0x2ec
0x2e7: JUMPI 0x2ec V320
---
Entry stack: [V12, 0x8c, V111, V265, V277, 0xa9059cbb, V304, 0x20, V307, V308, V307, 0x0, V277]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8c, V111, V265, V277, 0xa9059cbb, V304]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x2db]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V322 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V111, V265, V277, 0xa9059cbb, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V111, V265, V277, 0xa9059cbb, V304]

================================

Block 0x2ec
[0x2ec:0x2fc]
---
Predecessors: [0x2db]
Successors: [0x2fd, 0x2fe]
---
0x2ec JUMPDEST
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 MLOAD
0x2f5 SWAP1
0x2f6 POP
0x2f7 ISZERO
0x2f8 ISZERO
0x2f9 PUSH2 0x2fe
0x2fc JUMPI
---
0x2ec: JUMPDEST 
0x2f0: V323 = 0x40
0x2f2: V324 = M[0x40]
0x2f4: V325 = M[V324]
0x2f7: V326 = ISZERO V325
0x2f8: V327 = ISZERO V326
0x2f9: V328 = 0x2fe
0x2fc: JUMPI 0x2fe V327
---
Entry stack: [V12, 0x8c, V111, V265, V277, 0xa9059cbb, V304]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x8c, V111, V265]

================================

Block 0x2fd
[0x2fd:0x2fd]
---
Predecessors: [0x2ec]
Successors: []
---
0x2fd INVALID
---
0x2fd: INVALID 
---
Entry stack: [V12, 0x8c, V111, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V111, V265]

================================

Block 0x2fe
[0x2fe:0x2fe]
---
Predecessors: [0x2ec]
Successors: [0x2ff]
---
0x2fe JUMPDEST
---
0x2fe: JUMPDEST 
---
Entry stack: [V12, 0x8c, V111, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V111, V265]

================================

Block 0x2ff
[0x2ff:0x2ff]
---
Predecessors: [0x2fe]
Successors: [0x300]
---
0x2ff JUMPDEST
---
0x2ff: JUMPDEST 
---
Entry stack: [V12, 0x8c, V111, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V111, V265]

================================

Block 0x300
[0x300:0x303]
---
Predecessors: [0x2ff]
Successors: [0x8c]
---
0x300 JUMPDEST
0x301 POP
0x302 POP
0x303 JUMP
---
0x300: JUMPDEST 
0x303: JUMP 0x8c
---
Entry stack: [V12, 0x8c, V111, V265]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x304
[0x304:0x31a]
---
Predecessors: [0x12e]
Successors: [0x31b, 0x31f]
---
0x304 JUMPDEST
0x305 PUSH1 0x0
0x307 SLOAD
0x308 CALLER
0x309 PUSH1 0x1
0x30b PUSH1 0xa0
0x30d PUSH1 0x2
0x30f EXP
0x310 SUB
0x311 SWAP1
0x312 DUP2
0x313 AND
0x314 SWAP2
0x315 AND
0x316 EQ
0x317 PUSH2 0x31f
0x31a JUMPI
---
0x304: JUMPDEST 
0x305: V329 = 0x0
0x307: V330 = S[0x0]
0x308: V331 = CALLER
0x309: V332 = 0x1
0x30b: V333 = 0xa0
0x30d: V334 = 0x2
0x30f: V335 = EXP 0x2 0xa0
0x310: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x313: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x315: V338 = AND V330 0xffffffffffffffffffffffffffffffffffffffff
0x316: V339 = EQ V338 V337
0x317: V340 = 0x31f
0x31a: JUMPI 0x31f V339
---
Entry stack: [V12, 0x8c, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V125]

================================

Block 0x31b
[0x31b:0x31e]
---
Predecessors: [0x304]
Successors: []
---
0x31b PUSH1 0x0
0x31d DUP1
0x31e REVERT
---
0x31b: V341 = 0x0
0x31e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V125]

================================

Block 0x31f
[0x31f:0x32f]
---
Predecessors: [0x304]
Successors: [0x330, 0x334]
---
0x31f JUMPDEST
0x320 PUSH1 0x1
0x322 PUSH1 0xa0
0x324 PUSH1 0x2
0x326 EXP
0x327 SUB
0x328 DUP2
0x329 AND
0x32a ISZERO
0x32b ISZERO
0x32c PUSH2 0x334
0x32f JUMPI
---
0x31f: JUMPDEST 
0x320: V342 = 0x1
0x322: V343 = 0xa0
0x324: V344 = 0x2
0x326: V345 = EXP 0x2 0xa0
0x327: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x329: V347 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x32a: V348 = ISZERO V347
0x32b: V349 = ISZERO V348
0x32c: V350 = 0x334
0x32f: JUMPI 0x334 V349
---
Entry stack: [V12, 0x8c, V125]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x8c, V125]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x31f]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V351 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8c, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V125]

================================

Block 0x334
[0x334:0x35c]
---
Predecessors: [0x31f]
Successors: [0x35d]
---
0x334 JUMPDEST
0x335 PUSH1 0x1
0x337 DUP1
0x338 SLOAD
0x339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34e NOT
0x34f AND
0x350 PUSH1 0x1
0x352 PUSH1 0xa0
0x354 PUSH1 0x2
0x356 EXP
0x357 SUB
0x358 DUP4
0x359 AND
0x35a OR
0x35b SWAP1
0x35c SSTORE
---
0x334: JUMPDEST 
0x335: V352 = 0x1
0x338: V353 = S[0x1]
0x339: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V355 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V356 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V353
0x350: V357 = 0x1
0x352: V358 = 0xa0
0x354: V359 = 0x2
0x356: V360 = EXP 0x2 0xa0
0x357: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x359: V362 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x35a: V363 = OR V362 V356
0x35c: S[0x1] = V363
---
Entry stack: [V12, 0x8c, V125]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x8c, V125]

================================

Block 0x35d
[0x35d:0x35d]
---
Predecessors: [0x334]
Successors: [0x35e]
---
0x35d JUMPDEST
---
0x35d: JUMPDEST 
---
Entry stack: [V12, 0x8c, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8c, V125]

================================

Block 0x35e
[0x35e:0x360]
---
Predecessors: [0x35d]
Successors: [0x8c]
---
0x35e JUMPDEST
0x35f POP
0x360 JUMP
---
0x35e: JUMPDEST 
0x360: JUMP 0x8c
---
Entry stack: [V12, 0x8c, V125]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x361
[0x361:0x38f]
---
Predecessors: []
Successors: []
---
0x361 STOP
0x362 LOG1
0x363 PUSH6 0x627a7a723058
0x36a SHA3
0x36b MISSING 0xb0
0x36c DIFFICULTY
0x36d MISSING 0xd8
0x36e MISSING 0xc4
0x36f PUSH32 0x6829250194c038162b6964ed000a1290716427638e5951b36050eb0029
---
0x361: STOP 
0x362: LOG S0 S1 S2
0x363: V364 = 0x627a7a723058
0x36a: V365 = SHA3 0x627a7a723058 S3
0x36b: MISSING 0xb0
0x36c: V366 = DIFFICULTY
0x36d: MISSING 0xd8
0x36e: MISSING 0xc4
0x36f: V367 = 0x6829250194c038162b6964ed000a1290716427638e5951b36050eb0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V365, V366, 0x6829250194c038162b6964ed000a1290716427638e5951b36050eb0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x7822ed49
Entry block: 0x8f
Exit block: 0xa2
Body: 0x8f, 0x96, 0x9a, 0xa2, 0x144

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xbe
Exit block: 0xa2
Body: 0xa2, 0xbe, 0xc5, 0xc9, 0x153

Function 2:
Public function signature: 0xc9b25f0f
Entry block: 0xed
Exit block: 0x8d
Body: 0x8c, 0x8d, 0xed, 0xf4, 0xf8, 0x162, 0x179, 0x17d, 0x190, 0x194, 0x1c5, 0x1c6, 0x1c7, 0x1c8

Function 3:
Public function signature: 0xdeebeac9
Entry block: 0x102
Exit block: 0x8d
Body: 0x8c, 0x8d, 0x102, 0x109, 0x10d, 0x1ca, 0x1e2, 0x1e6, 0x1f7, 0x1f8, 0x24b, 0x24f, 0x25c, 0x260, 0x274, 0x278, 0x2d7, 0x2db, 0x2e8, 0x2ec, 0x2fd, 0x2fe, 0x2ff, 0x300

Function 4:
Public function signature: 0xfc3c0eee
Entry block: 0x123
Exit block: 0x8d
Body: 0x8c, 0x8d, 0x123, 0x12a, 0x12e, 0x304, 0x31b, 0x31f, 0x330, 0x334, 0x35d, 0x35e

Function 5:
Public fallback function
Entry block: 0x51
Exit block: 0x8d
Body: 0x51, 0x52, 0x5b, 0x5f, 0x8b, 0x8c, 0x8d

