Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x900f010
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x900f010
0x3b: V13 = EQ V11 0x900f010
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x82]
---
0x40 DUP1
0x41 PUSH4 0x3f5a0bdd
0x46 EQ
0x47 PUSH2 0x82
0x4a JUMPI
---
0x41: V15 = 0x3f5a0bdd
0x46: V16 = EQ 0x3f5a0bdd V11
0x47: V17 = 0x82
0x4a: JUMPI 0x82 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa1]
---
0x4b DUP1
0x4c PUSH4 0x79cb5a2f
0x51 EQ
0x52 PUSH2 0xa1
0x55 JUMPI
---
0x4c: V18 = 0x79cb5a2f
0x51: V19 = EQ 0x79cb5a2f V11
0x52: V20 = 0xa1
0x55: JUMPI 0xa1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xc0]
---
0x56 DUP1
0x57 PUSH4 0xa3912ec8
0x5c EQ
0x5d PUSH2 0xc0
0x60 JUMPI
---
0x57: V21 = 0xa3912ec8
0x5c: V22 = EQ 0xa3912ec8 V11
0x5d: V23 = 0xc0
0x60: JUMPI 0xc0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x1c5, 0x229, 0x25e]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x69]
---
Predecessors: [0xd]
Successors: [0x6a, 0x6e]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 ISZERO
0x66 PUSH2 0x6e
0x69 JUMPI
---
0x63: JUMPDEST 
0x64: V24 = CALLVALUE
0x65: V25 = ISZERO V24
0x66: V26 = 0x6e
0x69: JUMPI 0x6e V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6a
[0x6a:0x6d]
---
Predecessors: [0x63]
Successors: []
---
0x6a PUSH1 0x0
0x6c DUP1
0x6d REVERT
---
0x6a: V27 = 0x0
0x6d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x81]
---
Predecessors: [0x63]
Successors: [0xc8]
---
0x6e JUMPDEST
0x6f PUSH2 0x61
0x72 PUSH1 0x1
0x74 PUSH1 0xa0
0x76 PUSH1 0x2
0x78 EXP
0x79 SUB
0x7a PUSH1 0x4
0x7c CALLDATALOAD
0x7d AND
0x7e PUSH2 0xc8
0x81 JUMP
---
0x6e: JUMPDEST 
0x6f: V28 = 0x61
0x72: V29 = 0x1
0x74: V30 = 0xa0
0x76: V31 = 0x2
0x78: V32 = EXP 0x2 0xa0
0x79: V33 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a: V34 = 0x4
0x7c: V35 = CALLDATALOAD 0x4
0x7d: V36 = AND V35 0xffffffffffffffffffffffffffffffffffffffff
0x7e: V37 = 0xc8
0x81: JUMP 0xc8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V36]
Exit stack: [V11, 0x61, V36]

================================

Block 0x82
[0x82:0x88]
---
Predecessors: [0x40]
Successors: [0x89, 0x8d]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 ISZERO
0x85 PUSH2 0x8d
0x88 JUMPI
---
0x82: JUMPDEST 
0x83: V38 = CALLVALUE
0x84: V39 = ISZERO V38
0x85: V40 = 0x8d
0x88: JUMPI 0x8d V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x89
[0x89:0x8c]
---
Predecessors: [0x82]
Successors: []
---
0x89 PUSH1 0x0
0x8b DUP1
0x8c REVERT
---
0x89: V41 = 0x0
0x8c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0xa0]
---
Predecessors: [0x82]
Successors: [0x1cc]
---
0x8d JUMPDEST
0x8e PUSH2 0x61
0x91 PUSH1 0x1
0x93 PUSH1 0xa0
0x95 PUSH1 0x2
0x97 EXP
0x98 SUB
0x99 PUSH1 0x4
0x9b CALLDATALOAD
0x9c AND
0x9d PUSH2 0x1cc
0xa0 JUMP
---
0x8d: JUMPDEST 
0x8e: V42 = 0x61
0x91: V43 = 0x1
0x93: V44 = 0xa0
0x95: V45 = 0x2
0x97: V46 = EXP 0x2 0xa0
0x98: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99: V48 = 0x4
0x9b: V49 = CALLDATALOAD 0x4
0x9c: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x9d: V51 = 0x1cc
0xa0: JUMP 0x1cc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V50]
Exit stack: [V11, 0x61, V50]

================================

Block 0xa1
[0xa1:0xa7]
---
Predecessors: [0x4b]
Successors: [0xa8, 0xac]
---
0xa1 JUMPDEST
0xa2 CALLVALUE
0xa3 ISZERO
0xa4 PUSH2 0xac
0xa7 JUMPI
---
0xa1: JUMPDEST 
0xa2: V52 = CALLVALUE
0xa3: V53 = ISZERO V52
0xa4: V54 = 0xac
0xa7: JUMPI 0xac V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0xa1]
Successors: []
---
0xa8 PUSH1 0x0
0xaa DUP1
0xab REVERT
---
0xa8: V55 = 0x0
0xab: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xac
[0xac:0xbf]
---
Predecessors: [0xa1]
Successors: [0x209]
---
0xac JUMPDEST
0xad PUSH2 0x61
0xb0 PUSH1 0x1
0xb2 PUSH1 0xa0
0xb4 PUSH1 0x2
0xb6 EXP
0xb7 SUB
0xb8 PUSH1 0x4
0xba CALLDATALOAD
0xbb AND
0xbc PUSH2 0x209
0xbf JUMP
---
0xac: JUMPDEST 
0xad: V56 = 0x61
0xb0: V57 = 0x1
0xb2: V58 = 0xa0
0xb4: V59 = 0x2
0xb6: V60 = EXP 0x2 0xa0
0xb7: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb8: V62 = 0x4
0xba: V63 = CALLDATALOAD 0x4
0xbb: V64 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V65 = 0x209
0xbf: JUMP 0x209
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V64]
Exit stack: [V11, 0x61, V64]

================================

Block 0xc0
[0xc0:0xc7]
---
Predecessors: [0x56]
Successors: [0x25e]
---
0xc0 JUMPDEST
0xc1 PUSH2 0x61
0xc4 PUSH2 0x25e
0xc7 JUMP
---
0xc0: JUMPDEST 
0xc1: V66 = 0x61
0xc4: V67 = 0x25e
0xc7: JUMP 0x25e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xc8
[0xc8:0xe3]
---
Predecessors: [0x6e]
Successors: [0xe4, 0xe8]
---
0xc8 JUMPDEST
0xc9 PUSH1 0x0
0xcb SLOAD
0xcc CALLER
0xcd PUSH1 0x1
0xcf PUSH1 0xa0
0xd1 PUSH1 0x2
0xd3 EXP
0xd4 SUB
0xd5 SWAP1
0xd6 DUP2
0xd7 AND
0xd8 PUSH2 0x100
0xdb SWAP1
0xdc SWAP3
0xdd DIV
0xde AND
0xdf EQ
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xc8: JUMPDEST 
0xc9: V68 = 0x0
0xcb: V69 = S[0x0]
0xcc: V70 = CALLER
0xcd: V71 = 0x1
0xcf: V72 = 0xa0
0xd1: V73 = 0x2
0xd3: V74 = EXP 0x2 0xa0
0xd4: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0xd8: V77 = 0x100
0xdd: V78 = DIV V69 0x100
0xde: V79 = AND V78 0xffffffffffffffffffffffffffffffffffffffff
0xdf: V80 = EQ V79 V76
0xe0: V81 = 0xe8
0xe3: JUMPI 0xe8 V80
---
Entry stack: [V11, 0x61, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xc8]
Successors: []
---
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 REVERT
---
0xe4: V82 = 0x0
0xe7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36]

================================

Block 0xe8
[0xe8:0x1b3]
---
Predecessors: [0xc8]
Successors: [0x1b4, 0x1b8]
---
0xe8 JUMPDEST
0xe9 PUSH1 0x0
0xeb DUP1
0xec SLOAD
0xed PUSH1 0xff
0xef NOT
0xf0 AND
0xf1 PUSH1 0x1
0xf3 OR
0xf4 SWAP1
0xf5 SSTORE
0xf6 PUSH32 0xaab9bba4fcd15de155f5c12ace41cb1b506009169b2ca88c26fa17282a6a2866
0x117 DUP2
0x118 PUSH1 0x1
0x11a PUSH1 0xa0
0x11c PUSH1 0x2
0x11e EXP
0x11f SUB
0x120 ADDRESS
0x121 AND
0x122 BALANCE
0x123 TIMESTAMP
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 DUP5
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 AND
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a AND
0x13b DUP2
0x13c MSTORE
0x13d PUSH1 0x20
0x13f ADD
0x140 DUP4
0x141 DUP2
0x142 MSTORE
0x143 PUSH1 0x20
0x145 ADD
0x146 DUP3
0x147 DUP2
0x148 MSTORE
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP4
0x14d POP
0x14e POP
0x14f POP
0x150 POP
0x151 PUSH1 0x40
0x153 MLOAD
0x154 DUP1
0x155 SWAP2
0x156 SUB
0x157 SWAP1
0x158 LOG1
0x159 DUP1
0x15a PUSH1 0x1
0x15c PUSH1 0xa0
0x15e PUSH1 0x2
0x160 EXP
0x161 SUB
0x162 AND
0x163 PUSH4 0xa3912ec8
0x168 ADDRESS
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 AND
0x172 BALANCE
0x173 PUSH1 0x40
0x175 MLOAD
0x176 DUP3
0x177 PUSH4 0xffffffff
0x17c AND
0x17d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x19b MUL
0x19c DUP2
0x19d MSTORE
0x19e PUSH1 0x4
0x1a0 ADD
0x1a1 PUSH1 0x0
0x1a3 PUSH1 0x40
0x1a5 MLOAD
0x1a6 DUP1
0x1a7 DUP4
0x1a8 SUB
0x1a9 DUP2
0x1aa DUP6
0x1ab DUP9
0x1ac DUP1
0x1ad EXTCODESIZE
0x1ae ISZERO
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0xe8: JUMPDEST 
0xe9: V83 = 0x0
0xec: V84 = S[0x0]
0xed: V85 = 0xff
0xef: V86 = NOT 0xff
0xf0: V87 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V84
0xf1: V88 = 0x1
0xf3: V89 = OR 0x1 V87
0xf5: S[0x0] = V89
0xf6: V90 = 0xaab9bba4fcd15de155f5c12ace41cb1b506009169b2ca88c26fa17282a6a2866
0x118: V91 = 0x1
0x11a: V92 = 0xa0
0x11c: V93 = 0x2
0x11e: V94 = EXP 0x2 0xa0
0x11f: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x120: V96 = ADDRESS
0x121: V97 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x122: V98 = BALANCE V97
0x123: V99 = TIMESTAMP
0x124: V100 = 0x40
0x126: V101 = M[0x40]
0x129: V102 = 0x1
0x12b: V103 = 0xa0
0x12d: V104 = 0x2
0x12f: V105 = EXP 0x2 0xa0
0x130: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x131: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x132: V108 = 0x1
0x134: V109 = 0xa0
0x136: V110 = 0x2
0x138: V111 = EXP 0x2 0xa0
0x139: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x13c: M[V101] = V113
0x13d: V114 = 0x20
0x13f: V115 = ADD 0x20 V101
0x142: M[V115] = V98
0x143: V116 = 0x20
0x145: V117 = ADD 0x20 V115
0x148: M[V117] = V99
0x149: V118 = 0x20
0x14b: V119 = ADD 0x20 V117
0x151: V120 = 0x40
0x153: V121 = M[0x40]
0x156: V122 = SUB V119 V121
0x158: LOG V121 V122 0xaab9bba4fcd15de155f5c12ace41cb1b506009169b2ca88c26fa17282a6a2866
0x15a: V123 = 0x1
0x15c: V124 = 0xa0
0x15e: V125 = 0x2
0x160: V126 = EXP 0x2 0xa0
0x161: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x162: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x163: V129 = 0xa3912ec8
0x168: V130 = ADDRESS
0x169: V131 = 0x1
0x16b: V132 = 0xa0
0x16d: V133 = 0x2
0x16f: V134 = EXP 0x2 0xa0
0x170: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x172: V137 = BALANCE V136
0x173: V138 = 0x40
0x175: V139 = M[0x40]
0x177: V140 = 0xffffffff
0x17c: V141 = AND 0xffffffff 0xa3912ec8
0x17d: V142 = 0x100000000000000000000000000000000000000000000000000000000
0x19b: V143 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa3912ec8
0x19d: M[V139] = 0xa3912ec800000000000000000000000000000000000000000000000000000000
0x19e: V144 = 0x4
0x1a0: V145 = ADD 0x4 V139
0x1a1: V146 = 0x0
0x1a3: V147 = 0x40
0x1a5: V148 = M[0x40]
0x1a8: V149 = SUB V145 V148
0x1ad: V150 = EXTCODESIZE V128
0x1ae: V151 = ISZERO V150
0x1af: V152 = ISZERO V151
0x1b0: V153 = 0x1b8
0x1b3: JUMPI 0x1b8 V152
---
Entry stack: [V11, 0x61, V36]
Stack pops: 1
Stack additions: [S0, V128, 0xa3912ec8, V137, V145, 0x0, V148, V149, V148, V137, V128]
Exit stack: [V11, 0x61, V36, V128, 0xa3912ec8, V137, V145, 0x0, V148, V149, V148, V137, V128]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0xe8]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V154 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V36, V128, 0xa3912ec8, V137, V145, 0x0, V148, V149, V148, V137, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V128, 0xa3912ec8, V137, V145, 0x0, V148, V149, V148, V137, V128]

================================

Block 0x1b8
[0x1b8:0x1c0]
---
Predecessors: [0xe8]
Successors: [0x1c1, 0x1c5]
---
0x1b8 JUMPDEST
0x1b9 GAS
0x1ba CALL
0x1bb ISZERO
0x1bc ISZERO
0x1bd PUSH2 0x1c5
0x1c0 JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V155 = GAS
0x1ba: V156 = CALL V155 V128 V137 V148 V149 V148 0x0
0x1bb: V157 = ISZERO V156
0x1bc: V158 = ISZERO V157
0x1bd: V159 = 0x1c5
0x1c0: JUMPI 0x1c5 V158
---
Entry stack: [V11, 0x61, V36, V128, 0xa3912ec8, V137, V145, 0x0, V148, V149, V148, V137, V128]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x61, V36, V128, 0xa3912ec8, V137, V145]

================================

Block 0x1c1
[0x1c1:0x1c4]
---
Predecessors: [0x1b8]
Successors: []
---
0x1c1 PUSH1 0x0
0x1c3 DUP1
0x1c4 REVERT
---
0x1c1: V160 = 0x0
0x1c4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V36, V128, 0xa3912ec8, V137, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V36, V128, 0xa3912ec8, V137, V145]

================================

Block 0x1c5
[0x1c5:0x1cb]
---
Predecessors: [0x1b8]
Successors: [0x61]
---
0x1c5 JUMPDEST
0x1c6 POP
0x1c7 POP
0x1c8 POP
0x1c9 POP
0x1ca POP
0x1cb JUMP
---
0x1c5: JUMPDEST 
0x1cb: JUMP 0x61
---
Entry stack: [V11, 0x61, V36, V128, 0xa3912ec8, V137, V145]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cc
[0x1cc:0x1e7]
---
Predecessors: [0x8d]
Successors: [0x1e8, 0x1ec]
---
0x1cc JUMPDEST
0x1cd PUSH1 0x0
0x1cf SLOAD
0x1d0 CALLER
0x1d1 PUSH1 0x1
0x1d3 PUSH1 0xa0
0x1d5 PUSH1 0x2
0x1d7 EXP
0x1d8 SUB
0x1d9 SWAP1
0x1da DUP2
0x1db AND
0x1dc PUSH2 0x100
0x1df SWAP1
0x1e0 SWAP3
0x1e1 DIV
0x1e2 AND
0x1e3 EQ
0x1e4 PUSH2 0x1ec
0x1e7 JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V161 = 0x0
0x1cf: V162 = S[0x0]
0x1d0: V163 = CALLER
0x1d1: V164 = 0x1
0x1d3: V165 = 0xa0
0x1d5: V166 = 0x2
0x1d7: V167 = EXP 0x2 0xa0
0x1d8: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1db: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x1dc: V170 = 0x100
0x1e1: V171 = DIV V162 0x100
0x1e2: V172 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V173 = EQ V172 V169
0x1e4: V174 = 0x1ec
0x1e7: JUMPI 0x1ec V173
---
Entry stack: [V11, 0x61, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V50]

================================

Block 0x1e8
[0x1e8:0x1eb]
---
Predecessors: [0x1cc]
Successors: []
---
0x1e8 PUSH1 0x0
0x1ea DUP1
0x1eb REVERT
---
0x1e8: V175 = 0x0
0x1eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V50]

================================

Block 0x1ec
[0x1ec:0x1f8]
---
Predecessors: [0x1cc]
Successors: [0x1f9, 0x1fd]
---
0x1ec JUMPDEST
0x1ed PUSH1 0x0
0x1ef SLOAD
0x1f0 PUSH1 0xff
0x1f2 AND
0x1f3 ISZERO
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V176 = 0x0
0x1ef: V177 = S[0x0]
0x1f0: V178 = 0xff
0x1f2: V179 = AND 0xff V177
0x1f3: V180 = ISZERO V179
0x1f4: V181 = ISZERO V180
0x1f5: V182 = 0x1fd
0x1f8: JUMPI 0x1fd V181
---
Entry stack: [V11, 0x61, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V50]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1ec]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V183 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V50]

================================

Block 0x1fd
[0x1fd:0x208]
---
Predecessors: [0x1ec]
Successors: []
---
0x1fd JUMPDEST
0x1fe DUP1
0x1ff PUSH1 0x1
0x201 PUSH1 0xa0
0x203 PUSH1 0x2
0x205 EXP
0x206 SUB
0x207 AND
0x208 SELFDESTRUCT
---
0x1fd: JUMPDEST 
0x1ff: V184 = 0x1
0x201: V185 = 0xa0
0x203: V186 = 0x2
0x205: V187 = EXP 0x2 0xa0
0x206: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x207: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x208: SELFDESTRUCT V189
---
Entry stack: [V11, 0x61, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x61, V50]

================================

Block 0x209
[0x209:0x224]
---
Predecessors: [0xac]
Successors: [0x225, 0x229]
---
0x209 JUMPDEST
0x20a PUSH1 0x0
0x20c SLOAD
0x20d CALLER
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 SWAP1
0x217 DUP2
0x218 AND
0x219 PUSH2 0x100
0x21c SWAP1
0x21d SWAP3
0x21e DIV
0x21f AND
0x220 EQ
0x221 PUSH2 0x229
0x224 JUMPI
---
0x209: JUMPDEST 
0x20a: V190 = 0x0
0x20c: V191 = S[0x0]
0x20d: V192 = CALLER
0x20e: V193 = 0x1
0x210: V194 = 0xa0
0x212: V195 = 0x2
0x214: V196 = EXP 0x2 0xa0
0x215: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x218: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x219: V199 = 0x100
0x21e: V200 = DIV V191 0x100
0x21f: V201 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x220: V202 = EQ V201 V198
0x221: V203 = 0x229
0x224: JUMPI 0x229 V202
---
Entry stack: [V11, 0x61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V64]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x209]
Successors: []
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
---
0x225: V204 = 0x0
0x228: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V64]

================================

Block 0x229
[0x229:0x25d]
---
Predecessors: [0x209]
Successors: [0x61]
---
0x229 JUMPDEST
0x22a PUSH1 0x0
0x22c DUP1
0x22d SLOAD
0x22e PUSH1 0x1
0x230 PUSH1 0xa0
0x232 PUSH1 0x2
0x234 EXP
0x235 SUB
0x236 SWAP1
0x237 SWAP3
0x238 AND
0x239 PUSH2 0x100
0x23c MUL
0x23d PUSH21 0xffffffffffffffffffffffffffffffffffffffff00
0x253 NOT
0x254 SWAP1
0x255 SWAP3
0x256 AND
0x257 SWAP2
0x258 SWAP1
0x259 SWAP2
0x25a OR
0x25b SWAP1
0x25c SSTORE
0x25d JUMP
---
0x229: JUMPDEST 
0x22a: V205 = 0x0
0x22d: V206 = S[0x0]
0x22e: V207 = 0x1
0x230: V208 = 0xa0
0x232: V209 = 0x2
0x234: V210 = EXP 0x2 0xa0
0x235: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x238: V212 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0x239: V213 = 0x100
0x23c: V214 = MUL 0x100 V212
0x23d: V215 = 0xffffffffffffffffffffffffffffffffffffffff00
0x253: V216 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x256: V217 = AND V206 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff
0x25a: V218 = OR V217 V214
0x25c: S[0x0] = V218
0x25d: JUMP 0x61
---
Entry stack: [V11, 0x61, V64]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x25e
[0x25e:0x2b8]
---
Predecessors: [0xc0]
Successors: [0x61]
---
0x25e JUMPDEST
0x25f PUSH32 0x606bd383d36fb6a21cc52432fedf43ae990ef5625eb266d0ddf50cc9cc114c7a
0x280 CALLER
0x281 CALLVALUE
0x282 TIMESTAMP
0x283 PUSH1 0x40
0x285 MLOAD
0x286 DUP1
0x287 DUP5
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 AND
0x291 PUSH1 0x1
0x293 PUSH1 0xa0
0x295 PUSH1 0x2
0x297 EXP
0x298 SUB
0x299 AND
0x29a DUP2
0x29b MSTORE
0x29c PUSH1 0x20
0x29e ADD
0x29f DUP4
0x2a0 DUP2
0x2a1 MSTORE
0x2a2 PUSH1 0x20
0x2a4 ADD
0x2a5 DUP3
0x2a6 DUP2
0x2a7 MSTORE
0x2a8 PUSH1 0x20
0x2aa ADD
0x2ab SWAP4
0x2ac POP
0x2ad POP
0x2ae POP
0x2af POP
0x2b0 PUSH1 0x40
0x2b2 MLOAD
0x2b3 DUP1
0x2b4 SWAP2
0x2b5 SUB
0x2b6 SWAP1
0x2b7 LOG1
0x2b8 JUMP
---
0x25e: JUMPDEST 
0x25f: V219 = 0x606bd383d36fb6a21cc52432fedf43ae990ef5625eb266d0ddf50cc9cc114c7a
0x280: V220 = CALLER
0x281: V221 = CALLVALUE
0x282: V222 = TIMESTAMP
0x283: V223 = 0x40
0x285: V224 = M[0x40]
0x288: V225 = 0x1
0x28a: V226 = 0xa0
0x28c: V227 = 0x2
0x28e: V228 = EXP 0x2 0xa0
0x28f: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x291: V231 = 0x1
0x293: V232 = 0xa0
0x295: V233 = 0x2
0x297: V234 = EXP 0x2 0xa0
0x298: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x299: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x29b: M[V224] = V236
0x29c: V237 = 0x20
0x29e: V238 = ADD 0x20 V224
0x2a1: M[V238] = V221
0x2a2: V239 = 0x20
0x2a4: V240 = ADD 0x20 V238
0x2a7: M[V240] = V222
0x2a8: V241 = 0x20
0x2aa: V242 = ADD 0x20 V240
0x2b0: V243 = 0x40
0x2b2: V244 = M[0x40]
0x2b5: V245 = SUB V242 V244
0x2b7: LOG V244 V245 0x606bd383d36fb6a21cc52432fedf43ae990ef5625eb266d0ddf50cc9cc114c7a
0x2b8: JUMP 0x61
---
Entry stack: [V11, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b9
[0x2b9:0x2d1]
---
Predecessors: []
Successors: [0x2d2]
Has unresolved jump.
---
0x2b9 STOP
0x2ba LOG1
0x2bb PUSH6 0x627a7a723058
0x2c2 SHA3
0x2c3 MISSING 0xe7
0x2c4 MISSING 0xbc
0x2c5 MISSING 0xae
0x2c6 MISSING 0xbe
0x2c7 CALLCODE
0x2c8 GT
0x2c9 MISSING 0xa7
0x2ca EXP
0x2cb MISSING 0xd8
0x2cc MISSING 0xe8
0x2cd MISSING 0x27
0x2ce MISSING 0xe7
0x2cf MISSING 0x48
0x2d0 LOG3
0x2d1 JUMPI
---
0x2b9: STOP 
0x2ba: LOG S0 S1 S2
0x2bb: V246 = 0x627a7a723058
0x2c2: V247 = SHA3 0x627a7a723058 S3
0x2c3: MISSING 0xe7
0x2c4: MISSING 0xbc
0x2c5: MISSING 0xae
0x2c6: MISSING 0xbe
0x2c7: V248 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x2c8: V249 = GT V248 S7
0x2c9: MISSING 0xa7
0x2ca: V250 = EXP S0 S1
0x2cb: MISSING 0xd8
0x2cc: MISSING 0xe8
0x2cd: MISSING 0x27
0x2ce: MISSING 0xe7
0x2cf: MISSING 0x48
0x2d0: LOG S0 S1 S2 S3 S4
0x2d1: JUMPI S5 S6
---
Entry stack: []
Stack pops: 0
Stack additions: [V247, V249, V250]
Exit stack: []

================================

Block 0x2d2
[0x2d2:0x2e8]
---
Predecessors: [0x2b9]
Successors: []
---
0x2d2 SLOAD
0x2d3 MISSING 0xdd
0x2d4 DUP12
0x2d5 SWAP4
0x2d6 BALANCE
0x2d7 PUSH17 0x8745e5d4ec5b63bcc19fc50029
---
0x2d2: V251 = S[S0]
0x2d3: MISSING 0xdd
0x2d6: V252 = BALANCE S3
0x2d7: V253 = 0x8745e5d4ec5b63bcc19fc50029
---
Entry stack: []
Stack pops: 1
Stack additions: [0x8745e5d4ec5b63bcc19fc50029, V252, S0, S1, S2, S11, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Function 0:
Public function signature: 0x900f010
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0x6a, 0x6e, 0xc8, 0xe4, 0xe8, 0x1b4, 0x1b8, 0x1c1, 0x1c5

Function 1:
Public function signature: 0x3f5a0bdd
Entry block: 0x82
Exit block: 0x1f9
Body: 0x82, 0x89, 0x8d, 0x1cc, 0x1e8, 0x1ec, 0x1f9, 0x1fd

Function 2:
Public function signature: 0x79cb5a2f
Entry block: 0xa1
Exit block: 0x61
Body: 0x61, 0xa1, 0xa8, 0xac, 0x209, 0x225, 0x229

Function 3:
Public function signature: 0xa3912ec8
Entry block: 0xc0
Exit block: 0x61
Body: 0x61, 0xc0, 0x25e

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

