Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa4
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa4
0xc: JUMPI 0xa4 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xa9]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x43d726d6
0x3c EQ
0x3d PUSH2 0xa9
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x43d726d6
0x3c: V13 = EQ 0x43d726d6 V11
0x3d: V14 = 0xa9
0x40: JUMPI 0xa9 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xbe]
---
0x41 DUP1
0x42 PUSH4 0x521eb273
0x47 EQ
0x48 PUSH2 0xbe
0x4b JUMPI
---
0x42: V15 = 0x521eb273
0x47: V16 = EQ 0x521eb273 V11
0x48: V17 = 0xbe
0x4b: JUMPI 0xbe V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x113]
---
0x4c DUP1
0x4d PUSH4 0x8c52dc41
0x52 EQ
0x53 PUSH2 0x113
0x56 JUMPI
---
0x4d: V18 = 0x8c52dc41
0x52: V19 = EQ 0x8c52dc41 V11
0x53: V20 = 0x113
0x56: JUMPI 0x113 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x128]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0x128
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0x128
0x61: JUMPI 0x128 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x17d]
---
0x62 DUP1
0x63 PUSH4 0x9d735286
0x68 EQ
0x69 PUSH2 0x17d
0x6c JUMPI
---
0x63: V24 = 0x9d735286
0x68: V25 = EQ 0x9d735286 V11
0x69: V26 = 0x17d
0x6c: JUMPI 0x17d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x192]
---
0x6d DUP1
0x6e PUSH4 0xc19d93fb
0x73 EQ
0x74 PUSH2 0x192
0x77 JUMPI
---
0x6e: V27 = 0xc19d93fb
0x73: V28 = EQ 0xc19d93fb V11
0x74: V29 = 0x192
0x77: JUMPI 0x192 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x1c9]
---
0x78 DUP1
0x79 PUSH4 0xcb13cddb
0x7e EQ
0x7f PUSH2 0x1c9
0x82 JUMPI
---
0x79: V30 = 0xcb13cddb
0x7e: V31 = EQ 0xcb13cddb V11
0x7f: V32 = 0x1c9
0x82: JUMPI 0x1c9 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x216]
---
0x83 DUP1
0x84 PUSH4 0xf2fde38b
0x89 EQ
0x8a PUSH2 0x216
0x8d JUMPI
---
0x84: V33 = 0xf2fde38b
0x89: V34 = EQ 0xf2fde38b V11
0x8a: V35 = 0x216
0x8d: JUMPI 0x216 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x24f]
---
0x8e DUP1
0x8f PUSH4 0xf340fa01
0x94 EQ
0x95 PUSH2 0x24f
0x98 JUMPI
---
0x8f: V36 = 0xf340fa01
0x94: V37 = EQ 0xf340fa01 V11
0x95: V38 = 0x24f
0x98: JUMPI 0x24f V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x27d]
---
0x99 DUP1
0x9a PUSH4 0xfa89401a
0x9f EQ
0xa0 PUSH2 0x27d
0xa3 JUMPI
---
0x9a: V39 = 0xfa89401a
0x9f: V40 = EQ 0xfa89401a V11
0xa0: V41 = 0x27d
0xa3: JUMPI 0x27d V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xa8]
---
Predecessors: [0x0, 0x99]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x0
0xa7 DUP1
0xa8 REVERT
---
0xa4: JUMPDEST 
0xa5: V42 = 0x0
0xa8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa9
[0xa9:0xaf]
---
Predecessors: [0xd]
Successors: [0xb0, 0xb4]
---
0xa9 JUMPDEST
0xaa CALLVALUE
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa9: JUMPDEST 
0xaa: V43 = CALLVALUE
0xab: V44 = ISZERO V43
0xac: V45 = 0xb4
0xaf: JUMPI 0xb4 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa9]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V46 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb4
[0xb4:0xbb]
---
Predecessors: [0xa9]
Successors: [0x2b6]
---
0xb4 JUMPDEST
0xb5 PUSH2 0xbc
0xb8 PUSH2 0x2b6
0xbb JUMP
---
0xb4: JUMPDEST 
0xb5: V47 = 0xbc
0xb8: V48 = 0x2b6
0xbb: JUMP 0x2b6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbc]
Exit stack: [V11, 0xbc]

================================

Block 0xbc
[0xbc:0xbd]
---
Predecessors: [0x363]
Successors: []
---
0xbc JUMPDEST
0xbd STOP
---
0xbc: JUMPDEST 
0xbd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc4]
---
Predecessors: [0x41]
Successors: [0xc5, 0xc9]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 ISZERO
0xc1 PUSH2 0xc9
0xc4 JUMPI
---
0xbe: JUMPDEST 
0xbf: V49 = CALLVALUE
0xc0: V50 = ISZERO V49
0xc1: V51 = 0xc9
0xc4: JUMPI 0xc9 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xc8]
---
Predecessors: [0xbe]
Successors: []
---
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 REVERT
---
0xc5: V52 = 0x0
0xc8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0xbe]
Successors: [0x400]
---
0xc9 JUMPDEST
0xca PUSH2 0xd1
0xcd PUSH2 0x400
0xd0 JUMP
---
0xc9: JUMPDEST 
0xca: V53 = 0xd1
0xcd: V54 = 0x400
0xd0: JUMP 0x400
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V11, 0xd1]

================================

Block 0xd1
[0xd1:0x112]
---
Predecessors: [0x400]
Successors: []
---
0xd1 JUMPDEST
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 DUP1
0xd6 DUP3
0xd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec AND
0xed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x102 AND
0x103 DUP2
0x104 MSTORE
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP2
0x109 POP
0x10a POP
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f SWAP2
0x110 SUB
0x111 SWAP1
0x112 RETURN
---
0xd1: JUMPDEST 
0xd2: V55 = 0x40
0xd4: V56 = M[0x40]
0xd7: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xec: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0xed: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x102: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x104: M[V56] = V60
0x105: V61 = 0x20
0x107: V62 = ADD 0x20 V56
0x10b: V63 = 0x40
0x10d: V64 = M[0x40]
0x110: V65 = SUB V62 V64
0x112: RETURN V64 V65
---
Entry stack: [V11, 0xd1, V256]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd1]

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0x4c]
Successors: [0x11a, 0x11e]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x113: JUMPDEST 
0x114: V66 = CALLVALUE
0x115: V67 = ISZERO V66
0x116: V68 = 0x11e
0x119: JUMPI 0x11e V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x113]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V69 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11e
[0x11e:0x125]
---
Predecessors: [0x113]
Successors: [0x426]
---
0x11e JUMPDEST
0x11f PUSH2 0x126
0x122 PUSH2 0x426
0x125 JUMP
---
0x11e: JUMPDEST 
0x11f: V70 = 0x126
0x122: V71 = 0x426
0x125: JUMP 0x426
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x126
[0x126:0x127]
---
Predecessors: [0x4d4]
Successors: []
---
0x126 JUMPDEST
0x127 STOP
---
0x126: JUMPDEST 
0x127: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x128
[0x128:0x12e]
---
Predecessors: [0x57]
Successors: [0x12f, 0x133]
---
0x128 JUMPDEST
0x129 CALLVALUE
0x12a ISZERO
0x12b PUSH2 0x133
0x12e JUMPI
---
0x128: JUMPDEST 
0x129: V72 = CALLVALUE
0x12a: V73 = ISZERO V72
0x12b: V74 = 0x133
0x12e: JUMPI 0x133 V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x128]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V75 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x133
[0x133:0x13a]
---
Predecessors: [0x128]
Successors: [0x507]
---
0x133 JUMPDEST
0x134 PUSH2 0x13b
0x137 PUSH2 0x507
0x13a JUMP
---
0x133: JUMPDEST 
0x134: V76 = 0x13b
0x137: V77 = 0x507
0x13a: JUMP 0x507
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x13b]
Exit stack: [V11, 0x13b]

================================

Block 0x13b
[0x13b:0x17c]
---
Predecessors: [0x507]
Successors: []
---
0x13b JUMPDEST
0x13c PUSH1 0x40
0x13e MLOAD
0x13f DUP1
0x140 DUP3
0x141 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x156 AND
0x157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16c AND
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x20
0x171 ADD
0x172 SWAP2
0x173 POP
0x174 POP
0x175 PUSH1 0x40
0x177 MLOAD
0x178 DUP1
0x179 SWAP2
0x17a SUB
0x17b SWAP1
0x17c RETURN
---
0x13b: JUMPDEST 
0x13c: V78 = 0x40
0x13e: V79 = M[0x40]
0x141: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x156: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x157: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x16e: M[V79] = V83
0x16f: V84 = 0x20
0x171: V85 = ADD 0x20 V79
0x175: V86 = 0x40
0x177: V87 = M[0x40]
0x17a: V88 = SUB V85 V87
0x17c: RETURN V87 V88
---
Entry stack: [V11, 0x13b, V324]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x13b]

================================

Block 0x17d
[0x17d:0x183]
---
Predecessors: [0x62]
Successors: [0x184, 0x188]
---
0x17d JUMPDEST
0x17e CALLVALUE
0x17f ISZERO
0x180 PUSH2 0x188
0x183 JUMPI
---
0x17d: JUMPDEST 
0x17e: V89 = CALLVALUE
0x17f: V90 = ISZERO V89
0x180: V91 = 0x188
0x183: JUMPI 0x188 V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x17d]
Successors: []
---
0x184 PUSH1 0x0
0x186 DUP1
0x187 REVERT
---
0x184: V92 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x188
[0x188:0x18f]
---
Predecessors: [0x17d]
Successors: [0x52c]
---
0x188 JUMPDEST
0x189 PUSH2 0x190
0x18c PUSH2 0x52c
0x18f JUMP
---
0x188: JUMPDEST 
0x189: V93 = 0x190
0x18c: V94 = 0x52c
0x18f: JUMP 0x52c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V11, 0x190]

================================

Block 0x190
[0x190:0x191]
---
Predecessors: [0x5ad]
Successors: []
---
0x190 JUMPDEST
0x191 STOP
---
0x190: JUMPDEST 
0x191: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x192
[0x192:0x198]
---
Predecessors: [0x6d]
Successors: [0x199, 0x19d]
---
0x192 JUMPDEST
0x193 CALLVALUE
0x194 ISZERO
0x195 PUSH2 0x19d
0x198 JUMPI
---
0x192: JUMPDEST 
0x193: V95 = CALLVALUE
0x194: V96 = ISZERO V95
0x195: V97 = 0x19d
0x198: JUMPI 0x19d V96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x199
[0x199:0x19c]
---
Predecessors: [0x192]
Successors: []
---
0x199 PUSH1 0x0
0x19b DUP1
0x19c REVERT
---
0x199: V98 = 0x0
0x19c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19d
[0x19d:0x1a4]
---
Predecessors: [0x192]
Successors: [0x619]
---
0x19d JUMPDEST
0x19e PUSH2 0x1a5
0x1a1 PUSH2 0x619
0x1a4 JUMP
---
0x19d: JUMPDEST 
0x19e: V99 = 0x1a5
0x1a1: V100 = 0x619
0x1a4: JUMP 0x619
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1a5]
Exit stack: [V11, 0x1a5]

================================

Block 0x1a5
[0x1a5:0x1b3]
---
Predecessors: [0x619]
Successors: [0x1b4, 0x1b5]
---
0x1a5 JUMPDEST
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 DUP1
0x1aa DUP3
0x1ab PUSH1 0x2
0x1ad DUP2
0x1ae GT
0x1af ISZERO
0x1b0 PUSH2 0x1b5
0x1b3 JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V101 = 0x40
0x1a8: V102 = M[0x40]
0x1ab: V103 = 0x2
0x1ae: V104 = GT V383 0x2
0x1af: V105 = ISZERO V104
0x1b0: V106 = 0x1b5
0x1b3: JUMPI 0x1b5 V105
---
Entry stack: [V11, 0x1a5, V383]
Stack pops: 1
Stack additions: [S0, V102, V102, S0]
Exit stack: [V11, 0x1a5, V383, V102, V102, V383]

================================

Block 0x1b4
[0x1b4:0x1b4]
---
Predecessors: [0x1a5]
Successors: []
---
0x1b4 INVALID
---
0x1b4: INVALID 
---
Entry stack: [V11, 0x1a5, V383, V102, V102, V383]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a5, V383, V102, V102, V383]

================================

Block 0x1b5
[0x1b5:0x1c8]
---
Predecessors: [0x1a5]
Successors: []
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0xff
0x1b8 AND
0x1b9 DUP2
0x1ba MSTORE
0x1bb PUSH1 0x20
0x1bd ADD
0x1be SWAP2
0x1bf POP
0x1c0 POP
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 DUP1
0x1c5 SWAP2
0x1c6 SUB
0x1c7 SWAP1
0x1c8 RETURN
---
0x1b5: JUMPDEST 
0x1b6: V107 = 0xff
0x1b8: V108 = AND 0xff V383
0x1ba: M[V102] = V108
0x1bb: V109 = 0x20
0x1bd: V110 = ADD 0x20 V102
0x1c1: V111 = 0x40
0x1c3: V112 = M[0x40]
0x1c6: V113 = SUB V110 V112
0x1c8: RETURN V112 V113
---
Entry stack: [V11, 0x1a5, V383, V102, V102, V383]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x1a5]

================================

Block 0x1c9
[0x1c9:0x1cf]
---
Predecessors: [0x78]
Successors: [0x1d0, 0x1d4]
---
0x1c9 JUMPDEST
0x1ca CALLVALUE
0x1cb ISZERO
0x1cc PUSH2 0x1d4
0x1cf JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V114 = CALLVALUE
0x1cb: V115 = ISZERO V114
0x1cc: V116 = 0x1d4
0x1cf: JUMPI 0x1d4 V115
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d0
[0x1d0:0x1d3]
---
Predecessors: [0x1c9]
Successors: []
---
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 REVERT
---
0x1d0: V117 = 0x0
0x1d3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d4
[0x1d4:0x1ff]
---
Predecessors: [0x1c9]
Successors: [0x62c]
---
0x1d4 JUMPDEST
0x1d5 PUSH2 0x200
0x1d8 PUSH1 0x4
0x1da DUP1
0x1db DUP1
0x1dc CALLDATALOAD
0x1dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f2 AND
0x1f3 SWAP1
0x1f4 PUSH1 0x20
0x1f6 ADD
0x1f7 SWAP1
0x1f8 SWAP2
0x1f9 SWAP1
0x1fa POP
0x1fb POP
0x1fc PUSH2 0x62c
0x1ff JUMP
---
0x1d4: JUMPDEST 
0x1d5: V118 = 0x200
0x1d8: V119 = 0x4
0x1dc: V120 = CALLDATALOAD 0x4
0x1dd: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1f4: V123 = 0x20
0x1f6: V124 = ADD 0x20 0x4
0x1fc: V125 = 0x62c
0x1ff: JUMP 0x62c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x200, V122]
Exit stack: [V11, 0x200, V122]

================================

Block 0x200
[0x200:0x215]
---
Predecessors: [0x62c]
Successors: []
---
0x200 JUMPDEST
0x201 PUSH1 0x40
0x203 MLOAD
0x204 DUP1
0x205 DUP3
0x206 DUP2
0x207 MSTORE
0x208 PUSH1 0x20
0x20a ADD
0x20b SWAP2
0x20c POP
0x20d POP
0x20e PUSH1 0x40
0x210 MLOAD
0x211 DUP1
0x212 SWAP2
0x213 SUB
0x214 SWAP1
0x215 RETURN
---
0x200: JUMPDEST 
0x201: V126 = 0x40
0x203: V127 = M[0x40]
0x207: M[V127] = V391
0x208: V128 = 0x20
0x20a: V129 = ADD 0x20 V127
0x20e: V130 = 0x40
0x210: V131 = M[0x40]
0x213: V132 = SUB V129 V131
0x215: RETURN V131 V132
---
Entry stack: [V11, 0x200, V391]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x200]

================================

Block 0x216
[0x216:0x21c]
---
Predecessors: [0x83]
Successors: [0x21d, 0x221]
---
0x216 JUMPDEST
0x217 CALLVALUE
0x218 ISZERO
0x219 PUSH2 0x221
0x21c JUMPI
---
0x216: JUMPDEST 
0x217: V133 = CALLVALUE
0x218: V134 = ISZERO V133
0x219: V135 = 0x221
0x21c: JUMPI 0x221 V134
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x21d
[0x21d:0x220]
---
Predecessors: [0x216]
Successors: []
---
0x21d PUSH1 0x0
0x21f DUP1
0x220 REVERT
---
0x21d: V136 = 0x0
0x220: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x221
[0x221:0x24c]
---
Predecessors: [0x216]
Successors: [0x644]
---
0x221 JUMPDEST
0x222 PUSH2 0x24d
0x225 PUSH1 0x4
0x227 DUP1
0x228 DUP1
0x229 CALLDATALOAD
0x22a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23f AND
0x240 SWAP1
0x241 PUSH1 0x20
0x243 ADD
0x244 SWAP1
0x245 SWAP2
0x246 SWAP1
0x247 POP
0x248 POP
0x249 PUSH2 0x644
0x24c JUMP
---
0x221: JUMPDEST 
0x222: V137 = 0x24d
0x225: V138 = 0x4
0x229: V139 = CALLDATALOAD 0x4
0x22a: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x241: V142 = 0x20
0x243: V143 = ADD 0x20 0x4
0x249: V144 = 0x644
0x24c: JUMP 0x644
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x24d, V141]
Exit stack: [V11, 0x24d, V141]

================================

Block 0x24d
[0x24d:0x24e]
---
Predecessors: [0x6db]
Successors: []
---
0x24d JUMPDEST
0x24e STOP
---
0x24d: JUMPDEST 
0x24e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x24f
[0x24f:0x27a]
---
Predecessors: [0x8e]
Successors: [0x799]
---
0x24f JUMPDEST
0x250 PUSH2 0x27b
0x253 PUSH1 0x4
0x255 DUP1
0x256 DUP1
0x257 CALLDATALOAD
0x258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26d AND
0x26e SWAP1
0x26f PUSH1 0x20
0x271 ADD
0x272 SWAP1
0x273 SWAP2
0x274 SWAP1
0x275 POP
0x276 POP
0x277 PUSH2 0x799
0x27a JUMP
---
0x24f: JUMPDEST 
0x250: V145 = 0x27b
0x253: V146 = 0x4
0x257: V147 = CALLDATALOAD 0x4
0x258: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x26f: V150 = 0x20
0x271: V151 = ADD 0x20 0x4
0x277: V152 = 0x799
0x27a: JUMP 0x799
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x27b, V149]
Exit stack: [V11, 0x27b, V149]

================================

Block 0x27b
[0x27b:0x27c]
---
Predecessors: [0x87a]
Successors: []
---
0x27b JUMPDEST
0x27c STOP
---
0x27b: JUMPDEST 
0x27c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x27d
[0x27d:0x283]
---
Predecessors: [0x99]
Successors: [0x284, 0x288]
---
0x27d JUMPDEST
0x27e CALLVALUE
0x27f ISZERO
0x280 PUSH2 0x288
0x283 JUMPI
---
0x27d: JUMPDEST 
0x27e: V153 = CALLVALUE
0x27f: V154 = ISZERO V153
0x280: V155 = 0x288
0x283: JUMPI 0x288 V154
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x27d]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V156 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x288
[0x288:0x2b3]
---
Predecessors: [0x27d]
Successors: [0x8c0]
---
0x288 JUMPDEST
0x289 PUSH2 0x2b4
0x28c PUSH1 0x4
0x28e DUP1
0x28f DUP1
0x290 CALLDATALOAD
0x291 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a6 AND
0x2a7 SWAP1
0x2a8 PUSH1 0x20
0x2aa ADD
0x2ab SWAP1
0x2ac SWAP2
0x2ad SWAP1
0x2ae POP
0x2af POP
0x2b0 PUSH2 0x8c0
0x2b3 JUMP
---
0x288: JUMPDEST 
0x289: V157 = 0x2b4
0x28c: V158 = 0x4
0x290: V159 = CALLDATALOAD 0x4
0x291: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a6: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x2a8: V162 = 0x20
0x2aa: V163 = ADD 0x20 0x4
0x2b0: V164 = 0x8c0
0x2b3: JUMP 0x8c0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2b4, V161]
Exit stack: [V11, 0x2b4, V161]

================================

Block 0x2b4
[0x2b4:0x2b5]
---
Predecessors: [0x9bd]
Successors: []
---
0x2b4 JUMPDEST
0x2b5 STOP
---
0x2b4: JUMPDEST 
0x2b5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b6
[0x2b6:0x30c]
---
Predecessors: [0xb4]
Successors: [0x30d, 0x311]
---
0x2b6 JUMPDEST
0x2b7 PUSH1 0x0
0x2b9 DUP1
0x2ba SWAP1
0x2bb SLOAD
0x2bc SWAP1
0x2bd PUSH2 0x100
0x2c0 EXP
0x2c1 SWAP1
0x2c2 DIV
0x2c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d8 AND
0x2d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ee AND
0x2ef CALLER
0x2f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x305 AND
0x306 EQ
0x307 ISZERO
0x308 ISZERO
0x309 PUSH2 0x311
0x30c JUMPI
---
0x2b6: JUMPDEST 
0x2b7: V165 = 0x0
0x2bb: V166 = S[0x0]
0x2bd: V167 = 0x100
0x2c0: V168 = EXP 0x100 0x0
0x2c2: V169 = DIV V166 0x1
0x2c3: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d8: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2d9: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x2ef: V174 = CALLER
0x2f0: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x305: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x306: V177 = EQ V176 V173
0x307: V178 = ISZERO V177
0x308: V179 = ISZERO V178
0x309: V180 = 0x311
0x30c: JUMPI 0x311 V179
---
Entry stack: [V11, 0xbc]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc]

================================

Block 0x30d
[0x30d:0x310]
---
Predecessors: [0x2b6]
Successors: []
---
0x30d PUSH1 0x0
0x30f DUP1
0x310 REVERT
---
0x30d: V181 = 0x0
0x310: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc]

================================

Block 0x311
[0x311:0x31c]
---
Predecessors: [0x2b6]
Successors: [0x31d, 0x31e]
---
0x311 JUMPDEST
0x312 PUSH1 0x0
0x314 PUSH1 0x2
0x316 DUP2
0x317 GT
0x318 ISZERO
0x319 PUSH2 0x31e
0x31c JUMPI
---
0x311: JUMPDEST 
0x312: V182 = 0x0
0x314: V183 = 0x2
0x317: V184 = GT 0x0 0x2
0x318: V185 = ISZERO 0x0
0x319: V186 = 0x31e
0x31c: JUMPI 0x31e 0x1
---
Entry stack: [V11, 0xbc]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xbc, 0x0]

================================

Block 0x31d
[0x31d:0x31d]
---
Predecessors: [0x311]
Successors: []
---
0x31d INVALID
---
0x31d: INVALID 
---
Entry stack: [V11, 0xbc, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, 0x0]

================================

Block 0x31e
[0x31e:0x337]
---
Predecessors: [0x311]
Successors: [0x338, 0x339]
---
0x31e JUMPDEST
0x31f PUSH1 0x2
0x321 PUSH1 0x14
0x323 SWAP1
0x324 SLOAD
0x325 SWAP1
0x326 PUSH2 0x100
0x329 EXP
0x32a SWAP1
0x32b DIV
0x32c PUSH1 0xff
0x32e AND
0x32f PUSH1 0x2
0x331 DUP2
0x332 GT
0x333 ISZERO
0x334 PUSH2 0x339
0x337 JUMPI
---
0x31e: JUMPDEST 
0x31f: V187 = 0x2
0x321: V188 = 0x14
0x324: V189 = S[0x2]
0x326: V190 = 0x100
0x329: V191 = EXP 0x100 0x14
0x32b: V192 = DIV V189 0x10000000000000000000000000000000000000000
0x32c: V193 = 0xff
0x32e: V194 = AND 0xff V192
0x32f: V195 = 0x2
0x332: V196 = GT V194 0x2
0x333: V197 = ISZERO V196
0x334: V198 = 0x339
0x337: JUMPI 0x339 V197
---
Entry stack: [V11, 0xbc, 0x0]
Stack pops: 0
Stack additions: [V194]
Exit stack: [V11, 0xbc, 0x0, V194]

================================

Block 0x338
[0x338:0x338]
---
Predecessors: [0x31e]
Successors: []
---
0x338 INVALID
---
0x338: INVALID 
---
Entry stack: [V11, 0xbc, 0x0, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, 0x0, V194]

================================

Block 0x339
[0x339:0x340]
---
Predecessors: [0x31e]
Successors: [0x341, 0x345]
---
0x339 JUMPDEST
0x33a EQ
0x33b ISZERO
0x33c ISZERO
0x33d PUSH2 0x345
0x340 JUMPI
---
0x339: JUMPDEST 
0x33a: V199 = EQ V194 0x0
0x33b: V200 = ISZERO V199
0x33c: V201 = ISZERO V200
0x33d: V202 = 0x345
0x340: JUMPI 0x345 V201
---
Entry stack: [V11, 0xbc, 0x0, V194]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xbc]

================================

Block 0x341
[0x341:0x344]
---
Predecessors: [0x339]
Successors: []
---
0x341 PUSH1 0x0
0x343 DUP1
0x344 REVERT
---
0x341: V203 = 0x0
0x344: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc]

================================

Block 0x345
[0x345:0x361]
---
Predecessors: [0x339]
Successors: [0x362, 0x363]
---
0x345 JUMPDEST
0x346 PUSH1 0x2
0x348 DUP1
0x349 PUSH1 0x14
0x34b PUSH2 0x100
0x34e EXP
0x34f DUP2
0x350 SLOAD
0x351 DUP2
0x352 PUSH1 0xff
0x354 MUL
0x355 NOT
0x356 AND
0x357 SWAP1
0x358 DUP4
0x359 PUSH1 0x2
0x35b DUP2
0x35c GT
0x35d ISZERO
0x35e PUSH2 0x363
0x361 JUMPI
---
0x345: JUMPDEST 
0x346: V204 = 0x2
0x349: V205 = 0x14
0x34b: V206 = 0x100
0x34e: V207 = EXP 0x100 0x14
0x350: V208 = S[0x2]
0x352: V209 = 0xff
0x354: V210 = MUL 0xff 0x10000000000000000000000000000000000000000
0x355: V211 = NOT 0xff0000000000000000000000000000000000000000
0x356: V212 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V208
0x359: V213 = 0x2
0x35c: V214 = GT 0x2 0x2
0x35d: V215 = ISZERO 0x0
0x35e: V216 = 0x363
0x361: JUMPI 0x363 0x1
---
Entry stack: [V11, 0xbc]
Stack pops: 0
Stack additions: [0x2, 0x2, V212, 0x10000000000000000000000000000000000000000, 0x2]
Exit stack: [V11, 0xbc, 0x2, 0x2, V212, 0x10000000000000000000000000000000000000000, 0x2]

================================

Block 0x362
[0x362:0x362]
---
Predecessors: [0x345]
Successors: []
---
0x362 INVALID
---
0x362: INVALID 
---
Entry stack: [V11, 0xbc, 0x2, 0x2, V212, 0x10000000000000000000000000000000000000000, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, 0x2, 0x2, V212, 0x10000000000000000000000000000000000000000, 0x2]

================================

Block 0x363
[0x363:0x3ff]
---
Predecessors: [0x345]
Successors: [0xbc]
---
0x363 JUMPDEST
0x364 MUL
0x365 OR
0x366 SWAP1
0x367 SSTORE
0x368 POP
0x369 PUSH32 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x38a PUSH1 0x40
0x38c MLOAD
0x38d PUSH1 0x40
0x38f MLOAD
0x390 DUP1
0x391 SWAP2
0x392 SUB
0x393 SWAP1
0x394 LOG1
0x395 PUSH1 0x2
0x397 PUSH1 0x0
0x399 SWAP1
0x39a SLOAD
0x39b SWAP1
0x39c PUSH2 0x100
0x39f EXP
0x3a0 SWAP1
0x3a1 DIV
0x3a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b7 AND
0x3b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cd AND
0x3ce ADDRESS
0x3cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e4 AND
0x3e5 BALANCE
0x3e6 PUSH1 0x40
0x3e8 MLOAD
0x3e9 PUSH1 0x0
0x3eb PUSH1 0x40
0x3ed MLOAD
0x3ee DUP1
0x3ef DUP4
0x3f0 SUB
0x3f1 DUP2
0x3f2 DUP6
0x3f3 DUP8
0x3f4 PUSH2 0x8796
0x3f7 GAS
0x3f8 SUB
0x3f9 CALL
0x3fa SWAP3
0x3fb POP
0x3fc POP
0x3fd POP
0x3fe POP
0x3ff JUMP
---
0x363: JUMPDEST 
0x364: V217 = MUL 0x2 0x10000000000000000000000000000000000000000
0x365: V218 = OR 0x20000000000000000000000000000000000000000 V212
0x367: S[0x2] = V218
0x369: V219 = 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x38a: V220 = 0x40
0x38c: V221 = M[0x40]
0x38d: V222 = 0x40
0x38f: V223 = M[0x40]
0x392: V224 = SUB V221 V223
0x394: LOG V223 V224 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x395: V225 = 0x2
0x397: V226 = 0x0
0x39a: V227 = S[0x2]
0x39c: V228 = 0x100
0x39f: V229 = EXP 0x100 0x0
0x3a1: V230 = DIV V227 0x1
0x3a2: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x3b8: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x3ce: V235 = ADDRESS
0x3cf: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e4: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x3e5: V238 = BALANCE V237
0x3e6: V239 = 0x40
0x3e8: V240 = M[0x40]
0x3e9: V241 = 0x0
0x3eb: V242 = 0x40
0x3ed: V243 = M[0x40]
0x3f0: V244 = SUB V240 V243
0x3f4: V245 = 0x8796
0x3f7: V246 = GAS
0x3f8: V247 = SUB V246 0x8796
0x3f9: V248 = CALL V247 V234 V238 V243 V244 V243 0x0
0x3ff: JUMP 0xbc
---
Entry stack: [V11, 0xbc, 0x2, 0x2, V212, 0x10000000000000000000000000000000000000000, 0x2]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x400
[0x400:0x425]
---
Predecessors: [0xc9]
Successors: [0xd1]
---
0x400 JUMPDEST
0x401 PUSH1 0x2
0x403 PUSH1 0x0
0x405 SWAP1
0x406 SLOAD
0x407 SWAP1
0x408 PUSH2 0x100
0x40b EXP
0x40c SWAP1
0x40d DIV
0x40e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x423 AND
0x424 DUP2
0x425 JUMP
---
0x400: JUMPDEST 
0x401: V249 = 0x2
0x403: V250 = 0x0
0x406: V251 = S[0x2]
0x408: V252 = 0x100
0x40b: V253 = EXP 0x100 0x0
0x40d: V254 = DIV V251 0x1
0x40e: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x423: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x425: JUMP 0xd1
---
Entry stack: [V11, 0xd1]
Stack pops: 1
Stack additions: [S0, V256]
Exit stack: [V11, 0xd1, V256]

================================

Block 0x426
[0x426:0x47c]
---
Predecessors: [0x11e]
Successors: [0x47d, 0x481]
---
0x426 JUMPDEST
0x427 PUSH1 0x0
0x429 DUP1
0x42a SWAP1
0x42b SLOAD
0x42c SWAP1
0x42d PUSH2 0x100
0x430 EXP
0x431 SWAP1
0x432 DIV
0x433 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x448 AND
0x449 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45e AND
0x45f CALLER
0x460 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x475 AND
0x476 EQ
0x477 ISZERO
0x478 ISZERO
0x479 PUSH2 0x481
0x47c JUMPI
---
0x426: JUMPDEST 
0x427: V257 = 0x0
0x42b: V258 = S[0x0]
0x42d: V259 = 0x100
0x430: V260 = EXP 0x100 0x0
0x432: V261 = DIV V258 0x1
0x433: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x448: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x449: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x45f: V266 = CALLER
0x460: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x475: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x476: V269 = EQ V268 V265
0x477: V270 = ISZERO V269
0x478: V271 = ISZERO V270
0x479: V272 = 0x481
0x47c: JUMPI 0x481 V271
---
Entry stack: [V11, 0x126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126]

================================

Block 0x47d
[0x47d:0x480]
---
Predecessors: [0x426]
Successors: []
---
0x47d PUSH1 0x0
0x47f DUP1
0x480 REVERT
---
0x47d: V273 = 0x0
0x480: REVERT 0x0 0x0
---
Entry stack: [V11, 0x126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126]

================================

Block 0x481
[0x481:0x48c]
---
Predecessors: [0x426]
Successors: [0x48d, 0x48e]
---
0x481 JUMPDEST
0x482 PUSH1 0x0
0x484 PUSH1 0x2
0x486 DUP2
0x487 GT
0x488 ISZERO
0x489 PUSH2 0x48e
0x48c JUMPI
---
0x481: JUMPDEST 
0x482: V274 = 0x0
0x484: V275 = 0x2
0x487: V276 = GT 0x0 0x2
0x488: V277 = ISZERO 0x0
0x489: V278 = 0x48e
0x48c: JUMPI 0x48e 0x1
---
Entry stack: [V11, 0x126]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x126, 0x0]

================================

Block 0x48d
[0x48d:0x48d]
---
Predecessors: [0x481]
Successors: []
---
0x48d INVALID
---
0x48d: INVALID 
---
Entry stack: [V11, 0x126, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126, 0x0]

================================

Block 0x48e
[0x48e:0x4a7]
---
Predecessors: [0x481]
Successors: [0x4a8, 0x4a9]
---
0x48e JUMPDEST
0x48f PUSH1 0x2
0x491 PUSH1 0x14
0x493 SWAP1
0x494 SLOAD
0x495 SWAP1
0x496 PUSH2 0x100
0x499 EXP
0x49a SWAP1
0x49b DIV
0x49c PUSH1 0xff
0x49e AND
0x49f PUSH1 0x2
0x4a1 DUP2
0x4a2 GT
0x4a3 ISZERO
0x4a4 PUSH2 0x4a9
0x4a7 JUMPI
---
0x48e: JUMPDEST 
0x48f: V279 = 0x2
0x491: V280 = 0x14
0x494: V281 = S[0x2]
0x496: V282 = 0x100
0x499: V283 = EXP 0x100 0x14
0x49b: V284 = DIV V281 0x10000000000000000000000000000000000000000
0x49c: V285 = 0xff
0x49e: V286 = AND 0xff V284
0x49f: V287 = 0x2
0x4a2: V288 = GT V286 0x2
0x4a3: V289 = ISZERO V288
0x4a4: V290 = 0x4a9
0x4a7: JUMPI 0x4a9 V289
---
Entry stack: [V11, 0x126, 0x0]
Stack pops: 0
Stack additions: [V286]
Exit stack: [V11, 0x126, 0x0, V286]

================================

Block 0x4a8
[0x4a8:0x4a8]
---
Predecessors: [0x48e]
Successors: []
---
0x4a8 INVALID
---
0x4a8: INVALID 
---
Entry stack: [V11, 0x126, 0x0, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126, 0x0, V286]

================================

Block 0x4a9
[0x4a9:0x4b0]
---
Predecessors: [0x48e]
Successors: [0x4b1, 0x4b5]
---
0x4a9 JUMPDEST
0x4aa EQ
0x4ab ISZERO
0x4ac ISZERO
0x4ad PUSH2 0x4b5
0x4b0 JUMPI
---
0x4a9: JUMPDEST 
0x4aa: V291 = EQ V286 0x0
0x4ab: V292 = ISZERO V291
0x4ac: V293 = ISZERO V292
0x4ad: V294 = 0x4b5
0x4b0: JUMPI 0x4b5 V293
---
Entry stack: [V11, 0x126, 0x0, V286]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x126]

================================

Block 0x4b1
[0x4b1:0x4b4]
---
Predecessors: [0x4a9]
Successors: []
---
0x4b1 PUSH1 0x0
0x4b3 DUP1
0x4b4 REVERT
---
0x4b1: V295 = 0x0
0x4b4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126]

================================

Block 0x4b5
[0x4b5:0x4d2]
---
Predecessors: [0x4a9]
Successors: [0x4d3, 0x4d4]
---
0x4b5 JUMPDEST
0x4b6 PUSH1 0x1
0x4b8 PUSH1 0x2
0x4ba PUSH1 0x14
0x4bc PUSH2 0x100
0x4bf EXP
0x4c0 DUP2
0x4c1 SLOAD
0x4c2 DUP2
0x4c3 PUSH1 0xff
0x4c5 MUL
0x4c6 NOT
0x4c7 AND
0x4c8 SWAP1
0x4c9 DUP4
0x4ca PUSH1 0x2
0x4cc DUP2
0x4cd GT
0x4ce ISZERO
0x4cf PUSH2 0x4d4
0x4d2 JUMPI
---
0x4b5: JUMPDEST 
0x4b6: V296 = 0x1
0x4b8: V297 = 0x2
0x4ba: V298 = 0x14
0x4bc: V299 = 0x100
0x4bf: V300 = EXP 0x100 0x14
0x4c1: V301 = S[0x2]
0x4c3: V302 = 0xff
0x4c5: V303 = MUL 0xff 0x10000000000000000000000000000000000000000
0x4c6: V304 = NOT 0xff0000000000000000000000000000000000000000
0x4c7: V305 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V301
0x4ca: V306 = 0x2
0x4cd: V307 = GT 0x1 0x2
0x4ce: V308 = ISZERO 0x0
0x4cf: V309 = 0x4d4
0x4d2: JUMPI 0x4d4 0x1
---
Entry stack: [V11, 0x126]
Stack pops: 0
Stack additions: [0x1, 0x2, V305, 0x10000000000000000000000000000000000000000, 0x1]
Exit stack: [V11, 0x126, 0x1, 0x2, V305, 0x10000000000000000000000000000000000000000, 0x1]

================================

Block 0x4d3
[0x4d3:0x4d3]
---
Predecessors: [0x4b5]
Successors: []
---
0x4d3 INVALID
---
0x4d3: INVALID 
---
Entry stack: [V11, 0x126, 0x1, 0x2, V305, 0x10000000000000000000000000000000000000000, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x126, 0x1, 0x2, V305, 0x10000000000000000000000000000000000000000, 0x1]

================================

Block 0x4d4
[0x4d4:0x506]
---
Predecessors: [0x4b5]
Successors: [0x126]
---
0x4d4 JUMPDEST
0x4d5 MUL
0x4d6 OR
0x4d7 SWAP1
0x4d8 SSTORE
0x4d9 POP
0x4da PUSH32 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x4fb PUSH1 0x40
0x4fd MLOAD
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 DUP1
0x502 SWAP2
0x503 SUB
0x504 SWAP1
0x505 LOG1
0x506 JUMP
---
0x4d4: JUMPDEST 
0x4d5: V310 = MUL 0x1 0x10000000000000000000000000000000000000000
0x4d6: V311 = OR 0x10000000000000000000000000000000000000000 V305
0x4d8: S[0x2] = V311
0x4da: V312 = 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x4fb: V313 = 0x40
0x4fd: V314 = M[0x40]
0x4fe: V315 = 0x40
0x500: V316 = M[0x40]
0x503: V317 = SUB V314 V316
0x505: LOG V316 V317 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x506: JUMP 0x126
---
Entry stack: [V11, 0x126, 0x1, 0x2, V305, 0x10000000000000000000000000000000000000000, 0x1]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x507
[0x507:0x52b]
---
Predecessors: [0x133]
Successors: [0x13b]
---
0x507 JUMPDEST
0x508 PUSH1 0x0
0x50a DUP1
0x50b SWAP1
0x50c SLOAD
0x50d SWAP1
0x50e PUSH2 0x100
0x511 EXP
0x512 SWAP1
0x513 DIV
0x514 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x529 AND
0x52a DUP2
0x52b JUMP
---
0x507: JUMPDEST 
0x508: V318 = 0x0
0x50c: V319 = S[0x0]
0x50e: V320 = 0x100
0x511: V321 = EXP 0x100 0x0
0x513: V322 = DIV V319 0x1
0x514: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x529: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x52b: JUMP 0x13b
---
Entry stack: [V11, 0x13b]
Stack pops: 1
Stack additions: [S0, V324]
Exit stack: [V11, 0x13b, V324]

================================

Block 0x52c
[0x52c:0x582]
---
Predecessors: [0x188]
Successors: [0x583, 0x587]
---
0x52c JUMPDEST
0x52d PUSH1 0x0
0x52f DUP1
0x530 SWAP1
0x531 SLOAD
0x532 SWAP1
0x533 PUSH2 0x100
0x536 EXP
0x537 SWAP1
0x538 DIV
0x539 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54e AND
0x54f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x564 AND
0x565 CALLER
0x566 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57b AND
0x57c EQ
0x57d ISZERO
0x57e ISZERO
0x57f PUSH2 0x587
0x582 JUMPI
---
0x52c: JUMPDEST 
0x52d: V325 = 0x0
0x531: V326 = S[0x0]
0x533: V327 = 0x100
0x536: V328 = EXP 0x100 0x0
0x538: V329 = DIV V326 0x1
0x539: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x54e: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x54f: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x564: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x565: V334 = CALLER
0x566: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x57b: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x57c: V337 = EQ V336 V333
0x57d: V338 = ISZERO V337
0x57e: V339 = ISZERO V338
0x57f: V340 = 0x587
0x582: JUMPI 0x587 V339
---
Entry stack: [V11, 0x190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x190]

================================

Block 0x583
[0x583:0x586]
---
Predecessors: [0x52c]
Successors: []
---
0x583 PUSH1 0x0
0x585 DUP1
0x586 REVERT
---
0x583: V341 = 0x0
0x586: REVERT 0x0 0x0
---
Entry stack: [V11, 0x190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x190]

================================

Block 0x587
[0x587:0x5a8]
---
Predecessors: [0x52c]
Successors: [0x5a9, 0x5ad]
---
0x587 JUMPDEST
0x588 PUSH1 0x0
0x58a ADDRESS
0x58b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a0 AND
0x5a1 BALANCE
0x5a2 GT
0x5a3 ISZERO
0x5a4 ISZERO
0x5a5 PUSH2 0x5ad
0x5a8 JUMPI
---
0x587: JUMPDEST 
0x588: V342 = 0x0
0x58a: V343 = ADDRESS
0x58b: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a0: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x5a1: V346 = BALANCE V345
0x5a2: V347 = GT V346 0x0
0x5a3: V348 = ISZERO V347
0x5a4: V349 = ISZERO V348
0x5a5: V350 = 0x5ad
0x5a8: JUMPI 0x5ad V349
---
Entry stack: [V11, 0x190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x190]

================================

Block 0x5a9
[0x5a9:0x5ac]
---
Predecessors: [0x587]
Successors: []
---
0x5a9 PUSH1 0x0
0x5ab DUP1
0x5ac REVERT
---
0x5a9: V351 = 0x0
0x5ac: REVERT 0x0 0x0
---
Entry stack: [V11, 0x190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x190]

================================

Block 0x5ad
[0x5ad:0x618]
---
Predecessors: [0x587]
Successors: [0x190]
---
0x5ad JUMPDEST
0x5ae PUSH1 0x2
0x5b0 PUSH1 0x0
0x5b2 SWAP1
0x5b3 SLOAD
0x5b4 SWAP1
0x5b5 PUSH2 0x100
0x5b8 EXP
0x5b9 SWAP1
0x5ba DIV
0x5bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d0 AND
0x5d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e6 AND
0x5e7 ADDRESS
0x5e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fd AND
0x5fe BALANCE
0x5ff PUSH1 0x40
0x601 MLOAD
0x602 PUSH1 0x0
0x604 PUSH1 0x40
0x606 MLOAD
0x607 DUP1
0x608 DUP4
0x609 SUB
0x60a DUP2
0x60b DUP6
0x60c DUP8
0x60d PUSH2 0x8796
0x610 GAS
0x611 SUB
0x612 CALL
0x613 SWAP3
0x614 POP
0x615 POP
0x616 POP
0x617 POP
0x618 JUMP
---
0x5ad: JUMPDEST 
0x5ae: V352 = 0x2
0x5b0: V353 = 0x0
0x5b3: V354 = S[0x2]
0x5b5: V355 = 0x100
0x5b8: V356 = EXP 0x100 0x0
0x5ba: V357 = DIV V354 0x1
0x5bb: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d0: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x5d1: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e6: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x5e7: V362 = ADDRESS
0x5e8: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fd: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x5fe: V365 = BALANCE V364
0x5ff: V366 = 0x40
0x601: V367 = M[0x40]
0x602: V368 = 0x0
0x604: V369 = 0x40
0x606: V370 = M[0x40]
0x609: V371 = SUB V367 V370
0x60d: V372 = 0x8796
0x610: V373 = GAS
0x611: V374 = SUB V373 0x8796
0x612: V375 = CALL V374 V361 V365 V370 V371 V370 0x0
0x618: JUMP 0x190
---
Entry stack: [V11, 0x190]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x619
[0x619:0x62b]
---
Predecessors: [0x19d]
Successors: [0x1a5]
---
0x619 JUMPDEST
0x61a PUSH1 0x2
0x61c PUSH1 0x14
0x61e SWAP1
0x61f SLOAD
0x620 SWAP1
0x621 PUSH2 0x100
0x624 EXP
0x625 SWAP1
0x626 DIV
0x627 PUSH1 0xff
0x629 AND
0x62a DUP2
0x62b JUMP
---
0x619: JUMPDEST 
0x61a: V376 = 0x2
0x61c: V377 = 0x14
0x61f: V378 = S[0x2]
0x621: V379 = 0x100
0x624: V380 = EXP 0x100 0x14
0x626: V381 = DIV V378 0x10000000000000000000000000000000000000000
0x627: V382 = 0xff
0x629: V383 = AND 0xff V381
0x62b: JUMP 0x1a5
---
Entry stack: [V11, 0x1a5]
Stack pops: 1
Stack additions: [S0, V383]
Exit stack: [V11, 0x1a5, V383]

================================

Block 0x62c
[0x62c:0x643]
---
Predecessors: [0x1d4]
Successors: [0x200]
---
0x62c JUMPDEST
0x62d PUSH1 0x1
0x62f PUSH1 0x20
0x631 MSTORE
0x632 DUP1
0x633 PUSH1 0x0
0x635 MSTORE
0x636 PUSH1 0x40
0x638 PUSH1 0x0
0x63a SHA3
0x63b PUSH1 0x0
0x63d SWAP2
0x63e POP
0x63f SWAP1
0x640 POP
0x641 SLOAD
0x642 DUP2
0x643 JUMP
---
0x62c: JUMPDEST 
0x62d: V384 = 0x1
0x62f: V385 = 0x20
0x631: M[0x20] = 0x1
0x633: V386 = 0x0
0x635: M[0x0] = V122
0x636: V387 = 0x40
0x638: V388 = 0x0
0x63a: V389 = SHA3 0x0 0x40
0x63b: V390 = 0x0
0x641: V391 = S[V389]
0x643: JUMP 0x200
---
Entry stack: [V11, 0x200, V122]
Stack pops: 2
Stack additions: [S1, V391]
Exit stack: [V11, 0x200, V391]

================================

Block 0x644
[0x644:0x69a]
---
Predecessors: [0x221]
Successors: [0x69b, 0x69f]
---
0x644 JUMPDEST
0x645 PUSH1 0x0
0x647 DUP1
0x648 SWAP1
0x649 SLOAD
0x64a SWAP1
0x64b PUSH2 0x100
0x64e EXP
0x64f SWAP1
0x650 DIV
0x651 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x666 AND
0x667 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67c AND
0x67d CALLER
0x67e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x693 AND
0x694 EQ
0x695 ISZERO
0x696 ISZERO
0x697 PUSH2 0x69f
0x69a JUMPI
---
0x644: JUMPDEST 
0x645: V392 = 0x0
0x649: V393 = S[0x0]
0x64b: V394 = 0x100
0x64e: V395 = EXP 0x100 0x0
0x650: V396 = DIV V393 0x1
0x651: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x666: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x667: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x67c: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x67d: V401 = CALLER
0x67e: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x693: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x694: V404 = EQ V403 V400
0x695: V405 = ISZERO V404
0x696: V406 = ISZERO V405
0x697: V407 = 0x69f
0x69a: JUMPI 0x69f V406
---
Entry stack: [V11, 0x24d, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x24d, V141]

================================

Block 0x69b
[0x69b:0x69e]
---
Predecessors: [0x644]
Successors: []
---
0x69b PUSH1 0x0
0x69d DUP1
0x69e REVERT
---
0x69b: V408 = 0x0
0x69e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x24d, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x24d, V141]

================================

Block 0x69f
[0x69f:0x6d6]
---
Predecessors: [0x644]
Successors: [0x6d7, 0x6db]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x0
0x6a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b7 AND
0x6b8 DUP2
0x6b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ce AND
0x6cf EQ
0x6d0 ISZERO
0x6d1 ISZERO
0x6d2 ISZERO
0x6d3 PUSH2 0x6db
0x6d6 JUMPI
---
0x69f: JUMPDEST 
0x6a0: V409 = 0x0
0x6a2: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x6b9: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ce: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x6cf: V414 = EQ V413 0x0
0x6d0: V415 = ISZERO V414
0x6d1: V416 = ISZERO V415
0x6d2: V417 = ISZERO V416
0x6d3: V418 = 0x6db
0x6d6: JUMPI 0x6db V417
---
Entry stack: [V11, 0x24d, V141]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x24d, V141]

================================

Block 0x6d7
[0x6d7:0x6da]
---
Predecessors: [0x69f]
Successors: []
---
0x6d7 PUSH1 0x0
0x6d9 DUP1
0x6da REVERT
---
0x6d7: V419 = 0x0
0x6da: REVERT 0x0 0x0
---
Entry stack: [V11, 0x24d, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x24d, V141]

================================

Block 0x6db
[0x6db:0x798]
---
Predecessors: [0x69f]
Successors: [0x24d]
---
0x6db JUMPDEST
0x6dc DUP1
0x6dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f2 AND
0x6f3 PUSH1 0x0
0x6f5 DUP1
0x6f6 SWAP1
0x6f7 SLOAD
0x6f8 SWAP1
0x6f9 PUSH2 0x100
0x6fc EXP
0x6fd SWAP1
0x6fe DIV
0x6ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x714 AND
0x715 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72a AND
0x72b PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x74c PUSH1 0x40
0x74e MLOAD
0x74f PUSH1 0x40
0x751 MLOAD
0x752 DUP1
0x753 SWAP2
0x754 SUB
0x755 SWAP1
0x756 LOG3
0x757 DUP1
0x758 PUSH1 0x0
0x75a DUP1
0x75b PUSH2 0x100
0x75e EXP
0x75f DUP2
0x760 SLOAD
0x761 DUP2
0x762 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x777 MUL
0x778 NOT
0x779 AND
0x77a SWAP1
0x77b DUP4
0x77c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x791 AND
0x792 MUL
0x793 OR
0x794 SWAP1
0x795 SSTORE
0x796 POP
0x797 POP
0x798 JUMP
---
0x6db: JUMPDEST 
0x6dd: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f2: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x6f3: V422 = 0x0
0x6f7: V423 = S[0x0]
0x6f9: V424 = 0x100
0x6fc: V425 = EXP 0x100 0x0
0x6fe: V426 = DIV V423 0x1
0x6ff: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x714: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x715: V429 = 0xffffffffffffffffffffffffffffffffffffffff
0x72a: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x72b: V431 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x74c: V432 = 0x40
0x74e: V433 = M[0x40]
0x74f: V434 = 0x40
0x751: V435 = M[0x40]
0x754: V436 = SUB V433 V435
0x756: LOG V435 V436 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V430 V421
0x758: V437 = 0x0
0x75b: V438 = 0x100
0x75e: V439 = EXP 0x100 0x0
0x760: V440 = S[0x0]
0x762: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x777: V442 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x778: V443 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x779: V444 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V440
0x77c: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x791: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x792: V447 = MUL V446 0x1
0x793: V448 = OR V447 V444
0x795: S[0x0] = V448
0x798: JUMP 0x24d
---
Entry stack: [V11, 0x24d, V141]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x799
[0x799:0x7ef]
---
Predecessors: [0x24f]
Successors: [0x7f0, 0x7f4]
---
0x799 JUMPDEST
0x79a PUSH1 0x0
0x79c DUP1
0x79d SWAP1
0x79e SLOAD
0x79f SWAP1
0x7a0 PUSH2 0x100
0x7a3 EXP
0x7a4 SWAP1
0x7a5 DIV
0x7a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bb AND
0x7bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d1 AND
0x7d2 CALLER
0x7d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e8 AND
0x7e9 EQ
0x7ea ISZERO
0x7eb ISZERO
0x7ec PUSH2 0x7f4
0x7ef JUMPI
---
0x799: JUMPDEST 
0x79a: V449 = 0x0
0x79e: V450 = S[0x0]
0x7a0: V451 = 0x100
0x7a3: V452 = EXP 0x100 0x0
0x7a5: V453 = DIV V450 0x1
0x7a6: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bb: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x7bc: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d1: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x7d2: V458 = CALLER
0x7d3: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e8: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x7e9: V461 = EQ V460 V457
0x7ea: V462 = ISZERO V461
0x7eb: V463 = ISZERO V462
0x7ec: V464 = 0x7f4
0x7ef: JUMPI 0x7f4 V463
---
Entry stack: [V11, 0x27b, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27b, V149]

================================

Block 0x7f0
[0x7f0:0x7f3]
---
Predecessors: [0x799]
Successors: []
---
0x7f0 PUSH1 0x0
0x7f2 DUP1
0x7f3 REVERT
---
0x7f0: V465 = 0x0
0x7f3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x27b, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27b, V149]

================================

Block 0x7f4
[0x7f4:0x7ff]
---
Predecessors: [0x799]
Successors: [0x800, 0x801]
---
0x7f4 JUMPDEST
0x7f5 PUSH1 0x0
0x7f7 PUSH1 0x2
0x7f9 DUP2
0x7fa GT
0x7fb ISZERO
0x7fc PUSH2 0x801
0x7ff JUMPI
---
0x7f4: JUMPDEST 
0x7f5: V466 = 0x0
0x7f7: V467 = 0x2
0x7fa: V468 = GT 0x0 0x2
0x7fb: V469 = ISZERO 0x0
0x7fc: V470 = 0x801
0x7ff: JUMPI 0x801 0x1
---
Entry stack: [V11, 0x27b, V149]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x27b, V149, 0x0]

================================

Block 0x800
[0x800:0x800]
---
Predecessors: [0x7f4]
Successors: []
---
0x800 INVALID
---
0x800: INVALID 
---
Entry stack: [V11, 0x27b, V149, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27b, V149, 0x0]

================================

Block 0x801
[0x801:0x81a]
---
Predecessors: [0x7f4]
Successors: [0x81b, 0x81c]
---
0x801 JUMPDEST
0x802 PUSH1 0x2
0x804 PUSH1 0x14
0x806 SWAP1
0x807 SLOAD
0x808 SWAP1
0x809 PUSH2 0x100
0x80c EXP
0x80d SWAP1
0x80e DIV
0x80f PUSH1 0xff
0x811 AND
0x812 PUSH1 0x2
0x814 DUP2
0x815 GT
0x816 ISZERO
0x817 PUSH2 0x81c
0x81a JUMPI
---
0x801: JUMPDEST 
0x802: V471 = 0x2
0x804: V472 = 0x14
0x807: V473 = S[0x2]
0x809: V474 = 0x100
0x80c: V475 = EXP 0x100 0x14
0x80e: V476 = DIV V473 0x10000000000000000000000000000000000000000
0x80f: V477 = 0xff
0x811: V478 = AND 0xff V476
0x812: V479 = 0x2
0x815: V480 = GT V478 0x2
0x816: V481 = ISZERO V480
0x817: V482 = 0x81c
0x81a: JUMPI 0x81c V481
---
Entry stack: [V11, 0x27b, V149, 0x0]
Stack pops: 0
Stack additions: [V478]
Exit stack: [V11, 0x27b, V149, 0x0, V478]

================================

Block 0x81b
[0x81b:0x81b]
---
Predecessors: [0x801]
Successors: []
---
0x81b INVALID
---
0x81b: INVALID 
---
Entry stack: [V11, 0x27b, V149, 0x0, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27b, V149, 0x0, V478]

================================

Block 0x81c
[0x81c:0x823]
---
Predecessors: [0x801]
Successors: [0x824, 0x828]
---
0x81c JUMPDEST
0x81d EQ
0x81e ISZERO
0x81f ISZERO
0x820 PUSH2 0x828
0x823 JUMPI
---
0x81c: JUMPDEST 
0x81d: V483 = EQ V478 0x0
0x81e: V484 = ISZERO V483
0x81f: V485 = ISZERO V484
0x820: V486 = 0x828
0x823: JUMPI 0x828 V485
---
Entry stack: [V11, 0x27b, V149, 0x0, V478]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x27b, V149]

================================

Block 0x824
[0x824:0x827]
---
Predecessors: [0x81c]
Successors: []
---
0x824 PUSH1 0x0
0x826 DUP1
0x827 REVERT
---
0x824: V487 = 0x0
0x827: REVERT 0x0 0x0
---
Entry stack: [V11, 0x27b, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27b, V149]

================================

Block 0x828
[0x828:0x879]
---
Predecessors: [0x81c]
Successors: [0xa0f]
---
0x828 JUMPDEST
0x829 PUSH2 0x87a
0x82c CALLVALUE
0x82d PUSH1 0x1
0x82f PUSH1 0x0
0x831 DUP5
0x832 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x847 AND
0x848 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85d AND
0x85e DUP2
0x85f MSTORE
0x860 PUSH1 0x20
0x862 ADD
0x863 SWAP1
0x864 DUP2
0x865 MSTORE
0x866 PUSH1 0x20
0x868 ADD
0x869 PUSH1 0x0
0x86b SHA3
0x86c SLOAD
0x86d PUSH2 0xa0f
0x870 SWAP1
0x871 SWAP2
0x872 SWAP1
0x873 PUSH4 0xffffffff
0x878 AND
0x879 JUMP
---
0x828: JUMPDEST 
0x829: V488 = 0x87a
0x82c: V489 = CALLVALUE
0x82d: V490 = 0x1
0x82f: V491 = 0x0
0x832: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x847: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x848: V494 = 0xffffffffffffffffffffffffffffffffffffffff
0x85d: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x85f: M[0x0] = V495
0x860: V496 = 0x20
0x862: V497 = ADD 0x20 0x0
0x865: M[0x20] = 0x1
0x866: V498 = 0x20
0x868: V499 = ADD 0x20 0x20
0x869: V500 = 0x0
0x86b: V501 = SHA3 0x0 0x40
0x86c: V502 = S[V501]
0x86d: V503 = 0xa0f
0x873: V504 = 0xffffffff
0x878: V505 = AND 0xffffffff 0xa0f
0x879: JUMP 0xa0f
---
Entry stack: [V11, 0x27b, V149]
Stack pops: 1
Stack additions: [S0, 0x87a, V502, V489]
Exit stack: [V11, 0x27b, V149, 0x87a, V502, V489]

================================

Block 0x87a
[0x87a:0x8bf]
---
Predecessors: [0xa23]
Successors: [0x27b]
---
0x87a JUMPDEST
0x87b PUSH1 0x1
0x87d PUSH1 0x0
0x87f DUP4
0x880 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x895 AND
0x896 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ab AND
0x8ac DUP2
0x8ad MSTORE
0x8ae PUSH1 0x20
0x8b0 ADD
0x8b1 SWAP1
0x8b2 DUP2
0x8b3 MSTORE
0x8b4 PUSH1 0x20
0x8b6 ADD
0x8b7 PUSH1 0x0
0x8b9 SHA3
0x8ba DUP2
0x8bb SWAP1
0x8bc SSTORE
0x8bd POP
0x8be POP
0x8bf JUMP
---
0x87a: JUMPDEST 
0x87b: V506 = 0x1
0x87d: V507 = 0x0
0x880: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x895: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x896: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ab: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x8ad: M[0x0] = V511
0x8ae: V512 = 0x20
0x8b0: V513 = ADD 0x20 0x0
0x8b3: M[0x20] = 0x1
0x8b4: V514 = 0x20
0x8b6: V515 = ADD 0x20 0x20
0x8b7: V516 = 0x0
0x8b9: V517 = SHA3 0x0 0x40
0x8bc: S[V517] = V594
0x8bf: JUMP 0x27b
---
Entry stack: [V11, 0x27b, V149, V594]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x8c0
[0x8c0:0x8cd]
---
Predecessors: [0x288]
Successors: [0x8ce, 0x8cf]
---
0x8c0 JUMPDEST
0x8c1 PUSH1 0x0
0x8c3 PUSH1 0x1
0x8c5 PUSH1 0x2
0x8c7 DUP2
0x8c8 GT
0x8c9 ISZERO
0x8ca PUSH2 0x8cf
0x8cd JUMPI
---
0x8c0: JUMPDEST 
0x8c1: V518 = 0x0
0x8c3: V519 = 0x1
0x8c5: V520 = 0x2
0x8c8: V521 = GT 0x1 0x2
0x8c9: V522 = ISZERO 0x0
0x8ca: V523 = 0x8cf
0x8cd: JUMPI 0x8cf 0x1
---
Entry stack: [V11, 0x2b4, V161]
Stack pops: 0
Stack additions: [0x0, 0x1]
Exit stack: [V11, 0x2b4, V161, 0x0, 0x1]

================================

Block 0x8ce
[0x8ce:0x8ce]
---
Predecessors: [0x8c0]
Successors: []
---
0x8ce INVALID
---
0x8ce: INVALID 
---
Entry stack: [V11, 0x2b4, V161, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b4, V161, 0x0, 0x1]

================================

Block 0x8cf
[0x8cf:0x8e8]
---
Predecessors: [0x8c0]
Successors: [0x8e9, 0x8ea]
---
0x8cf JUMPDEST
0x8d0 PUSH1 0x2
0x8d2 PUSH1 0x14
0x8d4 SWAP1
0x8d5 SLOAD
0x8d6 SWAP1
0x8d7 PUSH2 0x100
0x8da EXP
0x8db SWAP1
0x8dc DIV
0x8dd PUSH1 0xff
0x8df AND
0x8e0 PUSH1 0x2
0x8e2 DUP2
0x8e3 GT
0x8e4 ISZERO
0x8e5 PUSH2 0x8ea
0x8e8 JUMPI
---
0x8cf: JUMPDEST 
0x8d0: V524 = 0x2
0x8d2: V525 = 0x14
0x8d5: V526 = S[0x2]
0x8d7: V527 = 0x100
0x8da: V528 = EXP 0x100 0x14
0x8dc: V529 = DIV V526 0x10000000000000000000000000000000000000000
0x8dd: V530 = 0xff
0x8df: V531 = AND 0xff V529
0x8e0: V532 = 0x2
0x8e3: V533 = GT V531 0x2
0x8e4: V534 = ISZERO V533
0x8e5: V535 = 0x8ea
0x8e8: JUMPI 0x8ea V534
---
Entry stack: [V11, 0x2b4, V161, 0x0, 0x1]
Stack pops: 0
Stack additions: [V531]
Exit stack: [V11, 0x2b4, V161, 0x0, 0x1, V531]

================================

Block 0x8e9
[0x8e9:0x8e9]
---
Predecessors: [0x8cf]
Successors: []
---
0x8e9 INVALID
---
0x8e9: INVALID 
---
Entry stack: [V11, 0x2b4, V161, 0x0, 0x1, V531]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b4, V161, 0x0, 0x1, V531]

================================

Block 0x8ea
[0x8ea:0x8f1]
---
Predecessors: [0x8cf]
Successors: [0x8f2, 0x8f6]
---
0x8ea JUMPDEST
0x8eb EQ
0x8ec ISZERO
0x8ed ISZERO
0x8ee PUSH2 0x8f6
0x8f1 JUMPI
---
0x8ea: JUMPDEST 
0x8eb: V536 = EQ V531 0x1
0x8ec: V537 = ISZERO V536
0x8ed: V538 = ISZERO V537
0x8ee: V539 = 0x8f6
0x8f1: JUMPI 0x8f6 V538
---
Entry stack: [V11, 0x2b4, V161, 0x0, 0x1, V531]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x2b4, V161, 0x0]

================================

Block 0x8f2
[0x8f2:0x8f5]
---
Predecessors: [0x8ea]
Successors: []
---
0x8f2 PUSH1 0x0
0x8f4 DUP1
0x8f5 REVERT
---
0x8f2: V540 = 0x0
0x8f5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2b4, V161, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b4, V161, 0x0]

================================

Block 0x8f6
[0x8f6:0x9b8]
---
Predecessors: [0x8ea]
Successors: [0x9b9, 0x9bd]
---
0x8f6 JUMPDEST
0x8f7 PUSH1 0x1
0x8f9 PUSH1 0x0
0x8fb DUP4
0x8fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x911 AND
0x912 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x927 AND
0x928 DUP2
0x929 MSTORE
0x92a PUSH1 0x20
0x92c ADD
0x92d SWAP1
0x92e DUP2
0x92f MSTORE
0x930 PUSH1 0x20
0x932 ADD
0x933 PUSH1 0x0
0x935 SHA3
0x936 SLOAD
0x937 SWAP1
0x938 POP
0x939 PUSH1 0x0
0x93b PUSH1 0x1
0x93d PUSH1 0x0
0x93f DUP5
0x940 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x955 AND
0x956 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96b AND
0x96c DUP2
0x96d MSTORE
0x96e PUSH1 0x20
0x970 ADD
0x971 SWAP1
0x972 DUP2
0x973 MSTORE
0x974 PUSH1 0x20
0x976 ADD
0x977 PUSH1 0x0
0x979 SHA3
0x97a DUP2
0x97b SWAP1
0x97c SSTORE
0x97d POP
0x97e DUP2
0x97f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x994 AND
0x995 PUSH2 0x8fc
0x998 DUP3
0x999 SWAP1
0x99a DUP2
0x99b ISZERO
0x99c MUL
0x99d SWAP1
0x99e PUSH1 0x40
0x9a0 MLOAD
0x9a1 PUSH1 0x0
0x9a3 PUSH1 0x40
0x9a5 MLOAD
0x9a6 DUP1
0x9a7 DUP4
0x9a8 SUB
0x9a9 DUP2
0x9aa DUP6
0x9ab DUP9
0x9ac DUP9
0x9ad CALL
0x9ae SWAP4
0x9af POP
0x9b0 POP
0x9b1 POP
0x9b2 POP
0x9b3 ISZERO
0x9b4 ISZERO
0x9b5 PUSH2 0x9bd
0x9b8 JUMPI
---
0x8f6: JUMPDEST 
0x8f7: V541 = 0x1
0x8f9: V542 = 0x0
0x8fc: V543 = 0xffffffffffffffffffffffffffffffffffffffff
0x911: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x912: V545 = 0xffffffffffffffffffffffffffffffffffffffff
0x927: V546 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0x929: M[0x0] = V546
0x92a: V547 = 0x20
0x92c: V548 = ADD 0x20 0x0
0x92f: M[0x20] = 0x1
0x930: V549 = 0x20
0x932: V550 = ADD 0x20 0x20
0x933: V551 = 0x0
0x935: V552 = SHA3 0x0 0x40
0x936: V553 = S[V552]
0x939: V554 = 0x0
0x93b: V555 = 0x1
0x93d: V556 = 0x0
0x940: V557 = 0xffffffffffffffffffffffffffffffffffffffff
0x955: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x956: V559 = 0xffffffffffffffffffffffffffffffffffffffff
0x96b: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x96d: M[0x0] = V560
0x96e: V561 = 0x20
0x970: V562 = ADD 0x20 0x0
0x973: M[0x20] = 0x1
0x974: V563 = 0x20
0x976: V564 = ADD 0x20 0x20
0x977: V565 = 0x0
0x979: V566 = SHA3 0x0 0x40
0x97c: S[V566] = 0x0
0x97f: V567 = 0xffffffffffffffffffffffffffffffffffffffff
0x994: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x995: V569 = 0x8fc
0x99b: V570 = ISZERO V553
0x99c: V571 = MUL V570 0x8fc
0x99e: V572 = 0x40
0x9a0: V573 = M[0x40]
0x9a1: V574 = 0x0
0x9a3: V575 = 0x40
0x9a5: V576 = M[0x40]
0x9a8: V577 = SUB V573 V576
0x9ad: V578 = CALL V571 V568 V553 V576 V577 V576 0x0
0x9b3: V579 = ISZERO V578
0x9b4: V580 = ISZERO V579
0x9b5: V581 = 0x9bd
0x9b8: JUMPI 0x9bd V580
---
Entry stack: [V11, 0x2b4, V161, 0x0]
Stack pops: 2
Stack additions: [S1, V553]
Exit stack: [V11, 0x2b4, V161, V553]

================================

Block 0x9b9
[0x9b9:0x9bc]
---
Predecessors: [0x8f6]
Successors: []
---
0x9b9 PUSH1 0x0
0x9bb DUP1
0x9bc REVERT
---
0x9b9: V582 = 0x0
0x9bc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2b4, V161, V553]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b4, V161, V553]

================================

Block 0x9bd
[0x9bd:0xa0e]
---
Predecessors: [0x8f6]
Successors: [0x2b4]
---
0x9bd JUMPDEST
0x9be DUP2
0x9bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d4 AND
0x9d5 PUSH32 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651
0x9f6 DUP3
0x9f7 PUSH1 0x40
0x9f9 MLOAD
0x9fa DUP1
0x9fb DUP3
0x9fc DUP2
0x9fd MSTORE
0x9fe PUSH1 0x20
0xa00 ADD
0xa01 SWAP2
0xa02 POP
0xa03 POP
0xa04 PUSH1 0x40
0xa06 MLOAD
0xa07 DUP1
0xa08 SWAP2
0xa09 SUB
0xa0a SWAP1
0xa0b LOG2
0xa0c POP
0xa0d POP
0xa0e JUMP
---
0x9bd: JUMPDEST 
0x9bf: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d4: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x9d5: V585 = 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651
0x9f7: V586 = 0x40
0x9f9: V587 = M[0x40]
0x9fd: M[V587] = V553
0x9fe: V588 = 0x20
0xa00: V589 = ADD 0x20 V587
0xa04: V590 = 0x40
0xa06: V591 = M[0x40]
0xa09: V592 = SUB V589 V591
0xa0b: LOG V591 V592 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651 V584
0xa0e: JUMP 0x2b4
---
Entry stack: [V11, 0x2b4, V161, V553]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0xa0f
[0xa0f:0xa21]
---
Predecessors: [0x828]
Successors: [0xa22, 0xa23]
---
0xa0f JUMPDEST
0xa10 PUSH1 0x0
0xa12 DUP1
0xa13 DUP3
0xa14 DUP5
0xa15 ADD
0xa16 SWAP1
0xa17 POP
0xa18 DUP4
0xa19 DUP2
0xa1a LT
0xa1b ISZERO
0xa1c ISZERO
0xa1d ISZERO
0xa1e PUSH2 0xa23
0xa21 JUMPI
---
0xa0f: JUMPDEST 
0xa10: V593 = 0x0
0xa15: V594 = ADD V502 V489
0xa1a: V595 = LT V594 V502
0xa1b: V596 = ISZERO V595
0xa1c: V597 = ISZERO V596
0xa1d: V598 = ISZERO V597
0xa1e: V599 = 0xa23
0xa21: JUMPI 0xa23 V598
---
Entry stack: [V11, 0x27b, V149, 0x87a, V502, V489]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V594]
Exit stack: [V11, 0x27b, V149, 0x87a, V502, V489, 0x0, V594]

================================

Block 0xa22
[0xa22:0xa22]
---
Predecessors: [0xa0f]
Successors: []
---
0xa22 INVALID
---
0xa22: INVALID 
---
Entry stack: [V11, 0x27b, V149, 0x87a, V502, V489, 0x0, V594]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27b, V149, 0x87a, V502, V489, 0x0, V594]

================================

Block 0xa23
[0xa23:0xa2c]
---
Predecessors: [0xa0f]
Successors: [0x87a]
---
0xa23 JUMPDEST
0xa24 DUP1
0xa25 SWAP2
0xa26 POP
0xa27 POP
0xa28 SWAP3
0xa29 SWAP2
0xa2a POP
0xa2b POP
0xa2c JUMP
---
0xa23: JUMPDEST 
0xa2c: JUMP 0x87a
---
Entry stack: [V11, 0x27b, V149, 0x87a, V502, V489, 0x0, V594]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x27b, V149, V594]

================================

Block 0xa2d
[0xa2d:0xa58]
---
Predecessors: []
Successors: []
---
0xa2d STOP
0xa2e LOG1
0xa2f PUSH6 0x627a7a723058
0xa36 SHA3
0xa37 MISSING 0x48
0xa38 ORIGIN
0xa39 MISSING 0xe3
0xa3a MOD
0xa3b MSTORE
0xa3c ADD
0xa3d BALANCE
0xa3e CALLDATALOAD
0xa3f MISSING 0xc1
0xa40 MISSING 0xbb
0xa41 RETURNDATACOPY
0xa42 MISSING 0xe3
0xa43 DIV
0xa44 CODECOPY
0xa45 MISSING 0xd8
0xa46 MISSING 0xd3
0xa47 SWAP10
0xa48 SLOAD
0xa49 GT
0xa4a DUP15
0xa4b MISSING 0xd7
0xa4c REVERT
0xa4d MISSING 0x1e
0xa4e PC
0xa4f MISSING 0xcf
0xa50 OR
0xa51 LT
0xa52 MISSING 0xed
0xa53 SDIV
0xa54 MISSING 0x4e
0xa55 GASPRICE
0xa56 SWAP16
0xa57 STOP
0xa58 MISSING 0x29
---
0xa2d: STOP 
0xa2e: LOG S0 S1 S2
0xa2f: V600 = 0x627a7a723058
0xa36: V601 = SHA3 0x627a7a723058 S3
0xa37: MISSING 0x48
0xa38: V602 = ORIGIN
0xa39: MISSING 0xe3
0xa3a: V603 = MOD S0 S1
0xa3b: M[V603] = S2
0xa3c: V604 = ADD S3 S4
0xa3d: V605 = BALANCE V604
0xa3e: V606 = CALLDATALOAD V605
0xa3f: MISSING 0xc1
0xa40: MISSING 0xbb
0xa41: RETURNDATACOPY S0 S1 S2
0xa42: MISSING 0xe3
0xa43: V607 = DIV S0 S1
0xa44: CODECOPY V607 S2 S3
0xa45: MISSING 0xd8
0xa46: MISSING 0xd3
0xa48: V608 = S[S10]
0xa49: V609 = GT V608 S1
0xa4b: MISSING 0xd7
0xa4c: REVERT S0 S1
0xa4d: MISSING 0x1e
0xa4e: V610 = PC
0xa4f: MISSING 0xcf
0xa50: V611 = OR S0 S1
0xa51: V612 = LT V611 S2
0xa52: MISSING 0xed
0xa53: V613 = SDIV S0 S1
0xa54: MISSING 0x4e
0xa55: V614 = GASPRICE
0xa57: STOP 
0xa58: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V601, V602, V606, S15, V609, S2, S3, S4, S5, S6, S7, S8, S9, S0, S11, S12, S13, S14, S15, V610, V612, V613, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V614]
Exit stack: []

================================

Function 0:
Public function signature: 0x43d726d6
Entry block: 0xa9
Exit block: 0xbc
Body: 0xa9, 0xb0, 0xb4, 0xbc, 0x2b6, 0x30d, 0x311, 0x31d, 0x31e, 0x338, 0x339, 0x341, 0x345, 0x362, 0x363

Function 1:
Public function signature: 0x521eb273
Entry block: 0xbe
Exit block: 0xd1
Body: 0xbe, 0xc5, 0xc9, 0xd1, 0x400

Function 2:
Public function signature: 0x8c52dc41
Entry block: 0x113
Exit block: 0x126
Body: 0x113, 0x11a, 0x11e, 0x126, 0x426, 0x47d, 0x481, 0x48d, 0x48e, 0x4a8, 0x4a9, 0x4b1, 0x4b5, 0x4d3, 0x4d4

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x128
Exit block: 0x13b
Body: 0x128, 0x12f, 0x133, 0x13b, 0x507

Function 4:
Public function signature: 0x9d735286
Entry block: 0x17d
Exit block: 0x190
Body: 0x17d, 0x184, 0x188, 0x190, 0x52c, 0x583, 0x587, 0x5a9, 0x5ad

Function 5:
Public function signature: 0xc19d93fb
Entry block: 0x192
Exit block: 0x1b5
Body: 0x192, 0x199, 0x19d, 0x1a5, 0x1b4, 0x1b5, 0x619

Function 6:
Public function signature: 0xcb13cddb
Entry block: 0x1c9
Exit block: 0x200
Body: 0x1c9, 0x1d0, 0x1d4, 0x200, 0x62c

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x216
Exit block: 0x24d
Body: 0x216, 0x21d, 0x221, 0x24d, 0x644, 0x69b, 0x69f, 0x6d7, 0x6db

Function 8:
Public function signature: 0xf340fa01
Entry block: 0x24f
Exit block: 0x27b
Body: 0x24f, 0x27b, 0x799, 0x7f0, 0x7f4, 0x800, 0x801, 0x81b, 0x81c, 0x824, 0x828, 0x87a, 0xa0f, 0xa22, 0xa23

Function 9:
Public function signature: 0xfa89401a
Entry block: 0x27d
Exit block: 0x2b4
Body: 0x27d, 0x284, 0x288, 0x2b4, 0x8c0, 0x8ce, 0x8cf, 0x8e9, 0x8ea, 0x8f2, 0x8f6, 0x9b9, 0x9bd

Function 10:
Public fallback function
Entry block: 0xa4
Exit block: 0xa4
Body: 0xa4

