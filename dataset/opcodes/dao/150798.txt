Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x89]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x11bcd830
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x89
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x11bcd830
0x22: V15 = EQ V13 0x11bcd830
0x23: V16 = 0x89
0x26: JUMPI 0x89 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xae]
---
0x27 DUP1
0x28 PUSH4 0x290b1e5f
0x2d EQ
0x2e PUSH2 0xae
0x31 JUMPI
---
0x28: V17 = 0x290b1e5f
0x2d: V18 = EQ 0x290b1e5f V13
0x2e: V19 = 0xae
0x31: JUMPI 0xae V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xc1]
---
0x32 DUP1
0x33 PUSH4 0x2e2a51bd
0x38 EQ
0x39 PUSH2 0xc1
0x3c JUMPI
---
0x33: V20 = 0x2e2a51bd
0x38: V21 = EQ 0x2e2a51bd V13
0x39: V22 = 0xc1
0x3c: JUMPI 0xc1 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xe9]
---
0x3d DUP1
0x3e PUSH4 0xa6f9dae1
0x43 EQ
0x44 PUSH2 0xe9
0x47 JUMPI
---
0x3e: V23 = 0xa6f9dae1
0x43: V24 = EQ 0xa6f9dae1 V13
0x44: V25 = 0xe9
0x47: JUMPI 0xe9 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x108]
---
0x48 DUP1
0x49 PUSH4 0xbd9b6d86
0x4e EQ
0x4f PUSH2 0x108
0x52 JUMPI
---
0x49: V26 = 0xbd9b6d86
0x4e: V27 = EQ 0xbd9b6d86 V13
0x4f: V28 = 0x108
0x52: JUMPI 0x108 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x11b]
---
0x53 DUP1
0x54 PUSH4 0xc7de2d13
0x59 EQ
0x5a PUSH2 0x11b
0x5d JUMPI
---
0x54: V29 = 0xc7de2d13
0x59: V30 = EQ 0xc7de2d13 V13
0x5a: V31 = 0x11b
0x5d: JUMPI 0x11b V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x7f]
---
0x5e DUP1
0x5f PUSH4 0xed21248c
0x64 EQ
0x65 PUSH2 0x7f
0x68 JUMPI
---
0x5f: V32 = 0xed21248c
0x64: V33 = EQ 0xed21248c V13
0x65: V34 = 0x7f
0x68: JUMPI 0x7f V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x144]
---
0x69 DUP1
0x6a PUSH4 0xeec0ddd7
0x6f EQ
0x70 PUSH2 0x144
0x73 JUMPI
---
0x6a: V35 = 0xeec0ddd7
0x6f: V36 = EQ 0xeec0ddd7 V13
0x70: V37 = 0x144
0x73: JUMPI 0x144 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x163]
---
0x74 DUP1
0x75 PUSH4 0xf8ff612e
0x7a EQ
0x7b PUSH2 0x163
0x7e JUMPI
---
0x75: V38 = 0xf8ff612e
0x7a: V39 = EQ 0xf8ff612e V13
0x7b: V40 = 0x163
0x7e: JUMPI 0x163 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x86]
---
Predecessors: [0x0, 0x5e, 0x74]
Successors: [0x17a]
---
0x7f JUMPDEST
0x80 PUSH2 0x87
0x83 PUSH2 0x17a
0x86 JUMP
---
0x7f: JUMPDEST 
0x80: V41 = 0x87
0x83: V42 = 0x17a
0x86: JUMP 0x17a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x87]
Exit stack: [V13, 0x87]

================================

Block 0x87
[0x87:0x88]
---
Predecessors: [0x1a3, 0x1ab, 0x23b, 0x280, 0x29b, 0x2e3, 0x3fb]
Successors: []
---
0x87 JUMPDEST
0x88 STOP
---
0x87: JUMPDEST 
0x88: STOP 
---
Entry stack: [V13, 0x87, V74, V77, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x87, V74, V77, S0]

================================

Block 0x89
[0x89:0x8f]
---
Predecessors: [0xd]
Successors: [0x90, 0x94]
---
0x89 JUMPDEST
0x8a CALLVALUE
0x8b ISZERO
0x8c PUSH2 0x94
0x8f JUMPI
---
0x89: JUMPDEST 
0x8a: V43 = CALLVALUE
0x8b: V44 = ISZERO V43
0x8c: V45 = 0x94
0x8f: JUMPI 0x94 V44
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x90
[0x90:0x93]
---
Predecessors: [0x89]
Successors: []
---
0x90 PUSH1 0x0
0x92 DUP1
0x93 REVERT
---
0x90: V46 = 0x0
0x93: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x94
[0x94:0x9b]
---
Predecessors: [0x89]
Successors: [0x1a5]
---
0x94 JUMPDEST
0x95 PUSH2 0x9c
0x98 PUSH2 0x1a5
0x9b JUMP
---
0x94: JUMPDEST 
0x95: V47 = 0x9c
0x98: V48 = 0x1a5
0x9b: JUMP 0x1a5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x9c]
Exit stack: [V13, 0x9c]

================================

Block 0x9c
[0x9c:0xad]
---
Predecessors: [0x1a5, 0x36b]
Successors: []
---
0x9c JUMPDEST
0x9d PUSH1 0x40
0x9f MLOAD
0xa0 SWAP1
0xa1 DUP2
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 DUP1
0xaa SWAP2
0xab SUB
0xac SWAP1
0xad RETURN
---
0x9c: JUMPDEST 
0x9d: V49 = 0x40
0x9f: V50 = M[0x40]
0xa2: M[V50] = S0
0xa3: V51 = 0x20
0xa5: V52 = ADD 0x20 V50
0xa6: V53 = 0x40
0xa8: V54 = M[0x40]
0xab: V55 = SUB V52 V54
0xad: RETURN V54 V55
---
Entry stack: [V13, 0x9c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x9c]

================================

Block 0xae
[0xae:0xb4]
---
Predecessors: [0x27]
Successors: [0xb5, 0xb9]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 ISZERO
0xb1 PUSH2 0xb9
0xb4 JUMPI
---
0xae: JUMPDEST 
0xaf: V56 = CALLVALUE
0xb0: V57 = ISZERO V56
0xb1: V58 = 0xb9
0xb4: JUMPI 0xb9 V57
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xb5
[0xb5:0xb8]
---
Predecessors: [0xae]
Successors: []
---
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 REVERT
---
0xb5: V59 = 0x0
0xb8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xb9
[0xb9:0xc0]
---
Predecessors: [0xae]
Successors: [0x1ab]
---
0xb9 JUMPDEST
0xba PUSH2 0x87
0xbd PUSH2 0x1ab
0xc0 JUMP
---
0xb9: JUMPDEST 
0xba: V60 = 0x87
0xbd: V61 = 0x1ab
0xc0: JUMP 0x1ab
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x87]
Exit stack: [V13, 0x87]

================================

Block 0xc1
[0xc1:0xc7]
---
Predecessors: [0x32]
Successors: [0xc8, 0xcc]
---
0xc1 JUMPDEST
0xc2 CALLVALUE
0xc3 ISZERO
0xc4 PUSH2 0xcc
0xc7 JUMPI
---
0xc1: JUMPDEST 
0xc2: V62 = CALLVALUE
0xc3: V63 = ISZERO V62
0xc4: V64 = 0xcc
0xc7: JUMPI 0xcc V63
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc8
[0xc8:0xcb]
---
Predecessors: [0xc1]
Successors: []
---
0xc8 PUSH1 0x0
0xca DUP1
0xcb REVERT
---
0xc8: V65 = 0x0
0xcb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xe8]
---
Predecessors: [0xc1]
Successors: [0x1e1]
---
0xcc JUMPDEST
0xcd PUSH2 0x87
0xd0 PUSH1 0x1
0xd2 PUSH1 0xa0
0xd4 PUSH1 0x2
0xd6 EXP
0xd7 SUB
0xd8 PUSH1 0x4
0xda CALLDATALOAD
0xdb DUP2
0xdc AND
0xdd SWAP1
0xde PUSH1 0x24
0xe0 CALLDATALOAD
0xe1 AND
0xe2 PUSH1 0x44
0xe4 CALLDATALOAD
0xe5 PUSH2 0x1e1
0xe8 JUMP
---
0xcc: JUMPDEST 
0xcd: V66 = 0x87
0xd0: V67 = 0x1
0xd2: V68 = 0xa0
0xd4: V69 = 0x2
0xd6: V70 = EXP 0x2 0xa0
0xd7: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V72 = 0x4
0xda: V73 = CALLDATALOAD 0x4
0xdc: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0xde: V75 = 0x24
0xe0: V76 = CALLDATALOAD 0x24
0xe1: V77 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0xe2: V78 = 0x44
0xe4: V79 = CALLDATALOAD 0x44
0xe5: V80 = 0x1e1
0xe8: JUMP 0x1e1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x87, V74, V77, V79]
Exit stack: [V13, 0x87, V74, V77, V79]

================================

Block 0xe9
[0xe9:0xef]
---
Predecessors: [0x3d]
Successors: [0xf0, 0xf4]
---
0xe9 JUMPDEST
0xea CALLVALUE
0xeb ISZERO
0xec PUSH2 0xf4
0xef JUMPI
---
0xe9: JUMPDEST 
0xea: V81 = CALLVALUE
0xeb: V82 = ISZERO V81
0xec: V83 = 0xf4
0xef: JUMPI 0xf4 V82
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf0
[0xf0:0xf3]
---
Predecessors: [0xe9]
Successors: []
---
0xf0 PUSH1 0x0
0xf2 DUP1
0xf3 REVERT
---
0xf0: V84 = 0x0
0xf3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf4
[0xf4:0x107]
---
Predecessors: [0xe9]
Successors: [0x240]
---
0xf4 JUMPDEST
0xf5 PUSH2 0x87
0xf8 PUSH1 0x1
0xfa PUSH1 0xa0
0xfc PUSH1 0x2
0xfe EXP
0xff SUB
0x100 PUSH1 0x4
0x102 CALLDATALOAD
0x103 AND
0x104 PUSH2 0x240
0x107 JUMP
---
0xf4: JUMPDEST 
0xf5: V85 = 0x87
0xf8: V86 = 0x1
0xfa: V87 = 0xa0
0xfc: V88 = 0x2
0xfe: V89 = EXP 0x2 0xa0
0xff: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x100: V91 = 0x4
0x102: V92 = CALLDATALOAD 0x4
0x103: V93 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x104: V94 = 0x240
0x107: JUMP 0x240
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x87, V93]
Exit stack: [V13, 0x87, V93]

================================

Block 0x108
[0x108:0x10e]
---
Predecessors: [0x48]
Successors: [0x10f, 0x113]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0x108: JUMPDEST 
0x109: V95 = CALLVALUE
0x10a: V96 = ISZERO V95
0x10b: V97 = 0x113
0x10e: JUMPI 0x113 V96
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0x108]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V98 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x108]
Successors: [0x283]
---
0x113 JUMPDEST
0x114 PUSH2 0x87
0x117 PUSH2 0x283
0x11a JUMP
---
0x113: JUMPDEST 
0x114: V99 = 0x87
0x117: V100 = 0x283
0x11a: JUMP 0x283
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x87]
Exit stack: [V13, 0x87]

================================

Block 0x11b
[0x11b:0x121]
---
Predecessors: [0x53]
Successors: [0x122, 0x126]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d ISZERO
0x11e PUSH2 0x126
0x121 JUMPI
---
0x11b: JUMPDEST 
0x11c: V101 = CALLVALUE
0x11d: V102 = ISZERO V101
0x11e: V103 = 0x126
0x121: JUMPI 0x126 V102
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x122
[0x122:0x125]
---
Predecessors: [0x11b]
Successors: []
---
0x122 PUSH1 0x0
0x124 DUP1
0x125 REVERT
---
0x122: V104 = 0x0
0x125: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x126
[0x126:0x143]
---
Predecessors: [0x11b]
Successors: [0x2cb]
---
0x126 JUMPDEST
0x127 PUSH2 0x87
0x12a PUSH1 0x1
0x12c PUSH1 0xa0
0x12e PUSH1 0x2
0x130 EXP
0x131 SUB
0x132 PUSH1 0x4
0x134 CALLDATALOAD
0x135 DUP2
0x136 AND
0x137 SWAP1
0x138 PUSH1 0x24
0x13a CALLDATALOAD
0x13b SWAP1
0x13c PUSH1 0x44
0x13e CALLDATALOAD
0x13f AND
0x140 PUSH2 0x2cb
0x143 JUMP
---
0x126: JUMPDEST 
0x127: V105 = 0x87
0x12a: V106 = 0x1
0x12c: V107 = 0xa0
0x12e: V108 = 0x2
0x130: V109 = EXP 0x2 0xa0
0x131: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x132: V111 = 0x4
0x134: V112 = CALLDATALOAD 0x4
0x136: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x138: V114 = 0x24
0x13a: V115 = CALLDATALOAD 0x24
0x13c: V116 = 0x44
0x13e: V117 = CALLDATALOAD 0x44
0x13f: V118 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x140: V119 = 0x2cb
0x143: JUMP 0x2cb
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x87, V113, V115, V118]
Exit stack: [V13, 0x87, V113, V115, V118]

================================

Block 0x144
[0x144:0x14a]
---
Predecessors: [0x69]
Successors: [0x14b, 0x14f]
---
0x144 JUMPDEST
0x145 CALLVALUE
0x146 ISZERO
0x147 PUSH2 0x14f
0x14a JUMPI
---
0x144: JUMPDEST 
0x145: V120 = CALLVALUE
0x146: V121 = ISZERO V120
0x147: V122 = 0x14f
0x14a: JUMPI 0x14f V121
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14b
[0x14b:0x14e]
---
Predecessors: [0x144]
Successors: []
---
0x14b PUSH1 0x0
0x14d DUP1
0x14e REVERT
---
0x14b: V123 = 0x0
0x14e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14f
[0x14f:0x162]
---
Predecessors: [0x144]
Successors: [0x36b]
---
0x14f JUMPDEST
0x150 PUSH2 0x9c
0x153 PUSH1 0x1
0x155 PUSH1 0xa0
0x157 PUSH1 0x2
0x159 EXP
0x15a SUB
0x15b PUSH1 0x4
0x15d CALLDATALOAD
0x15e AND
0x15f PUSH2 0x36b
0x162 JUMP
---
0x14f: JUMPDEST 
0x150: V124 = 0x9c
0x153: V125 = 0x1
0x155: V126 = 0xa0
0x157: V127 = 0x2
0x159: V128 = EXP 0x2 0xa0
0x15a: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15b: V130 = 0x4
0x15d: V131 = CALLDATALOAD 0x4
0x15e: V132 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V133 = 0x36b
0x162: JUMP 0x36b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x9c, V132]
Exit stack: [V13, 0x9c, V132]

================================

Block 0x163
[0x163:0x179]
---
Predecessors: [0x74]
Successors: [0x37d]
---
0x163 JUMPDEST
0x164 PUSH2 0x87
0x167 PUSH1 0x1
0x169 PUSH1 0xa0
0x16b PUSH1 0x2
0x16d EXP
0x16e SUB
0x16f PUSH1 0x4
0x171 CALLDATALOAD
0x172 AND
0x173 PUSH1 0x24
0x175 CALLDATALOAD
0x176 PUSH2 0x37d
0x179 JUMP
---
0x163: JUMPDEST 
0x164: V134 = 0x87
0x167: V135 = 0x1
0x169: V136 = 0xa0
0x16b: V137 = 0x2
0x16d: V138 = EXP 0x2 0xa0
0x16e: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16f: V140 = 0x4
0x171: V141 = CALLDATALOAD 0x4
0x172: V142 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x173: V143 = 0x24
0x175: V144 = CALLDATALOAD 0x24
0x176: V145 = 0x37d
0x179: JUMP 0x37d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x87, V142, V144]
Exit stack: [V13, 0x87, V142, V144]

================================

Block 0x17a
[0x17a:0x184]
---
Predecessors: [0x7f]
Successors: [0x185, 0x1a3]
---
0x17a JUMPDEST
0x17b PUSH1 0x3
0x17d SLOAD
0x17e CALLVALUE
0x17f GT
0x180 ISZERO
0x181 PUSH2 0x1a3
0x184 JUMPI
---
0x17a: JUMPDEST 
0x17b: V146 = 0x3
0x17d: V147 = S[0x3]
0x17e: V148 = CALLVALUE
0x17f: V149 = GT V148 V147
0x180: V150 = ISZERO V149
0x181: V151 = 0x1a3
0x184: JUMPI 0x1a3 V150
---
Entry stack: [V13, 0x87]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x87]

================================

Block 0x185
[0x185:0x1a2]
---
Predecessors: [0x17a]
Successors: [0x1a3]
---
0x185 PUSH1 0x1
0x187 PUSH1 0xa0
0x189 PUSH1 0x2
0x18b EXP
0x18c SUB
0x18d CALLER
0x18e AND
0x18f PUSH1 0x0
0x191 SWAP1
0x192 DUP2
0x193 MSTORE
0x194 PUSH1 0x4
0x196 PUSH1 0x20
0x198 MSTORE
0x199 PUSH1 0x40
0x19b SWAP1
0x19c SHA3
0x19d DUP1
0x19e SLOAD
0x19f CALLVALUE
0x1a0 ADD
0x1a1 SWAP1
0x1a2 SSTORE
---
0x185: V152 = 0x1
0x187: V153 = 0xa0
0x189: V154 = 0x2
0x18b: V155 = EXP 0x2 0xa0
0x18c: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18d: V157 = CALLER
0x18e: V158 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V159 = 0x0
0x193: M[0x0] = V158
0x194: V160 = 0x4
0x196: V161 = 0x20
0x198: M[0x20] = 0x4
0x199: V162 = 0x40
0x19c: V163 = SHA3 0x0 0x40
0x19e: V164 = S[V163]
0x19f: V165 = CALLVALUE
0x1a0: V166 = ADD V165 V164
0x1a2: S[V163] = V166
---
Entry stack: [V13, 0x87]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x87]

================================

Block 0x1a3
[0x1a3:0x1a4]
---
Predecessors: [0x17a, 0x185, 0x283]
Successors: [0x87]
---
0x1a3 JUMPDEST
0x1a4 JUMP
---
0x1a3: JUMPDEST 
0x1a4: JUMP 0x87
---
Entry stack: [V13, 0x87]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a5
[0x1a5:0x1aa]
---
Predecessors: [0x94]
Successors: [0x9c]
---
0x1a5 JUMPDEST
0x1a6 PUSH1 0x3
0x1a8 SLOAD
0x1a9 DUP2
0x1aa JUMP
---
0x1a5: JUMPDEST 
0x1a6: V167 = 0x3
0x1a8: V168 = S[0x3]
0x1aa: JUMP 0x9c
---
Entry stack: [V13, 0x9c]
Stack pops: 1
Stack additions: [S0, V168]
Exit stack: [V13, 0x9c, V168]

================================

Block 0x1ab
[0x1ab:0x1e0]
---
Predecessors: [0xb9]
Successors: [0x87]
---
0x1ab JUMPDEST
0x1ac PUSH1 0x2
0x1ae DUP1
0x1af SLOAD
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 NOT
0x1c6 AND
0x1c7 CALLER
0x1c8 PUSH1 0x1
0x1ca PUSH1 0xa0
0x1cc PUSH1 0x2
0x1ce EXP
0x1cf SUB
0x1d0 AND
0x1d1 OR
0x1d2 SWAP1
0x1d3 SSTORE
0x1d4 PUSH8 0xde0b6b3a7640000
0x1dd PUSH1 0x3
0x1df SSTORE
0x1e0 JUMP
---
0x1ab: JUMPDEST 
0x1ac: V169 = 0x2
0x1af: V170 = S[0x2]
0x1b0: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V172 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V173 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V170
0x1c7: V174 = CALLER
0x1c8: V175 = 0x1
0x1ca: V176 = 0xa0
0x1cc: V177 = 0x2
0x1ce: V178 = EXP 0x2 0xa0
0x1cf: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d0: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x1d1: V181 = OR V180 V173
0x1d3: S[0x2] = V181
0x1d4: V182 = 0xde0b6b3a7640000
0x1dd: V183 = 0x3
0x1df: S[0x3] = 0xde0b6b3a7640000
0x1e0: JUMP 0x87
---
Entry stack: [V13, 0x87]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e1
[0x1e1:0x1f8]
---
Predecessors: [0xcc]
Successors: [0x1f9, 0x23b]
---
0x1e1 JUMPDEST
0x1e2 PUSH1 0x1
0x1e4 SLOAD
0x1e5 CALLER
0x1e6 PUSH1 0x1
0x1e8 PUSH1 0xa0
0x1ea PUSH1 0x2
0x1ec EXP
0x1ed SUB
0x1ee SWAP1
0x1ef DUP2
0x1f0 AND
0x1f1 SWAP2
0x1f2 AND
0x1f3 EQ
0x1f4 ISZERO
0x1f5 PUSH2 0x23b
0x1f8 JUMPI
---
0x1e1: JUMPDEST 
0x1e2: V184 = 0x1
0x1e4: V185 = S[0x1]
0x1e5: V186 = CALLER
0x1e6: V187 = 0x1
0x1e8: V188 = 0xa0
0x1ea: V189 = 0x2
0x1ec: V190 = EXP 0x2 0xa0
0x1ed: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f0: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x1f2: V193 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V194 = EQ V193 V192
0x1f4: V195 = ISZERO V194
0x1f5: V196 = 0x23b
0x1f8: JUMPI 0x23b V195
---
Entry stack: [V13, 0x87, V74, V77, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x87, V74, V77, V79]

================================

Block 0x1f9
[0x1f9:0x217]
---
Predecessors: [0x1e1]
Successors: [0x218, 0x23b]
---
0x1f9 PUSH1 0x1
0x1fb PUSH1 0xa0
0x1fd PUSH1 0x2
0x1ff EXP
0x200 SUB
0x201 DUP4
0x202 AND
0x203 PUSH1 0x0
0x205 SWAP1
0x206 DUP2
0x207 MSTORE
0x208 PUSH1 0x4
0x20a PUSH1 0x20
0x20c MSTORE
0x20d PUSH1 0x40
0x20f DUP2
0x210 SHA3
0x211 SLOAD
0x212 GT
0x213 ISZERO
0x214 PUSH2 0x23b
0x217 JUMPI
---
0x1f9: V197 = 0x1
0x1fb: V198 = 0xa0
0x1fd: V199 = 0x2
0x1ff: V200 = EXP 0x2 0xa0
0x200: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V202 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0x203: V203 = 0x0
0x207: M[0x0] = V202
0x208: V204 = 0x4
0x20a: V205 = 0x20
0x20c: M[0x20] = 0x4
0x20d: V206 = 0x40
0x210: V207 = SHA3 0x0 0x40
0x211: V208 = S[V207]
0x212: V209 = GT V208 0x0
0x213: V210 = ISZERO V209
0x214: V211 = 0x23b
0x217: JUMPI 0x23b V210
---
Entry stack: [V13, 0x87, V74, V77, V79]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x87, V74, V77, V79]

================================

Block 0x218
[0x218:0x23a]
---
Predecessors: [0x1f9]
Successors: [0x2cb]
---
0x218 PUSH1 0x1
0x21a PUSH1 0xa0
0x21c PUSH1 0x2
0x21e EXP
0x21f SUB
0x220 DUP4
0x221 AND
0x222 PUSH1 0x0
0x224 SWAP1
0x225 DUP2
0x226 MSTORE
0x227 PUSH1 0x4
0x229 PUSH1 0x20
0x22b MSTORE
0x22c PUSH1 0x40
0x22e DUP2
0x22f SHA3
0x230 SSTORE
0x231 PUSH2 0x23b
0x234 DUP3
0x235 DUP3
0x236 DUP6
0x237 PUSH2 0x2cb
0x23a JUMP
---
0x218: V212 = 0x1
0x21a: V213 = 0xa0
0x21c: V214 = 0x2
0x21e: V215 = EXP 0x2 0xa0
0x21f: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x221: V217 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0x222: V218 = 0x0
0x226: M[0x0] = V217
0x227: V219 = 0x4
0x229: V220 = 0x20
0x22b: M[0x20] = 0x4
0x22c: V221 = 0x40
0x22f: V222 = SHA3 0x0 0x40
0x230: S[V222] = 0x0
0x231: V223 = 0x23b
0x237: V224 = 0x2cb
0x23a: JUMP 0x2cb
---
Entry stack: [V13, 0x87, V74, V77, V79]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x23b, S1, S0, S2]
Exit stack: [V13, 0x87, V74, V77, V79, 0x23b, V77, V79, V74]

================================

Block 0x23b
[0x23b:0x23f]
---
Predecessors: [0x1e1, 0x1f9, 0x23b, 0x2cb, 0x2e3]
Successors: [0x87, 0x23b]
---
0x23b JUMPDEST
0x23c POP
0x23d POP
0x23e POP
0x23f JUMP
---
0x23b: JUMPDEST 
0x23f: JUMP {0x87, 0x23b}
---
Entry stack: [V13, 0x87, V74, V77, S4, {0x87, 0x23b}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x87, V74, V77, S4]

================================

Block 0x240
[0x240:0x257]
---
Predecessors: [0xf4]
Successors: [0x258, 0x280]
---
0x240 JUMPDEST
0x241 PUSH1 0x1
0x243 SLOAD
0x244 CALLER
0x245 PUSH1 0x1
0x247 PUSH1 0xa0
0x249 PUSH1 0x2
0x24b EXP
0x24c SUB
0x24d SWAP1
0x24e DUP2
0x24f AND
0x250 SWAP2
0x251 AND
0x252 EQ
0x253 ISZERO
0x254 PUSH2 0x280
0x257 JUMPI
---
0x240: JUMPDEST 
0x241: V225 = 0x1
0x243: V226 = S[0x1]
0x244: V227 = CALLER
0x245: V228 = 0x1
0x247: V229 = 0xa0
0x249: V230 = 0x2
0x24b: V231 = EXP 0x2 0xa0
0x24c: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x251: V234 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x252: V235 = EQ V234 V233
0x253: V236 = ISZERO V235
0x254: V237 = 0x280
0x257: JUMPI 0x280 V236
---
Entry stack: [V13, 0x87, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x87, V93]

================================

Block 0x258
[0x258:0x27f]
---
Predecessors: [0x240]
Successors: [0x280]
---
0x258 PUSH1 0x0
0x25a DUP1
0x25b SLOAD
0x25c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x271 NOT
0x272 AND
0x273 PUSH1 0x1
0x275 PUSH1 0xa0
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b DUP4
0x27c AND
0x27d OR
0x27e SWAP1
0x27f SSTORE
---
0x258: V238 = 0x0
0x25b: V239 = S[0x0]
0x25c: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x271: V241 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x272: V242 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V239
0x273: V243 = 0x1
0x275: V244 = 0xa0
0x277: V245 = 0x2
0x279: V246 = EXP 0x2 0xa0
0x27a: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V248 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V249 = OR V248 V242
0x27f: S[0x0] = V249
---
Entry stack: [V13, 0x87, V93]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x87, V93]

================================

Block 0x280
[0x280:0x282]
---
Predecessors: [0x240, 0x258]
Successors: [0x87]
---
0x280 JUMPDEST
0x281 POP
0x282 JUMP
---
0x280: JUMPDEST 
0x282: JUMP 0x87
---
Entry stack: [V13, 0x87, V93]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x283
[0x283:0x29a]
---
Predecessors: [0x113]
Successors: [0x1a3, 0x29b]
---
0x283 JUMPDEST
0x284 PUSH1 0x0
0x286 SLOAD
0x287 CALLER
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 SWAP1
0x291 DUP2
0x292 AND
0x293 SWAP2
0x294 AND
0x295 EQ
0x296 ISZERO
0x297 PUSH2 0x1a3
0x29a JUMPI
---
0x283: JUMPDEST 
0x284: V250 = 0x0
0x286: V251 = S[0x0]
0x287: V252 = CALLER
0x288: V253 = 0x1
0x28a: V254 = 0xa0
0x28c: V255 = 0x2
0x28e: V256 = EXP 0x2 0xa0
0x28f: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x292: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x294: V259 = AND V251 0xffffffffffffffffffffffffffffffffffffffff
0x295: V260 = EQ V259 V258
0x296: V261 = ISZERO V260
0x297: V262 = 0x1a3
0x29a: JUMPI 0x1a3 V261
---
Entry stack: [V13, 0x87]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x87]

================================

Block 0x29b
[0x29b:0x2ca]
---
Predecessors: [0x283]
Successors: [0x87]
---
0x29b PUSH1 0x0
0x29d SLOAD
0x29e PUSH1 0x1
0x2a0 DUP1
0x2a1 SLOAD
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 NOT
0x2b8 AND
0x2b9 PUSH1 0x1
0x2bb PUSH1 0xa0
0x2bd PUSH1 0x2
0x2bf EXP
0x2c0 SUB
0x2c1 SWAP1
0x2c2 SWAP3
0x2c3 AND
0x2c4 SWAP2
0x2c5 SWAP1
0x2c6 SWAP2
0x2c7 OR
0x2c8 SWAP1
0x2c9 SSTORE
0x2ca JUMP
---
0x29b: V263 = 0x0
0x29d: V264 = S[0x0]
0x29e: V265 = 0x1
0x2a1: V266 = S[0x1]
0x2a2: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V268 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: V269 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V266
0x2b9: V270 = 0x1
0x2bb: V271 = 0xa0
0x2bd: V272 = 0x2
0x2bf: V273 = EXP 0x2 0xa0
0x2c0: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c3: V275 = AND V264 0xffffffffffffffffffffffffffffffffffffffff
0x2c7: V276 = OR V275 V269
0x2c9: S[0x1] = V276
0x2ca: JUMP 0x87
---
Entry stack: [V13, 0x87]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x2cb
[0x2cb:0x2e2]
---
Predecessors: [0x126, 0x218]
Successors: [0x23b, 0x2e3]
---
0x2cb JUMPDEST
0x2cc PUSH1 0x1
0x2ce SLOAD
0x2cf CALLER
0x2d0 PUSH1 0x1
0x2d2 PUSH1 0xa0
0x2d4 PUSH1 0x2
0x2d6 EXP
0x2d7 SUB
0x2d8 SWAP1
0x2d9 DUP2
0x2da AND
0x2db SWAP2
0x2dc AND
0x2dd EQ
0x2de ISZERO
0x2df PUSH2 0x23b
0x2e2 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V277 = 0x1
0x2ce: V278 = S[0x1]
0x2cf: V279 = CALLER
0x2d0: V280 = 0x1
0x2d2: V281 = 0xa0
0x2d4: V282 = 0x2
0x2d6: V283 = EXP 0x2 0xa0
0x2d7: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2da: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x2dc: V286 = AND V278 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V287 = EQ V286 V285
0x2de: V288 = ISZERO V287
0x2df: V289 = 0x23b
0x2e2: JUMPI 0x23b V288
---
Entry stack: [V13, 0x87, V74, V77, S4, {0x87, 0x23b}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x87, V74, V77, S4, {0x87, 0x23b}, S2, S1, S0]

================================

Block 0x2e3
[0x2e3:0x36a]
---
Predecessors: [0x2cb]
Successors: [0x87, 0x23b]
---
0x2e3 DUP3
0x2e4 PUSH1 0x1
0x2e6 PUSH1 0xa0
0x2e8 PUSH1 0x2
0x2ea EXP
0x2eb SUB
0x2ec AND
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x311 DUP2
0x312 MSTORE
0x313 PUSH1 0x19
0x315 ADD
0x316 PUSH1 0x40
0x318 MLOAD
0x319 DUP1
0x31a SWAP2
0x31b SUB
0x31c SWAP1
0x31d SHA3
0x31e PUSH1 0xe0
0x320 PUSH1 0x2
0x322 EXP
0x323 SWAP1
0x324 DIV
0x325 DUP3
0x326 DUP5
0x327 PUSH1 0x40
0x329 MLOAD
0x32a PUSH1 0xe0
0x32c PUSH1 0x2
0x32e EXP
0x32f PUSH4 0xffffffff
0x334 DUP6
0x335 AND
0x336 MUL
0x337 DUP2
0x338 MSTORE
0x339 PUSH1 0x1
0x33b PUSH1 0xa0
0x33d PUSH1 0x2
0x33f EXP
0x340 SUB
0x341 SWAP1
0x342 SWAP3
0x343 AND
0x344 PUSH1 0x4
0x346 DUP4
0x347 ADD
0x348 MSTORE
0x349 PUSH1 0x24
0x34b DUP3
0x34c ADD
0x34d MSTORE
0x34e PUSH1 0x44
0x350 ADD
0x351 PUSH1 0x0
0x353 PUSH1 0x40
0x355 MLOAD
0x356 DUP1
0x357 DUP4
0x358 SUB
0x359 DUP2
0x35a PUSH1 0x0
0x35c DUP8
0x35d PUSH2 0x646e
0x360 GAS
0x361 SUB
0x362 CALL
0x363 POP
0x364 POP
0x365 POP
0x366 POP
0x367 POP
0x368 POP
0x369 POP
0x36a JUMP
---
0x2e4: V290 = 0x1
0x2e6: V291 = 0xa0
0x2e8: V292 = 0x2
0x2ea: V293 = EXP 0x2 0xa0
0x2eb: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ec: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x2ed: V296 = 0x40
0x2ef: V297 = M[0x40]
0x2f0: V298 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x312: M[V297] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x313: V299 = 0x19
0x315: V300 = ADD 0x19 V297
0x316: V301 = 0x40
0x318: V302 = M[0x40]
0x31b: V303 = SUB V300 V302
0x31d: V304 = SHA3 V302 V303
0x31e: V305 = 0xe0
0x320: V306 = 0x2
0x322: V307 = EXP 0x2 0xe0
0x324: V308 = DIV V304 0x100000000000000000000000000000000000000000000000000000000
0x327: V309 = 0x40
0x329: V310 = M[0x40]
0x32a: V311 = 0xe0
0x32c: V312 = 0x2
0x32e: V313 = EXP 0x2 0xe0
0x32f: V314 = 0xffffffff
0x335: V315 = AND V308 0xffffffff
0x336: V316 = MUL V315 0x100000000000000000000000000000000000000000000000000000000
0x338: M[V310] = V316
0x339: V317 = 0x1
0x33b: V318 = 0xa0
0x33d: V319 = 0x2
0x33f: V320 = EXP 0x2 0xa0
0x340: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x343: V322 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x344: V323 = 0x4
0x347: V324 = ADD V310 0x4
0x348: M[V324] = V322
0x349: V325 = 0x24
0x34c: V326 = ADD V310 0x24
0x34d: M[V326] = S1
0x34e: V327 = 0x44
0x350: V328 = ADD 0x44 V310
0x351: V329 = 0x0
0x353: V330 = 0x40
0x355: V331 = M[0x40]
0x358: V332 = SUB V328 V331
0x35a: V333 = 0x0
0x35d: V334 = 0x646e
0x360: V335 = GAS
0x361: V336 = SUB V335 0x646e
0x362: V337 = CALL V336 V295 0x0 V331 V332 V331 0x0
0x36a: JUMP {0x87, 0x23b}
---
Entry stack: [V13, 0x87, V74, V77, S4, {0x87, 0x23b}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x87, V74, V77, S4]

================================

Block 0x36b
[0x36b:0x37c]
---
Predecessors: [0x14f]
Successors: [0x9c]
---
0x36b JUMPDEST
0x36c PUSH1 0x4
0x36e PUSH1 0x20
0x370 MSTORE
0x371 PUSH1 0x0
0x373 SWAP1
0x374 DUP2
0x375 MSTORE
0x376 PUSH1 0x40
0x378 SWAP1
0x379 SHA3
0x37a SLOAD
0x37b DUP2
0x37c JUMP
---
0x36b: JUMPDEST 
0x36c: V338 = 0x4
0x36e: V339 = 0x20
0x370: M[0x20] = 0x4
0x371: V340 = 0x0
0x375: M[0x0] = V132
0x376: V341 = 0x40
0x379: V342 = SHA3 0x0 0x40
0x37a: V343 = S[V342]
0x37c: JUMP 0x9c
---
Entry stack: [V13, 0x9c, V132]
Stack pops: 2
Stack additions: [S1, V343]
Exit stack: [V13, 0x9c, V343]

================================

Block 0x37d
[0x37d:0x394]
---
Predecessors: [0x163]
Successors: [0x395, 0x3fb]
---
0x37d JUMPDEST
0x37e PUSH1 0x1
0x380 SLOAD
0x381 CALLER
0x382 PUSH1 0x1
0x384 PUSH1 0xa0
0x386 PUSH1 0x2
0x388 EXP
0x389 SUB
0x38a SWAP1
0x38b DUP2
0x38c AND
0x38d SWAP2
0x38e AND
0x38f EQ
0x390 ISZERO
0x391 PUSH2 0x3fb
0x394 JUMPI
---
0x37d: JUMPDEST 
0x37e: V344 = 0x1
0x380: V345 = S[0x1]
0x381: V346 = CALLER
0x382: V347 = 0x1
0x384: V348 = 0xa0
0x386: V349 = 0x2
0x388: V350 = EXP 0x2 0xa0
0x389: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38c: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x38e: V353 = AND V345 0xffffffffffffffffffffffffffffffffffffffff
0x38f: V354 = EQ V353 V352
0x390: V355 = ISZERO V354
0x391: V356 = 0x3fb
0x394: JUMPI 0x3fb V355
---
Entry stack: [V13, 0x87, V142, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x87, V142, V144]

================================

Block 0x395
[0x395:0x3b3]
---
Predecessors: [0x37d]
Successors: [0x3b4, 0x3fb]
---
0x395 PUSH1 0x1
0x397 PUSH1 0xa0
0x399 PUSH1 0x2
0x39b EXP
0x39c SUB
0x39d DUP3
0x39e AND
0x39f PUSH1 0x0
0x3a1 SWAP1
0x3a2 DUP2
0x3a3 MSTORE
0x3a4 PUSH1 0x4
0x3a6 PUSH1 0x20
0x3a8 MSTORE
0x3a9 PUSH1 0x40
0x3ab DUP2
0x3ac SHA3
0x3ad SLOAD
0x3ae GT
0x3af ISZERO
0x3b0 PUSH2 0x3fb
0x3b3 JUMPI
---
0x395: V357 = 0x1
0x397: V358 = 0xa0
0x399: V359 = 0x2
0x39b: V360 = EXP 0x2 0xa0
0x39c: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39e: V362 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V363 = 0x0
0x3a3: M[0x0] = V362
0x3a4: V364 = 0x4
0x3a6: V365 = 0x20
0x3a8: M[0x20] = 0x4
0x3a9: V366 = 0x40
0x3ac: V367 = SHA3 0x0 0x40
0x3ad: V368 = S[V367]
0x3ae: V369 = GT V368 0x0
0x3af: V370 = ISZERO V369
0x3b0: V371 = 0x3fb
0x3b3: JUMPI 0x3fb V370
---
Entry stack: [V13, 0x87, V142, V144]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x87, V142, V144]

================================

Block 0x3b4
[0x3b4:0x3db]
---
Predecessors: [0x395]
Successors: [0x3dc, 0x3fb]
---
0x3b4 DUP2
0x3b5 PUSH1 0x1
0x3b7 PUSH1 0xa0
0x3b9 PUSH1 0x2
0x3bb EXP
0x3bc SUB
0x3bd AND
0x3be DUP2
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 PUSH1 0x0
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 DUP1
0x3c8 DUP4
0x3c9 SUB
0x3ca DUP2
0x3cb DUP6
0x3cc DUP8
0x3cd PUSH2 0x8796
0x3d0 GAS
0x3d1 SUB
0x3d2 CALL
0x3d3 SWAP3
0x3d4 POP
0x3d5 POP
0x3d6 POP
0x3d7 ISZERO
0x3d8 PUSH2 0x3fb
0x3db JUMPI
---
0x3b5: V372 = 0x1
0x3b7: V373 = 0xa0
0x3b9: V374 = 0x2
0x3bb: V375 = EXP 0x2 0xa0
0x3bc: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bd: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x3bf: V378 = 0x40
0x3c1: V379 = M[0x40]
0x3c2: V380 = 0x0
0x3c4: V381 = 0x40
0x3c6: V382 = M[0x40]
0x3c9: V383 = SUB V379 V382
0x3cd: V384 = 0x8796
0x3d0: V385 = GAS
0x3d1: V386 = SUB V385 0x8796
0x3d2: V387 = CALL V386 V377 V144 V382 V383 V382 0x0
0x3d7: V388 = ISZERO V387
0x3d8: V389 = 0x3fb
0x3db: JUMPI 0x3fb V388
---
Entry stack: [V13, 0x87, V142, V144]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x87, V142, V144]

================================

Block 0x3dc
[0x3dc:0x3fa]
---
Predecessors: [0x3b4]
Successors: [0x3fb]
---
0x3dc PUSH1 0x1
0x3de PUSH1 0xa0
0x3e0 PUSH1 0x2
0x3e2 EXP
0x3e3 SUB
0x3e4 DUP3
0x3e5 AND
0x3e6 PUSH1 0x0
0x3e8 SWAP1
0x3e9 DUP2
0x3ea MSTORE
0x3eb PUSH1 0x4
0x3ed PUSH1 0x20
0x3ef MSTORE
0x3f0 PUSH1 0x40
0x3f2 SWAP1
0x3f3 SHA3
0x3f4 DUP1
0x3f5 SLOAD
0x3f6 DUP3
0x3f7 SWAP1
0x3f8 SUB
0x3f9 SWAP1
0x3fa SSTORE
---
0x3dc: V390 = 0x1
0x3de: V391 = 0xa0
0x3e0: V392 = 0x2
0x3e2: V393 = EXP 0x2 0xa0
0x3e3: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e5: V395 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x3e6: V396 = 0x0
0x3ea: M[0x0] = V395
0x3eb: V397 = 0x4
0x3ed: V398 = 0x20
0x3ef: M[0x20] = 0x4
0x3f0: V399 = 0x40
0x3f3: V400 = SHA3 0x0 0x40
0x3f5: V401 = S[V400]
0x3f8: V402 = SUB V401 V144
0x3fa: S[V400] = V402
---
Entry stack: [V13, 0x87, V142, V144]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x87, V142, V144]

================================

Block 0x3fb
[0x3fb:0x3fe]
---
Predecessors: [0x37d, 0x395, 0x3b4, 0x3dc]
Successors: [0x87]
---
0x3fb JUMPDEST
0x3fc POP
0x3fd POP
0x3fe JUMP
---
0x3fb: JUMPDEST 
0x3fe: JUMP 0x87
---
Entry stack: [V13, 0x87, V142, V144]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x3ff
[0x3ff:0x40d]
---
Predecessors: []
Successors: [0x40e]
Has unresolved jump.
---
0x3ff STOP
0x400 LOG1
0x401 PUSH6 0x627a7a723058
0x408 SHA3
0x409 DUP9
0x40a MISSING 0xfc
0x40b MISSING 0xc
0x40c MISSING 0x2a
0x40d JUMPI
---
0x3ff: STOP 
0x400: LOG S0 S1 S2
0x401: V403 = 0x627a7a723058
0x408: V404 = SHA3 0x627a7a723058 S3
0x40a: MISSING 0xfc
0x40b: MISSING 0xc
0x40c: MISSING 0x2a
0x40d: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, V404, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Block 0x40e
[0x40e:0x42a]
---
Predecessors: [0x3ff]
Successors: []
---
0x40e MISSING 0xde
0x40f GASPRICE
0x410 PUSH10 0x4e56e2b1970730548d58
0x41b PUSH12 0x4219a9ea0d0072af3a2b2dc8
0x428 GASPRICE
0x429 STOP
0x42a MISSING 0x29
---
0x40e: MISSING 0xde
0x40f: V405 = GASPRICE
0x410: V406 = 0x4e56e2b1970730548d58
0x41b: V407 = 0x4219a9ea0d0072af3a2b2dc8
0x428: V408 = GASPRICE
0x429: STOP 
0x42a: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V408, 0x4219a9ea0d0072af3a2b2dc8, 0x4e56e2b1970730548d58, V405]
Exit stack: []

================================

Function 0:
Public function signature: 0x11bcd830
Entry block: 0x89
Exit block: 0x9c
Body: 0x89, 0x90, 0x94, 0x9c, 0x1a5

Function 1:
Public function signature: 0x290b1e5f
Entry block: 0xae
Exit block: 0x87
Body: 0x87, 0xae, 0xb5, 0xb9, 0x1ab

Function 2:
Public function signature: 0x2e2a51bd
Entry block: 0xc1
Exit block: 0x87
Body: 0x87, 0xc1, 0xc8, 0xcc, 0x1e1, 0x1f9, 0x218, 0x23b

Function 3:
Public function signature: 0xa6f9dae1
Entry block: 0xe9
Exit block: 0x87
Body: 0x87, 0xe9, 0xf0, 0xf4, 0x240, 0x258, 0x280

Function 4:
Public function signature: 0xbd9b6d86
Entry block: 0x108
Exit block: 0x87
Body: 0x87, 0x108, 0x10f, 0x113, 0x1a3, 0x283, 0x29b

Function 5:
Public function signature: 0xc7de2d13
Entry block: 0x11b
Exit block: 0x87
Body: 0x87, 0x11b, 0x122, 0x126

Function 6:
Public function signature: 0xed21248c
Entry block: 0x7f
Exit block: 0x87
Body: 0x7f, 0x87, 0x17a, 0x185, 0x1a3

Function 7:
Public function signature: 0xeec0ddd7
Entry block: 0x144
Exit block: 0x9c
Body: 0x9c, 0x144, 0x14b, 0x14f, 0x36b

Function 8:
Public function signature: 0xf8ff612e
Entry block: 0x163
Exit block: 0x87
Body: 0x87, 0x163, 0x37d, 0x395, 0x3b4, 0x3dc, 0x3fb

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x87
Body: 0x7f, 0x87, 0x17a, 0x185, 0x1a3

Function 10:
Private function
Entry block: 0x2cb
Exit block: 0x2e3
Body: 0x2cb, 0x2e3

