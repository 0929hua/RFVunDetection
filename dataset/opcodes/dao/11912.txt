Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x53]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x53
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x53
0xc: JUMPI 0x53 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x55]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x8da5cb5b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x55
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x8da5cb5b
0x22: V15 = EQ V13 0x8da5cb5b
0x23: V16 = 0x55
0x26: JUMPI 0x55 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x86]
---
0x27 DUP1
0x28 PUSH4 0x9073ce12
0x2d EQ
0x2e PUSH2 0x86
0x31 JUMPI
---
0x28: V17 = 0x9073ce12
0x2d: V18 = EQ 0x9073ce12 V13
0x2e: V19 = 0x86
0x31: JUMPI 0x86 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xb4]
---
0x32 DUP1
0x33 PUSH4 0xc863bac1
0x38 EQ
0x39 PUSH2 0xb4
0x3c JUMPI
---
0x33: V20 = 0xc863bac1
0x38: V21 = EQ 0xc863bac1 V13
0x39: V22 = 0xb4
0x3c: JUMPI 0xb4 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xdf]
---
0x3d DUP1
0x3e PUSH4 0xcce0cd0c
0x43 EQ
0x44 PUSH2 0xdf
0x47 JUMPI
---
0x3e: V23 = 0xcce0cd0c
0x43: V24 = EQ 0xcce0cd0c V13
0x44: V25 = 0xdf
0x47: JUMPI 0xdf V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x169]
---
0x48 DUP1
0x49 PUSH4 0xf5537ede
0x4e EQ
0x4f PUSH2 0x169
0x52 JUMPI
---
0x49: V26 = 0xf5537ede
0x4e: V27 = EQ 0xf5537ede V13
0x4f: V28 = 0x169
0x52: JUMPI 0x169 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x54]
---
Predecessors: [0x0, 0x48]
Successors: []
---
0x53 JUMPDEST
0x54 STOP
---
0x53: JUMPDEST 
0x54: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x55
[0x55:0x5c]
---
Predecessors: [0xd]
Successors: [0x5d, 0x61]
---
0x55 JUMPDEST
0x56 CALLVALUE
0x57 DUP1
0x58 ISZERO
0x59 PUSH2 0x61
0x5c JUMPI
---
0x55: JUMPDEST 
0x56: V29 = CALLVALUE
0x58: V30 = ISZERO V29
0x59: V31 = 0x61
0x5c: JUMPI 0x61 V30
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V29]
Exit stack: [V13, V29]

================================

Block 0x5d
[0x5d:0x60]
---
Predecessors: [0x55]
Successors: []
---
0x5d PUSH1 0x0
0x5f DUP1
0x60 REVERT
---
0x5d: V32 = 0x0
0x60: REVERT 0x0 0x0
---
Entry stack: [V13, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V29]

================================

Block 0x61
[0x61:0x69]
---
Predecessors: [0x55]
Successors: [0x193]
---
0x61 JUMPDEST
0x62 POP
0x63 PUSH2 0x6a
0x66 PUSH2 0x193
0x69 JUMP
---
0x61: JUMPDEST 
0x63: V33 = 0x6a
0x66: V34 = 0x193
0x69: JUMP 0x193
---
Entry stack: [V13, V29]
Stack pops: 1
Stack additions: [0x6a]
Exit stack: [V13, 0x6a]

================================

Block 0x6a
[0x6a:0x85]
---
Predecessors: [0x193]
Successors: []
---
0x6a JUMPDEST
0x6b PUSH1 0x40
0x6d DUP1
0x6e MLOAD
0x6f PUSH1 0x1
0x71 PUSH1 0xa0
0x73 PUSH1 0x2
0x75 EXP
0x76 SUB
0x77 SWAP1
0x78 SWAP3
0x79 AND
0x7a DUP3
0x7b MSTORE
0x7c MLOAD
0x7d SWAP1
0x7e DUP2
0x7f SWAP1
0x80 SUB
0x81 PUSH1 0x20
0x83 ADD
0x84 SWAP1
0x85 RETURN
---
0x6a: JUMPDEST 
0x6b: V35 = 0x40
0x6e: V36 = M[0x40]
0x6f: V37 = 0x1
0x71: V38 = 0xa0
0x73: V39 = 0x2
0x75: V40 = EXP 0x2 0xa0
0x76: V41 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79: V42 = AND V158 0xffffffffffffffffffffffffffffffffffffffff
0x7b: M[V36] = V42
0x7c: V43 = M[0x40]
0x80: V44 = SUB V36 V43
0x81: V45 = 0x20
0x83: V46 = ADD 0x20 V44
0x85: RETURN V43 V46
---
Entry stack: [V13, 0x6a, V158]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x6a]

================================

Block 0x86
[0x86:0x9f]
---
Predecessors: [0x27]
Successors: [0x1a2]
---
0x86 JUMPDEST
0x87 PUSH2 0xa0
0x8a PUSH1 0x1
0x8c PUSH1 0xa0
0x8e PUSH1 0x2
0x90 EXP
0x91 SUB
0x92 PUSH1 0x4
0x94 CALLDATALOAD
0x95 AND
0x96 PUSH1 0x24
0x98 CALLDATALOAD
0x99 PUSH1 0x44
0x9b CALLDATALOAD
0x9c PUSH2 0x1a2
0x9f JUMP
---
0x86: JUMPDEST 
0x87: V47 = 0xa0
0x8a: V48 = 0x1
0x8c: V49 = 0xa0
0x8e: V50 = 0x2
0x90: V51 = EXP 0x2 0xa0
0x91: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92: V53 = 0x4
0x94: V54 = CALLDATALOAD 0x4
0x95: V55 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0x96: V56 = 0x24
0x98: V57 = CALLDATALOAD 0x24
0x99: V58 = 0x44
0x9b: V59 = CALLDATALOAD 0x44
0x9c: V60 = 0x1a2
0x9f: JUMP 0x1a2
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa0, V55, V57, V59]
Exit stack: [V13, 0xa0, V55, V57, V59]

================================

Block 0xa0
[0xa0:0xb3]
---
Predecessors: [0x1ba, 0x287]
Successors: []
---
0xa0 JUMPDEST
0xa1 PUSH1 0x40
0xa3 DUP1
0xa4 MLOAD
0xa5 SWAP2
0xa6 ISZERO
0xa7 ISZERO
0xa8 DUP3
0xa9 MSTORE
0xaa MLOAD
0xab SWAP1
0xac DUP2
0xad SWAP1
0xae SUB
0xaf PUSH1 0x20
0xb1 ADD
0xb2 SWAP1
0xb3 RETURN
---
0xa0: JUMPDEST 
0xa1: V61 = 0x40
0xa4: V62 = M[0x40]
0xa6: V63 = ISZERO S0
0xa7: V64 = ISZERO V63
0xa9: M[V62] = V64
0xaa: V65 = M[0x40]
0xae: V66 = SUB V62 V65
0xaf: V67 = 0x20
0xb1: V68 = ADD 0x20 V66
0xb3: RETURN V65 V68
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xb4
[0xb4:0xbb]
---
Predecessors: [0x32]
Successors: [0xbc, 0xc0]
---
0xb4 JUMPDEST
0xb5 CALLVALUE
0xb6 DUP1
0xb7 ISZERO
0xb8 PUSH2 0xc0
0xbb JUMPI
---
0xb4: JUMPDEST 
0xb5: V69 = CALLVALUE
0xb7: V70 = ISZERO V69
0xb8: V71 = 0xc0
0xbb: JUMPI 0xc0 V70
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V13, V69]

================================

Block 0xbc
[0xbc:0xbf]
---
Predecessors: [0xb4]
Successors: []
---
0xbc PUSH1 0x0
0xbe DUP1
0xbf REVERT
---
0xbc: V72 = 0x0
0xbf: REVERT 0x0 0x0
---
Entry stack: [V13, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V69]

================================

Block 0xc0
[0xc0:0xde]
---
Predecessors: [0xb4]
Successors: [0x1e2]
---
0xc0 JUMPDEST
0xc1 POP
0xc2 PUSH2 0xa0
0xc5 PUSH1 0x1
0xc7 PUSH1 0xa0
0xc9 PUSH1 0x2
0xcb EXP
0xcc SUB
0xcd PUSH1 0x4
0xcf CALLDATALOAD
0xd0 DUP2
0xd1 AND
0xd2 SWAP1
0xd3 PUSH1 0x24
0xd5 CALLDATALOAD
0xd6 SWAP1
0xd7 PUSH1 0x44
0xd9 CALLDATALOAD
0xda AND
0xdb PUSH2 0x1e2
0xde JUMP
---
0xc0: JUMPDEST 
0xc2: V73 = 0xa0
0xc5: V74 = 0x1
0xc7: V75 = 0xa0
0xc9: V76 = 0x2
0xcb: V77 = EXP 0x2 0xa0
0xcc: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd: V79 = 0x4
0xcf: V80 = CALLDATALOAD 0x4
0xd1: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xd3: V82 = 0x24
0xd5: V83 = CALLDATALOAD 0x24
0xd7: V84 = 0x44
0xd9: V85 = CALLDATALOAD 0x44
0xda: V86 = AND V85 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V87 = 0x1e2
0xde: JUMP 0x1e2
---
Entry stack: [V13, V69]
Stack pops: 1
Stack additions: [0xa0, V81, V83, V86]
Exit stack: [V13, 0xa0, V81, V83, V86]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0x3d]
Successors: [0xe7, 0xeb]
---
0xdf JUMPDEST
0xe0 CALLVALUE
0xe1 DUP1
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xdf: JUMPDEST 
0xe0: V88 = CALLVALUE
0xe2: V89 = ISZERO V88
0xe3: V90 = 0xeb
0xe6: JUMPI 0xeb V89
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V13, V88]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xdf]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V91 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V13, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V88]

================================

Block 0xeb
[0xeb:0xf3]
---
Predecessors: [0xdf]
Successors: [0x291]
---
0xeb JUMPDEST
0xec POP
0xed PUSH2 0xf4
0xf0 PUSH2 0x291
0xf3 JUMP
---
0xeb: JUMPDEST 
0xed: V92 = 0xf4
0xf0: V93 = 0x291
0xf3: JUMP 0x291
---
Entry stack: [V13, V88]
Stack pops: 1
Stack additions: [0xf4]
Exit stack: [V13, 0xf4]

================================

Block 0xf4
[0xf4:0x115]
---
Predecessors: [0x291]
Successors: [0x116]
---
0xf4 JUMPDEST
0xf5 PUSH1 0x40
0xf7 DUP1
0xf8 MLOAD
0xf9 PUSH1 0x20
0xfb DUP1
0xfc DUP3
0xfd MSTORE
0xfe DUP4
0xff MLOAD
0x100 DUP2
0x101 DUP4
0x102 ADD
0x103 MSTORE
0x104 DUP4
0x105 MLOAD
0x106 SWAP2
0x107 SWAP3
0x108 DUP4
0x109 SWAP3
0x10a SWAP1
0x10b DUP4
0x10c ADD
0x10d SWAP2
0x10e DUP6
0x10f ADD
0x110 SWAP1
0x111 DUP1
0x112 DUP4
0x113 DUP4
0x114 PUSH1 0x0
---
0xf4: JUMPDEST 
0xf5: V94 = 0x40
0xf8: V95 = M[0x40]
0xf9: V96 = 0x20
0xfd: M[V95] = 0x20
0xff: V97 = M[V258]
0x102: V98 = ADD V95 0x20
0x103: M[V98] = V97
0x105: V99 = M[V258]
0x10c: V100 = ADD V95 0x40
0x10f: V101 = ADD V258 0x20
0x114: V102 = 0x0
---
Entry stack: [V13, V258]
Stack pops: 1
Stack additions: [S0, V95, V95, V100, V101, V99, V99, V100, V101, 0x0]
Exit stack: [V13, V258, V95, V95, V100, V101, V99, V99, V100, V101, 0x0]

================================

Block 0x116
[0x116:0x11e]
---
Predecessors: [0xf4, 0x11f]
Successors: [0x11f, 0x12e]
---
0x116 JUMPDEST
0x117 DUP4
0x118 DUP2
0x119 LT
0x11a ISZERO
0x11b PUSH2 0x12e
0x11e JUMPI
---
0x116: JUMPDEST 
0x119: V103 = LT S0 V99
0x11a: V104 = ISZERO V103
0x11b: V105 = 0x12e
0x11e: JUMPI 0x12e V104
---
Entry stack: [V13, V258, V95, V95, V100, V101, V99, V99, V100, V101, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, V258, V95, V95, V100, V101, V99, V99, V100, V101, S0]

================================

Block 0x11f
[0x11f:0x12d]
---
Predecessors: [0x116]
Successors: [0x116]
---
0x11f DUP2
0x120 DUP2
0x121 ADD
0x122 MLOAD
0x123 DUP4
0x124 DUP3
0x125 ADD
0x126 MSTORE
0x127 PUSH1 0x20
0x129 ADD
0x12a PUSH2 0x116
0x12d JUMP
---
0x121: V106 = ADD S0 V101
0x122: V107 = M[V106]
0x125: V108 = ADD S0 V100
0x126: M[V108] = V107
0x127: V109 = 0x20
0x129: V110 = ADD 0x20 S0
0x12a: V111 = 0x116
0x12d: JUMP 0x116
---
Entry stack: [V13, V258, V95, V95, V100, V101, V99, V99, V100, V101, S0]
Stack pops: 3
Stack additions: [S2, S1, V110]
Exit stack: [V13, V258, V95, V95, V100, V101, V99, V99, V100, V101, V110]

================================

Block 0x12e
[0x12e:0x141]
---
Predecessors: [0x116]
Successors: [0x142, 0x15b]
---
0x12e JUMPDEST
0x12f POP
0x130 POP
0x131 POP
0x132 POP
0x133 SWAP1
0x134 POP
0x135 SWAP1
0x136 DUP2
0x137 ADD
0x138 SWAP1
0x139 PUSH1 0x1f
0x13b AND
0x13c DUP1
0x13d ISZERO
0x13e PUSH2 0x15b
0x141 JUMPI
---
0x12e: JUMPDEST 
0x137: V112 = ADD V99 V100
0x139: V113 = 0x1f
0x13b: V114 = AND 0x1f V99
0x13d: V115 = ISZERO V114
0x13e: V116 = 0x15b
0x141: JUMPI 0x15b V115
---
Entry stack: [V13, V258, V95, V95, V100, V101, V99, V99, V100, V101, S0]
Stack pops: 7
Stack additions: [V112, V114]
Exit stack: [V13, V258, V95, V95, V112, V114]

================================

Block 0x142
[0x142:0x15a]
---
Predecessors: [0x12e]
Successors: [0x15b]
---
0x142 DUP1
0x143 DUP3
0x144 SUB
0x145 DUP1
0x146 MLOAD
0x147 PUSH1 0x1
0x149 DUP4
0x14a PUSH1 0x20
0x14c SUB
0x14d PUSH2 0x100
0x150 EXP
0x151 SUB
0x152 NOT
0x153 AND
0x154 DUP2
0x155 MSTORE
0x156 PUSH1 0x20
0x158 ADD
0x159 SWAP2
0x15a POP
---
0x144: V117 = SUB V112 V114
0x146: V118 = M[V117]
0x147: V119 = 0x1
0x14a: V120 = 0x20
0x14c: V121 = SUB 0x20 V114
0x14d: V122 = 0x100
0x150: V123 = EXP 0x100 V121
0x151: V124 = SUB V123 0x1
0x152: V125 = NOT V124
0x153: V126 = AND V125 V118
0x155: M[V117] = V126
0x156: V127 = 0x20
0x158: V128 = ADD 0x20 V117
---
Entry stack: [V13, V258, V95, V95, V112, V114]
Stack pops: 2
Stack additions: [V128, S0]
Exit stack: [V13, V258, V95, V95, V128, V114]

================================

Block 0x15b
[0x15b:0x168]
---
Predecessors: [0x12e, 0x142]
Successors: []
---
0x15b JUMPDEST
0x15c POP
0x15d SWAP3
0x15e POP
0x15f POP
0x160 POP
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP1
0x165 SWAP2
0x166 SUB
0x167 SWAP1
0x168 RETURN
---
0x15b: JUMPDEST 
0x161: V129 = 0x40
0x163: V130 = M[0x40]
0x166: V131 = SUB S1 V130
0x168: RETURN V130 V131
---
Entry stack: [V13, V258, V95, V95, S1, V114]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x169
[0x169:0x170]
---
Predecessors: [0x48]
Successors: [0x171, 0x175]
---
0x169 JUMPDEST
0x16a CALLVALUE
0x16b DUP1
0x16c ISZERO
0x16d PUSH2 0x175
0x170 JUMPI
---
0x169: JUMPDEST 
0x16a: V132 = CALLVALUE
0x16c: V133 = ISZERO V132
0x16d: V134 = 0x175
0x170: JUMPI 0x175 V133
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V132]
Exit stack: [V13, V132]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x169]
Successors: []
---
0x171 PUSH1 0x0
0x173 DUP1
0x174 REVERT
---
0x171: V135 = 0x0
0x174: REVERT 0x0 0x0
---
Entry stack: [V13, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V132]

================================

Block 0x175
[0x175:0x192]
---
Predecessors: [0x169]
Successors: [0x2c8]
---
0x175 JUMPDEST
0x176 POP
0x177 PUSH2 0xa0
0x17a PUSH1 0x1
0x17c PUSH1 0xa0
0x17e PUSH1 0x2
0x180 EXP
0x181 SUB
0x182 PUSH1 0x4
0x184 CALLDATALOAD
0x185 DUP2
0x186 AND
0x187 SWAP1
0x188 PUSH1 0x24
0x18a CALLDATALOAD
0x18b AND
0x18c PUSH1 0x44
0x18e CALLDATALOAD
0x18f PUSH2 0x2c8
0x192 JUMP
---
0x175: JUMPDEST 
0x177: V136 = 0xa0
0x17a: V137 = 0x1
0x17c: V138 = 0xa0
0x17e: V139 = 0x2
0x180: V140 = EXP 0x2 0xa0
0x181: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x182: V142 = 0x4
0x184: V143 = CALLDATALOAD 0x4
0x186: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x188: V145 = 0x24
0x18a: V146 = CALLDATALOAD 0x24
0x18b: V147 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V148 = 0x44
0x18e: V149 = CALLDATALOAD 0x44
0x18f: V150 = 0x2c8
0x192: JUMP 0x2c8
---
Entry stack: [V13, V132]
Stack pops: 1
Stack additions: [0xa0, V144, V147, V149]
Exit stack: [V13, 0xa0, V144, V147, V149]

================================

Block 0x193
[0x193:0x1a1]
---
Predecessors: [0x61]
Successors: [0x6a]
---
0x193 JUMPDEST
0x194 PUSH1 0x0
0x196 SLOAD
0x197 PUSH1 0x1
0x199 PUSH1 0xa0
0x19b PUSH1 0x2
0x19d EXP
0x19e SUB
0x19f AND
0x1a0 DUP2
0x1a1 JUMP
---
0x193: JUMPDEST 
0x194: V151 = 0x0
0x196: V152 = S[0x0]
0x197: V153 = 0x1
0x199: V154 = 0xa0
0x19b: V155 = 0x2
0x19d: V156 = EXP 0x2 0xa0
0x19e: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19f: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x1a1: JUMP 0x6a
---
Entry stack: [V13, 0x6a]
Stack pops: 1
Stack additions: [S0, V158]
Exit stack: [V13, 0x6a, V158]

================================

Block 0x1a2
[0x1a2:0x1b5]
---
Predecessors: [0x86]
Successors: [0x1b6, 0x1ba]
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 SLOAD
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af AND
0x1b0 ORIGIN
0x1b1 EQ
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V159 = 0x0
0x1a6: V160 = S[0x0]
0x1a7: V161 = 0x1
0x1a9: V162 = 0xa0
0x1ab: V163 = 0x2
0x1ad: V164 = EXP 0x2 0xa0
0x1ae: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1af: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x1b0: V167 = ORIGIN
0x1b1: V168 = EQ V167 V166
0x1b2: V169 = 0x1ba
0x1b5: JUMPI 0x1ba V168
---
Entry stack: [V13, 0xa0, V55, V57, V59]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xa0, V55, V57, V59, 0x0]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x1a2]
Successors: []
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 REVERT
---
0x1b6: V170 = 0x0
0x1b9: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V55, V57, V59, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V55, V57, V59, 0x0]

================================

Block 0x1ba
[0x1ba:0x1e1]
---
Predecessors: [0x1a2]
Successors: [0xa0]
---
0x1ba JUMPDEST
0x1bb DUP4
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 AND
0x1c5 DUP3
0x1c6 DUP5
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca PUSH1 0x0
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf DUP1
0x1d0 DUP4
0x1d1 SUB
0x1d2 DUP2
0x1d3 DUP6
0x1d4 DUP9
0x1d5 DUP9
0x1d6 CALL
0x1d7 SWAP9
0x1d8 SWAP8
0x1d9 POP
0x1da POP
0x1db POP
0x1dc POP
0x1dd POP
0x1de POP
0x1df POP
0x1e0 POP
0x1e1 JUMP
---
0x1ba: JUMPDEST 
0x1bc: V171 = 0x1
0x1be: V172 = 0xa0
0x1c0: V173 = 0x2
0x1c2: V174 = EXP 0x2 0xa0
0x1c3: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c4: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x1c7: V177 = 0x40
0x1c9: V178 = M[0x40]
0x1ca: V179 = 0x0
0x1cc: V180 = 0x40
0x1ce: V181 = M[0x40]
0x1d1: V182 = SUB V178 V181
0x1d6: V183 = CALL V59 V176 V57 V181 V182 V181 0x0
0x1e1: JUMP 0xa0
---
Entry stack: [V13, 0xa0, V55, V57, V59, 0x0]
Stack pops: 5
Stack additions: [V183]
Exit stack: [V13, V183]

================================

Block 0x1e2
[0x1e2:0x1f5]
---
Predecessors: [0xc0]
Successors: [0x1f6, 0x1fa]
---
0x1e2 JUMPDEST
0x1e3 PUSH1 0x0
0x1e5 DUP1
0x1e6 SLOAD
0x1e7 PUSH1 0x1
0x1e9 PUSH1 0xa0
0x1eb PUSH1 0x2
0x1ed EXP
0x1ee SUB
0x1ef AND
0x1f0 ORIGIN
0x1f1 EQ
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V184 = 0x0
0x1e6: V185 = S[0x0]
0x1e7: V186 = 0x1
0x1e9: V187 = 0xa0
0x1eb: V188 = 0x2
0x1ed: V189 = EXP 0x2 0xa0
0x1ee: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ef: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x1f0: V192 = ORIGIN
0x1f1: V193 = EQ V192 V191
0x1f2: V194 = 0x1fa
0x1f5: JUMPI 0x1fa V193
---
Entry stack: [V13, 0xa0, V81, V83, V86]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xa0, V81, V83, V86, 0x0]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x1e2]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V195 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V81, V83, V86, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V81, V83, V86, 0x0]

================================

Block 0x1fa
[0x1fa:0x258]
---
Predecessors: [0x1e2]
Successors: [0x259, 0x25d]
---
0x1fa JUMPDEST
0x1fb DUP4
0x1fc PUSH1 0x1
0x1fe PUSH1 0xa0
0x200 PUSH1 0x2
0x202 EXP
0x203 SUB
0x204 AND
0x205 PUSH4 0x95ea7b3
0x20a DUP4
0x20b DUP6
0x20c PUSH1 0x40
0x20e MLOAD
0x20f DUP4
0x210 PUSH4 0xffffffff
0x215 AND
0x216 PUSH1 0xe0
0x218 PUSH1 0x2
0x21a EXP
0x21b MUL
0x21c DUP2
0x21d MSTORE
0x21e PUSH1 0x4
0x220 ADD
0x221 DUP1
0x222 DUP4
0x223 PUSH1 0x1
0x225 PUSH1 0xa0
0x227 PUSH1 0x2
0x229 EXP
0x22a SUB
0x22b AND
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 AND
0x235 DUP2
0x236 MSTORE
0x237 PUSH1 0x20
0x239 ADD
0x23a DUP3
0x23b DUP2
0x23c MSTORE
0x23d PUSH1 0x20
0x23f ADD
0x240 SWAP3
0x241 POP
0x242 POP
0x243 POP
0x244 PUSH1 0x20
0x246 PUSH1 0x40
0x248 MLOAD
0x249 DUP1
0x24a DUP4
0x24b SUB
0x24c DUP2
0x24d PUSH1 0x0
0x24f DUP8
0x250 DUP1
0x251 EXTCODESIZE
0x252 ISZERO
0x253 DUP1
0x254 ISZERO
0x255 PUSH2 0x25d
0x258 JUMPI
---
0x1fa: JUMPDEST 
0x1fc: V196 = 0x1
0x1fe: V197 = 0xa0
0x200: V198 = 0x2
0x202: V199 = EXP 0x2 0xa0
0x203: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x204: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x205: V202 = 0x95ea7b3
0x20c: V203 = 0x40
0x20e: V204 = M[0x40]
0x210: V205 = 0xffffffff
0x215: V206 = AND 0xffffffff 0x95ea7b3
0x216: V207 = 0xe0
0x218: V208 = 0x2
0x21a: V209 = EXP 0x2 0xe0
0x21b: V210 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x95ea7b3
0x21d: M[V204] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x21e: V211 = 0x4
0x220: V212 = ADD 0x4 V204
0x223: V213 = 0x1
0x225: V214 = 0xa0
0x227: V215 = 0x2
0x229: V216 = EXP 0x2 0xa0
0x22a: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22b: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x22c: V219 = 0x1
0x22e: V220 = 0xa0
0x230: V221 = 0x2
0x232: V222 = EXP 0x2 0xa0
0x233: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x234: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x236: M[V212] = V224
0x237: V225 = 0x20
0x239: V226 = ADD 0x20 V212
0x23c: M[V226] = V83
0x23d: V227 = 0x20
0x23f: V228 = ADD 0x20 V226
0x244: V229 = 0x20
0x246: V230 = 0x40
0x248: V231 = M[0x40]
0x24b: V232 = SUB V228 V231
0x24d: V233 = 0x0
0x251: V234 = EXTCODESIZE V201
0x252: V235 = ISZERO V234
0x254: V236 = ISZERO V235
0x255: V237 = 0x25d
0x258: JUMPI 0x25d V236
---
Entry stack: [V13, 0xa0, V81, V83, V86, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V201, 0x95ea7b3, V228, 0x20, V231, V232, V231, 0x0, V201, V235]
Exit stack: [V13, 0xa0, V81, V83, V86, 0x0, V201, 0x95ea7b3, V228, 0x20, V231, V232, V231, 0x0, V201, V235]

================================

Block 0x259
[0x259:0x25c]
---
Predecessors: [0x1fa]
Successors: []
---
0x259 PUSH1 0x0
0x25b DUP1
0x25c REVERT
---
0x259: V238 = 0x0
0x25c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V81, V83, V86, 0x0, V201, 0x95ea7b3, V228, 0x20, V231, V232, V231, 0x0, V201, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V81, V83, V86, 0x0, V201, 0x95ea7b3, V228, 0x20, V231, V232, V231, 0x0, V201, V235]

================================

Block 0x25d
[0x25d:0x267]
---
Predecessors: [0x1fa, 0x2e0]
Successors: [0x268, 0x271]
---
0x25d JUMPDEST
0x25e POP
0x25f GAS
0x260 CALL
0x261 ISZERO
0x262 DUP1
0x263 ISZERO
0x264 PUSH2 0x271
0x267 JUMPI
---
0x25d: JUMPDEST 
0x25f: V239 = GAS
0x260: V240 = CALL V239 S1 0x0 S3 S4 S5 0x20
0x261: V241 = ISZERO V240
0x263: V242 = ISZERO V241
0x264: V243 = 0x271
0x267: JUMPI 0x271 V242
---
Entry stack: [V13, 0xa0, S13, S12, S11, 0x0, S9, {0x95ea7b3, 0xa9059cbb}, S7, 0x20, S5, S4, S3, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V241]
Exit stack: [V13, 0xa0, S13, S12, S11, 0x0, S9, {0x95ea7b3, 0xa9059cbb}, S7, V241]

================================

Block 0x268
[0x268:0x270]
---
Predecessors: [0x25d]
Successors: []
---
0x268 RETURNDATASIZE
0x269 PUSH1 0x0
0x26b DUP1
0x26c RETURNDATACOPY
0x26d RETURNDATASIZE
0x26e PUSH1 0x0
0x270 REVERT
---
0x268: V244 = RETURNDATASIZE
0x269: V245 = 0x0
0x26c: RETURNDATACOPY 0x0 0x0 V244
0x26d: V246 = RETURNDATASIZE
0x26e: V247 = 0x0
0x270: REVERT 0x0 V246
---
Entry stack: [V13, 0xa0, S7, S6, S5, 0x0, S3, {0x95ea7b3, 0xa9059cbb}, S1, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, S7, S6, S5, 0x0, S3, {0x95ea7b3, 0xa9059cbb}, S1, V241]

================================

Block 0x271
[0x271:0x282]
---
Predecessors: [0x25d]
Successors: [0x283, 0x287]
---
0x271 JUMPDEST
0x272 POP
0x273 POP
0x274 POP
0x275 POP
0x276 PUSH1 0x40
0x278 MLOAD
0x279 RETURNDATASIZE
0x27a PUSH1 0x20
0x27c DUP2
0x27d LT
0x27e ISZERO
0x27f PUSH2 0x287
0x282 JUMPI
---
0x271: JUMPDEST 
0x276: V248 = 0x40
0x278: V249 = M[0x40]
0x279: V250 = RETURNDATASIZE
0x27a: V251 = 0x20
0x27d: V252 = LT V250 0x20
0x27e: V253 = ISZERO V252
0x27f: V254 = 0x287
0x282: JUMPI 0x287 V253
---
Entry stack: [V13, 0xa0, S7, S6, S5, 0x0, S3, {0x95ea7b3, 0xa9059cbb}, S1, V241]
Stack pops: 4
Stack additions: [V249, V250]
Exit stack: [V13, 0xa0, S7, S6, S5, 0x0, V249, V250]

================================

Block 0x283
[0x283:0x286]
---
Predecessors: [0x271]
Successors: []
---
0x283 PUSH1 0x0
0x285 DUP1
0x286 REVERT
---
0x283: V255 = 0x0
0x286: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, S5, S4, S3, 0x0, V249, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, S5, S4, S3, 0x0, V249, V250]

================================

Block 0x287
[0x287:0x290]
---
Predecessors: [0x271]
Successors: [0xa0]
---
0x287 JUMPDEST
0x288 POP
0x289 MLOAD
0x28a SWAP5
0x28b SWAP4
0x28c POP
0x28d POP
0x28e POP
0x28f POP
0x290 JUMP
---
0x287: JUMPDEST 
0x289: V256 = M[V249]
0x290: JUMP 0xa0
---
Entry stack: [V13, 0xa0, S5, S4, S3, 0x0, V249, V250]
Stack pops: 7
Stack additions: [V256]
Exit stack: [V13, V256]

================================

Block 0x291
[0x291:0x2c7]
---
Predecessors: [0xeb]
Successors: [0xf4]
---
0x291 JUMPDEST
0x292 PUSH1 0x40
0x294 DUP1
0x295 MLOAD
0x296 DUP1
0x297 DUP3
0x298 ADD
0x299 SWAP1
0x29a SWAP2
0x29b MSTORE
0x29c PUSH1 0x10
0x29e DUP2
0x29f MSTORE
0x2a0 PUSH32 0x4167656e744163636f756e742e312e3000000000000000000000000000000000
0x2c1 PUSH1 0x20
0x2c3 DUP3
0x2c4 ADD
0x2c5 MSTORE
0x2c6 SWAP1
0x2c7 JUMP
---
0x291: JUMPDEST 
0x292: V257 = 0x40
0x295: V258 = M[0x40]
0x298: V259 = ADD 0x40 V258
0x29b: M[0x40] = V259
0x29c: V260 = 0x10
0x29f: M[V258] = 0x10
0x2a0: V261 = 0x4167656e744163636f756e742e312e3000000000000000000000000000000000
0x2c1: V262 = 0x20
0x2c4: V263 = ADD V258 0x20
0x2c5: M[V263] = 0x4167656e744163636f756e742e312e3000000000000000000000000000000000
0x2c7: JUMP 0xf4
---
Entry stack: [V13, 0xf4]
Stack pops: 1
Stack additions: [V258]
Exit stack: [V13, V258]

================================

Block 0x2c8
[0x2c8:0x2db]
---
Predecessors: [0x175]
Successors: [0x2dc, 0x2e0]
---
0x2c8 JUMPDEST
0x2c9 PUSH1 0x0
0x2cb DUP1
0x2cc SLOAD
0x2cd PUSH1 0x1
0x2cf PUSH1 0xa0
0x2d1 PUSH1 0x2
0x2d3 EXP
0x2d4 SUB
0x2d5 AND
0x2d6 ORIGIN
0x2d7 EQ
0x2d8 PUSH2 0x2e0
0x2db JUMPI
---
0x2c8: JUMPDEST 
0x2c9: V264 = 0x0
0x2cc: V265 = S[0x0]
0x2cd: V266 = 0x1
0x2cf: V267 = 0xa0
0x2d1: V268 = 0x2
0x2d3: V269 = EXP 0x2 0xa0
0x2d4: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d5: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x2d6: V272 = ORIGIN
0x2d7: V273 = EQ V272 V271
0x2d8: V274 = 0x2e0
0x2db: JUMPI 0x2e0 V273
---
Entry stack: [V13, 0xa0, V144, V147, V149]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xa0, V144, V147, V149, 0x0]

================================

Block 0x2dc
[0x2dc:0x2df]
---
Predecessors: [0x2c8]
Successors: []
---
0x2dc PUSH1 0x0
0x2de DUP1
0x2df REVERT
---
0x2dc: V275 = 0x0
0x2df: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V144, V147, V149, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V144, V147, V149, 0x0]

================================

Block 0x2e0
[0x2e0:0x33e]
---
Predecessors: [0x2c8]
Successors: [0x25d, 0x33f]
---
0x2e0 JUMPDEST
0x2e1 DUP4
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0xa0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 SUB
0x2ea AND
0x2eb PUSH4 0xa9059cbb
0x2f0 DUP5
0x2f1 DUP5
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 DUP4
0x2f6 PUSH4 0xffffffff
0x2fb AND
0x2fc PUSH1 0xe0
0x2fe PUSH1 0x2
0x300 EXP
0x301 MUL
0x302 DUP2
0x303 MSTORE
0x304 PUSH1 0x4
0x306 ADD
0x307 DUP1
0x308 DUP4
0x309 PUSH1 0x1
0x30b PUSH1 0xa0
0x30d PUSH1 0x2
0x30f EXP
0x310 SUB
0x311 AND
0x312 PUSH1 0x1
0x314 PUSH1 0xa0
0x316 PUSH1 0x2
0x318 EXP
0x319 SUB
0x31a AND
0x31b DUP2
0x31c MSTORE
0x31d PUSH1 0x20
0x31f ADD
0x320 DUP3
0x321 DUP2
0x322 MSTORE
0x323 PUSH1 0x20
0x325 ADD
0x326 SWAP3
0x327 POP
0x328 POP
0x329 POP
0x32a PUSH1 0x20
0x32c PUSH1 0x40
0x32e MLOAD
0x32f DUP1
0x330 DUP4
0x331 SUB
0x332 DUP2
0x333 PUSH1 0x0
0x335 DUP8
0x336 DUP1
0x337 EXTCODESIZE
0x338 ISZERO
0x339 DUP1
0x33a ISZERO
0x33b PUSH2 0x25d
0x33e JUMPI
---
0x2e0: JUMPDEST 
0x2e2: V276 = 0x1
0x2e4: V277 = 0xa0
0x2e6: V278 = 0x2
0x2e8: V279 = EXP 0x2 0xa0
0x2e9: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x2eb: V282 = 0xa9059cbb
0x2f2: V283 = 0x40
0x2f4: V284 = M[0x40]
0x2f6: V285 = 0xffffffff
0x2fb: V286 = AND 0xffffffff 0xa9059cbb
0x2fc: V287 = 0xe0
0x2fe: V288 = 0x2
0x300: V289 = EXP 0x2 0xe0
0x301: V290 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x303: M[V284] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x304: V291 = 0x4
0x306: V292 = ADD 0x4 V284
0x309: V293 = 0x1
0x30b: V294 = 0xa0
0x30d: V295 = 0x2
0x30f: V296 = EXP 0x2 0xa0
0x310: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x311: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x312: V299 = 0x1
0x314: V300 = 0xa0
0x316: V301 = 0x2
0x318: V302 = EXP 0x2 0xa0
0x319: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31a: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x31c: M[V292] = V304
0x31d: V305 = 0x20
0x31f: V306 = ADD 0x20 V292
0x322: M[V306] = V149
0x323: V307 = 0x20
0x325: V308 = ADD 0x20 V306
0x32a: V309 = 0x20
0x32c: V310 = 0x40
0x32e: V311 = M[0x40]
0x331: V312 = SUB V308 V311
0x333: V313 = 0x0
0x337: V314 = EXTCODESIZE V281
0x338: V315 = ISZERO V314
0x33a: V316 = ISZERO V315
0x33b: V317 = 0x25d
0x33e: JUMPI 0x25d V316
---
Entry stack: [V13, 0xa0, V144, V147, V149, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V281, 0xa9059cbb, V308, 0x20, V311, V312, V311, 0x0, V281, V315]
Exit stack: [V13, 0xa0, V144, V147, V149, 0x0, V281, 0xa9059cbb, V308, 0x20, V311, V312, V311, 0x0, V281, V315]

================================

Block 0x33f
[0x33f:0x342]
---
Predecessors: [0x2e0]
Successors: []
---
0x33f PUSH1 0x0
0x341 DUP1
0x342 REVERT
---
0x33f: V318 = 0x0
0x342: REVERT 0x0 0x0
---
Entry stack: [V13, 0xa0, V144, V147, V149, 0x0, V281, 0xa9059cbb, V308, 0x20, V311, V312, V311, 0x0, V281, V315]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xa0, V144, V147, V149, 0x0, V281, 0xa9059cbb, V308, 0x20, V311, V312, V311, 0x0, V281, V315]

================================

Block 0x343
[0x343:0x36e]
---
Predecessors: []
Successors: []
---
0x343 STOP
0x344 LOG1
0x345 PUSH6 0x627a7a723058
0x34c SHA3
0x34d MISSING 0xcc
0x34e MISSING 0x2e
0x34f MISSING 0xb3
0x350 MISSING 0xaf
0x351 MISSING 0x2d
0x352 LOG3
0x353 PUSH19 0x705819be9ab9d710d81c99d039cbcbee0b4d57
0x367 MISSING 0xd6
0x368 MISSING 0xe4
0x369 DUP10
0x36a BYTE
0x36b DUP3
0x36c MISSING 0xf
0x36d STOP
0x36e MISSING 0x29
---
0x343: STOP 
0x344: LOG S0 S1 S2
0x345: V319 = 0x627a7a723058
0x34c: V320 = SHA3 0x627a7a723058 S3
0x34d: MISSING 0xcc
0x34e: MISSING 0x2e
0x34f: MISSING 0xb3
0x350: MISSING 0xaf
0x351: MISSING 0x2d
0x352: LOG S0 S1 S2 S3 S4
0x353: V321 = 0x705819be9ab9d710d81c99d039cbcbee0b4d57
0x367: MISSING 0xd6
0x368: MISSING 0xe4
0x36a: V322 = BYTE S9 S0
0x36c: MISSING 0xf
0x36d: STOP 
0x36e: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V320, 0x705819be9ab9d710d81c99d039cbcbee0b4d57, S2, V322, S1, S2, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x55
Exit block: 0x6a
Body: 0x55, 0x5d, 0x61, 0x6a, 0x193

Function 1:
Public function signature: 0x9073ce12
Entry block: 0x86
Exit block: 0xa0
Body: 0x86, 0xa0, 0x1a2, 0x1b6, 0x1ba

Function 2:
Public function signature: 0xc863bac1
Entry block: 0xb4
Exit block: 0xa0
Body: 0xa0, 0xb4, 0xbc, 0xc0, 0x1e2, 0x1f6, 0x1fa, 0x259, 0x25d, 0x268, 0x271, 0x283, 0x287

Function 3:
Public function signature: 0xcce0cd0c
Entry block: 0xdf
Exit block: 0x15b
Body: 0xdf, 0xe7, 0xeb, 0xf4, 0x116, 0x11f, 0x12e, 0x142, 0x15b, 0x291

Function 4:
Public function signature: 0xf5537ede
Entry block: 0x169
Exit block: 0xa0
Body: 0xa0, 0x169, 0x171, 0x175, 0x25d, 0x268, 0x271, 0x283, 0x287, 0x2c8, 0x2dc, 0x2e0, 0x33f

Function 5:
Public fallback function
Entry block: 0x53
Exit block: 0x53
Body: 0x53

