Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3b
0xa: JUMPI 0x3b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xc7]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x85952454
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xc7
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x85952454
0x20: V14 = EQ V12 0x85952454
0x21: V15 = 0xc7
0x24: JUMPI 0xc7 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xe2]
---
0x25 DUP1
0x26 PUSH4 0x8da5cb5b
0x2b EQ
0x2c PUSH2 0xe2
0x2f JUMPI
---
0x26: V16 = 0x8da5cb5b
0x2b: V17 = EQ 0x8da5cb5b V12
0x2c: V18 = 0xe2
0x2f: JUMPI 0xe2 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x10b]
---
0x30 DUP1
0x31 PUSH4 0xbeabacc8
0x36 EQ
0x37 PUSH2 0x10b
0x3a JUMPI
---
0x31: V19 = 0xbeabacc8
0x36: V20 = EQ 0xbeabacc8 V12
0x37: V21 = 0x10b
0x3a: JUMPI 0x10b V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x3e]
---
Predecessors: [0x0, 0x30]
Successors: [0x3f]
---
0x3b JUMPDEST
0x3c PUSH2 0xc5
---
0x3b: JUMPDEST 
0x3c: V22 = 0xc5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V12, 0xc5]

================================

Block 0x3f
[0x3f:0x48]
---
Predecessors: [0x3b]
Successors: [0x49, 0xc2]
---
0x3f JUMPDEST
0x40 PUSH1 0x0
0x42 CALLVALUE
0x43 GT
0x44 ISZERO
0x45 PUSH2 0xc2
0x48 JUMPI
---
0x3f: JUMPDEST 
0x40: V23 = 0x0
0x42: V24 = CALLVALUE
0x43: V25 = GT V24 0x0
0x44: V26 = ISZERO V25
0x45: V27 = 0xc2
0x48: JUMPI 0xc2 V26
---
Entry stack: [V12, 0xc5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc5]

================================

Block 0x49
[0x49:0x4f]
---
Predecessors: [0x3f]
Successors: [0x141]
---
0x49 PUSH2 0x50
0x4c PUSH2 0x141
0x4f JUMP
---
0x49: V28 = 0x50
0x4c: V29 = 0x141
0x4f: JUMP 0x141
---
Entry stack: [V12, 0xc5]
Stack pops: 0
Stack additions: [0x50]
Exit stack: [V12, 0xc5, 0x50]

================================

Block 0x50
[0x50:0xb4]
---
Predecessors: [0x1b4]
Successors: [0xb5]
---
0x50 JUMPDEST
0x51 PUSH1 0x1
0x53 PUSH1 0xa0
0x55 PUSH1 0x2
0x57 EXP
0x58 SUB
0x59 AND
0x5a PUSH4 0x47e7ef24
0x5f CALLER
0x60 CALLVALUE
0x61 PUSH1 0x0
0x63 PUSH1 0x40
0x65 MLOAD
0x66 PUSH1 0x20
0x68 ADD
0x69 MSTORE
0x6a PUSH1 0x40
0x6c MLOAD
0x6d DUP4
0x6e PUSH4 0xffffffff
0x73 AND
0x74 PUSH1 0xe0
0x76 PUSH1 0x2
0x78 EXP
0x79 MUL
0x7a DUP2
0x7b MSTORE
0x7c PUSH1 0x4
0x7e ADD
0x7f DUP1
0x80 DUP4
0x81 PUSH1 0x1
0x83 PUSH1 0xa0
0x85 PUSH1 0x2
0x87 EXP
0x88 SUB
0x89 AND
0x8a PUSH1 0x1
0x8c PUSH1 0xa0
0x8e PUSH1 0x2
0x90 EXP
0x91 SUB
0x92 AND
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x20
0x97 ADD
0x98 DUP3
0x99 DUP2
0x9a MSTORE
0x9b PUSH1 0x20
0x9d ADD
0x9e SWAP3
0x9f POP
0xa0 POP
0xa1 POP
0xa2 PUSH1 0x20
0xa4 PUSH1 0x40
0xa6 MLOAD
0xa7 DUP1
0xa8 DUP4
0xa9 SUB
0xaa DUP2
0xab PUSH1 0x0
0xad DUP8
0xae DUP1
0xaf EXTCODESIZE
0xb0 ISZERO
0xb1 PUSH2 0x0
0xb4 JUMPI
---
0x50: JUMPDEST 
0x51: V30 = 0x1
0x53: V31 = 0xa0
0x55: V32 = 0x2
0x57: V33 = EXP 0x2 0xa0
0x58: V34 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5a: V36 = 0x47e7ef24
0x5f: V37 = CALLER
0x60: V38 = CALLVALUE
0x61: V39 = 0x0
0x63: V40 = 0x40
0x65: V41 = M[0x40]
0x66: V42 = 0x20
0x68: V43 = ADD 0x20 V41
0x69: M[V43] = 0x0
0x6a: V44 = 0x40
0x6c: V45 = M[0x40]
0x6e: V46 = 0xffffffff
0x73: V47 = AND 0xffffffff 0x47e7ef24
0x74: V48 = 0xe0
0x76: V49 = 0x2
0x78: V50 = EXP 0x2 0xe0
0x79: V51 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x47e7ef24
0x7b: M[V45] = 0x47e7ef2400000000000000000000000000000000000000000000000000000000
0x7c: V52 = 0x4
0x7e: V53 = ADD 0x4 V45
0x81: V54 = 0x1
0x83: V55 = 0xa0
0x85: V56 = 0x2
0x87: V57 = EXP 0x2 0xa0
0x88: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x8a: V60 = 0x1
0x8c: V61 = 0xa0
0x8e: V62 = 0x2
0x90: V63 = EXP 0x2 0xa0
0x91: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x94: M[V53] = V65
0x95: V66 = 0x20
0x97: V67 = ADD 0x20 V53
0x9a: M[V67] = V38
0x9b: V68 = 0x20
0x9d: V69 = ADD 0x20 V67
0xa2: V70 = 0x20
0xa4: V71 = 0x40
0xa6: V72 = M[0x40]
0xa9: V73 = SUB V69 V72
0xab: V74 = 0x0
0xaf: V75 = EXTCODESIZE V35
0xb0: V76 = ISZERO V75
0xb1: V77 = 0x0
0xb4: THROWI V76
---
Entry stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}, S0]
Stack pops: 1
Stack additions: [V35, 0x47e7ef24, V69, 0x20, V72, V73, V72, 0x0, V35]
Exit stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}, V35, 0x47e7ef24, V69, 0x20, V72, V73, V72, 0x0, V35]

================================

Block 0xb5
[0xb5:0xbe]
---
Predecessors: [0x50]
Successors: [0xbf]
---
0xb5 PUSH1 0x32
0xb7 GAS
0xb8 SUB
0xb9 CALL
0xba ISZERO
0xbb PUSH2 0x0
0xbe JUMPI
---
0xb5: V78 = 0x32
0xb7: V79 = GAS
0xb8: V80 = SUB V79 0x32
0xb9: V81 = CALL V80 V35 0x0 V72 V73 V72 0x20
0xba: V82 = ISZERO V81
0xbb: V83 = 0x0
0xbe: THROWI V82
---
Entry stack: [V12, 0x12d, V122, V125, S10, {0x0, 0xc5}, V35, 0x47e7ef24, V69, 0x20, V72, V73, V72, 0x0, V35]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, S10, {0x0, 0xc5}, V35, 0x47e7ef24, V69]

================================

Block 0xbf
[0xbf:0xc1]
---
Predecessors: [0xb5]
Successors: [0xc2]
---
0xbf POP
0xc0 POP
0xc1 POP
---
0xbf: NOP 
---
Entry stack: [V12, 0x12d, V122, V125, S4, {0x0, 0xc5}, V35, 0x47e7ef24, V69]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, S4, {0x0, 0xc5}]

================================

Block 0xc2
[0xc2:0xc2]
---
Predecessors: [0x3f, 0xbf]
Successors: [0xc3]
---
0xc2 JUMPDEST
---
0xc2: JUMPDEST 
---
Entry stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}]

================================

Block 0xc3
[0xc3:0xc4]
---
Predecessors: [0xc2]
Successors: [0xc5]
---
0xc3 JUMPDEST
0xc4 JUMP
---
0xc3: JUMPDEST 
0xc4: JUMP {0x0, 0xc5}
---
Entry stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, S1]

================================

Block 0xc5
[0xc5:0xc6]
---
Predecessors: [0xc3, 0x1fc]
Successors: []
---
0xc5 JUMPDEST
0xc6 STOP
---
0xc5: JUMPDEST 
0xc6: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc7
[0xc7:0xcc]
---
Predecessors: [0xb]
Successors: [0xcd]
---
0xc7 JUMPDEST
0xc8 CALLVALUE
0xc9 PUSH2 0x0
0xcc JUMPI
---
0xc7: JUMPDEST 
0xc8: V84 = CALLVALUE
0xc9: V85 = 0x0
0xcc: THROWI V84
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd
[0xcd:0xdf]
---
Predecessors: [0xc7]
Successors: [0x1b7]
---
0xcd PUSH2 0xc5
0xd0 PUSH1 0x1
0xd2 PUSH1 0xa0
0xd4 PUSH1 0x2
0xd6 EXP
0xd7 SUB
0xd8 PUSH1 0x4
0xda CALLDATALOAD
0xdb AND
0xdc PUSH2 0x1b7
0xdf JUMP
---
0xcd: V86 = 0xc5
0xd0: V87 = 0x1
0xd2: V88 = 0xa0
0xd4: V89 = 0x2
0xd6: V90 = EXP 0x2 0xa0
0xd7: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V92 = 0x4
0xda: V93 = CALLDATALOAD 0x4
0xdb: V94 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0xdc: V95 = 0x1b7
0xdf: JUMP 0x1b7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc5, V94]
Exit stack: [V12, 0xc5, V94]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: []
Successors: []
---
0xe0 JUMPDEST
0xe1 STOP
---
0xe0: JUMPDEST 
0xe1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe2
[0xe2:0xe7]
---
Predecessors: [0x25]
Successors: [0xe8]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 PUSH2 0x0
0xe7 JUMPI
---
0xe2: JUMPDEST 
0xe3: V96 = CALLVALUE
0xe4: V97 = 0x0
0xe7: THROWI V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0xe2]
Successors: [0x1ff]
---
0xe8 PUSH2 0xef
0xeb PUSH2 0x1ff
0xee JUMP
---
0xe8: V98 = 0xef
0xeb: V99 = 0x1ff
0xee: JUMP 0x1ff
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0xef
[0xef:0x10a]
---
Predecessors: [0x1ff]
Successors: []
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 DUP1
0xf3 MLOAD
0xf4 PUSH1 0x1
0xf6 PUSH1 0xa0
0xf8 PUSH1 0x2
0xfa EXP
0xfb SUB
0xfc SWAP1
0xfd SWAP3
0xfe AND
0xff DUP3
0x100 MSTORE
0x101 MLOAD
0x102 SWAP1
0x103 DUP2
0x104 SWAP1
0x105 SUB
0x106 PUSH1 0x20
0x108 ADD
0x109 SWAP1
0x10a RETURN
---
0xef: JUMPDEST 
0xf0: V100 = 0x40
0xf3: V101 = M[0x40]
0xf4: V102 = 0x1
0xf6: V103 = 0xa0
0xf8: V104 = 0x2
0xfa: V105 = EXP 0x2 0xa0
0xfb: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfe: V107 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x100: M[V101] = V107
0x101: V108 = M[0x40]
0x105: V109 = SUB V101 V108
0x106: V110 = 0x20
0x108: V111 = ADD 0x20 V109
0x10a: RETURN V108 V111
---
Entry stack: [V12, 0xef, V201]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x10b
[0x10b:0x110]
---
Predecessors: [0x30]
Successors: [0x111]
---
0x10b JUMPDEST
0x10c CALLVALUE
0x10d PUSH2 0x0
0x110 JUMPI
---
0x10b: JUMPDEST 
0x10c: V112 = CALLVALUE
0x10d: V113 = 0x0
0x110: THROWI V112
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x111
[0x111:0x12c]
---
Predecessors: [0x10b]
Successors: [0x20e]
---
0x111 PUSH2 0x12d
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c PUSH1 0x4
0x11e CALLDATALOAD
0x11f DUP2
0x120 AND
0x121 SWAP1
0x122 PUSH1 0x24
0x124 CALLDATALOAD
0x125 AND
0x126 PUSH1 0x44
0x128 CALLDATALOAD
0x129 PUSH2 0x20e
0x12c JUMP
---
0x111: V114 = 0x12d
0x114: V115 = 0x1
0x116: V116 = 0xa0
0x118: V117 = 0x2
0x11a: V118 = EXP 0x2 0xa0
0x11b: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V120 = 0x4
0x11e: V121 = CALLDATALOAD 0x4
0x120: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x122: V123 = 0x24
0x124: V124 = CALLDATALOAD 0x24
0x125: V125 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x126: V126 = 0x44
0x128: V127 = CALLDATALOAD 0x44
0x129: V128 = 0x20e
0x12c: JUMP 0x20e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d, V122, V125, V127]
Exit stack: [V12, 0x12d, V122, V125, V127]

================================

Block 0x12d
[0x12d:0x140]
---
Predecessors: [0x3a6]
Successors: []
---
0x12d JUMPDEST
0x12e PUSH1 0x40
0x130 DUP1
0x131 MLOAD
0x132 SWAP2
0x133 ISZERO
0x134 ISZERO
0x135 DUP3
0x136 MSTORE
0x137 MLOAD
0x138 SWAP1
0x139 DUP2
0x13a SWAP1
0x13b SUB
0x13c PUSH1 0x20
0x13e ADD
0x13f SWAP1
0x140 RETURN
---
0x12d: JUMPDEST 
0x12e: V129 = 0x40
0x131: V130 = M[0x40]
0x133: V131 = ISZERO S0
0x134: V132 = ISZERO V131
0x136: M[V130] = V132
0x137: V133 = M[0x40]
0x13b: V134 = SUB V130 V133
0x13c: V135 = 0x20
0x13e: V136 = ADD 0x20 V134
0x140: RETURN V133 V136
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x141
[0x141:0x1a0]
---
Predecessors: [0x49, 0x22a, 0x296]
Successors: [0x1a1]
---
0x141 JUMPDEST
0x142 PUSH1 0x0
0x144 DUP1
0x145 SLOAD
0x146 PUSH1 0x40
0x148 DUP1
0x149 MLOAD
0x14a PUSH1 0x20
0x14c SWAP1
0x14d DUP2
0x14e ADD
0x14f DUP5
0x150 SWAP1
0x151 MSTORE
0x152 DUP2
0x153 MLOAD
0x154 PUSH32 0xb8066bcb00000000000000000000000000000000000000000000000000000000
0x175 DUP2
0x176 MSTORE
0x177 SWAP2
0x178 MLOAD
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 SWAP1
0x182 SWAP4
0x183 AND
0x184 SWAP3
0x185 PUSH4 0xb8066bcb
0x18a SWAP3
0x18b PUSH1 0x4
0x18d DUP1
0x18e DUP3
0x18f ADD
0x190 SWAP4
0x191 SWAP3
0x192 SWAP2
0x193 DUP3
0x194 SWAP1
0x195 SUB
0x196 ADD
0x197 DUP2
0x198 DUP8
0x199 DUP8
0x19a DUP1
0x19b EXTCODESIZE
0x19c ISZERO
0x19d PUSH2 0x0
0x1a0 JUMPI
---
0x141: JUMPDEST 
0x142: V137 = 0x0
0x145: V138 = S[0x0]
0x146: V139 = 0x40
0x149: V140 = M[0x40]
0x14a: V141 = 0x20
0x14e: V142 = ADD 0x20 V140
0x151: M[V142] = 0x0
0x153: V143 = M[0x40]
0x154: V144 = 0xb8066bcb00000000000000000000000000000000000000000000000000000000
0x176: M[V143] = 0xb8066bcb00000000000000000000000000000000000000000000000000000000
0x178: V145 = M[0x40]
0x179: V146 = 0x1
0x17b: V147 = 0xa0
0x17d: V148 = 0x2
0x17f: V149 = EXP 0x2 0xa0
0x180: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V151 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x185: V152 = 0xb8066bcb
0x18b: V153 = 0x4
0x18f: V154 = ADD V143 0x4
0x195: V155 = SUB V143 V145
0x196: V156 = ADD V155 0x4
0x19b: V157 = EXTCODESIZE V151
0x19c: V158 = ISZERO V157
0x19d: V159 = 0x0
0x1a0: THROWI V158
---
Entry stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}, {0x50, 0x232, 0x29e}]
Stack pops: 0
Stack additions: [0x0, V151, 0xb8066bcb, V154, 0x20, V145, V156, V145, 0x0, V151]
Exit stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}, {0x50, 0x232, 0x29e}, 0x0, V151, 0xb8066bcb, V154, 0x20, V145, V156, V145, 0x0, V151]

================================

Block 0x1a1
[0x1a1:0x1aa]
---
Predecessors: [0x141]
Successors: [0x1ab]
---
0x1a1 PUSH1 0x32
0x1a3 GAS
0x1a4 SUB
0x1a5 CALL
0x1a6 ISZERO
0x1a7 PUSH2 0x0
0x1aa JUMPI
---
0x1a1: V160 = 0x32
0x1a3: V161 = GAS
0x1a4: V162 = SUB V161 0x32
0x1a5: V163 = CALL V162 V151 0x0 V145 V156 V145 0x20
0x1a6: V164 = ISZERO V163
0x1a7: V165 = 0x0
0x1aa: THROWI V164
---
Entry stack: [V12, 0x12d, V122, V125, S12, {0x0, 0xc5}, {0x50, 0x232, 0x29e}, 0x0, V151, 0xb8066bcb, V154, 0x20, V145, V156, V145, 0x0, V151]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, S12, {0x0, 0xc5}, {0x50, 0x232, 0x29e}, 0x0, V151, 0xb8066bcb, V154]

================================

Block 0x1ab
[0x1ab:0x1b3]
---
Predecessors: [0x1a1]
Successors: [0x1b4]
---
0x1ab POP
0x1ac POP
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 MLOAD
0x1b1 SWAP2
0x1b2 POP
0x1b3 POP
---
0x1ad: V166 = 0x40
0x1af: V167 = M[0x40]
0x1b0: V168 = M[V167]
---
Entry stack: [V12, 0x12d, V122, V125, S6, {0x0, 0xc5}, {0x50, 0x232, 0x29e}, 0x0, S2, 0xb8066bcb, S0]
Stack pops: 4
Stack additions: [V168]
Exit stack: [V12, 0x12d, V122, V125, S6, {0x0, 0xc5}, {0x50, 0x232, 0x29e}, V168]

================================

Block 0x1b4
[0x1b4:0x1b6]
---
Predecessors: [0x1ab]
Successors: [0x50, 0x232, 0x29e]
---
0x1b4 JUMPDEST
0x1b5 SWAP1
0x1b6 JUMP
---
0x1b4: JUMPDEST 
0x1b6: JUMP {0x50, 0x232, 0x29e}
---
Entry stack: [V12, 0x12d, V122, V125, S3, {0x0, 0xc5}, {0x50, 0x232, 0x29e}, V168]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x12d, V122, V125, S3, {0x0, 0xc5}, V168]

================================

Block 0x1b7
[0x1b7:0x1cd]
---
Predecessors: [0xcd]
Successors: [0x1ce, 0x1d2]
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x0
0x1ba SLOAD
0x1bb CALLER
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 SWAP1
0x1c5 DUP2
0x1c6 AND
0x1c7 SWAP2
0x1c8 AND
0x1c9 EQ
0x1ca PUSH2 0x1d2
0x1cd JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V169 = 0x0
0x1ba: V170 = S[0x0]
0x1bb: V171 = CALLER
0x1bc: V172 = 0x1
0x1be: V173 = 0xa0
0x1c0: V174 = 0x2
0x1c2: V175 = EXP 0x2 0xa0
0x1c3: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c6: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x1c8: V178 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x1c9: V179 = EQ V178 V177
0x1ca: V180 = 0x1d2
0x1cd: JUMPI 0x1d2 V179
---
Entry stack: [V12, 0xc5, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc5, V94]

================================

Block 0x1ce
[0x1ce:0x1d1]
---
Predecessors: [0x1b7]
Successors: []
---
0x1ce PUSH2 0x0
0x1d1 JUMP
---
0x1ce: V181 = 0x0
0x1d1: THROW 
---
Entry stack: [V12, 0xc5, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc5, V94]

================================

Block 0x1d2
[0x1d2:0x1fa]
---
Predecessors: [0x1b7]
Successors: [0x1fb]
---
0x1d2 JUMPDEST
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 SLOAD
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec NOT
0x1ed AND
0x1ee PUSH1 0x1
0x1f0 PUSH1 0xa0
0x1f2 PUSH1 0x2
0x1f4 EXP
0x1f5 SUB
0x1f6 DUP4
0x1f7 AND
0x1f8 OR
0x1f9 SWAP1
0x1fa SSTORE
---
0x1d2: JUMPDEST 
0x1d3: V182 = 0x0
0x1d6: V183 = S[0x0]
0x1d7: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V185 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V186 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V183
0x1ee: V187 = 0x1
0x1f0: V188 = 0xa0
0x1f2: V189 = 0x2
0x1f4: V190 = EXP 0x2 0xa0
0x1f5: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f7: V192 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V193 = OR V192 V186
0x1fa: S[0x0] = V193
---
Entry stack: [V12, 0xc5, V94]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc5, V94]

================================

Block 0x1fb
[0x1fb:0x1fb]
---
Predecessors: [0x1d2]
Successors: [0x1fc]
---
0x1fb JUMPDEST
---
0x1fb: JUMPDEST 
---
Entry stack: [V12, 0xc5, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc5, V94]

================================

Block 0x1fc
[0x1fc:0x1fe]
---
Predecessors: [0x1fb]
Successors: [0xc5]
---
0x1fc JUMPDEST
0x1fd POP
0x1fe JUMP
---
0x1fc: JUMPDEST 
0x1fe: JUMP 0xc5
---
Entry stack: [V12, 0xc5, V94]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ff
[0x1ff:0x20d]
---
Predecessors: [0xe8]
Successors: [0xef]
---
0x1ff JUMPDEST
0x200 PUSH1 0x0
0x202 SLOAD
0x203 PUSH1 0x1
0x205 PUSH1 0xa0
0x207 PUSH1 0x2
0x209 EXP
0x20a SUB
0x20b AND
0x20c DUP2
0x20d JUMP
---
0x1ff: JUMPDEST 
0x200: V194 = 0x0
0x202: V195 = S[0x0]
0x203: V196 = 0x1
0x205: V197 = 0xa0
0x207: V198 = 0x2
0x209: V199 = EXP 0x2 0xa0
0x20a: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20b: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x20d: JUMP 0xef
---
Entry stack: [V12, 0xef]
Stack pops: 1
Stack additions: [S0, V201]
Exit stack: [V12, 0xef, V201]

================================

Block 0x20e
[0x20e:0x225]
---
Predecessors: [0x111]
Successors: [0x226, 0x22a]
---
0x20e JUMPDEST
0x20f PUSH1 0x0
0x211 DUP1
0x212 SLOAD
0x213 CALLER
0x214 PUSH1 0x1
0x216 PUSH1 0xa0
0x218 PUSH1 0x2
0x21a EXP
0x21b SUB
0x21c SWAP1
0x21d DUP2
0x21e AND
0x21f SWAP2
0x220 AND
0x221 EQ
0x222 PUSH2 0x22a
0x225 JUMPI
---
0x20e: JUMPDEST 
0x20f: V202 = 0x0
0x212: V203 = S[0x0]
0x213: V204 = CALLER
0x214: V205 = 0x1
0x216: V206 = 0xa0
0x218: V207 = 0x2
0x21a: V208 = EXP 0x2 0xa0
0x21b: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21e: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x220: V211 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x221: V212 = EQ V211 V210
0x222: V213 = 0x22a
0x225: JUMPI 0x22a V212
---
Entry stack: [V12, 0x12d, V122, V125, V127]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x12d, V122, V125, V127, 0x0]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x20e]
Successors: []
---
0x226 PUSH2 0x0
0x229 JUMP
---
0x226: V214 = 0x0
0x229: THROW 
---
Entry stack: [V12, 0x12d, V122, V125, V127, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, V127, 0x0]

================================

Block 0x22a
[0x22a:0x231]
---
Predecessors: [0x20e]
Successors: [0x141]
---
0x22a JUMPDEST
0x22b PUSH2 0x232
0x22e PUSH2 0x141
0x231 JUMP
---
0x22a: JUMPDEST 
0x22b: V215 = 0x232
0x22e: V216 = 0x141
0x231: JUMP 0x141
---
Entry stack: [V12, 0x12d, V122, V125, V127, 0x0]
Stack pops: 0
Stack additions: [0x232]
Exit stack: [V12, 0x12d, V122, V125, V127, 0x0, 0x232]

================================

Block 0x232
[0x232:0x24b]
---
Predecessors: [0x1b4]
Successors: [0x24c, 0x326]
---
0x232 JUMPDEST
0x233 PUSH1 0x1
0x235 PUSH1 0xa0
0x237 PUSH1 0x2
0x239 EXP
0x23a SUB
0x23b AND
0x23c DUP5
0x23d PUSH1 0x1
0x23f PUSH1 0xa0
0x241 PUSH1 0x2
0x243 EXP
0x244 SUB
0x245 AND
0x246 EQ
0x247 ISZERO
0x248 PUSH2 0x326
0x24b JUMPI
---
0x232: JUMPDEST 
0x233: V217 = 0x1
0x235: V218 = 0xa0
0x237: V219 = 0x2
0x239: V220 = EXP 0x2 0xa0
0x23a: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23b: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x23d: V223 = 0x1
0x23f: V224 = 0xa0
0x241: V225 = 0x2
0x243: V226 = EXP 0x2 0xa0
0x244: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x245: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x246: V229 = EQ V228 V222
0x247: V230 = ISZERO V229
0x248: V231 = 0x326
0x24b: JUMPI 0x326 V230
---
Entry stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1]
Exit stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}]

================================

Block 0x24c
[0x24c:0x255]
---
Predecessors: [0x232]
Successors: [0x256, 0x265]
---
0x24c PUSH1 0x0
0x24e DUP3
0x24f GT
0x250 DUP1
0x251 ISZERO
0x252 PUSH2 0x265
0x255 JUMPI
---
0x24c: V232 = 0x0
0x24f: V233 = GT S1 0x0
0x251: V234 = ISZERO V233
0x252: V235 = 0x265
0x255: JUMPI 0x265 V234
---
Entry stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}]
Stack pops: 2
Stack additions: [S1, S0, V233]
Exit stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}, V233]

================================

Block 0x256
[0x256:0x264]
---
Predecessors: [0x24c]
Successors: [0x265]
---
0x256 POP
0x257 DUP2
0x258 ADDRESS
0x259 PUSH1 0x1
0x25b PUSH1 0xa0
0x25d PUSH1 0x2
0x25f EXP
0x260 SUB
0x261 AND
0x262 BALANCE
0x263 LT
0x264 ISZERO
---
0x258: V236 = ADDRESS
0x259: V237 = 0x1
0x25b: V238 = 0xa0
0x25d: V239 = 0x2
0x25f: V240 = EXP 0x2 0xa0
0x260: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x261: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x262: V243 = BALANCE V242
0x263: V244 = LT V243 S2
0x264: V245 = ISZERO V244
---
Entry stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}, V233]
Stack pops: 3
Stack additions: [S2, S1, V245]
Exit stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}, V245]

================================

Block 0x265
[0x265:0x26a]
---
Predecessors: [0x24c, 0x256]
Successors: [0x26b, 0x319]
---
0x265 JUMPDEST
0x266 ISZERO
0x267 PUSH2 0x319
0x26a JUMPI
---
0x265: JUMPDEST 
0x266: V246 = ISZERO S0
0x267: V247 = 0x319
0x26a: JUMPI 0x319 V246
---
Entry stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}]

================================

Block 0x26b
[0x26b:0x291]
---
Predecessors: [0x265]
Successors: [0x292, 0x296]
---
0x26b PUSH1 0x40
0x26d MLOAD
0x26e PUSH1 0x1
0x270 PUSH1 0xa0
0x272 PUSH1 0x2
0x274 EXP
0x275 SUB
0x276 DUP5
0x277 AND
0x278 SWAP1
0x279 DUP4
0x27a SWAP1
0x27b PUSH1 0x0
0x27d DUP2
0x27e DUP2
0x27f DUP2
0x280 DUP6
0x281 DUP8
0x282 PUSH2 0x8502
0x285 GAS
0x286 SUB
0x287 CALL
0x288 SWAP3
0x289 POP
0x28a POP
0x28b POP
0x28c ISZERO
0x28d ISZERO
0x28e PUSH2 0x296
0x291 JUMPI
---
0x26b: V248 = 0x40
0x26d: V249 = M[0x40]
0x26e: V250 = 0x1
0x270: V251 = 0xa0
0x272: V252 = 0x2
0x274: V253 = EXP 0x2 0xa0
0x275: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V255 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V256 = 0x0
0x282: V257 = 0x8502
0x285: V258 = GAS
0x286: V259 = SUB V258 0x8502
0x287: V260 = CALL V259 V255 S1 V249 0x0 V249 0x0
0x28c: V261 = ISZERO V260
0x28d: V262 = ISZERO V261
0x28e: V263 = 0x296
0x291: JUMPI 0x296 V262
---
Entry stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x26b]
Successors: []
---
0x292 PUSH2 0x0
0x295 JUMP
---
0x292: V264 = 0x0
0x295: THROW 
---
Entry stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}]

================================

Block 0x296
[0x296:0x29d]
---
Predecessors: [0x26b]
Successors: [0x141]
---
0x296 JUMPDEST
0x297 PUSH2 0x29e
0x29a PUSH2 0x141
0x29d JUMP
---
0x296: JUMPDEST 
0x297: V265 = 0x29e
0x29a: V266 = 0x141
0x29d: JUMP 0x141
---
Entry stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}]
Stack pops: 0
Stack additions: [0x29e]
Exit stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}, 0x29e]

================================

Block 0x29e
[0x29e:0x302]
---
Predecessors: [0x1b4]
Successors: [0x303]
---
0x29e JUMPDEST
0x29f PUSH1 0x1
0x2a1 PUSH1 0xa0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 SUB
0x2a7 AND
0x2a8 PUSH4 0xa9059cbb
0x2ad DUP5
0x2ae DUP5
0x2af PUSH1 0x0
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 PUSH1 0x20
0x2b6 ADD
0x2b7 MSTORE
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb DUP4
0x2bc PUSH4 0xffffffff
0x2c1 AND
0x2c2 PUSH1 0xe0
0x2c4 PUSH1 0x2
0x2c6 EXP
0x2c7 MUL
0x2c8 DUP2
0x2c9 MSTORE
0x2ca PUSH1 0x4
0x2cc ADD
0x2cd DUP1
0x2ce DUP4
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 AND
0x2d8 PUSH1 0x1
0x2da PUSH1 0xa0
0x2dc PUSH1 0x2
0x2de EXP
0x2df SUB
0x2e0 AND
0x2e1 DUP2
0x2e2 MSTORE
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 DUP3
0x2e7 DUP2
0x2e8 MSTORE
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec SWAP3
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 PUSH1 0x20
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 DUP1
0x2f6 DUP4
0x2f7 SUB
0x2f8 DUP2
0x2f9 PUSH1 0x0
0x2fb DUP8
0x2fc DUP1
0x2fd EXTCODESIZE
0x2fe ISZERO
0x2ff PUSH2 0x0
0x302 JUMPI
---
0x29e: JUMPDEST 
0x29f: V267 = 0x1
0x2a1: V268 = 0xa0
0x2a3: V269 = 0x2
0x2a5: V270 = EXP 0x2 0xa0
0x2a6: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a7: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2a8: V273 = 0xa9059cbb
0x2af: V274 = 0x0
0x2b1: V275 = 0x40
0x2b3: V276 = M[0x40]
0x2b4: V277 = 0x20
0x2b6: V278 = ADD 0x20 V276
0x2b7: M[V278] = 0x0
0x2b8: V279 = 0x40
0x2ba: V280 = M[0x40]
0x2bc: V281 = 0xffffffff
0x2c1: V282 = AND 0xffffffff 0xa9059cbb
0x2c2: V283 = 0xe0
0x2c4: V284 = 0x2
0x2c6: V285 = EXP 0x2 0xe0
0x2c7: V286 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2c9: M[V280] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2ca: V287 = 0x4
0x2cc: V288 = ADD 0x4 V280
0x2cf: V289 = 0x1
0x2d1: V290 = 0xa0
0x2d3: V291 = 0x2
0x2d5: V292 = EXP 0x2 0xa0
0x2d6: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d7: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x2d8: V295 = 0x1
0x2da: V296 = 0xa0
0x2dc: V297 = 0x2
0x2de: V298 = EXP 0x2 0xa0
0x2df: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e0: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x2e2: M[V288] = V300
0x2e3: V301 = 0x20
0x2e5: V302 = ADD 0x20 V288
0x2e8: M[V302] = S2
0x2e9: V303 = 0x20
0x2eb: V304 = ADD 0x20 V302
0x2f0: V305 = 0x20
0x2f2: V306 = 0x40
0x2f4: V307 = M[0x40]
0x2f7: V308 = SUB V304 V307
0x2f9: V309 = 0x0
0x2fd: V310 = EXTCODESIZE V272
0x2fe: V311 = ISZERO V310
0x2ff: V312 = 0x0
0x302: THROWI V311
---
Entry stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V272, 0xa9059cbb, V304, 0x20, V307, V308, V307, 0x0, V272]
Exit stack: [V12, 0x12d, V122, V125, S2, {0x0, 0xc5}, V272, 0xa9059cbb, V304, 0x20, V307, V308, V307, 0x0, V272]

================================

Block 0x303
[0x303:0x30c]
---
Predecessors: [0x29e]
Successors: [0x30d]
---
0x303 PUSH1 0x32
0x305 GAS
0x306 SUB
0x307 CALL
0x308 ISZERO
0x309 PUSH2 0x0
0x30c JUMPI
---
0x303: V313 = 0x32
0x305: V314 = GAS
0x306: V315 = SUB V314 0x32
0x307: V316 = CALL V315 V272 0x0 V307 V308 V307 0x20
0x308: V317 = ISZERO V316
0x309: V318 = 0x0
0x30c: THROWI V317
---
Entry stack: [V12, 0x12d, V122, V125, S10, {0x0, 0xc5}, V272, 0xa9059cbb, V304, 0x20, V307, V308, V307, 0x0, V272]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, S10, {0x0, 0xc5}, V272, 0xa9059cbb, V304]

================================

Block 0x30d
[0x30d:0x318]
---
Predecessors: [0x303]
Successors: [0x3a4]
---
0x30d POP
0x30e PUSH1 0x1
0x310 SWAP3
0x311 POP
0x312 PUSH2 0x3a4
0x315 SWAP2
0x316 POP
0x317 POP
0x318 JUMP
---
0x30e: V319 = 0x1
0x312: V320 = 0x3a4
0x318: JUMP 0x3a4
---
Entry stack: [V12, 0x12d, V122, V125, S4, {0x0, 0xc5}, V272, 0xa9059cbb, V304]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V12, 0x12d, V122, V125, S4, 0x1]

================================

Block 0x319
[0x319:0x320]
---
Predecessors: [0x265]
Successors: [0x3a4]
---
0x319 JUMPDEST
0x31a POP
0x31b PUSH1 0x0
0x31d PUSH2 0x3a4
0x320 JUMP
---
0x319: JUMPDEST 
0x31b: V321 = 0x0
0x31d: V322 = 0x3a4
0x320: JUMP 0x3a4
---
Entry stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x12d, V122, V125, S1, 0x0]

================================

Block 0x321
[0x321:0x325]
---
Predecessors: []
Successors: [0x3a4]
---
0x321 JUMPDEST
0x322 PUSH2 0x3a4
0x325 JUMP
---
0x321: JUMPDEST 
0x322: V323 = 0x3a4
0x325: JUMP 0x3a4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x326
[0x326:0x38b]
---
Predecessors: [0x232]
Successors: [0x38c]
---
0x326 JUMPDEST
0x327 DUP4
0x328 PUSH1 0x1
0x32a PUSH1 0xa0
0x32c PUSH1 0x2
0x32e EXP
0x32f SUB
0x330 AND
0x331 PUSH4 0xa9059cbb
0x336 DUP5
0x337 DUP5
0x338 PUSH1 0x0
0x33a PUSH1 0x40
0x33c MLOAD
0x33d PUSH1 0x20
0x33f ADD
0x340 MSTORE
0x341 PUSH1 0x40
0x343 MLOAD
0x344 DUP4
0x345 PUSH4 0xffffffff
0x34a AND
0x34b PUSH1 0xe0
0x34d PUSH1 0x2
0x34f EXP
0x350 MUL
0x351 DUP2
0x352 MSTORE
0x353 PUSH1 0x4
0x355 ADD
0x356 DUP1
0x357 DUP4
0x358 PUSH1 0x1
0x35a PUSH1 0xa0
0x35c PUSH1 0x2
0x35e EXP
0x35f SUB
0x360 AND
0x361 PUSH1 0x1
0x363 PUSH1 0xa0
0x365 PUSH1 0x2
0x367 EXP
0x368 SUB
0x369 AND
0x36a DUP2
0x36b MSTORE
0x36c PUSH1 0x20
0x36e ADD
0x36f DUP3
0x370 DUP2
0x371 MSTORE
0x372 PUSH1 0x20
0x374 ADD
0x375 SWAP3
0x376 POP
0x377 POP
0x378 POP
0x379 PUSH1 0x20
0x37b PUSH1 0x40
0x37d MLOAD
0x37e DUP1
0x37f DUP4
0x380 SUB
0x381 DUP2
0x382 PUSH1 0x0
0x384 DUP8
0x385 DUP1
0x386 EXTCODESIZE
0x387 ISZERO
0x388 PUSH2 0x0
0x38b JUMPI
---
0x326: JUMPDEST 
0x328: V324 = 0x1
0x32a: V325 = 0xa0
0x32c: V326 = 0x2
0x32e: V327 = EXP 0x2 0xa0
0x32f: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x330: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x331: V330 = 0xa9059cbb
0x338: V331 = 0x0
0x33a: V332 = 0x40
0x33c: V333 = M[0x40]
0x33d: V334 = 0x20
0x33f: V335 = ADD 0x20 V333
0x340: M[V335] = 0x0
0x341: V336 = 0x40
0x343: V337 = M[0x40]
0x345: V338 = 0xffffffff
0x34a: V339 = AND 0xffffffff 0xa9059cbb
0x34b: V340 = 0xe0
0x34d: V341 = 0x2
0x34f: V342 = EXP 0x2 0xe0
0x350: V343 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x352: M[V337] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x353: V344 = 0x4
0x355: V345 = ADD 0x4 V337
0x358: V346 = 0x1
0x35a: V347 = 0xa0
0x35c: V348 = 0x2
0x35e: V349 = EXP 0x2 0xa0
0x35f: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x360: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x361: V352 = 0x1
0x363: V353 = 0xa0
0x365: V354 = 0x2
0x367: V355 = EXP 0x2 0xa0
0x368: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x369: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x36b: M[V345] = V357
0x36c: V358 = 0x20
0x36e: V359 = ADD 0x20 V345
0x371: M[V359] = S1
0x372: V360 = 0x20
0x374: V361 = ADD 0x20 V359
0x379: V362 = 0x20
0x37b: V363 = 0x40
0x37d: V364 = M[0x40]
0x380: V365 = SUB V361 V364
0x382: V366 = 0x0
0x386: V367 = EXTCODESIZE V329
0x387: V368 = ISZERO V367
0x388: V369 = 0x0
0x38b: THROWI V368
---
Entry stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V329, 0xa9059cbb, V361, 0x20, V364, V365, V364, 0x0, V329]
Exit stack: [V12, 0x12d, V122, V125, S1, {0x0, 0xc5}, V329, 0xa9059cbb, V361, 0x20, V364, V365, V364, 0x0, V329]

================================

Block 0x38c
[0x38c:0x395]
---
Predecessors: [0x326]
Successors: [0x396]
---
0x38c PUSH1 0x32
0x38e GAS
0x38f SUB
0x390 CALL
0x391 ISZERO
0x392 PUSH2 0x0
0x395 JUMPI
---
0x38c: V370 = 0x32
0x38e: V371 = GAS
0x38f: V372 = SUB V371 0x32
0x390: V373 = CALL V372 V329 0x0 V364 V365 V364 0x20
0x391: V374 = ISZERO V373
0x392: V375 = 0x0
0x395: THROWI V374
---
Entry stack: [V12, 0x12d, V122, V125, S10, {0x0, 0xc5}, V329, 0xa9059cbb, V361, 0x20, V364, V365, V364, 0x0, V329]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, S10, {0x0, 0xc5}, V329, 0xa9059cbb, V361]

================================

Block 0x396
[0x396:0x3a3]
---
Predecessors: [0x38c]
Successors: [0x3a4]
---
0x396 POP
0x397 POP
0x398 PUSH1 0x40
0x39a MLOAD
0x39b MLOAD
0x39c SWAP2
0x39d POP
0x39e PUSH2 0x3a4
0x3a1 SWAP1
0x3a2 POP
0x3a3 JUMP
---
0x398: V376 = 0x40
0x39a: V377 = M[0x40]
0x39b: V378 = M[V377]
0x39e: V379 = 0x3a4
0x3a3: JUMP 0x3a4
---
Entry stack: [V12, 0x12d, V122, V125, S4, {0x0, 0xc5}, V329, 0xa9059cbb, V361]
Stack pops: 4
Stack additions: [V378]
Exit stack: [V12, 0x12d, V122, V125, S4, V378]

================================

Block 0x3a4
[0x3a4:0x3a4]
---
Predecessors: [0x30d, 0x319, 0x321, 0x396]
Successors: [0x3a5]
---
0x3a4 JUMPDEST
---
0x3a4: JUMPDEST 
---
Entry stack: [V12, 0x12d, V122, V125, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, S1, S0]

================================

Block 0x3a5
[0x3a5:0x3a5]
---
Predecessors: [0x3a4]
Successors: [0x3a6]
---
0x3a5 JUMPDEST
---
0x3a5: JUMPDEST 
---
Entry stack: [V12, 0x12d, V122, V125, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V122, V125, S1, S0]

================================

Block 0x3a6
[0x3a6:0x3ac]
---
Predecessors: [0x3a5]
Successors: [0x12d]
---
0x3a6 JUMPDEST
0x3a7 SWAP4
0x3a8 SWAP3
0x3a9 POP
0x3aa POP
0x3ab POP
0x3ac JUMP
---
0x3a6: JUMPDEST 
0x3ac: JUMP 0x12d
---
Entry stack: [V12, 0x12d, V122, V125, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x3ad
[0x3ad:0x3df]
---
Predecessors: []
Successors: []
---
0x3ad STOP
0x3ae LOG1
0x3af PUSH6 0x627a7a723058
0x3b6 SHA3
0x3b7 CALLVALUE
0x3b8 PUSH8 0x46276dd31487900e
0x3c1 EXTCODECOPY
0x3c2 MISSING 0xb1
0x3c3 GASPRICE
0x3c4 MISSING 0xc8
0x3c5 MISSING 0xb3
0x3c6 DUP3
0x3c7 MISSING 0xb9
0x3c8 MISSING 0xed
0x3c9 JUMP
0x3ca SAR
0x3cb DUP11
0x3cc PUSH19 0xe4087cec89ab0c8503490029
---
0x3ad: STOP 
0x3ae: LOG S0 S1 S2
0x3af: V380 = 0x627a7a723058
0x3b6: V381 = SHA3 0x627a7a723058 S3
0x3b7: V382 = CALLVALUE
0x3b8: V383 = 0x46276dd31487900e
0x3c1: EXTCODECOPY 0x46276dd31487900e V382 V381 S4
0x3c2: MISSING 0xb1
0x3c3: V384 = GASPRICE
0x3c4: MISSING 0xc8
0x3c5: MISSING 0xb3
0x3c7: MISSING 0xb9
0x3c8: MISSING 0xed
0x3c9: JUMP S0
0x3ca: V385 = SAR S0 S1
0x3cc: V386 = 0xe4087cec89ab0c8503490029
---
Entry stack: []
Stack pops: 0
Stack additions: [V384, S2, S0, S1, S2, 0xe4087cec89ab0c8503490029, S11, V385, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Function 0:
Public function signature: 0x85952454
Entry block: 0xc7
Exit block: 0xc5
Body: 0xc5, 0xc7, 0xcd, 0x1b7, 0x1ce, 0x1d2, 0x1fb, 0x1fc

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xe2
Exit block: 0xef
Body: 0xe2, 0xe8, 0xef, 0x1ff

Function 2:
Public function signature: 0xbeabacc8
Entry block: 0x10b
Exit block: 0x12d
Body: 0x10b, 0x111, 0x12d, 0x20e, 0x226, 0x22a, 0x232, 0x24c, 0x256, 0x265, 0x26b, 0x292, 0x296, 0x29e, 0x303, 0x30d, 0x319, 0x326, 0x38c, 0x396, 0x3a4, 0x3a5, 0x3a6

Function 3:
Public fallback function
Entry block: 0x3b
Exit block: 0xc5
Body: 0x3b, 0x3f, 0x49, 0x50, 0xb5, 0xbf, 0xc2, 0xc3, 0xc5

Function 4:
Private function
Entry block: 0x141
Exit block: 0x1b4
Body: 0x141, 0x1a1, 0x1ab, 0x1b4

