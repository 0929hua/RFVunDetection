Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8a
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8a
0xc: JUMPI 0x8a V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x8c]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x277b6527
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x8c
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x277b6527
0x22: V15 = EQ V13 0x277b6527
0x23: V16 = 0x8c
0x26: JUMPI 0x8c V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xbb]
---
0x27 DUP1
0x28 PUSH4 0x27b0c674
0x2d EQ
0x2e PUSH2 0xbb
0x31 JUMPI
---
0x28: V17 = 0x27b0c674
0x2d: V18 = EQ 0x27b0c674 V13
0x2e: V19 = 0xbb
0x31: JUMPI 0xbb V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xce]
---
0x32 DUP1
0x33 PUSH4 0x327107f7
0x38 EQ
0x39 PUSH2 0xce
0x3c JUMPI
---
0x33: V20 = 0x327107f7
0x38: V21 = EQ 0x327107f7 V13
0x39: V22 = 0xce
0x3c: JUMPI 0xce V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xe1]
---
0x3d DUP1
0x3e PUSH4 0x38af3eed
0x43 EQ
0x44 PUSH2 0xe1
0x47 JUMPI
---
0x3e: V23 = 0x38af3eed
0x43: V24 = EQ 0x38af3eed V13
0x44: V25 = 0xe1
0x47: JUMPI 0xe1 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xf4]
---
0x48 DUP1
0x49 PUSH4 0x590e1ae3
0x4e EQ
0x4f PUSH2 0xf4
0x52 JUMPI
---
0x49: V26 = 0x590e1ae3
0x4e: V27 = EQ 0x590e1ae3 V13
0x4f: V28 = 0xf4
0x52: JUMPI 0xf4 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x107]
---
0x53 DUP1
0x54 PUSH4 0x5b6e7be2
0x59 EQ
0x5a PUSH2 0x107
0x5d JUMPI
---
0x54: V29 = 0x5b6e7be2
0x59: V30 = EQ 0x5b6e7be2 V13
0x5a: V31 = 0x107
0x5d: JUMPI 0x107 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x11a]
---
0x5e DUP1
0x5f PUSH4 0x7362377b
0x64 EQ
0x65 PUSH2 0x11a
0x68 JUMPI
---
0x5f: V32 = 0x7362377b
0x64: V33 = EQ 0x7362377b V13
0x65: V34 = 0x11a
0x68: JUMPI 0x11a V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x12d]
---
0x69 DUP1
0x6a PUSH4 0x8d8f2adb
0x6f EQ
0x70 PUSH2 0x12d
0x73 JUMPI
---
0x6a: V35 = 0x8d8f2adb
0x6f: V36 = EQ 0x8d8f2adb V13
0x70: V37 = 0x12d
0x73: JUMPI 0x12d V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x140]
---
0x74 DUP1
0x75 PUSH4 0xc765defd
0x7a EQ
0x7b PUSH2 0x140
0x7e JUMPI
---
0x75: V38 = 0xc765defd
0x7a: V39 = EQ 0xc765defd V13
0x7b: V40 = 0x140
0x7e: JUMPI 0x140 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x162]
---
0x7f DUP1
0x80 PUSH4 0xe8b5e51f
0x85 EQ
0x86 PUSH2 0x162
0x89 JUMPI
---
0x80: V41 = 0xe8b5e51f
0x85: V42 = EQ 0xe8b5e51f V13
0x86: V43 = 0x162
0x89: JUMPI 0x162 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x8b]
---
Predecessors: [0x0, 0x7f, 0x1d4, 0x2c5, 0x3ce, 0x411, 0x4a0]
Successors: []
---
0x8a JUMPDEST
0x8b STOP
---
0x8a: JUMPDEST 
0x8b: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x8c
[0x8c:0x92]
---
Predecessors: [0xd]
Successors: [0x93, 0x97]
---
0x8c JUMPDEST
0x8d CALLVALUE
0x8e ISZERO
0x8f PUSH2 0x97
0x92 JUMPI
---
0x8c: JUMPDEST 
0x8d: V44 = CALLVALUE
0x8e: V45 = ISZERO V44
0x8f: V46 = 0x97
0x92: JUMPI 0x97 V45
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x8c]
Successors: []
---
0x93 PUSH1 0x0
0x95 DUP1
0x96 REVERT
---
0x93: V47 = 0x0
0x96: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x97
[0x97:0x9e]
---
Predecessors: [0x8c]
Successors: [0x175]
---
0x97 JUMPDEST
0x98 PUSH2 0x9f
0x9b PUSH2 0x175
0x9e JUMP
---
0x97: JUMPDEST 
0x98: V48 = 0x9f
0x9b: V49 = 0x175
0x9e: JUMP 0x175
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x9f]
Exit stack: [V13, 0x9f]

================================

Block 0x9f
[0x9f:0xba]
---
Predecessors: [0x175, 0x1d9, 0x1e8]
Successors: []
---
0x9f JUMPDEST
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 PUSH1 0x1
0xa5 PUSH1 0xa0
0xa7 PUSH1 0x2
0xa9 EXP
0xaa SUB
0xab SWAP1
0xac SWAP2
0xad AND
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 PUSH1 0x40
0xb5 MLOAD
0xb6 DUP1
0xb7 SWAP2
0xb8 SUB
0xb9 SWAP1
0xba RETURN
---
0x9f: JUMPDEST 
0xa0: V50 = 0x40
0xa2: V51 = M[0x40]
0xa3: V52 = 0x1
0xa5: V53 = 0xa0
0xa7: V54 = 0x2
0xa9: V55 = EXP 0x2 0xa0
0xaa: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad: V57 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xaf: M[V51] = V57
0xb0: V58 = 0x20
0xb2: V59 = ADD 0x20 V51
0xb3: V60 = 0x40
0xb5: V61 = M[0x40]
0xb8: V62 = SUB V59 V61
0xba: RETURN V61 V62
---
Entry stack: [V13, 0x9f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x9f]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0x27]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V63 = CALLVALUE
0xbd: V64 = ISZERO V63
0xbe: V65 = 0xc6
0xc1: JUMPI 0xc6 V64
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V66 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xbb]
Successors: [0x184]
---
0xc6 JUMPDEST
0xc7 PUSH2 0x8a
0xca PUSH2 0x184
0xcd JUMP
---
0xc6: JUMPDEST 
0xc7: V67 = 0x8a
0xca: V68 = 0x184
0xcd: JUMP 0x184
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x8a]
Exit stack: [V13, 0x8a]

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0x32]
Successors: [0xd5, 0xd9]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V69 = CALLVALUE
0xd0: V70 = ISZERO V69
0xd1: V71 = 0xd9
0xd4: JUMPI 0xd9 V70
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xce]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V72 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0xce]
Successors: [0x1d9]
---
0xd9 JUMPDEST
0xda PUSH2 0x9f
0xdd PUSH2 0x1d9
0xe0 JUMP
---
0xd9: JUMPDEST 
0xda: V73 = 0x9f
0xdd: V74 = 0x1d9
0xe0: JUMP 0x1d9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x9f]
Exit stack: [V13, 0x9f]

================================

Block 0xe1
[0xe1:0xe7]
---
Predecessors: [0x3d]
Successors: [0xe8, 0xec]
---
0xe1 JUMPDEST
0xe2 CALLVALUE
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0xe1: JUMPDEST 
0xe2: V75 = CALLVALUE
0xe3: V76 = ISZERO V75
0xe4: V77 = 0xec
0xe7: JUMPI 0xec V76
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0xe1]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V78 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xec
[0xec:0xf3]
---
Predecessors: [0xe1]
Successors: [0x1e8]
---
0xec JUMPDEST
0xed PUSH2 0x9f
0xf0 PUSH2 0x1e8
0xf3 JUMP
---
0xec: JUMPDEST 
0xed: V79 = 0x9f
0xf0: V80 = 0x1e8
0xf3: JUMP 0x1e8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x9f]
Exit stack: [V13, 0x9f]

================================

Block 0xf4
[0xf4:0xfa]
---
Predecessors: [0x48]
Successors: [0xfb, 0xff]
---
0xf4 JUMPDEST
0xf5 CALLVALUE
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xf4: JUMPDEST 
0xf5: V81 = CALLVALUE
0xf6: V82 = ISZERO V81
0xf7: V83 = 0xff
0xfa: JUMPI 0xff V82
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xf4]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V84 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xff
[0xff:0x106]
---
Predecessors: [0xf4]
Successors: [0x1f7]
---
0xff JUMPDEST
0x100 PUSH2 0x8a
0x103 PUSH2 0x1f7
0x106 JUMP
---
0xff: JUMPDEST 
0x100: V85 = 0x8a
0x103: V86 = 0x1f7
0x106: JUMP 0x1f7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x8a]
Exit stack: [V13, 0x8a]

================================

Block 0x107
[0x107:0x10d]
---
Predecessors: [0x53]
Successors: [0x10e, 0x112]
---
0x107 JUMPDEST
0x108 CALLVALUE
0x109 ISZERO
0x10a PUSH2 0x112
0x10d JUMPI
---
0x107: JUMPDEST 
0x108: V87 = CALLVALUE
0x109: V88 = ISZERO V87
0x10a: V89 = 0x112
0x10d: JUMPI 0x112 V88
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x10e
[0x10e:0x111]
---
Predecessors: [0x107]
Successors: []
---
0x10e PUSH1 0x0
0x110 DUP1
0x111 REVERT
---
0x10e: V90 = 0x0
0x111: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x112
[0x112:0x119]
---
Predecessors: [0x107]
Successors: [0x236]
---
0x112 JUMPDEST
0x113 PUSH2 0x8a
0x116 PUSH2 0x236
0x119 JUMP
---
0x112: JUMPDEST 
0x113: V91 = 0x8a
0x116: V92 = 0x236
0x119: JUMP 0x236
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x8a]
Exit stack: [V13, 0x8a]

================================

Block 0x11a
[0x11a:0x120]
---
Predecessors: [0x5e]
Successors: [0x121, 0x125]
---
0x11a JUMPDEST
0x11b CALLVALUE
0x11c ISZERO
0x11d PUSH2 0x125
0x120 JUMPI
---
0x11a: JUMPDEST 
0x11b: V93 = CALLVALUE
0x11c: V94 = ISZERO V93
0x11d: V95 = 0x125
0x120: JUMPI 0x125 V94
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x121
[0x121:0x124]
---
Predecessors: [0x11a]
Successors: []
---
0x121 PUSH1 0x0
0x123 DUP1
0x124 REVERT
---
0x121: V96 = 0x0
0x124: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x125
[0x125:0x12c]
---
Predecessors: [0x11a]
Successors: [0x275]
---
0x125 JUMPDEST
0x126 PUSH2 0x8a
0x129 PUSH2 0x275
0x12c JUMP
---
0x125: JUMPDEST 
0x126: V97 = 0x8a
0x129: V98 = 0x275
0x12c: JUMP 0x275
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x8a]
Exit stack: [V13, 0x8a]

================================

Block 0x12d
[0x12d:0x133]
---
Predecessors: [0x69]
Successors: [0x134, 0x138]
---
0x12d JUMPDEST
0x12e CALLVALUE
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x12d: JUMPDEST 
0x12e: V99 = CALLVALUE
0x12f: V100 = ISZERO V99
0x130: V101 = 0x138
0x133: JUMPI 0x138 V100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x12d]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V102 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0x12d]
Successors: [0x2c7]
---
0x138 JUMPDEST
0x139 PUSH2 0x8a
0x13c PUSH2 0x2c7
0x13f JUMP
---
0x138: JUMPDEST 
0x139: V103 = 0x8a
0x13c: V104 = 0x2c7
0x13f: JUMP 0x2c7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x8a]
Exit stack: [V13, 0x8a]

================================

Block 0x140
[0x140:0x146]
---
Predecessors: [0x74]
Successors: [0x147, 0x14b]
---
0x140 JUMPDEST
0x141 CALLVALUE
0x142 ISZERO
0x143 PUSH2 0x14b
0x146 JUMPI
---
0x140: JUMPDEST 
0x141: V105 = CALLVALUE
0x142: V106 = ISZERO V105
0x143: V107 = 0x14b
0x146: JUMPI 0x14b V106
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x147
[0x147:0x14a]
---
Predecessors: [0x140]
Successors: []
---
0x147 PUSH1 0x0
0x149 DUP1
0x14a REVERT
---
0x147: V108 = 0x0
0x14a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14b
[0x14b:0x161]
---
Predecessors: [0x140]
Successors: [0x3db]
---
0x14b JUMPDEST
0x14c PUSH2 0x8a
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 PUSH1 0x4
0x159 CALLDATALOAD
0x15a AND
0x15b PUSH1 0x24
0x15d CALLDATALOAD
0x15e PUSH2 0x3db
0x161 JUMP
---
0x14b: JUMPDEST 
0x14c: V109 = 0x8a
0x14f: V110 = 0x1
0x151: V111 = 0xa0
0x153: V112 = 0x2
0x155: V113 = EXP 0x2 0xa0
0x156: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x157: V115 = 0x4
0x159: V116 = CALLDATALOAD 0x4
0x15a: V117 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V118 = 0x24
0x15d: V119 = CALLDATALOAD 0x24
0x15e: V120 = 0x3db
0x161: JUMP 0x3db
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x8a, V117, V119]
Exit stack: [V13, 0x8a, V117, V119]

================================

Block 0x162
[0x162:0x168]
---
Predecessors: [0x7f]
Successors: [0x169, 0x16d]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 ISZERO
0x165 PUSH2 0x16d
0x168 JUMPI
---
0x162: JUMPDEST 
0x163: V121 = CALLVALUE
0x164: V122 = ISZERO V121
0x165: V123 = 0x16d
0x168: JUMPI 0x16d V122
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x169
[0x169:0x16c]
---
Predecessors: [0x162]
Successors: []
---
0x169 PUSH1 0x0
0x16b DUP1
0x16c REVERT
---
0x169: V124 = 0x0
0x16c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x16d
[0x16d:0x174]
---
Predecessors: [0x162]
Successors: [0x441]
---
0x16d JUMPDEST
0x16e PUSH2 0x8a
0x171 PUSH2 0x441
0x174 JUMP
---
0x16d: JUMPDEST 
0x16e: V125 = 0x8a
0x171: V126 = 0x441
0x174: JUMP 0x441
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x8a]
Exit stack: [V13, 0x8a]

================================

Block 0x175
[0x175:0x183]
---
Predecessors: [0x97]
Successors: [0x9f]
---
0x175 JUMPDEST
0x176 PUSH1 0x1
0x178 SLOAD
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 AND
0x182 DUP2
0x183 JUMP
---
0x175: JUMPDEST 
0x176: V127 = 0x1
0x178: V128 = S[0x1]
0x179: V129 = 0x1
0x17b: V130 = 0xa0
0x17d: V131 = 0x2
0x17f: V132 = EXP 0x2 0xa0
0x180: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x183: JUMP 0x9f
---
Entry stack: [V13, 0x9f]
Stack pops: 1
Stack additions: [S0, V134]
Exit stack: [V13, 0x9f, V134]

================================

Block 0x184
[0x184:0x1be]
---
Predecessors: [0xc6]
Successors: [0x1bf, 0x1c3]
---
0x184 JUMPDEST
0x185 PUSH1 0x1
0x187 SLOAD
0x188 PUSH1 0x1
0x18a PUSH1 0xa0
0x18c PUSH1 0x2
0x18e EXP
0x18f SUB
0x190 AND
0x191 PUSH4 0x7362377b
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP2
0x19a PUSH4 0xffffffff
0x19f AND
0x1a0 PUSH1 0xe0
0x1a2 PUSH1 0x2
0x1a4 EXP
0x1a5 MUL
0x1a6 DUP2
0x1a7 MSTORE
0x1a8 PUSH1 0x4
0x1aa ADD
0x1ab PUSH1 0x0
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 DUP4
0x1b2 SUB
0x1b3 DUP2
0x1b4 PUSH1 0x0
0x1b6 DUP8
0x1b7 DUP1
0x1b8 EXTCODESIZE
0x1b9 ISZERO
0x1ba ISZERO
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x184: JUMPDEST 
0x185: V135 = 0x1
0x187: V136 = S[0x1]
0x188: V137 = 0x1
0x18a: V138 = 0xa0
0x18c: V139 = 0x2
0x18e: V140 = EXP 0x2 0xa0
0x18f: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x190: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x191: V143 = 0x7362377b
0x196: V144 = 0x40
0x198: V145 = M[0x40]
0x19a: V146 = 0xffffffff
0x19f: V147 = AND 0xffffffff 0x7362377b
0x1a0: V148 = 0xe0
0x1a2: V149 = 0x2
0x1a4: V150 = EXP 0x2 0xe0
0x1a5: V151 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7362377b
0x1a7: M[V145] = 0x7362377b00000000000000000000000000000000000000000000000000000000
0x1a8: V152 = 0x4
0x1aa: V153 = ADD 0x4 V145
0x1ab: V154 = 0x0
0x1ad: V155 = 0x40
0x1af: V156 = M[0x40]
0x1b2: V157 = SUB V153 V156
0x1b4: V158 = 0x0
0x1b8: V159 = EXTCODESIZE V142
0x1b9: V160 = ISZERO V159
0x1ba: V161 = ISZERO V160
0x1bb: V162 = 0x1c3
0x1be: JUMPI 0x1c3 V161
---
Entry stack: [V13, 0x8a]
Stack pops: 0
Stack additions: [V142, 0x7362377b, V153, 0x0, V156, V157, V156, 0x0, V142]
Exit stack: [V13, 0x8a, V142, 0x7362377b, V153, 0x0, V156, V157, V156, 0x0, V142]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x184]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V163 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, V142, 0x7362377b, V153, 0x0, V156, V157, V156, 0x0, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, V142, 0x7362377b, V153, 0x0, V156, V157, V156, 0x0, V142]

================================

Block 0x1c3
[0x1c3:0x1cf]
---
Predecessors: [0x184, 0x1f7, 0x236]
Successors: [0x1d0, 0x1d4]
---
0x1c3 JUMPDEST
0x1c4 PUSH2 0x2c6
0x1c7 GAS
0x1c8 SUB
0x1c9 CALL
0x1ca ISZERO
0x1cb ISZERO
0x1cc PUSH2 0x1d4
0x1cf JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V164 = 0x2c6
0x1c7: V165 = GAS
0x1c8: V166 = SUB V165 0x2c6
0x1c9: V167 = CALL V166 S0 0x0 S2 S3 S4 0x0
0x1ca: V168 = ISZERO V167
0x1cb: V169 = ISZERO V168
0x1cc: V170 = 0x1d4
0x1cf: JUMPI 0x1d4 V169
---
Entry stack: [V13, 0x8a, S8, {0x590e1ae3, 0x7362377b, 0x8d8f2adb}, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x8a, S8, {0x590e1ae3, 0x7362377b, 0x8d8f2adb}, S6]

================================

Block 0x1d0
[0x1d0:0x1d3]
---
Predecessors: [0x1c3]
Successors: []
---
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 REVERT
---
0x1d0: V171 = 0x0
0x1d3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, S2, {0x590e1ae3, 0x7362377b, 0x8d8f2adb}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, S2, {0x590e1ae3, 0x7362377b, 0x8d8f2adb}, S0]

================================

Block 0x1d4
[0x1d4:0x1d8]
---
Predecessors: [0x1c3]
Successors: [0x8a]
---
0x1d4 JUMPDEST
0x1d5 POP
0x1d6 POP
0x1d7 POP
0x1d8 JUMP
---
0x1d4: JUMPDEST 
0x1d8: JUMP 0x8a
---
Entry stack: [V13, 0x8a, S2, {0x590e1ae3, 0x7362377b, 0x8d8f2adb}, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d9
[0x1d9:0x1e7]
---
Predecessors: [0xd9]
Successors: [0x9f]
---
0x1d9 JUMPDEST
0x1da PUSH1 0x2
0x1dc SLOAD
0x1dd PUSH1 0x1
0x1df PUSH1 0xa0
0x1e1 PUSH1 0x2
0x1e3 EXP
0x1e4 SUB
0x1e5 AND
0x1e6 DUP2
0x1e7 JUMP
---
0x1d9: JUMPDEST 
0x1da: V172 = 0x2
0x1dc: V173 = S[0x2]
0x1dd: V174 = 0x1
0x1df: V175 = 0xa0
0x1e1: V176 = 0x2
0x1e3: V177 = EXP 0x2 0xa0
0x1e4: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e5: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x1e7: JUMP 0x9f
---
Entry stack: [V13, 0x9f]
Stack pops: 1
Stack additions: [S0, V179]
Exit stack: [V13, 0x9f, V179]

================================

Block 0x1e8
[0x1e8:0x1f6]
---
Predecessors: [0xec]
Successors: [0x9f]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x3
0x1eb SLOAD
0x1ec PUSH1 0x1
0x1ee PUSH1 0xa0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 SUB
0x1f4 AND
0x1f5 DUP2
0x1f6 JUMP
---
0x1e8: JUMPDEST 
0x1e9: V180 = 0x3
0x1eb: V181 = S[0x3]
0x1ec: V182 = 0x1
0x1ee: V183 = 0xa0
0x1f0: V184 = 0x2
0x1f2: V185 = EXP 0x2 0xa0
0x1f3: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f4: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x1f6: JUMP 0x9f
---
Entry stack: [V13, 0x9f]
Stack pops: 1
Stack additions: [S0, V187]
Exit stack: [V13, 0x9f, V187]

================================

Block 0x1f7
[0x1f7:0x231]
---
Predecessors: [0xff]
Successors: [0x1c3, 0x232]
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x1
0x1fa SLOAD
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 AND
0x204 PUSH4 0x590e1ae3
0x209 PUSH1 0x40
0x20b MLOAD
0x20c DUP2
0x20d PUSH4 0xffffffff
0x212 AND
0x213 PUSH1 0xe0
0x215 PUSH1 0x2
0x217 EXP
0x218 MUL
0x219 DUP2
0x21a MSTORE
0x21b PUSH1 0x4
0x21d ADD
0x21e PUSH1 0x0
0x220 PUSH1 0x40
0x222 MLOAD
0x223 DUP1
0x224 DUP4
0x225 SUB
0x226 DUP2
0x227 PUSH1 0x0
0x229 DUP8
0x22a DUP1
0x22b EXTCODESIZE
0x22c ISZERO
0x22d ISZERO
0x22e PUSH2 0x1c3
0x231 JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V188 = 0x1
0x1fa: V189 = S[0x1]
0x1fb: V190 = 0x1
0x1fd: V191 = 0xa0
0x1ff: V192 = 0x2
0x201: V193 = EXP 0x2 0xa0
0x202: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x203: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x204: V196 = 0x590e1ae3
0x209: V197 = 0x40
0x20b: V198 = M[0x40]
0x20d: V199 = 0xffffffff
0x212: V200 = AND 0xffffffff 0x590e1ae3
0x213: V201 = 0xe0
0x215: V202 = 0x2
0x217: V203 = EXP 0x2 0xe0
0x218: V204 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x590e1ae3
0x21a: M[V198] = 0x590e1ae300000000000000000000000000000000000000000000000000000000
0x21b: V205 = 0x4
0x21d: V206 = ADD 0x4 V198
0x21e: V207 = 0x0
0x220: V208 = 0x40
0x222: V209 = M[0x40]
0x225: V210 = SUB V206 V209
0x227: V211 = 0x0
0x22b: V212 = EXTCODESIZE V195
0x22c: V213 = ISZERO V212
0x22d: V214 = ISZERO V213
0x22e: V215 = 0x1c3
0x231: JUMPI 0x1c3 V214
---
Entry stack: [V13, 0x8a]
Stack pops: 0
Stack additions: [V195, 0x590e1ae3, V206, 0x0, V209, V210, V209, 0x0, V195]
Exit stack: [V13, 0x8a, V195, 0x590e1ae3, V206, 0x0, V209, V210, V209, 0x0, V195]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x1f7]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V216 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, V195, 0x590e1ae3, V206, 0x0, V209, V210, V209, 0x0, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, V195, 0x590e1ae3, V206, 0x0, V209, V210, V209, 0x0, V195]

================================

Block 0x236
[0x236:0x270]
---
Predecessors: [0x112]
Successors: [0x1c3, 0x271]
---
0x236 JUMPDEST
0x237 PUSH1 0x1
0x239 SLOAD
0x23a PUSH1 0x1
0x23c PUSH1 0xa0
0x23e PUSH1 0x2
0x240 EXP
0x241 SUB
0x242 AND
0x243 PUSH4 0x8d8f2adb
0x248 PUSH1 0x40
0x24a MLOAD
0x24b DUP2
0x24c PUSH4 0xffffffff
0x251 AND
0x252 PUSH1 0xe0
0x254 PUSH1 0x2
0x256 EXP
0x257 MUL
0x258 DUP2
0x259 MSTORE
0x25a PUSH1 0x4
0x25c ADD
0x25d PUSH1 0x0
0x25f PUSH1 0x40
0x261 MLOAD
0x262 DUP1
0x263 DUP4
0x264 SUB
0x265 DUP2
0x266 PUSH1 0x0
0x268 DUP8
0x269 DUP1
0x26a EXTCODESIZE
0x26b ISZERO
0x26c ISZERO
0x26d PUSH2 0x1c3
0x270 JUMPI
---
0x236: JUMPDEST 
0x237: V217 = 0x1
0x239: V218 = S[0x1]
0x23a: V219 = 0x1
0x23c: V220 = 0xa0
0x23e: V221 = 0x2
0x240: V222 = EXP 0x2 0xa0
0x241: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x242: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x243: V225 = 0x8d8f2adb
0x248: V226 = 0x40
0x24a: V227 = M[0x40]
0x24c: V228 = 0xffffffff
0x251: V229 = AND 0xffffffff 0x8d8f2adb
0x252: V230 = 0xe0
0x254: V231 = 0x2
0x256: V232 = EXP 0x2 0xe0
0x257: V233 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8d8f2adb
0x259: M[V227] = 0x8d8f2adb00000000000000000000000000000000000000000000000000000000
0x25a: V234 = 0x4
0x25c: V235 = ADD 0x4 V227
0x25d: V236 = 0x0
0x25f: V237 = 0x40
0x261: V238 = M[0x40]
0x264: V239 = SUB V235 V238
0x266: V240 = 0x0
0x26a: V241 = EXTCODESIZE V224
0x26b: V242 = ISZERO V241
0x26c: V243 = ISZERO V242
0x26d: V244 = 0x1c3
0x270: JUMPI 0x1c3 V243
---
Entry stack: [V13, 0x8a]
Stack pops: 0
Stack additions: [V224, 0x8d8f2adb, V235, 0x0, V238, V239, V238, 0x0, V224]
Exit stack: [V13, 0x8a, V224, 0x8d8f2adb, V235, 0x0, V238, V239, V238, 0x0, V224]

================================

Block 0x271
[0x271:0x274]
---
Predecessors: [0x236]
Successors: []
---
0x271 PUSH1 0x0
0x273 DUP1
0x274 REVERT
---
0x271: V245 = 0x0
0x274: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, V224, 0x8d8f2adb, V235, 0x0, V238, V239, V238, 0x0, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, V224, 0x8d8f2adb, V235, 0x0, V238, V239, V238, 0x0, V224]

================================

Block 0x275
[0x275:0x287]
---
Predecessors: [0x125]
Successors: [0x288, 0x28c]
---
0x275 JUMPDEST
0x276 PUSH1 0x3
0x278 SLOAD
0x279 PUSH1 0x1
0x27b PUSH1 0xa0
0x27d PUSH1 0x2
0x27f EXP
0x280 SUB
0x281 AND
0x282 ISZERO
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x275: JUMPDEST 
0x276: V246 = 0x3
0x278: V247 = S[0x3]
0x279: V248 = 0x1
0x27b: V249 = 0xa0
0x27d: V250 = 0x2
0x27f: V251 = EXP 0x2 0xa0
0x280: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x282: V254 = ISZERO V253
0x283: V255 = ISZERO V254
0x284: V256 = 0x28c
0x287: JUMPI 0x28c V255
---
Entry stack: [V13, 0x8a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x275]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V257 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a]

================================

Block 0x28c
[0x28c:0x2c0]
---
Predecessors: [0x275]
Successors: [0x2c1, 0x2c5]
---
0x28c JUMPDEST
0x28d PUSH1 0x3
0x28f SLOAD
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 SWAP1
0x299 DUP2
0x29a AND
0x29b SWAP1
0x29c ADDRESS
0x29d AND
0x29e BALANCE
0x29f DUP1
0x2a0 ISZERO
0x2a1 PUSH2 0x8fc
0x2a4 MUL
0x2a5 SWAP1
0x2a6 PUSH1 0x40
0x2a8 MLOAD
0x2a9 PUSH1 0x0
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae DUP1
0x2af DUP4
0x2b0 SUB
0x2b1 DUP2
0x2b2 DUP6
0x2b3 DUP9
0x2b4 DUP9
0x2b5 CALL
0x2b6 SWAP4
0x2b7 POP
0x2b8 POP
0x2b9 POP
0x2ba POP
0x2bb ISZERO
0x2bc ISZERO
0x2bd PUSH2 0x2c5
0x2c0 JUMPI
---
0x28c: JUMPDEST 
0x28d: V258 = 0x3
0x28f: V259 = S[0x3]
0x290: V260 = 0x1
0x292: V261 = 0xa0
0x294: V262 = 0x2
0x296: V263 = EXP 0x2 0xa0
0x297: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29a: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x29c: V266 = ADDRESS
0x29d: V267 = AND V266 0xffffffffffffffffffffffffffffffffffffffff
0x29e: V268 = BALANCE V267
0x2a0: V269 = ISZERO V268
0x2a1: V270 = 0x8fc
0x2a4: V271 = MUL 0x8fc V269
0x2a6: V272 = 0x40
0x2a8: V273 = M[0x40]
0x2a9: V274 = 0x0
0x2ab: V275 = 0x40
0x2ad: V276 = M[0x40]
0x2b0: V277 = SUB V273 V276
0x2b5: V278 = CALL V271 V265 V268 V276 V277 V276 0x0
0x2bb: V279 = ISZERO V278
0x2bc: V280 = ISZERO V279
0x2bd: V281 = 0x2c5
0x2c0: JUMPI 0x2c5 V280
---
Entry stack: [V13, 0x8a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a]

================================

Block 0x2c1
[0x2c1:0x2c4]
---
Predecessors: [0x28c]
Successors: []
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 REVERT
---
0x2c1: V282 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a]

================================

Block 0x2c5
[0x2c5:0x2c6]
---
Predecessors: [0x28c]
Successors: [0x8a]
---
0x2c5 JUMPDEST
0x2c6 JUMP
---
0x2c5: JUMPDEST 
0x2c6: JUMP 0x8a
---
Entry stack: [V13, 0x8a]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x2c7
[0x2c7:0x2dc]
---
Predecessors: [0x138]
Successors: [0x2dd, 0x2e1]
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x3
0x2ca SLOAD
0x2cb PUSH1 0x0
0x2cd SWAP1
0x2ce PUSH1 0x1
0x2d0 PUSH1 0xa0
0x2d2 PUSH1 0x2
0x2d4 EXP
0x2d5 SUB
0x2d6 AND
0x2d7 ISZERO
0x2d8 ISZERO
0x2d9 PUSH2 0x2e1
0x2dc JUMPI
---
0x2c7: JUMPDEST 
0x2c8: V283 = 0x3
0x2ca: V284 = S[0x3]
0x2cb: V285 = 0x0
0x2ce: V286 = 0x1
0x2d0: V287 = 0xa0
0x2d2: V288 = 0x2
0x2d4: V289 = EXP 0x2 0xa0
0x2d5: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d6: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x2d7: V292 = ISZERO V291
0x2d8: V293 = ISZERO V292
0x2d9: V294 = 0x2e1
0x2dc: JUMPI 0x2e1 V293
---
Entry stack: [V13, 0x8a]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x8a, 0x0]

================================

Block 0x2dd
[0x2dd:0x2e0]
---
Predecessors: [0x2c7]
Successors: []
---
0x2dd PUSH1 0x0
0x2df DUP1
0x2e0 REVERT
---
0x2dd: V295 = 0x0
0x2e0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, 0x0]

================================

Block 0x2e1
[0x2e1:0x335]
---
Predecessors: [0x2c7]
Successors: [0x336, 0x33a]
---
0x2e1 JUMPDEST
0x2e2 PUSH1 0x2
0x2e4 SLOAD
0x2e5 PUSH1 0x1
0x2e7 PUSH1 0xa0
0x2e9 PUSH1 0x2
0x2eb EXP
0x2ec SUB
0x2ed AND
0x2ee PUSH4 0x70a08231
0x2f3 ADDRESS
0x2f4 PUSH1 0x0
0x2f6 PUSH1 0x40
0x2f8 MLOAD
0x2f9 PUSH1 0x20
0x2fb ADD
0x2fc MSTORE
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 PUSH1 0xe0
0x302 PUSH1 0x2
0x304 EXP
0x305 PUSH4 0xffffffff
0x30a DUP5
0x30b AND
0x30c MUL
0x30d DUP2
0x30e MSTORE
0x30f PUSH1 0x1
0x311 PUSH1 0xa0
0x313 PUSH1 0x2
0x315 EXP
0x316 SUB
0x317 SWAP1
0x318 SWAP2
0x319 AND
0x31a PUSH1 0x4
0x31c DUP3
0x31d ADD
0x31e MSTORE
0x31f PUSH1 0x24
0x321 ADD
0x322 PUSH1 0x20
0x324 PUSH1 0x40
0x326 MLOAD
0x327 DUP1
0x328 DUP4
0x329 SUB
0x32a DUP2
0x32b PUSH1 0x0
0x32d DUP8
0x32e DUP1
0x32f EXTCODESIZE
0x330 ISZERO
0x331 ISZERO
0x332 PUSH2 0x33a
0x335 JUMPI
---
0x2e1: JUMPDEST 
0x2e2: V296 = 0x2
0x2e4: V297 = S[0x2]
0x2e5: V298 = 0x1
0x2e7: V299 = 0xa0
0x2e9: V300 = 0x2
0x2eb: V301 = EXP 0x2 0xa0
0x2ec: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ed: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x2ee: V304 = 0x70a08231
0x2f3: V305 = ADDRESS
0x2f4: V306 = 0x0
0x2f6: V307 = 0x40
0x2f8: V308 = M[0x40]
0x2f9: V309 = 0x20
0x2fb: V310 = ADD 0x20 V308
0x2fc: M[V310] = 0x0
0x2fd: V311 = 0x40
0x2ff: V312 = M[0x40]
0x300: V313 = 0xe0
0x302: V314 = 0x2
0x304: V315 = EXP 0x2 0xe0
0x305: V316 = 0xffffffff
0x30b: V317 = AND 0x70a08231 0xffffffff
0x30c: V318 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x30e: M[V312] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x30f: V319 = 0x1
0x311: V320 = 0xa0
0x313: V321 = 0x2
0x315: V322 = EXP 0x2 0xa0
0x316: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x319: V324 = AND V305 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V325 = 0x4
0x31d: V326 = ADD V312 0x4
0x31e: M[V326] = V324
0x31f: V327 = 0x24
0x321: V328 = ADD 0x24 V312
0x322: V329 = 0x20
0x324: V330 = 0x40
0x326: V331 = M[0x40]
0x329: V332 = SUB V328 V331
0x32b: V333 = 0x0
0x32f: V334 = EXTCODESIZE V303
0x330: V335 = ISZERO V334
0x331: V336 = ISZERO V335
0x332: V337 = 0x33a
0x335: JUMPI 0x33a V336
---
Entry stack: [V13, 0x8a, 0x0]
Stack pops: 0
Stack additions: [V303, 0x70a08231, V328, 0x20, V331, V332, V331, 0x0, V303]
Exit stack: [V13, 0x8a, 0x0, V303, 0x70a08231, V328, 0x20, V331, V332, V331, 0x0, V303]

================================

Block 0x336
[0x336:0x339]
---
Predecessors: [0x2e1]
Successors: []
---
0x336 PUSH1 0x0
0x338 DUP1
0x339 REVERT
---
0x336: V338 = 0x0
0x339: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, 0x0, V303, 0x70a08231, V328, 0x20, V331, V332, V331, 0x0, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, 0x0, V303, 0x70a08231, V328, 0x20, V331, V332, V331, 0x0, V303]

================================

Block 0x33a
[0x33a:0x346]
---
Predecessors: [0x2e1]
Successors: [0x347, 0x34b]
---
0x33a JUMPDEST
0x33b PUSH2 0x2c6
0x33e GAS
0x33f SUB
0x340 CALL
0x341 ISZERO
0x342 ISZERO
0x343 PUSH2 0x34b
0x346 JUMPI
---
0x33a: JUMPDEST 
0x33b: V339 = 0x2c6
0x33e: V340 = GAS
0x33f: V341 = SUB V340 0x2c6
0x340: V342 = CALL V341 V303 0x0 V331 V332 V331 0x20
0x341: V343 = ISZERO V342
0x342: V344 = ISZERO V343
0x343: V345 = 0x34b
0x346: JUMPI 0x34b V344
---
Entry stack: [V13, 0x8a, 0x0, V303, 0x70a08231, V328, 0x20, V331, V332, V331, 0x0, V303]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x8a, 0x0, V303, 0x70a08231, V328]

================================

Block 0x347
[0x347:0x34a]
---
Predecessors: [0x33a]
Successors: []
---
0x347 PUSH1 0x0
0x349 DUP1
0x34a REVERT
---
0x347: V346 = 0x0
0x34a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, 0x0, V303, 0x70a08231, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, 0x0, V303, 0x70a08231, V328]

================================

Block 0x34b
[0x34b:0x3b8]
---
Predecessors: [0x33a]
Successors: [0x3b9, 0x3bd]
---
0x34b JUMPDEST
0x34c POP
0x34d POP
0x34e POP
0x34f PUSH1 0x40
0x351 MLOAD
0x352 DUP1
0x353 MLOAD
0x354 PUSH1 0x2
0x356 SLOAD
0x357 PUSH1 0x3
0x359 SLOAD
0x35a SWAP2
0x35b SWAP4
0x35c POP
0x35d PUSH1 0x1
0x35f PUSH1 0xa0
0x361 PUSH1 0x2
0x363 EXP
0x364 SUB
0x365 SWAP1
0x366 DUP2
0x367 AND
0x368 SWAP3
0x369 POP
0x36a PUSH4 0xa9059cbb
0x36f SWAP2
0x370 AND
0x371 DUP4
0x372 PUSH1 0x0
0x374 PUSH1 0x40
0x376 MLOAD
0x377 PUSH1 0x20
0x379 ADD
0x37a MSTORE
0x37b PUSH1 0x40
0x37d MLOAD
0x37e PUSH1 0xe0
0x380 PUSH1 0x2
0x382 EXP
0x383 PUSH4 0xffffffff
0x388 DUP6
0x389 AND
0x38a MUL
0x38b DUP2
0x38c MSTORE
0x38d PUSH1 0x1
0x38f PUSH1 0xa0
0x391 PUSH1 0x2
0x393 EXP
0x394 SUB
0x395 SWAP1
0x396 SWAP3
0x397 AND
0x398 PUSH1 0x4
0x39a DUP4
0x39b ADD
0x39c MSTORE
0x39d PUSH1 0x24
0x39f DUP3
0x3a0 ADD
0x3a1 MSTORE
0x3a2 PUSH1 0x44
0x3a4 ADD
0x3a5 PUSH1 0x20
0x3a7 PUSH1 0x40
0x3a9 MLOAD
0x3aa DUP1
0x3ab DUP4
0x3ac SUB
0x3ad DUP2
0x3ae PUSH1 0x0
0x3b0 DUP8
0x3b1 DUP1
0x3b2 EXTCODESIZE
0x3b3 ISZERO
0x3b4 ISZERO
0x3b5 PUSH2 0x3bd
0x3b8 JUMPI
---
0x34b: JUMPDEST 
0x34f: V347 = 0x40
0x351: V348 = M[0x40]
0x353: V349 = M[V348]
0x354: V350 = 0x2
0x356: V351 = S[0x2]
0x357: V352 = 0x3
0x359: V353 = S[0x3]
0x35d: V354 = 0x1
0x35f: V355 = 0xa0
0x361: V356 = 0x2
0x363: V357 = EXP 0x2 0xa0
0x364: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x367: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x36a: V360 = 0xa9059cbb
0x370: V361 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x372: V362 = 0x0
0x374: V363 = 0x40
0x376: V364 = M[0x40]
0x377: V365 = 0x20
0x379: V366 = ADD 0x20 V364
0x37a: M[V366] = 0x0
0x37b: V367 = 0x40
0x37d: V368 = M[0x40]
0x37e: V369 = 0xe0
0x380: V370 = 0x2
0x382: V371 = EXP 0x2 0xe0
0x383: V372 = 0xffffffff
0x389: V373 = AND 0xa9059cbb 0xffffffff
0x38a: V374 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x38c: M[V368] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x38d: V375 = 0x1
0x38f: V376 = 0xa0
0x391: V377 = 0x2
0x393: V378 = EXP 0x2 0xa0
0x394: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x397: V380 = AND V361 0xffffffffffffffffffffffffffffffffffffffff
0x398: V381 = 0x4
0x39b: V382 = ADD V368 0x4
0x39c: M[V382] = V380
0x39d: V383 = 0x24
0x3a0: V384 = ADD V368 0x24
0x3a1: M[V384] = V349
0x3a2: V385 = 0x44
0x3a4: V386 = ADD 0x44 V368
0x3a5: V387 = 0x20
0x3a7: V388 = 0x40
0x3a9: V389 = M[0x40]
0x3ac: V390 = SUB V386 V389
0x3ae: V391 = 0x0
0x3b2: V392 = EXTCODESIZE V359
0x3b3: V393 = ISZERO V392
0x3b4: V394 = ISZERO V393
0x3b5: V395 = 0x3bd
0x3b8: JUMPI 0x3bd V394
---
Entry stack: [V13, 0x8a, 0x0, V303, 0x70a08231, V328]
Stack pops: 4
Stack additions: [V349, V359, 0xa9059cbb, V386, 0x20, V389, V390, V389, 0x0, V359]
Exit stack: [V13, 0x8a, V349, V359, 0xa9059cbb, V386, 0x20, V389, V390, V389, 0x0, V359]

================================

Block 0x3b9
[0x3b9:0x3bc]
---
Predecessors: [0x34b]
Successors: []
---
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc REVERT
---
0x3b9: V396 = 0x0
0x3bc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, V349, V359, 0xa9059cbb, V386, 0x20, V389, V390, V389, 0x0, V359]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, V349, V359, 0xa9059cbb, V386, 0x20, V389, V390, V389, 0x0, V359]

================================

Block 0x3bd
[0x3bd:0x3c9]
---
Predecessors: [0x34b]
Successors: [0x3ca, 0x3ce]
---
0x3bd JUMPDEST
0x3be PUSH2 0x2c6
0x3c1 GAS
0x3c2 SUB
0x3c3 CALL
0x3c4 ISZERO
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x3bd: JUMPDEST 
0x3be: V397 = 0x2c6
0x3c1: V398 = GAS
0x3c2: V399 = SUB V398 0x2c6
0x3c3: V400 = CALL V399 V359 0x0 V389 V390 V389 0x20
0x3c4: V401 = ISZERO V400
0x3c5: V402 = ISZERO V401
0x3c6: V403 = 0x3ce
0x3c9: JUMPI 0x3ce V402
---
Entry stack: [V13, 0x8a, V349, V359, 0xa9059cbb, V386, 0x20, V389, V390, V389, 0x0, V359]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x8a, V349, V359, 0xa9059cbb, V386]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x3bd]
Successors: []
---
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd REVERT
---
0x3ca: V404 = 0x0
0x3cd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, V349, V359, 0xa9059cbb, V386]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, V349, V359, 0xa9059cbb, V386]

================================

Block 0x3ce
[0x3ce:0x3da]
---
Predecessors: [0x3bd]
Successors: [0x8a]
---
0x3ce JUMPDEST
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 MLOAD
0x3d7 POP
0x3d8 POP
0x3d9 POP
0x3da JUMP
---
0x3ce: JUMPDEST 
0x3d2: V405 = 0x40
0x3d4: V406 = M[0x40]
0x3d6: V407 = M[V406]
0x3da: JUMP 0x8a
---
Entry stack: [V13, 0x8a, V349, V359, 0xa9059cbb, V386]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x3db
[0x3db:0x3ec]
---
Predecessors: [0x14b]
Successors: [0x3ed, 0x3f1]
---
0x3db JUMPDEST
0x3dc PUSH1 0x3
0x3de SLOAD
0x3df PUSH1 0x1
0x3e1 PUSH1 0xa0
0x3e3 PUSH1 0x2
0x3e5 EXP
0x3e6 SUB
0x3e7 AND
0x3e8 ISZERO
0x3e9 PUSH2 0x3f1
0x3ec JUMPI
---
0x3db: JUMPDEST 
0x3dc: V408 = 0x3
0x3de: V409 = S[0x3]
0x3df: V410 = 0x1
0x3e1: V411 = 0xa0
0x3e3: V412 = 0x2
0x3e5: V413 = EXP 0x2 0xa0
0x3e6: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e7: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x3e8: V416 = ISZERO V415
0x3e9: V417 = 0x3f1
0x3ec: JUMPI 0x3f1 V416
---
Entry stack: [V13, 0x8a, V117, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, V117, V119]

================================

Block 0x3ed
[0x3ed:0x3f0]
---
Predecessors: [0x3db]
Successors: []
---
0x3ed PUSH1 0x0
0x3ef DUP1
0x3f0 REVERT
---
0x3ed: V418 = 0x0
0x3f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, V117, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, V117, V119]

================================

Block 0x3f1
[0x3f1:0x40c]
---
Predecessors: [0x3db]
Successors: [0x40d, 0x411]
---
0x3f1 JUMPDEST
0x3f2 PUSH1 0x4
0x3f4 SLOAD
0x3f5 DUP2
0x3f6 PUSH1 0x40
0x3f8 MLOAD
0x3f9 SWAP1
0x3fa DUP2
0x3fb MSTORE
0x3fc PUSH1 0x20
0x3fe ADD
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 SWAP1
0x403 DUP2
0x404 SWAP1
0x405 SUB
0x406 SWAP1
0x407 SHA3
0x408 EQ
0x409 PUSH2 0x411
0x40c JUMPI
---
0x3f1: JUMPDEST 
0x3f2: V419 = 0x4
0x3f4: V420 = S[0x4]
0x3f6: V421 = 0x40
0x3f8: V422 = M[0x40]
0x3fb: M[V422] = V119
0x3fc: V423 = 0x20
0x3fe: V424 = ADD 0x20 V422
0x3ff: V425 = 0x40
0x401: V426 = M[0x40]
0x405: V427 = SUB V424 V426
0x407: V428 = SHA3 V426 V427
0x408: V429 = EQ V428 V420
0x409: V430 = 0x411
0x40c: JUMPI 0x411 V429
---
Entry stack: [V13, 0x8a, V117, V119]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x8a, V117, V119]

================================

Block 0x40d
[0x40d:0x410]
---
Predecessors: [0x3f1]
Successors: []
---
0x40d PUSH1 0x0
0x40f DUP1
0x410 REVERT
---
0x40d: V431 = 0x0
0x410: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, V117, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, V117, V119]

================================

Block 0x411
[0x411:0x440]
---
Predecessors: [0x3f1]
Successors: [0x8a]
---
0x411 JUMPDEST
0x412 POP
0x413 PUSH1 0x3
0x415 DUP1
0x416 SLOAD
0x417 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42c NOT
0x42d AND
0x42e PUSH1 0x1
0x430 PUSH1 0xa0
0x432 PUSH1 0x2
0x434 EXP
0x435 SUB
0x436 SWAP3
0x437 SWAP1
0x438 SWAP3
0x439 AND
0x43a SWAP2
0x43b SWAP1
0x43c SWAP2
0x43d OR
0x43e SWAP1
0x43f SSTORE
0x440 JUMP
---
0x411: JUMPDEST 
0x413: V432 = 0x3
0x416: V433 = S[0x3]
0x417: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x42c: V435 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x42d: V436 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V433
0x42e: V437 = 0x1
0x430: V438 = 0xa0
0x432: V439 = 0x2
0x434: V440 = EXP 0x2 0xa0
0x435: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x439: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x43d: V443 = OR V442 V436
0x43f: S[0x3] = V443
0x440: JUMP 0x8a
---
Entry stack: [V13, 0x8a, V117, V119]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x441
[0x441:0x48a]
---
Predecessors: [0x16d]
Successors: [0x48b, 0x48f]
---
0x441 JUMPDEST
0x442 PUSH1 0x1
0x444 SLOAD
0x445 PUSH1 0x1
0x447 PUSH1 0xa0
0x449 PUSH1 0x2
0x44b EXP
0x44c SUB
0x44d SWAP1
0x44e DUP2
0x44f AND
0x450 SWAP1
0x451 PUSH4 0xd7bb99ba
0x456 SWAP1
0x457 ADDRESS
0x458 AND
0x459 BALANCE
0x45a PUSH1 0x0
0x45c PUSH1 0x40
0x45e MLOAD
0x45f PUSH1 0x20
0x461 ADD
0x462 MSTORE
0x463 PUSH1 0x40
0x465 MLOAD
0x466 DUP3
0x467 PUSH4 0xffffffff
0x46c AND
0x46d PUSH1 0xe0
0x46f PUSH1 0x2
0x471 EXP
0x472 MUL
0x473 DUP2
0x474 MSTORE
0x475 PUSH1 0x4
0x477 ADD
0x478 PUSH1 0x20
0x47a PUSH1 0x40
0x47c MLOAD
0x47d DUP1
0x47e DUP4
0x47f SUB
0x480 DUP2
0x481 DUP6
0x482 DUP9
0x483 DUP1
0x484 EXTCODESIZE
0x485 ISZERO
0x486 ISZERO
0x487 PUSH2 0x48f
0x48a JUMPI
---
0x441: JUMPDEST 
0x442: V444 = 0x1
0x444: V445 = S[0x1]
0x445: V446 = 0x1
0x447: V447 = 0xa0
0x449: V448 = 0x2
0x44b: V449 = EXP 0x2 0xa0
0x44c: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44f: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x451: V452 = 0xd7bb99ba
0x457: V453 = ADDRESS
0x458: V454 = AND V453 0xffffffffffffffffffffffffffffffffffffffff
0x459: V455 = BALANCE V454
0x45a: V456 = 0x0
0x45c: V457 = 0x40
0x45e: V458 = M[0x40]
0x45f: V459 = 0x20
0x461: V460 = ADD 0x20 V458
0x462: M[V460] = 0x0
0x463: V461 = 0x40
0x465: V462 = M[0x40]
0x467: V463 = 0xffffffff
0x46c: V464 = AND 0xffffffff 0xd7bb99ba
0x46d: V465 = 0xe0
0x46f: V466 = 0x2
0x471: V467 = EXP 0x2 0xe0
0x472: V468 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd7bb99ba
0x474: M[V462] = 0xd7bb99ba00000000000000000000000000000000000000000000000000000000
0x475: V469 = 0x4
0x477: V470 = ADD 0x4 V462
0x478: V471 = 0x20
0x47a: V472 = 0x40
0x47c: V473 = M[0x40]
0x47f: V474 = SUB V470 V473
0x484: V475 = EXTCODESIZE V451
0x485: V476 = ISZERO V475
0x486: V477 = ISZERO V476
0x487: V478 = 0x48f
0x48a: JUMPI 0x48f V477
---
Entry stack: [V13, 0x8a]
Stack pops: 0
Stack additions: [V451, 0xd7bb99ba, V455, V470, 0x20, V473, V474, V473, V455, V451]
Exit stack: [V13, 0x8a, V451, 0xd7bb99ba, V455, V470, 0x20, V473, V474, V473, V455, V451]

================================

Block 0x48b
[0x48b:0x48e]
---
Predecessors: [0x441]
Successors: []
---
0x48b PUSH1 0x0
0x48d DUP1
0x48e REVERT
---
0x48b: V479 = 0x0
0x48e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, V451, 0xd7bb99ba, V455, V470, 0x20, V473, V474, V473, V455, V451]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, V451, 0xd7bb99ba, V455, V470, 0x20, V473, V474, V473, V455, V451]

================================

Block 0x48f
[0x48f:0x49b]
---
Predecessors: [0x441]
Successors: [0x49c, 0x4a0]
---
0x48f JUMPDEST
0x490 PUSH2 0x25ee
0x493 GAS
0x494 SUB
0x495 CALL
0x496 ISZERO
0x497 ISZERO
0x498 PUSH2 0x4a0
0x49b JUMPI
---
0x48f: JUMPDEST 
0x490: V480 = 0x25ee
0x493: V481 = GAS
0x494: V482 = SUB V481 0x25ee
0x495: V483 = CALL V482 V451 V455 V473 V474 V473 0x20
0x496: V484 = ISZERO V483
0x497: V485 = ISZERO V484
0x498: V486 = 0x4a0
0x49b: JUMPI 0x4a0 V485
---
Entry stack: [V13, 0x8a, V451, 0xd7bb99ba, V455, V470, 0x20, V473, V474, V473, V455, V451]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x8a, V451, 0xd7bb99ba, V455, V470]

================================

Block 0x49c
[0x49c:0x49f]
---
Predecessors: [0x48f]
Successors: []
---
0x49c PUSH1 0x0
0x49e DUP1
0x49f REVERT
---
0x49c: V487 = 0x0
0x49f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x8a, V451, 0xd7bb99ba, V455, V470]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x8a, V451, 0xd7bb99ba, V455, V470]

================================

Block 0x4a0
[0x4a0:0x4ac]
---
Predecessors: [0x48f]
Successors: [0x8a]
---
0x4a0 JUMPDEST
0x4a1 POP
0x4a2 POP
0x4a3 POP
0x4a4 POP
0x4a5 PUSH1 0x40
0x4a7 MLOAD
0x4a8 DUP1
0x4a9 MLOAD
0x4aa POP
0x4ab POP
0x4ac JUMP
---
0x4a0: JUMPDEST 
0x4a5: V488 = 0x40
0x4a7: V489 = M[0x40]
0x4a9: V490 = M[V489]
0x4ac: JUMP 0x8a
---
Entry stack: [V13, 0x8a, V451, 0xd7bb99ba, V455, V470]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x4ad
[0x4ad:0x4d8]
---
Predecessors: []
Successors: []
---
0x4ad STOP
0x4ae LOG1
0x4af PUSH6 0x627a7a723058
0x4b6 SHA3
0x4b7 CALL
0x4b8 CALLDATACOPY
0x4b9 MISSING 0xbf
0x4ba ADDMOD
0x4bb GASLIMIT
0x4bc MISSING 0xa7
0x4bd SDIV
0x4be SMOD
0x4bf MISSING 0xab
0x4c0 MISSING 0x5d
0x4c1 DUP2
0x4c2 MISSING 0xe3
0x4c3 CALLCODE
0x4c4 MISSING 0xd8
0x4c5 MISSING 0xa6
0x4c6 MISSING 0xe8
0x4c7 DUP2
0x4c8 SUB
0x4c9 MSTORE8
0x4ca EXTCODECOPY
0x4cb MISSING 0x24
0x4cc RETURNDATACOPY
0x4cd MISSING 0x48
0x4ce MISSING 0x27
0x4cf ADDMOD
0x4d0 CREATE
0x4d1 PUSH6 0x77e404057d00
0x4d8 MISSING 0x29
---
0x4ad: STOP 
0x4ae: LOG S0 S1 S2
0x4af: V491 = 0x627a7a723058
0x4b6: V492 = SHA3 0x627a7a723058 S3
0x4b7: V493 = CALL V492 S4 S5 S6 S7 S8 S9
0x4b8: CALLDATACOPY V493 S10 S11
0x4b9: MISSING 0xbf
0x4ba: V494 = ADDMOD S0 S1 S2
0x4bb: V495 = GASLIMIT
0x4bc: MISSING 0xa7
0x4bd: V496 = SDIV S0 S1
0x4be: V497 = SMOD V496 S2
0x4bf: MISSING 0xab
0x4c0: MISSING 0x5d
0x4c2: MISSING 0xe3
0x4c3: V498 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x4c4: MISSING 0xd8
0x4c5: MISSING 0xa6
0x4c6: MISSING 0xe8
0x4c8: V499 = SUB S1 S0
0x4c9: M8[V499] = S1
0x4ca: EXTCODECOPY S2 S3 S4 S5
0x4cb: MISSING 0x24
0x4cc: RETURNDATACOPY S0 S1 S2
0x4cd: MISSING 0x48
0x4ce: MISSING 0x27
0x4cf: V500 = ADDMOD S0 S1 S2
0x4d0: V501 = CREATE V500 S3 S4
0x4d1: V502 = 0x77e404057d00
0x4d8: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V495, V494, V497, S1, S0, S1, V498, 0x77e404057d00, V501]
Exit stack: []

================================

Function 0:
Public function signature: 0x277b6527
Entry block: 0x8c
Exit block: 0x9f
Body: 0x8c, 0x93, 0x97, 0x9f, 0x175

Function 1:
Public function signature: 0x27b0c674
Entry block: 0xbb
Exit block: 0x8a
Body: 0x8a, 0xbb, 0xc2, 0xc6, 0x184, 0x1bf, 0x1c3, 0x1d0, 0x1d4

Function 2:
Public function signature: 0x327107f7
Entry block: 0xce
Exit block: 0x9f
Body: 0x9f, 0xce, 0xd5, 0xd9, 0x1d9

Function 3:
Public function signature: 0x38af3eed
Entry block: 0xe1
Exit block: 0x9f
Body: 0x9f, 0xe1, 0xe8, 0xec, 0x1e8

Function 4:
Public function signature: 0x590e1ae3
Entry block: 0xf4
Exit block: 0x8a
Body: 0x8a, 0xf4, 0xfb, 0xff, 0x1c3, 0x1d0, 0x1d4, 0x1f7, 0x232

Function 5:
Public function signature: 0x5b6e7be2
Entry block: 0x107
Exit block: 0x8a
Body: 0x8a, 0x107, 0x10e, 0x112, 0x1c3, 0x1d0, 0x1d4, 0x236, 0x271

Function 6:
Public function signature: 0x7362377b
Entry block: 0x11a
Exit block: 0x8a
Body: 0x8a, 0x11a, 0x121, 0x125, 0x275, 0x288, 0x28c, 0x2c1, 0x2c5

Function 7:
Public function signature: 0x8d8f2adb
Entry block: 0x12d
Exit block: 0x8a
Body: 0x8a, 0x12d, 0x134, 0x138, 0x2c7, 0x2dd, 0x2e1, 0x336, 0x33a, 0x347, 0x34b, 0x3b9, 0x3bd, 0x3ca, 0x3ce

Function 8:
Public function signature: 0xc765defd
Entry block: 0x140
Exit block: 0x8a
Body: 0x8a, 0x140, 0x147, 0x14b, 0x3db, 0x3ed, 0x3f1, 0x40d, 0x411

Function 9:
Public function signature: 0xe8b5e51f
Entry block: 0x162
Exit block: 0x8a
Body: 0x8a, 0x162, 0x169, 0x16d, 0x441, 0x48b, 0x48f, 0x49c, 0x4a0

Function 10:
Public fallback function
Entry block: 0x8a
Exit block: 0x8a
Body: 0x8a

