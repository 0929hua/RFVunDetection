Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xc4]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0xc4
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0xc4
0x40: JUMPI 0xc4 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x11b]
---
0x41 DUP1
0x42 PUSH4 0xe1b0b870
0x47 EQ
0x48 PUSH2 0x11b
0x4b JUMPI
---
0x42: V15 = 0xe1b0b870
0x47: V16 = EQ 0xe1b0b870 V11
0x48: V17 = 0x11b
0x4b: JUMPI 0x11b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x188]
---
0x4c DUP1
0x4d PUSH4 0xf2fde38b
0x52 EQ
0x53 PUSH2 0x188
0x56 JUMPI
---
0x4d: V18 = 0xf2fde38b
0x52: V19 = EQ 0xf2fde38b V11
0x53: V20 = 0x188
0x56: JUMPI 0x188 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0xc3]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH32 0xdcbaa71e21be5012f1b142a8fff7a513a2329bdc3f9329dc897a40ae45fd5df1
0x79 TIMESTAMP
0x7a CALLER
0x7b PUSH1 0x40
0x7d MLOAD
0x7e DUP1
0x7f DUP4
0x80 DUP2
0x81 MSTORE
0x82 PUSH1 0x20
0x84 ADD
0x85 DUP3
0x86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b AND
0x9c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1 AND
0xb2 DUP2
0xb3 MSTORE
0xb4 PUSH1 0x20
0xb6 ADD
0xb7 SWAP3
0xb8 POP
0xb9 POP
0xba POP
0xbb PUSH1 0x40
0xbd MLOAD
0xbe DUP1
0xbf SWAP2
0xc0 SUB
0xc1 SWAP1
0xc2 LOG1
0xc3 STOP
---
0x57: JUMPDEST 
0x58: V21 = 0xdcbaa71e21be5012f1b142a8fff7a513a2329bdc3f9329dc897a40ae45fd5df1
0x79: V22 = TIMESTAMP
0x7a: V23 = CALLER
0x7b: V24 = 0x40
0x7d: V25 = M[0x40]
0x81: M[V25] = V22
0x82: V26 = 0x20
0x84: V27 = ADD 0x20 V25
0x86: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x9c: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0xb3: M[V27] = V31
0xb4: V32 = 0x20
0xb6: V33 = ADD 0x20 V27
0xbb: V34 = 0x40
0xbd: V35 = M[0x40]
0xc0: V36 = SUB V33 V35
0xc2: LOG V35 V36 0xdcbaa71e21be5012f1b142a8fff7a513a2329bdc3f9329dc897a40ae45fd5df1
0xc3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xcb]
---
Predecessors: [0xd]
Successors: [0xcc, 0xd0]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 DUP1
0xc7 ISZERO
0xc8 PUSH2 0xd0
0xcb JUMPI
---
0xc4: JUMPDEST 
0xc5: V37 = CALLVALUE
0xc7: V38 = ISZERO V37
0xc8: V39 = 0xd0
0xcb: JUMPI 0xd0 V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V11, V37]

================================

Block 0xcc
[0xcc:0xcf]
---
Predecessors: [0xc4]
Successors: []
---
0xcc PUSH1 0x0
0xce DUP1
0xcf REVERT
---
0xcc: V40 = 0x0
0xcf: REVERT 0x0 0x0
---
Entry stack: [V11, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V37]

================================

Block 0xd0
[0xd0:0xd8]
---
Predecessors: [0xc4]
Successors: [0x1cb]
---
0xd0 JUMPDEST
0xd1 POP
0xd2 PUSH2 0xd9
0xd5 PUSH2 0x1cb
0xd8 JUMP
---
0xd0: JUMPDEST 
0xd2: V41 = 0xd9
0xd5: V42 = 0x1cb
0xd8: JUMP 0x1cb
---
Entry stack: [V11, V37]
Stack pops: 1
Stack additions: [0xd9]
Exit stack: [V11, 0xd9]

================================

Block 0xd9
[0xd9:0x11a]
---
Predecessors: [0x1cb]
Successors: []
---
0xd9 JUMPDEST
0xda PUSH1 0x40
0xdc MLOAD
0xdd DUP1
0xde DUP3
0xdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4 AND
0xf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a AND
0x10b DUP2
0x10c MSTORE
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP2
0x111 POP
0x112 POP
0x113 PUSH1 0x40
0x115 MLOAD
0x116 DUP1
0x117 SWAP2
0x118 SUB
0x119 SWAP1
0x11a RETURN
---
0xd9: JUMPDEST 
0xda: V43 = 0x40
0xdc: V44 = M[0x40]
0xdf: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0xf5: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0x10c: M[V44] = V48
0x10d: V49 = 0x20
0x10f: V50 = ADD 0x20 V44
0x113: V51 = 0x40
0x115: V52 = M[0x40]
0x118: V53 = SUB V50 V52
0x11a: RETURN V52 V53
---
Entry stack: [V11, 0xd9, V98]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd9]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x41]
Successors: [0x123, 0x127]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d DUP1
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11b: JUMPDEST 
0x11c: V54 = CALLVALUE
0x11e: V55 = ISZERO V54
0x11f: V56 = 0x127
0x122: JUMPI 0x127 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11b]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V57 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0x127
[0x127:0x185]
---
Predecessors: [0x11b]
Successors: [0x1f0]
---
0x127 JUMPDEST
0x128 POP
0x129 PUSH2 0x186
0x12c PUSH1 0x4
0x12e DUP1
0x12f CALLDATASIZE
0x130 SUB
0x131 DUP2
0x132 ADD
0x133 SWAP1
0x134 DUP1
0x135 DUP1
0x136 CALLDATALOAD
0x137 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14c AND
0x14d SWAP1
0x14e PUSH1 0x20
0x150 ADD
0x151 SWAP1
0x152 SWAP3
0x153 SWAP2
0x154 SWAP1
0x155 DUP1
0x156 CALLDATALOAD
0x157 SWAP1
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP1
0x15c SWAP3
0x15d SWAP2
0x15e SWAP1
0x15f DUP1
0x160 CALLDATALOAD
0x161 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x176 AND
0x177 SWAP1
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP1
0x17c SWAP3
0x17d SWAP2
0x17e SWAP1
0x17f POP
0x180 POP
0x181 POP
0x182 PUSH2 0x1f0
0x185 JUMP
---
0x127: JUMPDEST 
0x129: V58 = 0x186
0x12c: V59 = 0x4
0x12f: V60 = CALLDATASIZE
0x130: V61 = SUB V60 0x4
0x132: V62 = ADD 0x4 V61
0x136: V63 = CALLDATALOAD 0x4
0x137: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x14c: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x14e: V66 = 0x20
0x150: V67 = ADD 0x20 0x4
0x156: V68 = CALLDATALOAD 0x24
0x158: V69 = 0x20
0x15a: V70 = ADD 0x20 0x24
0x160: V71 = CALLDATALOAD 0x44
0x161: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x176: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x178: V74 = 0x20
0x17a: V75 = ADD 0x20 0x44
0x182: V76 = 0x1f0
0x185: JUMP 0x1f0
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: [0x186, V65, V68, V73]
Exit stack: [V11, 0x186, V65, V68, V73]

================================

Block 0x186
[0x186:0x187]
---
Predecessors: [0x394]
Successors: []
---
0x186 JUMPDEST
0x187 STOP
---
0x186: JUMPDEST 
0x187: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x188
[0x188:0x18f]
---
Predecessors: [0x4c]
Successors: [0x190, 0x194]
---
0x188 JUMPDEST
0x189 CALLVALUE
0x18a DUP1
0x18b ISZERO
0x18c PUSH2 0x194
0x18f JUMPI
---
0x188: JUMPDEST 
0x189: V77 = CALLVALUE
0x18b: V78 = ISZERO V77
0x18c: V79 = 0x194
0x18f: JUMPI 0x194 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x188]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V80 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x194
[0x194:0x1c8]
---
Predecessors: [0x188]
Successors: [0x439]
---
0x194 JUMPDEST
0x195 POP
0x196 PUSH2 0x1c9
0x199 PUSH1 0x4
0x19b DUP1
0x19c CALLDATASIZE
0x19d SUB
0x19e DUP2
0x19f ADD
0x1a0 SWAP1
0x1a1 DUP1
0x1a2 DUP1
0x1a3 CALLDATALOAD
0x1a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b9 AND
0x1ba SWAP1
0x1bb PUSH1 0x20
0x1bd ADD
0x1be SWAP1
0x1bf SWAP3
0x1c0 SWAP2
0x1c1 SWAP1
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 PUSH2 0x439
0x1c8 JUMP
---
0x194: JUMPDEST 
0x196: V81 = 0x1c9
0x199: V82 = 0x4
0x19c: V83 = CALLDATASIZE
0x19d: V84 = SUB V83 0x4
0x19f: V85 = ADD 0x4 V84
0x1a3: V86 = CALLDATALOAD 0x4
0x1a4: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x1bb: V89 = 0x20
0x1bd: V90 = ADD 0x20 0x4
0x1c5: V91 = 0x439
0x1c8: JUMP 0x439
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x1c9, V88]
Exit stack: [V11, 0x1c9, V88]

================================

Block 0x1c9
[0x1c9:0x1ca]
---
Predecessors: [0x4d0]
Successors: []
---
0x1c9 JUMPDEST
0x1ca STOP
---
0x1c9: JUMPDEST 
0x1ca: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cb
[0x1cb:0x1ef]
---
Predecessors: [0xd0]
Successors: [0xd9]
---
0x1cb JUMPDEST
0x1cc PUSH1 0x0
0x1ce DUP1
0x1cf SWAP1
0x1d0 SLOAD
0x1d1 SWAP1
0x1d2 PUSH2 0x100
0x1d5 EXP
0x1d6 SWAP1
0x1d7 DIV
0x1d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ed AND
0x1ee DUP2
0x1ef JUMP
---
0x1cb: JUMPDEST 
0x1cc: V92 = 0x0
0x1d0: V93 = S[0x0]
0x1d2: V94 = 0x100
0x1d5: V95 = EXP 0x100 0x0
0x1d7: V96 = DIV V93 0x1
0x1d8: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1ef: JUMP 0xd9
---
Entry stack: [V11, 0xd9]
Stack pops: 1
Stack additions: [S0, V98]
Exit stack: [V11, 0xd9, V98]

================================

Block 0x1f0
[0x1f0:0x248]
---
Predecessors: [0x127]
Successors: [0x249, 0x24d]
---
0x1f0 JUMPDEST
0x1f1 PUSH1 0x0
0x1f3 DUP1
0x1f4 PUSH1 0x0
0x1f6 SWAP1
0x1f7 SLOAD
0x1f8 SWAP1
0x1f9 PUSH2 0x100
0x1fc EXP
0x1fd SWAP1
0x1fe DIV
0x1ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x214 AND
0x215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22a AND
0x22b CALLER
0x22c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x241 AND
0x242 EQ
0x243 ISZERO
0x244 ISZERO
0x245 PUSH2 0x24d
0x248 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V99 = 0x0
0x1f4: V100 = 0x0
0x1f7: V101 = S[0x0]
0x1f9: V102 = 0x100
0x1fc: V103 = EXP 0x100 0x0
0x1fe: V104 = DIV V101 0x1
0x1ff: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x214: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x215: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x22b: V109 = CALLER
0x22c: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x241: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x242: V112 = EQ V111 V108
0x243: V113 = ISZERO V112
0x244: V114 = ISZERO V113
0x245: V115 = 0x24d
0x248: JUMPI 0x24d V114
---
Entry stack: [V11, 0x186, V65, V68, V73]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x186, V65, V68, V73, 0x0]

================================

Block 0x249
[0x249:0x24c]
---
Predecessors: [0x1f0]
Successors: []
---
0x249 PUSH1 0x0
0x24b DUP1
0x24c REVERT
---
0x249: V116 = 0x0
0x24c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x186, V65, V68, V73, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x186, V65, V68, V73, 0x0]

================================

Block 0x24d
[0x24d:0x284]
---
Predecessors: [0x1f0]
Successors: [0x285, 0x289]
---
0x24d JUMPDEST
0x24e PUSH1 0x0
0x250 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x265 AND
0x266 DUP3
0x267 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27c AND
0x27d EQ
0x27e ISZERO
0x27f ISZERO
0x280 ISZERO
0x281 PUSH2 0x289
0x284 JUMPI
---
0x24d: JUMPDEST 
0x24e: V117 = 0x0
0x250: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x265: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x267: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x27d: V122 = EQ V121 0x0
0x27e: V123 = ISZERO V122
0x27f: V124 = ISZERO V123
0x280: V125 = ISZERO V124
0x281: V126 = 0x289
0x284: JUMPI 0x289 V125
---
Entry stack: [V11, 0x186, V65, V68, V73, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x186, V65, V68, V73, 0x0]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x24d]
Successors: []
---
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
---
0x285: V127 = 0x0
0x288: REVERT 0x0 0x0
---
Entry stack: [V11, 0x186, V65, V68, V73, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x186, V65, V68, V73, 0x0]

================================

Block 0x289
[0x289:0x2aa]
---
Predecessors: [0x24d]
Successors: [0x2ab, 0x2af]
---
0x289 JUMPDEST
0x28a DUP3
0x28b ADDRESS
0x28c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a1 AND
0x2a2 BALANCE
0x2a3 LT
0x2a4 ISZERO
0x2a5 ISZERO
0x2a6 ISZERO
0x2a7 PUSH2 0x2af
0x2aa JUMPI
---
0x289: JUMPDEST 
0x28b: V128 = ADDRESS
0x28c: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a1: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x2a2: V131 = BALANCE V130
0x2a3: V132 = LT V131 V68
0x2a4: V133 = ISZERO V132
0x2a5: V134 = ISZERO V133
0x2a6: V135 = ISZERO V134
0x2a7: V136 = 0x2af
0x2aa: JUMPI 0x2af V135
---
Entry stack: [V11, 0x186, V65, V68, V73, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x186, V65, V68, V73, 0x0]

================================

Block 0x2ab
[0x2ab:0x2ae]
---
Predecessors: [0x289]
Successors: []
---
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae REVERT
---
0x2ab: V137 = 0x0
0x2ae: REVERT 0x0 0x0
---
Entry stack: [V11, 0x186, V65, V68, V73, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x186, V65, V68, V73, 0x0]

================================

Block 0x2af
[0x2af:0x348]
---
Predecessors: [0x289]
Successors: [0x349, 0x34d]
---
0x2af JUMPDEST
0x2b0 DUP2
0x2b1 SWAP1
0x2b2 POP
0x2b3 DUP1
0x2b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c9 AND
0x2ca PUSH4 0xce47b800
0x2cf DUP5
0x2d0 DUP7
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 DUP4
0x2d5 PUSH4 0xffffffff
0x2da AND
0x2db PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2f9 MUL
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x4
0x2fe ADD
0x2ff DUP1
0x300 DUP3
0x301 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x316 AND
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d DUP2
0x32e MSTORE
0x32f PUSH1 0x20
0x331 ADD
0x332 SWAP2
0x333 POP
0x334 POP
0x335 PUSH1 0x20
0x337 PUSH1 0x40
0x339 MLOAD
0x33a DUP1
0x33b DUP4
0x33c SUB
0x33d DUP2
0x33e DUP6
0x33f DUP9
0x340 DUP1
0x341 EXTCODESIZE
0x342 ISZERO
0x343 DUP1
0x344 ISZERO
0x345 PUSH2 0x34d
0x348 JUMPI
---
0x2af: JUMPDEST 
0x2b4: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x2ca: V140 = 0xce47b800
0x2d1: V141 = 0x40
0x2d3: V142 = M[0x40]
0x2d5: V143 = 0xffffffff
0x2da: V144 = AND 0xffffffff 0xce47b800
0x2db: V145 = 0x100000000000000000000000000000000000000000000000000000000
0x2f9: V146 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xce47b800
0x2fb: M[V142] = 0xce47b80000000000000000000000000000000000000000000000000000000000
0x2fc: V147 = 0x4
0x2fe: V148 = ADD 0x4 V142
0x301: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x317: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x32e: M[V148] = V152
0x32f: V153 = 0x20
0x331: V154 = ADD 0x20 V148
0x335: V155 = 0x20
0x337: V156 = 0x40
0x339: V157 = M[0x40]
0x33c: V158 = SUB V154 V157
0x341: V159 = EXTCODESIZE V139
0x342: V160 = ISZERO V159
0x344: V161 = ISZERO V160
0x345: V162 = 0x34d
0x348: JUMPI 0x34d V161
---
Entry stack: [V11, 0x186, V65, V68, V73, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S1, V139, 0xce47b800, S2, V154, 0x20, V157, V158, V157, S2, V139, V160]
Exit stack: [V11, 0x186, V65, V68, V73, V73, V139, 0xce47b800, V68, V154, 0x20, V157, V158, V157, V68, V139, V160]

================================

Block 0x349
[0x349:0x34c]
---
Predecessors: [0x2af]
Successors: []
---
0x349 PUSH1 0x0
0x34b DUP1
0x34c REVERT
---
0x349: V163 = 0x0
0x34c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x186, V65, V68, V73, V73, V139, 0xce47b800, V68, V154, 0x20, V157, V158, V157, V68, V139, V160]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x186, V65, V68, V73, V73, V139, 0xce47b800, V68, V154, 0x20, V157, V158, V157, V68, V139, V160]

================================

Block 0x34d
[0x34d:0x357]
---
Predecessors: [0x2af]
Successors: [0x358, 0x361]
---
0x34d JUMPDEST
0x34e POP
0x34f GAS
0x350 CALL
0x351 ISZERO
0x352 DUP1
0x353 ISZERO
0x354 PUSH2 0x361
0x357 JUMPI
---
0x34d: JUMPDEST 
0x34f: V164 = GAS
0x350: V165 = CALL V164 V139 V68 V157 V158 V157 0x20
0x351: V166 = ISZERO V165
0x353: V167 = ISZERO V166
0x354: V168 = 0x361
0x357: JUMPI 0x361 V167
---
Entry stack: [V11, 0x186, V65, V68, V73, V73, V139, 0xce47b800, V68, V154, 0x20, V157, V158, V157, V68, V139, V160]
Stack pops: 7
Stack additions: [V166]
Exit stack: [V11, 0x186, V65, V68, V73, V73, V139, 0xce47b800, V68, V154, V166]

================================

Block 0x358
[0x358:0x360]
---
Predecessors: [0x34d]
Successors: []
---
0x358 RETURNDATASIZE
0x359 PUSH1 0x0
0x35b DUP1
0x35c RETURNDATACOPY
0x35d RETURNDATASIZE
0x35e PUSH1 0x0
0x360 REVERT
---
0x358: V169 = RETURNDATASIZE
0x359: V170 = 0x0
0x35c: RETURNDATACOPY 0x0 0x0 V169
0x35d: V171 = RETURNDATASIZE
0x35e: V172 = 0x0
0x360: REVERT 0x0 V171
---
Entry stack: [V11, 0x186, V65, V68, V73, V73, V139, 0xce47b800, V68, V154, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x186, V65, V68, V73, V73, V139, 0xce47b800, V68, V154, V166]

================================

Block 0x361
[0x361:0x373]
---
Predecessors: [0x34d]
Successors: [0x374, 0x378]
---
0x361 JUMPDEST
0x362 POP
0x363 POP
0x364 POP
0x365 POP
0x366 POP
0x367 PUSH1 0x40
0x369 MLOAD
0x36a RETURNDATASIZE
0x36b PUSH1 0x20
0x36d DUP2
0x36e LT
0x36f ISZERO
0x370 PUSH2 0x378
0x373 JUMPI
---
0x361: JUMPDEST 
0x367: V173 = 0x40
0x369: V174 = M[0x40]
0x36a: V175 = RETURNDATASIZE
0x36b: V176 = 0x20
0x36e: V177 = LT V175 0x20
0x36f: V178 = ISZERO V177
0x370: V179 = 0x378
0x373: JUMPI 0x378 V178
---
Entry stack: [V11, 0x186, V65, V68, V73, V73, V139, 0xce47b800, V68, V154, V166]
Stack pops: 5
Stack additions: [V174, V175]
Exit stack: [V11, 0x186, V65, V68, V73, V73, V174, V175]

================================

Block 0x374
[0x374:0x377]
---
Predecessors: [0x361]
Successors: []
---
0x374 PUSH1 0x0
0x376 DUP1
0x377 REVERT
---
0x374: V180 = 0x0
0x377: REVERT 0x0 0x0
---
Entry stack: [V11, 0x186, V65, V68, V73, V73, V174, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x186, V65, V68, V73, V73, V174, V175]

================================

Block 0x378
[0x378:0x38f]
---
Predecessors: [0x361]
Successors: [0x390, 0x394]
---
0x378 JUMPDEST
0x379 DUP2
0x37a ADD
0x37b SWAP1
0x37c DUP1
0x37d DUP1
0x37e MLOAD
0x37f SWAP1
0x380 PUSH1 0x20
0x382 ADD
0x383 SWAP1
0x384 SWAP3
0x385 SWAP2
0x386 SWAP1
0x387 POP
0x388 POP
0x389 POP
0x38a ISZERO
0x38b ISZERO
0x38c PUSH2 0x394
0x38f JUMPI
---
0x378: JUMPDEST 
0x37a: V181 = ADD V174 V175
0x37e: V182 = M[V174]
0x380: V183 = 0x20
0x382: V184 = ADD 0x20 V174
0x38a: V185 = ISZERO V182
0x38b: V186 = ISZERO V185
0x38c: V187 = 0x394
0x38f: JUMPI 0x394 V186
---
Entry stack: [V11, 0x186, V65, V68, V73, V73, V174, V175]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x186, V65, V68, V73, V73]

================================

Block 0x390
[0x390:0x393]
---
Predecessors: [0x378]
Successors: []
---
0x390 PUSH1 0x0
0x392 DUP1
0x393 REVERT
---
0x390: V188 = 0x0
0x393: REVERT 0x0 0x0
---
Entry stack: [V11, 0x186, V65, V68, V73, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x186, V65, V68, V73, V73]

================================

Block 0x394
[0x394:0x438]
---
Predecessors: [0x378]
Successors: [0x186]
---
0x394 JUMPDEST
0x395 PUSH32 0xd2caf8e11b8052b3be8018b235325d8d9aa2466aba6c9b207a050624c3ae600
0x3b6 DUP5
0x3b7 DUP5
0x3b8 DUP5
0x3b9 PUSH1 0x40
0x3bb MLOAD
0x3bc DUP1
0x3bd DUP5
0x3be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d3 AND
0x3d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e9 AND
0x3ea DUP2
0x3eb MSTORE
0x3ec PUSH1 0x20
0x3ee ADD
0x3ef DUP4
0x3f0 DUP2
0x3f1 MSTORE
0x3f2 PUSH1 0x20
0x3f4 ADD
0x3f5 DUP3
0x3f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40b AND
0x40c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x421 AND
0x422 DUP2
0x423 MSTORE
0x424 PUSH1 0x20
0x426 ADD
0x427 SWAP4
0x428 POP
0x429 POP
0x42a POP
0x42b POP
0x42c PUSH1 0x40
0x42e MLOAD
0x42f DUP1
0x430 SWAP2
0x431 SUB
0x432 SWAP1
0x433 LOG1
0x434 POP
0x435 POP
0x436 POP
0x437 POP
0x438 JUMP
---
0x394: JUMPDEST 
0x395: V189 = 0xd2caf8e11b8052b3be8018b235325d8d9aa2466aba6c9b207a050624c3ae600
0x3b9: V190 = 0x40
0x3bb: V191 = M[0x40]
0x3be: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d3: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x3d4: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e9: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x3eb: M[V191] = V195
0x3ec: V196 = 0x20
0x3ee: V197 = ADD 0x20 V191
0x3f1: M[V197] = V68
0x3f2: V198 = 0x20
0x3f4: V199 = ADD 0x20 V197
0x3f6: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x40c: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x421: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x423: M[V199] = V203
0x424: V204 = 0x20
0x426: V205 = ADD 0x20 V199
0x42c: V206 = 0x40
0x42e: V207 = M[0x40]
0x431: V208 = SUB V205 V207
0x433: LOG V207 V208 0xd2caf8e11b8052b3be8018b235325d8d9aa2466aba6c9b207a050624c3ae600
0x438: JUMP 0x186
---
Entry stack: [V11, 0x186, V65, V68, V73, V73]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x439
[0x439:0x48f]
---
Predecessors: [0x194]
Successors: [0x490, 0x494]
---
0x439 JUMPDEST
0x43a PUSH1 0x0
0x43c DUP1
0x43d SWAP1
0x43e SLOAD
0x43f SWAP1
0x440 PUSH2 0x100
0x443 EXP
0x444 SWAP1
0x445 DIV
0x446 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45b AND
0x45c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x471 AND
0x472 CALLER
0x473 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x488 AND
0x489 EQ
0x48a ISZERO
0x48b ISZERO
0x48c PUSH2 0x494
0x48f JUMPI
---
0x439: JUMPDEST 
0x43a: V209 = 0x0
0x43e: V210 = S[0x0]
0x440: V211 = 0x100
0x443: V212 = EXP 0x100 0x0
0x445: V213 = DIV V210 0x1
0x446: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x45c: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x471: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x472: V218 = CALLER
0x473: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x488: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x489: V221 = EQ V220 V217
0x48a: V222 = ISZERO V221
0x48b: V223 = ISZERO V222
0x48c: V224 = 0x494
0x48f: JUMPI 0x494 V223
---
Entry stack: [V11, 0x1c9, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V88]

================================

Block 0x490
[0x490:0x493]
---
Predecessors: [0x439]
Successors: []
---
0x490 PUSH1 0x0
0x492 DUP1
0x493 REVERT
---
0x490: V225 = 0x0
0x493: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V88]

================================

Block 0x494
[0x494:0x4cb]
---
Predecessors: [0x439]
Successors: [0x4cc, 0x4d0]
---
0x494 JUMPDEST
0x495 PUSH1 0x0
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad DUP2
0x4ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c3 AND
0x4c4 EQ
0x4c5 ISZERO
0x4c6 ISZERO
0x4c7 ISZERO
0x4c8 PUSH2 0x4d0
0x4cb JUMPI
---
0x494: JUMPDEST 
0x495: V226 = 0x0
0x497: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x4ae: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c3: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x4c4: V231 = EQ V230 0x0
0x4c5: V232 = ISZERO V231
0x4c6: V233 = ISZERO V232
0x4c7: V234 = ISZERO V233
0x4c8: V235 = 0x4d0
0x4cb: JUMPI 0x4d0 V234
---
Entry stack: [V11, 0x1c9, V88]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1c9, V88]

================================

Block 0x4cc
[0x4cc:0x4cf]
---
Predecessors: [0x494]
Successors: []
---
0x4cc PUSH1 0x0
0x4ce DUP1
0x4cf REVERT
---
0x4cc: V236 = 0x0
0x4cf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c9, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c9, V88]

================================

Block 0x4d0
[0x4d0:0x5a9]
---
Predecessors: [0x494]
Successors: [0x1c9]
---
0x4d0 JUMPDEST
0x4d1 DUP1
0x4d2 PUSH1 0x0
0x4d4 DUP1
0x4d5 PUSH2 0x100
0x4d8 EXP
0x4d9 DUP2
0x4da SLOAD
0x4db DUP2
0x4dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f1 MUL
0x4f2 NOT
0x4f3 AND
0x4f4 SWAP1
0x4f5 DUP4
0x4f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50b AND
0x50c MUL
0x50d OR
0x50e SWAP1
0x50f SSTORE
0x510 POP
0x511 PUSH32 0x7699c77f2404f9b6bbd003861bb4af8ae70b205e19e73d7ec7fe4590db59a6b7
0x532 CALLER
0x533 DUP3
0x534 PUSH1 0x40
0x536 MLOAD
0x537 DUP1
0x538 DUP4
0x539 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54e AND
0x54f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x564 AND
0x565 DUP2
0x566 MSTORE
0x567 PUSH1 0x20
0x569 ADD
0x56a DUP3
0x56b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x580 AND
0x581 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x596 AND
0x597 DUP2
0x598 MSTORE
0x599 PUSH1 0x20
0x59b ADD
0x59c SWAP3
0x59d POP
0x59e POP
0x59f POP
0x5a0 PUSH1 0x40
0x5a2 MLOAD
0x5a3 DUP1
0x5a4 SWAP2
0x5a5 SUB
0x5a6 SWAP1
0x5a7 LOG1
0x5a8 POP
0x5a9 JUMP
---
0x4d0: JUMPDEST 
0x4d2: V237 = 0x0
0x4d5: V238 = 0x100
0x4d8: V239 = EXP 0x100 0x0
0x4da: V240 = S[0x0]
0x4dc: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V242 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4f2: V243 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4f3: V244 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V240
0x4f6: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x50b: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x50c: V247 = MUL V246 0x1
0x50d: V248 = OR V247 V244
0x50f: S[0x0] = V248
0x511: V249 = 0x7699c77f2404f9b6bbd003861bb4af8ae70b205e19e73d7ec7fe4590db59a6b7
0x532: V250 = CALLER
0x534: V251 = 0x40
0x536: V252 = M[0x40]
0x539: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x54e: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x54f: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x564: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x566: M[V252] = V256
0x567: V257 = 0x20
0x569: V258 = ADD 0x20 V252
0x56b: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x580: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x581: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x596: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x598: M[V258] = V262
0x599: V263 = 0x20
0x59b: V264 = ADD 0x20 V258
0x5a0: V265 = 0x40
0x5a2: V266 = M[0x40]
0x5a5: V267 = SUB V264 V266
0x5a7: LOG V266 V267 0x7699c77f2404f9b6bbd003861bb4af8ae70b205e19e73d7ec7fe4590db59a6b7
0x5a9: JUMP 0x1c9
---
Entry stack: [V11, 0x1c9, V88]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x5aa
[0x5aa:0x5ec]
---
Predecessors: []
Successors: []
---
0x5aa STOP
0x5ab LOG1
0x5ac PUSH6 0x627a7a723058
0x5b3 SHA3
0x5b4 MISSING 0x47
0x5b5 SWAP16
0x5b6 MISSING 0xcf
0x5b7 CODECOPY
0x5b8 MISSING 0xb4
0x5b9 LOG1
0x5ba DUP15
0x5bb DUP16
0x5bc DUP15
0x5bd DUP9
0x5be MISSING 0x25
0x5bf MISSING 0xf6
0x5c0 PUSH10 0xff0f4eeae8b3908342ff
0x5cb MISSING 0x24
0x5cc XOR
0x5cd PUSH31 0xe06c5a04065c0029
---
0x5aa: STOP 
0x5ab: LOG S0 S1 S2
0x5ac: V268 = 0x627a7a723058
0x5b3: V269 = SHA3 0x627a7a723058 S3
0x5b4: MISSING 0x47
0x5b6: MISSING 0xcf
0x5b7: CODECOPY S0 S1 S2
0x5b8: MISSING 0xb4
0x5b9: LOG S0 S1 S2
0x5be: MISSING 0x25
0x5bf: MISSING 0xf6
0x5c0: V270 = 0xff0f4eeae8b3908342ff
0x5cb: MISSING 0x24
0x5cc: V271 = XOR S0 S1
0x5cd: V272 = 0xe06c5a04065c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V269, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, S8, S15, S17, S17, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, 0xff0f4eeae8b3908342ff, 0xe06c5a04065c0029, V271]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0xc4
Exit block: 0xd9
Body: 0xc4, 0xcc, 0xd0, 0xd9, 0x1cb

Function 1:
Public function signature: 0xe1b0b870
Entry block: 0x11b
Exit block: 0x186
Body: 0x11b, 0x123, 0x127, 0x186, 0x1f0, 0x249, 0x24d, 0x285, 0x289, 0x2ab, 0x2af, 0x349, 0x34d, 0x358, 0x361, 0x374, 0x378, 0x390, 0x394

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0x188
Exit block: 0x1c9
Body: 0x188, 0x190, 0x194, 0x1c9, 0x439, 0x490, 0x494, 0x4cc, 0x4d0

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

