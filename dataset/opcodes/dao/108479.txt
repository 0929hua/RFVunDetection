Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa9
0xa: JUMPI 0xa9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xad]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xa3cb72e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xad
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xa3cb72e
0x20: V14 = EQ V12 0xa3cb72e
0x21: V15 = 0xad
0x24: JUMPI 0xad V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x13e]
---
0x25 DUP1
0x26 PUSH4 0x12065fe0
0x2b EQ
0x2c PUSH2 0x13e
0x2f JUMPI
---
0x26: V16 = 0x12065fe0
0x2b: V17 = EQ 0x12065fe0 V12
0x2c: V18 = 0x13e
0x2f: JUMPI 0x13e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x163]
---
0x30 DUP1
0x31 PUSH4 0x1389c9aa
0x36 EQ
0x37 PUSH2 0x163
0x3a JUMPI
---
0x31: V19 = 0x1389c9aa
0x36: V20 = EQ 0x1389c9aa V12
0x37: V21 = 0x163
0x3a: JUMPI 0x163 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x206]
---
0x3b DUP1
0x3c PUSH4 0x2e1a7d4d
0x41 EQ
0x42 PUSH2 0x206
0x45 JUMPI
---
0x3c: V22 = 0x2e1a7d4d
0x41: V23 = EQ 0x2e1a7d4d V12
0x42: V24 = 0x206
0x45: JUMPI 0x206 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x21e]
---
0x46 DUP1
0x47 PUSH4 0x3aecd0e3
0x4c EQ
0x4d PUSH2 0x21e
0x50 JUMPI
---
0x47: V25 = 0x3aecd0e3
0x4c: V26 = EQ 0x3aecd0e3 V12
0x4d: V27 = 0x21e
0x50: JUMPI 0x21e V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x24f]
---
0x51 DUP1
0x52 PUSH4 0x477bddaa
0x57 EQ
0x58 PUSH2 0x24f
0x5b JUMPI
---
0x52: V28 = 0x477bddaa
0x57: V29 = EQ 0x477bddaa V12
0x58: V30 = 0x24f
0x5b: JUMPI 0x24f V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x270]
---
0x5c DUP1
0x5d PUSH4 0x5256bb86
0x62 EQ
0x63 PUSH2 0x270
0x66 JUMPI
---
0x5d: V31 = 0x5256bb86
0x62: V32 = EQ 0x5256bb86 V12
0x63: V33 = 0x270
0x66: JUMPI 0x270 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x2c1]
---
0x67 DUP1
0x68 PUSH4 0x58d2d81a
0x6d EQ
0x6e PUSH2 0x2c1
0x71 JUMPI
---
0x68: V34 = 0x58d2d81a
0x6d: V35 = EQ 0x58d2d81a V12
0x6e: V36 = 0x2c1
0x71: JUMPI 0x2c1 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x324]
---
0x72 DUP1
0x73 PUSH4 0x5fd8c710
0x78 EQ
0x79 PUSH2 0x324
0x7c JUMPI
---
0x73: V37 = 0x5fd8c710
0x78: V38 = EQ 0x5fd8c710 V12
0x79: V39 = 0x324
0x7c: JUMPI 0x324 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x339]
---
0x7d DUP1
0x7e PUSH4 0x853828b6
0x83 EQ
0x84 PUSH2 0x339
0x87 JUMPI
---
0x7e: V40 = 0x853828b6
0x83: V41 = EQ 0x853828b6 V12
0x84: V42 = 0x339
0x87: JUMPI 0x339 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x34e]
---
0x88 DUP1
0x89 PUSH4 0x9e281a98
0x8e EQ
0x8f PUSH2 0x34e
0x92 JUMPI
---
0x89: V43 = 0x9e281a98
0x8e: V44 = EQ 0x9e281a98 V12
0x8f: V45 = 0x34e
0x92: JUMPI 0x34e V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x372]
---
0x93 DUP1
0x94 PUSH4 0xb2bdfa7b
0x99 EQ
0x9a PUSH2 0x372
0x9d JUMPI
---
0x94: V46 = 0xb2bdfa7b
0x99: V47 = EQ 0xb2bdfa7b V12
0x9a: V48 = 0x372
0x9d: JUMPI 0x372 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x3a1]
---
0x9e DUP1
0x9f PUSH4 0xd0e30db0
0xa4 EQ
0xa5 PUSH2 0x3a1
0xa8 JUMPI
---
0x9f: V49 = 0xd0e30db0
0xa4: V50 = EQ 0xd0e30db0 V12
0xa5: V51 = 0x3a1
0xa8: JUMPI 0x3a1 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xa9]
---
Predecessors: [0x0, 0x9e, 0x3be, 0x5de, 0x796, 0x993, 0xb2e]
Successors: [0xaa]
---
0xa9 JUMPDEST
---
0xa9: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x992}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x992}, S1, S0]

================================

Block 0xaa
[0xaa:0xaa]
---
Predecessors: [0xa9]
Successors: [0xab]
---
0xaa JUMPDEST
---
0xaa: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x992}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x992}, S1, S0]

================================

Block 0xab
[0xab:0xac]
---
Predecessors: [0xaa]
Successors: []
---
0xab JUMPDEST
0xac STOP
---
0xab: JUMPDEST 
0xac: STOP 
---
Entry stack: [V12, S3, {0xa9, 0x992}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x992}, S1, S0]

================================

Block 0xad
[0xad:0xb3]
---
Predecessors: [0xb]
Successors: [0xb4, 0xb8]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xad: JUMPDEST 
0xae: V52 = CALLVALUE
0xaf: V53 = ISZERO V52
0xb0: V54 = 0xb8
0xb3: JUMPI 0xb8 V53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xad]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V55 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb8
[0xb8:0x13b]
---
Predecessors: [0xad]
Successors: [0x3ab]
---
0xb8 JUMPDEST
0xb9 PUSH2 0xa9
0xbc PUSH1 0x4
0xbe PUSH1 0x24
0xc0 DUP2
0xc1 CALLDATALOAD
0xc2 DUP2
0xc3 DUP2
0xc4 ADD
0xc5 SWAP1
0xc6 DUP4
0xc7 ADD
0xc8 CALLDATALOAD
0xc9 DUP1
0xca PUSH1 0x20
0xcc DUP2
0xcd DUP2
0xce MUL
0xcf ADD
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 SWAP1
0xd4 DUP2
0xd5 ADD
0xd6 PUSH1 0x40
0xd8 MSTORE
0xd9 DUP1
0xda SWAP4
0xdb SWAP3
0xdc SWAP2
0xdd SWAP1
0xde DUP2
0xdf DUP2
0xe0 MSTORE
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 DUP4
0xe5 DUP4
0xe6 PUSH1 0x20
0xe8 MUL
0xe9 DUP1
0xea DUP3
0xeb DUP5
0xec CALLDATACOPY
0xed DUP3
0xee ADD
0xef SWAP2
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 POP
0xf6 SWAP2
0xf7 SWAP1
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa SWAP1
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP1
0xff DUP3
0x100 ADD
0x101 DUP1
0x102 CALLDATALOAD
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 DUP1
0x109 DUP1
0x10a PUSH1 0x20
0x10c MUL
0x10d PUSH1 0x20
0x10f ADD
0x110 PUSH1 0x40
0x112 MLOAD
0x113 SWAP1
0x114 DUP2
0x115 ADD
0x116 PUSH1 0x40
0x118 MSTORE
0x119 DUP1
0x11a SWAP4
0x11b SWAP3
0x11c SWAP2
0x11d SWAP1
0x11e DUP2
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 ADD
0x124 DUP4
0x125 DUP4
0x126 PUSH1 0x20
0x128 MUL
0x129 DUP1
0x12a DUP3
0x12b DUP5
0x12c CALLDATACOPY
0x12d POP
0x12e SWAP5
0x12f SWAP7
0x130 POP
0x131 PUSH2 0x3ab
0x134 SWAP6
0x135 POP
0x136 POP
0x137 POP
0x138 POP
0x139 POP
0x13a POP
0x13b JUMP
---
0xb8: JUMPDEST 
0xb9: V56 = 0xa9
0xbc: V57 = 0x4
0xbe: V58 = 0x24
0xc1: V59 = CALLDATALOAD 0x4
0xc4: V60 = ADD V59 0x24
0xc7: V61 = ADD 0x4 V59
0xc8: V62 = CALLDATALOAD V61
0xca: V63 = 0x20
0xce: V64 = MUL 0x20 V62
0xcf: V65 = ADD V64 0x20
0xd0: V66 = 0x40
0xd2: V67 = M[0x40]
0xd5: V68 = ADD V67 V65
0xd6: V69 = 0x40
0xd8: M[0x40] = V68
0xe0: M[V67] = V62
0xe1: V70 = 0x20
0xe3: V71 = ADD 0x20 V67
0xe6: V72 = 0x20
0xe8: V73 = MUL 0x20 V62
0xec: CALLDATACOPY V71 V60 V73
0xee: V74 = ADD V71 V73
0xf9: V75 = CALLDATALOAD 0x24
0xfb: V76 = 0x20
0xfd: V77 = ADD 0x20 0x24
0x100: V78 = ADD 0x4 V75
0x102: V79 = CALLDATALOAD V78
0x104: V80 = 0x20
0x106: V81 = ADD 0x20 V78
0x10a: V82 = 0x20
0x10c: V83 = MUL 0x20 V79
0x10d: V84 = 0x20
0x10f: V85 = ADD 0x20 V83
0x110: V86 = 0x40
0x112: V87 = M[0x40]
0x115: V88 = ADD V87 V85
0x116: V89 = 0x40
0x118: M[0x40] = V88
0x120: M[V87] = V79
0x121: V90 = 0x20
0x123: V91 = ADD 0x20 V87
0x126: V92 = 0x20
0x128: V93 = MUL 0x20 V79
0x12c: CALLDATACOPY V91 V81 V93
0x131: V94 = 0x3ab
0x13b: JUMP 0x3ab
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V67, V87]
Exit stack: [V12, 0xa9, V67, V87]

================================

Block 0x13c
[0x13c:0x13d]
---
Predecessors: []
Successors: []
---
0x13c JUMPDEST
0x13d STOP
---
0x13c: JUMPDEST 
0x13d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x25]
Successors: [0x145, 0x149]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V95 = CALLVALUE
0x140: V96 = ISZERO V95
0x141: V97 = 0x149
0x144: JUMPI 0x149 V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13e]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V98 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x149
[0x149:0x150]
---
Predecessors: [0x13e]
Successors: [0x3c2]
---
0x149 JUMPDEST
0x14a PUSH2 0x151
0x14d PUSH2 0x3c2
0x150 JUMP
---
0x149: JUMPDEST 
0x14a: V99 = 0x151
0x14d: V100 = 0x3c2
0x150: JUMP 0x3c2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x151]
Exit stack: [V12, 0x151]

================================

Block 0x151
[0x151:0x162]
---
Predecessors: [0x442, 0x584]
Successors: []
---
0x151 JUMPDEST
0x152 PUSH1 0x40
0x154 MLOAD
0x155 SWAP1
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x20
0x15a ADD
0x15b PUSH1 0x40
0x15d MLOAD
0x15e DUP1
0x15f SWAP2
0x160 SUB
0x161 SWAP1
0x162 RETURN
---
0x151: JUMPDEST 
0x152: V101 = 0x40
0x154: V102 = M[0x40]
0x157: M[V102] = S0
0x158: V103 = 0x20
0x15a: V104 = ADD 0x20 V102
0x15b: V105 = 0x40
0x15d: V106 = M[0x40]
0x160: V107 = SUB V104 V106
0x162: RETURN V106 V107
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1]

================================

Block 0x163
[0x163:0x169]
---
Predecessors: [0x30]
Successors: [0x16a, 0x16e]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x163: JUMPDEST 
0x164: V108 = CALLVALUE
0x165: V109 = ISZERO V108
0x166: V110 = 0x16e
0x169: JUMPI 0x16e V109
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x163]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V111 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16e
[0x16e:0x1f1]
---
Predecessors: [0x163]
Successors: [0x445]
---
0x16e JUMPDEST
0x16f PUSH2 0x1f2
0x172 PUSH1 0x4
0x174 PUSH1 0x24
0x176 DUP2
0x177 CALLDATALOAD
0x178 DUP2
0x179 DUP2
0x17a ADD
0x17b SWAP1
0x17c DUP4
0x17d ADD
0x17e CALLDATALOAD
0x17f DUP1
0x180 PUSH1 0x20
0x182 DUP2
0x183 DUP2
0x184 MUL
0x185 ADD
0x186 PUSH1 0x40
0x188 MLOAD
0x189 SWAP1
0x18a DUP2
0x18b ADD
0x18c PUSH1 0x40
0x18e MSTORE
0x18f DUP1
0x190 SWAP4
0x191 SWAP3
0x192 SWAP2
0x193 SWAP1
0x194 DUP2
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a DUP4
0x19b DUP4
0x19c PUSH1 0x20
0x19e MUL
0x19f DUP1
0x1a0 DUP3
0x1a1 DUP5
0x1a2 CALLDATACOPY
0x1a3 DUP3
0x1a4 ADD
0x1a5 SWAP2
0x1a6 POP
0x1a7 POP
0x1a8 POP
0x1a9 POP
0x1aa POP
0x1ab POP
0x1ac SWAP2
0x1ad SWAP1
0x1ae DUP1
0x1af CALLDATALOAD
0x1b0 SWAP1
0x1b1 PUSH1 0x20
0x1b3 ADD
0x1b4 SWAP1
0x1b5 DUP3
0x1b6 ADD
0x1b7 DUP1
0x1b8 CALLDATALOAD
0x1b9 SWAP1
0x1ba PUSH1 0x20
0x1bc ADD
0x1bd SWAP1
0x1be DUP1
0x1bf DUP1
0x1c0 PUSH1 0x20
0x1c2 MUL
0x1c3 PUSH1 0x20
0x1c5 ADD
0x1c6 PUSH1 0x40
0x1c8 MLOAD
0x1c9 SWAP1
0x1ca DUP2
0x1cb ADD
0x1cc PUSH1 0x40
0x1ce MSTORE
0x1cf DUP1
0x1d0 SWAP4
0x1d1 SWAP3
0x1d2 SWAP2
0x1d3 SWAP1
0x1d4 DUP2
0x1d5 DUP2
0x1d6 MSTORE
0x1d7 PUSH1 0x20
0x1d9 ADD
0x1da DUP4
0x1db DUP4
0x1dc PUSH1 0x20
0x1de MUL
0x1df DUP1
0x1e0 DUP3
0x1e1 DUP5
0x1e2 CALLDATACOPY
0x1e3 POP
0x1e4 SWAP5
0x1e5 SWAP7
0x1e6 POP
0x1e7 PUSH2 0x445
0x1ea SWAP6
0x1eb POP
0x1ec POP
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 POP
0x1f1 JUMP
---
0x16e: JUMPDEST 
0x16f: V112 = 0x1f2
0x172: V113 = 0x4
0x174: V114 = 0x24
0x177: V115 = CALLDATALOAD 0x4
0x17a: V116 = ADD V115 0x24
0x17d: V117 = ADD 0x4 V115
0x17e: V118 = CALLDATALOAD V117
0x180: V119 = 0x20
0x184: V120 = MUL 0x20 V118
0x185: V121 = ADD V120 0x20
0x186: V122 = 0x40
0x188: V123 = M[0x40]
0x18b: V124 = ADD V123 V121
0x18c: V125 = 0x40
0x18e: M[0x40] = V124
0x196: M[V123] = V118
0x197: V126 = 0x20
0x199: V127 = ADD 0x20 V123
0x19c: V128 = 0x20
0x19e: V129 = MUL 0x20 V118
0x1a2: CALLDATACOPY V127 V116 V129
0x1a4: V130 = ADD V127 V129
0x1af: V131 = CALLDATALOAD 0x24
0x1b1: V132 = 0x20
0x1b3: V133 = ADD 0x20 0x24
0x1b6: V134 = ADD 0x4 V131
0x1b8: V135 = CALLDATALOAD V134
0x1ba: V136 = 0x20
0x1bc: V137 = ADD 0x20 V134
0x1c0: V138 = 0x20
0x1c2: V139 = MUL 0x20 V135
0x1c3: V140 = 0x20
0x1c5: V141 = ADD 0x20 V139
0x1c6: V142 = 0x40
0x1c8: V143 = M[0x40]
0x1cb: V144 = ADD V143 V141
0x1cc: V145 = 0x40
0x1ce: M[0x40] = V144
0x1d6: M[V143] = V135
0x1d7: V146 = 0x20
0x1d9: V147 = ADD 0x20 V143
0x1dc: V148 = 0x20
0x1de: V149 = MUL 0x20 V135
0x1e2: CALLDATACOPY V147 V137 V149
0x1e7: V150 = 0x445
0x1f1: JUMP 0x445
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2, V123, V143]
Exit stack: [V12, 0x1f2, V123, V143]

================================

Block 0x1f2
[0x1f2:0x205]
---
Predecessors: [0x464, 0x584]
Successors: []
---
0x1f2 JUMPDEST
0x1f3 PUSH1 0x40
0x1f5 MLOAD
0x1f6 SWAP1
0x1f7 ISZERO
0x1f8 ISZERO
0x1f9 DUP2
0x1fa MSTORE
0x1fb PUSH1 0x20
0x1fd ADD
0x1fe PUSH1 0x40
0x200 MLOAD
0x201 DUP1
0x202 SWAP2
0x203 SUB
0x204 SWAP1
0x205 RETURN
---
0x1f2: JUMPDEST 
0x1f3: V151 = 0x40
0x1f5: V152 = M[0x40]
0x1f7: V153 = ISZERO S0
0x1f8: V154 = ISZERO V153
0x1fa: M[V152] = V154
0x1fb: V155 = 0x20
0x1fd: V156 = ADD 0x20 V152
0x1fe: V157 = 0x40
0x200: V158 = M[0x40]
0x203: V159 = SUB V156 V158
0x205: RETURN V158 V159
---
Entry stack: [V12, 0x1f2, V123, V143, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S1]

================================

Block 0x206
[0x206:0x20c]
---
Predecessors: [0x3b]
Successors: [0x20d, 0x211]
---
0x206 JUMPDEST
0x207 CALLVALUE
0x208 ISZERO
0x209 PUSH2 0x211
0x20c JUMPI
---
0x206: JUMPDEST 
0x207: V160 = CALLVALUE
0x208: V161 = ISZERO V160
0x209: V162 = 0x211
0x20c: JUMPI 0x211 V161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20d
[0x20d:0x210]
---
Predecessors: [0x206]
Successors: []
---
0x20d PUSH1 0x0
0x20f DUP1
0x210 REVERT
---
0x20d: V163 = 0x0
0x210: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x211
[0x211:0x21b]
---
Predecessors: [0x206]
Successors: [0x46a]
---
0x211 JUMPDEST
0x212 PUSH2 0xa9
0x215 PUSH1 0x4
0x217 CALLDATALOAD
0x218 PUSH2 0x46a
0x21b JUMP
---
0x211: JUMPDEST 
0x212: V164 = 0xa9
0x215: V165 = 0x4
0x217: V166 = CALLDATALOAD 0x4
0x218: V167 = 0x46a
0x21b: JUMP 0x46a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V166]
Exit stack: [V12, 0xa9, V166]

================================

Block 0x21c
[0x21c:0x21d]
---
Predecessors: []
Successors: []
---
0x21c JUMPDEST
0x21d STOP
---
0x21c: JUMPDEST 
0x21d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21e
[0x21e:0x224]
---
Predecessors: [0x46]
Successors: [0x225, 0x229]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 ISZERO
0x221 PUSH2 0x229
0x224 JUMPI
---
0x21e: JUMPDEST 
0x21f: V168 = CALLVALUE
0x220: V169 = ISZERO V168
0x221: V170 = 0x229
0x224: JUMPI 0x229 V169
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x21e]
Successors: []
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
---
0x225: V171 = 0x0
0x228: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x229
[0x229:0x23c]
---
Predecessors: [0x21e]
Successors: [0x504]
---
0x229 JUMPDEST
0x22a PUSH2 0x151
0x22d PUSH1 0x1
0x22f PUSH1 0xa0
0x231 PUSH1 0x2
0x233 EXP
0x234 SUB
0x235 PUSH1 0x4
0x237 CALLDATALOAD
0x238 AND
0x239 PUSH2 0x504
0x23c JUMP
---
0x229: JUMPDEST 
0x22a: V172 = 0x151
0x22d: V173 = 0x1
0x22f: V174 = 0xa0
0x231: V175 = 0x2
0x233: V176 = EXP 0x2 0xa0
0x234: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V178 = 0x4
0x237: V179 = CALLDATALOAD 0x4
0x238: V180 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x239: V181 = 0x504
0x23c: JUMP 0x504
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x151, V180]
Exit stack: [V12, 0x151, V180]

================================

Block 0x23d
[0x23d:0x24e]
---
Predecessors: []
Successors: []
---
0x23d JUMPDEST
0x23e PUSH1 0x40
0x240 MLOAD
0x241 SWAP1
0x242 DUP2
0x243 MSTORE
0x244 PUSH1 0x20
0x246 ADD
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b SWAP2
0x24c SUB
0x24d SWAP1
0x24e RETURN
---
0x23d: JUMPDEST 
0x23e: V182 = 0x40
0x240: V183 = M[0x40]
0x243: M[V183] = S0
0x244: V184 = 0x20
0x246: V185 = ADD 0x20 V183
0x247: V186 = 0x40
0x249: V187 = M[0x40]
0x24c: V188 = SUB V185 V187
0x24e: RETURN V187 V188
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x24f
[0x24f:0x255]
---
Predecessors: [0x51]
Successors: [0x256, 0x25a]
---
0x24f JUMPDEST
0x250 CALLVALUE
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x24f: JUMPDEST 
0x250: V189 = CALLVALUE
0x251: V190 = ISZERO V189
0x252: V191 = 0x25a
0x255: JUMPI 0x25a V190
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x24f]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V192 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25a
[0x25a:0x26d]
---
Predecessors: [0x24f]
Successors: [0x589]
---
0x25a JUMPDEST
0x25b PUSH2 0xa9
0x25e PUSH1 0x1
0x260 PUSH1 0xa0
0x262 PUSH1 0x2
0x264 EXP
0x265 SUB
0x266 PUSH1 0x4
0x268 CALLDATALOAD
0x269 AND
0x26a PUSH2 0x589
0x26d JUMP
---
0x25a: JUMPDEST 
0x25b: V193 = 0xa9
0x25e: V194 = 0x1
0x260: V195 = 0xa0
0x262: V196 = 0x2
0x264: V197 = EXP 0x2 0xa0
0x265: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x266: V199 = 0x4
0x268: V200 = CALLDATALOAD 0x4
0x269: V201 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V202 = 0x589
0x26d: JUMP 0x589
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V201]
Exit stack: [V12, 0xa9, V201]

================================

Block 0x26e
[0x26e:0x26f]
---
Predecessors: []
Successors: []
---
0x26e JUMPDEST
0x26f STOP
---
0x26e: JUMPDEST 
0x26f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x270
[0x270:0x276]
---
Predecessors: [0x5c]
Successors: [0x277, 0x27b]
---
0x270 JUMPDEST
0x271 CALLVALUE
0x272 ISZERO
0x273 PUSH2 0x27b
0x276 JUMPI
---
0x270: JUMPDEST 
0x271: V203 = CALLVALUE
0x272: V204 = ISZERO V203
0x273: V205 = 0x27b
0x276: JUMPI 0x27b V204
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x277
[0x277:0x27a]
---
Predecessors: [0x270]
Successors: []
---
0x277 PUSH1 0x0
0x279 DUP1
0x27a REVERT
---
0x277: V206 = 0x0
0x27a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27b
[0x27b:0x2be]
---
Predecessors: [0x270]
Successors: [0x5e1]
---
0x27b JUMPDEST
0x27c PUSH2 0xa9
0x27f PUSH1 0x4
0x281 PUSH1 0x24
0x283 DUP2
0x284 CALLDATALOAD
0x285 DUP2
0x286 DUP2
0x287 ADD
0x288 SWAP1
0x289 DUP4
0x28a ADD
0x28b CALLDATALOAD
0x28c DUP1
0x28d PUSH1 0x20
0x28f DUP2
0x290 DUP2
0x291 MUL
0x292 ADD
0x293 PUSH1 0x40
0x295 MLOAD
0x296 SWAP1
0x297 DUP2
0x298 ADD
0x299 PUSH1 0x40
0x29b MSTORE
0x29c DUP1
0x29d SWAP4
0x29e SWAP3
0x29f SWAP2
0x2a0 SWAP1
0x2a1 DUP2
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 DUP4
0x2a8 DUP4
0x2a9 PUSH1 0x20
0x2ab MUL
0x2ac DUP1
0x2ad DUP3
0x2ae DUP5
0x2af CALLDATACOPY
0x2b0 POP
0x2b1 SWAP5
0x2b2 SWAP7
0x2b3 POP
0x2b4 PUSH2 0x5e1
0x2b7 SWAP6
0x2b8 POP
0x2b9 POP
0x2ba POP
0x2bb POP
0x2bc POP
0x2bd POP
0x2be JUMP
---
0x27b: JUMPDEST 
0x27c: V207 = 0xa9
0x27f: V208 = 0x4
0x281: V209 = 0x24
0x284: V210 = CALLDATALOAD 0x4
0x287: V211 = ADD V210 0x24
0x28a: V212 = ADD 0x4 V210
0x28b: V213 = CALLDATALOAD V212
0x28d: V214 = 0x20
0x291: V215 = MUL 0x20 V213
0x292: V216 = ADD V215 0x20
0x293: V217 = 0x40
0x295: V218 = M[0x40]
0x298: V219 = ADD V218 V216
0x299: V220 = 0x40
0x29b: M[0x40] = V219
0x2a3: M[V218] = V213
0x2a4: V221 = 0x20
0x2a6: V222 = ADD 0x20 V218
0x2a9: V223 = 0x20
0x2ab: V224 = MUL 0x20 V213
0x2af: CALLDATACOPY V222 V211 V224
0x2b4: V225 = 0x5e1
0x2be: JUMP 0x5e1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V218]
Exit stack: [V12, 0xa9, V218]

================================

Block 0x2bf
[0x2bf:0x2c0]
---
Predecessors: []
Successors: []
---
0x2bf JUMPDEST
0x2c0 STOP
---
0x2bf: JUMPDEST 
0x2c0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2c1
[0x2c1:0x2c7]
---
Predecessors: [0x67]
Successors: [0x2c8, 0x2cc]
---
0x2c1 JUMPDEST
0x2c2 CALLVALUE
0x2c3 ISZERO
0x2c4 PUSH2 0x2cc
0x2c7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V226 = CALLVALUE
0x2c3: V227 = ISZERO V226
0x2c4: V228 = 0x2cc
0x2c7: JUMPI 0x2cc V227
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2c1]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V229 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cc
[0x2cc:0x30f]
---
Predecessors: [0x2c1]
Successors: [0x799]
---
0x2cc JUMPDEST
0x2cd PUSH2 0x1f2
0x2d0 PUSH1 0x4
0x2d2 PUSH1 0x24
0x2d4 DUP2
0x2d5 CALLDATALOAD
0x2d6 DUP2
0x2d7 DUP2
0x2d8 ADD
0x2d9 SWAP1
0x2da DUP4
0x2db ADD
0x2dc CALLDATALOAD
0x2dd DUP1
0x2de PUSH1 0x20
0x2e0 DUP2
0x2e1 DUP2
0x2e2 MUL
0x2e3 ADD
0x2e4 PUSH1 0x40
0x2e6 MLOAD
0x2e7 SWAP1
0x2e8 DUP2
0x2e9 ADD
0x2ea PUSH1 0x40
0x2ec MSTORE
0x2ed DUP1
0x2ee SWAP4
0x2ef SWAP3
0x2f0 SWAP2
0x2f1 SWAP1
0x2f2 DUP2
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 DUP4
0x2f9 DUP4
0x2fa PUSH1 0x20
0x2fc MUL
0x2fd DUP1
0x2fe DUP3
0x2ff DUP5
0x300 CALLDATACOPY
0x301 POP
0x302 SWAP5
0x303 SWAP7
0x304 POP
0x305 PUSH2 0x799
0x308 SWAP6
0x309 POP
0x30a POP
0x30b POP
0x30c POP
0x30d POP
0x30e POP
0x30f JUMP
---
0x2cc: JUMPDEST 
0x2cd: V230 = 0x1f2
0x2d0: V231 = 0x4
0x2d2: V232 = 0x24
0x2d5: V233 = CALLDATALOAD 0x4
0x2d8: V234 = ADD V233 0x24
0x2db: V235 = ADD 0x4 V233
0x2dc: V236 = CALLDATALOAD V235
0x2de: V237 = 0x20
0x2e2: V238 = MUL 0x20 V236
0x2e3: V239 = ADD V238 0x20
0x2e4: V240 = 0x40
0x2e6: V241 = M[0x40]
0x2e9: V242 = ADD V241 V239
0x2ea: V243 = 0x40
0x2ec: M[0x40] = V242
0x2f4: M[V241] = V236
0x2f5: V244 = 0x20
0x2f7: V245 = ADD 0x20 V241
0x2fa: V246 = 0x20
0x2fc: V247 = MUL 0x20 V236
0x300: CALLDATACOPY V245 V234 V247
0x305: V248 = 0x799
0x30f: JUMP 0x799
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2, V241]
Exit stack: [V12, 0x1f2, V241]

================================

Block 0x310
[0x310:0x323]
---
Predecessors: []
Successors: []
---
0x310 JUMPDEST
0x311 PUSH1 0x40
0x313 MLOAD
0x314 SWAP1
0x315 ISZERO
0x316 ISZERO
0x317 DUP2
0x318 MSTORE
0x319 PUSH1 0x20
0x31b ADD
0x31c PUSH1 0x40
0x31e MLOAD
0x31f DUP1
0x320 SWAP2
0x321 SUB
0x322 SWAP1
0x323 RETURN
---
0x310: JUMPDEST 
0x311: V249 = 0x40
0x313: V250 = M[0x40]
0x315: V251 = ISZERO S0
0x316: V252 = ISZERO V251
0x318: M[V250] = V252
0x319: V253 = 0x20
0x31b: V254 = ADD 0x20 V250
0x31c: V255 = 0x40
0x31e: V256 = M[0x40]
0x321: V257 = SUB V254 V256
0x323: RETURN V256 V257
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x324
[0x324:0x32a]
---
Predecessors: [0x72]
Successors: [0x32b, 0x32f]
---
0x324 JUMPDEST
0x325 CALLVALUE
0x326 ISZERO
0x327 PUSH2 0x32f
0x32a JUMPI
---
0x324: JUMPDEST 
0x325: V258 = CALLVALUE
0x326: V259 = ISZERO V258
0x327: V260 = 0x32f
0x32a: JUMPI 0x32f V259
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32b
[0x32b:0x32e]
---
Predecessors: [0x324]
Successors: []
---
0x32b PUSH1 0x0
0x32d DUP1
0x32e REVERT
---
0x32b: V261 = 0x0
0x32e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32f
[0x32f:0x336]
---
Predecessors: [0x324]
Successors: [0x967]
---
0x32f JUMPDEST
0x330 PUSH2 0xa9
0x333 PUSH2 0x967
0x336 JUMP
---
0x32f: JUMPDEST 
0x330: V262 = 0xa9
0x333: V263 = 0x967
0x336: JUMP 0x967
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V12, 0xa9]

================================

Block 0x337
[0x337:0x338]
---
Predecessors: []
Successors: []
---
0x337 JUMPDEST
0x338 STOP
---
0x337: JUMPDEST 
0x338: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x339
[0x339:0x33f]
---
Predecessors: [0x7d]
Successors: [0x340, 0x344]
---
0x339 JUMPDEST
0x33a CALLVALUE
0x33b ISZERO
0x33c PUSH2 0x344
0x33f JUMPI
---
0x339: JUMPDEST 
0x33a: V264 = CALLVALUE
0x33b: V265 = ISZERO V264
0x33c: V266 = 0x344
0x33f: JUMPI 0x344 V265
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x340
[0x340:0x343]
---
Predecessors: [0x339]
Successors: []
---
0x340 PUSH1 0x0
0x342 DUP1
0x343 REVERT
---
0x340: V267 = 0x0
0x343: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x344
[0x344:0x34b]
---
Predecessors: [0x339]
Successors: [0x995]
---
0x344 JUMPDEST
0x345 PUSH2 0xa9
0x348 PUSH2 0x995
0x34b JUMP
---
0x344: JUMPDEST 
0x345: V268 = 0xa9
0x348: V269 = 0x995
0x34b: JUMP 0x995
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V12, 0xa9]

================================

Block 0x34c
[0x34c:0x34d]
---
Predecessors: []
Successors: []
---
0x34c JUMPDEST
0x34d STOP
---
0x34c: JUMPDEST 
0x34d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x34e
[0x34e:0x354]
---
Predecessors: [0x88]
Successors: [0x355, 0x359]
---
0x34e JUMPDEST
0x34f CALLVALUE
0x350 ISZERO
0x351 PUSH2 0x359
0x354 JUMPI
---
0x34e: JUMPDEST 
0x34f: V270 = CALLVALUE
0x350: V271 = ISZERO V270
0x351: V272 = 0x359
0x354: JUMPI 0x359 V271
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x355
[0x355:0x358]
---
Predecessors: [0x34e]
Successors: []
---
0x355 PUSH1 0x0
0x357 DUP1
0x358 REVERT
---
0x355: V273 = 0x0
0x358: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x359
[0x359:0x36f]
---
Predecessors: [0x34e]
Successors: [0x9c0]
---
0x359 JUMPDEST
0x35a PUSH2 0xa9
0x35d PUSH1 0x1
0x35f PUSH1 0xa0
0x361 PUSH1 0x2
0x363 EXP
0x364 SUB
0x365 PUSH1 0x4
0x367 CALLDATALOAD
0x368 AND
0x369 PUSH1 0x24
0x36b CALLDATALOAD
0x36c PUSH2 0x9c0
0x36f JUMP
---
0x359: JUMPDEST 
0x35a: V274 = 0xa9
0x35d: V275 = 0x1
0x35f: V276 = 0xa0
0x361: V277 = 0x2
0x363: V278 = EXP 0x2 0xa0
0x364: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x365: V280 = 0x4
0x367: V281 = CALLDATALOAD 0x4
0x368: V282 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x369: V283 = 0x24
0x36b: V284 = CALLDATALOAD 0x24
0x36c: V285 = 0x9c0
0x36f: JUMP 0x9c0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V282, V284]
Exit stack: [V12, 0xa9, V282, V284]

================================

Block 0x370
[0x370:0x371]
---
Predecessors: []
Successors: []
---
0x370 JUMPDEST
0x371 STOP
---
0x370: JUMPDEST 
0x371: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x372
[0x372:0x378]
---
Predecessors: [0x93]
Successors: [0x379, 0x37d]
---
0x372 JUMPDEST
0x373 CALLVALUE
0x374 ISZERO
0x375 PUSH2 0x37d
0x378 JUMPI
---
0x372: JUMPDEST 
0x373: V286 = CALLVALUE
0x374: V287 = ISZERO V286
0x375: V288 = 0x37d
0x378: JUMPI 0x37d V287
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x379
[0x379:0x37c]
---
Predecessors: [0x372]
Successors: []
---
0x379 PUSH1 0x0
0x37b DUP1
0x37c REVERT
---
0x379: V289 = 0x0
0x37c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37d
[0x37d:0x384]
---
Predecessors: [0x372]
Successors: [0xaca]
---
0x37d JUMPDEST
0x37e PUSH2 0x385
0x381 PUSH2 0xaca
0x384 JUMP
---
0x37d: JUMPDEST 
0x37e: V290 = 0x385
0x381: V291 = 0xaca
0x384: JUMP 0xaca
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x385]
Exit stack: [V12, 0x385]

================================

Block 0x385
[0x385:0x3a0]
---
Predecessors: [0xaca]
Successors: []
---
0x385 JUMPDEST
0x386 PUSH1 0x40
0x388 MLOAD
0x389 PUSH1 0x1
0x38b PUSH1 0xa0
0x38d PUSH1 0x2
0x38f EXP
0x390 SUB
0x391 SWAP1
0x392 SWAP2
0x393 AND
0x394 DUP2
0x395 MSTORE
0x396 PUSH1 0x20
0x398 ADD
0x399 PUSH1 0x40
0x39b MLOAD
0x39c DUP1
0x39d SWAP2
0x39e SUB
0x39f SWAP1
0x3a0 RETURN
---
0x385: JUMPDEST 
0x386: V292 = 0x40
0x388: V293 = M[0x40]
0x389: V294 = 0x1
0x38b: V295 = 0xa0
0x38d: V296 = 0x2
0x38f: V297 = EXP 0x2 0xa0
0x390: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x393: V299 = AND V1050 0xffffffffffffffffffffffffffffffffffffffff
0x395: M[V293] = V299
0x396: V300 = 0x20
0x398: V301 = ADD 0x20 V293
0x399: V302 = 0x40
0x39b: V303 = M[0x40]
0x39e: V304 = SUB V301 V303
0x3a0: RETURN V303 V304
---
Entry stack: [V12, 0x385, V1050]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x385]

================================

Block 0x3a1
[0x3a1:0x3a8]
---
Predecessors: [0x9e]
Successors: [0xad9]
---
0x3a1 JUMPDEST
0x3a2 PUSH2 0xa9
0x3a5 PUSH2 0xad9
0x3a8 JUMP
---
0x3a1: JUMPDEST 
0x3a2: V305 = 0xa9
0x3a5: V306 = 0xad9
0x3a8: JUMP 0xad9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V12, 0xa9]

================================

Block 0x3a9
[0x3a9:0x3aa]
---
Predecessors: []
Successors: []
---
0x3a9 JUMPDEST
0x3aa STOP
---
0x3a9: JUMPDEST 
0x3aa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3ab
[0x3ab:0x3b3]
---
Predecessors: [0xb8]
Successors: [0x5e1]
---
0x3ab JUMPDEST
0x3ac PUSH2 0x3b4
0x3af DUP3
0x3b0 PUSH2 0x5e1
0x3b3 JUMP
---
0x3ab: JUMPDEST 
0x3ac: V307 = 0x3b4
0x3b0: V308 = 0x5e1
0x3b3: JUMP 0x5e1
---
Entry stack: [V12, 0xa9, V67, V87]
Stack pops: 2
Stack additions: [S1, S0, 0x3b4, S1]
Exit stack: [V12, 0xa9, V67, V87, 0x3b4, V67]

================================

Block 0x3b4
[0x3b4:0x3bc]
---
Predecessors: [0x796]
Successors: [0x5e1]
---
0x3b4 JUMPDEST
0x3b5 PUSH2 0x3bd
0x3b8 DUP2
0x3b9 PUSH2 0x5e1
0x3bc JUMP
---
0x3b4: JUMPDEST 
0x3b5: V309 = 0x3bd
0x3b9: V310 = 0x5e1
0x3bc: JUMP 0x5e1
---
Entry stack: [V12, 0xa9, V67, S0]
Stack pops: 1
Stack additions: [S0, 0x3bd, S0]
Exit stack: [V12, 0xa9, V67, S0, 0x3bd, S0]

================================

Block 0x3bd
[0x3bd:0x3bd]
---
Predecessors: [0x5de, 0x796, 0xab0]
Successors: [0x3be]
---
0x3bd JUMPDEST
---
0x3bd: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x992}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x992}, S1, S0]

================================

Block 0x3be
[0x3be:0x3c1]
---
Predecessors: [0x3bd]
Successors: [0xa9, 0x992]
---
0x3be JUMPDEST
0x3bf POP
0x3c0 POP
0x3c1 JUMP
---
0x3be: JUMPDEST 
0x3c1: JUMP {0xa9, 0x992}
---
Entry stack: [V12, S3, {0xa9, 0x992}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S3]

================================

Block 0x3c2
[0x3c2:0x420]
---
Predecessors: [0x149, 0x485, 0x9ad]
Successors: [0x421, 0x425]
---
0x3c2 JUMPDEST
0x3c3 PUSH1 0x1
0x3c5 SLOAD
0x3c6 PUSH1 0x0
0x3c8 SWAP1
0x3c9 PUSH1 0x1
0x3cb PUSH1 0xa0
0x3cd PUSH1 0x2
0x3cf EXP
0x3d0 SUB
0x3d1 AND
0x3d2 PUSH4 0xf7888aec
0x3d7 DUP3
0x3d8 ADDRESS
0x3d9 DUP2
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd PUSH1 0x20
0x3df ADD
0x3e0 MSTORE
0x3e1 PUSH1 0x40
0x3e3 MLOAD
0x3e4 PUSH1 0xe0
0x3e6 PUSH1 0x2
0x3e8 EXP
0x3e9 PUSH4 0xffffffff
0x3ee DUP6
0x3ef AND
0x3f0 MUL
0x3f1 DUP2
0x3f2 MSTORE
0x3f3 PUSH1 0x1
0x3f5 PUSH1 0xa0
0x3f7 PUSH1 0x2
0x3f9 EXP
0x3fa SUB
0x3fb SWAP3
0x3fc DUP4
0x3fd AND
0x3fe PUSH1 0x4
0x400 DUP3
0x401 ADD
0x402 MSTORE
0x403 SWAP2
0x404 AND
0x405 PUSH1 0x24
0x407 DUP3
0x408 ADD
0x409 MSTORE
0x40a PUSH1 0x44
0x40c ADD
0x40d PUSH1 0x20
0x40f PUSH1 0x40
0x411 MLOAD
0x412 DUP1
0x413 DUP4
0x414 SUB
0x415 DUP2
0x416 PUSH1 0x0
0x418 DUP8
0x419 DUP1
0x41a EXTCODESIZE
0x41b ISZERO
0x41c ISZERO
0x41d PUSH2 0x425
0x420 JUMPI
---
0x3c2: JUMPDEST 
0x3c3: V311 = 0x1
0x3c5: V312 = S[0x1]
0x3c6: V313 = 0x0
0x3c9: V314 = 0x1
0x3cb: V315 = 0xa0
0x3cd: V316 = 0x2
0x3cf: V317 = EXP 0x2 0xa0
0x3d0: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d1: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x3d2: V320 = 0xf7888aec
0x3d8: V321 = ADDRESS
0x3da: V322 = 0x40
0x3dc: V323 = M[0x40]
0x3dd: V324 = 0x20
0x3df: V325 = ADD 0x20 V323
0x3e0: M[V325] = 0x0
0x3e1: V326 = 0x40
0x3e3: V327 = M[0x40]
0x3e4: V328 = 0xe0
0x3e6: V329 = 0x2
0x3e8: V330 = EXP 0x2 0xe0
0x3e9: V331 = 0xffffffff
0x3ef: V332 = AND 0xf7888aec 0xffffffff
0x3f0: V333 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x3f2: M[V327] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x3f3: V334 = 0x1
0x3f5: V335 = 0xa0
0x3f7: V336 = 0x2
0x3f9: V337 = EXP 0x2 0xa0
0x3fa: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fd: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3fe: V340 = 0x4
0x401: V341 = ADD V327 0x4
0x402: M[V341] = 0x0
0x404: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x405: V343 = 0x24
0x408: V344 = ADD V327 0x24
0x409: M[V344] = V342
0x40a: V345 = 0x44
0x40c: V346 = ADD 0x44 V327
0x40d: V347 = 0x20
0x40f: V348 = 0x40
0x411: V349 = M[0x40]
0x414: V350 = SUB V346 V349
0x416: V351 = 0x0
0x41a: V352 = EXTCODESIZE V319
0x41b: V353 = ISZERO V352
0x41c: V354 = ISZERO V353
0x41d: V355 = 0x425
0x420: JUMPI 0x425 V354
---
Entry stack: [V12, S4, S3, S2, S1, {0x151, 0x48d, 0x9b8}]
Stack pops: 0
Stack additions: [0x0, V319, 0xf7888aec, V346, 0x20, V349, V350, V349, 0x0, V319]
Exit stack: [V12, S4, S3, S2, S1, {0x151, 0x48d, 0x9b8}, 0x0, V319, 0xf7888aec, V346, 0x20, V349, V350, V349, 0x0, V319]

================================

Block 0x421
[0x421:0x424]
---
Predecessors: [0x3c2]
Successors: []
---
0x421 PUSH1 0x0
0x423 DUP1
0x424 REVERT
---
0x421: V356 = 0x0
0x424: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, {0x151, 0x48d, 0x9b8}, 0x0, V319, 0xf7888aec, V346, 0x20, V349, V350, V349, 0x0, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, {0x151, 0x48d, 0x9b8}, 0x0, V319, 0xf7888aec, V346, 0x20, V349, V350, V349, 0x0, V319]

================================

Block 0x425
[0x425:0x431]
---
Predecessors: [0x3c2]
Successors: [0x432, 0x436]
---
0x425 JUMPDEST
0x426 PUSH2 0x2c6
0x429 GAS
0x42a SUB
0x42b CALL
0x42c ISZERO
0x42d ISZERO
0x42e PUSH2 0x436
0x431 JUMPI
---
0x425: JUMPDEST 
0x426: V357 = 0x2c6
0x429: V358 = GAS
0x42a: V359 = SUB V358 0x2c6
0x42b: V360 = CALL V359 V319 0x0 V349 V350 V349 0x20
0x42c: V361 = ISZERO V360
0x42d: V362 = ISZERO V361
0x42e: V363 = 0x436
0x431: JUMPI 0x436 V362
---
Entry stack: [V12, S14, S13, S12, S11, {0x151, 0x48d, 0x9b8}, 0x0, V319, 0xf7888aec, V346, 0x20, V349, V350, V349, 0x0, V319]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, {0x151, 0x48d, 0x9b8}, 0x0, V319, 0xf7888aec, V346]

================================

Block 0x432
[0x432:0x435]
---
Predecessors: [0x425]
Successors: []
---
0x432 PUSH1 0x0
0x434 DUP1
0x435 REVERT
---
0x432: V364 = 0x0
0x435: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, {0x151, 0x48d, 0x9b8}, 0x0, S2, 0xf7888aec, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, {0x151, 0x48d, 0x9b8}, 0x0, S2, 0xf7888aec, S0]

================================

Block 0x436
[0x436:0x441]
---
Predecessors: [0x425]
Successors: [0x442]
---
0x436 JUMPDEST
0x437 POP
0x438 POP
0x439 POP
0x43a PUSH1 0x40
0x43c MLOAD
0x43d DUP1
0x43e MLOAD
0x43f SWAP2
0x440 POP
0x441 POP
---
0x436: JUMPDEST 
0x43a: V365 = 0x40
0x43c: V366 = M[0x40]
0x43e: V367 = M[V366]
---
Entry stack: [V12, S8, S7, S6, S5, {0x151, 0x48d, 0x9b8}, 0x0, S2, 0xf7888aec, S0]
Stack pops: 4
Stack additions: [V367]
Exit stack: [V12, S8, S7, S6, S5, {0x151, 0x48d, 0x9b8}, V367]

================================

Block 0x442
[0x442:0x444]
---
Predecessors: [0x436]
Successors: [0x151, 0x48d, 0x9b8]
---
0x442 JUMPDEST
0x443 SWAP1
0x444 JUMP
---
0x442: JUMPDEST 
0x444: JUMP {0x151, 0x48d, 0x9b8}
---
Entry stack: [V12, S5, S4, S3, S2, {0x151, 0x48d, 0x9b8}, V367]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S5, S4, S3, S2, V367]

================================

Block 0x445
[0x445:0x44f]
---
Predecessors: [0x16e]
Successors: [0x799]
---
0x445 JUMPDEST
0x446 PUSH1 0x0
0x448 PUSH2 0x450
0x44b DUP4
0x44c PUSH2 0x799
0x44f JUMP
---
0x445: JUMPDEST 
0x446: V368 = 0x0
0x448: V369 = 0x450
0x44c: V370 = 0x799
0x44f: JUMP 0x799
---
Entry stack: [V12, 0x1f2, V123, V143]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x450, S1]
Exit stack: [V12, 0x1f2, V123, V143, 0x0, 0x450, V123]

================================

Block 0x450
[0x450:0x456]
---
Predecessors: [0x584]
Successors: [0x457, 0x460]
---
0x450 JUMPDEST
0x451 DUP1
0x452 ISZERO
0x453 PUSH2 0x460
0x456 JUMPI
---
0x450: JUMPDEST 
0x452: V371 = ISZERO S0
0x453: V372 = 0x460
0x456: JUMPI 0x460 V371
---
Entry stack: [V12, 0x1f2, V123, V143, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1f2, V123, V143, S1, S0]

================================

Block 0x457
[0x457:0x45f]
---
Predecessors: [0x450]
Successors: [0x799]
---
0x457 POP
0x458 PUSH2 0x460
0x45b DUP3
0x45c PUSH2 0x799
0x45f JUMP
---
0x458: V373 = 0x460
0x45c: V374 = 0x799
0x45f: JUMP 0x799
---
Entry stack: [V12, 0x1f2, V123, V143, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x460, S2]
Exit stack: [V12, 0x1f2, V123, V143, S1, 0x460, V143]

================================

Block 0x460
[0x460:0x460]
---
Predecessors: [0x450, 0x584]
Successors: [0x461]
---
0x460 JUMPDEST
---
0x460: JUMPDEST 
---
Entry stack: [V12, 0x1f2, V123, V143, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S1, S0]

================================

Block 0x461
[0x461:0x463]
---
Predecessors: [0x460]
Successors: [0x464]
---
0x461 JUMPDEST
0x462 SWAP1
0x463 POP
---
0x461: JUMPDEST 
---
Entry stack: [V12, 0x1f2, V123, V143, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1f2, V123, V143, S0]

================================

Block 0x464
[0x464:0x469]
---
Predecessors: [0x461]
Successors: [0x1f2]
---
0x464 JUMPDEST
0x465 SWAP3
0x466 SWAP2
0x467 POP
0x468 POP
0x469 JUMP
---
0x464: JUMPDEST 
0x469: JUMP 0x1f2
---
Entry stack: [V12, 0x1f2, V123, V143, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x46a
[0x46a:0x483]
---
Predecessors: [0x211, 0x9b8]
Successors: [0x484, 0x485]
---
0x46a JUMPDEST
0x46b PUSH1 0x2
0x46d SLOAD
0x46e PUSH1 0x0
0x470 SWAP1
0x471 CALLER
0x472 PUSH1 0x1
0x474 PUSH1 0xa0
0x476 PUSH1 0x2
0x478 EXP
0x479 SUB
0x47a SWAP1
0x47b DUP2
0x47c AND
0x47d SWAP2
0x47e AND
0x47f EQ
0x480 PUSH2 0x485
0x483 JUMPI
---
0x46a: JUMPDEST 
0x46b: V375 = 0x2
0x46d: V376 = S[0x2]
0x46e: V377 = 0x0
0x471: V378 = CALLER
0x472: V379 = 0x1
0x474: V380 = 0xa0
0x476: V381 = 0x2
0x478: V382 = EXP 0x2 0xa0
0x479: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47c: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x47e: V385 = AND V376 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V386 = EQ V385 V384
0x480: V387 = 0x485
0x483: JUMPI 0x485 V386
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x484
[0x484:0x484]
---
Predecessors: [0x46a]
Successors: []
---
0x484 INVALID
---
0x484: INVALID 
---
Entry stack: [V12, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x485
[0x485:0x48c]
---
Predecessors: [0x46a]
Successors: [0x3c2]
---
0x485 JUMPDEST
0x486 PUSH2 0x48d
0x489 PUSH2 0x3c2
0x48c JUMP
---
0x485: JUMPDEST 
0x486: V388 = 0x48d
0x489: V389 = 0x3c2
0x48c: JUMP 0x3c2
---
Entry stack: [V12, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: [0x48d]
Exit stack: [V12, S5, S4, S3, S2, S1, 0x0, 0x48d]

================================

Block 0x48d
[0x48d:0x49a]
---
Predecessors: [0x442]
Successors: [0x49b, 0x49c]
---
0x48d JUMPDEST
0x48e SWAP1
0x48f POP
0x490 PUSH1 0x0
0x492 DUP3
0x493 DUP3
0x494 SUB
0x495 LT
0x496 ISZERO
0x497 PUSH2 0x49c
0x49a JUMPI
---
0x48d: JUMPDEST 
0x490: V390 = 0x0
0x494: V391 = SUB V367 S2
0x495: V392 = LT V391 0x0
0x496: V393 = ISZERO V392
0x497: V394 = 0x49c
0x49a: JUMPI 0x49c V393
---
Entry stack: [V12, S4, S3, S2, S1, V367]
Stack pops: 3
Stack additions: [S2, S0]
Exit stack: [V12, S4, S3, S2, V367]

================================

Block 0x49b
[0x49b:0x49b]
---
Predecessors: [0x48d]
Successors: []
---
0x49b INVALID
---
0x49b: INVALID 
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0x49c
[0x49c:0x4e0]
---
Predecessors: [0x48d]
Successors: [0x4e1, 0x4e5]
---
0x49c JUMPDEST
0x49d PUSH1 0x1
0x49f SLOAD
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0xa0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 SUB
0x4a8 AND
0x4a9 PUSH4 0x2e1a7d4d
0x4ae GAS
0x4af DUP5
0x4b0 PUSH1 0x40
0x4b2 MLOAD
0x4b3 PUSH1 0xe0
0x4b5 PUSH1 0x2
0x4b7 EXP
0x4b8 PUSH4 0xffffffff
0x4bd DUP6
0x4be AND
0x4bf MUL
0x4c0 DUP2
0x4c1 MSTORE
0x4c2 PUSH1 0x4
0x4c4 DUP2
0x4c5 ADD
0x4c6 SWAP2
0x4c7 SWAP1
0x4c8 SWAP2
0x4c9 MSTORE
0x4ca PUSH1 0x24
0x4cc ADD
0x4cd PUSH1 0x0
0x4cf PUSH1 0x40
0x4d1 MLOAD
0x4d2 DUP1
0x4d3 DUP4
0x4d4 SUB
0x4d5 DUP2
0x4d6 PUSH1 0x0
0x4d8 DUP9
0x4d9 DUP1
0x4da EXTCODESIZE
0x4db ISZERO
0x4dc ISZERO
0x4dd PUSH2 0x4e5
0x4e0 JUMPI
---
0x49c: JUMPDEST 
0x49d: V395 = 0x1
0x49f: V396 = S[0x1]
0x4a0: V397 = 0x1
0x4a2: V398 = 0xa0
0x4a4: V399 = 0x2
0x4a6: V400 = EXP 0x2 0xa0
0x4a7: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a8: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x4a9: V403 = 0x2e1a7d4d
0x4ae: V404 = GAS
0x4b0: V405 = 0x40
0x4b2: V406 = M[0x40]
0x4b3: V407 = 0xe0
0x4b5: V408 = 0x2
0x4b7: V409 = EXP 0x2 0xe0
0x4b8: V410 = 0xffffffff
0x4be: V411 = AND 0x2e1a7d4d 0xffffffff
0x4bf: V412 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x4c1: M[V406] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x4c2: V413 = 0x4
0x4c5: V414 = ADD V406 0x4
0x4c9: M[V414] = S1
0x4ca: V415 = 0x24
0x4cc: V416 = ADD 0x24 V406
0x4cd: V417 = 0x0
0x4cf: V418 = 0x40
0x4d1: V419 = M[0x40]
0x4d4: V420 = SUB V416 V419
0x4d6: V421 = 0x0
0x4da: V422 = EXTCODESIZE V402
0x4db: V423 = ISZERO V422
0x4dc: V424 = ISZERO V423
0x4dd: V425 = 0x4e5
0x4e0: JUMPI 0x4e5 V424
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V402, 0x2e1a7d4d, V404, V416, 0x0, V419, V420, V419, 0x0, V402]
Exit stack: [V12, S3, S2, S1, S0, V402, 0x2e1a7d4d, V404, V416, 0x0, V419, V420, V419, 0x0, V402]

================================

Block 0x4e1
[0x4e1:0x4e4]
---
Predecessors: [0x49c]
Successors: []
---
0x4e1 PUSH1 0x0
0x4e3 DUP1
0x4e4 REVERT
---
0x4e1: V426 = 0x0
0x4e4: REVERT 0x0 0x0
---
Entry stack: [V12, S13, {0xa9, 0x992}, S11, S10, V402, 0x2e1a7d4d, V404, V416, 0x0, V419, V420, V419, 0x0, V402]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, {0xa9, 0x992}, S11, S10, V402, 0x2e1a7d4d, V404, V416, 0x0, V419, V420, V419, 0x0, V402]

================================

Block 0x4e5
[0x4e5:0x4ed]
---
Predecessors: [0x49c]
Successors: [0x4ee, 0x4f2]
---
0x4e5 JUMPDEST
0x4e6 DUP8
0x4e7 CALL
0x4e8 ISZERO
0x4e9 ISZERO
0x4ea PUSH2 0x4f2
0x4ed JUMPI
---
0x4e5: JUMPDEST 
0x4e7: V427 = CALL V404 V402 0x0 V419 V420 V419 0x0
0x4e8: V428 = ISZERO V427
0x4e9: V429 = ISZERO V428
0x4ea: V430 = 0x4f2
0x4ed: JUMPI 0x4f2 V429
---
Entry stack: [V12, S13, {0xa9, 0x992}, S11, S10, V402, 0x2e1a7d4d, V404, V416, 0x0, V419, V420, V419, 0x0, V402]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, S13, {0xa9, 0x992}, S11, S10, V402, 0x2e1a7d4d, V404, V416]

================================

Block 0x4ee
[0x4ee:0x4f1]
---
Predecessors: [0x4e5]
Successors: []
---
0x4ee PUSH1 0x0
0x4f0 DUP1
0x4f1 REVERT
---
0x4ee: V431 = 0x0
0x4f1: REVERT 0x0 0x0
---
Entry stack: [V12, S7, {0xa9, 0x992}, S5, S4, S3, 0x2e1a7d4d, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, {0xa9, 0x992}, S5, S4, S3, 0x2e1a7d4d, S1, S0]

================================

Block 0x4f2
[0x4f2:0x4fe]
---
Predecessors: [0x4e5]
Successors: [0xb30]
---
0x4f2 JUMPDEST
0x4f3 POP
0x4f4 POP
0x4f5 POP
0x4f6 POP
0x4f7 PUSH2 0x3bd
0x4fa DUP3
0x4fb PUSH2 0xb30
0x4fe JUMP
---
0x4f2: JUMPDEST 
0x4f7: V432 = 0x3bd
0x4fb: V433 = 0xb30
0x4fe: JUMP 0xb30
---
Entry stack: [V12, S7, {0xa9, 0x992}, S5, S4, S3, 0x2e1a7d4d, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, 0x3bd, S5]
Exit stack: [V12, S7, {0xa9, 0x992}, S5, S4, 0x3bd, S5]

================================

Block 0x4ff
[0x4ff:0x4ff]
---
Predecessors: []
Successors: [0x500]
---
0x4ff JUMPDEST
---
0x4ff: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x500
[0x500:0x503]
---
Predecessors: [0x4ff]
Successors: []
Has unresolved jump.
---
0x500 JUMPDEST
0x501 POP
0x502 POP
0x503 JUMP
---
0x500: JUMPDEST 
0x503: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x504
[0x504:0x562]
---
Predecessors: [0x229]
Successors: [0x563, 0x567]
---
0x504 JUMPDEST
0x505 PUSH1 0x1
0x507 SLOAD
0x508 PUSH1 0x0
0x50a SWAP1
0x50b PUSH1 0x1
0x50d PUSH1 0xa0
0x50f PUSH1 0x2
0x511 EXP
0x512 SUB
0x513 AND
0x514 PUSH4 0xf7888aec
0x519 DUP4
0x51a ADDRESS
0x51b DUP5
0x51c PUSH1 0x40
0x51e MLOAD
0x51f PUSH1 0x20
0x521 ADD
0x522 MSTORE
0x523 PUSH1 0x40
0x525 MLOAD
0x526 PUSH1 0xe0
0x528 PUSH1 0x2
0x52a EXP
0x52b PUSH4 0xffffffff
0x530 DUP6
0x531 AND
0x532 MUL
0x533 DUP2
0x534 MSTORE
0x535 PUSH1 0x1
0x537 PUSH1 0xa0
0x539 PUSH1 0x2
0x53b EXP
0x53c SUB
0x53d SWAP3
0x53e DUP4
0x53f AND
0x540 PUSH1 0x4
0x542 DUP3
0x543 ADD
0x544 MSTORE
0x545 SWAP2
0x546 AND
0x547 PUSH1 0x24
0x549 DUP3
0x54a ADD
0x54b MSTORE
0x54c PUSH1 0x44
0x54e ADD
0x54f PUSH1 0x20
0x551 PUSH1 0x40
0x553 MLOAD
0x554 DUP1
0x555 DUP4
0x556 SUB
0x557 DUP2
0x558 PUSH1 0x0
0x55a DUP8
0x55b DUP1
0x55c EXTCODESIZE
0x55d ISZERO
0x55e ISZERO
0x55f PUSH2 0x567
0x562 JUMPI
---
0x504: JUMPDEST 
0x505: V434 = 0x1
0x507: V435 = S[0x1]
0x508: V436 = 0x0
0x50b: V437 = 0x1
0x50d: V438 = 0xa0
0x50f: V439 = 0x2
0x511: V440 = EXP 0x2 0xa0
0x512: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x513: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x514: V443 = 0xf7888aec
0x51a: V444 = ADDRESS
0x51c: V445 = 0x40
0x51e: V446 = M[0x40]
0x51f: V447 = 0x20
0x521: V448 = ADD 0x20 V446
0x522: M[V448] = 0x0
0x523: V449 = 0x40
0x525: V450 = M[0x40]
0x526: V451 = 0xe0
0x528: V452 = 0x2
0x52a: V453 = EXP 0x2 0xe0
0x52b: V454 = 0xffffffff
0x531: V455 = AND 0xf7888aec 0xffffffff
0x532: V456 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x534: M[V450] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x535: V457 = 0x1
0x537: V458 = 0xa0
0x539: V459 = 0x2
0x53b: V460 = EXP 0x2 0xa0
0x53c: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53f: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x540: V463 = 0x4
0x543: V464 = ADD V450 0x4
0x544: M[V464] = V462
0x546: V465 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x547: V466 = 0x24
0x54a: V467 = ADD V450 0x24
0x54b: M[V467] = V465
0x54c: V468 = 0x44
0x54e: V469 = ADD 0x44 V450
0x54f: V470 = 0x20
0x551: V471 = 0x40
0x553: V472 = M[0x40]
0x556: V473 = SUB V469 V472
0x558: V474 = 0x0
0x55c: V475 = EXTCODESIZE V442
0x55d: V476 = ISZERO V475
0x55e: V477 = ISZERO V476
0x55f: V478 = 0x567
0x562: JUMPI 0x567 V477
---
Entry stack: [V12, 0x151, V180]
Stack pops: 1
Stack additions: [S0, 0x0, V442, 0xf7888aec, V469, 0x20, V472, V473, V472, 0x0, V442]
Exit stack: [V12, 0x151, V180, 0x0, V442, 0xf7888aec, V469, 0x20, V472, V473, V472, 0x0, V442]

================================

Block 0x563
[0x563:0x566]
---
Predecessors: [0x504]
Successors: []
---
0x563 PUSH1 0x0
0x565 DUP1
0x566 REVERT
---
0x563: V479 = 0x0
0x566: REVERT 0x0 0x0
---
Entry stack: [V12, 0x151, V180, 0x0, V442, 0xf7888aec, V469, 0x20, V472, V473, V472, 0x0, V442]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x151, V180, 0x0, V442, 0xf7888aec, V469, 0x20, V472, V473, V472, 0x0, V442]

================================

Block 0x567
[0x567:0x573]
---
Predecessors: [0x504, 0x89f]
Successors: [0x574, 0x578]
---
0x567 JUMPDEST
0x568 PUSH2 0x2c6
0x56b GAS
0x56c SUB
0x56d CALL
0x56e ISZERO
0x56f ISZERO
0x570 PUSH2 0x578
0x573 JUMPI
---
0x567: JUMPDEST 
0x568: V480 = 0x2c6
0x56b: V481 = GAS
0x56c: V482 = SUB V481 0x2c6
0x56d: V483 = CALL V482 S0 0x0 S2 S3 S4 0x20
0x56e: V484 = ISZERO V483
0x56f: V485 = ISZERO V484
0x570: V486 = 0x578
0x573: JUMPI 0x578 V485
---
Entry stack: [V12, 0x1f2, V123, V143, S12, {0x151, 0x1f2, 0x450, 0x460}, S10, 0x0, S8, {0x6c86888b, 0xf7888aec}, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S12, {0x151, 0x1f2, 0x450, 0x460}, S10, 0x0, S8, {0x6c86888b, 0xf7888aec}, S6]

================================

Block 0x574
[0x574:0x577]
---
Predecessors: [0x567]
Successors: []
---
0x574 PUSH1 0x0
0x576 DUP1
0x577 REVERT
---
0x574: V487 = 0x0
0x577: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2, V123, V143, S6, {0x151, 0x1f2, 0x450, 0x460}, S4, 0x0, S2, {0x6c86888b, 0xf7888aec}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S6, {0x151, 0x1f2, 0x450, 0x460}, S4, 0x0, S2, {0x6c86888b, 0xf7888aec}, S0]

================================

Block 0x578
[0x578:0x583]
---
Predecessors: [0x567, 0x945]
Successors: [0x584]
---
0x578 JUMPDEST
0x579 POP
0x57a POP
0x57b POP
0x57c PUSH1 0x40
0x57e MLOAD
0x57f DUP1
0x580 MLOAD
0x581 SWAP2
0x582 POP
0x583 POP
---
0x578: JUMPDEST 
0x57c: V488 = 0x40
0x57e: V489 = M[0x40]
0x580: V490 = M[V489]
---
Entry stack: [V12, 0x1f2, V123, V143, S6, {0x151, 0x1f2, 0x450, 0x460}, S4, 0x0, S2, {0x6c86888b, 0xf7888aec}, S0]
Stack pops: 4
Stack additions: [V490]
Exit stack: [V12, 0x1f2, V123, V143, S6, {0x151, 0x1f2, 0x450, 0x460}, S4, V490]

================================

Block 0x584
[0x584:0x588]
---
Predecessors: [0x578]
Successors: [0x151, 0x1f2, 0x450, 0x460]
---
0x584 JUMPDEST
0x585 SWAP2
0x586 SWAP1
0x587 POP
0x588 JUMP
---
0x584: JUMPDEST 
0x588: JUMP {0x151, 0x1f2, 0x450, 0x460}
---
Entry stack: [V12, 0x1f2, V123, V143, S3, {0x151, 0x1f2, 0x450, 0x460}, S1, V490]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x1f2, V123, V143, S3, V490]

================================

Block 0x589
[0x589:0x59f]
---
Predecessors: [0x25a]
Successors: [0x5a0, 0x5a1]
---
0x589 JUMPDEST
0x58a PUSH1 0x2
0x58c SLOAD
0x58d CALLER
0x58e PUSH1 0x1
0x590 PUSH1 0xa0
0x592 PUSH1 0x2
0x594 EXP
0x595 SUB
0x596 SWAP1
0x597 DUP2
0x598 AND
0x599 SWAP2
0x59a AND
0x59b EQ
0x59c PUSH2 0x5a1
0x59f JUMPI
---
0x589: JUMPDEST 
0x58a: V491 = 0x2
0x58c: V492 = S[0x2]
0x58d: V493 = CALLER
0x58e: V494 = 0x1
0x590: V495 = 0xa0
0x592: V496 = 0x2
0x594: V497 = EXP 0x2 0xa0
0x595: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x598: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x59a: V500 = AND V492 0xffffffffffffffffffffffffffffffffffffffff
0x59b: V501 = EQ V500 V499
0x59c: V502 = 0x5a1
0x59f: JUMPI 0x5a1 V501
---
Entry stack: [V12, 0xa9, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V201]

================================

Block 0x5a0
[0x5a0:0x5a0]
---
Predecessors: [0x589]
Successors: []
---
0x5a0 INVALID
---
0x5a0: INVALID 
---
Entry stack: [V12, 0xa9, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V201]

================================

Block 0x5a1
[0x5a1:0x5dd]
---
Predecessors: [0x589]
Successors: [0x5de]
---
0x5a1 JUMPDEST
0x5a2 PUSH1 0x0
0x5a4 DUP1
0x5a5 SLOAD
0x5a6 PUSH1 0x1
0x5a8 PUSH1 0xa0
0x5aa PUSH1 0x2
0x5ac EXP
0x5ad SUB
0x5ae DUP1
0x5af DUP5
0x5b0 AND
0x5b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c6 NOT
0x5c7 SWAP3
0x5c8 DUP4
0x5c9 AND
0x5ca OR
0x5cb SWAP3
0x5cc DUP4
0x5cd SWAP1
0x5ce SSTORE
0x5cf PUSH1 0x1
0x5d1 DUP1
0x5d2 SLOAD
0x5d3 SWAP1
0x5d4 SWAP3
0x5d5 AND
0x5d6 SWAP3
0x5d7 AND
0x5d8 SWAP2
0x5d9 SWAP1
0x5da SWAP2
0x5db OR
0x5dc SWAP1
0x5dd SSTORE
---
0x5a1: JUMPDEST 
0x5a2: V503 = 0x0
0x5a5: V504 = S[0x0]
0x5a6: V505 = 0x1
0x5a8: V506 = 0xa0
0x5aa: V507 = 0x2
0x5ac: V508 = EXP 0x2 0xa0
0x5ad: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b0: V510 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x5b1: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c6: V512 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5c9: V513 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V504
0x5ca: V514 = OR V513 V510
0x5ce: S[0x0] = V514
0x5cf: V515 = 0x1
0x5d2: V516 = S[0x1]
0x5d5: V517 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V516
0x5d7: V518 = AND V514 0xffffffffffffffffffffffffffffffffffffffff
0x5db: V519 = OR V518 V517
0x5dd: S[0x1] = V519
---
Entry stack: [V12, 0xa9, V201]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xa9, V201]

================================

Block 0x5de
[0x5de:0x5e0]
---
Predecessors: [0x5a1, 0xb30]
Successors: [0xa9, 0x3bd, 0x992]
---
0x5de JUMPDEST
0x5df POP
0x5e0 JUMP
---
0x5de: JUMPDEST 
0x5e0: JUMP {0xa9, 0x3bd, 0x992}
---
Entry stack: [V12, S5, {0xa9, 0x992}, S3, S2, {0xa9, 0x3bd, 0x992}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S5, {0xa9, 0x992}, S3, S2]

================================

Block 0x5e1
[0x5e1:0x5fe]
---
Predecessors: [0x27b, 0x3ab, 0x3b4]
Successors: [0x5ff, 0x600]
---
0x5e1 JUMPDEST
0x5e2 PUSH1 0x1
0x5e4 SLOAD
0x5e5 PUSH1 0x1
0x5e7 PUSH1 0xa0
0x5e9 PUSH1 0x2
0x5eb EXP
0x5ec SUB
0x5ed AND
0x5ee PUSH4 0xa19b14a
0x5f3 GAS
0x5f4 DUP4
0x5f5 PUSH1 0x0
0x5f7 DUP2
0x5f8 MLOAD
0x5f9 DUP2
0x5fa LT
0x5fb PUSH2 0x600
0x5fe JUMPI
---
0x5e1: JUMPDEST 
0x5e2: V520 = 0x1
0x5e4: V521 = S[0x1]
0x5e5: V522 = 0x1
0x5e7: V523 = 0xa0
0x5e9: V524 = 0x2
0x5eb: V525 = EXP 0x2 0xa0
0x5ec: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ed: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x5ee: V528 = 0xa19b14a
0x5f3: V529 = GAS
0x5f5: V530 = 0x0
0x5f8: V531 = M[S0]
0x5fa: V532 = LT 0x0 V531
0x5fb: V533 = 0x600
0x5fe: JUMPI 0x600 V532
---
Entry stack: [V12, 0xa9, V67, S2, {0xa9, 0x3b4, 0x3bd}, S0]
Stack pops: 1
Stack additions: [S0, V527, 0xa19b14a, V529, S0, 0x0]
Exit stack: [V12, 0xa9, V67, S2, {0xa9, 0x3b4, 0x3bd}, S0, V527, 0xa19b14a, V529, S0, 0x0]

================================

Block 0x5ff
[0x5ff:0x5ff]
---
Predecessors: [0x5e1]
Successors: []
---
0x5ff INVALID
---
0x5ff: INVALID 
---
Entry stack: [V12, 0xa9, V67, S7, {0xa9, 0x3b4, 0x3bd}, S5, V527, 0xa19b14a, V529, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S7, {0xa9, 0x3b4, 0x3bd}, S5, V527, 0xa19b14a, V529, S1, 0x0]

================================

Block 0x600
[0x600:0x615]
---
Predecessors: [0x5e1]
Successors: [0x616, 0x617]
---
0x600 JUMPDEST
0x601 SWAP1
0x602 PUSH1 0x20
0x604 ADD
0x605 SWAP1
0x606 PUSH1 0x20
0x608 MUL
0x609 ADD
0x60a MLOAD
0x60b DUP5
0x60c PUSH1 0x1
0x60e DUP2
0x60f MLOAD
0x610 DUP2
0x611 LT
0x612 PUSH2 0x617
0x615 JUMPI
---
0x600: JUMPDEST 
0x602: V534 = 0x20
0x604: V535 = ADD 0x20 S1
0x606: V536 = 0x20
0x608: V537 = MUL 0x20 0x0
0x609: V538 = ADD 0x0 V535
0x60a: V539 = M[V538]
0x60c: V540 = 0x1
0x60f: V541 = M[S5]
0x611: V542 = LT 0x1 V541
0x612: V543 = 0x617
0x615: JUMPI 0x617 V542
---
Entry stack: [V12, 0xa9, V67, S7, {0xa9, 0x3b4, 0x3bd}, S5, V527, 0xa19b14a, V529, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V539, S5, 0x1]
Exit stack: [V12, 0xa9, V67, S7, {0xa9, 0x3b4, 0x3bd}, S5, V527, 0xa19b14a, V529, V539, S5, 0x1]

================================

Block 0x616
[0x616:0x616]
---
Predecessors: [0x600]
Successors: []
---
0x616 INVALID
---
0x616: INVALID 
---
Entry stack: [V12, 0xa9, V67, S8, {0xa9, 0x3b4, 0x3bd}, S6, S5, 0xa19b14a, S3, V539, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S8, {0xa9, 0x3b4, 0x3bd}, S6, S5, 0xa19b14a, S3, V539, S1, 0x1]

================================

Block 0x617
[0x617:0x62c]
---
Predecessors: [0x600]
Successors: [0x62d, 0x62e]
---
0x617 JUMPDEST
0x618 SWAP1
0x619 PUSH1 0x20
0x61b ADD
0x61c SWAP1
0x61d PUSH1 0x20
0x61f MUL
0x620 ADD
0x621 MLOAD
0x622 DUP6
0x623 PUSH1 0x2
0x625 DUP2
0x626 MLOAD
0x627 DUP2
0x628 LT
0x629 PUSH2 0x62e
0x62c JUMPI
---
0x617: JUMPDEST 
0x619: V544 = 0x20
0x61b: V545 = ADD 0x20 S1
0x61d: V546 = 0x20
0x61f: V547 = MUL 0x20 0x1
0x620: V548 = ADD 0x20 V545
0x621: V549 = M[V548]
0x623: V550 = 0x2
0x626: V551 = M[S6]
0x628: V552 = LT 0x2 V551
0x629: V553 = 0x62e
0x62c: JUMPI 0x62e V552
---
Entry stack: [V12, 0xa9, V67, S8, {0xa9, 0x3b4, 0x3bd}, S6, S5, 0xa19b14a, S3, V539, S1, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V549, S6, 0x2]
Exit stack: [V12, 0xa9, V67, S8, {0xa9, 0x3b4, 0x3bd}, S6, S5, 0xa19b14a, S3, V539, V549, S6, 0x2]

================================

Block 0x62d
[0x62d:0x62d]
---
Predecessors: [0x617]
Successors: []
---
0x62d INVALID
---
0x62d: INVALID 
---
Entry stack: [V12, 0xa9, V67, S9, {0xa9, 0x3b4, 0x3bd}, S7, S6, 0xa19b14a, S4, S3, V549, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S9, {0xa9, 0x3b4, 0x3bd}, S7, S6, 0xa19b14a, S4, S3, V549, S1, 0x2]

================================

Block 0x62e
[0x62e:0x643]
---
Predecessors: [0x617]
Successors: [0x644, 0x645]
---
0x62e JUMPDEST
0x62f SWAP1
0x630 PUSH1 0x20
0x632 ADD
0x633 SWAP1
0x634 PUSH1 0x20
0x636 MUL
0x637 ADD
0x638 MLOAD
0x639 DUP7
0x63a PUSH1 0x3
0x63c DUP2
0x63d MLOAD
0x63e DUP2
0x63f LT
0x640 PUSH2 0x645
0x643 JUMPI
---
0x62e: JUMPDEST 
0x630: V554 = 0x20
0x632: V555 = ADD 0x20 S1
0x634: V556 = 0x20
0x636: V557 = MUL 0x20 0x2
0x637: V558 = ADD 0x40 V555
0x638: V559 = M[V558]
0x63a: V560 = 0x3
0x63d: V561 = M[S7]
0x63f: V562 = LT 0x3 V561
0x640: V563 = 0x645
0x643: JUMPI 0x645 V562
---
Entry stack: [V12, 0xa9, V67, S9, {0xa9, 0x3b4, 0x3bd}, S7, S6, 0xa19b14a, S4, S3, V549, S1, 0x2]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V559, S7, 0x3]
Exit stack: [V12, 0xa9, V67, S9, {0xa9, 0x3b4, 0x3bd}, S7, S6, 0xa19b14a, S4, S3, V549, V559, S7, 0x3]

================================

Block 0x644
[0x644:0x644]
---
Predecessors: [0x62e]
Successors: []
---
0x644 INVALID
---
0x644: INVALID 
---
Entry stack: [V12, 0xa9, V67, S10, {0xa9, 0x3b4, 0x3bd}, S8, S7, 0xa19b14a, S5, S4, S3, V559, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S10, {0xa9, 0x3b4, 0x3bd}, S8, S7, 0xa19b14a, S5, S4, S3, V559, S1, 0x3]

================================

Block 0x645
[0x645:0x65a]
---
Predecessors: [0x62e]
Successors: [0x65b, 0x65c]
---
0x645 JUMPDEST
0x646 SWAP1
0x647 PUSH1 0x20
0x649 ADD
0x64a SWAP1
0x64b PUSH1 0x20
0x64d MUL
0x64e ADD
0x64f MLOAD
0x650 DUP8
0x651 PUSH1 0x4
0x653 DUP2
0x654 MLOAD
0x655 DUP2
0x656 LT
0x657 PUSH2 0x65c
0x65a JUMPI
---
0x645: JUMPDEST 
0x647: V564 = 0x20
0x649: V565 = ADD 0x20 S1
0x64b: V566 = 0x20
0x64d: V567 = MUL 0x20 0x3
0x64e: V568 = ADD 0x60 V565
0x64f: V569 = M[V568]
0x651: V570 = 0x4
0x654: V571 = M[S8]
0x656: V572 = LT 0x4 V571
0x657: V573 = 0x65c
0x65a: JUMPI 0x65c V572
---
Entry stack: [V12, 0xa9, V67, S10, {0xa9, 0x3b4, 0x3bd}, S8, S7, 0xa19b14a, S5, S4, S3, V559, S1, 0x3]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V569, S8, 0x4]
Exit stack: [V12, 0xa9, V67, S10, {0xa9, 0x3b4, 0x3bd}, S8, S7, 0xa19b14a, S5, S4, S3, V559, V569, S8, 0x4]

================================

Block 0x65b
[0x65b:0x65b]
---
Predecessors: [0x645]
Successors: []
---
0x65b INVALID
---
0x65b: INVALID 
---
Entry stack: [V12, 0xa9, V67, S11, {0xa9, 0x3b4, 0x3bd}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V569, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S11, {0xa9, 0x3b4, 0x3bd}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V569, S1, 0x4]

================================

Block 0x65c
[0x65c:0x671]
---
Predecessors: [0x645]
Successors: [0x672, 0x673]
---
0x65c JUMPDEST
0x65d SWAP1
0x65e PUSH1 0x20
0x660 ADD
0x661 SWAP1
0x662 PUSH1 0x20
0x664 MUL
0x665 ADD
0x666 MLOAD
0x667 DUP9
0x668 PUSH1 0x5
0x66a DUP2
0x66b MLOAD
0x66c DUP2
0x66d LT
0x66e PUSH2 0x673
0x671 JUMPI
---
0x65c: JUMPDEST 
0x65e: V574 = 0x20
0x660: V575 = ADD 0x20 S1
0x662: V576 = 0x20
0x664: V577 = MUL 0x20 0x4
0x665: V578 = ADD 0x80 V575
0x666: V579 = M[V578]
0x668: V580 = 0x5
0x66b: V581 = M[S9]
0x66d: V582 = LT 0x5 V581
0x66e: V583 = 0x673
0x671: JUMPI 0x673 V582
---
Entry stack: [V12, 0xa9, V67, S11, {0xa9, 0x3b4, 0x3bd}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V569, S1, 0x4]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V579, S9, 0x5]
Exit stack: [V12, 0xa9, V67, S11, {0xa9, 0x3b4, 0x3bd}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V569, V579, S9, 0x5]

================================

Block 0x672
[0x672:0x672]
---
Predecessors: [0x65c]
Successors: []
---
0x672 INVALID
---
0x672: INVALID 
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b4, 0x3bd}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V579, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b4, 0x3bd}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V579, S1, 0x5]

================================

Block 0x673
[0x673:0x688]
---
Predecessors: [0x65c]
Successors: [0x689, 0x68a]
---
0x673 JUMPDEST
0x674 SWAP1
0x675 PUSH1 0x20
0x677 ADD
0x678 SWAP1
0x679 PUSH1 0x20
0x67b MUL
0x67c ADD
0x67d MLOAD
0x67e DUP10
0x67f PUSH1 0x6
0x681 DUP2
0x682 MLOAD
0x683 DUP2
0x684 LT
0x685 PUSH2 0x68a
0x688 JUMPI
---
0x673: JUMPDEST 
0x675: V584 = 0x20
0x677: V585 = ADD 0x20 S1
0x679: V586 = 0x20
0x67b: V587 = MUL 0x20 0x5
0x67c: V588 = ADD 0xa0 V585
0x67d: V589 = M[V588]
0x67f: V590 = 0x6
0x682: V591 = M[S10]
0x684: V592 = LT 0x6 V591
0x685: V593 = 0x68a
0x688: JUMPI 0x68a V592
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b4, 0x3bd}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V579, S1, 0x5]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V589, S10, 0x6]
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b4, 0x3bd}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V579, V589, S10, 0x6]

================================

Block 0x689
[0x689:0x689]
---
Predecessors: [0x673]
Successors: []
---
0x689 INVALID
---
0x689: INVALID 
---
Entry stack: [V12, 0xa9, V67, S13, {0xa9, 0x3b4, 0x3bd}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V589, S1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S13, {0xa9, 0x3b4, 0x3bd}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V589, S1, 0x6]

================================

Block 0x68a
[0x68a:0x69f]
---
Predecessors: [0x673]
Successors: [0x6a0, 0x6a1]
---
0x68a JUMPDEST
0x68b SWAP1
0x68c PUSH1 0x20
0x68e ADD
0x68f SWAP1
0x690 PUSH1 0x20
0x692 MUL
0x693 ADD
0x694 MLOAD
0x695 DUP11
0x696 PUSH1 0x7
0x698 DUP2
0x699 MLOAD
0x69a DUP2
0x69b LT
0x69c PUSH2 0x6a1
0x69f JUMPI
---
0x68a: JUMPDEST 
0x68c: V594 = 0x20
0x68e: V595 = ADD 0x20 S1
0x690: V596 = 0x20
0x692: V597 = MUL 0x20 0x6
0x693: V598 = ADD 0xc0 V595
0x694: V599 = M[V598]
0x696: V600 = 0x7
0x699: V601 = M[S11]
0x69b: V602 = LT 0x7 V601
0x69c: V603 = 0x6a1
0x69f: JUMPI 0x6a1 V602
---
Entry stack: [V12, 0xa9, V67, S13, {0xa9, 0x3b4, 0x3bd}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V589, S1, 0x6]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V599, S11, 0x7]
Exit stack: [V12, 0xa9, V67, S13, {0xa9, 0x3b4, 0x3bd}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V589, V599, S11, 0x7]

================================

Block 0x6a0
[0x6a0:0x6a0]
---
Predecessors: [0x68a]
Successors: []
---
0x6a0 INVALID
---
0x6a0: INVALID 
---
Entry stack: [V12, 0xa9, V67, S14, {0xa9, 0x3b4, 0x3bd}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V599, S1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S14, {0xa9, 0x3b4, 0x3bd}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V599, S1, 0x7]

================================

Block 0x6a1
[0x6a1:0x6b6]
---
Predecessors: [0x68a]
Successors: [0x6b7, 0x6b8]
---
0x6a1 JUMPDEST
0x6a2 SWAP1
0x6a3 PUSH1 0x20
0x6a5 ADD
0x6a6 SWAP1
0x6a7 PUSH1 0x20
0x6a9 MUL
0x6aa ADD
0x6ab MLOAD
0x6ac DUP12
0x6ad PUSH1 0x8
0x6af DUP2
0x6b0 MLOAD
0x6b1 DUP2
0x6b2 LT
0x6b3 PUSH2 0x6b8
0x6b6 JUMPI
---
0x6a1: JUMPDEST 
0x6a3: V604 = 0x20
0x6a5: V605 = ADD 0x20 S1
0x6a7: V606 = 0x20
0x6a9: V607 = MUL 0x20 0x7
0x6aa: V608 = ADD 0xe0 V605
0x6ab: V609 = M[V608]
0x6ad: V610 = 0x8
0x6b0: V611 = M[S12]
0x6b2: V612 = LT 0x8 V611
0x6b3: V613 = 0x6b8
0x6b6: JUMPI 0x6b8 V612
---
Entry stack: [V12, 0xa9, V67, S14, {0xa9, 0x3b4, 0x3bd}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V599, S1, 0x7]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V609, S12, 0x8]
Exit stack: [V12, 0xa9, V67, S14, {0xa9, 0x3b4, 0x3bd}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V599, V609, S12, 0x8]

================================

Block 0x6b7
[0x6b7:0x6b7]
---
Predecessors: [0x6a1]
Successors: []
---
0x6b7 INVALID
---
0x6b7: INVALID 
---
Entry stack: [V12, 0xa9, V67, S15, {0xa9, 0x3b4, 0x3bd}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V609, S1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S15, {0xa9, 0x3b4, 0x3bd}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V609, S1, 0x8]

================================

Block 0x6b8
[0x6b8:0x6cd]
---
Predecessors: [0x6a1]
Successors: [0x6ce, 0x6cf]
---
0x6b8 JUMPDEST
0x6b9 SWAP1
0x6ba PUSH1 0x20
0x6bc ADD
0x6bd SWAP1
0x6be PUSH1 0x20
0x6c0 MUL
0x6c1 ADD
0x6c2 MLOAD
0x6c3 DUP13
0x6c4 PUSH1 0x9
0x6c6 DUP2
0x6c7 MLOAD
0x6c8 DUP2
0x6c9 LT
0x6ca PUSH2 0x6cf
0x6cd JUMPI
---
0x6b8: JUMPDEST 
0x6ba: V614 = 0x20
0x6bc: V615 = ADD 0x20 S1
0x6be: V616 = 0x20
0x6c0: V617 = MUL 0x20 0x8
0x6c1: V618 = ADD 0x100 V615
0x6c2: V619 = M[V618]
0x6c4: V620 = 0x9
0x6c7: V621 = M[S13]
0x6c9: V622 = LT 0x9 V621
0x6ca: V623 = 0x6cf
0x6cd: JUMPI 0x6cf V622
---
Entry stack: [V12, 0xa9, V67, S15, {0xa9, 0x3b4, 0x3bd}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V609, S1, 0x8]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V619, S13, 0x9]
Exit stack: [V12, 0xa9, V67, S15, {0xa9, 0x3b4, 0x3bd}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V609, V619, S13, 0x9]

================================

Block 0x6ce
[0x6ce:0x6ce]
---
Predecessors: [0x6b8]
Successors: []
---
0x6ce INVALID
---
0x6ce: INVALID 
---
Entry stack: [V12, 0xa9, V67, S16, {0xa9, 0x3b4, 0x3bd}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V619, S1, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S16, {0xa9, 0x3b4, 0x3bd}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V619, S1, 0x9]

================================

Block 0x6cf
[0x6cf:0x6e4]
---
Predecessors: [0x6b8]
Successors: [0x6e5, 0x6e6]
---
0x6cf JUMPDEST
0x6d0 SWAP1
0x6d1 PUSH1 0x20
0x6d3 ADD
0x6d4 SWAP1
0x6d5 PUSH1 0x20
0x6d7 MUL
0x6d8 ADD
0x6d9 MLOAD
0x6da DUP14
0x6db PUSH1 0xa
0x6dd DUP2
0x6de MLOAD
0x6df DUP2
0x6e0 LT
0x6e1 PUSH2 0x6e6
0x6e4 JUMPI
---
0x6cf: JUMPDEST 
0x6d1: V624 = 0x20
0x6d3: V625 = ADD 0x20 S1
0x6d5: V626 = 0x20
0x6d7: V627 = MUL 0x20 0x9
0x6d8: V628 = ADD 0x120 V625
0x6d9: V629 = M[V628]
0x6db: V630 = 0xa
0x6de: V631 = M[S14]
0x6e0: V632 = LT 0xa V631
0x6e1: V633 = 0x6e6
0x6e4: JUMPI 0x6e6 V632
---
Entry stack: [V12, 0xa9, V67, S16, {0xa9, 0x3b4, 0x3bd}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V619, S1, 0x9]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V629, S14, 0xa]
Exit stack: [V12, 0xa9, V67, S16, {0xa9, 0x3b4, 0x3bd}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V619, V629, S14, 0xa]

================================

Block 0x6e5
[0x6e5:0x6e5]
---
Predecessors: [0x6cf]
Successors: []
---
0x6e5 INVALID
---
0x6e5: INVALID 
---
Entry stack: [V12, 0xa9, V67, S17, {0xa9, 0x3b4, 0x3bd}, S15, S14, 0xa19b14a, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V629, S1, 0xa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S17, {0xa9, 0x3b4, 0x3bd}, S15, S14, 0xa19b14a, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V629, S1, 0xa]

================================

Block 0x6e6
[0x6e6:0x77f]
---
Predecessors: [0x6cf]
Successors: [0x780, 0x784]
---
0x6e6 JUMPDEST
0x6e7 SWAP1
0x6e8 PUSH1 0x20
0x6ea ADD
0x6eb SWAP1
0x6ec PUSH1 0x20
0x6ee MUL
0x6ef ADD
0x6f0 MLOAD
0x6f1 PUSH1 0x40
0x6f3 MLOAD
0x6f4 PUSH1 0xe0
0x6f6 PUSH1 0x2
0x6f8 EXP
0x6f9 PUSH4 0xffffffff
0x6fe DUP16
0x6ff AND
0x700 MUL
0x701 DUP2
0x702 MSTORE
0x703 PUSH1 0x1
0x705 PUSH1 0xa0
0x707 PUSH1 0x2
0x709 EXP
0x70a SUB
0x70b SWAP12
0x70c DUP13
0x70d AND
0x70e PUSH1 0x4
0x710 DUP3
0x711 ADD
0x712 MSTORE
0x713 PUSH1 0x24
0x715 DUP2
0x716 ADD
0x717 SWAP11
0x718 SWAP1
0x719 SWAP11
0x71a MSTORE
0x71b SWAP8
0x71c DUP11
0x71d AND
0x71e PUSH1 0x44
0x720 DUP11
0x721 ADD
0x722 MSTORE
0x723 PUSH1 0x64
0x725 DUP10
0x726 ADD
0x727 SWAP7
0x728 SWAP1
0x729 SWAP7
0x72a MSTORE
0x72b PUSH1 0x84
0x72d DUP9
0x72e ADD
0x72f SWAP5
0x730 SWAP1
0x731 SWAP5
0x732 MSTORE
0x733 PUSH1 0xa4
0x735 DUP8
0x736 ADD
0x737 SWAP3
0x738 SWAP1
0x739 SWAP3
0x73a MSTORE
0x73b SWAP1
0x73c SWAP6
0x73d AND
0x73e PUSH1 0xc4
0x740 DUP6
0x741 ADD
0x742 MSTORE
0x743 PUSH1 0xff
0x745 SWAP1
0x746 SWAP5
0x747 AND
0x748 PUSH1 0xe4
0x74a DUP5
0x74b ADD
0x74c MSTORE
0x74d PUSH2 0x104
0x750 DUP4
0x751 ADD
0x752 SWAP4
0x753 SWAP1
0x754 SWAP4
0x755 MSTORE
0x756 PUSH2 0x124
0x759 DUP3
0x75a ADD
0x75b SWAP3
0x75c SWAP1
0x75d SWAP3
0x75e MSTORE
0x75f PUSH2 0x144
0x762 DUP2
0x763 ADD
0x764 SWAP2
0x765 SWAP1
0x766 SWAP2
0x767 MSTORE
0x768 PUSH2 0x164
0x76b ADD
0x76c PUSH1 0x0
0x76e PUSH1 0x40
0x770 MLOAD
0x771 DUP1
0x772 DUP4
0x773 SUB
0x774 DUP2
0x775 PUSH1 0x0
0x777 DUP9
0x778 DUP1
0x779 EXTCODESIZE
0x77a ISZERO
0x77b ISZERO
0x77c PUSH2 0x784
0x77f JUMPI
---
0x6e6: JUMPDEST 
0x6e8: V634 = 0x20
0x6ea: V635 = ADD 0x20 S1
0x6ec: V636 = 0x20
0x6ee: V637 = MUL 0x20 0xa
0x6ef: V638 = ADD 0x140 V635
0x6f0: V639 = M[V638]
0x6f1: V640 = 0x40
0x6f3: V641 = M[0x40]
0x6f4: V642 = 0xe0
0x6f6: V643 = 0x2
0x6f8: V644 = EXP 0x2 0xe0
0x6f9: V645 = 0xffffffff
0x6ff: V646 = AND 0xa19b14a 0xffffffff
0x700: V647 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x702: M[V641] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x703: V648 = 0x1
0x705: V649 = 0xa0
0x707: V650 = 0x2
0x709: V651 = EXP 0x2 0xa0
0x70a: V652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70d: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x70e: V654 = 0x4
0x711: V655 = ADD V641 0x4
0x712: M[V655] = V653
0x713: V656 = 0x24
0x716: V657 = ADD V641 0x24
0x71a: M[V657] = S10
0x71d: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x71e: V659 = 0x44
0x721: V660 = ADD V641 0x44
0x722: M[V660] = V658
0x723: V661 = 0x64
0x726: V662 = ADD V641 0x64
0x72a: M[V662] = S8
0x72b: V663 = 0x84
0x72e: V664 = ADD V641 0x84
0x732: M[V664] = S7
0x733: V665 = 0xa4
0x736: V666 = ADD V641 0xa4
0x73a: M[V666] = S6
0x73d: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x73e: V668 = 0xc4
0x741: V669 = ADD V641 0xc4
0x742: M[V669] = V667
0x743: V670 = 0xff
0x747: V671 = AND S4 0xff
0x748: V672 = 0xe4
0x74b: V673 = ADD V641 0xe4
0x74c: M[V673] = V671
0x74d: V674 = 0x104
0x751: V675 = ADD V641 0x104
0x755: M[V675] = S3
0x756: V676 = 0x124
0x75a: V677 = ADD V641 0x124
0x75e: M[V677] = V629
0x75f: V678 = 0x144
0x763: V679 = ADD V641 0x144
0x767: M[V679] = V639
0x768: V680 = 0x164
0x76b: V681 = ADD 0x164 V641
0x76c: V682 = 0x0
0x76e: V683 = 0x40
0x770: V684 = M[0x40]
0x773: V685 = SUB V681 V684
0x775: V686 = 0x0
0x779: V687 = EXTCODESIZE S14
0x77a: V688 = ISZERO V687
0x77b: V689 = ISZERO V688
0x77c: V690 = 0x784
0x77f: JUMPI 0x784 V689
---
Entry stack: [V12, 0xa9, V67, S17, {0xa9, 0x3b4, 0x3bd}, S15, S14, 0xa19b14a, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V629, S1, 0xa]
Stack pops: 15
Stack additions: [S14, S13, S12, V681, 0x0, V684, V685, V684, 0x0, S14]
Exit stack: [V12, 0xa9, V67, S17, {0xa9, 0x3b4, 0x3bd}, S15, S14, 0xa19b14a, S12, V681, 0x0, V684, V685, V684, 0x0, S14]

================================

Block 0x780
[0x780:0x783]
---
Predecessors: [0x6e6]
Successors: []
---
0x780 PUSH1 0x0
0x782 DUP1
0x783 REVERT
---
0x780: V691 = 0x0
0x783: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b4, 0x3bd}, S10, S9, 0xa19b14a, S7, V681, 0x0, V684, V685, V684, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b4, 0x3bd}, S10, S9, 0xa19b14a, S7, V681, 0x0, V684, V685, V684, 0x0, S0]

================================

Block 0x784
[0x784:0x78c]
---
Predecessors: [0x6e6]
Successors: [0x78d, 0x791]
---
0x784 JUMPDEST
0x785 DUP8
0x786 CALL
0x787 ISZERO
0x788 ISZERO
0x789 PUSH2 0x791
0x78c JUMPI
---
0x784: JUMPDEST 
0x786: V692 = CALL S7 S0 0x0 V684 V685 V684 0x0
0x787: V693 = ISZERO V692
0x788: V694 = ISZERO V693
0x789: V695 = 0x791
0x78c: JUMPI 0x791 V694
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b4, 0x3bd}, S10, S9, 0xa19b14a, S7, V681, 0x0, V684, V685, V684, 0x0, S0]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b4, 0x3bd}, S10, S9, 0xa19b14a, S7, V681]

================================

Block 0x78d
[0x78d:0x790]
---
Predecessors: [0x784]
Successors: []
---
0x78d PUSH1 0x0
0x78f DUP1
0x790 REVERT
---
0x78d: V696 = 0x0
0x790: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S6, {0xa9, 0x3b4, 0x3bd}, S4, S3, 0xa19b14a, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S6, {0xa9, 0x3b4, 0x3bd}, S4, S3, 0xa19b14a, S1, S0]

================================

Block 0x791
[0x791:0x795]
---
Predecessors: [0x784]
Successors: [0x796]
---
0x791 JUMPDEST
0x792 POP
0x793 POP
0x794 POP
0x795 POP
---
0x791: JUMPDEST 
---
Entry stack: [V12, 0xa9, V67, S6, {0xa9, 0x3b4, 0x3bd}, S4, S3, 0xa19b14a, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xa9, V67, S6, {0xa9, 0x3b4, 0x3bd}, S4]

================================

Block 0x796
[0x796:0x798]
---
Predecessors: [0x791]
Successors: [0xa9, 0x3b4, 0x3bd]
---
0x796 JUMPDEST
0x797 POP
0x798 JUMP
---
0x796: JUMPDEST 
0x798: JUMP {0xa9, 0x3b4, 0x3bd}
---
Entry stack: [V12, 0xa9, V67, S2, {0xa9, 0x3b4, 0x3bd}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xa9, V67, S2]

================================

Block 0x799
[0x799:0x7b7]
---
Predecessors: [0x2cc, 0x445, 0x457]
Successors: [0x7b8, 0x7b9]
---
0x799 JUMPDEST
0x79a PUSH1 0x1
0x79c SLOAD
0x79d PUSH1 0x0
0x79f SWAP1
0x7a0 PUSH1 0x1
0x7a2 PUSH1 0xa0
0x7a4 PUSH1 0x2
0x7a6 EXP
0x7a7 SUB
0x7a8 AND
0x7a9 PUSH4 0x6c86888b
0x7ae DUP4
0x7af DUP4
0x7b0 DUP2
0x7b1 MLOAD
0x7b2 DUP2
0x7b3 LT
0x7b4 PUSH2 0x7b9
0x7b7 JUMPI
---
0x799: JUMPDEST 
0x79a: V697 = 0x1
0x79c: V698 = S[0x1]
0x79d: V699 = 0x0
0x7a0: V700 = 0x1
0x7a2: V701 = 0xa0
0x7a4: V702 = 0x2
0x7a6: V703 = EXP 0x2 0xa0
0x7a7: V704 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a8: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V698
0x7a9: V706 = 0x6c86888b
0x7b1: V707 = M[S0]
0x7b3: V708 = LT 0x0 V707
0x7b4: V709 = 0x7b9
0x7b7: JUMPI 0x7b9 V708
---
Entry stack: [V12, 0x1f2, V123, V143, S2, {0x1f2, 0x450, 0x460}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V705, 0x6c86888b, S0, 0x0]
Exit stack: [V12, 0x1f2, V123, V143, S2, {0x1f2, 0x450, 0x460}, S0, 0x0, V705, 0x6c86888b, S0, 0x0]

================================

Block 0x7b8
[0x7b8:0x7b8]
---
Predecessors: [0x799]
Successors: []
---
0x7b8 INVALID
---
0x7b8: INVALID 
---
Entry stack: [V12, 0x1f2, V123, V143, S7, {0x1f2, 0x450, 0x460}, S5, 0x0, V705, 0x6c86888b, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S7, {0x1f2, 0x450, 0x460}, S5, 0x0, V705, 0x6c86888b, S1, 0x0]

================================

Block 0x7b9
[0x7b9:0x7ce]
---
Predecessors: [0x799]
Successors: [0x7cf, 0x7d0]
---
0x7b9 JUMPDEST
0x7ba SWAP1
0x7bb PUSH1 0x20
0x7bd ADD
0x7be SWAP1
0x7bf PUSH1 0x20
0x7c1 MUL
0x7c2 ADD
0x7c3 MLOAD
0x7c4 DUP5
0x7c5 PUSH1 0x1
0x7c7 DUP2
0x7c8 MLOAD
0x7c9 DUP2
0x7ca LT
0x7cb PUSH2 0x7d0
0x7ce JUMPI
---
0x7b9: JUMPDEST 
0x7bb: V710 = 0x20
0x7bd: V711 = ADD 0x20 S1
0x7bf: V712 = 0x20
0x7c1: V713 = MUL 0x20 0x0
0x7c2: V714 = ADD 0x0 V711
0x7c3: V715 = M[V714]
0x7c5: V716 = 0x1
0x7c8: V717 = M[S5]
0x7ca: V718 = LT 0x1 V717
0x7cb: V719 = 0x7d0
0x7ce: JUMPI 0x7d0 V718
---
Entry stack: [V12, 0x1f2, V123, V143, S7, {0x1f2, 0x450, 0x460}, S5, 0x0, V705, 0x6c86888b, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V715, S5, 0x1]
Exit stack: [V12, 0x1f2, V123, V143, S7, {0x1f2, 0x450, 0x460}, S5, 0x0, V705, 0x6c86888b, V715, S5, 0x1]

================================

Block 0x7cf
[0x7cf:0x7cf]
---
Predecessors: [0x7b9]
Successors: []
---
0x7cf INVALID
---
0x7cf: INVALID 
---
Entry stack: [V12, 0x1f2, V123, V143, S8, {0x1f2, 0x450, 0x460}, S6, 0x0, S4, 0x6c86888b, V715, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S8, {0x1f2, 0x450, 0x460}, S6, 0x0, S4, 0x6c86888b, V715, S1, 0x1]

================================

Block 0x7d0
[0x7d0:0x7e5]
---
Predecessors: [0x7b9]
Successors: [0x7e6, 0x7e7]
---
0x7d0 JUMPDEST
0x7d1 SWAP1
0x7d2 PUSH1 0x20
0x7d4 ADD
0x7d5 SWAP1
0x7d6 PUSH1 0x20
0x7d8 MUL
0x7d9 ADD
0x7da MLOAD
0x7db DUP6
0x7dc PUSH1 0x2
0x7de DUP2
0x7df MLOAD
0x7e0 DUP2
0x7e1 LT
0x7e2 PUSH2 0x7e7
0x7e5 JUMPI
---
0x7d0: JUMPDEST 
0x7d2: V720 = 0x20
0x7d4: V721 = ADD 0x20 S1
0x7d6: V722 = 0x20
0x7d8: V723 = MUL 0x20 0x1
0x7d9: V724 = ADD 0x20 V721
0x7da: V725 = M[V724]
0x7dc: V726 = 0x2
0x7df: V727 = M[S6]
0x7e1: V728 = LT 0x2 V727
0x7e2: V729 = 0x7e7
0x7e5: JUMPI 0x7e7 V728
---
Entry stack: [V12, 0x1f2, V123, V143, S8, {0x1f2, 0x450, 0x460}, S6, 0x0, S4, 0x6c86888b, V715, S1, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V725, S6, 0x2]
Exit stack: [V12, 0x1f2, V123, V143, S8, {0x1f2, 0x450, 0x460}, S6, 0x0, S4, 0x6c86888b, V715, V725, S6, 0x2]

================================

Block 0x7e6
[0x7e6:0x7e6]
---
Predecessors: [0x7d0]
Successors: []
---
0x7e6 INVALID
---
0x7e6: INVALID 
---
Entry stack: [V12, 0x1f2, V123, V143, S9, {0x1f2, 0x450, 0x460}, S7, 0x0, S5, 0x6c86888b, S3, V725, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S9, {0x1f2, 0x450, 0x460}, S7, 0x0, S5, 0x6c86888b, S3, V725, S1, 0x2]

================================

Block 0x7e7
[0x7e7:0x7fc]
---
Predecessors: [0x7d0]
Successors: [0x7fd, 0x7fe]
---
0x7e7 JUMPDEST
0x7e8 SWAP1
0x7e9 PUSH1 0x20
0x7eb ADD
0x7ec SWAP1
0x7ed PUSH1 0x20
0x7ef MUL
0x7f0 ADD
0x7f1 MLOAD
0x7f2 DUP7
0x7f3 PUSH1 0x3
0x7f5 DUP2
0x7f6 MLOAD
0x7f7 DUP2
0x7f8 LT
0x7f9 PUSH2 0x7fe
0x7fc JUMPI
---
0x7e7: JUMPDEST 
0x7e9: V730 = 0x20
0x7eb: V731 = ADD 0x20 S1
0x7ed: V732 = 0x20
0x7ef: V733 = MUL 0x20 0x2
0x7f0: V734 = ADD 0x40 V731
0x7f1: V735 = M[V734]
0x7f3: V736 = 0x3
0x7f6: V737 = M[S7]
0x7f8: V738 = LT 0x3 V737
0x7f9: V739 = 0x7fe
0x7fc: JUMPI 0x7fe V738
---
Entry stack: [V12, 0x1f2, V123, V143, S9, {0x1f2, 0x450, 0x460}, S7, 0x0, S5, 0x6c86888b, S3, V725, S1, 0x2]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V735, S7, 0x3]
Exit stack: [V12, 0x1f2, V123, V143, S9, {0x1f2, 0x450, 0x460}, S7, 0x0, S5, 0x6c86888b, S3, V725, V735, S7, 0x3]

================================

Block 0x7fd
[0x7fd:0x7fd]
---
Predecessors: [0x7e7]
Successors: []
---
0x7fd INVALID
---
0x7fd: INVALID 
---
Entry stack: [V12, 0x1f2, V123, V143, S10, {0x1f2, 0x450, 0x460}, S8, 0x0, S6, 0x6c86888b, S4, S3, V735, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S10, {0x1f2, 0x450, 0x460}, S8, 0x0, S6, 0x6c86888b, S4, S3, V735, S1, 0x3]

================================

Block 0x7fe
[0x7fe:0x813]
---
Predecessors: [0x7e7]
Successors: [0x814, 0x815]
---
0x7fe JUMPDEST
0x7ff SWAP1
0x800 PUSH1 0x20
0x802 ADD
0x803 SWAP1
0x804 PUSH1 0x20
0x806 MUL
0x807 ADD
0x808 MLOAD
0x809 DUP8
0x80a PUSH1 0x4
0x80c DUP2
0x80d MLOAD
0x80e DUP2
0x80f LT
0x810 PUSH2 0x815
0x813 JUMPI
---
0x7fe: JUMPDEST 
0x800: V740 = 0x20
0x802: V741 = ADD 0x20 S1
0x804: V742 = 0x20
0x806: V743 = MUL 0x20 0x3
0x807: V744 = ADD 0x60 V741
0x808: V745 = M[V744]
0x80a: V746 = 0x4
0x80d: V747 = M[S8]
0x80f: V748 = LT 0x4 V747
0x810: V749 = 0x815
0x813: JUMPI 0x815 V748
---
Entry stack: [V12, 0x1f2, V123, V143, S10, {0x1f2, 0x450, 0x460}, S8, 0x0, S6, 0x6c86888b, S4, S3, V735, S1, 0x3]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V745, S8, 0x4]
Exit stack: [V12, 0x1f2, V123, V143, S10, {0x1f2, 0x450, 0x460}, S8, 0x0, S6, 0x6c86888b, S4, S3, V735, V745, S8, 0x4]

================================

Block 0x814
[0x814:0x814]
---
Predecessors: [0x7fe]
Successors: []
---
0x814 INVALID
---
0x814: INVALID 
---
Entry stack: [V12, 0x1f2, V123, V143, S11, {0x1f2, 0x450, 0x460}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V745, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S11, {0x1f2, 0x450, 0x460}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V745, S1, 0x4]

================================

Block 0x815
[0x815:0x82a]
---
Predecessors: [0x7fe]
Successors: [0x82b, 0x82c]
---
0x815 JUMPDEST
0x816 SWAP1
0x817 PUSH1 0x20
0x819 ADD
0x81a SWAP1
0x81b PUSH1 0x20
0x81d MUL
0x81e ADD
0x81f MLOAD
0x820 DUP9
0x821 PUSH1 0x5
0x823 DUP2
0x824 MLOAD
0x825 DUP2
0x826 LT
0x827 PUSH2 0x82c
0x82a JUMPI
---
0x815: JUMPDEST 
0x817: V750 = 0x20
0x819: V751 = ADD 0x20 S1
0x81b: V752 = 0x20
0x81d: V753 = MUL 0x20 0x4
0x81e: V754 = ADD 0x80 V751
0x81f: V755 = M[V754]
0x821: V756 = 0x5
0x824: V757 = M[S9]
0x826: V758 = LT 0x5 V757
0x827: V759 = 0x82c
0x82a: JUMPI 0x82c V758
---
Entry stack: [V12, 0x1f2, V123, V143, S11, {0x1f2, 0x450, 0x460}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V745, S1, 0x4]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V755, S9, 0x5]
Exit stack: [V12, 0x1f2, V123, V143, S11, {0x1f2, 0x450, 0x460}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V745, V755, S9, 0x5]

================================

Block 0x82b
[0x82b:0x82b]
---
Predecessors: [0x815]
Successors: []
---
0x82b INVALID
---
0x82b: INVALID 
---
Entry stack: [V12, 0x1f2, V123, V143, S12, {0x1f2, 0x450, 0x460}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V755, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S12, {0x1f2, 0x450, 0x460}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V755, S1, 0x5]

================================

Block 0x82c
[0x82c:0x841]
---
Predecessors: [0x815]
Successors: [0x842, 0x843]
---
0x82c JUMPDEST
0x82d SWAP1
0x82e PUSH1 0x20
0x830 ADD
0x831 SWAP1
0x832 PUSH1 0x20
0x834 MUL
0x835 ADD
0x836 MLOAD
0x837 DUP10
0x838 PUSH1 0x6
0x83a DUP2
0x83b MLOAD
0x83c DUP2
0x83d LT
0x83e PUSH2 0x843
0x841 JUMPI
---
0x82c: JUMPDEST 
0x82e: V760 = 0x20
0x830: V761 = ADD 0x20 S1
0x832: V762 = 0x20
0x834: V763 = MUL 0x20 0x5
0x835: V764 = ADD 0xa0 V761
0x836: V765 = M[V764]
0x838: V766 = 0x6
0x83b: V767 = M[S10]
0x83d: V768 = LT 0x6 V767
0x83e: V769 = 0x843
0x841: JUMPI 0x843 V768
---
Entry stack: [V12, 0x1f2, V123, V143, S12, {0x1f2, 0x450, 0x460}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V755, S1, 0x5]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V765, S10, 0x6]
Exit stack: [V12, 0x1f2, V123, V143, S12, {0x1f2, 0x450, 0x460}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V755, V765, S10, 0x6]

================================

Block 0x842
[0x842:0x842]
---
Predecessors: [0x82c]
Successors: []
---
0x842 INVALID
---
0x842: INVALID 
---
Entry stack: [V12, 0x1f2, V123, V143, S13, {0x1f2, 0x450, 0x460}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V765, S1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S13, {0x1f2, 0x450, 0x460}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V765, S1, 0x6]

================================

Block 0x843
[0x843:0x858]
---
Predecessors: [0x82c]
Successors: [0x859, 0x85a]
---
0x843 JUMPDEST
0x844 SWAP1
0x845 PUSH1 0x20
0x847 ADD
0x848 SWAP1
0x849 PUSH1 0x20
0x84b MUL
0x84c ADD
0x84d MLOAD
0x84e DUP11
0x84f PUSH1 0x7
0x851 DUP2
0x852 MLOAD
0x853 DUP2
0x854 LT
0x855 PUSH2 0x85a
0x858 JUMPI
---
0x843: JUMPDEST 
0x845: V770 = 0x20
0x847: V771 = ADD 0x20 S1
0x849: V772 = 0x20
0x84b: V773 = MUL 0x20 0x6
0x84c: V774 = ADD 0xc0 V771
0x84d: V775 = M[V774]
0x84f: V776 = 0x7
0x852: V777 = M[S11]
0x854: V778 = LT 0x7 V777
0x855: V779 = 0x85a
0x858: JUMPI 0x85a V778
---
Entry stack: [V12, 0x1f2, V123, V143, S13, {0x1f2, 0x450, 0x460}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V765, S1, 0x6]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V775, S11, 0x7]
Exit stack: [V12, 0x1f2, V123, V143, S13, {0x1f2, 0x450, 0x460}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V765, V775, S11, 0x7]

================================

Block 0x859
[0x859:0x859]
---
Predecessors: [0x843]
Successors: []
---
0x859 INVALID
---
0x859: INVALID 
---
Entry stack: [V12, 0x1f2, V123, V143, S14, {0x1f2, 0x450, 0x460}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V775, S1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S14, {0x1f2, 0x450, 0x460}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V775, S1, 0x7]

================================

Block 0x85a
[0x85a:0x86f]
---
Predecessors: [0x843]
Successors: [0x870, 0x871]
---
0x85a JUMPDEST
0x85b SWAP1
0x85c PUSH1 0x20
0x85e ADD
0x85f SWAP1
0x860 PUSH1 0x20
0x862 MUL
0x863 ADD
0x864 MLOAD
0x865 DUP12
0x866 PUSH1 0x8
0x868 DUP2
0x869 MLOAD
0x86a DUP2
0x86b LT
0x86c PUSH2 0x871
0x86f JUMPI
---
0x85a: JUMPDEST 
0x85c: V780 = 0x20
0x85e: V781 = ADD 0x20 S1
0x860: V782 = 0x20
0x862: V783 = MUL 0x20 0x7
0x863: V784 = ADD 0xe0 V781
0x864: V785 = M[V784]
0x866: V786 = 0x8
0x869: V787 = M[S12]
0x86b: V788 = LT 0x8 V787
0x86c: V789 = 0x871
0x86f: JUMPI 0x871 V788
---
Entry stack: [V12, 0x1f2, V123, V143, S14, {0x1f2, 0x450, 0x460}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V775, S1, 0x7]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V785, S12, 0x8]
Exit stack: [V12, 0x1f2, V123, V143, S14, {0x1f2, 0x450, 0x460}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V775, V785, S12, 0x8]

================================

Block 0x870
[0x870:0x870]
---
Predecessors: [0x85a]
Successors: []
---
0x870 INVALID
---
0x870: INVALID 
---
Entry stack: [V12, 0x1f2, V123, V143, S15, {0x1f2, 0x450, 0x460}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V785, S1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S15, {0x1f2, 0x450, 0x460}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V785, S1, 0x8]

================================

Block 0x871
[0x871:0x886]
---
Predecessors: [0x85a]
Successors: [0x887, 0x888]
---
0x871 JUMPDEST
0x872 SWAP1
0x873 PUSH1 0x20
0x875 ADD
0x876 SWAP1
0x877 PUSH1 0x20
0x879 MUL
0x87a ADD
0x87b MLOAD
0x87c DUP13
0x87d PUSH1 0x9
0x87f DUP2
0x880 MLOAD
0x881 DUP2
0x882 LT
0x883 PUSH2 0x888
0x886 JUMPI
---
0x871: JUMPDEST 
0x873: V790 = 0x20
0x875: V791 = ADD 0x20 S1
0x877: V792 = 0x20
0x879: V793 = MUL 0x20 0x8
0x87a: V794 = ADD 0x100 V791
0x87b: V795 = M[V794]
0x87d: V796 = 0x9
0x880: V797 = M[S13]
0x882: V798 = LT 0x9 V797
0x883: V799 = 0x888
0x886: JUMPI 0x888 V798
---
Entry stack: [V12, 0x1f2, V123, V143, S15, {0x1f2, 0x450, 0x460}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V785, S1, 0x8]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V795, S13, 0x9]
Exit stack: [V12, 0x1f2, V123, V143, S15, {0x1f2, 0x450, 0x460}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V785, V795, S13, 0x9]

================================

Block 0x887
[0x887:0x887]
---
Predecessors: [0x871]
Successors: []
---
0x887 INVALID
---
0x887: INVALID 
---
Entry stack: [V12, 0x1f2, V123, V143, S16, {0x1f2, 0x450, 0x460}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V795, S1, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S16, {0x1f2, 0x450, 0x460}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V795, S1, 0x9]

================================

Block 0x888
[0x888:0x89d]
---
Predecessors: [0x871]
Successors: [0x89e, 0x89f]
---
0x888 JUMPDEST
0x889 SWAP1
0x88a PUSH1 0x20
0x88c ADD
0x88d SWAP1
0x88e PUSH1 0x20
0x890 MUL
0x891 ADD
0x892 MLOAD
0x893 DUP14
0x894 PUSH1 0xa
0x896 DUP2
0x897 MLOAD
0x898 DUP2
0x899 LT
0x89a PUSH2 0x89f
0x89d JUMPI
---
0x888: JUMPDEST 
0x88a: V800 = 0x20
0x88c: V801 = ADD 0x20 S1
0x88e: V802 = 0x20
0x890: V803 = MUL 0x20 0x9
0x891: V804 = ADD 0x120 V801
0x892: V805 = M[V804]
0x894: V806 = 0xa
0x897: V807 = M[S14]
0x899: V808 = LT 0xa V807
0x89a: V809 = 0x89f
0x89d: JUMPI 0x89f V808
---
Entry stack: [V12, 0x1f2, V123, V143, S16, {0x1f2, 0x450, 0x460}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V795, S1, 0x9]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V805, S14, 0xa]
Exit stack: [V12, 0x1f2, V123, V143, S16, {0x1f2, 0x450, 0x460}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V795, V805, S14, 0xa]

================================

Block 0x89e
[0x89e:0x89e]
---
Predecessors: [0x888]
Successors: []
---
0x89e INVALID
---
0x89e: INVALID 
---
Entry stack: [V12, 0x1f2, V123, V143, S17, {0x1f2, 0x450, 0x460}, S15, 0x0, S13, 0x6c86888b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V805, S1, 0xa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S17, {0x1f2, 0x450, 0x460}, S15, 0x0, S13, 0x6c86888b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V805, S1, 0xa]

================================

Block 0x89f
[0x89f:0x940]
---
Predecessors: [0x888]
Successors: [0x567, 0x941]
---
0x89f JUMPDEST
0x8a0 SWAP1
0x8a1 PUSH1 0x20
0x8a3 ADD
0x8a4 SWAP1
0x8a5 PUSH1 0x20
0x8a7 MUL
0x8a8 ADD
0x8a9 MLOAD
0x8aa ADDRESS
0x8ab PUSH1 0x0
0x8ad PUSH1 0x40
0x8af MLOAD
0x8b0 PUSH1 0x20
0x8b2 ADD
0x8b3 MSTORE
0x8b4 PUSH1 0x40
0x8b6 MLOAD
0x8b7 PUSH1 0xe0
0x8b9 PUSH1 0x2
0x8bb EXP
0x8bc PUSH4 0xffffffff
0x8c1 DUP16
0x8c2 AND
0x8c3 MUL
0x8c4 DUP2
0x8c5 MSTORE
0x8c6 PUSH1 0x1
0x8c8 PUSH1 0xa0
0x8ca PUSH1 0x2
0x8cc EXP
0x8cd SUB
0x8ce SWAP13
0x8cf DUP14
0x8d0 AND
0x8d1 PUSH1 0x4
0x8d3 DUP3
0x8d4 ADD
0x8d5 MSTORE
0x8d6 PUSH1 0x24
0x8d8 DUP2
0x8d9 ADD
0x8da SWAP12
0x8db SWAP1
0x8dc SWAP12
0x8dd MSTORE
0x8de SWAP9
0x8df DUP12
0x8e0 AND
0x8e1 PUSH1 0x44
0x8e3 DUP12
0x8e4 ADD
0x8e5 MSTORE
0x8e6 PUSH1 0x64
0x8e8 DUP11
0x8e9 ADD
0x8ea SWAP8
0x8eb SWAP1
0x8ec SWAP8
0x8ed MSTORE
0x8ee PUSH1 0x84
0x8f0 DUP10
0x8f1 ADD
0x8f2 SWAP6
0x8f3 SWAP1
0x8f4 SWAP6
0x8f5 MSTORE
0x8f6 PUSH1 0xa4
0x8f8 DUP9
0x8f9 ADD
0x8fa SWAP4
0x8fb SWAP1
0x8fc SWAP4
0x8fd MSTORE
0x8fe SWAP1
0x8ff DUP8
0x900 AND
0x901 PUSH1 0xc4
0x903 DUP8
0x904 ADD
0x905 MSTORE
0x906 PUSH1 0xff
0x908 AND
0x909 PUSH1 0xe4
0x90b DUP7
0x90c ADD
0x90d MSTORE
0x90e PUSH2 0x104
0x911 DUP6
0x912 ADD
0x913 MSTORE
0x914 PUSH2 0x124
0x917 DUP5
0x918 ADD
0x919 MSTORE
0x91a PUSH2 0x144
0x91d DUP4
0x91e ADD
0x91f MSTORE
0x920 SWAP1
0x921 SWAP2
0x922 AND
0x923 PUSH2 0x164
0x926 DUP3
0x927 ADD
0x928 MSTORE
0x929 PUSH2 0x184
0x92c ADD
0x92d PUSH1 0x20
0x92f PUSH1 0x40
0x931 MLOAD
0x932 DUP1
0x933 DUP4
0x934 SUB
0x935 DUP2
0x936 PUSH1 0x0
0x938 DUP8
0x939 DUP1
0x93a EXTCODESIZE
0x93b ISZERO
0x93c ISZERO
0x93d PUSH2 0x567
0x940 JUMPI
---
0x89f: JUMPDEST 
0x8a1: V810 = 0x20
0x8a3: V811 = ADD 0x20 S1
0x8a5: V812 = 0x20
0x8a7: V813 = MUL 0x20 0xa
0x8a8: V814 = ADD 0x140 V811
0x8a9: V815 = M[V814]
0x8aa: V816 = ADDRESS
0x8ab: V817 = 0x0
0x8ad: V818 = 0x40
0x8af: V819 = M[0x40]
0x8b0: V820 = 0x20
0x8b2: V821 = ADD 0x20 V819
0x8b3: M[V821] = 0x0
0x8b4: V822 = 0x40
0x8b6: V823 = M[0x40]
0x8b7: V824 = 0xe0
0x8b9: V825 = 0x2
0x8bb: V826 = EXP 0x2 0xe0
0x8bc: V827 = 0xffffffff
0x8c2: V828 = AND 0x6c86888b 0xffffffff
0x8c3: V829 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x8c5: M[V823] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x8c6: V830 = 0x1
0x8c8: V831 = 0xa0
0x8ca: V832 = 0x2
0x8cc: V833 = EXP 0x2 0xa0
0x8cd: V834 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d0: V835 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x8d1: V836 = 0x4
0x8d4: V837 = ADD V823 0x4
0x8d5: M[V837] = V835
0x8d6: V838 = 0x24
0x8d9: V839 = ADD V823 0x24
0x8dd: M[V839] = S10
0x8e0: V840 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x8e1: V841 = 0x44
0x8e4: V842 = ADD V823 0x44
0x8e5: M[V842] = V840
0x8e6: V843 = 0x64
0x8e9: V844 = ADD V823 0x64
0x8ed: M[V844] = S8
0x8ee: V845 = 0x84
0x8f1: V846 = ADD V823 0x84
0x8f5: M[V846] = S7
0x8f6: V847 = 0xa4
0x8f9: V848 = ADD V823 0xa4
0x8fd: M[V848] = S6
0x900: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x901: V850 = 0xc4
0x904: V851 = ADD V823 0xc4
0x905: M[V851] = V849
0x906: V852 = 0xff
0x908: V853 = AND 0xff S4
0x909: V854 = 0xe4
0x90c: V855 = ADD V823 0xe4
0x90d: M[V855] = V853
0x90e: V856 = 0x104
0x912: V857 = ADD V823 0x104
0x913: M[V857] = S3
0x914: V858 = 0x124
0x918: V859 = ADD V823 0x124
0x919: M[V859] = V805
0x91a: V860 = 0x144
0x91e: V861 = ADD V823 0x144
0x91f: M[V861] = V815
0x922: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0x923: V863 = 0x164
0x927: V864 = ADD V823 0x164
0x928: M[V864] = V862
0x929: V865 = 0x184
0x92c: V866 = ADD 0x184 V823
0x92d: V867 = 0x20
0x92f: V868 = 0x40
0x931: V869 = M[0x40]
0x934: V870 = SUB V866 V869
0x936: V871 = 0x0
0x93a: V872 = EXTCODESIZE S13
0x93b: V873 = ISZERO V872
0x93c: V874 = ISZERO V873
0x93d: V875 = 0x567
0x940: JUMPI 0x567 V874
---
Entry stack: [V12, 0x1f2, V123, V143, S17, {0x1f2, 0x450, 0x460}, S15, 0x0, S13, 0x6c86888b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V805, S1, 0xa]
Stack pops: 14
Stack additions: [S13, S12, V866, 0x20, V869, V870, V869, 0x0, S13]
Exit stack: [V12, 0x1f2, V123, V143, S17, {0x1f2, 0x450, 0x460}, S15, 0x0, S13, 0x6c86888b, V866, 0x20, V869, V870, V869, 0x0, S13]

================================

Block 0x941
[0x941:0x944]
---
Predecessors: [0x89f]
Successors: []
---
0x941 PUSH1 0x0
0x943 DUP1
0x944 REVERT
---
0x941: V876 = 0x0
0x944: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1f2, V123, V143, S12, {0x1f2, 0x450, 0x460}, S10, 0x0, S8, 0x6c86888b, V866, 0x20, V869, V870, V869, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1f2, V123, V143, S12, {0x1f2, 0x450, 0x460}, S10, 0x0, S8, 0x6c86888b, V866, 0x20, V869, V870, V869, 0x0, S0]

================================

Block 0x945
[0x945:0x951]
---
Predecessors: []
Successors: [0x578, 0x952]
---
0x945 JUMPDEST
0x946 PUSH2 0x2c6
0x949 GAS
0x94a SUB
0x94b CALL
0x94c ISZERO
0x94d ISZERO
0x94e PUSH2 0x578
0x951 JUMPI
---
0x945: JUMPDEST 
0x946: V877 = 0x2c6
0x949: V878 = GAS
0x94a: V879 = SUB V878 0x2c6
0x94b: V880 = CALL V879 S0 S1 S2 S3 S4 S5
0x94c: V881 = ISZERO V880
0x94d: V882 = ISZERO V881
0x94e: V883 = 0x578
0x951: JUMPI 0x578 V882
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x952
[0x952:0x961]
---
Predecessors: [0x945]
Successors: [0x962]
---
0x952 PUSH1 0x0
0x954 DUP1
0x955 REVERT
0x956 JUMPDEST
0x957 POP
0x958 POP
0x959 POP
0x95a PUSH1 0x40
0x95c MLOAD
0x95d DUP1
0x95e MLOAD
0x95f SWAP2
0x960 POP
0x961 POP
---
0x952: V884 = 0x0
0x955: REVERT 0x0 0x0
0x956: JUMPDEST 
0x95a: V885 = 0x40
0x95c: V886 = M[0x40]
0x95e: V887 = M[V886]
---
Entry stack: []
Stack pops: 0
Stack additions: [V887]
Exit stack: []

================================

Block 0x962
[0x962:0x966]
---
Predecessors: [0x952]
Successors: []
Has unresolved jump.
---
0x962 JUMPDEST
0x963 SWAP2
0x964 SWAP1
0x965 POP
0x966 JUMP
---
0x962: JUMPDEST 
0x966: JUMP S2
---
Entry stack: [V887]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V887]

================================

Block 0x967
[0x967:0x97d]
---
Predecessors: [0x32f]
Successors: [0x97e, 0x97f]
---
0x967 JUMPDEST
0x968 PUSH1 0x2
0x96a SLOAD
0x96b CALLER
0x96c PUSH1 0x1
0x96e PUSH1 0xa0
0x970 PUSH1 0x2
0x972 EXP
0x973 SUB
0x974 SWAP1
0x975 DUP2
0x976 AND
0x977 SWAP2
0x978 AND
0x979 EQ
0x97a PUSH2 0x97f
0x97d JUMPI
---
0x967: JUMPDEST 
0x968: V888 = 0x2
0x96a: V889 = S[0x2]
0x96b: V890 = CALLER
0x96c: V891 = 0x1
0x96e: V892 = 0xa0
0x970: V893 = 0x2
0x972: V894 = EXP 0x2 0xa0
0x973: V895 = SUB 0x10000000000000000000000000000000000000000 0x1
0x976: V896 = AND 0xffffffffffffffffffffffffffffffffffffffff V890
0x978: V897 = AND V889 0xffffffffffffffffffffffffffffffffffffffff
0x979: V898 = EQ V897 V896
0x97a: V899 = 0x97f
0x97d: JUMPI 0x97f V898
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0x97e
[0x97e:0x97e]
---
Predecessors: [0x967]
Successors: []
---
0x97e INVALID
---
0x97e: INVALID 
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0x97f
[0x97f:0x991]
---
Predecessors: [0x967]
Successors: [0xb30]
---
0x97f JUMPDEST
0x980 PUSH2 0x992
0x983 ADDRESS
0x984 PUSH1 0x1
0x986 PUSH1 0xa0
0x988 PUSH1 0x2
0x98a EXP
0x98b SUB
0x98c AND
0x98d BALANCE
0x98e PUSH2 0xb30
0x991 JUMP
---
0x97f: JUMPDEST 
0x980: V900 = 0x992
0x983: V901 = ADDRESS
0x984: V902 = 0x1
0x986: V903 = 0xa0
0x988: V904 = 0x2
0x98a: V905 = EXP 0x2 0xa0
0x98b: V906 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98c: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff V901
0x98d: V908 = BALANCE V907
0x98e: V909 = 0xb30
0x991: JUMP 0xb30
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: [0x992, V908]
Exit stack: [V12, 0xa9, 0x992, V908]

================================

Block 0x992
[0x992:0x992]
---
Predecessors: [0x3be, 0x5de]
Successors: [0x993]
---
0x992 JUMPDEST
---
0x992: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x992}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x992}, S1, S0]

================================

Block 0x993
[0x993:0x994]
---
Predecessors: [0x992]
Successors: [0xa9]
---
0x993 JUMPDEST
0x994 JUMP
---
0x993: JUMPDEST 
0x994: JUMP S0
---
Entry stack: [V12, S3, {0xa9, 0x992}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x992}, S1]

================================

Block 0x995
[0x995:0x9ab]
---
Predecessors: [0x344]
Successors: [0x9ac, 0x9ad]
---
0x995 JUMPDEST
0x996 PUSH1 0x2
0x998 SLOAD
0x999 CALLER
0x99a PUSH1 0x1
0x99c PUSH1 0xa0
0x99e PUSH1 0x2
0x9a0 EXP
0x9a1 SUB
0x9a2 SWAP1
0x9a3 DUP2
0x9a4 AND
0x9a5 SWAP2
0x9a6 AND
0x9a7 EQ
0x9a8 PUSH2 0x9ad
0x9ab JUMPI
---
0x995: JUMPDEST 
0x996: V910 = 0x2
0x998: V911 = S[0x2]
0x999: V912 = CALLER
0x99a: V913 = 0x1
0x99c: V914 = 0xa0
0x99e: V915 = 0x2
0x9a0: V916 = EXP 0x2 0xa0
0x9a1: V917 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a4: V918 = AND 0xffffffffffffffffffffffffffffffffffffffff V912
0x9a6: V919 = AND V911 0xffffffffffffffffffffffffffffffffffffffff
0x9a7: V920 = EQ V919 V918
0x9a8: V921 = 0x9ad
0x9ab: JUMPI 0x9ad V920
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0x9ac
[0x9ac:0x9ac]
---
Predecessors: [0x995]
Successors: []
---
0x9ac INVALID
---
0x9ac: INVALID 
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0x9ad
[0x9ad:0x9b7]
---
Predecessors: [0x995]
Successors: [0x3c2]
---
0x9ad JUMPDEST
0x9ae PUSH2 0x992
0x9b1 PUSH2 0x9b8
0x9b4 PUSH2 0x3c2
0x9b7 JUMP
---
0x9ad: JUMPDEST 
0x9ae: V922 = 0x992
0x9b1: V923 = 0x9b8
0x9b4: V924 = 0x3c2
0x9b7: JUMP 0x3c2
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: [0x992, 0x9b8]
Exit stack: [V12, 0xa9, 0x992, 0x9b8]

================================

Block 0x9b8
[0x9b8:0x9bc]
---
Predecessors: [0x442]
Successors: [0x46a]
---
0x9b8 JUMPDEST
0x9b9 PUSH2 0x46a
0x9bc JUMP
---
0x9b8: JUMPDEST 
0x9b9: V925 = 0x46a
0x9bc: JUMP 0x46a
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0x9bd
[0x9bd:0x9bd]
---
Predecessors: []
Successors: [0x9be]
---
0x9bd JUMPDEST
---
0x9bd: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9be
[0x9be:0x9bf]
---
Predecessors: [0x9bd]
Successors: []
Has unresolved jump.
---
0x9be JUMPDEST
0x9bf JUMP
---
0x9be: JUMPDEST 
0x9bf: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9c0
[0x9c0:0x9d6]
---
Predecessors: [0x359]
Successors: [0x9d7, 0x9d8]
---
0x9c0 JUMPDEST
0x9c1 PUSH1 0x2
0x9c3 SLOAD
0x9c4 CALLER
0x9c5 PUSH1 0x1
0x9c7 PUSH1 0xa0
0x9c9 PUSH1 0x2
0x9cb EXP
0x9cc SUB
0x9cd SWAP1
0x9ce DUP2
0x9cf AND
0x9d0 SWAP2
0x9d1 AND
0x9d2 EQ
0x9d3 PUSH2 0x9d8
0x9d6 JUMPI
---
0x9c0: JUMPDEST 
0x9c1: V926 = 0x2
0x9c3: V927 = S[0x2]
0x9c4: V928 = CALLER
0x9c5: V929 = 0x1
0x9c7: V930 = 0xa0
0x9c9: V931 = 0x2
0x9cb: V932 = EXP 0x2 0xa0
0x9cc: V933 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cf: V934 = AND 0xffffffffffffffffffffffffffffffffffffffff V928
0x9d1: V935 = AND V927 0xffffffffffffffffffffffffffffffffffffffff
0x9d2: V936 = EQ V935 V934
0x9d3: V937 = 0x9d8
0x9d6: JUMPI 0x9d8 V936
---
Entry stack: [V12, 0xa9, V282, V284]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V282, V284]

================================

Block 0x9d7
[0x9d7:0x9d7]
---
Predecessors: [0x9c0]
Successors: []
---
0x9d7 INVALID
---
0x9d7: INVALID 
---
Entry stack: [V12, 0xa9, V282, V284]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V282, V284]

================================

Block 0x9d8
[0x9d8:0xa29]
---
Predecessors: [0x9c0]
Successors: [0xa2a, 0xa2e]
---
0x9d8 JUMPDEST
0x9d9 PUSH1 0x1
0x9db SLOAD
0x9dc PUSH1 0x1
0x9de PUSH1 0xa0
0x9e0 PUSH1 0x2
0x9e2 EXP
0x9e3 SUB
0x9e4 AND
0x9e5 PUSH4 0x9e281a98
0x9ea DUP4
0x9eb DUP4
0x9ec PUSH1 0x40
0x9ee MLOAD
0x9ef PUSH1 0xe0
0x9f1 PUSH1 0x2
0x9f3 EXP
0x9f4 PUSH4 0xffffffff
0x9f9 DUP6
0x9fa AND
0x9fb MUL
0x9fc DUP2
0x9fd MSTORE
0x9fe PUSH1 0x1
0xa00 PUSH1 0xa0
0xa02 PUSH1 0x2
0xa04 EXP
0xa05 SUB
0xa06 SWAP1
0xa07 SWAP3
0xa08 AND
0xa09 PUSH1 0x4
0xa0b DUP4
0xa0c ADD
0xa0d MSTORE
0xa0e PUSH1 0x24
0xa10 DUP3
0xa11 ADD
0xa12 MSTORE
0xa13 PUSH1 0x44
0xa15 ADD
0xa16 PUSH1 0x0
0xa18 PUSH1 0x40
0xa1a MLOAD
0xa1b DUP1
0xa1c DUP4
0xa1d SUB
0xa1e DUP2
0xa1f PUSH1 0x0
0xa21 DUP8
0xa22 DUP1
0xa23 EXTCODESIZE
0xa24 ISZERO
0xa25 ISZERO
0xa26 PUSH2 0xa2e
0xa29 JUMPI
---
0x9d8: JUMPDEST 
0x9d9: V938 = 0x1
0x9db: V939 = S[0x1]
0x9dc: V940 = 0x1
0x9de: V941 = 0xa0
0x9e0: V942 = 0x2
0x9e2: V943 = EXP 0x2 0xa0
0x9e3: V944 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e4: V945 = AND 0xffffffffffffffffffffffffffffffffffffffff V939
0x9e5: V946 = 0x9e281a98
0x9ec: V947 = 0x40
0x9ee: V948 = M[0x40]
0x9ef: V949 = 0xe0
0x9f1: V950 = 0x2
0x9f3: V951 = EXP 0x2 0xe0
0x9f4: V952 = 0xffffffff
0x9fa: V953 = AND 0x9e281a98 0xffffffff
0x9fb: V954 = MUL 0x9e281a98 0x100000000000000000000000000000000000000000000000000000000
0x9fd: M[V948] = 0x9e281a9800000000000000000000000000000000000000000000000000000000
0x9fe: V955 = 0x1
0xa00: V956 = 0xa0
0xa02: V957 = 0x2
0xa04: V958 = EXP 0x2 0xa0
0xa05: V959 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa08: V960 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0xa09: V961 = 0x4
0xa0c: V962 = ADD V948 0x4
0xa0d: M[V962] = V960
0xa0e: V963 = 0x24
0xa11: V964 = ADD V948 0x24
0xa12: M[V964] = V284
0xa13: V965 = 0x44
0xa15: V966 = ADD 0x44 V948
0xa16: V967 = 0x0
0xa18: V968 = 0x40
0xa1a: V969 = M[0x40]
0xa1d: V970 = SUB V966 V969
0xa1f: V971 = 0x0
0xa23: V972 = EXTCODESIZE V945
0xa24: V973 = ISZERO V972
0xa25: V974 = ISZERO V973
0xa26: V975 = 0xa2e
0xa29: JUMPI 0xa2e V974
---
Entry stack: [V12, 0xa9, V282, V284]
Stack pops: 2
Stack additions: [S1, S0, V945, 0x9e281a98, V966, 0x0, V969, V970, V969, 0x0, V945]
Exit stack: [V12, 0xa9, V282, V284, V945, 0x9e281a98, V966, 0x0, V969, V970, V969, 0x0, V945]

================================

Block 0xa2a
[0xa2a:0xa2d]
---
Predecessors: [0x9d8]
Successors: []
---
0xa2a PUSH1 0x0
0xa2c DUP1
0xa2d REVERT
---
0xa2a: V976 = 0x0
0xa2d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V282, V284, V945, 0x9e281a98, V966, 0x0, V969, V970, V969, 0x0, V945]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V282, V284, V945, 0x9e281a98, V966, 0x0, V969, V970, V969, 0x0, V945]

================================

Block 0xa2e
[0xa2e:0xa3a]
---
Predecessors: [0x9d8]
Successors: [0xa3b, 0xa3f]
---
0xa2e JUMPDEST
0xa2f PUSH2 0x2c6
0xa32 GAS
0xa33 SUB
0xa34 CALL
0xa35 ISZERO
0xa36 ISZERO
0xa37 PUSH2 0xa3f
0xa3a JUMPI
---
0xa2e: JUMPDEST 
0xa2f: V977 = 0x2c6
0xa32: V978 = GAS
0xa33: V979 = SUB V978 0x2c6
0xa34: V980 = CALL V979 V945 0x0 V969 V970 V969 0x0
0xa35: V981 = ISZERO V980
0xa36: V982 = ISZERO V981
0xa37: V983 = 0xa3f
0xa3a: JUMPI 0xa3f V982
---
Entry stack: [V12, 0xa9, V282, V284, V945, 0x9e281a98, V966, 0x0, V969, V970, V969, 0x0, V945]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V282, V284, V945, 0x9e281a98, V966]

================================

Block 0xa3b
[0xa3b:0xa3e]
---
Predecessors: [0xa2e]
Successors: []
---
0xa3b PUSH1 0x0
0xa3d DUP1
0xa3e REVERT
---
0xa3b: V984 = 0x0
0xa3e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V282, V284, V945, 0x9e281a98, V966]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V282, V284, V945, 0x9e281a98, V966]

================================

Block 0xa3f
[0xa3f:0xa9a]
---
Predecessors: [0xa2e]
Successors: [0xa9b, 0xa9f]
---
0xa3f JUMPDEST
0xa40 POP
0xa41 POP
0xa42 POP
0xa43 DUP2
0xa44 PUSH1 0x1
0xa46 PUSH1 0xa0
0xa48 PUSH1 0x2
0xa4a EXP
0xa4b SUB
0xa4c AND
0xa4d PUSH4 0xa9059cbb
0xa52 CALLER
0xa53 DUP4
0xa54 PUSH1 0x0
0xa56 PUSH1 0x40
0xa58 MLOAD
0xa59 PUSH1 0x20
0xa5b ADD
0xa5c MSTORE
0xa5d PUSH1 0x40
0xa5f MLOAD
0xa60 PUSH1 0xe0
0xa62 PUSH1 0x2
0xa64 EXP
0xa65 PUSH4 0xffffffff
0xa6a DUP6
0xa6b AND
0xa6c MUL
0xa6d DUP2
0xa6e MSTORE
0xa6f PUSH1 0x1
0xa71 PUSH1 0xa0
0xa73 PUSH1 0x2
0xa75 EXP
0xa76 SUB
0xa77 SWAP1
0xa78 SWAP3
0xa79 AND
0xa7a PUSH1 0x4
0xa7c DUP4
0xa7d ADD
0xa7e MSTORE
0xa7f PUSH1 0x24
0xa81 DUP3
0xa82 ADD
0xa83 MSTORE
0xa84 PUSH1 0x44
0xa86 ADD
0xa87 PUSH1 0x20
0xa89 PUSH1 0x40
0xa8b MLOAD
0xa8c DUP1
0xa8d DUP4
0xa8e SUB
0xa8f DUP2
0xa90 PUSH1 0x0
0xa92 DUP8
0xa93 DUP1
0xa94 EXTCODESIZE
0xa95 ISZERO
0xa96 ISZERO
0xa97 PUSH2 0xa9f
0xa9a JUMPI
---
0xa3f: JUMPDEST 
0xa44: V985 = 0x1
0xa46: V986 = 0xa0
0xa48: V987 = 0x2
0xa4a: V988 = EXP 0x2 0xa0
0xa4b: V989 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4c: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0xa4d: V991 = 0xa9059cbb
0xa52: V992 = CALLER
0xa54: V993 = 0x0
0xa56: V994 = 0x40
0xa58: V995 = M[0x40]
0xa59: V996 = 0x20
0xa5b: V997 = ADD 0x20 V995
0xa5c: M[V997] = 0x0
0xa5d: V998 = 0x40
0xa5f: V999 = M[0x40]
0xa60: V1000 = 0xe0
0xa62: V1001 = 0x2
0xa64: V1002 = EXP 0x2 0xe0
0xa65: V1003 = 0xffffffff
0xa6b: V1004 = AND 0xa9059cbb 0xffffffff
0xa6c: V1005 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xa6e: M[V999] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa6f: V1006 = 0x1
0xa71: V1007 = 0xa0
0xa73: V1008 = 0x2
0xa75: V1009 = EXP 0x2 0xa0
0xa76: V1010 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa79: V1011 = AND V992 0xffffffffffffffffffffffffffffffffffffffff
0xa7a: V1012 = 0x4
0xa7d: V1013 = ADD V999 0x4
0xa7e: M[V1013] = V1011
0xa7f: V1014 = 0x24
0xa82: V1015 = ADD V999 0x24
0xa83: M[V1015] = V284
0xa84: V1016 = 0x44
0xa86: V1017 = ADD 0x44 V999
0xa87: V1018 = 0x20
0xa89: V1019 = 0x40
0xa8b: V1020 = M[0x40]
0xa8e: V1021 = SUB V1017 V1020
0xa90: V1022 = 0x0
0xa94: V1023 = EXTCODESIZE V990
0xa95: V1024 = ISZERO V1023
0xa96: V1025 = ISZERO V1024
0xa97: V1026 = 0xa9f
0xa9a: JUMPI 0xa9f V1025
---
Entry stack: [V12, 0xa9, V282, V284, V945, 0x9e281a98, V966]
Stack pops: 5
Stack additions: [S4, S3, V990, 0xa9059cbb, V1017, 0x20, V1020, V1021, V1020, 0x0, V990]
Exit stack: [V12, 0xa9, V282, V284, V990, 0xa9059cbb, V1017, 0x20, V1020, V1021, V1020, 0x0, V990]

================================

Block 0xa9b
[0xa9b:0xa9e]
---
Predecessors: [0xa3f]
Successors: []
---
0xa9b PUSH1 0x0
0xa9d DUP1
0xa9e REVERT
---
0xa9b: V1027 = 0x0
0xa9e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V282, V284, V990, 0xa9059cbb, V1017, 0x20, V1020, V1021, V1020, 0x0, V990]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V282, V284, V990, 0xa9059cbb, V1017, 0x20, V1020, V1021, V1020, 0x0, V990]

================================

Block 0xa9f
[0xa9f:0xaab]
---
Predecessors: [0xa3f]
Successors: [0xaac, 0xab0]
---
0xa9f JUMPDEST
0xaa0 PUSH2 0x2c6
0xaa3 GAS
0xaa4 SUB
0xaa5 CALL
0xaa6 ISZERO
0xaa7 ISZERO
0xaa8 PUSH2 0xab0
0xaab JUMPI
---
0xa9f: JUMPDEST 
0xaa0: V1028 = 0x2c6
0xaa3: V1029 = GAS
0xaa4: V1030 = SUB V1029 0x2c6
0xaa5: V1031 = CALL V1030 V990 0x0 V1020 V1021 V1020 0x20
0xaa6: V1032 = ISZERO V1031
0xaa7: V1033 = ISZERO V1032
0xaa8: V1034 = 0xab0
0xaab: JUMPI 0xab0 V1033
---
Entry stack: [V12, 0xa9, V282, V284, V990, 0xa9059cbb, V1017, 0x20, V1020, V1021, V1020, 0x0, V990]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V282, V284, V990, 0xa9059cbb, V1017]

================================

Block 0xaac
[0xaac:0xaaf]
---
Predecessors: [0xa9f]
Successors: []
---
0xaac PUSH1 0x0
0xaae DUP1
0xaaf REVERT
---
0xaac: V1035 = 0x0
0xaaf: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V282, V284, V990, 0xa9059cbb, V1017]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V282, V284, V990, 0xa9059cbb, V1017]

================================

Block 0xab0
[0xab0:0xac0]
---
Predecessors: [0xa9f]
Successors: [0x3bd, 0xac1]
---
0xab0 JUMPDEST
0xab1 POP
0xab2 POP
0xab3 POP
0xab4 PUSH1 0x40
0xab6 MLOAD
0xab7 DUP1
0xab8 MLOAD
0xab9 SWAP1
0xaba POP
0xabb ISZERO
0xabc ISZERO
0xabd PUSH2 0x3bd
0xac0 JUMPI
---
0xab0: JUMPDEST 
0xab4: V1036 = 0x40
0xab6: V1037 = M[0x40]
0xab8: V1038 = M[V1037]
0xabb: V1039 = ISZERO V1038
0xabc: V1040 = ISZERO V1039
0xabd: V1041 = 0x3bd
0xac0: JUMPI 0x3bd V1040
---
Entry stack: [V12, 0xa9, V282, V284, V990, 0xa9059cbb, V1017]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xa9, V282, V284]

================================

Block 0xac1
[0xac1:0xac4]
---
Predecessors: [0xab0]
Successors: []
---
0xac1 PUSH1 0x0
0xac3 DUP1
0xac4 REVERT
---
0xac1: V1042 = 0x0
0xac4: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V282, V284]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V282, V284]

================================

Block 0xac5
[0xac5:0xac5]
---
Predecessors: []
Successors: [0xac6]
---
0xac5 JUMPDEST
---
0xac5: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xac6
[0xac6:0xac9]
---
Predecessors: [0xac5]
Successors: []
Has unresolved jump.
---
0xac6 JUMPDEST
0xac7 POP
0xac8 POP
0xac9 JUMP
---
0xac6: JUMPDEST 
0xac9: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xaca
[0xaca:0xad8]
---
Predecessors: [0x37d]
Successors: [0x385]
---
0xaca JUMPDEST
0xacb PUSH1 0x2
0xacd SLOAD
0xace PUSH1 0x1
0xad0 PUSH1 0xa0
0xad2 PUSH1 0x2
0xad4 EXP
0xad5 SUB
0xad6 AND
0xad7 DUP2
0xad8 JUMP
---
0xaca: JUMPDEST 
0xacb: V1043 = 0x2
0xacd: V1044 = S[0x2]
0xace: V1045 = 0x1
0xad0: V1046 = 0xa0
0xad2: V1047 = 0x2
0xad4: V1048 = EXP 0x2 0xa0
0xad5: V1049 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad6: V1050 = AND 0xffffffffffffffffffffffffffffffffffffffff V1044
0xad8: JUMP 0x385
---
Entry stack: [V12, 0x385]
Stack pops: 1
Stack additions: [S0, V1050]
Exit stack: [V12, 0x385, V1050]

================================

Block 0xad9
[0xad9:0xb13]
---
Predecessors: [0x3a1]
Successors: [0xb14, 0xb18]
---
0xad9 JUMPDEST
0xada PUSH1 0x1
0xadc SLOAD
0xadd PUSH1 0x1
0xadf PUSH1 0xa0
0xae1 PUSH1 0x2
0xae3 EXP
0xae4 SUB
0xae5 AND
0xae6 PUSH4 0xd0e30db0
0xaeb CALLVALUE
0xaec PUSH1 0x40
0xaee MLOAD
0xaef DUP3
0xaf0 PUSH4 0xffffffff
0xaf5 AND
0xaf6 PUSH1 0xe0
0xaf8 PUSH1 0x2
0xafa EXP
0xafb MUL
0xafc DUP2
0xafd MSTORE
0xafe PUSH1 0x4
0xb00 ADD
0xb01 PUSH1 0x0
0xb03 PUSH1 0x40
0xb05 MLOAD
0xb06 DUP1
0xb07 DUP4
0xb08 SUB
0xb09 DUP2
0xb0a DUP6
0xb0b DUP9
0xb0c DUP1
0xb0d EXTCODESIZE
0xb0e ISZERO
0xb0f ISZERO
0xb10 PUSH2 0xb18
0xb13 JUMPI
---
0xad9: JUMPDEST 
0xada: V1051 = 0x1
0xadc: V1052 = S[0x1]
0xadd: V1053 = 0x1
0xadf: V1054 = 0xa0
0xae1: V1055 = 0x2
0xae3: V1056 = EXP 0x2 0xa0
0xae4: V1057 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae5: V1058 = AND 0xffffffffffffffffffffffffffffffffffffffff V1052
0xae6: V1059 = 0xd0e30db0
0xaeb: V1060 = CALLVALUE
0xaec: V1061 = 0x40
0xaee: V1062 = M[0x40]
0xaf0: V1063 = 0xffffffff
0xaf5: V1064 = AND 0xffffffff 0xd0e30db0
0xaf6: V1065 = 0xe0
0xaf8: V1066 = 0x2
0xafa: V1067 = EXP 0x2 0xe0
0xafb: V1068 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0xafd: M[V1062] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0xafe: V1069 = 0x4
0xb00: V1070 = ADD 0x4 V1062
0xb01: V1071 = 0x0
0xb03: V1072 = 0x40
0xb05: V1073 = M[0x40]
0xb08: V1074 = SUB V1070 V1073
0xb0d: V1075 = EXTCODESIZE V1058
0xb0e: V1076 = ISZERO V1075
0xb0f: V1077 = ISZERO V1076
0xb10: V1078 = 0xb18
0xb13: JUMPI 0xb18 V1077
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: [V1058, 0xd0e30db0, V1060, V1070, 0x0, V1073, V1074, V1073, V1060, V1058]
Exit stack: [V12, 0xa9, V1058, 0xd0e30db0, V1060, V1070, 0x0, V1073, V1074, V1073, V1060, V1058]

================================

Block 0xb14
[0xb14:0xb17]
---
Predecessors: [0xad9]
Successors: []
---
0xb14 PUSH1 0x0
0xb16 DUP1
0xb17 REVERT
---
0xb14: V1079 = 0x0
0xb17: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V1058, 0xd0e30db0, V1060, V1070, 0x0, V1073, V1074, V1073, V1060, V1058]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V1058, 0xd0e30db0, V1060, V1070, 0x0, V1073, V1074, V1073, V1060, V1058]

================================

Block 0xb18
[0xb18:0xb24]
---
Predecessors: [0xad9]
Successors: [0xb25, 0xb29]
---
0xb18 JUMPDEST
0xb19 PUSH2 0x25ee
0xb1c GAS
0xb1d SUB
0xb1e CALL
0xb1f ISZERO
0xb20 ISZERO
0xb21 PUSH2 0xb29
0xb24 JUMPI
---
0xb18: JUMPDEST 
0xb19: V1080 = 0x25ee
0xb1c: V1081 = GAS
0xb1d: V1082 = SUB V1081 0x25ee
0xb1e: V1083 = CALL V1082 V1058 V1060 V1073 V1074 V1073 0x0
0xb1f: V1084 = ISZERO V1083
0xb20: V1085 = ISZERO V1084
0xb21: V1086 = 0xb29
0xb24: JUMPI 0xb29 V1085
---
Entry stack: [V12, 0xa9, V1058, 0xd0e30db0, V1060, V1070, 0x0, V1073, V1074, V1073, V1060, V1058]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V1058, 0xd0e30db0, V1060, V1070]

================================

Block 0xb25
[0xb25:0xb28]
---
Predecessors: [0xb18]
Successors: []
---
0xb25 PUSH1 0x0
0xb27 DUP1
0xb28 REVERT
---
0xb25: V1087 = 0x0
0xb28: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V1058, 0xd0e30db0, V1060, V1070]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V1058, 0xd0e30db0, V1060, V1070]

================================

Block 0xb29
[0xb29:0xb2d]
---
Predecessors: [0xb18]
Successors: [0xb2e]
---
0xb29 JUMPDEST
0xb2a POP
0xb2b POP
0xb2c POP
0xb2d POP
---
0xb29: JUMPDEST 
---
Entry stack: [V12, 0xa9, V1058, 0xd0e30db0, V1060, V1070]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0xb2e
[0xb2e:0xb2f]
---
Predecessors: [0xb29]
Successors: [0xa9]
---
0xb2e JUMPDEST
0xb2f JUMP
---
0xb2e: JUMPDEST 
0xb2f: JUMP 0xa9
---
Entry stack: [V12, 0xa9]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xb30
[0xb30:0xb5b]
---
Predecessors: [0x4f2, 0x97f]
Successors: [0x5de, 0xb5c]
---
0xb30 JUMPDEST
0xb31 PUSH1 0x2
0xb33 SLOAD
0xb34 PUSH1 0x1
0xb36 PUSH1 0xa0
0xb38 PUSH1 0x2
0xb3a EXP
0xb3b SUB
0xb3c AND
0xb3d DUP2
0xb3e PUSH1 0x40
0xb40 MLOAD
0xb41 PUSH1 0x0
0xb43 PUSH1 0x40
0xb45 MLOAD
0xb46 DUP1
0xb47 DUP4
0xb48 SUB
0xb49 DUP2
0xb4a DUP6
0xb4b DUP8
0xb4c PUSH2 0x8796
0xb4f GAS
0xb50 SUB
0xb51 CALL
0xb52 SWAP3
0xb53 POP
0xb54 POP
0xb55 POP
0xb56 ISZERO
0xb57 ISZERO
0xb58 PUSH2 0x5de
0xb5b JUMPI
---
0xb30: JUMPDEST 
0xb31: V1088 = 0x2
0xb33: V1089 = S[0x2]
0xb34: V1090 = 0x1
0xb36: V1091 = 0xa0
0xb38: V1092 = 0x2
0xb3a: V1093 = EXP 0x2 0xa0
0xb3b: V1094 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3c: V1095 = AND 0xffffffffffffffffffffffffffffffffffffffff V1089
0xb3e: V1096 = 0x40
0xb40: V1097 = M[0x40]
0xb41: V1098 = 0x0
0xb43: V1099 = 0x40
0xb45: V1100 = M[0x40]
0xb48: V1101 = SUB V1097 V1100
0xb4c: V1102 = 0x8796
0xb4f: V1103 = GAS
0xb50: V1104 = SUB V1103 0x8796
0xb51: V1105 = CALL V1104 V1095 S0 V1100 V1101 V1100 0x0
0xb56: V1106 = ISZERO V1105
0xb57: V1107 = ISZERO V1106
0xb58: V1108 = 0x5de
0xb5b: JUMPI 0x5de V1107
---
Entry stack: [V12, S5, {0xa9, 0x992}, S3, S2, {0x3bd, 0x992}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S5, {0xa9, 0x992}, S3, S2, {0x3bd, 0x992}, S0]

================================

Block 0xb5c
[0xb5c:0xb5f]
---
Predecessors: [0xb30]
Successors: []
---
0xb5c PUSH1 0x0
0xb5e DUP1
0xb5f REVERT
---
0xb5c: V1109 = 0x0
0xb5f: REVERT 0x0 0x0
---
Entry stack: [V12, S5, {0xa9, 0x992}, S3, S2, {0x3bd, 0x992}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, {0xa9, 0x992}, S3, S2, {0x3bd, 0x992}, S0]

================================

Block 0xb60
[0xb60:0xb60]
---
Predecessors: []
Successors: [0xb61]
---
0xb60 JUMPDEST
---
0xb60: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb61
[0xb61:0xb8b]
---
Predecessors: [0xb60]
Successors: [0xb8c]
---
0xb61 JUMPDEST
0xb62 POP
0xb63 JUMP
0xb64 STOP
0xb65 LOG1
0xb66 PUSH6 0x627a7a723058
0xb6d SHA3
0xb6e CREATE2
0xb6f SWAP4
0xb70 DUP8
0xb71 PUSH23 0x826394ff1d250ff805b4ed9a82ba317c3589eb46aa0ee0
0xb89 MISSING 0x4b
0xb8a MISSING 0xb8
0xb8b ADD
---
0xb61: JUMPDEST 
0xb63: JUMP S1
0xb64: STOP 
0xb65: LOG S0 S1 S2
0xb66: V1110 = 0x627a7a723058
0xb6d: V1111 = SHA3 0x627a7a723058 S3
0xb6e: V1112 = CREATE2 V1111 S4 S5 S6
0xb71: V1113 = 0x826394ff1d250ff805b4ed9a82ba317c3589eb46aa0ee0
0xb89: MISSING 0x4b
0xb8a: MISSING 0xb8
0xb8b: V1114 = ADD S0 S1
---
Entry stack: []
Stack pops: 14
Stack additions: [V1114]
Exit stack: []

================================

Block 0xb8c
[0xb8c:0xb8f]
---
Predecessors: [0xb61]
Successors: []
---
0xb8c JUMPDEST
0xb8d MISSING 0x46
0xb8e STOP
0xb8f MISSING 0x29
---
0xb8c: JUMPDEST 
0xb8d: MISSING 0x46
0xb8e: STOP 
0xb8f: MISSING 0x29
---
Entry stack: [V1114]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0xa3cb72e
Entry block: 0xad
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0xad, 0xb4, 0xb8, 0x3ab, 0x3b4

Function 1:
Public function signature: 0x12065fe0
Entry block: 0x13e
Exit block: 0x151
Body: 0x13e, 0x145, 0x149, 0x151

Function 2:
Public function signature: 0x1389c9aa
Entry block: 0x163
Exit block: 0x1f2
Body: 0x163, 0x16a, 0x16e, 0x1f2, 0x445, 0x450, 0x457, 0x460, 0x461, 0x464

Function 3:
Public function signature: 0x2e1a7d4d
Entry block: 0x206
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x206, 0x20d, 0x211, 0x3bd, 0x3be, 0x46a, 0x484, 0x485, 0x48d, 0x49b, 0x49c, 0x4e1, 0x4e5, 0x4ee, 0x4f2, 0x992, 0x993

Function 4:
Public function signature: 0x3aecd0e3
Entry block: 0x21e
Exit block: 0x1f2
Body: 0x1f2, 0x21e, 0x225, 0x229, 0x504, 0x563

Function 5:
Public function signature: 0x477bddaa
Entry block: 0x24f
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x24f, 0x256, 0x25a, 0x589, 0x5a0, 0x5a1

Function 6:
Public function signature: 0x5256bb86
Entry block: 0x270
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x270, 0x277, 0x27b

Function 7:
Public function signature: 0x58d2d81a
Entry block: 0x2c1
Exit block: 0x2c8
Body: 0x1f2, 0x2c1, 0x2c8, 0x2cc

Function 8:
Public function signature: 0x5fd8c710
Entry block: 0x324
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x324, 0x32b, 0x32f, 0x967, 0x97e, 0x97f, 0x992, 0x993

Function 9:
Public function signature: 0x853828b6
Entry block: 0x339
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x339, 0x340, 0x344, 0x3bd, 0x3be, 0x46a, 0x484, 0x485, 0x48d, 0x49b, 0x49c, 0x4e1, 0x4e5, 0x4ee, 0x4f2, 0x992, 0x993, 0x995, 0x9ac, 0x9ad, 0x9b8

Function 10:
Public function signature: 0x9e281a98
Entry block: 0x34e
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x34e, 0x355, 0x359, 0x3bd, 0x3be, 0x992, 0x993, 0x9c0, 0x9d7, 0x9d8, 0xa2a, 0xa2e, 0xa3b, 0xa3f, 0xa9b, 0xa9f, 0xaac, 0xab0, 0xac1

Function 11:
Public function signature: 0xb2bdfa7b
Entry block: 0x372
Exit block: 0x385
Body: 0x372, 0x379, 0x37d, 0x385, 0xaca

Function 12:
Public function signature: 0xd0e30db0
Entry block: 0x3a1
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x3a1, 0xad9, 0xb14, 0xb18, 0xb25, 0xb29, 0xb2e

Function 13:
Public fallback function
Entry block: 0xa9
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab

Function 14:
Private function
Entry block: 0x799
Exit block: 0x584
Body: 0x567, 0x578, 0x584, 0x799, 0x7b9, 0x7d0, 0x7e7, 0x7fe, 0x815, 0x82c, 0x843, 0x85a, 0x871, 0x888, 0x89f

Function 15:
Private function
Entry block: 0xb30
Exit block: 0x5de
Body: 0x5de, 0xb30

Function 16:
Private function
Entry block: 0x5e1
Exit block: 0x796
Body: 0x5e1, 0x600, 0x617, 0x62e, 0x645, 0x65c, 0x673, 0x68a, 0x6a1, 0x6b8, 0x6cf, 0x6e6, 0x784, 0x791, 0x796

Function 17:
Private function
Entry block: 0x3c2
Exit block: 0x442
Body: 0x3c2, 0x425, 0x436, 0x442

