Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x40]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x40
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x40
0xc: JUMPI 0x40 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x42]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x24be4bfe
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x42
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x24be4bfe
0x3b: V13 = EQ V11 0x24be4bfe
0x3c: V14 = 0x42
0x3f: JUMPI 0x42 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x41]
---
Predecessors: [0x0, 0xd, 0x210]
Successors: []
---
0x40 JUMPDEST
0x41 STOP
---
0x40: JUMPDEST 
0x41: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x42
[0x42:0x49]
---
Predecessors: [0xd]
Successors: [0x4a, 0x4e]
---
0x42 JUMPDEST
0x43 CALLVALUE
0x44 DUP1
0x45 ISZERO
0x46 PUSH2 0x4e
0x49 JUMPI
---
0x42: JUMPDEST 
0x43: V15 = CALLVALUE
0x45: V16 = ISZERO V15
0x46: V17 = 0x4e
0x49: JUMPI 0x4e V16
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V15]
Exit stack: [V11, V15]

================================

Block 0x4a
[0x4a:0x4d]
---
Predecessors: [0x42]
Successors: []
---
0x4a PUSH1 0x0
0x4c DUP1
0x4d REVERT
---
0x4a: V18 = 0x0
0x4d: REVERT 0x0 0x0
---
Entry stack: [V11, V15]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V15]

================================

Block 0x4e
[0x4e:0x149]
---
Predecessors: [0x42]
Successors: [0x14a]
---
0x4e JUMPDEST
0x4f POP
0x50 PUSH2 0x40
0x53 PUSH1 0x4
0x55 CALLDATALOAD
0x56 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b PUSH1 0x24
0x6d CALLDATALOAD
0x6e DUP2
0x6f AND
0x70 SWAP1
0x71 PUSH1 0x44
0x73 CALLDATALOAD
0x74 AND
0x75 PUSH1 0x40
0x77 DUP1
0x78 MLOAD
0x79 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x9a PUSH1 0x20
0x9c DUP1
0x9d DUP4
0x9e ADD
0x9f SWAP2
0xa0 SWAP1
0xa1 SWAP2
0xa2 MSTORE
0xa3 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0xc4 PUSH1 0x21
0xc6 DUP4
0xc7 ADD
0xc8 MSTORE
0xc9 PUSH13 0x1000000000000000000000000
0xd7 ADDRESS
0xd8 MUL
0xd9 PUSH1 0x22
0xdb DUP4
0xdc ADD
0xdd MSTORE
0xde PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0xff PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x120 DUP8
0x121 MUL
0x122 AND
0x123 PUSH1 0x36
0x125 DUP4
0x126 ADD
0x127 MSTORE
0x128 DUP3
0x129 MLOAD
0x12a PUSH1 0x17
0x12c DUP2
0x12d DUP5
0x12e SUB
0x12f ADD
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x37
0x134 SWAP1
0x135 SWAP3
0x136 ADD
0x137 SWAP3
0x138 DUP4
0x139 SWAP1
0x13a MSTORE
0x13b DUP2
0x13c MLOAD
0x13d PUSH1 0x0
0x13f SWAP4
0x140 SWAP2
0x141 DUP3
0x142 SWAP2
0x143 SWAP1
0x144 DUP5
0x145 ADD
0x146 SWAP1
0x147 DUP1
0x148 DUP4
0x149 DUP4
---
0x4e: JUMPDEST 
0x50: V19 = 0x40
0x53: V20 = 0x4
0x55: V21 = CALLDATALOAD 0x4
0x56: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b: V23 = 0x24
0x6d: V24 = CALLDATALOAD 0x24
0x6f: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x71: V26 = 0x44
0x73: V27 = CALLDATALOAD 0x44
0x74: V28 = AND V27 0xffffffffffffffffffffffffffffffffffffffff
0x75: V29 = 0x40
0x78: V30 = M[0x40]
0x79: V31 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x9a: V32 = 0x20
0x9e: V33 = ADD V30 0x20
0xa2: M[V33] = 0xd600000000000000000000000000000000000000000000000000000000000000
0xa3: V34 = 0x9400000000000000000000000000000000000000000000000000000000000000
0xc4: V35 = 0x21
0xc7: V36 = ADD V30 0x21
0xc8: M[V36] = 0x9400000000000000000000000000000000000000000000000000000000000000
0xc9: V37 = 0x1000000000000000000000000
0xd7: V38 = ADDRESS
0xd8: V39 = MUL V38 0x1000000000000000000000000
0xd9: V40 = 0x22
0xdc: V41 = ADD V30 0x22
0xdd: M[V41] = V39
0xde: V42 = 0xff00000000000000000000000000000000000000000000000000000000000000
0xff: V43 = 0x100000000000000000000000000000000000000000000000000000000000000
0x121: V44 = MUL V21 0x100000000000000000000000000000000000000000000000000000000000000
0x122: V45 = AND V44 0xff00000000000000000000000000000000000000000000000000000000000000
0x123: V46 = 0x36
0x126: V47 = ADD V30 0x36
0x127: M[V47] = V45
0x129: V48 = M[0x40]
0x12a: V49 = 0x17
0x12e: V50 = SUB V30 V48
0x12f: V51 = ADD V50 0x17
0x131: M[V48] = V51
0x132: V52 = 0x37
0x136: V53 = ADD V30 0x37
0x13a: M[0x40] = V53
0x13c: V54 = M[V48]
0x13d: V55 = 0x0
0x145: V56 = ADD V48 0x20
---
Entry stack: [V11, V15]
Stack pops: 1
Stack additions: [0x40, V21, V25, V28, 0x0, V48, V53, V53, V56, V54, V54, V53, V56]
Exit stack: [V11, 0x40, V21, V25, V28, 0x0, V48, V53, V53, V56, V54, V54, V53, V56]

================================

Block 0x14a
[0x14a:0x152]
---
Predecessors: [0x4e, 0x153]
Successors: [0x153, 0x169]
---
0x14a JUMPDEST
0x14b PUSH1 0x20
0x14d DUP4
0x14e LT
0x14f PUSH2 0x169
0x152 JUMPI
---
0x14a: JUMPDEST 
0x14b: V57 = 0x20
0x14e: V58 = LT S2 0x20
0x14f: V59 = 0x169
0x152: JUMPI 0x169 V58
---
Entry stack: [V11, 0x40, V21, V25, V28, 0x0, V48, V53, V53, V56, V54, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x40, V21, V25, V28, 0x0, V48, V53, V53, V56, V54, S2, S1, S0]

================================

Block 0x153
[0x153:0x168]
---
Predecessors: [0x14a]
Successors: [0x14a]
---
0x153 DUP1
0x154 MLOAD
0x155 DUP3
0x156 MSTORE
0x157 PUSH1 0x1f
0x159 NOT
0x15a SWAP1
0x15b SWAP3
0x15c ADD
0x15d SWAP2
0x15e PUSH1 0x20
0x160 SWAP2
0x161 DUP3
0x162 ADD
0x163 SWAP2
0x164 ADD
0x165 PUSH2 0x14a
0x168 JUMP
---
0x154: V60 = M[S0]
0x156: M[S1] = V60
0x157: V61 = 0x1f
0x159: V62 = NOT 0x1f
0x15c: V63 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x15e: V64 = 0x20
0x162: V65 = ADD 0x20 S1
0x164: V66 = ADD 0x20 S0
0x165: V67 = 0x14a
0x168: JUMP 0x14a
---
Entry stack: [V11, 0x40, V21, V25, V28, 0x0, V48, V53, V53, V56, V54, S2, S1, S0]
Stack pops: 3
Stack additions: [V63, V65, V66]
Exit stack: [V11, 0x40, V21, V25, V28, 0x0, V48, V53, V53, V56, V54, V63, V65, V66]

================================

Block 0x169
[0x169:0x1cf]
---
Predecessors: [0x14a]
Successors: [0x218]
---
0x169 JUMPDEST
0x16a MLOAD
0x16b DUP2
0x16c MLOAD
0x16d PUSH1 0x20
0x16f SWAP4
0x170 SWAP1
0x171 SWAP4
0x172 SUB
0x173 PUSH2 0x100
0x176 EXP
0x177 PUSH1 0x0
0x179 NOT
0x17a ADD
0x17b DUP1
0x17c NOT
0x17d SWAP1
0x17e SWAP2
0x17f AND
0x180 SWAP3
0x181 AND
0x182 SWAP2
0x183 SWAP1
0x184 SWAP2
0x185 OR
0x186 SWAP1
0x187 MSTORE
0x188 PUSH1 0x40
0x18a MLOAD
0x18b SWAP3
0x18c ADD
0x18d DUP3
0x18e SWAP1
0x18f SUB
0x190 DUP3
0x191 SHA3
0x192 SWAP5
0x193 POP
0x194 POP
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa DUP5
0x1ab AND
0x1ac SWAP3
0x1ad POP
0x1ae PUSH8 0x16345785d8a0000
0x1b7 SWAP2
0x1b8 POP
0x1b9 PUSH1 0x0
0x1bb DUP2
0x1bc DUP2
0x1bd DUP2
0x1be DUP6
0x1bf DUP8
0x1c0 GAS
0x1c1 CALL
0x1c2 SWAP3
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 POP
0x1c7 DUP3
0x1c8 DUP3
0x1c9 PUSH2 0x1d0
0x1cc PUSH2 0x218
0x1cf JUMP
---
0x169: JUMPDEST 
0x16a: V68 = M[S0]
0x16c: V69 = M[S1]
0x16d: V70 = 0x20
0x172: V71 = SUB 0x20 S2
0x173: V72 = 0x100
0x176: V73 = EXP 0x100 V71
0x177: V74 = 0x0
0x179: V75 = NOT 0x0
0x17a: V76 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V73
0x17c: V77 = NOT V76
0x17f: V78 = AND V68 V77
0x181: V79 = AND V69 V76
0x185: V80 = OR V79 V78
0x187: M[S1] = V80
0x188: V81 = 0x40
0x18a: V82 = M[0x40]
0x18c: V83 = ADD V53 V54
0x18f: V84 = SUB V83 V82
0x191: V85 = SHA3 V82 V84
0x195: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V87 = AND V85 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V88 = 0x16345785d8a0000
0x1b9: V89 = 0x0
0x1c0: V90 = GAS
0x1c1: V91 = CALL V90 V87 0x16345785d8a0000 V82 0x0 V82 0x0
0x1c9: V92 = 0x1d0
0x1cc: V93 = 0x218
0x1cf: JUMP 0x218
---
Entry stack: [V11, 0x40, V21, V25, V28, 0x0, V48, V53, V53, V56, V54, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, V85, S10, S9, 0x1d0]
Exit stack: [V11, 0x40, V21, V25, V28, V85, V25, V28, 0x1d0]

================================

Block 0x1d0
[0x1d0:0x206]
---
Predecessors: [0x218]
Successors: [0x207, 0x210]
---
0x1d0 JUMPDEST
0x1d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e6 SWAP3
0x1e7 DUP4
0x1e8 AND
0x1e9 DUP2
0x1ea MSTORE
0x1eb SWAP2
0x1ec AND
0x1ed PUSH1 0x20
0x1ef DUP3
0x1f0 ADD
0x1f1 MSTORE
0x1f2 PUSH1 0x40
0x1f4 DUP1
0x1f5 MLOAD
0x1f6 SWAP2
0x1f7 DUP3
0x1f8 SWAP1
0x1f9 SUB
0x1fa ADD
0x1fb SWAP1
0x1fc PUSH1 0x0
0x1fe CREATE
0x1ff DUP1
0x200 ISZERO
0x201 DUP1
0x202 ISZERO
0x203 PUSH2 0x210
0x206 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x1ea: M[V116] = V95
0x1ec: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x1ed: V97 = 0x20
0x1f0: V98 = ADD V116 0x20
0x1f1: M[V98] = V96
0x1f2: V99 = 0x40
0x1f5: V100 = M[0x40]
0x1f9: V101 = SUB V116 V100
0x1fa: V102 = ADD V101 0x40
0x1fc: V103 = 0x0
0x1fe: V104 = CREATE 0x0 V100 V102
0x200: V105 = ISZERO V104
0x202: V106 = ISZERO V105
0x203: V107 = 0x210
0x206: JUMPI 0x210 V106
---
Entry stack: [V11, 0x40, V21, V25, V28, V85, V25, V28, V116]
Stack pops: 3
Stack additions: [V104, V105]
Exit stack: [V11, 0x40, V21, V25, V28, V85, V104, V105]

================================

Block 0x207
[0x207:0x20f]
---
Predecessors: [0x1d0]
Successors: []
---
0x207 RETURNDATASIZE
0x208 PUSH1 0x0
0x20a DUP1
0x20b RETURNDATACOPY
0x20c RETURNDATASIZE
0x20d PUSH1 0x0
0x20f REVERT
---
0x207: V108 = RETURNDATASIZE
0x208: V109 = 0x0
0x20b: RETURNDATACOPY 0x0 0x0 V108
0x20c: V110 = RETURNDATASIZE
0x20d: V111 = 0x0
0x20f: REVERT 0x0 V110
---
Entry stack: [V11, 0x40, V21, V25, V28, V85, V104, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x40, V21, V25, V28, V85, V104, V105]

================================

Block 0x210
[0x210:0x217]
---
Predecessors: [0x1d0]
Successors: [0x40]
---
0x210 JUMPDEST
0x211 POP
0x212 POP
0x213 POP
0x214 POP
0x215 POP
0x216 POP
0x217 JUMP
---
0x210: JUMPDEST 
0x217: JUMP 0x40
---
Entry stack: [V11, 0x40, V21, V25, V28, V85, V104, V105]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x218
[0x218:0x226]
---
Predecessors: [0x169]
Successors: [0x1d0]
---
0x218 JUMPDEST
0x219 PUSH1 0x40
0x21b MLOAD
0x21c PUSH1 0xdd
0x21e DUP1
0x21f PUSH2 0x228
0x222 DUP4
0x223 CODECOPY
0x224 ADD
0x225 SWAP1
0x226 JUMP
---
0x218: JUMPDEST 
0x219: V112 = 0x40
0x21b: V113 = M[0x40]
0x21c: V114 = 0xdd
0x21f: V115 = 0x228
0x223: CODECOPY V113 0x228 0xdd
0x224: V116 = ADD 0xdd V113
0x226: JUMP 0x1d0
---
Entry stack: [V11, 0x40, V21, V25, V28, V85, V25, V28, 0x1d0]
Stack pops: 1
Stack additions: [V116]
Exit stack: [V11, 0x40, V21, V25, V28, V85, V25, V28, V116]

================================

Block 0x227
[0x227:0x232]
---
Predecessors: []
Successors: [0x233]
---
0x227 STOP
0x228 PUSH1 0x80
0x22a PUSH1 0x40
0x22c MSTORE
0x22d CALLVALUE
0x22e DUP1
0x22f ISZERO
0x230 PUSH1 0xf
0x232 JUMPI
---
0x227: STOP 
0x228: V117 = 0x80
0x22a: V118 = 0x40
0x22c: M[0x40] = 0x80
0x22d: V119 = CALLVALUE
0x22f: V120 = ISZERO V119
0x230: V121 = 0xf
0x232: THROWI V120
---
Entry stack: []
Stack pops: 0
Stack additions: [V119]
Exit stack: []

================================

Block 0x233
[0x233:0x2dc]
---
Predecessors: [0x227]
Successors: [0x2dd]
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
0x237 JUMPDEST
0x238 POP
0x239 PUSH1 0x40
0x23b MLOAD
0x23c PUSH1 0x40
0x23e DUP1
0x23f PUSH2 0xdd
0x242 DUP4
0x243 CODECOPY
0x244 DUP2
0x245 ADD
0x246 PUSH1 0x40
0x248 DUP2
0x249 SWAP1
0x24a MSTORE
0x24b DUP2
0x24c MLOAD
0x24d PUSH1 0x20
0x24f SWAP1
0x250 SWAP3
0x251 ADD
0x252 MLOAD
0x253 PUSH1 0x0
0x255 DUP1
0x256 SLOAD
0x257 PUSH1 0x1
0x259 PUSH1 0xa0
0x25b PUSH1 0x2
0x25d EXP
0x25e SUB
0x25f NOT
0x260 AND
0x261 PUSH1 0x1
0x263 PUSH1 0xa0
0x265 PUSH1 0x2
0x267 EXP
0x268 SUB
0x269 DUP6
0x26a AND
0x26b SWAP1
0x26c DUP2
0x26d OR
0x26e DUP3
0x26f SSTORE
0x270 SWAP2
0x271 SWAP3
0x272 PUSH8 0x16345785d8a0000
0x27b SWAP2
0x27c DUP2
0x27d DUP2
0x27e DUP2
0x27f DUP6
0x280 DUP8
0x281 GAS
0x282 CALL
0x283 POP
0x284 POP
0x285 PUSH1 0x0
0x287 DUP1
0x288 SLOAD
0x289 PUSH1 0x40
0x28b DUP1
0x28c MLOAD
0x28d PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2ae DUP2
0x2af MSTORE
0x2b0 SWAP1
0x2b1 MLOAD
0x2b2 PUSH1 0x1
0x2b4 PUSH1 0xa0
0x2b6 PUSH1 0x2
0x2b8 EXP
0x2b9 SUB
0x2ba SWAP1
0x2bb SWAP3
0x2bc AND
0x2bd SWAP5
0x2be POP
0x2bf PUSH4 0x3ccfd60b
0x2c4 SWAP4
0x2c5 POP
0x2c6 PUSH1 0x4
0x2c8 DUP1
0x2c9 DUP3
0x2ca ADD
0x2cb SWAP4
0x2cc SWAP3
0x2cd SWAP2
0x2ce DUP3
0x2cf SWAP1
0x2d0 SUB
0x2d1 ADD
0x2d2 DUP2
0x2d3 DUP4
0x2d4 DUP8
0x2d5 DUP1
0x2d6 EXTCODESIZE
0x2d7 ISZERO
0x2d8 DUP1
0x2d9 ISZERO
0x2da PUSH1 0xb9
0x2dc JUMPI
---
0x233: V122 = 0x0
0x236: REVERT 0x0 0x0
0x237: JUMPDEST 
0x239: V123 = 0x40
0x23b: V124 = M[0x40]
0x23c: V125 = 0x40
0x23f: V126 = 0xdd
0x243: CODECOPY V124 0xdd 0x40
0x245: V127 = ADD V124 0x40
0x246: V128 = 0x40
0x24a: M[0x40] = V127
0x24c: V129 = M[V124]
0x24d: V130 = 0x20
0x251: V131 = ADD V124 0x20
0x252: V132 = M[V131]
0x253: V133 = 0x0
0x256: V134 = S[0x0]
0x257: V135 = 0x1
0x259: V136 = 0xa0
0x25b: V137 = 0x2
0x25d: V138 = EXP 0x2 0xa0
0x25e: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25f: V140 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x260: V141 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V134
0x261: V142 = 0x1
0x263: V143 = 0xa0
0x265: V144 = 0x2
0x267: V145 = EXP 0x2 0xa0
0x268: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26a: V147 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V148 = OR V147 V141
0x26f: S[0x0] = V148
0x272: V149 = 0x16345785d8a0000
0x281: V150 = GAS
0x282: V151 = CALL V150 V147 0x16345785d8a0000 V127 0x0 V127 0x0
0x285: V152 = 0x0
0x288: V153 = S[0x0]
0x289: V154 = 0x40
0x28c: V155 = M[0x40]
0x28d: V156 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2af: M[V155] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2b1: V157 = M[0x40]
0x2b2: V158 = 0x1
0x2b4: V159 = 0xa0
0x2b6: V160 = 0x2
0x2b8: V161 = EXP 0x2 0xa0
0x2b9: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bc: V163 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V164 = 0x3ccfd60b
0x2c6: V165 = 0x4
0x2ca: V166 = ADD V155 0x4
0x2d0: V167 = SUB V155 V157
0x2d1: V168 = ADD V167 0x4
0x2d6: V169 = EXTCODESIZE V163
0x2d7: V170 = ISZERO V169
0x2d9: V171 = ISZERO V170
0x2da: V172 = 0xb9
0x2dc: THROWI V171
---
Entry stack: [V119]
Stack pops: 0
Stack additions: [V170, V163, 0x0, V157, V168, V157, 0x0, V166, 0x3ccfd60b, V163, V132, V129]
Exit stack: []

================================

Block 0x2dd
[0x2dd:0x2ea]
---
Predecessors: [0x233]
Successors: [0x2eb]
---
0x2dd PUSH1 0x0
0x2df DUP1
0x2e0 REVERT
0x2e1 JUMPDEST
0x2e2 POP
0x2e3 GAS
0x2e4 CALL
0x2e5 ISZERO
0x2e6 DUP1
0x2e7 ISZERO
0x2e8 PUSH1 0xcc
0x2ea JUMPI
---
0x2dd: V173 = 0x0
0x2e0: REVERT 0x0 0x0
0x2e1: JUMPDEST 
0x2e3: V174 = GAS
0x2e4: V175 = CALL V174 S1 S2 S3 S4 S5 S6
0x2e5: V176 = ISZERO V175
0x2e7: V177 = ISZERO V176
0x2e8: V178 = 0xcc
0x2ea: THROWI V177
---
Entry stack: [V129, V132, V163, 0x3ccfd60b, V166, 0x0, V157, V168, V157, 0x0, V163, V170]
Stack pops: 0
Stack additions: [V176]
Exit stack: []

================================

Block 0x2eb
[0x2eb:0x32f]
---
Predecessors: [0x2dd]
Successors: []
---
0x2eb RETURNDATASIZE
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef RETURNDATACOPY
0x2f0 RETURNDATASIZE
0x2f1 PUSH1 0x0
0x2f3 REVERT
0x2f4 JUMPDEST
0x2f5 POP
0x2f6 POP
0x2f7 POP
0x2f8 POP
0x2f9 DUP1
0x2fa PUSH1 0x1
0x2fc PUSH1 0xa0
0x2fe PUSH1 0x2
0x300 EXP
0x301 SUB
0x302 AND
0x303 SELFDESTRUCT
0x304 STOP
0x305 LOG1
0x306 PUSH6 0x627a7a723058
0x30d SHA3
0x30e MISSING 0xc1
0x30f SWAP15
0x310 MISSING 0xe
0x311 INVALID
0x312 PUSH29 0x76c3b1760d62b4ec18126951f1a248ae111f7e1a35294494619f280029
---
0x2eb: V179 = RETURNDATASIZE
0x2ec: V180 = 0x0
0x2ef: RETURNDATACOPY 0x0 0x0 V179
0x2f0: V181 = RETURNDATASIZE
0x2f1: V182 = 0x0
0x2f3: REVERT 0x0 V181
0x2f4: JUMPDEST 
0x2fa: V183 = 0x1
0x2fc: V184 = 0xa0
0x2fe: V185 = 0x2
0x300: V186 = EXP 0x2 0xa0
0x301: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x302: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x303: SELFDESTRUCT V188
0x304: STOP 
0x305: LOG S0 S1 S2
0x306: V189 = 0x627a7a723058
0x30d: V190 = SHA3 0x627a7a723058 S3
0x30e: MISSING 0xc1
0x310: MISSING 0xe
0x311: INVALID 
0x312: V191 = 0x76c3b1760d62b4ec18126951f1a248ae111f7e1a35294494619f280029
---
Entry stack: [V176]
Stack pops: 0
Stack additions: [S4, V190, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, 0x76c3b1760d62b4ec18126951f1a248ae111f7e1a35294494619f280029]
Exit stack: []

================================

Function 0:
Public function signature: 0x24be4bfe
Entry block: 0x42
Exit block: 0x40
Body: 0x40, 0x42, 0x4a, 0x4e, 0x14a, 0x153, 0x169, 0x1d0, 0x207, 0x210, 0x218

Function 1:
Public fallback function
Entry block: 0x40
Exit block: 0x40
Body: 0x40

