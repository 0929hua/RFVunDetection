Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x53]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x53
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x53
0xc: JUMPI 0x53 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xd2]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x41c0e1b5
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xd2
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x41c0e1b5
0x22: V15 = EQ V13 0x41c0e1b5
0x23: V16 = 0xd2
0x26: JUMPI 0xd2 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xe5]
---
0x27 DUP1
0x28 PUSH4 0x505bc766
0x2d EQ
0x2e PUSH2 0xe5
0x31 JUMPI
---
0x28: V17 = 0x505bc766
0x2d: V18 = EQ 0x505bc766 V13
0x2e: V19 = 0xe5
0x31: JUMPI 0xe5 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x10a]
---
0x32 DUP1
0x33 PUSH4 0x8da5cb5b
0x38 EQ
0x39 PUSH2 0x10a
0x3c JUMPI
---
0x33: V20 = 0x8da5cb5b
0x38: V21 = EQ 0x8da5cb5b V13
0x39: V22 = 0x10a
0x3c: JUMPI 0x10a V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x139]
---
0x3d DUP1
0x3e PUSH4 0x93fc9fbe
0x43 EQ
0x44 PUSH2 0x139
0x47 JUMPI
---
0x3e: V23 = 0x93fc9fbe
0x43: V24 = EQ 0x93fc9fbe V13
0x44: V25 = 0x139
0x47: JUMPI 0x139 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x14c]
---
0x48 DUP1
0x49 PUSH4 0xde82efb4
0x4e EQ
0x4f PUSH2 0x14c
0x52 JUMPI
---
0x49: V26 = 0xde82efb4
0x4e: V27 = EQ 0xde82efb4 V13
0x4f: V28 = 0x14c
0x52: JUMPI 0x14c V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5e]
---
Predecessors: [0x0, 0x48]
Successors: [0x5f, 0xd0]
---
0x53 JUMPDEST
0x54 PUSH3 0x186a0
0x58 GAS
0x59 GT
0x5a ISZERO
0x5b PUSH2 0xd0
0x5e JUMPI
---
0x53: JUMPDEST 
0x54: V29 = 0x186a0
0x58: V30 = GAS
0x59: V31 = GT V30 0x186a0
0x5a: V32 = ISZERO V31
0x5b: V33 = 0xd0
0x5e: JUMPI 0xd0 V32
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x5f
[0x5f:0xcf]
---
Predecessors: [0x53]
Successors: [0xd0]
---
0x5f PUSH1 0x0
0x61 SLOAD
0x62 PUSH1 0x1
0x64 PUSH1 0xa0
0x66 PUSH1 0x2
0x68 EXP
0x69 SUB
0x6a AND
0x6b PUSH3 0x249f0
0x6f PUSH1 0x40
0x71 MLOAD
0x72 PUSH32 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x5
0x97 ADD
0x98 PUSH1 0x40
0x9a MLOAD
0x9b DUP1
0x9c SWAP2
0x9d SUB
0x9e SWAP1
0x9f SHA3
0xa0 PUSH1 0xe0
0xa2 PUSH1 0x2
0xa4 EXP
0xa5 SWAP1
0xa6 DIV
0xa7 SWAP1
0xa8 PUSH1 0x40
0xaa MLOAD
0xab DUP3
0xac PUSH4 0xffffffff
0xb1 AND
0xb2 PUSH1 0xe0
0xb4 PUSH1 0x2
0xb6 EXP
0xb7 MUL
0xb8 DUP2
0xb9 MSTORE
0xba PUSH1 0x4
0xbc ADD
0xbd PUSH1 0x0
0xbf PUSH1 0x40
0xc1 MLOAD
0xc2 DUP1
0xc3 DUP4
0xc4 SUB
0xc5 DUP2
0xc6 PUSH1 0x0
0xc8 DUP9
0xc9 DUP8
0xca CALL
0xcb POP
0xcc POP
0xcd POP
0xce POP
0xcf POP
---
0x5f: V34 = 0x0
0x61: V35 = S[0x0]
0x62: V36 = 0x1
0x64: V37 = 0xa0
0x66: V38 = 0x2
0x68: V39 = EXP 0x2 0xa0
0x69: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x6b: V42 = 0x249f0
0x6f: V43 = 0x40
0x71: V44 = M[0x40]
0x72: V45 = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x94: M[V44] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x95: V46 = 0x5
0x97: V47 = ADD 0x5 V44
0x98: V48 = 0x40
0x9a: V49 = M[0x40]
0x9d: V50 = SUB V47 V49
0x9f: V51 = SHA3 V49 V50
0xa0: V52 = 0xe0
0xa2: V53 = 0x2
0xa4: V54 = EXP 0x2 0xe0
0xa6: V55 = DIV V51 0x100000000000000000000000000000000000000000000000000000000
0xa8: V56 = 0x40
0xaa: V57 = M[0x40]
0xac: V58 = 0xffffffff
0xb1: V59 = AND 0xffffffff V55
0xb2: V60 = 0xe0
0xb4: V61 = 0x2
0xb6: V62 = EXP 0x2 0xe0
0xb7: V63 = MUL 0x100000000000000000000000000000000000000000000000000000000 V59
0xb9: M[V57] = V63
0xba: V64 = 0x4
0xbc: V65 = ADD 0x4 V57
0xbd: V66 = 0x0
0xbf: V67 = 0x40
0xc1: V68 = M[0x40]
0xc4: V69 = SUB V65 V68
0xc6: V70 = 0x0
0xca: V71 = CALL 0x249f0 V41 0x0 V68 V69 V68 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd0
[0xd0:0xd1]
---
Predecessors: [0x53, 0x5f, 0x19d, 0x285]
Successors: []
---
0xd0 JUMPDEST
0xd1 STOP
---
0xd0: JUMPDEST 
0xd1: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0xd]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V72 = CALLVALUE
0xd4: V73 = ISZERO V72
0xd5: V74 = 0xdd
0xd8: JUMPI 0xdd V73
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V75 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd2]
Successors: [0x15f]
---
0xdd JUMPDEST
0xde PUSH2 0xd0
0xe1 PUSH2 0x15f
0xe4 JUMP
---
0xdd: JUMPDEST 
0xde: V76 = 0xd0
0xe1: V77 = 0x15f
0xe4: JUMP 0x15f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V13, 0xd0]

================================

Block 0xe5
[0xe5:0xeb]
---
Predecessors: [0x27]
Successors: [0xec, 0xf0]
---
0xe5 JUMPDEST
0xe6 CALLVALUE
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xe5: JUMPDEST 
0xe6: V78 = CALLVALUE
0xe7: V79 = ISZERO V78
0xe8: V80 = 0xf0
0xeb: JUMPI 0xf0 V79
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xe5]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V81 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf0
[0xf0:0x109]
---
Predecessors: [0xe5]
Successors: [0x185]
---
0xf0 JUMPDEST
0xf1 PUSH2 0xd0
0xf4 PUSH1 0x1
0xf6 PUSH1 0xa0
0xf8 PUSH1 0x2
0xfa EXP
0xfb SUB
0xfc PUSH1 0x4
0xfe CALLDATALOAD
0xff DUP2
0x100 AND
0x101 SWAP1
0x102 PUSH1 0x24
0x104 CALLDATALOAD
0x105 AND
0x106 PUSH2 0x185
0x109 JUMP
---
0xf0: JUMPDEST 
0xf1: V82 = 0xd0
0xf4: V83 = 0x1
0xf6: V84 = 0xa0
0xf8: V85 = 0x2
0xfa: V86 = EXP 0x2 0xa0
0xfb: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfc: V88 = 0x4
0xfe: V89 = CALLDATALOAD 0x4
0x100: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x102: V91 = 0x24
0x104: V92 = CALLDATALOAD 0x24
0x105: V93 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x106: V94 = 0x185
0x109: JUMP 0x185
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd0, V90, V93]
Exit stack: [V13, 0xd0, V90, V93]

================================

Block 0x10a
[0x10a:0x110]
---
Predecessors: [0x32]
Successors: [0x111, 0x115]
---
0x10a JUMPDEST
0x10b CALLVALUE
0x10c ISZERO
0x10d PUSH2 0x115
0x110 JUMPI
---
0x10a: JUMPDEST 
0x10b: V95 = CALLVALUE
0x10c: V96 = ISZERO V95
0x10d: V97 = 0x115
0x110: JUMPI 0x115 V96
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x111
[0x111:0x114]
---
Predecessors: [0x10a]
Successors: []
---
0x111 PUSH1 0x0
0x113 DUP1
0x114 REVERT
---
0x111: V98 = 0x0
0x114: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x115
[0x115:0x11c]
---
Predecessors: [0x10a]
Successors: [0x24f]
---
0x115 JUMPDEST
0x116 PUSH2 0x11d
0x119 PUSH2 0x24f
0x11c JUMP
---
0x115: JUMPDEST 
0x116: V99 = 0x11d
0x119: V100 = 0x24f
0x11c: JUMP 0x24f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x11d]
Exit stack: [V13, 0x11d]

================================

Block 0x11d
[0x11d:0x138]
---
Predecessors: [0x24f, 0x25e]
Successors: []
---
0x11d JUMPDEST
0x11e PUSH1 0x40
0x120 MLOAD
0x121 PUSH1 0x1
0x123 PUSH1 0xa0
0x125 PUSH1 0x2
0x127 EXP
0x128 SUB
0x129 SWAP1
0x12a SWAP2
0x12b AND
0x12c DUP2
0x12d MSTORE
0x12e PUSH1 0x20
0x130 ADD
0x131 PUSH1 0x40
0x133 MLOAD
0x134 DUP1
0x135 SWAP2
0x136 SUB
0x137 SWAP1
0x138 RETURN
---
0x11d: JUMPDEST 
0x11e: V101 = 0x40
0x120: V102 = M[0x40]
0x121: V103 = 0x1
0x123: V104 = 0xa0
0x125: V105 = 0x2
0x127: V106 = EXP 0x2 0xa0
0x128: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12b: V108 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x12d: M[V102] = V108
0x12e: V109 = 0x20
0x130: V110 = ADD 0x20 V102
0x131: V111 = 0x40
0x133: V112 = M[0x40]
0x136: V113 = SUB V110 V112
0x138: RETURN V112 V113
---
Entry stack: [V13, 0x11d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x11d]

================================

Block 0x139
[0x139:0x13f]
---
Predecessors: [0x3d]
Successors: [0x140, 0x144]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x139: JUMPDEST 
0x13a: V114 = CALLVALUE
0x13b: V115 = ISZERO V114
0x13c: V116 = 0x144
0x13f: JUMPI 0x144 V115
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x139]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V117 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x139]
Successors: [0x25e]
---
0x144 JUMPDEST
0x145 PUSH2 0x11d
0x148 PUSH2 0x25e
0x14b JUMP
---
0x144: JUMPDEST 
0x145: V118 = 0x11d
0x148: V119 = 0x25e
0x14b: JUMP 0x25e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x11d]
Exit stack: [V13, 0x11d]

================================

Block 0x14c
[0x14c:0x152]
---
Predecessors: [0x48]
Successors: [0x153, 0x157]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0x14c: JUMPDEST 
0x14d: V120 = CALLVALUE
0x14e: V121 = ISZERO V120
0x14f: V122 = 0x157
0x152: JUMPI 0x157 V121
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x14c]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V123 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x157
[0x157:0x15e]
---
Predecessors: [0x14c]
Successors: [0x26d]
---
0x157 JUMPDEST
0x158 PUSH2 0xd0
0x15b PUSH2 0x26d
0x15e JUMP
---
0x157: JUMPDEST 
0x158: V124 = 0xd0
0x15b: V125 = 0x26d
0x15e: JUMP 0x26d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V13, 0xd0]

================================

Block 0x15f
[0x15f:0x175]
---
Predecessors: [0xdd]
Successors: [0x176, 0x177]
---
0x15f JUMPDEST
0x160 PUSH1 0x1
0x162 SLOAD
0x163 CALLER
0x164 PUSH1 0x1
0x166 PUSH1 0xa0
0x168 PUSH1 0x2
0x16a EXP
0x16b SUB
0x16c SWAP1
0x16d DUP2
0x16e AND
0x16f SWAP2
0x170 AND
0x171 EQ
0x172 PUSH2 0x177
0x175 JUMPI
---
0x15f: JUMPDEST 
0x160: V126 = 0x1
0x162: V127 = S[0x1]
0x163: V128 = CALLER
0x164: V129 = 0x1
0x166: V130 = 0xa0
0x168: V131 = 0x2
0x16a: V132 = EXP 0x2 0xa0
0x16b: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16e: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x170: V135 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x171: V136 = EQ V135 V134
0x172: V137 = 0x177
0x175: JUMPI 0x177 V136
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x176
[0x176:0x176]
---
Predecessors: [0x15f]
Successors: []
---
0x176 INVALID
---
0x176: INVALID 
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x177
[0x177:0x184]
---
Predecessors: [0x15f]
Successors: []
---
0x177 JUMPDEST
0x178 PUSH1 0x1
0x17a SLOAD
0x17b PUSH1 0x1
0x17d PUSH1 0xa0
0x17f PUSH1 0x2
0x181 EXP
0x182 SUB
0x183 AND
0x184 SELFDESTRUCT
---
0x177: JUMPDEST 
0x178: V138 = 0x1
0x17a: V139 = S[0x1]
0x17b: V140 = 0x1
0x17d: V141 = 0xa0
0x17f: V142 = 0x2
0x181: V143 = EXP 0x2 0xa0
0x182: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x184: SELFDESTRUCT V145
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x185
[0x185:0x19b]
---
Predecessors: [0xf0]
Successors: [0x19c, 0x19d]
---
0x185 JUMPDEST
0x186 PUSH1 0x1
0x188 SLOAD
0x189 CALLER
0x18a PUSH1 0x1
0x18c PUSH1 0xa0
0x18e PUSH1 0x2
0x190 EXP
0x191 SUB
0x192 SWAP1
0x193 DUP2
0x194 AND
0x195 SWAP2
0x196 AND
0x197 EQ
0x198 PUSH2 0x19d
0x19b JUMPI
---
0x185: JUMPDEST 
0x186: V146 = 0x1
0x188: V147 = S[0x1]
0x189: V148 = CALLER
0x18a: V149 = 0x1
0x18c: V150 = 0xa0
0x18e: V151 = 0x2
0x190: V152 = EXP 0x2 0xa0
0x191: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x196: V155 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x197: V156 = EQ V155 V154
0x198: V157 = 0x19d
0x19b: JUMPI 0x19d V156
---
Entry stack: [V13, 0xd0, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0, V90, V93]

================================

Block 0x19c
[0x19c:0x19c]
---
Predecessors: [0x185]
Successors: []
---
0x19c INVALID
---
0x19c: INVALID 
---
Entry stack: [V13, 0xd0, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0, V90, V93]

================================

Block 0x19d
[0x19d:0x24e]
---
Predecessors: [0x185]
Successors: [0xd0]
---
0x19d JUMPDEST
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 SLOAD
0x1a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b7 NOT
0x1b8 AND
0x1b9 PUSH1 0x1
0x1bb PUSH1 0xa0
0x1bd PUSH1 0x2
0x1bf EXP
0x1c0 SUB
0x1c1 DUP5
0x1c2 DUP2
0x1c3 AND
0x1c4 SWAP2
0x1c5 SWAP1
0x1c6 SWAP2
0x1c7 OR
0x1c8 SWAP2
0x1c9 DUP3
0x1ca SWAP1
0x1cb SSTORE
0x1cc AND
0x1cd PUSH3 0x30d40
0x1d1 PUSH7 0x38d7ea4c68000
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc PUSH32 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x13
0x201 ADD
0x202 PUSH1 0x40
0x204 MLOAD
0x205 DUP1
0x206 SWAP2
0x207 SUB
0x208 SWAP1
0x209 SHA3
0x20a PUSH1 0xe0
0x20c PUSH1 0x2
0x20e EXP
0x20f SWAP1
0x210 DIV
0x211 SWAP2
0x212 SWAP1
0x213 DUP5
0x214 PUSH1 0x40
0x216 MLOAD
0x217 PUSH1 0xe0
0x219 PUSH1 0x2
0x21b EXP
0x21c PUSH4 0xffffffff
0x221 DUP7
0x222 AND
0x223 MUL
0x224 DUP2
0x225 MSTORE
0x226 PUSH1 0x1
0x228 PUSH1 0xa0
0x22a PUSH1 0x2
0x22c EXP
0x22d SUB
0x22e SWAP1
0x22f SWAP2
0x230 AND
0x231 PUSH1 0x4
0x233 DUP3
0x234 ADD
0x235 MSTORE
0x236 PUSH1 0x24
0x238 ADD
0x239 PUSH1 0x0
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f DUP4
0x240 SUB
0x241 DUP2
0x242 DUP6
0x243 DUP10
0x244 DUP9
0x245 CALL
0x246 POP
0x247 POP
0x248 POP
0x249 POP
0x24a POP
0x24b POP
0x24c POP
0x24d POP
0x24e JUMP
---
0x19d: JUMPDEST 
0x19e: V158 = 0x0
0x1a1: V159 = S[0x0]
0x1a2: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b7: V161 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: V162 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V159
0x1b9: V163 = 0x1
0x1bb: V164 = 0xa0
0x1bd: V165 = 0x2
0x1bf: V166 = EXP 0x2 0xa0
0x1c0: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c3: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1c7: V169 = OR V168 V162
0x1cb: S[0x0] = V169
0x1cc: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1cd: V171 = 0x30d40
0x1d1: V172 = 0x38d7ea4c68000
0x1d9: V173 = 0x40
0x1db: V174 = M[0x40]
0x1dc: V175 = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x1fe: M[V174] = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x1ff: V176 = 0x13
0x201: V177 = ADD 0x13 V174
0x202: V178 = 0x40
0x204: V179 = M[0x40]
0x207: V180 = SUB V177 V179
0x209: V181 = SHA3 V179 V180
0x20a: V182 = 0xe0
0x20c: V183 = 0x2
0x20e: V184 = EXP 0x2 0xe0
0x210: V185 = DIV V181 0x100000000000000000000000000000000000000000000000000000000
0x214: V186 = 0x40
0x216: V187 = M[0x40]
0x217: V188 = 0xe0
0x219: V189 = 0x2
0x21b: V190 = EXP 0x2 0xe0
0x21c: V191 = 0xffffffff
0x222: V192 = AND V185 0xffffffff
0x223: V193 = MUL V192 0x100000000000000000000000000000000000000000000000000000000
0x225: M[V187] = V193
0x226: V194 = 0x1
0x228: V195 = 0xa0
0x22a: V196 = 0x2
0x22c: V197 = EXP 0x2 0xa0
0x22d: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x230: V199 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x231: V200 = 0x4
0x234: V201 = ADD V187 0x4
0x235: M[V201] = V199
0x236: V202 = 0x24
0x238: V203 = ADD 0x24 V187
0x239: V204 = 0x0
0x23b: V205 = 0x40
0x23d: V206 = M[0x40]
0x240: V207 = SUB V203 V206
0x245: V208 = CALL 0x30d40 V170 0x38d7ea4c68000 V206 V207 V206 0x0
0x24e: JUMP 0xd0
---
Entry stack: [V13, 0xd0, V90, V93]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x24f
[0x24f:0x25d]
---
Predecessors: [0x115]
Successors: [0x11d]
---
0x24f JUMPDEST
0x250 PUSH1 0x1
0x252 SLOAD
0x253 PUSH1 0x1
0x255 PUSH1 0xa0
0x257 PUSH1 0x2
0x259 EXP
0x25a SUB
0x25b AND
0x25c DUP2
0x25d JUMP
---
0x24f: JUMPDEST 
0x250: V209 = 0x1
0x252: V210 = S[0x1]
0x253: V211 = 0x1
0x255: V212 = 0xa0
0x257: V213 = 0x2
0x259: V214 = EXP 0x2 0xa0
0x25a: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25b: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x25d: JUMP 0x11d
---
Entry stack: [V13, 0x11d]
Stack pops: 1
Stack additions: [S0, V216]
Exit stack: [V13, 0x11d, V216]

================================

Block 0x25e
[0x25e:0x26c]
---
Predecessors: [0x144]
Successors: [0x11d]
---
0x25e JUMPDEST
0x25f PUSH1 0x0
0x261 SLOAD
0x262 PUSH1 0x1
0x264 PUSH1 0xa0
0x266 PUSH1 0x2
0x268 EXP
0x269 SUB
0x26a AND
0x26b DUP2
0x26c JUMP
---
0x25e: JUMPDEST 
0x25f: V217 = 0x0
0x261: V218 = S[0x0]
0x262: V219 = 0x1
0x264: V220 = 0xa0
0x266: V221 = 0x2
0x268: V222 = EXP 0x2 0xa0
0x269: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26a: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x26c: JUMP 0x11d
---
Entry stack: [V13, 0x11d]
Stack pops: 1
Stack additions: [S0, V224]
Exit stack: [V13, 0x11d, V224]

================================

Block 0x26d
[0x26d:0x283]
---
Predecessors: [0x157]
Successors: [0x284, 0x285]
---
0x26d JUMPDEST
0x26e PUSH1 0x1
0x270 SLOAD
0x271 CALLER
0x272 PUSH1 0x1
0x274 PUSH1 0xa0
0x276 PUSH1 0x2
0x278 EXP
0x279 SUB
0x27a SWAP1
0x27b DUP2
0x27c AND
0x27d SWAP2
0x27e AND
0x27f EQ
0x280 PUSH2 0x285
0x283 JUMPI
---
0x26d: JUMPDEST 
0x26e: V225 = 0x1
0x270: V226 = S[0x1]
0x271: V227 = CALLER
0x272: V228 = 0x1
0x274: V229 = 0xa0
0x276: V230 = 0x2
0x278: V231 = EXP 0x2 0xa0
0x279: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x27e: V234 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V235 = EQ V234 V233
0x280: V236 = 0x285
0x283: JUMPI 0x285 V235
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x284
[0x284:0x284]
---
Predecessors: [0x26d]
Successors: []
---
0x284 INVALID
---
0x284: INVALID 
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x285
[0x285:0x2f7]
---
Predecessors: [0x26d]
Successors: [0xd0]
---
0x285 JUMPDEST
0x286 PUSH1 0x0
0x288 SLOAD
0x289 PUSH1 0x1
0x28b PUSH1 0xa0
0x28d PUSH1 0x2
0x28f EXP
0x290 SUB
0x291 AND
0x292 PUSH3 0x249f0
0x296 PUSH1 0x40
0x298 MLOAD
0x299 PUSH32 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x2ba DUP2
0x2bb MSTORE
0x2bc PUSH1 0x5
0x2be ADD
0x2bf PUSH1 0x40
0x2c1 MLOAD
0x2c2 DUP1
0x2c3 SWAP2
0x2c4 SUB
0x2c5 SWAP1
0x2c6 SHA3
0x2c7 PUSH1 0xe0
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc SWAP1
0x2cd DIV
0x2ce SWAP1
0x2cf PUSH1 0x40
0x2d1 MLOAD
0x2d2 DUP3
0x2d3 PUSH4 0xffffffff
0x2d8 AND
0x2d9 PUSH1 0xe0
0x2db PUSH1 0x2
0x2dd EXP
0x2de MUL
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x4
0x2e3 ADD
0x2e4 PUSH1 0x0
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 DUP1
0x2ea DUP4
0x2eb SUB
0x2ec DUP2
0x2ed PUSH1 0x0
0x2ef DUP9
0x2f0 DUP8
0x2f1 CALL
0x2f2 POP
0x2f3 POP
0x2f4 POP
0x2f5 POP
0x2f6 POP
0x2f7 JUMP
---
0x285: JUMPDEST 
0x286: V237 = 0x0
0x288: V238 = S[0x0]
0x289: V239 = 0x1
0x28b: V240 = 0xa0
0x28d: V241 = 0x2
0x28f: V242 = EXP 0x2 0xa0
0x290: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x291: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x292: V245 = 0x249f0
0x296: V246 = 0x40
0x298: V247 = M[0x40]
0x299: V248 = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x2bb: M[V247] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x2bc: V249 = 0x5
0x2be: V250 = ADD 0x5 V247
0x2bf: V251 = 0x40
0x2c1: V252 = M[0x40]
0x2c4: V253 = SUB V250 V252
0x2c6: V254 = SHA3 V252 V253
0x2c7: V255 = 0xe0
0x2c9: V256 = 0x2
0x2cb: V257 = EXP 0x2 0xe0
0x2cd: V258 = DIV V254 0x100000000000000000000000000000000000000000000000000000000
0x2cf: V259 = 0x40
0x2d1: V260 = M[0x40]
0x2d3: V261 = 0xffffffff
0x2d8: V262 = AND 0xffffffff V258
0x2d9: V263 = 0xe0
0x2db: V264 = 0x2
0x2dd: V265 = EXP 0x2 0xe0
0x2de: V266 = MUL 0x100000000000000000000000000000000000000000000000000000000 V262
0x2e0: M[V260] = V266
0x2e1: V267 = 0x4
0x2e3: V268 = ADD 0x4 V260
0x2e4: V269 = 0x0
0x2e6: V270 = 0x40
0x2e8: V271 = M[0x40]
0x2eb: V272 = SUB V268 V271
0x2ed: V273 = 0x0
0x2f1: V274 = CALL 0x249f0 V244 0x0 V271 V272 V271 0x0
0x2f7: JUMP 0xd0
---
Entry stack: [V13, 0xd0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x2f8
[0x2f8:0x323]
---
Predecessors: []
Successors: []
---
0x2f8 STOP
0x2f9 LOG1
0x2fa PUSH6 0x627a7a723058
0x301 SHA3
0x302 OR
0x303 MISSING 0xbe
0x304 PUSH23 0xb47a75798cc55814162903c2b0cac070e2e50461894dcd
0x31c MISSING 0xc4
0x31d MISSING 0xee
0x31e MISSING 0x27
0x31f INVALID
0x320 MISSING 0xb4
0x321 MISSING 0xe8
0x322 STOP
0x323 MISSING 0x29
---
0x2f8: STOP 
0x2f9: LOG S0 S1 S2
0x2fa: V275 = 0x627a7a723058
0x301: V276 = SHA3 0x627a7a723058 S3
0x302: V277 = OR V276 S4
0x303: MISSING 0xbe
0x304: V278 = 0xb47a75798cc55814162903c2b0cac070e2e50461894dcd
0x31c: MISSING 0xc4
0x31d: MISSING 0xee
0x31e: MISSING 0x27
0x31f: INVALID 
0x320: MISSING 0xb4
0x321: MISSING 0xe8
0x322: STOP 
0x323: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V277, 0xb47a75798cc55814162903c2b0cac070e2e50461894dcd]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0xd2
Exit block: 0x176
Body: 0xd2, 0xd9, 0xdd, 0x15f, 0x176, 0x177

Function 1:
Public function signature: 0x505bc766
Entry block: 0xe5
Exit block: 0xd0
Body: 0xd0, 0xe5, 0xec, 0xf0, 0x185, 0x19c, 0x19d

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x10a
Exit block: 0x11d
Body: 0x10a, 0x111, 0x115, 0x11d, 0x24f

Function 3:
Public function signature: 0x93fc9fbe
Entry block: 0x139
Exit block: 0x11d
Body: 0x11d, 0x139, 0x140, 0x144, 0x25e

Function 4:
Public function signature: 0xde82efb4
Entry block: 0x14c
Exit block: 0xd0
Body: 0xd0, 0x14c, 0x153, 0x157, 0x26d, 0x284, 0x285

Function 5:
Public fallback function
Entry block: 0x53
Exit block: 0xd0
Body: 0x53, 0x5f, 0xd0

