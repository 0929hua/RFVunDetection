Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x67
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x67
0xa: JUMPI 0x67 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xa5]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1072cbea
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xa5
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1072cbea
0x20: V14 = EQ V12 0x1072cbea
0x21: V15 = 0xa5
0x24: JUMPI 0xa5 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xc9]
---
0x25 DUP1
0x26 PUSH4 0x6c3b58e0
0x2b EQ
0x2c PUSH2 0xc9
0x2f JUMPI
---
0x26: V16 = 0x6c3b58e0
0x2b: V17 = EQ 0x6c3b58e0 V12
0x2c: V18 = 0xc9
0x2f: JUMPI 0xc9 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xf6]
---
0x30 DUP1
0x31 PUSH4 0x73ffd5b7
0x36 EQ
0x37 PUSH2 0xf6
0x3a JUMPI
---
0x31: V19 = 0x73ffd5b7
0x36: V20 = EQ 0x73ffd5b7 V12
0x37: V21 = 0xf6
0x3a: JUMPI 0xf6 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x10e]
---
0x3b DUP1
0x3c PUSH4 0x7822ed49
0x41 EQ
0x42 PUSH2 0x10e
0x45 JUMPI
---
0x3c: V22 = 0x7822ed49
0x41: V23 = EQ 0x7822ed49 V12
0x42: V24 = 0x10e
0x45: JUMPI 0x10e V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x13d]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x13d
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x13d
0x50: JUMPI 0x13d V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x16c]
---
0x51 DUP1
0x52 PUSH4 0xdc5f346b
0x57 EQ
0x58 PUSH2 0x16c
0x5b JUMPI
---
0x52: V28 = 0xdc5f346b
0x57: V29 = EQ 0xdc5f346b V12
0x58: V30 = 0x16c
0x5b: JUMPI 0x16c V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x199]
---
0x5c DUP1
0x5d PUSH4 0xf444fdd8
0x62 EQ
0x63 PUSH2 0x199
0x66 JUMPI
---
0x5d: V31 = 0xf444fdd8
0x62: V32 = EQ 0xf444fdd8 V12
0x63: V33 = 0x199
0x66: JUMPI 0x199 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x67]
---
Predecessors: [0x0, 0x5c]
Successors: [0x68]
---
0x67 JUMPDEST
---
0x67: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x67]
Successors: [0x71, 0x75]
---
0x68 JUMPDEST
0x69 PUSH1 0x0
0x6b CALLVALUE
0x6c GT
0x6d PUSH2 0x75
0x70 JUMPI
---
0x68: JUMPDEST 
0x69: V34 = 0x0
0x6b: V35 = CALLVALUE
0x6c: V36 = GT V35 0x0
0x6d: V37 = 0x75
0x70: JUMPI 0x75 V36
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x71
[0x71:0x74]
---
Predecessors: [0x68]
Successors: []
---
0x71 PUSH1 0x0
0x73 DUP1
0x74 REVERT
---
0x71: V38 = 0x0
0x74: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75
[0x75:0xa0]
---
Predecessors: [0x68]
Successors: [0xa1, 0xa2]
---
0x75 JUMPDEST
0x76 PUSH1 0x1
0x78 SLOAD
0x79 PUSH1 0x1
0x7b PUSH1 0xa0
0x7d PUSH1 0x2
0x7f EXP
0x80 SUB
0x81 AND
0x82 CALLVALUE
0x83 PUSH1 0x40
0x85 MLOAD
0x86 PUSH1 0x0
0x88 PUSH1 0x40
0x8a MLOAD
0x8b DUP1
0x8c DUP4
0x8d SUB
0x8e DUP2
0x8f DUP6
0x90 DUP8
0x91 PUSH2 0x8796
0x94 GAS
0x95 SUB
0x96 CALL
0x97 SWAP3
0x98 POP
0x99 POP
0x9a POP
0x9b ISZERO
0x9c ISZERO
0x9d PUSH2 0xa2
0xa0 JUMPI
---
0x75: JUMPDEST 
0x76: V39 = 0x1
0x78: V40 = S[0x1]
0x79: V41 = 0x1
0x7b: V42 = 0xa0
0x7d: V43 = 0x2
0x7f: V44 = EXP 0x2 0xa0
0x80: V45 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81: V46 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0x82: V47 = CALLVALUE
0x83: V48 = 0x40
0x85: V49 = M[0x40]
0x86: V50 = 0x0
0x88: V51 = 0x40
0x8a: V52 = M[0x40]
0x8d: V53 = SUB V49 V52
0x91: V54 = 0x8796
0x94: V55 = GAS
0x95: V56 = SUB V55 0x8796
0x96: V57 = CALL V56 V46 V47 V52 V53 V52 0x0
0x9b: V58 = ISZERO V57
0x9c: V59 = ISZERO V58
0x9d: V60 = 0xa2
0xa0: JUMPI 0xa2 V59
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa1
[0xa1:0xa1]
---
Predecessors: [0x75]
Successors: []
---
0xa1 INVALID
---
0xa1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa2
[0xa2:0xa2]
---
Predecessors: [0x75, 0x335, 0x3a3, 0x44a, 0x4d4]
Successors: [0xa3]
---
0xa2 JUMPDEST
---
0xa2: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0xa2]
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa5
[0xa5:0xab]
---
Predecessors: [0xb]
Successors: [0xac, 0xb0]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa5: JUMPDEST 
0xa6: V61 = CALLVALUE
0xa7: V62 = ISZERO V61
0xa8: V63 = 0xb0
0xab: JUMPI 0xb0 V62
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa5]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V64 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb0
[0xb0:0xc6]
---
Predecessors: [0xa5]
Successors: [0x1c8]
---
0xb0 JUMPDEST
0xb1 PUSH2 0xa2
0xb4 PUSH1 0x1
0xb6 PUSH1 0xa0
0xb8 PUSH1 0x2
0xba EXP
0xbb SUB
0xbc PUSH1 0x4
0xbe CALLDATALOAD
0xbf AND
0xc0 PUSH1 0x24
0xc2 CALLDATALOAD
0xc3 PUSH2 0x1c8
0xc6 JUMP
---
0xb0: JUMPDEST 
0xb1: V65 = 0xa2
0xb4: V66 = 0x1
0xb6: V67 = 0xa0
0xb8: V68 = 0x2
0xba: V69 = EXP 0x2 0xa0
0xbb: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc: V71 = 0x4
0xbe: V72 = CALLDATALOAD 0x4
0xbf: V73 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V74 = 0x24
0xc2: V75 = CALLDATALOAD 0x24
0xc3: V76 = 0x1c8
0xc6: JUMP 0x1c8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa2, V73, V75]
Exit stack: [V12, 0xa2, V73, V75]

================================

Block 0xc7
[0xc7:0xc8]
---
Predecessors: []
Successors: []
---
0xc7 JUMPDEST
0xc8 STOP
---
0xc7: JUMPDEST 
0xc8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc9
[0xc9:0xcf]
---
Predecessors: [0x25]
Successors: [0xd0, 0xd4]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xc9: JUMPDEST 
0xca: V77 = CALLVALUE
0xcb: V78 = ISZERO V77
0xcc: V79 = 0xd4
0xcf: JUMPI 0xd4 V78
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xc9]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V80 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd4
[0xd4:0xf3]
---
Predecessors: [0xc9]
Successors: [0x33a]
---
0xd4 JUMPDEST
0xd5 PUSH2 0xa2
0xd8 PUSH1 0x1
0xda PUSH1 0xa0
0xdc PUSH1 0x2
0xde EXP
0xdf SUB
0xe0 PUSH1 0x4
0xe2 CALLDATALOAD
0xe3 AND
0xe4 PUSH1 0x24
0xe6 CALLDATALOAD
0xe7 PUSH1 0x44
0xe9 CALLDATALOAD
0xea PUSH1 0x64
0xec CALLDATALOAD
0xed PUSH1 0x84
0xef CALLDATALOAD
0xf0 PUSH2 0x33a
0xf3 JUMP
---
0xd4: JUMPDEST 
0xd5: V81 = 0xa2
0xd8: V82 = 0x1
0xda: V83 = 0xa0
0xdc: V84 = 0x2
0xde: V85 = EXP 0x2 0xa0
0xdf: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe0: V87 = 0x4
0xe2: V88 = CALLDATALOAD 0x4
0xe3: V89 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V90 = 0x24
0xe6: V91 = CALLDATALOAD 0x24
0xe7: V92 = 0x44
0xe9: V93 = CALLDATALOAD 0x44
0xea: V94 = 0x64
0xec: V95 = CALLDATALOAD 0x64
0xed: V96 = 0x84
0xef: V97 = CALLDATALOAD 0x84
0xf0: V98 = 0x33a
0xf3: JUMP 0x33a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa2, V89, V91, V93, V95, V97]
Exit stack: [V12, 0xa2, V89, V91, V93, V95, V97]

================================

Block 0xf4
[0xf4:0xf5]
---
Predecessors: []
Successors: []
---
0xf4 JUMPDEST
0xf5 STOP
---
0xf4: JUMPDEST 
0xf5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf6
[0xf6:0xfc]
---
Predecessors: [0x30]
Successors: [0xfd, 0x101]
---
0xf6 JUMPDEST
0xf7 CALLVALUE
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf6: JUMPDEST 
0xf7: V99 = CALLVALUE
0xf8: V100 = ISZERO V99
0xf9: V101 = 0x101
0xfc: JUMPI 0x101 V100
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf6]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V102 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x3aa]
---
0x101 JUMPDEST
0x102 PUSH2 0xa2
0x105 PUSH1 0x4
0x107 CALLDATALOAD
0x108 PUSH2 0x3aa
0x10b JUMP
---
0x101: JUMPDEST 
0x102: V103 = 0xa2
0x105: V104 = 0x4
0x107: V105 = CALLDATALOAD 0x4
0x108: V106 = 0x3aa
0x10b: JUMP 0x3aa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa2, V105]
Exit stack: [V12, 0xa2, V105]

================================

Block 0x10c
[0x10c:0x10d]
---
Predecessors: []
Successors: []
---
0x10c JUMPDEST
0x10d STOP
---
0x10c: JUMPDEST 
0x10d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10e
[0x10e:0x114]
---
Predecessors: [0x3b]
Successors: [0x115, 0x119]
---
0x10e JUMPDEST
0x10f CALLVALUE
0x110 ISZERO
0x111 PUSH2 0x119
0x114 JUMPI
---
0x10e: JUMPDEST 
0x10f: V107 = CALLVALUE
0x110: V108 = ISZERO V107
0x111: V109 = 0x119
0x114: JUMPI 0x119 V108
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x115
[0x115:0x118]
---
Predecessors: [0x10e]
Successors: []
---
0x115 PUSH1 0x0
0x117 DUP1
0x118 REVERT
---
0x115: V110 = 0x0
0x118: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x119
[0x119:0x120]
---
Predecessors: [0x10e]
Successors: [0x44d]
---
0x119 JUMPDEST
0x11a PUSH2 0x121
0x11d PUSH2 0x44d
0x120 JUMP
---
0x119: JUMPDEST 
0x11a: V111 = 0x121
0x11d: V112 = 0x44d
0x120: JUMP 0x44d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V12, 0x121]

================================

Block 0x121
[0x121:0x13c]
---
Predecessors: [0x44d, 0x45c, 0x4db]
Successors: []
---
0x121 JUMPDEST
0x122 PUSH1 0x40
0x124 MLOAD
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d SWAP1
0x12e SWAP2
0x12f AND
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 SWAP2
0x13a SUB
0x13b SWAP1
0x13c RETURN
---
0x121: JUMPDEST 
0x122: V113 = 0x40
0x124: V114 = M[0x40]
0x125: V115 = 0x1
0x127: V116 = 0xa0
0x129: V117 = 0x2
0x12b: V118 = EXP 0x2 0xa0
0x12c: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f: V120 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x131: M[V114] = V120
0x132: V121 = 0x20
0x134: V122 = ADD 0x20 V114
0x135: V123 = 0x40
0x137: V124 = M[0x40]
0x13a: V125 = SUB V122 V124
0x13c: RETURN V124 V125
---
Entry stack: [V12, 0x121, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x121]

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x46]
Successors: [0x144, 0x148]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13d: JUMPDEST 
0x13e: V126 = CALLVALUE
0x13f: V127 = ISZERO V126
0x140: V128 = 0x148
0x143: JUMPI 0x148 V127
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13d]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V129 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x148
[0x148:0x14f]
---
Predecessors: [0x13d]
Successors: [0x45c]
---
0x148 JUMPDEST
0x149 PUSH2 0x121
0x14c PUSH2 0x45c
0x14f JUMP
---
0x148: JUMPDEST 
0x149: V130 = 0x121
0x14c: V131 = 0x45c
0x14f: JUMP 0x45c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V12, 0x121]

================================

Block 0x150
[0x150:0x16b]
---
Predecessors: []
Successors: []
---
0x150 JUMPDEST
0x151 PUSH1 0x40
0x153 MLOAD
0x154 PUSH1 0x1
0x156 PUSH1 0xa0
0x158 PUSH1 0x2
0x15a EXP
0x15b SUB
0x15c SWAP1
0x15d SWAP2
0x15e AND
0x15f DUP2
0x160 MSTORE
0x161 PUSH1 0x20
0x163 ADD
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x150: JUMPDEST 
0x151: V132 = 0x40
0x153: V133 = M[0x40]
0x154: V134 = 0x1
0x156: V135 = 0xa0
0x158: V136 = 0x2
0x15a: V137 = EXP 0x2 0xa0
0x15b: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15e: V139 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x160: M[V133] = V139
0x161: V140 = 0x20
0x163: V141 = ADD 0x20 V133
0x164: V142 = 0x40
0x166: V143 = M[0x40]
0x169: V144 = SUB V141 V143
0x16b: RETURN V143 V144
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x16c
[0x16c:0x172]
---
Predecessors: [0x51]
Successors: [0x173, 0x177]
---
0x16c JUMPDEST
0x16d CALLVALUE
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x16c: JUMPDEST 
0x16d: V145 = CALLVALUE
0x16e: V146 = ISZERO V145
0x16f: V147 = 0x177
0x172: JUMPI 0x177 V146
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x16c]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V148 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x177
[0x177:0x196]
---
Predecessors: [0x16c]
Successors: [0x46b]
---
0x177 JUMPDEST
0x178 PUSH2 0xa2
0x17b PUSH1 0x1
0x17d PUSH1 0xa0
0x17f PUSH1 0x2
0x181 EXP
0x182 SUB
0x183 PUSH1 0x4
0x185 CALLDATALOAD
0x186 AND
0x187 PUSH1 0x24
0x189 CALLDATALOAD
0x18a PUSH1 0x44
0x18c CALLDATALOAD
0x18d PUSH1 0x64
0x18f CALLDATALOAD
0x190 PUSH1 0x84
0x192 CALLDATALOAD
0x193 PUSH2 0x46b
0x196 JUMP
---
0x177: JUMPDEST 
0x178: V149 = 0xa2
0x17b: V150 = 0x1
0x17d: V151 = 0xa0
0x17f: V152 = 0x2
0x181: V153 = EXP 0x2 0xa0
0x182: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V155 = 0x4
0x185: V156 = CALLDATALOAD 0x4
0x186: V157 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x187: V158 = 0x24
0x189: V159 = CALLDATALOAD 0x24
0x18a: V160 = 0x44
0x18c: V161 = CALLDATALOAD 0x44
0x18d: V162 = 0x64
0x18f: V163 = CALLDATALOAD 0x64
0x190: V164 = 0x84
0x192: V165 = CALLDATALOAD 0x84
0x193: V166 = 0x46b
0x196: JUMP 0x46b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa2, V157, V159, V161, V163, V165]
Exit stack: [V12, 0xa2, V157, V159, V161, V163, V165]

================================

Block 0x197
[0x197:0x198]
---
Predecessors: []
Successors: []
---
0x197 JUMPDEST
0x198 STOP
---
0x197: JUMPDEST 
0x198: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x199
[0x199:0x19f]
---
Predecessors: [0x5c]
Successors: [0x1a0, 0x1a4]
---
0x199 JUMPDEST
0x19a CALLVALUE
0x19b ISZERO
0x19c PUSH2 0x1a4
0x19f JUMPI
---
0x199: JUMPDEST 
0x19a: V167 = CALLVALUE
0x19b: V168 = ISZERO V167
0x19c: V169 = 0x1a4
0x19f: JUMPI 0x1a4 V168
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a0
[0x1a0:0x1a3]
---
Predecessors: [0x199]
Successors: []
---
0x1a0 PUSH1 0x0
0x1a2 DUP1
0x1a3 REVERT
---
0x1a0: V170 = 0x0
0x1a3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a4
[0x1a4:0x1ab]
---
Predecessors: [0x199]
Successors: [0x4db]
---
0x1a4 JUMPDEST
0x1a5 PUSH2 0x121
0x1a8 PUSH2 0x4db
0x1ab JUMP
---
0x1a4: JUMPDEST 
0x1a5: V171 = 0x121
0x1a8: V172 = 0x4db
0x1ab: JUMP 0x4db
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V12, 0x121]

================================

Block 0x1ac
[0x1ac:0x1c7]
---
Predecessors: []
Successors: []
---
0x1ac JUMPDEST
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 PUSH1 0x1
0x1b2 PUSH1 0xa0
0x1b4 PUSH1 0x2
0x1b6 EXP
0x1b7 SUB
0x1b8 SWAP1
0x1b9 SWAP2
0x1ba AND
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 DUP1
0x1c4 SWAP2
0x1c5 SUB
0x1c6 SWAP1
0x1c7 RETURN
---
0x1ac: JUMPDEST 
0x1ad: V173 = 0x40
0x1af: V174 = M[0x40]
0x1b0: V175 = 0x1
0x1b2: V176 = 0xa0
0x1b4: V177 = 0x2
0x1b6: V178 = EXP 0x2 0xa0
0x1b7: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ba: V180 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: M[V174] = V180
0x1bd: V181 = 0x20
0x1bf: V182 = ADD 0x20 V174
0x1c0: V183 = 0x40
0x1c2: V184 = M[0x40]
0x1c5: V185 = SUB V182 V184
0x1c7: RETURN V184 V185
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1c8
[0x1c8:0x1e2]
---
Predecessors: [0xb0]
Successors: [0x1e3, 0x1f6]
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x2
0x1cb SLOAD
0x1cc PUSH1 0x0
0x1ce SWAP1
0x1cf CALLER
0x1d0 PUSH1 0x1
0x1d2 PUSH1 0xa0
0x1d4 PUSH1 0x2
0x1d6 EXP
0x1d7 SUB
0x1d8 SWAP1
0x1d9 DUP2
0x1da AND
0x1db SWAP2
0x1dc AND
0x1dd EQ
0x1de DUP1
0x1df PUSH2 0x1f6
0x1e2 JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V186 = 0x2
0x1cb: V187 = S[0x2]
0x1cc: V188 = 0x0
0x1cf: V189 = CALLER
0x1d0: V190 = 0x1
0x1d2: V191 = 0xa0
0x1d4: V192 = 0x2
0x1d6: V193 = EXP 0x2 0xa0
0x1d7: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1da: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x1dc: V196 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x1dd: V197 = EQ V196 V195
0x1df: V198 = 0x1f6
0x1e2: JUMPI 0x1f6 V197
---
Entry stack: [V12, 0xa2, V73, V75]
Stack pops: 0
Stack additions: [0x0, V197]
Exit stack: [V12, 0xa2, V73, V75, 0x0, V197]

================================

Block 0x1e3
[0x1e3:0x1f5]
---
Predecessors: [0x1c8]
Successors: [0x1f6]
---
0x1e3 POP
0x1e4 PUSH1 0x0
0x1e6 SLOAD
0x1e7 CALLER
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 SWAP1
0x1f1 DUP2
0x1f2 AND
0x1f3 SWAP2
0x1f4 AND
0x1f5 EQ
---
0x1e4: V199 = 0x0
0x1e6: V200 = S[0x0]
0x1e7: V201 = CALLER
0x1e8: V202 = 0x1
0x1ea: V203 = 0xa0
0x1ec: V204 = 0x2
0x1ee: V205 = EXP 0x2 0xa0
0x1ef: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x1f4: V208 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x1f5: V209 = EQ V208 V207
---
Entry stack: [V12, 0xa2, V73, V75, 0x0, V197]
Stack pops: 1
Stack additions: [V209]
Exit stack: [V12, 0xa2, V73, V75, 0x0, V209]

================================

Block 0x1f6
[0x1f6:0x1fc]
---
Predecessors: [0x1c8, 0x1e3]
Successors: [0x1fd, 0x201]
---
0x1f6 JUMPDEST
0x1f7 ISZERO
0x1f8 ISZERO
0x1f9 PUSH2 0x201
0x1fc JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V210 = ISZERO S0
0x1f8: V211 = ISZERO V210
0x1f9: V212 = 0x201
0x1fc: JUMPI 0x201 V211
---
Entry stack: [V12, 0xa2, V73, V75, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, 0x0]

================================

Block 0x1fd
[0x1fd:0x200]
---
Predecessors: [0x1f6]
Successors: []
---
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 REVERT
---
0x1fd: V213 = 0x0
0x200: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V73, V75, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, 0x0]

================================

Block 0x201
[0x201:0x211]
---
Predecessors: [0x1f6]
Successors: [0x212, 0x213]
---
0x201 JUMPDEST
0x202 PUSH1 0x1
0x204 PUSH1 0xa0
0x206 PUSH1 0x2
0x208 EXP
0x209 SUB
0x20a DUP4
0x20b AND
0x20c ISZERO
0x20d ISZERO
0x20e PUSH2 0x213
0x211 JUMPI
---
0x201: JUMPDEST 
0x202: V214 = 0x1
0x204: V215 = 0xa0
0x206: V216 = 0x2
0x208: V217 = EXP 0x2 0xa0
0x209: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20b: V219 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V220 = ISZERO V219
0x20d: V221 = ISZERO V220
0x20e: V222 = 0x213
0x211: JUMPI 0x213 V221
---
Entry stack: [V12, 0xa2, V73, V75, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xa2, V73, V75, 0x0]

================================

Block 0x212
[0x212:0x212]
---
Predecessors: [0x201]
Successors: []
---
0x212 INVALID
---
0x212: INVALID 
---
Entry stack: [V12, 0xa2, V73, V75, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, 0x0]

================================

Block 0x213
[0x213:0x265]
---
Predecessors: [0x201]
Successors: [0x266, 0x26a]
---
0x213 JUMPDEST
0x214 DUP3
0x215 PUSH1 0x1
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c SUB
0x21d AND
0x21e PUSH4 0x70a08231
0x223 ADDRESS
0x224 PUSH1 0x0
0x226 PUSH1 0x40
0x228 MLOAD
0x229 PUSH1 0x20
0x22b ADD
0x22c MSTORE
0x22d PUSH1 0x40
0x22f MLOAD
0x230 PUSH1 0xe0
0x232 PUSH1 0x2
0x234 EXP
0x235 PUSH4 0xffffffff
0x23a DUP5
0x23b AND
0x23c MUL
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x1
0x241 PUSH1 0xa0
0x243 PUSH1 0x2
0x245 EXP
0x246 SUB
0x247 SWAP1
0x248 SWAP2
0x249 AND
0x24a PUSH1 0x4
0x24c DUP3
0x24d ADD
0x24e MSTORE
0x24f PUSH1 0x24
0x251 ADD
0x252 PUSH1 0x20
0x254 PUSH1 0x40
0x256 MLOAD
0x257 DUP1
0x258 DUP4
0x259 SUB
0x25a DUP2
0x25b PUSH1 0x0
0x25d DUP8
0x25e DUP1
0x25f EXTCODESIZE
0x260 ISZERO
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x213: JUMPDEST 
0x215: V223 = 0x1
0x217: V224 = 0xa0
0x219: V225 = 0x2
0x21b: V226 = EXP 0x2 0xa0
0x21c: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21d: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x21e: V229 = 0x70a08231
0x223: V230 = ADDRESS
0x224: V231 = 0x0
0x226: V232 = 0x40
0x228: V233 = M[0x40]
0x229: V234 = 0x20
0x22b: V235 = ADD 0x20 V233
0x22c: M[V235] = 0x0
0x22d: V236 = 0x40
0x22f: V237 = M[0x40]
0x230: V238 = 0xe0
0x232: V239 = 0x2
0x234: V240 = EXP 0x2 0xe0
0x235: V241 = 0xffffffff
0x23b: V242 = AND 0x70a08231 0xffffffff
0x23c: V243 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x23e: M[V237] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x23f: V244 = 0x1
0x241: V245 = 0xa0
0x243: V246 = 0x2
0x245: V247 = EXP 0x2 0xa0
0x246: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x249: V249 = AND V230 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V250 = 0x4
0x24d: V251 = ADD V237 0x4
0x24e: M[V251] = V249
0x24f: V252 = 0x24
0x251: V253 = ADD 0x24 V237
0x252: V254 = 0x20
0x254: V255 = 0x40
0x256: V256 = M[0x40]
0x259: V257 = SUB V253 V256
0x25b: V258 = 0x0
0x25f: V259 = EXTCODESIZE V228
0x260: V260 = ISZERO V259
0x261: V261 = ISZERO V260
0x262: V262 = 0x26a
0x265: JUMPI 0x26a V261
---
Entry stack: [V12, 0xa2, V73, V75, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V228, 0x70a08231, V253, 0x20, V256, V257, V256, 0x0, V228]
Exit stack: [V12, 0xa2, V73, V75, 0x0, V228, 0x70a08231, V253, 0x20, V256, V257, V256, 0x0, V228]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x213]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V263 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V73, V75, 0x0, V228, 0x70a08231, V253, 0x20, V256, V257, V256, 0x0, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, 0x0, V228, 0x70a08231, V253, 0x20, V256, V257, V256, 0x0, V228]

================================

Block 0x26a
[0x26a:0x276]
---
Predecessors: [0x213]
Successors: [0x277, 0x27b]
---
0x26a JUMPDEST
0x26b PUSH2 0x2c6
0x26e GAS
0x26f SUB
0x270 CALL
0x271 ISZERO
0x272 ISZERO
0x273 PUSH2 0x27b
0x276 JUMPI
---
0x26a: JUMPDEST 
0x26b: V264 = 0x2c6
0x26e: V265 = GAS
0x26f: V266 = SUB V265 0x2c6
0x270: V267 = CALL V266 V228 0x0 V256 V257 V256 0x20
0x271: V268 = ISZERO V267
0x272: V269 = ISZERO V268
0x273: V270 = 0x27b
0x276: JUMPI 0x27b V269
---
Entry stack: [V12, 0xa2, V73, V75, 0x0, V228, 0x70a08231, V253, 0x20, V256, V257, V256, 0x0, V228]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, 0x0, V228, 0x70a08231, V253]

================================

Block 0x277
[0x277:0x27a]
---
Predecessors: [0x26a]
Successors: []
---
0x277 PUSH1 0x0
0x279 DUP1
0x27a REVERT
---
0x277: V271 = 0x0
0x27a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V73, V75, 0x0, V228, 0x70a08231, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, 0x0, V228, 0x70a08231, V253]

================================

Block 0x27b
[0x27b:0x290]
---
Predecessors: [0x26a]
Successors: [0x291, 0x296]
---
0x27b JUMPDEST
0x27c POP
0x27d POP
0x27e POP
0x27f PUSH1 0x40
0x281 MLOAD
0x282 DUP1
0x283 MLOAD
0x284 SWAP2
0x285 POP
0x286 POP
0x287 PUSH1 0x0
0x289 DUP2
0x28a GT
0x28b DUP1
0x28c ISZERO
0x28d PUSH2 0x296
0x290 JUMPI
---
0x27b: JUMPDEST 
0x27f: V272 = 0x40
0x281: V273 = M[0x40]
0x283: V274 = M[V273]
0x287: V275 = 0x0
0x28a: V276 = GT V274 0x0
0x28c: V277 = ISZERO V276
0x28d: V278 = 0x296
0x290: JUMPI 0x296 V277
---
Entry stack: [V12, 0xa2, V73, V75, 0x0, V228, 0x70a08231, V253]
Stack pops: 4
Stack additions: [V274, V276]
Exit stack: [V12, 0xa2, V73, V75, V274, V276]

================================

Block 0x291
[0x291:0x295]
---
Predecessors: [0x27b]
Successors: [0x296]
---
0x291 POP
0x292 PUSH1 0x0
0x294 DUP3
0x295 GT
---
0x292: V279 = 0x0
0x295: V280 = GT V75 0x0
---
Entry stack: [V12, 0xa2, V73, V75, V274, V276]
Stack pops: 3
Stack additions: [S2, S1, V280]
Exit stack: [V12, 0xa2, V73, V75, V274, V280]

================================

Block 0x296
[0x296:0x29c]
---
Predecessors: [0x27b, 0x291]
Successors: [0x29d, 0x2a2]
---
0x296 JUMPDEST
0x297 DUP1
0x298 ISZERO
0x299 PUSH2 0x2a2
0x29c JUMPI
---
0x296: JUMPDEST 
0x298: V281 = ISZERO S0
0x299: V282 = 0x2a2
0x29c: JUMPI 0x2a2 V281
---
Entry stack: [V12, 0xa2, V73, V75, V274, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xa2, V73, V75, V274, S0]

================================

Block 0x29d
[0x29d:0x2a1]
---
Predecessors: [0x296]
Successors: [0x2a2]
---
0x29d POP
0x29e DUP2
0x29f DUP2
0x2a0 LT
0x2a1 ISZERO
---
0x2a0: V283 = LT V274 V75
0x2a1: V284 = ISZERO V283
---
Entry stack: [V12, 0xa2, V73, V75, V274, S0]
Stack pops: 3
Stack additions: [S2, S1, V284]
Exit stack: [V12, 0xa2, V73, V75, V274, V284]

================================

Block 0x2a2
[0x2a2:0x2a8]
---
Predecessors: [0x296, 0x29d]
Successors: [0x2a9, 0x2ad]
---
0x2a2 JUMPDEST
0x2a3 ISZERO
0x2a4 ISZERO
0x2a5 PUSH2 0x2ad
0x2a8 JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V285 = ISZERO S0
0x2a4: V286 = ISZERO V285
0x2a5: V287 = 0x2ad
0x2a8: JUMPI 0x2ad V286
---
Entry stack: [V12, 0xa2, V73, V75, V274, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, V274]

================================

Block 0x2a9
[0x2a9:0x2ac]
---
Predecessors: [0x2a2]
Successors: []
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
---
0x2a9: V288 = 0x0
0x2ac: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V73, V75, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, V274]

================================

Block 0x2ad
[0x2ad:0x30b]
---
Predecessors: [0x2a2]
Successors: [0x30c, 0x310]
---
0x2ad JUMPDEST
0x2ae PUSH1 0x1
0x2b0 SLOAD
0x2b1 PUSH1 0x1
0x2b3 PUSH1 0xa0
0x2b5 PUSH1 0x2
0x2b7 EXP
0x2b8 SUB
0x2b9 DUP1
0x2ba DUP6
0x2bb AND
0x2bc SWAP2
0x2bd PUSH4 0xa9059cbb
0x2c2 SWAP2
0x2c3 AND
0x2c4 DUP5
0x2c5 PUSH1 0x0
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd MSTORE
0x2ce PUSH1 0x40
0x2d0 MLOAD
0x2d1 PUSH1 0xe0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 PUSH4 0xffffffff
0x2db DUP6
0x2dc AND
0x2dd MUL
0x2de DUP2
0x2df MSTORE
0x2e0 PUSH1 0x1
0x2e2 PUSH1 0xa0
0x2e4 PUSH1 0x2
0x2e6 EXP
0x2e7 SUB
0x2e8 SWAP1
0x2e9 SWAP3
0x2ea AND
0x2eb PUSH1 0x4
0x2ed DUP4
0x2ee ADD
0x2ef MSTORE
0x2f0 PUSH1 0x24
0x2f2 DUP3
0x2f3 ADD
0x2f4 MSTORE
0x2f5 PUSH1 0x44
0x2f7 ADD
0x2f8 PUSH1 0x20
0x2fa PUSH1 0x40
0x2fc MLOAD
0x2fd DUP1
0x2fe DUP4
0x2ff SUB
0x300 DUP2
0x301 PUSH1 0x0
0x303 DUP8
0x304 DUP1
0x305 EXTCODESIZE
0x306 ISZERO
0x307 ISZERO
0x308 PUSH2 0x310
0x30b JUMPI
---
0x2ad: JUMPDEST 
0x2ae: V289 = 0x1
0x2b0: V290 = S[0x1]
0x2b1: V291 = 0x1
0x2b3: V292 = 0xa0
0x2b5: V293 = 0x2
0x2b7: V294 = EXP 0x2 0xa0
0x2b8: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bb: V296 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V297 = 0xa9059cbb
0x2c3: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x2c5: V299 = 0x0
0x2c7: V300 = 0x40
0x2c9: V301 = M[0x40]
0x2ca: V302 = 0x20
0x2cc: V303 = ADD 0x20 V301
0x2cd: M[V303] = 0x0
0x2ce: V304 = 0x40
0x2d0: V305 = M[0x40]
0x2d1: V306 = 0xe0
0x2d3: V307 = 0x2
0x2d5: V308 = EXP 0x2 0xe0
0x2d6: V309 = 0xffffffff
0x2dc: V310 = AND 0xa9059cbb 0xffffffff
0x2dd: V311 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2df: M[V305] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2e0: V312 = 0x1
0x2e2: V313 = 0xa0
0x2e4: V314 = 0x2
0x2e6: V315 = EXP 0x2 0xa0
0x2e7: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V317 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V318 = 0x4
0x2ee: V319 = ADD V305 0x4
0x2ef: M[V319] = V317
0x2f0: V320 = 0x24
0x2f3: V321 = ADD V305 0x24
0x2f4: M[V321] = V75
0x2f5: V322 = 0x44
0x2f7: V323 = ADD 0x44 V305
0x2f8: V324 = 0x20
0x2fa: V325 = 0x40
0x2fc: V326 = M[0x40]
0x2ff: V327 = SUB V323 V326
0x301: V328 = 0x0
0x305: V329 = EXTCODESIZE V296
0x306: V330 = ISZERO V329
0x307: V331 = ISZERO V330
0x308: V332 = 0x310
0x30b: JUMPI 0x310 V331
---
Entry stack: [V12, 0xa2, V73, V75, V274]
Stack pops: 3
Stack additions: [S2, S1, S0, V296, 0xa9059cbb, V323, 0x20, V326, V327, V326, 0x0, V296]
Exit stack: [V12, 0xa2, V73, V75, V274, V296, 0xa9059cbb, V323, 0x20, V326, V327, V326, 0x0, V296]

================================

Block 0x30c
[0x30c:0x30f]
---
Predecessors: [0x2ad]
Successors: []
---
0x30c PUSH1 0x0
0x30e DUP1
0x30f REVERT
---
0x30c: V333 = 0x0
0x30f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V73, V75, V274, V296, 0xa9059cbb, V323, 0x20, V326, V327, V326, 0x0, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, V274, V296, 0xa9059cbb, V323, 0x20, V326, V327, V326, 0x0, V296]

================================

Block 0x310
[0x310:0x31c]
---
Predecessors: [0x2ad]
Successors: [0x31d, 0x321]
---
0x310 JUMPDEST
0x311 PUSH2 0x2c6
0x314 GAS
0x315 SUB
0x316 CALL
0x317 ISZERO
0x318 ISZERO
0x319 PUSH2 0x321
0x31c JUMPI
---
0x310: JUMPDEST 
0x311: V334 = 0x2c6
0x314: V335 = GAS
0x315: V336 = SUB V335 0x2c6
0x316: V337 = CALL V336 V296 0x0 V326 V327 V326 0x20
0x317: V338 = ISZERO V337
0x318: V339 = ISZERO V338
0x319: V340 = 0x321
0x31c: JUMPI 0x321 V339
---
Entry stack: [V12, 0xa2, V73, V75, V274, V296, 0xa9059cbb, V323, 0x20, V326, V327, V326, 0x0, V296]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, V274, V296, 0xa9059cbb, V323]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x310]
Successors: []
---
0x31d PUSH1 0x0
0x31f DUP1
0x320 REVERT
---
0x31d: V341 = 0x0
0x320: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V73, V75, V274, V296, 0xa9059cbb, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, V274, V296, 0xa9059cbb, V323]

================================

Block 0x321
[0x321:0x331]
---
Predecessors: [0x310]
Successors: [0x332, 0x333]
---
0x321 JUMPDEST
0x322 POP
0x323 POP
0x324 POP
0x325 PUSH1 0x40
0x327 MLOAD
0x328 DUP1
0x329 MLOAD
0x32a SWAP1
0x32b POP
0x32c ISZERO
0x32d ISZERO
0x32e PUSH2 0x333
0x331 JUMPI
---
0x321: JUMPDEST 
0x325: V342 = 0x40
0x327: V343 = M[0x40]
0x329: V344 = M[V343]
0x32c: V345 = ISZERO V344
0x32d: V346 = ISZERO V345
0x32e: V347 = 0x333
0x331: JUMPI 0x333 V346
---
Entry stack: [V12, 0xa2, V73, V75, V274, V296, 0xa9059cbb, V323]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, V274]

================================

Block 0x332
[0x332:0x332]
---
Predecessors: [0x321]
Successors: []
---
0x332 INVALID
---
0x332: INVALID 
---
Entry stack: [V12, 0xa2, V73, V75, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, V274]

================================

Block 0x333
[0x333:0x333]
---
Predecessors: [0x321]
Successors: [0x334]
---
0x333 JUMPDEST
---
0x333: JUMPDEST 
---
Entry stack: [V12, 0xa2, V73, V75, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, V274]

================================

Block 0x334
[0x334:0x334]
---
Predecessors: [0x333]
Successors: [0x335]
---
0x334 JUMPDEST
---
0x334: JUMPDEST 
---
Entry stack: [V12, 0xa2, V73, V75, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V73, V75, V274]

================================

Block 0x335
[0x335:0x339]
---
Predecessors: [0x334]
Successors: [0xa2]
---
0x335 JUMPDEST
0x336 POP
0x337 POP
0x338 POP
0x339 JUMP
---
0x335: JUMPDEST 
0x339: JUMP 0xa2
---
Entry stack: [V12, 0xa2, V73, V75, V274]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x33a
[0x33a:0x350]
---
Predecessors: [0xd4]
Successors: [0x351, 0x355]
---
0x33a JUMPDEST
0x33b PUSH1 0x0
0x33d SLOAD
0x33e CALLER
0x33f PUSH1 0x1
0x341 PUSH1 0xa0
0x343 PUSH1 0x2
0x345 EXP
0x346 SUB
0x347 SWAP1
0x348 DUP2
0x349 AND
0x34a SWAP2
0x34b AND
0x34c EQ
0x34d PUSH2 0x355
0x350 JUMPI
---
0x33a: JUMPDEST 
0x33b: V348 = 0x0
0x33d: V349 = S[0x0]
0x33e: V350 = CALLER
0x33f: V351 = 0x1
0x341: V352 = 0xa0
0x343: V353 = 0x2
0x345: V354 = EXP 0x2 0xa0
0x346: V355 = SUB 0x10000000000000000000000000000000000000000 0x1
0x349: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x34b: V357 = AND V349 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V358 = EQ V357 V356
0x34d: V359 = 0x355
0x350: JUMPI 0x355 V358
---
Entry stack: [V12, 0xa2, V89, V91, V93, V95, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V89, V91, V93, V95, V97]

================================

Block 0x351
[0x351:0x354]
---
Predecessors: [0x33a]
Successors: []
---
0x351 PUSH1 0x0
0x353 DUP1
0x354 REVERT
---
0x351: V360 = 0x0
0x354: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V89, V91, V93, V95, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V89, V91, V93, V95, V97]

================================

Block 0x355
[0x355:0x365]
---
Predecessors: [0x33a]
Successors: [0x366, 0x36a]
---
0x355 JUMPDEST
0x356 PUSH1 0x1
0x358 PUSH1 0xa0
0x35a PUSH1 0x2
0x35c EXP
0x35d SUB
0x35e DUP6
0x35f AND
0x360 ISZERO
0x361 ISZERO
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x355: JUMPDEST 
0x356: V361 = 0x1
0x358: V362 = 0xa0
0x35a: V363 = 0x2
0x35c: V364 = EXP 0x2 0xa0
0x35d: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V366 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x360: V367 = ISZERO V366
0x361: V368 = ISZERO V367
0x362: V369 = 0x36a
0x365: JUMPI 0x36a V368
---
Entry stack: [V12, 0xa2, V89, V91, V93, V95, V97]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0xa2, V89, V91, V93, V95, V97]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x355]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V370 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V89, V91, V93, V95, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V89, V91, V93, V95, V97]

================================

Block 0x36a
[0x36a:0x374]
---
Predecessors: [0x355]
Successors: [0x375, 0x379]
---
0x36a JUMPDEST
0x36b DUP1
0x36c DUP3
0x36d DUP5
0x36e DUP7
0x36f ADDMOD
0x370 EQ
0x371 PUSH2 0x379
0x374 JUMPI
---
0x36a: JUMPDEST 
0x36f: V371 = ADDMOD V91 V93 V95
0x370: V372 = EQ V371 V97
0x371: V373 = 0x379
0x374: JUMPI 0x379 V372
---
Entry stack: [V12, 0xa2, V89, V91, V93, V95, V97]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0xa2, V89, V91, V93, V95, V97]

================================

Block 0x375
[0x375:0x378]
---
Predecessors: [0x36a]
Successors: []
---
0x375 PUSH1 0x0
0x377 DUP1
0x378 REVERT
---
0x375: V374 = 0x0
0x378: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V89, V91, V93, V95, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V89, V91, V93, V95, V97]

================================

Block 0x379
[0x379:0x3a1]
---
Predecessors: [0x36a]
Successors: [0x3a2]
---
0x379 JUMPDEST
0x37a PUSH1 0x1
0x37c DUP1
0x37d SLOAD
0x37e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x393 NOT
0x394 AND
0x395 PUSH1 0x1
0x397 PUSH1 0xa0
0x399 PUSH1 0x2
0x39b EXP
0x39c SUB
0x39d DUP8
0x39e AND
0x39f OR
0x3a0 SWAP1
0x3a1 SSTORE
---
0x379: JUMPDEST 
0x37a: V375 = 0x1
0x37d: V376 = S[0x1]
0x37e: V377 = 0xffffffffffffffffffffffffffffffffffffffff
0x393: V378 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x394: V379 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V376
0x395: V380 = 0x1
0x397: V381 = 0xa0
0x399: V382 = 0x2
0x39b: V383 = EXP 0x2 0xa0
0x39c: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39e: V385 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V386 = OR V385 V379
0x3a1: S[0x1] = V386
---
Entry stack: [V12, 0xa2, V89, V91, V93, V95, V97]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0xa2, V89, V91, V93, V95, V97]

================================

Block 0x3a2
[0x3a2:0x3a2]
---
Predecessors: [0x379]
Successors: [0x3a3]
---
0x3a2 JUMPDEST
---
0x3a2: JUMPDEST 
---
Entry stack: [V12, 0xa2, V89, V91, V93, V95, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V89, V91, V93, V95, V97]

================================

Block 0x3a3
[0x3a3:0x3a9]
---
Predecessors: [0x3a2]
Successors: [0xa2]
---
0x3a3 JUMPDEST
0x3a4 POP
0x3a5 POP
0x3a6 POP
0x3a7 POP
0x3a8 POP
0x3a9 JUMP
---
0x3a3: JUMPDEST 
0x3a9: JUMP 0xa2
---
Entry stack: [V12, 0xa2, V89, V91, V93, V95, V97]
Stack pops: 6
Stack additions: []
Exit stack: [V12]

================================

Block 0x3aa
[0x3aa:0x3c1]
---
Predecessors: [0x101]
Successors: [0x3c2, 0x3d5]
---
0x3aa JUMPDEST
0x3ab PUSH1 0x2
0x3ad SLOAD
0x3ae CALLER
0x3af PUSH1 0x1
0x3b1 PUSH1 0xa0
0x3b3 PUSH1 0x2
0x3b5 EXP
0x3b6 SUB
0x3b7 SWAP1
0x3b8 DUP2
0x3b9 AND
0x3ba SWAP2
0x3bb AND
0x3bc EQ
0x3bd DUP1
0x3be PUSH2 0x3d5
0x3c1 JUMPI
---
0x3aa: JUMPDEST 
0x3ab: V387 = 0x2
0x3ad: V388 = S[0x2]
0x3ae: V389 = CALLER
0x3af: V390 = 0x1
0x3b1: V391 = 0xa0
0x3b3: V392 = 0x2
0x3b5: V393 = EXP 0x2 0xa0
0x3b6: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b9: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x3bb: V396 = AND V388 0xffffffffffffffffffffffffffffffffffffffff
0x3bc: V397 = EQ V396 V395
0x3be: V398 = 0x3d5
0x3c1: JUMPI 0x3d5 V397
---
Entry stack: [V12, 0xa2, V105]
Stack pops: 0
Stack additions: [V397]
Exit stack: [V12, 0xa2, V105, V397]

================================

Block 0x3c2
[0x3c2:0x3d4]
---
Predecessors: [0x3aa]
Successors: [0x3d5]
---
0x3c2 POP
0x3c3 PUSH1 0x0
0x3c5 SLOAD
0x3c6 CALLER
0x3c7 PUSH1 0x1
0x3c9 PUSH1 0xa0
0x3cb PUSH1 0x2
0x3cd EXP
0x3ce SUB
0x3cf SWAP1
0x3d0 DUP2
0x3d1 AND
0x3d2 SWAP2
0x3d3 AND
0x3d4 EQ
---
0x3c3: V399 = 0x0
0x3c5: V400 = S[0x0]
0x3c6: V401 = CALLER
0x3c7: V402 = 0x1
0x3c9: V403 = 0xa0
0x3cb: V404 = 0x2
0x3cd: V405 = EXP 0x2 0xa0
0x3ce: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d1: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x3d3: V408 = AND V400 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V409 = EQ V408 V407
---
Entry stack: [V12, 0xa2, V105, V397]
Stack pops: 1
Stack additions: [V409]
Exit stack: [V12, 0xa2, V105, V409]

================================

Block 0x3d5
[0x3d5:0x3db]
---
Predecessors: [0x3aa, 0x3c2]
Successors: [0x3dc, 0x3e0]
---
0x3d5 JUMPDEST
0x3d6 ISZERO
0x3d7 ISZERO
0x3d8 PUSH2 0x3e0
0x3db JUMPI
---
0x3d5: JUMPDEST 
0x3d6: V410 = ISZERO S0
0x3d7: V411 = ISZERO V410
0x3d8: V412 = 0x3e0
0x3db: JUMPI 0x3e0 V411
---
Entry stack: [V12, 0xa2, V105, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa2, V105]

================================

Block 0x3dc
[0x3dc:0x3df]
---
Predecessors: [0x3d5]
Successors: []
---
0x3dc PUSH1 0x0
0x3de DUP1
0x3df REVERT
---
0x3dc: V413 = 0x0
0x3df: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V105]

================================

Block 0x3e0
[0x3e0:0x3f4]
---
Predecessors: [0x3d5]
Successors: [0x3f5, 0x3fa]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x0
0x3e3 ADDRESS
0x3e4 PUSH1 0x1
0x3e6 PUSH1 0xa0
0x3e8 PUSH1 0x2
0x3ea EXP
0x3eb SUB
0x3ec AND
0x3ed BALANCE
0x3ee GT
0x3ef DUP1
0x3f0 ISZERO
0x3f1 PUSH2 0x3fa
0x3f4 JUMPI
---
0x3e0: JUMPDEST 
0x3e1: V414 = 0x0
0x3e3: V415 = ADDRESS
0x3e4: V416 = 0x1
0x3e6: V417 = 0xa0
0x3e8: V418 = 0x2
0x3ea: V419 = EXP 0x2 0xa0
0x3eb: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ec: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x3ed: V422 = BALANCE V421
0x3ee: V423 = GT V422 0x0
0x3f0: V424 = ISZERO V423
0x3f1: V425 = 0x3fa
0x3f4: JUMPI 0x3fa V424
---
Entry stack: [V12, 0xa2, V105]
Stack pops: 0
Stack additions: [V423]
Exit stack: [V12, 0xa2, V105, V423]

================================

Block 0x3f5
[0x3f5:0x3f9]
---
Predecessors: [0x3e0]
Successors: [0x3fa]
---
0x3f5 POP
0x3f6 PUSH1 0x0
0x3f8 DUP2
0x3f9 GT
---
0x3f6: V426 = 0x0
0x3f9: V427 = GT V105 0x0
---
Entry stack: [V12, 0xa2, V105, V423]
Stack pops: 2
Stack additions: [S1, V427]
Exit stack: [V12, 0xa2, V105, V427]

================================

Block 0x3fa
[0x3fa:0x400]
---
Predecessors: [0x3e0, 0x3f5]
Successors: [0x401, 0x410]
---
0x3fa JUMPDEST
0x3fb DUP1
0x3fc ISZERO
0x3fd PUSH2 0x410
0x400 JUMPI
---
0x3fa: JUMPDEST 
0x3fc: V428 = ISZERO S0
0x3fd: V429 = 0x410
0x400: JUMPI 0x410 V428
---
Entry stack: [V12, 0xa2, V105, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xa2, V105, S0]

================================

Block 0x401
[0x401:0x40f]
---
Predecessors: [0x3fa]
Successors: [0x410]
---
0x401 POP
0x402 DUP1
0x403 ADDRESS
0x404 PUSH1 0x1
0x406 PUSH1 0xa0
0x408 PUSH1 0x2
0x40a EXP
0x40b SUB
0x40c AND
0x40d BALANCE
0x40e LT
0x40f ISZERO
---
0x403: V430 = ADDRESS
0x404: V431 = 0x1
0x406: V432 = 0xa0
0x408: V433 = 0x2
0x40a: V434 = EXP 0x2 0xa0
0x40b: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40c: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x40d: V437 = BALANCE V436
0x40e: V438 = LT V437 V105
0x40f: V439 = ISZERO V438
---
Entry stack: [V12, 0xa2, V105, S0]
Stack pops: 2
Stack additions: [S1, V439]
Exit stack: [V12, 0xa2, V105, V439]

================================

Block 0x410
[0x410:0x416]
---
Predecessors: [0x3fa, 0x401]
Successors: [0x417, 0x41b]
---
0x410 JUMPDEST
0x411 ISZERO
0x412 ISZERO
0x413 PUSH2 0x41b
0x416 JUMPI
---
0x410: JUMPDEST 
0x411: V440 = ISZERO S0
0x412: V441 = ISZERO V440
0x413: V442 = 0x41b
0x416: JUMPI 0x41b V441
---
Entry stack: [V12, 0xa2, V105, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa2, V105]

================================

Block 0x417
[0x417:0x41a]
---
Predecessors: [0x410]
Successors: []
---
0x417 PUSH1 0x0
0x419 DUP1
0x41a REVERT
---
0x417: V443 = 0x0
0x41a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V105]

================================

Block 0x41b
[0x41b:0x446]
---
Predecessors: [0x410]
Successors: [0x447, 0x448]
---
0x41b JUMPDEST
0x41c PUSH1 0x1
0x41e SLOAD
0x41f PUSH1 0x1
0x421 PUSH1 0xa0
0x423 PUSH1 0x2
0x425 EXP
0x426 SUB
0x427 AND
0x428 DUP2
0x429 PUSH1 0x40
0x42b MLOAD
0x42c PUSH1 0x0
0x42e PUSH1 0x40
0x430 MLOAD
0x431 DUP1
0x432 DUP4
0x433 SUB
0x434 DUP2
0x435 DUP6
0x436 DUP8
0x437 PUSH2 0x8796
0x43a GAS
0x43b SUB
0x43c CALL
0x43d SWAP3
0x43e POP
0x43f POP
0x440 POP
0x441 ISZERO
0x442 ISZERO
0x443 PUSH2 0x448
0x446 JUMPI
---
0x41b: JUMPDEST 
0x41c: V444 = 0x1
0x41e: V445 = S[0x1]
0x41f: V446 = 0x1
0x421: V447 = 0xa0
0x423: V448 = 0x2
0x425: V449 = EXP 0x2 0xa0
0x426: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x427: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x429: V452 = 0x40
0x42b: V453 = M[0x40]
0x42c: V454 = 0x0
0x42e: V455 = 0x40
0x430: V456 = M[0x40]
0x433: V457 = SUB V453 V456
0x437: V458 = 0x8796
0x43a: V459 = GAS
0x43b: V460 = SUB V459 0x8796
0x43c: V461 = CALL V460 V451 V105 V456 V457 V456 0x0
0x441: V462 = ISZERO V461
0x442: V463 = ISZERO V462
0x443: V464 = 0x448
0x446: JUMPI 0x448 V463
---
Entry stack: [V12, 0xa2, V105]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xa2, V105]

================================

Block 0x447
[0x447:0x447]
---
Predecessors: [0x41b]
Successors: []
---
0x447 INVALID
---
0x447: INVALID 
---
Entry stack: [V12, 0xa2, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V105]

================================

Block 0x448
[0x448:0x448]
---
Predecessors: [0x41b]
Successors: [0x449]
---
0x448 JUMPDEST
---
0x448: JUMPDEST 
---
Entry stack: [V12, 0xa2, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V105]

================================

Block 0x449
[0x449:0x449]
---
Predecessors: [0x448]
Successors: [0x44a]
---
0x449 JUMPDEST
---
0x449: JUMPDEST 
---
Entry stack: [V12, 0xa2, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V105]

================================

Block 0x44a
[0x44a:0x44c]
---
Predecessors: [0x449]
Successors: [0xa2]
---
0x44a JUMPDEST
0x44b POP
0x44c JUMP
---
0x44a: JUMPDEST 
0x44c: JUMP 0xa2
---
Entry stack: [V12, 0xa2, V105]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x44d
[0x44d:0x45b]
---
Predecessors: [0x119]
Successors: [0x121]
---
0x44d JUMPDEST
0x44e PUSH1 0x1
0x450 SLOAD
0x451 PUSH1 0x1
0x453 PUSH1 0xa0
0x455 PUSH1 0x2
0x457 EXP
0x458 SUB
0x459 AND
0x45a DUP2
0x45b JUMP
---
0x44d: JUMPDEST 
0x44e: V465 = 0x1
0x450: V466 = S[0x1]
0x451: V467 = 0x1
0x453: V468 = 0xa0
0x455: V469 = 0x2
0x457: V470 = EXP 0x2 0xa0
0x458: V471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x459: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x45b: JUMP 0x121
---
Entry stack: [V12, 0x121]
Stack pops: 1
Stack additions: [S0, V472]
Exit stack: [V12, 0x121, V472]

================================

Block 0x45c
[0x45c:0x46a]
---
Predecessors: [0x148]
Successors: [0x121]
---
0x45c JUMPDEST
0x45d PUSH1 0x0
0x45f SLOAD
0x460 PUSH1 0x1
0x462 PUSH1 0xa0
0x464 PUSH1 0x2
0x466 EXP
0x467 SUB
0x468 AND
0x469 DUP2
0x46a JUMP
---
0x45c: JUMPDEST 
0x45d: V473 = 0x0
0x45f: V474 = S[0x0]
0x460: V475 = 0x1
0x462: V476 = 0xa0
0x464: V477 = 0x2
0x466: V478 = EXP 0x2 0xa0
0x467: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x468: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x46a: JUMP 0x121
---
Entry stack: [V12, 0x121]
Stack pops: 1
Stack additions: [S0, V480]
Exit stack: [V12, 0x121, V480]

================================

Block 0x46b
[0x46b:0x481]
---
Predecessors: [0x177]
Successors: [0x482, 0x486]
---
0x46b JUMPDEST
0x46c PUSH1 0x0
0x46e SLOAD
0x46f CALLER
0x470 PUSH1 0x1
0x472 PUSH1 0xa0
0x474 PUSH1 0x2
0x476 EXP
0x477 SUB
0x478 SWAP1
0x479 DUP2
0x47a AND
0x47b SWAP2
0x47c AND
0x47d EQ
0x47e PUSH2 0x486
0x481 JUMPI
---
0x46b: JUMPDEST 
0x46c: V481 = 0x0
0x46e: V482 = S[0x0]
0x46f: V483 = CALLER
0x470: V484 = 0x1
0x472: V485 = 0xa0
0x474: V486 = 0x2
0x476: V487 = EXP 0x2 0xa0
0x477: V488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47a: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x47c: V490 = AND V482 0xffffffffffffffffffffffffffffffffffffffff
0x47d: V491 = EQ V490 V489
0x47e: V492 = 0x486
0x481: JUMPI 0x486 V491
---
Entry stack: [V12, 0xa2, V157, V159, V161, V163, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V157, V159, V161, V163, V165]

================================

Block 0x482
[0x482:0x485]
---
Predecessors: [0x46b]
Successors: []
---
0x482 PUSH1 0x0
0x484 DUP1
0x485 REVERT
---
0x482: V493 = 0x0
0x485: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V157, V159, V161, V163, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V157, V159, V161, V163, V165]

================================

Block 0x486
[0x486:0x496]
---
Predecessors: [0x46b]
Successors: [0x497, 0x49b]
---
0x486 JUMPDEST
0x487 PUSH1 0x1
0x489 PUSH1 0xa0
0x48b PUSH1 0x2
0x48d EXP
0x48e SUB
0x48f DUP6
0x490 AND
0x491 ISZERO
0x492 ISZERO
0x493 PUSH2 0x49b
0x496 JUMPI
---
0x486: JUMPDEST 
0x487: V494 = 0x1
0x489: V495 = 0xa0
0x48b: V496 = 0x2
0x48d: V497 = EXP 0x2 0xa0
0x48e: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x490: V499 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x491: V500 = ISZERO V499
0x492: V501 = ISZERO V500
0x493: V502 = 0x49b
0x496: JUMPI 0x49b V501
---
Entry stack: [V12, 0xa2, V157, V159, V161, V163, V165]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0xa2, V157, V159, V161, V163, V165]

================================

Block 0x497
[0x497:0x49a]
---
Predecessors: [0x486]
Successors: []
---
0x497 PUSH1 0x0
0x499 DUP1
0x49a REVERT
---
0x497: V503 = 0x0
0x49a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V157, V159, V161, V163, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V157, V159, V161, V163, V165]

================================

Block 0x49b
[0x49b:0x4a5]
---
Predecessors: [0x486]
Successors: [0x4a6, 0x4aa]
---
0x49b JUMPDEST
0x49c DUP1
0x49d DUP3
0x49e DUP5
0x49f DUP7
0x4a0 ADDMOD
0x4a1 EQ
0x4a2 PUSH2 0x4aa
0x4a5 JUMPI
---
0x49b: JUMPDEST 
0x4a0: V504 = ADDMOD V159 V161 V163
0x4a1: V505 = EQ V504 V165
0x4a2: V506 = 0x4aa
0x4a5: JUMPI 0x4aa V505
---
Entry stack: [V12, 0xa2, V157, V159, V161, V163, V165]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0xa2, V157, V159, V161, V163, V165]

================================

Block 0x4a6
[0x4a6:0x4a9]
---
Predecessors: [0x49b]
Successors: []
---
0x4a6 PUSH1 0x0
0x4a8 DUP1
0x4a9 REVERT
---
0x4a6: V507 = 0x0
0x4a9: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa2, V157, V159, V161, V163, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V157, V159, V161, V163, V165]

================================

Block 0x4aa
[0x4aa:0x4d2]
---
Predecessors: [0x49b]
Successors: [0x4d3]
---
0x4aa JUMPDEST
0x4ab PUSH1 0x2
0x4ad DUP1
0x4ae SLOAD
0x4af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c4 NOT
0x4c5 AND
0x4c6 PUSH1 0x1
0x4c8 PUSH1 0xa0
0x4ca PUSH1 0x2
0x4cc EXP
0x4cd SUB
0x4ce DUP8
0x4cf AND
0x4d0 OR
0x4d1 SWAP1
0x4d2 SSTORE
---
0x4aa: JUMPDEST 
0x4ab: V508 = 0x2
0x4ae: V509 = S[0x2]
0x4af: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c4: V511 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4c5: V512 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V509
0x4c6: V513 = 0x1
0x4c8: V514 = 0xa0
0x4ca: V515 = 0x2
0x4cc: V516 = EXP 0x2 0xa0
0x4cd: V517 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V518 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x4d0: V519 = OR V518 V512
0x4d2: S[0x2] = V519
---
Entry stack: [V12, 0xa2, V157, V159, V161, V163, V165]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0xa2, V157, V159, V161, V163, V165]

================================

Block 0x4d3
[0x4d3:0x4d3]
---
Predecessors: [0x4aa]
Successors: [0x4d4]
---
0x4d3 JUMPDEST
---
0x4d3: JUMPDEST 
---
Entry stack: [V12, 0xa2, V157, V159, V161, V163, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa2, V157, V159, V161, V163, V165]

================================

Block 0x4d4
[0x4d4:0x4da]
---
Predecessors: [0x4d3]
Successors: [0xa2]
---
0x4d4 JUMPDEST
0x4d5 POP
0x4d6 POP
0x4d7 POP
0x4d8 POP
0x4d9 POP
0x4da JUMP
---
0x4d4: JUMPDEST 
0x4da: JUMP 0xa2
---
Entry stack: [V12, 0xa2, V157, V159, V161, V163, V165]
Stack pops: 6
Stack additions: []
Exit stack: [V12]

================================

Block 0x4db
[0x4db:0x4e9]
---
Predecessors: [0x1a4]
Successors: [0x121]
---
0x4db JUMPDEST
0x4dc PUSH1 0x2
0x4de SLOAD
0x4df PUSH1 0x1
0x4e1 PUSH1 0xa0
0x4e3 PUSH1 0x2
0x4e5 EXP
0x4e6 SUB
0x4e7 AND
0x4e8 DUP2
0x4e9 JUMP
---
0x4db: JUMPDEST 
0x4dc: V520 = 0x2
0x4de: V521 = S[0x2]
0x4df: V522 = 0x1
0x4e1: V523 = 0xa0
0x4e3: V524 = 0x2
0x4e5: V525 = EXP 0x2 0xa0
0x4e6: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e7: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x4e9: JUMP 0x121
---
Entry stack: [V12, 0x121]
Stack pops: 1
Stack additions: [S0, V527]
Exit stack: [V12, 0x121, V527]

================================

Block 0x4ea
[0x4ea:0x51f]
---
Predecessors: []
Successors: []
---
0x4ea STOP
0x4eb LOG1
0x4ec PUSH6 0x627a7a723058
0x4f3 SHA3
0x4f4 MISSING 0xcf
0x4f5 DIV
0x4f6 MISSING 0xe4
0x4f7 MISSING 0xd1
0x4f8 MISSING 0xda
0x4f9 SWAP8
0x4fa MISSING 0xdc
0x4fb MISSING 0xe9
0x4fc PUSH10 0x24ec4676a82fc1b7e1df
0x507 PC
0x508 MISSING 0xca
0x509 MISSING 0x22
0x50a MISSING 0xec
0x50b PUSH20 0x28a5718a498bf8120029
---
0x4ea: STOP 
0x4eb: LOG S0 S1 S2
0x4ec: V528 = 0x627a7a723058
0x4f3: V529 = SHA3 0x627a7a723058 S3
0x4f4: MISSING 0xcf
0x4f5: V530 = DIV S0 S1
0x4f6: MISSING 0xe4
0x4f7: MISSING 0xd1
0x4f8: MISSING 0xda
0x4fa: MISSING 0xdc
0x4fb: MISSING 0xe9
0x4fc: V531 = 0x24ec4676a82fc1b7e1df
0x507: V532 = PC
0x508: MISSING 0xca
0x509: MISSING 0x22
0x50a: MISSING 0xec
0x50b: V533 = 0x28a5718a498bf8120029
---
Entry stack: []
Stack pops: 0
Stack additions: [V529, V530, S8, S1, S2, S3, S4, S5, S6, S7, S0, V532, 0x24ec4676a82fc1b7e1df, 0x28a5718a498bf8120029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1072cbea
Entry block: 0xa5
Exit block: 0xa3
Body: 0xa2, 0xa3, 0xa5, 0xac, 0xb0, 0x1c8, 0x1e3, 0x1f6, 0x1fd, 0x201, 0x212, 0x213, 0x266, 0x26a, 0x277, 0x27b, 0x291, 0x296, 0x29d, 0x2a2, 0x2a9, 0x2ad, 0x30c, 0x310, 0x31d, 0x321, 0x332, 0x333, 0x334, 0x335

Function 1:
Public function signature: 0x6c3b58e0
Entry block: 0xc9
Exit block: 0xa3
Body: 0xa2, 0xa3, 0xc9, 0xd0, 0xd4, 0x33a, 0x351, 0x355, 0x366, 0x36a, 0x375, 0x379, 0x3a2, 0x3a3

Function 2:
Public function signature: 0x73ffd5b7
Entry block: 0xf6
Exit block: 0xa3
Body: 0xa2, 0xa3, 0xf6, 0xfd, 0x101, 0x3aa, 0x3c2, 0x3d5, 0x3dc, 0x3e0, 0x3f5, 0x3fa, 0x401, 0x410, 0x417, 0x41b, 0x447, 0x448, 0x449, 0x44a

Function 3:
Public function signature: 0x7822ed49
Entry block: 0x10e
Exit block: 0x121
Body: 0x10e, 0x115, 0x119, 0x121, 0x44d

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x13d
Exit block: 0x121
Body: 0x121, 0x13d, 0x144, 0x148, 0x45c

Function 5:
Public function signature: 0xdc5f346b
Entry block: 0x16c
Exit block: 0xa3
Body: 0xa2, 0xa3, 0x16c, 0x173, 0x177, 0x46b, 0x482, 0x486, 0x497, 0x49b, 0x4a6, 0x4aa, 0x4d3, 0x4d4

Function 6:
Public function signature: 0xf444fdd8
Entry block: 0x199
Exit block: 0x121
Body: 0x121, 0x199, 0x1a0, 0x1a4, 0x4db

Function 7:
Public fallback function
Entry block: 0x67
Exit block: 0xa3
Body: 0x67, 0x68, 0x71, 0x75, 0xa1, 0xa2, 0xa3

