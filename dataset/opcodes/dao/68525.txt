Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x46]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x46
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x46
0xa: JUMPI 0x46 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xc3]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x106b96ce
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xc3
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x106b96ce
0x20: V14 = EQ V12 0x106b96ce
0x21: V15 = 0xc3
0x24: JUMPI 0xc3 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xd9]
---
0x25 DUP1
0x26 PUSH4 0x41c0e1b5
0x2b EQ
0x2c PUSH2 0xd9
0x2f JUMPI
---
0x26: V16 = 0x41c0e1b5
0x2b: V17 = EQ 0x41c0e1b5 V12
0x2c: V18 = 0xd9
0x2f: JUMPI 0xd9 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xeb]
---
0x30 DUP1
0x31 PUSH4 0x8da5cb5b
0x36 EQ
0x37 PUSH2 0xeb
0x3a JUMPI
---
0x31: V19 = 0x8da5cb5b
0x36: V20 = EQ 0x8da5cb5b V12
0x37: V21 = 0xeb
0x3a: JUMPI 0xeb V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x117]
---
0x3b DUP1
0x3c PUSH4 0xcf5b894e
0x41 EQ
0x42 PUSH2 0x117
0x45 JUMPI
---
0x3c: V22 = 0xcf5b894e
0x41: V23 = EQ 0xcf5b894e V12
0x42: V24 = 0x117
0x45: JUMPI 0x117 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x49]
---
Predecessors: [0x0, 0x3b]
Successors: [0x4a]
---
0x46 JUMPDEST
0x47 PUSH2 0xc1
---
0x46: JUMPDEST 
0x47: V25 = 0xc1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0x4a
[0x4a:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0xbe]
---
0x4a JUMPDEST
0x4b CALLVALUE
0x4c PUSH1 0x1
0x4e PUSH1 0xa0
0x50 PUSH1 0x2
0x52 EXP
0x53 SUB
0x54 CALLER
0x55 AND
0x56 BALANCE
0x57 LT
0x58 PUSH2 0xbe
0x5b JUMPI
---
0x4a: JUMPDEST 
0x4b: V26 = CALLVALUE
0x4c: V27 = 0x1
0x4e: V28 = 0xa0
0x50: V29 = 0x2
0x52: V30 = EXP 0x2 0xa0
0x53: V31 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54: V32 = CALLER
0x55: V33 = AND V32 0xffffffffffffffffffffffffffffffffffffffff
0x56: V34 = BALANCE V33
0x57: V35 = LT V34 V26
0x58: V36 = 0xbe
0x5b: JUMPI 0xbe V35
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x5c
[0x5c:0xbd]
---
Predecessors: [0x4a]
Successors: [0xbe]
---
0x5c CALLER
0x5d PUSH1 0x1
0x5f PUSH1 0xa0
0x61 PUSH1 0x2
0x63 EXP
0x64 SUB
0x65 AND
0x66 PUSH3 0x249f0
0x6a PUSH1 0x40
0x6c MLOAD
0x6d DUP1
0x6e DUP1
0x6f PUSH1 0xd8
0x71 PUSH1 0x2
0x73 EXP
0x74 PUSH5 0x776f6e2829
0x7a MUL
0x7b DUP2
0x7c MSTORE
0x7d POP
0x7e PUSH1 0x5
0x80 ADD
0x81 SWAP1
0x82 POP
0x83 PUSH1 0x40
0x85 MLOAD
0x86 DUP1
0x87 SWAP2
0x88 SUB
0x89 SWAP1
0x8a SHA3
0x8b PUSH1 0xe0
0x8d PUSH1 0x2
0x8f EXP
0x90 SWAP1
0x91 DIV
0x92 SWAP1
0x93 PUSH1 0x40
0x95 MLOAD
0x96 DUP3
0x97 PUSH4 0xffffffff
0x9c AND
0x9d PUSH1 0xe0
0x9f PUSH1 0x2
0xa1 EXP
0xa2 MUL
0xa3 DUP2
0xa4 MSTORE
0xa5 PUSH1 0x4
0xa7 ADD
0xa8 DUP1
0xa9 SWAP1
0xaa POP
0xab PUSH1 0x0
0xad PUSH1 0x40
0xaf MLOAD
0xb0 DUP1
0xb1 DUP4
0xb2 SUB
0xb3 DUP2
0xb4 PUSH1 0x0
0xb6 DUP9
0xb7 DUP8
0xb8 CALL
0xb9 POP
0xba POP
0xbb POP
0xbc POP
0xbd POP
---
0x5c: V37 = CALLER
0x5d: V38 = 0x1
0x5f: V39 = 0xa0
0x61: V40 = 0x2
0x63: V41 = EXP 0x2 0xa0
0x64: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x66: V44 = 0x249f0
0x6a: V45 = 0x40
0x6c: V46 = M[0x40]
0x6f: V47 = 0xd8
0x71: V48 = 0x2
0x73: V49 = EXP 0x2 0xd8
0x74: V50 = 0x776f6e2829
0x7a: V51 = MUL 0x776f6e2829 0x1000000000000000000000000000000000000000000000000000000
0x7c: M[V46] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x7e: V52 = 0x5
0x80: V53 = ADD 0x5 V46
0x83: V54 = 0x40
0x85: V55 = M[0x40]
0x88: V56 = SUB V53 V55
0x8a: V57 = SHA3 V55 V56
0x8b: V58 = 0xe0
0x8d: V59 = 0x2
0x8f: V60 = EXP 0x2 0xe0
0x91: V61 = DIV V57 0x100000000000000000000000000000000000000000000000000000000
0x93: V62 = 0x40
0x95: V63 = M[0x40]
0x97: V64 = 0xffffffff
0x9c: V65 = AND 0xffffffff V61
0x9d: V66 = 0xe0
0x9f: V67 = 0x2
0xa1: V68 = EXP 0x2 0xe0
0xa2: V69 = MUL 0x100000000000000000000000000000000000000000000000000000000 V65
0xa4: M[V63] = V69
0xa5: V70 = 0x4
0xa7: V71 = ADD 0x4 V63
0xab: V72 = 0x0
0xad: V73 = 0x40
0xaf: V74 = M[0x40]
0xb2: V75 = SUB V71 V74
0xb4: V76 = 0x0
0xb8: V77 = CALL 0x249f0 V43 0x0 V74 V75 V74 0x0
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0xbe
[0xbe:0xbe]
---
Predecessors: [0x4a, 0x5c]
Successors: [0xbf]
---
0xbe JUMPDEST
---
0xbe: JUMPDEST 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0xbf
[0xbf:0xc0]
---
Predecessors: [0xbe]
Successors: [0xc1]
---
0xbf JUMPDEST
0xc0 JUMP
---
0xbf: JUMPDEST 
0xc0: JUMP 0xc1
---
Entry stack: [V12, 0xc1]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc1
[0xc1:0xc2]
---
Predecessors: [0xbf, 0x1b5, 0x261]
Successors: []
---
0xc1 JUMPDEST
0xc2 STOP
---
0xc1: JUMPDEST 
0xc2: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3
[0xc3:0xd6]
---
Predecessors: [0xb]
Successors: [0x12d]
---
0xc3 JUMPDEST
0xc4 PUSH2 0xc1
0xc7 PUSH1 0x1
0xc9 PUSH1 0xa0
0xcb PUSH1 0x2
0xcd EXP
0xce SUB
0xcf PUSH1 0x4
0xd1 CALLDATALOAD
0xd2 AND
0xd3 PUSH2 0x12d
0xd6 JUMP
---
0xc3: JUMPDEST 
0xc4: V78 = 0xc1
0xc7: V79 = 0x1
0xc9: V80 = 0xa0
0xcb: V81 = 0x2
0xcd: V82 = EXP 0x2 0xa0
0xce: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf: V84 = 0x4
0xd1: V85 = CALLDATALOAD 0x4
0xd2: V86 = AND V85 0xffffffffffffffffffffffffffffffffffffffff
0xd3: V87 = 0x12d
0xd6: JUMP 0x12d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1, V86]
Exit stack: [V12, 0xc1, V86]

================================

Block 0xd7
[0xd7:0xd8]
---
Predecessors: []
Successors: []
---
0xd7 JUMPDEST
0xd8 STOP
---
0xd7: JUMPDEST 
0xd8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd9
[0xd9:0xdf]
---
Predecessors: [0x25]
Successors: [0xe0, 0xe1]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb ISZERO
0xdc PUSH2 0xe1
0xdf JUMPI
---
0xd9: JUMPDEST 
0xda: V88 = CALLVALUE
0xdb: V89 = ISZERO V88
0xdc: V90 = 0xe1
0xdf: JUMPI 0xe1 V89
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe0]
---
Predecessors: [0xd9]
Successors: []
---
0xe0 INVALID
---
0xe0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe1
[0xe1:0xe8]
---
Predecessors: [0xd9]
Successors: [0x1b9]
---
0xe1 JUMPDEST
0xe2 PUSH2 0xc1
0xe5 PUSH2 0x1b9
0xe8 JUMP
---
0xe1: JUMPDEST 
0xe2: V91 = 0xc1
0xe5: V92 = 0x1b9
0xe8: JUMP 0x1b9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: []
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xeb
[0xeb:0xf1]
---
Predecessors: [0x30]
Successors: [0xf2, 0xf3]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed ISZERO
0xee PUSH2 0xf3
0xf1 JUMPI
---
0xeb: JUMPDEST 
0xec: V93 = CALLVALUE
0xed: V94 = ISZERO V93
0xee: V95 = 0xf3
0xf1: JUMPI 0xf3 V94
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf2
[0xf2:0xf2]
---
Predecessors: [0xeb]
Successors: []
---
0xf2 INVALID
---
0xf2: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0xeb]
Successors: [0x1e2]
---
0xf3 JUMPDEST
0xf4 PUSH2 0xfb
0xf7 PUSH2 0x1e2
0xfa JUMP
---
0xf3: JUMPDEST 
0xf4: V96 = 0xfb
0xf7: V97 = 0x1e2
0xfa: JUMP 0x1e2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V12, 0xfb]

================================

Block 0xfb
[0xfb:0x116]
---
Predecessors: [0x1e2]
Successors: []
---
0xfb JUMPDEST
0xfc PUSH1 0x40
0xfe DUP1
0xff MLOAD
0x100 PUSH1 0x1
0x102 PUSH1 0xa0
0x104 PUSH1 0x2
0x106 EXP
0x107 SUB
0x108 SWAP1
0x109 SWAP3
0x10a AND
0x10b DUP3
0x10c MSTORE
0x10d MLOAD
0x10e SWAP1
0x10f DUP2
0x110 SWAP1
0x111 SUB
0x112 PUSH1 0x20
0x114 ADD
0x115 SWAP1
0x116 RETURN
---
0xfb: JUMPDEST 
0xfc: V98 = 0x40
0xff: V99 = M[0x40]
0x100: V100 = 0x1
0x102: V101 = 0xa0
0x104: V102 = 0x2
0x106: V103 = EXP 0x2 0xa0
0x107: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a: V105 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x10c: M[V99] = V105
0x10d: V106 = M[0x40]
0x111: V107 = SUB V99 V106
0x112: V108 = 0x20
0x114: V109 = ADD 0x20 V107
0x116: RETURN V106 V109
---
Entry stack: [V12, 0xfb, V183]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xfb]

================================

Block 0x117
[0x117:0x12a]
---
Predecessors: [0x3b]
Successors: [0x1f1]
---
0x117 JUMPDEST
0x118 PUSH2 0xc1
0x11b PUSH1 0x1
0x11d PUSH1 0xa0
0x11f PUSH1 0x2
0x121 EXP
0x122 SUB
0x123 PUSH1 0x4
0x125 CALLDATALOAD
0x126 AND
0x127 PUSH2 0x1f1
0x12a JUMP
---
0x117: JUMPDEST 
0x118: V110 = 0xc1
0x11b: V111 = 0x1
0x11d: V112 = 0xa0
0x11f: V113 = 0x2
0x121: V114 = EXP 0x2 0xa0
0x122: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x123: V116 = 0x4
0x125: V117 = CALLDATALOAD 0x4
0x126: V118 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x127: V119 = 0x1f1
0x12a: JUMP 0x1f1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1, V118]
Exit stack: [V12, 0xc1, V118]

================================

Block 0x12b
[0x12b:0x12c]
---
Predecessors: []
Successors: []
---
0x12b JUMPDEST
0x12c STOP
---
0x12b: JUMPDEST 
0x12c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12d
[0x12d:0x1b4]
---
Predecessors: [0xc3]
Successors: [0x1b5]
---
0x12d JUMPDEST
0x12e PUSH1 0x40
0x130 DUP1
0x131 MLOAD
0x132 PUSH32 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x153 DUP2
0x154 MSTORE
0x155 DUP2
0x156 MLOAD
0x157 SWAP1
0x158 DUP2
0x159 SWAP1
0x15a SUB
0x15b PUSH1 0x13
0x15d ADD
0x15e DUP2
0x15f SHA3
0x160 PUSH4 0xffffffff
0x165 PUSH1 0xe0
0x167 PUSH1 0x2
0x169 EXP
0x16a SWAP2
0x16b DUP3
0x16c SWAP1
0x16d DIV
0x16e SWAP1
0x16f DUP2
0x170 AND
0x171 SWAP1
0x172 SWAP2
0x173 MUL
0x174 DUP3
0x175 MSTORE
0x176 ADDRESS
0x177 PUSH1 0x1
0x179 PUSH1 0xa0
0x17b PUSH1 0x2
0x17d EXP
0x17e SUB
0x17f SWAP1
0x180 DUP2
0x181 AND
0x182 PUSH1 0x4
0x184 DUP5
0x185 ADD
0x186 MSTORE
0x187 SWAP3
0x188 MLOAD
0x189 DUP5
0x18a SWAP4
0x18b DUP5
0x18c AND
0x18d SWAP3
0x18e PUSH8 0xde0b6b3a7640000
0x197 SWAP2
0x198 PUSH1 0x24
0x19a DUP1
0x19b DUP4
0x19c ADD
0x19d SWAP3
0x19e PUSH1 0x0
0x1a0 SWAP3
0x1a1 SWAP2
0x1a2 SWAP1
0x1a3 DUP3
0x1a4 SWAP1
0x1a5 SUB
0x1a6 ADD
0x1a7 DUP2
0x1a8 DUP6
0x1a9 DUP9
0x1aa PUSH2 0x8502
0x1ad GAS
0x1ae SUB
0x1af CALL
0x1b0 POP
0x1b1 POP
0x1b2 POP
0x1b3 POP
0x1b4 POP
---
0x12d: JUMPDEST 
0x12e: V120 = 0x40
0x131: V121 = M[0x40]
0x132: V122 = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x154: M[V121] = 0x706c617952616e646f6d28616464726573732900000000000000000000000000
0x156: V123 = M[0x40]
0x15a: V124 = SUB V121 V123
0x15b: V125 = 0x13
0x15d: V126 = ADD 0x13 V124
0x15f: V127 = SHA3 V123 V126
0x160: V128 = 0xffffffff
0x165: V129 = 0xe0
0x167: V130 = 0x2
0x169: V131 = EXP 0x2 0xe0
0x16d: V132 = DIV V127 0x100000000000000000000000000000000000000000000000000000000
0x170: V133 = AND V132 0xffffffff
0x173: V134 = MUL 0x100000000000000000000000000000000000000000000000000000000 V133
0x175: M[V123] = V134
0x176: V135 = ADDRESS
0x177: V136 = 0x1
0x179: V137 = 0xa0
0x17b: V138 = 0x2
0x17d: V139 = EXP 0x2 0xa0
0x17e: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x182: V142 = 0x4
0x185: V143 = ADD V123 0x4
0x186: M[V143] = V141
0x188: V144 = M[0x40]
0x18c: V145 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V146 = 0xde0b6b3a7640000
0x198: V147 = 0x24
0x19c: V148 = ADD V123 0x24
0x19e: V149 = 0x0
0x1a5: V150 = SUB V123 V144
0x1a6: V151 = ADD V150 0x24
0x1aa: V152 = 0x8502
0x1ad: V153 = GAS
0x1ae: V154 = SUB V153 0x8502
0x1af: V155 = CALL V154 V145 0xde0b6b3a7640000 V144 V151 V144 0x0
---
Entry stack: [V12, 0xc1, V86]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [V12, 0xc1, V86, V86]

================================

Block 0x1b5
[0x1b5:0x1b8]
---
Predecessors: [0x12d]
Successors: [0xc1]
---
0x1b5 JUMPDEST
0x1b6 POP
0x1b7 POP
0x1b8 JUMP
---
0x1b5: JUMPDEST 
0x1b8: JUMP 0xc1
---
Entry stack: [V12, 0xc1, V86, V86]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b9
[0x1b9:0x1cf]
---
Predecessors: [0xe1]
Successors: [0x1d0, 0x1d1]
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x0
0x1bc SLOAD
0x1bd CALLER
0x1be PUSH1 0x1
0x1c0 PUSH1 0xa0
0x1c2 PUSH1 0x2
0x1c4 EXP
0x1c5 SUB
0x1c6 SWAP1
0x1c7 DUP2
0x1c8 AND
0x1c9 SWAP2
0x1ca AND
0x1cb EQ
0x1cc PUSH2 0x1d1
0x1cf JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V156 = 0x0
0x1bc: V157 = S[0x0]
0x1bd: V158 = CALLER
0x1be: V159 = 0x1
0x1c0: V160 = 0xa0
0x1c2: V161 = 0x2
0x1c4: V162 = EXP 0x2 0xa0
0x1c5: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x1ca: V165 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V166 = EQ V165 V164
0x1cc: V167 = 0x1d1
0x1cf: JUMPI 0x1d1 V166
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x1d0
[0x1d0:0x1d0]
---
Predecessors: [0x1b9]
Successors: []
---
0x1d0 INVALID
---
0x1d0: INVALID 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x1d1
[0x1d1:0x1de]
---
Predecessors: [0x1b9]
Successors: []
---
0x1d1 JUMPDEST
0x1d2 PUSH1 0x0
0x1d4 SLOAD
0x1d5 PUSH1 0x1
0x1d7 PUSH1 0xa0
0x1d9 PUSH1 0x2
0x1db EXP
0x1dc SUB
0x1dd AND
0x1de SELFDESTRUCT
---
0x1d1: JUMPDEST 
0x1d2: V168 = 0x0
0x1d4: V169 = S[0x0]
0x1d5: V170 = 0x1
0x1d7: V171 = 0xa0
0x1d9: V172 = 0x2
0x1db: V173 = EXP 0x2 0xa0
0x1dc: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dd: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1de: SELFDESTRUCT V175
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x1df
[0x1df:0x1df]
---
Predecessors: []
Successors: [0x1e0]
---
0x1df JUMPDEST
---
0x1df: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e0
[0x1e0:0x1e1]
---
Predecessors: [0x1df]
Successors: []
Has unresolved jump.
---
0x1e0 JUMPDEST
0x1e1 JUMP
---
0x1e0: JUMPDEST 
0x1e1: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e2
[0x1e2:0x1f0]
---
Predecessors: [0xf3]
Successors: [0xfb]
---
0x1e2 JUMPDEST
0x1e3 PUSH1 0x0
0x1e5 SLOAD
0x1e6 PUSH1 0x1
0x1e8 PUSH1 0xa0
0x1ea PUSH1 0x2
0x1ec EXP
0x1ed SUB
0x1ee AND
0x1ef DUP2
0x1f0 JUMP
---
0x1e2: JUMPDEST 
0x1e3: V176 = 0x0
0x1e5: V177 = S[0x0]
0x1e6: V178 = 0x1
0x1e8: V179 = 0xa0
0x1ea: V180 = 0x2
0x1ec: V181 = EXP 0x2 0xa0
0x1ed: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ee: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x1f0: JUMP 0xfb
---
Entry stack: [V12, 0xfb]
Stack pops: 1
Stack additions: [S0, V183]
Exit stack: [V12, 0xfb, V183]

================================

Block 0x1f1
[0x1f1:0x260]
---
Predecessors: [0x117]
Successors: [0x261]
---
0x1f1 JUMPDEST
0x1f2 PUSH1 0x0
0x1f4 DUP2
0x1f5 SWAP1
0x1f6 POP
0x1f7 DUP1
0x1f8 PUSH1 0x1
0x1fa PUSH1 0xa0
0x1fc PUSH1 0x2
0x1fe EXP
0x1ff SUB
0x200 AND
0x201 PUSH8 0xde0b6b3a7640000
0x20a PUSH1 0x40
0x20c MLOAD
0x20d DUP1
0x20e DUP1
0x20f PUSH1 0xd8
0x211 PUSH1 0x2
0x213 EXP
0x214 PUSH5 0x776f6e2829
0x21a MUL
0x21b DUP2
0x21c MSTORE
0x21d POP
0x21e PUSH1 0x5
0x220 ADD
0x221 SWAP1
0x222 POP
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 SWAP2
0x228 SUB
0x229 SWAP1
0x22a SHA3
0x22b PUSH1 0xe0
0x22d PUSH1 0x2
0x22f EXP
0x230 SWAP1
0x231 DIV
0x232 SWAP1
0x233 PUSH1 0x40
0x235 MLOAD
0x236 DUP3
0x237 PUSH4 0xffffffff
0x23c AND
0x23d PUSH1 0xe0
0x23f PUSH1 0x2
0x241 EXP
0x242 MUL
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x4
0x247 ADD
0x248 DUP1
0x249 SWAP1
0x24a POP
0x24b PUSH1 0x0
0x24d PUSH1 0x40
0x24f MLOAD
0x250 DUP1
0x251 DUP4
0x252 SUB
0x253 DUP2
0x254 DUP6
0x255 DUP9
0x256 PUSH2 0x8502
0x259 GAS
0x25a SUB
0x25b CALL
0x25c POP
0x25d POP
0x25e POP
0x25f POP
0x260 POP
---
0x1f1: JUMPDEST 
0x1f2: V184 = 0x0
0x1f8: V185 = 0x1
0x1fa: V186 = 0xa0
0x1fc: V187 = 0x2
0x1fe: V188 = EXP 0x2 0xa0
0x1ff: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x200: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x201: V191 = 0xde0b6b3a7640000
0x20a: V192 = 0x40
0x20c: V193 = M[0x40]
0x20f: V194 = 0xd8
0x211: V195 = 0x2
0x213: V196 = EXP 0x2 0xd8
0x214: V197 = 0x776f6e2829
0x21a: V198 = MUL 0x776f6e2829 0x1000000000000000000000000000000000000000000000000000000
0x21c: M[V193] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x21e: V199 = 0x5
0x220: V200 = ADD 0x5 V193
0x223: V201 = 0x40
0x225: V202 = M[0x40]
0x228: V203 = SUB V200 V202
0x22a: V204 = SHA3 V202 V203
0x22b: V205 = 0xe0
0x22d: V206 = 0x2
0x22f: V207 = EXP 0x2 0xe0
0x231: V208 = DIV V204 0x100000000000000000000000000000000000000000000000000000000
0x233: V209 = 0x40
0x235: V210 = M[0x40]
0x237: V211 = 0xffffffff
0x23c: V212 = AND 0xffffffff V208
0x23d: V213 = 0xe0
0x23f: V214 = 0x2
0x241: V215 = EXP 0x2 0xe0
0x242: V216 = MUL 0x100000000000000000000000000000000000000000000000000000000 V212
0x244: M[V210] = V216
0x245: V217 = 0x4
0x247: V218 = ADD 0x4 V210
0x24b: V219 = 0x0
0x24d: V220 = 0x40
0x24f: V221 = M[0x40]
0x252: V222 = SUB V218 V221
0x256: V223 = 0x8502
0x259: V224 = GAS
0x25a: V225 = SUB V224 0x8502
0x25b: V226 = CALL V225 V190 0xde0b6b3a7640000 V221 V222 V221 0x0
---
Entry stack: [V12, 0xc1, V118]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [V12, 0xc1, V118, V118]

================================

Block 0x261
[0x261:0x264]
---
Predecessors: [0x1f1]
Successors: [0xc1]
---
0x261 JUMPDEST
0x262 POP
0x263 POP
0x264 JUMP
---
0x261: JUMPDEST 
0x264: JUMP 0xc1
---
Entry stack: [V12, 0xc1, V118, V118]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x265
[0x265:0x290]
---
Predecessors: []
Successors: []
---
0x265 STOP
0x266 LOG1
0x267 PUSH6 0x627a7a723058
0x26e SHA3
0x26f MISSING 0xb6
0x270 DUP2
0x271 MISSING 0xe8
0x272 PUSH19 0x3a7ae90707bacab69c27e629d1a70c5dc64583
0x286 DUP5
0x287 MISSING 0xcb
0x288 DUP4
0x289 MOD
0x28a CALLDATACOPY
0x28b STOP
0x28c MISSING 0xeb
0x28d ADD
0x28e SIGNEXTEND
0x28f STOP
0x290 MISSING 0x29
---
0x265: STOP 
0x266: LOG S0 S1 S2
0x267: V227 = 0x627a7a723058
0x26e: V228 = SHA3 0x627a7a723058 S3
0x26f: MISSING 0xb6
0x271: MISSING 0xe8
0x272: V229 = 0x3a7ae90707bacab69c27e629d1a70c5dc64583
0x287: MISSING 0xcb
0x289: V230 = MOD S3 S0
0x28a: CALLDATACOPY V230 S1 S2
0x28b: STOP 
0x28c: MISSING 0xeb
0x28d: V231 = ADD S0 S1
0x28e: V232 = SIGNEXTEND V231 S2
0x28f: STOP 
0x290: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V228, S1, S0, S1, S3, 0x3a7ae90707bacab69c27e629d1a70c5dc64583, S0, S1, S2, S3, S3, V232]
Exit stack: []

================================

Function 0:
Public function signature: 0x106b96ce
Entry block: 0xc3
Exit block: 0xc1
Body: 0xc1, 0xc3, 0x12d, 0x1b5

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xd9
Exit block: 0x1d1
Body: 0xd9, 0xe0, 0xe1, 0x1b9, 0x1d0, 0x1d1

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xeb
Exit block: 0xfb
Body: 0xeb, 0xf2, 0xf3, 0xfb, 0x1e2

Function 3:
Public function signature: 0xcf5b894e
Entry block: 0x117
Exit block: 0xc1
Body: 0xc1, 0x117, 0x1f1, 0x261

Function 4:
Public fallback function
Entry block: 0x46
Exit block: 0xc1
Body: 0x46, 0x4a, 0x5c, 0xbe, 0xbf, 0xc1

