Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb7]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb7
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb7
0xa: JUMPI 0xb7 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xc6]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x3ccfd60b
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xc6
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x3ccfd60b
0x39: V12 = EQ V10 0x3ccfd60b
0x3a: V13 = 0xc6
0x3d: JUMPI 0xc6 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xd8]
---
0x3e DUP1
0x3f PUSH4 0x4bd54f04
0x44 EQ
0x45 PUSH2 0xd8
0x48 JUMPI
---
0x3f: V14 = 0x4bd54f04
0x44: V15 = EQ 0x4bd54f04 V10
0x45: V16 = 0xd8
0x48: JUMPI 0xd8 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x104]
---
0x49 DUP1
0x4a PUSH4 0x5259347d
0x4f EQ
0x50 PUSH2 0x104
0x53 JUMPI
---
0x4a: V17 = 0x5259347d
0x4f: V18 = EQ 0x5259347d V10
0x50: V19 = 0x104
0x53: JUMPI 0x104 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x10e]
---
0x54 DUP1
0x55 PUSH4 0x6360fc3f
0x5a EQ
0x5b PUSH2 0x10e
0x5e JUMPI
---
0x55: V20 = 0x6360fc3f
0x5a: V21 = EQ 0x6360fc3f V10
0x5b: V22 = 0x10e
0x5e: JUMPI 0x10e V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x132]
---
0x5f DUP1
0x60 PUSH4 0x63d74226
0x65 EQ
0x66 PUSH2 0x132
0x69 JUMPI
---
0x60: V23 = 0x63d74226
0x65: V24 = EQ 0x63d74226 V10
0x66: V25 = 0x132
0x69: JUMPI 0x132 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x13c]
---
0x6a DUP1
0x6b PUSH4 0x6ad1fe02
0x70 EQ
0x71 PUSH2 0x13c
0x74 JUMPI
---
0x6b: V26 = 0x6ad1fe02
0x70: V27 = EQ 0x6ad1fe02 V10
0x71: V28 = 0x13c
0x74: JUMPI 0x13c V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x168]
---
0x75 DUP1
0x76 PUSH4 0x943dfef1
0x7b EQ
0x7c PUSH2 0x168
0x7f JUMPI
---
0x76: V29 = 0x943dfef1
0x7b: V30 = EQ 0x943dfef1 V10
0x7c: V31 = 0x168
0x7f: JUMPI 0x168 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x18a]
---
0x80 DUP1
0x81 PUSH4 0xa6f2ae3a
0x86 EQ
0x87 PUSH2 0x18a
0x8a JUMPI
---
0x81: V32 = 0xa6f2ae3a
0x86: V33 = EQ 0xa6f2ae3a V10
0x87: V34 = 0x18a
0x8a: JUMPI 0x18a V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x19c]
---
0x8b DUP1
0x8c PUSH4 0xbaf38352
0x91 EQ
0x92 PUSH2 0x19c
0x95 JUMPI
---
0x8c: V35 = 0xbaf38352
0x91: V36 = EQ 0xbaf38352 V10
0x92: V37 = 0x19c
0x95: JUMPI 0x19c V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x1ba]
---
0x96 DUP1
0x97 PUSH4 0xeb03e351
0x9c EQ
0x9d PUSH2 0x1ba
0xa0 JUMPI
---
0x97: V38 = 0xeb03e351
0x9c: V39 = EQ 0xeb03e351 V10
0x9d: V40 = 0x1ba
0xa0: JUMPI 0x1ba V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x1e8]
---
0xa1 DUP1
0xa2 PUSH4 0xfc0c546a
0xa7 EQ
0xa8 PUSH2 0x1e8
0xab JUMPI
---
0xa2: V41 = 0xfc0c546a
0xa7: V42 = EQ 0xfc0c546a V10
0xa8: V43 = 0x1e8
0xab: JUMPI 0x1e8 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x214]
---
0xac DUP1
0xad PUSH4 0xfc7e286d
0xb2 EQ
0xb3 PUSH2 0x214
0xb6 JUMPI
---
0xad: V44 = 0xfc7e286d
0xb2: V45 = EQ 0xfc7e286d V10
0xb3: V46 = 0x214
0xb6: JUMPI 0x214 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0x0, 0xac]
Successors: [0xbb]
---
0xb7 JUMPDEST
0xb8 PUSH2 0xc4
---
0xb7: JUMPDEST 
0xb8: V47 = 0xc4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V10, 0xc4]

================================

Block 0xbb
[0xbb:0xc0]
---
Predecessors: [0xb7]
Successors: []
---
0xbb JUMPDEST
0xbc PUSH1 0x0
0xbe PUSH1 0x0
0xc0 REVERT
---
0xbb: JUMPDEST 
0xbc: V48 = 0x0
0xbe: V49 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0xc1
[0xc1:0xc1]
---
Predecessors: [0x24f, 0x516, 0x8cd]
Successors: [0xc2]
---
0xc1 JUMPDEST
---
0xc1: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: [0xc1]
Successors: [0xc4]
---
0xc2 JUMPDEST
0xc3 JUMP
---
0xc2: JUMPDEST 
0xc3: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: [0xc2, 0x516, 0x540, 0x8cd]
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0xb]
Successors: [0xcd, 0xce]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 ISZERO
0xc9 PUSH2 0xce
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V50 = CALLVALUE
0xc8: V51 = ISZERO V50
0xc9: V52 = 0xce
0xcc: JUMPI 0xce V51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xcd]
---
Predecessors: [0xc6]
Successors: []
---
0xcd INVALID
---
0xcd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd5]
---
Predecessors: [0xc6]
Successors: [0x289]
---
0xce JUMPDEST
0xcf PUSH2 0xc4
0xd2 PUSH2 0x289
0xd5 JUMP
---
0xce: JUMPDEST 
0xcf: V53 = 0xc4
0xd2: V54 = 0x289
0xd5: JUMP 0x289
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V10, 0xc4]

================================

Block 0xd6
[0xd6:0xd7]
---
Predecessors: []
Successors: []
---
0xd6 JUMPDEST
0xd7 STOP
---
0xd6: JUMPDEST 
0xd7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd8
[0xd8:0xde]
---
Predecessors: [0x3e]
Successors: [0xdf, 0xe0]
---
0xd8 JUMPDEST
0xd9 CALLVALUE
0xda ISZERO
0xdb PUSH2 0xe0
0xde JUMPI
---
0xd8: JUMPDEST 
0xd9: V55 = CALLVALUE
0xda: V56 = ISZERO V55
0xdb: V57 = 0xe0
0xde: JUMPI 0xe0 V56
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdf
[0xdf:0xdf]
---
Predecessors: [0xd8]
Successors: []
---
0xdf INVALID
---
0xdf: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe0
[0xe0:0xe7]
---
Predecessors: [0xd8]
Successors: [0x51f]
---
0xe0 JUMPDEST
0xe1 PUSH2 0xe8
0xe4 PUSH2 0x51f
0xe7 JUMP
---
0xe0: JUMPDEST 
0xe1: V58 = 0xe8
0xe4: V59 = 0x51f
0xe7: JUMP 0x51f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V10, 0xe8]

================================

Block 0xe8
[0xe8:0x103]
---
Predecessors: [0x51f, 0x542, 0x8e7]
Successors: []
---
0xe8 JUMPDEST
0xe9 PUSH1 0x40
0xeb DUP1
0xec MLOAD
0xed PUSH1 0x1
0xef PUSH1 0xa0
0xf1 PUSH1 0x2
0xf3 EXP
0xf4 SUB
0xf5 SWAP1
0xf6 SWAP3
0xf7 AND
0xf8 DUP3
0xf9 MSTORE
0xfa MLOAD
0xfb SWAP1
0xfc DUP2
0xfd SWAP1
0xfe SUB
0xff PUSH1 0x20
0x101 ADD
0x102 SWAP1
0x103 RETURN
---
0xe8: JUMPDEST 
0xe9: V60 = 0x40
0xec: V61 = M[0x40]
0xed: V62 = 0x1
0xef: V63 = 0xa0
0xf1: V64 = 0x2
0xf3: V65 = EXP 0x2 0xa0
0xf4: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7: V67 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xf9: M[V61] = V67
0xfa: V68 = M[0x40]
0xfe: V69 = SUB V61 V68
0xff: V70 = 0x20
0x101: V71 = ADD 0x20 V69
0x103: RETURN V68 V71
---
Entry stack: [V10, 0xe8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xe8]

================================

Block 0x104
[0x104:0x10b]
---
Predecessors: [0x49]
Successors: [0x242]
---
0x104 JUMPDEST
0x105 PUSH2 0xc4
0x108 PUSH2 0x242
0x10b JUMP
---
0x104: JUMPDEST 
0x105: V72 = 0xc4
0x108: V73 = 0x242
0x10b: JUMP 0x242
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V10, 0xc4]

================================

Block 0x10c
[0x10c:0x10d]
---
Predecessors: []
Successors: []
---
0x10c JUMPDEST
0x10d STOP
---
0x10c: JUMPDEST 
0x10d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10e
[0x10e:0x114]
---
Predecessors: [0x54]
Successors: [0x115, 0x116]
---
0x10e JUMPDEST
0x10f CALLVALUE
0x110 ISZERO
0x111 PUSH2 0x116
0x114 JUMPI
---
0x10e: JUMPDEST 
0x10f: V74 = CALLVALUE
0x110: V75 = ISZERO V74
0x111: V76 = 0x116
0x114: JUMPI 0x116 V75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x115
[0x115:0x115]
---
Predecessors: [0x10e]
Successors: []
---
0x115 INVALID
---
0x115: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x116
[0x116:0x11d]
---
Predecessors: [0x10e]
Successors: [0x52e]
---
0x116 JUMPDEST
0x117 PUSH2 0x11e
0x11a PUSH2 0x52e
0x11d JUMP
---
0x116: JUMPDEST 
0x117: V77 = 0x11e
0x11a: V78 = 0x52e
0x11d: JUMP 0x52e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11e]
Exit stack: [V10, 0x11e]

================================

Block 0x11e
[0x11e:0x131]
---
Predecessors: [0x52e]
Successors: []
---
0x11e JUMPDEST
0x11f PUSH1 0x40
0x121 DUP1
0x122 MLOAD
0x123 SWAP2
0x124 ISZERO
0x125 ISZERO
0x126 DUP3
0x127 MSTORE
0x128 MLOAD
0x129 SWAP1
0x12a DUP2
0x12b SWAP1
0x12c SUB
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP1
0x131 RETURN
---
0x11e: JUMPDEST 
0x11f: V79 = 0x40
0x122: V80 = M[0x40]
0x124: V81 = ISZERO V446
0x125: V82 = ISZERO V81
0x127: M[V80] = V82
0x128: V83 = M[0x40]
0x12c: V84 = SUB V80 V83
0x12d: V85 = 0x20
0x12f: V86 = ADD 0x20 V84
0x131: RETURN V83 V86
---
Entry stack: [V10, 0x11e, V446]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x132
[0x132:0x139]
---
Predecessors: [0x5f]
Successors: [0x537]
---
0x132 JUMPDEST
0x133 PUSH2 0xc4
0x136 PUSH2 0x537
0x139 JUMP
---
0x132: JUMPDEST 
0x133: V87 = 0xc4
0x136: V88 = 0x537
0x139: JUMP 0x537
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V10, 0xc4]

================================

Block 0x13a
[0x13a:0x13b]
---
Predecessors: []
Successors: []
---
0x13a JUMPDEST
0x13b STOP
---
0x13a: JUMPDEST 
0x13b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13c
[0x13c:0x142]
---
Predecessors: [0x6a]
Successors: [0x143, 0x144]
---
0x13c JUMPDEST
0x13d CALLVALUE
0x13e ISZERO
0x13f PUSH2 0x144
0x142 JUMPI
---
0x13c: JUMPDEST 
0x13d: V89 = CALLVALUE
0x13e: V90 = ISZERO V89
0x13f: V91 = 0x144
0x142: JUMPI 0x144 V90
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x143
[0x143:0x143]
---
Predecessors: [0x13c]
Successors: []
---
0x143 INVALID
---
0x143: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x13c]
Successors: [0x542]
---
0x144 JUMPDEST
0x145 PUSH2 0xe8
0x148 PUSH2 0x542
0x14b JUMP
---
0x144: JUMPDEST 
0x145: V92 = 0xe8
0x148: V93 = 0x542
0x14b: JUMP 0x542
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V10, 0xe8]

================================

Block 0x14c
[0x14c:0x167]
---
Predecessors: []
Successors: []
---
0x14c JUMPDEST
0x14d PUSH1 0x40
0x14f DUP1
0x150 MLOAD
0x151 PUSH1 0x1
0x153 PUSH1 0xa0
0x155 PUSH1 0x2
0x157 EXP
0x158 SUB
0x159 SWAP1
0x15a SWAP3
0x15b AND
0x15c DUP3
0x15d MSTORE
0x15e MLOAD
0x15f SWAP1
0x160 DUP2
0x161 SWAP1
0x162 SUB
0x163 PUSH1 0x20
0x165 ADD
0x166 SWAP1
0x167 RETURN
---
0x14c: JUMPDEST 
0x14d: V94 = 0x40
0x150: V95 = M[0x40]
0x151: V96 = 0x1
0x153: V97 = 0xa0
0x155: V98 = 0x2
0x157: V99 = EXP 0x2 0xa0
0x158: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15b: V101 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x15d: M[V95] = V101
0x15e: V102 = M[0x40]
0x162: V103 = SUB V95 V102
0x163: V104 = 0x20
0x165: V105 = ADD 0x20 V103
0x167: RETURN V102 V105
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x168
[0x168:0x16e]
---
Predecessors: [0x75]
Successors: [0x16f, 0x170]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a ISZERO
0x16b PUSH2 0x170
0x16e JUMPI
---
0x168: JUMPDEST 
0x169: V106 = CALLVALUE
0x16a: V107 = ISZERO V106
0x16b: V108 = 0x170
0x16e: JUMPI 0x170 V107
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16f
[0x16f:0x16f]
---
Predecessors: [0x168]
Successors: []
---
0x16f INVALID
---
0x16f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x170
[0x170:0x177]
---
Predecessors: [0x168]
Successors: [0x556]
---
0x170 JUMPDEST
0x171 PUSH2 0x178
0x174 PUSH2 0x556
0x177 JUMP
---
0x170: JUMPDEST 
0x171: V109 = 0x178
0x174: V110 = 0x556
0x177: JUMP 0x556
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x178]
Exit stack: [V10, 0x178]

================================

Block 0x178
[0x178:0x189]
---
Predecessors: [0x556, 0x8d5, 0x8f6]
Successors: []
---
0x178 JUMPDEST
0x179 PUSH1 0x40
0x17b DUP1
0x17c MLOAD
0x17d SWAP2
0x17e DUP3
0x17f MSTORE
0x180 MLOAD
0x181 SWAP1
0x182 DUP2
0x183 SWAP1
0x184 SUB
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP1
0x189 RETURN
---
0x178: JUMPDEST 
0x179: V111 = 0x40
0x17c: V112 = M[0x40]
0x17f: M[V112] = S0
0x180: V113 = M[0x40]
0x184: V114 = SUB V112 V113
0x185: V115 = 0x20
0x187: V116 = ADD 0x20 V114
0x189: RETURN V113 V116
---
Entry stack: [V10, 0x178, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x178]

================================

Block 0x18a
[0x18a:0x190]
---
Predecessors: [0x80]
Successors: [0x191, 0x192]
---
0x18a JUMPDEST
0x18b CALLVALUE
0x18c ISZERO
0x18d PUSH2 0x192
0x190 JUMPI
---
0x18a: JUMPDEST 
0x18b: V117 = CALLVALUE
0x18c: V118 = ISZERO V117
0x18d: V119 = 0x192
0x190: JUMPI 0x192 V118
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x191
[0x191:0x191]
---
Predecessors: [0x18a]
Successors: []
---
0x191 INVALID
---
0x191: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x192
[0x192:0x199]
---
Predecessors: [0x18a]
Successors: [0x55c]
---
0x192 JUMPDEST
0x193 PUSH2 0xc4
0x196 PUSH2 0x55c
0x199 JUMP
---
0x192: JUMPDEST 
0x193: V120 = 0xc4
0x196: V121 = 0x55c
0x199: JUMP 0x55c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V10, 0xc4]

================================

Block 0x19a
[0x19a:0x19b]
---
Predecessors: []
Successors: []
---
0x19a JUMPDEST
0x19b STOP
---
0x19a: JUMPDEST 
0x19b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x19c
[0x19c:0x1a2]
---
Predecessors: [0x8b]
Successors: [0x1a3, 0x1a4]
---
0x19c JUMPDEST
0x19d CALLVALUE
0x19e ISZERO
0x19f PUSH2 0x1a4
0x1a2 JUMPI
---
0x19c: JUMPDEST 
0x19d: V122 = CALLVALUE
0x19e: V123 = ISZERO V122
0x19f: V124 = 0x1a4
0x1a2: JUMPI 0x1a4 V123
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a3
[0x1a3:0x1a3]
---
Predecessors: [0x19c]
Successors: []
---
0x1a3 INVALID
---
0x1a3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a4
[0x1a4:0x1b7]
---
Predecessors: [0x19c]
Successors: [0x568]
---
0x1a4 JUMPDEST
0x1a5 PUSH2 0xc4
0x1a8 PUSH1 0x1
0x1aa PUSH1 0xa0
0x1ac PUSH1 0x2
0x1ae EXP
0x1af SUB
0x1b0 PUSH1 0x4
0x1b2 CALLDATALOAD
0x1b3 AND
0x1b4 PUSH2 0x568
0x1b7 JUMP
---
0x1a4: JUMPDEST 
0x1a5: V125 = 0xc4
0x1a8: V126 = 0x1
0x1aa: V127 = 0xa0
0x1ac: V128 = 0x2
0x1ae: V129 = EXP 0x2 0xa0
0x1af: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b0: V131 = 0x4
0x1b2: V132 = CALLDATALOAD 0x4
0x1b3: V133 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V134 = 0x568
0x1b7: JUMP 0x568
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc4, V133]
Exit stack: [V10, 0xc4, V133]

================================

Block 0x1b8
[0x1b8:0x1b9]
---
Predecessors: []
Successors: []
---
0x1b8 JUMPDEST
0x1b9 STOP
---
0x1b8: JUMPDEST 
0x1b9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ba
[0x1ba:0x1c0]
---
Predecessors: [0x96]
Successors: [0x1c1, 0x1c2]
---
0x1ba JUMPDEST
0x1bb CALLVALUE
0x1bc ISZERO
0x1bd PUSH2 0x1c2
0x1c0 JUMPI
---
0x1ba: JUMPDEST 
0x1bb: V135 = CALLVALUE
0x1bc: V136 = ISZERO V135
0x1bd: V137 = 0x1c2
0x1c0: JUMPI 0x1c2 V136
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c1
[0x1c1:0x1c1]
---
Predecessors: [0x1ba]
Successors: []
---
0x1c1 INVALID
---
0x1c1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c2
[0x1c2:0x1d5]
---
Predecessors: [0x1ba]
Successors: [0x8d5]
---
0x1c2 JUMPDEST
0x1c3 PUSH2 0x178
0x1c6 PUSH1 0x1
0x1c8 PUSH1 0xa0
0x1ca PUSH1 0x2
0x1cc EXP
0x1cd SUB
0x1ce PUSH1 0x4
0x1d0 CALLDATALOAD
0x1d1 AND
0x1d2 PUSH2 0x8d5
0x1d5 JUMP
---
0x1c2: JUMPDEST 
0x1c3: V138 = 0x178
0x1c6: V139 = 0x1
0x1c8: V140 = 0xa0
0x1ca: V141 = 0x2
0x1cc: V142 = EXP 0x2 0xa0
0x1cd: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ce: V144 = 0x4
0x1d0: V145 = CALLDATALOAD 0x4
0x1d1: V146 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V147 = 0x8d5
0x1d5: JUMP 0x8d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x178, V146]
Exit stack: [V10, 0x178, V146]

================================

Block 0x1d6
[0x1d6:0x1e7]
---
Predecessors: []
Successors: []
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x40
0x1d9 DUP1
0x1da MLOAD
0x1db SWAP2
0x1dc DUP3
0x1dd MSTORE
0x1de MLOAD
0x1df SWAP1
0x1e0 DUP2
0x1e1 SWAP1
0x1e2 SUB
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP1
0x1e7 RETURN
---
0x1d6: JUMPDEST 
0x1d7: V148 = 0x40
0x1da: V149 = M[0x40]
0x1dd: M[V149] = S0
0x1de: V150 = M[0x40]
0x1e2: V151 = SUB V149 V150
0x1e3: V152 = 0x20
0x1e5: V153 = ADD 0x20 V151
0x1e7: RETURN V150 V153
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e8
[0x1e8:0x1ee]
---
Predecessors: [0xa1]
Successors: [0x1ef, 0x1f0]
---
0x1e8 JUMPDEST
0x1e9 CALLVALUE
0x1ea ISZERO
0x1eb PUSH2 0x1f0
0x1ee JUMPI
---
0x1e8: JUMPDEST 
0x1e9: V154 = CALLVALUE
0x1ea: V155 = ISZERO V154
0x1eb: V156 = 0x1f0
0x1ee: JUMPI 0x1f0 V155
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ef
[0x1ef:0x1ef]
---
Predecessors: [0x1e8]
Successors: []
---
0x1ef INVALID
---
0x1ef: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f0
[0x1f0:0x1f7]
---
Predecessors: [0x1e8]
Successors: [0x8e7]
---
0x1f0 JUMPDEST
0x1f1 PUSH2 0xe8
0x1f4 PUSH2 0x8e7
0x1f7 JUMP
---
0x1f0: JUMPDEST 
0x1f1: V157 = 0xe8
0x1f4: V158 = 0x8e7
0x1f7: JUMP 0x8e7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V10, 0xe8]

================================

Block 0x1f8
[0x1f8:0x213]
---
Predecessors: []
Successors: []
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x40
0x1fb DUP1
0x1fc MLOAD
0x1fd PUSH1 0x1
0x1ff PUSH1 0xa0
0x201 PUSH1 0x2
0x203 EXP
0x204 SUB
0x205 SWAP1
0x206 SWAP3
0x207 AND
0x208 DUP3
0x209 MSTORE
0x20a MLOAD
0x20b SWAP1
0x20c DUP2
0x20d SWAP1
0x20e SUB
0x20f PUSH1 0x20
0x211 ADD
0x212 SWAP1
0x213 RETURN
---
0x1f8: JUMPDEST 
0x1f9: V159 = 0x40
0x1fc: V160 = M[0x40]
0x1fd: V161 = 0x1
0x1ff: V162 = 0xa0
0x201: V163 = 0x2
0x203: V164 = EXP 0x2 0xa0
0x204: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x207: V166 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x209: M[V160] = V166
0x20a: V167 = M[0x40]
0x20e: V168 = SUB V160 V167
0x20f: V169 = 0x20
0x211: V170 = ADD 0x20 V168
0x213: RETURN V167 V170
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x214
[0x214:0x21a]
---
Predecessors: [0xac]
Successors: [0x21b, 0x21c]
---
0x214 JUMPDEST
0x215 CALLVALUE
0x216 ISZERO
0x217 PUSH2 0x21c
0x21a JUMPI
---
0x214: JUMPDEST 
0x215: V171 = CALLVALUE
0x216: V172 = ISZERO V171
0x217: V173 = 0x21c
0x21a: JUMPI 0x21c V172
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21b
[0x21b:0x21b]
---
Predecessors: [0x214]
Successors: []
---
0x21b INVALID
---
0x21b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21c
[0x21c:0x22f]
---
Predecessors: [0x214]
Successors: [0x8f6]
---
0x21c JUMPDEST
0x21d PUSH2 0x178
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 PUSH1 0x4
0x22a CALLDATALOAD
0x22b AND
0x22c PUSH2 0x8f6
0x22f JUMP
---
0x21c: JUMPDEST 
0x21d: V174 = 0x178
0x220: V175 = 0x1
0x222: V176 = 0xa0
0x224: V177 = 0x2
0x226: V178 = EXP 0x2 0xa0
0x227: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V180 = 0x4
0x22a: V181 = CALLDATALOAD 0x4
0x22b: V182 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V183 = 0x8f6
0x22f: JUMP 0x8f6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x178, V182]
Exit stack: [V10, 0x178, V182]

================================

Block 0x230
[0x230:0x241]
---
Predecessors: []
Successors: []
---
0x230 JUMPDEST
0x231 PUSH1 0x40
0x233 DUP1
0x234 MLOAD
0x235 SWAP2
0x236 DUP3
0x237 MSTORE
0x238 MLOAD
0x239 SWAP1
0x23a DUP2
0x23b SWAP1
0x23c SUB
0x23d PUSH1 0x20
0x23f ADD
0x240 SWAP1
0x241 RETURN
---
0x230: JUMPDEST 
0x231: V184 = 0x40
0x234: V185 = M[0x40]
0x237: M[V185] = S0
0x238: V186 = M[0x40]
0x23c: V187 = SUB V185 V186
0x23d: V188 = 0x20
0x23f: V189 = ADD 0x20 V187
0x241: RETURN V186 V189
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x242
[0x242:0x24e]
---
Predecessors: [0x104]
Successors: [0x24f, 0x271]
---
0x242 JUMPDEST
0x243 PUSH1 0x3
0x245 SLOAD
0x246 PUSH1 0xff
0x248 AND
0x249 ISZERO
0x24a ISZERO
0x24b PUSH2 0x271
0x24e JUMPI
---
0x242: JUMPDEST 
0x243: V190 = 0x3
0x245: V191 = S[0x3]
0x246: V192 = 0xff
0x248: V193 = AND 0xff V191
0x249: V194 = ISZERO V193
0x24a: V195 = ISZERO V194
0x24b: V196 = 0x271
0x24e: JUMPI 0x271 V195
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x24f
[0x24f:0x270]
---
Predecessors: [0x242]
Successors: [0xc1]
---
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 CALLER
0x258 AND
0x259 PUSH1 0x0
0x25b SWAP1
0x25c DUP2
0x25d MSTORE
0x25e PUSH1 0x20
0x260 DUP2
0x261 SWAP1
0x262 MSTORE
0x263 PUSH1 0x40
0x265 SWAP1
0x266 SHA3
0x267 DUP1
0x268 SLOAD
0x269 CALLVALUE
0x26a ADD
0x26b SWAP1
0x26c SSTORE
0x26d PUSH2 0xc1
0x270 JUMP
---
0x24f: V197 = 0x1
0x251: V198 = 0xa0
0x253: V199 = 0x2
0x255: V200 = EXP 0x2 0xa0
0x256: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x257: V202 = CALLER
0x258: V203 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x259: V204 = 0x0
0x25d: M[0x0] = V203
0x25e: V205 = 0x20
0x262: M[0x20] = 0x0
0x263: V206 = 0x40
0x266: V207 = SHA3 0x0 0x40
0x268: V208 = S[V207]
0x269: V209 = CALLVALUE
0x26a: V210 = ADD V209 V208
0x26c: S[V207] = V210
0x26d: V211 = 0xc1
0x270: JUMP 0xc1
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x271
[0x271:0x277]
---
Predecessors: [0x242]
Successors: [0x278, 0x27d]
---
0x271 JUMPDEST
0x272 CALLVALUE
0x273 ISZERO
0x274 PUSH2 0x27d
0x277 JUMPI
---
0x271: JUMPDEST 
0x272: V212 = CALLVALUE
0x273: V213 = ISZERO V212
0x274: V214 = 0x27d
0x277: JUMPI 0x27d V213
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x278
[0x278:0x27c]
---
Predecessors: [0x271]
Successors: []
---
0x278 PUSH1 0x0
0x27a PUSH1 0x0
0x27c REVERT
---
0x278: V215 = 0x0
0x27a: V216 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x27d
[0x27d:0x284]
---
Predecessors: [0x271]
Successors: [0x289]
---
0x27d JUMPDEST
0x27e PUSH2 0xc1
0x281 PUSH2 0x289
0x284 JUMP
---
0x27d: JUMPDEST 
0x27e: V217 = 0xc1
0x281: V218 = 0x289
0x284: JUMP 0x289
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V10, 0xc4, 0xc1]

================================

Block 0x285
[0x285:0x285]
---
Predecessors: []
Successors: [0x286]
---
0x285 JUMPDEST
---
0x285: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x286
[0x286:0x286]
---
Predecessors: [0x285]
Successors: [0x287]
---
0x286 JUMPDEST
---
0x286: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x287
[0x287:0x288]
---
Predecessors: [0x286]
Successors: []
Has unresolved jump.
---
0x287 JUMPDEST
0x288 JUMP
---
0x287: JUMPDEST 
0x288: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x289
[0x289:0x319]
---
Predecessors: [0xce, 0x27d]
Successors: [0x31a, 0x31b]
---
0x289 JUMPDEST
0x28a PUSH1 0x1
0x28c PUSH1 0xa0
0x28e PUSH1 0x2
0x290 EXP
0x291 SUB
0x292 CALLER
0x293 DUP2
0x294 AND
0x295 PUSH1 0x0
0x297 SWAP1
0x298 DUP2
0x299 MSTORE
0x29a PUSH1 0x20
0x29c DUP2
0x29d DUP2
0x29e MSTORE
0x29f PUSH1 0x40
0x2a1 DUP1
0x2a2 DUP4
0x2a3 SHA3
0x2a4 DUP1
0x2a5 SLOAD
0x2a6 SWAP1
0x2a7 DUP5
0x2a8 SWAP1
0x2a9 SSTORE
0x2aa PUSH1 0x2
0x2ac SLOAD
0x2ad PUSH1 0x5
0x2af SLOAD
0x2b0 DUP4
0x2b1 MLOAD
0x2b2 DUP6
0x2b3 ADD
0x2b4 DUP7
0x2b5 SWAP1
0x2b6 MSTORE
0x2b7 DUP4
0x2b8 MLOAD
0x2b9 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2da DUP2
0x2db MSTORE
0x2dc ADDRESS
0x2dd DUP9
0x2de AND
0x2df PUSH1 0x4
0x2e1 DUP3
0x2e2 ADD
0x2e3 DUP2
0x2e4 SWAP1
0x2e5 MSTORE
0x2e6 SWAP5
0x2e7 MLOAD
0x2e8 SWAP4
0x2e9 SWAP8
0x2ea SWAP5
0x2eb BALANCE
0x2ec SWAP3
0x2ed SWAP1
0x2ee SWAP3
0x2ef SUB
0x2f0 SWAP6
0x2f1 SWAP5
0x2f2 DUP6
0x2f3 SWAP5
0x2f4 DUP6
0x2f5 SWAP5
0x2f6 DUP6
0x2f7 SWAP5
0x2f8 DUP6
0x2f9 SWAP5
0x2fa SWAP1
0x2fb SWAP3
0x2fc AND
0x2fd SWAP3
0x2fe PUSH4 0x70a08231
0x303 SWAP3
0x304 PUSH1 0x24
0x306 DUP1
0x307 DUP3
0x308 ADD
0x309 SWAP4
0x30a SWAP2
0x30b DUP3
0x30c SWAP1
0x30d SUB
0x30e ADD
0x30f DUP2
0x310 DUP8
0x311 DUP8
0x312 DUP1
0x313 EXTCODESIZE
0x314 ISZERO
0x315 ISZERO
0x316 PUSH2 0x31b
0x319 JUMPI
---
0x289: JUMPDEST 
0x28a: V219 = 0x1
0x28c: V220 = 0xa0
0x28e: V221 = 0x2
0x290: V222 = EXP 0x2 0xa0
0x291: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x292: V224 = CALLER
0x294: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x295: V226 = 0x0
0x299: M[0x0] = V225
0x29a: V227 = 0x20
0x29e: M[0x20] = 0x0
0x29f: V228 = 0x40
0x2a3: V229 = SHA3 0x0 0x40
0x2a5: V230 = S[V229]
0x2a9: S[V229] = 0x0
0x2aa: V231 = 0x2
0x2ac: V232 = S[0x2]
0x2ad: V233 = 0x5
0x2af: V234 = S[0x5]
0x2b1: V235 = M[0x40]
0x2b3: V236 = ADD 0x20 V235
0x2b6: M[V236] = 0x0
0x2b8: V237 = M[0x40]
0x2b9: V238 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2db: M[V237] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2dc: V239 = ADDRESS
0x2de: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x2df: V241 = 0x4
0x2e2: V242 = ADD V237 0x4
0x2e5: M[V242] = V240
0x2e7: V243 = M[0x40]
0x2eb: V244 = BALANCE V240
0x2ef: V245 = SUB V244 V232
0x2fc: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x2fe: V247 = 0x70a08231
0x304: V248 = 0x24
0x308: V249 = ADD V237 0x24
0x30d: V250 = SUB V237 V243
0x30e: V251 = ADD V250 0x24
0x313: V252 = EXTCODESIZE V246
0x314: V253 = ISZERO V252
0x315: V254 = ISZERO V253
0x316: V255 = 0x31b
0x319: JUMPI 0x31b V254
---
Entry stack: [V10, S1, {0xc1, 0xc4}]
Stack pops: 0
Stack additions: [V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249, 0x20, V243, V251, V243, 0x0, V246]
Exit stack: [V10, S1, {0xc1, 0xc4}, V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249, 0x20, V243, V251, V243, 0x0, V246]

================================

Block 0x31a
[0x31a:0x31a]
---
Predecessors: [0x289]
Successors: []
---
0x31a INVALID
---
0x31a: INVALID 
---
Entry stack: [V10, S17, {0xc1, 0xc4}, V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249, 0x20, V243, V251, V243, 0x0, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc4}, V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249, 0x20, V243, V251, V243, 0x0, V246]

================================

Block 0x31b
[0x31b:0x327]
---
Predecessors: [0x289]
Successors: [0x328, 0x329]
---
0x31b JUMPDEST
0x31c PUSH2 0x2c6
0x31f GAS
0x320 SUB
0x321 CALL
0x322 ISZERO
0x323 ISZERO
0x324 PUSH2 0x329
0x327 JUMPI
---
0x31b: JUMPDEST 
0x31c: V256 = 0x2c6
0x31f: V257 = GAS
0x320: V258 = SUB V257 0x2c6
0x321: V259 = CALL V258 V246 0x0 V243 V251 V243 0x20
0x322: V260 = ISZERO V259
0x323: V261 = ISZERO V260
0x324: V262 = 0x329
0x327: JUMPI 0x329 V261
---
Entry stack: [V10, S17, {0xc1, 0xc4}, V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249, 0x20, V243, V251, V243, 0x0, V246]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc4}, V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249]

================================

Block 0x328
[0x328:0x328]
---
Predecessors: [0x31b]
Successors: []
---
0x328 INVALID
---
0x328: INVALID 
---
Entry stack: [V10, S11, {0xc1, 0xc4}, S9, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc4}, S9, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]

================================

Block 0x329
[0x329:0x349]
---
Predecessors: [0x31b]
Successors: [0x34a, 0x34b]
---
0x329 JUMPDEST
0x32a POP
0x32b POP
0x32c PUSH1 0x40
0x32e MLOAD
0x32f MLOAD
0x330 SWAP6
0x331 POP
0x332 POP
0x333 PUSH2 0x2710
0x336 DUP1
0x337 DUP8
0x338 MUL
0x339 DUP7
0x33a ADD
0x33b SWAP5
0x33c POP
0x33d DUP5
0x33e SWAP1
0x33f DUP9
0x340 DUP9
0x341 MUL
0x342 MUL
0x343 DUP2
0x344 ISZERO
0x345 ISZERO
0x346 PUSH2 0x34b
0x349 JUMPI
---
0x329: JUMPDEST 
0x32c: V263 = 0x40
0x32e: V264 = M[0x40]
0x32f: V265 = M[V264]
0x333: V266 = 0x2710
0x338: V267 = MUL S8 0x2710
0x33a: V268 = ADD V265 V267
0x341: V269 = MUL S8 S9
0x342: V270 = MUL V269 0x2710
0x344: V271 = ISZERO V268
0x345: V272 = ISZERO V271
0x346: V273 = 0x34b
0x349: JUMPI 0x34b V272
---
Entry stack: [V10, S11, {0xc1, 0xc4}, S9, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]
Stack pops: 10
Stack additions: [S9, S8, V265, V268, S5, S4, S3, V268, V270]
Exit stack: [V10, S11, {0xc1, 0xc4}, S9, S8, V265, V268, 0x0, 0x0, 0x0, V268, V270]

================================

Block 0x34a
[0x34a:0x34a]
---
Predecessors: [0x329]
Successors: []
---
0x34a INVALID
---
0x34a: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, S7, V265, V268, 0x0, 0x0, 0x0, V268, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, S7, V265, V268, 0x0, 0x0, 0x0, V268, V270]

================================

Block 0x34b
[0x34b:0x359]
---
Predecessors: [0x329]
Successors: [0x35a, 0x35b]
---
0x34b JUMPDEST
0x34c DIV
0x34d SWAP3
0x34e POP
0x34f DUP4
0x350 DUP6
0x351 DUP9
0x352 MUL
0x353 DUP2
0x354 ISZERO
0x355 ISZERO
0x356 PUSH2 0x35b
0x359 JUMPI
---
0x34b: JUMPDEST 
0x34c: V274 = DIV V270 V268
0x352: V275 = MUL S8 V265
0x354: V276 = ISZERO V268
0x355: V277 = ISZERO V276
0x356: V278 = 0x35b
0x359: JUMPI 0x35b V277
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, S7, V265, V268, 0x0, 0x0, 0x0, V268, V270]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V274, S3, S2, S5, V275]
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, S7, V265, V268, V274, 0x0, 0x0, V268, V275]

================================

Block 0x35a
[0x35a:0x35a]
---
Predecessors: [0x34b]
Successors: []
---
0x35a INVALID
---
0x35a: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, S7, S6, S5, V274, 0x0, 0x0, S1, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, S7, S6, S5, V274, 0x0, 0x0, S1, V275]

================================

Block 0x35b
[0x35b:0x393]
---
Predecessors: [0x34b]
Successors: [0x394, 0x3b6]
---
0x35b JUMPDEST
0x35c DIV
0x35d PUSH2 0x2710
0x360 MUL
0x361 SWAP2
0x362 POP
0x363 PUSH1 0x0
0x365 SWAP1
0x366 POP
0x367 DUP2
0x368 PUSH1 0x1
0x36a PUSH1 0x0
0x36c CALLER
0x36d PUSH1 0x1
0x36f PUSH1 0xa0
0x371 PUSH1 0x2
0x373 EXP
0x374 SUB
0x375 AND
0x376 PUSH1 0x1
0x378 PUSH1 0xa0
0x37a PUSH1 0x2
0x37c EXP
0x37d SUB
0x37e AND
0x37f DUP2
0x380 MSTORE
0x381 PUSH1 0x20
0x383 ADD
0x384 SWAP1
0x385 DUP2
0x386 MSTORE
0x387 PUSH1 0x20
0x389 ADD
0x38a PUSH1 0x0
0x38c SHA3
0x38d SLOAD
0x38e LT
0x38f ISZERO
0x390 PUSH2 0x3b6
0x393 JUMPI
---
0x35b: JUMPDEST 
0x35c: V279 = DIV V275 S1
0x35d: V280 = 0x2710
0x360: V281 = MUL 0x2710 V279
0x363: V282 = 0x0
0x368: V283 = 0x1
0x36a: V284 = 0x0
0x36c: V285 = CALLER
0x36d: V286 = 0x1
0x36f: V287 = 0xa0
0x371: V288 = 0x2
0x373: V289 = EXP 0x2 0xa0
0x374: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x375: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x376: V292 = 0x1
0x378: V293 = 0xa0
0x37a: V294 = 0x2
0x37c: V295 = EXP 0x2 0xa0
0x37d: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37e: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x380: M[0x0] = V297
0x381: V298 = 0x20
0x383: V299 = ADD 0x20 0x0
0x386: M[0x20] = 0x1
0x387: V300 = 0x20
0x389: V301 = ADD 0x20 0x20
0x38a: V302 = 0x0
0x38c: V303 = SHA3 0x0 0x40
0x38d: V304 = S[V303]
0x38e: V305 = LT V304 V281
0x38f: V306 = ISZERO V305
0x390: V307 = 0x3b6
0x393: JUMPI 0x3b6 V306
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, S7, S6, S5, V274, 0x0, 0x0, S1, V275]
Stack pops: 4
Stack additions: [V281, 0x0]
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, S7, S6, S5, V274, V281, 0x0]

================================

Block 0x394
[0x394:0x3b1]
---
Predecessors: [0x35b]
Successors: [0x3b2]
---
0x394 PUSH1 0x1
0x396 PUSH1 0xa0
0x398 PUSH1 0x2
0x39a EXP
0x39b SUB
0x39c CALLER
0x39d AND
0x39e PUSH1 0x0
0x3a0 SWAP1
0x3a1 DUP2
0x3a2 MSTORE
0x3a3 PUSH1 0x1
0x3a5 PUSH1 0x20
0x3a7 MSTORE
0x3a8 PUSH1 0x40
0x3aa SWAP1
0x3ab SHA3
0x3ac SLOAD
0x3ad PUSH1 0x64
0x3af SWAP1
0x3b0 DUP4
0x3b1 SUB
---
0x394: V308 = 0x1
0x396: V309 = 0xa0
0x398: V310 = 0x2
0x39a: V311 = EXP 0x2 0xa0
0x39b: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39c: V313 = CALLER
0x39d: V314 = AND V313 0xffffffffffffffffffffffffffffffffffffffff
0x39e: V315 = 0x0
0x3a2: M[0x0] = V314
0x3a3: V316 = 0x1
0x3a5: V317 = 0x20
0x3a7: M[0x20] = 0x1
0x3a8: V318 = 0x40
0x3ab: V319 = SHA3 0x0 0x40
0x3ac: V320 = S[V319]
0x3ad: V321 = 0x64
0x3b1: V322 = SUB V281 V320
---
Entry stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, V281, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, V322]
Exit stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, V281, 0x0, 0x64, V322]

================================

Block 0x3b2
[0x3b2:0x3b5]
---
Predecessors: [0x394]
Successors: [0x3b6]
---
0x3b2 JUMPDEST
0x3b3 DIV
0x3b4 SWAP1
0x3b5 POP
---
0x3b2: JUMPDEST 
0x3b3: V323 = DIV V322 0x64
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, S7, S6, S5, S4, S3, 0x0, 0x64, V322]
Stack pops: 3
Stack additions: [V323]
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, S7, S6, S5, S4, S3, V323]

================================

Block 0x3b6
[0x3b6:0x42a]
---
Predecessors: [0x35b, 0x3b2]
Successors: [0x42b, 0x42c]
---
0x3b6 JUMPDEST
0x3b7 PUSH1 0x5
0x3b9 SLOAD
0x3ba PUSH1 0x40
0x3bc DUP1
0x3bd MLOAD
0x3be PUSH1 0x0
0x3c0 PUSH1 0x20
0x3c2 SWAP2
0x3c3 DUP3
0x3c4 ADD
0x3c5 DUP2
0x3c6 SWAP1
0x3c7 MSTORE
0x3c8 DUP3
0x3c9 MLOAD
0x3ca PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3eb DUP2
0x3ec MSTORE
0x3ed PUSH1 0x1
0x3ef PUSH1 0xa0
0x3f1 PUSH1 0x2
0x3f3 EXP
0x3f4 SUB
0x3f5 CALLER
0x3f6 DUP2
0x3f7 AND
0x3f8 PUSH1 0x4
0x3fa DUP4
0x3fb ADD
0x3fc MSTORE
0x3fd DUP7
0x3fe DUP9
0x3ff SUB
0x400 PUSH1 0x24
0x402 DUP4
0x403 ADD
0x404 MSTORE
0x405 SWAP4
0x406 MLOAD
0x407 SWAP4
0x408 SWAP1
0x409 SWAP5
0x40a AND
0x40b SWAP4
0x40c PUSH4 0xa9059cbb
0x411 SWAP4
0x412 PUSH1 0x44
0x414 DUP1
0x415 DUP4
0x416 ADD
0x417 SWAP5
0x418 SWAP4
0x419 SWAP2
0x41a SWAP3
0x41b DUP4
0x41c SWAP1
0x41d SUB
0x41e ADD
0x41f SWAP1
0x420 DUP3
0x421 SWAP1
0x422 DUP8
0x423 DUP1
0x424 EXTCODESIZE
0x425 ISZERO
0x426 ISZERO
0x427 PUSH2 0x42c
0x42a JUMPI
---
0x3b6: JUMPDEST 
0x3b7: V324 = 0x5
0x3b9: V325 = S[0x5]
0x3ba: V326 = 0x40
0x3bd: V327 = M[0x40]
0x3be: V328 = 0x0
0x3c0: V329 = 0x20
0x3c4: V330 = ADD 0x20 V327
0x3c7: M[V330] = 0x0
0x3c9: V331 = M[0x40]
0x3ca: V332 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3ec: M[V331] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3ed: V333 = 0x1
0x3ef: V334 = 0xa0
0x3f1: V335 = 0x2
0x3f3: V336 = EXP 0x2 0xa0
0x3f4: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V338 = CALLER
0x3f7: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x3f8: V340 = 0x4
0x3fb: V341 = ADD V331 0x4
0x3fc: M[V341] = V339
0x3ff: V342 = SUB S1 S0
0x400: V343 = 0x24
0x403: V344 = ADD V331 0x24
0x404: M[V344] = V342
0x406: V345 = M[0x40]
0x40a: V346 = AND V325 0xffffffffffffffffffffffffffffffffffffffff
0x40c: V347 = 0xa9059cbb
0x412: V348 = 0x44
0x416: V349 = ADD V331 0x44
0x41d: V350 = SUB V331 V345
0x41e: V351 = ADD V350 0x44
0x424: V352 = EXTCODESIZE V346
0x425: V353 = ISZERO V352
0x426: V354 = ISZERO V353
0x427: V355 = 0x42c
0x42a: JUMPI 0x42c V354
---
Entry stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]
Exit stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]

================================

Block 0x42b
[0x42b:0x42b]
---
Predecessors: [0x3b6]
Successors: []
---
0x42b INVALID
---
0x42b: INVALID 
---
Entry stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, S12, S11, S10, S9, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, S12, S11, S10, S9, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]

================================

Block 0x42c
[0x42c:0x438]
---
Predecessors: [0x3b6]
Successors: [0x439, 0x43a]
---
0x42c JUMPDEST
0x42d PUSH2 0x2c6
0x430 GAS
0x431 SUB
0x432 CALL
0x433 ISZERO
0x434 ISZERO
0x435 PUSH2 0x43a
0x438 JUMPI
---
0x42c: JUMPDEST 
0x42d: V356 = 0x2c6
0x430: V357 = GAS
0x431: V358 = SUB V357 0x2c6
0x432: V359 = CALL V358 V346 0x0 V345 V351 V345 0x20
0x433: V360 = ISZERO V359
0x434: V361 = ISZERO V360
0x435: V362 = 0x43a
0x438: JUMPI 0x43a V361
---
Entry stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, S12, S11, S10, S9, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, S12, S11, S10, S9, V346, 0xa9059cbb, V349]

================================

Block 0x439
[0x439:0x439]
---
Predecessors: [0x42c]
Successors: []
---
0x439 INVALID
---
0x439: INVALID 
---
Entry stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x43a
[0x43a:0x448]
---
Predecessors: [0x42c]
Successors: [0x449, 0x44e]
---
0x43a JUMPDEST
0x43b POP
0x43c POP
0x43d PUSH1 0x40
0x43f MLOAD
0x440 MLOAD
0x441 ISZERO
0x442 ISZERO
0x443 SWAP1
0x444 POP
0x445 PUSH2 0x44e
0x448 JUMPI
---
0x43a: JUMPDEST 
0x43d: V363 = 0x40
0x43f: V364 = M[0x40]
0x440: V365 = M[V364]
0x441: V366 = ISZERO V365
0x442: V367 = ISZERO V366
0x445: V368 = 0x44e
0x448: JUMPI 0x44e V367
---
Entry stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x449
[0x449:0x44d]
---
Predecessors: [0x43a]
Successors: []
---
0x449 PUSH1 0x0
0x44b PUSH1 0x0
0x44d REVERT
---
0x449: V369 = 0x0
0x44b: V370 = 0x0
0x44d: REVERT 0x0 0x0
---
Entry stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x44e
[0x44e:0x4c4]
---
Predecessors: [0x43a]
Successors: [0x4c5, 0x4c6]
---
0x44e JUMPDEST
0x44f PUSH1 0x5
0x451 SLOAD
0x452 PUSH1 0x6
0x454 SLOAD
0x455 PUSH1 0x40
0x457 DUP1
0x458 MLOAD
0x459 PUSH1 0x0
0x45b PUSH1 0x20
0x45d SWAP2
0x45e DUP3
0x45f ADD
0x460 DUP2
0x461 SWAP1
0x462 MSTORE
0x463 DUP3
0x464 MLOAD
0x465 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x486 DUP2
0x487 MSTORE
0x488 PUSH1 0x1
0x48a PUSH1 0xa0
0x48c PUSH1 0x2
0x48e EXP
0x48f SUB
0x490 SWAP5
0x491 DUP6
0x492 AND
0x493 PUSH1 0x4
0x495 DUP3
0x496 ADD
0x497 MSTORE
0x498 PUSH1 0x24
0x49a DUP2
0x49b ADD
0x49c DUP8
0x49d SWAP1
0x49e MSTORE
0x49f SWAP3
0x4a0 MLOAD
0x4a1 SWAP4
0x4a2 SWAP1
0x4a3 SWAP5
0x4a4 AND
0x4a5 SWAP4
0x4a6 PUSH4 0xa9059cbb
0x4ab SWAP4
0x4ac PUSH1 0x44
0x4ae DUP1
0x4af DUP6
0x4b0 ADD
0x4b1 SWAP5
0x4b2 SWAP2
0x4b3 SWAP3
0x4b4 SWAP2
0x4b5 DUP4
0x4b6 SWAP1
0x4b7 SUB
0x4b8 ADD
0x4b9 SWAP1
0x4ba DUP3
0x4bb SWAP1
0x4bc DUP8
0x4bd DUP1
0x4be EXTCODESIZE
0x4bf ISZERO
0x4c0 ISZERO
0x4c1 PUSH2 0x4c6
0x4c4 JUMPI
---
0x44e: JUMPDEST 
0x44f: V371 = 0x5
0x451: V372 = S[0x5]
0x452: V373 = 0x6
0x454: V374 = S[0x6]
0x455: V375 = 0x40
0x458: V376 = M[0x40]
0x459: V377 = 0x0
0x45b: V378 = 0x20
0x45f: V379 = ADD 0x20 V376
0x462: M[V379] = 0x0
0x464: V380 = M[0x40]
0x465: V381 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x487: M[V380] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x488: V382 = 0x1
0x48a: V383 = 0xa0
0x48c: V384 = 0x2
0x48e: V385 = EXP 0x2 0xa0
0x48f: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x492: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x493: V388 = 0x4
0x496: V389 = ADD V380 0x4
0x497: M[V389] = V387
0x498: V390 = 0x24
0x49b: V391 = ADD V380 0x24
0x49e: M[V391] = S0
0x4a0: V392 = M[0x40]
0x4a4: V393 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x4a6: V394 = 0xa9059cbb
0x4ac: V395 = 0x44
0x4b0: V396 = ADD V380 0x44
0x4b7: V397 = SUB V380 V392
0x4b8: V398 = ADD V397 0x44
0x4be: V399 = EXTCODESIZE V393
0x4bf: V400 = ISZERO V399
0x4c0: V401 = ISZERO V400
0x4c1: V402 = 0x4c6
0x4c4: JUMPI 0x4c6 V401
---
Entry stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]
Exit stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]

================================

Block 0x4c5
[0x4c5:0x4c5]
---
Predecessors: [0x44e]
Successors: []
---
0x4c5 INVALID
---
0x4c5: INVALID 
---
Entry stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, S12, S11, S10, S9, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, S12, S11, S10, S9, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]

================================

Block 0x4c6
[0x4c6:0x4d2]
---
Predecessors: [0x44e]
Successors: [0x4d3, 0x4d4]
---
0x4c6 JUMPDEST
0x4c7 PUSH2 0x2c6
0x4ca GAS
0x4cb SUB
0x4cc CALL
0x4cd ISZERO
0x4ce ISZERO
0x4cf PUSH2 0x4d4
0x4d2 JUMPI
---
0x4c6: JUMPDEST 
0x4c7: V403 = 0x2c6
0x4ca: V404 = GAS
0x4cb: V405 = SUB V404 0x2c6
0x4cc: V406 = CALL V405 V393 0x0 V392 V398 V392 0x20
0x4cd: V407 = ISZERO V406
0x4ce: V408 = ISZERO V407
0x4cf: V409 = 0x4d4
0x4d2: JUMPI 0x4d4 V408
---
Entry stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, S12, S11, S10, S9, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, S12, S11, S10, S9, V393, 0xa9059cbb, V396]

================================

Block 0x4d3
[0x4d3:0x4d3]
---
Predecessors: [0x4c6]
Successors: []
---
0x4d3 INVALID
---
0x4d3: INVALID 
---
Entry stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x4d4
[0x4d4:0x4e2]
---
Predecessors: [0x4c6]
Successors: [0x4e3, 0x4e8]
---
0x4d4 JUMPDEST
0x4d5 POP
0x4d6 POP
0x4d7 PUSH1 0x40
0x4d9 MLOAD
0x4da MLOAD
0x4db ISZERO
0x4dc ISZERO
0x4dd SWAP1
0x4de POP
0x4df PUSH2 0x4e8
0x4e2 JUMPI
---
0x4d4: JUMPDEST 
0x4d7: V410 = 0x40
0x4d9: V411 = M[0x40]
0x4da: V412 = M[V411]
0x4db: V413 = ISZERO V412
0x4dc: V414 = ISZERO V413
0x4df: V415 = 0x4e8
0x4e2: JUMPI 0x4e8 V414
---
Entry stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x4e3
[0x4e3:0x4e7]
---
Predecessors: [0x4d4]
Successors: []
---
0x4e3 PUSH1 0x0
0x4e5 PUSH1 0x0
0x4e7 REVERT
---
0x4e3: V416 = 0x0
0x4e5: V417 = 0x0
0x4e7: REVERT 0x0 0x0
---
Entry stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4e8
[0x4e8:0x513]
---
Predecessors: [0x4d4]
Successors: [0x514, 0x515]
---
0x4e8 JUMPDEST
0x4e9 PUSH1 0x40
0x4eb MLOAD
0x4ec PUSH1 0x1
0x4ee PUSH1 0xa0
0x4f0 PUSH1 0x2
0x4f2 EXP
0x4f3 SUB
0x4f4 CALLER
0x4f5 AND
0x4f6 SWAP1
0x4f7 DUP5
0x4f8 ISZERO
0x4f9 PUSH2 0x8fc
0x4fc MUL
0x4fd SWAP1
0x4fe DUP6
0x4ff SWAP1
0x500 PUSH1 0x0
0x502 DUP2
0x503 DUP2
0x504 DUP2
0x505 DUP6
0x506 DUP9
0x507 DUP9
0x508 CALL
0x509 SWAP4
0x50a POP
0x50b POP
0x50c POP
0x50d POP
0x50e ISZERO
0x50f ISZERO
0x510 PUSH2 0x515
0x513 JUMPI
---
0x4e8: JUMPDEST 
0x4e9: V418 = 0x40
0x4eb: V419 = M[0x40]
0x4ec: V420 = 0x1
0x4ee: V421 = 0xa0
0x4f0: V422 = 0x2
0x4f2: V423 = EXP 0x2 0xa0
0x4f3: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f4: V425 = CALLER
0x4f5: V426 = AND V425 0xffffffffffffffffffffffffffffffffffffffff
0x4f8: V427 = ISZERO S2
0x4f9: V428 = 0x8fc
0x4fc: V429 = MUL 0x8fc V427
0x500: V430 = 0x0
0x508: V431 = CALL V429 V426 S2 V419 0x0 V419 0x0
0x50e: V432 = ISZERO V431
0x50f: V433 = ISZERO V432
0x510: V434 = 0x515
0x513: JUMPI 0x515 V433
---
Entry stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x514
[0x514:0x514]
---
Predecessors: [0x4e8]
Successors: []
---
0x514 INVALID
---
0x514: INVALID 
---
Entry stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x515
[0x515:0x515]
---
Predecessors: [0x4e8]
Successors: [0x516]
---
0x515 JUMPDEST
---
0x515: JUMPDEST 
---
Entry stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x516
[0x516:0x51e]
---
Predecessors: [0x515]
Successors: [0xc1, 0xc4]
---
0x516 JUMPDEST
0x517 POP
0x518 POP
0x519 POP
0x51a POP
0x51b POP
0x51c POP
0x51d POP
0x51e JUMP
---
0x516: JUMPDEST 
0x51e: JUMP {0xc1, 0xc4}
---
Entry stack: [V10, S8, {0xc1, 0xc4}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V10, S8]

================================

Block 0x51f
[0x51f:0x52d]
---
Predecessors: [0xe0]
Successors: [0xe8]
---
0x51f JUMPDEST
0x520 PUSH1 0x4
0x522 SLOAD
0x523 PUSH1 0x1
0x525 PUSH1 0xa0
0x527 PUSH1 0x2
0x529 EXP
0x52a SUB
0x52b AND
0x52c DUP2
0x52d JUMP
---
0x51f: JUMPDEST 
0x520: V435 = 0x4
0x522: V436 = S[0x4]
0x523: V437 = 0x1
0x525: V438 = 0xa0
0x527: V439 = 0x2
0x529: V440 = EXP 0x2 0xa0
0x52a: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52b: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x52d: JUMP 0xe8
---
Entry stack: [V10, 0xe8]
Stack pops: 1
Stack additions: [S0, V442]
Exit stack: [V10, 0xe8, V442]

================================

Block 0x52e
[0x52e:0x536]
---
Predecessors: [0x116]
Successors: [0x11e]
---
0x52e JUMPDEST
0x52f PUSH1 0x3
0x531 SLOAD
0x532 PUSH1 0xff
0x534 AND
0x535 DUP2
0x536 JUMP
---
0x52e: JUMPDEST 
0x52f: V443 = 0x3
0x531: V444 = S[0x3]
0x532: V445 = 0xff
0x534: V446 = AND 0xff V444
0x536: JUMP 0x11e
---
Entry stack: [V10, 0x11e]
Stack pops: 1
Stack additions: [S0, V446]
Exit stack: [V10, 0x11e, V446]

================================

Block 0x537
[0x537:0x53f]
---
Predecessors: [0x132]
Successors: [0x540]
---
0x537 JUMPDEST
0x538 PUSH1 0x2
0x53a DUP1
0x53b SLOAD
0x53c CALLVALUE
0x53d ADD
0x53e SWAP1
0x53f SSTORE
---
0x537: JUMPDEST 
0x538: V447 = 0x2
0x53b: V448 = S[0x2]
0x53c: V449 = CALLVALUE
0x53d: V450 = ADD V449 V448
0x53f: S[0x2] = V450
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc4]

================================

Block 0x540
[0x540:0x541]
---
Predecessors: [0x537]
Successors: [0xc4]
---
0x540 JUMPDEST
0x541 JUMP
---
0x540: JUMPDEST 
0x541: JUMP 0xc4
---
Entry stack: [V10, 0xc4]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x542
[0x542:0x555]
---
Predecessors: [0x144]
Successors: [0xe8]
---
0x542 JUMPDEST
0x543 PUSH1 0x3
0x545 SLOAD
0x546 PUSH2 0x100
0x549 SWAP1
0x54a DIV
0x54b PUSH1 0x1
0x54d PUSH1 0xa0
0x54f PUSH1 0x2
0x551 EXP
0x552 SUB
0x553 AND
0x554 DUP2
0x555 JUMP
---
0x542: JUMPDEST 
0x543: V451 = 0x3
0x545: V452 = S[0x3]
0x546: V453 = 0x100
0x54a: V454 = DIV V452 0x100
0x54b: V455 = 0x1
0x54d: V456 = 0xa0
0x54f: V457 = 0x2
0x551: V458 = EXP 0x2 0xa0
0x552: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x553: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x555: JUMP 0xe8
---
Entry stack: [V10, 0xe8]
Stack pops: 1
Stack additions: [S0, V460]
Exit stack: [V10, 0xe8, V460]

================================

Block 0x556
[0x556:0x55b]
---
Predecessors: [0x170]
Successors: [0x178]
---
0x556 JUMPDEST
0x557 PUSH1 0x2
0x559 SLOAD
0x55a DUP2
0x55b JUMP
---
0x556: JUMPDEST 
0x557: V461 = 0x2
0x559: V462 = S[0x2]
0x55b: JUMP 0x178
---
Entry stack: [V10, 0x178]
Stack pops: 1
Stack additions: [S0, V462]
Exit stack: [V10, 0x178, V462]

================================

Block 0x55c
[0x55c:0x564]
---
Predecessors: [0x192]
Successors: [0x568]
---
0x55c JUMPDEST
0x55d PUSH2 0xc1
0x560 CALLER
0x561 PUSH2 0x568
0x564 JUMP
---
0x55c: JUMPDEST 
0x55d: V463 = 0xc1
0x560: V464 = CALLER
0x561: V465 = 0x568
0x564: JUMP 0x568
---
Entry stack: [V10, 0xc4]
Stack pops: 0
Stack additions: [0xc1, V464]
Exit stack: [V10, 0xc4, 0xc1, V464]

================================

Block 0x565
[0x565:0x565]
---
Predecessors: []
Successors: [0x566]
---
0x565 JUMPDEST
---
0x565: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x566
[0x566:0x567]
---
Predecessors: [0x565]
Successors: []
Has unresolved jump.
---
0x566 JUMPDEST
0x567 JUMP
---
0x566: JUMPDEST 
0x567: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x568
[0x568:0x57f]
---
Predecessors: [0x1a4, 0x55c]
Successors: [0x580, 0x584]
---
0x568 JUMPDEST
0x569 PUSH1 0x0
0x56b DUP1
0x56c DUP1
0x56d DUP1
0x56e DUP1
0x56f PUSH1 0x1
0x571 PUSH1 0xa0
0x573 PUSH1 0x2
0x575 EXP
0x576 SUB
0x577 ADDRESS
0x578 AND
0x579 BALANCE
0x57a ISZERO
0x57b ISZERO
0x57c PUSH2 0x584
0x57f JUMPI
---
0x568: JUMPDEST 
0x569: V466 = 0x0
0x56f: V467 = 0x1
0x571: V468 = 0xa0
0x573: V469 = 0x2
0x575: V470 = EXP 0x2 0xa0
0x576: V471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x577: V472 = ADDRESS
0x578: V473 = AND V472 0xffffffffffffffffffffffffffffffffffffffff
0x579: V474 = BALANCE V473
0x57a: V475 = ISZERO V474
0x57b: V476 = ISZERO V475
0x57c: V477 = 0x584
0x57f: JUMPI 0x584 V476
---
Entry stack: [V10, S2, {0xc1, 0xc4}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, S2, {0xc1, 0xc4}, S0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x580
[0x580:0x583]
---
Predecessors: [0x568]
Successors: [0x8cc]
---
0x580 PUSH2 0x8cc
0x583 JUMP
---
0x580: V478 = 0x8cc
0x583: JUMP 0x8cc
---
Entry stack: [V10, S7, {0xc1, 0xc4}, S5, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc4}, S5, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x584
[0x584:0x5f6]
---
Predecessors: [0x568]
Successors: [0x5f7, 0x5f8]
---
0x584 JUMPDEST
0x585 PUSH1 0x4
0x587 PUSH1 0x0
0x589 SWAP1
0x58a SLOAD
0x58b SWAP1
0x58c PUSH2 0x100
0x58f EXP
0x590 SWAP1
0x591 DIV
0x592 PUSH1 0x1
0x594 PUSH1 0xa0
0x596 PUSH1 0x2
0x598 EXP
0x599 SUB
0x59a AND
0x59b PUSH1 0x1
0x59d PUSH1 0xa0
0x59f PUSH1 0x2
0x5a1 EXP
0x5a2 SUB
0x5a3 AND
0x5a4 PUSH4 0x26987b60
0x5a9 PUSH1 0x0
0x5ab PUSH1 0x40
0x5ad MLOAD
0x5ae PUSH1 0x20
0x5b0 ADD
0x5b1 MSTORE
0x5b2 PUSH1 0x40
0x5b4 MLOAD
0x5b5 DUP2
0x5b6 PUSH4 0xffffffff
0x5bb AND
0x5bc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5da MUL
0x5db DUP2
0x5dc MSTORE
0x5dd PUSH1 0x4
0x5df ADD
0x5e0 DUP1
0x5e1 SWAP1
0x5e2 POP
0x5e3 PUSH1 0x20
0x5e5 PUSH1 0x40
0x5e7 MLOAD
0x5e8 DUP1
0x5e9 DUP4
0x5ea SUB
0x5eb DUP2
0x5ec PUSH1 0x0
0x5ee DUP8
0x5ef DUP1
0x5f0 EXTCODESIZE
0x5f1 ISZERO
0x5f2 ISZERO
0x5f3 PUSH2 0x5f8
0x5f6 JUMPI
---
0x584: JUMPDEST 
0x585: V479 = 0x4
0x587: V480 = 0x0
0x58a: V481 = S[0x4]
0x58c: V482 = 0x100
0x58f: V483 = EXP 0x100 0x0
0x591: V484 = DIV V481 0x1
0x592: V485 = 0x1
0x594: V486 = 0xa0
0x596: V487 = 0x2
0x598: V488 = EXP 0x2 0xa0
0x599: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59a: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x59b: V491 = 0x1
0x59d: V492 = 0xa0
0x59f: V493 = 0x2
0x5a1: V494 = EXP 0x2 0xa0
0x5a2: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a3: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x5a4: V497 = 0x26987b60
0x5a9: V498 = 0x0
0x5ab: V499 = 0x40
0x5ad: V500 = M[0x40]
0x5ae: V501 = 0x20
0x5b0: V502 = ADD 0x20 V500
0x5b1: M[V502] = 0x0
0x5b2: V503 = 0x40
0x5b4: V504 = M[0x40]
0x5b6: V505 = 0xffffffff
0x5bb: V506 = AND 0xffffffff 0x26987b60
0x5bc: V507 = 0x100000000000000000000000000000000000000000000000000000000
0x5da: V508 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x26987b60
0x5dc: M[V504] = 0x26987b6000000000000000000000000000000000000000000000000000000000
0x5dd: V509 = 0x4
0x5df: V510 = ADD 0x4 V504
0x5e3: V511 = 0x20
0x5e5: V512 = 0x40
0x5e7: V513 = M[0x40]
0x5ea: V514 = SUB V510 V513
0x5ec: V515 = 0x0
0x5f0: V516 = EXTCODESIZE V496
0x5f1: V517 = ISZERO V516
0x5f2: V518 = ISZERO V517
0x5f3: V519 = 0x5f8
0x5f6: JUMPI 0x5f8 V518
---
Entry stack: [V10, S7, {0xc1, 0xc4}, S5, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V496, 0x26987b60, V510, 0x20, V513, V514, V513, 0x0, V496]
Exit stack: [V10, S7, {0xc1, 0xc4}, S5, 0x0, 0x0, 0x0, 0x0, 0x0, V496, 0x26987b60, V510, 0x20, V513, V514, V513, 0x0, V496]

================================

Block 0x5f7
[0x5f7:0x5f7]
---
Predecessors: [0x584]
Successors: []
---
0x5f7 INVALID
---
0x5f7: INVALID 
---
Entry stack: [V10, S16, {0xc1, 0xc4}, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V496, 0x26987b60, V510, 0x20, V513, V514, V513, 0x0, V496]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc4}, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V496, 0x26987b60, V510, 0x20, V513, V514, V513, 0x0, V496]

================================

Block 0x5f8
[0x5f8:0x604]
---
Predecessors: [0x584]
Successors: [0x605, 0x606]
---
0x5f8 JUMPDEST
0x5f9 PUSH2 0x2c6
0x5fc GAS
0x5fd SUB
0x5fe CALL
0x5ff ISZERO
0x600 ISZERO
0x601 PUSH2 0x606
0x604 JUMPI
---
0x5f8: JUMPDEST 
0x5f9: V520 = 0x2c6
0x5fc: V521 = GAS
0x5fd: V522 = SUB V521 0x2c6
0x5fe: V523 = CALL V522 V496 0x0 V513 V514 V513 0x20
0x5ff: V524 = ISZERO V523
0x600: V525 = ISZERO V524
0x601: V526 = 0x606
0x604: JUMPI 0x606 V525
---
Entry stack: [V10, S16, {0xc1, 0xc4}, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V496, 0x26987b60, V510, 0x20, V513, V514, V513, 0x0, V496]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc4}, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V496, 0x26987b60, V510]

================================

Block 0x605
[0x605:0x605]
---
Predecessors: [0x5f8]
Successors: []
---
0x605 INVALID
---
0x605: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x26987b60, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x26987b60, S0]

================================

Block 0x606
[0x606:0x670]
---
Predecessors: [0x5f8]
Successors: [0x671, 0x672]
---
0x606 JUMPDEST
0x607 POP
0x608 POP
0x609 PUSH1 0x40
0x60b DUP1
0x60c MLOAD
0x60d DUP1
0x60e MLOAD
0x60f PUSH1 0x4
0x611 DUP1
0x612 SLOAD
0x613 PUSH1 0x0
0x615 PUSH1 0x20
0x617 SWAP5
0x618 DUP6
0x619 ADD
0x61a DUP2
0x61b SWAP1
0x61c MSTORE
0x61d DUP6
0x61e MLOAD
0x61f PUSH32 0x6e4e5c1d00000000000000000000000000000000000000000000000000000000
0x640 DUP2
0x641 MSTORE
0x642 SWAP6
0x643 MLOAD
0x644 SWAP4
0x645 SWAP12
0x646 POP
0x647 PUSH1 0x1
0x649 PUSH1 0xa0
0x64b PUSH1 0x2
0x64d EXP
0x64e SUB
0x64f SWAP1
0x650 SWAP2
0x651 AND
0x652 SWAP6
0x653 POP
0x654 PUSH4 0x6e4e5c1d
0x659 SWAP5
0x65a DUP1
0x65b DUP4
0x65c ADD
0x65d SWAP5
0x65e SWAP4
0x65f SWAP3
0x660 SWAP1
0x661 DUP4
0x662 SWAP1
0x663 SUB
0x664 ADD
0x665 SWAP1
0x666 DUP3
0x667 SWAP1
0x668 DUP8
0x669 DUP1
0x66a EXTCODESIZE
0x66b ISZERO
0x66c ISZERO
0x66d PUSH2 0x672
0x670 JUMPI
---
0x606: JUMPDEST 
0x609: V527 = 0x40
0x60c: V528 = M[0x40]
0x60e: V529 = M[V528]
0x60f: V530 = 0x4
0x612: V531 = S[0x4]
0x613: V532 = 0x0
0x615: V533 = 0x20
0x619: V534 = ADD 0x20 V528
0x61c: M[V534] = 0x0
0x61e: V535 = M[0x40]
0x61f: V536 = 0x6e4e5c1d00000000000000000000000000000000000000000000000000000000
0x641: M[V535] = 0x6e4e5c1d00000000000000000000000000000000000000000000000000000000
0x643: V537 = M[0x40]
0x647: V538 = 0x1
0x649: V539 = 0xa0
0x64b: V540 = 0x2
0x64d: V541 = EXP 0x2 0xa0
0x64e: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x651: V543 = AND V531 0xffffffffffffffffffffffffffffffffffffffff
0x654: V544 = 0x6e4e5c1d
0x65c: V545 = ADD 0x4 V535
0x663: V546 = SUB V535 V537
0x664: V547 = ADD V546 0x4
0x66a: V548 = EXTCODESIZE V543
0x66b: V549 = ISZERO V548
0x66c: V550 = ISZERO V549
0x66d: V551 = 0x672
0x670: JUMPI 0x672 V550
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x26987b60, S0]
Stack pops: 8
Stack additions: [V529, S6, S5, S4, S3, V543, 0x6e4e5c1d, V545, 0x20, V537, V547, V537, 0x0, V543]
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, V529, 0x0, 0x0, 0x0, 0x0, V543, 0x6e4e5c1d, V545, 0x20, V537, V547, V537, 0x0, V543]

================================

Block 0x671
[0x671:0x671]
---
Predecessors: [0x606]
Successors: []
---
0x671 INVALID
---
0x671: INVALID 
---
Entry stack: [V10, S16, {0xc1, 0xc4}, S14, V529, 0x0, 0x0, 0x0, 0x0, V543, 0x6e4e5c1d, V545, 0x20, V537, V547, V537, 0x0, V543]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc4}, S14, V529, 0x0, 0x0, 0x0, 0x0, V543, 0x6e4e5c1d, V545, 0x20, V537, V547, V537, 0x0, V543]

================================

Block 0x672
[0x672:0x67e]
---
Predecessors: [0x606]
Successors: [0x67f, 0x680]
---
0x672 JUMPDEST
0x673 PUSH2 0x2c6
0x676 GAS
0x677 SUB
0x678 CALL
0x679 ISZERO
0x67a ISZERO
0x67b PUSH2 0x680
0x67e JUMPI
---
0x672: JUMPDEST 
0x673: V552 = 0x2c6
0x676: V553 = GAS
0x677: V554 = SUB V553 0x2c6
0x678: V555 = CALL V554 V543 0x0 V537 V547 V537 0x20
0x679: V556 = ISZERO V555
0x67a: V557 = ISZERO V556
0x67b: V558 = 0x680
0x67e: JUMPI 0x680 V557
---
Entry stack: [V10, S16, {0xc1, 0xc4}, S14, V529, 0x0, 0x0, 0x0, 0x0, V543, 0x6e4e5c1d, V545, 0x20, V537, V547, V537, 0x0, V543]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc4}, S14, V529, 0x0, 0x0, 0x0, 0x0, V543, 0x6e4e5c1d, V545]

================================

Block 0x67f
[0x67f:0x67f]
---
Predecessors: [0x672]
Successors: []
---
0x67f INVALID
---
0x67f: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, S7, 0x0, 0x0, 0x0, 0x0, S2, 0x6e4e5c1d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, S7, 0x0, 0x0, 0x0, 0x0, S2, 0x6e4e5c1d, S0]

================================

Block 0x680
[0x680:0x691]
---
Predecessors: [0x672]
Successors: [0x692, 0x79b]
---
0x680 JUMPDEST
0x681 POP
0x682 POP
0x683 PUSH1 0x40
0x685 MLOAD
0x686 MLOAD
0x687 PUSH1 0x1
0x689 DUP8
0x68a ADD
0x68b LT
0x68c SWAP1
0x68d POP
0x68e PUSH2 0x79b
0x691 JUMPI
---
0x680: JUMPDEST 
0x683: V559 = 0x40
0x685: V560 = M[0x40]
0x686: V561 = M[V560]
0x687: V562 = 0x1
0x68a: V563 = ADD S7 0x1
0x68b: V564 = LT V563 V561
0x68e: V565 = 0x79b
0x691: JUMPI 0x79b V564
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, S7, 0x0, 0x0, 0x0, 0x0, S2, 0x6e4e5c1d, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3]
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, S7, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x692
[0x692:0x6fa]
---
Predecessors: [0x680]
Successors: [0x6fb, 0x6fc]
---
0x692 PUSH1 0x4
0x694 DUP1
0x695 SLOAD
0x696 PUSH1 0x40
0x698 DUP1
0x699 MLOAD
0x69a PUSH1 0x0
0x69c PUSH1 0x80
0x69e SWAP2
0x69f DUP3
0x6a0 ADD
0x6a1 DUP2
0x6a2 SWAP1
0x6a3 MSTORE
0x6a4 DUP3
0x6a5 MLOAD
0x6a6 PUSH32 0x1bf7d74900000000000000000000000000000000000000000000000000000000
0x6c7 DUP2
0x6c8 MSTORE
0x6c9 SWAP5
0x6ca DUP6
0x6cb ADD
0x6cc DUP11
0x6cd SWAP1
0x6ce MSTORE
0x6cf SWAP2
0x6d0 MLOAD
0x6d1 PUSH1 0x1
0x6d3 PUSH1 0xa0
0x6d5 PUSH1 0x2
0x6d7 EXP
0x6d8 SUB
0x6d9 SWAP1
0x6da SWAP4
0x6db AND
0x6dc SWAP4
0x6dd PUSH4 0x1bf7d749
0x6e2 SWAP4
0x6e3 PUSH1 0x24
0x6e5 DUP1
0x6e6 DUP4
0x6e7 ADD
0x6e8 SWAP5
0x6e9 SWAP2
0x6ea SWAP3
0x6eb DUP4
0x6ec SWAP1
0x6ed SUB
0x6ee ADD
0x6ef SWAP1
0x6f0 DUP3
0x6f1 SWAP1
0x6f2 DUP8
0x6f3 DUP1
0x6f4 EXTCODESIZE
0x6f5 ISZERO
0x6f6 ISZERO
0x6f7 PUSH2 0x6fc
0x6fa JUMPI
---
0x692: V566 = 0x4
0x695: V567 = S[0x4]
0x696: V568 = 0x40
0x699: V569 = M[0x40]
0x69a: V570 = 0x0
0x69c: V571 = 0x80
0x6a0: V572 = ADD 0x80 V569
0x6a3: M[V572] = 0x0
0x6a5: V573 = M[0x40]
0x6a6: V574 = 0x1bf7d74900000000000000000000000000000000000000000000000000000000
0x6c8: M[V573] = 0x1bf7d74900000000000000000000000000000000000000000000000000000000
0x6cb: V575 = ADD V573 0x4
0x6ce: M[V575] = S4
0x6d0: V576 = M[0x40]
0x6d1: V577 = 0x1
0x6d3: V578 = 0xa0
0x6d5: V579 = 0x2
0x6d7: V580 = EXP 0x2 0xa0
0x6d8: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6db: V582 = AND V567 0xffffffffffffffffffffffffffffffffffffffff
0x6dd: V583 = 0x1bf7d749
0x6e3: V584 = 0x24
0x6e7: V585 = ADD V573 0x24
0x6ed: V586 = SUB V573 V576
0x6ee: V587 = ADD V586 0x24
0x6f4: V588 = EXTCODESIZE V582
0x6f5: V589 = ISZERO V588
0x6f6: V590 = ISZERO V589
0x6f7: V591 = 0x6fc
0x6fa: JUMPI 0x6fc V590
---
Entry stack: [V10, S7, {0xc1, 0xc4}, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V582, 0x1bf7d749, V585, 0x80, V576, V587, V576, 0x0, V582]
Exit stack: [V10, S7, {0xc1, 0xc4}, S5, S4, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585, 0x80, V576, V587, V576, 0x0, V582]

================================

Block 0x6fb
[0x6fb:0x6fb]
---
Predecessors: [0x692]
Successors: []
---
0x6fb INVALID
---
0x6fb: INVALID 
---
Entry stack: [V10, S16, {0xc1, 0xc4}, S14, S13, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585, 0x80, V576, V587, V576, 0x0, V582]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc4}, S14, S13, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585, 0x80, V576, V587, V576, 0x0, V582]

================================

Block 0x6fc
[0x6fc:0x708]
---
Predecessors: [0x692]
Successors: [0x709, 0x70a]
---
0x6fc JUMPDEST
0x6fd PUSH2 0x2c6
0x700 GAS
0x701 SUB
0x702 CALL
0x703 ISZERO
0x704 ISZERO
0x705 PUSH2 0x70a
0x708 JUMPI
---
0x6fc: JUMPDEST 
0x6fd: V592 = 0x2c6
0x700: V593 = GAS
0x701: V594 = SUB V593 0x2c6
0x702: V595 = CALL V594 V582 0x0 V576 V587 V576 0x80
0x703: V596 = ISZERO V595
0x704: V597 = ISZERO V596
0x705: V598 = 0x70a
0x708: JUMPI 0x70a V597
---
Entry stack: [V10, S16, {0xc1, 0xc4}, S14, S13, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585, 0x80, V576, V587, V576, 0x0, V582]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc4}, S14, S13, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585]

================================

Block 0x709
[0x709:0x709]
---
Predecessors: [0x6fc]
Successors: []
---
0x709 INVALID
---
0x709: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, S7, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, S7, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585]

================================

Block 0x70a
[0x70a:0x778]
---
Predecessors: [0x6fc]
Successors: [0x779, 0x77a]
---
0x70a JUMPDEST
0x70b POP
0x70c POP
0x70d PUSH1 0x40
0x70f DUP1
0x710 MLOAD
0x711 PUSH1 0x20
0x713 SWAP1
0x714 DUP2
0x715 ADD
0x716 DUP1
0x717 MLOAD
0x718 PUSH1 0x3
0x71a SLOAD
0x71b PUSH1 0x0
0x71d SWAP3
0x71e DUP4
0x71f SWAP1
0x720 MSTORE
0x721 DUP5
0x722 MLOAD
0x723 PUSH32 0x1517d10700000000000000000000000000000000000000000000000000000000
0x744 DUP2
0x745 MSTORE
0x746 SWAP5
0x747 MLOAD
0x748 SWAP2
0x749 SWAP10
0x74a POP
0x74b PUSH2 0x100
0x74e SWAP1
0x74f DIV
0x750 PUSH1 0x1
0x752 PUSH1 0xa0
0x754 PUSH1 0x2
0x756 EXP
0x757 SUB
0x758 AND
0x759 SWAP5
0x75a POP
0x75b PUSH4 0x1517d107
0x760 SWAP4
0x761 PUSH1 0x4
0x763 DUP1
0x764 DUP3
0x765 ADD
0x766 SWAP5
0x767 SWAP4
0x768 SWAP2
0x769 DUP4
0x76a SWAP1
0x76b SUB
0x76c ADD
0x76d SWAP1
0x76e DUP3
0x76f SWAP1
0x770 DUP8
0x771 DUP1
0x772 EXTCODESIZE
0x773 ISZERO
0x774 ISZERO
0x775 PUSH2 0x77a
0x778 JUMPI
---
0x70a: JUMPDEST 
0x70d: V599 = 0x40
0x710: V600 = M[0x40]
0x711: V601 = 0x20
0x715: V602 = ADD 0x20 V600
0x717: V603 = M[V602]
0x718: V604 = 0x3
0x71a: V605 = S[0x3]
0x71b: V606 = 0x0
0x720: M[V602] = 0x0
0x722: V607 = M[0x40]
0x723: V608 = 0x1517d10700000000000000000000000000000000000000000000000000000000
0x745: M[V607] = 0x1517d10700000000000000000000000000000000000000000000000000000000
0x747: V609 = M[0x40]
0x74b: V610 = 0x100
0x74f: V611 = DIV V605 0x100
0x750: V612 = 0x1
0x752: V613 = 0xa0
0x754: V614 = 0x2
0x756: V615 = EXP 0x2 0xa0
0x757: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x758: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0x75b: V618 = 0x1517d107
0x761: V619 = 0x4
0x765: V620 = ADD V607 0x4
0x76b: V621 = SUB V607 V609
0x76c: V622 = ADD V621 0x4
0x772: V623 = EXTCODESIZE V617
0x773: V624 = ISZERO V623
0x774: V625 = ISZERO V624
0x775: V626 = 0x77a
0x778: JUMPI 0x77a V625
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, S7, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585]
Stack pops: 7
Stack additions: [V603, S5, S4, S3, V617, 0x1517d107, V620, 0x20, V609, V622, V609, 0x0, V617]
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, S7, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620, 0x20, V609, V622, V609, 0x0, V617]

================================

Block 0x779
[0x779:0x779]
---
Predecessors: [0x70a]
Successors: []
---
0x779 INVALID
---
0x779: INVALID 
---
Entry stack: [V10, S16, {0xc1, 0xc4}, S14, S13, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620, 0x20, V609, V622, V609, 0x0, V617]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc4}, S14, S13, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620, 0x20, V609, V622, V609, 0x0, V617]

================================

Block 0x77a
[0x77a:0x786]
---
Predecessors: [0x70a]
Successors: [0x787, 0x788]
---
0x77a JUMPDEST
0x77b PUSH2 0x2c6
0x77e GAS
0x77f SUB
0x780 CALL
0x781 ISZERO
0x782 ISZERO
0x783 PUSH2 0x788
0x786 JUMPI
---
0x77a: JUMPDEST 
0x77b: V627 = 0x2c6
0x77e: V628 = GAS
0x77f: V629 = SUB V628 0x2c6
0x780: V630 = CALL V629 V617 0x0 V609 V622 V609 0x20
0x781: V631 = ISZERO V630
0x782: V632 = ISZERO V631
0x783: V633 = 0x788
0x786: JUMPI 0x788 V632
---
Entry stack: [V10, S16, {0xc1, 0xc4}, S14, S13, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620, 0x20, V609, V622, V609, 0x0, V617]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc4}, S14, S13, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620]

================================

Block 0x787
[0x787:0x787]
---
Predecessors: [0x77a]
Successors: []
---
0x787 INVALID
---
0x787: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, S7, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, S7, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620]

================================

Block 0x788
[0x788:0x796]
---
Predecessors: [0x77a]
Successors: [0x797, 0x79b]
---
0x788 JUMPDEST
0x789 POP
0x78a POP
0x78b PUSH1 0x40
0x78d MLOAD
0x78e MLOAD
0x78f DUP6
0x790 GT
0x791 SWAP1
0x792 POP
0x793 PUSH2 0x79b
0x796 JUMPI
---
0x788: JUMPDEST 
0x78b: V634 = 0x40
0x78d: V635 = M[0x40]
0x78e: V636 = M[V635]
0x790: V637 = GT V603 V636
0x793: V638 = 0x79b
0x796: JUMPI 0x79b V637
---
Entry stack: [V10, S10, {0xc1, 0xc4}, S8, S7, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620]
Stack pops: 7
Stack additions: [S6, S5, S4, S3]
Exit stack: [V10, S10, {0xc1, 0xc4}, S8, S7, V603, 0x0, 0x0, 0x0]

================================

Block 0x797
[0x797:0x79a]
---
Predecessors: [0x788]
Successors: [0x8cc]
---
0x797 PUSH2 0x8cc
0x79a JUMP
---
0x797: V639 = 0x8cc
0x79a: JUMP 0x8cc
---
Entry stack: [V10, S7, {0xc1, 0xc4}, S5, S4, V603, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc4}, S5, S4, V603, 0x0, 0x0, 0x0]

================================

Block 0x79b
[0x79b:0x79b]
---
Predecessors: [0x680, 0x788]
Successors: [0x79c]
---
0x79b JUMPDEST
---
0x79b: JUMPDEST 
---
Entry stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, 0x0, 0x0, 0x0]

================================

Block 0x79c
[0x79c:0x822]
---
Predecessors: [0x79b]
Successors: [0x823, 0x824]
---
0x79c JUMPDEST
0x79d PUSH1 0x3
0x79f DUP1
0x7a0 SLOAD
0x7a1 PUSH1 0xff
0x7a3 NOT
0x7a4 AND
0x7a5 PUSH1 0x1
0x7a7 OR
0x7a8 SWAP1
0x7a9 DUP2
0x7aa SWAP1
0x7ab SSTORE
0x7ac PUSH1 0x2
0x7ae SLOAD
0x7af PUSH1 0x40
0x7b1 DUP1
0x7b2 MLOAD
0x7b3 PUSH1 0x0
0x7b5 PUSH1 0x20
0x7b7 SWAP2
0x7b8 DUP3
0x7b9 ADD
0x7ba MSTORE
0x7bb DUP2
0x7bc MLOAD
0x7bd PUSH32 0xf48c305400000000000000000000000000000000000000000000000000000000
0x7de DUP2
0x7df MSTORE
0x7e0 PUSH1 0x1
0x7e2 PUSH1 0xa0
0x7e4 PUSH1 0x2
0x7e6 EXP
0x7e7 SUB
0x7e8 ADDRESS
0x7e9 DUP2
0x7ea AND
0x7eb PUSH1 0x4
0x7ed DUP4
0x7ee ADD
0x7ef DUP2
0x7f0 SWAP1
0x7f1 MSTORE
0x7f2 SWAP4
0x7f3 MLOAD
0x7f4 DUP5
0x7f5 BALANCE
0x7f6 SWAP10
0x7f7 POP
0x7f8 PUSH2 0x100
0x7fb SWAP1
0x7fc SWAP7
0x7fd DIV
0x7fe AND
0x7ff SWAP5
0x800 PUSH4 0xf48c3054
0x805 SWAP5
0x806 SWAP4
0x807 BALANCE
0x808 SWAP4
0x809 SWAP1
0x80a SWAP4
0x80b SUB
0x80c SWAP3
0x80d PUSH1 0x24
0x80f DUP1
0x810 DUP4
0x811 ADD
0x812 SWAP4
0x813 SWAP3
0x814 DUP3
0x815 SWAP1
0x816 SUB
0x817 ADD
0x818 DUP2
0x819 DUP6
0x81a DUP9
0x81b DUP1
0x81c EXTCODESIZE
0x81d ISZERO
0x81e ISZERO
0x81f PUSH2 0x824
0x822 JUMPI
---
0x79c: JUMPDEST 
0x79d: V640 = 0x3
0x7a0: V641 = S[0x3]
0x7a1: V642 = 0xff
0x7a3: V643 = NOT 0xff
0x7a4: V644 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V641
0x7a5: V645 = 0x1
0x7a7: V646 = OR 0x1 V644
0x7ab: S[0x3] = V646
0x7ac: V647 = 0x2
0x7ae: V648 = S[0x2]
0x7af: V649 = 0x40
0x7b2: V650 = M[0x40]
0x7b3: V651 = 0x0
0x7b5: V652 = 0x20
0x7b9: V653 = ADD 0x20 V650
0x7ba: M[V653] = 0x0
0x7bc: V654 = M[0x40]
0x7bd: V655 = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x7df: M[V654] = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x7e0: V656 = 0x1
0x7e2: V657 = 0xa0
0x7e4: V658 = 0x2
0x7e6: V659 = EXP 0x2 0xa0
0x7e7: V660 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e8: V661 = ADDRESS
0x7ea: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0x7eb: V663 = 0x4
0x7ee: V664 = ADD V654 0x4
0x7f1: M[V664] = V662
0x7f3: V665 = M[0x40]
0x7f5: V666 = BALANCE V662
0x7f8: V667 = 0x100
0x7fd: V668 = DIV V646 0x100
0x7fe: V669 = AND V668 0xffffffffffffffffffffffffffffffffffffffff
0x800: V670 = 0xf48c3054
0x807: V671 = BALANCE V662
0x80b: V672 = SUB V671 V648
0x80d: V673 = 0x24
0x811: V674 = ADD V654 0x24
0x816: V675 = SUB V654 V665
0x817: V676 = ADD V675 0x24
0x81c: V677 = EXTCODESIZE V669
0x81d: V678 = ISZERO V677
0x81e: V679 = ISZERO V678
0x81f: V680 = 0x824
0x822: JUMPI 0x824 V679
---
Entry stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V666, S1, S0, V669, 0xf48c3054, V672, V674, 0x20, V665, V676, V665, V672, V669]
Exit stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, V666, 0x0, 0x0, V669, 0xf48c3054, V672, V674, 0x20, V665, V676, V665, V672, V669]

================================

Block 0x823
[0x823:0x823]
---
Predecessors: [0x79c]
Successors: []
---
0x823 INVALID
---
0x823: INVALID 
---
Entry stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, V666, 0x0, 0x0, V669, 0xf48c3054, V672, V674, 0x20, V665, V676, V665, V672, V669]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, V666, 0x0, 0x0, V669, 0xf48c3054, V672, V674, 0x20, V665, V676, V665, V672, V669]

================================

Block 0x824
[0x824:0x830]
---
Predecessors: [0x79c]
Successors: [0x831, 0x832]
---
0x824 JUMPDEST
0x825 PUSH2 0x25ee
0x828 GAS
0x829 SUB
0x82a CALL
0x82b ISZERO
0x82c ISZERO
0x82d PUSH2 0x832
0x830 JUMPI
---
0x824: JUMPDEST 
0x825: V681 = 0x25ee
0x828: V682 = GAS
0x829: V683 = SUB V682 0x25ee
0x82a: V684 = CALL V683 V669 V672 V665 V676 V665 0x20
0x82b: V685 = ISZERO V684
0x82c: V686 = ISZERO V685
0x82d: V687 = 0x832
0x830: JUMPI 0x832 V686
---
Entry stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, V666, 0x0, 0x0, V669, 0xf48c3054, V672, V674, 0x20, V665, V676, V665, V672, V669]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc4}, S15, S14, S13, V666, 0x0, 0x0, V669, 0xf48c3054, V672, V674]

================================

Block 0x831
[0x831:0x831]
---
Predecessors: [0x824]
Successors: []
---
0x831 INVALID
---
0x831: INVALID 
---
Entry stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, 0x0, 0x0, S3, 0xf48c3054, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, 0x0, 0x0, S3, 0xf48c3054, S1, S0]

================================

Block 0x832
[0x832:0x849]
---
Predecessors: [0x824]
Successors: [0x84a, 0x84f]
---
0x832 JUMPDEST
0x833 POP
0x834 POP
0x835 POP
0x836 POP
0x837 PUSH1 0x1
0x839 PUSH1 0xa0
0x83b PUSH1 0x2
0x83d EXP
0x83e SUB
0x83f ADDRESS
0x840 AND
0x841 BALANCE
0x842 DUP4
0x843 SWAP1
0x844 GT
0x845 ISZERO
0x846 PUSH2 0x84f
0x849 JUMPI
---
0x832: JUMPDEST 
0x837: V688 = 0x1
0x839: V689 = 0xa0
0x83b: V690 = 0x2
0x83d: V691 = EXP 0x2 0xa0
0x83e: V692 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83f: V693 = ADDRESS
0x840: V694 = AND V693 0xffffffffffffffffffffffffffffffffffffffff
0x841: V695 = BALANCE V694
0x844: V696 = GT V695 S6
0x845: V697 = ISZERO V696
0x846: V698 = 0x84f
0x849: JUMPI 0x84f V697
---
Entry stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, 0x0, 0x0, S3, 0xf48c3054, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4]
Exit stack: [V10, S11, {0xc1, 0xc4}, S9, S8, S7, S6, 0x0, 0x0]

================================

Block 0x84a
[0x84a:0x84e]
---
Predecessors: [0x832]
Successors: []
---
0x84a PUSH1 0x0
0x84c PUSH1 0x0
0x84e REVERT
---
0x84a: V699 = 0x0
0x84c: V700 = 0x0
0x84e: REVERT 0x0 0x0
---
Entry stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x84f
[0x84f:0x88c]
---
Predecessors: [0x832]
Successors: [0x88d, 0x88e]
---
0x84f JUMPDEST
0x850 PUSH1 0x1
0x852 PUSH1 0xa0
0x854 PUSH1 0x2
0x856 EXP
0x857 SUB
0x858 DUP7
0x859 DUP2
0x85a AND
0x85b PUSH1 0x0
0x85d SWAP1
0x85e DUP2
0x85f MSTORE
0x860 PUSH1 0x1
0x862 PUSH1 0x20
0x864 MSTORE
0x865 PUSH1 0x40
0x867 SWAP1
0x868 SHA3
0x869 DUP1
0x86a SLOAD
0x86b PUSH2 0x2710
0x86e ADDRESS
0x86f SWAP4
0x870 SWAP1
0x871 SWAP4
0x872 AND
0x873 BALANCE
0x874 DUP7
0x875 SUB
0x876 SWAP3
0x877 DUP4
0x878 MUL
0x879 ADD
0x87a SWAP1
0x87b SSTORE
0x87c PUSH1 0x2
0x87e SLOAD
0x87f SWAP1
0x880 SWAP3
0x881 POP
0x882 DUP4
0x883 SWAP1
0x884 DUP4
0x885 MUL
0x886 DUP2
0x887 ISZERO
0x888 ISZERO
0x889 PUSH2 0x88e
0x88c JUMPI
---
0x84f: JUMPDEST 
0x850: V701 = 0x1
0x852: V702 = 0xa0
0x854: V703 = 0x2
0x856: V704 = EXP 0x2 0xa0
0x857: V705 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85a: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x85b: V707 = 0x0
0x85f: M[0x0] = V706
0x860: V708 = 0x1
0x862: V709 = 0x20
0x864: M[0x20] = 0x1
0x865: V710 = 0x40
0x868: V711 = SHA3 0x0 0x40
0x86a: V712 = S[V711]
0x86b: V713 = 0x2710
0x86e: V714 = ADDRESS
0x872: V715 = AND V714 0xffffffffffffffffffffffffffffffffffffffff
0x873: V716 = BALANCE V715
0x875: V717 = SUB S2 V716
0x878: V718 = MUL V717 0x2710
0x879: V719 = ADD V718 V712
0x87b: S[V711] = V719
0x87c: V720 = 0x2
0x87e: V721 = S[0x2]
0x885: V722 = MUL V717 V721
0x887: V723 = ISZERO S2
0x888: V724 = ISZERO V723
0x889: V725 = 0x88e
0x88c: JUMPI 0x88e V724
---
Entry stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V717, S0, S2, V722]
Exit stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, S2, V717, 0x0, S2, V722]

================================

Block 0x88d
[0x88d:0x88d]
---
Predecessors: [0x84f]
Successors: []
---
0x88d INVALID
---
0x88d: INVALID 
---
Entry stack: [V10, S9, {0xc1, 0xc4}, S7, S6, S5, S4, V717, 0x0, S1, V722]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, {0xc1, 0xc4}, S7, S6, S5, S4, V717, 0x0, S1, V722]

================================

Block 0x88e
[0x88e:0x8ca]
---
Predecessors: [0x84f]
Successors: [0x8cb, 0x8cc]
---
0x88e JUMPDEST
0x88f PUSH1 0x2
0x891 DUP1
0x892 SLOAD
0x893 SWAP3
0x894 SWAP1
0x895 SWAP2
0x896 DIV
0x897 SWAP2
0x898 DUP3
0x899 SWAP1
0x89a SUB
0x89b SWAP1
0x89c SSTORE
0x89d PUSH1 0x40
0x89f MLOAD
0x8a0 SWAP1
0x8a1 SWAP2
0x8a2 POP
0x8a3 PUSH1 0x1
0x8a5 PUSH1 0xa0
0x8a7 PUSH1 0x2
0x8a9 EXP
0x8aa SUB
0x8ab DUP8
0x8ac AND
0x8ad SWAP1
0x8ae DUP3
0x8af ISZERO
0x8b0 PUSH2 0x8fc
0x8b3 MUL
0x8b4 SWAP1
0x8b5 DUP4
0x8b6 SWAP1
0x8b7 PUSH1 0x0
0x8b9 DUP2
0x8ba DUP2
0x8bb DUP2
0x8bc DUP6
0x8bd DUP9
0x8be DUP9
0x8bf CALL
0x8c0 SWAP4
0x8c1 POP
0x8c2 POP
0x8c3 POP
0x8c4 POP
0x8c5 ISZERO
0x8c6 ISZERO
0x8c7 PUSH2 0x8cc
0x8ca JUMPI
---
0x88e: JUMPDEST 
0x88f: V726 = 0x2
0x892: V727 = S[0x2]
0x896: V728 = DIV V722 S1
0x89a: V729 = SUB V727 V728
0x89c: S[0x2] = V729
0x89d: V730 = 0x40
0x89f: V731 = M[0x40]
0x8a3: V732 = 0x1
0x8a5: V733 = 0xa0
0x8a7: V734 = 0x2
0x8a9: V735 = EXP 0x2 0xa0
0x8aa: V736 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ac: V737 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x8af: V738 = ISZERO V728
0x8b0: V739 = 0x8fc
0x8b3: V740 = MUL 0x8fc V738
0x8b7: V741 = 0x0
0x8bf: V742 = CALL V740 V737 V728 V731 0x0 V731 0x0
0x8c5: V743 = ISZERO V742
0x8c6: V744 = ISZERO V743
0x8c7: V745 = 0x8cc
0x8ca: JUMPI 0x8cc V744
---
Entry stack: [V10, S9, {0xc1, 0xc4}, S7, S6, S5, S4, V717, 0x0, S1, V722]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V728]
Exit stack: [V10, S9, {0xc1, 0xc4}, S7, S6, S5, S4, V717, V728]

================================

Block 0x8cb
[0x8cb:0x8cb]
---
Predecessors: [0x88e]
Successors: []
---
0x8cb INVALID
---
0x8cb: INVALID 
---
Entry stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, S2, S1, V728]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, S2, S1, V728]

================================

Block 0x8cc
[0x8cc:0x8cc]
---
Predecessors: [0x580, 0x797, 0x88e]
Successors: [0x8cd]
---
0x8cc JUMPDEST
---
0x8cc: JUMPDEST 
---
Entry stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, S2, S1, S0]

================================

Block 0x8cd
[0x8cd:0x8d4]
---
Predecessors: [0x8cc]
Successors: [0xc1, 0xc4]
---
0x8cd JUMPDEST
0x8ce POP
0x8cf POP
0x8d0 POP
0x8d1 POP
0x8d2 POP
0x8d3 POP
0x8d4 JUMP
---
0x8cd: JUMPDEST 
0x8d4: JUMP {0xc1, 0xc4}
---
Entry stack: [V10, S7, {0xc1, 0xc4}, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V10, S7]

================================

Block 0x8d5
[0x8d5:0x8e6]
---
Predecessors: [0x1c2]
Successors: [0x178]
---
0x8d5 JUMPDEST
0x8d6 PUSH1 0x1
0x8d8 PUSH1 0x20
0x8da MSTORE
0x8db PUSH1 0x0
0x8dd SWAP1
0x8de DUP2
0x8df MSTORE
0x8e0 PUSH1 0x40
0x8e2 SWAP1
0x8e3 SHA3
0x8e4 SLOAD
0x8e5 DUP2
0x8e6 JUMP
---
0x8d5: JUMPDEST 
0x8d6: V746 = 0x1
0x8d8: V747 = 0x20
0x8da: M[0x20] = 0x1
0x8db: V748 = 0x0
0x8df: M[0x0] = V146
0x8e0: V749 = 0x40
0x8e3: V750 = SHA3 0x0 0x40
0x8e4: V751 = S[V750]
0x8e6: JUMP 0x178
---
Entry stack: [V10, 0x178, V146]
Stack pops: 2
Stack additions: [S1, V751]
Exit stack: [V10, 0x178, V751]

================================

Block 0x8e7
[0x8e7:0x8f5]
---
Predecessors: [0x1f0]
Successors: [0xe8]
---
0x8e7 JUMPDEST
0x8e8 PUSH1 0x5
0x8ea SLOAD
0x8eb PUSH1 0x1
0x8ed PUSH1 0xa0
0x8ef PUSH1 0x2
0x8f1 EXP
0x8f2 SUB
0x8f3 AND
0x8f4 DUP2
0x8f5 JUMP
---
0x8e7: JUMPDEST 
0x8e8: V752 = 0x5
0x8ea: V753 = S[0x5]
0x8eb: V754 = 0x1
0x8ed: V755 = 0xa0
0x8ef: V756 = 0x2
0x8f1: V757 = EXP 0x2 0xa0
0x8f2: V758 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f3: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V753
0x8f5: JUMP 0xe8
---
Entry stack: [V10, 0xe8]
Stack pops: 1
Stack additions: [S0, V759]
Exit stack: [V10, 0xe8, V759]

================================

Block 0x8f6
[0x8f6:0x907]
---
Predecessors: [0x21c]
Successors: [0x178]
---
0x8f6 JUMPDEST
0x8f7 PUSH1 0x0
0x8f9 PUSH1 0x20
0x8fb DUP2
0x8fc SWAP1
0x8fd MSTORE
0x8fe SWAP1
0x8ff DUP2
0x900 MSTORE
0x901 PUSH1 0x40
0x903 SWAP1
0x904 SHA3
0x905 SLOAD
0x906 DUP2
0x907 JUMP
---
0x8f6: JUMPDEST 
0x8f7: V760 = 0x0
0x8f9: V761 = 0x20
0x8fd: M[0x20] = 0x0
0x900: M[0x0] = V182
0x901: V762 = 0x40
0x904: V763 = SHA3 0x0 0x40
0x905: V764 = S[V763]
0x907: JUMP 0x178
---
Entry stack: [V10, 0x178, V182]
Stack pops: 2
Stack additions: [S1, V764]
Exit stack: [V10, 0x178, V764]

================================

Block 0x908
[0x908:0x93f]
---
Predecessors: []
Successors: []
---
0x908 STOP
0x909 LOG1
0x90a PUSH6 0x627a7a723058
0x911 SHA3
0x912 LOG1
0x913 MISSING 0xb4
0x914 ORIGIN
0x915 EXTCODEHASH
0x916 MISSING 0xbf
0x917 CALLVALUE
0x918 MISSING 0xc2
0x919 CALLCODE
0x91a MISSING 0xe1
0x91b SWAP13
0x91c CALLER
0x91d PUSH3 0x320120
0x921 DUP8
0x922 CALLDATALOAD
0x923 PC
0x924 MISSING 0xd4
0x925 PUSH26 0x1c8823cf04b6b96bb6fc5fcd0029
---
0x908: STOP 
0x909: LOG S0 S1 S2
0x90a: V765 = 0x627a7a723058
0x911: V766 = SHA3 0x627a7a723058 S3
0x912: LOG V766 S4 S5
0x913: MISSING 0xb4
0x914: V767 = ORIGIN
0x915: V768 = EXTCODEHASH V767
0x916: MISSING 0xbf
0x917: V769 = CALLVALUE
0x918: MISSING 0xc2
0x919: V770 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x91a: MISSING 0xe1
0x91c: V771 = CALLER
0x91d: V772 = 0x320120
0x922: V773 = CALLDATALOAD S5
0x923: V774 = PC
0x924: MISSING 0xd4
0x925: V775 = 0x1c8823cf04b6b96bb6fc5fcd0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V768, V769, V770, V774, V773, 0x320120, V771, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, 0x1c8823cf04b6b96bb6fc5fcd0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0xc6
Exit block: 0xcd
Body: 0xc4, 0xc6, 0xcd, 0xce

Function 1:
Public function signature: 0x4bd54f04
Entry block: 0xd8
Exit block: 0xe8
Body: 0xd8, 0xdf, 0xe0, 0xe8, 0x51f

Function 2:
Public function signature: 0x5259347d
Entry block: 0x104
Exit block: 0xc4
Body: 0xc1, 0xc2, 0xc4, 0x104, 0x242, 0x24f, 0x271, 0x278, 0x27d

Function 3:
Public function signature: 0x6360fc3f
Entry block: 0x10e
Exit block: 0x11e
Body: 0x10e, 0x115, 0x116, 0x11e, 0x52e

Function 4:
Public function signature: 0x63d74226
Entry block: 0x132
Exit block: 0xc4
Body: 0xc4, 0x132, 0x537, 0x540

Function 5:
Public function signature: 0x6ad1fe02
Entry block: 0x13c
Exit block: 0xe8
Body: 0xe8, 0x13c, 0x143, 0x144, 0x542

Function 6:
Public function signature: 0x943dfef1
Entry block: 0x168
Exit block: 0x178
Body: 0x168, 0x16f, 0x170, 0x178, 0x556

Function 7:
Public function signature: 0xa6f2ae3a
Entry block: 0x18a
Exit block: 0xc4
Body: 0xc1, 0xc2, 0xc4, 0x18a, 0x191, 0x192, 0x55c

Function 8:
Public function signature: 0xbaf38352
Entry block: 0x19c
Exit block: 0x1a3
Body: 0xc4, 0x19c, 0x1a3, 0x1a4

Function 9:
Public function signature: 0xeb03e351
Entry block: 0x1ba
Exit block: 0x178
Body: 0x178, 0x1ba, 0x1c1, 0x1c2, 0x8d5

Function 10:
Public function signature: 0xfc0c546a
Entry block: 0x1e8
Exit block: 0xe8
Body: 0xe8, 0x1e8, 0x1ef, 0x1f0, 0x8e7

Function 11:
Public function signature: 0xfc7e286d
Entry block: 0x214
Exit block: 0x178
Body: 0x178, 0x214, 0x21b, 0x21c, 0x8f6

Function 12:
Public fallback function
Entry block: 0xb7
Exit block: 0xbb
Body: 0xb7, 0xbb

Function 13:
Private function
Entry block: 0x568
Exit block: 0x8cd
Body: 0x568, 0x580, 0x584, 0x5f8, 0x606, 0x672, 0x680, 0x692, 0x6fc, 0x70a, 0x77a, 0x788, 0x797, 0x79b, 0x79c, 0x824, 0x832, 0x84f, 0x88e, 0x8cc, 0x8cd

Function 14:
Private function
Entry block: 0x289
Exit block: 0x8cd
Body: 0x289, 0x31b, 0x329, 0x34b, 0x35b, 0x394, 0x3b2, 0x3b6, 0x42c, 0x43a, 0x44e, 0x4c6, 0x4d4, 0x4e8, 0x515, 0x516

