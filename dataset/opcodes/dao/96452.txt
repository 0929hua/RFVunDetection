Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2e1a7d4d
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2e1a7d4d
0x3c: V13 = EQ 0x2e1a7d4d V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x87]
---
0x41 DUP1
0x42 PUSH4 0x4f5e6253
0x47 EQ
0x48 PUSH2 0x87
0x4b JUMPI
---
0x42: V15 = 0x4f5e6253
0x47: V16 = EQ 0x4f5e6253 V11
0x48: V17 = 0x87
0x4b: JUMPI 0x87 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x91]
---
0x4c DUP1
0x4d PUSH4 0x70876c98
0x52 EQ
0x53 PUSH2 0x91
0x56 JUMPI
---
0x4d: V18 = 0x70876c98
0x52: V19 = EQ 0x70876c98 V11
0x53: V20 = 0x91
0x56: JUMPI 0x91 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xb2]
---
0x57 DUP1
0x58 PUSH4 0x853828b6
0x5d EQ
0x5e PUSH2 0xb2
0x61 JUMPI
---
0x58: V21 = 0x853828b6
0x5d: V22 = EQ 0x853828b6 V11
0x5e: V23 = 0xb2
0x61: JUMPI 0xb2 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x64]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x84]
---
Predecessors: [0x64]
Successors: [0xbc]
---
0x6f JUMPDEST
0x70 PUSH2 0x85
0x73 PUSH1 0x4
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 SWAP1
0x79 PUSH1 0x20
0x7b ADD
0x7c SWAP1
0x7d SWAP2
0x7e SWAP1
0x7f POP
0x80 POP
0x81 PUSH2 0xbc
0x84 JUMP
---
0x6f: JUMPDEST 
0x70: V28 = 0x85
0x73: V29 = 0x4
0x77: V30 = CALLDATALOAD 0x4
0x79: V31 = 0x20
0x7b: V32 = ADD 0x20 0x4
0x81: V33 = 0xbc
0x84: JUMP 0xbc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x85, V30]
Exit stack: [V11, 0x85, V30]

================================

Block 0x85
[0x85:0x86]
---
Predecessors: [0x1b1]
Successors: []
---
0x85 JUMPDEST
0x86 STOP
---
0x85: JUMPDEST 
0x86: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x41]
Successors: [0x1b4]
---
0x87 JUMPDEST
0x88 PUSH2 0x8f
0x8b PUSH2 0x1b4
0x8e JUMP
---
0x87: JUMPDEST 
0x88: V34 = 0x8f
0x8b: V35 = 0x1b4
0x8e: JUMP 0x1b4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V11, 0x8f]

================================

Block 0x8f
[0x8f:0x90]
---
Predecessors: [0x293]
Successors: []
---
0x8f JUMPDEST
0x90 STOP
---
0x8f: JUMPDEST 
0x90: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x91
[0x91:0xaf]
---
Predecessors: [0x4c]
Successors: [0x295]
---
0x91 JUMPDEST
0x92 PUSH2 0xb0
0x95 PUSH1 0x4
0x97 DUP1
0x98 DUP1
0x99 CALLDATALOAD
0x9a SWAP1
0x9b PUSH1 0x20
0x9d ADD
0x9e SWAP1
0x9f SWAP2
0xa0 SWAP1
0xa1 DUP1
0xa2 CALLDATALOAD
0xa3 SWAP1
0xa4 PUSH1 0x20
0xa6 ADD
0xa7 SWAP1
0xa8 SWAP2
0xa9 SWAP1
0xaa POP
0xab POP
0xac PUSH2 0x295
0xaf JUMP
---
0x91: JUMPDEST 
0x92: V36 = 0xb0
0x95: V37 = 0x4
0x99: V38 = CALLDATALOAD 0x4
0x9b: V39 = 0x20
0x9d: V40 = ADD 0x20 0x4
0xa2: V41 = CALLDATALOAD 0x24
0xa4: V42 = 0x20
0xa6: V43 = ADD 0x20 0x24
0xac: V44 = 0x295
0xaf: JUMP 0x295
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb0, V38, V41]
Exit stack: [V11, 0xb0, V38, V41]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: [0x4e0]
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb2
[0xb2:0xb9]
---
Predecessors: [0x57]
Successors: [0x4e6]
---
0xb2 JUMPDEST
0xb3 PUSH2 0xba
0xb6 PUSH2 0x4e6
0xb9 JUMP
---
0xb2: JUMPDEST 
0xb3: V45 = 0xba
0xb6: V46 = 0x4e6
0xb9: JUMP 0x4e6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xba]
Exit stack: [V11, 0xba]

================================

Block 0xba
[0xba:0xbb]
---
Predecessors: [0x5b9]
Successors: []
---
0xba JUMPDEST
0xbb STOP
---
0xba: JUMPDEST 
0xbb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0x112]
---
Predecessors: [0x6f]
Successors: [0x113, 0x117]
---
0xbc JUMPDEST
0xbd PUSH1 0x0
0xbf DUP1
0xc0 SWAP1
0xc1 SLOAD
0xc2 SWAP1
0xc3 PUSH2 0x100
0xc6 EXP
0xc7 SWAP1
0xc8 DIV
0xc9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde AND
0xdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4 AND
0xf5 CALLER
0xf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b AND
0x10c EQ
0x10d ISZERO
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0xbc: JUMPDEST 
0xbd: V47 = 0x0
0xc1: V48 = S[0x0]
0xc3: V49 = 0x100
0xc6: V50 = EXP 0x100 0x0
0xc8: V51 = DIV V48 0x1
0xc9: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xde: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xdf: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xf5: V56 = CALLER
0xf6: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x10c: V59 = EQ V58 V55
0x10d: V60 = ISZERO V59
0x10e: V61 = ISZERO V60
0x10f: V62 = 0x117
0x112: JUMPI 0x117 V61
---
Entry stack: [V11, 0x85, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x85, V30]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0xbc]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V63 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V11, 0x85, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x85, V30]

================================

Block 0x117
[0x117:0x141]
---
Predecessors: [0xbc]
Successors: [0x142, 0x146]
---
0x117 JUMPDEST
0x118 ADDRESS
0x119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e AND
0x12f BALANCE
0x130 PUSH8 0xde0b6b3a7640000
0x139 DUP3
0x13a MUL
0x13b LT
0x13c ISZERO
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x117: JUMPDEST 
0x118: V64 = ADDRESS
0x119: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x12f: V67 = BALANCE V66
0x130: V68 = 0xde0b6b3a7640000
0x13a: V69 = MUL V30 0xde0b6b3a7640000
0x13b: V70 = LT V69 V67
0x13c: V71 = ISZERO V70
0x13d: V72 = ISZERO V71
0x13e: V73 = 0x146
0x141: JUMPI 0x146 V72
---
Entry stack: [V11, 0x85, V30]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x85, V30]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x117]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V74 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V11, 0x85, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x85, V30]

================================

Block 0x146
[0x146:0x1ac]
---
Predecessors: [0x117]
Successors: [0x1ad, 0x1b1]
---
0x146 JUMPDEST
0x147 PUSH1 0x0
0x149 DUP1
0x14a SWAP1
0x14b SLOAD
0x14c SWAP1
0x14d PUSH2 0x100
0x150 EXP
0x151 SWAP1
0x152 DIV
0x153 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x168 AND
0x169 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17e AND
0x17f PUSH2 0x8fc
0x182 PUSH8 0xde0b6b3a7640000
0x18b DUP4
0x18c MUL
0x18d SWAP1
0x18e DUP2
0x18f ISZERO
0x190 MUL
0x191 SWAP1
0x192 PUSH1 0x40
0x194 MLOAD
0x195 PUSH1 0x0
0x197 PUSH1 0x40
0x199 MLOAD
0x19a DUP1
0x19b DUP4
0x19c SUB
0x19d DUP2
0x19e DUP6
0x19f DUP9
0x1a0 DUP9
0x1a1 CALL
0x1a2 SWAP4
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 ISZERO
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x146: JUMPDEST 
0x147: V75 = 0x0
0x14b: V76 = S[0x0]
0x14d: V77 = 0x100
0x150: V78 = EXP 0x100 0x0
0x152: V79 = DIV V76 0x1
0x153: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x168: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x169: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x17f: V84 = 0x8fc
0x182: V85 = 0xde0b6b3a7640000
0x18c: V86 = MUL V30 0xde0b6b3a7640000
0x18f: V87 = ISZERO V86
0x190: V88 = MUL V87 0x8fc
0x192: V89 = 0x40
0x194: V90 = M[0x40]
0x195: V91 = 0x0
0x197: V92 = 0x40
0x199: V93 = M[0x40]
0x19c: V94 = SUB V90 V93
0x1a1: V95 = CALL V88 V83 V86 V93 V94 V93 0x0
0x1a7: V96 = ISZERO V95
0x1a8: V97 = ISZERO V96
0x1a9: V98 = 0x1b1
0x1ac: JUMPI 0x1b1 V97
---
Entry stack: [V11, 0x85, V30]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x85, V30]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x146]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V99 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x85, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x85, V30]

================================

Block 0x1b1
[0x1b1:0x1b3]
---
Predecessors: [0x146]
Successors: [0x85]
---
0x1b1 JUMPDEST
0x1b2 POP
0x1b3 JUMP
---
0x1b1: JUMPDEST 
0x1b3: JUMP 0x85
---
Entry stack: [V11, 0x85, V30]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b4
[0x1b4:0x20a]
---
Predecessors: [0x87]
Successors: [0x20b, 0x20f]
---
0x1b4 JUMPDEST
0x1b5 PUSH1 0x0
0x1b7 DUP1
0x1b8 SWAP1
0x1b9 SLOAD
0x1ba SWAP1
0x1bb PUSH2 0x100
0x1be EXP
0x1bf SWAP1
0x1c0 DIV
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 AND
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed CALLER
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 EQ
0x205 ISZERO
0x206 ISZERO
0x207 PUSH2 0x20f
0x20a JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V100 = 0x0
0x1b9: V101 = S[0x0]
0x1bb: V102 = 0x100
0x1be: V103 = EXP 0x100 0x0
0x1c0: V104 = DIV V101 0x1
0x1c1: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1d7: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1ed: V109 = CALLER
0x1ee: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x204: V112 = EQ V111 V108
0x205: V113 = ISZERO V112
0x206: V114 = ISZERO V113
0x207: V115 = 0x20f
0x20a: JUMPI 0x20f V114
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0x20b
[0x20b:0x20e]
---
Predecessors: [0x1b4]
Successors: []
---
0x20b PUSH1 0x0
0x20d DUP1
0x20e REVERT
---
0x20b: V116 = 0x0
0x20e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0x20f
[0x20f:0x26b]
---
Predecessors: [0x1b4]
Successors: [0x26c, 0x26d]
---
0x20f JUMPDEST
0x210 PUSH1 0x0
0x212 DUP1
0x213 SWAP1
0x214 SLOAD
0x215 SWAP1
0x216 PUSH2 0x100
0x219 EXP
0x21a SWAP1
0x21b DIV
0x21c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x231 AND
0x232 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x247 AND
0x248 PUSH2 0x8fc
0x24b PUSH1 0x2
0x24d ADDRESS
0x24e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x263 AND
0x264 BALANCE
0x265 DUP2
0x266 ISZERO
0x267 ISZERO
0x268 PUSH2 0x26d
0x26b JUMPI
---
0x20f: JUMPDEST 
0x210: V117 = 0x0
0x214: V118 = S[0x0]
0x216: V119 = 0x100
0x219: V120 = EXP 0x100 0x0
0x21b: V121 = DIV V118 0x1
0x21c: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x231: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x232: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x247: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x248: V126 = 0x8fc
0x24b: V127 = 0x2
0x24d: V128 = ADDRESS
0x24e: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x263: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x264: V131 = BALANCE V130
0x266: V132 = ISZERO 0x2
0x267: V133 = ISZERO 0x0
0x268: V134 = 0x26d
0x26b: JUMPI 0x26d 0x1
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: [V125, 0x8fc, 0x2, V131]
Exit stack: [V11, 0x8f, V125, 0x8fc, 0x2, V131]

================================

Block 0x26c
[0x26c:0x26c]
---
Predecessors: [0x20f]
Successors: []
---
0x26c INVALID
---
0x26c: INVALID 
---
Entry stack: [V11, 0x8f, V125, 0x8fc, 0x2, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V125, 0x8fc, 0x2, V131]

================================

Block 0x26d
[0x26d:0x28e]
---
Predecessors: [0x20f]
Successors: [0x28f, 0x293]
---
0x26d JUMPDEST
0x26e DIV
0x26f SWAP1
0x270 DUP2
0x271 ISZERO
0x272 MUL
0x273 SWAP1
0x274 PUSH1 0x40
0x276 MLOAD
0x277 PUSH1 0x0
0x279 PUSH1 0x40
0x27b MLOAD
0x27c DUP1
0x27d DUP4
0x27e SUB
0x27f DUP2
0x280 DUP6
0x281 DUP9
0x282 DUP9
0x283 CALL
0x284 SWAP4
0x285 POP
0x286 POP
0x287 POP
0x288 POP
0x289 ISZERO
0x28a ISZERO
0x28b PUSH2 0x293
0x28e JUMPI
---
0x26d: JUMPDEST 
0x26e: V135 = DIV V131 0x2
0x271: V136 = ISZERO V135
0x272: V137 = MUL V136 0x8fc
0x274: V138 = 0x40
0x276: V139 = M[0x40]
0x277: V140 = 0x0
0x279: V141 = 0x40
0x27b: V142 = M[0x40]
0x27e: V143 = SUB V139 V142
0x283: V144 = CALL V137 V125 V135 V142 V143 V142 0x0
0x289: V145 = ISZERO V144
0x28a: V146 = ISZERO V145
0x28b: V147 = 0x293
0x28e: JUMPI 0x293 V146
---
Entry stack: [V11, 0x8f, V125, 0x8fc, 0x2, V131]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0x28f
[0x28f:0x292]
---
Predecessors: [0x26d]
Successors: []
---
0x28f PUSH1 0x0
0x291 DUP1
0x292 REVERT
---
0x28f: V148 = 0x0
0x292: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0x293
[0x293:0x294]
---
Predecessors: [0x26d]
Successors: [0x8f]
---
0x293 JUMPDEST
0x294 JUMP
---
0x293: JUMPDEST 
0x294: JUMP 0x8f
---
Entry stack: [V11, 0x8f]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x295
[0x295:0x32c]
---
Predecessors: [0x91]
Successors: [0x32d, 0x331]
---
0x295 JUMPDEST
0x296 PUSH1 0x0
0x298 DUP1
0x299 PUSH1 0x1
0x29b PUSH1 0x0
0x29d SWAP1
0x29e SLOAD
0x29f SWAP1
0x2a0 PUSH2 0x100
0x2a3 EXP
0x2a4 SWAP1
0x2a5 DIV
0x2a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bb AND
0x2bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d1 AND
0x2d2 PUSH4 0x246982c4
0x2d7 DUP6
0x2d8 PUSH1 0x0
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd PUSH1 0x60
0x2df ADD
0x2e0 MSTORE
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 DUP3
0x2e5 PUSH4 0xffffffff
0x2ea AND
0x2eb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x309 MUL
0x30a DUP2
0x30b MSTORE
0x30c PUSH1 0x4
0x30e ADD
0x30f DUP1
0x310 DUP3
0x311 DUP2
0x312 MSTORE
0x313 PUSH1 0x20
0x315 ADD
0x316 SWAP2
0x317 POP
0x318 POP
0x319 PUSH1 0x60
0x31b PUSH1 0x40
0x31d MLOAD
0x31e DUP1
0x31f DUP4
0x320 SUB
0x321 DUP2
0x322 PUSH1 0x0
0x324 DUP8
0x325 DUP1
0x326 EXTCODESIZE
0x327 ISZERO
0x328 ISZERO
0x329 PUSH2 0x331
0x32c JUMPI
---
0x295: JUMPDEST 
0x296: V149 = 0x0
0x299: V150 = 0x1
0x29b: V151 = 0x0
0x29e: V152 = S[0x1]
0x2a0: V153 = 0x100
0x2a3: V154 = EXP 0x100 0x0
0x2a5: V155 = DIV V152 0x1
0x2a6: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2bc: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x2d2: V160 = 0x246982c4
0x2d8: V161 = 0x0
0x2da: V162 = 0x40
0x2dc: V163 = M[0x40]
0x2dd: V164 = 0x60
0x2df: V165 = ADD 0x60 V163
0x2e0: M[V165] = 0x0
0x2e1: V166 = 0x40
0x2e3: V167 = M[0x40]
0x2e5: V168 = 0xffffffff
0x2ea: V169 = AND 0xffffffff 0x246982c4
0x2eb: V170 = 0x100000000000000000000000000000000000000000000000000000000
0x309: V171 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x246982c4
0x30b: M[V167] = 0x246982c400000000000000000000000000000000000000000000000000000000
0x30c: V172 = 0x4
0x30e: V173 = ADD 0x4 V167
0x312: M[V173] = V38
0x313: V174 = 0x20
0x315: V175 = ADD 0x20 V173
0x319: V176 = 0x60
0x31b: V177 = 0x40
0x31d: V178 = M[0x40]
0x320: V179 = SUB V175 V178
0x322: V180 = 0x0
0x326: V181 = EXTCODESIZE V159
0x327: V182 = ISZERO V181
0x328: V183 = ISZERO V182
0x329: V184 = 0x331
0x32c: JUMPI 0x331 V183
---
Entry stack: [V11, 0xb0, V38, V41]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, V159, 0x246982c4, V175, 0x60, V178, V179, V178, 0x0, V159]
Exit stack: [V11, 0xb0, V38, V41, 0x0, 0x0, V159, 0x246982c4, V175, 0x60, V178, V179, V178, 0x0, V159]

================================

Block 0x32d
[0x32d:0x330]
---
Predecessors: [0x295]
Successors: []
---
0x32d PUSH1 0x0
0x32f DUP1
0x330 REVERT
---
0x32d: V185 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V38, V41, 0x0, 0x0, V159, 0x246982c4, V175, 0x60, V178, V179, V178, 0x0, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38, V41, 0x0, 0x0, V159, 0x246982c4, V175, 0x60, V178, V179, V178, 0x0, V159]

================================

Block 0x331
[0x331:0x33d]
---
Predecessors: [0x295]
Successors: [0x33e, 0x342]
---
0x331 JUMPDEST
0x332 PUSH2 0x2c6
0x335 GAS
0x336 SUB
0x337 CALL
0x338 ISZERO
0x339 ISZERO
0x33a PUSH2 0x342
0x33d JUMPI
---
0x331: JUMPDEST 
0x332: V186 = 0x2c6
0x335: V187 = GAS
0x336: V188 = SUB V187 0x2c6
0x337: V189 = CALL V188 V159 0x0 V178 V179 V178 0x60
0x338: V190 = ISZERO V189
0x339: V191 = ISZERO V190
0x33a: V192 = 0x342
0x33d: JUMPI 0x342 V191
---
Entry stack: [V11, 0xb0, V38, V41, 0x0, 0x0, V159, 0x246982c4, V175, 0x60, V178, V179, V178, 0x0, V159]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xb0, V38, V41, 0x0, 0x0, V159, 0x246982c4, V175]

================================

Block 0x33e
[0x33e:0x341]
---
Predecessors: [0x331]
Successors: []
---
0x33e PUSH1 0x0
0x340 DUP1
0x341 REVERT
---
0x33e: V193 = 0x0
0x341: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V38, V41, 0x0, 0x0, V159, 0x246982c4, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38, V41, 0x0, 0x0, V159, 0x246982c4, V175]

================================

Block 0x342
[0x342:0x36c]
---
Predecessors: [0x331]
Successors: [0x36d, 0x388]
---
0x342 JUMPDEST
0x343 POP
0x344 POP
0x345 POP
0x346 PUSH1 0x40
0x348 MLOAD
0x349 DUP1
0x34a MLOAD
0x34b SWAP1
0x34c PUSH1 0x20
0x34e ADD
0x34f DUP1
0x350 MLOAD
0x351 SWAP1
0x352 PUSH1 0x20
0x354 ADD
0x355 DUP1
0x356 MLOAD
0x357 SWAP1
0x358 POP
0x359 SWAP1
0x35a SWAP2
0x35b POP
0x35c DUP1
0x35d SWAP3
0x35e POP
0x35f DUP2
0x360 SWAP4
0x361 POP
0x362 POP
0x363 POP
0x364 DUP3
0x365 DUP3
0x366 LT
0x367 DUP1
0x368 ISZERO
0x369 PUSH2 0x388
0x36c JUMPI
---
0x342: JUMPDEST 
0x346: V194 = 0x40
0x348: V195 = M[0x40]
0x34a: V196 = M[V195]
0x34c: V197 = 0x20
0x34e: V198 = ADD 0x20 V195
0x350: V199 = M[V198]
0x352: V200 = 0x20
0x354: V201 = ADD 0x20 V198
0x356: V202 = M[V201]
0x366: V203 = LT V199 V41
0x368: V204 = ISZERO V203
0x369: V205 = 0x388
0x36c: JUMPI 0x388 V204
---
Entry stack: [V11, 0xb0, V38, V41, 0x0, 0x0, V159, 0x246982c4, V175]
Stack pops: 6
Stack additions: [S5, V199, V202, V203]
Exit stack: [V11, 0xb0, V38, V41, V199, V202, V203]

================================

Block 0x36d
[0x36d:0x387]
---
Predecessors: [0x342]
Successors: [0x388]
---
0x36d POP
0x36e ADDRESS
0x36f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x384 AND
0x385 BALANCE
0x386 DUP3
0x387 LT
---
0x36e: V206 = ADDRESS
0x36f: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x384: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x385: V209 = BALANCE V208
0x387: V210 = LT V199 V209
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202, V203]
Stack pops: 3
Stack additions: [S2, S1, V210]
Exit stack: [V11, 0xb0, V38, V41, V199, V202, V210]

================================

Block 0x388
[0x388:0x38d]
---
Predecessors: [0x342, 0x36d]
Successors: [0x38e, 0x431]
---
0x388 JUMPDEST
0x389 ISZERO
0x38a PUSH2 0x431
0x38d JUMPI
---
0x388: JUMPDEST 
0x389: V211 = ISZERO S0
0x38a: V212 = 0x431
0x38d: JUMPI 0x431 V211
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb0, V38, V41, V199, V202]

================================

Block 0x38e
[0x38e:0x419]
---
Predecessors: [0x388]
Successors: [0x41a, 0x41e]
---
0x38e PUSH1 0x1
0x390 PUSH1 0x0
0x392 SWAP1
0x393 SLOAD
0x394 SWAP1
0x395 PUSH2 0x100
0x398 EXP
0x399 SWAP1
0x39a DIV
0x39b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b0 AND
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 AND
0x3c7 PUSH4 0xefef39a1
0x3cc GAS
0x3cd DUP5
0x3ce DUP8
0x3cf PUSH1 0x40
0x3d1 MLOAD
0x3d2 DUP5
0x3d3 PUSH4 0xffffffff
0x3d8 AND
0x3d9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3f7 MUL
0x3f8 DUP2
0x3f9 MSTORE
0x3fa PUSH1 0x4
0x3fc ADD
0x3fd DUP1
0x3fe DUP3
0x3ff DUP2
0x400 MSTORE
0x401 PUSH1 0x20
0x403 ADD
0x404 SWAP2
0x405 POP
0x406 POP
0x407 PUSH1 0x0
0x409 PUSH1 0x40
0x40b MLOAD
0x40c DUP1
0x40d DUP4
0x40e SUB
0x40f DUP2
0x410 DUP6
0x411 DUP10
0x412 DUP1
0x413 EXTCODESIZE
0x414 ISZERO
0x415 ISZERO
0x416 PUSH2 0x41e
0x419 JUMPI
---
0x38e: V213 = 0x1
0x390: V214 = 0x0
0x393: V215 = S[0x1]
0x395: V216 = 0x100
0x398: V217 = EXP 0x100 0x0
0x39a: V218 = DIV V215 0x1
0x39b: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b0: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3b1: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x3c7: V223 = 0xefef39a1
0x3cc: V224 = GAS
0x3cf: V225 = 0x40
0x3d1: V226 = M[0x40]
0x3d3: V227 = 0xffffffff
0x3d8: V228 = AND 0xffffffff 0xefef39a1
0x3d9: V229 = 0x100000000000000000000000000000000000000000000000000000000
0x3f7: V230 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xefef39a1
0x3f9: M[V226] = 0xefef39a100000000000000000000000000000000000000000000000000000000
0x3fa: V231 = 0x4
0x3fc: V232 = ADD 0x4 V226
0x400: M[V232] = V38
0x401: V233 = 0x20
0x403: V234 = ADD 0x20 V232
0x407: V235 = 0x0
0x409: V236 = 0x40
0x40b: V237 = M[0x40]
0x40e: V238 = SUB V234 V237
0x413: V239 = EXTCODESIZE V222
0x414: V240 = ISZERO V239
0x415: V241 = ISZERO V240
0x416: V242 = 0x41e
0x419: JUMPI 0x41e V241
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V222, 0xefef39a1, V224, S1, V234, 0x0, V237, V238, V237, S1, V222]
Exit stack: [V11, 0xb0, V38, V41, V199, V202, V222, 0xefef39a1, V224, V199, V234, 0x0, V237, V238, V237, V199, V222]

================================

Block 0x41a
[0x41a:0x41d]
---
Predecessors: [0x38e]
Successors: []
---
0x41a PUSH1 0x0
0x41c DUP1
0x41d REVERT
---
0x41a: V243 = 0x0
0x41d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202, V222, 0xefef39a1, V224, V199, V234, 0x0, V237, V238, V237, V199, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38, V41, V199, V202, V222, 0xefef39a1, V224, V199, V234, 0x0, V237, V238, V237, V199, V222]

================================

Block 0x41e
[0x41e:0x426]
---
Predecessors: [0x38e]
Successors: [0x427, 0x42b]
---
0x41e JUMPDEST
0x41f DUP9
0x420 CALL
0x421 ISZERO
0x422 ISZERO
0x423 PUSH2 0x42b
0x426 JUMPI
---
0x41e: JUMPDEST 
0x420: V244 = CALL V224 V222 V199 V237 V238 V237 0x0
0x421: V245 = ISZERO V244
0x422: V246 = ISZERO V245
0x423: V247 = 0x42b
0x426: JUMPI 0x42b V246
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202, V222, 0xefef39a1, V224, V199, V234, 0x0, V237, V238, V237, V199, V222]
Stack pops: 9
Stack additions: [S8, S7, S6]
Exit stack: [V11, 0xb0, V38, V41, V199, V202, V222, 0xefef39a1, V224, V199, V234]

================================

Block 0x427
[0x427:0x42a]
---
Predecessors: [0x41e]
Successors: []
---
0x427 PUSH1 0x0
0x429 DUP1
0x42a REVERT
---
0x427: V248 = 0x0
0x42a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202, V222, 0xefef39a1, V224, V199, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38, V41, V199, V202, V222, 0xefef39a1, V224, V199, V234]

================================

Block 0x42b
[0x42b:0x430]
---
Predecessors: [0x41e]
Successors: [0x431]
---
0x42b JUMPDEST
0x42c POP
0x42d POP
0x42e POP
0x42f POP
0x430 POP
---
0x42b: JUMPDEST 
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202, V222, 0xefef39a1, V224, V199, V234]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xb0, V38, V41, V199, V202]

================================

Block 0x431
[0x431:0x452]
---
Predecessors: [0x388, 0x42b]
Successors: [0x453, 0x483]
---
0x431 JUMPDEST
0x432 PUSH1 0x0
0x434 ADDRESS
0x435 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44a AND
0x44b BALANCE
0x44c GT
0x44d DUP1
0x44e ISZERO
0x44f PUSH2 0x483
0x452 JUMPI
---
0x431: JUMPDEST 
0x432: V249 = 0x0
0x434: V250 = ADDRESS
0x435: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x44b: V253 = BALANCE V252
0x44c: V254 = GT V253 0x0
0x44e: V255 = ISZERO V254
0x44f: V256 = 0x483
0x452: JUMPI 0x483 V255
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202]
Stack pops: 0
Stack additions: [V254]
Exit stack: [V11, 0xb0, V38, V41, V199, V202, V254]

================================

Block 0x453
[0x453:0x482]
---
Predecessors: [0x431]
Successors: [0x483]
---
0x453 POP
0x454 CALLER
0x455 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46a AND
0x46b DUP2
0x46c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x481 AND
0x482 EQ
---
0x454: V257 = CALLER
0x455: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x46c: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x481: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x482: V262 = EQ V261 V259
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202, V254]
Stack pops: 2
Stack additions: [S1, V262]
Exit stack: [V11, 0xb0, V38, V41, V199, V202, V262]

================================

Block 0x483
[0x483:0x488]
---
Predecessors: [0x431, 0x453]
Successors: [0x489, 0x4e0]
---
0x483 JUMPDEST
0x484 ISZERO
0x485 PUSH2 0x4e0
0x488 JUMPI
---
0x483: JUMPDEST 
0x484: V263 = ISZERO S0
0x485: V264 = 0x4e0
0x488: JUMPI 0x4e0 V263
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb0, V38, V41, V199, V202]

================================

Block 0x489
[0x489:0x4da]
---
Predecessors: [0x483]
Successors: [0x4db, 0x4df]
---
0x489 CALLER
0x48a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49f AND
0x4a0 PUSH2 0x8fc
0x4a3 ADDRESS
0x4a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b9 AND
0x4ba BALANCE
0x4bb SWAP1
0x4bc DUP2
0x4bd ISZERO
0x4be MUL
0x4bf SWAP1
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 PUSH1 0x0
0x4c5 PUSH1 0x40
0x4c7 MLOAD
0x4c8 DUP1
0x4c9 DUP4
0x4ca SUB
0x4cb DUP2
0x4cc DUP6
0x4cd DUP9
0x4ce DUP9
0x4cf CALL
0x4d0 SWAP4
0x4d1 POP
0x4d2 POP
0x4d3 POP
0x4d4 POP
0x4d5 ISZERO
0x4d6 ISZERO
0x4d7 PUSH2 0x4df
0x4da JUMPI
---
0x489: V265 = CALLER
0x48a: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x49f: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x4a0: V268 = 0x8fc
0x4a3: V269 = ADDRESS
0x4a4: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b9: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x4ba: V272 = BALANCE V271
0x4bd: V273 = ISZERO V272
0x4be: V274 = MUL V273 0x8fc
0x4c0: V275 = 0x40
0x4c2: V276 = M[0x40]
0x4c3: V277 = 0x0
0x4c5: V278 = 0x40
0x4c7: V279 = M[0x40]
0x4ca: V280 = SUB V276 V279
0x4cf: V281 = CALL V274 V267 V272 V279 V280 V279 0x0
0x4d5: V282 = ISZERO V281
0x4d6: V283 = ISZERO V282
0x4d7: V284 = 0x4df
0x4da: JUMPI 0x4df V283
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38, V41, V199, V202]

================================

Block 0x4db
[0x4db:0x4de]
---
Predecessors: [0x489]
Successors: []
---
0x4db PUSH1 0x0
0x4dd DUP1
0x4de REVERT
---
0x4db: V285 = 0x0
0x4de: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38, V41, V199, V202]

================================

Block 0x4df
[0x4df:0x4df]
---
Predecessors: [0x489]
Successors: [0x4e0]
---
0x4df JUMPDEST
---
0x4df: JUMPDEST 
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38, V41, V199, V202]

================================

Block 0x4e0
[0x4e0:0x4e5]
---
Predecessors: [0x483, 0x4df]
Successors: [0xb0]
---
0x4e0 JUMPDEST
0x4e1 POP
0x4e2 POP
0x4e3 POP
0x4e4 POP
0x4e5 JUMP
---
0x4e0: JUMPDEST 
0x4e5: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V38, V41, V199, V202]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e6
[0x4e6:0x53c]
---
Predecessors: [0xb2]
Successors: [0x53d, 0x541]
---
0x4e6 JUMPDEST
0x4e7 PUSH1 0x0
0x4e9 DUP1
0x4ea SWAP1
0x4eb SLOAD
0x4ec SWAP1
0x4ed PUSH2 0x100
0x4f0 EXP
0x4f1 SWAP1
0x4f2 DIV
0x4f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x508 AND
0x509 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51e AND
0x51f CALLER
0x520 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x535 AND
0x536 EQ
0x537 ISZERO
0x538 ISZERO
0x539 PUSH2 0x541
0x53c JUMPI
---
0x4e6: JUMPDEST 
0x4e7: V286 = 0x0
0x4eb: V287 = S[0x0]
0x4ed: V288 = 0x100
0x4f0: V289 = EXP 0x100 0x0
0x4f2: V290 = DIV V287 0x1
0x4f3: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x508: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x509: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x51e: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x51f: V295 = CALLER
0x520: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x535: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x536: V298 = EQ V297 V294
0x537: V299 = ISZERO V298
0x538: V300 = ISZERO V299
0x539: V301 = 0x541
0x53c: JUMPI 0x541 V300
---
Entry stack: [V11, 0xba]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xba]

================================

Block 0x53d
[0x53d:0x540]
---
Predecessors: [0x4e6]
Successors: []
---
0x53d PUSH1 0x0
0x53f DUP1
0x540 REVERT
---
0x53d: V302 = 0x0
0x540: REVERT 0x0 0x0
---
Entry stack: [V11, 0xba]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xba]

================================

Block 0x541
[0x541:0x5b4]
---
Predecessors: [0x4e6]
Successors: [0x5b5, 0x5b9]
---
0x541 JUMPDEST
0x542 PUSH1 0x0
0x544 DUP1
0x545 SWAP1
0x546 SLOAD
0x547 SWAP1
0x548 PUSH2 0x100
0x54b EXP
0x54c SWAP1
0x54d DIV
0x54e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x563 AND
0x564 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x579 AND
0x57a PUSH2 0x8fc
0x57d ADDRESS
0x57e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x593 AND
0x594 BALANCE
0x595 SWAP1
0x596 DUP2
0x597 ISZERO
0x598 MUL
0x599 SWAP1
0x59a PUSH1 0x40
0x59c MLOAD
0x59d PUSH1 0x0
0x59f PUSH1 0x40
0x5a1 MLOAD
0x5a2 DUP1
0x5a3 DUP4
0x5a4 SUB
0x5a5 DUP2
0x5a6 DUP6
0x5a7 DUP9
0x5a8 DUP9
0x5a9 CALL
0x5aa SWAP4
0x5ab POP
0x5ac POP
0x5ad POP
0x5ae POP
0x5af ISZERO
0x5b0 ISZERO
0x5b1 PUSH2 0x5b9
0x5b4 JUMPI
---
0x541: JUMPDEST 
0x542: V303 = 0x0
0x546: V304 = S[0x0]
0x548: V305 = 0x100
0x54b: V306 = EXP 0x100 0x0
0x54d: V307 = DIV V304 0x1
0x54e: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x563: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x564: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x579: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x57a: V312 = 0x8fc
0x57d: V313 = ADDRESS
0x57e: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x593: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x594: V316 = BALANCE V315
0x597: V317 = ISZERO V316
0x598: V318 = MUL V317 0x8fc
0x59a: V319 = 0x40
0x59c: V320 = M[0x40]
0x59d: V321 = 0x0
0x59f: V322 = 0x40
0x5a1: V323 = M[0x40]
0x5a4: V324 = SUB V320 V323
0x5a9: V325 = CALL V318 V311 V316 V323 V324 V323 0x0
0x5af: V326 = ISZERO V325
0x5b0: V327 = ISZERO V326
0x5b1: V328 = 0x5b9
0x5b4: JUMPI 0x5b9 V327
---
Entry stack: [V11, 0xba]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xba]

================================

Block 0x5b5
[0x5b5:0x5b8]
---
Predecessors: [0x541]
Successors: []
---
0x5b5 PUSH1 0x0
0x5b7 DUP1
0x5b8 REVERT
---
0x5b5: V329 = 0x0
0x5b8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xba]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xba]

================================

Block 0x5b9
[0x5b9:0x5ba]
---
Predecessors: [0x541]
Successors: [0xba]
---
0x5b9 JUMPDEST
0x5ba JUMP
---
0x5b9: JUMPDEST 
0x5ba: JUMP 0xba
---
Entry stack: [V11, 0xba]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5bb
[0x5bb:0x5d7]
---
Predecessors: []
Successors: [0x5d8]
Has unresolved jump.
---
0x5bb STOP
0x5bc LOG1
0x5bd PUSH6 0x627a7a723058
0x5c4 SHA3
0x5c5 COINBASE
0x5c6 MISSING 0xb4
0x5c7 PUSH10 0x81c1bdbf306acd814ebc
0x5d2 MISSING 0x48
0x5d3 RETURN
0x5d4 MISSING 0xc
0x5d5 SLOAD
0x5d6 MISSING 0xe9
0x5d7 JUMPI
---
0x5bb: STOP 
0x5bc: LOG S0 S1 S2
0x5bd: V330 = 0x627a7a723058
0x5c4: V331 = SHA3 0x627a7a723058 S3
0x5c5: V332 = COINBASE
0x5c6: MISSING 0xb4
0x5c7: V333 = 0x81c1bdbf306acd814ebc
0x5d2: MISSING 0x48
0x5d3: RETURN S0 S1
0x5d4: MISSING 0xc
0x5d5: V334 = S[S0]
0x5d6: MISSING 0xe9
0x5d7: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V332, V331, 0x81c1bdbf306acd814ebc, V334]
Exit stack: []

================================

Block 0x5d8
[0x5d8:0x5e9]
---
Predecessors: [0x5bb]
Successors: []
---
0x5d8 MISSING 0xe
0x5d9 MISSING 0xec
0x5da DUP12
0x5db MISSING 0x4c
0x5dc ADD
0x5dd SDIV
0x5de MISSING 0xa9
0x5df DUP9
0x5e0 MSTORE8
0x5e1 PUSH8 0x1405d20029
---
0x5d8: MISSING 0xe
0x5d9: MISSING 0xec
0x5db: MISSING 0x4c
0x5dc: V335 = ADD S0 S1
0x5dd: V336 = SDIV V335 S2
0x5de: MISSING 0xa9
0x5e0: M8[S8] = S0
0x5e1: V337 = 0x1405d20029
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V336, 0x1405d20029, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x64
Exit block: 0x85
Body: 0x64, 0x6b, 0x6f, 0x85, 0xbc, 0x113, 0x117, 0x142, 0x146, 0x1ad, 0x1b1

Function 1:
Public function signature: 0x4f5e6253
Entry block: 0x87
Exit block: 0x8f
Body: 0x87, 0x8f, 0x1b4, 0x20b, 0x20f, 0x26c, 0x26d, 0x28f, 0x293

Function 2:
Public function signature: 0x70876c98
Entry block: 0x91
Exit block: 0xb0
Body: 0x91, 0xb0, 0x295, 0x32d, 0x331, 0x33e, 0x342, 0x36d, 0x388, 0x38e, 0x41a, 0x41e, 0x427, 0x42b, 0x431, 0x453, 0x483, 0x489, 0x4db, 0x4df, 0x4e0

Function 3:
Public function signature: 0x853828b6
Entry block: 0xb2
Exit block: 0xba
Body: 0xb2, 0xba, 0x4e6, 0x53d, 0x541, 0x5b5, 0x5b9

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

