Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xcf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xcf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xcf
0xa: JUMPI 0xcf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xe0]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x2170ebf7
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xe0
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x2170ebf7
0x1a: V12 = EQ V10 0x2170ebf7
0x1b: V13 = 0xe0
0x1e: JUMPI 0xe0 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x104]
---
0x1f DUP1
0x20 PUSH4 0x38d52e0f
0x25 EQ
0x26 PUSH2 0x104
0x29 JUMPI
---
0x20: V14 = 0x38d52e0f
0x25: V15 = EQ 0x38d52e0f V10
0x26: V16 = 0x104
0x29: JUMPI 0x104 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x12d]
---
0x2a DUP1
0x2b PUSH4 0x4b750334
0x30 EQ
0x31 PUSH2 0x12d
0x34 JUMPI
---
0x2b: V17 = 0x4b750334
0x30: V18 = EQ 0x4b750334 V10
0x31: V19 = 0x12d
0x34: JUMPI 0x12d V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x14c]
---
0x35 DUP1
0x36 PUSH4 0x4ca50f59
0x3b EQ
0x3c PUSH2 0x14c
0x3f JUMPI
---
0x36: V20 = 0x4ca50f59
0x3b: V21 = EQ 0x4ca50f59 V10
0x3c: V22 = 0x14c
0x3f: JUMPI 0x14c V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x16d]
---
0x40 DUP1
0x41 PUSH4 0x52954e5a
0x46 EQ
0x47 PUSH2 0x16d
0x4a JUMPI
---
0x41: V23 = 0x52954e5a
0x46: V24 = EQ 0x52954e5a V10
0x47: V25 = 0x16d
0x4a: JUMPI 0x16d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x194]
---
0x4b DUP1
0x4c PUSH4 0x8620410b
0x51 EQ
0x52 PUSH2 0x194
0x55 JUMPI
---
0x4c: V26 = 0x8620410b
0x51: V27 = EQ 0x8620410b V10
0x52: V28 = 0x194
0x55: JUMPI 0x194 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1b3]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0x1b3
0x60 JUMPI
---
0x57: V29 = 0x8da5cb5b
0x5c: V30 = EQ 0x8da5cb5b V10
0x5d: V31 = 0x1b3
0x60: JUMPI 0x1b3 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1dc]
---
0x61 DUP1
0x62 PUSH4 0x919f8cfc
0x67 EQ
0x68 PUSH2 0x1dc
0x6b JUMPI
---
0x62: V32 = 0x919f8cfc
0x67: V33 = EQ 0x919f8cfc V10
0x68: V34 = 0x1dc
0x6b: JUMPI 0x1dc V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1e6]
---
0x6c DUP1
0x6d PUSH4 0x976a8435
0x72 EQ
0x73 PUSH2 0x1e6
0x76 JUMPI
---
0x6d: V35 = 0x976a8435
0x72: V36 = EQ 0x976a8435 V10
0x73: V37 = 0x1e6
0x76: JUMPI 0x1e6 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x205]
---
0x77 DUP1
0x78 PUSH4 0xa7abc124
0x7d EQ
0x7e PUSH2 0x205
0x81 JUMPI
---
0x78: V38 = 0xa7abc124
0x7d: V39 = EQ 0xa7abc124 V10
0x7e: V40 = 0x205
0x81: JUMPI 0x205 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x21a]
---
0x82 DUP1
0x83 PUSH4 0xb1099347
0x88 EQ
0x89 PUSH2 0x21a
0x8c JUMPI
---
0x83: V41 = 0xb1099347
0x88: V42 = EQ 0xb1099347 V10
0x89: V43 = 0x21a
0x8c: JUMPI 0x21a V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x23b]
---
0x8d DUP1
0x8e PUSH4 0xbe86d5a7
0x93 EQ
0x94 PUSH2 0x23b
0x97 JUMPI
---
0x8e: V44 = 0xbe86d5a7
0x93: V45 = EQ 0xbe86d5a7 V10
0x94: V46 = 0x23b
0x97: JUMPI 0x23b V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x262]
---
0x98 DUP1
0x99 PUSH4 0xc34764cf
0x9e EQ
0x9f PUSH2 0x262
0xa2 JUMPI
---
0x99: V47 = 0xc34764cf
0x9e: V48 = EQ 0xc34764cf V10
0x9f: V49 = 0x262
0xa2: JUMPI 0x262 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x289]
---
0xa3 DUP1
0xa4 PUSH4 0xc60ccb0e
0xa9 EQ
0xaa PUSH2 0x289
0xad JUMPI
---
0xa4: V50 = 0xc60ccb0e
0xa9: V51 = EQ 0xc60ccb0e V10
0xaa: V52 = 0x289
0xad: JUMPI 0x289 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x293]
---
0xae DUP1
0xaf PUSH4 0xcd53a3b7
0xb4 EQ
0xb5 PUSH2 0x293
0xb8 JUMPI
---
0xaf: V53 = 0xcd53a3b7
0xb4: V54 = EQ 0xcd53a3b7 V10
0xb5: V55 = 0x293
0xb8: JUMPI 0x293 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x2b7]
---
0xb9 DUP1
0xba PUSH4 0xeff883bd
0xbf EQ
0xc0 PUSH2 0x2b7
0xc3 JUMPI
---
0xba: V56 = 0xeff883bd
0xbf: V57 = EQ 0xeff883bd V10
0xc0: V58 = 0x2b7
0xc3: JUMPI 0x2b7 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x2c9]
---
0xc4 DUP1
0xc5 PUSH4 0xf2fde38b
0xca EQ
0xcb PUSH2 0x2c9
0xce JUMPI
---
0xc5: V59 = 0xf2fde38b
0xca: V60 = EQ 0xf2fde38b V10
0xcb: V61 = 0x2c9
0xce: JUMPI 0x2c9 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0xd2]
---
Predecessors: [0x0, 0xc4]
Successors: [0xd3]
---
0xcf JUMPDEST
0xd0 PUSH2 0xde
---
0xcf: JUMPDEST 
0xd0: V62 = 0xde
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V10, 0xde]

================================

Block 0xd3
[0xd3:0xda]
---
Predecessors: [0xcf]
Successors: [0x2db]
---
0xd3 JUMPDEST
0xd4 PUSH2 0xdb
0xd7 PUSH2 0x2db
0xda JUMP
---
0xd3: JUMPDEST 
0xd4: V63 = 0xdb
0xd7: V64 = 0x2db
0xda: JUMP 0x2db
---
Entry stack: [V10, 0xde]
Stack pops: 0
Stack additions: [0xdb]
Exit stack: [V10, 0xde, 0xdb]

================================

Block 0xdb
[0xdb:0xdb]
---
Predecessors: [0x50f]
Successors: [0xdc]
---
0xdb JUMPDEST
---
0xdb: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xdc
[0xdc:0xdd]
---
Predecessors: [0xdb]
Successors: [0xde]
---
0xdc JUMPDEST
0xdd JUMP
---
0xdc: JUMPDEST 
0xdd: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: [0xdc, 0x50f, 0x86d, 0x906, 0xdc6, 0xe51]
Successors: []
---
0xde JUMPDEST
0xdf STOP
---
0xde: JUMPDEST 
0xdf: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xe0
[0xe0:0xe5]
---
Predecessors: [0xb]
Successors: [0xe6]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 PUSH2 0x0
0xe5 JUMPI
---
0xe0: JUMPDEST 
0xe1: V65 = CALLVALUE
0xe2: V66 = 0x0
0xe5: THROWI V65
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe6
[0xe6:0xef]
---
Predecessors: [0xe0]
Successors: [0x514]
---
0xe6 PUSH2 0xf0
0xe9 PUSH1 0x4
0xeb CALLDATALOAD
0xec PUSH2 0x514
0xef JUMP
---
0xe6: V67 = 0xf0
0xe9: V68 = 0x4
0xeb: V69 = CALLDATALOAD 0x4
0xec: V70 = 0x514
0xef: JUMP 0x514
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf0, V69]
Exit stack: [V10, 0xf0, V69]

================================

Block 0xf0
[0xf0:0x103]
---
Predecessors: [0x5a1, 0x5bb, 0x77c, 0x90a, 0xa9e, 0xb73, 0xc3a]
Successors: []
---
0xf0 JUMPDEST
0xf1 PUSH1 0x40
0xf3 DUP1
0xf4 MLOAD
0xf5 SWAP2
0xf6 ISZERO
0xf7 ISZERO
0xf8 DUP3
0xf9 MSTORE
0xfa MLOAD
0xfb SWAP1
0xfc DUP2
0xfd SWAP1
0xfe SUB
0xff PUSH1 0x20
0x101 ADD
0x102 SWAP1
0x103 RETURN
---
0xf0: JUMPDEST 
0xf1: V71 = 0x40
0xf4: V72 = M[0x40]
0xf6: V73 = ISZERO S0
0xf7: V74 = ISZERO V73
0xf9: M[V72] = V74
0xfa: V75 = M[0x40]
0xfe: V76 = SUB V72 V75
0xff: V77 = 0x20
0x101: V78 = ADD 0x20 V76
0x103: RETURN V75 V78
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x104
[0x104:0x109]
---
Predecessors: [0x1f]
Successors: [0x10a]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 PUSH2 0x0
0x109 JUMPI
---
0x104: JUMPDEST 
0x105: V79 = CALLVALUE
0x106: V80 = 0x0
0x109: THROWI V79
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10a
[0x10a:0x110]
---
Predecessors: [0x104]
Successors: [0x5a6]
---
0x10a PUSH2 0x111
0x10d PUSH2 0x5a6
0x110 JUMP
---
0x10a: V81 = 0x111
0x10d: V82 = 0x5a6
0x110: JUMP 0x5a6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x111]
Exit stack: [V10, 0x111]

================================

Block 0x111
[0x111:0x12c]
---
Predecessors: [0x5a6, 0x788]
Successors: []
---
0x111 JUMPDEST
0x112 PUSH1 0x40
0x114 DUP1
0x115 MLOAD
0x116 PUSH1 0x1
0x118 PUSH1 0xa0
0x11a PUSH1 0x2
0x11c EXP
0x11d SUB
0x11e SWAP1
0x11f SWAP3
0x120 AND
0x121 DUP3
0x122 MSTORE
0x123 MLOAD
0x124 SWAP1
0x125 DUP2
0x126 SWAP1
0x127 SUB
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP1
0x12c RETURN
---
0x111: JUMPDEST 
0x112: V83 = 0x40
0x115: V84 = M[0x40]
0x116: V85 = 0x1
0x118: V86 = 0xa0
0x11a: V87 = 0x2
0x11c: V88 = EXP 0x2 0xa0
0x11d: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x120: V90 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x122: M[V84] = V90
0x123: V91 = M[0x40]
0x127: V92 = SUB V84 V91
0x128: V93 = 0x20
0x12a: V94 = ADD 0x20 V92
0x12c: RETURN V91 V94
---
Entry stack: [V10, 0x111, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x111]

================================

Block 0x12d
[0x12d:0x132]
---
Predecessors: [0x2a]
Successors: [0x133]
---
0x12d JUMPDEST
0x12e CALLVALUE
0x12f PUSH2 0x0
0x132 JUMPI
---
0x12d: JUMPDEST 
0x12e: V95 = CALLVALUE
0x12f: V96 = 0x0
0x132: THROWI V95
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x133
[0x133:0x139]
---
Predecessors: [0x12d]
Successors: [0x5b5]
---
0x133 PUSH2 0x13a
0x136 PUSH2 0x5b5
0x139 JUMP
---
0x133: V97 = 0x13a
0x136: V98 = 0x5b5
0x139: JUMP 0x5b5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13a]
Exit stack: [V10, 0x13a]

================================

Block 0x13a
[0x13a:0x14b]
---
Predecessors: [0x5b5, 0x782, 0x86f]
Successors: []
---
0x13a JUMPDEST
0x13b PUSH1 0x40
0x13d DUP1
0x13e MLOAD
0x13f SWAP2
0x140 DUP3
0x141 MSTORE
0x142 MLOAD
0x143 SWAP1
0x144 DUP2
0x145 SWAP1
0x146 SUB
0x147 PUSH1 0x20
0x149 ADD
0x14a SWAP1
0x14b RETURN
---
0x13a: JUMPDEST 
0x13b: V99 = 0x40
0x13e: V100 = M[0x40]
0x141: M[V100] = S0
0x142: V101 = M[0x40]
0x146: V102 = SUB V100 V101
0x147: V103 = 0x20
0x149: V104 = ADD 0x20 V102
0x14b: RETURN V101 V104
---
Entry stack: [V10, 0x13a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x13a]

================================

Block 0x14c
[0x14c:0x151]
---
Predecessors: [0x35]
Successors: [0x152]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e PUSH2 0x0
0x151 JUMPI
---
0x14c: JUMPDEST 
0x14d: V105 = CALLVALUE
0x14e: V106 = 0x0
0x151: THROWI V105
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x152
[0x152:0x158]
---
Predecessors: [0x14c]
Successors: [0x5bb]
---
0x152 PUSH2 0xf0
0x155 PUSH2 0x5bb
0x158 JUMP
---
0x152: V107 = 0xf0
0x155: V108 = 0x5bb
0x158: JUMP 0x5bb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf0]
Exit stack: [V10, 0xf0]

================================

Block 0x159
[0x159:0x16c]
---
Predecessors: []
Successors: []
---
0x159 JUMPDEST
0x15a PUSH1 0x40
0x15c DUP1
0x15d MLOAD
0x15e SWAP2
0x15f ISZERO
0x160 ISZERO
0x161 DUP3
0x162 MSTORE
0x163 MLOAD
0x164 SWAP1
0x165 DUP2
0x166 SWAP1
0x167 SUB
0x168 PUSH1 0x20
0x16a ADD
0x16b SWAP1
0x16c RETURN
---
0x159: JUMPDEST 
0x15a: V109 = 0x40
0x15d: V110 = M[0x40]
0x15f: V111 = ISZERO S0
0x160: V112 = ISZERO V111
0x162: M[V110] = V112
0x163: V113 = M[0x40]
0x167: V114 = SUB V110 V113
0x168: V115 = 0x20
0x16a: V116 = ADD 0x20 V114
0x16c: RETURN V113 V116
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x16d
[0x16d:0x172]
---
Predecessors: [0x40]
Successors: [0x173]
---
0x16d JUMPDEST
0x16e CALLVALUE
0x16f PUSH2 0x0
0x172 JUMPI
---
0x16d: JUMPDEST 
0x16e: V117 = CALLVALUE
0x16f: V118 = 0x0
0x172: THROWI V117
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x173
[0x173:0x17f]
---
Predecessors: [0x16d]
Successors: [0x5c9]
---
0x173 PUSH2 0xf0
0x176 PUSH1 0x4
0x178 CALLDATALOAD
0x179 PUSH1 0x24
0x17b CALLDATALOAD
0x17c PUSH2 0x5c9
0x17f JUMP
---
0x173: V119 = 0xf0
0x176: V120 = 0x4
0x178: V121 = CALLDATALOAD 0x4
0x179: V122 = 0x24
0x17b: V123 = CALLDATALOAD 0x24
0x17c: V124 = 0x5c9
0x17f: JUMP 0x5c9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf0, V121, V123]
Exit stack: [V10, 0xf0, V121, V123]

================================

Block 0x180
[0x180:0x193]
---
Predecessors: []
Successors: []
---
0x180 JUMPDEST
0x181 PUSH1 0x40
0x183 DUP1
0x184 MLOAD
0x185 SWAP2
0x186 ISZERO
0x187 ISZERO
0x188 DUP3
0x189 MSTORE
0x18a MLOAD
0x18b SWAP1
0x18c DUP2
0x18d SWAP1
0x18e SUB
0x18f PUSH1 0x20
0x191 ADD
0x192 SWAP1
0x193 RETURN
---
0x180: JUMPDEST 
0x181: V125 = 0x40
0x184: V126 = M[0x40]
0x186: V127 = ISZERO S0
0x187: V128 = ISZERO V127
0x189: M[V126] = V128
0x18a: V129 = M[0x40]
0x18e: V130 = SUB V126 V129
0x18f: V131 = 0x20
0x191: V132 = ADD 0x20 V130
0x193: RETURN V129 V132
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x194
[0x194:0x199]
---
Predecessors: [0x4b]
Successors: [0x19a]
---
0x194 JUMPDEST
0x195 CALLVALUE
0x196 PUSH2 0x0
0x199 JUMPI
---
0x194: JUMPDEST 
0x195: V133 = CALLVALUE
0x196: V134 = 0x0
0x199: THROWI V133
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19a
[0x19a:0x1a0]
---
Predecessors: [0x194]
Successors: [0x782]
---
0x19a PUSH2 0x13a
0x19d PUSH2 0x782
0x1a0 JUMP
---
0x19a: V135 = 0x13a
0x19d: V136 = 0x782
0x1a0: JUMP 0x782
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13a]
Exit stack: [V10, 0x13a]

================================

Block 0x1a1
[0x1a1:0x1b2]
---
Predecessors: []
Successors: []
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x40
0x1a4 DUP1
0x1a5 MLOAD
0x1a6 SWAP2
0x1a7 DUP3
0x1a8 MSTORE
0x1a9 MLOAD
0x1aa SWAP1
0x1ab DUP2
0x1ac SWAP1
0x1ad SUB
0x1ae PUSH1 0x20
0x1b0 ADD
0x1b1 SWAP1
0x1b2 RETURN
---
0x1a1: JUMPDEST 
0x1a2: V137 = 0x40
0x1a5: V138 = M[0x40]
0x1a8: M[V138] = S0
0x1a9: V139 = M[0x40]
0x1ad: V140 = SUB V138 V139
0x1ae: V141 = 0x20
0x1b0: V142 = ADD 0x20 V140
0x1b2: RETURN V139 V142
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b3
[0x1b3:0x1b8]
---
Predecessors: [0x56]
Successors: [0x1b9]
---
0x1b3 JUMPDEST
0x1b4 CALLVALUE
0x1b5 PUSH2 0x0
0x1b8 JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V143 = CALLVALUE
0x1b5: V144 = 0x0
0x1b8: THROWI V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b9
[0x1b9:0x1bf]
---
Predecessors: [0x1b3]
Successors: [0x788]
---
0x1b9 PUSH2 0x111
0x1bc PUSH2 0x788
0x1bf JUMP
---
0x1b9: V145 = 0x111
0x1bc: V146 = 0x788
0x1bf: JUMP 0x788
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x111]
Exit stack: [V10, 0x111]

================================

Block 0x1c0
[0x1c0:0x1db]
---
Predecessors: []
Successors: []
---
0x1c0 JUMPDEST
0x1c1 PUSH1 0x40
0x1c3 DUP1
0x1c4 MLOAD
0x1c5 PUSH1 0x1
0x1c7 PUSH1 0xa0
0x1c9 PUSH1 0x2
0x1cb EXP
0x1cc SUB
0x1cd SWAP1
0x1ce SWAP3
0x1cf AND
0x1d0 DUP3
0x1d1 MSTORE
0x1d2 MLOAD
0x1d3 SWAP1
0x1d4 DUP2
0x1d5 SWAP1
0x1d6 SUB
0x1d7 PUSH1 0x20
0x1d9 ADD
0x1da SWAP1
0x1db RETURN
---
0x1c0: JUMPDEST 
0x1c1: V147 = 0x40
0x1c4: V148 = M[0x40]
0x1c5: V149 = 0x1
0x1c7: V150 = 0xa0
0x1c9: V151 = 0x2
0x1cb: V152 = EXP 0x2 0xa0
0x1cc: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cf: V154 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: M[V148] = V154
0x1d2: V155 = M[0x40]
0x1d6: V156 = SUB V148 V155
0x1d7: V157 = 0x20
0x1d9: V158 = ADD 0x20 V156
0x1db: RETURN V155 V158
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x61]
Successors: [0x797]
---
0x1dc JUMPDEST
0x1dd PUSH2 0xde
0x1e0 PUSH2 0x797
0x1e3 JUMP
---
0x1dc: JUMPDEST 
0x1dd: V159 = 0xde
0x1e0: V160 = 0x797
0x1e3: JUMP 0x797
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V10, 0xde]

================================

Block 0x1e4
[0x1e4:0x1e5]
---
Predecessors: []
Successors: []
---
0x1e4 JUMPDEST
0x1e5 STOP
---
0x1e4: JUMPDEST 
0x1e5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e6
[0x1e6:0x1eb]
---
Predecessors: [0x6c]
Successors: [0x1ec]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 PUSH2 0x0
0x1eb JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V161 = CALLVALUE
0x1e8: V162 = 0x0
0x1eb: THROWI V161
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ec
[0x1ec:0x1f2]
---
Predecessors: [0x1e6]
Successors: [0x86f]
---
0x1ec PUSH2 0x13a
0x1ef PUSH2 0x86f
0x1f2 JUMP
---
0x1ec: V163 = 0x13a
0x1ef: V164 = 0x86f
0x1f2: JUMP 0x86f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13a]
Exit stack: [V10, 0x13a]

================================

Block 0x1f3
[0x1f3:0x204]
---
Predecessors: []
Successors: []
---
0x1f3 JUMPDEST
0x1f4 PUSH1 0x40
0x1f6 DUP1
0x1f7 MLOAD
0x1f8 SWAP2
0x1f9 DUP3
0x1fa MSTORE
0x1fb MLOAD
0x1fc SWAP1
0x1fd DUP2
0x1fe SWAP1
0x1ff SUB
0x200 PUSH1 0x20
0x202 ADD
0x203 SWAP1
0x204 RETURN
---
0x1f3: JUMPDEST 
0x1f4: V165 = 0x40
0x1f7: V166 = M[0x40]
0x1fa: M[V166] = S0
0x1fb: V167 = M[0x40]
0x1ff: V168 = SUB V166 V167
0x200: V169 = 0x20
0x202: V170 = ADD 0x20 V168
0x204: RETURN V167 V170
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x205
[0x205:0x20a]
---
Predecessors: [0x77]
Successors: [0x20b]
---
0x205 JUMPDEST
0x206 CALLVALUE
0x207 PUSH2 0x0
0x20a JUMPI
---
0x205: JUMPDEST 
0x206: V171 = CALLVALUE
0x207: V172 = 0x0
0x20a: THROWI V171
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20b
[0x20b:0x217]
---
Predecessors: [0x205]
Successors: [0x875]
---
0x20b PUSH2 0xde
0x20e PUSH1 0x4
0x210 CALLDATALOAD
0x211 PUSH1 0x24
0x213 CALLDATALOAD
0x214 PUSH2 0x875
0x217 JUMP
---
0x20b: V173 = 0xde
0x20e: V174 = 0x4
0x210: V175 = CALLDATALOAD 0x4
0x211: V176 = 0x24
0x213: V177 = CALLDATALOAD 0x24
0x214: V178 = 0x875
0x217: JUMP 0x875
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xde, V175, V177]
Exit stack: [V10, 0xde, V175, V177]

================================

Block 0x218
[0x218:0x219]
---
Predecessors: []
Successors: []
---
0x218 JUMPDEST
0x219 STOP
---
0x218: JUMPDEST 
0x219: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21a
[0x21a:0x21f]
---
Predecessors: [0x82]
Successors: [0x220]
---
0x21a JUMPDEST
0x21b CALLVALUE
0x21c PUSH2 0x0
0x21f JUMPI
---
0x21a: JUMPDEST 
0x21b: V179 = CALLVALUE
0x21c: V180 = 0x0
0x21f: THROWI V179
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x220
[0x220:0x226]
---
Predecessors: [0x21a]
Successors: [0x90a]
---
0x220 PUSH2 0xf0
0x223 PUSH2 0x90a
0x226 JUMP
---
0x220: V181 = 0xf0
0x223: V182 = 0x90a
0x226: JUMP 0x90a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf0]
Exit stack: [V10, 0xf0]

================================

Block 0x227
[0x227:0x23a]
---
Predecessors: []
Successors: []
---
0x227 JUMPDEST
0x228 PUSH1 0x40
0x22a DUP1
0x22b MLOAD
0x22c SWAP2
0x22d ISZERO
0x22e ISZERO
0x22f DUP3
0x230 MSTORE
0x231 MLOAD
0x232 SWAP1
0x233 DUP2
0x234 SWAP1
0x235 SUB
0x236 PUSH1 0x20
0x238 ADD
0x239 SWAP1
0x23a RETURN
---
0x227: JUMPDEST 
0x228: V183 = 0x40
0x22b: V184 = M[0x40]
0x22d: V185 = ISZERO S0
0x22e: V186 = ISZERO V185
0x230: M[V184] = V186
0x231: V187 = M[0x40]
0x235: V188 = SUB V184 V187
0x236: V189 = 0x20
0x238: V190 = ADD 0x20 V188
0x23a: RETURN V187 V190
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x23b
[0x23b:0x240]
---
Predecessors: [0x8d]
Successors: [0x241]
---
0x23b JUMPDEST
0x23c CALLVALUE
0x23d PUSH2 0x0
0x240 JUMPI
---
0x23b: JUMPDEST 
0x23c: V191 = CALLVALUE
0x23d: V192 = 0x0
0x240: THROWI V191
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x241
[0x241:0x24d]
---
Predecessors: [0x23b]
Successors: [0x913]
---
0x241 PUSH2 0xf0
0x244 PUSH1 0x4
0x246 CALLDATALOAD
0x247 PUSH1 0x24
0x249 CALLDATALOAD
0x24a PUSH2 0x913
0x24d JUMP
---
0x241: V193 = 0xf0
0x244: V194 = 0x4
0x246: V195 = CALLDATALOAD 0x4
0x247: V196 = 0x24
0x249: V197 = CALLDATALOAD 0x24
0x24a: V198 = 0x913
0x24d: JUMP 0x913
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf0, V195, V197]
Exit stack: [V10, 0xf0, V195, V197]

================================

Block 0x24e
[0x24e:0x261]
---
Predecessors: []
Successors: []
---
0x24e JUMPDEST
0x24f PUSH1 0x40
0x251 DUP1
0x252 MLOAD
0x253 SWAP2
0x254 ISZERO
0x255 ISZERO
0x256 DUP3
0x257 MSTORE
0x258 MLOAD
0x259 SWAP1
0x25a DUP2
0x25b SWAP1
0x25c SUB
0x25d PUSH1 0x20
0x25f ADD
0x260 SWAP1
0x261 RETURN
---
0x24e: JUMPDEST 
0x24f: V199 = 0x40
0x252: V200 = M[0x40]
0x254: V201 = ISZERO S0
0x255: V202 = ISZERO V201
0x257: M[V200] = V202
0x258: V203 = M[0x40]
0x25c: V204 = SUB V200 V203
0x25d: V205 = 0x20
0x25f: V206 = ADD 0x20 V204
0x261: RETURN V203 V206
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x262
[0x262:0x267]
---
Predecessors: [0x98]
Successors: [0x268]
---
0x262 JUMPDEST
0x263 CALLVALUE
0x264 PUSH2 0x0
0x267 JUMPI
---
0x262: JUMPDEST 
0x263: V207 = CALLVALUE
0x264: V208 = 0x0
0x267: THROWI V207
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x268
[0x268:0x274]
---
Predecessors: [0x262]
Successors: [0xaa4]
---
0x268 PUSH2 0xf0
0x26b PUSH1 0x4
0x26d CALLDATALOAD
0x26e PUSH1 0x24
0x270 CALLDATALOAD
0x271 PUSH2 0xaa4
0x274 JUMP
---
0x268: V209 = 0xf0
0x26b: V210 = 0x4
0x26d: V211 = CALLDATALOAD 0x4
0x26e: V212 = 0x24
0x270: V213 = CALLDATALOAD 0x24
0x271: V214 = 0xaa4
0x274: JUMP 0xaa4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf0, V211, V213]
Exit stack: [V10, 0xf0, V211, V213]

================================

Block 0x275
[0x275:0x288]
---
Predecessors: []
Successors: []
---
0x275 JUMPDEST
0x276 PUSH1 0x40
0x278 DUP1
0x279 MLOAD
0x27a SWAP2
0x27b ISZERO
0x27c ISZERO
0x27d DUP3
0x27e MSTORE
0x27f MLOAD
0x280 SWAP1
0x281 DUP2
0x282 SWAP1
0x283 SUB
0x284 PUSH1 0x20
0x286 ADD
0x287 SWAP1
0x288 RETURN
---
0x275: JUMPDEST 
0x276: V215 = 0x40
0x279: V216 = M[0x40]
0x27b: V217 = ISZERO S0
0x27c: V218 = ISZERO V217
0x27e: M[V216] = V218
0x27f: V219 = M[0x40]
0x283: V220 = SUB V216 V219
0x284: V221 = 0x20
0x286: V222 = ADD 0x20 V220
0x288: RETURN V219 V222
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x289
[0x289:0x290]
---
Predecessors: [0xa3]
Successors: [0x2db]
---
0x289 JUMPDEST
0x28a PUSH2 0xde
0x28d PUSH2 0x2db
0x290 JUMP
---
0x289: JUMPDEST 
0x28a: V223 = 0xde
0x28d: V224 = 0x2db
0x290: JUMP 0x2db
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V10, 0xde]

================================

Block 0x291
[0x291:0x292]
---
Predecessors: []
Successors: []
---
0x291 JUMPDEST
0x292 STOP
---
0x291: JUMPDEST 
0x292: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x293
[0x293:0x298]
---
Predecessors: [0xae]
Successors: [0x299]
---
0x293 JUMPDEST
0x294 CALLVALUE
0x295 PUSH2 0x0
0x298 JUMPI
---
0x293: JUMPDEST 
0x294: V225 = CALLVALUE
0x295: V226 = 0x0
0x298: THROWI V225
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x299
[0x299:0x2a2]
---
Predecessors: [0x293]
Successors: [0xb79]
---
0x299 PUSH2 0xf0
0x29c PUSH1 0x4
0x29e CALLDATALOAD
0x29f PUSH2 0xb79
0x2a2 JUMP
---
0x299: V227 = 0xf0
0x29c: V228 = 0x4
0x29e: V229 = CALLDATALOAD 0x4
0x29f: V230 = 0xb79
0x2a2: JUMP 0xb79
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf0, V229]
Exit stack: [V10, 0xf0, V229]

================================

Block 0x2a3
[0x2a3:0x2b6]
---
Predecessors: []
Successors: []
---
0x2a3 JUMPDEST
0x2a4 PUSH1 0x40
0x2a6 DUP1
0x2a7 MLOAD
0x2a8 SWAP2
0x2a9 ISZERO
0x2aa ISZERO
0x2ab DUP3
0x2ac MSTORE
0x2ad MLOAD
0x2ae SWAP1
0x2af DUP2
0x2b0 SWAP1
0x2b1 SUB
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 SWAP1
0x2b6 RETURN
---
0x2a3: JUMPDEST 
0x2a4: V231 = 0x40
0x2a7: V232 = M[0x40]
0x2a9: V233 = ISZERO S0
0x2aa: V234 = ISZERO V233
0x2ac: M[V232] = V234
0x2ad: V235 = M[0x40]
0x2b1: V236 = SUB V232 V235
0x2b2: V237 = 0x20
0x2b4: V238 = ADD 0x20 V236
0x2b6: RETURN V235 V238
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b7
[0x2b7:0x2bc]
---
Predecessors: [0xb9]
Successors: [0x2bd]
---
0x2b7 JUMPDEST
0x2b8 CALLVALUE
0x2b9 PUSH2 0x0
0x2bc JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V239 = CALLVALUE
0x2b9: V240 = 0x0
0x2bc: THROWI V239
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bd
[0x2bd:0x2c6]
---
Predecessors: [0x2b7]
Successors: [0xc3f]
---
0x2bd PUSH2 0xde
0x2c0 PUSH1 0x4
0x2c2 CALLDATALOAD
0x2c3 PUSH2 0xc3f
0x2c6 JUMP
---
0x2bd: V241 = 0xde
0x2c0: V242 = 0x4
0x2c2: V243 = CALLDATALOAD 0x4
0x2c3: V244 = 0xc3f
0x2c6: JUMP 0xc3f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xde, V243]
Exit stack: [V10, 0xde, V243]

================================

Block 0x2c7
[0x2c7:0x2c8]
---
Predecessors: []
Successors: []
---
0x2c7 JUMPDEST
0x2c8 STOP
---
0x2c7: JUMPDEST 
0x2c8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2c9
[0x2c9:0x2ce]
---
Predecessors: [0xc4]
Successors: [0x2cf]
---
0x2c9 JUMPDEST
0x2ca CALLVALUE
0x2cb PUSH2 0x0
0x2ce JUMPI
---
0x2c9: JUMPDEST 
0x2ca: V245 = CALLVALUE
0x2cb: V246 = 0x0
0x2ce: THROWI V245
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cf
[0x2cf:0x2d8]
---
Predecessors: [0x2c9]
Successors: [0xdcb]
---
0x2cf PUSH2 0xde
0x2d2 PUSH1 0x4
0x2d4 CALLDATALOAD
0x2d5 PUSH2 0xdcb
0x2d8 JUMP
---
0x2cf: V247 = 0xde
0x2d2: V248 = 0x4
0x2d4: V249 = CALLDATALOAD 0x4
0x2d5: V250 = 0xdcb
0x2d8: JUMP 0xdcb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xde, V249]
Exit stack: [V10, 0xde, V249]

================================

Block 0x2d9
[0x2d9:0x2da]
---
Predecessors: []
Successors: []
---
0x2d9 JUMPDEST
0x2da STOP
---
0x2d9: JUMPDEST 
0x2da: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2db
[0x2db:0x2f6]
---
Predecessors: [0xd3, 0x289]
Successors: [0x2f7, 0x30a]
---
0x2db JUMPDEST
0x2dc PUSH1 0x0
0x2de PUSH1 0x0
0x2e0 PUSH1 0x0
0x2e2 PUSH1 0x5
0x2e4 PUSH1 0x1
0x2e6 SWAP1
0x2e7 SLOAD
0x2e8 SWAP1
0x2e9 PUSH2 0x100
0x2ec EXP
0x2ed SWAP1
0x2ee DIV
0x2ef PUSH1 0xff
0x2f1 AND
0x2f2 DUP1
0x2f3 PUSH2 0x30a
0x2f6 JUMPI
---
0x2db: JUMPDEST 
0x2dc: V251 = 0x0
0x2de: V252 = 0x0
0x2e0: V253 = 0x0
0x2e2: V254 = 0x5
0x2e4: V255 = 0x1
0x2e7: V256 = S[0x5]
0x2e9: V257 = 0x100
0x2ec: V258 = EXP 0x100 0x1
0x2ee: V259 = DIV V256 0x100
0x2ef: V260 = 0xff
0x2f1: V261 = AND 0xff V259
0x2f3: V262 = 0x30a
0x2f6: JUMPI 0x30a V261
---
Entry stack: [V10, S1, {0xdb, 0xde}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V261]
Exit stack: [V10, S1, {0xdb, 0xde}, 0x0, 0x0, 0x0, V261]

================================

Block 0x2f7
[0x2f7:0x309]
---
Predecessors: [0x2db]
Successors: [0x30a]
---
0x2f7 POP
0x2f8 PUSH1 0x0
0x2fa SLOAD
0x2fb CALLER
0x2fc PUSH1 0x1
0x2fe PUSH1 0xa0
0x300 PUSH1 0x2
0x302 EXP
0x303 SUB
0x304 SWAP1
0x305 DUP2
0x306 AND
0x307 SWAP2
0x308 AND
0x309 EQ
---
0x2f8: V263 = 0x0
0x2fa: V264 = S[0x0]
0x2fb: V265 = CALLER
0x2fc: V266 = 0x1
0x2fe: V267 = 0xa0
0x300: V268 = 0x2
0x302: V269 = EXP 0x2 0xa0
0x303: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x308: V272 = AND V264 0xffffffffffffffffffffffffffffffffffffffff
0x309: V273 = EQ V272 V271
---
Entry stack: [V10, S5, {0xdb, 0xde}, 0x0, 0x0, 0x0, V261]
Stack pops: 1
Stack additions: [V273]
Exit stack: [V10, S5, {0xdb, 0xde}, 0x0, 0x0, 0x0, V273]

================================

Block 0x30a
[0x30a:0x30f]
---
Predecessors: [0x2db, 0x2f7]
Successors: [0x310, 0x4de]
---
0x30a JUMPDEST
0x30b ISZERO
0x30c PUSH2 0x4de
0x30f JUMPI
---
0x30a: JUMPDEST 
0x30b: V274 = ISZERO S0
0x30c: V275 = 0x4de
0x30f: JUMPI 0x4de V274
---
Entry stack: [V10, S5, {0xdb, 0xde}, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S5, {0xdb, 0xde}, 0x0, 0x0, 0x0]

================================

Block 0x310
[0x310:0x319]
---
Predecessors: [0x30a]
Successors: [0x31a]
---
0x310 PUSH1 0x3
0x312 SLOAD
0x313 CALLVALUE
0x314 DUP2
0x315 ISZERO
0x316 PUSH2 0x0
0x319 JUMPI
---
0x310: V276 = 0x3
0x312: V277 = S[0x3]
0x313: V278 = CALLVALUE
0x315: V279 = ISZERO V277
0x316: V280 = 0x0
0x319: THROWI V279
---
Entry stack: [V10, S4, {0xdb, 0xde}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V277, V278]
Exit stack: [V10, S4, {0xdb, 0xde}, 0x0, 0x0, 0x0, V277, V278]

================================

Block 0x31a
[0x31a:0x382]
---
Predecessors: [0x310]
Successors: [0x383]
---
0x31a DIV
0x31b SWAP3
0x31c POP
0x31d PUSH1 0x4
0x31f SLOAD
0x320 PUSH1 0x1
0x322 PUSH1 0x0
0x324 SWAP1
0x325 SLOAD
0x326 SWAP1
0x327 PUSH2 0x100
0x32a EXP
0x32b SWAP1
0x32c DIV
0x32d PUSH1 0x1
0x32f PUSH1 0xa0
0x331 PUSH1 0x2
0x333 EXP
0x334 SUB
0x335 AND
0x336 PUSH1 0x1
0x338 PUSH1 0xa0
0x33a PUSH1 0x2
0x33c EXP
0x33d SUB
0x33e AND
0x33f PUSH4 0x70a08231
0x344 ADDRESS
0x345 PUSH1 0x0
0x347 PUSH1 0x40
0x349 MLOAD
0x34a PUSH1 0x20
0x34c ADD
0x34d MSTORE
0x34e PUSH1 0x40
0x350 MLOAD
0x351 DUP3
0x352 PUSH1 0xe0
0x354 PUSH1 0x2
0x356 EXP
0x357 MUL
0x358 DUP2
0x359 MSTORE
0x35a PUSH1 0x4
0x35c ADD
0x35d DUP1
0x35e DUP3
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 AND
0x368 DUP2
0x369 MSTORE
0x36a PUSH1 0x20
0x36c ADD
0x36d SWAP2
0x36e POP
0x36f POP
0x370 PUSH1 0x20
0x372 PUSH1 0x40
0x374 MLOAD
0x375 DUP1
0x376 DUP4
0x377 SUB
0x378 DUP2
0x379 PUSH1 0x0
0x37b DUP8
0x37c DUP1
0x37d EXTCODESIZE
0x37e ISZERO
0x37f PUSH2 0x0
0x382 JUMPI
---
0x31a: V281 = DIV V278 V277
0x31d: V282 = 0x4
0x31f: V283 = S[0x4]
0x320: V284 = 0x1
0x322: V285 = 0x0
0x325: V286 = S[0x1]
0x327: V287 = 0x100
0x32a: V288 = EXP 0x100 0x0
0x32c: V289 = DIV V286 0x1
0x32d: V290 = 0x1
0x32f: V291 = 0xa0
0x331: V292 = 0x2
0x333: V293 = EXP 0x2 0xa0
0x334: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x335: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x336: V296 = 0x1
0x338: V297 = 0xa0
0x33a: V298 = 0x2
0x33c: V299 = EXP 0x2 0xa0
0x33d: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33e: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x33f: V302 = 0x70a08231
0x344: V303 = ADDRESS
0x345: V304 = 0x0
0x347: V305 = 0x40
0x349: V306 = M[0x40]
0x34a: V307 = 0x20
0x34c: V308 = ADD 0x20 V306
0x34d: M[V308] = 0x0
0x34e: V309 = 0x40
0x350: V310 = M[0x40]
0x352: V311 = 0xe0
0x354: V312 = 0x2
0x356: V313 = EXP 0x2 0xe0
0x357: V314 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x359: M[V310] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x35a: V315 = 0x4
0x35c: V316 = ADD 0x4 V310
0x35f: V317 = 0x1
0x361: V318 = 0xa0
0x363: V319 = 0x2
0x365: V320 = EXP 0x2 0xa0
0x366: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x367: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x369: M[V316] = V322
0x36a: V323 = 0x20
0x36c: V324 = ADD 0x20 V316
0x370: V325 = 0x20
0x372: V326 = 0x40
0x374: V327 = M[0x40]
0x377: V328 = SUB V324 V327
0x379: V329 = 0x0
0x37d: V330 = EXTCODESIZE V301
0x37e: V331 = ISZERO V330
0x37f: V332 = 0x0
0x382: THROWI V331
---
Entry stack: [V10, S6, {0xdb, 0xde}, 0x0, 0x0, 0x0, V277, V278]
Stack pops: 5
Stack additions: [V281, S3, S2, V283, V301, 0x70a08231, V324, 0x20, V327, V328, V327, 0x0, V301]
Exit stack: [V10, S6, {0xdb, 0xde}, V281, 0x0, 0x0, V283, V301, 0x70a08231, V324, 0x20, V327, V328, V327, 0x0, V301]

================================

Block 0x383
[0x383:0x38c]
---
Predecessors: [0x31a]
Successors: [0x38d]
---
0x383 PUSH1 0x32
0x385 GAS
0x386 SUB
0x387 CALL
0x388 ISZERO
0x389 PUSH2 0x0
0x38c JUMPI
---
0x383: V333 = 0x32
0x385: V334 = GAS
0x386: V335 = SUB V334 0x32
0x387: V336 = CALL V335 V301 0x0 V327 V328 V327 0x20
0x388: V337 = ISZERO V336
0x389: V338 = 0x0
0x38c: THROWI V337
---
Entry stack: [V10, S14, {0xdb, 0xde}, V281, 0x0, 0x0, V283, V301, 0x70a08231, V324, 0x20, V327, V328, V327, 0x0, V301]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S14, {0xdb, 0xde}, V281, 0x0, 0x0, V283, V301, 0x70a08231, V324]

================================

Block 0x38d
[0x38d:0x39a]
---
Predecessors: [0x383]
Successors: [0x39b]
---
0x38d POP
0x38e POP
0x38f PUSH1 0x40
0x391 MLOAD
0x392 MLOAD
0x393 SWAP1
0x394 POP
0x395 DUP2
0x396 ISZERO
0x397 PUSH2 0x0
0x39a JUMPI
---
0x38f: V339 = 0x40
0x391: V340 = M[0x40]
0x392: V341 = M[V340]
0x396: V342 = ISZERO V283
0x397: V343 = 0x0
0x39a: THROWI V342
---
Entry stack: [V10, S8, {0xdb, 0xde}, V281, 0x0, 0x0, V283, V301, 0x70a08231, V324]
Stack pops: 4
Stack additions: [S3, V341]
Exit stack: [V10, S8, {0xdb, 0xde}, V281, 0x0, 0x0, V283, V341]

================================

Block 0x39b
[0x39b:0x3ad]
---
Predecessors: [0x38d]
Successors: [0x3ae, 0x3ba]
---
0x39b DIV
0x39c SWAP2
0x39d POP
0x39e PUSH1 0x0
0x3a0 SWAP1
0x3a1 POP
0x3a2 PUSH1 0x3
0x3a4 SLOAD
0x3a5 DUP3
0x3a6 MUL
0x3a7 CALLVALUE
0x3a8 GT
0x3a9 ISZERO
0x3aa PUSH2 0x3ba
0x3ad JUMPI
---
0x39b: V344 = DIV V341 V283
0x39e: V345 = 0x0
0x3a2: V346 = 0x3
0x3a4: V347 = S[0x3]
0x3a6: V348 = MUL V344 V347
0x3a7: V349 = CALLVALUE
0x3a8: V350 = GT V349 V348
0x3a9: V351 = ISZERO V350
0x3aa: V352 = 0x3ba
0x3ad: JUMPI 0x3ba V351
---
Entry stack: [V10, S6, {0xdb, 0xde}, V281, 0x0, 0x0, V283, V341]
Stack pops: 4
Stack additions: [V344, 0x0]
Exit stack: [V10, S6, {0xdb, 0xde}, V281, V344, 0x0]

================================

Block 0x3ae
[0x3ae:0x3b9]
---
Predecessors: [0x39b]
Successors: [0x3ba]
---
0x3ae PUSH1 0x3
0x3b0 SLOAD
0x3b1 DUP3
0x3b2 MUL
0x3b3 CALLVALUE
0x3b4 SUB
0x3b5 SWAP1
0x3b6 POP
0x3b7 DUP2
0x3b8 SWAP3
0x3b9 POP
---
0x3ae: V353 = 0x3
0x3b0: V354 = S[0x3]
0x3b2: V355 = MUL V344 V354
0x3b3: V356 = CALLVALUE
0x3b4: V357 = SUB V356 V355
---
Entry stack: [V10, S4, {0xdb, 0xde}, V281, V344, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V357]
Exit stack: [V10, S4, {0xdb, 0xde}, V344, V344, V357]

================================

Block 0x3ba
[0x3ba:0x3c3]
---
Predecessors: [0x39b, 0x3ae]
Successors: [0x3c4, 0x3f3]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x0
0x3bd DUP2
0x3be GT
0x3bf ISZERO
0x3c0 PUSH2 0x3f3
0x3c3 JUMPI
---
0x3ba: JUMPDEST 
0x3bb: V358 = 0x0
0x3be: V359 = GT S0 0x0
0x3bf: V360 = ISZERO V359
0x3c0: V361 = 0x3f3
0x3c3: JUMPI 0x3f3 V360
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]

================================

Block 0x3c4
[0x3c4:0x3ee]
---
Predecessors: [0x3ba]
Successors: [0x3ef, 0x3f3]
---
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 PUSH1 0x1
0x3c9 PUSH1 0xa0
0x3cb PUSH1 0x2
0x3cd EXP
0x3ce SUB
0x3cf CALLER
0x3d0 AND
0x3d1 SWAP1
0x3d2 DUP3
0x3d3 ISZERO
0x3d4 PUSH2 0x8fc
0x3d7 MUL
0x3d8 SWAP1
0x3d9 DUP4
0x3da SWAP1
0x3db PUSH1 0x0
0x3dd DUP2
0x3de DUP2
0x3df DUP2
0x3e0 DUP6
0x3e1 DUP9
0x3e2 DUP9
0x3e3 CALL
0x3e4 SWAP4
0x3e5 POP
0x3e6 POP
0x3e7 POP
0x3e8 POP
0x3e9 ISZERO
0x3ea ISZERO
0x3eb PUSH2 0x3f3
0x3ee JUMPI
---
0x3c4: V362 = 0x40
0x3c6: V363 = M[0x40]
0x3c7: V364 = 0x1
0x3c9: V365 = 0xa0
0x3cb: V366 = 0x2
0x3cd: V367 = EXP 0x2 0xa0
0x3ce: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cf: V369 = CALLER
0x3d0: V370 = AND V369 0xffffffffffffffffffffffffffffffffffffffff
0x3d3: V371 = ISZERO S0
0x3d4: V372 = 0x8fc
0x3d7: V373 = MUL 0x8fc V371
0x3db: V374 = 0x0
0x3e3: V375 = CALL V373 V370 S0 V363 0x0 V363 0x0
0x3e9: V376 = ISZERO V375
0x3ea: V377 = ISZERO V376
0x3eb: V378 = 0x3f3
0x3ee: JUMPI 0x3f3 V377
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]

================================

Block 0x3ef
[0x3ef:0x3f2]
---
Predecessors: [0x3c4]
Successors: []
---
0x3ef PUSH2 0x0
0x3f2 JUMP
---
0x3ef: V379 = 0x0
0x3f2: THROW 
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]

================================

Block 0x3f3
[0x3f3:0x3f3]
---
Predecessors: [0x3ba, 0x3c4]
Successors: [0x3f4]
---
0x3f3 JUMPDEST
---
0x3f3: JUMPDEST 
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]

================================

Block 0x3f4
[0x3f4:0x3fd]
---
Predecessors: [0x3f3]
Successors: [0x3fe, 0x489]
---
0x3f4 JUMPDEST
0x3f5 PUSH1 0x0
0x3f7 DUP4
0x3f8 GT
0x3f9 ISZERO
0x3fa PUSH2 0x489
0x3fd JUMPI
---
0x3f4: JUMPDEST 
0x3f5: V380 = 0x0
0x3f8: V381 = GT S2 0x0
0x3f9: V382 = ISZERO V381
0x3fa: V383 = 0x489
0x3fd: JUMPI 0x489 V382
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]

================================

Block 0x3fe
[0x3fe:0x46c]
---
Predecessors: [0x3f4]
Successors: [0x46d]
---
0x3fe PUSH1 0x1
0x400 PUSH1 0x0
0x402 SWAP1
0x403 SLOAD
0x404 SWAP1
0x405 PUSH2 0x100
0x408 EXP
0x409 SWAP1
0x40a DIV
0x40b PUSH1 0x1
0x40d PUSH1 0xa0
0x40f PUSH1 0x2
0x411 EXP
0x412 SUB
0x413 AND
0x414 PUSH1 0x1
0x416 PUSH1 0xa0
0x418 PUSH1 0x2
0x41a EXP
0x41b SUB
0x41c AND
0x41d PUSH4 0xa9059cbb
0x422 CALLER
0x423 PUSH1 0x4
0x425 SLOAD
0x426 DUP7
0x427 MUL
0x428 PUSH1 0x0
0x42a PUSH1 0x40
0x42c MLOAD
0x42d PUSH1 0x20
0x42f ADD
0x430 MSTORE
0x431 PUSH1 0x40
0x433 MLOAD
0x434 DUP4
0x435 PUSH1 0xe0
0x437 PUSH1 0x2
0x439 EXP
0x43a MUL
0x43b DUP2
0x43c MSTORE
0x43d PUSH1 0x4
0x43f ADD
0x440 DUP1
0x441 DUP4
0x442 PUSH1 0x1
0x444 PUSH1 0xa0
0x446 PUSH1 0x2
0x448 EXP
0x449 SUB
0x44a AND
0x44b DUP2
0x44c MSTORE
0x44d PUSH1 0x20
0x44f ADD
0x450 DUP3
0x451 DUP2
0x452 MSTORE
0x453 PUSH1 0x20
0x455 ADD
0x456 SWAP3
0x457 POP
0x458 POP
0x459 POP
0x45a PUSH1 0x20
0x45c PUSH1 0x40
0x45e MLOAD
0x45f DUP1
0x460 DUP4
0x461 SUB
0x462 DUP2
0x463 PUSH1 0x0
0x465 DUP8
0x466 DUP1
0x467 EXTCODESIZE
0x468 ISZERO
0x469 PUSH2 0x0
0x46c JUMPI
---
0x3fe: V384 = 0x1
0x400: V385 = 0x0
0x403: V386 = S[0x1]
0x405: V387 = 0x100
0x408: V388 = EXP 0x100 0x0
0x40a: V389 = DIV V386 0x1
0x40b: V390 = 0x1
0x40d: V391 = 0xa0
0x40f: V392 = 0x2
0x411: V393 = EXP 0x2 0xa0
0x412: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x413: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x414: V396 = 0x1
0x416: V397 = 0xa0
0x418: V398 = 0x2
0x41a: V399 = EXP 0x2 0xa0
0x41b: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41c: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x41d: V402 = 0xa9059cbb
0x422: V403 = CALLER
0x423: V404 = 0x4
0x425: V405 = S[0x4]
0x427: V406 = MUL S2 V405
0x428: V407 = 0x0
0x42a: V408 = 0x40
0x42c: V409 = M[0x40]
0x42d: V410 = 0x20
0x42f: V411 = ADD 0x20 V409
0x430: M[V411] = 0x0
0x431: V412 = 0x40
0x433: V413 = M[0x40]
0x435: V414 = 0xe0
0x437: V415 = 0x2
0x439: V416 = EXP 0x2 0xe0
0x43a: V417 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x43c: M[V413] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x43d: V418 = 0x4
0x43f: V419 = ADD 0x4 V413
0x442: V420 = 0x1
0x444: V421 = 0xa0
0x446: V422 = 0x2
0x448: V423 = EXP 0x2 0xa0
0x449: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44a: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x44c: M[V419] = V425
0x44d: V426 = 0x20
0x44f: V427 = ADD 0x20 V419
0x452: M[V427] = V406
0x453: V428 = 0x20
0x455: V429 = ADD 0x20 V427
0x45a: V430 = 0x20
0x45c: V431 = 0x40
0x45e: V432 = M[0x40]
0x461: V433 = SUB V429 V432
0x463: V434 = 0x0
0x467: V435 = EXTCODESIZE V401
0x468: V436 = ISZERO V435
0x469: V437 = 0x0
0x46c: THROWI V436
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V401, 0xa9059cbb, V429, 0x20, V432, V433, V432, 0x0, V401]
Exit stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0, V401, 0xa9059cbb, V429, 0x20, V432, V433, V432, 0x0, V401]

================================

Block 0x46d
[0x46d:0x476]
---
Predecessors: [0x3fe]
Successors: [0x477]
---
0x46d PUSH1 0x32
0x46f GAS
0x470 SUB
0x471 CALL
0x472 ISZERO
0x473 PUSH2 0x0
0x476 JUMPI
---
0x46d: V438 = 0x32
0x46f: V439 = GAS
0x470: V440 = SUB V439 0x32
0x471: V441 = CALL V440 V401 0x0 V432 V433 V432 0x20
0x472: V442 = ISZERO V441
0x473: V443 = 0x0
0x476: THROWI V442
---
Entry stack: [V10, S13, {0xdb, 0xde}, S11, V344, S9, V401, 0xa9059cbb, V429, 0x20, V432, V433, V432, 0x0, V401]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S13, {0xdb, 0xde}, S11, V344, S9, V401, 0xa9059cbb, V429]

================================

Block 0x477
[0x477:0x484]
---
Predecessors: [0x46d]
Successors: [0x485, 0x489]
---
0x477 POP
0x478 POP
0x479 PUSH1 0x40
0x47b MLOAD
0x47c MLOAD
0x47d ISZERO
0x47e ISZERO
0x47f SWAP1
0x480 POP
0x481 PUSH2 0x489
0x484 JUMPI
---
0x479: V444 = 0x40
0x47b: V445 = M[0x40]
0x47c: V446 = M[V445]
0x47d: V447 = ISZERO V446
0x47e: V448 = ISZERO V447
0x481: V449 = 0x489
0x484: JUMPI 0x489 V448
---
Entry stack: [V10, S7, {0xdb, 0xde}, S5, V344, S3, V401, 0xa9059cbb, V429]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S7, {0xdb, 0xde}, S5, V344, S3]

================================

Block 0x485
[0x485:0x488]
---
Predecessors: [0x477]
Successors: []
---
0x485 PUSH2 0x0
0x488 JUMP
---
0x485: V450 = 0x0
0x488: THROW 
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]

================================

Block 0x489
[0x489:0x489]
---
Predecessors: [0x3f4, 0x477]
Successors: [0x48a]
---
0x489 JUMPDEST
---
0x489: JUMPDEST 
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]

================================

Block 0x48a
[0x48a:0x4dd]
---
Predecessors: [0x489]
Successors: [0x50d]
---
0x48a JUMPDEST
0x48b PUSH1 0x4
0x48d SLOAD
0x48e PUSH1 0x40
0x490 DUP1
0x491 MLOAD
0x492 CALLVALUE
0x493 DUP2
0x494 MSTORE
0x495 PUSH1 0x20
0x497 DUP2
0x498 ADD
0x499 DUP5
0x49a SWAP1
0x49b MSTORE
0x49c SWAP2
0x49d DUP6
0x49e MUL
0x49f DUP3
0x4a0 DUP3
0x4a1 ADD
0x4a2 MSTORE
0x4a3 MLOAD
0x4a4 PUSH1 0x1
0x4a6 PUSH1 0xa0
0x4a8 PUSH1 0x2
0x4aa EXP
0x4ab SUB
0x4ac CALLER
0x4ad AND
0x4ae SWAP2
0x4af PUSH32 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0x4d0 SWAP2
0x4d1 SWAP1
0x4d2 DUP2
0x4d3 SWAP1
0x4d4 SUB
0x4d5 PUSH1 0x60
0x4d7 ADD
0x4d8 SWAP1
0x4d9 LOG2
0x4da PUSH2 0x50d
0x4dd JUMP
---
0x48a: JUMPDEST 
0x48b: V451 = 0x4
0x48d: V452 = S[0x4]
0x48e: V453 = 0x40
0x491: V454 = M[0x40]
0x492: V455 = CALLVALUE
0x494: M[V454] = V455
0x495: V456 = 0x20
0x498: V457 = ADD V454 0x20
0x49b: M[V457] = S0
0x49e: V458 = MUL S2 V452
0x4a1: V459 = ADD 0x40 V454
0x4a2: M[V459] = V458
0x4a3: V460 = M[0x40]
0x4a4: V461 = 0x1
0x4a6: V462 = 0xa0
0x4a8: V463 = 0x2
0x4aa: V464 = EXP 0x2 0xa0
0x4ab: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ac: V466 = CALLER
0x4ad: V467 = AND V466 0xffffffffffffffffffffffffffffffffffffffff
0x4af: V468 = 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0x4d4: V469 = SUB V454 V460
0x4d5: V470 = 0x60
0x4d7: V471 = ADD 0x60 V469
0x4d9: LOG V460 V471 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217 V467
0x4da: V472 = 0x50d
0x4dd: JUMP 0x50d
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0xdb, 0xde}, S2, V344, S0]

================================

Block 0x4de
[0x4de:0x508]
---
Predecessors: [0x30a]
Successors: [0x509, 0x50d]
---
0x4de JUMPDEST
0x4df PUSH1 0x40
0x4e1 MLOAD
0x4e2 PUSH1 0x1
0x4e4 PUSH1 0xa0
0x4e6 PUSH1 0x2
0x4e8 EXP
0x4e9 SUB
0x4ea CALLER
0x4eb AND
0x4ec SWAP1
0x4ed CALLVALUE
0x4ee DUP1
0x4ef ISZERO
0x4f0 PUSH2 0x8fc
0x4f3 MUL
0x4f4 SWAP2
0x4f5 PUSH1 0x0
0x4f7 DUP2
0x4f8 DUP2
0x4f9 DUP2
0x4fa DUP6
0x4fb DUP9
0x4fc DUP9
0x4fd CALL
0x4fe SWAP4
0x4ff POP
0x500 POP
0x501 POP
0x502 POP
0x503 ISZERO
0x504 ISZERO
0x505 PUSH2 0x50d
0x508 JUMPI
---
0x4de: JUMPDEST 
0x4df: V473 = 0x40
0x4e1: V474 = M[0x40]
0x4e2: V475 = 0x1
0x4e4: V476 = 0xa0
0x4e6: V477 = 0x2
0x4e8: V478 = EXP 0x2 0xa0
0x4e9: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ea: V480 = CALLER
0x4eb: V481 = AND V480 0xffffffffffffffffffffffffffffffffffffffff
0x4ed: V482 = CALLVALUE
0x4ef: V483 = ISZERO V482
0x4f0: V484 = 0x8fc
0x4f3: V485 = MUL 0x8fc V483
0x4f5: V486 = 0x0
0x4fd: V487 = CALL V485 V481 V482 V474 0x0 V474 0x0
0x503: V488 = ISZERO V487
0x504: V489 = ISZERO V488
0x505: V490 = 0x50d
0x508: JUMPI 0x50d V489
---
Entry stack: [V10, S4, {0xdb, 0xde}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xdb, 0xde}, 0x0, 0x0, 0x0]

================================

Block 0x509
[0x509:0x50c]
---
Predecessors: [0x4de]
Successors: []
---
0x509 PUSH2 0x0
0x50c JUMP
---
0x509: V491 = 0x0
0x50c: THROW 
---
Entry stack: [V10, S4, {0xdb, 0xde}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xdb, 0xde}, 0x0, 0x0, 0x0]

================================

Block 0x50d
[0x50d:0x50d]
---
Predecessors: [0x48a, 0x4de, 0xc63]
Successors: [0x50e]
---
0x50d JUMPDEST
---
0x50d: JUMPDEST 
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xdb, 0xde}, S2, S1, S0]

================================

Block 0x50e
[0x50e:0x50e]
---
Predecessors: [0x50d]
Successors: [0x50f]
---
0x50e JUMPDEST
---
0x50e: JUMPDEST 
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xdb, 0xde}, S2, S1, S0]

================================

Block 0x50f
[0x50f:0x513]
---
Predecessors: [0x50e]
Successors: [0xdb, 0xde]
---
0x50f JUMPDEST
0x510 POP
0x511 POP
0x512 POP
0x513 JUMP
---
0x50f: JUMPDEST 
0x513: JUMP {0xdb, 0xde}
---
Entry stack: [V10, S4, {0xdb, 0xde}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S4]

================================

Block 0x514
[0x514:0x52b]
---
Predecessors: [0xe6]
Successors: [0x52c, 0x530]
---
0x514 JUMPDEST
0x515 PUSH1 0x0
0x517 DUP1
0x518 SLOAD
0x519 CALLER
0x51a PUSH1 0x1
0x51c PUSH1 0xa0
0x51e PUSH1 0x2
0x520 EXP
0x521 SUB
0x522 SWAP1
0x523 DUP2
0x524 AND
0x525 SWAP2
0x526 AND
0x527 EQ
0x528 PUSH2 0x530
0x52b JUMPI
---
0x514: JUMPDEST 
0x515: V492 = 0x0
0x518: V493 = S[0x0]
0x519: V494 = CALLER
0x51a: V495 = 0x1
0x51c: V496 = 0xa0
0x51e: V497 = 0x2
0x520: V498 = EXP 0x2 0xa0
0x521: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x524: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x526: V501 = AND V493 0xffffffffffffffffffffffffffffffffffffffff
0x527: V502 = EQ V501 V500
0x528: V503 = 0x530
0x52b: JUMPI 0x530 V502
---
Entry stack: [V10, 0xf0, V69]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xf0, V69, 0x0]

================================

Block 0x52c
[0x52c:0x52f]
---
Predecessors: [0x514]
Successors: []
---
0x52c PUSH2 0x0
0x52f JUMP
---
0x52c: V504 = 0x0
0x52f: THROW 
---
Entry stack: [V10, 0xf0, V69, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V69, 0x0]

================================

Block 0x530
[0x530:0x542]
---
Predecessors: [0x514]
Successors: [0x543, 0x59f]
---
0x530 JUMPDEST
0x531 PUSH1 0x1
0x533 PUSH1 0xa0
0x535 PUSH1 0x2
0x537 EXP
0x538 SUB
0x539 ADDRESS
0x53a AND
0x53b BALANCE
0x53c DUP3
0x53d SWAP1
0x53e LT
0x53f PUSH2 0x59f
0x542 JUMPI
---
0x530: JUMPDEST 
0x531: V505 = 0x1
0x533: V506 = 0xa0
0x535: V507 = 0x2
0x537: V508 = EXP 0x2 0xa0
0x538: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x539: V510 = ADDRESS
0x53a: V511 = AND V510 0xffffffffffffffffffffffffffffffffffffffff
0x53b: V512 = BALANCE V511
0x53e: V513 = LT V512 V69
0x53f: V514 = 0x59f
0x542: JUMPI 0x59f V513
---
Entry stack: [V10, 0xf0, V69, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xf0, V69, 0x0]

================================

Block 0x543
[0x543:0x59e]
---
Predecessors: [0x530]
Successors: [0x59f]
---
0x543 PUSH1 0x40
0x545 DUP1
0x546 MLOAD
0x547 DUP4
0x548 DUP2
0x549 MSTORE
0x54a SWAP1
0x54b MLOAD
0x54c PUSH32 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x56d SWAP2
0x56e DUP2
0x56f SWAP1
0x570 SUB
0x571 PUSH1 0x20
0x573 ADD
0x574 SWAP1
0x575 LOG1
0x576 PUSH1 0x0
0x578 DUP1
0x579 SLOAD
0x57a PUSH1 0x40
0x57c MLOAD
0x57d PUSH1 0x1
0x57f PUSH1 0xa0
0x581 PUSH1 0x2
0x583 EXP
0x584 SUB
0x585 SWAP1
0x586 SWAP2
0x587 AND
0x588 SWAP2
0x589 DUP5
0x58a ISZERO
0x58b PUSH2 0x8fc
0x58e MUL
0x58f SWAP2
0x590 DUP6
0x591 SWAP2
0x592 DUP2
0x593 DUP2
0x594 DUP2
0x595 DUP6
0x596 DUP9
0x597 DUP9
0x598 CALL
0x599 SWAP5
0x59a POP
0x59b POP
0x59c POP
0x59d POP
0x59e POP
---
0x543: V515 = 0x40
0x546: V516 = M[0x40]
0x549: M[V516] = V69
0x54b: V517 = M[0x40]
0x54c: V518 = 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x570: V519 = SUB V516 V517
0x571: V520 = 0x20
0x573: V521 = ADD 0x20 V519
0x575: LOG V517 V521 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x576: V522 = 0x0
0x579: V523 = S[0x0]
0x57a: V524 = 0x40
0x57c: V525 = M[0x40]
0x57d: V526 = 0x1
0x57f: V527 = 0xa0
0x581: V528 = 0x2
0x583: V529 = EXP 0x2 0xa0
0x584: V530 = SUB 0x10000000000000000000000000000000000000000 0x1
0x587: V531 = AND V523 0xffffffffffffffffffffffffffffffffffffffff
0x58a: V532 = ISZERO V69
0x58b: V533 = 0x8fc
0x58e: V534 = MUL 0x8fc V532
0x598: V535 = CALL V534 V531 V69 V525 0x0 V525 0x0
---
Entry stack: [V10, 0xf0, V69, 0x0]
Stack pops: 2
Stack additions: [S1, V535]
Exit stack: [V10, 0xf0, V69, V535]

================================

Block 0x59f
[0x59f:0x59f]
---
Predecessors: [0x530, 0x543]
Successors: [0x5a0]
---
0x59f JUMPDEST
---
0x59f: JUMPDEST 
---
Entry stack: [V10, 0xf0, V69, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V69, S0]

================================

Block 0x5a0
[0x5a0:0x5a0]
---
Predecessors: [0x59f]
Successors: [0x5a1]
---
0x5a0 JUMPDEST
---
0x5a0: JUMPDEST 
---
Entry stack: [V10, 0xf0, V69, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V69, S0]

================================

Block 0x5a1
[0x5a1:0x5a5]
---
Predecessors: [0x5a0]
Successors: [0xf0]
---
0x5a1 JUMPDEST
0x5a2 SWAP2
0x5a3 SWAP1
0x5a4 POP
0x5a5 JUMP
---
0x5a1: JUMPDEST 
0x5a5: JUMP 0xf0
---
Entry stack: [V10, 0xf0, V69, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x5a6
[0x5a6:0x5b4]
---
Predecessors: [0x10a]
Successors: [0x111]
---
0x5a6 JUMPDEST
0x5a7 PUSH1 0x1
0x5a9 SLOAD
0x5aa PUSH1 0x1
0x5ac PUSH1 0xa0
0x5ae PUSH1 0x2
0x5b0 EXP
0x5b1 SUB
0x5b2 AND
0x5b3 DUP2
0x5b4 JUMP
---
0x5a6: JUMPDEST 
0x5a7: V536 = 0x1
0x5a9: V537 = S[0x1]
0x5aa: V538 = 0x1
0x5ac: V539 = 0xa0
0x5ae: V540 = 0x2
0x5b0: V541 = EXP 0x2 0xa0
0x5b1: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b2: V543 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x5b4: JUMP 0x111
---
Entry stack: [V10, 0x111]
Stack pops: 1
Stack additions: [S0, V543]
Exit stack: [V10, 0x111, V543]

================================

Block 0x5b5
[0x5b5:0x5ba]
---
Predecessors: [0x133]
Successors: [0x13a]
---
0x5b5 JUMPDEST
0x5b6 PUSH1 0x3
0x5b8 SLOAD
0x5b9 DUP2
0x5ba JUMP
---
0x5b5: JUMPDEST 
0x5b6: V544 = 0x3
0x5b8: V545 = S[0x3]
0x5ba: JUMP 0x13a
---
Entry stack: [V10, 0x13a]
Stack pops: 1
Stack additions: [S0, V545]
Exit stack: [V10, 0x13a, V545]

================================

Block 0x5bb
[0x5bb:0x5c8]
---
Predecessors: [0x152]
Successors: [0xf0]
---
0x5bb JUMPDEST
0x5bc PUSH1 0x5
0x5be SLOAD
0x5bf PUSH2 0x100
0x5c2 SWAP1
0x5c3 DIV
0x5c4 PUSH1 0xff
0x5c6 AND
0x5c7 DUP2
0x5c8 JUMP
---
0x5bb: JUMPDEST 
0x5bc: V546 = 0x5
0x5be: V547 = S[0x5]
0x5bf: V548 = 0x100
0x5c3: V549 = DIV V547 0x100
0x5c4: V550 = 0xff
0x5c6: V551 = AND 0xff V549
0x5c8: JUMP 0xf0
---
Entry stack: [V10, 0xf0]
Stack pops: 1
Stack additions: [S0, V551]
Exit stack: [V10, 0xf0, V551]

================================

Block 0x5c9
[0x5c9:0x5e0]
---
Predecessors: [0x173]
Successors: [0x5e1, 0x5e5]
---
0x5c9 JUMPDEST
0x5ca PUSH1 0x0
0x5cc DUP1
0x5cd SLOAD
0x5ce CALLER
0x5cf PUSH1 0x1
0x5d1 PUSH1 0xa0
0x5d3 PUSH1 0x2
0x5d5 EXP
0x5d6 SUB
0x5d7 SWAP1
0x5d8 DUP2
0x5d9 AND
0x5da SWAP2
0x5db AND
0x5dc EQ
0x5dd PUSH2 0x5e5
0x5e0 JUMPI
---
0x5c9: JUMPDEST 
0x5ca: V552 = 0x0
0x5cd: V553 = S[0x0]
0x5ce: V554 = CALLER
0x5cf: V555 = 0x1
0x5d1: V556 = 0xa0
0x5d3: V557 = 0x2
0x5d5: V558 = EXP 0x2 0xa0
0x5d6: V559 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d9: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0x5db: V561 = AND V553 0xffffffffffffffffffffffffffffffffffffffff
0x5dc: V562 = EQ V561 V560
0x5dd: V563 = 0x5e5
0x5e0: JUMPI 0x5e5 V562
---
Entry stack: [V10, 0xf0, V121, V123]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xf0, V121, V123, 0x0]

================================

Block 0x5e1
[0x5e1:0x5e4]
---
Predecessors: [0x5c9]
Successors: []
---
0x5e1 PUSH2 0x0
0x5e4 JUMP
---
0x5e1: V564 = 0x0
0x5e4: THROW 
---
Entry stack: [V10, 0xf0, V121, V123, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V121, V123, 0x0]

================================

Block 0x5e5
[0x5e5:0x622]
---
Predecessors: [0x5c9]
Successors: [0x623]
---
0x5e5 JUMPDEST
0x5e6 DUP3
0x5e7 PUSH1 0x1
0x5e9 PUSH1 0xa0
0x5eb PUSH1 0x2
0x5ed EXP
0x5ee SUB
0x5ef AND
0x5f0 PUSH4 0x8da5cb5b
0x5f5 PUSH1 0x0
0x5f7 PUSH1 0x40
0x5f9 MLOAD
0x5fa PUSH1 0x20
0x5fc ADD
0x5fd MSTORE
0x5fe PUSH1 0x40
0x600 MLOAD
0x601 DUP2
0x602 PUSH1 0xe0
0x604 PUSH1 0x2
0x606 EXP
0x607 MUL
0x608 DUP2
0x609 MSTORE
0x60a PUSH1 0x4
0x60c ADD
0x60d DUP1
0x60e SWAP1
0x60f POP
0x610 PUSH1 0x20
0x612 PUSH1 0x40
0x614 MLOAD
0x615 DUP1
0x616 DUP4
0x617 SUB
0x618 DUP2
0x619 PUSH1 0x0
0x61b DUP8
0x61c DUP1
0x61d EXTCODESIZE
0x61e ISZERO
0x61f PUSH2 0x0
0x622 JUMPI
---
0x5e5: JUMPDEST 
0x5e7: V565 = 0x1
0x5e9: V566 = 0xa0
0x5eb: V567 = 0x2
0x5ed: V568 = EXP 0x2 0xa0
0x5ee: V569 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ef: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x5f0: V571 = 0x8da5cb5b
0x5f5: V572 = 0x0
0x5f7: V573 = 0x40
0x5f9: V574 = M[0x40]
0x5fa: V575 = 0x20
0x5fc: V576 = ADD 0x20 V574
0x5fd: M[V576] = 0x0
0x5fe: V577 = 0x40
0x600: V578 = M[0x40]
0x602: V579 = 0xe0
0x604: V580 = 0x2
0x606: V581 = EXP 0x2 0xe0
0x607: V582 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x609: M[V578] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x60a: V583 = 0x4
0x60c: V584 = ADD 0x4 V578
0x610: V585 = 0x20
0x612: V586 = 0x40
0x614: V587 = M[0x40]
0x617: V588 = SUB V584 V587
0x619: V589 = 0x0
0x61d: V590 = EXTCODESIZE V570
0x61e: V591 = ISZERO V590
0x61f: V592 = 0x0
0x622: THROWI V591
---
Entry stack: [V10, 0xf0, V121, V123, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V570, 0x8da5cb5b, V584, 0x20, V587, V588, V587, 0x0, V570]
Exit stack: [V10, 0xf0, V121, V123, 0x0, V570, 0x8da5cb5b, V584, 0x20, V587, V588, V587, 0x0, V570]

================================

Block 0x623
[0x623:0x62c]
---
Predecessors: [0x5e5]
Successors: [0x62d]
---
0x623 PUSH1 0x32
0x625 GAS
0x626 SUB
0x627 CALL
0x628 ISZERO
0x629 PUSH2 0x0
0x62c JUMPI
---
0x623: V593 = 0x32
0x625: V594 = GAS
0x626: V595 = SUB V594 0x32
0x627: V596 = CALL V595 V570 0x0 V587 V588 V587 0x20
0x628: V597 = ISZERO V596
0x629: V598 = 0x0
0x62c: THROWI V597
---
Entry stack: [V10, 0xf0, V121, V123, 0x0, V570, 0x8da5cb5b, V584, 0x20, V587, V588, V587, 0x0, V570]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xf0, V121, V123, 0x0, V570, 0x8da5cb5b, V584]

================================

Block 0x62d
[0x62d:0x64b]
---
Predecessors: [0x623]
Successors: [0x64c, 0x6ae]
---
0x62d POP
0x62e POP
0x62f PUSH1 0x40
0x631 MLOAD
0x632 MLOAD
0x633 PUSH1 0x0
0x635 SLOAD
0x636 PUSH1 0x1
0x638 PUSH1 0xa0
0x63a PUSH1 0x2
0x63c EXP
0x63d SUB
0x63e SWAP1
0x63f DUP2
0x640 AND
0x641 SWAP2
0x642 AND
0x643 EQ
0x644 ISZERO
0x645 SWAP1
0x646 POP
0x647 DUP1
0x648 PUSH2 0x6ae
0x64b JUMPI
---
0x62f: V599 = 0x40
0x631: V600 = M[0x40]
0x632: V601 = M[V600]
0x633: V602 = 0x0
0x635: V603 = S[0x0]
0x636: V604 = 0x1
0x638: V605 = 0xa0
0x63a: V606 = 0x2
0x63c: V607 = EXP 0x2 0xa0
0x63d: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x640: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x642: V610 = AND V601 0xffffffffffffffffffffffffffffffffffffffff
0x643: V611 = EQ V610 V609
0x644: V612 = ISZERO V611
0x648: V613 = 0x6ae
0x64b: JUMPI 0x6ae V612
---
Entry stack: [V10, 0xf0, V121, V123, 0x0, V570, 0x8da5cb5b, V584]
Stack pops: 3
Stack additions: [V612]
Exit stack: [V10, 0xf0, V121, V123, 0x0, V612]

================================

Block 0x64c
[0x64c:0x689]
---
Predecessors: [0x62d]
Successors: [0x68a]
---
0x64c POP
0x64d DUP3
0x64e PUSH1 0x1
0x650 PUSH1 0xa0
0x652 PUSH1 0x2
0x654 EXP
0x655 SUB
0x656 AND
0x657 PUSH4 0x38d52e0f
0x65c PUSH1 0x0
0x65e PUSH1 0x40
0x660 MLOAD
0x661 PUSH1 0x20
0x663 ADD
0x664 MSTORE
0x665 PUSH1 0x40
0x667 MLOAD
0x668 DUP2
0x669 PUSH1 0xe0
0x66b PUSH1 0x2
0x66d EXP
0x66e MUL
0x66f DUP2
0x670 MSTORE
0x671 PUSH1 0x4
0x673 ADD
0x674 DUP1
0x675 SWAP1
0x676 POP
0x677 PUSH1 0x20
0x679 PUSH1 0x40
0x67b MLOAD
0x67c DUP1
0x67d DUP4
0x67e SUB
0x67f DUP2
0x680 PUSH1 0x0
0x682 DUP8
0x683 DUP1
0x684 EXTCODESIZE
0x685 ISZERO
0x686 PUSH2 0x0
0x689 JUMPI
---
0x64e: V614 = 0x1
0x650: V615 = 0xa0
0x652: V616 = 0x2
0x654: V617 = EXP 0x2 0xa0
0x655: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x656: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x657: V620 = 0x38d52e0f
0x65c: V621 = 0x0
0x65e: V622 = 0x40
0x660: V623 = M[0x40]
0x661: V624 = 0x20
0x663: V625 = ADD 0x20 V623
0x664: M[V625] = 0x0
0x665: V626 = 0x40
0x667: V627 = M[0x40]
0x669: V628 = 0xe0
0x66b: V629 = 0x2
0x66d: V630 = EXP 0x2 0xe0
0x66e: V631 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0x670: M[V627] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0x671: V632 = 0x4
0x673: V633 = ADD 0x4 V627
0x677: V634 = 0x20
0x679: V635 = 0x40
0x67b: V636 = M[0x40]
0x67e: V637 = SUB V633 V636
0x680: V638 = 0x0
0x684: V639 = EXTCODESIZE V619
0x685: V640 = ISZERO V639
0x686: V641 = 0x0
0x689: THROWI V640
---
Entry stack: [V10, 0xf0, V121, V123, 0x0, V612]
Stack pops: 4
Stack additions: [S3, S2, S1, V619, 0x38d52e0f, V633, 0x20, V636, V637, V636, 0x0, V619]
Exit stack: [V10, 0xf0, V121, V123, 0x0, V619, 0x38d52e0f, V633, 0x20, V636, V637, V636, 0x0, V619]

================================

Block 0x68a
[0x68a:0x693]
---
Predecessors: [0x64c]
Successors: [0x694]
---
0x68a PUSH1 0x32
0x68c GAS
0x68d SUB
0x68e CALL
0x68f ISZERO
0x690 PUSH2 0x0
0x693 JUMPI
---
0x68a: V642 = 0x32
0x68c: V643 = GAS
0x68d: V644 = SUB V643 0x32
0x68e: V645 = CALL V644 V619 0x0 V636 V637 V636 0x20
0x68f: V646 = ISZERO V645
0x690: V647 = 0x0
0x693: THROWI V646
---
Entry stack: [V10, 0xf0, V121, V123, 0x0, V619, 0x38d52e0f, V633, 0x20, V636, V637, V636, 0x0, V619]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xf0, V121, V123, 0x0, V619, 0x38d52e0f, V633]

================================

Block 0x694
[0x694:0x6ad]
---
Predecessors: [0x68a]
Successors: [0x6ae]
---
0x694 POP
0x695 POP
0x696 PUSH1 0x40
0x698 MLOAD
0x699 MLOAD
0x69a PUSH1 0x1
0x69c SLOAD
0x69d PUSH1 0x1
0x69f PUSH1 0xa0
0x6a1 PUSH1 0x2
0x6a3 EXP
0x6a4 SUB
0x6a5 SWAP1
0x6a6 DUP2
0x6a7 AND
0x6a8 SWAP2
0x6a9 AND
0x6aa EQ
0x6ab ISZERO
0x6ac SWAP1
0x6ad POP
---
0x696: V648 = 0x40
0x698: V649 = M[0x40]
0x699: V650 = M[V649]
0x69a: V651 = 0x1
0x69c: V652 = S[0x1]
0x69d: V653 = 0x1
0x69f: V654 = 0xa0
0x6a1: V655 = 0x2
0x6a3: V656 = EXP 0x2 0xa0
0x6a4: V657 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a7: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff V652
0x6a9: V659 = AND V650 0xffffffffffffffffffffffffffffffffffffffff
0x6aa: V660 = EQ V659 V658
0x6ab: V661 = ISZERO V660
---
Entry stack: [V10, 0xf0, V121, V123, 0x0, V619, 0x38d52e0f, V633]
Stack pops: 3
Stack additions: [V661]
Exit stack: [V10, 0xf0, V121, V123, 0x0, V661]

================================

Block 0x6ae
[0x6ae:0x6b3]
---
Predecessors: [0x62d, 0x694]
Successors: [0x6b4, 0x6b8]
---
0x6ae JUMPDEST
0x6af ISZERO
0x6b0 PUSH2 0x6b8
0x6b3 JUMPI
---
0x6ae: JUMPDEST 
0x6af: V662 = ISZERO S0
0x6b0: V663 = 0x6b8
0x6b3: JUMPI 0x6b8 V662
---
Entry stack: [V10, 0xf0, V121, V123, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf0, V121, V123, 0x0]

================================

Block 0x6b4
[0x6b4:0x6b7]
---
Predecessors: [0x6ae]
Successors: []
---
0x6b4 PUSH2 0x0
0x6b7 JUMP
---
0x6b4: V664 = 0x0
0x6b7: THROW 
---
Entry stack: [V10, 0xf0, V121, V123, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V121, V123, 0x0]

================================

Block 0x6b8
[0x6b8:0x767]
---
Predecessors: [0x6ae]
Successors: [0x768]
---
0x6b8 JUMPDEST
0x6b9 PUSH1 0x40
0x6bb DUP1
0x6bc MLOAD
0x6bd PUSH1 0x1
0x6bf PUSH1 0xa0
0x6c1 PUSH1 0x2
0x6c3 EXP
0x6c4 SUB
0x6c5 DUP6
0x6c6 AND
0x6c7 DUP2
0x6c8 MSTORE
0x6c9 PUSH1 0x20
0x6cb DUP2
0x6cc ADD
0x6cd DUP5
0x6ce SWAP1
0x6cf MSTORE
0x6d0 DUP2
0x6d1 MLOAD
0x6d2 PUSH32 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x6f3 SWAP3
0x6f4 SWAP2
0x6f5 DUP2
0x6f6 SWAP1
0x6f7 SUB
0x6f8 SWAP1
0x6f9 SWAP2
0x6fa ADD
0x6fb SWAP1
0x6fc LOG1
0x6fd PUSH1 0x1
0x6ff PUSH1 0x0
0x701 SWAP1
0x702 SLOAD
0x703 SWAP1
0x704 PUSH2 0x100
0x707 EXP
0x708 SWAP1
0x709 DIV
0x70a PUSH1 0x1
0x70c PUSH1 0xa0
0x70e PUSH1 0x2
0x710 EXP
0x711 SUB
0x712 AND
0x713 PUSH1 0x1
0x715 PUSH1 0xa0
0x717 PUSH1 0x2
0x719 EXP
0x71a SUB
0x71b AND
0x71c PUSH4 0xa9059cbb
0x721 DUP5
0x722 DUP5
0x723 PUSH1 0x0
0x725 PUSH1 0x40
0x727 MLOAD
0x728 PUSH1 0x20
0x72a ADD
0x72b MSTORE
0x72c PUSH1 0x40
0x72e MLOAD
0x72f DUP4
0x730 PUSH1 0xe0
0x732 PUSH1 0x2
0x734 EXP
0x735 MUL
0x736 DUP2
0x737 MSTORE
0x738 PUSH1 0x4
0x73a ADD
0x73b DUP1
0x73c DUP4
0x73d PUSH1 0x1
0x73f PUSH1 0xa0
0x741 PUSH1 0x2
0x743 EXP
0x744 SUB
0x745 AND
0x746 DUP2
0x747 MSTORE
0x748 PUSH1 0x20
0x74a ADD
0x74b DUP3
0x74c DUP2
0x74d MSTORE
0x74e PUSH1 0x20
0x750 ADD
0x751 SWAP3
0x752 POP
0x753 POP
0x754 POP
0x755 PUSH1 0x20
0x757 PUSH1 0x40
0x759 MLOAD
0x75a DUP1
0x75b DUP4
0x75c SUB
0x75d DUP2
0x75e PUSH1 0x0
0x760 DUP8
0x761 DUP1
0x762 EXTCODESIZE
0x763 ISZERO
0x764 PUSH2 0x0
0x767 JUMPI
---
0x6b8: JUMPDEST 
0x6b9: V665 = 0x40
0x6bc: V666 = M[0x40]
0x6bd: V667 = 0x1
0x6bf: V668 = 0xa0
0x6c1: V669 = 0x2
0x6c3: V670 = EXP 0x2 0xa0
0x6c4: V671 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c6: V672 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x6c8: M[V666] = V672
0x6c9: V673 = 0x20
0x6cc: V674 = ADD V666 0x20
0x6cf: M[V674] = V123
0x6d1: V675 = M[0x40]
0x6d2: V676 = 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x6f7: V677 = SUB V666 V675
0x6fa: V678 = ADD 0x40 V677
0x6fc: LOG V675 V678 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x6fd: V679 = 0x1
0x6ff: V680 = 0x0
0x702: V681 = S[0x1]
0x704: V682 = 0x100
0x707: V683 = EXP 0x100 0x0
0x709: V684 = DIV V681 0x1
0x70a: V685 = 0x1
0x70c: V686 = 0xa0
0x70e: V687 = 0x2
0x710: V688 = EXP 0x2 0xa0
0x711: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x712: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V684
0x713: V691 = 0x1
0x715: V692 = 0xa0
0x717: V693 = 0x2
0x719: V694 = EXP 0x2 0xa0
0x71a: V695 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71b: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0x71c: V697 = 0xa9059cbb
0x723: V698 = 0x0
0x725: V699 = 0x40
0x727: V700 = M[0x40]
0x728: V701 = 0x20
0x72a: V702 = ADD 0x20 V700
0x72b: M[V702] = 0x0
0x72c: V703 = 0x40
0x72e: V704 = M[0x40]
0x730: V705 = 0xe0
0x732: V706 = 0x2
0x734: V707 = EXP 0x2 0xe0
0x735: V708 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x737: M[V704] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x738: V709 = 0x4
0x73a: V710 = ADD 0x4 V704
0x73d: V711 = 0x1
0x73f: V712 = 0xa0
0x741: V713 = 0x2
0x743: V714 = EXP 0x2 0xa0
0x744: V715 = SUB 0x10000000000000000000000000000000000000000 0x1
0x745: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x747: M[V710] = V716
0x748: V717 = 0x20
0x74a: V718 = ADD 0x20 V710
0x74d: M[V718] = V123
0x74e: V719 = 0x20
0x750: V720 = ADD 0x20 V718
0x755: V721 = 0x20
0x757: V722 = 0x40
0x759: V723 = M[0x40]
0x75c: V724 = SUB V720 V723
0x75e: V725 = 0x0
0x762: V726 = EXTCODESIZE V696
0x763: V727 = ISZERO V726
0x764: V728 = 0x0
0x767: THROWI V727
---
Entry stack: [V10, 0xf0, V121, V123, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V696, 0xa9059cbb, V720, 0x20, V723, V724, V723, 0x0, V696]
Exit stack: [V10, 0xf0, V121, V123, 0x0, V696, 0xa9059cbb, V720, 0x20, V723, V724, V723, 0x0, V696]

================================

Block 0x768
[0x768:0x771]
---
Predecessors: [0x6b8]
Successors: [0x772]
---
0x768 PUSH1 0x32
0x76a GAS
0x76b SUB
0x76c CALL
0x76d ISZERO
0x76e PUSH2 0x0
0x771 JUMPI
---
0x768: V729 = 0x32
0x76a: V730 = GAS
0x76b: V731 = SUB V730 0x32
0x76c: V732 = CALL V731 V696 0x0 V723 V724 V723 0x20
0x76d: V733 = ISZERO V732
0x76e: V734 = 0x0
0x771: THROWI V733
---
Entry stack: [V10, 0xf0, V121, V123, 0x0, V696, 0xa9059cbb, V720, 0x20, V723, V724, V723, 0x0, V696]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xf0, V121, V123, 0x0, V696, 0xa9059cbb, V720]

================================

Block 0x772
[0x772:0x77a]
---
Predecessors: [0x768]
Successors: [0x77b]
---
0x772 POP
0x773 POP
0x774 PUSH1 0x40
0x776 MLOAD
0x777 MLOAD
0x778 SWAP2
0x779 POP
0x77a POP
---
0x774: V735 = 0x40
0x776: V736 = M[0x40]
0x777: V737 = M[V736]
---
Entry stack: [V10, 0xf0, V121, V123, 0x0, V696, 0xa9059cbb, V720]
Stack pops: 4
Stack additions: [V737]
Exit stack: [V10, 0xf0, V121, V123, V737]

================================

Block 0x77b
[0x77b:0x77b]
---
Predecessors: [0x772, 0xa02]
Successors: [0x77c]
---
0x77b JUMPDEST
---
0x77b: JUMPDEST 
---
Entry stack: [V10, 0xf0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, S2, S1, S0]

================================

Block 0x77c
[0x77c:0x781]
---
Predecessors: [0x77b]
Successors: [0xf0]
---
0x77c JUMPDEST
0x77d SWAP3
0x77e SWAP2
0x77f POP
0x780 POP
0x781 JUMP
---
0x77c: JUMPDEST 
0x781: JUMP 0xf0
---
Entry stack: [V10, 0xf0, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x782
[0x782:0x787]
---
Predecessors: [0x19a]
Successors: [0x13a]
---
0x782 JUMPDEST
0x783 PUSH1 0x2
0x785 SLOAD
0x786 DUP2
0x787 JUMP
---
0x782: JUMPDEST 
0x783: V738 = 0x2
0x785: V739 = S[0x2]
0x787: JUMP 0x13a
---
Entry stack: [V10, 0x13a]
Stack pops: 1
Stack additions: [S0, V739]
Exit stack: [V10, 0x13a, V739]

================================

Block 0x788
[0x788:0x796]
---
Predecessors: [0x1b9]
Successors: [0x111]
---
0x788 JUMPDEST
0x789 PUSH1 0x0
0x78b SLOAD
0x78c PUSH1 0x1
0x78e PUSH1 0xa0
0x790 PUSH1 0x2
0x792 EXP
0x793 SUB
0x794 AND
0x795 DUP2
0x796 JUMP
---
0x788: JUMPDEST 
0x789: V740 = 0x0
0x78b: V741 = S[0x0]
0x78c: V742 = 0x1
0x78e: V743 = 0xa0
0x790: V744 = 0x2
0x792: V745 = EXP 0x2 0xa0
0x793: V746 = SUB 0x10000000000000000000000000000000000000000 0x1
0x794: V747 = AND 0xffffffffffffffffffffffffffffffffffffffff V741
0x796: JUMP 0x111
---
Entry stack: [V10, 0x111]
Stack pops: 1
Stack additions: [S0, V747]
Exit stack: [V10, 0x111, V747]

================================

Block 0x797
[0x797:0x7b0]
---
Predecessors: [0x1dc]
Successors: [0x7b1, 0x82e]
---
0x797 JUMPDEST
0x798 PUSH1 0x0
0x79a SLOAD
0x79b CALLER
0x79c PUSH1 0x1
0x79e PUSH1 0xa0
0x7a0 PUSH1 0x2
0x7a2 EXP
0x7a3 SUB
0x7a4 SWAP1
0x7a5 DUP2
0x7a6 AND
0x7a7 SWAP2
0x7a8 AND
0x7a9 EQ
0x7aa DUP1
0x7ab ISZERO
0x7ac SWAP1
0x7ad PUSH2 0x82e
0x7b0 JUMPI
---
0x797: JUMPDEST 
0x798: V748 = 0x0
0x79a: V749 = S[0x0]
0x79b: V750 = CALLER
0x79c: V751 = 0x1
0x79e: V752 = 0xa0
0x7a0: V753 = 0x2
0x7a2: V754 = EXP 0x2 0xa0
0x7a3: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a6: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0x7a8: V757 = AND V749 0xffffffffffffffffffffffffffffffffffffffff
0x7a9: V758 = EQ V757 V756
0x7ab: V759 = ISZERO V758
0x7ad: V760 = 0x82e
0x7b0: JUMPI 0x82e V758
---
Entry stack: [V10, 0xde]
Stack pops: 0
Stack additions: [V759]
Exit stack: [V10, 0xde, V759]

================================

Block 0x7b1
[0x7b1:0x80d]
---
Predecessors: [0x797]
Successors: [0x80e]
---
0x7b1 POP
0x7b2 PUSH1 0x0
0x7b4 PUSH1 0x0
0x7b6 SWAP1
0x7b7 SLOAD
0x7b8 SWAP1
0x7b9 PUSH2 0x100
0x7bc EXP
0x7bd SWAP1
0x7be DIV
0x7bf PUSH1 0x1
0x7c1 PUSH1 0xa0
0x7c3 PUSH1 0x2
0x7c5 EXP
0x7c6 SUB
0x7c7 AND
0x7c8 PUSH1 0x1
0x7ca PUSH1 0xa0
0x7cc PUSH1 0x2
0x7ce EXP
0x7cf SUB
0x7d0 AND
0x7d1 CALLER
0x7d2 PUSH1 0x1
0x7d4 PUSH1 0xa0
0x7d6 PUSH1 0x2
0x7d8 EXP
0x7d9 SUB
0x7da AND
0x7db PUSH4 0x8da5cb5b
0x7e0 PUSH1 0x0
0x7e2 PUSH1 0x40
0x7e4 MLOAD
0x7e5 PUSH1 0x20
0x7e7 ADD
0x7e8 MSTORE
0x7e9 PUSH1 0x40
0x7eb MLOAD
0x7ec DUP2
0x7ed PUSH1 0xe0
0x7ef PUSH1 0x2
0x7f1 EXP
0x7f2 MUL
0x7f3 DUP2
0x7f4 MSTORE
0x7f5 PUSH1 0x4
0x7f7 ADD
0x7f8 DUP1
0x7f9 SWAP1
0x7fa POP
0x7fb PUSH1 0x20
0x7fd PUSH1 0x40
0x7ff MLOAD
0x800 DUP1
0x801 DUP4
0x802 SUB
0x803 DUP2
0x804 PUSH1 0x0
0x806 DUP8
0x807 DUP1
0x808 EXTCODESIZE
0x809 ISZERO
0x80a PUSH2 0x0
0x80d JUMPI
---
0x7b2: V761 = 0x0
0x7b4: V762 = 0x0
0x7b7: V763 = S[0x0]
0x7b9: V764 = 0x100
0x7bc: V765 = EXP 0x100 0x0
0x7be: V766 = DIV V763 0x1
0x7bf: V767 = 0x1
0x7c1: V768 = 0xa0
0x7c3: V769 = 0x2
0x7c5: V770 = EXP 0x2 0xa0
0x7c6: V771 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c7: V772 = AND 0xffffffffffffffffffffffffffffffffffffffff V766
0x7c8: V773 = 0x1
0x7ca: V774 = 0xa0
0x7cc: V775 = 0x2
0x7ce: V776 = EXP 0x2 0xa0
0x7cf: V777 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d0: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V772
0x7d1: V779 = CALLER
0x7d2: V780 = 0x1
0x7d4: V781 = 0xa0
0x7d6: V782 = 0x2
0x7d8: V783 = EXP 0x2 0xa0
0x7d9: V784 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7da: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V779
0x7db: V786 = 0x8da5cb5b
0x7e0: V787 = 0x0
0x7e2: V788 = 0x40
0x7e4: V789 = M[0x40]
0x7e5: V790 = 0x20
0x7e7: V791 = ADD 0x20 V789
0x7e8: M[V791] = 0x0
0x7e9: V792 = 0x40
0x7eb: V793 = M[0x40]
0x7ed: V794 = 0xe0
0x7ef: V795 = 0x2
0x7f1: V796 = EXP 0x2 0xe0
0x7f2: V797 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x7f4: M[V793] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x7f5: V798 = 0x4
0x7f7: V799 = ADD 0x4 V793
0x7fb: V800 = 0x20
0x7fd: V801 = 0x40
0x7ff: V802 = M[0x40]
0x802: V803 = SUB V799 V802
0x804: V804 = 0x0
0x808: V805 = EXTCODESIZE V785
0x809: V806 = ISZERO V805
0x80a: V807 = 0x0
0x80d: THROWI V806
---
Entry stack: [V10, 0xde, V759]
Stack pops: 1
Stack additions: [V778, V785, 0x8da5cb5b, V799, 0x20, V802, V803, V802, 0x0, V785]
Exit stack: [V10, 0xde, V778, V785, 0x8da5cb5b, V799, 0x20, V802, V803, V802, 0x0, V785]

================================

Block 0x80e
[0x80e:0x817]
---
Predecessors: [0x7b1]
Successors: [0x818]
---
0x80e PUSH1 0x32
0x810 GAS
0x811 SUB
0x812 CALL
0x813 ISZERO
0x814 PUSH2 0x0
0x817 JUMPI
---
0x80e: V808 = 0x32
0x810: V809 = GAS
0x811: V810 = SUB V809 0x32
0x812: V811 = CALL V810 V785 0x0 V802 V803 V802 0x20
0x813: V812 = ISZERO V811
0x814: V813 = 0x0
0x817: THROWI V812
---
Entry stack: [V10, 0xde, V778, V785, 0x8da5cb5b, V799, 0x20, V802, V803, V802, 0x0, V785]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xde, V778, V785, 0x8da5cb5b, V799]

================================

Block 0x818
[0x818:0x82d]
---
Predecessors: [0x80e]
Successors: [0x82e]
---
0x818 POP
0x819 POP
0x81a PUSH1 0x40
0x81c MLOAD
0x81d MLOAD
0x81e PUSH1 0x1
0x820 PUSH1 0xa0
0x822 PUSH1 0x2
0x824 EXP
0x825 SUB
0x826 AND
0x827 SWAP2
0x828 SWAP1
0x829 SWAP2
0x82a EQ
0x82b ISZERO
0x82c SWAP1
0x82d POP
---
0x81a: V814 = 0x40
0x81c: V815 = M[0x40]
0x81d: V816 = M[V815]
0x81e: V817 = 0x1
0x820: V818 = 0xa0
0x822: V819 = 0x2
0x824: V820 = EXP 0x2 0xa0
0x825: V821 = SUB 0x10000000000000000000000000000000000000000 0x1
0x826: V822 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0x82a: V823 = EQ V822 V778
0x82b: V824 = ISZERO V823
---
Entry stack: [V10, 0xde, V778, V785, 0x8da5cb5b, V799]
Stack pops: 4
Stack additions: [V824]
Exit stack: [V10, 0xde, V824]

================================

Block 0x82e
[0x82e:0x833]
---
Predecessors: [0x797, 0x818]
Successors: [0x834, 0x838]
---
0x82e JUMPDEST
0x82f ISZERO
0x830 PUSH2 0x838
0x833 JUMPI
---
0x82e: JUMPDEST 
0x82f: V825 = ISZERO S0
0x830: V826 = 0x838
0x833: JUMPI 0x838 V825
---
Entry stack: [V10, 0xde, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xde]

================================

Block 0x834
[0x834:0x837]
---
Predecessors: [0x82e]
Successors: []
---
0x834 PUSH2 0x0
0x837 JUMP
---
0x834: V827 = 0x0
0x837: THROW 
---
Entry stack: [V10, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde]

================================

Block 0x838
[0x838:0x86b]
---
Predecessors: [0x82e]
Successors: [0x86c]
---
0x838 JUMPDEST
0x839 PUSH1 0x40
0x83b DUP1
0x83c MLOAD
0x83d CALLVALUE
0x83e DUP2
0x83f MSTORE
0x840 SWAP1
0x841 MLOAD
0x842 PUSH32 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0x863 SWAP2
0x864 DUP2
0x865 SWAP1
0x866 SUB
0x867 PUSH1 0x20
0x869 ADD
0x86a SWAP1
0x86b LOG1
---
0x838: JUMPDEST 
0x839: V828 = 0x40
0x83c: V829 = M[0x40]
0x83d: V830 = CALLVALUE
0x83f: M[V829] = V830
0x841: V831 = M[0x40]
0x842: V832 = 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0x866: V833 = SUB V829 V831
0x867: V834 = 0x20
0x869: V835 = ADD 0x20 V833
0x86b: LOG V831 V835 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
---
Entry stack: [V10, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde]

================================

Block 0x86c
[0x86c:0x86c]
---
Predecessors: [0x838]
Successors: [0x86d]
---
0x86c JUMPDEST
---
0x86c: JUMPDEST 
---
Entry stack: [V10, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde]

================================

Block 0x86d
[0x86d:0x86e]
---
Predecessors: [0x86c]
Successors: [0xde]
---
0x86d JUMPDEST
0x86e JUMP
---
0x86d: JUMPDEST 
0x86e: JUMP 0xde
---
Entry stack: [V10, 0xde]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x86f
[0x86f:0x874]
---
Predecessors: [0x1ec]
Successors: [0x13a]
---
0x86f JUMPDEST
0x870 PUSH1 0x4
0x872 SLOAD
0x873 DUP2
0x874 JUMP
---
0x86f: JUMPDEST 
0x870: V836 = 0x4
0x872: V837 = S[0x4]
0x874: JUMP 0x13a
---
Entry stack: [V10, 0x13a]
Stack pops: 1
Stack additions: [S0, V837]
Exit stack: [V10, 0x13a, V837]

================================

Block 0x875
[0x875:0x88b]
---
Predecessors: [0x20b]
Successors: [0x88c, 0x890]
---
0x875 JUMPDEST
0x876 PUSH1 0x0
0x878 SLOAD
0x879 CALLER
0x87a PUSH1 0x1
0x87c PUSH1 0xa0
0x87e PUSH1 0x2
0x880 EXP
0x881 SUB
0x882 SWAP1
0x883 DUP2
0x884 AND
0x885 SWAP2
0x886 AND
0x887 EQ
0x888 PUSH2 0x890
0x88b JUMPI
---
0x875: JUMPDEST 
0x876: V838 = 0x0
0x878: V839 = S[0x0]
0x879: V840 = CALLER
0x87a: V841 = 0x1
0x87c: V842 = 0xa0
0x87e: V843 = 0x2
0x880: V844 = EXP 0x2 0xa0
0x881: V845 = SUB 0x10000000000000000000000000000000000000000 0x1
0x884: V846 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0x886: V847 = AND V839 0xffffffffffffffffffffffffffffffffffffffff
0x887: V848 = EQ V847 V846
0x888: V849 = 0x890
0x88b: JUMPI 0x890 V848
---
Entry stack: [V10, 0xde, V175, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde, V175, V177]

================================

Block 0x88c
[0x88c:0x88f]
---
Predecessors: [0x875]
Successors: []
---
0x88c PUSH2 0x0
0x88f JUMP
---
0x88c: V850 = 0x0
0x88f: THROW 
---
Entry stack: [V10, 0xde, V175, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde, V175, V177]

================================

Block 0x890
[0x890:0x904]
---
Predecessors: [0x875]
Successors: [0x905]
---
0x890 JUMPDEST
0x891 PUSH1 0x5
0x893 DUP1
0x894 SLOAD
0x895 PUSH1 0xff
0x897 NOT
0x898 AND
0x899 PUSH1 0xf8
0x89b PUSH1 0x2
0x89d EXP
0x89e DUP5
0x89f DUP2
0x8a0 MUL
0x8a1 DUP2
0x8a2 SWAP1
0x8a3 DIV
0x8a4 SWAP2
0x8a5 SWAP1
0x8a6 SWAP2
0x8a7 OR
0x8a8 PUSH2 0xff00
0x8ab NOT
0x8ac AND
0x8ad PUSH2 0x100
0x8b0 DUP5
0x8b1 DUP4
0x8b2 MUL
0x8b3 SWAP3
0x8b4 SWAP1
0x8b5 SWAP3
0x8b6 DIV
0x8b7 DUP3
0x8b8 MUL
0x8b9 OR
0x8ba SWAP2
0x8bb DUP3
0x8bc SWAP1
0x8bd SSTORE
0x8be PUSH1 0x40
0x8c0 DUP1
0x8c1 MLOAD
0x8c2 PUSH1 0xff
0x8c4 DUP1
0x8c5 DUP6
0x8c6 AND
0x8c7 ISZERO
0x8c8 ISZERO
0x8c9 DUP3
0x8ca MSTORE
0x8cb SWAP3
0x8cc SWAP1
0x8cd SWAP4
0x8ce DIV
0x8cf SWAP1
0x8d0 SWAP2
0x8d1 AND
0x8d2 ISZERO
0x8d3 ISZERO
0x8d4 PUSH1 0x20
0x8d6 DUP4
0x8d7 ADD
0x8d8 MSTORE
0x8d9 DUP1
0x8da MLOAD
0x8db PUSH32 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x8fc SWAP3
0x8fd DUP2
0x8fe SWAP1
0x8ff SUB
0x900 SWAP1
0x901 SWAP2
0x902 ADD
0x903 SWAP1
0x904 LOG1
---
0x890: JUMPDEST 
0x891: V851 = 0x5
0x894: V852 = S[0x5]
0x895: V853 = 0xff
0x897: V854 = NOT 0xff
0x898: V855 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V852
0x899: V856 = 0xf8
0x89b: V857 = 0x2
0x89d: V858 = EXP 0x2 0xf8
0x8a0: V859 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V175
0x8a3: V860 = DIV V859 0x100000000000000000000000000000000000000000000000000000000000000
0x8a7: V861 = OR V860 V855
0x8a8: V862 = 0xff00
0x8ab: V863 = NOT 0xff00
0x8ac: V864 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V861
0x8ad: V865 = 0x100
0x8b2: V866 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V177
0x8b6: V867 = DIV V866 0x100000000000000000000000000000000000000000000000000000000000000
0x8b8: V868 = MUL 0x100 V867
0x8b9: V869 = OR V868 V864
0x8bd: S[0x5] = V869
0x8be: V870 = 0x40
0x8c1: V871 = M[0x40]
0x8c2: V872 = 0xff
0x8c6: V873 = AND V869 0xff
0x8c7: V874 = ISZERO V873
0x8c8: V875 = ISZERO V874
0x8ca: M[V871] = V875
0x8ce: V876 = DIV V869 0x100
0x8d1: V877 = AND 0xff V876
0x8d2: V878 = ISZERO V877
0x8d3: V879 = ISZERO V878
0x8d4: V880 = 0x20
0x8d7: V881 = ADD V871 0x20
0x8d8: M[V881] = V879
0x8da: V882 = M[0x40]
0x8db: V883 = 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x8ff: V884 = SUB V871 V882
0x902: V885 = ADD 0x40 V884
0x904: LOG V882 V885 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
---
Entry stack: [V10, 0xde, V175, V177]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xde, V175, V177]

================================

Block 0x905
[0x905:0x905]
---
Predecessors: [0x890]
Successors: [0x906]
---
0x905 JUMPDEST
---
0x905: JUMPDEST 
---
Entry stack: [V10, 0xde, V175, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde, V175, V177]

================================

Block 0x906
[0x906:0x909]
---
Predecessors: [0x905]
Successors: [0xde]
---
0x906 JUMPDEST
0x907 POP
0x908 POP
0x909 JUMP
---
0x906: JUMPDEST 
0x909: JUMP 0xde
---
Entry stack: [V10, 0xde, V175, V177]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x90a
[0x90a:0x912]
---
Predecessors: [0x220]
Successors: [0xf0]
---
0x90a JUMPDEST
0x90b PUSH1 0x5
0x90d SLOAD
0x90e PUSH1 0xff
0x910 AND
0x911 DUP2
0x912 JUMP
---
0x90a: JUMPDEST 
0x90b: V886 = 0x5
0x90d: V887 = S[0x5]
0x90e: V888 = 0xff
0x910: V889 = AND 0xff V887
0x912: JUMP 0xf0
---
Entry stack: [V10, 0xf0]
Stack pops: 1
Stack additions: [S0, V889]
Exit stack: [V10, 0xf0, V889]

================================

Block 0x913
[0x913:0x92a]
---
Predecessors: [0x241]
Successors: [0x92b, 0x92f]
---
0x913 JUMPDEST
0x914 PUSH1 0x0
0x916 DUP1
0x917 SLOAD
0x918 CALLER
0x919 PUSH1 0x1
0x91b PUSH1 0xa0
0x91d PUSH1 0x2
0x91f EXP
0x920 SUB
0x921 SWAP1
0x922 DUP2
0x923 AND
0x924 SWAP2
0x925 AND
0x926 EQ
0x927 PUSH2 0x92f
0x92a JUMPI
---
0x913: JUMPDEST 
0x914: V890 = 0x0
0x917: V891 = S[0x0]
0x918: V892 = CALLER
0x919: V893 = 0x1
0x91b: V894 = 0xa0
0x91d: V895 = 0x2
0x91f: V896 = EXP 0x2 0xa0
0x920: V897 = SUB 0x10000000000000000000000000000000000000000 0x1
0x923: V898 = AND 0xffffffffffffffffffffffffffffffffffffffff V892
0x925: V899 = AND V891 0xffffffffffffffffffffffffffffffffffffffff
0x926: V900 = EQ V899 V898
0x927: V901 = 0x92f
0x92a: JUMPI 0x92f V900
---
Entry stack: [V10, 0xf0, V195, V197]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xf0, V195, V197, 0x0]

================================

Block 0x92b
[0x92b:0x92e]
---
Predecessors: [0x913]
Successors: []
---
0x92b PUSH2 0x0
0x92e JUMP
---
0x92b: V902 = 0x0
0x92e: THROW 
---
Entry stack: [V10, 0xf0, V195, V197, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V195, V197, 0x0]

================================

Block 0x92f
[0x92f:0x96c]
---
Predecessors: [0x913]
Successors: [0x96d]
---
0x92f JUMPDEST
0x930 DUP3
0x931 PUSH1 0x1
0x933 PUSH1 0xa0
0x935 PUSH1 0x2
0x937 EXP
0x938 SUB
0x939 AND
0x93a PUSH4 0x8da5cb5b
0x93f PUSH1 0x0
0x941 PUSH1 0x40
0x943 MLOAD
0x944 PUSH1 0x20
0x946 ADD
0x947 MSTORE
0x948 PUSH1 0x40
0x94a MLOAD
0x94b DUP2
0x94c PUSH1 0xe0
0x94e PUSH1 0x2
0x950 EXP
0x951 MUL
0x952 DUP2
0x953 MSTORE
0x954 PUSH1 0x4
0x956 ADD
0x957 DUP1
0x958 SWAP1
0x959 POP
0x95a PUSH1 0x20
0x95c PUSH1 0x40
0x95e MLOAD
0x95f DUP1
0x960 DUP4
0x961 SUB
0x962 DUP2
0x963 PUSH1 0x0
0x965 DUP8
0x966 DUP1
0x967 EXTCODESIZE
0x968 ISZERO
0x969 PUSH2 0x0
0x96c JUMPI
---
0x92f: JUMPDEST 
0x931: V903 = 0x1
0x933: V904 = 0xa0
0x935: V905 = 0x2
0x937: V906 = EXP 0x2 0xa0
0x938: V907 = SUB 0x10000000000000000000000000000000000000000 0x1
0x939: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x93a: V909 = 0x8da5cb5b
0x93f: V910 = 0x0
0x941: V911 = 0x40
0x943: V912 = M[0x40]
0x944: V913 = 0x20
0x946: V914 = ADD 0x20 V912
0x947: M[V914] = 0x0
0x948: V915 = 0x40
0x94a: V916 = M[0x40]
0x94c: V917 = 0xe0
0x94e: V918 = 0x2
0x950: V919 = EXP 0x2 0xe0
0x951: V920 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x953: M[V916] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x954: V921 = 0x4
0x956: V922 = ADD 0x4 V916
0x95a: V923 = 0x20
0x95c: V924 = 0x40
0x95e: V925 = M[0x40]
0x961: V926 = SUB V922 V925
0x963: V927 = 0x0
0x967: V928 = EXTCODESIZE V908
0x968: V929 = ISZERO V928
0x969: V930 = 0x0
0x96c: THROWI V929
---
Entry stack: [V10, 0xf0, V195, V197, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V908, 0x8da5cb5b, V922, 0x20, V925, V926, V925, 0x0, V908]
Exit stack: [V10, 0xf0, V195, V197, 0x0, V908, 0x8da5cb5b, V922, 0x20, V925, V926, V925, 0x0, V908]

================================

Block 0x96d
[0x96d:0x976]
---
Predecessors: [0x92f]
Successors: [0x977]
---
0x96d PUSH1 0x32
0x96f GAS
0x970 SUB
0x971 CALL
0x972 ISZERO
0x973 PUSH2 0x0
0x976 JUMPI
---
0x96d: V931 = 0x32
0x96f: V932 = GAS
0x970: V933 = SUB V932 0x32
0x971: V934 = CALL V933 V908 0x0 V925 V926 V925 0x20
0x972: V935 = ISZERO V934
0x973: V936 = 0x0
0x976: THROWI V935
---
Entry stack: [V10, 0xf0, V195, V197, 0x0, V908, 0x8da5cb5b, V922, 0x20, V925, V926, V925, 0x0, V908]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xf0, V195, V197, 0x0, V908, 0x8da5cb5b, V922]

================================

Block 0x977
[0x977:0x995]
---
Predecessors: [0x96d]
Successors: [0x996, 0x9f8]
---
0x977 POP
0x978 POP
0x979 PUSH1 0x40
0x97b MLOAD
0x97c MLOAD
0x97d PUSH1 0x0
0x97f SLOAD
0x980 PUSH1 0x1
0x982 PUSH1 0xa0
0x984 PUSH1 0x2
0x986 EXP
0x987 SUB
0x988 SWAP1
0x989 DUP2
0x98a AND
0x98b SWAP2
0x98c AND
0x98d EQ
0x98e ISZERO
0x98f SWAP1
0x990 POP
0x991 DUP1
0x992 PUSH2 0x9f8
0x995 JUMPI
---
0x979: V937 = 0x40
0x97b: V938 = M[0x40]
0x97c: V939 = M[V938]
0x97d: V940 = 0x0
0x97f: V941 = S[0x0]
0x980: V942 = 0x1
0x982: V943 = 0xa0
0x984: V944 = 0x2
0x986: V945 = EXP 0x2 0xa0
0x987: V946 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98a: V947 = AND 0xffffffffffffffffffffffffffffffffffffffff V941
0x98c: V948 = AND V939 0xffffffffffffffffffffffffffffffffffffffff
0x98d: V949 = EQ V948 V947
0x98e: V950 = ISZERO V949
0x992: V951 = 0x9f8
0x995: JUMPI 0x9f8 V950
---
Entry stack: [V10, 0xf0, V195, V197, 0x0, V908, 0x8da5cb5b, V922]
Stack pops: 3
Stack additions: [V950]
Exit stack: [V10, 0xf0, V195, V197, 0x0, V950]

================================

Block 0x996
[0x996:0x9d3]
---
Predecessors: [0x977]
Successors: [0x9d4]
---
0x996 POP
0x997 DUP3
0x998 PUSH1 0x1
0x99a PUSH1 0xa0
0x99c PUSH1 0x2
0x99e EXP
0x99f SUB
0x9a0 AND
0x9a1 PUSH4 0x38d52e0f
0x9a6 PUSH1 0x0
0x9a8 PUSH1 0x40
0x9aa MLOAD
0x9ab PUSH1 0x20
0x9ad ADD
0x9ae MSTORE
0x9af PUSH1 0x40
0x9b1 MLOAD
0x9b2 DUP2
0x9b3 PUSH1 0xe0
0x9b5 PUSH1 0x2
0x9b7 EXP
0x9b8 MUL
0x9b9 DUP2
0x9ba MSTORE
0x9bb PUSH1 0x4
0x9bd ADD
0x9be DUP1
0x9bf SWAP1
0x9c0 POP
0x9c1 PUSH1 0x20
0x9c3 PUSH1 0x40
0x9c5 MLOAD
0x9c6 DUP1
0x9c7 DUP4
0x9c8 SUB
0x9c9 DUP2
0x9ca PUSH1 0x0
0x9cc DUP8
0x9cd DUP1
0x9ce EXTCODESIZE
0x9cf ISZERO
0x9d0 PUSH2 0x0
0x9d3 JUMPI
---
0x998: V952 = 0x1
0x99a: V953 = 0xa0
0x99c: V954 = 0x2
0x99e: V955 = EXP 0x2 0xa0
0x99f: V956 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a0: V957 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x9a1: V958 = 0x38d52e0f
0x9a6: V959 = 0x0
0x9a8: V960 = 0x40
0x9aa: V961 = M[0x40]
0x9ab: V962 = 0x20
0x9ad: V963 = ADD 0x20 V961
0x9ae: M[V963] = 0x0
0x9af: V964 = 0x40
0x9b1: V965 = M[0x40]
0x9b3: V966 = 0xe0
0x9b5: V967 = 0x2
0x9b7: V968 = EXP 0x2 0xe0
0x9b8: V969 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0x9ba: M[V965] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0x9bb: V970 = 0x4
0x9bd: V971 = ADD 0x4 V965
0x9c1: V972 = 0x20
0x9c3: V973 = 0x40
0x9c5: V974 = M[0x40]
0x9c8: V975 = SUB V971 V974
0x9ca: V976 = 0x0
0x9ce: V977 = EXTCODESIZE V957
0x9cf: V978 = ISZERO V977
0x9d0: V979 = 0x0
0x9d3: THROWI V978
---
Entry stack: [V10, 0xf0, V195, V197, 0x0, V950]
Stack pops: 4
Stack additions: [S3, S2, S1, V957, 0x38d52e0f, V971, 0x20, V974, V975, V974, 0x0, V957]
Exit stack: [V10, 0xf0, V195, V197, 0x0, V957, 0x38d52e0f, V971, 0x20, V974, V975, V974, 0x0, V957]

================================

Block 0x9d4
[0x9d4:0x9dd]
---
Predecessors: [0x996]
Successors: [0x9de]
---
0x9d4 PUSH1 0x32
0x9d6 GAS
0x9d7 SUB
0x9d8 CALL
0x9d9 ISZERO
0x9da PUSH2 0x0
0x9dd JUMPI
---
0x9d4: V980 = 0x32
0x9d6: V981 = GAS
0x9d7: V982 = SUB V981 0x32
0x9d8: V983 = CALL V982 V957 0x0 V974 V975 V974 0x20
0x9d9: V984 = ISZERO V983
0x9da: V985 = 0x0
0x9dd: THROWI V984
---
Entry stack: [V10, 0xf0, V195, V197, 0x0, V957, 0x38d52e0f, V971, 0x20, V974, V975, V974, 0x0, V957]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xf0, V195, V197, 0x0, V957, 0x38d52e0f, V971]

================================

Block 0x9de
[0x9de:0x9f7]
---
Predecessors: [0x9d4]
Successors: [0x9f8]
---
0x9de POP
0x9df POP
0x9e0 PUSH1 0x40
0x9e2 MLOAD
0x9e3 MLOAD
0x9e4 PUSH1 0x1
0x9e6 SLOAD
0x9e7 PUSH1 0x1
0x9e9 PUSH1 0xa0
0x9eb PUSH1 0x2
0x9ed EXP
0x9ee SUB
0x9ef SWAP1
0x9f0 DUP2
0x9f1 AND
0x9f2 SWAP2
0x9f3 AND
0x9f4 EQ
0x9f5 ISZERO
0x9f6 SWAP1
0x9f7 POP
---
0x9e0: V986 = 0x40
0x9e2: V987 = M[0x40]
0x9e3: V988 = M[V987]
0x9e4: V989 = 0x1
0x9e6: V990 = S[0x1]
0x9e7: V991 = 0x1
0x9e9: V992 = 0xa0
0x9eb: V993 = 0x2
0x9ed: V994 = EXP 0x2 0xa0
0x9ee: V995 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f1: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0x9f3: V997 = AND V988 0xffffffffffffffffffffffffffffffffffffffff
0x9f4: V998 = EQ V997 V996
0x9f5: V999 = ISZERO V998
---
Entry stack: [V10, 0xf0, V195, V197, 0x0, V957, 0x38d52e0f, V971]
Stack pops: 3
Stack additions: [V999]
Exit stack: [V10, 0xf0, V195, V197, 0x0, V999]

================================

Block 0x9f8
[0x9f8:0x9fd]
---
Predecessors: [0x977, 0x9de]
Successors: [0x9fe, 0xa02]
---
0x9f8 JUMPDEST
0x9f9 ISZERO
0x9fa PUSH2 0xa02
0x9fd JUMPI
---
0x9f8: JUMPDEST 
0x9f9: V1000 = ISZERO S0
0x9fa: V1001 = 0xa02
0x9fd: JUMPI 0xa02 V1000
---
Entry stack: [V10, 0xf0, V195, V197, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf0, V195, V197, 0x0]

================================

Block 0x9fe
[0x9fe:0xa01]
---
Predecessors: [0x9f8]
Successors: []
---
0x9fe PUSH2 0x0
0xa01 JUMP
---
0x9fe: V1002 = 0x0
0xa01: THROW 
---
Entry stack: [V10, 0xf0, V195, V197, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V195, V197, 0x0]

================================

Block 0xa02
[0xa02:0xa14]
---
Predecessors: [0x9f8]
Successors: [0x77b, 0xa15]
---
0xa02 JUMPDEST
0xa03 PUSH1 0x1
0xa05 PUSH1 0xa0
0xa07 PUSH1 0x2
0xa09 EXP
0xa0a SUB
0xa0b ADDRESS
0xa0c AND
0xa0d BALANCE
0xa0e DUP3
0xa0f SWAP1
0xa10 LT
0xa11 PUSH2 0x77b
0xa14 JUMPI
---
0xa02: JUMPDEST 
0xa03: V1003 = 0x1
0xa05: V1004 = 0xa0
0xa07: V1005 = 0x2
0xa09: V1006 = EXP 0x2 0xa0
0xa0a: V1007 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0b: V1008 = ADDRESS
0xa0c: V1009 = AND V1008 0xffffffffffffffffffffffffffffffffffffffff
0xa0d: V1010 = BALANCE V1009
0xa10: V1011 = LT V1010 V197
0xa11: V1012 = 0x77b
0xa14: JUMPI 0x77b V1011
---
Entry stack: [V10, 0xf0, V195, V197, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xf0, V195, V197, 0x0]

================================

Block 0xa15
[0xa15:0xa8c]
---
Predecessors: [0xa02]
Successors: [0xa8d]
---
0xa15 PUSH1 0x40
0xa17 DUP1
0xa18 MLOAD
0xa19 PUSH1 0x1
0xa1b PUSH1 0xa0
0xa1d PUSH1 0x2
0xa1f EXP
0xa20 SUB
0xa21 DUP6
0xa22 AND
0xa23 DUP2
0xa24 MSTORE
0xa25 PUSH1 0x20
0xa27 DUP2
0xa28 ADD
0xa29 DUP5
0xa2a SWAP1
0xa2b MSTORE
0xa2c DUP2
0xa2d MLOAD
0xa2e PUSH32 0x714b446590efbc5b722abe34b4c0cacf4b1f5607fbf924f957646590ce66c4ad
0xa4f SWAP3
0xa50 SWAP2
0xa51 DUP2
0xa52 SWAP1
0xa53 SUB
0xa54 SWAP1
0xa55 SWAP2
0xa56 ADD
0xa57 SWAP1
0xa58 LOG1
0xa59 DUP3
0xa5a PUSH1 0x1
0xa5c PUSH1 0xa0
0xa5e PUSH1 0x2
0xa60 EXP
0xa61 SUB
0xa62 AND
0xa63 PUSH4 0x919f8cfc
0xa68 DUP4
0xa69 PUSH1 0x40
0xa6b MLOAD
0xa6c DUP3
0xa6d PUSH1 0xe0
0xa6f PUSH1 0x2
0xa71 EXP
0xa72 MUL
0xa73 DUP2
0xa74 MSTORE
0xa75 PUSH1 0x4
0xa77 ADD
0xa78 DUP1
0xa79 SWAP1
0xa7a POP
0xa7b PUSH1 0x0
0xa7d PUSH1 0x40
0xa7f MLOAD
0xa80 DUP1
0xa81 DUP4
0xa82 SUB
0xa83 DUP2
0xa84 DUP6
0xa85 DUP9
0xa86 DUP1
0xa87 EXTCODESIZE
0xa88 ISZERO
0xa89 PUSH2 0x0
0xa8c JUMPI
---
0xa15: V1013 = 0x40
0xa18: V1014 = M[0x40]
0xa19: V1015 = 0x1
0xa1b: V1016 = 0xa0
0xa1d: V1017 = 0x2
0xa1f: V1018 = EXP 0x2 0xa0
0xa20: V1019 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa22: V1020 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0xa24: M[V1014] = V1020
0xa25: V1021 = 0x20
0xa28: V1022 = ADD V1014 0x20
0xa2b: M[V1022] = V197
0xa2d: V1023 = M[0x40]
0xa2e: V1024 = 0x714b446590efbc5b722abe34b4c0cacf4b1f5607fbf924f957646590ce66c4ad
0xa53: V1025 = SUB V1014 V1023
0xa56: V1026 = ADD 0x40 V1025
0xa58: LOG V1023 V1026 0x714b446590efbc5b722abe34b4c0cacf4b1f5607fbf924f957646590ce66c4ad
0xa5a: V1027 = 0x1
0xa5c: V1028 = 0xa0
0xa5e: V1029 = 0x2
0xa60: V1030 = EXP 0x2 0xa0
0xa61: V1031 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa62: V1032 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0xa63: V1033 = 0x919f8cfc
0xa69: V1034 = 0x40
0xa6b: V1035 = M[0x40]
0xa6d: V1036 = 0xe0
0xa6f: V1037 = 0x2
0xa71: V1038 = EXP 0x2 0xe0
0xa72: V1039 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x919f8cfc
0xa74: M[V1035] = 0x919f8cfc00000000000000000000000000000000000000000000000000000000
0xa75: V1040 = 0x4
0xa77: V1041 = ADD 0x4 V1035
0xa7b: V1042 = 0x0
0xa7d: V1043 = 0x40
0xa7f: V1044 = M[0x40]
0xa82: V1045 = SUB V1041 V1044
0xa87: V1046 = EXTCODESIZE V1032
0xa88: V1047 = ISZERO V1046
0xa89: V1048 = 0x0
0xa8c: THROWI V1047
---
Entry stack: [V10, 0xf0, V195, V197, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1032, 0x919f8cfc, S1, V1041, 0x0, V1044, V1045, V1044, S1, V1032]
Exit stack: [V10, 0xf0, V195, V197, 0x0, V1032, 0x919f8cfc, V197, V1041, 0x0, V1044, V1045, V1044, V197, V1032]

================================

Block 0xa8d
[0xa8d:0xa97]
---
Predecessors: [0xa15]
Successors: [0xa98]
---
0xa8d PUSH2 0x235a
0xa90 GAS
0xa91 SUB
0xa92 CALL
0xa93 ISZERO
0xa94 PUSH2 0x0
0xa97 JUMPI
---
0xa8d: V1049 = 0x235a
0xa90: V1050 = GAS
0xa91: V1051 = SUB V1050 0x235a
0xa92: V1052 = CALL V1051 V1032 V197 V1044 V1045 V1044 0x0
0xa93: V1053 = ISZERO V1052
0xa94: V1054 = 0x0
0xa97: THROWI V1053
---
Entry stack: [V10, 0xf0, V195, V197, 0x0, V1032, 0x919f8cfc, V197, V1041, 0x0, V1044, V1045, V1044, V197, V1032]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xf0, V195, V197, 0x0, V1032, 0x919f8cfc, V197, V1041]

================================

Block 0xa98
[0xa98:0xa9b]
---
Predecessors: [0xa8d]
Successors: [0xa9c]
---
0xa98 POP
0xa99 POP
0xa9a POP
0xa9b POP
---
0xa98: NOP 
---
Entry stack: [V10, 0xf0, V195, V197, 0x0, V1032, 0x919f8cfc, V197, V1041]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0xf0, V195, V197, 0x0]

================================

Block 0xa9c
[0xa9c:0xa9c]
---
Predecessors: [0xa98]
Successors: [0xa9d]
---
0xa9c JUMPDEST
---
0xa9c: JUMPDEST 
---
Entry stack: [V10, 0xf0, V195, V197, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V195, V197, 0x0]

================================

Block 0xa9d
[0xa9d:0xa9d]
---
Predecessors: [0xa9c]
Successors: [0xa9e]
---
0xa9d JUMPDEST
---
0xa9d: JUMPDEST 
---
Entry stack: [V10, 0xf0, V195, V197, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V195, V197, 0x0]

================================

Block 0xa9e
[0xa9e:0xaa3]
---
Predecessors: [0xa9d]
Successors: [0xf0]
---
0xa9e JUMPDEST
0xa9f SWAP3
0xaa0 SWAP2
0xaa1 POP
0xaa2 POP
0xaa3 JUMP
---
0xa9e: JUMPDEST 
0xaa3: JUMP 0xf0
---
Entry stack: [V10, 0xf0, V195, V197, 0x0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x0]

================================

Block 0xaa4
[0xaa4:0xabb]
---
Predecessors: [0x268]
Successors: [0xabc, 0xac0]
---
0xaa4 JUMPDEST
0xaa5 PUSH1 0x0
0xaa7 DUP1
0xaa8 SLOAD
0xaa9 CALLER
0xaaa PUSH1 0x1
0xaac PUSH1 0xa0
0xaae PUSH1 0x2
0xab0 EXP
0xab1 SUB
0xab2 SWAP1
0xab3 DUP2
0xab4 AND
0xab5 SWAP2
0xab6 AND
0xab7 EQ
0xab8 PUSH2 0xac0
0xabb JUMPI
---
0xaa4: JUMPDEST 
0xaa5: V1055 = 0x0
0xaa8: V1056 = S[0x0]
0xaa9: V1057 = CALLER
0xaaa: V1058 = 0x1
0xaac: V1059 = 0xa0
0xaae: V1060 = 0x2
0xab0: V1061 = EXP 0x2 0xa0
0xab1: V1062 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab4: V1063 = AND 0xffffffffffffffffffffffffffffffffffffffff V1057
0xab6: V1064 = AND V1056 0xffffffffffffffffffffffffffffffffffffffff
0xab7: V1065 = EQ V1064 V1063
0xab8: V1066 = 0xac0
0xabb: JUMPI 0xac0 V1065
---
Entry stack: [V10, 0xf0, V211, V213]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xf0, V211, V213, 0x0]

================================

Block 0xabc
[0xabc:0xabf]
---
Predecessors: [0xaa4]
Successors: []
---
0xabc PUSH2 0x0
0xabf JUMP
---
0xabc: V1067 = 0x0
0xabf: THROW 
---
Entry stack: [V10, 0xf0, V211, V213, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V211, V213, 0x0]

================================

Block 0xac0
[0xac0:0xb5e]
---
Predecessors: [0xaa4]
Successors: [0xb5f]
---
0xac0 JUMPDEST
0xac1 PUSH1 0x40
0xac3 DUP1
0xac4 MLOAD
0xac5 PUSH1 0x1
0xac7 PUSH1 0xa0
0xac9 PUSH1 0x2
0xacb EXP
0xacc SUB
0xacd DUP6
0xace AND
0xacf DUP2
0xad0 MSTORE
0xad1 PUSH1 0x20
0xad3 DUP2
0xad4 ADD
0xad5 DUP5
0xad6 SWAP1
0xad7 MSTORE
0xad8 DUP2
0xad9 MLOAD
0xada PUSH32 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xafb SWAP3
0xafc SWAP2
0xafd DUP2
0xafe SWAP1
0xaff SUB
0xb00 SWAP1
0xb01 SWAP2
0xb02 ADD
0xb03 SWAP1
0xb04 LOG1
0xb05 PUSH1 0x0
0xb07 DUP1
0xb08 SLOAD
0xb09 PUSH1 0x40
0xb0b DUP1
0xb0c MLOAD
0xb0d PUSH1 0x20
0xb0f SWAP1
0xb10 DUP2
0xb11 ADD
0xb12 DUP5
0xb13 SWAP1
0xb14 MSTORE
0xb15 DUP2
0xb16 MLOAD
0xb17 PUSH1 0xe0
0xb19 PUSH1 0x2
0xb1b EXP
0xb1c PUSH4 0xa9059cbb
0xb21 MUL
0xb22 DUP2
0xb23 MSTORE
0xb24 PUSH1 0x1
0xb26 PUSH1 0xa0
0xb28 PUSH1 0x2
0xb2a EXP
0xb2b SUB
0xb2c SWAP4
0xb2d DUP5
0xb2e AND
0xb2f PUSH1 0x4
0xb31 DUP3
0xb32 ADD
0xb33 MSTORE
0xb34 PUSH1 0x24
0xb36 DUP2
0xb37 ADD
0xb38 DUP8
0xb39 SWAP1
0xb3a MSTORE
0xb3b SWAP2
0xb3c MLOAD
0xb3d SWAP3
0xb3e DUP8
0xb3f AND
0xb40 SWAP4
0xb41 PUSH4 0xa9059cbb
0xb46 SWAP4
0xb47 PUSH1 0x44
0xb49 DUP1
0xb4a DUP6
0xb4b ADD
0xb4c SWAP5
0xb4d SWAP2
0xb4e SWAP3
0xb4f SWAP2
0xb50 DUP4
0xb51 SWAP1
0xb52 SUB
0xb53 ADD
0xb54 SWAP1
0xb55 DUP3
0xb56 SWAP1
0xb57 DUP8
0xb58 DUP1
0xb59 EXTCODESIZE
0xb5a ISZERO
0xb5b PUSH2 0x0
0xb5e JUMPI
---
0xac0: JUMPDEST 
0xac1: V1068 = 0x40
0xac4: V1069 = M[0x40]
0xac5: V1070 = 0x1
0xac7: V1071 = 0xa0
0xac9: V1072 = 0x2
0xacb: V1073 = EXP 0x2 0xa0
0xacc: V1074 = SUB 0x10000000000000000000000000000000000000000 0x1
0xace: V1075 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0xad0: M[V1069] = V1075
0xad1: V1076 = 0x20
0xad4: V1077 = ADD V1069 0x20
0xad7: M[V1077] = V213
0xad9: V1078 = M[0x40]
0xada: V1079 = 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xaff: V1080 = SUB V1069 V1078
0xb02: V1081 = ADD 0x40 V1080
0xb04: LOG V1078 V1081 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xb05: V1082 = 0x0
0xb08: V1083 = S[0x0]
0xb09: V1084 = 0x40
0xb0c: V1085 = M[0x40]
0xb0d: V1086 = 0x20
0xb11: V1087 = ADD 0x20 V1085
0xb14: M[V1087] = 0x0
0xb16: V1088 = M[0x40]
0xb17: V1089 = 0xe0
0xb19: V1090 = 0x2
0xb1b: V1091 = EXP 0x2 0xe0
0xb1c: V1092 = 0xa9059cbb
0xb21: V1093 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xb23: M[V1088] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb24: V1094 = 0x1
0xb26: V1095 = 0xa0
0xb28: V1096 = 0x2
0xb2a: V1097 = EXP 0x2 0xa0
0xb2b: V1098 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2e: V1099 = AND 0xffffffffffffffffffffffffffffffffffffffff V1083
0xb2f: V1100 = 0x4
0xb32: V1101 = ADD V1088 0x4
0xb33: M[V1101] = V1099
0xb34: V1102 = 0x24
0xb37: V1103 = ADD V1088 0x24
0xb3a: M[V1103] = V213
0xb3c: V1104 = M[0x40]
0xb3f: V1105 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0xb41: V1106 = 0xa9059cbb
0xb47: V1107 = 0x44
0xb4b: V1108 = ADD V1088 0x44
0xb52: V1109 = SUB V1088 V1104
0xb53: V1110 = ADD V1109 0x44
0xb59: V1111 = EXTCODESIZE V1105
0xb5a: V1112 = ISZERO V1111
0xb5b: V1113 = 0x0
0xb5e: THROWI V1112
---
Entry stack: [V10, 0xf0, V211, V213, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1105, 0xa9059cbb, V1108, 0x20, V1104, V1110, V1104, 0x0, V1105]
Exit stack: [V10, 0xf0, V211, V213, 0x0, V1105, 0xa9059cbb, V1108, 0x20, V1104, V1110, V1104, 0x0, V1105]

================================

Block 0xb5f
[0xb5f:0xb68]
---
Predecessors: [0xac0]
Successors: [0xb69]
---
0xb5f PUSH1 0x32
0xb61 GAS
0xb62 SUB
0xb63 CALL
0xb64 ISZERO
0xb65 PUSH2 0x0
0xb68 JUMPI
---
0xb5f: V1114 = 0x32
0xb61: V1115 = GAS
0xb62: V1116 = SUB V1115 0x32
0xb63: V1117 = CALL V1116 V1105 0x0 V1104 V1110 V1104 0x20
0xb64: V1118 = ISZERO V1117
0xb65: V1119 = 0x0
0xb68: THROWI V1118
---
Entry stack: [V10, 0xf0, V211, V213, 0x0, V1105, 0xa9059cbb, V1108, 0x20, V1104, V1110, V1104, 0x0, V1105]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xf0, V211, V213, 0x0, V1105, 0xa9059cbb, V1108]

================================

Block 0xb69
[0xb69:0xb71]
---
Predecessors: [0xb5f]
Successors: [0xb72]
---
0xb69 POP
0xb6a POP
0xb6b PUSH1 0x40
0xb6d MLOAD
0xb6e MLOAD
0xb6f SWAP2
0xb70 POP
0xb71 POP
---
0xb6b: V1120 = 0x40
0xb6d: V1121 = M[0x40]
0xb6e: V1122 = M[V1121]
---
Entry stack: [V10, 0xf0, V211, V213, 0x0, V1105, 0xa9059cbb, V1108]
Stack pops: 4
Stack additions: [V1122]
Exit stack: [V10, 0xf0, V211, V213, V1122]

================================

Block 0xb72
[0xb72:0xb72]
---
Predecessors: [0xb69]
Successors: [0xb73]
---
0xb72 JUMPDEST
---
0xb72: JUMPDEST 
---
Entry stack: [V10, 0xf0, V211, V213, V1122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V211, V213, V1122]

================================

Block 0xb73
[0xb73:0xb78]
---
Predecessors: [0xb72]
Successors: [0xf0]
---
0xb73 JUMPDEST
0xb74 SWAP3
0xb75 SWAP2
0xb76 POP
0xb77 POP
0xb78 JUMP
---
0xb73: JUMPDEST 
0xb78: JUMP 0xf0
---
Entry stack: [V10, 0xf0, V211, V213, V1122]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V1122]

================================

Block 0xb79
[0xb79:0xb90]
---
Predecessors: [0x299]
Successors: [0xb91, 0xb95]
---
0xb79 JUMPDEST
0xb7a PUSH1 0x0
0xb7c DUP1
0xb7d SLOAD
0xb7e CALLER
0xb7f PUSH1 0x1
0xb81 PUSH1 0xa0
0xb83 PUSH1 0x2
0xb85 EXP
0xb86 SUB
0xb87 SWAP1
0xb88 DUP2
0xb89 AND
0xb8a SWAP2
0xb8b AND
0xb8c EQ
0xb8d PUSH2 0xb95
0xb90 JUMPI
---
0xb79: JUMPDEST 
0xb7a: V1123 = 0x0
0xb7d: V1124 = S[0x0]
0xb7e: V1125 = CALLER
0xb7f: V1126 = 0x1
0xb81: V1127 = 0xa0
0xb83: V1128 = 0x2
0xb85: V1129 = EXP 0x2 0xa0
0xb86: V1130 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb89: V1131 = AND 0xffffffffffffffffffffffffffffffffffffffff V1125
0xb8b: V1132 = AND V1124 0xffffffffffffffffffffffffffffffffffffffff
0xb8c: V1133 = EQ V1132 V1131
0xb8d: V1134 = 0xb95
0xb90: JUMPI 0xb95 V1133
---
Entry stack: [V10, 0xf0, V229]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xf0, V229, 0x0]

================================

Block 0xb91
[0xb91:0xb94]
---
Predecessors: [0xb79]
Successors: []
---
0xb91 PUSH2 0x0
0xb94 JUMP
---
0xb91: V1135 = 0x0
0xb94: THROW 
---
Entry stack: [V10, 0xf0, V229, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V229, 0x0]

================================

Block 0xb95
[0xb95:0xc25]
---
Predecessors: [0xb79]
Successors: [0xc26]
---
0xb95 JUMPDEST
0xb96 PUSH1 0x40
0xb98 DUP1
0xb99 MLOAD
0xb9a DUP4
0xb9b DUP2
0xb9c MSTORE
0xb9d SWAP1
0xb9e MLOAD
0xb9f PUSH32 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xbc0 SWAP2
0xbc1 DUP2
0xbc2 SWAP1
0xbc3 SUB
0xbc4 PUSH1 0x20
0xbc6 ADD
0xbc7 SWAP1
0xbc8 LOG1
0xbc9 PUSH1 0x1
0xbcb SLOAD
0xbcc PUSH1 0x0
0xbce DUP1
0xbcf SLOAD
0xbd0 PUSH1 0x40
0xbd2 DUP1
0xbd3 MLOAD
0xbd4 PUSH1 0x20
0xbd6 SWAP1
0xbd7 DUP2
0xbd8 ADD
0xbd9 DUP5
0xbda SWAP1
0xbdb MSTORE
0xbdc DUP2
0xbdd MLOAD
0xbde PUSH1 0xe0
0xbe0 PUSH1 0x2
0xbe2 EXP
0xbe3 PUSH4 0xa9059cbb
0xbe8 MUL
0xbe9 DUP2
0xbea MSTORE
0xbeb PUSH1 0x1
0xbed PUSH1 0xa0
0xbef PUSH1 0x2
0xbf1 EXP
0xbf2 SUB
0xbf3 SWAP4
0xbf4 DUP5
0xbf5 AND
0xbf6 PUSH1 0x4
0xbf8 DUP3
0xbf9 ADD
0xbfa MSTORE
0xbfb PUSH1 0x24
0xbfd DUP2
0xbfe ADD
0xbff DUP9
0xc00 SWAP1
0xc01 MSTORE
0xc02 SWAP2
0xc03 MLOAD
0xc04 SWAP3
0xc05 SWAP1
0xc06 SWAP5
0xc07 AND
0xc08 SWAP4
0xc09 PUSH4 0xa9059cbb
0xc0e SWAP4
0xc0f PUSH1 0x44
0xc11 DUP1
0xc12 DUP5
0xc13 ADD
0xc14 SWAP5
0xc15 SWAP3
0xc16 SWAP4
0xc17 DUP4
0xc18 SWAP1
0xc19 SUB
0xc1a ADD
0xc1b SWAP1
0xc1c DUP3
0xc1d SWAP1
0xc1e DUP8
0xc1f DUP1
0xc20 EXTCODESIZE
0xc21 ISZERO
0xc22 PUSH2 0x0
0xc25 JUMPI
---
0xb95: JUMPDEST 
0xb96: V1136 = 0x40
0xb99: V1137 = M[0x40]
0xb9c: M[V1137] = V229
0xb9e: V1138 = M[0x40]
0xb9f: V1139 = 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xbc3: V1140 = SUB V1137 V1138
0xbc4: V1141 = 0x20
0xbc6: V1142 = ADD 0x20 V1140
0xbc8: LOG V1138 V1142 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xbc9: V1143 = 0x1
0xbcb: V1144 = S[0x1]
0xbcc: V1145 = 0x0
0xbcf: V1146 = S[0x0]
0xbd0: V1147 = 0x40
0xbd3: V1148 = M[0x40]
0xbd4: V1149 = 0x20
0xbd8: V1150 = ADD 0x20 V1148
0xbdb: M[V1150] = 0x0
0xbdd: V1151 = M[0x40]
0xbde: V1152 = 0xe0
0xbe0: V1153 = 0x2
0xbe2: V1154 = EXP 0x2 0xe0
0xbe3: V1155 = 0xa9059cbb
0xbe8: V1156 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xbea: M[V1151] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xbeb: V1157 = 0x1
0xbed: V1158 = 0xa0
0xbef: V1159 = 0x2
0xbf1: V1160 = EXP 0x2 0xa0
0xbf2: V1161 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf5: V1162 = AND 0xffffffffffffffffffffffffffffffffffffffff V1146
0xbf6: V1163 = 0x4
0xbf9: V1164 = ADD V1151 0x4
0xbfa: M[V1164] = V1162
0xbfb: V1165 = 0x24
0xbfe: V1166 = ADD V1151 0x24
0xc01: M[V1166] = V229
0xc03: V1167 = M[0x40]
0xc07: V1168 = AND V1144 0xffffffffffffffffffffffffffffffffffffffff
0xc09: V1169 = 0xa9059cbb
0xc0f: V1170 = 0x44
0xc13: V1171 = ADD V1151 0x44
0xc19: V1172 = SUB V1151 V1167
0xc1a: V1173 = ADD V1172 0x44
0xc20: V1174 = EXTCODESIZE V1168
0xc21: V1175 = ISZERO V1174
0xc22: V1176 = 0x0
0xc25: THROWI V1175
---
Entry stack: [V10, 0xf0, V229, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V1168, 0xa9059cbb, V1171, 0x20, V1167, V1173, V1167, 0x0, V1168]
Exit stack: [V10, 0xf0, V229, 0x0, V1168, 0xa9059cbb, V1171, 0x20, V1167, V1173, V1167, 0x0, V1168]

================================

Block 0xc26
[0xc26:0xc2f]
---
Predecessors: [0xb95]
Successors: [0xc30]
---
0xc26 PUSH1 0x32
0xc28 GAS
0xc29 SUB
0xc2a CALL
0xc2b ISZERO
0xc2c PUSH2 0x0
0xc2f JUMPI
---
0xc26: V1177 = 0x32
0xc28: V1178 = GAS
0xc29: V1179 = SUB V1178 0x32
0xc2a: V1180 = CALL V1179 V1168 0x0 V1167 V1173 V1167 0x20
0xc2b: V1181 = ISZERO V1180
0xc2c: V1182 = 0x0
0xc2f: THROWI V1181
---
Entry stack: [V10, 0xf0, V229, 0x0, V1168, 0xa9059cbb, V1171, 0x20, V1167, V1173, V1167, 0x0, V1168]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xf0, V229, 0x0, V1168, 0xa9059cbb, V1171]

================================

Block 0xc30
[0xc30:0xc38]
---
Predecessors: [0xc26]
Successors: [0xc39]
---
0xc30 POP
0xc31 POP
0xc32 PUSH1 0x40
0xc34 MLOAD
0xc35 MLOAD
0xc36 SWAP2
0xc37 POP
0xc38 POP
---
0xc32: V1183 = 0x40
0xc34: V1184 = M[0x40]
0xc35: V1185 = M[V1184]
---
Entry stack: [V10, 0xf0, V229, 0x0, V1168, 0xa9059cbb, V1171]
Stack pops: 4
Stack additions: [V1185]
Exit stack: [V10, 0xf0, V229, V1185]

================================

Block 0xc39
[0xc39:0xc39]
---
Predecessors: [0xc30]
Successors: [0xc3a]
---
0xc39 JUMPDEST
---
0xc39: JUMPDEST 
---
Entry stack: [V10, 0xf0, V229, V1185]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf0, V229, V1185]

================================

Block 0xc3a
[0xc3a:0xc3e]
---
Predecessors: [0xc39]
Successors: [0xf0]
---
0xc3a JUMPDEST
0xc3b SWAP2
0xc3c SWAP1
0xc3d POP
0xc3e JUMP
---
0xc3a: JUMPDEST 
0xc3e: JUMP 0xf0
---
Entry stack: [V10, 0xf0, V229, V1185]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V1185]

================================

Block 0xc3f
[0xc3f:0xc4f]
---
Predecessors: [0x2bd]
Successors: [0xc50, 0xc63]
---
0xc3f JUMPDEST
0xc40 PUSH1 0x5
0xc42 SLOAD
0xc43 PUSH1 0x0
0xc45 SWAP1
0xc46 DUP2
0xc47 SWAP1
0xc48 PUSH1 0xff
0xc4a AND
0xc4b DUP1
0xc4c PUSH2 0xc63
0xc4f JUMPI
---
0xc3f: JUMPDEST 
0xc40: V1186 = 0x5
0xc42: V1187 = S[0x5]
0xc43: V1188 = 0x0
0xc48: V1189 = 0xff
0xc4a: V1190 = AND 0xff V1187
0xc4c: V1191 = 0xc63
0xc4f: JUMPI 0xc63 V1190
---
Entry stack: [V10, 0xde, V243]
Stack pops: 0
Stack additions: [0x0, 0x0, V1190]
Exit stack: [V10, 0xde, V243, 0x0, 0x0, V1190]

================================

Block 0xc50
[0xc50:0xc62]
---
Predecessors: [0xc3f]
Successors: [0xc63]
---
0xc50 POP
0xc51 PUSH1 0x0
0xc53 SLOAD
0xc54 CALLER
0xc55 PUSH1 0x1
0xc57 PUSH1 0xa0
0xc59 PUSH1 0x2
0xc5b EXP
0xc5c SUB
0xc5d SWAP1
0xc5e DUP2
0xc5f AND
0xc60 SWAP2
0xc61 AND
0xc62 EQ
---
0xc51: V1192 = 0x0
0xc53: V1193 = S[0x0]
0xc54: V1194 = CALLER
0xc55: V1195 = 0x1
0xc57: V1196 = 0xa0
0xc59: V1197 = 0x2
0xc5b: V1198 = EXP 0x2 0xa0
0xc5c: V1199 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5f: V1200 = AND 0xffffffffffffffffffffffffffffffffffffffff V1194
0xc61: V1201 = AND V1193 0xffffffffffffffffffffffffffffffffffffffff
0xc62: V1202 = EQ V1201 V1200
---
Entry stack: [V10, 0xde, V243, 0x0, 0x0, V1190]
Stack pops: 1
Stack additions: [V1202]
Exit stack: [V10, 0xde, V243, 0x0, 0x0, V1202]

================================

Block 0xc63
[0xc63:0xc68]
---
Predecessors: [0xc3f, 0xc50]
Successors: [0x50d, 0xc69]
---
0xc63 JUMPDEST
0xc64 ISZERO
0xc65 PUSH2 0x50d
0xc68 JUMPI
---
0xc63: JUMPDEST 
0xc64: V1203 = ISZERO S0
0xc65: V1204 = 0x50d
0xc68: JUMPI 0x50d V1203
---
Entry stack: [V10, 0xde, V243, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xde, V243, 0x0, 0x0]

================================

Block 0xc69
[0xc69:0xc7c]
---
Predecessors: [0xc63]
Successors: [0xc7d]
---
0xc69 PUSH1 0x2
0xc6b SLOAD
0xc6c ADDRESS
0xc6d PUSH1 0x1
0xc6f PUSH1 0xa0
0xc71 PUSH1 0x2
0xc73 EXP
0xc74 SUB
0xc75 AND
0xc76 BALANCE
0xc77 DUP2
0xc78 ISZERO
0xc79 PUSH2 0x0
0xc7c JUMPI
---
0xc69: V1205 = 0x2
0xc6b: V1206 = S[0x2]
0xc6c: V1207 = ADDRESS
0xc6d: V1208 = 0x1
0xc6f: V1209 = 0xa0
0xc71: V1210 = 0x2
0xc73: V1211 = EXP 0x2 0xa0
0xc74: V1212 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc75: V1213 = AND 0xffffffffffffffffffffffffffffffffffffffff V1207
0xc76: V1214 = BALANCE V1213
0xc78: V1215 = ISZERO V1206
0xc79: V1216 = 0x0
0xc7c: THROWI V1215
---
Entry stack: [V10, 0xde, V243, 0x0, 0x0]
Stack pops: 0
Stack additions: [V1206, V1214]
Exit stack: [V10, 0xde, V243, 0x0, 0x0, V1206, V1214]

================================

Block 0xc7d
[0xc7d:0xc89]
---
Predecessors: [0xc69]
Successors: [0xc8a]
---
0xc7d DIV
0xc7e SWAP2
0xc7f POP
0xc80 PUSH1 0x4
0xc82 SLOAD
0xc83 DUP4
0xc84 DUP2
0xc85 ISZERO
0xc86 PUSH2 0x0
0xc89 JUMPI
---
0xc7d: V1217 = DIV V1214 V1206
0xc80: V1218 = 0x4
0xc82: V1219 = S[0x4]
0xc85: V1220 = ISZERO V1219
0xc86: V1221 = 0x0
0xc89: THROWI V1220
---
Entry stack: [V10, 0xde, V243, 0x0, 0x0, V1206, V1214]
Stack pops: 5
Stack additions: [S4, V1217, S2, V1219, S4]
Exit stack: [V10, 0xde, V243, V1217, 0x0, V1219, V243]

================================

Block 0xc8a
[0xc8a:0xc94]
---
Predecessors: [0xc7d]
Successors: [0xc95, 0xc97]
---
0xc8a DIV
0xc8b SWAP1
0xc8c POP
0xc8d DUP2
0xc8e DUP2
0xc8f GT
0xc90 ISZERO
0xc91 PUSH2 0xc97
0xc94 JUMPI
---
0xc8a: V1222 = DIV V243 V1219
0xc8f: V1223 = GT V1222 V1217
0xc90: V1224 = ISZERO V1223
0xc91: V1225 = 0xc97
0xc94: JUMPI 0xc97 V1224
---
Entry stack: [V10, 0xde, V243, V1217, 0x0, V1219, V243]
Stack pops: 4
Stack additions: [S3, V1222]
Exit stack: [V10, 0xde, V243, V1217, V1222]

================================

Block 0xc95
[0xc95:0xc96]
---
Predecessors: [0xc8a]
Successors: [0xc97]
---
0xc95 POP
0xc96 DUP1
---
0xc95: NOP 
---
Entry stack: [V10, 0xde, V243, V1217, V1222]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V10, 0xde, V243, V1217, V1217]

================================

Block 0xc97
[0xc97:0xca0]
---
Predecessors: [0xc8a, 0xc95]
Successors: [0xca1, 0xd70]
---
0xc97 JUMPDEST
0xc98 PUSH1 0x0
0xc9a DUP2
0xc9b GT
0xc9c ISZERO
0xc9d PUSH2 0xd70
0xca0 JUMPI
---
0xc97: JUMPDEST 
0xc98: V1226 = 0x0
0xc9b: V1227 = GT S0 0x0
0xc9c: V1228 = ISZERO V1227
0xc9d: V1229 = 0xd70
0xca0: JUMPI 0xd70 V1228
---
Entry stack: [V10, 0xde, V243, V1217, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xde, V243, V1217, S0]

================================

Block 0xca1
[0xca1:0xd20]
---
Predecessors: [0xc97]
Successors: [0xd21]
---
0xca1 PUSH1 0x1
0xca3 PUSH1 0x0
0xca5 SWAP1
0xca6 SLOAD
0xca7 SWAP1
0xca8 PUSH2 0x100
0xcab EXP
0xcac SWAP1
0xcad DIV
0xcae PUSH1 0x1
0xcb0 PUSH1 0xa0
0xcb2 PUSH1 0x2
0xcb4 EXP
0xcb5 SUB
0xcb6 AND
0xcb7 PUSH1 0x1
0xcb9 PUSH1 0xa0
0xcbb PUSH1 0x2
0xcbd EXP
0xcbe SUB
0xcbf AND
0xcc0 PUSH4 0x23b872dd
0xcc5 CALLER
0xcc6 ADDRESS
0xcc7 PUSH1 0x4
0xcc9 SLOAD
0xcca DUP6
0xccb MUL
0xccc PUSH1 0x0
0xcce PUSH1 0x40
0xcd0 MLOAD
0xcd1 PUSH1 0x20
0xcd3 ADD
0xcd4 MSTORE
0xcd5 PUSH1 0x40
0xcd7 MLOAD
0xcd8 DUP5
0xcd9 PUSH1 0xe0
0xcdb PUSH1 0x2
0xcdd EXP
0xcde MUL
0xcdf DUP2
0xce0 MSTORE
0xce1 PUSH1 0x4
0xce3 ADD
0xce4 DUP1
0xce5 DUP5
0xce6 PUSH1 0x1
0xce8 PUSH1 0xa0
0xcea PUSH1 0x2
0xcec EXP
0xced SUB
0xcee AND
0xcef DUP2
0xcf0 MSTORE
0xcf1 PUSH1 0x20
0xcf3 ADD
0xcf4 DUP4
0xcf5 PUSH1 0x1
0xcf7 PUSH1 0xa0
0xcf9 PUSH1 0x2
0xcfb EXP
0xcfc SUB
0xcfd AND
0xcfe DUP2
0xcff MSTORE
0xd00 PUSH1 0x20
0xd02 ADD
0xd03 DUP3
0xd04 DUP2
0xd05 MSTORE
0xd06 PUSH1 0x20
0xd08 ADD
0xd09 SWAP4
0xd0a POP
0xd0b POP
0xd0c POP
0xd0d POP
0xd0e PUSH1 0x20
0xd10 PUSH1 0x40
0xd12 MLOAD
0xd13 DUP1
0xd14 DUP4
0xd15 SUB
0xd16 DUP2
0xd17 PUSH1 0x0
0xd19 DUP8
0xd1a DUP1
0xd1b EXTCODESIZE
0xd1c ISZERO
0xd1d PUSH2 0x0
0xd20 JUMPI
---
0xca1: V1230 = 0x1
0xca3: V1231 = 0x0
0xca6: V1232 = S[0x1]
0xca8: V1233 = 0x100
0xcab: V1234 = EXP 0x100 0x0
0xcad: V1235 = DIV V1232 0x1
0xcae: V1236 = 0x1
0xcb0: V1237 = 0xa0
0xcb2: V1238 = 0x2
0xcb4: V1239 = EXP 0x2 0xa0
0xcb5: V1240 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb6: V1241 = AND 0xffffffffffffffffffffffffffffffffffffffff V1235
0xcb7: V1242 = 0x1
0xcb9: V1243 = 0xa0
0xcbb: V1244 = 0x2
0xcbd: V1245 = EXP 0x2 0xa0
0xcbe: V1246 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcbf: V1247 = AND 0xffffffffffffffffffffffffffffffffffffffff V1241
0xcc0: V1248 = 0x23b872dd
0xcc5: V1249 = CALLER
0xcc6: V1250 = ADDRESS
0xcc7: V1251 = 0x4
0xcc9: V1252 = S[0x4]
0xccb: V1253 = MUL S0 V1252
0xccc: V1254 = 0x0
0xcce: V1255 = 0x40
0xcd0: V1256 = M[0x40]
0xcd1: V1257 = 0x20
0xcd3: V1258 = ADD 0x20 V1256
0xcd4: M[V1258] = 0x0
0xcd5: V1259 = 0x40
0xcd7: V1260 = M[0x40]
0xcd9: V1261 = 0xe0
0xcdb: V1262 = 0x2
0xcdd: V1263 = EXP 0x2 0xe0
0xcde: V1264 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0xce0: M[V1260] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xce1: V1265 = 0x4
0xce3: V1266 = ADD 0x4 V1260
0xce6: V1267 = 0x1
0xce8: V1268 = 0xa0
0xcea: V1269 = 0x2
0xcec: V1270 = EXP 0x2 0xa0
0xced: V1271 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcee: V1272 = AND 0xffffffffffffffffffffffffffffffffffffffff V1249
0xcf0: M[V1266] = V1272
0xcf1: V1273 = 0x20
0xcf3: V1274 = ADD 0x20 V1266
0xcf5: V1275 = 0x1
0xcf7: V1276 = 0xa0
0xcf9: V1277 = 0x2
0xcfb: V1278 = EXP 0x2 0xa0
0xcfc: V1279 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcfd: V1280 = AND 0xffffffffffffffffffffffffffffffffffffffff V1250
0xcff: M[V1274] = V1280
0xd00: V1281 = 0x20
0xd02: V1282 = ADD 0x20 V1274
0xd05: M[V1282] = V1253
0xd06: V1283 = 0x20
0xd08: V1284 = ADD 0x20 V1282
0xd0e: V1285 = 0x20
0xd10: V1286 = 0x40
0xd12: V1287 = M[0x40]
0xd15: V1288 = SUB V1284 V1287
0xd17: V1289 = 0x0
0xd1b: V1290 = EXTCODESIZE V1247
0xd1c: V1291 = ISZERO V1290
0xd1d: V1292 = 0x0
0xd20: THROWI V1291
---
Entry stack: [V10, 0xde, V243, V1217, S0]
Stack pops: 1
Stack additions: [S0, V1247, 0x23b872dd, V1284, 0x20, V1287, V1288, V1287, 0x0, V1247]
Exit stack: [V10, 0xde, V243, V1217, S0, V1247, 0x23b872dd, V1284, 0x20, V1287, V1288, V1287, 0x0, V1247]

================================

Block 0xd21
[0xd21:0xd2a]
---
Predecessors: [0xca1]
Successors: [0xd2b]
---
0xd21 PUSH1 0x32
0xd23 GAS
0xd24 SUB
0xd25 CALL
0xd26 ISZERO
0xd27 PUSH2 0x0
0xd2a JUMPI
---
0xd21: V1293 = 0x32
0xd23: V1294 = GAS
0xd24: V1295 = SUB V1294 0x32
0xd25: V1296 = CALL V1295 V1247 0x0 V1287 V1288 V1287 0x20
0xd26: V1297 = ISZERO V1296
0xd27: V1298 = 0x0
0xd2a: THROWI V1297
---
Entry stack: [V10, 0xde, V243, V1217, S9, V1247, 0x23b872dd, V1284, 0x20, V1287, V1288, V1287, 0x0, V1247]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xde, V243, V1217, S9, V1247, 0x23b872dd, V1284]

================================

Block 0xd2b
[0xd2b:0xd38]
---
Predecessors: [0xd21]
Successors: [0xd39, 0xd3d]
---
0xd2b POP
0xd2c POP
0xd2d PUSH1 0x40
0xd2f MLOAD
0xd30 MLOAD
0xd31 ISZERO
0xd32 ISZERO
0xd33 SWAP1
0xd34 POP
0xd35 PUSH2 0xd3d
0xd38 JUMPI
---
0xd2d: V1299 = 0x40
0xd2f: V1300 = M[0x40]
0xd30: V1301 = M[V1300]
0xd31: V1302 = ISZERO V1301
0xd32: V1303 = ISZERO V1302
0xd35: V1304 = 0xd3d
0xd38: JUMPI 0xd3d V1303
---
Entry stack: [V10, 0xde, V243, V1217, S3, V1247, 0x23b872dd, V1284]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0xde, V243, V1217, S3]

================================

Block 0xd39
[0xd39:0xd3c]
---
Predecessors: [0xd2b]
Successors: []
---
0xd39 PUSH2 0x0
0xd3c JUMP
---
0xd39: V1305 = 0x0
0xd3c: THROW 
---
Entry stack: [V10, 0xde, V243, V1217, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde, V243, V1217, S0]

================================

Block 0xd3d
[0xd3d:0xd6b]
---
Predecessors: [0xd2b]
Successors: [0xd6c, 0xd70]
---
0xd3d JUMPDEST
0xd3e PUSH1 0x2
0xd40 SLOAD
0xd41 PUSH1 0x40
0xd43 MLOAD
0xd44 PUSH1 0x1
0xd46 PUSH1 0xa0
0xd48 PUSH1 0x2
0xd4a EXP
0xd4b SUB
0xd4c CALLER
0xd4d AND
0xd4e SWAP2
0xd4f DUP4
0xd50 MUL
0xd51 DUP1
0xd52 ISZERO
0xd53 PUSH2 0x8fc
0xd56 MUL
0xd57 SWAP2
0xd58 PUSH1 0x0
0xd5a DUP2
0xd5b DUP2
0xd5c DUP2
0xd5d DUP6
0xd5e DUP9
0xd5f DUP9
0xd60 CALL
0xd61 SWAP4
0xd62 POP
0xd63 POP
0xd64 POP
0xd65 POP
0xd66 ISZERO
0xd67 ISZERO
0xd68 PUSH2 0xd70
0xd6b JUMPI
---
0xd3d: JUMPDEST 
0xd3e: V1306 = 0x2
0xd40: V1307 = S[0x2]
0xd41: V1308 = 0x40
0xd43: V1309 = M[0x40]
0xd44: V1310 = 0x1
0xd46: V1311 = 0xa0
0xd48: V1312 = 0x2
0xd4a: V1313 = EXP 0x2 0xa0
0xd4b: V1314 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd4c: V1315 = CALLER
0xd4d: V1316 = AND V1315 0xffffffffffffffffffffffffffffffffffffffff
0xd50: V1317 = MUL S0 V1307
0xd52: V1318 = ISZERO V1317
0xd53: V1319 = 0x8fc
0xd56: V1320 = MUL 0x8fc V1318
0xd58: V1321 = 0x0
0xd60: V1322 = CALL V1320 V1316 V1317 V1309 0x0 V1309 0x0
0xd66: V1323 = ISZERO V1322
0xd67: V1324 = ISZERO V1323
0xd68: V1325 = 0xd70
0xd6b: JUMPI 0xd70 V1324
---
Entry stack: [V10, 0xde, V243, V1217, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xde, V243, V1217, S0]

================================

Block 0xd6c
[0xd6c:0xd6f]
---
Predecessors: [0xd3d]
Successors: []
---
0xd6c PUSH2 0x0
0xd6f JUMP
---
0xd6c: V1326 = 0x0
0xd6f: THROW 
---
Entry stack: [V10, 0xde, V243, V1217, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde, V243, V1217, S0]

================================

Block 0xd70
[0xd70:0xd70]
---
Predecessors: [0xc97, 0xd3d]
Successors: [0xd71]
---
0xd70 JUMPDEST
---
0xd70: JUMPDEST 
---
Entry stack: [V10, 0xde, V243, V1217, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde, V243, V1217, S0]

================================

Block 0xd71
[0xd71:0xdc4]
---
Predecessors: [0xd70]
Successors: [0xdc5]
---
0xd71 JUMPDEST
0xd72 PUSH1 0x4
0xd74 SLOAD
0xd75 PUSH1 0x2
0xd77 SLOAD
0xd78 PUSH1 0x40
0xd7a DUP1
0xd7b MLOAD
0xd7c DUP7
0xd7d DUP2
0xd7e MSTORE
0xd7f SWAP3
0xd80 DUP5
0xd81 MUL
0xd82 PUSH1 0x20
0xd84 DUP5
0xd85 ADD
0xd86 MSTORE
0xd87 SWAP1
0xd88 DUP4
0xd89 MUL
0xd8a DUP3
0xd8b DUP3
0xd8c ADD
0xd8d MSTORE
0xd8e MLOAD
0xd8f PUSH1 0x1
0xd91 PUSH1 0xa0
0xd93 PUSH1 0x2
0xd95 EXP
0xd96 SUB
0xd97 CALLER
0xd98 AND
0xd99 SWAP2
0xd9a PUSH32 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0xdbb SWAP2
0xdbc SWAP1
0xdbd DUP2
0xdbe SWAP1
0xdbf SUB
0xdc0 PUSH1 0x60
0xdc2 ADD
0xdc3 SWAP1
0xdc4 LOG2
---
0xd71: JUMPDEST 
0xd72: V1327 = 0x4
0xd74: V1328 = S[0x4]
0xd75: V1329 = 0x2
0xd77: V1330 = S[0x2]
0xd78: V1331 = 0x40
0xd7b: V1332 = M[0x40]
0xd7e: M[V1332] = V243
0xd81: V1333 = MUL S0 V1328
0xd82: V1334 = 0x20
0xd85: V1335 = ADD V1332 0x20
0xd86: M[V1335] = V1333
0xd89: V1336 = MUL S0 V1330
0xd8c: V1337 = ADD 0x40 V1332
0xd8d: M[V1337] = V1336
0xd8e: V1338 = M[0x40]
0xd8f: V1339 = 0x1
0xd91: V1340 = 0xa0
0xd93: V1341 = 0x2
0xd95: V1342 = EXP 0x2 0xa0
0xd96: V1343 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd97: V1344 = CALLER
0xd98: V1345 = AND V1344 0xffffffffffffffffffffffffffffffffffffffff
0xd9a: V1346 = 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0xdbf: V1347 = SUB V1332 V1338
0xdc0: V1348 = 0x60
0xdc2: V1349 = ADD 0x60 V1347
0xdc4: LOG V1338 V1349 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683 V1345
---
Entry stack: [V10, 0xde, V243, V1217, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xde, V243, V1217, S0]

================================

Block 0xdc5
[0xdc5:0xdc5]
---
Predecessors: [0xd71]
Successors: [0xdc6]
---
0xdc5 JUMPDEST
---
0xdc5: JUMPDEST 
---
Entry stack: [V10, 0xde, V243, V1217, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde, V243, V1217, S0]

================================

Block 0xdc6
[0xdc6:0xdca]
---
Predecessors: [0xdc5]
Successors: [0xde]
---
0xdc6 JUMPDEST
0xdc7 POP
0xdc8 POP
0xdc9 POP
0xdca JUMP
---
0xdc6: JUMPDEST 
0xdca: JUMP 0xde
---
Entry stack: [V10, 0xde, V243, V1217, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0xdcb
[0xdcb:0xde1]
---
Predecessors: [0x2cf]
Successors: [0xde2, 0xde6]
---
0xdcb JUMPDEST
0xdcc PUSH1 0x0
0xdce SLOAD
0xdcf CALLER
0xdd0 PUSH1 0x1
0xdd2 PUSH1 0xa0
0xdd4 PUSH1 0x2
0xdd6 EXP
0xdd7 SUB
0xdd8 SWAP1
0xdd9 DUP2
0xdda AND
0xddb SWAP2
0xddc AND
0xddd EQ
0xdde PUSH2 0xde6
0xde1 JUMPI
---
0xdcb: JUMPDEST 
0xdcc: V1350 = 0x0
0xdce: V1351 = S[0x0]
0xdcf: V1352 = CALLER
0xdd0: V1353 = 0x1
0xdd2: V1354 = 0xa0
0xdd4: V1355 = 0x2
0xdd6: V1356 = EXP 0x2 0xa0
0xdd7: V1357 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdda: V1358 = AND 0xffffffffffffffffffffffffffffffffffffffff V1352
0xddc: V1359 = AND V1351 0xffffffffffffffffffffffffffffffffffffffff
0xddd: V1360 = EQ V1359 V1358
0xdde: V1361 = 0xde6
0xde1: JUMPI 0xde6 V1360
---
Entry stack: [V10, 0xde, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde, V249]

================================

Block 0xde2
[0xde2:0xde5]
---
Predecessors: [0xdcb]
Successors: []
---
0xde2 PUSH2 0x0
0xde5 JUMP
---
0xde2: V1362 = 0x0
0xde5: THROW 
---
Entry stack: [V10, 0xde, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde, V249]

================================

Block 0xde6
[0xde6:0xe4f]
---
Predecessors: [0xdcb]
Successors: [0xe50]
---
0xde6 JUMPDEST
0xde7 PUSH1 0x0
0xde9 DUP1
0xdea SLOAD
0xdeb PUSH1 0x40
0xded MLOAD
0xdee PUSH1 0x1
0xdf0 PUSH1 0xa0
0xdf2 PUSH1 0x2
0xdf4 EXP
0xdf5 SUB
0xdf6 DUP1
0xdf7 DUP6
0xdf8 AND
0xdf9 SWAP4
0xdfa SWAP3
0xdfb AND
0xdfc SWAP2
0xdfd PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe1e SWAP2
0xe1f LOG3
0xe20 PUSH1 0x0
0xe22 DUP1
0xe23 SLOAD
0xe24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe39 NOT
0xe3a AND
0xe3b PUSH13 0x1000000000000000000000000
0xe49 DUP4
0xe4a DUP2
0xe4b MUL
0xe4c DIV
0xe4d OR
0xe4e SWAP1
0xe4f SSTORE
---
0xde6: JUMPDEST 
0xde7: V1363 = 0x0
0xdea: V1364 = S[0x0]
0xdeb: V1365 = 0x40
0xded: V1366 = M[0x40]
0xdee: V1367 = 0x1
0xdf0: V1368 = 0xa0
0xdf2: V1369 = 0x2
0xdf4: V1370 = EXP 0x2 0xa0
0xdf5: V1371 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf8: V1372 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0xdfb: V1373 = AND V1364 0xffffffffffffffffffffffffffffffffffffffff
0xdfd: V1374 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe1f: LOG V1366 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1373 V1372
0xe20: V1375 = 0x0
0xe23: V1376 = S[0x0]
0xe24: V1377 = 0xffffffffffffffffffffffffffffffffffffffff
0xe39: V1378 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe3a: V1379 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1376
0xe3b: V1380 = 0x1000000000000000000000000
0xe4b: V1381 = MUL 0x1000000000000000000000000 V249
0xe4c: V1382 = DIV V1381 0x1000000000000000000000000
0xe4d: V1383 = OR V1382 V1379
0xe4f: S[0x0] = V1383
---
Entry stack: [V10, 0xde, V249]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xde, V249]

================================

Block 0xe50
[0xe50:0xe50]
---
Predecessors: [0xde6]
Successors: [0xe51]
---
0xe50 JUMPDEST
---
0xe50: JUMPDEST 
---
Entry stack: [V10, 0xde, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xde, V249]

================================

Block 0xe51
[0xe51:0xe53]
---
Predecessors: [0xe50]
Successors: [0xde]
---
0xe51 JUMPDEST
0xe52 POP
0xe53 JUMP
---
0xe51: JUMPDEST 
0xe53: JUMP 0xde
---
Entry stack: [V10, 0xde, V249]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x2170ebf7
Entry block: 0xe0
Exit block: 0xf0
Body: 0xe0, 0xe6, 0xf0, 0x514, 0x52c, 0x530, 0x543, 0x59f, 0x5a0, 0x5a1

Function 1:
Public function signature: 0x38d52e0f
Entry block: 0x104
Exit block: 0x111
Body: 0x104, 0x10a, 0x111, 0x5a6

Function 2:
Public function signature: 0x4b750334
Entry block: 0x12d
Exit block: 0x13a
Body: 0x12d, 0x133, 0x13a, 0x5b5

Function 3:
Public function signature: 0x4ca50f59
Entry block: 0x14c
Exit block: 0xf0
Body: 0xf0, 0x14c, 0x152, 0x5bb

Function 4:
Public function signature: 0x52954e5a
Entry block: 0x16d
Exit block: 0xf0
Body: 0xf0, 0x16d, 0x173, 0x5c9, 0x5e1, 0x5e5, 0x623, 0x62d, 0x64c, 0x68a, 0x694, 0x6ae, 0x6b4, 0x6b8, 0x768, 0x772, 0x77b, 0x77c

Function 5:
Public function signature: 0x8620410b
Entry block: 0x194
Exit block: 0x13a
Body: 0x13a, 0x194, 0x19a, 0x782

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x1b3
Exit block: 0x111
Body: 0x111, 0x1b3, 0x1b9, 0x788

Function 7:
Public function signature: 0x919f8cfc
Entry block: 0x1dc
Exit block: 0xde
Body: 0xde, 0x1dc, 0x797, 0x7b1, 0x80e, 0x818, 0x82e, 0x834, 0x838, 0x86c, 0x86d

Function 8:
Public function signature: 0x976a8435
Entry block: 0x1e6
Exit block: 0x13a
Body: 0x13a, 0x1e6, 0x1ec, 0x86f

Function 9:
Public function signature: 0xa7abc124
Entry block: 0x205
Exit block: 0xde
Body: 0xde, 0x205, 0x20b, 0x875, 0x88c, 0x890, 0x905, 0x906

Function 10:
Public function signature: 0xb1099347
Entry block: 0x21a
Exit block: 0xf0
Body: 0xf0, 0x21a, 0x220, 0x90a

Function 11:
Public function signature: 0xbe86d5a7
Entry block: 0x23b
Exit block: 0xf0
Body: 0xf0, 0x23b, 0x241, 0x77b, 0x77c, 0x913, 0x92b, 0x92f, 0x96d, 0x977, 0x996, 0x9d4, 0x9de, 0x9f8, 0x9fe, 0xa02, 0xa15, 0xa8d, 0xa98, 0xa9c, 0xa9d, 0xa9e

Function 12:
Public function signature: 0xc34764cf
Entry block: 0x262
Exit block: 0xf0
Body: 0xf0, 0x262, 0x268, 0xaa4, 0xabc, 0xac0, 0xb5f, 0xb69, 0xb72, 0xb73

Function 13:
Public function signature: 0xc60ccb0e
Entry block: 0x289
Exit block: 0xde
Body: 0xde, 0x289

Function 14:
Public function signature: 0xcd53a3b7
Entry block: 0x293
Exit block: 0xf0
Body: 0xf0, 0x293, 0x299, 0xb79, 0xb91, 0xb95, 0xc26, 0xc30, 0xc39, 0xc3a

Function 15:
Public function signature: 0xeff883bd
Entry block: 0x2b7
Exit block: 0xd6c
Body: 0xde, 0x2b7, 0x2bd, 0xc3f, 0xc50, 0xc63, 0xc69, 0xc7d, 0xc8a, 0xc95, 0xc97, 0xca1, 0xd21, 0xd2b, 0xd39, 0xd3d, 0xd6c, 0xd70, 0xd71, 0xdc5, 0xdc6

Function 16:
Public function signature: 0xf2fde38b
Entry block: 0x2c9
Exit block: 0xde
Body: 0xde, 0x2c9, 0x2cf, 0xdcb, 0xde2, 0xde6, 0xe50, 0xe51

Function 17:
Public fallback function
Entry block: 0xcf
Exit block: 0xde
Body: 0xcf, 0xd3, 0xdb, 0xdc, 0xde

Function 18:
Private function
Entry block: 0x2db
Exit block: 0x50f
Body: 0x2db, 0x2f7, 0x30a, 0x310, 0x31a, 0x383, 0x38d, 0x39b, 0x3ae, 0x3ba, 0x3c4, 0x3f3, 0x3f4, 0x3fe, 0x46d, 0x477, 0x489, 0x48a, 0x4de, 0x50d, 0x50e, 0x50f

