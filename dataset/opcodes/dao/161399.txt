Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa9
0xa: JUMPI 0xa9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xad]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xa3cb72e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xad
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xa3cb72e
0x20: V14 = EQ V12 0xa3cb72e
0x21: V15 = 0xad
0x24: JUMPI 0xad V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x13e]
---
0x25 DUP1
0x26 PUSH4 0x12065fe0
0x2b EQ
0x2c PUSH2 0x13e
0x2f JUMPI
---
0x26: V16 = 0x12065fe0
0x2b: V17 = EQ 0x12065fe0 V12
0x2c: V18 = 0x13e
0x2f: JUMPI 0x13e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x163]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0x163
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0x163
0x3a: JUMPI 0x163 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x17b]
---
0x3b DUP1
0x3c PUSH4 0x3aecd0e3
0x41 EQ
0x42 PUSH2 0x17b
0x45 JUMPI
---
0x3c: V22 = 0x3aecd0e3
0x41: V23 = EQ 0x3aecd0e3 V12
0x42: V24 = 0x17b
0x45: JUMPI 0x17b V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1ac]
---
0x46 DUP1
0x47 PUSH4 0x477bddaa
0x4c EQ
0x4d PUSH2 0x1ac
0x50 JUMPI
---
0x47: V25 = 0x477bddaa
0x4c: V26 = EQ 0x477bddaa V12
0x4d: V27 = 0x1ac
0x50: JUMPI 0x1ac V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1cd]
---
0x51 DUP1
0x52 PUSH4 0x5256bb86
0x57 EQ
0x58 PUSH2 0x1cd
0x5b JUMPI
---
0x52: V28 = 0x5256bb86
0x57: V29 = EQ 0x5256bb86 V12
0x58: V30 = 0x1cd
0x5b: JUMPI 0x1cd V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x21e]
---
0x5c DUP1
0x5d PUSH4 0x58d2d81a
0x62 EQ
0x63 PUSH2 0x21e
0x66 JUMPI
---
0x5d: V31 = 0x58d2d81a
0x62: V32 = EQ 0x58d2d81a V12
0x63: V33 = 0x21e
0x66: JUMPI 0x21e V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x281]
---
0x67 DUP1
0x68 PUSH4 0x5fd8c710
0x6d EQ
0x6e PUSH2 0x281
0x71 JUMPI
---
0x68: V34 = 0x5fd8c710
0x6d: V35 = EQ 0x5fd8c710 V12
0x6e: V36 = 0x281
0x71: JUMPI 0x281 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x296]
---
0x72 DUP1
0x73 PUSH4 0x757740f9
0x78 EQ
0x79 PUSH2 0x296
0x7c JUMPI
---
0x73: V37 = 0x757740f9
0x78: V38 = EQ 0x757740f9 V12
0x79: V39 = 0x296
0x7c: JUMPI 0x296 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2f9]
---
0x7d DUP1
0x7e PUSH4 0x853828b6
0x83 EQ
0x84 PUSH2 0x2f9
0x87 JUMPI
---
0x7e: V40 = 0x853828b6
0x83: V41 = EQ 0x853828b6 V12
0x84: V42 = 0x2f9
0x87: JUMPI 0x2f9 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x30e]
---
0x88 DUP1
0x89 PUSH4 0x9e281a98
0x8e EQ
0x8f PUSH2 0x30e
0x92 JUMPI
---
0x89: V43 = 0x9e281a98
0x8e: V44 = EQ 0x9e281a98 V12
0x8f: V45 = 0x30e
0x92: JUMPI 0x30e V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x332]
---
0x93 DUP1
0x94 PUSH4 0xb2bdfa7b
0x99 EQ
0x9a PUSH2 0x332
0x9d JUMPI
---
0x94: V46 = 0xb2bdfa7b
0x99: V47 = EQ 0xb2bdfa7b V12
0x9a: V48 = 0x332
0x9d: JUMPI 0x332 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x361]
---
0x9e DUP1
0x9f PUSH4 0xd0e30db0
0xa4 EQ
0xa5 PUSH2 0x361
0xa8 JUMPI
---
0x9f: V49 = 0xd0e30db0
0xa4: V50 = EQ 0xd0e30db0 V12
0xa5: V51 = 0x361
0xa8: JUMPI 0x361 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xa9]
---
Predecessors: [0x0, 0x9e, 0x3a3, 0x59e, 0x756, 0x953, 0xcb7]
Successors: [0xaa]
---
0xa9 JUMPDEST
---
0xa9: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x952}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x952}, S1, S0]

================================

Block 0xaa
[0xaa:0xaa]
---
Predecessors: [0xa9]
Successors: [0xab]
---
0xaa JUMPDEST
---
0xaa: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x952}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x952}, S1, S0]

================================

Block 0xab
[0xab:0xac]
---
Predecessors: [0xaa]
Successors: []
---
0xab JUMPDEST
0xac STOP
---
0xab: JUMPDEST 
0xac: STOP 
---
Entry stack: [V12, S3, {0xa9, 0x952}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x952}, S1, S0]

================================

Block 0xad
[0xad:0xb3]
---
Predecessors: [0xb]
Successors: [0xb4, 0xb8]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xad: JUMPDEST 
0xae: V52 = CALLVALUE
0xaf: V53 = ISZERO V52
0xb0: V54 = 0xb8
0xb3: JUMPI 0xb8 V53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xad]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V55 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb8
[0xb8:0x13b]
---
Predecessors: [0xad]
Successors: [0x36b]
---
0xb8 JUMPDEST
0xb9 PUSH2 0xa9
0xbc PUSH1 0x4
0xbe PUSH1 0x24
0xc0 DUP2
0xc1 CALLDATALOAD
0xc2 DUP2
0xc3 DUP2
0xc4 ADD
0xc5 SWAP1
0xc6 DUP4
0xc7 ADD
0xc8 CALLDATALOAD
0xc9 DUP1
0xca PUSH1 0x20
0xcc DUP2
0xcd DUP2
0xce MUL
0xcf ADD
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 SWAP1
0xd4 DUP2
0xd5 ADD
0xd6 PUSH1 0x40
0xd8 MSTORE
0xd9 DUP1
0xda SWAP4
0xdb SWAP3
0xdc SWAP2
0xdd SWAP1
0xde DUP2
0xdf DUP2
0xe0 MSTORE
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 DUP4
0xe5 DUP4
0xe6 PUSH1 0x20
0xe8 MUL
0xe9 DUP1
0xea DUP3
0xeb DUP5
0xec CALLDATACOPY
0xed DUP3
0xee ADD
0xef SWAP2
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 POP
0xf6 SWAP2
0xf7 SWAP1
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa SWAP1
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP1
0xff DUP3
0x100 ADD
0x101 DUP1
0x102 CALLDATALOAD
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 DUP1
0x109 DUP1
0x10a PUSH1 0x20
0x10c MUL
0x10d PUSH1 0x20
0x10f ADD
0x110 PUSH1 0x40
0x112 MLOAD
0x113 SWAP1
0x114 DUP2
0x115 ADD
0x116 PUSH1 0x40
0x118 MSTORE
0x119 DUP1
0x11a SWAP4
0x11b SWAP3
0x11c SWAP2
0x11d SWAP1
0x11e DUP2
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 ADD
0x124 DUP4
0x125 DUP4
0x126 PUSH1 0x20
0x128 MUL
0x129 DUP1
0x12a DUP3
0x12b DUP5
0x12c CALLDATACOPY
0x12d POP
0x12e SWAP5
0x12f SWAP7
0x130 POP
0x131 PUSH2 0x36b
0x134 SWAP6
0x135 POP
0x136 POP
0x137 POP
0x138 POP
0x139 POP
0x13a POP
0x13b JUMP
---
0xb8: JUMPDEST 
0xb9: V56 = 0xa9
0xbc: V57 = 0x4
0xbe: V58 = 0x24
0xc1: V59 = CALLDATALOAD 0x4
0xc4: V60 = ADD V59 0x24
0xc7: V61 = ADD 0x4 V59
0xc8: V62 = CALLDATALOAD V61
0xca: V63 = 0x20
0xce: V64 = MUL 0x20 V62
0xcf: V65 = ADD V64 0x20
0xd0: V66 = 0x40
0xd2: V67 = M[0x40]
0xd5: V68 = ADD V67 V65
0xd6: V69 = 0x40
0xd8: M[0x40] = V68
0xe0: M[V67] = V62
0xe1: V70 = 0x20
0xe3: V71 = ADD 0x20 V67
0xe6: V72 = 0x20
0xe8: V73 = MUL 0x20 V62
0xec: CALLDATACOPY V71 V60 V73
0xee: V74 = ADD V71 V73
0xf9: V75 = CALLDATALOAD 0x24
0xfb: V76 = 0x20
0xfd: V77 = ADD 0x20 0x24
0x100: V78 = ADD 0x4 V75
0x102: V79 = CALLDATALOAD V78
0x104: V80 = 0x20
0x106: V81 = ADD 0x20 V78
0x10a: V82 = 0x20
0x10c: V83 = MUL 0x20 V79
0x10d: V84 = 0x20
0x10f: V85 = ADD 0x20 V83
0x110: V86 = 0x40
0x112: V87 = M[0x40]
0x115: V88 = ADD V87 V85
0x116: V89 = 0x40
0x118: M[0x40] = V88
0x120: M[V87] = V79
0x121: V90 = 0x20
0x123: V91 = ADD 0x20 V87
0x126: V92 = 0x20
0x128: V93 = MUL 0x20 V79
0x12c: CALLDATACOPY V91 V81 V93
0x131: V94 = 0x36b
0x13b: JUMP 0x36b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V67, V87]
Exit stack: [V12, 0xa9, V67, V87]

================================

Block 0x13c
[0x13c:0x13d]
---
Predecessors: []
Successors: []
---
0x13c JUMPDEST
0x13d STOP
---
0x13c: JUMPDEST 
0x13d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x25]
Successors: [0x145, 0x149]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V95 = CALLVALUE
0x140: V96 = ISZERO V95
0x141: V97 = 0x149
0x144: JUMPI 0x149 V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13e]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V98 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x149
[0x149:0x150]
---
Predecessors: [0x13e]
Successors: [0x3a7]
---
0x149 JUMPDEST
0x14a PUSH2 0x151
0x14d PUSH2 0x3a7
0x150 JUMP
---
0x149: JUMPDEST 
0x14a: V99 = 0x151
0x14d: V100 = 0x3a7
0x150: JUMP 0x3a7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x151]
Exit stack: [V12, 0x151]

================================

Block 0x151
[0x151:0x162]
---
Predecessors: [0x427, 0x544]
Successors: []
---
0x151 JUMPDEST
0x152 PUSH1 0x40
0x154 MLOAD
0x155 SWAP1
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x20
0x15a ADD
0x15b PUSH1 0x40
0x15d MLOAD
0x15e DUP1
0x15f SWAP2
0x160 SUB
0x161 SWAP1
0x162 RETURN
---
0x151: JUMPDEST 
0x152: V101 = 0x40
0x154: V102 = M[0x40]
0x157: M[V102] = S0
0x158: V103 = 0x20
0x15a: V104 = ADD 0x20 V102
0x15b: V105 = 0x40
0x15d: V106 = M[0x40]
0x160: V107 = SUB V104 V106
0x162: RETURN V106 V107
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1]

================================

Block 0x163
[0x163:0x169]
---
Predecessors: [0x30]
Successors: [0x16a, 0x16e]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x163: JUMPDEST 
0x164: V108 = CALLVALUE
0x165: V109 = ISZERO V108
0x166: V110 = 0x16e
0x169: JUMPI 0x16e V109
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x163]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V111 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16e
[0x16e:0x178]
---
Predecessors: [0x163]
Successors: [0x42a]
---
0x16e JUMPDEST
0x16f PUSH2 0xa9
0x172 PUSH1 0x4
0x174 CALLDATALOAD
0x175 PUSH2 0x42a
0x178 JUMP
---
0x16e: JUMPDEST 
0x16f: V112 = 0xa9
0x172: V113 = 0x4
0x174: V114 = CALLDATALOAD 0x4
0x175: V115 = 0x42a
0x178: JUMP 0x42a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V114]
Exit stack: [V12, 0xa9, V114]

================================

Block 0x179
[0x179:0x17a]
---
Predecessors: []
Successors: []
---
0x179 JUMPDEST
0x17a STOP
---
0x179: JUMPDEST 
0x17a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x17b
[0x17b:0x181]
---
Predecessors: [0x3b]
Successors: [0x182, 0x186]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d ISZERO
0x17e PUSH2 0x186
0x181 JUMPI
---
0x17b: JUMPDEST 
0x17c: V116 = CALLVALUE
0x17d: V117 = ISZERO V116
0x17e: V118 = 0x186
0x181: JUMPI 0x186 V117
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x182
[0x182:0x185]
---
Predecessors: [0x17b]
Successors: []
---
0x182 PUSH1 0x0
0x184 DUP1
0x185 REVERT
---
0x182: V119 = 0x0
0x185: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x186
[0x186:0x199]
---
Predecessors: [0x17b]
Successors: [0x4c4]
---
0x186 JUMPDEST
0x187 PUSH2 0x151
0x18a PUSH1 0x1
0x18c PUSH1 0xa0
0x18e PUSH1 0x2
0x190 EXP
0x191 SUB
0x192 PUSH1 0x4
0x194 CALLDATALOAD
0x195 AND
0x196 PUSH2 0x4c4
0x199 JUMP
---
0x186: JUMPDEST 
0x187: V120 = 0x151
0x18a: V121 = 0x1
0x18c: V122 = 0xa0
0x18e: V123 = 0x2
0x190: V124 = EXP 0x2 0xa0
0x191: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x192: V126 = 0x4
0x194: V127 = CALLDATALOAD 0x4
0x195: V128 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x196: V129 = 0x4c4
0x199: JUMP 0x4c4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x151, V128]
Exit stack: [V12, 0x151, V128]

================================

Block 0x19a
[0x19a:0x1ab]
---
Predecessors: []
Successors: []
---
0x19a JUMPDEST
0x19b PUSH1 0x40
0x19d MLOAD
0x19e SWAP1
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 DUP1
0x1a8 SWAP2
0x1a9 SUB
0x1aa SWAP1
0x1ab RETURN
---
0x19a: JUMPDEST 
0x19b: V130 = 0x40
0x19d: V131 = M[0x40]
0x1a0: M[V131] = S0
0x1a1: V132 = 0x20
0x1a3: V133 = ADD 0x20 V131
0x1a4: V134 = 0x40
0x1a6: V135 = M[0x40]
0x1a9: V136 = SUB V133 V135
0x1ab: RETURN V135 V136
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ac
[0x1ac:0x1b2]
---
Predecessors: [0x46]
Successors: [0x1b3, 0x1b7]
---
0x1ac JUMPDEST
0x1ad CALLVALUE
0x1ae ISZERO
0x1af PUSH2 0x1b7
0x1b2 JUMPI
---
0x1ac: JUMPDEST 
0x1ad: V137 = CALLVALUE
0x1ae: V138 = ISZERO V137
0x1af: V139 = 0x1b7
0x1b2: JUMPI 0x1b7 V138
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b3
[0x1b3:0x1b6]
---
Predecessors: [0x1ac]
Successors: []
---
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 REVERT
---
0x1b3: V140 = 0x0
0x1b6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b7
[0x1b7:0x1ca]
---
Predecessors: [0x1ac]
Successors: [0x549]
---
0x1b7 JUMPDEST
0x1b8 PUSH2 0xa9
0x1bb PUSH1 0x1
0x1bd PUSH1 0xa0
0x1bf PUSH1 0x2
0x1c1 EXP
0x1c2 SUB
0x1c3 PUSH1 0x4
0x1c5 CALLDATALOAD
0x1c6 AND
0x1c7 PUSH2 0x549
0x1ca JUMP
---
0x1b7: JUMPDEST 
0x1b8: V141 = 0xa9
0x1bb: V142 = 0x1
0x1bd: V143 = 0xa0
0x1bf: V144 = 0x2
0x1c1: V145 = EXP 0x2 0xa0
0x1c2: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c3: V147 = 0x4
0x1c5: V148 = CALLDATALOAD 0x4
0x1c6: V149 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V150 = 0x549
0x1ca: JUMP 0x549
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V149]
Exit stack: [V12, 0xa9, V149]

================================

Block 0x1cb
[0x1cb:0x1cc]
---
Predecessors: []
Successors: []
---
0x1cb JUMPDEST
0x1cc STOP
---
0x1cb: JUMPDEST 
0x1cc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1cd
[0x1cd:0x1d3]
---
Predecessors: [0x51]
Successors: [0x1d4, 0x1d8]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V151 = CALLVALUE
0x1cf: V152 = ISZERO V151
0x1d0: V153 = 0x1d8
0x1d3: JUMPI 0x1d8 V152
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V154 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d8
[0x1d8:0x21b]
---
Predecessors: [0x1cd]
Successors: [0x5a1]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0xa9
0x1dc PUSH1 0x4
0x1de PUSH1 0x24
0x1e0 DUP2
0x1e1 CALLDATALOAD
0x1e2 DUP2
0x1e3 DUP2
0x1e4 ADD
0x1e5 SWAP1
0x1e6 DUP4
0x1e7 ADD
0x1e8 CALLDATALOAD
0x1e9 DUP1
0x1ea PUSH1 0x20
0x1ec DUP2
0x1ed DUP2
0x1ee MUL
0x1ef ADD
0x1f0 PUSH1 0x40
0x1f2 MLOAD
0x1f3 SWAP1
0x1f4 DUP2
0x1f5 ADD
0x1f6 PUSH1 0x40
0x1f8 MSTORE
0x1f9 DUP1
0x1fa SWAP4
0x1fb SWAP3
0x1fc SWAP2
0x1fd SWAP1
0x1fe DUP2
0x1ff DUP2
0x200 MSTORE
0x201 PUSH1 0x20
0x203 ADD
0x204 DUP4
0x205 DUP4
0x206 PUSH1 0x20
0x208 MUL
0x209 DUP1
0x20a DUP3
0x20b DUP5
0x20c CALLDATACOPY
0x20d POP
0x20e SWAP5
0x20f SWAP7
0x210 POP
0x211 PUSH2 0x5a1
0x214 SWAP6
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 POP
0x21a POP
0x21b JUMP
---
0x1d8: JUMPDEST 
0x1d9: V155 = 0xa9
0x1dc: V156 = 0x4
0x1de: V157 = 0x24
0x1e1: V158 = CALLDATALOAD 0x4
0x1e4: V159 = ADD V158 0x24
0x1e7: V160 = ADD 0x4 V158
0x1e8: V161 = CALLDATALOAD V160
0x1ea: V162 = 0x20
0x1ee: V163 = MUL 0x20 V161
0x1ef: V164 = ADD V163 0x20
0x1f0: V165 = 0x40
0x1f2: V166 = M[0x40]
0x1f5: V167 = ADD V166 V164
0x1f6: V168 = 0x40
0x1f8: M[0x40] = V167
0x200: M[V166] = V161
0x201: V169 = 0x20
0x203: V170 = ADD 0x20 V166
0x206: V171 = 0x20
0x208: V172 = MUL 0x20 V161
0x20c: CALLDATACOPY V170 V159 V172
0x211: V173 = 0x5a1
0x21b: JUMP 0x5a1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V166]
Exit stack: [V12, 0xa9, V166]

================================

Block 0x21c
[0x21c:0x21d]
---
Predecessors: []
Successors: []
---
0x21c JUMPDEST
0x21d STOP
---
0x21c: JUMPDEST 
0x21d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21e
[0x21e:0x224]
---
Predecessors: [0x5c]
Successors: [0x225, 0x229]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 ISZERO
0x221 PUSH2 0x229
0x224 JUMPI
---
0x21e: JUMPDEST 
0x21f: V174 = CALLVALUE
0x220: V175 = ISZERO V174
0x221: V176 = 0x229
0x224: JUMPI 0x229 V175
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x21e]
Successors: []
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
---
0x225: V177 = 0x0
0x228: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x229
[0x229:0x26c]
---
Predecessors: [0x21e]
Successors: [0x759]
---
0x229 JUMPDEST
0x22a PUSH2 0x26d
0x22d PUSH1 0x4
0x22f PUSH1 0x24
0x231 DUP2
0x232 CALLDATALOAD
0x233 DUP2
0x234 DUP2
0x235 ADD
0x236 SWAP1
0x237 DUP4
0x238 ADD
0x239 CALLDATALOAD
0x23a DUP1
0x23b PUSH1 0x20
0x23d DUP2
0x23e DUP2
0x23f MUL
0x240 ADD
0x241 PUSH1 0x40
0x243 MLOAD
0x244 SWAP1
0x245 DUP2
0x246 ADD
0x247 PUSH1 0x40
0x249 MSTORE
0x24a DUP1
0x24b SWAP4
0x24c SWAP3
0x24d SWAP2
0x24e SWAP1
0x24f DUP2
0x250 DUP2
0x251 MSTORE
0x252 PUSH1 0x20
0x254 ADD
0x255 DUP4
0x256 DUP4
0x257 PUSH1 0x20
0x259 MUL
0x25a DUP1
0x25b DUP3
0x25c DUP5
0x25d CALLDATACOPY
0x25e POP
0x25f SWAP5
0x260 SWAP7
0x261 POP
0x262 PUSH2 0x759
0x265 SWAP6
0x266 POP
0x267 POP
0x268 POP
0x269 POP
0x26a POP
0x26b POP
0x26c JUMP
---
0x229: JUMPDEST 
0x22a: V178 = 0x26d
0x22d: V179 = 0x4
0x22f: V180 = 0x24
0x232: V181 = CALLDATALOAD 0x4
0x235: V182 = ADD V181 0x24
0x238: V183 = ADD 0x4 V181
0x239: V184 = CALLDATALOAD V183
0x23b: V185 = 0x20
0x23f: V186 = MUL 0x20 V184
0x240: V187 = ADD V186 0x20
0x241: V188 = 0x40
0x243: V189 = M[0x40]
0x246: V190 = ADD V189 V187
0x247: V191 = 0x40
0x249: M[0x40] = V190
0x251: M[V189] = V184
0x252: V192 = 0x20
0x254: V193 = ADD 0x20 V189
0x257: V194 = 0x20
0x259: V195 = MUL 0x20 V184
0x25d: CALLDATACOPY V193 V182 V195
0x262: V196 = 0x759
0x26c: JUMP 0x759
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x26d, V189]
Exit stack: [V12, 0x26d, V189]

================================

Block 0x26d
[0x26d:0x280]
---
Predecessors: [0x544, 0xb19]
Successors: []
---
0x26d JUMPDEST
0x26e PUSH1 0x40
0x270 MLOAD
0x271 SWAP1
0x272 ISZERO
0x273 ISZERO
0x274 DUP2
0x275 MSTORE
0x276 PUSH1 0x20
0x278 ADD
0x279 PUSH1 0x40
0x27b MLOAD
0x27c DUP1
0x27d SWAP2
0x27e SUB
0x27f SWAP1
0x280 RETURN
---
0x26d: JUMPDEST 
0x26e: V197 = 0x40
0x270: V198 = M[0x40]
0x272: V199 = ISZERO S0
0x273: V200 = ISZERO V199
0x275: M[V198] = V200
0x276: V201 = 0x20
0x278: V202 = ADD 0x20 V198
0x279: V203 = 0x40
0x27b: V204 = M[0x40]
0x27e: V205 = SUB V202 V204
0x280: RETURN V204 V205
---
Entry stack: [V12, 0xa9, V67, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa9, V67, S1]

================================

Block 0x281
[0x281:0x287]
---
Predecessors: [0x67]
Successors: [0x288, 0x28c]
---
0x281 JUMPDEST
0x282 CALLVALUE
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x281: JUMPDEST 
0x282: V206 = CALLVALUE
0x283: V207 = ISZERO V206
0x284: V208 = 0x28c
0x287: JUMPI 0x28c V207
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x281]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V209 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28c
[0x28c:0x293]
---
Predecessors: [0x281]
Successors: [0x927]
---
0x28c JUMPDEST
0x28d PUSH2 0xa9
0x290 PUSH2 0x927
0x293 JUMP
---
0x28c: JUMPDEST 
0x28d: V210 = 0xa9
0x290: V211 = 0x927
0x293: JUMP 0x927
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V12, 0xa9]

================================

Block 0x294
[0x294:0x295]
---
Predecessors: []
Successors: []
---
0x294 JUMPDEST
0x295 STOP
---
0x294: JUMPDEST 
0x295: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x296
[0x296:0x29c]
---
Predecessors: [0x72]
Successors: [0x29d, 0x2a1]
---
0x296 JUMPDEST
0x297 CALLVALUE
0x298 ISZERO
0x299 PUSH2 0x2a1
0x29c JUMPI
---
0x296: JUMPDEST 
0x297: V212 = CALLVALUE
0x298: V213 = ISZERO V212
0x299: V214 = 0x2a1
0x29c: JUMPI 0x2a1 V213
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29d
[0x29d:0x2a0]
---
Predecessors: [0x296]
Successors: []
---
0x29d PUSH1 0x0
0x29f DUP1
0x2a0 REVERT
---
0x29d: V215 = 0x0
0x2a0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a1
[0x2a1:0x2e4]
---
Predecessors: [0x296]
Successors: [0x955]
---
0x2a1 JUMPDEST
0x2a2 PUSH2 0x26d
0x2a5 PUSH1 0x4
0x2a7 PUSH1 0x24
0x2a9 DUP2
0x2aa CALLDATALOAD
0x2ab DUP2
0x2ac DUP2
0x2ad ADD
0x2ae SWAP1
0x2af DUP4
0x2b0 ADD
0x2b1 CALLDATALOAD
0x2b2 DUP1
0x2b3 PUSH1 0x20
0x2b5 DUP2
0x2b6 DUP2
0x2b7 MUL
0x2b8 ADD
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc SWAP1
0x2bd DUP2
0x2be ADD
0x2bf PUSH1 0x40
0x2c1 MSTORE
0x2c2 DUP1
0x2c3 SWAP4
0x2c4 SWAP3
0x2c5 SWAP2
0x2c6 SWAP1
0x2c7 DUP2
0x2c8 DUP2
0x2c9 MSTORE
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd DUP4
0x2ce DUP4
0x2cf PUSH1 0x20
0x2d1 MUL
0x2d2 DUP1
0x2d3 DUP3
0x2d4 DUP5
0x2d5 CALLDATACOPY
0x2d6 POP
0x2d7 SWAP5
0x2d8 SWAP7
0x2d9 POP
0x2da PUSH2 0x955
0x2dd SWAP6
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 POP
0x2e2 POP
0x2e3 POP
0x2e4 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V216 = 0x26d
0x2a5: V217 = 0x4
0x2a7: V218 = 0x24
0x2aa: V219 = CALLDATALOAD 0x4
0x2ad: V220 = ADD V219 0x24
0x2b0: V221 = ADD 0x4 V219
0x2b1: V222 = CALLDATALOAD V221
0x2b3: V223 = 0x20
0x2b7: V224 = MUL 0x20 V222
0x2b8: V225 = ADD V224 0x20
0x2b9: V226 = 0x40
0x2bb: V227 = M[0x40]
0x2be: V228 = ADD V227 V225
0x2bf: V229 = 0x40
0x2c1: M[0x40] = V228
0x2c9: M[V227] = V222
0x2ca: V230 = 0x20
0x2cc: V231 = ADD 0x20 V227
0x2cf: V232 = 0x20
0x2d1: V233 = MUL 0x20 V222
0x2d5: CALLDATACOPY V231 V220 V233
0x2da: V234 = 0x955
0x2e4: JUMP 0x955
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x26d, V227]
Exit stack: [V12, 0x26d, V227]

================================

Block 0x2e5
[0x2e5:0x2f8]
---
Predecessors: []
Successors: []
---
0x2e5 JUMPDEST
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 SWAP1
0x2ea ISZERO
0x2eb ISZERO
0x2ec DUP2
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 ADD
0x2f1 PUSH1 0x40
0x2f3 MLOAD
0x2f4 DUP1
0x2f5 SWAP2
0x2f6 SUB
0x2f7 SWAP1
0x2f8 RETURN
---
0x2e5: JUMPDEST 
0x2e6: V235 = 0x40
0x2e8: V236 = M[0x40]
0x2ea: V237 = ISZERO S0
0x2eb: V238 = ISZERO V237
0x2ed: M[V236] = V238
0x2ee: V239 = 0x20
0x2f0: V240 = ADD 0x20 V236
0x2f1: V241 = 0x40
0x2f3: V242 = M[0x40]
0x2f6: V243 = SUB V240 V242
0x2f8: RETURN V242 V243
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f9
[0x2f9:0x2ff]
---
Predecessors: [0x7d]
Successors: [0x300, 0x304]
---
0x2f9 JUMPDEST
0x2fa CALLVALUE
0x2fb ISZERO
0x2fc PUSH2 0x304
0x2ff JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V244 = CALLVALUE
0x2fb: V245 = ISZERO V244
0x2fc: V246 = 0x304
0x2ff: JUMPI 0x304 V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x300
[0x300:0x303]
---
Predecessors: [0x2f9]
Successors: []
---
0x300 PUSH1 0x0
0x302 DUP1
0x303 REVERT
---
0x300: V247 = 0x0
0x303: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x304
[0x304:0x30b]
---
Predecessors: [0x2f9]
Successors: [0xb1e]
---
0x304 JUMPDEST
0x305 PUSH2 0xa9
0x308 PUSH2 0xb1e
0x30b JUMP
---
0x304: JUMPDEST 
0x305: V248 = 0xa9
0x308: V249 = 0xb1e
0x30b: JUMP 0xb1e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V12, 0xa9]

================================

Block 0x30c
[0x30c:0x30d]
---
Predecessors: []
Successors: []
---
0x30c JUMPDEST
0x30d STOP
---
0x30c: JUMPDEST 
0x30d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x30e
[0x30e:0x314]
---
Predecessors: [0x88]
Successors: [0x315, 0x319]
---
0x30e JUMPDEST
0x30f CALLVALUE
0x310 ISZERO
0x311 PUSH2 0x319
0x314 JUMPI
---
0x30e: JUMPDEST 
0x30f: V250 = CALLVALUE
0x310: V251 = ISZERO V250
0x311: V252 = 0x319
0x314: JUMPI 0x319 V251
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x315
[0x315:0x318]
---
Predecessors: [0x30e]
Successors: []
---
0x315 PUSH1 0x0
0x317 DUP1
0x318 REVERT
---
0x315: V253 = 0x0
0x318: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x319
[0x319:0x32f]
---
Predecessors: [0x30e]
Successors: [0xb49]
---
0x319 JUMPDEST
0x31a PUSH2 0xa9
0x31d PUSH1 0x1
0x31f PUSH1 0xa0
0x321 PUSH1 0x2
0x323 EXP
0x324 SUB
0x325 PUSH1 0x4
0x327 CALLDATALOAD
0x328 AND
0x329 PUSH1 0x24
0x32b CALLDATALOAD
0x32c PUSH2 0xb49
0x32f JUMP
---
0x319: JUMPDEST 
0x31a: V254 = 0xa9
0x31d: V255 = 0x1
0x31f: V256 = 0xa0
0x321: V257 = 0x2
0x323: V258 = EXP 0x2 0xa0
0x324: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x325: V260 = 0x4
0x327: V261 = CALLDATALOAD 0x4
0x328: V262 = AND V261 0xffffffffffffffffffffffffffffffffffffffff
0x329: V263 = 0x24
0x32b: V264 = CALLDATALOAD 0x24
0x32c: V265 = 0xb49
0x32f: JUMP 0xb49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V262, V264]
Exit stack: [V12, 0xa9, V262, V264]

================================

Block 0x330
[0x330:0x331]
---
Predecessors: []
Successors: []
---
0x330 JUMPDEST
0x331 STOP
---
0x330: JUMPDEST 
0x331: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x332
[0x332:0x338]
---
Predecessors: [0x93]
Successors: [0x339, 0x33d]
---
0x332 JUMPDEST
0x333 CALLVALUE
0x334 ISZERO
0x335 PUSH2 0x33d
0x338 JUMPI
---
0x332: JUMPDEST 
0x333: V266 = CALLVALUE
0x334: V267 = ISZERO V266
0x335: V268 = 0x33d
0x338: JUMPI 0x33d V267
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x339
[0x339:0x33c]
---
Predecessors: [0x332]
Successors: []
---
0x339 PUSH1 0x0
0x33b DUP1
0x33c REVERT
---
0x339: V269 = 0x0
0x33c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33d
[0x33d:0x344]
---
Predecessors: [0x332]
Successors: [0xc53]
---
0x33d JUMPDEST
0x33e PUSH2 0x345
0x341 PUSH2 0xc53
0x344 JUMP
---
0x33d: JUMPDEST 
0x33e: V270 = 0x345
0x341: V271 = 0xc53
0x344: JUMP 0xc53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x345]
Exit stack: [V12, 0x345]

================================

Block 0x345
[0x345:0x360]
---
Predecessors: [0xc53]
Successors: []
---
0x345 JUMPDEST
0x346 PUSH1 0x40
0x348 MLOAD
0x349 PUSH1 0x1
0x34b PUSH1 0xa0
0x34d PUSH1 0x2
0x34f EXP
0x350 SUB
0x351 SWAP1
0x352 SWAP2
0x353 AND
0x354 DUP2
0x355 MSTORE
0x356 PUSH1 0x20
0x358 ADD
0x359 PUSH1 0x40
0x35b MLOAD
0x35c DUP1
0x35d SWAP2
0x35e SUB
0x35f SWAP1
0x360 RETURN
---
0x345: JUMPDEST 
0x346: V272 = 0x40
0x348: V273 = M[0x40]
0x349: V274 = 0x1
0x34b: V275 = 0xa0
0x34d: V276 = 0x2
0x34f: V277 = EXP 0x2 0xa0
0x350: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V279 = AND V1221 0xffffffffffffffffffffffffffffffffffffffff
0x355: M[V273] = V279
0x356: V280 = 0x20
0x358: V281 = ADD 0x20 V273
0x359: V282 = 0x40
0x35b: V283 = M[0x40]
0x35e: V284 = SUB V281 V283
0x360: RETURN V283 V284
---
Entry stack: [V12, 0x345, V1221]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x345]

================================

Block 0x361
[0x361:0x368]
---
Predecessors: [0x9e]
Successors: [0xc62]
---
0x361 JUMPDEST
0x362 PUSH2 0xa9
0x365 PUSH2 0xc62
0x368 JUMP
---
0x361: JUMPDEST 
0x362: V285 = 0xa9
0x365: V286 = 0xc62
0x368: JUMP 0xc62
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V12, 0xa9]

================================

Block 0x369
[0x369:0x36a]
---
Predecessors: []
Successors: []
---
0x369 JUMPDEST
0x36a STOP
---
0x369: JUMPDEST 
0x36a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x36b
[0x36b:0x373]
---
Predecessors: [0xb8]
Successors: [0x759]
---
0x36b JUMPDEST
0x36c PUSH2 0x374
0x36f DUP3
0x370 PUSH2 0x759
0x373 JUMP
---
0x36b: JUMPDEST 
0x36c: V287 = 0x374
0x370: V288 = 0x759
0x373: JUMP 0x759
---
Entry stack: [V12, 0xa9, V67, V87]
Stack pops: 2
Stack additions: [S1, S0, 0x374, S1]
Exit stack: [V12, 0xa9, V67, V87, 0x374, V67]

================================

Block 0x374
[0x374:0x37a]
---
Predecessors: [0x544]
Successors: [0x37b, 0x386]
---
0x374 JUMPDEST
0x375 ISZERO
0x376 DUP1
0x377 PUSH2 0x386
0x37a JUMPI
---
0x374: JUMPDEST 
0x375: V289 = ISZERO V473
0x377: V290 = 0x386
0x37a: JUMPI 0x386 V289
---
Entry stack: [V12, 0xa9, V67, S1, V473]
Stack pops: 1
Stack additions: [V289]
Exit stack: [V12, 0xa9, V67, S1, V289]

================================

Block 0x37b
[0x37b:0x383]
---
Predecessors: [0x374]
Successors: [0x955]
---
0x37b POP
0x37c PUSH2 0x384
0x37f DUP2
0x380 PUSH2 0x955
0x383 JUMP
---
0x37c: V291 = 0x384
0x380: V292 = 0x955
0x383: JUMP 0x955
---
Entry stack: [V12, 0xa9, V67, S1, V289]
Stack pops: 2
Stack additions: [S1, 0x384, S1]
Exit stack: [V12, 0xa9, V67, S1, 0x384, S1]

================================

Block 0x384
[0x384:0x385]
---
Predecessors: [0xb19]
Successors: [0x386]
---
0x384 JUMPDEST
0x385 ISZERO
---
0x384: JUMPDEST 
0x385: V293 = ISZERO V1080
---
Entry stack: [V12, 0xa9, V67, S1, V1080]
Stack pops: 1
Stack additions: [V293]
Exit stack: [V12, 0xa9, V67, S1, V293]

================================

Block 0x386
[0x386:0x38b]
---
Predecessors: [0x374, 0x384]
Successors: [0x38c, 0x390]
---
0x386 JUMPDEST
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x386: JUMPDEST 
0x387: V294 = ISZERO S0
0x388: V295 = 0x390
0x38b: JUMPI 0x390 V294
---
Entry stack: [V12, 0xa9, V67, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa9, V67, S1]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x386]
Successors: [0x3a2]
---
0x38c PUSH2 0x3a2
0x38f JUMP
---
0x38c: V296 = 0x3a2
0x38f: JUMP 0x3a2
---
Entry stack: [V12, 0xa9, V67, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, V87]

================================

Block 0x390
[0x390:0x398]
---
Predecessors: [0x386]
Successors: [0x5a1]
---
0x390 JUMPDEST
0x391 PUSH2 0x399
0x394 DUP3
0x395 PUSH2 0x5a1
0x398 JUMP
---
0x390: JUMPDEST 
0x391: V297 = 0x399
0x395: V298 = 0x5a1
0x398: JUMP 0x5a1
---
Entry stack: [V12, 0xa9, V67, V87]
Stack pops: 2
Stack additions: [S1, S0, 0x399, S1]
Exit stack: [V12, 0xa9, V67, V87, 0x399, V67]

================================

Block 0x399
[0x399:0x3a1]
---
Predecessors: [0x756]
Successors: [0x5a1]
---
0x399 JUMPDEST
0x39a PUSH2 0x3a2
0x39d DUP2
0x39e PUSH2 0x5a1
0x3a1 JUMP
---
0x399: JUMPDEST 
0x39a: V299 = 0x3a2
0x39e: V300 = 0x5a1
0x3a1: JUMP 0x5a1
---
Entry stack: [V12, 0xa9, V67, S0]
Stack pops: 1
Stack additions: [S0, 0x3a2, S0]
Exit stack: [V12, 0xa9, V67, S0, 0x3a2, S0]

================================

Block 0x3a2
[0x3a2:0x3a2]
---
Predecessors: [0x38c, 0x59e, 0x756, 0xc39]
Successors: [0x3a3]
---
0x3a2 JUMPDEST
---
0x3a2: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x952}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x952}, S1, S0]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x3a2]
Successors: [0xa9, 0x952]
---
0x3a3 JUMPDEST
0x3a4 POP
0x3a5 POP
0x3a6 JUMP
---
0x3a3: JUMPDEST 
0x3a6: JUMP {0xa9, 0x952}
---
Entry stack: [V12, S3, {0xa9, 0x952}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S3]

================================

Block 0x3a7
[0x3a7:0x405]
---
Predecessors: [0x149, 0x445, 0xb36]
Successors: [0x406, 0x40a]
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x1
0x3aa SLOAD
0x3ab PUSH1 0x0
0x3ad SWAP1
0x3ae PUSH1 0x1
0x3b0 PUSH1 0xa0
0x3b2 PUSH1 0x2
0x3b4 EXP
0x3b5 SUB
0x3b6 AND
0x3b7 PUSH4 0xf7888aec
0x3bc DUP3
0x3bd ADDRESS
0x3be DUP2
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 PUSH1 0x20
0x3c4 ADD
0x3c5 MSTORE
0x3c6 PUSH1 0x40
0x3c8 MLOAD
0x3c9 PUSH1 0xe0
0x3cb PUSH1 0x2
0x3cd EXP
0x3ce PUSH4 0xffffffff
0x3d3 DUP6
0x3d4 AND
0x3d5 MUL
0x3d6 DUP2
0x3d7 MSTORE
0x3d8 PUSH1 0x1
0x3da PUSH1 0xa0
0x3dc PUSH1 0x2
0x3de EXP
0x3df SUB
0x3e0 SWAP3
0x3e1 DUP4
0x3e2 AND
0x3e3 PUSH1 0x4
0x3e5 DUP3
0x3e6 ADD
0x3e7 MSTORE
0x3e8 SWAP2
0x3e9 AND
0x3ea PUSH1 0x24
0x3ec DUP3
0x3ed ADD
0x3ee MSTORE
0x3ef PUSH1 0x44
0x3f1 ADD
0x3f2 PUSH1 0x20
0x3f4 PUSH1 0x40
0x3f6 MLOAD
0x3f7 DUP1
0x3f8 DUP4
0x3f9 SUB
0x3fa DUP2
0x3fb PUSH1 0x0
0x3fd DUP8
0x3fe DUP1
0x3ff EXTCODESIZE
0x400 ISZERO
0x401 ISZERO
0x402 PUSH2 0x40a
0x405 JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V301 = 0x1
0x3aa: V302 = S[0x1]
0x3ab: V303 = 0x0
0x3ae: V304 = 0x1
0x3b0: V305 = 0xa0
0x3b2: V306 = 0x2
0x3b4: V307 = EXP 0x2 0xa0
0x3b5: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b6: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x3b7: V310 = 0xf7888aec
0x3bd: V311 = ADDRESS
0x3bf: V312 = 0x40
0x3c1: V313 = M[0x40]
0x3c2: V314 = 0x20
0x3c4: V315 = ADD 0x20 V313
0x3c5: M[V315] = 0x0
0x3c6: V316 = 0x40
0x3c8: V317 = M[0x40]
0x3c9: V318 = 0xe0
0x3cb: V319 = 0x2
0x3cd: V320 = EXP 0x2 0xe0
0x3ce: V321 = 0xffffffff
0x3d4: V322 = AND 0xf7888aec 0xffffffff
0x3d5: V323 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x3d7: M[V317] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x3d8: V324 = 0x1
0x3da: V325 = 0xa0
0x3dc: V326 = 0x2
0x3de: V327 = EXP 0x2 0xa0
0x3df: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e2: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3e3: V330 = 0x4
0x3e6: V331 = ADD V317 0x4
0x3e7: M[V331] = 0x0
0x3e9: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x3ea: V333 = 0x24
0x3ed: V334 = ADD V317 0x24
0x3ee: M[V334] = V332
0x3ef: V335 = 0x44
0x3f1: V336 = ADD 0x44 V317
0x3f2: V337 = 0x20
0x3f4: V338 = 0x40
0x3f6: V339 = M[0x40]
0x3f9: V340 = SUB V336 V339
0x3fb: V341 = 0x0
0x3ff: V342 = EXTCODESIZE V309
0x400: V343 = ISZERO V342
0x401: V344 = ISZERO V343
0x402: V345 = 0x40a
0x405: JUMPI 0x40a V344
---
Entry stack: [V12, S4, S3, S2, S1, {0x151, 0x44d, 0xb41}]
Stack pops: 0
Stack additions: [0x0, V309, 0xf7888aec, V336, 0x20, V339, V340, V339, 0x0, V309]
Exit stack: [V12, S4, S3, S2, S1, {0x151, 0x44d, 0xb41}, 0x0, V309, 0xf7888aec, V336, 0x20, V339, V340, V339, 0x0, V309]

================================

Block 0x406
[0x406:0x409]
---
Predecessors: [0x3a7]
Successors: []
---
0x406 PUSH1 0x0
0x408 DUP1
0x409 REVERT
---
0x406: V346 = 0x0
0x409: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, {0x151, 0x44d, 0xb41}, 0x0, V309, 0xf7888aec, V336, 0x20, V339, V340, V339, 0x0, V309]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, {0x151, 0x44d, 0xb41}, 0x0, V309, 0xf7888aec, V336, 0x20, V339, V340, V339, 0x0, V309]

================================

Block 0x40a
[0x40a:0x416]
---
Predecessors: [0x3a7]
Successors: [0x417, 0x41b]
---
0x40a JUMPDEST
0x40b PUSH2 0x2c6
0x40e GAS
0x40f SUB
0x410 CALL
0x411 ISZERO
0x412 ISZERO
0x413 PUSH2 0x41b
0x416 JUMPI
---
0x40a: JUMPDEST 
0x40b: V347 = 0x2c6
0x40e: V348 = GAS
0x40f: V349 = SUB V348 0x2c6
0x410: V350 = CALL V349 V309 0x0 V339 V340 V339 0x20
0x411: V351 = ISZERO V350
0x412: V352 = ISZERO V351
0x413: V353 = 0x41b
0x416: JUMPI 0x41b V352
---
Entry stack: [V12, S14, S13, S12, S11, {0x151, 0x44d, 0xb41}, 0x0, V309, 0xf7888aec, V336, 0x20, V339, V340, V339, 0x0, V309]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, {0x151, 0x44d, 0xb41}, 0x0, V309, 0xf7888aec, V336]

================================

Block 0x417
[0x417:0x41a]
---
Predecessors: [0x40a]
Successors: []
---
0x417 PUSH1 0x0
0x419 DUP1
0x41a REVERT
---
0x417: V354 = 0x0
0x41a: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, {0x151, 0x44d, 0xb41}, 0x0, S2, 0xf7888aec, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, {0x151, 0x44d, 0xb41}, 0x0, S2, 0xf7888aec, S0]

================================

Block 0x41b
[0x41b:0x426]
---
Predecessors: [0x40a]
Successors: [0x427]
---
0x41b JUMPDEST
0x41c POP
0x41d POP
0x41e POP
0x41f PUSH1 0x40
0x421 MLOAD
0x422 DUP1
0x423 MLOAD
0x424 SWAP2
0x425 POP
0x426 POP
---
0x41b: JUMPDEST 
0x41f: V355 = 0x40
0x421: V356 = M[0x40]
0x423: V357 = M[V356]
---
Entry stack: [V12, S8, S7, S6, S5, {0x151, 0x44d, 0xb41}, 0x0, S2, 0xf7888aec, S0]
Stack pops: 4
Stack additions: [V357]
Exit stack: [V12, S8, S7, S6, S5, {0x151, 0x44d, 0xb41}, V357]

================================

Block 0x427
[0x427:0x429]
---
Predecessors: [0x41b]
Successors: [0x151, 0x44d, 0xb41]
---
0x427 JUMPDEST
0x428 SWAP1
0x429 JUMP
---
0x427: JUMPDEST 
0x429: JUMP {0x151, 0x44d, 0xb41}
---
Entry stack: [V12, S5, S4, S3, S2, {0x151, 0x44d, 0xb41}, V357]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S5, S4, S3, S2, V357]

================================

Block 0x42a
[0x42a:0x443]
---
Predecessors: [0x16e, 0xb41]
Successors: [0x444, 0x445]
---
0x42a JUMPDEST
0x42b PUSH1 0x2
0x42d SLOAD
0x42e PUSH1 0x0
0x430 SWAP1
0x431 CALLER
0x432 PUSH1 0x1
0x434 PUSH1 0xa0
0x436 PUSH1 0x2
0x438 EXP
0x439 SUB
0x43a SWAP1
0x43b DUP2
0x43c AND
0x43d SWAP2
0x43e AND
0x43f EQ
0x440 PUSH2 0x445
0x443 JUMPI
---
0x42a: JUMPDEST 
0x42b: V358 = 0x2
0x42d: V359 = S[0x2]
0x42e: V360 = 0x0
0x431: V361 = CALLER
0x432: V362 = 0x1
0x434: V363 = 0xa0
0x436: V364 = 0x2
0x438: V365 = EXP 0x2 0xa0
0x439: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43c: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x43e: V368 = AND V359 0xffffffffffffffffffffffffffffffffffffffff
0x43f: V369 = EQ V368 V367
0x440: V370 = 0x445
0x443: JUMPI 0x445 V369
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x444
[0x444:0x444]
---
Predecessors: [0x42a]
Successors: []
---
0x444 INVALID
---
0x444: INVALID 
---
Entry stack: [V12, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x445
[0x445:0x44c]
---
Predecessors: [0x42a]
Successors: [0x3a7]
---
0x445 JUMPDEST
0x446 PUSH2 0x44d
0x449 PUSH2 0x3a7
0x44c JUMP
---
0x445: JUMPDEST 
0x446: V371 = 0x44d
0x449: V372 = 0x3a7
0x44c: JUMP 0x3a7
---
Entry stack: [V12, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: [0x44d]
Exit stack: [V12, S5, S4, S3, S2, S1, 0x0, 0x44d]

================================

Block 0x44d
[0x44d:0x45a]
---
Predecessors: [0x427]
Successors: [0x45b, 0x45c]
---
0x44d JUMPDEST
0x44e SWAP1
0x44f POP
0x450 PUSH1 0x0
0x452 DUP3
0x453 DUP3
0x454 SUB
0x455 LT
0x456 ISZERO
0x457 PUSH2 0x45c
0x45a JUMPI
---
0x44d: JUMPDEST 
0x450: V373 = 0x0
0x454: V374 = SUB V357 S2
0x455: V375 = LT V374 0x0
0x456: V376 = ISZERO V375
0x457: V377 = 0x45c
0x45a: JUMPI 0x45c V376
---
Entry stack: [V12, S4, S3, S2, S1, V357]
Stack pops: 3
Stack additions: [S2, S0]
Exit stack: [V12, S4, S3, S2, V357]

================================

Block 0x45b
[0x45b:0x45b]
---
Predecessors: [0x44d]
Successors: []
---
0x45b INVALID
---
0x45b: INVALID 
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0x45c
[0x45c:0x4a0]
---
Predecessors: [0x44d]
Successors: [0x4a1, 0x4a5]
---
0x45c JUMPDEST
0x45d PUSH1 0x1
0x45f SLOAD
0x460 PUSH1 0x1
0x462 PUSH1 0xa0
0x464 PUSH1 0x2
0x466 EXP
0x467 SUB
0x468 AND
0x469 PUSH4 0x2e1a7d4d
0x46e GAS
0x46f DUP5
0x470 PUSH1 0x40
0x472 MLOAD
0x473 PUSH1 0xe0
0x475 PUSH1 0x2
0x477 EXP
0x478 PUSH4 0xffffffff
0x47d DUP6
0x47e AND
0x47f MUL
0x480 DUP2
0x481 MSTORE
0x482 PUSH1 0x4
0x484 DUP2
0x485 ADD
0x486 SWAP2
0x487 SWAP1
0x488 SWAP2
0x489 MSTORE
0x48a PUSH1 0x24
0x48c ADD
0x48d PUSH1 0x0
0x48f PUSH1 0x40
0x491 MLOAD
0x492 DUP1
0x493 DUP4
0x494 SUB
0x495 DUP2
0x496 PUSH1 0x0
0x498 DUP9
0x499 DUP1
0x49a EXTCODESIZE
0x49b ISZERO
0x49c ISZERO
0x49d PUSH2 0x4a5
0x4a0 JUMPI
---
0x45c: JUMPDEST 
0x45d: V378 = 0x1
0x45f: V379 = S[0x1]
0x460: V380 = 0x1
0x462: V381 = 0xa0
0x464: V382 = 0x2
0x466: V383 = EXP 0x2 0xa0
0x467: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x468: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x469: V386 = 0x2e1a7d4d
0x46e: V387 = GAS
0x470: V388 = 0x40
0x472: V389 = M[0x40]
0x473: V390 = 0xe0
0x475: V391 = 0x2
0x477: V392 = EXP 0x2 0xe0
0x478: V393 = 0xffffffff
0x47e: V394 = AND 0x2e1a7d4d 0xffffffff
0x47f: V395 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x481: M[V389] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x482: V396 = 0x4
0x485: V397 = ADD V389 0x4
0x489: M[V397] = S1
0x48a: V398 = 0x24
0x48c: V399 = ADD 0x24 V389
0x48d: V400 = 0x0
0x48f: V401 = 0x40
0x491: V402 = M[0x40]
0x494: V403 = SUB V399 V402
0x496: V404 = 0x0
0x49a: V405 = EXTCODESIZE V385
0x49b: V406 = ISZERO V405
0x49c: V407 = ISZERO V406
0x49d: V408 = 0x4a5
0x4a0: JUMPI 0x4a5 V407
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V385, 0x2e1a7d4d, V387, V399, 0x0, V402, V403, V402, 0x0, V385]
Exit stack: [V12, S3, S2, S1, S0, V385, 0x2e1a7d4d, V387, V399, 0x0, V402, V403, V402, 0x0, V385]

================================

Block 0x4a1
[0x4a1:0x4a4]
---
Predecessors: [0x45c]
Successors: []
---
0x4a1 PUSH1 0x0
0x4a3 DUP1
0x4a4 REVERT
---
0x4a1: V409 = 0x0
0x4a4: REVERT 0x0 0x0
---
Entry stack: [V12, S13, {0xa9, 0x952}, S11, S10, V385, 0x2e1a7d4d, V387, V399, 0x0, V402, V403, V402, 0x0, V385]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, {0xa9, 0x952}, S11, S10, V385, 0x2e1a7d4d, V387, V399, 0x0, V402, V403, V402, 0x0, V385]

================================

Block 0x4a5
[0x4a5:0x4ad]
---
Predecessors: [0x45c]
Successors: [0x4ae, 0x4b2]
---
0x4a5 JUMPDEST
0x4a6 DUP8
0x4a7 CALL
0x4a8 ISZERO
0x4a9 ISZERO
0x4aa PUSH2 0x4b2
0x4ad JUMPI
---
0x4a5: JUMPDEST 
0x4a7: V410 = CALL V387 V385 0x0 V402 V403 V402 0x0
0x4a8: V411 = ISZERO V410
0x4a9: V412 = ISZERO V411
0x4aa: V413 = 0x4b2
0x4ad: JUMPI 0x4b2 V412
---
Entry stack: [V12, S13, {0xa9, 0x952}, S11, S10, V385, 0x2e1a7d4d, V387, V399, 0x0, V402, V403, V402, 0x0, V385]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, S13, {0xa9, 0x952}, S11, S10, V385, 0x2e1a7d4d, V387, V399]

================================

Block 0x4ae
[0x4ae:0x4b1]
---
Predecessors: [0x4a5]
Successors: []
---
0x4ae PUSH1 0x0
0x4b0 DUP1
0x4b1 REVERT
---
0x4ae: V414 = 0x0
0x4b1: REVERT 0x0 0x0
---
Entry stack: [V12, S7, {0xa9, 0x952}, S5, S4, S3, 0x2e1a7d4d, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, {0xa9, 0x952}, S5, S4, S3, 0x2e1a7d4d, S1, S0]

================================

Block 0x4b2
[0x4b2:0x4be]
---
Predecessors: [0x4a5]
Successors: [0xcb9]
---
0x4b2 JUMPDEST
0x4b3 POP
0x4b4 POP
0x4b5 POP
0x4b6 POP
0x4b7 PUSH2 0x3a2
0x4ba DUP3
0x4bb PUSH2 0xcb9
0x4be JUMP
---
0x4b2: JUMPDEST 
0x4b7: V415 = 0x3a2
0x4bb: V416 = 0xcb9
0x4be: JUMP 0xcb9
---
Entry stack: [V12, S7, {0xa9, 0x952}, S5, S4, S3, 0x2e1a7d4d, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, 0x3a2, S5]
Exit stack: [V12, S7, {0xa9, 0x952}, S5, S4, 0x3a2, S5]

================================

Block 0x4bf
[0x4bf:0x4bf]
---
Predecessors: []
Successors: [0x4c0]
---
0x4bf JUMPDEST
---
0x4bf: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4c0
[0x4c0:0x4c3]
---
Predecessors: [0x4bf]
Successors: []
Has unresolved jump.
---
0x4c0 JUMPDEST
0x4c1 POP
0x4c2 POP
0x4c3 JUMP
---
0x4c0: JUMPDEST 
0x4c3: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x4c4
[0x4c4:0x522]
---
Predecessors: [0x186]
Successors: [0x523, 0x527]
---
0x4c4 JUMPDEST
0x4c5 PUSH1 0x1
0x4c7 SLOAD
0x4c8 PUSH1 0x0
0x4ca SWAP1
0x4cb PUSH1 0x1
0x4cd PUSH1 0xa0
0x4cf PUSH1 0x2
0x4d1 EXP
0x4d2 SUB
0x4d3 AND
0x4d4 PUSH4 0xf7888aec
0x4d9 DUP4
0x4da ADDRESS
0x4db DUP5
0x4dc PUSH1 0x40
0x4de MLOAD
0x4df PUSH1 0x20
0x4e1 ADD
0x4e2 MSTORE
0x4e3 PUSH1 0x40
0x4e5 MLOAD
0x4e6 PUSH1 0xe0
0x4e8 PUSH1 0x2
0x4ea EXP
0x4eb PUSH4 0xffffffff
0x4f0 DUP6
0x4f1 AND
0x4f2 MUL
0x4f3 DUP2
0x4f4 MSTORE
0x4f5 PUSH1 0x1
0x4f7 PUSH1 0xa0
0x4f9 PUSH1 0x2
0x4fb EXP
0x4fc SUB
0x4fd SWAP3
0x4fe DUP4
0x4ff AND
0x500 PUSH1 0x4
0x502 DUP3
0x503 ADD
0x504 MSTORE
0x505 SWAP2
0x506 AND
0x507 PUSH1 0x24
0x509 DUP3
0x50a ADD
0x50b MSTORE
0x50c PUSH1 0x44
0x50e ADD
0x50f PUSH1 0x20
0x511 PUSH1 0x40
0x513 MLOAD
0x514 DUP1
0x515 DUP4
0x516 SUB
0x517 DUP2
0x518 PUSH1 0x0
0x51a DUP8
0x51b DUP1
0x51c EXTCODESIZE
0x51d ISZERO
0x51e ISZERO
0x51f PUSH2 0x527
0x522 JUMPI
---
0x4c4: JUMPDEST 
0x4c5: V417 = 0x1
0x4c7: V418 = S[0x1]
0x4c8: V419 = 0x0
0x4cb: V420 = 0x1
0x4cd: V421 = 0xa0
0x4cf: V422 = 0x2
0x4d1: V423 = EXP 0x2 0xa0
0x4d2: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d3: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x4d4: V426 = 0xf7888aec
0x4da: V427 = ADDRESS
0x4dc: V428 = 0x40
0x4de: V429 = M[0x40]
0x4df: V430 = 0x20
0x4e1: V431 = ADD 0x20 V429
0x4e2: M[V431] = 0x0
0x4e3: V432 = 0x40
0x4e5: V433 = M[0x40]
0x4e6: V434 = 0xe0
0x4e8: V435 = 0x2
0x4ea: V436 = EXP 0x2 0xe0
0x4eb: V437 = 0xffffffff
0x4f1: V438 = AND 0xf7888aec 0xffffffff
0x4f2: V439 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x4f4: M[V433] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x4f5: V440 = 0x1
0x4f7: V441 = 0xa0
0x4f9: V442 = 0x2
0x4fb: V443 = EXP 0x2 0xa0
0x4fc: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ff: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x500: V446 = 0x4
0x503: V447 = ADD V433 0x4
0x504: M[V447] = V445
0x506: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x507: V449 = 0x24
0x50a: V450 = ADD V433 0x24
0x50b: M[V450] = V448
0x50c: V451 = 0x44
0x50e: V452 = ADD 0x44 V433
0x50f: V453 = 0x20
0x511: V454 = 0x40
0x513: V455 = M[0x40]
0x516: V456 = SUB V452 V455
0x518: V457 = 0x0
0x51c: V458 = EXTCODESIZE V425
0x51d: V459 = ISZERO V458
0x51e: V460 = ISZERO V459
0x51f: V461 = 0x527
0x522: JUMPI 0x527 V460
---
Entry stack: [V12, 0x151, V128]
Stack pops: 1
Stack additions: [S0, 0x0, V425, 0xf7888aec, V452, 0x20, V455, V456, V455, 0x0, V425]
Exit stack: [V12, 0x151, V128, 0x0, V425, 0xf7888aec, V452, 0x20, V455, V456, V455, 0x0, V425]

================================

Block 0x523
[0x523:0x526]
---
Predecessors: [0x4c4]
Successors: []
---
0x523 PUSH1 0x0
0x525 DUP1
0x526 REVERT
---
0x523: V462 = 0x0
0x526: REVERT 0x0 0x0
---
Entry stack: [V12, 0x151, V128, 0x0, V425, 0xf7888aec, V452, 0x20, V455, V456, V455, 0x0, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x151, V128, 0x0, V425, 0xf7888aec, V452, 0x20, V455, V456, V455, 0x0, V425]

================================

Block 0x527
[0x527:0x533]
---
Predecessors: [0x4c4, 0x85f]
Successors: [0x534, 0x538]
---
0x527 JUMPDEST
0x528 PUSH2 0x2c6
0x52b GAS
0x52c SUB
0x52d CALL
0x52e ISZERO
0x52f ISZERO
0x530 PUSH2 0x538
0x533 JUMPI
---
0x527: JUMPDEST 
0x528: V463 = 0x2c6
0x52b: V464 = GAS
0x52c: V465 = SUB V464 0x2c6
0x52d: V466 = CALL V465 S0 0x0 S2 S3 S4 0x20
0x52e: V467 = ISZERO V466
0x52f: V468 = ISZERO V467
0x530: V469 = 0x538
0x533: JUMPI 0x538 V468
---
Entry stack: [V12, 0xa9, V67, S12, {0x151, 0x26d, 0x374}, S10, 0x0, S8, {0x6c86888b, 0xf7888aec}, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0x151, 0x26d, 0x374}, S10, 0x0, S8, {0x6c86888b, 0xf7888aec}, S6]

================================

Block 0x534
[0x534:0x537]
---
Predecessors: [0x527]
Successors: []
---
0x534 PUSH1 0x0
0x536 DUP1
0x537 REVERT
---
0x534: V470 = 0x0
0x537: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S6, {0x151, 0x26d, 0x374}, S4, 0x0, S2, {0x6c86888b, 0xf7888aec}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S6, {0x151, 0x26d, 0x374}, S4, 0x0, S2, {0x6c86888b, 0xf7888aec}, S0]

================================

Block 0x538
[0x538:0x543]
---
Predecessors: [0x527, 0x905]
Successors: [0x544]
---
0x538 JUMPDEST
0x539 POP
0x53a POP
0x53b POP
0x53c PUSH1 0x40
0x53e MLOAD
0x53f DUP1
0x540 MLOAD
0x541 SWAP2
0x542 POP
0x543 POP
---
0x538: JUMPDEST 
0x53c: V471 = 0x40
0x53e: V472 = M[0x40]
0x540: V473 = M[V472]
---
Entry stack: [V12, 0xa9, V67, S6, {0x151, 0x26d, 0x374}, S4, 0x0, S2, {0x6c86888b, 0xf7888aec}, S0]
Stack pops: 4
Stack additions: [V473]
Exit stack: [V12, 0xa9, V67, S6, {0x151, 0x26d, 0x374}, S4, V473]

================================

Block 0x544
[0x544:0x548]
---
Predecessors: [0x538]
Successors: [0x151, 0x26d, 0x374]
---
0x544 JUMPDEST
0x545 SWAP2
0x546 SWAP1
0x547 POP
0x548 JUMP
---
0x544: JUMPDEST 
0x548: JUMP {0x151, 0x26d, 0x374}
---
Entry stack: [V12, 0xa9, V67, S3, {0x151, 0x26d, 0x374}, S1, V473]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0xa9, V67, S3, V473]

================================

Block 0x549
[0x549:0x55f]
---
Predecessors: [0x1b7]
Successors: [0x560, 0x561]
---
0x549 JUMPDEST
0x54a PUSH1 0x2
0x54c SLOAD
0x54d CALLER
0x54e PUSH1 0x1
0x550 PUSH1 0xa0
0x552 PUSH1 0x2
0x554 EXP
0x555 SUB
0x556 SWAP1
0x557 DUP2
0x558 AND
0x559 SWAP2
0x55a AND
0x55b EQ
0x55c PUSH2 0x561
0x55f JUMPI
---
0x549: JUMPDEST 
0x54a: V474 = 0x2
0x54c: V475 = S[0x2]
0x54d: V476 = CALLER
0x54e: V477 = 0x1
0x550: V478 = 0xa0
0x552: V479 = 0x2
0x554: V480 = EXP 0x2 0xa0
0x555: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x558: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x55a: V483 = AND V475 0xffffffffffffffffffffffffffffffffffffffff
0x55b: V484 = EQ V483 V482
0x55c: V485 = 0x561
0x55f: JUMPI 0x561 V484
---
Entry stack: [V12, 0xa9, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V149]

================================

Block 0x560
[0x560:0x560]
---
Predecessors: [0x549]
Successors: []
---
0x560 INVALID
---
0x560: INVALID 
---
Entry stack: [V12, 0xa9, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V149]

================================

Block 0x561
[0x561:0x59d]
---
Predecessors: [0x549]
Successors: [0x59e]
---
0x561 JUMPDEST
0x562 PUSH1 0x0
0x564 DUP1
0x565 SLOAD
0x566 PUSH1 0x1
0x568 PUSH1 0xa0
0x56a PUSH1 0x2
0x56c EXP
0x56d SUB
0x56e DUP1
0x56f DUP5
0x570 AND
0x571 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x586 NOT
0x587 SWAP3
0x588 DUP4
0x589 AND
0x58a OR
0x58b SWAP3
0x58c DUP4
0x58d SWAP1
0x58e SSTORE
0x58f PUSH1 0x1
0x591 DUP1
0x592 SLOAD
0x593 SWAP1
0x594 SWAP3
0x595 AND
0x596 SWAP3
0x597 AND
0x598 SWAP2
0x599 SWAP1
0x59a SWAP2
0x59b OR
0x59c SWAP1
0x59d SSTORE
---
0x561: JUMPDEST 
0x562: V486 = 0x0
0x565: V487 = S[0x0]
0x566: V488 = 0x1
0x568: V489 = 0xa0
0x56a: V490 = 0x2
0x56c: V491 = EXP 0x2 0xa0
0x56d: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x570: V493 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x571: V494 = 0xffffffffffffffffffffffffffffffffffffffff
0x586: V495 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x589: V496 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V487
0x58a: V497 = OR V496 V493
0x58e: S[0x0] = V497
0x58f: V498 = 0x1
0x592: V499 = S[0x1]
0x595: V500 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V499
0x597: V501 = AND V497 0xffffffffffffffffffffffffffffffffffffffff
0x59b: V502 = OR V501 V500
0x59d: S[0x1] = V502
---
Entry stack: [V12, 0xa9, V149]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xa9, V149]

================================

Block 0x59e
[0x59e:0x5a0]
---
Predecessors: [0x561, 0xcb9]
Successors: [0xa9, 0x3a2, 0x952]
---
0x59e JUMPDEST
0x59f POP
0x5a0 JUMP
---
0x59e: JUMPDEST 
0x5a0: JUMP {0xa9, 0x3a2, 0x952}
---
Entry stack: [V12, S5, {0xa9, 0x952}, S3, S2, {0xa9, 0x3a2, 0x952}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S5, {0xa9, 0x952}, S3, S2]

================================

Block 0x5a1
[0x5a1:0x5be]
---
Predecessors: [0x1d8, 0x390, 0x399]
Successors: [0x5bf, 0x5c0]
---
0x5a1 JUMPDEST
0x5a2 PUSH1 0x1
0x5a4 SLOAD
0x5a5 PUSH1 0x1
0x5a7 PUSH1 0xa0
0x5a9 PUSH1 0x2
0x5ab EXP
0x5ac SUB
0x5ad AND
0x5ae PUSH4 0xa19b14a
0x5b3 GAS
0x5b4 DUP4
0x5b5 PUSH1 0x0
0x5b7 DUP2
0x5b8 MLOAD
0x5b9 DUP2
0x5ba LT
0x5bb PUSH2 0x5c0
0x5be JUMPI
---
0x5a1: JUMPDEST 
0x5a2: V503 = 0x1
0x5a4: V504 = S[0x1]
0x5a5: V505 = 0x1
0x5a7: V506 = 0xa0
0x5a9: V507 = 0x2
0x5ab: V508 = EXP 0x2 0xa0
0x5ac: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ad: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x5ae: V511 = 0xa19b14a
0x5b3: V512 = GAS
0x5b5: V513 = 0x0
0x5b8: V514 = M[S0]
0x5ba: V515 = LT 0x0 V514
0x5bb: V516 = 0x5c0
0x5be: JUMPI 0x5c0 V515
---
Entry stack: [V12, 0xa9, V67, S2, {0xa9, 0x399, 0x3a2}, S0]
Stack pops: 1
Stack additions: [S0, V510, 0xa19b14a, V512, S0, 0x0]
Exit stack: [V12, 0xa9, V67, S2, {0xa9, 0x399, 0x3a2}, S0, V510, 0xa19b14a, V512, S0, 0x0]

================================

Block 0x5bf
[0x5bf:0x5bf]
---
Predecessors: [0x5a1]
Successors: []
---
0x5bf INVALID
---
0x5bf: INVALID 
---
Entry stack: [V12, 0xa9, V67, S7, {0xa9, 0x399, 0x3a2}, S5, V510, 0xa19b14a, V512, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S7, {0xa9, 0x399, 0x3a2}, S5, V510, 0xa19b14a, V512, S1, 0x0]

================================

Block 0x5c0
[0x5c0:0x5d5]
---
Predecessors: [0x5a1]
Successors: [0x5d6, 0x5d7]
---
0x5c0 JUMPDEST
0x5c1 SWAP1
0x5c2 PUSH1 0x20
0x5c4 ADD
0x5c5 SWAP1
0x5c6 PUSH1 0x20
0x5c8 MUL
0x5c9 ADD
0x5ca MLOAD
0x5cb DUP5
0x5cc PUSH1 0x1
0x5ce DUP2
0x5cf MLOAD
0x5d0 DUP2
0x5d1 LT
0x5d2 PUSH2 0x5d7
0x5d5 JUMPI
---
0x5c0: JUMPDEST 
0x5c2: V517 = 0x20
0x5c4: V518 = ADD 0x20 S1
0x5c6: V519 = 0x20
0x5c8: V520 = MUL 0x20 0x0
0x5c9: V521 = ADD 0x0 V518
0x5ca: V522 = M[V521]
0x5cc: V523 = 0x1
0x5cf: V524 = M[S5]
0x5d1: V525 = LT 0x1 V524
0x5d2: V526 = 0x5d7
0x5d5: JUMPI 0x5d7 V525
---
Entry stack: [V12, 0xa9, V67, S7, {0xa9, 0x399, 0x3a2}, S5, V510, 0xa19b14a, V512, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V522, S5, 0x1]
Exit stack: [V12, 0xa9, V67, S7, {0xa9, 0x399, 0x3a2}, S5, V510, 0xa19b14a, V512, V522, S5, 0x1]

================================

Block 0x5d6
[0x5d6:0x5d6]
---
Predecessors: [0x5c0]
Successors: []
---
0x5d6 INVALID
---
0x5d6: INVALID 
---
Entry stack: [V12, 0xa9, V67, S8, {0xa9, 0x399, 0x3a2}, S6, S5, 0xa19b14a, S3, V522, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S8, {0xa9, 0x399, 0x3a2}, S6, S5, 0xa19b14a, S3, V522, S1, 0x1]

================================

Block 0x5d7
[0x5d7:0x5ec]
---
Predecessors: [0x5c0]
Successors: [0x5ed, 0x5ee]
---
0x5d7 JUMPDEST
0x5d8 SWAP1
0x5d9 PUSH1 0x20
0x5db ADD
0x5dc SWAP1
0x5dd PUSH1 0x20
0x5df MUL
0x5e0 ADD
0x5e1 MLOAD
0x5e2 DUP6
0x5e3 PUSH1 0x2
0x5e5 DUP2
0x5e6 MLOAD
0x5e7 DUP2
0x5e8 LT
0x5e9 PUSH2 0x5ee
0x5ec JUMPI
---
0x5d7: JUMPDEST 
0x5d9: V527 = 0x20
0x5db: V528 = ADD 0x20 S1
0x5dd: V529 = 0x20
0x5df: V530 = MUL 0x20 0x1
0x5e0: V531 = ADD 0x20 V528
0x5e1: V532 = M[V531]
0x5e3: V533 = 0x2
0x5e6: V534 = M[S6]
0x5e8: V535 = LT 0x2 V534
0x5e9: V536 = 0x5ee
0x5ec: JUMPI 0x5ee V535
---
Entry stack: [V12, 0xa9, V67, S8, {0xa9, 0x399, 0x3a2}, S6, S5, 0xa19b14a, S3, V522, S1, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V532, S6, 0x2]
Exit stack: [V12, 0xa9, V67, S8, {0xa9, 0x399, 0x3a2}, S6, S5, 0xa19b14a, S3, V522, V532, S6, 0x2]

================================

Block 0x5ed
[0x5ed:0x5ed]
---
Predecessors: [0x5d7]
Successors: []
---
0x5ed INVALID
---
0x5ed: INVALID 
---
Entry stack: [V12, 0xa9, V67, S9, {0xa9, 0x399, 0x3a2}, S7, S6, 0xa19b14a, S4, S3, V532, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S9, {0xa9, 0x399, 0x3a2}, S7, S6, 0xa19b14a, S4, S3, V532, S1, 0x2]

================================

Block 0x5ee
[0x5ee:0x603]
---
Predecessors: [0x5d7]
Successors: [0x604, 0x605]
---
0x5ee JUMPDEST
0x5ef SWAP1
0x5f0 PUSH1 0x20
0x5f2 ADD
0x5f3 SWAP1
0x5f4 PUSH1 0x20
0x5f6 MUL
0x5f7 ADD
0x5f8 MLOAD
0x5f9 DUP7
0x5fa PUSH1 0x3
0x5fc DUP2
0x5fd MLOAD
0x5fe DUP2
0x5ff LT
0x600 PUSH2 0x605
0x603 JUMPI
---
0x5ee: JUMPDEST 
0x5f0: V537 = 0x20
0x5f2: V538 = ADD 0x20 S1
0x5f4: V539 = 0x20
0x5f6: V540 = MUL 0x20 0x2
0x5f7: V541 = ADD 0x40 V538
0x5f8: V542 = M[V541]
0x5fa: V543 = 0x3
0x5fd: V544 = M[S7]
0x5ff: V545 = LT 0x3 V544
0x600: V546 = 0x605
0x603: JUMPI 0x605 V545
---
Entry stack: [V12, 0xa9, V67, S9, {0xa9, 0x399, 0x3a2}, S7, S6, 0xa19b14a, S4, S3, V532, S1, 0x2]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V542, S7, 0x3]
Exit stack: [V12, 0xa9, V67, S9, {0xa9, 0x399, 0x3a2}, S7, S6, 0xa19b14a, S4, S3, V532, V542, S7, 0x3]

================================

Block 0x604
[0x604:0x604]
---
Predecessors: [0x5ee]
Successors: []
---
0x604 INVALID
---
0x604: INVALID 
---
Entry stack: [V12, 0xa9, V67, S10, {0xa9, 0x399, 0x3a2}, S8, S7, 0xa19b14a, S5, S4, S3, V542, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S10, {0xa9, 0x399, 0x3a2}, S8, S7, 0xa19b14a, S5, S4, S3, V542, S1, 0x3]

================================

Block 0x605
[0x605:0x61a]
---
Predecessors: [0x5ee]
Successors: [0x61b, 0x61c]
---
0x605 JUMPDEST
0x606 SWAP1
0x607 PUSH1 0x20
0x609 ADD
0x60a SWAP1
0x60b PUSH1 0x20
0x60d MUL
0x60e ADD
0x60f MLOAD
0x610 DUP8
0x611 PUSH1 0x4
0x613 DUP2
0x614 MLOAD
0x615 DUP2
0x616 LT
0x617 PUSH2 0x61c
0x61a JUMPI
---
0x605: JUMPDEST 
0x607: V547 = 0x20
0x609: V548 = ADD 0x20 S1
0x60b: V549 = 0x20
0x60d: V550 = MUL 0x20 0x3
0x60e: V551 = ADD 0x60 V548
0x60f: V552 = M[V551]
0x611: V553 = 0x4
0x614: V554 = M[S8]
0x616: V555 = LT 0x4 V554
0x617: V556 = 0x61c
0x61a: JUMPI 0x61c V555
---
Entry stack: [V12, 0xa9, V67, S10, {0xa9, 0x399, 0x3a2}, S8, S7, 0xa19b14a, S5, S4, S3, V542, S1, 0x3]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V552, S8, 0x4]
Exit stack: [V12, 0xa9, V67, S10, {0xa9, 0x399, 0x3a2}, S8, S7, 0xa19b14a, S5, S4, S3, V542, V552, S8, 0x4]

================================

Block 0x61b
[0x61b:0x61b]
---
Predecessors: [0x605]
Successors: []
---
0x61b INVALID
---
0x61b: INVALID 
---
Entry stack: [V12, 0xa9, V67, S11, {0xa9, 0x399, 0x3a2}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V552, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S11, {0xa9, 0x399, 0x3a2}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V552, S1, 0x4]

================================

Block 0x61c
[0x61c:0x631]
---
Predecessors: [0x605]
Successors: [0x632, 0x633]
---
0x61c JUMPDEST
0x61d SWAP1
0x61e PUSH1 0x20
0x620 ADD
0x621 SWAP1
0x622 PUSH1 0x20
0x624 MUL
0x625 ADD
0x626 MLOAD
0x627 DUP9
0x628 PUSH1 0x5
0x62a DUP2
0x62b MLOAD
0x62c DUP2
0x62d LT
0x62e PUSH2 0x633
0x631 JUMPI
---
0x61c: JUMPDEST 
0x61e: V557 = 0x20
0x620: V558 = ADD 0x20 S1
0x622: V559 = 0x20
0x624: V560 = MUL 0x20 0x4
0x625: V561 = ADD 0x80 V558
0x626: V562 = M[V561]
0x628: V563 = 0x5
0x62b: V564 = M[S9]
0x62d: V565 = LT 0x5 V564
0x62e: V566 = 0x633
0x631: JUMPI 0x633 V565
---
Entry stack: [V12, 0xa9, V67, S11, {0xa9, 0x399, 0x3a2}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V552, S1, 0x4]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V562, S9, 0x5]
Exit stack: [V12, 0xa9, V67, S11, {0xa9, 0x399, 0x3a2}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V552, V562, S9, 0x5]

================================

Block 0x632
[0x632:0x632]
---
Predecessors: [0x61c]
Successors: []
---
0x632 INVALID
---
0x632: INVALID 
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x399, 0x3a2}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V562, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x399, 0x3a2}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V562, S1, 0x5]

================================

Block 0x633
[0x633:0x648]
---
Predecessors: [0x61c]
Successors: [0x649, 0x64a]
---
0x633 JUMPDEST
0x634 SWAP1
0x635 PUSH1 0x20
0x637 ADD
0x638 SWAP1
0x639 PUSH1 0x20
0x63b MUL
0x63c ADD
0x63d MLOAD
0x63e DUP10
0x63f PUSH1 0x6
0x641 DUP2
0x642 MLOAD
0x643 DUP2
0x644 LT
0x645 PUSH2 0x64a
0x648 JUMPI
---
0x633: JUMPDEST 
0x635: V567 = 0x20
0x637: V568 = ADD 0x20 S1
0x639: V569 = 0x20
0x63b: V570 = MUL 0x20 0x5
0x63c: V571 = ADD 0xa0 V568
0x63d: V572 = M[V571]
0x63f: V573 = 0x6
0x642: V574 = M[S10]
0x644: V575 = LT 0x6 V574
0x645: V576 = 0x64a
0x648: JUMPI 0x64a V575
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x399, 0x3a2}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V562, S1, 0x5]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V572, S10, 0x6]
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x399, 0x3a2}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V562, V572, S10, 0x6]

================================

Block 0x649
[0x649:0x649]
---
Predecessors: [0x633]
Successors: []
---
0x649 INVALID
---
0x649: INVALID 
---
Entry stack: [V12, 0xa9, V67, S13, {0xa9, 0x399, 0x3a2}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V572, S1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S13, {0xa9, 0x399, 0x3a2}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V572, S1, 0x6]

================================

Block 0x64a
[0x64a:0x65f]
---
Predecessors: [0x633]
Successors: [0x660, 0x661]
---
0x64a JUMPDEST
0x64b SWAP1
0x64c PUSH1 0x20
0x64e ADD
0x64f SWAP1
0x650 PUSH1 0x20
0x652 MUL
0x653 ADD
0x654 MLOAD
0x655 DUP11
0x656 PUSH1 0x7
0x658 DUP2
0x659 MLOAD
0x65a DUP2
0x65b LT
0x65c PUSH2 0x661
0x65f JUMPI
---
0x64a: JUMPDEST 
0x64c: V577 = 0x20
0x64e: V578 = ADD 0x20 S1
0x650: V579 = 0x20
0x652: V580 = MUL 0x20 0x6
0x653: V581 = ADD 0xc0 V578
0x654: V582 = M[V581]
0x656: V583 = 0x7
0x659: V584 = M[S11]
0x65b: V585 = LT 0x7 V584
0x65c: V586 = 0x661
0x65f: JUMPI 0x661 V585
---
Entry stack: [V12, 0xa9, V67, S13, {0xa9, 0x399, 0x3a2}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V572, S1, 0x6]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V582, S11, 0x7]
Exit stack: [V12, 0xa9, V67, S13, {0xa9, 0x399, 0x3a2}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V572, V582, S11, 0x7]

================================

Block 0x660
[0x660:0x660]
---
Predecessors: [0x64a]
Successors: []
---
0x660 INVALID
---
0x660: INVALID 
---
Entry stack: [V12, 0xa9, V67, S14, {0xa9, 0x399, 0x3a2}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V582, S1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S14, {0xa9, 0x399, 0x3a2}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V582, S1, 0x7]

================================

Block 0x661
[0x661:0x676]
---
Predecessors: [0x64a]
Successors: [0x677, 0x678]
---
0x661 JUMPDEST
0x662 SWAP1
0x663 PUSH1 0x20
0x665 ADD
0x666 SWAP1
0x667 PUSH1 0x20
0x669 MUL
0x66a ADD
0x66b MLOAD
0x66c DUP12
0x66d PUSH1 0x8
0x66f DUP2
0x670 MLOAD
0x671 DUP2
0x672 LT
0x673 PUSH2 0x678
0x676 JUMPI
---
0x661: JUMPDEST 
0x663: V587 = 0x20
0x665: V588 = ADD 0x20 S1
0x667: V589 = 0x20
0x669: V590 = MUL 0x20 0x7
0x66a: V591 = ADD 0xe0 V588
0x66b: V592 = M[V591]
0x66d: V593 = 0x8
0x670: V594 = M[S12]
0x672: V595 = LT 0x8 V594
0x673: V596 = 0x678
0x676: JUMPI 0x678 V595
---
Entry stack: [V12, 0xa9, V67, S14, {0xa9, 0x399, 0x3a2}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V582, S1, 0x7]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V592, S12, 0x8]
Exit stack: [V12, 0xa9, V67, S14, {0xa9, 0x399, 0x3a2}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V582, V592, S12, 0x8]

================================

Block 0x677
[0x677:0x677]
---
Predecessors: [0x661]
Successors: []
---
0x677 INVALID
---
0x677: INVALID 
---
Entry stack: [V12, 0xa9, V67, S15, {0xa9, 0x399, 0x3a2}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V592, S1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S15, {0xa9, 0x399, 0x3a2}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V592, S1, 0x8]

================================

Block 0x678
[0x678:0x68d]
---
Predecessors: [0x661]
Successors: [0x68e, 0x68f]
---
0x678 JUMPDEST
0x679 SWAP1
0x67a PUSH1 0x20
0x67c ADD
0x67d SWAP1
0x67e PUSH1 0x20
0x680 MUL
0x681 ADD
0x682 MLOAD
0x683 DUP13
0x684 PUSH1 0x9
0x686 DUP2
0x687 MLOAD
0x688 DUP2
0x689 LT
0x68a PUSH2 0x68f
0x68d JUMPI
---
0x678: JUMPDEST 
0x67a: V597 = 0x20
0x67c: V598 = ADD 0x20 S1
0x67e: V599 = 0x20
0x680: V600 = MUL 0x20 0x8
0x681: V601 = ADD 0x100 V598
0x682: V602 = M[V601]
0x684: V603 = 0x9
0x687: V604 = M[S13]
0x689: V605 = LT 0x9 V604
0x68a: V606 = 0x68f
0x68d: JUMPI 0x68f V605
---
Entry stack: [V12, 0xa9, V67, S15, {0xa9, 0x399, 0x3a2}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V592, S1, 0x8]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V602, S13, 0x9]
Exit stack: [V12, 0xa9, V67, S15, {0xa9, 0x399, 0x3a2}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V592, V602, S13, 0x9]

================================

Block 0x68e
[0x68e:0x68e]
---
Predecessors: [0x678]
Successors: []
---
0x68e INVALID
---
0x68e: INVALID 
---
Entry stack: [V12, 0xa9, V67, S16, {0xa9, 0x399, 0x3a2}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V602, S1, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S16, {0xa9, 0x399, 0x3a2}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V602, S1, 0x9]

================================

Block 0x68f
[0x68f:0x6a4]
---
Predecessors: [0x678]
Successors: [0x6a5, 0x6a6]
---
0x68f JUMPDEST
0x690 SWAP1
0x691 PUSH1 0x20
0x693 ADD
0x694 SWAP1
0x695 PUSH1 0x20
0x697 MUL
0x698 ADD
0x699 MLOAD
0x69a DUP14
0x69b PUSH1 0xa
0x69d DUP2
0x69e MLOAD
0x69f DUP2
0x6a0 LT
0x6a1 PUSH2 0x6a6
0x6a4 JUMPI
---
0x68f: JUMPDEST 
0x691: V607 = 0x20
0x693: V608 = ADD 0x20 S1
0x695: V609 = 0x20
0x697: V610 = MUL 0x20 0x9
0x698: V611 = ADD 0x120 V608
0x699: V612 = M[V611]
0x69b: V613 = 0xa
0x69e: V614 = M[S14]
0x6a0: V615 = LT 0xa V614
0x6a1: V616 = 0x6a6
0x6a4: JUMPI 0x6a6 V615
---
Entry stack: [V12, 0xa9, V67, S16, {0xa9, 0x399, 0x3a2}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V602, S1, 0x9]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V612, S14, 0xa]
Exit stack: [V12, 0xa9, V67, S16, {0xa9, 0x399, 0x3a2}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V602, V612, S14, 0xa]

================================

Block 0x6a5
[0x6a5:0x6a5]
---
Predecessors: [0x68f]
Successors: []
---
0x6a5 INVALID
---
0x6a5: INVALID 
---
Entry stack: [V12, 0xa9, V67, S17, {0xa9, 0x399, 0x3a2}, S15, S14, 0xa19b14a, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V612, S1, 0xa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S17, {0xa9, 0x399, 0x3a2}, S15, S14, 0xa19b14a, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V612, S1, 0xa]

================================

Block 0x6a6
[0x6a6:0x73f]
---
Predecessors: [0x68f]
Successors: [0x740, 0x744]
---
0x6a6 JUMPDEST
0x6a7 SWAP1
0x6a8 PUSH1 0x20
0x6aa ADD
0x6ab SWAP1
0x6ac PUSH1 0x20
0x6ae MUL
0x6af ADD
0x6b0 MLOAD
0x6b1 PUSH1 0x40
0x6b3 MLOAD
0x6b4 PUSH1 0xe0
0x6b6 PUSH1 0x2
0x6b8 EXP
0x6b9 PUSH4 0xffffffff
0x6be DUP16
0x6bf AND
0x6c0 MUL
0x6c1 DUP2
0x6c2 MSTORE
0x6c3 PUSH1 0x1
0x6c5 PUSH1 0xa0
0x6c7 PUSH1 0x2
0x6c9 EXP
0x6ca SUB
0x6cb SWAP12
0x6cc DUP13
0x6cd AND
0x6ce PUSH1 0x4
0x6d0 DUP3
0x6d1 ADD
0x6d2 MSTORE
0x6d3 PUSH1 0x24
0x6d5 DUP2
0x6d6 ADD
0x6d7 SWAP11
0x6d8 SWAP1
0x6d9 SWAP11
0x6da MSTORE
0x6db SWAP8
0x6dc DUP11
0x6dd AND
0x6de PUSH1 0x44
0x6e0 DUP11
0x6e1 ADD
0x6e2 MSTORE
0x6e3 PUSH1 0x64
0x6e5 DUP10
0x6e6 ADD
0x6e7 SWAP7
0x6e8 SWAP1
0x6e9 SWAP7
0x6ea MSTORE
0x6eb PUSH1 0x84
0x6ed DUP9
0x6ee ADD
0x6ef SWAP5
0x6f0 SWAP1
0x6f1 SWAP5
0x6f2 MSTORE
0x6f3 PUSH1 0xa4
0x6f5 DUP8
0x6f6 ADD
0x6f7 SWAP3
0x6f8 SWAP1
0x6f9 SWAP3
0x6fa MSTORE
0x6fb SWAP1
0x6fc SWAP6
0x6fd AND
0x6fe PUSH1 0xc4
0x700 DUP6
0x701 ADD
0x702 MSTORE
0x703 PUSH1 0xff
0x705 SWAP1
0x706 SWAP5
0x707 AND
0x708 PUSH1 0xe4
0x70a DUP5
0x70b ADD
0x70c MSTORE
0x70d PUSH2 0x104
0x710 DUP4
0x711 ADD
0x712 SWAP4
0x713 SWAP1
0x714 SWAP4
0x715 MSTORE
0x716 PUSH2 0x124
0x719 DUP3
0x71a ADD
0x71b SWAP3
0x71c SWAP1
0x71d SWAP3
0x71e MSTORE
0x71f PUSH2 0x144
0x722 DUP2
0x723 ADD
0x724 SWAP2
0x725 SWAP1
0x726 SWAP2
0x727 MSTORE
0x728 PUSH2 0x164
0x72b ADD
0x72c PUSH1 0x0
0x72e PUSH1 0x40
0x730 MLOAD
0x731 DUP1
0x732 DUP4
0x733 SUB
0x734 DUP2
0x735 PUSH1 0x0
0x737 DUP9
0x738 DUP1
0x739 EXTCODESIZE
0x73a ISZERO
0x73b ISZERO
0x73c PUSH2 0x744
0x73f JUMPI
---
0x6a6: JUMPDEST 
0x6a8: V617 = 0x20
0x6aa: V618 = ADD 0x20 S1
0x6ac: V619 = 0x20
0x6ae: V620 = MUL 0x20 0xa
0x6af: V621 = ADD 0x140 V618
0x6b0: V622 = M[V621]
0x6b1: V623 = 0x40
0x6b3: V624 = M[0x40]
0x6b4: V625 = 0xe0
0x6b6: V626 = 0x2
0x6b8: V627 = EXP 0x2 0xe0
0x6b9: V628 = 0xffffffff
0x6bf: V629 = AND 0xa19b14a 0xffffffff
0x6c0: V630 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x6c2: M[V624] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x6c3: V631 = 0x1
0x6c5: V632 = 0xa0
0x6c7: V633 = 0x2
0x6c9: V634 = EXP 0x2 0xa0
0x6ca: V635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cd: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x6ce: V637 = 0x4
0x6d1: V638 = ADD V624 0x4
0x6d2: M[V638] = V636
0x6d3: V639 = 0x24
0x6d6: V640 = ADD V624 0x24
0x6da: M[V640] = S10
0x6dd: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x6de: V642 = 0x44
0x6e1: V643 = ADD V624 0x44
0x6e2: M[V643] = V641
0x6e3: V644 = 0x64
0x6e6: V645 = ADD V624 0x64
0x6ea: M[V645] = S8
0x6eb: V646 = 0x84
0x6ee: V647 = ADD V624 0x84
0x6f2: M[V647] = S7
0x6f3: V648 = 0xa4
0x6f6: V649 = ADD V624 0xa4
0x6fa: M[V649] = S6
0x6fd: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x6fe: V651 = 0xc4
0x701: V652 = ADD V624 0xc4
0x702: M[V652] = V650
0x703: V653 = 0xff
0x707: V654 = AND S4 0xff
0x708: V655 = 0xe4
0x70b: V656 = ADD V624 0xe4
0x70c: M[V656] = V654
0x70d: V657 = 0x104
0x711: V658 = ADD V624 0x104
0x715: M[V658] = S3
0x716: V659 = 0x124
0x71a: V660 = ADD V624 0x124
0x71e: M[V660] = V612
0x71f: V661 = 0x144
0x723: V662 = ADD V624 0x144
0x727: M[V662] = V622
0x728: V663 = 0x164
0x72b: V664 = ADD 0x164 V624
0x72c: V665 = 0x0
0x72e: V666 = 0x40
0x730: V667 = M[0x40]
0x733: V668 = SUB V664 V667
0x735: V669 = 0x0
0x739: V670 = EXTCODESIZE S14
0x73a: V671 = ISZERO V670
0x73b: V672 = ISZERO V671
0x73c: V673 = 0x744
0x73f: JUMPI 0x744 V672
---
Entry stack: [V12, 0xa9, V67, S17, {0xa9, 0x399, 0x3a2}, S15, S14, 0xa19b14a, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V612, S1, 0xa]
Stack pops: 15
Stack additions: [S14, S13, S12, V664, 0x0, V667, V668, V667, 0x0, S14]
Exit stack: [V12, 0xa9, V67, S17, {0xa9, 0x399, 0x3a2}, S15, S14, 0xa19b14a, S12, V664, 0x0, V667, V668, V667, 0x0, S14]

================================

Block 0x740
[0x740:0x743]
---
Predecessors: [0x6a6]
Successors: []
---
0x740 PUSH1 0x0
0x742 DUP1
0x743 REVERT
---
0x740: V674 = 0x0
0x743: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x399, 0x3a2}, S10, S9, 0xa19b14a, S7, V664, 0x0, V667, V668, V667, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x399, 0x3a2}, S10, S9, 0xa19b14a, S7, V664, 0x0, V667, V668, V667, 0x0, S0]

================================

Block 0x744
[0x744:0x74c]
---
Predecessors: [0x6a6]
Successors: [0x74d, 0x751]
---
0x744 JUMPDEST
0x745 DUP8
0x746 CALL
0x747 ISZERO
0x748 ISZERO
0x749 PUSH2 0x751
0x74c JUMPI
---
0x744: JUMPDEST 
0x746: V675 = CALL S7 S0 0x0 V667 V668 V667 0x0
0x747: V676 = ISZERO V675
0x748: V677 = ISZERO V676
0x749: V678 = 0x751
0x74c: JUMPI 0x751 V677
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x399, 0x3a2}, S10, S9, 0xa19b14a, S7, V664, 0x0, V667, V668, V667, 0x0, S0]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x399, 0x3a2}, S10, S9, 0xa19b14a, S7, V664]

================================

Block 0x74d
[0x74d:0x750]
---
Predecessors: [0x744]
Successors: []
---
0x74d PUSH1 0x0
0x74f DUP1
0x750 REVERT
---
0x74d: V679 = 0x0
0x750: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S6, {0xa9, 0x399, 0x3a2}, S4, S3, 0xa19b14a, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S6, {0xa9, 0x399, 0x3a2}, S4, S3, 0xa19b14a, S1, S0]

================================

Block 0x751
[0x751:0x755]
---
Predecessors: [0x744]
Successors: [0x756]
---
0x751 JUMPDEST
0x752 POP
0x753 POP
0x754 POP
0x755 POP
---
0x751: JUMPDEST 
---
Entry stack: [V12, 0xa9, V67, S6, {0xa9, 0x399, 0x3a2}, S4, S3, 0xa19b14a, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xa9, V67, S6, {0xa9, 0x399, 0x3a2}, S4]

================================

Block 0x756
[0x756:0x758]
---
Predecessors: [0x751]
Successors: [0xa9, 0x399, 0x3a2]
---
0x756 JUMPDEST
0x757 POP
0x758 JUMP
---
0x756: JUMPDEST 
0x758: JUMP {0xa9, 0x399, 0x3a2}
---
Entry stack: [V12, 0xa9, V67, S2, {0xa9, 0x399, 0x3a2}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xa9, V67, S2]

================================

Block 0x759
[0x759:0x777]
---
Predecessors: [0x229, 0x36b]
Successors: [0x778, 0x779]
---
0x759 JUMPDEST
0x75a PUSH1 0x1
0x75c SLOAD
0x75d PUSH1 0x0
0x75f SWAP1
0x760 PUSH1 0x1
0x762 PUSH1 0xa0
0x764 PUSH1 0x2
0x766 EXP
0x767 SUB
0x768 AND
0x769 PUSH4 0x6c86888b
0x76e DUP4
0x76f DUP4
0x770 DUP2
0x771 MLOAD
0x772 DUP2
0x773 LT
0x774 PUSH2 0x779
0x777 JUMPI
---
0x759: JUMPDEST 
0x75a: V680 = 0x1
0x75c: V681 = S[0x1]
0x75d: V682 = 0x0
0x760: V683 = 0x1
0x762: V684 = 0xa0
0x764: V685 = 0x2
0x766: V686 = EXP 0x2 0xa0
0x767: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x768: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0x769: V689 = 0x6c86888b
0x771: V690 = M[S0]
0x773: V691 = LT 0x0 V690
0x774: V692 = 0x779
0x777: JUMPI 0x779 V691
---
Entry stack: [V12, 0xa9, V67, S2, {0x26d, 0x374}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V688, 0x6c86888b, S0, 0x0]
Exit stack: [V12, 0xa9, V67, S2, {0x26d, 0x374}, S0, 0x0, V688, 0x6c86888b, S0, 0x0]

================================

Block 0x778
[0x778:0x778]
---
Predecessors: [0x759]
Successors: []
---
0x778 INVALID
---
0x778: INVALID 
---
Entry stack: [V12, 0xa9, V67, S7, {0x26d, 0x374}, S5, 0x0, V688, 0x6c86888b, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S7, {0x26d, 0x374}, S5, 0x0, V688, 0x6c86888b, S1, 0x0]

================================

Block 0x779
[0x779:0x78e]
---
Predecessors: [0x759]
Successors: [0x78f, 0x790]
---
0x779 JUMPDEST
0x77a SWAP1
0x77b PUSH1 0x20
0x77d ADD
0x77e SWAP1
0x77f PUSH1 0x20
0x781 MUL
0x782 ADD
0x783 MLOAD
0x784 DUP5
0x785 PUSH1 0x1
0x787 DUP2
0x788 MLOAD
0x789 DUP2
0x78a LT
0x78b PUSH2 0x790
0x78e JUMPI
---
0x779: JUMPDEST 
0x77b: V693 = 0x20
0x77d: V694 = ADD 0x20 S1
0x77f: V695 = 0x20
0x781: V696 = MUL 0x20 0x0
0x782: V697 = ADD 0x0 V694
0x783: V698 = M[V697]
0x785: V699 = 0x1
0x788: V700 = M[S5]
0x78a: V701 = LT 0x1 V700
0x78b: V702 = 0x790
0x78e: JUMPI 0x790 V701
---
Entry stack: [V12, 0xa9, V67, S7, {0x26d, 0x374}, S5, 0x0, V688, 0x6c86888b, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V698, S5, 0x1]
Exit stack: [V12, 0xa9, V67, S7, {0x26d, 0x374}, S5, 0x0, V688, 0x6c86888b, V698, S5, 0x1]

================================

Block 0x78f
[0x78f:0x78f]
---
Predecessors: [0x779]
Successors: []
---
0x78f INVALID
---
0x78f: INVALID 
---
Entry stack: [V12, 0xa9, V67, S8, {0x26d, 0x374}, S6, 0x0, S4, 0x6c86888b, V698, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S8, {0x26d, 0x374}, S6, 0x0, S4, 0x6c86888b, V698, S1, 0x1]

================================

Block 0x790
[0x790:0x7a5]
---
Predecessors: [0x779]
Successors: [0x7a6, 0x7a7]
---
0x790 JUMPDEST
0x791 SWAP1
0x792 PUSH1 0x20
0x794 ADD
0x795 SWAP1
0x796 PUSH1 0x20
0x798 MUL
0x799 ADD
0x79a MLOAD
0x79b DUP6
0x79c PUSH1 0x2
0x79e DUP2
0x79f MLOAD
0x7a0 DUP2
0x7a1 LT
0x7a2 PUSH2 0x7a7
0x7a5 JUMPI
---
0x790: JUMPDEST 
0x792: V703 = 0x20
0x794: V704 = ADD 0x20 S1
0x796: V705 = 0x20
0x798: V706 = MUL 0x20 0x1
0x799: V707 = ADD 0x20 V704
0x79a: V708 = M[V707]
0x79c: V709 = 0x2
0x79f: V710 = M[S6]
0x7a1: V711 = LT 0x2 V710
0x7a2: V712 = 0x7a7
0x7a5: JUMPI 0x7a7 V711
---
Entry stack: [V12, 0xa9, V67, S8, {0x26d, 0x374}, S6, 0x0, S4, 0x6c86888b, V698, S1, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V708, S6, 0x2]
Exit stack: [V12, 0xa9, V67, S8, {0x26d, 0x374}, S6, 0x0, S4, 0x6c86888b, V698, V708, S6, 0x2]

================================

Block 0x7a6
[0x7a6:0x7a6]
---
Predecessors: [0x790]
Successors: []
---
0x7a6 INVALID
---
0x7a6: INVALID 
---
Entry stack: [V12, 0xa9, V67, S9, {0x26d, 0x374}, S7, 0x0, S5, 0x6c86888b, S3, V708, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S9, {0x26d, 0x374}, S7, 0x0, S5, 0x6c86888b, S3, V708, S1, 0x2]

================================

Block 0x7a7
[0x7a7:0x7bc]
---
Predecessors: [0x790]
Successors: [0x7bd, 0x7be]
---
0x7a7 JUMPDEST
0x7a8 SWAP1
0x7a9 PUSH1 0x20
0x7ab ADD
0x7ac SWAP1
0x7ad PUSH1 0x20
0x7af MUL
0x7b0 ADD
0x7b1 MLOAD
0x7b2 DUP7
0x7b3 PUSH1 0x3
0x7b5 DUP2
0x7b6 MLOAD
0x7b7 DUP2
0x7b8 LT
0x7b9 PUSH2 0x7be
0x7bc JUMPI
---
0x7a7: JUMPDEST 
0x7a9: V713 = 0x20
0x7ab: V714 = ADD 0x20 S1
0x7ad: V715 = 0x20
0x7af: V716 = MUL 0x20 0x2
0x7b0: V717 = ADD 0x40 V714
0x7b1: V718 = M[V717]
0x7b3: V719 = 0x3
0x7b6: V720 = M[S7]
0x7b8: V721 = LT 0x3 V720
0x7b9: V722 = 0x7be
0x7bc: JUMPI 0x7be V721
---
Entry stack: [V12, 0xa9, V67, S9, {0x26d, 0x374}, S7, 0x0, S5, 0x6c86888b, S3, V708, S1, 0x2]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V718, S7, 0x3]
Exit stack: [V12, 0xa9, V67, S9, {0x26d, 0x374}, S7, 0x0, S5, 0x6c86888b, S3, V708, V718, S7, 0x3]

================================

Block 0x7bd
[0x7bd:0x7bd]
---
Predecessors: [0x7a7]
Successors: []
---
0x7bd INVALID
---
0x7bd: INVALID 
---
Entry stack: [V12, 0xa9, V67, S10, {0x26d, 0x374}, S8, 0x0, S6, 0x6c86888b, S4, S3, V718, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S10, {0x26d, 0x374}, S8, 0x0, S6, 0x6c86888b, S4, S3, V718, S1, 0x3]

================================

Block 0x7be
[0x7be:0x7d3]
---
Predecessors: [0x7a7]
Successors: [0x7d4, 0x7d5]
---
0x7be JUMPDEST
0x7bf SWAP1
0x7c0 PUSH1 0x20
0x7c2 ADD
0x7c3 SWAP1
0x7c4 PUSH1 0x20
0x7c6 MUL
0x7c7 ADD
0x7c8 MLOAD
0x7c9 DUP8
0x7ca PUSH1 0x4
0x7cc DUP2
0x7cd MLOAD
0x7ce DUP2
0x7cf LT
0x7d0 PUSH2 0x7d5
0x7d3 JUMPI
---
0x7be: JUMPDEST 
0x7c0: V723 = 0x20
0x7c2: V724 = ADD 0x20 S1
0x7c4: V725 = 0x20
0x7c6: V726 = MUL 0x20 0x3
0x7c7: V727 = ADD 0x60 V724
0x7c8: V728 = M[V727]
0x7ca: V729 = 0x4
0x7cd: V730 = M[S8]
0x7cf: V731 = LT 0x4 V730
0x7d0: V732 = 0x7d5
0x7d3: JUMPI 0x7d5 V731
---
Entry stack: [V12, 0xa9, V67, S10, {0x26d, 0x374}, S8, 0x0, S6, 0x6c86888b, S4, S3, V718, S1, 0x3]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V728, S8, 0x4]
Exit stack: [V12, 0xa9, V67, S10, {0x26d, 0x374}, S8, 0x0, S6, 0x6c86888b, S4, S3, V718, V728, S8, 0x4]

================================

Block 0x7d4
[0x7d4:0x7d4]
---
Predecessors: [0x7be]
Successors: []
---
0x7d4 INVALID
---
0x7d4: INVALID 
---
Entry stack: [V12, 0xa9, V67, S11, {0x26d, 0x374}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V728, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S11, {0x26d, 0x374}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V728, S1, 0x4]

================================

Block 0x7d5
[0x7d5:0x7ea]
---
Predecessors: [0x7be]
Successors: [0x7eb, 0x7ec]
---
0x7d5 JUMPDEST
0x7d6 SWAP1
0x7d7 PUSH1 0x20
0x7d9 ADD
0x7da SWAP1
0x7db PUSH1 0x20
0x7dd MUL
0x7de ADD
0x7df MLOAD
0x7e0 DUP9
0x7e1 PUSH1 0x5
0x7e3 DUP2
0x7e4 MLOAD
0x7e5 DUP2
0x7e6 LT
0x7e7 PUSH2 0x7ec
0x7ea JUMPI
---
0x7d5: JUMPDEST 
0x7d7: V733 = 0x20
0x7d9: V734 = ADD 0x20 S1
0x7db: V735 = 0x20
0x7dd: V736 = MUL 0x20 0x4
0x7de: V737 = ADD 0x80 V734
0x7df: V738 = M[V737]
0x7e1: V739 = 0x5
0x7e4: V740 = M[S9]
0x7e6: V741 = LT 0x5 V740
0x7e7: V742 = 0x7ec
0x7ea: JUMPI 0x7ec V741
---
Entry stack: [V12, 0xa9, V67, S11, {0x26d, 0x374}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V728, S1, 0x4]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V738, S9, 0x5]
Exit stack: [V12, 0xa9, V67, S11, {0x26d, 0x374}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V728, V738, S9, 0x5]

================================

Block 0x7eb
[0x7eb:0x7eb]
---
Predecessors: [0x7d5]
Successors: []
---
0x7eb INVALID
---
0x7eb: INVALID 
---
Entry stack: [V12, 0xa9, V67, S12, {0x26d, 0x374}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V738, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0x26d, 0x374}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V738, S1, 0x5]

================================

Block 0x7ec
[0x7ec:0x801]
---
Predecessors: [0x7d5]
Successors: [0x802, 0x803]
---
0x7ec JUMPDEST
0x7ed SWAP1
0x7ee PUSH1 0x20
0x7f0 ADD
0x7f1 SWAP1
0x7f2 PUSH1 0x20
0x7f4 MUL
0x7f5 ADD
0x7f6 MLOAD
0x7f7 DUP10
0x7f8 PUSH1 0x6
0x7fa DUP2
0x7fb MLOAD
0x7fc DUP2
0x7fd LT
0x7fe PUSH2 0x803
0x801 JUMPI
---
0x7ec: JUMPDEST 
0x7ee: V743 = 0x20
0x7f0: V744 = ADD 0x20 S1
0x7f2: V745 = 0x20
0x7f4: V746 = MUL 0x20 0x5
0x7f5: V747 = ADD 0xa0 V744
0x7f6: V748 = M[V747]
0x7f8: V749 = 0x6
0x7fb: V750 = M[S10]
0x7fd: V751 = LT 0x6 V750
0x7fe: V752 = 0x803
0x801: JUMPI 0x803 V751
---
Entry stack: [V12, 0xa9, V67, S12, {0x26d, 0x374}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V738, S1, 0x5]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V748, S10, 0x6]
Exit stack: [V12, 0xa9, V67, S12, {0x26d, 0x374}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V738, V748, S10, 0x6]

================================

Block 0x802
[0x802:0x802]
---
Predecessors: [0x7ec]
Successors: []
---
0x802 INVALID
---
0x802: INVALID 
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x374}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V748, S1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x374}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V748, S1, 0x6]

================================

Block 0x803
[0x803:0x818]
---
Predecessors: [0x7ec]
Successors: [0x819, 0x81a]
---
0x803 JUMPDEST
0x804 SWAP1
0x805 PUSH1 0x20
0x807 ADD
0x808 SWAP1
0x809 PUSH1 0x20
0x80b MUL
0x80c ADD
0x80d MLOAD
0x80e DUP11
0x80f PUSH1 0x7
0x811 DUP2
0x812 MLOAD
0x813 DUP2
0x814 LT
0x815 PUSH2 0x81a
0x818 JUMPI
---
0x803: JUMPDEST 
0x805: V753 = 0x20
0x807: V754 = ADD 0x20 S1
0x809: V755 = 0x20
0x80b: V756 = MUL 0x20 0x6
0x80c: V757 = ADD 0xc0 V754
0x80d: V758 = M[V757]
0x80f: V759 = 0x7
0x812: V760 = M[S11]
0x814: V761 = LT 0x7 V760
0x815: V762 = 0x81a
0x818: JUMPI 0x81a V761
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x374}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V748, S1, 0x6]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V758, S11, 0x7]
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x374}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V748, V758, S11, 0x7]

================================

Block 0x819
[0x819:0x819]
---
Predecessors: [0x803]
Successors: []
---
0x819 INVALID
---
0x819: INVALID 
---
Entry stack: [V12, 0xa9, V67, S14, {0x26d, 0x374}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V758, S1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S14, {0x26d, 0x374}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V758, S1, 0x7]

================================

Block 0x81a
[0x81a:0x82f]
---
Predecessors: [0x803]
Successors: [0x830, 0x831]
---
0x81a JUMPDEST
0x81b SWAP1
0x81c PUSH1 0x20
0x81e ADD
0x81f SWAP1
0x820 PUSH1 0x20
0x822 MUL
0x823 ADD
0x824 MLOAD
0x825 DUP12
0x826 PUSH1 0x8
0x828 DUP2
0x829 MLOAD
0x82a DUP2
0x82b LT
0x82c PUSH2 0x831
0x82f JUMPI
---
0x81a: JUMPDEST 
0x81c: V763 = 0x20
0x81e: V764 = ADD 0x20 S1
0x820: V765 = 0x20
0x822: V766 = MUL 0x20 0x7
0x823: V767 = ADD 0xe0 V764
0x824: V768 = M[V767]
0x826: V769 = 0x8
0x829: V770 = M[S12]
0x82b: V771 = LT 0x8 V770
0x82c: V772 = 0x831
0x82f: JUMPI 0x831 V771
---
Entry stack: [V12, 0xa9, V67, S14, {0x26d, 0x374}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V758, S1, 0x7]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V768, S12, 0x8]
Exit stack: [V12, 0xa9, V67, S14, {0x26d, 0x374}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V758, V768, S12, 0x8]

================================

Block 0x830
[0x830:0x830]
---
Predecessors: [0x81a]
Successors: []
---
0x830 INVALID
---
0x830: INVALID 
---
Entry stack: [V12, 0xa9, V67, S15, {0x26d, 0x374}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V768, S1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S15, {0x26d, 0x374}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V768, S1, 0x8]

================================

Block 0x831
[0x831:0x846]
---
Predecessors: [0x81a]
Successors: [0x847, 0x848]
---
0x831 JUMPDEST
0x832 SWAP1
0x833 PUSH1 0x20
0x835 ADD
0x836 SWAP1
0x837 PUSH1 0x20
0x839 MUL
0x83a ADD
0x83b MLOAD
0x83c DUP13
0x83d PUSH1 0x9
0x83f DUP2
0x840 MLOAD
0x841 DUP2
0x842 LT
0x843 PUSH2 0x848
0x846 JUMPI
---
0x831: JUMPDEST 
0x833: V773 = 0x20
0x835: V774 = ADD 0x20 S1
0x837: V775 = 0x20
0x839: V776 = MUL 0x20 0x8
0x83a: V777 = ADD 0x100 V774
0x83b: V778 = M[V777]
0x83d: V779 = 0x9
0x840: V780 = M[S13]
0x842: V781 = LT 0x9 V780
0x843: V782 = 0x848
0x846: JUMPI 0x848 V781
---
Entry stack: [V12, 0xa9, V67, S15, {0x26d, 0x374}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V768, S1, 0x8]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V778, S13, 0x9]
Exit stack: [V12, 0xa9, V67, S15, {0x26d, 0x374}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V768, V778, S13, 0x9]

================================

Block 0x847
[0x847:0x847]
---
Predecessors: [0x831]
Successors: []
---
0x847 INVALID
---
0x847: INVALID 
---
Entry stack: [V12, 0xa9, V67, S16, {0x26d, 0x374}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V778, S1, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S16, {0x26d, 0x374}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V778, S1, 0x9]

================================

Block 0x848
[0x848:0x85d]
---
Predecessors: [0x831]
Successors: [0x85e, 0x85f]
---
0x848 JUMPDEST
0x849 SWAP1
0x84a PUSH1 0x20
0x84c ADD
0x84d SWAP1
0x84e PUSH1 0x20
0x850 MUL
0x851 ADD
0x852 MLOAD
0x853 DUP14
0x854 PUSH1 0xa
0x856 DUP2
0x857 MLOAD
0x858 DUP2
0x859 LT
0x85a PUSH2 0x85f
0x85d JUMPI
---
0x848: JUMPDEST 
0x84a: V783 = 0x20
0x84c: V784 = ADD 0x20 S1
0x84e: V785 = 0x20
0x850: V786 = MUL 0x20 0x9
0x851: V787 = ADD 0x120 V784
0x852: V788 = M[V787]
0x854: V789 = 0xa
0x857: V790 = M[S14]
0x859: V791 = LT 0xa V790
0x85a: V792 = 0x85f
0x85d: JUMPI 0x85f V791
---
Entry stack: [V12, 0xa9, V67, S16, {0x26d, 0x374}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V778, S1, 0x9]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V788, S14, 0xa]
Exit stack: [V12, 0xa9, V67, S16, {0x26d, 0x374}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V778, V788, S14, 0xa]

================================

Block 0x85e
[0x85e:0x85e]
---
Predecessors: [0x848]
Successors: []
---
0x85e INVALID
---
0x85e: INVALID 
---
Entry stack: [V12, 0xa9, V67, S17, {0x26d, 0x374}, S15, 0x0, S13, 0x6c86888b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V788, S1, 0xa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S17, {0x26d, 0x374}, S15, 0x0, S13, 0x6c86888b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V788, S1, 0xa]

================================

Block 0x85f
[0x85f:0x900]
---
Predecessors: [0x848]
Successors: [0x527, 0x901]
---
0x85f JUMPDEST
0x860 SWAP1
0x861 PUSH1 0x20
0x863 ADD
0x864 SWAP1
0x865 PUSH1 0x20
0x867 MUL
0x868 ADD
0x869 MLOAD
0x86a ADDRESS
0x86b PUSH1 0x0
0x86d PUSH1 0x40
0x86f MLOAD
0x870 PUSH1 0x20
0x872 ADD
0x873 MSTORE
0x874 PUSH1 0x40
0x876 MLOAD
0x877 PUSH1 0xe0
0x879 PUSH1 0x2
0x87b EXP
0x87c PUSH4 0xffffffff
0x881 DUP16
0x882 AND
0x883 MUL
0x884 DUP2
0x885 MSTORE
0x886 PUSH1 0x1
0x888 PUSH1 0xa0
0x88a PUSH1 0x2
0x88c EXP
0x88d SUB
0x88e SWAP13
0x88f DUP14
0x890 AND
0x891 PUSH1 0x4
0x893 DUP3
0x894 ADD
0x895 MSTORE
0x896 PUSH1 0x24
0x898 DUP2
0x899 ADD
0x89a SWAP12
0x89b SWAP1
0x89c SWAP12
0x89d MSTORE
0x89e SWAP9
0x89f DUP12
0x8a0 AND
0x8a1 PUSH1 0x44
0x8a3 DUP12
0x8a4 ADD
0x8a5 MSTORE
0x8a6 PUSH1 0x64
0x8a8 DUP11
0x8a9 ADD
0x8aa SWAP8
0x8ab SWAP1
0x8ac SWAP8
0x8ad MSTORE
0x8ae PUSH1 0x84
0x8b0 DUP10
0x8b1 ADD
0x8b2 SWAP6
0x8b3 SWAP1
0x8b4 SWAP6
0x8b5 MSTORE
0x8b6 PUSH1 0xa4
0x8b8 DUP9
0x8b9 ADD
0x8ba SWAP4
0x8bb SWAP1
0x8bc SWAP4
0x8bd MSTORE
0x8be SWAP1
0x8bf DUP8
0x8c0 AND
0x8c1 PUSH1 0xc4
0x8c3 DUP8
0x8c4 ADD
0x8c5 MSTORE
0x8c6 PUSH1 0xff
0x8c8 AND
0x8c9 PUSH1 0xe4
0x8cb DUP7
0x8cc ADD
0x8cd MSTORE
0x8ce PUSH2 0x104
0x8d1 DUP6
0x8d2 ADD
0x8d3 MSTORE
0x8d4 PUSH2 0x124
0x8d7 DUP5
0x8d8 ADD
0x8d9 MSTORE
0x8da PUSH2 0x144
0x8dd DUP4
0x8de ADD
0x8df MSTORE
0x8e0 SWAP1
0x8e1 SWAP2
0x8e2 AND
0x8e3 PUSH2 0x164
0x8e6 DUP3
0x8e7 ADD
0x8e8 MSTORE
0x8e9 PUSH2 0x184
0x8ec ADD
0x8ed PUSH1 0x20
0x8ef PUSH1 0x40
0x8f1 MLOAD
0x8f2 DUP1
0x8f3 DUP4
0x8f4 SUB
0x8f5 DUP2
0x8f6 PUSH1 0x0
0x8f8 DUP8
0x8f9 DUP1
0x8fa EXTCODESIZE
0x8fb ISZERO
0x8fc ISZERO
0x8fd PUSH2 0x527
0x900 JUMPI
---
0x85f: JUMPDEST 
0x861: V793 = 0x20
0x863: V794 = ADD 0x20 S1
0x865: V795 = 0x20
0x867: V796 = MUL 0x20 0xa
0x868: V797 = ADD 0x140 V794
0x869: V798 = M[V797]
0x86a: V799 = ADDRESS
0x86b: V800 = 0x0
0x86d: V801 = 0x40
0x86f: V802 = M[0x40]
0x870: V803 = 0x20
0x872: V804 = ADD 0x20 V802
0x873: M[V804] = 0x0
0x874: V805 = 0x40
0x876: V806 = M[0x40]
0x877: V807 = 0xe0
0x879: V808 = 0x2
0x87b: V809 = EXP 0x2 0xe0
0x87c: V810 = 0xffffffff
0x882: V811 = AND 0x6c86888b 0xffffffff
0x883: V812 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x885: M[V806] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x886: V813 = 0x1
0x888: V814 = 0xa0
0x88a: V815 = 0x2
0x88c: V816 = EXP 0x2 0xa0
0x88d: V817 = SUB 0x10000000000000000000000000000000000000000 0x1
0x890: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x891: V819 = 0x4
0x894: V820 = ADD V806 0x4
0x895: M[V820] = V818
0x896: V821 = 0x24
0x899: V822 = ADD V806 0x24
0x89d: M[V822] = S10
0x8a0: V823 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x8a1: V824 = 0x44
0x8a4: V825 = ADD V806 0x44
0x8a5: M[V825] = V823
0x8a6: V826 = 0x64
0x8a9: V827 = ADD V806 0x64
0x8ad: M[V827] = S8
0x8ae: V828 = 0x84
0x8b1: V829 = ADD V806 0x84
0x8b5: M[V829] = S7
0x8b6: V830 = 0xa4
0x8b9: V831 = ADD V806 0xa4
0x8bd: M[V831] = S6
0x8c0: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x8c1: V833 = 0xc4
0x8c4: V834 = ADD V806 0xc4
0x8c5: M[V834] = V832
0x8c6: V835 = 0xff
0x8c8: V836 = AND 0xff S4
0x8c9: V837 = 0xe4
0x8cc: V838 = ADD V806 0xe4
0x8cd: M[V838] = V836
0x8ce: V839 = 0x104
0x8d2: V840 = ADD V806 0x104
0x8d3: M[V840] = S3
0x8d4: V841 = 0x124
0x8d8: V842 = ADD V806 0x124
0x8d9: M[V842] = V788
0x8da: V843 = 0x144
0x8de: V844 = ADD V806 0x144
0x8df: M[V844] = V798
0x8e2: V845 = AND 0xffffffffffffffffffffffffffffffffffffffff V799
0x8e3: V846 = 0x164
0x8e7: V847 = ADD V806 0x164
0x8e8: M[V847] = V845
0x8e9: V848 = 0x184
0x8ec: V849 = ADD 0x184 V806
0x8ed: V850 = 0x20
0x8ef: V851 = 0x40
0x8f1: V852 = M[0x40]
0x8f4: V853 = SUB V849 V852
0x8f6: V854 = 0x0
0x8fa: V855 = EXTCODESIZE S13
0x8fb: V856 = ISZERO V855
0x8fc: V857 = ISZERO V856
0x8fd: V858 = 0x527
0x900: JUMPI 0x527 V857
---
Entry stack: [V12, 0xa9, V67, S17, {0x26d, 0x374}, S15, 0x0, S13, 0x6c86888b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V788, S1, 0xa]
Stack pops: 14
Stack additions: [S13, S12, V849, 0x20, V852, V853, V852, 0x0, S13]
Exit stack: [V12, 0xa9, V67, S17, {0x26d, 0x374}, S15, 0x0, S13, 0x6c86888b, V849, 0x20, V852, V853, V852, 0x0, S13]

================================

Block 0x901
[0x901:0x904]
---
Predecessors: [0x85f]
Successors: []
---
0x901 PUSH1 0x0
0x903 DUP1
0x904 REVERT
---
0x901: V859 = 0x0
0x904: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S12, {0x26d, 0x374}, S10, 0x0, S8, 0x6c86888b, V849, 0x20, V852, V853, V852, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0x26d, 0x374}, S10, 0x0, S8, 0x6c86888b, V849, 0x20, V852, V853, V852, 0x0, S0]

================================

Block 0x905
[0x905:0x911]
---
Predecessors: []
Successors: [0x538, 0x912]
---
0x905 JUMPDEST
0x906 PUSH2 0x2c6
0x909 GAS
0x90a SUB
0x90b CALL
0x90c ISZERO
0x90d ISZERO
0x90e PUSH2 0x538
0x911 JUMPI
---
0x905: JUMPDEST 
0x906: V860 = 0x2c6
0x909: V861 = GAS
0x90a: V862 = SUB V861 0x2c6
0x90b: V863 = CALL V862 S0 S1 S2 S3 S4 S5
0x90c: V864 = ISZERO V863
0x90d: V865 = ISZERO V864
0x90e: V866 = 0x538
0x911: JUMPI 0x538 V865
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x912
[0x912:0x921]
---
Predecessors: [0x905]
Successors: [0x922]
---
0x912 PUSH1 0x0
0x914 DUP1
0x915 REVERT
0x916 JUMPDEST
0x917 POP
0x918 POP
0x919 POP
0x91a PUSH1 0x40
0x91c MLOAD
0x91d DUP1
0x91e MLOAD
0x91f SWAP2
0x920 POP
0x921 POP
---
0x912: V867 = 0x0
0x915: REVERT 0x0 0x0
0x916: JUMPDEST 
0x91a: V868 = 0x40
0x91c: V869 = M[0x40]
0x91e: V870 = M[V869]
---
Entry stack: []
Stack pops: 0
Stack additions: [V870]
Exit stack: []

================================

Block 0x922
[0x922:0x926]
---
Predecessors: [0x912]
Successors: []
Has unresolved jump.
---
0x922 JUMPDEST
0x923 SWAP2
0x924 SWAP1
0x925 POP
0x926 JUMP
---
0x922: JUMPDEST 
0x926: JUMP S2
---
Entry stack: [V870]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V870]

================================

Block 0x927
[0x927:0x93d]
---
Predecessors: [0x28c]
Successors: [0x93e, 0x93f]
---
0x927 JUMPDEST
0x928 PUSH1 0x2
0x92a SLOAD
0x92b CALLER
0x92c PUSH1 0x1
0x92e PUSH1 0xa0
0x930 PUSH1 0x2
0x932 EXP
0x933 SUB
0x934 SWAP1
0x935 DUP2
0x936 AND
0x937 SWAP2
0x938 AND
0x939 EQ
0x93a PUSH2 0x93f
0x93d JUMPI
---
0x927: JUMPDEST 
0x928: V871 = 0x2
0x92a: V872 = S[0x2]
0x92b: V873 = CALLER
0x92c: V874 = 0x1
0x92e: V875 = 0xa0
0x930: V876 = 0x2
0x932: V877 = EXP 0x2 0xa0
0x933: V878 = SUB 0x10000000000000000000000000000000000000000 0x1
0x936: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0x938: V880 = AND V872 0xffffffffffffffffffffffffffffffffffffffff
0x939: V881 = EQ V880 V879
0x93a: V882 = 0x93f
0x93d: JUMPI 0x93f V881
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0x93e
[0x93e:0x93e]
---
Predecessors: [0x927]
Successors: []
---
0x93e INVALID
---
0x93e: INVALID 
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0x93f
[0x93f:0x951]
---
Predecessors: [0x927]
Successors: [0xcb9]
---
0x93f JUMPDEST
0x940 PUSH2 0x952
0x943 ADDRESS
0x944 PUSH1 0x1
0x946 PUSH1 0xa0
0x948 PUSH1 0x2
0x94a EXP
0x94b SUB
0x94c AND
0x94d BALANCE
0x94e PUSH2 0xcb9
0x951 JUMP
---
0x93f: JUMPDEST 
0x940: V883 = 0x952
0x943: V884 = ADDRESS
0x944: V885 = 0x1
0x946: V886 = 0xa0
0x948: V887 = 0x2
0x94a: V888 = EXP 0x2 0xa0
0x94b: V889 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94c: V890 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0x94d: V891 = BALANCE V890
0x94e: V892 = 0xcb9
0x951: JUMP 0xcb9
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: [0x952, V891]
Exit stack: [V12, 0xa9, 0x952, V891]

================================

Block 0x952
[0x952:0x952]
---
Predecessors: [0x3a3, 0x59e]
Successors: [0x953]
---
0x952 JUMPDEST
---
0x952: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x952}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x952}, S1, S0]

================================

Block 0x953
[0x953:0x954]
---
Predecessors: [0x952]
Successors: [0xa9]
---
0x953 JUMPDEST
0x954 JUMP
---
0x953: JUMPDEST 
0x954: JUMP S0
---
Entry stack: [V12, S3, {0xa9, 0x952}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x952}, S1]

================================

Block 0x955
[0x955:0x962]
---
Predecessors: [0x2a1, 0x37b]
Successors: [0x963, 0x964]
---
0x955 JUMPDEST
0x956 PUSH1 0x0
0x958 DUP2
0x959 PUSH1 0xa
0x95b DUP2
0x95c MLOAD
0x95d DUP2
0x95e LT
0x95f PUSH2 0x964
0x962 JUMPI
---
0x955: JUMPDEST 
0x956: V893 = 0x0
0x959: V894 = 0xa
0x95c: V895 = M[S0]
0x95e: V896 = LT 0xa V895
0x95f: V897 = 0x964
0x962: JUMPI 0x964 V896
---
Entry stack: [V12, 0xa9, V67, S2, {0x26d, 0x384}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, S0, 0xa]
Exit stack: [V12, 0xa9, V67, S2, {0x26d, 0x384}, S0, 0x0, S0, 0xa]

================================

Block 0x963
[0x963:0x963]
---
Predecessors: [0x955]
Successors: []
---
0x963 INVALID
---
0x963: INVALID 
---
Entry stack: [V12, 0xa9, V67, S5, {0x26d, 0x384}, S3, 0x0, S1, 0xa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S5, {0x26d, 0x384}, S3, 0x0, S1, 0xa]

================================

Block 0x964
[0x964:0x98a]
---
Predecessors: [0x955]
Successors: [0x98b, 0x98c]
---
0x964 JUMPDEST
0x965 SWAP1
0x966 PUSH1 0x20
0x968 ADD
0x969 SWAP1
0x96a PUSH1 0x20
0x96c MUL
0x96d ADD
0x96e MLOAD
0x96f PUSH1 0x1
0x971 SLOAD
0x972 PUSH1 0x1
0x974 PUSH1 0xa0
0x976 PUSH1 0x2
0x978 EXP
0x979 SUB
0x97a AND
0x97b PUSH4 0xfb6e155f
0x980 DUP5
0x981 PUSH1 0x0
0x983 DUP2
0x984 MLOAD
0x985 DUP2
0x986 LT
0x987 PUSH2 0x98c
0x98a JUMPI
---
0x964: JUMPDEST 
0x966: V898 = 0x20
0x968: V899 = ADD 0x20 S1
0x96a: V900 = 0x20
0x96c: V901 = MUL 0x20 0xa
0x96d: V902 = ADD 0x140 V899
0x96e: V903 = M[V902]
0x96f: V904 = 0x1
0x971: V905 = S[0x1]
0x972: V906 = 0x1
0x974: V907 = 0xa0
0x976: V908 = 0x2
0x978: V909 = EXP 0x2 0xa0
0x979: V910 = SUB 0x10000000000000000000000000000000000000000 0x1
0x97a: V911 = AND 0xffffffffffffffffffffffffffffffffffffffff V905
0x97b: V912 = 0xfb6e155f
0x981: V913 = 0x0
0x984: V914 = M[S3]
0x986: V915 = LT 0x0 V914
0x987: V916 = 0x98c
0x98a: JUMPI 0x98c V915
---
Entry stack: [V12, 0xa9, V67, S5, {0x26d, 0x384}, S3, 0x0, S1, 0xa]
Stack pops: 4
Stack additions: [S3, S2, V903, V911, 0xfb6e155f, S3, 0x0]
Exit stack: [V12, 0xa9, V67, S5, {0x26d, 0x384}, S3, 0x0, V903, V911, 0xfb6e155f, S3, 0x0]

================================

Block 0x98b
[0x98b:0x98b]
---
Predecessors: [0x964]
Successors: []
---
0x98b INVALID
---
0x98b: INVALID 
---
Entry stack: [V12, 0xa9, V67, S8, {0x26d, 0x384}, S6, 0x0, V903, V911, 0xfb6e155f, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S8, {0x26d, 0x384}, S6, 0x0, V903, V911, 0xfb6e155f, S1, 0x0]

================================

Block 0x98c
[0x98c:0x9a1]
---
Predecessors: [0x964]
Successors: [0x9a2, 0x9a3]
---
0x98c JUMPDEST
0x98d SWAP1
0x98e PUSH1 0x20
0x990 ADD
0x991 SWAP1
0x992 PUSH1 0x20
0x994 MUL
0x995 ADD
0x996 MLOAD
0x997 DUP6
0x998 PUSH1 0x1
0x99a DUP2
0x99b MLOAD
0x99c DUP2
0x99d LT
0x99e PUSH2 0x9a3
0x9a1 JUMPI
---
0x98c: JUMPDEST 
0x98e: V917 = 0x20
0x990: V918 = ADD 0x20 S1
0x992: V919 = 0x20
0x994: V920 = MUL 0x20 0x0
0x995: V921 = ADD 0x0 V918
0x996: V922 = M[V921]
0x998: V923 = 0x1
0x99b: V924 = M[S6]
0x99d: V925 = LT 0x1 V924
0x99e: V926 = 0x9a3
0x9a1: JUMPI 0x9a3 V925
---
Entry stack: [V12, 0xa9, V67, S8, {0x26d, 0x384}, S6, 0x0, V903, V911, 0xfb6e155f, S1, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V922, S6, 0x1]
Exit stack: [V12, 0xa9, V67, S8, {0x26d, 0x384}, S6, 0x0, V903, V911, 0xfb6e155f, V922, S6, 0x1]

================================

Block 0x9a2
[0x9a2:0x9a2]
---
Predecessors: [0x98c]
Successors: []
---
0x9a2 INVALID
---
0x9a2: INVALID 
---
Entry stack: [V12, 0xa9, V67, S9, {0x26d, 0x384}, S7, 0x0, S5, S4, 0xfb6e155f, V922, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S9, {0x26d, 0x384}, S7, 0x0, S5, S4, 0xfb6e155f, V922, S1, 0x1]

================================

Block 0x9a3
[0x9a3:0x9b8]
---
Predecessors: [0x98c]
Successors: [0x9b9, 0x9ba]
---
0x9a3 JUMPDEST
0x9a4 SWAP1
0x9a5 PUSH1 0x20
0x9a7 ADD
0x9a8 SWAP1
0x9a9 PUSH1 0x20
0x9ab MUL
0x9ac ADD
0x9ad MLOAD
0x9ae DUP7
0x9af PUSH1 0x2
0x9b1 DUP2
0x9b2 MLOAD
0x9b3 DUP2
0x9b4 LT
0x9b5 PUSH2 0x9ba
0x9b8 JUMPI
---
0x9a3: JUMPDEST 
0x9a5: V927 = 0x20
0x9a7: V928 = ADD 0x20 S1
0x9a9: V929 = 0x20
0x9ab: V930 = MUL 0x20 0x1
0x9ac: V931 = ADD 0x20 V928
0x9ad: V932 = M[V931]
0x9af: V933 = 0x2
0x9b2: V934 = M[S7]
0x9b4: V935 = LT 0x2 V934
0x9b5: V936 = 0x9ba
0x9b8: JUMPI 0x9ba V935
---
Entry stack: [V12, 0xa9, V67, S9, {0x26d, 0x384}, S7, 0x0, S5, S4, 0xfb6e155f, V922, S1, 0x1]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V932, S7, 0x2]
Exit stack: [V12, 0xa9, V67, S9, {0x26d, 0x384}, S7, 0x0, S5, S4, 0xfb6e155f, V922, V932, S7, 0x2]

================================

Block 0x9b9
[0x9b9:0x9b9]
---
Predecessors: [0x9a3]
Successors: []
---
0x9b9 INVALID
---
0x9b9: INVALID 
---
Entry stack: [V12, 0xa9, V67, S10, {0x26d, 0x384}, S8, 0x0, S6, S5, 0xfb6e155f, S3, V932, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S10, {0x26d, 0x384}, S8, 0x0, S6, S5, 0xfb6e155f, S3, V932, S1, 0x2]

================================

Block 0x9ba
[0x9ba:0x9cf]
---
Predecessors: [0x9a3]
Successors: [0x9d0, 0x9d1]
---
0x9ba JUMPDEST
0x9bb SWAP1
0x9bc PUSH1 0x20
0x9be ADD
0x9bf SWAP1
0x9c0 PUSH1 0x20
0x9c2 MUL
0x9c3 ADD
0x9c4 MLOAD
0x9c5 DUP8
0x9c6 PUSH1 0x3
0x9c8 DUP2
0x9c9 MLOAD
0x9ca DUP2
0x9cb LT
0x9cc PUSH2 0x9d1
0x9cf JUMPI
---
0x9ba: JUMPDEST 
0x9bc: V937 = 0x20
0x9be: V938 = ADD 0x20 S1
0x9c0: V939 = 0x20
0x9c2: V940 = MUL 0x20 0x2
0x9c3: V941 = ADD 0x40 V938
0x9c4: V942 = M[V941]
0x9c6: V943 = 0x3
0x9c9: V944 = M[S8]
0x9cb: V945 = LT 0x3 V944
0x9cc: V946 = 0x9d1
0x9cf: JUMPI 0x9d1 V945
---
Entry stack: [V12, 0xa9, V67, S10, {0x26d, 0x384}, S8, 0x0, S6, S5, 0xfb6e155f, S3, V932, S1, 0x2]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V942, S8, 0x3]
Exit stack: [V12, 0xa9, V67, S10, {0x26d, 0x384}, S8, 0x0, S6, S5, 0xfb6e155f, S3, V932, V942, S8, 0x3]

================================

Block 0x9d0
[0x9d0:0x9d0]
---
Predecessors: [0x9ba]
Successors: []
---
0x9d0 INVALID
---
0x9d0: INVALID 
---
Entry stack: [V12, 0xa9, V67, S11, {0x26d, 0x384}, S9, 0x0, S7, S6, 0xfb6e155f, S4, S3, V942, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S11, {0x26d, 0x384}, S9, 0x0, S7, S6, 0xfb6e155f, S4, S3, V942, S1, 0x3]

================================

Block 0x9d1
[0x9d1:0x9e6]
---
Predecessors: [0x9ba]
Successors: [0x9e7, 0x9e8]
---
0x9d1 JUMPDEST
0x9d2 SWAP1
0x9d3 PUSH1 0x20
0x9d5 ADD
0x9d6 SWAP1
0x9d7 PUSH1 0x20
0x9d9 MUL
0x9da ADD
0x9db MLOAD
0x9dc DUP9
0x9dd PUSH1 0x4
0x9df DUP2
0x9e0 MLOAD
0x9e1 DUP2
0x9e2 LT
0x9e3 PUSH2 0x9e8
0x9e6 JUMPI
---
0x9d1: JUMPDEST 
0x9d3: V947 = 0x20
0x9d5: V948 = ADD 0x20 S1
0x9d7: V949 = 0x20
0x9d9: V950 = MUL 0x20 0x3
0x9da: V951 = ADD 0x60 V948
0x9db: V952 = M[V951]
0x9dd: V953 = 0x4
0x9e0: V954 = M[S9]
0x9e2: V955 = LT 0x4 V954
0x9e3: V956 = 0x9e8
0x9e6: JUMPI 0x9e8 V955
---
Entry stack: [V12, 0xa9, V67, S11, {0x26d, 0x384}, S9, 0x0, S7, S6, 0xfb6e155f, S4, S3, V942, S1, 0x3]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V952, S9, 0x4]
Exit stack: [V12, 0xa9, V67, S11, {0x26d, 0x384}, S9, 0x0, S7, S6, 0xfb6e155f, S4, S3, V942, V952, S9, 0x4]

================================

Block 0x9e7
[0x9e7:0x9e7]
---
Predecessors: [0x9d1]
Successors: []
---
0x9e7 INVALID
---
0x9e7: INVALID 
---
Entry stack: [V12, 0xa9, V67, S12, {0x26d, 0x384}, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V952, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0x26d, 0x384}, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V952, S1, 0x4]

================================

Block 0x9e8
[0x9e8:0x9fd]
---
Predecessors: [0x9d1]
Successors: [0x9fe, 0x9ff]
---
0x9e8 JUMPDEST
0x9e9 SWAP1
0x9ea PUSH1 0x20
0x9ec ADD
0x9ed SWAP1
0x9ee PUSH1 0x20
0x9f0 MUL
0x9f1 ADD
0x9f2 MLOAD
0x9f3 DUP10
0x9f4 PUSH1 0x5
0x9f6 DUP2
0x9f7 MLOAD
0x9f8 DUP2
0x9f9 LT
0x9fa PUSH2 0x9ff
0x9fd JUMPI
---
0x9e8: JUMPDEST 
0x9ea: V957 = 0x20
0x9ec: V958 = ADD 0x20 S1
0x9ee: V959 = 0x20
0x9f0: V960 = MUL 0x20 0x4
0x9f1: V961 = ADD 0x80 V958
0x9f2: V962 = M[V961]
0x9f4: V963 = 0x5
0x9f7: V964 = M[S10]
0x9f9: V965 = LT 0x5 V964
0x9fa: V966 = 0x9ff
0x9fd: JUMPI 0x9ff V965
---
Entry stack: [V12, 0xa9, V67, S12, {0x26d, 0x384}, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V952, S1, 0x4]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V962, S10, 0x5]
Exit stack: [V12, 0xa9, V67, S12, {0x26d, 0x384}, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V952, V962, S10, 0x5]

================================

Block 0x9fe
[0x9fe:0x9fe]
---
Predecessors: [0x9e8]
Successors: []
---
0x9fe INVALID
---
0x9fe: INVALID 
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x384}, S11, 0x0, S9, S8, 0xfb6e155f, S6, S5, S4, S3, V962, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x384}, S11, 0x0, S9, S8, 0xfb6e155f, S6, S5, S4, S3, V962, S1, 0x5]

================================

Block 0x9ff
[0x9ff:0xa14]
---
Predecessors: [0x9e8]
Successors: [0xa15, 0xa16]
---
0x9ff JUMPDEST
0xa00 SWAP1
0xa01 PUSH1 0x20
0xa03 ADD
0xa04 SWAP1
0xa05 PUSH1 0x20
0xa07 MUL
0xa08 ADD
0xa09 MLOAD
0xa0a DUP11
0xa0b PUSH1 0x6
0xa0d DUP2
0xa0e MLOAD
0xa0f DUP2
0xa10 LT
0xa11 PUSH2 0xa16
0xa14 JUMPI
---
0x9ff: JUMPDEST 
0xa01: V967 = 0x20
0xa03: V968 = ADD 0x20 S1
0xa05: V969 = 0x20
0xa07: V970 = MUL 0x20 0x5
0xa08: V971 = ADD 0xa0 V968
0xa09: V972 = M[V971]
0xa0b: V973 = 0x6
0xa0e: V974 = M[S11]
0xa10: V975 = LT 0x6 V974
0xa11: V976 = 0xa16
0xa14: JUMPI 0xa16 V975
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x384}, S11, 0x0, S9, S8, 0xfb6e155f, S6, S5, S4, S3, V962, S1, 0x5]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V972, S11, 0x6]
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x384}, S11, 0x0, S9, S8, 0xfb6e155f, S6, S5, S4, S3, V962, V972, S11, 0x6]

================================

Block 0xa15
[0xa15:0xa15]
---
Predecessors: [0x9ff]
Successors: []
---
0xa15 INVALID
---
0xa15: INVALID 
---
Entry stack: [V12, 0xa9, V67, S14, {0x26d, 0x384}, S12, 0x0, S10, S9, 0xfb6e155f, S7, S6, S5, S4, S3, V972, S1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S14, {0x26d, 0x384}, S12, 0x0, S10, S9, 0xfb6e155f, S7, S6, S5, S4, S3, V972, S1, 0x6]

================================

Block 0xa16
[0xa16:0xa2b]
---
Predecessors: [0x9ff]
Successors: [0xa2c, 0xa2d]
---
0xa16 JUMPDEST
0xa17 SWAP1
0xa18 PUSH1 0x20
0xa1a ADD
0xa1b SWAP1
0xa1c PUSH1 0x20
0xa1e MUL
0xa1f ADD
0xa20 MLOAD
0xa21 DUP12
0xa22 PUSH1 0x7
0xa24 DUP2
0xa25 MLOAD
0xa26 DUP2
0xa27 LT
0xa28 PUSH2 0xa2d
0xa2b JUMPI
---
0xa16: JUMPDEST 
0xa18: V977 = 0x20
0xa1a: V978 = ADD 0x20 S1
0xa1c: V979 = 0x20
0xa1e: V980 = MUL 0x20 0x6
0xa1f: V981 = ADD 0xc0 V978
0xa20: V982 = M[V981]
0xa22: V983 = 0x7
0xa25: V984 = M[S12]
0xa27: V985 = LT 0x7 V984
0xa28: V986 = 0xa2d
0xa2b: JUMPI 0xa2d V985
---
Entry stack: [V12, 0xa9, V67, S14, {0x26d, 0x384}, S12, 0x0, S10, S9, 0xfb6e155f, S7, S6, S5, S4, S3, V972, S1, 0x6]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V982, S12, 0x7]
Exit stack: [V12, 0xa9, V67, S14, {0x26d, 0x384}, S12, 0x0, S10, S9, 0xfb6e155f, S7, S6, S5, S4, S3, V972, V982, S12, 0x7]

================================

Block 0xa2c
[0xa2c:0xa2c]
---
Predecessors: [0xa16]
Successors: []
---
0xa2c INVALID
---
0xa2c: INVALID 
---
Entry stack: [V12, 0xa9, V67, S15, {0x26d, 0x384}, S13, 0x0, S11, S10, 0xfb6e155f, S8, S7, S6, S5, S4, S3, V982, S1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S15, {0x26d, 0x384}, S13, 0x0, S11, S10, 0xfb6e155f, S8, S7, S6, S5, S4, S3, V982, S1, 0x7]

================================

Block 0xa2d
[0xa2d:0xa42]
---
Predecessors: [0xa16]
Successors: [0xa43, 0xa44]
---
0xa2d JUMPDEST
0xa2e SWAP1
0xa2f PUSH1 0x20
0xa31 ADD
0xa32 SWAP1
0xa33 PUSH1 0x20
0xa35 MUL
0xa36 ADD
0xa37 MLOAD
0xa38 DUP13
0xa39 PUSH1 0x8
0xa3b DUP2
0xa3c MLOAD
0xa3d DUP2
0xa3e LT
0xa3f PUSH2 0xa44
0xa42 JUMPI
---
0xa2d: JUMPDEST 
0xa2f: V987 = 0x20
0xa31: V988 = ADD 0x20 S1
0xa33: V989 = 0x20
0xa35: V990 = MUL 0x20 0x7
0xa36: V991 = ADD 0xe0 V988
0xa37: V992 = M[V991]
0xa39: V993 = 0x8
0xa3c: V994 = M[S13]
0xa3e: V995 = LT 0x8 V994
0xa3f: V996 = 0xa44
0xa42: JUMPI 0xa44 V995
---
Entry stack: [V12, 0xa9, V67, S15, {0x26d, 0x384}, S13, 0x0, S11, S10, 0xfb6e155f, S8, S7, S6, S5, S4, S3, V982, S1, 0x7]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V992, S13, 0x8]
Exit stack: [V12, 0xa9, V67, S15, {0x26d, 0x384}, S13, 0x0, S11, S10, 0xfb6e155f, S8, S7, S6, S5, S4, S3, V982, V992, S13, 0x8]

================================

Block 0xa43
[0xa43:0xa43]
---
Predecessors: [0xa2d]
Successors: []
---
0xa43 INVALID
---
0xa43: INVALID 
---
Entry stack: [V12, 0xa9, V67, S16, {0x26d, 0x384}, S14, 0x0, S12, S11, 0xfb6e155f, S9, S8, S7, S6, S5, S4, S3, V992, S1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S16, {0x26d, 0x384}, S14, 0x0, S12, S11, 0xfb6e155f, S9, S8, S7, S6, S5, S4, S3, V992, S1, 0x8]

================================

Block 0xa44
[0xa44:0xa59]
---
Predecessors: [0xa2d]
Successors: [0xa5a, 0xa5b]
---
0xa44 JUMPDEST
0xa45 SWAP1
0xa46 PUSH1 0x20
0xa48 ADD
0xa49 SWAP1
0xa4a PUSH1 0x20
0xa4c MUL
0xa4d ADD
0xa4e MLOAD
0xa4f DUP14
0xa50 PUSH1 0x9
0xa52 DUP2
0xa53 MLOAD
0xa54 DUP2
0xa55 LT
0xa56 PUSH2 0xa5b
0xa59 JUMPI
---
0xa44: JUMPDEST 
0xa46: V997 = 0x20
0xa48: V998 = ADD 0x20 S1
0xa4a: V999 = 0x20
0xa4c: V1000 = MUL 0x20 0x8
0xa4d: V1001 = ADD 0x100 V998
0xa4e: V1002 = M[V1001]
0xa50: V1003 = 0x9
0xa53: V1004 = M[S14]
0xa55: V1005 = LT 0x9 V1004
0xa56: V1006 = 0xa5b
0xa59: JUMPI 0xa5b V1005
---
Entry stack: [V12, 0xa9, V67, S16, {0x26d, 0x384}, S14, 0x0, S12, S11, 0xfb6e155f, S9, S8, S7, S6, S5, S4, S3, V992, S1, 0x8]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1002, S14, 0x9]
Exit stack: [V12, 0xa9, V67, S16, {0x26d, 0x384}, S14, 0x0, S12, S11, 0xfb6e155f, S9, S8, S7, S6, S5, S4, S3, V992, V1002, S14, 0x9]

================================

Block 0xa5a
[0xa5a:0xa5a]
---
Predecessors: [0xa44]
Successors: []
---
0xa5a INVALID
---
0xa5a: INVALID 
---
Entry stack: [V12, 0xa9, V67, S17, {0x26d, 0x384}, S15, 0x0, S13, S12, 0xfb6e155f, S10, S9, S8, S7, S6, S5, S4, S3, V1002, S1, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S17, {0x26d, 0x384}, S15, 0x0, S13, S12, 0xfb6e155f, S10, S9, S8, S7, S6, S5, S4, S3, V1002, S1, 0x9]

================================

Block 0xa5b
[0xa5b:0xaf4]
---
Predecessors: [0xa44]
Successors: [0xaf5, 0xaf9]
---
0xa5b JUMPDEST
0xa5c SWAP1
0xa5d PUSH1 0x20
0xa5f ADD
0xa60 SWAP1
0xa61 PUSH1 0x20
0xa63 MUL
0xa64 ADD
0xa65 MLOAD
0xa66 PUSH1 0x0
0xa68 PUSH1 0x40
0xa6a MLOAD
0xa6b PUSH1 0x20
0xa6d ADD
0xa6e MSTORE
0xa6f PUSH1 0x40
0xa71 MLOAD
0xa72 PUSH1 0xe0
0xa74 PUSH1 0x2
0xa76 EXP
0xa77 PUSH4 0xffffffff
0xa7c DUP14
0xa7d AND
0xa7e MUL
0xa7f DUP2
0xa80 MSTORE
0xa81 PUSH1 0x1
0xa83 PUSH1 0xa0
0xa85 PUSH1 0x2
0xa87 EXP
0xa88 SUB
0xa89 SWAP11
0xa8a DUP12
0xa8b AND
0xa8c PUSH1 0x4
0xa8e DUP3
0xa8f ADD
0xa90 MSTORE
0xa91 PUSH1 0x24
0xa93 DUP2
0xa94 ADD
0xa95 SWAP10
0xa96 SWAP1
0xa97 SWAP10
0xa98 MSTORE
0xa99 SWAP7
0xa9a DUP10
0xa9b AND
0xa9c PUSH1 0x44
0xa9e DUP10
0xa9f ADD
0xaa0 MSTORE
0xaa1 PUSH1 0x64
0xaa3 DUP9
0xaa4 ADD
0xaa5 SWAP6
0xaa6 SWAP1
0xaa7 SWAP6
0xaa8 MSTORE
0xaa9 PUSH1 0x84
0xaab DUP8
0xaac ADD
0xaad SWAP4
0xaae SWAP1
0xaaf SWAP4
0xab0 MSTORE
0xab1 PUSH1 0xa4
0xab3 DUP7
0xab4 ADD
0xab5 SWAP2
0xab6 SWAP1
0xab7 SWAP2
0xab8 MSTORE
0xab9 SWAP1
0xaba SWAP5
0xabb AND
0xabc PUSH1 0xc4
0xabe DUP5
0xabf ADD
0xac0 MSTORE
0xac1 PUSH1 0xff
0xac3 SWAP1
0xac4 SWAP4
0xac5 AND
0xac6 PUSH1 0xe4
0xac8 DUP4
0xac9 ADD
0xaca MSTORE
0xacb PUSH2 0x104
0xace DUP3
0xacf ADD
0xad0 SWAP3
0xad1 SWAP1
0xad2 SWAP3
0xad3 MSTORE
0xad4 PUSH2 0x124
0xad7 DUP2
0xad8 ADD
0xad9 SWAP2
0xada SWAP1
0xadb SWAP2
0xadc MSTORE
0xadd PUSH2 0x144
0xae0 ADD
0xae1 PUSH1 0x20
0xae3 PUSH1 0x40
0xae5 MLOAD
0xae6 DUP1
0xae7 DUP4
0xae8 SUB
0xae9 DUP2
0xaea PUSH1 0x0
0xaec DUP8
0xaed DUP1
0xaee EXTCODESIZE
0xaef ISZERO
0xaf0 ISZERO
0xaf1 PUSH2 0xaf9
0xaf4 JUMPI
---
0xa5b: JUMPDEST 
0xa5d: V1007 = 0x20
0xa5f: V1008 = ADD 0x20 S1
0xa61: V1009 = 0x20
0xa63: V1010 = MUL 0x20 0x9
0xa64: V1011 = ADD 0x120 V1008
0xa65: V1012 = M[V1011]
0xa66: V1013 = 0x0
0xa68: V1014 = 0x40
0xa6a: V1015 = M[0x40]
0xa6b: V1016 = 0x20
0xa6d: V1017 = ADD 0x20 V1015
0xa6e: M[V1017] = 0x0
0xa6f: V1018 = 0x40
0xa71: V1019 = M[0x40]
0xa72: V1020 = 0xe0
0xa74: V1021 = 0x2
0xa76: V1022 = EXP 0x2 0xe0
0xa77: V1023 = 0xffffffff
0xa7d: V1024 = AND 0xfb6e155f 0xffffffff
0xa7e: V1025 = MUL 0xfb6e155f 0x100000000000000000000000000000000000000000000000000000000
0xa80: M[V1019] = 0xfb6e155f00000000000000000000000000000000000000000000000000000000
0xa81: V1026 = 0x1
0xa83: V1027 = 0xa0
0xa85: V1028 = 0x2
0xa87: V1029 = EXP 0x2 0xa0
0xa88: V1030 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8b: V1031 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0xa8c: V1032 = 0x4
0xa8f: V1033 = ADD V1019 0x4
0xa90: M[V1033] = V1031
0xa91: V1034 = 0x24
0xa94: V1035 = ADD V1019 0x24
0xa98: M[V1035] = S9
0xa9b: V1036 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xa9c: V1037 = 0x44
0xa9f: V1038 = ADD V1019 0x44
0xaa0: M[V1038] = V1036
0xaa1: V1039 = 0x64
0xaa4: V1040 = ADD V1019 0x64
0xaa8: M[V1040] = S7
0xaa9: V1041 = 0x84
0xaac: V1042 = ADD V1019 0x84
0xab0: M[V1042] = S6
0xab1: V1043 = 0xa4
0xab4: V1044 = ADD V1019 0xa4
0xab8: M[V1044] = S5
0xabb: V1045 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xabc: V1046 = 0xc4
0xabf: V1047 = ADD V1019 0xc4
0xac0: M[V1047] = V1045
0xac1: V1048 = 0xff
0xac5: V1049 = AND S3 0xff
0xac6: V1050 = 0xe4
0xac9: V1051 = ADD V1019 0xe4
0xaca: M[V1051] = V1049
0xacb: V1052 = 0x104
0xacf: V1053 = ADD V1019 0x104
0xad3: M[V1053] = V1002
0xad4: V1054 = 0x124
0xad8: V1055 = ADD V1019 0x124
0xadc: M[V1055] = V1012
0xadd: V1056 = 0x144
0xae0: V1057 = ADD 0x144 V1019
0xae1: V1058 = 0x20
0xae3: V1059 = 0x40
0xae5: V1060 = M[0x40]
0xae8: V1061 = SUB V1057 V1060
0xaea: V1062 = 0x0
0xaee: V1063 = EXTCODESIZE S12
0xaef: V1064 = ISZERO V1063
0xaf0: V1065 = ISZERO V1064
0xaf1: V1066 = 0xaf9
0xaf4: JUMPI 0xaf9 V1065
---
Entry stack: [V12, 0xa9, V67, S17, {0x26d, 0x384}, S15, 0x0, S13, S12, 0xfb6e155f, S10, S9, S8, S7, S6, S5, S4, S3, V1002, S1, 0x9]
Stack pops: 13
Stack additions: [S12, S11, V1057, 0x20, V1060, V1061, V1060, 0x0, S12]
Exit stack: [V12, 0xa9, V67, S17, {0x26d, 0x384}, S15, 0x0, S13, S12, 0xfb6e155f, V1057, 0x20, V1060, V1061, V1060, 0x0, S12]

================================

Block 0xaf5
[0xaf5:0xaf8]
---
Predecessors: [0xa5b]
Successors: []
---
0xaf5 PUSH1 0x0
0xaf7 DUP1
0xaf8 REVERT
---
0xaf5: V1067 = 0x0
0xaf8: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x384}, S11, 0x0, S9, S8, 0xfb6e155f, V1057, 0x20, V1060, V1061, V1060, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x384}, S11, 0x0, S9, S8, 0xfb6e155f, V1057, 0x20, V1060, V1061, V1060, 0x0, S0]

================================

Block 0xaf9
[0xaf9:0xb05]
---
Predecessors: [0xa5b]
Successors: [0xb06, 0xb0a]
---
0xaf9 JUMPDEST
0xafa PUSH2 0x2c6
0xafd GAS
0xafe SUB
0xaff CALL
0xb00 ISZERO
0xb01 ISZERO
0xb02 PUSH2 0xb0a
0xb05 JUMPI
---
0xaf9: JUMPDEST 
0xafa: V1068 = 0x2c6
0xafd: V1069 = GAS
0xafe: V1070 = SUB V1069 0x2c6
0xaff: V1071 = CALL V1070 S0 0x0 V1060 V1061 V1060 0x20
0xb00: V1072 = ISZERO V1071
0xb01: V1073 = ISZERO V1072
0xb02: V1074 = 0xb0a
0xb05: JUMPI 0xb0a V1073
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x384}, S11, 0x0, S9, S8, 0xfb6e155f, V1057, 0x20, V1060, V1061, V1060, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x384}, S11, 0x0, S9, S8, 0xfb6e155f, V1057]

================================

Block 0xb06
[0xb06:0xb09]
---
Predecessors: [0xaf9]
Successors: []
---
0xb06 PUSH1 0x0
0xb08 DUP1
0xb09 REVERT
---
0xb06: V1075 = 0x0
0xb09: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S7, {0x26d, 0x384}, S5, 0x0, S3, S2, 0xfb6e155f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S7, {0x26d, 0x384}, S5, 0x0, S3, S2, 0xfb6e155f, S0]

================================

Block 0xb0a
[0xb0a:0xb18]
---
Predecessors: [0xaf9]
Successors: [0xb19]
---
0xb0a JUMPDEST
0xb0b POP
0xb0c POP
0xb0d POP
0xb0e PUSH1 0x40
0xb10 MLOAD
0xb11 DUP1
0xb12 MLOAD
0xb13 SWAP1
0xb14 POP
0xb15 LT
0xb16 ISZERO
0xb17 SWAP1
0xb18 POP
---
0xb0a: JUMPDEST 
0xb0e: V1076 = 0x40
0xb10: V1077 = M[0x40]
0xb12: V1078 = M[V1077]
0xb15: V1079 = LT V1078 S3
0xb16: V1080 = ISZERO V1079
---
Entry stack: [V12, 0xa9, V67, S7, {0x26d, 0x384}, S5, 0x0, S3, S2, 0xfb6e155f, S0]
Stack pops: 5
Stack additions: [V1080]
Exit stack: [V12, 0xa9, V67, S7, {0x26d, 0x384}, S5, V1080]

================================

Block 0xb19
[0xb19:0xb1d]
---
Predecessors: [0xb0a]
Successors: [0x26d, 0x384]
---
0xb19 JUMPDEST
0xb1a SWAP2
0xb1b SWAP1
0xb1c POP
0xb1d JUMP
---
0xb19: JUMPDEST 
0xb1d: JUMP {0x26d, 0x384}
---
Entry stack: [V12, 0xa9, V67, S3, {0x26d, 0x384}, S1, V1080]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0xa9, V67, S3, V1080]

================================

Block 0xb1e
[0xb1e:0xb34]
---
Predecessors: [0x304]
Successors: [0xb35, 0xb36]
---
0xb1e JUMPDEST
0xb1f PUSH1 0x2
0xb21 SLOAD
0xb22 CALLER
0xb23 PUSH1 0x1
0xb25 PUSH1 0xa0
0xb27 PUSH1 0x2
0xb29 EXP
0xb2a SUB
0xb2b SWAP1
0xb2c DUP2
0xb2d AND
0xb2e SWAP2
0xb2f AND
0xb30 EQ
0xb31 PUSH2 0xb36
0xb34 JUMPI
---
0xb1e: JUMPDEST 
0xb1f: V1081 = 0x2
0xb21: V1082 = S[0x2]
0xb22: V1083 = CALLER
0xb23: V1084 = 0x1
0xb25: V1085 = 0xa0
0xb27: V1086 = 0x2
0xb29: V1087 = EXP 0x2 0xa0
0xb2a: V1088 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2d: V1089 = AND 0xffffffffffffffffffffffffffffffffffffffff V1083
0xb2f: V1090 = AND V1082 0xffffffffffffffffffffffffffffffffffffffff
0xb30: V1091 = EQ V1090 V1089
0xb31: V1092 = 0xb36
0xb34: JUMPI 0xb36 V1091
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0xb35
[0xb35:0xb35]
---
Predecessors: [0xb1e]
Successors: []
---
0xb35 INVALID
---
0xb35: INVALID 
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0xb36
[0xb36:0xb40]
---
Predecessors: [0xb1e]
Successors: [0x3a7]
---
0xb36 JUMPDEST
0xb37 PUSH2 0x952
0xb3a PUSH2 0xb41
0xb3d PUSH2 0x3a7
0xb40 JUMP
---
0xb36: JUMPDEST 
0xb37: V1093 = 0x952
0xb3a: V1094 = 0xb41
0xb3d: V1095 = 0x3a7
0xb40: JUMP 0x3a7
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: [0x952, 0xb41]
Exit stack: [V12, 0xa9, 0x952, 0xb41]

================================

Block 0xb41
[0xb41:0xb45]
---
Predecessors: [0x427]
Successors: [0x42a]
---
0xb41 JUMPDEST
0xb42 PUSH2 0x42a
0xb45 JUMP
---
0xb41: JUMPDEST 
0xb42: V1096 = 0x42a
0xb45: JUMP 0x42a
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0xb46
[0xb46:0xb46]
---
Predecessors: []
Successors: [0xb47]
---
0xb46 JUMPDEST
---
0xb46: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb47
[0xb47:0xb48]
---
Predecessors: [0xb46]
Successors: []
Has unresolved jump.
---
0xb47 JUMPDEST
0xb48 JUMP
---
0xb47: JUMPDEST 
0xb48: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb49
[0xb49:0xb5f]
---
Predecessors: [0x319]
Successors: [0xb60, 0xb61]
---
0xb49 JUMPDEST
0xb4a PUSH1 0x2
0xb4c SLOAD
0xb4d CALLER
0xb4e PUSH1 0x1
0xb50 PUSH1 0xa0
0xb52 PUSH1 0x2
0xb54 EXP
0xb55 SUB
0xb56 SWAP1
0xb57 DUP2
0xb58 AND
0xb59 SWAP2
0xb5a AND
0xb5b EQ
0xb5c PUSH2 0xb61
0xb5f JUMPI
---
0xb49: JUMPDEST 
0xb4a: V1097 = 0x2
0xb4c: V1098 = S[0x2]
0xb4d: V1099 = CALLER
0xb4e: V1100 = 0x1
0xb50: V1101 = 0xa0
0xb52: V1102 = 0x2
0xb54: V1103 = EXP 0x2 0xa0
0xb55: V1104 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb58: V1105 = AND 0xffffffffffffffffffffffffffffffffffffffff V1099
0xb5a: V1106 = AND V1098 0xffffffffffffffffffffffffffffffffffffffff
0xb5b: V1107 = EQ V1106 V1105
0xb5c: V1108 = 0xb61
0xb5f: JUMPI 0xb61 V1107
---
Entry stack: [V12, 0xa9, V262, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264]

================================

Block 0xb60
[0xb60:0xb60]
---
Predecessors: [0xb49]
Successors: []
---
0xb60 INVALID
---
0xb60: INVALID 
---
Entry stack: [V12, 0xa9, V262, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264]

================================

Block 0xb61
[0xb61:0xbb2]
---
Predecessors: [0xb49]
Successors: [0xbb3, 0xbb7]
---
0xb61 JUMPDEST
0xb62 PUSH1 0x1
0xb64 SLOAD
0xb65 PUSH1 0x1
0xb67 PUSH1 0xa0
0xb69 PUSH1 0x2
0xb6b EXP
0xb6c SUB
0xb6d AND
0xb6e PUSH4 0x9e281a98
0xb73 DUP4
0xb74 DUP4
0xb75 PUSH1 0x40
0xb77 MLOAD
0xb78 PUSH1 0xe0
0xb7a PUSH1 0x2
0xb7c EXP
0xb7d PUSH4 0xffffffff
0xb82 DUP6
0xb83 AND
0xb84 MUL
0xb85 DUP2
0xb86 MSTORE
0xb87 PUSH1 0x1
0xb89 PUSH1 0xa0
0xb8b PUSH1 0x2
0xb8d EXP
0xb8e SUB
0xb8f SWAP1
0xb90 SWAP3
0xb91 AND
0xb92 PUSH1 0x4
0xb94 DUP4
0xb95 ADD
0xb96 MSTORE
0xb97 PUSH1 0x24
0xb99 DUP3
0xb9a ADD
0xb9b MSTORE
0xb9c PUSH1 0x44
0xb9e ADD
0xb9f PUSH1 0x0
0xba1 PUSH1 0x40
0xba3 MLOAD
0xba4 DUP1
0xba5 DUP4
0xba6 SUB
0xba7 DUP2
0xba8 PUSH1 0x0
0xbaa DUP8
0xbab DUP1
0xbac EXTCODESIZE
0xbad ISZERO
0xbae ISZERO
0xbaf PUSH2 0xbb7
0xbb2 JUMPI
---
0xb61: JUMPDEST 
0xb62: V1109 = 0x1
0xb64: V1110 = S[0x1]
0xb65: V1111 = 0x1
0xb67: V1112 = 0xa0
0xb69: V1113 = 0x2
0xb6b: V1114 = EXP 0x2 0xa0
0xb6c: V1115 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6d: V1116 = AND 0xffffffffffffffffffffffffffffffffffffffff V1110
0xb6e: V1117 = 0x9e281a98
0xb75: V1118 = 0x40
0xb77: V1119 = M[0x40]
0xb78: V1120 = 0xe0
0xb7a: V1121 = 0x2
0xb7c: V1122 = EXP 0x2 0xe0
0xb7d: V1123 = 0xffffffff
0xb83: V1124 = AND 0x9e281a98 0xffffffff
0xb84: V1125 = MUL 0x9e281a98 0x100000000000000000000000000000000000000000000000000000000
0xb86: M[V1119] = 0x9e281a9800000000000000000000000000000000000000000000000000000000
0xb87: V1126 = 0x1
0xb89: V1127 = 0xa0
0xb8b: V1128 = 0x2
0xb8d: V1129 = EXP 0x2 0xa0
0xb8e: V1130 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb91: V1131 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0xb92: V1132 = 0x4
0xb95: V1133 = ADD V1119 0x4
0xb96: M[V1133] = V1131
0xb97: V1134 = 0x24
0xb9a: V1135 = ADD V1119 0x24
0xb9b: M[V1135] = V264
0xb9c: V1136 = 0x44
0xb9e: V1137 = ADD 0x44 V1119
0xb9f: V1138 = 0x0
0xba1: V1139 = 0x40
0xba3: V1140 = M[0x40]
0xba6: V1141 = SUB V1137 V1140
0xba8: V1142 = 0x0
0xbac: V1143 = EXTCODESIZE V1116
0xbad: V1144 = ISZERO V1143
0xbae: V1145 = ISZERO V1144
0xbaf: V1146 = 0xbb7
0xbb2: JUMPI 0xbb7 V1145
---
Entry stack: [V12, 0xa9, V262, V264]
Stack pops: 2
Stack additions: [S1, S0, V1116, 0x9e281a98, V1137, 0x0, V1140, V1141, V1140, 0x0, V1116]
Exit stack: [V12, 0xa9, V262, V264, V1116, 0x9e281a98, V1137, 0x0, V1140, V1141, V1140, 0x0, V1116]

================================

Block 0xbb3
[0xbb3:0xbb6]
---
Predecessors: [0xb61]
Successors: []
---
0xbb3 PUSH1 0x0
0xbb5 DUP1
0xbb6 REVERT
---
0xbb3: V1147 = 0x0
0xbb6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V262, V264, V1116, 0x9e281a98, V1137, 0x0, V1140, V1141, V1140, 0x0, V1116]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1116, 0x9e281a98, V1137, 0x0, V1140, V1141, V1140, 0x0, V1116]

================================

Block 0xbb7
[0xbb7:0xbc3]
---
Predecessors: [0xb61]
Successors: [0xbc4, 0xbc8]
---
0xbb7 JUMPDEST
0xbb8 PUSH2 0x2c6
0xbbb GAS
0xbbc SUB
0xbbd CALL
0xbbe ISZERO
0xbbf ISZERO
0xbc0 PUSH2 0xbc8
0xbc3 JUMPI
---
0xbb7: JUMPDEST 
0xbb8: V1148 = 0x2c6
0xbbb: V1149 = GAS
0xbbc: V1150 = SUB V1149 0x2c6
0xbbd: V1151 = CALL V1150 V1116 0x0 V1140 V1141 V1140 0x0
0xbbe: V1152 = ISZERO V1151
0xbbf: V1153 = ISZERO V1152
0xbc0: V1154 = 0xbc8
0xbc3: JUMPI 0xbc8 V1153
---
Entry stack: [V12, 0xa9, V262, V264, V1116, 0x9e281a98, V1137, 0x0, V1140, V1141, V1140, 0x0, V1116]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1116, 0x9e281a98, V1137]

================================

Block 0xbc4
[0xbc4:0xbc7]
---
Predecessors: [0xbb7]
Successors: []
---
0xbc4 PUSH1 0x0
0xbc6 DUP1
0xbc7 REVERT
---
0xbc4: V1155 = 0x0
0xbc7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V262, V264, V1116, 0x9e281a98, V1137]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1116, 0x9e281a98, V1137]

================================

Block 0xbc8
[0xbc8:0xc23]
---
Predecessors: [0xbb7]
Successors: [0xc24, 0xc28]
---
0xbc8 JUMPDEST
0xbc9 POP
0xbca POP
0xbcb POP
0xbcc DUP2
0xbcd PUSH1 0x1
0xbcf PUSH1 0xa0
0xbd1 PUSH1 0x2
0xbd3 EXP
0xbd4 SUB
0xbd5 AND
0xbd6 PUSH4 0xa9059cbb
0xbdb CALLER
0xbdc DUP4
0xbdd PUSH1 0x0
0xbdf PUSH1 0x40
0xbe1 MLOAD
0xbe2 PUSH1 0x20
0xbe4 ADD
0xbe5 MSTORE
0xbe6 PUSH1 0x40
0xbe8 MLOAD
0xbe9 PUSH1 0xe0
0xbeb PUSH1 0x2
0xbed EXP
0xbee PUSH4 0xffffffff
0xbf3 DUP6
0xbf4 AND
0xbf5 MUL
0xbf6 DUP2
0xbf7 MSTORE
0xbf8 PUSH1 0x1
0xbfa PUSH1 0xa0
0xbfc PUSH1 0x2
0xbfe EXP
0xbff SUB
0xc00 SWAP1
0xc01 SWAP3
0xc02 AND
0xc03 PUSH1 0x4
0xc05 DUP4
0xc06 ADD
0xc07 MSTORE
0xc08 PUSH1 0x24
0xc0a DUP3
0xc0b ADD
0xc0c MSTORE
0xc0d PUSH1 0x44
0xc0f ADD
0xc10 PUSH1 0x20
0xc12 PUSH1 0x40
0xc14 MLOAD
0xc15 DUP1
0xc16 DUP4
0xc17 SUB
0xc18 DUP2
0xc19 PUSH1 0x0
0xc1b DUP8
0xc1c DUP1
0xc1d EXTCODESIZE
0xc1e ISZERO
0xc1f ISZERO
0xc20 PUSH2 0xc28
0xc23 JUMPI
---
0xbc8: JUMPDEST 
0xbcd: V1156 = 0x1
0xbcf: V1157 = 0xa0
0xbd1: V1158 = 0x2
0xbd3: V1159 = EXP 0x2 0xa0
0xbd4: V1160 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd5: V1161 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0xbd6: V1162 = 0xa9059cbb
0xbdb: V1163 = CALLER
0xbdd: V1164 = 0x0
0xbdf: V1165 = 0x40
0xbe1: V1166 = M[0x40]
0xbe2: V1167 = 0x20
0xbe4: V1168 = ADD 0x20 V1166
0xbe5: M[V1168] = 0x0
0xbe6: V1169 = 0x40
0xbe8: V1170 = M[0x40]
0xbe9: V1171 = 0xe0
0xbeb: V1172 = 0x2
0xbed: V1173 = EXP 0x2 0xe0
0xbee: V1174 = 0xffffffff
0xbf4: V1175 = AND 0xa9059cbb 0xffffffff
0xbf5: V1176 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xbf7: M[V1170] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xbf8: V1177 = 0x1
0xbfa: V1178 = 0xa0
0xbfc: V1179 = 0x2
0xbfe: V1180 = EXP 0x2 0xa0
0xbff: V1181 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc02: V1182 = AND V1163 0xffffffffffffffffffffffffffffffffffffffff
0xc03: V1183 = 0x4
0xc06: V1184 = ADD V1170 0x4
0xc07: M[V1184] = V1182
0xc08: V1185 = 0x24
0xc0b: V1186 = ADD V1170 0x24
0xc0c: M[V1186] = V264
0xc0d: V1187 = 0x44
0xc0f: V1188 = ADD 0x44 V1170
0xc10: V1189 = 0x20
0xc12: V1190 = 0x40
0xc14: V1191 = M[0x40]
0xc17: V1192 = SUB V1188 V1191
0xc19: V1193 = 0x0
0xc1d: V1194 = EXTCODESIZE V1161
0xc1e: V1195 = ISZERO V1194
0xc1f: V1196 = ISZERO V1195
0xc20: V1197 = 0xc28
0xc23: JUMPI 0xc28 V1196
---
Entry stack: [V12, 0xa9, V262, V264, V1116, 0x9e281a98, V1137]
Stack pops: 5
Stack additions: [S4, S3, V1161, 0xa9059cbb, V1188, 0x20, V1191, V1192, V1191, 0x0, V1161]
Exit stack: [V12, 0xa9, V262, V264, V1161, 0xa9059cbb, V1188, 0x20, V1191, V1192, V1191, 0x0, V1161]

================================

Block 0xc24
[0xc24:0xc27]
---
Predecessors: [0xbc8]
Successors: []
---
0xc24 PUSH1 0x0
0xc26 DUP1
0xc27 REVERT
---
0xc24: V1198 = 0x0
0xc27: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V262, V264, V1161, 0xa9059cbb, V1188, 0x20, V1191, V1192, V1191, 0x0, V1161]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1161, 0xa9059cbb, V1188, 0x20, V1191, V1192, V1191, 0x0, V1161]

================================

Block 0xc28
[0xc28:0xc34]
---
Predecessors: [0xbc8]
Successors: [0xc35, 0xc39]
---
0xc28 JUMPDEST
0xc29 PUSH2 0x2c6
0xc2c GAS
0xc2d SUB
0xc2e CALL
0xc2f ISZERO
0xc30 ISZERO
0xc31 PUSH2 0xc39
0xc34 JUMPI
---
0xc28: JUMPDEST 
0xc29: V1199 = 0x2c6
0xc2c: V1200 = GAS
0xc2d: V1201 = SUB V1200 0x2c6
0xc2e: V1202 = CALL V1201 V1161 0x0 V1191 V1192 V1191 0x20
0xc2f: V1203 = ISZERO V1202
0xc30: V1204 = ISZERO V1203
0xc31: V1205 = 0xc39
0xc34: JUMPI 0xc39 V1204
---
Entry stack: [V12, 0xa9, V262, V264, V1161, 0xa9059cbb, V1188, 0x20, V1191, V1192, V1191, 0x0, V1161]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1161, 0xa9059cbb, V1188]

================================

Block 0xc35
[0xc35:0xc38]
---
Predecessors: [0xc28]
Successors: []
---
0xc35 PUSH1 0x0
0xc37 DUP1
0xc38 REVERT
---
0xc35: V1206 = 0x0
0xc38: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V262, V264, V1161, 0xa9059cbb, V1188]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1161, 0xa9059cbb, V1188]

================================

Block 0xc39
[0xc39:0xc49]
---
Predecessors: [0xc28]
Successors: [0x3a2, 0xc4a]
---
0xc39 JUMPDEST
0xc3a POP
0xc3b POP
0xc3c POP
0xc3d PUSH1 0x40
0xc3f MLOAD
0xc40 DUP1
0xc41 MLOAD
0xc42 SWAP1
0xc43 POP
0xc44 ISZERO
0xc45 ISZERO
0xc46 PUSH2 0x3a2
0xc49 JUMPI
---
0xc39: JUMPDEST 
0xc3d: V1207 = 0x40
0xc3f: V1208 = M[0x40]
0xc41: V1209 = M[V1208]
0xc44: V1210 = ISZERO V1209
0xc45: V1211 = ISZERO V1210
0xc46: V1212 = 0x3a2
0xc49: JUMPI 0x3a2 V1211
---
Entry stack: [V12, 0xa9, V262, V264, V1161, 0xa9059cbb, V1188]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264]

================================

Block 0xc4a
[0xc4a:0xc4d]
---
Predecessors: [0xc39]
Successors: []
---
0xc4a PUSH1 0x0
0xc4c DUP1
0xc4d REVERT
---
0xc4a: V1213 = 0x0
0xc4d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V262, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264]

================================

Block 0xc4e
[0xc4e:0xc4e]
---
Predecessors: []
Successors: [0xc4f]
---
0xc4e JUMPDEST
---
0xc4e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc4f
[0xc4f:0xc52]
---
Predecessors: [0xc4e]
Successors: []
Has unresolved jump.
---
0xc4f JUMPDEST
0xc50 POP
0xc51 POP
0xc52 JUMP
---
0xc4f: JUMPDEST 
0xc52: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xc53
[0xc53:0xc61]
---
Predecessors: [0x33d]
Successors: [0x345]
---
0xc53 JUMPDEST
0xc54 PUSH1 0x2
0xc56 SLOAD
0xc57 PUSH1 0x1
0xc59 PUSH1 0xa0
0xc5b PUSH1 0x2
0xc5d EXP
0xc5e SUB
0xc5f AND
0xc60 DUP2
0xc61 JUMP
---
0xc53: JUMPDEST 
0xc54: V1214 = 0x2
0xc56: V1215 = S[0x2]
0xc57: V1216 = 0x1
0xc59: V1217 = 0xa0
0xc5b: V1218 = 0x2
0xc5d: V1219 = EXP 0x2 0xa0
0xc5e: V1220 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5f: V1221 = AND 0xffffffffffffffffffffffffffffffffffffffff V1215
0xc61: JUMP 0x345
---
Entry stack: [V12, 0x345]
Stack pops: 1
Stack additions: [S0, V1221]
Exit stack: [V12, 0x345, V1221]

================================

Block 0xc62
[0xc62:0xc9c]
---
Predecessors: [0x361]
Successors: [0xc9d, 0xca1]
---
0xc62 JUMPDEST
0xc63 PUSH1 0x1
0xc65 SLOAD
0xc66 PUSH1 0x1
0xc68 PUSH1 0xa0
0xc6a PUSH1 0x2
0xc6c EXP
0xc6d SUB
0xc6e AND
0xc6f PUSH4 0xd0e30db0
0xc74 CALLVALUE
0xc75 PUSH1 0x40
0xc77 MLOAD
0xc78 DUP3
0xc79 PUSH4 0xffffffff
0xc7e AND
0xc7f PUSH1 0xe0
0xc81 PUSH1 0x2
0xc83 EXP
0xc84 MUL
0xc85 DUP2
0xc86 MSTORE
0xc87 PUSH1 0x4
0xc89 ADD
0xc8a PUSH1 0x0
0xc8c PUSH1 0x40
0xc8e MLOAD
0xc8f DUP1
0xc90 DUP4
0xc91 SUB
0xc92 DUP2
0xc93 DUP6
0xc94 DUP9
0xc95 DUP1
0xc96 EXTCODESIZE
0xc97 ISZERO
0xc98 ISZERO
0xc99 PUSH2 0xca1
0xc9c JUMPI
---
0xc62: JUMPDEST 
0xc63: V1222 = 0x1
0xc65: V1223 = S[0x1]
0xc66: V1224 = 0x1
0xc68: V1225 = 0xa0
0xc6a: V1226 = 0x2
0xc6c: V1227 = EXP 0x2 0xa0
0xc6d: V1228 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6e: V1229 = AND 0xffffffffffffffffffffffffffffffffffffffff V1223
0xc6f: V1230 = 0xd0e30db0
0xc74: V1231 = CALLVALUE
0xc75: V1232 = 0x40
0xc77: V1233 = M[0x40]
0xc79: V1234 = 0xffffffff
0xc7e: V1235 = AND 0xffffffff 0xd0e30db0
0xc7f: V1236 = 0xe0
0xc81: V1237 = 0x2
0xc83: V1238 = EXP 0x2 0xe0
0xc84: V1239 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0xc86: M[V1233] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0xc87: V1240 = 0x4
0xc89: V1241 = ADD 0x4 V1233
0xc8a: V1242 = 0x0
0xc8c: V1243 = 0x40
0xc8e: V1244 = M[0x40]
0xc91: V1245 = SUB V1241 V1244
0xc96: V1246 = EXTCODESIZE V1229
0xc97: V1247 = ISZERO V1246
0xc98: V1248 = ISZERO V1247
0xc99: V1249 = 0xca1
0xc9c: JUMPI 0xca1 V1248
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: [V1229, 0xd0e30db0, V1231, V1241, 0x0, V1244, V1245, V1244, V1231, V1229]
Exit stack: [V12, 0xa9, V1229, 0xd0e30db0, V1231, V1241, 0x0, V1244, V1245, V1244, V1231, V1229]

================================

Block 0xc9d
[0xc9d:0xca0]
---
Predecessors: [0xc62]
Successors: []
---
0xc9d PUSH1 0x0
0xc9f DUP1
0xca0 REVERT
---
0xc9d: V1250 = 0x0
0xca0: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V1229, 0xd0e30db0, V1231, V1241, 0x0, V1244, V1245, V1244, V1231, V1229]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V1229, 0xd0e30db0, V1231, V1241, 0x0, V1244, V1245, V1244, V1231, V1229]

================================

Block 0xca1
[0xca1:0xcad]
---
Predecessors: [0xc62]
Successors: [0xcae, 0xcb2]
---
0xca1 JUMPDEST
0xca2 PUSH2 0x25ee
0xca5 GAS
0xca6 SUB
0xca7 CALL
0xca8 ISZERO
0xca9 ISZERO
0xcaa PUSH2 0xcb2
0xcad JUMPI
---
0xca1: JUMPDEST 
0xca2: V1251 = 0x25ee
0xca5: V1252 = GAS
0xca6: V1253 = SUB V1252 0x25ee
0xca7: V1254 = CALL V1253 V1229 V1231 V1244 V1245 V1244 0x0
0xca8: V1255 = ISZERO V1254
0xca9: V1256 = ISZERO V1255
0xcaa: V1257 = 0xcb2
0xcad: JUMPI 0xcb2 V1256
---
Entry stack: [V12, 0xa9, V1229, 0xd0e30db0, V1231, V1241, 0x0, V1244, V1245, V1244, V1231, V1229]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V1229, 0xd0e30db0, V1231, V1241]

================================

Block 0xcae
[0xcae:0xcb1]
---
Predecessors: [0xca1]
Successors: []
---
0xcae PUSH1 0x0
0xcb0 DUP1
0xcb1 REVERT
---
0xcae: V1258 = 0x0
0xcb1: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V1229, 0xd0e30db0, V1231, V1241]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V1229, 0xd0e30db0, V1231, V1241]

================================

Block 0xcb2
[0xcb2:0xcb6]
---
Predecessors: [0xca1]
Successors: [0xcb7]
---
0xcb2 JUMPDEST
0xcb3 POP
0xcb4 POP
0xcb5 POP
0xcb6 POP
---
0xcb2: JUMPDEST 
---
Entry stack: [V12, 0xa9, V1229, 0xd0e30db0, V1231, V1241]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0xcb7
[0xcb7:0xcb8]
---
Predecessors: [0xcb2]
Successors: [0xa9]
---
0xcb7 JUMPDEST
0xcb8 JUMP
---
0xcb7: JUMPDEST 
0xcb8: JUMP 0xa9
---
Entry stack: [V12, 0xa9]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb9
[0xcb9:0xce4]
---
Predecessors: [0x4b2, 0x93f]
Successors: [0x59e, 0xce5]
---
0xcb9 JUMPDEST
0xcba PUSH1 0x2
0xcbc SLOAD
0xcbd PUSH1 0x1
0xcbf PUSH1 0xa0
0xcc1 PUSH1 0x2
0xcc3 EXP
0xcc4 SUB
0xcc5 AND
0xcc6 DUP2
0xcc7 PUSH1 0x40
0xcc9 MLOAD
0xcca PUSH1 0x0
0xccc PUSH1 0x40
0xcce MLOAD
0xccf DUP1
0xcd0 DUP4
0xcd1 SUB
0xcd2 DUP2
0xcd3 DUP6
0xcd4 DUP8
0xcd5 PUSH2 0x8796
0xcd8 GAS
0xcd9 SUB
0xcda CALL
0xcdb SWAP3
0xcdc POP
0xcdd POP
0xcde POP
0xcdf ISZERO
0xce0 ISZERO
0xce1 PUSH2 0x59e
0xce4 JUMPI
---
0xcb9: JUMPDEST 
0xcba: V1259 = 0x2
0xcbc: V1260 = S[0x2]
0xcbd: V1261 = 0x1
0xcbf: V1262 = 0xa0
0xcc1: V1263 = 0x2
0xcc3: V1264 = EXP 0x2 0xa0
0xcc4: V1265 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc5: V1266 = AND 0xffffffffffffffffffffffffffffffffffffffff V1260
0xcc7: V1267 = 0x40
0xcc9: V1268 = M[0x40]
0xcca: V1269 = 0x0
0xccc: V1270 = 0x40
0xcce: V1271 = M[0x40]
0xcd1: V1272 = SUB V1268 V1271
0xcd5: V1273 = 0x8796
0xcd8: V1274 = GAS
0xcd9: V1275 = SUB V1274 0x8796
0xcda: V1276 = CALL V1275 V1266 S0 V1271 V1272 V1271 0x0
0xcdf: V1277 = ISZERO V1276
0xce0: V1278 = ISZERO V1277
0xce1: V1279 = 0x59e
0xce4: JUMPI 0x59e V1278
---
Entry stack: [V12, S5, {0xa9, 0x952}, S3, S2, {0x3a2, 0x952}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S5, {0xa9, 0x952}, S3, S2, {0x3a2, 0x952}, S0]

================================

Block 0xce5
[0xce5:0xce8]
---
Predecessors: [0xcb9]
Successors: []
---
0xce5 PUSH1 0x0
0xce7 DUP1
0xce8 REVERT
---
0xce5: V1280 = 0x0
0xce8: REVERT 0x0 0x0
---
Entry stack: [V12, S5, {0xa9, 0x952}, S3, S2, {0x3a2, 0x952}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, {0xa9, 0x952}, S3, S2, {0x3a2, 0x952}, S0]

================================

Block 0xce9
[0xce9:0xce9]
---
Predecessors: []
Successors: [0xcea]
---
0xce9 JUMPDEST
---
0xce9: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcea
[0xcea:0xd18]
---
Predecessors: [0xce9]
Successors: []
---
0xcea JUMPDEST
0xceb POP
0xcec JUMP
0xced STOP
0xcee LOG1
0xcef PUSH6 0x627a7a723058
0xcf6 SHA3
0xcf7 MISSING 0xd8
0xcf8 PUSH27 0x84bef2acebe2a4f0cbdaa1ce6c1d84d394458d2ce33715a72c88a0
0xd14 SELFDESTRUCT
0xd15 MISSING 0xbe
0xd16 MISSING 0xe1
0xd17 STOP
0xd18 MISSING 0x29
---
0xcea: JUMPDEST 
0xcec: JUMP S1
0xced: STOP 
0xcee: LOG S0 S1 S2
0xcef: V1281 = 0x627a7a723058
0xcf6: V1282 = SHA3 0x627a7a723058 S3
0xcf7: MISSING 0xd8
0xcf8: V1283 = 0x84bef2acebe2a4f0cbdaa1ce6c1d84d394458d2ce33715a72c88a0
0xd14: SELFDESTRUCT 0x84bef2acebe2a4f0cbdaa1ce6c1d84d394458d2ce33715a72c88a0
0xd15: MISSING 0xbe
0xd16: MISSING 0xe1
0xd17: STOP 
0xd18: MISSING 0x29
---
Entry stack: []
Stack pops: 240
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0xa3cb72e
Entry block: 0xad
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0xad, 0xb4, 0xb8, 0x36b, 0x374, 0x37b, 0x384, 0x386, 0x38c, 0x390, 0x399, 0x3a2, 0x3a3, 0x952, 0x953

Function 1:
Public function signature: 0x12065fe0
Entry block: 0x13e
Exit block: 0x151
Body: 0x13e, 0x145, 0x149, 0x151

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0x163
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x163, 0x16a, 0x16e, 0x3a2, 0x3a3, 0x42a, 0x444, 0x445, 0x44d, 0x45b, 0x45c, 0x4a1, 0x4a5, 0x4ae, 0x4b2, 0x952, 0x953

Function 3:
Public function signature: 0x3aecd0e3
Entry block: 0x17b
Exit block: 0xab
Body: 0xab, 0x17b, 0x182, 0x186, 0x4c4, 0x523

Function 4:
Public function signature: 0x477bddaa
Entry block: 0x1ac
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x1ac, 0x1b3, 0x1b7, 0x549, 0x560, 0x561

Function 5:
Public function signature: 0x5256bb86
Entry block: 0x1cd
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x1cd, 0x1d4, 0x1d8

Function 6:
Public function signature: 0x58d2d81a
Entry block: 0x21e
Exit block: 0x26d
Body: 0x21e, 0x225, 0x229, 0x26d

Function 7:
Public function signature: 0x5fd8c710
Entry block: 0x281
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x281, 0x288, 0x28c, 0x927, 0x93e, 0x93f, 0x952, 0x953

Function 8:
Public function signature: 0x757740f9
Entry block: 0x296
Exit block: 0x26d
Body: 0x26d, 0x296, 0x29d, 0x2a1

Function 9:
Public function signature: 0x853828b6
Entry block: 0x2f9
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x2f9, 0x300, 0x304, 0x3a2, 0x3a3, 0x42a, 0x444, 0x445, 0x44d, 0x45b, 0x45c, 0x4a1, 0x4a5, 0x4ae, 0x4b2, 0x952, 0x953, 0xb1e, 0xb35, 0xb36, 0xb41

Function 10:
Public function signature: 0x9e281a98
Entry block: 0x30e
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x30e, 0x315, 0x319, 0x3a2, 0x3a3, 0x952, 0x953, 0xb49, 0xb60, 0xb61, 0xbb3, 0xbb7, 0xbc4, 0xbc8, 0xc24, 0xc28, 0xc35, 0xc39, 0xc4a

Function 11:
Public function signature: 0xb2bdfa7b
Entry block: 0x332
Exit block: 0x345
Body: 0x332, 0x339, 0x33d, 0x345, 0xc53

Function 12:
Public function signature: 0xd0e30db0
Entry block: 0x361
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x361, 0xc62, 0xc9d, 0xca1, 0xcae, 0xcb2, 0xcb7

Function 13:
Public fallback function
Entry block: 0xa9
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab

Function 14:
Private function
Entry block: 0x759
Exit block: 0x544
Body: 0x527, 0x538, 0x544, 0x759, 0x779, 0x790, 0x7a7, 0x7be, 0x7d5, 0x7ec, 0x803, 0x81a, 0x831, 0x848, 0x85f

Function 15:
Private function
Entry block: 0xcb9
Exit block: 0x59e
Body: 0x59e, 0xcb9

Function 16:
Private function
Entry block: 0x955
Exit block: 0xb19
Body: 0x955, 0x964, 0x98c, 0x9a3, 0x9ba, 0x9d1, 0x9e8, 0x9ff, 0xa16, 0xa2d, 0xa44, 0xa5b, 0xaf9, 0xb0a, 0xb19

Function 17:
Private function
Entry block: 0x5a1
Exit block: 0x756
Body: 0x5a1, 0x5c0, 0x5d7, 0x5ee, 0x605, 0x61c, 0x633, 0x64a, 0x661, 0x678, 0x68f, 0x6a6, 0x744, 0x751, 0x756

Function 18:
Private function
Entry block: 0x3a7
Exit block: 0x427
Body: 0x3a7, 0x40a, 0x41b, 0x427

