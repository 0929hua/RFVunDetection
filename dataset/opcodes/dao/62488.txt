Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x91]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x471efe66
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x91
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x471efe66
0x20: V14 = EQ V12 0x471efe66
0x21: V15 = 0x91
0x24: JUMPI 0x91 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xb8]
---
0x25 DUP1
0x26 PUSH4 0x6ad1fe02
0x2b EQ
0x2c PUSH2 0xb8
0x2f JUMPI
---
0x26: V16 = 0x6ad1fe02
0x2b: V17 = EQ 0x6ad1fe02 V12
0x2c: V18 = 0xb8
0x2f: JUMPI 0xb8 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xe7]
---
0x30 DUP1
0x31 PUSH4 0x89476069
0x36 EQ
0x37 PUSH2 0xe7
0x3a JUMPI
---
0x31: V19 = 0x89476069
0x36: V20 = EQ 0x89476069 V12
0x37: V21 = 0xe7
0x3a: JUMPI 0xe7 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x108]
---
0x3b DUP1
0x3c PUSH4 0xa6f2ae3a
0x41 EQ
0x42 PUSH2 0x108
0x45 JUMPI
---
0x3c: V22 = 0xa6f2ae3a
0x41: V23 = EQ 0xa6f2ae3a V12
0x42: V24 = 0x108
0x45: JUMPI 0x108 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x11d]
---
0x46 DUP1
0x47 PUSH4 0xb622ab4a
0x4c EQ
0x4d PUSH2 0x11d
0x50 JUMPI
---
0x47: V25 = 0xb622ab4a
0x4c: V26 = EQ 0xb622ab4a V12
0x4d: V27 = 0x11d
0x50: JUMPI 0x11d V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x154]
---
0x51 DUP1
0x52 PUSH4 0xb8f3b75d
0x57 EQ
0x58 PUSH2 0x154
0x5b JUMPI
---
0x52: V28 = 0xb8f3b75d
0x57: V29 = EQ 0xb8f3b75d V12
0x58: V30 = 0x154
0x5b: JUMPI 0x154 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x175]
---
0x5c DUP1
0x5d PUSH4 0xca4b208b
0x62 EQ
0x63 PUSH2 0x175
0x66 JUMPI
---
0x5d: V31 = 0xca4b208b
0x62: V32 = EQ 0xca4b208b V12
0x63: V33 = 0x175
0x66: JUMPI 0x175 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1a4]
---
0x67 DUP1
0x68 PUSH4 0xe086e5ec
0x6d EQ
0x6e PUSH2 0x1a4
0x71 JUMPI
---
0x68: V34 = 0xe086e5ec
0x6d: V35 = EQ 0xe086e5ec V12
0x6e: V36 = 0x1a4
0x71: JUMPI 0x1a4 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1b9]
---
0x72 DUP1
0x73 PUSH4 0xfae4a213
0x78 EQ
0x79 PUSH2 0x1b9
0x7c JUMPI
---
0x73: V37 = 0xfae4a213
0x78: V38 = EQ 0xfae4a213 V12
0x79: V39 = 0x1b9
0x7c: JUMPI 0x1b9 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x1fc]
---
0x7d DUP1
0x7e PUSH4 0xfc0c546a
0x83 EQ
0x84 PUSH2 0x1fc
0x87 JUMPI
---
0x7e: V40 = 0xfc0c546a
0x83: V41 = EQ 0xfc0c546a V12
0x84: V42 = 0x1fc
0x87: JUMPI 0x1fc V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x0, 0x7d]
Successors: [0x8c]
---
0x88 JUMPDEST
0x89 PUSH2 0x8f
---
0x88: JUMPDEST 
0x89: V43 = 0x8f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V12, 0x8f]

================================

Block 0x8c
[0x8c:0x8c]
---
Predecessors: [0x88, 0x3c8, 0x501]
Successors: [0x8d]
---
0x8c JUMPDEST
---
0x8c: JUMPDEST 
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x8c]
Successors: [0x8f]
---
0x8d JUMPDEST
0x8e JUMP
---
0x8d: JUMPDEST 
0x8e: JUMP 0x8f
---
Entry stack: [V12, 0x8f]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f
[0x8f:0x90]
---
Predecessors: [0x8d, 0x284, 0x3ae]
Successors: []
---
0x8f JUMPDEST
0x90 STOP
---
0x8f: JUMPDEST 
0x90: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x91
[0x91:0x97]
---
Predecessors: [0xb]
Successors: [0x98, 0x9c]
---
0x91 JUMPDEST
0x92 CALLVALUE
0x93 ISZERO
0x94 PUSH2 0x9c
0x97 JUMPI
---
0x91: JUMPDEST 
0x92: V44 = CALLVALUE
0x93: V45 = ISZERO V44
0x94: V46 = 0x9c
0x97: JUMPI 0x9c V45
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x91]
Successors: []
---
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x98: V47 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0xb5]
---
Predecessors: [0x91]
Successors: [0x22b]
---
0x9c JUMPDEST
0x9d PUSH2 0x8f
0xa0 PUSH1 0x1
0xa2 PUSH1 0xa0
0xa4 PUSH1 0x2
0xa6 EXP
0xa7 SUB
0xa8 PUSH1 0x4
0xaa CALLDATALOAD
0xab DUP2
0xac AND
0xad SWAP1
0xae PUSH1 0x24
0xb0 CALLDATALOAD
0xb1 AND
0xb2 PUSH2 0x22b
0xb5 JUMP
---
0x9c: JUMPDEST 
0x9d: V48 = 0x8f
0xa0: V49 = 0x1
0xa2: V50 = 0xa0
0xa4: V51 = 0x2
0xa6: V52 = EXP 0x2 0xa0
0xa7: V53 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8: V54 = 0x4
0xaa: V55 = CALLDATALOAD 0x4
0xac: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xae: V57 = 0x24
0xb0: V58 = CALLDATALOAD 0x24
0xb1: V59 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0xb2: V60 = 0x22b
0xb5: JUMP 0x22b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f, V56, V59]
Exit stack: [V12, 0x8f, V56, V59]

================================

Block 0xb6
[0xb6:0xb7]
---
Predecessors: []
Successors: []
---
0xb6 JUMPDEST
0xb7 STOP
---
0xb6: JUMPDEST 
0xb7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb8
[0xb8:0xbe]
---
Predecessors: [0x25]
Successors: [0xbf, 0xc3]
---
0xb8 JUMPDEST
0xb9 CALLVALUE
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xb8: JUMPDEST 
0xb9: V61 = CALLVALUE
0xba: V62 = ISZERO V61
0xbb: V63 = 0xc3
0xbe: JUMPI 0xc3 V62
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xb8]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V64 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3
[0xc3:0xca]
---
Predecessors: [0xb8]
Successors: [0x288]
---
0xc3 JUMPDEST
0xc4 PUSH2 0xcb
0xc7 PUSH2 0x288
0xca JUMP
---
0xc3: JUMPDEST 
0xc4: V65 = 0xcb
0xc7: V66 = 0x288
0xca: JUMP 0x288
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xcb]
Exit stack: [V12, 0xcb]

================================

Block 0xcb
[0xcb:0xe6]
---
Predecessors: [0x288, 0x4d7, 0x5c6]
Successors: []
---
0xcb JUMPDEST
0xcc PUSH1 0x40
0xce MLOAD
0xcf PUSH1 0x1
0xd1 PUSH1 0xa0
0xd3 PUSH1 0x2
0xd5 EXP
0xd6 SUB
0xd7 SWAP1
0xd8 SWAP2
0xd9 AND
0xda DUP2
0xdb MSTORE
0xdc PUSH1 0x20
0xde ADD
0xdf PUSH1 0x40
0xe1 MLOAD
0xe2 DUP1
0xe3 SWAP2
0xe4 SUB
0xe5 SWAP1
0xe6 RETURN
---
0xcb: JUMPDEST 
0xcc: V67 = 0x40
0xce: V68 = M[0x40]
0xcf: V69 = 0x1
0xd1: V70 = 0xa0
0xd3: V71 = 0x2
0xd5: V72 = EXP 0x2 0xa0
0xd6: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9: V74 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xdb: M[V68] = V74
0xdc: V75 = 0x20
0xde: V76 = ADD 0x20 V68
0xdf: V77 = 0x40
0xe1: V78 = M[0x40]
0xe4: V79 = SUB V76 V78
0xe6: RETURN V78 V79
---
Entry stack: [V12, 0xcb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xcb]

================================

Block 0xe7
[0xe7:0xed]
---
Predecessors: [0x30]
Successors: [0xee, 0xf2]
---
0xe7 JUMPDEST
0xe8 CALLVALUE
0xe9 ISZERO
0xea PUSH2 0xf2
0xed JUMPI
---
0xe7: JUMPDEST 
0xe8: V80 = CALLVALUE
0xe9: V81 = ISZERO V80
0xea: V82 = 0xf2
0xed: JUMPI 0xf2 V81
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xe7]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V83 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf2
[0xf2:0x105]
---
Predecessors: [0xe7]
Successors: [0x297]
---
0xf2 JUMPDEST
0xf3 PUSH2 0x8f
0xf6 PUSH1 0x1
0xf8 PUSH1 0xa0
0xfa PUSH1 0x2
0xfc EXP
0xfd SUB
0xfe PUSH1 0x4
0x100 CALLDATALOAD
0x101 AND
0x102 PUSH2 0x297
0x105 JUMP
---
0xf2: JUMPDEST 
0xf3: V84 = 0x8f
0xf6: V85 = 0x1
0xf8: V86 = 0xa0
0xfa: V87 = 0x2
0xfc: V88 = EXP 0x2 0xa0
0xfd: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfe: V90 = 0x4
0x100: V91 = CALLDATALOAD 0x4
0x101: V92 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x102: V93 = 0x297
0x105: JUMP 0x297
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f, V92]
Exit stack: [V12, 0x8f, V92]

================================

Block 0x106
[0x106:0x107]
---
Predecessors: []
Successors: []
---
0x106 JUMPDEST
0x107 STOP
---
0x106: JUMPDEST 
0x107: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x108
[0x108:0x10e]
---
Predecessors: [0x3b]
Successors: [0x10f, 0x113]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0x108: JUMPDEST 
0x109: V94 = CALLVALUE
0x10a: V95 = ISZERO V94
0x10b: V96 = 0x113
0x10e: JUMPI 0x113 V95
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0x108]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V97 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x108]
Successors: [0x3b1]
---
0x113 JUMPDEST
0x114 PUSH2 0x8f
0x117 PUSH2 0x3b1
0x11a JUMP
---
0x113: JUMPDEST 
0x114: V98 = 0x8f
0x117: V99 = 0x3b1
0x11a: JUMP 0x3b1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V12, 0x8f]

================================

Block 0x11b
[0x11b:0x11c]
---
Predecessors: []
Successors: []
---
0x11b JUMPDEST
0x11c STOP
---
0x11b: JUMPDEST 
0x11c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11d
[0x11d:0x123]
---
Predecessors: [0x46]
Successors: [0x124, 0x128]
---
0x11d JUMPDEST
0x11e CALLVALUE
0x11f ISZERO
0x120 PUSH2 0x128
0x123 JUMPI
---
0x11d: JUMPDEST 
0x11e: V100 = CALLVALUE
0x11f: V101 = ISZERO V100
0x120: V102 = 0x128
0x123: JUMPI 0x128 V101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0x11d]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V103 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x128
[0x128:0x151]
---
Predecessors: [0x11d]
Successors: [0x400]
---
0x128 JUMPDEST
0x129 PUSH2 0x8f
0x12c PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x149 NOT
0x14a PUSH1 0x4
0x14c CALLDATALOAD
0x14d AND
0x14e PUSH2 0x400
0x151 JUMP
---
0x128: JUMPDEST 
0x129: V104 = 0x8f
0x12c: V105 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x149: V106 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x14a: V107 = 0x4
0x14c: V108 = CALLDATALOAD 0x4
0x14d: V109 = AND V108 0xffffffff00000000000000000000000000000000000000000000000000000000
0x14e: V110 = 0x400
0x151: JUMP 0x400
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f, V109]
Exit stack: [V12, 0x8f, V109]

================================

Block 0x152
[0x152:0x153]
---
Predecessors: []
Successors: []
---
0x152 JUMPDEST
0x153 STOP
---
0x152: JUMPDEST 
0x153: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x154
[0x154:0x15a]
---
Predecessors: [0x51]
Successors: [0x15b, 0x15f]
---
0x154 JUMPDEST
0x155 CALLVALUE
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x154: JUMPDEST 
0x155: V111 = CALLVALUE
0x156: V112 = ISZERO V111
0x157: V113 = 0x15f
0x15a: JUMPI 0x15f V112
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x154]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V114 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15f
[0x15f:0x172]
---
Predecessors: [0x154]
Successors: [0x46b]
---
0x15f JUMPDEST
0x160 PUSH2 0x8f
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b PUSH1 0x4
0x16d CALLDATALOAD
0x16e AND
0x16f PUSH2 0x46b
0x172 JUMP
---
0x15f: JUMPDEST 
0x160: V115 = 0x8f
0x163: V116 = 0x1
0x165: V117 = 0xa0
0x167: V118 = 0x2
0x169: V119 = EXP 0x2 0xa0
0x16a: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V121 = 0x4
0x16d: V122 = CALLDATALOAD 0x4
0x16e: V123 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V124 = 0x46b
0x172: JUMP 0x46b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f, V123]
Exit stack: [V12, 0x8f, V123]

================================

Block 0x173
[0x173:0x174]
---
Predecessors: []
Successors: []
---
0x173 JUMPDEST
0x174 STOP
---
0x173: JUMPDEST 
0x174: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x175
[0x175:0x17b]
---
Predecessors: [0x5c]
Successors: [0x17c, 0x180]
---
0x175 JUMPDEST
0x176 CALLVALUE
0x177 ISZERO
0x178 PUSH2 0x180
0x17b JUMPI
---
0x175: JUMPDEST 
0x176: V125 = CALLVALUE
0x177: V126 = ISZERO V125
0x178: V127 = 0x180
0x17b: JUMPI 0x180 V126
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17c
[0x17c:0x17f]
---
Predecessors: [0x175]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f REVERT
---
0x17c: V128 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x180
[0x180:0x187]
---
Predecessors: [0x175]
Successors: [0x4d7]
---
0x180 JUMPDEST
0x181 PUSH2 0xcb
0x184 PUSH2 0x4d7
0x187 JUMP
---
0x180: JUMPDEST 
0x181: V129 = 0xcb
0x184: V130 = 0x4d7
0x187: JUMP 0x4d7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xcb]
Exit stack: [V12, 0xcb]

================================

Block 0x188
[0x188:0x1a3]
---
Predecessors: []
Successors: []
---
0x188 JUMPDEST
0x189 PUSH1 0x40
0x18b MLOAD
0x18c PUSH1 0x1
0x18e PUSH1 0xa0
0x190 PUSH1 0x2
0x192 EXP
0x193 SUB
0x194 SWAP1
0x195 SWAP2
0x196 AND
0x197 DUP2
0x198 MSTORE
0x199 PUSH1 0x20
0x19b ADD
0x19c PUSH1 0x40
0x19e MLOAD
0x19f DUP1
0x1a0 SWAP2
0x1a1 SUB
0x1a2 SWAP1
0x1a3 RETURN
---
0x188: JUMPDEST 
0x189: V131 = 0x40
0x18b: V132 = M[0x40]
0x18c: V133 = 0x1
0x18e: V134 = 0xa0
0x190: V135 = 0x2
0x192: V136 = EXP 0x2 0xa0
0x193: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x196: V138 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x198: M[V132] = V138
0x199: V139 = 0x20
0x19b: V140 = ADD 0x20 V132
0x19c: V141 = 0x40
0x19e: V142 = M[0x40]
0x1a1: V143 = SUB V140 V142
0x1a3: RETURN V142 V143
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a4
[0x1a4:0x1aa]
---
Predecessors: [0x67]
Successors: [0x1ab, 0x1af]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V144 = CALLVALUE
0x1a6: V145 = ISZERO V144
0x1a7: V146 = 0x1af
0x1aa: JUMPI 0x1af V145
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V147 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1af
[0x1af:0x1b6]
---
Predecessors: [0x1a4]
Successors: [0x4e6]
---
0x1af JUMPDEST
0x1b0 PUSH2 0x8f
0x1b3 PUSH2 0x4e6
0x1b6 JUMP
---
0x1af: JUMPDEST 
0x1b0: V148 = 0x8f
0x1b3: V149 = 0x4e6
0x1b6: JUMP 0x4e6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V12, 0x8f]

================================

Block 0x1b7
[0x1b7:0x1b8]
---
Predecessors: []
Successors: []
---
0x1b7 JUMPDEST
0x1b8 STOP
---
0x1b7: JUMPDEST 
0x1b8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1b9
[0x1b9:0x1bf]
---
Predecessors: [0x72]
Successors: [0x1c0, 0x1c4]
---
0x1b9 JUMPDEST
0x1ba CALLVALUE
0x1bb ISZERO
0x1bc PUSH2 0x1c4
0x1bf JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V150 = CALLVALUE
0x1bb: V151 = ISZERO V150
0x1bc: V152 = 0x1c4
0x1bf: JUMPI 0x1c4 V151
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x1b9]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
---
0x1c0: V153 = 0x0
0x1c3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c4
[0x1c4:0x1f9]
---
Predecessors: [0x1b9]
Successors: [0x53d]
---
0x1c4 JUMPDEST
0x1c5 PUSH2 0x8f
0x1c8 PUSH1 0x1
0x1ca PUSH1 0xa0
0x1cc PUSH1 0x2
0x1ce EXP
0x1cf SUB
0x1d0 PUSH1 0x4
0x1d2 CALLDATALOAD
0x1d3 AND
0x1d4 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1f1 NOT
0x1f2 PUSH1 0x24
0x1f4 CALLDATALOAD
0x1f5 AND
0x1f6 PUSH2 0x53d
0x1f9 JUMP
---
0x1c4: JUMPDEST 
0x1c5: V154 = 0x8f
0x1c8: V155 = 0x1
0x1ca: V156 = 0xa0
0x1cc: V157 = 0x2
0x1ce: V158 = EXP 0x2 0xa0
0x1cf: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d0: V160 = 0x4
0x1d2: V161 = CALLDATALOAD 0x4
0x1d3: V162 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V163 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1f1: V164 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1f2: V165 = 0x24
0x1f4: V166 = CALLDATALOAD 0x24
0x1f5: V167 = AND V166 0xffffffff00000000000000000000000000000000000000000000000000000000
0x1f6: V168 = 0x53d
0x1f9: JUMP 0x53d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f, V162, V167]
Exit stack: [V12, 0x8f, V162, V167]

================================

Block 0x1fa
[0x1fa:0x1fb]
---
Predecessors: []
Successors: []
---
0x1fa JUMPDEST
0x1fb STOP
---
0x1fa: JUMPDEST 
0x1fb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1fc
[0x1fc:0x202]
---
Predecessors: [0x7d]
Successors: [0x203, 0x207]
---
0x1fc JUMPDEST
0x1fd CALLVALUE
0x1fe ISZERO
0x1ff PUSH2 0x207
0x202 JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V169 = CALLVALUE
0x1fe: V170 = ISZERO V169
0x1ff: V171 = 0x207
0x202: JUMPI 0x207 V170
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x203
[0x203:0x206]
---
Predecessors: [0x1fc]
Successors: []
---
0x203 PUSH1 0x0
0x205 DUP1
0x206 REVERT
---
0x203: V172 = 0x0
0x206: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x207
[0x207:0x20e]
---
Predecessors: [0x1fc]
Successors: [0x5c6]
---
0x207 JUMPDEST
0x208 PUSH2 0xcb
0x20b PUSH2 0x5c6
0x20e JUMP
---
0x207: JUMPDEST 
0x208: V173 = 0xcb
0x20b: V174 = 0x5c6
0x20e: JUMP 0x5c6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xcb]
Exit stack: [V12, 0xcb]

================================

Block 0x20f
[0x20f:0x22a]
---
Predecessors: []
Successors: []
---
0x20f JUMPDEST
0x210 PUSH1 0x40
0x212 MLOAD
0x213 PUSH1 0x1
0x215 PUSH1 0xa0
0x217 PUSH1 0x2
0x219 EXP
0x21a SUB
0x21b SWAP1
0x21c SWAP2
0x21d AND
0x21e DUP2
0x21f MSTORE
0x220 PUSH1 0x20
0x222 ADD
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 SWAP2
0x228 SUB
0x229 SWAP1
0x22a RETURN
---
0x20f: JUMPDEST 
0x210: V175 = 0x40
0x212: V176 = M[0x40]
0x213: V177 = 0x1
0x215: V178 = 0xa0
0x217: V179 = 0x2
0x219: V180 = EXP 0x2 0xa0
0x21a: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21d: V182 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x21f: M[V176] = V182
0x220: V183 = 0x20
0x222: V184 = ADD 0x20 V176
0x223: V185 = 0x40
0x225: V186 = M[0x40]
0x228: V187 = SUB V184 V186
0x22a: RETURN V186 V187
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22b
[0x22b:0x241]
---
Predecessors: [0x9c]
Successors: [0x242, 0x246]
---
0x22b JUMPDEST
0x22c PUSH1 0x0
0x22e SLOAD
0x22f CALLER
0x230 PUSH1 0x1
0x232 PUSH1 0xa0
0x234 PUSH1 0x2
0x236 EXP
0x237 SUB
0x238 SWAP1
0x239 DUP2
0x23a AND
0x23b SWAP2
0x23c AND
0x23d EQ
0x23e PUSH2 0x246
0x241 JUMPI
---
0x22b: JUMPDEST 
0x22c: V188 = 0x0
0x22e: V189 = S[0x0]
0x22f: V190 = CALLER
0x230: V191 = 0x1
0x232: V192 = 0xa0
0x234: V193 = 0x2
0x236: V194 = EXP 0x2 0xa0
0x237: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23a: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x23c: V197 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V198 = EQ V197 V196
0x23e: V199 = 0x246
0x241: JUMPI 0x246 V198
---
Entry stack: [V12, 0x8f, V56, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V56, V59]

================================

Block 0x242
[0x242:0x245]
---
Predecessors: [0x22b]
Successors: []
---
0x242 PUSH1 0x0
0x244 DUP1
0x245 REVERT
---
0x242: V200 = 0x0
0x245: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V56, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V56, V59]

================================

Block 0x246
[0x246:0x283]
---
Predecessors: [0x22b]
Successors: [0x284]
---
0x246 JUMPDEST
0x247 PUSH1 0x1
0x249 DUP1
0x24a SLOAD
0x24b PUSH1 0x1
0x24d PUSH1 0xa0
0x24f PUSH1 0x2
0x251 EXP
0x252 SUB
0x253 DUP1
0x254 DUP6
0x255 AND
0x256 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26b NOT
0x26c SWAP3
0x26d DUP4
0x26e AND
0x26f OR
0x270 SWAP1
0x271 SWAP3
0x272 SSTORE
0x273 PUSH1 0x2
0x275 DUP1
0x276 SLOAD
0x277 SWAP3
0x278 DUP5
0x279 AND
0x27a SWAP3
0x27b SWAP1
0x27c SWAP2
0x27d AND
0x27e SWAP2
0x27f SWAP1
0x280 SWAP2
0x281 OR
0x282 SWAP1
0x283 SSTORE
---
0x246: JUMPDEST 
0x247: V201 = 0x1
0x24a: V202 = S[0x1]
0x24b: V203 = 0x1
0x24d: V204 = 0xa0
0x24f: V205 = 0x2
0x251: V206 = EXP 0x2 0xa0
0x252: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x255: V208 = AND V56 0xffffffffffffffffffffffffffffffffffffffff
0x256: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x26b: V210 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V211 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V202
0x26f: V212 = OR V211 V208
0x272: S[0x1] = V212
0x273: V213 = 0x2
0x276: V214 = S[0x2]
0x279: V215 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V216 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V214
0x281: V217 = OR V216 V215
0x283: S[0x2] = V217
---
Entry stack: [V12, 0x8f, V56, V59]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x8f, V56, V59]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x246, 0x56d]
Successors: [0x8f]
---
0x284 JUMPDEST
0x285 POP
0x286 POP
0x287 JUMP
---
0x284: JUMPDEST 
0x287: JUMP 0x8f
---
Entry stack: [V12, 0x8f, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x288
[0x288:0x296]
---
Predecessors: [0xc3]
Successors: [0xcb]
---
0x288 JUMPDEST
0x289 PUSH1 0x1
0x28b SLOAD
0x28c PUSH1 0x1
0x28e PUSH1 0xa0
0x290 PUSH1 0x2
0x292 EXP
0x293 SUB
0x294 AND
0x295 DUP2
0x296 JUMP
---
0x288: JUMPDEST 
0x289: V218 = 0x1
0x28b: V219 = S[0x1]
0x28c: V220 = 0x1
0x28e: V221 = 0xa0
0x290: V222 = 0x2
0x292: V223 = EXP 0x2 0xa0
0x293: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x294: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x296: JUMP 0xcb
---
Entry stack: [V12, 0xcb]
Stack pops: 1
Stack additions: [S0, V225]
Exit stack: [V12, 0xcb, V225]

================================

Block 0x297
[0x297:0x2ad]
---
Predecessors: [0xf2]
Successors: [0x2ae, 0x2b2]
---
0x297 JUMPDEST
0x298 PUSH1 0x0
0x29a SLOAD
0x29b CALLER
0x29c PUSH1 0x1
0x29e PUSH1 0xa0
0x2a0 PUSH1 0x2
0x2a2 EXP
0x2a3 SUB
0x2a4 SWAP1
0x2a5 DUP2
0x2a6 AND
0x2a7 SWAP2
0x2a8 AND
0x2a9 EQ
0x2aa PUSH2 0x2b2
0x2ad JUMPI
---
0x297: JUMPDEST 
0x298: V226 = 0x0
0x29a: V227 = S[0x0]
0x29b: V228 = CALLER
0x29c: V229 = 0x1
0x29e: V230 = 0xa0
0x2a0: V231 = 0x2
0x2a2: V232 = EXP 0x2 0xa0
0x2a3: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a6: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x2a8: V235 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x2a9: V236 = EQ V235 V234
0x2aa: V237 = 0x2b2
0x2ad: JUMPI 0x2b2 V236
---
Entry stack: [V12, 0x8f, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V92]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x297]
Successors: []
---
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 REVERT
---
0x2ae: V238 = 0x0
0x2b1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V92]

================================

Block 0x2b2
[0x2b2:0x31b]
---
Predecessors: [0x297]
Successors: [0x31c, 0x320]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x2
0x2b5 SLOAD
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 SLOAD
0x2ba PUSH1 0x1
0x2bc PUSH1 0xa0
0x2be PUSH1 0x2
0x2c0 EXP
0x2c1 SUB
0x2c2 SWAP3
0x2c3 DUP4
0x2c4 AND
0x2c5 SWAP3
0x2c6 PUSH4 0xa9059cbb
0x2cb SWAP3
0x2cc SWAP2
0x2cd DUP2
0x2ce AND
0x2cf SWAP2
0x2d0 SWAP1
0x2d1 DUP6
0x2d2 AND
0x2d3 SWAP1
0x2d4 PUSH4 0x70a08231
0x2d9 SWAP1
0x2da ADDRESS
0x2db SWAP1
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df PUSH1 0x20
0x2e1 ADD
0x2e2 MSTORE
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 PUSH1 0xe0
0x2e8 PUSH1 0x2
0x2ea EXP
0x2eb PUSH4 0xffffffff
0x2f0 DUP5
0x2f1 AND
0x2f2 MUL
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd SWAP1
0x2fe SWAP2
0x2ff AND
0x300 PUSH1 0x4
0x302 DUP3
0x303 ADD
0x304 MSTORE
0x305 PUSH1 0x24
0x307 ADD
0x308 PUSH1 0x20
0x30a PUSH1 0x40
0x30c MLOAD
0x30d DUP1
0x30e DUP4
0x30f SUB
0x310 DUP2
0x311 PUSH1 0x0
0x313 DUP8
0x314 DUP1
0x315 EXTCODESIZE
0x316 ISZERO
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V239 = 0x2
0x2b5: V240 = S[0x2]
0x2b6: V241 = 0x0
0x2b9: V242 = S[0x0]
0x2ba: V243 = 0x1
0x2bc: V244 = 0xa0
0x2be: V245 = 0x2
0x2c0: V246 = EXP 0x2 0xa0
0x2c1: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c4: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x2c6: V249 = 0xa9059cbb
0x2ce: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x2d2: V251 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V252 = 0x70a08231
0x2da: V253 = ADDRESS
0x2dc: V254 = 0x40
0x2de: V255 = M[0x40]
0x2df: V256 = 0x20
0x2e1: V257 = ADD 0x20 V255
0x2e2: M[V257] = 0x0
0x2e3: V258 = 0x40
0x2e5: V259 = M[0x40]
0x2e6: V260 = 0xe0
0x2e8: V261 = 0x2
0x2ea: V262 = EXP 0x2 0xe0
0x2eb: V263 = 0xffffffff
0x2f1: V264 = AND 0x70a08231 0xffffffff
0x2f2: V265 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2f4: M[V259] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2f5: V266 = 0x1
0x2f7: V267 = 0xa0
0x2f9: V268 = 0x2
0x2fb: V269 = EXP 0x2 0xa0
0x2fc: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ff: V271 = AND V253 0xffffffffffffffffffffffffffffffffffffffff
0x300: V272 = 0x4
0x303: V273 = ADD V259 0x4
0x304: M[V273] = V271
0x305: V274 = 0x24
0x307: V275 = ADD 0x24 V259
0x308: V276 = 0x20
0x30a: V277 = 0x40
0x30c: V278 = M[0x40]
0x30f: V279 = SUB V275 V278
0x311: V280 = 0x0
0x315: V281 = EXTCODESIZE V251
0x316: V282 = ISZERO V281
0x317: V283 = ISZERO V282
0x318: V284 = 0x320
0x31b: JUMPI 0x320 V283
---
Entry stack: [V12, 0x8f, V92]
Stack pops: 1
Stack additions: [S0, V248, 0xa9059cbb, V250, V251, 0x70a08231, V275, 0x20, V278, V279, V278, 0x0, V251]
Exit stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V250, V251, 0x70a08231, V275, 0x20, V278, V279, V278, 0x0, V251]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x2b2]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V285 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V250, V251, 0x70a08231, V275, 0x20, V278, V279, V278, 0x0, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V250, V251, 0x70a08231, V275, 0x20, V278, V279, V278, 0x0, V251]

================================

Block 0x320
[0x320:0x32c]
---
Predecessors: [0x2b2]
Successors: [0x32d, 0x331]
---
0x320 JUMPDEST
0x321 PUSH2 0x2c6
0x324 GAS
0x325 SUB
0x326 CALL
0x327 ISZERO
0x328 ISZERO
0x329 PUSH2 0x331
0x32c JUMPI
---
0x320: JUMPDEST 
0x321: V286 = 0x2c6
0x324: V287 = GAS
0x325: V288 = SUB V287 0x2c6
0x326: V289 = CALL V288 V251 0x0 V278 V279 V278 0x20
0x327: V290 = ISZERO V289
0x328: V291 = ISZERO V290
0x329: V292 = 0x331
0x32c: JUMPI 0x331 V291
---
Entry stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V250, V251, 0x70a08231, V275, 0x20, V278, V279, V278, 0x0, V251]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V250, V251, 0x70a08231, V275]

================================

Block 0x32d
[0x32d:0x330]
---
Predecessors: [0x320]
Successors: []
---
0x32d PUSH1 0x0
0x32f DUP1
0x330 REVERT
---
0x32d: V293 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V250, V251, 0x70a08231, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V250, V251, 0x70a08231, V275]

================================

Block 0x331
[0x331:0x382]
---
Predecessors: [0x320]
Successors: [0x383, 0x387]
---
0x331 JUMPDEST
0x332 POP
0x333 POP
0x334 POP
0x335 PUSH1 0x40
0x337 MLOAD
0x338 DUP1
0x339 MLOAD
0x33a SWAP1
0x33b POP
0x33c PUSH1 0x0
0x33e PUSH1 0x40
0x340 MLOAD
0x341 PUSH1 0x20
0x343 ADD
0x344 MSTORE
0x345 PUSH1 0x40
0x347 MLOAD
0x348 PUSH1 0xe0
0x34a PUSH1 0x2
0x34c EXP
0x34d PUSH4 0xffffffff
0x352 DUP6
0x353 AND
0x354 MUL
0x355 DUP2
0x356 MSTORE
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f SWAP1
0x360 SWAP3
0x361 AND
0x362 PUSH1 0x4
0x364 DUP4
0x365 ADD
0x366 MSTORE
0x367 PUSH1 0x24
0x369 DUP3
0x36a ADD
0x36b MSTORE
0x36c PUSH1 0x44
0x36e ADD
0x36f PUSH1 0x20
0x371 PUSH1 0x40
0x373 MLOAD
0x374 DUP1
0x375 DUP4
0x376 SUB
0x377 DUP2
0x378 PUSH1 0x0
0x37a DUP8
0x37b DUP1
0x37c EXTCODESIZE
0x37d ISZERO
0x37e ISZERO
0x37f PUSH2 0x387
0x382 JUMPI
---
0x331: JUMPDEST 
0x335: V294 = 0x40
0x337: V295 = M[0x40]
0x339: V296 = M[V295]
0x33c: V297 = 0x0
0x33e: V298 = 0x40
0x340: V299 = M[0x40]
0x341: V300 = 0x20
0x343: V301 = ADD 0x20 V299
0x344: M[V301] = 0x0
0x345: V302 = 0x40
0x347: V303 = M[0x40]
0x348: V304 = 0xe0
0x34a: V305 = 0x2
0x34c: V306 = EXP 0x2 0xe0
0x34d: V307 = 0xffffffff
0x353: V308 = AND 0xa9059cbb 0xffffffff
0x354: V309 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x356: M[V303] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x357: V310 = 0x1
0x359: V311 = 0xa0
0x35b: V312 = 0x2
0x35d: V313 = EXP 0x2 0xa0
0x35e: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x361: V315 = AND V250 0xffffffffffffffffffffffffffffffffffffffff
0x362: V316 = 0x4
0x365: V317 = ADD V303 0x4
0x366: M[V317] = V315
0x367: V318 = 0x24
0x36a: V319 = ADD V303 0x24
0x36b: M[V319] = V296
0x36c: V320 = 0x44
0x36e: V321 = ADD 0x44 V303
0x36f: V322 = 0x20
0x371: V323 = 0x40
0x373: V324 = M[0x40]
0x376: V325 = SUB V321 V324
0x378: V326 = 0x0
0x37c: V327 = EXTCODESIZE V248
0x37d: V328 = ISZERO V327
0x37e: V329 = ISZERO V328
0x37f: V330 = 0x387
0x382: JUMPI 0x387 V329
---
Entry stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V250, V251, 0x70a08231, V275]
Stack pops: 6
Stack additions: [S5, S4, V321, 0x20, V324, V325, V324, 0x0, S5]
Exit stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V321, 0x20, V324, V325, V324, 0x0, V248]

================================

Block 0x383
[0x383:0x386]
---
Predecessors: [0x331]
Successors: []
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
---
0x383: V331 = 0x0
0x386: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V321, 0x20, V324, V325, V324, 0x0, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V321, 0x20, V324, V325, V324, 0x0, V248]

================================

Block 0x387
[0x387:0x393]
---
Predecessors: [0x331]
Successors: [0x394, 0x398]
---
0x387 JUMPDEST
0x388 PUSH2 0x2c6
0x38b GAS
0x38c SUB
0x38d CALL
0x38e ISZERO
0x38f ISZERO
0x390 PUSH2 0x398
0x393 JUMPI
---
0x387: JUMPDEST 
0x388: V332 = 0x2c6
0x38b: V333 = GAS
0x38c: V334 = SUB V333 0x2c6
0x38d: V335 = CALL V334 V248 0x0 V324 V325 V324 0x20
0x38e: V336 = ISZERO V335
0x38f: V337 = ISZERO V336
0x390: V338 = 0x398
0x393: JUMPI 0x398 V337
---
Entry stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V321, 0x20, V324, V325, V324, 0x0, V248]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V321]

================================

Block 0x394
[0x394:0x397]
---
Predecessors: [0x387]
Successors: []
---
0x394 PUSH1 0x0
0x396 DUP1
0x397 REVERT
---
0x394: V339 = 0x0
0x397: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V321]

================================

Block 0x398
[0x398:0x3a8]
---
Predecessors: [0x387]
Successors: [0x3a9, 0x3ad]
---
0x398 JUMPDEST
0x399 POP
0x39a POP
0x39b POP
0x39c PUSH1 0x40
0x39e MLOAD
0x39f DUP1
0x3a0 MLOAD
0x3a1 SWAP1
0x3a2 POP
0x3a3 ISZERO
0x3a4 ISZERO
0x3a5 PUSH2 0x3ad
0x3a8 JUMPI
---
0x398: JUMPDEST 
0x39c: V340 = 0x40
0x39e: V341 = M[0x40]
0x3a0: V342 = M[V341]
0x3a3: V343 = ISZERO V342
0x3a4: V344 = ISZERO V343
0x3a5: V345 = 0x3ad
0x3a8: JUMPI 0x3ad V344
---
Entry stack: [V12, 0x8f, V92, V248, 0xa9059cbb, V321]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x8f, V92]

================================

Block 0x3a9
[0x3a9:0x3ac]
---
Predecessors: [0x398]
Successors: []
---
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac REVERT
---
0x3a9: V346 = 0x0
0x3ac: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V92]

================================

Block 0x3ad
[0x3ad:0x3ad]
---
Predecessors: [0x398, 0x417, 0x49b]
Successors: [0x3ae]
---
0x3ad JUMPDEST
---
0x3ad: JUMPDEST 
---
Entry stack: [V12, 0x8f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S0]

================================

Block 0x3ae
[0x3ae:0x3b0]
---
Predecessors: [0x3ad]
Successors: [0x8f]
---
0x3ae JUMPDEST
0x3af POP
0x3b0 JUMP
---
0x3ae: JUMPDEST 
0x3b0: JUMP 0x8f
---
Entry stack: [V12, 0x8f, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b1
[0x3b1:0x3c3]
---
Predecessors: [0x113]
Successors: [0x3c4, 0x3c8]
---
0x3b1 JUMPDEST
0x3b2 PUSH1 0x1
0x3b4 SLOAD
0x3b5 PUSH1 0x1
0x3b7 PUSH1 0xa0
0x3b9 PUSH1 0x2
0x3bb EXP
0x3bc SUB
0x3bd AND
0x3be ISZERO
0x3bf ISZERO
0x3c0 PUSH2 0x3c8
0x3c3 JUMPI
---
0x3b1: JUMPDEST 
0x3b2: V347 = 0x1
0x3b4: V348 = S[0x1]
0x3b5: V349 = 0x1
0x3b7: V350 = 0xa0
0x3b9: V351 = 0x2
0x3bb: V352 = EXP 0x2 0xa0
0x3bc: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bd: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x3be: V355 = ISZERO V354
0x3bf: V356 = ISZERO V355
0x3c0: V357 = 0x3c8
0x3c3: JUMPI 0x3c8 V356
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x3c4
[0x3c4:0x3c7]
---
Predecessors: [0x3b1]
Successors: []
---
0x3c4 PUSH1 0x0
0x3c6 DUP1
0x3c7 REVERT
---
0x3c4: V358 = 0x0
0x3c7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x3c8
[0x3c8:0x3f8]
---
Predecessors: [0x3b1]
Successors: [0x8c, 0x3f9]
---
0x3c8 JUMPDEST
0x3c9 PUSH1 0x1
0x3cb SLOAD
0x3cc PUSH1 0x1
0x3ce PUSH1 0xa0
0x3d0 PUSH1 0x2
0x3d2 EXP
0x3d3 SUB
0x3d4 SWAP1
0x3d5 DUP2
0x3d6 AND
0x3d7 SWAP1
0x3d8 ADDRESS
0x3d9 AND
0x3da BALANCE
0x3db PUSH1 0x40
0x3dd MLOAD
0x3de PUSH1 0x0
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 DUP1
0x3e4 DUP4
0x3e5 SUB
0x3e6 DUP2
0x3e7 DUP6
0x3e8 DUP8
0x3e9 PUSH2 0x8796
0x3ec GAS
0x3ed SUB
0x3ee CALL
0x3ef SWAP3
0x3f0 POP
0x3f1 POP
0x3f2 POP
0x3f3 ISZERO
0x3f4 ISZERO
0x3f5 PUSH2 0x8c
0x3f8 JUMPI
---
0x3c8: JUMPDEST 
0x3c9: V359 = 0x1
0x3cb: V360 = S[0x1]
0x3cc: V361 = 0x1
0x3ce: V362 = 0xa0
0x3d0: V363 = 0x2
0x3d2: V364 = EXP 0x2 0xa0
0x3d3: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d6: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x3d8: V367 = ADDRESS
0x3d9: V368 = AND V367 0xffffffffffffffffffffffffffffffffffffffff
0x3da: V369 = BALANCE V368
0x3db: V370 = 0x40
0x3dd: V371 = M[0x40]
0x3de: V372 = 0x0
0x3e0: V373 = 0x40
0x3e2: V374 = M[0x40]
0x3e5: V375 = SUB V371 V374
0x3e9: V376 = 0x8796
0x3ec: V377 = GAS
0x3ed: V378 = SUB V377 0x8796
0x3ee: V379 = CALL V378 V366 V369 V374 V375 V374 0x0
0x3f3: V380 = ISZERO V379
0x3f4: V381 = ISZERO V380
0x3f5: V382 = 0x8c
0x3f8: JUMPI 0x8c V381
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x3f9
[0x3f9:0x3fc]
---
Predecessors: [0x3c8]
Successors: []
---
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc REVERT
---
0x3f9: V383 = 0x0
0x3fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x3fd
[0x3fd:0x3fd]
---
Predecessors: []
Successors: [0x3fe]
---
0x3fd JUMPDEST
---
0x3fd: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3fe
[0x3fe:0x3ff]
---
Predecessors: [0x3fd]
Successors: []
Has unresolved jump.
---
0x3fe JUMPDEST
0x3ff JUMP
---
0x3fe: JUMPDEST 
0x3ff: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x400
[0x400:0x412]
---
Predecessors: [0x128]
Successors: [0x413, 0x417]
---
0x400 JUMPDEST
0x401 PUSH1 0x1
0x403 SLOAD
0x404 PUSH1 0x1
0x406 PUSH1 0xa0
0x408 PUSH1 0x2
0x40a EXP
0x40b SUB
0x40c AND
0x40d ISZERO
0x40e ISZERO
0x40f PUSH2 0x417
0x412 JUMPI
---
0x400: JUMPDEST 
0x401: V384 = 0x1
0x403: V385 = S[0x1]
0x404: V386 = 0x1
0x406: V387 = 0xa0
0x408: V388 = 0x2
0x40a: V389 = EXP 0x2 0xa0
0x40b: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40c: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x40d: V392 = ISZERO V391
0x40e: V393 = ISZERO V392
0x40f: V394 = 0x417
0x412: JUMPI 0x417 V393
---
Entry stack: [V12, 0x8f, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V109]

================================

Block 0x413
[0x413:0x416]
---
Predecessors: [0x400]
Successors: []
---
0x413 PUSH1 0x0
0x415 DUP1
0x416 REVERT
---
0x413: V395 = 0x0
0x416: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V109]

================================

Block 0x417
[0x417:0x462]
---
Predecessors: [0x400]
Successors: [0x3ad, 0x463]
---
0x417 JUMPDEST
0x418 PUSH1 0x1
0x41a SLOAD
0x41b PUSH1 0x1
0x41d PUSH1 0xa0
0x41f PUSH1 0x2
0x421 EXP
0x422 SUB
0x423 SWAP1
0x424 DUP2
0x425 AND
0x426 SWAP1
0x427 PUSH1 0xe0
0x429 PUSH1 0x2
0x42b EXP
0x42c DUP4
0x42d DIV
0x42e SWAP1
0x42f ADDRESS
0x430 AND
0x431 BALANCE
0x432 PUSH1 0x40
0x434 MLOAD
0x435 DUP3
0x436 PUSH4 0xffffffff
0x43b AND
0x43c PUSH1 0xe0
0x43e PUSH1 0x2
0x440 EXP
0x441 MUL
0x442 DUP2
0x443 MSTORE
0x444 PUSH1 0x4
0x446 ADD
0x447 PUSH1 0x0
0x449 PUSH1 0x40
0x44b MLOAD
0x44c DUP1
0x44d DUP4
0x44e SUB
0x44f DUP2
0x450 DUP6
0x451 DUP9
0x452 PUSH2 0x8796
0x455 GAS
0x456 SUB
0x457 CALL
0x458 SWAP4
0x459 POP
0x45a POP
0x45b POP
0x45c POP
0x45d ISZERO
0x45e ISZERO
0x45f PUSH2 0x3ad
0x462 JUMPI
---
0x417: JUMPDEST 
0x418: V396 = 0x1
0x41a: V397 = S[0x1]
0x41b: V398 = 0x1
0x41d: V399 = 0xa0
0x41f: V400 = 0x2
0x421: V401 = EXP 0x2 0xa0
0x422: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x425: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x427: V404 = 0xe0
0x429: V405 = 0x2
0x42b: V406 = EXP 0x2 0xe0
0x42d: V407 = DIV V109 0x100000000000000000000000000000000000000000000000000000000
0x42f: V408 = ADDRESS
0x430: V409 = AND V408 0xffffffffffffffffffffffffffffffffffffffff
0x431: V410 = BALANCE V409
0x432: V411 = 0x40
0x434: V412 = M[0x40]
0x436: V413 = 0xffffffff
0x43b: V414 = AND 0xffffffff V407
0x43c: V415 = 0xe0
0x43e: V416 = 0x2
0x440: V417 = EXP 0x2 0xe0
0x441: V418 = MUL 0x100000000000000000000000000000000000000000000000000000000 V414
0x443: M[V412] = V418
0x444: V419 = 0x4
0x446: V420 = ADD 0x4 V412
0x447: V421 = 0x0
0x449: V422 = 0x40
0x44b: V423 = M[0x40]
0x44e: V424 = SUB V420 V423
0x452: V425 = 0x8796
0x455: V426 = GAS
0x456: V427 = SUB V426 0x8796
0x457: V428 = CALL V427 V403 V410 V423 V424 V423 0x0
0x45d: V429 = ISZERO V428
0x45e: V430 = ISZERO V429
0x45f: V431 = 0x3ad
0x462: JUMPI 0x3ad V430
---
Entry stack: [V12, 0x8f, V109]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x8f, V109]

================================

Block 0x463
[0x463:0x466]
---
Predecessors: [0x417]
Successors: []
---
0x463 PUSH1 0x0
0x465 DUP1
0x466 REVERT
---
0x463: V432 = 0x0
0x466: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V109]

================================

Block 0x467
[0x467:0x467]
---
Predecessors: []
Successors: [0x468]
---
0x467 JUMPDEST
---
0x467: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x468
[0x468:0x46a]
---
Predecessors: [0x467]
Successors: []
Has unresolved jump.
---
0x468 JUMPDEST
0x469 POP
0x46a JUMP
---
0x468: JUMPDEST 
0x46a: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x46b
[0x46b:0x481]
---
Predecessors: [0x15f]
Successors: [0x482, 0x486]
---
0x46b JUMPDEST
0x46c PUSH1 0x0
0x46e SLOAD
0x46f CALLER
0x470 PUSH1 0x1
0x472 PUSH1 0xa0
0x474 PUSH1 0x2
0x476 EXP
0x477 SUB
0x478 SWAP1
0x479 DUP2
0x47a AND
0x47b SWAP2
0x47c AND
0x47d EQ
0x47e PUSH2 0x486
0x481 JUMPI
---
0x46b: JUMPDEST 
0x46c: V433 = 0x0
0x46e: V434 = S[0x0]
0x46f: V435 = CALLER
0x470: V436 = 0x1
0x472: V437 = 0xa0
0x474: V438 = 0x2
0x476: V439 = EXP 0x2 0xa0
0x477: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47a: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x47c: V442 = AND V434 0xffffffffffffffffffffffffffffffffffffffff
0x47d: V443 = EQ V442 V441
0x47e: V444 = 0x486
0x481: JUMPI 0x486 V443
---
Entry stack: [V12, 0x8f, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V123]

================================

Block 0x482
[0x482:0x485]
---
Predecessors: [0x46b]
Successors: []
---
0x482 PUSH1 0x0
0x484 DUP1
0x485 REVERT
---
0x482: V445 = 0x0
0x485: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V123]

================================

Block 0x486
[0x486:0x496]
---
Predecessors: [0x46b]
Successors: [0x497, 0x49b]
---
0x486 JUMPDEST
0x487 PUSH1 0x1
0x489 PUSH1 0xa0
0x48b PUSH1 0x2
0x48d EXP
0x48e SUB
0x48f DUP2
0x490 AND
0x491 ISZERO
0x492 ISZERO
0x493 PUSH2 0x49b
0x496 JUMPI
---
0x486: JUMPDEST 
0x487: V446 = 0x1
0x489: V447 = 0xa0
0x48b: V448 = 0x2
0x48d: V449 = EXP 0x2 0xa0
0x48e: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x490: V451 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x491: V452 = ISZERO V451
0x492: V453 = ISZERO V452
0x493: V454 = 0x49b
0x496: JUMPI 0x49b V453
---
Entry stack: [V12, 0x8f, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x8f, V123]

================================

Block 0x497
[0x497:0x49a]
---
Predecessors: [0x486]
Successors: []
---
0x497 PUSH1 0x0
0x499 DUP1
0x49a REVERT
---
0x497: V455 = 0x0
0x49a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V123]

================================

Block 0x49b
[0x49b:0x4ce]
---
Predecessors: [0x486]
Successors: [0x3ad, 0x4cf]
---
0x49b JUMPDEST
0x49c DUP1
0x49d PUSH1 0x1
0x49f PUSH1 0xa0
0x4a1 PUSH1 0x2
0x4a3 EXP
0x4a4 SUB
0x4a5 AND
0x4a6 ADDRESS
0x4a7 PUSH1 0x1
0x4a9 PUSH1 0xa0
0x4ab PUSH1 0x2
0x4ad EXP
0x4ae SUB
0x4af AND
0x4b0 BALANCE
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 PUSH1 0x0
0x4b6 PUSH1 0x40
0x4b8 MLOAD
0x4b9 DUP1
0x4ba DUP4
0x4bb SUB
0x4bc DUP2
0x4bd DUP6
0x4be DUP8
0x4bf PUSH2 0x8796
0x4c2 GAS
0x4c3 SUB
0x4c4 CALL
0x4c5 SWAP3
0x4c6 POP
0x4c7 POP
0x4c8 POP
0x4c9 ISZERO
0x4ca ISZERO
0x4cb PUSH2 0x3ad
0x4ce JUMPI
---
0x49b: JUMPDEST 
0x49d: V456 = 0x1
0x49f: V457 = 0xa0
0x4a1: V458 = 0x2
0x4a3: V459 = EXP 0x2 0xa0
0x4a4: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a5: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x4a6: V462 = ADDRESS
0x4a7: V463 = 0x1
0x4a9: V464 = 0xa0
0x4ab: V465 = 0x2
0x4ad: V466 = EXP 0x2 0xa0
0x4ae: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4af: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x4b0: V469 = BALANCE V468
0x4b1: V470 = 0x40
0x4b3: V471 = M[0x40]
0x4b4: V472 = 0x0
0x4b6: V473 = 0x40
0x4b8: V474 = M[0x40]
0x4bb: V475 = SUB V471 V474
0x4bf: V476 = 0x8796
0x4c2: V477 = GAS
0x4c3: V478 = SUB V477 0x8796
0x4c4: V479 = CALL V478 V461 V469 V474 V475 V474 0x0
0x4c9: V480 = ISZERO V479
0x4ca: V481 = ISZERO V480
0x4cb: V482 = 0x3ad
0x4ce: JUMPI 0x3ad V481
---
Entry stack: [V12, 0x8f, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x8f, V123]

================================

Block 0x4cf
[0x4cf:0x4d2]
---
Predecessors: [0x49b]
Successors: []
---
0x4cf PUSH1 0x0
0x4d1 DUP1
0x4d2 REVERT
---
0x4cf: V483 = 0x0
0x4d2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V123]

================================

Block 0x4d3
[0x4d3:0x4d3]
---
Predecessors: []
Successors: [0x4d4]
---
0x4d3 JUMPDEST
---
0x4d3: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4d4
[0x4d4:0x4d6]
---
Predecessors: [0x4d3]
Successors: []
Has unresolved jump.
---
0x4d4 JUMPDEST
0x4d5 POP
0x4d6 JUMP
---
0x4d4: JUMPDEST 
0x4d6: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x4d7
[0x4d7:0x4e5]
---
Predecessors: [0x180]
Successors: [0xcb]
---
0x4d7 JUMPDEST
0x4d8 PUSH1 0x0
0x4da SLOAD
0x4db PUSH1 0x1
0x4dd PUSH1 0xa0
0x4df PUSH1 0x2
0x4e1 EXP
0x4e2 SUB
0x4e3 AND
0x4e4 DUP2
0x4e5 JUMP
---
0x4d7: JUMPDEST 
0x4d8: V484 = 0x0
0x4da: V485 = S[0x0]
0x4db: V486 = 0x1
0x4dd: V487 = 0xa0
0x4df: V488 = 0x2
0x4e1: V489 = EXP 0x2 0xa0
0x4e2: V490 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e3: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x4e5: JUMP 0xcb
---
Entry stack: [V12, 0xcb]
Stack pops: 1
Stack additions: [S0, V491]
Exit stack: [V12, 0xcb, V491]

================================

Block 0x4e6
[0x4e6:0x4fc]
---
Predecessors: [0x1af]
Successors: [0x4fd, 0x501]
---
0x4e6 JUMPDEST
0x4e7 PUSH1 0x0
0x4e9 SLOAD
0x4ea CALLER
0x4eb PUSH1 0x1
0x4ed PUSH1 0xa0
0x4ef PUSH1 0x2
0x4f1 EXP
0x4f2 SUB
0x4f3 SWAP1
0x4f4 DUP2
0x4f5 AND
0x4f6 SWAP2
0x4f7 AND
0x4f8 EQ
0x4f9 PUSH2 0x501
0x4fc JUMPI
---
0x4e6: JUMPDEST 
0x4e7: V492 = 0x0
0x4e9: V493 = S[0x0]
0x4ea: V494 = CALLER
0x4eb: V495 = 0x1
0x4ed: V496 = 0xa0
0x4ef: V497 = 0x2
0x4f1: V498 = EXP 0x2 0xa0
0x4f2: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f5: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x4f7: V501 = AND V493 0xffffffffffffffffffffffffffffffffffffffff
0x4f8: V502 = EQ V501 V500
0x4f9: V503 = 0x501
0x4fc: JUMPI 0x501 V502
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x4fd
[0x4fd:0x500]
---
Predecessors: [0x4e6]
Successors: []
---
0x4fd PUSH1 0x0
0x4ff DUP1
0x500 REVERT
---
0x4fd: V504 = 0x0
0x500: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x501
[0x501:0x535]
---
Predecessors: [0x4e6]
Successors: [0x8c, 0x536]
---
0x501 JUMPDEST
0x502 PUSH1 0x0
0x504 SLOAD
0x505 PUSH1 0x1
0x507 PUSH1 0xa0
0x509 PUSH1 0x2
0x50b EXP
0x50c SUB
0x50d SWAP1
0x50e DUP2
0x50f AND
0x510 SWAP1
0x511 ADDRESS
0x512 AND
0x513 BALANCE
0x514 DUP1
0x515 ISZERO
0x516 PUSH2 0x8fc
0x519 MUL
0x51a SWAP1
0x51b PUSH1 0x40
0x51d MLOAD
0x51e PUSH1 0x0
0x520 PUSH1 0x40
0x522 MLOAD
0x523 DUP1
0x524 DUP4
0x525 SUB
0x526 DUP2
0x527 DUP6
0x528 DUP9
0x529 DUP9
0x52a CALL
0x52b SWAP4
0x52c POP
0x52d POP
0x52e POP
0x52f POP
0x530 ISZERO
0x531 ISZERO
0x532 PUSH2 0x8c
0x535 JUMPI
---
0x501: JUMPDEST 
0x502: V505 = 0x0
0x504: V506 = S[0x0]
0x505: V507 = 0x1
0x507: V508 = 0xa0
0x509: V509 = 0x2
0x50b: V510 = EXP 0x2 0xa0
0x50c: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50f: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x511: V513 = ADDRESS
0x512: V514 = AND V513 0xffffffffffffffffffffffffffffffffffffffff
0x513: V515 = BALANCE V514
0x515: V516 = ISZERO V515
0x516: V517 = 0x8fc
0x519: V518 = MUL 0x8fc V516
0x51b: V519 = 0x40
0x51d: V520 = M[0x40]
0x51e: V521 = 0x0
0x520: V522 = 0x40
0x522: V523 = M[0x40]
0x525: V524 = SUB V520 V523
0x52a: V525 = CALL V518 V512 V515 V523 V524 V523 0x0
0x530: V526 = ISZERO V525
0x531: V527 = ISZERO V526
0x532: V528 = 0x8c
0x535: JUMPI 0x8c V527
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x536
[0x536:0x539]
---
Predecessors: [0x501]
Successors: []
---
0x536 PUSH1 0x0
0x538 DUP1
0x539 REVERT
---
0x536: V529 = 0x0
0x539: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x53a
[0x53a:0x53a]
---
Predecessors: []
Successors: [0x53b]
---
0x53a JUMPDEST
---
0x53a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x53b
[0x53b:0x53c]
---
Predecessors: [0x53a]
Successors: []
Has unresolved jump.
---
0x53b JUMPDEST
0x53c JUMP
---
0x53b: JUMPDEST 
0x53c: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x53d
[0x53d:0x553]
---
Predecessors: [0x1c4]
Successors: [0x554, 0x558]
---
0x53d JUMPDEST
0x53e PUSH1 0x0
0x540 SLOAD
0x541 CALLER
0x542 PUSH1 0x1
0x544 PUSH1 0xa0
0x546 PUSH1 0x2
0x548 EXP
0x549 SUB
0x54a SWAP1
0x54b DUP2
0x54c AND
0x54d SWAP2
0x54e AND
0x54f EQ
0x550 PUSH2 0x558
0x553 JUMPI
---
0x53d: JUMPDEST 
0x53e: V530 = 0x0
0x540: V531 = S[0x0]
0x541: V532 = CALLER
0x542: V533 = 0x1
0x544: V534 = 0xa0
0x546: V535 = 0x2
0x548: V536 = EXP 0x2 0xa0
0x549: V537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54c: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x54e: V539 = AND V531 0xffffffffffffffffffffffffffffffffffffffff
0x54f: V540 = EQ V539 V538
0x550: V541 = 0x558
0x553: JUMPI 0x558 V540
---
Entry stack: [V12, 0x8f, V162, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V162, V167]

================================

Block 0x554
[0x554:0x557]
---
Predecessors: [0x53d]
Successors: []
---
0x554 PUSH1 0x0
0x556 DUP1
0x557 REVERT
---
0x554: V542 = 0x0
0x557: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V162, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V162, V167]

================================

Block 0x558
[0x558:0x568]
---
Predecessors: [0x53d]
Successors: [0x569, 0x56d]
---
0x558 JUMPDEST
0x559 PUSH1 0x1
0x55b PUSH1 0xa0
0x55d PUSH1 0x2
0x55f EXP
0x560 SUB
0x561 DUP3
0x562 AND
0x563 ISZERO
0x564 ISZERO
0x565 PUSH2 0x56d
0x568 JUMPI
---
0x558: JUMPDEST 
0x559: V543 = 0x1
0x55b: V544 = 0xa0
0x55d: V545 = 0x2
0x55f: V546 = EXP 0x2 0xa0
0x560: V547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x562: V548 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x563: V549 = ISZERO V548
0x564: V550 = ISZERO V549
0x565: V551 = 0x56d
0x568: JUMPI 0x56d V550
---
Entry stack: [V12, 0x8f, V162, V167]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x8f, V162, V167]

================================

Block 0x569
[0x569:0x56c]
---
Predecessors: [0x558]
Successors: []
---
0x569 PUSH1 0x0
0x56b DUP1
0x56c REVERT
---
0x569: V552 = 0x0
0x56c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V162, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V162, V167]

================================

Block 0x56d
[0x56d:0x5bc]
---
Predecessors: [0x558]
Successors: [0x284, 0x5bd]
---
0x56d JUMPDEST
0x56e DUP2
0x56f PUSH1 0x1
0x571 PUSH1 0xa0
0x573 PUSH1 0x2
0x575 EXP
0x576 SUB
0x577 AND
0x578 ADDRESS
0x579 PUSH1 0x1
0x57b PUSH1 0xa0
0x57d PUSH1 0x2
0x57f EXP
0x580 SUB
0x581 AND
0x582 BALANCE
0x583 DUP3
0x584 PUSH1 0xe0
0x586 PUSH1 0x2
0x588 EXP
0x589 SWAP1
0x58a DIV
0x58b SWAP1
0x58c PUSH1 0x40
0x58e MLOAD
0x58f DUP3
0x590 PUSH4 0xffffffff
0x595 AND
0x596 PUSH1 0xe0
0x598 PUSH1 0x2
0x59a EXP
0x59b MUL
0x59c DUP2
0x59d MSTORE
0x59e PUSH1 0x4
0x5a0 ADD
0x5a1 PUSH1 0x0
0x5a3 PUSH1 0x40
0x5a5 MLOAD
0x5a6 DUP1
0x5a7 DUP4
0x5a8 SUB
0x5a9 DUP2
0x5aa DUP6
0x5ab DUP9
0x5ac PUSH2 0x8796
0x5af GAS
0x5b0 SUB
0x5b1 CALL
0x5b2 SWAP4
0x5b3 POP
0x5b4 POP
0x5b5 POP
0x5b6 POP
0x5b7 ISZERO
0x5b8 ISZERO
0x5b9 PUSH2 0x284
0x5bc JUMPI
---
0x56d: JUMPDEST 
0x56f: V553 = 0x1
0x571: V554 = 0xa0
0x573: V555 = 0x2
0x575: V556 = EXP 0x2 0xa0
0x576: V557 = SUB 0x10000000000000000000000000000000000000000 0x1
0x577: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x578: V559 = ADDRESS
0x579: V560 = 0x1
0x57b: V561 = 0xa0
0x57d: V562 = 0x2
0x57f: V563 = EXP 0x2 0xa0
0x580: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x581: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x582: V566 = BALANCE V565
0x584: V567 = 0xe0
0x586: V568 = 0x2
0x588: V569 = EXP 0x2 0xe0
0x58a: V570 = DIV V167 0x100000000000000000000000000000000000000000000000000000000
0x58c: V571 = 0x40
0x58e: V572 = M[0x40]
0x590: V573 = 0xffffffff
0x595: V574 = AND 0xffffffff V570
0x596: V575 = 0xe0
0x598: V576 = 0x2
0x59a: V577 = EXP 0x2 0xe0
0x59b: V578 = MUL 0x100000000000000000000000000000000000000000000000000000000 V574
0x59d: M[V572] = V578
0x59e: V579 = 0x4
0x5a0: V580 = ADD 0x4 V572
0x5a1: V581 = 0x0
0x5a3: V582 = 0x40
0x5a5: V583 = M[0x40]
0x5a8: V584 = SUB V580 V583
0x5ac: V585 = 0x8796
0x5af: V586 = GAS
0x5b0: V587 = SUB V586 0x8796
0x5b1: V588 = CALL V587 V558 V566 V583 V584 V583 0x0
0x5b7: V589 = ISZERO V588
0x5b8: V590 = ISZERO V589
0x5b9: V591 = 0x284
0x5bc: JUMPI 0x284 V590
---
Entry stack: [V12, 0x8f, V162, V167]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x8f, V162, V167]

================================

Block 0x5bd
[0x5bd:0x5c0]
---
Predecessors: [0x56d]
Successors: []
---
0x5bd PUSH1 0x0
0x5bf DUP1
0x5c0 REVERT
---
0x5bd: V592 = 0x0
0x5c0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V162, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V162, V167]

================================

Block 0x5c1
[0x5c1:0x5c1]
---
Predecessors: []
Successors: [0x5c2]
---
0x5c1 JUMPDEST
---
0x5c1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5c2
[0x5c2:0x5c5]
---
Predecessors: [0x5c1]
Successors: []
Has unresolved jump.
---
0x5c2 JUMPDEST
0x5c3 POP
0x5c4 POP
0x5c5 JUMP
---
0x5c2: JUMPDEST 
0x5c5: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x5c6
[0x5c6:0x5d4]
---
Predecessors: [0x207]
Successors: [0xcb]
---
0x5c6 JUMPDEST
0x5c7 PUSH1 0x2
0x5c9 SLOAD
0x5ca PUSH1 0x1
0x5cc PUSH1 0xa0
0x5ce PUSH1 0x2
0x5d0 EXP
0x5d1 SUB
0x5d2 AND
0x5d3 DUP2
0x5d4 JUMP
---
0x5c6: JUMPDEST 
0x5c7: V593 = 0x2
0x5c9: V594 = S[0x2]
0x5ca: V595 = 0x1
0x5cc: V596 = 0xa0
0x5ce: V597 = 0x2
0x5d0: V598 = EXP 0x2 0xa0
0x5d1: V599 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d2: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0x5d4: JUMP 0xcb
---
Entry stack: [V12, 0xcb]
Stack pops: 1
Stack additions: [S0, V600]
Exit stack: [V12, 0xcb, V600]

================================

Block 0x5d5
[0x5d5:0x600]
---
Predecessors: []
Successors: []
---
0x5d5 STOP
0x5d6 LOG1
0x5d7 PUSH6 0x627a7a723058
0x5de SHA3
0x5df MISSING 0xd9
0x5e0 DUP7
0x5e1 DUP13
0x5e2 PUSH9 0x5b9c26e63e364aa9b7
0x5ec MISSING 0xc
0x5ed SSTORE
0x5ee TIMESTAMP
0x5ef MISSING 0xad
0x5f0 SWAP8
0x5f1 ADD
0x5f2 MISSING 0xaa
0x5f3 SWAP5
0x5f4 PUSH8 0xddb2f0a152f4530e
0x5fd POP
0x5fe COINBASE
0x5ff STOP
0x600 MISSING 0x29
---
0x5d5: STOP 
0x5d6: LOG S0 S1 S2
0x5d7: V601 = 0x627a7a723058
0x5de: V602 = SHA3 0x627a7a723058 S3
0x5df: MISSING 0xd9
0x5e2: V603 = 0x5b9c26e63e364aa9b7
0x5ec: MISSING 0xc
0x5ed: S[S0] = S1
0x5ee: V604 = TIMESTAMP
0x5ef: MISSING 0xad
0x5f1: V605 = ADD S8 S1
0x5f2: MISSING 0xaa
0x5f4: V606 = 0xddb2f0a152f4530e
0x5fe: V607 = COINBASE
0x5ff: STOP 
0x600: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V602, 0x5b9c26e63e364aa9b7, S11, S6, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V604, V605, S2, S3, S4, S5, S6, S7, S0, V607, S5, S1, S2, S3, S4, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x471efe66
Entry block: 0x91
Exit block: 0x8f
Body: 0x8f, 0x91, 0x98, 0x9c, 0x22b, 0x242, 0x246, 0x284

Function 1:
Public function signature: 0x6ad1fe02
Entry block: 0xb8
Exit block: 0xcb
Body: 0xb8, 0xbf, 0xc3, 0xcb, 0x288

Function 2:
Public function signature: 0x89476069
Entry block: 0xe7
Exit block: 0x8f
Body: 0x8f, 0xe7, 0xee, 0xf2, 0x297, 0x2ae, 0x2b2, 0x31c, 0x320, 0x32d, 0x331, 0x383, 0x387, 0x394, 0x398, 0x3a9, 0x3ad, 0x3ae

Function 3:
Public function signature: 0xa6f2ae3a
Entry block: 0x108
Exit block: 0x8f
Body: 0x8c, 0x8d, 0x8f, 0x108, 0x10f, 0x113, 0x3b1, 0x3c4, 0x3c8, 0x3f9

Function 4:
Public function signature: 0xb622ab4a
Entry block: 0x11d
Exit block: 0x8f
Body: 0x8f, 0x11d, 0x124, 0x128, 0x3ad, 0x3ae, 0x400, 0x413, 0x417, 0x463

Function 5:
Public function signature: 0xb8f3b75d
Entry block: 0x154
Exit block: 0x8f
Body: 0x8f, 0x154, 0x15b, 0x15f, 0x3ad, 0x3ae, 0x46b, 0x482, 0x486, 0x497, 0x49b, 0x4cf

Function 6:
Public function signature: 0xca4b208b
Entry block: 0x175
Exit block: 0xcb
Body: 0xcb, 0x175, 0x17c, 0x180, 0x4d7

Function 7:
Public function signature: 0xe086e5ec
Entry block: 0x1a4
Exit block: 0x8f
Body: 0x8c, 0x8d, 0x8f, 0x1a4, 0x1ab, 0x1af, 0x4e6, 0x4fd, 0x501, 0x536

Function 8:
Public function signature: 0xfae4a213
Entry block: 0x1b9
Exit block: 0x8f
Body: 0x8f, 0x1b9, 0x1c0, 0x1c4, 0x284, 0x53d, 0x554, 0x558, 0x569, 0x56d, 0x5bd

Function 9:
Public function signature: 0xfc0c546a
Entry block: 0x1fc
Exit block: 0xcb
Body: 0xcb, 0x1fc, 0x203, 0x207, 0x5c6

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x8f
Body: 0x88, 0x8c, 0x8d, 0x8f

