Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x81]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2cf2c0af
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x81
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2cf2c0af
0x20: V14 = EQ V12 0x2cf2c0af
0x21: V15 = 0x81
0x24: JUMPI 0x81 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x99]
---
0x25 DUP1
0x26 PUSH4 0x2e1a7d4d
0x2b EQ
0x2c PUSH2 0x99
0x2f JUMPI
---
0x26: V16 = 0x2e1a7d4d
0x2b: V17 = EQ 0x2e1a7d4d V12
0x2c: V18 = 0x99
0x2f: JUMPI 0x99 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xb1]
---
0x30 DUP1
0x31 PUSH4 0x43d726d6
0x36 EQ
0x37 PUSH2 0xb1
0x3a JUMPI
---
0x31: V19 = 0x43d726d6
0x36: V20 = EQ 0x43d726d6 V12
0x37: V21 = 0xb1
0x3a: JUMPI 0xb1 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xc6]
---
0x3b DUP1
0x3c PUSH4 0x5c73dcea
0x41 EQ
0x42 PUSH2 0xc6
0x45 JUMPI
---
0x3c: V22 = 0x5c73dcea
0x41: V23 = EQ 0x5c73dcea V12
0x42: V24 = 0xc6
0x45: JUMPI 0xc6 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x127]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x127
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x127
0x50: JUMPI 0x127 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x158]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x158
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x158
0x5b: JUMPI 0x158 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x187]
---
0x5c DUP1
0x5d PUSH4 0x910c8a85
0x62 EQ
0x63 PUSH2 0x187
0x66 JUMPI
---
0x5d: V31 = 0x910c8a85
0x62: V32 = EQ 0x910c8a85 V12
0x63: V33 = 0x187
0x66: JUMPI 0x187 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1d4]
---
0x67 DUP1
0x68 PUSH4 0xd0e30db0
0x6d EQ
0x6e PUSH2 0x1d4
0x71 JUMPI
---
0x68: V34 = 0xd0e30db0
0x6d: V35 = EQ 0xd0e30db0 V12
0x6e: V36 = 0x1d4
0x71: JUMPI 0x1d4 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1de]
---
0x72 DUP1
0x73 PUSH4 0xf1b83630
0x78 EQ
0x79 PUSH2 0x1de
0x7c JUMPI
---
0x73: V37 = 0xf1b83630
0x78: V38 = EQ 0xf1b83630 V12
0x79: V39 = 0x1de
0x7c: JUMPI 0x1de V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x0, 0x72, 0x26a, 0x2be, 0x2eb, 0x693, 0x720]
Successors: [0x7e]
---
0x7d JUMPDEST
---
0x7d: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e
[0x7e:0x7e]
---
Predecessors: [0x7d]
Successors: [0x7f]
---
0x7e JUMPDEST
---
0x7e: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x7e]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81
[0x81:0x87]
---
Predecessors: [0xb]
Successors: [0x88, 0x8c]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 ISZERO
0x84 PUSH2 0x8c
0x87 JUMPI
---
0x81: JUMPDEST 
0x82: V40 = CALLVALUE
0x83: V41 = ISZERO V40
0x84: V42 = 0x8c
0x87: JUMPI 0x8c V41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x81]
Successors: []
---
0x88 PUSH1 0x0
0x8a DUP1
0x8b REVERT
---
0x88: V43 = 0x0
0x8b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x1f6]
---
0x8c JUMPDEST
0x8d PUSH2 0x7d
0x90 PUSH1 0x4
0x92 CALLDATALOAD
0x93 PUSH2 0x1f6
0x96 JUMP
---
0x8c: JUMPDEST 
0x8d: V44 = 0x7d
0x90: V45 = 0x4
0x92: V46 = CALLDATALOAD 0x4
0x93: V47 = 0x1f6
0x96: JUMP 0x1f6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V46]
Exit stack: [V12, 0x7d, V46]

================================

Block 0x97
[0x97:0x98]
---
Predecessors: []
Successors: []
---
0x97 JUMPDEST
0x98 STOP
---
0x97: JUMPDEST 
0x98: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x99
[0x99:0x9f]
---
Predecessors: [0x25]
Successors: [0xa0, 0xa4]
---
0x99 JUMPDEST
0x9a CALLVALUE
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x99: JUMPDEST 
0x9a: V48 = CALLVALUE
0x9b: V49 = ISZERO V48
0x9c: V50 = 0xa4
0x9f: JUMPI 0xa4 V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x99]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V51 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0x26e]
---
0xa4 JUMPDEST
0xa5 PUSH2 0x7d
0xa8 PUSH1 0x4
0xaa CALLDATALOAD
0xab PUSH2 0x26e
0xae JUMP
---
0xa4: JUMPDEST 
0xa5: V52 = 0x7d
0xa8: V53 = 0x4
0xaa: V54 = CALLDATALOAD 0x4
0xab: V55 = 0x26e
0xae: JUMP 0x26e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V54]
Exit stack: [V12, 0x7d, V54]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: []
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x30]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V56 = CALLVALUE
0xb3: V57 = ISZERO V56
0xb4: V58 = 0xbc
0xb7: JUMPI 0xbc V57
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V59 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb1]
Successors: [0x2c1]
---
0xbc JUMPDEST
0xbd PUSH2 0x7d
0xc0 PUSH2 0x2c1
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V60 = 0x7d
0xc0: V61 = 0x2c1
0xc3: JUMP 0x2c1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: []
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0x3b]
Successors: [0xcd, 0xd1]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V62 = CALLVALUE
0xc8: V63 = ISZERO V62
0xc9: V64 = 0xd1
0xcc: JUMPI 0xd1 V63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc6]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V65 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd1
[0xd1:0x112]
---
Predecessors: [0xc6]
Successors: [0x2ed]
---
0xd1 JUMPDEST
0xd2 PUSH2 0x113
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd PUSH1 0x4
0xdf CALLDATALOAD
0xe0 DUP2
0xe1 AND
0xe2 SWAP1
0xe3 PUSH1 0x24
0xe5 CALLDATALOAD
0xe6 SWAP1
0xe7 PUSH1 0x44
0xe9 CALLDATALOAD
0xea DUP2
0xeb AND
0xec SWAP1
0xed PUSH1 0x64
0xef CALLDATALOAD
0xf0 SWAP1
0xf1 PUSH1 0x84
0xf3 CALLDATALOAD
0xf4 SWAP1
0xf5 PUSH1 0xa4
0xf7 CALLDATALOAD
0xf8 SWAP1
0xf9 PUSH1 0xc4
0xfb CALLDATALOAD
0xfc AND
0xfd PUSH1 0xff
0xff PUSH1 0xe4
0x101 CALLDATALOAD
0x102 AND
0x103 PUSH2 0x104
0x106 CALLDATALOAD
0x107 PUSH2 0x124
0x10a CALLDATALOAD
0x10b PUSH2 0x144
0x10e CALLDATALOAD
0x10f PUSH2 0x2ed
0x112 JUMP
---
0xd1: JUMPDEST 
0xd2: V66 = 0x113
0xd5: V67 = 0x1
0xd7: V68 = 0xa0
0xd9: V69 = 0x2
0xdb: V70 = EXP 0x2 0xa0
0xdc: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd: V72 = 0x4
0xdf: V73 = CALLDATALOAD 0x4
0xe1: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0xe3: V75 = 0x24
0xe5: V76 = CALLDATALOAD 0x24
0xe7: V77 = 0x44
0xe9: V78 = CALLDATALOAD 0x44
0xeb: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0xed: V80 = 0x64
0xef: V81 = CALLDATALOAD 0x64
0xf1: V82 = 0x84
0xf3: V83 = CALLDATALOAD 0x84
0xf5: V84 = 0xa4
0xf7: V85 = CALLDATALOAD 0xa4
0xf9: V86 = 0xc4
0xfb: V87 = CALLDATALOAD 0xc4
0xfc: V88 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V89 = 0xff
0xff: V90 = 0xe4
0x101: V91 = CALLDATALOAD 0xe4
0x102: V92 = AND V91 0xff
0x103: V93 = 0x104
0x106: V94 = CALLDATALOAD 0x104
0x107: V95 = 0x124
0x10a: V96 = CALLDATALOAD 0x124
0x10b: V97 = 0x144
0x10e: V98 = CALLDATALOAD 0x144
0x10f: V99 = 0x2ed
0x112: JUMP 0x2ed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98]
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98]

================================

Block 0x113
[0x113:0x126]
---
Predecessors: [0x3c5]
Successors: []
---
0x113 JUMPDEST
0x114 PUSH1 0x40
0x116 MLOAD
0x117 SWAP1
0x118 ISZERO
0x119 ISZERO
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f PUSH1 0x40
0x121 MLOAD
0x122 DUP1
0x123 SWAP2
0x124 SUB
0x125 SWAP1
0x126 RETURN
---
0x113: JUMPDEST 
0x114: V100 = 0x40
0x116: V101 = M[0x40]
0x118: V102 = ISZERO V382
0x119: V103 = ISZERO V102
0x11b: M[V101] = V103
0x11c: V104 = 0x20
0x11e: V105 = ADD 0x20 V101
0x11f: V106 = 0x40
0x121: V107 = M[0x40]
0x124: V108 = SUB V105 V107
0x126: RETURN V107 V108
---
Entry stack: [V12, V382]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x127
[0x127:0x12d]
---
Predecessors: [0x46]
Successors: [0x12e, 0x132]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x127: JUMPDEST 
0x128: V109 = CALLVALUE
0x129: V110 = ISZERO V109
0x12a: V111 = 0x132
0x12d: JUMPI 0x132 V110
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x127]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V112 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x132
[0x132:0x145]
---
Predecessors: [0x127]
Successors: [0x3d5]
---
0x132 JUMPDEST
0x133 PUSH2 0x146
0x136 PUSH1 0x1
0x138 PUSH1 0xa0
0x13a PUSH1 0x2
0x13c EXP
0x13d SUB
0x13e PUSH1 0x4
0x140 CALLDATALOAD
0x141 AND
0x142 PUSH2 0x3d5
0x145 JUMP
---
0x132: JUMPDEST 
0x133: V113 = 0x146
0x136: V114 = 0x1
0x138: V115 = 0xa0
0x13a: V116 = 0x2
0x13c: V117 = EXP 0x2 0xa0
0x13d: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V119 = 0x4
0x140: V120 = CALLDATALOAD 0x4
0x141: V121 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x142: V122 = 0x3d5
0x145: JUMP 0x3d5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x146, V121]
Exit stack: [V12, 0x146, V121]

================================

Block 0x146
[0x146:0x157]
---
Predecessors: [0x456]
Successors: []
---
0x146 JUMPDEST
0x147 PUSH1 0x40
0x149 MLOAD
0x14a SWAP1
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x20
0x14f ADD
0x150 PUSH1 0x40
0x152 MLOAD
0x153 DUP1
0x154 SWAP2
0x155 SUB
0x156 SWAP1
0x157 RETURN
---
0x146: JUMPDEST 
0x147: V123 = 0x40
0x149: V124 = M[0x40]
0x14c: M[V124] = V439
0x14d: V125 = 0x20
0x14f: V126 = ADD 0x20 V124
0x150: V127 = 0x40
0x152: V128 = M[0x40]
0x155: V129 = SUB V126 V128
0x157: RETURN V128 V129
---
Entry stack: [V12, V439]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x158
[0x158:0x15e]
---
Predecessors: [0x51]
Successors: [0x15f, 0x163]
---
0x158 JUMPDEST
0x159 CALLVALUE
0x15a ISZERO
0x15b PUSH2 0x163
0x15e JUMPI
---
0x158: JUMPDEST 
0x159: V130 = CALLVALUE
0x15a: V131 = ISZERO V130
0x15b: V132 = 0x163
0x15e: JUMPI 0x163 V131
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15f
[0x15f:0x162]
---
Predecessors: [0x158]
Successors: []
---
0x15f PUSH1 0x0
0x161 DUP1
0x162 REVERT
---
0x15f: V133 = 0x0
0x162: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x163
[0x163:0x16a]
---
Predecessors: [0x158]
Successors: [0x45c]
---
0x163 JUMPDEST
0x164 PUSH2 0x16b
0x167 PUSH2 0x45c
0x16a JUMP
---
0x163: JUMPDEST 
0x164: V134 = 0x16b
0x167: V135 = 0x45c
0x16a: JUMP 0x45c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x16b]
Exit stack: [V12, 0x16b]

================================

Block 0x16b
[0x16b:0x186]
---
Predecessors: [0x45c]
Successors: []
---
0x16b JUMPDEST
0x16c PUSH1 0x40
0x16e MLOAD
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 SWAP1
0x178 SWAP2
0x179 AND
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e ADD
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 SWAP2
0x184 SUB
0x185 SWAP1
0x186 RETURN
---
0x16b: JUMPDEST 
0x16c: V136 = 0x40
0x16e: V137 = M[0x40]
0x16f: V138 = 0x1
0x171: V139 = 0xa0
0x173: V140 = 0x2
0x175: V141 = EXP 0x2 0xa0
0x176: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x179: V143 = AND V447 0xffffffffffffffffffffffffffffffffffffffff
0x17b: M[V137] = V143
0x17c: V144 = 0x20
0x17e: V145 = ADD 0x20 V137
0x17f: V146 = 0x40
0x181: V147 = M[0x40]
0x184: V148 = SUB V145 V147
0x186: RETURN V147 V148
---
Entry stack: [V12, 0x16b, V447]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x16b]

================================

Block 0x187
[0x187:0x18d]
---
Predecessors: [0x5c]
Successors: [0x18e, 0x192]
---
0x187 JUMPDEST
0x188 CALLVALUE
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x187: JUMPDEST 
0x188: V149 = CALLVALUE
0x189: V150 = ISZERO V149
0x18a: V151 = 0x192
0x18d: JUMPI 0x192 V150
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x187]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V152 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x192
[0x192:0x1d1]
---
Predecessors: [0x187]
Successors: [0x46b]
---
0x192 JUMPDEST
0x193 PUSH2 0x7d
0x196 PUSH1 0x4
0x198 CALLDATALOAD
0x199 PUSH1 0x24
0x19b CALLDATALOAD
0x19c PUSH1 0x1
0x19e PUSH1 0xa0
0x1a0 PUSH1 0x2
0x1a2 EXP
0x1a3 SUB
0x1a4 PUSH1 0x44
0x1a6 CALLDATALOAD
0x1a7 DUP2
0x1a8 AND
0x1a9 SWAP1
0x1aa PUSH1 0x64
0x1ac CALLDATALOAD
0x1ad DUP2
0x1ae AND
0x1af SWAP1
0x1b0 PUSH1 0x84
0x1b2 CALLDATALOAD
0x1b3 SWAP1
0x1b4 PUSH1 0xa4
0x1b6 CALLDATALOAD
0x1b7 SWAP1
0x1b8 PUSH1 0xc4
0x1ba CALLDATALOAD
0x1bb AND
0x1bc PUSH1 0xe4
0x1be CALLDATALOAD
0x1bf PUSH2 0x104
0x1c2 CALLDATALOAD
0x1c3 PUSH1 0xff
0x1c5 PUSH2 0x124
0x1c8 CALLDATALOAD
0x1c9 AND
0x1ca PUSH2 0x144
0x1cd CALLDATALOAD
0x1ce PUSH2 0x46b
0x1d1 JUMP
---
0x192: JUMPDEST 
0x193: V153 = 0x7d
0x196: V154 = 0x4
0x198: V155 = CALLDATALOAD 0x4
0x199: V156 = 0x24
0x19b: V157 = CALLDATALOAD 0x24
0x19c: V158 = 0x1
0x19e: V159 = 0xa0
0x1a0: V160 = 0x2
0x1a2: V161 = EXP 0x2 0xa0
0x1a3: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a4: V163 = 0x44
0x1a6: V164 = CALLDATALOAD 0x44
0x1a8: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1aa: V166 = 0x64
0x1ac: V167 = CALLDATALOAD 0x64
0x1ae: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x1b0: V169 = 0x84
0x1b2: V170 = CALLDATALOAD 0x84
0x1b4: V171 = 0xa4
0x1b6: V172 = CALLDATALOAD 0xa4
0x1b8: V173 = 0xc4
0x1ba: V174 = CALLDATALOAD 0xc4
0x1bb: V175 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V176 = 0xe4
0x1be: V177 = CALLDATALOAD 0xe4
0x1bf: V178 = 0x104
0x1c2: V179 = CALLDATALOAD 0x104
0x1c3: V180 = 0xff
0x1c5: V181 = 0x124
0x1c8: V182 = CALLDATALOAD 0x124
0x1c9: V183 = AND V182 0xff
0x1ca: V184 = 0x144
0x1cd: V185 = CALLDATALOAD 0x144
0x1ce: V186 = 0x46b
0x1d1: JUMP 0x46b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185]
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185]

================================

Block 0x1d2
[0x1d2:0x1d3]
---
Predecessors: []
Successors: []
---
0x1d2 JUMPDEST
0x1d3 STOP
---
0x1d2: JUMPDEST 
0x1d3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d4
[0x1d4:0x1db]
---
Predecessors: [0x67]
Successors: [0x2ea]
---
0x1d4 JUMPDEST
0x1d5 PUSH2 0x7d
0x1d8 PUSH2 0x2ea
0x1db JUMP
---
0x1d4: JUMPDEST 
0x1d5: V187 = 0x7d
0x1d8: V188 = 0x2ea
0x1db: JUMP 0x2ea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0x1dc
[0x1dc:0x1dd]
---
Predecessors: []
Successors: []
---
0x1dc JUMPDEST
0x1dd STOP
---
0x1dc: JUMPDEST 
0x1dd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1de
[0x1de:0x1e4]
---
Predecessors: [0x72]
Successors: [0x1e5, 0x1e9]
---
0x1de JUMPDEST
0x1df CALLVALUE
0x1e0 ISZERO
0x1e1 PUSH2 0x1e9
0x1e4 JUMPI
---
0x1de: JUMPDEST 
0x1df: V189 = CALLVALUE
0x1e0: V190 = ISZERO V189
0x1e1: V191 = 0x1e9
0x1e4: JUMPI 0x1e9 V190
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e5
[0x1e5:0x1e8]
---
Predecessors: [0x1de]
Successors: []
---
0x1e5 PUSH1 0x0
0x1e7 DUP1
0x1e8 REVERT
---
0x1e5: V192 = 0x0
0x1e8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e9
[0x1e9:0x1f3]
---
Predecessors: [0x1de]
Successors: [0x6a4]
---
0x1e9 JUMPDEST
0x1ea PUSH2 0x7d
0x1ed PUSH1 0x4
0x1ef CALLDATALOAD
0x1f0 PUSH2 0x6a4
0x1f3 JUMP
---
0x1e9: JUMPDEST 
0x1ea: V193 = 0x7d
0x1ed: V194 = 0x4
0x1ef: V195 = CALLDATALOAD 0x4
0x1f0: V196 = 0x6a4
0x1f3: JUMP 0x6a4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V195]
Exit stack: [V12, 0x7d, V195]

================================

Block 0x1f4
[0x1f4:0x1f5]
---
Predecessors: []
Successors: []
---
0x1f4 JUMPDEST
0x1f5 STOP
---
0x1f4: JUMPDEST 
0x1f5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f6
[0x1f6:0x20d]
---
Predecessors: [0x8c]
Successors: [0x20e, 0x212]
---
0x1f6 JUMPDEST
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa SLOAD
0x1fb CALLER
0x1fc PUSH1 0x1
0x1fe PUSH1 0xa0
0x200 PUSH1 0x2
0x202 EXP
0x203 SUB
0x204 SWAP1
0x205 DUP2
0x206 AND
0x207 SWAP2
0x208 AND
0x209 EQ
0x20a PUSH2 0x212
0x20d JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V197 = 0x0
0x1fa: V198 = S[0x0]
0x1fb: V199 = CALLER
0x1fc: V200 = 0x1
0x1fe: V201 = 0xa0
0x200: V202 = 0x2
0x202: V203 = EXP 0x2 0xa0
0x203: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x206: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x208: V206 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0x209: V207 = EQ V206 V205
0x20a: V208 = 0x212
0x20d: JUMPI 0x212 V207
---
Entry stack: [V12, 0x7d, V46]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V46, 0x0]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x1f6]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V209 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, 0x0]

================================

Block 0x212
[0x212:0x24e]
---
Predecessors: [0x1f6]
Successors: [0x24f, 0x253]
---
0x212 JUMPDEST
0x213 POP
0x214 PUSH1 0x1
0x216 SLOAD
0x217 PUSH1 0x1
0x219 PUSH1 0xa0
0x21b PUSH1 0x2
0x21d EXP
0x21e SUB
0x21f AND
0x220 DUP1
0x221 PUSH4 0xd0e30db0
0x226 DUP4
0x227 PUSH1 0x40
0x229 MLOAD
0x22a DUP3
0x22b PUSH4 0xffffffff
0x230 AND
0x231 PUSH1 0xe0
0x233 PUSH1 0x2
0x235 EXP
0x236 MUL
0x237 DUP2
0x238 MSTORE
0x239 PUSH1 0x4
0x23b ADD
0x23c PUSH1 0x0
0x23e PUSH1 0x40
0x240 MLOAD
0x241 DUP1
0x242 DUP4
0x243 SUB
0x244 DUP2
0x245 DUP6
0x246 DUP9
0x247 DUP1
0x248 EXTCODESIZE
0x249 ISZERO
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x212: JUMPDEST 
0x214: V210 = 0x1
0x216: V211 = S[0x1]
0x217: V212 = 0x1
0x219: V213 = 0xa0
0x21b: V214 = 0x2
0x21d: V215 = EXP 0x2 0xa0
0x21e: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21f: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x221: V218 = 0xd0e30db0
0x227: V219 = 0x40
0x229: V220 = M[0x40]
0x22b: V221 = 0xffffffff
0x230: V222 = AND 0xffffffff 0xd0e30db0
0x231: V223 = 0xe0
0x233: V224 = 0x2
0x235: V225 = EXP 0x2 0xe0
0x236: V226 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x238: M[V220] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x239: V227 = 0x4
0x23b: V228 = ADD 0x4 V220
0x23c: V229 = 0x0
0x23e: V230 = 0x40
0x240: V231 = M[0x40]
0x243: V232 = SUB V228 V231
0x248: V233 = EXTCODESIZE V217
0x249: V234 = ISZERO V233
0x24a: V235 = ISZERO V234
0x24b: V236 = 0x253
0x24e: JUMPI 0x253 V235
---
Entry stack: [V12, 0x7d, V46, 0x0]
Stack pops: 2
Stack additions: [S1, V217, V217, 0xd0e30db0, S1, V228, 0x0, V231, V232, V231, S1, V217]
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x212]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V237 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]

================================

Block 0x253
[0x253:0x25f]
---
Predecessors: [0x212]
Successors: [0x260, 0x264]
---
0x253 JUMPDEST
0x254 PUSH2 0x25ee
0x257 GAS
0x258 SUB
0x259 CALL
0x25a ISZERO
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x253: JUMPDEST 
0x254: V238 = 0x25ee
0x257: V239 = GAS
0x258: V240 = SUB V239 0x25ee
0x259: V241 = CALL V240 V217 V46 V231 V232 V231 0x0
0x25a: V242 = ISZERO V241
0x25b: V243 = ISZERO V242
0x25c: V244 = 0x264
0x25f: JUMPI 0x264 V243
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x253]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V245 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]

================================

Block 0x264
[0x264:0x268]
---
Predecessors: [0x253]
Successors: [0x269]
---
0x264 JUMPDEST
0x265 POP
0x266 POP
0x267 POP
0x268 POP
---
0x264: JUMPDEST 
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217]

================================

Block 0x269
[0x269:0x269]
---
Predecessors: [0x264]
Successors: [0x26a]
---
0x269 JUMPDEST
---
0x269: JUMPDEST 
---
Entry stack: [V12, 0x7d, V46, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217]

================================

Block 0x26a
[0x26a:0x26d]
---
Predecessors: [0x269]
Successors: [0x7d]
---
0x26a JUMPDEST
0x26b POP
0x26c POP
0x26d JUMP
---
0x26a: JUMPDEST 
0x26d: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V46, V217]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x26e
[0x26e:0x284]
---
Predecessors: [0xa4]
Successors: [0x285, 0x289]
---
0x26e JUMPDEST
0x26f PUSH1 0x0
0x271 SLOAD
0x272 CALLER
0x273 PUSH1 0x1
0x275 PUSH1 0xa0
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b SWAP1
0x27c DUP2
0x27d AND
0x27e SWAP2
0x27f AND
0x280 EQ
0x281 PUSH2 0x289
0x284 JUMPI
---
0x26e: JUMPDEST 
0x26f: V246 = 0x0
0x271: V247 = S[0x0]
0x272: V248 = CALLER
0x273: V249 = 0x1
0x275: V250 = 0xa0
0x277: V251 = 0x2
0x279: V252 = EXP 0x2 0xa0
0x27a: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27d: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x27f: V255 = AND V247 0xffffffffffffffffffffffffffffffffffffffff
0x280: V256 = EQ V255 V254
0x281: V257 = 0x289
0x284: JUMPI 0x289 V256
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x26e]
Successors: []
---
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
---
0x285: V258 = 0x0
0x288: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x289
[0x289:0x2b7]
---
Predecessors: [0x26e]
Successors: [0x2b8, 0x2bc]
---
0x289 JUMPDEST
0x28a PUSH1 0x0
0x28c SLOAD
0x28d PUSH1 0x1
0x28f PUSH1 0xa0
0x291 PUSH1 0x2
0x293 EXP
0x294 SUB
0x295 AND
0x296 DUP2
0x297 ISZERO
0x298 PUSH2 0x8fc
0x29b MUL
0x29c DUP3
0x29d PUSH1 0x40
0x29f MLOAD
0x2a0 PUSH1 0x0
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 DUP1
0x2a6 DUP4
0x2a7 SUB
0x2a8 DUP2
0x2a9 DUP6
0x2aa DUP9
0x2ab DUP9
0x2ac CALL
0x2ad SWAP4
0x2ae POP
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 ISZERO
0x2b3 ISZERO
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x289: JUMPDEST 
0x28a: V259 = 0x0
0x28c: V260 = S[0x0]
0x28d: V261 = 0x1
0x28f: V262 = 0xa0
0x291: V263 = 0x2
0x293: V264 = EXP 0x2 0xa0
0x294: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x295: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x297: V267 = ISZERO V54
0x298: V268 = 0x8fc
0x29b: V269 = MUL 0x8fc V267
0x29d: V270 = 0x40
0x29f: V271 = M[0x40]
0x2a0: V272 = 0x0
0x2a2: V273 = 0x40
0x2a4: V274 = M[0x40]
0x2a7: V275 = SUB V271 V274
0x2ac: V276 = CALL V269 V266 V54 V274 V275 V274 0x0
0x2b2: V277 = ISZERO V276
0x2b3: V278 = ISZERO V277
0x2b4: V279 = 0x2bc
0x2b7: JUMPI 0x2bc V278
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x289]
Successors: []
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
---
0x2b8: V280 = 0x0
0x2bb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2bc
[0x2bc:0x2bc]
---
Predecessors: [0x289]
Successors: [0x2bd]
---
0x2bc JUMPDEST
---
0x2bc: JUMPDEST 
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2bd
[0x2bd:0x2bd]
---
Predecessors: [0x2bc]
Successors: [0x2be]
---
0x2bd JUMPDEST
---
0x2bd: JUMPDEST 
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2be
[0x2be:0x2c0]
---
Predecessors: [0x2bd]
Successors: [0x7d]
---
0x2be JUMPDEST
0x2bf POP
0x2c0 JUMP
---
0x2be: JUMPDEST 
0x2c0: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c1
[0x2c1:0x2d7]
---
Predecessors: [0xbc]
Successors: [0x2d8, 0x2dc]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x0
0x2c4 SLOAD
0x2c5 CALLER
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce SWAP1
0x2cf DUP2
0x2d0 AND
0x2d1 SWAP2
0x2d2 AND
0x2d3 EQ
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V281 = 0x0
0x2c4: V282 = S[0x0]
0x2c5: V283 = CALLER
0x2c6: V284 = 0x1
0x2c8: V285 = 0xa0
0x2ca: V286 = 0x2
0x2cc: V287 = EXP 0x2 0xa0
0x2cd: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x2d2: V290 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V291 = EQ V290 V289
0x2d4: V292 = 0x2dc
0x2d7: JUMPI 0x2dc V291
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2c1]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V293 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2dc
[0x2dc:0x2e9]
---
Predecessors: [0x2c1]
Successors: []
---
0x2dc JUMPDEST
0x2dd PUSH1 0x0
0x2df SLOAD
0x2e0 PUSH1 0x1
0x2e2 PUSH1 0xa0
0x2e4 PUSH1 0x2
0x2e6 EXP
0x2e7 SUB
0x2e8 AND
0x2e9 SELFDESTRUCT
---
0x2dc: JUMPDEST 
0x2dd: V294 = 0x0
0x2df: V295 = S[0x0]
0x2e0: V296 = 0x1
0x2e2: V297 = 0xa0
0x2e4: V298 = 0x2
0x2e6: V299 = EXP 0x2 0xa0
0x2e7: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e8: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x2e9: SELFDESTRUCT V301
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2ea
[0x2ea:0x2ea]
---
Predecessors: [0x1d4]
Successors: [0x2eb]
---
0x2ea JUMPDEST
---
0x2ea: JUMPDEST 
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2eb
[0x2eb:0x2ec]
---
Predecessors: [0x2ea]
Successors: [0x7d]
---
0x2eb JUMPDEST
0x2ec JUMP
---
0x2eb: JUMPDEST 
0x2ec: JUMP 0x7d
---
Entry stack: [V12, 0x7d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ed
[0x2ed:0x3a3]
---
Predecessors: [0xd1]
Successors: [0x3a4, 0x3a8]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x1
0x2f0 SLOAD
0x2f1 PUSH1 0x0
0x2f3 SWAP1
0x2f4 PUSH1 0x1
0x2f6 PUSH1 0xa0
0x2f8 PUSH1 0x2
0x2fa EXP
0x2fb SUB
0x2fc AND
0x2fd DUP1
0x2fe PUSH4 0x6c86888b
0x303 DUP15
0x304 DUP15
0x305 DUP15
0x306 DUP15
0x307 DUP15
0x308 DUP15
0x309 DUP15
0x30a DUP15
0x30b DUP15
0x30c DUP15
0x30d DUP15
0x30e ADDRESS
0x30f DUP16
0x310 PUSH1 0x40
0x312 MLOAD
0x313 PUSH1 0x20
0x315 ADD
0x316 MSTORE
0x317 PUSH1 0x40
0x319 MLOAD
0x31a PUSH1 0xe0
0x31c PUSH1 0x2
0x31e EXP
0x31f PUSH4 0xffffffff
0x324 DUP16
0x325 AND
0x326 MUL
0x327 DUP2
0x328 MSTORE
0x329 PUSH1 0x1
0x32b PUSH1 0xa0
0x32d PUSH1 0x2
0x32f EXP
0x330 SUB
0x331 SWAP13
0x332 DUP14
0x333 AND
0x334 PUSH1 0x4
0x336 DUP3
0x337 ADD
0x338 MSTORE
0x339 PUSH1 0x24
0x33b DUP2
0x33c ADD
0x33d SWAP12
0x33e SWAP1
0x33f SWAP12
0x340 MSTORE
0x341 SWAP9
0x342 DUP12
0x343 AND
0x344 PUSH1 0x44
0x346 DUP12
0x347 ADD
0x348 MSTORE
0x349 PUSH1 0x64
0x34b DUP11
0x34c ADD
0x34d SWAP8
0x34e SWAP1
0x34f SWAP8
0x350 MSTORE
0x351 PUSH1 0x84
0x353 DUP10
0x354 ADD
0x355 SWAP6
0x356 SWAP1
0x357 SWAP6
0x358 MSTORE
0x359 PUSH1 0xa4
0x35b DUP9
0x35c ADD
0x35d SWAP4
0x35e SWAP1
0x35f SWAP4
0x360 MSTORE
0x361 SWAP1
0x362 DUP8
0x363 AND
0x364 PUSH1 0xc4
0x366 DUP8
0x367 ADD
0x368 MSTORE
0x369 PUSH1 0xff
0x36b AND
0x36c PUSH1 0xe4
0x36e DUP7
0x36f ADD
0x370 MSTORE
0x371 PUSH2 0x104
0x374 DUP6
0x375 ADD
0x376 MSTORE
0x377 PUSH2 0x124
0x37a DUP5
0x37b ADD
0x37c MSTORE
0x37d PUSH2 0x144
0x380 DUP4
0x381 ADD
0x382 MSTORE
0x383 SWAP1
0x384 SWAP2
0x385 AND
0x386 PUSH2 0x164
0x389 DUP3
0x38a ADD
0x38b MSTORE
0x38c PUSH2 0x184
0x38f ADD
0x390 PUSH1 0x20
0x392 PUSH1 0x40
0x394 MLOAD
0x395 DUP1
0x396 DUP4
0x397 SUB
0x398 DUP2
0x399 PUSH1 0x0
0x39b DUP8
0x39c DUP1
0x39d EXTCODESIZE
0x39e ISZERO
0x39f ISZERO
0x3a0 PUSH2 0x3a8
0x3a3 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V302 = 0x1
0x2f0: V303 = S[0x1]
0x2f1: V304 = 0x0
0x2f4: V305 = 0x1
0x2f6: V306 = 0xa0
0x2f8: V307 = 0x2
0x2fa: V308 = EXP 0x2 0xa0
0x2fb: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fc: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x2fe: V311 = 0x6c86888b
0x30e: V312 = ADDRESS
0x310: V313 = 0x40
0x312: V314 = M[0x40]
0x313: V315 = 0x20
0x315: V316 = ADD 0x20 V314
0x316: M[V316] = 0x0
0x317: V317 = 0x40
0x319: V318 = M[0x40]
0x31a: V319 = 0xe0
0x31c: V320 = 0x2
0x31e: V321 = EXP 0x2 0xe0
0x31f: V322 = 0xffffffff
0x325: V323 = AND 0x6c86888b 0xffffffff
0x326: V324 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x328: M[V318] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x329: V325 = 0x1
0x32b: V326 = 0xa0
0x32d: V327 = 0x2
0x32f: V328 = EXP 0x2 0xa0
0x330: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x333: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x334: V331 = 0x4
0x337: V332 = ADD V318 0x4
0x338: M[V332] = V330
0x339: V333 = 0x24
0x33c: V334 = ADD V318 0x24
0x340: M[V334] = V76
0x343: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x344: V336 = 0x44
0x347: V337 = ADD V318 0x44
0x348: M[V337] = V335
0x349: V338 = 0x64
0x34c: V339 = ADD V318 0x64
0x350: M[V339] = V81
0x351: V340 = 0x84
0x354: V341 = ADD V318 0x84
0x358: M[V341] = V83
0x359: V342 = 0xa4
0x35c: V343 = ADD V318 0xa4
0x360: M[V343] = V85
0x363: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x364: V345 = 0xc4
0x367: V346 = ADD V318 0xc4
0x368: M[V346] = V344
0x369: V347 = 0xff
0x36b: V348 = AND 0xff V92
0x36c: V349 = 0xe4
0x36f: V350 = ADD V318 0xe4
0x370: M[V350] = V348
0x371: V351 = 0x104
0x375: V352 = ADD V318 0x104
0x376: M[V352] = V94
0x377: V353 = 0x124
0x37b: V354 = ADD V318 0x124
0x37c: M[V354] = V96
0x37d: V355 = 0x144
0x381: V356 = ADD V318 0x144
0x382: M[V356] = V98
0x385: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x386: V358 = 0x164
0x38a: V359 = ADD V318 0x164
0x38b: M[V359] = V357
0x38c: V360 = 0x184
0x38f: V361 = ADD 0x184 V318
0x390: V362 = 0x20
0x392: V363 = 0x40
0x394: V364 = M[0x40]
0x397: V365 = SUB V361 V364
0x399: V366 = 0x0
0x39d: V367 = EXTCODESIZE V310
0x39e: V368 = ISZERO V367
0x39f: V369 = ISZERO V368
0x3a0: V370 = 0x3a8
0x3a3: JUMPI 0x3a8 V369
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]

================================

Block 0x3a4
[0x3a4:0x3a7]
---
Predecessors: [0x2ed]
Successors: []
---
0x3a4 PUSH1 0x0
0x3a6 DUP1
0x3a7 REVERT
---
0x3a4: V371 = 0x0
0x3a7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]

================================

Block 0x3a8
[0x3a8:0x3b4]
---
Predecessors: [0x2ed]
Successors: [0x3b5, 0x3b9]
---
0x3a8 JUMPDEST
0x3a9 PUSH2 0x2c6
0x3ac GAS
0x3ad SUB
0x3ae CALL
0x3af ISZERO
0x3b0 ISZERO
0x3b1 PUSH2 0x3b9
0x3b4 JUMPI
---
0x3a8: JUMPDEST 
0x3a9: V372 = 0x2c6
0x3ac: V373 = GAS
0x3ad: V374 = SUB V373 0x2c6
0x3ae: V375 = CALL V374 V310 0x0 V364 V365 V364 0x20
0x3af: V376 = ISZERO V375
0x3b0: V377 = ISZERO V376
0x3b1: V378 = 0x3b9
0x3b4: JUMPI 0x3b9 V377
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]

================================

Block 0x3b5
[0x3b5:0x3b8]
---
Predecessors: [0x3a8]
Successors: []
---
0x3b5 PUSH1 0x0
0x3b7 DUP1
0x3b8 REVERT
---
0x3b5: V379 = 0x0
0x3b8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]

================================

Block 0x3b9
[0x3b9:0x3c4]
---
Predecessors: [0x3a8]
Successors: [0x3c5]
---
0x3b9 JUMPDEST
0x3ba POP
0x3bb POP
0x3bc POP
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 DUP1
0x3c1 MLOAD
0x3c2 SWAP3
0x3c3 POP
0x3c4 POP
---
0x3b9: JUMPDEST 
0x3bd: V380 = 0x40
0x3bf: V381 = M[0x40]
0x3c1: V382 = M[V381]
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]
Stack pops: 5
Stack additions: [V382, S3]
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, V382, V310]

================================

Block 0x3c5
[0x3c5:0x3d4]
---
Predecessors: [0x3b9]
Successors: [0x113]
---
0x3c5 JUMPDEST
0x3c6 POP
0x3c7 SWAP12
0x3c8 SWAP11
0x3c9 POP
0x3ca POP
0x3cb POP
0x3cc POP
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 POP
0x3d4 JUMP
---
0x3c5: JUMPDEST 
0x3d4: JUMP 0x113
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, V382, V310]
Stack pops: 14
Stack additions: [S1]
Exit stack: [V12, V382]

================================

Block 0x3d5
[0x3d5:0x434]
---
Predecessors: [0x132]
Successors: [0x435, 0x439]
---
0x3d5 JUMPDEST
0x3d6 PUSH1 0x1
0x3d8 SLOAD
0x3d9 PUSH1 0x0
0x3db SWAP1
0x3dc PUSH1 0x1
0x3de PUSH1 0xa0
0x3e0 PUSH1 0x2
0x3e2 EXP
0x3e3 SUB
0x3e4 AND
0x3e5 DUP1
0x3e6 PUSH4 0xf7888aec
0x3eb DUP5
0x3ec ADDRESS
0x3ed DUP6
0x3ee PUSH1 0x40
0x3f0 MLOAD
0x3f1 PUSH1 0x20
0x3f3 ADD
0x3f4 MSTORE
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 PUSH1 0xe0
0x3fa PUSH1 0x2
0x3fc EXP
0x3fd PUSH4 0xffffffff
0x402 DUP6
0x403 AND
0x404 MUL
0x405 DUP2
0x406 MSTORE
0x407 PUSH1 0x1
0x409 PUSH1 0xa0
0x40b PUSH1 0x2
0x40d EXP
0x40e SUB
0x40f SWAP3
0x410 DUP4
0x411 AND
0x412 PUSH1 0x4
0x414 DUP3
0x415 ADD
0x416 MSTORE
0x417 SWAP2
0x418 AND
0x419 PUSH1 0x24
0x41b DUP3
0x41c ADD
0x41d MSTORE
0x41e PUSH1 0x44
0x420 ADD
0x421 PUSH1 0x20
0x423 PUSH1 0x40
0x425 MLOAD
0x426 DUP1
0x427 DUP4
0x428 SUB
0x429 DUP2
0x42a PUSH1 0x0
0x42c DUP8
0x42d DUP1
0x42e EXTCODESIZE
0x42f ISZERO
0x430 ISZERO
0x431 PUSH2 0x439
0x434 JUMPI
---
0x3d5: JUMPDEST 
0x3d6: V383 = 0x1
0x3d8: V384 = S[0x1]
0x3d9: V385 = 0x0
0x3dc: V386 = 0x1
0x3de: V387 = 0xa0
0x3e0: V388 = 0x2
0x3e2: V389 = EXP 0x2 0xa0
0x3e3: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e4: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x3e6: V392 = 0xf7888aec
0x3ec: V393 = ADDRESS
0x3ee: V394 = 0x40
0x3f0: V395 = M[0x40]
0x3f1: V396 = 0x20
0x3f3: V397 = ADD 0x20 V395
0x3f4: M[V397] = 0x0
0x3f5: V398 = 0x40
0x3f7: V399 = M[0x40]
0x3f8: V400 = 0xe0
0x3fa: V401 = 0x2
0x3fc: V402 = EXP 0x2 0xe0
0x3fd: V403 = 0xffffffff
0x403: V404 = AND 0xf7888aec 0xffffffff
0x404: V405 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x406: M[V399] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x407: V406 = 0x1
0x409: V407 = 0xa0
0x40b: V408 = 0x2
0x40d: V409 = EXP 0x2 0xa0
0x40e: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x411: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x412: V412 = 0x4
0x415: V413 = ADD V399 0x4
0x416: M[V413] = V411
0x418: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x419: V415 = 0x24
0x41c: V416 = ADD V399 0x24
0x41d: M[V416] = V414
0x41e: V417 = 0x44
0x420: V418 = ADD 0x44 V399
0x421: V419 = 0x20
0x423: V420 = 0x40
0x425: V421 = M[0x40]
0x428: V422 = SUB V418 V421
0x42a: V423 = 0x0
0x42e: V424 = EXTCODESIZE V391
0x42f: V425 = ISZERO V424
0x430: V426 = ISZERO V425
0x431: V427 = 0x439
0x434: JUMPI 0x439 V426
---
Entry stack: [V12, 0x146, V121]
Stack pops: 1
Stack additions: [S0, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]

================================

Block 0x435
[0x435:0x438]
---
Predecessors: [0x3d5]
Successors: []
---
0x435 PUSH1 0x0
0x437 DUP1
0x438 REVERT
---
0x435: V428 = 0x0
0x438: REVERT 0x0 0x0
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]

================================

Block 0x439
[0x439:0x445]
---
Predecessors: [0x3d5]
Successors: [0x446, 0x44a]
---
0x439 JUMPDEST
0x43a PUSH2 0x2c6
0x43d GAS
0x43e SUB
0x43f CALL
0x440 ISZERO
0x441 ISZERO
0x442 PUSH2 0x44a
0x445 JUMPI
---
0x439: JUMPDEST 
0x43a: V429 = 0x2c6
0x43d: V430 = GAS
0x43e: V431 = SUB V430 0x2c6
0x43f: V432 = CALL V431 V391 0x0 V421 V422 V421 0x20
0x440: V433 = ISZERO V432
0x441: V434 = ISZERO V433
0x442: V435 = 0x44a
0x445: JUMPI 0x44a V434
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x439]
Successors: []
---
0x446 PUSH1 0x0
0x448 DUP1
0x449 REVERT
---
0x446: V436 = 0x0
0x449: REVERT 0x0 0x0
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]

================================

Block 0x44a
[0x44a:0x455]
---
Predecessors: [0x439]
Successors: [0x456]
---
0x44a JUMPDEST
0x44b POP
0x44c POP
0x44d POP
0x44e PUSH1 0x40
0x450 MLOAD
0x451 DUP1
0x452 MLOAD
0x453 SWAP3
0x454 POP
0x455 POP
---
0x44a: JUMPDEST 
0x44e: V437 = 0x40
0x450: V438 = M[0x40]
0x452: V439 = M[V438]
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]
Stack pops: 5
Stack additions: [V439, S3]
Exit stack: [V12, 0x146, V121, V439, V391]

================================

Block 0x456
[0x456:0x45b]
---
Predecessors: [0x44a]
Successors: [0x146]
---
0x456 JUMPDEST
0x457 POP
0x458 SWAP2
0x459 SWAP1
0x45a POP
0x45b JUMP
---
0x456: JUMPDEST 
0x45b: JUMP 0x146
---
Entry stack: [V12, 0x146, V121, V439, V391]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V439]

================================

Block 0x45c
[0x45c:0x46a]
---
Predecessors: [0x163]
Successors: [0x16b]
---
0x45c JUMPDEST
0x45d PUSH1 0x0
0x45f SLOAD
0x460 PUSH1 0x1
0x462 PUSH1 0xa0
0x464 PUSH1 0x2
0x466 EXP
0x467 SUB
0x468 AND
0x469 DUP2
0x46a JUMP
---
0x45c: JUMPDEST 
0x45d: V440 = 0x0
0x45f: V441 = S[0x0]
0x460: V442 = 0x1
0x462: V443 = 0xa0
0x464: V444 = 0x2
0x466: V445 = EXP 0x2 0xa0
0x467: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x468: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x46a: JUMP 0x16b
---
Entry stack: [V12, 0x16b]
Stack pops: 1
Stack additions: [S0, V447]
Exit stack: [V12, 0x16b, V447]

================================

Block 0x46b
[0x46b:0x482]
---
Predecessors: [0x192]
Successors: [0x483, 0x487]
---
0x46b JUMPDEST
0x46c PUSH1 0x0
0x46e DUP1
0x46f SLOAD
0x470 CALLER
0x471 PUSH1 0x1
0x473 PUSH1 0xa0
0x475 PUSH1 0x2
0x477 EXP
0x478 SUB
0x479 SWAP1
0x47a DUP2
0x47b AND
0x47c SWAP2
0x47d AND
0x47e EQ
0x47f PUSH2 0x487
0x482 JUMPI
---
0x46b: JUMPDEST 
0x46c: V448 = 0x0
0x46f: V449 = S[0x0]
0x470: V450 = CALLER
0x471: V451 = 0x1
0x473: V452 = 0xa0
0x475: V453 = 0x2
0x477: V454 = EXP 0x2 0xa0
0x478: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47b: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x47d: V457 = AND V449 0xffffffffffffffffffffffffffffffffffffffff
0x47e: V458 = EQ V457 V456
0x47f: V459 = 0x487
0x482: JUMPI 0x487 V458
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, 0x0]

================================

Block 0x483
[0x483:0x486]
---
Predecessors: [0x46b]
Successors: []
---
0x483 PUSH1 0x0
0x485 DUP1
0x486 REVERT
---
0x483: V460 = 0x0
0x486: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, 0x0]

================================

Block 0x487
[0x487:0x53c]
---
Predecessors: [0x46b]
Successors: [0x53d, 0x541]
---
0x487 JUMPDEST
0x488 POP
0x489 PUSH1 0x1
0x48b SLOAD
0x48c PUSH1 0x1
0x48e PUSH1 0xa0
0x490 PUSH1 0x2
0x492 EXP
0x493 SUB
0x494 AND
0x495 DUP1
0x496 PUSH4 0x6c86888b
0x49b DUP12
0x49c DUP15
0x49d DUP13
0x49e DUP16
0x49f DUP13
0x4a0 DUP15
0x4a1 DUP14
0x4a2 DUP12
0x4a3 DUP14
0x4a4 DUP16
0x4a5 DUP14
0x4a6 ADDRESS
0x4a7 PUSH1 0x0
0x4a9 PUSH1 0x40
0x4ab MLOAD
0x4ac PUSH1 0x20
0x4ae ADD
0x4af MSTORE
0x4b0 PUSH1 0x40
0x4b2 MLOAD
0x4b3 PUSH1 0xe0
0x4b5 PUSH1 0x2
0x4b7 EXP
0x4b8 PUSH4 0xffffffff
0x4bd DUP16
0x4be AND
0x4bf MUL
0x4c0 DUP2
0x4c1 MSTORE
0x4c2 PUSH1 0x1
0x4c4 PUSH1 0xa0
0x4c6 PUSH1 0x2
0x4c8 EXP
0x4c9 SUB
0x4ca SWAP13
0x4cb DUP14
0x4cc AND
0x4cd PUSH1 0x4
0x4cf DUP3
0x4d0 ADD
0x4d1 MSTORE
0x4d2 PUSH1 0x24
0x4d4 DUP2
0x4d5 ADD
0x4d6 SWAP12
0x4d7 SWAP1
0x4d8 SWAP12
0x4d9 MSTORE
0x4da SWAP9
0x4db DUP12
0x4dc AND
0x4dd PUSH1 0x44
0x4df DUP12
0x4e0 ADD
0x4e1 MSTORE
0x4e2 PUSH1 0x64
0x4e4 DUP11
0x4e5 ADD
0x4e6 SWAP8
0x4e7 SWAP1
0x4e8 SWAP8
0x4e9 MSTORE
0x4ea PUSH1 0x84
0x4ec DUP10
0x4ed ADD
0x4ee SWAP6
0x4ef SWAP1
0x4f0 SWAP6
0x4f1 MSTORE
0x4f2 PUSH1 0xa4
0x4f4 DUP9
0x4f5 ADD
0x4f6 SWAP4
0x4f7 SWAP1
0x4f8 SWAP4
0x4f9 MSTORE
0x4fa SWAP1
0x4fb DUP8
0x4fc AND
0x4fd PUSH1 0xc4
0x4ff DUP8
0x500 ADD
0x501 MSTORE
0x502 PUSH1 0xff
0x504 AND
0x505 PUSH1 0xe4
0x507 DUP7
0x508 ADD
0x509 MSTORE
0x50a PUSH2 0x104
0x50d DUP6
0x50e ADD
0x50f MSTORE
0x510 PUSH2 0x124
0x513 DUP5
0x514 ADD
0x515 MSTORE
0x516 PUSH2 0x144
0x519 DUP4
0x51a ADD
0x51b MSTORE
0x51c SWAP1
0x51d SWAP2
0x51e AND
0x51f PUSH2 0x164
0x522 DUP3
0x523 ADD
0x524 MSTORE
0x525 PUSH2 0x184
0x528 ADD
0x529 PUSH1 0x20
0x52b PUSH1 0x40
0x52d MLOAD
0x52e DUP1
0x52f DUP4
0x530 SUB
0x531 DUP2
0x532 PUSH1 0x0
0x534 DUP8
0x535 DUP1
0x536 EXTCODESIZE
0x537 ISZERO
0x538 ISZERO
0x539 PUSH2 0x541
0x53c JUMPI
---
0x487: JUMPDEST 
0x489: V461 = 0x1
0x48b: V462 = S[0x1]
0x48c: V463 = 0x1
0x48e: V464 = 0xa0
0x490: V465 = 0x2
0x492: V466 = EXP 0x2 0xa0
0x493: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x494: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x496: V469 = 0x6c86888b
0x4a6: V470 = ADDRESS
0x4a7: V471 = 0x0
0x4a9: V472 = 0x40
0x4ab: V473 = M[0x40]
0x4ac: V474 = 0x20
0x4ae: V475 = ADD 0x20 V473
0x4af: M[V475] = 0x0
0x4b0: V476 = 0x40
0x4b2: V477 = M[0x40]
0x4b3: V478 = 0xe0
0x4b5: V479 = 0x2
0x4b7: V480 = EXP 0x2 0xe0
0x4b8: V481 = 0xffffffff
0x4be: V482 = AND 0x6c86888b 0xffffffff
0x4bf: V483 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x4c1: M[V477] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x4c2: V484 = 0x1
0x4c4: V485 = 0xa0
0x4c6: V486 = 0x2
0x4c8: V487 = EXP 0x2 0xa0
0x4c9: V488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cc: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x4cd: V490 = 0x4
0x4d0: V491 = ADD V477 0x4
0x4d1: M[V491] = V489
0x4d2: V492 = 0x24
0x4d5: V493 = ADD V477 0x24
0x4d9: M[V493] = V155
0x4dc: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x4dd: V495 = 0x44
0x4e0: V496 = ADD V477 0x44
0x4e1: M[V496] = V494
0x4e2: V497 = 0x64
0x4e5: V498 = ADD V477 0x64
0x4e9: M[V498] = V157
0x4ea: V499 = 0x84
0x4ed: V500 = ADD V477 0x84
0x4f1: M[V500] = V172
0x4f2: V501 = 0xa4
0x4f5: V502 = ADD V477 0xa4
0x4f9: M[V502] = V170
0x4fc: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x4fd: V504 = 0xc4
0x500: V505 = ADD V477 0xc4
0x501: M[V505] = V503
0x502: V506 = 0xff
0x504: V507 = AND 0xff V183
0x505: V508 = 0xe4
0x508: V509 = ADD V477 0xe4
0x509: M[V509] = V507
0x50a: V510 = 0x104
0x50e: V511 = ADD V477 0x104
0x50f: M[V511] = V179
0x510: V512 = 0x124
0x514: V513 = ADD V477 0x124
0x515: M[V513] = V177
0x516: V514 = 0x144
0x51a: V515 = ADD V477 0x144
0x51b: M[V515] = V185
0x51e: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x51f: V517 = 0x164
0x523: V518 = ADD V477 0x164
0x524: M[V518] = V516
0x525: V519 = 0x184
0x528: V520 = ADD 0x184 V477
0x529: V521 = 0x20
0x52b: V522 = 0x40
0x52d: V523 = M[0x40]
0x530: V524 = SUB V520 V523
0x532: V525 = 0x0
0x536: V526 = EXTCODESIZE V468
0x537: V527 = ISZERO V526
0x538: V528 = ISZERO V527
0x539: V529 = 0x541
0x53c: JUMPI 0x541 V528
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V468, V468, 0x6c86888b, V520, 0x20, V523, V524, V523, 0x0, V468]
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V468, 0x6c86888b, V520, 0x20, V523, V524, V523, 0x0, V468]

================================

Block 0x53d
[0x53d:0x540]
---
Predecessors: [0x487]
Successors: []
---
0x53d PUSH1 0x0
0x53f DUP1
0x540 REVERT
---
0x53d: V530 = 0x0
0x540: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V468, 0x6c86888b, V520, 0x20, V523, V524, V523, 0x0, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V468, 0x6c86888b, V520, 0x20, V523, V524, V523, 0x0, V468]

================================

Block 0x541
[0x541:0x54d]
---
Predecessors: [0x487]
Successors: [0x54e, 0x552]
---
0x541 JUMPDEST
0x542 PUSH2 0x2c6
0x545 GAS
0x546 SUB
0x547 CALL
0x548 ISZERO
0x549 ISZERO
0x54a PUSH2 0x552
0x54d JUMPI
---
0x541: JUMPDEST 
0x542: V531 = 0x2c6
0x545: V532 = GAS
0x546: V533 = SUB V532 0x2c6
0x547: V534 = CALL V533 V468 0x0 V523 V524 V523 0x20
0x548: V535 = ISZERO V534
0x549: V536 = ISZERO V535
0x54a: V537 = 0x552
0x54d: JUMPI 0x552 V536
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V468, 0x6c86888b, V520, 0x20, V523, V524, V523, 0x0, V468]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V468, 0x6c86888b, V520]

================================

Block 0x54e
[0x54e:0x551]
---
Predecessors: [0x541]
Successors: []
---
0x54e PUSH1 0x0
0x550 DUP1
0x551 REVERT
---
0x54e: V538 = 0x0
0x551: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V468, 0x6c86888b, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V468, 0x6c86888b, V520]

================================

Block 0x552
[0x552:0x561]
---
Predecessors: [0x541]
Successors: [0x562, 0x65c]
---
0x552 JUMPDEST
0x553 POP
0x554 POP
0x555 POP
0x556 PUSH1 0x40
0x558 MLOAD
0x559 DUP1
0x55a MLOAD
0x55b SWAP1
0x55c POP
0x55d ISZERO
0x55e PUSH2 0x65c
0x561 JUMPI
---
0x552: JUMPDEST 
0x556: V539 = 0x40
0x558: V540 = M[0x40]
0x55a: V541 = M[V540]
0x55d: V542 = ISZERO V541
0x55e: V543 = 0x65c
0x561: JUMPI 0x65c V542
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V468, 0x6c86888b, V520]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468]

================================

Block 0x562
[0x562:0x63e]
---
Predecessors: [0x552]
Successors: [0x63f, 0x643]
---
0x562 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x583 PUSH1 0x0
0x585 PUSH1 0x40
0x587 MLOAD
0x588 SWAP1
0x589 DUP2
0x58a MSTORE
0x58b PUSH1 0x20
0x58d ADD
0x58e PUSH1 0x40
0x590 MLOAD
0x591 DUP1
0x592 SWAP2
0x593 SUB
0x594 SWAP1
0x595 LOG1
0x596 DUP1
0x597 PUSH1 0x1
0x599 PUSH1 0xa0
0x59b PUSH1 0x2
0x59d EXP
0x59e SUB
0x59f AND
0x5a0 PUSH4 0xa19b14a
0x5a5 DUP12
0x5a6 DUP15
0x5a7 DUP13
0x5a8 DUP16
0x5a9 DUP13
0x5aa DUP15
0x5ab DUP14
0x5ac DUP12
0x5ad DUP14
0x5ae DUP16
0x5af DUP14
0x5b0 PUSH1 0x40
0x5b2 MLOAD
0x5b3 PUSH1 0xe0
0x5b5 PUSH1 0x2
0x5b7 EXP
0x5b8 PUSH4 0xffffffff
0x5bd DUP15
0x5be AND
0x5bf MUL
0x5c0 DUP2
0x5c1 MSTORE
0x5c2 PUSH1 0x1
0x5c4 PUSH1 0xa0
0x5c6 PUSH1 0x2
0x5c8 EXP
0x5c9 SUB
0x5ca SWAP12
0x5cb DUP13
0x5cc AND
0x5cd PUSH1 0x4
0x5cf DUP3
0x5d0 ADD
0x5d1 MSTORE
0x5d2 PUSH1 0x24
0x5d4 DUP2
0x5d5 ADD
0x5d6 SWAP11
0x5d7 SWAP1
0x5d8 SWAP11
0x5d9 MSTORE
0x5da SWAP8
0x5db DUP11
0x5dc AND
0x5dd PUSH1 0x44
0x5df DUP11
0x5e0 ADD
0x5e1 MSTORE
0x5e2 PUSH1 0x64
0x5e4 DUP10
0x5e5 ADD
0x5e6 SWAP7
0x5e7 SWAP1
0x5e8 SWAP7
0x5e9 MSTORE
0x5ea PUSH1 0x84
0x5ec DUP9
0x5ed ADD
0x5ee SWAP5
0x5ef SWAP1
0x5f0 SWAP5
0x5f1 MSTORE
0x5f2 PUSH1 0xa4
0x5f4 DUP8
0x5f5 ADD
0x5f6 SWAP3
0x5f7 SWAP1
0x5f8 SWAP3
0x5f9 MSTORE
0x5fa SWAP1
0x5fb SWAP6
0x5fc AND
0x5fd PUSH1 0xc4
0x5ff DUP6
0x600 ADD
0x601 MSTORE
0x602 PUSH1 0xff
0x604 SWAP1
0x605 SWAP5
0x606 AND
0x607 PUSH1 0xe4
0x609 DUP5
0x60a ADD
0x60b MSTORE
0x60c PUSH2 0x104
0x60f DUP4
0x610 ADD
0x611 SWAP4
0x612 SWAP1
0x613 SWAP4
0x614 MSTORE
0x615 PUSH2 0x124
0x618 DUP3
0x619 ADD
0x61a SWAP3
0x61b SWAP1
0x61c SWAP3
0x61d MSTORE
0x61e PUSH2 0x144
0x621 DUP2
0x622 ADD
0x623 SWAP2
0x624 SWAP1
0x625 SWAP2
0x626 MSTORE
0x627 PUSH2 0x164
0x62a ADD
0x62b PUSH1 0x0
0x62d PUSH1 0x40
0x62f MLOAD
0x630 DUP1
0x631 DUP4
0x632 SUB
0x633 DUP2
0x634 PUSH1 0x0
0x636 DUP8
0x637 DUP1
0x638 EXTCODESIZE
0x639 ISZERO
0x63a ISZERO
0x63b PUSH2 0x643
0x63e JUMPI
---
0x562: V544 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x583: V545 = 0x0
0x585: V546 = 0x40
0x587: V547 = M[0x40]
0x58a: M[V547] = 0x0
0x58b: V548 = 0x20
0x58d: V549 = ADD 0x20 V547
0x58e: V550 = 0x40
0x590: V551 = M[0x40]
0x593: V552 = SUB V549 V551
0x595: LOG V551 V552 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x597: V553 = 0x1
0x599: V554 = 0xa0
0x59b: V555 = 0x2
0x59d: V556 = EXP 0x2 0xa0
0x59e: V557 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59f: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x5a0: V559 = 0xa19b14a
0x5b0: V560 = 0x40
0x5b2: V561 = M[0x40]
0x5b3: V562 = 0xe0
0x5b5: V563 = 0x2
0x5b7: V564 = EXP 0x2 0xe0
0x5b8: V565 = 0xffffffff
0x5be: V566 = AND 0xa19b14a 0xffffffff
0x5bf: V567 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x5c1: M[V561] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x5c2: V568 = 0x1
0x5c4: V569 = 0xa0
0x5c6: V570 = 0x2
0x5c8: V571 = EXP 0x2 0xa0
0x5c9: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cc: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x5cd: V574 = 0x4
0x5d0: V575 = ADD V561 0x4
0x5d1: M[V575] = V573
0x5d2: V576 = 0x24
0x5d5: V577 = ADD V561 0x24
0x5d9: M[V577] = V155
0x5dc: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x5dd: V579 = 0x44
0x5e0: V580 = ADD V561 0x44
0x5e1: M[V580] = V578
0x5e2: V581 = 0x64
0x5e5: V582 = ADD V561 0x64
0x5e9: M[V582] = V157
0x5ea: V583 = 0x84
0x5ed: V584 = ADD V561 0x84
0x5f1: M[V584] = V172
0x5f2: V585 = 0xa4
0x5f5: V586 = ADD V561 0xa4
0x5f9: M[V586] = V170
0x5fc: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x5fd: V588 = 0xc4
0x600: V589 = ADD V561 0xc4
0x601: M[V589] = V587
0x602: V590 = 0xff
0x606: V591 = AND V183 0xff
0x607: V592 = 0xe4
0x60a: V593 = ADD V561 0xe4
0x60b: M[V593] = V591
0x60c: V594 = 0x104
0x610: V595 = ADD V561 0x104
0x614: M[V595] = V179
0x615: V596 = 0x124
0x619: V597 = ADD V561 0x124
0x61d: M[V597] = V177
0x61e: V598 = 0x144
0x622: V599 = ADD V561 0x144
0x626: M[V599] = V185
0x627: V600 = 0x164
0x62a: V601 = ADD 0x164 V561
0x62b: V602 = 0x0
0x62d: V603 = 0x40
0x62f: V604 = M[0x40]
0x632: V605 = SUB V601 V604
0x634: V606 = 0x0
0x638: V607 = EXTCODESIZE V558
0x639: V608 = ISZERO V607
0x63a: V609 = ISZERO V608
0x63b: V610 = 0x643
0x63e: JUMPI 0x643 V609
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V558, 0xa19b14a, V601, 0x0, V604, V605, V604, 0x0, V558]
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V558, 0xa19b14a, V601, 0x0, V604, V605, V604, 0x0, V558]

================================

Block 0x63f
[0x63f:0x642]
---
Predecessors: [0x562]
Successors: []
---
0x63f PUSH1 0x0
0x641 DUP1
0x642 REVERT
---
0x63f: V611 = 0x0
0x642: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V558, 0xa19b14a, V601, 0x0, V604, V605, V604, 0x0, V558]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V558, 0xa19b14a, V601, 0x0, V604, V605, V604, 0x0, V558]

================================

Block 0x643
[0x643:0x64f]
---
Predecessors: [0x562]
Successors: [0x650, 0x654]
---
0x643 JUMPDEST
0x644 PUSH2 0x2c6
0x647 GAS
0x648 SUB
0x649 CALL
0x64a ISZERO
0x64b ISZERO
0x64c PUSH2 0x654
0x64f JUMPI
---
0x643: JUMPDEST 
0x644: V612 = 0x2c6
0x647: V613 = GAS
0x648: V614 = SUB V613 0x2c6
0x649: V615 = CALL V614 V558 0x0 V604 V605 V604 0x0
0x64a: V616 = ISZERO V615
0x64b: V617 = ISZERO V616
0x64c: V618 = 0x654
0x64f: JUMPI 0x654 V617
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V558, 0xa19b14a, V601, 0x0, V604, V605, V604, 0x0, V558]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V558, 0xa19b14a, V601]

================================

Block 0x650
[0x650:0x653]
---
Predecessors: [0x643]
Successors: []
---
0x650 PUSH1 0x0
0x652 DUP1
0x653 REVERT
---
0x650: V619 = 0x0
0x653: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V558, 0xa19b14a, V601]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V558, 0xa19b14a, V601]

================================

Block 0x654
[0x654:0x65b]
---
Predecessors: [0x643]
Successors: [0x691]
---
0x654 JUMPDEST
0x655 POP
0x656 POP
0x657 POP
0x658 PUSH2 0x691
0x65b JUMP
---
0x654: JUMPDEST 
0x658: V620 = 0x691
0x65b: JUMP 0x691
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468, V558, 0xa19b14a, V601]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468]

================================

Block 0x65c
[0x65c:0x690]
---
Predecessors: [0x552]
Successors: [0x691]
---
0x65c JUMPDEST
0x65d PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x67e PUSH1 0x1
0x680 PUSH1 0x40
0x682 MLOAD
0x683 SWAP1
0x684 DUP2
0x685 MSTORE
0x686 PUSH1 0x20
0x688 ADD
0x689 PUSH1 0x40
0x68b MLOAD
0x68c DUP1
0x68d SWAP2
0x68e SUB
0x68f SWAP1
0x690 LOG1
---
0x65c: JUMPDEST 
0x65d: V621 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x67e: V622 = 0x1
0x680: V623 = 0x40
0x682: V624 = M[0x40]
0x685: M[V624] = 0x1
0x686: V625 = 0x20
0x688: V626 = ADD 0x20 V624
0x689: V627 = 0x40
0x68b: V628 = M[0x40]
0x68e: V629 = SUB V626 V628
0x690: LOG V628 V629 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468]

================================

Block 0x691
[0x691:0x691]
---
Predecessors: [0x654, 0x65c]
Successors: [0x692]
---
0x691 JUMPDEST
---
0x691: JUMPDEST 
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468]

================================

Block 0x692
[0x692:0x692]
---
Predecessors: [0x691]
Successors: [0x693]
---
0x692 JUMPDEST
---
0x692: JUMPDEST 
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468]

================================

Block 0x693
[0x693:0x6a0]
---
Predecessors: [0x692]
Successors: [0x7d]
---
0x693 JUMPDEST
0x694 POP
0x695 POP
0x696 POP
0x697 POP
0x698 POP
0x699 POP
0x69a POP
0x69b POP
0x69c POP
0x69d POP
0x69e POP
0x69f POP
0x6a0 JUMP
---
0x693: JUMPDEST 
0x6a0: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V155, V157, V165, V168, V170, V172, V175, V177, V179, V183, V185, V468]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0x6a1
[0x6a1:0x6a1]
---
Predecessors: []
Successors: [0x6a2]
---
0x6a1 JUMPDEST
---
0x6a1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6a2
[0x6a2:0x6a3]
---
Predecessors: [0x6a1]
Successors: []
Has unresolved jump.
---
0x6a2 JUMPDEST
0x6a3 JUMP
---
0x6a2: JUMPDEST 
0x6a3: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6a4
[0x6a4:0x6bb]
---
Predecessors: [0x1e9]
Successors: [0x6bc, 0x6c0]
---
0x6a4 JUMPDEST
0x6a5 PUSH1 0x0
0x6a7 DUP1
0x6a8 SLOAD
0x6a9 CALLER
0x6aa PUSH1 0x1
0x6ac PUSH1 0xa0
0x6ae PUSH1 0x2
0x6b0 EXP
0x6b1 SUB
0x6b2 SWAP1
0x6b3 DUP2
0x6b4 AND
0x6b5 SWAP2
0x6b6 AND
0x6b7 EQ
0x6b8 PUSH2 0x6c0
0x6bb JUMPI
---
0x6a4: JUMPDEST 
0x6a5: V630 = 0x0
0x6a8: V631 = S[0x0]
0x6a9: V632 = CALLER
0x6aa: V633 = 0x1
0x6ac: V634 = 0xa0
0x6ae: V635 = 0x2
0x6b0: V636 = EXP 0x2 0xa0
0x6b1: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b4: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x6b6: V639 = AND V631 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: V640 = EQ V639 V638
0x6b8: V641 = 0x6c0
0x6bb: JUMPI 0x6c0 V640
---
Entry stack: [V12, 0x7d, V195]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V195, 0x0]

================================

Block 0x6bc
[0x6bc:0x6bf]
---
Predecessors: [0x6a4]
Successors: []
---
0x6bc PUSH1 0x0
0x6be DUP1
0x6bf REVERT
---
0x6bc: V642 = 0x0
0x6bf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, 0x0]

================================

Block 0x6c0
[0x6c0:0x705]
---
Predecessors: [0x6a4]
Successors: [0x706, 0x70a]
---
0x6c0 JUMPDEST
0x6c1 POP
0x6c2 PUSH1 0x1
0x6c4 SLOAD
0x6c5 PUSH1 0x1
0x6c7 PUSH1 0xa0
0x6c9 PUSH1 0x2
0x6cb EXP
0x6cc SUB
0x6cd AND
0x6ce DUP1
0x6cf PUSH4 0x2e1a7d4d
0x6d4 DUP4
0x6d5 PUSH1 0x40
0x6d7 MLOAD
0x6d8 PUSH1 0xe0
0x6da PUSH1 0x2
0x6dc EXP
0x6dd PUSH4 0xffffffff
0x6e2 DUP5
0x6e3 AND
0x6e4 MUL
0x6e5 DUP2
0x6e6 MSTORE
0x6e7 PUSH1 0x4
0x6e9 DUP2
0x6ea ADD
0x6eb SWAP2
0x6ec SWAP1
0x6ed SWAP2
0x6ee MSTORE
0x6ef PUSH1 0x24
0x6f1 ADD
0x6f2 PUSH1 0x0
0x6f4 PUSH1 0x40
0x6f6 MLOAD
0x6f7 DUP1
0x6f8 DUP4
0x6f9 SUB
0x6fa DUP2
0x6fb PUSH1 0x0
0x6fd DUP8
0x6fe DUP1
0x6ff EXTCODESIZE
0x700 ISZERO
0x701 ISZERO
0x702 PUSH2 0x70a
0x705 JUMPI
---
0x6c0: JUMPDEST 
0x6c2: V643 = 0x1
0x6c4: V644 = S[0x1]
0x6c5: V645 = 0x1
0x6c7: V646 = 0xa0
0x6c9: V647 = 0x2
0x6cb: V648 = EXP 0x2 0xa0
0x6cc: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cd: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x6cf: V651 = 0x2e1a7d4d
0x6d5: V652 = 0x40
0x6d7: V653 = M[0x40]
0x6d8: V654 = 0xe0
0x6da: V655 = 0x2
0x6dc: V656 = EXP 0x2 0xe0
0x6dd: V657 = 0xffffffff
0x6e3: V658 = AND 0x2e1a7d4d 0xffffffff
0x6e4: V659 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x6e6: M[V653] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x6e7: V660 = 0x4
0x6ea: V661 = ADD V653 0x4
0x6ee: M[V661] = V195
0x6ef: V662 = 0x24
0x6f1: V663 = ADD 0x24 V653
0x6f2: V664 = 0x0
0x6f4: V665 = 0x40
0x6f6: V666 = M[0x40]
0x6f9: V667 = SUB V663 V666
0x6fb: V668 = 0x0
0x6ff: V669 = EXTCODESIZE V650
0x700: V670 = ISZERO V669
0x701: V671 = ISZERO V670
0x702: V672 = 0x70a
0x705: JUMPI 0x70a V671
---
Entry stack: [V12, 0x7d, V195, 0x0]
Stack pops: 2
Stack additions: [S1, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]

================================

Block 0x706
[0x706:0x709]
---
Predecessors: [0x6c0]
Successors: []
---
0x706 PUSH1 0x0
0x708 DUP1
0x709 REVERT
---
0x706: V673 = 0x0
0x709: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]

================================

Block 0x70a
[0x70a:0x716]
---
Predecessors: [0x6c0]
Successors: [0x717, 0x71b]
---
0x70a JUMPDEST
0x70b PUSH2 0x2c6
0x70e GAS
0x70f SUB
0x710 CALL
0x711 ISZERO
0x712 ISZERO
0x713 PUSH2 0x71b
0x716 JUMPI
---
0x70a: JUMPDEST 
0x70b: V674 = 0x2c6
0x70e: V675 = GAS
0x70f: V676 = SUB V675 0x2c6
0x710: V677 = CALL V676 V650 0x0 V666 V667 V666 0x0
0x711: V678 = ISZERO V677
0x712: V679 = ISZERO V678
0x713: V680 = 0x71b
0x716: JUMPI 0x71b V679
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]

================================

Block 0x717
[0x717:0x71a]
---
Predecessors: [0x70a]
Successors: []
---
0x717 PUSH1 0x0
0x719 DUP1
0x71a REVERT
---
0x717: V681 = 0x0
0x71a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]

================================

Block 0x71b
[0x71b:0x71e]
---
Predecessors: [0x70a]
Successors: [0x71f]
---
0x71b JUMPDEST
0x71c POP
0x71d POP
0x71e POP
---
0x71b: JUMPDEST 
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650]

================================

Block 0x71f
[0x71f:0x71f]
---
Predecessors: [0x71b]
Successors: [0x720]
---
0x71f JUMPDEST
---
0x71f: JUMPDEST 
---
Entry stack: [V12, 0x7d, V195, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650]

================================

Block 0x720
[0x720:0x723]
---
Predecessors: [0x71f]
Successors: [0x7d]
---
0x720 JUMPDEST
0x721 POP
0x722 POP
0x723 JUMP
---
0x720: JUMPDEST 
0x723: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V195, V650]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x724
[0x724:0x74f]
---
Predecessors: []
Successors: []
---
0x724 STOP
0x725 LOG1
0x726 PUSH6 0x627a7a723058
0x72d SHA3
0x72e DUP11
0x72f POP
0x730 SWAP10
0x731 GASLIMIT
0x732 SWAP3
0x733 PUSH17 0x5e3ac17ff8f1b64d271144c83cc091bdde
0x745 MISSING 0x5e
0x746 POP
0x747 MISSING 0xab
0x748 MISSING 0xdc
0x749 CALL
0x74a CALLDATACOPY
0x74b MISSING 0xb7
0x74c MISSING 0xe1
0x74d MISSING 0x48
0x74e STOP
0x74f MISSING 0x29
---
0x724: STOP 
0x725: LOG S0 S1 S2
0x726: V682 = 0x627a7a723058
0x72d: V683 = SHA3 0x627a7a723058 S3
0x731: V684 = GASLIMIT
0x733: V685 = 0x5e3ac17ff8f1b64d271144c83cc091bdde
0x745: MISSING 0x5e
0x747: MISSING 0xab
0x748: MISSING 0xdc
0x749: V686 = CALL S0 S1 S2 S3 S4 S5 S6
0x74a: CALLDATACOPY V686 S7 S8
0x74b: MISSING 0xb7
0x74c: MISSING 0xe1
0x74d: MISSING 0x48
0x74e: STOP 
0x74f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x5e3ac17ff8f1b64d271144c83cc091bdde, S5, S13, S4, V684, S6, S7, S8, S9, S10, S11, S12, V683]
Exit stack: []

================================

Function 0:
Public function signature: 0x2cf2c0af
Entry block: 0x81
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x81, 0x88, 0x8c, 0x1f6, 0x20e, 0x212, 0x24f, 0x253, 0x260, 0x264, 0x269, 0x26a

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x99
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x99, 0xa0, 0xa4, 0x26e, 0x285, 0x289, 0x2b8, 0x2bc, 0x2bd, 0x2be

Function 2:
Public function signature: 0x43d726d6
Entry block: 0xb1
Exit block: 0x2d8
Body: 0xb1, 0xb8, 0xbc, 0x2c1, 0x2d8, 0x2dc

Function 3:
Public function signature: 0x5c73dcea
Entry block: 0xc6
Exit block: 0x113
Body: 0xc6, 0xcd, 0xd1, 0x113, 0x2ed, 0x3a4, 0x3a8, 0x3b5, 0x3b9, 0x3c5

Function 4:
Public function signature: 0x70a08231
Entry block: 0x127
Exit block: 0x146
Body: 0x127, 0x12e, 0x132, 0x146, 0x3d5, 0x435, 0x439, 0x446, 0x44a, 0x456

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x158
Exit block: 0x16b
Body: 0x158, 0x15f, 0x163, 0x16b, 0x45c

Function 6:
Public function signature: 0x910c8a85
Entry block: 0x187
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x187, 0x18e, 0x192, 0x46b, 0x483, 0x487, 0x53d, 0x541, 0x54e, 0x552, 0x562, 0x63f, 0x643, 0x650, 0x654, 0x65c, 0x691, 0x692, 0x693

Function 7:
Public function signature: 0xd0e30db0
Entry block: 0x1d4
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1d4, 0x2ea, 0x2eb

Function 8:
Public function signature: 0xf1b83630
Entry block: 0x1de
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1de, 0x1e5, 0x1e9, 0x6a4, 0x6bc, 0x6c0, 0x706, 0x70a, 0x717, 0x71b, 0x71f, 0x720

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f

