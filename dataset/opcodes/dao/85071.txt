Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x54]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x54
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x54
0xa: JUMPI 0x54 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xc7]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH3 0x821de3
0x39 EQ
0x3a PUSH2 0xc7
0x3d JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x821de3
0x39: V12 = EQ 0x821de3 V10
0x3a: V13 = 0xc7
0x3d: JUMPI 0xc7 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x11c]
---
0x3e DUP1
0x3f PUSH4 0x3ef13367
0x44 EQ
0x45 PUSH2 0x11c
0x48 JUMPI
---
0x3f: V14 = 0x3ef13367
0x44: V15 = EQ 0x3ef13367 V10
0x45: V16 = 0x11c
0x48: JUMPI 0x11c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x155]
---
0x49 DUP1
0x4a PUSH4 0x6b9f96ea
0x4f EQ
0x50 PUSH2 0x155
0x53 JUMPI
---
0x4a: V17 = 0x6b9f96ea
0x4f: V18 = EQ 0x6b9f96ea V10
0x50: V19 = 0x155
0x53: JUMPI 0x155 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x54]
---
Predecessors: [0x0, 0x49]
Successors: [0x55]
---
0x54 JUMPDEST
---
0x54: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x55
[0x55:0xbf]
---
Predecessors: [0x54]
Successors: [0xc0, 0xc4]
---
0x55 JUMPDEST
0x56 PUSH1 0x0
0x58 DUP1
0x59 SWAP1
0x5a SLOAD
0x5b SWAP1
0x5c PUSH2 0x100
0x5f EXP
0x60 SWAP1
0x61 DIV
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e CALLVALUE
0x8f PUSH1 0x0
0x91 CALLDATASIZE
0x92 PUSH1 0x40
0x94 MLOAD
0x95 DUP1
0x96 DUP4
0x97 DUP4
0x98 DUP1
0x99 DUP3
0x9a DUP5
0x9b CALLDATACOPY
0x9c DUP3
0x9d ADD
0x9e SWAP2
0x9f POP
0xa0 POP
0xa1 SWAP3
0xa2 POP
0xa3 POP
0xa4 POP
0xa5 PUSH1 0x0
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa DUP1
0xab DUP4
0xac SUB
0xad DUP2
0xae DUP6
0xaf DUP8
0xb0 PUSH2 0x8796
0xb3 GAS
0xb4 SUB
0xb5 CALL
0xb6 SWAP3
0xb7 POP
0xb8 POP
0xb9 POP
0xba ISZERO
0xbb ISZERO
0xbc PUSH2 0xc4
0xbf JUMPI
---
0x55: JUMPDEST 
0x56: V20 = 0x0
0x5a: V21 = S[0x0]
0x5c: V22 = 0x100
0x5f: V23 = EXP 0x100 0x0
0x61: V24 = DIV V21 0x1
0x62: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x78: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x8e: V29 = CALLVALUE
0x8f: V30 = 0x0
0x91: V31 = CALLDATASIZE
0x92: V32 = 0x40
0x94: V33 = M[0x40]
0x9b: CALLDATACOPY V33 0x0 V31
0x9d: V34 = ADD V33 V31
0xa5: V35 = 0x0
0xa7: V36 = 0x40
0xa9: V37 = M[0x40]
0xac: V38 = SUB V34 V37
0xb0: V39 = 0x8796
0xb3: V40 = GAS
0xb4: V41 = SUB V40 0x8796
0xb5: V42 = CALL V41 V28 V29 V37 V38 V37 0x0
0xba: V43 = ISZERO V42
0xbb: V44 = ISZERO V43
0xbc: V45 = 0xc4
0xbf: JUMPI 0xc4 V44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc0
[0xc0:0xc3]
---
Predecessors: [0x55]
Successors: []
---
0xc0 PUSH1 0x0
0xc2 DUP1
0xc3 REVERT
---
0xc0: V46 = 0x0
0xc3: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xc4]
---
Predecessors: [0x55]
Successors: [0xc5]
---
0xc4 JUMPDEST
---
0xc4: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc5
[0xc5:0xc6]
---
Predecessors: [0xc4]
Successors: []
---
0xc5 JUMPDEST
0xc6 STOP
---
0xc5: JUMPDEST 
0xc6: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc7
[0xc7:0xcd]
---
Predecessors: [0xb]
Successors: [0xce, 0xd2]
---
0xc7 JUMPDEST
0xc8 CALLVALUE
0xc9 ISZERO
0xca PUSH2 0xd2
0xcd JUMPI
---
0xc7: JUMPDEST 
0xc8: V47 = CALLVALUE
0xc9: V48 = ISZERO V47
0xca: V49 = 0xd2
0xcd: JUMPI 0xd2 V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd1]
---
Predecessors: [0xc7]
Successors: []
---
0xce PUSH1 0x0
0xd0 DUP1
0xd1 REVERT
---
0xce: V50 = 0x0
0xd1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd2
[0xd2:0xd9]
---
Predecessors: [0xc7]
Successors: [0x16a]
---
0xd2 JUMPDEST
0xd3 PUSH2 0xda
0xd6 PUSH2 0x16a
0xd9 JUMP
---
0xd2: JUMPDEST 
0xd3: V51 = 0xda
0xd6: V52 = 0x16a
0xd9: JUMP 0x16a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xda]
Exit stack: [V10, 0xda]

================================

Block 0xda
[0xda:0x11b]
---
Predecessors: [0x16a]
Successors: []
---
0xda JUMPDEST
0xdb PUSH1 0x40
0xdd MLOAD
0xde DUP1
0xdf DUP3
0xe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5 AND
0xf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b AND
0x10c DUP2
0x10d MSTORE
0x10e PUSH1 0x20
0x110 ADD
0x111 SWAP2
0x112 POP
0x113 POP
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 SWAP2
0x119 SUB
0x11a SWAP1
0x11b RETURN
---
0xda: JUMPDEST 
0xdb: V53 = 0x40
0xdd: V54 = M[0x40]
0xe0: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0xf6: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x10d: M[V54] = V58
0x10e: V59 = 0x20
0x110: V60 = ADD 0x20 V54
0x114: V61 = 0x40
0x116: V62 = M[0x40]
0x119: V63 = SUB V60 V62
0x11b: RETURN V62 V63
---
Entry stack: [V10, 0xda, V88]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xda]

================================

Block 0x11c
[0x11c:0x122]
---
Predecessors: [0x3e]
Successors: [0x123, 0x127]
---
0x11c JUMPDEST
0x11d CALLVALUE
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11c: JUMPDEST 
0x11d: V64 = CALLVALUE
0x11e: V65 = ISZERO V64
0x11f: V66 = 0x127
0x122: JUMPI 0x127 V65
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11c]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V67 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x127
[0x127:0x152]
---
Predecessors: [0x11c]
Successors: [0x18f]
---
0x127 JUMPDEST
0x128 PUSH2 0x153
0x12b PUSH1 0x4
0x12d DUP1
0x12e DUP1
0x12f CALLDATALOAD
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 SWAP1
0x147 PUSH1 0x20
0x149 ADD
0x14a SWAP1
0x14b SWAP2
0x14c SWAP1
0x14d POP
0x14e POP
0x14f PUSH2 0x18f
0x152 JUMP
---
0x127: JUMPDEST 
0x128: V68 = 0x153
0x12b: V69 = 0x4
0x12f: V70 = CALLDATALOAD 0x4
0x130: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x147: V73 = 0x20
0x149: V74 = ADD 0x20 0x4
0x14f: V75 = 0x18f
0x152: JUMP 0x18f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x153, V72]
Exit stack: [V10, 0x153, V72]

================================

Block 0x153
[0x153:0x154]
---
Predecessors: [0x422]
Successors: []
---
0x153 JUMPDEST
0x154 STOP
---
0x153: JUMPDEST 
0x154: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x155
[0x155:0x15b]
---
Predecessors: [0x49]
Successors: [0x15c, 0x160]
---
0x155 JUMPDEST
0x156 CALLVALUE
0x157 ISZERO
0x158 PUSH2 0x160
0x15b JUMPI
---
0x155: JUMPDEST 
0x156: V76 = CALLVALUE
0x157: V77 = ISZERO V76
0x158: V78 = 0x160
0x15b: JUMPI 0x160 V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15c
[0x15c:0x15f]
---
Predecessors: [0x155]
Successors: []
---
0x15c PUSH1 0x0
0x15e DUP1
0x15f REVERT
---
0x15c: V79 = 0x0
0x15f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x160
[0x160:0x167]
---
Predecessors: [0x155]
Successors: [0x428]
---
0x160 JUMPDEST
0x161 PUSH2 0x168
0x164 PUSH2 0x428
0x167 JUMP
---
0x160: JUMPDEST 
0x161: V80 = 0x168
0x164: V81 = 0x428
0x167: JUMP 0x428
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x168]
Exit stack: [V10, 0x168]

================================

Block 0x168
[0x168:0x169]
---
Predecessors: [0x49c]
Successors: []
---
0x168 JUMPDEST
0x169 STOP
---
0x168: JUMPDEST 
0x169: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16a
[0x16a:0x18e]
---
Predecessors: [0xd2]
Successors: [0xda]
---
0x16a JUMPDEST
0x16b PUSH1 0x0
0x16d DUP1
0x16e SWAP1
0x16f SLOAD
0x170 SWAP1
0x171 PUSH2 0x100
0x174 EXP
0x175 SWAP1
0x176 DIV
0x177 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18c AND
0x18d DUP2
0x18e JUMP
---
0x16a: JUMPDEST 
0x16b: V82 = 0x0
0x16f: V83 = S[0x0]
0x171: V84 = 0x100
0x174: V85 = EXP 0x100 0x0
0x176: V86 = DIV V83 0x1
0x177: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x18e: JUMP 0xda
---
Entry stack: [V10, 0xda]
Stack pops: 1
Stack additions: [S0, V88]
Exit stack: [V10, 0xda, V88]

================================

Block 0x18f
[0x18f:0x1ea]
---
Predecessors: [0x127]
Successors: [0x1eb, 0x1ef]
---
0x18f JUMPDEST
0x190 PUSH1 0x0
0x192 DUP1
0x193 PUSH1 0x0
0x195 DUP1
0x196 PUSH1 0x0
0x198 SWAP1
0x199 SLOAD
0x19a SWAP1
0x19b PUSH2 0x100
0x19e EXP
0x19f SWAP1
0x1a0 DIV
0x1a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b6 AND
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc AND
0x1cd CALLER
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 EQ
0x1e5 ISZERO
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x18f: JUMPDEST 
0x190: V89 = 0x0
0x193: V90 = 0x0
0x196: V91 = 0x0
0x199: V92 = S[0x0]
0x19b: V93 = 0x100
0x19e: V94 = EXP 0x100 0x0
0x1a0: V95 = DIV V92 0x1
0x1a1: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1b7: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1cd: V100 = CALLER
0x1ce: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1e4: V103 = EQ V102 V99
0x1e5: V104 = ISZERO V103
0x1e6: V105 = ISZERO V104
0x1e7: V106 = 0x1ef
0x1ea: JUMPI 0x1ef V105
---
Entry stack: [V10, 0x153, V72]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0x153, V72, 0x0, 0x0, 0x0]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x18f]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V107 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V10, 0x153, V72, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x153, V72, 0x0, 0x0, 0x0]

================================

Block 0x1ef
[0x1ef:0x293]
---
Predecessors: [0x18f]
Successors: [0x294, 0x298]
---
0x1ef JUMPDEST
0x1f0 DUP4
0x1f1 SWAP3
0x1f2 POP
0x1f3 ADDRESS
0x1f4 SWAP2
0x1f5 POP
0x1f6 DUP3
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d PUSH4 0x70a08231
0x212 DUP4
0x213 PUSH1 0x0
0x215 PUSH1 0x40
0x217 MLOAD
0x218 PUSH1 0x20
0x21a ADD
0x21b MSTORE
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP3
0x220 PUSH4 0xffffffff
0x225 AND
0x226 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x244 MUL
0x245 DUP2
0x246 MSTORE
0x247 PUSH1 0x4
0x249 ADD
0x24a DUP1
0x24b DUP3
0x24c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x261 AND
0x262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x277 AND
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x20
0x27c ADD
0x27d SWAP2
0x27e POP
0x27f POP
0x280 PUSH1 0x20
0x282 PUSH1 0x40
0x284 MLOAD
0x285 DUP1
0x286 DUP4
0x287 SUB
0x288 DUP2
0x289 PUSH1 0x0
0x28b DUP8
0x28c DUP1
0x28d EXTCODESIZE
0x28e ISZERO
0x28f ISZERO
0x290 PUSH2 0x298
0x293 JUMPI
---
0x1ef: JUMPDEST 
0x1f3: V108 = ADDRESS
0x1f7: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x20d: V111 = 0x70a08231
0x213: V112 = 0x0
0x215: V113 = 0x40
0x217: V114 = M[0x40]
0x218: V115 = 0x20
0x21a: V116 = ADD 0x20 V114
0x21b: M[V116] = 0x0
0x21c: V117 = 0x40
0x21e: V118 = M[0x40]
0x220: V119 = 0xffffffff
0x225: V120 = AND 0xffffffff 0x70a08231
0x226: V121 = 0x100000000000000000000000000000000000000000000000000000000
0x244: V122 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x246: M[V118] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x247: V123 = 0x4
0x249: V124 = ADD 0x4 V118
0x24c: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x261: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x262: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x277: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x279: M[V124] = V128
0x27a: V129 = 0x20
0x27c: V130 = ADD 0x20 V124
0x280: V131 = 0x20
0x282: V132 = 0x40
0x284: V133 = M[0x40]
0x287: V134 = SUB V130 V133
0x289: V135 = 0x0
0x28d: V136 = EXTCODESIZE V110
0x28e: V137 = ISZERO V136
0x28f: V138 = ISZERO V137
0x290: V139 = 0x298
0x293: JUMPI 0x298 V138
---
Entry stack: [V10, 0x153, V72, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S3, V108, S0, V110, 0x70a08231, V130, 0x20, V133, V134, V133, 0x0, V110]
Exit stack: [V10, 0x153, V72, V72, V108, 0x0, V110, 0x70a08231, V130, 0x20, V133, V134, V133, 0x0, V110]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x1ef]
Successors: []
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
---
0x294: V140 = 0x0
0x297: REVERT 0x0 0x0
---
Entry stack: [V10, 0x153, V72, V72, V108, 0x0, V110, 0x70a08231, V130, 0x20, V133, V134, V133, 0x0, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x153, V72, V72, V108, 0x0, V110, 0x70a08231, V130, 0x20, V133, V134, V133, 0x0, V110]

================================

Block 0x298
[0x298:0x2a4]
---
Predecessors: [0x1ef]
Successors: [0x2a5, 0x2a9]
---
0x298 JUMPDEST
0x299 PUSH2 0x2c6
0x29c GAS
0x29d SUB
0x29e CALL
0x29f ISZERO
0x2a0 ISZERO
0x2a1 PUSH2 0x2a9
0x2a4 JUMPI
---
0x298: JUMPDEST 
0x299: V141 = 0x2c6
0x29c: V142 = GAS
0x29d: V143 = SUB V142 0x2c6
0x29e: V144 = CALL V143 V110 0x0 V133 V134 V133 0x20
0x29f: V145 = ISZERO V144
0x2a0: V146 = ISZERO V145
0x2a1: V147 = 0x2a9
0x2a4: JUMPI 0x2a9 V146
---
Entry stack: [V10, 0x153, V72, V72, V108, 0x0, V110, 0x70a08231, V130, 0x20, V133, V134, V133, 0x0, V110]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x153, V72, V72, V108, 0x0, V110, 0x70a08231, V130]

================================

Block 0x2a5
[0x2a5:0x2a8]
---
Predecessors: [0x298]
Successors: []
---
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 REVERT
---
0x2a5: V148 = 0x0
0x2a8: REVERT 0x0 0x0
---
Entry stack: [V10, 0x153, V72, V72, V108, 0x0, V110, 0x70a08231, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x153, V72, V72, V108, 0x0, V110, 0x70a08231, V130]

================================

Block 0x2a9
[0x2a9:0x2be]
---
Predecessors: [0x298]
Successors: [0x2bf, 0x2c3]
---
0x2a9 JUMPDEST
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 DUP1
0x2b1 MLOAD
0x2b2 SWAP1
0x2b3 POP
0x2b4 SWAP1
0x2b5 POP
0x2b6 PUSH1 0x0
0x2b8 DUP2
0x2b9 EQ
0x2ba ISZERO
0x2bb PUSH2 0x2c3
0x2be JUMPI
---
0x2a9: JUMPDEST 
0x2ad: V149 = 0x40
0x2af: V150 = M[0x40]
0x2b1: V151 = M[V150]
0x2b6: V152 = 0x0
0x2b9: V153 = EQ V151 0x0
0x2ba: V154 = ISZERO V153
0x2bb: V155 = 0x2c3
0x2be: JUMPI 0x2c3 V154
---
Entry stack: [V10, 0x153, V72, V72, V108, 0x0, V110, 0x70a08231, V130]
Stack pops: 4
Stack additions: [V151]
Exit stack: [V10, 0x153, V72, V72, V108, V151]

================================

Block 0x2bf
[0x2bf:0x2c2]
---
Predecessors: [0x2a9]
Successors: [0x421]
---
0x2bf PUSH2 0x421
0x2c2 JUMP
---
0x2bf: V156 = 0x421
0x2c2: JUMP 0x421
---
Entry stack: [V10, 0x153, V72, V72, V108, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x153, V72, V72, V108, V151]

================================

Block 0x2c3
[0x2c3:0x38a]
---
Predecessors: [0x2a9]
Successors: [0x38b, 0x38f]
---
0x2c3 JUMPDEST
0x2c4 DUP3
0x2c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2da AND
0x2db PUSH4 0xa9059cbb
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 SWAP1
0x2e4 SLOAD
0x2e5 SWAP1
0x2e6 PUSH2 0x100
0x2e9 EXP
0x2ea SWAP1
0x2eb DIV
0x2ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x301 AND
0x302 DUP4
0x303 PUSH1 0x0
0x305 PUSH1 0x40
0x307 MLOAD
0x308 PUSH1 0x20
0x30a ADD
0x30b MSTORE
0x30c PUSH1 0x40
0x30e MLOAD
0x30f DUP4
0x310 PUSH4 0xffffffff
0x315 AND
0x316 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x334 MUL
0x335 DUP2
0x336 MSTORE
0x337 PUSH1 0x4
0x339 ADD
0x33a DUP1
0x33b DUP4
0x33c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x351 AND
0x352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x367 AND
0x368 DUP2
0x369 MSTORE
0x36a PUSH1 0x20
0x36c ADD
0x36d DUP3
0x36e DUP2
0x36f MSTORE
0x370 PUSH1 0x20
0x372 ADD
0x373 SWAP3
0x374 POP
0x375 POP
0x376 POP
0x377 PUSH1 0x20
0x379 PUSH1 0x40
0x37b MLOAD
0x37c DUP1
0x37d DUP4
0x37e SUB
0x37f DUP2
0x380 PUSH1 0x0
0x382 DUP8
0x383 DUP1
0x384 EXTCODESIZE
0x385 ISZERO
0x386 ISZERO
0x387 PUSH2 0x38f
0x38a JUMPI
---
0x2c3: JUMPDEST 
0x2c5: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x2da: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x2db: V159 = 0xa9059cbb
0x2e0: V160 = 0x0
0x2e4: V161 = S[0x0]
0x2e6: V162 = 0x100
0x2e9: V163 = EXP 0x100 0x0
0x2eb: V164 = DIV V161 0x1
0x2ec: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x301: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x303: V167 = 0x0
0x305: V168 = 0x40
0x307: V169 = M[0x40]
0x308: V170 = 0x20
0x30a: V171 = ADD 0x20 V169
0x30b: M[V171] = 0x0
0x30c: V172 = 0x40
0x30e: V173 = M[0x40]
0x310: V174 = 0xffffffff
0x315: V175 = AND 0xffffffff 0xa9059cbb
0x316: V176 = 0x100000000000000000000000000000000000000000000000000000000
0x334: V177 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x336: M[V173] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x337: V178 = 0x4
0x339: V179 = ADD 0x4 V173
0x33c: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x351: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x352: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x367: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x369: M[V179] = V183
0x36a: V184 = 0x20
0x36c: V185 = ADD 0x20 V179
0x36f: M[V185] = V151
0x370: V186 = 0x20
0x372: V187 = ADD 0x20 V185
0x377: V188 = 0x20
0x379: V189 = 0x40
0x37b: V190 = M[0x40]
0x37e: V191 = SUB V187 V190
0x380: V192 = 0x0
0x384: V193 = EXTCODESIZE V158
0x385: V194 = ISZERO V193
0x386: V195 = ISZERO V194
0x387: V196 = 0x38f
0x38a: JUMPI 0x38f V195
---
Entry stack: [V10, 0x153, V72, V72, V108, V151]
Stack pops: 3
Stack additions: [S2, S1, S0, V158, 0xa9059cbb, V187, 0x20, V190, V191, V190, 0x0, V158]
Exit stack: [V10, 0x153, V72, V72, V108, V151, V158, 0xa9059cbb, V187, 0x20, V190, V191, V190, 0x0, V158]

================================

Block 0x38b
[0x38b:0x38e]
---
Predecessors: [0x2c3]
Successors: []
---
0x38b PUSH1 0x0
0x38d DUP1
0x38e REVERT
---
0x38b: V197 = 0x0
0x38e: REVERT 0x0 0x0
---
Entry stack: [V10, 0x153, V72, V72, V108, V151, V158, 0xa9059cbb, V187, 0x20, V190, V191, V190, 0x0, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x153, V72, V72, V108, V151, V158, 0xa9059cbb, V187, 0x20, V190, V191, V190, 0x0, V158]

================================

Block 0x38f
[0x38f:0x39b]
---
Predecessors: [0x2c3]
Successors: [0x39c, 0x3a0]
---
0x38f JUMPDEST
0x390 PUSH2 0x2c6
0x393 GAS
0x394 SUB
0x395 CALL
0x396 ISZERO
0x397 ISZERO
0x398 PUSH2 0x3a0
0x39b JUMPI
---
0x38f: JUMPDEST 
0x390: V198 = 0x2c6
0x393: V199 = GAS
0x394: V200 = SUB V199 0x2c6
0x395: V201 = CALL V200 V158 0x0 V190 V191 V190 0x20
0x396: V202 = ISZERO V201
0x397: V203 = ISZERO V202
0x398: V204 = 0x3a0
0x39b: JUMPI 0x3a0 V203
---
Entry stack: [V10, 0x153, V72, V72, V108, V151, V158, 0xa9059cbb, V187, 0x20, V190, V191, V190, 0x0, V158]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x153, V72, V72, V108, V151, V158, 0xa9059cbb, V187]

================================

Block 0x39c
[0x39c:0x39f]
---
Predecessors: [0x38f]
Successors: []
---
0x39c PUSH1 0x0
0x39e DUP1
0x39f REVERT
---
0x39c: V205 = 0x0
0x39f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x153, V72, V72, V108, V151, V158, 0xa9059cbb, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x153, V72, V72, V108, V151, V158, 0xa9059cbb, V187]

================================

Block 0x3a0
[0x3a0:0x3b0]
---
Predecessors: [0x38f]
Successors: [0x3b1, 0x3b5]
---
0x3a0 JUMPDEST
0x3a1 POP
0x3a2 POP
0x3a3 POP
0x3a4 PUSH1 0x40
0x3a6 MLOAD
0x3a7 DUP1
0x3a8 MLOAD
0x3a9 SWAP1
0x3aa POP
0x3ab ISZERO
0x3ac ISZERO
0x3ad PUSH2 0x3b5
0x3b0 JUMPI
---
0x3a0: JUMPDEST 
0x3a4: V206 = 0x40
0x3a6: V207 = M[0x40]
0x3a8: V208 = M[V207]
0x3ab: V209 = ISZERO V208
0x3ac: V210 = ISZERO V209
0x3ad: V211 = 0x3b5
0x3b0: JUMPI 0x3b5 V210
---
Entry stack: [V10, 0x153, V72, V72, V108, V151, V158, 0xa9059cbb, V187]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x153, V72, V72, V108, V151]

================================

Block 0x3b1
[0x3b1:0x3b4]
---
Predecessors: [0x3a0]
Successors: []
---
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 REVERT
---
0x3b1: V212 = 0x0
0x3b4: REVERT 0x0 0x0
---
Entry stack: [V10, 0x153, V72, V72, V108, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x153, V72, V72, V108, V151]

================================

Block 0x3b5
[0x3b5:0x420]
---
Predecessors: [0x3a0]
Successors: [0x421]
---
0x3b5 JUMPDEST
0x3b6 PUSH32 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
0x3d7 DUP5
0x3d8 DUP3
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP1
0x3dd DUP4
0x3de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f3 AND
0x3f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x409 AND
0x40a DUP2
0x40b MSTORE
0x40c PUSH1 0x20
0x40e ADD
0x40f DUP3
0x410 DUP2
0x411 MSTORE
0x412 PUSH1 0x20
0x414 ADD
0x415 SWAP3
0x416 POP
0x417 POP
0x418 POP
0x419 PUSH1 0x40
0x41b MLOAD
0x41c DUP1
0x41d SWAP2
0x41e SUB
0x41f SWAP1
0x420 LOG1
---
0x3b5: JUMPDEST 
0x3b6: V213 = 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
0x3d9: V214 = 0x40
0x3db: V215 = M[0x40]
0x3de: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f3: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x3f4: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x409: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x40b: M[V215] = V219
0x40c: V220 = 0x20
0x40e: V221 = ADD 0x20 V215
0x411: M[V221] = V151
0x412: V222 = 0x20
0x414: V223 = ADD 0x20 V221
0x419: V224 = 0x40
0x41b: V225 = M[0x40]
0x41e: V226 = SUB V223 V225
0x420: LOG V225 V226 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
---
Entry stack: [V10, 0x153, V72, V72, V108, V151]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x153, V72, V72, V108, V151]

================================

Block 0x421
[0x421:0x421]
---
Predecessors: [0x2bf, 0x3b5]
Successors: [0x422]
---
0x421 JUMPDEST
---
0x421: JUMPDEST 
---
Entry stack: [V10, 0x153, V72, V72, V108, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x153, V72, V72, V108, V151]

================================

Block 0x422
[0x422:0x427]
---
Predecessors: [0x421]
Successors: [0x153]
---
0x422 JUMPDEST
0x423 POP
0x424 POP
0x425 POP
0x426 POP
0x427 JUMP
---
0x422: JUMPDEST 
0x427: JUMP 0x153
---
Entry stack: [V10, 0x153, V72, V72, V108, V151]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x428
[0x428:0x496]
---
Predecessors: [0x160]
Successors: [0x497, 0x49b]
---
0x428 JUMPDEST
0x429 PUSH1 0x0
0x42b DUP1
0x42c SWAP1
0x42d SLOAD
0x42e SWAP1
0x42f PUSH2 0x100
0x432 EXP
0x433 SWAP1
0x434 DIV
0x435 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44a AND
0x44b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x460 AND
0x461 ADDRESS
0x462 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x477 AND
0x478 BALANCE
0x479 PUSH1 0x40
0x47b MLOAD
0x47c PUSH1 0x0
0x47e PUSH1 0x40
0x480 MLOAD
0x481 DUP1
0x482 DUP4
0x483 SUB
0x484 DUP2
0x485 DUP6
0x486 DUP8
0x487 PUSH2 0x8796
0x48a GAS
0x48b SUB
0x48c CALL
0x48d SWAP3
0x48e POP
0x48f POP
0x490 POP
0x491 ISZERO
0x492 ISZERO
0x493 PUSH2 0x49b
0x496 JUMPI
---
0x428: JUMPDEST 
0x429: V227 = 0x0
0x42d: V228 = S[0x0]
0x42f: V229 = 0x100
0x432: V230 = EXP 0x100 0x0
0x434: V231 = DIV V228 0x1
0x435: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x44b: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x460: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x461: V236 = ADDRESS
0x462: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x477: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x478: V239 = BALANCE V238
0x479: V240 = 0x40
0x47b: V241 = M[0x40]
0x47c: V242 = 0x0
0x47e: V243 = 0x40
0x480: V244 = M[0x40]
0x483: V245 = SUB V241 V244
0x487: V246 = 0x8796
0x48a: V247 = GAS
0x48b: V248 = SUB V247 0x8796
0x48c: V249 = CALL V248 V235 V239 V244 V245 V244 0x0
0x491: V250 = ISZERO V249
0x492: V251 = ISZERO V250
0x493: V252 = 0x49b
0x496: JUMPI 0x49b V251
---
Entry stack: [V10, 0x168]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x168]

================================

Block 0x497
[0x497:0x49a]
---
Predecessors: [0x428]
Successors: []
---
0x497 PUSH1 0x0
0x499 DUP1
0x49a REVERT
---
0x497: V253 = 0x0
0x49a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x168]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x168]

================================

Block 0x49b
[0x49b:0x49b]
---
Predecessors: [0x428]
Successors: [0x49c]
---
0x49b JUMPDEST
---
0x49b: JUMPDEST 
---
Entry stack: [V10, 0x168]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x168]

================================

Block 0x49c
[0x49c:0x49d]
---
Predecessors: [0x49b]
Successors: [0x168]
---
0x49c JUMPDEST
0x49d JUMP
---
0x49c: JUMPDEST 
0x49d: JUMP 0x168
---
Entry stack: [V10, 0x168]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x49e
[0x49e:0x4ab]
---
Predecessors: []
Successors: [0x4ac]
Has unresolved jump.
---
0x49e STOP
0x49f LOG1
0x4a0 PUSH6 0x627a7a723058
0x4a7 SHA3
0x4a8 ADD
0x4a9 MISSING 0xc8
0x4aa SHA3
0x4ab JUMPI
---
0x49e: STOP 
0x49f: LOG S0 S1 S2
0x4a0: V254 = 0x627a7a723058
0x4a7: V255 = SHA3 0x627a7a723058 S3
0x4a8: V256 = ADD V255 S4
0x4a9: MISSING 0xc8
0x4aa: V257 = SHA3 S0 S1
0x4ab: JUMPI V257 S2
---
Entry stack: []
Stack pops: 0
Stack additions: [V256]
Exit stack: []

================================

Block 0x4ac
[0x4ac:0x4c9]
---
Predecessors: [0x49e]
Successors: []
---
0x4ac STOP
0x4ad MISSING 0xcb
0x4ae MISSING 0x5e
0x4af DUP16
0x4b0 PUSH17 0x74c4ce214e8ea206614230d08a13d03fc5
0x4c2 PUSH7 0xc5b7423cb0029
---
0x4ac: STOP 
0x4ad: MISSING 0xcb
0x4ae: MISSING 0x5e
0x4b0: V258 = 0x74c4ce214e8ea206614230d08a13d03fc5
0x4c2: V259 = 0xc5b7423cb0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc5b7423cb0029, 0x74c4ce214e8ea206614230d08a13d03fc5, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15]
Exit stack: []

================================

Function 0:
Public function signature: 0x821de3
Entry block: 0xc7
Exit block: 0xda
Body: 0xc7, 0xce, 0xd2, 0xda, 0x16a

Function 1:
Public function signature: 0x3ef13367
Entry block: 0x11c
Exit block: 0x3b1
Body: 0x11c, 0x123, 0x127, 0x153, 0x18f, 0x1eb, 0x1ef, 0x294, 0x298, 0x2a5, 0x2a9, 0x2bf, 0x2c3, 0x38b, 0x38f, 0x39c, 0x3a0, 0x3b1, 0x3b5, 0x421, 0x422

Function 2:
Public function signature: 0x6b9f96ea
Entry block: 0x155
Exit block: 0x168
Body: 0x155, 0x15c, 0x160, 0x168, 0x428, 0x497, 0x49b, 0x49c

Function 3:
Public fallback function
Entry block: 0x54
Exit block: 0xc5
Body: 0x54, 0x55, 0xc0, 0xc4, 0xc5

