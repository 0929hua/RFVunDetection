Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x46]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x46
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x46
0xa: JUMPI 0x46 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x4f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x26d2d1b3
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x4f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x26d2d1b3
0x20: V14 = EQ V12 0x26d2d1b3
0x21: V15 = 0x4f
0x24: JUMPI 0x4f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x9d]
---
0x25 DUP1
0x26 PUSH4 0x4c125e79
0x2b EQ
0x2c PUSH2 0x9d
0x2f JUMPI
---
0x26: V16 = 0x4c125e79
0x2b: V17 = EQ 0x4c125e79 V12
0x2c: V18 = 0x9d
0x2f: JUMPI 0x9d V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xbc]
---
0x30 DUP1
0x31 PUSH4 0xedad1978
0x36 EQ
0x37 PUSH2 0xbc
0x3a JUMPI
---
0x31: V19 = 0xedad1978
0x36: V20 = EQ 0xedad1978 V12
0x37: V21 = 0xbc
0x3a: JUMPI 0xbc V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xe8]
---
0x3b DUP1
0x3c PUSH4 0xfee36947
0x41 EQ
0x42 PUSH2 0xe8
0x45 JUMPI
---
0x3c: V22 = 0xfee36947
0x41: V23 = EQ 0xfee36947 V12
0x42: V24 = 0xe8
0x45: JUMPI 0xe8 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x49]
---
Predecessors: [0x0, 0x3b]
Successors: [0x4a]
---
0x46 JUMPDEST
0x47 PUSH2 0x4d
---
0x46: JUMPDEST 
0x47: V25 = 0x4d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d]
Exit stack: [V12, 0x4d]

================================

Block 0x4a
[0x4a:0x4a]
---
Predecessors: [0x46]
Successors: [0x4b]
---
0x4a JUMPDEST
---
0x4a: JUMPDEST 
---
Entry stack: [V12, 0x4d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d]

================================

Block 0x4b
[0x4b:0x4c]
---
Predecessors: [0x4a]
Successors: [0x4d]
---
0x4b JUMPDEST
0x4c JUMP
---
0x4b: JUMPDEST 
0x4c: JUMP 0x4d
---
Entry stack: [V12, 0x4d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d
[0x4d:0x4e]
---
Predecessors: [0x4b, 0x546, 0x7d3, 0x9e6]
Successors: []
---
0x4d JUMPDEST
0x4e STOP
---
0x4d: JUMPDEST 
0x4e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f
[0x4f:0x9a]
---
Predecessors: [0xb]
Successors: [0x110]
---
0x4f JUMPDEST
0x50 PUSH1 0x40
0x52 DUP1
0x53 MLOAD
0x54 PUSH1 0x24
0x56 DUP1
0x57 CALLDATALOAD
0x58 PUSH1 0x4
0x5a DUP2
0x5b DUP2
0x5c ADD
0x5d CALLDATALOAD
0x5e PUSH1 0x20
0x60 DUP2
0x61 DUP2
0x62 MUL
0x63 DUP7
0x64 DUP2
0x65 ADD
0x66 DUP3
0x67 ADD
0x68 SWAP1
0x69 SWAP8
0x6a MSTORE
0x6b DUP2
0x6c DUP7
0x6d MSTORE
0x6e PUSH2 0x4d
0x71 SWAP7
0x72 PUSH1 0xff
0x74 DUP5
0x75 CALLDATALOAD
0x76 AND
0x77 SWAP7
0x78 SWAP4
0x79 SWAP6
0x7a PUSH1 0x44
0x7c SWAP6
0x7d ADD
0x7e SWAP3
0x7f SWAP2
0x80 DUP3
0x81 SWAP2
0x82 SWAP1
0x83 DUP6
0x84 ADD
0x85 SWAP1
0x86 DUP5
0x87 SWAP1
0x88 DUP1
0x89 DUP3
0x8a DUP5
0x8b CALLDATACOPY
0x8c POP
0x8d SWAP5
0x8e SWAP7
0x8f POP
0x90 PUSH2 0x110
0x93 SWAP6
0x94 POP
0x95 POP
0x96 POP
0x97 POP
0x98 POP
0x99 POP
0x9a JUMP
---
0x4f: JUMPDEST 
0x50: V26 = 0x40
0x53: V27 = M[0x40]
0x54: V28 = 0x24
0x57: V29 = CALLDATALOAD 0x24
0x58: V30 = 0x4
0x5c: V31 = ADD 0x4 V29
0x5d: V32 = CALLDATALOAD V31
0x5e: V33 = 0x20
0x62: V34 = MUL 0x20 V32
0x65: V35 = ADD V34 V27
0x67: V36 = ADD 0x20 V35
0x6a: M[0x40] = V36
0x6d: M[V27] = V32
0x6e: V37 = 0x4d
0x72: V38 = 0xff
0x75: V39 = CALLDATALOAD 0x4
0x76: V40 = AND V39 0xff
0x7a: V41 = 0x44
0x7d: V42 = ADD V29 0x24
0x84: V43 = ADD V27 0x20
0x8b: CALLDATACOPY V43 V42 V34
0x90: V44 = 0x110
0x9a: JUMP 0x110
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d, V40, V27]
Exit stack: [V12, 0x4d, V40, V27]

================================

Block 0x9b
[0x9b:0x9c]
---
Predecessors: []
Successors: []
---
0x9b JUMPDEST
0x9c STOP
---
0x9b: JUMPDEST 
0x9c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9d
[0x9d:0xa3]
---
Predecessors: [0x25]
Successors: [0xa4, 0xa5]
---
0x9d JUMPDEST
0x9e CALLVALUE
0x9f ISZERO
0xa0 PUSH2 0xa5
0xa3 JUMPI
---
0x9d: JUMPDEST 
0x9e: V45 = CALLVALUE
0x9f: V46 = ISZERO V45
0xa0: V47 = 0xa5
0xa3: JUMPI 0xa5 V46
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa4
[0xa4:0xa4]
---
Predecessors: [0x9d]
Successors: []
---
0xa4 INVALID
---
0xa4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa5
[0xa5:0xb9]
---
Predecessors: [0x9d]
Successors: [0x54b]
---
0xa5 JUMPDEST
0xa6 PUSH2 0x4d
0xa9 PUSH8 0xffffffffffffffff
0xb2 PUSH1 0x4
0xb4 CALLDATALOAD
0xb5 AND
0xb6 PUSH2 0x54b
0xb9 JUMP
---
0xa5: JUMPDEST 
0xa6: V48 = 0x4d
0xa9: V49 = 0xffffffffffffffff
0xb2: V50 = 0x4
0xb4: V51 = CALLDATALOAD 0x4
0xb5: V52 = AND V51 0xffffffffffffffff
0xb6: V53 = 0x54b
0xb9: JUMP 0x54b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d, V52]
Exit stack: [V12, 0x4d, V52]

================================

Block 0xba
[0xba:0xbb]
---
Predecessors: []
Successors: []
---
0xba JUMPDEST
0xbb STOP
---
0xba: JUMPDEST 
0xbb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0x30]
Successors: [0xc3, 0xc4]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc4
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V54 = CALLVALUE
0xbe: V55 = ISZERO V54
0xbf: V56 = 0xc4
0xc2: JUMPI 0xc4 V55
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3
[0xc3:0xc3]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 INVALID
---
0xc3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc4
[0xc4:0xcb]
---
Predecessors: [0xbc]
Successors: [0x7d7]
---
0xc4 JUMPDEST
0xc5 PUSH2 0xcc
0xc8 PUSH2 0x7d7
0xcb JUMP
---
0xc4: JUMPDEST 
0xc5: V57 = 0xcc
0xc8: V58 = 0x7d7
0xcb: JUMP 0x7d7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xcc]
Exit stack: [V12, 0xcc]

================================

Block 0xcc
[0xcc:0xe7]
---
Predecessors: [0x7d7]
Successors: []
---
0xcc JUMPDEST
0xcd PUSH1 0x40
0xcf DUP1
0xd0 MLOAD
0xd1 PUSH1 0x1
0xd3 PUSH1 0xa0
0xd5 PUSH1 0x2
0xd7 EXP
0xd8 SUB
0xd9 SWAP1
0xda SWAP3
0xdb AND
0xdc DUP3
0xdd MSTORE
0xde MLOAD
0xdf SWAP1
0xe0 DUP2
0xe1 SWAP1
0xe2 SUB
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP1
0xe7 RETURN
---
0xcc: JUMPDEST 
0xcd: V59 = 0x40
0xd0: V60 = M[0x40]
0xd1: V61 = 0x1
0xd3: V62 = 0xa0
0xd5: V63 = 0x2
0xd7: V64 = EXP 0x2 0xa0
0xd8: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb: V66 = AND V628 0xffffffffffffffffffffffffffffffffffffffff
0xdd: M[V60] = V66
0xde: V67 = M[0x40]
0xe2: V68 = SUB V60 V67
0xe3: V69 = 0x20
0xe5: V70 = ADD 0x20 V68
0xe7: RETURN V67 V70
---
Entry stack: [V12, 0xcc, V628]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xcc]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0x3b]
Successors: [0xef, 0xf0]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea ISZERO
0xeb PUSH2 0xf0
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V71 = CALLVALUE
0xea: V72 = ISZERO V71
0xeb: V73 = 0xf0
0xee: JUMPI 0xf0 V72
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0xef]
---
Predecessors: [0xe8]
Successors: []
---
0xef INVALID
---
0xef: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf0
[0xf0:0x10d]
---
Predecessors: [0xe8]
Successors: [0x7e6]
---
0xf0 JUMPDEST
0xf1 PUSH2 0x4d
0xf4 PUSH8 0xffffffffffffffff
0xfd PUSH1 0x4
0xff CALLDATALOAD
0x100 DUP2
0x101 AND
0x102 SWAP1
0x103 PUSH1 0x24
0x105 CALLDATALOAD
0x106 AND
0x107 PUSH1 0x44
0x109 CALLDATALOAD
0x10a PUSH2 0x7e6
0x10d JUMP
---
0xf0: JUMPDEST 
0xf1: V74 = 0x4d
0xf4: V75 = 0xffffffffffffffff
0xfd: V76 = 0x4
0xff: V77 = CALLDATALOAD 0x4
0x101: V78 = AND 0xffffffffffffffff V77
0x103: V79 = 0x24
0x105: V80 = CALLDATALOAD 0x24
0x106: V81 = AND V80 0xffffffffffffffff
0x107: V82 = 0x44
0x109: V83 = CALLDATALOAD 0x44
0x10a: V84 = 0x7e6
0x10d: JUMP 0x7e6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d, V78, V81, V83]
Exit stack: [V12, 0x4d, V78, V81, V83]

================================

Block 0x10e
[0x10e:0x10f]
---
Predecessors: []
Successors: []
---
0x10e JUMPDEST
0x10f STOP
---
0x10e: JUMPDEST 
0x10f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x110
[0x110:0x121]
---
Predecessors: [0x4f]
Successors: [0x122, 0x204]
---
0x110 JUMPDEST
0x111 PUSH1 0x0
0x113 PUSH7 0x8e1bc9bf04000
0x11b CALLVALUE
0x11c LT
0x11d ISZERO
0x11e PUSH2 0x204
0x121 JUMPI
---
0x110: JUMPDEST 
0x111: V85 = 0x0
0x113: V86 = 0x8e1bc9bf04000
0x11b: V87 = CALLVALUE
0x11c: V88 = LT V87 0x8e1bc9bf04000
0x11d: V89 = ISZERO V88
0x11e: V90 = 0x204
0x121: JUMPI 0x204 V89
---
Entry stack: [V12, 0x4d, V40, V27]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x4d, V40, V27, 0x0]

================================

Block 0x122
[0x122:0x148]
---
Predecessors: [0x110]
Successors: [0x149, 0x14d]
---
0x122 PUSH1 0x40
0x124 MLOAD
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d CALLER
0x12e AND
0x12f SWAP1
0x130 CALLVALUE
0x131 SWAP1
0x132 PUSH1 0x0
0x134 DUP2
0x135 DUP2
0x136 DUP2
0x137 DUP6
0x138 DUP8
0x139 PUSH2 0x8502
0x13c GAS
0x13d SUB
0x13e CALL
0x13f SWAP3
0x140 POP
0x141 POP
0x142 POP
0x143 ISZERO
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x122: V91 = 0x40
0x124: V92 = M[0x40]
0x125: V93 = 0x1
0x127: V94 = 0xa0
0x129: V95 = 0x2
0x12b: V96 = EXP 0x2 0xa0
0x12c: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d: V98 = CALLER
0x12e: V99 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x130: V100 = CALLVALUE
0x132: V101 = 0x0
0x139: V102 = 0x8502
0x13c: V103 = GAS
0x13d: V104 = SUB V103 0x8502
0x13e: V105 = CALL V104 V99 V100 V92 0x0 V92 0x0
0x143: V106 = ISZERO V105
0x144: V107 = ISZERO V106
0x145: V108 = 0x14d
0x148: JUMPI 0x14d V107
---
Entry stack: [V12, 0x4d, V40, V27, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, 0x0]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x122]
Successors: []
---
0x149 PUSH2 0x0
0x14c JUMP
---
0x149: V109 = 0x0
0x14c: THROW 
---
Entry stack: [V12, 0x4d, V40, V27, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, 0x0]

================================

Block 0x14d
[0x14d:0x1c9]
---
Predecessors: [0x122]
Successors: [0x1ca, 0x1ea]
---
0x14d JUMPDEST
0x14e PUSH32 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x16f PUSH1 0x0
0x171 NOT
0x172 CALLER
0x173 DUP5
0x174 MLOAD
0x175 DUP6
0x176 PUSH1 0x40
0x178 MLOAD
0x179 DUP1
0x17a DUP6
0x17b PUSH1 0x7
0x17d SIGNEXTEND
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 ADD
0x183 DUP5
0x184 PUSH1 0x1
0x186 PUSH1 0xa0
0x188 PUSH1 0x2
0x18a EXP
0x18b SUB
0x18c AND
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 AND
0x196 DUP2
0x197 MSTORE
0x198 PUSH1 0x20
0x19a ADD
0x19b DUP4
0x19c DUP2
0x19d MSTORE
0x19e PUSH1 0x20
0x1a0 ADD
0x1a1 DUP1
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 DUP3
0x1a6 DUP2
0x1a7 SUB
0x1a8 DUP3
0x1a9 MSTORE
0x1aa DUP4
0x1ab DUP2
0x1ac DUP2
0x1ad MLOAD
0x1ae DUP2
0x1af MSTORE
0x1b0 PUSH1 0x20
0x1b2 ADD
0x1b3 SWAP2
0x1b4 POP
0x1b5 DUP1
0x1b6 MLOAD
0x1b7 SWAP1
0x1b8 PUSH1 0x20
0x1ba ADD
0x1bb SWAP1
0x1bc PUSH1 0x20
0x1be MUL
0x1bf DUP1
0x1c0 DUP4
0x1c1 DUP4
0x1c2 PUSH1 0x0
0x1c4 DUP4
0x1c5 EQ
0x1c6 PUSH2 0x1ea
0x1c9 JUMPI
---
0x14d: JUMPDEST 
0x14e: V110 = 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x16f: V111 = 0x0
0x171: V112 = NOT 0x0
0x172: V113 = CALLER
0x174: V114 = M[V27]
0x176: V115 = 0x40
0x178: V116 = M[0x40]
0x17b: V117 = 0x7
0x17d: V118 = SIGNEXTEND 0x7 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x17f: M[V116] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x180: V119 = 0x20
0x182: V120 = ADD 0x20 V116
0x184: V121 = 0x1
0x186: V122 = 0xa0
0x188: V123 = 0x2
0x18a: V124 = EXP 0x2 0xa0
0x18b: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18c: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x18d: V127 = 0x1
0x18f: V128 = 0xa0
0x191: V129 = 0x2
0x193: V130 = EXP 0x2 0xa0
0x194: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x197: M[V120] = V132
0x198: V133 = 0x20
0x19a: V134 = ADD 0x20 V120
0x19d: M[V134] = V114
0x19e: V135 = 0x20
0x1a0: V136 = ADD 0x20 V134
0x1a2: V137 = 0x20
0x1a4: V138 = ADD 0x20 V136
0x1a7: V139 = SUB V138 V116
0x1a9: M[V136] = V139
0x1ad: V140 = M[V27]
0x1af: M[V138] = V140
0x1b0: V141 = 0x20
0x1b2: V142 = ADD 0x20 V138
0x1b6: V143 = M[V27]
0x1b8: V144 = 0x20
0x1ba: V145 = ADD 0x20 V27
0x1bc: V146 = 0x20
0x1be: V147 = MUL 0x20 V143
0x1c2: V148 = 0x0
0x1c5: V149 = EQ V147 0x0
0x1c6: V150 = 0x1ea
0x1c9: JUMPI 0x1ea V149
---
Entry stack: [V12, 0x4d, V40, V27, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, V113, V114, S1, V116, V136, V142, V145, V147, V147, V142, V145]
Exit stack: [V12, 0x4d, V40, V27, 0x0, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, V113, V114, V27, V116, V136, V142, V145, V147, V147, V142, V145]

================================

Block 0x1ca
[0x1ca:0x1d7]
---
Predecessors: [0x14d, 0x1d8, 0x40b]
Successors: [0x1d8, 0x1ea]
---
0x1ca JUMPDEST
0x1cb DUP1
0x1cc MLOAD
0x1cd DUP3
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 DUP4
0x1d2 GT
0x1d3 ISZERO
0x1d4 PUSH2 0x1ea
0x1d7 JUMPI
---
0x1ca: JUMPDEST 
0x1cc: V151 = M[S0]
0x1ce: M[S1] = V151
0x1cf: V152 = 0x20
0x1d2: V153 = GT S2 0x20
0x1d3: V154 = ISZERO V153
0x1d4: V155 = 0x1ea
0x1d7: JUMPI 0x1ea V154
---
Entry stack: [V12, 0x4d, V40, V27, S13, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, {0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}, S10, S9, V27, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x4d, V40, V27, S13, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, {0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}, S10, S9, V27, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1d8
[0x1d8:0x1e9]
---
Predecessors: [0x1ca]
Successors: [0x1ca]
---
0x1d8 PUSH1 0x1f
0x1da NOT
0x1db SWAP1
0x1dc SWAP3
0x1dd ADD
0x1de SWAP2
0x1df PUSH1 0x20
0x1e1 SWAP2
0x1e2 DUP3
0x1e3 ADD
0x1e4 SWAP2
0x1e5 ADD
0x1e6 PUSH2 0x1ca
0x1e9 JUMP
---
0x1d8: V156 = 0x1f
0x1da: V157 = NOT 0x1f
0x1dd: V158 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1df: V159 = 0x20
0x1e3: V160 = ADD 0x20 S1
0x1e5: V161 = ADD 0x20 S0
0x1e6: V162 = 0x1ca
0x1e9: JUMP 0x1ca
---
Entry stack: [V12, 0x4d, V40, V27, S13, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, {0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}, S10, S9, V27, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V158, V160, V161]
Exit stack: [V12, 0x4d, V40, V27, S13, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, {0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}, S10, S9, V27, S7, S6, S5, S4, S3, V158, V160, V161]

================================

Block 0x1ea
[0x1ea:0x203]
---
Predecessors: [0x14d, 0x1ca, 0x380, 0x3fd]
Successors: [0x546]
---
0x1ea JUMPDEST
0x1eb POP
0x1ec POP
0x1ed POP
0x1ee SWAP1
0x1ef POP
0x1f0 ADD
0x1f1 SWAP6
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 POP
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb DUP1
0x1fc SWAP2
0x1fd SUB
0x1fe SWAP1
0x1ff LOG1
0x200 PUSH2 0x546
0x203 JUMP
---
0x1ea: JUMPDEST 
0x1f0: V163 = ADD S3 S5
0x1f8: V164 = 0x40
0x1fa: V165 = M[0x40]
0x1fd: V166 = SUB V163 V165
0x1ff: LOG V165 V166 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x200: V167 = 0x546
0x203: JUMP 0x546
---
Entry stack: [V12, 0x4d, V40, V27, S13, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, {0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}, S10, S9, V27, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, S13]

================================

Block 0x204
[0x204:0x2ef]
---
Predecessors: [0x110]
Successors: [0x2f0, 0x310]
---
0x204 JUMPDEST
0x205 PUSH1 0x0
0x207 DUP1
0x208 SLOAD
0x209 PUSH1 0x40
0x20b DUP1
0x20c MLOAD
0x20d PUSH32 0x726573706f6e73652875696e7436342c75696e7436342c627974657333322900
0x22e DUP2
0x22f MSTORE
0x230 DUP2
0x231 MLOAD
0x232 SWAP1
0x233 DUP2
0x234 SWAP1
0x235 SUB
0x236 PUSH1 0x1f
0x238 ADD
0x239 DUP2
0x23a SHA3
0x23b PUSH1 0x20
0x23d SWAP2
0x23e DUP3
0x23f ADD
0x240 DUP6
0x241 SWAP1
0x242 MSTORE
0x243 SWAP2
0x244 MLOAD
0x245 PUSH32 0x58487bee00000000000000000000000000000000000000000000000000000000
0x266 DUP2
0x267 MSTORE
0x268 PUSH1 0xff
0x26a DUP9
0x26b AND
0x26c PUSH1 0x4
0x26e DUP3
0x26f ADD
0x270 SWAP1
0x271 DUP2
0x272 MSTORE
0x273 ADDRESS
0x274 PUSH1 0x1
0x276 PUSH1 0xa0
0x278 PUSH1 0x2
0x27a EXP
0x27b SUB
0x27c DUP2
0x27d DUP2
0x27e AND
0x27f PUSH1 0x24
0x281 DUP6
0x282 ADD
0x283 MSTORE
0x284 PUSH32 0xffffffff00000000000000000000000000000000000000000000000000000000
0x2a5 DUP7
0x2a6 AND
0x2a7 PUSH1 0x44
0x2a9 DUP6
0x2aa ADD
0x2ab MSTORE
0x2ac PUSH1 0x64
0x2ae DUP5
0x2af ADD
0x2b0 DUP9
0x2b1 SWAP1
0x2b2 MSTORE
0x2b3 PUSH1 0xa0
0x2b5 PUSH1 0x84
0x2b7 DUP6
0x2b8 ADD
0x2b9 SWAP1
0x2ba DUP2
0x2bb MSTORE
0x2bc DUP11
0x2bd MLOAD
0x2be PUSH1 0xa4
0x2c0 DUP7
0x2c1 ADD
0x2c2 MSTORE
0x2c3 DUP11
0x2c4 MLOAD
0x2c5 SWAP2
0x2c6 SWAP1
0x2c7 SWAP8
0x2c8 AND
0x2c9 SWAP8
0x2ca PUSH4 0x58487bee
0x2cf SWAP8
0x2d0 CALLVALUE
0x2d1 SWAP8
0x2d2 DUP14
0x2d3 SWAP8
0x2d4 SWAP5
0x2d5 SWAP7
0x2d6 SWAP1
0x2d7 SWAP6
0x2d8 SWAP3
0x2d9 SWAP5
0x2da DUP14
0x2db SWAP5
0x2dc PUSH1 0xc4
0x2de SWAP1
0x2df SWAP3
0x2e0 ADD
0x2e1 SWAP2
0x2e2 DUP2
0x2e3 DUP7
0x2e4 ADD
0x2e5 SWAP2
0x2e6 MUL
0x2e7 DUP1
0x2e8 DUP4
0x2e9 DUP4
0x2ea DUP3
0x2eb ISZERO
0x2ec PUSH2 0x310
0x2ef JUMPI
---
0x204: JUMPDEST 
0x205: V168 = 0x0
0x208: V169 = S[0x0]
0x209: V170 = 0x40
0x20c: V171 = M[0x40]
0x20d: V172 = 0x726573706f6e73652875696e7436342c75696e7436342c627974657333322900
0x22f: M[V171] = 0x726573706f6e73652875696e7436342c75696e7436342c627974657333322900
0x231: V173 = M[0x40]
0x235: V174 = SUB V171 V173
0x236: V175 = 0x1f
0x238: V176 = ADD 0x1f V174
0x23a: V177 = SHA3 V173 V176
0x23b: V178 = 0x20
0x23f: V179 = ADD 0x20 V173
0x242: M[V179] = 0x0
0x244: V180 = M[0x40]
0x245: V181 = 0x58487bee00000000000000000000000000000000000000000000000000000000
0x267: M[V180] = 0x58487bee00000000000000000000000000000000000000000000000000000000
0x268: V182 = 0xff
0x26b: V183 = AND V40 0xff
0x26c: V184 = 0x4
0x26f: V185 = ADD V180 0x4
0x272: M[V185] = V183
0x273: V186 = ADDRESS
0x274: V187 = 0x1
0x276: V188 = 0xa0
0x278: V189 = 0x2
0x27a: V190 = EXP 0x2 0xa0
0x27b: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27e: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x27f: V193 = 0x24
0x282: V194 = ADD V180 0x24
0x283: M[V194] = V192
0x284: V195 = 0xffffffff00000000000000000000000000000000000000000000000000000000
0x2a6: V196 = AND V177 0xffffffff00000000000000000000000000000000000000000000000000000000
0x2a7: V197 = 0x44
0x2aa: V198 = ADD V180 0x44
0x2ab: M[V198] = V196
0x2ac: V199 = 0x64
0x2af: V200 = ADD V180 0x64
0x2b2: M[V200] = 0x0
0x2b3: V201 = 0xa0
0x2b5: V202 = 0x84
0x2b8: V203 = ADD V180 0x84
0x2bb: M[V203] = 0xa0
0x2bd: V204 = M[V27]
0x2be: V205 = 0xa4
0x2c1: V206 = ADD V180 0xa4
0x2c2: M[V206] = V204
0x2c4: V207 = M[V27]
0x2c8: V208 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V209 = 0x58487bee
0x2d0: V210 = CALLVALUE
0x2dc: V211 = 0xc4
0x2e0: V212 = ADD V180 0xc4
0x2e4: V213 = ADD V27 0x20
0x2e6: V214 = MUL 0x20 V207
0x2eb: V215 = ISZERO V214
0x2ec: V216 = 0x310
0x2ef: JUMPI 0x310 V215
---
Entry stack: [V12, 0x4d, V40, V27, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V208, 0x58487bee, V210, S2, V186, V177, 0x0, S1, V185, V203, V212, V213, V214, V214, V212, V213]
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, V214, V212, V213]

================================

Block 0x2f0
[0x2f0:0x2fd]
---
Predecessors: [0x204, 0x2fe]
Successors: [0x2fe, 0x310]
---
0x2f0 JUMPDEST
0x2f1 DUP1
0x2f2 MLOAD
0x2f3 DUP3
0x2f4 MSTORE
0x2f5 PUSH1 0x20
0x2f7 DUP4
0x2f8 GT
0x2f9 ISZERO
0x2fa PUSH2 0x310
0x2fd JUMPI
---
0x2f0: JUMPDEST 
0x2f2: V217 = M[S0]
0x2f4: M[S1] = V217
0x2f5: V218 = 0x20
0x2f8: V219 = GT S2 0x20
0x2f9: V220 = ISZERO V219
0x2fa: V221 = 0x310
0x2fd: JUMPI 0x310 V220
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, S2, S1, S0]

================================

Block 0x2fe
[0x2fe:0x30f]
---
Predecessors: [0x2f0]
Successors: [0x2f0]
---
0x2fe PUSH1 0x1f
0x300 NOT
0x301 SWAP1
0x302 SWAP3
0x303 ADD
0x304 SWAP2
0x305 PUSH1 0x20
0x307 SWAP2
0x308 DUP3
0x309 ADD
0x30a SWAP2
0x30b ADD
0x30c PUSH2 0x2f0
0x30f JUMP
---
0x2fe: V222 = 0x1f
0x300: V223 = NOT 0x1f
0x303: V224 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x305: V225 = 0x20
0x309: V226 = ADD 0x20 S1
0x30b: V227 = ADD 0x20 S0
0x30c: V228 = 0x2f0
0x30f: JUMP 0x2f0
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, S2, S1, S0]
Stack pops: 3
Stack additions: [V224, V226, V227]
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, V224, V226, V227]

================================

Block 0x310
[0x310:0x331]
---
Predecessors: [0x204, 0x2f0]
Successors: [0x332, 0x333]
---
0x310 JUMPDEST
0x311 POP
0x312 POP
0x313 POP
0x314 SWAP1
0x315 POP
0x316 ADD
0x317 SWAP7
0x318 POP
0x319 POP
0x31a POP
0x31b POP
0x31c POP
0x31d POP
0x31e POP
0x31f PUSH1 0x20
0x321 PUSH1 0x40
0x323 MLOAD
0x324 DUP1
0x325 DUP4
0x326 SUB
0x327 DUP2
0x328 DUP6
0x329 DUP9
0x32a DUP1
0x32b EXTCODESIZE
0x32c ISZERO
0x32d ISZERO
0x32e PUSH2 0x333
0x331 JUMPI
---
0x310: JUMPDEST 
0x316: V229 = ADD V214 V212
0x31f: V230 = 0x20
0x321: V231 = 0x40
0x323: V232 = M[0x40]
0x326: V233 = SUB V229 V232
0x32b: V234 = EXTCODESIZE V208
0x32c: V235 = ISZERO V234
0x32d: V236 = ISZERO V235
0x32e: V237 = 0x333
0x331: JUMPI 0x333 V236
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V40, V186, V177, 0x0, V27, V185, V203, V212, V213, V214, S2, S1, S0]
Stack pops: 16
Stack additions: [S15, S14, S13, V229, 0x20, V232, V233, V232, S13, S15]
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229, 0x20, V232, V233, V232, V210, V208]

================================

Block 0x332
[0x332:0x332]
---
Predecessors: [0x310]
Successors: []
---
0x332 INVALID
---
0x332: INVALID 
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229, 0x20, V232, V233, V232, V210, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229, 0x20, V232, V233, V232, V210, V208]

================================

Block 0x333
[0x333:0x33f]
---
Predecessors: [0x310]
Successors: [0x340, 0x341]
---
0x333 JUMPDEST
0x334 PUSH2 0x235a
0x337 GAS
0x338 SUB
0x339 CALL
0x33a ISZERO
0x33b ISZERO
0x33c PUSH2 0x341
0x33f JUMPI
---
0x333: JUMPDEST 
0x334: V238 = 0x235a
0x337: V239 = GAS
0x338: V240 = SUB V239 0x235a
0x339: V241 = CALL V240 V208 V210 V232 V233 V232 0x20
0x33a: V242 = ISZERO V241
0x33b: V243 = ISZERO V242
0x33c: V244 = 0x341
0x33f: JUMPI 0x341 V243
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229, 0x20, V232, V233, V232, V210, V208]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229]

================================

Block 0x340
[0x340:0x340]
---
Predecessors: [0x333]
Successors: []
---
0x340 INVALID
---
0x340: INVALID 
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229]

================================

Block 0x341
[0x341:0x354]
---
Predecessors: [0x333]
Successors: [0x355, 0x437]
---
0x341 JUMPDEST
0x342 POP
0x343 POP
0x344 PUSH1 0x40
0x346 MLOAD
0x347 MLOAD
0x348 SWAP3
0x349 POP
0x34a POP
0x34b PUSH1 0x0
0x34d DUP3
0x34e SGT
0x34f SWAP1
0x350 POP
0x351 PUSH2 0x437
0x354 JUMPI
---
0x341: JUMPDEST 
0x344: V245 = 0x40
0x346: V246 = M[0x40]
0x347: V247 = M[V246]
0x34b: V248 = 0x0
0x34e: V249 = SGT V247 0x0
0x351: V250 = 0x437
0x354: JUMPI 0x437 V249
---
Entry stack: [V12, 0x4d, V40, V27, 0x0, V208, 0x58487bee, V210, V229]
Stack pops: 5
Stack additions: [V247]
Exit stack: [V12, 0x4d, V40, V27, V247]

================================

Block 0x355
[0x355:0x37b]
---
Predecessors: [0x341]
Successors: [0x37c, 0x380]
---
0x355 PUSH1 0x40
0x357 MLOAD
0x358 PUSH1 0x1
0x35a PUSH1 0xa0
0x35c PUSH1 0x2
0x35e EXP
0x35f SUB
0x360 CALLER
0x361 AND
0x362 SWAP1
0x363 CALLVALUE
0x364 SWAP1
0x365 PUSH1 0x0
0x367 DUP2
0x368 DUP2
0x369 DUP2
0x36a DUP6
0x36b DUP8
0x36c PUSH2 0x8502
0x36f GAS
0x370 SUB
0x371 CALL
0x372 SWAP3
0x373 POP
0x374 POP
0x375 POP
0x376 ISZERO
0x377 ISZERO
0x378 PUSH2 0x380
0x37b JUMPI
---
0x355: V251 = 0x40
0x357: V252 = M[0x40]
0x358: V253 = 0x1
0x35a: V254 = 0xa0
0x35c: V255 = 0x2
0x35e: V256 = EXP 0x2 0xa0
0x35f: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x360: V258 = CALLER
0x361: V259 = AND V258 0xffffffffffffffffffffffffffffffffffffffff
0x363: V260 = CALLVALUE
0x365: V261 = 0x0
0x36c: V262 = 0x8502
0x36f: V263 = GAS
0x370: V264 = SUB V263 0x8502
0x371: V265 = CALL V264 V259 V260 V252 0x0 V252 0x0
0x376: V266 = ISZERO V265
0x377: V267 = ISZERO V266
0x378: V268 = 0x380
0x37b: JUMPI 0x380 V267
---
Entry stack: [V12, 0x4d, V40, V27, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, V247]

================================

Block 0x37c
[0x37c:0x37f]
---
Predecessors: [0x355]
Successors: []
---
0x37c PUSH2 0x0
0x37f JUMP
---
0x37c: V269 = 0x0
0x37f: THROW 
---
Entry stack: [V12, 0x4d, V40, V27, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, V247]

================================

Block 0x380
[0x380:0x3fc]
---
Predecessors: [0x355]
Successors: [0x1ea, 0x3fd]
---
0x380 JUMPDEST
0x381 PUSH32 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x3a2 PUSH1 0x1
0x3a4 NOT
0x3a5 CALLER
0x3a6 DUP5
0x3a7 MLOAD
0x3a8 DUP6
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac DUP1
0x3ad DUP6
0x3ae PUSH1 0x7
0x3b0 SIGNEXTEND
0x3b1 DUP2
0x3b2 MSTORE
0x3b3 PUSH1 0x20
0x3b5 ADD
0x3b6 DUP5
0x3b7 PUSH1 0x1
0x3b9 PUSH1 0xa0
0x3bb PUSH1 0x2
0x3bd EXP
0x3be SUB
0x3bf AND
0x3c0 PUSH1 0x1
0x3c2 PUSH1 0xa0
0x3c4 PUSH1 0x2
0x3c6 EXP
0x3c7 SUB
0x3c8 AND
0x3c9 DUP2
0x3ca MSTORE
0x3cb PUSH1 0x20
0x3cd ADD
0x3ce DUP4
0x3cf DUP2
0x3d0 MSTORE
0x3d1 PUSH1 0x20
0x3d3 ADD
0x3d4 DUP1
0x3d5 PUSH1 0x20
0x3d7 ADD
0x3d8 DUP3
0x3d9 DUP2
0x3da SUB
0x3db DUP3
0x3dc MSTORE
0x3dd DUP4
0x3de DUP2
0x3df DUP2
0x3e0 MLOAD
0x3e1 DUP2
0x3e2 MSTORE
0x3e3 PUSH1 0x20
0x3e5 ADD
0x3e6 SWAP2
0x3e7 POP
0x3e8 DUP1
0x3e9 MLOAD
0x3ea SWAP1
0x3eb PUSH1 0x20
0x3ed ADD
0x3ee SWAP1
0x3ef PUSH1 0x20
0x3f1 MUL
0x3f2 DUP1
0x3f3 DUP4
0x3f4 DUP4
0x3f5 PUSH1 0x0
0x3f7 DUP4
0x3f8 EQ
0x3f9 PUSH2 0x1ea
0x3fc JUMPI
---
0x380: JUMPDEST 
0x381: V270 = 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x3a2: V271 = 0x1
0x3a4: V272 = NOT 0x1
0x3a5: V273 = CALLER
0x3a7: V274 = M[V27]
0x3a9: V275 = 0x40
0x3ab: V276 = M[0x40]
0x3ae: V277 = 0x7
0x3b0: V278 = SIGNEXTEND 0x7 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
0x3b2: M[V276] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3b3: V279 = 0x20
0x3b5: V280 = ADD 0x20 V276
0x3b7: V281 = 0x1
0x3b9: V282 = 0xa0
0x3bb: V283 = 0x2
0x3bd: V284 = EXP 0x2 0xa0
0x3be: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bf: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x3c0: V287 = 0x1
0x3c2: V288 = 0xa0
0x3c4: V289 = 0x2
0x3c6: V290 = EXP 0x2 0xa0
0x3c7: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c8: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x3ca: M[V280] = V292
0x3cb: V293 = 0x20
0x3cd: V294 = ADD 0x20 V280
0x3d0: M[V294] = V274
0x3d1: V295 = 0x20
0x3d3: V296 = ADD 0x20 V294
0x3d5: V297 = 0x20
0x3d7: V298 = ADD 0x20 V296
0x3da: V299 = SUB V298 V276
0x3dc: M[V296] = V299
0x3e0: V300 = M[V27]
0x3e2: M[V298] = V300
0x3e3: V301 = 0x20
0x3e5: V302 = ADD 0x20 V298
0x3e9: V303 = M[V27]
0x3eb: V304 = 0x20
0x3ed: V305 = ADD 0x20 V27
0x3ef: V306 = 0x20
0x3f1: V307 = MUL 0x20 V303
0x3f5: V308 = 0x0
0x3f8: V309 = EQ V307 0x0
0x3f9: V310 = 0x1ea
0x3fc: JUMPI 0x1ea V309
---
Entry stack: [V12, 0x4d, V40, V27, V247]
Stack pops: 2
Stack additions: [S1, S0, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V273, V274, S1, V276, V296, V302, V305, V307, V307, V302, V305]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V273, V274, V27, V276, V296, V302, V305, V307, V307, V302, V305]

================================

Block 0x3fd
[0x3fd:0x40a]
---
Predecessors: [0x380]
Successors: [0x1ea, 0x40b]
---
0x3fd JUMPDEST
0x3fe DUP1
0x3ff MLOAD
0x400 DUP3
0x401 MSTORE
0x402 PUSH1 0x20
0x404 DUP4
0x405 GT
0x406 ISZERO
0x407 PUSH2 0x1ea
0x40a JUMPI
---
0x3fd: JUMPDEST 
0x3ff: V311 = M[V305]
0x401: M[V302] = V311
0x402: V312 = 0x20
0x405: V313 = GT V307 0x20
0x406: V314 = ISZERO V313
0x407: V315 = 0x1ea
0x40a: JUMPI 0x1ea V314
---
Entry stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V273, V274, V27, V276, V296, V302, V305, V307, V307, V302, V305]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V273, V274, V27, V276, V296, V302, V305, V307, V307, V302, V305]

================================

Block 0x40b
[0x40b:0x41c]
---
Predecessors: [0x3fd]
Successors: [0x1ca]
---
0x40b PUSH1 0x1f
0x40d NOT
0x40e SWAP1
0x40f SWAP3
0x410 ADD
0x411 SWAP2
0x412 PUSH1 0x20
0x414 SWAP2
0x415 DUP3
0x416 ADD
0x417 SWAP2
0x418 ADD
0x419 PUSH2 0x1ca
0x41c JUMP
---
0x40b: V316 = 0x1f
0x40d: V317 = NOT 0x1f
0x410: V318 = ADD V307 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x412: V319 = 0x20
0x416: V320 = ADD 0x20 V302
0x418: V321 = ADD 0x20 V305
0x419: V322 = 0x1ca
0x41c: JUMP 0x1ca
---
Entry stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V273, V274, V27, V276, V296, V302, V305, V307, V307, V302, V305]
Stack pops: 3
Stack additions: [V318, V320, V321]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, V273, V274, V27, V276, V296, V302, V305, V307, V318, V320, V321]

================================

Block 0x41d
[0x41d:0x436]
---
Predecessors: []
Successors: [0x546]
---
0x41d JUMPDEST
0x41e POP
0x41f POP
0x420 POP
0x421 SWAP1
0x422 POP
0x423 ADD
0x424 SWAP6
0x425 POP
0x426 POP
0x427 POP
0x428 POP
0x429 POP
0x42a POP
0x42b PUSH1 0x40
0x42d MLOAD
0x42e DUP1
0x42f SWAP2
0x430 SUB
0x431 SWAP1
0x432 LOG1
0x433 PUSH2 0x546
0x436 JUMP
---
0x41d: JUMPDEST 
0x423: V323 = ADD S3 S5
0x42b: V324 = 0x40
0x42d: V325 = M[0x40]
0x430: V326 = SUB V323 V325
0x432: LOG V325 V326 S12
0x433: V327 = 0x546
0x436: JUMP 0x546
---
Entry stack: []
Stack pops: 13
Stack additions: []
Exit stack: []

================================

Block 0x437
[0x437:0x446]
---
Predecessors: [0x341]
Successors: [0x447, 0x448]
---
0x437 JUMPDEST
0x438 CALLER
0x439 PUSH1 0x2
0x43b DUP3
0x43c PUSH1 0x40
0x43e PUSH1 0x2
0x440 EXP
0x441 DUP2
0x442 LT
0x443 PUSH2 0x448
0x446 JUMPI
---
0x437: JUMPDEST 
0x438: V328 = CALLER
0x439: V329 = 0x2
0x43c: V330 = 0x40
0x43e: V331 = 0x2
0x440: V332 = EXP 0x2 0x40
0x442: V333 = LT V247 0x10000000000000000
0x443: V334 = 0x448
0x446: JUMPI 0x448 V333
---
Entry stack: [V12, 0x4d, V40, V27, V247]
Stack pops: 1
Stack additions: [S0, V328, 0x2, S0]
Exit stack: [V12, 0x4d, V40, V27, V247, V328, 0x2, V247]

================================

Block 0x447
[0x447:0x447]
---
Predecessors: [0x437]
Successors: []
---
0x447 INVALID
---
0x447: INVALID 
---
Entry stack: [V12, 0x4d, V40, V27, V247, V328, 0x2, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, V247, V328, 0x2, V247]

================================

Block 0x448
[0x448:0x44b]
---
Predecessors: [0x437]
Successors: [0x44c]
---
0x448 JUMPDEST
0x449 ADD
0x44a PUSH1 0x0
---
0x448: JUMPDEST 
0x449: V335 = ADD V247 0x2
0x44a: V336 = 0x0
---
Entry stack: [V12, 0x4d, V40, V27, V247, V328, 0x2, V247]
Stack pops: 2
Stack additions: [V335, 0x0]
Exit stack: [V12, 0x4d, V40, V27, V247, V328, V335, 0x0]

================================

Block 0x44c
[0x44c:0x487]
---
Predecessors: [0x448]
Successors: [0x488, 0x489]
---
0x44c JUMPDEST
0x44d PUSH2 0x100
0x450 EXP
0x451 DUP2
0x452 SLOAD
0x453 DUP2
0x454 PUSH1 0x1
0x456 PUSH1 0xa0
0x458 PUSH1 0x2
0x45a EXP
0x45b SUB
0x45c MUL
0x45d NOT
0x45e AND
0x45f SWAP1
0x460 DUP4
0x461 PUSH1 0x1
0x463 PUSH1 0xa0
0x465 PUSH1 0x2
0x467 EXP
0x468 SUB
0x469 AND
0x46a MUL
0x46b OR
0x46c SWAP1
0x46d SSTORE
0x46e POP
0x46f CALLVALUE
0x470 PUSH9 0x10000000000000002
0x47a DUP3
0x47b PUSH1 0x40
0x47d PUSH1 0x2
0x47f EXP
0x480 DUP2
0x481 LT
0x482 ISZERO
0x483 ISZERO
0x484 PUSH2 0x489
0x487 JUMPI
---
0x44c: JUMPDEST 
0x44d: V337 = 0x100
0x450: V338 = EXP 0x100 0x0
0x452: V339 = S[V335]
0x454: V340 = 0x1
0x456: V341 = 0xa0
0x458: V342 = 0x2
0x45a: V343 = EXP 0x2 0xa0
0x45b: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45c: V345 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x45d: V346 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V347 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V339
0x461: V348 = 0x1
0x463: V349 = 0xa0
0x465: V350 = 0x2
0x467: V351 = EXP 0x2 0xa0
0x468: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x469: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x46a: V354 = MUL V353 0x1
0x46b: V355 = OR V354 V347
0x46d: S[V335] = V355
0x46f: V356 = CALLVALUE
0x470: V357 = 0x10000000000000002
0x47b: V358 = 0x40
0x47d: V359 = 0x2
0x47f: V360 = EXP 0x2 0x40
0x481: V361 = LT V247 0x10000000000000000
0x482: V362 = ISZERO V361
0x483: V363 = ISZERO V362
0x484: V364 = 0x489
0x487: JUMPI 0x489 V363
---
Entry stack: [V12, 0x4d, V40, V27, V247, V328, V335, 0x0]
Stack pops: 4
Stack additions: [S3, V356, 0x10000000000000002, S3]
Exit stack: [V12, 0x4d, V40, V27, V247, V356, 0x10000000000000002, V247]

================================

Block 0x488
[0x488:0x488]
---
Predecessors: [0x44c]
Successors: []
---
0x488 INVALID
---
0x488: INVALID 
---
Entry stack: [V12, 0x4d, V40, V27, V247, V356, 0x10000000000000002, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, V247, V356, 0x10000000000000002, V247]

================================

Block 0x489
[0x489:0x48c]
---
Predecessors: [0x44c]
Successors: [0x48d]
---
0x489 JUMPDEST
0x48a ADD
0x48b PUSH1 0x0
---
0x489: JUMPDEST 
0x48a: V365 = ADD V247 0x10000000000000002
0x48b: V366 = 0x0
---
Entry stack: [V12, 0x4d, V40, V27, V247, V356, 0x10000000000000002, V247]
Stack pops: 2
Stack additions: [V365, 0x0]
Exit stack: [V12, 0x4d, V40, V27, V247, V356, V365, 0x0]

================================

Block 0x48d
[0x48d:0x50f]
---
Predecessors: [0x489]
Successors: [0x510, 0x530]
---
0x48d JUMPDEST
0x48e POP
0x48f DUP2
0x490 SWAP1
0x491 SSTORE
0x492 POP
0x493 PUSH32 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x4b4 DUP2
0x4b5 CALLER
0x4b6 DUP5
0x4b7 MLOAD
0x4b8 DUP6
0x4b9 PUSH1 0x40
0x4bb MLOAD
0x4bc DUP1
0x4bd DUP6
0x4be PUSH1 0x7
0x4c0 SIGNEXTEND
0x4c1 PUSH1 0x7
0x4c3 SIGNEXTEND
0x4c4 DUP2
0x4c5 MSTORE
0x4c6 PUSH1 0x20
0x4c8 ADD
0x4c9 DUP5
0x4ca PUSH1 0x1
0x4cc PUSH1 0xa0
0x4ce PUSH1 0x2
0x4d0 EXP
0x4d1 SUB
0x4d2 AND
0x4d3 PUSH1 0x1
0x4d5 PUSH1 0xa0
0x4d7 PUSH1 0x2
0x4d9 EXP
0x4da SUB
0x4db AND
0x4dc DUP2
0x4dd MSTORE
0x4de PUSH1 0x20
0x4e0 ADD
0x4e1 DUP4
0x4e2 DUP2
0x4e3 MSTORE
0x4e4 PUSH1 0x20
0x4e6 ADD
0x4e7 DUP1
0x4e8 PUSH1 0x20
0x4ea ADD
0x4eb DUP3
0x4ec DUP2
0x4ed SUB
0x4ee DUP3
0x4ef MSTORE
0x4f0 DUP4
0x4f1 DUP2
0x4f2 DUP2
0x4f3 MLOAD
0x4f4 DUP2
0x4f5 MSTORE
0x4f6 PUSH1 0x20
0x4f8 ADD
0x4f9 SWAP2
0x4fa POP
0x4fb DUP1
0x4fc MLOAD
0x4fd SWAP1
0x4fe PUSH1 0x20
0x500 ADD
0x501 SWAP1
0x502 PUSH1 0x20
0x504 MUL
0x505 DUP1
0x506 DUP4
0x507 DUP4
0x508 PUSH1 0x0
0x50a DUP4
0x50b EQ
0x50c PUSH2 0x530
0x50f JUMPI
---
0x48d: JUMPDEST 
0x491: S[V365] = V356
0x493: V367 = 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
0x4b5: V368 = CALLER
0x4b7: V369 = M[V27]
0x4b9: V370 = 0x40
0x4bb: V371 = M[0x40]
0x4be: V372 = 0x7
0x4c0: V373 = SIGNEXTEND 0x7 V247
0x4c1: V374 = 0x7
0x4c3: V375 = SIGNEXTEND 0x7 V373
0x4c5: M[V371] = V375
0x4c6: V376 = 0x20
0x4c8: V377 = ADD 0x20 V371
0x4ca: V378 = 0x1
0x4cc: V379 = 0xa0
0x4ce: V380 = 0x2
0x4d0: V381 = EXP 0x2 0xa0
0x4d1: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d2: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x4d3: V384 = 0x1
0x4d5: V385 = 0xa0
0x4d7: V386 = 0x2
0x4d9: V387 = EXP 0x2 0xa0
0x4da: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4db: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x4dd: M[V377] = V389
0x4de: V390 = 0x20
0x4e0: V391 = ADD 0x20 V377
0x4e3: M[V391] = V369
0x4e4: V392 = 0x20
0x4e6: V393 = ADD 0x20 V391
0x4e8: V394 = 0x20
0x4ea: V395 = ADD 0x20 V393
0x4ed: V396 = SUB V395 V371
0x4ef: M[V393] = V396
0x4f3: V397 = M[V27]
0x4f5: M[V395] = V397
0x4f6: V398 = 0x20
0x4f8: V399 = ADD 0x20 V395
0x4fc: V400 = M[V27]
0x4fe: V401 = 0x20
0x500: V402 = ADD 0x20 V27
0x502: V403 = 0x20
0x504: V404 = MUL 0x20 V400
0x508: V405 = 0x0
0x50b: V406 = EQ V404 0x0
0x50c: V407 = 0x530
0x50f: JUMPI 0x530 V406
---
Entry stack: [V12, 0x4d, V40, V27, V247, V356, V365, 0x0]
Stack pops: 5
Stack additions: [S4, S3, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, S3, V368, V369, S4, V371, V393, V399, V402, V404, V404, V399, V402]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V368, V369, V27, V371, V393, V399, V402, V404, V404, V399, V402]

================================

Block 0x510
[0x510:0x51d]
---
Predecessors: [0x48d, 0x51e]
Successors: [0x51e, 0x530]
---
0x510 JUMPDEST
0x511 DUP1
0x512 MLOAD
0x513 DUP3
0x514 MSTORE
0x515 PUSH1 0x20
0x517 DUP4
0x518 GT
0x519 ISZERO
0x51a PUSH2 0x530
0x51d JUMPI
---
0x510: JUMPDEST 
0x512: V408 = M[S0]
0x514: M[S1] = V408
0x515: V409 = 0x20
0x518: V410 = GT S2 0x20
0x519: V411 = ISZERO V410
0x51a: V412 = 0x530
0x51d: JUMPI 0x530 V411
---
Entry stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V368, V369, V27, V371, V393, V399, V402, V404, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V368, V369, V27, V371, V393, V399, V402, V404, S2, S1, S0]

================================

Block 0x51e
[0x51e:0x52f]
---
Predecessors: [0x510]
Successors: [0x510]
---
0x51e PUSH1 0x1f
0x520 NOT
0x521 SWAP1
0x522 SWAP3
0x523 ADD
0x524 SWAP2
0x525 PUSH1 0x20
0x527 SWAP2
0x528 DUP3
0x529 ADD
0x52a SWAP2
0x52b ADD
0x52c PUSH2 0x510
0x52f JUMP
---
0x51e: V413 = 0x1f
0x520: V414 = NOT 0x1f
0x523: V415 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x525: V416 = 0x20
0x529: V417 = ADD 0x20 S1
0x52b: V418 = ADD 0x20 S0
0x52c: V419 = 0x510
0x52f: JUMP 0x510
---
Entry stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V368, V369, V27, V371, V393, V399, V402, V404, S2, S1, S0]
Stack pops: 3
Stack additions: [V415, V417, V418]
Exit stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V368, V369, V27, V371, V393, V399, V402, V404, V415, V417, V418]

================================

Block 0x530
[0x530:0x545]
---
Predecessors: [0x48d, 0x510]
Successors: [0x546]
---
0x530 JUMPDEST
0x531 POP
0x532 POP
0x533 POP
0x534 SWAP1
0x535 POP
0x536 ADD
0x537 SWAP6
0x538 POP
0x539 POP
0x53a POP
0x53b POP
0x53c POP
0x53d POP
0x53e PUSH1 0x40
0x540 MLOAD
0x541 DUP1
0x542 SWAP2
0x543 SUB
0x544 SWAP1
0x545 LOG1
---
0x530: JUMPDEST 
0x536: V420 = ADD V404 V399
0x53e: V421 = 0x40
0x540: V422 = M[0x40]
0x543: V423 = SUB V420 V422
0x545: LOG V422 V423 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee
---
Entry stack: [V12, 0x4d, V40, V27, V247, 0x59ac303f49e9d81b627d7db79dd6d65f9b46a87840c81ad2e4ce1c5ba0d453ee, V247, V368, V369, V27, V371, V393, V399, V402, V404, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V12, 0x4d, V40, V27, V247]

================================

Block 0x546
[0x546:0x54a]
---
Predecessors: [0x1ea, 0x41d, 0x530]
Successors: [0x4d]
---
0x546 JUMPDEST
0x547 POP
0x548 POP
0x549 POP
0x54a JUMP
---
0x546: JUMPDEST 
0x54a: JUMP 0x4d
---
Entry stack: [V12, 0x4d, V40, V27, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x54b
[0x54b:0x55e]
---
Predecessors: [0xa5]
Successors: [0x55f, 0x5a5]
---
0x54b JUMPDEST
0x54c PUSH1 0x0
0x54e PUSH8 0xffffffffffffffff
0x557 DUP3
0x558 AND
0x559 ISZERO
0x55a DUP1
0x55b PUSH2 0x5a5
0x55e JUMPI
---
0x54b: JUMPDEST 
0x54c: V424 = 0x0
0x54e: V425 = 0xffffffffffffffff
0x558: V426 = AND V52 0xffffffffffffffff
0x559: V427 = ISZERO V426
0x55b: V428 = 0x5a5
0x55e: JUMPI 0x5a5 V427
---
Entry stack: [V12, 0x4d, V52]
Stack pops: 1
Stack additions: [S0, 0x0, V427]
Exit stack: [V12, 0x4d, V52, 0x0, V427]

================================

Block 0x55f
[0x55f:0x581]
---
Predecessors: [0x54b]
Successors: [0x582, 0x583]
---
0x55f POP
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 CALLER
0x569 AND
0x56a PUSH1 0x2
0x56c PUSH8 0xffffffffffffffff
0x575 DUP5
0x576 AND
0x577 PUSH1 0x40
0x579 PUSH1 0x2
0x57b EXP
0x57c DUP2
0x57d LT
0x57e PUSH2 0x583
0x581 JUMPI
---
0x560: V429 = 0x1
0x562: V430 = 0xa0
0x564: V431 = 0x2
0x566: V432 = EXP 0x2 0xa0
0x567: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x568: V434 = CALLER
0x569: V435 = AND V434 0xffffffffffffffffffffffffffffffffffffffff
0x56a: V436 = 0x2
0x56c: V437 = 0xffffffffffffffff
0x576: V438 = AND V52 0xffffffffffffffff
0x577: V439 = 0x40
0x579: V440 = 0x2
0x57b: V441 = EXP 0x2 0x40
0x57d: V442 = LT V438 0x10000000000000000
0x57e: V443 = 0x583
0x581: JUMPI 0x583 V442
---
Entry stack: [V12, 0x4d, V52, 0x0, V427]
Stack pops: 3
Stack additions: [S2, S1, V435, 0x2, V438]
Exit stack: [V12, 0x4d, V52, 0x0, V435, 0x2, V438]

================================

Block 0x582
[0x582:0x582]
---
Predecessors: [0x55f]
Successors: []
---
0x582 INVALID
---
0x582: INVALID 
---
Entry stack: [V12, 0x4d, V52, 0x0, V435, 0x2, V438]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, 0x0, V435, 0x2, V438]

================================

Block 0x583
[0x583:0x586]
---
Predecessors: [0x55f]
Successors: [0x587]
---
0x583 JUMPDEST
0x584 ADD
0x585 PUSH1 0x0
---
0x583: JUMPDEST 
0x584: V444 = ADD V438 0x2
0x585: V445 = 0x0
---
Entry stack: [V12, 0x4d, V52, 0x0, V435, 0x2, V438]
Stack pops: 2
Stack additions: [V444, 0x0]
Exit stack: [V12, 0x4d, V52, 0x0, V435, V444, 0x0]

================================

Block 0x587
[0x587:0x5a4]
---
Predecessors: [0x583]
Successors: [0x5a5]
---
0x587 JUMPDEST
0x588 SWAP1
0x589 SLOAD
0x58a SWAP1
0x58b PUSH2 0x100
0x58e EXP
0x58f SWAP1
0x590 DIV
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 AND
0x59a PUSH1 0x1
0x59c PUSH1 0xa0
0x59e PUSH1 0x2
0x5a0 EXP
0x5a1 SUB
0x5a2 AND
0x5a3 EQ
0x5a4 ISZERO
---
0x587: JUMPDEST 
0x589: V446 = S[V444]
0x58b: V447 = 0x100
0x58e: V448 = EXP 0x100 0x0
0x590: V449 = DIV V446 0x1
0x591: V450 = 0x1
0x593: V451 = 0xa0
0x595: V452 = 0x2
0x597: V453 = EXP 0x2 0xa0
0x598: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x599: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x59a: V456 = 0x1
0x59c: V457 = 0xa0
0x59e: V458 = 0x2
0x5a0: V459 = EXP 0x2 0xa0
0x5a1: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a2: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x5a3: V462 = EQ V461 V435
0x5a4: V463 = ISZERO V462
---
Entry stack: [V12, 0x4d, V52, 0x0, V435, V444, 0x0]
Stack pops: 3
Stack additions: [V463]
Exit stack: [V12, 0x4d, V52, 0x0, V463]

================================

Block 0x5a5
[0x5a5:0x5aa]
---
Predecessors: [0x54b, 0x587]
Successors: [0x5ab, 0x601]
---
0x5a5 JUMPDEST
0x5a6 ISZERO
0x5a7 PUSH2 0x601
0x5aa JUMPI
---
0x5a5: JUMPDEST 
0x5a6: V464 = ISZERO S0
0x5a7: V465 = 0x601
0x5aa: JUMPI 0x601 V464
---
Entry stack: [V12, 0x4d, V52, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x4d, V52, 0x0]

================================

Block 0x5ab
[0x5ab:0x600]
---
Predecessors: [0x5a5]
Successors: [0x7d2]
---
0x5ab PUSH1 0x40
0x5ad DUP1
0x5ae MLOAD
0x5af PUSH8 0xffffffffffffffff
0x5b8 DUP5
0x5b9 AND
0x5ba DUP2
0x5bb MSTORE
0x5bc PUSH1 0x1
0x5be PUSH1 0xa0
0x5c0 PUSH1 0x2
0x5c2 EXP
0x5c3 SUB
0x5c4 CALLER
0x5c5 AND
0x5c6 PUSH1 0x20
0x5c8 DUP3
0x5c9 ADD
0x5ca MSTORE
0x5cb PUSH1 0x0
0x5cd DUP2
0x5ce DUP4
0x5cf ADD
0x5d0 MSTORE
0x5d1 SWAP1
0x5d2 MLOAD
0x5d3 PUSH32 0xa2f9de8b526a211b92eeaf678ae4a0eaf220db1a04e929ad94b31cf3db9b5dd6
0x5f4 SWAP2
0x5f5 DUP2
0x5f6 SWAP1
0x5f7 SUB
0x5f8 PUSH1 0x60
0x5fa ADD
0x5fb SWAP1
0x5fc LOG1
0x5fd PUSH2 0x7d2
0x600 JUMP
---
0x5ab: V466 = 0x40
0x5ae: V467 = M[0x40]
0x5af: V468 = 0xffffffffffffffff
0x5b9: V469 = AND V52 0xffffffffffffffff
0x5bb: M[V467] = V469
0x5bc: V470 = 0x1
0x5be: V471 = 0xa0
0x5c0: V472 = 0x2
0x5c2: V473 = EXP 0x2 0xa0
0x5c3: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c4: V475 = CALLER
0x5c5: V476 = AND V475 0xffffffffffffffffffffffffffffffffffffffff
0x5c6: V477 = 0x20
0x5c9: V478 = ADD V467 0x20
0x5ca: M[V478] = V476
0x5cb: V479 = 0x0
0x5cf: V480 = ADD 0x40 V467
0x5d0: M[V480] = 0x0
0x5d2: V481 = M[0x40]
0x5d3: V482 = 0xa2f9de8b526a211b92eeaf678ae4a0eaf220db1a04e929ad94b31cf3db9b5dd6
0x5f7: V483 = SUB V467 V481
0x5f8: V484 = 0x60
0x5fa: V485 = ADD 0x60 V483
0x5fc: LOG V481 V485 0xa2f9de8b526a211b92eeaf678ae4a0eaf220db1a04e929ad94b31cf3db9b5dd6
0x5fd: V486 = 0x7d2
0x600: JUMP 0x7d2
---
Entry stack: [V12, 0x4d, V52, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x4d, V52, 0x0]

================================

Block 0x601
[0x601:0x673]
---
Predecessors: [0x5a5]
Successors: [0x674, 0x675]
---
0x601 JUMPDEST
0x602 PUSH1 0x0
0x604 DUP1
0x605 SLOAD
0x606 PUSH1 0x40
0x608 DUP1
0x609 MLOAD
0x60a PUSH1 0x20
0x60c SWAP1
0x60d DUP2
0x60e ADD
0x60f DUP5
0x610 SWAP1
0x611 MSTORE
0x612 DUP2
0x613 MLOAD
0x614 PUSH32 0x4c125e7900000000000000000000000000000000000000000000000000000000
0x635 DUP2
0x636 MSTORE
0x637 PUSH8 0xffffffffffffffff
0x640 DUP8
0x641 AND
0x642 PUSH1 0x4
0x644 DUP3
0x645 ADD
0x646 MSTORE
0x647 SWAP2
0x648 MLOAD
0x649 PUSH1 0x1
0x64b PUSH1 0xa0
0x64d PUSH1 0x2
0x64f EXP
0x650 SUB
0x651 SWAP1
0x652 SWAP4
0x653 AND
0x654 SWAP4
0x655 PUSH4 0x4c125e79
0x65a SWAP4
0x65b PUSH1 0x24
0x65d DUP1
0x65e DUP6
0x65f ADD
0x660 SWAP5
0x661 SWAP2
0x662 SWAP3
0x663 SWAP2
0x664 DUP4
0x665 SWAP1
0x666 SUB
0x667 ADD
0x668 SWAP1
0x669 DUP3
0x66a SWAP1
0x66b DUP8
0x66c DUP1
0x66d EXTCODESIZE
0x66e ISZERO
0x66f ISZERO
0x670 PUSH2 0x675
0x673 JUMPI
---
0x601: JUMPDEST 
0x602: V487 = 0x0
0x605: V488 = S[0x0]
0x606: V489 = 0x40
0x609: V490 = M[0x40]
0x60a: V491 = 0x20
0x60e: V492 = ADD 0x20 V490
0x611: M[V492] = 0x0
0x613: V493 = M[0x40]
0x614: V494 = 0x4c125e7900000000000000000000000000000000000000000000000000000000
0x636: M[V493] = 0x4c125e7900000000000000000000000000000000000000000000000000000000
0x637: V495 = 0xffffffffffffffff
0x641: V496 = AND V52 0xffffffffffffffff
0x642: V497 = 0x4
0x645: V498 = ADD V493 0x4
0x646: M[V498] = V496
0x648: V499 = M[0x40]
0x649: V500 = 0x1
0x64b: V501 = 0xa0
0x64d: V502 = 0x2
0x64f: V503 = EXP 0x2 0xa0
0x650: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x653: V505 = AND V488 0xffffffffffffffffffffffffffffffffffffffff
0x655: V506 = 0x4c125e79
0x65b: V507 = 0x24
0x65f: V508 = ADD V493 0x24
0x666: V509 = SUB V493 V499
0x667: V510 = ADD V509 0x24
0x66d: V511 = EXTCODESIZE V505
0x66e: V512 = ISZERO V511
0x66f: V513 = ISZERO V512
0x670: V514 = 0x675
0x673: JUMPI 0x675 V513
---
Entry stack: [V12, 0x4d, V52, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V505, 0x4c125e79, V508, 0x20, V499, V510, V499, 0x0, V505]
Exit stack: [V12, 0x4d, V52, 0x0, V505, 0x4c125e79, V508, 0x20, V499, V510, V499, 0x0, V505]

================================

Block 0x674
[0x674:0x674]
---
Predecessors: [0x601]
Successors: []
---
0x674 INVALID
---
0x674: INVALID 
---
Entry stack: [V12, 0x4d, V52, 0x0, V505, 0x4c125e79, V508, 0x20, V499, V510, V499, 0x0, V505]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, 0x0, V505, 0x4c125e79, V508, 0x20, V499, V510, V499, 0x0, V505]

================================

Block 0x675
[0x675:0x680]
---
Predecessors: [0x601]
Successors: [0x681, 0x682]
---
0x675 JUMPDEST
0x676 PUSH1 0x32
0x678 GAS
0x679 SUB
0x67a CALL
0x67b ISZERO
0x67c ISZERO
0x67d PUSH2 0x682
0x680 JUMPI
---
0x675: JUMPDEST 
0x676: V515 = 0x32
0x678: V516 = GAS
0x679: V517 = SUB V516 0x32
0x67a: V518 = CALL V517 V505 0x0 V499 V510 V499 0x20
0x67b: V519 = ISZERO V518
0x67c: V520 = ISZERO V519
0x67d: V521 = 0x682
0x680: JUMPI 0x682 V520
---
Entry stack: [V12, 0x4d, V52, 0x0, V505, 0x4c125e79, V508, 0x20, V499, V510, V499, 0x0, V505]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x4d, V52, 0x0, V505, 0x4c125e79, V508]

================================

Block 0x681
[0x681:0x681]
---
Predecessors: [0x675]
Successors: []
---
0x681 INVALID
---
0x681: INVALID 
---
Entry stack: [V12, 0x4d, V52, 0x0, V505, 0x4c125e79, V508]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, 0x0, V505, 0x4c125e79, V508]

================================

Block 0x682
[0x682:0x694]
---
Predecessors: [0x675]
Successors: [0x695, 0x77f]
---
0x682 JUMPDEST
0x683 POP
0x684 POP
0x685 PUSH1 0x40
0x687 MLOAD
0x688 MLOAD
0x689 SWAP2
0x68a POP
0x68b POP
0x68c PUSH1 0x1
0x68e DUP2
0x68f EQ
0x690 ISZERO
0x691 PUSH2 0x77f
0x694 JUMPI
---
0x682: JUMPDEST 
0x685: V522 = 0x40
0x687: V523 = M[0x40]
0x688: V524 = M[V523]
0x68c: V525 = 0x1
0x68f: V526 = EQ V524 0x1
0x690: V527 = ISZERO V526
0x691: V528 = 0x77f
0x694: JUMPI 0x77f V527
---
Entry stack: [V12, 0x4d, V52, 0x0, V505, 0x4c125e79, V508]
Stack pops: 4
Stack additions: [V524]
Exit stack: [V12, 0x4d, V52, V524]

================================

Block 0x695
[0x695:0x6ae]
---
Predecessors: [0x682]
Successors: [0x6af, 0x6b0]
---
0x695 PUSH1 0x0
0x697 PUSH1 0x2
0x699 PUSH8 0xffffffffffffffff
0x6a2 DUP5
0x6a3 AND
0x6a4 PUSH1 0x40
0x6a6 PUSH1 0x2
0x6a8 EXP
0x6a9 DUP2
0x6aa LT
0x6ab PUSH2 0x6b0
0x6ae JUMPI
---
0x695: V529 = 0x0
0x697: V530 = 0x2
0x699: V531 = 0xffffffffffffffff
0x6a3: V532 = AND V52 0xffffffffffffffff
0x6a4: V533 = 0x40
0x6a6: V534 = 0x2
0x6a8: V535 = EXP 0x2 0x40
0x6aa: V536 = LT V532 0x10000000000000000
0x6ab: V537 = 0x6b0
0x6ae: JUMPI 0x6b0 V536
---
Entry stack: [V12, 0x4d, V52, V524]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x2, V532]
Exit stack: [V12, 0x4d, V52, V524, 0x0, 0x2, V532]

================================

Block 0x6af
[0x6af:0x6af]
---
Predecessors: [0x695]
Successors: []
---
0x6af INVALID
---
0x6af: INVALID 
---
Entry stack: [V12, 0x4d, V52, V524, 0x0, 0x2, V532]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, V524, 0x0, 0x2, V532]

================================

Block 0x6b0
[0x6b0:0x6b3]
---
Predecessors: [0x695]
Successors: [0x6b4]
---
0x6b0 JUMPDEST
0x6b1 ADD
0x6b2 PUSH1 0x0
---
0x6b0: JUMPDEST 
0x6b1: V538 = ADD V532 0x2
0x6b2: V539 = 0x0
---
Entry stack: [V12, 0x4d, V52, V524, 0x0, 0x2, V532]
Stack pops: 2
Stack additions: [V538, 0x0]
Exit stack: [V12, 0x4d, V52, V524, 0x0, V538, 0x0]

================================

Block 0x6b4
[0x6b4:0x6fd]
---
Predecessors: [0x6b0]
Successors: [0x6fe, 0x6ff]
---
0x6b4 JUMPDEST
0x6b5 DUP2
0x6b6 SLOAD
0x6b7 PUSH1 0x1
0x6b9 PUSH1 0xa0
0x6bb PUSH1 0x2
0x6bd EXP
0x6be SUB
0x6bf SWAP4
0x6c0 DUP5
0x6c1 AND
0x6c2 PUSH2 0x100
0x6c5 SWAP3
0x6c6 SWAP1
0x6c7 SWAP3
0x6c8 EXP
0x6c9 SWAP2
0x6ca DUP3
0x6cb MUL
0x6cc SWAP2
0x6cd DUP5
0x6ce MUL
0x6cf NOT
0x6d0 AND
0x6d1 OR
0x6d2 SWAP1
0x6d3 SSTORE
0x6d4 CALLER
0x6d5 AND
0x6d6 PUSH7 0x470de4df82000
0x6de PUSH9 0x10000000000000002
0x6e8 PUSH8 0xffffffffffffffff
0x6f1 DUP6
0x6f2 AND
0x6f3 PUSH1 0x40
0x6f5 PUSH1 0x2
0x6f7 EXP
0x6f8 DUP2
0x6f9 LT
0x6fa PUSH2 0x6ff
0x6fd JUMPI
---
0x6b4: JUMPDEST 
0x6b6: V540 = S[V538]
0x6b7: V541 = 0x1
0x6b9: V542 = 0xa0
0x6bb: V543 = 0x2
0x6bd: V544 = EXP 0x2 0xa0
0x6be: V545 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c1: V546 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x6c2: V547 = 0x100
0x6c8: V548 = EXP 0x100 0x0
0x6cb: V549 = MUL 0x1 0x0
0x6ce: V550 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x6cf: V551 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6d0: V552 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V540
0x6d1: V553 = OR V552 0x0
0x6d3: S[V538] = V553
0x6d4: V554 = CALLER
0x6d5: V555 = AND V554 0xffffffffffffffffffffffffffffffffffffffff
0x6d6: V556 = 0x470de4df82000
0x6de: V557 = 0x10000000000000002
0x6e8: V558 = 0xffffffffffffffff
0x6f2: V559 = AND V52 0xffffffffffffffff
0x6f3: V560 = 0x40
0x6f5: V561 = 0x2
0x6f7: V562 = EXP 0x2 0x40
0x6f9: V563 = LT V559 0x10000000000000000
0x6fa: V564 = 0x6ff
0x6fd: JUMPI 0x6ff V563
---
Entry stack: [V12, 0x4d, V52, V524, 0x0, V538, 0x0]
Stack pops: 5
Stack additions: [S4, S3, V555, 0x470de4df82000, 0x10000000000000002, V559]
Exit stack: [V12, 0x4d, V52, V524, V555, 0x470de4df82000, 0x10000000000000002, V559]

================================

Block 0x6fe
[0x6fe:0x6fe]
---
Predecessors: [0x6b4]
Successors: []
---
0x6fe INVALID
---
0x6fe: INVALID 
---
Entry stack: [V12, 0x4d, V52, V524, V555, 0x470de4df82000, 0x10000000000000002, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, V524, V555, 0x470de4df82000, 0x10000000000000002, V559]

================================

Block 0x6ff
[0x6ff:0x702]
---
Predecessors: [0x6b4]
Successors: [0x703]
---
0x6ff JUMPDEST
0x700 ADD
0x701 PUSH1 0x0
---
0x6ff: JUMPDEST 
0x700: V565 = ADD V559 0x10000000000000002
0x701: V566 = 0x0
---
Entry stack: [V12, 0x4d, V52, V524, V555, 0x470de4df82000, 0x10000000000000002, V559]
Stack pops: 2
Stack additions: [V565, 0x0]
Exit stack: [V12, 0x4d, V52, V524, V555, 0x470de4df82000, V565, 0x0]

================================

Block 0x703
[0x703:0x723]
---
Predecessors: [0x6ff]
Successors: [0x724, 0x728]
---
0x703 JUMPDEST
0x704 POP
0x705 SLOAD
0x706 PUSH1 0x40
0x708 MLOAD
0x709 SWAP2
0x70a SWAP1
0x70b SUB
0x70c SWAP1
0x70d PUSH1 0x0
0x70f DUP2
0x710 DUP2
0x711 DUP2
0x712 DUP6
0x713 DUP8
0x714 PUSH2 0x8502
0x717 GAS
0x718 SUB
0x719 CALL
0x71a SWAP3
0x71b POP
0x71c POP
0x71d POP
0x71e ISZERO
0x71f ISZERO
0x720 PUSH2 0x728
0x723 JUMPI
---
0x703: JUMPDEST 
0x705: V567 = S[V565]
0x706: V568 = 0x40
0x708: V569 = M[0x40]
0x70b: V570 = SUB V567 0x470de4df82000
0x70d: V571 = 0x0
0x714: V572 = 0x8502
0x717: V573 = GAS
0x718: V574 = SUB V573 0x8502
0x719: V575 = CALL V574 V555 V570 V569 0x0 V569 0x0
0x71e: V576 = ISZERO V575
0x71f: V577 = ISZERO V576
0x720: V578 = 0x728
0x723: JUMPI 0x728 V577
---
Entry stack: [V12, 0x4d, V52, V524, V555, 0x470de4df82000, V565, 0x0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x4d, V52, V524]

================================

Block 0x724
[0x724:0x727]
---
Predecessors: [0x703]
Successors: []
---
0x724 PUSH2 0x0
0x727 JUMP
---
0x724: V579 = 0x0
0x727: THROW 
---
Entry stack: [V12, 0x4d, V52, V524]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, V524]

================================

Block 0x728
[0x728:0x77e]
---
Predecessors: [0x703]
Successors: [0x7d2]
---
0x728 JUMPDEST
0x729 PUSH1 0x40
0x72b DUP1
0x72c MLOAD
0x72d PUSH8 0xffffffffffffffff
0x736 DUP5
0x737 AND
0x738 DUP2
0x739 MSTORE
0x73a PUSH1 0x1
0x73c PUSH1 0xa0
0x73e PUSH1 0x2
0x740 EXP
0x741 SUB
0x742 CALLER
0x743 AND
0x744 PUSH1 0x20
0x746 DUP3
0x747 ADD
0x748 MSTORE
0x749 PUSH1 0x1
0x74b DUP2
0x74c DUP4
0x74d ADD
0x74e MSTORE
0x74f SWAP1
0x750 MLOAD
0x751 PUSH32 0xa2f9de8b526a211b92eeaf678ae4a0eaf220db1a04e929ad94b31cf3db9b5dd6
0x772 SWAP2
0x773 DUP2
0x774 SWAP1
0x775 SUB
0x776 PUSH1 0x60
0x778 ADD
0x779 SWAP1
0x77a LOG1
0x77b PUSH2 0x7d2
0x77e JUMP
---
0x728: JUMPDEST 
0x729: V580 = 0x40
0x72c: V581 = M[0x40]
0x72d: V582 = 0xffffffffffffffff
0x737: V583 = AND V52 0xffffffffffffffff
0x739: M[V581] = V583
0x73a: V584 = 0x1
0x73c: V585 = 0xa0
0x73e: V586 = 0x2
0x740: V587 = EXP 0x2 0xa0
0x741: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x742: V589 = CALLER
0x743: V590 = AND V589 0xffffffffffffffffffffffffffffffffffffffff
0x744: V591 = 0x20
0x747: V592 = ADD V581 0x20
0x748: M[V592] = V590
0x749: V593 = 0x1
0x74d: V594 = ADD 0x40 V581
0x74e: M[V594] = 0x1
0x750: V595 = M[0x40]
0x751: V596 = 0xa2f9de8b526a211b92eeaf678ae4a0eaf220db1a04e929ad94b31cf3db9b5dd6
0x775: V597 = SUB V581 V595
0x776: V598 = 0x60
0x778: V599 = ADD 0x60 V597
0x77a: LOG V595 V599 0xa2f9de8b526a211b92eeaf678ae4a0eaf220db1a04e929ad94b31cf3db9b5dd6
0x77b: V600 = 0x7d2
0x77e: JUMP 0x7d2
---
Entry stack: [V12, 0x4d, V52, V524]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x4d, V52, V524]

================================

Block 0x77f
[0x77f:0x7d1]
---
Predecessors: [0x682]
Successors: [0x7d2]
---
0x77f JUMPDEST
0x780 PUSH1 0x40
0x782 DUP1
0x783 MLOAD
0x784 PUSH8 0xffffffffffffffff
0x78d DUP5
0x78e AND
0x78f DUP2
0x790 MSTORE
0x791 PUSH1 0x1
0x793 PUSH1 0xa0
0x795 PUSH1 0x2
0x797 EXP
0x798 SUB
0x799 CALLER
0x79a AND
0x79b PUSH1 0x20
0x79d DUP3
0x79e ADD
0x79f MSTORE
0x7a0 PUSH1 0x0
0x7a2 DUP2
0x7a3 DUP4
0x7a4 ADD
0x7a5 MSTORE
0x7a6 SWAP1
0x7a7 MLOAD
0x7a8 PUSH32 0xa2f9de8b526a211b92eeaf678ae4a0eaf220db1a04e929ad94b31cf3db9b5dd6
0x7c9 SWAP2
0x7ca DUP2
0x7cb SWAP1
0x7cc SUB
0x7cd PUSH1 0x60
0x7cf ADD
0x7d0 SWAP1
0x7d1 LOG1
---
0x77f: JUMPDEST 
0x780: V601 = 0x40
0x783: V602 = M[0x40]
0x784: V603 = 0xffffffffffffffff
0x78e: V604 = AND V52 0xffffffffffffffff
0x790: M[V602] = V604
0x791: V605 = 0x1
0x793: V606 = 0xa0
0x795: V607 = 0x2
0x797: V608 = EXP 0x2 0xa0
0x798: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x799: V610 = CALLER
0x79a: V611 = AND V610 0xffffffffffffffffffffffffffffffffffffffff
0x79b: V612 = 0x20
0x79e: V613 = ADD V602 0x20
0x79f: M[V613] = V611
0x7a0: V614 = 0x0
0x7a4: V615 = ADD 0x40 V602
0x7a5: M[V615] = 0x0
0x7a7: V616 = M[0x40]
0x7a8: V617 = 0xa2f9de8b526a211b92eeaf678ae4a0eaf220db1a04e929ad94b31cf3db9b5dd6
0x7cc: V618 = SUB V602 V616
0x7cd: V619 = 0x60
0x7cf: V620 = ADD 0x60 V618
0x7d1: LOG V616 V620 0xa2f9de8b526a211b92eeaf678ae4a0eaf220db1a04e929ad94b31cf3db9b5dd6
---
Entry stack: [V12, 0x4d, V52, V524]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x4d, V52, V524]

================================

Block 0x7d2
[0x7d2:0x7d2]
---
Predecessors: [0x5ab, 0x728, 0x77f]
Successors: [0x7d3]
---
0x7d2 JUMPDEST
---
0x7d2: JUMPDEST 
---
Entry stack: [V12, 0x4d, V52, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V52, S0]

================================

Block 0x7d3
[0x7d3:0x7d6]
---
Predecessors: [0x7d2]
Successors: [0x4d]
---
0x7d3 JUMPDEST
0x7d4 POP
0x7d5 POP
0x7d6 JUMP
---
0x7d3: JUMPDEST 
0x7d6: JUMP 0x4d
---
Entry stack: [V12, 0x4d, V52, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d7
[0x7d7:0x7e5]
---
Predecessors: [0xc4]
Successors: [0xcc]
---
0x7d7 JUMPDEST
0x7d8 PUSH1 0x0
0x7da SLOAD
0x7db PUSH1 0x1
0x7dd PUSH1 0xa0
0x7df PUSH1 0x2
0x7e1 EXP
0x7e2 SUB
0x7e3 AND
0x7e4 DUP2
0x7e5 JUMP
---
0x7d7: JUMPDEST 
0x7d8: V621 = 0x0
0x7da: V622 = S[0x0]
0x7db: V623 = 0x1
0x7dd: V624 = 0xa0
0x7df: V625 = 0x2
0x7e1: V626 = EXP 0x2 0xa0
0x7e2: V627 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e3: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0x7e5: JUMP 0xcc
---
Entry stack: [V12, 0xcc]
Stack pops: 1
Stack additions: [S0, V628]
Exit stack: [V12, 0xcc, V628]

================================

Block 0x7e6
[0x7e6:0x7fd]
---
Predecessors: [0xf0]
Successors: [0x7fe, 0x853]
---
0x7e6 JUMPDEST
0x7e7 PUSH1 0x0
0x7e9 DUP1
0x7ea SLOAD
0x7eb CALLER
0x7ec PUSH1 0x1
0x7ee PUSH1 0xa0
0x7f0 PUSH1 0x2
0x7f2 EXP
0x7f3 SUB
0x7f4 SWAP1
0x7f5 DUP2
0x7f6 AND
0x7f7 SWAP2
0x7f8 AND
0x7f9 EQ
0x7fa PUSH2 0x853
0x7fd JUMPI
---
0x7e6: JUMPDEST 
0x7e7: V629 = 0x0
0x7ea: V630 = S[0x0]
0x7eb: V631 = CALLER
0x7ec: V632 = 0x1
0x7ee: V633 = 0xa0
0x7f0: V634 = 0x2
0x7f2: V635 = EXP 0x2 0xa0
0x7f3: V636 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f6: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0x7f8: V638 = AND V630 0xffffffffffffffffffffffffffffffffffffffff
0x7f9: V639 = EQ V638 V637
0x7fa: V640 = 0x853
0x7fd: JUMPI 0x853 V639
---
Entry stack: [V12, 0x4d, V78, V81, V83]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x4d, V78, V81, V83, 0x0]

================================

Block 0x7fe
[0x7fe:0x852]
---
Predecessors: [0x7e6]
Successors: [0x9e5]
---
0x7fe PUSH1 0x40
0x800 DUP1
0x801 MLOAD
0x802 PUSH1 0x0
0x804 NOT
0x805 DUP2
0x806 MSTORE
0x807 PUSH1 0x1
0x809 PUSH1 0xa0
0x80b PUSH1 0x2
0x80d EXP
0x80e SUB
0x80f CALLER
0x810 AND
0x811 PUSH1 0x20
0x813 DUP3
0x814 ADD
0x815 MSTORE
0x816 PUSH1 0x0
0x818 DUP2
0x819 DUP4
0x81a ADD
0x81b DUP2
0x81c SWAP1
0x81d MSTORE
0x81e PUSH1 0x60
0x820 DUP3
0x821 ADD
0x822 MSTORE
0x823 SWAP1
0x824 MLOAD
0x825 PUSH32 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x846 SWAP2
0x847 DUP2
0x848 SWAP1
0x849 SUB
0x84a PUSH1 0x80
0x84c ADD
0x84d SWAP1
0x84e LOG1
0x84f PUSH2 0x9e5
0x852 JUMP
---
0x7fe: V641 = 0x40
0x801: V642 = M[0x40]
0x802: V643 = 0x0
0x804: V644 = NOT 0x0
0x806: M[V642] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x807: V645 = 0x1
0x809: V646 = 0xa0
0x80b: V647 = 0x2
0x80d: V648 = EXP 0x2 0xa0
0x80e: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80f: V650 = CALLER
0x810: V651 = AND V650 0xffffffffffffffffffffffffffffffffffffffff
0x811: V652 = 0x20
0x814: V653 = ADD V642 0x20
0x815: M[V653] = V651
0x816: V654 = 0x0
0x81a: V655 = ADD 0x40 V642
0x81d: M[V655] = 0x0
0x81e: V656 = 0x60
0x821: V657 = ADD V642 0x60
0x822: M[V657] = 0x0
0x824: V658 = M[0x40]
0x825: V659 = 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x849: V660 = SUB V642 V658
0x84a: V661 = 0x80
0x84c: V662 = ADD 0x80 V660
0x84e: LOG V658 V662 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x84f: V663 = 0x9e5
0x852: JUMP 0x9e5
---
Entry stack: [V12, 0x4d, V78, V81, V83, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V78, V81, V83, 0x0]

================================

Block 0x853
[0x853:0x86b]
---
Predecessors: [0x7e6]
Successors: [0x86c, 0x86d]
---
0x853 JUMPDEST
0x854 PUSH1 0x2
0x856 PUSH8 0xffffffffffffffff
0x85f DUP6
0x860 AND
0x861 PUSH1 0x40
0x863 PUSH1 0x2
0x865 EXP
0x866 DUP2
0x867 LT
0x868 PUSH2 0x86d
0x86b JUMPI
---
0x853: JUMPDEST 
0x854: V664 = 0x2
0x856: V665 = 0xffffffffffffffff
0x860: V666 = AND V78 0xffffffffffffffff
0x861: V667 = 0x40
0x863: V668 = 0x2
0x865: V669 = EXP 0x2 0x40
0x867: V670 = LT V666 0x10000000000000000
0x868: V671 = 0x86d
0x86b: JUMPI 0x86d V670
---
Entry stack: [V12, 0x4d, V78, V81, V83, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x2, V666]
Exit stack: [V12, 0x4d, V78, V81, V83, 0x0, 0x2, V666]

================================

Block 0x86c
[0x86c:0x86c]
---
Predecessors: [0x853]
Successors: []
---
0x86c INVALID
---
0x86c: INVALID 
---
Entry stack: [V12, 0x4d, V78, V81, V83, 0x0, 0x2, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V78, V81, V83, 0x0, 0x2, V666]

================================

Block 0x86d
[0x86d:0x870]
---
Predecessors: [0x853]
Successors: [0x871]
---
0x86d JUMPDEST
0x86e ADD
0x86f PUSH1 0x0
---
0x86d: JUMPDEST 
0x86e: V672 = ADD V666 0x2
0x86f: V673 = 0x0
---
Entry stack: [V12, 0x4d, V78, V81, V83, 0x0, 0x2, V666]
Stack pops: 2
Stack additions: [V672, 0x0]
Exit stack: [V12, 0x4d, V78, V81, V83, 0x0, V672, 0x0]

================================

Block 0x871
[0x871:0x8a1]
---
Predecessors: [0x86d]
Successors: [0x8a2, 0x8a3]
---
0x871 JUMPDEST
0x872 SWAP1
0x873 SLOAD
0x874 SWAP1
0x875 PUSH2 0x100
0x878 EXP
0x879 SWAP1
0x87a DIV
0x87b PUSH1 0x1
0x87d PUSH1 0xa0
0x87f PUSH1 0x2
0x881 EXP
0x882 SUB
0x883 AND
0x884 SWAP1
0x885 POP
0x886 PUSH1 0x0
0x888 PUSH1 0x2
0x88a DUP6
0x88b PUSH8 0xffffffffffffffff
0x894 AND
0x895 PUSH1 0x40
0x897 PUSH1 0x2
0x899 EXP
0x89a DUP2
0x89b LT
0x89c ISZERO
0x89d ISZERO
0x89e PUSH2 0x8a3
0x8a1 JUMPI
---
0x871: JUMPDEST 
0x873: V674 = S[V672]
0x875: V675 = 0x100
0x878: V676 = EXP 0x100 0x0
0x87a: V677 = DIV V674 0x1
0x87b: V678 = 0x1
0x87d: V679 = 0xa0
0x87f: V680 = 0x2
0x881: V681 = EXP 0x2 0xa0
0x882: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x883: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0x886: V684 = 0x0
0x888: V685 = 0x2
0x88b: V686 = 0xffffffffffffffff
0x894: V687 = AND 0xffffffffffffffff V78
0x895: V688 = 0x40
0x897: V689 = 0x2
0x899: V690 = EXP 0x2 0x40
0x89b: V691 = LT V687 0x10000000000000000
0x89c: V692 = ISZERO V691
0x89d: V693 = ISZERO V692
0x89e: V694 = 0x8a3
0x8a1: JUMPI 0x8a3 V693
---
Entry stack: [V12, 0x4d, V78, V81, V83, 0x0, V672, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V683, 0x0, 0x2, V687]
Exit stack: [V12, 0x4d, V78, V81, V83, V683, 0x0, 0x2, V687]

================================

Block 0x8a2
[0x8a2:0x8a2]
---
Predecessors: [0x871]
Successors: []
---
0x8a2 INVALID
---
0x8a2: INVALID 
---
Entry stack: [V12, 0x4d, V78, V81, V83, V683, 0x0, 0x2, V687]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V78, V81, V83, V683, 0x0, 0x2, V687]

================================

Block 0x8a3
[0x8a3:0x8a6]
---
Predecessors: [0x871]
Successors: [0x8a7]
---
0x8a3 JUMPDEST
0x8a4 ADD
0x8a5 PUSH1 0x0
---
0x8a3: JUMPDEST 
0x8a4: V695 = ADD V687 0x2
0x8a5: V696 = 0x0
---
Entry stack: [V12, 0x4d, V78, V81, V83, V683, 0x0, 0x2, V687]
Stack pops: 2
Stack additions: [V695, 0x0]
Exit stack: [V12, 0x4d, V78, V81, V83, V683, 0x0, V695, 0x0]

================================

Block 0x8a7
[0x8a7:0x8dc]
---
Predecessors: [0x8a3]
Successors: [0x8dd, 0x93f]
---
0x8a7 JUMPDEST
0x8a8 PUSH2 0x100
0x8ab EXP
0x8ac DUP2
0x8ad SLOAD
0x8ae DUP2
0x8af PUSH1 0x1
0x8b1 PUSH1 0xa0
0x8b3 PUSH1 0x2
0x8b5 EXP
0x8b6 SUB
0x8b7 MUL
0x8b8 NOT
0x8b9 AND
0x8ba SWAP1
0x8bb DUP4
0x8bc PUSH1 0x1
0x8be PUSH1 0xa0
0x8c0 PUSH1 0x2
0x8c2 EXP
0x8c3 SUB
0x8c4 AND
0x8c5 MUL
0x8c6 OR
0x8c7 SWAP1
0x8c8 SSTORE
0x8c9 POP
0x8ca PUSH1 0x2
0x8cc DUP4
0x8cd PUSH8 0xffffffffffffffff
0x8d6 AND
0x8d7 LT
0x8d8 ISZERO
0x8d9 PUSH2 0x93f
0x8dc JUMPI
---
0x8a7: JUMPDEST 
0x8a8: V697 = 0x100
0x8ab: V698 = EXP 0x100 0x0
0x8ad: V699 = S[V695]
0x8af: V700 = 0x1
0x8b1: V701 = 0xa0
0x8b3: V702 = 0x2
0x8b5: V703 = EXP 0x2 0xa0
0x8b6: V704 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b7: V705 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x8b8: V706 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8b9: V707 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V699
0x8bc: V708 = 0x1
0x8be: V709 = 0xa0
0x8c0: V710 = 0x2
0x8c2: V711 = EXP 0x2 0xa0
0x8c3: V712 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c4: V713 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x8c5: V714 = MUL 0x0 0x1
0x8c6: V715 = OR 0x0 V707
0x8c8: S[V695] = V715
0x8ca: V716 = 0x2
0x8cd: V717 = 0xffffffffffffffff
0x8d6: V718 = AND 0xffffffffffffffff V81
0x8d7: V719 = LT V718 0x2
0x8d8: V720 = ISZERO V719
0x8d9: V721 = 0x93f
0x8dc: JUMPI 0x93f V720
---
Entry stack: [V12, 0x4d, V78, V81, V83, V683, 0x0, V695, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, 0x4d, V78, V81, V83, V683]

================================

Block 0x8dd
[0x8dd:0x93e]
---
Predecessors: [0x8a7]
Successors: [0x9e5]
---
0x8dd PUSH1 0x40
0x8df DUP1
0x8e0 MLOAD
0x8e1 PUSH1 0x7
0x8e3 DUP7
0x8e4 DUP2
0x8e5 SIGNEXTEND
0x8e6 SWAP1
0x8e7 SIGNEXTEND
0x8e8 DUP2
0x8e9 MSTORE
0x8ea PUSH1 0x1
0x8ec PUSH1 0xa0
0x8ee PUSH1 0x2
0x8f0 EXP
0x8f1 SUB
0x8f2 DUP4
0x8f3 AND
0x8f4 PUSH1 0x20
0x8f6 DUP3
0x8f7 ADD
0x8f8 MSTORE
0x8f9 PUSH8 0xffffffffffffffff
0x902 DUP6
0x903 AND
0x904 DUP2
0x905 DUP4
0x906 ADD
0x907 MSTORE
0x908 PUSH1 0x60
0x90a DUP2
0x90b ADD
0x90c DUP5
0x90d SWAP1
0x90e MSTORE
0x90f SWAP1
0x910 MLOAD
0x911 PUSH32 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x932 SWAP2
0x933 DUP2
0x934 SWAP1
0x935 SUB
0x936 PUSH1 0x80
0x938 ADD
0x939 SWAP1
0x93a LOG1
0x93b PUSH2 0x9e5
0x93e JUMP
---
0x8dd: V722 = 0x40
0x8e0: V723 = M[0x40]
0x8e1: V724 = 0x7
0x8e5: V725 = SIGNEXTEND 0x7 V78
0x8e7: V726 = SIGNEXTEND 0x7 V725
0x8e9: M[V723] = V726
0x8ea: V727 = 0x1
0x8ec: V728 = 0xa0
0x8ee: V729 = 0x2
0x8f0: V730 = EXP 0x2 0xa0
0x8f1: V731 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f3: V732 = AND V683 0xffffffffffffffffffffffffffffffffffffffff
0x8f4: V733 = 0x20
0x8f7: V734 = ADD V723 0x20
0x8f8: M[V734] = V732
0x8f9: V735 = 0xffffffffffffffff
0x903: V736 = AND V81 0xffffffffffffffff
0x906: V737 = ADD 0x40 V723
0x907: M[V737] = V736
0x908: V738 = 0x60
0x90b: V739 = ADD V723 0x60
0x90e: M[V739] = V83
0x910: V740 = M[0x40]
0x911: V741 = 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x935: V742 = SUB V723 V740
0x936: V743 = 0x80
0x938: V744 = ADD 0x80 V742
0x93a: LOG V740 V744 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x93b: V745 = 0x9e5
0x93e: JUMP 0x9e5
---
Entry stack: [V12, 0x4d, V78, V81, V83, V683]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x4d, V78, V81, V83, V683]

================================

Block 0x93f
[0x93f:0x969]
---
Predecessors: [0x8a7]
Successors: [0x96a, 0x96b]
---
0x93f JUMPDEST
0x940 PUSH1 0x1
0x942 PUSH1 0xa0
0x944 PUSH1 0x2
0x946 EXP
0x947 SUB
0x948 DUP2
0x949 AND
0x94a PUSH9 0x10000000000000002
0x954 PUSH8 0xffffffffffffffff
0x95d DUP7
0x95e AND
0x95f PUSH1 0x40
0x961 PUSH1 0x2
0x963 EXP
0x964 DUP2
0x965 LT
0x966 PUSH2 0x96b
0x969 JUMPI
---
0x93f: JUMPDEST 
0x940: V746 = 0x1
0x942: V747 = 0xa0
0x944: V748 = 0x2
0x946: V749 = EXP 0x2 0xa0
0x947: V750 = SUB 0x10000000000000000000000000000000000000000 0x1
0x949: V751 = AND V683 0xffffffffffffffffffffffffffffffffffffffff
0x94a: V752 = 0x10000000000000002
0x954: V753 = 0xffffffffffffffff
0x95e: V754 = AND V78 0xffffffffffffffff
0x95f: V755 = 0x40
0x961: V756 = 0x2
0x963: V757 = EXP 0x2 0x40
0x965: V758 = LT V754 0x10000000000000000
0x966: V759 = 0x96b
0x969: JUMPI 0x96b V758
---
Entry stack: [V12, 0x4d, V78, V81, V83, V683]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V751, 0x10000000000000002, V754]
Exit stack: [V12, 0x4d, V78, V81, V83, V683, V751, 0x10000000000000002, V754]

================================

Block 0x96a
[0x96a:0x96a]
---
Predecessors: [0x93f]
Successors: []
---
0x96a INVALID
---
0x96a: INVALID 
---
Entry stack: [V12, 0x4d, V78, V81, V83, V683, V751, 0x10000000000000002, V754]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V78, V81, V83, V683, V751, 0x10000000000000002, V754]

================================

Block 0x96b
[0x96b:0x96e]
---
Predecessors: [0x93f]
Successors: [0x96f]
---
0x96b JUMPDEST
0x96c ADD
0x96d PUSH1 0x0
---
0x96b: JUMPDEST 
0x96c: V760 = ADD V754 0x10000000000000002
0x96d: V761 = 0x0
---
Entry stack: [V12, 0x4d, V78, V81, V83, V683, V751, 0x10000000000000002, V754]
Stack pops: 2
Stack additions: [V760, 0x0]
Exit stack: [V12, 0x4d, V78, V81, V83, V683, V751, V760, 0x0]

================================

Block 0x96f
[0x96f:0x9e4]
---
Predecessors: [0x96b]
Successors: [0x9e5]
---
0x96f JUMPDEST
0x970 POP
0x971 SLOAD
0x972 PUSH1 0x40
0x974 MLOAD
0x975 PUSH1 0x0
0x977 DUP2
0x978 DUP2
0x979 DUP2
0x97a DUP6
0x97b DUP8
0x97c PUSH2 0x8502
0x97f GAS
0x980 SUB
0x981 CALL
0x982 POP
0x983 POP
0x984 PUSH1 0x40
0x986 DUP1
0x987 MLOAD
0x988 PUSH1 0x7
0x98a DUP9
0x98b DUP2
0x98c SIGNEXTEND
0x98d SWAP1
0x98e SIGNEXTEND
0x98f DUP2
0x990 MSTORE
0x991 PUSH1 0x1
0x993 PUSH1 0xa0
0x995 PUSH1 0x2
0x997 EXP
0x998 SUB
0x999 CALLER
0x99a AND
0x99b PUSH1 0x20
0x99d DUP3
0x99e ADD
0x99f MSTORE
0x9a0 PUSH8 0xffffffffffffffff
0x9a9 DUP8
0x9aa AND
0x9ab DUP2
0x9ac DUP4
0x9ad ADD
0x9ae MSTORE
0x9af PUSH1 0x0
0x9b1 PUSH1 0x60
0x9b3 DUP3
0x9b4 ADD
0x9b5 MSTORE
0x9b6 SWAP1
0x9b7 MLOAD
0x9b8 PUSH32 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x9d9 SWAP4
0x9da POP
0x9db SWAP1
0x9dc DUP2
0x9dd SWAP1
0x9de SUB
0x9df PUSH1 0x80
0x9e1 ADD
0x9e2 SWAP2
0x9e3 POP
0x9e4 LOG1
---
0x96f: JUMPDEST 
0x971: V762 = S[V760]
0x972: V763 = 0x40
0x974: V764 = M[0x40]
0x975: V765 = 0x0
0x97c: V766 = 0x8502
0x97f: V767 = GAS
0x980: V768 = SUB V767 0x8502
0x981: V769 = CALL V768 V751 V762 V764 0x0 V764 0x0
0x984: V770 = 0x40
0x987: V771 = M[0x40]
0x988: V772 = 0x7
0x98c: V773 = SIGNEXTEND 0x7 V78
0x98e: V774 = SIGNEXTEND 0x7 V773
0x990: M[V771] = V774
0x991: V775 = 0x1
0x993: V776 = 0xa0
0x995: V777 = 0x2
0x997: V778 = EXP 0x2 0xa0
0x998: V779 = SUB 0x10000000000000000000000000000000000000000 0x1
0x999: V780 = CALLER
0x99a: V781 = AND V780 0xffffffffffffffffffffffffffffffffffffffff
0x99b: V782 = 0x20
0x99e: V783 = ADD V771 0x20
0x99f: M[V783] = V781
0x9a0: V784 = 0xffffffffffffffff
0x9aa: V785 = AND V81 0xffffffffffffffff
0x9ad: V786 = ADD 0x40 V771
0x9ae: M[V786] = V785
0x9af: V787 = 0x0
0x9b1: V788 = 0x60
0x9b4: V789 = ADD V771 0x60
0x9b5: M[V789] = 0x0
0x9b7: V790 = M[0x40]
0x9b8: V791 = 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
0x9de: V792 = SUB V771 V790
0x9df: V793 = 0x80
0x9e1: V794 = ADD 0x80 V792
0x9e4: LOG V790 V794 0xc63df27d3a587c8ce643b5f4787b33630b6d3a5405ef44d73445059da61f5278
---
Entry stack: [V12, 0x4d, V78, V81, V83, V683, V751, V760, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3]
Exit stack: [V12, 0x4d, V78, V81, V83, V683]

================================

Block 0x9e5
[0x9e5:0x9e5]
---
Predecessors: [0x7fe, 0x8dd, 0x96f]
Successors: [0x9e6]
---
0x9e5 JUMPDEST
---
0x9e5: JUMPDEST 
---
Entry stack: [V12, 0x4d, V78, V81, V83, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4d, V78, V81, V83, S0]

================================

Block 0x9e6
[0x9e6:0x9eb]
---
Predecessors: [0x9e5]
Successors: [0x4d]
---
0x9e6 JUMPDEST
0x9e7 POP
0x9e8 POP
0x9e9 POP
0x9ea POP
0x9eb JUMP
---
0x9e6: JUMPDEST 
0x9eb: JUMP 0x4d
---
Entry stack: [V12, 0x4d, V78, V81, V83, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x9ec
[0x9ec:0xa17]
---
Predecessors: []
Successors: []
---
0x9ec STOP
0x9ed LOG1
0x9ee PUSH6 0x627a7a723058
0x9f5 SHA3
0x9f6 CALLDATASIZE
0x9f7 MISSING 0xaa
0x9f8 SWAP1
0x9f9 DUP4
0x9fa MISSING 0xc9
0x9fb MISSING 0xe
0x9fc MISSING 0xb1
0x9fd PUSH25 0x26a132a6643ee2d5534463f7d686194b98361192b75ad63600
0xa17 MISSING 0x29
---
0x9ec: STOP 
0x9ed: LOG S0 S1 S2
0x9ee: V795 = 0x627a7a723058
0x9f5: V796 = SHA3 0x627a7a723058 S3
0x9f6: V797 = CALLDATASIZE
0x9f7: MISSING 0xaa
0x9fa: MISSING 0xc9
0x9fb: MISSING 0xe
0x9fc: MISSING 0xb1
0x9fd: V798 = 0x26a132a6643ee2d5534463f7d686194b98361192b75ad63600
0xa17: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V797, V796, S3, S1, S0, S2, S3, 0x26a132a6643ee2d5534463f7d686194b98361192b75ad63600]
Exit stack: []

================================

Function 0:
Public function signature: 0x26d2d1b3
Entry block: 0x4f
Exit block: 0x488
Body: 0x4d, 0x4f, 0x110, 0x122, 0x149, 0x14d, 0x1ca, 0x1d8, 0x1ea, 0x204, 0x2f0, 0x2fe, 0x310, 0x332, 0x333, 0x340, 0x341, 0x355, 0x37c, 0x380, 0x3fd, 0x40b, 0x437, 0x447, 0x448, 0x44c, 0x488, 0x489, 0x48d, 0x510, 0x51e, 0x530, 0x546

Function 1:
Public function signature: 0x4c125e79
Entry block: 0x9d
Exit block: 0x724
Body: 0x4d, 0x9d, 0xa4, 0xa5, 0x54b, 0x55f, 0x582, 0x583, 0x587, 0x5a5, 0x5ab, 0x601, 0x674, 0x675, 0x681, 0x682, 0x695, 0x6af, 0x6b0, 0x6b4, 0x6fe, 0x6ff, 0x703, 0x724, 0x728, 0x77f, 0x7d2, 0x7d3

Function 2:
Public function signature: 0xedad1978
Entry block: 0xbc
Exit block: 0xcc
Body: 0xbc, 0xc3, 0xc4, 0xcc, 0x7d7

Function 3:
Public function signature: 0xfee36947
Entry block: 0xe8
Exit block: 0x96a
Body: 0x4d, 0xe8, 0xef, 0xf0, 0x7e6, 0x7fe, 0x853, 0x86c, 0x86d, 0x871, 0x8a2, 0x8a3, 0x8a7, 0x8dd, 0x93f, 0x96a, 0x96b, 0x96f, 0x9e5, 0x9e6

Function 4:
Public fallback function
Entry block: 0x46
Exit block: 0x4d
Body: 0x46, 0x4a, 0x4b, 0x4d

