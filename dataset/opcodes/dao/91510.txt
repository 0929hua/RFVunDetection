Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x55]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x55
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x55
0xa: JUMPI 0x55 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x57]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0xb4a99a4e
0x3a EQ
0x3b PUSH2 0x57
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0xb4a99a4e
0x3a: V12 = EQ 0xb4a99a4e V10
0x3b: V13 = 0x57
0x3e: JUMPI 0x57 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xac]
---
0x3f DUP1
0x40 PUSH4 0xd4e93292
0x45 EQ
0x46 PUSH2 0xac
0x49 JUMPI
---
0x40: V14 = 0xd4e93292
0x45: V15 = EQ 0xd4e93292 V10
0x46: V16 = 0xac
0x49: JUMPI 0xac V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xb6]
---
0x4a DUP1
0x4b PUSH4 0xfe4ce35a
0x50 EQ
0x51 PUSH2 0xb6
0x54 JUMPI
---
0x4b: V17 = 0xfe4ce35a
0x50: V18 = EQ 0xfe4ce35a V10
0x51: V19 = 0xb6
0x54: JUMPI 0xb6 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x56]
---
Predecessors: [0x0, 0x4a]
Successors: []
---
0x55 JUMPDEST
0x56 STOP
---
0x55: JUMPDEST 
0x56: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x57
[0x57:0x5d]
---
Predecessors: [0xb]
Successors: [0x5e, 0x62]
---
0x57 JUMPDEST
0x58 CALLVALUE
0x59 ISZERO
0x5a PUSH2 0x62
0x5d JUMPI
---
0x57: JUMPDEST 
0x58: V20 = CALLVALUE
0x59: V21 = ISZERO V20
0x5a: V22 = 0x62
0x5d: JUMPI 0x62 V21
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5e
[0x5e:0x61]
---
Predecessors: [0x57]
Successors: []
---
0x5e PUSH1 0x0
0x60 DUP1
0x61 REVERT
---
0x5e: V23 = 0x0
0x61: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x62
[0x62:0x69]
---
Predecessors: [0x57]
Successors: [0xed]
---
0x62 JUMPDEST
0x63 PUSH2 0x6a
0x66 PUSH2 0xed
0x69 JUMP
---
0x62: JUMPDEST 
0x63: V24 = 0x6a
0x66: V25 = 0xed
0x69: JUMP 0xed
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x6a]
Exit stack: [V10, 0x6a]

================================

Block 0x6a
[0x6a:0xab]
---
Predecessors: [0xed]
Successors: []
---
0x6a JUMPDEST
0x6b PUSH1 0x40
0x6d MLOAD
0x6e DUP1
0x6f DUP3
0x70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85 AND
0x86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b AND
0x9c DUP2
0x9d MSTORE
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP2
0xa2 POP
0xa3 POP
0xa4 PUSH1 0x40
0xa6 MLOAD
0xa7 DUP1
0xa8 SWAP2
0xa9 SUB
0xaa SWAP1
0xab RETURN
---
0x6a: JUMPDEST 
0x6b: V26 = 0x40
0x6d: V27 = M[0x40]
0x70: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x85: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x86: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x9d: M[V27] = V31
0x9e: V32 = 0x20
0xa0: V33 = ADD 0x20 V27
0xa4: V34 = 0x40
0xa6: V35 = M[0x40]
0xa9: V36 = SUB V33 V35
0xab: RETURN V35 V36
---
Entry stack: [V10, 0x6a, V56]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x6a]

================================

Block 0xac
[0xac:0xb3]
---
Predecessors: [0x3f]
Successors: [0x112]
---
0xac JUMPDEST
0xad PUSH2 0xb4
0xb0 PUSH2 0x112
0xb3 JUMP
---
0xac: JUMPDEST 
0xad: V37 = 0xb4
0xb0: V38 = 0x112
0xb3: JUMP 0x112
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V10, 0xb4]

================================

Block 0xb4
[0xb4:0xb5]
---
Predecessors: [0x18a]
Successors: []
---
0xb4 JUMPDEST
0xb5 STOP
---
0xb4: JUMPDEST 
0xb5: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb6
[0xb6:0xea]
---
Predecessors: [0x4a]
Successors: [0x18c]
---
0xb6 JUMPDEST
0xb7 PUSH2 0xeb
0xba PUSH1 0x4
0xbc DUP1
0xbd DUP1
0xbe CALLDATALOAD
0xbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4 AND
0xd5 SWAP1
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP1
0xda SWAP2
0xdb SWAP1
0xdc DUP1
0xdd CALLDATALOAD
0xde SWAP1
0xdf PUSH1 0x20
0xe1 ADD
0xe2 SWAP1
0xe3 SWAP2
0xe4 SWAP1
0xe5 POP
0xe6 POP
0xe7 PUSH2 0x18c
0xea JUMP
---
0xb6: JUMPDEST 
0xb7: V39 = 0xeb
0xba: V40 = 0x4
0xbe: V41 = CALLDATALOAD 0x4
0xbf: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xd6: V44 = 0x20
0xd8: V45 = ADD 0x20 0x4
0xdd: V46 = CALLDATALOAD 0x24
0xdf: V47 = 0x20
0xe1: V48 = ADD 0x20 0x24
0xe7: V49 = 0x18c
0xea: JUMP 0x18c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xeb, V43, V46]
Exit stack: [V10, 0xeb, V43, V46]

================================

Block 0xeb
[0xeb:0xec]
---
Predecessors: [0x615]
Successors: []
---
0xeb JUMPDEST
0xec STOP
---
0xeb: JUMPDEST 
0xec: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xed
[0xed:0x111]
---
Predecessors: [0x62]
Successors: [0x6a]
---
0xed JUMPDEST
0xee PUSH1 0x0
0xf0 DUP1
0xf1 SWAP1
0xf2 SLOAD
0xf3 SWAP1
0xf4 PUSH2 0x100
0xf7 EXP
0xf8 SWAP1
0xf9 DIV
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f AND
0x110 DUP2
0x111 JUMP
---
0xed: JUMPDEST 
0xee: V50 = 0x0
0xf2: V51 = S[0x0]
0xf4: V52 = 0x100
0xf7: V53 = EXP 0x100 0x0
0xf9: V54 = DIV V51 0x1
0xfa: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x111: JUMP 0x6a
---
Entry stack: [V10, 0x6a]
Stack pops: 1
Stack additions: [S0, V56]
Exit stack: [V10, 0x6a, V56]

================================

Block 0x112
[0x112:0x185]
---
Predecessors: [0xac]
Successors: [0x186, 0x18a]
---
0x112 JUMPDEST
0x113 PUSH1 0x0
0x115 DUP1
0x116 SWAP1
0x117 SLOAD
0x118 SWAP1
0x119 PUSH2 0x100
0x11c EXP
0x11d SWAP1
0x11e DIV
0x11f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x134 AND
0x135 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14a AND
0x14b PUSH2 0x8fc
0x14e ADDRESS
0x14f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x164 AND
0x165 BALANCE
0x166 SWAP1
0x167 DUP2
0x168 ISZERO
0x169 MUL
0x16a SWAP1
0x16b PUSH1 0x40
0x16d MLOAD
0x16e PUSH1 0x0
0x170 PUSH1 0x40
0x172 MLOAD
0x173 DUP1
0x174 DUP4
0x175 SUB
0x176 DUP2
0x177 DUP6
0x178 DUP9
0x179 DUP9
0x17a CALL
0x17b SWAP4
0x17c POP
0x17d POP
0x17e POP
0x17f POP
0x180 ISZERO
0x181 ISZERO
0x182 PUSH2 0x18a
0x185 JUMPI
---
0x112: JUMPDEST 
0x113: V57 = 0x0
0x117: V58 = S[0x0]
0x119: V59 = 0x100
0x11c: V60 = EXP 0x100 0x0
0x11e: V61 = DIV V58 0x1
0x11f: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x134: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x135: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x14b: V66 = 0x8fc
0x14e: V67 = ADDRESS
0x14f: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x164: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x165: V70 = BALANCE V69
0x168: V71 = ISZERO V70
0x169: V72 = MUL V71 0x8fc
0x16b: V73 = 0x40
0x16d: V74 = M[0x40]
0x16e: V75 = 0x0
0x170: V76 = 0x40
0x172: V77 = M[0x40]
0x175: V78 = SUB V74 V77
0x17a: V79 = CALL V72 V65 V70 V77 V78 V77 0x0
0x180: V80 = ISZERO V79
0x181: V81 = ISZERO V80
0x182: V82 = 0x18a
0x185: JUMPI 0x18a V81
---
Entry stack: [V10, 0xb4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb4]

================================

Block 0x186
[0x186:0x189]
---
Predecessors: [0x112]
Successors: []
---
0x186 PUSH1 0x0
0x188 DUP1
0x189 REVERT
---
0x186: V83 = 0x0
0x189: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb4]

================================

Block 0x18a
[0x18a:0x18b]
---
Predecessors: [0x112]
Successors: [0xb4]
---
0x18a JUMPDEST
0x18b JUMP
---
0x18a: JUMPDEST 
0x18b: JUMP 0xb4
---
Entry stack: [V10, 0xb4]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x18c
[0x18c:0x1e5]
---
Predecessors: [0xb6]
Successors: [0x1e6, 0x1ea]
---
0x18c JUMPDEST
0x18d PUSH1 0x0
0x18f DUP1
0x190 PUSH1 0x0
0x192 DUP1
0x193 SWAP1
0x194 SLOAD
0x195 SWAP1
0x196 PUSH2 0x100
0x199 EXP
0x19a SWAP1
0x19b DIV
0x19c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b1 AND
0x1b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c7 AND
0x1c8 CALLER
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df EQ
0x1e0 ISZERO
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x18c: JUMPDEST 
0x18d: V84 = 0x0
0x190: V85 = 0x0
0x194: V86 = S[0x0]
0x196: V87 = 0x100
0x199: V88 = EXP 0x100 0x0
0x19b: V89 = DIV V86 0x1
0x19c: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1b2: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x1c8: V94 = CALLER
0x1c9: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1df: V97 = EQ V96 V93
0x1e0: V98 = ISZERO V97
0x1e1: V99 = ISZERO V98
0x1e2: V100 = 0x1ea
0x1e5: JUMPI 0x1ea V99
---
Entry stack: [V10, 0xeb, V43, V46]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xeb, V43, V46, 0x0, 0x0]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x18c]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V101 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V10, 0xeb, V43, V46, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xeb, V43, V46, 0x0, 0x0]

================================

Block 0x1ea
[0x1ea:0x2bb]
---
Predecessors: [0x18c]
Successors: [0x2bc, 0x2c0]
---
0x1ea JUMPDEST
0x1eb DUP4
0x1ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x201 AND
0x202 BALANCE
0x203 SWAP2
0x204 POP
0x205 DUP4
0x206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21b AND
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 DUP1
0x221 PUSH32 0x696e69745661756c742829000000000000000000000000000000000000000000
0x242 DUP2
0x243 MSTORE
0x244 POP
0x245 PUSH1 0xb
0x247 ADD
0x248 SWAP1
0x249 POP
0x24a PUSH1 0x40
0x24c MLOAD
0x24d DUP1
0x24e SWAP2
0x24f SUB
0x250 SWAP1
0x251 SHA3
0x252 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x270 SWAP1
0x271 DIV
0x272 PUSH1 0x40
0x274 MLOAD
0x275 DUP2
0x276 PUSH4 0xffffffff
0x27b AND
0x27c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x29a MUL
0x29b DUP2
0x29c MSTORE
0x29d PUSH1 0x4
0x29f ADD
0x2a0 PUSH1 0x0
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 DUP1
0x2a6 DUP4
0x2a7 SUB
0x2a8 DUP2
0x2a9 PUSH1 0x0
0x2ab DUP8
0x2ac PUSH2 0x646e
0x2af GAS
0x2b0 SUB
0x2b1 CALL
0x2b2 SWAP3
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 ISZERO
0x2b7 ISZERO
0x2b8 PUSH2 0x2c0
0x2bb JUMPI
---
0x1ea: JUMPDEST 
0x1ec: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x201: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x202: V104 = BALANCE V103
0x206: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x21c: V107 = 0x40
0x21e: V108 = M[0x40]
0x221: V109 = 0x696e69745661756c742829000000000000000000000000000000000000000000
0x243: M[V108] = 0x696e69745661756c742829000000000000000000000000000000000000000000
0x245: V110 = 0xb
0x247: V111 = ADD 0xb V108
0x24a: V112 = 0x40
0x24c: V113 = M[0x40]
0x24f: V114 = SUB V111 V113
0x251: V115 = SHA3 V113 V114
0x252: V116 = 0x100000000000000000000000000000000000000000000000000000000
0x271: V117 = DIV V115 0x100000000000000000000000000000000000000000000000000000000
0x272: V118 = 0x40
0x274: V119 = M[0x40]
0x276: V120 = 0xffffffff
0x27b: V121 = AND 0xffffffff V117
0x27c: V122 = 0x100000000000000000000000000000000000000000000000000000000
0x29a: V123 = MUL 0x100000000000000000000000000000000000000000000000000000000 V121
0x29c: M[V119] = V123
0x29d: V124 = 0x4
0x29f: V125 = ADD 0x4 V119
0x2a0: V126 = 0x0
0x2a2: V127 = 0x40
0x2a4: V128 = M[0x40]
0x2a7: V129 = SUB V125 V128
0x2a9: V130 = 0x0
0x2ac: V131 = 0x646e
0x2af: V132 = GAS
0x2b0: V133 = SUB V132 0x646e
0x2b1: V134 = CALL V133 V106 0x0 V128 V129 V128 0x0
0x2b6: V135 = ISZERO V134
0x2b7: V136 = ISZERO V135
0x2b8: V137 = 0x2c0
0x2bb: JUMPI 0x2c0 V136
---
Entry stack: [V10, 0xeb, V43, V46, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V104, S0]
Exit stack: [V10, 0xeb, V43, V46, V104, 0x0]

================================

Block 0x2bc
[0x2bc:0x2bf]
---
Predecessors: [0x1ea]
Successors: []
---
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf REVERT
---
0x2bc: V138 = 0x0
0x2bf: REVERT 0x0 0x0
---
Entry stack: [V10, 0xeb, V43, V46, V104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xeb, V43, V46, V104, 0x0]

================================

Block 0x2c0
[0x2c0:0x386]
---
Predecessors: [0x1ea]
Successors: [0x387, 0x38b]
---
0x2c0 JUMPDEST
0x2c1 DUP4
0x2c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d7 AND
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db DUP1
0x2dc DUP1
0x2dd PUSH32 0x53657452656c65617365446174652875696e7432353629000000000000000000
0x2fe DUP2
0x2ff MSTORE
0x300 POP
0x301 PUSH1 0x17
0x303 ADD
0x304 SWAP1
0x305 POP
0x306 PUSH1 0x40
0x308 MLOAD
0x309 DUP1
0x30a SWAP2
0x30b SUB
0x30c SWAP1
0x30d SHA3
0x30e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x32c SWAP1
0x32d DIV
0x32e PUSH1 0x1
0x330 PUSH1 0x40
0x332 MLOAD
0x333 DUP3
0x334 PUSH4 0xffffffff
0x339 AND
0x33a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x358 MUL
0x359 DUP2
0x35a MSTORE
0x35b PUSH1 0x4
0x35d ADD
0x35e DUP1
0x35f DUP3
0x360 PUSH1 0xff
0x362 AND
0x363 DUP2
0x364 MSTORE
0x365 PUSH1 0x20
0x367 ADD
0x368 SWAP2
0x369 POP
0x36a POP
0x36b PUSH1 0x0
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 DUP4
0x372 SUB
0x373 DUP2
0x374 PUSH1 0x0
0x376 DUP8
0x377 PUSH2 0x646e
0x37a GAS
0x37b SUB
0x37c CALL
0x37d SWAP3
0x37e POP
0x37f POP
0x380 POP
0x381 ISZERO
0x382 ISZERO
0x383 PUSH2 0x38b
0x386 JUMPI
---
0x2c0: JUMPDEST 
0x2c2: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x2d8: V141 = 0x40
0x2da: V142 = M[0x40]
0x2dd: V143 = 0x53657452656c65617365446174652875696e7432353629000000000000000000
0x2ff: M[V142] = 0x53657452656c65617365446174652875696e7432353629000000000000000000
0x301: V144 = 0x17
0x303: V145 = ADD 0x17 V142
0x306: V146 = 0x40
0x308: V147 = M[0x40]
0x30b: V148 = SUB V145 V147
0x30d: V149 = SHA3 V147 V148
0x30e: V150 = 0x100000000000000000000000000000000000000000000000000000000
0x32d: V151 = DIV V149 0x100000000000000000000000000000000000000000000000000000000
0x32e: V152 = 0x1
0x330: V153 = 0x40
0x332: V154 = M[0x40]
0x334: V155 = 0xffffffff
0x339: V156 = AND 0xffffffff V151
0x33a: V157 = 0x100000000000000000000000000000000000000000000000000000000
0x358: V158 = MUL 0x100000000000000000000000000000000000000000000000000000000 V156
0x35a: M[V154] = V158
0x35b: V159 = 0x4
0x35d: V160 = ADD 0x4 V154
0x360: V161 = 0xff
0x362: V162 = AND 0xff 0x1
0x364: M[V160] = 0x1
0x365: V163 = 0x20
0x367: V164 = ADD 0x20 V160
0x36b: V165 = 0x0
0x36d: V166 = 0x40
0x36f: V167 = M[0x40]
0x372: V168 = SUB V164 V167
0x374: V169 = 0x0
0x377: V170 = 0x646e
0x37a: V171 = GAS
0x37b: V172 = SUB V171 0x646e
0x37c: V173 = CALL V172 V140 0x0 V167 V168 V167 0x0
0x381: V174 = ISZERO V173
0x382: V175 = ISZERO V174
0x383: V176 = 0x38b
0x386: JUMPI 0x38b V175
---
Entry stack: [V10, 0xeb, V43, V46, V104, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xeb, V43, V46, V104, 0x0]

================================

Block 0x387
[0x387:0x38a]
---
Predecessors: [0x2c0]
Successors: []
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
---
0x387: V177 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V10, 0xeb, V43, V46, V104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xeb, V43, V46, V104, 0x0]

================================

Block 0x38b
[0x38b:0x44c]
---
Predecessors: [0x2c0]
Successors: [0x44d, 0x451]
---
0x38b JUMPDEST
0x38c DUP4
0x38d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a2 AND
0x3a3 PUSH8 0x16345785d8a0000
0x3ac PUSH1 0x40
0x3ae MLOAD
0x3af DUP1
0x3b0 DUP1
0x3b1 PUSH32 0x6465706f73697428290000000000000000000000000000000000000000000000
0x3d2 DUP2
0x3d3 MSTORE
0x3d4 POP
0x3d5 PUSH1 0x9
0x3d7 ADD
0x3d8 SWAP1
0x3d9 POP
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd DUP1
0x3de SWAP2
0x3df SUB
0x3e0 SWAP1
0x3e1 SHA3
0x3e2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x400 SWAP1
0x401 DIV
0x402 SWAP1
0x403 PUSH1 0x40
0x405 MLOAD
0x406 DUP3
0x407 PUSH4 0xffffffff
0x40c AND
0x40d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x42b MUL
0x42c DUP2
0x42d MSTORE
0x42e PUSH1 0x4
0x430 ADD
0x431 PUSH1 0x0
0x433 PUSH1 0x40
0x435 MLOAD
0x436 DUP1
0x437 DUP4
0x438 SUB
0x439 DUP2
0x43a DUP6
0x43b DUP9
0x43c PUSH2 0x8796
0x43f GAS
0x440 SUB
0x441 CALL
0x442 SWAP4
0x443 POP
0x444 POP
0x445 POP
0x446 POP
0x447 ISZERO
0x448 ISZERO
0x449 PUSH2 0x451
0x44c JUMPI
---
0x38b: JUMPDEST 
0x38d: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x3a3: V180 = 0x16345785d8a0000
0x3ac: V181 = 0x40
0x3ae: V182 = M[0x40]
0x3b1: V183 = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x3d3: M[V182] = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x3d5: V184 = 0x9
0x3d7: V185 = ADD 0x9 V182
0x3da: V186 = 0x40
0x3dc: V187 = M[0x40]
0x3df: V188 = SUB V185 V187
0x3e1: V189 = SHA3 V187 V188
0x3e2: V190 = 0x100000000000000000000000000000000000000000000000000000000
0x401: V191 = DIV V189 0x100000000000000000000000000000000000000000000000000000000
0x403: V192 = 0x40
0x405: V193 = M[0x40]
0x407: V194 = 0xffffffff
0x40c: V195 = AND 0xffffffff V191
0x40d: V196 = 0x100000000000000000000000000000000000000000000000000000000
0x42b: V197 = MUL 0x100000000000000000000000000000000000000000000000000000000 V195
0x42d: M[V193] = V197
0x42e: V198 = 0x4
0x430: V199 = ADD 0x4 V193
0x431: V200 = 0x0
0x433: V201 = 0x40
0x435: V202 = M[0x40]
0x438: V203 = SUB V199 V202
0x43c: V204 = 0x8796
0x43f: V205 = GAS
0x440: V206 = SUB V205 0x8796
0x441: V207 = CALL V206 V179 0x16345785d8a0000 V202 V203 V202 0x0
0x447: V208 = ISZERO V207
0x448: V209 = ISZERO V208
0x449: V210 = 0x451
0x44c: JUMPI 0x451 V209
---
Entry stack: [V10, 0xeb, V43, V46, V104, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xeb, V43, V46, V104, 0x0]

================================

Block 0x44d
[0x44d:0x450]
---
Predecessors: [0x38b]
Successors: []
---
0x44d PUSH1 0x0
0x44f DUP1
0x450 REVERT
---
0x44d: V211 = 0x0
0x450: REVERT 0x0 0x0
---
Entry stack: [V10, 0xeb, V43, V46, V104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xeb, V43, V46, V104, 0x0]

================================

Block 0x451
[0x451:0x455]
---
Predecessors: [0x38b]
Successors: [0x456]
---
0x451 JUMPDEST
0x452 PUSH1 0x0
0x454 SWAP1
0x455 POP
---
0x451: JUMPDEST 
0x452: V212 = 0x0
---
Entry stack: [V10, 0xeb, V43, V46, V104, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0xeb, V43, V46, V104, 0x0]

================================

Block 0x456
[0x456:0x45e]
---
Predecessors: [0x451, 0x58c]
Successors: [0x45f, 0x599]
---
0x456 JUMPDEST
0x457 DUP3
0x458 DUP2
0x459 LT
0x45a ISZERO
0x45b PUSH2 0x599
0x45e JUMPI
---
0x456: JUMPDEST 
0x459: V213 = LT S0 V46
0x45a: V214 = ISZERO V213
0x45b: V215 = 0x599
0x45e: JUMPI 0x599 V214
---
Entry stack: [V10, 0xeb, V43, V46, V104, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xeb, V43, V46, V104, S0]

================================

Block 0x45f
[0x45f:0x587]
---
Predecessors: [0x456]
Successors: [0x588, 0x58c]
---
0x45f DUP4
0x460 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x475 AND
0x476 PUSH1 0x40
0x478 MLOAD
0x479 DUP1
0x47a DUP1
0x47b PUSH32 0x776974686472617728616464726573732c75696e743235362900000000000000
0x49c DUP2
0x49d MSTORE
0x49e POP
0x49f PUSH1 0x19
0x4a1 ADD
0x4a2 SWAP1
0x4a3 POP
0x4a4 PUSH1 0x40
0x4a6 MLOAD
0x4a7 DUP1
0x4a8 SWAP2
0x4a9 SUB
0x4aa SWAP1
0x4ab SHA3
0x4ac PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4ca SWAP1
0x4cb DIV
0x4cc PUSH1 0x0
0x4ce DUP1
0x4cf SWAP1
0x4d0 SLOAD
0x4d1 SWAP1
0x4d2 PUSH2 0x100
0x4d5 EXP
0x4d6 SWAP1
0x4d7 DIV
0x4d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ed AND
0x4ee PUSH8 0x16345785d8a0000
0x4f7 PUSH1 0x40
0x4f9 MLOAD
0x4fa DUP4
0x4fb PUSH4 0xffffffff
0x500 AND
0x501 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x51f MUL
0x520 DUP2
0x521 MSTORE
0x522 PUSH1 0x4
0x524 ADD
0x525 DUP1
0x526 DUP4
0x527 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53c AND
0x53d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x552 AND
0x553 DUP2
0x554 MSTORE
0x555 PUSH1 0x20
0x557 ADD
0x558 DUP3
0x559 PUSH8 0xffffffffffffffff
0x562 AND
0x563 DUP2
0x564 MSTORE
0x565 PUSH1 0x20
0x567 ADD
0x568 SWAP3
0x569 POP
0x56a POP
0x56b POP
0x56c PUSH1 0x0
0x56e PUSH1 0x40
0x570 MLOAD
0x571 DUP1
0x572 DUP4
0x573 SUB
0x574 DUP2
0x575 PUSH1 0x0
0x577 DUP8
0x578 PUSH2 0x646e
0x57b GAS
0x57c SUB
0x57d CALL
0x57e SWAP3
0x57f POP
0x580 POP
0x581 POP
0x582 ISZERO
0x583 ISZERO
0x584 PUSH2 0x58c
0x587 JUMPI
---
0x460: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x475: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x476: V218 = 0x40
0x478: V219 = M[0x40]
0x47b: V220 = 0x776974686472617728616464726573732c75696e743235362900000000000000
0x49d: M[V219] = 0x776974686472617728616464726573732c75696e743235362900000000000000
0x49f: V221 = 0x19
0x4a1: V222 = ADD 0x19 V219
0x4a4: V223 = 0x40
0x4a6: V224 = M[0x40]
0x4a9: V225 = SUB V222 V224
0x4ab: V226 = SHA3 V224 V225
0x4ac: V227 = 0x100000000000000000000000000000000000000000000000000000000
0x4cb: V228 = DIV V226 0x100000000000000000000000000000000000000000000000000000000
0x4cc: V229 = 0x0
0x4d0: V230 = S[0x0]
0x4d2: V231 = 0x100
0x4d5: V232 = EXP 0x100 0x0
0x4d7: V233 = DIV V230 0x1
0x4d8: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ed: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x4ee: V236 = 0x16345785d8a0000
0x4f7: V237 = 0x40
0x4f9: V238 = M[0x40]
0x4fb: V239 = 0xffffffff
0x500: V240 = AND 0xffffffff V228
0x501: V241 = 0x100000000000000000000000000000000000000000000000000000000
0x51f: V242 = MUL 0x100000000000000000000000000000000000000000000000000000000 V240
0x521: M[V238] = V242
0x522: V243 = 0x4
0x524: V244 = ADD 0x4 V238
0x527: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x53c: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x53d: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x552: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x554: M[V244] = V248
0x555: V249 = 0x20
0x557: V250 = ADD 0x20 V244
0x559: V251 = 0xffffffffffffffff
0x562: V252 = AND 0xffffffffffffffff 0x16345785d8a0000
0x564: M[V250] = 0x16345785d8a0000
0x565: V253 = 0x20
0x567: V254 = ADD 0x20 V250
0x56c: V255 = 0x0
0x56e: V256 = 0x40
0x570: V257 = M[0x40]
0x573: V258 = SUB V254 V257
0x575: V259 = 0x0
0x578: V260 = 0x646e
0x57b: V261 = GAS
0x57c: V262 = SUB V261 0x646e
0x57d: V263 = CALL V262 V217 0x0 V257 V258 V257 0x0
0x582: V264 = ISZERO V263
0x583: V265 = ISZERO V264
0x584: V266 = 0x58c
0x587: JUMPI 0x58c V265
---
Entry stack: [V10, 0xeb, V43, V46, V104, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xeb, V43, V46, V104, S0]

================================

Block 0x588
[0x588:0x58b]
---
Predecessors: [0x45f]
Successors: []
---
0x588 PUSH1 0x0
0x58a DUP1
0x58b REVERT
---
0x588: V267 = 0x0
0x58b: REVERT 0x0 0x0
---
Entry stack: [V10, 0xeb, V43, V46, V104, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xeb, V43, V46, V104, S0]

================================

Block 0x58c
[0x58c:0x598]
---
Predecessors: [0x45f]
Successors: [0x456]
---
0x58c JUMPDEST
0x58d DUP1
0x58e DUP1
0x58f PUSH1 0x1
0x591 ADD
0x592 SWAP2
0x593 POP
0x594 POP
0x595 PUSH2 0x456
0x598 JUMP
---
0x58c: JUMPDEST 
0x58f: V268 = 0x1
0x591: V269 = ADD 0x1 S0
0x595: V270 = 0x456
0x598: JUMP 0x456
---
Entry stack: [V10, 0xeb, V43, V46, V104, S0]
Stack pops: 1
Stack additions: [V269]
Exit stack: [V10, 0xeb, V43, V46, V104, V269]

================================

Block 0x599
[0x599:0x5b9]
---
Predecessors: [0x456]
Successors: [0x5ba, 0x5be]
---
0x599 JUMPDEST
0x59a DUP2
0x59b DUP5
0x59c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b1 AND
0x5b2 BALANCE
0x5b3 LT
0x5b4 ISZERO
0x5b5 ISZERO
0x5b6 PUSH2 0x5be
0x5b9 JUMPI
---
0x599: JUMPDEST 
0x59c: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b1: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x5b2: V273 = BALANCE V272
0x5b3: V274 = LT V273 V104
0x5b4: V275 = ISZERO V274
0x5b5: V276 = ISZERO V275
0x5b6: V277 = 0x5be
0x5b9: JUMPI 0x5be V276
---
Entry stack: [V10, 0xeb, V43, V46, V104, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xeb, V43, V46, V104, S0]

================================

Block 0x5ba
[0x5ba:0x5bd]
---
Predecessors: [0x599]
Successors: []
---
0x5ba PUSH1 0x0
0x5bc DUP1
0x5bd REVERT
---
0x5ba: V278 = 0x0
0x5bd: REVERT 0x0 0x0
---
Entry stack: [V10, 0xeb, V43, V46, V104, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xeb, V43, V46, V104, S0]

================================

Block 0x5be
[0x5be:0x610]
---
Predecessors: [0x599]
Successors: [0x611, 0x615]
---
0x5be JUMPDEST
0x5bf CALLER
0x5c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d5 AND
0x5d6 PUSH2 0x8fc
0x5d9 ADDRESS
0x5da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ef AND
0x5f0 BALANCE
0x5f1 SWAP1
0x5f2 DUP2
0x5f3 ISZERO
0x5f4 MUL
0x5f5 SWAP1
0x5f6 PUSH1 0x40
0x5f8 MLOAD
0x5f9 PUSH1 0x0
0x5fb PUSH1 0x40
0x5fd MLOAD
0x5fe DUP1
0x5ff DUP4
0x600 SUB
0x601 DUP2
0x602 DUP6
0x603 DUP9
0x604 DUP9
0x605 CALL
0x606 SWAP4
0x607 POP
0x608 POP
0x609 POP
0x60a POP
0x60b ISZERO
0x60c ISZERO
0x60d PUSH2 0x615
0x610 JUMPI
---
0x5be: JUMPDEST 
0x5bf: V279 = CALLER
0x5c0: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d5: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x5d6: V282 = 0x8fc
0x5d9: V283 = ADDRESS
0x5da: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ef: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x5f0: V286 = BALANCE V285
0x5f3: V287 = ISZERO V286
0x5f4: V288 = MUL V287 0x8fc
0x5f6: V289 = 0x40
0x5f8: V290 = M[0x40]
0x5f9: V291 = 0x0
0x5fb: V292 = 0x40
0x5fd: V293 = M[0x40]
0x600: V294 = SUB V290 V293
0x605: V295 = CALL V288 V281 V286 V293 V294 V293 0x0
0x60b: V296 = ISZERO V295
0x60c: V297 = ISZERO V296
0x60d: V298 = 0x615
0x610: JUMPI 0x615 V297
---
Entry stack: [V10, 0xeb, V43, V46, V104, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xeb, V43, V46, V104, S0]

================================

Block 0x611
[0x611:0x614]
---
Predecessors: [0x5be]
Successors: []
---
0x611 PUSH1 0x0
0x613 DUP1
0x614 REVERT
---
0x611: V299 = 0x0
0x614: REVERT 0x0 0x0
---
Entry stack: [V10, 0xeb, V43, V46, V104, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xeb, V43, V46, V104, S0]

================================

Block 0x615
[0x615:0x61a]
---
Predecessors: [0x5be]
Successors: [0xeb]
---
0x615 JUMPDEST
0x616 POP
0x617 POP
0x618 POP
0x619 POP
0x61a JUMP
---
0x615: JUMPDEST 
0x61a: JUMP 0xeb
---
Entry stack: [V10, 0xeb, V43, V46, V104, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x61b
[0x61b:0x649]
---
Predecessors: []
Successors: []
---
0x61b STOP
0x61c LOG1
0x61d PUSH6 0x627a7a723058
0x624 SHA3
0x625 MISSING 0xde
0x626 MISSING 0xbf
0x627 MISSING 0xc4
0x628 MISSING 0xd0
0x629 TIMESTAMP
0x62a PUSH31 0x487d68718d78fd1eab1995a0628901a5ba2f61ce66c8e25ad1210029
---
0x61b: STOP 
0x61c: LOG S0 S1 S2
0x61d: V300 = 0x627a7a723058
0x624: V301 = SHA3 0x627a7a723058 S3
0x625: MISSING 0xde
0x626: MISSING 0xbf
0x627: MISSING 0xc4
0x628: MISSING 0xd0
0x629: V302 = TIMESTAMP
0x62a: V303 = 0x487d68718d78fd1eab1995a0628901a5ba2f61ce66c8e25ad1210029
---
Entry stack: []
Stack pops: 0
Stack additions: [V301, 0x487d68718d78fd1eab1995a0628901a5ba2f61ce66c8e25ad1210029, V302]
Exit stack: []

================================

Function 0:
Public function signature: 0xb4a99a4e
Entry block: 0x57
Exit block: 0x6a
Body: 0x57, 0x5e, 0x62, 0x6a, 0xed

Function 1:
Public function signature: 0xd4e93292
Entry block: 0xac
Exit block: 0xb4
Body: 0xac, 0xb4, 0x112, 0x186, 0x18a

Function 2:
Public function signature: 0xfe4ce35a
Entry block: 0xb6
Exit block: 0xeb
Body: 0xb6, 0xeb, 0x18c, 0x1e6, 0x1ea, 0x2bc, 0x2c0, 0x387, 0x38b, 0x44d, 0x451, 0x456, 0x45f, 0x588, 0x58c, 0x599, 0x5ba, 0x5be, 0x611, 0x615

Function 3:
Public fallback function
Entry block: 0x55
Exit block: 0x55
Body: 0x55

