Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1998aeef
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1998aeef
0x3c: V13 = EQ 0x1998aeef V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x5b]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0x5b
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0x5b
0x4b: JUMPI 0x5b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x70]
---
0x51 JUMPDEST
0x52 PUSH2 0x59
0x55 PUSH2 0x70
0x58 JUMP
---
0x51: JUMPDEST 
0x52: V19 = 0x59
0x55: V20 = 0x70
0x58: JUMP 0x70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x59]
Exit stack: [V11, 0x59]

================================

Block 0x59
[0x59:0x5a]
---
Predecessors: [0x1a4]
Successors: []
---
0x59 JUMPDEST
0x5a STOP
---
0x59: JUMPDEST 
0x5a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b
[0x5b:0x61]
---
Predecessors: [0x41]
Successors: [0x62, 0x66]
---
0x5b JUMPDEST
0x5c CALLVALUE
0x5d ISZERO
0x5e PUSH2 0x66
0x61 JUMPI
---
0x5b: JUMPDEST 
0x5c: V21 = CALLVALUE
0x5d: V22 = ISZERO V21
0x5e: V23 = 0x66
0x61: JUMPI 0x66 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x62
[0x62:0x65]
---
Predecessors: [0x5b]
Successors: []
---
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0x6d]
---
Predecessors: [0x5b]
Successors: [0x1a7]
---
0x66 JUMPDEST
0x67 PUSH2 0x6e
0x6a PUSH2 0x1a7
0x6d JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x6e
0x6a: V26 = 0x1a7
0x6d: JUMP 0x1a7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V11, 0x6e]

================================

Block 0x6e
[0x6e:0x6f]
---
Predecessors: [0x25a]
Successors: []
---
0x6e JUMPDEST
0x6f STOP
---
0x6e: JUMPDEST 
0x6f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x70
[0x70:0x19f]
---
Predecessors: [0x51]
Successors: [0x1a0, 0x1a4]
---
0x70 JUMPDEST
0x71 PUSH1 0x0
0x73 ADDRESS
0x74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89 AND
0x8a BALANCE
0x8b SWAP1
0x8c POP
0x8d PUSH1 0x0
0x8f DUP1
0x90 SWAP1
0x91 SLOAD
0x92 SWAP1
0x93 PUSH2 0x100
0x96 EXP
0x97 SWAP1
0x98 DIV
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 PUSH8 0x16345785d8a0000
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 DUP1
0xd2 DUP1
0xd3 PUSH32 0x62657428626f6f6c290000000000000000000000000000000000000000000000
0xf4 DUP2
0xf5 MSTORE
0xf6 POP
0xf7 PUSH1 0x9
0xf9 ADD
0xfa SWAP1
0xfb POP
0xfc PUSH1 0x40
0xfe MLOAD
0xff DUP1
0x100 SWAP2
0x101 SUB
0x102 SWAP1
0x103 SHA3
0x104 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x122 SWAP1
0x123 DIV
0x124 SWAP1
0x125 PUSH1 0x0
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP4
0x12b PUSH4 0xffffffff
0x130 AND
0x131 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x14f MUL
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x4
0x154 ADD
0x155 DUP1
0x156 DUP3
0x157 ISZERO
0x158 ISZERO
0x159 ISZERO
0x15a ISZERO
0x15b DUP2
0x15c MSTORE
0x15d PUSH1 0x20
0x15f ADD
0x160 SWAP2
0x161 POP
0x162 POP
0x163 PUSH1 0x0
0x165 PUSH1 0x40
0x167 MLOAD
0x168 DUP1
0x169 DUP4
0x16a SUB
0x16b DUP2
0x16c DUP6
0x16d DUP9
0x16e GAS
0x16f CALL
0x170 SWAP4
0x171 POP
0x172 POP
0x173 POP
0x174 POP
0x175 POP
0x176 PUSH8 0x16345785d8a0000
0x17f DUP2
0x180 ADD
0x181 ADDRESS
0x182 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x197 AND
0x198 BALANCE
0x199 GT
0x19a ISZERO
0x19b ISZERO
0x19c PUSH2 0x1a4
0x19f JUMPI
---
0x70: JUMPDEST 
0x71: V27 = 0x0
0x73: V28 = ADDRESS
0x74: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x89: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x8a: V31 = BALANCE V30
0x8d: V32 = 0x0
0x91: V33 = S[0x0]
0x93: V34 = 0x100
0x96: V35 = EXP 0x100 0x0
0x98: V36 = DIV V33 0x1
0x99: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xaf: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xc5: V41 = 0x16345785d8a0000
0xce: V42 = 0x40
0xd0: V43 = M[0x40]
0xd3: V44 = 0x62657428626f6f6c290000000000000000000000000000000000000000000000
0xf5: M[V43] = 0x62657428626f6f6c290000000000000000000000000000000000000000000000
0xf7: V45 = 0x9
0xf9: V46 = ADD 0x9 V43
0xfc: V47 = 0x40
0xfe: V48 = M[0x40]
0x101: V49 = SUB V46 V48
0x103: V50 = SHA3 V48 V49
0x104: V51 = 0x100000000000000000000000000000000000000000000000000000000
0x123: V52 = DIV V50 0x100000000000000000000000000000000000000000000000000000000
0x125: V53 = 0x0
0x127: V54 = 0x40
0x129: V55 = M[0x40]
0x12b: V56 = 0xffffffff
0x130: V57 = AND 0xffffffff V52
0x131: V58 = 0x100000000000000000000000000000000000000000000000000000000
0x14f: V59 = MUL 0x100000000000000000000000000000000000000000000000000000000 V57
0x151: M[V55] = V59
0x152: V60 = 0x4
0x154: V61 = ADD 0x4 V55
0x157: V62 = ISZERO 0x0
0x158: V63 = ISZERO 0x1
0x159: V64 = ISZERO 0x0
0x15a: V65 = ISZERO 0x1
0x15c: M[V61] = 0x0
0x15d: V66 = 0x20
0x15f: V67 = ADD 0x20 V61
0x163: V68 = 0x0
0x165: V69 = 0x40
0x167: V70 = M[0x40]
0x16a: V71 = SUB V67 V70
0x16e: V72 = GAS
0x16f: V73 = CALL V72 V40 0x16345785d8a0000 V70 V71 V70 0x0
0x176: V74 = 0x16345785d8a0000
0x180: V75 = ADD V31 0x16345785d8a0000
0x181: V76 = ADDRESS
0x182: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x197: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x198: V79 = BALANCE V78
0x199: V80 = GT V79 V75
0x19a: V81 = ISZERO V80
0x19b: V82 = ISZERO V81
0x19c: V83 = 0x1a4
0x19f: JUMPI 0x1a4 V82
---
Entry stack: [V11, 0x59]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, 0x59, V31]

================================

Block 0x1a0
[0x1a0:0x1a3]
---
Predecessors: [0x70]
Successors: []
---
0x1a0 PUSH1 0x0
0x1a2 DUP1
0x1a3 REVERT
---
0x1a0: V84 = 0x0
0x1a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x59, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x59, V31]

================================

Block 0x1a4
[0x1a4:0x1a6]
---
Predecessors: [0x70]
Successors: [0x59]
---
0x1a4 JUMPDEST
0x1a5 POP
0x1a6 JUMP
---
0x1a4: JUMPDEST 
0x1a6: JUMP 0x59
---
Entry stack: [V11, 0x59, V31]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a7
[0x1a7:0x1fe]
---
Predecessors: [0x66]
Successors: [0x1ff, 0x203]
---
0x1a7 JUMPDEST
0x1a8 PUSH1 0x1
0x1aa PUSH1 0x0
0x1ac SWAP1
0x1ad SLOAD
0x1ae SWAP1
0x1af PUSH2 0x100
0x1b2 EXP
0x1b3 SWAP1
0x1b4 DIV
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e0 AND
0x1e1 CALLER
0x1e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f7 AND
0x1f8 EQ
0x1f9 ISZERO
0x1fa ISZERO
0x1fb PUSH2 0x203
0x1fe JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V85 = 0x1
0x1aa: V86 = 0x0
0x1ad: V87 = S[0x1]
0x1af: V88 = 0x100
0x1b2: V89 = EXP 0x100 0x0
0x1b4: V90 = DIV V87 0x1
0x1b5: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1cb: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e0: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1e1: V95 = CALLER
0x1e2: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f7: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1f8: V98 = EQ V97 V94
0x1f9: V99 = ISZERO V98
0x1fa: V100 = ISZERO V99
0x1fb: V101 = 0x203
0x1fe: JUMPI 0x203 V100
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x1ff
[0x1ff:0x202]
---
Predecessors: [0x1a7]
Successors: []
---
0x1ff PUSH1 0x0
0x201 DUP1
0x202 REVERT
---
0x1ff: V102 = 0x0
0x202: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x203
[0x203:0x255]
---
Predecessors: [0x1a7]
Successors: [0x256, 0x25a]
---
0x203 JUMPDEST
0x204 CALLER
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a AND
0x21b PUSH2 0x8fc
0x21e ADDRESS
0x21f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x234 AND
0x235 BALANCE
0x236 SWAP1
0x237 DUP2
0x238 ISZERO
0x239 MUL
0x23a SWAP1
0x23b PUSH1 0x40
0x23d MLOAD
0x23e PUSH1 0x0
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 DUP4
0x245 SUB
0x246 DUP2
0x247 DUP6
0x248 DUP9
0x249 DUP9
0x24a CALL
0x24b SWAP4
0x24c POP
0x24d POP
0x24e POP
0x24f POP
0x250 ISZERO
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x203: JUMPDEST 
0x204: V103 = CALLER
0x205: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x21b: V106 = 0x8fc
0x21e: V107 = ADDRESS
0x21f: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x234: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x235: V110 = BALANCE V109
0x238: V111 = ISZERO V110
0x239: V112 = MUL V111 0x8fc
0x23b: V113 = 0x40
0x23d: V114 = M[0x40]
0x23e: V115 = 0x0
0x240: V116 = 0x40
0x242: V117 = M[0x40]
0x245: V118 = SUB V114 V117
0x24a: V119 = CALL V112 V105 V110 V117 V118 V117 0x0
0x250: V120 = ISZERO V119
0x251: V121 = ISZERO V120
0x252: V122 = 0x25a
0x255: JUMPI 0x25a V121
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x203]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V123 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x25a
[0x25a:0x25b]
---
Predecessors: [0x203]
Successors: [0x6e]
---
0x25a JUMPDEST
0x25b JUMP
---
0x25a: JUMPDEST 
0x25b: JUMP 0x6e
---
Entry stack: [V11, 0x6e]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x25c
[0x25c:0x26a]
---
Predecessors: []
Successors: [0x26b]
Has unresolved jump.
---
0x25c STOP
0x25d LOG1
0x25e PUSH6 0x627a7a723058
0x265 SHA3
0x266 ADD
0x267 CALLDATALOAD
0x268 MUL
0x269 MISSING 0xae
0x26a JUMPI
---
0x25c: STOP 
0x25d: LOG S0 S1 S2
0x25e: V124 = 0x627a7a723058
0x265: V125 = SHA3 0x627a7a723058 S3
0x266: V126 = ADD V125 S4
0x267: V127 = CALLDATALOAD V126
0x268: V128 = MUL V127 S5
0x269: MISSING 0xae
0x26a: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V128]
Exit stack: []

================================

Block 0x26b
[0x26b:0x287]
---
Predecessors: [0x25c]
Successors: []
---
0x26b MISSING 0xe5
0x26c SIGNEXTEND
0x26d MSTORE8
0x26e MUL
0x26f MULMOD
0x270 BALANCE
0x271 DUP13
0x272 MISSING 0xa8
0x273 DUP9
0x274 MISSING 0xbf
0x275 MISSING 0x46
0x276 GASPRICE
0x277 SWAP16
0x278 MISSING 0xb2
0x279 MISSING 0xd2
0x27a LOG1
0x27b MSTORE8
0x27c MISSING 0xfc
0x27d SWAP3
0x27e DUP7
0x27f MISSING 0xdc
0x280 MISSING 0x26
0x281 MISSING 0xb1
0x282 MISSING 0xca
0x283 MISSING 0x5c
0x284 JUMP
0x285 MISSING 0xe4
0x286 STOP
0x287 MISSING 0x29
---
0x26b: MISSING 0xe5
0x26c: V129 = SIGNEXTEND S0 S1
0x26d: M8[V129] = S2
0x26e: V130 = MUL S3 S4
0x26f: V131 = MULMOD V130 S5 S6
0x270: V132 = BALANCE V131
0x272: MISSING 0xa8
0x274: MISSING 0xbf
0x275: MISSING 0x46
0x276: V133 = GASPRICE
0x278: MISSING 0xb2
0x279: MISSING 0xd2
0x27a: LOG S0 S1 S2
0x27b: M8[S3] = S4
0x27c: MISSING 0xfc
0x27f: MISSING 0xdc
0x280: MISSING 0x26
0x281: MISSING 0xb1
0x282: MISSING 0xca
0x283: MISSING 0x5c
0x284: JUMP S0
0x285: MISSING 0xe4
0x286: STOP 
0x287: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S18, V132, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V133, S6, S3, S1, S2, S0, S4, S5, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0x1998aeef
Entry block: 0x51
Exit block: 0x59
Body: 0x51, 0x59, 0x70, 0x1a0, 0x1a4

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x5b
Exit block: 0x6e
Body: 0x5b, 0x62, 0x66, 0x6e, 0x1a7, 0x1ff, 0x203, 0x256, 0x25a

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

