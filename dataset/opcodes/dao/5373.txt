Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x12f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x238ac933
0x3c EQ
0x3d PUSH2 0x12f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x238ac933
0x3c: V13 = EQ 0x238ac933 V11
0x3d: V14 = 0x12f
0x40: JUMPI 0x12f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x186]
---
0x41 DUP1
0x42 PUSH4 0x4783c35b
0x47 EQ
0x48 PUSH2 0x186
0x4b JUMPI
---
0x42: V15 = 0x4783c35b
0x47: V16 = EQ 0x4783c35b V11
0x48: V17 = 0x186
0x4b: JUMPI 0x186 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x1dd]
---
0x4c DUP1
0x4d PUSH4 0x6ade8aa2
0x52 EQ
0x53 PUSH2 0x1dd
0x56 JUMPI
---
0x4d: V18 = 0x6ade8aa2
0x52: V19 = EQ 0x6ade8aa2 V11
0x53: V20 = 0x1dd
0x56: JUMPI 0x1dd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x220]
---
0x57 DUP1
0x58 PUSH4 0xc0ee0b8a
0x5d EQ
0x5e PUSH2 0x220
0x61 JUMPI
---
0x58: V21 = 0xc0ee0b8a
0x5d: V22 = EQ 0xc0ee0b8a V11
0x5e: V23 = 0x220
0x61: JUMPI 0x220 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x2cb]
---
0x62 DUP1
0x63 PUSH4 0xd0e30db0
0x68 EQ
0x69 PUSH2 0x2cb
0x6c JUMPI
---
0x63: V24 = 0xd0e30db0
0x68: V25 = EQ 0xd0e30db0 V11
0x69: V26 = 0x2cb
0x6c: JUMPI 0x2cb V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x2e2]
---
0x6d DUP1
0x6e PUSH4 0xfc0c546a
0x73 EQ
0x74 PUSH2 0x2e2
0x77 JUMPI
---
0x6e: V27 = 0xfc0c546a
0x73: V28 = EQ 0xfc0c546a V11
0x74: V29 = 0x2e2
0x77: JUMPI 0x2e2 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x10f]
---
Predecessors: [0x0, 0x6d]
Successors: [0x110, 0x114]
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c SWAP1
0x7d SLOAD
0x7e SWAP1
0x7f PUSH2 0x100
0x82 EXP
0x83 SWAP1
0x84 DIV
0x85 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a AND
0x9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0 AND
0xb1 PUSH4 0x439370b1
0xb6 ADDRESS
0xb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc AND
0xcd BALANCE
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 DUP3
0xd2 PUSH4 0xffffffff
0xd7 AND
0xd8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf6 MUL
0xf7 DUP2
0xf8 MSTORE
0xf9 PUSH1 0x4
0xfb ADD
0xfc PUSH1 0x0
0xfe PUSH1 0x40
0x100 MLOAD
0x101 DUP1
0x102 DUP4
0x103 SUB
0x104 DUP2
0x105 DUP6
0x106 DUP9
0x107 DUP1
0x108 EXTCODESIZE
0x109 ISZERO
0x10a DUP1
0x10b ISZERO
0x10c PUSH2 0x114
0x10f JUMPI
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7d: V31 = S[0x0]
0x7f: V32 = 0x100
0x82: V33 = EXP 0x100 0x0
0x84: V34 = DIV V31 0x1
0x85: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x9b: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xb1: V39 = 0x439370b1
0xb6: V40 = ADDRESS
0xb7: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xcd: V43 = BALANCE V42
0xce: V44 = 0x40
0xd0: V45 = M[0x40]
0xd2: V46 = 0xffffffff
0xd7: V47 = AND 0xffffffff 0x439370b1
0xd8: V48 = 0x100000000000000000000000000000000000000000000000000000000
0xf6: V49 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x439370b1
0xf8: M[V45] = 0x439370b100000000000000000000000000000000000000000000000000000000
0xf9: V50 = 0x4
0xfb: V51 = ADD 0x4 V45
0xfc: V52 = 0x0
0xfe: V53 = 0x40
0x100: V54 = M[0x40]
0x103: V55 = SUB V51 V54
0x108: V56 = EXTCODESIZE V38
0x109: V57 = ISZERO V56
0x10b: V58 = ISZERO V57
0x10c: V59 = 0x114
0x10f: JUMPI 0x114 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V38, 0x439370b1, V43, V51, 0x0, V54, V55, V54, V43, V38, V57]
Exit stack: [V11, V38, 0x439370b1, V43, V51, 0x0, V54, V55, V54, V43, V38, V57]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0x78]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V60 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V11, V38, 0x439370b1, V43, V51, 0x0, V54, V55, V54, V43, V38, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V38, 0x439370b1, V43, V51, 0x0, V54, V55, V54, V43, V38, V57]

================================

Block 0x114
[0x114:0x11e]
---
Predecessors: [0x78]
Successors: [0x11f, 0x128]
---
0x114 JUMPDEST
0x115 POP
0x116 GAS
0x117 CALL
0x118 ISZERO
0x119 DUP1
0x11a ISZERO
0x11b PUSH2 0x128
0x11e JUMPI
---
0x114: JUMPDEST 
0x116: V61 = GAS
0x117: V62 = CALL V61 V38 V43 V54 V55 V54 0x0
0x118: V63 = ISZERO V62
0x11a: V64 = ISZERO V63
0x11b: V65 = 0x128
0x11e: JUMPI 0x128 V64
---
Entry stack: [V11, V38, 0x439370b1, V43, V51, 0x0, V54, V55, V54, V43, V38, V57]
Stack pops: 7
Stack additions: [V63]
Exit stack: [V11, V38, 0x439370b1, V43, V51, V63]

================================

Block 0x11f
[0x11f:0x127]
---
Predecessors: [0x114]
Successors: []
---
0x11f RETURNDATASIZE
0x120 PUSH1 0x0
0x122 DUP1
0x123 RETURNDATACOPY
0x124 RETURNDATASIZE
0x125 PUSH1 0x0
0x127 REVERT
---
0x11f: V66 = RETURNDATASIZE
0x120: V67 = 0x0
0x123: RETURNDATACOPY 0x0 0x0 V66
0x124: V68 = RETURNDATASIZE
0x125: V69 = 0x0
0x127: REVERT 0x0 V68
---
Entry stack: [V11, V38, 0x439370b1, V43, V51, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V38, 0x439370b1, V43, V51, V63]

================================

Block 0x128
[0x128:0x12e]
---
Predecessors: [0x114]
Successors: []
---
0x128 JUMPDEST
0x129 POP
0x12a POP
0x12b POP
0x12c POP
0x12d POP
0x12e STOP
---
0x128: JUMPDEST 
0x12e: STOP 
---
Entry stack: [V11, V38, 0x439370b1, V43, V51, V63]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x12f
[0x12f:0x136]
---
Predecessors: [0xd]
Successors: [0x137, 0x13b]
---
0x12f JUMPDEST
0x130 CALLVALUE
0x131 DUP1
0x132 ISZERO
0x133 PUSH2 0x13b
0x136 JUMPI
---
0x12f: JUMPDEST 
0x130: V70 = CALLVALUE
0x132: V71 = ISZERO V70
0x133: V72 = 0x13b
0x136: JUMPI 0x13b V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V70]
Exit stack: [V11, V70]

================================

Block 0x137
[0x137:0x13a]
---
Predecessors: [0x12f]
Successors: []
---
0x137 PUSH1 0x0
0x139 DUP1
0x13a REVERT
---
0x137: V73 = 0x0
0x13a: REVERT 0x0 0x0
---
Entry stack: [V11, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V70]

================================

Block 0x13b
[0x13b:0x143]
---
Predecessors: [0x12f]
Successors: [0x339]
---
0x13b JUMPDEST
0x13c POP
0x13d PUSH2 0x144
0x140 PUSH2 0x339
0x143 JUMP
---
0x13b: JUMPDEST 
0x13d: V74 = 0x144
0x140: V75 = 0x339
0x143: JUMP 0x339
---
Entry stack: [V11, V70]
Stack pops: 1
Stack additions: [0x144]
Exit stack: [V11, 0x144]

================================

Block 0x144
[0x144:0x185]
---
Predecessors: [0x339]
Successors: []
---
0x144 JUMPDEST
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 DUP3
0x14a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15f AND
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 DUP2
0x177 MSTORE
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP2
0x17c POP
0x17d POP
0x17e PUSH1 0x40
0x180 MLOAD
0x181 DUP1
0x182 SWAP2
0x183 SUB
0x184 SWAP1
0x185 RETURN
---
0x144: JUMPDEST 
0x145: V76 = 0x40
0x147: V77 = M[0x40]
0x14a: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x160: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x177: M[V77] = V81
0x178: V82 = 0x20
0x17a: V83 = ADD 0x20 V77
0x17e: V84 = 0x40
0x180: V85 = M[0x40]
0x183: V86 = SUB V83 V85
0x185: RETURN V85 V86
---
Entry stack: [V11, 0x144, V199]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x144]

================================

Block 0x186
[0x186:0x18d]
---
Predecessors: [0x41]
Successors: [0x18e, 0x192]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 DUP1
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x186: JUMPDEST 
0x187: V87 = CALLVALUE
0x189: V88 = ISZERO V87
0x18a: V89 = 0x192
0x18d: JUMPI 0x192 V88
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V11, V87]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x186]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V90 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V11, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V87]

================================

Block 0x192
[0x192:0x19a]
---
Predecessors: [0x186]
Successors: [0x35f]
---
0x192 JUMPDEST
0x193 POP
0x194 PUSH2 0x19b
0x197 PUSH2 0x35f
0x19a JUMP
---
0x192: JUMPDEST 
0x194: V91 = 0x19b
0x197: V92 = 0x35f
0x19a: JUMP 0x35f
---
Entry stack: [V11, V87]
Stack pops: 1
Stack additions: [0x19b]
Exit stack: [V11, 0x19b]

================================

Block 0x19b
[0x19b:0x1dc]
---
Predecessors: [0x35f]
Successors: []
---
0x19b JUMPDEST
0x19c PUSH1 0x40
0x19e MLOAD
0x19f DUP1
0x1a0 DUP3
0x1a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b6 AND
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc AND
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 SWAP2
0x1d3 POP
0x1d4 POP
0x1d5 PUSH1 0x40
0x1d7 MLOAD
0x1d8 DUP1
0x1d9 SWAP2
0x1da SUB
0x1db SWAP1
0x1dc RETURN
---
0x19b: JUMPDEST 
0x19c: V93 = 0x40
0x19e: V94 = M[0x40]
0x1a1: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x1b7: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1ce: M[V94] = V98
0x1cf: V99 = 0x20
0x1d1: V100 = ADD 0x20 V94
0x1d5: V101 = 0x40
0x1d7: V102 = M[0x40]
0x1da: V103 = SUB V100 V102
0x1dc: RETURN V102 V103
---
Entry stack: [V11, 0x19b, V207]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x19b]

================================

Block 0x1dd
[0x1dd:0x1e4]
---
Predecessors: [0x4c]
Successors: [0x1e5, 0x1e9]
---
0x1dd JUMPDEST
0x1de CALLVALUE
0x1df DUP1
0x1e0 ISZERO
0x1e1 PUSH2 0x1e9
0x1e4 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V104 = CALLVALUE
0x1e0: V105 = ISZERO V104
0x1e1: V106 = 0x1e9
0x1e4: JUMPI 0x1e9 V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V11, V104]

================================

Block 0x1e5
[0x1e5:0x1e8]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e5 PUSH1 0x0
0x1e7 DUP1
0x1e8 REVERT
---
0x1e5: V107 = 0x0
0x1e8: REVERT 0x0 0x0
---
Entry stack: [V11, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V104]

================================

Block 0x1e9
[0x1e9:0x21d]
---
Predecessors: [0x1dd]
Successors: [0x385]
---
0x1e9 JUMPDEST
0x1ea POP
0x1eb PUSH2 0x21e
0x1ee PUSH1 0x4
0x1f0 DUP1
0x1f1 CALLDATASIZE
0x1f2 SUB
0x1f3 DUP2
0x1f4 ADD
0x1f5 SWAP1
0x1f6 DUP1
0x1f7 DUP1
0x1f8 CALLDATALOAD
0x1f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20e AND
0x20f SWAP1
0x210 PUSH1 0x20
0x212 ADD
0x213 SWAP1
0x214 SWAP3
0x215 SWAP2
0x216 SWAP1
0x217 POP
0x218 POP
0x219 POP
0x21a PUSH2 0x385
0x21d JUMP
---
0x1e9: JUMPDEST 
0x1eb: V108 = 0x21e
0x1ee: V109 = 0x4
0x1f1: V110 = CALLDATASIZE
0x1f2: V111 = SUB V110 0x4
0x1f4: V112 = ADD 0x4 V111
0x1f8: V113 = CALLDATALOAD 0x4
0x1f9: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x20e: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x210: V116 = 0x20
0x212: V117 = ADD 0x20 0x4
0x21a: V118 = 0x385
0x21d: JUMP 0x385
---
Entry stack: [V11, V104]
Stack pops: 1
Stack additions: [0x21e, V115]
Exit stack: [V11, 0x21e, V115]

================================

Block 0x21e
[0x21e:0x21f]
---
Predecessors: [0x6c1]
Successors: []
---
0x21e JUMPDEST
0x21f STOP
---
0x21e: JUMPDEST 
0x21f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x220
[0x220:0x227]
---
Predecessors: [0x57]
Successors: [0x228, 0x22c]
---
0x220 JUMPDEST
0x221 CALLVALUE
0x222 DUP1
0x223 ISZERO
0x224 PUSH2 0x22c
0x227 JUMPI
---
0x220: JUMPDEST 
0x221: V119 = CALLVALUE
0x223: V120 = ISZERO V119
0x224: V121 = 0x22c
0x227: JUMPI 0x22c V120
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V11, V119]

================================

Block 0x228
[0x228:0x22b]
---
Predecessors: [0x220]
Successors: []
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b REVERT
---
0x228: V122 = 0x0
0x22b: REVERT 0x0 0x0
---
Entry stack: [V11, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V119]

================================

Block 0x22c
[0x22c:0x2b0]
---
Predecessors: [0x220]
Successors: [0x6c4]
---
0x22c JUMPDEST
0x22d POP
0x22e PUSH2 0x2b1
0x231 PUSH1 0x4
0x233 DUP1
0x234 CALLDATASIZE
0x235 SUB
0x236 DUP2
0x237 ADD
0x238 SWAP1
0x239 DUP1
0x23a DUP1
0x23b CALLDATALOAD
0x23c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x251 AND
0x252 SWAP1
0x253 PUSH1 0x20
0x255 ADD
0x256 SWAP1
0x257 SWAP3
0x258 SWAP2
0x259 SWAP1
0x25a DUP1
0x25b CALLDATALOAD
0x25c SWAP1
0x25d PUSH1 0x20
0x25f ADD
0x260 SWAP1
0x261 SWAP3
0x262 SWAP2
0x263 SWAP1
0x264 DUP1
0x265 CALLDATALOAD
0x266 SWAP1
0x267 PUSH1 0x20
0x269 ADD
0x26a SWAP1
0x26b DUP3
0x26c ADD
0x26d DUP1
0x26e CALLDATALOAD
0x26f SWAP1
0x270 PUSH1 0x20
0x272 ADD
0x273 SWAP1
0x274 DUP1
0x275 DUP1
0x276 PUSH1 0x1f
0x278 ADD
0x279 PUSH1 0x20
0x27b DUP1
0x27c SWAP2
0x27d DIV
0x27e MUL
0x27f PUSH1 0x20
0x281 ADD
0x282 PUSH1 0x40
0x284 MLOAD
0x285 SWAP1
0x286 DUP2
0x287 ADD
0x288 PUSH1 0x40
0x28a MSTORE
0x28b DUP1
0x28c SWAP4
0x28d SWAP3
0x28e SWAP2
0x28f SWAP1
0x290 DUP2
0x291 DUP2
0x292 MSTORE
0x293 PUSH1 0x20
0x295 ADD
0x296 DUP4
0x297 DUP4
0x298 DUP1
0x299 DUP3
0x29a DUP5
0x29b CALLDATACOPY
0x29c DUP3
0x29d ADD
0x29e SWAP2
0x29f POP
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 POP
0x2a4 POP
0x2a5 SWAP2
0x2a6 SWAP3
0x2a7 SWAP2
0x2a8 SWAP3
0x2a9 SWAP1
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad PUSH2 0x6c4
0x2b0 JUMP
---
0x22c: JUMPDEST 
0x22e: V123 = 0x2b1
0x231: V124 = 0x4
0x234: V125 = CALLDATASIZE
0x235: V126 = SUB V125 0x4
0x237: V127 = ADD 0x4 V126
0x23b: V128 = CALLDATALOAD 0x4
0x23c: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x251: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x253: V131 = 0x20
0x255: V132 = ADD 0x20 0x4
0x25b: V133 = CALLDATALOAD 0x24
0x25d: V134 = 0x20
0x25f: V135 = ADD 0x20 0x24
0x265: V136 = CALLDATALOAD 0x44
0x267: V137 = 0x20
0x269: V138 = ADD 0x20 0x44
0x26c: V139 = ADD 0x4 V136
0x26e: V140 = CALLDATALOAD V139
0x270: V141 = 0x20
0x272: V142 = ADD 0x20 V139
0x276: V143 = 0x1f
0x278: V144 = ADD 0x1f V140
0x279: V145 = 0x20
0x27d: V146 = DIV V144 0x20
0x27e: V147 = MUL V146 0x20
0x27f: V148 = 0x20
0x281: V149 = ADD 0x20 V147
0x282: V150 = 0x40
0x284: V151 = M[0x40]
0x287: V152 = ADD V151 V149
0x288: V153 = 0x40
0x28a: M[0x40] = V152
0x292: M[V151] = V140
0x293: V154 = 0x20
0x295: V155 = ADD 0x20 V151
0x29b: CALLDATACOPY V155 V142 V140
0x29d: V156 = ADD V155 V140
0x2ad: V157 = 0x6c4
0x2b0: JUMP 0x6c4
---
Entry stack: [V11, V119]
Stack pops: 1
Stack additions: [0x2b1, V130, V133, V151]
Exit stack: [V11, 0x2b1, V130, V133, V151]

================================

Block 0x2b1
[0x2b1:0x2ca]
---
Predecessors: [0x889]
Successors: []
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 DUP1
0x2b6 DUP3
0x2b7 ISZERO
0x2b8 ISZERO
0x2b9 ISZERO
0x2ba ISZERO
0x2bb DUP2
0x2bc MSTORE
0x2bd PUSH1 0x20
0x2bf ADD
0x2c0 SWAP2
0x2c1 POP
0x2c2 POP
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 DUP1
0x2c7 SWAP2
0x2c8 SUB
0x2c9 SWAP1
0x2ca RETURN
---
0x2b1: JUMPDEST 
0x2b2: V158 = 0x40
0x2b4: V159 = M[0x40]
0x2b7: V160 = ISZERO 0x1
0x2b8: V161 = ISZERO 0x0
0x2b9: V162 = ISZERO 0x1
0x2ba: V163 = ISZERO 0x0
0x2bc: M[V159] = 0x1
0x2bd: V164 = 0x20
0x2bf: V165 = ADD 0x20 V159
0x2c3: V166 = 0x40
0x2c5: V167 = M[0x40]
0x2c8: V168 = SUB V165 V167
0x2ca: RETURN V167 V168
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2cb
[0x2cb:0x2d2]
---
Predecessors: [0x62]
Successors: [0x2d3, 0x2d7]
---
0x2cb JUMPDEST
0x2cc CALLVALUE
0x2cd DUP1
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V169 = CALLVALUE
0x2ce: V170 = ISZERO V169
0x2cf: V171 = 0x2d7
0x2d2: JUMPI 0x2d7 V170
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V169]
Exit stack: [V11, V169]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2cb]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V172 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V11, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V169]

================================

Block 0x2d7
[0x2d7:0x2df]
---
Predecessors: [0x2cb]
Successors: [0x8a6]
---
0x2d7 JUMPDEST
0x2d8 POP
0x2d9 PUSH2 0x2e0
0x2dc PUSH2 0x8a6
0x2df JUMP
---
0x2d7: JUMPDEST 
0x2d9: V173 = 0x2e0
0x2dc: V174 = 0x8a6
0x2df: JUMP 0x8a6
---
Entry stack: [V11, V169]
Stack pops: 1
Stack additions: [0x2e0]
Exit stack: [V11, 0x2e0]

================================

Block 0x2e0
[0x2e0:0x2e1]
---
Predecessors: [0xc24]
Successors: []
---
0x2e0 JUMPDEST
0x2e1 STOP
---
0x2e0: JUMPDEST 
0x2e1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e2
[0x2e2:0x2e9]
---
Predecessors: [0x6d]
Successors: [0x2ea, 0x2ee]
---
0x2e2 JUMPDEST
0x2e3 CALLVALUE
0x2e4 DUP1
0x2e5 ISZERO
0x2e6 PUSH2 0x2ee
0x2e9 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V175 = CALLVALUE
0x2e5: V176 = ISZERO V175
0x2e6: V177 = 0x2ee
0x2e9: JUMPI 0x2ee V176
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V175]
Exit stack: [V11, V175]

================================

Block 0x2ea
[0x2ea:0x2ed]
---
Predecessors: [0x2e2]
Successors: []
---
0x2ea PUSH1 0x0
0x2ec DUP1
0x2ed REVERT
---
0x2ea: V178 = 0x0
0x2ed: REVERT 0x0 0x0
---
Entry stack: [V11, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V175]

================================

Block 0x2ee
[0x2ee:0x2f6]
---
Predecessors: [0x2e2]
Successors: [0xc26]
---
0x2ee JUMPDEST
0x2ef POP
0x2f0 PUSH2 0x2f7
0x2f3 PUSH2 0xc26
0x2f6 JUMP
---
0x2ee: JUMPDEST 
0x2f0: V179 = 0x2f7
0x2f3: V180 = 0xc26
0x2f6: JUMP 0xc26
---
Entry stack: [V11, V175]
Stack pops: 1
Stack additions: [0x2f7]
Exit stack: [V11, 0x2f7]

================================

Block 0x2f7
[0x2f7:0x338]
---
Predecessors: [0xc26]
Successors: []
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x40
0x2fa MLOAD
0x2fb DUP1
0x2fc DUP3
0x2fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x312 AND
0x313 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x328 AND
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x20
0x32d ADD
0x32e SWAP2
0x32f POP
0x330 POP
0x331 PUSH1 0x40
0x333 MLOAD
0x334 DUP1
0x335 SWAP2
0x336 SUB
0x337 SWAP1
0x338 RETURN
---
0x2f7: JUMPDEST 
0x2f8: V181 = 0x40
0x2fa: V182 = M[0x40]
0x2fd: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x312: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V699
0x313: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x328: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x32a: M[V182] = V186
0x32b: V187 = 0x20
0x32d: V188 = ADD 0x20 V182
0x331: V189 = 0x40
0x333: V190 = M[0x40]
0x336: V191 = SUB V188 V190
0x338: RETURN V190 V191
---
Entry stack: [V11, 0x2f7, V699]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2f7]

================================

Block 0x339
[0x339:0x35e]
---
Predecessors: [0x13b]
Successors: [0x144]
---
0x339 JUMPDEST
0x33a PUSH1 0x3
0x33c PUSH1 0x0
0x33e SWAP1
0x33f SLOAD
0x340 SWAP1
0x341 PUSH2 0x100
0x344 EXP
0x345 SWAP1
0x346 DIV
0x347 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35c AND
0x35d DUP2
0x35e JUMP
---
0x339: JUMPDEST 
0x33a: V192 = 0x3
0x33c: V193 = 0x0
0x33f: V194 = S[0x3]
0x341: V195 = 0x100
0x344: V196 = EXP 0x100 0x0
0x346: V197 = DIV V194 0x1
0x347: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x35c: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x35e: JUMP 0x144
---
Entry stack: [V11, 0x144]
Stack pops: 1
Stack additions: [S0, V199]
Exit stack: [V11, 0x144, V199]

================================

Block 0x35f
[0x35f:0x384]
---
Predecessors: [0x192]
Successors: [0x19b]
---
0x35f JUMPDEST
0x360 PUSH1 0x1
0x362 PUSH1 0x0
0x364 SWAP1
0x365 SLOAD
0x366 SWAP1
0x367 PUSH2 0x100
0x36a EXP
0x36b SWAP1
0x36c DIV
0x36d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x382 AND
0x383 DUP2
0x384 JUMP
---
0x35f: JUMPDEST 
0x360: V200 = 0x1
0x362: V201 = 0x0
0x365: V202 = S[0x1]
0x367: V203 = 0x100
0x36a: V204 = EXP 0x100 0x0
0x36c: V205 = DIV V202 0x1
0x36d: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x382: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x384: JUMP 0x19b
---
Entry stack: [V11, 0x19b]
Stack pops: 1
Stack additions: [S0, V207]
Exit stack: [V11, 0x19b, V207]

================================

Block 0x385
[0x385:0x3dc]
---
Predecessors: [0x1e9]
Successors: [0x3dd, 0x44a]
---
0x385 JUMPDEST
0x386 CALLER
0x387 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39c AND
0x39d PUSH1 0x3
0x39f PUSH1 0x0
0x3a1 SWAP1
0x3a2 SLOAD
0x3a3 SWAP1
0x3a4 PUSH2 0x100
0x3a7 EXP
0x3a8 SWAP1
0x3a9 DIV
0x3aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bf AND
0x3c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d5 AND
0x3d6 EQ
0x3d7 ISZERO
0x3d8 ISZERO
0x3d9 PUSH2 0x44a
0x3dc JUMPI
---
0x385: JUMPDEST 
0x386: V208 = CALLER
0x387: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x39c: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x39d: V211 = 0x3
0x39f: V212 = 0x0
0x3a2: V213 = S[0x3]
0x3a4: V214 = 0x100
0x3a7: V215 = EXP 0x100 0x0
0x3a9: V216 = DIV V213 0x1
0x3aa: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x3c0: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d5: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3d6: V221 = EQ V220 V210
0x3d7: V222 = ISZERO V221
0x3d8: V223 = ISZERO V222
0x3d9: V224 = 0x44a
0x3dc: JUMPI 0x44a V223
---
Entry stack: [V11, 0x21e, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x21e, V115]

================================

Block 0x3dd
[0x3dd:0x449]
---
Predecessors: [0x385]
Successors: []
---
0x3dd PUSH1 0x40
0x3df MLOAD
0x3e0 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x401 DUP2
0x402 MSTORE
0x403 PUSH1 0x4
0x405 ADD
0x406 DUP1
0x407 DUP1
0x408 PUSH1 0x20
0x40a ADD
0x40b DUP3
0x40c DUP2
0x40d SUB
0x40e DUP3
0x40f MSTORE
0x410 PUSH1 0x1e
0x412 DUP2
0x413 MSTORE
0x414 PUSH1 0x20
0x416 ADD
0x417 DUP1
0x418 PUSH32 0x4e6f7420617574686f72697a656420656f20656d7074792077616c6c65740000
0x439 DUP2
0x43a MSTORE
0x43b POP
0x43c PUSH1 0x20
0x43e ADD
0x43f SWAP2
0x440 POP
0x441 POP
0x442 PUSH1 0x40
0x444 MLOAD
0x445 DUP1
0x446 SWAP2
0x447 SUB
0x448 SWAP1
0x449 REVERT
---
0x3dd: V225 = 0x40
0x3df: V226 = M[0x40]
0x3e0: V227 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x402: M[V226] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x403: V228 = 0x4
0x405: V229 = ADD 0x4 V226
0x408: V230 = 0x20
0x40a: V231 = ADD 0x20 V229
0x40d: V232 = SUB V231 V229
0x40f: M[V229] = V232
0x410: V233 = 0x1e
0x413: M[V231] = 0x1e
0x414: V234 = 0x20
0x416: V235 = ADD 0x20 V231
0x418: V236 = 0x4e6f7420617574686f72697a656420656f20656d7074792077616c6c65740000
0x43a: M[V235] = 0x4e6f7420617574686f72697a656420656f20656d7074792077616c6c65740000
0x43c: V237 = 0x20
0x43e: V238 = ADD 0x20 V235
0x442: V239 = 0x40
0x444: V240 = M[0x40]
0x447: V241 = SUB V238 V240
0x449: REVERT V240 V241
---
Entry stack: [V11, 0x21e, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x21e, V115]

================================

Block 0x44a
[0x44a:0x51f]
---
Predecessors: [0x385]
Successors: [0x520, 0x524]
---
0x44a JUMPDEST
0x44b DUP1
0x44c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x461 AND
0x462 PUSH4 0xa9059cbb
0x467 PUSH1 0x1
0x469 PUSH1 0x0
0x46b SWAP1
0x46c SLOAD
0x46d SWAP1
0x46e PUSH2 0x100
0x471 EXP
0x472 SWAP1
0x473 DIV
0x474 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x489 AND
0x48a DUP4
0x48b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a0 AND
0x4a1 PUSH4 0x70a08231
0x4a6 ADDRESS
0x4a7 PUSH1 0x40
0x4a9 MLOAD
0x4aa DUP3
0x4ab PUSH4 0xffffffff
0x4b0 AND
0x4b1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4cf MUL
0x4d0 DUP2
0x4d1 MSTORE
0x4d2 PUSH1 0x4
0x4d4 ADD
0x4d5 DUP1
0x4d6 DUP3
0x4d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ec AND
0x4ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x502 AND
0x503 DUP2
0x504 MSTORE
0x505 PUSH1 0x20
0x507 ADD
0x508 SWAP2
0x509 POP
0x50a POP
0x50b PUSH1 0x20
0x50d PUSH1 0x40
0x50f MLOAD
0x510 DUP1
0x511 DUP4
0x512 SUB
0x513 DUP2
0x514 PUSH1 0x0
0x516 DUP8
0x517 DUP1
0x518 EXTCODESIZE
0x519 ISZERO
0x51a DUP1
0x51b ISZERO
0x51c PUSH2 0x524
0x51f JUMPI
---
0x44a: JUMPDEST 
0x44c: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x461: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x462: V244 = 0xa9059cbb
0x467: V245 = 0x1
0x469: V246 = 0x0
0x46c: V247 = S[0x1]
0x46e: V248 = 0x100
0x471: V249 = EXP 0x100 0x0
0x473: V250 = DIV V247 0x1
0x474: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x489: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x48b: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a0: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x4a1: V255 = 0x70a08231
0x4a6: V256 = ADDRESS
0x4a7: V257 = 0x40
0x4a9: V258 = M[0x40]
0x4ab: V259 = 0xffffffff
0x4b0: V260 = AND 0xffffffff 0x70a08231
0x4b1: V261 = 0x100000000000000000000000000000000000000000000000000000000
0x4cf: V262 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x4d1: M[V258] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4d2: V263 = 0x4
0x4d4: V264 = ADD 0x4 V258
0x4d7: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ec: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x4ed: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x502: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x504: M[V264] = V268
0x505: V269 = 0x20
0x507: V270 = ADD 0x20 V264
0x50b: V271 = 0x20
0x50d: V272 = 0x40
0x50f: V273 = M[0x40]
0x512: V274 = SUB V270 V273
0x514: V275 = 0x0
0x518: V276 = EXTCODESIZE V254
0x519: V277 = ISZERO V276
0x51b: V278 = ISZERO V277
0x51c: V279 = 0x524
0x51f: JUMPI 0x524 V278
---
Entry stack: [V11, 0x21e, V115]
Stack pops: 1
Stack additions: [S0, V243, 0xa9059cbb, V252, V254, 0x70a08231, V270, 0x20, V273, V274, V273, 0x0, V254, V277]
Exit stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V254, 0x70a08231, V270, 0x20, V273, V274, V273, 0x0, V254, V277]

================================

Block 0x520
[0x520:0x523]
---
Predecessors: [0x44a]
Successors: []
---
0x520 PUSH1 0x0
0x522 DUP1
0x523 REVERT
---
0x520: V280 = 0x0
0x523: REVERT 0x0 0x0
---
Entry stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V254, 0x70a08231, V270, 0x20, V273, V274, V273, 0x0, V254, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V254, 0x70a08231, V270, 0x20, V273, V274, V273, 0x0, V254, V277]

================================

Block 0x524
[0x524:0x52e]
---
Predecessors: [0x44a]
Successors: [0x52f, 0x538]
---
0x524 JUMPDEST
0x525 POP
0x526 GAS
0x527 CALL
0x528 ISZERO
0x529 DUP1
0x52a ISZERO
0x52b PUSH2 0x538
0x52e JUMPI
---
0x524: JUMPDEST 
0x526: V281 = GAS
0x527: V282 = CALL V281 V254 0x0 V273 V274 V273 0x20
0x528: V283 = ISZERO V282
0x52a: V284 = ISZERO V283
0x52b: V285 = 0x538
0x52e: JUMPI 0x538 V284
---
Entry stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V254, 0x70a08231, V270, 0x20, V273, V274, V273, 0x0, V254, V277]
Stack pops: 7
Stack additions: [V283]
Exit stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V254, 0x70a08231, V270, V283]

================================

Block 0x52f
[0x52f:0x537]
---
Predecessors: [0x524]
Successors: []
---
0x52f RETURNDATASIZE
0x530 PUSH1 0x0
0x532 DUP1
0x533 RETURNDATACOPY
0x534 RETURNDATASIZE
0x535 PUSH1 0x0
0x537 REVERT
---
0x52f: V286 = RETURNDATASIZE
0x530: V287 = 0x0
0x533: RETURNDATACOPY 0x0 0x0 V286
0x534: V288 = RETURNDATASIZE
0x535: V289 = 0x0
0x537: REVERT 0x0 V288
---
Entry stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V254, 0x70a08231, V270, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V254, 0x70a08231, V270, V283]

================================

Block 0x538
[0x538:0x549]
---
Predecessors: [0x524]
Successors: [0x54a, 0x54e]
---
0x538 JUMPDEST
0x539 POP
0x53a POP
0x53b POP
0x53c POP
0x53d PUSH1 0x40
0x53f MLOAD
0x540 RETURNDATASIZE
0x541 PUSH1 0x20
0x543 DUP2
0x544 LT
0x545 ISZERO
0x546 PUSH2 0x54e
0x549 JUMPI
---
0x538: JUMPDEST 
0x53d: V290 = 0x40
0x53f: V291 = M[0x40]
0x540: V292 = RETURNDATASIZE
0x541: V293 = 0x20
0x544: V294 = LT V292 0x20
0x545: V295 = ISZERO V294
0x546: V296 = 0x54e
0x549: JUMPI 0x54e V295
---
Entry stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V254, 0x70a08231, V270, V283]
Stack pops: 4
Stack additions: [V291, V292]
Exit stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V291, V292]

================================

Block 0x54a
[0x54a:0x54d]
---
Predecessors: [0x538]
Successors: []
---
0x54a PUSH1 0x0
0x54c DUP1
0x54d REVERT
---
0x54a: V297 = 0x0
0x54d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V291, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V291, V292]

================================

Block 0x54e
[0x54e:0x5df]
---
Predecessors: [0x538]
Successors: [0x5e0, 0x5e4]
---
0x54e JUMPDEST
0x54f DUP2
0x550 ADD
0x551 SWAP1
0x552 DUP1
0x553 DUP1
0x554 MLOAD
0x555 SWAP1
0x556 PUSH1 0x20
0x558 ADD
0x559 SWAP1
0x55a SWAP3
0x55b SWAP2
0x55c SWAP1
0x55d POP
0x55e POP
0x55f POP
0x560 PUSH1 0x40
0x562 MLOAD
0x563 DUP4
0x564 PUSH4 0xffffffff
0x569 AND
0x56a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x588 MUL
0x589 DUP2
0x58a MSTORE
0x58b PUSH1 0x4
0x58d ADD
0x58e DUP1
0x58f DUP4
0x590 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a5 AND
0x5a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bb AND
0x5bc DUP2
0x5bd MSTORE
0x5be PUSH1 0x20
0x5c0 ADD
0x5c1 DUP3
0x5c2 DUP2
0x5c3 MSTORE
0x5c4 PUSH1 0x20
0x5c6 ADD
0x5c7 SWAP3
0x5c8 POP
0x5c9 POP
0x5ca POP
0x5cb PUSH1 0x20
0x5cd PUSH1 0x40
0x5cf MLOAD
0x5d0 DUP1
0x5d1 DUP4
0x5d2 SUB
0x5d3 DUP2
0x5d4 PUSH1 0x0
0x5d6 DUP8
0x5d7 DUP1
0x5d8 EXTCODESIZE
0x5d9 ISZERO
0x5da DUP1
0x5db ISZERO
0x5dc PUSH2 0x5e4
0x5df JUMPI
---
0x54e: JUMPDEST 
0x550: V298 = ADD V291 V292
0x554: V299 = M[V291]
0x556: V300 = 0x20
0x558: V301 = ADD 0x20 V291
0x560: V302 = 0x40
0x562: V303 = M[0x40]
0x564: V304 = 0xffffffff
0x569: V305 = AND 0xffffffff 0xa9059cbb
0x56a: V306 = 0x100000000000000000000000000000000000000000000000000000000
0x588: V307 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x58a: M[V303] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x58b: V308 = 0x4
0x58d: V309 = ADD 0x4 V303
0x590: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a5: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x5a6: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bb: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x5bd: M[V309] = V313
0x5be: V314 = 0x20
0x5c0: V315 = ADD 0x20 V309
0x5c3: M[V315] = V299
0x5c4: V316 = 0x20
0x5c6: V317 = ADD 0x20 V315
0x5cb: V318 = 0x20
0x5cd: V319 = 0x40
0x5cf: V320 = M[0x40]
0x5d2: V321 = SUB V317 V320
0x5d4: V322 = 0x0
0x5d8: V323 = EXTCODESIZE V243
0x5d9: V324 = ISZERO V323
0x5db: V325 = ISZERO V324
0x5dc: V326 = 0x5e4
0x5df: JUMPI 0x5e4 V325
---
Entry stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V252, V291, V292]
Stack pops: 5
Stack additions: [S4, S3, V317, 0x20, V320, V321, V320, 0x0, S4, V324]
Exit stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V317, 0x20, V320, V321, V320, 0x0, V243, V324]

================================

Block 0x5e0
[0x5e0:0x5e3]
---
Predecessors: [0x54e]
Successors: []
---
0x5e0 PUSH1 0x0
0x5e2 DUP1
0x5e3 REVERT
---
0x5e0: V327 = 0x0
0x5e3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V317, 0x20, V320, V321, V320, 0x0, V243, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V317, 0x20, V320, V321, V320, 0x0, V243, V324]

================================

Block 0x5e4
[0x5e4:0x5ee]
---
Predecessors: [0x54e]
Successors: [0x5ef, 0x5f8]
---
0x5e4 JUMPDEST
0x5e5 POP
0x5e6 GAS
0x5e7 CALL
0x5e8 ISZERO
0x5e9 DUP1
0x5ea ISZERO
0x5eb PUSH2 0x5f8
0x5ee JUMPI
---
0x5e4: JUMPDEST 
0x5e6: V328 = GAS
0x5e7: V329 = CALL V328 V243 0x0 V320 V321 V320 0x20
0x5e8: V330 = ISZERO V329
0x5ea: V331 = ISZERO V330
0x5eb: V332 = 0x5f8
0x5ee: JUMPI 0x5f8 V331
---
Entry stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V317, 0x20, V320, V321, V320, 0x0, V243, V324]
Stack pops: 7
Stack additions: [V330]
Exit stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V317, V330]

================================

Block 0x5ef
[0x5ef:0x5f7]
---
Predecessors: [0x5e4]
Successors: []
---
0x5ef RETURNDATASIZE
0x5f0 PUSH1 0x0
0x5f2 DUP1
0x5f3 RETURNDATACOPY
0x5f4 RETURNDATASIZE
0x5f5 PUSH1 0x0
0x5f7 REVERT
---
0x5ef: V333 = RETURNDATASIZE
0x5f0: V334 = 0x0
0x5f3: RETURNDATACOPY 0x0 0x0 V333
0x5f4: V335 = RETURNDATASIZE
0x5f5: V336 = 0x0
0x5f7: REVERT 0x0 V335
---
Entry stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V317, V330]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V317, V330]

================================

Block 0x5f8
[0x5f8:0x609]
---
Predecessors: [0x5e4]
Successors: [0x60a, 0x60e]
---
0x5f8 JUMPDEST
0x5f9 POP
0x5fa POP
0x5fb POP
0x5fc POP
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 RETURNDATASIZE
0x601 PUSH1 0x20
0x603 DUP2
0x604 LT
0x605 ISZERO
0x606 PUSH2 0x60e
0x609 JUMPI
---
0x5f8: JUMPDEST 
0x5fd: V337 = 0x40
0x5ff: V338 = M[0x40]
0x600: V339 = RETURNDATASIZE
0x601: V340 = 0x20
0x604: V341 = LT V339 0x20
0x605: V342 = ISZERO V341
0x606: V343 = 0x60e
0x609: JUMPI 0x60e V342
---
Entry stack: [V11, 0x21e, V115, V243, 0xa9059cbb, V317, V330]
Stack pops: 4
Stack additions: [V338, V339]
Exit stack: [V11, 0x21e, V115, V338, V339]

================================

Block 0x60a
[0x60a:0x60d]
---
Predecessors: [0x5f8]
Successors: []
---
0x60a PUSH1 0x0
0x60c DUP1
0x60d REVERT
---
0x60a: V344 = 0x0
0x60d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x21e, V115, V338, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x21e, V115, V338, V339]

================================

Block 0x60e
[0x60e:0x640]
---
Predecessors: [0x5f8]
Successors: [0x641, 0x6c1]
---
0x60e JUMPDEST
0x60f DUP2
0x610 ADD
0x611 SWAP1
0x612 DUP1
0x613 DUP1
0x614 MLOAD
0x615 SWAP1
0x616 PUSH1 0x20
0x618 ADD
0x619 SWAP1
0x61a SWAP3
0x61b SWAP2
0x61c SWAP1
0x61d POP
0x61e POP
0x61f POP
0x620 POP
0x621 PUSH1 0x0
0x623 ADDRESS
0x624 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x639 AND
0x63a BALANCE
0x63b GT
0x63c ISZERO
0x63d PUSH2 0x6c1
0x640 JUMPI
---
0x60e: JUMPDEST 
0x610: V345 = ADD V338 V339
0x614: V346 = M[V338]
0x616: V347 = 0x20
0x618: V348 = ADD 0x20 V338
0x621: V349 = 0x0
0x623: V350 = ADDRESS
0x624: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x639: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x63a: V353 = BALANCE V352
0x63b: V354 = GT V353 0x0
0x63c: V355 = ISZERO V354
0x63d: V356 = 0x6c1
0x640: JUMPI 0x6c1 V355
---
Entry stack: [V11, 0x21e, V115, V338, V339]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x21e, V115]

================================

Block 0x641
[0x641:0x6b5]
---
Predecessors: [0x60e]
Successors: [0x6b6, 0x6bf]
---
0x641 PUSH1 0x1
0x643 PUSH1 0x0
0x645 SWAP1
0x646 SLOAD
0x647 SWAP1
0x648 PUSH2 0x100
0x64b EXP
0x64c SWAP1
0x64d DIV
0x64e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x663 AND
0x664 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x679 AND
0x67a PUSH2 0x8fc
0x67d ADDRESS
0x67e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x693 AND
0x694 BALANCE
0x695 SWAP1
0x696 DUP2
0x697 ISZERO
0x698 MUL
0x699 SWAP1
0x69a PUSH1 0x40
0x69c MLOAD
0x69d PUSH1 0x0
0x69f PUSH1 0x40
0x6a1 MLOAD
0x6a2 DUP1
0x6a3 DUP4
0x6a4 SUB
0x6a5 DUP2
0x6a6 DUP6
0x6a7 DUP9
0x6a8 DUP9
0x6a9 CALL
0x6aa SWAP4
0x6ab POP
0x6ac POP
0x6ad POP
0x6ae POP
0x6af ISZERO
0x6b0 DUP1
0x6b1 ISZERO
0x6b2 PUSH2 0x6bf
0x6b5 JUMPI
---
0x641: V357 = 0x1
0x643: V358 = 0x0
0x646: V359 = S[0x1]
0x648: V360 = 0x100
0x64b: V361 = EXP 0x100 0x0
0x64d: V362 = DIV V359 0x1
0x64e: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x663: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x664: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x679: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x67a: V367 = 0x8fc
0x67d: V368 = ADDRESS
0x67e: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x693: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x694: V371 = BALANCE V370
0x697: V372 = ISZERO V371
0x698: V373 = MUL V372 0x8fc
0x69a: V374 = 0x40
0x69c: V375 = M[0x40]
0x69d: V376 = 0x0
0x69f: V377 = 0x40
0x6a1: V378 = M[0x40]
0x6a4: V379 = SUB V375 V378
0x6a9: V380 = CALL V373 V366 V371 V378 V379 V378 0x0
0x6af: V381 = ISZERO V380
0x6b1: V382 = ISZERO V381
0x6b2: V383 = 0x6bf
0x6b5: JUMPI 0x6bf V382
---
Entry stack: [V11, 0x21e, V115]
Stack pops: 0
Stack additions: [V381]
Exit stack: [V11, 0x21e, V115, V381]

================================

Block 0x6b6
[0x6b6:0x6be]
---
Predecessors: [0x641]
Successors: []
---
0x6b6 RETURNDATASIZE
0x6b7 PUSH1 0x0
0x6b9 DUP1
0x6ba RETURNDATACOPY
0x6bb RETURNDATASIZE
0x6bc PUSH1 0x0
0x6be REVERT
---
0x6b6: V384 = RETURNDATASIZE
0x6b7: V385 = 0x0
0x6ba: RETURNDATACOPY 0x0 0x0 V384
0x6bb: V386 = RETURNDATASIZE
0x6bc: V387 = 0x0
0x6be: REVERT 0x0 V386
---
Entry stack: [V11, 0x21e, V115, V381]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x21e, V115, V381]

================================

Block 0x6bf
[0x6bf:0x6c0]
---
Predecessors: [0x641]
Successors: [0x6c1]
---
0x6bf JUMPDEST
0x6c0 POP
---
0x6bf: JUMPDEST 
---
Entry stack: [V11, 0x21e, V115, V381]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x21e, V115]

================================

Block 0x6c1
[0x6c1:0x6c3]
---
Predecessors: [0x60e, 0x6bf]
Successors: [0x21e]
---
0x6c1 JUMPDEST
0x6c2 POP
0x6c3 JUMP
---
0x6c1: JUMPDEST 
0x6c3: JUMP 0x21e
---
Entry stack: [V11, 0x21e, V115]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x6c4
[0x6c4:0x79a]
---
Predecessors: [0x22c]
Successors: [0x79b, 0x79f]
---
0x6c4 JUMPDEST
0x6c5 PUSH1 0x0
0x6c7 CALLER
0x6c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6dd AND
0x6de PUSH4 0xa9059cbb
0x6e3 PUSH1 0x0
0x6e5 DUP1
0x6e6 SWAP1
0x6e7 SLOAD
0x6e8 SWAP1
0x6e9 PUSH2 0x100
0x6ec EXP
0x6ed SWAP1
0x6ee DIV
0x6ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x704 AND
0x705 CALLER
0x706 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71b AND
0x71c PUSH4 0x70a08231
0x721 ADDRESS
0x722 PUSH1 0x40
0x724 MLOAD
0x725 DUP3
0x726 PUSH4 0xffffffff
0x72b AND
0x72c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x74a MUL
0x74b DUP2
0x74c MSTORE
0x74d PUSH1 0x4
0x74f ADD
0x750 DUP1
0x751 DUP3
0x752 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x767 AND
0x768 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77d AND
0x77e DUP2
0x77f MSTORE
0x780 PUSH1 0x20
0x782 ADD
0x783 SWAP2
0x784 POP
0x785 POP
0x786 PUSH1 0x20
0x788 PUSH1 0x40
0x78a MLOAD
0x78b DUP1
0x78c DUP4
0x78d SUB
0x78e DUP2
0x78f PUSH1 0x0
0x791 DUP8
0x792 DUP1
0x793 EXTCODESIZE
0x794 ISZERO
0x795 DUP1
0x796 ISZERO
0x797 PUSH2 0x79f
0x79a JUMPI
---
0x6c4: JUMPDEST 
0x6c5: V388 = 0x0
0x6c7: V389 = CALLER
0x6c8: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x6dd: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x6de: V392 = 0xa9059cbb
0x6e3: V393 = 0x0
0x6e7: V394 = S[0x0]
0x6e9: V395 = 0x100
0x6ec: V396 = EXP 0x100 0x0
0x6ee: V397 = DIV V394 0x1
0x6ef: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x704: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x705: V400 = CALLER
0x706: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x71b: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x71c: V403 = 0x70a08231
0x721: V404 = ADDRESS
0x722: V405 = 0x40
0x724: V406 = M[0x40]
0x726: V407 = 0xffffffff
0x72b: V408 = AND 0xffffffff 0x70a08231
0x72c: V409 = 0x100000000000000000000000000000000000000000000000000000000
0x74a: V410 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x74c: M[V406] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x74d: V411 = 0x4
0x74f: V412 = ADD 0x4 V406
0x752: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x767: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x768: V415 = 0xffffffffffffffffffffffffffffffffffffffff
0x77d: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x77f: M[V412] = V416
0x780: V417 = 0x20
0x782: V418 = ADD 0x20 V412
0x786: V419 = 0x20
0x788: V420 = 0x40
0x78a: V421 = M[0x40]
0x78d: V422 = SUB V418 V421
0x78f: V423 = 0x0
0x793: V424 = EXTCODESIZE V402
0x794: V425 = ISZERO V424
0x796: V426 = ISZERO V425
0x797: V427 = 0x79f
0x79a: JUMPI 0x79f V426
---
Entry stack: [V11, 0x2b1, V130, V133, V151]
Stack pops: 0
Stack additions: [0x0, V391, 0xa9059cbb, V399, V402, 0x70a08231, V418, 0x20, V421, V422, V421, 0x0, V402, V425]
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V402, 0x70a08231, V418, 0x20, V421, V422, V421, 0x0, V402, V425]

================================

Block 0x79b
[0x79b:0x79e]
---
Predecessors: [0x6c4]
Successors: []
---
0x79b PUSH1 0x0
0x79d DUP1
0x79e REVERT
---
0x79b: V428 = 0x0
0x79e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V402, 0x70a08231, V418, 0x20, V421, V422, V421, 0x0, V402, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V402, 0x70a08231, V418, 0x20, V421, V422, V421, 0x0, V402, V425]

================================

Block 0x79f
[0x79f:0x7a9]
---
Predecessors: [0x6c4]
Successors: [0x7aa, 0x7b3]
---
0x79f JUMPDEST
0x7a0 POP
0x7a1 GAS
0x7a2 CALL
0x7a3 ISZERO
0x7a4 DUP1
0x7a5 ISZERO
0x7a6 PUSH2 0x7b3
0x7a9 JUMPI
---
0x79f: JUMPDEST 
0x7a1: V429 = GAS
0x7a2: V430 = CALL V429 V402 0x0 V421 V422 V421 0x20
0x7a3: V431 = ISZERO V430
0x7a5: V432 = ISZERO V431
0x7a6: V433 = 0x7b3
0x7a9: JUMPI 0x7b3 V432
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V402, 0x70a08231, V418, 0x20, V421, V422, V421, 0x0, V402, V425]
Stack pops: 7
Stack additions: [V431]
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V402, 0x70a08231, V418, V431]

================================

Block 0x7aa
[0x7aa:0x7b2]
---
Predecessors: [0x79f]
Successors: []
---
0x7aa RETURNDATASIZE
0x7ab PUSH1 0x0
0x7ad DUP1
0x7ae RETURNDATACOPY
0x7af RETURNDATASIZE
0x7b0 PUSH1 0x0
0x7b2 REVERT
---
0x7aa: V434 = RETURNDATASIZE
0x7ab: V435 = 0x0
0x7ae: RETURNDATACOPY 0x0 0x0 V434
0x7af: V436 = RETURNDATASIZE
0x7b0: V437 = 0x0
0x7b2: REVERT 0x0 V436
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V402, 0x70a08231, V418, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V402, 0x70a08231, V418, V431]

================================

Block 0x7b3
[0x7b3:0x7c4]
---
Predecessors: [0x79f]
Successors: [0x7c5, 0x7c9]
---
0x7b3 JUMPDEST
0x7b4 POP
0x7b5 POP
0x7b6 POP
0x7b7 POP
0x7b8 PUSH1 0x40
0x7ba MLOAD
0x7bb RETURNDATASIZE
0x7bc PUSH1 0x20
0x7be DUP2
0x7bf LT
0x7c0 ISZERO
0x7c1 PUSH2 0x7c9
0x7c4 JUMPI
---
0x7b3: JUMPDEST 
0x7b8: V438 = 0x40
0x7ba: V439 = M[0x40]
0x7bb: V440 = RETURNDATASIZE
0x7bc: V441 = 0x20
0x7bf: V442 = LT V440 0x20
0x7c0: V443 = ISZERO V442
0x7c1: V444 = 0x7c9
0x7c4: JUMPI 0x7c9 V443
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V402, 0x70a08231, V418, V431]
Stack pops: 4
Stack additions: [V439, V440]
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V439, V440]

================================

Block 0x7c5
[0x7c5:0x7c8]
---
Predecessors: [0x7b3]
Successors: []
---
0x7c5 PUSH1 0x0
0x7c7 DUP1
0x7c8 REVERT
---
0x7c5: V445 = 0x0
0x7c8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V439, V440]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V439, V440]

================================

Block 0x7c9
[0x7c9:0x85a]
---
Predecessors: [0x7b3]
Successors: [0x85b, 0x85f]
---
0x7c9 JUMPDEST
0x7ca DUP2
0x7cb ADD
0x7cc SWAP1
0x7cd DUP1
0x7ce DUP1
0x7cf MLOAD
0x7d0 SWAP1
0x7d1 PUSH1 0x20
0x7d3 ADD
0x7d4 SWAP1
0x7d5 SWAP3
0x7d6 SWAP2
0x7d7 SWAP1
0x7d8 POP
0x7d9 POP
0x7da POP
0x7db PUSH1 0x40
0x7dd MLOAD
0x7de DUP4
0x7df PUSH4 0xffffffff
0x7e4 AND
0x7e5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x803 MUL
0x804 DUP2
0x805 MSTORE
0x806 PUSH1 0x4
0x808 ADD
0x809 DUP1
0x80a DUP4
0x80b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x820 AND
0x821 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x836 AND
0x837 DUP2
0x838 MSTORE
0x839 PUSH1 0x20
0x83b ADD
0x83c DUP3
0x83d DUP2
0x83e MSTORE
0x83f PUSH1 0x20
0x841 ADD
0x842 SWAP3
0x843 POP
0x844 POP
0x845 POP
0x846 PUSH1 0x20
0x848 PUSH1 0x40
0x84a MLOAD
0x84b DUP1
0x84c DUP4
0x84d SUB
0x84e DUP2
0x84f PUSH1 0x0
0x851 DUP8
0x852 DUP1
0x853 EXTCODESIZE
0x854 ISZERO
0x855 DUP1
0x856 ISZERO
0x857 PUSH2 0x85f
0x85a JUMPI
---
0x7c9: JUMPDEST 
0x7cb: V446 = ADD V439 V440
0x7cf: V447 = M[V439]
0x7d1: V448 = 0x20
0x7d3: V449 = ADD 0x20 V439
0x7db: V450 = 0x40
0x7dd: V451 = M[0x40]
0x7df: V452 = 0xffffffff
0x7e4: V453 = AND 0xffffffff 0xa9059cbb
0x7e5: V454 = 0x100000000000000000000000000000000000000000000000000000000
0x803: V455 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x805: M[V451] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x806: V456 = 0x4
0x808: V457 = ADD 0x4 V451
0x80b: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x820: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x821: V460 = 0xffffffffffffffffffffffffffffffffffffffff
0x836: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V459
0x838: M[V457] = V461
0x839: V462 = 0x20
0x83b: V463 = ADD 0x20 V457
0x83e: M[V463] = V447
0x83f: V464 = 0x20
0x841: V465 = ADD 0x20 V463
0x846: V466 = 0x20
0x848: V467 = 0x40
0x84a: V468 = M[0x40]
0x84d: V469 = SUB V465 V468
0x84f: V470 = 0x0
0x853: V471 = EXTCODESIZE V391
0x854: V472 = ISZERO V471
0x856: V473 = ISZERO V472
0x857: V474 = 0x85f
0x85a: JUMPI 0x85f V473
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V399, V439, V440]
Stack pops: 5
Stack additions: [S4, S3, V465, 0x20, V468, V469, V468, 0x0, S4, V472]
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V465, 0x20, V468, V469, V468, 0x0, V391, V472]

================================

Block 0x85b
[0x85b:0x85e]
---
Predecessors: [0x7c9]
Successors: []
---
0x85b PUSH1 0x0
0x85d DUP1
0x85e REVERT
---
0x85b: V475 = 0x0
0x85e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V465, 0x20, V468, V469, V468, 0x0, V391, V472]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V465, 0x20, V468, V469, V468, 0x0, V391, V472]

================================

Block 0x85f
[0x85f:0x869]
---
Predecessors: [0x7c9]
Successors: [0x86a, 0x873]
---
0x85f JUMPDEST
0x860 POP
0x861 GAS
0x862 CALL
0x863 ISZERO
0x864 DUP1
0x865 ISZERO
0x866 PUSH2 0x873
0x869 JUMPI
---
0x85f: JUMPDEST 
0x861: V476 = GAS
0x862: V477 = CALL V476 V391 0x0 V468 V469 V468 0x20
0x863: V478 = ISZERO V477
0x865: V479 = ISZERO V478
0x866: V480 = 0x873
0x869: JUMPI 0x873 V479
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V465, 0x20, V468, V469, V468, 0x0, V391, V472]
Stack pops: 7
Stack additions: [V478]
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V465, V478]

================================

Block 0x86a
[0x86a:0x872]
---
Predecessors: [0x85f]
Successors: []
---
0x86a RETURNDATASIZE
0x86b PUSH1 0x0
0x86d DUP1
0x86e RETURNDATACOPY
0x86f RETURNDATASIZE
0x870 PUSH1 0x0
0x872 REVERT
---
0x86a: V481 = RETURNDATASIZE
0x86b: V482 = 0x0
0x86e: RETURNDATACOPY 0x0 0x0 V481
0x86f: V483 = RETURNDATASIZE
0x870: V484 = 0x0
0x872: REVERT 0x0 V483
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V465, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V465, V478]

================================

Block 0x873
[0x873:0x884]
---
Predecessors: [0x85f]
Successors: [0x885, 0x889]
---
0x873 JUMPDEST
0x874 POP
0x875 POP
0x876 POP
0x877 POP
0x878 PUSH1 0x40
0x87a MLOAD
0x87b RETURNDATASIZE
0x87c PUSH1 0x20
0x87e DUP2
0x87f LT
0x880 ISZERO
0x881 PUSH2 0x889
0x884 JUMPI
---
0x873: JUMPDEST 
0x878: V485 = 0x40
0x87a: V486 = M[0x40]
0x87b: V487 = RETURNDATASIZE
0x87c: V488 = 0x20
0x87f: V489 = LT V487 0x20
0x880: V490 = ISZERO V489
0x881: V491 = 0x889
0x884: JUMPI 0x889 V490
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V391, 0xa9059cbb, V465, V478]
Stack pops: 4
Stack additions: [V486, V487]
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V486, V487]

================================

Block 0x885
[0x885:0x888]
---
Predecessors: [0x873]
Successors: []
---
0x885 PUSH1 0x0
0x887 DUP1
0x888 REVERT
---
0x885: V492 = 0x0
0x888: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V486, V487]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b1, V130, V133, V151, 0x0, V486, V487]

================================

Block 0x889
[0x889:0x8a5]
---
Predecessors: [0x873]
Successors: [0x2b1]
---
0x889 JUMPDEST
0x88a DUP2
0x88b ADD
0x88c SWAP1
0x88d DUP1
0x88e DUP1
0x88f MLOAD
0x890 SWAP1
0x891 PUSH1 0x20
0x893 ADD
0x894 SWAP1
0x895 SWAP3
0x896 SWAP2
0x897 SWAP1
0x898 POP
0x899 POP
0x89a POP
0x89b POP
0x89c PUSH1 0x1
0x89e SWAP1
0x89f POP
0x8a0 SWAP4
0x8a1 SWAP3
0x8a2 POP
0x8a3 POP
0x8a4 POP
0x8a5 JUMP
---
0x889: JUMPDEST 
0x88b: V493 = ADD V486 V487
0x88f: V494 = M[V486]
0x891: V495 = 0x20
0x893: V496 = ADD 0x20 V486
0x89c: V497 = 0x1
0x8a5: JUMP 0x2b1
---
Entry stack: [V11, 0x2b1, V130, V133, V151, 0x0, V486, V487]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x8a6
[0x8a6:0x8fd]
---
Predecessors: [0x2d7]
Successors: [0x8fe, 0x96b]
---
0x8a6 JUMPDEST
0x8a7 CALLER
0x8a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bd AND
0x8be PUSH1 0x3
0x8c0 PUSH1 0x0
0x8c2 SWAP1
0x8c3 SLOAD
0x8c4 SWAP1
0x8c5 PUSH2 0x100
0x8c8 EXP
0x8c9 SWAP1
0x8ca DIV
0x8cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e0 AND
0x8e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f6 AND
0x8f7 EQ
0x8f8 ISZERO
0x8f9 ISZERO
0x8fa PUSH2 0x96b
0x8fd JUMPI
---
0x8a6: JUMPDEST 
0x8a7: V498 = CALLER
0x8a8: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bd: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x8be: V501 = 0x3
0x8c0: V502 = 0x0
0x8c3: V503 = S[0x3]
0x8c5: V504 = 0x100
0x8c8: V505 = EXP 0x100 0x0
0x8ca: V506 = DIV V503 0x1
0x8cb: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e0: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x8e1: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f6: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x8f7: V511 = EQ V510 V500
0x8f8: V512 = ISZERO V511
0x8f9: V513 = ISZERO V512
0x8fa: V514 = 0x96b
0x8fd: JUMPI 0x96b V513
---
Entry stack: [V11, 0x2e0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e0]

================================

Block 0x8fe
[0x8fe:0x96a]
---
Predecessors: [0x8a6]
Successors: []
---
0x8fe PUSH1 0x40
0x900 MLOAD
0x901 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x922 DUP2
0x923 MSTORE
0x924 PUSH1 0x4
0x926 ADD
0x927 DUP1
0x928 DUP1
0x929 PUSH1 0x20
0x92b ADD
0x92c DUP3
0x92d DUP2
0x92e SUB
0x92f DUP3
0x930 MSTORE
0x931 PUSH1 0x1e
0x933 DUP2
0x934 MSTORE
0x935 PUSH1 0x20
0x937 ADD
0x938 DUP1
0x939 PUSH32 0x4e6f7420617574686f72697a656420656f20656d7074792077616c6c65740000
0x95a DUP2
0x95b MSTORE
0x95c POP
0x95d PUSH1 0x20
0x95f ADD
0x960 SWAP2
0x961 POP
0x962 POP
0x963 PUSH1 0x40
0x965 MLOAD
0x966 DUP1
0x967 SWAP2
0x968 SUB
0x969 SWAP1
0x96a REVERT
---
0x8fe: V515 = 0x40
0x900: V516 = M[0x40]
0x901: V517 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x923: M[V516] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x924: V518 = 0x4
0x926: V519 = ADD 0x4 V516
0x929: V520 = 0x20
0x92b: V521 = ADD 0x20 V519
0x92e: V522 = SUB V521 V519
0x930: M[V519] = V522
0x931: V523 = 0x1e
0x934: M[V521] = 0x1e
0x935: V524 = 0x20
0x937: V525 = ADD 0x20 V521
0x939: V526 = 0x4e6f7420617574686f72697a656420656f20656d7074792077616c6c65740000
0x95b: M[V525] = 0x4e6f7420617574686f72697a656420656f20656d7074792077616c6c65740000
0x95d: V527 = 0x20
0x95f: V528 = ADD 0x20 V525
0x963: V529 = 0x40
0x965: V530 = M[0x40]
0x968: V531 = SUB V528 V530
0x96a: REVERT V530 V531
---
Entry stack: [V11, 0x2e0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e0]

================================

Block 0x96b
[0x96b:0xa83]
---
Predecessors: [0x8a6]
Successors: [0xa84, 0xa88]
---
0x96b JUMPDEST
0x96c PUSH1 0x2
0x96e PUSH1 0x0
0x970 SWAP1
0x971 SLOAD
0x972 SWAP1
0x973 PUSH2 0x100
0x976 EXP
0x977 SWAP1
0x978 DIV
0x979 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98e AND
0x98f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a4 AND
0x9a5 PUSH4 0xa9059cbb
0x9aa PUSH1 0x0
0x9ac DUP1
0x9ad SWAP1
0x9ae SLOAD
0x9af SWAP1
0x9b0 PUSH2 0x100
0x9b3 EXP
0x9b4 SWAP1
0x9b5 DIV
0x9b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9cb AND
0x9cc PUSH1 0x2
0x9ce PUSH1 0x0
0x9d0 SWAP1
0x9d1 SLOAD
0x9d2 SWAP1
0x9d3 PUSH2 0x100
0x9d6 EXP
0x9d7 SWAP1
0x9d8 DIV
0x9d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ee AND
0x9ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa04 AND
0xa05 PUSH4 0x70a08231
0xa0a ADDRESS
0xa0b PUSH1 0x40
0xa0d MLOAD
0xa0e DUP3
0xa0f PUSH4 0xffffffff
0xa14 AND
0xa15 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa33 MUL
0xa34 DUP2
0xa35 MSTORE
0xa36 PUSH1 0x4
0xa38 ADD
0xa39 DUP1
0xa3a DUP3
0xa3b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa50 AND
0xa51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa66 AND
0xa67 DUP2
0xa68 MSTORE
0xa69 PUSH1 0x20
0xa6b ADD
0xa6c SWAP2
0xa6d POP
0xa6e POP
0xa6f PUSH1 0x20
0xa71 PUSH1 0x40
0xa73 MLOAD
0xa74 DUP1
0xa75 DUP4
0xa76 SUB
0xa77 DUP2
0xa78 PUSH1 0x0
0xa7a DUP8
0xa7b DUP1
0xa7c EXTCODESIZE
0xa7d ISZERO
0xa7e DUP1
0xa7f ISZERO
0xa80 PUSH2 0xa88
0xa83 JUMPI
---
0x96b: JUMPDEST 
0x96c: V532 = 0x2
0x96e: V533 = 0x0
0x971: V534 = S[0x2]
0x973: V535 = 0x100
0x976: V536 = EXP 0x100 0x0
0x978: V537 = DIV V534 0x1
0x979: V538 = 0xffffffffffffffffffffffffffffffffffffffff
0x98e: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x98f: V540 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a4: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V539
0x9a5: V542 = 0xa9059cbb
0x9aa: V543 = 0x0
0x9ae: V544 = S[0x0]
0x9b0: V545 = 0x100
0x9b3: V546 = EXP 0x100 0x0
0x9b5: V547 = DIV V544 0x1
0x9b6: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x9cb: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x9cc: V550 = 0x2
0x9ce: V551 = 0x0
0x9d1: V552 = S[0x2]
0x9d3: V553 = 0x100
0x9d6: V554 = EXP 0x100 0x0
0x9d8: V555 = DIV V552 0x1
0x9d9: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ee: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x9ef: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0xa04: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0xa05: V560 = 0x70a08231
0xa0a: V561 = ADDRESS
0xa0b: V562 = 0x40
0xa0d: V563 = M[0x40]
0xa0f: V564 = 0xffffffff
0xa14: V565 = AND 0xffffffff 0x70a08231
0xa15: V566 = 0x100000000000000000000000000000000000000000000000000000000
0xa33: V567 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xa35: M[V563] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa36: V568 = 0x4
0xa38: V569 = ADD 0x4 V563
0xa3b: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0xa50: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V561
0xa51: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0xa66: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0xa68: M[V569] = V573
0xa69: V574 = 0x20
0xa6b: V575 = ADD 0x20 V569
0xa6f: V576 = 0x20
0xa71: V577 = 0x40
0xa73: V578 = M[0x40]
0xa76: V579 = SUB V575 V578
0xa78: V580 = 0x0
0xa7c: V581 = EXTCODESIZE V559
0xa7d: V582 = ISZERO V581
0xa7f: V583 = ISZERO V582
0xa80: V584 = 0xa88
0xa83: JUMPI 0xa88 V583
---
Entry stack: [V11, 0x2e0]
Stack pops: 0
Stack additions: [V541, 0xa9059cbb, V549, V559, 0x70a08231, V575, 0x20, V578, V579, V578, 0x0, V559, V582]
Exit stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V559, 0x70a08231, V575, 0x20, V578, V579, V578, 0x0, V559, V582]

================================

Block 0xa84
[0xa84:0xa87]
---
Predecessors: [0x96b]
Successors: []
---
0xa84 PUSH1 0x0
0xa86 DUP1
0xa87 REVERT
---
0xa84: V585 = 0x0
0xa87: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V559, 0x70a08231, V575, 0x20, V578, V579, V578, 0x0, V559, V582]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V559, 0x70a08231, V575, 0x20, V578, V579, V578, 0x0, V559, V582]

================================

Block 0xa88
[0xa88:0xa92]
---
Predecessors: [0x96b]
Successors: [0xa93, 0xa9c]
---
0xa88 JUMPDEST
0xa89 POP
0xa8a GAS
0xa8b CALL
0xa8c ISZERO
0xa8d DUP1
0xa8e ISZERO
0xa8f PUSH2 0xa9c
0xa92 JUMPI
---
0xa88: JUMPDEST 
0xa8a: V586 = GAS
0xa8b: V587 = CALL V586 V559 0x0 V578 V579 V578 0x20
0xa8c: V588 = ISZERO V587
0xa8e: V589 = ISZERO V588
0xa8f: V590 = 0xa9c
0xa92: JUMPI 0xa9c V589
---
Entry stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V559, 0x70a08231, V575, 0x20, V578, V579, V578, 0x0, V559, V582]
Stack pops: 7
Stack additions: [V588]
Exit stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V559, 0x70a08231, V575, V588]

================================

Block 0xa93
[0xa93:0xa9b]
---
Predecessors: [0xa88]
Successors: []
---
0xa93 RETURNDATASIZE
0xa94 PUSH1 0x0
0xa96 DUP1
0xa97 RETURNDATACOPY
0xa98 RETURNDATASIZE
0xa99 PUSH1 0x0
0xa9b REVERT
---
0xa93: V591 = RETURNDATASIZE
0xa94: V592 = 0x0
0xa97: RETURNDATACOPY 0x0 0x0 V591
0xa98: V593 = RETURNDATASIZE
0xa99: V594 = 0x0
0xa9b: REVERT 0x0 V593
---
Entry stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V559, 0x70a08231, V575, V588]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V559, 0x70a08231, V575, V588]

================================

Block 0xa9c
[0xa9c:0xaad]
---
Predecessors: [0xa88]
Successors: [0xaae, 0xab2]
---
0xa9c JUMPDEST
0xa9d POP
0xa9e POP
0xa9f POP
0xaa0 POP
0xaa1 PUSH1 0x40
0xaa3 MLOAD
0xaa4 RETURNDATASIZE
0xaa5 PUSH1 0x20
0xaa7 DUP2
0xaa8 LT
0xaa9 ISZERO
0xaaa PUSH2 0xab2
0xaad JUMPI
---
0xa9c: JUMPDEST 
0xaa1: V595 = 0x40
0xaa3: V596 = M[0x40]
0xaa4: V597 = RETURNDATASIZE
0xaa5: V598 = 0x20
0xaa8: V599 = LT V597 0x20
0xaa9: V600 = ISZERO V599
0xaaa: V601 = 0xab2
0xaad: JUMPI 0xab2 V600
---
Entry stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V559, 0x70a08231, V575, V588]
Stack pops: 4
Stack additions: [V596, V597]
Exit stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V596, V597]

================================

Block 0xaae
[0xaae:0xab1]
---
Predecessors: [0xa9c]
Successors: []
---
0xaae PUSH1 0x0
0xab0 DUP1
0xab1 REVERT
---
0xaae: V602 = 0x0
0xab1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V596, V597]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V596, V597]

================================

Block 0xab2
[0xab2:0xb43]
---
Predecessors: [0xa9c]
Successors: [0xb44, 0xb48]
---
0xab2 JUMPDEST
0xab3 DUP2
0xab4 ADD
0xab5 SWAP1
0xab6 DUP1
0xab7 DUP1
0xab8 MLOAD
0xab9 SWAP1
0xaba PUSH1 0x20
0xabc ADD
0xabd SWAP1
0xabe SWAP3
0xabf SWAP2
0xac0 SWAP1
0xac1 POP
0xac2 POP
0xac3 POP
0xac4 PUSH1 0x40
0xac6 MLOAD
0xac7 DUP4
0xac8 PUSH4 0xffffffff
0xacd AND
0xace PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xaec MUL
0xaed DUP2
0xaee MSTORE
0xaef PUSH1 0x4
0xaf1 ADD
0xaf2 DUP1
0xaf3 DUP4
0xaf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb09 AND
0xb0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1f AND
0xb20 DUP2
0xb21 MSTORE
0xb22 PUSH1 0x20
0xb24 ADD
0xb25 DUP3
0xb26 DUP2
0xb27 MSTORE
0xb28 PUSH1 0x20
0xb2a ADD
0xb2b SWAP3
0xb2c POP
0xb2d POP
0xb2e POP
0xb2f PUSH1 0x20
0xb31 PUSH1 0x40
0xb33 MLOAD
0xb34 DUP1
0xb35 DUP4
0xb36 SUB
0xb37 DUP2
0xb38 PUSH1 0x0
0xb3a DUP8
0xb3b DUP1
0xb3c EXTCODESIZE
0xb3d ISZERO
0xb3e DUP1
0xb3f ISZERO
0xb40 PUSH2 0xb48
0xb43 JUMPI
---
0xab2: JUMPDEST 
0xab4: V603 = ADD V596 V597
0xab8: V604 = M[V596]
0xaba: V605 = 0x20
0xabc: V606 = ADD 0x20 V596
0xac4: V607 = 0x40
0xac6: V608 = M[0x40]
0xac8: V609 = 0xffffffff
0xacd: V610 = AND 0xffffffff 0xa9059cbb
0xace: V611 = 0x100000000000000000000000000000000000000000000000000000000
0xaec: V612 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xaee: M[V608] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xaef: V613 = 0x4
0xaf1: V614 = ADD 0x4 V608
0xaf4: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0xb09: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0xb0a: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1f: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0xb21: M[V614] = V618
0xb22: V619 = 0x20
0xb24: V620 = ADD 0x20 V614
0xb27: M[V620] = V604
0xb28: V621 = 0x20
0xb2a: V622 = ADD 0x20 V620
0xb2f: V623 = 0x20
0xb31: V624 = 0x40
0xb33: V625 = M[0x40]
0xb36: V626 = SUB V622 V625
0xb38: V627 = 0x0
0xb3c: V628 = EXTCODESIZE V541
0xb3d: V629 = ISZERO V628
0xb3f: V630 = ISZERO V629
0xb40: V631 = 0xb48
0xb43: JUMPI 0xb48 V630
---
Entry stack: [V11, 0x2e0, V541, 0xa9059cbb, V549, V596, V597]
Stack pops: 5
Stack additions: [S4, S3, V622, 0x20, V625, V626, V625, 0x0, S4, V629]
Exit stack: [V11, 0x2e0, V541, 0xa9059cbb, V622, 0x20, V625, V626, V625, 0x0, V541, V629]

================================

Block 0xb44
[0xb44:0xb47]
---
Predecessors: [0xab2]
Successors: []
---
0xb44 PUSH1 0x0
0xb46 DUP1
0xb47 REVERT
---
0xb44: V632 = 0x0
0xb47: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e0, V541, 0xa9059cbb, V622, 0x20, V625, V626, V625, 0x0, V541, V629]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e0, V541, 0xa9059cbb, V622, 0x20, V625, V626, V625, 0x0, V541, V629]

================================

Block 0xb48
[0xb48:0xb52]
---
Predecessors: [0xab2]
Successors: [0xb53, 0xb5c]
---
0xb48 JUMPDEST
0xb49 POP
0xb4a GAS
0xb4b CALL
0xb4c ISZERO
0xb4d DUP1
0xb4e ISZERO
0xb4f PUSH2 0xb5c
0xb52 JUMPI
---
0xb48: JUMPDEST 
0xb4a: V633 = GAS
0xb4b: V634 = CALL V633 V541 0x0 V625 V626 V625 0x20
0xb4c: V635 = ISZERO V634
0xb4e: V636 = ISZERO V635
0xb4f: V637 = 0xb5c
0xb52: JUMPI 0xb5c V636
---
Entry stack: [V11, 0x2e0, V541, 0xa9059cbb, V622, 0x20, V625, V626, V625, 0x0, V541, V629]
Stack pops: 7
Stack additions: [V635]
Exit stack: [V11, 0x2e0, V541, 0xa9059cbb, V622, V635]

================================

Block 0xb53
[0xb53:0xb5b]
---
Predecessors: [0xb48]
Successors: []
---
0xb53 RETURNDATASIZE
0xb54 PUSH1 0x0
0xb56 DUP1
0xb57 RETURNDATACOPY
0xb58 RETURNDATASIZE
0xb59 PUSH1 0x0
0xb5b REVERT
---
0xb53: V638 = RETURNDATASIZE
0xb54: V639 = 0x0
0xb57: RETURNDATACOPY 0x0 0x0 V638
0xb58: V640 = RETURNDATASIZE
0xb59: V641 = 0x0
0xb5b: REVERT 0x0 V640
---
Entry stack: [V11, 0x2e0, V541, 0xa9059cbb, V622, V635]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e0, V541, 0xa9059cbb, V622, V635]

================================

Block 0xb5c
[0xb5c:0xb6d]
---
Predecessors: [0xb48]
Successors: [0xb6e, 0xb72]
---
0xb5c JUMPDEST
0xb5d POP
0xb5e POP
0xb5f POP
0xb60 POP
0xb61 PUSH1 0x40
0xb63 MLOAD
0xb64 RETURNDATASIZE
0xb65 PUSH1 0x20
0xb67 DUP2
0xb68 LT
0xb69 ISZERO
0xb6a PUSH2 0xb72
0xb6d JUMPI
---
0xb5c: JUMPDEST 
0xb61: V642 = 0x40
0xb63: V643 = M[0x40]
0xb64: V644 = RETURNDATASIZE
0xb65: V645 = 0x20
0xb68: V646 = LT V644 0x20
0xb69: V647 = ISZERO V646
0xb6a: V648 = 0xb72
0xb6d: JUMPI 0xb72 V647
---
Entry stack: [V11, 0x2e0, V541, 0xa9059cbb, V622, V635]
Stack pops: 4
Stack additions: [V643, V644]
Exit stack: [V11, 0x2e0, V643, V644]

================================

Block 0xb6e
[0xb6e:0xb71]
---
Predecessors: [0xb5c]
Successors: []
---
0xb6e PUSH1 0x0
0xb70 DUP1
0xb71 REVERT
---
0xb6e: V649 = 0x0
0xb71: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e0, V643, V644]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e0, V643, V644]

================================

Block 0xb72
[0xb72:0xba4]
---
Predecessors: [0xb5c]
Successors: [0xba5, 0xc24]
---
0xb72 JUMPDEST
0xb73 DUP2
0xb74 ADD
0xb75 SWAP1
0xb76 DUP1
0xb77 DUP1
0xb78 MLOAD
0xb79 SWAP1
0xb7a PUSH1 0x20
0xb7c ADD
0xb7d SWAP1
0xb7e SWAP3
0xb7f SWAP2
0xb80 SWAP1
0xb81 POP
0xb82 POP
0xb83 POP
0xb84 POP
0xb85 PUSH1 0x0
0xb87 ADDRESS
0xb88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9d AND
0xb9e BALANCE
0xb9f GT
0xba0 ISZERO
0xba1 PUSH2 0xc24
0xba4 JUMPI
---
0xb72: JUMPDEST 
0xb74: V650 = ADD V643 V644
0xb78: V651 = M[V643]
0xb7a: V652 = 0x20
0xb7c: V653 = ADD 0x20 V643
0xb85: V654 = 0x0
0xb87: V655 = ADDRESS
0xb88: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9d: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0xb9e: V658 = BALANCE V657
0xb9f: V659 = GT V658 0x0
0xba0: V660 = ISZERO V659
0xba1: V661 = 0xc24
0xba4: JUMPI 0xc24 V660
---
Entry stack: [V11, 0x2e0, V643, V644]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x2e0]

================================

Block 0xba5
[0xba5:0xc18]
---
Predecessors: [0xb72]
Successors: [0xc19, 0xc22]
---
0xba5 PUSH1 0x0
0xba7 DUP1
0xba8 SWAP1
0xba9 SLOAD
0xbaa SWAP1
0xbab PUSH2 0x100
0xbae EXP
0xbaf SWAP1
0xbb0 DIV
0xbb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc6 AND
0xbc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbdc AND
0xbdd PUSH2 0x8fc
0xbe0 ADDRESS
0xbe1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf6 AND
0xbf7 BALANCE
0xbf8 SWAP1
0xbf9 DUP2
0xbfa ISZERO
0xbfb MUL
0xbfc SWAP1
0xbfd PUSH1 0x40
0xbff MLOAD
0xc00 PUSH1 0x0
0xc02 PUSH1 0x40
0xc04 MLOAD
0xc05 DUP1
0xc06 DUP4
0xc07 SUB
0xc08 DUP2
0xc09 DUP6
0xc0a DUP9
0xc0b DUP9
0xc0c CALL
0xc0d SWAP4
0xc0e POP
0xc0f POP
0xc10 POP
0xc11 POP
0xc12 ISZERO
0xc13 DUP1
0xc14 ISZERO
0xc15 PUSH2 0xc22
0xc18 JUMPI
---
0xba5: V662 = 0x0
0xba9: V663 = S[0x0]
0xbab: V664 = 0x100
0xbae: V665 = EXP 0x100 0x0
0xbb0: V666 = DIV V663 0x1
0xbb1: V667 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc6: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V666
0xbc7: V669 = 0xffffffffffffffffffffffffffffffffffffffff
0xbdc: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V668
0xbdd: V671 = 0x8fc
0xbe0: V672 = ADDRESS
0xbe1: V673 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf6: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V672
0xbf7: V675 = BALANCE V674
0xbfa: V676 = ISZERO V675
0xbfb: V677 = MUL V676 0x8fc
0xbfd: V678 = 0x40
0xbff: V679 = M[0x40]
0xc00: V680 = 0x0
0xc02: V681 = 0x40
0xc04: V682 = M[0x40]
0xc07: V683 = SUB V679 V682
0xc0c: V684 = CALL V677 V670 V675 V682 V683 V682 0x0
0xc12: V685 = ISZERO V684
0xc14: V686 = ISZERO V685
0xc15: V687 = 0xc22
0xc18: JUMPI 0xc22 V686
---
Entry stack: [V11, 0x2e0]
Stack pops: 0
Stack additions: [V685]
Exit stack: [V11, 0x2e0, V685]

================================

Block 0xc19
[0xc19:0xc21]
---
Predecessors: [0xba5]
Successors: []
---
0xc19 RETURNDATASIZE
0xc1a PUSH1 0x0
0xc1c DUP1
0xc1d RETURNDATACOPY
0xc1e RETURNDATASIZE
0xc1f PUSH1 0x0
0xc21 REVERT
---
0xc19: V688 = RETURNDATASIZE
0xc1a: V689 = 0x0
0xc1d: RETURNDATACOPY 0x0 0x0 V688
0xc1e: V690 = RETURNDATASIZE
0xc1f: V691 = 0x0
0xc21: REVERT 0x0 V690
---
Entry stack: [V11, 0x2e0, V685]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e0, V685]

================================

Block 0xc22
[0xc22:0xc23]
---
Predecessors: [0xba5]
Successors: [0xc24]
---
0xc22 JUMPDEST
0xc23 POP
---
0xc22: JUMPDEST 
---
Entry stack: [V11, 0x2e0, V685]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2e0]

================================

Block 0xc24
[0xc24:0xc25]
---
Predecessors: [0xb72, 0xc22]
Successors: [0x2e0]
---
0xc24 JUMPDEST
0xc25 JUMP
---
0xc24: JUMPDEST 
0xc25: JUMP 0x2e0
---
Entry stack: [V11, 0x2e0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xc26
[0xc26:0xc4b]
---
Predecessors: [0x2ee]
Successors: [0x2f7]
---
0xc26 JUMPDEST
0xc27 PUSH1 0x2
0xc29 PUSH1 0x0
0xc2b SWAP1
0xc2c SLOAD
0xc2d SWAP1
0xc2e PUSH2 0x100
0xc31 EXP
0xc32 SWAP1
0xc33 DIV
0xc34 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc49 AND
0xc4a DUP2
0xc4b JUMP
---
0xc26: JUMPDEST 
0xc27: V692 = 0x2
0xc29: V693 = 0x0
0xc2c: V694 = S[0x2]
0xc2e: V695 = 0x100
0xc31: V696 = EXP 0x100 0x0
0xc33: V697 = DIV V694 0x1
0xc34: V698 = 0xffffffffffffffffffffffffffffffffffffffff
0xc49: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0xc4b: JUMP 0x2f7
---
Entry stack: [V11, 0x2f7]
Stack pops: 1
Stack additions: [S0, V699]
Exit stack: [V11, 0x2f7, V699]

================================

Block 0xc4c
[0xc4c:0xc79]
---
Predecessors: []
Successors: []
---
0xc4c STOP
0xc4d LOG1
0xc4e PUSH6 0x627a7a723058
0xc55 SHA3
0xc56 MISSING 0x2a
0xc57 SWAP3
0xc58 MISSING 0xb6
0xc59 MISSING 0xae
0xc5a MISSING 0xc7
0xc5b DUP8
0xc5c LT
0xc5d EQ
0xc5e PUSH27 0x5482f49a771184d3d5819b192b04446d93d0d7988f67500029
---
0xc4c: STOP 
0xc4d: LOG S0 S1 S2
0xc4e: V700 = 0x627a7a723058
0xc55: V701 = SHA3 0x627a7a723058 S3
0xc56: MISSING 0x2a
0xc58: MISSING 0xb6
0xc59: MISSING 0xae
0xc5a: MISSING 0xc7
0xc5c: V702 = LT S7 S0
0xc5d: V703 = EQ V702 S1
0xc5e: V704 = 0x5482f49a771184d3d5819b192b04446d93d0d7988f67500029
---
Entry stack: []
Stack pops: 0
Stack additions: [V701, S3, S1, S2, S0, 0x5482f49a771184d3d5819b192b04446d93d0d7988f67500029, V703, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0x238ac933
Entry block: 0x12f
Exit block: 0x144
Body: 0x12f, 0x137, 0x13b, 0x144, 0x339

Function 1:
Public function signature: 0x4783c35b
Entry block: 0x186
Exit block: 0x19b
Body: 0x186, 0x18e, 0x192, 0x19b, 0x35f

Function 2:
Public function signature: 0x6ade8aa2
Entry block: 0x1dd
Exit block: 0x21e
Body: 0x1dd, 0x1e5, 0x1e9, 0x21e, 0x385, 0x3dd, 0x44a, 0x520, 0x524, 0x52f, 0x538, 0x54a, 0x54e, 0x5e0, 0x5e4, 0x5ef, 0x5f8, 0x60a, 0x60e, 0x641, 0x6b6, 0x6bf, 0x6c1

Function 3:
Public function signature: 0xc0ee0b8a
Entry block: 0x220
Exit block: 0x2b1
Body: 0x220, 0x228, 0x22c, 0x2b1, 0x6c4, 0x79b, 0x79f, 0x7aa, 0x7b3, 0x7c5, 0x7c9, 0x85b, 0x85f, 0x86a, 0x873, 0x885, 0x889

Function 4:
Public function signature: 0xd0e30db0
Entry block: 0x2cb
Exit block: 0xc19
Body: 0x2cb, 0x2d3, 0x2d7, 0x2e0, 0x8a6, 0x8fe, 0x96b, 0xa84, 0xa88, 0xa93, 0xa9c, 0xaae, 0xab2, 0xb44, 0xb48, 0xb53, 0xb5c, 0xb6e, 0xb72, 0xba5, 0xc19, 0xc22, 0xc24

Function 5:
Public function signature: 0xfc0c546a
Entry block: 0x2e2
Exit block: 0x2f7
Body: 0x2e2, 0x2ea, 0x2ee, 0x2f7, 0xc26

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x11f
Body: 0x78, 0x110, 0x114, 0x11f, 0x128

