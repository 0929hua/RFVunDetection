Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x81]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x158ab5ba
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x81
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x158ab5ba
0x20: V14 = EQ V12 0x158ab5ba
0x21: V15 = 0x81
0x24: JUMPI 0x81 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xa5]
---
0x25 DUP1
0x26 PUSH4 0x513bd11b
0x2b EQ
0x2c PUSH2 0xa5
0x2f JUMPI
---
0x26: V16 = 0x513bd11b
0x2b: V17 = EQ 0x513bd11b V12
0x2c: V18 = 0xa5
0x2f: JUMPI 0xa5 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xbd]
---
0x30 DUP1
0x31 PUSH4 0x7831ce79
0x36 EQ
0x37 PUSH2 0xbd
0x3a JUMPI
---
0x31: V19 = 0x7831ce79
0x36: V20 = EQ 0x7831ce79 V12
0x37: V21 = 0xbd
0x3a: JUMPI 0xbd V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1ad]
---
0x3b DUP1
0x3c PUSH4 0x8afc141c
0x41 EQ
0x42 PUSH2 0x1ad
0x45 JUMPI
---
0x3c: V22 = 0x8afc141c
0x41: V23 = EQ 0x8afc141c V12
0x42: V24 = 0x1ad
0x45: JUMPI 0x1ad V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1d1]
---
0x46 DUP1
0x47 PUSH4 0x9a588c06
0x4c EQ
0x4d PUSH2 0x1d1
0x50 JUMPI
---
0x47: V25 = 0x9a588c06
0x4c: V26 = EQ 0x9a588c06 V12
0x4d: V27 = 0x1d1
0x50: JUMPI 0x1d1 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1f5]
---
0x51 DUP1
0x52 PUSH4 0xace30bea
0x57 EQ
0x58 PUSH2 0x1f5
0x5b JUMPI
---
0x52: V28 = 0xace30bea
0x57: V29 = EQ 0xace30bea V12
0x58: V30 = 0x1f5
0x5b: JUMPI 0x1f5 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x21f]
---
0x5c DUP1
0x5d PUSH4 0xb5a4b539
0x62 EQ
0x63 PUSH2 0x21f
0x66 JUMPI
---
0x5d: V31 = 0xb5a4b539
0x62: V32 = EQ 0xb5a4b539 V12
0x63: V33 = 0x21f
0x66: JUMPI 0x21f V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x275]
---
0x67 DUP1
0x68 PUSH4 0xda03d507
0x6d EQ
0x6e PUSH2 0x275
0x71 JUMPI
---
0x68: V34 = 0xda03d507
0x6d: V35 = EQ 0xda03d507 V12
0x6e: V36 = 0x275
0x71: JUMPI 0x275 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x29f]
---
0x72 DUP1
0x73 PUSH4 0xf851a440
0x78 EQ
0x79 PUSH2 0x29f
0x7c JUMPI
---
0x73: V37 = 0xf851a440
0x78: V38 = EQ 0xf851a440 V12
0x79: V39 = 0x29f
0x7c: JUMPI 0x29f V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x0, 0x72, 0x382, 0x3e7, 0x82c, 0x8bf, 0x955, 0xa92, 0xbea, 0xcad]
Successors: [0x7e]
---
0x7d JUMPDEST
---
0x7d: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e
[0x7e:0x7e]
---
Predecessors: [0x7d]
Successors: [0x7f]
---
0x7e JUMPDEST
---
0x7e: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x7e]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81
[0x81:0x87]
---
Predecessors: [0xb]
Successors: [0x88, 0x8c]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 ISZERO
0x84 PUSH2 0x8c
0x87 JUMPI
---
0x81: JUMPDEST 
0x82: V40 = CALLVALUE
0x83: V41 = ISZERO V40
0x84: V42 = 0x8c
0x87: JUMPI 0x8c V41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x81]
Successors: []
---
0x88 PUSH1 0x0
0x8a DUP1
0x8b REVERT
---
0x88: V43 = 0x0
0x8b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0xa2]
---
Predecessors: [0x81]
Successors: [0x2ce]
---
0x8c JUMPDEST
0x8d PUSH2 0x7d
0x90 PUSH1 0x1
0x92 PUSH1 0xa0
0x94 PUSH1 0x2
0x96 EXP
0x97 SUB
0x98 PUSH1 0x4
0x9a CALLDATALOAD
0x9b AND
0x9c PUSH1 0x24
0x9e CALLDATALOAD
0x9f PUSH2 0x2ce
0xa2 JUMP
---
0x8c: JUMPDEST 
0x8d: V44 = 0x7d
0x90: V45 = 0x1
0x92: V46 = 0xa0
0x94: V47 = 0x2
0x96: V48 = EXP 0x2 0xa0
0x97: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98: V50 = 0x4
0x9a: V51 = CALLDATALOAD 0x4
0x9b: V52 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V53 = 0x24
0x9e: V54 = CALLDATALOAD 0x24
0x9f: V55 = 0x2ce
0xa2: JUMP 0x2ce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V52, V54]
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: []
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa5
[0xa5:0xab]
---
Predecessors: [0x25]
Successors: [0xac, 0xb0]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa5: JUMPDEST 
0xa6: V56 = CALLVALUE
0xa7: V57 = ISZERO V56
0xa8: V58 = 0xb0
0xab: JUMPI 0xb0 V57
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa5]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V59 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb0
[0xb0:0xba]
---
Predecessors: [0xa5]
Successors: [0x386]
---
0xb0 JUMPDEST
0xb1 PUSH2 0x7d
0xb4 PUSH1 0x4
0xb6 CALLDATALOAD
0xb7 PUSH2 0x386
0xba JUMP
---
0xb0: JUMPDEST 
0xb1: V60 = 0x7d
0xb4: V61 = 0x4
0xb6: V62 = CALLDATALOAD 0x4
0xb7: V63 = 0x386
0xba: JUMP 0x386
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V62]
Exit stack: [V12, 0x7d, V62]

================================

Block 0xbb
[0xbb:0xbc]
---
Predecessors: []
Successors: []
---
0xbb JUMPDEST
0xbc STOP
---
0xbb: JUMPDEST 
0xbc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbd
[0xbd:0xc3]
---
Predecessors: [0x30]
Successors: [0xc4, 0xc8]
---
0xbd JUMPDEST
0xbe CALLVALUE
0xbf ISZERO
0xc0 PUSH2 0xc8
0xc3 JUMPI
---
0xbd: JUMPDEST 
0xbe: V64 = CALLVALUE
0xbf: V65 = ISZERO V64
0xc0: V66 = 0xc8
0xc3: JUMPI 0xc8 V65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc4
[0xc4:0xc7]
---
Predecessors: [0xbd]
Successors: []
---
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 REVERT
---
0xc4: V67 = 0x0
0xc7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc8
[0xc8:0x1aa]
---
Predecessors: [0xbd]
Successors: [0x3ea]
---
0xc8 JUMPDEST
0xc9 PUSH2 0x7d
0xcc PUSH1 0x4
0xce DUP1
0xcf CALLDATALOAD
0xd0 PUSH1 0x1
0xd2 PUSH1 0xa0
0xd4 PUSH1 0x2
0xd6 EXP
0xd7 SUB
0xd8 AND
0xd9 SWAP1
0xda PUSH1 0x24
0xdc DUP1
0xdd CALLDATALOAD
0xde PUSH1 0xff
0xe0 SWAP1
0xe1 DUP2
0xe2 AND
0xe3 SWAP3
0xe4 PUSH1 0x44
0xe6 CALLDATALOAD
0xe7 SWAP1
0xe8 SWAP2
0xe9 AND
0xea SWAP2
0xeb PUSH1 0x84
0xed SWAP1
0xee PUSH1 0x64
0xf0 CALLDATALOAD
0xf1 SWAP1
0xf2 DUP2
0xf3 ADD
0xf4 SWAP1
0xf5 DUP4
0xf6 ADD
0xf7 CALLDATALOAD
0xf8 DUP1
0xf9 PUSH1 0x20
0xfb DUP1
0xfc DUP3
0xfd MUL
0xfe ADD
0xff PUSH1 0x40
0x101 MLOAD
0x102 SWAP1
0x103 DUP2
0x104 ADD
0x105 PUSH1 0x40
0x107 MSTORE
0x108 DUP1
0x109 SWAP4
0x10a SWAP3
0x10b SWAP2
0x10c SWAP1
0x10d DUP2
0x10e DUP2
0x10f MSTORE
0x110 PUSH1 0x20
0x112 ADD
0x113 DUP4
0x114 DUP4
0x115 PUSH1 0x20
0x117 MUL
0x118 DUP1
0x119 DUP3
0x11a DUP5
0x11b CALLDATACOPY
0x11c DUP3
0x11d ADD
0x11e SWAP2
0x11f POP
0x120 POP
0x121 POP
0x122 POP
0x123 POP
0x124 POP
0x125 SWAP2
0x126 SWAP1
0x127 DUP1
0x128 CALLDATALOAD
0x129 SWAP1
0x12a PUSH1 0x20
0x12c ADD
0x12d SWAP1
0x12e DUP3
0x12f ADD
0x130 DUP1
0x131 CALLDATALOAD
0x132 SWAP1
0x133 PUSH1 0x20
0x135 ADD
0x136 SWAP1
0x137 DUP1
0x138 DUP1
0x139 PUSH1 0x20
0x13b MUL
0x13c PUSH1 0x20
0x13e ADD
0x13f PUSH1 0x40
0x141 MLOAD
0x142 SWAP1
0x143 DUP2
0x144 ADD
0x145 PUSH1 0x40
0x147 MSTORE
0x148 DUP1
0x149 SWAP4
0x14a SWAP3
0x14b SWAP2
0x14c SWAP1
0x14d DUP2
0x14e DUP2
0x14f MSTORE
0x150 PUSH1 0x20
0x152 ADD
0x153 DUP4
0x154 DUP4
0x155 PUSH1 0x20
0x157 MUL
0x158 DUP1
0x159 DUP3
0x15a DUP5
0x15b CALLDATACOPY
0x15c DUP3
0x15d ADD
0x15e SWAP2
0x15f POP
0x160 POP
0x161 POP
0x162 POP
0x163 POP
0x164 POP
0x165 SWAP2
0x166 SWAP1
0x167 DUP1
0x168 CALLDATALOAD
0x169 SWAP1
0x16a PUSH1 0x20
0x16c ADD
0x16d SWAP1
0x16e DUP3
0x16f ADD
0x170 DUP1
0x171 CALLDATALOAD
0x172 SWAP1
0x173 PUSH1 0x20
0x175 ADD
0x176 SWAP1
0x177 DUP1
0x178 DUP1
0x179 PUSH1 0x20
0x17b MUL
0x17c PUSH1 0x20
0x17e ADD
0x17f PUSH1 0x40
0x181 MLOAD
0x182 SWAP1
0x183 DUP2
0x184 ADD
0x185 PUSH1 0x40
0x187 MSTORE
0x188 DUP1
0x189 SWAP4
0x18a SWAP3
0x18b SWAP2
0x18c SWAP1
0x18d DUP2
0x18e DUP2
0x18f MSTORE
0x190 PUSH1 0x20
0x192 ADD
0x193 DUP4
0x194 DUP4
0x195 PUSH1 0x20
0x197 MUL
0x198 DUP1
0x199 DUP3
0x19a DUP5
0x19b CALLDATACOPY
0x19c POP
0x19d SWAP5
0x19e SWAP7
0x19f POP
0x1a0 PUSH2 0x3ea
0x1a3 SWAP6
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 POP
0x1a8 POP
0x1a9 POP
0x1aa JUMP
---
0xc8: JUMPDEST 
0xc9: V68 = 0x7d
0xcc: V69 = 0x4
0xcf: V70 = CALLDATALOAD 0x4
0xd0: V71 = 0x1
0xd2: V72 = 0xa0
0xd4: V73 = 0x2
0xd6: V74 = EXP 0x2 0xa0
0xd7: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0xda: V77 = 0x24
0xdd: V78 = CALLDATALOAD 0x24
0xde: V79 = 0xff
0xe2: V80 = AND 0xff V78
0xe4: V81 = 0x44
0xe6: V82 = CALLDATALOAD 0x44
0xe9: V83 = AND 0xff V82
0xeb: V84 = 0x84
0xee: V85 = 0x64
0xf0: V86 = CALLDATALOAD 0x64
0xf3: V87 = ADD V86 0x24
0xf6: V88 = ADD 0x4 V86
0xf7: V89 = CALLDATALOAD V88
0xf9: V90 = 0x20
0xfd: V91 = MUL V89 0x20
0xfe: V92 = ADD V91 0x20
0xff: V93 = 0x40
0x101: V94 = M[0x40]
0x104: V95 = ADD V94 V92
0x105: V96 = 0x40
0x107: M[0x40] = V95
0x10f: M[V94] = V89
0x110: V97 = 0x20
0x112: V98 = ADD 0x20 V94
0x115: V99 = 0x20
0x117: V100 = MUL 0x20 V89
0x11b: CALLDATACOPY V98 V87 V100
0x11d: V101 = ADD V98 V100
0x128: V102 = CALLDATALOAD 0x84
0x12a: V103 = 0x20
0x12c: V104 = ADD 0x20 0x84
0x12f: V105 = ADD 0x4 V102
0x131: V106 = CALLDATALOAD V105
0x133: V107 = 0x20
0x135: V108 = ADD 0x20 V105
0x139: V109 = 0x20
0x13b: V110 = MUL 0x20 V106
0x13c: V111 = 0x20
0x13e: V112 = ADD 0x20 V110
0x13f: V113 = 0x40
0x141: V114 = M[0x40]
0x144: V115 = ADD V114 V112
0x145: V116 = 0x40
0x147: M[0x40] = V115
0x14f: M[V114] = V106
0x150: V117 = 0x20
0x152: V118 = ADD 0x20 V114
0x155: V119 = 0x20
0x157: V120 = MUL 0x20 V106
0x15b: CALLDATACOPY V118 V108 V120
0x15d: V121 = ADD V118 V120
0x168: V122 = CALLDATALOAD 0xa4
0x16a: V123 = 0x20
0x16c: V124 = ADD 0x20 0xa4
0x16f: V125 = ADD 0x4 V122
0x171: V126 = CALLDATALOAD V125
0x173: V127 = 0x20
0x175: V128 = ADD 0x20 V125
0x179: V129 = 0x20
0x17b: V130 = MUL 0x20 V126
0x17c: V131 = 0x20
0x17e: V132 = ADD 0x20 V130
0x17f: V133 = 0x40
0x181: V134 = M[0x40]
0x184: V135 = ADD V134 V132
0x185: V136 = 0x40
0x187: M[0x40] = V135
0x18f: M[V134] = V126
0x190: V137 = 0x20
0x192: V138 = ADD 0x20 V134
0x195: V139 = 0x20
0x197: V140 = MUL 0x20 V126
0x19b: CALLDATACOPY V138 V128 V140
0x1a0: V141 = 0x3ea
0x1aa: JUMP 0x3ea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V76, V80, V83, V94, V114, V134]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x1ab
[0x1ab:0x1ac]
---
Predecessors: []
Successors: []
---
0x1ab JUMPDEST
0x1ac STOP
---
0x1ab: JUMPDEST 
0x1ac: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ad
[0x1ad:0x1b3]
---
Predecessors: [0x3b]
Successors: [0x1b4, 0x1b8]
---
0x1ad JUMPDEST
0x1ae CALLVALUE
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V142 = CALLVALUE
0x1af: V143 = ISZERO V142
0x1b0: V144 = 0x1b8
0x1b3: JUMPI 0x1b8 V143
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x1ad]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V145 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b8
[0x1b8:0x1ce]
---
Predecessors: [0x1ad]
Successors: [0x834]
---
0x1b8 JUMPDEST
0x1b9 PUSH2 0x7d
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 PUSH1 0x4
0x1c6 CALLDATALOAD
0x1c7 AND
0x1c8 PUSH1 0x24
0x1ca CALLDATALOAD
0x1cb PUSH2 0x834
0x1ce JUMP
---
0x1b8: JUMPDEST 
0x1b9: V146 = 0x7d
0x1bc: V147 = 0x1
0x1be: V148 = 0xa0
0x1c0: V149 = 0x2
0x1c2: V150 = EXP 0x2 0xa0
0x1c3: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c4: V152 = 0x4
0x1c6: V153 = CALLDATALOAD 0x4
0x1c7: V154 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: V155 = 0x24
0x1ca: V156 = CALLDATALOAD 0x24
0x1cb: V157 = 0x834
0x1ce: JUMP 0x834
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V154, V156]
Exit stack: [V12, 0x7d, V154, V156]

================================

Block 0x1cf
[0x1cf:0x1d0]
---
Predecessors: []
Successors: []
---
0x1cf JUMPDEST
0x1d0 STOP
---
0x1cf: JUMPDEST 
0x1d0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d1
[0x1d1:0x1d7]
---
Predecessors: [0x46]
Successors: [0x1d8, 0x1dc]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V158 = CALLVALUE
0x1d3: V159 = ISZERO V158
0x1d4: V160 = 0x1dc
0x1d7: JUMPI 0x1dc V159
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V161 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dc
[0x1dc:0x1f2]
---
Predecessors: [0x1d1]
Successors: [0x8c3]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x7d
0x1e0 PUSH1 0x1
0x1e2 PUSH1 0xa0
0x1e4 PUSH1 0x2
0x1e6 EXP
0x1e7 SUB
0x1e8 PUSH1 0x4
0x1ea CALLDATALOAD
0x1eb AND
0x1ec PUSH1 0x24
0x1ee CALLDATALOAD
0x1ef PUSH2 0x8c3
0x1f2 JUMP
---
0x1dc: JUMPDEST 
0x1dd: V162 = 0x7d
0x1e0: V163 = 0x1
0x1e2: V164 = 0xa0
0x1e4: V165 = 0x2
0x1e6: V166 = EXP 0x2 0xa0
0x1e7: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e8: V168 = 0x4
0x1ea: V169 = CALLDATALOAD 0x4
0x1eb: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V171 = 0x24
0x1ee: V172 = CALLDATALOAD 0x24
0x1ef: V173 = 0x8c3
0x1f2: JUMP 0x8c3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V170, V172]
Exit stack: [V12, 0x7d, V170, V172]

================================

Block 0x1f3
[0x1f3:0x1f4]
---
Predecessors: []
Successors: []
---
0x1f3 JUMPDEST
0x1f4 STOP
---
0x1f3: JUMPDEST 
0x1f4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f5
[0x1f5:0x1fb]
---
Predecessors: [0x51]
Successors: [0x1fc, 0x200]
---
0x1f5 JUMPDEST
0x1f6 CALLVALUE
0x1f7 ISZERO
0x1f8 PUSH2 0x200
0x1fb JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V174 = CALLVALUE
0x1f7: V175 = ISZERO V174
0x1f8: V176 = 0x200
0x1fb: JUMPI 0x200 V175
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fc
[0x1fc:0x1ff]
---
Predecessors: [0x1f5]
Successors: []
---
0x1fc PUSH1 0x0
0x1fe DUP1
0x1ff REVERT
---
0x1fc: V177 = 0x0
0x1ff: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x200
[0x200:0x21c]
---
Predecessors: [0x1f5]
Successors: [0x959]
---
0x200 JUMPDEST
0x201 PUSH2 0x7d
0x204 PUSH1 0x1
0x206 PUSH1 0xa0
0x208 PUSH1 0x2
0x20a EXP
0x20b SUB
0x20c PUSH1 0x4
0x20e CALLDATALOAD
0x20f DUP2
0x210 AND
0x211 SWAP1
0x212 PUSH1 0x24
0x214 CALLDATALOAD
0x215 AND
0x216 PUSH1 0x44
0x218 CALLDATALOAD
0x219 PUSH2 0x959
0x21c JUMP
---
0x200: JUMPDEST 
0x201: V178 = 0x7d
0x204: V179 = 0x1
0x206: V180 = 0xa0
0x208: V181 = 0x2
0x20a: V182 = EXP 0x2 0xa0
0x20b: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20c: V184 = 0x4
0x20e: V185 = CALLDATALOAD 0x4
0x210: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x212: V187 = 0x24
0x214: V188 = CALLDATALOAD 0x24
0x215: V189 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x216: V190 = 0x44
0x218: V191 = CALLDATALOAD 0x44
0x219: V192 = 0x959
0x21c: JUMP 0x959
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V186, V189, V191]
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0x21d
[0x21d:0x21e]
---
Predecessors: []
Successors: []
---
0x21d JUMPDEST
0x21e STOP
---
0x21d: JUMPDEST 
0x21e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21f
[0x21f:0x225]
---
Predecessors: [0x5c]
Successors: [0x226, 0x22a]
---
0x21f JUMPDEST
0x220 CALLVALUE
0x221 ISZERO
0x222 PUSH2 0x22a
0x225 JUMPI
---
0x21f: JUMPDEST 
0x220: V193 = CALLVALUE
0x221: V194 = ISZERO V193
0x222: V195 = 0x22a
0x225: JUMPI 0x22a V194
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x21f]
Successors: []
---
0x226 PUSH1 0x0
0x228 DUP1
0x229 REVERT
---
0x226: V196 = 0x0
0x229: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22a
[0x22a:0x272]
---
Predecessors: [0x21f]
Successors: [0xa97]
---
0x22a JUMPDEST
0x22b PUSH2 0x7d
0x22e PUSH1 0x1
0x230 PUSH1 0xa0
0x232 PUSH1 0x2
0x234 EXP
0x235 SUB
0x236 PUSH1 0x4
0x238 CALLDATALOAD
0x239 DUP2
0x23a AND
0x23b SWAP1
0x23c PUSH1 0x24
0x23e CALLDATALOAD
0x23f DUP2
0x240 AND
0x241 SWAP1
0x242 PUSH1 0x44
0x244 CALLDATALOAD
0x245 SWAP1
0x246 PUSH1 0x64
0x248 CALLDATALOAD
0x249 DUP2
0x24a AND
0x24b SWAP1
0x24c PUSH1 0x84
0x24e CALLDATALOAD
0x24f SWAP1
0x250 PUSH1 0xa4
0x252 CALLDATALOAD
0x253 SWAP1
0x254 PUSH1 0xc4
0x256 CALLDATALOAD
0x257 SWAP1
0x258 PUSH1 0xe4
0x25a CALLDATALOAD
0x25b AND
0x25c PUSH1 0xff
0x25e PUSH2 0x104
0x261 CALLDATALOAD
0x262 AND
0x263 PUSH2 0x124
0x266 CALLDATALOAD
0x267 PUSH2 0x144
0x26a CALLDATALOAD
0x26b PUSH2 0x164
0x26e CALLDATALOAD
0x26f PUSH2 0xa97
0x272 JUMP
---
0x22a: JUMPDEST 
0x22b: V197 = 0x7d
0x22e: V198 = 0x1
0x230: V199 = 0xa0
0x232: V200 = 0x2
0x234: V201 = EXP 0x2 0xa0
0x235: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V203 = 0x4
0x238: V204 = CALLDATALOAD 0x4
0x23a: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x23c: V206 = 0x24
0x23e: V207 = CALLDATALOAD 0x24
0x240: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x242: V209 = 0x44
0x244: V210 = CALLDATALOAD 0x44
0x246: V211 = 0x64
0x248: V212 = CALLDATALOAD 0x64
0x24a: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x24c: V214 = 0x84
0x24e: V215 = CALLDATALOAD 0x84
0x250: V216 = 0xa4
0x252: V217 = CALLDATALOAD 0xa4
0x254: V218 = 0xc4
0x256: V219 = CALLDATALOAD 0xc4
0x258: V220 = 0xe4
0x25a: V221 = CALLDATALOAD 0xe4
0x25b: V222 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V223 = 0xff
0x25e: V224 = 0x104
0x261: V225 = CALLDATALOAD 0x104
0x262: V226 = AND V225 0xff
0x263: V227 = 0x124
0x266: V228 = CALLDATALOAD 0x124
0x267: V229 = 0x144
0x26a: V230 = CALLDATALOAD 0x144
0x26b: V231 = 0x164
0x26e: V232 = CALLDATALOAD 0x164
0x26f: V233 = 0xa97
0x272: JUMP 0xa97
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0x273
[0x273:0x274]
---
Predecessors: []
Successors: []
---
0x273 JUMPDEST
0x274 STOP
---
0x273: JUMPDEST 
0x274: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x275
[0x275:0x27b]
---
Predecessors: [0x67]
Successors: [0x27c, 0x280]
---
0x275 JUMPDEST
0x276 CALLVALUE
0x277 ISZERO
0x278 PUSH2 0x280
0x27b JUMPI
---
0x275: JUMPDEST 
0x276: V234 = CALLVALUE
0x277: V235 = ISZERO V234
0x278: V236 = 0x280
0x27b: JUMPI 0x280 V235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27c
[0x27c:0x27f]
---
Predecessors: [0x275]
Successors: []
---
0x27c PUSH1 0x0
0x27e DUP1
0x27f REVERT
---
0x27c: V237 = 0x0
0x27f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x280
[0x280:0x29c]
---
Predecessors: [0x275]
Successors: [0xbf8]
---
0x280 JUMPDEST
0x281 PUSH2 0x7d
0x284 PUSH1 0x1
0x286 PUSH1 0xa0
0x288 PUSH1 0x2
0x28a EXP
0x28b SUB
0x28c PUSH1 0x4
0x28e CALLDATALOAD
0x28f DUP2
0x290 AND
0x291 SWAP1
0x292 PUSH1 0x24
0x294 CALLDATALOAD
0x295 AND
0x296 PUSH1 0x44
0x298 CALLDATALOAD
0x299 PUSH2 0xbf8
0x29c JUMP
---
0x280: JUMPDEST 
0x281: V238 = 0x7d
0x284: V239 = 0x1
0x286: V240 = 0xa0
0x288: V241 = 0x2
0x28a: V242 = EXP 0x2 0xa0
0x28b: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28c: V244 = 0x4
0x28e: V245 = CALLDATALOAD 0x4
0x290: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x292: V247 = 0x24
0x294: V248 = CALLDATALOAD 0x24
0x295: V249 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x296: V250 = 0x44
0x298: V251 = CALLDATALOAD 0x44
0x299: V252 = 0xbf8
0x29c: JUMP 0xbf8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V246, V249, V251]
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0x29d
[0x29d:0x29e]
---
Predecessors: []
Successors: []
---
0x29d JUMPDEST
0x29e STOP
---
0x29d: JUMPDEST 
0x29e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29f
[0x29f:0x2a5]
---
Predecessors: [0x72]
Successors: [0x2a6, 0x2aa]
---
0x29f JUMPDEST
0x2a0 CALLVALUE
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V253 = CALLVALUE
0x2a1: V254 = ISZERO V253
0x2a2: V255 = 0x2aa
0x2a5: JUMPI 0x2aa V254
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x29f]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V256 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2aa
[0x2aa:0x2b1]
---
Predecessors: [0x29f]
Successors: [0xcb2]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x2b2
0x2ae PUSH2 0xcb2
0x2b1 JUMP
---
0x2aa: JUMPDEST 
0x2ab: V257 = 0x2b2
0x2ae: V258 = 0xcb2
0x2b1: JUMP 0xcb2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b2]
Exit stack: [V12, 0x2b2]

================================

Block 0x2b2
[0x2b2:0x2cd]
---
Predecessors: [0xcb2]
Successors: []
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 PUSH1 0x1
0x2b8 PUSH1 0xa0
0x2ba PUSH1 0x2
0x2bc EXP
0x2bd SUB
0x2be SWAP1
0x2bf SWAP2
0x2c0 AND
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 DUP1
0x2ca SWAP2
0x2cb SUB
0x2cc SWAP1
0x2cd RETURN
---
0x2b2: JUMPDEST 
0x2b3: V259 = 0x40
0x2b5: V260 = M[0x40]
0x2b6: V261 = 0x1
0x2b8: V262 = 0xa0
0x2ba: V263 = 0x2
0x2bc: V264 = EXP 0x2 0xa0
0x2bd: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c0: V266 = AND V1171 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: M[V260] = V266
0x2c3: V267 = 0x20
0x2c5: V268 = ADD 0x20 V260
0x2c6: V269 = 0x40
0x2c8: V270 = M[0x40]
0x2cb: V271 = SUB V268 V270
0x2cd: RETURN V270 V271
---
Entry stack: [V12, 0x2b2, V1171]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2b2]

================================

Block 0x2ce
[0x2ce:0x2e4]
---
Predecessors: [0x8c]
Successors: [0x2e5, 0x2e9]
---
0x2ce JUMPDEST
0x2cf PUSH1 0x0
0x2d1 SLOAD
0x2d2 CALLER
0x2d3 PUSH1 0x1
0x2d5 PUSH1 0xa0
0x2d7 PUSH1 0x2
0x2d9 EXP
0x2da SUB
0x2db SWAP1
0x2dc DUP2
0x2dd AND
0x2de SWAP2
0x2df AND
0x2e0 EQ
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2ce: JUMPDEST 
0x2cf: V272 = 0x0
0x2d1: V273 = S[0x0]
0x2d2: V274 = CALLER
0x2d3: V275 = 0x1
0x2d5: V276 = 0xa0
0x2d7: V277 = 0x2
0x2d9: V278 = EXP 0x2 0xa0
0x2da: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dd: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x2df: V281 = AND V273 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: V282 = EQ V281 V280
0x2e1: V283 = 0x2e9
0x2e4: JUMPI 0x2e9 V282
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2ce]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V284 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x2e9
[0x2e9:0x2f9]
---
Predecessors: [0x2ce]
Successors: [0x2fa, 0x2fe]
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x1
0x2ec PUSH1 0xa0
0x2ee PUSH1 0x2
0x2f0 EXP
0x2f1 SUB
0x2f2 DUP3
0x2f3 AND
0x2f4 ISZERO
0x2f5 ISZERO
0x2f6 PUSH2 0x2fe
0x2f9 JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V285 = 0x1
0x2ec: V286 = 0xa0
0x2ee: V287 = 0x2
0x2f0: V288 = EXP 0x2 0xa0
0x2f1: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f3: V290 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V291 = ISZERO V290
0x2f5: V292 = ISZERO V291
0x2f6: V293 = 0x2fe
0x2f9: JUMPI 0x2fe V292
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x2fa
[0x2fa:0x2fd]
---
Predecessors: [0x2e9]
Successors: []
---
0x2fa PUSH1 0x0
0x2fc DUP1
0x2fd REVERT
---
0x2fa: V294 = 0x0
0x2fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x2fe
[0x2fe:0x356]
---
Predecessors: [0x2e9]
Successors: [0x357, 0x35b]
---
0x2fe JUMPDEST
0x2ff DUP2
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 AND
0x309 PUSH4 0xa9059cbb
0x30e CALLER
0x30f DUP4
0x310 PUSH1 0x0
0x312 PUSH1 0x40
0x314 MLOAD
0x315 PUSH1 0x20
0x317 ADD
0x318 MSTORE
0x319 PUSH1 0x40
0x31b MLOAD
0x31c PUSH1 0xe0
0x31e PUSH1 0x2
0x320 EXP
0x321 PUSH4 0xffffffff
0x326 DUP6
0x327 AND
0x328 MUL
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x1
0x32d PUSH1 0xa0
0x32f PUSH1 0x2
0x331 EXP
0x332 SUB
0x333 SWAP1
0x334 SWAP3
0x335 AND
0x336 PUSH1 0x4
0x338 DUP4
0x339 ADD
0x33a MSTORE
0x33b PUSH1 0x24
0x33d DUP3
0x33e ADD
0x33f MSTORE
0x340 PUSH1 0x44
0x342 ADD
0x343 PUSH1 0x20
0x345 PUSH1 0x40
0x347 MLOAD
0x348 DUP1
0x349 DUP4
0x34a SUB
0x34b DUP2
0x34c PUSH1 0x0
0x34e DUP8
0x34f DUP1
0x350 EXTCODESIZE
0x351 ISZERO
0x352 ISZERO
0x353 PUSH2 0x35b
0x356 JUMPI
---
0x2fe: JUMPDEST 
0x300: V295 = 0x1
0x302: V296 = 0xa0
0x304: V297 = 0x2
0x306: V298 = EXP 0x2 0xa0
0x307: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x309: V301 = 0xa9059cbb
0x30e: V302 = CALLER
0x310: V303 = 0x0
0x312: V304 = 0x40
0x314: V305 = M[0x40]
0x315: V306 = 0x20
0x317: V307 = ADD 0x20 V305
0x318: M[V307] = 0x0
0x319: V308 = 0x40
0x31b: V309 = M[0x40]
0x31c: V310 = 0xe0
0x31e: V311 = 0x2
0x320: V312 = EXP 0x2 0xe0
0x321: V313 = 0xffffffff
0x327: V314 = AND 0xa9059cbb 0xffffffff
0x328: V315 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x32a: M[V309] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x32b: V316 = 0x1
0x32d: V317 = 0xa0
0x32f: V318 = 0x2
0x331: V319 = EXP 0x2 0xa0
0x332: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x335: V321 = AND V302 0xffffffffffffffffffffffffffffffffffffffff
0x336: V322 = 0x4
0x339: V323 = ADD V309 0x4
0x33a: M[V323] = V321
0x33b: V324 = 0x24
0x33e: V325 = ADD V309 0x24
0x33f: M[V325] = V54
0x340: V326 = 0x44
0x342: V327 = ADD 0x44 V309
0x343: V328 = 0x20
0x345: V329 = 0x40
0x347: V330 = M[0x40]
0x34a: V331 = SUB V327 V330
0x34c: V332 = 0x0
0x350: V333 = EXTCODESIZE V300
0x351: V334 = ISZERO V333
0x352: V335 = ISZERO V334
0x353: V336 = 0x35b
0x356: JUMPI 0x35b V335
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 2
Stack additions: [S1, S0, V300, 0xa9059cbb, V327, 0x20, V330, V331, V330, 0x0, V300]
Exit stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327, 0x20, V330, V331, V330, 0x0, V300]

================================

Block 0x357
[0x357:0x35a]
---
Predecessors: [0x2fe]
Successors: []
---
0x357 PUSH1 0x0
0x359 DUP1
0x35a REVERT
---
0x357: V337 = 0x0
0x35a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327, 0x20, V330, V331, V330, 0x0, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327, 0x20, V330, V331, V330, 0x0, V300]

================================

Block 0x35b
[0x35b:0x367]
---
Predecessors: [0x2fe]
Successors: [0x368, 0x36c]
---
0x35b JUMPDEST
0x35c PUSH2 0x2c6
0x35f GAS
0x360 SUB
0x361 CALL
0x362 ISZERO
0x363 ISZERO
0x364 PUSH2 0x36c
0x367 JUMPI
---
0x35b: JUMPDEST 
0x35c: V338 = 0x2c6
0x35f: V339 = GAS
0x360: V340 = SUB V339 0x2c6
0x361: V341 = CALL V340 V300 0x0 V330 V331 V330 0x20
0x362: V342 = ISZERO V341
0x363: V343 = ISZERO V342
0x364: V344 = 0x36c
0x367: JUMPI 0x36c V343
---
Entry stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327, 0x20, V330, V331, V330, 0x0, V300]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327]

================================

Block 0x368
[0x368:0x36b]
---
Predecessors: [0x35b]
Successors: []
---
0x368 PUSH1 0x0
0x36a DUP1
0x36b REVERT
---
0x368: V345 = 0x0
0x36b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327]

================================

Block 0x36c
[0x36c:0x37c]
---
Predecessors: [0x35b]
Successors: [0x37d, 0x381]
---
0x36c JUMPDEST
0x36d POP
0x36e POP
0x36f POP
0x370 PUSH1 0x40
0x372 MLOAD
0x373 DUP1
0x374 MLOAD
0x375 SWAP1
0x376 POP
0x377 ISZERO
0x378 ISZERO
0x379 PUSH2 0x381
0x37c JUMPI
---
0x36c: JUMPDEST 
0x370: V346 = 0x40
0x372: V347 = M[0x40]
0x374: V348 = M[V347]
0x377: V349 = ISZERO V348
0x378: V350 = ISZERO V349
0x379: V351 = 0x381
0x37c: JUMPI 0x381 V350
---
Entry stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x37d
[0x37d:0x380]
---
Predecessors: [0x36c]
Successors: []
---
0x37d PUSH1 0x0
0x37f DUP1
0x380 REVERT
---
0x37d: V352 = 0x0
0x380: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x381
[0x381:0x381]
---
Predecessors: [0x36c]
Successors: [0x382]
---
0x381 JUMPDEST
---
0x381: JUMPDEST 
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x382
[0x382:0x385]
---
Predecessors: [0x381]
Successors: [0x7d]
---
0x382 JUMPDEST
0x383 POP
0x384 POP
0x385 JUMP
---
0x382: JUMPDEST 
0x385: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x386
[0x386:0x39c]
---
Predecessors: [0xb0]
Successors: [0x39d, 0x3a1]
---
0x386 JUMPDEST
0x387 PUSH1 0x0
0x389 SLOAD
0x38a CALLER
0x38b PUSH1 0x1
0x38d PUSH1 0xa0
0x38f PUSH1 0x2
0x391 EXP
0x392 SUB
0x393 SWAP1
0x394 DUP2
0x395 AND
0x396 SWAP2
0x397 AND
0x398 EQ
0x399 PUSH2 0x3a1
0x39c JUMPI
---
0x386: JUMPDEST 
0x387: V353 = 0x0
0x389: V354 = S[0x0]
0x38a: V355 = CALLER
0x38b: V356 = 0x1
0x38d: V357 = 0xa0
0x38f: V358 = 0x2
0x391: V359 = EXP 0x2 0xa0
0x392: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x395: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x397: V362 = AND V354 0xffffffffffffffffffffffffffffffffffffffff
0x398: V363 = EQ V362 V361
0x399: V364 = 0x3a1
0x39c: JUMPI 0x3a1 V363
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V62]

================================

Block 0x39d
[0x39d:0x3a0]
---
Predecessors: [0x386]
Successors: []
---
0x39d PUSH1 0x0
0x39f DUP1
0x3a0 REVERT
---
0x39d: V365 = 0x0
0x3a0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3a1
[0x3a1:0x3b3]
---
Predecessors: [0x386]
Successors: [0x3b4, 0x3b8]
---
0x3a1 JUMPDEST
0x3a2 DUP1
0x3a3 ADDRESS
0x3a4 PUSH1 0x1
0x3a6 PUSH1 0xa0
0x3a8 PUSH1 0x2
0x3aa EXP
0x3ab SUB
0x3ac AND
0x3ad BALANCE
0x3ae LT
0x3af ISZERO
0x3b0 PUSH2 0x3b8
0x3b3 JUMPI
---
0x3a1: JUMPDEST 
0x3a3: V366 = ADDRESS
0x3a4: V367 = 0x1
0x3a6: V368 = 0xa0
0x3a8: V369 = 0x2
0x3aa: V370 = EXP 0x2 0xa0
0x3ab: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ac: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x3ad: V373 = BALANCE V372
0x3ae: V374 = LT V373 V62
0x3af: V375 = ISZERO V374
0x3b0: V376 = 0x3b8
0x3b3: JUMPI 0x3b8 V375
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3b4
[0x3b4:0x3b7]
---
Predecessors: [0x3a1]
Successors: []
---
0x3b4 PUSH1 0x0
0x3b6 DUP1
0x3b7 REVERT
---
0x3b4: V377 = 0x0
0x3b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3b8
[0x3b8:0x3e1]
---
Predecessors: [0x3a1]
Successors: [0x3e2, 0x3e6]
---
0x3b8 JUMPDEST
0x3b9 CALLER
0x3ba PUSH1 0x1
0x3bc PUSH1 0xa0
0x3be PUSH1 0x2
0x3c0 EXP
0x3c1 SUB
0x3c2 AND
0x3c3 DUP2
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 PUSH1 0x0
0x3c9 PUSH1 0x40
0x3cb MLOAD
0x3cc DUP1
0x3cd DUP4
0x3ce SUB
0x3cf DUP2
0x3d0 DUP6
0x3d1 DUP8
0x3d2 PUSH2 0x8796
0x3d5 GAS
0x3d6 SUB
0x3d7 CALL
0x3d8 SWAP3
0x3d9 POP
0x3da POP
0x3db POP
0x3dc ISZERO
0x3dd ISZERO
0x3de PUSH2 0x3e6
0x3e1 JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V378 = CALLER
0x3ba: V379 = 0x1
0x3bc: V380 = 0xa0
0x3be: V381 = 0x2
0x3c0: V382 = EXP 0x2 0xa0
0x3c1: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c2: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x3c4: V385 = 0x40
0x3c6: V386 = M[0x40]
0x3c7: V387 = 0x0
0x3c9: V388 = 0x40
0x3cb: V389 = M[0x40]
0x3ce: V390 = SUB V386 V389
0x3d2: V391 = 0x8796
0x3d5: V392 = GAS
0x3d6: V393 = SUB V392 0x8796
0x3d7: V394 = CALL V393 V384 V62 V389 V390 V389 0x0
0x3dc: V395 = ISZERO V394
0x3dd: V396 = ISZERO V395
0x3de: V397 = 0x3e6
0x3e1: JUMPI 0x3e6 V396
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3e2
[0x3e2:0x3e5]
---
Predecessors: [0x3b8]
Successors: []
---
0x3e2 PUSH1 0x0
0x3e4 DUP1
0x3e5 REVERT
---
0x3e2: V398 = 0x0
0x3e5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3e6
[0x3e6:0x3e6]
---
Predecessors: [0x3b8]
Successors: [0x3e7]
---
0x3e6 JUMPDEST
---
0x3e6: JUMPDEST 
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3e7
[0x3e7:0x3e9]
---
Predecessors: [0x3e6]
Successors: [0x7d]
---
0x3e7 JUMPDEST
0x3e8 POP
0x3e9 JUMP
---
0x3e7: JUMPDEST 
0x3e9: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ea
[0x3ea:0x400]
---
Predecessors: [0xc8]
Successors: [0x401, 0x405]
---
0x3ea JUMPDEST
0x3eb PUSH1 0x0
0x3ed SLOAD
0x3ee CALLER
0x3ef PUSH1 0x1
0x3f1 PUSH1 0xa0
0x3f3 PUSH1 0x2
0x3f5 EXP
0x3f6 SUB
0x3f7 SWAP1
0x3f8 DUP2
0x3f9 AND
0x3fa SWAP2
0x3fb AND
0x3fc EQ
0x3fd PUSH2 0x405
0x400 JUMPI
---
0x3ea: JUMPDEST 
0x3eb: V399 = 0x0
0x3ed: V400 = S[0x0]
0x3ee: V401 = CALLER
0x3ef: V402 = 0x1
0x3f1: V403 = 0xa0
0x3f3: V404 = 0x2
0x3f5: V405 = EXP 0x2 0xa0
0x3f6: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f9: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x3fb: V408 = AND V400 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V409 = EQ V408 V407
0x3fd: V410 = 0x405
0x400: JUMPI 0x405 V409
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x401
[0x401:0x404]
---
Predecessors: [0x3ea]
Successors: []
---
0x401 PUSH1 0x0
0x403 DUP1
0x404 REVERT
---
0x401: V411 = 0x0
0x404: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x405
[0x405:0x4a3]
---
Predecessors: [0x3ea]
Successors: [0x4a4, 0x4a5]
---
0x405 JUMPDEST
0x406 DUP6
0x407 PUSH1 0x1
0x409 PUSH1 0xa0
0x40b PUSH1 0x2
0x40d EXP
0x40e SUB
0x40f AND
0x410 PUSH1 0x40
0x412 MLOAD
0x413 DUP1
0x414 DUP1
0x415 PUSH32 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x436 DUP2
0x437 MSTORE
0x438 PUSH1 0x20
0x43a ADD
0x43b PUSH32 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x45c DUP2
0x45d MSTORE
0x45e PUSH1 0x20
0x460 ADD
0x461 PUSH32 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x482 DUP2
0x483 MSTORE
0x484 POP
0x485 PUSH1 0x5c
0x487 ADD
0x488 SWAP1
0x489 POP
0x48a PUSH1 0x40
0x48c MLOAD
0x48d DUP1
0x48e SWAP2
0x48f SUB
0x490 SWAP1
0x491 SHA3
0x492 PUSH1 0xe0
0x494 PUSH1 0x2
0x496 EXP
0x497 SWAP1
0x498 DIV
0x499 DUP4
0x49a PUSH1 0x0
0x49c DUP2
0x49d MLOAD
0x49e DUP2
0x49f LT
0x4a0 PUSH2 0x4a5
0x4a3 JUMPI
---
0x405: JUMPDEST 
0x407: V412 = 0x1
0x409: V413 = 0xa0
0x40b: V414 = 0x2
0x40d: V415 = EXP 0x2 0xa0
0x40e: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40f: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x410: V418 = 0x40
0x412: V419 = M[0x40]
0x415: V420 = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x437: M[V419] = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x438: V421 = 0x20
0x43a: V422 = ADD 0x20 V419
0x43b: V423 = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x45d: M[V422] = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x45e: V424 = 0x20
0x460: V425 = ADD 0x20 V422
0x461: V426 = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x483: M[V425] = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x485: V427 = 0x5c
0x487: V428 = ADD 0x5c V419
0x48a: V429 = 0x40
0x48c: V430 = M[0x40]
0x48f: V431 = SUB V428 V430
0x491: V432 = SHA3 V430 V431
0x492: V433 = 0xe0
0x494: V434 = 0x2
0x496: V435 = EXP 0x2 0xe0
0x498: V436 = DIV V432 0x100000000000000000000000000000000000000000000000000000000
0x49a: V437 = 0x0
0x49d: V438 = M[V114]
0x49f: V439 = LT 0x0 V438
0x4a0: V440 = 0x4a5
0x4a3: JUMPI 0x4a5 V439
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V417, V436, S1, 0x0]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V114, 0x0]

================================

Block 0x4a4
[0x4a4:0x4a4]
---
Predecessors: [0x405]
Successors: []
---
0x4a4 INVALID
---
0x4a4: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V114, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V114, 0x0]

================================

Block 0x4a5
[0x4a5:0x4ba]
---
Predecessors: [0x405]
Successors: [0x4bb, 0x4bc]
---
0x4a5 JUMPDEST
0x4a6 SWAP1
0x4a7 PUSH1 0x20
0x4a9 ADD
0x4aa SWAP1
0x4ab PUSH1 0x20
0x4ad MUL
0x4ae ADD
0x4af MLOAD
0x4b0 DUP6
0x4b1 PUSH1 0x0
0x4b3 DUP2
0x4b4 MLOAD
0x4b5 DUP2
0x4b6 LT
0x4b7 PUSH2 0x4bc
0x4ba JUMPI
---
0x4a5: JUMPDEST 
0x4a7: V441 = 0x20
0x4a9: V442 = ADD 0x20 V114
0x4ab: V443 = 0x20
0x4ad: V444 = MUL 0x20 0x0
0x4ae: V445 = ADD 0x0 V442
0x4af: V446 = M[V445]
0x4b1: V447 = 0x0
0x4b4: V448 = M[V94]
0x4b6: V449 = LT 0x0 V448
0x4b7: V450 = 0x4bc
0x4ba: JUMPI 0x4bc V449
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V114, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V446, S6, 0x0]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V94, 0x0]

================================

Block 0x4bb
[0x4bb:0x4bb]
---
Predecessors: [0x4a5]
Successors: []
---
0x4bb INVALID
---
0x4bb: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V94, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V94, 0x0]

================================

Block 0x4bc
[0x4bc:0x4d1]
---
Predecessors: [0x4a5]
Successors: [0x4d2, 0x4d3]
---
0x4bc JUMPDEST
0x4bd SWAP1
0x4be PUSH1 0x20
0x4c0 ADD
0x4c1 SWAP1
0x4c2 PUSH1 0x20
0x4c4 MUL
0x4c5 ADD
0x4c6 MLOAD
0x4c7 DUP6
0x4c8 PUSH1 0x2
0x4ca DUP2
0x4cb MLOAD
0x4cc DUP2
0x4cd LT
0x4ce PUSH2 0x4d3
0x4d1 JUMPI
---
0x4bc: JUMPDEST 
0x4be: V451 = 0x20
0x4c0: V452 = ADD 0x20 V94
0x4c2: V453 = 0x20
0x4c4: V454 = MUL 0x20 0x0
0x4c5: V455 = ADD 0x0 V452
0x4c6: V456 = M[V455]
0x4c8: V457 = 0x2
0x4cb: V458 = M[V114]
0x4cd: V459 = LT 0x2 V458
0x4ce: V460 = 0x4d3
0x4d1: JUMPI 0x4d3 V459
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V94, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V456, S6, 0x2]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V114, 0x2]

================================

Block 0x4d2
[0x4d2:0x4d2]
---
Predecessors: [0x4bc]
Successors: []
---
0x4d2 INVALID
---
0x4d2: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V114, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V114, 0x2]

================================

Block 0x4d3
[0x4d3:0x4e8]
---
Predecessors: [0x4bc]
Successors: [0x4e9, 0x4ea]
---
0x4d3 JUMPDEST
0x4d4 SWAP1
0x4d5 PUSH1 0x20
0x4d7 ADD
0x4d8 SWAP1
0x4d9 PUSH1 0x20
0x4db MUL
0x4dc ADD
0x4dd MLOAD
0x4de DUP8
0x4df PUSH1 0x2
0x4e1 DUP2
0x4e2 MLOAD
0x4e3 DUP2
0x4e4 LT
0x4e5 PUSH2 0x4ea
0x4e8 JUMPI
---
0x4d3: JUMPDEST 
0x4d5: V461 = 0x20
0x4d7: V462 = ADD 0x20 V114
0x4d9: V463 = 0x20
0x4db: V464 = MUL 0x20 0x2
0x4dc: V465 = ADD 0x40 V462
0x4dd: V466 = M[V465]
0x4df: V467 = 0x2
0x4e2: V468 = M[V94]
0x4e4: V469 = LT 0x2 V468
0x4e5: V470 = 0x4ea
0x4e8: JUMPI 0x4ea V469
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V114, 0x2]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V466, S8, 0x2]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V94, 0x2]

================================

Block 0x4e9
[0x4e9:0x4e9]
---
Predecessors: [0x4d3]
Successors: []
---
0x4e9 INVALID
---
0x4e9: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V94, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V94, 0x2]

================================

Block 0x4ea
[0x4ea:0x4ff]
---
Predecessors: [0x4d3]
Successors: [0x500, 0x501]
---
0x4ea JUMPDEST
0x4eb SWAP1
0x4ec PUSH1 0x20
0x4ee ADD
0x4ef SWAP1
0x4f0 PUSH1 0x20
0x4f2 MUL
0x4f3 ADD
0x4f4 MLOAD
0x4f5 DUP9
0x4f6 PUSH1 0x4
0x4f8 DUP2
0x4f9 MLOAD
0x4fa DUP2
0x4fb LT
0x4fc PUSH2 0x501
0x4ff JUMPI
---
0x4ea: JUMPDEST 
0x4ec: V471 = 0x20
0x4ee: V472 = ADD 0x20 V94
0x4f0: V473 = 0x20
0x4f2: V474 = MUL 0x20 0x2
0x4f3: V475 = ADD 0x40 V472
0x4f4: V476 = M[V475]
0x4f6: V477 = 0x4
0x4f9: V478 = M[V94]
0x4fb: V479 = LT 0x4 V478
0x4fc: V480 = 0x501
0x4ff: JUMPI 0x501 V479
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V94, 0x2]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V476, S9, 0x4]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V94, 0x4]

================================

Block 0x500
[0x500:0x500]
---
Predecessors: [0x4ea]
Successors: []
---
0x500 INVALID
---
0x500: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V94, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V94, 0x4]

================================

Block 0x501
[0x501:0x516]
---
Predecessors: [0x4ea]
Successors: [0x517, 0x518]
---
0x501 JUMPDEST
0x502 SWAP1
0x503 PUSH1 0x20
0x505 ADD
0x506 SWAP1
0x507 PUSH1 0x20
0x509 MUL
0x50a ADD
0x50b MLOAD
0x50c DUP10
0x50d PUSH1 0x6
0x50f DUP2
0x510 MLOAD
0x511 DUP2
0x512 LT
0x513 PUSH2 0x518
0x516 JUMPI
---
0x501: JUMPDEST 
0x503: V481 = 0x20
0x505: V482 = ADD 0x20 V94
0x507: V483 = 0x20
0x509: V484 = MUL 0x20 0x4
0x50a: V485 = ADD 0x80 V482
0x50b: V486 = M[V485]
0x50d: V487 = 0x6
0x510: V488 = M[V94]
0x512: V489 = LT 0x6 V488
0x513: V490 = 0x518
0x516: JUMPI 0x518 V489
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V94, 0x4]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V486, S10, 0x6]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V94, 0x6]

================================

Block 0x517
[0x517:0x517]
---
Predecessors: [0x501]
Successors: []
---
0x517 INVALID
---
0x517: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V94, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V94, 0x6]

================================

Block 0x518
[0x518:0x52d]
---
Predecessors: [0x501]
Successors: [0x52e, 0x52f]
---
0x518 JUMPDEST
0x519 SWAP1
0x51a PUSH1 0x20
0x51c ADD
0x51d SWAP1
0x51e PUSH1 0x20
0x520 MUL
0x521 ADD
0x522 MLOAD
0x523 DUP10
0x524 PUSH1 0x4
0x526 DUP2
0x527 MLOAD
0x528 DUP2
0x529 LT
0x52a PUSH2 0x52f
0x52d JUMPI
---
0x518: JUMPDEST 
0x51a: V491 = 0x20
0x51c: V492 = ADD 0x20 V94
0x51e: V493 = 0x20
0x520: V494 = MUL 0x20 0x6
0x521: V495 = ADD 0xc0 V492
0x522: V496 = M[V495]
0x524: V497 = 0x4
0x527: V498 = M[V114]
0x529: V499 = LT 0x4 V498
0x52a: V500 = 0x52f
0x52d: JUMPI 0x52f V499
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V94, 0x6]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V496, S10, 0x4]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V114, 0x4]

================================

Block 0x52e
[0x52e:0x52e]
---
Predecessors: [0x518]
Successors: []
---
0x52e INVALID
---
0x52e: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V114, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V114, 0x4]

================================

Block 0x52f
[0x52f:0x545]
---
Predecessors: [0x518]
Successors: [0x546, 0x547]
---
0x52f JUMPDEST
0x530 SWAP1
0x531 PUSH1 0x20
0x533 ADD
0x534 SWAP1
0x535 PUSH1 0x20
0x537 MUL
0x538 ADD
0x539 MLOAD
0x53a DUP14
0x53b DUP11
0x53c PUSH1 0x0
0x53e DUP2
0x53f MLOAD
0x540 DUP2
0x541 LT
0x542 PUSH2 0x547
0x545 JUMPI
---
0x52f: JUMPDEST 
0x531: V501 = 0x20
0x533: V502 = ADD 0x20 V114
0x535: V503 = 0x20
0x537: V504 = MUL 0x20 0x4
0x538: V505 = ADD 0x80 V502
0x539: V506 = M[V505]
0x53c: V507 = 0x0
0x53f: V508 = M[V134]
0x541: V509 = LT 0x0 V508
0x542: V510 = 0x547
0x545: JUMPI 0x547 V509
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V114, 0x4]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V506, S14, S10, 0x0]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V134, 0x0]

================================

Block 0x546
[0x546:0x546]
---
Predecessors: [0x52f]
Successors: []
---
0x546 INVALID
---
0x546: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V134, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V134, 0x0]

================================

Block 0x547
[0x547:0x55c]
---
Predecessors: [0x52f]
Successors: [0x55d, 0x55e]
---
0x547 JUMPDEST
0x548 SWAP1
0x549 PUSH1 0x20
0x54b ADD
0x54c SWAP1
0x54d PUSH1 0x20
0x54f MUL
0x550 ADD
0x551 MLOAD
0x552 DUP12
0x553 PUSH1 0x2
0x555 DUP2
0x556 MLOAD
0x557 DUP2
0x558 LT
0x559 PUSH2 0x55e
0x55c JUMPI
---
0x547: JUMPDEST 
0x549: V511 = 0x20
0x54b: V512 = ADD 0x20 V134
0x54d: V513 = 0x20
0x54f: V514 = MUL 0x20 0x0
0x550: V515 = ADD 0x0 V512
0x551: V516 = M[V515]
0x553: V517 = 0x2
0x556: V518 = M[V134]
0x558: V519 = LT 0x2 V518
0x559: V520 = 0x55e
0x55c: JUMPI 0x55e V519
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V134, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V516, S12, 0x2]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V134, 0x2]

================================

Block 0x55d
[0x55d:0x55d]
---
Predecessors: [0x547]
Successors: []
---
0x55d INVALID
---
0x55d: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V134, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V134, 0x2]

================================

Block 0x55e
[0x55e:0x573]
---
Predecessors: [0x547]
Successors: [0x574, 0x575]
---
0x55e JUMPDEST
0x55f SWAP1
0x560 PUSH1 0x20
0x562 ADD
0x563 SWAP1
0x564 PUSH1 0x20
0x566 MUL
0x567 ADD
0x568 MLOAD
0x569 DUP15
0x56a PUSH1 0x8
0x56c DUP2
0x56d MLOAD
0x56e DUP2
0x56f LT
0x570 PUSH2 0x575
0x573 JUMPI
---
0x55e: JUMPDEST 
0x560: V521 = 0x20
0x562: V522 = ADD 0x20 V134
0x564: V523 = 0x20
0x566: V524 = MUL 0x20 0x2
0x567: V525 = ADD 0x40 V522
0x568: V526 = M[V525]
0x56a: V527 = 0x8
0x56d: V528 = M[V94]
0x56f: V529 = LT 0x8 V528
0x570: V530 = 0x575
0x573: JUMPI 0x575 V529
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V134, 0x2]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V526, S15, 0x8]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V526, V94, 0x8]

================================

Block 0x574
[0x574:0x574]
---
Predecessors: [0x55e]
Successors: []
---
0x574 INVALID
---
0x574: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V526, V94, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V526, V94, 0x8]

================================

Block 0x575
[0x575:0x616]
---
Predecessors: [0x55e]
Successors: [0x617, 0x618]
---
0x575 JUMPDEST
0x576 SWAP1
0x577 PUSH1 0x20
0x579 ADD
0x57a SWAP1
0x57b PUSH1 0x20
0x57d MUL
0x57e ADD
0x57f MLOAD
0x580 PUSH1 0x40
0x582 MLOAD
0x583 PUSH1 0xe0
0x585 PUSH1 0x2
0x587 EXP
0x588 PUSH4 0xffffffff
0x58d DUP15
0x58e AND
0x58f MUL
0x590 DUP2
0x591 MSTORE
0x592 PUSH1 0x1
0x594 PUSH1 0xa0
0x596 PUSH1 0x2
0x598 EXP
0x599 SUB
0x59a SWAP12
0x59b DUP13
0x59c AND
0x59d PUSH1 0x4
0x59f DUP3
0x5a0 ADD
0x5a1 MSTORE
0x5a2 PUSH1 0x24
0x5a4 DUP2
0x5a5 ADD
0x5a6 SWAP11
0x5a7 SWAP1
0x5a8 SWAP11
0x5a9 MSTORE
0x5aa SWAP8
0x5ab DUP11
0x5ac AND
0x5ad PUSH1 0x44
0x5af DUP11
0x5b0 ADD
0x5b1 MSTORE
0x5b2 PUSH1 0x64
0x5b4 DUP10
0x5b5 ADD
0x5b6 SWAP7
0x5b7 SWAP1
0x5b8 SWAP7
0x5b9 MSTORE
0x5ba PUSH1 0x84
0x5bc DUP9
0x5bd ADD
0x5be SWAP5
0x5bf SWAP1
0x5c0 SWAP5
0x5c1 MSTORE
0x5c2 PUSH1 0xa4
0x5c4 DUP8
0x5c5 ADD
0x5c6 SWAP3
0x5c7 SWAP1
0x5c8 SWAP3
0x5c9 MSTORE
0x5ca SWAP1
0x5cb SWAP6
0x5cc AND
0x5cd PUSH1 0xc4
0x5cf DUP6
0x5d0 ADD
0x5d1 MSTORE
0x5d2 PUSH1 0xff
0x5d4 SWAP1
0x5d5 SWAP5
0x5d6 AND
0x5d7 PUSH1 0xe4
0x5d9 DUP5
0x5da ADD
0x5db MSTORE
0x5dc PUSH2 0x104
0x5df DUP4
0x5e0 ADD
0x5e1 SWAP4
0x5e2 SWAP1
0x5e3 SWAP4
0x5e4 MSTORE
0x5e5 PUSH2 0x124
0x5e8 DUP3
0x5e9 ADD
0x5ea SWAP3
0x5eb SWAP1
0x5ec SWAP3
0x5ed MSTORE
0x5ee PUSH2 0x144
0x5f1 DUP2
0x5f2 ADD
0x5f3 SWAP2
0x5f4 SWAP1
0x5f5 SWAP2
0x5f6 MSTORE
0x5f7 PUSH2 0x164
0x5fa ADD
0x5fb PUSH1 0x0
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 DUP1
0x601 DUP4
0x602 SUB
0x603 DUP2
0x604 PUSH1 0x0
0x606 DUP8
0x607 PUSH2 0x646e
0x60a GAS
0x60b SUB
0x60c CALL
0x60d SWAP3
0x60e POP
0x60f POP
0x610 POP
0x611 ISZERO
0x612 ISZERO
0x613 PUSH2 0x618
0x616 JUMPI
---
0x575: JUMPDEST 
0x577: V531 = 0x20
0x579: V532 = ADD 0x20 V94
0x57b: V533 = 0x20
0x57d: V534 = MUL 0x20 0x8
0x57e: V535 = ADD 0x100 V532
0x57f: V536 = M[V535]
0x580: V537 = 0x40
0x582: V538 = M[0x40]
0x583: V539 = 0xe0
0x585: V540 = 0x2
0x587: V541 = EXP 0x2 0xe0
0x588: V542 = 0xffffffff
0x58e: V543 = AND V436 0xffffffff
0x58f: V544 = MUL V543 0x100000000000000000000000000000000000000000000000000000000
0x591: M[V538] = V544
0x592: V545 = 0x1
0x594: V546 = 0xa0
0x596: V547 = 0x2
0x598: V548 = EXP 0x2 0xa0
0x599: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59c: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x59d: V551 = 0x4
0x5a0: V552 = ADD V538 0x4
0x5a1: M[V552] = V550
0x5a2: V553 = 0x24
0x5a5: V554 = ADD V538 0x24
0x5a9: M[V554] = V456
0x5ac: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x5ad: V556 = 0x44
0x5b0: V557 = ADD V538 0x44
0x5b1: M[V557] = V555
0x5b2: V558 = 0x64
0x5b5: V559 = ADD V538 0x64
0x5b9: M[V559] = V476
0x5ba: V560 = 0x84
0x5bd: V561 = ADD V538 0x84
0x5c1: M[V561] = V486
0x5c2: V562 = 0xa4
0x5c5: V563 = ADD V538 0xa4
0x5c9: M[V563] = V496
0x5cc: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x5cd: V565 = 0xc4
0x5d0: V566 = ADD V538 0xc4
0x5d1: M[V566] = V564
0x5d2: V567 = 0xff
0x5d6: V568 = AND V80 0xff
0x5d7: V569 = 0xe4
0x5da: V570 = ADD V538 0xe4
0x5db: M[V570] = V568
0x5dc: V571 = 0x104
0x5e0: V572 = ADD V538 0x104
0x5e4: M[V572] = V516
0x5e5: V573 = 0x124
0x5e9: V574 = ADD V538 0x124
0x5ed: M[V574] = V526
0x5ee: V575 = 0x144
0x5f2: V576 = ADD V538 0x144
0x5f6: M[V576] = V536
0x5f7: V577 = 0x164
0x5fa: V578 = ADD 0x164 V538
0x5fb: V579 = 0x0
0x5fd: V580 = 0x40
0x5ff: V581 = M[0x40]
0x602: V582 = SUB V578 V581
0x604: V583 = 0x0
0x607: V584 = 0x646e
0x60a: V585 = GAS
0x60b: V586 = SUB V585 0x646e
0x60c: V587 = CALL V586 V417 0x0 V581 V582 V581 0x0
0x611: V588 = ISZERO V587
0x612: V589 = ISZERO V588
0x613: V590 = 0x618
0x616: JUMPI 0x618 V589
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V526, V94, 0x8]
Stack pops: 14
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x617
[0x617:0x617]
---
Predecessors: [0x575]
Successors: []
---
0x617 INVALID
---
0x617: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x618
[0x618:0x6b6]
---
Predecessors: [0x575]
Successors: [0x6b7, 0x6b8]
---
0x618 JUMPDEST
0x619 DUP6
0x61a PUSH1 0x1
0x61c PUSH1 0xa0
0x61e PUSH1 0x2
0x620 EXP
0x621 SUB
0x622 AND
0x623 PUSH1 0x40
0x625 MLOAD
0x626 DUP1
0x627 DUP1
0x628 PUSH32 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x649 DUP2
0x64a MSTORE
0x64b PUSH1 0x20
0x64d ADD
0x64e PUSH32 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x66f DUP2
0x670 MSTORE
0x671 PUSH1 0x20
0x673 ADD
0x674 PUSH32 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x695 DUP2
0x696 MSTORE
0x697 POP
0x698 PUSH1 0x5c
0x69a ADD
0x69b SWAP1
0x69c POP
0x69d PUSH1 0x40
0x69f MLOAD
0x6a0 DUP1
0x6a1 SWAP2
0x6a2 SUB
0x6a3 SWAP1
0x6a4 SHA3
0x6a5 PUSH1 0xe0
0x6a7 PUSH1 0x2
0x6a9 EXP
0x6aa SWAP1
0x6ab DIV
0x6ac DUP4
0x6ad PUSH1 0x1
0x6af DUP2
0x6b0 MLOAD
0x6b1 DUP2
0x6b2 LT
0x6b3 PUSH2 0x6b8
0x6b6 JUMPI
---
0x618: JUMPDEST 
0x61a: V591 = 0x1
0x61c: V592 = 0xa0
0x61e: V593 = 0x2
0x620: V594 = EXP 0x2 0xa0
0x621: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x622: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x623: V597 = 0x40
0x625: V598 = M[0x40]
0x628: V599 = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x64a: M[V598] = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x64b: V600 = 0x20
0x64d: V601 = ADD 0x20 V598
0x64e: V602 = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x670: M[V601] = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x671: V603 = 0x20
0x673: V604 = ADD 0x20 V601
0x674: V605 = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x696: M[V604] = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x698: V606 = 0x5c
0x69a: V607 = ADD 0x5c V598
0x69d: V608 = 0x40
0x69f: V609 = M[0x40]
0x6a2: V610 = SUB V607 V609
0x6a4: V611 = SHA3 V609 V610
0x6a5: V612 = 0xe0
0x6a7: V613 = 0x2
0x6a9: V614 = EXP 0x2 0xe0
0x6ab: V615 = DIV V611 0x100000000000000000000000000000000000000000000000000000000
0x6ad: V616 = 0x1
0x6b0: V617 = M[V114]
0x6b2: V618 = LT 0x1 V617
0x6b3: V619 = 0x6b8
0x6b6: JUMPI 0x6b8 V618
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V596, V615, S1, 0x1]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V114, 0x1]

================================

Block 0x6b7
[0x6b7:0x6b7]
---
Predecessors: [0x618]
Successors: []
---
0x6b7 INVALID
---
0x6b7: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V114, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V114, 0x1]

================================

Block 0x6b8
[0x6b8:0x6cd]
---
Predecessors: [0x618]
Successors: [0x6ce, 0x6cf]
---
0x6b8 JUMPDEST
0x6b9 SWAP1
0x6ba PUSH1 0x20
0x6bc ADD
0x6bd SWAP1
0x6be PUSH1 0x20
0x6c0 MUL
0x6c1 ADD
0x6c2 MLOAD
0x6c3 DUP6
0x6c4 PUSH1 0x1
0x6c6 DUP2
0x6c7 MLOAD
0x6c8 DUP2
0x6c9 LT
0x6ca PUSH2 0x6cf
0x6cd JUMPI
---
0x6b8: JUMPDEST 
0x6ba: V620 = 0x20
0x6bc: V621 = ADD 0x20 V114
0x6be: V622 = 0x20
0x6c0: V623 = MUL 0x20 0x1
0x6c1: V624 = ADD 0x20 V621
0x6c2: V625 = M[V624]
0x6c4: V626 = 0x1
0x6c7: V627 = M[V94]
0x6c9: V628 = LT 0x1 V627
0x6ca: V629 = 0x6cf
0x6cd: JUMPI 0x6cf V628
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V114, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V625, S6, 0x1]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V94, 0x1]

================================

Block 0x6ce
[0x6ce:0x6ce]
---
Predecessors: [0x6b8]
Successors: []
---
0x6ce INVALID
---
0x6ce: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V94, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V94, 0x1]

================================

Block 0x6cf
[0x6cf:0x6e4]
---
Predecessors: [0x6b8]
Successors: [0x6e5, 0x6e6]
---
0x6cf JUMPDEST
0x6d0 SWAP1
0x6d1 PUSH1 0x20
0x6d3 ADD
0x6d4 SWAP1
0x6d5 PUSH1 0x20
0x6d7 MUL
0x6d8 ADD
0x6d9 MLOAD
0x6da DUP6
0x6db PUSH1 0x3
0x6dd DUP2
0x6de MLOAD
0x6df DUP2
0x6e0 LT
0x6e1 PUSH2 0x6e6
0x6e4 JUMPI
---
0x6cf: JUMPDEST 
0x6d1: V630 = 0x20
0x6d3: V631 = ADD 0x20 V94
0x6d5: V632 = 0x20
0x6d7: V633 = MUL 0x20 0x1
0x6d8: V634 = ADD 0x20 V631
0x6d9: V635 = M[V634]
0x6db: V636 = 0x3
0x6de: V637 = M[V114]
0x6e0: V638 = LT 0x3 V637
0x6e1: V639 = 0x6e6
0x6e4: JUMPI 0x6e6 V638
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V94, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V635, S6, 0x3]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V114, 0x3]

================================

Block 0x6e5
[0x6e5:0x6e5]
---
Predecessors: [0x6cf]
Successors: []
---
0x6e5 INVALID
---
0x6e5: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V114, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V114, 0x3]

================================

Block 0x6e6
[0x6e6:0x6fb]
---
Predecessors: [0x6cf]
Successors: [0x6fc, 0x6fd]
---
0x6e6 JUMPDEST
0x6e7 SWAP1
0x6e8 PUSH1 0x20
0x6ea ADD
0x6eb SWAP1
0x6ec PUSH1 0x20
0x6ee MUL
0x6ef ADD
0x6f0 MLOAD
0x6f1 DUP8
0x6f2 PUSH1 0x3
0x6f4 DUP2
0x6f5 MLOAD
0x6f6 DUP2
0x6f7 LT
0x6f8 PUSH2 0x6fd
0x6fb JUMPI
---
0x6e6: JUMPDEST 
0x6e8: V640 = 0x20
0x6ea: V641 = ADD 0x20 V114
0x6ec: V642 = 0x20
0x6ee: V643 = MUL 0x20 0x3
0x6ef: V644 = ADD 0x60 V641
0x6f0: V645 = M[V644]
0x6f2: V646 = 0x3
0x6f5: V647 = M[V94]
0x6f7: V648 = LT 0x3 V647
0x6f8: V649 = 0x6fd
0x6fb: JUMPI 0x6fd V648
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V114, 0x3]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V645, S8, 0x3]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V94, 0x3]

================================

Block 0x6fc
[0x6fc:0x6fc]
---
Predecessors: [0x6e6]
Successors: []
---
0x6fc INVALID
---
0x6fc: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V94, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V94, 0x3]

================================

Block 0x6fd
[0x6fd:0x712]
---
Predecessors: [0x6e6]
Successors: [0x713, 0x714]
---
0x6fd JUMPDEST
0x6fe SWAP1
0x6ff PUSH1 0x20
0x701 ADD
0x702 SWAP1
0x703 PUSH1 0x20
0x705 MUL
0x706 ADD
0x707 MLOAD
0x708 DUP9
0x709 PUSH1 0x5
0x70b DUP2
0x70c MLOAD
0x70d DUP2
0x70e LT
0x70f PUSH2 0x714
0x712 JUMPI
---
0x6fd: JUMPDEST 
0x6ff: V650 = 0x20
0x701: V651 = ADD 0x20 V94
0x703: V652 = 0x20
0x705: V653 = MUL 0x20 0x3
0x706: V654 = ADD 0x60 V651
0x707: V655 = M[V654]
0x709: V656 = 0x5
0x70c: V657 = M[V94]
0x70e: V658 = LT 0x5 V657
0x70f: V659 = 0x714
0x712: JUMPI 0x714 V658
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V94, 0x3]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V655, S9, 0x5]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V94, 0x5]

================================

Block 0x713
[0x713:0x713]
---
Predecessors: [0x6fd]
Successors: []
---
0x713 INVALID
---
0x713: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V94, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V94, 0x5]

================================

Block 0x714
[0x714:0x729]
---
Predecessors: [0x6fd]
Successors: [0x72a, 0x72b]
---
0x714 JUMPDEST
0x715 SWAP1
0x716 PUSH1 0x20
0x718 ADD
0x719 SWAP1
0x71a PUSH1 0x20
0x71c MUL
0x71d ADD
0x71e MLOAD
0x71f DUP10
0x720 PUSH1 0x7
0x722 DUP2
0x723 MLOAD
0x724 DUP2
0x725 LT
0x726 PUSH2 0x72b
0x729 JUMPI
---
0x714: JUMPDEST 
0x716: V660 = 0x20
0x718: V661 = ADD 0x20 V94
0x71a: V662 = 0x20
0x71c: V663 = MUL 0x20 0x5
0x71d: V664 = ADD 0xa0 V661
0x71e: V665 = M[V664]
0x720: V666 = 0x7
0x723: V667 = M[V94]
0x725: V668 = LT 0x7 V667
0x726: V669 = 0x72b
0x729: JUMPI 0x72b V668
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V94, 0x5]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V665, S10, 0x7]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V94, 0x7]

================================

Block 0x72a
[0x72a:0x72a]
---
Predecessors: [0x714]
Successors: []
---
0x72a INVALID
---
0x72a: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V94, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V94, 0x7]

================================

Block 0x72b
[0x72b:0x740]
---
Predecessors: [0x714]
Successors: [0x741, 0x742]
---
0x72b JUMPDEST
0x72c SWAP1
0x72d PUSH1 0x20
0x72f ADD
0x730 SWAP1
0x731 PUSH1 0x20
0x733 MUL
0x734 ADD
0x735 MLOAD
0x736 DUP10
0x737 PUSH1 0x5
0x739 DUP2
0x73a MLOAD
0x73b DUP2
0x73c LT
0x73d PUSH2 0x742
0x740 JUMPI
---
0x72b: JUMPDEST 
0x72d: V670 = 0x20
0x72f: V671 = ADD 0x20 V94
0x731: V672 = 0x20
0x733: V673 = MUL 0x20 0x7
0x734: V674 = ADD 0xe0 V671
0x735: V675 = M[V674]
0x737: V676 = 0x5
0x73a: V677 = M[V114]
0x73c: V678 = LT 0x5 V677
0x73d: V679 = 0x742
0x740: JUMPI 0x742 V678
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V94, 0x7]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V675, S10, 0x5]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V114, 0x5]

================================

Block 0x741
[0x741:0x741]
---
Predecessors: [0x72b]
Successors: []
---
0x741 INVALID
---
0x741: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V114, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V114, 0x5]

================================

Block 0x742
[0x742:0x758]
---
Predecessors: [0x72b]
Successors: [0x759, 0x75a]
---
0x742 JUMPDEST
0x743 SWAP1
0x744 PUSH1 0x20
0x746 ADD
0x747 SWAP1
0x748 PUSH1 0x20
0x74a MUL
0x74b ADD
0x74c MLOAD
0x74d DUP13
0x74e DUP11
0x74f PUSH1 0x1
0x751 DUP2
0x752 MLOAD
0x753 DUP2
0x754 LT
0x755 PUSH2 0x75a
0x758 JUMPI
---
0x742: JUMPDEST 
0x744: V680 = 0x20
0x746: V681 = ADD 0x20 V114
0x748: V682 = 0x20
0x74a: V683 = MUL 0x20 0x5
0x74b: V684 = ADD 0xa0 V681
0x74c: V685 = M[V684]
0x74f: V686 = 0x1
0x752: V687 = M[V134]
0x754: V688 = LT 0x1 V687
0x755: V689 = 0x75a
0x758: JUMPI 0x75a V688
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V114, 0x5]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V685, S13, S10, 0x1]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V134, 0x1]

================================

Block 0x759
[0x759:0x759]
---
Predecessors: [0x742]
Successors: []
---
0x759 INVALID
---
0x759: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V134, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V134, 0x1]

================================

Block 0x75a
[0x75a:0x76f]
---
Predecessors: [0x742]
Successors: [0x770, 0x771]
---
0x75a JUMPDEST
0x75b SWAP1
0x75c PUSH1 0x20
0x75e ADD
0x75f SWAP1
0x760 PUSH1 0x20
0x762 MUL
0x763 ADD
0x764 MLOAD
0x765 DUP12
0x766 PUSH1 0x3
0x768 DUP2
0x769 MLOAD
0x76a DUP2
0x76b LT
0x76c PUSH2 0x771
0x76f JUMPI
---
0x75a: JUMPDEST 
0x75c: V690 = 0x20
0x75e: V691 = ADD 0x20 V134
0x760: V692 = 0x20
0x762: V693 = MUL 0x20 0x1
0x763: V694 = ADD 0x20 V691
0x764: V695 = M[V694]
0x766: V696 = 0x3
0x769: V697 = M[V134]
0x76b: V698 = LT 0x3 V697
0x76c: V699 = 0x771
0x76f: JUMPI 0x771 V698
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V134, 0x1]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V695, S12, 0x3]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V695, V134, 0x3]

================================

Block 0x770
[0x770:0x770]
---
Predecessors: [0x75a]
Successors: []
---
0x770 INVALID
---
0x770: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V695, V134, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V695, V134, 0x3]

================================

Block 0x771
[0x771:0x786]
---
Predecessors: [0x75a]
Successors: [0x787, 0x788]
---
0x771 JUMPDEST
0x772 SWAP1
0x773 PUSH1 0x20
0x775 ADD
0x776 SWAP1
0x777 PUSH1 0x20
0x779 MUL
0x77a ADD
0x77b MLOAD
0x77c DUP15
0x77d PUSH1 0x9
0x77f DUP2
0x780 MLOAD
0x781 DUP2
0x782 LT
0x783 PUSH2 0x788
0x786 JUMPI
---
0x771: JUMPDEST 
0x773: V700 = 0x20
0x775: V701 = ADD 0x20 V134
0x777: V702 = 0x20
0x779: V703 = MUL 0x20 0x3
0x77a: V704 = ADD 0x60 V701
0x77b: V705 = M[V704]
0x77d: V706 = 0x9
0x780: V707 = M[V94]
0x782: V708 = LT 0x9 V707
0x783: V709 = 0x788
0x786: JUMPI 0x788 V708
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V695, V134, 0x3]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V705, S15, 0x9]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V695, V705, V94, 0x9]

================================

Block 0x787
[0x787:0x787]
---
Predecessors: [0x771]
Successors: []
---
0x787 INVALID
---
0x787: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V695, V705, V94, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V695, V705, V94, 0x9]

================================

Block 0x788
[0x788:0x829]
---
Predecessors: [0x771]
Successors: [0x82a, 0x82b]
---
0x788 JUMPDEST
0x789 SWAP1
0x78a PUSH1 0x20
0x78c ADD
0x78d SWAP1
0x78e PUSH1 0x20
0x790 MUL
0x791 ADD
0x792 MLOAD
0x793 PUSH1 0x40
0x795 MLOAD
0x796 PUSH1 0xe0
0x798 PUSH1 0x2
0x79a EXP
0x79b PUSH4 0xffffffff
0x7a0 DUP15
0x7a1 AND
0x7a2 MUL
0x7a3 DUP2
0x7a4 MSTORE
0x7a5 PUSH1 0x1
0x7a7 PUSH1 0xa0
0x7a9 PUSH1 0x2
0x7ab EXP
0x7ac SUB
0x7ad SWAP12
0x7ae DUP13
0x7af AND
0x7b0 PUSH1 0x4
0x7b2 DUP3
0x7b3 ADD
0x7b4 MSTORE
0x7b5 PUSH1 0x24
0x7b7 DUP2
0x7b8 ADD
0x7b9 SWAP11
0x7ba SWAP1
0x7bb SWAP11
0x7bc MSTORE
0x7bd SWAP8
0x7be DUP11
0x7bf AND
0x7c0 PUSH1 0x44
0x7c2 DUP11
0x7c3 ADD
0x7c4 MSTORE
0x7c5 PUSH1 0x64
0x7c7 DUP10
0x7c8 ADD
0x7c9 SWAP7
0x7ca SWAP1
0x7cb SWAP7
0x7cc MSTORE
0x7cd PUSH1 0x84
0x7cf DUP9
0x7d0 ADD
0x7d1 SWAP5
0x7d2 SWAP1
0x7d3 SWAP5
0x7d4 MSTORE
0x7d5 PUSH1 0xa4
0x7d7 DUP8
0x7d8 ADD
0x7d9 SWAP3
0x7da SWAP1
0x7db SWAP3
0x7dc MSTORE
0x7dd SWAP1
0x7de SWAP6
0x7df AND
0x7e0 PUSH1 0xc4
0x7e2 DUP6
0x7e3 ADD
0x7e4 MSTORE
0x7e5 PUSH1 0xff
0x7e7 SWAP1
0x7e8 SWAP5
0x7e9 AND
0x7ea PUSH1 0xe4
0x7ec DUP5
0x7ed ADD
0x7ee MSTORE
0x7ef PUSH2 0x104
0x7f2 DUP4
0x7f3 ADD
0x7f4 SWAP4
0x7f5 SWAP1
0x7f6 SWAP4
0x7f7 MSTORE
0x7f8 PUSH2 0x124
0x7fb DUP3
0x7fc ADD
0x7fd SWAP3
0x7fe SWAP1
0x7ff SWAP3
0x800 MSTORE
0x801 PUSH2 0x144
0x804 DUP2
0x805 ADD
0x806 SWAP2
0x807 SWAP1
0x808 SWAP2
0x809 MSTORE
0x80a PUSH2 0x164
0x80d ADD
0x80e PUSH1 0x0
0x810 PUSH1 0x40
0x812 MLOAD
0x813 DUP1
0x814 DUP4
0x815 SUB
0x816 DUP2
0x817 PUSH1 0x0
0x819 DUP8
0x81a PUSH2 0x646e
0x81d GAS
0x81e SUB
0x81f CALL
0x820 SWAP3
0x821 POP
0x822 POP
0x823 POP
0x824 ISZERO
0x825 ISZERO
0x826 PUSH2 0x82b
0x829 JUMPI
---
0x788: JUMPDEST 
0x78a: V710 = 0x20
0x78c: V711 = ADD 0x20 V94
0x78e: V712 = 0x20
0x790: V713 = MUL 0x20 0x9
0x791: V714 = ADD 0x120 V711
0x792: V715 = M[V714]
0x793: V716 = 0x40
0x795: V717 = M[0x40]
0x796: V718 = 0xe0
0x798: V719 = 0x2
0x79a: V720 = EXP 0x2 0xe0
0x79b: V721 = 0xffffffff
0x7a1: V722 = AND V615 0xffffffff
0x7a2: V723 = MUL V722 0x100000000000000000000000000000000000000000000000000000000
0x7a4: M[V717] = V723
0x7a5: V724 = 0x1
0x7a7: V725 = 0xa0
0x7a9: V726 = 0x2
0x7ab: V727 = EXP 0x2 0xa0
0x7ac: V728 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7af: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0x7b0: V730 = 0x4
0x7b3: V731 = ADD V717 0x4
0x7b4: M[V731] = V729
0x7b5: V732 = 0x24
0x7b8: V733 = ADD V717 0x24
0x7bc: M[V733] = V635
0x7bf: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V645
0x7c0: V735 = 0x44
0x7c3: V736 = ADD V717 0x44
0x7c4: M[V736] = V734
0x7c5: V737 = 0x64
0x7c8: V738 = ADD V717 0x64
0x7cc: M[V738] = V655
0x7cd: V739 = 0x84
0x7d0: V740 = ADD V717 0x84
0x7d4: M[V740] = V665
0x7d5: V741 = 0xa4
0x7d8: V742 = ADD V717 0xa4
0x7dc: M[V742] = V675
0x7df: V743 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0x7e0: V744 = 0xc4
0x7e3: V745 = ADD V717 0xc4
0x7e4: M[V745] = V743
0x7e5: V746 = 0xff
0x7e9: V747 = AND V83 0xff
0x7ea: V748 = 0xe4
0x7ed: V749 = ADD V717 0xe4
0x7ee: M[V749] = V747
0x7ef: V750 = 0x104
0x7f3: V751 = ADD V717 0x104
0x7f7: M[V751] = V695
0x7f8: V752 = 0x124
0x7fc: V753 = ADD V717 0x124
0x800: M[V753] = V705
0x801: V754 = 0x144
0x805: V755 = ADD V717 0x144
0x809: M[V755] = V715
0x80a: V756 = 0x164
0x80d: V757 = ADD 0x164 V717
0x80e: V758 = 0x0
0x810: V759 = 0x40
0x812: V760 = M[0x40]
0x815: V761 = SUB V757 V760
0x817: V762 = 0x0
0x81a: V763 = 0x646e
0x81d: V764 = GAS
0x81e: V765 = SUB V764 0x646e
0x81f: V766 = CALL V765 V596 0x0 V760 V761 V760 0x0
0x824: V767 = ISZERO V766
0x825: V768 = ISZERO V767
0x826: V769 = 0x82b
0x829: JUMPI 0x82b V768
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V596, V615, V625, V635, V645, V655, V665, V675, V685, V83, V695, V705, V94, 0x9]
Stack pops: 14
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x82a
[0x82a:0x82a]
---
Predecessors: [0x788]
Successors: []
---
0x82a INVALID
---
0x82a: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x82b
[0x82b:0x82b]
---
Predecessors: [0x788]
Successors: [0x82c]
---
0x82b JUMPDEST
---
0x82b: JUMPDEST 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x82c
[0x82c:0x833]
---
Predecessors: [0x82b]
Successors: [0x7d]
---
0x82c JUMPDEST
0x82d POP
0x82e POP
0x82f POP
0x830 POP
0x831 POP
0x832 POP
0x833 JUMP
---
0x82c: JUMPDEST 
0x833: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 7
Stack additions: []
Exit stack: [V12]

================================

Block 0x834
[0x834:0x84a]
---
Predecessors: [0x1b8]
Successors: [0x84b, 0x84f]
---
0x834 JUMPDEST
0x835 PUSH1 0x0
0x837 SLOAD
0x838 CALLER
0x839 PUSH1 0x1
0x83b PUSH1 0xa0
0x83d PUSH1 0x2
0x83f EXP
0x840 SUB
0x841 SWAP1
0x842 DUP2
0x843 AND
0x844 SWAP2
0x845 AND
0x846 EQ
0x847 PUSH2 0x84f
0x84a JUMPI
---
0x834: JUMPDEST 
0x835: V770 = 0x0
0x837: V771 = S[0x0]
0x838: V772 = CALLER
0x839: V773 = 0x1
0x83b: V774 = 0xa0
0x83d: V775 = 0x2
0x83f: V776 = EXP 0x2 0xa0
0x840: V777 = SUB 0x10000000000000000000000000000000000000000 0x1
0x843: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V772
0x845: V779 = AND V771 0xffffffffffffffffffffffffffffffffffffffff
0x846: V780 = EQ V779 V778
0x847: V781 = 0x84f
0x84a: JUMPI 0x84f V780
---
Entry stack: [V12, 0x7d, V154, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V154, V156]

================================

Block 0x84b
[0x84b:0x84e]
---
Predecessors: [0x834]
Successors: []
---
0x84b PUSH1 0x0
0x84d DUP1
0x84e REVERT
---
0x84b: V782 = 0x0
0x84e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V154, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V154, V156]

================================

Block 0x84f
[0x84f:0x8be]
---
Predecessors: [0x834]
Successors: [0x8bf]
---
0x84f JUMPDEST
0x850 DUP2
0x851 PUSH1 0x1
0x853 PUSH1 0xa0
0x855 PUSH1 0x2
0x857 EXP
0x858 SUB
0x859 AND
0x85a DUP2
0x85b PUSH1 0x40
0x85d MLOAD
0x85e PUSH32 0x6465706f73697428290000000000000000000000000000000000000000000000
0x87f DUP2
0x880 MSTORE
0x881 PUSH1 0x9
0x883 ADD
0x884 PUSH1 0x40
0x886 MLOAD
0x887 DUP1
0x888 SWAP2
0x889 SUB
0x88a SWAP1
0x88b SHA3
0x88c PUSH1 0xe0
0x88e PUSH1 0x2
0x890 EXP
0x891 SWAP1
0x892 DIV
0x893 SWAP1
0x894 PUSH1 0x40
0x896 MLOAD
0x897 DUP3
0x898 PUSH4 0xffffffff
0x89d AND
0x89e PUSH1 0xe0
0x8a0 PUSH1 0x2
0x8a2 EXP
0x8a3 MUL
0x8a4 DUP2
0x8a5 MSTORE
0x8a6 PUSH1 0x4
0x8a8 ADD
0x8a9 PUSH1 0x0
0x8ab PUSH1 0x40
0x8ad MLOAD
0x8ae DUP1
0x8af DUP4
0x8b0 SUB
0x8b1 DUP2
0x8b2 DUP6
0x8b3 DUP9
0x8b4 PUSH2 0x8796
0x8b7 GAS
0x8b8 SUB
0x8b9 CALL
0x8ba POP
0x8bb POP
0x8bc POP
0x8bd POP
0x8be POP
---
0x84f: JUMPDEST 
0x851: V783 = 0x1
0x853: V784 = 0xa0
0x855: V785 = 0x2
0x857: V786 = EXP 0x2 0xa0
0x858: V787 = SUB 0x10000000000000000000000000000000000000000 0x1
0x859: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x85b: V789 = 0x40
0x85d: V790 = M[0x40]
0x85e: V791 = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x880: M[V790] = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x881: V792 = 0x9
0x883: V793 = ADD 0x9 V790
0x884: V794 = 0x40
0x886: V795 = M[0x40]
0x889: V796 = SUB V793 V795
0x88b: V797 = SHA3 V795 V796
0x88c: V798 = 0xe0
0x88e: V799 = 0x2
0x890: V800 = EXP 0x2 0xe0
0x892: V801 = DIV V797 0x100000000000000000000000000000000000000000000000000000000
0x894: V802 = 0x40
0x896: V803 = M[0x40]
0x898: V804 = 0xffffffff
0x89d: V805 = AND 0xffffffff V801
0x89e: V806 = 0xe0
0x8a0: V807 = 0x2
0x8a2: V808 = EXP 0x2 0xe0
0x8a3: V809 = MUL 0x100000000000000000000000000000000000000000000000000000000 V805
0x8a5: M[V803] = V809
0x8a6: V810 = 0x4
0x8a8: V811 = ADD 0x4 V803
0x8a9: V812 = 0x0
0x8ab: V813 = 0x40
0x8ad: V814 = M[0x40]
0x8b0: V815 = SUB V811 V814
0x8b4: V816 = 0x8796
0x8b7: V817 = GAS
0x8b8: V818 = SUB V817 0x8796
0x8b9: V819 = CALL V818 V788 V156 V814 V815 V814 0x0
---
Entry stack: [V12, 0x7d, V154, V156]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V154, V156]

================================

Block 0x8bf
[0x8bf:0x8c2]
---
Predecessors: [0x84f]
Successors: [0x7d]
---
0x8bf JUMPDEST
0x8c0 POP
0x8c1 POP
0x8c2 JUMP
---
0x8bf: JUMPDEST 
0x8c2: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V154, V156]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c3
[0x8c3:0x8d9]
---
Predecessors: [0x1dc]
Successors: [0x8da, 0x8de]
---
0x8c3 JUMPDEST
0x8c4 PUSH1 0x0
0x8c6 SLOAD
0x8c7 CALLER
0x8c8 PUSH1 0x1
0x8ca PUSH1 0xa0
0x8cc PUSH1 0x2
0x8ce EXP
0x8cf SUB
0x8d0 SWAP1
0x8d1 DUP2
0x8d2 AND
0x8d3 SWAP2
0x8d4 AND
0x8d5 EQ
0x8d6 PUSH2 0x8de
0x8d9 JUMPI
---
0x8c3: JUMPDEST 
0x8c4: V820 = 0x0
0x8c6: V821 = S[0x0]
0x8c7: V822 = CALLER
0x8c8: V823 = 0x1
0x8ca: V824 = 0xa0
0x8cc: V825 = 0x2
0x8ce: V826 = EXP 0x2 0xa0
0x8cf: V827 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d2: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0x8d4: V829 = AND V821 0xffffffffffffffffffffffffffffffffffffffff
0x8d5: V830 = EQ V829 V828
0x8d6: V831 = 0x8de
0x8d9: JUMPI 0x8de V830
---
Entry stack: [V12, 0x7d, V170, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V170, V172]

================================

Block 0x8da
[0x8da:0x8dd]
---
Predecessors: [0x8c3]
Successors: []
---
0x8da PUSH1 0x0
0x8dc DUP1
0x8dd REVERT
---
0x8da: V832 = 0x0
0x8dd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V170, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V170, V172]

================================

Block 0x8de
[0x8de:0x954]
---
Predecessors: [0x8c3]
Successors: [0x955]
---
0x8de JUMPDEST
0x8df DUP2
0x8e0 PUSH1 0x1
0x8e2 PUSH1 0xa0
0x8e4 PUSH1 0x2
0x8e6 EXP
0x8e7 SUB
0x8e8 AND
0x8e9 PUSH1 0x40
0x8eb MLOAD
0x8ec PUSH32 0x77697468647261772875696e7432353629000000000000000000000000000000
0x90d DUP2
0x90e MSTORE
0x90f PUSH1 0x11
0x911 ADD
0x912 PUSH1 0x40
0x914 MLOAD
0x915 DUP1
0x916 SWAP2
0x917 SUB
0x918 SWAP1
0x919 SHA3
0x91a PUSH1 0xe0
0x91c PUSH1 0x2
0x91e EXP
0x91f SWAP1
0x920 DIV
0x921 DUP3
0x922 PUSH1 0x40
0x924 MLOAD
0x925 PUSH1 0xe0
0x927 PUSH1 0x2
0x929 EXP
0x92a PUSH4 0xffffffff
0x92f DUP5
0x930 AND
0x931 MUL
0x932 DUP2
0x933 MSTORE
0x934 PUSH1 0x4
0x936 DUP2
0x937 ADD
0x938 SWAP2
0x939 SWAP1
0x93a SWAP2
0x93b MSTORE
0x93c PUSH1 0x24
0x93e ADD
0x93f PUSH1 0x0
0x941 PUSH1 0x40
0x943 MLOAD
0x944 DUP1
0x945 DUP4
0x946 SUB
0x947 DUP2
0x948 PUSH1 0x0
0x94a DUP8
0x94b PUSH2 0x646e
0x94e GAS
0x94f SUB
0x950 CALL
0x951 POP
0x952 POP
0x953 POP
0x954 POP
---
0x8de: JUMPDEST 
0x8e0: V833 = 0x1
0x8e2: V834 = 0xa0
0x8e4: V835 = 0x2
0x8e6: V836 = EXP 0x2 0xa0
0x8e7: V837 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e8: V838 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x8e9: V839 = 0x40
0x8eb: V840 = M[0x40]
0x8ec: V841 = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x90e: M[V840] = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x90f: V842 = 0x11
0x911: V843 = ADD 0x11 V840
0x912: V844 = 0x40
0x914: V845 = M[0x40]
0x917: V846 = SUB V843 V845
0x919: V847 = SHA3 V845 V846
0x91a: V848 = 0xe0
0x91c: V849 = 0x2
0x91e: V850 = EXP 0x2 0xe0
0x920: V851 = DIV V847 0x100000000000000000000000000000000000000000000000000000000
0x922: V852 = 0x40
0x924: V853 = M[0x40]
0x925: V854 = 0xe0
0x927: V855 = 0x2
0x929: V856 = EXP 0x2 0xe0
0x92a: V857 = 0xffffffff
0x930: V858 = AND V851 0xffffffff
0x931: V859 = MUL V858 0x100000000000000000000000000000000000000000000000000000000
0x933: M[V853] = V859
0x934: V860 = 0x4
0x937: V861 = ADD V853 0x4
0x93b: M[V861] = V172
0x93c: V862 = 0x24
0x93e: V863 = ADD 0x24 V853
0x93f: V864 = 0x0
0x941: V865 = 0x40
0x943: V866 = M[0x40]
0x946: V867 = SUB V863 V866
0x948: V868 = 0x0
0x94b: V869 = 0x646e
0x94e: V870 = GAS
0x94f: V871 = SUB V870 0x646e
0x950: V872 = CALL V871 V838 0x0 V866 V867 V866 0x0
---
Entry stack: [V12, 0x7d, V170, V172]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V170, V172]

================================

Block 0x955
[0x955:0x958]
---
Predecessors: [0x8de]
Successors: [0x7d]
---
0x955 JUMPDEST
0x956 POP
0x957 POP
0x958 JUMP
---
0x955: JUMPDEST 
0x958: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V170, V172]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x959
[0x959:0x96f]
---
Predecessors: [0x200]
Successors: [0x970, 0x974]
---
0x959 JUMPDEST
0x95a PUSH1 0x0
0x95c SLOAD
0x95d CALLER
0x95e PUSH1 0x1
0x960 PUSH1 0xa0
0x962 PUSH1 0x2
0x964 EXP
0x965 SUB
0x966 SWAP1
0x967 DUP2
0x968 AND
0x969 SWAP2
0x96a AND
0x96b EQ
0x96c PUSH2 0x974
0x96f JUMPI
---
0x959: JUMPDEST 
0x95a: V873 = 0x0
0x95c: V874 = S[0x0]
0x95d: V875 = CALLER
0x95e: V876 = 0x1
0x960: V877 = 0xa0
0x962: V878 = 0x2
0x964: V879 = EXP 0x2 0xa0
0x965: V880 = SUB 0x10000000000000000000000000000000000000000 0x1
0x968: V881 = AND 0xffffffffffffffffffffffffffffffffffffffff V875
0x96a: V882 = AND V874 0xffffffffffffffffffffffffffffffffffffffff
0x96b: V883 = EQ V882 V881
0x96c: V884 = 0x974
0x96f: JUMPI 0x974 V883
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0x970
[0x970:0x973]
---
Predecessors: [0x959]
Successors: []
---
0x970 PUSH1 0x0
0x972 DUP1
0x973 REVERT
---
0x970: V885 = 0x0
0x973: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0x974
[0x974:0x984]
---
Predecessors: [0x959]
Successors: [0x985, 0x989]
---
0x974 JUMPDEST
0x975 PUSH1 0x1
0x977 PUSH1 0xa0
0x979 PUSH1 0x2
0x97b EXP
0x97c SUB
0x97d DUP3
0x97e AND
0x97f ISZERO
0x980 ISZERO
0x981 PUSH2 0x989
0x984 JUMPI
---
0x974: JUMPDEST 
0x975: V886 = 0x1
0x977: V887 = 0xa0
0x979: V888 = 0x2
0x97b: V889 = EXP 0x2 0xa0
0x97c: V890 = SUB 0x10000000000000000000000000000000000000000 0x1
0x97e: V891 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x97f: V892 = ISZERO V891
0x980: V893 = ISZERO V892
0x981: V894 = 0x989
0x984: JUMPI 0x989 V893
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0x985
[0x985:0x988]
---
Predecessors: [0x974]
Successors: []
---
0x985 PUSH1 0x0
0x987 DUP1
0x988 REVERT
---
0x985: V895 = 0x0
0x988: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0x989
[0x989:0xa66]
---
Predecessors: [0x974]
Successors: [0xa67, 0xa6b]
---
0x989 JUMPDEST
0x98a DUP3
0x98b PUSH1 0x1
0x98d PUSH1 0xa0
0x98f PUSH1 0x2
0x991 EXP
0x992 SUB
0x993 AND
0x994 PUSH1 0x40
0x996 MLOAD
0x997 PUSH32 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0x9b8 DUP2
0x9b9 MSTORE
0x9ba PUSH1 0x1e
0x9bc ADD
0x9bd PUSH1 0x40
0x9bf MLOAD
0x9c0 DUP1
0x9c1 SWAP2
0x9c2 SUB
0x9c3 SWAP1
0x9c4 SHA3
0x9c5 PUSH1 0xe0
0x9c7 PUSH1 0x2
0x9c9 EXP
0x9ca SWAP1
0x9cb DIV
0x9cc DUP4
0x9cd DUP4
0x9ce PUSH1 0x40
0x9d0 MLOAD
0x9d1 PUSH1 0xe0
0x9d3 PUSH1 0x2
0x9d5 EXP
0x9d6 PUSH4 0xffffffff
0x9db DUP6
0x9dc AND
0x9dd MUL
0x9de DUP2
0x9df MSTORE
0x9e0 PUSH1 0x1
0x9e2 PUSH1 0xa0
0x9e4 PUSH1 0x2
0x9e6 EXP
0x9e7 SUB
0x9e8 SWAP1
0x9e9 SWAP3
0x9ea AND
0x9eb PUSH1 0x4
0x9ed DUP4
0x9ee ADD
0x9ef MSTORE
0x9f0 PUSH1 0x24
0x9f2 DUP3
0x9f3 ADD
0x9f4 MSTORE
0x9f5 PUSH1 0x44
0x9f7 ADD
0x9f8 PUSH1 0x0
0x9fa PUSH1 0x40
0x9fc MLOAD
0x9fd DUP1
0x9fe DUP4
0x9ff SUB
0xa00 DUP2
0xa01 PUSH1 0x0
0xa03 DUP8
0xa04 PUSH2 0x646e
0xa07 GAS
0xa08 SUB
0xa09 CALL
0xa0a SWAP3
0xa0b POP
0xa0c POP
0xa0d POP
0xa0e POP
0xa0f DUP2
0xa10 PUSH1 0x1
0xa12 PUSH1 0xa0
0xa14 PUSH1 0x2
0xa16 EXP
0xa17 SUB
0xa18 AND
0xa19 PUSH4 0xa9059cbb
0xa1e DUP5
0xa1f DUP4
0xa20 PUSH1 0x0
0xa22 PUSH1 0x40
0xa24 MLOAD
0xa25 PUSH1 0x20
0xa27 ADD
0xa28 MSTORE
0xa29 PUSH1 0x40
0xa2b MLOAD
0xa2c PUSH1 0xe0
0xa2e PUSH1 0x2
0xa30 EXP
0xa31 PUSH4 0xffffffff
0xa36 DUP6
0xa37 AND
0xa38 MUL
0xa39 DUP2
0xa3a MSTORE
0xa3b PUSH1 0x1
0xa3d PUSH1 0xa0
0xa3f PUSH1 0x2
0xa41 EXP
0xa42 SUB
0xa43 SWAP1
0xa44 SWAP3
0xa45 AND
0xa46 PUSH1 0x4
0xa48 DUP4
0xa49 ADD
0xa4a MSTORE
0xa4b PUSH1 0x24
0xa4d DUP3
0xa4e ADD
0xa4f MSTORE
0xa50 PUSH1 0x44
0xa52 ADD
0xa53 PUSH1 0x20
0xa55 PUSH1 0x40
0xa57 MLOAD
0xa58 DUP1
0xa59 DUP4
0xa5a SUB
0xa5b DUP2
0xa5c PUSH1 0x0
0xa5e DUP8
0xa5f DUP1
0xa60 EXTCODESIZE
0xa61 ISZERO
0xa62 ISZERO
0xa63 PUSH2 0xa6b
0xa66 JUMPI
---
0x989: JUMPDEST 
0x98b: V896 = 0x1
0x98d: V897 = 0xa0
0x98f: V898 = 0x2
0x991: V899 = EXP 0x2 0xa0
0x992: V900 = SUB 0x10000000000000000000000000000000000000000 0x1
0x993: V901 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x994: V902 = 0x40
0x996: V903 = M[0x40]
0x997: V904 = 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0x9b9: M[V903] = 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0x9ba: V905 = 0x1e
0x9bc: V906 = ADD 0x1e V903
0x9bd: V907 = 0x40
0x9bf: V908 = M[0x40]
0x9c2: V909 = SUB V906 V908
0x9c4: V910 = SHA3 V908 V909
0x9c5: V911 = 0xe0
0x9c7: V912 = 0x2
0x9c9: V913 = EXP 0x2 0xe0
0x9cb: V914 = DIV V910 0x100000000000000000000000000000000000000000000000000000000
0x9ce: V915 = 0x40
0x9d0: V916 = M[0x40]
0x9d1: V917 = 0xe0
0x9d3: V918 = 0x2
0x9d5: V919 = EXP 0x2 0xe0
0x9d6: V920 = 0xffffffff
0x9dc: V921 = AND V914 0xffffffff
0x9dd: V922 = MUL V921 0x100000000000000000000000000000000000000000000000000000000
0x9df: M[V916] = V922
0x9e0: V923 = 0x1
0x9e2: V924 = 0xa0
0x9e4: V925 = 0x2
0x9e6: V926 = EXP 0x2 0xa0
0x9e7: V927 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ea: V928 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x9eb: V929 = 0x4
0x9ee: V930 = ADD V916 0x4
0x9ef: M[V930] = V928
0x9f0: V931 = 0x24
0x9f3: V932 = ADD V916 0x24
0x9f4: M[V932] = V191
0x9f5: V933 = 0x44
0x9f7: V934 = ADD 0x44 V916
0x9f8: V935 = 0x0
0x9fa: V936 = 0x40
0x9fc: V937 = M[0x40]
0x9ff: V938 = SUB V934 V937
0xa01: V939 = 0x0
0xa04: V940 = 0x646e
0xa07: V941 = GAS
0xa08: V942 = SUB V941 0x646e
0xa09: V943 = CALL V942 V901 0x0 V937 V938 V937 0x0
0xa10: V944 = 0x1
0xa12: V945 = 0xa0
0xa14: V946 = 0x2
0xa16: V947 = EXP 0x2 0xa0
0xa17: V948 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa18: V949 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0xa19: V950 = 0xa9059cbb
0xa20: V951 = 0x0
0xa22: V952 = 0x40
0xa24: V953 = M[0x40]
0xa25: V954 = 0x20
0xa27: V955 = ADD 0x20 V953
0xa28: M[V955] = 0x0
0xa29: V956 = 0x40
0xa2b: V957 = M[0x40]
0xa2c: V958 = 0xe0
0xa2e: V959 = 0x2
0xa30: V960 = EXP 0x2 0xe0
0xa31: V961 = 0xffffffff
0xa37: V962 = AND 0xa9059cbb 0xffffffff
0xa38: V963 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xa3a: M[V957] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa3b: V964 = 0x1
0xa3d: V965 = 0xa0
0xa3f: V966 = 0x2
0xa41: V967 = EXP 0x2 0xa0
0xa42: V968 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa45: V969 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0xa46: V970 = 0x4
0xa49: V971 = ADD V957 0x4
0xa4a: M[V971] = V969
0xa4b: V972 = 0x24
0xa4e: V973 = ADD V957 0x24
0xa4f: M[V973] = V191
0xa50: V974 = 0x44
0xa52: V975 = ADD 0x44 V957
0xa53: V976 = 0x20
0xa55: V977 = 0x40
0xa57: V978 = M[0x40]
0xa5a: V979 = SUB V975 V978
0xa5c: V980 = 0x0
0xa60: V981 = EXTCODESIZE V949
0xa61: V982 = ISZERO V981
0xa62: V983 = ISZERO V982
0xa63: V984 = 0xa6b
0xa66: JUMPI 0xa6b V983
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 3
Stack additions: [S2, S1, S0, V949, 0xa9059cbb, V975, 0x20, V978, V979, V978, 0x0, V949]
Exit stack: [V12, 0x7d, V186, V189, V191, V949, 0xa9059cbb, V975, 0x20, V978, V979, V978, 0x0, V949]

================================

Block 0xa67
[0xa67:0xa6a]
---
Predecessors: [0x989]
Successors: []
---
0xa67 PUSH1 0x0
0xa69 DUP1
0xa6a REVERT
---
0xa67: V985 = 0x0
0xa6a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V186, V189, V191, V949, 0xa9059cbb, V975, 0x20, V978, V979, V978, 0x0, V949]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191, V949, 0xa9059cbb, V975, 0x20, V978, V979, V978, 0x0, V949]

================================

Block 0xa6b
[0xa6b:0xa77]
---
Predecessors: [0x989]
Successors: [0xa78, 0xa7c]
---
0xa6b JUMPDEST
0xa6c PUSH2 0x2c6
0xa6f GAS
0xa70 SUB
0xa71 CALL
0xa72 ISZERO
0xa73 ISZERO
0xa74 PUSH2 0xa7c
0xa77 JUMPI
---
0xa6b: JUMPDEST 
0xa6c: V986 = 0x2c6
0xa6f: V987 = GAS
0xa70: V988 = SUB V987 0x2c6
0xa71: V989 = CALL V988 V949 0x0 V978 V979 V978 0x20
0xa72: V990 = ISZERO V989
0xa73: V991 = ISZERO V990
0xa74: V992 = 0xa7c
0xa77: JUMPI 0xa7c V991
---
Entry stack: [V12, 0x7d, V186, V189, V191, V949, 0xa9059cbb, V975, 0x20, V978, V979, V978, 0x0, V949]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191, V949, 0xa9059cbb, V975]

================================

Block 0xa78
[0xa78:0xa7b]
---
Predecessors: [0xa6b]
Successors: []
---
0xa78 PUSH1 0x0
0xa7a DUP1
0xa7b REVERT
---
0xa78: V993 = 0x0
0xa7b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V186, V189, V191, V949, 0xa9059cbb, V975]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191, V949, 0xa9059cbb, V975]

================================

Block 0xa7c
[0xa7c:0xa8c]
---
Predecessors: [0xa6b]
Successors: [0xa8d, 0xa91]
---
0xa7c JUMPDEST
0xa7d POP
0xa7e POP
0xa7f POP
0xa80 PUSH1 0x40
0xa82 MLOAD
0xa83 DUP1
0xa84 MLOAD
0xa85 SWAP1
0xa86 POP
0xa87 ISZERO
0xa88 ISZERO
0xa89 PUSH2 0xa91
0xa8c JUMPI
---
0xa7c: JUMPDEST 
0xa80: V994 = 0x40
0xa82: V995 = M[0x40]
0xa84: V996 = M[V995]
0xa87: V997 = ISZERO V996
0xa88: V998 = ISZERO V997
0xa89: V999 = 0xa91
0xa8c: JUMPI 0xa91 V998
---
Entry stack: [V12, 0x7d, V186, V189, V191, V949, 0xa9059cbb, V975]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0xa8d
[0xa8d:0xa90]
---
Predecessors: [0xa7c]
Successors: []
---
0xa8d PUSH1 0x0
0xa8f DUP1
0xa90 REVERT
---
0xa8d: V1000 = 0x0
0xa90: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0xa91
[0xa91:0xa91]
---
Predecessors: [0xa7c]
Successors: [0xa92]
---
0xa91 JUMPDEST
---
0xa91: JUMPDEST 
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0xa92
[0xa92:0xa96]
---
Predecessors: [0xa91]
Successors: [0x7d]
---
0xa92 JUMPDEST
0xa93 POP
0xa94 POP
0xa95 POP
0xa96 JUMP
---
0xa92: JUMPDEST 
0xa96: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0xa97
[0xa97:0xaad]
---
Predecessors: [0x22a]
Successors: [0xaae, 0xab2]
---
0xa97 JUMPDEST
0xa98 PUSH1 0x0
0xa9a SLOAD
0xa9b CALLER
0xa9c PUSH1 0x1
0xa9e PUSH1 0xa0
0xaa0 PUSH1 0x2
0xaa2 EXP
0xaa3 SUB
0xaa4 SWAP1
0xaa5 DUP2
0xaa6 AND
0xaa7 SWAP2
0xaa8 AND
0xaa9 EQ
0xaaa PUSH2 0xab2
0xaad JUMPI
---
0xa97: JUMPDEST 
0xa98: V1001 = 0x0
0xa9a: V1002 = S[0x0]
0xa9b: V1003 = CALLER
0xa9c: V1004 = 0x1
0xa9e: V1005 = 0xa0
0xaa0: V1006 = 0x2
0xaa2: V1007 = EXP 0x2 0xa0
0xaa3: V1008 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa6: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V1003
0xaa8: V1010 = AND V1002 0xffffffffffffffffffffffffffffffffffffffff
0xaa9: V1011 = EQ V1010 V1009
0xaaa: V1012 = 0xab2
0xaad: JUMPI 0xab2 V1011
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0xaae
[0xaae:0xab1]
---
Predecessors: [0xa97]
Successors: []
---
0xaae PUSH1 0x0
0xab0 DUP1
0xab1 REVERT
---
0xaae: V1013 = 0x0
0xab1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0xab2
[0xab2:0xbe7]
---
Predecessors: [0xa97]
Successors: [0xbe8, 0xbe9]
---
0xab2 JUMPDEST
0xab3 DUP12
0xab4 PUSH1 0x1
0xab6 PUSH1 0xa0
0xab8 PUSH1 0x2
0xaba EXP
0xabb SUB
0xabc AND
0xabd PUSH1 0x40
0xabf MLOAD
0xac0 DUP1
0xac1 DUP1
0xac2 PUSH32 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0xae3 DUP2
0xae4 MSTORE
0xae5 PUSH1 0x20
0xae7 ADD
0xae8 PUSH32 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0xb09 DUP2
0xb0a MSTORE
0xb0b PUSH1 0x20
0xb0d ADD
0xb0e PUSH32 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0xb2f DUP2
0xb30 MSTORE
0xb31 POP
0xb32 PUSH1 0x5c
0xb34 ADD
0xb35 SWAP1
0xb36 POP
0xb37 PUSH1 0x40
0xb39 MLOAD
0xb3a DUP1
0xb3b SWAP2
0xb3c SUB
0xb3d SWAP1
0xb3e SHA3
0xb3f PUSH1 0xe0
0xb41 PUSH1 0x2
0xb43 EXP
0xb44 SWAP1
0xb45 DIV
0xb46 DUP13
0xb47 DUP13
0xb48 DUP13
0xb49 DUP13
0xb4a DUP13
0xb4b DUP13
0xb4c DUP13
0xb4d DUP13
0xb4e DUP13
0xb4f DUP13
0xb50 DUP13
0xb51 PUSH1 0x40
0xb53 MLOAD
0xb54 PUSH1 0xe0
0xb56 PUSH1 0x2
0xb58 EXP
0xb59 PUSH4 0xffffffff
0xb5e DUP15
0xb5f AND
0xb60 MUL
0xb61 DUP2
0xb62 MSTORE
0xb63 PUSH1 0x1
0xb65 PUSH1 0xa0
0xb67 PUSH1 0x2
0xb69 EXP
0xb6a SUB
0xb6b SWAP12
0xb6c DUP13
0xb6d AND
0xb6e PUSH1 0x4
0xb70 DUP3
0xb71 ADD
0xb72 MSTORE
0xb73 PUSH1 0x24
0xb75 DUP2
0xb76 ADD
0xb77 SWAP11
0xb78 SWAP1
0xb79 SWAP11
0xb7a MSTORE
0xb7b SWAP8
0xb7c DUP11
0xb7d AND
0xb7e PUSH1 0x44
0xb80 DUP11
0xb81 ADD
0xb82 MSTORE
0xb83 PUSH1 0x64
0xb85 DUP10
0xb86 ADD
0xb87 SWAP7
0xb88 SWAP1
0xb89 SWAP7
0xb8a MSTORE
0xb8b PUSH1 0x84
0xb8d DUP9
0xb8e ADD
0xb8f SWAP5
0xb90 SWAP1
0xb91 SWAP5
0xb92 MSTORE
0xb93 PUSH1 0xa4
0xb95 DUP8
0xb96 ADD
0xb97 SWAP3
0xb98 SWAP1
0xb99 SWAP3
0xb9a MSTORE
0xb9b SWAP1
0xb9c SWAP6
0xb9d AND
0xb9e PUSH1 0xc4
0xba0 DUP6
0xba1 ADD
0xba2 MSTORE
0xba3 PUSH1 0xff
0xba5 SWAP1
0xba6 SWAP5
0xba7 AND
0xba8 PUSH1 0xe4
0xbaa DUP5
0xbab ADD
0xbac MSTORE
0xbad PUSH2 0x104
0xbb0 DUP4
0xbb1 ADD
0xbb2 SWAP4
0xbb3 SWAP1
0xbb4 SWAP4
0xbb5 MSTORE
0xbb6 PUSH2 0x124
0xbb9 DUP3
0xbba ADD
0xbbb SWAP3
0xbbc SWAP1
0xbbd SWAP3
0xbbe MSTORE
0xbbf PUSH2 0x144
0xbc2 DUP2
0xbc3 ADD
0xbc4 SWAP2
0xbc5 SWAP1
0xbc6 SWAP2
0xbc7 MSTORE
0xbc8 PUSH2 0x164
0xbcb ADD
0xbcc PUSH1 0x0
0xbce PUSH1 0x40
0xbd0 MLOAD
0xbd1 DUP1
0xbd2 DUP4
0xbd3 SUB
0xbd4 DUP2
0xbd5 PUSH1 0x0
0xbd7 DUP8
0xbd8 PUSH2 0x646e
0xbdb GAS
0xbdc SUB
0xbdd CALL
0xbde SWAP3
0xbdf POP
0xbe0 POP
0xbe1 POP
0xbe2 ISZERO
0xbe3 ISZERO
0xbe4 PUSH2 0xbe9
0xbe7 JUMPI
---
0xab2: JUMPDEST 
0xab4: V1014 = 0x1
0xab6: V1015 = 0xa0
0xab8: V1016 = 0x2
0xaba: V1017 = EXP 0x2 0xa0
0xabb: V1018 = SUB 0x10000000000000000000000000000000000000000 0x1
0xabc: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0xabd: V1020 = 0x40
0xabf: V1021 = M[0x40]
0xac2: V1022 = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0xae4: M[V1021] = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0xae5: V1023 = 0x20
0xae7: V1024 = ADD 0x20 V1021
0xae8: V1025 = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0xb0a: M[V1024] = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0xb0b: V1026 = 0x20
0xb0d: V1027 = ADD 0x20 V1024
0xb0e: V1028 = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0xb30: M[V1027] = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0xb32: V1029 = 0x5c
0xb34: V1030 = ADD 0x5c V1021
0xb37: V1031 = 0x40
0xb39: V1032 = M[0x40]
0xb3c: V1033 = SUB V1030 V1032
0xb3e: V1034 = SHA3 V1032 V1033
0xb3f: V1035 = 0xe0
0xb41: V1036 = 0x2
0xb43: V1037 = EXP 0x2 0xe0
0xb45: V1038 = DIV V1034 0x100000000000000000000000000000000000000000000000000000000
0xb51: V1039 = 0x40
0xb53: V1040 = M[0x40]
0xb54: V1041 = 0xe0
0xb56: V1042 = 0x2
0xb58: V1043 = EXP 0x2 0xe0
0xb59: V1044 = 0xffffffff
0xb5f: V1045 = AND V1038 0xffffffff
0xb60: V1046 = MUL V1045 0x100000000000000000000000000000000000000000000000000000000
0xb62: M[V1040] = V1046
0xb63: V1047 = 0x1
0xb65: V1048 = 0xa0
0xb67: V1049 = 0x2
0xb69: V1050 = EXP 0x2 0xa0
0xb6a: V1051 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6d: V1052 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0xb6e: V1053 = 0x4
0xb71: V1054 = ADD V1040 0x4
0xb72: M[V1054] = V1052
0xb73: V1055 = 0x24
0xb76: V1056 = ADD V1040 0x24
0xb7a: M[V1056] = V210
0xb7d: V1057 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0xb7e: V1058 = 0x44
0xb81: V1059 = ADD V1040 0x44
0xb82: M[V1059] = V1057
0xb83: V1060 = 0x64
0xb86: V1061 = ADD V1040 0x64
0xb8a: M[V1061] = V215
0xb8b: V1062 = 0x84
0xb8e: V1063 = ADD V1040 0x84
0xb92: M[V1063] = V217
0xb93: V1064 = 0xa4
0xb96: V1065 = ADD V1040 0xa4
0xb9a: M[V1065] = V219
0xb9d: V1066 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0xb9e: V1067 = 0xc4
0xba1: V1068 = ADD V1040 0xc4
0xba2: M[V1068] = V1066
0xba3: V1069 = 0xff
0xba7: V1070 = AND V226 0xff
0xba8: V1071 = 0xe4
0xbab: V1072 = ADD V1040 0xe4
0xbac: M[V1072] = V1070
0xbad: V1073 = 0x104
0xbb1: V1074 = ADD V1040 0x104
0xbb5: M[V1074] = V228
0xbb6: V1075 = 0x124
0xbba: V1076 = ADD V1040 0x124
0xbbe: M[V1076] = V230
0xbbf: V1077 = 0x144
0xbc3: V1078 = ADD V1040 0x144
0xbc7: M[V1078] = V232
0xbc8: V1079 = 0x164
0xbcb: V1080 = ADD 0x164 V1040
0xbcc: V1081 = 0x0
0xbce: V1082 = 0x40
0xbd0: V1083 = M[0x40]
0xbd3: V1084 = SUB V1080 V1083
0xbd5: V1085 = 0x0
0xbd8: V1086 = 0x646e
0xbdb: V1087 = GAS
0xbdc: V1088 = SUB V1087 0x646e
0xbdd: V1089 = CALL V1088 V1019 0x0 V1083 V1084 V1083 0x0
0xbe2: V1090 = ISZERO V1089
0xbe3: V1091 = ISZERO V1090
0xbe4: V1092 = 0xbe9
0xbe7: JUMPI 0xbe9 V1091
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0xbe8
[0xbe8:0xbe8]
---
Predecessors: [0xab2]
Successors: []
---
0xbe8 INVALID
---
0xbe8: INVALID 
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0xbe9
[0xbe9:0xbe9]
---
Predecessors: [0xab2]
Successors: [0xbea]
---
0xbe9 JUMPDEST
---
0xbe9: JUMPDEST 
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0xbea
[0xbea:0xbf7]
---
Predecessors: [0xbe9]
Successors: [0x7d]
---
0xbea JUMPDEST
0xbeb POP
0xbec POP
0xbed POP
0xbee POP
0xbef POP
0xbf0 POP
0xbf1 POP
0xbf2 POP
0xbf3 POP
0xbf4 POP
0xbf5 POP
0xbf6 POP
0xbf7 JUMP
---
0xbea: JUMPDEST 
0xbf7: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0xbf8
[0xbf8:0xc0e]
---
Predecessors: [0x280]
Successors: [0xc0f, 0xc13]
---
0xbf8 JUMPDEST
0xbf9 PUSH1 0x0
0xbfb SLOAD
0xbfc CALLER
0xbfd PUSH1 0x1
0xbff PUSH1 0xa0
0xc01 PUSH1 0x2
0xc03 EXP
0xc04 SUB
0xc05 SWAP1
0xc06 DUP2
0xc07 AND
0xc08 SWAP2
0xc09 AND
0xc0a EQ
0xc0b PUSH2 0xc13
0xc0e JUMPI
---
0xbf8: JUMPDEST 
0xbf9: V1093 = 0x0
0xbfb: V1094 = S[0x0]
0xbfc: V1095 = CALLER
0xbfd: V1096 = 0x1
0xbff: V1097 = 0xa0
0xc01: V1098 = 0x2
0xc03: V1099 = EXP 0x2 0xa0
0xc04: V1100 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc07: V1101 = AND 0xffffffffffffffffffffffffffffffffffffffff V1095
0xc09: V1102 = AND V1094 0xffffffffffffffffffffffffffffffffffffffff
0xc0a: V1103 = EQ V1102 V1101
0xc0b: V1104 = 0xc13
0xc0e: JUMPI 0xc13 V1103
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0xc0f
[0xc0f:0xc12]
---
Predecessors: [0xbf8]
Successors: []
---
0xc0f PUSH1 0x0
0xc11 DUP1
0xc12 REVERT
---
0xc0f: V1105 = 0x0
0xc12: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0xc13
[0xc13:0xc23]
---
Predecessors: [0xbf8]
Successors: [0xc24, 0xc28]
---
0xc13 JUMPDEST
0xc14 PUSH1 0x1
0xc16 PUSH1 0xa0
0xc18 PUSH1 0x2
0xc1a EXP
0xc1b SUB
0xc1c DUP3
0xc1d AND
0xc1e ISZERO
0xc1f ISZERO
0xc20 PUSH2 0xc28
0xc23 JUMPI
---
0xc13: JUMPDEST 
0xc14: V1106 = 0x1
0xc16: V1107 = 0xa0
0xc18: V1108 = 0x2
0xc1a: V1109 = EXP 0x2 0xa0
0xc1b: V1110 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1d: V1111 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0xc1e: V1112 = ISZERO V1111
0xc1f: V1113 = ISZERO V1112
0xc20: V1114 = 0xc28
0xc23: JUMPI 0xc28 V1113
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0xc24
[0xc24:0xc27]
---
Predecessors: [0xc13]
Successors: []
---
0xc24 PUSH1 0x0
0xc26 DUP1
0xc27 REVERT
---
0xc24: V1115 = 0x0
0xc27: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0xc28
[0xc28:0xcac]
---
Predecessors: [0xc13]
Successors: [0xcad]
---
0xc28 JUMPDEST
0xc29 DUP3
0xc2a PUSH1 0x1
0xc2c PUSH1 0xa0
0xc2e PUSH1 0x2
0xc30 EXP
0xc31 SUB
0xc32 AND
0xc33 PUSH1 0x40
0xc35 MLOAD
0xc36 PUSH32 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0xc57 DUP2
0xc58 MSTORE
0xc59 PUSH1 0x1e
0xc5b ADD
0xc5c PUSH1 0x40
0xc5e MLOAD
0xc5f DUP1
0xc60 SWAP2
0xc61 SUB
0xc62 SWAP1
0xc63 SHA3
0xc64 PUSH1 0xe0
0xc66 PUSH1 0x2
0xc68 EXP
0xc69 SWAP1
0xc6a DIV
0xc6b DUP4
0xc6c DUP4
0xc6d PUSH1 0x40
0xc6f MLOAD
0xc70 PUSH1 0xe0
0xc72 PUSH1 0x2
0xc74 EXP
0xc75 PUSH4 0xffffffff
0xc7a DUP6
0xc7b AND
0xc7c MUL
0xc7d DUP2
0xc7e MSTORE
0xc7f PUSH1 0x1
0xc81 PUSH1 0xa0
0xc83 PUSH1 0x2
0xc85 EXP
0xc86 SUB
0xc87 SWAP1
0xc88 SWAP3
0xc89 AND
0xc8a PUSH1 0x4
0xc8c DUP4
0xc8d ADD
0xc8e MSTORE
0xc8f PUSH1 0x24
0xc91 DUP3
0xc92 ADD
0xc93 MSTORE
0xc94 PUSH1 0x44
0xc96 ADD
0xc97 PUSH1 0x0
0xc99 PUSH1 0x40
0xc9b MLOAD
0xc9c DUP1
0xc9d DUP4
0xc9e SUB
0xc9f DUP2
0xca0 PUSH1 0x0
0xca2 DUP8
0xca3 PUSH2 0x646e
0xca6 GAS
0xca7 SUB
0xca8 CALL
0xca9 POP
0xcaa POP
0xcab POP
0xcac POP
---
0xc28: JUMPDEST 
0xc2a: V1116 = 0x1
0xc2c: V1117 = 0xa0
0xc2e: V1118 = 0x2
0xc30: V1119 = EXP 0x2 0xa0
0xc31: V1120 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc32: V1121 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0xc33: V1122 = 0x40
0xc35: V1123 = M[0x40]
0xc36: V1124 = 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0xc58: M[V1123] = 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0xc59: V1125 = 0x1e
0xc5b: V1126 = ADD 0x1e V1123
0xc5c: V1127 = 0x40
0xc5e: V1128 = M[0x40]
0xc61: V1129 = SUB V1126 V1128
0xc63: V1130 = SHA3 V1128 V1129
0xc64: V1131 = 0xe0
0xc66: V1132 = 0x2
0xc68: V1133 = EXP 0x2 0xe0
0xc6a: V1134 = DIV V1130 0x100000000000000000000000000000000000000000000000000000000
0xc6d: V1135 = 0x40
0xc6f: V1136 = M[0x40]
0xc70: V1137 = 0xe0
0xc72: V1138 = 0x2
0xc74: V1139 = EXP 0x2 0xe0
0xc75: V1140 = 0xffffffff
0xc7b: V1141 = AND V1134 0xffffffff
0xc7c: V1142 = MUL V1141 0x100000000000000000000000000000000000000000000000000000000
0xc7e: M[V1136] = V1142
0xc7f: V1143 = 0x1
0xc81: V1144 = 0xa0
0xc83: V1145 = 0x2
0xc85: V1146 = EXP 0x2 0xa0
0xc86: V1147 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc89: V1148 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0xc8a: V1149 = 0x4
0xc8d: V1150 = ADD V1136 0x4
0xc8e: M[V1150] = V1148
0xc8f: V1151 = 0x24
0xc92: V1152 = ADD V1136 0x24
0xc93: M[V1152] = V251
0xc94: V1153 = 0x44
0xc96: V1154 = ADD 0x44 V1136
0xc97: V1155 = 0x0
0xc99: V1156 = 0x40
0xc9b: V1157 = M[0x40]
0xc9e: V1158 = SUB V1154 V1157
0xca0: V1159 = 0x0
0xca3: V1160 = 0x646e
0xca6: V1161 = GAS
0xca7: V1162 = SUB V1161 0x646e
0xca8: V1163 = CALL V1162 V1121 0x0 V1157 V1158 V1157 0x0
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0xcad
[0xcad:0xcb1]
---
Predecessors: [0xc28]
Successors: [0x7d]
---
0xcad JUMPDEST
0xcae POP
0xcaf POP
0xcb0 POP
0xcb1 JUMP
---
0xcad: JUMPDEST 
0xcb1: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb2
[0xcb2:0xcc0]
---
Predecessors: [0x2aa]
Successors: [0x2b2]
---
0xcb2 JUMPDEST
0xcb3 PUSH1 0x0
0xcb5 SLOAD
0xcb6 PUSH1 0x1
0xcb8 PUSH1 0xa0
0xcba PUSH1 0x2
0xcbc EXP
0xcbd SUB
0xcbe AND
0xcbf DUP2
0xcc0 JUMP
---
0xcb2: JUMPDEST 
0xcb3: V1164 = 0x0
0xcb5: V1165 = S[0x0]
0xcb6: V1166 = 0x1
0xcb8: V1167 = 0xa0
0xcba: V1168 = 0x2
0xcbc: V1169 = EXP 0x2 0xa0
0xcbd: V1170 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcbe: V1171 = AND 0xffffffffffffffffffffffffffffffffffffffff V1165
0xcc0: JUMP 0x2b2
---
Entry stack: [V12, 0x2b2]
Stack pops: 1
Stack additions: [S0, V1171]
Exit stack: [V12, 0x2b2, V1171]

================================

Block 0xcc1
[0xcc1:0xd01]
---
Predecessors: []
Successors: []
---
0xcc1 STOP
0xcc2 LOG1
0xcc3 PUSH6 0x627a7a723058
0xcca SHA3
0xccb MISSING 0xcd
0xccc MISSING 0x5d
0xccd DUP16
0xcce EQ
0xccf MISSING 0x1e
0xcd0 PUSH19 0xb8225cb90d5d38ccdf381b89223b6fd31e95a2
0xce4 MISSING 0xec
0xce5 MUL
0xce6 PUSH27 0x7813d4b40029
---
0xcc1: STOP 
0xcc2: LOG S0 S1 S2
0xcc3: V1172 = 0x627a7a723058
0xcca: V1173 = SHA3 0x627a7a723058 S3
0xccb: MISSING 0xcd
0xccc: MISSING 0x5d
0xcce: V1174 = EQ S15 S0
0xccf: MISSING 0x1e
0xcd0: V1175 = 0xb8225cb90d5d38ccdf381b89223b6fd31e95a2
0xce4: MISSING 0xec
0xce5: V1176 = MUL S0 S1
0xce6: V1177 = 0x7813d4b40029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1173, V1174, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0xb8225cb90d5d38ccdf381b89223b6fd31e95a2, 0x7813d4b40029, V1176]
Exit stack: []

================================

Function 0:
Public function signature: 0x158ab5ba
Entry block: 0x81
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x81, 0x88, 0x8c, 0x2ce, 0x2e5, 0x2e9, 0x2fa, 0x2fe, 0x357, 0x35b, 0x368, 0x36c, 0x37d, 0x381, 0x382

Function 1:
Public function signature: 0x513bd11b
Entry block: 0xa5
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0xa5, 0xac, 0xb0, 0x386, 0x39d, 0x3a1, 0x3b4, 0x3b8, 0x3e2, 0x3e6, 0x3e7

Function 2:
Public function signature: 0x7831ce79
Entry block: 0xbd
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0xbd, 0xc4, 0xc8, 0x3ea, 0x401, 0x405, 0x4a4, 0x4a5, 0x4bb, 0x4bc, 0x4d2, 0x4d3, 0x4e9, 0x4ea, 0x500, 0x501, 0x517, 0x518, 0x52e, 0x52f, 0x546, 0x547, 0x55d, 0x55e, 0x574, 0x575, 0x617, 0x618, 0x6b7, 0x6b8, 0x6ce, 0x6cf, 0x6e5, 0x6e6, 0x6fc, 0x6fd, 0x713, 0x714, 0x72a, 0x72b, 0x741, 0x742, 0x759, 0x75a, 0x770, 0x771, 0x787, 0x788, 0x82a, 0x82b, 0x82c

Function 3:
Public function signature: 0x8afc141c
Entry block: 0x1ad
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1ad, 0x1b4, 0x1b8, 0x834, 0x84b, 0x84f, 0x8bf

Function 4:
Public function signature: 0x9a588c06
Entry block: 0x1d1
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1d1, 0x1d8, 0x1dc, 0x8c3, 0x8da, 0x8de, 0x955

Function 5:
Public function signature: 0xace30bea
Entry block: 0x1f5
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1f5, 0x1fc, 0x200, 0x959, 0x970, 0x974, 0x985, 0x989, 0xa67, 0xa6b, 0xa78, 0xa7c, 0xa8d, 0xa91, 0xa92

Function 6:
Public function signature: 0xb5a4b539
Entry block: 0x21f
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x21f, 0x226, 0x22a, 0xa97, 0xaae, 0xab2, 0xbe8, 0xbe9, 0xbea

Function 7:
Public function signature: 0xda03d507
Entry block: 0x275
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x275, 0x27c, 0x280, 0xbf8, 0xc0f, 0xc13, 0xc24, 0xc28, 0xcad

Function 8:
Public function signature: 0xf851a440
Entry block: 0x29f
Exit block: 0x2b2
Body: 0x29f, 0x2a6, 0x2aa, 0x2b2, 0xcb2

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f

