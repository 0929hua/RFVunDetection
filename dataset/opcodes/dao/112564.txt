Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1998aeef
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1998aeef
0x3c: V13 = EQ 0x1998aeef V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x5b]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0x5b
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0x5b
0x4b: JUMPI 0x5b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x70]
---
0x51 JUMPDEST
0x52 PUSH2 0x59
0x55 PUSH2 0x70
0x58 JUMP
---
0x51: JUMPDEST 
0x52: V19 = 0x59
0x55: V20 = 0x70
0x58: JUMP 0x70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x59]
Exit stack: [V11, 0x59]

================================

Block 0x59
[0x59:0x5a]
---
Predecessors: [0x1ab]
Successors: []
---
0x59 JUMPDEST
0x5a STOP
---
0x59: JUMPDEST 
0x5a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b
[0x5b:0x61]
---
Predecessors: [0x41]
Successors: [0x62, 0x66]
---
0x5b JUMPDEST
0x5c CALLVALUE
0x5d ISZERO
0x5e PUSH2 0x66
0x61 JUMPI
---
0x5b: JUMPDEST 
0x5c: V21 = CALLVALUE
0x5d: V22 = ISZERO V21
0x5e: V23 = 0x66
0x61: JUMPI 0x66 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x62
[0x62:0x65]
---
Predecessors: [0x5b]
Successors: []
---
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0x6d]
---
Predecessors: [0x5b]
Successors: [0x1ae]
---
0x66 JUMPDEST
0x67 PUSH2 0x6e
0x6a PUSH2 0x1ae
0x6d JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x6e
0x6a: V26 = 0x1ae
0x6d: JUMP 0x1ae
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V11, 0x6e]

================================

Block 0x6e
[0x6e:0x6f]
---
Predecessors: [0x261]
Successors: []
---
0x6e JUMPDEST
0x6f STOP
---
0x6e: JUMPDEST 
0x6f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x70
[0x70:0x178]
---
Predecessors: [0x51]
Successors: [0x179, 0x17d]
---
0x70 JUMPDEST
0x71 PUSH1 0x0
0x73 ADDRESS
0x74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89 AND
0x8a BALANCE
0x8b SWAP1
0x8c POP
0x8d PUSH1 0x0
0x8f DUP1
0x90 SWAP1
0x91 SLOAD
0x92 SWAP1
0x93 PUSH2 0x100
0x96 EXP
0x97 SWAP1
0x98 DIV
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 PUSH7 0x2386f26fc10000
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 DUP1
0xd1 DUP1
0xd2 PUSH32 0x6265742829000000000000000000000000000000000000000000000000000000
0xf3 DUP2
0xf4 MSTORE
0xf5 POP
0xf6 PUSH1 0x5
0xf8 ADD
0xf9 SWAP1
0xfa POP
0xfb PUSH1 0x40
0xfd MLOAD
0xfe DUP1
0xff SWAP2
0x100 SUB
0x101 SWAP1
0x102 SHA3
0x103 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x121 SWAP1
0x122 DIV
0x123 SWAP1
0x124 PUSH1 0x0
0x126 PUSH1 0x40
0x128 MLOAD
0x129 DUP4
0x12a PUSH4 0xffffffff
0x12f AND
0x130 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x14e MUL
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x4
0x153 ADD
0x154 DUP1
0x155 DUP3
0x156 PUSH1 0xff
0x158 AND
0x159 DUP2
0x15a MSTORE
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP2
0x15f POP
0x160 POP
0x161 PUSH1 0x0
0x163 PUSH1 0x40
0x165 MLOAD
0x166 DUP1
0x167 DUP4
0x168 SUB
0x169 DUP2
0x16a DUP6
0x16b DUP9
0x16c GAS
0x16d CALL
0x16e SWAP4
0x16f POP
0x170 POP
0x171 POP
0x172 POP
0x173 ISZERO
0x174 ISZERO
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x70: JUMPDEST 
0x71: V27 = 0x0
0x73: V28 = ADDRESS
0x74: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x89: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x8a: V31 = BALANCE V30
0x8d: V32 = 0x0
0x91: V33 = S[0x0]
0x93: V34 = 0x100
0x96: V35 = EXP 0x100 0x0
0x98: V36 = DIV V33 0x1
0x99: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xaf: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xc5: V41 = 0x2386f26fc10000
0xcd: V42 = 0x40
0xcf: V43 = M[0x40]
0xd2: V44 = 0x6265742829000000000000000000000000000000000000000000000000000000
0xf4: M[V43] = 0x6265742829000000000000000000000000000000000000000000000000000000
0xf6: V45 = 0x5
0xf8: V46 = ADD 0x5 V43
0xfb: V47 = 0x40
0xfd: V48 = M[0x40]
0x100: V49 = SUB V46 V48
0x102: V50 = SHA3 V48 V49
0x103: V51 = 0x100000000000000000000000000000000000000000000000000000000
0x122: V52 = DIV V50 0x100000000000000000000000000000000000000000000000000000000
0x124: V53 = 0x0
0x126: V54 = 0x40
0x128: V55 = M[0x40]
0x12a: V56 = 0xffffffff
0x12f: V57 = AND 0xffffffff V52
0x130: V58 = 0x100000000000000000000000000000000000000000000000000000000
0x14e: V59 = MUL 0x100000000000000000000000000000000000000000000000000000000 V57
0x150: M[V55] = V59
0x151: V60 = 0x4
0x153: V61 = ADD 0x4 V55
0x156: V62 = 0xff
0x158: V63 = AND 0xff 0x0
0x15a: M[V61] = 0x0
0x15b: V64 = 0x20
0x15d: V65 = ADD 0x20 V61
0x161: V66 = 0x0
0x163: V67 = 0x40
0x165: V68 = M[0x40]
0x168: V69 = SUB V65 V68
0x16c: V70 = GAS
0x16d: V71 = CALL V70 V40 0x2386f26fc10000 V68 V69 V68 0x0
0x173: V72 = ISZERO V71
0x174: V73 = ISZERO V72
0x175: V74 = 0x17d
0x178: JUMPI 0x17d V73
---
Entry stack: [V11, 0x59]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, 0x59, V31]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x70]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V75 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x59, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x59, V31]

================================

Block 0x17d
[0x17d:0x1a6]
---
Predecessors: [0x70]
Successors: [0x1a7, 0x1ab]
---
0x17d JUMPDEST
0x17e PUSH7 0x354a6ba7a18000
0x186 DUP2
0x187 ADD
0x188 ADDRESS
0x189 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19e AND
0x19f BALANCE
0x1a0 GT
0x1a1 ISZERO
0x1a2 ISZERO
0x1a3 PUSH2 0x1ab
0x1a6 JUMPI
---
0x17d: JUMPDEST 
0x17e: V76 = 0x354a6ba7a18000
0x187: V77 = ADD V31 0x354a6ba7a18000
0x188: V78 = ADDRESS
0x189: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x19f: V81 = BALANCE V80
0x1a0: V82 = GT V81 V77
0x1a1: V83 = ISZERO V82
0x1a2: V84 = ISZERO V83
0x1a3: V85 = 0x1ab
0x1a6: JUMPI 0x1ab V84
---
Entry stack: [V11, 0x59, V31]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x59, V31]

================================

Block 0x1a7
[0x1a7:0x1aa]
---
Predecessors: [0x17d]
Successors: []
---
0x1a7 PUSH1 0x0
0x1a9 DUP1
0x1aa REVERT
---
0x1a7: V86 = 0x0
0x1aa: REVERT 0x0 0x0
---
Entry stack: [V11, 0x59, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x59, V31]

================================

Block 0x1ab
[0x1ab:0x1ad]
---
Predecessors: [0x17d]
Successors: [0x59]
---
0x1ab JUMPDEST
0x1ac POP
0x1ad JUMP
---
0x1ab: JUMPDEST 
0x1ad: JUMP 0x59
---
Entry stack: [V11, 0x59, V31]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ae
[0x1ae:0x205]
---
Predecessors: [0x66]
Successors: [0x206, 0x20a]
---
0x1ae JUMPDEST
0x1af PUSH1 0x1
0x1b1 PUSH1 0x0
0x1b3 SWAP1
0x1b4 SLOAD
0x1b5 SWAP1
0x1b6 PUSH2 0x100
0x1b9 EXP
0x1ba SWAP1
0x1bb DIV
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e7 AND
0x1e8 CALLER
0x1e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fe AND
0x1ff EQ
0x200 ISZERO
0x201 ISZERO
0x202 PUSH2 0x20a
0x205 JUMPI
---
0x1ae: JUMPDEST 
0x1af: V87 = 0x1
0x1b1: V88 = 0x0
0x1b4: V89 = S[0x1]
0x1b6: V90 = 0x100
0x1b9: V91 = EXP 0x100 0x0
0x1bb: V92 = DIV V89 0x1
0x1bc: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1d2: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e7: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1e8: V97 = CALLER
0x1e9: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1ff: V100 = EQ V99 V96
0x200: V101 = ISZERO V100
0x201: V102 = ISZERO V101
0x202: V103 = 0x20a
0x205: JUMPI 0x20a V102
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x206
[0x206:0x209]
---
Predecessors: [0x1ae]
Successors: []
---
0x206 PUSH1 0x0
0x208 DUP1
0x209 REVERT
---
0x206: V104 = 0x0
0x209: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x20a
[0x20a:0x25c]
---
Predecessors: [0x1ae]
Successors: [0x25d, 0x261]
---
0x20a JUMPDEST
0x20b CALLER
0x20c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x221 AND
0x222 PUSH2 0x8fc
0x225 ADDRESS
0x226 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23b AND
0x23c BALANCE
0x23d SWAP1
0x23e DUP2
0x23f ISZERO
0x240 MUL
0x241 SWAP1
0x242 PUSH1 0x40
0x244 MLOAD
0x245 PUSH1 0x0
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b DUP4
0x24c SUB
0x24d DUP2
0x24e DUP6
0x24f DUP9
0x250 DUP9
0x251 CALL
0x252 SWAP4
0x253 POP
0x254 POP
0x255 POP
0x256 POP
0x257 ISZERO
0x258 ISZERO
0x259 PUSH2 0x261
0x25c JUMPI
---
0x20a: JUMPDEST 
0x20b: V105 = CALLER
0x20c: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x221: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x222: V108 = 0x8fc
0x225: V109 = ADDRESS
0x226: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x23c: V112 = BALANCE V111
0x23f: V113 = ISZERO V112
0x240: V114 = MUL V113 0x8fc
0x242: V115 = 0x40
0x244: V116 = M[0x40]
0x245: V117 = 0x0
0x247: V118 = 0x40
0x249: V119 = M[0x40]
0x24c: V120 = SUB V116 V119
0x251: V121 = CALL V114 V107 V112 V119 V120 V119 0x0
0x257: V122 = ISZERO V121
0x258: V123 = ISZERO V122
0x259: V124 = 0x261
0x25c: JUMPI 0x261 V123
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x25d
[0x25d:0x260]
---
Predecessors: [0x20a]
Successors: []
---
0x25d PUSH1 0x0
0x25f DUP1
0x260 REVERT
---
0x25d: V125 = 0x0
0x260: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x261
[0x261:0x262]
---
Predecessors: [0x20a]
Successors: [0x6e]
---
0x261 JUMPDEST
0x262 JUMP
---
0x261: JUMPDEST 
0x262: JUMP 0x6e
---
Entry stack: [V11, 0x6e]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x263
[0x263:0x28f]
---
Predecessors: []
Successors: []
---
0x263 STOP
0x264 LOG1
0x265 PUSH6 0x627a7a723058
0x26c SHA3
0x26d MISSING 0xac
0x26e DUP4
0x26f PUSH9 0x592c89400762e288de
0x279 PUSH22 0xedf0b8be46c08b54e673d7a5bedc17797aa8110029
---
0x263: STOP 
0x264: LOG S0 S1 S2
0x265: V126 = 0x627a7a723058
0x26c: V127 = SHA3 0x627a7a723058 S3
0x26d: MISSING 0xac
0x26f: V128 = 0x592c89400762e288de
0x279: V129 = 0xedf0b8be46c08b54e673d7a5bedc17797aa8110029
---
Entry stack: []
Stack pops: 0
Stack additions: [V127, 0xedf0b8be46c08b54e673d7a5bedc17797aa8110029, 0x592c89400762e288de, S3, S0, S1, S2, S3]
Exit stack: []

================================

Function 0:
Public function signature: 0x1998aeef
Entry block: 0x51
Exit block: 0x59
Body: 0x51, 0x59, 0x70, 0x179, 0x17d, 0x1a7, 0x1ab

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x5b
Exit block: 0x6e
Body: 0x5b, 0x62, 0x66, 0x6e, 0x1ae, 0x206, 0x20a, 0x25d, 0x261

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

