Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x81]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x158ab5ba
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x81
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x158ab5ba
0x20: V14 = EQ V12 0x158ab5ba
0x21: V15 = 0x81
0x24: JUMPI 0x81 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xa5]
---
0x25 DUP1
0x26 PUSH4 0x513bd11b
0x2b EQ
0x2c PUSH2 0xa5
0x2f JUMPI
---
0x26: V16 = 0x513bd11b
0x2b: V17 = EQ 0x513bd11b V12
0x2c: V18 = 0xa5
0x2f: JUMPI 0xa5 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xbd]
---
0x30 DUP1
0x31 PUSH4 0x7831ce79
0x36 EQ
0x37 PUSH2 0xbd
0x3a JUMPI
---
0x31: V19 = 0x7831ce79
0x36: V20 = EQ 0x7831ce79 V12
0x37: V21 = 0xbd
0x3a: JUMPI 0xbd V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1ad]
---
0x3b DUP1
0x3c PUSH4 0x8afc141c
0x41 EQ
0x42 PUSH2 0x1ad
0x45 JUMPI
---
0x3c: V22 = 0x8afc141c
0x41: V23 = EQ 0x8afc141c V12
0x42: V24 = 0x1ad
0x45: JUMPI 0x1ad V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1d1]
---
0x46 DUP1
0x47 PUSH4 0x9a588c06
0x4c EQ
0x4d PUSH2 0x1d1
0x50 JUMPI
---
0x47: V25 = 0x9a588c06
0x4c: V26 = EQ 0x9a588c06 V12
0x4d: V27 = 0x1d1
0x50: JUMPI 0x1d1 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1f5]
---
0x51 DUP1
0x52 PUSH4 0xace30bea
0x57 EQ
0x58 PUSH2 0x1f5
0x5b JUMPI
---
0x52: V28 = 0xace30bea
0x57: V29 = EQ 0xace30bea V12
0x58: V30 = 0x1f5
0x5b: JUMPI 0x1f5 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x21f]
---
0x5c DUP1
0x5d PUSH4 0xb5a4b539
0x62 EQ
0x63 PUSH2 0x21f
0x66 JUMPI
---
0x5d: V31 = 0xb5a4b539
0x62: V32 = EQ 0xb5a4b539 V12
0x63: V33 = 0x21f
0x66: JUMPI 0x21f V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x275]
---
0x67 DUP1
0x68 PUSH4 0xda03d507
0x6d EQ
0x6e PUSH2 0x275
0x71 JUMPI
---
0x68: V34 = 0xda03d507
0x6d: V35 = EQ 0xda03d507 V12
0x6e: V36 = 0x275
0x71: JUMPI 0x275 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x29f]
---
0x72 DUP1
0x73 PUSH4 0xf851a440
0x78 EQ
0x79 PUSH2 0x29f
0x7c JUMPI
---
0x73: V37 = 0xf851a440
0x78: V38 = EQ 0xf851a440 V12
0x79: V39 = 0x29f
0x7c: JUMPI 0x29f V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x0, 0x72, 0x382, 0x3e7, 0x832, 0x8c5, 0x95b, 0xa13, 0xb6e, 0xc31]
Successors: [0x7e]
---
0x7d JUMPDEST
---
0x7d: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e
[0x7e:0x7e]
---
Predecessors: [0x7d]
Successors: [0x7f]
---
0x7e JUMPDEST
---
0x7e: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x7e]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81
[0x81:0x87]
---
Predecessors: [0xb]
Successors: [0x88, 0x8c]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 ISZERO
0x84 PUSH2 0x8c
0x87 JUMPI
---
0x81: JUMPDEST 
0x82: V40 = CALLVALUE
0x83: V41 = ISZERO V40
0x84: V42 = 0x8c
0x87: JUMPI 0x8c V41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x81]
Successors: []
---
0x88 PUSH1 0x0
0x8a DUP1
0x8b REVERT
---
0x88: V43 = 0x0
0x8b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0xa2]
---
Predecessors: [0x81]
Successors: [0x2ce]
---
0x8c JUMPDEST
0x8d PUSH2 0x7d
0x90 PUSH1 0x1
0x92 PUSH1 0xa0
0x94 PUSH1 0x2
0x96 EXP
0x97 SUB
0x98 PUSH1 0x4
0x9a CALLDATALOAD
0x9b AND
0x9c PUSH1 0x24
0x9e CALLDATALOAD
0x9f PUSH2 0x2ce
0xa2 JUMP
---
0x8c: JUMPDEST 
0x8d: V44 = 0x7d
0x90: V45 = 0x1
0x92: V46 = 0xa0
0x94: V47 = 0x2
0x96: V48 = EXP 0x2 0xa0
0x97: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98: V50 = 0x4
0x9a: V51 = CALLDATALOAD 0x4
0x9b: V52 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V53 = 0x24
0x9e: V54 = CALLDATALOAD 0x24
0x9f: V55 = 0x2ce
0xa2: JUMP 0x2ce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V52, V54]
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: []
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa5
[0xa5:0xab]
---
Predecessors: [0x25]
Successors: [0xac, 0xb0]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa5: JUMPDEST 
0xa6: V56 = CALLVALUE
0xa7: V57 = ISZERO V56
0xa8: V58 = 0xb0
0xab: JUMPI 0xb0 V57
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa5]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V59 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb0
[0xb0:0xba]
---
Predecessors: [0xa5]
Successors: [0x386]
---
0xb0 JUMPDEST
0xb1 PUSH2 0x7d
0xb4 PUSH1 0x4
0xb6 CALLDATALOAD
0xb7 PUSH2 0x386
0xba JUMP
---
0xb0: JUMPDEST 
0xb1: V60 = 0x7d
0xb4: V61 = 0x4
0xb6: V62 = CALLDATALOAD 0x4
0xb7: V63 = 0x386
0xba: JUMP 0x386
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V62]
Exit stack: [V12, 0x7d, V62]

================================

Block 0xbb
[0xbb:0xbc]
---
Predecessors: []
Successors: []
---
0xbb JUMPDEST
0xbc STOP
---
0xbb: JUMPDEST 
0xbc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbd
[0xbd:0xc3]
---
Predecessors: [0x30]
Successors: [0xc4, 0xc8]
---
0xbd JUMPDEST
0xbe CALLVALUE
0xbf ISZERO
0xc0 PUSH2 0xc8
0xc3 JUMPI
---
0xbd: JUMPDEST 
0xbe: V64 = CALLVALUE
0xbf: V65 = ISZERO V64
0xc0: V66 = 0xc8
0xc3: JUMPI 0xc8 V65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc4
[0xc4:0xc7]
---
Predecessors: [0xbd]
Successors: []
---
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 REVERT
---
0xc4: V67 = 0x0
0xc7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc8
[0xc8:0x1aa]
---
Predecessors: [0xbd]
Successors: [0x3ea]
---
0xc8 JUMPDEST
0xc9 PUSH2 0x7d
0xcc PUSH1 0x4
0xce DUP1
0xcf CALLDATALOAD
0xd0 PUSH1 0x1
0xd2 PUSH1 0xa0
0xd4 PUSH1 0x2
0xd6 EXP
0xd7 SUB
0xd8 AND
0xd9 SWAP1
0xda PUSH1 0x24
0xdc DUP1
0xdd CALLDATALOAD
0xde PUSH1 0xff
0xe0 SWAP1
0xe1 DUP2
0xe2 AND
0xe3 SWAP3
0xe4 PUSH1 0x44
0xe6 CALLDATALOAD
0xe7 SWAP1
0xe8 SWAP2
0xe9 AND
0xea SWAP2
0xeb PUSH1 0x84
0xed SWAP1
0xee PUSH1 0x64
0xf0 CALLDATALOAD
0xf1 SWAP1
0xf2 DUP2
0xf3 ADD
0xf4 SWAP1
0xf5 DUP4
0xf6 ADD
0xf7 CALLDATALOAD
0xf8 DUP1
0xf9 PUSH1 0x20
0xfb DUP1
0xfc DUP3
0xfd MUL
0xfe ADD
0xff PUSH1 0x40
0x101 MLOAD
0x102 SWAP1
0x103 DUP2
0x104 ADD
0x105 PUSH1 0x40
0x107 MSTORE
0x108 DUP1
0x109 SWAP4
0x10a SWAP3
0x10b SWAP2
0x10c SWAP1
0x10d DUP2
0x10e DUP2
0x10f MSTORE
0x110 PUSH1 0x20
0x112 ADD
0x113 DUP4
0x114 DUP4
0x115 PUSH1 0x20
0x117 MUL
0x118 DUP1
0x119 DUP3
0x11a DUP5
0x11b CALLDATACOPY
0x11c DUP3
0x11d ADD
0x11e SWAP2
0x11f POP
0x120 POP
0x121 POP
0x122 POP
0x123 POP
0x124 POP
0x125 SWAP2
0x126 SWAP1
0x127 DUP1
0x128 CALLDATALOAD
0x129 SWAP1
0x12a PUSH1 0x20
0x12c ADD
0x12d SWAP1
0x12e DUP3
0x12f ADD
0x130 DUP1
0x131 CALLDATALOAD
0x132 SWAP1
0x133 PUSH1 0x20
0x135 ADD
0x136 SWAP1
0x137 DUP1
0x138 DUP1
0x139 PUSH1 0x20
0x13b MUL
0x13c PUSH1 0x20
0x13e ADD
0x13f PUSH1 0x40
0x141 MLOAD
0x142 SWAP1
0x143 DUP2
0x144 ADD
0x145 PUSH1 0x40
0x147 MSTORE
0x148 DUP1
0x149 SWAP4
0x14a SWAP3
0x14b SWAP2
0x14c SWAP1
0x14d DUP2
0x14e DUP2
0x14f MSTORE
0x150 PUSH1 0x20
0x152 ADD
0x153 DUP4
0x154 DUP4
0x155 PUSH1 0x20
0x157 MUL
0x158 DUP1
0x159 DUP3
0x15a DUP5
0x15b CALLDATACOPY
0x15c DUP3
0x15d ADD
0x15e SWAP2
0x15f POP
0x160 POP
0x161 POP
0x162 POP
0x163 POP
0x164 POP
0x165 SWAP2
0x166 SWAP1
0x167 DUP1
0x168 CALLDATALOAD
0x169 SWAP1
0x16a PUSH1 0x20
0x16c ADD
0x16d SWAP1
0x16e DUP3
0x16f ADD
0x170 DUP1
0x171 CALLDATALOAD
0x172 SWAP1
0x173 PUSH1 0x20
0x175 ADD
0x176 SWAP1
0x177 DUP1
0x178 DUP1
0x179 PUSH1 0x20
0x17b MUL
0x17c PUSH1 0x20
0x17e ADD
0x17f PUSH1 0x40
0x181 MLOAD
0x182 SWAP1
0x183 DUP2
0x184 ADD
0x185 PUSH1 0x40
0x187 MSTORE
0x188 DUP1
0x189 SWAP4
0x18a SWAP3
0x18b SWAP2
0x18c SWAP1
0x18d DUP2
0x18e DUP2
0x18f MSTORE
0x190 PUSH1 0x20
0x192 ADD
0x193 DUP4
0x194 DUP4
0x195 PUSH1 0x20
0x197 MUL
0x198 DUP1
0x199 DUP3
0x19a DUP5
0x19b CALLDATACOPY
0x19c POP
0x19d SWAP5
0x19e SWAP7
0x19f POP
0x1a0 PUSH2 0x3ea
0x1a3 SWAP6
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 POP
0x1a8 POP
0x1a9 POP
0x1aa JUMP
---
0xc8: JUMPDEST 
0xc9: V68 = 0x7d
0xcc: V69 = 0x4
0xcf: V70 = CALLDATALOAD 0x4
0xd0: V71 = 0x1
0xd2: V72 = 0xa0
0xd4: V73 = 0x2
0xd6: V74 = EXP 0x2 0xa0
0xd7: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0xda: V77 = 0x24
0xdd: V78 = CALLDATALOAD 0x24
0xde: V79 = 0xff
0xe2: V80 = AND 0xff V78
0xe4: V81 = 0x44
0xe6: V82 = CALLDATALOAD 0x44
0xe9: V83 = AND 0xff V82
0xeb: V84 = 0x84
0xee: V85 = 0x64
0xf0: V86 = CALLDATALOAD 0x64
0xf3: V87 = ADD V86 0x24
0xf6: V88 = ADD 0x4 V86
0xf7: V89 = CALLDATALOAD V88
0xf9: V90 = 0x20
0xfd: V91 = MUL V89 0x20
0xfe: V92 = ADD V91 0x20
0xff: V93 = 0x40
0x101: V94 = M[0x40]
0x104: V95 = ADD V94 V92
0x105: V96 = 0x40
0x107: M[0x40] = V95
0x10f: M[V94] = V89
0x110: V97 = 0x20
0x112: V98 = ADD 0x20 V94
0x115: V99 = 0x20
0x117: V100 = MUL 0x20 V89
0x11b: CALLDATACOPY V98 V87 V100
0x11d: V101 = ADD V98 V100
0x128: V102 = CALLDATALOAD 0x84
0x12a: V103 = 0x20
0x12c: V104 = ADD 0x20 0x84
0x12f: V105 = ADD 0x4 V102
0x131: V106 = CALLDATALOAD V105
0x133: V107 = 0x20
0x135: V108 = ADD 0x20 V105
0x139: V109 = 0x20
0x13b: V110 = MUL 0x20 V106
0x13c: V111 = 0x20
0x13e: V112 = ADD 0x20 V110
0x13f: V113 = 0x40
0x141: V114 = M[0x40]
0x144: V115 = ADD V114 V112
0x145: V116 = 0x40
0x147: M[0x40] = V115
0x14f: M[V114] = V106
0x150: V117 = 0x20
0x152: V118 = ADD 0x20 V114
0x155: V119 = 0x20
0x157: V120 = MUL 0x20 V106
0x15b: CALLDATACOPY V118 V108 V120
0x15d: V121 = ADD V118 V120
0x168: V122 = CALLDATALOAD 0xa4
0x16a: V123 = 0x20
0x16c: V124 = ADD 0x20 0xa4
0x16f: V125 = ADD 0x4 V122
0x171: V126 = CALLDATALOAD V125
0x173: V127 = 0x20
0x175: V128 = ADD 0x20 V125
0x179: V129 = 0x20
0x17b: V130 = MUL 0x20 V126
0x17c: V131 = 0x20
0x17e: V132 = ADD 0x20 V130
0x17f: V133 = 0x40
0x181: V134 = M[0x40]
0x184: V135 = ADD V134 V132
0x185: V136 = 0x40
0x187: M[0x40] = V135
0x18f: M[V134] = V126
0x190: V137 = 0x20
0x192: V138 = ADD 0x20 V134
0x195: V139 = 0x20
0x197: V140 = MUL 0x20 V126
0x19b: CALLDATACOPY V138 V128 V140
0x1a0: V141 = 0x3ea
0x1aa: JUMP 0x3ea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V76, V80, V83, V94, V114, V134]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x1ab
[0x1ab:0x1ac]
---
Predecessors: []
Successors: []
---
0x1ab JUMPDEST
0x1ac STOP
---
0x1ab: JUMPDEST 
0x1ac: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ad
[0x1ad:0x1b3]
---
Predecessors: [0x3b]
Successors: [0x1b4, 0x1b8]
---
0x1ad JUMPDEST
0x1ae CALLVALUE
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V142 = CALLVALUE
0x1af: V143 = ISZERO V142
0x1b0: V144 = 0x1b8
0x1b3: JUMPI 0x1b8 V143
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x1ad]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V145 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b8
[0x1b8:0x1ce]
---
Predecessors: [0x1ad]
Successors: [0x83a]
---
0x1b8 JUMPDEST
0x1b9 PUSH2 0x7d
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 PUSH1 0x4
0x1c6 CALLDATALOAD
0x1c7 AND
0x1c8 PUSH1 0x24
0x1ca CALLDATALOAD
0x1cb PUSH2 0x83a
0x1ce JUMP
---
0x1b8: JUMPDEST 
0x1b9: V146 = 0x7d
0x1bc: V147 = 0x1
0x1be: V148 = 0xa0
0x1c0: V149 = 0x2
0x1c2: V150 = EXP 0x2 0xa0
0x1c3: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c4: V152 = 0x4
0x1c6: V153 = CALLDATALOAD 0x4
0x1c7: V154 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: V155 = 0x24
0x1ca: V156 = CALLDATALOAD 0x24
0x1cb: V157 = 0x83a
0x1ce: JUMP 0x83a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V154, V156]
Exit stack: [V12, 0x7d, V154, V156]

================================

Block 0x1cf
[0x1cf:0x1d0]
---
Predecessors: []
Successors: []
---
0x1cf JUMPDEST
0x1d0 STOP
---
0x1cf: JUMPDEST 
0x1d0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d1
[0x1d1:0x1d7]
---
Predecessors: [0x46]
Successors: [0x1d8, 0x1dc]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V158 = CALLVALUE
0x1d3: V159 = ISZERO V158
0x1d4: V160 = 0x1dc
0x1d7: JUMPI 0x1dc V159
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V161 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dc
[0x1dc:0x1f2]
---
Predecessors: [0x1d1]
Successors: [0x8c9]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x7d
0x1e0 PUSH1 0x1
0x1e2 PUSH1 0xa0
0x1e4 PUSH1 0x2
0x1e6 EXP
0x1e7 SUB
0x1e8 PUSH1 0x4
0x1ea CALLDATALOAD
0x1eb AND
0x1ec PUSH1 0x24
0x1ee CALLDATALOAD
0x1ef PUSH2 0x8c9
0x1f2 JUMP
---
0x1dc: JUMPDEST 
0x1dd: V162 = 0x7d
0x1e0: V163 = 0x1
0x1e2: V164 = 0xa0
0x1e4: V165 = 0x2
0x1e6: V166 = EXP 0x2 0xa0
0x1e7: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e8: V168 = 0x4
0x1ea: V169 = CALLDATALOAD 0x4
0x1eb: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V171 = 0x24
0x1ee: V172 = CALLDATALOAD 0x24
0x1ef: V173 = 0x8c9
0x1f2: JUMP 0x8c9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V170, V172]
Exit stack: [V12, 0x7d, V170, V172]

================================

Block 0x1f3
[0x1f3:0x1f4]
---
Predecessors: []
Successors: []
---
0x1f3 JUMPDEST
0x1f4 STOP
---
0x1f3: JUMPDEST 
0x1f4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f5
[0x1f5:0x1fb]
---
Predecessors: [0x51]
Successors: [0x1fc, 0x200]
---
0x1f5 JUMPDEST
0x1f6 CALLVALUE
0x1f7 ISZERO
0x1f8 PUSH2 0x200
0x1fb JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V174 = CALLVALUE
0x1f7: V175 = ISZERO V174
0x1f8: V176 = 0x200
0x1fb: JUMPI 0x200 V175
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fc
[0x1fc:0x1ff]
---
Predecessors: [0x1f5]
Successors: []
---
0x1fc PUSH1 0x0
0x1fe DUP1
0x1ff REVERT
---
0x1fc: V177 = 0x0
0x1ff: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x200
[0x200:0x21c]
---
Predecessors: [0x1f5]
Successors: [0x95f]
---
0x200 JUMPDEST
0x201 PUSH2 0x7d
0x204 PUSH1 0x1
0x206 PUSH1 0xa0
0x208 PUSH1 0x2
0x20a EXP
0x20b SUB
0x20c PUSH1 0x4
0x20e CALLDATALOAD
0x20f DUP2
0x210 AND
0x211 SWAP1
0x212 PUSH1 0x24
0x214 CALLDATALOAD
0x215 AND
0x216 PUSH1 0x44
0x218 CALLDATALOAD
0x219 PUSH2 0x95f
0x21c JUMP
---
0x200: JUMPDEST 
0x201: V178 = 0x7d
0x204: V179 = 0x1
0x206: V180 = 0xa0
0x208: V181 = 0x2
0x20a: V182 = EXP 0x2 0xa0
0x20b: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20c: V184 = 0x4
0x20e: V185 = CALLDATALOAD 0x4
0x210: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x212: V187 = 0x24
0x214: V188 = CALLDATALOAD 0x24
0x215: V189 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x216: V190 = 0x44
0x218: V191 = CALLDATALOAD 0x44
0x219: V192 = 0x95f
0x21c: JUMP 0x95f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V186, V189, V191]
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0x21d
[0x21d:0x21e]
---
Predecessors: []
Successors: []
---
0x21d JUMPDEST
0x21e STOP
---
0x21d: JUMPDEST 
0x21e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21f
[0x21f:0x225]
---
Predecessors: [0x5c]
Successors: [0x226, 0x22a]
---
0x21f JUMPDEST
0x220 CALLVALUE
0x221 ISZERO
0x222 PUSH2 0x22a
0x225 JUMPI
---
0x21f: JUMPDEST 
0x220: V193 = CALLVALUE
0x221: V194 = ISZERO V193
0x222: V195 = 0x22a
0x225: JUMPI 0x22a V194
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x21f]
Successors: []
---
0x226 PUSH1 0x0
0x228 DUP1
0x229 REVERT
---
0x226: V196 = 0x0
0x229: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22a
[0x22a:0x272]
---
Predecessors: [0x21f]
Successors: [0xa18]
---
0x22a JUMPDEST
0x22b PUSH2 0x7d
0x22e PUSH1 0x1
0x230 PUSH1 0xa0
0x232 PUSH1 0x2
0x234 EXP
0x235 SUB
0x236 PUSH1 0x4
0x238 CALLDATALOAD
0x239 DUP2
0x23a AND
0x23b SWAP1
0x23c PUSH1 0x24
0x23e CALLDATALOAD
0x23f DUP2
0x240 AND
0x241 SWAP1
0x242 PUSH1 0x44
0x244 CALLDATALOAD
0x245 SWAP1
0x246 PUSH1 0x64
0x248 CALLDATALOAD
0x249 DUP2
0x24a AND
0x24b SWAP1
0x24c PUSH1 0x84
0x24e CALLDATALOAD
0x24f SWAP1
0x250 PUSH1 0xa4
0x252 CALLDATALOAD
0x253 SWAP1
0x254 PUSH1 0xc4
0x256 CALLDATALOAD
0x257 SWAP1
0x258 PUSH1 0xe4
0x25a CALLDATALOAD
0x25b AND
0x25c PUSH1 0xff
0x25e PUSH2 0x104
0x261 CALLDATALOAD
0x262 AND
0x263 PUSH2 0x124
0x266 CALLDATALOAD
0x267 PUSH2 0x144
0x26a CALLDATALOAD
0x26b PUSH2 0x164
0x26e CALLDATALOAD
0x26f PUSH2 0xa18
0x272 JUMP
---
0x22a: JUMPDEST 
0x22b: V197 = 0x7d
0x22e: V198 = 0x1
0x230: V199 = 0xa0
0x232: V200 = 0x2
0x234: V201 = EXP 0x2 0xa0
0x235: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V203 = 0x4
0x238: V204 = CALLDATALOAD 0x4
0x23a: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x23c: V206 = 0x24
0x23e: V207 = CALLDATALOAD 0x24
0x240: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x242: V209 = 0x44
0x244: V210 = CALLDATALOAD 0x44
0x246: V211 = 0x64
0x248: V212 = CALLDATALOAD 0x64
0x24a: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x24c: V214 = 0x84
0x24e: V215 = CALLDATALOAD 0x84
0x250: V216 = 0xa4
0x252: V217 = CALLDATALOAD 0xa4
0x254: V218 = 0xc4
0x256: V219 = CALLDATALOAD 0xc4
0x258: V220 = 0xe4
0x25a: V221 = CALLDATALOAD 0xe4
0x25b: V222 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V223 = 0xff
0x25e: V224 = 0x104
0x261: V225 = CALLDATALOAD 0x104
0x262: V226 = AND V225 0xff
0x263: V227 = 0x124
0x266: V228 = CALLDATALOAD 0x124
0x267: V229 = 0x144
0x26a: V230 = CALLDATALOAD 0x144
0x26b: V231 = 0x164
0x26e: V232 = CALLDATALOAD 0x164
0x26f: V233 = 0xa18
0x272: JUMP 0xa18
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0x273
[0x273:0x274]
---
Predecessors: []
Successors: []
---
0x273 JUMPDEST
0x274 STOP
---
0x273: JUMPDEST 
0x274: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x275
[0x275:0x27b]
---
Predecessors: [0x67]
Successors: [0x27c, 0x280]
---
0x275 JUMPDEST
0x276 CALLVALUE
0x277 ISZERO
0x278 PUSH2 0x280
0x27b JUMPI
---
0x275: JUMPDEST 
0x276: V234 = CALLVALUE
0x277: V235 = ISZERO V234
0x278: V236 = 0x280
0x27b: JUMPI 0x280 V235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27c
[0x27c:0x27f]
---
Predecessors: [0x275]
Successors: []
---
0x27c PUSH1 0x0
0x27e DUP1
0x27f REVERT
---
0x27c: V237 = 0x0
0x27f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x280
[0x280:0x29c]
---
Predecessors: [0x275]
Successors: [0xb7c]
---
0x280 JUMPDEST
0x281 PUSH2 0x7d
0x284 PUSH1 0x1
0x286 PUSH1 0xa0
0x288 PUSH1 0x2
0x28a EXP
0x28b SUB
0x28c PUSH1 0x4
0x28e CALLDATALOAD
0x28f DUP2
0x290 AND
0x291 SWAP1
0x292 PUSH1 0x24
0x294 CALLDATALOAD
0x295 AND
0x296 PUSH1 0x44
0x298 CALLDATALOAD
0x299 PUSH2 0xb7c
0x29c JUMP
---
0x280: JUMPDEST 
0x281: V238 = 0x7d
0x284: V239 = 0x1
0x286: V240 = 0xa0
0x288: V241 = 0x2
0x28a: V242 = EXP 0x2 0xa0
0x28b: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28c: V244 = 0x4
0x28e: V245 = CALLDATALOAD 0x4
0x290: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x292: V247 = 0x24
0x294: V248 = CALLDATALOAD 0x24
0x295: V249 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x296: V250 = 0x44
0x298: V251 = CALLDATALOAD 0x44
0x299: V252 = 0xb7c
0x29c: JUMP 0xb7c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V246, V249, V251]
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0x29d
[0x29d:0x29e]
---
Predecessors: []
Successors: []
---
0x29d JUMPDEST
0x29e STOP
---
0x29d: JUMPDEST 
0x29e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29f
[0x29f:0x2a5]
---
Predecessors: [0x72]
Successors: [0x2a6, 0x2aa]
---
0x29f JUMPDEST
0x2a0 CALLVALUE
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V253 = CALLVALUE
0x2a1: V254 = ISZERO V253
0x2a2: V255 = 0x2aa
0x2a5: JUMPI 0x2aa V254
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x29f]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V256 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2aa
[0x2aa:0x2b1]
---
Predecessors: [0x29f]
Successors: [0xc36]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x2b2
0x2ae PUSH2 0xc36
0x2b1 JUMP
---
0x2aa: JUMPDEST 
0x2ab: V257 = 0x2b2
0x2ae: V258 = 0xc36
0x2b1: JUMP 0xc36
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b2]
Exit stack: [V12, 0x2b2]

================================

Block 0x2b2
[0x2b2:0x2cd]
---
Predecessors: [0xc36]
Successors: []
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 PUSH1 0x1
0x2b8 PUSH1 0xa0
0x2ba PUSH1 0x2
0x2bc EXP
0x2bd SUB
0x2be SWAP1
0x2bf SWAP2
0x2c0 AND
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 DUP1
0x2ca SWAP2
0x2cb SUB
0x2cc SWAP1
0x2cd RETURN
---
0x2b2: JUMPDEST 
0x2b3: V259 = 0x40
0x2b5: V260 = M[0x40]
0x2b6: V261 = 0x1
0x2b8: V262 = 0xa0
0x2ba: V263 = 0x2
0x2bc: V264 = EXP 0x2 0xa0
0x2bd: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c0: V266 = AND V1126 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: M[V260] = V266
0x2c3: V267 = 0x20
0x2c5: V268 = ADD 0x20 V260
0x2c6: V269 = 0x40
0x2c8: V270 = M[0x40]
0x2cb: V271 = SUB V268 V270
0x2cd: RETURN V270 V271
---
Entry stack: [V12, 0x2b2, V1126]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2b2]

================================

Block 0x2ce
[0x2ce:0x2e4]
---
Predecessors: [0x8c]
Successors: [0x2e5, 0x2e9]
---
0x2ce JUMPDEST
0x2cf PUSH1 0x0
0x2d1 SLOAD
0x2d2 CALLER
0x2d3 PUSH1 0x1
0x2d5 PUSH1 0xa0
0x2d7 PUSH1 0x2
0x2d9 EXP
0x2da SUB
0x2db SWAP1
0x2dc DUP2
0x2dd AND
0x2de SWAP2
0x2df AND
0x2e0 EQ
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2ce: JUMPDEST 
0x2cf: V272 = 0x0
0x2d1: V273 = S[0x0]
0x2d2: V274 = CALLER
0x2d3: V275 = 0x1
0x2d5: V276 = 0xa0
0x2d7: V277 = 0x2
0x2d9: V278 = EXP 0x2 0xa0
0x2da: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dd: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x2df: V281 = AND V273 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: V282 = EQ V281 V280
0x2e1: V283 = 0x2e9
0x2e4: JUMPI 0x2e9 V282
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2ce]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V284 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x2e9
[0x2e9:0x2f9]
---
Predecessors: [0x2ce]
Successors: [0x2fa, 0x2fe]
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x1
0x2ec PUSH1 0xa0
0x2ee PUSH1 0x2
0x2f0 EXP
0x2f1 SUB
0x2f2 DUP3
0x2f3 AND
0x2f4 ISZERO
0x2f5 ISZERO
0x2f6 PUSH2 0x2fe
0x2f9 JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V285 = 0x1
0x2ec: V286 = 0xa0
0x2ee: V287 = 0x2
0x2f0: V288 = EXP 0x2 0xa0
0x2f1: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f3: V290 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V291 = ISZERO V290
0x2f5: V292 = ISZERO V291
0x2f6: V293 = 0x2fe
0x2f9: JUMPI 0x2fe V292
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x2fa
[0x2fa:0x2fd]
---
Predecessors: [0x2e9]
Successors: []
---
0x2fa PUSH1 0x0
0x2fc DUP1
0x2fd REVERT
---
0x2fa: V294 = 0x0
0x2fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x2fe
[0x2fe:0x356]
---
Predecessors: [0x2e9]
Successors: [0x357, 0x35b]
---
0x2fe JUMPDEST
0x2ff DUP2
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 AND
0x309 PUSH4 0xa9059cbb
0x30e CALLER
0x30f DUP4
0x310 PUSH1 0x0
0x312 PUSH1 0x40
0x314 MLOAD
0x315 PUSH1 0x20
0x317 ADD
0x318 MSTORE
0x319 PUSH1 0x40
0x31b MLOAD
0x31c PUSH1 0xe0
0x31e PUSH1 0x2
0x320 EXP
0x321 PUSH4 0xffffffff
0x326 DUP6
0x327 AND
0x328 MUL
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x1
0x32d PUSH1 0xa0
0x32f PUSH1 0x2
0x331 EXP
0x332 SUB
0x333 SWAP1
0x334 SWAP3
0x335 AND
0x336 PUSH1 0x4
0x338 DUP4
0x339 ADD
0x33a MSTORE
0x33b PUSH1 0x24
0x33d DUP3
0x33e ADD
0x33f MSTORE
0x340 PUSH1 0x44
0x342 ADD
0x343 PUSH1 0x20
0x345 PUSH1 0x40
0x347 MLOAD
0x348 DUP1
0x349 DUP4
0x34a SUB
0x34b DUP2
0x34c PUSH1 0x0
0x34e DUP8
0x34f DUP1
0x350 EXTCODESIZE
0x351 ISZERO
0x352 ISZERO
0x353 PUSH2 0x35b
0x356 JUMPI
---
0x2fe: JUMPDEST 
0x300: V295 = 0x1
0x302: V296 = 0xa0
0x304: V297 = 0x2
0x306: V298 = EXP 0x2 0xa0
0x307: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x309: V301 = 0xa9059cbb
0x30e: V302 = CALLER
0x310: V303 = 0x0
0x312: V304 = 0x40
0x314: V305 = M[0x40]
0x315: V306 = 0x20
0x317: V307 = ADD 0x20 V305
0x318: M[V307] = 0x0
0x319: V308 = 0x40
0x31b: V309 = M[0x40]
0x31c: V310 = 0xe0
0x31e: V311 = 0x2
0x320: V312 = EXP 0x2 0xe0
0x321: V313 = 0xffffffff
0x327: V314 = AND 0xa9059cbb 0xffffffff
0x328: V315 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x32a: M[V309] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x32b: V316 = 0x1
0x32d: V317 = 0xa0
0x32f: V318 = 0x2
0x331: V319 = EXP 0x2 0xa0
0x332: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x335: V321 = AND V302 0xffffffffffffffffffffffffffffffffffffffff
0x336: V322 = 0x4
0x339: V323 = ADD V309 0x4
0x33a: M[V323] = V321
0x33b: V324 = 0x24
0x33e: V325 = ADD V309 0x24
0x33f: M[V325] = V54
0x340: V326 = 0x44
0x342: V327 = ADD 0x44 V309
0x343: V328 = 0x20
0x345: V329 = 0x40
0x347: V330 = M[0x40]
0x34a: V331 = SUB V327 V330
0x34c: V332 = 0x0
0x350: V333 = EXTCODESIZE V300
0x351: V334 = ISZERO V333
0x352: V335 = ISZERO V334
0x353: V336 = 0x35b
0x356: JUMPI 0x35b V335
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 2
Stack additions: [S1, S0, V300, 0xa9059cbb, V327, 0x20, V330, V331, V330, 0x0, V300]
Exit stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327, 0x20, V330, V331, V330, 0x0, V300]

================================

Block 0x357
[0x357:0x35a]
---
Predecessors: [0x2fe]
Successors: []
---
0x357 PUSH1 0x0
0x359 DUP1
0x35a REVERT
---
0x357: V337 = 0x0
0x35a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327, 0x20, V330, V331, V330, 0x0, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327, 0x20, V330, V331, V330, 0x0, V300]

================================

Block 0x35b
[0x35b:0x367]
---
Predecessors: [0x2fe]
Successors: [0x368, 0x36c]
---
0x35b JUMPDEST
0x35c PUSH2 0x2c6
0x35f GAS
0x360 SUB
0x361 CALL
0x362 ISZERO
0x363 ISZERO
0x364 PUSH2 0x36c
0x367 JUMPI
---
0x35b: JUMPDEST 
0x35c: V338 = 0x2c6
0x35f: V339 = GAS
0x360: V340 = SUB V339 0x2c6
0x361: V341 = CALL V340 V300 0x0 V330 V331 V330 0x20
0x362: V342 = ISZERO V341
0x363: V343 = ISZERO V342
0x364: V344 = 0x36c
0x367: JUMPI 0x36c V343
---
Entry stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327, 0x20, V330, V331, V330, 0x0, V300]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327]

================================

Block 0x368
[0x368:0x36b]
---
Predecessors: [0x35b]
Successors: []
---
0x368 PUSH1 0x0
0x36a DUP1
0x36b REVERT
---
0x368: V345 = 0x0
0x36b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327]

================================

Block 0x36c
[0x36c:0x37c]
---
Predecessors: [0x35b]
Successors: [0x37d, 0x381]
---
0x36c JUMPDEST
0x36d POP
0x36e POP
0x36f POP
0x370 PUSH1 0x40
0x372 MLOAD
0x373 DUP1
0x374 MLOAD
0x375 SWAP1
0x376 POP
0x377 ISZERO
0x378 ISZERO
0x379 PUSH2 0x381
0x37c JUMPI
---
0x36c: JUMPDEST 
0x370: V346 = 0x40
0x372: V347 = M[0x40]
0x374: V348 = M[V347]
0x377: V349 = ISZERO V348
0x378: V350 = ISZERO V349
0x379: V351 = 0x381
0x37c: JUMPI 0x381 V350
---
Entry stack: [V12, 0x7d, V52, V54, V300, 0xa9059cbb, V327]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x37d
[0x37d:0x380]
---
Predecessors: [0x36c]
Successors: []
---
0x37d PUSH1 0x0
0x37f DUP1
0x380 REVERT
---
0x37d: V352 = 0x0
0x380: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x381
[0x381:0x381]
---
Predecessors: [0x36c]
Successors: [0x382]
---
0x381 JUMPDEST
---
0x381: JUMPDEST 
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54]

================================

Block 0x382
[0x382:0x385]
---
Predecessors: [0x381]
Successors: [0x7d]
---
0x382 JUMPDEST
0x383 POP
0x384 POP
0x385 JUMP
---
0x382: JUMPDEST 
0x385: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V52, V54]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x386
[0x386:0x39c]
---
Predecessors: [0xb0]
Successors: [0x39d, 0x3a1]
---
0x386 JUMPDEST
0x387 PUSH1 0x0
0x389 SLOAD
0x38a CALLER
0x38b PUSH1 0x1
0x38d PUSH1 0xa0
0x38f PUSH1 0x2
0x391 EXP
0x392 SUB
0x393 SWAP1
0x394 DUP2
0x395 AND
0x396 SWAP2
0x397 AND
0x398 EQ
0x399 PUSH2 0x3a1
0x39c JUMPI
---
0x386: JUMPDEST 
0x387: V353 = 0x0
0x389: V354 = S[0x0]
0x38a: V355 = CALLER
0x38b: V356 = 0x1
0x38d: V357 = 0xa0
0x38f: V358 = 0x2
0x391: V359 = EXP 0x2 0xa0
0x392: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x395: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x397: V362 = AND V354 0xffffffffffffffffffffffffffffffffffffffff
0x398: V363 = EQ V362 V361
0x399: V364 = 0x3a1
0x39c: JUMPI 0x3a1 V363
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V62]

================================

Block 0x39d
[0x39d:0x3a0]
---
Predecessors: [0x386]
Successors: []
---
0x39d PUSH1 0x0
0x39f DUP1
0x3a0 REVERT
---
0x39d: V365 = 0x0
0x3a0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3a1
[0x3a1:0x3b3]
---
Predecessors: [0x386]
Successors: [0x3b4, 0x3b8]
---
0x3a1 JUMPDEST
0x3a2 DUP1
0x3a3 ADDRESS
0x3a4 PUSH1 0x1
0x3a6 PUSH1 0xa0
0x3a8 PUSH1 0x2
0x3aa EXP
0x3ab SUB
0x3ac AND
0x3ad BALANCE
0x3ae LT
0x3af ISZERO
0x3b0 PUSH2 0x3b8
0x3b3 JUMPI
---
0x3a1: JUMPDEST 
0x3a3: V366 = ADDRESS
0x3a4: V367 = 0x1
0x3a6: V368 = 0xa0
0x3a8: V369 = 0x2
0x3aa: V370 = EXP 0x2 0xa0
0x3ab: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ac: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x3ad: V373 = BALANCE V372
0x3ae: V374 = LT V373 V62
0x3af: V375 = ISZERO V374
0x3b0: V376 = 0x3b8
0x3b3: JUMPI 0x3b8 V375
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3b4
[0x3b4:0x3b7]
---
Predecessors: [0x3a1]
Successors: []
---
0x3b4 PUSH1 0x0
0x3b6 DUP1
0x3b7 REVERT
---
0x3b4: V377 = 0x0
0x3b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3b8
[0x3b8:0x3e1]
---
Predecessors: [0x3a1]
Successors: [0x3e2, 0x3e6]
---
0x3b8 JUMPDEST
0x3b9 CALLER
0x3ba PUSH1 0x1
0x3bc PUSH1 0xa0
0x3be PUSH1 0x2
0x3c0 EXP
0x3c1 SUB
0x3c2 AND
0x3c3 DUP2
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 PUSH1 0x0
0x3c9 PUSH1 0x40
0x3cb MLOAD
0x3cc DUP1
0x3cd DUP4
0x3ce SUB
0x3cf DUP2
0x3d0 DUP6
0x3d1 DUP8
0x3d2 PUSH2 0x8796
0x3d5 GAS
0x3d6 SUB
0x3d7 CALL
0x3d8 SWAP3
0x3d9 POP
0x3da POP
0x3db POP
0x3dc ISZERO
0x3dd ISZERO
0x3de PUSH2 0x3e6
0x3e1 JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V378 = CALLER
0x3ba: V379 = 0x1
0x3bc: V380 = 0xa0
0x3be: V381 = 0x2
0x3c0: V382 = EXP 0x2 0xa0
0x3c1: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c2: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x3c4: V385 = 0x40
0x3c6: V386 = M[0x40]
0x3c7: V387 = 0x0
0x3c9: V388 = 0x40
0x3cb: V389 = M[0x40]
0x3ce: V390 = SUB V386 V389
0x3d2: V391 = 0x8796
0x3d5: V392 = GAS
0x3d6: V393 = SUB V392 0x8796
0x3d7: V394 = CALL V393 V384 V62 V389 V390 V389 0x0
0x3dc: V395 = ISZERO V394
0x3dd: V396 = ISZERO V395
0x3de: V397 = 0x3e6
0x3e1: JUMPI 0x3e6 V396
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3e2
[0x3e2:0x3e5]
---
Predecessors: [0x3b8]
Successors: []
---
0x3e2 PUSH1 0x0
0x3e4 DUP1
0x3e5 REVERT
---
0x3e2: V398 = 0x0
0x3e5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3e6
[0x3e6:0x3e6]
---
Predecessors: [0x3b8]
Successors: [0x3e7]
---
0x3e6 JUMPDEST
---
0x3e6: JUMPDEST 
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V62]

================================

Block 0x3e7
[0x3e7:0x3e9]
---
Predecessors: [0x3e6]
Successors: [0x7d]
---
0x3e7 JUMPDEST
0x3e8 POP
0x3e9 JUMP
---
0x3e7: JUMPDEST 
0x3e9: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V62]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ea
[0x3ea:0x400]
---
Predecessors: [0xc8]
Successors: [0x401, 0x405]
---
0x3ea JUMPDEST
0x3eb PUSH1 0x0
0x3ed SLOAD
0x3ee CALLER
0x3ef PUSH1 0x1
0x3f1 PUSH1 0xa0
0x3f3 PUSH1 0x2
0x3f5 EXP
0x3f6 SUB
0x3f7 SWAP1
0x3f8 DUP2
0x3f9 AND
0x3fa SWAP2
0x3fb AND
0x3fc EQ
0x3fd PUSH2 0x405
0x400 JUMPI
---
0x3ea: JUMPDEST 
0x3eb: V399 = 0x0
0x3ed: V400 = S[0x0]
0x3ee: V401 = CALLER
0x3ef: V402 = 0x1
0x3f1: V403 = 0xa0
0x3f3: V404 = 0x2
0x3f5: V405 = EXP 0x2 0xa0
0x3f6: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f9: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x3fb: V408 = AND V400 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V409 = EQ V408 V407
0x3fd: V410 = 0x405
0x400: JUMPI 0x405 V409
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x401
[0x401:0x404]
---
Predecessors: [0x3ea]
Successors: []
---
0x401 PUSH1 0x0
0x403 DUP1
0x404 REVERT
---
0x401: V411 = 0x0
0x404: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x405
[0x405:0x4a3]
---
Predecessors: [0x3ea]
Successors: [0x4a4, 0x4a5]
---
0x405 JUMPDEST
0x406 DUP6
0x407 PUSH1 0x1
0x409 PUSH1 0xa0
0x40b PUSH1 0x2
0x40d EXP
0x40e SUB
0x40f AND
0x410 PUSH1 0x40
0x412 MLOAD
0x413 DUP1
0x414 DUP1
0x415 PUSH32 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x436 DUP2
0x437 MSTORE
0x438 PUSH1 0x20
0x43a ADD
0x43b PUSH32 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x45c DUP2
0x45d MSTORE
0x45e PUSH1 0x20
0x460 ADD
0x461 PUSH32 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x482 DUP2
0x483 MSTORE
0x484 POP
0x485 PUSH1 0x5c
0x487 ADD
0x488 SWAP1
0x489 POP
0x48a PUSH1 0x40
0x48c MLOAD
0x48d DUP1
0x48e SWAP2
0x48f SUB
0x490 SWAP1
0x491 SHA3
0x492 PUSH1 0xe0
0x494 PUSH1 0x2
0x496 EXP
0x497 SWAP1
0x498 DIV
0x499 DUP4
0x49a PUSH1 0x0
0x49c DUP2
0x49d MLOAD
0x49e DUP2
0x49f LT
0x4a0 PUSH2 0x4a5
0x4a3 JUMPI
---
0x405: JUMPDEST 
0x407: V412 = 0x1
0x409: V413 = 0xa0
0x40b: V414 = 0x2
0x40d: V415 = EXP 0x2 0xa0
0x40e: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40f: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x410: V418 = 0x40
0x412: V419 = M[0x40]
0x415: V420 = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x437: M[V419] = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x438: V421 = 0x20
0x43a: V422 = ADD 0x20 V419
0x43b: V423 = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x45d: M[V422] = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x45e: V424 = 0x20
0x460: V425 = ADD 0x20 V422
0x461: V426 = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x483: M[V425] = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x485: V427 = 0x5c
0x487: V428 = ADD 0x5c V419
0x48a: V429 = 0x40
0x48c: V430 = M[0x40]
0x48f: V431 = SUB V428 V430
0x491: V432 = SHA3 V430 V431
0x492: V433 = 0xe0
0x494: V434 = 0x2
0x496: V435 = EXP 0x2 0xe0
0x498: V436 = DIV V432 0x100000000000000000000000000000000000000000000000000000000
0x49a: V437 = 0x0
0x49d: V438 = M[V114]
0x49f: V439 = LT 0x0 V438
0x4a0: V440 = 0x4a5
0x4a3: JUMPI 0x4a5 V439
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V417, V436, S1, 0x0]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V114, 0x0]

================================

Block 0x4a4
[0x4a4:0x4a4]
---
Predecessors: [0x405]
Successors: []
---
0x4a4 INVALID
---
0x4a4: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V114, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V114, 0x0]

================================

Block 0x4a5
[0x4a5:0x4ba]
---
Predecessors: [0x405]
Successors: [0x4bb, 0x4bc]
---
0x4a5 JUMPDEST
0x4a6 SWAP1
0x4a7 PUSH1 0x20
0x4a9 ADD
0x4aa SWAP1
0x4ab PUSH1 0x20
0x4ad MUL
0x4ae ADD
0x4af MLOAD
0x4b0 DUP6
0x4b1 PUSH1 0x0
0x4b3 DUP2
0x4b4 MLOAD
0x4b5 DUP2
0x4b6 LT
0x4b7 PUSH2 0x4bc
0x4ba JUMPI
---
0x4a5: JUMPDEST 
0x4a7: V441 = 0x20
0x4a9: V442 = ADD 0x20 V114
0x4ab: V443 = 0x20
0x4ad: V444 = MUL 0x20 0x0
0x4ae: V445 = ADD 0x0 V442
0x4af: V446 = M[V445]
0x4b1: V447 = 0x0
0x4b4: V448 = M[V94]
0x4b6: V449 = LT 0x0 V448
0x4b7: V450 = 0x4bc
0x4ba: JUMPI 0x4bc V449
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V114, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V446, S6, 0x0]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V94, 0x0]

================================

Block 0x4bb
[0x4bb:0x4bb]
---
Predecessors: [0x4a5]
Successors: []
---
0x4bb INVALID
---
0x4bb: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V94, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V94, 0x0]

================================

Block 0x4bc
[0x4bc:0x4d1]
---
Predecessors: [0x4a5]
Successors: [0x4d2, 0x4d3]
---
0x4bc JUMPDEST
0x4bd SWAP1
0x4be PUSH1 0x20
0x4c0 ADD
0x4c1 SWAP1
0x4c2 PUSH1 0x20
0x4c4 MUL
0x4c5 ADD
0x4c6 MLOAD
0x4c7 DUP6
0x4c8 PUSH1 0x2
0x4ca DUP2
0x4cb MLOAD
0x4cc DUP2
0x4cd LT
0x4ce PUSH2 0x4d3
0x4d1 JUMPI
---
0x4bc: JUMPDEST 
0x4be: V451 = 0x20
0x4c0: V452 = ADD 0x20 V94
0x4c2: V453 = 0x20
0x4c4: V454 = MUL 0x20 0x0
0x4c5: V455 = ADD 0x0 V452
0x4c6: V456 = M[V455]
0x4c8: V457 = 0x2
0x4cb: V458 = M[V114]
0x4cd: V459 = LT 0x2 V458
0x4ce: V460 = 0x4d3
0x4d1: JUMPI 0x4d3 V459
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V94, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V456, S6, 0x2]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V114, 0x2]

================================

Block 0x4d2
[0x4d2:0x4d2]
---
Predecessors: [0x4bc]
Successors: []
---
0x4d2 INVALID
---
0x4d2: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V114, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V114, 0x2]

================================

Block 0x4d3
[0x4d3:0x4e8]
---
Predecessors: [0x4bc]
Successors: [0x4e9, 0x4ea]
---
0x4d3 JUMPDEST
0x4d4 SWAP1
0x4d5 PUSH1 0x20
0x4d7 ADD
0x4d8 SWAP1
0x4d9 PUSH1 0x20
0x4db MUL
0x4dc ADD
0x4dd MLOAD
0x4de DUP8
0x4df PUSH1 0x2
0x4e1 DUP2
0x4e2 MLOAD
0x4e3 DUP2
0x4e4 LT
0x4e5 PUSH2 0x4ea
0x4e8 JUMPI
---
0x4d3: JUMPDEST 
0x4d5: V461 = 0x20
0x4d7: V462 = ADD 0x20 V114
0x4d9: V463 = 0x20
0x4db: V464 = MUL 0x20 0x2
0x4dc: V465 = ADD 0x40 V462
0x4dd: V466 = M[V465]
0x4df: V467 = 0x2
0x4e2: V468 = M[V94]
0x4e4: V469 = LT 0x2 V468
0x4e5: V470 = 0x4ea
0x4e8: JUMPI 0x4ea V469
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V114, 0x2]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V466, S8, 0x2]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V94, 0x2]

================================

Block 0x4e9
[0x4e9:0x4e9]
---
Predecessors: [0x4d3]
Successors: []
---
0x4e9 INVALID
---
0x4e9: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V94, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V94, 0x2]

================================

Block 0x4ea
[0x4ea:0x4ff]
---
Predecessors: [0x4d3]
Successors: [0x500, 0x501]
---
0x4ea JUMPDEST
0x4eb SWAP1
0x4ec PUSH1 0x20
0x4ee ADD
0x4ef SWAP1
0x4f0 PUSH1 0x20
0x4f2 MUL
0x4f3 ADD
0x4f4 MLOAD
0x4f5 DUP9
0x4f6 PUSH1 0x4
0x4f8 DUP2
0x4f9 MLOAD
0x4fa DUP2
0x4fb LT
0x4fc PUSH2 0x501
0x4ff JUMPI
---
0x4ea: JUMPDEST 
0x4ec: V471 = 0x20
0x4ee: V472 = ADD 0x20 V94
0x4f0: V473 = 0x20
0x4f2: V474 = MUL 0x20 0x2
0x4f3: V475 = ADD 0x40 V472
0x4f4: V476 = M[V475]
0x4f6: V477 = 0x4
0x4f9: V478 = M[V94]
0x4fb: V479 = LT 0x4 V478
0x4fc: V480 = 0x501
0x4ff: JUMPI 0x501 V479
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V94, 0x2]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V476, S9, 0x4]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V94, 0x4]

================================

Block 0x500
[0x500:0x500]
---
Predecessors: [0x4ea]
Successors: []
---
0x500 INVALID
---
0x500: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V94, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V94, 0x4]

================================

Block 0x501
[0x501:0x516]
---
Predecessors: [0x4ea]
Successors: [0x517, 0x518]
---
0x501 JUMPDEST
0x502 SWAP1
0x503 PUSH1 0x20
0x505 ADD
0x506 SWAP1
0x507 PUSH1 0x20
0x509 MUL
0x50a ADD
0x50b MLOAD
0x50c DUP10
0x50d PUSH1 0x6
0x50f DUP2
0x510 MLOAD
0x511 DUP2
0x512 LT
0x513 PUSH2 0x518
0x516 JUMPI
---
0x501: JUMPDEST 
0x503: V481 = 0x20
0x505: V482 = ADD 0x20 V94
0x507: V483 = 0x20
0x509: V484 = MUL 0x20 0x4
0x50a: V485 = ADD 0x80 V482
0x50b: V486 = M[V485]
0x50d: V487 = 0x6
0x510: V488 = M[V94]
0x512: V489 = LT 0x6 V488
0x513: V490 = 0x518
0x516: JUMPI 0x518 V489
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V94, 0x4]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V486, S10, 0x6]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V94, 0x6]

================================

Block 0x517
[0x517:0x517]
---
Predecessors: [0x501]
Successors: []
---
0x517 INVALID
---
0x517: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V94, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V94, 0x6]

================================

Block 0x518
[0x518:0x52d]
---
Predecessors: [0x501]
Successors: [0x52e, 0x52f]
---
0x518 JUMPDEST
0x519 SWAP1
0x51a PUSH1 0x20
0x51c ADD
0x51d SWAP1
0x51e PUSH1 0x20
0x520 MUL
0x521 ADD
0x522 MLOAD
0x523 DUP10
0x524 PUSH1 0x4
0x526 DUP2
0x527 MLOAD
0x528 DUP2
0x529 LT
0x52a PUSH2 0x52f
0x52d JUMPI
---
0x518: JUMPDEST 
0x51a: V491 = 0x20
0x51c: V492 = ADD 0x20 V94
0x51e: V493 = 0x20
0x520: V494 = MUL 0x20 0x6
0x521: V495 = ADD 0xc0 V492
0x522: V496 = M[V495]
0x524: V497 = 0x4
0x527: V498 = M[V114]
0x529: V499 = LT 0x4 V498
0x52a: V500 = 0x52f
0x52d: JUMPI 0x52f V499
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V94, 0x6]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V496, S10, 0x4]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V114, 0x4]

================================

Block 0x52e
[0x52e:0x52e]
---
Predecessors: [0x518]
Successors: []
---
0x52e INVALID
---
0x52e: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V114, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V114, 0x4]

================================

Block 0x52f
[0x52f:0x545]
---
Predecessors: [0x518]
Successors: [0x546, 0x547]
---
0x52f JUMPDEST
0x530 SWAP1
0x531 PUSH1 0x20
0x533 ADD
0x534 SWAP1
0x535 PUSH1 0x20
0x537 MUL
0x538 ADD
0x539 MLOAD
0x53a DUP14
0x53b DUP11
0x53c PUSH1 0x0
0x53e DUP2
0x53f MLOAD
0x540 DUP2
0x541 LT
0x542 PUSH2 0x547
0x545 JUMPI
---
0x52f: JUMPDEST 
0x531: V501 = 0x20
0x533: V502 = ADD 0x20 V114
0x535: V503 = 0x20
0x537: V504 = MUL 0x20 0x4
0x538: V505 = ADD 0x80 V502
0x539: V506 = M[V505]
0x53c: V507 = 0x0
0x53f: V508 = M[V134]
0x541: V509 = LT 0x0 V508
0x542: V510 = 0x547
0x545: JUMPI 0x547 V509
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V114, 0x4]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V506, S14, S10, 0x0]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V134, 0x0]

================================

Block 0x546
[0x546:0x546]
---
Predecessors: [0x52f]
Successors: []
---
0x546 INVALID
---
0x546: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V134, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V134, 0x0]

================================

Block 0x547
[0x547:0x55c]
---
Predecessors: [0x52f]
Successors: [0x55d, 0x55e]
---
0x547 JUMPDEST
0x548 SWAP1
0x549 PUSH1 0x20
0x54b ADD
0x54c SWAP1
0x54d PUSH1 0x20
0x54f MUL
0x550 ADD
0x551 MLOAD
0x552 DUP12
0x553 PUSH1 0x2
0x555 DUP2
0x556 MLOAD
0x557 DUP2
0x558 LT
0x559 PUSH2 0x55e
0x55c JUMPI
---
0x547: JUMPDEST 
0x549: V511 = 0x20
0x54b: V512 = ADD 0x20 V134
0x54d: V513 = 0x20
0x54f: V514 = MUL 0x20 0x0
0x550: V515 = ADD 0x0 V512
0x551: V516 = M[V515]
0x553: V517 = 0x2
0x556: V518 = M[V134]
0x558: V519 = LT 0x2 V518
0x559: V520 = 0x55e
0x55c: JUMPI 0x55e V519
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V134, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V516, S12, 0x2]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V134, 0x2]

================================

Block 0x55d
[0x55d:0x55d]
---
Predecessors: [0x547]
Successors: []
---
0x55d INVALID
---
0x55d: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V134, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V134, 0x2]

================================

Block 0x55e
[0x55e:0x573]
---
Predecessors: [0x547]
Successors: [0x574, 0x575]
---
0x55e JUMPDEST
0x55f SWAP1
0x560 PUSH1 0x20
0x562 ADD
0x563 SWAP1
0x564 PUSH1 0x20
0x566 MUL
0x567 ADD
0x568 MLOAD
0x569 DUP15
0x56a PUSH1 0x8
0x56c DUP2
0x56d MLOAD
0x56e DUP2
0x56f LT
0x570 PUSH2 0x575
0x573 JUMPI
---
0x55e: JUMPDEST 
0x560: V521 = 0x20
0x562: V522 = ADD 0x20 V134
0x564: V523 = 0x20
0x566: V524 = MUL 0x20 0x2
0x567: V525 = ADD 0x40 V522
0x568: V526 = M[V525]
0x56a: V527 = 0x8
0x56d: V528 = M[V94]
0x56f: V529 = LT 0x8 V528
0x570: V530 = 0x575
0x573: JUMPI 0x575 V529
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V134, 0x2]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V526, S15, 0x8]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V526, V94, 0x8]

================================

Block 0x574
[0x574:0x574]
---
Predecessors: [0x55e]
Successors: []
---
0x574 INVALID
---
0x574: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V526, V94, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V526, V94, 0x8]

================================

Block 0x575
[0x575:0x616]
---
Predecessors: [0x55e]
Successors: [0x617, 0x61b]
---
0x575 JUMPDEST
0x576 SWAP1
0x577 PUSH1 0x20
0x579 ADD
0x57a SWAP1
0x57b PUSH1 0x20
0x57d MUL
0x57e ADD
0x57f MLOAD
0x580 PUSH1 0x40
0x582 MLOAD
0x583 PUSH1 0xe0
0x585 PUSH1 0x2
0x587 EXP
0x588 PUSH4 0xffffffff
0x58d DUP15
0x58e AND
0x58f MUL
0x590 DUP2
0x591 MSTORE
0x592 PUSH1 0x1
0x594 PUSH1 0xa0
0x596 PUSH1 0x2
0x598 EXP
0x599 SUB
0x59a SWAP12
0x59b DUP13
0x59c AND
0x59d PUSH1 0x4
0x59f DUP3
0x5a0 ADD
0x5a1 MSTORE
0x5a2 PUSH1 0x24
0x5a4 DUP2
0x5a5 ADD
0x5a6 SWAP11
0x5a7 SWAP1
0x5a8 SWAP11
0x5a9 MSTORE
0x5aa SWAP8
0x5ab DUP11
0x5ac AND
0x5ad PUSH1 0x44
0x5af DUP11
0x5b0 ADD
0x5b1 MSTORE
0x5b2 PUSH1 0x64
0x5b4 DUP10
0x5b5 ADD
0x5b6 SWAP7
0x5b7 SWAP1
0x5b8 SWAP7
0x5b9 MSTORE
0x5ba PUSH1 0x84
0x5bc DUP9
0x5bd ADD
0x5be SWAP5
0x5bf SWAP1
0x5c0 SWAP5
0x5c1 MSTORE
0x5c2 PUSH1 0xa4
0x5c4 DUP8
0x5c5 ADD
0x5c6 SWAP3
0x5c7 SWAP1
0x5c8 SWAP3
0x5c9 MSTORE
0x5ca SWAP1
0x5cb SWAP6
0x5cc AND
0x5cd PUSH1 0xc4
0x5cf DUP6
0x5d0 ADD
0x5d1 MSTORE
0x5d2 PUSH1 0xff
0x5d4 SWAP1
0x5d5 SWAP5
0x5d6 AND
0x5d7 PUSH1 0xe4
0x5d9 DUP5
0x5da ADD
0x5db MSTORE
0x5dc PUSH2 0x104
0x5df DUP4
0x5e0 ADD
0x5e1 SWAP4
0x5e2 SWAP1
0x5e3 SWAP4
0x5e4 MSTORE
0x5e5 PUSH2 0x124
0x5e8 DUP3
0x5e9 ADD
0x5ea SWAP3
0x5eb SWAP1
0x5ec SWAP3
0x5ed MSTORE
0x5ee PUSH2 0x144
0x5f1 DUP2
0x5f2 ADD
0x5f3 SWAP2
0x5f4 SWAP1
0x5f5 SWAP2
0x5f6 MSTORE
0x5f7 PUSH2 0x164
0x5fa ADD
0x5fb PUSH1 0x0
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 DUP1
0x601 DUP4
0x602 SUB
0x603 DUP2
0x604 PUSH1 0x0
0x606 DUP8
0x607 PUSH2 0x646e
0x60a GAS
0x60b SUB
0x60c CALL
0x60d SWAP3
0x60e POP
0x60f POP
0x610 POP
0x611 ISZERO
0x612 ISZERO
0x613 PUSH2 0x61b
0x616 JUMPI
---
0x575: JUMPDEST 
0x577: V531 = 0x20
0x579: V532 = ADD 0x20 V94
0x57b: V533 = 0x20
0x57d: V534 = MUL 0x20 0x8
0x57e: V535 = ADD 0x100 V532
0x57f: V536 = M[V535]
0x580: V537 = 0x40
0x582: V538 = M[0x40]
0x583: V539 = 0xe0
0x585: V540 = 0x2
0x587: V541 = EXP 0x2 0xe0
0x588: V542 = 0xffffffff
0x58e: V543 = AND V436 0xffffffff
0x58f: V544 = MUL V543 0x100000000000000000000000000000000000000000000000000000000
0x591: M[V538] = V544
0x592: V545 = 0x1
0x594: V546 = 0xa0
0x596: V547 = 0x2
0x598: V548 = EXP 0x2 0xa0
0x599: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59c: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x59d: V551 = 0x4
0x5a0: V552 = ADD V538 0x4
0x5a1: M[V552] = V550
0x5a2: V553 = 0x24
0x5a5: V554 = ADD V538 0x24
0x5a9: M[V554] = V456
0x5ac: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x5ad: V556 = 0x44
0x5b0: V557 = ADD V538 0x44
0x5b1: M[V557] = V555
0x5b2: V558 = 0x64
0x5b5: V559 = ADD V538 0x64
0x5b9: M[V559] = V476
0x5ba: V560 = 0x84
0x5bd: V561 = ADD V538 0x84
0x5c1: M[V561] = V486
0x5c2: V562 = 0xa4
0x5c5: V563 = ADD V538 0xa4
0x5c9: M[V563] = V496
0x5cc: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x5cd: V565 = 0xc4
0x5d0: V566 = ADD V538 0xc4
0x5d1: M[V566] = V564
0x5d2: V567 = 0xff
0x5d6: V568 = AND V80 0xff
0x5d7: V569 = 0xe4
0x5da: V570 = ADD V538 0xe4
0x5db: M[V570] = V568
0x5dc: V571 = 0x104
0x5e0: V572 = ADD V538 0x104
0x5e4: M[V572] = V516
0x5e5: V573 = 0x124
0x5e9: V574 = ADD V538 0x124
0x5ed: M[V574] = V526
0x5ee: V575 = 0x144
0x5f2: V576 = ADD V538 0x144
0x5f6: M[V576] = V536
0x5f7: V577 = 0x164
0x5fa: V578 = ADD 0x164 V538
0x5fb: V579 = 0x0
0x5fd: V580 = 0x40
0x5ff: V581 = M[0x40]
0x602: V582 = SUB V578 V581
0x604: V583 = 0x0
0x607: V584 = 0x646e
0x60a: V585 = GAS
0x60b: V586 = SUB V585 0x646e
0x60c: V587 = CALL V586 V417 0x0 V581 V582 V581 0x0
0x611: V588 = ISZERO V587
0x612: V589 = ISZERO V588
0x613: V590 = 0x61b
0x616: JUMPI 0x61b V589
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V417, V436, V446, V456, V466, V476, V486, V496, V506, V80, V516, V526, V94, 0x8]
Stack pops: 14
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x617
[0x617:0x61a]
---
Predecessors: [0x575]
Successors: []
---
0x617 PUSH1 0x0
0x619 DUP1
0x61a REVERT
---
0x617: V591 = 0x0
0x61a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x61b
[0x61b:0x6b9]
---
Predecessors: [0x575]
Successors: [0x6ba, 0x6bb]
---
0x61b JUMPDEST
0x61c DUP6
0x61d PUSH1 0x1
0x61f PUSH1 0xa0
0x621 PUSH1 0x2
0x623 EXP
0x624 SUB
0x625 AND
0x626 PUSH1 0x40
0x628 MLOAD
0x629 DUP1
0x62a DUP1
0x62b PUSH32 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x64c DUP2
0x64d MSTORE
0x64e PUSH1 0x20
0x650 ADD
0x651 PUSH32 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x672 DUP2
0x673 MSTORE
0x674 PUSH1 0x20
0x676 ADD
0x677 PUSH32 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x698 DUP2
0x699 MSTORE
0x69a POP
0x69b PUSH1 0x5c
0x69d ADD
0x69e SWAP1
0x69f POP
0x6a0 PUSH1 0x40
0x6a2 MLOAD
0x6a3 DUP1
0x6a4 SWAP2
0x6a5 SUB
0x6a6 SWAP1
0x6a7 SHA3
0x6a8 PUSH1 0xe0
0x6aa PUSH1 0x2
0x6ac EXP
0x6ad SWAP1
0x6ae DIV
0x6af DUP4
0x6b0 PUSH1 0x1
0x6b2 DUP2
0x6b3 MLOAD
0x6b4 DUP2
0x6b5 LT
0x6b6 PUSH2 0x6bb
0x6b9 JUMPI
---
0x61b: JUMPDEST 
0x61d: V592 = 0x1
0x61f: V593 = 0xa0
0x621: V594 = 0x2
0x623: V595 = EXP 0x2 0xa0
0x624: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x625: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x626: V598 = 0x40
0x628: V599 = M[0x40]
0x62b: V600 = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x64d: M[V599] = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x64e: V601 = 0x20
0x650: V602 = ADD 0x20 V599
0x651: V603 = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x673: M[V602] = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x674: V604 = 0x20
0x676: V605 = ADD 0x20 V602
0x677: V606 = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x699: M[V605] = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x69b: V607 = 0x5c
0x69d: V608 = ADD 0x5c V599
0x6a0: V609 = 0x40
0x6a2: V610 = M[0x40]
0x6a5: V611 = SUB V608 V610
0x6a7: V612 = SHA3 V610 V611
0x6a8: V613 = 0xe0
0x6aa: V614 = 0x2
0x6ac: V615 = EXP 0x2 0xe0
0x6ae: V616 = DIV V612 0x100000000000000000000000000000000000000000000000000000000
0x6b0: V617 = 0x1
0x6b3: V618 = M[V114]
0x6b5: V619 = LT 0x1 V618
0x6b6: V620 = 0x6bb
0x6b9: JUMPI 0x6bb V619
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V597, V616, S1, 0x1]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V114, 0x1]

================================

Block 0x6ba
[0x6ba:0x6ba]
---
Predecessors: [0x61b]
Successors: []
---
0x6ba INVALID
---
0x6ba: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V114, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V114, 0x1]

================================

Block 0x6bb
[0x6bb:0x6d0]
---
Predecessors: [0x61b]
Successors: [0x6d1, 0x6d2]
---
0x6bb JUMPDEST
0x6bc SWAP1
0x6bd PUSH1 0x20
0x6bf ADD
0x6c0 SWAP1
0x6c1 PUSH1 0x20
0x6c3 MUL
0x6c4 ADD
0x6c5 MLOAD
0x6c6 DUP6
0x6c7 PUSH1 0x1
0x6c9 DUP2
0x6ca MLOAD
0x6cb DUP2
0x6cc LT
0x6cd PUSH2 0x6d2
0x6d0 JUMPI
---
0x6bb: JUMPDEST 
0x6bd: V621 = 0x20
0x6bf: V622 = ADD 0x20 V114
0x6c1: V623 = 0x20
0x6c3: V624 = MUL 0x20 0x1
0x6c4: V625 = ADD 0x20 V622
0x6c5: V626 = M[V625]
0x6c7: V627 = 0x1
0x6ca: V628 = M[V94]
0x6cc: V629 = LT 0x1 V628
0x6cd: V630 = 0x6d2
0x6d0: JUMPI 0x6d2 V629
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V114, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V626, S6, 0x1]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V94, 0x1]

================================

Block 0x6d1
[0x6d1:0x6d1]
---
Predecessors: [0x6bb]
Successors: []
---
0x6d1 INVALID
---
0x6d1: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V94, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V94, 0x1]

================================

Block 0x6d2
[0x6d2:0x6e7]
---
Predecessors: [0x6bb]
Successors: [0x6e8, 0x6e9]
---
0x6d2 JUMPDEST
0x6d3 SWAP1
0x6d4 PUSH1 0x20
0x6d6 ADD
0x6d7 SWAP1
0x6d8 PUSH1 0x20
0x6da MUL
0x6db ADD
0x6dc MLOAD
0x6dd DUP6
0x6de PUSH1 0x3
0x6e0 DUP2
0x6e1 MLOAD
0x6e2 DUP2
0x6e3 LT
0x6e4 PUSH2 0x6e9
0x6e7 JUMPI
---
0x6d2: JUMPDEST 
0x6d4: V631 = 0x20
0x6d6: V632 = ADD 0x20 V94
0x6d8: V633 = 0x20
0x6da: V634 = MUL 0x20 0x1
0x6db: V635 = ADD 0x20 V632
0x6dc: V636 = M[V635]
0x6de: V637 = 0x3
0x6e1: V638 = M[V114]
0x6e3: V639 = LT 0x3 V638
0x6e4: V640 = 0x6e9
0x6e7: JUMPI 0x6e9 V639
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V94, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V636, S6, 0x3]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V114, 0x3]

================================

Block 0x6e8
[0x6e8:0x6e8]
---
Predecessors: [0x6d2]
Successors: []
---
0x6e8 INVALID
---
0x6e8: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V114, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V114, 0x3]

================================

Block 0x6e9
[0x6e9:0x6fe]
---
Predecessors: [0x6d2]
Successors: [0x6ff, 0x700]
---
0x6e9 JUMPDEST
0x6ea SWAP1
0x6eb PUSH1 0x20
0x6ed ADD
0x6ee SWAP1
0x6ef PUSH1 0x20
0x6f1 MUL
0x6f2 ADD
0x6f3 MLOAD
0x6f4 DUP8
0x6f5 PUSH1 0x3
0x6f7 DUP2
0x6f8 MLOAD
0x6f9 DUP2
0x6fa LT
0x6fb PUSH2 0x700
0x6fe JUMPI
---
0x6e9: JUMPDEST 
0x6eb: V641 = 0x20
0x6ed: V642 = ADD 0x20 V114
0x6ef: V643 = 0x20
0x6f1: V644 = MUL 0x20 0x3
0x6f2: V645 = ADD 0x60 V642
0x6f3: V646 = M[V645]
0x6f5: V647 = 0x3
0x6f8: V648 = M[V94]
0x6fa: V649 = LT 0x3 V648
0x6fb: V650 = 0x700
0x6fe: JUMPI 0x700 V649
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V114, 0x3]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V646, S8, 0x3]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V94, 0x3]

================================

Block 0x6ff
[0x6ff:0x6ff]
---
Predecessors: [0x6e9]
Successors: []
---
0x6ff INVALID
---
0x6ff: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V94, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V94, 0x3]

================================

Block 0x700
[0x700:0x715]
---
Predecessors: [0x6e9]
Successors: [0x716, 0x717]
---
0x700 JUMPDEST
0x701 SWAP1
0x702 PUSH1 0x20
0x704 ADD
0x705 SWAP1
0x706 PUSH1 0x20
0x708 MUL
0x709 ADD
0x70a MLOAD
0x70b DUP9
0x70c PUSH1 0x5
0x70e DUP2
0x70f MLOAD
0x710 DUP2
0x711 LT
0x712 PUSH2 0x717
0x715 JUMPI
---
0x700: JUMPDEST 
0x702: V651 = 0x20
0x704: V652 = ADD 0x20 V94
0x706: V653 = 0x20
0x708: V654 = MUL 0x20 0x3
0x709: V655 = ADD 0x60 V652
0x70a: V656 = M[V655]
0x70c: V657 = 0x5
0x70f: V658 = M[V94]
0x711: V659 = LT 0x5 V658
0x712: V660 = 0x717
0x715: JUMPI 0x717 V659
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V94, 0x3]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V656, S9, 0x5]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V94, 0x5]

================================

Block 0x716
[0x716:0x716]
---
Predecessors: [0x700]
Successors: []
---
0x716 INVALID
---
0x716: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V94, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V94, 0x5]

================================

Block 0x717
[0x717:0x72c]
---
Predecessors: [0x700]
Successors: [0x72d, 0x72e]
---
0x717 JUMPDEST
0x718 SWAP1
0x719 PUSH1 0x20
0x71b ADD
0x71c SWAP1
0x71d PUSH1 0x20
0x71f MUL
0x720 ADD
0x721 MLOAD
0x722 DUP10
0x723 PUSH1 0x7
0x725 DUP2
0x726 MLOAD
0x727 DUP2
0x728 LT
0x729 PUSH2 0x72e
0x72c JUMPI
---
0x717: JUMPDEST 
0x719: V661 = 0x20
0x71b: V662 = ADD 0x20 V94
0x71d: V663 = 0x20
0x71f: V664 = MUL 0x20 0x5
0x720: V665 = ADD 0xa0 V662
0x721: V666 = M[V665]
0x723: V667 = 0x7
0x726: V668 = M[V94]
0x728: V669 = LT 0x7 V668
0x729: V670 = 0x72e
0x72c: JUMPI 0x72e V669
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V94, 0x5]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V666, S10, 0x7]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V94, 0x7]

================================

Block 0x72d
[0x72d:0x72d]
---
Predecessors: [0x717]
Successors: []
---
0x72d INVALID
---
0x72d: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V94, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V94, 0x7]

================================

Block 0x72e
[0x72e:0x743]
---
Predecessors: [0x717]
Successors: [0x744, 0x745]
---
0x72e JUMPDEST
0x72f SWAP1
0x730 PUSH1 0x20
0x732 ADD
0x733 SWAP1
0x734 PUSH1 0x20
0x736 MUL
0x737 ADD
0x738 MLOAD
0x739 DUP10
0x73a PUSH1 0x5
0x73c DUP2
0x73d MLOAD
0x73e DUP2
0x73f LT
0x740 PUSH2 0x745
0x743 JUMPI
---
0x72e: JUMPDEST 
0x730: V671 = 0x20
0x732: V672 = ADD 0x20 V94
0x734: V673 = 0x20
0x736: V674 = MUL 0x20 0x7
0x737: V675 = ADD 0xe0 V672
0x738: V676 = M[V675]
0x73a: V677 = 0x5
0x73d: V678 = M[V114]
0x73f: V679 = LT 0x5 V678
0x740: V680 = 0x745
0x743: JUMPI 0x745 V679
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V94, 0x7]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V676, S10, 0x5]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V114, 0x5]

================================

Block 0x744
[0x744:0x744]
---
Predecessors: [0x72e]
Successors: []
---
0x744 INVALID
---
0x744: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V114, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V114, 0x5]

================================

Block 0x745
[0x745:0x75b]
---
Predecessors: [0x72e]
Successors: [0x75c, 0x75d]
---
0x745 JUMPDEST
0x746 SWAP1
0x747 PUSH1 0x20
0x749 ADD
0x74a SWAP1
0x74b PUSH1 0x20
0x74d MUL
0x74e ADD
0x74f MLOAD
0x750 DUP13
0x751 DUP11
0x752 PUSH1 0x1
0x754 DUP2
0x755 MLOAD
0x756 DUP2
0x757 LT
0x758 PUSH2 0x75d
0x75b JUMPI
---
0x745: JUMPDEST 
0x747: V681 = 0x20
0x749: V682 = ADD 0x20 V114
0x74b: V683 = 0x20
0x74d: V684 = MUL 0x20 0x5
0x74e: V685 = ADD 0xa0 V682
0x74f: V686 = M[V685]
0x752: V687 = 0x1
0x755: V688 = M[V134]
0x757: V689 = LT 0x1 V688
0x758: V690 = 0x75d
0x75b: JUMPI 0x75d V689
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V114, 0x5]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V686, S13, S10, 0x1]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V134, 0x1]

================================

Block 0x75c
[0x75c:0x75c]
---
Predecessors: [0x745]
Successors: []
---
0x75c INVALID
---
0x75c: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V134, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V134, 0x1]

================================

Block 0x75d
[0x75d:0x772]
---
Predecessors: [0x745]
Successors: [0x773, 0x774]
---
0x75d JUMPDEST
0x75e SWAP1
0x75f PUSH1 0x20
0x761 ADD
0x762 SWAP1
0x763 PUSH1 0x20
0x765 MUL
0x766 ADD
0x767 MLOAD
0x768 DUP12
0x769 PUSH1 0x3
0x76b DUP2
0x76c MLOAD
0x76d DUP2
0x76e LT
0x76f PUSH2 0x774
0x772 JUMPI
---
0x75d: JUMPDEST 
0x75f: V691 = 0x20
0x761: V692 = ADD 0x20 V134
0x763: V693 = 0x20
0x765: V694 = MUL 0x20 0x1
0x766: V695 = ADD 0x20 V692
0x767: V696 = M[V695]
0x769: V697 = 0x3
0x76c: V698 = M[V134]
0x76e: V699 = LT 0x3 V698
0x76f: V700 = 0x774
0x772: JUMPI 0x774 V699
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V134, 0x1]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V696, S12, 0x3]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V696, V134, 0x3]

================================

Block 0x773
[0x773:0x773]
---
Predecessors: [0x75d]
Successors: []
---
0x773 INVALID
---
0x773: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V696, V134, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V696, V134, 0x3]

================================

Block 0x774
[0x774:0x789]
---
Predecessors: [0x75d]
Successors: [0x78a, 0x78b]
---
0x774 JUMPDEST
0x775 SWAP1
0x776 PUSH1 0x20
0x778 ADD
0x779 SWAP1
0x77a PUSH1 0x20
0x77c MUL
0x77d ADD
0x77e MLOAD
0x77f DUP15
0x780 PUSH1 0x9
0x782 DUP2
0x783 MLOAD
0x784 DUP2
0x785 LT
0x786 PUSH2 0x78b
0x789 JUMPI
---
0x774: JUMPDEST 
0x776: V701 = 0x20
0x778: V702 = ADD 0x20 V134
0x77a: V703 = 0x20
0x77c: V704 = MUL 0x20 0x3
0x77d: V705 = ADD 0x60 V702
0x77e: V706 = M[V705]
0x780: V707 = 0x9
0x783: V708 = M[V94]
0x785: V709 = LT 0x9 V708
0x786: V710 = 0x78b
0x789: JUMPI 0x78b V709
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V696, V134, 0x3]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V706, S15, 0x9]
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V696, V706, V94, 0x9]

================================

Block 0x78a
[0x78a:0x78a]
---
Predecessors: [0x774]
Successors: []
---
0x78a INVALID
---
0x78a: INVALID 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V696, V706, V94, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V696, V706, V94, 0x9]

================================

Block 0x78b
[0x78b:0x82c]
---
Predecessors: [0x774]
Successors: [0x82d, 0x831]
---
0x78b JUMPDEST
0x78c SWAP1
0x78d PUSH1 0x20
0x78f ADD
0x790 SWAP1
0x791 PUSH1 0x20
0x793 MUL
0x794 ADD
0x795 MLOAD
0x796 PUSH1 0x40
0x798 MLOAD
0x799 PUSH1 0xe0
0x79b PUSH1 0x2
0x79d EXP
0x79e PUSH4 0xffffffff
0x7a3 DUP15
0x7a4 AND
0x7a5 MUL
0x7a6 DUP2
0x7a7 MSTORE
0x7a8 PUSH1 0x1
0x7aa PUSH1 0xa0
0x7ac PUSH1 0x2
0x7ae EXP
0x7af SUB
0x7b0 SWAP12
0x7b1 DUP13
0x7b2 AND
0x7b3 PUSH1 0x4
0x7b5 DUP3
0x7b6 ADD
0x7b7 MSTORE
0x7b8 PUSH1 0x24
0x7ba DUP2
0x7bb ADD
0x7bc SWAP11
0x7bd SWAP1
0x7be SWAP11
0x7bf MSTORE
0x7c0 SWAP8
0x7c1 DUP11
0x7c2 AND
0x7c3 PUSH1 0x44
0x7c5 DUP11
0x7c6 ADD
0x7c7 MSTORE
0x7c8 PUSH1 0x64
0x7ca DUP10
0x7cb ADD
0x7cc SWAP7
0x7cd SWAP1
0x7ce SWAP7
0x7cf MSTORE
0x7d0 PUSH1 0x84
0x7d2 DUP9
0x7d3 ADD
0x7d4 SWAP5
0x7d5 SWAP1
0x7d6 SWAP5
0x7d7 MSTORE
0x7d8 PUSH1 0xa4
0x7da DUP8
0x7db ADD
0x7dc SWAP3
0x7dd SWAP1
0x7de SWAP3
0x7df MSTORE
0x7e0 SWAP1
0x7e1 SWAP6
0x7e2 AND
0x7e3 PUSH1 0xc4
0x7e5 DUP6
0x7e6 ADD
0x7e7 MSTORE
0x7e8 PUSH1 0xff
0x7ea SWAP1
0x7eb SWAP5
0x7ec AND
0x7ed PUSH1 0xe4
0x7ef DUP5
0x7f0 ADD
0x7f1 MSTORE
0x7f2 PUSH2 0x104
0x7f5 DUP4
0x7f6 ADD
0x7f7 SWAP4
0x7f8 SWAP1
0x7f9 SWAP4
0x7fa MSTORE
0x7fb PUSH2 0x124
0x7fe DUP3
0x7ff ADD
0x800 SWAP3
0x801 SWAP1
0x802 SWAP3
0x803 MSTORE
0x804 PUSH2 0x144
0x807 DUP2
0x808 ADD
0x809 SWAP2
0x80a SWAP1
0x80b SWAP2
0x80c MSTORE
0x80d PUSH2 0x164
0x810 ADD
0x811 PUSH1 0x0
0x813 PUSH1 0x40
0x815 MLOAD
0x816 DUP1
0x817 DUP4
0x818 SUB
0x819 DUP2
0x81a PUSH1 0x0
0x81c DUP8
0x81d PUSH2 0x646e
0x820 GAS
0x821 SUB
0x822 CALL
0x823 SWAP3
0x824 POP
0x825 POP
0x826 POP
0x827 ISZERO
0x828 ISZERO
0x829 PUSH2 0x831
0x82c JUMPI
---
0x78b: JUMPDEST 
0x78d: V711 = 0x20
0x78f: V712 = ADD 0x20 V94
0x791: V713 = 0x20
0x793: V714 = MUL 0x20 0x9
0x794: V715 = ADD 0x120 V712
0x795: V716 = M[V715]
0x796: V717 = 0x40
0x798: V718 = M[0x40]
0x799: V719 = 0xe0
0x79b: V720 = 0x2
0x79d: V721 = EXP 0x2 0xe0
0x79e: V722 = 0xffffffff
0x7a4: V723 = AND V616 0xffffffff
0x7a5: V724 = MUL V723 0x100000000000000000000000000000000000000000000000000000000
0x7a7: M[V718] = V724
0x7a8: V725 = 0x1
0x7aa: V726 = 0xa0
0x7ac: V727 = 0x2
0x7ae: V728 = EXP 0x2 0xa0
0x7af: V729 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b2: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff V626
0x7b3: V731 = 0x4
0x7b6: V732 = ADD V718 0x4
0x7b7: M[V732] = V730
0x7b8: V733 = 0x24
0x7bb: V734 = ADD V718 0x24
0x7bf: M[V734] = V636
0x7c2: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0x7c3: V736 = 0x44
0x7c6: V737 = ADD V718 0x44
0x7c7: M[V737] = V735
0x7c8: V738 = 0x64
0x7cb: V739 = ADD V718 0x64
0x7cf: M[V739] = V656
0x7d0: V740 = 0x84
0x7d3: V741 = ADD V718 0x84
0x7d7: M[V741] = V666
0x7d8: V742 = 0xa4
0x7db: V743 = ADD V718 0xa4
0x7df: M[V743] = V676
0x7e2: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V686
0x7e3: V745 = 0xc4
0x7e6: V746 = ADD V718 0xc4
0x7e7: M[V746] = V744
0x7e8: V747 = 0xff
0x7ec: V748 = AND V83 0xff
0x7ed: V749 = 0xe4
0x7f0: V750 = ADD V718 0xe4
0x7f1: M[V750] = V748
0x7f2: V751 = 0x104
0x7f6: V752 = ADD V718 0x104
0x7fa: M[V752] = V696
0x7fb: V753 = 0x124
0x7ff: V754 = ADD V718 0x124
0x803: M[V754] = V706
0x804: V755 = 0x144
0x808: V756 = ADD V718 0x144
0x80c: M[V756] = V716
0x80d: V757 = 0x164
0x810: V758 = ADD 0x164 V718
0x811: V759 = 0x0
0x813: V760 = 0x40
0x815: V761 = M[0x40]
0x818: V762 = SUB V758 V761
0x81a: V763 = 0x0
0x81d: V764 = 0x646e
0x820: V765 = GAS
0x821: V766 = SUB V765 0x646e
0x822: V767 = CALL V766 V597 0x0 V761 V762 V761 0x0
0x827: V768 = ISZERO V767
0x828: V769 = ISZERO V768
0x829: V770 = 0x831
0x82c: JUMPI 0x831 V769
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134, V597, V616, V626, V636, V646, V656, V666, V676, V686, V83, V696, V706, V94, 0x9]
Stack pops: 14
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x82d
[0x82d:0x830]
---
Predecessors: [0x78b]
Successors: []
---
0x82d PUSH1 0x0
0x82f DUP1
0x830 REVERT
---
0x82d: V771 = 0x0
0x830: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x831
[0x831:0x831]
---
Predecessors: [0x78b]
Successors: [0x832]
---
0x831 JUMPDEST
---
0x831: JUMPDEST 
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]

================================

Block 0x832
[0x832:0x839]
---
Predecessors: [0x831]
Successors: [0x7d]
---
0x832 JUMPDEST
0x833 POP
0x834 POP
0x835 POP
0x836 POP
0x837 POP
0x838 POP
0x839 JUMP
---
0x832: JUMPDEST 
0x839: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V76, V80, V83, V94, V114, V134]
Stack pops: 7
Stack additions: []
Exit stack: [V12]

================================

Block 0x83a
[0x83a:0x850]
---
Predecessors: [0x1b8]
Successors: [0x851, 0x855]
---
0x83a JUMPDEST
0x83b PUSH1 0x0
0x83d SLOAD
0x83e CALLER
0x83f PUSH1 0x1
0x841 PUSH1 0xa0
0x843 PUSH1 0x2
0x845 EXP
0x846 SUB
0x847 SWAP1
0x848 DUP2
0x849 AND
0x84a SWAP2
0x84b AND
0x84c EQ
0x84d PUSH2 0x855
0x850 JUMPI
---
0x83a: JUMPDEST 
0x83b: V772 = 0x0
0x83d: V773 = S[0x0]
0x83e: V774 = CALLER
0x83f: V775 = 0x1
0x841: V776 = 0xa0
0x843: V777 = 0x2
0x845: V778 = EXP 0x2 0xa0
0x846: V779 = SUB 0x10000000000000000000000000000000000000000 0x1
0x849: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V774
0x84b: V781 = AND V773 0xffffffffffffffffffffffffffffffffffffffff
0x84c: V782 = EQ V781 V780
0x84d: V783 = 0x855
0x850: JUMPI 0x855 V782
---
Entry stack: [V12, 0x7d, V154, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V154, V156]

================================

Block 0x851
[0x851:0x854]
---
Predecessors: [0x83a]
Successors: []
---
0x851 PUSH1 0x0
0x853 DUP1
0x854 REVERT
---
0x851: V784 = 0x0
0x854: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V154, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V154, V156]

================================

Block 0x855
[0x855:0x8c4]
---
Predecessors: [0x83a]
Successors: [0x8c5]
---
0x855 JUMPDEST
0x856 DUP2
0x857 PUSH1 0x1
0x859 PUSH1 0xa0
0x85b PUSH1 0x2
0x85d EXP
0x85e SUB
0x85f AND
0x860 DUP2
0x861 PUSH1 0x40
0x863 MLOAD
0x864 PUSH32 0x6465706f73697428290000000000000000000000000000000000000000000000
0x885 DUP2
0x886 MSTORE
0x887 PUSH1 0x9
0x889 ADD
0x88a PUSH1 0x40
0x88c MLOAD
0x88d DUP1
0x88e SWAP2
0x88f SUB
0x890 SWAP1
0x891 SHA3
0x892 PUSH1 0xe0
0x894 PUSH1 0x2
0x896 EXP
0x897 SWAP1
0x898 DIV
0x899 SWAP1
0x89a PUSH1 0x40
0x89c MLOAD
0x89d DUP3
0x89e PUSH4 0xffffffff
0x8a3 AND
0x8a4 PUSH1 0xe0
0x8a6 PUSH1 0x2
0x8a8 EXP
0x8a9 MUL
0x8aa DUP2
0x8ab MSTORE
0x8ac PUSH1 0x4
0x8ae ADD
0x8af PUSH1 0x0
0x8b1 PUSH1 0x40
0x8b3 MLOAD
0x8b4 DUP1
0x8b5 DUP4
0x8b6 SUB
0x8b7 DUP2
0x8b8 DUP6
0x8b9 DUP9
0x8ba PUSH2 0x8796
0x8bd GAS
0x8be SUB
0x8bf CALL
0x8c0 POP
0x8c1 POP
0x8c2 POP
0x8c3 POP
0x8c4 POP
---
0x855: JUMPDEST 
0x857: V785 = 0x1
0x859: V786 = 0xa0
0x85b: V787 = 0x2
0x85d: V788 = EXP 0x2 0xa0
0x85e: V789 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85f: V790 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x861: V791 = 0x40
0x863: V792 = M[0x40]
0x864: V793 = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x886: M[V792] = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x887: V794 = 0x9
0x889: V795 = ADD 0x9 V792
0x88a: V796 = 0x40
0x88c: V797 = M[0x40]
0x88f: V798 = SUB V795 V797
0x891: V799 = SHA3 V797 V798
0x892: V800 = 0xe0
0x894: V801 = 0x2
0x896: V802 = EXP 0x2 0xe0
0x898: V803 = DIV V799 0x100000000000000000000000000000000000000000000000000000000
0x89a: V804 = 0x40
0x89c: V805 = M[0x40]
0x89e: V806 = 0xffffffff
0x8a3: V807 = AND 0xffffffff V803
0x8a4: V808 = 0xe0
0x8a6: V809 = 0x2
0x8a8: V810 = EXP 0x2 0xe0
0x8a9: V811 = MUL 0x100000000000000000000000000000000000000000000000000000000 V807
0x8ab: M[V805] = V811
0x8ac: V812 = 0x4
0x8ae: V813 = ADD 0x4 V805
0x8af: V814 = 0x0
0x8b1: V815 = 0x40
0x8b3: V816 = M[0x40]
0x8b6: V817 = SUB V813 V816
0x8ba: V818 = 0x8796
0x8bd: V819 = GAS
0x8be: V820 = SUB V819 0x8796
0x8bf: V821 = CALL V820 V790 V156 V816 V817 V816 0x0
---
Entry stack: [V12, 0x7d, V154, V156]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V154, V156]

================================

Block 0x8c5
[0x8c5:0x8c8]
---
Predecessors: [0x855]
Successors: [0x7d]
---
0x8c5 JUMPDEST
0x8c6 POP
0x8c7 POP
0x8c8 JUMP
---
0x8c5: JUMPDEST 
0x8c8: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V154, V156]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c9
[0x8c9:0x8df]
---
Predecessors: [0x1dc]
Successors: [0x8e0, 0x8e4]
---
0x8c9 JUMPDEST
0x8ca PUSH1 0x0
0x8cc SLOAD
0x8cd CALLER
0x8ce PUSH1 0x1
0x8d0 PUSH1 0xa0
0x8d2 PUSH1 0x2
0x8d4 EXP
0x8d5 SUB
0x8d6 SWAP1
0x8d7 DUP2
0x8d8 AND
0x8d9 SWAP2
0x8da AND
0x8db EQ
0x8dc PUSH2 0x8e4
0x8df JUMPI
---
0x8c9: JUMPDEST 
0x8ca: V822 = 0x0
0x8cc: V823 = S[0x0]
0x8cd: V824 = CALLER
0x8ce: V825 = 0x1
0x8d0: V826 = 0xa0
0x8d2: V827 = 0x2
0x8d4: V828 = EXP 0x2 0xa0
0x8d5: V829 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d8: V830 = AND 0xffffffffffffffffffffffffffffffffffffffff V824
0x8da: V831 = AND V823 0xffffffffffffffffffffffffffffffffffffffff
0x8db: V832 = EQ V831 V830
0x8dc: V833 = 0x8e4
0x8df: JUMPI 0x8e4 V832
---
Entry stack: [V12, 0x7d, V170, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V170, V172]

================================

Block 0x8e0
[0x8e0:0x8e3]
---
Predecessors: [0x8c9]
Successors: []
---
0x8e0 PUSH1 0x0
0x8e2 DUP1
0x8e3 REVERT
---
0x8e0: V834 = 0x0
0x8e3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V170, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V170, V172]

================================

Block 0x8e4
[0x8e4:0x95a]
---
Predecessors: [0x8c9]
Successors: [0x95b]
---
0x8e4 JUMPDEST
0x8e5 DUP2
0x8e6 PUSH1 0x1
0x8e8 PUSH1 0xa0
0x8ea PUSH1 0x2
0x8ec EXP
0x8ed SUB
0x8ee AND
0x8ef PUSH1 0x40
0x8f1 MLOAD
0x8f2 PUSH32 0x77697468647261772875696e7432353629000000000000000000000000000000
0x913 DUP2
0x914 MSTORE
0x915 PUSH1 0x11
0x917 ADD
0x918 PUSH1 0x40
0x91a MLOAD
0x91b DUP1
0x91c SWAP2
0x91d SUB
0x91e SWAP1
0x91f SHA3
0x920 PUSH1 0xe0
0x922 PUSH1 0x2
0x924 EXP
0x925 SWAP1
0x926 DIV
0x927 DUP3
0x928 PUSH1 0x40
0x92a MLOAD
0x92b PUSH1 0xe0
0x92d PUSH1 0x2
0x92f EXP
0x930 PUSH4 0xffffffff
0x935 DUP5
0x936 AND
0x937 MUL
0x938 DUP2
0x939 MSTORE
0x93a PUSH1 0x4
0x93c DUP2
0x93d ADD
0x93e SWAP2
0x93f SWAP1
0x940 SWAP2
0x941 MSTORE
0x942 PUSH1 0x24
0x944 ADD
0x945 PUSH1 0x0
0x947 PUSH1 0x40
0x949 MLOAD
0x94a DUP1
0x94b DUP4
0x94c SUB
0x94d DUP2
0x94e PUSH1 0x0
0x950 DUP8
0x951 PUSH2 0x646e
0x954 GAS
0x955 SUB
0x956 CALL
0x957 POP
0x958 POP
0x959 POP
0x95a POP
---
0x8e4: JUMPDEST 
0x8e6: V835 = 0x1
0x8e8: V836 = 0xa0
0x8ea: V837 = 0x2
0x8ec: V838 = EXP 0x2 0xa0
0x8ed: V839 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ee: V840 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x8ef: V841 = 0x40
0x8f1: V842 = M[0x40]
0x8f2: V843 = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x914: M[V842] = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x915: V844 = 0x11
0x917: V845 = ADD 0x11 V842
0x918: V846 = 0x40
0x91a: V847 = M[0x40]
0x91d: V848 = SUB V845 V847
0x91f: V849 = SHA3 V847 V848
0x920: V850 = 0xe0
0x922: V851 = 0x2
0x924: V852 = EXP 0x2 0xe0
0x926: V853 = DIV V849 0x100000000000000000000000000000000000000000000000000000000
0x928: V854 = 0x40
0x92a: V855 = M[0x40]
0x92b: V856 = 0xe0
0x92d: V857 = 0x2
0x92f: V858 = EXP 0x2 0xe0
0x930: V859 = 0xffffffff
0x936: V860 = AND V853 0xffffffff
0x937: V861 = MUL V860 0x100000000000000000000000000000000000000000000000000000000
0x939: M[V855] = V861
0x93a: V862 = 0x4
0x93d: V863 = ADD V855 0x4
0x941: M[V863] = V172
0x942: V864 = 0x24
0x944: V865 = ADD 0x24 V855
0x945: V866 = 0x0
0x947: V867 = 0x40
0x949: V868 = M[0x40]
0x94c: V869 = SUB V865 V868
0x94e: V870 = 0x0
0x951: V871 = 0x646e
0x954: V872 = GAS
0x955: V873 = SUB V872 0x646e
0x956: V874 = CALL V873 V840 0x0 V868 V869 V868 0x0
---
Entry stack: [V12, 0x7d, V170, V172]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V170, V172]

================================

Block 0x95b
[0x95b:0x95e]
---
Predecessors: [0x8e4]
Successors: [0x7d]
---
0x95b JUMPDEST
0x95c POP
0x95d POP
0x95e JUMP
---
0x95b: JUMPDEST 
0x95e: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V170, V172]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x95f
[0x95f:0x975]
---
Predecessors: [0x200]
Successors: [0x976, 0x97a]
---
0x95f JUMPDEST
0x960 PUSH1 0x0
0x962 SLOAD
0x963 CALLER
0x964 PUSH1 0x1
0x966 PUSH1 0xa0
0x968 PUSH1 0x2
0x96a EXP
0x96b SUB
0x96c SWAP1
0x96d DUP2
0x96e AND
0x96f SWAP2
0x970 AND
0x971 EQ
0x972 PUSH2 0x97a
0x975 JUMPI
---
0x95f: JUMPDEST 
0x960: V875 = 0x0
0x962: V876 = S[0x0]
0x963: V877 = CALLER
0x964: V878 = 0x1
0x966: V879 = 0xa0
0x968: V880 = 0x2
0x96a: V881 = EXP 0x2 0xa0
0x96b: V882 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96e: V883 = AND 0xffffffffffffffffffffffffffffffffffffffff V877
0x970: V884 = AND V876 0xffffffffffffffffffffffffffffffffffffffff
0x971: V885 = EQ V884 V883
0x972: V886 = 0x97a
0x975: JUMPI 0x97a V885
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0x976
[0x976:0x979]
---
Predecessors: [0x95f]
Successors: []
---
0x976 PUSH1 0x0
0x978 DUP1
0x979 REVERT
---
0x976: V887 = 0x0
0x979: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0x97a
[0x97a:0x98a]
---
Predecessors: [0x95f]
Successors: [0x98b, 0x98f]
---
0x97a JUMPDEST
0x97b PUSH1 0x1
0x97d PUSH1 0xa0
0x97f PUSH1 0x2
0x981 EXP
0x982 SUB
0x983 DUP3
0x984 AND
0x985 ISZERO
0x986 ISZERO
0x987 PUSH2 0x98f
0x98a JUMPI
---
0x97a: JUMPDEST 
0x97b: V888 = 0x1
0x97d: V889 = 0xa0
0x97f: V890 = 0x2
0x981: V891 = EXP 0x2 0xa0
0x982: V892 = SUB 0x10000000000000000000000000000000000000000 0x1
0x984: V893 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x985: V894 = ISZERO V893
0x986: V895 = ISZERO V894
0x987: V896 = 0x98f
0x98a: JUMPI 0x98f V895
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0x98b
[0x98b:0x98e]
---
Predecessors: [0x97a]
Successors: []
---
0x98b PUSH1 0x0
0x98d DUP1
0x98e REVERT
---
0x98b: V897 = 0x0
0x98e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0x98f
[0x98f:0x9e7]
---
Predecessors: [0x97a]
Successors: [0x9e8, 0x9ec]
---
0x98f JUMPDEST
0x990 DUP2
0x991 PUSH1 0x1
0x993 PUSH1 0xa0
0x995 PUSH1 0x2
0x997 EXP
0x998 SUB
0x999 AND
0x99a PUSH4 0xa9059cbb
0x99f DUP5
0x9a0 DUP4
0x9a1 PUSH1 0x0
0x9a3 PUSH1 0x40
0x9a5 MLOAD
0x9a6 PUSH1 0x20
0x9a8 ADD
0x9a9 MSTORE
0x9aa PUSH1 0x40
0x9ac MLOAD
0x9ad PUSH1 0xe0
0x9af PUSH1 0x2
0x9b1 EXP
0x9b2 PUSH4 0xffffffff
0x9b7 DUP6
0x9b8 AND
0x9b9 MUL
0x9ba DUP2
0x9bb MSTORE
0x9bc PUSH1 0x1
0x9be PUSH1 0xa0
0x9c0 PUSH1 0x2
0x9c2 EXP
0x9c3 SUB
0x9c4 SWAP1
0x9c5 SWAP3
0x9c6 AND
0x9c7 PUSH1 0x4
0x9c9 DUP4
0x9ca ADD
0x9cb MSTORE
0x9cc PUSH1 0x24
0x9ce DUP3
0x9cf ADD
0x9d0 MSTORE
0x9d1 PUSH1 0x44
0x9d3 ADD
0x9d4 PUSH1 0x20
0x9d6 PUSH1 0x40
0x9d8 MLOAD
0x9d9 DUP1
0x9da DUP4
0x9db SUB
0x9dc DUP2
0x9dd PUSH1 0x0
0x9df DUP8
0x9e0 DUP1
0x9e1 EXTCODESIZE
0x9e2 ISZERO
0x9e3 ISZERO
0x9e4 PUSH2 0x9ec
0x9e7 JUMPI
---
0x98f: JUMPDEST 
0x991: V898 = 0x1
0x993: V899 = 0xa0
0x995: V900 = 0x2
0x997: V901 = EXP 0x2 0xa0
0x998: V902 = SUB 0x10000000000000000000000000000000000000000 0x1
0x999: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x99a: V904 = 0xa9059cbb
0x9a1: V905 = 0x0
0x9a3: V906 = 0x40
0x9a5: V907 = M[0x40]
0x9a6: V908 = 0x20
0x9a8: V909 = ADD 0x20 V907
0x9a9: M[V909] = 0x0
0x9aa: V910 = 0x40
0x9ac: V911 = M[0x40]
0x9ad: V912 = 0xe0
0x9af: V913 = 0x2
0x9b1: V914 = EXP 0x2 0xe0
0x9b2: V915 = 0xffffffff
0x9b8: V916 = AND 0xa9059cbb 0xffffffff
0x9b9: V917 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x9bb: M[V911] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x9bc: V918 = 0x1
0x9be: V919 = 0xa0
0x9c0: V920 = 0x2
0x9c2: V921 = EXP 0x2 0xa0
0x9c3: V922 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c6: V923 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x9c7: V924 = 0x4
0x9ca: V925 = ADD V911 0x4
0x9cb: M[V925] = V923
0x9cc: V926 = 0x24
0x9cf: V927 = ADD V911 0x24
0x9d0: M[V927] = V191
0x9d1: V928 = 0x44
0x9d3: V929 = ADD 0x44 V911
0x9d4: V930 = 0x20
0x9d6: V931 = 0x40
0x9d8: V932 = M[0x40]
0x9db: V933 = SUB V929 V932
0x9dd: V934 = 0x0
0x9e1: V935 = EXTCODESIZE V903
0x9e2: V936 = ISZERO V935
0x9e3: V937 = ISZERO V936
0x9e4: V938 = 0x9ec
0x9e7: JUMPI 0x9ec V937
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 3
Stack additions: [S2, S1, S0, V903, 0xa9059cbb, V929, 0x20, V932, V933, V932, 0x0, V903]
Exit stack: [V12, 0x7d, V186, V189, V191, V903, 0xa9059cbb, V929, 0x20, V932, V933, V932, 0x0, V903]

================================

Block 0x9e8
[0x9e8:0x9eb]
---
Predecessors: [0x98f]
Successors: []
---
0x9e8 PUSH1 0x0
0x9ea DUP1
0x9eb REVERT
---
0x9e8: V939 = 0x0
0x9eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V186, V189, V191, V903, 0xa9059cbb, V929, 0x20, V932, V933, V932, 0x0, V903]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191, V903, 0xa9059cbb, V929, 0x20, V932, V933, V932, 0x0, V903]

================================

Block 0x9ec
[0x9ec:0x9f8]
---
Predecessors: [0x98f]
Successors: [0x9f9, 0x9fd]
---
0x9ec JUMPDEST
0x9ed PUSH2 0x2c6
0x9f0 GAS
0x9f1 SUB
0x9f2 CALL
0x9f3 ISZERO
0x9f4 ISZERO
0x9f5 PUSH2 0x9fd
0x9f8 JUMPI
---
0x9ec: JUMPDEST 
0x9ed: V940 = 0x2c6
0x9f0: V941 = GAS
0x9f1: V942 = SUB V941 0x2c6
0x9f2: V943 = CALL V942 V903 0x0 V932 V933 V932 0x20
0x9f3: V944 = ISZERO V943
0x9f4: V945 = ISZERO V944
0x9f5: V946 = 0x9fd
0x9f8: JUMPI 0x9fd V945
---
Entry stack: [V12, 0x7d, V186, V189, V191, V903, 0xa9059cbb, V929, 0x20, V932, V933, V932, 0x0, V903]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191, V903, 0xa9059cbb, V929]

================================

Block 0x9f9
[0x9f9:0x9fc]
---
Predecessors: [0x9ec]
Successors: []
---
0x9f9 PUSH1 0x0
0x9fb DUP1
0x9fc REVERT
---
0x9f9: V947 = 0x0
0x9fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V186, V189, V191, V903, 0xa9059cbb, V929]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191, V903, 0xa9059cbb, V929]

================================

Block 0x9fd
[0x9fd:0xa0d]
---
Predecessors: [0x9ec]
Successors: [0xa0e, 0xa12]
---
0x9fd JUMPDEST
0x9fe POP
0x9ff POP
0xa00 POP
0xa01 PUSH1 0x40
0xa03 MLOAD
0xa04 DUP1
0xa05 MLOAD
0xa06 SWAP1
0xa07 POP
0xa08 ISZERO
0xa09 ISZERO
0xa0a PUSH2 0xa12
0xa0d JUMPI
---
0x9fd: JUMPDEST 
0xa01: V948 = 0x40
0xa03: V949 = M[0x40]
0xa05: V950 = M[V949]
0xa08: V951 = ISZERO V950
0xa09: V952 = ISZERO V951
0xa0a: V953 = 0xa12
0xa0d: JUMPI 0xa12 V952
---
Entry stack: [V12, 0x7d, V186, V189, V191, V903, 0xa9059cbb, V929]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0xa0e
[0xa0e:0xa11]
---
Predecessors: [0x9fd]
Successors: []
---
0xa0e PUSH1 0x0
0xa10 DUP1
0xa11 REVERT
---
0xa0e: V954 = 0x0
0xa11: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0xa12
[0xa12:0xa12]
---
Predecessors: [0x9fd]
Successors: [0xa13]
---
0xa12 JUMPDEST
---
0xa12: JUMPDEST 
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V186, V189, V191]

================================

Block 0xa13
[0xa13:0xa17]
---
Predecessors: [0xa12]
Successors: [0x7d]
---
0xa13 JUMPDEST
0xa14 POP
0xa15 POP
0xa16 POP
0xa17 JUMP
---
0xa13: JUMPDEST 
0xa17: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V186, V189, V191]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0xa18
[0xa18:0xa2e]
---
Predecessors: [0x22a]
Successors: [0xa2f, 0xa33]
---
0xa18 JUMPDEST
0xa19 PUSH1 0x0
0xa1b SLOAD
0xa1c CALLER
0xa1d PUSH1 0x1
0xa1f PUSH1 0xa0
0xa21 PUSH1 0x2
0xa23 EXP
0xa24 SUB
0xa25 SWAP1
0xa26 DUP2
0xa27 AND
0xa28 SWAP2
0xa29 AND
0xa2a EQ
0xa2b PUSH2 0xa33
0xa2e JUMPI
---
0xa18: JUMPDEST 
0xa19: V955 = 0x0
0xa1b: V956 = S[0x0]
0xa1c: V957 = CALLER
0xa1d: V958 = 0x1
0xa1f: V959 = 0xa0
0xa21: V960 = 0x2
0xa23: V961 = EXP 0x2 0xa0
0xa24: V962 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa27: V963 = AND 0xffffffffffffffffffffffffffffffffffffffff V957
0xa29: V964 = AND V956 0xffffffffffffffffffffffffffffffffffffffff
0xa2a: V965 = EQ V964 V963
0xa2b: V966 = 0xa33
0xa2e: JUMPI 0xa33 V965
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0xa2f
[0xa2f:0xa32]
---
Predecessors: [0xa18]
Successors: []
---
0xa2f PUSH1 0x0
0xa31 DUP1
0xa32 REVERT
---
0xa2f: V967 = 0x0
0xa32: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0xa33
[0xa33:0xb68]
---
Predecessors: [0xa18]
Successors: [0xb69, 0xb6d]
---
0xa33 JUMPDEST
0xa34 DUP12
0xa35 PUSH1 0x1
0xa37 PUSH1 0xa0
0xa39 PUSH1 0x2
0xa3b EXP
0xa3c SUB
0xa3d AND
0xa3e PUSH1 0x40
0xa40 MLOAD
0xa41 DUP1
0xa42 DUP1
0xa43 PUSH32 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0xa64 DUP2
0xa65 MSTORE
0xa66 PUSH1 0x20
0xa68 ADD
0xa69 PUSH32 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0xa8a DUP2
0xa8b MSTORE
0xa8c PUSH1 0x20
0xa8e ADD
0xa8f PUSH32 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0xab0 DUP2
0xab1 MSTORE
0xab2 POP
0xab3 PUSH1 0x5c
0xab5 ADD
0xab6 SWAP1
0xab7 POP
0xab8 PUSH1 0x40
0xaba MLOAD
0xabb DUP1
0xabc SWAP2
0xabd SUB
0xabe SWAP1
0xabf SHA3
0xac0 PUSH1 0xe0
0xac2 PUSH1 0x2
0xac4 EXP
0xac5 SWAP1
0xac6 DIV
0xac7 DUP13
0xac8 DUP13
0xac9 DUP13
0xaca DUP13
0xacb DUP13
0xacc DUP13
0xacd DUP13
0xace DUP13
0xacf DUP13
0xad0 DUP13
0xad1 DUP13
0xad2 PUSH1 0x40
0xad4 MLOAD
0xad5 PUSH1 0xe0
0xad7 PUSH1 0x2
0xad9 EXP
0xada PUSH4 0xffffffff
0xadf DUP15
0xae0 AND
0xae1 MUL
0xae2 DUP2
0xae3 MSTORE
0xae4 PUSH1 0x1
0xae6 PUSH1 0xa0
0xae8 PUSH1 0x2
0xaea EXP
0xaeb SUB
0xaec SWAP12
0xaed DUP13
0xaee AND
0xaef PUSH1 0x4
0xaf1 DUP3
0xaf2 ADD
0xaf3 MSTORE
0xaf4 PUSH1 0x24
0xaf6 DUP2
0xaf7 ADD
0xaf8 SWAP11
0xaf9 SWAP1
0xafa SWAP11
0xafb MSTORE
0xafc SWAP8
0xafd DUP11
0xafe AND
0xaff PUSH1 0x44
0xb01 DUP11
0xb02 ADD
0xb03 MSTORE
0xb04 PUSH1 0x64
0xb06 DUP10
0xb07 ADD
0xb08 SWAP7
0xb09 SWAP1
0xb0a SWAP7
0xb0b MSTORE
0xb0c PUSH1 0x84
0xb0e DUP9
0xb0f ADD
0xb10 SWAP5
0xb11 SWAP1
0xb12 SWAP5
0xb13 MSTORE
0xb14 PUSH1 0xa4
0xb16 DUP8
0xb17 ADD
0xb18 SWAP3
0xb19 SWAP1
0xb1a SWAP3
0xb1b MSTORE
0xb1c SWAP1
0xb1d SWAP6
0xb1e AND
0xb1f PUSH1 0xc4
0xb21 DUP6
0xb22 ADD
0xb23 MSTORE
0xb24 PUSH1 0xff
0xb26 SWAP1
0xb27 SWAP5
0xb28 AND
0xb29 PUSH1 0xe4
0xb2b DUP5
0xb2c ADD
0xb2d MSTORE
0xb2e PUSH2 0x104
0xb31 DUP4
0xb32 ADD
0xb33 SWAP4
0xb34 SWAP1
0xb35 SWAP4
0xb36 MSTORE
0xb37 PUSH2 0x124
0xb3a DUP3
0xb3b ADD
0xb3c SWAP3
0xb3d SWAP1
0xb3e SWAP3
0xb3f MSTORE
0xb40 PUSH2 0x144
0xb43 DUP2
0xb44 ADD
0xb45 SWAP2
0xb46 SWAP1
0xb47 SWAP2
0xb48 MSTORE
0xb49 PUSH2 0x164
0xb4c ADD
0xb4d PUSH1 0x0
0xb4f PUSH1 0x40
0xb51 MLOAD
0xb52 DUP1
0xb53 DUP4
0xb54 SUB
0xb55 DUP2
0xb56 PUSH1 0x0
0xb58 DUP8
0xb59 PUSH2 0x646e
0xb5c GAS
0xb5d SUB
0xb5e CALL
0xb5f SWAP3
0xb60 POP
0xb61 POP
0xb62 POP
0xb63 ISZERO
0xb64 ISZERO
0xb65 PUSH2 0xb6d
0xb68 JUMPI
---
0xa33: JUMPDEST 
0xa35: V968 = 0x1
0xa37: V969 = 0xa0
0xa39: V970 = 0x2
0xa3b: V971 = EXP 0x2 0xa0
0xa3c: V972 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3d: V973 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0xa3e: V974 = 0x40
0xa40: V975 = M[0x40]
0xa43: V976 = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0xa65: M[V975] = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0xa66: V977 = 0x20
0xa68: V978 = ADD 0x20 V975
0xa69: V979 = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0xa8b: M[V978] = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0xa8c: V980 = 0x20
0xa8e: V981 = ADD 0x20 V978
0xa8f: V982 = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0xab1: M[V981] = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0xab3: V983 = 0x5c
0xab5: V984 = ADD 0x5c V975
0xab8: V985 = 0x40
0xaba: V986 = M[0x40]
0xabd: V987 = SUB V984 V986
0xabf: V988 = SHA3 V986 V987
0xac0: V989 = 0xe0
0xac2: V990 = 0x2
0xac4: V991 = EXP 0x2 0xe0
0xac6: V992 = DIV V988 0x100000000000000000000000000000000000000000000000000000000
0xad2: V993 = 0x40
0xad4: V994 = M[0x40]
0xad5: V995 = 0xe0
0xad7: V996 = 0x2
0xad9: V997 = EXP 0x2 0xe0
0xada: V998 = 0xffffffff
0xae0: V999 = AND V992 0xffffffff
0xae1: V1000 = MUL V999 0x100000000000000000000000000000000000000000000000000000000
0xae3: M[V994] = V1000
0xae4: V1001 = 0x1
0xae6: V1002 = 0xa0
0xae8: V1003 = 0x2
0xaea: V1004 = EXP 0x2 0xa0
0xaeb: V1005 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaee: V1006 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0xaef: V1007 = 0x4
0xaf2: V1008 = ADD V994 0x4
0xaf3: M[V1008] = V1006
0xaf4: V1009 = 0x24
0xaf7: V1010 = ADD V994 0x24
0xafb: M[V1010] = V210
0xafe: V1011 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0xaff: V1012 = 0x44
0xb02: V1013 = ADD V994 0x44
0xb03: M[V1013] = V1011
0xb04: V1014 = 0x64
0xb07: V1015 = ADD V994 0x64
0xb0b: M[V1015] = V215
0xb0c: V1016 = 0x84
0xb0f: V1017 = ADD V994 0x84
0xb13: M[V1017] = V217
0xb14: V1018 = 0xa4
0xb17: V1019 = ADD V994 0xa4
0xb1b: M[V1019] = V219
0xb1e: V1020 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0xb1f: V1021 = 0xc4
0xb22: V1022 = ADD V994 0xc4
0xb23: M[V1022] = V1020
0xb24: V1023 = 0xff
0xb28: V1024 = AND V226 0xff
0xb29: V1025 = 0xe4
0xb2c: V1026 = ADD V994 0xe4
0xb2d: M[V1026] = V1024
0xb2e: V1027 = 0x104
0xb32: V1028 = ADD V994 0x104
0xb36: M[V1028] = V228
0xb37: V1029 = 0x124
0xb3b: V1030 = ADD V994 0x124
0xb3f: M[V1030] = V230
0xb40: V1031 = 0x144
0xb44: V1032 = ADD V994 0x144
0xb48: M[V1032] = V232
0xb49: V1033 = 0x164
0xb4c: V1034 = ADD 0x164 V994
0xb4d: V1035 = 0x0
0xb4f: V1036 = 0x40
0xb51: V1037 = M[0x40]
0xb54: V1038 = SUB V1034 V1037
0xb56: V1039 = 0x0
0xb59: V1040 = 0x646e
0xb5c: V1041 = GAS
0xb5d: V1042 = SUB V1041 0x646e
0xb5e: V1043 = CALL V1042 V973 0x0 V1037 V1038 V1037 0x0
0xb63: V1044 = ISZERO V1043
0xb64: V1045 = ISZERO V1044
0xb65: V1046 = 0xb6d
0xb68: JUMPI 0xb6d V1045
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0xb69
[0xb69:0xb6c]
---
Predecessors: [0xa33]
Successors: []
---
0xb69 PUSH1 0x0
0xb6b DUP1
0xb6c REVERT
---
0xb69: V1047 = 0x0
0xb6c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0xb6d
[0xb6d:0xb6d]
---
Predecessors: [0xa33]
Successors: [0xb6e]
---
0xb6d JUMPDEST
---
0xb6d: JUMPDEST 
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]

================================

Block 0xb6e
[0xb6e:0xb7b]
---
Predecessors: [0xb6d]
Successors: [0x7d]
---
0xb6e JUMPDEST
0xb6f POP
0xb70 POP
0xb71 POP
0xb72 POP
0xb73 POP
0xb74 POP
0xb75 POP
0xb76 POP
0xb77 POP
0xb78 POP
0xb79 POP
0xb7a POP
0xb7b JUMP
---
0xb6e: JUMPDEST 
0xb7b: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V205, V208, V210, V213, V215, V217, V219, V222, V226, V228, V230, V232]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0xb7c
[0xb7c:0xb92]
---
Predecessors: [0x280]
Successors: [0xb93, 0xb97]
---
0xb7c JUMPDEST
0xb7d PUSH1 0x0
0xb7f SLOAD
0xb80 CALLER
0xb81 PUSH1 0x1
0xb83 PUSH1 0xa0
0xb85 PUSH1 0x2
0xb87 EXP
0xb88 SUB
0xb89 SWAP1
0xb8a DUP2
0xb8b AND
0xb8c SWAP2
0xb8d AND
0xb8e EQ
0xb8f PUSH2 0xb97
0xb92 JUMPI
---
0xb7c: JUMPDEST 
0xb7d: V1048 = 0x0
0xb7f: V1049 = S[0x0]
0xb80: V1050 = CALLER
0xb81: V1051 = 0x1
0xb83: V1052 = 0xa0
0xb85: V1053 = 0x2
0xb87: V1054 = EXP 0x2 0xa0
0xb88: V1055 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb8b: V1056 = AND 0xffffffffffffffffffffffffffffffffffffffff V1050
0xb8d: V1057 = AND V1049 0xffffffffffffffffffffffffffffffffffffffff
0xb8e: V1058 = EQ V1057 V1056
0xb8f: V1059 = 0xb97
0xb92: JUMPI 0xb97 V1058
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0xb93
[0xb93:0xb96]
---
Predecessors: [0xb7c]
Successors: []
---
0xb93 PUSH1 0x0
0xb95 DUP1
0xb96 REVERT
---
0xb93: V1060 = 0x0
0xb96: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0xb97
[0xb97:0xba7]
---
Predecessors: [0xb7c]
Successors: [0xba8, 0xbac]
---
0xb97 JUMPDEST
0xb98 PUSH1 0x1
0xb9a PUSH1 0xa0
0xb9c PUSH1 0x2
0xb9e EXP
0xb9f SUB
0xba0 DUP3
0xba1 AND
0xba2 ISZERO
0xba3 ISZERO
0xba4 PUSH2 0xbac
0xba7 JUMPI
---
0xb97: JUMPDEST 
0xb98: V1061 = 0x1
0xb9a: V1062 = 0xa0
0xb9c: V1063 = 0x2
0xb9e: V1064 = EXP 0x2 0xa0
0xb9f: V1065 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba1: V1066 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0xba2: V1067 = ISZERO V1066
0xba3: V1068 = ISZERO V1067
0xba4: V1069 = 0xbac
0xba7: JUMPI 0xbac V1068
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0xba8
[0xba8:0xbab]
---
Predecessors: [0xb97]
Successors: []
---
0xba8 PUSH1 0x0
0xbaa DUP1
0xbab REVERT
---
0xba8: V1070 = 0x0
0xbab: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0xbac
[0xbac:0xc30]
---
Predecessors: [0xb97]
Successors: [0xc31]
---
0xbac JUMPDEST
0xbad DUP3
0xbae PUSH1 0x1
0xbb0 PUSH1 0xa0
0xbb2 PUSH1 0x2
0xbb4 EXP
0xbb5 SUB
0xbb6 AND
0xbb7 PUSH1 0x40
0xbb9 MLOAD
0xbba PUSH32 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0xbdb DUP2
0xbdc MSTORE
0xbdd PUSH1 0x1e
0xbdf ADD
0xbe0 PUSH1 0x40
0xbe2 MLOAD
0xbe3 DUP1
0xbe4 SWAP2
0xbe5 SUB
0xbe6 SWAP1
0xbe7 SHA3
0xbe8 PUSH1 0xe0
0xbea PUSH1 0x2
0xbec EXP
0xbed SWAP1
0xbee DIV
0xbef DUP4
0xbf0 DUP4
0xbf1 PUSH1 0x40
0xbf3 MLOAD
0xbf4 PUSH1 0xe0
0xbf6 PUSH1 0x2
0xbf8 EXP
0xbf9 PUSH4 0xffffffff
0xbfe DUP6
0xbff AND
0xc00 MUL
0xc01 DUP2
0xc02 MSTORE
0xc03 PUSH1 0x1
0xc05 PUSH1 0xa0
0xc07 PUSH1 0x2
0xc09 EXP
0xc0a SUB
0xc0b SWAP1
0xc0c SWAP3
0xc0d AND
0xc0e PUSH1 0x4
0xc10 DUP4
0xc11 ADD
0xc12 MSTORE
0xc13 PUSH1 0x24
0xc15 DUP3
0xc16 ADD
0xc17 MSTORE
0xc18 PUSH1 0x44
0xc1a ADD
0xc1b PUSH1 0x0
0xc1d PUSH1 0x40
0xc1f MLOAD
0xc20 DUP1
0xc21 DUP4
0xc22 SUB
0xc23 DUP2
0xc24 PUSH1 0x0
0xc26 DUP8
0xc27 PUSH2 0x646e
0xc2a GAS
0xc2b SUB
0xc2c CALL
0xc2d POP
0xc2e POP
0xc2f POP
0xc30 POP
---
0xbac: JUMPDEST 
0xbae: V1071 = 0x1
0xbb0: V1072 = 0xa0
0xbb2: V1073 = 0x2
0xbb4: V1074 = EXP 0x2 0xa0
0xbb5: V1075 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb6: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0xbb7: V1077 = 0x40
0xbb9: V1078 = M[0x40]
0xbba: V1079 = 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0xbdc: M[V1078] = 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0xbdd: V1080 = 0x1e
0xbdf: V1081 = ADD 0x1e V1078
0xbe0: V1082 = 0x40
0xbe2: V1083 = M[0x40]
0xbe5: V1084 = SUB V1081 V1083
0xbe7: V1085 = SHA3 V1083 V1084
0xbe8: V1086 = 0xe0
0xbea: V1087 = 0x2
0xbec: V1088 = EXP 0x2 0xe0
0xbee: V1089 = DIV V1085 0x100000000000000000000000000000000000000000000000000000000
0xbf1: V1090 = 0x40
0xbf3: V1091 = M[0x40]
0xbf4: V1092 = 0xe0
0xbf6: V1093 = 0x2
0xbf8: V1094 = EXP 0x2 0xe0
0xbf9: V1095 = 0xffffffff
0xbff: V1096 = AND V1089 0xffffffff
0xc00: V1097 = MUL V1096 0x100000000000000000000000000000000000000000000000000000000
0xc02: M[V1091] = V1097
0xc03: V1098 = 0x1
0xc05: V1099 = 0xa0
0xc07: V1100 = 0x2
0xc09: V1101 = EXP 0x2 0xa0
0xc0a: V1102 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc0d: V1103 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0xc0e: V1104 = 0x4
0xc11: V1105 = ADD V1091 0x4
0xc12: M[V1105] = V1103
0xc13: V1106 = 0x24
0xc16: V1107 = ADD V1091 0x24
0xc17: M[V1107] = V251
0xc18: V1108 = 0x44
0xc1a: V1109 = ADD 0x44 V1091
0xc1b: V1110 = 0x0
0xc1d: V1111 = 0x40
0xc1f: V1112 = M[0x40]
0xc22: V1113 = SUB V1109 V1112
0xc24: V1114 = 0x0
0xc27: V1115 = 0x646e
0xc2a: V1116 = GAS
0xc2b: V1117 = SUB V1116 0x646e
0xc2c: V1118 = CALL V1117 V1076 0x0 V1112 V1113 V1112 0x0
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x7d, V246, V249, V251]

================================

Block 0xc31
[0xc31:0xc35]
---
Predecessors: [0xbac]
Successors: [0x7d]
---
0xc31 JUMPDEST
0xc32 POP
0xc33 POP
0xc34 POP
0xc35 JUMP
---
0xc31: JUMPDEST 
0xc35: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V246, V249, V251]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0xc36
[0xc36:0xc44]
---
Predecessors: [0x2aa]
Successors: [0x2b2]
---
0xc36 JUMPDEST
0xc37 PUSH1 0x0
0xc39 SLOAD
0xc3a PUSH1 0x1
0xc3c PUSH1 0xa0
0xc3e PUSH1 0x2
0xc40 EXP
0xc41 SUB
0xc42 AND
0xc43 DUP2
0xc44 JUMP
---
0xc36: JUMPDEST 
0xc37: V1119 = 0x0
0xc39: V1120 = S[0x0]
0xc3a: V1121 = 0x1
0xc3c: V1122 = 0xa0
0xc3e: V1123 = 0x2
0xc40: V1124 = EXP 0x2 0xa0
0xc41: V1125 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc42: V1126 = AND 0xffffffffffffffffffffffffffffffffffffffff V1120
0xc44: JUMP 0x2b2
---
Entry stack: [V12, 0x2b2]
Stack pops: 1
Stack additions: [S0, V1126]
Exit stack: [V12, 0x2b2, V1126]

================================

Block 0xc45
[0xc45:0xc70]
---
Predecessors: []
Successors: []
---
0xc45 STOP
0xc46 LOG1
0xc47 PUSH6 0x627a7a723058
0xc4e SHA3
0xc4f MISSING 0x49
0xc50 MISSING 0xe4
0xc51 MISSING 0xea
0xc52 SWAP12
0xc53 MISSING 0xc4
0xc54 MISSING 0xa5
0xc55 BLOCKHASH
0xc56 PUSH7 0xb54cc0bea9b0af
0xc5e MISSING 0xab
0xc5f MISSING 0x49
0xc60 DUP9
0xc61 MISSING 0x4b
0xc62 SWAP2
0xc63 MISSING 0xf7
0xc64 PUSH5 0xdf35764d1c
0xc6a MISSING 0x23
0xc6b LT
0xc6c MISSING 0x22
0xc6d BLOCKHASH
0xc6e SWAP8
0xc6f STOP
0xc70 MISSING 0x29
---
0xc45: STOP 
0xc46: LOG S0 S1 S2
0xc47: V1127 = 0x627a7a723058
0xc4e: V1128 = SHA3 0x627a7a723058 S3
0xc4f: MISSING 0x49
0xc50: MISSING 0xe4
0xc51: MISSING 0xea
0xc53: MISSING 0xc4
0xc54: MISSING 0xa5
0xc55: V1129 = BLOCKHASH S0
0xc56: V1130 = 0xb54cc0bea9b0af
0xc5e: MISSING 0xab
0xc5f: MISSING 0x49
0xc61: MISSING 0x4b
0xc63: MISSING 0xf7
0xc64: V1131 = 0xdf35764d1c
0xc6a: MISSING 0x23
0xc6b: V1132 = LT S0 S1
0xc6c: MISSING 0x22
0xc6d: V1133 = BLOCKHASH S0
0xc6f: STOP 
0xc70: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1128, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, 0xb54cc0bea9b0af, V1129, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, S2, S1, S0, 0xdf35764d1c, V1132, S8, S1, S2, S3, S4, S5, S6, S7, V1133]
Exit stack: []

================================

Function 0:
Public function signature: 0x158ab5ba
Entry block: 0x81
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x81, 0x88, 0x8c, 0x2ce, 0x2e5, 0x2e9, 0x2fa, 0x2fe, 0x357, 0x35b, 0x368, 0x36c, 0x37d, 0x381, 0x382

Function 1:
Public function signature: 0x513bd11b
Entry block: 0xa5
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0xa5, 0xac, 0xb0, 0x386, 0x39d, 0x3a1, 0x3b4, 0x3b8, 0x3e2, 0x3e6, 0x3e7

Function 2:
Public function signature: 0x7831ce79
Entry block: 0xbd
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0xbd, 0xc4, 0xc8, 0x3ea, 0x401, 0x405, 0x4a4, 0x4a5, 0x4bb, 0x4bc, 0x4d2, 0x4d3, 0x4e9, 0x4ea, 0x500, 0x501, 0x517, 0x518, 0x52e, 0x52f, 0x546, 0x547, 0x55d, 0x55e, 0x574, 0x575, 0x617, 0x61b, 0x6ba, 0x6bb, 0x6d1, 0x6d2, 0x6e8, 0x6e9, 0x6ff, 0x700, 0x716, 0x717, 0x72d, 0x72e, 0x744, 0x745, 0x75c, 0x75d, 0x773, 0x774, 0x78a, 0x78b, 0x82d, 0x831, 0x832

Function 3:
Public function signature: 0x8afc141c
Entry block: 0x1ad
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1ad, 0x1b4, 0x1b8, 0x83a, 0x851, 0x855, 0x8c5

Function 4:
Public function signature: 0x9a588c06
Entry block: 0x1d1
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1d1, 0x1d8, 0x1dc, 0x8c9, 0x8e0, 0x8e4, 0x95b

Function 5:
Public function signature: 0xace30bea
Entry block: 0x1f5
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1f5, 0x1fc, 0x200, 0x95f, 0x976, 0x97a, 0x98b, 0x98f, 0x9e8, 0x9ec, 0x9f9, 0x9fd, 0xa0e, 0xa12, 0xa13

Function 6:
Public function signature: 0xb5a4b539
Entry block: 0x21f
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x21f, 0x226, 0x22a, 0xa18, 0xa2f, 0xa33, 0xb69, 0xb6d, 0xb6e

Function 7:
Public function signature: 0xda03d507
Entry block: 0x275
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x275, 0x27c, 0x280, 0xb7c, 0xb93, 0xb97, 0xba8, 0xbac, 0xc31

Function 8:
Public function signature: 0xf851a440
Entry block: 0x29f
Exit block: 0x2b2
Body: 0x29f, 0x2a6, 0x2aa, 0x2b2, 0xc36

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f

