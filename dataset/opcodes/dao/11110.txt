Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x81]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2cf2c0af
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x81
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2cf2c0af
0x20: V14 = EQ V12 0x2cf2c0af
0x21: V15 = 0x81
0x24: JUMPI 0x81 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x99]
---
0x25 DUP1
0x26 PUSH4 0x2e1a7d4d
0x2b EQ
0x2c PUSH2 0x99
0x2f JUMPI
---
0x26: V16 = 0x2e1a7d4d
0x2b: V17 = EQ 0x2e1a7d4d V12
0x2c: V18 = 0x99
0x2f: JUMPI 0x99 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xb1]
---
0x30 DUP1
0x31 PUSH4 0x43d726d6
0x36 EQ
0x37 PUSH2 0xb1
0x3a JUMPI
---
0x31: V19 = 0x43d726d6
0x36: V20 = EQ 0x43d726d6 V12
0x37: V21 = 0xb1
0x3a: JUMPI 0xb1 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xc6]
---
0x3b DUP1
0x3c PUSH4 0x5c73dcea
0x41 EQ
0x42 PUSH2 0xc6
0x45 JUMPI
---
0x3c: V22 = 0x5c73dcea
0x41: V23 = EQ 0x5c73dcea V12
0x42: V24 = 0xc6
0x45: JUMPI 0xc6 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x127]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x127
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x127
0x50: JUMPI 0x127 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x158]
---
0x51 DUP1
0x52 PUSH4 0x7983bab4
0x57 EQ
0x58 PUSH2 0x158
0x5b JUMPI
---
0x52: V28 = 0x7983bab4
0x57: V29 = EQ 0x7983bab4 V12
0x58: V30 = 0x158
0x5b: JUMPI 0x158 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1a5]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x1a5
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x1a5
0x66: JUMPI 0x1a5 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1d4]
---
0x67 DUP1
0x68 PUSH4 0xd0e30db0
0x6d EQ
0x6e PUSH2 0x1d4
0x71 JUMPI
---
0x68: V34 = 0xd0e30db0
0x6d: V35 = EQ 0xd0e30db0 V12
0x6e: V36 = 0x1d4
0x71: JUMPI 0x1d4 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1de]
---
0x72 DUP1
0x73 PUSH4 0xf1b83630
0x78 EQ
0x79 PUSH2 0x1de
0x7c JUMPI
---
0x73: V37 = 0xf1b83630
0x78: V38 = EQ 0xf1b83630 V12
0x79: V39 = 0x1de
0x7c: JUMPI 0x1de V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x0, 0x72, 0x26a, 0x2be, 0x2eb, 0x684, 0x720]
Successors: [0x7e]
---
0x7d JUMPDEST
---
0x7d: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e
[0x7e:0x7e]
---
Predecessors: [0x7d]
Successors: [0x7f]
---
0x7e JUMPDEST
---
0x7e: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x7e]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81
[0x81:0x87]
---
Predecessors: [0xb]
Successors: [0x88, 0x8c]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 ISZERO
0x84 PUSH2 0x8c
0x87 JUMPI
---
0x81: JUMPDEST 
0x82: V40 = CALLVALUE
0x83: V41 = ISZERO V40
0x84: V42 = 0x8c
0x87: JUMPI 0x8c V41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x81]
Successors: []
---
0x88 PUSH1 0x0
0x8a DUP1
0x8b REVERT
---
0x88: V43 = 0x0
0x8b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x1f6]
---
0x8c JUMPDEST
0x8d PUSH2 0x7d
0x90 PUSH1 0x4
0x92 CALLDATALOAD
0x93 PUSH2 0x1f6
0x96 JUMP
---
0x8c: JUMPDEST 
0x8d: V44 = 0x7d
0x90: V45 = 0x4
0x92: V46 = CALLDATALOAD 0x4
0x93: V47 = 0x1f6
0x96: JUMP 0x1f6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V46]
Exit stack: [V12, 0x7d, V46]

================================

Block 0x97
[0x97:0x98]
---
Predecessors: []
Successors: []
---
0x97 JUMPDEST
0x98 STOP
---
0x97: JUMPDEST 
0x98: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x99
[0x99:0x9f]
---
Predecessors: [0x25]
Successors: [0xa0, 0xa4]
---
0x99 JUMPDEST
0x9a CALLVALUE
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x99: JUMPDEST 
0x9a: V48 = CALLVALUE
0x9b: V49 = ISZERO V48
0x9c: V50 = 0xa4
0x9f: JUMPI 0xa4 V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x99]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V51 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0x26e]
---
0xa4 JUMPDEST
0xa5 PUSH2 0x7d
0xa8 PUSH1 0x4
0xaa CALLDATALOAD
0xab PUSH2 0x26e
0xae JUMP
---
0xa4: JUMPDEST 
0xa5: V52 = 0x7d
0xa8: V53 = 0x4
0xaa: V54 = CALLDATALOAD 0x4
0xab: V55 = 0x26e
0xae: JUMP 0x26e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V54]
Exit stack: [V12, 0x7d, V54]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: []
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x30]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V56 = CALLVALUE
0xb3: V57 = ISZERO V56
0xb4: V58 = 0xbc
0xb7: JUMPI 0xbc V57
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V59 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb1]
Successors: [0x2c1]
---
0xbc JUMPDEST
0xbd PUSH2 0x7d
0xc0 PUSH2 0x2c1
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V60 = 0x7d
0xc0: V61 = 0x2c1
0xc3: JUMP 0x2c1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: []
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0x3b]
Successors: [0xcd, 0xd1]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V62 = CALLVALUE
0xc8: V63 = ISZERO V62
0xc9: V64 = 0xd1
0xcc: JUMPI 0xd1 V63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc6]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V65 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd1
[0xd1:0x112]
---
Predecessors: [0xc6]
Successors: [0x2ed]
---
0xd1 JUMPDEST
0xd2 PUSH2 0x113
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd PUSH1 0x4
0xdf CALLDATALOAD
0xe0 DUP2
0xe1 AND
0xe2 SWAP1
0xe3 PUSH1 0x24
0xe5 CALLDATALOAD
0xe6 SWAP1
0xe7 PUSH1 0x44
0xe9 CALLDATALOAD
0xea DUP2
0xeb AND
0xec SWAP1
0xed PUSH1 0x64
0xef CALLDATALOAD
0xf0 SWAP1
0xf1 PUSH1 0x84
0xf3 CALLDATALOAD
0xf4 SWAP1
0xf5 PUSH1 0xa4
0xf7 CALLDATALOAD
0xf8 SWAP1
0xf9 PUSH1 0xc4
0xfb CALLDATALOAD
0xfc AND
0xfd PUSH1 0xff
0xff PUSH1 0xe4
0x101 CALLDATALOAD
0x102 AND
0x103 PUSH2 0x104
0x106 CALLDATALOAD
0x107 PUSH2 0x124
0x10a CALLDATALOAD
0x10b PUSH2 0x144
0x10e CALLDATALOAD
0x10f PUSH2 0x2ed
0x112 JUMP
---
0xd1: JUMPDEST 
0xd2: V66 = 0x113
0xd5: V67 = 0x1
0xd7: V68 = 0xa0
0xd9: V69 = 0x2
0xdb: V70 = EXP 0x2 0xa0
0xdc: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd: V72 = 0x4
0xdf: V73 = CALLDATALOAD 0x4
0xe1: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0xe3: V75 = 0x24
0xe5: V76 = CALLDATALOAD 0x24
0xe7: V77 = 0x44
0xe9: V78 = CALLDATALOAD 0x44
0xeb: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0xed: V80 = 0x64
0xef: V81 = CALLDATALOAD 0x64
0xf1: V82 = 0x84
0xf3: V83 = CALLDATALOAD 0x84
0xf5: V84 = 0xa4
0xf7: V85 = CALLDATALOAD 0xa4
0xf9: V86 = 0xc4
0xfb: V87 = CALLDATALOAD 0xc4
0xfc: V88 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V89 = 0xff
0xff: V90 = 0xe4
0x101: V91 = CALLDATALOAD 0xe4
0x102: V92 = AND V91 0xff
0x103: V93 = 0x104
0x106: V94 = CALLDATALOAD 0x104
0x107: V95 = 0x124
0x10a: V96 = CALLDATALOAD 0x124
0x10b: V97 = 0x144
0x10e: V98 = CALLDATALOAD 0x144
0x10f: V99 = 0x2ed
0x112: JUMP 0x2ed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98]
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98]

================================

Block 0x113
[0x113:0x126]
---
Predecessors: [0x3c5]
Successors: []
---
0x113 JUMPDEST
0x114 PUSH1 0x40
0x116 MLOAD
0x117 SWAP1
0x118 ISZERO
0x119 ISZERO
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f PUSH1 0x40
0x121 MLOAD
0x122 DUP1
0x123 SWAP2
0x124 SUB
0x125 SWAP1
0x126 RETURN
---
0x113: JUMPDEST 
0x114: V100 = 0x40
0x116: V101 = M[0x40]
0x118: V102 = ISZERO V382
0x119: V103 = ISZERO V102
0x11b: M[V101] = V103
0x11c: V104 = 0x20
0x11e: V105 = ADD 0x20 V101
0x11f: V106 = 0x40
0x121: V107 = M[0x40]
0x124: V108 = SUB V105 V107
0x126: RETURN V107 V108
---
Entry stack: [V12, V382]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x127
[0x127:0x12d]
---
Predecessors: [0x46]
Successors: [0x12e, 0x132]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x127: JUMPDEST 
0x128: V109 = CALLVALUE
0x129: V110 = ISZERO V109
0x12a: V111 = 0x132
0x12d: JUMPI 0x132 V110
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x127]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V112 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x132
[0x132:0x145]
---
Predecessors: [0x127]
Successors: [0x3d5]
---
0x132 JUMPDEST
0x133 PUSH2 0x146
0x136 PUSH1 0x1
0x138 PUSH1 0xa0
0x13a PUSH1 0x2
0x13c EXP
0x13d SUB
0x13e PUSH1 0x4
0x140 CALLDATALOAD
0x141 AND
0x142 PUSH2 0x3d5
0x145 JUMP
---
0x132: JUMPDEST 
0x133: V113 = 0x146
0x136: V114 = 0x1
0x138: V115 = 0xa0
0x13a: V116 = 0x2
0x13c: V117 = EXP 0x2 0xa0
0x13d: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V119 = 0x4
0x140: V120 = CALLDATALOAD 0x4
0x141: V121 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x142: V122 = 0x3d5
0x145: JUMP 0x3d5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x146, V121]
Exit stack: [V12, 0x146, V121]

================================

Block 0x146
[0x146:0x157]
---
Predecessors: [0x456]
Successors: []
---
0x146 JUMPDEST
0x147 PUSH1 0x40
0x149 MLOAD
0x14a SWAP1
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x20
0x14f ADD
0x150 PUSH1 0x40
0x152 MLOAD
0x153 DUP1
0x154 SWAP2
0x155 SUB
0x156 SWAP1
0x157 RETURN
---
0x146: JUMPDEST 
0x147: V123 = 0x40
0x149: V124 = M[0x40]
0x14c: M[V124] = V439
0x14d: V125 = 0x20
0x14f: V126 = ADD 0x20 V124
0x150: V127 = 0x40
0x152: V128 = M[0x40]
0x155: V129 = SUB V126 V128
0x157: RETURN V128 V129
---
Entry stack: [V12, V439]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x158
[0x158:0x15e]
---
Predecessors: [0x51]
Successors: [0x15f, 0x163]
---
0x158 JUMPDEST
0x159 CALLVALUE
0x15a ISZERO
0x15b PUSH2 0x163
0x15e JUMPI
---
0x158: JUMPDEST 
0x159: V130 = CALLVALUE
0x15a: V131 = ISZERO V130
0x15b: V132 = 0x163
0x15e: JUMPI 0x163 V131
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15f
[0x15f:0x162]
---
Predecessors: [0x158]
Successors: []
---
0x15f PUSH1 0x0
0x161 DUP1
0x162 REVERT
---
0x15f: V133 = 0x0
0x162: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x163
[0x163:0x1a2]
---
Predecessors: [0x158]
Successors: [0x45c]
---
0x163 JUMPDEST
0x164 PUSH2 0x7d
0x167 PUSH1 0x4
0x169 CALLDATALOAD
0x16a PUSH1 0x24
0x16c CALLDATALOAD
0x16d PUSH1 0x1
0x16f PUSH1 0xa0
0x171 PUSH1 0x2
0x173 EXP
0x174 SUB
0x175 PUSH1 0x44
0x177 CALLDATALOAD
0x178 DUP2
0x179 AND
0x17a SWAP1
0x17b PUSH1 0x64
0x17d CALLDATALOAD
0x17e DUP2
0x17f AND
0x180 SWAP1
0x181 PUSH1 0x84
0x183 CALLDATALOAD
0x184 SWAP1
0x185 PUSH1 0xa4
0x187 CALLDATALOAD
0x188 SWAP1
0x189 PUSH1 0xc4
0x18b CALLDATALOAD
0x18c AND
0x18d PUSH1 0xe4
0x18f CALLDATALOAD
0x190 PUSH2 0x104
0x193 CALLDATALOAD
0x194 PUSH1 0xff
0x196 PUSH2 0x124
0x199 CALLDATALOAD
0x19a AND
0x19b PUSH2 0x144
0x19e CALLDATALOAD
0x19f PUSH2 0x45c
0x1a2 JUMP
---
0x163: JUMPDEST 
0x164: V134 = 0x7d
0x167: V135 = 0x4
0x169: V136 = CALLDATALOAD 0x4
0x16a: V137 = 0x24
0x16c: V138 = CALLDATALOAD 0x24
0x16d: V139 = 0x1
0x16f: V140 = 0xa0
0x171: V141 = 0x2
0x173: V142 = EXP 0x2 0xa0
0x174: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x175: V144 = 0x44
0x177: V145 = CALLDATALOAD 0x44
0x179: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x17b: V147 = 0x64
0x17d: V148 = CALLDATALOAD 0x64
0x17f: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x181: V150 = 0x84
0x183: V151 = CALLDATALOAD 0x84
0x185: V152 = 0xa4
0x187: V153 = CALLDATALOAD 0xa4
0x189: V154 = 0xc4
0x18b: V155 = CALLDATALOAD 0xc4
0x18c: V156 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V157 = 0xe4
0x18f: V158 = CALLDATALOAD 0xe4
0x190: V159 = 0x104
0x193: V160 = CALLDATALOAD 0x104
0x194: V161 = 0xff
0x196: V162 = 0x124
0x199: V163 = CALLDATALOAD 0x124
0x19a: V164 = AND V163 0xff
0x19b: V165 = 0x144
0x19e: V166 = CALLDATALOAD 0x144
0x19f: V167 = 0x45c
0x1a2: JUMP 0x45c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166]
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166]

================================

Block 0x1a3
[0x1a3:0x1a4]
---
Predecessors: []
Successors: []
---
0x1a3 JUMPDEST
0x1a4 STOP
---
0x1a3: JUMPDEST 
0x1a4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a5
[0x1a5:0x1ab]
---
Predecessors: [0x5c]
Successors: [0x1ac, 0x1b0]
---
0x1a5 JUMPDEST
0x1a6 CALLVALUE
0x1a7 ISZERO
0x1a8 PUSH2 0x1b0
0x1ab JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V168 = CALLVALUE
0x1a7: V169 = ISZERO V168
0x1a8: V170 = 0x1b0
0x1ab: JUMPI 0x1b0 V169
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ac
[0x1ac:0x1af]
---
Predecessors: [0x1a5]
Successors: []
---
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af REVERT
---
0x1ac: V171 = 0x0
0x1af: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b0
[0x1b0:0x1b7]
---
Predecessors: [0x1a5]
Successors: [0x692]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0x1b8
0x1b4 PUSH2 0x692
0x1b7 JUMP
---
0x1b0: JUMPDEST 
0x1b1: V172 = 0x1b8
0x1b4: V173 = 0x692
0x1b7: JUMP 0x692
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b8]
Exit stack: [V12, 0x1b8]

================================

Block 0x1b8
[0x1b8:0x1d3]
---
Predecessors: [0x692]
Successors: []
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x40
0x1bb MLOAD
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 SWAP1
0x1c5 SWAP2
0x1c6 AND
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf DUP1
0x1d0 SWAP2
0x1d1 SUB
0x1d2 SWAP1
0x1d3 RETURN
---
0x1b8: JUMPDEST 
0x1b9: V174 = 0x40
0x1bb: V175 = M[0x40]
0x1bc: V176 = 0x1
0x1be: V177 = 0xa0
0x1c0: V178 = 0x2
0x1c2: V179 = EXP 0x2 0xa0
0x1c3: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c6: V181 = AND V629 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: M[V175] = V181
0x1c9: V182 = 0x20
0x1cb: V183 = ADD 0x20 V175
0x1cc: V184 = 0x40
0x1ce: V185 = M[0x40]
0x1d1: V186 = SUB V183 V185
0x1d3: RETURN V185 V186
---
Entry stack: [V12, 0x1b8, V629]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b8]

================================

Block 0x1d4
[0x1d4:0x1db]
---
Predecessors: [0x67]
Successors: [0x2ea]
---
0x1d4 JUMPDEST
0x1d5 PUSH2 0x7d
0x1d8 PUSH2 0x2ea
0x1db JUMP
---
0x1d4: JUMPDEST 
0x1d5: V187 = 0x7d
0x1d8: V188 = 0x2ea
0x1db: JUMP 0x2ea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0x1dc
[0x1dc:0x1dd]
---
Predecessors: []
Successors: []
---
0x1dc JUMPDEST
0x1dd STOP
---
0x1dc: JUMPDEST 
0x1dd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1de
[0x1de:0x1e4]
---
Predecessors: [0x72]
Successors: [0x1e5, 0x1e9]
---
0x1de JUMPDEST
0x1df CALLVALUE
0x1e0 ISZERO
0x1e1 PUSH2 0x1e9
0x1e4 JUMPI
---
0x1de: JUMPDEST 
0x1df: V189 = CALLVALUE
0x1e0: V190 = ISZERO V189
0x1e1: V191 = 0x1e9
0x1e4: JUMPI 0x1e9 V190
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e5
[0x1e5:0x1e8]
---
Predecessors: [0x1de]
Successors: []
---
0x1e5 PUSH1 0x0
0x1e7 DUP1
0x1e8 REVERT
---
0x1e5: V192 = 0x0
0x1e8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e9
[0x1e9:0x1f3]
---
Predecessors: [0x1de]
Successors: [0x6a4]
---
0x1e9 JUMPDEST
0x1ea PUSH2 0x7d
0x1ed PUSH1 0x4
0x1ef CALLDATALOAD
0x1f0 PUSH2 0x6a4
0x1f3 JUMP
---
0x1e9: JUMPDEST 
0x1ea: V193 = 0x7d
0x1ed: V194 = 0x4
0x1ef: V195 = CALLDATALOAD 0x4
0x1f0: V196 = 0x6a4
0x1f3: JUMP 0x6a4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V195]
Exit stack: [V12, 0x7d, V195]

================================

Block 0x1f4
[0x1f4:0x1f5]
---
Predecessors: []
Successors: []
---
0x1f4 JUMPDEST
0x1f5 STOP
---
0x1f4: JUMPDEST 
0x1f5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f6
[0x1f6:0x20d]
---
Predecessors: [0x8c]
Successors: [0x20e, 0x212]
---
0x1f6 JUMPDEST
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa SLOAD
0x1fb CALLER
0x1fc PUSH1 0x1
0x1fe PUSH1 0xa0
0x200 PUSH1 0x2
0x202 EXP
0x203 SUB
0x204 SWAP1
0x205 DUP2
0x206 AND
0x207 SWAP2
0x208 AND
0x209 EQ
0x20a PUSH2 0x212
0x20d JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V197 = 0x0
0x1fa: V198 = S[0x0]
0x1fb: V199 = CALLER
0x1fc: V200 = 0x1
0x1fe: V201 = 0xa0
0x200: V202 = 0x2
0x202: V203 = EXP 0x2 0xa0
0x203: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x206: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x208: V206 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0x209: V207 = EQ V206 V205
0x20a: V208 = 0x212
0x20d: JUMPI 0x212 V207
---
Entry stack: [V12, 0x7d, V46]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V46, 0x0]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x1f6]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V209 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, 0x0]

================================

Block 0x212
[0x212:0x24e]
---
Predecessors: [0x1f6]
Successors: [0x24f, 0x253]
---
0x212 JUMPDEST
0x213 POP
0x214 PUSH1 0x1
0x216 SLOAD
0x217 PUSH1 0x1
0x219 PUSH1 0xa0
0x21b PUSH1 0x2
0x21d EXP
0x21e SUB
0x21f AND
0x220 DUP1
0x221 PUSH4 0xd0e30db0
0x226 DUP4
0x227 PUSH1 0x40
0x229 MLOAD
0x22a DUP3
0x22b PUSH4 0xffffffff
0x230 AND
0x231 PUSH1 0xe0
0x233 PUSH1 0x2
0x235 EXP
0x236 MUL
0x237 DUP2
0x238 MSTORE
0x239 PUSH1 0x4
0x23b ADD
0x23c PUSH1 0x0
0x23e PUSH1 0x40
0x240 MLOAD
0x241 DUP1
0x242 DUP4
0x243 SUB
0x244 DUP2
0x245 DUP6
0x246 DUP9
0x247 DUP1
0x248 EXTCODESIZE
0x249 ISZERO
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x212: JUMPDEST 
0x214: V210 = 0x1
0x216: V211 = S[0x1]
0x217: V212 = 0x1
0x219: V213 = 0xa0
0x21b: V214 = 0x2
0x21d: V215 = EXP 0x2 0xa0
0x21e: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21f: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x221: V218 = 0xd0e30db0
0x227: V219 = 0x40
0x229: V220 = M[0x40]
0x22b: V221 = 0xffffffff
0x230: V222 = AND 0xffffffff 0xd0e30db0
0x231: V223 = 0xe0
0x233: V224 = 0x2
0x235: V225 = EXP 0x2 0xe0
0x236: V226 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x238: M[V220] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x239: V227 = 0x4
0x23b: V228 = ADD 0x4 V220
0x23c: V229 = 0x0
0x23e: V230 = 0x40
0x240: V231 = M[0x40]
0x243: V232 = SUB V228 V231
0x248: V233 = EXTCODESIZE V217
0x249: V234 = ISZERO V233
0x24a: V235 = ISZERO V234
0x24b: V236 = 0x253
0x24e: JUMPI 0x253 V235
---
Entry stack: [V12, 0x7d, V46, 0x0]
Stack pops: 2
Stack additions: [S1, V217, V217, 0xd0e30db0, S1, V228, 0x0, V231, V232, V231, S1, V217]
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x212]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V237 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]

================================

Block 0x253
[0x253:0x25f]
---
Predecessors: [0x212]
Successors: [0x260, 0x264]
---
0x253 JUMPDEST
0x254 PUSH2 0x25ee
0x257 GAS
0x258 SUB
0x259 CALL
0x25a ISZERO
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x253: JUMPDEST 
0x254: V238 = 0x25ee
0x257: V239 = GAS
0x258: V240 = SUB V239 0x25ee
0x259: V241 = CALL V240 V217 V46 V231 V232 V231 0x0
0x25a: V242 = ISZERO V241
0x25b: V243 = ISZERO V242
0x25c: V244 = 0x264
0x25f: JUMPI 0x264 V243
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228, 0x0, V231, V232, V231, V46, V217]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x253]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V245 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]

================================

Block 0x264
[0x264:0x268]
---
Predecessors: [0x253]
Successors: [0x269]
---
0x264 JUMPDEST
0x265 POP
0x266 POP
0x267 POP
0x268 POP
---
0x264: JUMPDEST 
---
Entry stack: [V12, 0x7d, V46, V217, V217, 0xd0e30db0, V46, V228]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217]

================================

Block 0x269
[0x269:0x269]
---
Predecessors: [0x264]
Successors: [0x26a]
---
0x269 JUMPDEST
---
0x269: JUMPDEST 
---
Entry stack: [V12, 0x7d, V46, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V46, V217]

================================

Block 0x26a
[0x26a:0x26d]
---
Predecessors: [0x269]
Successors: [0x7d]
---
0x26a JUMPDEST
0x26b POP
0x26c POP
0x26d JUMP
---
0x26a: JUMPDEST 
0x26d: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V46, V217]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x26e
[0x26e:0x284]
---
Predecessors: [0xa4]
Successors: [0x285, 0x289]
---
0x26e JUMPDEST
0x26f PUSH1 0x0
0x271 SLOAD
0x272 CALLER
0x273 PUSH1 0x1
0x275 PUSH1 0xa0
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b SWAP1
0x27c DUP2
0x27d AND
0x27e SWAP2
0x27f AND
0x280 EQ
0x281 PUSH2 0x289
0x284 JUMPI
---
0x26e: JUMPDEST 
0x26f: V246 = 0x0
0x271: V247 = S[0x0]
0x272: V248 = CALLER
0x273: V249 = 0x1
0x275: V250 = 0xa0
0x277: V251 = 0x2
0x279: V252 = EXP 0x2 0xa0
0x27a: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27d: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x27f: V255 = AND V247 0xffffffffffffffffffffffffffffffffffffffff
0x280: V256 = EQ V255 V254
0x281: V257 = 0x289
0x284: JUMPI 0x289 V256
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x26e]
Successors: []
---
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
---
0x285: V258 = 0x0
0x288: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x289
[0x289:0x2b7]
---
Predecessors: [0x26e]
Successors: [0x2b8, 0x2bc]
---
0x289 JUMPDEST
0x28a PUSH1 0x0
0x28c SLOAD
0x28d PUSH1 0x1
0x28f PUSH1 0xa0
0x291 PUSH1 0x2
0x293 EXP
0x294 SUB
0x295 AND
0x296 DUP2
0x297 ISZERO
0x298 PUSH2 0x8fc
0x29b MUL
0x29c DUP3
0x29d PUSH1 0x40
0x29f MLOAD
0x2a0 PUSH1 0x0
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 DUP1
0x2a6 DUP4
0x2a7 SUB
0x2a8 DUP2
0x2a9 DUP6
0x2aa DUP9
0x2ab DUP9
0x2ac CALL
0x2ad SWAP4
0x2ae POP
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 ISZERO
0x2b3 ISZERO
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x289: JUMPDEST 
0x28a: V259 = 0x0
0x28c: V260 = S[0x0]
0x28d: V261 = 0x1
0x28f: V262 = 0xa0
0x291: V263 = 0x2
0x293: V264 = EXP 0x2 0xa0
0x294: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x295: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x297: V267 = ISZERO V54
0x298: V268 = 0x8fc
0x29b: V269 = MUL 0x8fc V267
0x29d: V270 = 0x40
0x29f: V271 = M[0x40]
0x2a0: V272 = 0x0
0x2a2: V273 = 0x40
0x2a4: V274 = M[0x40]
0x2a7: V275 = SUB V271 V274
0x2ac: V276 = CALL V269 V266 V54 V274 V275 V274 0x0
0x2b2: V277 = ISZERO V276
0x2b3: V278 = ISZERO V277
0x2b4: V279 = 0x2bc
0x2b7: JUMPI 0x2bc V278
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x289]
Successors: []
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
---
0x2b8: V280 = 0x0
0x2bb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2bc
[0x2bc:0x2bc]
---
Predecessors: [0x289]
Successors: [0x2bd]
---
0x2bc JUMPDEST
---
0x2bc: JUMPDEST 
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2bd
[0x2bd:0x2bd]
---
Predecessors: [0x2bc]
Successors: [0x2be]
---
0x2bd JUMPDEST
---
0x2bd: JUMPDEST 
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V54]

================================

Block 0x2be
[0x2be:0x2c0]
---
Predecessors: [0x2bd]
Successors: [0x7d]
---
0x2be JUMPDEST
0x2bf POP
0x2c0 JUMP
---
0x2be: JUMPDEST 
0x2c0: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V54]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c1
[0x2c1:0x2d7]
---
Predecessors: [0xbc]
Successors: [0x2d8, 0x2dc]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x0
0x2c4 SLOAD
0x2c5 CALLER
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce SWAP1
0x2cf DUP2
0x2d0 AND
0x2d1 SWAP2
0x2d2 AND
0x2d3 EQ
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V281 = 0x0
0x2c4: V282 = S[0x0]
0x2c5: V283 = CALLER
0x2c6: V284 = 0x1
0x2c8: V285 = 0xa0
0x2ca: V286 = 0x2
0x2cc: V287 = EXP 0x2 0xa0
0x2cd: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x2d2: V290 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V291 = EQ V290 V289
0x2d4: V292 = 0x2dc
0x2d7: JUMPI 0x2dc V291
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2c1]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V293 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2dc
[0x2dc:0x2e9]
---
Predecessors: [0x2c1]
Successors: []
---
0x2dc JUMPDEST
0x2dd PUSH1 0x0
0x2df SLOAD
0x2e0 PUSH1 0x1
0x2e2 PUSH1 0xa0
0x2e4 PUSH1 0x2
0x2e6 EXP
0x2e7 SUB
0x2e8 AND
0x2e9 SELFDESTRUCT
---
0x2dc: JUMPDEST 
0x2dd: V294 = 0x0
0x2df: V295 = S[0x0]
0x2e0: V296 = 0x1
0x2e2: V297 = 0xa0
0x2e4: V298 = 0x2
0x2e6: V299 = EXP 0x2 0xa0
0x2e7: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e8: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x2e9: SELFDESTRUCT V301
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2ea
[0x2ea:0x2ea]
---
Predecessors: [0x1d4]
Successors: [0x2eb]
---
0x2ea JUMPDEST
---
0x2ea: JUMPDEST 
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x2eb
[0x2eb:0x2ec]
---
Predecessors: [0x2ea]
Successors: [0x7d]
---
0x2eb JUMPDEST
0x2ec JUMP
---
0x2eb: JUMPDEST 
0x2ec: JUMP 0x7d
---
Entry stack: [V12, 0x7d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ed
[0x2ed:0x3a3]
---
Predecessors: [0xd1]
Successors: [0x3a4, 0x3a8]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x1
0x2f0 SLOAD
0x2f1 PUSH1 0x0
0x2f3 SWAP1
0x2f4 PUSH1 0x1
0x2f6 PUSH1 0xa0
0x2f8 PUSH1 0x2
0x2fa EXP
0x2fb SUB
0x2fc AND
0x2fd DUP1
0x2fe PUSH4 0x6c86888b
0x303 DUP15
0x304 DUP15
0x305 DUP15
0x306 DUP15
0x307 DUP15
0x308 DUP15
0x309 DUP15
0x30a DUP15
0x30b DUP15
0x30c DUP15
0x30d DUP15
0x30e ADDRESS
0x30f DUP16
0x310 PUSH1 0x40
0x312 MLOAD
0x313 PUSH1 0x20
0x315 ADD
0x316 MSTORE
0x317 PUSH1 0x40
0x319 MLOAD
0x31a PUSH1 0xe0
0x31c PUSH1 0x2
0x31e EXP
0x31f PUSH4 0xffffffff
0x324 DUP16
0x325 AND
0x326 MUL
0x327 DUP2
0x328 MSTORE
0x329 PUSH1 0x1
0x32b PUSH1 0xa0
0x32d PUSH1 0x2
0x32f EXP
0x330 SUB
0x331 SWAP13
0x332 DUP14
0x333 AND
0x334 PUSH1 0x4
0x336 DUP3
0x337 ADD
0x338 MSTORE
0x339 PUSH1 0x24
0x33b DUP2
0x33c ADD
0x33d SWAP12
0x33e SWAP1
0x33f SWAP12
0x340 MSTORE
0x341 SWAP9
0x342 DUP12
0x343 AND
0x344 PUSH1 0x44
0x346 DUP12
0x347 ADD
0x348 MSTORE
0x349 PUSH1 0x64
0x34b DUP11
0x34c ADD
0x34d SWAP8
0x34e SWAP1
0x34f SWAP8
0x350 MSTORE
0x351 PUSH1 0x84
0x353 DUP10
0x354 ADD
0x355 SWAP6
0x356 SWAP1
0x357 SWAP6
0x358 MSTORE
0x359 PUSH1 0xa4
0x35b DUP9
0x35c ADD
0x35d SWAP4
0x35e SWAP1
0x35f SWAP4
0x360 MSTORE
0x361 SWAP1
0x362 DUP8
0x363 AND
0x364 PUSH1 0xc4
0x366 DUP8
0x367 ADD
0x368 MSTORE
0x369 PUSH1 0xff
0x36b AND
0x36c PUSH1 0xe4
0x36e DUP7
0x36f ADD
0x370 MSTORE
0x371 PUSH2 0x104
0x374 DUP6
0x375 ADD
0x376 MSTORE
0x377 PUSH2 0x124
0x37a DUP5
0x37b ADD
0x37c MSTORE
0x37d PUSH2 0x144
0x380 DUP4
0x381 ADD
0x382 MSTORE
0x383 SWAP1
0x384 SWAP2
0x385 AND
0x386 PUSH2 0x164
0x389 DUP3
0x38a ADD
0x38b MSTORE
0x38c PUSH2 0x184
0x38f ADD
0x390 PUSH1 0x20
0x392 PUSH1 0x40
0x394 MLOAD
0x395 DUP1
0x396 DUP4
0x397 SUB
0x398 DUP2
0x399 PUSH1 0x0
0x39b DUP8
0x39c DUP1
0x39d EXTCODESIZE
0x39e ISZERO
0x39f ISZERO
0x3a0 PUSH2 0x3a8
0x3a3 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V302 = 0x1
0x2f0: V303 = S[0x1]
0x2f1: V304 = 0x0
0x2f4: V305 = 0x1
0x2f6: V306 = 0xa0
0x2f8: V307 = 0x2
0x2fa: V308 = EXP 0x2 0xa0
0x2fb: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fc: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x2fe: V311 = 0x6c86888b
0x30e: V312 = ADDRESS
0x310: V313 = 0x40
0x312: V314 = M[0x40]
0x313: V315 = 0x20
0x315: V316 = ADD 0x20 V314
0x316: M[V316] = 0x0
0x317: V317 = 0x40
0x319: V318 = M[0x40]
0x31a: V319 = 0xe0
0x31c: V320 = 0x2
0x31e: V321 = EXP 0x2 0xe0
0x31f: V322 = 0xffffffff
0x325: V323 = AND 0x6c86888b 0xffffffff
0x326: V324 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x328: M[V318] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x329: V325 = 0x1
0x32b: V326 = 0xa0
0x32d: V327 = 0x2
0x32f: V328 = EXP 0x2 0xa0
0x330: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x333: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x334: V331 = 0x4
0x337: V332 = ADD V318 0x4
0x338: M[V332] = V330
0x339: V333 = 0x24
0x33c: V334 = ADD V318 0x24
0x340: M[V334] = V76
0x343: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x344: V336 = 0x44
0x347: V337 = ADD V318 0x44
0x348: M[V337] = V335
0x349: V338 = 0x64
0x34c: V339 = ADD V318 0x64
0x350: M[V339] = V81
0x351: V340 = 0x84
0x354: V341 = ADD V318 0x84
0x358: M[V341] = V83
0x359: V342 = 0xa4
0x35c: V343 = ADD V318 0xa4
0x360: M[V343] = V85
0x363: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x364: V345 = 0xc4
0x367: V346 = ADD V318 0xc4
0x368: M[V346] = V344
0x369: V347 = 0xff
0x36b: V348 = AND 0xff V92
0x36c: V349 = 0xe4
0x36f: V350 = ADD V318 0xe4
0x370: M[V350] = V348
0x371: V351 = 0x104
0x375: V352 = ADD V318 0x104
0x376: M[V352] = V94
0x377: V353 = 0x124
0x37b: V354 = ADD V318 0x124
0x37c: M[V354] = V96
0x37d: V355 = 0x144
0x381: V356 = ADD V318 0x144
0x382: M[V356] = V98
0x385: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x386: V358 = 0x164
0x38a: V359 = ADD V318 0x164
0x38b: M[V359] = V357
0x38c: V360 = 0x184
0x38f: V361 = ADD 0x184 V318
0x390: V362 = 0x20
0x392: V363 = 0x40
0x394: V364 = M[0x40]
0x397: V365 = SUB V361 V364
0x399: V366 = 0x0
0x39d: V367 = EXTCODESIZE V310
0x39e: V368 = ISZERO V367
0x39f: V369 = ISZERO V368
0x3a0: V370 = 0x3a8
0x3a3: JUMPI 0x3a8 V369
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]

================================

Block 0x3a4
[0x3a4:0x3a7]
---
Predecessors: [0x2ed]
Successors: []
---
0x3a4 PUSH1 0x0
0x3a6 DUP1
0x3a7 REVERT
---
0x3a4: V371 = 0x0
0x3a7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]

================================

Block 0x3a8
[0x3a8:0x3b4]
---
Predecessors: [0x2ed]
Successors: [0x3b5, 0x3b9]
---
0x3a8 JUMPDEST
0x3a9 PUSH2 0x2c6
0x3ac GAS
0x3ad SUB
0x3ae CALL
0x3af ISZERO
0x3b0 ISZERO
0x3b1 PUSH2 0x3b9
0x3b4 JUMPI
---
0x3a8: JUMPDEST 
0x3a9: V372 = 0x2c6
0x3ac: V373 = GAS
0x3ad: V374 = SUB V373 0x2c6
0x3ae: V375 = CALL V374 V310 0x0 V364 V365 V364 0x20
0x3af: V376 = ISZERO V375
0x3b0: V377 = ISZERO V376
0x3b1: V378 = 0x3b9
0x3b4: JUMPI 0x3b9 V377
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361, 0x20, V364, V365, V364, 0x0, V310]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]

================================

Block 0x3b5
[0x3b5:0x3b8]
---
Predecessors: [0x3a8]
Successors: []
---
0x3b5 PUSH1 0x0
0x3b7 DUP1
0x3b8 REVERT
---
0x3b5: V379 = 0x0
0x3b8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]

================================

Block 0x3b9
[0x3b9:0x3c4]
---
Predecessors: [0x3a8]
Successors: [0x3c5]
---
0x3b9 JUMPDEST
0x3ba POP
0x3bb POP
0x3bc POP
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 DUP1
0x3c1 MLOAD
0x3c2 SWAP3
0x3c3 POP
0x3c4 POP
---
0x3b9: JUMPDEST 
0x3bd: V380 = 0x40
0x3bf: V381 = M[0x40]
0x3c1: V382 = M[V381]
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, 0x0, V310, V310, 0x6c86888b, V361]
Stack pops: 5
Stack additions: [V382, S3]
Exit stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, V382, V310]

================================

Block 0x3c5
[0x3c5:0x3d4]
---
Predecessors: [0x3b9]
Successors: [0x113]
---
0x3c5 JUMPDEST
0x3c6 POP
0x3c7 SWAP12
0x3c8 SWAP11
0x3c9 POP
0x3ca POP
0x3cb POP
0x3cc POP
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 POP
0x3d4 JUMP
---
0x3c5: JUMPDEST 
0x3d4: JUMP 0x113
---
Entry stack: [V12, 0x113, V74, V76, V79, V81, V83, V85, V88, V92, V94, V96, V98, V382, V310]
Stack pops: 14
Stack additions: [S1]
Exit stack: [V12, V382]

================================

Block 0x3d5
[0x3d5:0x434]
---
Predecessors: [0x132]
Successors: [0x435, 0x439]
---
0x3d5 JUMPDEST
0x3d6 PUSH1 0x1
0x3d8 SLOAD
0x3d9 PUSH1 0x0
0x3db SWAP1
0x3dc PUSH1 0x1
0x3de PUSH1 0xa0
0x3e0 PUSH1 0x2
0x3e2 EXP
0x3e3 SUB
0x3e4 AND
0x3e5 DUP1
0x3e6 PUSH4 0xf7888aec
0x3eb DUP5
0x3ec ADDRESS
0x3ed DUP6
0x3ee PUSH1 0x40
0x3f0 MLOAD
0x3f1 PUSH1 0x20
0x3f3 ADD
0x3f4 MSTORE
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 PUSH1 0xe0
0x3fa PUSH1 0x2
0x3fc EXP
0x3fd PUSH4 0xffffffff
0x402 DUP6
0x403 AND
0x404 MUL
0x405 DUP2
0x406 MSTORE
0x407 PUSH1 0x1
0x409 PUSH1 0xa0
0x40b PUSH1 0x2
0x40d EXP
0x40e SUB
0x40f SWAP3
0x410 DUP4
0x411 AND
0x412 PUSH1 0x4
0x414 DUP3
0x415 ADD
0x416 MSTORE
0x417 SWAP2
0x418 AND
0x419 PUSH1 0x24
0x41b DUP3
0x41c ADD
0x41d MSTORE
0x41e PUSH1 0x44
0x420 ADD
0x421 PUSH1 0x20
0x423 PUSH1 0x40
0x425 MLOAD
0x426 DUP1
0x427 DUP4
0x428 SUB
0x429 DUP2
0x42a PUSH1 0x0
0x42c DUP8
0x42d DUP1
0x42e EXTCODESIZE
0x42f ISZERO
0x430 ISZERO
0x431 PUSH2 0x439
0x434 JUMPI
---
0x3d5: JUMPDEST 
0x3d6: V383 = 0x1
0x3d8: V384 = S[0x1]
0x3d9: V385 = 0x0
0x3dc: V386 = 0x1
0x3de: V387 = 0xa0
0x3e0: V388 = 0x2
0x3e2: V389 = EXP 0x2 0xa0
0x3e3: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e4: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x3e6: V392 = 0xf7888aec
0x3ec: V393 = ADDRESS
0x3ee: V394 = 0x40
0x3f0: V395 = M[0x40]
0x3f1: V396 = 0x20
0x3f3: V397 = ADD 0x20 V395
0x3f4: M[V397] = 0x0
0x3f5: V398 = 0x40
0x3f7: V399 = M[0x40]
0x3f8: V400 = 0xe0
0x3fa: V401 = 0x2
0x3fc: V402 = EXP 0x2 0xe0
0x3fd: V403 = 0xffffffff
0x403: V404 = AND 0xf7888aec 0xffffffff
0x404: V405 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x406: M[V399] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x407: V406 = 0x1
0x409: V407 = 0xa0
0x40b: V408 = 0x2
0x40d: V409 = EXP 0x2 0xa0
0x40e: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x411: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x412: V412 = 0x4
0x415: V413 = ADD V399 0x4
0x416: M[V413] = V411
0x418: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x419: V415 = 0x24
0x41c: V416 = ADD V399 0x24
0x41d: M[V416] = V414
0x41e: V417 = 0x44
0x420: V418 = ADD 0x44 V399
0x421: V419 = 0x20
0x423: V420 = 0x40
0x425: V421 = M[0x40]
0x428: V422 = SUB V418 V421
0x42a: V423 = 0x0
0x42e: V424 = EXTCODESIZE V391
0x42f: V425 = ISZERO V424
0x430: V426 = ISZERO V425
0x431: V427 = 0x439
0x434: JUMPI 0x439 V426
---
Entry stack: [V12, 0x146, V121]
Stack pops: 1
Stack additions: [S0, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]

================================

Block 0x435
[0x435:0x438]
---
Predecessors: [0x3d5]
Successors: []
---
0x435 PUSH1 0x0
0x437 DUP1
0x438 REVERT
---
0x435: V428 = 0x0
0x438: REVERT 0x0 0x0
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]

================================

Block 0x439
[0x439:0x445]
---
Predecessors: [0x3d5]
Successors: [0x446, 0x44a]
---
0x439 JUMPDEST
0x43a PUSH2 0x2c6
0x43d GAS
0x43e SUB
0x43f CALL
0x440 ISZERO
0x441 ISZERO
0x442 PUSH2 0x44a
0x445 JUMPI
---
0x439: JUMPDEST 
0x43a: V429 = 0x2c6
0x43d: V430 = GAS
0x43e: V431 = SUB V430 0x2c6
0x43f: V432 = CALL V431 V391 0x0 V421 V422 V421 0x20
0x440: V433 = ISZERO V432
0x441: V434 = ISZERO V433
0x442: V435 = 0x44a
0x445: JUMPI 0x44a V434
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418, 0x20, V421, V422, V421, 0x0, V391]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x439]
Successors: []
---
0x446 PUSH1 0x0
0x448 DUP1
0x449 REVERT
---
0x446: V436 = 0x0
0x449: REVERT 0x0 0x0
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]

================================

Block 0x44a
[0x44a:0x455]
---
Predecessors: [0x439]
Successors: [0x456]
---
0x44a JUMPDEST
0x44b POP
0x44c POP
0x44d POP
0x44e PUSH1 0x40
0x450 MLOAD
0x451 DUP1
0x452 MLOAD
0x453 SWAP3
0x454 POP
0x455 POP
---
0x44a: JUMPDEST 
0x44e: V437 = 0x40
0x450: V438 = M[0x40]
0x452: V439 = M[V438]
---
Entry stack: [V12, 0x146, V121, 0x0, V391, V391, 0xf7888aec, V418]
Stack pops: 5
Stack additions: [V439, S3]
Exit stack: [V12, 0x146, V121, V439, V391]

================================

Block 0x456
[0x456:0x45b]
---
Predecessors: [0x44a]
Successors: [0x146]
---
0x456 JUMPDEST
0x457 POP
0x458 SWAP2
0x459 SWAP1
0x45a POP
0x45b JUMP
---
0x456: JUMPDEST 
0x45b: JUMP 0x146
---
Entry stack: [V12, 0x146, V121, V439, V391]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V439]

================================

Block 0x45c
[0x45c:0x473]
---
Predecessors: [0x163]
Successors: [0x474, 0x478]
---
0x45c JUMPDEST
0x45d PUSH1 0x0
0x45f DUP1
0x460 SLOAD
0x461 CALLER
0x462 PUSH1 0x1
0x464 PUSH1 0xa0
0x466 PUSH1 0x2
0x468 EXP
0x469 SUB
0x46a SWAP1
0x46b DUP2
0x46c AND
0x46d SWAP2
0x46e AND
0x46f EQ
0x470 PUSH2 0x478
0x473 JUMPI
---
0x45c: JUMPDEST 
0x45d: V440 = 0x0
0x460: V441 = S[0x0]
0x461: V442 = CALLER
0x462: V443 = 0x1
0x464: V444 = 0xa0
0x466: V445 = 0x2
0x468: V446 = EXP 0x2 0xa0
0x469: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46c: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x46e: V449 = AND V441 0xffffffffffffffffffffffffffffffffffffffff
0x46f: V450 = EQ V449 V448
0x470: V451 = 0x478
0x473: JUMPI 0x478 V450
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, 0x0]

================================

Block 0x474
[0x474:0x477]
---
Predecessors: [0x45c]
Successors: []
---
0x474 PUSH1 0x0
0x476 DUP1
0x477 REVERT
---
0x474: V452 = 0x0
0x477: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, 0x0]

================================

Block 0x478
[0x478:0x52d]
---
Predecessors: [0x45c]
Successors: [0x52e, 0x532]
---
0x478 JUMPDEST
0x479 POP
0x47a PUSH1 0x1
0x47c SLOAD
0x47d PUSH1 0x1
0x47f PUSH1 0xa0
0x481 PUSH1 0x2
0x483 EXP
0x484 SUB
0x485 AND
0x486 DUP1
0x487 PUSH4 0x6c86888b
0x48c DUP11
0x48d DUP15
0x48e DUP14
0x48f DUP16
0x490 DUP13
0x491 DUP15
0x492 DUP14
0x493 DUP12
0x494 DUP14
0x495 DUP16
0x496 DUP14
0x497 ADDRESS
0x498 PUSH1 0x0
0x49a PUSH1 0x40
0x49c MLOAD
0x49d PUSH1 0x20
0x49f ADD
0x4a0 MSTORE
0x4a1 PUSH1 0x40
0x4a3 MLOAD
0x4a4 PUSH1 0xe0
0x4a6 PUSH1 0x2
0x4a8 EXP
0x4a9 PUSH4 0xffffffff
0x4ae DUP16
0x4af AND
0x4b0 MUL
0x4b1 DUP2
0x4b2 MSTORE
0x4b3 PUSH1 0x1
0x4b5 PUSH1 0xa0
0x4b7 PUSH1 0x2
0x4b9 EXP
0x4ba SUB
0x4bb SWAP13
0x4bc DUP14
0x4bd AND
0x4be PUSH1 0x4
0x4c0 DUP3
0x4c1 ADD
0x4c2 MSTORE
0x4c3 PUSH1 0x24
0x4c5 DUP2
0x4c6 ADD
0x4c7 SWAP12
0x4c8 SWAP1
0x4c9 SWAP12
0x4ca MSTORE
0x4cb SWAP9
0x4cc DUP12
0x4cd AND
0x4ce PUSH1 0x44
0x4d0 DUP12
0x4d1 ADD
0x4d2 MSTORE
0x4d3 PUSH1 0x64
0x4d5 DUP11
0x4d6 ADD
0x4d7 SWAP8
0x4d8 SWAP1
0x4d9 SWAP8
0x4da MSTORE
0x4db PUSH1 0x84
0x4dd DUP10
0x4de ADD
0x4df SWAP6
0x4e0 SWAP1
0x4e1 SWAP6
0x4e2 MSTORE
0x4e3 PUSH1 0xa4
0x4e5 DUP9
0x4e6 ADD
0x4e7 SWAP4
0x4e8 SWAP1
0x4e9 SWAP4
0x4ea MSTORE
0x4eb SWAP1
0x4ec DUP8
0x4ed AND
0x4ee PUSH1 0xc4
0x4f0 DUP8
0x4f1 ADD
0x4f2 MSTORE
0x4f3 PUSH1 0xff
0x4f5 AND
0x4f6 PUSH1 0xe4
0x4f8 DUP7
0x4f9 ADD
0x4fa MSTORE
0x4fb PUSH2 0x104
0x4fe DUP6
0x4ff ADD
0x500 MSTORE
0x501 PUSH2 0x124
0x504 DUP5
0x505 ADD
0x506 MSTORE
0x507 PUSH2 0x144
0x50a DUP4
0x50b ADD
0x50c MSTORE
0x50d SWAP1
0x50e SWAP2
0x50f AND
0x510 PUSH2 0x164
0x513 DUP3
0x514 ADD
0x515 MSTORE
0x516 PUSH2 0x184
0x519 ADD
0x51a PUSH1 0x20
0x51c PUSH1 0x40
0x51e MLOAD
0x51f DUP1
0x520 DUP4
0x521 SUB
0x522 DUP2
0x523 PUSH1 0x0
0x525 DUP8
0x526 DUP1
0x527 EXTCODESIZE
0x528 ISZERO
0x529 ISZERO
0x52a PUSH2 0x532
0x52d JUMPI
---
0x478: JUMPDEST 
0x47a: V453 = 0x1
0x47c: V454 = S[0x1]
0x47d: V455 = 0x1
0x47f: V456 = 0xa0
0x481: V457 = 0x2
0x483: V458 = EXP 0x2 0xa0
0x484: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x485: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x487: V461 = 0x6c86888b
0x497: V462 = ADDRESS
0x498: V463 = 0x0
0x49a: V464 = 0x40
0x49c: V465 = M[0x40]
0x49d: V466 = 0x20
0x49f: V467 = ADD 0x20 V465
0x4a0: M[V467] = 0x0
0x4a1: V468 = 0x40
0x4a3: V469 = M[0x40]
0x4a4: V470 = 0xe0
0x4a6: V471 = 0x2
0x4a8: V472 = EXP 0x2 0xe0
0x4a9: V473 = 0xffffffff
0x4af: V474 = AND 0x6c86888b 0xffffffff
0x4b0: V475 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x4b2: M[V469] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x4b3: V476 = 0x1
0x4b5: V477 = 0xa0
0x4b7: V478 = 0x2
0x4b9: V479 = EXP 0x2 0xa0
0x4ba: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bd: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x4be: V482 = 0x4
0x4c1: V483 = ADD V469 0x4
0x4c2: M[V483] = V481
0x4c3: V484 = 0x24
0x4c6: V485 = ADD V469 0x24
0x4ca: M[V485] = V136
0x4cd: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x4ce: V487 = 0x44
0x4d1: V488 = ADD V469 0x44
0x4d2: M[V488] = V486
0x4d3: V489 = 0x64
0x4d6: V490 = ADD V469 0x64
0x4da: M[V490] = V138
0x4db: V491 = 0x84
0x4de: V492 = ADD V469 0x84
0x4e2: M[V492] = V153
0x4e3: V493 = 0xa4
0x4e6: V494 = ADD V469 0xa4
0x4ea: M[V494] = V151
0x4ed: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x4ee: V496 = 0xc4
0x4f1: V497 = ADD V469 0xc4
0x4f2: M[V497] = V495
0x4f3: V498 = 0xff
0x4f5: V499 = AND 0xff V164
0x4f6: V500 = 0xe4
0x4f9: V501 = ADD V469 0xe4
0x4fa: M[V501] = V499
0x4fb: V502 = 0x104
0x4ff: V503 = ADD V469 0x104
0x500: M[V503] = V160
0x501: V504 = 0x124
0x505: V505 = ADD V469 0x124
0x506: M[V505] = V158
0x507: V506 = 0x144
0x50b: V507 = ADD V469 0x144
0x50c: M[V507] = V166
0x50f: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x510: V509 = 0x164
0x514: V510 = ADD V469 0x164
0x515: M[V510] = V508
0x516: V511 = 0x184
0x519: V512 = ADD 0x184 V469
0x51a: V513 = 0x20
0x51c: V514 = 0x40
0x51e: V515 = M[0x40]
0x521: V516 = SUB V512 V515
0x523: V517 = 0x0
0x527: V518 = EXTCODESIZE V460
0x528: V519 = ISZERO V518
0x529: V520 = ISZERO V519
0x52a: V521 = 0x532
0x52d: JUMPI 0x532 V520
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V460, V460, 0x6c86888b, V512, 0x20, V515, V516, V515, 0x0, V460]
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V460, 0x6c86888b, V512, 0x20, V515, V516, V515, 0x0, V460]

================================

Block 0x52e
[0x52e:0x531]
---
Predecessors: [0x478]
Successors: []
---
0x52e PUSH1 0x0
0x530 DUP1
0x531 REVERT
---
0x52e: V522 = 0x0
0x531: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V460, 0x6c86888b, V512, 0x20, V515, V516, V515, 0x0, V460]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V460, 0x6c86888b, V512, 0x20, V515, V516, V515, 0x0, V460]

================================

Block 0x532
[0x532:0x53e]
---
Predecessors: [0x478]
Successors: [0x53f, 0x543]
---
0x532 JUMPDEST
0x533 PUSH2 0x2c6
0x536 GAS
0x537 SUB
0x538 CALL
0x539 ISZERO
0x53a ISZERO
0x53b PUSH2 0x543
0x53e JUMPI
---
0x532: JUMPDEST 
0x533: V523 = 0x2c6
0x536: V524 = GAS
0x537: V525 = SUB V524 0x2c6
0x538: V526 = CALL V525 V460 0x0 V515 V516 V515 0x20
0x539: V527 = ISZERO V526
0x53a: V528 = ISZERO V527
0x53b: V529 = 0x543
0x53e: JUMPI 0x543 V528
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V460, 0x6c86888b, V512, 0x20, V515, V516, V515, 0x0, V460]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V460, 0x6c86888b, V512]

================================

Block 0x53f
[0x53f:0x542]
---
Predecessors: [0x532]
Successors: []
---
0x53f PUSH1 0x0
0x541 DUP1
0x542 REVERT
---
0x53f: V530 = 0x0
0x542: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V460, 0x6c86888b, V512]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V460, 0x6c86888b, V512]

================================

Block 0x543
[0x543:0x552]
---
Predecessors: [0x532]
Successors: [0x553, 0x64d]
---
0x543 JUMPDEST
0x544 POP
0x545 POP
0x546 POP
0x547 PUSH1 0x40
0x549 MLOAD
0x54a DUP1
0x54b MLOAD
0x54c SWAP1
0x54d POP
0x54e ISZERO
0x54f PUSH2 0x64d
0x552 JUMPI
---
0x543: JUMPDEST 
0x547: V531 = 0x40
0x549: V532 = M[0x40]
0x54b: V533 = M[V532]
0x54e: V534 = ISZERO V533
0x54f: V535 = 0x64d
0x552: JUMPI 0x64d V534
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V460, 0x6c86888b, V512]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460]

================================

Block 0x553
[0x553:0x62f]
---
Predecessors: [0x543]
Successors: [0x630, 0x634]
---
0x553 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x574 PUSH1 0x0
0x576 PUSH1 0x40
0x578 MLOAD
0x579 SWAP1
0x57a DUP2
0x57b MSTORE
0x57c PUSH1 0x20
0x57e ADD
0x57f PUSH1 0x40
0x581 MLOAD
0x582 DUP1
0x583 SWAP2
0x584 SUB
0x585 SWAP1
0x586 LOG1
0x587 DUP1
0x588 PUSH1 0x1
0x58a PUSH1 0xa0
0x58c PUSH1 0x2
0x58e EXP
0x58f SUB
0x590 AND
0x591 PUSH4 0xa19b14a
0x596 DUP11
0x597 DUP15
0x598 DUP14
0x599 DUP16
0x59a DUP13
0x59b DUP15
0x59c DUP14
0x59d DUP12
0x59e DUP14
0x59f DUP16
0x5a0 DUP14
0x5a1 PUSH1 0x40
0x5a3 MLOAD
0x5a4 PUSH1 0xe0
0x5a6 PUSH1 0x2
0x5a8 EXP
0x5a9 PUSH4 0xffffffff
0x5ae DUP15
0x5af AND
0x5b0 MUL
0x5b1 DUP2
0x5b2 MSTORE
0x5b3 PUSH1 0x1
0x5b5 PUSH1 0xa0
0x5b7 PUSH1 0x2
0x5b9 EXP
0x5ba SUB
0x5bb SWAP12
0x5bc DUP13
0x5bd AND
0x5be PUSH1 0x4
0x5c0 DUP3
0x5c1 ADD
0x5c2 MSTORE
0x5c3 PUSH1 0x24
0x5c5 DUP2
0x5c6 ADD
0x5c7 SWAP11
0x5c8 SWAP1
0x5c9 SWAP11
0x5ca MSTORE
0x5cb SWAP8
0x5cc DUP11
0x5cd AND
0x5ce PUSH1 0x44
0x5d0 DUP11
0x5d1 ADD
0x5d2 MSTORE
0x5d3 PUSH1 0x64
0x5d5 DUP10
0x5d6 ADD
0x5d7 SWAP7
0x5d8 SWAP1
0x5d9 SWAP7
0x5da MSTORE
0x5db PUSH1 0x84
0x5dd DUP9
0x5de ADD
0x5df SWAP5
0x5e0 SWAP1
0x5e1 SWAP5
0x5e2 MSTORE
0x5e3 PUSH1 0xa4
0x5e5 DUP8
0x5e6 ADD
0x5e7 SWAP3
0x5e8 SWAP1
0x5e9 SWAP3
0x5ea MSTORE
0x5eb SWAP1
0x5ec SWAP6
0x5ed AND
0x5ee PUSH1 0xc4
0x5f0 DUP6
0x5f1 ADD
0x5f2 MSTORE
0x5f3 PUSH1 0xff
0x5f5 SWAP1
0x5f6 SWAP5
0x5f7 AND
0x5f8 PUSH1 0xe4
0x5fa DUP5
0x5fb ADD
0x5fc MSTORE
0x5fd PUSH2 0x104
0x600 DUP4
0x601 ADD
0x602 SWAP4
0x603 SWAP1
0x604 SWAP4
0x605 MSTORE
0x606 PUSH2 0x124
0x609 DUP3
0x60a ADD
0x60b SWAP3
0x60c SWAP1
0x60d SWAP3
0x60e MSTORE
0x60f PUSH2 0x144
0x612 DUP2
0x613 ADD
0x614 SWAP2
0x615 SWAP1
0x616 SWAP2
0x617 MSTORE
0x618 PUSH2 0x164
0x61b ADD
0x61c PUSH1 0x0
0x61e PUSH1 0x40
0x620 MLOAD
0x621 DUP1
0x622 DUP4
0x623 SUB
0x624 DUP2
0x625 PUSH1 0x0
0x627 DUP8
0x628 DUP1
0x629 EXTCODESIZE
0x62a ISZERO
0x62b ISZERO
0x62c PUSH2 0x634
0x62f JUMPI
---
0x553: V536 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x574: V537 = 0x0
0x576: V538 = 0x40
0x578: V539 = M[0x40]
0x57b: M[V539] = 0x0
0x57c: V540 = 0x20
0x57e: V541 = ADD 0x20 V539
0x57f: V542 = 0x40
0x581: V543 = M[0x40]
0x584: V544 = SUB V541 V543
0x586: LOG V543 V544 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x588: V545 = 0x1
0x58a: V546 = 0xa0
0x58c: V547 = 0x2
0x58e: V548 = EXP 0x2 0xa0
0x58f: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x590: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x591: V551 = 0xa19b14a
0x5a1: V552 = 0x40
0x5a3: V553 = M[0x40]
0x5a4: V554 = 0xe0
0x5a6: V555 = 0x2
0x5a8: V556 = EXP 0x2 0xe0
0x5a9: V557 = 0xffffffff
0x5af: V558 = AND 0xa19b14a 0xffffffff
0x5b0: V559 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x5b2: M[V553] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x5b3: V560 = 0x1
0x5b5: V561 = 0xa0
0x5b7: V562 = 0x2
0x5b9: V563 = EXP 0x2 0xa0
0x5ba: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bd: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x5be: V566 = 0x4
0x5c1: V567 = ADD V553 0x4
0x5c2: M[V567] = V565
0x5c3: V568 = 0x24
0x5c6: V569 = ADD V553 0x24
0x5ca: M[V569] = V136
0x5cd: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x5ce: V571 = 0x44
0x5d1: V572 = ADD V553 0x44
0x5d2: M[V572] = V570
0x5d3: V573 = 0x64
0x5d6: V574 = ADD V553 0x64
0x5da: M[V574] = V138
0x5db: V575 = 0x84
0x5de: V576 = ADD V553 0x84
0x5e2: M[V576] = V153
0x5e3: V577 = 0xa4
0x5e6: V578 = ADD V553 0xa4
0x5ea: M[V578] = V151
0x5ed: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x5ee: V580 = 0xc4
0x5f1: V581 = ADD V553 0xc4
0x5f2: M[V581] = V579
0x5f3: V582 = 0xff
0x5f7: V583 = AND V164 0xff
0x5f8: V584 = 0xe4
0x5fb: V585 = ADD V553 0xe4
0x5fc: M[V585] = V583
0x5fd: V586 = 0x104
0x601: V587 = ADD V553 0x104
0x605: M[V587] = V160
0x606: V588 = 0x124
0x60a: V589 = ADD V553 0x124
0x60e: M[V589] = V158
0x60f: V590 = 0x144
0x613: V591 = ADD V553 0x144
0x617: M[V591] = V166
0x618: V592 = 0x164
0x61b: V593 = ADD 0x164 V553
0x61c: V594 = 0x0
0x61e: V595 = 0x40
0x620: V596 = M[0x40]
0x623: V597 = SUB V593 V596
0x625: V598 = 0x0
0x629: V599 = EXTCODESIZE V550
0x62a: V600 = ISZERO V599
0x62b: V601 = ISZERO V600
0x62c: V602 = 0x634
0x62f: JUMPI 0x634 V601
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V550, 0xa19b14a, V593, 0x0, V596, V597, V596, 0x0, V550]
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V550, 0xa19b14a, V593, 0x0, V596, V597, V596, 0x0, V550]

================================

Block 0x630
[0x630:0x633]
---
Predecessors: [0x553]
Successors: []
---
0x630 PUSH1 0x0
0x632 DUP1
0x633 REVERT
---
0x630: V603 = 0x0
0x633: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V550, 0xa19b14a, V593, 0x0, V596, V597, V596, 0x0, V550]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V550, 0xa19b14a, V593, 0x0, V596, V597, V596, 0x0, V550]

================================

Block 0x634
[0x634:0x640]
---
Predecessors: [0x553]
Successors: [0x641, 0x645]
---
0x634 JUMPDEST
0x635 PUSH2 0x2c6
0x638 GAS
0x639 SUB
0x63a CALL
0x63b ISZERO
0x63c ISZERO
0x63d PUSH2 0x645
0x640 JUMPI
---
0x634: JUMPDEST 
0x635: V604 = 0x2c6
0x638: V605 = GAS
0x639: V606 = SUB V605 0x2c6
0x63a: V607 = CALL V606 V550 0x0 V596 V597 V596 0x0
0x63b: V608 = ISZERO V607
0x63c: V609 = ISZERO V608
0x63d: V610 = 0x645
0x640: JUMPI 0x645 V609
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V550, 0xa19b14a, V593, 0x0, V596, V597, V596, 0x0, V550]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V550, 0xa19b14a, V593]

================================

Block 0x641
[0x641:0x644]
---
Predecessors: [0x634]
Successors: []
---
0x641 PUSH1 0x0
0x643 DUP1
0x644 REVERT
---
0x641: V611 = 0x0
0x644: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V550, 0xa19b14a, V593]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V550, 0xa19b14a, V593]

================================

Block 0x645
[0x645:0x64c]
---
Predecessors: [0x634]
Successors: [0x682]
---
0x645 JUMPDEST
0x646 POP
0x647 POP
0x648 POP
0x649 PUSH2 0x682
0x64c JUMP
---
0x645: JUMPDEST 
0x649: V612 = 0x682
0x64c: JUMP 0x682
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460, V550, 0xa19b14a, V593]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460]

================================

Block 0x64d
[0x64d:0x681]
---
Predecessors: [0x543]
Successors: [0x682]
---
0x64d JUMPDEST
0x64e PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x66f PUSH1 0x1
0x671 PUSH1 0x40
0x673 MLOAD
0x674 SWAP1
0x675 DUP2
0x676 MSTORE
0x677 PUSH1 0x20
0x679 ADD
0x67a PUSH1 0x40
0x67c MLOAD
0x67d DUP1
0x67e SWAP2
0x67f SUB
0x680 SWAP1
0x681 LOG1
---
0x64d: JUMPDEST 
0x64e: V613 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x66f: V614 = 0x1
0x671: V615 = 0x40
0x673: V616 = M[0x40]
0x676: M[V616] = 0x1
0x677: V617 = 0x20
0x679: V618 = ADD 0x20 V616
0x67a: V619 = 0x40
0x67c: V620 = M[0x40]
0x67f: V621 = SUB V618 V620
0x681: LOG V620 V621 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460]

================================

Block 0x682
[0x682:0x682]
---
Predecessors: [0x645, 0x64d]
Successors: [0x683]
---
0x682 JUMPDEST
---
0x682: JUMPDEST 
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460]

================================

Block 0x683
[0x683:0x683]
---
Predecessors: [0x682]
Successors: [0x684]
---
0x683 JUMPDEST
---
0x683: JUMPDEST 
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460]

================================

Block 0x684
[0x684:0x691]
---
Predecessors: [0x683]
Successors: [0x7d]
---
0x684 JUMPDEST
0x685 POP
0x686 POP
0x687 POP
0x688 POP
0x689 POP
0x68a POP
0x68b POP
0x68c POP
0x68d POP
0x68e POP
0x68f POP
0x690 POP
0x691 JUMP
---
0x684: JUMPDEST 
0x691: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V136, V138, V146, V149, V151, V153, V156, V158, V160, V164, V166, V460]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0x692
[0x692:0x6a0]
---
Predecessors: [0x1b0]
Successors: [0x1b8]
---
0x692 JUMPDEST
0x693 PUSH1 0x0
0x695 SLOAD
0x696 PUSH1 0x1
0x698 PUSH1 0xa0
0x69a PUSH1 0x2
0x69c EXP
0x69d SUB
0x69e AND
0x69f DUP2
0x6a0 JUMP
---
0x692: JUMPDEST 
0x693: V622 = 0x0
0x695: V623 = S[0x0]
0x696: V624 = 0x1
0x698: V625 = 0xa0
0x69a: V626 = 0x2
0x69c: V627 = EXP 0x2 0xa0
0x69d: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69e: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0x6a0: JUMP 0x1b8
---
Entry stack: [V12, 0x1b8]
Stack pops: 1
Stack additions: [S0, V629]
Exit stack: [V12, 0x1b8, V629]

================================

Block 0x6a1
[0x6a1:0x6a1]
---
Predecessors: []
Successors: [0x6a2]
---
0x6a1 JUMPDEST
---
0x6a1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6a2
[0x6a2:0x6a3]
---
Predecessors: [0x6a1]
Successors: []
Has unresolved jump.
---
0x6a2 JUMPDEST
0x6a3 JUMP
---
0x6a2: JUMPDEST 
0x6a3: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6a4
[0x6a4:0x6bb]
---
Predecessors: [0x1e9]
Successors: [0x6bc, 0x6c0]
---
0x6a4 JUMPDEST
0x6a5 PUSH1 0x0
0x6a7 DUP1
0x6a8 SLOAD
0x6a9 CALLER
0x6aa PUSH1 0x1
0x6ac PUSH1 0xa0
0x6ae PUSH1 0x2
0x6b0 EXP
0x6b1 SUB
0x6b2 SWAP1
0x6b3 DUP2
0x6b4 AND
0x6b5 SWAP2
0x6b6 AND
0x6b7 EQ
0x6b8 PUSH2 0x6c0
0x6bb JUMPI
---
0x6a4: JUMPDEST 
0x6a5: V630 = 0x0
0x6a8: V631 = S[0x0]
0x6a9: V632 = CALLER
0x6aa: V633 = 0x1
0x6ac: V634 = 0xa0
0x6ae: V635 = 0x2
0x6b0: V636 = EXP 0x2 0xa0
0x6b1: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b4: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x6b6: V639 = AND V631 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: V640 = EQ V639 V638
0x6b8: V641 = 0x6c0
0x6bb: JUMPI 0x6c0 V640
---
Entry stack: [V12, 0x7d, V195]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V195, 0x0]

================================

Block 0x6bc
[0x6bc:0x6bf]
---
Predecessors: [0x6a4]
Successors: []
---
0x6bc PUSH1 0x0
0x6be DUP1
0x6bf REVERT
---
0x6bc: V642 = 0x0
0x6bf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, 0x0]

================================

Block 0x6c0
[0x6c0:0x705]
---
Predecessors: [0x6a4]
Successors: [0x706, 0x70a]
---
0x6c0 JUMPDEST
0x6c1 POP
0x6c2 PUSH1 0x1
0x6c4 SLOAD
0x6c5 PUSH1 0x1
0x6c7 PUSH1 0xa0
0x6c9 PUSH1 0x2
0x6cb EXP
0x6cc SUB
0x6cd AND
0x6ce DUP1
0x6cf PUSH4 0x2e1a7d4d
0x6d4 DUP4
0x6d5 PUSH1 0x40
0x6d7 MLOAD
0x6d8 PUSH1 0xe0
0x6da PUSH1 0x2
0x6dc EXP
0x6dd PUSH4 0xffffffff
0x6e2 DUP5
0x6e3 AND
0x6e4 MUL
0x6e5 DUP2
0x6e6 MSTORE
0x6e7 PUSH1 0x4
0x6e9 DUP2
0x6ea ADD
0x6eb SWAP2
0x6ec SWAP1
0x6ed SWAP2
0x6ee MSTORE
0x6ef PUSH1 0x24
0x6f1 ADD
0x6f2 PUSH1 0x0
0x6f4 PUSH1 0x40
0x6f6 MLOAD
0x6f7 DUP1
0x6f8 DUP4
0x6f9 SUB
0x6fa DUP2
0x6fb PUSH1 0x0
0x6fd DUP8
0x6fe DUP1
0x6ff EXTCODESIZE
0x700 ISZERO
0x701 ISZERO
0x702 PUSH2 0x70a
0x705 JUMPI
---
0x6c0: JUMPDEST 
0x6c2: V643 = 0x1
0x6c4: V644 = S[0x1]
0x6c5: V645 = 0x1
0x6c7: V646 = 0xa0
0x6c9: V647 = 0x2
0x6cb: V648 = EXP 0x2 0xa0
0x6cc: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cd: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x6cf: V651 = 0x2e1a7d4d
0x6d5: V652 = 0x40
0x6d7: V653 = M[0x40]
0x6d8: V654 = 0xe0
0x6da: V655 = 0x2
0x6dc: V656 = EXP 0x2 0xe0
0x6dd: V657 = 0xffffffff
0x6e3: V658 = AND 0x2e1a7d4d 0xffffffff
0x6e4: V659 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x6e6: M[V653] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x6e7: V660 = 0x4
0x6ea: V661 = ADD V653 0x4
0x6ee: M[V661] = V195
0x6ef: V662 = 0x24
0x6f1: V663 = ADD 0x24 V653
0x6f2: V664 = 0x0
0x6f4: V665 = 0x40
0x6f6: V666 = M[0x40]
0x6f9: V667 = SUB V663 V666
0x6fb: V668 = 0x0
0x6ff: V669 = EXTCODESIZE V650
0x700: V670 = ISZERO V669
0x701: V671 = ISZERO V670
0x702: V672 = 0x70a
0x705: JUMPI 0x70a V671
---
Entry stack: [V12, 0x7d, V195, 0x0]
Stack pops: 2
Stack additions: [S1, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]

================================

Block 0x706
[0x706:0x709]
---
Predecessors: [0x6c0]
Successors: []
---
0x706 PUSH1 0x0
0x708 DUP1
0x709 REVERT
---
0x706: V673 = 0x0
0x709: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]

================================

Block 0x70a
[0x70a:0x716]
---
Predecessors: [0x6c0]
Successors: [0x717, 0x71b]
---
0x70a JUMPDEST
0x70b PUSH2 0x2c6
0x70e GAS
0x70f SUB
0x710 CALL
0x711 ISZERO
0x712 ISZERO
0x713 PUSH2 0x71b
0x716 JUMPI
---
0x70a: JUMPDEST 
0x70b: V674 = 0x2c6
0x70e: V675 = GAS
0x70f: V676 = SUB V675 0x2c6
0x710: V677 = CALL V676 V650 0x0 V666 V667 V666 0x0
0x711: V678 = ISZERO V677
0x712: V679 = ISZERO V678
0x713: V680 = 0x71b
0x716: JUMPI 0x71b V679
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]

================================

Block 0x717
[0x717:0x71a]
---
Predecessors: [0x70a]
Successors: []
---
0x717 PUSH1 0x0
0x719 DUP1
0x71a REVERT
---
0x717: V681 = 0x0
0x71a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]

================================

Block 0x71b
[0x71b:0x71e]
---
Predecessors: [0x70a]
Successors: [0x71f]
---
0x71b JUMPDEST
0x71c POP
0x71d POP
0x71e POP
---
0x71b: JUMPDEST 
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650]

================================

Block 0x71f
[0x71f:0x71f]
---
Predecessors: [0x71b]
Successors: [0x720]
---
0x71f JUMPDEST
---
0x71f: JUMPDEST 
---
Entry stack: [V12, 0x7d, V195, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650]

================================

Block 0x720
[0x720:0x723]
---
Predecessors: [0x71f]
Successors: [0x7d]
---
0x720 JUMPDEST
0x721 POP
0x722 POP
0x723 JUMP
---
0x720: JUMPDEST 
0x723: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V195, V650]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x724
[0x724:0x750]
---
Predecessors: []
Successors: []
---
0x724 STOP
0x725 LOG1
0x726 PUSH6 0x627a7a723058
0x72d SHA3
0x72e AND
0x72f SWAP8
0x730 MISSING 0xd0
0x731 MISSING 0xee
0x732 MISSING 0x27
0x733 MISSING 0xc5
0x734 SELFDESTRUCT
0x735 MISSING 0xd3
0x736 MISSING 0xa9
0x737 DUP5
0x738 MISSING 0xd5
0x739 PUSH23 0xac4f2156418df57c903836ae0f00c89c46eae59b0029
---
0x724: STOP 
0x725: LOG S0 S1 S2
0x726: V682 = 0x627a7a723058
0x72d: V683 = SHA3 0x627a7a723058 S3
0x72e: V684 = AND V683 S4
0x730: MISSING 0xd0
0x731: MISSING 0xee
0x732: MISSING 0x27
0x733: MISSING 0xc5
0x734: SELFDESTRUCT S0
0x735: MISSING 0xd3
0x736: MISSING 0xa9
0x738: MISSING 0xd5
0x739: V685 = 0xac4f2156418df57c903836ae0f00c89c46eae59b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S12, S5, S6, S7, S8, S9, S10, S11, V684, S4, S0, S1, S2, S3, S4, 0xac4f2156418df57c903836ae0f00c89c46eae59b0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2cf2c0af
Entry block: 0x81
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x81, 0x88, 0x8c, 0x1f6, 0x20e, 0x212, 0x24f, 0x253, 0x260, 0x264, 0x269, 0x26a

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x99
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x99, 0xa0, 0xa4, 0x26e, 0x285, 0x289, 0x2b8, 0x2bc, 0x2bd, 0x2be

Function 2:
Public function signature: 0x43d726d6
Entry block: 0xb1
Exit block: 0x2d8
Body: 0xb1, 0xb8, 0xbc, 0x2c1, 0x2d8, 0x2dc

Function 3:
Public function signature: 0x5c73dcea
Entry block: 0xc6
Exit block: 0x113
Body: 0xc6, 0xcd, 0xd1, 0x113, 0x2ed, 0x3a4, 0x3a8, 0x3b5, 0x3b9, 0x3c5

Function 4:
Public function signature: 0x70a08231
Entry block: 0x127
Exit block: 0x146
Body: 0x127, 0x12e, 0x132, 0x146, 0x3d5, 0x435, 0x439, 0x446, 0x44a, 0x456

Function 5:
Public function signature: 0x7983bab4
Entry block: 0x158
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x158, 0x15f, 0x163, 0x45c, 0x474, 0x478, 0x52e, 0x532, 0x53f, 0x543, 0x553, 0x630, 0x634, 0x641, 0x645, 0x64d, 0x682, 0x683, 0x684

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x1a5
Exit block: 0x1b8
Body: 0x1a5, 0x1ac, 0x1b0, 0x1b8, 0x692

Function 7:
Public function signature: 0xd0e30db0
Entry block: 0x1d4
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1d4, 0x2ea, 0x2eb

Function 8:
Public function signature: 0xf1b83630
Entry block: 0x1de
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1de, 0x1e5, 0x1e9, 0x6a4, 0x6bc, 0x6c0, 0x706, 0x70a, 0x717, 0x71b, 0x71f, 0x720

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f

