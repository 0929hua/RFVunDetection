Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x40]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x40
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x40
0xc: JUMPI 0x40 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x42]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x24be4bfe
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x42
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x24be4bfe
0x3b: V13 = EQ V11 0x24be4bfe
0x3c: V14 = 0x42
0x3f: JUMPI 0x42 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x41]
---
Predecessors: [0x0, 0xd, 0x233]
Successors: []
---
0x40 JUMPDEST
0x41 STOP
---
0x40: JUMPDEST 
0x41: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x42
[0x42:0x49]
---
Predecessors: [0xd]
Successors: [0x4a, 0x4e]
---
0x42 JUMPDEST
0x43 CALLVALUE
0x44 DUP1
0x45 ISZERO
0x46 PUSH2 0x4e
0x49 JUMPI
---
0x42: JUMPDEST 
0x43: V15 = CALLVALUE
0x45: V16 = ISZERO V15
0x46: V17 = 0x4e
0x49: JUMPI 0x4e V16
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V15]
Exit stack: [V11, V15]

================================

Block 0x4a
[0x4a:0x4d]
---
Predecessors: [0x42]
Successors: []
---
0x4a PUSH1 0x0
0x4c DUP1
0x4d REVERT
---
0x4a: V18 = 0x0
0x4d: REVERT 0x0 0x0
---
Entry stack: [V11, V15]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V15]

================================

Block 0x4e
[0x4e:0x94]
---
Predecessors: [0x42]
Successors: [0x95, 0x99]
---
0x4e JUMPDEST
0x4f POP
0x50 PUSH2 0x40
0x53 PUSH1 0x4
0x55 CALLDATALOAD
0x56 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b PUSH1 0x24
0x6d CALLDATALOAD
0x6e DUP2
0x6f AND
0x70 SWAP1
0x71 PUSH1 0x44
0x73 CALLDATALOAD
0x74 AND
0x75 PUSH1 0x0
0x77 DUP1
0x78 SLOAD
0x79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e AND
0x8f CALLER
0x90 EQ
0x91 PUSH2 0x99
0x94 JUMPI
---
0x4e: JUMPDEST 
0x50: V19 = 0x40
0x53: V20 = 0x4
0x55: V21 = CALLDATALOAD 0x4
0x56: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b: V23 = 0x24
0x6d: V24 = CALLDATALOAD 0x24
0x6f: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x71: V26 = 0x44
0x73: V27 = CALLDATALOAD 0x44
0x74: V28 = AND V27 0xffffffffffffffffffffffffffffffffffffffff
0x75: V29 = 0x0
0x78: V30 = S[0x0]
0x79: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x8f: V33 = CALLER
0x90: V34 = EQ V33 V32
0x91: V35 = 0x99
0x94: JUMPI 0x99 V34
---
Entry stack: [V11, V15]
Stack pops: 1
Stack additions: [0x40, V21, V25, V28, 0x0]
Exit stack: [V11, 0x40, V21, V25, V28, 0x0]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x4e]
Successors: []
---
0x95 PUSH1 0x0
0x97 DUP1
0x98 REVERT
---
0x95: V36 = 0x0
0x98: REVERT 0x0 0x0
---
Entry stack: [V11, 0x40, V21, V25, V28, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x40, V21, V25, V28, 0x0]

================================

Block 0x99
[0x99:0x16c]
---
Predecessors: [0x4e]
Successors: [0x16d]
---
0x99 JUMPDEST
0x9a PUSH1 0x40
0x9c DUP1
0x9d MLOAD
0x9e PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0xbf PUSH1 0x20
0xc1 DUP1
0xc2 DUP4
0xc3 ADD
0xc4 SWAP2
0xc5 SWAP1
0xc6 SWAP2
0xc7 MSTORE
0xc8 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0xe9 PUSH1 0x21
0xeb DUP4
0xec ADD
0xed MSTORE
0xee PUSH13 0x1000000000000000000000000
0xfc ADDRESS
0xfd MUL
0xfe PUSH1 0x22
0x100 DUP4
0x101 ADD
0x102 MSTORE
0x103 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x124 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x145 DUP9
0x146 MUL
0x147 AND
0x148 PUSH1 0x36
0x14a DUP4
0x14b ADD
0x14c MSTORE
0x14d DUP3
0x14e MLOAD
0x14f PUSH1 0x17
0x151 DUP2
0x152 DUP5
0x153 SUB
0x154 ADD
0x155 DUP2
0x156 MSTORE
0x157 PUSH1 0x37
0x159 SWAP1
0x15a SWAP3
0x15b ADD
0x15c SWAP3
0x15d DUP4
0x15e SWAP1
0x15f MSTORE
0x160 DUP2
0x161 MLOAD
0x162 SWAP2
0x163 SWAP3
0x164 SWAP2
0x165 DUP3
0x166 SWAP2
0x167 DUP5
0x168 ADD
0x169 SWAP1
0x16a DUP1
0x16b DUP4
0x16c DUP4
---
0x99: JUMPDEST 
0x9a: V37 = 0x40
0x9d: V38 = M[0x40]
0x9e: V39 = 0xd600000000000000000000000000000000000000000000000000000000000000
0xbf: V40 = 0x20
0xc3: V41 = ADD V38 0x20
0xc7: M[V41] = 0xd600000000000000000000000000000000000000000000000000000000000000
0xc8: V42 = 0x9400000000000000000000000000000000000000000000000000000000000000
0xe9: V43 = 0x21
0xec: V44 = ADD V38 0x21
0xed: M[V44] = 0x9400000000000000000000000000000000000000000000000000000000000000
0xee: V45 = 0x1000000000000000000000000
0xfc: V46 = ADDRESS
0xfd: V47 = MUL V46 0x1000000000000000000000000
0xfe: V48 = 0x22
0x101: V49 = ADD V38 0x22
0x102: M[V49] = V47
0x103: V50 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x124: V51 = 0x100000000000000000000000000000000000000000000000000000000000000
0x146: V52 = MUL V21 0x100000000000000000000000000000000000000000000000000000000000000
0x147: V53 = AND V52 0xff00000000000000000000000000000000000000000000000000000000000000
0x148: V54 = 0x36
0x14b: V55 = ADD V38 0x36
0x14c: M[V55] = V53
0x14e: V56 = M[0x40]
0x14f: V57 = 0x17
0x153: V58 = SUB V38 V56
0x154: V59 = ADD V58 0x17
0x156: M[V56] = V59
0x157: V60 = 0x37
0x15b: V61 = ADD V38 0x37
0x15f: M[0x40] = V61
0x161: V62 = M[V56]
0x168: V63 = ADD V56 0x20
---
Entry stack: [V11, 0x40, V21, V25, V28, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V56, V61, V61, V63, V62, V62, V61, V63]
Exit stack: [V11, 0x40, V21, V25, V28, 0x0, V56, V61, V61, V63, V62, V62, V61, V63]

================================

Block 0x16d
[0x16d:0x175]
---
Predecessors: [0x99, 0x176]
Successors: [0x176, 0x18c]
---
0x16d JUMPDEST
0x16e PUSH1 0x20
0x170 DUP4
0x171 LT
0x172 PUSH2 0x18c
0x175 JUMPI
---
0x16d: JUMPDEST 
0x16e: V64 = 0x20
0x171: V65 = LT S2 0x20
0x172: V66 = 0x18c
0x175: JUMPI 0x18c V65
---
Entry stack: [V11, 0x40, V21, V25, V28, 0x0, V56, V61, V61, V63, V62, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x40, V21, V25, V28, 0x0, V56, V61, V61, V63, V62, S2, S1, S0]

================================

Block 0x176
[0x176:0x18b]
---
Predecessors: [0x16d]
Successors: [0x16d]
---
0x176 DUP1
0x177 MLOAD
0x178 DUP3
0x179 MSTORE
0x17a PUSH1 0x1f
0x17c NOT
0x17d SWAP1
0x17e SWAP3
0x17f ADD
0x180 SWAP2
0x181 PUSH1 0x20
0x183 SWAP2
0x184 DUP3
0x185 ADD
0x186 SWAP2
0x187 ADD
0x188 PUSH2 0x16d
0x18b JUMP
---
0x177: V67 = M[S0]
0x179: M[S1] = V67
0x17a: V68 = 0x1f
0x17c: V69 = NOT 0x1f
0x17f: V70 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x181: V71 = 0x20
0x185: V72 = ADD 0x20 S1
0x187: V73 = ADD 0x20 S0
0x188: V74 = 0x16d
0x18b: JUMP 0x16d
---
Entry stack: [V11, 0x40, V21, V25, V28, 0x0, V56, V61, V61, V63, V62, S2, S1, S0]
Stack pops: 3
Stack additions: [V70, V72, V73]
Exit stack: [V11, 0x40, V21, V25, V28, 0x0, V56, V61, V61, V63, V62, V70, V72, V73]

================================

Block 0x18c
[0x18c:0x1f2]
---
Predecessors: [0x16d]
Successors: [0x23b]
---
0x18c JUMPDEST
0x18d MLOAD
0x18e DUP2
0x18f MLOAD
0x190 PUSH1 0x20
0x192 SWAP4
0x193 SWAP1
0x194 SWAP4
0x195 SUB
0x196 PUSH2 0x100
0x199 EXP
0x19a PUSH1 0x0
0x19c NOT
0x19d ADD
0x19e DUP1
0x19f NOT
0x1a0 SWAP1
0x1a1 SWAP2
0x1a2 AND
0x1a3 SWAP3
0x1a4 AND
0x1a5 SWAP2
0x1a6 SWAP1
0x1a7 SWAP2
0x1a8 OR
0x1a9 SWAP1
0x1aa MSTORE
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae SWAP3
0x1af ADD
0x1b0 DUP3
0x1b1 SWAP1
0x1b2 SUB
0x1b3 DUP3
0x1b4 SHA3
0x1b5 SWAP5
0x1b6 POP
0x1b7 POP
0x1b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cd DUP5
0x1ce AND
0x1cf SWAP3
0x1d0 POP
0x1d1 PUSH8 0x16345785d8a0000
0x1da SWAP2
0x1db POP
0x1dc PUSH1 0x0
0x1de DUP2
0x1df DUP2
0x1e0 DUP2
0x1e1 DUP6
0x1e2 DUP8
0x1e3 GAS
0x1e4 CALL
0x1e5 SWAP3
0x1e6 POP
0x1e7 POP
0x1e8 POP
0x1e9 POP
0x1ea DUP3
0x1eb DUP3
0x1ec PUSH2 0x1f3
0x1ef PUSH2 0x23b
0x1f2 JUMP
---
0x18c: JUMPDEST 
0x18d: V75 = M[S0]
0x18f: V76 = M[S1]
0x190: V77 = 0x20
0x195: V78 = SUB 0x20 S2
0x196: V79 = 0x100
0x199: V80 = EXP 0x100 V78
0x19a: V81 = 0x0
0x19c: V82 = NOT 0x0
0x19d: V83 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V80
0x19f: V84 = NOT V83
0x1a2: V85 = AND V75 V84
0x1a4: V86 = AND V76 V83
0x1a8: V87 = OR V86 V85
0x1aa: M[S1] = V87
0x1ab: V88 = 0x40
0x1ad: V89 = M[0x40]
0x1af: V90 = ADD V61 V62
0x1b2: V91 = SUB V90 V89
0x1b4: V92 = SHA3 V89 V91
0x1b8: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ce: V94 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V95 = 0x16345785d8a0000
0x1dc: V96 = 0x0
0x1e3: V97 = GAS
0x1e4: V98 = CALL V97 V94 0x16345785d8a0000 V89 0x0 V89 0x0
0x1ec: V99 = 0x1f3
0x1ef: V100 = 0x23b
0x1f2: JUMP 0x23b
---
Entry stack: [V11, 0x40, V21, V25, V28, 0x0, V56, V61, V61, V63, V62, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, V92, S10, S9, 0x1f3]
Exit stack: [V11, 0x40, V21, V25, V28, V92, V25, V28, 0x1f3]

================================

Block 0x1f3
[0x1f3:0x229]
---
Predecessors: [0x23b]
Successors: [0x22a, 0x233]
---
0x1f3 JUMPDEST
0x1f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x209 SWAP3
0x20a DUP4
0x20b AND
0x20c DUP2
0x20d MSTORE
0x20e SWAP2
0x20f AND
0x210 PUSH1 0x20
0x212 DUP3
0x213 ADD
0x214 MSTORE
0x215 PUSH1 0x40
0x217 DUP1
0x218 MLOAD
0x219 SWAP2
0x21a DUP3
0x21b SWAP1
0x21c SUB
0x21d ADD
0x21e SWAP1
0x21f PUSH1 0x0
0x221 CREATE
0x222 DUP1
0x223 ISZERO
0x224 DUP1
0x225 ISZERO
0x226 PUSH2 0x233
0x229 JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x20d: M[V123] = V102
0x20f: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x210: V104 = 0x20
0x213: V105 = ADD V123 0x20
0x214: M[V105] = V103
0x215: V106 = 0x40
0x218: V107 = M[0x40]
0x21c: V108 = SUB V123 V107
0x21d: V109 = ADD V108 0x40
0x21f: V110 = 0x0
0x221: V111 = CREATE 0x0 V107 V109
0x223: V112 = ISZERO V111
0x225: V113 = ISZERO V112
0x226: V114 = 0x233
0x229: JUMPI 0x233 V113
---
Entry stack: [V11, 0x40, V21, V25, V28, V92, V25, V28, V123]
Stack pops: 3
Stack additions: [V111, V112]
Exit stack: [V11, 0x40, V21, V25, V28, V92, V111, V112]

================================

Block 0x22a
[0x22a:0x232]
---
Predecessors: [0x1f3]
Successors: []
---
0x22a RETURNDATASIZE
0x22b PUSH1 0x0
0x22d DUP1
0x22e RETURNDATACOPY
0x22f RETURNDATASIZE
0x230 PUSH1 0x0
0x232 REVERT
---
0x22a: V115 = RETURNDATASIZE
0x22b: V116 = 0x0
0x22e: RETURNDATACOPY 0x0 0x0 V115
0x22f: V117 = RETURNDATASIZE
0x230: V118 = 0x0
0x232: REVERT 0x0 V117
---
Entry stack: [V11, 0x40, V21, V25, V28, V92, V111, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x40, V21, V25, V28, V92, V111, V112]

================================

Block 0x233
[0x233:0x23a]
---
Predecessors: [0x1f3]
Successors: [0x40]
---
0x233 JUMPDEST
0x234 POP
0x235 POP
0x236 POP
0x237 POP
0x238 POP
0x239 POP
0x23a JUMP
---
0x233: JUMPDEST 
0x23a: JUMP 0x40
---
Entry stack: [V11, 0x40, V21, V25, V28, V92, V111, V112]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x23b
[0x23b:0x249]
---
Predecessors: [0x18c]
Successors: [0x1f3]
---
0x23b JUMPDEST
0x23c PUSH1 0x40
0x23e MLOAD
0x23f PUSH1 0xe3
0x241 DUP1
0x242 PUSH2 0x24b
0x245 DUP4
0x246 CODECOPY
0x247 ADD
0x248 SWAP1
0x249 JUMP
---
0x23b: JUMPDEST 
0x23c: V119 = 0x40
0x23e: V120 = M[0x40]
0x23f: V121 = 0xe3
0x242: V122 = 0x24b
0x246: CODECOPY V120 0x24b 0xe3
0x247: V123 = ADD 0xe3 V120
0x249: JUMP 0x1f3
---
Entry stack: [V11, 0x40, V21, V25, V28, V92, V25, V28, 0x1f3]
Stack pops: 1
Stack additions: [V123]
Exit stack: [V11, 0x40, V21, V25, V28, V92, V25, V28, V123]

================================

Block 0x24a
[0x24a:0x255]
---
Predecessors: []
Successors: [0x256]
---
0x24a STOP
0x24b PUSH1 0x80
0x24d PUSH1 0x40
0x24f MSTORE
0x250 CALLVALUE
0x251 DUP1
0x252 ISZERO
0x253 PUSH1 0xf
0x255 JUMPI
---
0x24a: STOP 
0x24b: V124 = 0x80
0x24d: V125 = 0x40
0x24f: M[0x40] = 0x80
0x250: V126 = CALLVALUE
0x252: V127 = ISZERO V126
0x253: V128 = 0xf
0x255: THROWI V127
---
Entry stack: []
Stack pops: 0
Stack additions: [V126]
Exit stack: []

================================

Block 0x256
[0x256:0x305]
---
Predecessors: [0x24a]
Successors: [0x306]
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
0x25a JUMPDEST
0x25b POP
0x25c PUSH1 0x40
0x25e MLOAD
0x25f PUSH1 0x40
0x261 DUP1
0x262 PUSH2 0xe3
0x265 DUP4
0x266 CODECOPY
0x267 DUP2
0x268 ADD
0x269 PUSH1 0x40
0x26b DUP2
0x26c SWAP1
0x26d MSTORE
0x26e DUP2
0x26f MLOAD
0x270 PUSH1 0x20
0x272 SWAP1
0x273 SWAP3
0x274 ADD
0x275 MLOAD
0x276 PUSH1 0x0
0x278 DUP1
0x279 SLOAD
0x27a PUSH1 0x1
0x27c PUSH1 0xa0
0x27e PUSH1 0x2
0x280 EXP
0x281 SUB
0x282 NOT
0x283 AND
0x284 PUSH1 0x1
0x286 PUSH1 0xa0
0x288 PUSH1 0x2
0x28a EXP
0x28b SUB
0x28c DUP1
0x28d DUP7
0x28e AND
0x28f SWAP2
0x290 SWAP1
0x291 SWAP2
0x292 OR
0x293 DUP1
0x294 DUP4
0x295 SSTORE
0x296 SWAP3
0x297 SWAP4
0x298 SWAP3
0x299 AND
0x29a SWAP2
0x29b PUSH8 0x16345785d8a0000
0x2a4 SWAP2
0x2a5 DUP2
0x2a6 DUP2
0x2a7 DUP2
0x2a8 DUP6
0x2a9 DUP8
0x2aa GAS
0x2ab CALL
0x2ac POP
0x2ad POP
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 SLOAD
0x2b2 PUSH1 0x40
0x2b4 DUP1
0x2b5 MLOAD
0x2b6 PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 SWAP1
0x2da MLOAD
0x2db PUSH1 0x1
0x2dd PUSH1 0xa0
0x2df PUSH1 0x2
0x2e1 EXP
0x2e2 SUB
0x2e3 SWAP1
0x2e4 SWAP3
0x2e5 AND
0x2e6 SWAP5
0x2e7 POP
0x2e8 PUSH4 0x3ccfd60b
0x2ed SWAP4
0x2ee POP
0x2ef PUSH1 0x4
0x2f1 DUP1
0x2f2 DUP3
0x2f3 ADD
0x2f4 SWAP4
0x2f5 SWAP3
0x2f6 SWAP2
0x2f7 DUP3
0x2f8 SWAP1
0x2f9 SUB
0x2fa ADD
0x2fb DUP2
0x2fc DUP4
0x2fd DUP8
0x2fe DUP1
0x2ff EXTCODESIZE
0x300 ISZERO
0x301 DUP1
0x302 ISZERO
0x303 PUSH1 0xbf
0x305 JUMPI
---
0x256: V129 = 0x0
0x259: REVERT 0x0 0x0
0x25a: JUMPDEST 
0x25c: V130 = 0x40
0x25e: V131 = M[0x40]
0x25f: V132 = 0x40
0x262: V133 = 0xe3
0x266: CODECOPY V131 0xe3 0x40
0x268: V134 = ADD V131 0x40
0x269: V135 = 0x40
0x26d: M[0x40] = V134
0x26f: V136 = M[V131]
0x270: V137 = 0x20
0x274: V138 = ADD V131 0x20
0x275: V139 = M[V138]
0x276: V140 = 0x0
0x279: V141 = S[0x0]
0x27a: V142 = 0x1
0x27c: V143 = 0xa0
0x27e: V144 = 0x2
0x280: V145 = EXP 0x2 0xa0
0x281: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x282: V147 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x283: V148 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V141
0x284: V149 = 0x1
0x286: V150 = 0xa0
0x288: V151 = 0x2
0x28a: V152 = EXP 0x2 0xa0
0x28b: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28e: V154 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x292: V155 = OR V154 V148
0x295: S[0x0] = V155
0x299: V156 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V157 = 0x16345785d8a0000
0x2aa: V158 = GAS
0x2ab: V159 = CALL V158 V156 0x16345785d8a0000 V134 0x0 V134 0x0
0x2ae: V160 = 0x0
0x2b1: V161 = S[0x0]
0x2b2: V162 = 0x40
0x2b5: V163 = M[0x40]
0x2b6: V164 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2d8: M[V163] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x2da: V165 = M[0x40]
0x2db: V166 = 0x1
0x2dd: V167 = 0xa0
0x2df: V168 = 0x2
0x2e1: V169 = EXP 0x2 0xa0
0x2e2: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e5: V171 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x2e8: V172 = 0x3ccfd60b
0x2ef: V173 = 0x4
0x2f3: V174 = ADD V163 0x4
0x2f9: V175 = SUB V163 V165
0x2fa: V176 = ADD V175 0x4
0x2ff: V177 = EXTCODESIZE V171
0x300: V178 = ISZERO V177
0x302: V179 = ISZERO V178
0x303: V180 = 0xbf
0x305: THROWI V179
---
Entry stack: [V126]
Stack pops: 0
Stack additions: [V178, V171, 0x0, V165, V176, V165, 0x0, V174, 0x3ccfd60b, V171, V139, V136]
Exit stack: []

================================

Block 0x306
[0x306:0x313]
---
Predecessors: [0x256]
Successors: [0x314]
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
0x30a JUMPDEST
0x30b POP
0x30c GAS
0x30d CALL
0x30e ISZERO
0x30f DUP1
0x310 ISZERO
0x311 PUSH1 0xd2
0x313 JUMPI
---
0x306: V181 = 0x0
0x309: REVERT 0x0 0x0
0x30a: JUMPDEST 
0x30c: V182 = GAS
0x30d: V183 = CALL V182 S1 S2 S3 S4 S5 S6
0x30e: V184 = ISZERO V183
0x310: V185 = ISZERO V184
0x311: V186 = 0xd2
0x313: THROWI V185
---
Entry stack: [V136, V139, V171, 0x3ccfd60b, V174, 0x0, V165, V176, V165, 0x0, V171, V178]
Stack pops: 0
Stack additions: [V184]
Exit stack: []

================================

Block 0x314
[0x314:0x358]
---
Predecessors: [0x306]
Successors: []
---
0x314 RETURNDATASIZE
0x315 PUSH1 0x0
0x317 DUP1
0x318 RETURNDATACOPY
0x319 RETURNDATASIZE
0x31a PUSH1 0x0
0x31c REVERT
0x31d JUMPDEST
0x31e POP
0x31f POP
0x320 POP
0x321 POP
0x322 DUP1
0x323 PUSH1 0x1
0x325 PUSH1 0xa0
0x327 PUSH1 0x2
0x329 EXP
0x32a SUB
0x32b AND
0x32c SELFDESTRUCT
0x32d STOP
0x32e LOG1
0x32f PUSH6 0x627a7a723058
0x336 SHA3
0x337 SELFDESTRUCT
0x338 MISSING 0xc4
0x339 GAS
0x33a MISSING 0xc9
0x33b RETURNDATASIZE
0x33c LOG0
0x33d ISZERO
0x33e MLOAD
0x33f MISSING 0xac
0x340 MISSING 0xc2
0x341 MISSING 0xaa
0x342 INVALID
0x343 MISSING 0xdb
0x344 EXTCODEHASH
0x345 MOD
0x346 MISSING 0x23
0x347 DUP15
0x348 LOG0
0x349 MISSING 0xce
0x34a MISSING 0x2b
0x34b PUSH3 0x333a2e
0x34f DUP3
0x350 MISSING 0xc7
0x351 MISSING 0xea
0x352 MISSING 0x4c
0x353 MISSING 0xd
0x354 MISSING 0xd8
0x355 MOD
0x356 MISSING 0xf9
0x357 STOP
0x358 MISSING 0x29
---
0x314: V187 = RETURNDATASIZE
0x315: V188 = 0x0
0x318: RETURNDATACOPY 0x0 0x0 V187
0x319: V189 = RETURNDATASIZE
0x31a: V190 = 0x0
0x31c: REVERT 0x0 V189
0x31d: JUMPDEST 
0x323: V191 = 0x1
0x325: V192 = 0xa0
0x327: V193 = 0x2
0x329: V194 = EXP 0x2 0xa0
0x32a: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32b: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x32c: SELFDESTRUCT V196
0x32d: STOP 
0x32e: LOG S0 S1 S2
0x32f: V197 = 0x627a7a723058
0x336: V198 = SHA3 0x627a7a723058 S3
0x337: SELFDESTRUCT V198
0x338: MISSING 0xc4
0x339: V199 = GAS
0x33a: MISSING 0xc9
0x33b: V200 = RETURNDATASIZE
0x33c: LOG V200 S0
0x33d: V201 = ISZERO S1
0x33e: V202 = M[V201]
0x33f: MISSING 0xac
0x340: MISSING 0xc2
0x341: MISSING 0xaa
0x342: INVALID 
0x343: MISSING 0xdb
0x344: V203 = EXTCODEHASH S0
0x345: V204 = MOD V203 S1
0x346: MISSING 0x23
0x348: LOG S14 S0
0x349: MISSING 0xce
0x34a: MISSING 0x2b
0x34b: V205 = 0x333a2e
0x350: MISSING 0xc7
0x351: MISSING 0xea
0x352: MISSING 0x4c
0x353: MISSING 0xd
0x354: MISSING 0xd8
0x355: V206 = MOD S0 S1
0x356: MISSING 0xf9
0x357: STOP 
0x358: MISSING 0x29
---
Entry stack: [V184]
Stack pops: 0
Stack additions: [S4, V199, V202, V204, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S1, 0x333a2e, S0, S1, V206]
Exit stack: []

================================

Function 0:
Public function signature: 0x24be4bfe
Entry block: 0x42
Exit block: 0x40
Body: 0x40, 0x42, 0x4a, 0x4e, 0x95, 0x99, 0x16d, 0x176, 0x18c, 0x1f3, 0x22a, 0x233, 0x23b

Function 1:
Public fallback function
Entry block: 0x40
Exit block: 0x40
Body: 0x40

