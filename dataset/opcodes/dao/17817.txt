Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x75]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x75
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x75
0xa: JUMPI 0x75 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x77]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6898f82b
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x77
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6898f82b
0x39: V12 = EQ V10 0x6898f82b
0x3a: V13 = 0x77
0x3d: JUMPI 0x77 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x82]
---
0x3e DUP1
0x3f PUSH4 0x776d1a01
0x44 EQ
0x45 PUSH2 0x82
0x48 JUMPI
---
0x3f: V14 = 0x776d1a01
0x44: V15 = EQ 0x776d1a01 V10
0x45: V16 = 0x82
0x48: JUMPI 0x82 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xa1]
---
0x49 DUP1
0x4a PUSH4 0x8da5cb5b
0x4f EQ
0x50 PUSH2 0xa1
0x53 JUMPI
---
0x4a: V17 = 0x8da5cb5b
0x4f: V18 = EQ 0x8da5cb5b V10
0x50: V19 = 0xa1
0x53: JUMPI 0xa1 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xd0]
---
0x54 DUP1
0x55 PUSH4 0xc5563720
0x5a EQ
0x5b PUSH2 0xd0
0x5e JUMPI
---
0x55: V20 = 0xc5563720
0x5a: V21 = EQ 0xc5563720 V10
0x5b: V22 = 0xd0
0x5e: JUMPI 0xd0 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0xe3]
---
0x5f DUP1
0x60 PUSH4 0xd4b83992
0x65 EQ
0x66 PUSH2 0xe3
0x69 JUMPI
---
0x60: V23 = 0xd4b83992
0x65: V24 = EQ 0xd4b83992 V10
0x66: V25 = 0xe3
0x69: JUMPI 0xe3 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0xf6]
---
0x6a DUP1
0x6b PUSH4 0xe29940b9
0x70 EQ
0x71 PUSH2 0xf6
0x74 JUMPI
---
0x6b: V26 = 0xe29940b9
0x70: V27 = EQ 0xe29940b9 V10
0x71: V28 = 0xf6
0x74: JUMPI 0xf6 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x76]
---
Predecessors: [0x0, 0x6a, 0x153, 0x173, 0x261]
Successors: []
---
0x75 JUMPDEST
0x76 STOP
---
0x75: JUMPDEST 
0x76: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0xb]
Successors: [0x10c]
---
0x77 JUMPDEST
0x78 PUSH2 0x75
0x7b PUSH1 0x4
0x7d CALLDATALOAD
0x7e PUSH2 0x10c
0x81 JUMP
---
0x77: JUMPDEST 
0x78: V29 = 0x75
0x7b: V30 = 0x4
0x7d: V31 = CALLDATALOAD 0x4
0x7e: V32 = 0x10c
0x81: JUMP 0x10c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75, V31]
Exit stack: [V10, 0x75, V31]

================================

Block 0x82
[0x82:0x88]
---
Predecessors: [0x3e]
Successors: [0x89, 0x8d]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 ISZERO
0x85 PUSH2 0x8d
0x88 JUMPI
---
0x82: JUMPDEST 
0x83: V33 = CALLVALUE
0x84: V34 = ISZERO V33
0x85: V35 = 0x8d
0x88: JUMPI 0x8d V34
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x89
[0x89:0x8c]
---
Predecessors: [0x82]
Successors: []
---
0x89 PUSH1 0x0
0x8b DUP1
0x8c REVERT
---
0x89: V36 = 0x0
0x8c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0xa0]
---
Predecessors: [0x82]
Successors: [0x158]
---
0x8d JUMPDEST
0x8e PUSH2 0x75
0x91 PUSH1 0x1
0x93 PUSH1 0xa0
0x95 PUSH1 0x2
0x97 EXP
0x98 SUB
0x99 PUSH1 0x4
0x9b CALLDATALOAD
0x9c AND
0x9d PUSH2 0x158
0xa0 JUMP
---
0x8d: JUMPDEST 
0x8e: V37 = 0x75
0x91: V38 = 0x1
0x93: V39 = 0xa0
0x95: V40 = 0x2
0x97: V41 = EXP 0x2 0xa0
0x98: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99: V43 = 0x4
0x9b: V44 = CALLDATALOAD 0x4
0x9c: V45 = AND V44 0xffffffffffffffffffffffffffffffffffffffff
0x9d: V46 = 0x158
0xa0: JUMP 0x158
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75, V45]
Exit stack: [V10, 0x75, V45]

================================

Block 0xa1
[0xa1:0xa7]
---
Predecessors: [0x49]
Successors: [0xa8, 0xac]
---
0xa1 JUMPDEST
0xa2 CALLVALUE
0xa3 ISZERO
0xa4 PUSH2 0xac
0xa7 JUMPI
---
0xa1: JUMPDEST 
0xa2: V47 = CALLVALUE
0xa3: V48 = ISZERO V47
0xa4: V49 = 0xac
0xa7: JUMPI 0xac V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0xa1]
Successors: []
---
0xa8 PUSH1 0x0
0xaa DUP1
0xab REVERT
---
0xa8: V50 = 0x0
0xab: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb3]
---
Predecessors: [0xa1]
Successors: [0x1a2]
---
0xac JUMPDEST
0xad PUSH2 0xb4
0xb0 PUSH2 0x1a2
0xb3 JUMP
---
0xac: JUMPDEST 
0xad: V51 = 0xb4
0xb0: V52 = 0x1a2
0xb3: JUMP 0x1a2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V10, 0xb4]

================================

Block 0xb4
[0xb4:0xcf]
---
Predecessors: [0x1a2, 0x1da]
Successors: []
---
0xb4 JUMPDEST
0xb5 PUSH1 0x40
0xb7 MLOAD
0xb8 PUSH1 0x1
0xba PUSH1 0xa0
0xbc PUSH1 0x2
0xbe EXP
0xbf SUB
0xc0 SWAP1
0xc1 SWAP2
0xc2 AND
0xc3 DUP2
0xc4 MSTORE
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 PUSH1 0x40
0xca MLOAD
0xcb DUP1
0xcc SWAP2
0xcd SUB
0xce SWAP1
0xcf RETURN
---
0xb4: JUMPDEST 
0xb5: V53 = 0x40
0xb7: V54 = M[0x40]
0xb8: V55 = 0x1
0xba: V56 = 0xa0
0xbc: V57 = 0x2
0xbe: V58 = EXP 0x2 0xa0
0xbf: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2: V60 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xc4: M[V54] = V60
0xc5: V61 = 0x20
0xc7: V62 = ADD 0x20 V54
0xc8: V63 = 0x40
0xca: V64 = M[0x40]
0xcd: V65 = SUB V62 V64
0xcf: RETURN V64 V65
---
Entry stack: [V10, 0xb4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb4]

================================

Block 0xd0
[0xd0:0xd6]
---
Predecessors: [0x54]
Successors: [0xd7, 0xdb]
---
0xd0 JUMPDEST
0xd1 CALLVALUE
0xd2 ISZERO
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0xd0: JUMPDEST 
0xd1: V66 = CALLVALUE
0xd2: V67 = ISZERO V66
0xd3: V68 = 0xdb
0xd6: JUMPI 0xdb V67
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0xd0]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V69 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdb
[0xdb:0xe2]
---
Predecessors: [0xd0]
Successors: [0x1b1]
---
0xdb JUMPDEST
0xdc PUSH2 0x75
0xdf PUSH2 0x1b1
0xe2 JUMP
---
0xdb: JUMPDEST 
0xdc: V70 = 0x75
0xdf: V71 = 0x1b1
0xe2: JUMP 0x1b1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75]
Exit stack: [V10, 0x75]

================================

Block 0xe3
[0xe3:0xe9]
---
Predecessors: [0x5f]
Successors: [0xea, 0xee]
---
0xe3 JUMPDEST
0xe4 CALLVALUE
0xe5 ISZERO
0xe6 PUSH2 0xee
0xe9 JUMPI
---
0xe3: JUMPDEST 
0xe4: V72 = CALLVALUE
0xe5: V73 = ISZERO V72
0xe6: V74 = 0xee
0xe9: JUMPI 0xee V73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xea
[0xea:0xed]
---
Predecessors: [0xe3]
Successors: []
---
0xea PUSH1 0x0
0xec DUP1
0xed REVERT
---
0xea: V75 = 0x0
0xed: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf5]
---
Predecessors: [0xe3]
Successors: [0x1da]
---
0xee JUMPDEST
0xef PUSH2 0xb4
0xf2 PUSH2 0x1da
0xf5 JUMP
---
0xee: JUMPDEST 
0xef: V76 = 0xb4
0xf2: V77 = 0x1da
0xf5: JUMP 0x1da
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V10, 0xb4]

================================

Block 0xf6
[0xf6:0xfc]
---
Predecessors: [0x6a]
Successors: [0xfd, 0x101]
---
0xf6 JUMPDEST
0xf7 CALLVALUE
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf6: JUMPDEST 
0xf7: V78 = CALLVALUE
0xf8: V79 = ISZERO V78
0xf9: V80 = 0x101
0xfc: JUMPI 0x101 V79
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf6]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V81 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x1e9]
---
0x101 JUMPDEST
0x102 PUSH2 0x75
0x105 PUSH1 0x4
0x107 CALLDATALOAD
0x108 PUSH2 0x1e9
0x10b JUMP
---
0x101: JUMPDEST 
0x102: V82 = 0x75
0x105: V83 = 0x4
0x107: V84 = CALLDATALOAD 0x4
0x108: V85 = 0x1e9
0x10b: JUMP 0x1e9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75, V84]
Exit stack: [V10, 0x75, V84]

================================

Block 0x10c
[0x10c:0x14e]
---
Predecessors: [0x77]
Successors: [0x14f, 0x153]
---
0x10c JUMPDEST
0x10d PUSH1 0x1
0x10f SLOAD
0x110 PUSH1 0x1
0x112 PUSH1 0xa0
0x114 PUSH1 0x2
0x116 EXP
0x117 SUB
0x118 ADDRESS
0x119 DUP2
0x11a AND
0x11b BALANCE
0x11c SWAP2
0x11d PUSH1 0x0
0x11f SWAP2
0x120 AND
0x121 DUP4
0x122 PUSH1 0x40
0x124 MLOAD
0x125 PUSH1 0x0
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP1
0x12b DUP4
0x12c SUB
0x12d DUP2
0x12e DUP6
0x12f DUP8
0x130 PUSH2 0x8796
0x133 GAS
0x134 SUB
0x135 CALL
0x136 POP
0x137 POP
0x138 POP
0x139 PUSH1 0x1
0x13b PUSH1 0xa0
0x13d PUSH1 0x2
0x13f EXP
0x140 SUB
0x141 ADDRESS
0x142 AND
0x143 BALANCE
0x144 SWAP2
0x145 POP
0x146 POP
0x147 DUP2
0x148 DUP2
0x149 LT
0x14a ISZERO
0x14b PUSH2 0x153
0x14e JUMPI
---
0x10c: JUMPDEST 
0x10d: V86 = 0x1
0x10f: V87 = S[0x1]
0x110: V88 = 0x1
0x112: V89 = 0xa0
0x114: V90 = 0x2
0x116: V91 = EXP 0x2 0xa0
0x117: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x118: V93 = ADDRESS
0x11a: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x11b: V95 = BALANCE V94
0x11d: V96 = 0x0
0x120: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x122: V98 = 0x40
0x124: V99 = M[0x40]
0x125: V100 = 0x0
0x127: V101 = 0x40
0x129: V102 = M[0x40]
0x12c: V103 = SUB V99 V102
0x130: V104 = 0x8796
0x133: V105 = GAS
0x134: V106 = SUB V105 0x8796
0x135: V107 = CALL V106 V97 V31 V102 V103 V102 0x0
0x139: V108 = 0x1
0x13b: V109 = 0xa0
0x13d: V110 = 0x2
0x13f: V111 = EXP 0x2 0xa0
0x140: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x141: V113 = ADDRESS
0x142: V114 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x143: V115 = BALANCE V114
0x149: V116 = LT V115 V95
0x14a: V117 = ISZERO V116
0x14b: V118 = 0x153
0x14e: JUMPI 0x153 V117
---
Entry stack: [V10, 0x75, V31]
Stack pops: 1
Stack additions: [S0, V95, V115]
Exit stack: [V10, 0x75, V31, V95, V115]

================================

Block 0x14f
[0x14f:0x152]
---
Predecessors: [0x10c]
Successors: []
---
0x14f PUSH1 0x0
0x151 DUP1
0x152 REVERT
---
0x14f: V119 = 0x0
0x152: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V31, V95, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V31, V95, V115]

================================

Block 0x153
[0x153:0x157]
---
Predecessors: [0x10c]
Successors: [0x75]
---
0x153 JUMPDEST
0x154 POP
0x155 POP
0x156 POP
0x157 JUMP
---
0x153: JUMPDEST 
0x157: JUMP 0x75
---
Entry stack: [V10, 0x75, V31, V95, V115]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x158
[0x158:0x16e]
---
Predecessors: [0x8d]
Successors: [0x16f, 0x173]
---
0x158 JUMPDEST
0x159 PUSH1 0x0
0x15b SLOAD
0x15c CALLER
0x15d PUSH1 0x1
0x15f PUSH1 0xa0
0x161 PUSH1 0x2
0x163 EXP
0x164 SUB
0x165 SWAP1
0x166 DUP2
0x167 AND
0x168 SWAP2
0x169 AND
0x16a EQ
0x16b PUSH2 0x173
0x16e JUMPI
---
0x158: JUMPDEST 
0x159: V120 = 0x0
0x15b: V121 = S[0x0]
0x15c: V122 = CALLER
0x15d: V123 = 0x1
0x15f: V124 = 0xa0
0x161: V125 = 0x2
0x163: V126 = EXP 0x2 0xa0
0x164: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x167: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x169: V129 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x16a: V130 = EQ V129 V128
0x16b: V131 = 0x173
0x16e: JUMPI 0x173 V130
---
Entry stack: [V10, 0x75, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V45]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x158]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V132 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V45]

================================

Block 0x173
[0x173:0x1a1]
---
Predecessors: [0x158]
Successors: [0x75]
---
0x173 JUMPDEST
0x174 PUSH1 0x1
0x176 DUP1
0x177 SLOAD
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d NOT
0x18e AND
0x18f PUSH1 0x1
0x191 PUSH1 0xa0
0x193 PUSH1 0x2
0x195 EXP
0x196 SUB
0x197 SWAP3
0x198 SWAP1
0x199 SWAP3
0x19a AND
0x19b SWAP2
0x19c SWAP1
0x19d SWAP2
0x19e OR
0x19f SWAP1
0x1a0 SSTORE
0x1a1 JUMP
---
0x173: JUMPDEST 
0x174: V133 = 0x1
0x177: V134 = S[0x1]
0x178: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V136 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V137 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V134
0x18f: V138 = 0x1
0x191: V139 = 0xa0
0x193: V140 = 0x2
0x195: V141 = EXP 0x2 0xa0
0x196: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19a: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x19e: V144 = OR V143 V137
0x1a0: S[0x1] = V144
0x1a1: JUMP 0x75
---
Entry stack: [V10, 0x75, V45]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a2
[0x1a2:0x1b0]
---
Predecessors: [0xac]
Successors: [0xb4]
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x0
0x1a5 SLOAD
0x1a6 PUSH1 0x1
0x1a8 PUSH1 0xa0
0x1aa PUSH1 0x2
0x1ac EXP
0x1ad SUB
0x1ae AND
0x1af DUP2
0x1b0 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V145 = 0x0
0x1a5: V146 = S[0x0]
0x1a6: V147 = 0x1
0x1a8: V148 = 0xa0
0x1aa: V149 = 0x2
0x1ac: V150 = EXP 0x2 0xa0
0x1ad: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ae: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x1b0: JUMP 0xb4
---
Entry stack: [V10, 0xb4]
Stack pops: 1
Stack additions: [S0, V152]
Exit stack: [V10, 0xb4, V152]

================================

Block 0x1b1
[0x1b1:0x1c7]
---
Predecessors: [0xdb]
Successors: [0x1c8, 0x1cc]
---
0x1b1 JUMPDEST
0x1b2 PUSH1 0x0
0x1b4 SLOAD
0x1b5 CALLER
0x1b6 PUSH1 0x1
0x1b8 PUSH1 0xa0
0x1ba PUSH1 0x2
0x1bc EXP
0x1bd SUB
0x1be SWAP1
0x1bf DUP2
0x1c0 AND
0x1c1 SWAP2
0x1c2 AND
0x1c3 EQ
0x1c4 PUSH2 0x1cc
0x1c7 JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V153 = 0x0
0x1b4: V154 = S[0x0]
0x1b5: V155 = CALLER
0x1b6: V156 = 0x1
0x1b8: V157 = 0xa0
0x1ba: V158 = 0x2
0x1bc: V159 = EXP 0x2 0xa0
0x1bd: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c0: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x1c2: V162 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V163 = EQ V162 V161
0x1c4: V164 = 0x1cc
0x1c7: JUMPI 0x1cc V163
---
Entry stack: [V10, 0x75]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75]

================================

Block 0x1c8
[0x1c8:0x1cb]
---
Predecessors: [0x1b1]
Successors: []
---
0x1c8 PUSH1 0x0
0x1ca DUP1
0x1cb REVERT
---
0x1c8: V165 = 0x0
0x1cb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75]

================================

Block 0x1cc
[0x1cc:0x1d9]
---
Predecessors: [0x1b1]
Successors: []
---
0x1cc JUMPDEST
0x1cd PUSH1 0x0
0x1cf SLOAD
0x1d0 PUSH1 0x1
0x1d2 PUSH1 0xa0
0x1d4 PUSH1 0x2
0x1d6 EXP
0x1d7 SUB
0x1d8 AND
0x1d9 SELFDESTRUCT
---
0x1cc: JUMPDEST 
0x1cd: V166 = 0x0
0x1cf: V167 = S[0x0]
0x1d0: V168 = 0x1
0x1d2: V169 = 0xa0
0x1d4: V170 = 0x2
0x1d6: V171 = EXP 0x2 0xa0
0x1d7: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x1d9: SELFDESTRUCT V173
---
Entry stack: [V10, 0x75]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75]

================================

Block 0x1da
[0x1da:0x1e8]
---
Predecessors: [0xee]
Successors: [0xb4]
---
0x1da JUMPDEST
0x1db PUSH1 0x1
0x1dd SLOAD
0x1de PUSH1 0x1
0x1e0 PUSH1 0xa0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 SUB
0x1e6 AND
0x1e7 DUP2
0x1e8 JUMP
---
0x1da: JUMPDEST 
0x1db: V174 = 0x1
0x1dd: V175 = S[0x1]
0x1de: V176 = 0x1
0x1e0: V177 = 0xa0
0x1e2: V178 = 0x2
0x1e4: V179 = EXP 0x2 0xa0
0x1e5: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e6: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x1e8: JUMP 0xb4
---
Entry stack: [V10, 0xb4]
Stack pops: 1
Stack additions: [S0, V181]
Exit stack: [V10, 0xb4, V181]

================================

Block 0x1e9
[0x1e9:0x1f0]
---
Predecessors: [0x101]
Successors: [0x1f1, 0x22e]
---
0x1e9 JUMPDEST
0x1ea DUP1
0x1eb ISZERO
0x1ec ISZERO
0x1ed PUSH2 0x22e
0x1f0 JUMPI
---
0x1e9: JUMPDEST 
0x1eb: V182 = ISZERO V84
0x1ec: V183 = ISZERO V182
0x1ed: V184 = 0x22e
0x1f0: JUMPI 0x22e V183
---
Entry stack: [V10, 0x75, V84]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x75, V84]

================================

Block 0x1f1
[0x1f1:0x224]
---
Predecessors: [0x1e9]
Successors: [0x225, 0x229]
---
0x1f1 PUSH1 0x0
0x1f3 SLOAD
0x1f4 PUSH1 0x1
0x1f6 PUSH1 0xa0
0x1f8 PUSH1 0x2
0x1fa EXP
0x1fb SUB
0x1fc SWAP1
0x1fd DUP2
0x1fe AND
0x1ff SWAP1
0x200 ADDRESS
0x201 AND
0x202 BALANCE
0x203 DUP1
0x204 ISZERO
0x205 PUSH2 0x8fc
0x208 MUL
0x209 SWAP1
0x20a PUSH1 0x40
0x20c MLOAD
0x20d PUSH1 0x0
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 DUP4
0x214 SUB
0x215 DUP2
0x216 DUP6
0x217 DUP9
0x218 DUP9
0x219 CALL
0x21a SWAP4
0x21b POP
0x21c POP
0x21d POP
0x21e POP
0x21f ISZERO
0x220 ISZERO
0x221 PUSH2 0x229
0x224 JUMPI
---
0x1f1: V185 = 0x0
0x1f3: V186 = S[0x0]
0x1f4: V187 = 0x1
0x1f6: V188 = 0xa0
0x1f8: V189 = 0x2
0x1fa: V190 = EXP 0x2 0xa0
0x1fb: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fe: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x200: V193 = ADDRESS
0x201: V194 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x202: V195 = BALANCE V194
0x204: V196 = ISZERO V195
0x205: V197 = 0x8fc
0x208: V198 = MUL 0x8fc V196
0x20a: V199 = 0x40
0x20c: V200 = M[0x40]
0x20d: V201 = 0x0
0x20f: V202 = 0x40
0x211: V203 = M[0x40]
0x214: V204 = SUB V200 V203
0x219: V205 = CALL V198 V192 V195 V203 V204 V203 0x0
0x21f: V206 = ISZERO V205
0x220: V207 = ISZERO V206
0x221: V208 = 0x229
0x224: JUMPI 0x229 V207
---
Entry stack: [V10, 0x75, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V84]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x1f1]
Successors: []
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
---
0x225: V209 = 0x0
0x228: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V84]

================================

Block 0x229
[0x229:0x22d]
---
Predecessors: [0x1f1]
Successors: [0x261]
---
0x229 JUMPDEST
0x22a PUSH2 0x261
0x22d JUMP
---
0x229: JUMPDEST 
0x22a: V210 = 0x261
0x22d: JUMP 0x261
---
Entry stack: [V10, 0x75, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V84]

================================

Block 0x22e
[0x22e:0x25c]
---
Predecessors: [0x1e9]
Successors: [0x25d, 0x261]
---
0x22e JUMPDEST
0x22f PUSH1 0x0
0x231 SLOAD
0x232 PUSH1 0x1
0x234 PUSH1 0xa0
0x236 PUSH1 0x2
0x238 EXP
0x239 SUB
0x23a AND
0x23b DUP2
0x23c ISZERO
0x23d PUSH2 0x8fc
0x240 MUL
0x241 DUP3
0x242 PUSH1 0x40
0x244 MLOAD
0x245 PUSH1 0x0
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b DUP4
0x24c SUB
0x24d DUP2
0x24e DUP6
0x24f DUP9
0x250 DUP9
0x251 CALL
0x252 SWAP4
0x253 POP
0x254 POP
0x255 POP
0x256 POP
0x257 ISZERO
0x258 ISZERO
0x259 PUSH2 0x261
0x25c JUMPI
---
0x22e: JUMPDEST 
0x22f: V211 = 0x0
0x231: V212 = S[0x0]
0x232: V213 = 0x1
0x234: V214 = 0xa0
0x236: V215 = 0x2
0x238: V216 = EXP 0x2 0xa0
0x239: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23a: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x23c: V219 = ISZERO V84
0x23d: V220 = 0x8fc
0x240: V221 = MUL 0x8fc V219
0x242: V222 = 0x40
0x244: V223 = M[0x40]
0x245: V224 = 0x0
0x247: V225 = 0x40
0x249: V226 = M[0x40]
0x24c: V227 = SUB V223 V226
0x251: V228 = CALL V221 V218 V84 V226 V227 V226 0x0
0x257: V229 = ISZERO V228
0x258: V230 = ISZERO V229
0x259: V231 = 0x261
0x25c: JUMPI 0x261 V230
---
Entry stack: [V10, 0x75, V84]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x75, V84]

================================

Block 0x25d
[0x25d:0x260]
---
Predecessors: [0x22e]
Successors: []
---
0x25d PUSH1 0x0
0x25f DUP1
0x260 REVERT
---
0x25d: V232 = 0x0
0x260: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V84]

================================

Block 0x261
[0x261:0x263]
---
Predecessors: [0x229, 0x22e]
Successors: [0x75]
---
0x261 JUMPDEST
0x262 POP
0x263 JUMP
---
0x261: JUMPDEST 
0x263: JUMP 0x75
---
Entry stack: [V10, 0x75, V84]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x264
[0x264:0x28f]
---
Predecessors: []
Successors: []
---
0x264 STOP
0x265 LOG1
0x266 PUSH6 0x627a7a723058
0x26d SHA3
0x26e DUP9
0x26f MISSING 0xe2
0x270 DUP16
0x271 MISSING 0xa9
0x272 SUB
0x273 NOT
0x274 ORIGIN
0x275 MISSING 0xb2
0x276 MISSING 0xe3
0x277 CALLER
0x278 SWAP11
0x279 MISSING 0xc3
0x27a MISSING 0xbc
0x27b PUSH18 0xda547951b00e050951cf3cda1b5191e25c14
0x28e STOP
0x28f MISSING 0x29
---
0x264: STOP 
0x265: LOG S0 S1 S2
0x266: V233 = 0x627a7a723058
0x26d: V234 = SHA3 0x627a7a723058 S3
0x26f: MISSING 0xe2
0x271: MISSING 0xa9
0x272: V235 = SUB S0 S1
0x273: V236 = NOT V235
0x274: V237 = ORIGIN
0x275: MISSING 0xb2
0x276: MISSING 0xe3
0x277: V238 = CALLER
0x279: MISSING 0xc3
0x27a: MISSING 0xbc
0x27b: V239 = 0xda547951b00e050951cf3cda1b5191e25c14
0x28e: STOP 
0x28f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, V234, S4, S5, S6, S7, S8, S9, S10, S11, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V237, V236, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V238, 0xda547951b00e050951cf3cda1b5191e25c14]
Exit stack: []

================================

Function 0:
Public function signature: 0x6898f82b
Entry block: 0x77
Exit block: 0x75
Body: 0x75, 0x77, 0x10c, 0x14f, 0x153

Function 1:
Public function signature: 0x776d1a01
Entry block: 0x82
Exit block: 0x75
Body: 0x75, 0x82, 0x89, 0x8d, 0x158, 0x16f, 0x173

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xa1
Exit block: 0xb4
Body: 0xa1, 0xa8, 0xac, 0xb4, 0x1a2

Function 3:
Public function signature: 0xc5563720
Entry block: 0xd0
Exit block: 0x1cc
Body: 0xd0, 0xd7, 0xdb, 0x1b1, 0x1c8, 0x1cc

Function 4:
Public function signature: 0xd4b83992
Entry block: 0xe3
Exit block: 0xb4
Body: 0xb4, 0xe3, 0xea, 0xee, 0x1da

Function 5:
Public function signature: 0xe29940b9
Entry block: 0xf6
Exit block: 0x75
Body: 0x75, 0xf6, 0xfd, 0x101, 0x1e9, 0x1f1, 0x225, 0x229, 0x22e, 0x25d, 0x261

Function 6:
Public fallback function
Entry block: 0x75
Exit block: 0x75
Body: 0x75

