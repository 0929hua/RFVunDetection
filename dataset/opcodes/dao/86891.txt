Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x85]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1eac4501
0x3c EQ
0x3d PUSH2 0x85
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1eac4501
0x3c: V13 = EQ 0x1eac4501 V11
0x3d: V14 = 0x85
0x40: JUMPI 0x85 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xc7]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0xc7
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0xc7
0x4b: JUMPI 0xc7 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xdc]
---
0x4c DUP1
0x4d PUSH4 0x943dfef1
0x52 EQ
0x53 PUSH2 0xdc
0x56 JUMPI
---
0x4d: V18 = 0x943dfef1
0x52: V19 = EQ 0x943dfef1 V11
0x53: V20 = 0xdc
0x56: JUMPI 0xdc V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x131]
---
0x57 DUP1
0x58 PUSH4 0xca4b208b
0x5d EQ
0x5e PUSH2 0x131
0x61 JUMPI
---
0x58: V21 = 0xca4b208b
0x5d: V22 = EQ 0xca4b208b V11
0x5e: V23 = 0x131
0x61: JUMPI 0x131 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x186]
---
0x62 DUP1
0x63 PUSH4 0xccde6557
0x68 EQ
0x69 PUSH2 0x186
0x6c JUMPI
---
0x63: V24 = 0xccde6557
0x68: V25 = EQ 0xccde6557 V11
0x69: V26 = 0x186
0x6c: JUMPI 0x186 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x19b]
---
0x6d DUP1
0x6e PUSH4 0xea98321e
0x73 EQ
0x74 PUSH2 0x19b
0x77 JUMPI
---
0x6e: V27 = 0xea98321e
0x73: V28 = EQ 0xea98321e V11
0x74: V29 = 0x19b
0x77: JUMPI 0x19b V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x1b0]
---
0x78 DUP1
0x79 PUSH4 0xfc0c546a
0x7e EQ
0x7f PUSH2 0x1b0
0x82 JUMPI
---
0x79: V30 = 0xfc0c546a
0x7e: V31 = EQ 0xfc0c546a V11
0x7f: V32 = 0x1b0
0x82: JUMPI 0x1b0 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8b]
---
Predecessors: [0xd]
Successors: [0x8c, 0x90]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 ISZERO
0x88 PUSH2 0x90
0x8b JUMPI
---
0x85: JUMPDEST 
0x86: V33 = CALLVALUE
0x87: V34 = ISZERO V33
0x88: V35 = 0x90
0x8b: JUMPI 0x90 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x85]
Successors: []
---
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8c: V36 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x90
[0x90:0xc4]
---
Predecessors: [0x85]
Successors: [0x205]
---
0x90 JUMPDEST
0x91 PUSH2 0xc5
0x94 PUSH1 0x4
0x96 DUP1
0x97 DUP1
0x98 CALLDATALOAD
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf SWAP1
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 SWAP1
0xb4 SWAP2
0xb5 SWAP1
0xb6 DUP1
0xb7 CALLDATALOAD
0xb8 SWAP1
0xb9 PUSH1 0x20
0xbb ADD
0xbc SWAP1
0xbd SWAP2
0xbe SWAP1
0xbf POP
0xc0 POP
0xc1 PUSH2 0x205
0xc4 JUMP
---
0x90: JUMPDEST 
0x91: V37 = 0xc5
0x94: V38 = 0x4
0x98: V39 = CALLDATALOAD 0x4
0x99: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xb0: V42 = 0x20
0xb2: V43 = ADD 0x20 0x4
0xb7: V44 = CALLDATALOAD 0x24
0xb9: V45 = 0x20
0xbb: V46 = ADD 0x20 0x24
0xc1: V47 = 0x205
0xc4: JUMP 0x205
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc5, V41, V44]
Exit stack: [V11, 0xc5, V41, V44]

================================

Block 0xc5
[0xc5:0xc6]
---
Predecessors: [0x2e8]
Successors: []
---
0xc5 JUMPDEST
0xc6 STOP
---
0xc5: JUMPDEST 
0xc6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc7
[0xc7:0xcd]
---
Predecessors: [0x41]
Successors: [0xce, 0xd2]
---
0xc7 JUMPDEST
0xc8 CALLVALUE
0xc9 ISZERO
0xca PUSH2 0xd2
0xcd JUMPI
---
0xc7: JUMPDEST 
0xc8: V48 = CALLVALUE
0xc9: V49 = ISZERO V48
0xca: V50 = 0xd2
0xcd: JUMPI 0xd2 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xce
[0xce:0xd1]
---
Predecessors: [0xc7]
Successors: []
---
0xce PUSH1 0x0
0xd0 DUP1
0xd1 REVERT
---
0xce: V51 = 0x0
0xd1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd2
[0xd2:0xd9]
---
Predecessors: [0xc7]
Successors: [0x2f8]
---
0xd2 JUMPDEST
0xd3 PUSH2 0xda
0xd6 PUSH2 0x2f8
0xd9 JUMP
---
0xd2: JUMPDEST 
0xd3: V52 = 0xda
0xd6: V53 = 0x2f8
0xd9: JUMP 0x2f8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xda]
Exit stack: [V11, 0xda]

================================

Block 0xda
[0xda:0xdb]
---
Predecessors: [0x371]
Successors: []
---
0xda JUMPDEST
0xdb STOP
---
0xda: JUMPDEST 
0xdb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xe2]
---
Predecessors: [0x4c]
Successors: [0xe3, 0xe7]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde ISZERO
0xdf PUSH2 0xe7
0xe2 JUMPI
---
0xdc: JUMPDEST 
0xdd: V54 = CALLVALUE
0xde: V55 = ISZERO V54
0xdf: V56 = 0xe7
0xe2: JUMPI 0xe7 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe3
[0xe3:0xe6]
---
Predecessors: [0xdc]
Successors: []
---
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 REVERT
---
0xe3: V57 = 0x0
0xe6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0xdc]
Successors: [0x373]
---
0xe7 JUMPDEST
0xe8 PUSH2 0xef
0xeb PUSH2 0x373
0xee JUMP
---
0xe7: JUMPDEST 
0xe8: V58 = 0xef
0xeb: V59 = 0x373
0xee: JUMP 0x373
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V11, 0xef]

================================

Block 0xef
[0xef:0x130]
---
Predecessors: [0x373]
Successors: []
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 MLOAD
0xf3 DUP1
0xf4 DUP3
0xf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a AND
0x10b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x120 AND
0x121 DUP2
0x122 MSTORE
0x123 PUSH1 0x20
0x125 ADD
0x126 SWAP2
0x127 POP
0x128 POP
0x129 PUSH1 0x40
0x12b MLOAD
0x12c DUP1
0x12d SWAP2
0x12e SUB
0x12f SWAP1
0x130 RETURN
---
0xef: JUMPDEST 
0xf0: V60 = 0x40
0xf2: V61 = M[0x40]
0xf5: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x10b: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x120: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x122: M[V61] = V65
0x123: V66 = 0x20
0x125: V67 = ADD 0x20 V61
0x129: V68 = 0x40
0x12b: V69 = M[0x40]
0x12e: V70 = SUB V67 V69
0x130: RETURN V69 V70
---
Entry stack: [V11, 0xef, V206]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xef]

================================

Block 0x131
[0x131:0x137]
---
Predecessors: [0x57]
Successors: [0x138, 0x13c]
---
0x131 JUMPDEST
0x132 CALLVALUE
0x133 ISZERO
0x134 PUSH2 0x13c
0x137 JUMPI
---
0x131: JUMPDEST 
0x132: V71 = CALLVALUE
0x133: V72 = ISZERO V71
0x134: V73 = 0x13c
0x137: JUMPI 0x13c V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x138
[0x138:0x13b]
---
Predecessors: [0x131]
Successors: []
---
0x138 PUSH1 0x0
0x13a DUP1
0x13b REVERT
---
0x138: V74 = 0x0
0x13b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13c
[0x13c:0x143]
---
Predecessors: [0x131]
Successors: [0x399]
---
0x13c JUMPDEST
0x13d PUSH2 0x144
0x140 PUSH2 0x399
0x143 JUMP
---
0x13c: JUMPDEST 
0x13d: V75 = 0x144
0x140: V76 = 0x399
0x143: JUMP 0x399
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x144]
Exit stack: [V11, 0x144]

================================

Block 0x144
[0x144:0x185]
---
Predecessors: [0x399]
Successors: []
---
0x144 JUMPDEST
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 DUP3
0x14a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15f AND
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 DUP2
0x177 MSTORE
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP2
0x17c POP
0x17d POP
0x17e PUSH1 0x40
0x180 MLOAD
0x181 DUP1
0x182 SWAP2
0x183 SUB
0x184 SWAP1
0x185 RETURN
---
0x144: JUMPDEST 
0x145: V77 = 0x40
0x147: V78 = M[0x40]
0x14a: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x160: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x177: M[V78] = V82
0x178: V83 = 0x20
0x17a: V84 = ADD 0x20 V78
0x17e: V85 = 0x40
0x180: V86 = M[0x40]
0x183: V87 = SUB V84 V86
0x185: RETURN V86 V87
---
Entry stack: [V11, 0x144, V214]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x144]

================================

Block 0x186
[0x186:0x18c]
---
Predecessors: [0x62]
Successors: [0x18d, 0x191]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 ISZERO
0x189 PUSH2 0x191
0x18c JUMPI
---
0x186: JUMPDEST 
0x187: V88 = CALLVALUE
0x188: V89 = ISZERO V88
0x189: V90 = 0x191
0x18c: JUMPI 0x191 V89
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18d
[0x18d:0x190]
---
Predecessors: [0x186]
Successors: []
---
0x18d PUSH1 0x0
0x18f DUP1
0x190 REVERT
---
0x18d: V91 = 0x0
0x190: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x191
[0x191:0x198]
---
Predecessors: [0x186]
Successors: [0x3bf]
---
0x191 JUMPDEST
0x192 PUSH2 0x199
0x195 PUSH2 0x3bf
0x198 JUMP
---
0x191: JUMPDEST 
0x192: V92 = 0x199
0x195: V93 = 0x3bf
0x198: JUMP 0x3bf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x199]
Exit stack: [V11, 0x199]

================================

Block 0x199
[0x199:0x19a]
---
Predecessors: [0x3bf]
Successors: []
---
0x199 JUMPDEST
0x19a STOP
---
0x199: JUMPDEST 
0x19a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19b
[0x19b:0x1a1]
---
Predecessors: [0x6d]
Successors: [0x1a2, 0x1a6]
---
0x19b JUMPDEST
0x19c CALLVALUE
0x19d ISZERO
0x19e PUSH2 0x1a6
0x1a1 JUMPI
---
0x19b: JUMPDEST 
0x19c: V94 = CALLVALUE
0x19d: V95 = ISZERO V94
0x19e: V96 = 0x1a6
0x1a1: JUMPI 0x1a6 V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x19b]
Successors: []
---
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 REVERT
---
0x1a2: V97 = 0x0
0x1a5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a6
[0x1a6:0x1ad]
---
Predecessors: [0x19b]
Successors: [0x42b]
---
0x1a6 JUMPDEST
0x1a7 PUSH2 0x1ae
0x1aa PUSH2 0x42b
0x1ad JUMP
---
0x1a6: JUMPDEST 
0x1a7: V98 = 0x1ae
0x1aa: V99 = 0x42b
0x1ad: JUMP 0x42b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ae]
Exit stack: [V11, 0x1ae]

================================

Block 0x1ae
[0x1ae:0x1af]
---
Predecessors: [0x60d]
Successors: []
---
0x1ae JUMPDEST
0x1af STOP
---
0x1ae: JUMPDEST 
0x1af: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b0
[0x1b0:0x1b6]
---
Predecessors: [0x78]
Successors: [0x1b7, 0x1bb]
---
0x1b0 JUMPDEST
0x1b1 CALLVALUE
0x1b2 ISZERO
0x1b3 PUSH2 0x1bb
0x1b6 JUMPI
---
0x1b0: JUMPDEST 
0x1b1: V100 = CALLVALUE
0x1b2: V101 = ISZERO V100
0x1b3: V102 = 0x1bb
0x1b6: JUMPI 0x1bb V101
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b7
[0x1b7:0x1ba]
---
Predecessors: [0x1b0]
Successors: []
---
0x1b7 PUSH1 0x0
0x1b9 DUP1
0x1ba REVERT
---
0x1b7: V103 = 0x0
0x1ba: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bb
[0x1bb:0x1c2]
---
Predecessors: [0x1b0]
Successors: [0x61b]
---
0x1bb JUMPDEST
0x1bc PUSH2 0x1c3
0x1bf PUSH2 0x61b
0x1c2 JUMP
---
0x1bb: JUMPDEST 
0x1bc: V104 = 0x1c3
0x1bf: V105 = 0x61b
0x1c2: JUMP 0x61b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c3]
Exit stack: [V11, 0x1c3]

================================

Block 0x1c3
[0x1c3:0x204]
---
Predecessors: [0x61b]
Successors: []
---
0x1c3 JUMPDEST
0x1c4 PUSH1 0x40
0x1c6 MLOAD
0x1c7 DUP1
0x1c8 DUP3
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f4 AND
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa SWAP2
0x1fb POP
0x1fc POP
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 DUP1
0x201 SWAP2
0x202 SUB
0x203 SWAP1
0x204 RETURN
---
0x1c3: JUMPDEST 
0x1c4: V106 = 0x40
0x1c6: V107 = M[0x40]
0x1c9: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x1df: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1f6: M[V107] = V111
0x1f7: V112 = 0x20
0x1f9: V113 = ADD 0x20 V107
0x1fd: V114 = 0x40
0x1ff: V115 = M[0x40]
0x202: V116 = SUB V113 V115
0x204: RETURN V115 V116
---
Entry stack: [V11, 0x1c3, V357]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1c3]

================================

Block 0x205
[0x205:0x2d2]
---
Predecessors: [0x90]
Successors: [0x2d3, 0x2d7]
---
0x205 JUMPDEST
0x206 PUSH1 0x0
0x208 DUP3
0x209 SWAP1
0x20a POP
0x20b DUP1
0x20c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x221 AND
0x222 PUSH4 0xa9059cbb
0x227 PUSH1 0x1
0x229 PUSH1 0x0
0x22b SWAP1
0x22c SLOAD
0x22d SWAP1
0x22e PUSH2 0x100
0x231 EXP
0x232 SWAP1
0x233 DIV
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a DUP5
0x24b PUSH1 0x0
0x24d PUSH1 0x40
0x24f MLOAD
0x250 PUSH1 0x20
0x252 ADD
0x253 MSTORE
0x254 PUSH1 0x40
0x256 MLOAD
0x257 DUP4
0x258 PUSH4 0xffffffff
0x25d AND
0x25e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x27c MUL
0x27d DUP2
0x27e MSTORE
0x27f PUSH1 0x4
0x281 ADD
0x282 DUP1
0x283 DUP4
0x284 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x299 AND
0x29a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2af AND
0x2b0 DUP2
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 DUP3
0x2b6 DUP2
0x2b7 MSTORE
0x2b8 PUSH1 0x20
0x2ba ADD
0x2bb SWAP3
0x2bc POP
0x2bd POP
0x2be POP
0x2bf PUSH1 0x20
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 DUP1
0x2c5 DUP4
0x2c6 SUB
0x2c7 DUP2
0x2c8 PUSH1 0x0
0x2ca DUP8
0x2cb DUP1
0x2cc EXTCODESIZE
0x2cd ISZERO
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x205: JUMPDEST 
0x206: V117 = 0x0
0x20c: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x221: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x222: V120 = 0xa9059cbb
0x227: V121 = 0x1
0x229: V122 = 0x0
0x22c: V123 = S[0x1]
0x22e: V124 = 0x100
0x231: V125 = EXP 0x100 0x0
0x233: V126 = DIV V123 0x1
0x234: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x24b: V129 = 0x0
0x24d: V130 = 0x40
0x24f: V131 = M[0x40]
0x250: V132 = 0x20
0x252: V133 = ADD 0x20 V131
0x253: M[V133] = 0x0
0x254: V134 = 0x40
0x256: V135 = M[0x40]
0x258: V136 = 0xffffffff
0x25d: V137 = AND 0xffffffff 0xa9059cbb
0x25e: V138 = 0x100000000000000000000000000000000000000000000000000000000
0x27c: V139 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x27e: M[V135] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x27f: V140 = 0x4
0x281: V141 = ADD 0x4 V135
0x284: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x299: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x29a: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x2b1: M[V141] = V145
0x2b2: V146 = 0x20
0x2b4: V147 = ADD 0x20 V141
0x2b7: M[V147] = V44
0x2b8: V148 = 0x20
0x2ba: V149 = ADD 0x20 V147
0x2bf: V150 = 0x20
0x2c1: V151 = 0x40
0x2c3: V152 = M[0x40]
0x2c6: V153 = SUB V149 V152
0x2c8: V154 = 0x0
0x2cc: V155 = EXTCODESIZE V119
0x2cd: V156 = ISZERO V155
0x2ce: V157 = ISZERO V156
0x2cf: V158 = 0x2d7
0x2d2: JUMPI 0x2d7 V157
---
Entry stack: [V11, 0xc5, V41, V44]
Stack pops: 2
Stack additions: [S1, S0, S1, V119, 0xa9059cbb, V149, 0x20, V152, V153, V152, 0x0, V119]
Exit stack: [V11, 0xc5, V41, V44, V41, V119, 0xa9059cbb, V149, 0x20, V152, V153, V152, 0x0, V119]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x205]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V159 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc5, V41, V44, V41, V119, 0xa9059cbb, V149, 0x20, V152, V153, V152, 0x0, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc5, V41, V44, V41, V119, 0xa9059cbb, V149, 0x20, V152, V153, V152, 0x0, V119]

================================

Block 0x2d7
[0x2d7:0x2e3]
---
Predecessors: [0x205]
Successors: [0x2e4, 0x2e8]
---
0x2d7 JUMPDEST
0x2d8 PUSH2 0x2c6
0x2db GAS
0x2dc SUB
0x2dd CALL
0x2de ISZERO
0x2df ISZERO
0x2e0 PUSH2 0x2e8
0x2e3 JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V160 = 0x2c6
0x2db: V161 = GAS
0x2dc: V162 = SUB V161 0x2c6
0x2dd: V163 = CALL V162 V119 0x0 V152 V153 V152 0x20
0x2de: V164 = ISZERO V163
0x2df: V165 = ISZERO V164
0x2e0: V166 = 0x2e8
0x2e3: JUMPI 0x2e8 V165
---
Entry stack: [V11, 0xc5, V41, V44, V41, V119, 0xa9059cbb, V149, 0x20, V152, V153, V152, 0x0, V119]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xc5, V41, V44, V41, V119, 0xa9059cbb, V149]

================================

Block 0x2e4
[0x2e4:0x2e7]
---
Predecessors: [0x2d7]
Successors: []
---
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 REVERT
---
0x2e4: V167 = 0x0
0x2e7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc5, V41, V44, V41, V119, 0xa9059cbb, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc5, V41, V44, V41, V119, 0xa9059cbb, V149]

================================

Block 0x2e8
[0x2e8:0x2f7]
---
Predecessors: [0x2d7]
Successors: [0xc5]
---
0x2e8 JUMPDEST
0x2e9 POP
0x2ea POP
0x2eb POP
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef DUP1
0x2f0 MLOAD
0x2f1 SWAP1
0x2f2 POP
0x2f3 POP
0x2f4 POP
0x2f5 POP
0x2f6 POP
0x2f7 JUMP
---
0x2e8: JUMPDEST 
0x2ec: V168 = 0x40
0x2ee: V169 = M[0x40]
0x2f0: V170 = M[V169]
0x2f7: JUMP 0xc5
---
Entry stack: [V11, 0xc5, V41, V44, V41, V119, 0xa9059cbb, V149]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f8
[0x2f8:0x36c]
---
Predecessors: [0xd2]
Successors: [0x36d, 0x371]
---
0x2f8 JUMPDEST
0x2f9 PUSH1 0x1
0x2fb PUSH1 0x0
0x2fd SWAP1
0x2fe SLOAD
0x2ff SWAP1
0x300 PUSH2 0x100
0x303 EXP
0x304 SWAP1
0x305 DIV
0x306 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31b AND
0x31c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x331 AND
0x332 PUSH2 0x8fc
0x335 ADDRESS
0x336 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34b AND
0x34c BALANCE
0x34d SWAP1
0x34e DUP2
0x34f ISZERO
0x350 MUL
0x351 SWAP1
0x352 PUSH1 0x40
0x354 MLOAD
0x355 PUSH1 0x0
0x357 PUSH1 0x40
0x359 MLOAD
0x35a DUP1
0x35b DUP4
0x35c SUB
0x35d DUP2
0x35e DUP6
0x35f DUP9
0x360 DUP9
0x361 CALL
0x362 SWAP4
0x363 POP
0x364 POP
0x365 POP
0x366 POP
0x367 ISZERO
0x368 ISZERO
0x369 PUSH2 0x371
0x36c JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V171 = 0x1
0x2fb: V172 = 0x0
0x2fe: V173 = S[0x1]
0x300: V174 = 0x100
0x303: V175 = EXP 0x100 0x0
0x305: V176 = DIV V173 0x1
0x306: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x31c: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x331: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x332: V181 = 0x8fc
0x335: V182 = ADDRESS
0x336: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x34b: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x34c: V185 = BALANCE V184
0x34f: V186 = ISZERO V185
0x350: V187 = MUL V186 0x8fc
0x352: V188 = 0x40
0x354: V189 = M[0x40]
0x355: V190 = 0x0
0x357: V191 = 0x40
0x359: V192 = M[0x40]
0x35c: V193 = SUB V189 V192
0x361: V194 = CALL V187 V180 V185 V192 V193 V192 0x0
0x367: V195 = ISZERO V194
0x368: V196 = ISZERO V195
0x369: V197 = 0x371
0x36c: JUMPI 0x371 V196
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x36d
[0x36d:0x370]
---
Predecessors: [0x2f8]
Successors: []
---
0x36d PUSH1 0x0
0x36f DUP1
0x370 REVERT
---
0x36d: V198 = 0x0
0x370: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x371
[0x371:0x372]
---
Predecessors: [0x2f8]
Successors: [0xda]
---
0x371 JUMPDEST
0x372 JUMP
---
0x371: JUMPDEST 
0x372: JUMP 0xda
---
Entry stack: [V11, 0xda]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x373
[0x373:0x398]
---
Predecessors: [0xe7]
Successors: [0xef]
---
0x373 JUMPDEST
0x374 PUSH1 0x2
0x376 PUSH1 0x0
0x378 SWAP1
0x379 SLOAD
0x37a SWAP1
0x37b PUSH2 0x100
0x37e EXP
0x37f SWAP1
0x380 DIV
0x381 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x396 AND
0x397 DUP2
0x398 JUMP
---
0x373: JUMPDEST 
0x374: V199 = 0x2
0x376: V200 = 0x0
0x379: V201 = S[0x2]
0x37b: V202 = 0x100
0x37e: V203 = EXP 0x100 0x0
0x380: V204 = DIV V201 0x1
0x381: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x396: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x398: JUMP 0xef
---
Entry stack: [V11, 0xef]
Stack pops: 1
Stack additions: [S0, V206]
Exit stack: [V11, 0xef, V206]

================================

Block 0x399
[0x399:0x3be]
---
Predecessors: [0x13c]
Successors: [0x144]
---
0x399 JUMPDEST
0x39a PUSH1 0x1
0x39c PUSH1 0x0
0x39e SWAP1
0x39f SLOAD
0x3a0 SWAP1
0x3a1 PUSH2 0x100
0x3a4 EXP
0x3a5 SWAP1
0x3a6 DIV
0x3a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bc AND
0x3bd DUP2
0x3be JUMP
---
0x399: JUMPDEST 
0x39a: V207 = 0x1
0x39c: V208 = 0x0
0x39f: V209 = S[0x1]
0x3a1: V210 = 0x100
0x3a4: V211 = EXP 0x100 0x0
0x3a6: V212 = DIV V209 0x1
0x3a7: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bc: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x3be: JUMP 0x144
---
Entry stack: [V11, 0x144]
Stack pops: 1
Stack additions: [S0, V214]
Exit stack: [V11, 0x144, V214]

================================

Block 0x3bf
[0x3bf:0x42a]
---
Predecessors: [0x191]
Successors: [0x199]
---
0x3bf JUMPDEST
0x3c0 PUSH1 0x2
0x3c2 PUSH1 0x0
0x3c4 SWAP1
0x3c5 SLOAD
0x3c6 SWAP1
0x3c7 PUSH2 0x100
0x3ca EXP
0x3cb SWAP1
0x3cc DIV
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 AND
0x3f9 ADDRESS
0x3fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40f AND
0x410 BALANCE
0x411 PUSH1 0x40
0x413 MLOAD
0x414 PUSH1 0x0
0x416 PUSH1 0x40
0x418 MLOAD
0x419 DUP1
0x41a DUP4
0x41b SUB
0x41c DUP2
0x41d DUP6
0x41e DUP8
0x41f PUSH2 0x8796
0x422 GAS
0x423 SUB
0x424 CALL
0x425 SWAP3
0x426 POP
0x427 POP
0x428 POP
0x429 POP
0x42a JUMP
---
0x3bf: JUMPDEST 
0x3c0: V215 = 0x2
0x3c2: V216 = 0x0
0x3c5: V217 = S[0x2]
0x3c7: V218 = 0x100
0x3ca: V219 = EXP 0x100 0x0
0x3cc: V220 = DIV V217 0x1
0x3cd: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x3e3: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x3f9: V225 = ADDRESS
0x3fa: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x410: V228 = BALANCE V227
0x411: V229 = 0x40
0x413: V230 = M[0x40]
0x414: V231 = 0x0
0x416: V232 = 0x40
0x418: V233 = M[0x40]
0x41b: V234 = SUB V230 V233
0x41f: V235 = 0x8796
0x422: V236 = GAS
0x423: V237 = SUB V236 0x8796
0x424: V238 = CALL V237 V224 V228 V233 V234 V233 0x0
0x42a: JUMP 0x199
---
Entry stack: [V11, 0x199]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x42b
[0x42b:0x4ec]
---
Predecessors: [0x1a6]
Successors: [0x4ed, 0x4f1]
---
0x42b JUMPDEST
0x42c PUSH1 0x0
0x42e DUP1
0x42f PUSH1 0x0
0x431 SWAP1
0x432 SLOAD
0x433 SWAP1
0x434 PUSH2 0x100
0x437 EXP
0x438 SWAP1
0x439 DIV
0x43a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44f AND
0x450 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x465 AND
0x466 PUSH4 0x70a08231
0x46b ADDRESS
0x46c PUSH1 0x0
0x46e PUSH1 0x40
0x470 MLOAD
0x471 PUSH1 0x20
0x473 ADD
0x474 MSTORE
0x475 PUSH1 0x40
0x477 MLOAD
0x478 DUP3
0x479 PUSH4 0xffffffff
0x47e AND
0x47f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x49d MUL
0x49e DUP2
0x49f MSTORE
0x4a0 PUSH1 0x4
0x4a2 ADD
0x4a3 DUP1
0x4a4 DUP3
0x4a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ba AND
0x4bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d0 AND
0x4d1 DUP2
0x4d2 MSTORE
0x4d3 PUSH1 0x20
0x4d5 ADD
0x4d6 SWAP2
0x4d7 POP
0x4d8 POP
0x4d9 PUSH1 0x20
0x4db PUSH1 0x40
0x4dd MLOAD
0x4de DUP1
0x4df DUP4
0x4e0 SUB
0x4e1 DUP2
0x4e2 PUSH1 0x0
0x4e4 DUP8
0x4e5 DUP1
0x4e6 EXTCODESIZE
0x4e7 ISZERO
0x4e8 ISZERO
0x4e9 PUSH2 0x4f1
0x4ec JUMPI
---
0x42b: JUMPDEST 
0x42c: V239 = 0x0
0x42f: V240 = 0x0
0x432: V241 = S[0x0]
0x434: V242 = 0x100
0x437: V243 = EXP 0x100 0x0
0x439: V244 = DIV V241 0x1
0x43a: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x450: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x465: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x466: V249 = 0x70a08231
0x46b: V250 = ADDRESS
0x46c: V251 = 0x0
0x46e: V252 = 0x40
0x470: V253 = M[0x40]
0x471: V254 = 0x20
0x473: V255 = ADD 0x20 V253
0x474: M[V255] = 0x0
0x475: V256 = 0x40
0x477: V257 = M[0x40]
0x479: V258 = 0xffffffff
0x47e: V259 = AND 0xffffffff 0x70a08231
0x47f: V260 = 0x100000000000000000000000000000000000000000000000000000000
0x49d: V261 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x49f: M[V257] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4a0: V262 = 0x4
0x4a2: V263 = ADD 0x4 V257
0x4a5: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ba: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x4bb: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d0: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x4d2: M[V263] = V267
0x4d3: V268 = 0x20
0x4d5: V269 = ADD 0x20 V263
0x4d9: V270 = 0x20
0x4db: V271 = 0x40
0x4dd: V272 = M[0x40]
0x4e0: V273 = SUB V269 V272
0x4e2: V274 = 0x0
0x4e6: V275 = EXTCODESIZE V248
0x4e7: V276 = ISZERO V275
0x4e8: V277 = ISZERO V276
0x4e9: V278 = 0x4f1
0x4ec: JUMPI 0x4f1 V277
---
Entry stack: [V11, 0x1ae]
Stack pops: 0
Stack additions: [0x0, V248, 0x70a08231, V269, 0x20, V272, V273, V272, 0x0, V248]
Exit stack: [V11, 0x1ae, 0x0, V248, 0x70a08231, V269, 0x20, V272, V273, V272, 0x0, V248]

================================

Block 0x4ed
[0x4ed:0x4f0]
---
Predecessors: [0x42b]
Successors: []
---
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 REVERT
---
0x4ed: V279 = 0x0
0x4f0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ae, 0x0, V248, 0x70a08231, V269, 0x20, V272, V273, V272, 0x0, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ae, 0x0, V248, 0x70a08231, V269, 0x20, V272, V273, V272, 0x0, V248]

================================

Block 0x4f1
[0x4f1:0x4fd]
---
Predecessors: [0x42b]
Successors: [0x4fe, 0x502]
---
0x4f1 JUMPDEST
0x4f2 PUSH2 0x2c6
0x4f5 GAS
0x4f6 SUB
0x4f7 CALL
0x4f8 ISZERO
0x4f9 ISZERO
0x4fa PUSH2 0x502
0x4fd JUMPI
---
0x4f1: JUMPDEST 
0x4f2: V280 = 0x2c6
0x4f5: V281 = GAS
0x4f6: V282 = SUB V281 0x2c6
0x4f7: V283 = CALL V282 V248 0x0 V272 V273 V272 0x20
0x4f8: V284 = ISZERO V283
0x4f9: V285 = ISZERO V284
0x4fa: V286 = 0x502
0x4fd: JUMPI 0x502 V285
---
Entry stack: [V11, 0x1ae, 0x0, V248, 0x70a08231, V269, 0x20, V272, V273, V272, 0x0, V248]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1ae, 0x0, V248, 0x70a08231, V269]

================================

Block 0x4fe
[0x4fe:0x501]
---
Predecessors: [0x4f1]
Successors: []
---
0x4fe PUSH1 0x0
0x500 DUP1
0x501 REVERT
---
0x4fe: V287 = 0x0
0x501: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ae, 0x0, V248, 0x70a08231, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ae, 0x0, V248, 0x70a08231, V269]

================================

Block 0x502
[0x502:0x5f7]
---
Predecessors: [0x4f1]
Successors: [0x5f8, 0x5fc]
---
0x502 JUMPDEST
0x503 POP
0x504 POP
0x505 POP
0x506 PUSH1 0x40
0x508 MLOAD
0x509 DUP1
0x50a MLOAD
0x50b SWAP1
0x50c POP
0x50d SWAP1
0x50e POP
0x50f PUSH1 0x0
0x511 DUP1
0x512 SWAP1
0x513 SLOAD
0x514 SWAP1
0x515 PUSH2 0x100
0x518 EXP
0x519 SWAP1
0x51a DIV
0x51b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x530 AND
0x531 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x546 AND
0x547 PUSH4 0xa9059cbb
0x54c PUSH1 0x1
0x54e PUSH1 0x0
0x550 SWAP1
0x551 SLOAD
0x552 SWAP1
0x553 PUSH2 0x100
0x556 EXP
0x557 SWAP1
0x558 DIV
0x559 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56e AND
0x56f DUP4
0x570 PUSH1 0x0
0x572 PUSH1 0x40
0x574 MLOAD
0x575 PUSH1 0x20
0x577 ADD
0x578 MSTORE
0x579 PUSH1 0x40
0x57b MLOAD
0x57c DUP4
0x57d PUSH4 0xffffffff
0x582 AND
0x583 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5a1 MUL
0x5a2 DUP2
0x5a3 MSTORE
0x5a4 PUSH1 0x4
0x5a6 ADD
0x5a7 DUP1
0x5a8 DUP4
0x5a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5be AND
0x5bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d4 AND
0x5d5 DUP2
0x5d6 MSTORE
0x5d7 PUSH1 0x20
0x5d9 ADD
0x5da DUP3
0x5db DUP2
0x5dc MSTORE
0x5dd PUSH1 0x20
0x5df ADD
0x5e0 SWAP3
0x5e1 POP
0x5e2 POP
0x5e3 POP
0x5e4 PUSH1 0x20
0x5e6 PUSH1 0x40
0x5e8 MLOAD
0x5e9 DUP1
0x5ea DUP4
0x5eb SUB
0x5ec DUP2
0x5ed PUSH1 0x0
0x5ef DUP8
0x5f0 DUP1
0x5f1 EXTCODESIZE
0x5f2 ISZERO
0x5f3 ISZERO
0x5f4 PUSH2 0x5fc
0x5f7 JUMPI
---
0x502: JUMPDEST 
0x506: V288 = 0x40
0x508: V289 = M[0x40]
0x50a: V290 = M[V289]
0x50f: V291 = 0x0
0x513: V292 = S[0x0]
0x515: V293 = 0x100
0x518: V294 = EXP 0x100 0x0
0x51a: V295 = DIV V292 0x1
0x51b: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x530: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x531: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x546: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x547: V300 = 0xa9059cbb
0x54c: V301 = 0x1
0x54e: V302 = 0x0
0x551: V303 = S[0x1]
0x553: V304 = 0x100
0x556: V305 = EXP 0x100 0x0
0x558: V306 = DIV V303 0x1
0x559: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x56e: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x570: V309 = 0x0
0x572: V310 = 0x40
0x574: V311 = M[0x40]
0x575: V312 = 0x20
0x577: V313 = ADD 0x20 V311
0x578: M[V313] = 0x0
0x579: V314 = 0x40
0x57b: V315 = M[0x40]
0x57d: V316 = 0xffffffff
0x582: V317 = AND 0xffffffff 0xa9059cbb
0x583: V318 = 0x100000000000000000000000000000000000000000000000000000000
0x5a1: V319 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x5a3: M[V315] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5a4: V320 = 0x4
0x5a6: V321 = ADD 0x4 V315
0x5a9: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x5be: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x5bf: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d4: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x5d6: M[V321] = V325
0x5d7: V326 = 0x20
0x5d9: V327 = ADD 0x20 V321
0x5dc: M[V327] = V290
0x5dd: V328 = 0x20
0x5df: V329 = ADD 0x20 V327
0x5e4: V330 = 0x20
0x5e6: V331 = 0x40
0x5e8: V332 = M[0x40]
0x5eb: V333 = SUB V329 V332
0x5ed: V334 = 0x0
0x5f1: V335 = EXTCODESIZE V299
0x5f2: V336 = ISZERO V335
0x5f3: V337 = ISZERO V336
0x5f4: V338 = 0x5fc
0x5f7: JUMPI 0x5fc V337
---
Entry stack: [V11, 0x1ae, 0x0, V248, 0x70a08231, V269]
Stack pops: 4
Stack additions: [V290, V299, 0xa9059cbb, V329, 0x20, V332, V333, V332, 0x0, V299]
Exit stack: [V11, 0x1ae, V290, V299, 0xa9059cbb, V329, 0x20, V332, V333, V332, 0x0, V299]

================================

Block 0x5f8
[0x5f8:0x5fb]
---
Predecessors: [0x502]
Successors: []
---
0x5f8 PUSH1 0x0
0x5fa DUP1
0x5fb REVERT
---
0x5f8: V339 = 0x0
0x5fb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ae, V290, V299, 0xa9059cbb, V329, 0x20, V332, V333, V332, 0x0, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ae, V290, V299, 0xa9059cbb, V329, 0x20, V332, V333, V332, 0x0, V299]

================================

Block 0x5fc
[0x5fc:0x608]
---
Predecessors: [0x502]
Successors: [0x609, 0x60d]
---
0x5fc JUMPDEST
0x5fd PUSH2 0x2c6
0x600 GAS
0x601 SUB
0x602 CALL
0x603 ISZERO
0x604 ISZERO
0x605 PUSH2 0x60d
0x608 JUMPI
---
0x5fc: JUMPDEST 
0x5fd: V340 = 0x2c6
0x600: V341 = GAS
0x601: V342 = SUB V341 0x2c6
0x602: V343 = CALL V342 V299 0x0 V332 V333 V332 0x20
0x603: V344 = ISZERO V343
0x604: V345 = ISZERO V344
0x605: V346 = 0x60d
0x608: JUMPI 0x60d V345
---
Entry stack: [V11, 0x1ae, V290, V299, 0xa9059cbb, V329, 0x20, V332, V333, V332, 0x0, V299]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1ae, V290, V299, 0xa9059cbb, V329]

================================

Block 0x609
[0x609:0x60c]
---
Predecessors: [0x5fc]
Successors: []
---
0x609 PUSH1 0x0
0x60b DUP1
0x60c REVERT
---
0x609: V347 = 0x0
0x60c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ae, V290, V299, 0xa9059cbb, V329]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ae, V290, V299, 0xa9059cbb, V329]

================================

Block 0x60d
[0x60d:0x61a]
---
Predecessors: [0x5fc]
Successors: [0x1ae]
---
0x60d JUMPDEST
0x60e POP
0x60f POP
0x610 POP
0x611 PUSH1 0x40
0x613 MLOAD
0x614 DUP1
0x615 MLOAD
0x616 SWAP1
0x617 POP
0x618 POP
0x619 POP
0x61a JUMP
---
0x60d: JUMPDEST 
0x611: V348 = 0x40
0x613: V349 = M[0x40]
0x615: V350 = M[V349]
0x61a: JUMP 0x1ae
---
Entry stack: [V11, 0x1ae, V290, V299, 0xa9059cbb, V329]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x61b
[0x61b:0x63f]
---
Predecessors: [0x1bb]
Successors: [0x1c3]
---
0x61b JUMPDEST
0x61c PUSH1 0x0
0x61e DUP1
0x61f SWAP1
0x620 SLOAD
0x621 SWAP1
0x622 PUSH2 0x100
0x625 EXP
0x626 SWAP1
0x627 DIV
0x628 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63d AND
0x63e DUP2
0x63f JUMP
---
0x61b: JUMPDEST 
0x61c: V351 = 0x0
0x620: V352 = S[0x0]
0x622: V353 = 0x100
0x625: V354 = EXP 0x100 0x0
0x627: V355 = DIV V352 0x1
0x628: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x63d: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x63f: JUMP 0x1c3
---
Entry stack: [V11, 0x1c3]
Stack pops: 1
Stack additions: [S0, V357]
Exit stack: [V11, 0x1c3, V357]

================================

Block 0x640
[0x640:0x674]
---
Predecessors: []
Successors: []
---
0x640 STOP
0x641 LOG1
0x642 PUSH6 0x627a7a723058
0x649 SHA3
0x64a PUSH12 0x1d77b0c8f631692dd2f55874
0x657 MSTORE
0x658 MISSING 0xa6
0x659 MISSING 0x4a
0x65a MISSING 0xe3
0x65b MISSING 0xc6
0x65c BLOCKHASH
0x65d BYTE
0x65e DUP6
0x65f PUSH21 0x7082e6d4cbf2c8cc4d030029
---
0x640: STOP 
0x641: LOG S0 S1 S2
0x642: V358 = 0x627a7a723058
0x649: V359 = SHA3 0x627a7a723058 S3
0x64a: V360 = 0x1d77b0c8f631692dd2f55874
0x657: M[0x1d77b0c8f631692dd2f55874] = V359
0x658: MISSING 0xa6
0x659: MISSING 0x4a
0x65a: MISSING 0xe3
0x65b: MISSING 0xc6
0x65c: V361 = BLOCKHASH S0
0x65d: V362 = BYTE V361 S1
0x65f: V363 = 0x7082e6d4cbf2c8cc4d030029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x7082e6d4cbf2c8cc4d030029, S6, V362, S2, S3, S4, S5, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0x1eac4501
Entry block: 0x85
Exit block: 0xc5
Body: 0x85, 0x8c, 0x90, 0xc5, 0x205, 0x2d3, 0x2d7, 0x2e4, 0x2e8

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xc7
Exit block: 0xda
Body: 0xc7, 0xce, 0xd2, 0xda, 0x2f8, 0x36d, 0x371

Function 2:
Public function signature: 0x943dfef1
Entry block: 0xdc
Exit block: 0xef
Body: 0xdc, 0xe3, 0xe7, 0xef, 0x373

Function 3:
Public function signature: 0xca4b208b
Entry block: 0x131
Exit block: 0x144
Body: 0x131, 0x138, 0x13c, 0x144, 0x399

Function 4:
Public function signature: 0xccde6557
Entry block: 0x186
Exit block: 0x199
Body: 0x186, 0x18d, 0x191, 0x199, 0x3bf

Function 5:
Public function signature: 0xea98321e
Entry block: 0x19b
Exit block: 0x1ae
Body: 0x19b, 0x1a2, 0x1a6, 0x1ae, 0x42b, 0x4ed, 0x4f1, 0x4fe, 0x502, 0x5f8, 0x5fc, 0x609, 0x60d

Function 6:
Public function signature: 0xfc0c546a
Entry block: 0x1b0
Exit block: 0x1c3
Body: 0x1b0, 0x1b7, 0x1bb, 0x1c3, 0x61b

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

