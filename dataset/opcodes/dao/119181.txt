Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa9
0xa: JUMPI 0xa9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xf1]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2b68b9c6
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xf1
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2b68b9c6
0x20: V14 = EQ V12 0x2b68b9c6
0x21: V15 = 0xf1
0x24: JUMPI 0xf1 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x103]
---
0x25 DUP1
0x26 PUSH4 0x2e1a7d4d
0x2b EQ
0x2c PUSH2 0x103
0x2f JUMPI
---
0x26: V16 = 0x2e1a7d4d
0x2b: V17 = EQ 0x2e1a7d4d V12
0x2c: V18 = 0x103
0x2f: JUMPI 0x103 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x118]
---
0x30 DUP1
0x31 PUSH4 0x704b6c02
0x36 EQ
0x37 PUSH2 0x118
0x3a JUMPI
---
0x31: V19 = 0x704b6c02
0x36: V20 = EQ 0x704b6c02 V12
0x37: V21 = 0x118
0x3a: JUMPI 0x118 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x136]
---
0x3b DUP1
0x3c PUSH4 0x7826bfa8
0x41 EQ
0x42 PUSH2 0x136
0x45 JUMPI
---
0x3c: V22 = 0x7826bfa8
0x41: V23 = EQ 0x7826bfa8 V12
0x42: V24 = 0x136
0x45: JUMPI 0x136 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x162]
---
0x46 DUP1
0x47 PUSH4 0x79ba5097
0x4c EQ
0x4d PUSH2 0x162
0x50 JUMPI
---
0x47: V25 = 0x79ba5097
0x4c: V26 = EQ 0x79ba5097 V12
0x4d: V27 = 0x162
0x50: JUMPI 0x162 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x174]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x174
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x174
0x5b: JUMPI 0x174 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1a0]
---
0x5c DUP1
0x5d PUSH4 0x94081387
0x62 EQ
0x63 PUSH2 0x1a0
0x66 JUMPI
---
0x5d: V31 = 0x94081387
0x62: V32 = EQ 0x94081387 V12
0x63: V33 = 0x1a0
0x66: JUMPI 0x1a0 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1b5]
---
0x67 DUP1
0x68 PUSH4 0xb105126f
0x6d EQ
0x6e PUSH2 0x1b5
0x71 JUMPI
---
0x68: V34 = 0xb105126f
0x6d: V35 = EQ 0xb105126f V12
0x6e: V36 = 0x1b5
0x71: JUMPI 0x1b5 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1d3]
---
0x72 DUP1
0x73 PUSH4 0xb5ed298a
0x78 EQ
0x79 PUSH2 0x1d3
0x7c JUMPI
---
0x73: V37 = 0xb5ed298a
0x78: V38 = EQ 0xb5ed298a V12
0x79: V39 = 0x1d3
0x7c: JUMPI 0x1d3 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x1f1]
---
0x7d DUP1
0x7e PUSH4 0xd153b60c
0x83 EQ
0x84 PUSH2 0x1f1
0x87 JUMPI
---
0x7e: V40 = 0xd153b60c
0x83: V41 = EQ 0xd153b60c V12
0x84: V42 = 0x1f1
0x87: JUMPI 0x1f1 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x21d]
---
0x88 DUP1
0x89 PUSH4 0xe1a27ad3
0x8e EQ
0x8f PUSH2 0x21d
0x92 JUMPI
---
0x89: V43 = 0xe1a27ad3
0x8e: V44 = EQ 0xe1a27ad3 V12
0x8f: V45 = 0x21d
0x92: JUMPI 0x21d V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x241]
---
0x93 DUP1
0x94 PUSH4 0xf298083b
0x99 EQ
0x9a PUSH2 0x241
0x9d JUMPI
---
0x94: V46 = 0xf298083b
0x99: V47 = EQ 0xf298083b V12
0x9a: V48 = 0x241
0x9d: JUMPI 0x241 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x25f]
---
0x9e DUP1
0x9f PUSH4 0xf851a440
0xa4 EQ
0xa5 PUSH2 0x25f
0xa8 JUMPI
---
0x9f: V49 = 0xf851a440
0xa4: V50 = EQ 0xf851a440 V12
0xa5: V51 = 0x25f
0xa8: JUMPI 0x25f V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0x0, 0x9e]
Successors: [0xad]
---
0xa9 JUMPDEST
0xaa PUSH2 0xef
---
0xa9: JUMPDEST 
0xaa: V52 = 0xef
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0xad
[0xad:0xec]
---
Predecessors: [0xa9]
Successors: [0xed]
---
0xad JUMPDEST
0xae PUSH1 0x40
0xb0 DUP1
0xb1 MLOAD
0xb2 CALLVALUE
0xb3 DUP2
0xb4 MSTORE
0xb5 SWAP1
0xb6 MLOAD
0xb7 PUSH1 0x1
0xb9 PUSH1 0xa0
0xbb PUSH1 0x2
0xbd EXP
0xbe SUB
0xbf CALLER
0xc0 AND
0xc1 SWAP2
0xc2 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xe3 SWAP2
0xe4 SWAP1
0xe5 DUP2
0xe6 SWAP1
0xe7 SUB
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP1
0xec LOG2
---
0xad: JUMPDEST 
0xae: V53 = 0x40
0xb1: V54 = M[0x40]
0xb2: V55 = CALLVALUE
0xb4: M[V54] = V55
0xb6: V56 = M[0x40]
0xb7: V57 = 0x1
0xb9: V58 = 0xa0
0xbb: V59 = 0x2
0xbd: V60 = EXP 0x2 0xa0
0xbe: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf: V62 = CALLER
0xc0: V63 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xc2: V64 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xe7: V65 = SUB V54 V56
0xe8: V66 = 0x20
0xea: V67 = ADD 0x20 V65
0xec: LOG V56 V67 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V63
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0xed
[0xed:0xee]
---
Predecessors: [0xad]
Successors: [0xef]
---
0xed JUMPDEST
0xee JUMP
---
0xed: JUMPDEST 
0xee: JUMP 0xef
---
Entry stack: [V12, 0xef]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0xf0]
---
Predecessors: [0xed, 0x306, 0x342, 0x3ab, 0x41a, 0x4ca, 0x509, 0x63c]
Successors: []
---
0xef JUMPDEST
0xf0 STOP
---
0xef: JUMPDEST 
0xf0: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0xb]
Successors: [0xf8, 0xf9]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xf9
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V68 = CALLVALUE
0xf3: V69 = ISZERO V68
0xf4: V70 = 0xf9
0xf7: JUMPI 0xf9 V69
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0xf8]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 INVALID
---
0xf8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0xf1]
Successors: [0x28b]
---
0xf9 JUMPDEST
0xfa PUSH2 0xef
0xfd PUSH2 0x28b
0x100 JUMP
---
0xf9: JUMPDEST 
0xfa: V71 = 0xef
0xfd: V72 = 0x28b
0x100: JUMP 0x28b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0x101
[0x101:0x102]
---
Predecessors: []
Successors: []
---
0x101 JUMPDEST
0x102 STOP
---
0x101: JUMPDEST 
0x102: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x103
[0x103:0x109]
---
Predecessors: [0x25]
Successors: [0x10a, 0x10b]
---
0x103 JUMPDEST
0x104 CALLVALUE
0x105 ISZERO
0x106 PUSH2 0x10b
0x109 JUMPI
---
0x103: JUMPDEST 
0x104: V73 = CALLVALUE
0x105: V74 = ISZERO V73
0x106: V75 = 0x10b
0x109: JUMPI 0x10b V74
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10a
[0x10a:0x10a]
---
Predecessors: [0x103]
Successors: []
---
0x10a INVALID
---
0x10a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10b
[0x10b:0x115]
---
Predecessors: [0x103]
Successors: [0x2b8]
---
0x10b JUMPDEST
0x10c PUSH2 0xef
0x10f PUSH1 0x4
0x111 CALLDATALOAD
0x112 PUSH2 0x2b8
0x115 JUMP
---
0x10b: JUMPDEST 
0x10c: V76 = 0xef
0x10f: V77 = 0x4
0x111: V78 = CALLDATALOAD 0x4
0x112: V79 = 0x2b8
0x115: JUMP 0x2b8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V78]
Exit stack: [V12, 0xef, V78]

================================

Block 0x116
[0x116:0x117]
---
Predecessors: []
Successors: []
---
0x116 JUMPDEST
0x117 STOP
---
0x116: JUMPDEST 
0x117: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x118
[0x118:0x11e]
---
Predecessors: [0x30]
Successors: [0x11f, 0x120]
---
0x118 JUMPDEST
0x119 CALLVALUE
0x11a ISZERO
0x11b PUSH2 0x120
0x11e JUMPI
---
0x118: JUMPDEST 
0x119: V80 = CALLVALUE
0x11a: V81 = ISZERO V80
0x11b: V82 = 0x120
0x11e: JUMPI 0x120 V81
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11f
[0x11f:0x11f]
---
Predecessors: [0x118]
Successors: []
---
0x11f INVALID
---
0x11f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x120
[0x120:0x133]
---
Predecessors: [0x118]
Successors: [0x309]
---
0x120 JUMPDEST
0x121 PUSH2 0xef
0x124 PUSH1 0x1
0x126 PUSH1 0xa0
0x128 PUSH1 0x2
0x12a EXP
0x12b SUB
0x12c PUSH1 0x4
0x12e CALLDATALOAD
0x12f AND
0x130 PUSH2 0x309
0x133 JUMP
---
0x120: JUMPDEST 
0x121: V83 = 0xef
0x124: V84 = 0x1
0x126: V85 = 0xa0
0x128: V86 = 0x2
0x12a: V87 = EXP 0x2 0xa0
0x12b: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12c: V89 = 0x4
0x12e: V90 = CALLDATALOAD 0x4
0x12f: V91 = AND V90 0xffffffffffffffffffffffffffffffffffffffff
0x130: V92 = 0x309
0x133: JUMP 0x309
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V91]
Exit stack: [V12, 0xef, V91]

================================

Block 0x134
[0x134:0x135]
---
Predecessors: []
Successors: []
---
0x134 JUMPDEST
0x135 STOP
---
0x134: JUMPDEST 
0x135: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x136
[0x136:0x13c]
---
Predecessors: [0x3b]
Successors: [0x13d, 0x13e]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 ISZERO
0x139 PUSH2 0x13e
0x13c JUMPI
---
0x136: JUMPDEST 
0x137: V93 = CALLVALUE
0x138: V94 = ISZERO V93
0x139: V95 = 0x13e
0x13c: JUMPI 0x13e V94
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13d
[0x13d:0x13d]
---
Predecessors: [0x136]
Successors: []
---
0x13d INVALID
---
0x13d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x136]
Successors: [0x345]
---
0x13e JUMPDEST
0x13f PUSH2 0x146
0x142 PUSH2 0x345
0x145 JUMP
---
0x13e: JUMPDEST 
0x13f: V96 = 0x146
0x142: V97 = 0x345
0x145: JUMP 0x345
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x146]
Exit stack: [V12, 0x146]

================================

Block 0x146
[0x146:0x161]
---
Predecessors: [0x345, 0x3ad, 0x50c, 0x63f]
Successors: []
---
0x146 JUMPDEST
0x147 PUSH1 0x40
0x149 DUP1
0x14a MLOAD
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 SWAP1
0x154 SWAP3
0x155 AND
0x156 DUP3
0x157 MSTORE
0x158 MLOAD
0x159 SWAP1
0x15a DUP2
0x15b SWAP1
0x15c SUB
0x15d PUSH1 0x20
0x15f ADD
0x160 SWAP1
0x161 RETURN
---
0x146: JUMPDEST 
0x147: V98 = 0x40
0x14a: V99 = M[0x40]
0x14b: V100 = 0x1
0x14d: V101 = 0xa0
0x14f: V102 = 0x2
0x151: V103 = EXP 0x2 0xa0
0x152: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V105 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x157: M[V99] = V105
0x158: V106 = M[0x40]
0x15c: V107 = SUB V99 V106
0x15d: V108 = 0x20
0x15f: V109 = ADD 0x20 V107
0x161: RETURN V106 V109
---
Entry stack: [V12, 0x146, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x146]

================================

Block 0x162
[0x162:0x168]
---
Predecessors: [0x46]
Successors: [0x169, 0x16a]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 ISZERO
0x165 PUSH2 0x16a
0x168 JUMPI
---
0x162: JUMPDEST 
0x163: V110 = CALLVALUE
0x164: V111 = ISZERO V110
0x165: V112 = 0x16a
0x168: JUMPI 0x16a V111
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x169
[0x169:0x169]
---
Predecessors: [0x162]
Successors: []
---
0x169 INVALID
---
0x169: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x162]
Successors: [0x354]
---
0x16a JUMPDEST
0x16b PUSH2 0xef
0x16e PUSH2 0x354
0x171 JUMP
---
0x16a: JUMPDEST 
0x16b: V113 = 0xef
0x16e: V114 = 0x354
0x171: JUMP 0x354
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0x172
[0x172:0x173]
---
Predecessors: []
Successors: []
---
0x172 JUMPDEST
0x173 STOP
---
0x172: JUMPDEST 
0x173: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x174
[0x174:0x17a]
---
Predecessors: [0x51]
Successors: [0x17b, 0x17c]
---
0x174 JUMPDEST
0x175 CALLVALUE
0x176 ISZERO
0x177 PUSH2 0x17c
0x17a JUMPI
---
0x174: JUMPDEST 
0x175: V115 = CALLVALUE
0x176: V116 = ISZERO V115
0x177: V117 = 0x17c
0x17a: JUMPI 0x17c V116
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17b
[0x17b:0x17b]
---
Predecessors: [0x174]
Successors: []
---
0x17b INVALID
---
0x17b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17c
[0x17c:0x183]
---
Predecessors: [0x174]
Successors: [0x3ad]
---
0x17c JUMPDEST
0x17d PUSH2 0x146
0x180 PUSH2 0x3ad
0x183 JUMP
---
0x17c: JUMPDEST 
0x17d: V118 = 0x146
0x180: V119 = 0x3ad
0x183: JUMP 0x3ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x146]
Exit stack: [V12, 0x146]

================================

Block 0x184
[0x184:0x19f]
---
Predecessors: []
Successors: []
---
0x184 JUMPDEST
0x185 PUSH1 0x40
0x187 DUP1
0x188 MLOAD
0x189 PUSH1 0x1
0x18b PUSH1 0xa0
0x18d PUSH1 0x2
0x18f EXP
0x190 SUB
0x191 SWAP1
0x192 SWAP3
0x193 AND
0x194 DUP3
0x195 MSTORE
0x196 MLOAD
0x197 SWAP1
0x198 DUP2
0x199 SWAP1
0x19a SUB
0x19b PUSH1 0x20
0x19d ADD
0x19e SWAP1
0x19f RETURN
---
0x184: JUMPDEST 
0x185: V120 = 0x40
0x188: V121 = M[0x40]
0x189: V122 = 0x1
0x18b: V123 = 0xa0
0x18d: V124 = 0x2
0x18f: V125 = EXP 0x2 0xa0
0x190: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x193: V127 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x195: M[V121] = V127
0x196: V128 = M[0x40]
0x19a: V129 = SUB V121 V128
0x19b: V130 = 0x20
0x19d: V131 = ADD 0x20 V129
0x19f: RETURN V128 V131
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a0
[0x1a0:0x1a6]
---
Predecessors: [0x5c]
Successors: [0x1a7, 0x1a8]
---
0x1a0 JUMPDEST
0x1a1 CALLVALUE
0x1a2 ISZERO
0x1a3 PUSH2 0x1a8
0x1a6 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V132 = CALLVALUE
0x1a2: V133 = ISZERO V132
0x1a3: V134 = 0x1a8
0x1a6: JUMPI 0x1a8 V133
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a7
[0x1a7:0x1a7]
---
Predecessors: [0x1a0]
Successors: []
---
0x1a7 INVALID
---
0x1a7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a8
[0x1a8:0x1b2]
---
Predecessors: [0x1a0]
Successors: [0x3bc]
---
0x1a8 JUMPDEST
0x1a9 PUSH2 0xef
0x1ac PUSH1 0x4
0x1ae CALLDATALOAD
0x1af PUSH2 0x3bc
0x1b2 JUMP
---
0x1a8: JUMPDEST 
0x1a9: V135 = 0xef
0x1ac: V136 = 0x4
0x1ae: V137 = CALLDATALOAD 0x4
0x1af: V138 = 0x3bc
0x1b2: JUMP 0x3bc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V137]
Exit stack: [V12, 0xef, V137]

================================

Block 0x1b3
[0x1b3:0x1b4]
---
Predecessors: []
Successors: []
---
0x1b3 JUMPDEST
0x1b4 STOP
---
0x1b3: JUMPDEST 
0x1b4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1b5
[0x1b5:0x1bb]
---
Predecessors: [0x67]
Successors: [0x1bc, 0x1bd]
---
0x1b5 JUMPDEST
0x1b6 CALLVALUE
0x1b7 ISZERO
0x1b8 PUSH2 0x1bd
0x1bb JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V139 = CALLVALUE
0x1b7: V140 = ISZERO V139
0x1b8: V141 = 0x1bd
0x1bb: JUMPI 0x1bd V140
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bc
[0x1bc:0x1bc]
---
Predecessors: [0x1b5]
Successors: []
---
0x1bc INVALID
---
0x1bc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bd
[0x1bd:0x1d0]
---
Predecessors: [0x1b5]
Successors: [0x41d]
---
0x1bd JUMPDEST
0x1be PUSH2 0xef
0x1c1 PUSH1 0x4
0x1c3 CALLDATALOAD
0x1c4 PUSH1 0x24
0x1c6 CALLDATALOAD
0x1c7 PUSH1 0x44
0x1c9 CALLDATALOAD
0x1ca PUSH1 0x64
0x1cc CALLDATALOAD
0x1cd PUSH2 0x41d
0x1d0 JUMP
---
0x1bd: JUMPDEST 
0x1be: V142 = 0xef
0x1c1: V143 = 0x4
0x1c3: V144 = CALLDATALOAD 0x4
0x1c4: V145 = 0x24
0x1c6: V146 = CALLDATALOAD 0x24
0x1c7: V147 = 0x44
0x1c9: V148 = CALLDATALOAD 0x44
0x1ca: V149 = 0x64
0x1cc: V150 = CALLDATALOAD 0x64
0x1cd: V151 = 0x41d
0x1d0: JUMP 0x41d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V144, V146, V148, V150]
Exit stack: [V12, 0xef, V144, V146, V148, V150]

================================

Block 0x1d1
[0x1d1:0x1d2]
---
Predecessors: []
Successors: []
---
0x1d1 JUMPDEST
0x1d2 STOP
---
0x1d1: JUMPDEST 
0x1d2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d3
[0x1d3:0x1d9]
---
Predecessors: [0x72]
Successors: [0x1da, 0x1db]
---
0x1d3 JUMPDEST
0x1d4 CALLVALUE
0x1d5 ISZERO
0x1d6 PUSH2 0x1db
0x1d9 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V152 = CALLVALUE
0x1d5: V153 = ISZERO V152
0x1d6: V154 = 0x1db
0x1d9: JUMPI 0x1db V153
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1da
[0x1da:0x1da]
---
Predecessors: [0x1d3]
Successors: []
---
0x1da INVALID
---
0x1da: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1db
[0x1db:0x1ee]
---
Predecessors: [0x1d3]
Successors: [0x4d0]
---
0x1db JUMPDEST
0x1dc PUSH2 0xef
0x1df PUSH1 0x1
0x1e1 PUSH1 0xa0
0x1e3 PUSH1 0x2
0x1e5 EXP
0x1e6 SUB
0x1e7 PUSH1 0x4
0x1e9 CALLDATALOAD
0x1ea AND
0x1eb PUSH2 0x4d0
0x1ee JUMP
---
0x1db: JUMPDEST 
0x1dc: V155 = 0xef
0x1df: V156 = 0x1
0x1e1: V157 = 0xa0
0x1e3: V158 = 0x2
0x1e5: V159 = EXP 0x2 0xa0
0x1e6: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e7: V161 = 0x4
0x1e9: V162 = CALLDATALOAD 0x4
0x1ea: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x1eb: V164 = 0x4d0
0x1ee: JUMP 0x4d0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V163]
Exit stack: [V12, 0xef, V163]

================================

Block 0x1ef
[0x1ef:0x1f0]
---
Predecessors: []
Successors: []
---
0x1ef JUMPDEST
0x1f0 STOP
---
0x1ef: JUMPDEST 
0x1f0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f1
[0x1f1:0x1f7]
---
Predecessors: [0x7d]
Successors: [0x1f8, 0x1f9]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 ISZERO
0x1f4 PUSH2 0x1f9
0x1f7 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V165 = CALLVALUE
0x1f3: V166 = ISZERO V165
0x1f4: V167 = 0x1f9
0x1f7: JUMPI 0x1f9 V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f8
[0x1f8:0x1f8]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f8 INVALID
---
0x1f8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f9
[0x1f9:0x200]
---
Predecessors: [0x1f1]
Successors: [0x50c]
---
0x1f9 JUMPDEST
0x1fa PUSH2 0x146
0x1fd PUSH2 0x50c
0x200 JUMP
---
0x1f9: JUMPDEST 
0x1fa: V168 = 0x146
0x1fd: V169 = 0x50c
0x200: JUMP 0x50c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x146]
Exit stack: [V12, 0x146]

================================

Block 0x201
[0x201:0x21c]
---
Predecessors: []
Successors: []
---
0x201 JUMPDEST
0x202 PUSH1 0x40
0x204 DUP1
0x205 MLOAD
0x206 PUSH1 0x1
0x208 PUSH1 0xa0
0x20a PUSH1 0x2
0x20c EXP
0x20d SUB
0x20e SWAP1
0x20f SWAP3
0x210 AND
0x211 DUP3
0x212 MSTORE
0x213 MLOAD
0x214 SWAP1
0x215 DUP2
0x216 SWAP1
0x217 SUB
0x218 PUSH1 0x20
0x21a ADD
0x21b SWAP1
0x21c RETURN
---
0x201: JUMPDEST 
0x202: V170 = 0x40
0x205: V171 = M[0x40]
0x206: V172 = 0x1
0x208: V173 = 0xa0
0x20a: V174 = 0x2
0x20c: V175 = EXP 0x2 0xa0
0x20d: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x210: V177 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x212: M[V171] = V177
0x213: V178 = M[0x40]
0x217: V179 = SUB V171 V178
0x218: V180 = 0x20
0x21a: V181 = ADD 0x20 V179
0x21c: RETURN V178 V181
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x21d
[0x21d:0x223]
---
Predecessors: [0x88]
Successors: [0x224, 0x225]
---
0x21d JUMPDEST
0x21e CALLVALUE
0x21f ISZERO
0x220 PUSH2 0x225
0x223 JUMPI
---
0x21d: JUMPDEST 
0x21e: V182 = CALLVALUE
0x21f: V183 = ISZERO V182
0x220: V184 = 0x225
0x223: JUMPI 0x225 V183
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x224
[0x224:0x224]
---
Predecessors: [0x21d]
Successors: []
---
0x224 INVALID
---
0x224: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x225
[0x225:0x22c]
---
Predecessors: [0x21d]
Successors: [0x51b]
---
0x225 JUMPDEST
0x226 PUSH2 0x22d
0x229 PUSH2 0x51b
0x22c JUMP
---
0x225: JUMPDEST 
0x226: V185 = 0x22d
0x229: V186 = 0x51b
0x22c: JUMP 0x51b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22d]
Exit stack: [V12, 0x22d]

================================

Block 0x22d
[0x22d:0x240]
---
Predecessors: [0x600]
Successors: []
---
0x22d JUMPDEST
0x22e PUSH1 0x40
0x230 DUP1
0x231 MLOAD
0x232 SWAP2
0x233 ISZERO
0x234 ISZERO
0x235 DUP3
0x236 MSTORE
0x237 MLOAD
0x238 SWAP1
0x239 DUP2
0x23a SWAP1
0x23b SUB
0x23c PUSH1 0x20
0x23e ADD
0x23f SWAP1
0x240 RETURN
---
0x22d: JUMPDEST 
0x22e: V187 = 0x40
0x231: V188 = M[0x40]
0x233: V189 = ISZERO S0
0x234: V190 = ISZERO V189
0x236: M[V188] = V190
0x237: V191 = M[0x40]
0x23b: V192 = SUB V188 V191
0x23c: V193 = 0x20
0x23e: V194 = ADD 0x20 V192
0x240: RETURN V191 V194
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x241
[0x241:0x247]
---
Predecessors: [0x93]
Successors: [0x248, 0x249]
---
0x241 JUMPDEST
0x242 CALLVALUE
0x243 ISZERO
0x244 PUSH2 0x249
0x247 JUMPI
---
0x241: JUMPDEST 
0x242: V195 = CALLVALUE
0x243: V196 = ISZERO V195
0x244: V197 = 0x249
0x247: JUMPI 0x249 V196
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x248
[0x248:0x248]
---
Predecessors: [0x241]
Successors: []
---
0x248 INVALID
---
0x248: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x249
[0x249:0x25c]
---
Predecessors: [0x241]
Successors: [0x603]
---
0x249 JUMPDEST
0x24a PUSH2 0xef
0x24d PUSH1 0x1
0x24f PUSH1 0xa0
0x251 PUSH1 0x2
0x253 EXP
0x254 SUB
0x255 PUSH1 0x4
0x257 CALLDATALOAD
0x258 AND
0x259 PUSH2 0x603
0x25c JUMP
---
0x249: JUMPDEST 
0x24a: V198 = 0xef
0x24d: V199 = 0x1
0x24f: V200 = 0xa0
0x251: V201 = 0x2
0x253: V202 = EXP 0x2 0xa0
0x254: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x255: V204 = 0x4
0x257: V205 = CALLDATALOAD 0x4
0x258: V206 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x259: V207 = 0x603
0x25c: JUMP 0x603
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V206]
Exit stack: [V12, 0xef, V206]

================================

Block 0x25d
[0x25d:0x25e]
---
Predecessors: []
Successors: []
---
0x25d JUMPDEST
0x25e STOP
---
0x25d: JUMPDEST 
0x25e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x25f
[0x25f:0x265]
---
Predecessors: [0x9e]
Successors: [0x266, 0x267]
---
0x25f JUMPDEST
0x260 CALLVALUE
0x261 ISZERO
0x262 PUSH2 0x267
0x265 JUMPI
---
0x25f: JUMPDEST 
0x260: V208 = CALLVALUE
0x261: V209 = ISZERO V208
0x262: V210 = 0x267
0x265: JUMPI 0x267 V209
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x266
[0x266:0x266]
---
Predecessors: [0x25f]
Successors: []
---
0x266 INVALID
---
0x266: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x267
[0x267:0x26e]
---
Predecessors: [0x25f]
Successors: [0x63f]
---
0x267 JUMPDEST
0x268 PUSH2 0x146
0x26b PUSH2 0x63f
0x26e JUMP
---
0x267: JUMPDEST 
0x268: V211 = 0x146
0x26b: V212 = 0x63f
0x26e: JUMP 0x63f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x146]
Exit stack: [V12, 0x146]

================================

Block 0x26f
[0x26f:0x28a]
---
Predecessors: []
Successors: []
---
0x26f JUMPDEST
0x270 PUSH1 0x40
0x272 DUP1
0x273 MLOAD
0x274 PUSH1 0x1
0x276 PUSH1 0xa0
0x278 PUSH1 0x2
0x27a EXP
0x27b SUB
0x27c SWAP1
0x27d SWAP3
0x27e AND
0x27f DUP3
0x280 MSTORE
0x281 MLOAD
0x282 SWAP1
0x283 DUP2
0x284 SWAP1
0x285 SUB
0x286 PUSH1 0x20
0x288 ADD
0x289 SWAP1
0x28a RETURN
---
0x26f: JUMPDEST 
0x270: V213 = 0x40
0x273: V214 = M[0x40]
0x274: V215 = 0x1
0x276: V216 = 0xa0
0x278: V217 = 0x2
0x27a: V218 = EXP 0x2 0xa0
0x27b: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27e: V220 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x280: M[V214] = V220
0x281: V221 = M[0x40]
0x285: V222 = SUB V214 V221
0x286: V223 = 0x20
0x288: V224 = ADD 0x20 V222
0x28a: RETURN V221 V224
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28b
[0x28b:0x2a1]
---
Predecessors: [0xf9]
Successors: [0x2a2, 0x2a7]
---
0x28b JUMPDEST
0x28c PUSH1 0x0
0x28e SLOAD
0x28f CALLER
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 SWAP1
0x299 DUP2
0x29a AND
0x29b SWAP2
0x29c AND
0x29d EQ
0x29e PUSH2 0x2a7
0x2a1 JUMPI
---
0x28b: JUMPDEST 
0x28c: V225 = 0x0
0x28e: V226 = S[0x0]
0x28f: V227 = CALLER
0x290: V228 = 0x1
0x292: V229 = 0xa0
0x294: V230 = 0x2
0x296: V231 = EXP 0x2 0xa0
0x297: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29a: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x29c: V234 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V235 = EQ V234 V233
0x29e: V236 = 0x2a7
0x2a1: JUMPI 0x2a7 V235
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x2a2
[0x2a2:0x2a6]
---
Predecessors: [0x28b]
Successors: []
---
0x2a2 PUSH1 0x0
0x2a4 PUSH1 0x0
0x2a6 REVERT
---
0x2a2: V237 = 0x0
0x2a4: V238 = 0x0
0x2a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x2a7
[0x2a7:0x2b4]
---
Predecessors: [0x28b]
Successors: []
---
0x2a7 JUMPDEST
0x2a8 PUSH1 0x0
0x2aa SLOAD
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 AND
0x2b4 SELFDESTRUCT
---
0x2a7: JUMPDEST 
0x2a8: V239 = 0x0
0x2aa: V240 = S[0x0]
0x2ab: V241 = 0x1
0x2ad: V242 = 0xa0
0x2af: V243 = 0x2
0x2b1: V244 = EXP 0x2 0xa0
0x2b2: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x2b4: SELFDESTRUCT V246
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x2b5
[0x2b5:0x2b5]
---
Predecessors: []
Successors: [0x2b6]
---
0x2b5 JUMPDEST
---
0x2b5: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b6
[0x2b6:0x2b7]
---
Predecessors: [0x2b5]
Successors: []
Has unresolved jump.
---
0x2b6 JUMPDEST
0x2b7 JUMP
---
0x2b6: JUMPDEST 
0x2b7: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b8
[0x2b8:0x2ce]
---
Predecessors: [0x10b]
Successors: [0x2cf, 0x2d4]
---
0x2b8 JUMPDEST
0x2b9 PUSH1 0x0
0x2bb SLOAD
0x2bc CALLER
0x2bd PUSH1 0x1
0x2bf PUSH1 0xa0
0x2c1 PUSH1 0x2
0x2c3 EXP
0x2c4 SUB
0x2c5 SWAP1
0x2c6 DUP2
0x2c7 AND
0x2c8 SWAP2
0x2c9 AND
0x2ca EQ
0x2cb PUSH2 0x2d4
0x2ce JUMPI
---
0x2b8: JUMPDEST 
0x2b9: V247 = 0x0
0x2bb: V248 = S[0x0]
0x2bc: V249 = CALLER
0x2bd: V250 = 0x1
0x2bf: V251 = 0xa0
0x2c1: V252 = 0x2
0x2c3: V253 = EXP 0x2 0xa0
0x2c4: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c7: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x2c9: V256 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V257 = EQ V256 V255
0x2cb: V258 = 0x2d4
0x2ce: JUMPI 0x2d4 V257
---
Entry stack: [V12, 0xef, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V78]

================================

Block 0x2cf
[0x2cf:0x2d3]
---
Predecessors: [0x2b8]
Successors: []
---
0x2cf PUSH1 0x0
0x2d1 PUSH1 0x0
0x2d3 REVERT
---
0x2cf: V259 = 0x0
0x2d1: V260 = 0x0
0x2d3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V78]

================================

Block 0x2d4
[0x2d4:0x302]
---
Predecessors: [0x2b8]
Successors: [0x303, 0x304]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 SLOAD
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc PUSH1 0x1
0x2de PUSH1 0xa0
0x2e0 PUSH1 0x2
0x2e2 EXP
0x2e3 SUB
0x2e4 SWAP1
0x2e5 SWAP2
0x2e6 AND
0x2e7 SWAP2
0x2e8 DUP4
0x2e9 ISZERO
0x2ea PUSH2 0x8fc
0x2ed MUL
0x2ee SWAP2
0x2ef DUP5
0x2f0 SWAP2
0x2f1 DUP2
0x2f2 DUP2
0x2f3 DUP2
0x2f4 DUP6
0x2f5 DUP9
0x2f6 DUP9
0x2f7 CALL
0x2f8 SWAP4
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc POP
0x2fd ISZERO
0x2fe ISZERO
0x2ff PUSH2 0x304
0x302 JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V261 = 0x0
0x2d8: V262 = S[0x0]
0x2d9: V263 = 0x40
0x2db: V264 = M[0x40]
0x2dc: V265 = 0x1
0x2de: V266 = 0xa0
0x2e0: V267 = 0x2
0x2e2: V268 = EXP 0x2 0xa0
0x2e3: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e6: V270 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V271 = ISZERO V78
0x2ea: V272 = 0x8fc
0x2ed: V273 = MUL 0x8fc V271
0x2f7: V274 = CALL V273 V270 V78 V264 0x0 V264 0x0
0x2fd: V275 = ISZERO V274
0x2fe: V276 = ISZERO V275
0x2ff: V277 = 0x304
0x302: JUMPI 0x304 V276
---
Entry stack: [V12, 0xef, V78]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V78]

================================

Block 0x303
[0x303:0x303]
---
Predecessors: [0x2d4]
Successors: []
---
0x303 INVALID
---
0x303: INVALID 
---
Entry stack: [V12, 0xef, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V78]

================================

Block 0x304
[0x304:0x304]
---
Predecessors: [0x2d4]
Successors: [0x305]
---
0x304 JUMPDEST
---
0x304: JUMPDEST 
---
Entry stack: [V12, 0xef, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V78]

================================

Block 0x305
[0x305:0x305]
---
Predecessors: [0x304]
Successors: [0x306]
---
0x305 JUMPDEST
---
0x305: JUMPDEST 
---
Entry stack: [V12, 0xef, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V78]

================================

Block 0x306
[0x306:0x308]
---
Predecessors: [0x305]
Successors: [0xef]
---
0x306 JUMPDEST
0x307 POP
0x308 JUMP
---
0x306: JUMPDEST 
0x308: JUMP 0xef
---
Entry stack: [V12, 0xef, V78]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x309
[0x309:0x31f]
---
Predecessors: [0x120]
Successors: [0x320, 0x325]
---
0x309 JUMPDEST
0x30a PUSH1 0x0
0x30c SLOAD
0x30d CALLER
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 SWAP1
0x317 DUP2
0x318 AND
0x319 SWAP2
0x31a AND
0x31b EQ
0x31c PUSH2 0x325
0x31f JUMPI
---
0x309: JUMPDEST 
0x30a: V278 = 0x0
0x30c: V279 = S[0x0]
0x30d: V280 = CALLER
0x30e: V281 = 0x1
0x310: V282 = 0xa0
0x312: V283 = 0x2
0x314: V284 = EXP 0x2 0xa0
0x315: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x318: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x31a: V287 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V288 = EQ V287 V286
0x31c: V289 = 0x325
0x31f: JUMPI 0x325 V288
---
Entry stack: [V12, 0xef, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V91]

================================

Block 0x320
[0x320:0x324]
---
Predecessors: [0x309]
Successors: []
---
0x320 PUSH1 0x0
0x322 PUSH1 0x0
0x324 REVERT
---
0x320: V290 = 0x0
0x322: V291 = 0x0
0x324: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V91]

================================

Block 0x325
[0x325:0x340]
---
Predecessors: [0x309]
Successors: [0x341]
---
0x325 JUMPDEST
0x326 PUSH1 0x1
0x328 DUP1
0x329 SLOAD
0x32a PUSH1 0x1
0x32c PUSH1 0xa0
0x32e PUSH1 0x2
0x330 EXP
0x331 SUB
0x332 NOT
0x333 AND
0x334 PUSH1 0x1
0x336 PUSH1 0xa0
0x338 PUSH1 0x2
0x33a EXP
0x33b SUB
0x33c DUP4
0x33d AND
0x33e OR
0x33f SWAP1
0x340 SSTORE
---
0x325: JUMPDEST 
0x326: V292 = 0x1
0x329: V293 = S[0x1]
0x32a: V294 = 0x1
0x32c: V295 = 0xa0
0x32e: V296 = 0x2
0x330: V297 = EXP 0x2 0xa0
0x331: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x332: V299 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x333: V300 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V293
0x334: V301 = 0x1
0x336: V302 = 0xa0
0x338: V303 = 0x2
0x33a: V304 = EXP 0x2 0xa0
0x33b: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33d: V306 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x33e: V307 = OR V306 V300
0x340: S[0x1] = V307
---
Entry stack: [V12, 0xef, V91]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V91]

================================

Block 0x341
[0x341:0x341]
---
Predecessors: [0x325]
Successors: [0x342]
---
0x341 JUMPDEST
---
0x341: JUMPDEST 
---
Entry stack: [V12, 0xef, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V91]

================================

Block 0x342
[0x342:0x344]
---
Predecessors: [0x341]
Successors: [0xef]
---
0x342 JUMPDEST
0x343 POP
0x344 JUMP
---
0x342: JUMPDEST 
0x344: JUMP 0xef
---
Entry stack: [V12, 0xef, V91]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x345
[0x345:0x353]
---
Predecessors: [0x13e]
Successors: [0x146]
---
0x345 JUMPDEST
0x346 PUSH1 0x3
0x348 SLOAD
0x349 PUSH1 0x1
0x34b PUSH1 0xa0
0x34d PUSH1 0x2
0x34f EXP
0x350 SUB
0x351 AND
0x352 DUP2
0x353 JUMP
---
0x345: JUMPDEST 
0x346: V308 = 0x3
0x348: V309 = S[0x3]
0x349: V310 = 0x1
0x34b: V311 = 0xa0
0x34d: V312 = 0x2
0x34f: V313 = EXP 0x2 0xa0
0x350: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x351: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x353: JUMP 0x146
---
Entry stack: [V12, 0x146]
Stack pops: 1
Stack additions: [S0, V315]
Exit stack: [V12, 0x146, V315]

================================

Block 0x354
[0x354:0x366]
---
Predecessors: [0x16a]
Successors: [0x367, 0x36c]
---
0x354 JUMPDEST
0x355 PUSH1 0x2
0x357 SLOAD
0x358 PUSH1 0x1
0x35a PUSH1 0xa0
0x35c PUSH1 0x2
0x35e EXP
0x35f SUB
0x360 AND
0x361 ISZERO
0x362 ISZERO
0x363 PUSH2 0x36c
0x366 JUMPI
---
0x354: JUMPDEST 
0x355: V316 = 0x2
0x357: V317 = S[0x2]
0x358: V318 = 0x1
0x35a: V319 = 0xa0
0x35c: V320 = 0x2
0x35e: V321 = EXP 0x2 0xa0
0x35f: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x360: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x361: V324 = ISZERO V323
0x362: V325 = ISZERO V324
0x363: V326 = 0x36c
0x366: JUMPI 0x36c V325
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x367
[0x367:0x36b]
---
Predecessors: [0x354]
Successors: []
---
0x367 PUSH1 0x0
0x369 PUSH1 0x0
0x36b REVERT
---
0x367: V327 = 0x0
0x369: V328 = 0x0
0x36b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x36c
[0x36c:0x382]
---
Predecessors: [0x354]
Successors: [0x383, 0x388]
---
0x36c JUMPDEST
0x36d PUSH1 0x2
0x36f SLOAD
0x370 CALLER
0x371 PUSH1 0x1
0x373 PUSH1 0xa0
0x375 PUSH1 0x2
0x377 EXP
0x378 SUB
0x379 SWAP1
0x37a DUP2
0x37b AND
0x37c SWAP2
0x37d AND
0x37e EQ
0x37f PUSH2 0x388
0x382 JUMPI
---
0x36c: JUMPDEST 
0x36d: V329 = 0x2
0x36f: V330 = S[0x2]
0x370: V331 = CALLER
0x371: V332 = 0x1
0x373: V333 = 0xa0
0x375: V334 = 0x2
0x377: V335 = EXP 0x2 0xa0
0x378: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37b: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x37d: V338 = AND V330 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V339 = EQ V338 V337
0x37f: V340 = 0x388
0x382: JUMPI 0x388 V339
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x383
[0x383:0x387]
---
Predecessors: [0x36c]
Successors: []
---
0x383 PUSH1 0x0
0x385 PUSH1 0x0
0x387 REVERT
---
0x383: V341 = 0x0
0x385: V342 = 0x0
0x387: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x388
[0x388:0x3aa]
---
Predecessors: [0x36c]
Successors: [0x3ab]
---
0x388 JUMPDEST
0x389 PUSH1 0x2
0x38b SLOAD
0x38c PUSH1 0x0
0x38e DUP1
0x38f SLOAD
0x390 PUSH1 0x1
0x392 PUSH1 0xa0
0x394 PUSH1 0x2
0x396 EXP
0x397 SUB
0x398 NOT
0x399 AND
0x39a PUSH1 0x1
0x39c PUSH1 0xa0
0x39e PUSH1 0x2
0x3a0 EXP
0x3a1 SUB
0x3a2 SWAP1
0x3a3 SWAP3
0x3a4 AND
0x3a5 SWAP2
0x3a6 SWAP1
0x3a7 SWAP2
0x3a8 OR
0x3a9 SWAP1
0x3aa SSTORE
---
0x388: JUMPDEST 
0x389: V343 = 0x2
0x38b: V344 = S[0x2]
0x38c: V345 = 0x0
0x38f: V346 = S[0x0]
0x390: V347 = 0x1
0x392: V348 = 0xa0
0x394: V349 = 0x2
0x396: V350 = EXP 0x2 0xa0
0x397: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x398: V352 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x399: V353 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V346
0x39a: V354 = 0x1
0x39c: V355 = 0xa0
0x39e: V356 = 0x2
0x3a0: V357 = EXP 0x2 0xa0
0x3a1: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a4: V359 = AND V344 0xffffffffffffffffffffffffffffffffffffffff
0x3a8: V360 = OR V359 V353
0x3aa: S[0x0] = V360
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x3ab
[0x3ab:0x3ac]
---
Predecessors: [0x388]
Successors: [0xef]
---
0x3ab JUMPDEST
0x3ac JUMP
---
0x3ab: JUMPDEST 
0x3ac: JUMP 0xef
---
Entry stack: [V12, 0xef]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ad
[0x3ad:0x3bb]
---
Predecessors: [0x17c]
Successors: [0x146]
---
0x3ad JUMPDEST
0x3ae PUSH1 0x0
0x3b0 SLOAD
0x3b1 PUSH1 0x1
0x3b3 PUSH1 0xa0
0x3b5 PUSH1 0x2
0x3b7 EXP
0x3b8 SUB
0x3b9 AND
0x3ba DUP2
0x3bb JUMP
---
0x3ad: JUMPDEST 
0x3ae: V361 = 0x0
0x3b0: V362 = S[0x0]
0x3b1: V363 = 0x1
0x3b3: V364 = 0xa0
0x3b5: V365 = 0x2
0x3b7: V366 = EXP 0x2 0xa0
0x3b8: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b9: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x3bb: JUMP 0x146
---
Entry stack: [V12, 0x146]
Stack pops: 1
Stack additions: [S0, V368]
Exit stack: [V12, 0x146, V368]

================================

Block 0x3bc
[0x3bc:0x406]
---
Predecessors: [0x1a8]
Successors: [0x407, 0x408]
---
0x3bc JUMPDEST
0x3bd PUSH1 0x3
0x3bf SLOAD
0x3c0 PUSH1 0x40
0x3c2 DUP1
0x3c3 MLOAD
0x3c4 PUSH1 0xe0
0x3c6 PUSH1 0x2
0x3c8 EXP
0x3c9 PUSH4 0xea7f7a59
0x3ce MUL
0x3cf DUP2
0x3d0 MSTORE
0x3d1 PUSH1 0x4
0x3d3 DUP2
0x3d4 ADD
0x3d5 DUP5
0x3d6 SWAP1
0x3d7 MSTORE
0x3d8 SWAP1
0x3d9 MLOAD
0x3da PUSH1 0x1
0x3dc PUSH1 0xa0
0x3de PUSH1 0x2
0x3e0 EXP
0x3e1 SUB
0x3e2 SWAP1
0x3e3 SWAP3
0x3e4 AND
0x3e5 SWAP2
0x3e6 PUSH4 0xea7f7a59
0x3eb SWAP2
0x3ec PUSH1 0x24
0x3ee DUP1
0x3ef DUP3
0x3f0 ADD
0x3f1 SWAP3
0x3f2 PUSH1 0x0
0x3f4 SWAP3
0x3f5 SWAP1
0x3f6 SWAP2
0x3f7 SWAP1
0x3f8 DUP3
0x3f9 SWAP1
0x3fa SUB
0x3fb ADD
0x3fc DUP2
0x3fd DUP4
0x3fe DUP8
0x3ff DUP1
0x400 EXTCODESIZE
0x401 ISZERO
0x402 ISZERO
0x403 PUSH2 0x408
0x406 JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V369 = 0x3
0x3bf: V370 = S[0x3]
0x3c0: V371 = 0x40
0x3c3: V372 = M[0x40]
0x3c4: V373 = 0xe0
0x3c6: V374 = 0x2
0x3c8: V375 = EXP 0x2 0xe0
0x3c9: V376 = 0xea7f7a59
0x3ce: V377 = MUL 0xea7f7a59 0x100000000000000000000000000000000000000000000000000000000
0x3d0: M[V372] = 0xea7f7a5900000000000000000000000000000000000000000000000000000000
0x3d1: V378 = 0x4
0x3d4: V379 = ADD V372 0x4
0x3d7: M[V379] = V137
0x3d9: V380 = M[0x40]
0x3da: V381 = 0x1
0x3dc: V382 = 0xa0
0x3de: V383 = 0x2
0x3e0: V384 = EXP 0x2 0xa0
0x3e1: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e4: V386 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x3e6: V387 = 0xea7f7a59
0x3ec: V388 = 0x24
0x3f0: V389 = ADD V372 0x24
0x3f2: V390 = 0x0
0x3fa: V391 = SUB V372 V380
0x3fb: V392 = ADD V391 0x24
0x400: V393 = EXTCODESIZE V386
0x401: V394 = ISZERO V393
0x402: V395 = ISZERO V394
0x403: V396 = 0x408
0x406: JUMPI 0x408 V395
---
Entry stack: [V12, 0xef, V137]
Stack pops: 1
Stack additions: [S0, V386, 0xea7f7a59, V389, 0x0, V380, V392, V380, 0x0, V386]
Exit stack: [V12, 0xef, V137, V386, 0xea7f7a59, V389, 0x0, V380, V392, V380, 0x0, V386]

================================

Block 0x407
[0x407:0x407]
---
Predecessors: [0x3bc]
Successors: []
---
0x407 INVALID
---
0x407: INVALID 
---
Entry stack: [V12, 0xef, V137, V386, 0xea7f7a59, V389, 0x0, V380, V392, V380, 0x0, V386]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V137, V386, 0xea7f7a59, V389, 0x0, V380, V392, V380, 0x0, V386]

================================

Block 0x408
[0x408:0x414]
---
Predecessors: [0x3bc]
Successors: [0x415, 0x416]
---
0x408 JUMPDEST
0x409 PUSH2 0x2c6
0x40c GAS
0x40d SUB
0x40e CALL
0x40f ISZERO
0x410 ISZERO
0x411 PUSH2 0x416
0x414 JUMPI
---
0x408: JUMPDEST 
0x409: V397 = 0x2c6
0x40c: V398 = GAS
0x40d: V399 = SUB V398 0x2c6
0x40e: V400 = CALL V399 V386 0x0 V380 V392 V380 0x0
0x40f: V401 = ISZERO V400
0x410: V402 = ISZERO V401
0x411: V403 = 0x416
0x414: JUMPI 0x416 V402
---
Entry stack: [V12, 0xef, V137, V386, 0xea7f7a59, V389, 0x0, V380, V392, V380, 0x0, V386]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xef, V137, V386, 0xea7f7a59, V389]

================================

Block 0x415
[0x415:0x415]
---
Predecessors: [0x408]
Successors: []
---
0x415 INVALID
---
0x415: INVALID 
---
Entry stack: [V12, 0xef, V137, V386, 0xea7f7a59, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V137, V386, 0xea7f7a59, V389]

================================

Block 0x416
[0x416:0x419]
---
Predecessors: [0x408]
Successors: [0x41a]
---
0x416 JUMPDEST
0x417 POP
0x418 POP
0x419 POP
---
0x416: JUMPDEST 
---
Entry stack: [V12, 0xef, V137, V386, 0xea7f7a59, V389]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xef, V137]

================================

Block 0x41a
[0x41a:0x41c]
---
Predecessors: [0x416]
Successors: [0xef]
---
0x41a JUMPDEST
0x41b POP
0x41c JUMP
---
0x41a: JUMPDEST 
0x41c: JUMP 0xef
---
Entry stack: [V12, 0xef, V137]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x41d
[0x41d:0x434]
---
Predecessors: [0x1bd]
Successors: [0x435, 0x448]
---
0x41d JUMPDEST
0x41e PUSH1 0x0
0x420 SLOAD
0x421 CALLER
0x422 PUSH1 0x1
0x424 PUSH1 0xa0
0x426 PUSH1 0x2
0x428 EXP
0x429 SUB
0x42a SWAP1
0x42b DUP2
0x42c AND
0x42d SWAP2
0x42e AND
0x42f EQ
0x430 DUP1
0x431 PUSH2 0x448
0x434 JUMPI
---
0x41d: JUMPDEST 
0x41e: V404 = 0x0
0x420: V405 = S[0x0]
0x421: V406 = CALLER
0x422: V407 = 0x1
0x424: V408 = 0xa0
0x426: V409 = 0x2
0x428: V410 = EXP 0x2 0xa0
0x429: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42c: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x42e: V413 = AND V405 0xffffffffffffffffffffffffffffffffffffffff
0x42f: V414 = EQ V413 V412
0x431: V415 = 0x448
0x434: JUMPI 0x448 V414
---
Entry stack: [V12, 0xef, V144, V146, V148, V150]
Stack pops: 0
Stack additions: [V414]
Exit stack: [V12, 0xef, V144, V146, V148, V150, V414]

================================

Block 0x435
[0x435:0x447]
---
Predecessors: [0x41d]
Successors: [0x448]
---
0x435 POP
0x436 PUSH1 0x1
0x438 SLOAD
0x439 CALLER
0x43a PUSH1 0x1
0x43c PUSH1 0xa0
0x43e PUSH1 0x2
0x440 EXP
0x441 SUB
0x442 SWAP1
0x443 DUP2
0x444 AND
0x445 SWAP2
0x446 AND
0x447 EQ
---
0x436: V416 = 0x1
0x438: V417 = S[0x1]
0x439: V418 = CALLER
0x43a: V419 = 0x1
0x43c: V420 = 0xa0
0x43e: V421 = 0x2
0x440: V422 = EXP 0x2 0xa0
0x441: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x444: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x446: V425 = AND V417 0xffffffffffffffffffffffffffffffffffffffff
0x447: V426 = EQ V425 V424
---
Entry stack: [V12, 0xef, V144, V146, V148, V150, V414]
Stack pops: 1
Stack additions: [V426]
Exit stack: [V12, 0xef, V144, V146, V148, V150, V426]

================================

Block 0x448
[0x448:0x44e]
---
Predecessors: [0x41d, 0x435]
Successors: [0x44f, 0x454]
---
0x448 JUMPDEST
0x449 ISZERO
0x44a ISZERO
0x44b PUSH2 0x454
0x44e JUMPI
---
0x448: JUMPDEST 
0x449: V427 = ISZERO S0
0x44a: V428 = ISZERO V427
0x44b: V429 = 0x454
0x44e: JUMPI 0x454 V428
---
Entry stack: [V12, 0xef, V144, V146, V148, V150, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef, V144, V146, V148, V150]

================================

Block 0x44f
[0x44f:0x453]
---
Predecessors: [0x448]
Successors: []
---
0x44f PUSH1 0x0
0x451 PUSH1 0x0
0x453 REVERT
---
0x44f: V430 = 0x0
0x451: V431 = 0x0
0x453: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V144, V146, V148, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V144, V146, V148, V150]

================================

Block 0x454
[0x454:0x4b4]
---
Predecessors: [0x448]
Successors: [0x4b5, 0x4b6]
---
0x454 JUMPDEST
0x455 PUSH1 0x3
0x457 SLOAD
0x458 PUSH1 0x40
0x45a DUP1
0x45b MLOAD
0x45c PUSH1 0xe0
0x45e PUSH1 0x2
0x460 EXP
0x461 PUSH4 0xb105126f
0x466 MUL
0x467 DUP2
0x468 MSTORE
0x469 PUSH1 0x4
0x46b DUP2
0x46c ADD
0x46d DUP8
0x46e SWAP1
0x46f MSTORE
0x470 PUSH1 0x24
0x472 DUP2
0x473 ADD
0x474 DUP7
0x475 SWAP1
0x476 MSTORE
0x477 PUSH1 0x44
0x479 DUP2
0x47a ADD
0x47b DUP6
0x47c SWAP1
0x47d MSTORE
0x47e PUSH1 0x64
0x480 DUP2
0x481 ADD
0x482 DUP5
0x483 SWAP1
0x484 MSTORE
0x485 SWAP1
0x486 MLOAD
0x487 PUSH1 0x1
0x489 PUSH1 0xa0
0x48b PUSH1 0x2
0x48d EXP
0x48e SUB
0x48f SWAP1
0x490 SWAP3
0x491 AND
0x492 SWAP2
0x493 PUSH4 0xb105126f
0x498 SWAP2
0x499 DUP8
0x49a SWAP2
0x49b PUSH1 0x84
0x49d DUP1
0x49e DUP4
0x49f ADD
0x4a0 SWAP3
0x4a1 PUSH1 0x0
0x4a3 SWAP3
0x4a4 SWAP2
0x4a5 SWAP1
0x4a6 DUP3
0x4a7 SWAP1
0x4a8 SUB
0x4a9 ADD
0x4aa DUP2
0x4ab DUP6
0x4ac DUP9
0x4ad DUP1
0x4ae EXTCODESIZE
0x4af ISZERO
0x4b0 ISZERO
0x4b1 PUSH2 0x4b6
0x4b4 JUMPI
---
0x454: JUMPDEST 
0x455: V432 = 0x3
0x457: V433 = S[0x3]
0x458: V434 = 0x40
0x45b: V435 = M[0x40]
0x45c: V436 = 0xe0
0x45e: V437 = 0x2
0x460: V438 = EXP 0x2 0xe0
0x461: V439 = 0xb105126f
0x466: V440 = MUL 0xb105126f 0x100000000000000000000000000000000000000000000000000000000
0x468: M[V435] = 0xb105126f00000000000000000000000000000000000000000000000000000000
0x469: V441 = 0x4
0x46c: V442 = ADD V435 0x4
0x46f: M[V442] = V144
0x470: V443 = 0x24
0x473: V444 = ADD V435 0x24
0x476: M[V444] = V146
0x477: V445 = 0x44
0x47a: V446 = ADD V435 0x44
0x47d: M[V446] = V148
0x47e: V447 = 0x64
0x481: V448 = ADD V435 0x64
0x484: M[V448] = V150
0x486: V449 = M[0x40]
0x487: V450 = 0x1
0x489: V451 = 0xa0
0x48b: V452 = 0x2
0x48d: V453 = EXP 0x2 0xa0
0x48e: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x491: V455 = AND V433 0xffffffffffffffffffffffffffffffffffffffff
0x493: V456 = 0xb105126f
0x49b: V457 = 0x84
0x49f: V458 = ADD V435 0x84
0x4a1: V459 = 0x0
0x4a8: V460 = SUB V435 V449
0x4a9: V461 = ADD V460 0x84
0x4ae: V462 = EXTCODESIZE V455
0x4af: V463 = ISZERO V462
0x4b0: V464 = ISZERO V463
0x4b1: V465 = 0x4b6
0x4b4: JUMPI 0x4b6 V464
---
Entry stack: [V12, 0xef, V144, V146, V148, V150]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V455, 0xb105126f, S3, V458, 0x0, V449, V461, V449, S3, V455]
Exit stack: [V12, 0xef, V144, V146, V148, V150, V455, 0xb105126f, V144, V458, 0x0, V449, V461, V449, V144, V455]

================================

Block 0x4b5
[0x4b5:0x4b5]
---
Predecessors: [0x454]
Successors: []
---
0x4b5 INVALID
---
0x4b5: INVALID 
---
Entry stack: [V12, 0xef, V144, V146, V148, V150, V455, 0xb105126f, V144, V458, 0x0, V449, V461, V449, V144, V455]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V144, V146, V148, V150, V455, 0xb105126f, V144, V458, 0x0, V449, V461, V449, V144, V455]

================================

Block 0x4b6
[0x4b6:0x4c2]
---
Predecessors: [0x454]
Successors: [0x4c3, 0x4c4]
---
0x4b6 JUMPDEST
0x4b7 PUSH2 0x25ee
0x4ba GAS
0x4bb SUB
0x4bc CALL
0x4bd ISZERO
0x4be ISZERO
0x4bf PUSH2 0x4c4
0x4c2 JUMPI
---
0x4b6: JUMPDEST 
0x4b7: V466 = 0x25ee
0x4ba: V467 = GAS
0x4bb: V468 = SUB V467 0x25ee
0x4bc: V469 = CALL V468 V455 V144 V449 V461 V449 0x0
0x4bd: V470 = ISZERO V469
0x4be: V471 = ISZERO V470
0x4bf: V472 = 0x4c4
0x4c2: JUMPI 0x4c4 V471
---
Entry stack: [V12, 0xef, V144, V146, V148, V150, V455, 0xb105126f, V144, V458, 0x0, V449, V461, V449, V144, V455]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xef, V144, V146, V148, V150, V455, 0xb105126f, V144, V458]

================================

Block 0x4c3
[0x4c3:0x4c3]
---
Predecessors: [0x4b6]
Successors: []
---
0x4c3 INVALID
---
0x4c3: INVALID 
---
Entry stack: [V12, 0xef, V144, V146, V148, V150, V455, 0xb105126f, V144, V458]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V144, V146, V148, V150, V455, 0xb105126f, V144, V458]

================================

Block 0x4c4
[0x4c4:0x4c8]
---
Predecessors: [0x4b6]
Successors: [0x4c9]
---
0x4c4 JUMPDEST
0x4c5 POP
0x4c6 POP
0x4c7 POP
0x4c8 POP
---
0x4c4: JUMPDEST 
---
Entry stack: [V12, 0xef, V144, V146, V148, V150, V455, 0xb105126f, V144, V458]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xef, V144, V146, V148, V150]

================================

Block 0x4c9
[0x4c9:0x4c9]
---
Predecessors: [0x4c4]
Successors: [0x4ca]
---
0x4c9 JUMPDEST
---
0x4c9: JUMPDEST 
---
Entry stack: [V12, 0xef, V144, V146, V148, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V144, V146, V148, V150]

================================

Block 0x4ca
[0x4ca:0x4cf]
---
Predecessors: [0x4c9]
Successors: [0xef]
---
0x4ca JUMPDEST
0x4cb POP
0x4cc POP
0x4cd POP
0x4ce POP
0x4cf JUMP
---
0x4ca: JUMPDEST 
0x4cf: JUMP 0xef
---
Entry stack: [V12, 0xef, V144, V146, V148, V150]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d0
[0x4d0:0x4e6]
---
Predecessors: [0x1db]
Successors: [0x4e7, 0x4ec]
---
0x4d0 JUMPDEST
0x4d1 PUSH1 0x0
0x4d3 SLOAD
0x4d4 CALLER
0x4d5 PUSH1 0x1
0x4d7 PUSH1 0xa0
0x4d9 PUSH1 0x2
0x4db EXP
0x4dc SUB
0x4dd SWAP1
0x4de DUP2
0x4df AND
0x4e0 SWAP2
0x4e1 AND
0x4e2 EQ
0x4e3 PUSH2 0x4ec
0x4e6 JUMPI
---
0x4d0: JUMPDEST 
0x4d1: V473 = 0x0
0x4d3: V474 = S[0x0]
0x4d4: V475 = CALLER
0x4d5: V476 = 0x1
0x4d7: V477 = 0xa0
0x4d9: V478 = 0x2
0x4db: V479 = EXP 0x2 0xa0
0x4dc: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4df: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V475
0x4e1: V482 = AND V474 0xffffffffffffffffffffffffffffffffffffffff
0x4e2: V483 = EQ V482 V481
0x4e3: V484 = 0x4ec
0x4e6: JUMPI 0x4ec V483
---
Entry stack: [V12, 0xef, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V163]

================================

Block 0x4e7
[0x4e7:0x4eb]
---
Predecessors: [0x4d0]
Successors: []
---
0x4e7 PUSH1 0x0
0x4e9 PUSH1 0x0
0x4eb REVERT
---
0x4e7: V485 = 0x0
0x4e9: V486 = 0x0
0x4eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V163]

================================

Block 0x4ec
[0x4ec:0x507]
---
Predecessors: [0x4d0]
Successors: [0x508]
---
0x4ec JUMPDEST
0x4ed PUSH1 0x2
0x4ef DUP1
0x4f0 SLOAD
0x4f1 PUSH1 0x1
0x4f3 PUSH1 0xa0
0x4f5 PUSH1 0x2
0x4f7 EXP
0x4f8 SUB
0x4f9 NOT
0x4fa AND
0x4fb PUSH1 0x1
0x4fd PUSH1 0xa0
0x4ff PUSH1 0x2
0x501 EXP
0x502 SUB
0x503 DUP4
0x504 AND
0x505 OR
0x506 SWAP1
0x507 SSTORE
---
0x4ec: JUMPDEST 
0x4ed: V487 = 0x2
0x4f0: V488 = S[0x2]
0x4f1: V489 = 0x1
0x4f3: V490 = 0xa0
0x4f5: V491 = 0x2
0x4f7: V492 = EXP 0x2 0xa0
0x4f8: V493 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f9: V494 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V495 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V488
0x4fb: V496 = 0x1
0x4fd: V497 = 0xa0
0x4ff: V498 = 0x2
0x501: V499 = EXP 0x2 0xa0
0x502: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x504: V501 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x505: V502 = OR V501 V495
0x507: S[0x2] = V502
---
Entry stack: [V12, 0xef, V163]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V163]

================================

Block 0x508
[0x508:0x508]
---
Predecessors: [0x4ec]
Successors: [0x509]
---
0x508 JUMPDEST
---
0x508: JUMPDEST 
---
Entry stack: [V12, 0xef, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V163]

================================

Block 0x509
[0x509:0x50b]
---
Predecessors: [0x508]
Successors: [0xef]
---
0x509 JUMPDEST
0x50a POP
0x50b JUMP
---
0x509: JUMPDEST 
0x50b: JUMP 0xef
---
Entry stack: [V12, 0xef, V163]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x50c
[0x50c:0x51a]
---
Predecessors: [0x1f9]
Successors: [0x146]
---
0x50c JUMPDEST
0x50d PUSH1 0x2
0x50f SLOAD
0x510 PUSH1 0x1
0x512 PUSH1 0xa0
0x514 PUSH1 0x2
0x516 EXP
0x517 SUB
0x518 AND
0x519 DUP2
0x51a JUMP
---
0x50c: JUMPDEST 
0x50d: V503 = 0x2
0x50f: V504 = S[0x2]
0x510: V505 = 0x1
0x512: V506 = 0xa0
0x514: V507 = 0x2
0x516: V508 = EXP 0x2 0xa0
0x517: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x518: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x51a: JUMP 0x146
---
Entry stack: [V12, 0x146]
Stack pops: 1
Stack additions: [S0, V510]
Exit stack: [V12, 0x146, V510]

================================

Block 0x51b
[0x51b:0x569]
---
Predecessors: [0x225]
Successors: [0x56a, 0x56b]
---
0x51b JUMPDEST
0x51c PUSH1 0x3
0x51e SLOAD
0x51f PUSH1 0x40
0x521 DUP1
0x522 MLOAD
0x523 PUSH1 0x0
0x525 PUSH1 0x20
0x527 SWAP2
0x528 DUP3
0x529 ADD
0x52a DUP2
0x52b SWAP1
0x52c MSTORE
0x52d DUP3
0x52e MLOAD
0x52f PUSH1 0xe6
0x531 PUSH1 0x2
0x533 EXP
0x534 PUSH4 0x3e14691
0x539 MUL
0x53a DUP2
0x53b MSTORE
0x53c SWAP3
0x53d MLOAD
0x53e SWAP1
0x53f SWAP4
0x540 PUSH1 0x1
0x542 PUSH1 0xa0
0x544 PUSH1 0x2
0x546 EXP
0x547 SUB
0x548 ADDRESS
0x549 DUP2
0x54a AND
0x54b SWAP5
0x54c SWAP2
0x54d AND
0x54e SWAP3
0x54f PUSH4 0xf851a440
0x554 SWAP3
0x555 PUSH1 0x4
0x557 DUP1
0x558 DUP5
0x559 ADD
0x55a SWAP4
0x55b DUP3
0x55c SWAP1
0x55d SUB
0x55e ADD
0x55f DUP2
0x560 DUP9
0x561 DUP8
0x562 DUP1
0x563 EXTCODESIZE
0x564 ISZERO
0x565 ISZERO
0x566 PUSH2 0x56b
0x569 JUMPI
---
0x51b: JUMPDEST 
0x51c: V511 = 0x3
0x51e: V512 = S[0x3]
0x51f: V513 = 0x40
0x522: V514 = M[0x40]
0x523: V515 = 0x0
0x525: V516 = 0x20
0x529: V517 = ADD 0x20 V514
0x52c: M[V517] = 0x0
0x52e: V518 = M[0x40]
0x52f: V519 = 0xe6
0x531: V520 = 0x2
0x533: V521 = EXP 0x2 0xe6
0x534: V522 = 0x3e14691
0x539: V523 = MUL 0x3e14691 0x4000000000000000000000000000000000000000000000000000000000
0x53b: M[V518] = 0xf851a44000000000000000000000000000000000000000000000000000000000
0x53d: V524 = M[0x40]
0x540: V525 = 0x1
0x542: V526 = 0xa0
0x544: V527 = 0x2
0x546: V528 = EXP 0x2 0xa0
0x547: V529 = SUB 0x10000000000000000000000000000000000000000 0x1
0x548: V530 = ADDRESS
0x54a: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x54d: V532 = AND V512 0xffffffffffffffffffffffffffffffffffffffff
0x54f: V533 = 0xf851a440
0x555: V534 = 0x4
0x559: V535 = ADD V518 0x4
0x55d: V536 = SUB V518 V524
0x55e: V537 = ADD V536 0x4
0x563: V538 = EXTCODESIZE V532
0x564: V539 = ISZERO V538
0x565: V540 = ISZERO V539
0x566: V541 = 0x56b
0x569: JUMPI 0x56b V540
---
Entry stack: [V12, 0x22d]
Stack pops: 0
Stack additions: [0x0, V531, V532, 0xf851a440, V535, 0x20, V524, V537, V524, 0x0, V532]
Exit stack: [V12, 0x22d, 0x0, V531, V532, 0xf851a440, V535, 0x20, V524, V537, V524, 0x0, V532]

================================

Block 0x56a
[0x56a:0x56a]
---
Predecessors: [0x51b]
Successors: []
---
0x56a INVALID
---
0x56a: INVALID 
---
Entry stack: [V12, 0x22d, 0x0, V531, V532, 0xf851a440, V535, 0x20, V524, V537, V524, 0x0, V532]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22d, 0x0, V531, V532, 0xf851a440, V535, 0x20, V524, V537, V524, 0x0, V532]

================================

Block 0x56b
[0x56b:0x577]
---
Predecessors: [0x51b]
Successors: [0x578, 0x579]
---
0x56b JUMPDEST
0x56c PUSH2 0x2c6
0x56f GAS
0x570 SUB
0x571 CALL
0x572 ISZERO
0x573 ISZERO
0x574 PUSH2 0x579
0x577 JUMPI
---
0x56b: JUMPDEST 
0x56c: V542 = 0x2c6
0x56f: V543 = GAS
0x570: V544 = SUB V543 0x2c6
0x571: V545 = CALL V544 V532 0x0 V524 V537 V524 0x20
0x572: V546 = ISZERO V545
0x573: V547 = ISZERO V546
0x574: V548 = 0x579
0x577: JUMPI 0x579 V547
---
Entry stack: [V12, 0x22d, 0x0, V531, V532, 0xf851a440, V535, 0x20, V524, V537, V524, 0x0, V532]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x22d, 0x0, V531, V532, 0xf851a440, V535]

================================

Block 0x578
[0x578:0x578]
---
Predecessors: [0x56b]
Successors: []
---
0x578 INVALID
---
0x578: INVALID 
---
Entry stack: [V12, 0x22d, 0x0, V531, V532, 0xf851a440, V535]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22d, 0x0, V531, V532, 0xf851a440, V535]

================================

Block 0x579
[0x579:0x592]
---
Predecessors: [0x56b]
Successors: [0x593, 0x59a]
---
0x579 JUMPDEST
0x57a POP
0x57b POP
0x57c PUSH1 0x40
0x57e MLOAD
0x57f MLOAD
0x580 PUSH1 0x1
0x582 PUSH1 0xa0
0x584 PUSH1 0x2
0x586 EXP
0x587 SUB
0x588 AND
0x589 SWAP2
0x58a SWAP1
0x58b SWAP2
0x58c EQ
0x58d SWAP1
0x58e POP
0x58f PUSH2 0x59a
0x592 JUMPI
---
0x579: JUMPDEST 
0x57c: V549 = 0x40
0x57e: V550 = M[0x40]
0x57f: V551 = M[V550]
0x580: V552 = 0x1
0x582: V553 = 0xa0
0x584: V554 = 0x2
0x586: V555 = EXP 0x2 0xa0
0x587: V556 = SUB 0x10000000000000000000000000000000000000000 0x1
0x588: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x58c: V558 = EQ V557 V531
0x58f: V559 = 0x59a
0x592: JUMPI 0x59a V558
---
Entry stack: [V12, 0x22d, 0x0, V531, V532, 0xf851a440, V535]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x22d, 0x0]

================================

Block 0x593
[0x593:0x599]
---
Predecessors: [0x579]
Successors: [0x600]
---
0x593 POP
0x594 PUSH1 0x0
0x596 PUSH2 0x600
0x599 JUMP
---
0x594: V560 = 0x0
0x596: V561 = 0x600
0x599: JUMP 0x600
---
Entry stack: [V12, 0x22d, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x22d, 0x0]

================================

Block 0x59a
[0x59a:0x5e6]
---
Predecessors: [0x579]
Successors: [0x5e7, 0x5e8]
---
0x59a JUMPDEST
0x59b PUSH1 0x3
0x59d SLOAD
0x59e PUSH1 0x40
0x5a0 DUP1
0x5a1 MLOAD
0x5a2 PUSH1 0x0
0x5a4 PUSH1 0x20
0x5a6 SWAP2
0x5a7 DUP3
0x5a8 ADD
0x5a9 DUP2
0x5aa SWAP1
0x5ab MSTORE
0x5ac DUP3
0x5ad MLOAD
0x5ae PUSH1 0xe0
0x5b0 PUSH1 0x2
0x5b2 EXP
0x5b3 PUSH4 0xbca7e96b
0x5b8 MUL
0x5b9 DUP2
0x5ba MSTORE
0x5bb SWAP3
0x5bc MLOAD
0x5bd PUSH1 0x1
0x5bf PUSH1 0xa0
0x5c1 PUSH1 0x2
0x5c3 EXP
0x5c4 SUB
0x5c5 SWAP1
0x5c6 SWAP5
0x5c7 AND
0x5c8 SWAP4
0x5c9 PUSH4 0xbca7e96b
0x5ce SWAP4
0x5cf PUSH1 0x4
0x5d1 DUP1
0x5d2 DUP3
0x5d3 ADD
0x5d4 SWAP5
0x5d5 SWAP4
0x5d6 SWAP2
0x5d7 DUP4
0x5d8 SWAP1
0x5d9 SUB
0x5da ADD
0x5db SWAP1
0x5dc DUP3
0x5dd SWAP1
0x5de DUP8
0x5df DUP1
0x5e0 EXTCODESIZE
0x5e1 ISZERO
0x5e2 ISZERO
0x5e3 PUSH2 0x5e8
0x5e6 JUMPI
---
0x59a: JUMPDEST 
0x59b: V562 = 0x3
0x59d: V563 = S[0x3]
0x59e: V564 = 0x40
0x5a1: V565 = M[0x40]
0x5a2: V566 = 0x0
0x5a4: V567 = 0x20
0x5a8: V568 = ADD 0x20 V565
0x5ab: M[V568] = 0x0
0x5ad: V569 = M[0x40]
0x5ae: V570 = 0xe0
0x5b0: V571 = 0x2
0x5b2: V572 = EXP 0x2 0xe0
0x5b3: V573 = 0xbca7e96b
0x5b8: V574 = MUL 0xbca7e96b 0x100000000000000000000000000000000000000000000000000000000
0x5ba: M[V569] = 0xbca7e96b00000000000000000000000000000000000000000000000000000000
0x5bc: V575 = M[0x40]
0x5bd: V576 = 0x1
0x5bf: V577 = 0xa0
0x5c1: V578 = 0x2
0x5c3: V579 = EXP 0x2 0xa0
0x5c4: V580 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c7: V581 = AND V563 0xffffffffffffffffffffffffffffffffffffffff
0x5c9: V582 = 0xbca7e96b
0x5cf: V583 = 0x4
0x5d3: V584 = ADD V569 0x4
0x5d9: V585 = SUB V569 V575
0x5da: V586 = ADD V585 0x4
0x5e0: V587 = EXTCODESIZE V581
0x5e1: V588 = ISZERO V587
0x5e2: V589 = ISZERO V588
0x5e3: V590 = 0x5e8
0x5e6: JUMPI 0x5e8 V589
---
Entry stack: [V12, 0x22d, 0x0]
Stack pops: 0
Stack additions: [V581, 0xbca7e96b, V584, 0x20, V575, V586, V575, 0x0, V581]
Exit stack: [V12, 0x22d, 0x0, V581, 0xbca7e96b, V584, 0x20, V575, V586, V575, 0x0, V581]

================================

Block 0x5e7
[0x5e7:0x5e7]
---
Predecessors: [0x59a]
Successors: []
---
0x5e7 INVALID
---
0x5e7: INVALID 
---
Entry stack: [V12, 0x22d, 0x0, V581, 0xbca7e96b, V584, 0x20, V575, V586, V575, 0x0, V581]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22d, 0x0, V581, 0xbca7e96b, V584, 0x20, V575, V586, V575, 0x0, V581]

================================

Block 0x5e8
[0x5e8:0x5f4]
---
Predecessors: [0x59a]
Successors: [0x5f5, 0x5f6]
---
0x5e8 JUMPDEST
0x5e9 PUSH2 0x2c6
0x5ec GAS
0x5ed SUB
0x5ee CALL
0x5ef ISZERO
0x5f0 ISZERO
0x5f1 PUSH2 0x5f6
0x5f4 JUMPI
---
0x5e8: JUMPDEST 
0x5e9: V591 = 0x2c6
0x5ec: V592 = GAS
0x5ed: V593 = SUB V592 0x2c6
0x5ee: V594 = CALL V593 V581 0x0 V575 V586 V575 0x20
0x5ef: V595 = ISZERO V594
0x5f0: V596 = ISZERO V595
0x5f1: V597 = 0x5f6
0x5f4: JUMPI 0x5f6 V596
---
Entry stack: [V12, 0x22d, 0x0, V581, 0xbca7e96b, V584, 0x20, V575, V586, V575, 0x0, V581]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x22d, 0x0, V581, 0xbca7e96b, V584]

================================

Block 0x5f5
[0x5f5:0x5f5]
---
Predecessors: [0x5e8]
Successors: []
---
0x5f5 INVALID
---
0x5f5: INVALID 
---
Entry stack: [V12, 0x22d, 0x0, V581, 0xbca7e96b, V584]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22d, 0x0, V581, 0xbca7e96b, V584]

================================

Block 0x5f6
[0x5f6:0x5ff]
---
Predecessors: [0x5e8]
Successors: [0x600]
---
0x5f6 JUMPDEST
0x5f7 POP
0x5f8 POP
0x5f9 PUSH1 0x40
0x5fb MLOAD
0x5fc MLOAD
0x5fd SWAP2
0x5fe POP
0x5ff POP
---
0x5f6: JUMPDEST 
0x5f9: V598 = 0x40
0x5fb: V599 = M[0x40]
0x5fc: V600 = M[V599]
---
Entry stack: [V12, 0x22d, 0x0, V581, 0xbca7e96b, V584]
Stack pops: 4
Stack additions: [V600]
Exit stack: [V12, 0x22d, V600]

================================

Block 0x600
[0x600:0x602]
---
Predecessors: [0x593, 0x5f6]
Successors: [0x22d]
---
0x600 JUMPDEST
0x601 SWAP1
0x602 JUMP
---
0x600: JUMPDEST 
0x602: JUMP 0x22d
---
Entry stack: [V12, 0x22d, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x603
[0x603:0x619]
---
Predecessors: [0x249]
Successors: [0x61a, 0x61f]
---
0x603 JUMPDEST
0x604 PUSH1 0x0
0x606 SLOAD
0x607 CALLER
0x608 PUSH1 0x1
0x60a PUSH1 0xa0
0x60c PUSH1 0x2
0x60e EXP
0x60f SUB
0x610 SWAP1
0x611 DUP2
0x612 AND
0x613 SWAP2
0x614 AND
0x615 EQ
0x616 PUSH2 0x61f
0x619 JUMPI
---
0x603: JUMPDEST 
0x604: V601 = 0x0
0x606: V602 = S[0x0]
0x607: V603 = CALLER
0x608: V604 = 0x1
0x60a: V605 = 0xa0
0x60c: V606 = 0x2
0x60e: V607 = EXP 0x2 0xa0
0x60f: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x612: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x614: V610 = AND V602 0xffffffffffffffffffffffffffffffffffffffff
0x615: V611 = EQ V610 V609
0x616: V612 = 0x61f
0x619: JUMPI 0x61f V611
---
Entry stack: [V12, 0xef, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V206]

================================

Block 0x61a
[0x61a:0x61e]
---
Predecessors: [0x603]
Successors: []
---
0x61a PUSH1 0x0
0x61c PUSH1 0x0
0x61e REVERT
---
0x61a: V613 = 0x0
0x61c: V614 = 0x0
0x61e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V206]

================================

Block 0x61f
[0x61f:0x63a]
---
Predecessors: [0x603]
Successors: [0x63b]
---
0x61f JUMPDEST
0x620 PUSH1 0x3
0x622 DUP1
0x623 SLOAD
0x624 PUSH1 0x1
0x626 PUSH1 0xa0
0x628 PUSH1 0x2
0x62a EXP
0x62b SUB
0x62c NOT
0x62d AND
0x62e PUSH1 0x1
0x630 PUSH1 0xa0
0x632 PUSH1 0x2
0x634 EXP
0x635 SUB
0x636 DUP4
0x637 AND
0x638 OR
0x639 SWAP1
0x63a SSTORE
---
0x61f: JUMPDEST 
0x620: V615 = 0x3
0x623: V616 = S[0x3]
0x624: V617 = 0x1
0x626: V618 = 0xa0
0x628: V619 = 0x2
0x62a: V620 = EXP 0x2 0xa0
0x62b: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62c: V622 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x62d: V623 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V616
0x62e: V624 = 0x1
0x630: V625 = 0xa0
0x632: V626 = 0x2
0x634: V627 = EXP 0x2 0xa0
0x635: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x637: V629 = AND V206 0xffffffffffffffffffffffffffffffffffffffff
0x638: V630 = OR V629 V623
0x63a: S[0x3] = V630
---
Entry stack: [V12, 0xef, V206]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V206]

================================

Block 0x63b
[0x63b:0x63b]
---
Predecessors: [0x61f]
Successors: [0x63c]
---
0x63b JUMPDEST
---
0x63b: JUMPDEST 
---
Entry stack: [V12, 0xef, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V206]

================================

Block 0x63c
[0x63c:0x63e]
---
Predecessors: [0x63b]
Successors: [0xef]
---
0x63c JUMPDEST
0x63d POP
0x63e JUMP
---
0x63c: JUMPDEST 
0x63e: JUMP 0xef
---
Entry stack: [V12, 0xef, V206]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x63f
[0x63f:0x64d]
---
Predecessors: [0x267]
Successors: [0x146]
---
0x63f JUMPDEST
0x640 PUSH1 0x1
0x642 SLOAD
0x643 PUSH1 0x1
0x645 PUSH1 0xa0
0x647 PUSH1 0x2
0x649 EXP
0x64a SUB
0x64b AND
0x64c DUP2
0x64d JUMP
---
0x63f: JUMPDEST 
0x640: V631 = 0x1
0x642: V632 = S[0x1]
0x643: V633 = 0x1
0x645: V634 = 0xa0
0x647: V635 = 0x2
0x649: V636 = EXP 0x2 0xa0
0x64a: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64b: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x64d: JUMP 0x146
---
Entry stack: [V12, 0x146]
Stack pops: 1
Stack additions: [S0, V638]
Exit stack: [V12, 0x146, V638]

================================

Block 0x64e
[0x64e:0x679]
---
Predecessors: []
Successors: []
---
0x64e STOP
0x64f LOG1
0x650 PUSH6 0x627a7a723058
0x657 SHA3
0x658 PUSH7 0x6a35d7a2524ac7
0x660 MISSING 0xd0
0x661 CREATE2
0x662 MISSING 0xb1
0x663 MISSING 0xd0
0x664 SWAP16
0x665 MISSING 0xfb
0x666 MISSING 0xae
0x667 EXTCODECOPY
0x668 MISSING 0xe3
0x669 DUP2
0x66a MISSING 0xac
0x66b MISSING 0xef
0x66c MISSING 0xc8
0x66d PC
0x66e DUP4
0x66f SGT
0x670 MISSING 0x25
0x671 MISSING 0xe7
0x672 MISSING 0xbb
0x673 MISSING 0xb9
0x674 PUSH3 0x846d8e
0x678 STOP
0x679 MISSING 0x29
---
0x64e: STOP 
0x64f: LOG S0 S1 S2
0x650: V639 = 0x627a7a723058
0x657: V640 = SHA3 0x627a7a723058 S3
0x658: V641 = 0x6a35d7a2524ac7
0x660: MISSING 0xd0
0x661: V642 = CREATE2 S0 S1 S2 S3
0x662: MISSING 0xb1
0x663: MISSING 0xd0
0x665: MISSING 0xfb
0x666: MISSING 0xae
0x667: EXTCODECOPY S0 S1 S2 S3
0x668: MISSING 0xe3
0x66a: MISSING 0xac
0x66b: MISSING 0xef
0x66c: MISSING 0xc8
0x66d: V643 = PC
0x66f: V644 = SGT S2 V643
0x670: MISSING 0x25
0x671: MISSING 0xe7
0x672: MISSING 0xbb
0x673: MISSING 0xb9
0x674: V645 = 0x846d8e
0x678: STOP 
0x679: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6a35d7a2524ac7, V640, V642, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, S1, S0, S1, V644, S0, S1, S2, 0x846d8e]
Exit stack: []

================================

Function 0:
Public function signature: 0x2b68b9c6
Entry block: 0xf1
Exit block: 0x2a2
Body: 0xf1, 0xf8, 0xf9, 0x28b, 0x2a2, 0x2a7

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x103
Exit block: 0xef
Body: 0xef, 0x103, 0x10a, 0x10b, 0x2b8, 0x2cf, 0x2d4, 0x303, 0x304, 0x305, 0x306

Function 2:
Public function signature: 0x704b6c02
Entry block: 0x118
Exit block: 0xef
Body: 0xef, 0x118, 0x11f, 0x120, 0x309, 0x320, 0x325, 0x341, 0x342

Function 3:
Public function signature: 0x7826bfa8
Entry block: 0x136
Exit block: 0x146
Body: 0x136, 0x13d, 0x13e, 0x146, 0x345

Function 4:
Public function signature: 0x79ba5097
Entry block: 0x162
Exit block: 0xef
Body: 0xef, 0x162, 0x169, 0x16a, 0x354, 0x367, 0x36c, 0x383, 0x388, 0x3ab

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x174
Exit block: 0x146
Body: 0x146, 0x174, 0x17b, 0x17c, 0x3ad

Function 6:
Public function signature: 0x94081387
Entry block: 0x1a0
Exit block: 0xef
Body: 0xef, 0x1a0, 0x1a7, 0x1a8, 0x3bc, 0x407, 0x408, 0x415, 0x416, 0x41a

Function 7:
Public function signature: 0xb105126f
Entry block: 0x1b5
Exit block: 0xef
Body: 0xef, 0x1b5, 0x1bc, 0x1bd, 0x41d, 0x435, 0x448, 0x44f, 0x454, 0x4b5, 0x4b6, 0x4c3, 0x4c4, 0x4c9, 0x4ca

Function 8:
Public function signature: 0xb5ed298a
Entry block: 0x1d3
Exit block: 0xef
Body: 0xef, 0x1d3, 0x1da, 0x1db, 0x4d0, 0x4e7, 0x4ec, 0x508, 0x509

Function 9:
Public function signature: 0xd153b60c
Entry block: 0x1f1
Exit block: 0x146
Body: 0x146, 0x1f1, 0x1f8, 0x1f9, 0x50c

Function 10:
Public function signature: 0xe1a27ad3
Entry block: 0x21d
Exit block: 0x22d
Body: 0x21d, 0x224, 0x225, 0x22d, 0x51b, 0x56a, 0x56b, 0x578, 0x579, 0x593, 0x59a, 0x5e7, 0x5e8, 0x5f5, 0x5f6, 0x600

Function 11:
Public function signature: 0xf298083b
Entry block: 0x241
Exit block: 0xef
Body: 0xef, 0x241, 0x248, 0x249, 0x603, 0x61a, 0x61f, 0x63b, 0x63c

Function 12:
Public function signature: 0xf851a440
Entry block: 0x25f
Exit block: 0x146
Body: 0x146, 0x25f, 0x266, 0x267, 0x63f

Function 13:
Public fallback function
Entry block: 0xa9
Exit block: 0xef
Body: 0xa9, 0xad, 0xed, 0xef

