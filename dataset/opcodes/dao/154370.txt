Block 0x0
[0x0:0x37]
---
Predecessors: []
Successors: [0x38, 0x69]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH4 0xffffffff
0xa PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x28 PUSH1 0x0
0x2a CALLDATALOAD
0x2b DIV
0x2c AND
0x2d PUSH4 0x2f7442bb
0x32 DUP2
0x33 EQ
0x34 PUSH2 0x69
0x37 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xffffffff
0xa: V3 = 0x100000000000000000000000000000000000000000000000000000000
0x28: V4 = 0x0
0x2a: V5 = CALLDATALOAD 0x0
0x2b: V6 = DIV V5 0x100000000000000000000000000000000000000000000000000000000
0x2c: V7 = AND V6 0xffffffff
0x2d: V8 = 0x2f7442bb
0x33: V9 = EQ V7 0x2f7442bb
0x34: V10 = 0x69
0x37: JUMPI 0x69 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x38
[0x38:0x42]
---
Predecessors: [0x0]
Successors: [0x43, 0x8d]
---
0x38 DUP1
0x39 PUSH4 0xab6b7e22
0x3e EQ
0x3f PUSH2 0x8d
0x42 JUMPI
---
0x39: V11 = 0xab6b7e22
0x3e: V12 = EQ 0xab6b7e22 V7
0x3f: V13 = 0x8d
0x42: JUMPI 0x8d V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x43
[0x43:0x4d]
---
Predecessors: [0x38]
Successors: [0x4e, 0xa6]
---
0x43 DUP1
0x44 PUSH4 0xd1d2ac61
0x49 EQ
0x4a PUSH2 0xa6
0x4d JUMPI
---
0x44: V14 = 0xd1d2ac61
0x49: V15 = EQ 0xd1d2ac61 V7
0x4a: V16 = 0xa6
0x4d: JUMPI 0xa6 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4e
[0x4e:0x58]
---
Predecessors: [0x43]
Successors: [0x59, 0xd7]
---
0x4e DUP1
0x4f PUSH4 0xde72b83d
0x54 EQ
0x55 PUSH2 0xd7
0x58 JUMPI
---
0x4f: V17 = 0xde72b83d
0x54: V18 = EQ 0xde72b83d V7
0x55: V19 = 0xd7
0x58: JUMPI 0xd7 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x59
[0x59:0x63]
---
Predecessors: [0x4e]
Successors: [0x64, 0xfc]
---
0x59 DUP1
0x5a PUSH4 0xee4be288
0x5f EQ
0x60 PUSH2 0xfc
0x63 JUMPI
---
0x5a: V20 = 0xee4be288
0x5f: V21 = EQ 0xee4be288 V7
0x60: V22 = 0xfc
0x63: JUMPI 0xfc V21
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x64
[0x64:0x68]
---
Predecessors: [0x59]
Successors: []
---
0x64 JUMPDEST
0x65 PUSH1 0x0
0x67 DUP1
0x68 REVERT
---
0x64: JUMPDEST 
0x65: V23 = 0x0
0x68: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x69
[0x69:0x6f]
---
Predecessors: [0x0]
Successors: [0x70, 0x74]
---
0x69 JUMPDEST
0x6a CALLVALUE
0x6b ISZERO
0x6c PUSH2 0x74
0x6f JUMPI
---
0x69: JUMPDEST 
0x6a: V24 = CALLVALUE
0x6b: V25 = ISZERO V24
0x6c: V26 = 0x74
0x6f: JUMPI 0x74 V25
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x70
[0x70:0x73]
---
Predecessors: [0x69]
Successors: []
---
0x70 PUSH1 0x0
0x72 DUP1
0x73 REVERT
---
0x70: V27 = 0x0
0x73: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x74
[0x74:0x8a]
---
Predecessors: [0x69]
Successors: [0x111]
---
0x74 JUMPDEST
0x75 PUSH2 0x8b
0x78 PUSH1 0x1
0x7a PUSH1 0xa0
0x7c PUSH1 0x2
0x7e EXP
0x7f SUB
0x80 PUSH1 0x4
0x82 CALLDATALOAD
0x83 AND
0x84 PUSH1 0x24
0x86 CALLDATALOAD
0x87 PUSH2 0x111
0x8a JUMP
---
0x74: JUMPDEST 
0x75: V28 = 0x8b
0x78: V29 = 0x1
0x7a: V30 = 0xa0
0x7c: V31 = 0x2
0x7e: V32 = EXP 0x2 0xa0
0x7f: V33 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80: V34 = 0x4
0x82: V35 = CALLDATALOAD 0x4
0x83: V36 = AND V35 0xffffffffffffffffffffffffffffffffffffffff
0x84: V37 = 0x24
0x86: V38 = CALLDATALOAD 0x24
0x87: V39 = 0x111
0x8a: JUMP 0x111
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x8b, V36, V38]
Exit stack: [V7, 0x8b, V36, V38]

================================

Block 0x8b
[0x8b:0x8c]
---
Predecessors: [0x17b, 0x254]
Successors: []
---
0x8b JUMPDEST
0x8c STOP
---
0x8b: JUMPDEST 
0x8c: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x8d
[0x8d:0xa3]
---
Predecessors: [0x38]
Successors: [0x17f]
---
0x8d JUMPDEST
0x8e PUSH2 0x8b
0x91 PUSH1 0x1
0x93 PUSH1 0xa0
0x95 PUSH1 0x2
0x97 EXP
0x98 SUB
0x99 PUSH1 0x4
0x9b CALLDATALOAD
0x9c AND
0x9d PUSH1 0x24
0x9f CALLDATALOAD
0xa0 PUSH2 0x17f
0xa3 JUMP
---
0x8d: JUMPDEST 
0x8e: V40 = 0x8b
0x91: V41 = 0x1
0x93: V42 = 0xa0
0x95: V43 = 0x2
0x97: V44 = EXP 0x2 0xa0
0x98: V45 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99: V46 = 0x4
0x9b: V47 = CALLDATALOAD 0x4
0x9c: V48 = AND V47 0xffffffffffffffffffffffffffffffffffffffff
0x9d: V49 = 0x24
0x9f: V50 = CALLDATALOAD 0x24
0xa0: V51 = 0x17f
0xa3: JUMP 0x17f
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x8b, V48, V50]
Exit stack: [V7, 0x8b, V48, V50]

================================

Block 0xa4
[0xa4:0xa5]
---
Predecessors: []
Successors: []
---
0xa4 JUMPDEST
0xa5 STOP
---
0xa4: JUMPDEST 
0xa5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x43]
Successors: [0xad, 0xb1]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V52 = CALLVALUE
0xa8: V53 = ISZERO V52
0xa9: V54 = 0xb1
0xac: JUMPI 0xb1 V53
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa6]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V55 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb1
[0xb1:0xc4]
---
Predecessors: [0xa6]
Successors: [0x1c4]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xc5
0xb5 PUSH1 0x1
0xb7 PUSH1 0xa0
0xb9 PUSH1 0x2
0xbb EXP
0xbc SUB
0xbd PUSH1 0x4
0xbf CALLDATALOAD
0xc0 AND
0xc1 PUSH2 0x1c4
0xc4 JUMP
---
0xb1: JUMPDEST 
0xb2: V56 = 0xc5
0xb5: V57 = 0x1
0xb7: V58 = 0xa0
0xb9: V59 = 0x2
0xbb: V60 = EXP 0x2 0xa0
0xbc: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd: V62 = 0x4
0xbf: V63 = CALLDATALOAD 0x4
0xc0: V64 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0xc1: V65 = 0x1c4
0xc4: JUMP 0x1c4
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xc5, V64]
Exit stack: [V7, 0xc5, V64]

================================

Block 0xc5
[0xc5:0xd6]
---
Predecessors: [0x1c4, 0x1d6]
Successors: []
---
0xc5 JUMPDEST
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 SWAP1
0xca DUP2
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 SWAP2
0xd4 SUB
0xd5 SWAP1
0xd6 RETURN
---
0xc5: JUMPDEST 
0xc6: V66 = 0x40
0xc8: V67 = M[0x40]
0xcb: M[V67] = S0
0xcc: V68 = 0x20
0xce: V69 = ADD 0x20 V67
0xcf: V70 = 0x40
0xd1: V71 = M[0x40]
0xd4: V72 = SUB V69 V71
0xd6: RETURN V71 V72
---
Entry stack: [V7, 0xc5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0xc5]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0x4e]
Successors: [0xde, 0xe2]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V73 = CALLVALUE
0xd9: V74 = ISZERO V73
0xda: V75 = 0xe2
0xdd: JUMPI 0xe2 V74
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd7]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V76 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe2
[0xe2:0xe9]
---
Predecessors: [0xd7]
Successors: [0x1d6]
---
0xe2 JUMPDEST
0xe3 PUSH2 0xc5
0xe6 PUSH2 0x1d6
0xe9 JUMP
---
0xe2: JUMPDEST 
0xe3: V77 = 0xc5
0xe6: V78 = 0x1d6
0xe9: JUMP 0x1d6
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V7, 0xc5]

================================

Block 0xea
[0xea:0xfb]
---
Predecessors: []
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x40
0xed MLOAD
0xee SWAP1
0xef DUP2
0xf0 MSTORE
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 SWAP2
0xf9 SUB
0xfa SWAP1
0xfb RETURN
---
0xea: JUMPDEST 
0xeb: V79 = 0x40
0xed: V80 = M[0x40]
0xf0: M[V80] = S0
0xf1: V81 = 0x20
0xf3: V82 = ADD 0x20 V80
0xf4: V83 = 0x40
0xf6: V84 = M[0x40]
0xf9: V85 = SUB V82 V84
0xfb: RETURN V84 V85
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xfc
[0xfc:0x102]
---
Predecessors: [0x59]
Successors: [0x103, 0x107]
---
0xfc JUMPDEST
0xfd CALLVALUE
0xfe ISZERO
0xff PUSH2 0x107
0x102 JUMPI
---
0xfc: JUMPDEST 
0xfd: V86 = CALLVALUE
0xfe: V87 = ISZERO V86
0xff: V88 = 0x107
0x102: JUMPI 0x107 V87
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0xfc]
Successors: []
---
0x103 PUSH1 0x0
0x105 DUP1
0x106 REVERT
---
0x103: V89 = 0x0
0x106: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x107
[0x107:0x10e]
---
Predecessors: [0xfc]
Successors: [0x1dc]
---
0x107 JUMPDEST
0x108 PUSH2 0x8b
0x10b PUSH2 0x1dc
0x10e JUMP
---
0x107: JUMPDEST 
0x108: V90 = 0x8b
0x10b: V91 = 0x1dc
0x10e: JUMP 0x1dc
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x8b]
Exit stack: [V7, 0x8b]

================================

Block 0x10f
[0x10f:0x110]
---
Predecessors: []
Successors: []
---
0x10f JUMPDEST
0x110 STOP
---
0x10f: JUMPDEST 
0x110: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x111
[0x111:0x131]
---
Predecessors: [0x74]
Successors: [0x132, 0x160]
---
0x111 JUMPDEST
0x112 PUSH1 0x1
0x114 PUSH1 0xa0
0x116 PUSH1 0x2
0x118 EXP
0x119 SUB
0x11a CALLER
0x11b AND
0x11c PUSH1 0x0
0x11e SWAP1
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 DUP2
0x124 SWAP1
0x125 MSTORE
0x126 PUSH1 0x40
0x128 SWAP1
0x129 SHA3
0x12a SLOAD
0x12b DUP2
0x12c SWAP1
0x12d LT
0x12e PUSH2 0x160
0x131 JUMPI
---
0x111: JUMPDEST 
0x112: V92 = 0x1
0x114: V93 = 0xa0
0x116: V94 = 0x2
0x118: V95 = EXP 0x2 0xa0
0x119: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a: V97 = CALLER
0x11b: V98 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x11c: V99 = 0x0
0x120: M[0x0] = V98
0x121: V100 = 0x20
0x125: M[0x20] = 0x0
0x126: V101 = 0x40
0x129: V102 = SHA3 0x0 0x40
0x12a: V103 = S[V102]
0x12d: V104 = LT V103 V38
0x12e: V105 = 0x160
0x131: JUMPI 0x160 V104
---
Entry stack: [V7, 0x8b, V36, V38]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x8b, V36, V38]

================================

Block 0x132
[0x132:0x15f]
---
Predecessors: [0x111]
Successors: [0x160]
---
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a DUP1
0x13b DUP4
0x13c AND
0x13d PUSH1 0x0
0x13f SWAP1
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 DUP2
0x145 SWAP1
0x146 MSTORE
0x147 PUSH1 0x40
0x149 DUP1
0x14a DUP3
0x14b SHA3
0x14c DUP1
0x14d SLOAD
0x14e DUP6
0x14f ADD
0x150 SWAP1
0x151 SSTORE
0x152 CALLER
0x153 SWAP1
0x154 SWAP3
0x155 AND
0x156 DUP2
0x157 MSTORE
0x158 SHA3
0x159 DUP1
0x15a SLOAD
0x15b DUP3
0x15c SWAP1
0x15d SUB
0x15e SWAP1
0x15f SSTORE
---
0x132: V106 = 0x1
0x134: V107 = 0xa0
0x136: V108 = 0x2
0x138: V109 = EXP 0x2 0xa0
0x139: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13c: V111 = AND V36 0xffffffffffffffffffffffffffffffffffffffff
0x13d: V112 = 0x0
0x141: M[0x0] = V111
0x142: V113 = 0x20
0x146: M[0x20] = 0x0
0x147: V114 = 0x40
0x14b: V115 = SHA3 0x0 0x40
0x14d: V116 = S[V115]
0x14f: V117 = ADD V38 V116
0x151: S[V115] = V117
0x152: V118 = CALLER
0x155: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x157: M[0x0] = V119
0x158: V120 = SHA3 0x0 0x40
0x15a: V121 = S[V120]
0x15d: V122 = SUB V121 V38
0x15f: S[V120] = V122
---
Entry stack: [V7, 0x8b, V36, V38]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x8b, V36, V38]

================================

Block 0x160
[0x160:0x160]
---
Predecessors: [0x111, 0x132]
Successors: [0x161]
---
0x160 JUMPDEST
---
0x160: JUMPDEST 
---
Entry stack: [V7, 0x8b, V36, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x8b, V36, V38]

================================

Block 0x161
[0x161:0x175]
---
Predecessors: [0x160]
Successors: [0x176, 0x17a]
---
0x161 JUMPDEST
0x162 PUSH1 0x1
0x164 SLOAD
0x165 ADDRESS
0x166 PUSH1 0x1
0x168 PUSH1 0xa0
0x16a PUSH1 0x2
0x16c EXP
0x16d SUB
0x16e AND
0x16f BALANCE
0x170 LT
0x171 ISZERO
0x172 PUSH2 0x17a
0x175 JUMPI
---
0x161: JUMPDEST 
0x162: V123 = 0x1
0x164: V124 = S[0x1]
0x165: V125 = ADDRESS
0x166: V126 = 0x1
0x168: V127 = 0xa0
0x16a: V128 = 0x2
0x16c: V129 = EXP 0x2 0xa0
0x16d: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16e: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x16f: V132 = BALANCE V131
0x170: V133 = LT V132 V124
0x171: V134 = ISZERO V133
0x172: V135 = 0x17a
0x175: JUMPI 0x17a V134
---
Entry stack: [V7, 0x8b, V36, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x8b, V36, V38]

================================

Block 0x176
[0x176:0x179]
---
Predecessors: [0x161]
Successors: []
---
0x176 PUSH1 0x0
0x178 DUP1
0x179 REVERT
---
0x176: V136 = 0x0
0x179: REVERT 0x0 0x0
---
Entry stack: [V7, 0x8b, V36, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x8b, V36, V38]

================================

Block 0x17a
[0x17a:0x17a]
---
Predecessors: [0x161, 0x1a6]
Successors: [0x17b]
---
0x17a JUMPDEST
---
0x17a: JUMPDEST 
---
Entry stack: [V7, 0x8b, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x8b, S1, S0]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x17a]
Successors: [0x8b]
---
0x17b JUMPDEST
0x17c POP
0x17d POP
0x17e JUMP
---
0x17b: JUMPDEST 
0x17e: JUMP 0x8b
---
Entry stack: [V7, 0x8b, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V7]

================================

Block 0x17f
[0x17f:0x1a5]
---
Predecessors: [0x8d]
Successors: [0x1a6]
---
0x17f JUMPDEST
0x180 PUSH1 0x1
0x182 PUSH1 0xa0
0x184 PUSH1 0x2
0x186 EXP
0x187 SUB
0x188 DUP3
0x189 AND
0x18a PUSH1 0x0
0x18c SWAP1
0x18d DUP2
0x18e MSTORE
0x18f PUSH1 0x20
0x191 DUP2
0x192 SWAP1
0x193 MSTORE
0x194 PUSH1 0x40
0x196 SWAP1
0x197 SHA3
0x198 DUP1
0x199 SLOAD
0x19a DUP3
0x19b ADD
0x19c SWAP1
0x19d SSTORE
0x19e PUSH1 0x1
0x1a0 DUP1
0x1a1 SLOAD
0x1a2 DUP3
0x1a3 ADD
0x1a4 SWAP1
0x1a5 SSTORE
---
0x17f: JUMPDEST 
0x180: V137 = 0x1
0x182: V138 = 0xa0
0x184: V139 = 0x2
0x186: V140 = EXP 0x2 0xa0
0x187: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x189: V142 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V143 = 0x0
0x18e: M[0x0] = V142
0x18f: V144 = 0x20
0x193: M[0x20] = 0x0
0x194: V145 = 0x40
0x197: V146 = SHA3 0x0 0x40
0x199: V147 = S[V146]
0x19b: V148 = ADD V50 V147
0x19d: S[V146] = V148
0x19e: V149 = 0x1
0x1a1: V150 = S[0x1]
0x1a3: V151 = ADD V50 V150
0x1a5: S[0x1] = V151
---
Entry stack: [V7, 0x8b, V48, V50]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x8b, V48, V50]

================================

Block 0x1a6
[0x1a6:0x1ba]
---
Predecessors: [0x17f]
Successors: [0x17a, 0x1bb]
---
0x1a6 JUMPDEST
0x1a7 PUSH1 0x1
0x1a9 SLOAD
0x1aa ADDRESS
0x1ab PUSH1 0x1
0x1ad PUSH1 0xa0
0x1af PUSH1 0x2
0x1b1 EXP
0x1b2 SUB
0x1b3 AND
0x1b4 BALANCE
0x1b5 LT
0x1b6 ISZERO
0x1b7 PUSH2 0x17a
0x1ba JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V152 = 0x1
0x1a9: V153 = S[0x1]
0x1aa: V154 = ADDRESS
0x1ab: V155 = 0x1
0x1ad: V156 = 0xa0
0x1af: V157 = 0x2
0x1b1: V158 = EXP 0x2 0xa0
0x1b2: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b3: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x1b4: V161 = BALANCE V160
0x1b5: V162 = LT V161 V153
0x1b6: V163 = ISZERO V162
0x1b7: V164 = 0x17a
0x1ba: JUMPI 0x17a V163
---
Entry stack: [V7, 0x8b, V48, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x8b, V48, V50]

================================

Block 0x1bb
[0x1bb:0x1be]
---
Predecessors: [0x1a6]
Successors: []
---
0x1bb PUSH1 0x0
0x1bd DUP1
0x1be REVERT
---
0x1bb: V165 = 0x0
0x1be: REVERT 0x0 0x0
---
Entry stack: [V7, 0x8b, V48, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x8b, V48, V50]

================================

Block 0x1bf
[0x1bf:0x1bf]
---
Predecessors: []
Successors: [0x1c0]
---
0x1bf JUMPDEST
---
0x1bf: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x1bf]
Successors: []
Has unresolved jump.
---
0x1c0 JUMPDEST
0x1c1 POP
0x1c2 POP
0x1c3 JUMP
---
0x1c0: JUMPDEST 
0x1c3: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x1c4
[0x1c4:0x1d5]
---
Predecessors: [0xb1]
Successors: [0xc5]
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x0
0x1c7 PUSH1 0x20
0x1c9 DUP2
0x1ca SWAP1
0x1cb MSTORE
0x1cc SWAP1
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x40
0x1d1 SWAP1
0x1d2 SHA3
0x1d3 SLOAD
0x1d4 DUP2
0x1d5 JUMP
---
0x1c4: JUMPDEST 
0x1c5: V166 = 0x0
0x1c7: V167 = 0x20
0x1cb: M[0x20] = 0x0
0x1ce: M[0x0] = V64
0x1cf: V168 = 0x40
0x1d2: V169 = SHA3 0x0 0x40
0x1d3: V170 = S[V169]
0x1d5: JUMP 0xc5
---
Entry stack: [V7, 0xc5, V64]
Stack pops: 2
Stack additions: [S1, V170]
Exit stack: [V7, 0xc5, V170]

================================

Block 0x1d6
[0x1d6:0x1db]
---
Predecessors: [0xe2]
Successors: [0xc5]
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x1
0x1d9 SLOAD
0x1da DUP2
0x1db JUMP
---
0x1d6: JUMPDEST 
0x1d7: V171 = 0x1
0x1d9: V172 = S[0x1]
0x1db: JUMP 0xc5
---
Entry stack: [V7, 0xc5]
Stack pops: 1
Stack additions: [S0, V172]
Exit stack: [V7, 0xc5, V172]

================================

Block 0x1dc
[0x1dc:0x216]
---
Predecessors: [0x107]
Successors: [0x217, 0x239]
---
0x1dc JUMPDEST
0x1dd PUSH1 0x1
0x1df PUSH1 0xa0
0x1e1 PUSH1 0x2
0x1e3 EXP
0x1e4 SUB
0x1e5 CALLER
0x1e6 AND
0x1e7 PUSH1 0x0
0x1e9 DUP2
0x1ea DUP2
0x1eb MSTORE
0x1ec PUSH1 0x20
0x1ee DUP2
0x1ef SWAP1
0x1f0 MSTORE
0x1f1 PUSH1 0x40
0x1f3 SWAP1
0x1f4 DUP2
0x1f5 SWAP1
0x1f6 SHA3
0x1f7 SLOAD
0x1f8 SWAP2
0x1f9 SWAP1
0x1fa DUP3
0x1fb SWAP1
0x1fc MLOAD
0x1fd PUSH1 0x0
0x1ff PUSH1 0x40
0x201 MLOAD
0x202 DUP1
0x203 DUP4
0x204 SUB
0x205 DUP2
0x206 DUP6
0x207 DUP8
0x208 PUSH2 0x8796
0x20b GAS
0x20c SUB
0x20d CALL
0x20e SWAP3
0x20f POP
0x210 POP
0x211 POP
0x212 ISZERO
0x213 PUSH2 0x239
0x216 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V173 = 0x1
0x1df: V174 = 0xa0
0x1e1: V175 = 0x2
0x1e3: V176 = EXP 0x2 0xa0
0x1e4: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e5: V178 = CALLER
0x1e6: V179 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x1e7: V180 = 0x0
0x1eb: M[0x0] = V179
0x1ec: V181 = 0x20
0x1f0: M[0x20] = 0x0
0x1f1: V182 = 0x40
0x1f6: V183 = SHA3 0x0 0x40
0x1f7: V184 = S[V183]
0x1fc: V185 = M[0x40]
0x1fd: V186 = 0x0
0x1ff: V187 = 0x40
0x201: V188 = M[0x40]
0x204: V189 = SUB V185 V188
0x208: V190 = 0x8796
0x20b: V191 = GAS
0x20c: V192 = SUB V191 0x8796
0x20d: V193 = CALL V192 V179 V184 V188 V189 V188 0x0
0x212: V194 = ISZERO V193
0x213: V195 = 0x239
0x216: JUMPI 0x239 V194
---
Entry stack: [V7, 0x8b]
Stack pops: 0
Stack additions: [V184]
Exit stack: [V7, 0x8b, V184]

================================

Block 0x217
[0x217:0x238]
---
Predecessors: [0x1dc]
Successors: [0x239]
---
0x217 PUSH1 0x1
0x219 DUP1
0x21a SLOAD
0x21b DUP3
0x21c SWAP1
0x21d SUB
0x21e SWAP1
0x21f SSTORE
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 CALLER
0x229 AND
0x22a PUSH1 0x0
0x22c SWAP1
0x22d DUP2
0x22e MSTORE
0x22f PUSH1 0x20
0x231 DUP2
0x232 SWAP1
0x233 MSTORE
0x234 PUSH1 0x40
0x236 DUP2
0x237 SHA3
0x238 SSTORE
---
0x217: V196 = 0x1
0x21a: V197 = S[0x1]
0x21d: V198 = SUB V197 V184
0x21f: S[0x1] = V198
0x220: V199 = 0x1
0x222: V200 = 0xa0
0x224: V201 = 0x2
0x226: V202 = EXP 0x2 0xa0
0x227: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V204 = CALLER
0x229: V205 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V206 = 0x0
0x22e: M[0x0] = V205
0x22f: V207 = 0x20
0x233: M[0x20] = 0x0
0x234: V208 = 0x40
0x237: V209 = SHA3 0x0 0x40
0x238: S[V209] = 0x0
---
Entry stack: [V7, 0x8b, V184]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x8b, V184]

================================

Block 0x239
[0x239:0x239]
---
Predecessors: [0x1dc, 0x217]
Successors: [0x23a]
---
0x239 JUMPDEST
---
0x239: JUMPDEST 
---
Entry stack: [V7, 0x8b, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x8b, V184]

================================

Block 0x23a
[0x23a:0x24e]
---
Predecessors: [0x239]
Successors: [0x24f, 0x253]
---
0x23a JUMPDEST
0x23b PUSH1 0x1
0x23d SLOAD
0x23e ADDRESS
0x23f PUSH1 0x1
0x241 PUSH1 0xa0
0x243 PUSH1 0x2
0x245 EXP
0x246 SUB
0x247 AND
0x248 BALANCE
0x249 LT
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x23a: JUMPDEST 
0x23b: V210 = 0x1
0x23d: V211 = S[0x1]
0x23e: V212 = ADDRESS
0x23f: V213 = 0x1
0x241: V214 = 0xa0
0x243: V215 = 0x2
0x245: V216 = EXP 0x2 0xa0
0x246: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x247: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x248: V219 = BALANCE V218
0x249: V220 = LT V219 V211
0x24a: V221 = ISZERO V220
0x24b: V222 = 0x253
0x24e: JUMPI 0x253 V221
---
Entry stack: [V7, 0x8b, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x8b, V184]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x23a]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V223 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V7, 0x8b, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x8b, V184]

================================

Block 0x253
[0x253:0x253]
---
Predecessors: [0x23a]
Successors: [0x254]
---
0x253 JUMPDEST
---
0x253: JUMPDEST 
---
Entry stack: [V7, 0x8b, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x8b, V184]

================================

Block 0x254
[0x254:0x256]
---
Predecessors: [0x253]
Successors: [0x8b]
---
0x254 JUMPDEST
0x255 POP
0x256 JUMP
---
0x254: JUMPDEST 
0x256: JUMP 0x8b
---
Entry stack: [V7, 0x8b, V184]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x257
[0x257:0x293]
---
Predecessors: []
Successors: []
---
0x257 STOP
0x258 LOG1
0x259 PUSH6 0x627a7a723058
0x260 SHA3
0x261 MISSING 0xe1
0x262 PUSH28 0x4a3c7c8226ef713ccb7fbd84606efcd1a30fefaa8f27b159ff9d6dc6
0x27f PUSH20 0x450029
---
0x257: STOP 
0x258: LOG S0 S1 S2
0x259: V224 = 0x627a7a723058
0x260: V225 = SHA3 0x627a7a723058 S3
0x261: MISSING 0xe1
0x262: V226 = 0x4a3c7c8226ef713ccb7fbd84606efcd1a30fefaa8f27b159ff9d6dc6
0x27f: V227 = 0x450029
---
Entry stack: []
Stack pops: 0
Stack additions: [V225, 0x450029, 0x4a3c7c8226ef713ccb7fbd84606efcd1a30fefaa8f27b159ff9d6dc6]
Exit stack: []

================================

Function 0:
Public function signature: 0x2f7442bb
Entry block: 0x69
Exit block: 0x8b
Body: 0x69, 0x70, 0x74, 0x8b, 0x111, 0x132, 0x160, 0x161, 0x176, 0x17a, 0x17b

Function 1:
Public function signature: 0xab6b7e22
Entry block: 0x8d
Exit block: 0x8b
Body: 0x8b, 0x8d, 0x17a, 0x17b, 0x17f, 0x1a6, 0x1bb

Function 2:
Public function signature: 0xd1d2ac61
Entry block: 0xa6
Exit block: 0xc5
Body: 0xa6, 0xad, 0xb1, 0xc5, 0x1c4

Function 3:
Public function signature: 0xde72b83d
Entry block: 0xd7
Exit block: 0xc5
Body: 0xc5, 0xd7, 0xde, 0xe2, 0x1d6

Function 4:
Public function signature: 0xee4be288
Entry block: 0xfc
Exit block: 0x8b
Body: 0x8b, 0xfc, 0x103, 0x107, 0x1dc, 0x217, 0x239, 0x23a, 0x24f, 0x253, 0x254

Function 5:
Public fallback function
Entry block: 0x64
Exit block: 0x64
Body: 0x64

