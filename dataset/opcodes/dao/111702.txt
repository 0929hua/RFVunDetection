Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x85]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3457f896
0x3c EQ
0x3d PUSH2 0x85
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3457f896
0x3c: V13 = EQ 0x3457f896 V11
0x3d: V14 = 0x85
0x40: JUMPI 0x85 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb2]
---
0x41 DUP1
0x42 PUSH4 0x41c0e1b5
0x47 EQ
0x48 PUSH2 0xb2
0x4b JUMPI
---
0x42: V15 = 0x41c0e1b5
0x47: V16 = EQ 0x41c0e1b5 V11
0x48: V17 = 0xb2
0x4b: JUMPI 0xb2 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xc9]
---
0x4c DUP1
0x4d PUSH4 0x68b39923
0x52 EQ
0x53 PUSH2 0xc9
0x56 JUMPI
---
0x4d: V18 = 0x68b39923
0x52: V19 = EQ 0x68b39923 V11
0x53: V20 = 0xc9
0x56: JUMPI 0xc9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xf3]
---
0x57 DUP1
0x58 PUSH4 0xb38a4a49
0x5d EQ
0x5e PUSH2 0xf3
0x61 JUMPI
---
0x58: V21 = 0xb38a4a49
0x5d: V22 = EQ 0xb38a4a49 V11
0x5e: V23 = 0xf3
0x61: JUMPI 0xf3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x113]
---
0x62 DUP1
0x63 PUSH4 0xc79e7eb6
0x68 EQ
0x69 PUSH2 0x113
0x6c JUMPI
---
0x63: V24 = 0xc79e7eb6
0x68: V25 = EQ 0xc79e7eb6 V11
0x69: V26 = 0x113
0x6c: JUMPI 0x113 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x13d]
---
0x6d DUP1
0x6e PUSH4 0xd2873cf7
0x73 EQ
0x74 PUSH2 0x13d
0x77 JUMPI
---
0x6e: V27 = 0xd2873cf7
0x73: V28 = EQ 0xd2873cf7 V11
0x74: V29 = 0x13d
0x77: JUMPI 0x13d V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x154]
---
0x78 DUP1
0x79 PUSH4 0xe5949626
0x7e EQ
0x7f PUSH2 0x154
0x82 JUMPI
---
0x79: V30 = 0xe5949626
0x7e: V31 = EQ 0xe5949626 V11
0x7f: V32 = 0x154
0x82: JUMPI 0x154 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0xd]
Successors: [0x8d, 0x91]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 DUP1
0x88 ISZERO
0x89 PUSH2 0x91
0x8c JUMPI
---
0x85: JUMPDEST 
0x86: V33 = CALLVALUE
0x88: V34 = ISZERO V33
0x89: V35 = 0x91
0x8c: JUMPI 0x91 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V33]
Exit stack: [V11, V33]

================================

Block 0x8d
[0x8d:0x90]
---
Predecessors: [0x85]
Successors: []
---
0x8d PUSH1 0x0
0x8f DUP1
0x90 REVERT
---
0x8d: V36 = 0x0
0x90: REVERT 0x0 0x0
---
Entry stack: [V11, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V33]

================================

Block 0x91
[0x91:0xaf]
---
Predecessors: [0x85]
Successors: [0x188]
---
0x91 JUMPDEST
0x92 POP
0x93 PUSH2 0xb0
0x96 PUSH1 0x4
0x98 DUP1
0x99 CALLDATASIZE
0x9a SUB
0x9b DUP2
0x9c ADD
0x9d SWAP1
0x9e DUP1
0x9f DUP1
0xa0 CALLDATALOAD
0xa1 SWAP1
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 SWAP1
0xa6 SWAP3
0xa7 SWAP2
0xa8 SWAP1
0xa9 POP
0xaa POP
0xab POP
0xac PUSH2 0x188
0xaf JUMP
---
0x91: JUMPDEST 
0x93: V37 = 0xb0
0x96: V38 = 0x4
0x99: V39 = CALLDATASIZE
0x9a: V40 = SUB V39 0x4
0x9c: V41 = ADD 0x4 V40
0xa0: V42 = CALLDATALOAD 0x4
0xa2: V43 = 0x20
0xa4: V44 = ADD 0x20 0x4
0xac: V45 = 0x188
0xaf: JUMP 0x188
---
Entry stack: [V11, V33]
Stack pops: 1
Stack additions: [0xb0, V42]
Exit stack: [V11, 0xb0, V42]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: [0x24a]
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb2
[0xb2:0xb9]
---
Predecessors: [0x41]
Successors: [0xba, 0xbe]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 DUP1
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb2: JUMPDEST 
0xb3: V46 = CALLVALUE
0xb5: V47 = ISZERO V46
0xb6: V48 = 0xbe
0xb9: JUMPI 0xbe V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V46]
Exit stack: [V11, V46]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb2]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V49 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V11, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V46]

================================

Block 0xbe
[0xbe:0xc6]
---
Predecessors: [0xb2]
Successors: [0x24e]
---
0xbe JUMPDEST
0xbf POP
0xc0 PUSH2 0xc7
0xc3 PUSH2 0x24e
0xc6 JUMP
---
0xbe: JUMPDEST 
0xc0: V50 = 0xc7
0xc3: V51 = 0x24e
0xc6: JUMP 0x24e
---
Entry stack: [V11, V46]
Stack pops: 1
Stack additions: [0xc7]
Exit stack: [V11, 0xc7]

================================

Block 0xc7
[0xc7:0xc8]
---
Predecessors: []
Successors: []
---
0xc7 JUMPDEST
0xc8 STOP
---
0xc7: JUMPDEST 
0xc8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc9
[0xc9:0xf0]
---
Predecessors: [0x4c]
Successors: [0x2e3]
---
0xc9 JUMPDEST
0xca PUSH2 0xf1
0xcd PUSH1 0x4
0xcf DUP1
0xd0 CALLDATASIZE
0xd1 SUB
0xd2 DUP2
0xd3 ADD
0xd4 SWAP1
0xd5 DUP1
0xd6 DUP1
0xd7 CALLDATALOAD
0xd8 SWAP1
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP1
0xdd SWAP3
0xde SWAP2
0xdf SWAP1
0xe0 DUP1
0xe1 CALLDATALOAD
0xe2 SWAP1
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP1
0xe7 SWAP3
0xe8 SWAP2
0xe9 SWAP1
0xea POP
0xeb POP
0xec POP
0xed PUSH2 0x2e3
0xf0 JUMP
---
0xc9: JUMPDEST 
0xca: V52 = 0xf1
0xcd: V53 = 0x4
0xd0: V54 = CALLDATASIZE
0xd1: V55 = SUB V54 0x4
0xd3: V56 = ADD 0x4 V55
0xd7: V57 = CALLDATALOAD 0x4
0xd9: V58 = 0x20
0xdb: V59 = ADD 0x20 0x4
0xe1: V60 = CALLDATALOAD 0x24
0xe3: V61 = 0x20
0xe5: V62 = ADD 0x20 0x24
0xed: V63 = 0x2e3
0xf0: JUMP 0x2e3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf1, V57, V60]
Exit stack: [V11, 0xf1, V57, V60]

================================

Block 0xf1
[0xf1:0xf2]
---
Predecessors: [0x2ee]
Successors: []
---
0xf1 JUMPDEST
0xf2 STOP
---
0xf1: JUMPDEST 
0xf2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf3
[0xf3:0x110]
---
Predecessors: [0x57]
Successors: [0x2f2]
---
0xf3 JUMPDEST
0xf4 PUSH2 0x111
0xf7 PUSH1 0x4
0xf9 DUP1
0xfa CALLDATASIZE
0xfb SUB
0xfc DUP2
0xfd ADD
0xfe SWAP1
0xff DUP1
0x100 DUP1
0x101 CALLDATALOAD
0x102 SWAP1
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP1
0x107 SWAP3
0x108 SWAP2
0x109 SWAP1
0x10a POP
0x10b POP
0x10c POP
0x10d PUSH2 0x2f2
0x110 JUMP
---
0xf3: JUMPDEST 
0xf4: V64 = 0x111
0xf7: V65 = 0x4
0xfa: V66 = CALLDATASIZE
0xfb: V67 = SUB V66 0x4
0xfd: V68 = ADD 0x4 V67
0x101: V69 = CALLDATALOAD 0x4
0x103: V70 = 0x20
0x105: V71 = ADD 0x20 0x4
0x10d: V72 = 0x2f2
0x110: JUMP 0x2f2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x111, V69]
Exit stack: [V11, 0x111, V69]

================================

Block 0x111
[0x111:0x112]
---
Predecessors: [0x2fc]
Successors: []
---
0x111 JUMPDEST
0x112 STOP
---
0x111: JUMPDEST 
0x112: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x113
[0x113:0x13a]
---
Predecessors: [0x62]
Successors: [0x2ff]
---
0x113 JUMPDEST
0x114 PUSH2 0x13b
0x117 PUSH1 0x4
0x119 DUP1
0x11a CALLDATASIZE
0x11b SUB
0x11c DUP2
0x11d ADD
0x11e SWAP1
0x11f DUP1
0x120 DUP1
0x121 CALLDATALOAD
0x122 SWAP1
0x123 PUSH1 0x20
0x125 ADD
0x126 SWAP1
0x127 SWAP3
0x128 SWAP2
0x129 SWAP1
0x12a DUP1
0x12b CALLDATALOAD
0x12c SWAP1
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP1
0x131 SWAP3
0x132 SWAP2
0x133 SWAP1
0x134 POP
0x135 POP
0x136 POP
0x137 PUSH2 0x2ff
0x13a JUMP
---
0x113: JUMPDEST 
0x114: V73 = 0x13b
0x117: V74 = 0x4
0x11a: V75 = CALLDATASIZE
0x11b: V76 = SUB V75 0x4
0x11d: V77 = ADD 0x4 V76
0x121: V78 = CALLDATALOAD 0x4
0x123: V79 = 0x20
0x125: V80 = ADD 0x20 0x4
0x12b: V81 = CALLDATALOAD 0x24
0x12d: V82 = 0x20
0x12f: V83 = ADD 0x20 0x24
0x137: V84 = 0x2ff
0x13a: JUMP 0x2ff
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x13b, V78, V81]
Exit stack: [V11, 0x13b, V78, V81]

================================

Block 0x13b
[0x13b:0x13c]
---
Predecessors: [0x474]
Successors: []
---
0x13b JUMPDEST
0x13c STOP
---
0x13b: JUMPDEST 
0x13c: STOP 
---
Entry stack: [V11, 0x111, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, S0]

================================

Block 0x13d
[0x13d:0x144]
---
Predecessors: [0x6d]
Successors: [0x145, 0x149]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f DUP1
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13d: JUMPDEST 
0x13e: V85 = CALLVALUE
0x140: V86 = ISZERO V85
0x141: V87 = 0x149
0x144: JUMPI 0x149 V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V11, V85]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13d]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V88 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V11, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V85]

================================

Block 0x149
[0x149:0x151]
---
Predecessors: [0x13d]
Successors: [0x47a]
---
0x149 JUMPDEST
0x14a POP
0x14b PUSH2 0x152
0x14e PUSH2 0x47a
0x151 JUMP
---
0x149: JUMPDEST 
0x14b: V89 = 0x152
0x14e: V90 = 0x47a
0x151: JUMP 0x47a
---
Entry stack: [V11, V85]
Stack pops: 1
Stack additions: [0x152]
Exit stack: [V11, 0x152]

================================

Block 0x152
[0x152:0x153]
---
Predecessors: [0x553]
Successors: []
---
0x152 JUMPDEST
0x153 STOP
---
0x152: JUMPDEST 
0x153: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x154
[0x154:0x185]
---
Predecessors: [0x78]
Successors: [0x556]
---
0x154 JUMPDEST
0x155 PUSH2 0x186
0x158 PUSH1 0x4
0x15a DUP1
0x15b CALLDATASIZE
0x15c SUB
0x15d DUP2
0x15e ADD
0x15f SWAP1
0x160 DUP1
0x161 DUP1
0x162 CALLDATALOAD
0x163 SWAP1
0x164 PUSH1 0x20
0x166 ADD
0x167 SWAP1
0x168 SWAP3
0x169 SWAP2
0x16a SWAP1
0x16b DUP1
0x16c CALLDATALOAD
0x16d SWAP1
0x16e PUSH1 0x20
0x170 ADD
0x171 SWAP1
0x172 SWAP3
0x173 SWAP2
0x174 SWAP1
0x175 DUP1
0x176 CALLDATALOAD
0x177 SWAP1
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP1
0x17c SWAP3
0x17d SWAP2
0x17e SWAP1
0x17f POP
0x180 POP
0x181 POP
0x182 PUSH2 0x556
0x185 JUMP
---
0x154: JUMPDEST 
0x155: V91 = 0x186
0x158: V92 = 0x4
0x15b: V93 = CALLDATASIZE
0x15c: V94 = SUB V93 0x4
0x15e: V95 = ADD 0x4 V94
0x162: V96 = CALLDATALOAD 0x4
0x164: V97 = 0x20
0x166: V98 = ADD 0x20 0x4
0x16c: V99 = CALLDATALOAD 0x24
0x16e: V100 = 0x20
0x170: V101 = ADD 0x20 0x24
0x176: V102 = CALLDATALOAD 0x44
0x178: V103 = 0x20
0x17a: V104 = ADD 0x20 0x44
0x182: V105 = 0x556
0x185: JUMP 0x556
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x186, V96, V99, V102]
Exit stack: [V11, 0x186, V96, V99, V102]

================================

Block 0x186
[0x186:0x187]
---
Predecessors: [0x6e2]
Successors: []
---
0x186 JUMPDEST
0x187 STOP
---
0x186: JUMPDEST 
0x187: STOP 
---
Entry stack: [V11, 0xf1, V57, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V57, S0]

================================

Block 0x188
[0x188:0x1de]
---
Predecessors: [0x91]
Successors: [0x1df, 0x1e3]
---
0x188 JUMPDEST
0x189 PUSH1 0x0
0x18b DUP1
0x18c SWAP1
0x18d SLOAD
0x18e SWAP1
0x18f PUSH2 0x100
0x192 EXP
0x193 SWAP1
0x194 DIV
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 CALLER
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 AND
0x1d8 EQ
0x1d9 ISZERO
0x1da ISZERO
0x1db PUSH2 0x1e3
0x1de JUMPI
---
0x188: JUMPDEST 
0x189: V106 = 0x0
0x18d: V107 = S[0x0]
0x18f: V108 = 0x100
0x192: V109 = EXP 0x100 0x0
0x194: V110 = DIV V107 0x1
0x195: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1ab: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1c1: V115 = CALLER
0x1c2: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1d8: V118 = EQ V117 V114
0x1d9: V119 = ISZERO V118
0x1da: V120 = ISZERO V119
0x1db: V121 = 0x1e3
0x1de: JUMPI 0x1e3 V120
---
Entry stack: [V11, 0xb0, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V42]

================================

Block 0x1df
[0x1df:0x1e2]
---
Predecessors: [0x188]
Successors: []
---
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 REVERT
---
0x1df: V122 = 0x0
0x1e2: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V42]

================================

Block 0x1e3
[0x1e3:0x240]
---
Predecessors: [0x188]
Successors: [0x241, 0x24a]
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 SWAP1
0x1e8 SLOAD
0x1e9 SWAP1
0x1ea PUSH2 0x100
0x1ed EXP
0x1ee SWAP1
0x1ef DIV
0x1f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x205 AND
0x206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21b AND
0x21c PUSH2 0x8fc
0x21f DUP3
0x220 SWAP1
0x221 DUP2
0x222 ISZERO
0x223 MUL
0x224 SWAP1
0x225 PUSH1 0x40
0x227 MLOAD
0x228 PUSH1 0x0
0x22a PUSH1 0x40
0x22c MLOAD
0x22d DUP1
0x22e DUP4
0x22f SUB
0x230 DUP2
0x231 DUP6
0x232 DUP9
0x233 DUP9
0x234 CALL
0x235 SWAP4
0x236 POP
0x237 POP
0x238 POP
0x239 POP
0x23a ISZERO
0x23b DUP1
0x23c ISZERO
0x23d PUSH2 0x24a
0x240 JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V123 = 0x0
0x1e8: V124 = S[0x0]
0x1ea: V125 = 0x100
0x1ed: V126 = EXP 0x100 0x0
0x1ef: V127 = DIV V124 0x1
0x1f0: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x205: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x206: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x21c: V132 = 0x8fc
0x222: V133 = ISZERO V42
0x223: V134 = MUL V133 0x8fc
0x225: V135 = 0x40
0x227: V136 = M[0x40]
0x228: V137 = 0x0
0x22a: V138 = 0x40
0x22c: V139 = M[0x40]
0x22f: V140 = SUB V136 V139
0x234: V141 = CALL V134 V131 V42 V139 V140 V139 0x0
0x23a: V142 = ISZERO V141
0x23c: V143 = ISZERO V142
0x23d: V144 = 0x24a
0x240: JUMPI 0x24a V143
---
Entry stack: [V11, 0xb0, V42]
Stack pops: 1
Stack additions: [S0, V142]
Exit stack: [V11, 0xb0, V42, V142]

================================

Block 0x241
[0x241:0x249]
---
Predecessors: [0x1e3]
Successors: []
---
0x241 RETURNDATASIZE
0x242 PUSH1 0x0
0x244 DUP1
0x245 RETURNDATACOPY
0x246 RETURNDATASIZE
0x247 PUSH1 0x0
0x249 REVERT
---
0x241: V145 = RETURNDATASIZE
0x242: V146 = 0x0
0x245: RETURNDATACOPY 0x0 0x0 V145
0x246: V147 = RETURNDATASIZE
0x247: V148 = 0x0
0x249: REVERT 0x0 V147
---
Entry stack: [V11, 0xb0, V42, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V42, V142]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x1e3]
Successors: [0xb0]
---
0x24a JUMPDEST
0x24b POP
0x24c POP
0x24d JUMP
---
0x24a: JUMPDEST 
0x24d: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V42, V142]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x24e
[0x24e:0x2a4]
---
Predecessors: [0xbe]
Successors: [0x2a5, 0x2a9]
---
0x24e JUMPDEST
0x24f PUSH1 0x0
0x251 DUP1
0x252 SWAP1
0x253 SLOAD
0x254 SWAP1
0x255 PUSH2 0x100
0x258 EXP
0x259 SWAP1
0x25a DIV
0x25b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x270 AND
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 AND
0x287 CALLER
0x288 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29d AND
0x29e EQ
0x29f ISZERO
0x2a0 ISZERO
0x2a1 PUSH2 0x2a9
0x2a4 JUMPI
---
0x24e: JUMPDEST 
0x24f: V149 = 0x0
0x253: V150 = S[0x0]
0x255: V151 = 0x100
0x258: V152 = EXP 0x100 0x0
0x25a: V153 = DIV V150 0x1
0x25b: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x270: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x271: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x287: V158 = CALLER
0x288: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x29e: V161 = EQ V160 V157
0x29f: V162 = ISZERO V161
0x2a0: V163 = ISZERO V162
0x2a1: V164 = 0x2a9
0x2a4: JUMPI 0x2a9 V163
---
Entry stack: [V11, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7]

================================

Block 0x2a5
[0x2a5:0x2a8]
---
Predecessors: [0x24e]
Successors: []
---
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 REVERT
---
0x2a5: V165 = 0x0
0x2a8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7]

================================

Block 0x2a9
[0x2a9:0x2e2]
---
Predecessors: [0x24e]
Successors: []
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad SWAP1
0x2ae SLOAD
0x2af SWAP1
0x2b0 PUSH2 0x100
0x2b3 EXP
0x2b4 SWAP1
0x2b5 DIV
0x2b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cb AND
0x2cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e1 AND
0x2e2 SELFDESTRUCT
---
0x2a9: JUMPDEST 
0x2aa: V166 = 0x0
0x2ae: V167 = S[0x0]
0x2b0: V168 = 0x100
0x2b3: V169 = EXP 0x100 0x0
0x2b5: V170 = DIV V167 0x1
0x2b6: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cb: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x2cc: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e1: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2e2: SELFDESTRUCT V174
---
Entry stack: [V11, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7]

================================

Block 0x2e3
[0x2e3:0x2ed]
---
Predecessors: [0xc9]
Successors: [0x556]
---
0x2e3 JUMPDEST
0x2e4 PUSH2 0x2ee
0x2e7 DUP3
0x2e8 CALLVALUE
0x2e9 DUP4
0x2ea PUSH2 0x556
0x2ed JUMP
---
0x2e3: JUMPDEST 
0x2e4: V175 = 0x2ee
0x2e8: V176 = CALLVALUE
0x2ea: V177 = 0x556
0x2ed: JUMP 0x556
---
Entry stack: [V11, 0xf1, V57, V60]
Stack pops: 2
Stack additions: [S1, S0, 0x2ee, S1, V176, S0]
Exit stack: [V11, 0xf1, V57, V60, 0x2ee, V57, V176, V60]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x6e2]
Successors: [0xf1]
---
0x2ee JUMPDEST
0x2ef POP
0x2f0 POP
0x2f1 JUMP
---
0x2ee: JUMPDEST 
0x2f1: JUMP 0xf1
---
Entry stack: [V11, 0xf1, V57, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f2
[0x2f2:0x2fb]
---
Predecessors: [0xf3]
Successors: [0x2ff]
---
0x2f2 JUMPDEST
0x2f3 PUSH2 0x2fc
0x2f6 DUP2
0x2f7 CALLVALUE
0x2f8 PUSH2 0x2ff
0x2fb JUMP
---
0x2f2: JUMPDEST 
0x2f3: V178 = 0x2fc
0x2f7: V179 = CALLVALUE
0x2f8: V180 = 0x2ff
0x2fb: JUMP 0x2ff
---
Entry stack: [V11, 0x111, V69]
Stack pops: 1
Stack additions: [S0, 0x2fc, S0, V179]
Exit stack: [V11, 0x111, V69, 0x2fc, V69, V179]

================================

Block 0x2fc
[0x2fc:0x2fe]
---
Predecessors: [0x474]
Successors: [0x111]
---
0x2fc JUMPDEST
0x2fd POP
0x2fe JUMP
---
0x2fc: JUMPDEST 
0x2fe: JUMP 0x111
---
Entry stack: [V11, 0x111, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ff
[0x2ff:0x357]
---
Predecessors: [0x113, 0x2f2]
Successors: [0x358, 0x388]
---
0x2ff JUMPDEST
0x300 PUSH1 0x0
0x302 DUP1
0x303 PUSH1 0x0
0x305 DUP1
0x306 SWAP1
0x307 SLOAD
0x308 SWAP1
0x309 PUSH2 0x100
0x30c EXP
0x30d SWAP1
0x30e DIV
0x30f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x324 AND
0x325 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33a AND
0x33b CALLER
0x33c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x351 AND
0x352 EQ
0x353 DUP1
0x354 PUSH2 0x388
0x357 JUMPI
---
0x2ff: JUMPDEST 
0x300: V181 = 0x0
0x303: V182 = 0x0
0x307: V183 = S[0x0]
0x309: V184 = 0x100
0x30c: V185 = EXP 0x100 0x0
0x30e: V186 = DIV V183 0x1
0x30f: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x324: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x325: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x33a: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x33b: V191 = CALLER
0x33c: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x351: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x352: V194 = EQ V193 V190
0x354: V195 = 0x388
0x357: JUMPI 0x388 V194
---
Entry stack: [V11, 0x111, S3, {0x13b, 0x2fc}, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, V194]
Exit stack: [V11, 0x111, S3, {0x13b, 0x2fc}, S1, S0, 0x0, 0x0, V194]

================================

Block 0x358
[0x358:0x387]
---
Predecessors: [0x2ff]
Successors: [0x388]
---
0x358 POP
0x359 ADDRESS
0x35a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36f AND
0x370 CALLER
0x371 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x386 AND
0x387 EQ
---
0x359: V196 = ADDRESS
0x35a: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x370: V199 = CALLER
0x371: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x386: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x387: V202 = EQ V201 V198
---
Entry stack: [V11, 0x111, S6, {0x13b, 0x2fc}, S4, S3, 0x0, 0x0, V194]
Stack pops: 1
Stack additions: [V202]
Exit stack: [V11, 0x111, S6, {0x13b, 0x2fc}, S4, S3, 0x0, 0x0, V202]

================================

Block 0x388
[0x388:0x38e]
---
Predecessors: [0x2ff, 0x358]
Successors: [0x38f, 0x393]
---
0x388 JUMPDEST
0x389 ISZERO
0x38a ISZERO
0x38b PUSH2 0x393
0x38e JUMPI
---
0x388: JUMPDEST 
0x389: V203 = ISZERO S0
0x38a: V204 = ISZERO V203
0x38b: V205 = 0x393
0x38e: JUMPI 0x393 V204
---
Entry stack: [V11, 0x111, S6, {0x13b, 0x2fc}, S4, S3, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x111, S6, {0x13b, 0x2fc}, S4, S3, 0x0, 0x0]

================================

Block 0x38f
[0x38f:0x392]
---
Predecessors: [0x388]
Successors: []
---
0x38f PUSH1 0x0
0x391 DUP1
0x392 REVERT
---
0x38f: V206 = 0x0
0x392: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, S5, {0x13b, 0x2fc}, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, S5, {0x13b, 0x2fc}, S3, S2, 0x0, 0x0]

================================

Block 0x393
[0x393:0x42e]
---
Predecessors: [0x388]
Successors: [0x42f, 0x433]
---
0x393 JUMPDEST
0x394 ADDRESS
0x395 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3aa AND
0x3ab BALANCE
0x3ac SWAP2
0x3ad POP
0x3ae PUSH20 0x12ec859d18f6ed44393672c07f0c47497cf53aca
0x3c3 SWAP1
0x3c4 POP
0x3c5 DUP1
0x3c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3db AND
0x3dc PUSH4 0xdc6dd152
0x3e1 DUP5
0x3e2 DUP7
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 DUP4
0x3e7 PUSH4 0xffffffff
0x3ec AND
0x3ed PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x40b MUL
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x4
0x410 ADD
0x411 DUP1
0x412 DUP3
0x413 DUP2
0x414 MSTORE
0x415 PUSH1 0x20
0x417 ADD
0x418 SWAP2
0x419 POP
0x41a POP
0x41b PUSH1 0x0
0x41d PUSH1 0x40
0x41f MLOAD
0x420 DUP1
0x421 DUP4
0x422 SUB
0x423 DUP2
0x424 DUP6
0x425 DUP9
0x426 DUP1
0x427 EXTCODESIZE
0x428 ISZERO
0x429 DUP1
0x42a ISZERO
0x42b PUSH2 0x433
0x42e JUMPI
---
0x393: JUMPDEST 
0x394: V207 = ADDRESS
0x395: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x3aa: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x3ab: V210 = BALANCE V209
0x3ae: V211 = 0x12ec859d18f6ed44393672c07f0c47497cf53aca
0x3c6: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x3db: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x12ec859d18f6ed44393672c07f0c47497cf53aca
0x3dc: V214 = 0xdc6dd152
0x3e3: V215 = 0x40
0x3e5: V216 = M[0x40]
0x3e7: V217 = 0xffffffff
0x3ec: V218 = AND 0xffffffff 0xdc6dd152
0x3ed: V219 = 0x100000000000000000000000000000000000000000000000000000000
0x40b: V220 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xdc6dd152
0x40d: M[V216] = 0xdc6dd15200000000000000000000000000000000000000000000000000000000
0x40e: V221 = 0x4
0x410: V222 = ADD 0x4 V216
0x414: M[V222] = S3
0x415: V223 = 0x20
0x417: V224 = ADD 0x20 V222
0x41b: V225 = 0x0
0x41d: V226 = 0x40
0x41f: V227 = M[0x40]
0x422: V228 = SUB V224 V227
0x427: V229 = EXTCODESIZE 0x12ec859d18f6ed44393672c07f0c47497cf53aca
0x428: V230 = ISZERO V229
0x42a: V231 = ISZERO V230
0x42b: V232 = 0x433
0x42e: JUMPI 0x433 V231
---
Entry stack: [V11, 0x111, S5, {0x13b, 0x2fc}, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V210, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0xdc6dd152, S2, V224, 0x0, V227, V228, V227, S2, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, V230]
Exit stack: [V11, 0x111, S5, {0x13b, 0x2fc}, S3, S2, V210, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0xdc6dd152, S2, V224, 0x0, V227, V228, V227, S2, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, V230]

================================

Block 0x42f
[0x42f:0x432]
---
Predecessors: [0x393]
Successors: []
---
0x42f PUSH1 0x0
0x431 DUP1
0x432 REVERT
---
0x42f: V233 = 0x0
0x432: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, S16, {0x13b, 0x2fc}, S14, S13, V210, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0xdc6dd152, S8, V224, 0x0, V227, V228, V227, S2, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, S16, {0x13b, 0x2fc}, S14, S13, V210, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0xdc6dd152, S8, V224, 0x0, V227, V228, V227, S2, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, V230]

================================

Block 0x433
[0x433:0x43d]
---
Predecessors: [0x393]
Successors: [0x43e, 0x447]
---
0x433 JUMPDEST
0x434 POP
0x435 GAS
0x436 CALL
0x437 ISZERO
0x438 DUP1
0x439 ISZERO
0x43a PUSH2 0x447
0x43d JUMPI
---
0x433: JUMPDEST 
0x435: V234 = GAS
0x436: V235 = CALL V234 0x12ec859d18f6ed44393672c07f0c47497cf53aca S2 V227 V228 V227 0x0
0x437: V236 = ISZERO V235
0x439: V237 = ISZERO V236
0x43a: V238 = 0x447
0x43d: JUMPI 0x447 V237
---
Entry stack: [V11, 0x111, S16, {0x13b, 0x2fc}, S14, S13, V210, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0xdc6dd152, S8, V224, 0x0, V227, V228, V227, S2, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, V230]
Stack pops: 7
Stack additions: [V236]
Exit stack: [V11, 0x111, S16, {0x13b, 0x2fc}, S14, S13, V210, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0xdc6dd152, S8, V224, V236]

================================

Block 0x43e
[0x43e:0x446]
---
Predecessors: [0x433]
Successors: []
---
0x43e RETURNDATASIZE
0x43f PUSH1 0x0
0x441 DUP1
0x442 RETURNDATACOPY
0x443 RETURNDATASIZE
0x444 PUSH1 0x0
0x446 REVERT
---
0x43e: V239 = RETURNDATASIZE
0x43f: V240 = 0x0
0x442: RETURNDATACOPY 0x0 0x0 V239
0x443: V241 = RETURNDATASIZE
0x444: V242 = 0x0
0x446: REVERT 0x0 V241
---
Entry stack: [V11, 0x111, S10, {0x13b, 0x2fc}, S8, S7, S6, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0xdc6dd152, S2, S1, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, S10, {0x13b, 0x2fc}, S8, S7, S6, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0xdc6dd152, S2, S1, V236]

================================

Block 0x447
[0x447:0x46f]
---
Predecessors: [0x433]
Successors: [0x470, 0x474]
---
0x447 JUMPDEST
0x448 POP
0x449 POP
0x44a POP
0x44b POP
0x44c POP
0x44d PUSH1 0x1
0x44f DUP3
0x450 ADD
0x451 ADDRESS
0x452 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x467 AND
0x468 BALANCE
0x469 GT
0x46a ISZERO
0x46b ISZERO
0x46c PUSH2 0x474
0x46f JUMPI
---
0x447: JUMPDEST 
0x44d: V243 = 0x1
0x450: V244 = ADD S6 0x1
0x451: V245 = ADDRESS
0x452: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x467: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x468: V248 = BALANCE V247
0x469: V249 = GT V248 V244
0x46a: V250 = ISZERO V249
0x46b: V251 = ISZERO V250
0x46c: V252 = 0x474
0x46f: JUMPI 0x474 V251
---
Entry stack: [V11, 0x111, S10, {0x13b, 0x2fc}, S8, S7, S6, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0x12ec859d18f6ed44393672c07f0c47497cf53aca, 0xdc6dd152, S2, S1, V236]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x111, S10, {0x13b, 0x2fc}, S8, S7, S6, 0x12ec859d18f6ed44393672c07f0c47497cf53aca]

================================

Block 0x470
[0x470:0x473]
---
Predecessors: [0x447]
Successors: []
---
0x470 PUSH1 0x0
0x472 DUP1
0x473 REVERT
---
0x470: V253 = 0x0
0x473: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, S5, {0x13b, 0x2fc}, S3, S2, S1, 0x12ec859d18f6ed44393672c07f0c47497cf53aca]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, S5, {0x13b, 0x2fc}, S3, S2, S1, 0x12ec859d18f6ed44393672c07f0c47497cf53aca]

================================

Block 0x474
[0x474:0x479]
---
Predecessors: [0x447]
Successors: [0x13b, 0x2fc]
---
0x474 JUMPDEST
0x475 POP
0x476 POP
0x477 POP
0x478 POP
0x479 JUMP
---
0x474: JUMPDEST 
0x479: JUMP {0x13b, 0x2fc}
---
Entry stack: [V11, 0x111, S5, {0x13b, 0x2fc}, S3, S2, S1, 0x12ec859d18f6ed44393672c07f0c47497cf53aca]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x111, S5]

================================

Block 0x47a
[0x47a:0x4d0]
---
Predecessors: [0x149]
Successors: [0x4d1, 0x4d5]
---
0x47a JUMPDEST
0x47b PUSH1 0x0
0x47d DUP1
0x47e SWAP1
0x47f SLOAD
0x480 SWAP1
0x481 PUSH2 0x100
0x484 EXP
0x485 SWAP1
0x486 DIV
0x487 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49c AND
0x49d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b2 AND
0x4b3 CALLER
0x4b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c9 AND
0x4ca EQ
0x4cb ISZERO
0x4cc ISZERO
0x4cd PUSH2 0x4d5
0x4d0 JUMPI
---
0x47a: JUMPDEST 
0x47b: V254 = 0x0
0x47f: V255 = S[0x0]
0x481: V256 = 0x100
0x484: V257 = EXP 0x100 0x0
0x486: V258 = DIV V255 0x1
0x487: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x49c: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x49d: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b2: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x4b3: V263 = CALLER
0x4b4: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c9: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x4ca: V266 = EQ V265 V262
0x4cb: V267 = ISZERO V266
0x4cc: V268 = ISZERO V267
0x4cd: V269 = 0x4d5
0x4d0: JUMPI 0x4d5 V268
---
Entry stack: [V11, 0x152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x152]

================================

Block 0x4d1
[0x4d1:0x4d4]
---
Predecessors: [0x47a]
Successors: []
---
0x4d1 PUSH1 0x0
0x4d3 DUP1
0x4d4 REVERT
---
0x4d1: V270 = 0x0
0x4d4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x152]

================================

Block 0x4d5
[0x4d5:0x549]
---
Predecessors: [0x47a]
Successors: [0x54a, 0x553]
---
0x4d5 JUMPDEST
0x4d6 PUSH1 0x0
0x4d8 DUP1
0x4d9 SWAP1
0x4da SLOAD
0x4db SWAP1
0x4dc PUSH2 0x100
0x4df EXP
0x4e0 SWAP1
0x4e1 DIV
0x4e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f7 AND
0x4f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50d AND
0x50e PUSH2 0x8fc
0x511 ADDRESS
0x512 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x527 AND
0x528 BALANCE
0x529 SWAP1
0x52a DUP2
0x52b ISZERO
0x52c MUL
0x52d SWAP1
0x52e PUSH1 0x40
0x530 MLOAD
0x531 PUSH1 0x0
0x533 PUSH1 0x40
0x535 MLOAD
0x536 DUP1
0x537 DUP4
0x538 SUB
0x539 DUP2
0x53a DUP6
0x53b DUP9
0x53c DUP9
0x53d CALL
0x53e SWAP4
0x53f POP
0x540 POP
0x541 POP
0x542 POP
0x543 ISZERO
0x544 DUP1
0x545 ISZERO
0x546 PUSH2 0x553
0x549 JUMPI
---
0x4d5: JUMPDEST 
0x4d6: V271 = 0x0
0x4da: V272 = S[0x0]
0x4dc: V273 = 0x100
0x4df: V274 = EXP 0x100 0x0
0x4e1: V275 = DIV V272 0x1
0x4e2: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f7: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x4f8: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x50d: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x50e: V280 = 0x8fc
0x511: V281 = ADDRESS
0x512: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x527: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x528: V284 = BALANCE V283
0x52b: V285 = ISZERO V284
0x52c: V286 = MUL V285 0x8fc
0x52e: V287 = 0x40
0x530: V288 = M[0x40]
0x531: V289 = 0x0
0x533: V290 = 0x40
0x535: V291 = M[0x40]
0x538: V292 = SUB V288 V291
0x53d: V293 = CALL V286 V279 V284 V291 V292 V291 0x0
0x543: V294 = ISZERO V293
0x545: V295 = ISZERO V294
0x546: V296 = 0x553
0x549: JUMPI 0x553 V295
---
Entry stack: [V11, 0x152]
Stack pops: 0
Stack additions: [V294]
Exit stack: [V11, 0x152, V294]

================================

Block 0x54a
[0x54a:0x552]
---
Predecessors: [0x4d5]
Successors: []
---
0x54a RETURNDATASIZE
0x54b PUSH1 0x0
0x54d DUP1
0x54e RETURNDATACOPY
0x54f RETURNDATASIZE
0x550 PUSH1 0x0
0x552 REVERT
---
0x54a: V297 = RETURNDATASIZE
0x54b: V298 = 0x0
0x54e: RETURNDATACOPY 0x0 0x0 V297
0x54f: V299 = RETURNDATASIZE
0x550: V300 = 0x0
0x552: REVERT 0x0 V299
---
Entry stack: [V11, 0x152, V294]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x152, V294]

================================

Block 0x553
[0x553:0x555]
---
Predecessors: [0x4d5]
Successors: [0x152]
---
0x553 JUMPDEST
0x554 POP
0x555 JUMP
---
0x553: JUMPDEST 
0x555: JUMP 0x152
---
Entry stack: [V11, 0x152, V294]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x556
[0x556:0x5b2]
---
Predecessors: [0x154, 0x2e3]
Successors: [0x5b3, 0x5b7]
---
0x556 JUMPDEST
0x557 PUSH1 0x0
0x559 DUP1
0x55a PUSH1 0x0
0x55c DUP1
0x55d PUSH1 0x0
0x55f DUP1
0x560 SWAP1
0x561 SLOAD
0x562 SWAP1
0x563 PUSH2 0x100
0x566 EXP
0x567 SWAP1
0x568 DIV
0x569 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57e AND
0x57f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x594 AND
0x595 CALLER
0x596 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ab AND
0x5ac EQ
0x5ad ISZERO
0x5ae ISZERO
0x5af PUSH2 0x5b7
0x5b2 JUMPI
---
0x556: JUMPDEST 
0x557: V301 = 0x0
0x55a: V302 = 0x0
0x55d: V303 = 0x0
0x561: V304 = S[0x0]
0x563: V305 = 0x100
0x566: V306 = EXP 0x100 0x0
0x568: V307 = DIV V304 0x1
0x569: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x57e: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x57f: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x594: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x595: V312 = CALLER
0x596: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ab: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x5ac: V315 = EQ V314 V311
0x5ad: V316 = ISZERO V315
0x5ae: V317 = ISZERO V316
0x5af: V318 = 0x5b7
0x5b2: JUMPI 0x5b7 V317
---
Entry stack: [V11, 0xf1, V57, S4, {0x186, 0x2ee}, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xf1, V57, S4, {0x186, 0x2ee}, S2, S1, S0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5b3
[0x5b3:0x5b6]
---
Predecessors: [0x556]
Successors: []
---
0x5b3 PUSH1 0x0
0x5b5 DUP1
0x5b6 REVERT
---
0x5b3: V319 = 0x0
0x5b6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5b7
[0x5b7:0x60d]
---
Predecessors: [0x556]
Successors: [0x60e]
---
0x5b7 JUMPDEST
0x5b8 PUSH1 0x40
0x5ba MLOAD
0x5bb DUP1
0x5bc DUP1
0x5bd PUSH32 0x70696e67526f6c6c416d6f756e742875696e743235362c75696e743235362900
0x5de DUP2
0x5df MSTORE
0x5e0 POP
0x5e1 PUSH1 0x1f
0x5e3 ADD
0x5e4 SWAP1
0x5e5 POP
0x5e6 PUSH1 0x40
0x5e8 MLOAD
0x5e9 DUP1
0x5ea SWAP2
0x5eb SUB
0x5ec SWAP1
0x5ed SHA3
0x5ee SWAP4
0x5ef POP
0x5f0 ADDRESS
0x5f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x606 AND
0x607 BALANCE
0x608 SWAP3
0x609 POP
0x60a PUSH1 0x0
0x60c SWAP2
0x60d POP
---
0x5b7: JUMPDEST 
0x5b8: V320 = 0x40
0x5ba: V321 = M[0x40]
0x5bd: V322 = 0x70696e67526f6c6c416d6f756e742875696e743235362c75696e743235362900
0x5df: M[V321] = 0x70696e67526f6c6c416d6f756e742875696e743235362c75696e743235362900
0x5e1: V323 = 0x1f
0x5e3: V324 = ADD 0x1f V321
0x5e6: V325 = 0x40
0x5e8: V326 = M[0x40]
0x5eb: V327 = SUB V324 V326
0x5ed: V328 = SHA3 V326 V327
0x5f0: V329 = ADDRESS
0x5f1: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x606: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x607: V332 = BALANCE V331
0x60a: V333 = 0x0
---
Entry stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V328, V332, 0x0, S0]
Exit stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, V328, V332, 0x0, 0x0]

================================

Block 0x60e
[0x60e:0x616]
---
Predecessors: [0x5b7, 0x6af]
Successors: [0x617, 0x6bc]
---
0x60e JUMPDEST
0x60f DUP5
0x610 DUP3
0x611 LT
0x612 ISZERO
0x613 PUSH2 0x6bc
0x616 JUMPI
---
0x60e: JUMPDEST 
0x611: V334 = LT S1 S4
0x612: V335 = ISZERO V334
0x613: V336 = 0x6bc
0x616: JUMPI 0x6bc V335
---
Entry stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x617
[0x617:0x6aa]
---
Predecessors: [0x60e]
Successors: [0x6ab, 0x6af]
---
0x617 ADDRESS
0x618 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62d AND
0x62e DUP5
0x62f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x64d SWAP1
0x64e DIV
0x64f DUP9
0x650 DUP9
0x651 PUSH1 0x40
0x653 MLOAD
0x654 DUP4
0x655 PUSH4 0xffffffff
0x65a AND
0x65b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x679 MUL
0x67a DUP2
0x67b MSTORE
0x67c PUSH1 0x4
0x67e ADD
0x67f DUP1
0x680 DUP4
0x681 DUP2
0x682 MSTORE
0x683 PUSH1 0x20
0x685 ADD
0x686 DUP3
0x687 DUP2
0x688 MSTORE
0x689 PUSH1 0x20
0x68b ADD
0x68c SWAP3
0x68d POP
0x68e POP
0x68f POP
0x690 PUSH1 0x0
0x692 PUSH1 0x40
0x694 MLOAD
0x695 DUP1
0x696 DUP4
0x697 SUB
0x698 DUP2
0x699 PUSH1 0x0
0x69b DUP8
0x69c GAS
0x69d CALL
0x69e SWAP3
0x69f POP
0x6a0 POP
0x6a1 POP
0x6a2 SWAP1
0x6a3 POP
0x6a4 DUP1
0x6a5 ISZERO
0x6a6 ISZERO
0x6a7 PUSH2 0x6af
0x6aa JUMPI
---
0x617: V337 = ADDRESS
0x618: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x62d: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x62f: V340 = 0x100000000000000000000000000000000000000000000000000000000
0x64e: V341 = DIV S3 0x100000000000000000000000000000000000000000000000000000000
0x651: V342 = 0x40
0x653: V343 = M[0x40]
0x655: V344 = 0xffffffff
0x65a: V345 = AND 0xffffffff V341
0x65b: V346 = 0x100000000000000000000000000000000000000000000000000000000
0x679: V347 = MUL 0x100000000000000000000000000000000000000000000000000000000 V345
0x67b: M[V343] = V347
0x67c: V348 = 0x4
0x67e: V349 = ADD 0x4 V343
0x682: M[V349] = S6
0x683: V350 = 0x20
0x685: V351 = ADD 0x20 V349
0x688: M[V351] = S5
0x689: V352 = 0x20
0x68b: V353 = ADD 0x20 V351
0x690: V354 = 0x0
0x692: V355 = 0x40
0x694: V356 = M[0x40]
0x697: V357 = SUB V353 V356
0x699: V358 = 0x0
0x69c: V359 = GAS
0x69d: V360 = CALL V359 V339 0x0 V356 V357 V356 0x0
0x6a5: V361 = ISZERO V360
0x6a6: V362 = ISZERO V361
0x6a7: V363 = 0x6af
0x6aa: JUMPI 0x6af V362
---
Entry stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V360]
Exit stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, V360]

================================

Block 0x6ab
[0x6ab:0x6ae]
---
Predecessors: [0x617]
Successors: [0x6e2]
---
0x6ab PUSH2 0x6e2
0x6ae JUMP
---
0x6ab: V364 = 0x6e2
0x6ae: JUMP 0x6e2
---
Entry stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, V360]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, V360]

================================

Block 0x6af
[0x6af:0x6bb]
---
Predecessors: [0x617]
Successors: [0x60e]
---
0x6af JUMPDEST
0x6b0 DUP2
0x6b1 DUP1
0x6b2 PUSH1 0x1
0x6b4 ADD
0x6b5 SWAP3
0x6b6 POP
0x6b7 POP
0x6b8 PUSH2 0x60e
0x6bb JUMP
---
0x6af: JUMPDEST 
0x6b2: V365 = 0x1
0x6b4: V366 = ADD 0x1 S1
0x6b8: V367 = 0x60e
0x6bb: JUMP 0x60e
---
Entry stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, V360]
Stack pops: 2
Stack additions: [V366, S0]
Exit stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, V366, V360]

================================

Block 0x6bc
[0x6bc:0x6dc]
---
Predecessors: [0x60e]
Successors: [0x6dd, 0x6e1]
---
0x6bc JUMPDEST
0x6bd DUP3
0x6be ADDRESS
0x6bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d4 AND
0x6d5 BALANCE
0x6d6 GT
0x6d7 ISZERO
0x6d8 ISZERO
0x6d9 PUSH2 0x6e1
0x6dc JUMPI
---
0x6bc: JUMPDEST 
0x6be: V368 = ADDRESS
0x6bf: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d4: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x6d5: V371 = BALANCE V370
0x6d6: V372 = GT V371 S2
0x6d7: V373 = ISZERO V372
0x6d8: V374 = ISZERO V373
0x6d9: V375 = 0x6e1
0x6dc: JUMPI 0x6e1 V374
---
Entry stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x6dd
[0x6dd:0x6e0]
---
Predecessors: [0x6bc]
Successors: []
---
0x6dd PUSH1 0x0
0x6df DUP1
0x6e0 REVERT
---
0x6dd: V376 = 0x0
0x6e0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e1
[0x6e1:0x6e1]
---
Predecessors: [0x6bc]
Successors: [0x6e2]
---
0x6e1 JUMPDEST
---
0x6e1: JUMPDEST 
---
Entry stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e2
[0x6e2:0x6ea]
---
Predecessors: [0x6ab, 0x6e1]
Successors: [0x186, 0x2ee]
---
0x6e2 JUMPDEST
0x6e3 POP
0x6e4 POP
0x6e5 POP
0x6e6 POP
0x6e7 POP
0x6e8 POP
0x6e9 POP
0x6ea JUMP
---
0x6e2: JUMPDEST 
0x6ea: JUMP {0x186, 0x2ee}
---
Entry stack: [V11, 0xf1, V57, S8, {0x186, 0x2ee}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0xf1, V57, S8]

================================

Block 0x6eb
[0x6eb:0x719]
---
Predecessors: []
Successors: []
---
0x6eb STOP
0x6ec LOG1
0x6ed PUSH6 0x627a7a723058
0x6f4 SHA3
0x6f5 PC
0x6f6 MISSING 0xd1
0x6f7 GASLIMIT
0x6f8 MISSING 0x2f
0x6f9 STATICCALL
0x6fa SWAP4
0x6fb PUSH30 0x6b8d29025835b546428f319f0ffd134f0840a871a188186d230029
---
0x6eb: STOP 
0x6ec: LOG S0 S1 S2
0x6ed: V377 = 0x627a7a723058
0x6f4: V378 = SHA3 0x627a7a723058 S3
0x6f5: V379 = PC
0x6f6: MISSING 0xd1
0x6f7: V380 = GASLIMIT
0x6f8: MISSING 0x2f
0x6f9: V381 = STATICCALL S0 S1 S2 S3 S4 S5
0x6fb: V382 = 0x6b8d29025835b546428f319f0ffd134f0840a871a188186d230029
---
Entry stack: []
Stack pops: 0
Stack additions: [V379, V378, V380, 0x6b8d29025835b546428f319f0ffd134f0840a871a188186d230029, S9, S6, S7, S8, V381]
Exit stack: []

================================

Function 0:
Public function signature: 0x3457f896
Entry block: 0x85
Exit block: 0xb0
Body: 0x85, 0x8d, 0x91, 0xb0, 0x188, 0x1df, 0x1e3, 0x241, 0x24a

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xb2
Exit block: 0x2a9
Body: 0xb2, 0xba, 0xbe, 0x24e, 0x2a5, 0x2a9

Function 2:
Public function signature: 0x68b39923
Entry block: 0xc9
Exit block: 0xf1
Body: 0xc9, 0xf1, 0x2e3, 0x2ee

Function 3:
Public function signature: 0xb38a4a49
Entry block: 0xf3
Exit block: 0x111
Body: 0xf3, 0x111, 0x2f2, 0x2fc

Function 4:
Public function signature: 0xc79e7eb6
Entry block: 0x113
Exit block: 0x13b
Body: 0x113, 0x13b

Function 5:
Public function signature: 0xd2873cf7
Entry block: 0x13d
Exit block: 0x152
Body: 0x13d, 0x145, 0x149, 0x152, 0x47a, 0x4d1, 0x4d5, 0x54a, 0x553

Function 6:
Public function signature: 0xe5949626
Entry block: 0x154
Exit block: 0x186
Body: 0x154, 0x186

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

Function 8:
Private function
Entry block: 0x556
Exit block: 0x6e2
Body: 0x556, 0x5b7, 0x60e, 0x617, 0x6ab, 0x6af, 0x6bc, 0x6e1, 0x6e2

Function 9:
Private function
Entry block: 0x2ff
Exit block: 0x474
Body: 0x2ff, 0x358, 0x388, 0x393, 0x433, 0x447, 0x474

