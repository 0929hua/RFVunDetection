Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa9
0xa: JUMPI 0xa9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xf1]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x12ea965d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xf1
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x12ea965d
0x20: V14 = EQ V12 0x12ea965d
0x21: V15 = 0xf1
0x24: JUMPI 0xf1 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x113]
---
0x25 DUP1
0x26 PUSH4 0x43062ea7
0x2b EQ
0x2c PUSH2 0x113
0x2f JUMPI
---
0x26: V16 = 0x43062ea7
0x2b: V17 = EQ 0x43062ea7 V12
0x2c: V18 = 0x113
0x2f: JUMPI 0x113 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x128]
---
0x30 DUP1
0x31 PUSH4 0x49df728c
0x36 EQ
0x37 PUSH2 0x128
0x3a JUMPI
---
0x31: V19 = 0x49df728c
0x36: V20 = EQ 0x49df728c V12
0x37: V21 = 0x128
0x3a: JUMPI 0x128 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x146]
---
0x3b DUP1
0x3c PUSH4 0x68d324e7
0x41 EQ
0x42 PUSH2 0x146
0x45 JUMPI
---
0x3c: V22 = 0x68d324e7
0x41: V23 = EQ 0x68d324e7 V12
0x42: V24 = 0x146
0x45: JUMPI 0x146 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x164]
---
0x46 DUP1
0x47 PUSH4 0x7362377b
0x4c EQ
0x4d PUSH2 0x164
0x50 JUMPI
---
0x47: V25 = 0x7362377b
0x4c: V26 = EQ 0x7362377b V12
0x4d: V27 = 0x164
0x50: JUMPI 0x164 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x176]
---
0x51 DUP1
0x52 PUSH4 0x7770bd15
0x57 EQ
0x58 PUSH2 0x176
0x5b JUMPI
---
0x52: V28 = 0x7770bd15
0x57: V29 = EQ 0x7770bd15 V12
0x58: V30 = 0x176
0x5b: JUMPI 0x176 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1a2]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x1a2
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x1a2
0x66: JUMPI 0x1a2 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1ce]
---
0x67 DUP1
0x68 PUSH4 0x9665b658
0x6d EQ
0x6e PUSH2 0x1ce
0x71 JUMPI
---
0x68: V34 = 0x9665b658
0x6d: V35 = EQ 0x9665b658 V12
0x6e: V36 = 0x1ce
0x71: JUMPI 0x1ce V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1ec]
---
0x72 DUP1
0x73 PUSH4 0xab0fe874
0x78 EQ
0x79 PUSH2 0x1ec
0x7c JUMPI
---
0x73: V37 = 0xab0fe874
0x78: V38 = EQ 0xab0fe874 V12
0x79: V39 = 0x1ec
0x7c: JUMPI 0x1ec V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x20e]
---
0x7d DUP1
0x7e PUSH4 0xc34c08e5
0x83 EQ
0x84 PUSH2 0x20e
0x87 JUMPI
---
0x7e: V40 = 0xc34c08e5
0x83: V41 = EQ 0xc34c08e5 V12
0x84: V42 = 0x20e
0x87: JUMPI 0x20e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x23a]
---
0x88 DUP1
0x89 PUSH4 0xc59b5562
0x8e EQ
0x8f PUSH2 0x23a
0x92 JUMPI
---
0x89: V43 = 0xc59b5562
0x8e: V44 = EQ 0xc59b5562 V12
0x8f: V45 = 0x23a
0x92: JUMPI 0x23a V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x24c]
---
0x93 DUP1
0x94 PUSH4 0xe52c0f24
0x99 EQ
0x9a PUSH2 0x24c
0x9d JUMPI
---
0x94: V46 = 0xe52c0f24
0x99: V47 = EQ 0xe52c0f24 V12
0x9a: V48 = 0x24c
0x9d: JUMPI 0x24c V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x261]
---
0x9e DUP1
0x9f PUSH4 0xf2fde38b
0xa4 EQ
0xa5 PUSH2 0x261
0xa8 JUMPI
---
0x9f: V49 = 0xf2fde38b
0xa4: V50 = EQ 0xf2fde38b V12
0xa5: V51 = 0x261
0xa8: JUMPI 0x261 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0x0, 0x9e]
Successors: [0xad]
---
0xa9 JUMPDEST
0xaa PUSH2 0xef
---
0xa9: JUMPDEST 
0xaa: V52 = 0xef
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0xad
[0xad:0xec]
---
Predecessors: [0xa9]
Successors: [0xed]
---
0xad JUMPDEST
0xae PUSH1 0x40
0xb0 DUP1
0xb1 MLOAD
0xb2 CALLVALUE
0xb3 DUP2
0xb4 MSTORE
0xb5 SWAP1
0xb6 MLOAD
0xb7 PUSH1 0x1
0xb9 PUSH1 0xa0
0xbb PUSH1 0x2
0xbd EXP
0xbe SUB
0xbf CALLER
0xc0 AND
0xc1 SWAP2
0xc2 PUSH32 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b
0xe3 SWAP2
0xe4 SWAP1
0xe5 DUP2
0xe6 SWAP1
0xe7 SUB
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP1
0xec LOG2
---
0xad: JUMPDEST 
0xae: V53 = 0x40
0xb1: V54 = M[0x40]
0xb2: V55 = CALLVALUE
0xb4: M[V54] = V55
0xb6: V56 = M[0x40]
0xb7: V57 = 0x1
0xb9: V58 = 0xa0
0xbb: V59 = 0x2
0xbd: V60 = EXP 0x2 0xa0
0xbe: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf: V62 = CALLER
0xc0: V63 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xc2: V64 = 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b
0xe7: V65 = SUB V54 V56
0xe8: V66 = 0x20
0xea: V67 = ADD 0x20 V65
0xec: LOG V56 V67 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b V63
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0xed
[0xed:0xee]
---
Predecessors: [0xad]
Successors: [0xef]
---
0xed JUMPDEST
0xee JUMP
---
0xed: JUMPDEST 
0xee: JUMP 0xef
---
Entry stack: [V12, 0xef]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0xf0]
---
Predecessors: [0xed, 0x2db, 0x434, 0x4ae, 0x559, 0x5e8, 0x6df, 0x738, 0x784]
Successors: []
---
0xef JUMPDEST
0xf0 STOP
---
0xef: JUMPDEST 
0xf0: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0xb]
Successors: [0xf8, 0xf9]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xf9
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V68 = CALLVALUE
0xf3: V69 = ISZERO V68
0xf4: V70 = 0xf9
0xf7: JUMPI 0xf9 V69
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0xf8]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 INVALID
---
0xf8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0xf1]
Successors: [0x27f]
---
0xf9 JUMPDEST
0xfa PUSH2 0x101
0xfd PUSH2 0x27f
0x100 JUMP
---
0xf9: JUMPDEST 
0xfa: V71 = 0x101
0xfd: V72 = 0x27f
0x100: JUMP 0x27f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V12, 0x101]

================================

Block 0x101
[0x101:0x112]
---
Predecessors: [0x27f, 0x5eb]
Successors: []
---
0x101 JUMPDEST
0x102 PUSH1 0x40
0x104 DUP1
0x105 MLOAD
0x106 SWAP2
0x107 DUP3
0x108 MSTORE
0x109 MLOAD
0x10a SWAP1
0x10b DUP2
0x10c SWAP1
0x10d SUB
0x10e PUSH1 0x20
0x110 ADD
0x111 SWAP1
0x112 RETURN
---
0x101: JUMPDEST 
0x102: V73 = 0x40
0x105: V74 = M[0x40]
0x108: M[V74] = S0
0x109: V75 = M[0x40]
0x10d: V76 = SUB V74 V75
0x10e: V77 = 0x20
0x110: V78 = ADD 0x20 V76
0x112: RETURN V75 V78
---
Entry stack: [V12, 0x101, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x101]

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0x25]
Successors: [0x11a, 0x11b]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 ISZERO
0x116 PUSH2 0x11b
0x119 JUMPI
---
0x113: JUMPDEST 
0x114: V79 = CALLVALUE
0x115: V80 = ISZERO V79
0x116: V81 = 0x11b
0x119: JUMPI 0x11b V80
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11a
[0x11a:0x11a]
---
Predecessors: [0x113]
Successors: []
---
0x11a INVALID
---
0x11a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11b
[0x11b:0x125]
---
Predecessors: [0x113]
Successors: [0x285]
---
0x11b JUMPDEST
0x11c PUSH2 0xef
0x11f PUSH1 0x4
0x121 CALLDATALOAD
0x122 PUSH2 0x285
0x125 JUMP
---
0x11b: JUMPDEST 
0x11c: V82 = 0xef
0x11f: V83 = 0x4
0x121: V84 = CALLDATALOAD 0x4
0x122: V85 = 0x285
0x125: JUMP 0x285
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V84]
Exit stack: [V12, 0xef, V84]

================================

Block 0x126
[0x126:0x127]
---
Predecessors: []
Successors: []
---
0x126 JUMPDEST
0x127 STOP
---
0x126: JUMPDEST 
0x127: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x128
[0x128:0x12e]
---
Predecessors: [0x30]
Successors: [0x12f, 0x130]
---
0x128 JUMPDEST
0x129 CALLVALUE
0x12a ISZERO
0x12b PUSH2 0x130
0x12e JUMPI
---
0x128: JUMPDEST 
0x129: V86 = CALLVALUE
0x12a: V87 = ISZERO V86
0x12b: V88 = 0x130
0x12e: JUMPI 0x130 V87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12f
[0x12f:0x12f]
---
Predecessors: [0x128]
Successors: []
---
0x12f INVALID
---
0x12f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x130
[0x130:0x143]
---
Predecessors: [0x128]
Successors: [0x2de]
---
0x130 JUMPDEST
0x131 PUSH2 0xef
0x134 PUSH1 0x1
0x136 PUSH1 0xa0
0x138 PUSH1 0x2
0x13a EXP
0x13b SUB
0x13c PUSH1 0x4
0x13e CALLDATALOAD
0x13f AND
0x140 PUSH2 0x2de
0x143 JUMP
---
0x130: JUMPDEST 
0x131: V89 = 0xef
0x134: V90 = 0x1
0x136: V91 = 0xa0
0x138: V92 = 0x2
0x13a: V93 = EXP 0x2 0xa0
0x13b: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13c: V95 = 0x4
0x13e: V96 = CALLDATALOAD 0x4
0x13f: V97 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x140: V98 = 0x2de
0x143: JUMP 0x2de
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V97]
Exit stack: [V12, 0xef, V97]

================================

Block 0x144
[0x144:0x145]
---
Predecessors: []
Successors: []
---
0x144 JUMPDEST
0x145 STOP
---
0x144: JUMPDEST 
0x145: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x146
[0x146:0x14c]
---
Predecessors: [0x3b]
Successors: [0x14d, 0x14e]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 ISZERO
0x149 PUSH2 0x14e
0x14c JUMPI
---
0x146: JUMPDEST 
0x147: V99 = CALLVALUE
0x148: V100 = ISZERO V99
0x149: V101 = 0x14e
0x14c: JUMPI 0x14e V100
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14d
[0x14d:0x14d]
---
Predecessors: [0x146]
Successors: []
---
0x14d INVALID
---
0x14d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14e
[0x14e:0x161]
---
Predecessors: [0x146]
Successors: [0x439]
---
0x14e JUMPDEST
0x14f PUSH2 0xef
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a PUSH1 0x4
0x15c CALLDATALOAD
0x15d AND
0x15e PUSH2 0x439
0x161 JUMP
---
0x14e: JUMPDEST 
0x14f: V102 = 0xef
0x152: V103 = 0x1
0x154: V104 = 0xa0
0x156: V105 = 0x2
0x158: V106 = EXP 0x2 0xa0
0x159: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15a: V108 = 0x4
0x15c: V109 = CALLDATALOAD 0x4
0x15d: V110 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V111 = 0x439
0x161: JUMP 0x439
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V110]
Exit stack: [V12, 0xef, V110]

================================

Block 0x162
[0x162:0x163]
---
Predecessors: []
Successors: []
---
0x162 JUMPDEST
0x163 STOP
---
0x162: JUMPDEST 
0x163: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x164
[0x164:0x16a]
---
Predecessors: [0x46]
Successors: [0x16b, 0x16c]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 ISZERO
0x167 PUSH2 0x16c
0x16a JUMPI
---
0x164: JUMPDEST 
0x165: V112 = CALLVALUE
0x166: V113 = ISZERO V112
0x167: V114 = 0x16c
0x16a: JUMPI 0x16c V113
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16b
[0x16b:0x16b]
---
Predecessors: [0x164]
Successors: []
---
0x16b INVALID
---
0x16b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x164]
Successors: [0x4b1]
---
0x16c JUMPDEST
0x16d PUSH2 0xef
0x170 PUSH2 0x4b1
0x173 JUMP
---
0x16c: JUMPDEST 
0x16d: V115 = 0xef
0x170: V116 = 0x4b1
0x173: JUMP 0x4b1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0x174
[0x174:0x175]
---
Predecessors: []
Successors: []
---
0x174 JUMPDEST
0x175 STOP
---
0x174: JUMPDEST 
0x175: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x176
[0x176:0x17c]
---
Predecessors: [0x51]
Successors: [0x17d, 0x17e]
---
0x176 JUMPDEST
0x177 CALLVALUE
0x178 ISZERO
0x179 PUSH2 0x17e
0x17c JUMPI
---
0x176: JUMPDEST 
0x177: V117 = CALLVALUE
0x178: V118 = ISZERO V117
0x179: V119 = 0x17e
0x17c: JUMPI 0x17e V118
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17d
[0x17d:0x17d]
---
Predecessors: [0x176]
Successors: []
---
0x17d INVALID
---
0x17d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17e
[0x17e:0x185]
---
Predecessors: [0x176]
Successors: [0x55b]
---
0x17e JUMPDEST
0x17f PUSH2 0x186
0x182 PUSH2 0x55b
0x185 JUMP
---
0x17e: JUMPDEST 
0x17f: V120 = 0x186
0x182: V121 = 0x55b
0x185: JUMP 0x55b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x186
[0x186:0x1a1]
---
Predecessors: [0x55b, 0x56a, 0x5f1]
Successors: []
---
0x186 JUMPDEST
0x187 PUSH1 0x40
0x189 DUP1
0x18a MLOAD
0x18b PUSH1 0x1
0x18d PUSH1 0xa0
0x18f PUSH1 0x2
0x191 EXP
0x192 SUB
0x193 SWAP1
0x194 SWAP3
0x195 AND
0x196 DUP3
0x197 MSTORE
0x198 MLOAD
0x199 SWAP1
0x19a DUP2
0x19b SWAP1
0x19c SUB
0x19d PUSH1 0x20
0x19f ADD
0x1a0 SWAP1
0x1a1 RETURN
---
0x186: JUMPDEST 
0x187: V122 = 0x40
0x18a: V123 = M[0x40]
0x18b: V124 = 0x1
0x18d: V125 = 0xa0
0x18f: V126 = 0x2
0x191: V127 = EXP 0x2 0xa0
0x192: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V129 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x197: M[V123] = V129
0x198: V130 = M[0x40]
0x19c: V131 = SUB V123 V130
0x19d: V132 = 0x20
0x19f: V133 = ADD 0x20 V131
0x1a1: RETURN V130 V133
---
Entry stack: [V12, 0x186, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x186]

================================

Block 0x1a2
[0x1a2:0x1a8]
---
Predecessors: [0x5c]
Successors: [0x1a9, 0x1aa]
---
0x1a2 JUMPDEST
0x1a3 CALLVALUE
0x1a4 ISZERO
0x1a5 PUSH2 0x1aa
0x1a8 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V134 = CALLVALUE
0x1a4: V135 = ISZERO V134
0x1a5: V136 = 0x1aa
0x1a8: JUMPI 0x1aa V135
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a9
[0x1a9:0x1a9]
---
Predecessors: [0x1a2]
Successors: []
---
0x1a9 INVALID
---
0x1a9: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1aa
[0x1aa:0x1b1]
---
Predecessors: [0x1a2]
Successors: [0x56a]
---
0x1aa JUMPDEST
0x1ab PUSH2 0x186
0x1ae PUSH2 0x56a
0x1b1 JUMP
---
0x1aa: JUMPDEST 
0x1ab: V137 = 0x186
0x1ae: V138 = 0x56a
0x1b1: JUMP 0x56a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x1b2
[0x1b2:0x1cd]
---
Predecessors: []
Successors: []
---
0x1b2 JUMPDEST
0x1b3 PUSH1 0x40
0x1b5 DUP1
0x1b6 MLOAD
0x1b7 PUSH1 0x1
0x1b9 PUSH1 0xa0
0x1bb PUSH1 0x2
0x1bd EXP
0x1be SUB
0x1bf SWAP1
0x1c0 SWAP3
0x1c1 AND
0x1c2 DUP3
0x1c3 MSTORE
0x1c4 MLOAD
0x1c5 SWAP1
0x1c6 DUP2
0x1c7 SWAP1
0x1c8 SUB
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP1
0x1cd RETURN
---
0x1b2: JUMPDEST 
0x1b3: V139 = 0x40
0x1b6: V140 = M[0x40]
0x1b7: V141 = 0x1
0x1b9: V142 = 0xa0
0x1bb: V143 = 0x2
0x1bd: V144 = EXP 0x2 0xa0
0x1be: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c1: V146 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: M[V140] = V146
0x1c4: V147 = M[0x40]
0x1c8: V148 = SUB V140 V147
0x1c9: V149 = 0x20
0x1cb: V150 = ADD 0x20 V148
0x1cd: RETURN V147 V150
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ce
[0x1ce:0x1d4]
---
Predecessors: [0x67]
Successors: [0x1d5, 0x1d6]
---
0x1ce JUMPDEST
0x1cf CALLVALUE
0x1d0 ISZERO
0x1d1 PUSH2 0x1d6
0x1d4 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V151 = CALLVALUE
0x1d0: V152 = ISZERO V151
0x1d1: V153 = 0x1d6
0x1d4: JUMPI 0x1d6 V152
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d5
[0x1d5:0x1d5]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d5 INVALID
---
0x1d5: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d6
[0x1d6:0x1e9]
---
Predecessors: [0x1ce]
Successors: [0x579]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0xef
0x1da PUSH1 0x1
0x1dc PUSH1 0xa0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 SUB
0x1e2 PUSH1 0x4
0x1e4 CALLDATALOAD
0x1e5 AND
0x1e6 PUSH2 0x579
0x1e9 JUMP
---
0x1d6: JUMPDEST 
0x1d7: V154 = 0xef
0x1da: V155 = 0x1
0x1dc: V156 = 0xa0
0x1de: V157 = 0x2
0x1e0: V158 = EXP 0x2 0xa0
0x1e1: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V160 = 0x4
0x1e4: V161 = CALLDATALOAD 0x4
0x1e5: V162 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: V163 = 0x579
0x1e9: JUMP 0x579
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V162]
Exit stack: [V12, 0xef, V162]

================================

Block 0x1ea
[0x1ea:0x1eb]
---
Predecessors: []
Successors: []
---
0x1ea JUMPDEST
0x1eb STOP
---
0x1ea: JUMPDEST 
0x1eb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ec
[0x1ec:0x1f2]
---
Predecessors: [0x72]
Successors: [0x1f3, 0x1f4]
---
0x1ec JUMPDEST
0x1ed CALLVALUE
0x1ee ISZERO
0x1ef PUSH2 0x1f4
0x1f2 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V164 = CALLVALUE
0x1ee: V165 = ISZERO V164
0x1ef: V166 = 0x1f4
0x1f2: JUMPI 0x1f4 V165
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f3
[0x1f3:0x1f3]
---
Predecessors: [0x1ec]
Successors: []
---
0x1f3 INVALID
---
0x1f3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f4
[0x1f4:0x1fb]
---
Predecessors: [0x1ec]
Successors: [0x5eb]
---
0x1f4 JUMPDEST
0x1f5 PUSH2 0x101
0x1f8 PUSH2 0x5eb
0x1fb JUMP
---
0x1f4: JUMPDEST 
0x1f5: V167 = 0x101
0x1f8: V168 = 0x5eb
0x1fb: JUMP 0x5eb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V12, 0x101]

================================

Block 0x1fc
[0x1fc:0x20d]
---
Predecessors: []
Successors: []
---
0x1fc JUMPDEST
0x1fd PUSH1 0x40
0x1ff DUP1
0x200 MLOAD
0x201 SWAP2
0x202 DUP3
0x203 MSTORE
0x204 MLOAD
0x205 SWAP1
0x206 DUP2
0x207 SWAP1
0x208 SUB
0x209 PUSH1 0x20
0x20b ADD
0x20c SWAP1
0x20d RETURN
---
0x1fc: JUMPDEST 
0x1fd: V169 = 0x40
0x200: V170 = M[0x40]
0x203: M[V170] = S0
0x204: V171 = M[0x40]
0x208: V172 = SUB V170 V171
0x209: V173 = 0x20
0x20b: V174 = ADD 0x20 V172
0x20d: RETURN V171 V174
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x20e
[0x20e:0x214]
---
Predecessors: [0x7d]
Successors: [0x215, 0x216]
---
0x20e JUMPDEST
0x20f CALLVALUE
0x210 ISZERO
0x211 PUSH2 0x216
0x214 JUMPI
---
0x20e: JUMPDEST 
0x20f: V175 = CALLVALUE
0x210: V176 = ISZERO V175
0x211: V177 = 0x216
0x214: JUMPI 0x216 V176
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x215
[0x215:0x215]
---
Predecessors: [0x20e]
Successors: []
---
0x215 INVALID
---
0x215: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x216
[0x216:0x21d]
---
Predecessors: [0x20e]
Successors: [0x5f1]
---
0x216 JUMPDEST
0x217 PUSH2 0x186
0x21a PUSH2 0x5f1
0x21d JUMP
---
0x216: JUMPDEST 
0x217: V178 = 0x186
0x21a: V179 = 0x5f1
0x21d: JUMP 0x5f1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x21e
[0x21e:0x239]
---
Predecessors: []
Successors: []
---
0x21e JUMPDEST
0x21f PUSH1 0x40
0x221 DUP1
0x222 MLOAD
0x223 PUSH1 0x1
0x225 PUSH1 0xa0
0x227 PUSH1 0x2
0x229 EXP
0x22a SUB
0x22b SWAP1
0x22c SWAP3
0x22d AND
0x22e DUP3
0x22f MSTORE
0x230 MLOAD
0x231 SWAP1
0x232 DUP2
0x233 SWAP1
0x234 SUB
0x235 PUSH1 0x20
0x237 ADD
0x238 SWAP1
0x239 RETURN
---
0x21e: JUMPDEST 
0x21f: V180 = 0x40
0x222: V181 = M[0x40]
0x223: V182 = 0x1
0x225: V183 = 0xa0
0x227: V184 = 0x2
0x229: V185 = EXP 0x2 0xa0
0x22a: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22d: V187 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x22f: M[V181] = V187
0x230: V188 = M[0x40]
0x234: V189 = SUB V181 V188
0x235: V190 = 0x20
0x237: V191 = ADD 0x20 V189
0x239: RETURN V188 V191
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x23a
[0x23a:0x240]
---
Predecessors: [0x88]
Successors: [0x241, 0x242]
---
0x23a JUMPDEST
0x23b CALLVALUE
0x23c ISZERO
0x23d PUSH2 0x242
0x240 JUMPI
---
0x23a: JUMPDEST 
0x23b: V192 = CALLVALUE
0x23c: V193 = ISZERO V192
0x23d: V194 = 0x242
0x240: JUMPI 0x242 V193
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x241
[0x241:0x241]
---
Predecessors: [0x23a]
Successors: []
---
0x241 INVALID
---
0x241: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x242
[0x242:0x249]
---
Predecessors: [0x23a]
Successors: [0x600]
---
0x242 JUMPDEST
0x243 PUSH2 0xef
0x246 PUSH2 0x600
0x249 JUMP
---
0x242: JUMPDEST 
0x243: V195 = 0xef
0x246: V196 = 0x600
0x249: JUMP 0x600
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0x24a
[0x24a:0x24b]
---
Predecessors: []
Successors: []
---
0x24a JUMPDEST
0x24b STOP
---
0x24a: JUMPDEST 
0x24b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x24c
[0x24c:0x252]
---
Predecessors: [0x93]
Successors: [0x253, 0x254]
---
0x24c JUMPDEST
0x24d CALLVALUE
0x24e ISZERO
0x24f PUSH2 0x254
0x252 JUMPI
---
0x24c: JUMPDEST 
0x24d: V197 = CALLVALUE
0x24e: V198 = ISZERO V197
0x24f: V199 = 0x254
0x252: JUMPI 0x254 V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x253
[0x253:0x253]
---
Predecessors: [0x24c]
Successors: []
---
0x253 INVALID
---
0x253: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x254
[0x254:0x25e]
---
Predecessors: [0x24c]
Successors: [0x6e2]
---
0x254 JUMPDEST
0x255 PUSH2 0xef
0x258 PUSH1 0x4
0x25a CALLDATALOAD
0x25b PUSH2 0x6e2
0x25e JUMP
---
0x254: JUMPDEST 
0x255: V200 = 0xef
0x258: V201 = 0x4
0x25a: V202 = CALLDATALOAD 0x4
0x25b: V203 = 0x6e2
0x25e: JUMP 0x6e2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V202]
Exit stack: [V12, 0xef, V202]

================================

Block 0x25f
[0x25f:0x260]
---
Predecessors: []
Successors: []
---
0x25f JUMPDEST
0x260 STOP
---
0x25f: JUMPDEST 
0x260: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x261
[0x261:0x267]
---
Predecessors: [0x9e]
Successors: [0x268, 0x269]
---
0x261 JUMPDEST
0x262 CALLVALUE
0x263 ISZERO
0x264 PUSH2 0x269
0x267 JUMPI
---
0x261: JUMPDEST 
0x262: V204 = CALLVALUE
0x263: V205 = ISZERO V204
0x264: V206 = 0x269
0x267: JUMPI 0x269 V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x268
[0x268:0x268]
---
Predecessors: [0x261]
Successors: []
---
0x268 INVALID
---
0x268: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x269
[0x269:0x27c]
---
Predecessors: [0x261]
Successors: [0x73b]
---
0x269 JUMPDEST
0x26a PUSH2 0xef
0x26d PUSH1 0x1
0x26f PUSH1 0xa0
0x271 PUSH1 0x2
0x273 EXP
0x274 SUB
0x275 PUSH1 0x4
0x277 CALLDATALOAD
0x278 AND
0x279 PUSH2 0x73b
0x27c JUMP
---
0x269: JUMPDEST 
0x26a: V207 = 0xef
0x26d: V208 = 0x1
0x26f: V209 = 0xa0
0x271: V210 = 0x2
0x273: V211 = EXP 0x2 0xa0
0x274: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V213 = 0x4
0x277: V214 = CALLDATALOAD 0x4
0x278: V215 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x279: V216 = 0x73b
0x27c: JUMP 0x73b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V215]
Exit stack: [V12, 0xef, V215]

================================

Block 0x27d
[0x27d:0x27e]
---
Predecessors: []
Successors: []
---
0x27d JUMPDEST
0x27e STOP
---
0x27d: JUMPDEST 
0x27e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x27f
[0x27f:0x284]
---
Predecessors: [0xf9]
Successors: [0x101]
---
0x27f JUMPDEST
0x280 PUSH1 0x1
0x282 SLOAD
0x283 DUP2
0x284 JUMP
---
0x27f: JUMPDEST 
0x280: V217 = 0x1
0x282: V218 = S[0x1]
0x284: JUMP 0x101
---
Entry stack: [V12, 0x101]
Stack pops: 1
Stack additions: [S0, V218]
Exit stack: [V12, 0x101, V218]

================================

Block 0x285
[0x285:0x29b]
---
Predecessors: [0x11b]
Successors: [0x29c, 0x2a1]
---
0x285 JUMPDEST
0x286 PUSH1 0x0
0x288 SLOAD
0x289 CALLER
0x28a PUSH1 0x1
0x28c PUSH1 0xa0
0x28e PUSH1 0x2
0x290 EXP
0x291 SUB
0x292 SWAP1
0x293 DUP2
0x294 AND
0x295 SWAP2
0x296 AND
0x297 EQ
0x298 PUSH2 0x2a1
0x29b JUMPI
---
0x285: JUMPDEST 
0x286: V219 = 0x0
0x288: V220 = S[0x0]
0x289: V221 = CALLER
0x28a: V222 = 0x1
0x28c: V223 = 0xa0
0x28e: V224 = 0x2
0x290: V225 = EXP 0x2 0xa0
0x291: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x294: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x296: V228 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x297: V229 = EQ V228 V227
0x298: V230 = 0x2a1
0x29b: JUMPI 0x2a1 V229
---
Entry stack: [V12, 0xef, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V84]

================================

Block 0x29c
[0x29c:0x2a0]
---
Predecessors: [0x285]
Successors: []
---
0x29c PUSH1 0x0
0x29e PUSH1 0x0
0x2a0 REVERT
---
0x29c: V231 = 0x0
0x29e: V232 = 0x0
0x2a0: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V84]

================================

Block 0x2a1
[0x2a1:0x2d9]
---
Predecessors: [0x285]
Successors: [0x2da]
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x4
0x2a4 DUP2
0x2a5 SWAP1
0x2a6 SSTORE
0x2a7 PUSH1 0x40
0x2a9 DUP1
0x2aa MLOAD
0x2ab DUP3
0x2ac DUP2
0x2ad MSTORE
0x2ae SWAP1
0x2af MLOAD
0x2b0 PUSH32 0x23eb383159943d100968a603a73e7002356a9a2e41de1f638a137c58b9282fe6
0x2d1 SWAP2
0x2d2 DUP2
0x2d3 SWAP1
0x2d4 SUB
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 SWAP1
0x2d9 LOG1
---
0x2a1: JUMPDEST 
0x2a2: V233 = 0x4
0x2a6: S[0x4] = V84
0x2a7: V234 = 0x40
0x2aa: V235 = M[0x40]
0x2ad: M[V235] = V84
0x2af: V236 = M[0x40]
0x2b0: V237 = 0x23eb383159943d100968a603a73e7002356a9a2e41de1f638a137c58b9282fe6
0x2d4: V238 = SUB V235 V236
0x2d5: V239 = 0x20
0x2d7: V240 = ADD 0x20 V238
0x2d9: LOG V236 V240 0x23eb383159943d100968a603a73e7002356a9a2e41de1f638a137c58b9282fe6
---
Entry stack: [V12, 0xef, V84]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V84]

================================

Block 0x2da
[0x2da:0x2da]
---
Predecessors: [0x2a1, 0x64c, 0x662, 0x757]
Successors: [0x2db]
---
0x2da JUMPDEST
---
0x2da: JUMPDEST 
---
Entry stack: [V12, 0xef, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, S0]

================================

Block 0x2db
[0x2db:0x2dd]
---
Predecessors: [0x2da]
Successors: [0xef]
---
0x2db JUMPDEST
0x2dc POP
0x2dd JUMP
---
0x2db: JUMPDEST 
0x2dd: JUMP 0xef
---
Entry stack: [V12, 0xef, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2de
[0x2de:0x2f7]
---
Predecessors: [0x130]
Successors: [0x2f8, 0x2fd]
---
0x2de JUMPDEST
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 SLOAD
0x2e3 DUP2
0x2e4 SWAP1
0x2e5 CALLER
0x2e6 PUSH1 0x1
0x2e8 PUSH1 0xa0
0x2ea PUSH1 0x2
0x2ec EXP
0x2ed SUB
0x2ee SWAP1
0x2ef DUP2
0x2f0 AND
0x2f1 SWAP2
0x2f2 AND
0x2f3 EQ
0x2f4 PUSH2 0x2fd
0x2f7 JUMPI
---
0x2de: JUMPDEST 
0x2df: V241 = 0x0
0x2e2: V242 = S[0x0]
0x2e5: V243 = CALLER
0x2e6: V244 = 0x1
0x2e8: V245 = 0xa0
0x2ea: V246 = 0x2
0x2ec: V247 = EXP 0x2 0xa0
0x2ed: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f0: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x2f2: V250 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: V251 = EQ V250 V249
0x2f4: V252 = 0x2fd
0x2f7: JUMPI 0x2fd V251
---
Entry stack: [V12, 0xef, V97]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xef, V97, 0x0, 0x0]

================================

Block 0x2f8
[0x2f8:0x2fc]
---
Predecessors: [0x2de]
Successors: []
---
0x2f8 PUSH1 0x0
0x2fa PUSH1 0x0
0x2fc REVERT
---
0x2f8: V253 = 0x0
0x2fa: V254 = 0x0
0x2fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V97, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V97, 0x0, 0x0]

================================

Block 0x2fd
[0x2fd:0x35e]
---
Predecessors: [0x2de]
Successors: [0x35f, 0x360]
---
0x2fd JUMPDEST
0x2fe DUP3
0x2ff SWAP2
0x300 POP
0x301 DUP2
0x302 PUSH1 0x1
0x304 PUSH1 0xa0
0x306 PUSH1 0x2
0x308 EXP
0x309 SUB
0x30a AND
0x30b PUSH4 0x70a08231
0x310 ADDRESS
0x311 PUSH1 0x0
0x313 PUSH1 0x40
0x315 MLOAD
0x316 PUSH1 0x20
0x318 ADD
0x319 MSTORE
0x31a PUSH1 0x40
0x31c MLOAD
0x31d DUP3
0x31e PUSH4 0xffffffff
0x323 AND
0x324 PUSH1 0xe0
0x326 PUSH1 0x2
0x328 EXP
0x329 MUL
0x32a DUP2
0x32b MSTORE
0x32c PUSH1 0x4
0x32e ADD
0x32f DUP1
0x330 DUP3
0x331 PUSH1 0x1
0x333 PUSH1 0xa0
0x335 PUSH1 0x2
0x337 EXP
0x338 SUB
0x339 AND
0x33a PUSH1 0x1
0x33c PUSH1 0xa0
0x33e PUSH1 0x2
0x340 EXP
0x341 SUB
0x342 AND
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x20
0x347 ADD
0x348 SWAP2
0x349 POP
0x34a POP
0x34b PUSH1 0x20
0x34d PUSH1 0x40
0x34f MLOAD
0x350 DUP1
0x351 DUP4
0x352 SUB
0x353 DUP2
0x354 PUSH1 0x0
0x356 DUP8
0x357 DUP1
0x358 EXTCODESIZE
0x359 ISZERO
0x35a ISZERO
0x35b PUSH2 0x360
0x35e JUMPI
---
0x2fd: JUMPDEST 
0x302: V255 = 0x1
0x304: V256 = 0xa0
0x306: V257 = 0x2
0x308: V258 = EXP 0x2 0xa0
0x309: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30a: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x30b: V261 = 0x70a08231
0x310: V262 = ADDRESS
0x311: V263 = 0x0
0x313: V264 = 0x40
0x315: V265 = M[0x40]
0x316: V266 = 0x20
0x318: V267 = ADD 0x20 V265
0x319: M[V267] = 0x0
0x31a: V268 = 0x40
0x31c: V269 = M[0x40]
0x31e: V270 = 0xffffffff
0x323: V271 = AND 0xffffffff 0x70a08231
0x324: V272 = 0xe0
0x326: V273 = 0x2
0x328: V274 = EXP 0x2 0xe0
0x329: V275 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x32b: M[V269] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x32c: V276 = 0x4
0x32e: V277 = ADD 0x4 V269
0x331: V278 = 0x1
0x333: V279 = 0xa0
0x335: V280 = 0x2
0x337: V281 = EXP 0x2 0xa0
0x338: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x339: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x33a: V284 = 0x1
0x33c: V285 = 0xa0
0x33e: V286 = 0x2
0x340: V287 = EXP 0x2 0xa0
0x341: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x342: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x344: M[V277] = V289
0x345: V290 = 0x20
0x347: V291 = ADD 0x20 V277
0x34b: V292 = 0x20
0x34d: V293 = 0x40
0x34f: V294 = M[0x40]
0x352: V295 = SUB V291 V294
0x354: V296 = 0x0
0x358: V297 = EXTCODESIZE V260
0x359: V298 = ISZERO V297
0x35a: V299 = ISZERO V298
0x35b: V300 = 0x360
0x35e: JUMPI 0x360 V299
---
Entry stack: [V12, 0xef, V97, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V260, 0x70a08231, V291, 0x20, V294, V295, V294, 0x0, V260]
Exit stack: [V12, 0xef, V97, V97, 0x0, V260, 0x70a08231, V291, 0x20, V294, V295, V294, 0x0, V260]

================================

Block 0x35f
[0x35f:0x35f]
---
Predecessors: [0x2fd]
Successors: []
---
0x35f INVALID
---
0x35f: INVALID 
---
Entry stack: [V12, 0xef, V97, V97, 0x0, V260, 0x70a08231, V291, 0x20, V294, V295, V294, 0x0, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V97, V97, 0x0, V260, 0x70a08231, V291, 0x20, V294, V295, V294, 0x0, V260]

================================

Block 0x360
[0x360:0x36c]
---
Predecessors: [0x2fd]
Successors: [0x36d, 0x36e]
---
0x360 JUMPDEST
0x361 PUSH2 0x2c6
0x364 GAS
0x365 SUB
0x366 CALL
0x367 ISZERO
0x368 ISZERO
0x369 PUSH2 0x36e
0x36c JUMPI
---
0x360: JUMPDEST 
0x361: V301 = 0x2c6
0x364: V302 = GAS
0x365: V303 = SUB V302 0x2c6
0x366: V304 = CALL V303 V260 0x0 V294 V295 V294 0x20
0x367: V305 = ISZERO V304
0x368: V306 = ISZERO V305
0x369: V307 = 0x36e
0x36c: JUMPI 0x36e V306
---
Entry stack: [V12, 0xef, V97, V97, 0x0, V260, 0x70a08231, V291, 0x20, V294, V295, V294, 0x0, V260]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xef, V97, V97, 0x0, V260, 0x70a08231, V291]

================================

Block 0x36d
[0x36d:0x36d]
---
Predecessors: [0x360]
Successors: []
---
0x36d INVALID
---
0x36d: INVALID 
---
Entry stack: [V12, 0xef, V97, V97, 0x0, V260, 0x70a08231, V291]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V97, V97, 0x0, V260, 0x70a08231, V291]

================================

Block 0x36e
[0x36e:0x37e]
---
Predecessors: [0x360]
Successors: [0x37f, 0x384]
---
0x36e JUMPDEST
0x36f POP
0x370 POP
0x371 PUSH1 0x40
0x373 MLOAD
0x374 MLOAD
0x375 SWAP2
0x376 POP
0x377 POP
0x378 DUP1
0x379 ISZERO
0x37a ISZERO
0x37b PUSH2 0x384
0x37e JUMPI
---
0x36e: JUMPDEST 
0x371: V308 = 0x40
0x373: V309 = M[0x40]
0x374: V310 = M[V309]
0x379: V311 = ISZERO V310
0x37a: V312 = ISZERO V311
0x37b: V313 = 0x384
0x37e: JUMPI 0x384 V312
---
Entry stack: [V12, 0xef, V97, V97, 0x0, V260, 0x70a08231, V291]
Stack pops: 4
Stack additions: [V310]
Exit stack: [V12, 0xef, V97, V97, V310]

================================

Block 0x37f
[0x37f:0x383]
---
Predecessors: [0x36e]
Successors: []
---
0x37f PUSH1 0x0
0x381 PUSH1 0x0
0x383 REVERT
---
0x37f: V314 = 0x0
0x381: V315 = 0x0
0x383: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V97, V97, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V97, V97, V310]

================================

Block 0x384
[0x384:0x3df]
---
Predecessors: [0x36e]
Successors: [0x3e0, 0x3e1]
---
0x384 JUMPDEST
0x385 PUSH1 0x0
0x387 DUP1
0x388 SLOAD
0x389 PUSH1 0x40
0x38b DUP1
0x38c MLOAD
0x38d PUSH1 0x20
0x38f SWAP1
0x390 DUP2
0x391 ADD
0x392 DUP5
0x393 SWAP1
0x394 MSTORE
0x395 DUP2
0x396 MLOAD
0x397 PUSH1 0xe0
0x399 PUSH1 0x2
0x39b EXP
0x39c PUSH4 0xa9059cbb
0x3a1 MUL
0x3a2 DUP2
0x3a3 MSTORE
0x3a4 PUSH1 0x1
0x3a6 PUSH1 0xa0
0x3a8 PUSH1 0x2
0x3aa EXP
0x3ab SUB
0x3ac SWAP4
0x3ad DUP5
0x3ae AND
0x3af PUSH1 0x4
0x3b1 DUP3
0x3b2 ADD
0x3b3 MSTORE
0x3b4 PUSH1 0x24
0x3b6 DUP2
0x3b7 ADD
0x3b8 DUP7
0x3b9 SWAP1
0x3ba MSTORE
0x3bb SWAP2
0x3bc MLOAD
0x3bd SWAP3
0x3be DUP7
0x3bf AND
0x3c0 SWAP4
0x3c1 PUSH4 0xa9059cbb
0x3c6 SWAP4
0x3c7 PUSH1 0x44
0x3c9 DUP1
0x3ca DUP6
0x3cb ADD
0x3cc SWAP5
0x3cd SWAP2
0x3ce SWAP3
0x3cf SWAP2
0x3d0 DUP4
0x3d1 SWAP1
0x3d2 SUB
0x3d3 ADD
0x3d4 SWAP1
0x3d5 DUP3
0x3d6 SWAP1
0x3d7 DUP8
0x3d8 DUP1
0x3d9 EXTCODESIZE
0x3da ISZERO
0x3db ISZERO
0x3dc PUSH2 0x3e1
0x3df JUMPI
---
0x384: JUMPDEST 
0x385: V316 = 0x0
0x388: V317 = S[0x0]
0x389: V318 = 0x40
0x38c: V319 = M[0x40]
0x38d: V320 = 0x20
0x391: V321 = ADD 0x20 V319
0x394: M[V321] = 0x0
0x396: V322 = M[0x40]
0x397: V323 = 0xe0
0x399: V324 = 0x2
0x39b: V325 = EXP 0x2 0xe0
0x39c: V326 = 0xa9059cbb
0x3a1: V327 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3a3: M[V322] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3a4: V328 = 0x1
0x3a6: V329 = 0xa0
0x3a8: V330 = 0x2
0x3aa: V331 = EXP 0x2 0xa0
0x3ab: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ae: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x3af: V334 = 0x4
0x3b2: V335 = ADD V322 0x4
0x3b3: M[V335] = V333
0x3b4: V336 = 0x24
0x3b7: V337 = ADD V322 0x24
0x3ba: M[V337] = V310
0x3bc: V338 = M[0x40]
0x3bf: V339 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V340 = 0xa9059cbb
0x3c7: V341 = 0x44
0x3cb: V342 = ADD V322 0x44
0x3d2: V343 = SUB V322 V338
0x3d3: V344 = ADD V343 0x44
0x3d9: V345 = EXTCODESIZE V339
0x3da: V346 = ISZERO V345
0x3db: V347 = ISZERO V346
0x3dc: V348 = 0x3e1
0x3df: JUMPI 0x3e1 V347
---
Entry stack: [V12, 0xef, V97, V97, V310]
Stack pops: 2
Stack additions: [S1, S0, V339, 0xa9059cbb, V342, 0x20, V338, V344, V338, 0x0, V339]
Exit stack: [V12, 0xef, V97, V97, V310, V339, 0xa9059cbb, V342, 0x20, V338, V344, V338, 0x0, V339]

================================

Block 0x3e0
[0x3e0:0x3e0]
---
Predecessors: [0x384]
Successors: []
---
0x3e0 INVALID
---
0x3e0: INVALID 
---
Entry stack: [V12, 0xef, V97, V97, V310, V339, 0xa9059cbb, V342, 0x20, V338, V344, V338, 0x0, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V97, V97, V310, V339, 0xa9059cbb, V342, 0x20, V338, V344, V338, 0x0, V339]

================================

Block 0x3e1
[0x3e1:0x3ed]
---
Predecessors: [0x384]
Successors: [0x3ee, 0x3ef]
---
0x3e1 JUMPDEST
0x3e2 PUSH2 0x2c6
0x3e5 GAS
0x3e6 SUB
0x3e7 CALL
0x3e8 ISZERO
0x3e9 ISZERO
0x3ea PUSH2 0x3ef
0x3ed JUMPI
---
0x3e1: JUMPDEST 
0x3e2: V349 = 0x2c6
0x3e5: V350 = GAS
0x3e6: V351 = SUB V350 0x2c6
0x3e7: V352 = CALL V351 V339 0x0 V338 V344 V338 0x20
0x3e8: V353 = ISZERO V352
0x3e9: V354 = ISZERO V353
0x3ea: V355 = 0x3ef
0x3ed: JUMPI 0x3ef V354
---
Entry stack: [V12, 0xef, V97, V97, V310, V339, 0xa9059cbb, V342, 0x20, V338, V344, V338, 0x0, V339]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xef, V97, V97, V310, V339, 0xa9059cbb, V342]

================================

Block 0x3ee
[0x3ee:0x3ee]
---
Predecessors: [0x3e1]
Successors: []
---
0x3ee INVALID
---
0x3ee: INVALID 
---
Entry stack: [V12, 0xef, V97, V97, V310, V339, 0xa9059cbb, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V97, V97, V310, V339, 0xa9059cbb, V342]

================================

Block 0x3ef
[0x3ef:0x3fd]
---
Predecessors: [0x3e1]
Successors: [0x3fe, 0x3ff]
---
0x3ef JUMPDEST
0x3f0 POP
0x3f1 POP
0x3f2 PUSH1 0x40
0x3f4 MLOAD
0x3f5 MLOAD
0x3f6 ISZERO
0x3f7 ISZERO
0x3f8 SWAP1
0x3f9 POP
0x3fa PUSH2 0x3ff
0x3fd JUMPI
---
0x3ef: JUMPDEST 
0x3f2: V356 = 0x40
0x3f4: V357 = M[0x40]
0x3f5: V358 = M[V357]
0x3f6: V359 = ISZERO V358
0x3f7: V360 = ISZERO V359
0x3fa: V361 = 0x3ff
0x3fd: JUMPI 0x3ff V360
---
Entry stack: [V12, 0xef, V97, V97, V310, V339, 0xa9059cbb, V342]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xef, V97, V97, V310]

================================

Block 0x3fe
[0x3fe:0x3fe]
---
Predecessors: [0x3ef]
Successors: []
---
0x3fe INVALID
---
0x3fe: INVALID 
---
Entry stack: [V12, 0xef, V97, V97, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V97, V97, V310]

================================

Block 0x3ff
[0x3ff:0x432]
---
Predecessors: [0x3ef]
Successors: [0x433]
---
0x3ff JUMPDEST
0x400 PUSH1 0x40
0x402 DUP1
0x403 MLOAD
0x404 DUP3
0x405 DUP2
0x406 MSTORE
0x407 SWAP1
0x408 MLOAD
0x409 PUSH32 0x9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f
0x42a SWAP2
0x42b DUP2
0x42c SWAP1
0x42d SUB
0x42e PUSH1 0x20
0x430 ADD
0x431 SWAP1
0x432 LOG1
---
0x3ff: JUMPDEST 
0x400: V362 = 0x40
0x403: V363 = M[0x40]
0x406: M[V363] = V310
0x408: V364 = M[0x40]
0x409: V365 = 0x9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f
0x42d: V366 = SUB V363 V364
0x42e: V367 = 0x20
0x430: V368 = ADD 0x20 V366
0x432: LOG V364 V368 0x9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f
---
Entry stack: [V12, 0xef, V97, V97, V310]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V97, V97, V310]

================================

Block 0x433
[0x433:0x433]
---
Predecessors: [0x3ff]
Successors: [0x434]
---
0x433 JUMPDEST
---
0x433: JUMPDEST 
---
Entry stack: [V12, 0xef, V97, V97, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V97, V97, V310]

================================

Block 0x434
[0x434:0x438]
---
Predecessors: [0x433]
Successors: [0xef]
---
0x434 JUMPDEST
0x435 POP
0x436 POP
0x437 POP
0x438 JUMP
---
0x434: JUMPDEST 
0x438: JUMP 0xef
---
Entry stack: [V12, 0xef, V97, V97, V310]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x439
[0x439:0x44f]
---
Predecessors: [0x14e]
Successors: [0x450, 0x455]
---
0x439 JUMPDEST
0x43a PUSH1 0x0
0x43c SLOAD
0x43d CALLER
0x43e PUSH1 0x1
0x440 PUSH1 0xa0
0x442 PUSH1 0x2
0x444 EXP
0x445 SUB
0x446 SWAP1
0x447 DUP2
0x448 AND
0x449 SWAP2
0x44a AND
0x44b EQ
0x44c PUSH2 0x455
0x44f JUMPI
---
0x439: JUMPDEST 
0x43a: V369 = 0x0
0x43c: V370 = S[0x0]
0x43d: V371 = CALLER
0x43e: V372 = 0x1
0x440: V373 = 0xa0
0x442: V374 = 0x2
0x444: V375 = EXP 0x2 0xa0
0x445: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x448: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x44a: V378 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x44b: V379 = EQ V378 V377
0x44c: V380 = 0x455
0x44f: JUMPI 0x455 V379
---
Entry stack: [V12, 0xef, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V110]

================================

Block 0x450
[0x450:0x454]
---
Predecessors: [0x439]
Successors: []
---
0x450 PUSH1 0x0
0x452 PUSH1 0x0
0x454 REVERT
---
0x450: V381 = 0x0
0x452: V382 = 0x0
0x454: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V110]

================================

Block 0x455
[0x455:0x4ac]
---
Predecessors: [0x439]
Successors: [0x4ad]
---
0x455 JUMPDEST
0x456 PUSH1 0x2
0x458 DUP1
0x459 SLOAD
0x45a PUSH1 0x1
0x45c PUSH1 0xa0
0x45e PUSH1 0x2
0x460 EXP
0x461 SUB
0x462 NOT
0x463 AND
0x464 PUSH1 0x1
0x466 PUSH1 0xa0
0x468 PUSH1 0x2
0x46a EXP
0x46b SUB
0x46c DUP4
0x46d DUP2
0x46e AND
0x46f SWAP2
0x470 SWAP1
0x471 SWAP2
0x472 OR
0x473 SWAP2
0x474 DUP3
0x475 SWAP1
0x476 SSTORE
0x477 PUSH1 0x40
0x479 DUP1
0x47a MLOAD
0x47b SWAP3
0x47c SWAP1
0x47d SWAP2
0x47e AND
0x47f DUP3
0x480 MSTORE
0x481 MLOAD
0x482 PUSH32 0x2ac7f8ce86335c3676136e12258df31ce11dc5b133c40661ee6517da6254a31e
0x4a3 SWAP2
0x4a4 PUSH1 0x20
0x4a6 SWAP1
0x4a7 DUP3
0x4a8 SWAP1
0x4a9 SUB
0x4aa ADD
0x4ab SWAP1
0x4ac LOG1
---
0x455: JUMPDEST 
0x456: V383 = 0x2
0x459: V384 = S[0x2]
0x45a: V385 = 0x1
0x45c: V386 = 0xa0
0x45e: V387 = 0x2
0x460: V388 = EXP 0x2 0xa0
0x461: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x462: V390 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x463: V391 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V384
0x464: V392 = 0x1
0x466: V393 = 0xa0
0x468: V394 = 0x2
0x46a: V395 = EXP 0x2 0xa0
0x46b: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46e: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x472: V398 = OR V397 V391
0x476: S[0x2] = V398
0x477: V399 = 0x40
0x47a: V400 = M[0x40]
0x47e: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x480: M[V400] = V401
0x481: V402 = M[0x40]
0x482: V403 = 0x2ac7f8ce86335c3676136e12258df31ce11dc5b133c40661ee6517da6254a31e
0x4a4: V404 = 0x20
0x4a9: V405 = SUB V400 V402
0x4aa: V406 = ADD V405 0x20
0x4ac: LOG V402 V406 0x2ac7f8ce86335c3676136e12258df31ce11dc5b133c40661ee6517da6254a31e
---
Entry stack: [V12, 0xef, V110]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V110]

================================

Block 0x4ad
[0x4ad:0x4ad]
---
Predecessors: [0x455]
Successors: [0x4ae]
---
0x4ad JUMPDEST
---
0x4ad: JUMPDEST 
---
Entry stack: [V12, 0xef, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V110]

================================

Block 0x4ae
[0x4ae:0x4b0]
---
Predecessors: [0x4ad]
Successors: [0xef]
---
0x4ae JUMPDEST
0x4af POP
0x4b0 JUMP
---
0x4ae: JUMPDEST 
0x4b0: JUMP 0xef
---
Entry stack: [V12, 0xef, V110]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b1
[0x4b1:0x4c7]
---
Predecessors: [0x16c]
Successors: [0x4c8, 0x4cd]
---
0x4b1 JUMPDEST
0x4b2 PUSH1 0x0
0x4b4 SLOAD
0x4b5 CALLER
0x4b6 PUSH1 0x1
0x4b8 PUSH1 0xa0
0x4ba PUSH1 0x2
0x4bc EXP
0x4bd SUB
0x4be SWAP1
0x4bf DUP2
0x4c0 AND
0x4c1 SWAP2
0x4c2 AND
0x4c3 EQ
0x4c4 PUSH2 0x4cd
0x4c7 JUMPI
---
0x4b1: JUMPDEST 
0x4b2: V407 = 0x0
0x4b4: V408 = S[0x0]
0x4b5: V409 = CALLER
0x4b6: V410 = 0x1
0x4b8: V411 = 0xa0
0x4ba: V412 = 0x2
0x4bc: V413 = EXP 0x2 0xa0
0x4bd: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c0: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x4c2: V416 = AND V408 0xffffffffffffffffffffffffffffffffffffffff
0x4c3: V417 = EQ V416 V415
0x4c4: V418 = 0x4cd
0x4c7: JUMPI 0x4cd V417
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x4c8
[0x4c8:0x4cc]
---
Predecessors: [0x4b1]
Successors: []
---
0x4c8 PUSH1 0x0
0x4ca PUSH1 0x0
0x4cc REVERT
---
0x4c8: V419 = 0x0
0x4ca: V420 = 0x0
0x4cc: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x4cd
[0x4cd:0x4de]
---
Predecessors: [0x4b1]
Successors: [0x4df, 0x4e4]
---
0x4cd JUMPDEST
0x4ce PUSH1 0x1
0x4d0 PUSH1 0xa0
0x4d2 PUSH1 0x2
0x4d4 EXP
0x4d5 SUB
0x4d6 ADDRESS
0x4d7 AND
0x4d8 BALANCE
0x4d9 ISZERO
0x4da ISZERO
0x4db PUSH2 0x4e4
0x4de JUMPI
---
0x4cd: JUMPDEST 
0x4ce: V421 = 0x1
0x4d0: V422 = 0xa0
0x4d2: V423 = 0x2
0x4d4: V424 = EXP 0x2 0xa0
0x4d5: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d6: V426 = ADDRESS
0x4d7: V427 = AND V426 0xffffffffffffffffffffffffffffffffffffffff
0x4d8: V428 = BALANCE V427
0x4d9: V429 = ISZERO V428
0x4da: V430 = ISZERO V429
0x4db: V431 = 0x4e4
0x4de: JUMPI 0x4e4 V430
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x4df
[0x4df:0x4e3]
---
Predecessors: [0x4cd]
Successors: []
---
0x4df PUSH1 0x0
0x4e1 PUSH1 0x0
0x4e3 REVERT
---
0x4df: V432 = 0x0
0x4e1: V433 = 0x0
0x4e3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x4e4
[0x4e4:0x518]
---
Predecessors: [0x4cd]
Successors: [0x519, 0x51a]
---
0x4e4 JUMPDEST
0x4e5 PUSH1 0x0
0x4e7 DUP1
0x4e8 SLOAD
0x4e9 PUSH1 0x40
0x4eb MLOAD
0x4ec PUSH1 0x1
0x4ee PUSH1 0xa0
0x4f0 PUSH1 0x2
0x4f2 EXP
0x4f3 SUB
0x4f4 SWAP2
0x4f5 DUP3
0x4f6 AND
0x4f7 SWAP3
0x4f8 ADDRESS
0x4f9 SWAP1
0x4fa SWAP3
0x4fb AND
0x4fc BALANCE
0x4fd DUP1
0x4fe ISZERO
0x4ff PUSH2 0x8fc
0x502 MUL
0x503 SWAP3
0x504 SWAP1
0x505 SWAP2
0x506 SWAP1
0x507 DUP2
0x508 DUP2
0x509 DUP2
0x50a DUP6
0x50b DUP9
0x50c DUP9
0x50d CALL
0x50e SWAP4
0x50f POP
0x510 POP
0x511 POP
0x512 POP
0x513 ISZERO
0x514 ISZERO
0x515 PUSH2 0x51a
0x518 JUMPI
---
0x4e4: JUMPDEST 
0x4e5: V434 = 0x0
0x4e8: V435 = S[0x0]
0x4e9: V436 = 0x40
0x4eb: V437 = M[0x40]
0x4ec: V438 = 0x1
0x4ee: V439 = 0xa0
0x4f0: V440 = 0x2
0x4f2: V441 = EXP 0x2 0xa0
0x4f3: V442 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f6: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x4f8: V444 = ADDRESS
0x4fb: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x4fc: V446 = BALANCE V445
0x4fe: V447 = ISZERO V446
0x4ff: V448 = 0x8fc
0x502: V449 = MUL 0x8fc V447
0x50d: V450 = CALL V449 V443 V446 V437 0x0 V437 0x0
0x513: V451 = ISZERO V450
0x514: V452 = ISZERO V451
0x515: V453 = 0x51a
0x518: JUMPI 0x51a V452
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x519
[0x519:0x519]
---
Predecessors: [0x4e4]
Successors: []
---
0x519 INVALID
---
0x519: INVALID 
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x51a
[0x51a:0x557]
---
Predecessors: [0x4e4]
Successors: [0x558]
---
0x51a JUMPDEST
0x51b PUSH1 0x40
0x51d DUP1
0x51e MLOAD
0x51f PUSH1 0x1
0x521 PUSH1 0xa0
0x523 PUSH1 0x2
0x525 EXP
0x526 SUB
0x527 ADDRESS
0x528 AND
0x529 BALANCE
0x52a DUP2
0x52b MSTORE
0x52c SWAP1
0x52d MLOAD
0x52e PUSH32 0x4590a28d5a843588aa29cd0037e47b18e8e1223898c124a04ab7165d68d826f
0x54f SWAP2
0x550 DUP2
0x551 SWAP1
0x552 SUB
0x553 PUSH1 0x20
0x555 ADD
0x556 SWAP1
0x557 LOG1
---
0x51a: JUMPDEST 
0x51b: V454 = 0x40
0x51e: V455 = M[0x40]
0x51f: V456 = 0x1
0x521: V457 = 0xa0
0x523: V458 = 0x2
0x525: V459 = EXP 0x2 0xa0
0x526: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x527: V461 = ADDRESS
0x528: V462 = AND V461 0xffffffffffffffffffffffffffffffffffffffff
0x529: V463 = BALANCE V462
0x52b: M[V455] = V463
0x52d: V464 = M[0x40]
0x52e: V465 = 0x4590a28d5a843588aa29cd0037e47b18e8e1223898c124a04ab7165d68d826f
0x552: V466 = SUB V455 V464
0x553: V467 = 0x20
0x555: V468 = ADD 0x20 V466
0x557: LOG V464 V468 0x4590a28d5a843588aa29cd0037e47b18e8e1223898c124a04ab7165d68d826f
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x558
[0x558:0x558]
---
Predecessors: [0x51a]
Successors: [0x559]
---
0x558 JUMPDEST
---
0x558: JUMPDEST 
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef]

================================

Block 0x559
[0x559:0x55a]
---
Predecessors: [0x558]
Successors: [0xef]
---
0x559 JUMPDEST
0x55a JUMP
---
0x559: JUMPDEST 
0x55a: JUMP 0xef
---
Entry stack: [V12, 0xef]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x55b
[0x55b:0x569]
---
Predecessors: [0x17e]
Successors: [0x186]
---
0x55b JUMPDEST
0x55c PUSH1 0x2
0x55e SLOAD
0x55f PUSH1 0x1
0x561 PUSH1 0xa0
0x563 PUSH1 0x2
0x565 EXP
0x566 SUB
0x567 AND
0x568 DUP2
0x569 JUMP
---
0x55b: JUMPDEST 
0x55c: V469 = 0x2
0x55e: V470 = S[0x2]
0x55f: V471 = 0x1
0x561: V472 = 0xa0
0x563: V473 = 0x2
0x565: V474 = EXP 0x2 0xa0
0x566: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x567: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x569: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V476]
Exit stack: [V12, 0x186, V476]

================================

Block 0x56a
[0x56a:0x578]
---
Predecessors: [0x1aa]
Successors: [0x186]
---
0x56a JUMPDEST
0x56b PUSH1 0x0
0x56d SLOAD
0x56e PUSH1 0x1
0x570 PUSH1 0xa0
0x572 PUSH1 0x2
0x574 EXP
0x575 SUB
0x576 AND
0x577 DUP2
0x578 JUMP
---
0x56a: JUMPDEST 
0x56b: V477 = 0x0
0x56d: V478 = S[0x0]
0x56e: V479 = 0x1
0x570: V480 = 0xa0
0x572: V481 = 0x2
0x574: V482 = EXP 0x2 0xa0
0x575: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x576: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x578: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V484]
Exit stack: [V12, 0x186, V484]

================================

Block 0x579
[0x579:0x58f]
---
Predecessors: [0x1d6]
Successors: [0x590, 0x595]
---
0x579 JUMPDEST
0x57a PUSH1 0x0
0x57c SLOAD
0x57d CALLER
0x57e PUSH1 0x1
0x580 PUSH1 0xa0
0x582 PUSH1 0x2
0x584 EXP
0x585 SUB
0x586 SWAP1
0x587 DUP2
0x588 AND
0x589 SWAP2
0x58a AND
0x58b EQ
0x58c PUSH2 0x595
0x58f JUMPI
---
0x579: JUMPDEST 
0x57a: V485 = 0x0
0x57c: V486 = S[0x0]
0x57d: V487 = CALLER
0x57e: V488 = 0x1
0x580: V489 = 0xa0
0x582: V490 = 0x2
0x584: V491 = EXP 0x2 0xa0
0x585: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x588: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x58a: V494 = AND V486 0xffffffffffffffffffffffffffffffffffffffff
0x58b: V495 = EQ V494 V493
0x58c: V496 = 0x595
0x58f: JUMPI 0x595 V495
---
Entry stack: [V12, 0xef, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V162]

================================

Block 0x590
[0x590:0x594]
---
Predecessors: [0x579]
Successors: []
---
0x590 PUSH1 0x0
0x592 PUSH1 0x0
0x594 REVERT
---
0x590: V497 = 0x0
0x592: V498 = 0x0
0x594: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V162]

================================

Block 0x595
[0x595:0x5e6]
---
Predecessors: [0x579]
Successors: [0x5e7]
---
0x595 JUMPDEST
0x596 PUSH1 0x3
0x598 DUP1
0x599 SLOAD
0x59a PUSH1 0x1
0x59c PUSH1 0xa0
0x59e PUSH1 0x2
0x5a0 EXP
0x5a1 SUB
0x5a2 DUP4
0x5a3 AND
0x5a4 PUSH1 0x1
0x5a6 PUSH1 0xa0
0x5a8 PUSH1 0x2
0x5aa EXP
0x5ab SUB
0x5ac NOT
0x5ad SWAP1
0x5ae SWAP2
0x5af AND
0x5b0 DUP2
0x5b1 OR
0x5b2 SWAP1
0x5b3 SWAP2
0x5b4 SSTORE
0x5b5 PUSH1 0x40
0x5b7 DUP1
0x5b8 MLOAD
0x5b9 SWAP2
0x5ba DUP3
0x5bb MSTORE
0x5bc MLOAD
0x5bd PUSH32 0x408d9e356c18d649d8224da0d79ce6ee4aa98ecd1b418caa86cc110341dcfcd6
0x5de SWAP2
0x5df DUP2
0x5e0 SWAP1
0x5e1 SUB
0x5e2 PUSH1 0x20
0x5e4 ADD
0x5e5 SWAP1
0x5e6 LOG1
---
0x595: JUMPDEST 
0x596: V499 = 0x3
0x599: V500 = S[0x3]
0x59a: V501 = 0x1
0x59c: V502 = 0xa0
0x59e: V503 = 0x2
0x5a0: V504 = EXP 0x2 0xa0
0x5a1: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a3: V506 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x5a4: V507 = 0x1
0x5a6: V508 = 0xa0
0x5a8: V509 = 0x2
0x5aa: V510 = EXP 0x2 0xa0
0x5ab: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ac: V512 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5af: V513 = AND V500 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x5b1: V514 = OR V506 V513
0x5b4: S[0x3] = V514
0x5b5: V515 = 0x40
0x5b8: V516 = M[0x40]
0x5bb: M[V516] = V506
0x5bc: V517 = M[0x40]
0x5bd: V518 = 0x408d9e356c18d649d8224da0d79ce6ee4aa98ecd1b418caa86cc110341dcfcd6
0x5e1: V519 = SUB V516 V517
0x5e2: V520 = 0x20
0x5e4: V521 = ADD 0x20 V519
0x5e6: LOG V517 V521 0x408d9e356c18d649d8224da0d79ce6ee4aa98ecd1b418caa86cc110341dcfcd6
---
Entry stack: [V12, 0xef, V162]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V162]

================================

Block 0x5e7
[0x5e7:0x5e7]
---
Predecessors: [0x595]
Successors: [0x5e8]
---
0x5e7 JUMPDEST
---
0x5e7: JUMPDEST 
---
Entry stack: [V12, 0xef, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V162]

================================

Block 0x5e8
[0x5e8:0x5ea]
---
Predecessors: [0x5e7]
Successors: [0xef]
---
0x5e8 JUMPDEST
0x5e9 POP
0x5ea JUMP
---
0x5e8: JUMPDEST 
0x5ea: JUMP 0xef
---
Entry stack: [V12, 0xef, V162]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x5eb
[0x5eb:0x5f0]
---
Predecessors: [0x1f4]
Successors: [0x101]
---
0x5eb JUMPDEST
0x5ec PUSH1 0x4
0x5ee SLOAD
0x5ef DUP2
0x5f0 JUMP
---
0x5eb: JUMPDEST 
0x5ec: V522 = 0x4
0x5ee: V523 = S[0x4]
0x5f0: JUMP 0x101
---
Entry stack: [V12, 0x101]
Stack pops: 1
Stack additions: [S0, V523]
Exit stack: [V12, 0x101, V523]

================================

Block 0x5f1
[0x5f1:0x5ff]
---
Predecessors: [0x216]
Successors: [0x186]
---
0x5f1 JUMPDEST
0x5f2 PUSH1 0x3
0x5f4 SLOAD
0x5f5 PUSH1 0x1
0x5f7 PUSH1 0xa0
0x5f9 PUSH1 0x2
0x5fb EXP
0x5fc SUB
0x5fd AND
0x5fe DUP2
0x5ff JUMP
---
0x5f1: JUMPDEST 
0x5f2: V524 = 0x3
0x5f4: V525 = S[0x3]
0x5f5: V526 = 0x1
0x5f7: V527 = 0xa0
0x5f9: V528 = 0x2
0x5fb: V529 = EXP 0x2 0xa0
0x5fc: V530 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fd: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x5ff: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V531]
Exit stack: [V12, 0x186, V531]

================================

Block 0x600
[0x600:0x61a]
---
Predecessors: [0x242]
Successors: [0x61b, 0x62e]
---
0x600 JUMPDEST
0x601 PUSH1 0x3
0x603 SLOAD
0x604 PUSH1 0x0
0x606 SWAP1
0x607 CALLER
0x608 PUSH1 0x1
0x60a PUSH1 0xa0
0x60c PUSH1 0x2
0x60e EXP
0x60f SUB
0x610 SWAP1
0x611 DUP2
0x612 AND
0x613 SWAP2
0x614 AND
0x615 EQ
0x616 DUP1
0x617 PUSH2 0x62e
0x61a JUMPI
---
0x600: JUMPDEST 
0x601: V532 = 0x3
0x603: V533 = S[0x3]
0x604: V534 = 0x0
0x607: V535 = CALLER
0x608: V536 = 0x1
0x60a: V537 = 0xa0
0x60c: V538 = 0x2
0x60e: V539 = EXP 0x2 0xa0
0x60f: V540 = SUB 0x10000000000000000000000000000000000000000 0x1
0x612: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V535
0x614: V542 = AND V533 0xffffffffffffffffffffffffffffffffffffffff
0x615: V543 = EQ V542 V541
0x617: V544 = 0x62e
0x61a: JUMPI 0x62e V543
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: [0x0, V543]
Exit stack: [V12, 0xef, 0x0, V543]

================================

Block 0x61b
[0x61b:0x62d]
---
Predecessors: [0x600]
Successors: [0x62e]
---
0x61b POP
0x61c PUSH1 0x0
0x61e SLOAD
0x61f CALLER
0x620 PUSH1 0x1
0x622 PUSH1 0xa0
0x624 PUSH1 0x2
0x626 EXP
0x627 SUB
0x628 SWAP1
0x629 DUP2
0x62a AND
0x62b SWAP2
0x62c AND
0x62d EQ
---
0x61c: V545 = 0x0
0x61e: V546 = S[0x0]
0x61f: V547 = CALLER
0x620: V548 = 0x1
0x622: V549 = 0xa0
0x624: V550 = 0x2
0x626: V551 = EXP 0x2 0xa0
0x627: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62a: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x62c: V554 = AND V546 0xffffffffffffffffffffffffffffffffffffffff
0x62d: V555 = EQ V554 V553
---
Entry stack: [V12, 0xef, 0x0, V543]
Stack pops: 1
Stack additions: [V555]
Exit stack: [V12, 0xef, 0x0, V555]

================================

Block 0x62e
[0x62e:0x634]
---
Predecessors: [0x600, 0x61b]
Successors: [0x635, 0x63a]
---
0x62e JUMPDEST
0x62f ISZERO
0x630 ISZERO
0x631 PUSH2 0x63a
0x634 JUMPI
---
0x62e: JUMPDEST 
0x62f: V556 = ISZERO S0
0x630: V557 = ISZERO V556
0x631: V558 = 0x63a
0x634: JUMPI 0x63a V557
---
Entry stack: [V12, 0xef, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef, 0x0]

================================

Block 0x635
[0x635:0x639]
---
Predecessors: [0x62e]
Successors: []
---
0x635 PUSH1 0x0
0x637 PUSH1 0x0
0x639 REVERT
---
0x635: V559 = 0x0
0x637: V560 = 0x0
0x639: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, 0x0]

================================

Block 0x63a
[0x63a:0x644]
---
Predecessors: [0x62e]
Successors: [0x787]
---
0x63a JUMPDEST
0x63b PUSH1 0x1
0x63d SLOAD
0x63e PUSH2 0x645
0x641 PUSH2 0x787
0x644 JUMP
---
0x63a: JUMPDEST 
0x63b: V561 = 0x1
0x63d: V562 = S[0x1]
0x63e: V563 = 0x645
0x641: V564 = 0x787
0x644: JUMP 0x787
---
Entry stack: [V12, 0xef, 0x0]
Stack pops: 0
Stack additions: [V562, 0x645]
Exit stack: [V12, 0xef, 0x0, V562, 0x645]

================================

Block 0x645
[0x645:0x64b]
---
Predecessors: [0x789]
Successors: [0x64c, 0x650]
---
0x645 JUMPDEST
0x646 LT
0x647 ISZERO
0x648 PUSH2 0x650
0x64b JUMPI
---
0x645: JUMPDEST 
0x646: V565 = LT V678 V562
0x647: V566 = ISZERO V565
0x648: V567 = 0x650
0x64b: JUMPI 0x650 V566
---
Entry stack: [V12, 0xef, 0x0, V562, V678]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xef, 0x0]

================================

Block 0x64c
[0x64c:0x64f]
---
Predecessors: [0x645]
Successors: [0x2da]
---
0x64c PUSH2 0x2da
0x64f JUMP
---
0x64c: V568 = 0x2da
0x64f: JUMP 0x2da
---
Entry stack: [V12, 0xef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, 0x0]

================================

Block 0x650
[0x650:0x661]
---
Predecessors: [0x645]
Successors: [0x662, 0x666]
---
0x650 JUMPDEST
0x651 PUSH1 0x1
0x653 PUSH1 0xa0
0x655 PUSH1 0x2
0x657 EXP
0x658 SUB
0x659 ADDRESS
0x65a AND
0x65b BALANCE
0x65c ISZERO
0x65d ISZERO
0x65e PUSH2 0x666
0x661 JUMPI
---
0x650: JUMPDEST 
0x651: V569 = 0x1
0x653: V570 = 0xa0
0x655: V571 = 0x2
0x657: V572 = EXP 0x2 0xa0
0x658: V573 = SUB 0x10000000000000000000000000000000000000000 0x1
0x659: V574 = ADDRESS
0x65a: V575 = AND V574 0xffffffffffffffffffffffffffffffffffffffff
0x65b: V576 = BALANCE V575
0x65c: V577 = ISZERO V576
0x65d: V578 = ISZERO V577
0x65e: V579 = 0x666
0x661: JUMPI 0x666 V578
---
Entry stack: [V12, 0xef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, 0x0]

================================

Block 0x662
[0x662:0x665]
---
Predecessors: [0x650]
Successors: [0x2da]
---
0x662 PUSH2 0x2da
0x665 JUMP
---
0x662: V580 = 0x2da
0x665: JUMP 0x2da
---
Entry stack: [V12, 0xef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, 0x0]

================================

Block 0x666
[0x666:0x67b]
---
Predecessors: [0x650]
Successors: [0x78c]
---
0x666 JUMPDEST
0x667 PUSH2 0x67c
0x66a ADDRESS
0x66b PUSH1 0x1
0x66d PUSH1 0xa0
0x66f PUSH1 0x2
0x671 EXP
0x672 SUB
0x673 AND
0x674 BALANCE
0x675 PUSH1 0x4
0x677 SLOAD
0x678 PUSH2 0x78c
0x67b JUMP
---
0x666: JUMPDEST 
0x667: V581 = 0x67c
0x66a: V582 = ADDRESS
0x66b: V583 = 0x1
0x66d: V584 = 0xa0
0x66f: V585 = 0x2
0x671: V586 = EXP 0x2 0xa0
0x672: V587 = SUB 0x10000000000000000000000000000000000000000 0x1
0x673: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x674: V589 = BALANCE V588
0x675: V590 = 0x4
0x677: V591 = S[0x4]
0x678: V592 = 0x78c
0x67b: JUMP 0x78c
---
Entry stack: [V12, 0xef, 0x0]
Stack pops: 0
Stack additions: [0x67c, V589, V591]
Exit stack: [V12, 0xef, 0x0, 0x67c, V589, V591]

================================

Block 0x67c
[0x67c:0x6a8]
---
Predecessors: [0x7a0]
Successors: [0x6a9, 0x6aa]
---
0x67c JUMPDEST
0x67d PUSH1 0x2
0x67f SLOAD
0x680 PUSH1 0x40
0x682 MLOAD
0x683 SWAP2
0x684 SWAP3
0x685 POP
0x686 PUSH1 0x1
0x688 PUSH1 0xa0
0x68a PUSH1 0x2
0x68c EXP
0x68d SUB
0x68e AND
0x68f SWAP1
0x690 DUP3
0x691 SWAP1
0x692 PUSH1 0x0
0x694 DUP2
0x695 DUP2
0x696 DUP2
0x697 DUP6
0x698 DUP8
0x699 PUSH2 0x8796
0x69c GAS
0x69d SUB
0x69e CALL
0x69f SWAP3
0x6a0 POP
0x6a1 POP
0x6a2 POP
0x6a3 ISZERO
0x6a4 ISZERO
0x6a5 PUSH2 0x6aa
0x6a8 JUMPI
---
0x67c: JUMPDEST 
0x67d: V593 = 0x2
0x67f: V594 = S[0x2]
0x680: V595 = 0x40
0x682: V596 = M[0x40]
0x686: V597 = 0x1
0x688: V598 = 0xa0
0x68a: V599 = 0x2
0x68c: V600 = EXP 0x2 0xa0
0x68d: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68e: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0x692: V603 = 0x0
0x699: V604 = 0x8796
0x69c: V605 = GAS
0x69d: V606 = SUB V605 0x8796
0x69e: V607 = CALL V606 V602 S0 V596 0x0 V596 0x0
0x6a3: V608 = ISZERO V607
0x6a4: V609 = ISZERO V608
0x6a5: V610 = 0x6aa
0x6a8: JUMPI 0x6aa V609
---
Entry stack: [V12, 0xef, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xef, S0]

================================

Block 0x6a9
[0x6a9:0x6a9]
---
Predecessors: [0x67c]
Successors: []
---
0x6a9 INVALID
---
0x6a9: INVALID 
---
Entry stack: [V12, 0xef, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, S0]

================================

Block 0x6aa
[0x6aa:0x6dd]
---
Predecessors: [0x67c]
Successors: [0x6de]
---
0x6aa JUMPDEST
0x6ab PUSH1 0x40
0x6ad DUP1
0x6ae MLOAD
0x6af DUP3
0x6b0 DUP2
0x6b1 MSTORE
0x6b2 SWAP1
0x6b3 MLOAD
0x6b4 PUSH32 0x2cc7fc366e6223ae7f11c4ff0e58bcf1ca186735e7bcbd46dd39db0ff902f272
0x6d5 SWAP2
0x6d6 DUP2
0x6d7 SWAP1
0x6d8 SUB
0x6d9 PUSH1 0x20
0x6db ADD
0x6dc SWAP1
0x6dd LOG1
---
0x6aa: JUMPDEST 
0x6ab: V611 = 0x40
0x6ae: V612 = M[0x40]
0x6b1: M[V612] = S0
0x6b3: V613 = M[0x40]
0x6b4: V614 = 0x2cc7fc366e6223ae7f11c4ff0e58bcf1ca186735e7bcbd46dd39db0ff902f272
0x6d8: V615 = SUB V612 V613
0x6d9: V616 = 0x20
0x6db: V617 = ADD 0x20 V615
0x6dd: LOG V613 V617 0x2cc7fc366e6223ae7f11c4ff0e58bcf1ca186735e7bcbd46dd39db0ff902f272
---
Entry stack: [V12, 0xef, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, S0]

================================

Block 0x6de
[0x6de:0x6de]
---
Predecessors: [0x6aa]
Successors: [0x6df]
---
0x6de JUMPDEST
---
0x6de: JUMPDEST 
---
Entry stack: [V12, 0xef, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, S0]

================================

Block 0x6df
[0x6df:0x6e1]
---
Predecessors: [0x6de]
Successors: [0xef]
---
0x6df JUMPDEST
0x6e0 POP
0x6e1 JUMP
---
0x6df: JUMPDEST 
0x6e1: JUMP 0xef
---
Entry stack: [V12, 0xef, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e2
[0x6e2:0x6f8]
---
Predecessors: [0x254]
Successors: [0x6f9, 0x6fe]
---
0x6e2 JUMPDEST
0x6e3 PUSH1 0x0
0x6e5 SLOAD
0x6e6 CALLER
0x6e7 PUSH1 0x1
0x6e9 PUSH1 0xa0
0x6eb PUSH1 0x2
0x6ed EXP
0x6ee SUB
0x6ef SWAP1
0x6f0 DUP2
0x6f1 AND
0x6f2 SWAP2
0x6f3 AND
0x6f4 EQ
0x6f5 PUSH2 0x6fe
0x6f8 JUMPI
---
0x6e2: JUMPDEST 
0x6e3: V618 = 0x0
0x6e5: V619 = S[0x0]
0x6e6: V620 = CALLER
0x6e7: V621 = 0x1
0x6e9: V622 = 0xa0
0x6eb: V623 = 0x2
0x6ed: V624 = EXP 0x2 0xa0
0x6ee: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f1: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x6f3: V627 = AND V619 0xffffffffffffffffffffffffffffffffffffffff
0x6f4: V628 = EQ V627 V626
0x6f5: V629 = 0x6fe
0x6f8: JUMPI 0x6fe V628
---
Entry stack: [V12, 0xef, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V202]

================================

Block 0x6f9
[0x6f9:0x6fd]
---
Predecessors: [0x6e2]
Successors: []
---
0x6f9 PUSH1 0x0
0x6fb PUSH1 0x0
0x6fd REVERT
---
0x6f9: V630 = 0x0
0x6fb: V631 = 0x0
0x6fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V202]

================================

Block 0x6fe
[0x6fe:0x736]
---
Predecessors: [0x6e2]
Successors: [0x737]
---
0x6fe JUMPDEST
0x6ff PUSH1 0x1
0x701 DUP2
0x702 SWAP1
0x703 SSTORE
0x704 PUSH1 0x40
0x706 DUP1
0x707 MLOAD
0x708 DUP3
0x709 DUP2
0x70a MSTORE
0x70b SWAP1
0x70c MLOAD
0x70d PUSH32 0xfb961571b8d150a406487babca627336c6c0acca51fe987ea0075864d5688279
0x72e SWAP2
0x72f DUP2
0x730 SWAP1
0x731 SUB
0x732 PUSH1 0x20
0x734 ADD
0x735 SWAP1
0x736 LOG1
---
0x6fe: JUMPDEST 
0x6ff: V632 = 0x1
0x703: S[0x1] = V202
0x704: V633 = 0x40
0x707: V634 = M[0x40]
0x70a: M[V634] = V202
0x70c: V635 = M[0x40]
0x70d: V636 = 0xfb961571b8d150a406487babca627336c6c0acca51fe987ea0075864d5688279
0x731: V637 = SUB V634 V635
0x732: V638 = 0x20
0x734: V639 = ADD 0x20 V637
0x736: LOG V635 V639 0xfb961571b8d150a406487babca627336c6c0acca51fe987ea0075864d5688279
---
Entry stack: [V12, 0xef, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V202]

================================

Block 0x737
[0x737:0x737]
---
Predecessors: [0x6fe]
Successors: [0x738]
---
0x737 JUMPDEST
---
0x737: JUMPDEST 
---
Entry stack: [V12, 0xef, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V202]

================================

Block 0x738
[0x738:0x73a]
---
Predecessors: [0x737]
Successors: [0xef]
---
0x738 JUMPDEST
0x739 POP
0x73a JUMP
---
0x738: JUMPDEST 
0x73a: JUMP 0xef
---
Entry stack: [V12, 0xef, V202]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x73b
[0x73b:0x751]
---
Predecessors: [0x269]
Successors: [0x752, 0x757]
---
0x73b JUMPDEST
0x73c PUSH1 0x0
0x73e SLOAD
0x73f CALLER
0x740 PUSH1 0x1
0x742 PUSH1 0xa0
0x744 PUSH1 0x2
0x746 EXP
0x747 SUB
0x748 SWAP1
0x749 DUP2
0x74a AND
0x74b SWAP2
0x74c AND
0x74d EQ
0x74e PUSH2 0x757
0x751 JUMPI
---
0x73b: JUMPDEST 
0x73c: V640 = 0x0
0x73e: V641 = S[0x0]
0x73f: V642 = CALLER
0x740: V643 = 0x1
0x742: V644 = 0xa0
0x744: V645 = 0x2
0x746: V646 = EXP 0x2 0xa0
0x747: V647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74a: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V642
0x74c: V649 = AND V641 0xffffffffffffffffffffffffffffffffffffffff
0x74d: V650 = EQ V649 V648
0x74e: V651 = 0x757
0x751: JUMPI 0x757 V650
---
Entry stack: [V12, 0xef, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V215]

================================

Block 0x752
[0x752:0x756]
---
Predecessors: [0x73b]
Successors: []
---
0x752 PUSH1 0x0
0x754 PUSH1 0x0
0x756 REVERT
---
0x752: V652 = 0x0
0x754: V653 = 0x0
0x756: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V215]

================================

Block 0x757
[0x757:0x766]
---
Predecessors: [0x73b]
Successors: [0x2da, 0x767]
---
0x757 JUMPDEST
0x758 PUSH1 0x1
0x75a PUSH1 0xa0
0x75c PUSH1 0x2
0x75e EXP
0x75f SUB
0x760 DUP2
0x761 AND
0x762 ISZERO
0x763 PUSH2 0x2da
0x766 JUMPI
---
0x757: JUMPDEST 
0x758: V654 = 0x1
0x75a: V655 = 0xa0
0x75c: V656 = 0x2
0x75e: V657 = EXP 0x2 0xa0
0x75f: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x761: V659 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x762: V660 = ISZERO V659
0x763: V661 = 0x2da
0x766: JUMPI 0x2da V660
---
Entry stack: [V12, 0xef, V215]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V215]

================================

Block 0x767
[0x767:0x781]
---
Predecessors: [0x757]
Successors: [0x782]
---
0x767 PUSH1 0x0
0x769 DUP1
0x76a SLOAD
0x76b PUSH1 0x1
0x76d PUSH1 0xa0
0x76f PUSH1 0x2
0x771 EXP
0x772 SUB
0x773 NOT
0x774 AND
0x775 PUSH1 0x1
0x777 PUSH1 0xa0
0x779 PUSH1 0x2
0x77b EXP
0x77c SUB
0x77d DUP4
0x77e AND
0x77f OR
0x780 SWAP1
0x781 SSTORE
---
0x767: V662 = 0x0
0x76a: V663 = S[0x0]
0x76b: V664 = 0x1
0x76d: V665 = 0xa0
0x76f: V666 = 0x2
0x771: V667 = EXP 0x2 0xa0
0x772: V668 = SUB 0x10000000000000000000000000000000000000000 0x1
0x773: V669 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x774: V670 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V663
0x775: V671 = 0x1
0x777: V672 = 0xa0
0x779: V673 = 0x2
0x77b: V674 = EXP 0x2 0xa0
0x77c: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77e: V676 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x77f: V677 = OR V676 V670
0x781: S[0x0] = V677
---
Entry stack: [V12, 0xef, V215]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V215]

================================

Block 0x782
[0x782:0x782]
---
Predecessors: [0x767]
Successors: [0x783]
---
0x782 JUMPDEST
---
0x782: JUMPDEST 
---
Entry stack: [V12, 0xef, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V215]

================================

Block 0x783
[0x783:0x783]
---
Predecessors: [0x782]
Successors: [0x784]
---
0x783 JUMPDEST
---
0x783: JUMPDEST 
---
Entry stack: [V12, 0xef, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V215]

================================

Block 0x784
[0x784:0x786]
---
Predecessors: [0x783]
Successors: [0xef]
---
0x784 JUMPDEST
0x785 POP
0x786 JUMP
---
0x784: JUMPDEST 
0x786: JUMP 0xef
---
Entry stack: [V12, 0xef, V215]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x787
[0x787:0x788]
---
Predecessors: [0x63a]
Successors: [0x789]
---
0x787 JUMPDEST
0x788 NUMBER
---
0x787: JUMPDEST 
0x788: V678 = NUMBER
---
Entry stack: [V12, 0xef, 0x0, V562, 0x645]
Stack pops: 0
Stack additions: [V678]
Exit stack: [V12, 0xef, 0x0, V562, 0x645, V678]

================================

Block 0x789
[0x789:0x78b]
---
Predecessors: [0x787]
Successors: [0x645]
---
0x789 JUMPDEST
0x78a SWAP1
0x78b JUMP
---
0x789: JUMPDEST 
0x78b: JUMP 0x645
---
Entry stack: [V12, 0xef, 0x0, V562, 0x645, V678]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xef, 0x0, V562, V678]

================================

Block 0x78c
[0x78c:0x795]
---
Predecessors: [0x666]
Successors: [0x796, 0x79b]
---
0x78c JUMPDEST
0x78d PUSH1 0x0
0x78f DUP2
0x790 DUP4
0x791 LT
0x792 PUSH2 0x79b
0x795 JUMPI
---
0x78c: JUMPDEST 
0x78d: V679 = 0x0
0x791: V680 = LT V589 V591
0x792: V681 = 0x79b
0x795: JUMPI 0x79b V680
---
Entry stack: [V12, 0xef, 0x0, 0x67c, V589, V591]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0xef, 0x0, 0x67c, V589, V591, 0x0]

================================

Block 0x796
[0x796:0x79a]
---
Predecessors: [0x78c]
Successors: [0x79d]
---
0x796 DUP2
0x797 PUSH2 0x79d
0x79a JUMP
---
0x797: V682 = 0x79d
0x79a: JUMP 0x79d
---
Entry stack: [V12, 0xef, 0x0, 0x67c, V589, V591, 0x0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, 0xef, 0x0, 0x67c, V589, V591, 0x0, V591]

================================

Block 0x79b
[0x79b:0x79c]
---
Predecessors: [0x78c]
Successors: [0x79d]
---
0x79b JUMPDEST
0x79c DUP3
---
0x79b: JUMPDEST 
---
Entry stack: [V12, 0xef, 0x0, 0x67c, V589, V591, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V12, 0xef, 0x0, 0x67c, V589, V591, 0x0, V589]

================================

Block 0x79d
[0x79d:0x79f]
---
Predecessors: [0x796, 0x79b]
Successors: [0x7a0]
---
0x79d JUMPDEST
0x79e SWAP1
0x79f POP
---
0x79d: JUMPDEST 
---
Entry stack: [V12, 0xef, 0x0, 0x67c, V589, V591, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xef, 0x0, 0x67c, V589, V591, S0]

================================

Block 0x7a0
[0x7a0:0x7a5]
---
Predecessors: [0x79d]
Successors: [0x67c]
---
0x7a0 JUMPDEST
0x7a1 SWAP3
0x7a2 SWAP2
0x7a3 POP
0x7a4 POP
0x7a5 JUMP
---
0x7a0: JUMPDEST 
0x7a5: JUMP 0x67c
---
Entry stack: [V12, 0xef, 0x0, 0x67c, V589, V591, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0xef, 0x0, S0]

================================

Block 0x7a6
[0x7a6:0x7d1]
---
Predecessors: []
Successors: []
---
0x7a6 STOP
0x7a7 LOG1
0x7a8 PUSH6 0x627a7a723058
0x7af SHA3
0x7b0 EXTCODESIZE
0x7b1 PUSH12 0x82959a2af3a097fa3e72f229
0x7be MISSING 0xc7
0x7bf MISSING 0xa7
0x7c0 MISSING 0xd4
0x7c1 MISSING 0x46
0x7c2 CALLER
0x7c3 MISSING 0xbe
0x7c4 MISSING 0xe7
0x7c5 EXTCODECOPY
0x7c6 SWAP15
0x7c7 PC
0x7c8 MISSING 0xc0
0x7c9 PUSH6 0x2ef068839d81
0x7d0 STOP
0x7d1 MISSING 0x29
---
0x7a6: STOP 
0x7a7: LOG S0 S1 S2
0x7a8: V683 = 0x627a7a723058
0x7af: V684 = SHA3 0x627a7a723058 S3
0x7b0: V685 = EXTCODESIZE V684
0x7b1: V686 = 0x82959a2af3a097fa3e72f229
0x7be: MISSING 0xc7
0x7bf: MISSING 0xa7
0x7c0: MISSING 0xd4
0x7c1: MISSING 0x46
0x7c2: V687 = CALLER
0x7c3: MISSING 0xbe
0x7c4: MISSING 0xe7
0x7c5: EXTCODECOPY S0 S1 S2 S3
0x7c7: V688 = PC
0x7c8: MISSING 0xc0
0x7c9: V689 = 0x2ef068839d81
0x7d0: STOP 
0x7d1: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x82959a2af3a097fa3e72f229, V685, V687, V688, S19, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S4, 0x2ef068839d81]
Exit stack: []

================================

Function 0:
Public function signature: 0x12ea965d
Entry block: 0xf1
Exit block: 0x101
Body: 0xf1, 0xf8, 0xf9, 0x101, 0x27f

Function 1:
Public function signature: 0x43062ea7
Entry block: 0x113
Exit block: 0xef
Body: 0xef, 0x113, 0x11a, 0x11b, 0x285, 0x29c, 0x2a1, 0x2da, 0x2db

Function 2:
Public function signature: 0x49df728c
Entry block: 0x128
Exit block: 0xef
Body: 0xef, 0x128, 0x12f, 0x130, 0x2de, 0x2f8, 0x2fd, 0x35f, 0x360, 0x36d, 0x36e, 0x37f, 0x384, 0x3e0, 0x3e1, 0x3ee, 0x3ef, 0x3fe, 0x3ff, 0x433, 0x434

Function 3:
Public function signature: 0x68d324e7
Entry block: 0x146
Exit block: 0xef
Body: 0xef, 0x146, 0x14d, 0x14e, 0x439, 0x450, 0x455, 0x4ad, 0x4ae

Function 4:
Public function signature: 0x7362377b
Entry block: 0x164
Exit block: 0xef
Body: 0xef, 0x164, 0x16b, 0x16c, 0x4b1, 0x4c8, 0x4cd, 0x4df, 0x4e4, 0x519, 0x51a, 0x558, 0x559

Function 5:
Public function signature: 0x7770bd15
Entry block: 0x176
Exit block: 0x186
Body: 0x176, 0x17d, 0x17e, 0x186, 0x55b

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x1a2
Exit block: 0x186
Body: 0x186, 0x1a2, 0x1a9, 0x1aa, 0x56a

Function 7:
Public function signature: 0x9665b658
Entry block: 0x1ce
Exit block: 0xef
Body: 0xef, 0x1ce, 0x1d5, 0x1d6, 0x579, 0x590, 0x595, 0x5e7, 0x5e8

Function 8:
Public function signature: 0xab0fe874
Entry block: 0x1ec
Exit block: 0x101
Body: 0x101, 0x1ec, 0x1f3, 0x1f4, 0x5eb

Function 9:
Public function signature: 0xc34c08e5
Entry block: 0x20e
Exit block: 0x186
Body: 0x186, 0x20e, 0x215, 0x216, 0x5f1

Function 10:
Public function signature: 0xc59b5562
Entry block: 0x23a
Exit block: 0xef
Body: 0xef, 0x23a, 0x241, 0x242, 0x2da, 0x2db, 0x600, 0x61b, 0x62e, 0x635, 0x63a, 0x645, 0x64c, 0x650, 0x662, 0x666, 0x67c, 0x6a9, 0x6aa, 0x6de, 0x6df, 0x787, 0x789, 0x78c, 0x796, 0x79b, 0x79d, 0x7a0

Function 11:
Public function signature: 0xe52c0f24
Entry block: 0x24c
Exit block: 0xef
Body: 0xef, 0x24c, 0x253, 0x254, 0x6e2, 0x6f9, 0x6fe, 0x737, 0x738

Function 12:
Public function signature: 0xf2fde38b
Entry block: 0x261
Exit block: 0xef
Body: 0xef, 0x261, 0x268, 0x269, 0x2da, 0x2db, 0x73b, 0x752, 0x757, 0x767, 0x782, 0x783, 0x784

Function 13:
Public fallback function
Entry block: 0xa9
Exit block: 0xef
Body: 0xa9, 0xad, 0xed, 0xef

