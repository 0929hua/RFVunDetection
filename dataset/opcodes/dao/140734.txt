Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x1a8]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x1a8
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x1a8
0x40: JUMPI 0x1a8 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x1bd]
---
0x41 DUP1
0x42 PUSH4 0x9e5faafc
0x47 EQ
0x48 PUSH2 0x1bd
0x4b JUMPI
---
0x42: V15 = 0x9e5faafc
0x47: V16 = EQ 0x9e5faafc V11
0x48: V17 = 0x1bd
0x4b: JUMPI 0x1bd V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0xa3]
---
Predecessors: [0x0, 0x41]
Successors: [0xa4, 0xa8]
---
0x4c JUMPDEST
0x4d CALLER
0x4e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63 AND
0x64 PUSH1 0x1
0x66 PUSH1 0x0
0x68 SWAP1
0x69 SLOAD
0x6a SWAP1
0x6b PUSH2 0x100
0x6e EXP
0x6f SWAP1
0x70 DIV
0x71 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86 AND
0x87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c AND
0x9d EQ
0x9e ISZERO
0x9f ISZERO
0xa0 PUSH2 0xa8
0xa3 JUMPI
---
0x4c: JUMPDEST 
0x4d: V18 = CALLER
0x4e: V19 = 0xffffffffffffffffffffffffffffffffffffffff
0x63: V20 = AND 0xffffffffffffffffffffffffffffffffffffffff V18
0x64: V21 = 0x1
0x66: V22 = 0x0
0x69: V23 = S[0x1]
0x6b: V24 = 0x100
0x6e: V25 = EXP 0x100 0x0
0x70: V26 = DIV V23 0x1
0x71: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x86: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x87: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x9d: V31 = EQ V30 V20
0x9e: V32 = ISZERO V31
0x9f: V33 = ISZERO V32
0xa0: V34 = 0xa8
0xa3: JUMPI 0xa8 V33
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xa7]
---
Predecessors: [0x4c]
Successors: [0x1a6]
---
0xa4 PUSH2 0x1a6
0xa7 JUMP
---
0xa4: V35 = 0x1a6
0xa7: JUMP 0x1a6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xbe]
---
Predecessors: [0x4c]
Successors: [0xbf, 0x189]
---
0xa8 JUMPDEST
0xa9 PUSH1 0x1
0xab PUSH1 0x14
0xad SWAP1
0xae SLOAD
0xaf SWAP1
0xb0 PUSH2 0x100
0xb3 EXP
0xb4 SWAP1
0xb5 DIV
0xb6 PUSH1 0xff
0xb8 AND
0xb9 ISZERO
0xba ISZERO
0xbb PUSH2 0x189
0xbe JUMPI
---
0xa8: JUMPDEST 
0xa9: V36 = 0x1
0xab: V37 = 0x14
0xae: V38 = S[0x1]
0xb0: V39 = 0x100
0xb3: V40 = EXP 0x100 0x14
0xb5: V41 = DIV V38 0x10000000000000000000000000000000000000000
0xb6: V42 = 0xff
0xb8: V43 = AND 0xff V41
0xb9: V44 = ISZERO V43
0xba: V45 = ISZERO V44
0xbb: V46 = 0x189
0xbe: JUMPI 0x189 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbf
[0xbf:0x16b]
---
Predecessors: [0xa8]
Successors: [0x16c, 0x170]
---
0xbf PUSH1 0x1
0xc1 DUP1
0xc2 PUSH1 0x14
0xc4 PUSH2 0x100
0xc7 EXP
0xc8 DUP2
0xc9 SLOAD
0xca DUP2
0xcb PUSH1 0xff
0xcd MUL
0xce NOT
0xcf AND
0xd0 SWAP1
0xd1 DUP4
0xd2 ISZERO
0xd3 ISZERO
0xd4 MUL
0xd5 OR
0xd6 SWAP1
0xd7 SSTORE
0xd8 POP
0xd9 PUSH1 0x1
0xdb PUSH1 0x0
0xdd SWAP1
0xde SLOAD
0xdf SWAP1
0xe0 PUSH2 0x100
0xe3 EXP
0xe4 SWAP1
0xe5 DIV
0xe6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb AND
0xfc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111 AND
0x112 PUSH4 0x9ffa0711
0x117 PUSH8 0xde0b6b3a7640000
0x120 PUSH1 0x40
0x122 MLOAD
0x123 DUP3
0x124 PUSH4 0xffffffff
0x129 AND
0x12a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x148 MUL
0x149 DUP2
0x14a MSTORE
0x14b PUSH1 0x4
0x14d ADD
0x14e DUP1
0x14f DUP3
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x20
0x154 ADD
0x155 SWAP2
0x156 POP
0x157 POP
0x158 PUSH1 0x0
0x15a PUSH1 0x40
0x15c MLOAD
0x15d DUP1
0x15e DUP4
0x15f SUB
0x160 DUP2
0x161 PUSH1 0x0
0x163 DUP8
0x164 DUP1
0x165 EXTCODESIZE
0x166 ISZERO
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0xbf: V47 = 0x1
0xc2: V48 = 0x14
0xc4: V49 = 0x100
0xc7: V50 = EXP 0x100 0x14
0xc9: V51 = S[0x1]
0xcb: V52 = 0xff
0xcd: V53 = MUL 0xff 0x10000000000000000000000000000000000000000
0xce: V54 = NOT 0xff0000000000000000000000000000000000000000
0xcf: V55 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V51
0xd2: V56 = ISZERO 0x1
0xd3: V57 = ISZERO 0x0
0xd4: V58 = MUL 0x1 0x10000000000000000000000000000000000000000
0xd5: V59 = OR 0x10000000000000000000000000000000000000000 V55
0xd7: S[0x1] = V59
0xd9: V60 = 0x1
0xdb: V61 = 0x0
0xde: V62 = S[0x1]
0xe0: V63 = 0x100
0xe3: V64 = EXP 0x100 0x0
0xe5: V65 = DIV V62 0x1
0xe6: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xfc: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x111: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x112: V70 = 0x9ffa0711
0x117: V71 = 0xde0b6b3a7640000
0x120: V72 = 0x40
0x122: V73 = M[0x40]
0x124: V74 = 0xffffffff
0x129: V75 = AND 0xffffffff 0x9ffa0711
0x12a: V76 = 0x100000000000000000000000000000000000000000000000000000000
0x148: V77 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x9ffa0711
0x14a: M[V73] = 0x9ffa071100000000000000000000000000000000000000000000000000000000
0x14b: V78 = 0x4
0x14d: V79 = ADD 0x4 V73
0x151: M[V79] = 0xde0b6b3a7640000
0x152: V80 = 0x20
0x154: V81 = ADD 0x20 V79
0x158: V82 = 0x0
0x15a: V83 = 0x40
0x15c: V84 = M[0x40]
0x15f: V85 = SUB V81 V84
0x161: V86 = 0x0
0x165: V87 = EXTCODESIZE V69
0x166: V88 = ISZERO V87
0x167: V89 = ISZERO V88
0x168: V90 = 0x170
0x16b: JUMPI 0x170 V89
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V69, 0x9ffa0711, V81, 0x0, V84, V85, V84, 0x0, V69]
Exit stack: [V11, V69, 0x9ffa0711, V81, 0x0, V84, V85, V84, 0x0, V69]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0xbf]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V91 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V11, V69, 0x9ffa0711, V81, 0x0, V84, V85, V84, 0x0, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V69, 0x9ffa0711, V81, 0x0, V84, V85, V84, 0x0, V69]

================================

Block 0x170
[0x170:0x17c]
---
Predecessors: [0xbf]
Successors: [0x17d, 0x181]
---
0x170 JUMPDEST
0x171 PUSH2 0x2c6
0x174 GAS
0x175 SUB
0x176 CALL
0x177 ISZERO
0x178 ISZERO
0x179 PUSH2 0x181
0x17c JUMPI
---
0x170: JUMPDEST 
0x171: V92 = 0x2c6
0x174: V93 = GAS
0x175: V94 = SUB V93 0x2c6
0x176: V95 = CALL V94 V69 0x0 V84 V85 V84 0x0
0x177: V96 = ISZERO V95
0x178: V97 = ISZERO V96
0x179: V98 = 0x181
0x17c: JUMPI 0x181 V97
---
Entry stack: [V11, V69, 0x9ffa0711, V81, 0x0, V84, V85, V84, 0x0, V69]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V69, 0x9ffa0711, V81]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x170]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V99 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V11, V69, 0x9ffa0711, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V69, 0x9ffa0711, V81]

================================

Block 0x181
[0x181:0x188]
---
Predecessors: [0x170]
Successors: [0x1a5]
---
0x181 JUMPDEST
0x182 POP
0x183 POP
0x184 POP
0x185 PUSH2 0x1a5
0x188 JUMP
---
0x181: JUMPDEST 
0x185: V100 = 0x1a5
0x188: JUMP 0x1a5
---
Entry stack: [V11, V69, 0x9ffa0711, V81]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x189
[0x189:0x1a4]
---
Predecessors: [0xa8]
Successors: [0x1a5]
---
0x189 JUMPDEST
0x18a PUSH1 0x0
0x18c PUSH1 0x1
0x18e PUSH1 0x14
0x190 PUSH2 0x100
0x193 EXP
0x194 DUP2
0x195 SLOAD
0x196 DUP2
0x197 PUSH1 0xff
0x199 MUL
0x19a NOT
0x19b AND
0x19c SWAP1
0x19d DUP4
0x19e ISZERO
0x19f ISZERO
0x1a0 MUL
0x1a1 OR
0x1a2 SWAP1
0x1a3 SSTORE
0x1a4 POP
---
0x189: JUMPDEST 
0x18a: V101 = 0x0
0x18c: V102 = 0x1
0x18e: V103 = 0x14
0x190: V104 = 0x100
0x193: V105 = EXP 0x100 0x14
0x195: V106 = S[0x1]
0x197: V107 = 0xff
0x199: V108 = MUL 0xff 0x10000000000000000000000000000000000000000
0x19a: V109 = NOT 0xff0000000000000000000000000000000000000000
0x19b: V110 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V106
0x19e: V111 = ISZERO 0x0
0x19f: V112 = ISZERO 0x1
0x1a0: V113 = MUL 0x0 0x10000000000000000000000000000000000000000
0x1a1: V114 = OR 0x0 V110
0x1a3: S[0x1] = V114
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a5
[0x1a5:0x1a5]
---
Predecessors: [0x181, 0x189]
Successors: [0x1a6]
---
0x1a5 JUMPDEST
---
0x1a5: JUMPDEST 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a6
[0x1a6:0x1a7]
---
Predecessors: [0xa4, 0x1a5]
Successors: []
---
0x1a6 JUMPDEST
0x1a7 STOP
---
0x1a6: JUMPDEST 
0x1a7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a8
[0x1a8:0x1ae]
---
Predecessors: [0xd]
Successors: [0x1af, 0x1b3]
---
0x1a8 JUMPDEST
0x1a9 CALLVALUE
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V115 = CALLVALUE
0x1aa: V116 = ISZERO V115
0x1ab: V117 = 0x1b3
0x1ae: JUMPI 0x1b3 V116
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x1a8]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V118 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b3
[0x1b3:0x1ba]
---
Predecessors: [0x1a8]
Successors: [0x1c7]
---
0x1b3 JUMPDEST
0x1b4 PUSH2 0x1bb
0x1b7 PUSH2 0x1c7
0x1ba JUMP
---
0x1b3: JUMPDEST 
0x1b4: V119 = 0x1bb
0x1b7: V120 = 0x1c7
0x1ba: JUMP 0x1c7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1bb]
Exit stack: [V11, 0x1bb]

================================

Block 0x1bb
[0x1bb:0x1bc]
---
Predecessors: [0x29a]
Successors: []
---
0x1bb JUMPDEST
0x1bc STOP
---
0x1bb: JUMPDEST 
0x1bc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bd
[0x1bd:0x1c4]
---
Predecessors: [0x41]
Successors: [0x29c]
---
0x1bd JUMPDEST
0x1be PUSH2 0x1c5
0x1c1 PUSH2 0x29c
0x1c4 JUMP
---
0x1bd: JUMPDEST 
0x1be: V121 = 0x1c5
0x1c1: V122 = 0x29c
0x1c4: JUMP 0x29c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c5]
Exit stack: [V11, 0x1c5]

================================

Block 0x1c5
[0x1c5:0x1c6]
---
Predecessors: [0x442]
Successors: []
---
0x1c5 JUMPDEST
0x1c6 STOP
---
0x1c5: JUMPDEST 
0x1c6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c7
[0x1c7:0x21d]
---
Predecessors: [0x1b3]
Successors: [0x21e, 0x222]
---
0x1c7 JUMPDEST
0x1c8 CALLER
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 SWAP1
0x1e3 SLOAD
0x1e4 SWAP1
0x1e5 PUSH2 0x100
0x1e8 EXP
0x1e9 SWAP1
0x1ea DIV
0x1eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x200 AND
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 EQ
0x218 ISZERO
0x219 ISZERO
0x21a PUSH2 0x222
0x21d JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V123 = CALLER
0x1c9: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x1df: V126 = 0x0
0x1e3: V127 = S[0x0]
0x1e5: V128 = 0x100
0x1e8: V129 = EXP 0x100 0x0
0x1ea: V130 = DIV V127 0x1
0x1eb: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x200: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x201: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x217: V135 = EQ V134 V125
0x218: V136 = ISZERO V135
0x219: V137 = ISZERO V136
0x21a: V138 = 0x222
0x21d: JUMPI 0x222 V137
---
Entry stack: [V11, 0x1bb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1bb]

================================

Block 0x21e
[0x21e:0x221]
---
Predecessors: [0x1c7]
Successors: []
---
0x21e PUSH1 0x0
0x220 DUP1
0x221 REVERT
---
0x21e: V139 = 0x0
0x221: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1bb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1bb]

================================

Block 0x222
[0x222:0x295]
---
Predecessors: [0x1c7]
Successors: [0x296, 0x29a]
---
0x222 JUMPDEST
0x223 PUSH1 0x0
0x225 DUP1
0x226 SWAP1
0x227 SLOAD
0x228 SWAP1
0x229 PUSH2 0x100
0x22c EXP
0x22d SWAP1
0x22e DIV
0x22f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x244 AND
0x245 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25a AND
0x25b PUSH2 0x8fc
0x25e ADDRESS
0x25f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x274 AND
0x275 BALANCE
0x276 SWAP1
0x277 DUP2
0x278 ISZERO
0x279 MUL
0x27a SWAP1
0x27b PUSH1 0x40
0x27d MLOAD
0x27e PUSH1 0x0
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP1
0x284 DUP4
0x285 SUB
0x286 DUP2
0x287 DUP6
0x288 DUP9
0x289 DUP9
0x28a CALL
0x28b SWAP4
0x28c POP
0x28d POP
0x28e POP
0x28f POP
0x290 ISZERO
0x291 ISZERO
0x292 PUSH2 0x29a
0x295 JUMPI
---
0x222: JUMPDEST 
0x223: V140 = 0x0
0x227: V141 = S[0x0]
0x229: V142 = 0x100
0x22c: V143 = EXP 0x100 0x0
0x22e: V144 = DIV V141 0x1
0x22f: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x244: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x245: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x25b: V149 = 0x8fc
0x25e: V150 = ADDRESS
0x25f: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x274: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x275: V153 = BALANCE V152
0x278: V154 = ISZERO V153
0x279: V155 = MUL V154 0x8fc
0x27b: V156 = 0x40
0x27d: V157 = M[0x40]
0x27e: V158 = 0x0
0x280: V159 = 0x40
0x282: V160 = M[0x40]
0x285: V161 = SUB V157 V160
0x28a: V162 = CALL V155 V148 V153 V160 V161 V160 0x0
0x290: V163 = ISZERO V162
0x291: V164 = ISZERO V163
0x292: V165 = 0x29a
0x295: JUMPI 0x29a V164
---
Entry stack: [V11, 0x1bb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1bb]

================================

Block 0x296
[0x296:0x299]
---
Predecessors: [0x222]
Successors: []
---
0x296 PUSH1 0x0
0x298 DUP1
0x299 REVERT
---
0x296: V166 = 0x0
0x299: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1bb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1bb]

================================

Block 0x29a
[0x29a:0x29b]
---
Predecessors: [0x222]
Successors: [0x1bb]
---
0x29a JUMPDEST
0x29b JUMP
---
0x29a: JUMPDEST 
0x29b: JUMP 0x1bb
---
Entry stack: [V11, 0x1bb]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x29c
[0x29c:0x2f2]
---
Predecessors: [0x1bd]
Successors: [0x2f3, 0x2f7]
---
0x29c JUMPDEST
0x29d CALLER
0x29e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b3 AND
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 SWAP1
0x2b8 SLOAD
0x2b9 SWAP1
0x2ba PUSH2 0x100
0x2bd EXP
0x2be SWAP1
0x2bf DIV
0x2c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d5 AND
0x2d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2eb AND
0x2ec EQ
0x2ed ISZERO
0x2ee ISZERO
0x2ef PUSH2 0x2f7
0x2f2 JUMPI
---
0x29c: JUMPDEST 
0x29d: V167 = CALLER
0x29e: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x2b4: V170 = 0x0
0x2b8: V171 = S[0x0]
0x2ba: V172 = 0x100
0x2bd: V173 = EXP 0x100 0x0
0x2bf: V174 = DIV V171 0x1
0x2c0: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x2d6: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x2ec: V179 = EQ V178 V169
0x2ed: V180 = ISZERO V179
0x2ee: V181 = ISZERO V180
0x2ef: V182 = 0x2f7
0x2f2: JUMPI 0x2f7 V181
---
Entry stack: [V11, 0x1c5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c5]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x29c]
Successors: []
---
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 REVERT
---
0x2f3: V183 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c5]

================================

Block 0x2f7
[0x2f7:0x37f]
---
Predecessors: [0x29c]
Successors: [0x380, 0x384]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x1
0x2fa PUSH1 0x0
0x2fc SWAP1
0x2fd SLOAD
0x2fe SWAP1
0x2ff PUSH2 0x100
0x302 EXP
0x303 SWAP1
0x304 DIV
0x305 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31a AND
0x31b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x330 AND
0x331 PUSH4 0xed21248c
0x336 PUSH8 0xde0b6b3a7640000
0x33f PUSH1 0x40
0x341 MLOAD
0x342 DUP3
0x343 PUSH4 0xffffffff
0x348 AND
0x349 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x367 MUL
0x368 DUP2
0x369 MSTORE
0x36a PUSH1 0x4
0x36c ADD
0x36d PUSH1 0x0
0x36f PUSH1 0x40
0x371 MLOAD
0x372 DUP1
0x373 DUP4
0x374 SUB
0x375 DUP2
0x376 DUP6
0x377 DUP9
0x378 DUP1
0x379 EXTCODESIZE
0x37a ISZERO
0x37b ISZERO
0x37c PUSH2 0x384
0x37f JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V184 = 0x1
0x2fa: V185 = 0x0
0x2fd: V186 = S[0x1]
0x2ff: V187 = 0x100
0x302: V188 = EXP 0x100 0x0
0x304: V189 = DIV V186 0x1
0x305: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x31b: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x330: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x331: V194 = 0xed21248c
0x336: V195 = 0xde0b6b3a7640000
0x33f: V196 = 0x40
0x341: V197 = M[0x40]
0x343: V198 = 0xffffffff
0x348: V199 = AND 0xffffffff 0xed21248c
0x349: V200 = 0x100000000000000000000000000000000000000000000000000000000
0x367: V201 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xed21248c
0x369: M[V197] = 0xed21248c00000000000000000000000000000000000000000000000000000000
0x36a: V202 = 0x4
0x36c: V203 = ADD 0x4 V197
0x36d: V204 = 0x0
0x36f: V205 = 0x40
0x371: V206 = M[0x40]
0x374: V207 = SUB V203 V206
0x379: V208 = EXTCODESIZE V193
0x37a: V209 = ISZERO V208
0x37b: V210 = ISZERO V209
0x37c: V211 = 0x384
0x37f: JUMPI 0x384 V210
---
Entry stack: [V11, 0x1c5]
Stack pops: 0
Stack additions: [V193, 0xed21248c, 0xde0b6b3a7640000, V203, 0x0, V206, V207, V206, 0xde0b6b3a7640000, V193]
Exit stack: [V11, 0x1c5, V193, 0xed21248c, 0xde0b6b3a7640000, V203, 0x0, V206, V207, V206, 0xde0b6b3a7640000, V193]

================================

Block 0x380
[0x380:0x383]
---
Predecessors: [0x2f7]
Successors: []
---
0x380 PUSH1 0x0
0x382 DUP1
0x383 REVERT
---
0x380: V212 = 0x0
0x383: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c5, V193, 0xed21248c, 0xde0b6b3a7640000, V203, 0x0, V206, V207, V206, 0xde0b6b3a7640000, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c5, V193, 0xed21248c, 0xde0b6b3a7640000, V203, 0x0, V206, V207, V206, 0xde0b6b3a7640000, V193]

================================

Block 0x384
[0x384:0x390]
---
Predecessors: [0x2f7]
Successors: [0x391, 0x395]
---
0x384 JUMPDEST
0x385 PUSH2 0x25ee
0x388 GAS
0x389 SUB
0x38a CALL
0x38b ISZERO
0x38c ISZERO
0x38d PUSH2 0x395
0x390 JUMPI
---
0x384: JUMPDEST 
0x385: V213 = 0x25ee
0x388: V214 = GAS
0x389: V215 = SUB V214 0x25ee
0x38a: V216 = CALL V215 V193 0xde0b6b3a7640000 V206 V207 V206 0x0
0x38b: V217 = ISZERO V216
0x38c: V218 = ISZERO V217
0x38d: V219 = 0x395
0x390: JUMPI 0x395 V218
---
Entry stack: [V11, 0x1c5, V193, 0xed21248c, 0xde0b6b3a7640000, V203, 0x0, V206, V207, V206, 0xde0b6b3a7640000, V193]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1c5, V193, 0xed21248c, 0xde0b6b3a7640000, V203]

================================

Block 0x391
[0x391:0x394]
---
Predecessors: [0x384]
Successors: []
---
0x391 PUSH1 0x0
0x393 DUP1
0x394 REVERT
---
0x391: V220 = 0x0
0x394: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c5, V193, 0xed21248c, 0xde0b6b3a7640000, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c5, V193, 0xed21248c, 0xde0b6b3a7640000, V203]

================================

Block 0x395
[0x395:0x42c]
---
Predecessors: [0x384]
Successors: [0x42d, 0x431]
---
0x395 JUMPDEST
0x396 POP
0x397 POP
0x398 POP
0x399 POP
0x39a PUSH1 0x1
0x39c PUSH1 0x0
0x39e SWAP1
0x39f SLOAD
0x3a0 SWAP1
0x3a1 PUSH2 0x100
0x3a4 EXP
0x3a5 SWAP1
0x3a6 DIV
0x3a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bc AND
0x3bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d2 AND
0x3d3 PUSH4 0x9ffa0711
0x3d8 PUSH8 0xde0b6b3a7640000
0x3e1 PUSH1 0x40
0x3e3 MLOAD
0x3e4 DUP3
0x3e5 PUSH4 0xffffffff
0x3ea AND
0x3eb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x409 MUL
0x40a DUP2
0x40b MSTORE
0x40c PUSH1 0x4
0x40e ADD
0x40f DUP1
0x410 DUP3
0x411 DUP2
0x412 MSTORE
0x413 PUSH1 0x20
0x415 ADD
0x416 SWAP2
0x417 POP
0x418 POP
0x419 PUSH1 0x0
0x41b PUSH1 0x40
0x41d MLOAD
0x41e DUP1
0x41f DUP4
0x420 SUB
0x421 DUP2
0x422 PUSH1 0x0
0x424 DUP8
0x425 DUP1
0x426 EXTCODESIZE
0x427 ISZERO
0x428 ISZERO
0x429 PUSH2 0x431
0x42c JUMPI
---
0x395: JUMPDEST 
0x39a: V221 = 0x1
0x39c: V222 = 0x0
0x39f: V223 = S[0x1]
0x3a1: V224 = 0x100
0x3a4: V225 = EXP 0x100 0x0
0x3a6: V226 = DIV V223 0x1
0x3a7: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bc: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x3bd: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d2: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x3d3: V231 = 0x9ffa0711
0x3d8: V232 = 0xde0b6b3a7640000
0x3e1: V233 = 0x40
0x3e3: V234 = M[0x40]
0x3e5: V235 = 0xffffffff
0x3ea: V236 = AND 0xffffffff 0x9ffa0711
0x3eb: V237 = 0x100000000000000000000000000000000000000000000000000000000
0x409: V238 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x9ffa0711
0x40b: M[V234] = 0x9ffa071100000000000000000000000000000000000000000000000000000000
0x40c: V239 = 0x4
0x40e: V240 = ADD 0x4 V234
0x412: M[V240] = 0xde0b6b3a7640000
0x413: V241 = 0x20
0x415: V242 = ADD 0x20 V240
0x419: V243 = 0x0
0x41b: V244 = 0x40
0x41d: V245 = M[0x40]
0x420: V246 = SUB V242 V245
0x422: V247 = 0x0
0x426: V248 = EXTCODESIZE V230
0x427: V249 = ISZERO V248
0x428: V250 = ISZERO V249
0x429: V251 = 0x431
0x42c: JUMPI 0x431 V250
---
Entry stack: [V11, 0x1c5, V193, 0xed21248c, 0xde0b6b3a7640000, V203]
Stack pops: 4
Stack additions: [V230, 0x9ffa0711, V242, 0x0, V245, V246, V245, 0x0, V230]
Exit stack: [V11, 0x1c5, V230, 0x9ffa0711, V242, 0x0, V245, V246, V245, 0x0, V230]

================================

Block 0x42d
[0x42d:0x430]
---
Predecessors: [0x395]
Successors: []
---
0x42d PUSH1 0x0
0x42f DUP1
0x430 REVERT
---
0x42d: V252 = 0x0
0x430: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c5, V230, 0x9ffa0711, V242, 0x0, V245, V246, V245, 0x0, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c5, V230, 0x9ffa0711, V242, 0x0, V245, V246, V245, 0x0, V230]

================================

Block 0x431
[0x431:0x43d]
---
Predecessors: [0x395]
Successors: [0x43e, 0x442]
---
0x431 JUMPDEST
0x432 PUSH2 0x2c6
0x435 GAS
0x436 SUB
0x437 CALL
0x438 ISZERO
0x439 ISZERO
0x43a PUSH2 0x442
0x43d JUMPI
---
0x431: JUMPDEST 
0x432: V253 = 0x2c6
0x435: V254 = GAS
0x436: V255 = SUB V254 0x2c6
0x437: V256 = CALL V255 V230 0x0 V245 V246 V245 0x0
0x438: V257 = ISZERO V256
0x439: V258 = ISZERO V257
0x43a: V259 = 0x442
0x43d: JUMPI 0x442 V258
---
Entry stack: [V11, 0x1c5, V230, 0x9ffa0711, V242, 0x0, V245, V246, V245, 0x0, V230]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1c5, V230, 0x9ffa0711, V242]

================================

Block 0x43e
[0x43e:0x441]
---
Predecessors: [0x431]
Successors: []
---
0x43e PUSH1 0x0
0x440 DUP1
0x441 REVERT
---
0x43e: V260 = 0x0
0x441: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c5, V230, 0x9ffa0711, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c5, V230, 0x9ffa0711, V242]

================================

Block 0x442
[0x442:0x446]
---
Predecessors: [0x431]
Successors: [0x1c5]
---
0x442 JUMPDEST
0x443 POP
0x444 POP
0x445 POP
0x446 JUMP
---
0x442: JUMPDEST 
0x446: JUMP 0x1c5
---
Entry stack: [V11, 0x1c5, V230, 0x9ffa0711, V242]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x447
[0x447:0x467]
---
Predecessors: []
Successors: [0x468]
Has unresolved jump.
---
0x447 STOP
0x448 LOG1
0x449 PUSH6 0x627a7a723058
0x450 SHA3
0x451 MISSING 0xf7
0x452 CODECOPY
0x453 AND
0x454 PUSH5 0x89b939ec32
0x45a MISSING 0x4d
0x45b SWAP4
0x45c MISSING 0xaa
0x45d INVALID
0x45e SHR
0x45f MISSING 0xc4
0x460 GASPRICE
0x461 SWAP16
0x462 XOR
0x463 MISSING 0xdb
0x464 MOD
0x465 MISSING 0x2f
0x466 JUMPDEST
0x467 JUMPI
---
0x447: STOP 
0x448: LOG S0 S1 S2
0x449: V261 = 0x627a7a723058
0x450: V262 = SHA3 0x627a7a723058 S3
0x451: MISSING 0xf7
0x452: CODECOPY S0 S1 S2
0x453: V263 = AND S3 S4
0x454: V264 = 0x89b939ec32
0x45a: MISSING 0x4d
0x45c: MISSING 0xaa
0x45d: INVALID 
0x45e: V265 = SHR S0 S1
0x45f: MISSING 0xc4
0x460: V266 = GASPRICE
0x462: V267 = XOR S15 S0
0x463: MISSING 0xdb
0x464: V268 = MOD S0 S1
0x465: MISSING 0x2f
0x466: JUMPDEST 
0x467: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V262, 0x89b939ec32, V263, S4, S1, S2, S3, S0, V265, V267, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V266, V268]
Exit stack: []

================================

Block 0x468
[0x468:0x488]
---
Predecessors: [0x447]
Successors: []
---
0x468 OR
0x469 MISSING 0xd3
0x46a MISSING 0xde
0x46b MISSING 0xf9
0x46c PUSH28 0xb9d311460029
---
0x468: V269 = OR S0 S1
0x469: MISSING 0xd3
0x46a: MISSING 0xde
0x46b: MISSING 0xf9
0x46c: V270 = 0xb9d311460029
---
Entry stack: []
Stack pops: 12
Stack additions: [0xb9d311460029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x1a8
Exit block: 0x1bb
Body: 0x1a8, 0x1af, 0x1b3, 0x1bb, 0x1c7, 0x21e, 0x222, 0x296, 0x29a

Function 1:
Public function signature: 0x9e5faafc
Entry block: 0x1bd
Exit block: 0x1c5
Body: 0x1bd, 0x1c5, 0x29c, 0x2f3, 0x2f7, 0x380, 0x384, 0x391, 0x395, 0x42d, 0x431, 0x43e, 0x442

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x1a6
Body: 0x4c, 0xa4, 0xa8, 0xbf, 0x16c, 0x170, 0x17d, 0x181, 0x189, 0x1a5, 0x1a6

