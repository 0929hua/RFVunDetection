Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x81]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x1785f53c
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x81
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x1785f53c
0x22: V15 = EQ V13 0x1785f53c
0x23: V16 = 0x81
0x26: JUMPI 0x81 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xa2]
---
0x27 DUP1
0x28 PUSH4 0x40e6c16f
0x2d EQ
0x2e PUSH2 0xa2
0x31 JUMPI
---
0x28: V17 = 0x40e6c16f
0x2d: V18 = EQ 0x40e6c16f V13
0x2e: V19 = 0xa2
0x31: JUMPI 0xa2 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xc9]
---
0x32 DUP1
0x33 PUSH4 0x41c0e1b5
0x38 EQ
0x39 PUSH2 0xc9
0x3c JUMPI
---
0x33: V20 = 0x41c0e1b5
0x38: V21 = EQ 0x41c0e1b5 V13
0x39: V22 = 0xc9
0x3c: JUMPI 0xc9 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xde]
---
0x3d DUP1
0x3e PUSH4 0x6ec6333d
0x43 EQ
0x44 PUSH2 0xde
0x47 JUMPI
---
0x3e: V23 = 0x6ec6333d
0x43: V24 = EQ 0x6ec6333d V13
0x44: V25 = 0xde
0x47: JUMPI 0xde V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xff]
---
0x48 DUP1
0x49 PUSH4 0x786548dd
0x4e EQ
0x4f PUSH2 0xff
0x52 JUMPI
---
0x49: V26 = 0x786548dd
0x4e: V27 = EQ 0x786548dd V13
0x4f: V28 = 0xff
0x52: JUMPI 0xff V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x114]
---
0x53 DUP1
0x54 PUSH4 0xa70ef5b0
0x59 EQ
0x5a PUSH2 0x114
0x5d JUMPI
---
0x54: V29 = 0xa70ef5b0
0x59: V30 = EQ 0xa70ef5b0 V13
0x5a: V31 = 0x114
0x5d: JUMPI 0x114 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x142]
---
0x5e DUP1
0x5f PUSH4 0xbfaa4391
0x64 EQ
0x65 PUSH2 0x142
0x68 JUMPI
---
0x5f: V32 = 0xbfaa4391
0x64: V33 = EQ 0xbfaa4391 V13
0x65: V34 = 0x142
0x68: JUMPI 0x142 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x15a]
---
0x69 DUP1
0x6a PUSH4 0xdf207dff
0x6f EQ
0x70 PUSH2 0x15a
0x73 JUMPI
---
0x6a: V35 = 0xdf207dff
0x6f: V36 = EQ 0xdf207dff V13
0x70: V37 = 0x15a
0x73: JUMPI 0x15a V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x19f]
---
0x74 DUP1
0x75 PUSH4 0xe10c63ae
0x7a EQ
0x7b PUSH2 0x19f
0x7e JUMPI
---
0x75: V38 = 0xe10c63ae
0x7a: V39 = EQ 0xe10c63ae V13
0x7b: V40 = 0x19f
0x7e: JUMPI 0x19f V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x0, 0x74, 0x1ea, 0x288, 0x36d, 0x3a9, 0x4d4, 0xbb9]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x81
[0x81:0x88]
---
Predecessors: [0xd]
Successors: [0x89, 0x8d]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 DUP1
0x84 ISZERO
0x85 PUSH2 0x8d
0x88 JUMPI
---
0x81: JUMPDEST 
0x82: V41 = CALLVALUE
0x84: V42 = ISZERO V41
0x85: V43 = 0x8d
0x88: JUMPI 0x8d V42
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V13, V41]

================================

Block 0x89
[0x89:0x8c]
---
Predecessors: [0x81]
Successors: []
---
0x89 PUSH1 0x0
0x8b DUP1
0x8c REVERT
---
0x89: V44 = 0x0
0x8c: REVERT 0x0 0x0
---
Entry stack: [V13, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V41]

================================

Block 0x8d
[0x8d:0xa1]
---
Predecessors: [0x81]
Successors: [0x1b7]
---
0x8d JUMPDEST
0x8e POP
0x8f PUSH2 0x7f
0x92 PUSH1 0x1
0x94 PUSH1 0xa0
0x96 PUSH1 0x2
0x98 EXP
0x99 SUB
0x9a PUSH1 0x4
0x9c CALLDATALOAD
0x9d AND
0x9e PUSH2 0x1b7
0xa1 JUMP
---
0x8d: JUMPDEST 
0x8f: V45 = 0x7f
0x92: V46 = 0x1
0x94: V47 = 0xa0
0x96: V48 = 0x2
0x98: V49 = EXP 0x2 0xa0
0x99: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a: V51 = 0x4
0x9c: V52 = CALLDATALOAD 0x4
0x9d: V53 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x9e: V54 = 0x1b7
0xa1: JUMP 0x1b7
---
Entry stack: [V13, V41]
Stack pops: 1
Stack additions: [0x7f, V53]
Exit stack: [V13, 0x7f, V53]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0x27]
Successors: [0xaa, 0xae]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa2: JUMPDEST 
0xa3: V55 = CALLVALUE
0xa5: V56 = ISZERO V55
0xa6: V57 = 0xae
0xa9: JUMPI 0xae V56
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V13, V55]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa2]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V58 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V13, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V55]

================================

Block 0xae
[0xae:0xb6]
---
Predecessors: [0xa2]
Successors: [0x20b]
---
0xae JUMPDEST
0xaf POP
0xb0 PUSH2 0xb7
0xb3 PUSH2 0x20b
0xb6 JUMP
---
0xae: JUMPDEST 
0xb0: V59 = 0xb7
0xb3: V60 = 0x20b
0xb6: JUMP 0x20b
---
Entry stack: [V13, V55]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V13, 0xb7]

================================

Block 0xb7
[0xb7:0xc8]
---
Predecessors: [0x20b]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH1 0x40
0xba DUP1
0xbb MLOAD
0xbc SWAP2
0xbd DUP3
0xbe MSTORE
0xbf MLOAD
0xc0 SWAP1
0xc1 DUP2
0xc2 SWAP1
0xc3 SUB
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 RETURN
---
0xb7: JUMPDEST 
0xb8: V61 = 0x40
0xbb: V62 = M[0x40]
0xbe: M[V62] = V196
0xbf: V63 = M[0x40]
0xc3: V64 = SUB V62 V63
0xc4: V65 = 0x20
0xc6: V66 = ADD 0x20 V64
0xc8: RETURN V63 V66
---
Entry stack: [V13, V196]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x32]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V67 = CALLVALUE
0xcc: V68 = ISZERO V67
0xcd: V69 = 0xd5
0xd0: JUMPI 0xd5 V68
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V13, V67]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V70 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V13, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V67]

================================

Block 0xd5
[0xd5:0xdd]
---
Predecessors: [0xc9]
Successors: [0x214]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0x7f
0xda PUSH2 0x214
0xdd JUMP
---
0xd5: JUMPDEST 
0xd7: V71 = 0x7f
0xda: V72 = 0x214
0xdd: JUMP 0x214
---
Entry stack: [V13, V67]
Stack pops: 1
Stack additions: [0x7f]
Exit stack: [V13, 0x7f]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0x3d]
Successors: [0xe6, 0xea]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 DUP1
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xde: JUMPDEST 
0xdf: V73 = CALLVALUE
0xe1: V74 = ISZERO V73
0xe2: V75 = 0xea
0xe5: JUMPI 0xea V74
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V13, V73]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xde]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V76 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V13, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V73]

================================

Block 0xea
[0xea:0xfe]
---
Predecessors: [0xde]
Successors: [0x255]
---
0xea JUMPDEST
0xeb POP
0xec PUSH2 0x7f
0xef PUSH1 0x1
0xf1 PUSH1 0xa0
0xf3 PUSH1 0x2
0xf5 EXP
0xf6 SUB
0xf7 PUSH1 0x4
0xf9 CALLDATALOAD
0xfa AND
0xfb PUSH2 0x255
0xfe JUMP
---
0xea: JUMPDEST 
0xec: V77 = 0x7f
0xef: V78 = 0x1
0xf1: V79 = 0xa0
0xf3: V80 = 0x2
0xf5: V81 = EXP 0x2 0xa0
0xf6: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7: V83 = 0x4
0xf9: V84 = CALLDATALOAD 0x4
0xfa: V85 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V86 = 0x255
0xfe: JUMP 0x255
---
Entry stack: [V13, V73]
Stack pops: 1
Stack additions: [0x7f, V85]
Exit stack: [V13, 0x7f, V85]

================================

Block 0xff
[0xff:0x113]
---
Predecessors: [0x48]
Successors: [0x2af]
---
0xff JUMPDEST
0x100 PUSH2 0x7f
0x103 PUSH1 0x1
0x105 PUSH1 0xf0
0x107 PUSH1 0x2
0x109 EXP
0x10a SUB
0x10b NOT
0x10c PUSH1 0x4
0x10e CALLDATALOAD
0x10f AND
0x110 PUSH2 0x2af
0x113 JUMP
---
0xff: JUMPDEST 
0x100: V87 = 0x7f
0x103: V88 = 0x1
0x105: V89 = 0xf0
0x107: V90 = 0x2
0x109: V91 = EXP 0x2 0xf0
0x10a: V92 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x10b: V93 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x10c: V94 = 0x4
0x10e: V95 = CALLDATALOAD 0x4
0x10f: V96 = AND V95 0xffff000000000000000000000000000000000000000000000000000000000000
0x110: V97 = 0x2af
0x113: JUMP 0x2af
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x7f, V96]
Exit stack: [V13, 0x7f, V96]

================================

Block 0x114
[0x114:0x11b]
---
Predecessors: [0x53]
Successors: [0x11c, 0x120]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 DUP1
0x117 ISZERO
0x118 PUSH2 0x120
0x11b JUMPI
---
0x114: JUMPDEST 
0x115: V98 = CALLVALUE
0x117: V99 = ISZERO V98
0x118: V100 = 0x120
0x11b: JUMPI 0x120 V99
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V13, V98]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x114]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V101 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V13, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V98]

================================

Block 0x120
[0x120:0x141]
---
Predecessors: [0x114]
Successors: [0x376]
---
0x120 JUMPDEST
0x121 POP
0x122 PUSH2 0x7f
0x125 PUSH1 0x1
0x127 PUSH1 0xf0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d NOT
0x12e PUSH1 0x4
0x130 CALLDATALOAD
0x131 AND
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a PUSH1 0x24
0x13c CALLDATALOAD
0x13d AND
0x13e PUSH2 0x376
0x141 JUMP
---
0x120: JUMPDEST 
0x122: V102 = 0x7f
0x125: V103 = 0x1
0x127: V104 = 0xf0
0x129: V105 = 0x2
0x12b: V106 = EXP 0x2 0xf0
0x12c: V107 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x12d: V108 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x12e: V109 = 0x4
0x130: V110 = CALLDATALOAD 0x4
0x131: V111 = AND V110 0xffff000000000000000000000000000000000000000000000000000000000000
0x132: V112 = 0x1
0x134: V113 = 0xa0
0x136: V114 = 0x2
0x138: V115 = EXP 0x2 0xa0
0x139: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V117 = 0x24
0x13c: V118 = CALLDATALOAD 0x24
0x13d: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x13e: V120 = 0x376
0x141: JUMP 0x376
---
Entry stack: [V13, V98]
Stack pops: 1
Stack additions: [0x7f, V111, V119]
Exit stack: [V13, 0x7f, V111, V119]

================================

Block 0x142
[0x142:0x159]
---
Predecessors: [0x5e]
Successors: [0x3f0]
---
0x142 JUMPDEST
0x143 PUSH2 0x7f
0x146 PUSH1 0x4
0x148 CALLDATALOAD
0x149 PUSH1 0x1
0x14b PUSH1 0xf0
0x14d PUSH1 0x2
0x14f EXP
0x150 SUB
0x151 NOT
0x152 PUSH1 0x24
0x154 CALLDATALOAD
0x155 AND
0x156 PUSH2 0x3f0
0x159 JUMP
---
0x142: JUMPDEST 
0x143: V121 = 0x7f
0x146: V122 = 0x4
0x148: V123 = CALLDATALOAD 0x4
0x149: V124 = 0x1
0x14b: V125 = 0xf0
0x14d: V126 = 0x2
0x14f: V127 = EXP 0x2 0xf0
0x150: V128 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x151: V129 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x152: V130 = 0x24
0x154: V131 = CALLDATALOAD 0x24
0x155: V132 = AND V131 0xffff000000000000000000000000000000000000000000000000000000000000
0x156: V133 = 0x3f0
0x159: JUMP 0x3f0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x7f, V123, V132]
Exit stack: [V13, 0x7f, V123, V132]

================================

Block 0x15a
[0x15a:0x161]
---
Predecessors: [0x69]
Successors: [0x162, 0x166]
---
0x15a JUMPDEST
0x15b CALLVALUE
0x15c DUP1
0x15d ISZERO
0x15e PUSH2 0x166
0x161 JUMPI
---
0x15a: JUMPDEST 
0x15b: V134 = CALLVALUE
0x15d: V135 = ISZERO V134
0x15e: V136 = 0x166
0x161: JUMPI 0x166 V135
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V134]
Exit stack: [V13, V134]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x15a]
Successors: []
---
0x162 PUSH1 0x0
0x164 DUP1
0x165 REVERT
---
0x162: V137 = 0x0
0x165: REVERT 0x0 0x0
---
Entry stack: [V13, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V134]

================================

Block 0x166
[0x166:0x19e]
---
Predecessors: [0x15a]
Successors: [0x4d9]
---
0x166 JUMPDEST
0x167 POP
0x168 PUSH1 0x40
0x16a DUP1
0x16b MLOAD
0x16c PUSH2 0x120
0x16f DUP2
0x170 DUP2
0x171 ADD
0x172 SWAP1
0x173 SWAP3
0x174 MSTORE
0x175 PUSH2 0x7f
0x178 SWAP2
0x179 CALLDATASIZE
0x17a SWAP2
0x17b PUSH1 0x4
0x17d SWAP2
0x17e PUSH2 0x124
0x181 SWAP2
0x182 SWAP1
0x183 DUP4
0x184 SWAP1
0x185 PUSH1 0x9
0x187 SWAP1
0x188 DUP4
0x189 SWAP1
0x18a DUP4
0x18b SWAP1
0x18c DUP1
0x18d DUP3
0x18e DUP5
0x18f CALLDATACOPY
0x190 POP
0x191 SWAP4
0x192 SWAP7
0x193 POP
0x194 PUSH2 0x4d9
0x197 SWAP6
0x198 POP
0x199 POP
0x19a POP
0x19b POP
0x19c POP
0x19d POP
0x19e JUMP
---
0x166: JUMPDEST 
0x168: V138 = 0x40
0x16b: V139 = M[0x40]
0x16c: V140 = 0x120
0x171: V141 = ADD 0x120 V139
0x174: M[0x40] = V141
0x175: V142 = 0x7f
0x179: V143 = CALLDATASIZE
0x17b: V144 = 0x4
0x17e: V145 = 0x124
0x185: V146 = 0x9
0x18f: CALLDATACOPY V139 0x4 0x120
0x194: V147 = 0x4d9
0x19e: JUMP 0x4d9
---
Entry stack: [V13, V134]
Stack pops: 1
Stack additions: [0x7f, V139]
Exit stack: [V13, 0x7f, V139]

================================

Block 0x19f
[0x19f:0x1a6]
---
Predecessors: [0x74]
Successors: [0x1a7, 0x1ab]
---
0x19f JUMPDEST
0x1a0 CALLVALUE
0x1a1 DUP1
0x1a2 ISZERO
0x1a3 PUSH2 0x1ab
0x1a6 JUMPI
---
0x19f: JUMPDEST 
0x1a0: V148 = CALLVALUE
0x1a2: V149 = ISZERO V148
0x1a3: V150 = 0x1ab
0x1a6: JUMPI 0x1ab V149
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V148]
Exit stack: [V13, V148]

================================

Block 0x1a7
[0x1a7:0x1aa]
---
Predecessors: [0x19f]
Successors: []
---
0x1a7 PUSH1 0x0
0x1a9 DUP1
0x1aa REVERT
---
0x1a7: V151 = 0x0
0x1aa: REVERT 0x0 0x0
---
Entry stack: [V13, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V148]

================================

Block 0x1ab
[0x1ab:0x1b6]
---
Predecessors: [0x19f]
Successors: [0xb70]
---
0x1ab JUMPDEST
0x1ac POP
0x1ad PUSH2 0x7f
0x1b0 PUSH1 0x4
0x1b2 CALLDATALOAD
0x1b3 PUSH2 0xb70
0x1b6 JUMP
---
0x1ab: JUMPDEST 
0x1ad: V152 = 0x7f
0x1b0: V153 = 0x4
0x1b2: V154 = CALLDATALOAD 0x4
0x1b3: V155 = 0xb70
0x1b6: JUMP 0xb70
---
Entry stack: [V13, V148]
Stack pops: 1
Stack additions: [0x7f, V154]
Exit stack: [V13, 0x7f, V154]

================================

Block 0x1b7
[0x1b7:0x1cf]
---
Predecessors: [0x8d]
Successors: [0x1d0, 0x1df]
---
0x1b7 JUMPDEST
0x1b8 CALLER
0x1b9 PUSH1 0x0
0x1bb SWAP1
0x1bc DUP2
0x1bd MSTORE
0x1be PUSH1 0x1
0x1c0 PUSH1 0x20
0x1c2 MSTORE
0x1c3 PUSH1 0x40
0x1c5 SWAP1
0x1c6 SHA3
0x1c7 SLOAD
0x1c8 PUSH1 0xff
0x1ca AND
0x1cb DUP1
0x1cc PUSH2 0x1df
0x1cf JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V156 = CALLER
0x1b9: V157 = 0x0
0x1bd: M[0x0] = V156
0x1be: V158 = 0x1
0x1c0: V159 = 0x20
0x1c2: M[0x20] = 0x1
0x1c3: V160 = 0x40
0x1c6: V161 = SHA3 0x0 0x40
0x1c7: V162 = S[V161]
0x1c8: V163 = 0xff
0x1ca: V164 = AND 0xff V162
0x1cc: V165 = 0x1df
0x1cf: JUMPI 0x1df V164
---
Entry stack: [V13, 0x7f, V53]
Stack pops: 0
Stack additions: [V164]
Exit stack: [V13, 0x7f, V53, V164]

================================

Block 0x1d0
[0x1d0:0x1de]
---
Predecessors: [0x1b7]
Successors: [0x1df]
---
0x1d0 POP
0x1d1 PUSH1 0x0
0x1d3 SLOAD
0x1d4 PUSH1 0x1
0x1d6 PUSH1 0xa0
0x1d8 PUSH1 0x2
0x1da EXP
0x1db SUB
0x1dc AND
0x1dd CALLER
0x1de EQ
---
0x1d1: V166 = 0x0
0x1d3: V167 = S[0x0]
0x1d4: V168 = 0x1
0x1d6: V169 = 0xa0
0x1d8: V170 = 0x2
0x1da: V171 = EXP 0x2 0xa0
0x1db: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dc: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x1dd: V174 = CALLER
0x1de: V175 = EQ V174 V173
---
Entry stack: [V13, 0x7f, V53, V164]
Stack pops: 1
Stack additions: [V175]
Exit stack: [V13, 0x7f, V53, V175]

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0x1b7, 0x1d0]
Successors: [0x1e6, 0x1ea]
---
0x1df JUMPDEST
0x1e0 ISZERO
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V176 = ISZERO S0
0x1e1: V177 = ISZERO V176
0x1e2: V178 = 0x1ea
0x1e5: JUMPI 0x1ea V177
---
Entry stack: [V13, 0x7f, V53, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V53]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V179 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V53]

================================

Block 0x1ea
[0x1ea:0x20a]
---
Predecessors: [0x1df]
Successors: [0x7f]
---
0x1ea JUMPDEST
0x1eb PUSH1 0x1
0x1ed PUSH1 0xa0
0x1ef PUSH1 0x2
0x1f1 EXP
0x1f2 SUB
0x1f3 AND
0x1f4 PUSH1 0x0
0x1f6 SWAP1
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x1
0x1fb PUSH1 0x20
0x1fd MSTORE
0x1fe PUSH1 0x40
0x200 SWAP1
0x201 SHA3
0x202 DUP1
0x203 SLOAD
0x204 PUSH1 0xff
0x206 NOT
0x207 AND
0x208 SWAP1
0x209 SSTORE
0x20a JUMP
---
0x1ea: JUMPDEST 
0x1eb: V180 = 0x1
0x1ed: V181 = 0xa0
0x1ef: V182 = 0x2
0x1f1: V183 = EXP 0x2 0xa0
0x1f2: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f3: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x1f4: V186 = 0x0
0x1f8: M[0x0] = V185
0x1f9: V187 = 0x1
0x1fb: V188 = 0x20
0x1fd: M[0x20] = 0x1
0x1fe: V189 = 0x40
0x201: V190 = SHA3 0x0 0x40
0x203: V191 = S[V190]
0x204: V192 = 0xff
0x206: V193 = NOT 0xff
0x207: V194 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V191
0x209: S[V190] = V194
0x20a: JUMP 0x7f
---
Entry stack: [V13, 0x7f, V53]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x20b
[0x20b:0x213]
---
Predecessors: [0xae]
Successors: [0xb7]
---
0x20b JUMPDEST
0x20c PUSH4 0xdeadbeef
0x211 SLOAD
0x212 SWAP1
0x213 JUMP
---
0x20b: JUMPDEST 
0x20c: V195 = 0xdeadbeef
0x211: V196 = S[0xdeadbeef]
0x213: JUMP 0xb7
---
Entry stack: [V13, 0xb7]
Stack pops: 1
Stack additions: [V196]
Exit stack: [V13, V196]

================================

Block 0x214
[0x214:0x22c]
---
Predecessors: [0xd5]
Successors: [0x22d, 0x23c]
---
0x214 JUMPDEST
0x215 CALLER
0x216 PUSH1 0x0
0x218 SWAP1
0x219 DUP2
0x21a MSTORE
0x21b PUSH1 0x1
0x21d PUSH1 0x20
0x21f MSTORE
0x220 PUSH1 0x40
0x222 SWAP1
0x223 SHA3
0x224 SLOAD
0x225 PUSH1 0xff
0x227 AND
0x228 DUP1
0x229 PUSH2 0x23c
0x22c JUMPI
---
0x214: JUMPDEST 
0x215: V197 = CALLER
0x216: V198 = 0x0
0x21a: M[0x0] = V197
0x21b: V199 = 0x1
0x21d: V200 = 0x20
0x21f: M[0x20] = 0x1
0x220: V201 = 0x40
0x223: V202 = SHA3 0x0 0x40
0x224: V203 = S[V202]
0x225: V204 = 0xff
0x227: V205 = AND 0xff V203
0x229: V206 = 0x23c
0x22c: JUMPI 0x23c V205
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: [V205]
Exit stack: [V13, 0x7f, V205]

================================

Block 0x22d
[0x22d:0x23b]
---
Predecessors: [0x214]
Successors: [0x23c]
---
0x22d POP
0x22e PUSH1 0x0
0x230 SLOAD
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 AND
0x23a CALLER
0x23b EQ
---
0x22e: V207 = 0x0
0x230: V208 = S[0x0]
0x231: V209 = 0x1
0x233: V210 = 0xa0
0x235: V211 = 0x2
0x237: V212 = EXP 0x2 0xa0
0x238: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x23a: V215 = CALLER
0x23b: V216 = EQ V215 V214
---
Entry stack: [V13, 0x7f, V205]
Stack pops: 1
Stack additions: [V216]
Exit stack: [V13, 0x7f, V216]

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x214, 0x22d]
Successors: [0x243, 0x247]
---
0x23c JUMPDEST
0x23d ISZERO
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23d: V217 = ISZERO S0
0x23e: V218 = ISZERO V217
0x23f: V219 = 0x247
0x242: JUMPI 0x247 V218
---
Entry stack: [V13, 0x7f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x23c]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V220 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x247
[0x247:0x254]
---
Predecessors: [0x23c]
Successors: []
---
0x247 JUMPDEST
0x248 PUSH1 0x0
0x24a SLOAD
0x24b PUSH1 0x1
0x24d PUSH1 0xa0
0x24f PUSH1 0x2
0x251 EXP
0x252 SUB
0x253 AND
0x254 SELFDESTRUCT
---
0x247: JUMPDEST 
0x248: V221 = 0x0
0x24a: V222 = S[0x0]
0x24b: V223 = 0x1
0x24d: V224 = 0xa0
0x24f: V225 = 0x2
0x251: V226 = EXP 0x2 0xa0
0x252: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x253: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x254: SELFDESTRUCT V228
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x255
[0x255:0x26d]
---
Predecessors: [0xea]
Successors: [0x26e, 0x27d]
---
0x255 JUMPDEST
0x256 CALLER
0x257 PUSH1 0x0
0x259 SWAP1
0x25a DUP2
0x25b MSTORE
0x25c PUSH1 0x1
0x25e PUSH1 0x20
0x260 MSTORE
0x261 PUSH1 0x40
0x263 SWAP1
0x264 SHA3
0x265 SLOAD
0x266 PUSH1 0xff
0x268 AND
0x269 DUP1
0x26a PUSH2 0x27d
0x26d JUMPI
---
0x255: JUMPDEST 
0x256: V229 = CALLER
0x257: V230 = 0x0
0x25b: M[0x0] = V229
0x25c: V231 = 0x1
0x25e: V232 = 0x20
0x260: M[0x20] = 0x1
0x261: V233 = 0x40
0x264: V234 = SHA3 0x0 0x40
0x265: V235 = S[V234]
0x266: V236 = 0xff
0x268: V237 = AND 0xff V235
0x26a: V238 = 0x27d
0x26d: JUMPI 0x27d V237
---
Entry stack: [V13, 0x7f, V85]
Stack pops: 0
Stack additions: [V237]
Exit stack: [V13, 0x7f, V85, V237]

================================

Block 0x26e
[0x26e:0x27c]
---
Predecessors: [0x255]
Successors: [0x27d]
---
0x26e POP
0x26f PUSH1 0x0
0x271 SLOAD
0x272 PUSH1 0x1
0x274 PUSH1 0xa0
0x276 PUSH1 0x2
0x278 EXP
0x279 SUB
0x27a AND
0x27b CALLER
0x27c EQ
---
0x26f: V239 = 0x0
0x271: V240 = S[0x0]
0x272: V241 = 0x1
0x274: V242 = 0xa0
0x276: V243 = 0x2
0x278: V244 = EXP 0x2 0xa0
0x279: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27a: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x27b: V247 = CALLER
0x27c: V248 = EQ V247 V246
---
Entry stack: [V13, 0x7f, V85, V237]
Stack pops: 1
Stack additions: [V248]
Exit stack: [V13, 0x7f, V85, V248]

================================

Block 0x27d
[0x27d:0x283]
---
Predecessors: [0x255, 0x26e]
Successors: [0x284, 0x288]
---
0x27d JUMPDEST
0x27e ISZERO
0x27f ISZERO
0x280 PUSH2 0x288
0x283 JUMPI
---
0x27d: JUMPDEST 
0x27e: V249 = ISZERO S0
0x27f: V250 = ISZERO V249
0x280: V251 = 0x288
0x283: JUMPI 0x288 V250
---
Entry stack: [V13, 0x7f, V85, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V85]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x27d]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V252 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V85]

================================

Block 0x288
[0x288:0x2ae]
---
Predecessors: [0x27d]
Successors: [0x7f]
---
0x288 JUMPDEST
0x289 PUSH1 0x1
0x28b PUSH1 0xa0
0x28d PUSH1 0x2
0x28f EXP
0x290 SUB
0x291 AND
0x292 PUSH1 0x0
0x294 SWAP1
0x295 DUP2
0x296 MSTORE
0x297 PUSH1 0x1
0x299 PUSH1 0x20
0x29b DUP2
0x29c SWAP1
0x29d MSTORE
0x29e PUSH1 0x40
0x2a0 SWAP1
0x2a1 SWAP2
0x2a2 SHA3
0x2a3 DUP1
0x2a4 SLOAD
0x2a5 PUSH1 0xff
0x2a7 NOT
0x2a8 AND
0x2a9 SWAP1
0x2aa SWAP2
0x2ab OR
0x2ac SWAP1
0x2ad SSTORE
0x2ae JUMP
---
0x288: JUMPDEST 
0x289: V253 = 0x1
0x28b: V254 = 0xa0
0x28d: V255 = 0x2
0x28f: V256 = EXP 0x2 0xa0
0x290: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x291: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x292: V259 = 0x0
0x296: M[0x0] = V258
0x297: V260 = 0x1
0x299: V261 = 0x20
0x29d: M[0x20] = 0x1
0x29e: V262 = 0x40
0x2a2: V263 = SHA3 0x0 0x40
0x2a4: V264 = S[V263]
0x2a5: V265 = 0xff
0x2a7: V266 = NOT 0xff
0x2a8: V267 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V264
0x2ab: V268 = OR 0x1 V267
0x2ad: S[V263] = V268
0x2ae: JUMP 0x7f
---
Entry stack: [V13, 0x7f, V85]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x2af
[0x2af:0x2c7]
---
Predecessors: [0xff]
Successors: [0x2c8, 0x2d7]
---
0x2af JUMPDEST
0x2b0 CALLER
0x2b1 PUSH1 0x0
0x2b3 SWAP1
0x2b4 DUP2
0x2b5 MSTORE
0x2b6 PUSH1 0x1
0x2b8 PUSH1 0x20
0x2ba MSTORE
0x2bb PUSH1 0x40
0x2bd DUP2
0x2be SHA3
0x2bf SLOAD
0x2c0 PUSH1 0xff
0x2c2 AND
0x2c3 DUP1
0x2c4 PUSH2 0x2d7
0x2c7 JUMPI
---
0x2af: JUMPDEST 
0x2b0: V269 = CALLER
0x2b1: V270 = 0x0
0x2b5: M[0x0] = V269
0x2b6: V271 = 0x1
0x2b8: V272 = 0x20
0x2ba: M[0x20] = 0x1
0x2bb: V273 = 0x40
0x2be: V274 = SHA3 0x0 0x40
0x2bf: V275 = S[V274]
0x2c0: V276 = 0xff
0x2c2: V277 = AND 0xff V275
0x2c4: V278 = 0x2d7
0x2c7: JUMPI 0x2d7 V277
---
Entry stack: [V13, 0x7f, V96]
Stack pops: 0
Stack additions: [0x0, V277]
Exit stack: [V13, 0x7f, V96, 0x0, V277]

================================

Block 0x2c8
[0x2c8:0x2d6]
---
Predecessors: [0x2af]
Successors: [0x2d7]
---
0x2c8 POP
0x2c9 PUSH1 0x0
0x2cb SLOAD
0x2cc PUSH1 0x1
0x2ce PUSH1 0xa0
0x2d0 PUSH1 0x2
0x2d2 EXP
0x2d3 SUB
0x2d4 AND
0x2d5 CALLER
0x2d6 EQ
---
0x2c9: V279 = 0x0
0x2cb: V280 = S[0x0]
0x2cc: V281 = 0x1
0x2ce: V282 = 0xa0
0x2d0: V283 = 0x2
0x2d2: V284 = EXP 0x2 0xa0
0x2d3: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d4: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x2d5: V287 = CALLER
0x2d6: V288 = EQ V287 V286
---
Entry stack: [V13, 0x7f, V96, 0x0, V277]
Stack pops: 1
Stack additions: [V288]
Exit stack: [V13, 0x7f, V96, 0x0, V288]

================================

Block 0x2d7
[0x2d7:0x2dd]
---
Predecessors: [0x2af, 0x2c8]
Successors: [0x2de, 0x2e2]
---
0x2d7 JUMPDEST
0x2d8 ISZERO
0x2d9 ISZERO
0x2da PUSH2 0x2e2
0x2dd JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V289 = ISZERO S0
0x2d9: V290 = ISZERO V289
0x2da: V291 = 0x2e2
0x2dd: JUMPI 0x2e2 V290
---
Entry stack: [V13, 0x7f, V96, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V96, 0x0]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x2d7]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V292 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V96, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V96, 0x0]

================================

Block 0x2e2
[0x2e2:0x354]
---
Predecessors: [0x2d7]
Successors: [0x355, 0x359]
---
0x2e2 JUMPDEST
0x2e3 POP
0x2e4 PUSH1 0x1
0x2e6 PUSH1 0xf0
0x2e8 PUSH1 0x2
0x2ea EXP
0x2eb SUB
0x2ec NOT
0x2ed DUP2
0x2ee AND
0x2ef PUSH1 0x0
0x2f1 SWAP1
0x2f2 DUP2
0x2f3 MSTORE
0x2f4 PUSH1 0x2
0x2f6 PUSH1 0x20
0x2f8 MSTORE
0x2f9 PUSH1 0x40
0x2fb DUP1
0x2fc DUP3
0x2fd SHA3
0x2fe SLOAD
0x2ff DUP2
0x300 MLOAD
0x301 PUSH32 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x322 DUP2
0x323 MSTORE
0x324 SWAP2
0x325 MLOAD
0x326 PUSH1 0x1
0x328 PUSH1 0xa0
0x32a PUSH1 0x2
0x32c EXP
0x32d SUB
0x32e SWAP1
0x32f SWAP2
0x330 AND
0x331 SWAP3
0x332 DUP4
0x333 SWAP3
0x334 PUSH4 0xd0e30db0
0x339 SWAP3
0x33a CALLVALUE
0x33b SWAP3
0x33c PUSH1 0x4
0x33e DUP1
0x33f DUP5
0x340 ADD
0x341 SWAP4
0x342 SWAP2
0x343 SWAP3
0x344 SWAP2
0x345 DUP3
0x346 SWAP1
0x347 SUB
0x348 ADD
0x349 DUP2
0x34a DUP6
0x34b DUP9
0x34c DUP1
0x34d EXTCODESIZE
0x34e ISZERO
0x34f DUP1
0x350 ISZERO
0x351 PUSH2 0x359
0x354 JUMPI
---
0x2e2: JUMPDEST 
0x2e4: V293 = 0x1
0x2e6: V294 = 0xf0
0x2e8: V295 = 0x2
0x2ea: V296 = EXP 0x2 0xf0
0x2eb: V297 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x2ec: V298 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2ee: V299 = AND V96 0xffff000000000000000000000000000000000000000000000000000000000000
0x2ef: V300 = 0x0
0x2f3: M[0x0] = V299
0x2f4: V301 = 0x2
0x2f6: V302 = 0x20
0x2f8: M[0x20] = 0x2
0x2f9: V303 = 0x40
0x2fd: V304 = SHA3 0x0 0x40
0x2fe: V305 = S[V304]
0x300: V306 = M[0x40]
0x301: V307 = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x323: M[V306] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x325: V308 = M[0x40]
0x326: V309 = 0x1
0x328: V310 = 0xa0
0x32a: V311 = 0x2
0x32c: V312 = EXP 0x2 0xa0
0x32d: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x330: V314 = AND V305 0xffffffffffffffffffffffffffffffffffffffff
0x334: V315 = 0xd0e30db0
0x33a: V316 = CALLVALUE
0x33c: V317 = 0x4
0x340: V318 = ADD V306 0x4
0x347: V319 = SUB V306 V308
0x348: V320 = ADD V319 0x4
0x34d: V321 = EXTCODESIZE V314
0x34e: V322 = ISZERO V321
0x350: V323 = ISZERO V322
0x351: V324 = 0x359
0x354: JUMPI 0x359 V323
---
Entry stack: [V13, 0x7f, V96, 0x0]
Stack pops: 2
Stack additions: [S1, V314, V314, 0xd0e30db0, V316, V318, 0x0, V308, V320, V308, V316, V314, V322]
Exit stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, 0x0, V308, V320, V308, V316, V314, V322]

================================

Block 0x355
[0x355:0x358]
---
Predecessors: [0x2e2]
Successors: []
---
0x355 PUSH1 0x0
0x357 DUP1
0x358 REVERT
---
0x355: V325 = 0x0
0x358: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, 0x0, V308, V320, V308, V316, V314, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, 0x0, V308, V320, V308, V316, V314, V322]

================================

Block 0x359
[0x359:0x363]
---
Predecessors: [0x2e2]
Successors: [0x364, 0x36d]
---
0x359 JUMPDEST
0x35a POP
0x35b GAS
0x35c CALL
0x35d ISZERO
0x35e DUP1
0x35f ISZERO
0x360 PUSH2 0x36d
0x363 JUMPI
---
0x359: JUMPDEST 
0x35b: V326 = GAS
0x35c: V327 = CALL V326 V314 V316 V308 V320 V308 0x0
0x35d: V328 = ISZERO V327
0x35f: V329 = ISZERO V328
0x360: V330 = 0x36d
0x363: JUMPI 0x36d V329
---
Entry stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, 0x0, V308, V320, V308, V316, V314, V322]
Stack pops: 7
Stack additions: [V328]
Exit stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, V328]

================================

Block 0x364
[0x364:0x36c]
---
Predecessors: [0x359]
Successors: []
---
0x364 RETURNDATASIZE
0x365 PUSH1 0x0
0x367 DUP1
0x368 RETURNDATACOPY
0x369 RETURNDATASIZE
0x36a PUSH1 0x0
0x36c REVERT
---
0x364: V331 = RETURNDATASIZE
0x365: V332 = 0x0
0x368: RETURNDATACOPY 0x0 0x0 V331
0x369: V333 = RETURNDATASIZE
0x36a: V334 = 0x0
0x36c: REVERT 0x0 V333
---
Entry stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, V328]

================================

Block 0x36d
[0x36d:0x375]
---
Predecessors: [0x359]
Successors: [0x7f]
---
0x36d JUMPDEST
0x36e POP
0x36f POP
0x370 POP
0x371 POP
0x372 POP
0x373 POP
0x374 POP
0x375 JUMP
---
0x36d: JUMPDEST 
0x375: JUMP 0x7f
---
Entry stack: [V13, 0x7f, V96, V314, V314, 0xd0e30db0, V316, V318, V328]
Stack pops: 8
Stack additions: []
Exit stack: [V13]

================================

Block 0x376
[0x376:0x38e]
---
Predecessors: [0x120]
Successors: [0x38f, 0x39e]
---
0x376 JUMPDEST
0x377 CALLER
0x378 PUSH1 0x0
0x37a SWAP1
0x37b DUP2
0x37c MSTORE
0x37d PUSH1 0x1
0x37f PUSH1 0x20
0x381 MSTORE
0x382 PUSH1 0x40
0x384 SWAP1
0x385 SHA3
0x386 SLOAD
0x387 PUSH1 0xff
0x389 AND
0x38a DUP1
0x38b PUSH2 0x39e
0x38e JUMPI
---
0x376: JUMPDEST 
0x377: V335 = CALLER
0x378: V336 = 0x0
0x37c: M[0x0] = V335
0x37d: V337 = 0x1
0x37f: V338 = 0x20
0x381: M[0x20] = 0x1
0x382: V339 = 0x40
0x385: V340 = SHA3 0x0 0x40
0x386: V341 = S[V340]
0x387: V342 = 0xff
0x389: V343 = AND 0xff V341
0x38b: V344 = 0x39e
0x38e: JUMPI 0x39e V343
---
Entry stack: [V13, 0x7f, V111, V119]
Stack pops: 0
Stack additions: [V343]
Exit stack: [V13, 0x7f, V111, V119, V343]

================================

Block 0x38f
[0x38f:0x39d]
---
Predecessors: [0x376]
Successors: [0x39e]
---
0x38f POP
0x390 PUSH1 0x0
0x392 SLOAD
0x393 PUSH1 0x1
0x395 PUSH1 0xa0
0x397 PUSH1 0x2
0x399 EXP
0x39a SUB
0x39b AND
0x39c CALLER
0x39d EQ
---
0x390: V345 = 0x0
0x392: V346 = S[0x0]
0x393: V347 = 0x1
0x395: V348 = 0xa0
0x397: V349 = 0x2
0x399: V350 = EXP 0x2 0xa0
0x39a: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39b: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x39c: V353 = CALLER
0x39d: V354 = EQ V353 V352
---
Entry stack: [V13, 0x7f, V111, V119, V343]
Stack pops: 1
Stack additions: [V354]
Exit stack: [V13, 0x7f, V111, V119, V354]

================================

Block 0x39e
[0x39e:0x3a4]
---
Predecessors: [0x376, 0x38f]
Successors: [0x3a5, 0x3a9]
---
0x39e JUMPDEST
0x39f ISZERO
0x3a0 ISZERO
0x3a1 PUSH2 0x3a9
0x3a4 JUMPI
---
0x39e: JUMPDEST 
0x39f: V355 = ISZERO S0
0x3a0: V356 = ISZERO V355
0x3a1: V357 = 0x3a9
0x3a4: JUMPI 0x3a9 V356
---
Entry stack: [V13, 0x7f, V111, V119, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V111, V119]

================================

Block 0x3a5
[0x3a5:0x3a8]
---
Predecessors: [0x39e]
Successors: []
---
0x3a5 PUSH1 0x0
0x3a7 DUP1
0x3a8 REVERT
---
0x3a5: V358 = 0x0
0x3a8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V111, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V111, V119]

================================

Block 0x3a9
[0x3a9:0x3ef]
---
Predecessors: [0x39e]
Successors: [0x7f]
---
0x3a9 JUMPDEST
0x3aa PUSH1 0x1
0x3ac PUSH1 0xf0
0x3ae PUSH1 0x2
0x3b0 EXP
0x3b1 SUB
0x3b2 NOT
0x3b3 SWAP2
0x3b4 SWAP1
0x3b5 SWAP2
0x3b6 AND
0x3b7 PUSH1 0x0
0x3b9 SWAP1
0x3ba DUP2
0x3bb MSTORE
0x3bc PUSH1 0x2
0x3be PUSH1 0x20
0x3c0 MSTORE
0x3c1 PUSH1 0x40
0x3c3 SWAP1
0x3c4 SHA3
0x3c5 DUP1
0x3c6 SLOAD
0x3c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3dc NOT
0x3dd AND
0x3de PUSH1 0x1
0x3e0 PUSH1 0xa0
0x3e2 PUSH1 0x2
0x3e4 EXP
0x3e5 SUB
0x3e6 SWAP1
0x3e7 SWAP3
0x3e8 AND
0x3e9 SWAP2
0x3ea SWAP1
0x3eb SWAP2
0x3ec OR
0x3ed SWAP1
0x3ee SSTORE
0x3ef JUMP
---
0x3a9: JUMPDEST 
0x3aa: V359 = 0x1
0x3ac: V360 = 0xf0
0x3ae: V361 = 0x2
0x3b0: V362 = EXP 0x2 0xf0
0x3b1: V363 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x3b2: V364 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3b6: V365 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V111
0x3b7: V366 = 0x0
0x3bb: M[0x0] = V365
0x3bc: V367 = 0x2
0x3be: V368 = 0x20
0x3c0: M[0x20] = 0x2
0x3c1: V369 = 0x40
0x3c4: V370 = SHA3 0x0 0x40
0x3c6: V371 = S[V370]
0x3c7: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x3dc: V373 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: V374 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V371
0x3de: V375 = 0x1
0x3e0: V376 = 0xa0
0x3e2: V377 = 0x2
0x3e4: V378 = EXP 0x2 0xa0
0x3e5: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e8: V380 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: V381 = OR V380 V374
0x3ee: S[V370] = V381
0x3ef: JUMP 0x7f
---
Entry stack: [V13, 0x7f, V111, V119]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x3f0
[0x3f0:0x408]
---
Predecessors: [0x142]
Successors: [0x409, 0x418]
---
0x3f0 JUMPDEST
0x3f1 CALLER
0x3f2 PUSH1 0x0
0x3f4 SWAP1
0x3f5 DUP2
0x3f6 MSTORE
0x3f7 PUSH1 0x1
0x3f9 PUSH1 0x20
0x3fb MSTORE
0x3fc PUSH1 0x40
0x3fe DUP2
0x3ff SHA3
0x400 SLOAD
0x401 PUSH1 0xff
0x403 AND
0x404 DUP1
0x405 PUSH2 0x418
0x408 JUMPI
---
0x3f0: JUMPDEST 
0x3f1: V382 = CALLER
0x3f2: V383 = 0x0
0x3f6: M[0x0] = V382
0x3f7: V384 = 0x1
0x3f9: V385 = 0x20
0x3fb: M[0x20] = 0x1
0x3fc: V386 = 0x40
0x3ff: V387 = SHA3 0x0 0x40
0x400: V388 = S[V387]
0x401: V389 = 0xff
0x403: V390 = AND 0xff V388
0x405: V391 = 0x418
0x408: JUMPI 0x418 V390
---
Entry stack: [V13, 0x7f, V123, V132]
Stack pops: 0
Stack additions: [0x0, V390]
Exit stack: [V13, 0x7f, V123, V132, 0x0, V390]

================================

Block 0x409
[0x409:0x417]
---
Predecessors: [0x3f0]
Successors: [0x418]
---
0x409 POP
0x40a PUSH1 0x0
0x40c SLOAD
0x40d PUSH1 0x1
0x40f PUSH1 0xa0
0x411 PUSH1 0x2
0x413 EXP
0x414 SUB
0x415 AND
0x416 CALLER
0x417 EQ
---
0x40a: V392 = 0x0
0x40c: V393 = S[0x0]
0x40d: V394 = 0x1
0x40f: V395 = 0xa0
0x411: V396 = 0x2
0x413: V397 = EXP 0x2 0xa0
0x414: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x415: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x416: V400 = CALLER
0x417: V401 = EQ V400 V399
---
Entry stack: [V13, 0x7f, V123, V132, 0x0, V390]
Stack pops: 1
Stack additions: [V401]
Exit stack: [V13, 0x7f, V123, V132, 0x0, V401]

================================

Block 0x418
[0x418:0x41e]
---
Predecessors: [0x3f0, 0x409]
Successors: [0x41f, 0x423]
---
0x418 JUMPDEST
0x419 ISZERO
0x41a ISZERO
0x41b PUSH2 0x423
0x41e JUMPI
---
0x418: JUMPDEST 
0x419: V402 = ISZERO S0
0x41a: V403 = ISZERO V402
0x41b: V404 = 0x423
0x41e: JUMPI 0x423 V403
---
Entry stack: [V13, 0x7f, V123, V132, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V123, V132, 0x0]

================================

Block 0x41f
[0x41f:0x422]
---
Predecessors: [0x418]
Successors: []
---
0x41f PUSH1 0x0
0x421 DUP1
0x422 REVERT
---
0x41f: V405 = 0x0
0x422: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V123, V132, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V123, V132, 0x0]

================================

Block 0x423
[0x423:0x498]
---
Predecessors: [0x418]
Successors: [0x499, 0x49d]
---
0x423 JUMPDEST
0x424 POP
0x425 PUSH1 0x1
0x427 PUSH1 0xf0
0x429 PUSH1 0x2
0x42b EXP
0x42c SUB
0x42d NOT
0x42e DUP2
0x42f AND
0x430 PUSH1 0x0
0x432 SWAP1
0x433 DUP2
0x434 MSTORE
0x435 PUSH1 0x2
0x437 PUSH1 0x20
0x439 MSTORE
0x43a PUSH1 0x40
0x43c DUP1
0x43d DUP3
0x43e SHA3
0x43f SLOAD
0x440 DUP2
0x441 MLOAD
0x442 PUSH32 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x463 DUP2
0x464 MSTORE
0x465 PUSH1 0x4
0x467 DUP2
0x468 ADD
0x469 DUP7
0x46a SWAP1
0x46b MSTORE
0x46c SWAP2
0x46d MLOAD
0x46e PUSH1 0x1
0x470 PUSH1 0xa0
0x472 PUSH1 0x2
0x474 EXP
0x475 SUB
0x476 SWAP1
0x477 SWAP2
0x478 AND
0x479 SWAP3
0x47a DUP4
0x47b SWAP3
0x47c PUSH4 0x2e1a7d4d
0x481 SWAP3
0x482 PUSH1 0x24
0x484 DUP1
0x485 DUP4
0x486 ADD
0x487 SWAP4
0x488 SWAP3
0x489 DUP3
0x48a SWAP1
0x48b SUB
0x48c ADD
0x48d DUP2
0x48e DUP4
0x48f DUP8
0x490 DUP1
0x491 EXTCODESIZE
0x492 ISZERO
0x493 DUP1
0x494 ISZERO
0x495 PUSH2 0x49d
0x498 JUMPI
---
0x423: JUMPDEST 
0x425: V406 = 0x1
0x427: V407 = 0xf0
0x429: V408 = 0x2
0x42b: V409 = EXP 0x2 0xf0
0x42c: V410 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x42d: V411 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x42f: V412 = AND V132 0xffff000000000000000000000000000000000000000000000000000000000000
0x430: V413 = 0x0
0x434: M[0x0] = V412
0x435: V414 = 0x2
0x437: V415 = 0x20
0x439: M[0x20] = 0x2
0x43a: V416 = 0x40
0x43e: V417 = SHA3 0x0 0x40
0x43f: V418 = S[V417]
0x441: V419 = M[0x40]
0x442: V420 = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x464: M[V419] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x465: V421 = 0x4
0x468: V422 = ADD V419 0x4
0x46b: M[V422] = V123
0x46d: V423 = M[0x40]
0x46e: V424 = 0x1
0x470: V425 = 0xa0
0x472: V426 = 0x2
0x474: V427 = EXP 0x2 0xa0
0x475: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x478: V429 = AND V418 0xffffffffffffffffffffffffffffffffffffffff
0x47c: V430 = 0x2e1a7d4d
0x482: V431 = 0x24
0x486: V432 = ADD V419 0x24
0x48b: V433 = SUB V419 V423
0x48c: V434 = ADD V433 0x24
0x491: V435 = EXTCODESIZE V429
0x492: V436 = ISZERO V435
0x494: V437 = ISZERO V436
0x495: V438 = 0x49d
0x498: JUMPI 0x49d V437
---
Entry stack: [V13, 0x7f, V123, V132, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V429, V429, 0x2e1a7d4d, V432, 0x0, V423, V434, V423, 0x0, V429, V436]
Exit stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, 0x0, V423, V434, V423, 0x0, V429, V436]

================================

Block 0x499
[0x499:0x49c]
---
Predecessors: [0x423]
Successors: []
---
0x499 PUSH1 0x0
0x49b DUP1
0x49c REVERT
---
0x499: V439 = 0x0
0x49c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, 0x0, V423, V434, V423, 0x0, V429, V436]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, 0x0, V423, V434, V423, 0x0, V429, V436]

================================

Block 0x49d
[0x49d:0x4a7]
---
Predecessors: [0x423]
Successors: [0x4a8, 0x4b1]
---
0x49d JUMPDEST
0x49e POP
0x49f GAS
0x4a0 CALL
0x4a1 ISZERO
0x4a2 DUP1
0x4a3 ISZERO
0x4a4 PUSH2 0x4b1
0x4a7 JUMPI
---
0x49d: JUMPDEST 
0x49f: V440 = GAS
0x4a0: V441 = CALL V440 V429 0x0 V423 V434 V423 0x0
0x4a1: V442 = ISZERO V441
0x4a3: V443 = ISZERO V442
0x4a4: V444 = 0x4b1
0x4a7: JUMPI 0x4b1 V443
---
Entry stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, 0x0, V423, V434, V423, 0x0, V429, V436]
Stack pops: 7
Stack additions: [V442]
Exit stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, V442]

================================

Block 0x4a8
[0x4a8:0x4b0]
---
Predecessors: [0x49d]
Successors: []
---
0x4a8 RETURNDATASIZE
0x4a9 PUSH1 0x0
0x4ab DUP1
0x4ac RETURNDATACOPY
0x4ad RETURNDATASIZE
0x4ae PUSH1 0x0
0x4b0 REVERT
---
0x4a8: V445 = RETURNDATASIZE
0x4a9: V446 = 0x0
0x4ac: RETURNDATACOPY 0x0 0x0 V445
0x4ad: V447 = RETURNDATASIZE
0x4ae: V448 = 0x0
0x4b0: REVERT 0x0 V447
---
Entry stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, V442]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, V442]

================================

Block 0x4b1
[0x4b1:0x4cf]
---
Predecessors: [0x49d]
Successors: [0x4d0, 0x4d4]
---
0x4b1 JUMPDEST
0x4b2 POP
0x4b3 POP
0x4b4 PUSH1 0x40
0x4b6 MLOAD
0x4b7 CALLER
0x4b8 SWAP3
0x4b9 POP
0x4ba DUP6
0x4bb SWAP2
0x4bc POP
0x4bd PUSH1 0x0
0x4bf DUP2
0x4c0 DUP2
0x4c1 DUP2
0x4c2 DUP6
0x4c3 DUP8
0x4c4 GAS
0x4c5 CALL
0x4c6 SWAP3
0x4c7 POP
0x4c8 POP
0x4c9 POP
0x4ca ISZERO
0x4cb ISZERO
0x4cc PUSH2 0x4d4
0x4cf JUMPI
---
0x4b1: JUMPDEST 
0x4b4: V449 = 0x40
0x4b6: V450 = M[0x40]
0x4b7: V451 = CALLER
0x4bd: V452 = 0x0
0x4c4: V453 = GAS
0x4c5: V454 = CALL V453 V451 V123 V450 0x0 V450 0x0
0x4ca: V455 = ISZERO V454
0x4cb: V456 = ISZERO V455
0x4cc: V457 = 0x4d4
0x4cf: JUMPI 0x4d4 V456
---
Entry stack: [V13, 0x7f, V123, V132, V429, V429, 0x2e1a7d4d, V432, V442]
Stack pops: 7
Stack additions: [S6, S5, S4]
Exit stack: [V13, 0x7f, V123, V132, V429]

================================

Block 0x4d0
[0x4d0:0x4d3]
---
Predecessors: [0x4b1]
Successors: []
---
0x4d0 PUSH1 0x0
0x4d2 DUP1
0x4d3 REVERT
---
0x4d0: V458 = 0x0
0x4d3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V123, V132, V429]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V123, V132, V429]

================================

Block 0x4d4
[0x4d4:0x4d8]
---
Predecessors: [0x4b1, 0xbe9]
Successors: [0x7f]
---
0x4d4 JUMPDEST
0x4d5 POP
0x4d6 POP
0x4d7 POP
0x4d8 JUMP
---
0x4d4: JUMPDEST 
0x4d8: JUMP 0x7f
---
Entry stack: [V13, 0x7f, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x4d9
[0x4d9:0x4f3]
---
Predecessors: [0x166]
Successors: [0x4f4, 0x503]
---
0x4d9 JUMPDEST
0x4da CALLER
0x4db PUSH1 0x0
0x4dd SWAP1
0x4de DUP2
0x4df MSTORE
0x4e0 PUSH1 0x1
0x4e2 PUSH1 0x20
0x4e4 MSTORE
0x4e5 PUSH1 0x40
0x4e7 DUP2
0x4e8 SHA3
0x4e9 SLOAD
0x4ea DUP2
0x4eb SWAP1
0x4ec PUSH1 0xff
0x4ee AND
0x4ef DUP1
0x4f0 PUSH2 0x503
0x4f3 JUMPI
---
0x4d9: JUMPDEST 
0x4da: V459 = CALLER
0x4db: V460 = 0x0
0x4df: M[0x0] = V459
0x4e0: V461 = 0x1
0x4e2: V462 = 0x20
0x4e4: M[0x20] = 0x1
0x4e5: V463 = 0x40
0x4e8: V464 = SHA3 0x0 0x40
0x4e9: V465 = S[V464]
0x4ec: V466 = 0xff
0x4ee: V467 = AND 0xff V465
0x4f0: V468 = 0x503
0x4f3: JUMPI 0x503 V467
---
Entry stack: [V13, 0x7f, V139]
Stack pops: 0
Stack additions: [0x0, 0x0, V467]
Exit stack: [V13, 0x7f, V139, 0x0, 0x0, V467]

================================

Block 0x4f4
[0x4f4:0x502]
---
Predecessors: [0x4d9]
Successors: [0x503]
---
0x4f4 POP
0x4f5 PUSH1 0x0
0x4f7 SLOAD
0x4f8 PUSH1 0x1
0x4fa PUSH1 0xa0
0x4fc PUSH1 0x2
0x4fe EXP
0x4ff SUB
0x500 AND
0x501 CALLER
0x502 EQ
---
0x4f5: V469 = 0x0
0x4f7: V470 = S[0x0]
0x4f8: V471 = 0x1
0x4fa: V472 = 0xa0
0x4fc: V473 = 0x2
0x4fe: V474 = EXP 0x2 0xa0
0x4ff: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x501: V477 = CALLER
0x502: V478 = EQ V477 V476
---
Entry stack: [V13, 0x7f, V139, 0x0, 0x0, V467]
Stack pops: 1
Stack additions: [V478]
Exit stack: [V13, 0x7f, V139, 0x0, 0x0, V478]

================================

Block 0x503
[0x503:0x509]
---
Predecessors: [0x4d9, 0x4f4]
Successors: [0x50a, 0x50e]
---
0x503 JUMPDEST
0x504 ISZERO
0x505 ISZERO
0x506 PUSH2 0x50e
0x509 JUMPI
---
0x503: JUMPDEST 
0x504: V479 = ISZERO S0
0x505: V480 = ISZERO V479
0x506: V481 = 0x50e
0x509: JUMPI 0x50e V480
---
Entry stack: [V13, 0x7f, V139, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V139, 0x0, 0x0]

================================

Block 0x50a
[0x50a:0x50d]
---
Predecessors: [0x503]
Successors: []
---
0x50a PUSH1 0x0
0x50c DUP1
0x50d REVERT
---
0x50a: V482 = 0x0
0x50d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, 0x0, 0x0]

================================

Block 0x50e
[0x50e:0x650]
---
Predecessors: [0x503]
Successors: [0x651, 0x65a]
---
0x50e JUMPDEST
0x50f GAS
0x510 PUSH2 0x100
0x513 DUP5
0x514 ADD
0x515 DUP1
0x516 MLOAD
0x517 PUSH1 0x1
0x519 PUSH1 0xf0
0x51b PUSH1 0x2
0x51d EXP
0x51e SUB
0x51f NOT
0x520 PUSH31 0x1000000000000000000000000000000000000000000000000000000000000
0x540 SWAP2
0x541 DUP3
0x542 MUL
0x543 DUP2
0x544 AND
0x545 PUSH1 0x0
0x547 SWAP1
0x548 DUP2
0x549 MSTORE
0x54a PUSH1 0x2
0x54c PUSH1 0x20
0x54e DUP2
0x54f DUP2
0x550 MSTORE
0x551 PUSH1 0x40
0x553 DUP1
0x554 DUP5
0x555 SHA3
0x556 SLOAD
0x557 DUP8
0x558 MLOAD
0x559 DUP3
0x55a DUP14
0x55b ADD
0x55c MLOAD
0x55d SWAP8
0x55e DUP2
0x55f MUL
0x560 SWAP1
0x561 SWAP7
0x562 AND
0x563 DUP6
0x564 MSTORE
0x565 DUP2
0x566 DUP6
0x567 SHA3
0x568 SLOAD
0x569 DUP13
0x56a MLOAD
0x56b PUSH1 0xe0
0x56d DUP15
0x56e ADD
0x56f MLOAD
0x570 SWAP10
0x571 MLOAD
0x572 DUP5
0x573 MLOAD
0x574 PUSH1 0x1
0x576 PUSH1 0xa0
0x578 PUSH1 0x2
0x57a EXP
0x57b SUB
0x57c SWAP4
0x57d DUP5
0x57e AND
0x57f PUSH13 0x1000000000000000000000000
0x58d SWAP1
0x58e DUP2
0x58f MUL
0x590 DUP3
0x591 MSTORE
0x592 SWAP3
0x593 DUP4
0x594 MUL
0x595 DUP4
0x596 SWAP1
0x597 DIV
0x598 DUP5
0x599 AND
0x59a DUP4
0x59b MUL
0x59c PUSH1 0x14
0x59e DUP3
0x59f ADD
0x5a0 MSTORE
0x5a1 PUSH1 0xa0
0x5a3 PUSH1 0x2
0x5a5 EXP
0x5a6 PUSH9 0x10000000000000000
0x5b0 DUP14
0x5b1 MUL
0x5b2 DUP2
0x5b3 SWAP1
0x5b4 DIV
0x5b5 PUSH1 0x28
0x5b7 DUP4
0x5b8 ADD
0x5b9 MSTORE
0x5ba PUSH1 0x48
0x5bc DUP3
0x5bd ADD
0x5be DUP11
0x5bf SWAP1
0x5c0 MSTORE
0x5c1 SWAP12
0x5c2 DUP13
0x5c3 MUL
0x5c4 DUP13
0x5c5 SWAP1
0x5c6 DIV
0x5c7 PUSH1 0x49
0x5c9 DUP3
0x5ca ADD
0x5cb MSTORE
0x5cc PUSH1 0xe0
0x5ce PUSH1 0x2
0x5d0 EXP
0x5d1 PUSH7 0x1000000000000
0x5d9 DUP4
0x5da MUL
0x5db DIV
0x5dc PUSH1 0x69
0x5de DUP3
0x5df ADD
0x5e0 MSTORE
0x5e1 PUSH1 0xc0
0x5e3 PUSH1 0x2
0x5e5 EXP
0x5e6 PUSH11 0x100000000000000000000
0x5f2 SWAP1
0x5f3 SWAP3
0x5f4 MUL
0x5f5 SWAP2
0x5f6 SWAP1
0x5f7 SWAP2
0x5f8 DIV
0x5f9 PUSH1 0x89
0x5fb DUP3
0x5fc ADD
0x5fd MSTORE
0x5fe SWAP4
0x5ff MLOAD
0x600 PUSH2 0x9470
0x603 SWAP12
0x604 SWAP1
0x605 SWAP12
0x606 ADD
0x607 SWAP13
0x608 POP
0x609 SWAP2
0x60a AND
0x60b SWAP10
0x60c POP
0x60d PUSH19 0x1000000000000000000000000000000000000
0x621 SWAP1
0x622 SWAP6
0x623 MUL
0x624 SWAP7
0x625 SWAP1
0x626 SWAP7
0x627 DIV
0x628 SWAP7
0x629 DUP9
0x62a SWAP7
0x62b PUSH4 0x19774d43
0x630 SWAP7
0x631 DUP7
0x632 MUL
0x633 SWAP6
0x634 SWAP1
0x635 SWAP6
0x636 DIV
0x637 SWAP5
0x638 SWAP3
0x639 SWAP4
0x63a PUSH1 0xa9
0x63c DUP1
0x63d DUP6
0x63e ADD
0x63f SWAP5
0x640 DUP4
0x641 SWAP1
0x642 SUB
0x643 ADD
0x644 SWAP1
0x645 DUP3
0x646 SWAP1
0x647 DUP7
0x648 GAS
0x649 CALL
0x64a ISZERO
0x64b DUP1
0x64c ISZERO
0x64d PUSH2 0x65a
0x650 JUMPI
---
0x50e: JUMPDEST 
0x50f: V483 = GAS
0x510: V484 = 0x100
0x514: V485 = ADD V139 0x100
0x516: V486 = M[V485]
0x517: V487 = 0x1
0x519: V488 = 0xf0
0x51b: V489 = 0x2
0x51d: V490 = EXP 0x2 0xf0
0x51e: V491 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x51f: V492 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x520: V493 = 0x1000000000000000000000000000000000000000000000000000000000000
0x542: V494 = MUL 0x1000000000000000000000000000000000000000000000000000000000000 V486
0x544: V495 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V494
0x545: V496 = 0x0
0x549: M[0x0] = V495
0x54a: V497 = 0x2
0x54c: V498 = 0x20
0x550: M[0x20] = 0x2
0x551: V499 = 0x40
0x555: V500 = SHA3 0x0 0x40
0x556: V501 = S[V500]
0x558: V502 = M[V485]
0x55b: V503 = ADD V139 0x40
0x55c: V504 = M[V503]
0x55f: V505 = MUL V502 0x1000000000000000000000000000000000000000000000000000000000000
0x562: V506 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V505
0x564: M[0x0] = V506
0x567: V507 = SHA3 0x0 0x40
0x568: V508 = S[V507]
0x56a: V509 = M[V139]
0x56b: V510 = 0xe0
0x56e: V511 = ADD V139 0xe0
0x56f: V512 = M[V511]
0x571: V513 = M[V485]
0x573: V514 = M[0x40]
0x574: V515 = 0x1
0x576: V516 = 0xa0
0x578: V517 = 0x2
0x57a: V518 = EXP 0x2 0xa0
0x57b: V519 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57e: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x57f: V521 = 0x1000000000000000000000000
0x58f: V522 = MUL 0x1000000000000000000000000 V520
0x591: M[V514] = V522
0x594: V523 = MUL 0x1000000000000000000000000 V509
0x597: V524 = DIV V523 0x1000000000000000000000000
0x599: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x59b: V526 = MUL 0x1000000000000000000000000 V525
0x59c: V527 = 0x14
0x59f: V528 = ADD V514 0x14
0x5a0: M[V528] = V526
0x5a1: V529 = 0xa0
0x5a3: V530 = 0x2
0x5a5: V531 = EXP 0x2 0xa0
0x5a6: V532 = 0x10000000000000000
0x5b1: V533 = MUL V512 0x10000000000000000
0x5b4: V534 = DIV V533 0x10000000000000000000000000000000000000000
0x5b5: V535 = 0x28
0x5b8: V536 = ADD V514 0x28
0x5b9: M[V536] = V534
0x5ba: V537 = 0x48
0x5bd: V538 = ADD V514 0x48
0x5c0: M[V538] = 0x0
0x5c3: V539 = MUL 0x10000000000000000000000000000000000000000 V512
0x5c6: V540 = DIV V539 0x10000000000000000000000000000000000000000
0x5c7: V541 = 0x49
0x5ca: V542 = ADD V514 0x49
0x5cb: M[V542] = V540
0x5cc: V543 = 0xe0
0x5ce: V544 = 0x2
0x5d0: V545 = EXP 0x2 0xe0
0x5d1: V546 = 0x1000000000000
0x5da: V547 = MUL V513 0x1000000000000
0x5db: V548 = DIV V547 0x100000000000000000000000000000000000000000000000000000000
0x5dc: V549 = 0x69
0x5df: V550 = ADD V514 0x69
0x5e0: M[V550] = V548
0x5e1: V551 = 0xc0
0x5e3: V552 = 0x2
0x5e5: V553 = EXP 0x2 0xc0
0x5e6: V554 = 0x100000000000000000000
0x5f4: V555 = MUL V513 0x100000000000000000000
0x5f8: V556 = DIV V555 0x1000000000000000000000000000000000000000000000000
0x5f9: V557 = 0x89
0x5fc: V558 = ADD V514 0x89
0x5fd: M[V558] = V556
0x5ff: V559 = M[0x40]
0x600: V560 = 0x9470
0x606: V561 = ADD 0x9470 V483
0x60a: V562 = AND V501 0xffffffffffffffffffffffffffffffffffffffff
0x60d: V563 = 0x1000000000000000000000000000000000000
0x623: V564 = MUL V502 0x1000000000000000000000000000000000000
0x627: V565 = DIV V564 0x10000000000000000000000000000000000000000
0x62b: V566 = 0x19774d43
0x632: V567 = MUL 0x1000000000000000000000000 V504
0x636: V568 = DIV V567 0x1000000000000000000000000
0x63a: V569 = 0xa9
0x63e: V570 = ADD V514 0xa9
0x642: V571 = SUB V514 V559
0x643: V572 = ADD V571 0xa9
0x648: V573 = GAS
0x649: V574 = CALL V573 0x2 0x0 V559 V572 V559 0x20
0x64a: V575 = ISZERO V574
0x64c: V576 = ISZERO V575
0x64d: V577 = 0x65a
0x650: JUMPI 0x65a V576
---
Entry stack: [V13, 0x7f, V139, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, V561, V562, V565, V562, 0x19774d43, V568, 0x2, V570, V575]
Exit stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V568, 0x2, V570, V575]

================================

Block 0x651
[0x651:0x659]
---
Predecessors: [0x50e]
Successors: []
---
0x651 RETURNDATASIZE
0x652 PUSH1 0x0
0x654 DUP1
0x655 RETURNDATACOPY
0x656 RETURNDATASIZE
0x657 PUSH1 0x0
0x659 REVERT
---
0x651: V578 = RETURNDATASIZE
0x652: V579 = 0x0
0x655: RETURNDATACOPY 0x0 0x0 V578
0x656: V580 = RETURNDATASIZE
0x657: V581 = 0x0
0x659: REVERT 0x0 V580
---
Entry stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V568, 0x2, V570, V575]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V568, 0x2, V570, V575]

================================

Block 0x65a
[0x65a:0x66a]
---
Predecessors: [0x50e]
Successors: [0x66b, 0x66f]
---
0x65a JUMPDEST
0x65b POP
0x65c POP
0x65d POP
0x65e PUSH1 0x40
0x660 MLOAD
0x661 RETURNDATASIZE
0x662 PUSH1 0x20
0x664 DUP2
0x665 LT
0x666 ISZERO
0x667 PUSH2 0x66f
0x66a JUMPI
---
0x65a: JUMPDEST 
0x65e: V582 = 0x40
0x660: V583 = M[0x40]
0x661: V584 = RETURNDATASIZE
0x662: V585 = 0x20
0x665: V586 = LT V584 0x20
0x666: V587 = ISZERO V586
0x667: V588 = 0x66f
0x66a: JUMPI 0x66f V587
---
Entry stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V568, 0x2, V570, V575]
Stack pops: 3
Stack additions: [V583, V584]
Exit stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V568, V583, V584]

================================

Block 0x66b
[0x66b:0x66e]
---
Predecessors: [0x65a]
Successors: []
---
0x66b PUSH1 0x0
0x66d DUP1
0x66e REVERT
---
0x66b: V589 = 0x0
0x66e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V568, V583, V584]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V568, V583, V584]

================================

Block 0x66f
[0x66f:0x6b9]
---
Predecessors: [0x65a]
Successors: [0x6ba, 0x6be]
---
0x66f JUMPDEST
0x670 POP
0x671 MLOAD
0x672 PUSH1 0x40
0x674 DUP1
0x675 MLOAD
0x676 PUSH1 0xe0
0x678 PUSH1 0x2
0x67a EXP
0x67b PUSH4 0xffffffff
0x680 DUP7
0x681 AND
0x682 MUL
0x683 DUP2
0x684 MSTORE
0x685 PUSH1 0x1
0x687 PUSH1 0xa0
0x689 PUSH1 0x2
0x68b EXP
0x68c SUB
0x68d SWAP1
0x68e SWAP4
0x68f AND
0x690 PUSH1 0x4
0x692 DUP5
0x693 ADD
0x694 MSTORE
0x695 PUSH1 0x24
0x697 DUP4
0x698 ADD
0x699 SWAP2
0x69a SWAP1
0x69b SWAP2
0x69c MSTORE
0x69d MLOAD
0x69e PUSH1 0x44
0x6a0 DUP1
0x6a1 DUP4
0x6a2 ADD
0x6a3 SWAP3
0x6a4 PUSH1 0x20
0x6a6 SWAP3
0x6a7 SWAP2
0x6a8 SWAP1
0x6a9 DUP3
0x6aa SWAP1
0x6ab SUB
0x6ac ADD
0x6ad DUP2
0x6ae PUSH1 0x0
0x6b0 DUP8
0x6b1 DUP1
0x6b2 EXTCODESIZE
0x6b3 ISZERO
0x6b4 DUP1
0x6b5 ISZERO
0x6b6 PUSH2 0x6be
0x6b9 JUMPI
---
0x66f: JUMPDEST 
0x671: V590 = M[V583]
0x672: V591 = 0x40
0x675: V592 = M[0x40]
0x676: V593 = 0xe0
0x678: V594 = 0x2
0x67a: V595 = EXP 0x2 0xe0
0x67b: V596 = 0xffffffff
0x681: V597 = AND 0x19774d43 0xffffffff
0x682: V598 = MUL 0x19774d43 0x100000000000000000000000000000000000000000000000000000000
0x684: M[V592] = 0x19774d4300000000000000000000000000000000000000000000000000000000
0x685: V599 = 0x1
0x687: V600 = 0xa0
0x689: V601 = 0x2
0x68b: V602 = EXP 0x2 0xa0
0x68c: V603 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68f: V604 = AND V568 0xffffffffffffffffffffffffffffffffffffffff
0x690: V605 = 0x4
0x693: V606 = ADD V592 0x4
0x694: M[V606] = V604
0x695: V607 = 0x24
0x698: V608 = ADD V592 0x24
0x69c: M[V608] = V590
0x69d: V609 = M[0x40]
0x69e: V610 = 0x44
0x6a2: V611 = ADD V592 0x44
0x6a4: V612 = 0x20
0x6ab: V613 = SUB V592 V609
0x6ac: V614 = ADD V613 0x44
0x6ae: V615 = 0x0
0x6b2: V616 = EXTCODESIZE V562
0x6b3: V617 = ISZERO V616
0x6b5: V618 = ISZERO V617
0x6b6: V619 = 0x6be
0x6b9: JUMPI 0x6be V618
---
Entry stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V568, V583, V584]
Stack pops: 5
Stack additions: [S4, S3, V611, 0x20, V609, V614, V609, 0x0, S4, V617]
Exit stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V611, 0x20, V609, V614, V609, 0x0, V562, V617]

================================

Block 0x6ba
[0x6ba:0x6bd]
---
Predecessors: [0x66f]
Successors: []
---
0x6ba PUSH1 0x0
0x6bc DUP1
0x6bd REVERT
---
0x6ba: V620 = 0x0
0x6bd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V611, 0x20, V609, V614, V609, 0x0, V562, V617]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V611, 0x20, V609, V614, V609, 0x0, V562, V617]

================================

Block 0x6be
[0x6be:0x6c8]
---
Predecessors: [0x66f]
Successors: [0x6c9, 0x6d2]
---
0x6be JUMPDEST
0x6bf POP
0x6c0 GAS
0x6c1 CALL
0x6c2 ISZERO
0x6c3 DUP1
0x6c4 ISZERO
0x6c5 PUSH2 0x6d2
0x6c8 JUMPI
---
0x6be: JUMPDEST 
0x6c0: V621 = GAS
0x6c1: V622 = CALL V621 V562 0x0 V609 V614 V609 0x20
0x6c2: V623 = ISZERO V622
0x6c4: V624 = ISZERO V623
0x6c5: V625 = 0x6d2
0x6c8: JUMPI 0x6d2 V624
---
Entry stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V611, 0x20, V609, V614, V609, 0x0, V562, V617]
Stack pops: 7
Stack additions: [V623]
Exit stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V611, V623]

================================

Block 0x6c9
[0x6c9:0x6d1]
---
Predecessors: [0x6be]
Successors: []
---
0x6c9 RETURNDATASIZE
0x6ca PUSH1 0x0
0x6cc DUP1
0x6cd RETURNDATACOPY
0x6ce RETURNDATASIZE
0x6cf PUSH1 0x0
0x6d1 REVERT
---
0x6c9: V626 = RETURNDATASIZE
0x6ca: V627 = 0x0
0x6cd: RETURNDATACOPY 0x0 0x0 V626
0x6ce: V628 = RETURNDATASIZE
0x6cf: V629 = 0x0
0x6d1: REVERT 0x0 V628
---
Entry stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V611, V623]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V611, V623]

================================

Block 0x6d2
[0x6d2:0x6e3]
---
Predecessors: [0x6be]
Successors: [0x6e4, 0x6e8]
---
0x6d2 JUMPDEST
0x6d3 POP
0x6d4 POP
0x6d5 POP
0x6d6 POP
0x6d7 PUSH1 0x40
0x6d9 MLOAD
0x6da RETURNDATASIZE
0x6db PUSH1 0x20
0x6dd DUP2
0x6de LT
0x6df ISZERO
0x6e0 PUSH2 0x6e8
0x6e3 JUMPI
---
0x6d2: JUMPDEST 
0x6d7: V630 = 0x40
0x6d9: V631 = M[0x40]
0x6da: V632 = RETURNDATASIZE
0x6db: V633 = 0x20
0x6de: V634 = LT V632 0x20
0x6df: V635 = ISZERO V634
0x6e0: V636 = 0x6e8
0x6e3: JUMPI 0x6e8 V635
---
Entry stack: [V13, 0x7f, V139, V561, V562, V565, V562, 0x19774d43, V611, V623]
Stack pops: 4
Stack additions: [V631, V632]
Exit stack: [V13, 0x7f, V139, V561, V562, V565, V631, V632]

================================

Block 0x6e4
[0x6e4:0x6e7]
---
Predecessors: [0x6d2]
Successors: []
---
0x6e4 PUSH1 0x0
0x6e6 DUP1
0x6e7 REVERT
---
0x6e4: V637 = 0x0
0x6e7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, V561, V562, V565, V631, V632]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V565, V631, V632]

================================

Block 0x6e8
[0x6e8:0x708]
---
Predecessors: [0x6d2]
Successors: [0x709, 0xb55]
---
0x6e8 JUMPDEST
0x6e9 POP
0x6ea MLOAD
0x6eb PUSH1 0xe0
0x6ed DUP6
0x6ee ADD
0x6ef MLOAD
0x6f0 PUSH1 0xa0
0x6f2 PUSH1 0x2
0x6f4 EXP
0x6f5 PUSH9 0x10000000000000000
0x6ff SWAP1
0x700 SWAP2
0x701 MUL
0x702 DIV
0x703 SUB
0x704 LT
0x705 PUSH2 0xb55
0x708 JUMPI
---
0x6e8: JUMPDEST 
0x6ea: V638 = M[V631]
0x6eb: V639 = 0xe0
0x6ee: V640 = ADD V139 0xe0
0x6ef: V641 = M[V640]
0x6f0: V642 = 0xa0
0x6f2: V643 = 0x2
0x6f4: V644 = EXP 0x2 0xa0
0x6f5: V645 = 0x10000000000000000
0x701: V646 = MUL V641 0x10000000000000000
0x702: V647 = DIV V646 0x10000000000000000000000000000000000000000
0x703: V648 = SUB V647 V638
0x704: V649 = LT V648 V565
0x705: V650 = 0xb55
0x708: JUMPI 0xb55 V649
---
Entry stack: [V13, 0x7f, V139, V561, V562, V565, V631, V632]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V13, 0x7f, V139, V561, V562]

================================

Block 0x709
[0x709:0x801]
---
Predecessors: [0x6e8]
Successors: [0x802, 0x80b]
---
0x709 PUSH1 0x40
0x70b DUP4
0x70c DUP2
0x70d ADD
0x70e MLOAD
0x70f PUSH1 0x20
0x711 DUP1
0x712 DUP7
0x713 ADD
0x714 DUP1
0x715 MLOAD
0x716 PUSH2 0x100
0x719 DUP9
0x71a ADD
0x71b DUP1
0x71c MLOAD
0x71d PUSH31 0x1000000000000000000000000000000000000000000000000000000000000
0x73d MUL
0x73e PUSH1 0x1
0x740 PUSH1 0xf0
0x742 PUSH1 0x2
0x744 EXP
0x745 SUB
0x746 NOT
0x747 AND
0x748 PUSH1 0x0
0x74a SWAP1
0x74b DUP2
0x74c MSTORE
0x74d PUSH1 0x2
0x74f DUP1
0x750 DUP7
0x751 MSTORE
0x752 DUP8
0x753 DUP3
0x754 SHA3
0x755 SLOAD
0x756 DUP12
0x757 MLOAD
0x758 SWAP6
0x759 MLOAD
0x75a SWAP4
0x75b MLOAD
0x75c PUSH1 0xe0
0x75e DUP14
0x75f ADD
0x760 MLOAD
0x761 DUP11
0x762 MLOAD
0x763 PUSH13 0x1000000000000000000000000
0x771 PUSH1 0x1
0x773 PUSH1 0xa0
0x775 PUSH1 0x2
0x777 EXP
0x778 SUB
0x779 SWAP5
0x77a DUP6
0x77b AND
0x77c DUP2
0x77d MUL
0x77e DUP3
0x77f MSTORE
0x780 PUSH1 0x14
0x782 DUP3
0x783 ADD
0x784 DUP8
0x785 SWAP1
0x786 MSTORE
0x787 PUSH1 0xa0
0x789 PUSH1 0x2
0x78b EXP
0x78c DUP1
0x78d DUP12
0x78e DIV
0x78f PUSH1 0x15
0x791 DUP5
0x792 ADD
0x793 MSTORE
0x794 SWAP10
0x795 DUP2
0x796 MUL
0x797 DUP2
0x798 SWAP1
0x799 DIV
0x79a DUP6
0x79b AND
0x79c DUP2
0x79d MUL
0x79e PUSH1 0x35
0x7a0 DUP4
0x7a1 ADD
0x7a2 MSTORE
0x7a3 SWAP7
0x7a4 DUP10
0x7a5 SWAP1
0x7a6 DIV
0x7a7 PUSH1 0x49
0x7a9 DUP3
0x7aa ADD
0x7ab MSTORE
0x7ac PUSH1 0xe0
0x7ae PUSH1 0x2
0x7b0 EXP
0x7b1 PUSH3 0x10000
0x7b5 SWAP1
0x7b6 SWAP4
0x7b7 MUL
0x7b8 SWAP3
0x7b9 SWAP1
0x7ba SWAP3
0x7bb DIV
0x7bc PUSH1 0x69
0x7be DUP4
0x7bf ADD
0x7c0 MSTORE
0x7c1 PUSH1 0xc0
0x7c3 PUSH1 0x2
0x7c5 EXP
0x7c6 SWAP1
0x7c7 DIV
0x7c8 PUSH1 0x89
0x7ca DUP3
0x7cb ADD
0x7cc MSTORE
0x7cd SWAP9
0x7ce MLOAD
0x7cf SWAP6
0x7d0 SWAP1
0x7d1 SWAP8
0x7d2 DIV
0x7d3 SWAP8
0x7d4 SWAP7
0x7d5 DUP10
0x7d6 AND
0x7d7 SWAP7
0x7d8 PUSH4 0x19774d43
0x7dd SWAP7
0x7de SWAP5
0x7df DUP5
0x7e0 MUL
0x7e1 SWAP4
0x7e2 SWAP1
0x7e3 SWAP4
0x7e4 DIV
0x7e5 SWAP5
0x7e6 SWAP1
0x7e7 SWAP4
0x7e8 PUSH1 0xa9
0x7ea DUP1
0x7eb DUP6
0x7ec ADD
0x7ed SWAP5
0x7ee SWAP2
0x7ef SWAP4
0x7f0 SWAP2
0x7f1 DUP4
0x7f2 SWAP1
0x7f3 SUB
0x7f4 ADD
0x7f5 SWAP1
0x7f6 DUP3
0x7f7 SWAP1
0x7f8 DUP7
0x7f9 GAS
0x7fa CALL
0x7fb ISZERO
0x7fc DUP1
0x7fd ISZERO
0x7fe PUSH2 0x80b
0x801 JUMPI
---
0x709: V651 = 0x40
0x70d: V652 = ADD 0x40 V139
0x70e: V653 = M[V652]
0x70f: V654 = 0x20
0x713: V655 = ADD V139 0x20
0x715: V656 = M[V655]
0x716: V657 = 0x100
0x71a: V658 = ADD V139 0x100
0x71c: V659 = M[V658]
0x71d: V660 = 0x1000000000000000000000000000000000000000000000000000000000000
0x73d: V661 = MUL 0x1000000000000000000000000000000000000000000000000000000000000 V659
0x73e: V662 = 0x1
0x740: V663 = 0xf0
0x742: V664 = 0x2
0x744: V665 = EXP 0x2 0xf0
0x745: V666 = SUB 0x1000000000000000000000000000000000000000000000000000000000000 0x1
0x746: V667 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x747: V668 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V661
0x748: V669 = 0x0
0x74c: M[0x0] = V668
0x74d: V670 = 0x2
0x751: M[0x20] = 0x2
0x754: V671 = SHA3 0x0 0x40
0x755: V672 = S[V671]
0x757: V673 = M[V139]
0x759: V674 = M[V655]
0x75b: V675 = M[V658]
0x75c: V676 = 0xe0
0x75f: V677 = ADD V139 0xe0
0x760: V678 = M[V677]
0x762: V679 = M[0x40]
0x763: V680 = 0x1000000000000000000000000
0x771: V681 = 0x1
0x773: V682 = 0xa0
0x775: V683 = 0x2
0x777: V684 = EXP 0x2 0xa0
0x778: V685 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77b: V686 = AND 0xffffffffffffffffffffffffffffffffffffffff V672
0x77d: V687 = MUL 0x1000000000000000000000000 V686
0x77f: M[V679] = V687
0x780: V688 = 0x14
0x783: V689 = ADD V679 0x14
0x786: M[V689] = 0x0
0x787: V690 = 0xa0
0x789: V691 = 0x2
0x78b: V692 = EXP 0x2 0xa0
0x78e: V693 = DIV V673 0x10000000000000000000000000000000000000000
0x78f: V694 = 0x15
0x792: V695 = ADD V679 0x15
0x793: M[V695] = V693
0x796: V696 = MUL 0x1000000000000000000000000 V673
0x799: V697 = DIV V696 0x1000000000000000000000000
0x79b: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0x79d: V699 = MUL 0x1000000000000000000000000 V698
0x79e: V700 = 0x35
0x7a1: V701 = ADD V679 0x35
0x7a2: M[V701] = V699
0x7a6: V702 = DIV V674 0x10000000000000000000000000000000000000000
0x7a7: V703 = 0x49
0x7aa: V704 = ADD V679 0x49
0x7ab: M[V704] = V702
0x7ac: V705 = 0xe0
0x7ae: V706 = 0x2
0x7b0: V707 = EXP 0x2 0xe0
0x7b1: V708 = 0x10000
0x7b7: V709 = MUL V675 0x10000
0x7bb: V710 = DIV V709 0x100000000000000000000000000000000000000000000000000000000
0x7bc: V711 = 0x69
0x7bf: V712 = ADD V679 0x69
0x7c0: M[V712] = V710
0x7c1: V713 = 0xc0
0x7c3: V714 = 0x2
0x7c5: V715 = EXP 0x2 0xc0
0x7c7: V716 = DIV V678 0x1000000000000000000000000000000000000000000000000
0x7c8: V717 = 0x89
0x7cb: V718 = ADD V679 0x89
0x7cc: M[V718] = V716
0x7ce: V719 = M[0x40]
0x7d2: V720 = DIV V653 0x10000000000000000000000000000000000000000
0x7d6: V721 = AND V562 0xffffffffffffffffffffffffffffffffffffffff
0x7d8: V722 = 0x19774d43
0x7e0: V723 = MUL 0x1000000000000000000000000 V656
0x7e4: V724 = DIV V723 0x1000000000000000000000000
0x7e8: V725 = 0xa9
0x7ec: V726 = ADD V679 0xa9
0x7f3: V727 = SUB V679 V719
0x7f4: V728 = ADD V727 0xa9
0x7f9: V729 = GAS
0x7fa: V730 = CALL V729 0x2 0x0 V719 V728 V719 0x20
0x7fb: V731 = ISZERO V730
0x7fd: V732 = ISZERO V731
0x7fe: V733 = 0x80b
0x801: JUMPI 0x80b V732
---
Entry stack: [V13, 0x7f, V139, V561, V562]
Stack pops: 3
Stack additions: [S2, S1, S0, V720, V721, 0x19774d43, V724, 0x2, V726, V731]
Exit stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V724, 0x2, V726, V731]

================================

Block 0x802
[0x802:0x80a]
---
Predecessors: [0x709]
Successors: []
---
0x802 RETURNDATASIZE
0x803 PUSH1 0x0
0x805 DUP1
0x806 RETURNDATACOPY
0x807 RETURNDATASIZE
0x808 PUSH1 0x0
0x80a REVERT
---
0x802: V734 = RETURNDATASIZE
0x803: V735 = 0x0
0x806: RETURNDATACOPY 0x0 0x0 V734
0x807: V736 = RETURNDATASIZE
0x808: V737 = 0x0
0x80a: REVERT 0x0 V736
---
Entry stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V724, 0x2, V726, V731]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V724, 0x2, V726, V731]

================================

Block 0x80b
[0x80b:0x81b]
---
Predecessors: [0x709]
Successors: [0x81c, 0x820]
---
0x80b JUMPDEST
0x80c POP
0x80d POP
0x80e POP
0x80f PUSH1 0x40
0x811 MLOAD
0x812 RETURNDATASIZE
0x813 PUSH1 0x20
0x815 DUP2
0x816 LT
0x817 ISZERO
0x818 PUSH2 0x820
0x81b JUMPI
---
0x80b: JUMPDEST 
0x80f: V738 = 0x40
0x811: V739 = M[0x40]
0x812: V740 = RETURNDATASIZE
0x813: V741 = 0x20
0x816: V742 = LT V740 0x20
0x817: V743 = ISZERO V742
0x818: V744 = 0x820
0x81b: JUMPI 0x820 V743
---
Entry stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V724, 0x2, V726, V731]
Stack pops: 3
Stack additions: [V739, V740]
Exit stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V724, V739, V740]

================================

Block 0x81c
[0x81c:0x81f]
---
Predecessors: [0x80b]
Successors: []
---
0x81c PUSH1 0x0
0x81e DUP1
0x81f REVERT
---
0x81c: V745 = 0x0
0x81f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V724, V739, V740]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V724, V739, V740]

================================

Block 0x820
[0x820:0x86a]
---
Predecessors: [0x80b]
Successors: [0x86b, 0x86f]
---
0x820 JUMPDEST
0x821 POP
0x822 MLOAD
0x823 PUSH1 0x40
0x825 DUP1
0x826 MLOAD
0x827 PUSH1 0xe0
0x829 PUSH1 0x2
0x82b EXP
0x82c PUSH4 0xffffffff
0x831 DUP7
0x832 AND
0x833 MUL
0x834 DUP2
0x835 MSTORE
0x836 PUSH1 0x1
0x838 PUSH1 0xa0
0x83a PUSH1 0x2
0x83c EXP
0x83d SUB
0x83e SWAP1
0x83f SWAP4
0x840 AND
0x841 PUSH1 0x4
0x843 DUP5
0x844 ADD
0x845 MSTORE
0x846 PUSH1 0x24
0x848 DUP4
0x849 ADD
0x84a SWAP2
0x84b SWAP1
0x84c SWAP2
0x84d MSTORE
0x84e MLOAD
0x84f PUSH1 0x44
0x851 DUP1
0x852 DUP4
0x853 ADD
0x854 SWAP3
0x855 PUSH1 0x20
0x857 SWAP3
0x858 SWAP2
0x859 SWAP1
0x85a DUP3
0x85b SWAP1
0x85c SUB
0x85d ADD
0x85e DUP2
0x85f PUSH1 0x0
0x861 DUP8
0x862 DUP1
0x863 EXTCODESIZE
0x864 ISZERO
0x865 DUP1
0x866 ISZERO
0x867 PUSH2 0x86f
0x86a JUMPI
---
0x820: JUMPDEST 
0x822: V746 = M[V739]
0x823: V747 = 0x40
0x826: V748 = M[0x40]
0x827: V749 = 0xe0
0x829: V750 = 0x2
0x82b: V751 = EXP 0x2 0xe0
0x82c: V752 = 0xffffffff
0x832: V753 = AND 0x19774d43 0xffffffff
0x833: V754 = MUL 0x19774d43 0x100000000000000000000000000000000000000000000000000000000
0x835: M[V748] = 0x19774d4300000000000000000000000000000000000000000000000000000000
0x836: V755 = 0x1
0x838: V756 = 0xa0
0x83a: V757 = 0x2
0x83c: V758 = EXP 0x2 0xa0
0x83d: V759 = SUB 0x10000000000000000000000000000000000000000 0x1
0x840: V760 = AND V724 0xffffffffffffffffffffffffffffffffffffffff
0x841: V761 = 0x4
0x844: V762 = ADD V748 0x4
0x845: M[V762] = V760
0x846: V763 = 0x24
0x849: V764 = ADD V748 0x24
0x84d: M[V764] = V746
0x84e: V765 = M[0x40]
0x84f: V766 = 0x44
0x853: V767 = ADD V748 0x44
0x855: V768 = 0x20
0x85c: V769 = SUB V748 V765
0x85d: V770 = ADD V769 0x44
0x85f: V771 = 0x0
0x863: V772 = EXTCODESIZE V721
0x864: V773 = ISZERO V772
0x866: V774 = ISZERO V773
0x867: V775 = 0x86f
0x86a: JUMPI 0x86f V774
---
Entry stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V724, V739, V740]
Stack pops: 5
Stack additions: [S4, S3, V767, 0x20, V765, V770, V765, 0x0, S4, V773]
Exit stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V767, 0x20, V765, V770, V765, 0x0, V721, V773]

================================

Block 0x86b
[0x86b:0x86e]
---
Predecessors: [0x820]
Successors: []
---
0x86b PUSH1 0x0
0x86d DUP1
0x86e REVERT
---
0x86b: V776 = 0x0
0x86e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V767, 0x20, V765, V770, V765, 0x0, V721, V773]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V767, 0x20, V765, V770, V765, 0x0, V721, V773]

================================

Block 0x86f
[0x86f:0x879]
---
Predecessors: [0x820]
Successors: [0x87a, 0x883]
---
0x86f JUMPDEST
0x870 POP
0x871 GAS
0x872 CALL
0x873 ISZERO
0x874 DUP1
0x875 ISZERO
0x876 PUSH2 0x883
0x879 JUMPI
---
0x86f: JUMPDEST 
0x871: V777 = GAS
0x872: V778 = CALL V777 V721 0x0 V765 V770 V765 0x20
0x873: V779 = ISZERO V778
0x875: V780 = ISZERO V779
0x876: V781 = 0x883
0x879: JUMPI 0x883 V780
---
Entry stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V767, 0x20, V765, V770, V765, 0x0, V721, V773]
Stack pops: 7
Stack additions: [V779]
Exit stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V767, V779]

================================

Block 0x87a
[0x87a:0x882]
---
Predecessors: [0x86f]
Successors: []
---
0x87a RETURNDATASIZE
0x87b PUSH1 0x0
0x87d DUP1
0x87e RETURNDATACOPY
0x87f RETURNDATASIZE
0x880 PUSH1 0x0
0x882 REVERT
---
0x87a: V782 = RETURNDATASIZE
0x87b: V783 = 0x0
0x87e: RETURNDATACOPY 0x0 0x0 V782
0x87f: V784 = RETURNDATASIZE
0x880: V785 = 0x0
0x882: REVERT 0x0 V784
---
Entry stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V767, V779]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V767, V779]

================================

Block 0x883
[0x883:0x894]
---
Predecessors: [0x86f]
Successors: [0x895, 0x899]
---
0x883 JUMPDEST
0x884 POP
0x885 POP
0x886 POP
0x887 POP
0x888 PUSH1 0x40
0x88a MLOAD
0x88b RETURNDATASIZE
0x88c PUSH1 0x20
0x88e DUP2
0x88f LT
0x890 ISZERO
0x891 PUSH2 0x899
0x894 JUMPI
---
0x883: JUMPDEST 
0x888: V786 = 0x40
0x88a: V787 = M[0x40]
0x88b: V788 = RETURNDATASIZE
0x88c: V789 = 0x20
0x88f: V790 = LT V788 0x20
0x890: V791 = ISZERO V790
0x891: V792 = 0x899
0x894: JUMPI 0x899 V791
---
Entry stack: [V13, 0x7f, V139, V561, V562, V720, V721, 0x19774d43, V767, V779]
Stack pops: 4
Stack additions: [V787, V788]
Exit stack: [V13, 0x7f, V139, V561, V562, V720, V787, V788]

================================

Block 0x895
[0x895:0x898]
---
Predecessors: [0x883]
Successors: []
---
0x895 PUSH1 0x0
0x897 DUP1
0x898 REVERT
---
0x895: V793 = 0x0
0x898: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, V561, V562, V720, V787, V788]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V720, V787, V788]

================================

Block 0x899
[0x899:0x8aa]
---
Predecessors: [0x883]
Successors: [0x8ab, 0xb55]
---
0x899 JUMPDEST
0x89a POP
0x89b MLOAD
0x89c DUP5
0x89d MLOAD
0x89e PUSH1 0xa0
0x8a0 PUSH1 0x2
0x8a2 EXP
0x8a3 SWAP1
0x8a4 DIV
0x8a5 SUB
0x8a6 LT
0x8a7 PUSH2 0xb55
0x8aa JUMPI
---
0x899: JUMPDEST 
0x89b: V794 = M[V787]
0x89d: V795 = M[V139]
0x89e: V796 = 0xa0
0x8a0: V797 = 0x2
0x8a2: V798 = EXP 0x2 0xa0
0x8a4: V799 = DIV V795 0x10000000000000000000000000000000000000000
0x8a5: V800 = SUB V799 V794
0x8a6: V801 = LT V800 V720
0x8a7: V802 = 0xb55
0x8aa: JUMPI 0xb55 V801
---
Entry stack: [V13, 0x7f, V139, V561, V562, V720, V787, V788]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V13, 0x7f, V139, V561, V562]

================================

Block 0x8ab
[0x8ab:0x9c8]
---
Predecessors: [0x899]
Successors: [0x9c9, 0x9cd]
---
0x8ab DUP3
0x8ac MLOAD
0x8ad PUSH1 0x20
0x8af DUP5
0x8b0 ADD
0x8b1 MLOAD
0x8b2 PUSH2 0x100
0x8b5 DUP6
0x8b6 ADD
0x8b7 MLOAD
0x8b8 PUSH1 0xe0
0x8ba DUP7
0x8bb ADD
0x8bc MLOAD
0x8bd PUSH1 0x60
0x8bf DUP8
0x8c0 ADD
0x8c1 MLOAD
0x8c2 PUSH1 0x80
0x8c4 DUP9
0x8c5 ADD
0x8c6 MLOAD
0x8c7 PUSH1 0x40
0x8c9 DUP1
0x8ca DUP11
0x8cb ADD
0x8cc MLOAD
0x8cd DUP2
0x8ce MLOAD
0x8cf PUSH32 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x8f0 DUP2
0x8f1 MSTORE
0x8f2 PUSH1 0x0
0x8f4 PUSH1 0x4
0x8f6 DUP3
0x8f7 ADD
0x8f8 DUP2
0x8f9 SWAP1
0x8fa MSTORE
0x8fb PUSH1 0xa0
0x8fd PUSH1 0x2
0x8ff EXP
0x900 DUP1
0x901 DUP12
0x902 DIV
0x903 PUSH1 0x24
0x905 DUP5
0x906 ADD
0x907 MSTORE
0x908 PUSH1 0x1
0x90a PUSH1 0xa0
0x90c PUSH1 0x2
0x90e EXP
0x90f SUB
0x910 PUSH13 0x1000000000000000000000000
0x91e SWAP12
0x91f DUP13
0x920 MUL
0x921 DUP13
0x922 SWAP1
0x923 DIV
0x924 DUP2
0x925 AND
0x926 PUSH1 0x44
0x928 DUP6
0x929 ADD
0x92a MSTORE
0x92b DUP2
0x92c DUP12
0x92d DIV
0x92e PUSH1 0x64
0x930 DUP6
0x931 ADD
0x932 MSTORE
0x933 PUSH1 0xe0
0x935 PUSH1 0x2
0x937 EXP
0x938 PUSH3 0x10000
0x93c DUP12
0x93d MUL
0x93e DIV
0x93f PUSH1 0x84
0x941 DUP6
0x942 ADD
0x943 MSTORE
0x944 PUSH1 0xc0
0x946 PUSH1 0x2
0x948 EXP
0x949 SWAP1
0x94a SWAP9
0x94b DIV
0x94c PUSH1 0xa4
0x94e DUP5
0x94f ADD
0x950 MSTORE
0x951 SWAP9
0x952 DUP11
0x953 MUL
0x954 SWAP10
0x955 SWAP1
0x956 SWAP10
0x957 DIV
0x958 DUP7
0x959 AND
0x95a PUSH1 0xc4
0x95c DUP3
0x95d ADD
0x95e MSTORE
0x95f PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x980 SWAP1
0x981 SWAP7
0x982 DIV
0x983 PUSH1 0xff
0x985 AND
0x986 PUSH1 0xe4
0x988 DUP8
0x989 ADD
0x98a MSTORE
0x98b PUSH2 0x104
0x98e DUP7
0x98f ADD
0x990 SWAP4
0x991 SWAP1
0x992 SWAP4
0x993 MSTORE
0x994 PUSH2 0x124
0x997 DUP6
0x998 ADD
0x999 SWAP2
0x99a SWAP1
0x99b SWAP2
0x99c MSTORE
0x99d SWAP4
0x99e SWAP1
0x99f DIV
0x9a0 PUSH2 0x144
0x9a3 DUP4
0x9a4 ADD
0x9a5 MSTORE
0x9a6 SWAP2
0x9a7 MLOAD
0x9a8 SWAP2
0x9a9 DUP5
0x9aa AND
0x9ab SWAP3
0x9ac PUSH4 0xa19b14a
0x9b1 SWAP3
0x9b2 PUSH2 0x164
0x9b5 DUP1
0x9b6 DUP5
0x9b7 ADD
0x9b8 SWAP4
0x9b9 DUP3
0x9ba SWAP1
0x9bb SUB
0x9bc ADD
0x9bd DUP2
0x9be DUP4
0x9bf DUP8
0x9c0 DUP1
0x9c1 EXTCODESIZE
0x9c2 ISZERO
0x9c3 DUP1
0x9c4 ISZERO
0x9c5 PUSH2 0x9cd
0x9c8 JUMPI
---
0x8ac: V803 = M[V139]
0x8ad: V804 = 0x20
0x8b0: V805 = ADD V139 0x20
0x8b1: V806 = M[V805]
0x8b2: V807 = 0x100
0x8b6: V808 = ADD V139 0x100
0x8b7: V809 = M[V808]
0x8b8: V810 = 0xe0
0x8bb: V811 = ADD V139 0xe0
0x8bc: V812 = M[V811]
0x8bd: V813 = 0x60
0x8c0: V814 = ADD V139 0x60
0x8c1: V815 = M[V814]
0x8c2: V816 = 0x80
0x8c5: V817 = ADD V139 0x80
0x8c6: V818 = M[V817]
0x8c7: V819 = 0x40
0x8cb: V820 = ADD V139 0x40
0x8cc: V821 = M[V820]
0x8ce: V822 = M[0x40]
0x8cf: V823 = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x8f1: M[V822] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x8f2: V824 = 0x0
0x8f4: V825 = 0x4
0x8f7: V826 = ADD V822 0x4
0x8fa: M[V826] = 0x0
0x8fb: V827 = 0xa0
0x8fd: V828 = 0x2
0x8ff: V829 = EXP 0x2 0xa0
0x902: V830 = DIV V803 0x10000000000000000000000000000000000000000
0x903: V831 = 0x24
0x906: V832 = ADD V822 0x24
0x907: M[V832] = V830
0x908: V833 = 0x1
0x90a: V834 = 0xa0
0x90c: V835 = 0x2
0x90e: V836 = EXP 0x2 0xa0
0x90f: V837 = SUB 0x10000000000000000000000000000000000000000 0x1
0x910: V838 = 0x1000000000000000000000000
0x920: V839 = MUL 0x1000000000000000000000000 V803
0x923: V840 = DIV V839 0x1000000000000000000000000
0x925: V841 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0x926: V842 = 0x44
0x929: V843 = ADD V822 0x44
0x92a: M[V843] = V841
0x92d: V844 = DIV V806 0x10000000000000000000000000000000000000000
0x92e: V845 = 0x64
0x931: V846 = ADD V822 0x64
0x932: M[V846] = V844
0x933: V847 = 0xe0
0x935: V848 = 0x2
0x937: V849 = EXP 0x2 0xe0
0x938: V850 = 0x10000
0x93d: V851 = MUL V809 0x10000
0x93e: V852 = DIV V851 0x100000000000000000000000000000000000000000000000000000000
0x93f: V853 = 0x84
0x942: V854 = ADD V822 0x84
0x943: M[V854] = V852
0x944: V855 = 0xc0
0x946: V856 = 0x2
0x948: V857 = EXP 0x2 0xc0
0x94b: V858 = DIV V812 0x1000000000000000000000000000000000000000000000000
0x94c: V859 = 0xa4
0x94f: V860 = ADD V822 0xa4
0x950: M[V860] = V858
0x953: V861 = MUL 0x1000000000000000000000000 V806
0x957: V862 = DIV V861 0x1000000000000000000000000
0x959: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff V862
0x95a: V864 = 0xc4
0x95d: V865 = ADD V822 0xc4
0x95e: M[V865] = V863
0x95f: V866 = 0x100000000000000000000000000000000000000000000000000000000000000
0x982: V867 = DIV V809 0x100000000000000000000000000000000000000000000000000000000000000
0x983: V868 = 0xff
0x985: V869 = AND 0xff V867
0x986: V870 = 0xe4
0x989: V871 = ADD V822 0xe4
0x98a: M[V871] = V869
0x98b: V872 = 0x104
0x98f: V873 = ADD V822 0x104
0x993: M[V873] = V815
0x994: V874 = 0x124
0x998: V875 = ADD V822 0x124
0x99c: M[V875] = V818
0x99f: V876 = DIV V821 0x10000000000000000000000000000000000000000
0x9a0: V877 = 0x144
0x9a4: V878 = ADD V822 0x144
0x9a5: M[V878] = V876
0x9a7: V879 = M[0x40]
0x9aa: V880 = AND V562 0xffffffffffffffffffffffffffffffffffffffff
0x9ac: V881 = 0xa19b14a
0x9b2: V882 = 0x164
0x9b7: V883 = ADD V822 0x164
0x9bb: V884 = SUB V822 V879
0x9bc: V885 = ADD V884 0x164
0x9c1: V886 = EXTCODESIZE V880
0x9c2: V887 = ISZERO V886
0x9c4: V888 = ISZERO V887
0x9c5: V889 = 0x9cd
0x9c8: JUMPI 0x9cd V888
---
Entry stack: [V13, 0x7f, V139, V561, V562]
Stack pops: 3
Stack additions: [S2, S1, S0, V880, 0xa19b14a, V883, 0x0, V879, V885, V879, 0x0, V880, V887]
Exit stack: [V13, 0x7f, V139, V561, V562, V880, 0xa19b14a, V883, 0x0, V879, V885, V879, 0x0, V880, V887]

================================

Block 0x9c9
[0x9c9:0x9cc]
---
Predecessors: [0x8ab]
Successors: []
---
0x9c9 PUSH1 0x0
0x9cb DUP1
0x9cc REVERT
---
0x9c9: V890 = 0x0
0x9cc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, V561, V562, V880, 0xa19b14a, V883, 0x0, V879, V885, V879, 0x0, V880, V887]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V880, 0xa19b14a, V883, 0x0, V879, V885, V879, 0x0, V880, V887]

================================

Block 0x9cd
[0x9cd:0x9d7]
---
Predecessors: [0x8ab]
Successors: [0x9d8, 0x9e1]
---
0x9cd JUMPDEST
0x9ce POP
0x9cf GAS
0x9d0 CALL
0x9d1 ISZERO
0x9d2 DUP1
0x9d3 ISZERO
0x9d4 PUSH2 0x9e1
0x9d7 JUMPI
---
0x9cd: JUMPDEST 
0x9cf: V891 = GAS
0x9d0: V892 = CALL V891 V880 0x0 V879 V885 V879 0x0
0x9d1: V893 = ISZERO V892
0x9d3: V894 = ISZERO V893
0x9d4: V895 = 0x9e1
0x9d7: JUMPI 0x9e1 V894
---
Entry stack: [V13, 0x7f, V139, V561, V562, V880, 0xa19b14a, V883, 0x0, V879, V885, V879, 0x0, V880, V887]
Stack pops: 7
Stack additions: [V893]
Exit stack: [V13, 0x7f, V139, V561, V562, V880, 0xa19b14a, V883, V893]

================================

Block 0x9d8
[0x9d8:0x9e0]
---
Predecessors: [0x9cd]
Successors: []
---
0x9d8 RETURNDATASIZE
0x9d9 PUSH1 0x0
0x9db DUP1
0x9dc RETURNDATACOPY
0x9dd RETURNDATASIZE
0x9de PUSH1 0x0
0x9e0 REVERT
---
0x9d8: V896 = RETURNDATASIZE
0x9d9: V897 = 0x0
0x9dc: RETURNDATACOPY 0x0 0x0 V896
0x9dd: V898 = RETURNDATASIZE
0x9de: V899 = 0x0
0x9e0: REVERT 0x0 V898
---
Entry stack: [V13, 0x7f, V139, V561, V562, V880, 0xa19b14a, V883, V893]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V880, 0xa19b14a, V883, V893]

================================

Block 0x9e1
[0x9e1:0xb37]
---
Predecessors: [0x9cd]
Successors: [0xb38, 0xb3c]
---
0x9e1 JUMPDEST
0x9e2 POP
0x9e3 POP
0x9e4 DUP5
0x9e5 MLOAD
0x9e6 PUSH1 0xe0
0x9e8 DUP7
0x9e9 ADD
0x9ea MLOAD
0x9eb PUSH2 0x100
0x9ee DUP1
0x9ef DUP9
0x9f0 ADD
0x9f1 MLOAD
0x9f2 PUSH1 0x40
0x9f4 DUP1
0x9f5 DUP11
0x9f6 ADD
0x9f7 MLOAD
0x9f8 PUSH1 0xa0
0x9fa DUP12
0x9fb ADD
0x9fc MLOAD
0x9fd PUSH1 0xc0
0x9ff DUP13
0xa00 ADD
0xa01 MLOAD
0xa02 DUP4
0xa03 MLOAD
0xa04 PUSH32 0xa19b14a00000000000000000000000000000000000000000000000000000000
0xa25 DUP2
0xa26 MSTORE
0xa27 PUSH1 0x1
0xa29 PUSH1 0xa0
0xa2b PUSH1 0x2
0xa2d EXP
0xa2e SUB
0xa2f PUSH13 0x1000000000000000000000000
0xa3d SWAP10
0xa3e DUP11
0xa3f MUL
0xa40 DUP11
0xa41 SWAP1
0xa42 DIV
0xa43 DUP2
0xa44 AND
0xa45 PUSH1 0x4
0xa47 DUP4
0xa48 ADD
0xa49 MSTORE
0xa4a PUSH1 0xa0
0xa4c PUSH1 0x2
0xa4e EXP
0xa4f PUSH9 0x10000000000000000
0xa59 DUP11
0xa5a MUL
0xa5b DUP2
0xa5c SWAP1
0xa5d DIV
0xa5e PUSH1 0x24
0xa60 DUP5
0xa61 ADD
0xa62 MSTORE
0xa63 PUSH1 0x0
0xa65 PUSH1 0x44
0xa67 DUP5
0xa68 ADD
0xa69 DUP2
0xa6a SWAP1
0xa6b MSTORE
0xa6c SWAP10
0xa6d DUP2
0xa6e MUL
0xa6f DUP2
0xa70 SWAP1
0xa71 DIV
0xa72 PUSH1 0x64
0xa74 DUP5
0xa75 ADD
0xa76 MSTORE
0xa77 PUSH1 0xe0
0xa79 PUSH1 0x2
0xa7b EXP
0xa7c PUSH7 0x1000000000000
0xa84 DUP10
0xa85 MUL
0xa86 DIV
0xa87 PUSH1 0x84
0xa89 DUP5
0xa8a ADD
0xa8b MSTORE
0xa8c PUSH1 0xc0
0xa8e PUSH1 0x2
0xa90 EXP
0xa91 PUSH11 0x100000000000000000000
0xa9d DUP10
0xa9e MUL
0xa9f DIV
0xaa0 PUSH1 0xa4
0xaa2 DUP5
0xaa3 ADD
0xaa4 MSTORE
0xaa5 SWAP5
0xaa6 DUP11
0xaa7 MUL
0xaa8 SWAP10
0xaa9 SWAP1
0xaaa SWAP10
0xaab DIV
0xaac DUP10
0xaad AND
0xaae PUSH1 0xc4
0xab0 DUP3
0xab1 ADD
0xab2 MSTORE
0xab3 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xad4 SWAP7
0xad5 DUP7
0xad6 MUL
0xad7 SWAP7
0xad8 SWAP1
0xad9 SWAP7
0xada DIV
0xadb PUSH1 0xff
0xadd AND
0xade PUSH1 0xe4
0xae0 DUP8
0xae1 ADD
0xae2 MSTORE
0xae3 PUSH2 0x104
0xae6 DUP7
0xae7 ADD
0xae8 SWAP2
0xae9 SWAP1
0xaea SWAP2
0xaeb MSTORE
0xaec PUSH2 0x124
0xaef DUP6
0xaf0 ADD
0xaf1 MSTORE
0xaf2 PUSH19 0x1000000000000000000000000000000000000
0xb06 SWAP1
0xb07 SWAP3
0xb08 MUL
0xb09 SWAP2
0xb0a SWAP1
0xb0b SWAP2
0xb0c DIV
0xb0d PUSH2 0x144
0xb10 DUP4
0xb11 ADD
0xb12 MSTORE
0xb13 MLOAD
0xb14 SWAP3
0xb15 DUP7
0xb16 AND
0xb17 SWAP5
0xb18 POP
0xb19 PUSH4 0xa19b14a
0xb1e SWAP4
0xb1f POP
0xb20 PUSH2 0x164
0xb23 DUP1
0xb24 DUP3
0xb25 ADD
0xb26 SWAP4
0xb27 SWAP2
0xb28 DUP3
0xb29 SWAP1
0xb2a SUB
0xb2b ADD
0xb2c DUP2
0xb2d DUP4
0xb2e DUP8
0xb2f DUP1
0xb30 EXTCODESIZE
0xb31 ISZERO
0xb32 DUP1
0xb33 ISZERO
0xb34 PUSH2 0xb3c
0xb37 JUMPI
---
0x9e1: JUMPDEST 
0x9e5: V900 = M[V139]
0x9e6: V901 = 0xe0
0x9e9: V902 = ADD V139 0xe0
0x9ea: V903 = M[V902]
0x9eb: V904 = 0x100
0x9f0: V905 = ADD V139 0x100
0x9f1: V906 = M[V905]
0x9f2: V907 = 0x40
0x9f6: V908 = ADD V139 0x40
0x9f7: V909 = M[V908]
0x9f8: V910 = 0xa0
0x9fb: V911 = ADD V139 0xa0
0x9fc: V912 = M[V911]
0x9fd: V913 = 0xc0
0xa00: V914 = ADD V139 0xc0
0xa01: V915 = M[V914]
0xa03: V916 = M[0x40]
0xa04: V917 = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0xa26: M[V916] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0xa27: V918 = 0x1
0xa29: V919 = 0xa0
0xa2b: V920 = 0x2
0xa2d: V921 = EXP 0x2 0xa0
0xa2e: V922 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2f: V923 = 0x1000000000000000000000000
0xa3f: V924 = MUL 0x1000000000000000000000000 V900
0xa42: V925 = DIV V924 0x1000000000000000000000000
0xa44: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff V925
0xa45: V927 = 0x4
0xa48: V928 = ADD V916 0x4
0xa49: M[V928] = V926
0xa4a: V929 = 0xa0
0xa4c: V930 = 0x2
0xa4e: V931 = EXP 0x2 0xa0
0xa4f: V932 = 0x10000000000000000
0xa5a: V933 = MUL V903 0x10000000000000000
0xa5d: V934 = DIV V933 0x10000000000000000000000000000000000000000
0xa5e: V935 = 0x24
0xa61: V936 = ADD V916 0x24
0xa62: M[V936] = V934
0xa63: V937 = 0x0
0xa65: V938 = 0x44
0xa68: V939 = ADD V916 0x44
0xa6b: M[V939] = 0x0
0xa6e: V940 = MUL 0x10000000000000000000000000000000000000000 V903
0xa71: V941 = DIV V940 0x10000000000000000000000000000000000000000
0xa72: V942 = 0x64
0xa75: V943 = ADD V916 0x64
0xa76: M[V943] = V941
0xa77: V944 = 0xe0
0xa79: V945 = 0x2
0xa7b: V946 = EXP 0x2 0xe0
0xa7c: V947 = 0x1000000000000
0xa85: V948 = MUL V906 0x1000000000000
0xa86: V949 = DIV V948 0x100000000000000000000000000000000000000000000000000000000
0xa87: V950 = 0x84
0xa8a: V951 = ADD V916 0x84
0xa8b: M[V951] = V949
0xa8c: V952 = 0xc0
0xa8e: V953 = 0x2
0xa90: V954 = EXP 0x2 0xc0
0xa91: V955 = 0x100000000000000000000
0xa9e: V956 = MUL V906 0x100000000000000000000
0xa9f: V957 = DIV V956 0x1000000000000000000000000000000000000000000000000
0xaa0: V958 = 0xa4
0xaa3: V959 = ADD V916 0xa4
0xaa4: M[V959] = V957
0xaa7: V960 = MUL 0x1000000000000000000000000 V909
0xaab: V961 = DIV V960 0x1000000000000000000000000
0xaad: V962 = AND 0xffffffffffffffffffffffffffffffffffffffff V961
0xaae: V963 = 0xc4
0xab1: V964 = ADD V916 0xc4
0xab2: M[V964] = V962
0xab3: V965 = 0x100000000000000000000000000000000000000000000000000000000000000
0xad6: V966 = MUL V906 0x100
0xada: V967 = DIV V966 0x100000000000000000000000000000000000000000000000000000000000000
0xadb: V968 = 0xff
0xadd: V969 = AND 0xff V967
0xade: V970 = 0xe4
0xae1: V971 = ADD V916 0xe4
0xae2: M[V971] = V969
0xae3: V972 = 0x104
0xae7: V973 = ADD V916 0x104
0xaeb: M[V973] = V912
0xaec: V974 = 0x124
0xaf0: V975 = ADD V916 0x124
0xaf1: M[V975] = V915
0xaf2: V976 = 0x1000000000000000000000000000000000000
0xb08: V977 = MUL V906 0x1000000000000000000000000000000000000
0xb0c: V978 = DIV V977 0x10000000000000000000000000000000000000000
0xb0d: V979 = 0x144
0xb11: V980 = ADD V916 0x144
0xb12: M[V980] = V978
0xb13: V981 = M[0x40]
0xb16: V982 = AND V562 0xffffffffffffffffffffffffffffffffffffffff
0xb19: V983 = 0xa19b14a
0xb20: V984 = 0x164
0xb25: V985 = ADD V916 0x164
0xb2a: V986 = SUB V916 V981
0xb2b: V987 = ADD V986 0x164
0xb30: V988 = EXTCODESIZE V982
0xb31: V989 = ISZERO V988
0xb33: V990 = ISZERO V989
0xb34: V991 = 0xb3c
0xb37: JUMPI 0xb3c V990
---
Entry stack: [V13, 0x7f, V139, V561, V562, V880, 0xa19b14a, V883, V893]
Stack pops: 7
Stack additions: [S6, S5, S4, V982, 0xa19b14a, V985, 0x0, V981, V987, V981, 0x0, V982, V989]
Exit stack: [V13, 0x7f, V139, V561, V562, V982, 0xa19b14a, V985, 0x0, V981, V987, V981, 0x0, V982, V989]

================================

Block 0xb38
[0xb38:0xb3b]
---
Predecessors: [0x9e1]
Successors: []
---
0xb38 PUSH1 0x0
0xb3a DUP1
0xb3b REVERT
---
0xb38: V992 = 0x0
0xb3b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V139, V561, V562, V982, 0xa19b14a, V985, 0x0, V981, V987, V981, 0x0, V982, V989]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V982, 0xa19b14a, V985, 0x0, V981, V987, V981, 0x0, V982, V989]

================================

Block 0xb3c
[0xb3c:0xb46]
---
Predecessors: [0x9e1]
Successors: [0xb47, 0xb50]
---
0xb3c JUMPDEST
0xb3d POP
0xb3e GAS
0xb3f CALL
0xb40 ISZERO
0xb41 DUP1
0xb42 ISZERO
0xb43 PUSH2 0xb50
0xb46 JUMPI
---
0xb3c: JUMPDEST 
0xb3e: V993 = GAS
0xb3f: V994 = CALL V993 V982 0x0 V981 V987 V981 0x0
0xb40: V995 = ISZERO V994
0xb42: V996 = ISZERO V995
0xb43: V997 = 0xb50
0xb46: JUMPI 0xb50 V996
---
Entry stack: [V13, 0x7f, V139, V561, V562, V982, 0xa19b14a, V985, 0x0, V981, V987, V981, 0x0, V982, V989]
Stack pops: 7
Stack additions: [V995]
Exit stack: [V13, 0x7f, V139, V561, V562, V982, 0xa19b14a, V985, V995]

================================

Block 0xb47
[0xb47:0xb4f]
---
Predecessors: [0xb3c]
Successors: []
---
0xb47 RETURNDATASIZE
0xb48 PUSH1 0x0
0xb4a DUP1
0xb4b RETURNDATACOPY
0xb4c RETURNDATASIZE
0xb4d PUSH1 0x0
0xb4f REVERT
---
0xb47: V998 = RETURNDATASIZE
0xb48: V999 = 0x0
0xb4b: RETURNDATACOPY 0x0 0x0 V998
0xb4c: V1000 = RETURNDATASIZE
0xb4d: V1001 = 0x0
0xb4f: REVERT 0x0 V1000
---
Entry stack: [V13, 0x7f, V139, V561, V562, V982, 0xa19b14a, V985, V995]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, V982, 0xa19b14a, V985, V995]

================================

Block 0xb50
[0xb50:0xb54]
---
Predecessors: [0xb3c]
Successors: [0xb55]
---
0xb50 JUMPDEST
0xb51 POP
0xb52 POP
0xb53 POP
0xb54 POP
---
0xb50: JUMPDEST 
---
Entry stack: [V13, 0x7f, V139, V561, V562, V982, 0xa19b14a, V985, V995]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562]

================================

Block 0xb55
[0xb55:0xb65]
---
Predecessors: [0x6e8, 0x899, 0xb50]
Successors: [0xb66, 0xb67]
---
0xb55 JUMPDEST
0xb56 PUSH2 0x4d4
0xb59 PUSH2 0x61a8
0xb5c GAS
0xb5d DUP5
0xb5e SUB
0xb5f DUP2
0xb60 ISZERO
0xb61 ISZERO
0xb62 PUSH2 0xb67
0xb65 JUMPI
---
0xb55: JUMPDEST 
0xb56: V1002 = 0x4d4
0xb59: V1003 = 0x61a8
0xb5c: V1004 = GAS
0xb5e: V1005 = SUB V561 V1004
0xb60: V1006 = ISZERO 0x61a8
0xb61: V1007 = ISZERO 0x0
0xb62: V1008 = 0xb67
0xb65: JUMPI 0xb67 0x1
---
Entry stack: [V13, 0x7f, V139, V561, V562]
Stack pops: 2
Stack additions: [S1, S0, 0x4d4, 0x61a8, V1005]
Exit stack: [V13, 0x7f, V139, V561, V562, 0x4d4, 0x61a8, V1005]

================================

Block 0xb66
[0xb66:0xb66]
---
Predecessors: [0xb55]
Successors: []
---
0xb66 INVALID
---
0xb66: INVALID 
---
Entry stack: [V13, 0x7f, V139, V561, V562, 0x4d4, 0x61a8, V1005]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562, 0x4d4, 0x61a8, V1005]

================================

Block 0xb67
[0xb67:0xb6f]
---
Predecessors: [0xb55]
Successors: [0xbc1]
---
0xb67 JUMPDEST
0xb68 DIV
0xb69 PUSH1 0x1
0xb6b ADD
0xb6c PUSH2 0xbc1
0xb6f JUMP
---
0xb67: JUMPDEST 
0xb68: V1009 = DIV V1005 0x61a8
0xb69: V1010 = 0x1
0xb6b: V1011 = ADD 0x1 V1009
0xb6c: V1012 = 0xbc1
0xb6f: JUMP 0xbc1
---
Entry stack: [V13, 0x7f, V139, V561, V562, 0x4d4, 0x61a8, V1005]
Stack pops: 2
Stack additions: [V1011]
Exit stack: [V13, 0x7f, V139, V561, V562, 0x4d4, V1011]

================================

Block 0xb70
[0xb70:0xb81]
---
Predecessors: [0x1ab]
Successors: [0xb82, 0xb86]
---
0xb70 JUMPDEST
0xb71 PUSH4 0xdeadbeef
0xb76 PUSH1 0x0
0xb78 DUP1
0xb79 DUP1
0xb7a DUP1
0xb7b DUP6
0xb7c ISZERO
0xb7d ISZERO
0xb7e PUSH2 0xb86
0xb81 JUMPI
---
0xb70: JUMPDEST 
0xb71: V1013 = 0xdeadbeef
0xb76: V1014 = 0x0
0xb7c: V1015 = ISZERO V154
0xb7d: V1016 = ISZERO V1015
0xb7e: V1017 = 0xb86
0xb81: JUMPI 0xb86 V1016
---
Entry stack: [V13, 0x7f, V154]
Stack pops: 1
Stack additions: [S0, 0xdeadbeef, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xb82
[0xb82:0xb85]
---
Predecessors: [0xb70]
Successors: [0xbb9]
---
0xb82 PUSH2 0xbb9
0xb85 JUMP
---
0xb82: V1018 = 0xbb9
0xb85: JUMP 0xbb9
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xb86
[0xb86:0xb9e]
---
Predecessors: [0xb70]
Successors: [0xb9f, 0xbb9]
---
0xb86 JUMPDEST
0xb87 DUP5
0xb88 SLOAD
0xb89 SWAP4
0xb8a POP
0xb8b DUP4
0xb8c DUP6
0xb8d ADD
0xb8e PUSH1 0x1
0xb90 DUP2
0xb91 ADD
0xb92 SWAP4
0xb93 POP
0xb94 DUP7
0xb95 ADD
0xb96 SWAP2
0xb97 POP
0xb98 DUP3
0xb99 DUP3
0xb9a LT
0xb9b PUSH2 0xbb9
0xb9e JUMPI
---
0xb86: JUMPDEST 
0xb88: V1019 = S[0xdeadbeef]
0xb8d: V1020 = ADD 0xdeadbeef V1019
0xb8e: V1021 = 0x1
0xb91: V1022 = ADD V1020 0x1
0xb95: V1023 = ADD V154 V1020
0xb9a: V1024 = LT V1023 V1022
0xb9b: V1025 = 0xbb9
0xb9e: JUMPI 0xbb9 V1024
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, V1019, V1022, V1023, S0]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, V1019, V1022, V1023, 0x0]

================================

Block 0xb9f
[0xb9f:0xba0]
---
Predecessors: [0xb86]
Successors: [0xba1]
---
0xb9f POP
0xba0 DUP2
---
0xb9f: NOP 
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, V1019, V1022, V1023, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, V1019, V1022, V1023, V1022]

================================

Block 0xba1
[0xba1:0xba8]
---
Predecessors: [0xb9f, 0xba9]
Successors: [0xba9, 0xbb3]
---
0xba1 JUMPDEST
0xba2 DUP2
0xba3 DUP2
0xba4 GT
0xba5 PUSH2 0xbb3
0xba8 JUMPI
---
0xba1: JUMPDEST 
0xba4: V1026 = GT S0 V1023
0xba5: V1027 = 0xbb3
0xba8: JUMPI 0xbb3 V1026
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, V1019, V1022, V1023, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, V1019, V1022, V1023, S0]

================================

Block 0xba9
[0xba9:0xbb2]
---
Predecessors: [0xba1]
Successors: [0xba1]
---
0xba9 PUSH1 0x1
0xbab DUP1
0xbac DUP3
0xbad SSTORE
0xbae ADD
0xbaf PUSH2 0xba1
0xbb2 JUMP
---
0xba9: V1028 = 0x1
0xbad: S[S0] = 0x1
0xbae: V1029 = ADD 0x1 S0
0xbaf: V1030 = 0xba1
0xbb2: JUMP 0xba1
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, V1019, V1022, V1023, S0]
Stack pops: 1
Stack additions: [V1029]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, V1019, V1022, V1023, V1029]

================================

Block 0xbb3
[0xbb3:0xbb8]
---
Predecessors: [0xba1]
Successors: [0xbb9]
---
0xbb3 JUMPDEST
0xbb4 DUP6
0xbb5 DUP5
0xbb6 ADD
0xbb7 DUP6
0xbb8 SSTORE
---
0xbb3: JUMPDEST 
0xbb6: V1031 = ADD V1019 V154
0xbb8: S[0xdeadbeef] = V1031
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, V1019, V1022, V1023, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0x7f, V154, 0xdeadbeef, V1019, V1022, V1023, S0]

================================

Block 0xbb9
[0xbb9:0xbc0]
---
Predecessors: [0xb82, 0xb86, 0xbb3]
Successors: [0x7f]
---
0xbb9 JUMPDEST
0xbba POP
0xbbb POP
0xbbc POP
0xbbd POP
0xbbe POP
0xbbf POP
0xbc0 JUMP
---
0xbb9: JUMPDEST 
0xbc0: JUMP 0x7f
---
Entry stack: [V13, 0x7f, V154, 0xdeadbeef, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0xbc1
[0xbc1:0xbd5]
---
Predecessors: [0xb67]
Successors: [0xbd6]
---
0xbc1 JUMPDEST
0xbc2 PUSH4 0xdeadbeef
0xbc7 DUP1
0xbc8 SLOAD
0xbc9 PUSH4 0xdeadbef0
0xbce DUP4
0xbcf DUP3
0xbd0 SUB
0xbd1 ADD
0xbd2 DUP2
0xbd3 DUP4
0xbd4 ADD
0xbd5 DUP2
---
0xbc1: JUMPDEST 
0xbc2: V1032 = 0xdeadbeef
0xbc8: V1033 = S[0xdeadbeef]
0xbc9: V1034 = 0xdeadbef0
0xbd0: V1035 = SUB V1033 V1011
0xbd1: V1036 = ADD V1035 0xdeadbef0
0xbd4: V1037 = ADD 0xdeadbeef V1033
---
Entry stack: [V13, 0x7f, V139, V561, V562, 0x4d4, V1011]
Stack pops: 1
Stack additions: [S0, 0xdeadbeef, V1033, V1036, V1037, V1036]
Exit stack: [V13, 0x7f, V139, V561, V562, 0x4d4, V1011, 0xdeadbeef, V1033, V1036, V1037, V1036]

================================

Block 0xbd6
[0xbd6:0xbdd]
---
Predecessors: [0xbc1, 0xbde]
Successors: [0xbde, 0xbe9]
---
0xbd6 JUMPDEST
0xbd7 DUP2
0xbd8 DUP2
0xbd9 GT
0xbda PUSH2 0xbe9
0xbdd JUMPI
---
0xbd6: JUMPDEST 
0xbd9: V1038 = GT S0 V1037
0xbda: V1039 = 0xbe9
0xbdd: JUMPI 0xbe9 V1038
---
Entry stack: [V13, 0x7f, V139, V561, V562, 0x4d4, V1011, 0xdeadbeef, V1033, V1036, V1037, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x7f, V139, V561, V562, 0x4d4, V1011, 0xdeadbeef, V1033, V1036, V1037, S0]

================================

Block 0xbde
[0xbde:0xbe8]
---
Predecessors: [0xbd6]
Successors: [0xbd6]
---
0xbde PUSH1 0x0
0xbe0 DUP2
0xbe1 SSTORE
0xbe2 PUSH1 0x1
0xbe4 ADD
0xbe5 PUSH2 0xbd6
0xbe8 JUMP
---
0xbde: V1040 = 0x0
0xbe1: S[S0] = 0x0
0xbe2: V1041 = 0x1
0xbe4: V1042 = ADD 0x1 S0
0xbe5: V1043 = 0xbd6
0xbe8: JUMP 0xbd6
---
Entry stack: [V13, 0x7f, V139, V561, V562, 0x4d4, V1011, 0xdeadbeef, V1033, V1036, V1037, S0]
Stack pops: 1
Stack additions: [V1042]
Exit stack: [V13, 0x7f, V139, V561, V562, 0x4d4, V1011, 0xdeadbeef, V1033, V1036, V1037, V1042]

================================

Block 0xbe9
[0xbe9:0xbf3]
---
Predecessors: [0xbd6]
Successors: [0x4d4]
---
0xbe9 JUMPDEST
0xbea POP
0xbeb POP
0xbec POP
0xbed SWAP2
0xbee SWAP1
0xbef SWAP2
0xbf0 SUB
0xbf1 SWAP1
0xbf2 SSTORE
0xbf3 JUMP
---
0xbe9: JUMPDEST 
0xbf0: V1044 = SUB V1033 V1011
0xbf2: S[0xdeadbeef] = V1044
0xbf3: JUMP 0x4d4
---
Entry stack: [V13, 0x7f, V139, V561, V562, 0x4d4, V1011, 0xdeadbeef, V1033, V1036, V1037, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V13, 0x7f, V139, V561, V562]

================================

Block 0xbf4
[0xbf4:0xc1f]
---
Predecessors: []
Successors: []
---
0xbf4 STOP
0xbf5 LOG1
0xbf6 PUSH6 0x627a7a723058
0xbfd SHA3
0xbfe ISZERO
0xbff PUSH32 0x4e73f37c69631c32af55aa8e53912f84794a4f0c75ae70025cdb7fab99b30029
---
0xbf4: STOP 
0xbf5: LOG S0 S1 S2
0xbf6: V1045 = 0x627a7a723058
0xbfd: V1046 = SHA3 0x627a7a723058 S3
0xbfe: V1047 = ISZERO V1046
0xbff: V1048 = 0x4e73f37c69631c32af55aa8e53912f84794a4f0c75ae70025cdb7fab99b30029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x4e73f37c69631c32af55aa8e53912f84794a4f0c75ae70025cdb7fab99b30029, V1047]
Exit stack: []

================================

Function 0:
Public function signature: 0x1785f53c
Entry block: 0x81
Exit block: 0x7f
Body: 0x7f, 0x81, 0x89, 0x8d, 0x1b7, 0x1d0, 0x1df, 0x1e6, 0x1ea

Function 1:
Public function signature: 0x40e6c16f
Entry block: 0xa2
Exit block: 0xb7
Body: 0xa2, 0xaa, 0xae, 0xb7, 0x20b

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xc9
Exit block: 0x247
Body: 0xc9, 0xd1, 0xd5, 0x214, 0x22d, 0x23c, 0x243, 0x247

Function 3:
Public function signature: 0x6ec6333d
Entry block: 0xde
Exit block: 0x7f
Body: 0x7f, 0xde, 0xe6, 0xea, 0x255, 0x26e, 0x27d, 0x284, 0x288

Function 4:
Public function signature: 0x786548dd
Entry block: 0xff
Exit block: 0x7f
Body: 0x7f, 0xff, 0x2af, 0x2c8, 0x2d7, 0x2de, 0x2e2, 0x355, 0x359, 0x364, 0x36d

Function 5:
Public function signature: 0xa70ef5b0
Entry block: 0x114
Exit block: 0x7f
Body: 0x7f, 0x114, 0x11c, 0x120, 0x376, 0x38f, 0x39e, 0x3a5, 0x3a9

Function 6:
Public function signature: 0xbfaa4391
Entry block: 0x142
Exit block: 0x7f
Body: 0x7f, 0x142, 0x3f0, 0x409, 0x418, 0x41f, 0x423, 0x499, 0x49d, 0x4a8, 0x4b1, 0x4d0, 0x4d4

Function 7:
Public function signature: 0xdf207dff
Entry block: 0x15a
Exit block: 0xb47
Body: 0x7f, 0x15a, 0x162, 0x166, 0x4d4, 0x4d9, 0x4f4, 0x503, 0x50a, 0x50e, 0x651, 0x65a, 0x66b, 0x66f, 0x6ba, 0x6be, 0x6c9, 0x6d2, 0x6e4, 0x6e8, 0x709, 0x802, 0x80b, 0x81c, 0x820, 0x86b, 0x86f, 0x87a, 0x883, 0x895, 0x899, 0x8ab, 0x9c9, 0x9cd, 0x9d8, 0x9e1, 0xb38, 0xb3c, 0xb47, 0xb50, 0xb55, 0xb66, 0xb67, 0xbc1, 0xbd6, 0xbde, 0xbe9

Function 8:
Public function signature: 0xe10c63ae
Entry block: 0x19f
Exit block: 0x7f
Body: 0x7f, 0x19f, 0x1a7, 0x1ab, 0xb70, 0xb82, 0xb86, 0xb9f, 0xba1, 0xba9, 0xbb3, 0xbb9

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x7f
Body: 0x7f

