Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa9
0xa: JUMPI 0xa9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xea]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2b68b9c6
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xea
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2b68b9c6
0x20: V14 = EQ V12 0x2b68b9c6
0x21: V15 = 0xea
0x24: JUMPI 0xea V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xff]
---
0x25 DUP1
0x26 PUSH4 0x2e1a7d4d
0x2b EQ
0x2c PUSH2 0xff
0x2f JUMPI
---
0x26: V16 = 0x2e1a7d4d
0x2b: V17 = EQ 0x2e1a7d4d V12
0x2c: V18 = 0xff
0x2f: JUMPI 0xff V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x117]
---
0x30 DUP1
0x31 PUSH4 0x704b6c02
0x36 EQ
0x37 PUSH2 0x117
0x3a JUMPI
---
0x31: V19 = 0x704b6c02
0x36: V20 = EQ 0x704b6c02 V12
0x37: V21 = 0x117
0x3a: JUMPI 0x117 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x138]
---
0x3b DUP1
0x3c PUSH4 0x7826bfa8
0x41 EQ
0x42 PUSH2 0x138
0x45 JUMPI
---
0x3c: V22 = 0x7826bfa8
0x41: V23 = EQ 0x7826bfa8 V12
0x42: V24 = 0x138
0x45: JUMPI 0x138 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x167]
---
0x46 DUP1
0x47 PUSH4 0x79ba5097
0x4c EQ
0x4d PUSH2 0x167
0x50 JUMPI
---
0x47: V25 = 0x79ba5097
0x4c: V26 = EQ 0x79ba5097 V12
0x4d: V27 = 0x167
0x50: JUMPI 0x167 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x17c]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x17c
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x17c
0x5b: JUMPI 0x17c V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1ab]
---
0x5c DUP1
0x5d PUSH4 0x94081387
0x62 EQ
0x63 PUSH2 0x1ab
0x66 JUMPI
---
0x5d: V31 = 0x94081387
0x62: V32 = EQ 0x94081387 V12
0x63: V33 = 0x1ab
0x66: JUMPI 0x1ab V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1c3]
---
0x67 DUP1
0x68 PUSH4 0xb105126f
0x6d EQ
0x6e PUSH2 0x1c3
0x71 JUMPI
---
0x68: V34 = 0xb105126f
0x6d: V35 = EQ 0xb105126f V12
0x6e: V36 = 0x1c3
0x71: JUMPI 0x1c3 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1e4]
---
0x72 DUP1
0x73 PUSH4 0xb5ed298a
0x78 EQ
0x79 PUSH2 0x1e4
0x7c JUMPI
---
0x73: V37 = 0xb5ed298a
0x78: V38 = EQ 0xb5ed298a V12
0x79: V39 = 0x1e4
0x7c: JUMPI 0x1e4 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x205]
---
0x7d DUP1
0x7e PUSH4 0xd153b60c
0x83 EQ
0x84 PUSH2 0x205
0x87 JUMPI
---
0x7e: V40 = 0xd153b60c
0x83: V41 = EQ 0xd153b60c V12
0x84: V42 = 0x205
0x87: JUMPI 0x205 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x234]
---
0x88 DUP1
0x89 PUSH4 0xe1a27ad3
0x8e EQ
0x8f PUSH2 0x234
0x92 JUMPI
---
0x89: V43 = 0xe1a27ad3
0x8e: V44 = EQ 0xe1a27ad3 V12
0x8f: V45 = 0x234
0x92: JUMPI 0x234 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x25b]
---
0x93 DUP1
0x94 PUSH4 0xf298083b
0x99 EQ
0x9a PUSH2 0x25b
0x9d JUMPI
---
0x94: V46 = 0xf298083b
0x99: V47 = EQ 0xf298083b V12
0x9a: V48 = 0x25b
0x9d: JUMPI 0x25b V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x27c]
---
0x9e DUP1
0x9f PUSH4 0xf851a440
0xa4 EQ
0xa5 PUSH2 0x27c
0xa8 JUMPI
---
0x9f: V49 = 0xf851a440
0xa4: V50 = EQ 0xf851a440 V12
0xa5: V51 = 0x27c
0xa8: JUMPI 0x27c V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xa9]
---
Predecessors: [0x0, 0x9e]
Successors: [0xaa]
---
0xa9 JUMPDEST
---
0xa9: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaa
[0xaa:0xe7]
---
Predecessors: [0xa9]
Successors: [0xe8]
---
0xaa JUMPDEST
0xab CALLER
0xac PUSH1 0x1
0xae PUSH1 0xa0
0xb0 PUSH1 0x2
0xb2 EXP
0xb3 SUB
0xb4 AND
0xb5 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xd6 CALLVALUE
0xd7 PUSH1 0x40
0xd9 MLOAD
0xda SWAP1
0xdb DUP2
0xdc MSTORE
0xdd PUSH1 0x20
0xdf ADD
0xe0 PUSH1 0x40
0xe2 MLOAD
0xe3 DUP1
0xe4 SWAP2
0xe5 SUB
0xe6 SWAP1
0xe7 LOG2
---
0xaa: JUMPDEST 
0xab: V52 = CALLER
0xac: V53 = 0x1
0xae: V54 = 0xa0
0xb0: V55 = 0x2
0xb2: V56 = EXP 0x2 0xa0
0xb3: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xb5: V59 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xd6: V60 = CALLVALUE
0xd7: V61 = 0x40
0xd9: V62 = M[0x40]
0xdc: M[V62] = V60
0xdd: V63 = 0x20
0xdf: V64 = ADD 0x20 V62
0xe0: V65 = 0x40
0xe2: V66 = M[0x40]
0xe5: V67 = SUB V64 V66
0xe7: LOG V66 V67 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V58
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe8
[0xe8:0xe9]
---
Predecessors: [0xaa, 0x327, 0x36f, 0x3e3, 0x451, 0x4fe, 0x549, 0x689]
Successors: []
---
0xe8 JUMPDEST
0xe9 STOP
---
0xe8: JUMPDEST 
0xe9: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xea
[0xea:0xf0]
---
Predecessors: [0xb]
Successors: [0xf1, 0xf5]
---
0xea JUMPDEST
0xeb CALLVALUE
0xec ISZERO
0xed PUSH2 0xf5
0xf0 JUMPI
---
0xea: JUMPDEST 
0xeb: V68 = CALLVALUE
0xec: V69 = ISZERO V68
0xed: V70 = 0xf5
0xf0: JUMPI 0xf5 V69
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf1
[0xf1:0xf4]
---
Predecessors: [0xea]
Successors: []
---
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 REVERT
---
0xf1: V71 = 0x0
0xf4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0xea]
Successors: [0x2ab]
---
0xf5 JUMPDEST
0xf6 PUSH2 0xe8
0xf9 PUSH2 0x2ab
0xfc JUMP
---
0xf5: JUMPDEST 
0xf6: V72 = 0xe8
0xf9: V73 = 0x2ab
0xfc: JUMP 0x2ab
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V12, 0xe8]

================================

Block 0xfd
[0xfd:0xfe]
---
Predecessors: []
Successors: []
---
0xfd JUMPDEST
0xfe STOP
---
0xfd: JUMPDEST 
0xfe: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xff
[0xff:0x105]
---
Predecessors: [0x25]
Successors: [0x106, 0x10a]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0xff: JUMPDEST 
0x100: V74 = CALLVALUE
0x101: V75 = ISZERO V74
0x102: V76 = 0x10a
0x105: JUMPI 0x10a V75
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0xff]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V77 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10a
[0x10a:0x114]
---
Predecessors: [0xff]
Successors: [0x2d7]
---
0x10a JUMPDEST
0x10b PUSH2 0xe8
0x10e PUSH1 0x4
0x110 CALLDATALOAD
0x111 PUSH2 0x2d7
0x114 JUMP
---
0x10a: JUMPDEST 
0x10b: V78 = 0xe8
0x10e: V79 = 0x4
0x110: V80 = CALLDATALOAD 0x4
0x111: V81 = 0x2d7
0x114: JUMP 0x2d7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe8, V80]
Exit stack: [V12, 0xe8, V80]

================================

Block 0x115
[0x115:0x116]
---
Predecessors: []
Successors: []
---
0x115 JUMPDEST
0x116 STOP
---
0x115: JUMPDEST 
0x116: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x117
[0x117:0x11d]
---
Predecessors: [0x30]
Successors: [0x11e, 0x122]
---
0x117 JUMPDEST
0x118 CALLVALUE
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x117: JUMPDEST 
0x118: V82 = CALLVALUE
0x119: V83 = ISZERO V82
0x11a: V84 = 0x122
0x11d: JUMPI 0x122 V83
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x117]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V85 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x122
[0x122:0x135]
---
Predecessors: [0x117]
Successors: [0x32a]
---
0x122 JUMPDEST
0x123 PUSH2 0xe8
0x126 PUSH1 0x1
0x128 PUSH1 0xa0
0x12a PUSH1 0x2
0x12c EXP
0x12d SUB
0x12e PUSH1 0x4
0x130 CALLDATALOAD
0x131 AND
0x132 PUSH2 0x32a
0x135 JUMP
---
0x122: JUMPDEST 
0x123: V86 = 0xe8
0x126: V87 = 0x1
0x128: V88 = 0xa0
0x12a: V89 = 0x2
0x12c: V90 = EXP 0x2 0xa0
0x12d: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12e: V92 = 0x4
0x130: V93 = CALLDATALOAD 0x4
0x131: V94 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x132: V95 = 0x32a
0x135: JUMP 0x32a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe8, V94]
Exit stack: [V12, 0xe8, V94]

================================

Block 0x136
[0x136:0x137]
---
Predecessors: []
Successors: []
---
0x136 JUMPDEST
0x137 STOP
---
0x136: JUMPDEST 
0x137: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x138
[0x138:0x13e]
---
Predecessors: [0x3b]
Successors: [0x13f, 0x143]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a ISZERO
0x13b PUSH2 0x143
0x13e JUMPI
---
0x138: JUMPDEST 
0x139: V96 = CALLVALUE
0x13a: V97 = ISZERO V96
0x13b: V98 = 0x143
0x13e: JUMPI 0x143 V97
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13f
[0x13f:0x142]
---
Predecessors: [0x138]
Successors: []
---
0x13f PUSH1 0x0
0x141 DUP1
0x142 REVERT
---
0x13f: V99 = 0x0
0x142: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x143
[0x143:0x14a]
---
Predecessors: [0x138]
Successors: [0x372]
---
0x143 JUMPDEST
0x144 PUSH2 0x14b
0x147 PUSH2 0x372
0x14a JUMP
---
0x143: JUMPDEST 
0x144: V100 = 0x14b
0x147: V101 = 0x372
0x14a: JUMP 0x372
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b]
Exit stack: [V12, 0x14b]

================================

Block 0x14b
[0x14b:0x166]
---
Predecessors: [0x372, 0x3e5, 0x54c, 0x68c]
Successors: []
---
0x14b JUMPDEST
0x14c PUSH1 0x40
0x14e MLOAD
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 SWAP1
0x158 SWAP2
0x159 AND
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f PUSH1 0x40
0x161 MLOAD
0x162 DUP1
0x163 SWAP2
0x164 SUB
0x165 SWAP1
0x166 RETURN
---
0x14b: JUMPDEST 
0x14c: V102 = 0x40
0x14e: V103 = M[0x40]
0x14f: V104 = 0x1
0x151: V105 = 0xa0
0x153: V106 = 0x2
0x155: V107 = EXP 0x2 0xa0
0x156: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x159: V109 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x15b: M[V103] = V109
0x15c: V110 = 0x20
0x15e: V111 = ADD 0x20 V103
0x15f: V112 = 0x40
0x161: V113 = M[0x40]
0x164: V114 = SUB V111 V113
0x166: RETURN V113 V114
---
Entry stack: [V12, 0x14b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x14b]

================================

Block 0x167
[0x167:0x16d]
---
Predecessors: [0x46]
Successors: [0x16e, 0x172]
---
0x167 JUMPDEST
0x168 CALLVALUE
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0x167: JUMPDEST 
0x168: V115 = CALLVALUE
0x169: V116 = ISZERO V115
0x16a: V117 = 0x172
0x16d: JUMPI 0x172 V116
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x167]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V118 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x172
[0x172:0x179]
---
Predecessors: [0x167]
Successors: [0x381]
---
0x172 JUMPDEST
0x173 PUSH2 0xe8
0x176 PUSH2 0x381
0x179 JUMP
---
0x172: JUMPDEST 
0x173: V119 = 0xe8
0x176: V120 = 0x381
0x179: JUMP 0x381
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V12, 0xe8]

================================

Block 0x17a
[0x17a:0x17b]
---
Predecessors: []
Successors: []
---
0x17a JUMPDEST
0x17b STOP
---
0x17a: JUMPDEST 
0x17b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x17c
[0x17c:0x182]
---
Predecessors: [0x51]
Successors: [0x183, 0x187]
---
0x17c JUMPDEST
0x17d CALLVALUE
0x17e ISZERO
0x17f PUSH2 0x187
0x182 JUMPI
---
0x17c: JUMPDEST 
0x17d: V121 = CALLVALUE
0x17e: V122 = ISZERO V121
0x17f: V123 = 0x187
0x182: JUMPI 0x187 V122
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x183
[0x183:0x186]
---
Predecessors: [0x17c]
Successors: []
---
0x183 PUSH1 0x0
0x185 DUP1
0x186 REVERT
---
0x183: V124 = 0x0
0x186: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x187
[0x187:0x18e]
---
Predecessors: [0x17c]
Successors: [0x3e5]
---
0x187 JUMPDEST
0x188 PUSH2 0x14b
0x18b PUSH2 0x3e5
0x18e JUMP
---
0x187: JUMPDEST 
0x188: V125 = 0x14b
0x18b: V126 = 0x3e5
0x18e: JUMP 0x3e5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b]
Exit stack: [V12, 0x14b]

================================

Block 0x18f
[0x18f:0x1aa]
---
Predecessors: []
Successors: []
---
0x18f JUMPDEST
0x190 PUSH1 0x40
0x192 MLOAD
0x193 PUSH1 0x1
0x195 PUSH1 0xa0
0x197 PUSH1 0x2
0x199 EXP
0x19a SUB
0x19b SWAP1
0x19c SWAP2
0x19d AND
0x19e DUP2
0x19f MSTORE
0x1a0 PUSH1 0x20
0x1a2 ADD
0x1a3 PUSH1 0x40
0x1a5 MLOAD
0x1a6 DUP1
0x1a7 SWAP2
0x1a8 SUB
0x1a9 SWAP1
0x1aa RETURN
---
0x18f: JUMPDEST 
0x190: V127 = 0x40
0x192: V128 = M[0x40]
0x193: V129 = 0x1
0x195: V130 = 0xa0
0x197: V131 = 0x2
0x199: V132 = EXP 0x2 0xa0
0x19a: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19d: V134 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x19f: M[V128] = V134
0x1a0: V135 = 0x20
0x1a2: V136 = ADD 0x20 V128
0x1a3: V137 = 0x40
0x1a5: V138 = M[0x40]
0x1a8: V139 = SUB V136 V138
0x1aa: RETURN V138 V139
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ab
[0x1ab:0x1b1]
---
Predecessors: [0x5c]
Successors: [0x1b2, 0x1b6]
---
0x1ab JUMPDEST
0x1ac CALLVALUE
0x1ad ISZERO
0x1ae PUSH2 0x1b6
0x1b1 JUMPI
---
0x1ab: JUMPDEST 
0x1ac: V140 = CALLVALUE
0x1ad: V141 = ISZERO V140
0x1ae: V142 = 0x1b6
0x1b1: JUMPI 0x1b6 V141
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x1ab]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V143 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b6
[0x1b6:0x1c0]
---
Predecessors: [0x1ab]
Successors: [0x3f4]
---
0x1b6 JUMPDEST
0x1b7 PUSH2 0xe8
0x1ba PUSH1 0x4
0x1bc CALLDATALOAD
0x1bd PUSH2 0x3f4
0x1c0 JUMP
---
0x1b6: JUMPDEST 
0x1b7: V144 = 0xe8
0x1ba: V145 = 0x4
0x1bc: V146 = CALLDATALOAD 0x4
0x1bd: V147 = 0x3f4
0x1c0: JUMP 0x3f4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe8, V146]
Exit stack: [V12, 0xe8, V146]

================================

Block 0x1c1
[0x1c1:0x1c2]
---
Predecessors: []
Successors: []
---
0x1c1 JUMPDEST
0x1c2 STOP
---
0x1c1: JUMPDEST 
0x1c2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c3
[0x1c3:0x1c9]
---
Predecessors: [0x67]
Successors: [0x1ca, 0x1ce]
---
0x1c3 JUMPDEST
0x1c4 CALLVALUE
0x1c5 ISZERO
0x1c6 PUSH2 0x1ce
0x1c9 JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V148 = CALLVALUE
0x1c5: V149 = ISZERO V148
0x1c6: V150 = 0x1ce
0x1c9: JUMPI 0x1ce V149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ca
[0x1ca:0x1cd]
---
Predecessors: [0x1c3]
Successors: []
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd REVERT
---
0x1ca: V151 = 0x0
0x1cd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ce
[0x1ce:0x1e1]
---
Predecessors: [0x1c3]
Successors: [0x454]
---
0x1ce JUMPDEST
0x1cf PUSH2 0xe8
0x1d2 PUSH1 0x4
0x1d4 CALLDATALOAD
0x1d5 PUSH1 0x24
0x1d7 CALLDATALOAD
0x1d8 PUSH1 0x44
0x1da CALLDATALOAD
0x1db PUSH1 0x64
0x1dd CALLDATALOAD
0x1de PUSH2 0x454
0x1e1 JUMP
---
0x1ce: JUMPDEST 
0x1cf: V152 = 0xe8
0x1d2: V153 = 0x4
0x1d4: V154 = CALLDATALOAD 0x4
0x1d5: V155 = 0x24
0x1d7: V156 = CALLDATALOAD 0x24
0x1d8: V157 = 0x44
0x1da: V158 = CALLDATALOAD 0x44
0x1db: V159 = 0x64
0x1dd: V160 = CALLDATALOAD 0x64
0x1de: V161 = 0x454
0x1e1: JUMP 0x454
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe8, V154, V156, V158, V160]
Exit stack: [V12, 0xe8, V154, V156, V158, V160]

================================

Block 0x1e2
[0x1e2:0x1e3]
---
Predecessors: []
Successors: []
---
0x1e2 JUMPDEST
0x1e3 STOP
---
0x1e2: JUMPDEST 
0x1e3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e4
[0x1e4:0x1ea]
---
Predecessors: [0x72]
Successors: [0x1eb, 0x1ef]
---
0x1e4 JUMPDEST
0x1e5 CALLVALUE
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V162 = CALLVALUE
0x1e6: V163 = ISZERO V162
0x1e7: V164 = 0x1ef
0x1ea: JUMPI 0x1ef V163
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1e4]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V165 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ef
[0x1ef:0x202]
---
Predecessors: [0x1e4]
Successors: [0x504]
---
0x1ef JUMPDEST
0x1f0 PUSH2 0xe8
0x1f3 PUSH1 0x1
0x1f5 PUSH1 0xa0
0x1f7 PUSH1 0x2
0x1f9 EXP
0x1fa SUB
0x1fb PUSH1 0x4
0x1fd CALLDATALOAD
0x1fe AND
0x1ff PUSH2 0x504
0x202 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V166 = 0xe8
0x1f3: V167 = 0x1
0x1f5: V168 = 0xa0
0x1f7: V169 = 0x2
0x1f9: V170 = EXP 0x2 0xa0
0x1fa: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fb: V172 = 0x4
0x1fd: V173 = CALLDATALOAD 0x4
0x1fe: V174 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V175 = 0x504
0x202: JUMP 0x504
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe8, V174]
Exit stack: [V12, 0xe8, V174]

================================

Block 0x203
[0x203:0x204]
---
Predecessors: []
Successors: []
---
0x203 JUMPDEST
0x204 STOP
---
0x203: JUMPDEST 
0x204: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x205
[0x205:0x20b]
---
Predecessors: [0x7d]
Successors: [0x20c, 0x210]
---
0x205 JUMPDEST
0x206 CALLVALUE
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x205: JUMPDEST 
0x206: V176 = CALLVALUE
0x207: V177 = ISZERO V176
0x208: V178 = 0x210
0x20b: JUMPI 0x210 V177
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x205]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V179 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x210
[0x210:0x217]
---
Predecessors: [0x205]
Successors: [0x54c]
---
0x210 JUMPDEST
0x211 PUSH2 0x14b
0x214 PUSH2 0x54c
0x217 JUMP
---
0x210: JUMPDEST 
0x211: V180 = 0x14b
0x214: V181 = 0x54c
0x217: JUMP 0x54c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b]
Exit stack: [V12, 0x14b]

================================

Block 0x218
[0x218:0x233]
---
Predecessors: []
Successors: []
---
0x218 JUMPDEST
0x219 PUSH1 0x40
0x21b MLOAD
0x21c PUSH1 0x1
0x21e PUSH1 0xa0
0x220 PUSH1 0x2
0x222 EXP
0x223 SUB
0x224 SWAP1
0x225 SWAP2
0x226 AND
0x227 DUP2
0x228 MSTORE
0x229 PUSH1 0x20
0x22b ADD
0x22c PUSH1 0x40
0x22e MLOAD
0x22f DUP1
0x230 SWAP2
0x231 SUB
0x232 SWAP1
0x233 RETURN
---
0x218: JUMPDEST 
0x219: V182 = 0x40
0x21b: V183 = M[0x40]
0x21c: V184 = 0x1
0x21e: V185 = 0xa0
0x220: V186 = 0x2
0x222: V187 = EXP 0x2 0xa0
0x223: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x226: V189 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x228: M[V183] = V189
0x229: V190 = 0x20
0x22b: V191 = ADD 0x20 V183
0x22c: V192 = 0x40
0x22e: V193 = M[0x40]
0x231: V194 = SUB V191 V193
0x233: RETURN V193 V194
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x234
[0x234:0x23a]
---
Predecessors: [0x88]
Successors: [0x23b, 0x23f]
---
0x234 JUMPDEST
0x235 CALLVALUE
0x236 ISZERO
0x237 PUSH2 0x23f
0x23a JUMPI
---
0x234: JUMPDEST 
0x235: V195 = CALLVALUE
0x236: V196 = ISZERO V195
0x237: V197 = 0x23f
0x23a: JUMPI 0x23f V196
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23b
[0x23b:0x23e]
---
Predecessors: [0x234]
Successors: []
---
0x23b PUSH1 0x0
0x23d DUP1
0x23e REVERT
---
0x23b: V198 = 0x0
0x23e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23f
[0x23f:0x246]
---
Predecessors: [0x234]
Successors: [0x55b]
---
0x23f JUMPDEST
0x240 PUSH2 0x247
0x243 PUSH2 0x55b
0x246 JUMP
---
0x23f: JUMPDEST 
0x240: V199 = 0x247
0x243: V200 = 0x55b
0x246: JUMP 0x55b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x247]
Exit stack: [V12, 0x247]

================================

Block 0x247
[0x247:0x25a]
---
Predecessors: [0x641]
Successors: []
---
0x247 JUMPDEST
0x248 PUSH1 0x40
0x24a MLOAD
0x24b SWAP1
0x24c ISZERO
0x24d ISZERO
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x20
0x252 ADD
0x253 PUSH1 0x40
0x255 MLOAD
0x256 DUP1
0x257 SWAP2
0x258 SUB
0x259 SWAP1
0x25a RETURN
---
0x247: JUMPDEST 
0x248: V201 = 0x40
0x24a: V202 = M[0x40]
0x24c: V203 = ISZERO S0
0x24d: V204 = ISZERO V203
0x24f: M[V202] = V204
0x250: V205 = 0x20
0x252: V206 = ADD 0x20 V202
0x253: V207 = 0x40
0x255: V208 = M[0x40]
0x258: V209 = SUB V206 V208
0x25a: RETURN V208 V209
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x25b
[0x25b:0x261]
---
Predecessors: [0x93]
Successors: [0x262, 0x266]
---
0x25b JUMPDEST
0x25c CALLVALUE
0x25d ISZERO
0x25e PUSH2 0x266
0x261 JUMPI
---
0x25b: JUMPDEST 
0x25c: V210 = CALLVALUE
0x25d: V211 = ISZERO V210
0x25e: V212 = 0x266
0x261: JUMPI 0x266 V211
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x262
[0x262:0x265]
---
Predecessors: [0x25b]
Successors: []
---
0x262 PUSH1 0x0
0x264 DUP1
0x265 REVERT
---
0x262: V213 = 0x0
0x265: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x266
[0x266:0x279]
---
Predecessors: [0x25b]
Successors: [0x644]
---
0x266 JUMPDEST
0x267 PUSH2 0xe8
0x26a PUSH1 0x1
0x26c PUSH1 0xa0
0x26e PUSH1 0x2
0x270 EXP
0x271 SUB
0x272 PUSH1 0x4
0x274 CALLDATALOAD
0x275 AND
0x276 PUSH2 0x644
0x279 JUMP
---
0x266: JUMPDEST 
0x267: V214 = 0xe8
0x26a: V215 = 0x1
0x26c: V216 = 0xa0
0x26e: V217 = 0x2
0x270: V218 = EXP 0x2 0xa0
0x271: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x272: V220 = 0x4
0x274: V221 = CALLDATALOAD 0x4
0x275: V222 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x276: V223 = 0x644
0x279: JUMP 0x644
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe8, V222]
Exit stack: [V12, 0xe8, V222]

================================

Block 0x27a
[0x27a:0x27b]
---
Predecessors: []
Successors: []
---
0x27a JUMPDEST
0x27b STOP
---
0x27a: JUMPDEST 
0x27b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x27c
[0x27c:0x282]
---
Predecessors: [0x9e]
Successors: [0x283, 0x287]
---
0x27c JUMPDEST
0x27d CALLVALUE
0x27e ISZERO
0x27f PUSH2 0x287
0x282 JUMPI
---
0x27c: JUMPDEST 
0x27d: V224 = CALLVALUE
0x27e: V225 = ISZERO V224
0x27f: V226 = 0x287
0x282: JUMPI 0x287 V225
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x283
[0x283:0x286]
---
Predecessors: [0x27c]
Successors: []
---
0x283 PUSH1 0x0
0x285 DUP1
0x286 REVERT
---
0x283: V227 = 0x0
0x286: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x287
[0x287:0x28e]
---
Predecessors: [0x27c]
Successors: [0x68c]
---
0x287 JUMPDEST
0x288 PUSH2 0x14b
0x28b PUSH2 0x68c
0x28e JUMP
---
0x287: JUMPDEST 
0x288: V228 = 0x14b
0x28b: V229 = 0x68c
0x28e: JUMP 0x68c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b]
Exit stack: [V12, 0x14b]

================================

Block 0x28f
[0x28f:0x2aa]
---
Predecessors: []
Successors: []
---
0x28f JUMPDEST
0x290 PUSH1 0x40
0x292 MLOAD
0x293 PUSH1 0x1
0x295 PUSH1 0xa0
0x297 PUSH1 0x2
0x299 EXP
0x29a SUB
0x29b SWAP1
0x29c SWAP2
0x29d AND
0x29e DUP2
0x29f MSTORE
0x2a0 PUSH1 0x20
0x2a2 ADD
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 DUP1
0x2a7 SWAP2
0x2a8 SUB
0x2a9 SWAP1
0x2aa RETURN
---
0x28f: JUMPDEST 
0x290: V230 = 0x40
0x292: V231 = M[0x40]
0x293: V232 = 0x1
0x295: V233 = 0xa0
0x297: V234 = 0x2
0x299: V235 = EXP 0x2 0xa0
0x29a: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29d: V237 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x29f: M[V231] = V237
0x2a0: V238 = 0x20
0x2a2: V239 = ADD 0x20 V231
0x2a3: V240 = 0x40
0x2a5: V241 = M[0x40]
0x2a8: V242 = SUB V239 V241
0x2aa: RETURN V241 V242
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ab
[0x2ab:0x2c1]
---
Predecessors: [0xf5]
Successors: [0x2c2, 0x2c6]
---
0x2ab JUMPDEST
0x2ac PUSH1 0x0
0x2ae SLOAD
0x2af CALLER
0x2b0 PUSH1 0x1
0x2b2 PUSH1 0xa0
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 SUB
0x2b8 SWAP1
0x2b9 DUP2
0x2ba AND
0x2bb SWAP2
0x2bc AND
0x2bd EQ
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2ab: JUMPDEST 
0x2ac: V243 = 0x0
0x2ae: V244 = S[0x0]
0x2af: V245 = CALLER
0x2b0: V246 = 0x1
0x2b2: V247 = 0xa0
0x2b4: V248 = 0x2
0x2b6: V249 = EXP 0x2 0xa0
0x2b7: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ba: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x2bc: V252 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V253 = EQ V252 V251
0x2be: V254 = 0x2c6
0x2c1: JUMPI 0x2c6 V253
---
Entry stack: [V12, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2ab]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V255 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8]

================================

Block 0x2c6
[0x2c6:0x2d3]
---
Predecessors: [0x2ab]
Successors: []
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x0
0x2c9 SLOAD
0x2ca PUSH1 0x1
0x2cc PUSH1 0xa0
0x2ce PUSH1 0x2
0x2d0 EXP
0x2d1 SUB
0x2d2 AND
0x2d3 SELFDESTRUCT
---
0x2c6: JUMPDEST 
0x2c7: V256 = 0x0
0x2c9: V257 = S[0x0]
0x2ca: V258 = 0x1
0x2cc: V259 = 0xa0
0x2ce: V260 = 0x2
0x2d0: V261 = EXP 0x2 0xa0
0x2d1: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d2: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x2d3: SELFDESTRUCT V263
---
Entry stack: [V12, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8]

================================

Block 0x2d4
[0x2d4:0x2d4]
---
Predecessors: []
Successors: [0x2d5]
---
0x2d4 JUMPDEST
---
0x2d4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2d5
[0x2d5:0x2d6]
---
Predecessors: [0x2d4]
Successors: []
Has unresolved jump.
---
0x2d5 JUMPDEST
0x2d6 JUMP
---
0x2d5: JUMPDEST 
0x2d6: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d7
[0x2d7:0x2ed]
---
Predecessors: [0x10a]
Successors: [0x2ee, 0x2f2]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x0
0x2da SLOAD
0x2db CALLER
0x2dc PUSH1 0x1
0x2de PUSH1 0xa0
0x2e0 PUSH1 0x2
0x2e2 EXP
0x2e3 SUB
0x2e4 SWAP1
0x2e5 DUP2
0x2e6 AND
0x2e7 SWAP2
0x2e8 AND
0x2e9 EQ
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V264 = 0x0
0x2da: V265 = S[0x0]
0x2db: V266 = CALLER
0x2dc: V267 = 0x1
0x2de: V268 = 0xa0
0x2e0: V269 = 0x2
0x2e2: V270 = EXP 0x2 0xa0
0x2e3: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e6: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x2e8: V273 = AND V265 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V274 = EQ V273 V272
0x2ea: V275 = 0x2f2
0x2ed: JUMPI 0x2f2 V274
---
Entry stack: [V12, 0xe8, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V80]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2d7]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V276 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V80]

================================

Block 0x2f2
[0x2f2:0x320]
---
Predecessors: [0x2d7]
Successors: [0x321, 0x325]
---
0x2f2 JUMPDEST
0x2f3 PUSH1 0x0
0x2f5 SLOAD
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0xa0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd SUB
0x2fe AND
0x2ff DUP2
0x300 ISZERO
0x301 PUSH2 0x8fc
0x304 MUL
0x305 DUP3
0x306 PUSH1 0x40
0x308 MLOAD
0x309 PUSH1 0x0
0x30b PUSH1 0x40
0x30d MLOAD
0x30e DUP1
0x30f DUP4
0x310 SUB
0x311 DUP2
0x312 DUP6
0x313 DUP9
0x314 DUP9
0x315 CALL
0x316 SWAP4
0x317 POP
0x318 POP
0x319 POP
0x31a POP
0x31b ISZERO
0x31c ISZERO
0x31d PUSH2 0x325
0x320 JUMPI
---
0x2f2: JUMPDEST 
0x2f3: V277 = 0x0
0x2f5: V278 = S[0x0]
0x2f6: V279 = 0x1
0x2f8: V280 = 0xa0
0x2fa: V281 = 0x2
0x2fc: V282 = EXP 0x2 0xa0
0x2fd: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fe: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x300: V285 = ISZERO V80
0x301: V286 = 0x8fc
0x304: V287 = MUL 0x8fc V285
0x306: V288 = 0x40
0x308: V289 = M[0x40]
0x309: V290 = 0x0
0x30b: V291 = 0x40
0x30d: V292 = M[0x40]
0x310: V293 = SUB V289 V292
0x315: V294 = CALL V287 V284 V80 V292 V293 V292 0x0
0x31b: V295 = ISZERO V294
0x31c: V296 = ISZERO V295
0x31d: V297 = 0x325
0x320: JUMPI 0x325 V296
---
Entry stack: [V12, 0xe8, V80]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe8, V80]

================================

Block 0x321
[0x321:0x324]
---
Predecessors: [0x2f2]
Successors: []
---
0x321 PUSH1 0x0
0x323 DUP1
0x324 REVERT
---
0x321: V298 = 0x0
0x324: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V80]

================================

Block 0x325
[0x325:0x325]
---
Predecessors: [0x2f2]
Successors: [0x326]
---
0x325 JUMPDEST
---
0x325: JUMPDEST 
---
Entry stack: [V12, 0xe8, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V80]

================================

Block 0x326
[0x326:0x326]
---
Predecessors: [0x325]
Successors: [0x327]
---
0x326 JUMPDEST
---
0x326: JUMPDEST 
---
Entry stack: [V12, 0xe8, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V80]

================================

Block 0x327
[0x327:0x329]
---
Predecessors: [0x326]
Successors: [0xe8]
---
0x327 JUMPDEST
0x328 POP
0x329 JUMP
---
0x327: JUMPDEST 
0x329: JUMP 0xe8
---
Entry stack: [V12, 0xe8, V80]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x32a
[0x32a:0x340]
---
Predecessors: [0x122]
Successors: [0x341, 0x345]
---
0x32a JUMPDEST
0x32b PUSH1 0x0
0x32d SLOAD
0x32e CALLER
0x32f PUSH1 0x1
0x331 PUSH1 0xa0
0x333 PUSH1 0x2
0x335 EXP
0x336 SUB
0x337 SWAP1
0x338 DUP2
0x339 AND
0x33a SWAP2
0x33b AND
0x33c EQ
0x33d PUSH2 0x345
0x340 JUMPI
---
0x32a: JUMPDEST 
0x32b: V299 = 0x0
0x32d: V300 = S[0x0]
0x32e: V301 = CALLER
0x32f: V302 = 0x1
0x331: V303 = 0xa0
0x333: V304 = 0x2
0x335: V305 = EXP 0x2 0xa0
0x336: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x339: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x33b: V308 = AND V300 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V309 = EQ V308 V307
0x33d: V310 = 0x345
0x340: JUMPI 0x345 V309
---
Entry stack: [V12, 0xe8, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V94]

================================

Block 0x341
[0x341:0x344]
---
Predecessors: [0x32a]
Successors: []
---
0x341 PUSH1 0x0
0x343 DUP1
0x344 REVERT
---
0x341: V311 = 0x0
0x344: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V94]

================================

Block 0x345
[0x345:0x36d]
---
Predecessors: [0x32a]
Successors: [0x36e]
---
0x345 JUMPDEST
0x346 PUSH1 0x1
0x348 DUP1
0x349 SLOAD
0x34a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35f NOT
0x360 AND
0x361 PUSH1 0x1
0x363 PUSH1 0xa0
0x365 PUSH1 0x2
0x367 EXP
0x368 SUB
0x369 DUP4
0x36a AND
0x36b OR
0x36c SWAP1
0x36d SSTORE
---
0x345: JUMPDEST 
0x346: V312 = 0x1
0x349: V313 = S[0x1]
0x34a: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x35f: V315 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x360: V316 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V313
0x361: V317 = 0x1
0x363: V318 = 0xa0
0x365: V319 = 0x2
0x367: V320 = EXP 0x2 0xa0
0x368: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36a: V322 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x36b: V323 = OR V322 V316
0x36d: S[0x1] = V323
---
Entry stack: [V12, 0xe8, V94]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe8, V94]

================================

Block 0x36e
[0x36e:0x36e]
---
Predecessors: [0x345]
Successors: [0x36f]
---
0x36e JUMPDEST
---
0x36e: JUMPDEST 
---
Entry stack: [V12, 0xe8, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V94]

================================

Block 0x36f
[0x36f:0x371]
---
Predecessors: [0x36e]
Successors: [0xe8]
---
0x36f JUMPDEST
0x370 POP
0x371 JUMP
---
0x36f: JUMPDEST 
0x371: JUMP 0xe8
---
Entry stack: [V12, 0xe8, V94]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x372
[0x372:0x380]
---
Predecessors: [0x143]
Successors: [0x14b]
---
0x372 JUMPDEST
0x373 PUSH1 0x3
0x375 SLOAD
0x376 PUSH1 0x1
0x378 PUSH1 0xa0
0x37a PUSH1 0x2
0x37c EXP
0x37d SUB
0x37e AND
0x37f DUP2
0x380 JUMP
---
0x372: JUMPDEST 
0x373: V324 = 0x3
0x375: V325 = S[0x3]
0x376: V326 = 0x1
0x378: V327 = 0xa0
0x37a: V328 = 0x2
0x37c: V329 = EXP 0x2 0xa0
0x37d: V330 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37e: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x380: JUMP 0x14b
---
Entry stack: [V12, 0x14b]
Stack pops: 1
Stack additions: [S0, V331]
Exit stack: [V12, 0x14b, V331]

================================

Block 0x381
[0x381:0x393]
---
Predecessors: [0x172]
Successors: [0x394, 0x398]
---
0x381 JUMPDEST
0x382 PUSH1 0x2
0x384 SLOAD
0x385 PUSH1 0x1
0x387 PUSH1 0xa0
0x389 PUSH1 0x2
0x38b EXP
0x38c SUB
0x38d AND
0x38e ISZERO
0x38f ISZERO
0x390 PUSH2 0x398
0x393 JUMPI
---
0x381: JUMPDEST 
0x382: V332 = 0x2
0x384: V333 = S[0x2]
0x385: V334 = 0x1
0x387: V335 = 0xa0
0x389: V336 = 0x2
0x38b: V337 = EXP 0x2 0xa0
0x38c: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38d: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x38e: V340 = ISZERO V339
0x38f: V341 = ISZERO V340
0x390: V342 = 0x398
0x393: JUMPI 0x398 V341
---
Entry stack: [V12, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8]

================================

Block 0x394
[0x394:0x397]
---
Predecessors: [0x381]
Successors: []
---
0x394 PUSH1 0x0
0x396 DUP1
0x397 REVERT
---
0x394: V343 = 0x0
0x397: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8]

================================

Block 0x398
[0x398:0x3ae]
---
Predecessors: [0x381]
Successors: [0x3af, 0x3b3]
---
0x398 JUMPDEST
0x399 PUSH1 0x2
0x39b SLOAD
0x39c CALLER
0x39d PUSH1 0x1
0x39f PUSH1 0xa0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 SUB
0x3a5 SWAP1
0x3a6 DUP2
0x3a7 AND
0x3a8 SWAP2
0x3a9 AND
0x3aa EQ
0x3ab PUSH2 0x3b3
0x3ae JUMPI
---
0x398: JUMPDEST 
0x399: V344 = 0x2
0x39b: V345 = S[0x2]
0x39c: V346 = CALLER
0x39d: V347 = 0x1
0x39f: V348 = 0xa0
0x3a1: V349 = 0x2
0x3a3: V350 = EXP 0x2 0xa0
0x3a4: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x3a9: V353 = AND V345 0xffffffffffffffffffffffffffffffffffffffff
0x3aa: V354 = EQ V353 V352
0x3ab: V355 = 0x3b3
0x3ae: JUMPI 0x3b3 V354
---
Entry stack: [V12, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8]

================================

Block 0x3af
[0x3af:0x3b2]
---
Predecessors: [0x398]
Successors: []
---
0x3af PUSH1 0x0
0x3b1 DUP1
0x3b2 REVERT
---
0x3af: V356 = 0x0
0x3b2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8]

================================

Block 0x3b3
[0x3b3:0x3e2]
---
Predecessors: [0x398]
Successors: [0x3e3]
---
0x3b3 JUMPDEST
0x3b4 PUSH1 0x2
0x3b6 SLOAD
0x3b7 PUSH1 0x0
0x3b9 DUP1
0x3ba SLOAD
0x3bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d0 NOT
0x3d1 AND
0x3d2 PUSH1 0x1
0x3d4 PUSH1 0xa0
0x3d6 PUSH1 0x2
0x3d8 EXP
0x3d9 SUB
0x3da SWAP1
0x3db SWAP3
0x3dc AND
0x3dd SWAP2
0x3de SWAP1
0x3df SWAP2
0x3e0 OR
0x3e1 SWAP1
0x3e2 SSTORE
---
0x3b3: JUMPDEST 
0x3b4: V357 = 0x2
0x3b6: V358 = S[0x2]
0x3b7: V359 = 0x0
0x3ba: V360 = S[0x0]
0x3bb: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V362 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3d1: V363 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V360
0x3d2: V364 = 0x1
0x3d4: V365 = 0xa0
0x3d6: V366 = 0x2
0x3d8: V367 = EXP 0x2 0xa0
0x3d9: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dc: V369 = AND V358 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V370 = OR V369 V363
0x3e2: S[0x0] = V370
---
Entry stack: [V12, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8]

================================

Block 0x3e3
[0x3e3:0x3e4]
---
Predecessors: [0x3b3]
Successors: [0xe8]
---
0x3e3 JUMPDEST
0x3e4 JUMP
---
0x3e3: JUMPDEST 
0x3e4: JUMP 0xe8
---
Entry stack: [V12, 0xe8]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e5
[0x3e5:0x3f3]
---
Predecessors: [0x187]
Successors: [0x14b]
---
0x3e5 JUMPDEST
0x3e6 PUSH1 0x0
0x3e8 SLOAD
0x3e9 PUSH1 0x1
0x3eb PUSH1 0xa0
0x3ed PUSH1 0x2
0x3ef EXP
0x3f0 SUB
0x3f1 AND
0x3f2 DUP2
0x3f3 JUMP
---
0x3e5: JUMPDEST 
0x3e6: V371 = 0x0
0x3e8: V372 = S[0x0]
0x3e9: V373 = 0x1
0x3eb: V374 = 0xa0
0x3ed: V375 = 0x2
0x3ef: V376 = EXP 0x2 0xa0
0x3f0: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f1: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x3f3: JUMP 0x14b
---
Entry stack: [V12, 0x14b]
Stack pops: 1
Stack additions: [S0, V378]
Exit stack: [V12, 0x14b, V378]

================================

Block 0x3f4
[0x3f4:0x437]
---
Predecessors: [0x1b6]
Successors: [0x438, 0x43c]
---
0x3f4 JUMPDEST
0x3f5 PUSH1 0x3
0x3f7 SLOAD
0x3f8 PUSH1 0x1
0x3fa PUSH1 0xa0
0x3fc PUSH1 0x2
0x3fe EXP
0x3ff SUB
0x400 AND
0x401 PUSH4 0xea7f7a59
0x406 DUP3
0x407 PUSH1 0x40
0x409 MLOAD
0x40a PUSH1 0xe0
0x40c PUSH1 0x2
0x40e EXP
0x40f PUSH4 0xffffffff
0x414 DUP5
0x415 AND
0x416 MUL
0x417 DUP2
0x418 MSTORE
0x419 PUSH1 0x4
0x41b DUP2
0x41c ADD
0x41d SWAP2
0x41e SWAP1
0x41f SWAP2
0x420 MSTORE
0x421 PUSH1 0x24
0x423 ADD
0x424 PUSH1 0x0
0x426 PUSH1 0x40
0x428 MLOAD
0x429 DUP1
0x42a DUP4
0x42b SUB
0x42c DUP2
0x42d PUSH1 0x0
0x42f DUP8
0x430 DUP1
0x431 EXTCODESIZE
0x432 ISZERO
0x433 ISZERO
0x434 PUSH2 0x43c
0x437 JUMPI
---
0x3f4: JUMPDEST 
0x3f5: V379 = 0x3
0x3f7: V380 = S[0x3]
0x3f8: V381 = 0x1
0x3fa: V382 = 0xa0
0x3fc: V383 = 0x2
0x3fe: V384 = EXP 0x2 0xa0
0x3ff: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x400: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x401: V387 = 0xea7f7a59
0x407: V388 = 0x40
0x409: V389 = M[0x40]
0x40a: V390 = 0xe0
0x40c: V391 = 0x2
0x40e: V392 = EXP 0x2 0xe0
0x40f: V393 = 0xffffffff
0x415: V394 = AND 0xea7f7a59 0xffffffff
0x416: V395 = MUL 0xea7f7a59 0x100000000000000000000000000000000000000000000000000000000
0x418: M[V389] = 0xea7f7a5900000000000000000000000000000000000000000000000000000000
0x419: V396 = 0x4
0x41c: V397 = ADD V389 0x4
0x420: M[V397] = V146
0x421: V398 = 0x24
0x423: V399 = ADD 0x24 V389
0x424: V400 = 0x0
0x426: V401 = 0x40
0x428: V402 = M[0x40]
0x42b: V403 = SUB V399 V402
0x42d: V404 = 0x0
0x431: V405 = EXTCODESIZE V386
0x432: V406 = ISZERO V405
0x433: V407 = ISZERO V406
0x434: V408 = 0x43c
0x437: JUMPI 0x43c V407
---
Entry stack: [V12, 0xe8, V146]
Stack pops: 1
Stack additions: [S0, V386, 0xea7f7a59, V399, 0x0, V402, V403, V402, 0x0, V386]
Exit stack: [V12, 0xe8, V146, V386, 0xea7f7a59, V399, 0x0, V402, V403, V402, 0x0, V386]

================================

Block 0x438
[0x438:0x43b]
---
Predecessors: [0x3f4]
Successors: []
---
0x438 PUSH1 0x0
0x43a DUP1
0x43b REVERT
---
0x438: V409 = 0x0
0x43b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8, V146, V386, 0xea7f7a59, V399, 0x0, V402, V403, V402, 0x0, V386]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V146, V386, 0xea7f7a59, V399, 0x0, V402, V403, V402, 0x0, V386]

================================

Block 0x43c
[0x43c:0x448]
---
Predecessors: [0x3f4]
Successors: [0x449, 0x44d]
---
0x43c JUMPDEST
0x43d PUSH2 0x2c6
0x440 GAS
0x441 SUB
0x442 CALL
0x443 ISZERO
0x444 ISZERO
0x445 PUSH2 0x44d
0x448 JUMPI
---
0x43c: JUMPDEST 
0x43d: V410 = 0x2c6
0x440: V411 = GAS
0x441: V412 = SUB V411 0x2c6
0x442: V413 = CALL V412 V386 0x0 V402 V403 V402 0x0
0x443: V414 = ISZERO V413
0x444: V415 = ISZERO V414
0x445: V416 = 0x44d
0x448: JUMPI 0x44d V415
---
Entry stack: [V12, 0xe8, V146, V386, 0xea7f7a59, V399, 0x0, V402, V403, V402, 0x0, V386]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xe8, V146, V386, 0xea7f7a59, V399]

================================

Block 0x449
[0x449:0x44c]
---
Predecessors: [0x43c]
Successors: []
---
0x449 PUSH1 0x0
0x44b DUP1
0x44c REVERT
---
0x449: V417 = 0x0
0x44c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8, V146, V386, 0xea7f7a59, V399]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V146, V386, 0xea7f7a59, V399]

================================

Block 0x44d
[0x44d:0x450]
---
Predecessors: [0x43c]
Successors: [0x451]
---
0x44d JUMPDEST
0x44e POP
0x44f POP
0x450 POP
---
0x44d: JUMPDEST 
---
Entry stack: [V12, 0xe8, V146, V386, 0xea7f7a59, V399]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xe8, V146]

================================

Block 0x451
[0x451:0x453]
---
Predecessors: [0x44d]
Successors: [0xe8]
---
0x451 JUMPDEST
0x452 POP
0x453 JUMP
---
0x451: JUMPDEST 
0x453: JUMP 0xe8
---
Entry stack: [V12, 0xe8, V146]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x454
[0x454:0x46b]
---
Predecessors: [0x1ce]
Successors: [0x46c, 0x47f]
---
0x454 JUMPDEST
0x455 PUSH1 0x0
0x457 SLOAD
0x458 CALLER
0x459 PUSH1 0x1
0x45b PUSH1 0xa0
0x45d PUSH1 0x2
0x45f EXP
0x460 SUB
0x461 SWAP1
0x462 DUP2
0x463 AND
0x464 SWAP2
0x465 AND
0x466 EQ
0x467 DUP1
0x468 PUSH2 0x47f
0x46b JUMPI
---
0x454: JUMPDEST 
0x455: V418 = 0x0
0x457: V419 = S[0x0]
0x458: V420 = CALLER
0x459: V421 = 0x1
0x45b: V422 = 0xa0
0x45d: V423 = 0x2
0x45f: V424 = EXP 0x2 0xa0
0x460: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x463: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x465: V427 = AND V419 0xffffffffffffffffffffffffffffffffffffffff
0x466: V428 = EQ V427 V426
0x468: V429 = 0x47f
0x46b: JUMPI 0x47f V428
---
Entry stack: [V12, 0xe8, V154, V156, V158, V160]
Stack pops: 0
Stack additions: [V428]
Exit stack: [V12, 0xe8, V154, V156, V158, V160, V428]

================================

Block 0x46c
[0x46c:0x47e]
---
Predecessors: [0x454]
Successors: [0x47f]
---
0x46c POP
0x46d PUSH1 0x1
0x46f SLOAD
0x470 CALLER
0x471 PUSH1 0x1
0x473 PUSH1 0xa0
0x475 PUSH1 0x2
0x477 EXP
0x478 SUB
0x479 SWAP1
0x47a DUP2
0x47b AND
0x47c SWAP2
0x47d AND
0x47e EQ
---
0x46d: V430 = 0x1
0x46f: V431 = S[0x1]
0x470: V432 = CALLER
0x471: V433 = 0x1
0x473: V434 = 0xa0
0x475: V435 = 0x2
0x477: V436 = EXP 0x2 0xa0
0x478: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47b: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x47d: V439 = AND V431 0xffffffffffffffffffffffffffffffffffffffff
0x47e: V440 = EQ V439 V438
---
Entry stack: [V12, 0xe8, V154, V156, V158, V160, V428]
Stack pops: 1
Stack additions: [V440]
Exit stack: [V12, 0xe8, V154, V156, V158, V160, V440]

================================

Block 0x47f
[0x47f:0x485]
---
Predecessors: [0x454, 0x46c]
Successors: [0x486, 0x48a]
---
0x47f JUMPDEST
0x480 ISZERO
0x481 ISZERO
0x482 PUSH2 0x48a
0x485 JUMPI
---
0x47f: JUMPDEST 
0x480: V441 = ISZERO S0
0x481: V442 = ISZERO V441
0x482: V443 = 0x48a
0x485: JUMPI 0x48a V442
---
Entry stack: [V12, 0xe8, V154, V156, V158, V160, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xe8, V154, V156, V158, V160]

================================

Block 0x486
[0x486:0x489]
---
Predecessors: [0x47f]
Successors: []
---
0x486 PUSH1 0x0
0x488 DUP1
0x489 REVERT
---
0x486: V444 = 0x0
0x489: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8, V154, V156, V158, V160]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V154, V156, V158, V160]

================================

Block 0x48a
[0x48a:0x4e2]
---
Predecessors: [0x47f]
Successors: [0x4e3, 0x4e7]
---
0x48a JUMPDEST
0x48b PUSH1 0x3
0x48d SLOAD
0x48e PUSH1 0x1
0x490 PUSH1 0xa0
0x492 PUSH1 0x2
0x494 EXP
0x495 SUB
0x496 AND
0x497 PUSH4 0xb105126f
0x49c DUP6
0x49d DUP1
0x49e DUP7
0x49f DUP7
0x4a0 DUP7
0x4a1 PUSH1 0x40
0x4a3 MLOAD
0x4a4 PUSH1 0xe0
0x4a6 PUSH1 0x2
0x4a8 EXP
0x4a9 PUSH4 0xffffffff
0x4ae DUP9
0x4af AND
0x4b0 MUL
0x4b1 DUP2
0x4b2 MSTORE
0x4b3 PUSH1 0x4
0x4b5 DUP2
0x4b6 ADD
0x4b7 SWAP5
0x4b8 SWAP1
0x4b9 SWAP5
0x4ba MSTORE
0x4bb PUSH1 0x24
0x4bd DUP5
0x4be ADD
0x4bf SWAP3
0x4c0 SWAP1
0x4c1 SWAP3
0x4c2 MSTORE
0x4c3 PUSH1 0x44
0x4c5 DUP4
0x4c6 ADD
0x4c7 MSTORE
0x4c8 PUSH1 0x64
0x4ca DUP3
0x4cb ADD
0x4cc MSTORE
0x4cd PUSH1 0x84
0x4cf ADD
0x4d0 PUSH1 0x0
0x4d2 PUSH1 0x40
0x4d4 MLOAD
0x4d5 DUP1
0x4d6 DUP4
0x4d7 SUB
0x4d8 DUP2
0x4d9 DUP6
0x4da DUP9
0x4db DUP1
0x4dc EXTCODESIZE
0x4dd ISZERO
0x4de ISZERO
0x4df PUSH2 0x4e7
0x4e2 JUMPI
---
0x48a: JUMPDEST 
0x48b: V445 = 0x3
0x48d: V446 = S[0x3]
0x48e: V447 = 0x1
0x490: V448 = 0xa0
0x492: V449 = 0x2
0x494: V450 = EXP 0x2 0xa0
0x495: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x496: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x497: V453 = 0xb105126f
0x4a1: V454 = 0x40
0x4a3: V455 = M[0x40]
0x4a4: V456 = 0xe0
0x4a6: V457 = 0x2
0x4a8: V458 = EXP 0x2 0xe0
0x4a9: V459 = 0xffffffff
0x4af: V460 = AND 0xb105126f 0xffffffff
0x4b0: V461 = MUL 0xb105126f 0x100000000000000000000000000000000000000000000000000000000
0x4b2: M[V455] = 0xb105126f00000000000000000000000000000000000000000000000000000000
0x4b3: V462 = 0x4
0x4b6: V463 = ADD V455 0x4
0x4ba: M[V463] = V154
0x4bb: V464 = 0x24
0x4be: V465 = ADD V455 0x24
0x4c2: M[V465] = V156
0x4c3: V466 = 0x44
0x4c6: V467 = ADD V455 0x44
0x4c7: M[V467] = V158
0x4c8: V468 = 0x64
0x4cb: V469 = ADD V455 0x64
0x4cc: M[V469] = V160
0x4cd: V470 = 0x84
0x4cf: V471 = ADD 0x84 V455
0x4d0: V472 = 0x0
0x4d2: V473 = 0x40
0x4d4: V474 = M[0x40]
0x4d7: V475 = SUB V471 V474
0x4dc: V476 = EXTCODESIZE V452
0x4dd: V477 = ISZERO V476
0x4de: V478 = ISZERO V477
0x4df: V479 = 0x4e7
0x4e2: JUMPI 0x4e7 V478
---
Entry stack: [V12, 0xe8, V154, V156, V158, V160]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V452, 0xb105126f, S3, V471, 0x0, V474, V475, V474, S3, V452]
Exit stack: [V12, 0xe8, V154, V156, V158, V160, V452, 0xb105126f, V154, V471, 0x0, V474, V475, V474, V154, V452]

================================

Block 0x4e3
[0x4e3:0x4e6]
---
Predecessors: [0x48a]
Successors: []
---
0x4e3 PUSH1 0x0
0x4e5 DUP1
0x4e6 REVERT
---
0x4e3: V480 = 0x0
0x4e6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8, V154, V156, V158, V160, V452, 0xb105126f, V154, V471, 0x0, V474, V475, V474, V154, V452]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V154, V156, V158, V160, V452, 0xb105126f, V154, V471, 0x0, V474, V475, V474, V154, V452]

================================

Block 0x4e7
[0x4e7:0x4f3]
---
Predecessors: [0x48a]
Successors: [0x4f4, 0x4f8]
---
0x4e7 JUMPDEST
0x4e8 PUSH2 0x25ee
0x4eb GAS
0x4ec SUB
0x4ed CALL
0x4ee ISZERO
0x4ef ISZERO
0x4f0 PUSH2 0x4f8
0x4f3 JUMPI
---
0x4e7: JUMPDEST 
0x4e8: V481 = 0x25ee
0x4eb: V482 = GAS
0x4ec: V483 = SUB V482 0x25ee
0x4ed: V484 = CALL V483 V452 V154 V474 V475 V474 0x0
0x4ee: V485 = ISZERO V484
0x4ef: V486 = ISZERO V485
0x4f0: V487 = 0x4f8
0x4f3: JUMPI 0x4f8 V486
---
Entry stack: [V12, 0xe8, V154, V156, V158, V160, V452, 0xb105126f, V154, V471, 0x0, V474, V475, V474, V154, V452]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xe8, V154, V156, V158, V160, V452, 0xb105126f, V154, V471]

================================

Block 0x4f4
[0x4f4:0x4f7]
---
Predecessors: [0x4e7]
Successors: []
---
0x4f4 PUSH1 0x0
0x4f6 DUP1
0x4f7 REVERT
---
0x4f4: V488 = 0x0
0x4f7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8, V154, V156, V158, V160, V452, 0xb105126f, V154, V471]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V154, V156, V158, V160, V452, 0xb105126f, V154, V471]

================================

Block 0x4f8
[0x4f8:0x4fc]
---
Predecessors: [0x4e7]
Successors: [0x4fd]
---
0x4f8 JUMPDEST
0x4f9 POP
0x4fa POP
0x4fb POP
0x4fc POP
---
0x4f8: JUMPDEST 
---
Entry stack: [V12, 0xe8, V154, V156, V158, V160, V452, 0xb105126f, V154, V471]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xe8, V154, V156, V158, V160]

================================

Block 0x4fd
[0x4fd:0x4fd]
---
Predecessors: [0x4f8]
Successors: [0x4fe]
---
0x4fd JUMPDEST
---
0x4fd: JUMPDEST 
---
Entry stack: [V12, 0xe8, V154, V156, V158, V160]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V154, V156, V158, V160]

================================

Block 0x4fe
[0x4fe:0x503]
---
Predecessors: [0x4fd]
Successors: [0xe8]
---
0x4fe JUMPDEST
0x4ff POP
0x500 POP
0x501 POP
0x502 POP
0x503 JUMP
---
0x4fe: JUMPDEST 
0x503: JUMP 0xe8
---
Entry stack: [V12, 0xe8, V154, V156, V158, V160]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x504
[0x504:0x51a]
---
Predecessors: [0x1ef]
Successors: [0x51b, 0x51f]
---
0x504 JUMPDEST
0x505 PUSH1 0x0
0x507 SLOAD
0x508 CALLER
0x509 PUSH1 0x1
0x50b PUSH1 0xa0
0x50d PUSH1 0x2
0x50f EXP
0x510 SUB
0x511 SWAP1
0x512 DUP2
0x513 AND
0x514 SWAP2
0x515 AND
0x516 EQ
0x517 PUSH2 0x51f
0x51a JUMPI
---
0x504: JUMPDEST 
0x505: V489 = 0x0
0x507: V490 = S[0x0]
0x508: V491 = CALLER
0x509: V492 = 0x1
0x50b: V493 = 0xa0
0x50d: V494 = 0x2
0x50f: V495 = EXP 0x2 0xa0
0x510: V496 = SUB 0x10000000000000000000000000000000000000000 0x1
0x513: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x515: V498 = AND V490 0xffffffffffffffffffffffffffffffffffffffff
0x516: V499 = EQ V498 V497
0x517: V500 = 0x51f
0x51a: JUMPI 0x51f V499
---
Entry stack: [V12, 0xe8, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V174]

================================

Block 0x51b
[0x51b:0x51e]
---
Predecessors: [0x504]
Successors: []
---
0x51b PUSH1 0x0
0x51d DUP1
0x51e REVERT
---
0x51b: V501 = 0x0
0x51e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V174]

================================

Block 0x51f
[0x51f:0x547]
---
Predecessors: [0x504]
Successors: [0x548]
---
0x51f JUMPDEST
0x520 PUSH1 0x2
0x522 DUP1
0x523 SLOAD
0x524 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x539 NOT
0x53a AND
0x53b PUSH1 0x1
0x53d PUSH1 0xa0
0x53f PUSH1 0x2
0x541 EXP
0x542 SUB
0x543 DUP4
0x544 AND
0x545 OR
0x546 SWAP1
0x547 SSTORE
---
0x51f: JUMPDEST 
0x520: V502 = 0x2
0x523: V503 = S[0x2]
0x524: V504 = 0xffffffffffffffffffffffffffffffffffffffff
0x539: V505 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x53a: V506 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V503
0x53b: V507 = 0x1
0x53d: V508 = 0xa0
0x53f: V509 = 0x2
0x541: V510 = EXP 0x2 0xa0
0x542: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x544: V512 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x545: V513 = OR V512 V506
0x547: S[0x2] = V513
---
Entry stack: [V12, 0xe8, V174]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe8, V174]

================================

Block 0x548
[0x548:0x548]
---
Predecessors: [0x51f]
Successors: [0x549]
---
0x548 JUMPDEST
---
0x548: JUMPDEST 
---
Entry stack: [V12, 0xe8, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V174]

================================

Block 0x549
[0x549:0x54b]
---
Predecessors: [0x548]
Successors: [0xe8]
---
0x549 JUMPDEST
0x54a POP
0x54b JUMP
---
0x549: JUMPDEST 
0x54b: JUMP 0xe8
---
Entry stack: [V12, 0xe8, V174]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x54c
[0x54c:0x55a]
---
Predecessors: [0x210]
Successors: [0x14b]
---
0x54c JUMPDEST
0x54d PUSH1 0x2
0x54f SLOAD
0x550 PUSH1 0x1
0x552 PUSH1 0xa0
0x554 PUSH1 0x2
0x556 EXP
0x557 SUB
0x558 AND
0x559 DUP2
0x55a JUMP
---
0x54c: JUMPDEST 
0x54d: V514 = 0x2
0x54f: V515 = S[0x2]
0x550: V516 = 0x1
0x552: V517 = 0xa0
0x554: V518 = 0x2
0x556: V519 = EXP 0x2 0xa0
0x557: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x558: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x55a: JUMP 0x14b
---
Entry stack: [V12, 0x14b]
Stack pops: 1
Stack additions: [S0, V521]
Exit stack: [V12, 0x14b, V521]

================================

Block 0x55b
[0x55b:0x5a4]
---
Predecessors: [0x23f]
Successors: [0x5a5, 0x5a9]
---
0x55b JUMPDEST
0x55c PUSH1 0x3
0x55e SLOAD
0x55f PUSH1 0x0
0x561 SWAP1
0x562 PUSH1 0x1
0x564 PUSH1 0xa0
0x566 PUSH1 0x2
0x568 EXP
0x569 SUB
0x56a ADDRESS
0x56b DUP2
0x56c AND
0x56d SWAP2
0x56e AND
0x56f PUSH4 0xf851a440
0x574 DUP4
0x575 PUSH1 0x40
0x577 MLOAD
0x578 PUSH1 0x20
0x57a ADD
0x57b MSTORE
0x57c PUSH1 0x40
0x57e MLOAD
0x57f DUP2
0x580 PUSH4 0xffffffff
0x585 AND
0x586 PUSH1 0xe0
0x588 PUSH1 0x2
0x58a EXP
0x58b MUL
0x58c DUP2
0x58d MSTORE
0x58e PUSH1 0x4
0x590 ADD
0x591 PUSH1 0x20
0x593 PUSH1 0x40
0x595 MLOAD
0x596 DUP1
0x597 DUP4
0x598 SUB
0x599 DUP2
0x59a PUSH1 0x0
0x59c DUP8
0x59d DUP1
0x59e EXTCODESIZE
0x59f ISZERO
0x5a0 ISZERO
0x5a1 PUSH2 0x5a9
0x5a4 JUMPI
---
0x55b: JUMPDEST 
0x55c: V522 = 0x3
0x55e: V523 = S[0x3]
0x55f: V524 = 0x0
0x562: V525 = 0x1
0x564: V526 = 0xa0
0x566: V527 = 0x2
0x568: V528 = EXP 0x2 0xa0
0x569: V529 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56a: V530 = ADDRESS
0x56c: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x56e: V532 = AND V523 0xffffffffffffffffffffffffffffffffffffffff
0x56f: V533 = 0xf851a440
0x575: V534 = 0x40
0x577: V535 = M[0x40]
0x578: V536 = 0x20
0x57a: V537 = ADD 0x20 V535
0x57b: M[V537] = 0x0
0x57c: V538 = 0x40
0x57e: V539 = M[0x40]
0x580: V540 = 0xffffffff
0x585: V541 = AND 0xffffffff 0xf851a440
0x586: V542 = 0xe0
0x588: V543 = 0x2
0x58a: V544 = EXP 0x2 0xe0
0x58b: V545 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf851a440
0x58d: M[V539] = 0xf851a44000000000000000000000000000000000000000000000000000000000
0x58e: V546 = 0x4
0x590: V547 = ADD 0x4 V539
0x591: V548 = 0x20
0x593: V549 = 0x40
0x595: V550 = M[0x40]
0x598: V551 = SUB V547 V550
0x59a: V552 = 0x0
0x59e: V553 = EXTCODESIZE V532
0x59f: V554 = ISZERO V553
0x5a0: V555 = ISZERO V554
0x5a1: V556 = 0x5a9
0x5a4: JUMPI 0x5a9 V555
---
Entry stack: [V12, 0x247]
Stack pops: 0
Stack additions: [0x0, V531, V532, 0xf851a440, V547, 0x20, V550, V551, V550, 0x0, V532]
Exit stack: [V12, 0x247, 0x0, V531, V532, 0xf851a440, V547, 0x20, V550, V551, V550, 0x0, V532]

================================

Block 0x5a5
[0x5a5:0x5a8]
---
Predecessors: [0x55b]
Successors: []
---
0x5a5 PUSH1 0x0
0x5a7 DUP1
0x5a8 REVERT
---
0x5a5: V557 = 0x0
0x5a8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x247, 0x0, V531, V532, 0xf851a440, V547, 0x20, V550, V551, V550, 0x0, V532]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x247, 0x0, V531, V532, 0xf851a440, V547, 0x20, V550, V551, V550, 0x0, V532]

================================

Block 0x5a9
[0x5a9:0x5b5]
---
Predecessors: [0x55b]
Successors: [0x5b6, 0x5ba]
---
0x5a9 JUMPDEST
0x5aa PUSH2 0x2c6
0x5ad GAS
0x5ae SUB
0x5af CALL
0x5b0 ISZERO
0x5b1 ISZERO
0x5b2 PUSH2 0x5ba
0x5b5 JUMPI
---
0x5a9: JUMPDEST 
0x5aa: V558 = 0x2c6
0x5ad: V559 = GAS
0x5ae: V560 = SUB V559 0x2c6
0x5af: V561 = CALL V560 V532 0x0 V550 V551 V550 0x20
0x5b0: V562 = ISZERO V561
0x5b1: V563 = ISZERO V562
0x5b2: V564 = 0x5ba
0x5b5: JUMPI 0x5ba V563
---
Entry stack: [V12, 0x247, 0x0, V531, V532, 0xf851a440, V547, 0x20, V550, V551, V550, 0x0, V532]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x247, 0x0, V531, V532, 0xf851a440, V547]

================================

Block 0x5b6
[0x5b6:0x5b9]
---
Predecessors: [0x5a9]
Successors: []
---
0x5b6 PUSH1 0x0
0x5b8 DUP1
0x5b9 REVERT
---
0x5b6: V565 = 0x0
0x5b9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x247, 0x0, V531, V532, 0xf851a440, V547]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x247, 0x0, V531, V532, 0xf851a440, V547]

================================

Block 0x5ba
[0x5ba:0x5d4]
---
Predecessors: [0x5a9]
Successors: [0x5d5, 0x5dc]
---
0x5ba JUMPDEST
0x5bb POP
0x5bc POP
0x5bd POP
0x5be PUSH1 0x40
0x5c0 MLOAD
0x5c1 DUP1
0x5c2 MLOAD
0x5c3 SWAP1
0x5c4 POP
0x5c5 PUSH1 0x1
0x5c7 PUSH1 0xa0
0x5c9 PUSH1 0x2
0x5cb EXP
0x5cc SUB
0x5cd AND
0x5ce EQ
0x5cf ISZERO
0x5d0 ISZERO
0x5d1 PUSH2 0x5dc
0x5d4 JUMPI
---
0x5ba: JUMPDEST 
0x5be: V566 = 0x40
0x5c0: V567 = M[0x40]
0x5c2: V568 = M[V567]
0x5c5: V569 = 0x1
0x5c7: V570 = 0xa0
0x5c9: V571 = 0x2
0x5cb: V572 = EXP 0x2 0xa0
0x5cc: V573 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cd: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V568
0x5ce: V575 = EQ V574 V531
0x5cf: V576 = ISZERO V575
0x5d0: V577 = ISZERO V576
0x5d1: V578 = 0x5dc
0x5d4: JUMPI 0x5dc V577
---
Entry stack: [V12, 0x247, 0x0, V531, V532, 0xf851a440, V547]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x247, 0x0]

================================

Block 0x5d5
[0x5d5:0x5db]
---
Predecessors: [0x5ba]
Successors: [0x641]
---
0x5d5 POP
0x5d6 PUSH1 0x0
0x5d8 PUSH2 0x641
0x5db JUMP
---
0x5d6: V579 = 0x0
0x5d8: V580 = 0x641
0x5db: JUMP 0x641
---
Entry stack: [V12, 0x247, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x247, 0x0]

================================

Block 0x5dc
[0x5dc:0x61f]
---
Predecessors: [0x5ba]
Successors: [0x620, 0x624]
---
0x5dc JUMPDEST
0x5dd PUSH1 0x3
0x5df SLOAD
0x5e0 PUSH1 0x1
0x5e2 PUSH1 0xa0
0x5e4 PUSH1 0x2
0x5e6 EXP
0x5e7 SUB
0x5e8 AND
0x5e9 PUSH4 0xbca7e96b
0x5ee PUSH1 0x0
0x5f0 PUSH1 0x40
0x5f2 MLOAD
0x5f3 PUSH1 0x20
0x5f5 ADD
0x5f6 MSTORE
0x5f7 PUSH1 0x40
0x5f9 MLOAD
0x5fa DUP2
0x5fb PUSH4 0xffffffff
0x600 AND
0x601 PUSH1 0xe0
0x603 PUSH1 0x2
0x605 EXP
0x606 MUL
0x607 DUP2
0x608 MSTORE
0x609 PUSH1 0x4
0x60b ADD
0x60c PUSH1 0x20
0x60e PUSH1 0x40
0x610 MLOAD
0x611 DUP1
0x612 DUP4
0x613 SUB
0x614 DUP2
0x615 PUSH1 0x0
0x617 DUP8
0x618 DUP1
0x619 EXTCODESIZE
0x61a ISZERO
0x61b ISZERO
0x61c PUSH2 0x624
0x61f JUMPI
---
0x5dc: JUMPDEST 
0x5dd: V581 = 0x3
0x5df: V582 = S[0x3]
0x5e0: V583 = 0x1
0x5e2: V584 = 0xa0
0x5e4: V585 = 0x2
0x5e6: V586 = EXP 0x2 0xa0
0x5e7: V587 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e8: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x5e9: V589 = 0xbca7e96b
0x5ee: V590 = 0x0
0x5f0: V591 = 0x40
0x5f2: V592 = M[0x40]
0x5f3: V593 = 0x20
0x5f5: V594 = ADD 0x20 V592
0x5f6: M[V594] = 0x0
0x5f7: V595 = 0x40
0x5f9: V596 = M[0x40]
0x5fb: V597 = 0xffffffff
0x600: V598 = AND 0xffffffff 0xbca7e96b
0x601: V599 = 0xe0
0x603: V600 = 0x2
0x605: V601 = EXP 0x2 0xe0
0x606: V602 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xbca7e96b
0x608: M[V596] = 0xbca7e96b00000000000000000000000000000000000000000000000000000000
0x609: V603 = 0x4
0x60b: V604 = ADD 0x4 V596
0x60c: V605 = 0x20
0x60e: V606 = 0x40
0x610: V607 = M[0x40]
0x613: V608 = SUB V604 V607
0x615: V609 = 0x0
0x619: V610 = EXTCODESIZE V588
0x61a: V611 = ISZERO V610
0x61b: V612 = ISZERO V611
0x61c: V613 = 0x624
0x61f: JUMPI 0x624 V612
---
Entry stack: [V12, 0x247, 0x0]
Stack pops: 0
Stack additions: [V588, 0xbca7e96b, V604, 0x20, V607, V608, V607, 0x0, V588]
Exit stack: [V12, 0x247, 0x0, V588, 0xbca7e96b, V604, 0x20, V607, V608, V607, 0x0, V588]

================================

Block 0x620
[0x620:0x623]
---
Predecessors: [0x5dc]
Successors: []
---
0x620 PUSH1 0x0
0x622 DUP1
0x623 REVERT
---
0x620: V614 = 0x0
0x623: REVERT 0x0 0x0
---
Entry stack: [V12, 0x247, 0x0, V588, 0xbca7e96b, V604, 0x20, V607, V608, V607, 0x0, V588]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x247, 0x0, V588, 0xbca7e96b, V604, 0x20, V607, V608, V607, 0x0, V588]

================================

Block 0x624
[0x624:0x630]
---
Predecessors: [0x5dc]
Successors: [0x631, 0x635]
---
0x624 JUMPDEST
0x625 PUSH2 0x2c6
0x628 GAS
0x629 SUB
0x62a CALL
0x62b ISZERO
0x62c ISZERO
0x62d PUSH2 0x635
0x630 JUMPI
---
0x624: JUMPDEST 
0x625: V615 = 0x2c6
0x628: V616 = GAS
0x629: V617 = SUB V616 0x2c6
0x62a: V618 = CALL V617 V588 0x0 V607 V608 V607 0x20
0x62b: V619 = ISZERO V618
0x62c: V620 = ISZERO V619
0x62d: V621 = 0x635
0x630: JUMPI 0x635 V620
---
Entry stack: [V12, 0x247, 0x0, V588, 0xbca7e96b, V604, 0x20, V607, V608, V607, 0x0, V588]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x247, 0x0, V588, 0xbca7e96b, V604]

================================

Block 0x631
[0x631:0x634]
---
Predecessors: [0x624]
Successors: []
---
0x631 PUSH1 0x0
0x633 DUP1
0x634 REVERT
---
0x631: V622 = 0x0
0x634: REVERT 0x0 0x0
---
Entry stack: [V12, 0x247, 0x0, V588, 0xbca7e96b, V604]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x247, 0x0, V588, 0xbca7e96b, V604]

================================

Block 0x635
[0x635:0x640]
---
Predecessors: [0x624]
Successors: [0x641]
---
0x635 JUMPDEST
0x636 POP
0x637 POP
0x638 POP
0x639 PUSH1 0x40
0x63b MLOAD
0x63c DUP1
0x63d MLOAD
0x63e SWAP2
0x63f POP
0x640 POP
---
0x635: JUMPDEST 
0x639: V623 = 0x40
0x63b: V624 = M[0x40]
0x63d: V625 = M[V624]
---
Entry stack: [V12, 0x247, 0x0, V588, 0xbca7e96b, V604]
Stack pops: 4
Stack additions: [V625]
Exit stack: [V12, 0x247, V625]

================================

Block 0x641
[0x641:0x643]
---
Predecessors: [0x5d5, 0x635]
Successors: [0x247]
---
0x641 JUMPDEST
0x642 SWAP1
0x643 JUMP
---
0x641: JUMPDEST 
0x643: JUMP 0x247
---
Entry stack: [V12, 0x247, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x644
[0x644:0x65a]
---
Predecessors: [0x266]
Successors: [0x65b, 0x65f]
---
0x644 JUMPDEST
0x645 PUSH1 0x0
0x647 SLOAD
0x648 CALLER
0x649 PUSH1 0x1
0x64b PUSH1 0xa0
0x64d PUSH1 0x2
0x64f EXP
0x650 SUB
0x651 SWAP1
0x652 DUP2
0x653 AND
0x654 SWAP2
0x655 AND
0x656 EQ
0x657 PUSH2 0x65f
0x65a JUMPI
---
0x644: JUMPDEST 
0x645: V626 = 0x0
0x647: V627 = S[0x0]
0x648: V628 = CALLER
0x649: V629 = 0x1
0x64b: V630 = 0xa0
0x64d: V631 = 0x2
0x64f: V632 = EXP 0x2 0xa0
0x650: V633 = SUB 0x10000000000000000000000000000000000000000 0x1
0x653: V634 = AND 0xffffffffffffffffffffffffffffffffffffffff V628
0x655: V635 = AND V627 0xffffffffffffffffffffffffffffffffffffffff
0x656: V636 = EQ V635 V634
0x657: V637 = 0x65f
0x65a: JUMPI 0x65f V636
---
Entry stack: [V12, 0xe8, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V222]

================================

Block 0x65b
[0x65b:0x65e]
---
Predecessors: [0x644]
Successors: []
---
0x65b PUSH1 0x0
0x65d DUP1
0x65e REVERT
---
0x65b: V638 = 0x0
0x65e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe8, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V222]

================================

Block 0x65f
[0x65f:0x687]
---
Predecessors: [0x644]
Successors: [0x688]
---
0x65f JUMPDEST
0x660 PUSH1 0x3
0x662 DUP1
0x663 SLOAD
0x664 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x679 NOT
0x67a AND
0x67b PUSH1 0x1
0x67d PUSH1 0xa0
0x67f PUSH1 0x2
0x681 EXP
0x682 SUB
0x683 DUP4
0x684 AND
0x685 OR
0x686 SWAP1
0x687 SSTORE
---
0x65f: JUMPDEST 
0x660: V639 = 0x3
0x663: V640 = S[0x3]
0x664: V641 = 0xffffffffffffffffffffffffffffffffffffffff
0x679: V642 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x67a: V643 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V640
0x67b: V644 = 0x1
0x67d: V645 = 0xa0
0x67f: V646 = 0x2
0x681: V647 = EXP 0x2 0xa0
0x682: V648 = SUB 0x10000000000000000000000000000000000000000 0x1
0x684: V649 = AND V222 0xffffffffffffffffffffffffffffffffffffffff
0x685: V650 = OR V649 V643
0x687: S[0x3] = V650
---
Entry stack: [V12, 0xe8, V222]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe8, V222]

================================

Block 0x688
[0x688:0x688]
---
Predecessors: [0x65f]
Successors: [0x689]
---
0x688 JUMPDEST
---
0x688: JUMPDEST 
---
Entry stack: [V12, 0xe8, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe8, V222]

================================

Block 0x689
[0x689:0x68b]
---
Predecessors: [0x688]
Successors: [0xe8]
---
0x689 JUMPDEST
0x68a POP
0x68b JUMP
---
0x689: JUMPDEST 
0x68b: JUMP 0xe8
---
Entry stack: [V12, 0xe8, V222]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x68c
[0x68c:0x69a]
---
Predecessors: [0x287]
Successors: [0x14b]
---
0x68c JUMPDEST
0x68d PUSH1 0x1
0x68f SLOAD
0x690 PUSH1 0x1
0x692 PUSH1 0xa0
0x694 PUSH1 0x2
0x696 EXP
0x697 SUB
0x698 AND
0x699 DUP2
0x69a JUMP
---
0x68c: JUMPDEST 
0x68d: V651 = 0x1
0x68f: V652 = S[0x1]
0x690: V653 = 0x1
0x692: V654 = 0xa0
0x694: V655 = 0x2
0x696: V656 = EXP 0x2 0xa0
0x697: V657 = SUB 0x10000000000000000000000000000000000000000 0x1
0x698: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff V652
0x69a: JUMP 0x14b
---
Entry stack: [V12, 0x14b]
Stack pops: 1
Stack additions: [S0, V658]
Exit stack: [V12, 0x14b, V658]

================================

Block 0x69b
[0x69b:0x6c9]
---
Predecessors: []
Successors: []
---
0x69b STOP
0x69c LOG1
0x69d PUSH6 0x627a7a723058
0x6a4 SHA3
0x6a5 MOD
0x6a6 SWAP1
0x6a7 MISSING 0xe4
0x6a8 MISSING 0xb5
0x6a9 MISSING 0xa6
0x6aa MISSING 0xbd
0x6ab PUSH30 0x5d3c517ad3b9678be532d051bfd5a268122109c9a43e0b30e40029
---
0x69b: STOP 
0x69c: LOG S0 S1 S2
0x69d: V659 = 0x627a7a723058
0x6a4: V660 = SHA3 0x627a7a723058 S3
0x6a5: V661 = MOD V660 S4
0x6a7: MISSING 0xe4
0x6a8: MISSING 0xb5
0x6a9: MISSING 0xa6
0x6aa: MISSING 0xbd
0x6ab: V662 = 0x5d3c517ad3b9678be532d051bfd5a268122109c9a43e0b30e40029
---
Entry stack: []
Stack pops: 0
Stack additions: [S5, V661, 0x5d3c517ad3b9678be532d051bfd5a268122109c9a43e0b30e40029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2b68b9c6
Entry block: 0xea
Exit block: 0x2c2
Body: 0xea, 0xf1, 0xf5, 0x2ab, 0x2c2, 0x2c6

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0xff
Exit block: 0xe8
Body: 0xe8, 0xff, 0x106, 0x10a, 0x2d7, 0x2ee, 0x2f2, 0x321, 0x325, 0x326, 0x327

Function 2:
Public function signature: 0x704b6c02
Entry block: 0x117
Exit block: 0xe8
Body: 0xe8, 0x117, 0x11e, 0x122, 0x32a, 0x341, 0x345, 0x36e, 0x36f

Function 3:
Public function signature: 0x7826bfa8
Entry block: 0x138
Exit block: 0x14b
Body: 0x138, 0x13f, 0x143, 0x14b, 0x372

Function 4:
Public function signature: 0x79ba5097
Entry block: 0x167
Exit block: 0xe8
Body: 0xe8, 0x167, 0x16e, 0x172, 0x381, 0x394, 0x398, 0x3af, 0x3b3, 0x3e3

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x17c
Exit block: 0x14b
Body: 0x14b, 0x17c, 0x183, 0x187, 0x3e5

Function 6:
Public function signature: 0x94081387
Entry block: 0x1ab
Exit block: 0xe8
Body: 0xe8, 0x1ab, 0x1b2, 0x1b6, 0x3f4, 0x438, 0x43c, 0x449, 0x44d, 0x451

Function 7:
Public function signature: 0xb105126f
Entry block: 0x1c3
Exit block: 0xe8
Body: 0xe8, 0x1c3, 0x1ca, 0x1ce, 0x454, 0x46c, 0x47f, 0x486, 0x48a, 0x4e3, 0x4e7, 0x4f4, 0x4f8, 0x4fd, 0x4fe

Function 8:
Public function signature: 0xb5ed298a
Entry block: 0x1e4
Exit block: 0xe8
Body: 0xe8, 0x1e4, 0x1eb, 0x1ef, 0x504, 0x51b, 0x51f, 0x548, 0x549

Function 9:
Public function signature: 0xd153b60c
Entry block: 0x205
Exit block: 0x14b
Body: 0x14b, 0x205, 0x20c, 0x210, 0x54c

Function 10:
Public function signature: 0xe1a27ad3
Entry block: 0x234
Exit block: 0x247
Body: 0x234, 0x23b, 0x23f, 0x247, 0x55b, 0x5a5, 0x5a9, 0x5b6, 0x5ba, 0x5d5, 0x5dc, 0x620, 0x624, 0x631, 0x635, 0x641

Function 11:
Public function signature: 0xf298083b
Entry block: 0x25b
Exit block: 0xe8
Body: 0xe8, 0x25b, 0x262, 0x266, 0x644, 0x65b, 0x65f, 0x688, 0x689

Function 12:
Public function signature: 0xf851a440
Entry block: 0x27c
Exit block: 0x14b
Body: 0x14b, 0x27c, 0x283, 0x287, 0x68c

Function 13:
Public fallback function
Entry block: 0xa9
Exit block: 0xe8
Body: 0xa9, 0xaa, 0xe8

