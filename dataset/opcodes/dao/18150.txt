Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x18e5f16b
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x18e5f16b
0x3c: V13 = EQ 0x18e5f16b V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb9]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0xb9
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0xb9
0x4b: JUMPI 0xb9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xc3]
---
0x4c DUP1
0x4d PUSH4 0xb4a99a4e
0x52 EQ
0x53 PUSH2 0xc3
0x56 JUMPI
---
0x4d: V18 = 0xb4a99a4e
0x52: V19 = EQ 0xb4a99a4e V11
0x53: V20 = 0xc3
0x56: JUMPI 0xc3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x118]
---
0x57 DUP1
0x58 PUSH4 0xc0406226
0x5d EQ
0x5e PUSH2 0x118
0x61 JUMPI
---
0x58: V21 = 0xc0406226
0x5d: V22 = EQ 0xc0406226 V11
0x5e: V23 = 0x118
0x61: JUMPI 0x118 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x64]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0x64]
Successors: [0x122]
---
0x6f JUMPDEST
0x70 PUSH2 0x77
0x73 PUSH2 0x122
0x76 JUMP
---
0x6f: JUMPDEST 
0x70: V28 = 0x77
0x73: V29 = 0x122
0x76: JUMP 0x122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x77
[0x77:0xb8]
---
Predecessors: [0x122]
Successors: []
---
0x77 JUMPDEST
0x78 PUSH1 0x40
0x7a MLOAD
0x7b DUP1
0x7c DUP3
0x7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92 AND
0x93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8 AND
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x20
0xad ADD
0xae SWAP2
0xaf POP
0xb0 POP
0xb1 PUSH1 0x40
0xb3 MLOAD
0xb4 DUP1
0xb5 SWAP2
0xb6 SUB
0xb7 SWAP1
0xb8 RETURN
---
0x77: JUMPDEST 
0x78: V30 = 0x40
0x7a: V31 = M[0x40]
0x7d: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x92: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x93: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xaa: M[V31] = V35
0xab: V36 = 0x20
0xad: V37 = ADD 0x20 V31
0xb1: V38 = 0x40
0xb3: V39 = M[0x40]
0xb6: V40 = SUB V37 V39
0xb8: RETURN V39 V40
---
Entry stack: [V11, 0x77, V69]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0xb9
[0xb9:0xc0]
---
Predecessors: [0x41]
Successors: [0x148]
---
0xb9 JUMPDEST
0xba PUSH2 0xc1
0xbd PUSH2 0x148
0xc0 JUMP
---
0xb9: JUMPDEST 
0xba: V41 = 0xc1
0xbd: V42 = 0x148
0xc0: JUMP 0x148
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V11, 0xc1]

================================

Block 0xc1
[0xc1:0xc2]
---
Predecessors: [0x2b8]
Successors: []
---
0xc1 JUMPDEST
0xc2 STOP
---
0xc1: JUMPDEST 
0xc2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xc9]
---
Predecessors: [0x4c]
Successors: [0xca, 0xce]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 ISZERO
0xc6 PUSH2 0xce
0xc9 JUMPI
---
0xc3: JUMPDEST 
0xc4: V43 = CALLVALUE
0xc5: V44 = ISZERO V43
0xc6: V45 = 0xce
0xc9: JUMPI 0xce V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xca
[0xca:0xcd]
---
Predecessors: [0xc3]
Successors: []
---
0xca PUSH1 0x0
0xcc DUP1
0xcd REVERT
---
0xca: V46 = 0x0
0xcd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xce
[0xce:0xd5]
---
Predecessors: [0xc3]
Successors: [0x2ba]
---
0xce JUMPDEST
0xcf PUSH2 0xd6
0xd2 PUSH2 0x2ba
0xd5 JUMP
---
0xce: JUMPDEST 
0xcf: V47 = 0xd6
0xd2: V48 = 0x2ba
0xd5: JUMP 0x2ba
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd6]
Exit stack: [V11, 0xd6]

================================

Block 0xd6
[0xd6:0x117]
---
Predecessors: [0x2ba]
Successors: []
---
0xd6 JUMPDEST
0xd7 PUSH1 0x40
0xd9 MLOAD
0xda DUP1
0xdb DUP3
0xdc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1 AND
0xf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107 AND
0x108 DUP2
0x109 MSTORE
0x10a PUSH1 0x20
0x10c ADD
0x10d SWAP2
0x10e POP
0x10f POP
0x110 PUSH1 0x40
0x112 MLOAD
0x113 DUP1
0x114 SWAP2
0x115 SUB
0x116 SWAP1
0x117 RETURN
---
0xd6: JUMPDEST 
0xd7: V49 = 0x40
0xd9: V50 = M[0x40]
0xdc: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0xf2: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0x107: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x109: M[V50] = V54
0x10a: V55 = 0x20
0x10c: V56 = ADD 0x20 V50
0x110: V57 = 0x40
0x112: V58 = M[0x40]
0x115: V59 = SUB V56 V58
0x117: RETURN V58 V59
---
Entry stack: [V11, 0xd6, V142]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd6]

================================

Block 0x118
[0x118:0x11f]
---
Predecessors: [0x57]
Successors: [0x2df]
---
0x118 JUMPDEST
0x119 PUSH2 0x120
0x11c PUSH2 0x2df
0x11f JUMP
---
0x118: JUMPDEST 
0x119: V60 = 0x120
0x11c: V61 = 0x2df
0x11f: JUMP 0x2df
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x120]
Exit stack: [V11, 0x120]

================================

Block 0x120
[0x120:0x121]
---
Predecessors: [0x33a]
Successors: []
---
0x120 JUMPDEST
0x121 STOP
---
0x120: JUMPDEST 
0x121: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x122
[0x122:0x147]
---
Predecessors: [0x6f]
Successors: [0x77]
---
0x122 JUMPDEST
0x123 PUSH1 0x1
0x125 PUSH1 0x0
0x127 SWAP1
0x128 SLOAD
0x129 SWAP1
0x12a PUSH2 0x100
0x12d EXP
0x12e SWAP1
0x12f DIV
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 DUP2
0x147 JUMP
---
0x122: JUMPDEST 
0x123: V62 = 0x1
0x125: V63 = 0x0
0x128: V64 = S[0x1]
0x12a: V65 = 0x100
0x12d: V66 = EXP 0x100 0x0
0x12f: V67 = DIV V64 0x1
0x130: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x147: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: [S0, V69]
Exit stack: [V11, 0x77, V69]

================================

Block 0x148
[0x148:0x190]
---
Predecessors: [0xb9]
Successors: [0x191, 0x1e5]
---
0x148 JUMPDEST
0x149 PUSH20 0x30ad12df80a2493a82ddfe367d866616db8a2595
0x15e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x173 AND
0x174 CALLER
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b EQ
0x18c ISZERO
0x18d PUSH2 0x1e5
0x190 JUMPI
---
0x148: JUMPDEST 
0x149: V70 = 0x30ad12df80a2493a82ddfe367d866616db8a2595
0x15e: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x173: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x30ad12df80a2493a82ddfe367d866616db8a2595
0x174: V73 = CALLER
0x175: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x18b: V76 = EQ V75 0x30ad12df80a2493a82ddfe367d866616db8a2595
0x18c: V77 = ISZERO V76
0x18d: V78 = 0x1e5
0x190: JUMPI 0x1e5 V77
---
Entry stack: [V11, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc1]

================================

Block 0x191
[0x191:0x1e4]
---
Predecessors: [0x148]
Successors: [0x1e5]
---
0x191 PUSH20 0x30ad12df80a2493a82ddfe367d866616db8a2595
0x1a6 PUSH1 0x0
0x1a8 DUP1
0x1a9 PUSH2 0x100
0x1ac EXP
0x1ad DUP2
0x1ae SLOAD
0x1af DUP2
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 MUL
0x1c6 NOT
0x1c7 AND
0x1c8 SWAP1
0x1c9 DUP4
0x1ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1df AND
0x1e0 MUL
0x1e1 OR
0x1e2 SWAP1
0x1e3 SSTORE
0x1e4 POP
---
0x191: V79 = 0x30ad12df80a2493a82ddfe367d866616db8a2595
0x1a6: V80 = 0x0
0x1a9: V81 = 0x100
0x1ac: V82 = EXP 0x100 0x0
0x1ae: V83 = S[0x0]
0x1b0: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V85 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1c6: V86 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V87 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V83
0x1ca: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1df: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x30ad12df80a2493a82ddfe367d866616db8a2595
0x1e0: V90 = MUL 0x30ad12df80a2493a82ddfe367d866616db8a2595 0x1
0x1e1: V91 = OR 0x30ad12df80a2493a82ddfe367d866616db8a2595 V87
0x1e3: S[0x0] = V91
---
Entry stack: [V11, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc1]

================================

Block 0x1e5
[0x1e5:0x23b]
---
Predecessors: [0x148, 0x191]
Successors: [0x23c, 0x240]
---
0x1e5 JUMPDEST
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 SWAP1
0x1ea SLOAD
0x1eb SWAP1
0x1ec PUSH2 0x100
0x1ef EXP
0x1f0 SWAP1
0x1f1 DIV
0x1f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x207 AND
0x208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21d AND
0x21e CALLER
0x21f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x234 AND
0x235 EQ
0x236 ISZERO
0x237 ISZERO
0x238 PUSH2 0x240
0x23b JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V92 = 0x0
0x1ea: V93 = S[0x0]
0x1ec: V94 = 0x100
0x1ef: V95 = EXP 0x100 0x0
0x1f1: V96 = DIV V93 0x1
0x1f2: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x207: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x208: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x21e: V101 = CALLER
0x21f: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x234: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x235: V104 = EQ V103 V100
0x236: V105 = ISZERO V104
0x237: V106 = ISZERO V105
0x238: V107 = 0x240
0x23b: JUMPI 0x240 V106
---
Entry stack: [V11, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc1]

================================

Block 0x23c
[0x23c:0x23f]
---
Predecessors: [0x1e5]
Successors: []
---
0x23c PUSH1 0x0
0x23e DUP1
0x23f REVERT
---
0x23c: V108 = 0x0
0x23f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc1]

================================

Block 0x240
[0x240:0x2b3]
---
Predecessors: [0x1e5]
Successors: [0x2b4, 0x2b8]
---
0x240 JUMPDEST
0x241 PUSH1 0x0
0x243 DUP1
0x244 SWAP1
0x245 SLOAD
0x246 SWAP1
0x247 PUSH2 0x100
0x24a EXP
0x24b SWAP1
0x24c DIV
0x24d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x262 AND
0x263 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x278 AND
0x279 PUSH2 0x8fc
0x27c ADDRESS
0x27d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x292 AND
0x293 BALANCE
0x294 SWAP1
0x295 DUP2
0x296 ISZERO
0x297 MUL
0x298 SWAP1
0x299 PUSH1 0x40
0x29b MLOAD
0x29c PUSH1 0x0
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 DUP1
0x2a2 DUP4
0x2a3 SUB
0x2a4 DUP2
0x2a5 DUP6
0x2a6 DUP9
0x2a7 DUP9
0x2a8 CALL
0x2a9 SWAP4
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad POP
0x2ae ISZERO
0x2af ISZERO
0x2b0 PUSH2 0x2b8
0x2b3 JUMPI
---
0x240: JUMPDEST 
0x241: V109 = 0x0
0x245: V110 = S[0x0]
0x247: V111 = 0x100
0x24a: V112 = EXP 0x100 0x0
0x24c: V113 = DIV V110 0x1
0x24d: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x262: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x263: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x278: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x279: V118 = 0x8fc
0x27c: V119 = ADDRESS
0x27d: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x292: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x293: V122 = BALANCE V121
0x296: V123 = ISZERO V122
0x297: V124 = MUL V123 0x8fc
0x299: V125 = 0x40
0x29b: V126 = M[0x40]
0x29c: V127 = 0x0
0x29e: V128 = 0x40
0x2a0: V129 = M[0x40]
0x2a3: V130 = SUB V126 V129
0x2a8: V131 = CALL V124 V117 V122 V129 V130 V129 0x0
0x2ae: V132 = ISZERO V131
0x2af: V133 = ISZERO V132
0x2b0: V134 = 0x2b8
0x2b3: JUMPI 0x2b8 V133
---
Entry stack: [V11, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc1]

================================

Block 0x2b4
[0x2b4:0x2b7]
---
Predecessors: [0x240]
Successors: []
---
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 REVERT
---
0x2b4: V135 = 0x0
0x2b7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc1]

================================

Block 0x2b8
[0x2b8:0x2b9]
---
Predecessors: [0x240]
Successors: [0xc1]
---
0x2b8 JUMPDEST
0x2b9 JUMP
---
0x2b8: JUMPDEST 
0x2b9: JUMP 0xc1
---
Entry stack: [V11, 0xc1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ba
[0x2ba:0x2de]
---
Predecessors: [0xce]
Successors: [0xd6]
---
0x2ba JUMPDEST
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be SWAP1
0x2bf SLOAD
0x2c0 SWAP1
0x2c1 PUSH2 0x100
0x2c4 EXP
0x2c5 SWAP1
0x2c6 DIV
0x2c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dc AND
0x2dd DUP2
0x2de JUMP
---
0x2ba: JUMPDEST 
0x2bb: V136 = 0x0
0x2bf: V137 = S[0x0]
0x2c1: V138 = 0x100
0x2c4: V139 = EXP 0x100 0x0
0x2c6: V140 = DIV V137 0x1
0x2c7: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x2de: JUMP 0xd6
---
Entry stack: [V11, 0xd6]
Stack pops: 1
Stack additions: [S0, V142]
Exit stack: [V11, 0xd6, V142]

================================

Block 0x2df
[0x2df:0x335]
---
Predecessors: [0x118]
Successors: [0x336, 0x33a]
---
0x2df JUMPDEST
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 SWAP1
0x2e4 SLOAD
0x2e5 SWAP1
0x2e6 PUSH2 0x100
0x2e9 EXP
0x2ea SWAP1
0x2eb DIV
0x2ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x301 AND
0x302 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x317 AND
0x318 CALLER
0x319 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32e AND
0x32f EQ
0x330 ISZERO
0x331 ISZERO
0x332 PUSH2 0x33a
0x335 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V143 = 0x0
0x2e4: V144 = S[0x0]
0x2e6: V145 = 0x100
0x2e9: V146 = EXP 0x100 0x0
0x2eb: V147 = DIV V144 0x1
0x2ec: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x301: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x302: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x317: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x318: V152 = CALLER
0x319: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x32f: V155 = EQ V154 V151
0x330: V156 = ISZERO V155
0x331: V157 = ISZERO V156
0x332: V158 = 0x33a
0x335: JUMPI 0x33a V157
---
Entry stack: [V11, 0x120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120]

================================

Block 0x336
[0x336:0x339]
---
Predecessors: [0x2df]
Successors: []
---
0x336 PUSH1 0x0
0x338 DUP1
0x339 REVERT
---
0x336: V159 = 0x0
0x339: REVERT 0x0 0x0
---
Entry stack: [V11, 0x120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x120]

================================

Block 0x33a
[0x33a:0x41b]
---
Predecessors: [0x2df]
Successors: [0x120]
---
0x33a JUMPDEST
0x33b PUSH1 0x1
0x33d PUSH1 0x0
0x33f SWAP1
0x340 SLOAD
0x341 SWAP1
0x342 PUSH2 0x100
0x345 EXP
0x346 SWAP1
0x347 DIV
0x348 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35d AND
0x35e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x373 AND
0x374 PUSH3 0x7a120
0x378 PUSH8 0xe043da617250000
0x381 PUSH1 0x40
0x383 MLOAD
0x384 DUP1
0x385 DUP1
0x386 PUSH32 0x4765744672656562696528290000000000000000000000000000000000000000
0x3a7 DUP2
0x3a8 MSTORE
0x3a9 POP
0x3aa PUSH1 0xc
0x3ac ADD
0x3ad SWAP1
0x3ae POP
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 DUP1
0x3b3 SWAP2
0x3b4 SUB
0x3b5 SWAP1
0x3b6 SHA3
0x3b7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3d5 SWAP1
0x3d6 DIV
0x3d7 SWAP2
0x3d8 SWAP1
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP4
0x3dd PUSH4 0xffffffff
0x3e2 AND
0x3e3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x401 MUL
0x402 DUP2
0x403 MSTORE
0x404 PUSH1 0x4
0x406 ADD
0x407 PUSH1 0x0
0x409 PUSH1 0x40
0x40b MLOAD
0x40c DUP1
0x40d DUP4
0x40e SUB
0x40f DUP2
0x410 DUP6
0x411 DUP10
0x412 DUP9
0x413 CALL
0x414 SWAP5
0x415 POP
0x416 POP
0x417 POP
0x418 POP
0x419 POP
0x41a POP
0x41b JUMP
---
0x33a: JUMPDEST 
0x33b: V160 = 0x1
0x33d: V161 = 0x0
0x340: V162 = S[0x1]
0x342: V163 = 0x100
0x345: V164 = EXP 0x100 0x0
0x347: V165 = DIV V162 0x1
0x348: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x35d: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x35e: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x373: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x374: V170 = 0x7a120
0x378: V171 = 0xe043da617250000
0x381: V172 = 0x40
0x383: V173 = M[0x40]
0x386: V174 = 0x4765744672656562696528290000000000000000000000000000000000000000
0x3a8: M[V173] = 0x4765744672656562696528290000000000000000000000000000000000000000
0x3aa: V175 = 0xc
0x3ac: V176 = ADD 0xc V173
0x3af: V177 = 0x40
0x3b1: V178 = M[0x40]
0x3b4: V179 = SUB V176 V178
0x3b6: V180 = SHA3 V178 V179
0x3b7: V181 = 0x100000000000000000000000000000000000000000000000000000000
0x3d6: V182 = DIV V180 0x100000000000000000000000000000000000000000000000000000000
0x3d9: V183 = 0x40
0x3db: V184 = M[0x40]
0x3dd: V185 = 0xffffffff
0x3e2: V186 = AND 0xffffffff V182
0x3e3: V187 = 0x100000000000000000000000000000000000000000000000000000000
0x401: V188 = MUL 0x100000000000000000000000000000000000000000000000000000000 V186
0x403: M[V184] = V188
0x404: V189 = 0x4
0x406: V190 = ADD 0x4 V184
0x407: V191 = 0x0
0x409: V192 = 0x40
0x40b: V193 = M[0x40]
0x40e: V194 = SUB V190 V193
0x413: V195 = CALL 0x7a120 V169 0xe043da617250000 V193 V194 V193 0x0
0x41b: JUMP 0x120
---
Entry stack: [V11, 0x120]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x41c
[0x41c:0x451]
---
Predecessors: []
Successors: []
---
0x41c STOP
0x41d LOG1
0x41e PUSH6 0x627a7a723058
0x425 SHA3
0x426 SWAP5
0x427 MISSING 0x28
0x428 MISSING 0xb5
0x429 INVALID
0x42a DUP8
0x42b EXTCODECOPY
0x42c MISSING 0xe2
0x42d MISSING 0x49
0x42e MISSING 0xbd
0x42f EXTCODEHASH
0x430 MISSING 0xd3
0x431 MISSING 0xb7
0x432 PUSH31 0xaa3509d21290cba52ae8e88495e6a245f3c6490029
---
0x41c: STOP 
0x41d: LOG S0 S1 S2
0x41e: V196 = 0x627a7a723058
0x425: V197 = SHA3 0x627a7a723058 S3
0x427: MISSING 0x28
0x428: MISSING 0xb5
0x429: INVALID 
0x42b: EXTCODECOPY S7 S0 S1 S2
0x42c: MISSING 0xe2
0x42d: MISSING 0x49
0x42e: MISSING 0xbd
0x42f: V198 = EXTCODEHASH S0
0x430: MISSING 0xd3
0x431: MISSING 0xb7
0x432: V199 = 0xaa3509d21290cba52ae8e88495e6a245f3c6490029
---
Entry stack: []
Stack pops: 0
Stack additions: [S8, S4, S5, S6, S7, V197, S3, S4, S5, S6, S7, V198, 0xaa3509d21290cba52ae8e88495e6a245f3c6490029]
Exit stack: []

================================

Function 0:
Public function signature: 0x18e5f16b
Entry block: 0x64
Exit block: 0x77
Body: 0x64, 0x6b, 0x6f, 0x77, 0x122

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xb9
Exit block: 0xc1
Body: 0xb9, 0xc1, 0x148, 0x191, 0x1e5, 0x23c, 0x240, 0x2b4, 0x2b8

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0xc3
Exit block: 0xd6
Body: 0xc3, 0xca, 0xce, 0xd6, 0x2ba

Function 3:
Public function signature: 0xc0406226
Entry block: 0x118
Exit block: 0x120
Body: 0x118, 0x120, 0x2df, 0x336, 0x33a

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

