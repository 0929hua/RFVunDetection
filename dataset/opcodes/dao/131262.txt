Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2d05d3f
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2d05d3f
0x3c: V13 = EQ 0x2d05d3f V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xc6]
---
0x41 DUP1
0x42 PUSH4 0x1a02d62a
0x47 EQ
0x48 PUSH2 0xc6
0x4b JUMPI
---
0x42: V15 = 0x1a02d62a
0x47: V16 = EQ 0x1a02d62a V11
0x48: V17 = 0xc6
0x4b: JUMPI 0xc6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xdd]
---
0x4c DUP1
0x4d PUSH4 0xd2de91c6
0x52 EQ
0x53 PUSH2 0xdd
0x56 JUMPI
---
0x4d: V18 = 0xd2de91c6
0x52: V19 = EQ 0xd2de91c6 V11
0x53: V20 = 0xdd
0x56: JUMPI 0xdd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x134]
---
0x57 DUP1
0x58 PUSH4 0xec8d5ef8
0x5d EQ
0x5e PUSH2 0x134
0x61 JUMPI
---
0x58: V21 = 0xec8d5ef8
0x5d: V22 = EQ 0xec8d5ef8 V11
0x5e: V23 = 0x134
0x61: JUMPI 0x134 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x18b]
---
0x62 DUP1
0x63 PUSH4 0xf2fde38b
0x68 EQ
0x69 PUSH2 0x18b
0x6c JUMPI
---
0x63: V24 = 0xf2fde38b
0x68: V25 = EQ 0xf2fde38b V11
0x69: V26 = 0x18b
0x6c: JUMPI 0x18b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0xd]
Successors: [0x77, 0x7b]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 DUP1
0x72 ISZERO
0x73 PUSH2 0x7b
0x76 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x72: V28 = ISZERO V27
0x73: V29 = 0x7b
0x76: JUMPI 0x7b V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x77
[0x77:0x7a]
---
Predecessors: [0x6f]
Successors: []
---
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x77: V30 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V11, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V27]

================================

Block 0x7b
[0x7b:0x83]
---
Predecessors: [0x6f]
Successors: [0x1ce]
---
0x7b JUMPDEST
0x7c POP
0x7d PUSH2 0x84
0x80 PUSH2 0x1ce
0x83 JUMP
---
0x7b: JUMPDEST 
0x7d: V31 = 0x84
0x80: V32 = 0x1ce
0x83: JUMP 0x1ce
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [0x84]
Exit stack: [V11, 0x84]

================================

Block 0x84
[0x84:0xc5]
---
Predecessors: [0x1ce]
Successors: []
---
0x84 JUMPDEST
0x85 PUSH1 0x40
0x87 MLOAD
0x88 DUP1
0x89 DUP3
0x8a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f AND
0xa0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5 AND
0xb6 DUP2
0xb7 MSTORE
0xb8 PUSH1 0x20
0xba ADD
0xbb SWAP2
0xbc POP
0xbd POP
0xbe PUSH1 0x40
0xc0 MLOAD
0xc1 DUP1
0xc2 SWAP2
0xc3 SUB
0xc4 SWAP1
0xc5 RETURN
---
0x84: JUMPDEST 
0x85: V33 = 0x40
0x87: V34 = M[0x40]
0x8a: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0xa0: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xb7: M[V34] = V38
0xb8: V39 = 0x20
0xba: V40 = ADD 0x20 V34
0xbe: V41 = 0x40
0xc0: V42 = M[0x40]
0xc3: V43 = SUB V40 V42
0xc5: RETURN V42 V43
---
Entry stack: [V11, 0x84, V114]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x84]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0x41]
Successors: [0xce, 0xd2]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 DUP1
0xc9 ISZERO
0xca PUSH2 0xd2
0xcd JUMPI
---
0xc6: JUMPDEST 
0xc7: V44 = CALLVALUE
0xc9: V45 = ISZERO V44
0xca: V46 = 0xd2
0xcd: JUMPI 0xd2 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V11, V44]

================================

Block 0xce
[0xce:0xd1]
---
Predecessors: [0xc6]
Successors: []
---
0xce PUSH1 0x0
0xd0 DUP1
0xd1 REVERT
---
0xce: V47 = 0x0
0xd1: REVERT 0x0 0x0
---
Entry stack: [V11, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V44]

================================

Block 0xd2
[0xd2:0xda]
---
Predecessors: [0xc6]
Successors: [0x1f4]
---
0xd2 JUMPDEST
0xd3 POP
0xd4 PUSH2 0xdb
0xd7 PUSH2 0x1f4
0xda JUMP
---
0xd2: JUMPDEST 
0xd4: V48 = 0xdb
0xd7: V49 = 0x1f4
0xda: JUMP 0x1f4
---
Entry stack: [V11, V44]
Stack pops: 1
Stack additions: [0xdb]
Exit stack: [V11, 0xdb]

================================

Block 0xdb
[0xdb:0xdc]
---
Predecessors: []
Successors: []
---
0xdb JUMPDEST
0xdc STOP
---
0xdb: JUMPDEST 
0xdc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0x4c]
Successors: [0xe5, 0xe9]
---
0xdd JUMPDEST
0xde CALLVALUE
0xdf DUP1
0xe0 ISZERO
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0xdd: JUMPDEST 
0xde: V50 = CALLVALUE
0xe0: V51 = ISZERO V50
0xe1: V52 = 0xe9
0xe4: JUMPI 0xe9 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0xdd]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V53 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xe9
[0xe9:0x131]
---
Predecessors: [0xdd]
Successors: [0x286]
---
0xe9 JUMPDEST
0xea POP
0xeb PUSH2 0x132
0xee PUSH1 0x4
0xf0 DUP1
0xf1 CALLDATASIZE
0xf2 SUB
0xf3 DUP2
0xf4 ADD
0xf5 SWAP1
0xf6 DUP1
0xf7 DUP1
0xf8 CALLDATALOAD
0xf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e AND
0x10f SWAP1
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP1
0x114 SWAP3
0x115 SWAP2
0x116 SWAP1
0x117 DUP1
0x118 CALLDATALOAD
0x119 SWAP1
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP1
0x11e SWAP3
0x11f SWAP2
0x120 SWAP1
0x121 DUP1
0x122 CALLDATALOAD
0x123 SWAP1
0x124 PUSH1 0x20
0x126 ADD
0x127 SWAP1
0x128 SWAP3
0x129 SWAP2
0x12a SWAP1
0x12b POP
0x12c POP
0x12d POP
0x12e PUSH2 0x286
0x131 JUMP
---
0xe9: JUMPDEST 
0xeb: V54 = 0x132
0xee: V55 = 0x4
0xf1: V56 = CALLDATASIZE
0xf2: V57 = SUB V56 0x4
0xf4: V58 = ADD 0x4 V57
0xf8: V59 = CALLDATALOAD 0x4
0xf9: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x110: V62 = 0x20
0x112: V63 = ADD 0x20 0x4
0x118: V64 = CALLDATALOAD 0x24
0x11a: V65 = 0x20
0x11c: V66 = ADD 0x20 0x24
0x122: V67 = CALLDATALOAD 0x44
0x124: V68 = 0x20
0x126: V69 = ADD 0x20 0x44
0x12e: V70 = 0x286
0x131: JUMP 0x286
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0x132, V61, V64, V67]
Exit stack: [V11, 0x132, V61, V64, V67]

================================

Block 0x132
[0x132:0x133]
---
Predecessors: [0x606]
Successors: []
---
0x132 JUMPDEST
0x133 STOP
---
0x132: JUMPDEST 
0x133: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x134
[0x134:0x13b]
---
Predecessors: [0x57]
Successors: [0x13c, 0x140]
---
0x134 JUMPDEST
0x135 CALLVALUE
0x136 DUP1
0x137 ISZERO
0x138 PUSH2 0x140
0x13b JUMPI
---
0x134: JUMPDEST 
0x135: V71 = CALLVALUE
0x137: V72 = ISZERO V71
0x138: V73 = 0x140
0x13b: JUMPI 0x140 V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V71]
Exit stack: [V11, V71]

================================

Block 0x13c
[0x13c:0x13f]
---
Predecessors: [0x134]
Successors: []
---
0x13c PUSH1 0x0
0x13e DUP1
0x13f REVERT
---
0x13c: V74 = 0x0
0x13f: REVERT 0x0 0x0
---
Entry stack: [V11, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V71]

================================

Block 0x140
[0x140:0x188]
---
Predecessors: [0x134]
Successors: [0x684]
---
0x140 JUMPDEST
0x141 POP
0x142 PUSH2 0x189
0x145 PUSH1 0x4
0x147 DUP1
0x148 CALLDATASIZE
0x149 SUB
0x14a DUP2
0x14b ADD
0x14c SWAP1
0x14d DUP1
0x14e DUP1
0x14f CALLDATALOAD
0x150 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x165 AND
0x166 SWAP1
0x167 PUSH1 0x20
0x169 ADD
0x16a SWAP1
0x16b SWAP3
0x16c SWAP2
0x16d SWAP1
0x16e DUP1
0x16f CALLDATALOAD
0x170 SWAP1
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP1
0x175 SWAP3
0x176 SWAP2
0x177 SWAP1
0x178 DUP1
0x179 CALLDATALOAD
0x17a SWAP1
0x17b PUSH1 0x20
0x17d ADD
0x17e SWAP1
0x17f SWAP3
0x180 SWAP2
0x181 SWAP1
0x182 POP
0x183 POP
0x184 POP
0x185 PUSH2 0x684
0x188 JUMP
---
0x140: JUMPDEST 
0x142: V75 = 0x189
0x145: V76 = 0x4
0x148: V77 = CALLDATASIZE
0x149: V78 = SUB V77 0x4
0x14b: V79 = ADD 0x4 V78
0x14f: V80 = CALLDATALOAD 0x4
0x150: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x165: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x167: V83 = 0x20
0x169: V84 = ADD 0x20 0x4
0x16f: V85 = CALLDATALOAD 0x24
0x171: V86 = 0x20
0x173: V87 = ADD 0x20 0x24
0x179: V88 = CALLDATALOAD 0x44
0x17b: V89 = 0x20
0x17d: V90 = ADD 0x20 0x44
0x185: V91 = 0x684
0x188: JUMP 0x684
---
Entry stack: [V11, V71]
Stack pops: 1
Stack additions: [0x189, V82, V85, V88]
Exit stack: [V11, 0x189, V82, V85, V88]

================================

Block 0x189
[0x189:0x18a]
---
Predecessors: [0x7f0]
Successors: []
---
0x189 JUMPDEST
0x18a STOP
---
0x189: JUMPDEST 
0x18a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18b
[0x18b:0x192]
---
Predecessors: [0x62]
Successors: [0x193, 0x197]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d DUP1
0x18e ISZERO
0x18f PUSH2 0x197
0x192 JUMPI
---
0x18b: JUMPDEST 
0x18c: V92 = CALLVALUE
0x18e: V93 = ISZERO V92
0x18f: V94 = 0x197
0x192: JUMPI 0x197 V93
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V92]
Exit stack: [V11, V92]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x18b]
Successors: []
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
---
0x193: V95 = 0x0
0x196: REVERT 0x0 0x0
---
Entry stack: [V11, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V92]

================================

Block 0x197
[0x197:0x1cb]
---
Predecessors: [0x18b]
Successors: [0x86e]
---
0x197 JUMPDEST
0x198 POP
0x199 PUSH2 0x1cc
0x19c PUSH1 0x4
0x19e DUP1
0x19f CALLDATASIZE
0x1a0 SUB
0x1a1 DUP2
0x1a2 ADD
0x1a3 SWAP1
0x1a4 DUP1
0x1a5 DUP1
0x1a6 CALLDATALOAD
0x1a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bc AND
0x1bd SWAP1
0x1be PUSH1 0x20
0x1c0 ADD
0x1c1 SWAP1
0x1c2 SWAP3
0x1c3 SWAP2
0x1c4 SWAP1
0x1c5 POP
0x1c6 POP
0x1c7 POP
0x1c8 PUSH2 0x86e
0x1cb JUMP
---
0x197: JUMPDEST 
0x199: V96 = 0x1cc
0x19c: V97 = 0x4
0x19f: V98 = CALLDATASIZE
0x1a0: V99 = SUB V98 0x4
0x1a2: V100 = ADD 0x4 V99
0x1a6: V101 = CALLDATALOAD 0x4
0x1a7: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1be: V104 = 0x20
0x1c0: V105 = ADD 0x20 0x4
0x1c8: V106 = 0x86e
0x1cb: JUMP 0x86e
---
Entry stack: [V11, V92]
Stack pops: 1
Stack additions: [0x1cc, V103]
Exit stack: [V11, 0x1cc, V103]

================================

Block 0x1cc
[0x1cc:0x1cd]
---
Predecessors: [0x93d]
Successors: []
---
0x1cc JUMPDEST
0x1cd STOP
---
0x1cc: JUMPDEST 
0x1cd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ce
[0x1ce:0x1f3]
---
Predecessors: [0x7b]
Successors: [0x84]
---
0x1ce JUMPDEST
0x1cf PUSH1 0x1
0x1d1 PUSH1 0x0
0x1d3 SWAP1
0x1d4 SLOAD
0x1d5 SWAP1
0x1d6 PUSH2 0x100
0x1d9 EXP
0x1da SWAP1
0x1db DIV
0x1dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f1 AND
0x1f2 DUP2
0x1f3 JUMP
---
0x1ce: JUMPDEST 
0x1cf: V107 = 0x1
0x1d1: V108 = 0x0
0x1d4: V109 = S[0x1]
0x1d6: V110 = 0x100
0x1d9: V111 = EXP 0x100 0x0
0x1db: V112 = DIV V109 0x1
0x1dc: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1f3: JUMP 0x84
---
Entry stack: [V11, 0x84]
Stack pops: 1
Stack additions: [S0, V114]
Exit stack: [V11, 0x84, V114]

================================

Block 0x1f4
[0x1f4:0x24a]
---
Predecessors: [0xd2]
Successors: [0x24b, 0x24c]
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 SWAP1
0x1f9 SLOAD
0x1fa SWAP1
0x1fb PUSH2 0x100
0x1fe EXP
0x1ff SWAP1
0x200 DIV
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c AND
0x22d CALLER
0x22e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x243 AND
0x244 EQ
0x245 ISZERO
0x246 ISZERO
0x247 PUSH2 0x24c
0x24a JUMPI
---
0x1f4: JUMPDEST 
0x1f5: V115 = 0x0
0x1f9: V116 = S[0x0]
0x1fb: V117 = 0x100
0x1fe: V118 = EXP 0x100 0x0
0x200: V119 = DIV V116 0x1
0x201: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x217: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x22d: V124 = CALLER
0x22e: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x243: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x244: V127 = EQ V126 V123
0x245: V128 = ISZERO V127
0x246: V129 = ISZERO V128
0x247: V130 = 0x24c
0x24a: JUMPI 0x24c V129
---
Entry stack: [V11, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdb]

================================

Block 0x24b
[0x24b:0x24b]
---
Predecessors: [0x1f4]
Successors: []
---
0x24b INVALID
---
0x24b: INVALID 
---
Entry stack: [V11, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdb]

================================

Block 0x24c
[0x24c:0x285]
---
Predecessors: [0x1f4]
Successors: []
---
0x24c JUMPDEST
0x24d PUSH1 0x0
0x24f DUP1
0x250 SWAP1
0x251 SLOAD
0x252 SWAP1
0x253 PUSH2 0x100
0x256 EXP
0x257 SWAP1
0x258 DIV
0x259 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26e AND
0x26f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x284 AND
0x285 SELFDESTRUCT
---
0x24c: JUMPDEST 
0x24d: V131 = 0x0
0x251: V132 = S[0x0]
0x253: V133 = 0x100
0x256: V134 = EXP 0x100 0x0
0x258: V135 = DIV V132 0x1
0x259: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x26f: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x284: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x285: SELFDESTRUCT V139
---
Entry stack: [V11, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdb]

================================

Block 0x286
[0x286:0x2de]
---
Predecessors: [0xe9]
Successors: [0x2df, 0x2e0]
---
0x286 JUMPDEST
0x287 PUSH1 0x0
0x289 DUP1
0x28a PUSH1 0x0
0x28c SWAP1
0x28d SLOAD
0x28e SWAP1
0x28f PUSH2 0x100
0x292 EXP
0x293 SWAP1
0x294 DIV
0x295 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2aa AND
0x2ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c0 AND
0x2c1 CALLER
0x2c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d7 AND
0x2d8 EQ
0x2d9 ISZERO
0x2da ISZERO
0x2db PUSH2 0x2e0
0x2de JUMPI
---
0x286: JUMPDEST 
0x287: V140 = 0x0
0x28a: V141 = 0x0
0x28d: V142 = S[0x0]
0x28f: V143 = 0x100
0x292: V144 = EXP 0x100 0x0
0x294: V145 = DIV V142 0x1
0x295: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x2ab: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c0: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x2c1: V150 = CALLER
0x2c2: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x2d8: V153 = EQ V152 V149
0x2d9: V154 = ISZERO V153
0x2da: V155 = ISZERO V154
0x2db: V156 = 0x2e0
0x2de: JUMPI 0x2e0 V155
---
Entry stack: [V11, 0x132, V61, V64, V67]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x132, V61, V64, V67, 0x0]

================================

Block 0x2df
[0x2df:0x2df]
---
Predecessors: [0x286]
Successors: []
---
0x2df INVALID
---
0x2df: INVALID 
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0]

================================

Block 0x2e0
[0x2e0:0x3a1]
---
Predecessors: [0x286]
Successors: [0x3a2, 0x3a6]
---
0x2e0 JUMPDEST
0x2e1 DUP4
0x2e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f7 AND
0x2f8 PUSH4 0x95ea7b3
0x2fd PUSH1 0x2
0x2ff PUSH1 0x0
0x301 SWAP1
0x302 SLOAD
0x303 SWAP1
0x304 PUSH2 0x100
0x307 EXP
0x308 SWAP1
0x309 DIV
0x30a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31f AND
0x320 PUSH1 0x0
0x322 PUSH1 0x40
0x324 MLOAD
0x325 DUP4
0x326 PUSH4 0xffffffff
0x32b AND
0x32c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x34a MUL
0x34b DUP2
0x34c MSTORE
0x34d PUSH1 0x4
0x34f ADD
0x350 DUP1
0x351 DUP4
0x352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x367 AND
0x368 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37d AND
0x37e DUP2
0x37f MSTORE
0x380 PUSH1 0x20
0x382 ADD
0x383 DUP3
0x384 DUP2
0x385 MSTORE
0x386 PUSH1 0x20
0x388 ADD
0x389 SWAP3
0x38a POP
0x38b POP
0x38c POP
0x38d PUSH1 0x20
0x38f PUSH1 0x40
0x391 MLOAD
0x392 DUP1
0x393 DUP4
0x394 SUB
0x395 DUP2
0x396 PUSH1 0x0
0x398 DUP8
0x399 DUP1
0x39a EXTCODESIZE
0x39b ISZERO
0x39c DUP1
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x2e0: JUMPDEST 
0x2e2: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x2f8: V159 = 0x95ea7b3
0x2fd: V160 = 0x2
0x2ff: V161 = 0x0
0x302: V162 = S[0x2]
0x304: V163 = 0x100
0x307: V164 = EXP 0x100 0x0
0x309: V165 = DIV V162 0x1
0x30a: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x31f: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x320: V168 = 0x0
0x322: V169 = 0x40
0x324: V170 = M[0x40]
0x326: V171 = 0xffffffff
0x32b: V172 = AND 0xffffffff 0x95ea7b3
0x32c: V173 = 0x100000000000000000000000000000000000000000000000000000000
0x34a: V174 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x95ea7b3
0x34c: M[V170] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x34d: V175 = 0x4
0x34f: V176 = ADD 0x4 V170
0x352: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x367: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x368: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x37d: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x37f: M[V176] = V180
0x380: V181 = 0x20
0x382: V182 = ADD 0x20 V176
0x385: M[V182] = 0x0
0x386: V183 = 0x20
0x388: V184 = ADD 0x20 V182
0x38d: V185 = 0x20
0x38f: V186 = 0x40
0x391: V187 = M[0x40]
0x394: V188 = SUB V184 V187
0x396: V189 = 0x0
0x39a: V190 = EXTCODESIZE V158
0x39b: V191 = ISZERO V190
0x39d: V192 = ISZERO V191
0x39e: V193 = 0x3a6
0x3a1: JUMPI 0x3a6 V192
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V158, 0x95ea7b3, V184, 0x20, V187, V188, V187, 0x0, V158, V191]
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V158, 0x95ea7b3, V184, 0x20, V187, V188, V187, 0x0, V158, V191]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x2e0]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V194 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V158, 0x95ea7b3, V184, 0x20, V187, V188, V187, 0x0, V158, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V158, 0x95ea7b3, V184, 0x20, V187, V188, V187, 0x0, V158, V191]

================================

Block 0x3a6
[0x3a6:0x3b0]
---
Predecessors: [0x2e0]
Successors: [0x3b1, 0x3ba]
---
0x3a6 JUMPDEST
0x3a7 POP
0x3a8 GAS
0x3a9 CALL
0x3aa ISZERO
0x3ab DUP1
0x3ac ISZERO
0x3ad PUSH2 0x3ba
0x3b0 JUMPI
---
0x3a6: JUMPDEST 
0x3a8: V195 = GAS
0x3a9: V196 = CALL V195 V158 0x0 V187 V188 V187 0x20
0x3aa: V197 = ISZERO V196
0x3ac: V198 = ISZERO V197
0x3ad: V199 = 0x3ba
0x3b0: JUMPI 0x3ba V198
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V158, 0x95ea7b3, V184, 0x20, V187, V188, V187, 0x0, V158, V191]
Stack pops: 7
Stack additions: [V197]
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V158, 0x95ea7b3, V184, V197]

================================

Block 0x3b1
[0x3b1:0x3b9]
---
Predecessors: [0x3a6]
Successors: []
---
0x3b1 RETURNDATASIZE
0x3b2 PUSH1 0x0
0x3b4 DUP1
0x3b5 RETURNDATACOPY
0x3b6 RETURNDATASIZE
0x3b7 PUSH1 0x0
0x3b9 REVERT
---
0x3b1: V200 = RETURNDATASIZE
0x3b2: V201 = 0x0
0x3b5: RETURNDATACOPY 0x0 0x0 V200
0x3b6: V202 = RETURNDATASIZE
0x3b7: V203 = 0x0
0x3b9: REVERT 0x0 V202
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V158, 0x95ea7b3, V184, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V158, 0x95ea7b3, V184, V197]

================================

Block 0x3ba
[0x3ba:0x3cb]
---
Predecessors: [0x3a6]
Successors: [0x3cc, 0x3d0]
---
0x3ba JUMPDEST
0x3bb POP
0x3bc POP
0x3bd POP
0x3be POP
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 RETURNDATASIZE
0x3c3 PUSH1 0x20
0x3c5 DUP2
0x3c6 LT
0x3c7 ISZERO
0x3c8 PUSH2 0x3d0
0x3cb JUMPI
---
0x3ba: JUMPDEST 
0x3bf: V204 = 0x40
0x3c1: V205 = M[0x40]
0x3c2: V206 = RETURNDATASIZE
0x3c3: V207 = 0x20
0x3c6: V208 = LT V206 0x20
0x3c7: V209 = ISZERO V208
0x3c8: V210 = 0x3d0
0x3cb: JUMPI 0x3d0 V209
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V158, 0x95ea7b3, V184, V197]
Stack pops: 4
Stack additions: [V205, V206]
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V205, V206]

================================

Block 0x3cc
[0x3cc:0x3cf]
---
Predecessors: [0x3ba]
Successors: []
---
0x3cc PUSH1 0x0
0x3ce DUP1
0x3cf REVERT
---
0x3cc: V211 = 0x0
0x3cf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V205, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V205, V206]

================================

Block 0x3d0
[0x3d0:0x3e7]
---
Predecessors: [0x3ba]
Successors: [0x3e8, 0x3ec]
---
0x3d0 JUMPDEST
0x3d1 DUP2
0x3d2 ADD
0x3d3 SWAP1
0x3d4 DUP1
0x3d5 DUP1
0x3d6 MLOAD
0x3d7 SWAP1
0x3d8 PUSH1 0x20
0x3da ADD
0x3db SWAP1
0x3dc SWAP3
0x3dd SWAP2
0x3de SWAP1
0x3df POP
0x3e0 POP
0x3e1 POP
0x3e2 ISZERO
0x3e3 ISZERO
0x3e4 PUSH2 0x3ec
0x3e7 JUMPI
---
0x3d0: JUMPDEST 
0x3d2: V212 = ADD V205 V206
0x3d6: V213 = M[V205]
0x3d8: V214 = 0x20
0x3da: V215 = ADD 0x20 V205
0x3e2: V216 = ISZERO V213
0x3e3: V217 = ISZERO V216
0x3e4: V218 = 0x3ec
0x3e7: JUMPI 0x3ec V217
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V205, V206]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0]

================================

Block 0x3e8
[0x3e8:0x3eb]
---
Predecessors: [0x3d0]
Successors: []
---
0x3e8 PUSH1 0x0
0x3ea DUP1
0x3eb REVERT
---
0x3e8: V219 = 0x0
0x3eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0]

================================

Block 0x3ec
[0x3ec:0x4ac]
---
Predecessors: [0x3d0]
Successors: [0x4ad, 0x4b1]
---
0x3ec JUMPDEST
0x3ed DUP4
0x3ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x403 AND
0x404 PUSH4 0x95ea7b3
0x409 PUSH1 0x2
0x40b PUSH1 0x0
0x40d SWAP1
0x40e SLOAD
0x40f SWAP1
0x410 PUSH2 0x100
0x413 EXP
0x414 SWAP1
0x415 DIV
0x416 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42b AND
0x42c DUP6
0x42d PUSH1 0x40
0x42f MLOAD
0x430 DUP4
0x431 PUSH4 0xffffffff
0x436 AND
0x437 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x455 MUL
0x456 DUP2
0x457 MSTORE
0x458 PUSH1 0x4
0x45a ADD
0x45b DUP1
0x45c DUP4
0x45d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x472 AND
0x473 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x488 AND
0x489 DUP2
0x48a MSTORE
0x48b PUSH1 0x20
0x48d ADD
0x48e DUP3
0x48f DUP2
0x490 MSTORE
0x491 PUSH1 0x20
0x493 ADD
0x494 SWAP3
0x495 POP
0x496 POP
0x497 POP
0x498 PUSH1 0x20
0x49a PUSH1 0x40
0x49c MLOAD
0x49d DUP1
0x49e DUP4
0x49f SUB
0x4a0 DUP2
0x4a1 PUSH1 0x0
0x4a3 DUP8
0x4a4 DUP1
0x4a5 EXTCODESIZE
0x4a6 ISZERO
0x4a7 DUP1
0x4a8 ISZERO
0x4a9 PUSH2 0x4b1
0x4ac JUMPI
---
0x3ec: JUMPDEST 
0x3ee: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x403: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x404: V222 = 0x95ea7b3
0x409: V223 = 0x2
0x40b: V224 = 0x0
0x40e: V225 = S[0x2]
0x410: V226 = 0x100
0x413: V227 = EXP 0x100 0x0
0x415: V228 = DIV V225 0x1
0x416: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x42b: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x42d: V231 = 0x40
0x42f: V232 = M[0x40]
0x431: V233 = 0xffffffff
0x436: V234 = AND 0xffffffff 0x95ea7b3
0x437: V235 = 0x100000000000000000000000000000000000000000000000000000000
0x455: V236 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x95ea7b3
0x457: M[V232] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x458: V237 = 0x4
0x45a: V238 = ADD 0x4 V232
0x45d: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x472: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x473: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x488: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x48a: M[V238] = V242
0x48b: V243 = 0x20
0x48d: V244 = ADD 0x20 V238
0x490: M[V244] = V64
0x491: V245 = 0x20
0x493: V246 = ADD 0x20 V244
0x498: V247 = 0x20
0x49a: V248 = 0x40
0x49c: V249 = M[0x40]
0x49f: V250 = SUB V246 V249
0x4a1: V251 = 0x0
0x4a5: V252 = EXTCODESIZE V221
0x4a6: V253 = ISZERO V252
0x4a8: V254 = ISZERO V253
0x4a9: V255 = 0x4b1
0x4ac: JUMPI 0x4b1 V254
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V221, 0x95ea7b3, V246, 0x20, V249, V250, V249, 0x0, V221, V253]
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V221, 0x95ea7b3, V246, 0x20, V249, V250, V249, 0x0, V221, V253]

================================

Block 0x4ad
[0x4ad:0x4b0]
---
Predecessors: [0x3ec]
Successors: []
---
0x4ad PUSH1 0x0
0x4af DUP1
0x4b0 REVERT
---
0x4ad: V256 = 0x0
0x4b0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V221, 0x95ea7b3, V246, 0x20, V249, V250, V249, 0x0, V221, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V221, 0x95ea7b3, V246, 0x20, V249, V250, V249, 0x0, V221, V253]

================================

Block 0x4b1
[0x4b1:0x4bb]
---
Predecessors: [0x3ec]
Successors: [0x4bc, 0x4c5]
---
0x4b1 JUMPDEST
0x4b2 POP
0x4b3 GAS
0x4b4 CALL
0x4b5 ISZERO
0x4b6 DUP1
0x4b7 ISZERO
0x4b8 PUSH2 0x4c5
0x4bb JUMPI
---
0x4b1: JUMPDEST 
0x4b3: V257 = GAS
0x4b4: V258 = CALL V257 V221 0x0 V249 V250 V249 0x20
0x4b5: V259 = ISZERO V258
0x4b7: V260 = ISZERO V259
0x4b8: V261 = 0x4c5
0x4bb: JUMPI 0x4c5 V260
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V221, 0x95ea7b3, V246, 0x20, V249, V250, V249, 0x0, V221, V253]
Stack pops: 7
Stack additions: [V259]
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V221, 0x95ea7b3, V246, V259]

================================

Block 0x4bc
[0x4bc:0x4c4]
---
Predecessors: [0x4b1]
Successors: []
---
0x4bc RETURNDATASIZE
0x4bd PUSH1 0x0
0x4bf DUP1
0x4c0 RETURNDATACOPY
0x4c1 RETURNDATASIZE
0x4c2 PUSH1 0x0
0x4c4 REVERT
---
0x4bc: V262 = RETURNDATASIZE
0x4bd: V263 = 0x0
0x4c0: RETURNDATACOPY 0x0 0x0 V262
0x4c1: V264 = RETURNDATASIZE
0x4c2: V265 = 0x0
0x4c4: REVERT 0x0 V264
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V221, 0x95ea7b3, V246, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V221, 0x95ea7b3, V246, V259]

================================

Block 0x4c5
[0x4c5:0x4d6]
---
Predecessors: [0x4b1]
Successors: [0x4d7, 0x4db]
---
0x4c5 JUMPDEST
0x4c6 POP
0x4c7 POP
0x4c8 POP
0x4c9 POP
0x4ca PUSH1 0x40
0x4cc MLOAD
0x4cd RETURNDATASIZE
0x4ce PUSH1 0x20
0x4d0 DUP2
0x4d1 LT
0x4d2 ISZERO
0x4d3 PUSH2 0x4db
0x4d6 JUMPI
---
0x4c5: JUMPDEST 
0x4ca: V266 = 0x40
0x4cc: V267 = M[0x40]
0x4cd: V268 = RETURNDATASIZE
0x4ce: V269 = 0x20
0x4d1: V270 = LT V268 0x20
0x4d2: V271 = ISZERO V270
0x4d3: V272 = 0x4db
0x4d6: JUMPI 0x4db V271
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V221, 0x95ea7b3, V246, V259]
Stack pops: 4
Stack additions: [V267, V268]
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V267, V268]

================================

Block 0x4d7
[0x4d7:0x4da]
---
Predecessors: [0x4c5]
Successors: []
---
0x4d7 PUSH1 0x0
0x4d9 DUP1
0x4da REVERT
---
0x4d7: V273 = 0x0
0x4da: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V267, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V267, V268]

================================

Block 0x4db
[0x4db:0x5b5]
---
Predecessors: [0x4c5]
Successors: [0x5b6, 0x5ba]
---
0x4db JUMPDEST
0x4dc DUP2
0x4dd ADD
0x4de SWAP1
0x4df DUP1
0x4e0 DUP1
0x4e1 MLOAD
0x4e2 SWAP1
0x4e3 PUSH1 0x20
0x4e5 ADD
0x4e6 SWAP1
0x4e7 SWAP3
0x4e8 SWAP2
0x4e9 SWAP1
0x4ea POP
0x4eb POP
0x4ec POP
0x4ed POP
0x4ee PUSH1 0x2
0x4f0 PUSH1 0x0
0x4f2 SWAP1
0x4f3 SLOAD
0x4f4 SWAP1
0x4f5 PUSH2 0x100
0x4f8 EXP
0x4f9 SWAP1
0x4fa DIV
0x4fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x510 AND
0x511 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x526 AND
0x527 PUSH4 0x3bba21dc
0x52c DUP6
0x52d DUP6
0x52e DUP6
0x52f PUSH1 0x40
0x531 MLOAD
0x532 DUP5
0x533 PUSH4 0xffffffff
0x538 AND
0x539 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x557 MUL
0x558 DUP2
0x559 MSTORE
0x55a PUSH1 0x4
0x55c ADD
0x55d DUP1
0x55e DUP5
0x55f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x574 AND
0x575 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58a AND
0x58b DUP2
0x58c MSTORE
0x58d PUSH1 0x20
0x58f ADD
0x590 DUP4
0x591 DUP2
0x592 MSTORE
0x593 PUSH1 0x20
0x595 ADD
0x596 DUP3
0x597 DUP2
0x598 MSTORE
0x599 PUSH1 0x20
0x59b ADD
0x59c SWAP4
0x59d POP
0x59e POP
0x59f POP
0x5a0 POP
0x5a1 PUSH1 0x20
0x5a3 PUSH1 0x40
0x5a5 MLOAD
0x5a6 DUP1
0x5a7 DUP4
0x5a8 SUB
0x5a9 DUP2
0x5aa PUSH1 0x0
0x5ac DUP8
0x5ad DUP1
0x5ae EXTCODESIZE
0x5af ISZERO
0x5b0 DUP1
0x5b1 ISZERO
0x5b2 PUSH2 0x5ba
0x5b5 JUMPI
---
0x4db: JUMPDEST 
0x4dd: V274 = ADD V267 V268
0x4e1: V275 = M[V267]
0x4e3: V276 = 0x20
0x4e5: V277 = ADD 0x20 V267
0x4ee: V278 = 0x2
0x4f0: V279 = 0x0
0x4f3: V280 = S[0x2]
0x4f5: V281 = 0x100
0x4f8: V282 = EXP 0x100 0x0
0x4fa: V283 = DIV V280 0x1
0x4fb: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x510: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x511: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x526: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x527: V288 = 0x3bba21dc
0x52f: V289 = 0x40
0x531: V290 = M[0x40]
0x533: V291 = 0xffffffff
0x538: V292 = AND 0xffffffff 0x3bba21dc
0x539: V293 = 0x100000000000000000000000000000000000000000000000000000000
0x557: V294 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3bba21dc
0x559: M[V290] = 0x3bba21dc00000000000000000000000000000000000000000000000000000000
0x55a: V295 = 0x4
0x55c: V296 = ADD 0x4 V290
0x55f: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x574: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x575: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x58a: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x58c: M[V296] = V300
0x58d: V301 = 0x20
0x58f: V302 = ADD 0x20 V296
0x592: M[V302] = V64
0x593: V303 = 0x20
0x595: V304 = ADD 0x20 V302
0x598: M[V304] = V67
0x599: V305 = 0x20
0x59b: V306 = ADD 0x20 V304
0x5a1: V307 = 0x20
0x5a3: V308 = 0x40
0x5a5: V309 = M[0x40]
0x5a8: V310 = SUB V306 V309
0x5aa: V311 = 0x0
0x5ae: V312 = EXTCODESIZE V287
0x5af: V313 = ISZERO V312
0x5b1: V314 = ISZERO V313
0x5b2: V315 = 0x5ba
0x5b5: JUMPI 0x5ba V314
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V267, V268]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V287, 0x3bba21dc, V306, 0x20, V309, V310, V309, 0x0, V287, V313]
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V287, 0x3bba21dc, V306, 0x20, V309, V310, V309, 0x0, V287, V313]

================================

Block 0x5b6
[0x5b6:0x5b9]
---
Predecessors: [0x4db]
Successors: []
---
0x5b6 PUSH1 0x0
0x5b8 DUP1
0x5b9 REVERT
---
0x5b6: V316 = 0x0
0x5b9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V287, 0x3bba21dc, V306, 0x20, V309, V310, V309, 0x0, V287, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V287, 0x3bba21dc, V306, 0x20, V309, V310, V309, 0x0, V287, V313]

================================

Block 0x5ba
[0x5ba:0x5c4]
---
Predecessors: [0x4db]
Successors: [0x5c5, 0x5ce]
---
0x5ba JUMPDEST
0x5bb POP
0x5bc GAS
0x5bd CALL
0x5be ISZERO
0x5bf DUP1
0x5c0 ISZERO
0x5c1 PUSH2 0x5ce
0x5c4 JUMPI
---
0x5ba: JUMPDEST 
0x5bc: V317 = GAS
0x5bd: V318 = CALL V317 V287 0x0 V309 V310 V309 0x20
0x5be: V319 = ISZERO V318
0x5c0: V320 = ISZERO V319
0x5c1: V321 = 0x5ce
0x5c4: JUMPI 0x5ce V320
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V287, 0x3bba21dc, V306, 0x20, V309, V310, V309, 0x0, V287, V313]
Stack pops: 7
Stack additions: [V319]
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V287, 0x3bba21dc, V306, V319]

================================

Block 0x5c5
[0x5c5:0x5cd]
---
Predecessors: [0x5ba]
Successors: []
---
0x5c5 RETURNDATASIZE
0x5c6 PUSH1 0x0
0x5c8 DUP1
0x5c9 RETURNDATACOPY
0x5ca RETURNDATASIZE
0x5cb PUSH1 0x0
0x5cd REVERT
---
0x5c5: V322 = RETURNDATASIZE
0x5c6: V323 = 0x0
0x5c9: RETURNDATACOPY 0x0 0x0 V322
0x5ca: V324 = RETURNDATASIZE
0x5cb: V325 = 0x0
0x5cd: REVERT 0x0 V324
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V287, 0x3bba21dc, V306, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V287, 0x3bba21dc, V306, V319]

================================

Block 0x5ce
[0x5ce:0x5df]
---
Predecessors: [0x5ba]
Successors: [0x5e0, 0x5e4]
---
0x5ce JUMPDEST
0x5cf POP
0x5d0 POP
0x5d1 POP
0x5d2 POP
0x5d3 PUSH1 0x40
0x5d5 MLOAD
0x5d6 RETURNDATASIZE
0x5d7 PUSH1 0x20
0x5d9 DUP2
0x5da LT
0x5db ISZERO
0x5dc PUSH2 0x5e4
0x5df JUMPI
---
0x5ce: JUMPDEST 
0x5d3: V326 = 0x40
0x5d5: V327 = M[0x40]
0x5d6: V328 = RETURNDATASIZE
0x5d7: V329 = 0x20
0x5da: V330 = LT V328 0x20
0x5db: V331 = ISZERO V330
0x5dc: V332 = 0x5e4
0x5df: JUMPI 0x5e4 V331
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V287, 0x3bba21dc, V306, V319]
Stack pops: 4
Stack additions: [V327, V328]
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V327, V328]

================================

Block 0x5e0
[0x5e0:0x5e3]
---
Predecessors: [0x5ce]
Successors: []
---
0x5e0 PUSH1 0x0
0x5e2 DUP1
0x5e3 REVERT
---
0x5e0: V333 = 0x0
0x5e3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V327, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, 0x0, V327, V328]

================================

Block 0x5e4
[0x5e4:0x601]
---
Predecessors: [0x5ce]
Successors: [0x602, 0x606]
---
0x5e4 JUMPDEST
0x5e5 DUP2
0x5e6 ADD
0x5e7 SWAP1
0x5e8 DUP1
0x5e9 DUP1
0x5ea MLOAD
0x5eb SWAP1
0x5ec PUSH1 0x20
0x5ee ADD
0x5ef SWAP1
0x5f0 SWAP3
0x5f1 SWAP2
0x5f2 SWAP1
0x5f3 POP
0x5f4 POP
0x5f5 POP
0x5f6 SWAP1
0x5f7 POP
0x5f8 PUSH1 0x0
0x5fa DUP2
0x5fb GT
0x5fc ISZERO
0x5fd ISZERO
0x5fe PUSH2 0x606
0x601 JUMPI
---
0x5e4: JUMPDEST 
0x5e6: V334 = ADD V327 V328
0x5ea: V335 = M[V327]
0x5ec: V336 = 0x20
0x5ee: V337 = ADD 0x20 V327
0x5f8: V338 = 0x0
0x5fb: V339 = GT V335 0x0
0x5fc: V340 = ISZERO V339
0x5fd: V341 = ISZERO V340
0x5fe: V342 = 0x606
0x601: JUMPI 0x606 V341
---
Entry stack: [V11, 0x132, V61, V64, V67, 0x0, V327, V328]
Stack pops: 3
Stack additions: [V335]
Exit stack: [V11, 0x132, V61, V64, V67, V335]

================================

Block 0x602
[0x602:0x605]
---
Predecessors: [0x5e4]
Successors: []
---
0x602 PUSH1 0x0
0x604 DUP1
0x605 REVERT
---
0x602: V343 = 0x0
0x605: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V61, V64, V67, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V61, V64, V67, V335]

================================

Block 0x606
[0x606:0x683]
---
Predecessors: [0x5e4]
Successors: [0x132]
---
0x606 JUMPDEST
0x607 PUSH32 0xe0b10d335785c3e4383a2a529400c2225d31853d4e193ec5c295bcba2c838986
0x628 DUP5
0x629 PUSH1 0x0
0x62b DUP6
0x62c PUSH1 0x40
0x62e MLOAD
0x62f DUP1
0x630 DUP5
0x631 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x646 AND
0x647 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65c AND
0x65d DUP2
0x65e MSTORE
0x65f PUSH1 0x20
0x661 ADD
0x662 DUP4
0x663 ISZERO
0x664 ISZERO
0x665 ISZERO
0x666 ISZERO
0x667 DUP2
0x668 MSTORE
0x669 PUSH1 0x20
0x66b ADD
0x66c DUP3
0x66d DUP2
0x66e MSTORE
0x66f PUSH1 0x20
0x671 ADD
0x672 SWAP4
0x673 POP
0x674 POP
0x675 POP
0x676 POP
0x677 PUSH1 0x40
0x679 MLOAD
0x67a DUP1
0x67b SWAP2
0x67c SUB
0x67d SWAP1
0x67e LOG1
0x67f POP
0x680 POP
0x681 POP
0x682 POP
0x683 JUMP
---
0x606: JUMPDEST 
0x607: V344 = 0xe0b10d335785c3e4383a2a529400c2225d31853d4e193ec5c295bcba2c838986
0x629: V345 = 0x0
0x62c: V346 = 0x40
0x62e: V347 = M[0x40]
0x631: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x646: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x647: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x65c: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x65e: M[V347] = V351
0x65f: V352 = 0x20
0x661: V353 = ADD 0x20 V347
0x663: V354 = ISZERO 0x0
0x664: V355 = ISZERO 0x1
0x665: V356 = ISZERO 0x0
0x666: V357 = ISZERO 0x1
0x668: M[V353] = 0x0
0x669: V358 = 0x20
0x66b: V359 = ADD 0x20 V353
0x66e: M[V359] = V64
0x66f: V360 = 0x20
0x671: V361 = ADD 0x20 V359
0x677: V362 = 0x40
0x679: V363 = M[0x40]
0x67c: V364 = SUB V361 V363
0x67e: LOG V363 V364 0xe0b10d335785c3e4383a2a529400c2225d31853d4e193ec5c295bcba2c838986
0x683: JUMP 0x132
---
Entry stack: [V11, 0x132, V61, V64, V67, V335]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x684
[0x684:0x6dc]
---
Predecessors: [0x140]
Successors: [0x6dd, 0x6de]
---
0x684 JUMPDEST
0x685 PUSH1 0x0
0x687 DUP1
0x688 PUSH1 0x0
0x68a SWAP1
0x68b SLOAD
0x68c SWAP1
0x68d PUSH2 0x100
0x690 EXP
0x691 SWAP1
0x692 DIV
0x693 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a8 AND
0x6a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6be AND
0x6bf CALLER
0x6c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d5 AND
0x6d6 EQ
0x6d7 ISZERO
0x6d8 ISZERO
0x6d9 PUSH2 0x6de
0x6dc JUMPI
---
0x684: JUMPDEST 
0x685: V365 = 0x0
0x688: V366 = 0x0
0x68b: V367 = S[0x0]
0x68d: V368 = 0x100
0x690: V369 = EXP 0x100 0x0
0x692: V370 = DIV V367 0x1
0x693: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a8: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x6a9: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x6be: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x6bf: V375 = CALLER
0x6c0: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d5: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x6d6: V378 = EQ V377 V374
0x6d7: V379 = ISZERO V378
0x6d8: V380 = ISZERO V379
0x6d9: V381 = 0x6de
0x6dc: JUMPI 0x6de V380
---
Entry stack: [V11, 0x189, V82, V85, V88]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x189, V82, V85, V88, 0x0]

================================

Block 0x6dd
[0x6dd:0x6dd]
---
Predecessors: [0x684]
Successors: []
---
0x6dd INVALID
---
0x6dd: INVALID 
---
Entry stack: [V11, 0x189, V82, V85, V88, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V82, V85, V88, 0x0]

================================

Block 0x6de
[0x6de:0x79e]
---
Predecessors: [0x684]
Successors: [0x79f, 0x7a3]
---
0x6de JUMPDEST
0x6df PUSH1 0x2
0x6e1 PUSH1 0x0
0x6e3 SWAP1
0x6e4 SLOAD
0x6e5 SWAP1
0x6e6 PUSH2 0x100
0x6e9 EXP
0x6ea SWAP1
0x6eb DIV
0x6ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x701 AND
0x702 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x717 AND
0x718 PUSH4 0x7a2a0456
0x71d DUP5
0x71e DUP7
0x71f DUP6
0x720 PUSH1 0x40
0x722 MLOAD
0x723 DUP5
0x724 PUSH4 0xffffffff
0x729 AND
0x72a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x748 MUL
0x749 DUP2
0x74a MSTORE
0x74b PUSH1 0x4
0x74d ADD
0x74e DUP1
0x74f DUP4
0x750 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x765 AND
0x766 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77b AND
0x77c DUP2
0x77d MSTORE
0x77e PUSH1 0x20
0x780 ADD
0x781 DUP3
0x782 DUP2
0x783 MSTORE
0x784 PUSH1 0x20
0x786 ADD
0x787 SWAP3
0x788 POP
0x789 POP
0x78a POP
0x78b PUSH1 0x20
0x78d PUSH1 0x40
0x78f MLOAD
0x790 DUP1
0x791 DUP4
0x792 SUB
0x793 DUP2
0x794 DUP6
0x795 DUP9
0x796 DUP1
0x797 EXTCODESIZE
0x798 ISZERO
0x799 DUP1
0x79a ISZERO
0x79b PUSH2 0x7a3
0x79e JUMPI
---
0x6de: JUMPDEST 
0x6df: V382 = 0x2
0x6e1: V383 = 0x0
0x6e4: V384 = S[0x2]
0x6e6: V385 = 0x100
0x6e9: V386 = EXP 0x100 0x0
0x6eb: V387 = DIV V384 0x1
0x6ec: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x701: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x702: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x717: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x718: V392 = 0x7a2a0456
0x720: V393 = 0x40
0x722: V394 = M[0x40]
0x724: V395 = 0xffffffff
0x729: V396 = AND 0xffffffff 0x7a2a0456
0x72a: V397 = 0x100000000000000000000000000000000000000000000000000000000
0x748: V398 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7a2a0456
0x74a: M[V394] = 0x7a2a045600000000000000000000000000000000000000000000000000000000
0x74b: V399 = 0x4
0x74d: V400 = ADD 0x4 V394
0x750: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x765: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x766: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x77b: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x77d: M[V400] = V404
0x77e: V405 = 0x20
0x780: V406 = ADD 0x20 V400
0x783: M[V406] = V88
0x784: V407 = 0x20
0x786: V408 = ADD 0x20 V406
0x78b: V409 = 0x20
0x78d: V410 = 0x40
0x78f: V411 = M[0x40]
0x792: V412 = SUB V408 V411
0x797: V413 = EXTCODESIZE V391
0x798: V414 = ISZERO V413
0x79a: V415 = ISZERO V414
0x79b: V416 = 0x7a3
0x79e: JUMPI 0x7a3 V415
---
Entry stack: [V11, 0x189, V82, V85, V88, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V391, 0x7a2a0456, S2, V408, 0x20, V411, V412, V411, S2, V391, V414]
Exit stack: [V11, 0x189, V82, V85, V88, 0x0, V391, 0x7a2a0456, V85, V408, 0x20, V411, V412, V411, V85, V391, V414]

================================

Block 0x79f
[0x79f:0x7a2]
---
Predecessors: [0x6de]
Successors: []
---
0x79f PUSH1 0x0
0x7a1 DUP1
0x7a2 REVERT
---
0x79f: V417 = 0x0
0x7a2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V82, V85, V88, 0x0, V391, 0x7a2a0456, V85, V408, 0x20, V411, V412, V411, V85, V391, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V82, V85, V88, 0x0, V391, 0x7a2a0456, V85, V408, 0x20, V411, V412, V411, V85, V391, V414]

================================

Block 0x7a3
[0x7a3:0x7ad]
---
Predecessors: [0x6de]
Successors: [0x7ae, 0x7b7]
---
0x7a3 JUMPDEST
0x7a4 POP
0x7a5 GAS
0x7a6 CALL
0x7a7 ISZERO
0x7a8 DUP1
0x7a9 ISZERO
0x7aa PUSH2 0x7b7
0x7ad JUMPI
---
0x7a3: JUMPDEST 
0x7a5: V418 = GAS
0x7a6: V419 = CALL V418 V391 V85 V411 V412 V411 0x20
0x7a7: V420 = ISZERO V419
0x7a9: V421 = ISZERO V420
0x7aa: V422 = 0x7b7
0x7ad: JUMPI 0x7b7 V421
---
Entry stack: [V11, 0x189, V82, V85, V88, 0x0, V391, 0x7a2a0456, V85, V408, 0x20, V411, V412, V411, V85, V391, V414]
Stack pops: 7
Stack additions: [V420]
Exit stack: [V11, 0x189, V82, V85, V88, 0x0, V391, 0x7a2a0456, V85, V408, V420]

================================

Block 0x7ae
[0x7ae:0x7b6]
---
Predecessors: [0x7a3]
Successors: []
---
0x7ae RETURNDATASIZE
0x7af PUSH1 0x0
0x7b1 DUP1
0x7b2 RETURNDATACOPY
0x7b3 RETURNDATASIZE
0x7b4 PUSH1 0x0
0x7b6 REVERT
---
0x7ae: V423 = RETURNDATASIZE
0x7af: V424 = 0x0
0x7b2: RETURNDATACOPY 0x0 0x0 V423
0x7b3: V425 = RETURNDATASIZE
0x7b4: V426 = 0x0
0x7b6: REVERT 0x0 V425
---
Entry stack: [V11, 0x189, V82, V85, V88, 0x0, V391, 0x7a2a0456, V85, V408, V420]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V82, V85, V88, 0x0, V391, 0x7a2a0456, V85, V408, V420]

================================

Block 0x7b7
[0x7b7:0x7c9]
---
Predecessors: [0x7a3]
Successors: [0x7ca, 0x7ce]
---
0x7b7 JUMPDEST
0x7b8 POP
0x7b9 POP
0x7ba POP
0x7bb POP
0x7bc POP
0x7bd PUSH1 0x40
0x7bf MLOAD
0x7c0 RETURNDATASIZE
0x7c1 PUSH1 0x20
0x7c3 DUP2
0x7c4 LT
0x7c5 ISZERO
0x7c6 PUSH2 0x7ce
0x7c9 JUMPI
---
0x7b7: JUMPDEST 
0x7bd: V427 = 0x40
0x7bf: V428 = M[0x40]
0x7c0: V429 = RETURNDATASIZE
0x7c1: V430 = 0x20
0x7c4: V431 = LT V429 0x20
0x7c5: V432 = ISZERO V431
0x7c6: V433 = 0x7ce
0x7c9: JUMPI 0x7ce V432
---
Entry stack: [V11, 0x189, V82, V85, V88, 0x0, V391, 0x7a2a0456, V85, V408, V420]
Stack pops: 5
Stack additions: [V428, V429]
Exit stack: [V11, 0x189, V82, V85, V88, 0x0, V428, V429]

================================

Block 0x7ca
[0x7ca:0x7cd]
---
Predecessors: [0x7b7]
Successors: []
---
0x7ca PUSH1 0x0
0x7cc DUP1
0x7cd REVERT
---
0x7ca: V434 = 0x0
0x7cd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V82, V85, V88, 0x0, V428, V429]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V82, V85, V88, 0x0, V428, V429]

================================

Block 0x7ce
[0x7ce:0x7eb]
---
Predecessors: [0x7b7]
Successors: [0x7ec, 0x7f0]
---
0x7ce JUMPDEST
0x7cf DUP2
0x7d0 ADD
0x7d1 SWAP1
0x7d2 DUP1
0x7d3 DUP1
0x7d4 MLOAD
0x7d5 SWAP1
0x7d6 PUSH1 0x20
0x7d8 ADD
0x7d9 SWAP1
0x7da SWAP3
0x7db SWAP2
0x7dc SWAP1
0x7dd POP
0x7de POP
0x7df POP
0x7e0 SWAP1
0x7e1 POP
0x7e2 PUSH1 0x0
0x7e4 DUP2
0x7e5 GT
0x7e6 ISZERO
0x7e7 ISZERO
0x7e8 PUSH2 0x7f0
0x7eb JUMPI
---
0x7ce: JUMPDEST 
0x7d0: V435 = ADD V428 V429
0x7d4: V436 = M[V428]
0x7d6: V437 = 0x20
0x7d8: V438 = ADD 0x20 V428
0x7e2: V439 = 0x0
0x7e5: V440 = GT V436 0x0
0x7e6: V441 = ISZERO V440
0x7e7: V442 = ISZERO V441
0x7e8: V443 = 0x7f0
0x7eb: JUMPI 0x7f0 V442
---
Entry stack: [V11, 0x189, V82, V85, V88, 0x0, V428, V429]
Stack pops: 3
Stack additions: [V436]
Exit stack: [V11, 0x189, V82, V85, V88, V436]

================================

Block 0x7ec
[0x7ec:0x7ef]
---
Predecessors: [0x7ce]
Successors: []
---
0x7ec PUSH1 0x0
0x7ee DUP1
0x7ef REVERT
---
0x7ec: V444 = 0x0
0x7ef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V82, V85, V88, V436]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V82, V85, V88, V436]

================================

Block 0x7f0
[0x7f0:0x86d]
---
Predecessors: [0x7ce]
Successors: [0x189]
---
0x7f0 JUMPDEST
0x7f1 PUSH32 0xe0b10d335785c3e4383a2a529400c2225d31853d4e193ec5c295bcba2c838986
0x812 DUP5
0x813 PUSH1 0x1
0x815 DUP4
0x816 PUSH1 0x40
0x818 MLOAD
0x819 DUP1
0x81a DUP5
0x81b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x830 AND
0x831 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x846 AND
0x847 DUP2
0x848 MSTORE
0x849 PUSH1 0x20
0x84b ADD
0x84c DUP4
0x84d ISZERO
0x84e ISZERO
0x84f ISZERO
0x850 ISZERO
0x851 DUP2
0x852 MSTORE
0x853 PUSH1 0x20
0x855 ADD
0x856 DUP3
0x857 DUP2
0x858 MSTORE
0x859 PUSH1 0x20
0x85b ADD
0x85c SWAP4
0x85d POP
0x85e POP
0x85f POP
0x860 POP
0x861 PUSH1 0x40
0x863 MLOAD
0x864 DUP1
0x865 SWAP2
0x866 SUB
0x867 SWAP1
0x868 LOG1
0x869 POP
0x86a POP
0x86b POP
0x86c POP
0x86d JUMP
---
0x7f0: JUMPDEST 
0x7f1: V445 = 0xe0b10d335785c3e4383a2a529400c2225d31853d4e193ec5c295bcba2c838986
0x813: V446 = 0x1
0x816: V447 = 0x40
0x818: V448 = M[0x40]
0x81b: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x830: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x831: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x846: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x848: M[V448] = V452
0x849: V453 = 0x20
0x84b: V454 = ADD 0x20 V448
0x84d: V455 = ISZERO 0x1
0x84e: V456 = ISZERO 0x0
0x84f: V457 = ISZERO 0x1
0x850: V458 = ISZERO 0x0
0x852: M[V454] = 0x1
0x853: V459 = 0x20
0x855: V460 = ADD 0x20 V454
0x858: M[V460] = V436
0x859: V461 = 0x20
0x85b: V462 = ADD 0x20 V460
0x861: V463 = 0x40
0x863: V464 = M[0x40]
0x866: V465 = SUB V462 V464
0x868: LOG V464 V465 0xe0b10d335785c3e4383a2a529400c2225d31853d4e193ec5c295bcba2c838986
0x86d: JUMP 0x189
---
Entry stack: [V11, 0x189, V82, V85, V88, V436]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x86e
[0x86e:0x8c4]
---
Predecessors: [0x197]
Successors: [0x8c5, 0x8c6]
---
0x86e JUMPDEST
0x86f PUSH1 0x0
0x871 DUP1
0x872 SWAP1
0x873 SLOAD
0x874 SWAP1
0x875 PUSH2 0x100
0x878 EXP
0x879 SWAP1
0x87a DIV
0x87b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x890 AND
0x891 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a6 AND
0x8a7 CALLER
0x8a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bd AND
0x8be EQ
0x8bf ISZERO
0x8c0 ISZERO
0x8c1 PUSH2 0x8c6
0x8c4 JUMPI
---
0x86e: JUMPDEST 
0x86f: V466 = 0x0
0x873: V467 = S[0x0]
0x875: V468 = 0x100
0x878: V469 = EXP 0x100 0x0
0x87a: V470 = DIV V467 0x1
0x87b: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x890: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x891: V473 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a6: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x8a7: V475 = CALLER
0x8a8: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bd: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V475
0x8be: V478 = EQ V477 V474
0x8bf: V479 = ISZERO V478
0x8c0: V480 = ISZERO V479
0x8c1: V481 = 0x8c6
0x8c4: JUMPI 0x8c6 V480
---
Entry stack: [V11, 0x1cc, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cc, V103]

================================

Block 0x8c5
[0x8c5:0x8c5]
---
Predecessors: [0x86e]
Successors: []
---
0x8c5 INVALID
---
0x8c5: INVALID 
---
Entry stack: [V11, 0x1cc, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cc, V103]

================================

Block 0x8c6
[0x8c6:0x8fc]
---
Predecessors: [0x86e]
Successors: [0x8fd, 0x93d]
---
0x8c6 JUMPDEST
0x8c7 PUSH1 0x0
0x8c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8de AND
0x8df DUP2
0x8e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f5 AND
0x8f6 EQ
0x8f7 ISZERO
0x8f8 ISZERO
0x8f9 PUSH2 0x93d
0x8fc JUMPI
---
0x8c6: JUMPDEST 
0x8c7: V482 = 0x0
0x8c9: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x8de: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x8e0: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f5: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x8f6: V487 = EQ V486 0x0
0x8f7: V488 = ISZERO V487
0x8f8: V489 = ISZERO V488
0x8f9: V490 = 0x93d
0x8fc: JUMPI 0x93d V489
---
Entry stack: [V11, 0x1cc, V103]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1cc, V103]

================================

Block 0x8fd
[0x8fd:0x93c]
---
Predecessors: [0x8c6]
Successors: [0x93d]
---
0x8fd DUP1
0x8fe PUSH1 0x0
0x900 DUP1
0x901 PUSH2 0x100
0x904 EXP
0x905 DUP2
0x906 SLOAD
0x907 DUP2
0x908 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91d MUL
0x91e NOT
0x91f AND
0x920 SWAP1
0x921 DUP4
0x922 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x937 AND
0x938 MUL
0x939 OR
0x93a SWAP1
0x93b SSTORE
0x93c POP
---
0x8fe: V491 = 0x0
0x901: V492 = 0x100
0x904: V493 = EXP 0x100 0x0
0x906: V494 = S[0x0]
0x908: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x91d: V496 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x91e: V497 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x91f: V498 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V494
0x922: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x937: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x938: V501 = MUL V500 0x1
0x939: V502 = OR V501 V498
0x93b: S[0x0] = V502
---
Entry stack: [V11, 0x1cc, V103]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1cc, V103]

================================

Block 0x93d
[0x93d:0x93f]
---
Predecessors: [0x8c6, 0x8fd]
Successors: [0x1cc]
---
0x93d JUMPDEST
0x93e POP
0x93f JUMP
---
0x93d: JUMPDEST 
0x93f: JUMP 0x1cc
---
Entry stack: [V11, 0x1cc, V103]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x940
[0x940:0x96b]
---
Predecessors: []
Successors: []
---
0x940 STOP
0x941 LOG1
0x942 PUSH6 0x627a7a723058
0x949 SHA3
0x94a MISSING 0x2e
0x94b MISSING 0xed
0x94c MISSING 0xbd
0x94d MISSING 0xd8
0x94e SWAP16
0x94f PUSH16 0x76e6ae6dc54d36ac292b5b07c92a4d57
0x960 MISSING 0xcb
0x961 DUP13
0x962 SDIV
0x963 MISSING 0xa7
0x964 DUP12
0x965 MISSING 0xab
0x966 MISSING 0xc2
0x967 EXP
0x968 SGT
0x969 STATICCALL
0x96a STOP
0x96b MISSING 0x29
---
0x940: STOP 
0x941: LOG S0 S1 S2
0x942: V503 = 0x627a7a723058
0x949: V504 = SHA3 0x627a7a723058 S3
0x94a: MISSING 0x2e
0x94b: MISSING 0xed
0x94c: MISSING 0xbd
0x94d: MISSING 0xd8
0x94f: V505 = 0x76e6ae6dc54d36ac292b5b07c92a4d57
0x960: MISSING 0xcb
0x962: V506 = SDIV S12 S0
0x963: MISSING 0xa7
0x965: MISSING 0xab
0x966: MISSING 0xc2
0x967: V507 = EXP S0 S1
0x968: V508 = SGT V507 S2
0x969: V509 = STATICCALL V508 S3 S4 S5 S6 S7
0x96a: STOP 
0x96b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V504, 0x76e6ae6dc54d36ac292b5b07c92a4d57, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, V506, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V509]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x6f
Exit block: 0x84
Body: 0x6f, 0x77, 0x7b, 0x84, 0x1ce

Function 1:
Public function signature: 0x1a02d62a
Entry block: 0xc6
Exit block: 0x24b
Body: 0xc6, 0xce, 0xd2, 0x1f4, 0x24b, 0x24c

Function 2:
Public function signature: 0xd2de91c6
Entry block: 0xdd
Exit block: 0x132
Body: 0xdd, 0xe5, 0xe9, 0x132, 0x286, 0x2df, 0x2e0, 0x3a2, 0x3a6, 0x3b1, 0x3ba, 0x3cc, 0x3d0, 0x3e8, 0x3ec, 0x4ad, 0x4b1, 0x4bc, 0x4c5, 0x4d7, 0x4db, 0x5b6, 0x5ba, 0x5c5, 0x5ce, 0x5e0, 0x5e4, 0x602, 0x606

Function 3:
Public function signature: 0xec8d5ef8
Entry block: 0x134
Exit block: 0x189
Body: 0x134, 0x13c, 0x140, 0x189, 0x684, 0x6dd, 0x6de, 0x79f, 0x7a3, 0x7ae, 0x7b7, 0x7ca, 0x7ce, 0x7ec, 0x7f0

Function 4:
Public function signature: 0xf2fde38b
Entry block: 0x18b
Exit block: 0x1cc
Body: 0x18b, 0x193, 0x197, 0x1cc, 0x86e, 0x8c5, 0x8c6, 0x8fd, 0x93d

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

