Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x72]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x72
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x72
0xa: JUMPI 0x72 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x8a]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xa19b14a
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x8a
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xa19b14a
0x20: V14 = EQ V12 0xa19b14a
0x21: V15 = 0x8a
0x24: JUMPI 0x8a V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xd9]
---
0x25 DUP1
0x26 PUSH4 0x2cf2c0af
0x2b EQ
0x2c PUSH2 0xd9
0x2f JUMPI
---
0x26: V16 = 0x2cf2c0af
0x2b: V17 = EQ 0x2cf2c0af V12
0x2c: V18 = 0xd9
0x2f: JUMPI 0xd9 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xf1]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0xf1
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0xf1
0x3a: JUMPI 0xf1 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x109]
---
0x3b DUP1
0x3c PUSH4 0x43d726d6
0x41 EQ
0x42 PUSH2 0x109
0x45 JUMPI
---
0x3c: V22 = 0x43d726d6
0x41: V23 = EQ 0x43d726d6 V12
0x42: V24 = 0x109
0x45: JUMPI 0x109 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x11e]
---
0x46 DUP1
0x47 PUSH4 0x893d20e8
0x4c EQ
0x4d PUSH2 0x11e
0x50 JUMPI
---
0x47: V25 = 0x893d20e8
0x4c: V26 = EQ 0x893d20e8 V12
0x4d: V27 = 0x11e
0x50: JUMPI 0x11e V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x14d]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x14d
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x14d
0x5b: JUMPI 0x14d V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x17c]
---
0x5c DUP1
0x5d PUSH4 0xd0e30db0
0x62 EQ
0x63 PUSH2 0x17c
0x66 JUMPI
---
0x5d: V31 = 0xd0e30db0
0x62: V32 = EQ 0xd0e30db0 V12
0x63: V33 = 0x17c
0x66: JUMPI 0x17c V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x186]
---
0x67 DUP1
0x68 PUSH4 0xf1b83630
0x6d EQ
0x6e PUSH2 0x186
0x71 JUMPI
---
0x68: V34 = 0xf1b83630
0x6d: V35 = EQ 0xf1b83630 V12
0x6e: V36 = 0x186
0x71: JUMPI 0x186 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x78]
---
Predecessors: [0x0, 0x67]
Successors: [0x79, 0x7d]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x72: JUMPDEST 
0x73: V37 = CALLVALUE
0x74: V38 = ISZERO V37
0x75: V39 = 0x7d
0x78: JUMPI 0x7d V38
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x72]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V40 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x72]
Successors: [0x81]
---
0x7d JUMPDEST
0x7e PUSH2 0x88
---
0x7d: JUMPDEST 
0x7e: V41 = 0x88
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x88]
Exit stack: [V12, 0x88]

================================

Block 0x81
[0x81:0x85]
---
Predecessors: [0x7d]
Successors: []
---
0x81 JUMPDEST
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x81: JUMPDEST 
0x82: V42 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x86
[0x86:0x87]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x86 JUMPDEST
0x87 JUMP
---
0x86: JUMPDEST 
0x87: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x88
[0x88:0x89]
---
Predecessors: [0x282, 0x304, 0x3cf, 0x4b3, 0x531]
Successors: []
---
0x88 JUMPDEST
0x89 STOP
---
0x88: JUMPDEST 
0x89: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a
[0x8a:0x90]
---
Predecessors: [0xb]
Successors: [0x91, 0x95]
---
0x8a JUMPDEST
0x8b CALLVALUE
0x8c ISZERO
0x8d PUSH2 0x95
0x90 JUMPI
---
0x8a: JUMPDEST 
0x8b: V43 = CALLVALUE
0x8c: V44 = ISZERO V43
0x8d: V45 = 0x95
0x90: JUMPI 0x95 V44
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x91
[0x91:0x94]
---
Predecessors: [0x8a]
Successors: []
---
0x91 PUSH1 0x0
0x93 DUP1
0x94 REVERT
---
0x91: V46 = 0x0
0x94: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95
[0x95:0xd6]
---
Predecessors: [0x8a]
Successors: [0x19e]
---
0x95 JUMPDEST
0x96 PUSH2 0x88
0x99 PUSH1 0x1
0x9b PUSH1 0xa0
0x9d PUSH1 0x2
0x9f EXP
0xa0 SUB
0xa1 PUSH1 0x4
0xa3 CALLDATALOAD
0xa4 DUP2
0xa5 AND
0xa6 SWAP1
0xa7 PUSH1 0x24
0xa9 CALLDATALOAD
0xaa SWAP1
0xab PUSH1 0x44
0xad CALLDATALOAD
0xae DUP2
0xaf AND
0xb0 SWAP1
0xb1 PUSH1 0x64
0xb3 CALLDATALOAD
0xb4 SWAP1
0xb5 PUSH1 0x84
0xb7 CALLDATALOAD
0xb8 SWAP1
0xb9 PUSH1 0xa4
0xbb CALLDATALOAD
0xbc SWAP1
0xbd PUSH1 0xc4
0xbf CALLDATALOAD
0xc0 AND
0xc1 PUSH1 0xff
0xc3 PUSH1 0xe4
0xc5 CALLDATALOAD
0xc6 AND
0xc7 PUSH2 0x104
0xca CALLDATALOAD
0xcb PUSH2 0x124
0xce CALLDATALOAD
0xcf PUSH2 0x144
0xd2 CALLDATALOAD
0xd3 PUSH2 0x19e
0xd6 JUMP
---
0x95: JUMPDEST 
0x96: V47 = 0x88
0x99: V48 = 0x1
0x9b: V49 = 0xa0
0x9d: V50 = 0x2
0x9f: V51 = EXP 0x2 0xa0
0xa0: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1: V53 = 0x4
0xa3: V54 = CALLDATALOAD 0x4
0xa5: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xa7: V56 = 0x24
0xa9: V57 = CALLDATALOAD 0x24
0xab: V58 = 0x44
0xad: V59 = CALLDATALOAD 0x44
0xaf: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xb1: V61 = 0x64
0xb3: V62 = CALLDATALOAD 0x64
0xb5: V63 = 0x84
0xb7: V64 = CALLDATALOAD 0x84
0xb9: V65 = 0xa4
0xbb: V66 = CALLDATALOAD 0xa4
0xbd: V67 = 0xc4
0xbf: V68 = CALLDATALOAD 0xc4
0xc0: V69 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xc1: V70 = 0xff
0xc3: V71 = 0xe4
0xc5: V72 = CALLDATALOAD 0xe4
0xc6: V73 = AND V72 0xff
0xc7: V74 = 0x104
0xca: V75 = CALLDATALOAD 0x104
0xcb: V76 = 0x124
0xce: V77 = CALLDATALOAD 0x124
0xcf: V78 = 0x144
0xd2: V79 = CALLDATALOAD 0x144
0xd3: V80 = 0x19e
0xd6: JUMP 0x19e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79]
Exit stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79]

================================

Block 0xd7
[0xd7:0xd8]
---
Predecessors: []
Successors: []
---
0xd7 JUMPDEST
0xd8 STOP
---
0xd7: JUMPDEST 
0xd8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd9
[0xd9:0xdf]
---
Predecessors: [0x25]
Successors: [0xe0, 0xe4]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0xd9: JUMPDEST 
0xda: V81 = CALLVALUE
0xdb: V82 = ISZERO V81
0xdc: V83 = 0xe4
0xdf: JUMPI 0xe4 V82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0xd9]
Successors: []
---
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 REVERT
---
0xe0: V84 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe4
[0xe4:0xee]
---
Predecessors: [0xd9]
Successors: [0x290]
---
0xe4 JUMPDEST
0xe5 PUSH2 0x88
0xe8 PUSH1 0x4
0xea CALLDATALOAD
0xeb PUSH2 0x290
0xee JUMP
---
0xe4: JUMPDEST 
0xe5: V85 = 0x88
0xe8: V86 = 0x4
0xea: V87 = CALLDATALOAD 0x4
0xeb: V88 = 0x290
0xee: JUMP 0x290
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x88, V87]
Exit stack: [V12, 0x88, V87]

================================

Block 0xef
[0xef:0xf0]
---
Predecessors: []
Successors: []
---
0xef JUMPDEST
0xf0 STOP
---
0xef: JUMPDEST 
0xf0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0x30]
Successors: [0xf8, 0xfc]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V89 = CALLVALUE
0xf3: V90 = ISZERO V89
0xf4: V91 = 0xfc
0xf7: JUMPI 0xfc V90
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V92 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfc
[0xfc:0x106]
---
Predecessors: [0xf1]
Successors: [0x308]
---
0xfc JUMPDEST
0xfd PUSH2 0x88
0x100 PUSH1 0x4
0x102 CALLDATALOAD
0x103 PUSH2 0x308
0x106 JUMP
---
0xfc: JUMPDEST 
0xfd: V93 = 0x88
0x100: V94 = 0x4
0x102: V95 = CALLDATALOAD 0x4
0x103: V96 = 0x308
0x106: JUMP 0x308
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x88, V95]
Exit stack: [V12, 0x88, V95]

================================

Block 0x107
[0x107:0x108]
---
Predecessors: []
Successors: []
---
0x107 JUMPDEST
0x108 STOP
---
0x107: JUMPDEST 
0x108: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x109
[0x109:0x10f]
---
Predecessors: [0x3b]
Successors: [0x110, 0x114]
---
0x109 JUMPDEST
0x10a CALLVALUE
0x10b ISZERO
0x10c PUSH2 0x114
0x10f JUMPI
---
0x109: JUMPDEST 
0x10a: V97 = CALLVALUE
0x10b: V98 = ISZERO V97
0x10c: V99 = 0x114
0x10f: JUMPI 0x114 V98
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0x109]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V100 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x114
[0x114:0x11b]
---
Predecessors: [0x109]
Successors: [0x3d2]
---
0x114 JUMPDEST
0x115 PUSH2 0x88
0x118 PUSH2 0x3d2
0x11b JUMP
---
0x114: JUMPDEST 
0x115: V101 = 0x88
0x118: V102 = 0x3d2
0x11b: JUMP 0x3d2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x88]
Exit stack: [V12, 0x88]

================================

Block 0x11c
[0x11c:0x11d]
---
Predecessors: []
Successors: []
---
0x11c JUMPDEST
0x11d STOP
---
0x11c: JUMPDEST 
0x11d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11e
[0x11e:0x124]
---
Predecessors: [0x46]
Successors: [0x125, 0x129]
---
0x11e JUMPDEST
0x11f CALLVALUE
0x120 ISZERO
0x121 PUSH2 0x129
0x124 JUMPI
---
0x11e: JUMPDEST 
0x11f: V103 = CALLVALUE
0x120: V104 = ISZERO V103
0x121: V105 = 0x129
0x124: JUMPI 0x129 V104
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x125
[0x125:0x128]
---
Predecessors: [0x11e]
Successors: []
---
0x125 PUSH1 0x0
0x127 DUP1
0x128 REVERT
---
0x125: V106 = 0x0
0x128: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x129
[0x129:0x130]
---
Predecessors: [0x11e]
Successors: [0x3fe]
---
0x129 JUMPDEST
0x12a PUSH2 0x131
0x12d PUSH2 0x3fe
0x130 JUMP
---
0x129: JUMPDEST 
0x12a: V107 = 0x131
0x12d: V108 = 0x3fe
0x130: JUMP 0x3fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V12, 0x131]

================================

Block 0x131
[0x131:0x14c]
---
Predecessors: [0x429, 0x42c]
Successors: []
---
0x131 JUMPDEST
0x132 PUSH1 0x40
0x134 MLOAD
0x135 PUSH1 0x1
0x137 PUSH1 0xa0
0x139 PUSH1 0x2
0x13b EXP
0x13c SUB
0x13d SWAP1
0x13e SWAP2
0x13f AND
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 ADD
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 SWAP2
0x14a SUB
0x14b SWAP1
0x14c RETURN
---
0x131: JUMPDEST 
0x132: V109 = 0x40
0x134: V110 = M[0x40]
0x135: V111 = 0x1
0x137: V112 = 0xa0
0x139: V113 = 0x2
0x13b: V114 = EXP 0x2 0xa0
0x13c: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V116 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x141: M[V110] = V116
0x142: V117 = 0x20
0x144: V118 = ADD 0x20 V110
0x145: V119 = 0x40
0x147: V120 = M[0x40]
0x14a: V121 = SUB V118 V120
0x14c: RETURN V120 V121
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x14d
[0x14d:0x153]
---
Predecessors: [0x51]
Successors: [0x154, 0x158]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x14d: JUMPDEST 
0x14e: V122 = CALLVALUE
0x14f: V123 = ISZERO V122
0x150: V124 = 0x158
0x153: JUMPI 0x158 V123
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x14d]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V125 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x158
[0x158:0x15f]
---
Predecessors: [0x14d]
Successors: [0x42c]
---
0x158 JUMPDEST
0x159 PUSH2 0x131
0x15c PUSH2 0x42c
0x15f JUMP
---
0x158: JUMPDEST 
0x159: V126 = 0x131
0x15c: V127 = 0x42c
0x15f: JUMP 0x42c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V12, 0x131]

================================

Block 0x160
[0x160:0x17b]
---
Predecessors: []
Successors: []
---
0x160 JUMPDEST
0x161 PUSH1 0x40
0x163 MLOAD
0x164 PUSH1 0x1
0x166 PUSH1 0xa0
0x168 PUSH1 0x2
0x16a EXP
0x16b SUB
0x16c SWAP1
0x16d SWAP2
0x16e AND
0x16f DUP2
0x170 MSTORE
0x171 PUSH1 0x20
0x173 ADD
0x174 PUSH1 0x40
0x176 MLOAD
0x177 DUP1
0x178 SWAP2
0x179 SUB
0x17a SWAP1
0x17b RETURN
---
0x160: JUMPDEST 
0x161: V128 = 0x40
0x163: V129 = M[0x40]
0x164: V130 = 0x1
0x166: V131 = 0xa0
0x168: V132 = 0x2
0x16a: V133 = EXP 0x2 0xa0
0x16b: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16e: V135 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x170: M[V129] = V135
0x171: V136 = 0x20
0x173: V137 = ADD 0x20 V129
0x174: V138 = 0x40
0x176: V139 = M[0x40]
0x179: V140 = SUB V137 V139
0x17b: RETURN V139 V140
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x17c
[0x17c:0x183]
---
Predecessors: [0x5c]
Successors: [0x43b]
---
0x17c JUMPDEST
0x17d PUSH2 0x88
0x180 PUSH2 0x43b
0x183 JUMP
---
0x17c: JUMPDEST 
0x17d: V141 = 0x88
0x180: V142 = 0x43b
0x183: JUMP 0x43b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x88]
Exit stack: [V12, 0x88]

================================

Block 0x184
[0x184:0x185]
---
Predecessors: []
Successors: []
---
0x184 JUMPDEST
0x185 STOP
---
0x184: JUMPDEST 
0x185: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x186
[0x186:0x18c]
---
Predecessors: [0x67]
Successors: [0x18d, 0x191]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 ISZERO
0x189 PUSH2 0x191
0x18c JUMPI
---
0x186: JUMPDEST 
0x187: V143 = CALLVALUE
0x188: V144 = ISZERO V143
0x189: V145 = 0x191
0x18c: JUMPI 0x191 V144
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18d
[0x18d:0x190]
---
Predecessors: [0x186]
Successors: []
---
0x18d PUSH1 0x0
0x18f DUP1
0x190 REVERT
---
0x18d: V146 = 0x0
0x190: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x191
[0x191:0x19b]
---
Predecessors: [0x186]
Successors: [0x4b5]
---
0x191 JUMPDEST
0x192 PUSH2 0x88
0x195 PUSH1 0x4
0x197 CALLDATALOAD
0x198 PUSH2 0x4b5
0x19b JUMP
---
0x191: JUMPDEST 
0x192: V147 = 0x88
0x195: V148 = 0x4
0x197: V149 = CALLDATALOAD 0x4
0x198: V150 = 0x4b5
0x19b: JUMP 0x4b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x88, V149]
Exit stack: [V12, 0x88, V149]

================================

Block 0x19c
[0x19c:0x19d]
---
Predecessors: []
Successors: []
---
0x19c JUMPDEST
0x19d STOP
---
0x19c: JUMPDEST 
0x19d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x19e
[0x19e:0x1b5]
---
Predecessors: [0x95]
Successors: [0x1b6, 0x1ba]
---
0x19e JUMPDEST
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 SLOAD
0x1a3 CALLER
0x1a4 PUSH1 0x1
0x1a6 PUSH1 0xa0
0x1a8 PUSH1 0x2
0x1aa EXP
0x1ab SUB
0x1ac SWAP1
0x1ad DUP2
0x1ae AND
0x1af SWAP2
0x1b0 AND
0x1b1 EQ
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x19e: JUMPDEST 
0x19f: V151 = 0x0
0x1a2: V152 = S[0x0]
0x1a3: V153 = CALLER
0x1a4: V154 = 0x1
0x1a6: V155 = 0xa0
0x1a8: V156 = 0x2
0x1aa: V157 = EXP 0x2 0xa0
0x1ab: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ae: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x1b0: V160 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V161 = EQ V160 V159
0x1b2: V162 = 0x1ba
0x1b5: JUMPI 0x1ba V161
---
Entry stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, 0x0]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x19e]
Successors: []
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 REVERT
---
0x1b6: V163 = 0x0
0x1b9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, 0x0]

================================

Block 0x1ba
[0x1ba:0x267]
---
Predecessors: [0x19e]
Successors: [0x268, 0x26c]
---
0x1ba JUMPDEST
0x1bb POP
0x1bc PUSH1 0x1
0x1be SLOAD
0x1bf PUSH1 0x1
0x1c1 PUSH1 0xa0
0x1c3 PUSH1 0x2
0x1c5 EXP
0x1c6 SUB
0x1c7 AND
0x1c8 DUP1
0x1c9 PUSH4 0xa19b14a
0x1ce DUP14
0x1cf DUP14
0x1d0 DUP14
0x1d1 DUP14
0x1d2 DUP14
0x1d3 DUP14
0x1d4 DUP14
0x1d5 DUP14
0x1d6 DUP14
0x1d7 DUP14
0x1d8 DUP14
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc PUSH1 0xe0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 PUSH4 0xffffffff
0x1e6 DUP15
0x1e7 AND
0x1e8 MUL
0x1e9 DUP2
0x1ea MSTORE
0x1eb PUSH1 0x1
0x1ed PUSH1 0xa0
0x1ef PUSH1 0x2
0x1f1 EXP
0x1f2 SUB
0x1f3 SWAP12
0x1f4 DUP13
0x1f5 AND
0x1f6 PUSH1 0x4
0x1f8 DUP3
0x1f9 ADD
0x1fa MSTORE
0x1fb PUSH1 0x24
0x1fd DUP2
0x1fe ADD
0x1ff SWAP11
0x200 SWAP1
0x201 SWAP11
0x202 MSTORE
0x203 SWAP8
0x204 DUP11
0x205 AND
0x206 PUSH1 0x44
0x208 DUP11
0x209 ADD
0x20a MSTORE
0x20b PUSH1 0x64
0x20d DUP10
0x20e ADD
0x20f SWAP7
0x210 SWAP1
0x211 SWAP7
0x212 MSTORE
0x213 PUSH1 0x84
0x215 DUP9
0x216 ADD
0x217 SWAP5
0x218 SWAP1
0x219 SWAP5
0x21a MSTORE
0x21b PUSH1 0xa4
0x21d DUP8
0x21e ADD
0x21f SWAP3
0x220 SWAP1
0x221 SWAP3
0x222 MSTORE
0x223 SWAP1
0x224 SWAP6
0x225 AND
0x226 PUSH1 0xc4
0x228 DUP6
0x229 ADD
0x22a MSTORE
0x22b PUSH1 0xff
0x22d SWAP1
0x22e SWAP5
0x22f AND
0x230 PUSH1 0xe4
0x232 DUP5
0x233 ADD
0x234 MSTORE
0x235 PUSH2 0x104
0x238 DUP4
0x239 ADD
0x23a SWAP4
0x23b SWAP1
0x23c SWAP4
0x23d MSTORE
0x23e PUSH2 0x124
0x241 DUP3
0x242 ADD
0x243 SWAP3
0x244 SWAP1
0x245 SWAP3
0x246 MSTORE
0x247 PUSH2 0x144
0x24a DUP2
0x24b ADD
0x24c SWAP2
0x24d SWAP1
0x24e SWAP2
0x24f MSTORE
0x250 PUSH2 0x164
0x253 ADD
0x254 PUSH1 0x0
0x256 PUSH1 0x40
0x258 MLOAD
0x259 DUP1
0x25a DUP4
0x25b SUB
0x25c DUP2
0x25d PUSH1 0x0
0x25f DUP8
0x260 DUP1
0x261 EXTCODESIZE
0x262 ISZERO
0x263 ISZERO
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x1ba: JUMPDEST 
0x1bc: V164 = 0x1
0x1be: V165 = S[0x1]
0x1bf: V166 = 0x1
0x1c1: V167 = 0xa0
0x1c3: V168 = 0x2
0x1c5: V169 = EXP 0x2 0xa0
0x1c6: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c7: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x1c9: V172 = 0xa19b14a
0x1d9: V173 = 0x40
0x1db: V174 = M[0x40]
0x1dc: V175 = 0xe0
0x1de: V176 = 0x2
0x1e0: V177 = EXP 0x2 0xe0
0x1e1: V178 = 0xffffffff
0x1e7: V179 = AND 0xa19b14a 0xffffffff
0x1e8: V180 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x1ea: M[V174] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x1eb: V181 = 0x1
0x1ed: V182 = 0xa0
0x1ef: V183 = 0x2
0x1f1: V184 = EXP 0x2 0xa0
0x1f2: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x1f6: V187 = 0x4
0x1f9: V188 = ADD V174 0x4
0x1fa: M[V188] = V186
0x1fb: V189 = 0x24
0x1fe: V190 = ADD V174 0x24
0x202: M[V190] = V57
0x205: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x206: V192 = 0x44
0x209: V193 = ADD V174 0x44
0x20a: M[V193] = V191
0x20b: V194 = 0x64
0x20e: V195 = ADD V174 0x64
0x212: M[V195] = V62
0x213: V196 = 0x84
0x216: V197 = ADD V174 0x84
0x21a: M[V197] = V64
0x21b: V198 = 0xa4
0x21e: V199 = ADD V174 0xa4
0x222: M[V199] = V66
0x225: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x226: V201 = 0xc4
0x229: V202 = ADD V174 0xc4
0x22a: M[V202] = V200
0x22b: V203 = 0xff
0x22f: V204 = AND V73 0xff
0x230: V205 = 0xe4
0x233: V206 = ADD V174 0xe4
0x234: M[V206] = V204
0x235: V207 = 0x104
0x239: V208 = ADD V174 0x104
0x23d: M[V208] = V75
0x23e: V209 = 0x124
0x242: V210 = ADD V174 0x124
0x246: M[V210] = V77
0x247: V211 = 0x144
0x24b: V212 = ADD V174 0x144
0x24f: M[V212] = V79
0x250: V213 = 0x164
0x253: V214 = ADD 0x164 V174
0x254: V215 = 0x0
0x256: V216 = 0x40
0x258: V217 = M[0x40]
0x25b: V218 = SUB V214 V217
0x25d: V219 = 0x0
0x261: V220 = EXTCODESIZE V171
0x262: V221 = ISZERO V220
0x263: V222 = ISZERO V221
0x264: V223 = 0x26c
0x267: JUMPI 0x26c V222
---
Entry stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V171, V171, 0xa19b14a, V214, 0x0, V217, V218, V217, 0x0, V171]
Exit stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171, V171, 0xa19b14a, V214, 0x0, V217, V218, V217, 0x0, V171]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x1ba]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V224 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171, V171, 0xa19b14a, V214, 0x0, V217, V218, V217, 0x0, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171, V171, 0xa19b14a, V214, 0x0, V217, V218, V217, 0x0, V171]

================================

Block 0x26c
[0x26c:0x278]
---
Predecessors: [0x1ba]
Successors: [0x279, 0x27d]
---
0x26c JUMPDEST
0x26d PUSH2 0x2c6
0x270 GAS
0x271 SUB
0x272 CALL
0x273 ISZERO
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x26c: JUMPDEST 
0x26d: V225 = 0x2c6
0x270: V226 = GAS
0x271: V227 = SUB V226 0x2c6
0x272: V228 = CALL V227 V171 0x0 V217 V218 V217 0x0
0x273: V229 = ISZERO V228
0x274: V230 = ISZERO V229
0x275: V231 = 0x27d
0x278: JUMPI 0x27d V230
---
Entry stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171, V171, 0xa19b14a, V214, 0x0, V217, V218, V217, 0x0, V171]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171, V171, 0xa19b14a, V214]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x26c]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V232 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171, V171, 0xa19b14a, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171, V171, 0xa19b14a, V214]

================================

Block 0x27d
[0x27d:0x280]
---
Predecessors: [0x26c]
Successors: [0x281]
---
0x27d JUMPDEST
0x27e POP
0x27f POP
0x280 POP
---
0x27d: JUMPDEST 
---
Entry stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171, V171, 0xa19b14a, V214]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171]

================================

Block 0x281
[0x281:0x281]
---
Predecessors: [0x27d]
Successors: [0x282]
---
0x281 JUMPDEST
---
0x281: JUMPDEST 
---
Entry stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171]

================================

Block 0x282
[0x282:0x28f]
---
Predecessors: [0x281]
Successors: [0x88]
---
0x282 JUMPDEST
0x283 POP
0x284 POP
0x285 POP
0x286 POP
0x287 POP
0x288 POP
0x289 POP
0x28a POP
0x28b POP
0x28c POP
0x28d POP
0x28e POP
0x28f JUMP
---
0x282: JUMPDEST 
0x28f: JUMP 0x88
---
Entry stack: [V12, 0x88, V55, V57, V60, V62, V64, V66, V69, V73, V75, V77, V79, V171]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0x290
[0x290:0x2a7]
---
Predecessors: [0xe4]
Successors: [0x2a8, 0x2ac]
---
0x290 JUMPDEST
0x291 PUSH1 0x0
0x293 DUP1
0x294 SLOAD
0x295 CALLER
0x296 PUSH1 0x1
0x298 PUSH1 0xa0
0x29a PUSH1 0x2
0x29c EXP
0x29d SUB
0x29e SWAP1
0x29f DUP2
0x2a0 AND
0x2a1 SWAP2
0x2a2 AND
0x2a3 EQ
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x290: JUMPDEST 
0x291: V233 = 0x0
0x294: V234 = S[0x0]
0x295: V235 = CALLER
0x296: V236 = 0x1
0x298: V237 = 0xa0
0x29a: V238 = 0x2
0x29c: V239 = EXP 0x2 0xa0
0x29d: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a0: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x2a2: V242 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V243 = EQ V242 V241
0x2a4: V244 = 0x2ac
0x2a7: JUMPI 0x2ac V243
---
Entry stack: [V12, 0x88, V87]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x88, V87, 0x0]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x290]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V245 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V87, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V87, 0x0]

================================

Block 0x2ac
[0x2ac:0x2e8]
---
Predecessors: [0x290]
Successors: [0x2e9, 0x2ed]
---
0x2ac JUMPDEST
0x2ad POP
0x2ae PUSH1 0x1
0x2b0 SLOAD
0x2b1 PUSH1 0x1
0x2b3 PUSH1 0xa0
0x2b5 PUSH1 0x2
0x2b7 EXP
0x2b8 SUB
0x2b9 AND
0x2ba DUP1
0x2bb PUSH4 0xd0e30db0
0x2c0 DUP4
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 DUP3
0x2c5 PUSH4 0xffffffff
0x2ca AND
0x2cb PUSH1 0xe0
0x2cd PUSH1 0x2
0x2cf EXP
0x2d0 MUL
0x2d1 DUP2
0x2d2 MSTORE
0x2d3 PUSH1 0x4
0x2d5 ADD
0x2d6 PUSH1 0x0
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db DUP1
0x2dc DUP4
0x2dd SUB
0x2de DUP2
0x2df DUP6
0x2e0 DUP9
0x2e1 DUP1
0x2e2 EXTCODESIZE
0x2e3 ISZERO
0x2e4 ISZERO
0x2e5 PUSH2 0x2ed
0x2e8 JUMPI
---
0x2ac: JUMPDEST 
0x2ae: V246 = 0x1
0x2b0: V247 = S[0x1]
0x2b1: V248 = 0x1
0x2b3: V249 = 0xa0
0x2b5: V250 = 0x2
0x2b7: V251 = EXP 0x2 0xa0
0x2b8: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b9: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x2bb: V254 = 0xd0e30db0
0x2c1: V255 = 0x40
0x2c3: V256 = M[0x40]
0x2c5: V257 = 0xffffffff
0x2ca: V258 = AND 0xffffffff 0xd0e30db0
0x2cb: V259 = 0xe0
0x2cd: V260 = 0x2
0x2cf: V261 = EXP 0x2 0xe0
0x2d0: V262 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x2d2: M[V256] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x2d3: V263 = 0x4
0x2d5: V264 = ADD 0x4 V256
0x2d6: V265 = 0x0
0x2d8: V266 = 0x40
0x2da: V267 = M[0x40]
0x2dd: V268 = SUB V264 V267
0x2e2: V269 = EXTCODESIZE V253
0x2e3: V270 = ISZERO V269
0x2e4: V271 = ISZERO V270
0x2e5: V272 = 0x2ed
0x2e8: JUMPI 0x2ed V271
---
Entry stack: [V12, 0x88, V87, 0x0]
Stack pops: 2
Stack additions: [S1, V253, V253, 0xd0e30db0, S1, V264, 0x0, V267, V268, V267, S1, V253]
Exit stack: [V12, 0x88, V87, V253, V253, 0xd0e30db0, V87, V264, 0x0, V267, V268, V267, V87, V253]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2ac]
Successors: []
---
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec REVERT
---
0x2e9: V273 = 0x0
0x2ec: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V87, V253, V253, 0xd0e30db0, V87, V264, 0x0, V267, V268, V267, V87, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V87, V253, V253, 0xd0e30db0, V87, V264, 0x0, V267, V268, V267, V87, V253]

================================

Block 0x2ed
[0x2ed:0x2f9]
---
Predecessors: [0x2ac]
Successors: [0x2fa, 0x2fe]
---
0x2ed JUMPDEST
0x2ee PUSH2 0x25ee
0x2f1 GAS
0x2f2 SUB
0x2f3 CALL
0x2f4 ISZERO
0x2f5 ISZERO
0x2f6 PUSH2 0x2fe
0x2f9 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V274 = 0x25ee
0x2f1: V275 = GAS
0x2f2: V276 = SUB V275 0x25ee
0x2f3: V277 = CALL V276 V253 V87 V267 V268 V267 0x0
0x2f4: V278 = ISZERO V277
0x2f5: V279 = ISZERO V278
0x2f6: V280 = 0x2fe
0x2f9: JUMPI 0x2fe V279
---
Entry stack: [V12, 0x88, V87, V253, V253, 0xd0e30db0, V87, V264, 0x0, V267, V268, V267, V87, V253]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x88, V87, V253, V253, 0xd0e30db0, V87, V264]

================================

Block 0x2fa
[0x2fa:0x2fd]
---
Predecessors: [0x2ed]
Successors: []
---
0x2fa PUSH1 0x0
0x2fc DUP1
0x2fd REVERT
---
0x2fa: V281 = 0x0
0x2fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V87, V253, V253, 0xd0e30db0, V87, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V87, V253, V253, 0xd0e30db0, V87, V264]

================================

Block 0x2fe
[0x2fe:0x302]
---
Predecessors: [0x2ed]
Successors: [0x303]
---
0x2fe JUMPDEST
0x2ff POP
0x300 POP
0x301 POP
0x302 POP
---
0x2fe: JUMPDEST 
---
Entry stack: [V12, 0x88, V87, V253, V253, 0xd0e30db0, V87, V264]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x88, V87, V253]

================================

Block 0x303
[0x303:0x303]
---
Predecessors: [0x2fe]
Successors: [0x304]
---
0x303 JUMPDEST
---
0x303: JUMPDEST 
---
Entry stack: [V12, 0x88, V87, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V87, V253]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x303]
Successors: [0x88]
---
0x304 JUMPDEST
0x305 POP
0x306 POP
0x307 JUMP
---
0x304: JUMPDEST 
0x307: JUMP 0x88
---
Entry stack: [V12, 0x88, V87, V253]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x308
[0x308:0x31e]
---
Predecessors: [0xfc]
Successors: [0x31f, 0x323]
---
0x308 JUMPDEST
0x309 PUSH1 0x0
0x30b SLOAD
0x30c CALLER
0x30d PUSH1 0x1
0x30f PUSH1 0xa0
0x311 PUSH1 0x2
0x313 EXP
0x314 SUB
0x315 SWAP1
0x316 DUP2
0x317 AND
0x318 SWAP2
0x319 AND
0x31a EQ
0x31b PUSH2 0x323
0x31e JUMPI
---
0x308: JUMPDEST 
0x309: V282 = 0x0
0x30b: V283 = S[0x0]
0x30c: V284 = CALLER
0x30d: V285 = 0x1
0x30f: V286 = 0xa0
0x311: V287 = 0x2
0x313: V288 = EXP 0x2 0xa0
0x314: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x317: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x319: V291 = AND V283 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V292 = EQ V291 V290
0x31b: V293 = 0x323
0x31e: JUMPI 0x323 V292
---
Entry stack: [V12, 0x88, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V95]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x308]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V294 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V95]

================================

Block 0x323
[0x323:0x351]
---
Predecessors: [0x308]
Successors: [0x352, 0x356]
---
0x323 JUMPDEST
0x324 PUSH1 0x0
0x326 SLOAD
0x327 PUSH1 0x1
0x329 PUSH1 0xa0
0x32b PUSH1 0x2
0x32d EXP
0x32e SUB
0x32f AND
0x330 DUP2
0x331 ISZERO
0x332 PUSH2 0x8fc
0x335 MUL
0x336 DUP3
0x337 PUSH1 0x40
0x339 MLOAD
0x33a PUSH1 0x0
0x33c PUSH1 0x40
0x33e MLOAD
0x33f DUP1
0x340 DUP4
0x341 SUB
0x342 DUP2
0x343 DUP6
0x344 DUP9
0x345 DUP9
0x346 CALL
0x347 SWAP4
0x348 POP
0x349 POP
0x34a POP
0x34b POP
0x34c ISZERO
0x34d ISZERO
0x34e PUSH2 0x356
0x351 JUMPI
---
0x323: JUMPDEST 
0x324: V295 = 0x0
0x326: V296 = S[0x0]
0x327: V297 = 0x1
0x329: V298 = 0xa0
0x32b: V299 = 0x2
0x32d: V300 = EXP 0x2 0xa0
0x32e: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32f: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x331: V303 = ISZERO V95
0x332: V304 = 0x8fc
0x335: V305 = MUL 0x8fc V303
0x337: V306 = 0x40
0x339: V307 = M[0x40]
0x33a: V308 = 0x0
0x33c: V309 = 0x40
0x33e: V310 = M[0x40]
0x341: V311 = SUB V307 V310
0x346: V312 = CALL V305 V302 V95 V310 V311 V310 0x0
0x34c: V313 = ISZERO V312
0x34d: V314 = ISZERO V313
0x34e: V315 = 0x356
0x351: JUMPI 0x356 V314
---
Entry stack: [V12, 0x88, V95]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x88, V95]

================================

Block 0x352
[0x352:0x355]
---
Predecessors: [0x323]
Successors: []
---
0x352 PUSH1 0x0
0x354 DUP1
0x355 REVERT
---
0x352: V316 = 0x0
0x355: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V95]

================================

Block 0x356
[0x356:0x3cd]
---
Predecessors: [0x323]
Successors: [0x3ce]
---
0x356 JUMPDEST
0x357 PUSH32 0xf341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567
0x378 PUSH20 0x1111111111111111111111111111111111111111
0x38d CALLER
0x38e DUP4
0x38f ADDRESS
0x390 PUSH1 0x1
0x392 PUSH1 0xa0
0x394 PUSH1 0x2
0x396 EXP
0x397 SUB
0x398 AND
0x399 BALANCE
0x39a PUSH1 0x40
0x39c MLOAD
0x39d PUSH1 0x1
0x39f PUSH1 0xa0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 SUB
0x3a5 SWAP5
0x3a6 DUP6
0x3a7 AND
0x3a8 DUP2
0x3a9 MSTORE
0x3aa SWAP3
0x3ab SWAP1
0x3ac SWAP4
0x3ad AND
0x3ae PUSH1 0x20
0x3b0 DUP4
0x3b1 ADD
0x3b2 MSTORE
0x3b3 PUSH1 0x40
0x3b5 DUP1
0x3b6 DUP4
0x3b7 ADD
0x3b8 SWAP2
0x3b9 SWAP1
0x3ba SWAP2
0x3bb MSTORE
0x3bc PUSH1 0x60
0x3be DUP3
0x3bf ADD
0x3c0 SWAP3
0x3c1 SWAP1
0x3c2 SWAP3
0x3c3 MSTORE
0x3c4 PUSH1 0x80
0x3c6 ADD
0x3c7 SWAP1
0x3c8 MLOAD
0x3c9 DUP1
0x3ca SWAP2
0x3cb SUB
0x3cc SWAP1
0x3cd LOG1
---
0x356: JUMPDEST 
0x357: V317 = 0xf341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567
0x378: V318 = 0x1111111111111111111111111111111111111111
0x38d: V319 = CALLER
0x38f: V320 = ADDRESS
0x390: V321 = 0x1
0x392: V322 = 0xa0
0x394: V323 = 0x2
0x396: V324 = EXP 0x2 0xa0
0x397: V325 = SUB 0x10000000000000000000000000000000000000000 0x1
0x398: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x399: V327 = BALANCE V326
0x39a: V328 = 0x40
0x39c: V329 = M[0x40]
0x39d: V330 = 0x1
0x39f: V331 = 0xa0
0x3a1: V332 = 0x2
0x3a3: V333 = EXP 0x2 0xa0
0x3a4: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x1111111111111111111111111111111111111111
0x3a9: M[V329] = 0x1111111111111111111111111111111111111111
0x3ad: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x3ae: V337 = 0x20
0x3b1: V338 = ADD V329 0x20
0x3b2: M[V338] = V336
0x3b3: V339 = 0x40
0x3b7: V340 = ADD V329 0x40
0x3bb: M[V340] = V95
0x3bc: V341 = 0x60
0x3bf: V342 = ADD V329 0x60
0x3c3: M[V342] = V327
0x3c4: V343 = 0x80
0x3c6: V344 = ADD 0x80 V329
0x3c8: V345 = M[0x40]
0x3cb: V346 = SUB V344 V345
0x3cd: LOG V345 V346 0xf341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567
---
Entry stack: [V12, 0x88, V95]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x88, V95]

================================

Block 0x3ce
[0x3ce:0x3ce]
---
Predecessors: [0x356]
Successors: [0x3cf]
---
0x3ce JUMPDEST
---
0x3ce: JUMPDEST 
---
Entry stack: [V12, 0x88, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V95]

================================

Block 0x3cf
[0x3cf:0x3d1]
---
Predecessors: [0x3ce]
Successors: [0x88]
---
0x3cf JUMPDEST
0x3d0 POP
0x3d1 JUMP
---
0x3cf: JUMPDEST 
0x3d1: JUMP 0x88
---
Entry stack: [V12, 0x88, V95]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d2
[0x3d2:0x3e8]
---
Predecessors: [0x114]
Successors: [0x3e9, 0x3ed]
---
0x3d2 JUMPDEST
0x3d3 PUSH1 0x0
0x3d5 SLOAD
0x3d6 CALLER
0x3d7 PUSH1 0x1
0x3d9 PUSH1 0xa0
0x3db PUSH1 0x2
0x3dd EXP
0x3de SUB
0x3df SWAP1
0x3e0 DUP2
0x3e1 AND
0x3e2 SWAP2
0x3e3 AND
0x3e4 EQ
0x3e5 PUSH2 0x3ed
0x3e8 JUMPI
---
0x3d2: JUMPDEST 
0x3d3: V347 = 0x0
0x3d5: V348 = S[0x0]
0x3d6: V349 = CALLER
0x3d7: V350 = 0x1
0x3d9: V351 = 0xa0
0x3db: V352 = 0x2
0x3dd: V353 = EXP 0x2 0xa0
0x3de: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e1: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x3e3: V356 = AND V348 0xffffffffffffffffffffffffffffffffffffffff
0x3e4: V357 = EQ V356 V355
0x3e5: V358 = 0x3ed
0x3e8: JUMPI 0x3ed V357
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x3e9
[0x3e9:0x3ec]
---
Predecessors: [0x3d2]
Successors: []
---
0x3e9 PUSH1 0x0
0x3eb DUP1
0x3ec REVERT
---
0x3e9: V359 = 0x0
0x3ec: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x3ed
[0x3ed:0x3fa]
---
Predecessors: [0x3d2]
Successors: []
---
0x3ed JUMPDEST
0x3ee PUSH1 0x0
0x3f0 SLOAD
0x3f1 PUSH1 0x1
0x3f3 PUSH1 0xa0
0x3f5 PUSH1 0x2
0x3f7 EXP
0x3f8 SUB
0x3f9 AND
0x3fa SELFDESTRUCT
---
0x3ed: JUMPDEST 
0x3ee: V360 = 0x0
0x3f0: V361 = S[0x0]
0x3f1: V362 = 0x1
0x3f3: V363 = 0xa0
0x3f5: V364 = 0x2
0x3f7: V365 = EXP 0x2 0xa0
0x3f8: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f9: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x3fa: SELFDESTRUCT V367
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x3fb
[0x3fb:0x3fb]
---
Predecessors: []
Successors: [0x3fc]
---
0x3fb JUMPDEST
---
0x3fb: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3fc
[0x3fc:0x3fd]
---
Predecessors: [0x3fb]
Successors: []
Has unresolved jump.
---
0x3fc JUMPDEST
0x3fd JUMP
---
0x3fc: JUMPDEST 
0x3fd: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3fe
[0x3fe:0x415]
---
Predecessors: [0x129]
Successors: [0x416, 0x41a]
---
0x3fe JUMPDEST
0x3ff PUSH1 0x0
0x401 DUP1
0x402 SLOAD
0x403 CALLER
0x404 PUSH1 0x1
0x406 PUSH1 0xa0
0x408 PUSH1 0x2
0x40a EXP
0x40b SUB
0x40c SWAP1
0x40d DUP2
0x40e AND
0x40f SWAP2
0x410 AND
0x411 EQ
0x412 PUSH2 0x41a
0x415 JUMPI
---
0x3fe: JUMPDEST 
0x3ff: V368 = 0x0
0x402: V369 = S[0x0]
0x403: V370 = CALLER
0x404: V371 = 0x1
0x406: V372 = 0xa0
0x408: V373 = 0x2
0x40a: V374 = EXP 0x2 0xa0
0x40b: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40e: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x410: V377 = AND V369 0xffffffffffffffffffffffffffffffffffffffff
0x411: V378 = EQ V377 V376
0x412: V379 = 0x41a
0x415: JUMPI 0x41a V378
---
Entry stack: [V12, 0x131]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x131, 0x0]

================================

Block 0x416
[0x416:0x419]
---
Predecessors: [0x3fe]
Successors: []
---
0x416 PUSH1 0x0
0x418 DUP1
0x419 REVERT
---
0x416: V380 = 0x0
0x419: REVERT 0x0 0x0
---
Entry stack: [V12, 0x131, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x131, 0x0]

================================

Block 0x41a
[0x41a:0x427]
---
Predecessors: [0x3fe]
Successors: [0x428]
---
0x41a JUMPDEST
0x41b POP
0x41c PUSH1 0x0
0x41e SLOAD
0x41f PUSH1 0x1
0x421 PUSH1 0xa0
0x423 PUSH1 0x2
0x425 EXP
0x426 SUB
0x427 AND
---
0x41a: JUMPDEST 
0x41c: V381 = 0x0
0x41e: V382 = S[0x0]
0x41f: V383 = 0x1
0x421: V384 = 0xa0
0x423: V385 = 0x2
0x425: V386 = EXP 0x2 0xa0
0x426: V387 = SUB 0x10000000000000000000000000000000000000000 0x1
0x427: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
---
Entry stack: [V12, 0x131, 0x0]
Stack pops: 1
Stack additions: [V388]
Exit stack: [V12, 0x131, V388]

================================

Block 0x428
[0x428:0x428]
---
Predecessors: [0x41a]
Successors: [0x429]
---
0x428 JUMPDEST
---
0x428: JUMPDEST 
---
Entry stack: [V12, 0x131, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x131, V388]

================================

Block 0x429
[0x429:0x42b]
---
Predecessors: [0x428]
Successors: [0x131]
---
0x429 JUMPDEST
0x42a SWAP1
0x42b JUMP
---
0x429: JUMPDEST 
0x42b: JUMP 0x131
---
Entry stack: [V12, 0x131, V388]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V388]

================================

Block 0x42c
[0x42c:0x43a]
---
Predecessors: [0x158]
Successors: [0x131]
---
0x42c JUMPDEST
0x42d PUSH1 0x0
0x42f SLOAD
0x430 PUSH1 0x1
0x432 PUSH1 0xa0
0x434 PUSH1 0x2
0x436 EXP
0x437 SUB
0x438 AND
0x439 DUP2
0x43a JUMP
---
0x42c: JUMPDEST 
0x42d: V389 = 0x0
0x42f: V390 = S[0x0]
0x430: V391 = 0x1
0x432: V392 = 0xa0
0x434: V393 = 0x2
0x436: V394 = EXP 0x2 0xa0
0x437: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x438: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x43a: JUMP 0x131
---
Entry stack: [V12, 0x131]
Stack pops: 1
Stack additions: [S0, V396]
Exit stack: [V12, 0x131, V396]

================================

Block 0x43b
[0x43b:0x4b2]
---
Predecessors: [0x17c]
Successors: [0x4b3]
---
0x43b JUMPDEST
0x43c PUSH32 0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7
0x45d PUSH20 0x1111111111111111111111111111111111111111
0x472 CALLER
0x473 CALLVALUE
0x474 ADDRESS
0x475 PUSH1 0x1
0x477 PUSH1 0xa0
0x479 PUSH1 0x2
0x47b EXP
0x47c SUB
0x47d AND
0x47e BALANCE
0x47f PUSH1 0x40
0x481 MLOAD
0x482 PUSH1 0x1
0x484 PUSH1 0xa0
0x486 PUSH1 0x2
0x488 EXP
0x489 SUB
0x48a SWAP5
0x48b DUP6
0x48c AND
0x48d DUP2
0x48e MSTORE
0x48f SWAP3
0x490 SWAP1
0x491 SWAP4
0x492 AND
0x493 PUSH1 0x20
0x495 DUP4
0x496 ADD
0x497 MSTORE
0x498 PUSH1 0x40
0x49a DUP1
0x49b DUP4
0x49c ADD
0x49d SWAP2
0x49e SWAP1
0x49f SWAP2
0x4a0 MSTORE
0x4a1 PUSH1 0x60
0x4a3 DUP3
0x4a4 ADD
0x4a5 SWAP3
0x4a6 SWAP1
0x4a7 SWAP3
0x4a8 MSTORE
0x4a9 PUSH1 0x80
0x4ab ADD
0x4ac SWAP1
0x4ad MLOAD
0x4ae DUP1
0x4af SWAP2
0x4b0 SUB
0x4b1 SWAP1
0x4b2 LOG1
---
0x43b: JUMPDEST 
0x43c: V397 = 0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7
0x45d: V398 = 0x1111111111111111111111111111111111111111
0x472: V399 = CALLER
0x473: V400 = CALLVALUE
0x474: V401 = ADDRESS
0x475: V402 = 0x1
0x477: V403 = 0xa0
0x479: V404 = 0x2
0x47b: V405 = EXP 0x2 0xa0
0x47c: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47d: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x47e: V408 = BALANCE V407
0x47f: V409 = 0x40
0x481: V410 = M[0x40]
0x482: V411 = 0x1
0x484: V412 = 0xa0
0x486: V413 = 0x2
0x488: V414 = EXP 0x2 0xa0
0x489: V415 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48c: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x1111111111111111111111111111111111111111
0x48e: M[V410] = 0x1111111111111111111111111111111111111111
0x492: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x493: V418 = 0x20
0x496: V419 = ADD V410 0x20
0x497: M[V419] = V417
0x498: V420 = 0x40
0x49c: V421 = ADD V410 0x40
0x4a0: M[V421] = V400
0x4a1: V422 = 0x60
0x4a4: V423 = ADD V410 0x60
0x4a8: M[V423] = V408
0x4a9: V424 = 0x80
0x4ab: V425 = ADD 0x80 V410
0x4ad: V426 = M[0x40]
0x4b0: V427 = SUB V425 V426
0x4b2: LOG V426 V427 0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x4b3
[0x4b3:0x4b4]
---
Predecessors: [0x43b]
Successors: [0x88]
---
0x4b3 JUMPDEST
0x4b4 JUMP
---
0x4b3: JUMPDEST 
0x4b4: JUMP 0x88
---
Entry stack: [V12, 0x88]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b5
[0x4b5:0x4cc]
---
Predecessors: [0x191]
Successors: [0x4cd, 0x4d1]
---
0x4b5 JUMPDEST
0x4b6 PUSH1 0x0
0x4b8 DUP1
0x4b9 SLOAD
0x4ba CALLER
0x4bb PUSH1 0x1
0x4bd PUSH1 0xa0
0x4bf PUSH1 0x2
0x4c1 EXP
0x4c2 SUB
0x4c3 SWAP1
0x4c4 DUP2
0x4c5 AND
0x4c6 SWAP2
0x4c7 AND
0x4c8 EQ
0x4c9 PUSH2 0x4d1
0x4cc JUMPI
---
0x4b5: JUMPDEST 
0x4b6: V428 = 0x0
0x4b9: V429 = S[0x0]
0x4ba: V430 = CALLER
0x4bb: V431 = 0x1
0x4bd: V432 = 0xa0
0x4bf: V433 = 0x2
0x4c1: V434 = EXP 0x2 0xa0
0x4c2: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c5: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x4c7: V437 = AND V429 0xffffffffffffffffffffffffffffffffffffffff
0x4c8: V438 = EQ V437 V436
0x4c9: V439 = 0x4d1
0x4cc: JUMPI 0x4d1 V438
---
Entry stack: [V12, 0x88, V149]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x88, V149, 0x0]

================================

Block 0x4cd
[0x4cd:0x4d0]
---
Predecessors: [0x4b5]
Successors: []
---
0x4cd PUSH1 0x0
0x4cf DUP1
0x4d0 REVERT
---
0x4cd: V440 = 0x0
0x4d0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V149, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V149, 0x0]

================================

Block 0x4d1
[0x4d1:0x516]
---
Predecessors: [0x4b5]
Successors: [0x517, 0x51b]
---
0x4d1 JUMPDEST
0x4d2 POP
0x4d3 PUSH1 0x1
0x4d5 SLOAD
0x4d6 PUSH1 0x1
0x4d8 PUSH1 0xa0
0x4da PUSH1 0x2
0x4dc EXP
0x4dd SUB
0x4de AND
0x4df DUP1
0x4e0 PUSH4 0x2e1a7d4d
0x4e5 DUP4
0x4e6 PUSH1 0x40
0x4e8 MLOAD
0x4e9 PUSH1 0xe0
0x4eb PUSH1 0x2
0x4ed EXP
0x4ee PUSH4 0xffffffff
0x4f3 DUP5
0x4f4 AND
0x4f5 MUL
0x4f6 DUP2
0x4f7 MSTORE
0x4f8 PUSH1 0x4
0x4fa DUP2
0x4fb ADD
0x4fc SWAP2
0x4fd SWAP1
0x4fe SWAP2
0x4ff MSTORE
0x500 PUSH1 0x24
0x502 ADD
0x503 PUSH1 0x0
0x505 PUSH1 0x40
0x507 MLOAD
0x508 DUP1
0x509 DUP4
0x50a SUB
0x50b DUP2
0x50c PUSH1 0x0
0x50e DUP8
0x50f DUP1
0x510 EXTCODESIZE
0x511 ISZERO
0x512 ISZERO
0x513 PUSH2 0x51b
0x516 JUMPI
---
0x4d1: JUMPDEST 
0x4d3: V441 = 0x1
0x4d5: V442 = S[0x1]
0x4d6: V443 = 0x1
0x4d8: V444 = 0xa0
0x4da: V445 = 0x2
0x4dc: V446 = EXP 0x2 0xa0
0x4dd: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4de: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x4e0: V449 = 0x2e1a7d4d
0x4e6: V450 = 0x40
0x4e8: V451 = M[0x40]
0x4e9: V452 = 0xe0
0x4eb: V453 = 0x2
0x4ed: V454 = EXP 0x2 0xe0
0x4ee: V455 = 0xffffffff
0x4f4: V456 = AND 0x2e1a7d4d 0xffffffff
0x4f5: V457 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x4f7: M[V451] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x4f8: V458 = 0x4
0x4fb: V459 = ADD V451 0x4
0x4ff: M[V459] = V149
0x500: V460 = 0x24
0x502: V461 = ADD 0x24 V451
0x503: V462 = 0x0
0x505: V463 = 0x40
0x507: V464 = M[0x40]
0x50a: V465 = SUB V461 V464
0x50c: V466 = 0x0
0x510: V467 = EXTCODESIZE V448
0x511: V468 = ISZERO V467
0x512: V469 = ISZERO V468
0x513: V470 = 0x51b
0x516: JUMPI 0x51b V469
---
Entry stack: [V12, 0x88, V149, 0x0]
Stack pops: 2
Stack additions: [S1, V448, V448, 0x2e1a7d4d, V461, 0x0, V464, V465, V464, 0x0, V448]
Exit stack: [V12, 0x88, V149, V448, V448, 0x2e1a7d4d, V461, 0x0, V464, V465, V464, 0x0, V448]

================================

Block 0x517
[0x517:0x51a]
---
Predecessors: [0x4d1]
Successors: []
---
0x517 PUSH1 0x0
0x519 DUP1
0x51a REVERT
---
0x517: V471 = 0x0
0x51a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V149, V448, V448, 0x2e1a7d4d, V461, 0x0, V464, V465, V464, 0x0, V448]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V149, V448, V448, 0x2e1a7d4d, V461, 0x0, V464, V465, V464, 0x0, V448]

================================

Block 0x51b
[0x51b:0x527]
---
Predecessors: [0x4d1]
Successors: [0x528, 0x52c]
---
0x51b JUMPDEST
0x51c PUSH2 0x2c6
0x51f GAS
0x520 SUB
0x521 CALL
0x522 ISZERO
0x523 ISZERO
0x524 PUSH2 0x52c
0x527 JUMPI
---
0x51b: JUMPDEST 
0x51c: V472 = 0x2c6
0x51f: V473 = GAS
0x520: V474 = SUB V473 0x2c6
0x521: V475 = CALL V474 V448 0x0 V464 V465 V464 0x0
0x522: V476 = ISZERO V475
0x523: V477 = ISZERO V476
0x524: V478 = 0x52c
0x527: JUMPI 0x52c V477
---
Entry stack: [V12, 0x88, V149, V448, V448, 0x2e1a7d4d, V461, 0x0, V464, V465, V464, 0x0, V448]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x88, V149, V448, V448, 0x2e1a7d4d, V461]

================================

Block 0x528
[0x528:0x52b]
---
Predecessors: [0x51b]
Successors: []
---
0x528 PUSH1 0x0
0x52a DUP1
0x52b REVERT
---
0x528: V479 = 0x0
0x52b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V149, V448, V448, 0x2e1a7d4d, V461]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V149, V448, V448, 0x2e1a7d4d, V461]

================================

Block 0x52c
[0x52c:0x52f]
---
Predecessors: [0x51b]
Successors: [0x530]
---
0x52c JUMPDEST
0x52d POP
0x52e POP
0x52f POP
---
0x52c: JUMPDEST 
---
Entry stack: [V12, 0x88, V149, V448, V448, 0x2e1a7d4d, V461]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x88, V149, V448]

================================

Block 0x530
[0x530:0x530]
---
Predecessors: [0x52c]
Successors: [0x531]
---
0x530 JUMPDEST
---
0x530: JUMPDEST 
---
Entry stack: [V12, 0x88, V149, V448]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V149, V448]

================================

Block 0x531
[0x531:0x534]
---
Predecessors: [0x530]
Successors: [0x88]
---
0x531 JUMPDEST
0x532 POP
0x533 POP
0x534 JUMP
---
0x531: JUMPDEST 
0x534: JUMP 0x88
---
Entry stack: [V12, 0x88, V149, V448]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x535
[0x535:0x568]
---
Predecessors: []
Successors: []
---
0x535 STOP
0x536 LOG1
0x537 PUSH6 0x627a7a723058
0x53e SHA3
0x53f MISSING 0x4b
0x540 MISSING 0xec
0x541 GASLIMIT
0x542 MISSING 0x27
0x543 SWAP8
0x544 MISSING 0xf7
0x545 PUSH5 0xd69dfbc5e0
0x54b MISSING 0xc2
0x54c PUSH7 0xd338de095883cc
0x554 PUSH20 0xdbbffdca2f3e61d3afc50029
---
0x535: STOP 
0x536: LOG S0 S1 S2
0x537: V480 = 0x627a7a723058
0x53e: V481 = SHA3 0x627a7a723058 S3
0x53f: MISSING 0x4b
0x540: MISSING 0xec
0x541: V482 = GASLIMIT
0x542: MISSING 0x27
0x544: MISSING 0xf7
0x545: V483 = 0xd69dfbc5e0
0x54b: MISSING 0xc2
0x54c: V484 = 0xd338de095883cc
0x554: V485 = 0xdbbffdca2f3e61d3afc50029
---
Entry stack: []
Stack pops: 0
Stack additions: [V481, V482, S8, S1, S2, S3, S4, S5, S6, S7, S0, 0xd69dfbc5e0, 0xdbbffdca2f3e61d3afc50029, 0xd338de095883cc]
Exit stack: []

================================

Function 0:
Public function signature: 0xa19b14a
Entry block: 0x8a
Exit block: 0x88
Body: 0x88, 0x8a, 0x91, 0x95, 0x19e, 0x1b6, 0x1ba, 0x268, 0x26c, 0x279, 0x27d, 0x281, 0x282

Function 1:
Public function signature: 0x2cf2c0af
Entry block: 0xd9
Exit block: 0x88
Body: 0x88, 0xd9, 0xe0, 0xe4, 0x290, 0x2a8, 0x2ac, 0x2e9, 0x2ed, 0x2fa, 0x2fe, 0x303, 0x304

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0xf1
Exit block: 0x88
Body: 0x88, 0xf1, 0xf8, 0xfc, 0x308, 0x31f, 0x323, 0x352, 0x356, 0x3ce, 0x3cf

Function 3:
Public function signature: 0x43d726d6
Entry block: 0x109
Exit block: 0x3ed
Body: 0x109, 0x110, 0x114, 0x3d2, 0x3e9, 0x3ed

Function 4:
Public function signature: 0x893d20e8
Entry block: 0x11e
Exit block: 0x131
Body: 0x11e, 0x125, 0x129, 0x131, 0x3fe, 0x416, 0x41a, 0x428, 0x429

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x14d
Exit block: 0x131
Body: 0x131, 0x14d, 0x154, 0x158, 0x42c

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x17c
Exit block: 0x88
Body: 0x88, 0x17c, 0x43b, 0x4b3

Function 7:
Public function signature: 0xf1b83630
Entry block: 0x186
Exit block: 0x88
Body: 0x88, 0x186, 0x18d, 0x191, 0x4b5, 0x4cd, 0x4d1, 0x517, 0x51b, 0x528, 0x52c, 0x530, 0x531

Function 8:
Public fallback function
Entry block: 0x72
Exit block: 0x81
Body: 0x72, 0x79, 0x7d, 0x81

