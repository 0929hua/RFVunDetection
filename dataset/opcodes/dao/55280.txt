Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x5e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x5e
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x5e
0xc: JUMPI 0x5e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x60]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x10c42eaf
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x60
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x10c42eaf
0x22: V15 = EQ V13 0x10c42eaf
0x23: V16 = 0x60
0x26: JUMPI 0x60 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x77]
---
0x27 DUP1
0x28 PUSH4 0x4d63a542
0x2d EQ
0x2e PUSH2 0x77
0x31 JUMPI
---
0x28: V17 = 0x4d63a542
0x2d: V18 = EQ 0x4d63a542 V13
0x2e: V19 = 0x77
0x31: JUMPI 0x77 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xa4]
---
0x32 DUP1
0x33 PUSH4 0x4fe870ab
0x38 EQ
0x39 PUSH2 0xa4
0x3c JUMPI
---
0x33: V20 = 0x4fe870ab
0x38: V21 = EQ 0x4fe870ab V13
0x39: V22 = 0xa4
0x3c: JUMPI 0xa4 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xd3]
---
0x3d DUP1
0x3e PUSH4 0x58908a0f
0x43 EQ
0x44 PUSH2 0xd3
0x47 JUMPI
---
0x3e: V23 = 0x58908a0f
0x43: V24 = EQ 0x58908a0f V13
0x44: V25 = 0xd3
0x47: JUMPI 0xd3 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xfb]
---
0x48 DUP1
0x49 PUSH4 0x5bee6f92
0x4e EQ
0x4f PUSH2 0xfb
0x52 JUMPI
---
0x49: V26 = 0x5bee6f92
0x4e: V27 = EQ 0x5bee6f92 V13
0x4f: V28 = 0xfb
0x52: JUMPI 0xfb V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x11a]
---
0x53 DUP1
0x54 PUSH4 0x8da5cb5b
0x59 EQ
0x5a PUSH2 0x11a
0x5d JUMPI
---
0x54: V29 = 0x8da5cb5b
0x59: V30 = EQ 0x8da5cb5b V13
0x5a: V31 = 0x11a
0x5d: JUMPI 0x11a V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x5f]
---
Predecessors: [0x0, 0x53, 0x1f1, 0x2ec, 0x3f5, 0x41f]
Successors: []
---
0x5e JUMPDEST
0x5f STOP
---
0x5e: JUMPDEST 
0x5f: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x60
[0x60:0x76]
---
Predecessors: [0xd]
Successors: [0x12d]
---
0x60 JUMPDEST
0x61 PUSH2 0x5e
0x64 PUSH1 0x1
0x66 PUSH1 0xa0
0x68 PUSH1 0x2
0x6a EXP
0x6b SUB
0x6c PUSH1 0x4
0x6e CALLDATALOAD
0x6f AND
0x70 PUSH1 0x24
0x72 CALLDATALOAD
0x73 PUSH2 0x12d
0x76 JUMP
---
0x60: JUMPDEST 
0x61: V32 = 0x5e
0x64: V33 = 0x1
0x66: V34 = 0xa0
0x68: V35 = 0x2
0x6a: V36 = EXP 0x2 0xa0
0x6b: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c: V38 = 0x4
0x6e: V39 = CALLDATALOAD 0x4
0x6f: V40 = AND V39 0xffffffffffffffffffffffffffffffffffffffff
0x70: V41 = 0x24
0x72: V42 = CALLDATALOAD 0x24
0x73: V43 = 0x12d
0x76: JUMP 0x12d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x5e, V40, V42]
Exit stack: [V13, 0x5e, V40, V42]

================================

Block 0x77
[0x77:0xa3]
---
Predecessors: [0x27]
Successors: [0x1f5]
---
0x77 JUMPDEST
0x78 PUSH2 0x5e
0x7b PUSH1 0x1
0x7d PUSH1 0xa0
0x7f PUSH1 0x2
0x81 EXP
0x82 SUB
0x83 PUSH1 0x4
0x85 CALLDATALOAD
0x86 AND
0x87 PUSH1 0x24
0x89 CALLDATALOAD
0x8a PUSH16 0xffffffffffffffffffffffffffffffff
0x9b NOT
0x9c PUSH1 0x44
0x9e CALLDATALOAD
0x9f AND
0xa0 PUSH2 0x1f5
0xa3 JUMP
---
0x77: JUMPDEST 
0x78: V44 = 0x5e
0x7b: V45 = 0x1
0x7d: V46 = 0xa0
0x7f: V47 = 0x2
0x81: V48 = EXP 0x2 0xa0
0x82: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83: V50 = 0x4
0x85: V51 = CALLDATALOAD 0x4
0x86: V52 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0x87: V53 = 0x24
0x89: V54 = CALLDATALOAD 0x24
0x8a: V55 = 0xffffffffffffffffffffffffffffffff
0x9b: V56 = NOT 0xffffffffffffffffffffffffffffffff
0x9c: V57 = 0x44
0x9e: V58 = CALLDATALOAD 0x44
0x9f: V59 = AND V58 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000
0xa0: V60 = 0x1f5
0xa3: JUMP 0x1f5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x5e, V52, V54, V59]
Exit stack: [V13, 0x5e, V52, V54, V59]

================================

Block 0xa4
[0xa4:0xaa]
---
Predecessors: [0x32]
Successors: [0xab, 0xaf]
---
0xa4 JUMPDEST
0xa5 CALLVALUE
0xa6 ISZERO
0xa7 PUSH2 0xaf
0xaa JUMPI
---
0xa4: JUMPDEST 
0xa5: V61 = CALLVALUE
0xa6: V62 = ISZERO V61
0xa7: V63 = 0xaf
0xaa: JUMPI 0xaf V62
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xab
[0xab:0xae]
---
Predecessors: [0xa4]
Successors: []
---
0xab PUSH1 0x0
0xad DUP1
0xae REVERT
---
0xab: V64 = 0x0
0xae: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xaf
[0xaf:0xb6]
---
Predecessors: [0xa4]
Successors: [0x2f5]
---
0xaf JUMPDEST
0xb0 PUSH2 0xb7
0xb3 PUSH2 0x2f5
0xb6 JUMP
---
0xaf: JUMPDEST 
0xb0: V65 = 0xb7
0xb3: V66 = 0x2f5
0xb6: JUMP 0x2f5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xb7]
Exit stack: [V13, 0xb7]

================================

Block 0xb7
[0xb7:0xd2]
---
Predecessors: [0x2f5, 0x44e]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH1 0x40
0xba MLOAD
0xbb PUSH1 0x1
0xbd PUSH1 0xa0
0xbf PUSH1 0x2
0xc1 EXP
0xc2 SUB
0xc3 SWAP1
0xc4 SWAP2
0xc5 AND
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca ADD
0xcb PUSH1 0x40
0xcd MLOAD
0xce DUP1
0xcf SWAP2
0xd0 SUB
0xd1 SWAP1
0xd2 RETURN
---
0xb7: JUMPDEST 
0xb8: V67 = 0x40
0xba: V68 = M[0x40]
0xbb: V69 = 0x1
0xbd: V70 = 0xa0
0xbf: V71 = 0x2
0xc1: V72 = EXP 0x2 0xa0
0xc2: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5: V74 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xc7: M[V68] = V74
0xc8: V75 = 0x20
0xca: V76 = ADD 0x20 V68
0xcb: V77 = 0x40
0xcd: V78 = M[0x40]
0xd0: V79 = SUB V76 V78
0xd2: RETURN V78 V79
---
Entry stack: [V13, 0xb7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xb7]

================================

Block 0xd3
[0xd3:0xd9]
---
Predecessors: [0x3d]
Successors: [0xda, 0xde]
---
0xd3 JUMPDEST
0xd4 CALLVALUE
0xd5 ISZERO
0xd6 PUSH2 0xde
0xd9 JUMPI
---
0xd3: JUMPDEST 
0xd4: V80 = CALLVALUE
0xd5: V81 = ISZERO V80
0xd6: V82 = 0xde
0xd9: JUMPI 0xde V81
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xda
[0xda:0xdd]
---
Predecessors: [0xd3]
Successors: []
---
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
---
0xda: V83 = 0x0
0xdd: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xde
[0xde:0xfa]
---
Predecessors: [0xd3]
Successors: [0x304]
---
0xde JUMPDEST
0xdf PUSH2 0x5e
0xe2 PUSH1 0x1
0xe4 PUSH1 0xa0
0xe6 PUSH1 0x2
0xe8 EXP
0xe9 SUB
0xea PUSH1 0x4
0xec CALLDATALOAD
0xed DUP2
0xee AND
0xef SWAP1
0xf0 PUSH1 0x24
0xf2 CALLDATALOAD
0xf3 AND
0xf4 PUSH1 0x44
0xf6 CALLDATALOAD
0xf7 PUSH2 0x304
0xfa JUMP
---
0xde: JUMPDEST 
0xdf: V84 = 0x5e
0xe2: V85 = 0x1
0xe4: V86 = 0xa0
0xe6: V87 = 0x2
0xe8: V88 = EXP 0x2 0xa0
0xe9: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea: V90 = 0x4
0xec: V91 = CALLDATALOAD 0x4
0xee: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0xf0: V93 = 0x24
0xf2: V94 = CALLDATALOAD 0x24
0xf3: V95 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0xf4: V96 = 0x44
0xf6: V97 = CALLDATALOAD 0x44
0xf7: V98 = 0x304
0xfa: JUMP 0x304
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x5e, V92, V95, V97]
Exit stack: [V13, 0x5e, V92, V95, V97]

================================

Block 0xfb
[0xfb:0x101]
---
Predecessors: [0x48]
Successors: [0x102, 0x106]
---
0xfb JUMPDEST
0xfc CALLVALUE
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfb: JUMPDEST 
0xfc: V99 = CALLVALUE
0xfd: V100 = ISZERO V99
0xfe: V101 = 0x106
0x101: JUMPI 0x106 V100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfb]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V102 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x106
[0x106:0x119]
---
Predecessors: [0xfb]
Successors: [0x404]
---
0x106 JUMPDEST
0x107 PUSH2 0x5e
0x10a PUSH1 0x1
0x10c PUSH1 0xa0
0x10e PUSH1 0x2
0x110 EXP
0x111 SUB
0x112 PUSH1 0x4
0x114 CALLDATALOAD
0x115 AND
0x116 PUSH2 0x404
0x119 JUMP
---
0x106: JUMPDEST 
0x107: V103 = 0x5e
0x10a: V104 = 0x1
0x10c: V105 = 0xa0
0x10e: V106 = 0x2
0x110: V107 = EXP 0x2 0xa0
0x111: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112: V109 = 0x4
0x114: V110 = CALLDATALOAD 0x4
0x115: V111 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x116: V112 = 0x404
0x119: JUMP 0x404
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x5e, V111]
Exit stack: [V13, 0x5e, V111]

================================

Block 0x11a
[0x11a:0x120]
---
Predecessors: [0x53]
Successors: [0x121, 0x125]
---
0x11a JUMPDEST
0x11b CALLVALUE
0x11c ISZERO
0x11d PUSH2 0x125
0x120 JUMPI
---
0x11a: JUMPDEST 
0x11b: V113 = CALLVALUE
0x11c: V114 = ISZERO V113
0x11d: V115 = 0x125
0x120: JUMPI 0x125 V114
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x121
[0x121:0x124]
---
Predecessors: [0x11a]
Successors: []
---
0x121 PUSH1 0x0
0x123 DUP1
0x124 REVERT
---
0x121: V116 = 0x0
0x124: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x125
[0x125:0x12c]
---
Predecessors: [0x11a]
Successors: [0x44e]
---
0x125 JUMPDEST
0x126 PUSH2 0xb7
0x129 PUSH2 0x44e
0x12c JUMP
---
0x125: JUMPDEST 
0x126: V117 = 0xb7
0x129: V118 = 0x44e
0x12c: JUMP 0x44e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xb7]
Exit stack: [V13, 0xb7]

================================

Block 0x12d
[0x12d:0x144]
---
Predecessors: [0x60]
Successors: [0x145, 0x1b2]
---
0x12d JUMPDEST
0x12e PUSH1 0x0
0x130 SLOAD
0x131 CALLER
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a SWAP1
0x13b DUP2
0x13c AND
0x13d SWAP2
0x13e AND
0x13f EQ
0x140 DUP1
0x141 PUSH2 0x1b2
0x144 JUMPI
---
0x12d: JUMPDEST 
0x12e: V119 = 0x0
0x130: V120 = S[0x0]
0x131: V121 = CALLER
0x132: V122 = 0x1
0x134: V123 = 0xa0
0x136: V124 = 0x2
0x138: V125 = EXP 0x2 0xa0
0x139: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13c: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x13e: V128 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V129 = EQ V128 V127
0x141: V130 = 0x1b2
0x144: JUMPI 0x1b2 V129
---
Entry stack: [V13, 0x5e, V40, V42]
Stack pops: 0
Stack additions: [V129]
Exit stack: [V13, 0x5e, V40, V42, V129]

================================

Block 0x145
[0x145:0x190]
---
Predecessors: [0x12d]
Successors: [0x191, 0x195]
---
0x145 POP
0x146 PUSH1 0x1
0x148 SLOAD
0x149 PUSH1 0x1
0x14b PUSH1 0xa0
0x14d PUSH1 0x2
0x14f EXP
0x150 SUB
0x151 AND
0x152 PUSH4 0xfe9fbb80
0x157 CALLER
0x158 PUSH1 0x40
0x15a MLOAD
0x15b PUSH1 0xe0
0x15d PUSH1 0x2
0x15f EXP
0x160 PUSH4 0xffffffff
0x165 DUP5
0x166 AND
0x167 MUL
0x168 DUP2
0x169 MSTORE
0x16a PUSH1 0x1
0x16c PUSH1 0xa0
0x16e PUSH1 0x2
0x170 EXP
0x171 SUB
0x172 SWAP1
0x173 SWAP2
0x174 AND
0x175 PUSH1 0x4
0x177 DUP3
0x178 ADD
0x179 MSTORE
0x17a PUSH1 0x24
0x17c ADD
0x17d PUSH1 0x20
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 DUP4
0x184 SUB
0x185 DUP2
0x186 PUSH1 0x0
0x188 DUP8
0x189 DUP1
0x18a EXTCODESIZE
0x18b ISZERO
0x18c ISZERO
0x18d PUSH2 0x195
0x190 JUMPI
---
0x146: V131 = 0x1
0x148: V132 = S[0x1]
0x149: V133 = 0x1
0x14b: V134 = 0xa0
0x14d: V135 = 0x2
0x14f: V136 = EXP 0x2 0xa0
0x150: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x151: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x152: V139 = 0xfe9fbb80
0x157: V140 = CALLER
0x158: V141 = 0x40
0x15a: V142 = M[0x40]
0x15b: V143 = 0xe0
0x15d: V144 = 0x2
0x15f: V145 = EXP 0x2 0xe0
0x160: V146 = 0xffffffff
0x166: V147 = AND 0xfe9fbb80 0xffffffff
0x167: V148 = MUL 0xfe9fbb80 0x100000000000000000000000000000000000000000000000000000000
0x169: M[V142] = 0xfe9fbb8000000000000000000000000000000000000000000000000000000000
0x16a: V149 = 0x1
0x16c: V150 = 0xa0
0x16e: V151 = 0x2
0x170: V152 = EXP 0x2 0xa0
0x171: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x174: V154 = AND V140 0xffffffffffffffffffffffffffffffffffffffff
0x175: V155 = 0x4
0x178: V156 = ADD V142 0x4
0x179: M[V156] = V154
0x17a: V157 = 0x24
0x17c: V158 = ADD 0x24 V142
0x17d: V159 = 0x20
0x17f: V160 = 0x40
0x181: V161 = M[0x40]
0x184: V162 = SUB V158 V161
0x186: V163 = 0x0
0x18a: V164 = EXTCODESIZE V138
0x18b: V165 = ISZERO V164
0x18c: V166 = ISZERO V165
0x18d: V167 = 0x195
0x190: JUMPI 0x195 V166
---
Entry stack: [V13, 0x5e, V40, V42, V129]
Stack pops: 1
Stack additions: [V138, 0xfe9fbb80, V158, 0x20, V161, V162, V161, 0x0, V138]
Exit stack: [V13, 0x5e, V40, V42, V138, 0xfe9fbb80, V158, 0x20, V161, V162, V161, 0x0, V138]

================================

Block 0x191
[0x191:0x194]
---
Predecessors: [0x145]
Successors: []
---
0x191 PUSH1 0x0
0x193 DUP1
0x194 REVERT
---
0x191: V168 = 0x0
0x194: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V40, V42, V138, 0xfe9fbb80, V158, 0x20, V161, V162, V161, 0x0, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V40, V42, V138, 0xfe9fbb80, V158, 0x20, V161, V162, V161, 0x0, V138]

================================

Block 0x195
[0x195:0x19d]
---
Predecessors: [0x145]
Successors: [0x19e, 0x1a2]
---
0x195 JUMPDEST
0x196 GAS
0x197 CALL
0x198 ISZERO
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x195: JUMPDEST 
0x196: V169 = GAS
0x197: V170 = CALL V169 V138 0x0 V161 V162 V161 0x20
0x198: V171 = ISZERO V170
0x199: V172 = ISZERO V171
0x19a: V173 = 0x1a2
0x19d: JUMPI 0x1a2 V172
---
Entry stack: [V13, 0x5e, V40, V42, V138, 0xfe9fbb80, V158, 0x20, V161, V162, V161, 0x0, V138]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x5e, V40, V42, V138, 0xfe9fbb80, V158]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x195]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V174 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V40, V42, V138, 0xfe9fbb80, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V40, V42, V138, 0xfe9fbb80, V158]

================================

Block 0x1a2
[0x1a2:0x1b1]
---
Predecessors: [0x195]
Successors: [0x1b2]
---
0x1a2 JUMPDEST
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 DUP1
0x1aa MLOAD
0x1ab ISZERO
0x1ac ISZERO
0x1ad PUSH1 0x1
0x1af EQ
0x1b0 SWAP1
0x1b1 POP
---
0x1a2: JUMPDEST 
0x1a6: V175 = 0x40
0x1a8: V176 = M[0x40]
0x1aa: V177 = M[V176]
0x1ab: V178 = ISZERO V177
0x1ac: V179 = ISZERO V178
0x1ad: V180 = 0x1
0x1af: V181 = EQ 0x1 V179
---
Entry stack: [V13, 0x5e, V40, V42, V138, 0xfe9fbb80, V158]
Stack pops: 3
Stack additions: [V181]
Exit stack: [V13, 0x5e, V40, V42, V181]

================================

Block 0x1b2
[0x1b2:0x1b8]
---
Predecessors: [0x12d, 0x1a2]
Successors: [0x1b9, 0x1bd]
---
0x1b2 JUMPDEST
0x1b3 ISZERO
0x1b4 ISZERO
0x1b5 PUSH2 0x1bd
0x1b8 JUMPI
---
0x1b2: JUMPDEST 
0x1b3: V182 = ISZERO S0
0x1b4: V183 = ISZERO V182
0x1b5: V184 = 0x1bd
0x1b8: JUMPI 0x1bd V183
---
Entry stack: [V13, 0x5e, V40, V42, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x5e, V40, V42]

================================

Block 0x1b9
[0x1b9:0x1bc]
---
Predecessors: [0x1b2]
Successors: []
---
0x1b9 PUSH1 0x0
0x1bb DUP1
0x1bc REVERT
---
0x1b9: V185 = 0x0
0x1bc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V40, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V40, V42]

================================

Block 0x1bd
[0x1bd:0x1ec]
---
Predecessors: [0x1b2]
Successors: [0x1ed, 0x1f1]
---
0x1bd JUMPDEST
0x1be PUSH1 0x1
0x1c0 PUSH1 0xa0
0x1c2 PUSH1 0x2
0x1c4 EXP
0x1c5 SUB
0x1c6 DUP3
0x1c7 AND
0x1c8 CALLVALUE
0x1c9 DUP3
0x1ca ADD
0x1cb DUP1
0x1cc ISZERO
0x1cd PUSH2 0x8fc
0x1d0 MUL
0x1d1 SWAP1
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 PUSH1 0x0
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da DUP1
0x1db DUP4
0x1dc SUB
0x1dd DUP2
0x1de DUP6
0x1df DUP9
0x1e0 DUP9
0x1e1 CALL
0x1e2 SWAP4
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 ISZERO
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1bd: JUMPDEST 
0x1be: V186 = 0x1
0x1c0: V187 = 0xa0
0x1c2: V188 = 0x2
0x1c4: V189 = EXP 0x2 0xa0
0x1c5: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c7: V191 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: V192 = CALLVALUE
0x1ca: V193 = ADD V42 V192
0x1cc: V194 = ISZERO V193
0x1cd: V195 = 0x8fc
0x1d0: V196 = MUL 0x8fc V194
0x1d2: V197 = 0x40
0x1d4: V198 = M[0x40]
0x1d5: V199 = 0x0
0x1d7: V200 = 0x40
0x1d9: V201 = M[0x40]
0x1dc: V202 = SUB V198 V201
0x1e1: V203 = CALL V196 V191 V193 V201 V202 V201 0x0
0x1e7: V204 = ISZERO V203
0x1e8: V205 = ISZERO V204
0x1e9: V206 = 0x1f1
0x1ec: JUMPI 0x1f1 V205
---
Entry stack: [V13, 0x5e, V40, V42]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x5e, V40, V42]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1bd]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V207 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V40, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V40, V42]

================================

Block 0x1f1
[0x1f1:0x1f4]
---
Predecessors: [0x1bd]
Successors: [0x5e]
---
0x1f1 JUMPDEST
0x1f2 POP
0x1f3 POP
0x1f4 JUMP
---
0x1f1: JUMPDEST 
0x1f4: JUMP 0x5e
---
Entry stack: [V13, 0x5e, V40, V42]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f5
[0x1f5:0x20c]
---
Predecessors: [0x77]
Successors: [0x20d, 0x27a]
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x0
0x1f8 SLOAD
0x1f9 CALLER
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 SWAP1
0x203 DUP2
0x204 AND
0x205 SWAP2
0x206 AND
0x207 EQ
0x208 DUP1
0x209 PUSH2 0x27a
0x20c JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V208 = 0x0
0x1f8: V209 = S[0x0]
0x1f9: V210 = CALLER
0x1fa: V211 = 0x1
0x1fc: V212 = 0xa0
0x1fe: V213 = 0x2
0x200: V214 = EXP 0x2 0xa0
0x201: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x204: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x206: V217 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x207: V218 = EQ V217 V216
0x209: V219 = 0x27a
0x20c: JUMPI 0x27a V218
---
Entry stack: [V13, 0x5e, V52, V54, V59]
Stack pops: 0
Stack additions: [V218]
Exit stack: [V13, 0x5e, V52, V54, V59, V218]

================================

Block 0x20d
[0x20d:0x258]
---
Predecessors: [0x1f5]
Successors: [0x259, 0x25d]
---
0x20d POP
0x20e PUSH1 0x1
0x210 SLOAD
0x211 PUSH1 0x1
0x213 PUSH1 0xa0
0x215 PUSH1 0x2
0x217 EXP
0x218 SUB
0x219 AND
0x21a PUSH4 0xfe9fbb80
0x21f CALLER
0x220 PUSH1 0x40
0x222 MLOAD
0x223 PUSH1 0xe0
0x225 PUSH1 0x2
0x227 EXP
0x228 PUSH4 0xffffffff
0x22d DUP5
0x22e AND
0x22f MUL
0x230 DUP2
0x231 MSTORE
0x232 PUSH1 0x1
0x234 PUSH1 0xa0
0x236 PUSH1 0x2
0x238 EXP
0x239 SUB
0x23a SWAP1
0x23b SWAP2
0x23c AND
0x23d PUSH1 0x4
0x23f DUP3
0x240 ADD
0x241 MSTORE
0x242 PUSH1 0x24
0x244 ADD
0x245 PUSH1 0x20
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b DUP4
0x24c SUB
0x24d DUP2
0x24e PUSH1 0x0
0x250 DUP8
0x251 DUP1
0x252 EXTCODESIZE
0x253 ISZERO
0x254 ISZERO
0x255 PUSH2 0x25d
0x258 JUMPI
---
0x20e: V220 = 0x1
0x210: V221 = S[0x1]
0x211: V222 = 0x1
0x213: V223 = 0xa0
0x215: V224 = 0x2
0x217: V225 = EXP 0x2 0xa0
0x218: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x219: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x21a: V228 = 0xfe9fbb80
0x21f: V229 = CALLER
0x220: V230 = 0x40
0x222: V231 = M[0x40]
0x223: V232 = 0xe0
0x225: V233 = 0x2
0x227: V234 = EXP 0x2 0xe0
0x228: V235 = 0xffffffff
0x22e: V236 = AND 0xfe9fbb80 0xffffffff
0x22f: V237 = MUL 0xfe9fbb80 0x100000000000000000000000000000000000000000000000000000000
0x231: M[V231] = 0xfe9fbb8000000000000000000000000000000000000000000000000000000000
0x232: V238 = 0x1
0x234: V239 = 0xa0
0x236: V240 = 0x2
0x238: V241 = EXP 0x2 0xa0
0x239: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23c: V243 = AND V229 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V244 = 0x4
0x240: V245 = ADD V231 0x4
0x241: M[V245] = V243
0x242: V246 = 0x24
0x244: V247 = ADD 0x24 V231
0x245: V248 = 0x20
0x247: V249 = 0x40
0x249: V250 = M[0x40]
0x24c: V251 = SUB V247 V250
0x24e: V252 = 0x0
0x252: V253 = EXTCODESIZE V227
0x253: V254 = ISZERO V253
0x254: V255 = ISZERO V254
0x255: V256 = 0x25d
0x258: JUMPI 0x25d V255
---
Entry stack: [V13, 0x5e, V52, V54, V59, V218]
Stack pops: 1
Stack additions: [V227, 0xfe9fbb80, V247, 0x20, V250, V251, V250, 0x0, V227]
Exit stack: [V13, 0x5e, V52, V54, V59, V227, 0xfe9fbb80, V247, 0x20, V250, V251, V250, 0x0, V227]

================================

Block 0x259
[0x259:0x25c]
---
Predecessors: [0x20d]
Successors: []
---
0x259 PUSH1 0x0
0x25b DUP1
0x25c REVERT
---
0x259: V257 = 0x0
0x25c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V52, V54, V59, V227, 0xfe9fbb80, V247, 0x20, V250, V251, V250, 0x0, V227]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V52, V54, V59, V227, 0xfe9fbb80, V247, 0x20, V250, V251, V250, 0x0, V227]

================================

Block 0x25d
[0x25d:0x265]
---
Predecessors: [0x20d]
Successors: [0x266, 0x26a]
---
0x25d JUMPDEST
0x25e GAS
0x25f CALL
0x260 ISZERO
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x25d: JUMPDEST 
0x25e: V258 = GAS
0x25f: V259 = CALL V258 V227 0x0 V250 V251 V250 0x20
0x260: V260 = ISZERO V259
0x261: V261 = ISZERO V260
0x262: V262 = 0x26a
0x265: JUMPI 0x26a V261
---
Entry stack: [V13, 0x5e, V52, V54, V59, V227, 0xfe9fbb80, V247, 0x20, V250, V251, V250, 0x0, V227]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x5e, V52, V54, V59, V227, 0xfe9fbb80, V247]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x25d]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V263 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V52, V54, V59, V227, 0xfe9fbb80, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V52, V54, V59, V227, 0xfe9fbb80, V247]

================================

Block 0x26a
[0x26a:0x279]
---
Predecessors: [0x25d]
Successors: [0x27a]
---
0x26a JUMPDEST
0x26b POP
0x26c POP
0x26d POP
0x26e PUSH1 0x40
0x270 MLOAD
0x271 DUP1
0x272 MLOAD
0x273 ISZERO
0x274 ISZERO
0x275 PUSH1 0x1
0x277 EQ
0x278 SWAP1
0x279 POP
---
0x26a: JUMPDEST 
0x26e: V264 = 0x40
0x270: V265 = M[0x40]
0x272: V266 = M[V265]
0x273: V267 = ISZERO V266
0x274: V268 = ISZERO V267
0x275: V269 = 0x1
0x277: V270 = EQ 0x1 V268
---
Entry stack: [V13, 0x5e, V52, V54, V59, V227, 0xfe9fbb80, V247]
Stack pops: 3
Stack additions: [V270]
Exit stack: [V13, 0x5e, V52, V54, V59, V270]

================================

Block 0x27a
[0x27a:0x280]
---
Predecessors: [0x1f5, 0x26a]
Successors: [0x281, 0x285]
---
0x27a JUMPDEST
0x27b ISZERO
0x27c ISZERO
0x27d PUSH2 0x285
0x280 JUMPI
---
0x27a: JUMPDEST 
0x27b: V271 = ISZERO S0
0x27c: V272 = ISZERO V271
0x27d: V273 = 0x285
0x280: JUMPI 0x285 V272
---
Entry stack: [V13, 0x5e, V52, V54, V59, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x5e, V52, V54, V59]

================================

Block 0x281
[0x281:0x284]
---
Predecessors: [0x27a]
Successors: []
---
0x281 PUSH1 0x0
0x283 DUP1
0x284 REVERT
---
0x281: V274 = 0x0
0x284: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V52, V54, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V52, V54, V59]

================================

Block 0x285
[0x285:0x2da]
---
Predecessors: [0x27a]
Successors: [0x2db, 0x2df]
---
0x285 JUMPDEST
0x286 DUP3
0x287 PUSH1 0x1
0x289 PUSH1 0xa0
0x28b PUSH1 0x2
0x28d EXP
0x28e SUB
0x28f AND
0x290 PUSH4 0x359d1f11
0x295 DUP4
0x296 CALLVALUE
0x297 ADD
0x298 DUP4
0x299 PUSH1 0x40
0x29b MLOAD
0x29c PUSH1 0xe0
0x29e PUSH1 0x2
0x2a0 EXP
0x2a1 PUSH4 0xffffffff
0x2a6 DUP6
0x2a7 AND
0x2a8 MUL
0x2a9 DUP2
0x2aa MSTORE
0x2ab PUSH16 0xffffffffffffffffffffffffffffffff
0x2bc NOT
0x2bd SWAP1
0x2be SWAP2
0x2bf AND
0x2c0 PUSH1 0x4
0x2c2 DUP3
0x2c3 ADD
0x2c4 MSTORE
0x2c5 PUSH1 0x24
0x2c7 ADD
0x2c8 PUSH1 0x0
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd DUP1
0x2ce DUP4
0x2cf SUB
0x2d0 DUP2
0x2d1 DUP6
0x2d2 DUP9
0x2d3 DUP1
0x2d4 EXTCODESIZE
0x2d5 ISZERO
0x2d6 ISZERO
0x2d7 PUSH2 0x2df
0x2da JUMPI
---
0x285: JUMPDEST 
0x287: V275 = 0x1
0x289: V276 = 0xa0
0x28b: V277 = 0x2
0x28d: V278 = EXP 0x2 0xa0
0x28e: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28f: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x290: V281 = 0x359d1f11
0x296: V282 = CALLVALUE
0x297: V283 = ADD V282 V54
0x299: V284 = 0x40
0x29b: V285 = M[0x40]
0x29c: V286 = 0xe0
0x29e: V287 = 0x2
0x2a0: V288 = EXP 0x2 0xe0
0x2a1: V289 = 0xffffffff
0x2a7: V290 = AND 0x359d1f11 0xffffffff
0x2a8: V291 = MUL 0x359d1f11 0x100000000000000000000000000000000000000000000000000000000
0x2aa: M[V285] = 0x359d1f1100000000000000000000000000000000000000000000000000000000
0x2ab: V292 = 0xffffffffffffffffffffffffffffffff
0x2bc: V293 = NOT 0xffffffffffffffffffffffffffffffff
0x2bf: V294 = AND V59 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000
0x2c0: V295 = 0x4
0x2c3: V296 = ADD V285 0x4
0x2c4: M[V296] = V294
0x2c5: V297 = 0x24
0x2c7: V298 = ADD 0x24 V285
0x2c8: V299 = 0x0
0x2ca: V300 = 0x40
0x2cc: V301 = M[0x40]
0x2cf: V302 = SUB V298 V301
0x2d4: V303 = EXTCODESIZE V280
0x2d5: V304 = ISZERO V303
0x2d6: V305 = ISZERO V304
0x2d7: V306 = 0x2df
0x2da: JUMPI 0x2df V305
---
Entry stack: [V13, 0x5e, V52, V54, V59]
Stack pops: 3
Stack additions: [S2, S1, S0, V280, 0x359d1f11, V283, V298, 0x0, V301, V302, V301, V283, V280]
Exit stack: [V13, 0x5e, V52, V54, V59, V280, 0x359d1f11, V283, V298, 0x0, V301, V302, V301, V283, V280]

================================

Block 0x2db
[0x2db:0x2de]
---
Predecessors: [0x285]
Successors: []
---
0x2db PUSH1 0x0
0x2dd DUP1
0x2de REVERT
---
0x2db: V307 = 0x0
0x2de: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V52, V54, V59, V280, 0x359d1f11, V283, V298, 0x0, V301, V302, V301, V283, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V52, V54, V59, V280, 0x359d1f11, V283, V298, 0x0, V301, V302, V301, V283, V280]

================================

Block 0x2df
[0x2df:0x2e7]
---
Predecessors: [0x285]
Successors: [0x2e8, 0x2ec]
---
0x2df JUMPDEST
0x2e0 GAS
0x2e1 CALL
0x2e2 ISZERO
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V308 = GAS
0x2e1: V309 = CALL V308 V280 V283 V301 V302 V301 0x0
0x2e2: V310 = ISZERO V309
0x2e3: V311 = ISZERO V310
0x2e4: V312 = 0x2ec
0x2e7: JUMPI 0x2ec V311
---
Entry stack: [V13, 0x5e, V52, V54, V59, V280, 0x359d1f11, V283, V298, 0x0, V301, V302, V301, V283, V280]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x5e, V52, V54, V59, V280, 0x359d1f11, V283, V298]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x2df]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V313 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V52, V54, V59, V280, 0x359d1f11, V283, V298]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V52, V54, V59, V280, 0x359d1f11, V283, V298]

================================

Block 0x2ec
[0x2ec:0x2f4]
---
Predecessors: [0x2df]
Successors: [0x5e]
---
0x2ec JUMPDEST
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 POP
0x2f1 POP
0x2f2 POP
0x2f3 POP
0x2f4 JUMP
---
0x2ec: JUMPDEST 
0x2f4: JUMP 0x5e
---
Entry stack: [V13, 0x5e, V52, V54, V59, V280, 0x359d1f11, V283, V298]
Stack pops: 8
Stack additions: []
Exit stack: [V13]

================================

Block 0x2f5
[0x2f5:0x303]
---
Predecessors: [0xaf]
Successors: [0xb7]
---
0x2f5 JUMPDEST
0x2f6 PUSH1 0x1
0x2f8 SLOAD
0x2f9 PUSH1 0x1
0x2fb PUSH1 0xa0
0x2fd PUSH1 0x2
0x2ff EXP
0x300 SUB
0x301 AND
0x302 DUP2
0x303 JUMP
---
0x2f5: JUMPDEST 
0x2f6: V314 = 0x1
0x2f8: V315 = S[0x1]
0x2f9: V316 = 0x1
0x2fb: V317 = 0xa0
0x2fd: V318 = 0x2
0x2ff: V319 = EXP 0x2 0xa0
0x300: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x301: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x303: JUMP 0xb7
---
Entry stack: [V13, 0xb7]
Stack pops: 1
Stack additions: [S0, V321]
Exit stack: [V13, 0xb7, V321]

================================

Block 0x304
[0x304:0x31b]
---
Predecessors: [0xde]
Successors: [0x31c, 0x389]
---
0x304 JUMPDEST
0x305 PUSH1 0x0
0x307 SLOAD
0x308 CALLER
0x309 PUSH1 0x1
0x30b PUSH1 0xa0
0x30d PUSH1 0x2
0x30f EXP
0x310 SUB
0x311 SWAP1
0x312 DUP2
0x313 AND
0x314 SWAP2
0x315 AND
0x316 EQ
0x317 DUP1
0x318 PUSH2 0x389
0x31b JUMPI
---
0x304: JUMPDEST 
0x305: V322 = 0x0
0x307: V323 = S[0x0]
0x308: V324 = CALLER
0x309: V325 = 0x1
0x30b: V326 = 0xa0
0x30d: V327 = 0x2
0x30f: V328 = EXP 0x2 0xa0
0x310: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x313: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x315: V331 = AND V323 0xffffffffffffffffffffffffffffffffffffffff
0x316: V332 = EQ V331 V330
0x318: V333 = 0x389
0x31b: JUMPI 0x389 V332
---
Entry stack: [V13, 0x5e, V92, V95, V97]
Stack pops: 0
Stack additions: [V332]
Exit stack: [V13, 0x5e, V92, V95, V97, V332]

================================

Block 0x31c
[0x31c:0x367]
---
Predecessors: [0x304]
Successors: [0x368, 0x36c]
---
0x31c POP
0x31d PUSH1 0x1
0x31f SLOAD
0x320 PUSH1 0x1
0x322 PUSH1 0xa0
0x324 PUSH1 0x2
0x326 EXP
0x327 SUB
0x328 AND
0x329 PUSH4 0xfe9fbb80
0x32e CALLER
0x32f PUSH1 0x40
0x331 MLOAD
0x332 PUSH1 0xe0
0x334 PUSH1 0x2
0x336 EXP
0x337 PUSH4 0xffffffff
0x33c DUP5
0x33d AND
0x33e MUL
0x33f DUP2
0x340 MSTORE
0x341 PUSH1 0x1
0x343 PUSH1 0xa0
0x345 PUSH1 0x2
0x347 EXP
0x348 SUB
0x349 SWAP1
0x34a SWAP2
0x34b AND
0x34c PUSH1 0x4
0x34e DUP3
0x34f ADD
0x350 MSTORE
0x351 PUSH1 0x24
0x353 ADD
0x354 PUSH1 0x20
0x356 PUSH1 0x40
0x358 MLOAD
0x359 DUP1
0x35a DUP4
0x35b SUB
0x35c DUP2
0x35d PUSH1 0x0
0x35f DUP8
0x360 DUP1
0x361 EXTCODESIZE
0x362 ISZERO
0x363 ISZERO
0x364 PUSH2 0x36c
0x367 JUMPI
---
0x31d: V334 = 0x1
0x31f: V335 = S[0x1]
0x320: V336 = 0x1
0x322: V337 = 0xa0
0x324: V338 = 0x2
0x326: V339 = EXP 0x2 0xa0
0x327: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x328: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x329: V342 = 0xfe9fbb80
0x32e: V343 = CALLER
0x32f: V344 = 0x40
0x331: V345 = M[0x40]
0x332: V346 = 0xe0
0x334: V347 = 0x2
0x336: V348 = EXP 0x2 0xe0
0x337: V349 = 0xffffffff
0x33d: V350 = AND 0xfe9fbb80 0xffffffff
0x33e: V351 = MUL 0xfe9fbb80 0x100000000000000000000000000000000000000000000000000000000
0x340: M[V345] = 0xfe9fbb8000000000000000000000000000000000000000000000000000000000
0x341: V352 = 0x1
0x343: V353 = 0xa0
0x345: V354 = 0x2
0x347: V355 = EXP 0x2 0xa0
0x348: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34b: V357 = AND V343 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V358 = 0x4
0x34f: V359 = ADD V345 0x4
0x350: M[V359] = V357
0x351: V360 = 0x24
0x353: V361 = ADD 0x24 V345
0x354: V362 = 0x20
0x356: V363 = 0x40
0x358: V364 = M[0x40]
0x35b: V365 = SUB V361 V364
0x35d: V366 = 0x0
0x361: V367 = EXTCODESIZE V341
0x362: V368 = ISZERO V367
0x363: V369 = ISZERO V368
0x364: V370 = 0x36c
0x367: JUMPI 0x36c V369
---
Entry stack: [V13, 0x5e, V92, V95, V97, V332]
Stack pops: 1
Stack additions: [V341, 0xfe9fbb80, V361, 0x20, V364, V365, V364, 0x0, V341]
Exit stack: [V13, 0x5e, V92, V95, V97, V341, 0xfe9fbb80, V361, 0x20, V364, V365, V364, 0x0, V341]

================================

Block 0x368
[0x368:0x36b]
---
Predecessors: [0x31c]
Successors: []
---
0x368 PUSH1 0x0
0x36a DUP1
0x36b REVERT
---
0x368: V371 = 0x0
0x36b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V92, V95, V97, V341, 0xfe9fbb80, V361, 0x20, V364, V365, V364, 0x0, V341]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V92, V95, V97, V341, 0xfe9fbb80, V361, 0x20, V364, V365, V364, 0x0, V341]

================================

Block 0x36c
[0x36c:0x374]
---
Predecessors: [0x31c]
Successors: [0x375, 0x379]
---
0x36c JUMPDEST
0x36d GAS
0x36e CALL
0x36f ISZERO
0x370 ISZERO
0x371 PUSH2 0x379
0x374 JUMPI
---
0x36c: JUMPDEST 
0x36d: V372 = GAS
0x36e: V373 = CALL V372 V341 0x0 V364 V365 V364 0x20
0x36f: V374 = ISZERO V373
0x370: V375 = ISZERO V374
0x371: V376 = 0x379
0x374: JUMPI 0x379 V375
---
Entry stack: [V13, 0x5e, V92, V95, V97, V341, 0xfe9fbb80, V361, 0x20, V364, V365, V364, 0x0, V341]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x5e, V92, V95, V97, V341, 0xfe9fbb80, V361]

================================

Block 0x375
[0x375:0x378]
---
Predecessors: [0x36c]
Successors: []
---
0x375 PUSH1 0x0
0x377 DUP1
0x378 REVERT
---
0x375: V377 = 0x0
0x378: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V92, V95, V97, V341, 0xfe9fbb80, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V92, V95, V97, V341, 0xfe9fbb80, V361]

================================

Block 0x379
[0x379:0x388]
---
Predecessors: [0x36c]
Successors: [0x389]
---
0x379 JUMPDEST
0x37a POP
0x37b POP
0x37c POP
0x37d PUSH1 0x40
0x37f MLOAD
0x380 DUP1
0x381 MLOAD
0x382 ISZERO
0x383 ISZERO
0x384 PUSH1 0x1
0x386 EQ
0x387 SWAP1
0x388 POP
---
0x379: JUMPDEST 
0x37d: V378 = 0x40
0x37f: V379 = M[0x40]
0x381: V380 = M[V379]
0x382: V381 = ISZERO V380
0x383: V382 = ISZERO V381
0x384: V383 = 0x1
0x386: V384 = EQ 0x1 V382
---
Entry stack: [V13, 0x5e, V92, V95, V97, V341, 0xfe9fbb80, V361]
Stack pops: 3
Stack additions: [V384]
Exit stack: [V13, 0x5e, V92, V95, V97, V384]

================================

Block 0x389
[0x389:0x38f]
---
Predecessors: [0x304, 0x379]
Successors: [0x390, 0x394]
---
0x389 JUMPDEST
0x38a ISZERO
0x38b ISZERO
0x38c PUSH2 0x394
0x38f JUMPI
---
0x389: JUMPDEST 
0x38a: V385 = ISZERO S0
0x38b: V386 = ISZERO V385
0x38c: V387 = 0x394
0x38f: JUMPI 0x394 V386
---
Entry stack: [V13, 0x5e, V92, V95, V97, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x5e, V92, V95, V97]

================================

Block 0x390
[0x390:0x393]
---
Predecessors: [0x389]
Successors: []
---
0x390 PUSH1 0x0
0x392 DUP1
0x393 REVERT
---
0x390: V388 = 0x0
0x393: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V92, V95, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V92, V95, V97]

================================

Block 0x394
[0x394:0x3e3]
---
Predecessors: [0x389]
Successors: [0x3e4, 0x3e8]
---
0x394 JUMPDEST
0x395 DUP3
0x396 PUSH1 0x1
0x398 PUSH1 0xa0
0x39a PUSH1 0x2
0x39c EXP
0x39d SUB
0x39e AND
0x39f PUSH4 0xa9059cbb
0x3a4 DUP4
0x3a5 DUP4
0x3a6 PUSH1 0x40
0x3a8 MLOAD
0x3a9 PUSH1 0xe0
0x3ab PUSH1 0x2
0x3ad EXP
0x3ae PUSH4 0xffffffff
0x3b3 DUP6
0x3b4 AND
0x3b5 MUL
0x3b6 DUP2
0x3b7 MSTORE
0x3b8 PUSH1 0x1
0x3ba PUSH1 0xa0
0x3bc PUSH1 0x2
0x3be EXP
0x3bf SUB
0x3c0 SWAP1
0x3c1 SWAP3
0x3c2 AND
0x3c3 PUSH1 0x4
0x3c5 DUP4
0x3c6 ADD
0x3c7 MSTORE
0x3c8 PUSH1 0x24
0x3ca DUP3
0x3cb ADD
0x3cc MSTORE
0x3cd PUSH1 0x44
0x3cf ADD
0x3d0 PUSH1 0x20
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 DUP4
0x3d7 SUB
0x3d8 DUP2
0x3d9 PUSH1 0x0
0x3db DUP8
0x3dc DUP1
0x3dd EXTCODESIZE
0x3de ISZERO
0x3df ISZERO
0x3e0 PUSH2 0x3e8
0x3e3 JUMPI
---
0x394: JUMPDEST 
0x396: V389 = 0x1
0x398: V390 = 0xa0
0x39a: V391 = 0x2
0x39c: V392 = EXP 0x2 0xa0
0x39d: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39e: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x39f: V395 = 0xa9059cbb
0x3a6: V396 = 0x40
0x3a8: V397 = M[0x40]
0x3a9: V398 = 0xe0
0x3ab: V399 = 0x2
0x3ad: V400 = EXP 0x2 0xe0
0x3ae: V401 = 0xffffffff
0x3b4: V402 = AND 0xa9059cbb 0xffffffff
0x3b5: V403 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3b7: M[V397] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3b8: V404 = 0x1
0x3ba: V405 = 0xa0
0x3bc: V406 = 0x2
0x3be: V407 = EXP 0x2 0xa0
0x3bf: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c2: V409 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x3c3: V410 = 0x4
0x3c6: V411 = ADD V397 0x4
0x3c7: M[V411] = V409
0x3c8: V412 = 0x24
0x3cb: V413 = ADD V397 0x24
0x3cc: M[V413] = V97
0x3cd: V414 = 0x44
0x3cf: V415 = ADD 0x44 V397
0x3d0: V416 = 0x20
0x3d2: V417 = 0x40
0x3d4: V418 = M[0x40]
0x3d7: V419 = SUB V415 V418
0x3d9: V420 = 0x0
0x3dd: V421 = EXTCODESIZE V394
0x3de: V422 = ISZERO V421
0x3df: V423 = ISZERO V422
0x3e0: V424 = 0x3e8
0x3e3: JUMPI 0x3e8 V423
---
Entry stack: [V13, 0x5e, V92, V95, V97]
Stack pops: 3
Stack additions: [S2, S1, S0, V394, 0xa9059cbb, V415, 0x20, V418, V419, V418, 0x0, V394]
Exit stack: [V13, 0x5e, V92, V95, V97, V394, 0xa9059cbb, V415, 0x20, V418, V419, V418, 0x0, V394]

================================

Block 0x3e4
[0x3e4:0x3e7]
---
Predecessors: [0x394]
Successors: []
---
0x3e4 PUSH1 0x0
0x3e6 DUP1
0x3e7 REVERT
---
0x3e4: V425 = 0x0
0x3e7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V92, V95, V97, V394, 0xa9059cbb, V415, 0x20, V418, V419, V418, 0x0, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V92, V95, V97, V394, 0xa9059cbb, V415, 0x20, V418, V419, V418, 0x0, V394]

================================

Block 0x3e8
[0x3e8:0x3f0]
---
Predecessors: [0x394]
Successors: [0x3f1, 0x3f5]
---
0x3e8 JUMPDEST
0x3e9 GAS
0x3ea CALL
0x3eb ISZERO
0x3ec ISZERO
0x3ed PUSH2 0x3f5
0x3f0 JUMPI
---
0x3e8: JUMPDEST 
0x3e9: V426 = GAS
0x3ea: V427 = CALL V426 V394 0x0 V418 V419 V418 0x20
0x3eb: V428 = ISZERO V427
0x3ec: V429 = ISZERO V428
0x3ed: V430 = 0x3f5
0x3f0: JUMPI 0x3f5 V429
---
Entry stack: [V13, 0x5e, V92, V95, V97, V394, 0xa9059cbb, V415, 0x20, V418, V419, V418, 0x0, V394]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x5e, V92, V95, V97, V394, 0xa9059cbb, V415]

================================

Block 0x3f1
[0x3f1:0x3f4]
---
Predecessors: [0x3e8]
Successors: []
---
0x3f1 PUSH1 0x0
0x3f3 DUP1
0x3f4 REVERT
---
0x3f1: V431 = 0x0
0x3f4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V92, V95, V97, V394, 0xa9059cbb, V415]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V92, V95, V97, V394, 0xa9059cbb, V415]

================================

Block 0x3f5
[0x3f5:0x403]
---
Predecessors: [0x3e8]
Successors: [0x5e]
---
0x3f5 JUMPDEST
0x3f6 POP
0x3f7 POP
0x3f8 POP
0x3f9 PUSH1 0x40
0x3fb MLOAD
0x3fc DUP1
0x3fd MLOAD
0x3fe POP
0x3ff POP
0x400 POP
0x401 POP
0x402 POP
0x403 JUMP
---
0x3f5: JUMPDEST 
0x3f9: V432 = 0x40
0x3fb: V433 = M[0x40]
0x3fd: V434 = M[V433]
0x403: JUMP 0x5e
---
Entry stack: [V13, 0x5e, V92, V95, V97, V394, 0xa9059cbb, V415]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x404
[0x404:0x41a]
---
Predecessors: [0x106]
Successors: [0x41b, 0x41f]
---
0x404 JUMPDEST
0x405 PUSH1 0x0
0x407 SLOAD
0x408 CALLER
0x409 PUSH1 0x1
0x40b PUSH1 0xa0
0x40d PUSH1 0x2
0x40f EXP
0x410 SUB
0x411 SWAP1
0x412 DUP2
0x413 AND
0x414 SWAP2
0x415 AND
0x416 EQ
0x417 PUSH2 0x41f
0x41a JUMPI
---
0x404: JUMPDEST 
0x405: V435 = 0x0
0x407: V436 = S[0x0]
0x408: V437 = CALLER
0x409: V438 = 0x1
0x40b: V439 = 0xa0
0x40d: V440 = 0x2
0x40f: V441 = EXP 0x2 0xa0
0x410: V442 = SUB 0x10000000000000000000000000000000000000000 0x1
0x413: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x415: V444 = AND V436 0xffffffffffffffffffffffffffffffffffffffff
0x416: V445 = EQ V444 V443
0x417: V446 = 0x41f
0x41a: JUMPI 0x41f V445
---
Entry stack: [V13, 0x5e, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V111]

================================

Block 0x41b
[0x41b:0x41e]
---
Predecessors: [0x404]
Successors: []
---
0x41b PUSH1 0x0
0x41d DUP1
0x41e REVERT
---
0x41b: V447 = 0x0
0x41e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x5e, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x5e, V111]

================================

Block 0x41f
[0x41f:0x44d]
---
Predecessors: [0x404]
Successors: [0x5e]
---
0x41f JUMPDEST
0x420 PUSH1 0x1
0x422 DUP1
0x423 SLOAD
0x424 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x439 NOT
0x43a AND
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 SWAP3
0x444 SWAP1
0x445 SWAP3
0x446 AND
0x447 SWAP2
0x448 SWAP1
0x449 SWAP2
0x44a OR
0x44b SWAP1
0x44c SSTORE
0x44d JUMP
---
0x41f: JUMPDEST 
0x420: V448 = 0x1
0x423: V449 = S[0x1]
0x424: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x439: V451 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V452 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V449
0x43b: V453 = 0x1
0x43d: V454 = 0xa0
0x43f: V455 = 0x2
0x441: V456 = EXP 0x2 0xa0
0x442: V457 = SUB 0x10000000000000000000000000000000000000000 0x1
0x446: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x44a: V459 = OR V458 V452
0x44c: S[0x1] = V459
0x44d: JUMP 0x5e
---
Entry stack: [V13, 0x5e, V111]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x44e
[0x44e:0x45c]
---
Predecessors: [0x125]
Successors: [0xb7]
---
0x44e JUMPDEST
0x44f PUSH1 0x0
0x451 SLOAD
0x452 PUSH1 0x1
0x454 PUSH1 0xa0
0x456 PUSH1 0x2
0x458 EXP
0x459 SUB
0x45a AND
0x45b DUP2
0x45c JUMP
---
0x44e: JUMPDEST 
0x44f: V460 = 0x0
0x451: V461 = S[0x0]
0x452: V462 = 0x1
0x454: V463 = 0xa0
0x456: V464 = 0x2
0x458: V465 = EXP 0x2 0xa0
0x459: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45a: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V461
0x45c: JUMP 0xb7
---
Entry stack: [V13, 0xb7]
Stack pops: 1
Stack additions: [S0, V467]
Exit stack: [V13, 0xb7, V467]

================================

Block 0x45d
[0x45d:0x48e]
---
Predecessors: []
Successors: []
---
0x45d STOP
0x45e LOG1
0x45f PUSH6 0x627a7a723058
0x466 SHA3
0x467 ADD
0x468 MISSING 0xb8
0x469 PUSH14 0x613943b81a36884cf0e98a2a8704
0x478 OR
0x479 MISSING 0x28
0x47a ADDRESS
0x47b MISSING 0xc9
0x47c MISSING 0x5c
0x47d CALLDATALOAD
0x47e DUP11
0x47f MISSING 0x5d
0x480 COINBASE
0x481 PUSH13 0xef59e489810029
---
0x45d: STOP 
0x45e: LOG S0 S1 S2
0x45f: V468 = 0x627a7a723058
0x466: V469 = SHA3 0x627a7a723058 S3
0x467: V470 = ADD V469 S4
0x468: MISSING 0xb8
0x469: V471 = 0x613943b81a36884cf0e98a2a8704
0x478: V472 = OR 0x613943b81a36884cf0e98a2a8704 S0
0x479: MISSING 0x28
0x47a: V473 = ADDRESS
0x47b: MISSING 0xc9
0x47c: MISSING 0x5c
0x47d: V474 = CALLDATALOAD S0
0x47f: MISSING 0x5d
0x480: V475 = COINBASE
0x481: V476 = 0xef59e489810029
---
Entry stack: []
Stack pops: 0
Stack additions: [V470, V472, V473, S10, V474, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0xef59e489810029, V475]
Exit stack: []

================================

Function 0:
Public function signature: 0x10c42eaf
Entry block: 0x60
Exit block: 0x5e
Body: 0x5e, 0x60, 0x12d, 0x145, 0x191, 0x195, 0x19e, 0x1a2, 0x1b2, 0x1b9, 0x1bd, 0x1ed, 0x1f1

Function 1:
Public function signature: 0x4d63a542
Entry block: 0x77
Exit block: 0x5e
Body: 0x5e, 0x77, 0x1f5, 0x20d, 0x259, 0x25d, 0x266, 0x26a, 0x27a, 0x281, 0x285, 0x2db, 0x2df, 0x2e8, 0x2ec

Function 2:
Public function signature: 0x4fe870ab
Entry block: 0xa4
Exit block: 0xb7
Body: 0xa4, 0xab, 0xaf, 0xb7, 0x2f5

Function 3:
Public function signature: 0x58908a0f
Entry block: 0xd3
Exit block: 0x5e
Body: 0x5e, 0xd3, 0xda, 0xde, 0x304, 0x31c, 0x368, 0x36c, 0x375, 0x379, 0x389, 0x390, 0x394, 0x3e4, 0x3e8, 0x3f1, 0x3f5

Function 4:
Public function signature: 0x5bee6f92
Entry block: 0xfb
Exit block: 0x5e
Body: 0x5e, 0xfb, 0x102, 0x106, 0x404, 0x41b, 0x41f

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x11a
Exit block: 0xb7
Body: 0xb7, 0x11a, 0x121, 0x125, 0x44e

Function 6:
Public fallback function
Entry block: 0x5e
Exit block: 0x5e
Body: 0x5e

