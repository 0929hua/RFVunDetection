Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb7]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb7
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb7
0xa: JUMPI 0xb7 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xc7]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x3ccfd60b
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xc7
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x3ccfd60b
0x39: V12 = EQ V10 0x3ccfd60b
0x3a: V13 = 0xc7
0x3d: JUMPI 0xc7 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xd9]
---
0x3e DUP1
0x3f PUSH4 0x4bd54f04
0x44 EQ
0x45 PUSH2 0xd9
0x48 JUMPI
---
0x3f: V14 = 0x4bd54f04
0x44: V15 = EQ 0x4bd54f04 V10
0x45: V16 = 0xd9
0x48: JUMPI 0xd9 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x105]
---
0x49 DUP1
0x4a PUSH4 0x5259347d
0x4f EQ
0x50 PUSH2 0x105
0x53 JUMPI
---
0x4a: V17 = 0x5259347d
0x4f: V18 = EQ 0x5259347d V10
0x50: V19 = 0x105
0x53: JUMPI 0x105 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x10f]
---
0x54 DUP1
0x55 PUSH4 0x6360fc3f
0x5a EQ
0x5b PUSH2 0x10f
0x5e JUMPI
---
0x55: V20 = 0x6360fc3f
0x5a: V21 = EQ 0x6360fc3f V10
0x5b: V22 = 0x10f
0x5e: JUMPI 0x10f V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x133]
---
0x5f DUP1
0x60 PUSH4 0x63d74226
0x65 EQ
0x66 PUSH2 0x133
0x69 JUMPI
---
0x60: V23 = 0x63d74226
0x65: V24 = EQ 0x63d74226 V10
0x66: V25 = 0x133
0x69: JUMPI 0x133 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x13d]
---
0x6a DUP1
0x6b PUSH4 0x6ad1fe02
0x70 EQ
0x71 PUSH2 0x13d
0x74 JUMPI
---
0x6b: V26 = 0x6ad1fe02
0x70: V27 = EQ 0x6ad1fe02 V10
0x71: V28 = 0x13d
0x74: JUMPI 0x13d V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x169]
---
0x75 DUP1
0x76 PUSH4 0x943dfef1
0x7b EQ
0x7c PUSH2 0x169
0x7f JUMPI
---
0x76: V29 = 0x943dfef1
0x7b: V30 = EQ 0x943dfef1 V10
0x7c: V31 = 0x169
0x7f: JUMPI 0x169 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x18b]
---
0x80 DUP1
0x81 PUSH4 0xa6f2ae3a
0x86 EQ
0x87 PUSH2 0x18b
0x8a JUMPI
---
0x81: V32 = 0xa6f2ae3a
0x86: V33 = EQ 0xa6f2ae3a V10
0x87: V34 = 0x18b
0x8a: JUMPI 0x18b V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x19d]
---
0x8b DUP1
0x8c PUSH4 0xbaf38352
0x91 EQ
0x92 PUSH2 0x19d
0x95 JUMPI
---
0x8c: V35 = 0xbaf38352
0x91: V36 = EQ 0xbaf38352 V10
0x92: V37 = 0x19d
0x95: JUMPI 0x19d V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x1bb]
---
0x96 DUP1
0x97 PUSH4 0xeb03e351
0x9c EQ
0x9d PUSH2 0x1bb
0xa0 JUMPI
---
0x97: V38 = 0xeb03e351
0x9c: V39 = EQ 0xeb03e351 V10
0x9d: V40 = 0x1bb
0xa0: JUMPI 0x1bb V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x1e9]
---
0xa1 DUP1
0xa2 PUSH4 0xfc0c546a
0xa7 EQ
0xa8 PUSH2 0x1e9
0xab JUMPI
---
0xa2: V41 = 0xfc0c546a
0xa7: V42 = EQ 0xfc0c546a V10
0xa8: V43 = 0x1e9
0xab: JUMPI 0x1e9 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x215]
---
0xac DUP1
0xad PUSH4 0xfc7e286d
0xb2 EQ
0xb3 PUSH2 0x215
0xb6 JUMPI
---
0xad: V44 = 0xfc7e286d
0xb2: V45 = EQ 0xfc7e286d V10
0xb3: V46 = 0x215
0xb6: JUMPI 0x215 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0x0, 0xac]
Successors: [0xbb]
---
0xb7 JUMPDEST
0xb8 PUSH2 0xc5
---
0xb7: JUMPDEST 
0xb8: V47 = 0xc5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V10, 0xc5]

================================

Block 0xbb
[0xbb:0xc0]
---
Predecessors: [0xb7]
Successors: []
---
0xbb JUMPDEST
0xbc PUSH1 0x0
0xbe PUSH1 0x0
0xc0 REVERT
---
0xbb: JUMPDEST 
0xbc: V48 = 0x0
0xbe: V49 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc5]

================================

Block 0xc1
[0xc1:0xc1]
---
Predecessors: [0x250, 0x517, 0x8d0]
Successors: [0xc2]
---
0xc1 JUMPDEST
---
0xc1: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xc2
[0xc2:0xc2]
---
Predecessors: [0xc1]
Successors: [0xc3]
---
0xc2 JUMPDEST
---
0xc2: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xc3
[0xc3:0xc4]
---
Predecessors: [0xc2]
Successors: [0xc5]
---
0xc3 JUMPDEST
0xc4 JUMP
---
0xc3: JUMPDEST 
0xc4: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xc5
[0xc5:0xc6]
---
Predecessors: [0xc3, 0x517, 0x541, 0x8d0]
Successors: []
---
0xc5 JUMPDEST
0xc6 STOP
---
0xc5: JUMPDEST 
0xc6: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xc7
[0xc7:0xcd]
---
Predecessors: [0xb]
Successors: [0xce, 0xcf]
---
0xc7 JUMPDEST
0xc8 CALLVALUE
0xc9 ISZERO
0xca PUSH2 0xcf
0xcd JUMPI
---
0xc7: JUMPDEST 
0xc8: V50 = CALLVALUE
0xc9: V51 = ISZERO V50
0xca: V52 = 0xcf
0xcd: JUMPI 0xcf V51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xce
[0xce:0xce]
---
Predecessors: [0xc7]
Successors: []
---
0xce INVALID
---
0xce: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0xd6]
---
Predecessors: [0xc7]
Successors: [0x28a]
---
0xcf JUMPDEST
0xd0 PUSH2 0xc5
0xd3 PUSH2 0x28a
0xd6 JUMP
---
0xcf: JUMPDEST 
0xd0: V53 = 0xc5
0xd3: V54 = 0x28a
0xd6: JUMP 0x28a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V10, 0xc5]

================================

Block 0xd7
[0xd7:0xd8]
---
Predecessors: []
Successors: []
---
0xd7 JUMPDEST
0xd8 STOP
---
0xd7: JUMPDEST 
0xd8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd9
[0xd9:0xdf]
---
Predecessors: [0x3e]
Successors: [0xe0, 0xe1]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb ISZERO
0xdc PUSH2 0xe1
0xdf JUMPI
---
0xd9: JUMPDEST 
0xda: V55 = CALLVALUE
0xdb: V56 = ISZERO V55
0xdc: V57 = 0xe1
0xdf: JUMPI 0xe1 V56
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe0
[0xe0:0xe0]
---
Predecessors: [0xd9]
Successors: []
---
0xe0 INVALID
---
0xe0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe1
[0xe1:0xe8]
---
Predecessors: [0xd9]
Successors: [0x520]
---
0xe1 JUMPDEST
0xe2 PUSH2 0xe9
0xe5 PUSH2 0x520
0xe8 JUMP
---
0xe1: JUMPDEST 
0xe2: V58 = 0xe9
0xe5: V59 = 0x520
0xe8: JUMP 0x520
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe9]
Exit stack: [V10, 0xe9]

================================

Block 0xe9
[0xe9:0x104]
---
Predecessors: [0x520, 0x543, 0x8ea]
Successors: []
---
0xe9 JUMPDEST
0xea PUSH1 0x40
0xec DUP1
0xed MLOAD
0xee PUSH1 0x1
0xf0 PUSH1 0xa0
0xf2 PUSH1 0x2
0xf4 EXP
0xf5 SUB
0xf6 SWAP1
0xf7 SWAP3
0xf8 AND
0xf9 DUP3
0xfa MSTORE
0xfb MLOAD
0xfc SWAP1
0xfd DUP2
0xfe SWAP1
0xff SUB
0x100 PUSH1 0x20
0x102 ADD
0x103 SWAP1
0x104 RETURN
---
0xe9: JUMPDEST 
0xea: V60 = 0x40
0xed: V61 = M[0x40]
0xee: V62 = 0x1
0xf0: V63 = 0xa0
0xf2: V64 = 0x2
0xf4: V65 = EXP 0x2 0xa0
0xf5: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8: V67 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xfa: M[V61] = V67
0xfb: V68 = M[0x40]
0xff: V69 = SUB V61 V68
0x100: V70 = 0x20
0x102: V71 = ADD 0x20 V69
0x104: RETURN V68 V71
---
Entry stack: [V10, 0xe9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xe9]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0x49]
Successors: [0x243]
---
0x105 JUMPDEST
0x106 PUSH2 0xc5
0x109 PUSH2 0x243
0x10c JUMP
---
0x105: JUMPDEST 
0x106: V72 = 0xc5
0x109: V73 = 0x243
0x10c: JUMP 0x243
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V10, 0xc5]

================================

Block 0x10d
[0x10d:0x10e]
---
Predecessors: []
Successors: []
---
0x10d JUMPDEST
0x10e STOP
---
0x10d: JUMPDEST 
0x10e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10f
[0x10f:0x115]
---
Predecessors: [0x54]
Successors: [0x116, 0x117]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 ISZERO
0x112 PUSH2 0x117
0x115 JUMPI
---
0x10f: JUMPDEST 
0x110: V74 = CALLVALUE
0x111: V75 = ISZERO V74
0x112: V76 = 0x117
0x115: JUMPI 0x117 V75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x116
[0x116:0x116]
---
Predecessors: [0x10f]
Successors: []
---
0x116 INVALID
---
0x116: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x117
[0x117:0x11e]
---
Predecessors: [0x10f]
Successors: [0x52f]
---
0x117 JUMPDEST
0x118 PUSH2 0x11f
0x11b PUSH2 0x52f
0x11e JUMP
---
0x117: JUMPDEST 
0x118: V77 = 0x11f
0x11b: V78 = 0x52f
0x11e: JUMP 0x52f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11f]
Exit stack: [V10, 0x11f]

================================

Block 0x11f
[0x11f:0x132]
---
Predecessors: [0x52f]
Successors: []
---
0x11f JUMPDEST
0x120 PUSH1 0x40
0x122 DUP1
0x123 MLOAD
0x124 SWAP2
0x125 ISZERO
0x126 ISZERO
0x127 DUP3
0x128 MSTORE
0x129 MLOAD
0x12a SWAP1
0x12b DUP2
0x12c SWAP1
0x12d SUB
0x12e PUSH1 0x20
0x130 ADD
0x131 SWAP1
0x132 RETURN
---
0x11f: JUMPDEST 
0x120: V79 = 0x40
0x123: V80 = M[0x40]
0x125: V81 = ISZERO V446
0x126: V82 = ISZERO V81
0x128: M[V80] = V82
0x129: V83 = M[0x40]
0x12d: V84 = SUB V80 V83
0x12e: V85 = 0x20
0x130: V86 = ADD 0x20 V84
0x132: RETURN V83 V86
---
Entry stack: [V10, 0x11f, V446]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x11f]

================================

Block 0x133
[0x133:0x13a]
---
Predecessors: [0x5f]
Successors: [0x538]
---
0x133 JUMPDEST
0x134 PUSH2 0xc5
0x137 PUSH2 0x538
0x13a JUMP
---
0x133: JUMPDEST 
0x134: V87 = 0xc5
0x137: V88 = 0x538
0x13a: JUMP 0x538
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V10, 0xc5]

================================

Block 0x13b
[0x13b:0x13c]
---
Predecessors: []
Successors: []
---
0x13b JUMPDEST
0x13c STOP
---
0x13b: JUMPDEST 
0x13c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x6a]
Successors: [0x144, 0x145]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f ISZERO
0x140 PUSH2 0x145
0x143 JUMPI
---
0x13d: JUMPDEST 
0x13e: V89 = CALLVALUE
0x13f: V90 = ISZERO V89
0x140: V91 = 0x145
0x143: JUMPI 0x145 V90
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x144
[0x144:0x144]
---
Predecessors: [0x13d]
Successors: []
---
0x144 INVALID
---
0x144: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x145
[0x145:0x14c]
---
Predecessors: [0x13d]
Successors: [0x543]
---
0x145 JUMPDEST
0x146 PUSH2 0xe9
0x149 PUSH2 0x543
0x14c JUMP
---
0x145: JUMPDEST 
0x146: V92 = 0xe9
0x149: V93 = 0x543
0x14c: JUMP 0x543
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe9]
Exit stack: [V10, 0xe9]

================================

Block 0x14d
[0x14d:0x168]
---
Predecessors: []
Successors: []
---
0x14d JUMPDEST
0x14e PUSH1 0x40
0x150 DUP1
0x151 MLOAD
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a SWAP1
0x15b SWAP3
0x15c AND
0x15d DUP3
0x15e MSTORE
0x15f MLOAD
0x160 SWAP1
0x161 DUP2
0x162 SWAP1
0x163 SUB
0x164 PUSH1 0x20
0x166 ADD
0x167 SWAP1
0x168 RETURN
---
0x14d: JUMPDEST 
0x14e: V94 = 0x40
0x151: V95 = M[0x40]
0x152: V96 = 0x1
0x154: V97 = 0xa0
0x156: V98 = 0x2
0x158: V99 = EXP 0x2 0xa0
0x159: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15c: V101 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x15e: M[V95] = V101
0x15f: V102 = M[0x40]
0x163: V103 = SUB V95 V102
0x164: V104 = 0x20
0x166: V105 = ADD 0x20 V103
0x168: RETURN V102 V105
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x169
[0x169:0x16f]
---
Predecessors: [0x75]
Successors: [0x170, 0x171]
---
0x169 JUMPDEST
0x16a CALLVALUE
0x16b ISZERO
0x16c PUSH2 0x171
0x16f JUMPI
---
0x169: JUMPDEST 
0x16a: V106 = CALLVALUE
0x16b: V107 = ISZERO V106
0x16c: V108 = 0x171
0x16f: JUMPI 0x171 V107
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x170
[0x170:0x170]
---
Predecessors: [0x169]
Successors: []
---
0x170 INVALID
---
0x170: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x171
[0x171:0x178]
---
Predecessors: [0x169]
Successors: [0x557]
---
0x171 JUMPDEST
0x172 PUSH2 0x179
0x175 PUSH2 0x557
0x178 JUMP
---
0x171: JUMPDEST 
0x172: V109 = 0x179
0x175: V110 = 0x557
0x178: JUMP 0x557
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x179]
Exit stack: [V10, 0x179]

================================

Block 0x179
[0x179:0x18a]
---
Predecessors: [0x557, 0x8d8, 0x8f9]
Successors: []
---
0x179 JUMPDEST
0x17a PUSH1 0x40
0x17c DUP1
0x17d MLOAD
0x17e SWAP2
0x17f DUP3
0x180 MSTORE
0x181 MLOAD
0x182 SWAP1
0x183 DUP2
0x184 SWAP1
0x185 SUB
0x186 PUSH1 0x20
0x188 ADD
0x189 SWAP1
0x18a RETURN
---
0x179: JUMPDEST 
0x17a: V111 = 0x40
0x17d: V112 = M[0x40]
0x180: M[V112] = S0
0x181: V113 = M[0x40]
0x185: V114 = SUB V112 V113
0x186: V115 = 0x20
0x188: V116 = ADD 0x20 V114
0x18a: RETURN V113 V116
---
Entry stack: [V10, 0x179, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x179]

================================

Block 0x18b
[0x18b:0x191]
---
Predecessors: [0x80]
Successors: [0x192, 0x193]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d ISZERO
0x18e PUSH2 0x193
0x191 JUMPI
---
0x18b: JUMPDEST 
0x18c: V117 = CALLVALUE
0x18d: V118 = ISZERO V117
0x18e: V119 = 0x193
0x191: JUMPI 0x193 V118
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x192
[0x192:0x192]
---
Predecessors: [0x18b]
Successors: []
---
0x192 INVALID
---
0x192: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x193
[0x193:0x19a]
---
Predecessors: [0x18b]
Successors: [0x55d]
---
0x193 JUMPDEST
0x194 PUSH2 0xc5
0x197 PUSH2 0x55d
0x19a JUMP
---
0x193: JUMPDEST 
0x194: V120 = 0xc5
0x197: V121 = 0x55d
0x19a: JUMP 0x55d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V10, 0xc5]

================================

Block 0x19b
[0x19b:0x19c]
---
Predecessors: []
Successors: []
---
0x19b JUMPDEST
0x19c STOP
---
0x19b: JUMPDEST 
0x19c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x19d
[0x19d:0x1a3]
---
Predecessors: [0x8b]
Successors: [0x1a4, 0x1a5]
---
0x19d JUMPDEST
0x19e CALLVALUE
0x19f ISZERO
0x1a0 PUSH2 0x1a5
0x1a3 JUMPI
---
0x19d: JUMPDEST 
0x19e: V122 = CALLVALUE
0x19f: V123 = ISZERO V122
0x1a0: V124 = 0x1a5
0x1a3: JUMPI 0x1a5 V123
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a4
[0x1a4:0x1a4]
---
Predecessors: [0x19d]
Successors: []
---
0x1a4 INVALID
---
0x1a4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a5
[0x1a5:0x1b8]
---
Predecessors: [0x19d]
Successors: [0x569]
---
0x1a5 JUMPDEST
0x1a6 PUSH2 0xc5
0x1a9 PUSH1 0x1
0x1ab PUSH1 0xa0
0x1ad PUSH1 0x2
0x1af EXP
0x1b0 SUB
0x1b1 PUSH1 0x4
0x1b3 CALLDATALOAD
0x1b4 AND
0x1b5 PUSH2 0x569
0x1b8 JUMP
---
0x1a5: JUMPDEST 
0x1a6: V125 = 0xc5
0x1a9: V126 = 0x1
0x1ab: V127 = 0xa0
0x1ad: V128 = 0x2
0x1af: V129 = EXP 0x2 0xa0
0x1b0: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V131 = 0x4
0x1b3: V132 = CALLDATALOAD 0x4
0x1b4: V133 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V134 = 0x569
0x1b8: JUMP 0x569
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc5, V133]
Exit stack: [V10, 0xc5, V133]

================================

Block 0x1b9
[0x1b9:0x1ba]
---
Predecessors: []
Successors: []
---
0x1b9 JUMPDEST
0x1ba STOP
---
0x1b9: JUMPDEST 
0x1ba: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1bb
[0x1bb:0x1c1]
---
Predecessors: [0x96]
Successors: [0x1c2, 0x1c3]
---
0x1bb JUMPDEST
0x1bc CALLVALUE
0x1bd ISZERO
0x1be PUSH2 0x1c3
0x1c1 JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V135 = CALLVALUE
0x1bd: V136 = ISZERO V135
0x1be: V137 = 0x1c3
0x1c1: JUMPI 0x1c3 V136
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c2
[0x1c2:0x1c2]
---
Predecessors: [0x1bb]
Successors: []
---
0x1c2 INVALID
---
0x1c2: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c3
[0x1c3:0x1d6]
---
Predecessors: [0x1bb]
Successors: [0x8d8]
---
0x1c3 JUMPDEST
0x1c4 PUSH2 0x179
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf PUSH1 0x4
0x1d1 CALLDATALOAD
0x1d2 AND
0x1d3 PUSH2 0x8d8
0x1d6 JUMP
---
0x1c3: JUMPDEST 
0x1c4: V138 = 0x179
0x1c7: V139 = 0x1
0x1c9: V140 = 0xa0
0x1cb: V141 = 0x2
0x1cd: V142 = EXP 0x2 0xa0
0x1ce: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cf: V144 = 0x4
0x1d1: V145 = CALLDATALOAD 0x4
0x1d2: V146 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V147 = 0x8d8
0x1d6: JUMP 0x8d8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x179, V146]
Exit stack: [V10, 0x179, V146]

================================

Block 0x1d7
[0x1d7:0x1e8]
---
Predecessors: []
Successors: []
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x40
0x1da DUP1
0x1db MLOAD
0x1dc SWAP2
0x1dd DUP3
0x1de MSTORE
0x1df MLOAD
0x1e0 SWAP1
0x1e1 DUP2
0x1e2 SWAP1
0x1e3 SUB
0x1e4 PUSH1 0x20
0x1e6 ADD
0x1e7 SWAP1
0x1e8 RETURN
---
0x1d7: JUMPDEST 
0x1d8: V148 = 0x40
0x1db: V149 = M[0x40]
0x1de: M[V149] = S0
0x1df: V150 = M[0x40]
0x1e3: V151 = SUB V149 V150
0x1e4: V152 = 0x20
0x1e6: V153 = ADD 0x20 V151
0x1e8: RETURN V150 V153
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e9
[0x1e9:0x1ef]
---
Predecessors: [0xa1]
Successors: [0x1f0, 0x1f1]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb ISZERO
0x1ec PUSH2 0x1f1
0x1ef JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V154 = CALLVALUE
0x1eb: V155 = ISZERO V154
0x1ec: V156 = 0x1f1
0x1ef: JUMPI 0x1f1 V155
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f0
[0x1f0:0x1f0]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f0 INVALID
---
0x1f0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f1
[0x1f1:0x1f8]
---
Predecessors: [0x1e9]
Successors: [0x8ea]
---
0x1f1 JUMPDEST
0x1f2 PUSH2 0xe9
0x1f5 PUSH2 0x8ea
0x1f8 JUMP
---
0x1f1: JUMPDEST 
0x1f2: V157 = 0xe9
0x1f5: V158 = 0x8ea
0x1f8: JUMP 0x8ea
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe9]
Exit stack: [V10, 0xe9]

================================

Block 0x1f9
[0x1f9:0x214]
---
Predecessors: []
Successors: []
---
0x1f9 JUMPDEST
0x1fa PUSH1 0x40
0x1fc DUP1
0x1fd MLOAD
0x1fe PUSH1 0x1
0x200 PUSH1 0xa0
0x202 PUSH1 0x2
0x204 EXP
0x205 SUB
0x206 SWAP1
0x207 SWAP3
0x208 AND
0x209 DUP3
0x20a MSTORE
0x20b MLOAD
0x20c SWAP1
0x20d DUP2
0x20e SWAP1
0x20f SUB
0x210 PUSH1 0x20
0x212 ADD
0x213 SWAP1
0x214 RETURN
---
0x1f9: JUMPDEST 
0x1fa: V159 = 0x40
0x1fd: V160 = M[0x40]
0x1fe: V161 = 0x1
0x200: V162 = 0xa0
0x202: V163 = 0x2
0x204: V164 = EXP 0x2 0xa0
0x205: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x208: V166 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x20a: M[V160] = V166
0x20b: V167 = M[0x40]
0x20f: V168 = SUB V160 V167
0x210: V169 = 0x20
0x212: V170 = ADD 0x20 V168
0x214: RETURN V167 V170
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x215
[0x215:0x21b]
---
Predecessors: [0xac]
Successors: [0x21c, 0x21d]
---
0x215 JUMPDEST
0x216 CALLVALUE
0x217 ISZERO
0x218 PUSH2 0x21d
0x21b JUMPI
---
0x215: JUMPDEST 
0x216: V171 = CALLVALUE
0x217: V172 = ISZERO V171
0x218: V173 = 0x21d
0x21b: JUMPI 0x21d V172
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21c
[0x21c:0x21c]
---
Predecessors: [0x215]
Successors: []
---
0x21c INVALID
---
0x21c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21d
[0x21d:0x230]
---
Predecessors: [0x215]
Successors: [0x8f9]
---
0x21d JUMPDEST
0x21e PUSH2 0x179
0x221 PUSH1 0x1
0x223 PUSH1 0xa0
0x225 PUSH1 0x2
0x227 EXP
0x228 SUB
0x229 PUSH1 0x4
0x22b CALLDATALOAD
0x22c AND
0x22d PUSH2 0x8f9
0x230 JUMP
---
0x21d: JUMPDEST 
0x21e: V174 = 0x179
0x221: V175 = 0x1
0x223: V176 = 0xa0
0x225: V177 = 0x2
0x227: V178 = EXP 0x2 0xa0
0x228: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x229: V180 = 0x4
0x22b: V181 = CALLDATALOAD 0x4
0x22c: V182 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V183 = 0x8f9
0x230: JUMP 0x8f9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x179, V182]
Exit stack: [V10, 0x179, V182]

================================

Block 0x231
[0x231:0x242]
---
Predecessors: []
Successors: []
---
0x231 JUMPDEST
0x232 PUSH1 0x40
0x234 DUP1
0x235 MLOAD
0x236 SWAP2
0x237 DUP3
0x238 MSTORE
0x239 MLOAD
0x23a SWAP1
0x23b DUP2
0x23c SWAP1
0x23d SUB
0x23e PUSH1 0x20
0x240 ADD
0x241 SWAP1
0x242 RETURN
---
0x231: JUMPDEST 
0x232: V184 = 0x40
0x235: V185 = M[0x40]
0x238: M[V185] = S0
0x239: V186 = M[0x40]
0x23d: V187 = SUB V185 V186
0x23e: V188 = 0x20
0x240: V189 = ADD 0x20 V187
0x242: RETURN V186 V189
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x243
[0x243:0x24f]
---
Predecessors: [0x105]
Successors: [0x250, 0x272]
---
0x243 JUMPDEST
0x244 PUSH1 0x3
0x246 SLOAD
0x247 PUSH1 0xff
0x249 AND
0x24a ISZERO
0x24b ISZERO
0x24c PUSH2 0x272
0x24f JUMPI
---
0x243: JUMPDEST 
0x244: V190 = 0x3
0x246: V191 = S[0x3]
0x247: V192 = 0xff
0x249: V193 = AND 0xff V191
0x24a: V194 = ISZERO V193
0x24b: V195 = ISZERO V194
0x24c: V196 = 0x272
0x24f: JUMPI 0x272 V195
---
Entry stack: [V10, 0xc5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc5]

================================

Block 0x250
[0x250:0x271]
---
Predecessors: [0x243]
Successors: [0xc1]
---
0x250 PUSH1 0x1
0x252 PUSH1 0xa0
0x254 PUSH1 0x2
0x256 EXP
0x257 SUB
0x258 CALLER
0x259 AND
0x25a PUSH1 0x0
0x25c SWAP1
0x25d DUP2
0x25e MSTORE
0x25f PUSH1 0x20
0x261 DUP2
0x262 SWAP1
0x263 MSTORE
0x264 PUSH1 0x40
0x266 SWAP1
0x267 SHA3
0x268 DUP1
0x269 SLOAD
0x26a CALLVALUE
0x26b ADD
0x26c SWAP1
0x26d SSTORE
0x26e PUSH2 0xc1
0x271 JUMP
---
0x250: V197 = 0x1
0x252: V198 = 0xa0
0x254: V199 = 0x2
0x256: V200 = EXP 0x2 0xa0
0x257: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x258: V202 = CALLER
0x259: V203 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V204 = 0x0
0x25e: M[0x0] = V203
0x25f: V205 = 0x20
0x263: M[0x20] = 0x0
0x264: V206 = 0x40
0x267: V207 = SHA3 0x0 0x40
0x269: V208 = S[V207]
0x26a: V209 = CALLVALUE
0x26b: V210 = ADD V209 V208
0x26d: S[V207] = V210
0x26e: V211 = 0xc1
0x271: JUMP 0xc1
---
Entry stack: [V10, 0xc5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc5]

================================

Block 0x272
[0x272:0x278]
---
Predecessors: [0x243]
Successors: [0x279, 0x27e]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 ISZERO
0x275 PUSH2 0x27e
0x278 JUMPI
---
0x272: JUMPDEST 
0x273: V212 = CALLVALUE
0x274: V213 = ISZERO V212
0x275: V214 = 0x27e
0x278: JUMPI 0x27e V213
---
Entry stack: [V10, 0xc5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc5]

================================

Block 0x279
[0x279:0x27d]
---
Predecessors: [0x272]
Successors: []
---
0x279 PUSH1 0x0
0x27b PUSH1 0x0
0x27d REVERT
---
0x279: V215 = 0x0
0x27b: V216 = 0x0
0x27d: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc5]

================================

Block 0x27e
[0x27e:0x285]
---
Predecessors: [0x272]
Successors: [0x28a]
---
0x27e JUMPDEST
0x27f PUSH2 0xc1
0x282 PUSH2 0x28a
0x285 JUMP
---
0x27e: JUMPDEST 
0x27f: V217 = 0xc1
0x282: V218 = 0x28a
0x285: JUMP 0x28a
---
Entry stack: [V10, 0xc5]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V10, 0xc5, 0xc1]

================================

Block 0x286
[0x286:0x286]
---
Predecessors: []
Successors: [0x287]
---
0x286 JUMPDEST
---
0x286: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x287
[0x287:0x287]
---
Predecessors: [0x286]
Successors: [0x288]
---
0x287 JUMPDEST
---
0x287: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x288
[0x288:0x289]
---
Predecessors: [0x287]
Successors: []
Has unresolved jump.
---
0x288 JUMPDEST
0x289 JUMP
---
0x288: JUMPDEST 
0x289: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28a
[0x28a:0x31a]
---
Predecessors: [0xcf, 0x27e]
Successors: [0x31b, 0x31c]
---
0x28a JUMPDEST
0x28b PUSH1 0x1
0x28d PUSH1 0xa0
0x28f PUSH1 0x2
0x291 EXP
0x292 SUB
0x293 CALLER
0x294 DUP2
0x295 AND
0x296 PUSH1 0x0
0x298 SWAP1
0x299 DUP2
0x29a MSTORE
0x29b PUSH1 0x20
0x29d DUP2
0x29e DUP2
0x29f MSTORE
0x2a0 PUSH1 0x40
0x2a2 DUP1
0x2a3 DUP4
0x2a4 SHA3
0x2a5 DUP1
0x2a6 SLOAD
0x2a7 SWAP1
0x2a8 DUP5
0x2a9 SWAP1
0x2aa SSTORE
0x2ab PUSH1 0x2
0x2ad SLOAD
0x2ae PUSH1 0x5
0x2b0 SLOAD
0x2b1 DUP4
0x2b2 MLOAD
0x2b3 DUP6
0x2b4 ADD
0x2b5 DUP7
0x2b6 SWAP1
0x2b7 MSTORE
0x2b8 DUP4
0x2b9 MLOAD
0x2ba PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2db DUP2
0x2dc MSTORE
0x2dd ADDRESS
0x2de DUP9
0x2df AND
0x2e0 PUSH1 0x4
0x2e2 DUP3
0x2e3 ADD
0x2e4 DUP2
0x2e5 SWAP1
0x2e6 MSTORE
0x2e7 SWAP5
0x2e8 MLOAD
0x2e9 SWAP4
0x2ea SWAP8
0x2eb SWAP5
0x2ec BALANCE
0x2ed SWAP3
0x2ee SWAP1
0x2ef SWAP3
0x2f0 SUB
0x2f1 SWAP6
0x2f2 SWAP5
0x2f3 DUP6
0x2f4 SWAP5
0x2f5 DUP6
0x2f6 SWAP5
0x2f7 DUP6
0x2f8 SWAP5
0x2f9 DUP6
0x2fa SWAP5
0x2fb SWAP1
0x2fc SWAP3
0x2fd AND
0x2fe SWAP3
0x2ff PUSH4 0x70a08231
0x304 SWAP3
0x305 PUSH1 0x24
0x307 DUP1
0x308 DUP3
0x309 ADD
0x30a SWAP4
0x30b SWAP2
0x30c DUP3
0x30d SWAP1
0x30e SUB
0x30f ADD
0x310 DUP2
0x311 DUP8
0x312 DUP8
0x313 DUP1
0x314 EXTCODESIZE
0x315 ISZERO
0x316 ISZERO
0x317 PUSH2 0x31c
0x31a JUMPI
---
0x28a: JUMPDEST 
0x28b: V219 = 0x1
0x28d: V220 = 0xa0
0x28f: V221 = 0x2
0x291: V222 = EXP 0x2 0xa0
0x292: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x293: V224 = CALLER
0x295: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x296: V226 = 0x0
0x29a: M[0x0] = V225
0x29b: V227 = 0x20
0x29f: M[0x20] = 0x0
0x2a0: V228 = 0x40
0x2a4: V229 = SHA3 0x0 0x40
0x2a6: V230 = S[V229]
0x2aa: S[V229] = 0x0
0x2ab: V231 = 0x2
0x2ad: V232 = S[0x2]
0x2ae: V233 = 0x5
0x2b0: V234 = S[0x5]
0x2b2: V235 = M[0x40]
0x2b4: V236 = ADD 0x20 V235
0x2b7: M[V236] = 0x0
0x2b9: V237 = M[0x40]
0x2ba: V238 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2dc: M[V237] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2dd: V239 = ADDRESS
0x2df: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x2e0: V241 = 0x4
0x2e3: V242 = ADD V237 0x4
0x2e6: M[V242] = V240
0x2e8: V243 = M[0x40]
0x2ec: V244 = BALANCE V240
0x2f0: V245 = SUB V244 V232
0x2fd: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x2ff: V247 = 0x70a08231
0x305: V248 = 0x24
0x309: V249 = ADD V237 0x24
0x30e: V250 = SUB V237 V243
0x30f: V251 = ADD V250 0x24
0x314: V252 = EXTCODESIZE V246
0x315: V253 = ISZERO V252
0x316: V254 = ISZERO V253
0x317: V255 = 0x31c
0x31a: JUMPI 0x31c V254
---
Entry stack: [V10, S1, {0xc1, 0xc5}]
Stack pops: 0
Stack additions: [V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249, 0x20, V243, V251, V243, 0x0, V246]
Exit stack: [V10, S1, {0xc1, 0xc5}, V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249, 0x20, V243, V251, V243, 0x0, V246]

================================

Block 0x31b
[0x31b:0x31b]
---
Predecessors: [0x28a]
Successors: []
---
0x31b INVALID
---
0x31b: INVALID 
---
Entry stack: [V10, S17, {0xc1, 0xc5}, V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249, 0x20, V243, V251, V243, 0x0, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc5}, V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249, 0x20, V243, V251, V243, 0x0, V246]

================================

Block 0x31c
[0x31c:0x328]
---
Predecessors: [0x28a]
Successors: [0x329, 0x32a]
---
0x31c JUMPDEST
0x31d PUSH2 0x2c6
0x320 GAS
0x321 SUB
0x322 CALL
0x323 ISZERO
0x324 ISZERO
0x325 PUSH2 0x32a
0x328 JUMPI
---
0x31c: JUMPDEST 
0x31d: V256 = 0x2c6
0x320: V257 = GAS
0x321: V258 = SUB V257 0x2c6
0x322: V259 = CALL V258 V246 0x0 V243 V251 V243 0x20
0x323: V260 = ISZERO V259
0x324: V261 = ISZERO V260
0x325: V262 = 0x32a
0x328: JUMPI 0x32a V261
---
Entry stack: [V10, S17, {0xc1, 0xc5}, V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249, 0x20, V243, V251, V243, 0x0, V246]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc5}, V230, V245, 0x0, 0x0, 0x0, 0x0, 0x0, V246, 0x70a08231, V249]

================================

Block 0x329
[0x329:0x329]
---
Predecessors: [0x31c]
Successors: []
---
0x329 INVALID
---
0x329: INVALID 
---
Entry stack: [V10, S11, {0xc1, 0xc5}, S9, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc5}, S9, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]

================================

Block 0x32a
[0x32a:0x34a]
---
Predecessors: [0x31c]
Successors: [0x34b, 0x34c]
---
0x32a JUMPDEST
0x32b POP
0x32c POP
0x32d PUSH1 0x40
0x32f MLOAD
0x330 MLOAD
0x331 SWAP6
0x332 POP
0x333 POP
0x334 PUSH2 0x2710
0x337 DUP1
0x338 DUP8
0x339 MUL
0x33a DUP7
0x33b ADD
0x33c SWAP5
0x33d POP
0x33e DUP5
0x33f SWAP1
0x340 DUP9
0x341 DUP9
0x342 MUL
0x343 MUL
0x344 DUP2
0x345 ISZERO
0x346 ISZERO
0x347 PUSH2 0x34c
0x34a JUMPI
---
0x32a: JUMPDEST 
0x32d: V263 = 0x40
0x32f: V264 = M[0x40]
0x330: V265 = M[V264]
0x334: V266 = 0x2710
0x339: V267 = MUL S8 0x2710
0x33b: V268 = ADD V265 V267
0x342: V269 = MUL S8 S9
0x343: V270 = MUL V269 0x2710
0x345: V271 = ISZERO V268
0x346: V272 = ISZERO V271
0x347: V273 = 0x34c
0x34a: JUMPI 0x34c V272
---
Entry stack: [V10, S11, {0xc1, 0xc5}, S9, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]
Stack pops: 10
Stack additions: [S9, S8, V265, V268, S5, S4, S3, V268, V270]
Exit stack: [V10, S11, {0xc1, 0xc5}, S9, S8, V265, V268, 0x0, 0x0, 0x0, V268, V270]

================================

Block 0x34b
[0x34b:0x34b]
---
Predecessors: [0x32a]
Successors: []
---
0x34b INVALID
---
0x34b: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, S7, V265, V268, 0x0, 0x0, 0x0, V268, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, S7, V265, V268, 0x0, 0x0, 0x0, V268, V270]

================================

Block 0x34c
[0x34c:0x35a]
---
Predecessors: [0x32a]
Successors: [0x35b, 0x35c]
---
0x34c JUMPDEST
0x34d DIV
0x34e SWAP3
0x34f POP
0x350 DUP4
0x351 DUP6
0x352 DUP9
0x353 MUL
0x354 DUP2
0x355 ISZERO
0x356 ISZERO
0x357 PUSH2 0x35c
0x35a JUMPI
---
0x34c: JUMPDEST 
0x34d: V274 = DIV V270 V268
0x353: V275 = MUL S8 V265
0x355: V276 = ISZERO V268
0x356: V277 = ISZERO V276
0x357: V278 = 0x35c
0x35a: JUMPI 0x35c V277
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, S7, V265, V268, 0x0, 0x0, 0x0, V268, V270]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V274, S3, S2, S5, V275]
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, S7, V265, V268, V274, 0x0, 0x0, V268, V275]

================================

Block 0x35b
[0x35b:0x35b]
---
Predecessors: [0x34c]
Successors: []
---
0x35b INVALID
---
0x35b: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, S7, S6, S5, V274, 0x0, 0x0, S1, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, S7, S6, S5, V274, 0x0, 0x0, S1, V275]

================================

Block 0x35c
[0x35c:0x394]
---
Predecessors: [0x34c]
Successors: [0x395, 0x3b7]
---
0x35c JUMPDEST
0x35d DIV
0x35e PUSH2 0x2710
0x361 MUL
0x362 SWAP2
0x363 POP
0x364 PUSH1 0x0
0x366 SWAP1
0x367 POP
0x368 DUP2
0x369 PUSH1 0x1
0x36b PUSH1 0x0
0x36d CALLER
0x36e PUSH1 0x1
0x370 PUSH1 0xa0
0x372 PUSH1 0x2
0x374 EXP
0x375 SUB
0x376 AND
0x377 PUSH1 0x1
0x379 PUSH1 0xa0
0x37b PUSH1 0x2
0x37d EXP
0x37e SUB
0x37f AND
0x380 DUP2
0x381 MSTORE
0x382 PUSH1 0x20
0x384 ADD
0x385 SWAP1
0x386 DUP2
0x387 MSTORE
0x388 PUSH1 0x20
0x38a ADD
0x38b PUSH1 0x0
0x38d SHA3
0x38e SLOAD
0x38f LT
0x390 ISZERO
0x391 PUSH2 0x3b7
0x394 JUMPI
---
0x35c: JUMPDEST 
0x35d: V279 = DIV V275 S1
0x35e: V280 = 0x2710
0x361: V281 = MUL 0x2710 V279
0x364: V282 = 0x0
0x369: V283 = 0x1
0x36b: V284 = 0x0
0x36d: V285 = CALLER
0x36e: V286 = 0x1
0x370: V287 = 0xa0
0x372: V288 = 0x2
0x374: V289 = EXP 0x2 0xa0
0x375: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x376: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x377: V292 = 0x1
0x379: V293 = 0xa0
0x37b: V294 = 0x2
0x37d: V295 = EXP 0x2 0xa0
0x37e: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37f: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x381: M[0x0] = V297
0x382: V298 = 0x20
0x384: V299 = ADD 0x20 0x0
0x387: M[0x20] = 0x1
0x388: V300 = 0x20
0x38a: V301 = ADD 0x20 0x20
0x38b: V302 = 0x0
0x38d: V303 = SHA3 0x0 0x40
0x38e: V304 = S[V303]
0x38f: V305 = LT V304 V281
0x390: V306 = ISZERO V305
0x391: V307 = 0x3b7
0x394: JUMPI 0x3b7 V306
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, S7, S6, S5, V274, 0x0, 0x0, S1, V275]
Stack pops: 4
Stack additions: [V281, 0x0]
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, S7, S6, S5, V274, V281, 0x0]

================================

Block 0x395
[0x395:0x3b2]
---
Predecessors: [0x35c]
Successors: [0x3b3]
---
0x395 PUSH1 0x1
0x397 PUSH1 0xa0
0x399 PUSH1 0x2
0x39b EXP
0x39c SUB
0x39d CALLER
0x39e AND
0x39f PUSH1 0x0
0x3a1 SWAP1
0x3a2 DUP2
0x3a3 MSTORE
0x3a4 PUSH1 0x1
0x3a6 PUSH1 0x20
0x3a8 MSTORE
0x3a9 PUSH1 0x40
0x3ab SWAP1
0x3ac SHA3
0x3ad SLOAD
0x3ae PUSH1 0x64
0x3b0 SWAP1
0x3b1 DUP4
0x3b2 SUB
---
0x395: V308 = 0x1
0x397: V309 = 0xa0
0x399: V310 = 0x2
0x39b: V311 = EXP 0x2 0xa0
0x39c: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39d: V313 = CALLER
0x39e: V314 = AND V313 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V315 = 0x0
0x3a3: M[0x0] = V314
0x3a4: V316 = 0x1
0x3a6: V317 = 0x20
0x3a8: M[0x20] = 0x1
0x3a9: V318 = 0x40
0x3ac: V319 = SHA3 0x0 0x40
0x3ad: V320 = S[V319]
0x3ae: V321 = 0x64
0x3b2: V322 = SUB V281 V320
---
Entry stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, V281, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, V322]
Exit stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, V281, 0x0, 0x64, V322]

================================

Block 0x3b3
[0x3b3:0x3b6]
---
Predecessors: [0x395]
Successors: [0x3b7]
---
0x3b3 JUMPDEST
0x3b4 DIV
0x3b5 SWAP1
0x3b6 POP
---
0x3b3: JUMPDEST 
0x3b4: V323 = DIV V322 0x64
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, S7, S6, S5, S4, S3, 0x0, 0x64, V322]
Stack pops: 3
Stack additions: [V323]
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, S7, S6, S5, S4, S3, V323]

================================

Block 0x3b7
[0x3b7:0x42b]
---
Predecessors: [0x35c, 0x3b3]
Successors: [0x42c, 0x42d]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x5
0x3ba SLOAD
0x3bb PUSH1 0x40
0x3bd DUP1
0x3be MLOAD
0x3bf PUSH1 0x0
0x3c1 PUSH1 0x20
0x3c3 SWAP2
0x3c4 DUP3
0x3c5 ADD
0x3c6 DUP2
0x3c7 SWAP1
0x3c8 MSTORE
0x3c9 DUP3
0x3ca MLOAD
0x3cb PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3ec DUP2
0x3ed MSTORE
0x3ee PUSH1 0x1
0x3f0 PUSH1 0xa0
0x3f2 PUSH1 0x2
0x3f4 EXP
0x3f5 SUB
0x3f6 CALLER
0x3f7 DUP2
0x3f8 AND
0x3f9 PUSH1 0x4
0x3fb DUP4
0x3fc ADD
0x3fd MSTORE
0x3fe DUP7
0x3ff DUP9
0x400 SUB
0x401 PUSH1 0x24
0x403 DUP4
0x404 ADD
0x405 MSTORE
0x406 SWAP4
0x407 MLOAD
0x408 SWAP4
0x409 SWAP1
0x40a SWAP5
0x40b AND
0x40c SWAP4
0x40d PUSH4 0xa9059cbb
0x412 SWAP4
0x413 PUSH1 0x44
0x415 DUP1
0x416 DUP4
0x417 ADD
0x418 SWAP5
0x419 SWAP4
0x41a SWAP2
0x41b SWAP3
0x41c DUP4
0x41d SWAP1
0x41e SUB
0x41f ADD
0x420 SWAP1
0x421 DUP3
0x422 SWAP1
0x423 DUP8
0x424 DUP1
0x425 EXTCODESIZE
0x426 ISZERO
0x427 ISZERO
0x428 PUSH2 0x42d
0x42b JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V324 = 0x5
0x3ba: V325 = S[0x5]
0x3bb: V326 = 0x40
0x3be: V327 = M[0x40]
0x3bf: V328 = 0x0
0x3c1: V329 = 0x20
0x3c5: V330 = ADD 0x20 V327
0x3c8: M[V330] = 0x0
0x3ca: V331 = M[0x40]
0x3cb: V332 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3ed: M[V331] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3ee: V333 = 0x1
0x3f0: V334 = 0xa0
0x3f2: V335 = 0x2
0x3f4: V336 = EXP 0x2 0xa0
0x3f5: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f6: V338 = CALLER
0x3f8: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x3f9: V340 = 0x4
0x3fc: V341 = ADD V331 0x4
0x3fd: M[V341] = V339
0x400: V342 = SUB S1 S0
0x401: V343 = 0x24
0x404: V344 = ADD V331 0x24
0x405: M[V344] = V342
0x407: V345 = M[0x40]
0x40b: V346 = AND V325 0xffffffffffffffffffffffffffffffffffffffff
0x40d: V347 = 0xa9059cbb
0x413: V348 = 0x44
0x417: V349 = ADD V331 0x44
0x41e: V350 = SUB V331 V345
0x41f: V351 = ADD V350 0x44
0x425: V352 = EXTCODESIZE V346
0x426: V353 = ISZERO V352
0x427: V354 = ISZERO V353
0x428: V355 = 0x42d
0x42b: JUMPI 0x42d V354
---
Entry stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]
Exit stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]

================================

Block 0x42c
[0x42c:0x42c]
---
Predecessors: [0x3b7]
Successors: []
---
0x42c INVALID
---
0x42c: INVALID 
---
Entry stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, S12, S11, S10, S9, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, S12, S11, S10, S9, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]

================================

Block 0x42d
[0x42d:0x439]
---
Predecessors: [0x3b7]
Successors: [0x43a, 0x43b]
---
0x42d JUMPDEST
0x42e PUSH2 0x2c6
0x431 GAS
0x432 SUB
0x433 CALL
0x434 ISZERO
0x435 ISZERO
0x436 PUSH2 0x43b
0x439 JUMPI
---
0x42d: JUMPDEST 
0x42e: V356 = 0x2c6
0x431: V357 = GAS
0x432: V358 = SUB V357 0x2c6
0x433: V359 = CALL V358 V346 0x0 V345 V351 V345 0x20
0x434: V360 = ISZERO V359
0x435: V361 = ISZERO V360
0x436: V362 = 0x43b
0x439: JUMPI 0x43b V361
---
Entry stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, S12, S11, S10, S9, V346, 0xa9059cbb, V349, 0x20, V345, V351, V345, 0x0, V346]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, S12, S11, S10, S9, V346, 0xa9059cbb, V349]

================================

Block 0x43a
[0x43a:0x43a]
---
Predecessors: [0x42d]
Successors: []
---
0x43a INVALID
---
0x43a: INVALID 
---
Entry stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x43b
[0x43b:0x449]
---
Predecessors: [0x42d]
Successors: [0x44a, 0x44f]
---
0x43b JUMPDEST
0x43c POP
0x43d POP
0x43e PUSH1 0x40
0x440 MLOAD
0x441 MLOAD
0x442 ISZERO
0x443 ISZERO
0x444 SWAP1
0x445 POP
0x446 PUSH2 0x44f
0x449 JUMPI
---
0x43b: JUMPDEST 
0x43e: V363 = 0x40
0x440: V364 = M[0x40]
0x441: V365 = M[V364]
0x442: V366 = ISZERO V365
0x443: V367 = ISZERO V366
0x446: V368 = 0x44f
0x449: JUMPI 0x44f V367
---
Entry stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x44a
[0x44a:0x44e]
---
Predecessors: [0x43b]
Successors: []
---
0x44a PUSH1 0x0
0x44c PUSH1 0x0
0x44e REVERT
---
0x44a: V369 = 0x0
0x44c: V370 = 0x0
0x44e: REVERT 0x0 0x0
---
Entry stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x44f
[0x44f:0x4c5]
---
Predecessors: [0x43b]
Successors: [0x4c6, 0x4c7]
---
0x44f JUMPDEST
0x450 PUSH1 0x5
0x452 SLOAD
0x453 PUSH1 0x6
0x455 SLOAD
0x456 PUSH1 0x40
0x458 DUP1
0x459 MLOAD
0x45a PUSH1 0x0
0x45c PUSH1 0x20
0x45e SWAP2
0x45f DUP3
0x460 ADD
0x461 DUP2
0x462 SWAP1
0x463 MSTORE
0x464 DUP3
0x465 MLOAD
0x466 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x487 DUP2
0x488 MSTORE
0x489 PUSH1 0x1
0x48b PUSH1 0xa0
0x48d PUSH1 0x2
0x48f EXP
0x490 SUB
0x491 SWAP5
0x492 DUP6
0x493 AND
0x494 PUSH1 0x4
0x496 DUP3
0x497 ADD
0x498 MSTORE
0x499 PUSH1 0x24
0x49b DUP2
0x49c ADD
0x49d DUP8
0x49e SWAP1
0x49f MSTORE
0x4a0 SWAP3
0x4a1 MLOAD
0x4a2 SWAP4
0x4a3 SWAP1
0x4a4 SWAP5
0x4a5 AND
0x4a6 SWAP4
0x4a7 PUSH4 0xa9059cbb
0x4ac SWAP4
0x4ad PUSH1 0x44
0x4af DUP1
0x4b0 DUP6
0x4b1 ADD
0x4b2 SWAP5
0x4b3 SWAP2
0x4b4 SWAP3
0x4b5 SWAP2
0x4b6 DUP4
0x4b7 SWAP1
0x4b8 SUB
0x4b9 ADD
0x4ba SWAP1
0x4bb DUP3
0x4bc SWAP1
0x4bd DUP8
0x4be DUP1
0x4bf EXTCODESIZE
0x4c0 ISZERO
0x4c1 ISZERO
0x4c2 PUSH2 0x4c7
0x4c5 JUMPI
---
0x44f: JUMPDEST 
0x450: V371 = 0x5
0x452: V372 = S[0x5]
0x453: V373 = 0x6
0x455: V374 = S[0x6]
0x456: V375 = 0x40
0x459: V376 = M[0x40]
0x45a: V377 = 0x0
0x45c: V378 = 0x20
0x460: V379 = ADD 0x20 V376
0x463: M[V379] = 0x0
0x465: V380 = M[0x40]
0x466: V381 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x488: M[V380] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x489: V382 = 0x1
0x48b: V383 = 0xa0
0x48d: V384 = 0x2
0x48f: V385 = EXP 0x2 0xa0
0x490: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x493: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x494: V388 = 0x4
0x497: V389 = ADD V380 0x4
0x498: M[V389] = V387
0x499: V390 = 0x24
0x49c: V391 = ADD V380 0x24
0x49f: M[V391] = S0
0x4a1: V392 = M[0x40]
0x4a5: V393 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x4a7: V394 = 0xa9059cbb
0x4ad: V395 = 0x44
0x4b1: V396 = ADD V380 0x44
0x4b8: V397 = SUB V380 V392
0x4b9: V398 = ADD V397 0x44
0x4bf: V399 = EXTCODESIZE V393
0x4c0: V400 = ISZERO V399
0x4c1: V401 = ISZERO V400
0x4c2: V402 = 0x4c7
0x4c5: JUMPI 0x4c7 V401
---
Entry stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]
Exit stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]

================================

Block 0x4c6
[0x4c6:0x4c6]
---
Predecessors: [0x44f]
Successors: []
---
0x4c6 INVALID
---
0x4c6: INVALID 
---
Entry stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, S12, S11, S10, S9, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, S12, S11, S10, S9, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]

================================

Block 0x4c7
[0x4c7:0x4d3]
---
Predecessors: [0x44f]
Successors: [0x4d4, 0x4d5]
---
0x4c7 JUMPDEST
0x4c8 PUSH2 0x2c6
0x4cb GAS
0x4cc SUB
0x4cd CALL
0x4ce ISZERO
0x4cf ISZERO
0x4d0 PUSH2 0x4d5
0x4d3 JUMPI
---
0x4c7: JUMPDEST 
0x4c8: V403 = 0x2c6
0x4cb: V404 = GAS
0x4cc: V405 = SUB V404 0x2c6
0x4cd: V406 = CALL V405 V393 0x0 V392 V398 V392 0x20
0x4ce: V407 = ISZERO V406
0x4cf: V408 = ISZERO V407
0x4d0: V409 = 0x4d5
0x4d3: JUMPI 0x4d5 V408
---
Entry stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, S12, S11, S10, S9, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, S12, S11, S10, S9, V393, 0xa9059cbb, V396]

================================

Block 0x4d4
[0x4d4:0x4d4]
---
Predecessors: [0x4c7]
Successors: []
---
0x4d4 INVALID
---
0x4d4: INVALID 
---
Entry stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x4d5
[0x4d5:0x4e3]
---
Predecessors: [0x4c7]
Successors: [0x4e4, 0x4e9]
---
0x4d5 JUMPDEST
0x4d6 POP
0x4d7 POP
0x4d8 PUSH1 0x40
0x4da MLOAD
0x4db MLOAD
0x4dc ISZERO
0x4dd ISZERO
0x4de SWAP1
0x4df POP
0x4e0 PUSH2 0x4e9
0x4e3 JUMPI
---
0x4d5: JUMPDEST 
0x4d8: V410 = 0x40
0x4da: V411 = M[0x40]
0x4db: V412 = M[V411]
0x4dc: V413 = ISZERO V412
0x4dd: V414 = ISZERO V413
0x4e0: V415 = 0x4e9
0x4e3: JUMPI 0x4e9 V414
---
Entry stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x4e4
[0x4e4:0x4e8]
---
Predecessors: [0x4d5]
Successors: []
---
0x4e4 PUSH1 0x0
0x4e6 PUSH1 0x0
0x4e8 REVERT
---
0x4e4: V416 = 0x0
0x4e6: V417 = 0x0
0x4e8: REVERT 0x0 0x0
---
Entry stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4e9
[0x4e9:0x514]
---
Predecessors: [0x4d5]
Successors: [0x515, 0x516]
---
0x4e9 JUMPDEST
0x4ea PUSH1 0x40
0x4ec MLOAD
0x4ed PUSH1 0x1
0x4ef PUSH1 0xa0
0x4f1 PUSH1 0x2
0x4f3 EXP
0x4f4 SUB
0x4f5 CALLER
0x4f6 AND
0x4f7 SWAP1
0x4f8 DUP5
0x4f9 ISZERO
0x4fa PUSH2 0x8fc
0x4fd MUL
0x4fe SWAP1
0x4ff DUP6
0x500 SWAP1
0x501 PUSH1 0x0
0x503 DUP2
0x504 DUP2
0x505 DUP2
0x506 DUP6
0x507 DUP9
0x508 DUP9
0x509 CALL
0x50a SWAP4
0x50b POP
0x50c POP
0x50d POP
0x50e POP
0x50f ISZERO
0x510 ISZERO
0x511 PUSH2 0x516
0x514 JUMPI
---
0x4e9: JUMPDEST 
0x4ea: V418 = 0x40
0x4ec: V419 = M[0x40]
0x4ed: V420 = 0x1
0x4ef: V421 = 0xa0
0x4f1: V422 = 0x2
0x4f3: V423 = EXP 0x2 0xa0
0x4f4: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f5: V425 = CALLER
0x4f6: V426 = AND V425 0xffffffffffffffffffffffffffffffffffffffff
0x4f9: V427 = ISZERO S2
0x4fa: V428 = 0x8fc
0x4fd: V429 = MUL 0x8fc V427
0x501: V430 = 0x0
0x509: V431 = CALL V429 V426 S2 V419 0x0 V419 0x0
0x50f: V432 = ISZERO V431
0x510: V433 = ISZERO V432
0x511: V434 = 0x516
0x514: JUMPI 0x516 V433
---
Entry stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x515
[0x515:0x515]
---
Predecessors: [0x4e9]
Successors: []
---
0x515 INVALID
---
0x515: INVALID 
---
Entry stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x516
[0x516:0x516]
---
Predecessors: [0x4e9]
Successors: [0x517]
---
0x516 JUMPDEST
---
0x516: JUMPDEST 
---
Entry stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x517
[0x517:0x51f]
---
Predecessors: [0x516]
Successors: [0xc1, 0xc5]
---
0x517 JUMPDEST
0x518 POP
0x519 POP
0x51a POP
0x51b POP
0x51c POP
0x51d POP
0x51e POP
0x51f JUMP
---
0x517: JUMPDEST 
0x51f: JUMP {0xc1, 0xc5}
---
Entry stack: [V10, S8, {0xc1, 0xc5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V10, S8]

================================

Block 0x520
[0x520:0x52e]
---
Predecessors: [0xe1]
Successors: [0xe9]
---
0x520 JUMPDEST
0x521 PUSH1 0x4
0x523 SLOAD
0x524 PUSH1 0x1
0x526 PUSH1 0xa0
0x528 PUSH1 0x2
0x52a EXP
0x52b SUB
0x52c AND
0x52d DUP2
0x52e JUMP
---
0x520: JUMPDEST 
0x521: V435 = 0x4
0x523: V436 = S[0x4]
0x524: V437 = 0x1
0x526: V438 = 0xa0
0x528: V439 = 0x2
0x52a: V440 = EXP 0x2 0xa0
0x52b: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52c: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x52e: JUMP 0xe9
---
Entry stack: [V10, 0xe9]
Stack pops: 1
Stack additions: [S0, V442]
Exit stack: [V10, 0xe9, V442]

================================

Block 0x52f
[0x52f:0x537]
---
Predecessors: [0x117]
Successors: [0x11f]
---
0x52f JUMPDEST
0x530 PUSH1 0x3
0x532 SLOAD
0x533 PUSH1 0xff
0x535 AND
0x536 DUP2
0x537 JUMP
---
0x52f: JUMPDEST 
0x530: V443 = 0x3
0x532: V444 = S[0x3]
0x533: V445 = 0xff
0x535: V446 = AND 0xff V444
0x537: JUMP 0x11f
---
Entry stack: [V10, 0x11f]
Stack pops: 1
Stack additions: [S0, V446]
Exit stack: [V10, 0x11f, V446]

================================

Block 0x538
[0x538:0x540]
---
Predecessors: [0x133]
Successors: [0x541]
---
0x538 JUMPDEST
0x539 PUSH1 0x2
0x53b DUP1
0x53c SLOAD
0x53d CALLVALUE
0x53e ADD
0x53f SWAP1
0x540 SSTORE
---
0x538: JUMPDEST 
0x539: V447 = 0x2
0x53c: V448 = S[0x2]
0x53d: V449 = CALLVALUE
0x53e: V450 = ADD V449 V448
0x540: S[0x2] = V450
---
Entry stack: [V10, 0xc5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc5]

================================

Block 0x541
[0x541:0x542]
---
Predecessors: [0x538]
Successors: [0xc5]
---
0x541 JUMPDEST
0x542 JUMP
---
0x541: JUMPDEST 
0x542: JUMP 0xc5
---
Entry stack: [V10, 0xc5]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x543
[0x543:0x556]
---
Predecessors: [0x145]
Successors: [0xe9]
---
0x543 JUMPDEST
0x544 PUSH1 0x3
0x546 SLOAD
0x547 PUSH2 0x100
0x54a SWAP1
0x54b DIV
0x54c PUSH1 0x1
0x54e PUSH1 0xa0
0x550 PUSH1 0x2
0x552 EXP
0x553 SUB
0x554 AND
0x555 DUP2
0x556 JUMP
---
0x543: JUMPDEST 
0x544: V451 = 0x3
0x546: V452 = S[0x3]
0x547: V453 = 0x100
0x54b: V454 = DIV V452 0x100
0x54c: V455 = 0x1
0x54e: V456 = 0xa0
0x550: V457 = 0x2
0x552: V458 = EXP 0x2 0xa0
0x553: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x554: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x556: JUMP 0xe9
---
Entry stack: [V10, 0xe9]
Stack pops: 1
Stack additions: [S0, V460]
Exit stack: [V10, 0xe9, V460]

================================

Block 0x557
[0x557:0x55c]
---
Predecessors: [0x171]
Successors: [0x179]
---
0x557 JUMPDEST
0x558 PUSH1 0x2
0x55a SLOAD
0x55b DUP2
0x55c JUMP
---
0x557: JUMPDEST 
0x558: V461 = 0x2
0x55a: V462 = S[0x2]
0x55c: JUMP 0x179
---
Entry stack: [V10, 0x179]
Stack pops: 1
Stack additions: [S0, V462]
Exit stack: [V10, 0x179, V462]

================================

Block 0x55d
[0x55d:0x565]
---
Predecessors: [0x193]
Successors: [0x569]
---
0x55d JUMPDEST
0x55e PUSH2 0xc1
0x561 CALLER
0x562 PUSH2 0x569
0x565 JUMP
---
0x55d: JUMPDEST 
0x55e: V463 = 0xc1
0x561: V464 = CALLER
0x562: V465 = 0x569
0x565: JUMP 0x569
---
Entry stack: [V10, 0xc5]
Stack pops: 0
Stack additions: [0xc1, V464]
Exit stack: [V10, 0xc5, 0xc1, V464]

================================

Block 0x566
[0x566:0x566]
---
Predecessors: []
Successors: [0x567]
---
0x566 JUMPDEST
---
0x566: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x567
[0x567:0x568]
---
Predecessors: [0x566]
Successors: []
Has unresolved jump.
---
0x567 JUMPDEST
0x568 JUMP
---
0x567: JUMPDEST 
0x568: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x569
[0x569:0x580]
---
Predecessors: [0x1a5, 0x55d]
Successors: [0x581, 0x585]
---
0x569 JUMPDEST
0x56a PUSH1 0x0
0x56c DUP1
0x56d DUP1
0x56e DUP1
0x56f DUP1
0x570 PUSH1 0x1
0x572 PUSH1 0xa0
0x574 PUSH1 0x2
0x576 EXP
0x577 SUB
0x578 ADDRESS
0x579 AND
0x57a BALANCE
0x57b ISZERO
0x57c ISZERO
0x57d PUSH2 0x585
0x580 JUMPI
---
0x569: JUMPDEST 
0x56a: V466 = 0x0
0x570: V467 = 0x1
0x572: V468 = 0xa0
0x574: V469 = 0x2
0x576: V470 = EXP 0x2 0xa0
0x577: V471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x578: V472 = ADDRESS
0x579: V473 = AND V472 0xffffffffffffffffffffffffffffffffffffffff
0x57a: V474 = BALANCE V473
0x57b: V475 = ISZERO V474
0x57c: V476 = ISZERO V475
0x57d: V477 = 0x585
0x580: JUMPI 0x585 V476
---
Entry stack: [V10, S2, {0xc1, 0xc5}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, S2, {0xc1, 0xc5}, S0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x581
[0x581:0x584]
---
Predecessors: [0x569]
Successors: [0x8cf]
---
0x581 PUSH2 0x8cf
0x584 JUMP
---
0x581: V478 = 0x8cf
0x584: JUMP 0x8cf
---
Entry stack: [V10, S7, {0xc1, 0xc5}, S5, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc5}, S5, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x585
[0x585:0x5f7]
---
Predecessors: [0x569]
Successors: [0x5f8, 0x5f9]
---
0x585 JUMPDEST
0x586 PUSH1 0x4
0x588 PUSH1 0x0
0x58a SWAP1
0x58b SLOAD
0x58c SWAP1
0x58d PUSH2 0x100
0x590 EXP
0x591 SWAP1
0x592 DIV
0x593 PUSH1 0x1
0x595 PUSH1 0xa0
0x597 PUSH1 0x2
0x599 EXP
0x59a SUB
0x59b AND
0x59c PUSH1 0x1
0x59e PUSH1 0xa0
0x5a0 PUSH1 0x2
0x5a2 EXP
0x5a3 SUB
0x5a4 AND
0x5a5 PUSH4 0x26987b60
0x5aa PUSH1 0x0
0x5ac PUSH1 0x40
0x5ae MLOAD
0x5af PUSH1 0x20
0x5b1 ADD
0x5b2 MSTORE
0x5b3 PUSH1 0x40
0x5b5 MLOAD
0x5b6 DUP2
0x5b7 PUSH4 0xffffffff
0x5bc AND
0x5bd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5db MUL
0x5dc DUP2
0x5dd MSTORE
0x5de PUSH1 0x4
0x5e0 ADD
0x5e1 DUP1
0x5e2 SWAP1
0x5e3 POP
0x5e4 PUSH1 0x20
0x5e6 PUSH1 0x40
0x5e8 MLOAD
0x5e9 DUP1
0x5ea DUP4
0x5eb SUB
0x5ec DUP2
0x5ed PUSH1 0x0
0x5ef DUP8
0x5f0 DUP1
0x5f1 EXTCODESIZE
0x5f2 ISZERO
0x5f3 ISZERO
0x5f4 PUSH2 0x5f9
0x5f7 JUMPI
---
0x585: JUMPDEST 
0x586: V479 = 0x4
0x588: V480 = 0x0
0x58b: V481 = S[0x4]
0x58d: V482 = 0x100
0x590: V483 = EXP 0x100 0x0
0x592: V484 = DIV V481 0x1
0x593: V485 = 0x1
0x595: V486 = 0xa0
0x597: V487 = 0x2
0x599: V488 = EXP 0x2 0xa0
0x59a: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x59c: V491 = 0x1
0x59e: V492 = 0xa0
0x5a0: V493 = 0x2
0x5a2: V494 = EXP 0x2 0xa0
0x5a3: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a4: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x5a5: V497 = 0x26987b60
0x5aa: V498 = 0x0
0x5ac: V499 = 0x40
0x5ae: V500 = M[0x40]
0x5af: V501 = 0x20
0x5b1: V502 = ADD 0x20 V500
0x5b2: M[V502] = 0x0
0x5b3: V503 = 0x40
0x5b5: V504 = M[0x40]
0x5b7: V505 = 0xffffffff
0x5bc: V506 = AND 0xffffffff 0x26987b60
0x5bd: V507 = 0x100000000000000000000000000000000000000000000000000000000
0x5db: V508 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x26987b60
0x5dd: M[V504] = 0x26987b6000000000000000000000000000000000000000000000000000000000
0x5de: V509 = 0x4
0x5e0: V510 = ADD 0x4 V504
0x5e4: V511 = 0x20
0x5e6: V512 = 0x40
0x5e8: V513 = M[0x40]
0x5eb: V514 = SUB V510 V513
0x5ed: V515 = 0x0
0x5f1: V516 = EXTCODESIZE V496
0x5f2: V517 = ISZERO V516
0x5f3: V518 = ISZERO V517
0x5f4: V519 = 0x5f9
0x5f7: JUMPI 0x5f9 V518
---
Entry stack: [V10, S7, {0xc1, 0xc5}, S5, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V496, 0x26987b60, V510, 0x20, V513, V514, V513, 0x0, V496]
Exit stack: [V10, S7, {0xc1, 0xc5}, S5, 0x0, 0x0, 0x0, 0x0, 0x0, V496, 0x26987b60, V510, 0x20, V513, V514, V513, 0x0, V496]

================================

Block 0x5f8
[0x5f8:0x5f8]
---
Predecessors: [0x585]
Successors: []
---
0x5f8 INVALID
---
0x5f8: INVALID 
---
Entry stack: [V10, S16, {0xc1, 0xc5}, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V496, 0x26987b60, V510, 0x20, V513, V514, V513, 0x0, V496]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc5}, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V496, 0x26987b60, V510, 0x20, V513, V514, V513, 0x0, V496]

================================

Block 0x5f9
[0x5f9:0x605]
---
Predecessors: [0x585]
Successors: [0x606, 0x607]
---
0x5f9 JUMPDEST
0x5fa PUSH2 0x2c6
0x5fd GAS
0x5fe SUB
0x5ff CALL
0x600 ISZERO
0x601 ISZERO
0x602 PUSH2 0x607
0x605 JUMPI
---
0x5f9: JUMPDEST 
0x5fa: V520 = 0x2c6
0x5fd: V521 = GAS
0x5fe: V522 = SUB V521 0x2c6
0x5ff: V523 = CALL V522 V496 0x0 V513 V514 V513 0x20
0x600: V524 = ISZERO V523
0x601: V525 = ISZERO V524
0x602: V526 = 0x607
0x605: JUMPI 0x607 V525
---
Entry stack: [V10, S16, {0xc1, 0xc5}, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V496, 0x26987b60, V510, 0x20, V513, V514, V513, 0x0, V496]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc5}, S14, 0x0, 0x0, 0x0, 0x0, 0x0, V496, 0x26987b60, V510]

================================

Block 0x606
[0x606:0x606]
---
Predecessors: [0x5f9]
Successors: []
---
0x606 INVALID
---
0x606: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x26987b60, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x26987b60, S0]

================================

Block 0x607
[0x607:0x671]
---
Predecessors: [0x5f9]
Successors: [0x672, 0x673]
---
0x607 JUMPDEST
0x608 POP
0x609 POP
0x60a PUSH1 0x40
0x60c DUP1
0x60d MLOAD
0x60e DUP1
0x60f MLOAD
0x610 PUSH1 0x4
0x612 DUP1
0x613 SLOAD
0x614 PUSH1 0x0
0x616 PUSH1 0x20
0x618 SWAP5
0x619 DUP6
0x61a ADD
0x61b DUP2
0x61c SWAP1
0x61d MSTORE
0x61e DUP6
0x61f MLOAD
0x620 PUSH32 0x6e4e5c1d00000000000000000000000000000000000000000000000000000000
0x641 DUP2
0x642 MSTORE
0x643 SWAP6
0x644 MLOAD
0x645 SWAP4
0x646 SWAP12
0x647 POP
0x648 PUSH1 0x1
0x64a PUSH1 0xa0
0x64c PUSH1 0x2
0x64e EXP
0x64f SUB
0x650 SWAP1
0x651 SWAP2
0x652 AND
0x653 SWAP6
0x654 POP
0x655 PUSH4 0x6e4e5c1d
0x65a SWAP5
0x65b DUP1
0x65c DUP4
0x65d ADD
0x65e SWAP5
0x65f SWAP4
0x660 SWAP3
0x661 SWAP1
0x662 DUP4
0x663 SWAP1
0x664 SUB
0x665 ADD
0x666 SWAP1
0x667 DUP3
0x668 SWAP1
0x669 DUP8
0x66a DUP1
0x66b EXTCODESIZE
0x66c ISZERO
0x66d ISZERO
0x66e PUSH2 0x673
0x671 JUMPI
---
0x607: JUMPDEST 
0x60a: V527 = 0x40
0x60d: V528 = M[0x40]
0x60f: V529 = M[V528]
0x610: V530 = 0x4
0x613: V531 = S[0x4]
0x614: V532 = 0x0
0x616: V533 = 0x20
0x61a: V534 = ADD 0x20 V528
0x61d: M[V534] = 0x0
0x61f: V535 = M[0x40]
0x620: V536 = 0x6e4e5c1d00000000000000000000000000000000000000000000000000000000
0x642: M[V535] = 0x6e4e5c1d00000000000000000000000000000000000000000000000000000000
0x644: V537 = M[0x40]
0x648: V538 = 0x1
0x64a: V539 = 0xa0
0x64c: V540 = 0x2
0x64e: V541 = EXP 0x2 0xa0
0x64f: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x652: V543 = AND V531 0xffffffffffffffffffffffffffffffffffffffff
0x655: V544 = 0x6e4e5c1d
0x65d: V545 = ADD 0x4 V535
0x664: V546 = SUB V535 V537
0x665: V547 = ADD V546 0x4
0x66b: V548 = EXTCODESIZE V543
0x66c: V549 = ISZERO V548
0x66d: V550 = ISZERO V549
0x66e: V551 = 0x673
0x671: JUMPI 0x673 V550
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, 0x0, 0x0, 0x0, 0x0, 0x0, S2, 0x26987b60, S0]
Stack pops: 8
Stack additions: [V529, S6, S5, S4, S3, V543, 0x6e4e5c1d, V545, 0x20, V537, V547, V537, 0x0, V543]
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, V529, 0x0, 0x0, 0x0, 0x0, V543, 0x6e4e5c1d, V545, 0x20, V537, V547, V537, 0x0, V543]

================================

Block 0x672
[0x672:0x672]
---
Predecessors: [0x607]
Successors: []
---
0x672 INVALID
---
0x672: INVALID 
---
Entry stack: [V10, S16, {0xc1, 0xc5}, S14, V529, 0x0, 0x0, 0x0, 0x0, V543, 0x6e4e5c1d, V545, 0x20, V537, V547, V537, 0x0, V543]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc5}, S14, V529, 0x0, 0x0, 0x0, 0x0, V543, 0x6e4e5c1d, V545, 0x20, V537, V547, V537, 0x0, V543]

================================

Block 0x673
[0x673:0x67f]
---
Predecessors: [0x607]
Successors: [0x680, 0x681]
---
0x673 JUMPDEST
0x674 PUSH2 0x2c6
0x677 GAS
0x678 SUB
0x679 CALL
0x67a ISZERO
0x67b ISZERO
0x67c PUSH2 0x681
0x67f JUMPI
---
0x673: JUMPDEST 
0x674: V552 = 0x2c6
0x677: V553 = GAS
0x678: V554 = SUB V553 0x2c6
0x679: V555 = CALL V554 V543 0x0 V537 V547 V537 0x20
0x67a: V556 = ISZERO V555
0x67b: V557 = ISZERO V556
0x67c: V558 = 0x681
0x67f: JUMPI 0x681 V557
---
Entry stack: [V10, S16, {0xc1, 0xc5}, S14, V529, 0x0, 0x0, 0x0, 0x0, V543, 0x6e4e5c1d, V545, 0x20, V537, V547, V537, 0x0, V543]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc5}, S14, V529, 0x0, 0x0, 0x0, 0x0, V543, 0x6e4e5c1d, V545]

================================

Block 0x680
[0x680:0x680]
---
Predecessors: [0x673]
Successors: []
---
0x680 INVALID
---
0x680: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, S7, 0x0, 0x0, 0x0, 0x0, S2, 0x6e4e5c1d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, S7, 0x0, 0x0, 0x0, 0x0, S2, 0x6e4e5c1d, S0]

================================

Block 0x681
[0x681:0x692]
---
Predecessors: [0x673]
Successors: [0x693, 0x79c]
---
0x681 JUMPDEST
0x682 POP
0x683 POP
0x684 PUSH1 0x40
0x686 MLOAD
0x687 MLOAD
0x688 PUSH1 0x1
0x68a DUP8
0x68b ADD
0x68c LT
0x68d SWAP1
0x68e POP
0x68f PUSH2 0x79c
0x692 JUMPI
---
0x681: JUMPDEST 
0x684: V559 = 0x40
0x686: V560 = M[0x40]
0x687: V561 = M[V560]
0x688: V562 = 0x1
0x68b: V563 = ADD S7 0x1
0x68c: V564 = LT V563 V561
0x68f: V565 = 0x79c
0x692: JUMPI 0x79c V564
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, S7, 0x0, 0x0, 0x0, 0x0, S2, 0x6e4e5c1d, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3]
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, S7, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x693
[0x693:0x6fb]
---
Predecessors: [0x681]
Successors: [0x6fc, 0x6fd]
---
0x693 PUSH1 0x4
0x695 DUP1
0x696 SLOAD
0x697 PUSH1 0x40
0x699 DUP1
0x69a MLOAD
0x69b PUSH1 0x0
0x69d PUSH1 0x80
0x69f SWAP2
0x6a0 DUP3
0x6a1 ADD
0x6a2 DUP2
0x6a3 SWAP1
0x6a4 MSTORE
0x6a5 DUP3
0x6a6 MLOAD
0x6a7 PUSH32 0x1bf7d74900000000000000000000000000000000000000000000000000000000
0x6c8 DUP2
0x6c9 MSTORE
0x6ca SWAP5
0x6cb DUP6
0x6cc ADD
0x6cd DUP11
0x6ce SWAP1
0x6cf MSTORE
0x6d0 SWAP2
0x6d1 MLOAD
0x6d2 PUSH1 0x1
0x6d4 PUSH1 0xa0
0x6d6 PUSH1 0x2
0x6d8 EXP
0x6d9 SUB
0x6da SWAP1
0x6db SWAP4
0x6dc AND
0x6dd SWAP4
0x6de PUSH4 0x1bf7d749
0x6e3 SWAP4
0x6e4 PUSH1 0x24
0x6e6 DUP1
0x6e7 DUP4
0x6e8 ADD
0x6e9 SWAP5
0x6ea SWAP2
0x6eb SWAP3
0x6ec DUP4
0x6ed SWAP1
0x6ee SUB
0x6ef ADD
0x6f0 SWAP1
0x6f1 DUP3
0x6f2 SWAP1
0x6f3 DUP8
0x6f4 DUP1
0x6f5 EXTCODESIZE
0x6f6 ISZERO
0x6f7 ISZERO
0x6f8 PUSH2 0x6fd
0x6fb JUMPI
---
0x693: V566 = 0x4
0x696: V567 = S[0x4]
0x697: V568 = 0x40
0x69a: V569 = M[0x40]
0x69b: V570 = 0x0
0x69d: V571 = 0x80
0x6a1: V572 = ADD 0x80 V569
0x6a4: M[V572] = 0x0
0x6a6: V573 = M[0x40]
0x6a7: V574 = 0x1bf7d74900000000000000000000000000000000000000000000000000000000
0x6c9: M[V573] = 0x1bf7d74900000000000000000000000000000000000000000000000000000000
0x6cc: V575 = ADD V573 0x4
0x6cf: M[V575] = S4
0x6d1: V576 = M[0x40]
0x6d2: V577 = 0x1
0x6d4: V578 = 0xa0
0x6d6: V579 = 0x2
0x6d8: V580 = EXP 0x2 0xa0
0x6d9: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dc: V582 = AND V567 0xffffffffffffffffffffffffffffffffffffffff
0x6de: V583 = 0x1bf7d749
0x6e4: V584 = 0x24
0x6e8: V585 = ADD V573 0x24
0x6ee: V586 = SUB V573 V576
0x6ef: V587 = ADD V586 0x24
0x6f5: V588 = EXTCODESIZE V582
0x6f6: V589 = ISZERO V588
0x6f7: V590 = ISZERO V589
0x6f8: V591 = 0x6fd
0x6fb: JUMPI 0x6fd V590
---
Entry stack: [V10, S7, {0xc1, 0xc5}, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V582, 0x1bf7d749, V585, 0x80, V576, V587, V576, 0x0, V582]
Exit stack: [V10, S7, {0xc1, 0xc5}, S5, S4, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585, 0x80, V576, V587, V576, 0x0, V582]

================================

Block 0x6fc
[0x6fc:0x6fc]
---
Predecessors: [0x693]
Successors: []
---
0x6fc INVALID
---
0x6fc: INVALID 
---
Entry stack: [V10, S16, {0xc1, 0xc5}, S14, S13, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585, 0x80, V576, V587, V576, 0x0, V582]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc5}, S14, S13, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585, 0x80, V576, V587, V576, 0x0, V582]

================================

Block 0x6fd
[0x6fd:0x709]
---
Predecessors: [0x693]
Successors: [0x70a, 0x70b]
---
0x6fd JUMPDEST
0x6fe PUSH2 0x2c6
0x701 GAS
0x702 SUB
0x703 CALL
0x704 ISZERO
0x705 ISZERO
0x706 PUSH2 0x70b
0x709 JUMPI
---
0x6fd: JUMPDEST 
0x6fe: V592 = 0x2c6
0x701: V593 = GAS
0x702: V594 = SUB V593 0x2c6
0x703: V595 = CALL V594 V582 0x0 V576 V587 V576 0x80
0x704: V596 = ISZERO V595
0x705: V597 = ISZERO V596
0x706: V598 = 0x70b
0x709: JUMPI 0x70b V597
---
Entry stack: [V10, S16, {0xc1, 0xc5}, S14, S13, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585, 0x80, V576, V587, V576, 0x0, V582]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc5}, S14, S13, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585]

================================

Block 0x70a
[0x70a:0x70a]
---
Predecessors: [0x6fd]
Successors: []
---
0x70a INVALID
---
0x70a: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, S7, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, S7, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585]

================================

Block 0x70b
[0x70b:0x779]
---
Predecessors: [0x6fd]
Successors: [0x77a, 0x77b]
---
0x70b JUMPDEST
0x70c POP
0x70d POP
0x70e PUSH1 0x40
0x710 DUP1
0x711 MLOAD
0x712 PUSH1 0x20
0x714 SWAP1
0x715 DUP2
0x716 ADD
0x717 DUP1
0x718 MLOAD
0x719 PUSH1 0x3
0x71b SLOAD
0x71c PUSH1 0x0
0x71e SWAP3
0x71f DUP4
0x720 SWAP1
0x721 MSTORE
0x722 DUP5
0x723 MLOAD
0x724 PUSH32 0x1517d10700000000000000000000000000000000000000000000000000000000
0x745 DUP2
0x746 MSTORE
0x747 SWAP5
0x748 MLOAD
0x749 SWAP2
0x74a SWAP10
0x74b POP
0x74c PUSH2 0x100
0x74f SWAP1
0x750 DIV
0x751 PUSH1 0x1
0x753 PUSH1 0xa0
0x755 PUSH1 0x2
0x757 EXP
0x758 SUB
0x759 AND
0x75a SWAP5
0x75b POP
0x75c PUSH4 0x1517d107
0x761 SWAP4
0x762 PUSH1 0x4
0x764 DUP1
0x765 DUP3
0x766 ADD
0x767 SWAP5
0x768 SWAP4
0x769 SWAP2
0x76a DUP4
0x76b SWAP1
0x76c SUB
0x76d ADD
0x76e SWAP1
0x76f DUP3
0x770 SWAP1
0x771 DUP8
0x772 DUP1
0x773 EXTCODESIZE
0x774 ISZERO
0x775 ISZERO
0x776 PUSH2 0x77b
0x779 JUMPI
---
0x70b: JUMPDEST 
0x70e: V599 = 0x40
0x711: V600 = M[0x40]
0x712: V601 = 0x20
0x716: V602 = ADD 0x20 V600
0x718: V603 = M[V602]
0x719: V604 = 0x3
0x71b: V605 = S[0x3]
0x71c: V606 = 0x0
0x721: M[V602] = 0x0
0x723: V607 = M[0x40]
0x724: V608 = 0x1517d10700000000000000000000000000000000000000000000000000000000
0x746: M[V607] = 0x1517d10700000000000000000000000000000000000000000000000000000000
0x748: V609 = M[0x40]
0x74c: V610 = 0x100
0x750: V611 = DIV V605 0x100
0x751: V612 = 0x1
0x753: V613 = 0xa0
0x755: V614 = 0x2
0x757: V615 = EXP 0x2 0xa0
0x758: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x759: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0x75c: V618 = 0x1517d107
0x762: V619 = 0x4
0x766: V620 = ADD V607 0x4
0x76c: V621 = SUB V607 V609
0x76d: V622 = ADD V621 0x4
0x773: V623 = EXTCODESIZE V617
0x774: V624 = ISZERO V623
0x775: V625 = ISZERO V624
0x776: V626 = 0x77b
0x779: JUMPI 0x77b V625
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, S7, 0x0, 0x0, 0x0, 0x0, V582, 0x1bf7d749, V585]
Stack pops: 7
Stack additions: [V603, S5, S4, S3, V617, 0x1517d107, V620, 0x20, V609, V622, V609, 0x0, V617]
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, S7, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620, 0x20, V609, V622, V609, 0x0, V617]

================================

Block 0x77a
[0x77a:0x77a]
---
Predecessors: [0x70b]
Successors: []
---
0x77a INVALID
---
0x77a: INVALID 
---
Entry stack: [V10, S16, {0xc1, 0xc5}, S14, S13, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620, 0x20, V609, V622, V609, 0x0, V617]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc5}, S14, S13, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620, 0x20, V609, V622, V609, 0x0, V617]

================================

Block 0x77b
[0x77b:0x787]
---
Predecessors: [0x70b]
Successors: [0x788, 0x789]
---
0x77b JUMPDEST
0x77c PUSH2 0x2c6
0x77f GAS
0x780 SUB
0x781 CALL
0x782 ISZERO
0x783 ISZERO
0x784 PUSH2 0x789
0x787 JUMPI
---
0x77b: JUMPDEST 
0x77c: V627 = 0x2c6
0x77f: V628 = GAS
0x780: V629 = SUB V628 0x2c6
0x781: V630 = CALL V629 V617 0x0 V609 V622 V609 0x20
0x782: V631 = ISZERO V630
0x783: V632 = ISZERO V631
0x784: V633 = 0x789
0x787: JUMPI 0x789 V632
---
Entry stack: [V10, S16, {0xc1, 0xc5}, S14, S13, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620, 0x20, V609, V622, V609, 0x0, V617]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S16, {0xc1, 0xc5}, S14, S13, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620]

================================

Block 0x788
[0x788:0x788]
---
Predecessors: [0x77b]
Successors: []
---
0x788 INVALID
---
0x788: INVALID 
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, S7, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, S7, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620]

================================

Block 0x789
[0x789:0x797]
---
Predecessors: [0x77b]
Successors: [0x798, 0x79c]
---
0x789 JUMPDEST
0x78a POP
0x78b POP
0x78c PUSH1 0x40
0x78e MLOAD
0x78f MLOAD
0x790 DUP6
0x791 GT
0x792 SWAP1
0x793 POP
0x794 PUSH2 0x79c
0x797 JUMPI
---
0x789: JUMPDEST 
0x78c: V634 = 0x40
0x78e: V635 = M[0x40]
0x78f: V636 = M[V635]
0x791: V637 = GT V603 V636
0x794: V638 = 0x79c
0x797: JUMPI 0x79c V637
---
Entry stack: [V10, S10, {0xc1, 0xc5}, S8, S7, V603, 0x0, 0x0, 0x0, V617, 0x1517d107, V620]
Stack pops: 7
Stack additions: [S6, S5, S4, S3]
Exit stack: [V10, S10, {0xc1, 0xc5}, S8, S7, V603, 0x0, 0x0, 0x0]

================================

Block 0x798
[0x798:0x79b]
---
Predecessors: [0x789]
Successors: [0x8cf]
---
0x798 PUSH2 0x8cf
0x79b JUMP
---
0x798: V639 = 0x8cf
0x79b: JUMP 0x8cf
---
Entry stack: [V10, S7, {0xc1, 0xc5}, S5, S4, V603, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc5}, S5, S4, V603, 0x0, 0x0, 0x0]

================================

Block 0x79c
[0x79c:0x79c]
---
Predecessors: [0x681, 0x789]
Successors: [0x79d]
---
0x79c JUMPDEST
---
0x79c: JUMPDEST 
---
Entry stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, 0x0, 0x0, 0x0]

================================

Block 0x79d
[0x79d:0x823]
---
Predecessors: [0x79c]
Successors: [0x824, 0x825]
---
0x79d JUMPDEST
0x79e PUSH1 0x3
0x7a0 DUP1
0x7a1 SLOAD
0x7a2 PUSH1 0xff
0x7a4 NOT
0x7a5 AND
0x7a6 PUSH1 0x1
0x7a8 OR
0x7a9 SWAP1
0x7aa DUP2
0x7ab SWAP1
0x7ac SSTORE
0x7ad PUSH1 0x2
0x7af SLOAD
0x7b0 PUSH1 0x40
0x7b2 DUP1
0x7b3 MLOAD
0x7b4 PUSH1 0x0
0x7b6 PUSH1 0x20
0x7b8 SWAP2
0x7b9 DUP3
0x7ba ADD
0x7bb MSTORE
0x7bc DUP2
0x7bd MLOAD
0x7be PUSH32 0xf48c305400000000000000000000000000000000000000000000000000000000
0x7df DUP2
0x7e0 MSTORE
0x7e1 PUSH1 0x1
0x7e3 PUSH1 0xa0
0x7e5 PUSH1 0x2
0x7e7 EXP
0x7e8 SUB
0x7e9 ADDRESS
0x7ea DUP2
0x7eb AND
0x7ec PUSH1 0x4
0x7ee DUP4
0x7ef ADD
0x7f0 DUP2
0x7f1 SWAP1
0x7f2 MSTORE
0x7f3 SWAP4
0x7f4 MLOAD
0x7f5 DUP5
0x7f6 BALANCE
0x7f7 SWAP10
0x7f8 POP
0x7f9 PUSH2 0x100
0x7fc SWAP1
0x7fd SWAP7
0x7fe DIV
0x7ff AND
0x800 SWAP5
0x801 PUSH4 0xf48c3054
0x806 SWAP5
0x807 SWAP4
0x808 BALANCE
0x809 SWAP4
0x80a SWAP1
0x80b SWAP4
0x80c SUB
0x80d SWAP3
0x80e PUSH1 0x24
0x810 DUP1
0x811 DUP4
0x812 ADD
0x813 SWAP4
0x814 SWAP3
0x815 DUP3
0x816 SWAP1
0x817 SUB
0x818 ADD
0x819 DUP2
0x81a DUP6
0x81b DUP9
0x81c DUP1
0x81d EXTCODESIZE
0x81e ISZERO
0x81f ISZERO
0x820 PUSH2 0x825
0x823 JUMPI
---
0x79d: JUMPDEST 
0x79e: V640 = 0x3
0x7a1: V641 = S[0x3]
0x7a2: V642 = 0xff
0x7a4: V643 = NOT 0xff
0x7a5: V644 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V641
0x7a6: V645 = 0x1
0x7a8: V646 = OR 0x1 V644
0x7ac: S[0x3] = V646
0x7ad: V647 = 0x2
0x7af: V648 = S[0x2]
0x7b0: V649 = 0x40
0x7b3: V650 = M[0x40]
0x7b4: V651 = 0x0
0x7b6: V652 = 0x20
0x7ba: V653 = ADD 0x20 V650
0x7bb: M[V653] = 0x0
0x7bd: V654 = M[0x40]
0x7be: V655 = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x7e0: M[V654] = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x7e1: V656 = 0x1
0x7e3: V657 = 0xa0
0x7e5: V658 = 0x2
0x7e7: V659 = EXP 0x2 0xa0
0x7e8: V660 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e9: V661 = ADDRESS
0x7eb: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0x7ec: V663 = 0x4
0x7ef: V664 = ADD V654 0x4
0x7f2: M[V664] = V662
0x7f4: V665 = M[0x40]
0x7f6: V666 = BALANCE V662
0x7f9: V667 = 0x100
0x7fe: V668 = DIV V646 0x100
0x7ff: V669 = AND V668 0xffffffffffffffffffffffffffffffffffffffff
0x801: V670 = 0xf48c3054
0x808: V671 = BALANCE V662
0x80c: V672 = SUB V671 V648
0x80e: V673 = 0x24
0x812: V674 = ADD V654 0x24
0x817: V675 = SUB V654 V665
0x818: V676 = ADD V675 0x24
0x81d: V677 = EXTCODESIZE V669
0x81e: V678 = ISZERO V677
0x81f: V679 = ISZERO V678
0x820: V680 = 0x825
0x823: JUMPI 0x825 V679
---
Entry stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V666, S1, S0, V669, 0xf48c3054, V672, V674, 0x20, V665, V676, V665, V672, V669]
Exit stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, V666, 0x0, 0x0, V669, 0xf48c3054, V672, V674, 0x20, V665, V676, V665, V672, V669]

================================

Block 0x824
[0x824:0x824]
---
Predecessors: [0x79d]
Successors: []
---
0x824 INVALID
---
0x824: INVALID 
---
Entry stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, V666, 0x0, 0x0, V669, 0xf48c3054, V672, V674, 0x20, V665, V676, V665, V672, V669]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, V666, 0x0, 0x0, V669, 0xf48c3054, V672, V674, 0x20, V665, V676, V665, V672, V669]

================================

Block 0x825
[0x825:0x831]
---
Predecessors: [0x79d]
Successors: [0x832, 0x833]
---
0x825 JUMPDEST
0x826 PUSH2 0x25ee
0x829 GAS
0x82a SUB
0x82b CALL
0x82c ISZERO
0x82d ISZERO
0x82e PUSH2 0x833
0x831 JUMPI
---
0x825: JUMPDEST 
0x826: V681 = 0x25ee
0x829: V682 = GAS
0x82a: V683 = SUB V682 0x25ee
0x82b: V684 = CALL V683 V669 V672 V665 V676 V665 0x20
0x82c: V685 = ISZERO V684
0x82d: V686 = ISZERO V685
0x82e: V687 = 0x833
0x831: JUMPI 0x833 V686
---
Entry stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, V666, 0x0, 0x0, V669, 0xf48c3054, V672, V674, 0x20, V665, V676, V665, V672, V669]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S17, {0xc1, 0xc5}, S15, S14, S13, V666, 0x0, 0x0, V669, 0xf48c3054, V672, V674]

================================

Block 0x832
[0x832:0x832]
---
Predecessors: [0x825]
Successors: []
---
0x832 INVALID
---
0x832: INVALID 
---
Entry stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, 0x0, 0x0, S3, 0xf48c3054, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, 0x0, 0x0, S3, 0xf48c3054, S1, S0]

================================

Block 0x833
[0x833:0x84a]
---
Predecessors: [0x825]
Successors: [0x84b, 0x850]
---
0x833 JUMPDEST
0x834 POP
0x835 POP
0x836 POP
0x837 POP
0x838 PUSH1 0x1
0x83a PUSH1 0xa0
0x83c PUSH1 0x2
0x83e EXP
0x83f SUB
0x840 ADDRESS
0x841 AND
0x842 BALANCE
0x843 DUP4
0x844 SWAP1
0x845 GT
0x846 ISZERO
0x847 PUSH2 0x850
0x84a JUMPI
---
0x833: JUMPDEST 
0x838: V688 = 0x1
0x83a: V689 = 0xa0
0x83c: V690 = 0x2
0x83e: V691 = EXP 0x2 0xa0
0x83f: V692 = SUB 0x10000000000000000000000000000000000000000 0x1
0x840: V693 = ADDRESS
0x841: V694 = AND V693 0xffffffffffffffffffffffffffffffffffffffff
0x842: V695 = BALANCE V694
0x845: V696 = GT V695 S6
0x846: V697 = ISZERO V696
0x847: V698 = 0x850
0x84a: JUMPI 0x850 V697
---
Entry stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, 0x0, 0x0, S3, 0xf48c3054, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4]
Exit stack: [V10, S11, {0xc1, 0xc5}, S9, S8, S7, S6, 0x0, 0x0]

================================

Block 0x84b
[0x84b:0x84f]
---
Predecessors: [0x833]
Successors: []
---
0x84b PUSH1 0x0
0x84d PUSH1 0x0
0x84f REVERT
---
0x84b: V699 = 0x0
0x84d: V700 = 0x0
0x84f: REVERT 0x0 0x0
---
Entry stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x850
[0x850:0x88f]
---
Predecessors: [0x833]
Successors: [0x890, 0x891]
---
0x850 JUMPDEST
0x851 PUSH1 0x1
0x853 PUSH1 0xa0
0x855 PUSH1 0x2
0x857 EXP
0x858 SUB
0x859 DUP7
0x85a DUP2
0x85b AND
0x85c PUSH1 0x0
0x85e SWAP1
0x85f DUP2
0x860 MSTORE
0x861 PUSH1 0x1
0x863 PUSH1 0x20
0x865 MSTORE
0x866 PUSH1 0x40
0x868 SWAP1
0x869 SHA3
0x86a DUP1
0x86b SLOAD
0x86c PUSH2 0x2710
0x86f ADDRESS
0x870 SWAP4
0x871 SWAP1
0x872 SWAP4
0x873 AND
0x874 BALANCE
0x875 DUP7
0x876 SUB
0x877 SWAP3
0x878 DUP4
0x879 MUL
0x87a ADD
0x87b SWAP1
0x87c SSTORE
0x87d PUSH1 0x2
0x87f SLOAD
0x880 SWAP1
0x881 SWAP3
0x882 POP
0x883 DUP1
0x884 DUP5
0x885 SUB
0x886 SWAP1
0x887 DUP4
0x888 MUL
0x889 DUP2
0x88a ISZERO
0x88b ISZERO
0x88c PUSH2 0x891
0x88f JUMPI
---
0x850: JUMPDEST 
0x851: V701 = 0x1
0x853: V702 = 0xa0
0x855: V703 = 0x2
0x857: V704 = EXP 0x2 0xa0
0x858: V705 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85b: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x85c: V707 = 0x0
0x860: M[0x0] = V706
0x861: V708 = 0x1
0x863: V709 = 0x20
0x865: M[0x20] = 0x1
0x866: V710 = 0x40
0x869: V711 = SHA3 0x0 0x40
0x86b: V712 = S[V711]
0x86c: V713 = 0x2710
0x86f: V714 = ADDRESS
0x873: V715 = AND V714 0xffffffffffffffffffffffffffffffffffffffff
0x874: V716 = BALANCE V715
0x876: V717 = SUB S2 V716
0x879: V718 = MUL V717 0x2710
0x87a: V719 = ADD V718 V712
0x87c: S[V711] = V719
0x87d: V720 = 0x2
0x87f: V721 = S[0x2]
0x885: V722 = SUB S2 V721
0x888: V723 = MUL V717 V721
0x88a: V724 = ISZERO V722
0x88b: V725 = ISZERO V724
0x88c: V726 = 0x891
0x88f: JUMPI 0x891 V725
---
Entry stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V717, S0, V722, V723]
Exit stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, S2, V717, 0x0, V722, V723]

================================

Block 0x890
[0x890:0x890]
---
Predecessors: [0x850]
Successors: []
---
0x890 INVALID
---
0x890: INVALID 
---
Entry stack: [V10, S9, {0xc1, 0xc5}, S7, S6, S5, S4, V717, 0x0, V722, V723]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, {0xc1, 0xc5}, S7, S6, S5, S4, V717, 0x0, V722, V723]

================================

Block 0x891
[0x891:0x8cd]
---
Predecessors: [0x850]
Successors: [0x8ce, 0x8cf]
---
0x891 JUMPDEST
0x892 PUSH1 0x2
0x894 DUP1
0x895 SLOAD
0x896 SWAP3
0x897 SWAP1
0x898 SWAP2
0x899 DIV
0x89a SWAP2
0x89b DUP3
0x89c SWAP1
0x89d SUB
0x89e SWAP1
0x89f SSTORE
0x8a0 PUSH1 0x40
0x8a2 MLOAD
0x8a3 SWAP1
0x8a4 SWAP2
0x8a5 POP
0x8a6 PUSH1 0x1
0x8a8 PUSH1 0xa0
0x8aa PUSH1 0x2
0x8ac EXP
0x8ad SUB
0x8ae DUP8
0x8af AND
0x8b0 SWAP1
0x8b1 DUP3
0x8b2 ISZERO
0x8b3 PUSH2 0x8fc
0x8b6 MUL
0x8b7 SWAP1
0x8b8 DUP4
0x8b9 SWAP1
0x8ba PUSH1 0x0
0x8bc DUP2
0x8bd DUP2
0x8be DUP2
0x8bf DUP6
0x8c0 DUP9
0x8c1 DUP9
0x8c2 CALL
0x8c3 SWAP4
0x8c4 POP
0x8c5 POP
0x8c6 POP
0x8c7 POP
0x8c8 ISZERO
0x8c9 ISZERO
0x8ca PUSH2 0x8cf
0x8cd JUMPI
---
0x891: JUMPDEST 
0x892: V727 = 0x2
0x895: V728 = S[0x2]
0x899: V729 = DIV V723 V722
0x89d: V730 = SUB V728 V729
0x89f: S[0x2] = V730
0x8a0: V731 = 0x40
0x8a2: V732 = M[0x40]
0x8a6: V733 = 0x1
0x8a8: V734 = 0xa0
0x8aa: V735 = 0x2
0x8ac: V736 = EXP 0x2 0xa0
0x8ad: V737 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8af: V738 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x8b2: V739 = ISZERO V729
0x8b3: V740 = 0x8fc
0x8b6: V741 = MUL 0x8fc V739
0x8ba: V742 = 0x0
0x8c2: V743 = CALL V741 V738 V729 V732 0x0 V732 0x0
0x8c8: V744 = ISZERO V743
0x8c9: V745 = ISZERO V744
0x8ca: V746 = 0x8cf
0x8cd: JUMPI 0x8cf V745
---
Entry stack: [V10, S9, {0xc1, 0xc5}, S7, S6, S5, S4, V717, 0x0, V722, V723]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V729]
Exit stack: [V10, S9, {0xc1, 0xc5}, S7, S6, S5, S4, V717, V729]

================================

Block 0x8ce
[0x8ce:0x8ce]
---
Predecessors: [0x891]
Successors: []
---
0x8ce INVALID
---
0x8ce: INVALID 
---
Entry stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, S2, S1, V729]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, S2, S1, V729]

================================

Block 0x8cf
[0x8cf:0x8cf]
---
Predecessors: [0x581, 0x798, 0x891]
Successors: [0x8d0]
---
0x8cf JUMPDEST
---
0x8cf: JUMPDEST 
---
Entry stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, S2, S1, S0]

================================

Block 0x8d0
[0x8d0:0x8d7]
---
Predecessors: [0x8cf]
Successors: [0xc1, 0xc5]
---
0x8d0 JUMPDEST
0x8d1 POP
0x8d2 POP
0x8d3 POP
0x8d4 POP
0x8d5 POP
0x8d6 POP
0x8d7 JUMP
---
0x8d0: JUMPDEST 
0x8d7: JUMP {0xc1, 0xc5}
---
Entry stack: [V10, S7, {0xc1, 0xc5}, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V10, S7]

================================

Block 0x8d8
[0x8d8:0x8e9]
---
Predecessors: [0x1c3]
Successors: [0x179]
---
0x8d8 JUMPDEST
0x8d9 PUSH1 0x1
0x8db PUSH1 0x20
0x8dd MSTORE
0x8de PUSH1 0x0
0x8e0 SWAP1
0x8e1 DUP2
0x8e2 MSTORE
0x8e3 PUSH1 0x40
0x8e5 SWAP1
0x8e6 SHA3
0x8e7 SLOAD
0x8e8 DUP2
0x8e9 JUMP
---
0x8d8: JUMPDEST 
0x8d9: V747 = 0x1
0x8db: V748 = 0x20
0x8dd: M[0x20] = 0x1
0x8de: V749 = 0x0
0x8e2: M[0x0] = V146
0x8e3: V750 = 0x40
0x8e6: V751 = SHA3 0x0 0x40
0x8e7: V752 = S[V751]
0x8e9: JUMP 0x179
---
Entry stack: [V10, 0x179, V146]
Stack pops: 2
Stack additions: [S1, V752]
Exit stack: [V10, 0x179, V752]

================================

Block 0x8ea
[0x8ea:0x8f8]
---
Predecessors: [0x1f1]
Successors: [0xe9]
---
0x8ea JUMPDEST
0x8eb PUSH1 0x5
0x8ed SLOAD
0x8ee PUSH1 0x1
0x8f0 PUSH1 0xa0
0x8f2 PUSH1 0x2
0x8f4 EXP
0x8f5 SUB
0x8f6 AND
0x8f7 DUP2
0x8f8 JUMP
---
0x8ea: JUMPDEST 
0x8eb: V753 = 0x5
0x8ed: V754 = S[0x5]
0x8ee: V755 = 0x1
0x8f0: V756 = 0xa0
0x8f2: V757 = 0x2
0x8f4: V758 = EXP 0x2 0xa0
0x8f5: V759 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f6: V760 = AND 0xffffffffffffffffffffffffffffffffffffffff V754
0x8f8: JUMP 0xe9
---
Entry stack: [V10, 0xe9]
Stack pops: 1
Stack additions: [S0, V760]
Exit stack: [V10, 0xe9, V760]

================================

Block 0x8f9
[0x8f9:0x90a]
---
Predecessors: [0x21d]
Successors: [0x179]
---
0x8f9 JUMPDEST
0x8fa PUSH1 0x0
0x8fc PUSH1 0x20
0x8fe DUP2
0x8ff SWAP1
0x900 MSTORE
0x901 SWAP1
0x902 DUP2
0x903 MSTORE
0x904 PUSH1 0x40
0x906 SWAP1
0x907 SHA3
0x908 SLOAD
0x909 DUP2
0x90a JUMP
---
0x8f9: JUMPDEST 
0x8fa: V761 = 0x0
0x8fc: V762 = 0x20
0x900: M[0x20] = 0x0
0x903: M[0x0] = V182
0x904: V763 = 0x40
0x907: V764 = SHA3 0x0 0x40
0x908: V765 = S[V764]
0x90a: JUMP 0x179
---
Entry stack: [V10, 0x179, V182]
Stack pops: 2
Stack additions: [S1, V765]
Exit stack: [V10, 0x179, V765]

================================

Block 0x90b
[0x90b:0x936]
---
Predecessors: []
Successors: []
---
0x90b STOP
0x90c LOG1
0x90d PUSH6 0x627a7a723058
0x914 SHA3
0x915 BALANCE
0x916 PUSH11 0x51b0572c554d6267d94f45
0x922 LOG4
0x923 DUP10
0x924 MISSING 0xe8
0x925 DELEGATECALL
0x926 LOG0
0x927 PUSH12 0x4e73121e50218e6a317a8a1c
0x934 MISSING 0x2a
0x935 STOP
0x936 MISSING 0x29
---
0x90b: STOP 
0x90c: LOG S0 S1 S2
0x90d: V766 = 0x627a7a723058
0x914: V767 = SHA3 0x627a7a723058 S3
0x915: V768 = BALANCE V767
0x916: V769 = 0x51b0572c554d6267d94f45
0x922: LOG 0x51b0572c554d6267d94f45 V768 S4 S5 S6 S7
0x924: MISSING 0xe8
0x925: V770 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x926: LOG V770 S6
0x927: V771 = 0x4e73121e50218e6a317a8a1c
0x934: MISSING 0x2a
0x935: STOP 
0x936: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, 0x4e73121e50218e6a317a8a1c]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0xc7
Exit block: 0xc5
Body: 0xc5, 0xc7, 0xce, 0xcf

Function 1:
Public function signature: 0x4bd54f04
Entry block: 0xd9
Exit block: 0xe9
Body: 0xd9, 0xe0, 0xe1, 0xe9, 0x520

Function 2:
Public function signature: 0x5259347d
Entry block: 0x105
Exit block: 0xc5
Body: 0xc1, 0xc2, 0xc3, 0xc5, 0x105, 0x243, 0x250, 0x272, 0x279, 0x27e

Function 3:
Public function signature: 0x6360fc3f
Entry block: 0x10f
Exit block: 0x11f
Body: 0x10f, 0x116, 0x117, 0x11f, 0x52f

Function 4:
Public function signature: 0x63d74226
Entry block: 0x133
Exit block: 0xc5
Body: 0xc5, 0x133, 0x538, 0x541

Function 5:
Public function signature: 0x6ad1fe02
Entry block: 0x13d
Exit block: 0xe9
Body: 0xe9, 0x13d, 0x144, 0x145, 0x543

Function 6:
Public function signature: 0x943dfef1
Entry block: 0x169
Exit block: 0x179
Body: 0x169, 0x170, 0x171, 0x179, 0x557

Function 7:
Public function signature: 0xa6f2ae3a
Entry block: 0x18b
Exit block: 0xc5
Body: 0xc1, 0xc2, 0xc3, 0xc5, 0x18b, 0x192, 0x193, 0x55d

Function 8:
Public function signature: 0xbaf38352
Entry block: 0x19d
Exit block: 0xc5
Body: 0xc5, 0x19d, 0x1a4, 0x1a5

Function 9:
Public function signature: 0xeb03e351
Entry block: 0x1bb
Exit block: 0x179
Body: 0x179, 0x1bb, 0x1c2, 0x1c3, 0x8d8

Function 10:
Public function signature: 0xfc0c546a
Entry block: 0x1e9
Exit block: 0xe9
Body: 0xe9, 0x1e9, 0x1f0, 0x1f1, 0x8ea

Function 11:
Public function signature: 0xfc7e286d
Entry block: 0x215
Exit block: 0x179
Body: 0x179, 0x215, 0x21c, 0x21d, 0x8f9

Function 12:
Public fallback function
Entry block: 0xb7
Exit block: 0xbb
Body: 0xb7, 0xbb

Function 13:
Private function
Entry block: 0x569
Exit block: 0x8d0
Body: 0x569, 0x581, 0x585, 0x5f9, 0x607, 0x673, 0x681, 0x693, 0x6fd, 0x70b, 0x77b, 0x789, 0x798, 0x79c, 0x79d, 0x825, 0x833, 0x850, 0x891, 0x8cf, 0x8d0

Function 14:
Private function
Entry block: 0x28a
Exit block: 0x8d0
Body: 0x28a, 0x31c, 0x32a, 0x34c, 0x35c, 0x395, 0x3b3, 0x3b7, 0x42d, 0x43b, 0x44f, 0x4c7, 0x4d5, 0x4e9, 0x516, 0x517

