Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x31143f2b
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x31143f2b
0x3c: V13 = EQ 0x31143f2b V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x91]
---
0x41 DUP1
0x42 PUSH4 0x6894d85d
0x47 EQ
0x48 PUSH2 0x91
0x4b JUMPI
---
0x42: V15 = 0x6894d85d
0x47: V16 = EQ 0x6894d85d V11
0x48: V17 = 0x91
0x4b: JUMPI 0x91 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd3]
---
0x4c DUP1
0x4d PUSH4 0xfd6f69a9
0x52 EQ
0x53 PUSH2 0xd3
0x56 JUMPI
---
0x4d: V18 = 0xfd6f69a9
0x52: V19 = EQ 0xfd6f69a9 V11
0x53: V20 = 0xd3
0x56: JUMPI 0xd3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x7a]
---
Predecessors: [0xd]
Successors: [0x127]
---
0x5c JUMPDEST
0x5d PUSH2 0x7b
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 SWAP1
0x66 PUSH1 0x20
0x68 ADD
0x69 SWAP1
0x6a SWAP2
0x6b SWAP1
0x6c DUP1
0x6d CALLDATALOAD
0x6e SWAP1
0x6f PUSH1 0x20
0x71 ADD
0x72 SWAP1
0x73 SWAP2
0x74 SWAP1
0x75 POP
0x76 POP
0x77 PUSH2 0x127
0x7a JUMP
---
0x5c: JUMPDEST 
0x5d: V22 = 0x7b
0x60: V23 = 0x4
0x64: V24 = CALLDATALOAD 0x4
0x66: V25 = 0x20
0x68: V26 = ADD 0x20 0x4
0x6d: V27 = CALLDATALOAD 0x24
0x6f: V28 = 0x20
0x71: V29 = ADD 0x20 0x24
0x77: V30 = 0x127
0x7a: JUMP 0x127
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7b, V24, V27]
Exit stack: [V11, 0x7b, V24, V27]

================================

Block 0x7b
[0x7b:0x90]
---
Predecessors: [0x7f4]
Successors: []
---
0x7b JUMPDEST
0x7c PUSH1 0x40
0x7e MLOAD
0x7f DUP1
0x80 DUP3
0x81 DUP2
0x82 MSTORE
0x83 PUSH1 0x20
0x85 ADD
0x86 SWAP2
0x87 POP
0x88 POP
0x89 PUSH1 0x40
0x8b MLOAD
0x8c DUP1
0x8d SWAP2
0x8e SUB
0x8f SWAP1
0x90 RETURN
---
0x7b: JUMPDEST 
0x7c: V31 = 0x40
0x7e: V32 = M[0x40]
0x82: M[V32] = S0
0x83: V33 = 0x20
0x85: V34 = ADD 0x20 V32
0x89: V35 = 0x40
0x8b: V36 = M[0x40]
0x8e: V37 = SUB V34 V36
0x90: RETURN V36 V37
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x91
[0x91:0xb8]
---
Predecessors: [0x41]
Successors: [0x950]
---
0x91 JUMPDEST
0x92 PUSH2 0xb9
0x95 PUSH1 0x4
0x97 DUP1
0x98 DUP1
0x99 CALLDATALOAD
0x9a SWAP1
0x9b PUSH1 0x20
0x9d ADD
0x9e SWAP1
0x9f SWAP2
0xa0 SWAP1
0xa1 DUP1
0xa2 CALLDATALOAD
0xa3 SWAP1
0xa4 PUSH1 0x20
0xa6 ADD
0xa7 SWAP1
0xa8 SWAP2
0xa9 SWAP1
0xaa DUP1
0xab CALLDATALOAD
0xac SWAP1
0xad PUSH1 0x20
0xaf ADD
0xb0 SWAP1
0xb1 SWAP2
0xb2 SWAP1
0xb3 POP
0xb4 POP
0xb5 PUSH2 0x950
0xb8 JUMP
---
0x91: JUMPDEST 
0x92: V38 = 0xb9
0x95: V39 = 0x4
0x99: V40 = CALLDATALOAD 0x4
0x9b: V41 = 0x20
0x9d: V42 = ADD 0x20 0x4
0xa2: V43 = CALLDATALOAD 0x24
0xa4: V44 = 0x20
0xa6: V45 = ADD 0x20 0x24
0xab: V46 = CALLDATALOAD 0x44
0xad: V47 = 0x20
0xaf: V48 = ADD 0x20 0x44
0xb5: V49 = 0x950
0xb8: JUMP 0x950
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9, V40, V43, V46]
Exit stack: [V11, 0xb9, V40, V43, V46]

================================

Block 0xb9
[0xb9:0xd2]
---
Predecessors: [0xc09]
Successors: []
---
0xb9 JUMPDEST
0xba PUSH1 0x40
0xbc MLOAD
0xbd DUP1
0xbe DUP3
0xbf ISZERO
0xc0 ISZERO
0xc1 ISZERO
0xc2 ISZERO
0xc3 DUP2
0xc4 MSTORE
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 SWAP2
0xc9 POP
0xca POP
0xcb PUSH1 0x40
0xcd MLOAD
0xce DUP1
0xcf SWAP2
0xd0 SUB
0xd1 SWAP1
0xd2 RETURN
---
0xb9: JUMPDEST 
0xba: V50 = 0x40
0xbc: V51 = M[0x40]
0xbf: V52 = ISZERO S0
0xc0: V53 = ISZERO V52
0xc1: V54 = ISZERO V53
0xc2: V55 = ISZERO V54
0xc4: M[V51] = V55
0xc5: V56 = 0x20
0xc7: V57 = ADD 0x20 V51
0xcb: V58 = 0x40
0xcd: V59 = M[0x40]
0xd0: V60 = SUB V57 V59
0xd2: RETURN V59 V60
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S1]

================================

Block 0xd3
[0xd3:0x110]
---
Predecessors: [0x4c]
Successors: [0xc10]
---
0xd3 JUMPDEST
0xd4 PUSH2 0x111
0xd7 PUSH1 0x4
0xd9 DUP1
0xda DUP1
0xdb CALLDATALOAD
0xdc SWAP1
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 SWAP2
0xe2 SWAP1
0xe3 DUP1
0xe4 CALLDATALOAD
0xe5 SWAP1
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 SWAP1
0xea SWAP2
0xeb SWAP1
0xec DUP1
0xed CALLDATALOAD
0xee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x103 AND
0x104 SWAP1
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP1
0x109 SWAP2
0x10a SWAP1
0x10b POP
0x10c POP
0x10d PUSH2 0xc10
0x110 JUMP
---
0xd3: JUMPDEST 
0xd4: V61 = 0x111
0xd7: V62 = 0x4
0xdb: V63 = CALLDATALOAD 0x4
0xdd: V64 = 0x20
0xdf: V65 = ADD 0x20 0x4
0xe4: V66 = CALLDATALOAD 0x24
0xe6: V67 = 0x20
0xe8: V68 = ADD 0x20 0x24
0xed: V69 = CALLDATALOAD 0x44
0xee: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x103: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x105: V72 = 0x20
0x107: V73 = ADD 0x20 0x44
0x10d: V74 = 0xc10
0x110: JUMP 0xc10
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x111, V63, V66, V71]
Exit stack: [V11, 0x111, V63, V66, V71]

================================

Block 0x111
[0x111:0x126]
---
Predecessors: [0xc83]
Successors: []
---
0x111 JUMPDEST
0x112 PUSH1 0x40
0x114 MLOAD
0x115 DUP1
0x116 DUP3
0x117 DUP2
0x118 MSTORE
0x119 PUSH1 0x20
0x11b ADD
0x11c SWAP2
0x11d POP
0x11e POP
0x11f PUSH1 0x40
0x121 MLOAD
0x122 DUP1
0x123 SWAP2
0x124 SUB
0x125 SWAP1
0x126 RETURN
---
0x111: JUMPDEST 
0x112: V75 = 0x40
0x114: V76 = M[0x40]
0x118: M[V76] = S0
0x119: V77 = 0x20
0x11b: V78 = ADD 0x20 V76
0x11f: V79 = 0x40
0x121: V80 = M[0x40]
0x124: V81 = SUB V78 V80
0x126: RETURN V80 V81
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x127
[0x127:0x21e]
---
Predecessors: [0x5c]
Successors: [0x21f, 0x223]
---
0x127 JUMPDEST
0x128 PUSH1 0x0
0x12a DUP1
0x12b DUP4
0x12c PUSH1 0x1
0x12e ADD
0x12f PUSH1 0x0
0x131 DUP5
0x132 PUSH1 0x1
0x134 ADD
0x135 PUSH1 0x0
0x137 SWAP1
0x138 SLOAD
0x139 SWAP1
0x13a PUSH2 0x100
0x13d EXP
0x13e SWAP1
0x13f DIV
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x181 AND
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 SWAP1
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c ADD
0x18d PUSH1 0x0
0x18f SHA3
0x190 PUSH1 0x1
0x192 ADD
0x193 SLOAD
0x194 SWAP1
0x195 POP
0x196 DUP4
0x197 PUSH1 0x1
0x199 ADD
0x19a PUSH1 0x0
0x19c DUP5
0x19d PUSH1 0x1
0x19f ADD
0x1a0 PUSH1 0x0
0x1a2 SWAP1
0x1a3 SLOAD
0x1a4 SWAP1
0x1a5 PUSH2 0x100
0x1a8 EXP
0x1a9 SWAP1
0x1aa DIV
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 AND
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x20
0x1f1 ADD
0x1f2 SWAP1
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 PUSH1 0x0
0x1fa SHA3
0x1fb PUSH1 0x1
0x1fd ADD
0x1fe SLOAD
0x1ff ADDRESS
0x200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x215 AND
0x216 BALANCE
0x217 LT
0x218 ISZERO
0x219 ISZERO
0x21a ISZERO
0x21b PUSH2 0x223
0x21e JUMPI
---
0x127: JUMPDEST 
0x128: V82 = 0x0
0x12c: V83 = 0x1
0x12e: V84 = ADD 0x1 V24
0x12f: V85 = 0x0
0x132: V86 = 0x1
0x134: V87 = ADD 0x1 V27
0x135: V88 = 0x0
0x138: V89 = S[V87]
0x13a: V90 = 0x100
0x13d: V91 = EXP 0x100 0x0
0x13f: V92 = DIV V89 0x1
0x140: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x156: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x16c: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x181: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x183: M[0x0] = V98
0x184: V99 = 0x20
0x186: V100 = ADD 0x20 0x0
0x189: M[0x20] = V84
0x18a: V101 = 0x20
0x18c: V102 = ADD 0x20 0x20
0x18d: V103 = 0x0
0x18f: V104 = SHA3 0x0 0x40
0x190: V105 = 0x1
0x192: V106 = ADD 0x1 V104
0x193: V107 = S[V106]
0x197: V108 = 0x1
0x199: V109 = ADD 0x1 V24
0x19a: V110 = 0x0
0x19d: V111 = 0x1
0x19f: V112 = ADD 0x1 V27
0x1a0: V113 = 0x0
0x1a3: V114 = S[V112]
0x1a5: V115 = 0x100
0x1a8: V116 = EXP 0x100 0x0
0x1aa: V117 = DIV V114 0x1
0x1ab: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1c1: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x1d7: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x1ee: M[0x0] = V123
0x1ef: V124 = 0x20
0x1f1: V125 = ADD 0x20 0x0
0x1f4: M[0x20] = V109
0x1f5: V126 = 0x20
0x1f7: V127 = ADD 0x20 0x20
0x1f8: V128 = 0x0
0x1fa: V129 = SHA3 0x0 0x40
0x1fb: V130 = 0x1
0x1fd: V131 = ADD 0x1 V129
0x1fe: V132 = S[V131]
0x1ff: V133 = ADDRESS
0x200: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x215: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x216: V136 = BALANCE V135
0x217: V137 = LT V136 V132
0x218: V138 = ISZERO V137
0x219: V139 = ISZERO V138
0x21a: V140 = ISZERO V139
0x21b: V141 = 0x223
0x21e: JUMPI 0x223 V140
---
Entry stack: [V11, 0x7b, V24, V27]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V107]
Exit stack: [V11, 0x7b, V24, V27, 0x0, V107]

================================

Block 0x21f
[0x21f:0x222]
---
Predecessors: [0x127]
Successors: []
---
0x21f PUSH1 0x0
0x221 DUP1
0x222 REVERT
---
0x21f: V142 = 0x0
0x222: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, V107]

================================

Block 0x223
[0x223:0x34e]
---
Predecessors: [0x127]
Successors: [0x34f, 0x353]
---
0x223 JUMPDEST
0x224 DUP4
0x225 PUSH1 0x1
0x227 ADD
0x228 PUSH1 0x0
0x22a DUP5
0x22b PUSH1 0x1
0x22d ADD
0x22e PUSH1 0x0
0x230 SWAP1
0x231 SLOAD
0x232 SWAP1
0x233 PUSH2 0x100
0x236 EXP
0x237 SWAP1
0x238 DIV
0x239 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24e AND
0x24f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x264 AND
0x265 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27a AND
0x27b DUP2
0x27c MSTORE
0x27d PUSH1 0x20
0x27f ADD
0x280 SWAP1
0x281 DUP2
0x282 MSTORE
0x283 PUSH1 0x20
0x285 ADD
0x286 PUSH1 0x0
0x288 SHA3
0x289 PUSH1 0x0
0x28b ADD
0x28c SLOAD
0x28d DUP4
0x28e PUSH1 0x6
0x290 ADD
0x291 PUSH1 0x0
0x293 SWAP1
0x294 SLOAD
0x295 SWAP1
0x296 PUSH2 0x100
0x299 EXP
0x29a SWAP1
0x29b DIV
0x29c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b1 AND
0x2b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c7 AND
0x2c8 PUSH4 0x70a08231
0x2cd ADDRESS
0x2ce PUSH1 0x0
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 PUSH1 0x20
0x2d5 ADD
0x2d6 MSTORE
0x2d7 PUSH1 0x40
0x2d9 MLOAD
0x2da DUP3
0x2db PUSH4 0xffffffff
0x2e0 AND
0x2e1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2ff MUL
0x300 DUP2
0x301 MSTORE
0x302 PUSH1 0x4
0x304 ADD
0x305 DUP1
0x306 DUP3
0x307 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31c AND
0x31d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x332 AND
0x333 DUP2
0x334 MSTORE
0x335 PUSH1 0x20
0x337 ADD
0x338 SWAP2
0x339 POP
0x33a POP
0x33b PUSH1 0x20
0x33d PUSH1 0x40
0x33f MLOAD
0x340 DUP1
0x341 DUP4
0x342 SUB
0x343 DUP2
0x344 PUSH1 0x0
0x346 DUP8
0x347 DUP1
0x348 EXTCODESIZE
0x349 ISZERO
0x34a ISZERO
0x34b PUSH2 0x353
0x34e JUMPI
---
0x223: JUMPDEST 
0x225: V143 = 0x1
0x227: V144 = ADD 0x1 V24
0x228: V145 = 0x0
0x22b: V146 = 0x1
0x22d: V147 = ADD 0x1 V27
0x22e: V148 = 0x0
0x231: V149 = S[V147]
0x233: V150 = 0x100
0x236: V151 = EXP 0x100 0x0
0x238: V152 = DIV V149 0x1
0x239: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x24e: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x24f: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x264: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x265: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x27c: M[0x0] = V158
0x27d: V159 = 0x20
0x27f: V160 = ADD 0x20 0x0
0x282: M[0x20] = V144
0x283: V161 = 0x20
0x285: V162 = ADD 0x20 0x20
0x286: V163 = 0x0
0x288: V164 = SHA3 0x0 0x40
0x289: V165 = 0x0
0x28b: V166 = ADD 0x0 V164
0x28c: V167 = S[V166]
0x28e: V168 = 0x6
0x290: V169 = ADD 0x6 V27
0x291: V170 = 0x0
0x294: V171 = S[V169]
0x296: V172 = 0x100
0x299: V173 = EXP 0x100 0x0
0x29b: V174 = DIV V171 0x1
0x29c: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x2b2: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c7: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x2c8: V179 = 0x70a08231
0x2cd: V180 = ADDRESS
0x2ce: V181 = 0x0
0x2d0: V182 = 0x40
0x2d2: V183 = M[0x40]
0x2d3: V184 = 0x20
0x2d5: V185 = ADD 0x20 V183
0x2d6: M[V185] = 0x0
0x2d7: V186 = 0x40
0x2d9: V187 = M[0x40]
0x2db: V188 = 0xffffffff
0x2e0: V189 = AND 0xffffffff 0x70a08231
0x2e1: V190 = 0x100000000000000000000000000000000000000000000000000000000
0x2ff: V191 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x301: M[V187] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x302: V192 = 0x4
0x304: V193 = ADD 0x4 V187
0x307: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x31d: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x332: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x334: M[V193] = V197
0x335: V198 = 0x20
0x337: V199 = ADD 0x20 V193
0x33b: V200 = 0x20
0x33d: V201 = 0x40
0x33f: V202 = M[0x40]
0x342: V203 = SUB V199 V202
0x344: V204 = 0x0
0x348: V205 = EXTCODESIZE V178
0x349: V206 = ISZERO V205
0x34a: V207 = ISZERO V206
0x34b: V208 = 0x353
0x34e: JUMPI 0x353 V207
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, V107]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V167, V178, 0x70a08231, V199, 0x20, V202, V203, V202, 0x0, V178]
Exit stack: [V11, 0x7b, V24, V27, 0x0, V107, V167, V178, 0x70a08231, V199, 0x20, V202, V203, V202, 0x0, V178]

================================

Block 0x34f
[0x34f:0x352]
---
Predecessors: [0x223]
Successors: []
---
0x34f PUSH1 0x0
0x351 DUP1
0x352 REVERT
---
0x34f: V209 = 0x0
0x352: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, V107, V167, V178, 0x70a08231, V199, 0x20, V202, V203, V202, 0x0, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, V107, V167, V178, 0x70a08231, V199, 0x20, V202, V203, V202, 0x0, V178]

================================

Block 0x353
[0x353:0x35f]
---
Predecessors: [0x223]
Successors: [0x360, 0x364]
---
0x353 JUMPDEST
0x354 PUSH2 0x2c6
0x357 GAS
0x358 SUB
0x359 CALL
0x35a ISZERO
0x35b ISZERO
0x35c PUSH2 0x364
0x35f JUMPI
---
0x353: JUMPDEST 
0x354: V210 = 0x2c6
0x357: V211 = GAS
0x358: V212 = SUB V211 0x2c6
0x359: V213 = CALL V212 V178 0x0 V202 V203 V202 0x20
0x35a: V214 = ISZERO V213
0x35b: V215 = ISZERO V214
0x35c: V216 = 0x364
0x35f: JUMPI 0x364 V215
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, V107, V167, V178, 0x70a08231, V199, 0x20, V202, V203, V202, 0x0, V178]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, V107, V167, V178, 0x70a08231, V199]

================================

Block 0x360
[0x360:0x363]
---
Predecessors: [0x353]
Successors: []
---
0x360 PUSH1 0x0
0x362 DUP1
0x363 REVERT
---
0x360: V217 = 0x0
0x363: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, V107, V167, V178, 0x70a08231, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, V107, V167, V178, 0x70a08231, V199]

================================

Block 0x364
[0x364:0x376]
---
Predecessors: [0x353]
Successors: [0x377, 0x37b]
---
0x364 JUMPDEST
0x365 POP
0x366 POP
0x367 POP
0x368 PUSH1 0x40
0x36a MLOAD
0x36b DUP1
0x36c MLOAD
0x36d SWAP1
0x36e POP
0x36f LT
0x370 ISZERO
0x371 ISZERO
0x372 ISZERO
0x373 PUSH2 0x37b
0x376 JUMPI
---
0x364: JUMPDEST 
0x368: V218 = 0x40
0x36a: V219 = M[0x40]
0x36c: V220 = M[V219]
0x36f: V221 = LT V220 V167
0x370: V222 = ISZERO V221
0x371: V223 = ISZERO V222
0x372: V224 = ISZERO V223
0x373: V225 = 0x37b
0x376: JUMPI 0x37b V224
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, V107, V167, V178, 0x70a08231, V199]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, V107]

================================

Block 0x377
[0x377:0x37a]
---
Predecessors: [0x364]
Successors: []
---
0x377 PUSH1 0x0
0x379 DUP1
0x37a REVERT
---
0x377: V226 = 0x0
0x37a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, V107]

================================

Block 0x37b
[0x37b:0x3ed]
---
Predecessors: [0x364]
Successors: [0x950]
---
0x37b JUMPDEST
0x37c PUSH2 0x3ee
0x37f DUP5
0x380 DUP5
0x381 DUP7
0x382 PUSH1 0x1
0x384 ADD
0x385 PUSH1 0x0
0x387 DUP8
0x388 PUSH1 0x1
0x38a ADD
0x38b PUSH1 0x0
0x38d SWAP1
0x38e SLOAD
0x38f SWAP1
0x390 PUSH2 0x100
0x393 EXP
0x394 SWAP1
0x395 DIV
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c1 AND
0x3c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d7 AND
0x3d8 DUP2
0x3d9 MSTORE
0x3da PUSH1 0x20
0x3dc ADD
0x3dd SWAP1
0x3de DUP2
0x3df MSTORE
0x3e0 PUSH1 0x20
0x3e2 ADD
0x3e3 PUSH1 0x0
0x3e5 SHA3
0x3e6 PUSH1 0x0
0x3e8 ADD
0x3e9 SLOAD
0x3ea PUSH2 0x950
0x3ed JUMP
---
0x37b: JUMPDEST 
0x37c: V227 = 0x3ee
0x382: V228 = 0x1
0x384: V229 = ADD 0x1 V24
0x385: V230 = 0x0
0x388: V231 = 0x1
0x38a: V232 = ADD 0x1 V27
0x38b: V233 = 0x0
0x38e: V234 = S[V232]
0x390: V235 = 0x100
0x393: V236 = EXP 0x100 0x0
0x395: V237 = DIV V234 0x1
0x396: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x3ac: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x3c2: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d7: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x3d9: M[0x0] = V243
0x3da: V244 = 0x20
0x3dc: V245 = ADD 0x20 0x0
0x3df: M[0x20] = V229
0x3e0: V246 = 0x20
0x3e2: V247 = ADD 0x20 0x20
0x3e3: V248 = 0x0
0x3e5: V249 = SHA3 0x0 0x40
0x3e6: V250 = 0x0
0x3e8: V251 = ADD 0x0 V249
0x3e9: V252 = S[V251]
0x3ea: V253 = 0x950
0x3ed: JUMP 0x950
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, V107]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x3ee, S3, S2, V252]
Exit stack: [V11, 0x7b, V24, V27, 0x0, V107, 0x3ee, V24, V27, V252]

================================

Block 0x3ee
[0x3ee:0x3f4]
---
Predecessors: [0xc09]
Successors: [0x3f5, 0x3f9]
---
0x3ee JUMPDEST
0x3ef ISZERO
0x3f0 ISZERO
0x3f1 PUSH2 0x3f9
0x3f4 JUMPI
---
0x3ee: JUMPDEST 
0x3ef: V254 = ISZERO S0
0x3f0: V255 = ISZERO V254
0x3f1: V256 = 0x3f9
0x3f4: JUMPI 0x3f9 V255
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S1]

================================

Block 0x3f5
[0x3f5:0x3f8]
---
Predecessors: [0x3ee]
Successors: []
---
0x3f5 PUSH1 0x0
0x3f7 DUP1
0x3f8 REVERT
---
0x3f5: V257 = 0x0
0x3f8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S0]

================================

Block 0x3f9
[0x3f9:0x4bb]
---
Predecessors: [0x3ee]
Successors: [0x4bc, 0x4c0]
---
0x3f9 JUMPDEST
0x3fa DUP3
0x3fb PUSH1 0x2
0x3fd ADD
0x3fe PUSH1 0x0
0x400 SWAP1
0x401 SLOAD
0x402 SWAP1
0x403 PUSH2 0x100
0x406 EXP
0x407 SWAP1
0x408 DIV
0x409 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41e AND
0x41f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x434 AND
0x435 DUP5
0x436 PUSH1 0x1
0x438 ADD
0x439 PUSH1 0x0
0x43b DUP6
0x43c PUSH1 0x1
0x43e ADD
0x43f PUSH1 0x0
0x441 SWAP1
0x442 SLOAD
0x443 SWAP1
0x444 PUSH2 0x100
0x447 EXP
0x448 SWAP1
0x449 DIV
0x44a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45f AND
0x460 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x475 AND
0x476 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48b AND
0x48c DUP2
0x48d MSTORE
0x48e PUSH1 0x20
0x490 ADD
0x491 SWAP1
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x20
0x496 ADD
0x497 PUSH1 0x0
0x499 SHA3
0x49a PUSH1 0x1
0x49c ADD
0x49d SLOAD
0x49e PUSH1 0x40
0x4a0 MLOAD
0x4a1 PUSH1 0x0
0x4a3 PUSH1 0x40
0x4a5 MLOAD
0x4a6 DUP1
0x4a7 DUP4
0x4a8 SUB
0x4a9 DUP2
0x4aa DUP6
0x4ab DUP8
0x4ac PUSH2 0x8796
0x4af GAS
0x4b0 SUB
0x4b1 CALL
0x4b2 SWAP3
0x4b3 POP
0x4b4 POP
0x4b5 POP
0x4b6 ISZERO
0x4b7 ISZERO
0x4b8 PUSH2 0x4c0
0x4bb JUMPI
---
0x3f9: JUMPDEST 
0x3fb: V258 = 0x2
0x3fd: V259 = ADD 0x2 V27
0x3fe: V260 = 0x0
0x401: V261 = S[V259]
0x403: V262 = 0x100
0x406: V263 = EXP 0x100 0x0
0x408: V264 = DIV V261 0x1
0x409: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x41e: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x41f: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x434: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x436: V269 = 0x1
0x438: V270 = ADD 0x1 V24
0x439: V271 = 0x0
0x43c: V272 = 0x1
0x43e: V273 = ADD 0x1 V27
0x43f: V274 = 0x0
0x442: V275 = S[V273]
0x444: V276 = 0x100
0x447: V277 = EXP 0x100 0x0
0x449: V278 = DIV V275 0x1
0x44a: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x45f: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x460: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x475: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x476: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x48b: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x48d: M[0x0] = V284
0x48e: V285 = 0x20
0x490: V286 = ADD 0x20 0x0
0x493: M[0x20] = V270
0x494: V287 = 0x20
0x496: V288 = ADD 0x20 0x20
0x497: V289 = 0x0
0x499: V290 = SHA3 0x0 0x40
0x49a: V291 = 0x1
0x49c: V292 = ADD 0x1 V290
0x49d: V293 = S[V292]
0x49e: V294 = 0x40
0x4a0: V295 = M[0x40]
0x4a1: V296 = 0x0
0x4a3: V297 = 0x40
0x4a5: V298 = M[0x40]
0x4a8: V299 = SUB V295 V298
0x4ac: V300 = 0x8796
0x4af: V301 = GAS
0x4b0: V302 = SUB V301 0x8796
0x4b1: V303 = CALL V302 V268 V293 V298 V299 V298 0x0
0x4b6: V304 = ISZERO V303
0x4b7: V305 = ISZERO V304
0x4b8: V306 = 0x4c0
0x4bb: JUMPI 0x4c0 V305
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x7b, V24, V27, 0x0, S0]

================================

Block 0x4bc
[0x4bc:0x4bf]
---
Predecessors: [0x3f9]
Successors: []
---
0x4bc PUSH1 0x0
0x4be DUP1
0x4bf REVERT
---
0x4bc: V307 = 0x0
0x4bf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S0]

================================

Block 0x4c0
[0x4c0:0x67d]
---
Predecessors: [0x3f9]
Successors: [0x67e, 0x682]
---
0x4c0 JUMPDEST
0x4c1 DUP3
0x4c2 PUSH1 0x6
0x4c4 ADD
0x4c5 PUSH1 0x0
0x4c7 SWAP1
0x4c8 SLOAD
0x4c9 SWAP1
0x4ca PUSH2 0x100
0x4cd EXP
0x4ce SWAP1
0x4cf DIV
0x4d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e5 AND
0x4e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fb AND
0x4fc PUSH4 0x2cb05e07
0x501 DUP5
0x502 PUSH1 0x2
0x504 ADD
0x505 PUSH1 0x0
0x507 SWAP1
0x508 SLOAD
0x509 SWAP1
0x50a PUSH2 0x100
0x50d EXP
0x50e SWAP1
0x50f DIV
0x510 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x525 AND
0x526 DUP7
0x527 PUSH1 0x1
0x529 ADD
0x52a PUSH1 0x0
0x52c DUP8
0x52d PUSH1 0x1
0x52f ADD
0x530 PUSH1 0x0
0x532 SWAP1
0x533 SLOAD
0x534 SWAP1
0x535 PUSH2 0x100
0x538 EXP
0x539 SWAP1
0x53a DIV
0x53b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x550 AND
0x551 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x566 AND
0x567 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57c AND
0x57d DUP2
0x57e MSTORE
0x57f PUSH1 0x20
0x581 ADD
0x582 SWAP1
0x583 DUP2
0x584 MSTORE
0x585 PUSH1 0x20
0x587 ADD
0x588 PUSH1 0x0
0x58a SHA3
0x58b PUSH1 0x0
0x58d ADD
0x58e SLOAD
0x58f DUP8
0x590 PUSH1 0x1
0x592 ADD
0x593 PUSH1 0x0
0x595 DUP9
0x596 PUSH1 0x1
0x598 ADD
0x599 PUSH1 0x0
0x59b SWAP1
0x59c SLOAD
0x59d SWAP1
0x59e PUSH2 0x100
0x5a1 EXP
0x5a2 SWAP1
0x5a3 DIV
0x5a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b9 AND
0x5ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cf AND
0x5d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e5 AND
0x5e6 DUP2
0x5e7 MSTORE
0x5e8 PUSH1 0x20
0x5ea ADD
0x5eb SWAP1
0x5ec DUP2
0x5ed MSTORE
0x5ee PUSH1 0x20
0x5f0 ADD
0x5f1 PUSH1 0x0
0x5f3 SHA3
0x5f4 PUSH1 0x1
0x5f6 ADD
0x5f7 SLOAD
0x5f8 PUSH1 0x40
0x5fa MLOAD
0x5fb DUP5
0x5fc PUSH4 0xffffffff
0x601 AND
0x602 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x620 MUL
0x621 DUP2
0x622 MSTORE
0x623 PUSH1 0x4
0x625 ADD
0x626 DUP1
0x627 DUP5
0x628 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63d AND
0x63e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x653 AND
0x654 DUP2
0x655 MSTORE
0x656 PUSH1 0x20
0x658 ADD
0x659 DUP4
0x65a DUP2
0x65b MSTORE
0x65c PUSH1 0x20
0x65e ADD
0x65f DUP3
0x660 DUP2
0x661 MSTORE
0x662 PUSH1 0x20
0x664 ADD
0x665 SWAP4
0x666 POP
0x667 POP
0x668 POP
0x669 POP
0x66a PUSH1 0x0
0x66c PUSH1 0x40
0x66e MLOAD
0x66f DUP1
0x670 DUP4
0x671 SUB
0x672 DUP2
0x673 PUSH1 0x0
0x675 DUP8
0x676 DUP1
0x677 EXTCODESIZE
0x678 ISZERO
0x679 ISZERO
0x67a PUSH2 0x682
0x67d JUMPI
---
0x4c0: JUMPDEST 
0x4c2: V308 = 0x6
0x4c4: V309 = ADD 0x6 V27
0x4c5: V310 = 0x0
0x4c8: V311 = S[V309]
0x4ca: V312 = 0x100
0x4cd: V313 = EXP 0x100 0x0
0x4cf: V314 = DIV V311 0x1
0x4d0: V315 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e5: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x4e6: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x4fc: V319 = 0x2cb05e07
0x502: V320 = 0x2
0x504: V321 = ADD 0x2 V27
0x505: V322 = 0x0
0x508: V323 = S[V321]
0x50a: V324 = 0x100
0x50d: V325 = EXP 0x100 0x0
0x50f: V326 = DIV V323 0x1
0x510: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x525: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x527: V329 = 0x1
0x529: V330 = ADD 0x1 V24
0x52a: V331 = 0x0
0x52d: V332 = 0x1
0x52f: V333 = ADD 0x1 V27
0x530: V334 = 0x0
0x533: V335 = S[V333]
0x535: V336 = 0x100
0x538: V337 = EXP 0x100 0x0
0x53a: V338 = DIV V335 0x1
0x53b: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x550: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x551: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x566: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x567: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x57c: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x57e: M[0x0] = V344
0x57f: V345 = 0x20
0x581: V346 = ADD 0x20 0x0
0x584: M[0x20] = V330
0x585: V347 = 0x20
0x587: V348 = ADD 0x20 0x20
0x588: V349 = 0x0
0x58a: V350 = SHA3 0x0 0x40
0x58b: V351 = 0x0
0x58d: V352 = ADD 0x0 V350
0x58e: V353 = S[V352]
0x590: V354 = 0x1
0x592: V355 = ADD 0x1 V24
0x593: V356 = 0x0
0x596: V357 = 0x1
0x598: V358 = ADD 0x1 V27
0x599: V359 = 0x0
0x59c: V360 = S[V358]
0x59e: V361 = 0x100
0x5a1: V362 = EXP 0x100 0x0
0x5a3: V363 = DIV V360 0x1
0x5a4: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b9: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x5ba: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cf: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x5d0: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e5: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x5e7: M[0x0] = V369
0x5e8: V370 = 0x20
0x5ea: V371 = ADD 0x20 0x0
0x5ed: M[0x20] = V355
0x5ee: V372 = 0x20
0x5f0: V373 = ADD 0x20 0x20
0x5f1: V374 = 0x0
0x5f3: V375 = SHA3 0x0 0x40
0x5f4: V376 = 0x1
0x5f6: V377 = ADD 0x1 V375
0x5f7: V378 = S[V377]
0x5f8: V379 = 0x40
0x5fa: V380 = M[0x40]
0x5fc: V381 = 0xffffffff
0x601: V382 = AND 0xffffffff 0x2cb05e07
0x602: V383 = 0x100000000000000000000000000000000000000000000000000000000
0x620: V384 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2cb05e07
0x622: M[V380] = 0x2cb05e0700000000000000000000000000000000000000000000000000000000
0x623: V385 = 0x4
0x625: V386 = ADD 0x4 V380
0x628: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x63d: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x63e: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x653: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x655: M[V386] = V390
0x656: V391 = 0x20
0x658: V392 = ADD 0x20 V386
0x65b: M[V392] = V353
0x65c: V393 = 0x20
0x65e: V394 = ADD 0x20 V392
0x661: M[V394] = V378
0x662: V395 = 0x20
0x664: V396 = ADD 0x20 V394
0x66a: V397 = 0x0
0x66c: V398 = 0x40
0x66e: V399 = M[0x40]
0x671: V400 = SUB V396 V399
0x673: V401 = 0x0
0x677: V402 = EXTCODESIZE V318
0x678: V403 = ISZERO V402
0x679: V404 = ISZERO V403
0x67a: V405 = 0x682
0x67d: JUMPI 0x682 V404
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V318, 0x2cb05e07, V396, 0x0, V399, V400, V399, 0x0, V318]
Exit stack: [V11, 0x7b, V24, V27, 0x0, S0, V318, 0x2cb05e07, V396, 0x0, V399, V400, V399, 0x0, V318]

================================

Block 0x67e
[0x67e:0x681]
---
Predecessors: [0x4c0]
Successors: []
---
0x67e PUSH1 0x0
0x680 DUP1
0x681 REVERT
---
0x67e: V406 = 0x0
0x681: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S9, V318, 0x2cb05e07, V396, 0x0, V399, V400, V399, 0x0, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S9, V318, 0x2cb05e07, V396, 0x0, V399, V400, V399, 0x0, V318]

================================

Block 0x682
[0x682:0x68e]
---
Predecessors: [0x4c0]
Successors: [0x68f, 0x693]
---
0x682 JUMPDEST
0x683 PUSH2 0x2c6
0x686 GAS
0x687 SUB
0x688 CALL
0x689 ISZERO
0x68a ISZERO
0x68b PUSH2 0x693
0x68e JUMPI
---
0x682: JUMPDEST 
0x683: V407 = 0x2c6
0x686: V408 = GAS
0x687: V409 = SUB V408 0x2c6
0x688: V410 = CALL V409 V318 0x0 V399 V400 V399 0x0
0x689: V411 = ISZERO V410
0x68a: V412 = ISZERO V411
0x68b: V413 = 0x693
0x68e: JUMPI 0x693 V412
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S9, V318, 0x2cb05e07, V396, 0x0, V399, V400, V399, 0x0, V318]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S9, V318, 0x2cb05e07, V396]

================================

Block 0x68f
[0x68f:0x692]
---
Predecessors: [0x682]
Successors: []
---
0x68f PUSH1 0x0
0x691 DUP1
0x692 REVERT
---
0x68f: V414 = 0x0
0x692: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S3, V318, 0x2cb05e07, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S3, V318, 0x2cb05e07, V396]

================================

Block 0x693
[0x693:0x7de]
---
Predecessors: [0x682]
Successors: [0x7df, 0x7e3]
---
0x693 JUMPDEST
0x694 POP
0x695 POP
0x696 POP
0x697 DUP4
0x698 PUSH1 0x1
0x69a ADD
0x69b PUSH1 0x0
0x69d DUP5
0x69e PUSH1 0x1
0x6a0 ADD
0x6a1 PUSH1 0x0
0x6a3 SWAP1
0x6a4 SLOAD
0x6a5 SWAP1
0x6a6 PUSH2 0x100
0x6a9 EXP
0x6aa SWAP1
0x6ab DIV
0x6ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c1 AND
0x6c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d7 AND
0x6d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ed AND
0x6ee DUP2
0x6ef MSTORE
0x6f0 PUSH1 0x20
0x6f2 ADD
0x6f3 SWAP1
0x6f4 DUP2
0x6f5 MSTORE
0x6f6 PUSH1 0x20
0x6f8 ADD
0x6f9 PUSH1 0x0
0x6fb SHA3
0x6fc PUSH1 0x2
0x6fe ADD
0x6ff SLOAD
0x700 PUSH20 0x3763120a79e4e8b7b9027e7442632a10f51cb901
0x715 PUSH4 0x771602f7
0x71a SWAP1
0x71b SWAP2
0x71c DUP7
0x71d PUSH1 0x1
0x71f ADD
0x720 PUSH1 0x0
0x722 DUP8
0x723 PUSH1 0x1
0x725 ADD
0x726 PUSH1 0x0
0x728 SWAP1
0x729 SLOAD
0x72a SWAP1
0x72b PUSH2 0x100
0x72e EXP
0x72f SWAP1
0x730 DIV
0x731 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x746 AND
0x747 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75c AND
0x75d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x772 AND
0x773 DUP2
0x774 MSTORE
0x775 PUSH1 0x20
0x777 ADD
0x778 SWAP1
0x779 DUP2
0x77a MSTORE
0x77b PUSH1 0x20
0x77d ADD
0x77e PUSH1 0x0
0x780 SHA3
0x781 PUSH1 0x1
0x783 ADD
0x784 SLOAD
0x785 PUSH1 0x0
0x787 PUSH1 0x40
0x789 MLOAD
0x78a PUSH1 0x20
0x78c ADD
0x78d MSTORE
0x78e PUSH1 0x40
0x790 MLOAD
0x791 DUP4
0x792 PUSH4 0xffffffff
0x797 AND
0x798 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7b6 MUL
0x7b7 DUP2
0x7b8 MSTORE
0x7b9 PUSH1 0x4
0x7bb ADD
0x7bc DUP1
0x7bd DUP4
0x7be DUP2
0x7bf MSTORE
0x7c0 PUSH1 0x20
0x7c2 ADD
0x7c3 DUP3
0x7c4 DUP2
0x7c5 MSTORE
0x7c6 PUSH1 0x20
0x7c8 ADD
0x7c9 SWAP3
0x7ca POP
0x7cb POP
0x7cc POP
0x7cd PUSH1 0x20
0x7cf PUSH1 0x40
0x7d1 MLOAD
0x7d2 DUP1
0x7d3 DUP4
0x7d4 SUB
0x7d5 DUP2
0x7d6 DUP7
0x7d7 DUP1
0x7d8 EXTCODESIZE
0x7d9 ISZERO
0x7da ISZERO
0x7db PUSH2 0x7e3
0x7de JUMPI
---
0x693: JUMPDEST 
0x698: V415 = 0x1
0x69a: V416 = ADD 0x1 V24
0x69b: V417 = 0x0
0x69e: V418 = 0x1
0x6a0: V419 = ADD 0x1 V27
0x6a1: V420 = 0x0
0x6a4: V421 = S[V419]
0x6a6: V422 = 0x100
0x6a9: V423 = EXP 0x100 0x0
0x6ab: V424 = DIV V421 0x1
0x6ac: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c1: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x6c2: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d7: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x6d8: V429 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ed: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x6ef: M[0x0] = V430
0x6f0: V431 = 0x20
0x6f2: V432 = ADD 0x20 0x0
0x6f5: M[0x20] = V416
0x6f6: V433 = 0x20
0x6f8: V434 = ADD 0x20 0x20
0x6f9: V435 = 0x0
0x6fb: V436 = SHA3 0x0 0x40
0x6fc: V437 = 0x2
0x6fe: V438 = ADD 0x2 V436
0x6ff: V439 = S[V438]
0x700: V440 = 0x3763120a79e4e8b7b9027e7442632a10f51cb901
0x715: V441 = 0x771602f7
0x71d: V442 = 0x1
0x71f: V443 = ADD 0x1 V24
0x720: V444 = 0x0
0x723: V445 = 0x1
0x725: V446 = ADD 0x1 V27
0x726: V447 = 0x0
0x729: V448 = S[V446]
0x72b: V449 = 0x100
0x72e: V450 = EXP 0x100 0x0
0x730: V451 = DIV V448 0x1
0x731: V452 = 0xffffffffffffffffffffffffffffffffffffffff
0x746: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x747: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x75c: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x75d: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x772: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x774: M[0x0] = V457
0x775: V458 = 0x20
0x777: V459 = ADD 0x20 0x0
0x77a: M[0x20] = V443
0x77b: V460 = 0x20
0x77d: V461 = ADD 0x20 0x20
0x77e: V462 = 0x0
0x780: V463 = SHA3 0x0 0x40
0x781: V464 = 0x1
0x783: V465 = ADD 0x1 V463
0x784: V466 = S[V465]
0x785: V467 = 0x0
0x787: V468 = 0x40
0x789: V469 = M[0x40]
0x78a: V470 = 0x20
0x78c: V471 = ADD 0x20 V469
0x78d: M[V471] = 0x0
0x78e: V472 = 0x40
0x790: V473 = M[0x40]
0x792: V474 = 0xffffffff
0x797: V475 = AND 0xffffffff 0x771602f7
0x798: V476 = 0x100000000000000000000000000000000000000000000000000000000
0x7b6: V477 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x771602f7
0x7b8: M[V473] = 0x771602f700000000000000000000000000000000000000000000000000000000
0x7b9: V478 = 0x4
0x7bb: V479 = ADD 0x4 V473
0x7bf: M[V479] = V439
0x7c0: V480 = 0x20
0x7c2: V481 = ADD 0x20 V479
0x7c5: M[V481] = V466
0x7c6: V482 = 0x20
0x7c8: V483 = ADD 0x20 V481
0x7cd: V484 = 0x20
0x7cf: V485 = 0x40
0x7d1: V486 = M[0x40]
0x7d4: V487 = SUB V483 V486
0x7d8: V488 = EXTCODESIZE 0x3763120a79e4e8b7b9027e7442632a10f51cb901
0x7d9: V489 = ISZERO V488
0x7da: V490 = ISZERO V489
0x7db: V491 = 0x7e3
0x7de: JUMPI 0x7e3 V490
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S3, V318, 0x2cb05e07, V396]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, 0x3763120a79e4e8b7b9027e7442632a10f51cb901, 0x771602f7, V483, 0x20, V486, V487, V486, 0x3763120a79e4e8b7b9027e7442632a10f51cb901]
Exit stack: [V11, 0x7b, V24, V27, 0x0, S3, 0x3763120a79e4e8b7b9027e7442632a10f51cb901, 0x771602f7, V483, 0x20, V486, V487, V486, 0x3763120a79e4e8b7b9027e7442632a10f51cb901]

================================

Block 0x7df
[0x7df:0x7e2]
---
Predecessors: [0x693]
Successors: []
---
0x7df PUSH1 0x0
0x7e1 DUP1
0x7e2 REVERT
---
0x7df: V492 = 0x0
0x7e2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S8, 0x3763120a79e4e8b7b9027e7442632a10f51cb901, 0x771602f7, V483, 0x20, V486, V487, V486, 0x3763120a79e4e8b7b9027e7442632a10f51cb901]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S8, 0x3763120a79e4e8b7b9027e7442632a10f51cb901, 0x771602f7, V483, 0x20, V486, V487, V486, 0x3763120a79e4e8b7b9027e7442632a10f51cb901]

================================

Block 0x7e3
[0x7e3:0x7ef]
---
Predecessors: [0x693]
Successors: [0x7f0, 0x7f4]
---
0x7e3 JUMPDEST
0x7e4 PUSH2 0x2c6
0x7e7 GAS
0x7e8 SUB
0x7e9 DELEGATECALL
0x7ea ISZERO
0x7eb ISZERO
0x7ec PUSH2 0x7f4
0x7ef JUMPI
---
0x7e3: JUMPDEST 
0x7e4: V493 = 0x2c6
0x7e7: V494 = GAS
0x7e8: V495 = SUB V494 0x2c6
0x7e9: V496 = DELEGATECALL V495 0x3763120a79e4e8b7b9027e7442632a10f51cb901 V486 V487 V486 0x20
0x7ea: V497 = ISZERO V496
0x7eb: V498 = ISZERO V497
0x7ec: V499 = 0x7f4
0x7ef: JUMPI 0x7f4 V498
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S8, 0x3763120a79e4e8b7b9027e7442632a10f51cb901, 0x771602f7, V483, 0x20, V486, V487, V486, 0x3763120a79e4e8b7b9027e7442632a10f51cb901]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S8, 0x3763120a79e4e8b7b9027e7442632a10f51cb901, 0x771602f7, V483]

================================

Block 0x7f0
[0x7f0:0x7f3]
---
Predecessors: [0x7e3]
Successors: []
---
0x7f0 PUSH1 0x0
0x7f2 DUP1
0x7f3 REVERT
---
0x7f0: V500 = 0x0
0x7f3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S3, 0x3763120a79e4e8b7b9027e7442632a10f51cb901, 0x771602f7, V483]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S3, 0x3763120a79e4e8b7b9027e7442632a10f51cb901, 0x771602f7, V483]

================================

Block 0x7f4
[0x7f4:0x94f]
---
Predecessors: [0x7e3]
Successors: [0x7b]
---
0x7f4 JUMPDEST
0x7f5 POP
0x7f6 POP
0x7f7 POP
0x7f8 PUSH1 0x40
0x7fa MLOAD
0x7fb DUP1
0x7fc MLOAD
0x7fd SWAP1
0x7fe POP
0x7ff DUP5
0x800 PUSH1 0x1
0x802 ADD
0x803 PUSH1 0x0
0x805 DUP6
0x806 PUSH1 0x1
0x808 ADD
0x809 PUSH1 0x0
0x80b SWAP1
0x80c SLOAD
0x80d SWAP1
0x80e PUSH2 0x100
0x811 EXP
0x812 SWAP1
0x813 DIV
0x814 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x829 AND
0x82a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83f AND
0x840 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x855 AND
0x856 DUP2
0x857 MSTORE
0x858 PUSH1 0x20
0x85a ADD
0x85b SWAP1
0x85c DUP2
0x85d MSTORE
0x85e PUSH1 0x20
0x860 ADD
0x861 PUSH1 0x0
0x863 SHA3
0x864 PUSH1 0x2
0x866 ADD
0x867 DUP2
0x868 SWAP1
0x869 SSTORE
0x86a POP
0x86b PUSH1 0x0
0x86d DUP5
0x86e PUSH1 0x1
0x870 ADD
0x871 PUSH1 0x0
0x873 DUP6
0x874 PUSH1 0x1
0x876 ADD
0x877 PUSH1 0x0
0x879 SWAP1
0x87a SLOAD
0x87b SWAP1
0x87c PUSH2 0x100
0x87f EXP
0x880 SWAP1
0x881 DIV
0x882 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x897 AND
0x898 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ad AND
0x8ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c3 AND
0x8c4 DUP2
0x8c5 MSTORE
0x8c6 PUSH1 0x20
0x8c8 ADD
0x8c9 SWAP1
0x8ca DUP2
0x8cb MSTORE
0x8cc PUSH1 0x20
0x8ce ADD
0x8cf PUSH1 0x0
0x8d1 SHA3
0x8d2 PUSH1 0x1
0x8d4 ADD
0x8d5 DUP2
0x8d6 SWAP1
0x8d7 SSTORE
0x8d8 POP
0x8d9 PUSH1 0x0
0x8db DUP5
0x8dc PUSH1 0x1
0x8de ADD
0x8df PUSH1 0x0
0x8e1 DUP6
0x8e2 PUSH1 0x1
0x8e4 ADD
0x8e5 PUSH1 0x0
0x8e7 SWAP1
0x8e8 SLOAD
0x8e9 SWAP1
0x8ea PUSH2 0x100
0x8ed EXP
0x8ee SWAP1
0x8ef DIV
0x8f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x905 AND
0x906 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91b AND
0x91c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x931 AND
0x932 DUP2
0x933 MSTORE
0x934 PUSH1 0x20
0x936 ADD
0x937 SWAP1
0x938 DUP2
0x939 MSTORE
0x93a PUSH1 0x20
0x93c ADD
0x93d PUSH1 0x0
0x93f SHA3
0x940 PUSH1 0x0
0x942 ADD
0x943 DUP2
0x944 SWAP1
0x945 SSTORE
0x946 POP
0x947 DUP1
0x948 SWAP2
0x949 POP
0x94a POP
0x94b SWAP3
0x94c SWAP2
0x94d POP
0x94e POP
0x94f JUMP
---
0x7f4: JUMPDEST 
0x7f8: V501 = 0x40
0x7fa: V502 = M[0x40]
0x7fc: V503 = M[V502]
0x800: V504 = 0x1
0x802: V505 = ADD 0x1 V24
0x803: V506 = 0x0
0x806: V507 = 0x1
0x808: V508 = ADD 0x1 V27
0x809: V509 = 0x0
0x80c: V510 = S[V508]
0x80e: V511 = 0x100
0x811: V512 = EXP 0x100 0x0
0x813: V513 = DIV V510 0x1
0x814: V514 = 0xffffffffffffffffffffffffffffffffffffffff
0x829: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V513
0x82a: V516 = 0xffffffffffffffffffffffffffffffffffffffff
0x83f: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x840: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x855: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x857: M[0x0] = V519
0x858: V520 = 0x20
0x85a: V521 = ADD 0x20 0x0
0x85d: M[0x20] = V505
0x85e: V522 = 0x20
0x860: V523 = ADD 0x20 0x20
0x861: V524 = 0x0
0x863: V525 = SHA3 0x0 0x40
0x864: V526 = 0x2
0x866: V527 = ADD 0x2 V525
0x869: S[V527] = V503
0x86b: V528 = 0x0
0x86e: V529 = 0x1
0x870: V530 = ADD 0x1 V24
0x871: V531 = 0x0
0x874: V532 = 0x1
0x876: V533 = ADD 0x1 V27
0x877: V534 = 0x0
0x87a: V535 = S[V533]
0x87c: V536 = 0x100
0x87f: V537 = EXP 0x100 0x0
0x881: V538 = DIV V535 0x1
0x882: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x897: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x898: V541 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ad: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V540
0x8ae: V543 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c3: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V542
0x8c5: M[0x0] = V544
0x8c6: V545 = 0x20
0x8c8: V546 = ADD 0x20 0x0
0x8cb: M[0x20] = V530
0x8cc: V547 = 0x20
0x8ce: V548 = ADD 0x20 0x20
0x8cf: V549 = 0x0
0x8d1: V550 = SHA3 0x0 0x40
0x8d2: V551 = 0x1
0x8d4: V552 = ADD 0x1 V550
0x8d7: S[V552] = 0x0
0x8d9: V553 = 0x0
0x8dc: V554 = 0x1
0x8de: V555 = ADD 0x1 V24
0x8df: V556 = 0x0
0x8e2: V557 = 0x1
0x8e4: V558 = ADD 0x1 V27
0x8e5: V559 = 0x0
0x8e8: V560 = S[V558]
0x8ea: V561 = 0x100
0x8ed: V562 = EXP 0x100 0x0
0x8ef: V563 = DIV V560 0x1
0x8f0: V564 = 0xffffffffffffffffffffffffffffffffffffffff
0x905: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V563
0x906: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0x91b: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x91c: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0x931: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x933: M[0x0] = V569
0x934: V570 = 0x20
0x936: V571 = ADD 0x20 0x0
0x939: M[0x20] = V555
0x93a: V572 = 0x20
0x93c: V573 = ADD 0x20 0x20
0x93d: V574 = 0x0
0x93f: V575 = SHA3 0x0 0x40
0x940: V576 = 0x0
0x942: V577 = ADD 0x0 V575
0x945: S[V577] = 0x0
0x94f: JUMP 0x7b
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S3, 0x3763120a79e4e8b7b9027e7442632a10f51cb901, 0x771602f7, V483]
Stack pops: 8
Stack additions: [S3]
Exit stack: [V11, S3]

================================

Block 0x950
[0x950:0x9dd]
---
Predecessors: [0x91, 0x37b]
Successors: [0x9de, 0x9e2]
---
0x950 JUMPDEST
0x951 PUSH1 0x0
0x953 DUP3
0x954 PUSH1 0x6
0x956 ADD
0x957 PUSH1 0x0
0x959 SWAP1
0x95a SLOAD
0x95b SWAP1
0x95c PUSH2 0x100
0x95f EXP
0x960 SWAP1
0x961 DIV
0x962 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x977 AND
0x978 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98d AND
0x98e PUSH4 0x888241d7
0x993 PUSH1 0x0
0x995 PUSH1 0x40
0x997 MLOAD
0x998 PUSH1 0x20
0x99a ADD
0x99b MSTORE
0x99c PUSH1 0x40
0x99e MLOAD
0x99f DUP2
0x9a0 PUSH4 0xffffffff
0x9a5 AND
0x9a6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9c4 MUL
0x9c5 DUP2
0x9c6 MSTORE
0x9c7 PUSH1 0x4
0x9c9 ADD
0x9ca PUSH1 0x20
0x9cc PUSH1 0x40
0x9ce MLOAD
0x9cf DUP1
0x9d0 DUP4
0x9d1 SUB
0x9d2 DUP2
0x9d3 PUSH1 0x0
0x9d5 DUP8
0x9d6 DUP1
0x9d7 EXTCODESIZE
0x9d8 ISZERO
0x9d9 ISZERO
0x9da PUSH2 0x9e2
0x9dd JUMPI
---
0x950: JUMPDEST 
0x951: V578 = 0x0
0x954: V579 = 0x6
0x956: V580 = ADD 0x6 S1
0x957: V581 = 0x0
0x95a: V582 = S[V580]
0x95c: V583 = 0x100
0x95f: V584 = EXP 0x100 0x0
0x961: V585 = DIV V582 0x1
0x962: V586 = 0xffffffffffffffffffffffffffffffffffffffff
0x977: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x978: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0x98d: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0x98e: V590 = 0x888241d7
0x993: V591 = 0x0
0x995: V592 = 0x40
0x997: V593 = M[0x40]
0x998: V594 = 0x20
0x99a: V595 = ADD 0x20 V593
0x99b: M[V595] = 0x0
0x99c: V596 = 0x40
0x99e: V597 = M[0x40]
0x9a0: V598 = 0xffffffff
0x9a5: V599 = AND 0xffffffff 0x888241d7
0x9a6: V600 = 0x100000000000000000000000000000000000000000000000000000000
0x9c4: V601 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x888241d7
0x9c6: M[V597] = 0x888241d700000000000000000000000000000000000000000000000000000000
0x9c7: V602 = 0x4
0x9c9: V603 = ADD 0x4 V597
0x9ca: V604 = 0x20
0x9cc: V605 = 0x40
0x9ce: V606 = M[0x40]
0x9d1: V607 = SUB V603 V606
0x9d3: V608 = 0x0
0x9d7: V609 = EXTCODESIZE V589
0x9d8: V610 = ISZERO V609
0x9d9: V611 = ISZERO V610
0x9da: V612 = 0x9e2
0x9dd: JUMPI 0x9e2 V611
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S4, {0xb9, 0x3ee}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V589, 0x888241d7, V603, 0x20, V606, V607, V606, 0x0, V589]
Exit stack: [V11, 0x7b, V24, V27, 0x0, S4, {0xb9, 0x3ee}, S2, S1, S0, 0x0, V589, 0x888241d7, V603, 0x20, V606, V607, V606, 0x0, V589]

================================

Block 0x9de
[0x9de:0x9e1]
---
Predecessors: [0x950]
Successors: []
---
0x9de PUSH1 0x0
0x9e0 DUP1
0x9e1 REVERT
---
0x9de: V613 = 0x0
0x9e1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V589, 0x888241d7, V603, 0x20, V606, V607, V606, 0x0, V589]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V589, 0x888241d7, V603, 0x20, V606, V607, V606, 0x0, V589]

================================

Block 0x9e2
[0x9e2:0x9ee]
---
Predecessors: [0x950]
Successors: [0x9ef, 0x9f3]
---
0x9e2 JUMPDEST
0x9e3 PUSH2 0x2c6
0x9e6 GAS
0x9e7 SUB
0x9e8 CALL
0x9e9 ISZERO
0x9ea ISZERO
0x9eb PUSH2 0x9f3
0x9ee JUMPI
---
0x9e2: JUMPDEST 
0x9e3: V614 = 0x2c6
0x9e6: V615 = GAS
0x9e7: V616 = SUB V615 0x2c6
0x9e8: V617 = CALL V616 V589 0x0 V606 V607 V606 0x20
0x9e9: V618 = ISZERO V617
0x9ea: V619 = ISZERO V618
0x9eb: V620 = 0x9f3
0x9ee: JUMPI 0x9f3 V619
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V589, 0x888241d7, V603, 0x20, V606, V607, V606, 0x0, V589]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V589, 0x888241d7, V603]

================================

Block 0x9ef
[0x9ef:0x9f2]
---
Predecessors: [0x9e2]
Successors: []
---
0x9ef PUSH1 0x0
0x9f1 DUP1
0x9f2 REVERT
---
0x9ef: V621 = 0x0
0x9f2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, 0x0, S2, 0x888241d7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, 0x0, S2, 0x888241d7, S0]

================================

Block 0x9f3
[0x9f3:0xa03]
---
Predecessors: [0x9e2]
Successors: [0xa04, 0xb1b]
---
0x9f3 JUMPDEST
0x9f4 POP
0x9f5 POP
0x9f6 POP
0x9f7 PUSH1 0x40
0x9f9 MLOAD
0x9fa DUP1
0x9fb MLOAD
0x9fc SWAP1
0x9fd POP
0x9fe ISZERO
0x9ff ISZERO
0xa00 PUSH2 0xb1b
0xa03 JUMPI
---
0x9f3: JUMPDEST 
0x9f7: V622 = 0x40
0x9f9: V623 = M[0x40]
0x9fb: V624 = M[V623]
0x9fe: V625 = ISZERO V624
0x9ff: V626 = ISZERO V625
0xa00: V627 = 0xb1b
0xa03: JUMPI 0xb1b V626
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, 0x0, S2, 0x888241d7, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, 0x0]

================================

Block 0xa04
[0xa04:0xaf1]
---
Predecessors: [0x9f3]
Successors: [0xaf2, 0xaf6]
---
0xa04 DUP3
0xa05 PUSH1 0x6
0xa07 ADD
0xa08 PUSH1 0x0
0xa0a SWAP1
0xa0b SLOAD
0xa0c SWAP1
0xa0d PUSH2 0x100
0xa10 EXP
0xa11 SWAP1
0xa12 DIV
0xa13 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa28 AND
0xa29 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3e AND
0xa3f PUSH4 0xa9059cbb
0xa44 DUP5
0xa45 PUSH1 0x2
0xa47 ADD
0xa48 PUSH1 0x0
0xa4a SWAP1
0xa4b SLOAD
0xa4c SWAP1
0xa4d PUSH2 0x100
0xa50 EXP
0xa51 SWAP1
0xa52 DIV
0xa53 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa68 AND
0xa69 DUP5
0xa6a PUSH1 0x0
0xa6c PUSH1 0x40
0xa6e MLOAD
0xa6f PUSH1 0x20
0xa71 ADD
0xa72 MSTORE
0xa73 PUSH1 0x40
0xa75 MLOAD
0xa76 DUP4
0xa77 PUSH4 0xffffffff
0xa7c AND
0xa7d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa9b MUL
0xa9c DUP2
0xa9d MSTORE
0xa9e PUSH1 0x4
0xaa0 ADD
0xaa1 DUP1
0xaa2 DUP4
0xaa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab8 AND
0xab9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xace AND
0xacf DUP2
0xad0 MSTORE
0xad1 PUSH1 0x20
0xad3 ADD
0xad4 DUP3
0xad5 DUP2
0xad6 MSTORE
0xad7 PUSH1 0x20
0xad9 ADD
0xada SWAP3
0xadb POP
0xadc POP
0xadd POP
0xade PUSH1 0x20
0xae0 PUSH1 0x40
0xae2 MLOAD
0xae3 DUP1
0xae4 DUP4
0xae5 SUB
0xae6 DUP2
0xae7 PUSH1 0x0
0xae9 DUP8
0xaea DUP1
0xaeb EXTCODESIZE
0xaec ISZERO
0xaed ISZERO
0xaee PUSH2 0xaf6
0xaf1 JUMPI
---
0xa05: V628 = 0x6
0xa07: V629 = ADD 0x6 S2
0xa08: V630 = 0x0
0xa0b: V631 = S[V629]
0xa0d: V632 = 0x100
0xa10: V633 = EXP 0x100 0x0
0xa12: V634 = DIV V631 0x1
0xa13: V635 = 0xffffffffffffffffffffffffffffffffffffffff
0xa28: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0xa29: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3e: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V636
0xa3f: V639 = 0xa9059cbb
0xa45: V640 = 0x2
0xa47: V641 = ADD 0x2 S2
0xa48: V642 = 0x0
0xa4b: V643 = S[V641]
0xa4d: V644 = 0x100
0xa50: V645 = EXP 0x100 0x0
0xa52: V646 = DIV V643 0x1
0xa53: V647 = 0xffffffffffffffffffffffffffffffffffffffff
0xa68: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0xa6a: V649 = 0x0
0xa6c: V650 = 0x40
0xa6e: V651 = M[0x40]
0xa6f: V652 = 0x20
0xa71: V653 = ADD 0x20 V651
0xa72: M[V653] = 0x0
0xa73: V654 = 0x40
0xa75: V655 = M[0x40]
0xa77: V656 = 0xffffffff
0xa7c: V657 = AND 0xffffffff 0xa9059cbb
0xa7d: V658 = 0x100000000000000000000000000000000000000000000000000000000
0xa9b: V659 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xa9d: M[V655] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa9e: V660 = 0x4
0xaa0: V661 = ADD 0x4 V655
0xaa3: V662 = 0xffffffffffffffffffffffffffffffffffffffff
0xab8: V663 = AND 0xffffffffffffffffffffffffffffffffffffffff V648
0xab9: V664 = 0xffffffffffffffffffffffffffffffffffffffff
0xace: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V663
0xad0: M[V661] = V665
0xad1: V666 = 0x20
0xad3: V667 = ADD 0x20 V661
0xad6: M[V667] = S1
0xad7: V668 = 0x20
0xad9: V669 = ADD 0x20 V667
0xade: V670 = 0x20
0xae0: V671 = 0x40
0xae2: V672 = M[0x40]
0xae5: V673 = SUB V669 V672
0xae7: V674 = 0x0
0xaeb: V675 = EXTCODESIZE V638
0xaec: V676 = ISZERO V675
0xaed: V677 = ISZERO V676
0xaee: V678 = 0xaf6
0xaf1: JUMPI 0xaf6 V677
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S5, {0xb9, 0x3ee}, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V638, 0xa9059cbb, V669, 0x20, V672, V673, V672, 0x0, V638]
Exit stack: [V11, 0x7b, V24, V27, 0x0, S5, {0xb9, 0x3ee}, S3, S2, S1, 0x0, V638, 0xa9059cbb, V669, 0x20, V672, V673, V672, 0x0, V638]

================================

Block 0xaf2
[0xaf2:0xaf5]
---
Predecessors: [0xa04]
Successors: []
---
0xaf2 PUSH1 0x0
0xaf4 DUP1
0xaf5 REVERT
---
0xaf2: V679 = 0x0
0xaf5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V638, 0xa9059cbb, V669, 0x20, V672, V673, V672, 0x0, V638]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V638, 0xa9059cbb, V669, 0x20, V672, V673, V672, 0x0, V638]

================================

Block 0xaf6
[0xaf6:0xb02]
---
Predecessors: [0xa04]
Successors: [0xb03, 0xb07]
---
0xaf6 JUMPDEST
0xaf7 PUSH2 0x2c6
0xafa GAS
0xafb SUB
0xafc CALL
0xafd ISZERO
0xafe ISZERO
0xaff PUSH2 0xb07
0xb02 JUMPI
---
0xaf6: JUMPDEST 
0xaf7: V680 = 0x2c6
0xafa: V681 = GAS
0xafb: V682 = SUB V681 0x2c6
0xafc: V683 = CALL V682 V638 0x0 V672 V673 V672 0x20
0xafd: V684 = ISZERO V683
0xafe: V685 = ISZERO V684
0xaff: V686 = 0xb07
0xb02: JUMPI 0xb07 V685
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V638, 0xa9059cbb, V669, 0x20, V672, V673, V672, 0x0, V638]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V638, 0xa9059cbb, V669]

================================

Block 0xb03
[0xb03:0xb06]
---
Predecessors: [0xaf6]
Successors: []
---
0xb03 PUSH1 0x0
0xb05 DUP1
0xb06 REVERT
---
0xb03: V687 = 0x0
0xb06: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, 0x0, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, 0x0, S2, 0xa9059cbb, S0]

================================

Block 0xb07
[0xb07:0xb1a]
---
Predecessors: [0xaf6]
Successors: [0xc09]
---
0xb07 JUMPDEST
0xb08 POP
0xb09 POP
0xb0a POP
0xb0b PUSH1 0x40
0xb0d MLOAD
0xb0e DUP1
0xb0f MLOAD
0xb10 SWAP1
0xb11 POP
0xb12 POP
0xb13 PUSH1 0x1
0xb15 SWAP1
0xb16 POP
0xb17 PUSH2 0xc09
0xb1a JUMP
---
0xb07: JUMPDEST 
0xb0b: V688 = 0x40
0xb0d: V689 = M[0x40]
0xb0f: V690 = M[V689]
0xb13: V691 = 0x1
0xb17: V692 = 0xc09
0xb1a: JUMP 0xc09
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, 0x0, S2, 0xa9059cbb, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, 0x1]

================================

Block 0xb1b
[0xb1b:0xbe6]
---
Predecessors: [0x9f3]
Successors: [0xbe7, 0xbeb]
---
0xb1b JUMPDEST
0xb1c DUP3
0xb1d PUSH1 0x6
0xb1f ADD
0xb20 PUSH1 0x0
0xb22 SWAP1
0xb23 SLOAD
0xb24 SWAP1
0xb25 PUSH2 0x100
0xb28 EXP
0xb29 SWAP1
0xb2a DIV
0xb2b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb40 AND
0xb41 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb56 AND
0xb57 PUSH4 0xa9059cbb
0xb5c PUSH1 0x0
0xb5e DUP5
0xb5f PUSH1 0x0
0xb61 PUSH1 0x40
0xb63 MLOAD
0xb64 PUSH1 0x20
0xb66 ADD
0xb67 MSTORE
0xb68 PUSH1 0x40
0xb6a MLOAD
0xb6b DUP4
0xb6c PUSH4 0xffffffff
0xb71 AND
0xb72 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb90 MUL
0xb91 DUP2
0xb92 MSTORE
0xb93 PUSH1 0x4
0xb95 ADD
0xb96 DUP1
0xb97 DUP4
0xb98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbad AND
0xbae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc3 AND
0xbc4 DUP2
0xbc5 MSTORE
0xbc6 PUSH1 0x20
0xbc8 ADD
0xbc9 DUP3
0xbca DUP2
0xbcb MSTORE
0xbcc PUSH1 0x20
0xbce ADD
0xbcf SWAP3
0xbd0 POP
0xbd1 POP
0xbd2 POP
0xbd3 PUSH1 0x20
0xbd5 PUSH1 0x40
0xbd7 MLOAD
0xbd8 DUP1
0xbd9 DUP4
0xbda SUB
0xbdb DUP2
0xbdc PUSH1 0x0
0xbde DUP8
0xbdf DUP1
0xbe0 EXTCODESIZE
0xbe1 ISZERO
0xbe2 ISZERO
0xbe3 PUSH2 0xbeb
0xbe6 JUMPI
---
0xb1b: JUMPDEST 
0xb1d: V693 = 0x6
0xb1f: V694 = ADD 0x6 S2
0xb20: V695 = 0x0
0xb23: V696 = S[V694]
0xb25: V697 = 0x100
0xb28: V698 = EXP 0x100 0x0
0xb2a: V699 = DIV V696 0x1
0xb2b: V700 = 0xffffffffffffffffffffffffffffffffffffffff
0xb40: V701 = AND 0xffffffffffffffffffffffffffffffffffffffff V699
0xb41: V702 = 0xffffffffffffffffffffffffffffffffffffffff
0xb56: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff V701
0xb57: V704 = 0xa9059cbb
0xb5c: V705 = 0x0
0xb5f: V706 = 0x0
0xb61: V707 = 0x40
0xb63: V708 = M[0x40]
0xb64: V709 = 0x20
0xb66: V710 = ADD 0x20 V708
0xb67: M[V710] = 0x0
0xb68: V711 = 0x40
0xb6a: V712 = M[0x40]
0xb6c: V713 = 0xffffffff
0xb71: V714 = AND 0xffffffff 0xa9059cbb
0xb72: V715 = 0x100000000000000000000000000000000000000000000000000000000
0xb90: V716 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xb92: M[V712] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb93: V717 = 0x4
0xb95: V718 = ADD 0x4 V712
0xb98: V719 = 0xffffffffffffffffffffffffffffffffffffffff
0xbad: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xbae: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc3: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xbc5: M[V718] = 0x0
0xbc6: V723 = 0x20
0xbc8: V724 = ADD 0x20 V718
0xbcb: M[V724] = S1
0xbcc: V725 = 0x20
0xbce: V726 = ADD 0x20 V724
0xbd3: V727 = 0x20
0xbd5: V728 = 0x40
0xbd7: V729 = M[0x40]
0xbda: V730 = SUB V726 V729
0xbdc: V731 = 0x0
0xbe0: V732 = EXTCODESIZE V703
0xbe1: V733 = ISZERO V732
0xbe2: V734 = ISZERO V733
0xbe3: V735 = 0xbeb
0xbe6: JUMPI 0xbeb V734
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S5, {0xb9, 0x3ee}, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V703, 0xa9059cbb, V726, 0x20, V729, V730, V729, 0x0, V703]
Exit stack: [V11, 0x7b, V24, V27, 0x0, S5, {0xb9, 0x3ee}, S3, S2, S1, 0x0, V703, 0xa9059cbb, V726, 0x20, V729, V730, V729, 0x0, V703]

================================

Block 0xbe7
[0xbe7:0xbea]
---
Predecessors: [0xb1b]
Successors: []
---
0xbe7 PUSH1 0x0
0xbe9 DUP1
0xbea REVERT
---
0xbe7: V736 = 0x0
0xbea: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V703, 0xa9059cbb, V726, 0x20, V729, V730, V729, 0x0, V703]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V703, 0xa9059cbb, V726, 0x20, V729, V730, V729, 0x0, V703]

================================

Block 0xbeb
[0xbeb:0xbf7]
---
Predecessors: [0xb1b]
Successors: [0xbf8, 0xbfc]
---
0xbeb JUMPDEST
0xbec PUSH2 0x2c6
0xbef GAS
0xbf0 SUB
0xbf1 CALL
0xbf2 ISZERO
0xbf3 ISZERO
0xbf4 PUSH2 0xbfc
0xbf7 JUMPI
---
0xbeb: JUMPDEST 
0xbec: V737 = 0x2c6
0xbef: V738 = GAS
0xbf0: V739 = SUB V738 0x2c6
0xbf1: V740 = CALL V739 V703 0x0 V729 V730 V729 0x20
0xbf2: V741 = ISZERO V740
0xbf3: V742 = ISZERO V741
0xbf4: V743 = 0xbfc
0xbf7: JUMPI 0xbfc V742
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V703, 0xa9059cbb, V726, 0x20, V729, V730, V729, 0x0, V703]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S14, {0xb9, 0x3ee}, S12, S11, S10, 0x0, V703, 0xa9059cbb, V726]

================================

Block 0xbf8
[0xbf8:0xbfb]
---
Predecessors: [0xbeb]
Successors: []
---
0xbf8 PUSH1 0x0
0xbfa DUP1
0xbfb REVERT
---
0xbf8: V744 = 0x0
0xbfb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, 0x0, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, 0x0, S2, 0xa9059cbb, S0]

================================

Block 0xbfc
[0xbfc:0xc08]
---
Predecessors: [0xbeb]
Successors: [0xc09]
---
0xbfc JUMPDEST
0xbfd POP
0xbfe POP
0xbff POP
0xc00 PUSH1 0x40
0xc02 MLOAD
0xc03 DUP1
0xc04 MLOAD
0xc05 SWAP1
0xc06 POP
0xc07 SWAP1
0xc08 POP
---
0xbfc: JUMPDEST 
0xc00: V745 = 0x40
0xc02: V746 = M[0x40]
0xc04: V747 = M[V746]
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, 0x0, S2, 0xa9059cbb, S0]
Stack pops: 4
Stack additions: [V747]
Exit stack: [V11, 0x7b, V24, V27, 0x0, S8, {0xb9, 0x3ee}, S6, S5, S4, V747]

================================

Block 0xc09
[0xc09:0xc0f]
---
Predecessors: [0xb07, 0xbfc]
Successors: [0xb9, 0x3ee]
---
0xc09 JUMPDEST
0xc0a SWAP4
0xc0b SWAP3
0xc0c POP
0xc0d POP
0xc0e POP
0xc0f JUMP
---
0xc09: JUMPDEST 
0xc0f: JUMP {0xb9, 0x3ee}
---
Entry stack: [V11, 0x7b, V24, V27, 0x0, S5, {0xb9, 0x3ee}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x7b, V24, V27, 0x0, S5, S0]

================================

Block 0xc10
[0xc10:0xc1a]
---
Predecessors: [0xd3]
Successors: [0xc1b, 0xc36]
---
0xc10 JUMPDEST
0xc11 PUSH1 0x0
0xc13 DUP1
0xc14 DUP4
0xc15 EQ
0xc16 DUP1
0xc17 PUSH2 0xc36
0xc1a JUMPI
---
0xc10: JUMPDEST 
0xc11: V748 = 0x0
0xc15: V749 = EQ V66 0x0
0xc17: V750 = 0xc36
0xc1a: JUMPI 0xc36 V749
---
Entry stack: [V11, 0x111, V63, V66, V71]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V749]
Exit stack: [V11, 0x111, V63, V66, V71, 0x0, V749]

================================

Block 0xc1b
[0xc1b:0xc35]
---
Predecessors: [0xc10]
Successors: [0xc36]
---
0xc1b POP
0xc1c DUP3
0xc1d ADDRESS
0xc1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc33 AND
0xc34 BALANCE
0xc35 LT
---
0xc1d: V751 = ADDRESS
0xc1e: V752 = 0xffffffffffffffffffffffffffffffffffffffff
0xc33: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0xc34: V754 = BALANCE V753
0xc35: V755 = LT V754 V66
---
Entry stack: [V11, 0x111, V63, V66, V71, 0x0, V749]
Stack pops: 4
Stack additions: [S3, S2, S1, V755]
Exit stack: [V11, 0x111, V63, V66, V71, 0x0, V755]

================================

Block 0xc36
[0xc36:0xc3b]
---
Predecessors: [0xc10, 0xc1b]
Successors: [0xc3c, 0xc44]
---
0xc36 JUMPDEST
0xc37 ISZERO
0xc38 PUSH2 0xc44
0xc3b JUMPI
---
0xc36: JUMPDEST 
0xc37: V756 = ISZERO S0
0xc38: V757 = 0xc44
0xc3b: JUMPI 0xc44 V756
---
Entry stack: [V11, 0x111, V63, V66, V71, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x111, V63, V66, V71, 0x0]

================================

Block 0xc3c
[0xc3c:0xc43]
---
Predecessors: [0xc36]
Successors: [0xc83]
---
0xc3c PUSH1 0x0
0xc3e SWAP1
0xc3f POP
0xc40 PUSH2 0xc83
0xc43 JUMP
---
0xc3c: V758 = 0x0
0xc40: V759 = 0xc83
0xc43: JUMP 0xc83
---
Entry stack: [V11, 0x111, V63, V66, V71, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x111, V63, V66, V71, 0x0]

================================

Block 0xc44
[0xc44:0xc7a]
---
Predecessors: [0xc36]
Successors: [0xc7b, 0xc7f]
---
0xc44 JUMPDEST
0xc45 DUP2
0xc46 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5b AND
0xc5c DUP4
0xc5d PUSH1 0x40
0xc5f MLOAD
0xc60 PUSH1 0x0
0xc62 PUSH1 0x40
0xc64 MLOAD
0xc65 DUP1
0xc66 DUP4
0xc67 SUB
0xc68 DUP2
0xc69 DUP6
0xc6a DUP8
0xc6b PUSH2 0x8796
0xc6e GAS
0xc6f SUB
0xc70 CALL
0xc71 SWAP3
0xc72 POP
0xc73 POP
0xc74 POP
0xc75 ISZERO
0xc76 ISZERO
0xc77 PUSH2 0xc7f
0xc7a JUMPI
---
0xc44: JUMPDEST 
0xc46: V760 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5b: V761 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0xc5d: V762 = 0x40
0xc5f: V763 = M[0x40]
0xc60: V764 = 0x0
0xc62: V765 = 0x40
0xc64: V766 = M[0x40]
0xc67: V767 = SUB V763 V766
0xc6b: V768 = 0x8796
0xc6e: V769 = GAS
0xc6f: V770 = SUB V769 0x8796
0xc70: V771 = CALL V770 V761 V66 V766 V767 V766 0x0
0xc75: V772 = ISZERO V771
0xc76: V773 = ISZERO V772
0xc77: V774 = 0xc7f
0xc7a: JUMPI 0xc7f V773
---
Entry stack: [V11, 0x111, V63, V66, V71, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x111, V63, V66, V71, 0x0]

================================

Block 0xc7b
[0xc7b:0xc7e]
---
Predecessors: [0xc44]
Successors: []
---
0xc7b PUSH1 0x0
0xc7d DUP1
0xc7e REVERT
---
0xc7b: V775 = 0x0
0xc7e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, V63, V66, V71, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V63, V66, V71, 0x0]

================================

Block 0xc7f
[0xc7f:0xc82]
---
Predecessors: [0xc44]
Successors: [0xc83]
---
0xc7f JUMPDEST
0xc80 DUP3
0xc81 SWAP1
0xc82 POP
---
0xc7f: JUMPDEST 
---
Entry stack: [V11, 0x111, V63, V66, V71, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V11, 0x111, V63, V66, V71, V66]

================================

Block 0xc83
[0xc83:0xc89]
---
Predecessors: [0xc3c, 0xc7f]
Successors: [0x111]
---
0xc83 JUMPDEST
0xc84 SWAP4
0xc85 SWAP3
0xc86 POP
0xc87 POP
0xc88 POP
0xc89 JUMP
---
0xc83: JUMPDEST 
0xc89: JUMP 0x111
---
Entry stack: [V11, 0x111, V63, V66, V71, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0xc8a
[0xc8a:0xc96]
---
Predecessors: []
Successors: [0xc97]
Has unresolved jump.
---
0xc8a STOP
0xc8b LOG1
0xc8c PUSH6 0x627a7a723058
0xc93 SHA3
0xc94 MISSING 0xcc
0xc95 GASPRICE
0xc96 JUMPI
---
0xc8a: STOP 
0xc8b: LOG S0 S1 S2
0xc8c: V776 = 0x627a7a723058
0xc93: V777 = SHA3 0x627a7a723058 S3
0xc94: MISSING 0xcc
0xc95: V778 = GASPRICE
0xc96: JUMPI V778 S0
---
Entry stack: []
Stack pops: 0
Stack additions: [V777]
Exit stack: []

================================

Block 0xc97
[0xc97:0xcbe]
---
Predecessors: [0xc8a]
Successors: []
---
0xc97 MISSING 0x4f
0xc98 EXTCODEHASH
0xc99 PUSH13 0x35ac034be18d2d5c27c4b9cd8
0xca7 TIMESTAMP
0xca8 MISSING 0x2b
0xca9 DUP1
0xcaa MISSING 0x49
0xcab PUSH19 0x10fcac1973325f860029
---
0xc97: MISSING 0x4f
0xc98: V779 = EXTCODEHASH S0
0xc99: V780 = 0x35ac034be18d2d5c27c4b9cd8
0xca7: V781 = TIMESTAMP
0xca8: MISSING 0x2b
0xcaa: MISSING 0x49
0xcab: V782 = 0x10fcac1973325f860029
---
Entry stack: []
Stack pops: 0
Stack additions: [V781, 0x35ac034be18d2d5c27c4b9cd8, V779, S0, S0, 0x10fcac1973325f860029]
Exit stack: []

================================

Function 0:
Public function signature: 0x31143f2b
Entry block: 0x5c
Exit block: 0x7b
Body: 0x5c, 0x7b, 0x127, 0x21f, 0x223, 0x34f, 0x353, 0x360, 0x364, 0x377, 0x37b, 0x3ee, 0x3f5, 0x3f9, 0x4bc, 0x4c0, 0x67e, 0x682, 0x68f, 0x693, 0x7df, 0x7e3, 0x7f0, 0x7f4

Function 1:
Public function signature: 0x6894d85d
Entry block: 0x91
Exit block: 0xb9
Body: 0x91, 0xb9

Function 2:
Public function signature: 0xfd6f69a9
Entry block: 0xd3
Exit block: 0x111
Body: 0xd3, 0x111, 0xc10, 0xc1b, 0xc36, 0xc3c, 0xc44, 0xc7b, 0xc7f, 0xc83

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

Function 4:
Private function
Entry block: 0x950
Exit block: 0xc09
Body: 0x950, 0x9e2, 0x9f3, 0xa04, 0xaf6, 0xb07, 0xb1b, 0xbeb, 0xbfc, 0xc09

