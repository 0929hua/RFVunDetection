Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x837e7cc6
0x3c EQ
0x3d PUSH2 0x6c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x837e7cc6
0x3c: V13 = EQ 0x837e7cc6 V11
0x3d: V14 = 0x6c
0x40: JUMPI 0x6c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x76]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x76
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x76
0x4b: JUMPI 0x76 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xcb]
---
0x4c DUP1
0x4d PUSH4 0xe5225381
0x52 EQ
0x53 PUSH2 0xcb
0x56 JUMPI
---
0x4d: V18 = 0xe5225381
0x52: V19 = EQ 0xe5225381 V11
0x53: V20 = 0xcb
0x56: JUMPI 0xcb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe0]
---
0x57 DUP1
0x58 PUSH4 0xf2fde38b
0x5d EQ
0x5e PUSH2 0xe0
0x61 JUMPI
---
0x58: V21 = 0xf2fde38b
0x5d: V22 = EQ 0xf2fde38b V11
0x5e: V23 = 0xe0
0x61: JUMPI 0xe0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x69]
---
Predecessors: [0x0, 0x57]
Successors: [0x119]
---
0x62 JUMPDEST
0x63 PUSH2 0x6a
0x66 PUSH2 0x119
0x69 JUMP
---
0x62: JUMPDEST 
0x63: V24 = 0x6a
0x66: V25 = 0x119
0x69: JUMP 0x119
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6a]
Exit stack: [V11, 0x6a]

================================

Block 0x6a
[0x6a:0x6b]
---
Predecessors: [0x338]
Successors: []
---
0x6a JUMPDEST
0x6b STOP
---
0x6a: JUMPDEST 
0x6b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x73]
---
Predecessors: [0xd]
Successors: [0x119]
---
0x6c JUMPDEST
0x6d PUSH2 0x74
0x70 PUSH2 0x119
0x73 JUMP
---
0x6c: JUMPDEST 
0x6d: V26 = 0x74
0x70: V27 = 0x119
0x73: JUMP 0x119
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x74]
Exit stack: [V11, 0x74]

================================

Block 0x74
[0x74:0x75]
---
Predecessors: [0x338]
Successors: []
---
0x74 JUMPDEST
0x75 STOP
---
0x74: JUMPDEST 
0x75: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x7c]
---
Predecessors: [0x41]
Successors: [0x7d, 0x81]
---
0x76 JUMPDEST
0x77 CALLVALUE
0x78 ISZERO
0x79 PUSH2 0x81
0x7c JUMPI
---
0x76: JUMPDEST 
0x77: V28 = CALLVALUE
0x78: V29 = ISZERO V28
0x79: V30 = 0x81
0x7c: JUMPI 0x81 V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x76]
Successors: []
---
0x7d PUSH1 0x0
0x7f DUP1
0x80 REVERT
---
0x7d: V31 = 0x0
0x80: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x88]
---
Predecessors: [0x76]
Successors: [0x33d]
---
0x81 JUMPDEST
0x82 PUSH2 0x89
0x85 PUSH2 0x33d
0x88 JUMP
---
0x81: JUMPDEST 
0x82: V32 = 0x89
0x85: V33 = 0x33d
0x88: JUMP 0x33d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x89]
Exit stack: [V11, 0x89]

================================

Block 0x89
[0x89:0xca]
---
Predecessors: [0x33d]
Successors: []
---
0x89 JUMPDEST
0x8a PUSH1 0x40
0x8c MLOAD
0x8d DUP1
0x8e DUP3
0x8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4 AND
0xa5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba AND
0xbb DUP2
0xbc MSTORE
0xbd PUSH1 0x20
0xbf ADD
0xc0 SWAP2
0xc1 POP
0xc2 POP
0xc3 PUSH1 0x40
0xc5 MLOAD
0xc6 DUP1
0xc7 SWAP2
0xc8 SUB
0xc9 SWAP1
0xca RETURN
---
0x89: JUMPDEST 
0x8a: V34 = 0x40
0x8c: V35 = M[0x40]
0x8f: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0xa5: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xba: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xbc: M[V35] = V39
0xbd: V40 = 0x20
0xbf: V41 = ADD 0x20 V35
0xc3: V42 = 0x40
0xc5: V43 = M[0x40]
0xc8: V44 = SUB V41 V43
0xca: RETURN V43 V44
---
Entry stack: [V11, 0x89, V215]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x89]

================================

Block 0xcb
[0xcb:0xd1]
---
Predecessors: [0x4c]
Successors: [0xd2, 0xd6]
---
0xcb JUMPDEST
0xcc CALLVALUE
0xcd ISZERO
0xce PUSH2 0xd6
0xd1 JUMPI
---
0xcb: JUMPDEST 
0xcc: V45 = CALLVALUE
0xcd: V46 = ISZERO V45
0xce: V47 = 0xd6
0xd1: JUMPI 0xd6 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd2
[0xd2:0xd5]
---
Predecessors: [0xcb]
Successors: []
---
0xd2 PUSH1 0x0
0xd4 DUP1
0xd5 REVERT
---
0xd2: V48 = 0x0
0xd5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xdd]
---
Predecessors: [0xcb]
Successors: [0x362]
---
0xd6 JUMPDEST
0xd7 PUSH2 0xde
0xda PUSH2 0x362
0xdd JUMP
---
0xd6: JUMPDEST 
0xd7: V49 = 0xde
0xda: V50 = 0x362
0xdd: JUMP 0x362
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: [0x3de]
Successors: []
---
0xde JUMPDEST
0xdf STOP
---
0xde: JUMPDEST 
0xdf: STOP 
---
Entry stack: [V11, {0x6a, 0x74}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, S1, S0]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0x57]
Successors: [0xe7, 0xeb]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V51 = CALLVALUE
0xe2: V52 = ISZERO V51
0xe3: V53 = 0xeb
0xe6: JUMPI 0xeb V52
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V54 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0x116]
---
Predecessors: [0xe0]
Successors: [0x3e0]
---
0xeb JUMPDEST
0xec PUSH2 0x117
0xef PUSH1 0x4
0xf1 DUP1
0xf2 DUP1
0xf3 CALLDATALOAD
0xf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109 AND
0x10a SWAP1
0x10b PUSH1 0x20
0x10d ADD
0x10e SWAP1
0x10f SWAP2
0x110 SWAP1
0x111 POP
0x112 POP
0x113 PUSH2 0x3e0
0x116 JUMP
---
0xeb: JUMPDEST 
0xec: V55 = 0x117
0xef: V56 = 0x4
0xf3: V57 = CALLDATALOAD 0x4
0xf4: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x109: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x10b: V60 = 0x20
0x10d: V61 = ADD 0x20 0x4
0x113: V62 = 0x3e0
0x116: JUMP 0x3e0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x117, V59]
Exit stack: [V11, 0x117, V59]

================================

Block 0x117
[0x117:0x118]
---
Predecessors: [0x4b2]
Successors: []
---
0x117 JUMPDEST
0x118 STOP
---
0x117: JUMPDEST 
0x118: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x119
[0x119:0x12f]
---
Predecessors: [0x62, 0x6c]
Successors: [0x130, 0x131]
---
0x119 JUMPDEST
0x11a PUSH1 0x0
0x11c DUP1
0x11d PUSH1 0x0
0x11f PUSH7 0x2386f26fc10000
0x127 CALLVALUE
0x128 LT
0x129 ISZERO
0x12a ISZERO
0x12b ISZERO
0x12c PUSH2 0x131
0x12f JUMPI
---
0x119: JUMPDEST 
0x11a: V63 = 0x0
0x11d: V64 = 0x0
0x11f: V65 = 0x2386f26fc10000
0x127: V66 = CALLVALUE
0x128: V67 = LT V66 0x2386f26fc10000
0x129: V68 = ISZERO V67
0x12a: V69 = ISZERO V68
0x12b: V70 = ISZERO V69
0x12c: V71 = 0x131
0x12f: JUMPI 0x131 V70
---
Entry stack: [V11, {0x6a, 0x74}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]

================================

Block 0x130
[0x130:0x130]
---
Predecessors: [0x119]
Successors: []
---
0x130 INVALID
---
0x130: INVALID 
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]

================================

Block 0x131
[0x131:0x143]
---
Predecessors: [0x119]
Successors: [0x144, 0x145]
---
0x131 JUMPDEST
0x132 PUSH8 0xde0b6b3a7640000
0x13b CALLVALUE
0x13c GT
0x13d ISZERO
0x13e ISZERO
0x13f ISZERO
0x140 PUSH2 0x145
0x143 JUMPI
---
0x131: JUMPDEST 
0x132: V72 = 0xde0b6b3a7640000
0x13b: V73 = CALLVALUE
0x13c: V74 = GT V73 0xde0b6b3a7640000
0x13d: V75 = ISZERO V74
0x13e: V76 = ISZERO V75
0x13f: V77 = ISZERO V76
0x140: V78 = 0x145
0x143: JUMPI 0x145 V77
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]

================================

Block 0x144
[0x144:0x144]
---
Predecessors: [0x131]
Successors: []
---
0x144 INVALID
---
0x144: INVALID 
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]

================================

Block 0x145
[0x145:0x186]
---
Predecessors: [0x131]
Successors: [0x187, 0x1d3]
---
0x145 JUMPDEST
0x146 PUSH1 0x0
0x148 PUSH1 0x2
0x14a PUSH1 0x0
0x14c SWAP1
0x14d SLOAD
0x14e SWAP1
0x14f PUSH2 0x100
0x152 EXP
0x153 SWAP1
0x154 DIV
0x155 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16a AND
0x16b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x180 AND
0x181 EQ
0x182 ISZERO
0x183 PUSH2 0x1d3
0x186 JUMPI
---
0x145: JUMPDEST 
0x146: V79 = 0x0
0x148: V80 = 0x2
0x14a: V81 = 0x0
0x14d: V82 = S[0x2]
0x14f: V83 = 0x100
0x152: V84 = EXP 0x100 0x0
0x154: V85 = DIV V82 0x1
0x155: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x16a: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x16b: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x180: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x181: V90 = EQ V89 0x0
0x182: V91 = ISZERO V90
0x183: V92 = 0x1d3
0x186: JUMPI 0x1d3 V91
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]

================================

Block 0x187
[0x187:0x1d2]
---
Predecessors: [0x145]
Successors: [0x338]
---
0x187 CALLER
0x188 PUSH1 0x2
0x18a PUSH1 0x0
0x18c PUSH2 0x100
0x18f EXP
0x190 DUP2
0x191 SLOAD
0x192 DUP2
0x193 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a8 MUL
0x1a9 NOT
0x1aa AND
0x1ab SWAP1
0x1ac DUP4
0x1ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c2 AND
0x1c3 MUL
0x1c4 OR
0x1c5 SWAP1
0x1c6 SSTORE
0x1c7 POP
0x1c8 CALLVALUE
0x1c9 PUSH1 0x3
0x1cb DUP2
0x1cc SWAP1
0x1cd SSTORE
0x1ce POP
0x1cf PUSH2 0x338
0x1d2 JUMP
---
0x187: V93 = CALLER
0x188: V94 = 0x2
0x18a: V95 = 0x0
0x18c: V96 = 0x100
0x18f: V97 = EXP 0x100 0x0
0x191: V98 = S[0x2]
0x193: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a8: V100 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1a9: V101 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V102 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V98
0x1ad: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1c3: V105 = MUL V104 0x1
0x1c4: V106 = OR V105 V102
0x1c6: S[0x2] = V106
0x1c8: V107 = CALLVALUE
0x1c9: V108 = 0x3
0x1cd: S[0x3] = V107
0x1cf: V109 = 0x338
0x1d2: JUMP 0x338
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]

================================

Block 0x1d3
[0x1d3:0x265]
---
Predecessors: [0x145]
Successors: [0x266, 0x26a]
---
0x1d3 JUMPDEST
0x1d4 CALLVALUE
0x1d5 PUSH1 0x3
0x1d7 SLOAD
0x1d8 ADD
0x1d9 SWAP2
0x1da POP
0x1db PUSH1 0x1
0x1dd PUSH1 0x0
0x1df SWAP1
0x1e0 SLOAD
0x1e1 SWAP1
0x1e2 PUSH2 0x100
0x1e5 EXP
0x1e6 SWAP1
0x1e7 DIV
0x1e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fd AND
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 PUSH4 0xb863bd37
0x219 DUP4
0x21a PUSH1 0x40
0x21c MLOAD
0x21d DUP3
0x21e PUSH4 0xffffffff
0x223 AND
0x224 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x242 MUL
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x4
0x247 ADD
0x248 DUP1
0x249 DUP3
0x24a DUP2
0x24b MSTORE
0x24c PUSH1 0x20
0x24e ADD
0x24f SWAP2
0x250 POP
0x251 POP
0x252 PUSH1 0x20
0x254 PUSH1 0x40
0x256 MLOAD
0x257 DUP1
0x258 DUP4
0x259 SUB
0x25a DUP2
0x25b PUSH1 0x0
0x25d DUP8
0x25e DUP1
0x25f EXTCODESIZE
0x260 ISZERO
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V110 = CALLVALUE
0x1d5: V111 = 0x3
0x1d7: V112 = S[0x3]
0x1d8: V113 = ADD V112 V110
0x1db: V114 = 0x1
0x1dd: V115 = 0x0
0x1e0: V116 = S[0x1]
0x1e2: V117 = 0x100
0x1e5: V118 = EXP 0x100 0x0
0x1e7: V119 = DIV V116 0x1
0x1e8: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x1fe: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x214: V124 = 0xb863bd37
0x21a: V125 = 0x40
0x21c: V126 = M[0x40]
0x21e: V127 = 0xffffffff
0x223: V128 = AND 0xffffffff 0xb863bd37
0x224: V129 = 0x100000000000000000000000000000000000000000000000000000000
0x242: V130 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb863bd37
0x244: M[V126] = 0xb863bd3700000000000000000000000000000000000000000000000000000000
0x245: V131 = 0x4
0x247: V132 = ADD 0x4 V126
0x24b: M[V132] = V113
0x24c: V133 = 0x20
0x24e: V134 = ADD 0x20 V132
0x252: V135 = 0x20
0x254: V136 = 0x40
0x256: V137 = M[0x40]
0x259: V138 = SUB V134 V137
0x25b: V139 = 0x0
0x25f: V140 = EXTCODESIZE V123
0x260: V141 = ISZERO V140
0x261: V142 = ISZERO V141
0x262: V143 = 0x26a
0x265: JUMPI 0x26a V142
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V113, S0, V123, 0xb863bd37, V134, 0x20, V137, V138, V137, 0x0, V123]
Exit stack: [V11, {0x6a, 0x74}, 0x0, V113, 0x0, V123, 0xb863bd37, V134, 0x20, V137, V138, V137, 0x0, V123]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x1d3]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V144 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, V113, 0x0, V123, 0xb863bd37, V134, 0x20, V137, V138, V137, 0x0, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, 0x0, V113, 0x0, V123, 0xb863bd37, V134, 0x20, V137, V138, V137, 0x0, V123]

================================

Block 0x26a
[0x26a:0x272]
---
Predecessors: [0x1d3]
Successors: [0x273, 0x277]
---
0x26a JUMPDEST
0x26b GAS
0x26c CALL
0x26d ISZERO
0x26e ISZERO
0x26f PUSH2 0x277
0x272 JUMPI
---
0x26a: JUMPDEST 
0x26b: V145 = GAS
0x26c: V146 = CALL V145 V123 0x0 V137 V138 V137 0x20
0x26d: V147 = ISZERO V146
0x26e: V148 = ISZERO V147
0x26f: V149 = 0x277
0x272: JUMPI 0x277 V148
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, V113, 0x0, V123, 0xb863bd37, V134, 0x20, V137, V138, V137, 0x0, V123]
Stack pops: 6
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, 0x0, V113, 0x0, V123, 0xb863bd37, V134]

================================

Block 0x273
[0x273:0x276]
---
Predecessors: [0x26a]
Successors: []
---
0x273 PUSH1 0x0
0x275 DUP1
0x276 REVERT
---
0x273: V150 = 0x0
0x276: REVERT 0x0 0x0
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, V113, 0x0, V123, 0xb863bd37, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, 0x0, V113, 0x0, V123, 0xb863bd37, V134]

================================

Block 0x277
[0x277:0x28d]
---
Predecessors: [0x26a]
Successors: [0x28e, 0x2d4]
---
0x277 JUMPDEST
0x278 POP
0x279 POP
0x27a POP
0x27b PUSH1 0x40
0x27d MLOAD
0x27e DUP1
0x27f MLOAD
0x280 SWAP1
0x281 POP
0x282 SWAP1
0x283 POP
0x284 PUSH1 0x3
0x286 SLOAD
0x287 DUP2
0x288 LT
0x289 ISZERO
0x28a PUSH2 0x2d4
0x28d JUMPI
---
0x277: JUMPDEST 
0x27b: V151 = 0x40
0x27d: V152 = M[0x40]
0x27f: V153 = M[V152]
0x284: V154 = 0x3
0x286: V155 = S[0x3]
0x288: V156 = LT V153 V155
0x289: V157 = ISZERO V156
0x28a: V158 = 0x2d4
0x28d: JUMPI 0x2d4 V157
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, V113, 0x0, V123, 0xb863bd37, V134]
Stack pops: 4
Stack additions: [V153]
Exit stack: [V11, {0x6a, 0x74}, 0x0, V113, V153]

================================

Block 0x28e
[0x28e:0x29a]
---
Predecessors: [0x277]
Successors: [0x29b, 0x29c]
---
0x28e PUSH1 0x64
0x290 PUSH1 0x61
0x292 CALLVALUE
0x293 MUL
0x294 DUP2
0x295 ISZERO
0x296 ISZERO
0x297 PUSH2 0x29c
0x29a JUMPI
---
0x28e: V159 = 0x64
0x290: V160 = 0x61
0x292: V161 = CALLVALUE
0x293: V162 = MUL V161 0x61
0x295: V163 = ISZERO 0x64
0x296: V164 = ISZERO 0x0
0x297: V165 = 0x29c
0x29a: JUMPI 0x29c 0x1
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, V113, V153]
Stack pops: 0
Stack additions: [0x64, V162]
Exit stack: [V11, {0x6a, 0x74}, 0x0, V113, V153, 0x64, V162]

================================

Block 0x29b
[0x29b:0x29b]
---
Predecessors: [0x28e]
Successors: []
---
0x29b INVALID
---
0x29b: INVALID 
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, V113, V153, 0x64, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, 0x0, V113, V153, 0x64, V162]

================================

Block 0x29c
[0x29c:0x2ce]
---
Predecessors: [0x28e]
Successors: [0x4b5]
---
0x29c JUMPDEST
0x29d DIV
0x29e SWAP3
0x29f POP
0x2a0 PUSH2 0x2cf
0x2a3 PUSH1 0x2
0x2a5 PUSH1 0x0
0x2a7 SWAP1
0x2a8 SLOAD
0x2a9 SWAP1
0x2aa PUSH2 0x100
0x2ad EXP
0x2ae SWAP1
0x2af DIV
0x2b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c5 AND
0x2c6 PUSH1 0x3
0x2c8 SLOAD
0x2c9 DUP6
0x2ca ADD
0x2cb PUSH2 0x4b5
0x2ce JUMP
---
0x29c: JUMPDEST 
0x29d: V166 = DIV V162 0x64
0x2a0: V167 = 0x2cf
0x2a3: V168 = 0x2
0x2a5: V169 = 0x0
0x2a8: V170 = S[0x2]
0x2aa: V171 = 0x100
0x2ad: V172 = EXP 0x100 0x0
0x2af: V173 = DIV V170 0x1
0x2b0: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c5: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x2c6: V176 = 0x3
0x2c8: V177 = S[0x3]
0x2ca: V178 = ADD V166 V177
0x2cb: V179 = 0x4b5
0x2ce: JUMP 0x4b5
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, V113, V153, 0x64, V162]
Stack pops: 5
Stack additions: [V166, S3, S2, 0x2cf, V175, V178]
Exit stack: [V11, {0x6a, 0x74}, V166, V113, V153, 0x2cf, V175, V178]

================================

Block 0x2cf
[0x2cf:0x2d3]
---
Predecessors: [0x4c8]
Successors: [0x2f5]
---
0x2cf JUMPDEST
0x2d0 PUSH2 0x2f5
0x2d3 JUMP
---
0x2cf: JUMPDEST 
0x2d0: V180 = 0x2f5
0x2d3: JUMP 0x2f5
---
Entry stack: [V11, {0x6a, 0x74}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, S2, S1, S0]

================================

Block 0x2d4
[0x2d4:0x2e3]
---
Predecessors: [0x277]
Successors: [0x2e4, 0x2e5]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x64
0x2d7 PUSH1 0x61
0x2d9 PUSH1 0x3
0x2db SLOAD
0x2dc MUL
0x2dd DUP2
0x2de ISZERO
0x2df ISZERO
0x2e0 PUSH2 0x2e5
0x2e3 JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V181 = 0x64
0x2d7: V182 = 0x61
0x2d9: V183 = 0x3
0x2db: V184 = S[0x3]
0x2dc: V185 = MUL V184 0x61
0x2de: V186 = ISZERO 0x64
0x2df: V187 = ISZERO 0x0
0x2e0: V188 = 0x2e5
0x2e3: JUMPI 0x2e5 0x1
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, V113, V153]
Stack pops: 0
Stack additions: [0x64, V185]
Exit stack: [V11, {0x6a, 0x74}, 0x0, V113, V153, 0x64, V185]

================================

Block 0x2e4
[0x2e4:0x2e4]
---
Predecessors: [0x2d4]
Successors: []
---
0x2e4 INVALID
---
0x2e4: INVALID 
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, V113, V153, 0x64, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, 0x0, V113, V153, 0x64, V185]

================================

Block 0x2e5
[0x2e5:0x2f3]
---
Predecessors: [0x2d4]
Successors: [0x4b5]
---
0x2e5 JUMPDEST
0x2e6 DIV
0x2e7 SWAP3
0x2e8 POP
0x2e9 PUSH2 0x2f4
0x2ec CALLER
0x2ed CALLVALUE
0x2ee DUP6
0x2ef ADD
0x2f0 PUSH2 0x4b5
0x2f3 JUMP
---
0x2e5: JUMPDEST 
0x2e6: V189 = DIV V185 0x64
0x2e9: V190 = 0x2f4
0x2ec: V191 = CALLER
0x2ed: V192 = CALLVALUE
0x2ef: V193 = ADD V189 V192
0x2f0: V194 = 0x4b5
0x2f3: JUMP 0x4b5
---
Entry stack: [V11, {0x6a, 0x74}, 0x0, V113, V153, 0x64, V185]
Stack pops: 5
Stack additions: [V189, S3, S2, 0x2f4, V191, V193]
Exit stack: [V11, {0x6a, 0x74}, V189, V113, V153, 0x2f4, V191, V193]

================================

Block 0x2f4
[0x2f4:0x2f4]
---
Predecessors: [0x4c8]
Successors: [0x2f5]
---
0x2f4 JUMPDEST
---
0x2f4: JUMPDEST 
---
Entry stack: [V11, {0x6a, 0x74}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, S2, S1, S0]

================================

Block 0x2f5
[0x2f5:0x337]
---
Predecessors: [0x2cf, 0x2f4]
Successors: [0x338]
---
0x2f5 JUMPDEST
0x2f6 PUSH1 0x0
0x2f8 PUSH1 0x2
0x2fa PUSH1 0x0
0x2fc PUSH2 0x100
0x2ff EXP
0x300 DUP2
0x301 SLOAD
0x302 DUP2
0x303 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x318 MUL
0x319 NOT
0x31a AND
0x31b SWAP1
0x31c DUP4
0x31d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x332 AND
0x333 MUL
0x334 OR
0x335 SWAP1
0x336 SSTORE
0x337 POP
---
0x2f5: JUMPDEST 
0x2f6: V195 = 0x0
0x2f8: V196 = 0x2
0x2fa: V197 = 0x0
0x2fc: V198 = 0x100
0x2ff: V199 = EXP 0x100 0x0
0x301: V200 = S[0x2]
0x303: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x318: V202 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x319: V203 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V204 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V200
0x31d: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x332: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x333: V207 = MUL 0x0 0x1
0x334: V208 = OR 0x0 V204
0x336: S[0x2] = V208
---
Entry stack: [V11, {0x6a, 0x74}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, S2, S1, S0]

================================

Block 0x338
[0x338:0x33c]
---
Predecessors: [0x187, 0x2f5]
Successors: [0x6a, 0x74]
---
0x338 JUMPDEST
0x339 POP
0x33a POP
0x33b POP
0x33c JUMP
---
0x338: JUMPDEST 
0x33c: JUMP {0x6a, 0x74}
---
Entry stack: [V11, {0x6a, 0x74}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x33d
[0x33d:0x361]
---
Predecessors: [0x81]
Successors: [0x89]
---
0x33d JUMPDEST
0x33e PUSH1 0x0
0x340 DUP1
0x341 SWAP1
0x342 SLOAD
0x343 SWAP1
0x344 PUSH2 0x100
0x347 EXP
0x348 SWAP1
0x349 DIV
0x34a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35f AND
0x360 DUP2
0x361 JUMP
---
0x33d: JUMPDEST 
0x33e: V209 = 0x0
0x342: V210 = S[0x0]
0x344: V211 = 0x100
0x347: V212 = EXP 0x100 0x0
0x349: V213 = DIV V210 0x1
0x34a: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x35f: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x361: JUMP 0x89
---
Entry stack: [V11, 0x89]
Stack pops: 1
Stack additions: [S0, V215]
Exit stack: [V11, 0x89, V215]

================================

Block 0x362
[0x362:0x3b8]
---
Predecessors: [0xd6]
Successors: [0x3b9, 0x3bd]
---
0x362 JUMPDEST
0x363 PUSH1 0x0
0x365 DUP1
0x366 SWAP1
0x367 SLOAD
0x368 SWAP1
0x369 PUSH2 0x100
0x36c EXP
0x36d SWAP1
0x36e DIV
0x36f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x384 AND
0x385 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39a AND
0x39b CALLER
0x39c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b1 AND
0x3b2 EQ
0x3b3 ISZERO
0x3b4 ISZERO
0x3b5 PUSH2 0x3bd
0x3b8 JUMPI
---
0x362: JUMPDEST 
0x363: V216 = 0x0
0x367: V217 = S[0x0]
0x369: V218 = 0x100
0x36c: V219 = EXP 0x100 0x0
0x36e: V220 = DIV V217 0x1
0x36f: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x384: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x385: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x39a: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x39b: V225 = CALLER
0x39c: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x3b2: V228 = EQ V227 V224
0x3b3: V229 = ISZERO V228
0x3b4: V230 = ISZERO V229
0x3b5: V231 = 0x3bd
0x3b8: JUMPI 0x3bd V230
---
Entry stack: [V11, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde]

================================

Block 0x3b9
[0x3b9:0x3bc]
---
Predecessors: [0x362]
Successors: []
---
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc REVERT
---
0x3b9: V232 = 0x0
0x3bc: REVERT 0x0 0x0
---
Entry stack: [V11, 0xde]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde]

================================

Block 0x3bd
[0x3bd:0x3dd]
---
Predecessors: [0x362]
Successors: [0x4b5]
---
0x3bd JUMPDEST
0x3be PUSH2 0x3de
0x3c1 CALLER
0x3c2 ADDRESS
0x3c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d8 AND
0x3d9 BALANCE
0x3da PUSH2 0x4b5
0x3dd JUMP
---
0x3bd: JUMPDEST 
0x3be: V233 = 0x3de
0x3c1: V234 = CALLER
0x3c2: V235 = ADDRESS
0x3c3: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d8: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x3d9: V238 = BALANCE V237
0x3da: V239 = 0x4b5
0x3dd: JUMP 0x4b5
---
Entry stack: [V11, 0xde]
Stack pops: 0
Stack additions: [0x3de, V234, V238]
Exit stack: [V11, 0xde, 0x3de, V234, V238]

================================

Block 0x3de
[0x3de:0x3df]
---
Predecessors: [0x4c8]
Successors: [0xde]
---
0x3de JUMPDEST
0x3df JUMP
---
0x3de: JUMPDEST 
0x3df: JUMP S0
---
Entry stack: [V11, {0x6a, 0x74}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, S2, S1]

================================

Block 0x3e0
[0x3e0:0x436]
---
Predecessors: [0xeb]
Successors: [0x437, 0x43b]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x0
0x3e3 DUP1
0x3e4 SWAP1
0x3e5 SLOAD
0x3e6 SWAP1
0x3e7 PUSH2 0x100
0x3ea EXP
0x3eb SWAP1
0x3ec DIV
0x3ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x402 AND
0x403 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x418 AND
0x419 CALLER
0x41a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42f AND
0x430 EQ
0x431 ISZERO
0x432 ISZERO
0x433 PUSH2 0x43b
0x436 JUMPI
---
0x3e0: JUMPDEST 
0x3e1: V240 = 0x0
0x3e5: V241 = S[0x0]
0x3e7: V242 = 0x100
0x3ea: V243 = EXP 0x100 0x0
0x3ec: V244 = DIV V241 0x1
0x3ed: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x402: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x403: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x418: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x419: V249 = CALLER
0x41a: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x42f: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x430: V252 = EQ V251 V248
0x431: V253 = ISZERO V252
0x432: V254 = ISZERO V253
0x433: V255 = 0x43b
0x436: JUMPI 0x43b V254
---
Entry stack: [V11, 0x117, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V59]

================================

Block 0x437
[0x437:0x43a]
---
Predecessors: [0x3e0]
Successors: []
---
0x437 PUSH1 0x0
0x439 DUP1
0x43a REVERT
---
0x437: V256 = 0x0
0x43a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x117, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V59]

================================

Block 0x43b
[0x43b:0x471]
---
Predecessors: [0x3e0]
Successors: [0x472, 0x4b2]
---
0x43b JUMPDEST
0x43c PUSH1 0x0
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 DUP2
0x455 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46a AND
0x46b EQ
0x46c ISZERO
0x46d ISZERO
0x46e PUSH2 0x4b2
0x471 JUMPI
---
0x43b: JUMPDEST 
0x43c: V257 = 0x0
0x43e: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x455: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x46b: V262 = EQ V261 0x0
0x46c: V263 = ISZERO V262
0x46d: V264 = ISZERO V263
0x46e: V265 = 0x4b2
0x471: JUMPI 0x4b2 V264
---
Entry stack: [V11, 0x117, V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x117, V59]

================================

Block 0x472
[0x472:0x4b1]
---
Predecessors: [0x43b]
Successors: [0x4b2]
---
0x472 DUP1
0x473 PUSH1 0x0
0x475 DUP1
0x476 PUSH2 0x100
0x479 EXP
0x47a DUP2
0x47b SLOAD
0x47c DUP2
0x47d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x492 MUL
0x493 NOT
0x494 AND
0x495 SWAP1
0x496 DUP4
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad MUL
0x4ae OR
0x4af SWAP1
0x4b0 SSTORE
0x4b1 POP
---
0x473: V266 = 0x0
0x476: V267 = 0x100
0x479: V268 = EXP 0x100 0x0
0x47b: V269 = S[0x0]
0x47d: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x492: V271 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x493: V272 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x494: V273 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V269
0x497: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x4ad: V276 = MUL V275 0x1
0x4ae: V277 = OR V276 V273
0x4b0: S[0x0] = V277
---
Entry stack: [V11, 0x117, V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x117, V59]

================================

Block 0x4b2
[0x4b2:0x4b4]
---
Predecessors: [0x43b, 0x472]
Successors: [0x117]
---
0x4b2 JUMPDEST
0x4b3 POP
0x4b4 JUMP
---
0x4b2: JUMPDEST 
0x4b4: JUMP 0x117
---
Entry stack: [V11, 0x117, V59]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b5
[0x4b5:0x4bc]
---
Predecessors: [0x29c, 0x2e5, 0x3bd]
Successors: [0x57b]
---
0x4b5 JUMPDEST
0x4b6 PUSH2 0x4bd
0x4b9 PUSH2 0x57b
0x4bc JUMP
---
0x4b5: JUMPDEST 
0x4b6: V278 = 0x4bd
0x4b9: V279 = 0x57b
0x4bc: JUMP 0x57b
---
Entry stack: [V11, {0x6a, 0x74}, S5, S4, S3, {0x2cf, 0x2f4, 0x3de}, S1, S0]
Stack pops: 0
Stack additions: [0x4bd]
Exit stack: [V11, {0x6a, 0x74}, S5, S4, S3, {0x2cf, 0x2f4, 0x3de}, S1, S0, 0x4bd]

================================

Block 0x4bd
[0x4bd:0x4c7]
---
Predecessors: [0x57b]
Successors: [0x4cd]
---
0x4bd JUMPDEST
0x4be PUSH2 0x4c8
0x4c1 DUP4
0x4c2 DUP3
0x4c3 DUP5
0x4c4 PUSH2 0x4cd
0x4c7 JUMP
---
0x4bd: JUMPDEST 
0x4be: V280 = 0x4c8
0x4c4: V281 = 0x4cd
0x4c7: JUMP 0x4cd
---
Entry stack: [V11, {0x6a, 0x74}, S6, S5, S4, {0x2cf, 0x2f4, 0x3de}, S2, S1, V331]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x4c8, S2, S0, S1]
Exit stack: [V11, {0x6a, 0x74}, S6, S5, S4, {0x2cf, 0x2f4, 0x3de}, S2, S1, V331, 0x4c8, S2, V331, S1]

================================

Block 0x4c8
[0x4c8:0x4cc]
---
Predecessors: [0x4e3]
Successors: [0x2cf, 0x2f4, 0x3de]
---
0x4c8 JUMPDEST
0x4c9 POP
0x4ca POP
0x4cb POP
0x4cc JUMP
---
0x4c8: JUMPDEST 
0x4cc: JUMP {0x2cf, 0x2f4, 0x3de}
---
Entry stack: [V11, {0x6a, 0x74}, S6, S5, S4, {0x2cf, 0x2f4, 0x3de}, S2, S1, V331]
Stack pops: 4
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, S6, S5, S4]

================================

Block 0x4cd
[0x4cd:0x4d7]
---
Predecessors: [0x4bd]
Successors: [0x4e8]
---
0x4cd JUMPDEST
0x4ce PUSH2 0x4d8
0x4d1 DUP4
0x4d2 DUP4
0x4d3 DUP4
0x4d4 PUSH2 0x4e8
0x4d7 JUMP
---
0x4cd: JUMPDEST 
0x4ce: V282 = 0x4d8
0x4d4: V283 = 0x4e8
0x4d7: JUMP 0x4e8
---
Entry stack: [V11, {0x6a, 0x74}, S10, S9, S8, {0x2cf, 0x2f4, 0x3de}, S6, S5, V331, 0x4c8, S2, V331, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x4d8, S2, S1, S0]
Exit stack: [V11, {0x6a, 0x74}, S10, S9, S8, {0x2cf, 0x2f4, 0x3de}, S6, S5, V331, 0x4c8, S2, V331, S0, 0x4d8, S2, V331, S0]

================================

Block 0x4d8
[0x4d8:0x4de]
---
Predecessors: [0x55d]
Successors: [0x4df, 0x4e3]
---
0x4d8 JUMPDEST
0x4d9 ISZERO
0x4da ISZERO
0x4db PUSH2 0x4e3
0x4de JUMPI
---
0x4d8: JUMPDEST 
0x4d9: V284 = ISZERO V328
0x4da: V285 = ISZERO V284
0x4db: V286 = 0x4e3
0x4de: JUMPI 0x4e3 V285
---
Entry stack: [V11, {0x6a, 0x74}, S11, S10, S9, {0x2cf, 0x2f4, 0x3de}, S7, S6, V331, 0x4c8, S3, V331, S1, V328]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, S11, S10, S9, {0x2cf, 0x2f4, 0x3de}, S7, S6, V331, 0x4c8, S3, V331, S1]

================================

Block 0x4df
[0x4df:0x4e2]
---
Predecessors: [0x4d8]
Successors: []
---
0x4df PUSH1 0x0
0x4e1 DUP1
0x4e2 REVERT
---
0x4df: V287 = 0x0
0x4e2: REVERT 0x0 0x0
---
Entry stack: [V11, {0x6a, 0x74}, S10, S9, S8, {0x2cf, 0x2f4, 0x3de}, S6, S5, V331, 0x4c8, S2, V331, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, S10, S9, S8, {0x2cf, 0x2f4, 0x3de}, S6, S5, V331, 0x4c8, S2, V331, S0]

================================

Block 0x4e3
[0x4e3:0x4e7]
---
Predecessors: [0x4d8]
Successors: [0x4c8]
---
0x4e3 JUMPDEST
0x4e4 POP
0x4e5 POP
0x4e6 POP
0x4e7 JUMP
---
0x4e3: JUMPDEST 
0x4e7: JUMP 0x4c8
---
Entry stack: [V11, {0x6a, 0x74}, S10, S9, S8, {0x2cf, 0x2f4, 0x3de}, S6, S5, V331, 0x4c8, S2, V331, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, {0x6a, 0x74}, S10, S9, S8, {0x2cf, 0x2f4, 0x3de}, S6, S5, V331]

================================

Block 0x4e8
[0x4e8:0x514]
---
Predecessors: [0x4cd]
Successors: [0x515]
---
0x4e8 JUMPDEST
0x4e9 PUSH1 0x0
0x4eb DUP4
0x4ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x501 AND
0x502 DUP3
0x503 DUP5
0x504 PUSH1 0x40
0x506 MLOAD
0x507 DUP1
0x508 DUP3
0x509 DUP1
0x50a MLOAD
0x50b SWAP1
0x50c PUSH1 0x20
0x50e ADD
0x50f SWAP1
0x510 DUP1
0x511 DUP4
0x512 DUP4
0x513 PUSH1 0x0
---
0x4e8: JUMPDEST 
0x4e9: V288 = 0x0
0x4ec: V289 = 0xffffffffffffffffffffffffffffffffffffffff
0x501: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x504: V291 = 0x40
0x506: V292 = M[0x40]
0x50a: V293 = M[V331]
0x50c: V294 = 0x20
0x50e: V295 = ADD 0x20 V331
0x513: V296 = 0x0
---
Entry stack: [V11, {0x6a, 0x74}, S14, S13, S12, {0x2cf, 0x2f4, 0x3de}, S10, S9, V331, 0x4c8, S6, V331, S4, 0x4d8, S2, V331, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V290, S0, S1, V292, V292, V295, V293, V293, V292, V295, 0x0]
Exit stack: [V11, {0x6a, 0x74}, S14, S13, S12, {0x2cf, 0x2f4, 0x3de}, S10, S9, V331, 0x4c8, S6, V331, S4, 0x4d8, S2, V331, S0, 0x0, V290, S0, V331, V292, V292, V295, V293, V293, V292, V295, 0x0]

================================

Block 0x515
[0x515:0x51d]
---
Predecessors: [0x4e8, 0x51e]
Successors: [0x51e, 0x530]
---
0x515 JUMPDEST
0x516 DUP4
0x517 DUP2
0x518 LT
0x519 ISZERO
0x51a PUSH2 0x530
0x51d JUMPI
---
0x515: JUMPDEST 
0x518: V297 = LT S0 V293
0x519: V298 = ISZERO V297
0x51a: V299 = 0x530
0x51d: JUMPI 0x530 V298
---
Entry stack: [V11, {0x6a, 0x74}, S26, S25, S24, {0x2cf, 0x2f4, 0x3de}, S22, S21, V331, 0x4c8, S18, V331, S16, 0x4d8, S14, V331, S12, 0x0, V290, S9, V331, V292, V292, V295, V293, V293, V292, V295, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, {0x6a, 0x74}, S26, S25, S24, {0x2cf, 0x2f4, 0x3de}, S22, S21, V331, 0x4c8, S18, V331, S16, 0x4d8, S14, V331, S12, 0x0, V290, S9, V331, V292, V292, V295, V293, V293, V292, V295, S0]

================================

Block 0x51e
[0x51e:0x52f]
---
Predecessors: [0x515]
Successors: [0x515]
---
0x51e DUP1
0x51f DUP3
0x520 ADD
0x521 MLOAD
0x522 DUP2
0x523 DUP5
0x524 ADD
0x525 MSTORE
0x526 PUSH1 0x20
0x528 DUP2
0x529 ADD
0x52a SWAP1
0x52b POP
0x52c PUSH2 0x515
0x52f JUMP
---
0x520: V300 = ADD V295 S0
0x521: V301 = M[V300]
0x524: V302 = ADD V292 S0
0x525: M[V302] = V301
0x526: V303 = 0x20
0x529: V304 = ADD S0 0x20
0x52c: V305 = 0x515
0x52f: JUMP 0x515
---
Entry stack: [V11, {0x6a, 0x74}, S26, S25, S24, {0x2cf, 0x2f4, 0x3de}, S22, S21, V331, 0x4c8, S18, V331, S16, 0x4d8, S14, V331, S12, 0x0, V290, S9, V331, V292, V292, V295, V293, V293, V292, V295, S0]
Stack pops: 3
Stack additions: [S2, S1, V304]
Exit stack: [V11, {0x6a, 0x74}, S26, S25, S24, {0x2cf, 0x2f4, 0x3de}, S22, S21, V331, 0x4c8, S18, V331, S16, 0x4d8, S14, V331, S12, 0x0, V290, S9, V331, V292, V292, V295, V293, V293, V292, V295, V304]

================================

Block 0x530
[0x530:0x543]
---
Predecessors: [0x515]
Successors: [0x544, 0x55d]
---
0x530 JUMPDEST
0x531 POP
0x532 POP
0x533 POP
0x534 POP
0x535 SWAP1
0x536 POP
0x537 SWAP1
0x538 DUP2
0x539 ADD
0x53a SWAP1
0x53b PUSH1 0x1f
0x53d AND
0x53e DUP1
0x53f ISZERO
0x540 PUSH2 0x55d
0x543 JUMPI
---
0x530: JUMPDEST 
0x539: V306 = ADD V293 V292
0x53b: V307 = 0x1f
0x53d: V308 = AND 0x1f V293
0x53f: V309 = ISZERO V308
0x540: V310 = 0x55d
0x543: JUMPI 0x55d V309
---
Entry stack: [V11, {0x6a, 0x74}, S26, S25, S24, {0x2cf, 0x2f4, 0x3de}, S22, S21, V331, 0x4c8, S18, V331, S16, 0x4d8, S14, V331, S12, 0x0, V290, S9, V331, V292, V292, V295, V293, V293, V292, V295, S0]
Stack pops: 7
Stack additions: [V306, V308]
Exit stack: [V11, {0x6a, 0x74}, S26, S25, S24, {0x2cf, 0x2f4, 0x3de}, S22, S21, V331, 0x4c8, S18, V331, S16, 0x4d8, S14, V331, S12, 0x0, V290, S9, V331, V292, V306, V308]

================================

Block 0x544
[0x544:0x55c]
---
Predecessors: [0x530]
Successors: [0x55d]
---
0x544 DUP1
0x545 DUP3
0x546 SUB
0x547 DUP1
0x548 MLOAD
0x549 PUSH1 0x1
0x54b DUP4
0x54c PUSH1 0x20
0x54e SUB
0x54f PUSH2 0x100
0x552 EXP
0x553 SUB
0x554 NOT
0x555 AND
0x556 DUP2
0x557 MSTORE
0x558 PUSH1 0x20
0x55a ADD
0x55b SWAP2
0x55c POP
---
0x546: V311 = SUB V306 V308
0x548: V312 = M[V311]
0x549: V313 = 0x1
0x54c: V314 = 0x20
0x54e: V315 = SUB 0x20 V308
0x54f: V316 = 0x100
0x552: V317 = EXP 0x100 V315
0x553: V318 = SUB V317 0x1
0x554: V319 = NOT V318
0x555: V320 = AND V319 V312
0x557: M[V311] = V320
0x558: V321 = 0x20
0x55a: V322 = ADD 0x20 V311
---
Entry stack: [V11, {0x6a, 0x74}, S21, S20, S19, {0x2cf, 0x2f4, 0x3de}, S17, S16, V331, 0x4c8, S13, V331, S11, 0x4d8, S9, V331, S7, 0x0, V290, S4, V331, V292, V306, V308]
Stack pops: 2
Stack additions: [V322, S0]
Exit stack: [V11, {0x6a, 0x74}, S21, S20, S19, {0x2cf, 0x2f4, 0x3de}, S17, S16, V331, 0x4c8, S13, V331, S11, 0x4d8, S9, V331, S7, 0x0, V290, S4, V331, V292, V322, V308]

================================

Block 0x55d
[0x55d:0x57a]
---
Predecessors: [0x530, 0x544]
Successors: [0x4d8]
---
0x55d JUMPDEST
0x55e POP
0x55f SWAP2
0x560 POP
0x561 POP
0x562 PUSH1 0x0
0x564 PUSH1 0x40
0x566 MLOAD
0x567 DUP1
0x568 DUP4
0x569 SUB
0x56a DUP2
0x56b DUP6
0x56c DUP8
0x56d GAS
0x56e CALL
0x56f SWAP3
0x570 POP
0x571 POP
0x572 POP
0x573 SWAP1
0x574 POP
0x575 SWAP4
0x576 SWAP3
0x577 POP
0x578 POP
0x579 POP
0x57a JUMP
---
0x55d: JUMPDEST 
0x562: V323 = 0x0
0x564: V324 = 0x40
0x566: V325 = M[0x40]
0x569: V326 = SUB S1 V325
0x56d: V327 = GAS
0x56e: V328 = CALL V327 V290 S4 V325 V326 V325 0x0
0x57a: JUMP 0x4d8
---
Entry stack: [V11, {0x6a, 0x74}, S21, S20, S19, {0x2cf, 0x2f4, 0x3de}, S17, S16, V331, 0x4c8, S13, V331, S11, 0x4d8, S9, V331, S7, 0x0, V290, S4, V331, V292, S1, V308]
Stack pops: 11
Stack additions: [V328]
Exit stack: [V11, {0x6a, 0x74}, S21, S20, S19, {0x2cf, 0x2f4, 0x3de}, S17, S16, V331, 0x4c8, S13, V331, S11, V328]

================================

Block 0x57b
[0x57b:0x58e]
---
Predecessors: [0x4b5]
Successors: [0x4bd]
---
0x57b JUMPDEST
0x57c PUSH1 0x20
0x57e PUSH1 0x40
0x580 MLOAD
0x581 SWAP1
0x582 DUP2
0x583 ADD
0x584 PUSH1 0x40
0x586 MSTORE
0x587 DUP1
0x588 PUSH1 0x0
0x58a DUP2
0x58b MSTORE
0x58c POP
0x58d SWAP1
0x58e JUMP
---
0x57b: JUMPDEST 
0x57c: V329 = 0x20
0x57e: V330 = 0x40
0x580: V331 = M[0x40]
0x583: V332 = ADD V331 0x20
0x584: V333 = 0x40
0x586: M[0x40] = V332
0x588: V334 = 0x0
0x58b: M[V331] = 0x0
0x58e: JUMP 0x4bd
---
Entry stack: [V11, {0x6a, 0x74}, S6, S5, S4, {0x2cf, 0x2f4, 0x3de}, S2, S1, 0x4bd]
Stack pops: 1
Stack additions: [V331]
Exit stack: [V11, {0x6a, 0x74}, S6, S5, S4, {0x2cf, 0x2f4, 0x3de}, S2, S1, V331]

================================

Block 0x58f
[0x58f:0x5bc]
---
Predecessors: []
Successors: []
---
0x58f STOP
0x590 LOG1
0x591 PUSH6 0x627a7a723058
0x598 SHA3
0x599 GASPRICE
0x59a MISSING 0xcd
0x59b MISSING 0xc
0x59c MISSING 0xc8
0x59d MISSING 0xb7
0x59e PUSH30 0x7f68318345678495c7ebbab1f5f907ba02009824b70a19ddd230029
---
0x58f: STOP 
0x590: LOG S0 S1 S2
0x591: V335 = 0x627a7a723058
0x598: V336 = SHA3 0x627a7a723058 S3
0x599: V337 = GASPRICE
0x59a: MISSING 0xcd
0x59b: MISSING 0xc
0x59c: MISSING 0xc8
0x59d: MISSING 0xb7
0x59e: V338 = 0x7f68318345678495c7ebbab1f5f907ba02009824b70a19ddd230029
---
Entry stack: []
Stack pops: 0
Stack additions: [V337, V336, 0x7f68318345678495c7ebbab1f5f907ba02009824b70a19ddd230029]
Exit stack: []

================================

Function 0:
Public function signature: 0x837e7cc6
Entry block: 0x6c
Exit block: 0x74
Body: 0x6c, 0x74

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x76
Exit block: 0x89
Body: 0x76, 0x7d, 0x81, 0x89, 0x33d

Function 2:
Public function signature: 0xe5225381
Entry block: 0xcb
Exit block: 0xde
Body: 0xcb, 0xd2, 0xd6, 0xde, 0x362, 0x3b9, 0x3bd, 0x3de

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0xe0
Exit block: 0x117
Body: 0xe0, 0xe7, 0xeb, 0x117, 0x3e0, 0x437, 0x43b, 0x472, 0x4b2

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x6a
Body: 0x62, 0x6a

Function 5:
Private function
Entry block: 0x119
Exit block: 0x338
Body: 0x119, 0x131, 0x145, 0x187, 0x1d3, 0x26a, 0x277, 0x28e, 0x29c, 0x2cf, 0x2d4, 0x2e5, 0x2f4, 0x2f5, 0x338

Function 6:
Private function
Entry block: 0x4b5
Exit block: 0x4c8
Body: 0x4b5, 0x4bd, 0x4c8, 0x4cd, 0x4d8, 0x4e3, 0x4e8, 0x515, 0x51e, 0x530, 0x544, 0x55d, 0x57b

