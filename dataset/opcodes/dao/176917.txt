Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x75]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x75
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x75
0xa: JUMPI 0x75 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x77]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6898f82b
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x77
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6898f82b
0x39: V12 = EQ V10 0x6898f82b
0x3a: V13 = 0x77
0x3d: JUMPI 0x77 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x82]
---
0x3e DUP1
0x3f PUSH4 0x776d1a01
0x44 EQ
0x45 PUSH2 0x82
0x48 JUMPI
---
0x3f: V14 = 0x776d1a01
0x44: V15 = EQ 0x776d1a01 V10
0x45: V16 = 0x82
0x48: JUMPI 0x82 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xa1]
---
0x49 DUP1
0x4a PUSH4 0x8da5cb5b
0x4f EQ
0x50 PUSH2 0xa1
0x53 JUMPI
---
0x4a: V17 = 0x8da5cb5b
0x4f: V18 = EQ 0x8da5cb5b V10
0x50: V19 = 0xa1
0x53: JUMPI 0xa1 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xd0]
---
0x54 DUP1
0x55 PUSH4 0xc5563720
0x5a EQ
0x5b PUSH2 0xd0
0x5e JUMPI
---
0x55: V20 = 0xc5563720
0x5a: V21 = EQ 0xc5563720 V10
0x5b: V22 = 0xd0
0x5e: JUMPI 0xd0 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0xe3]
---
0x5f DUP1
0x60 PUSH4 0xd4b83992
0x65 EQ
0x66 PUSH2 0xe3
0x69 JUMPI
---
0x60: V23 = 0xd4b83992
0x65: V24 = EQ 0xd4b83992 V10
0x66: V25 = 0xe3
0x69: JUMPI 0xe3 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0xf6]
---
0x6a DUP1
0x6b PUSH4 0xe29940b9
0x70 EQ
0x71 PUSH2 0xf6
0x74 JUMPI
---
0x6b: V26 = 0xe29940b9
0x70: V27 = EQ 0xe29940b9 V10
0x71: V28 = 0xf6
0x74: JUMPI 0xf6 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x76]
---
Predecessors: [0x0, 0x6a, 0x184, 0x1a4, 0x292]
Successors: []
---
0x75 JUMPDEST
0x76 STOP
---
0x75: JUMPDEST 
0x76: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0xb]
Successors: [0x10c]
---
0x77 JUMPDEST
0x78 PUSH2 0x75
0x7b PUSH1 0x4
0x7d CALLDATALOAD
0x7e PUSH2 0x10c
0x81 JUMP
---
0x77: JUMPDEST 
0x78: V29 = 0x75
0x7b: V30 = 0x4
0x7d: V31 = CALLDATALOAD 0x4
0x7e: V32 = 0x10c
0x81: JUMP 0x10c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75, V31]
Exit stack: [V10, 0x75, V31]

================================

Block 0x82
[0x82:0x88]
---
Predecessors: [0x3e]
Successors: [0x89, 0x8d]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 ISZERO
0x85 PUSH2 0x8d
0x88 JUMPI
---
0x82: JUMPDEST 
0x83: V33 = CALLVALUE
0x84: V34 = ISZERO V33
0x85: V35 = 0x8d
0x88: JUMPI 0x8d V34
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x89
[0x89:0x8c]
---
Predecessors: [0x82]
Successors: []
---
0x89 PUSH1 0x0
0x8b DUP1
0x8c REVERT
---
0x89: V36 = 0x0
0x8c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0xa0]
---
Predecessors: [0x82]
Successors: [0x189]
---
0x8d JUMPDEST
0x8e PUSH2 0x75
0x91 PUSH1 0x1
0x93 PUSH1 0xa0
0x95 PUSH1 0x2
0x97 EXP
0x98 SUB
0x99 PUSH1 0x4
0x9b CALLDATALOAD
0x9c AND
0x9d PUSH2 0x189
0xa0 JUMP
---
0x8d: JUMPDEST 
0x8e: V37 = 0x75
0x91: V38 = 0x1
0x93: V39 = 0xa0
0x95: V40 = 0x2
0x97: V41 = EXP 0x2 0xa0
0x98: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99: V43 = 0x4
0x9b: V44 = CALLDATALOAD 0x4
0x9c: V45 = AND V44 0xffffffffffffffffffffffffffffffffffffffff
0x9d: V46 = 0x189
0xa0: JUMP 0x189
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75, V45]
Exit stack: [V10, 0x75, V45]

================================

Block 0xa1
[0xa1:0xa7]
---
Predecessors: [0x49]
Successors: [0xa8, 0xac]
---
0xa1 JUMPDEST
0xa2 CALLVALUE
0xa3 ISZERO
0xa4 PUSH2 0xac
0xa7 JUMPI
---
0xa1: JUMPDEST 
0xa2: V47 = CALLVALUE
0xa3: V48 = ISZERO V47
0xa4: V49 = 0xac
0xa7: JUMPI 0xac V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0xa1]
Successors: []
---
0xa8 PUSH1 0x0
0xaa DUP1
0xab REVERT
---
0xa8: V50 = 0x0
0xab: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb3]
---
Predecessors: [0xa1]
Successors: [0x1d3]
---
0xac JUMPDEST
0xad PUSH2 0xb4
0xb0 PUSH2 0x1d3
0xb3 JUMP
---
0xac: JUMPDEST 
0xad: V51 = 0xb4
0xb0: V52 = 0x1d3
0xb3: JUMP 0x1d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V10, 0xb4]

================================

Block 0xb4
[0xb4:0xcf]
---
Predecessors: [0x1d3, 0x20b]
Successors: []
---
0xb4 JUMPDEST
0xb5 PUSH1 0x40
0xb7 MLOAD
0xb8 PUSH1 0x1
0xba PUSH1 0xa0
0xbc PUSH1 0x2
0xbe EXP
0xbf SUB
0xc0 SWAP1
0xc1 SWAP2
0xc2 AND
0xc3 DUP2
0xc4 MSTORE
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 PUSH1 0x40
0xca MLOAD
0xcb DUP1
0xcc SWAP2
0xcd SUB
0xce SWAP1
0xcf RETURN
---
0xb4: JUMPDEST 
0xb5: V53 = 0x40
0xb7: V54 = M[0x40]
0xb8: V55 = 0x1
0xba: V56 = 0xa0
0xbc: V57 = 0x2
0xbe: V58 = EXP 0x2 0xa0
0xbf: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2: V60 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xc4: M[V54] = V60
0xc5: V61 = 0x20
0xc7: V62 = ADD 0x20 V54
0xc8: V63 = 0x40
0xca: V64 = M[0x40]
0xcd: V65 = SUB V62 V64
0xcf: RETURN V64 V65
---
Entry stack: [V10, 0xb4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb4]

================================

Block 0xd0
[0xd0:0xd6]
---
Predecessors: [0x54]
Successors: [0xd7, 0xdb]
---
0xd0 JUMPDEST
0xd1 CALLVALUE
0xd2 ISZERO
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0xd0: JUMPDEST 
0xd1: V66 = CALLVALUE
0xd2: V67 = ISZERO V66
0xd3: V68 = 0xdb
0xd6: JUMPI 0xdb V67
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0xd0]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V69 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdb
[0xdb:0xe2]
---
Predecessors: [0xd0]
Successors: [0x1e2]
---
0xdb JUMPDEST
0xdc PUSH2 0x75
0xdf PUSH2 0x1e2
0xe2 JUMP
---
0xdb: JUMPDEST 
0xdc: V70 = 0x75
0xdf: V71 = 0x1e2
0xe2: JUMP 0x1e2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75]
Exit stack: [V10, 0x75]

================================

Block 0xe3
[0xe3:0xe9]
---
Predecessors: [0x5f]
Successors: [0xea, 0xee]
---
0xe3 JUMPDEST
0xe4 CALLVALUE
0xe5 ISZERO
0xe6 PUSH2 0xee
0xe9 JUMPI
---
0xe3: JUMPDEST 
0xe4: V72 = CALLVALUE
0xe5: V73 = ISZERO V72
0xe6: V74 = 0xee
0xe9: JUMPI 0xee V73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xea
[0xea:0xed]
---
Predecessors: [0xe3]
Successors: []
---
0xea PUSH1 0x0
0xec DUP1
0xed REVERT
---
0xea: V75 = 0x0
0xed: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf5]
---
Predecessors: [0xe3]
Successors: [0x20b]
---
0xee JUMPDEST
0xef PUSH2 0xb4
0xf2 PUSH2 0x20b
0xf5 JUMP
---
0xee: JUMPDEST 
0xef: V76 = 0xb4
0xf2: V77 = 0x20b
0xf5: JUMP 0x20b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V10, 0xb4]

================================

Block 0xf6
[0xf6:0xfc]
---
Predecessors: [0x6a]
Successors: [0xfd, 0x101]
---
0xf6 JUMPDEST
0xf7 CALLVALUE
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf6: JUMPDEST 
0xf7: V78 = CALLVALUE
0xf8: V79 = ISZERO V78
0xf9: V80 = 0x101
0xfc: JUMPI 0x101 V79
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf6]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V81 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x21a]
---
0x101 JUMPDEST
0x102 PUSH2 0x75
0x105 PUSH1 0x4
0x107 CALLDATALOAD
0x108 PUSH2 0x21a
0x10b JUMP
---
0x101: JUMPDEST 
0x102: V82 = 0x75
0x105: V83 = 0x4
0x107: V84 = CALLDATALOAD 0x4
0x108: V85 = 0x21a
0x10b: JUMP 0x21a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75, V84]
Exit stack: [V10, 0x75, V84]

================================

Block 0x10c
[0x10c:0x17f]
---
Predecessors: [0x77]
Successors: [0x180, 0x184]
---
0x10c JUMPDEST
0x10d PUSH1 0x1
0x10f SLOAD
0x110 PUSH1 0x1
0x112 PUSH1 0xa0
0x114 PUSH1 0x2
0x116 EXP
0x117 SUB
0x118 ADDRESS
0x119 DUP2
0x11a AND
0x11b BALANCE
0x11c SWAP2
0x11d PUSH1 0x0
0x11f SWAP2
0x120 AND
0x121 PUSH4 0xffffffff
0x126 DUP5
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP3
0x12b PUSH4 0xffffffff
0x130 AND
0x131 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x14f MUL
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x4
0x154 ADD
0x155 PUSH1 0x0
0x157 PUSH1 0x40
0x159 MLOAD
0x15a DUP1
0x15b DUP4
0x15c SUB
0x15d DUP2
0x15e DUP6
0x15f DUP9
0x160 PUSH2 0x8796
0x163 GAS
0x164 SUB
0x165 CALL
0x166 POP
0x167 POP
0x168 POP
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 ADDRESS
0x172 AND
0x173 BALANCE
0x174 SWAP3
0x175 POP
0x176 POP
0x177 POP
0x178 DUP2
0x179 DUP2
0x17a LT
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x10c: JUMPDEST 
0x10d: V86 = 0x1
0x10f: V87 = S[0x1]
0x110: V88 = 0x1
0x112: V89 = 0xa0
0x114: V90 = 0x2
0x116: V91 = EXP 0x2 0xa0
0x117: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x118: V93 = ADDRESS
0x11a: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x11b: V95 = BALANCE V94
0x11d: V96 = 0x0
0x120: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x121: V98 = 0xffffffff
0x127: V99 = 0x40
0x129: V100 = M[0x40]
0x12b: V101 = 0xffffffff
0x130: V102 = AND 0xffffffff 0xffffffff
0x131: V103 = 0x100000000000000000000000000000000000000000000000000000000
0x14f: V104 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xffffffff
0x151: M[V100] = 0xffffffff00000000000000000000000000000000000000000000000000000000
0x152: V105 = 0x4
0x154: V106 = ADD 0x4 V100
0x155: V107 = 0x0
0x157: V108 = 0x40
0x159: V109 = M[0x40]
0x15c: V110 = SUB V106 V109
0x160: V111 = 0x8796
0x163: V112 = GAS
0x164: V113 = SUB V112 0x8796
0x165: V114 = CALL V113 V97 V31 V109 V110 V109 0x0
0x169: V115 = 0x1
0x16b: V116 = 0xa0
0x16d: V117 = 0x2
0x16f: V118 = EXP 0x2 0xa0
0x170: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V120 = ADDRESS
0x172: V121 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x173: V122 = BALANCE V121
0x17a: V123 = LT V122 V95
0x17b: V124 = ISZERO V123
0x17c: V125 = 0x184
0x17f: JUMPI 0x184 V124
---
Entry stack: [V10, 0x75, V31]
Stack pops: 1
Stack additions: [S0, V95, V122]
Exit stack: [V10, 0x75, V31, V95, V122]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x10c]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V126 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V31, V95, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V31, V95, V122]

================================

Block 0x184
[0x184:0x188]
---
Predecessors: [0x10c]
Successors: [0x75]
---
0x184 JUMPDEST
0x185 POP
0x186 POP
0x187 POP
0x188 JUMP
---
0x184: JUMPDEST 
0x188: JUMP 0x75
---
Entry stack: [V10, 0x75, V31, V95, V122]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x189
[0x189:0x19f]
---
Predecessors: [0x8d]
Successors: [0x1a0, 0x1a4]
---
0x189 JUMPDEST
0x18a PUSH1 0x0
0x18c SLOAD
0x18d CALLER
0x18e PUSH1 0x1
0x190 PUSH1 0xa0
0x192 PUSH1 0x2
0x194 EXP
0x195 SUB
0x196 SWAP1
0x197 DUP2
0x198 AND
0x199 SWAP2
0x19a AND
0x19b EQ
0x19c PUSH2 0x1a4
0x19f JUMPI
---
0x189: JUMPDEST 
0x18a: V127 = 0x0
0x18c: V128 = S[0x0]
0x18d: V129 = CALLER
0x18e: V130 = 0x1
0x190: V131 = 0xa0
0x192: V132 = 0x2
0x194: V133 = EXP 0x2 0xa0
0x195: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x19a: V136 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x19b: V137 = EQ V136 V135
0x19c: V138 = 0x1a4
0x19f: JUMPI 0x1a4 V137
---
Entry stack: [V10, 0x75, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V45]

================================

Block 0x1a0
[0x1a0:0x1a3]
---
Predecessors: [0x189]
Successors: []
---
0x1a0 PUSH1 0x0
0x1a2 DUP1
0x1a3 REVERT
---
0x1a0: V139 = 0x0
0x1a3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V45]

================================

Block 0x1a4
[0x1a4:0x1d2]
---
Predecessors: [0x189]
Successors: [0x75]
---
0x1a4 JUMPDEST
0x1a5 PUSH1 0x1
0x1a7 DUP1
0x1a8 SLOAD
0x1a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1be NOT
0x1bf AND
0x1c0 PUSH1 0x1
0x1c2 PUSH1 0xa0
0x1c4 PUSH1 0x2
0x1c6 EXP
0x1c7 SUB
0x1c8 SWAP3
0x1c9 SWAP1
0x1ca SWAP3
0x1cb AND
0x1cc SWAP2
0x1cd SWAP1
0x1ce SWAP2
0x1cf OR
0x1d0 SWAP1
0x1d1 SSTORE
0x1d2 JUMP
---
0x1a4: JUMPDEST 
0x1a5: V140 = 0x1
0x1a8: V141 = S[0x1]
0x1a9: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V143 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V144 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V141
0x1c0: V145 = 0x1
0x1c2: V146 = 0xa0
0x1c4: V147 = 0x2
0x1c6: V148 = EXP 0x2 0xa0
0x1c7: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x1cf: V151 = OR V150 V144
0x1d1: S[0x1] = V151
0x1d2: JUMP 0x75
---
Entry stack: [V10, 0x75, V45]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d3
[0x1d3:0x1e1]
---
Predecessors: [0xac]
Successors: [0xb4]
---
0x1d3 JUMPDEST
0x1d4 PUSH1 0x0
0x1d6 SLOAD
0x1d7 PUSH1 0x1
0x1d9 PUSH1 0xa0
0x1db PUSH1 0x2
0x1dd EXP
0x1de SUB
0x1df AND
0x1e0 DUP2
0x1e1 JUMP
---
0x1d3: JUMPDEST 
0x1d4: V152 = 0x0
0x1d6: V153 = S[0x0]
0x1d7: V154 = 0x1
0x1d9: V155 = 0xa0
0x1db: V156 = 0x2
0x1dd: V157 = EXP 0x2 0xa0
0x1de: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1df: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x1e1: JUMP 0xb4
---
Entry stack: [V10, 0xb4]
Stack pops: 1
Stack additions: [S0, V159]
Exit stack: [V10, 0xb4, V159]

================================

Block 0x1e2
[0x1e2:0x1f8]
---
Predecessors: [0xdb]
Successors: [0x1f9, 0x1fd]
---
0x1e2 JUMPDEST
0x1e3 PUSH1 0x0
0x1e5 SLOAD
0x1e6 CALLER
0x1e7 PUSH1 0x1
0x1e9 PUSH1 0xa0
0x1eb PUSH1 0x2
0x1ed EXP
0x1ee SUB
0x1ef SWAP1
0x1f0 DUP2
0x1f1 AND
0x1f2 SWAP2
0x1f3 AND
0x1f4 EQ
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V160 = 0x0
0x1e5: V161 = S[0x0]
0x1e6: V162 = CALLER
0x1e7: V163 = 0x1
0x1e9: V164 = 0xa0
0x1eb: V165 = 0x2
0x1ed: V166 = EXP 0x2 0xa0
0x1ee: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f1: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x1f3: V169 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V170 = EQ V169 V168
0x1f5: V171 = 0x1fd
0x1f8: JUMPI 0x1fd V170
---
Entry stack: [V10, 0x75]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1e2]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V172 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75]

================================

Block 0x1fd
[0x1fd:0x20a]
---
Predecessors: [0x1e2]
Successors: []
---
0x1fd JUMPDEST
0x1fe PUSH1 0x0
0x200 SLOAD
0x201 PUSH1 0x1
0x203 PUSH1 0xa0
0x205 PUSH1 0x2
0x207 EXP
0x208 SUB
0x209 AND
0x20a SELFDESTRUCT
---
0x1fd: JUMPDEST 
0x1fe: V173 = 0x0
0x200: V174 = S[0x0]
0x201: V175 = 0x1
0x203: V176 = 0xa0
0x205: V177 = 0x2
0x207: V178 = EXP 0x2 0xa0
0x208: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x209: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x20a: SELFDESTRUCT V180
---
Entry stack: [V10, 0x75]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75]

================================

Block 0x20b
[0x20b:0x219]
---
Predecessors: [0xee]
Successors: [0xb4]
---
0x20b JUMPDEST
0x20c PUSH1 0x1
0x20e SLOAD
0x20f PUSH1 0x1
0x211 PUSH1 0xa0
0x213 PUSH1 0x2
0x215 EXP
0x216 SUB
0x217 AND
0x218 DUP2
0x219 JUMP
---
0x20b: JUMPDEST 
0x20c: V181 = 0x1
0x20e: V182 = S[0x1]
0x20f: V183 = 0x1
0x211: V184 = 0xa0
0x213: V185 = 0x2
0x215: V186 = EXP 0x2 0xa0
0x216: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x217: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x219: JUMP 0xb4
---
Entry stack: [V10, 0xb4]
Stack pops: 1
Stack additions: [S0, V188]
Exit stack: [V10, 0xb4, V188]

================================

Block 0x21a
[0x21a:0x221]
---
Predecessors: [0x101]
Successors: [0x222, 0x25f]
---
0x21a JUMPDEST
0x21b DUP1
0x21c ISZERO
0x21d ISZERO
0x21e PUSH2 0x25f
0x221 JUMPI
---
0x21a: JUMPDEST 
0x21c: V189 = ISZERO V84
0x21d: V190 = ISZERO V189
0x21e: V191 = 0x25f
0x221: JUMPI 0x25f V190
---
Entry stack: [V10, 0x75, V84]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x75, V84]

================================

Block 0x222
[0x222:0x255]
---
Predecessors: [0x21a]
Successors: [0x256, 0x25a]
---
0x222 PUSH1 0x0
0x224 SLOAD
0x225 PUSH1 0x1
0x227 PUSH1 0xa0
0x229 PUSH1 0x2
0x22b EXP
0x22c SUB
0x22d SWAP1
0x22e DUP2
0x22f AND
0x230 SWAP1
0x231 ADDRESS
0x232 AND
0x233 BALANCE
0x234 DUP1
0x235 ISZERO
0x236 PUSH2 0x8fc
0x239 MUL
0x23a SWAP1
0x23b PUSH1 0x40
0x23d MLOAD
0x23e PUSH1 0x0
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 DUP4
0x245 SUB
0x246 DUP2
0x247 DUP6
0x248 DUP9
0x249 DUP9
0x24a CALL
0x24b SWAP4
0x24c POP
0x24d POP
0x24e POP
0x24f POP
0x250 ISZERO
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x222: V192 = 0x0
0x224: V193 = S[0x0]
0x225: V194 = 0x1
0x227: V195 = 0xa0
0x229: V196 = 0x2
0x22b: V197 = EXP 0x2 0xa0
0x22c: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22f: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x231: V200 = ADDRESS
0x232: V201 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x233: V202 = BALANCE V201
0x235: V203 = ISZERO V202
0x236: V204 = 0x8fc
0x239: V205 = MUL 0x8fc V203
0x23b: V206 = 0x40
0x23d: V207 = M[0x40]
0x23e: V208 = 0x0
0x240: V209 = 0x40
0x242: V210 = M[0x40]
0x245: V211 = SUB V207 V210
0x24a: V212 = CALL V205 V199 V202 V210 V211 V210 0x0
0x250: V213 = ISZERO V212
0x251: V214 = ISZERO V213
0x252: V215 = 0x25a
0x255: JUMPI 0x25a V214
---
Entry stack: [V10, 0x75, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V84]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x222]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V216 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V84]

================================

Block 0x25a
[0x25a:0x25e]
---
Predecessors: [0x222]
Successors: [0x292]
---
0x25a JUMPDEST
0x25b PUSH2 0x292
0x25e JUMP
---
0x25a: JUMPDEST 
0x25b: V217 = 0x292
0x25e: JUMP 0x292
---
Entry stack: [V10, 0x75, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V84]

================================

Block 0x25f
[0x25f:0x28d]
---
Predecessors: [0x21a]
Successors: [0x28e, 0x292]
---
0x25f JUMPDEST
0x260 PUSH1 0x0
0x262 SLOAD
0x263 PUSH1 0x1
0x265 PUSH1 0xa0
0x267 PUSH1 0x2
0x269 EXP
0x26a SUB
0x26b AND
0x26c DUP2
0x26d ISZERO
0x26e PUSH2 0x8fc
0x271 MUL
0x272 DUP3
0x273 PUSH1 0x40
0x275 MLOAD
0x276 PUSH1 0x0
0x278 PUSH1 0x40
0x27a MLOAD
0x27b DUP1
0x27c DUP4
0x27d SUB
0x27e DUP2
0x27f DUP6
0x280 DUP9
0x281 DUP9
0x282 CALL
0x283 SWAP4
0x284 POP
0x285 POP
0x286 POP
0x287 POP
0x288 ISZERO
0x289 ISZERO
0x28a PUSH2 0x292
0x28d JUMPI
---
0x25f: JUMPDEST 
0x260: V218 = 0x0
0x262: V219 = S[0x0]
0x263: V220 = 0x1
0x265: V221 = 0xa0
0x267: V222 = 0x2
0x269: V223 = EXP 0x2 0xa0
0x26a: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26b: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x26d: V226 = ISZERO V84
0x26e: V227 = 0x8fc
0x271: V228 = MUL 0x8fc V226
0x273: V229 = 0x40
0x275: V230 = M[0x40]
0x276: V231 = 0x0
0x278: V232 = 0x40
0x27a: V233 = M[0x40]
0x27d: V234 = SUB V230 V233
0x282: V235 = CALL V228 V225 V84 V233 V234 V233 0x0
0x288: V236 = ISZERO V235
0x289: V237 = ISZERO V236
0x28a: V238 = 0x292
0x28d: JUMPI 0x292 V237
---
Entry stack: [V10, 0x75, V84]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x75, V84]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x25f]
Successors: []
---
0x28e PUSH1 0x0
0x290 DUP1
0x291 REVERT
---
0x28e: V239 = 0x0
0x291: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75, V84]

================================

Block 0x292
[0x292:0x294]
---
Predecessors: [0x25a, 0x25f]
Successors: [0x75]
---
0x292 JUMPDEST
0x293 POP
0x294 JUMP
---
0x292: JUMPDEST 
0x294: JUMP 0x75
---
Entry stack: [V10, 0x75, V84]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x295
[0x295:0x2c5]
---
Predecessors: []
Successors: []
---
0x295 STOP
0x296 LOG1
0x297 PUSH6 0x627a7a723058
0x29e SHA3
0x29f MISSING 0xf6
0x2a0 MISSING 0xef
0x2a1 MISSING 0xc1
0x2a2 SWAP15
0x2a3 SWAP3
0x2a4 PUSH8 0xc61a0c7aeb24285
0x2ad MISSING 0xd5
0x2ae ADDMOD
0x2af DELEGATECALL
0x2b0 MISSING 0x24
0x2b1 PUSH20 0xb023e0303d7fd4307e65fcefd40029
---
0x295: STOP 
0x296: LOG S0 S1 S2
0x297: V240 = 0x627a7a723058
0x29e: V241 = SHA3 0x627a7a723058 S3
0x29f: MISSING 0xf6
0x2a0: MISSING 0xef
0x2a1: MISSING 0xc1
0x2a4: V242 = 0xc61a0c7aeb24285
0x2ad: MISSING 0xd5
0x2ae: V243 = ADDMOD S0 S1 S2
0x2af: V244 = DELEGATECALL V243 S3 S4 S5 S6 S7
0x2b0: MISSING 0x24
0x2b1: V245 = 0xb023e0303d7fd4307e65fcefd40029
---
Entry stack: []
Stack pops: 0
Stack additions: [V241, 0xc61a0c7aeb24285, S3, S1, S2, S15, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, V244, 0xb023e0303d7fd4307e65fcefd40029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6898f82b
Entry block: 0x77
Exit block: 0x75
Body: 0x75, 0x77, 0x10c, 0x180, 0x184

Function 1:
Public function signature: 0x776d1a01
Entry block: 0x82
Exit block: 0x75
Body: 0x75, 0x82, 0x89, 0x8d, 0x189, 0x1a0, 0x1a4

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xa1
Exit block: 0xb4
Body: 0xa1, 0xa8, 0xac, 0xb4, 0x1d3

Function 3:
Public function signature: 0xc5563720
Entry block: 0xd0
Exit block: 0x1f9
Body: 0xd0, 0xd7, 0xdb, 0x1e2, 0x1f9, 0x1fd

Function 4:
Public function signature: 0xd4b83992
Entry block: 0xe3
Exit block: 0xb4
Body: 0xb4, 0xe3, 0xea, 0xee, 0x20b

Function 5:
Public function signature: 0xe29940b9
Entry block: 0xf6
Exit block: 0x75
Body: 0x75, 0xf6, 0xfd, 0x101, 0x21a, 0x222, 0x256, 0x25a, 0x25f, 0x28e, 0x292

Function 6:
Public fallback function
Entry block: 0x75
Exit block: 0x75
Body: 0x75

