Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x166589bd
0x3c EQ
0x3d PUSH2 0x7d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x166589bd
0x3c: V13 = EQ 0x166589bd V11
0x3d: V14 = 0x7d
0x40: JUMPI 0x7d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcb]
---
0x41 DUP1
0x42 PUSH4 0x35f51847
0x47 EQ
0x48 PUSH2 0xcb
0x4b JUMPI
---
0x42: V15 = 0x35f51847
0x47: V16 = EQ 0x35f51847 V11
0x48: V17 = 0xcb
0x4b: JUMPI 0xcb V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x18d]
---
0x4c DUP1
0x4d PUSH4 0x7ab62d5a
0x52 EQ
0x53 PUSH2 0x18d
0x56 JUMPI
---
0x4d: V18 = 0x7ab62d5a
0x52: V19 = EQ 0x7ab62d5a V11
0x53: V20 = 0x18d
0x56: JUMPI 0x18d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1a4]
---
0x57 DUP1
0x58 PUSH4 0x7c3f1ac7
0x5d EQ
0x5e PUSH2 0x1a4
0x61 JUMPI
---
0x58: V21 = 0x7c3f1ac7
0x5d: V22 = EQ 0x7c3f1ac7 V11
0x5e: V23 = 0x1a4
0x61: JUMPI 0x1a4 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x220]
---
0x62 DUP1
0x63 PUSH4 0xc3b80730
0x68 EQ
0x69 PUSH2 0x220
0x6c JUMPI
---
0x63: V24 = 0xc3b80730
0x68: V25 = EQ 0xc3b80730 V11
0x69: V26 = 0x220
0x6c: JUMPI 0x220 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x256]
---
0x6d DUP1
0x6e PUSH4 0xd58c7faa
0x73 EQ
0x74 PUSH2 0x256
0x77 JUMPI
---
0x6e: V27 = 0xd58c7faa
0x73: V28 = EQ 0xd58c7faa V11
0x74: V29 = 0x256
0x77: JUMPI 0x256 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0xc8]
---
Predecessors: [0xd]
Successors: [0x2df]
---
0x7d JUMPDEST
0x7e PUSH2 0xc9
0x81 PUSH1 0x4
0x83 DUP1
0x84 CALLDATASIZE
0x85 SUB
0x86 DUP2
0x87 ADD
0x88 SWAP1
0x89 DUP1
0x8a DUP1
0x8b CALLDATALOAD
0x8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1 AND
0xa2 SWAP1
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP1
0xa7 SWAP3
0xa8 SWAP2
0xa9 SWAP1
0xaa DUP1
0xab CALLDATALOAD
0xac SWAP1
0xad PUSH1 0x20
0xaf ADD
0xb0 SWAP1
0xb1 SWAP3
0xb2 SWAP2
0xb3 SWAP1
0xb4 DUP1
0xb5 CALLDATALOAD
0xb6 PUSH1 0x0
0xb8 NOT
0xb9 AND
0xba SWAP1
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf SWAP3
0xc0 SWAP2
0xc1 SWAP1
0xc2 POP
0xc3 POP
0xc4 POP
0xc5 PUSH2 0x2df
0xc8 JUMP
---
0x7d: JUMPDEST 
0x7e: V31 = 0xc9
0x81: V32 = 0x4
0x84: V33 = CALLDATASIZE
0x85: V34 = SUB V33 0x4
0x87: V35 = ADD 0x4 V34
0x8b: V36 = CALLDATALOAD 0x4
0x8c: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xa3: V39 = 0x20
0xa5: V40 = ADD 0x20 0x4
0xab: V41 = CALLDATALOAD 0x24
0xad: V42 = 0x20
0xaf: V43 = ADD 0x20 0x24
0xb5: V44 = CALLDATALOAD 0x44
0xb6: V45 = 0x0
0xb8: V46 = NOT 0x0
0xb9: V47 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V44
0xbb: V48 = 0x20
0xbd: V49 = ADD 0x20 0x44
0xc5: V50 = 0x2df
0xc8: JUMP 0x2df
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc9, V38, V41, V47]
Exit stack: [V11, 0xc9, V38, V41, V47]

================================

Block 0xc9
[0xc9:0xca]
---
Predecessors: [0x2df]
Successors: []
---
0xc9 JUMPDEST
0xca STOP
---
0xc9: JUMPDEST 
0xca: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcb
[0xcb:0x18a]
---
Predecessors: [0x41]
Successors: [0x324]
---
0xcb JUMPDEST
0xcc PUSH2 0x18b
0xcf PUSH1 0x4
0xd1 DUP1
0xd2 CALLDATASIZE
0xd3 SUB
0xd4 DUP2
0xd5 ADD
0xd6 SWAP1
0xd7 DUP1
0xd8 DUP1
0xd9 CALLDATALOAD
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef AND
0xf0 SWAP1
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP1
0xf5 SWAP3
0xf6 SWAP2
0xf7 SWAP1
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa SWAP1
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP1
0xff DUP3
0x100 ADD
0x101 DUP1
0x102 CALLDATALOAD
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 DUP1
0x109 DUP1
0x10a PUSH1 0x1f
0x10c ADD
0x10d PUSH1 0x20
0x10f DUP1
0x110 SWAP2
0x111 DIV
0x112 MUL
0x113 PUSH1 0x20
0x115 ADD
0x116 PUSH1 0x40
0x118 MLOAD
0x119 SWAP1
0x11a DUP2
0x11b ADD
0x11c PUSH1 0x40
0x11e MSTORE
0x11f DUP1
0x120 SWAP4
0x121 SWAP3
0x122 SWAP2
0x123 SWAP1
0x124 DUP2
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x20
0x129 ADD
0x12a DUP4
0x12b DUP4
0x12c DUP1
0x12d DUP3
0x12e DUP5
0x12f CALLDATACOPY
0x130 DUP3
0x131 ADD
0x132 SWAP2
0x133 POP
0x134 POP
0x135 POP
0x136 POP
0x137 POP
0x138 POP
0x139 SWAP2
0x13a SWAP3
0x13b SWAP2
0x13c SWAP3
0x13d SWAP1
0x13e DUP1
0x13f CALLDATALOAD
0x140 SWAP1
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP1
0x145 DUP3
0x146 ADD
0x147 DUP1
0x148 CALLDATALOAD
0x149 SWAP1
0x14a PUSH1 0x20
0x14c ADD
0x14d SWAP1
0x14e DUP1
0x14f DUP1
0x150 PUSH1 0x1f
0x152 ADD
0x153 PUSH1 0x20
0x155 DUP1
0x156 SWAP2
0x157 DIV
0x158 MUL
0x159 PUSH1 0x20
0x15b ADD
0x15c PUSH1 0x40
0x15e MLOAD
0x15f SWAP1
0x160 DUP2
0x161 ADD
0x162 PUSH1 0x40
0x164 MSTORE
0x165 DUP1
0x166 SWAP4
0x167 SWAP3
0x168 SWAP2
0x169 SWAP1
0x16a DUP2
0x16b DUP2
0x16c MSTORE
0x16d PUSH1 0x20
0x16f ADD
0x170 DUP4
0x171 DUP4
0x172 DUP1
0x173 DUP3
0x174 DUP5
0x175 CALLDATACOPY
0x176 DUP3
0x177 ADD
0x178 SWAP2
0x179 POP
0x17a POP
0x17b POP
0x17c POP
0x17d POP
0x17e POP
0x17f SWAP2
0x180 SWAP3
0x181 SWAP2
0x182 SWAP3
0x183 SWAP1
0x184 POP
0x185 POP
0x186 POP
0x187 PUSH2 0x324
0x18a JUMP
---
0xcb: JUMPDEST 
0xcc: V51 = 0x18b
0xcf: V52 = 0x4
0xd2: V53 = CALLDATASIZE
0xd3: V54 = SUB V53 0x4
0xd5: V55 = ADD 0x4 V54
0xd9: V56 = CALLDATALOAD 0x4
0xda: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xf1: V59 = 0x20
0xf3: V60 = ADD 0x20 0x4
0xf9: V61 = CALLDATALOAD 0x24
0xfb: V62 = 0x20
0xfd: V63 = ADD 0x20 0x24
0x100: V64 = ADD 0x4 V61
0x102: V65 = CALLDATALOAD V64
0x104: V66 = 0x20
0x106: V67 = ADD 0x20 V64
0x10a: V68 = 0x1f
0x10c: V69 = ADD 0x1f V65
0x10d: V70 = 0x20
0x111: V71 = DIV V69 0x20
0x112: V72 = MUL V71 0x20
0x113: V73 = 0x20
0x115: V74 = ADD 0x20 V72
0x116: V75 = 0x40
0x118: V76 = M[0x40]
0x11b: V77 = ADD V76 V74
0x11c: V78 = 0x40
0x11e: M[0x40] = V77
0x126: M[V76] = V65
0x127: V79 = 0x20
0x129: V80 = ADD 0x20 V76
0x12f: CALLDATACOPY V80 V67 V65
0x131: V81 = ADD V80 V65
0x13f: V82 = CALLDATALOAD 0x44
0x141: V83 = 0x20
0x143: V84 = ADD 0x20 0x44
0x146: V85 = ADD 0x4 V82
0x148: V86 = CALLDATALOAD V85
0x14a: V87 = 0x20
0x14c: V88 = ADD 0x20 V85
0x150: V89 = 0x1f
0x152: V90 = ADD 0x1f V86
0x153: V91 = 0x20
0x157: V92 = DIV V90 0x20
0x158: V93 = MUL V92 0x20
0x159: V94 = 0x20
0x15b: V95 = ADD 0x20 V93
0x15c: V96 = 0x40
0x15e: V97 = M[0x40]
0x161: V98 = ADD V97 V95
0x162: V99 = 0x40
0x164: M[0x40] = V98
0x16c: M[V97] = V86
0x16d: V100 = 0x20
0x16f: V101 = ADD 0x20 V97
0x175: CALLDATACOPY V101 V88 V86
0x177: V102 = ADD V101 V86
0x187: V103 = 0x324
0x18a: JUMP 0x324
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x18b, V58, V76, V97]
Exit stack: [V11, 0x18b, V58, V76, V97]

================================

Block 0x18b
[0x18b:0x18c]
---
Predecessors: [0x4cd]
Successors: []
---
0x18b JUMPDEST
0x18c STOP
---
0x18b: JUMPDEST 
0x18c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18d
[0x18d:0x194]
---
Predecessors: [0x4c]
Successors: [0x195, 0x199]
---
0x18d JUMPDEST
0x18e CALLVALUE
0x18f DUP1
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18d: JUMPDEST 
0x18e: V104 = CALLVALUE
0x190: V105 = ISZERO V104
0x191: V106 = 0x199
0x194: JUMPI 0x199 V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V11, V104]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18d]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V107 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V11, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V104]

================================

Block 0x199
[0x199:0x1a1]
---
Predecessors: [0x18d]
Successors: [0x4ea]
---
0x199 JUMPDEST
0x19a POP
0x19b PUSH2 0x1a2
0x19e PUSH2 0x4ea
0x1a1 JUMP
---
0x199: JUMPDEST 
0x19b: V108 = 0x1a2
0x19e: V109 = 0x4ea
0x1a1: JUMP 0x4ea
---
Entry stack: [V11, V104]
Stack pops: 1
Stack additions: [0x1a2]
Exit stack: [V11, 0x1a2]

================================

Block 0x1a2
[0x1a2:0x1a3]
---
Predecessors: [0x5bf]
Successors: []
---
0x1a2 JUMPDEST
0x1a3 STOP
---
0x1a2: JUMPDEST 
0x1a3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a4
[0x1a4:0x21d]
---
Predecessors: [0x57]
Successors: [0x5c1]
---
0x1a4 JUMPDEST
0x1a5 PUSH2 0x21e
0x1a8 PUSH1 0x4
0x1aa DUP1
0x1ab CALLDATASIZE
0x1ac SUB
0x1ad DUP2
0x1ae ADD
0x1af SWAP1
0x1b0 DUP1
0x1b1 DUP1
0x1b2 CALLDATALOAD
0x1b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c8 AND
0x1c9 SWAP1
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd SWAP1
0x1ce SWAP3
0x1cf SWAP2
0x1d0 SWAP1
0x1d1 DUP1
0x1d2 CALLDATALOAD
0x1d3 SWAP1
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 SWAP1
0x1d8 DUP3
0x1d9 ADD
0x1da DUP1
0x1db CALLDATALOAD
0x1dc SWAP1
0x1dd PUSH1 0x20
0x1df ADD
0x1e0 SWAP1
0x1e1 DUP1
0x1e2 DUP1
0x1e3 PUSH1 0x1f
0x1e5 ADD
0x1e6 PUSH1 0x20
0x1e8 DUP1
0x1e9 SWAP2
0x1ea DIV
0x1eb MUL
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef PUSH1 0x40
0x1f1 MLOAD
0x1f2 SWAP1
0x1f3 DUP2
0x1f4 ADD
0x1f5 PUSH1 0x40
0x1f7 MSTORE
0x1f8 DUP1
0x1f9 SWAP4
0x1fa SWAP3
0x1fb SWAP2
0x1fc SWAP1
0x1fd DUP2
0x1fe DUP2
0x1ff MSTORE
0x200 PUSH1 0x20
0x202 ADD
0x203 DUP4
0x204 DUP4
0x205 DUP1
0x206 DUP3
0x207 DUP5
0x208 CALLDATACOPY
0x209 DUP3
0x20a ADD
0x20b SWAP2
0x20c POP
0x20d POP
0x20e POP
0x20f POP
0x210 POP
0x211 POP
0x212 SWAP2
0x213 SWAP3
0x214 SWAP2
0x215 SWAP3
0x216 SWAP1
0x217 POP
0x218 POP
0x219 POP
0x21a PUSH2 0x5c1
0x21d JUMP
---
0x1a4: JUMPDEST 
0x1a5: V110 = 0x21e
0x1a8: V111 = 0x4
0x1ab: V112 = CALLDATASIZE
0x1ac: V113 = SUB V112 0x4
0x1ae: V114 = ADD 0x4 V113
0x1b2: V115 = CALLDATALOAD 0x4
0x1b3: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1ca: V118 = 0x20
0x1cc: V119 = ADD 0x20 0x4
0x1d2: V120 = CALLDATALOAD 0x24
0x1d4: V121 = 0x20
0x1d6: V122 = ADD 0x20 0x24
0x1d9: V123 = ADD 0x4 V120
0x1db: V124 = CALLDATALOAD V123
0x1dd: V125 = 0x20
0x1df: V126 = ADD 0x20 V123
0x1e3: V127 = 0x1f
0x1e5: V128 = ADD 0x1f V124
0x1e6: V129 = 0x20
0x1ea: V130 = DIV V128 0x20
0x1eb: V131 = MUL V130 0x20
0x1ec: V132 = 0x20
0x1ee: V133 = ADD 0x20 V131
0x1ef: V134 = 0x40
0x1f1: V135 = M[0x40]
0x1f4: V136 = ADD V135 V133
0x1f5: V137 = 0x40
0x1f7: M[0x40] = V136
0x1ff: M[V135] = V124
0x200: V138 = 0x20
0x202: V139 = ADD 0x20 V135
0x208: CALLDATACOPY V139 V126 V124
0x20a: V140 = ADD V139 V124
0x21a: V141 = 0x5c1
0x21d: JUMP 0x5c1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x21e, V117, V135]
Exit stack: [V11, 0x21e, V117, V135]

================================

Block 0x21e
[0x21e:0x21f]
---
Predecessors: [0x712]
Successors: []
---
0x21e JUMPDEST
0x21f STOP
---
0x21e: JUMPDEST 
0x21f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x220
[0x220:0x253]
---
Predecessors: [0x62]
Successors: [0x72d]
---
0x220 JUMPDEST
0x221 PUSH2 0x254
0x224 PUSH1 0x4
0x226 DUP1
0x227 CALLDATASIZE
0x228 SUB
0x229 DUP2
0x22a ADD
0x22b SWAP1
0x22c DUP1
0x22d DUP1
0x22e CALLDATALOAD
0x22f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x244 AND
0x245 SWAP1
0x246 PUSH1 0x20
0x248 ADD
0x249 SWAP1
0x24a SWAP3
0x24b SWAP2
0x24c SWAP1
0x24d POP
0x24e POP
0x24f POP
0x250 PUSH2 0x72d
0x253 JUMP
---
0x220: JUMPDEST 
0x221: V142 = 0x254
0x224: V143 = 0x4
0x227: V144 = CALLDATASIZE
0x228: V145 = SUB V144 0x4
0x22a: V146 = ADD 0x4 V145
0x22e: V147 = CALLDATALOAD 0x4
0x22f: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x244: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x246: V150 = 0x20
0x248: V151 = ADD 0x20 0x4
0x250: V152 = 0x72d
0x253: JUMP 0x72d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x254, V149]
Exit stack: [V11, 0x254, V149]

================================

Block 0x254
[0x254:0x255]
---
Predecessors: [0x788]
Successors: []
---
0x254 JUMPDEST
0x255 STOP
---
0x254: JUMPDEST 
0x255: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x256
[0x256:0x25d]
---
Predecessors: [0x6d]
Successors: [0x25e, 0x262]
---
0x256 JUMPDEST
0x257 CALLVALUE
0x258 DUP1
0x259 ISZERO
0x25a PUSH2 0x262
0x25d JUMPI
---
0x256: JUMPDEST 
0x257: V153 = CALLVALUE
0x259: V154 = ISZERO V153
0x25a: V155 = 0x262
0x25d: JUMPI 0x262 V154
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V153]
Exit stack: [V11, V153]

================================

Block 0x25e
[0x25e:0x261]
---
Predecessors: [0x256]
Successors: []
---
0x25e PUSH1 0x0
0x260 DUP1
0x261 REVERT
---
0x25e: V156 = 0x0
0x261: REVERT 0x0 0x0
---
Entry stack: [V11, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V153]

================================

Block 0x262
[0x262:0x2dc]
---
Predecessors: [0x256]
Successors: [0x83c]
---
0x262 JUMPDEST
0x263 POP
0x264 PUSH2 0x2dd
0x267 PUSH1 0x4
0x269 DUP1
0x26a CALLDATASIZE
0x26b SUB
0x26c DUP2
0x26d ADD
0x26e SWAP1
0x26f DUP1
0x270 DUP1
0x271 CALLDATALOAD
0x272 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x287 AND
0x288 SWAP1
0x289 PUSH1 0x20
0x28b ADD
0x28c SWAP1
0x28d SWAP3
0x28e SWAP2
0x28f SWAP1
0x290 DUP1
0x291 CALLDATALOAD
0x292 SWAP1
0x293 PUSH1 0x20
0x295 ADD
0x296 SWAP1
0x297 DUP3
0x298 ADD
0x299 DUP1
0x29a CALLDATALOAD
0x29b SWAP1
0x29c PUSH1 0x20
0x29e ADD
0x29f SWAP1
0x2a0 DUP1
0x2a1 DUP1
0x2a2 PUSH1 0x1f
0x2a4 ADD
0x2a5 PUSH1 0x20
0x2a7 DUP1
0x2a8 SWAP2
0x2a9 DIV
0x2aa MUL
0x2ab PUSH1 0x20
0x2ad ADD
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 SWAP1
0x2b2 DUP2
0x2b3 ADD
0x2b4 PUSH1 0x40
0x2b6 MSTORE
0x2b7 DUP1
0x2b8 SWAP4
0x2b9 SWAP3
0x2ba SWAP2
0x2bb SWAP1
0x2bc DUP2
0x2bd DUP2
0x2be MSTORE
0x2bf PUSH1 0x20
0x2c1 ADD
0x2c2 DUP4
0x2c3 DUP4
0x2c4 DUP1
0x2c5 DUP3
0x2c6 DUP5
0x2c7 CALLDATACOPY
0x2c8 DUP3
0x2c9 ADD
0x2ca SWAP2
0x2cb POP
0x2cc POP
0x2cd POP
0x2ce POP
0x2cf POP
0x2d0 POP
0x2d1 SWAP2
0x2d2 SWAP3
0x2d3 SWAP2
0x2d4 SWAP3
0x2d5 SWAP1
0x2d6 POP
0x2d7 POP
0x2d8 POP
0x2d9 PUSH2 0x83c
0x2dc JUMP
---
0x262: JUMPDEST 
0x264: V157 = 0x2dd
0x267: V158 = 0x4
0x26a: V159 = CALLDATASIZE
0x26b: V160 = SUB V159 0x4
0x26d: V161 = ADD 0x4 V160
0x271: V162 = CALLDATALOAD 0x4
0x272: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x287: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x289: V165 = 0x20
0x28b: V166 = ADD 0x20 0x4
0x291: V167 = CALLDATALOAD 0x24
0x293: V168 = 0x20
0x295: V169 = ADD 0x20 0x24
0x298: V170 = ADD 0x4 V167
0x29a: V171 = CALLDATALOAD V170
0x29c: V172 = 0x20
0x29e: V173 = ADD 0x20 V170
0x2a2: V174 = 0x1f
0x2a4: V175 = ADD 0x1f V171
0x2a5: V176 = 0x20
0x2a9: V177 = DIV V175 0x20
0x2aa: V178 = MUL V177 0x20
0x2ab: V179 = 0x20
0x2ad: V180 = ADD 0x20 V178
0x2ae: V181 = 0x40
0x2b0: V182 = M[0x40]
0x2b3: V183 = ADD V182 V180
0x2b4: V184 = 0x40
0x2b6: M[0x40] = V183
0x2be: M[V182] = V171
0x2bf: V185 = 0x20
0x2c1: V186 = ADD 0x20 V182
0x2c7: CALLDATACOPY V186 V173 V171
0x2c9: V187 = ADD V186 V171
0x2d9: V188 = 0x83c
0x2dc: JUMP 0x83c
---
Entry stack: [V11, V153]
Stack pops: 1
Stack additions: [0x2dd, V164, V182]
Exit stack: [V11, 0x2dd, V164, V182]

================================

Block 0x2dd
[0x2dd:0x2de]
---
Predecessors: [0x897]
Successors: []
---
0x2dd JUMPDEST
0x2de STOP
---
0x2dd: JUMPDEST 
0x2de: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2df
[0x2df:0x323]
---
Predecessors: [0x7d]
Successors: [0xc9]
---
0x2df JUMPDEST
0x2e0 DUP3
0x2e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f6 AND
0x2f7 DUP3
0x2f8 DUP3
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc DUP1
0x2fd DUP3
0x2fe PUSH1 0x0
0x300 NOT
0x301 AND
0x302 PUSH1 0x0
0x304 NOT
0x305 AND
0x306 DUP2
0x307 MSTORE
0x308 PUSH1 0x20
0x30a ADD
0x30b SWAP2
0x30c POP
0x30d POP
0x30e PUSH1 0x0
0x310 PUSH1 0x40
0x312 MLOAD
0x313 DUP1
0x314 DUP4
0x315 SUB
0x316 DUP2
0x317 DUP6
0x318 DUP8
0x319 GAS
0x31a CALL
0x31b SWAP3
0x31c POP
0x31d POP
0x31e POP
0x31f POP
0x320 POP
0x321 POP
0x322 POP
0x323 JUMP
---
0x2df: JUMPDEST 
0x2e1: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x2f9: V191 = 0x40
0x2fb: V192 = M[0x40]
0x2fe: V193 = 0x0
0x300: V194 = NOT 0x0
0x301: V195 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V47
0x302: V196 = 0x0
0x304: V197 = NOT 0x0
0x305: V198 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V195
0x307: M[V192] = V198
0x308: V199 = 0x20
0x30a: V200 = ADD 0x20 V192
0x30e: V201 = 0x0
0x310: V202 = 0x40
0x312: V203 = M[0x40]
0x315: V204 = SUB V200 V203
0x319: V205 = GAS
0x31a: V206 = CALL V205 V190 V41 V203 V204 V203 0x0
0x323: JUMP 0xc9
---
Entry stack: [V11, 0xc9, V38, V41, V47]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x324
[0x324:0x37a]
---
Predecessors: [0xcb]
Successors: [0x37b, 0x37f]
---
0x324 JUMPDEST
0x325 PUSH1 0x0
0x327 DUP1
0x328 SWAP1
0x329 SLOAD
0x32a SWAP1
0x32b PUSH2 0x100
0x32e EXP
0x32f SWAP1
0x330 DIV
0x331 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x346 AND
0x347 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35c AND
0x35d CALLER
0x35e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x373 AND
0x374 EQ
0x375 ISZERO
0x376 ISZERO
0x377 PUSH2 0x37f
0x37a JUMPI
---
0x324: JUMPDEST 
0x325: V207 = 0x0
0x329: V208 = S[0x0]
0x32b: V209 = 0x100
0x32e: V210 = EXP 0x100 0x0
0x330: V211 = DIV V208 0x1
0x331: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x346: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x347: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x35c: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x35d: V216 = CALLER
0x35e: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x373: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x374: V219 = EQ V218 V215
0x375: V220 = ISZERO V219
0x376: V221 = ISZERO V220
0x377: V222 = 0x37f
0x37a: JUMPI 0x37f V221
---
Entry stack: [V11, 0x18b, V58, V76, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18b, V58, V76, V97]

================================

Block 0x37b
[0x37b:0x37e]
---
Predecessors: [0x324]
Successors: []
---
0x37b PUSH1 0x0
0x37d DUP1
0x37e REVERT
---
0x37b: V223 = 0x0
0x37e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18b, V58, V76, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18b, V58, V76, V97]

================================

Block 0x37f
[0x37f:0x42d]
---
Predecessors: [0x324]
Successors: [0x42e]
---
0x37f JUMPDEST
0x380 DUP3
0x381 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x396 AND
0x397 PUSH1 0x0
0x399 PUSH1 0x40
0x39b MLOAD
0x39c DUP1
0x39d DUP1
0x39e PUSH32 0x537461727447616d6528737472696e672c737472696e67290000000000000000
0x3bf DUP2
0x3c0 MSTORE
0x3c1 POP
0x3c2 PUSH1 0x18
0x3c4 ADD
0x3c5 SWAP1
0x3c6 POP
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca DUP1
0x3cb SWAP2
0x3cc SUB
0x3cd SWAP1
0x3ce SHA3
0x3cf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3ed SWAP1
0x3ee DIV
0x3ef SWAP1
0x3f0 DUP5
0x3f1 DUP5
0x3f2 PUSH1 0x40
0x3f4 MLOAD
0x3f5 DUP5
0x3f6 PUSH4 0xffffffff
0x3fb AND
0x3fc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x41a MUL
0x41b DUP2
0x41c MSTORE
0x41d PUSH1 0x4
0x41f ADD
0x420 DUP1
0x421 DUP4
0x422 DUP1
0x423 MLOAD
0x424 SWAP1
0x425 PUSH1 0x20
0x427 ADD
0x428 SWAP1
0x429 DUP1
0x42a DUP4
0x42b DUP4
0x42c PUSH1 0x0
---
0x37f: JUMPDEST 
0x381: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x396: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x397: V226 = 0x0
0x399: V227 = 0x40
0x39b: V228 = M[0x40]
0x39e: V229 = 0x537461727447616d6528737472696e672c737472696e67290000000000000000
0x3c0: M[V228] = 0x537461727447616d6528737472696e672c737472696e67290000000000000000
0x3c2: V230 = 0x18
0x3c4: V231 = ADD 0x18 V228
0x3c7: V232 = 0x40
0x3c9: V233 = M[0x40]
0x3cc: V234 = SUB V231 V233
0x3ce: V235 = SHA3 V233 V234
0x3cf: V236 = 0x100000000000000000000000000000000000000000000000000000000
0x3ee: V237 = DIV V235 0x100000000000000000000000000000000000000000000000000000000
0x3f2: V238 = 0x40
0x3f4: V239 = M[0x40]
0x3f6: V240 = 0xffffffff
0x3fb: V241 = AND 0xffffffff V237
0x3fc: V242 = 0x100000000000000000000000000000000000000000000000000000000
0x41a: V243 = MUL 0x100000000000000000000000000000000000000000000000000000000 V241
0x41c: M[V239] = V243
0x41d: V244 = 0x4
0x41f: V245 = ADD 0x4 V239
0x423: V246 = M[V76]
0x425: V247 = 0x20
0x427: V248 = ADD 0x20 V76
0x42c: V249 = 0x0
---
Entry stack: [V11, 0x18b, V58, V76, V97]
Stack pops: 3
Stack additions: [S2, S1, S0, V225, V237, 0x0, S1, S0, V245, V245, V248, V246, V246, V245, V248, 0x0]
Exit stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V245, V248, V246, V246, V245, V248, 0x0]

================================

Block 0x42e
[0x42e:0x436]
---
Predecessors: [0x37f, 0x437]
Successors: [0x437, 0x449]
---
0x42e JUMPDEST
0x42f DUP4
0x430 DUP2
0x431 LT
0x432 ISZERO
0x433 PUSH2 0x449
0x436 JUMPI
---
0x42e: JUMPDEST 
0x431: V250 = LT S0 V246
0x432: V251 = ISZERO V250
0x433: V252 = 0x449
0x436: JUMPI 0x449 V251
---
Entry stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V245, V248, V246, V246, V245, V248, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V245, V248, V246, V246, V245, V248, S0]

================================

Block 0x437
[0x437:0x448]
---
Predecessors: [0x42e]
Successors: [0x42e]
---
0x437 DUP1
0x438 DUP3
0x439 ADD
0x43a MLOAD
0x43b DUP2
0x43c DUP5
0x43d ADD
0x43e MSTORE
0x43f PUSH1 0x20
0x441 DUP2
0x442 ADD
0x443 SWAP1
0x444 POP
0x445 PUSH2 0x42e
0x448 JUMP
---
0x439: V253 = ADD V248 S0
0x43a: V254 = M[V253]
0x43d: V255 = ADD V245 S0
0x43e: M[V255] = V254
0x43f: V256 = 0x20
0x442: V257 = ADD S0 0x20
0x445: V258 = 0x42e
0x448: JUMP 0x42e
---
Entry stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V245, V248, V246, V246, V245, V248, S0]
Stack pops: 3
Stack additions: [S2, S1, V257]
Exit stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V245, V248, V246, V246, V245, V248, V257]

================================

Block 0x449
[0x449:0x45c]
---
Predecessors: [0x42e]
Successors: [0x45d, 0x476]
---
0x449 JUMPDEST
0x44a POP
0x44b POP
0x44c POP
0x44d POP
0x44e SWAP1
0x44f POP
0x450 SWAP1
0x451 DUP2
0x452 ADD
0x453 SWAP1
0x454 PUSH1 0x1f
0x456 AND
0x457 DUP1
0x458 ISZERO
0x459 PUSH2 0x476
0x45c JUMPI
---
0x449: JUMPDEST 
0x452: V259 = ADD V246 V245
0x454: V260 = 0x1f
0x456: V261 = AND 0x1f V246
0x458: V262 = ISZERO V261
0x459: V263 = 0x476
0x45c: JUMPI 0x476 V262
---
Entry stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V245, V248, V246, V246, V245, V248, S0]
Stack pops: 7
Stack additions: [V259, V261]
Exit stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V259, V261]

================================

Block 0x45d
[0x45d:0x475]
---
Predecessors: [0x449]
Successors: [0x476]
---
0x45d DUP1
0x45e DUP3
0x45f SUB
0x460 DUP1
0x461 MLOAD
0x462 PUSH1 0x1
0x464 DUP4
0x465 PUSH1 0x20
0x467 SUB
0x468 PUSH2 0x100
0x46b EXP
0x46c SUB
0x46d NOT
0x46e AND
0x46f DUP2
0x470 MSTORE
0x471 PUSH1 0x20
0x473 ADD
0x474 SWAP2
0x475 POP
---
0x45f: V264 = SUB V259 V261
0x461: V265 = M[V264]
0x462: V266 = 0x1
0x465: V267 = 0x20
0x467: V268 = SUB 0x20 V261
0x468: V269 = 0x100
0x46b: V270 = EXP 0x100 V268
0x46c: V271 = SUB V270 0x1
0x46d: V272 = NOT V271
0x46e: V273 = AND V272 V265
0x470: M[V264] = V273
0x471: V274 = 0x20
0x473: V275 = ADD 0x20 V264
---
Entry stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V259, V261]
Stack pops: 2
Stack additions: [V275, S0]
Exit stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V275, V261]

================================

Block 0x476
[0x476:0x484]
---
Predecessors: [0x449, 0x45d]
Successors: [0x485]
---
0x476 JUMPDEST
0x477 POP
0x478 DUP3
0x479 DUP1
0x47a MLOAD
0x47b SWAP1
0x47c PUSH1 0x20
0x47e ADD
0x47f SWAP1
0x480 DUP1
0x481 DUP4
0x482 DUP4
0x483 PUSH1 0x0
---
0x476: JUMPDEST 
0x47a: V276 = M[V97]
0x47c: V277 = 0x20
0x47e: V278 = ADD 0x20 V97
0x483: V279 = 0x0
---
Entry stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, S1, V261]
Stack pops: 4
Stack additions: [S3, S2, S1, V278, V276, V276, S1, V278, 0x0]
Exit stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, S1, V278, V276, V276, S1, V278, 0x0]

================================

Block 0x485
[0x485:0x48d]
---
Predecessors: [0x476, 0x48e]
Successors: [0x48e, 0x4a0]
---
0x485 JUMPDEST
0x486 DUP4
0x487 DUP2
0x488 LT
0x489 ISZERO
0x48a PUSH2 0x4a0
0x48d JUMPI
---
0x485: JUMPDEST 
0x488: V280 = LT S0 V276
0x489: V281 = ISZERO V280
0x48a: V282 = 0x4a0
0x48d: JUMPI 0x4a0 V281
---
Entry stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, S6, V278, V276, V276, S2, V278, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, S6, V278, V276, V276, S2, V278, S0]

================================

Block 0x48e
[0x48e:0x49f]
---
Predecessors: [0x485]
Successors: [0x485]
---
0x48e DUP1
0x48f DUP3
0x490 ADD
0x491 MLOAD
0x492 DUP2
0x493 DUP5
0x494 ADD
0x495 MSTORE
0x496 PUSH1 0x20
0x498 DUP2
0x499 ADD
0x49a SWAP1
0x49b POP
0x49c PUSH2 0x485
0x49f JUMP
---
0x490: V283 = ADD V278 S0
0x491: V284 = M[V283]
0x494: V285 = ADD S2 S0
0x495: M[V285] = V284
0x496: V286 = 0x20
0x499: V287 = ADD S0 0x20
0x49c: V288 = 0x485
0x49f: JUMP 0x485
---
Entry stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, S6, V278, V276, V276, S2, V278, S0]
Stack pops: 3
Stack additions: [S2, S1, V287]
Exit stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, S6, V278, V276, V276, S2, V278, V287]

================================

Block 0x4a0
[0x4a0:0x4b3]
---
Predecessors: [0x485]
Successors: [0x4b4, 0x4cd]
---
0x4a0 JUMPDEST
0x4a1 POP
0x4a2 POP
0x4a3 POP
0x4a4 POP
0x4a5 SWAP1
0x4a6 POP
0x4a7 SWAP1
0x4a8 DUP2
0x4a9 ADD
0x4aa SWAP1
0x4ab PUSH1 0x1f
0x4ad AND
0x4ae DUP1
0x4af ISZERO
0x4b0 PUSH2 0x4cd
0x4b3 JUMPI
---
0x4a0: JUMPDEST 
0x4a9: V289 = ADD V276 S6
0x4ab: V290 = 0x1f
0x4ad: V291 = AND 0x1f V276
0x4af: V292 = ISZERO V291
0x4b0: V293 = 0x4cd
0x4b3: JUMPI 0x4cd V292
---
Entry stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, S6, V278, V276, V276, S2, V278, S0]
Stack pops: 7
Stack additions: [V289, V291]
Exit stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V289, V291]

================================

Block 0x4b4
[0x4b4:0x4cc]
---
Predecessors: [0x4a0]
Successors: [0x4cd]
---
0x4b4 DUP1
0x4b5 DUP3
0x4b6 SUB
0x4b7 DUP1
0x4b8 MLOAD
0x4b9 PUSH1 0x1
0x4bb DUP4
0x4bc PUSH1 0x20
0x4be SUB
0x4bf PUSH2 0x100
0x4c2 EXP
0x4c3 SUB
0x4c4 NOT
0x4c5 AND
0x4c6 DUP2
0x4c7 MSTORE
0x4c8 PUSH1 0x20
0x4ca ADD
0x4cb SWAP2
0x4cc POP
---
0x4b6: V294 = SUB V289 V291
0x4b8: V295 = M[V294]
0x4b9: V296 = 0x1
0x4bc: V297 = 0x20
0x4be: V298 = SUB 0x20 V291
0x4bf: V299 = 0x100
0x4c2: V300 = EXP 0x100 V298
0x4c3: V301 = SUB V300 0x1
0x4c4: V302 = NOT V301
0x4c5: V303 = AND V302 V295
0x4c7: M[V294] = V303
0x4c8: V304 = 0x20
0x4ca: V305 = ADD 0x20 V294
---
Entry stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V289, V291]
Stack pops: 2
Stack additions: [V305, S0]
Exit stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, V305, V291]

================================

Block 0x4cd
[0x4cd:0x4e9]
---
Predecessors: [0x4a0, 0x4b4]
Successors: [0x18b]
---
0x4cd JUMPDEST
0x4ce POP
0x4cf SWAP3
0x4d0 POP
0x4d1 POP
0x4d2 POP
0x4d3 PUSH1 0x0
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 DUP1
0x4d9 DUP4
0x4da SUB
0x4db DUP2
0x4dc DUP6
0x4dd DUP9
0x4de GAS
0x4df CALL
0x4e0 SWAP4
0x4e1 POP
0x4e2 POP
0x4e3 POP
0x4e4 POP
0x4e5 POP
0x4e6 POP
0x4e7 POP
0x4e8 POP
0x4e9 JUMP
---
0x4cd: JUMPDEST 
0x4d3: V306 = 0x0
0x4d5: V307 = 0x40
0x4d7: V308 = M[0x40]
0x4da: V309 = SUB S1 V308
0x4de: V310 = GAS
0x4df: V311 = CALL V310 V225 0x0 V308 V309 V308 0x0
0x4e9: JUMP 0x18b
---
Entry stack: [V11, 0x18b, V58, V76, V97, V225, V237, 0x0, V76, V97, V245, S1, V291]
Stack pops: 12
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ea
[0x4ea:0x53f]
---
Predecessors: [0x199]
Successors: [0x540, 0x5bf]
---
0x4ea JUMPDEST
0x4eb PUSH1 0x0
0x4ed DUP1
0x4ee SWAP1
0x4ef SLOAD
0x4f0 SWAP1
0x4f1 PUSH2 0x100
0x4f4 EXP
0x4f5 SWAP1
0x4f6 DIV
0x4f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50c AND
0x50d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x522 AND
0x523 CALLER
0x524 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x539 AND
0x53a EQ
0x53b ISZERO
0x53c PUSH2 0x5bf
0x53f JUMPI
---
0x4ea: JUMPDEST 
0x4eb: V312 = 0x0
0x4ef: V313 = S[0x0]
0x4f1: V314 = 0x100
0x4f4: V315 = EXP 0x100 0x0
0x4f6: V316 = DIV V313 0x1
0x4f7: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x50c: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x50d: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x522: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x523: V321 = CALLER
0x524: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x539: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x53a: V324 = EQ V323 V320
0x53b: V325 = ISZERO V324
0x53c: V326 = 0x5bf
0x53f: JUMPI 0x5bf V325
---
Entry stack: [V11, 0x1a2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a2]

================================

Block 0x540
[0x540:0x5b3]
---
Predecessors: [0x4ea]
Successors: [0x5b4, 0x5bd]
---
0x540 PUSH1 0x0
0x542 DUP1
0x543 SWAP1
0x544 SLOAD
0x545 SWAP1
0x546 PUSH2 0x100
0x549 EXP
0x54a SWAP1
0x54b DIV
0x54c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x561 AND
0x562 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x577 AND
0x578 PUSH2 0x8fc
0x57b ADDRESS
0x57c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x591 AND
0x592 BALANCE
0x593 SWAP1
0x594 DUP2
0x595 ISZERO
0x596 MUL
0x597 SWAP1
0x598 PUSH1 0x40
0x59a MLOAD
0x59b PUSH1 0x0
0x59d PUSH1 0x40
0x59f MLOAD
0x5a0 DUP1
0x5a1 DUP4
0x5a2 SUB
0x5a3 DUP2
0x5a4 DUP6
0x5a5 DUP9
0x5a6 DUP9
0x5a7 CALL
0x5a8 SWAP4
0x5a9 POP
0x5aa POP
0x5ab POP
0x5ac POP
0x5ad ISZERO
0x5ae DUP1
0x5af ISZERO
0x5b0 PUSH2 0x5bd
0x5b3 JUMPI
---
0x540: V327 = 0x0
0x544: V328 = S[0x0]
0x546: V329 = 0x100
0x549: V330 = EXP 0x100 0x0
0x54b: V331 = DIV V328 0x1
0x54c: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x561: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x562: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x577: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x578: V336 = 0x8fc
0x57b: V337 = ADDRESS
0x57c: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x591: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x592: V340 = BALANCE V339
0x595: V341 = ISZERO V340
0x596: V342 = MUL V341 0x8fc
0x598: V343 = 0x40
0x59a: V344 = M[0x40]
0x59b: V345 = 0x0
0x59d: V346 = 0x40
0x59f: V347 = M[0x40]
0x5a2: V348 = SUB V344 V347
0x5a7: V349 = CALL V342 V335 V340 V347 V348 V347 0x0
0x5ad: V350 = ISZERO V349
0x5af: V351 = ISZERO V350
0x5b0: V352 = 0x5bd
0x5b3: JUMPI 0x5bd V351
---
Entry stack: [V11, 0x1a2]
Stack pops: 0
Stack additions: [V350]
Exit stack: [V11, 0x1a2, V350]

================================

Block 0x5b4
[0x5b4:0x5bc]
---
Predecessors: [0x540]
Successors: []
---
0x5b4 RETURNDATASIZE
0x5b5 PUSH1 0x0
0x5b7 DUP1
0x5b8 RETURNDATACOPY
0x5b9 RETURNDATASIZE
0x5ba PUSH1 0x0
0x5bc REVERT
---
0x5b4: V353 = RETURNDATASIZE
0x5b5: V354 = 0x0
0x5b8: RETURNDATACOPY 0x0 0x0 V353
0x5b9: V355 = RETURNDATASIZE
0x5ba: V356 = 0x0
0x5bc: REVERT 0x0 V355
---
Entry stack: [V11, 0x1a2, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a2, V350]

================================

Block 0x5bd
[0x5bd:0x5be]
---
Predecessors: [0x540]
Successors: [0x5bf]
---
0x5bd JUMPDEST
0x5be POP
---
0x5bd: JUMPDEST 
---
Entry stack: [V11, 0x1a2, V350]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a2]

================================

Block 0x5bf
[0x5bf:0x5c0]
---
Predecessors: [0x4ea, 0x5bd]
Successors: [0x1a2]
---
0x5bf JUMPDEST
0x5c0 JUMP
---
0x5bf: JUMPDEST 
0x5c0: JUMP 0x1a2
---
Entry stack: [V11, 0x1a2]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c1
[0x5c1:0x617]
---
Predecessors: [0x1a4]
Successors: [0x618, 0x61c]
---
0x5c1 JUMPDEST
0x5c2 PUSH1 0x0
0x5c4 DUP1
0x5c5 SWAP1
0x5c6 SLOAD
0x5c7 SWAP1
0x5c8 PUSH2 0x100
0x5cb EXP
0x5cc SWAP1
0x5cd DIV
0x5ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e3 AND
0x5e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f9 AND
0x5fa CALLER
0x5fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x610 AND
0x611 EQ
0x612 ISZERO
0x613 ISZERO
0x614 PUSH2 0x61c
0x617 JUMPI
---
0x5c1: JUMPDEST 
0x5c2: V357 = 0x0
0x5c6: V358 = S[0x0]
0x5c8: V359 = 0x100
0x5cb: V360 = EXP 0x100 0x0
0x5cd: V361 = DIV V358 0x1
0x5ce: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e3: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x5e4: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f9: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x5fa: V366 = CALLER
0x5fb: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x610: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x611: V369 = EQ V368 V365
0x612: V370 = ISZERO V369
0x613: V371 = ISZERO V370
0x614: V372 = 0x61c
0x617: JUMPI 0x61c V371
---
Entry stack: [V11, 0x21e, V117, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x21e, V117, V135]

================================

Block 0x618
[0x618:0x61b]
---
Predecessors: [0x5c1]
Successors: []
---
0x618 PUSH1 0x0
0x61a DUP1
0x61b REVERT
---
0x618: V373 = 0x0
0x61b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x21e, V117, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x21e, V117, V135]

================================

Block 0x61c
[0x61c:0x6c9]
---
Predecessors: [0x5c1]
Successors: [0x6ca]
---
0x61c JUMPDEST
0x61d DUP2
0x61e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x633 AND
0x634 PUSH1 0x0
0x636 PUSH1 0x40
0x638 MLOAD
0x639 DUP1
0x63a DUP1
0x63b PUSH32 0x506c617928737472696e67290000000000000000000000000000000000000000
0x65c DUP2
0x65d MSTORE
0x65e POP
0x65f PUSH1 0xc
0x661 ADD
0x662 SWAP1
0x663 POP
0x664 PUSH1 0x40
0x666 MLOAD
0x667 DUP1
0x668 SWAP2
0x669 SUB
0x66a SWAP1
0x66b SHA3
0x66c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x68a SWAP1
0x68b DIV
0x68c SWAP1
0x68d DUP4
0x68e PUSH1 0x40
0x690 MLOAD
0x691 DUP4
0x692 PUSH4 0xffffffff
0x697 AND
0x698 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6b6 MUL
0x6b7 DUP2
0x6b8 MSTORE
0x6b9 PUSH1 0x4
0x6bb ADD
0x6bc DUP1
0x6bd DUP3
0x6be DUP1
0x6bf MLOAD
0x6c0 SWAP1
0x6c1 PUSH1 0x20
0x6c3 ADD
0x6c4 SWAP1
0x6c5 DUP1
0x6c6 DUP4
0x6c7 DUP4
0x6c8 PUSH1 0x0
---
0x61c: JUMPDEST 
0x61e: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x633: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x634: V376 = 0x0
0x636: V377 = 0x40
0x638: V378 = M[0x40]
0x63b: V379 = 0x506c617928737472696e67290000000000000000000000000000000000000000
0x65d: M[V378] = 0x506c617928737472696e67290000000000000000000000000000000000000000
0x65f: V380 = 0xc
0x661: V381 = ADD 0xc V378
0x664: V382 = 0x40
0x666: V383 = M[0x40]
0x669: V384 = SUB V381 V383
0x66b: V385 = SHA3 V383 V384
0x66c: V386 = 0x100000000000000000000000000000000000000000000000000000000
0x68b: V387 = DIV V385 0x100000000000000000000000000000000000000000000000000000000
0x68e: V388 = 0x40
0x690: V389 = M[0x40]
0x692: V390 = 0xffffffff
0x697: V391 = AND 0xffffffff V387
0x698: V392 = 0x100000000000000000000000000000000000000000000000000000000
0x6b6: V393 = MUL 0x100000000000000000000000000000000000000000000000000000000 V391
0x6b8: M[V389] = V393
0x6b9: V394 = 0x4
0x6bb: V395 = ADD 0x4 V389
0x6bf: V396 = M[V135]
0x6c1: V397 = 0x20
0x6c3: V398 = ADD 0x20 V135
0x6c8: V399 = 0x0
---
Entry stack: [V11, 0x21e, V117, V135]
Stack pops: 2
Stack additions: [S1, S0, V375, V387, 0x0, S0, V395, V395, V398, V396, V396, V395, V398, 0x0]
Exit stack: [V11, 0x21e, V117, V135, V375, V387, 0x0, V135, V395, V395, V398, V396, V396, V395, V398, 0x0]

================================

Block 0x6ca
[0x6ca:0x6d2]
---
Predecessors: [0x61c, 0x6d3]
Successors: [0x6d3, 0x6e5]
---
0x6ca JUMPDEST
0x6cb DUP4
0x6cc DUP2
0x6cd LT
0x6ce ISZERO
0x6cf PUSH2 0x6e5
0x6d2 JUMPI
---
0x6ca: JUMPDEST 
0x6cd: V400 = LT S0 V396
0x6ce: V401 = ISZERO V400
0x6cf: V402 = 0x6e5
0x6d2: JUMPI 0x6e5 V401
---
Entry stack: [V11, 0x21e, V117, V135, V375, V387, 0x0, V135, V395, V395, V398, V396, V396, V395, V398, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x21e, V117, V135, V375, V387, 0x0, V135, V395, V395, V398, V396, V396, V395, V398, S0]

================================

Block 0x6d3
[0x6d3:0x6e4]
---
Predecessors: [0x6ca]
Successors: [0x6ca]
---
0x6d3 DUP1
0x6d4 DUP3
0x6d5 ADD
0x6d6 MLOAD
0x6d7 DUP2
0x6d8 DUP5
0x6d9 ADD
0x6da MSTORE
0x6db PUSH1 0x20
0x6dd DUP2
0x6de ADD
0x6df SWAP1
0x6e0 POP
0x6e1 PUSH2 0x6ca
0x6e4 JUMP
---
0x6d5: V403 = ADD V398 S0
0x6d6: V404 = M[V403]
0x6d9: V405 = ADD V395 S0
0x6da: M[V405] = V404
0x6db: V406 = 0x20
0x6de: V407 = ADD S0 0x20
0x6e1: V408 = 0x6ca
0x6e4: JUMP 0x6ca
---
Entry stack: [V11, 0x21e, V117, V135, V375, V387, 0x0, V135, V395, V395, V398, V396, V396, V395, V398, S0]
Stack pops: 3
Stack additions: [S2, S1, V407]
Exit stack: [V11, 0x21e, V117, V135, V375, V387, 0x0, V135, V395, V395, V398, V396, V396, V395, V398, V407]

================================

Block 0x6e5
[0x6e5:0x6f8]
---
Predecessors: [0x6ca]
Successors: [0x6f9, 0x712]
---
0x6e5 JUMPDEST
0x6e6 POP
0x6e7 POP
0x6e8 POP
0x6e9 POP
0x6ea SWAP1
0x6eb POP
0x6ec SWAP1
0x6ed DUP2
0x6ee ADD
0x6ef SWAP1
0x6f0 PUSH1 0x1f
0x6f2 AND
0x6f3 DUP1
0x6f4 ISZERO
0x6f5 PUSH2 0x712
0x6f8 JUMPI
---
0x6e5: JUMPDEST 
0x6ee: V409 = ADD V396 V395
0x6f0: V410 = 0x1f
0x6f2: V411 = AND 0x1f V396
0x6f4: V412 = ISZERO V411
0x6f5: V413 = 0x712
0x6f8: JUMPI 0x712 V412
---
Entry stack: [V11, 0x21e, V117, V135, V375, V387, 0x0, V135, V395, V395, V398, V396, V396, V395, V398, S0]
Stack pops: 7
Stack additions: [V409, V411]
Exit stack: [V11, 0x21e, V117, V135, V375, V387, 0x0, V135, V395, V409, V411]

================================

Block 0x6f9
[0x6f9:0x711]
---
Predecessors: [0x6e5]
Successors: [0x712]
---
0x6f9 DUP1
0x6fa DUP3
0x6fb SUB
0x6fc DUP1
0x6fd MLOAD
0x6fe PUSH1 0x1
0x700 DUP4
0x701 PUSH1 0x20
0x703 SUB
0x704 PUSH2 0x100
0x707 EXP
0x708 SUB
0x709 NOT
0x70a AND
0x70b DUP2
0x70c MSTORE
0x70d PUSH1 0x20
0x70f ADD
0x710 SWAP2
0x711 POP
---
0x6fb: V414 = SUB V409 V411
0x6fd: V415 = M[V414]
0x6fe: V416 = 0x1
0x701: V417 = 0x20
0x703: V418 = SUB 0x20 V411
0x704: V419 = 0x100
0x707: V420 = EXP 0x100 V418
0x708: V421 = SUB V420 0x1
0x709: V422 = NOT V421
0x70a: V423 = AND V422 V415
0x70c: M[V414] = V423
0x70d: V424 = 0x20
0x70f: V425 = ADD 0x20 V414
---
Entry stack: [V11, 0x21e, V117, V135, V375, V387, 0x0, V135, V395, V409, V411]
Stack pops: 2
Stack additions: [V425, S0]
Exit stack: [V11, 0x21e, V117, V135, V375, V387, 0x0, V135, V395, V425, V411]

================================

Block 0x712
[0x712:0x72c]
---
Predecessors: [0x6e5, 0x6f9]
Successors: [0x21e]
---
0x712 JUMPDEST
0x713 POP
0x714 SWAP2
0x715 POP
0x716 POP
0x717 PUSH1 0x0
0x719 PUSH1 0x40
0x71b MLOAD
0x71c DUP1
0x71d DUP4
0x71e SUB
0x71f DUP2
0x720 DUP6
0x721 DUP9
0x722 GAS
0x723 CALL
0x724 SWAP4
0x725 POP
0x726 POP
0x727 POP
0x728 POP
0x729 POP
0x72a POP
0x72b POP
0x72c JUMP
---
0x712: JUMPDEST 
0x717: V426 = 0x0
0x719: V427 = 0x40
0x71b: V428 = M[0x40]
0x71e: V429 = SUB S1 V428
0x722: V430 = GAS
0x723: V431 = CALL V430 V375 0x0 V428 V429 V428 0x0
0x72c: JUMP 0x21e
---
Entry stack: [V11, 0x21e, V117, V135, V375, V387, 0x0, V135, V395, S1, V411]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x72d
[0x72d:0x783]
---
Predecessors: [0x220]
Successors: [0x784, 0x788]
---
0x72d JUMPDEST
0x72e PUSH1 0x0
0x730 DUP1
0x731 SWAP1
0x732 SLOAD
0x733 SWAP1
0x734 PUSH2 0x100
0x737 EXP
0x738 SWAP1
0x739 DIV
0x73a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74f AND
0x750 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x765 AND
0x766 CALLER
0x767 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77c AND
0x77d EQ
0x77e ISZERO
0x77f ISZERO
0x780 PUSH2 0x788
0x783 JUMPI
---
0x72d: JUMPDEST 
0x72e: V432 = 0x0
0x732: V433 = S[0x0]
0x734: V434 = 0x100
0x737: V435 = EXP 0x100 0x0
0x739: V436 = DIV V433 0x1
0x73a: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x74f: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x750: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x765: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x766: V441 = CALLER
0x767: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x77c: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x77d: V444 = EQ V443 V440
0x77e: V445 = ISZERO V444
0x77f: V446 = ISZERO V445
0x780: V447 = 0x788
0x783: JUMPI 0x788 V446
---
Entry stack: [V11, 0x254, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254, V149]

================================

Block 0x784
[0x784:0x787]
---
Predecessors: [0x72d]
Successors: []
---
0x784 PUSH1 0x0
0x786 DUP1
0x787 REVERT
---
0x784: V448 = 0x0
0x787: REVERT 0x0 0x0
---
Entry stack: [V11, 0x254, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254, V149]

================================

Block 0x788
[0x788:0x83b]
---
Predecessors: [0x72d]
Successors: [0x254]
---
0x788 JUMPDEST
0x789 DUP1
0x78a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79f AND
0x7a0 PUSH1 0x0
0x7a2 PUSH1 0x40
0x7a4 MLOAD
0x7a5 DUP1
0x7a6 DUP1
0x7a7 PUSH32 0x53746f7047616d65282900000000000000000000000000000000000000000000
0x7c8 DUP2
0x7c9 MSTORE
0x7ca POP
0x7cb PUSH1 0xa
0x7cd ADD
0x7ce SWAP1
0x7cf POP
0x7d0 PUSH1 0x40
0x7d2 MLOAD
0x7d3 DUP1
0x7d4 SWAP2
0x7d5 SUB
0x7d6 SWAP1
0x7d7 SHA3
0x7d8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7f6 SWAP1
0x7f7 DIV
0x7f8 SWAP1
0x7f9 PUSH1 0x40
0x7fb MLOAD
0x7fc DUP3
0x7fd PUSH4 0xffffffff
0x802 AND
0x803 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x821 MUL
0x822 DUP2
0x823 MSTORE
0x824 PUSH1 0x4
0x826 ADD
0x827 PUSH1 0x0
0x829 PUSH1 0x40
0x82b MLOAD
0x82c DUP1
0x82d DUP4
0x82e SUB
0x82f DUP2
0x830 DUP6
0x831 DUP9
0x832 GAS
0x833 CALL
0x834 SWAP4
0x835 POP
0x836 POP
0x837 POP
0x838 POP
0x839 POP
0x83a POP
0x83b JUMP
---
0x788: JUMPDEST 
0x78a: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x79f: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x7a0: V451 = 0x0
0x7a2: V452 = 0x40
0x7a4: V453 = M[0x40]
0x7a7: V454 = 0x53746f7047616d65282900000000000000000000000000000000000000000000
0x7c9: M[V453] = 0x53746f7047616d65282900000000000000000000000000000000000000000000
0x7cb: V455 = 0xa
0x7cd: V456 = ADD 0xa V453
0x7d0: V457 = 0x40
0x7d2: V458 = M[0x40]
0x7d5: V459 = SUB V456 V458
0x7d7: V460 = SHA3 V458 V459
0x7d8: V461 = 0x100000000000000000000000000000000000000000000000000000000
0x7f7: V462 = DIV V460 0x100000000000000000000000000000000000000000000000000000000
0x7f9: V463 = 0x40
0x7fb: V464 = M[0x40]
0x7fd: V465 = 0xffffffff
0x802: V466 = AND 0xffffffff V462
0x803: V467 = 0x100000000000000000000000000000000000000000000000000000000
0x821: V468 = MUL 0x100000000000000000000000000000000000000000000000000000000 V466
0x823: M[V464] = V468
0x824: V469 = 0x4
0x826: V470 = ADD 0x4 V464
0x827: V471 = 0x0
0x829: V472 = 0x40
0x82b: V473 = M[0x40]
0x82e: V474 = SUB V470 V473
0x832: V475 = GAS
0x833: V476 = CALL V475 V450 0x0 V473 V474 V473 0x0
0x83b: JUMP 0x254
---
Entry stack: [V11, 0x254, V149]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x83c
[0x83c:0x892]
---
Predecessors: [0x262]
Successors: [0x893, 0x897]
---
0x83c JUMPDEST
0x83d PUSH1 0x0
0x83f DUP1
0x840 SWAP1
0x841 SLOAD
0x842 SWAP1
0x843 PUSH2 0x100
0x846 EXP
0x847 SWAP1
0x848 DIV
0x849 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85e AND
0x85f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x874 AND
0x875 CALLER
0x876 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88b AND
0x88c EQ
0x88d ISZERO
0x88e ISZERO
0x88f PUSH2 0x897
0x892 JUMPI
---
0x83c: JUMPDEST 
0x83d: V477 = 0x0
0x841: V478 = S[0x0]
0x843: V479 = 0x100
0x846: V480 = EXP 0x100 0x0
0x848: V481 = DIV V478 0x1
0x849: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x85e: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x85f: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x874: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x875: V486 = CALLER
0x876: V487 = 0xffffffffffffffffffffffffffffffffffffffff
0x88b: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V486
0x88c: V489 = EQ V488 V485
0x88d: V490 = ISZERO V489
0x88e: V491 = ISZERO V490
0x88f: V492 = 0x897
0x892: JUMPI 0x897 V491
---
Entry stack: [V11, 0x2dd, V164, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dd, V164, V182]

================================

Block 0x893
[0x893:0x896]
---
Predecessors: [0x83c]
Successors: []
---
0x893 PUSH1 0x0
0x895 DUP1
0x896 REVERT
---
0x893: V493 = 0x0
0x896: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2dd, V164, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2dd, V164, V182]

================================

Block 0x897
[0x897:0x89a]
---
Predecessors: [0x83c]
Successors: [0x2dd]
---
0x897 JUMPDEST
0x898 POP
0x899 POP
0x89a JUMP
---
0x897: JUMPDEST 
0x89a: JUMP 0x2dd
---
Entry stack: [V11, 0x2dd, V164, V182]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x89b
[0x89b:0x8d4]
---
Predecessors: []
Successors: []
---
0x89b STOP
0x89c LOG1
0x89d PUSH6 0x627a7a723058
0x8a4 SHA3
0x8a5 DUP3
0x8a6 DUP5
0x8a7 MISSING 0x2f
0x8a8 CALLDATACOPY
0x8a9 MISSING 0xdc
0x8aa MISSING 0xc0
0x8ab SWAP4
0x8ac STATICCALL
0x8ad XOR
0x8ae MLOAD
0x8af MISSING 0x25
0x8b0 MISSING 0xbd
0x8b1 MISSING 0xc7
0x8b2 MISSING 0x28
0x8b3 CODESIZE
0x8b4 JUMP
0x8b5 MISSING 0xd8
0x8b6 PUSH8 0x980fae4b66568a6c
0x8bf PUSH21 0xa1786184650029
---
0x89b: STOP 
0x89c: LOG S0 S1 S2
0x89d: V494 = 0x627a7a723058
0x8a4: V495 = SHA3 0x627a7a723058 S3
0x8a7: MISSING 0x2f
0x8a8: CALLDATACOPY S0 S1 S2
0x8a9: MISSING 0xdc
0x8aa: MISSING 0xc0
0x8ac: V496 = STATICCALL S4 S1 S2 S3 S0 S5
0x8ad: V497 = XOR V496 S6
0x8ae: V498 = M[V497]
0x8af: MISSING 0x25
0x8b0: MISSING 0xbd
0x8b1: MISSING 0xc7
0x8b2: MISSING 0x28
0x8b3: V499 = CODESIZE
0x8b4: JUMP V499
0x8b5: MISSING 0xd8
0x8b6: V500 = 0x980fae4b66568a6c
0x8bf: V501 = 0xa1786184650029
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, S5, V495, S4, S5, S6, V498, 0xa1786184650029, 0x980fae4b66568a6c]
Exit stack: []

================================

Function 0:
Public function signature: 0x166589bd
Entry block: 0x7d
Exit block: 0xc9
Body: 0x7d, 0xc9, 0x2df

Function 1:
Public function signature: 0x35f51847
Entry block: 0xcb
Exit block: 0x18b
Body: 0xcb, 0x18b, 0x324, 0x37b, 0x37f, 0x42e, 0x437, 0x449, 0x45d, 0x476, 0x485, 0x48e, 0x4a0, 0x4b4, 0x4cd

Function 2:
Public function signature: 0x7ab62d5a
Entry block: 0x18d
Exit block: 0x1a2
Body: 0x18d, 0x195, 0x199, 0x1a2, 0x4ea, 0x540, 0x5b4, 0x5bd, 0x5bf

Function 3:
Public function signature: 0x7c3f1ac7
Entry block: 0x1a4
Exit block: 0x21e
Body: 0x1a4, 0x21e, 0x5c1, 0x618, 0x61c, 0x6ca, 0x6d3, 0x6e5, 0x6f9, 0x712

Function 4:
Public function signature: 0xc3b80730
Entry block: 0x220
Exit block: 0x254
Body: 0x220, 0x254, 0x72d, 0x784, 0x788

Function 5:
Public function signature: 0xd58c7faa
Entry block: 0x256
Exit block: 0x2dd
Body: 0x256, 0x25e, 0x262, 0x2dd, 0x83c, 0x893, 0x897

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

