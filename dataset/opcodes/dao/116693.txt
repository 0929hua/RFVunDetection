Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x8a]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x1d709ab4
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x8a
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x1d709ab4
0x22: V15 = EQ V13 0x1d709ab4
0x23: V16 = 0x8a
0x26: JUMPI 0x8a V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xa2]
---
0x27 DUP1
0x28 PUSH4 0x6ca7c216
0x2d EQ
0x2e PUSH2 0xa2
0x31 JUMPI
---
0x28: V17 = 0x6ca7c216
0x2d: V18 = EQ 0x6ca7c216 V13
0x2e: V19 = 0xa2
0x31: JUMPI 0xa2 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xc9]
---
0x32 DUP1
0x33 PUSH4 0x6d6a01f6
0x38 EQ
0x39 PUSH2 0xc9
0x3c JUMPI
---
0x33: V20 = 0x6d6a01f6
0x38: V21 = EQ 0x6d6a01f6 V13
0x39: V22 = 0xc9
0x3c: JUMPI 0xc9 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xfa]
---
0x3d DUP1
0x3e PUSH4 0x8da5cb5b
0x43 EQ
0x44 PUSH2 0xfa
0x47 JUMPI
---
0x3e: V23 = 0x8da5cb5b
0x43: V24 = EQ 0x8da5cb5b V13
0x44: V25 = 0xfa
0x47: JUMPI 0xfa V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x10f]
---
0x48 DUP1
0x49 PUSH4 0x920dd47b
0x4e EQ
0x4f PUSH2 0x10f
0x52 JUMPI
---
0x49: V26 = 0x920dd47b
0x4e: V27 = EQ 0x920dd47b V13
0x4f: V28 = 0x10f
0x52: JUMPI 0x10f V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x124]
---
0x53 DUP1
0x54 PUSH4 0xb029c2c8
0x59 EQ
0x5a PUSH2 0x124
0x5d JUMPI
---
0x54: V29 = 0xb029c2c8
0x59: V30 = EQ 0xb029c2c8 V13
0x5a: V31 = 0x124
0x5d: JUMPI 0x124 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x14e]
---
0x5e DUP1
0x5f PUSH4 0xcbc1cfd2
0x64 EQ
0x65 PUSH2 0x14e
0x68 JUMPI
---
0x5f: V32 = 0xcbc1cfd2
0x64: V33 = EQ 0xcbc1cfd2 V13
0x65: V34 = 0x14e
0x68: JUMPI 0x14e V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x163]
---
0x69 DUP1
0x6a PUSH4 0xf023d600
0x6f EQ
0x70 PUSH2 0x163
0x73 JUMPI
---
0x6a: V35 = 0xf023d600
0x6f: V36 = EQ 0xf023d600 V13
0x70: V37 = 0x163
0x73: JUMPI 0x163 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x178]
---
0x74 DUP1
0x75 PUSH4 0xf2fde38b
0x7a EQ
0x7b PUSH2 0x178
0x7e JUMPI
---
0x75: V38 = 0xf2fde38b
0x7a: V39 = EQ 0xf2fde38b V13
0x7b: V40 = 0x178
0x7e: JUMPI 0x178 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x87]
---
Predecessors: [0x0, 0x74]
Successors: [0x199]
---
0x7f JUMPDEST
0x80 PUSH2 0x88
0x83 CALLVALUE
0x84 PUSH2 0x199
0x87 JUMP
---
0x7f: JUMPDEST 
0x80: V41 = 0x88
0x83: V42 = CALLVALUE
0x84: V43 = 0x199
0x87: JUMP 0x199
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x88, V42]
Exit stack: [V13, 0x88, V42]

================================

Block 0x88
[0x88:0x89]
---
Predecessors: [0x1f1, 0x20e, 0x2ea, 0x313, 0x350]
Successors: []
---
0x88 JUMPDEST
0x89 STOP
---
0x88: JUMPDEST 
0x89: STOP 
---
Entry stack: [V13, 0x88, V42, V144, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V42, V144, S0]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0xd]
Successors: [0x92, 0x96]
---
0x8a JUMPDEST
0x8b CALLVALUE
0x8c DUP1
0x8d ISZERO
0x8e PUSH2 0x96
0x91 JUMPI
---
0x8a: JUMPDEST 
0x8b: V44 = CALLVALUE
0x8d: V45 = ISZERO V44
0x8e: V46 = 0x96
0x91: JUMPI 0x96 V45
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V13, V44]

================================

Block 0x92
[0x92:0x95]
---
Predecessors: [0x8a]
Successors: []
---
0x92 PUSH1 0x0
0x94 DUP1
0x95 REVERT
---
0x92: V47 = 0x0
0x95: REVERT 0x0 0x0
---
Entry stack: [V13, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V44]

================================

Block 0x96
[0x96:0xa1]
---
Predecessors: [0x8a]
Successors: [0x1f7]
---
0x96 JUMPDEST
0x97 POP
0x98 PUSH2 0x88
0x9b PUSH1 0x4
0x9d CALLDATALOAD
0x9e PUSH2 0x1f7
0xa1 JUMP
---
0x96: JUMPDEST 
0x98: V48 = 0x88
0x9b: V49 = 0x4
0x9d: V50 = CALLDATALOAD 0x4
0x9e: V51 = 0x1f7
0xa1: JUMP 0x1f7
---
Entry stack: [V13, V44]
Stack pops: 1
Stack additions: [0x88, V50]
Exit stack: [V13, 0x88, V50]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0x27]
Successors: [0xaa, 0xae]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa2: JUMPDEST 
0xa3: V52 = CALLVALUE
0xa5: V53 = ISZERO V52
0xa6: V54 = 0xae
0xa9: JUMPI 0xae V53
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V52]
Exit stack: [V13, V52]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa2]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V55 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V13, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V52]

================================

Block 0xae
[0xae:0xb6]
---
Predecessors: [0xa2]
Successors: [0x213]
---
0xae JUMPDEST
0xaf POP
0xb0 PUSH2 0xb7
0xb3 PUSH2 0x213
0xb6 JUMP
---
0xae: JUMPDEST 
0xb0: V56 = 0xb7
0xb3: V57 = 0x213
0xb6: JUMP 0x213
---
Entry stack: [V13, V52]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V13, 0xb7]

================================

Block 0xb7
[0xb7:0xc8]
---
Predecessors: [0x213]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH1 0x40
0xba DUP1
0xbb MLOAD
0xbc SWAP2
0xbd DUP3
0xbe MSTORE
0xbf MLOAD
0xc0 SWAP1
0xc1 DUP2
0xc2 SWAP1
0xc3 SUB
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 RETURN
---
0xb7: JUMPDEST 
0xb8: V58 = 0x40
0xbb: V59 = M[0x40]
0xbe: M[V59] = V190
0xbf: V60 = M[0x40]
0xc3: V61 = SUB V59 V60
0xc4: V62 = 0x20
0xc6: V63 = ADD 0x20 V61
0xc8: RETURN V60 V63
---
Entry stack: [V13, 0xb7, V190]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xb7]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x32]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V64 = CALLVALUE
0xcc: V65 = ISZERO V64
0xcd: V66 = 0xd5
0xd0: JUMPI 0xd5 V65
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V13, V64]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V67 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V13, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V64]

================================

Block 0xd5
[0xd5:0xdd]
---
Predecessors: [0xc9]
Successors: [0x219]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0xde
0xda PUSH2 0x219
0xdd JUMP
---
0xd5: JUMPDEST 
0xd7: V68 = 0xde
0xda: V69 = 0x219
0xdd: JUMP 0x219
---
Entry stack: [V13, V64]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V13, 0xde]

================================

Block 0xde
[0xde:0xf9]
---
Predecessors: [0x219, 0x228, 0x237, 0x315]
Successors: []
---
0xde JUMPDEST
0xdf PUSH1 0x40
0xe1 DUP1
0xe2 MLOAD
0xe3 PUSH1 0x1
0xe5 PUSH1 0xa0
0xe7 PUSH1 0x2
0xe9 EXP
0xea SUB
0xeb SWAP1
0xec SWAP3
0xed AND
0xee DUP3
0xef MSTORE
0xf0 MLOAD
0xf1 SWAP1
0xf2 DUP2
0xf3 SWAP1
0xf4 SUB
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 RETURN
---
0xde: JUMPDEST 
0xdf: V70 = 0x40
0xe2: V71 = M[0x40]
0xe3: V72 = 0x1
0xe5: V73 = 0xa0
0xe7: V74 = 0x2
0xe9: V75 = EXP 0x2 0xa0
0xea: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed: V77 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xef: M[V71] = V77
0xf0: V78 = M[0x40]
0xf4: V79 = SUB V71 V78
0xf5: V80 = 0x20
0xf7: V81 = ADD 0x20 V79
0xf9: RETURN V78 V81
---
Entry stack: [V13, 0xde, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xde]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x3d]
Successors: [0x102, 0x106]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfa: JUMPDEST 
0xfb: V82 = CALLVALUE
0xfd: V83 = ISZERO V82
0xfe: V84 = 0x106
0x101: JUMPI 0x106 V83
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V13, V82]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfa]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V85 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V13, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V82]

================================

Block 0x106
[0x106:0x10e]
---
Predecessors: [0xfa]
Successors: [0x228]
---
0x106 JUMPDEST
0x107 POP
0x108 PUSH2 0xde
0x10b PUSH2 0x228
0x10e JUMP
---
0x106: JUMPDEST 
0x108: V86 = 0xde
0x10b: V87 = 0x228
0x10e: JUMP 0x228
---
Entry stack: [V13, V82]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V13, 0xde]

================================

Block 0x10f
[0x10f:0x116]
---
Predecessors: [0x48]
Successors: [0x117, 0x11b]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 DUP1
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x10f: JUMPDEST 
0x110: V88 = CALLVALUE
0x112: V89 = ISZERO V88
0x113: V90 = 0x11b
0x116: JUMPI 0x11b V89
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V13, V88]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x10f]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V91 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V13, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V88]

================================

Block 0x11b
[0x11b:0x123]
---
Predecessors: [0x10f]
Successors: [0x237]
---
0x11b JUMPDEST
0x11c POP
0x11d PUSH2 0xde
0x120 PUSH2 0x237
0x123 JUMP
---
0x11b: JUMPDEST 
0x11d: V92 = 0xde
0x120: V93 = 0x237
0x123: JUMP 0x237
---
Entry stack: [V13, V88]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V13, 0xde]

================================

Block 0x124
[0x124:0x12b]
---
Predecessors: [0x53]
Successors: [0x12c, 0x130]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 DUP1
0x127 ISZERO
0x128 PUSH2 0x130
0x12b JUMPI
---
0x124: JUMPDEST 
0x125: V94 = CALLVALUE
0x127: V95 = ISZERO V94
0x128: V96 = 0x130
0x12b: JUMPI 0x130 V95
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V94]
Exit stack: [V13, V94]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0x124]
Successors: []
---
0x12c PUSH1 0x0
0x12e DUP1
0x12f REVERT
---
0x12c: V97 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V13, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V94]

================================

Block 0x130
[0x130:0x14d]
---
Predecessors: [0x124]
Successors: [0x246]
---
0x130 JUMPDEST
0x131 POP
0x132 PUSH2 0x88
0x135 PUSH1 0x1
0x137 PUSH1 0xa0
0x139 PUSH1 0x2
0x13b EXP
0x13c SUB
0x13d PUSH1 0x4
0x13f CALLDATALOAD
0x140 DUP2
0x141 AND
0x142 SWAP1
0x143 PUSH1 0x24
0x145 CALLDATALOAD
0x146 AND
0x147 PUSH1 0x44
0x149 CALLDATALOAD
0x14a PUSH2 0x246
0x14d JUMP
---
0x130: JUMPDEST 
0x132: V98 = 0x88
0x135: V99 = 0x1
0x137: V100 = 0xa0
0x139: V101 = 0x2
0x13b: V102 = EXP 0x2 0xa0
0x13c: V103 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13d: V104 = 0x4
0x13f: V105 = CALLDATALOAD 0x4
0x141: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x143: V107 = 0x24
0x145: V108 = CALLDATALOAD 0x24
0x146: V109 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x147: V110 = 0x44
0x149: V111 = CALLDATALOAD 0x44
0x14a: V112 = 0x246
0x14d: JUMP 0x246
---
Entry stack: [V13, V94]
Stack pops: 1
Stack additions: [0x88, V106, V109, V111]
Exit stack: [V13, 0x88, V106, V109, V111]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x5e]
Successors: [0x156, 0x15a]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 DUP1
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x14e: JUMPDEST 
0x14f: V113 = CALLVALUE
0x151: V114 = ISZERO V113
0x152: V115 = 0x15a
0x155: JUMPI 0x15a V114
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V113]
Exit stack: [V13, V113]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x14e]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V116 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V13, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V113]

================================

Block 0x15a
[0x15a:0x162]
---
Predecessors: [0x14e]
Successors: [0x2f1]
---
0x15a JUMPDEST
0x15b POP
0x15c PUSH2 0x88
0x15f PUSH2 0x2f1
0x162 JUMP
---
0x15a: JUMPDEST 
0x15c: V117 = 0x88
0x15f: V118 = 0x2f1
0x162: JUMP 0x2f1
---
Entry stack: [V13, V113]
Stack pops: 1
Stack additions: [0x88]
Exit stack: [V13, 0x88]

================================

Block 0x163
[0x163:0x16a]
---
Predecessors: [0x69]
Successors: [0x16b, 0x16f]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 DUP1
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x163: JUMPDEST 
0x164: V119 = CALLVALUE
0x166: V120 = ISZERO V119
0x167: V121 = 0x16f
0x16a: JUMPI 0x16f V120
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V13, V119]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x163]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V122 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V13, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V119]

================================

Block 0x16f
[0x16f:0x177]
---
Predecessors: [0x163]
Successors: [0x315]
---
0x16f JUMPDEST
0x170 POP
0x171 PUSH2 0xde
0x174 PUSH2 0x315
0x177 JUMP
---
0x16f: JUMPDEST 
0x171: V123 = 0xde
0x174: V124 = 0x315
0x177: JUMP 0x315
---
Entry stack: [V13, V119]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V13, 0xde]

================================

Block 0x178
[0x178:0x17f]
---
Predecessors: [0x74]
Successors: [0x180, 0x184]
---
0x178 JUMPDEST
0x179 CALLVALUE
0x17a DUP1
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x178: JUMPDEST 
0x179: V125 = CALLVALUE
0x17b: V126 = ISZERO V125
0x17c: V127 = 0x184
0x17f: JUMPI 0x184 V126
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V13, V125]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x178]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V128 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V13, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V125]

================================

Block 0x184
[0x184:0x198]
---
Predecessors: [0x178]
Successors: [0x324]
---
0x184 JUMPDEST
0x185 POP
0x186 PUSH2 0x88
0x189 PUSH1 0x1
0x18b PUSH1 0xa0
0x18d PUSH1 0x2
0x18f EXP
0x190 SUB
0x191 PUSH1 0x4
0x193 CALLDATALOAD
0x194 AND
0x195 PUSH2 0x324
0x198 JUMP
---
0x184: JUMPDEST 
0x186: V129 = 0x88
0x189: V130 = 0x1
0x18b: V131 = 0xa0
0x18d: V132 = 0x2
0x18f: V133 = EXP 0x2 0xa0
0x190: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x191: V135 = 0x4
0x193: V136 = CALLDATALOAD 0x4
0x194: V137 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x195: V138 = 0x324
0x198: JUMP 0x324
---
Entry stack: [V13, V125]
Stack pops: 1
Stack additions: [0x88, V137]
Exit stack: [V13, 0x88, V137]

================================

Block 0x199
[0x199:0x1bc]
---
Predecessors: [0x7f]
Successors: [0x372]
---
0x199 JUMPDEST
0x19a PUSH1 0x2
0x19c SLOAD
0x19d PUSH2 0x3e8
0x1a0 PUSH1 0x19
0x1a2 DUP4
0x1a3 MUL
0x1a4 DIV
0x1a5 SWAP1
0x1a6 DUP2
0x1a7 SWAP1
0x1a8 PUSH1 0x0
0x1aa SWAP1
0x1ab PUSH2 0x1bd
0x1ae SWAP1
0x1af PUSH1 0x1
0x1b1 PUSH1 0xa0
0x1b3 PUSH1 0x2
0x1b5 EXP
0x1b6 SUB
0x1b7 AND
0x1b8 DUP4
0x1b9 PUSH2 0x372
0x1bc JUMP
---
0x199: JUMPDEST 
0x19a: V139 = 0x2
0x19c: V140 = S[0x2]
0x19d: V141 = 0x3e8
0x1a0: V142 = 0x19
0x1a3: V143 = MUL V42 0x19
0x1a4: V144 = DIV V143 0x3e8
0x1a8: V145 = 0x0
0x1ab: V146 = 0x1bd
0x1af: V147 = 0x1
0x1b1: V148 = 0xa0
0x1b3: V149 = 0x2
0x1b5: V150 = EXP 0x2 0xa0
0x1b6: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b7: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x1b9: V153 = 0x372
0x1bc: JUMP 0x372
---
Entry stack: [V13, 0x88, V42]
Stack pops: 1
Stack additions: [S0, V144, V144, 0x0, 0x1bd, V152, V144]
Exit stack: [V13, 0x88, V42, V144, V144, 0x0, 0x1bd, V152, V144]

================================

Block 0x1bd
[0x1bd:0x1d2]
---
Predecessors: [0x3a0]
Successors: [0x372]
---
0x1bd JUMPDEST
0x1be PUSH1 0x3
0x1c0 SLOAD
0x1c1 PUSH2 0x1d3
0x1c4 SWAP1
0x1c5 PUSH1 0x1
0x1c7 PUSH1 0xa0
0x1c9 PUSH1 0x2
0x1cb EXP
0x1cc SUB
0x1cd AND
0x1ce DUP4
0x1cf PUSH2 0x372
0x1d2 JUMP
---
0x1bd: JUMPDEST 
0x1be: V154 = 0x3
0x1c0: V155 = S[0x3]
0x1c1: V156 = 0x1d3
0x1c5: V157 = 0x1
0x1c7: V158 = 0xa0
0x1c9: V159 = 0x2
0x1cb: V160 = EXP 0x2 0xa0
0x1cc: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cd: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x1cf: V163 = 0x372
0x1d2: JUMP 0x372
---
Entry stack: [V13, 0x88, V42, V144, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x1d3, V162, S1]
Exit stack: [V13, 0x88, V42, V144, S1, S0, 0x1d3, V162, S1]

================================

Block 0x1d3
[0x1d3:0x1f0]
---
Predecessors: [0x3a0]
Successors: [0x372]
---
0x1d3 JUMPDEST
0x1d4 POP
0x1d5 PUSH1 0x1
0x1d7 SLOAD
0x1d8 DUP3
0x1d9 DUP5
0x1da SUB
0x1db DUP3
0x1dc SWAP1
0x1dd SUB
0x1de SWAP1
0x1df PUSH2 0x1f1
0x1e2 SWAP1
0x1e3 PUSH1 0x1
0x1e5 PUSH1 0xa0
0x1e7 PUSH1 0x2
0x1e9 EXP
0x1ea SUB
0x1eb AND
0x1ec DUP3
0x1ed PUSH2 0x372
0x1f0 JUMP
---
0x1d3: JUMPDEST 
0x1d5: V164 = 0x1
0x1d7: V165 = S[0x1]
0x1da: V166 = SUB V42 V144
0x1dd: V167 = SUB V166 S1
0x1df: V168 = 0x1f1
0x1e3: V169 = 0x1
0x1e5: V170 = 0xa0
0x1e7: V171 = 0x2
0x1e9: V172 = EXP 0x2 0xa0
0x1ea: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1eb: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x1ed: V175 = 0x372
0x1f0: JUMP 0x372
---
Entry stack: [V13, 0x88, V42, V144, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V167, 0x1f1, V174, V167]
Exit stack: [V13, 0x88, V42, V144, S1, V167, 0x1f1, V174, V167]

================================

Block 0x1f1
[0x1f1:0x1f6]
---
Predecessors: [0x3a0]
Successors: [0x88]
---
0x1f1 JUMPDEST
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 JUMP
---
0x1f1: JUMPDEST 
0x1f6: JUMP 0x88
---
Entry stack: [V13, 0x88, V42, V144, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f7
[0x1f7:0x209]
---
Predecessors: [0x96]
Successors: [0x20a, 0x20e]
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x0
0x1fa SLOAD
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 AND
0x204 CALLER
0x205 EQ
0x206 PUSH2 0x20e
0x209 JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V176 = 0x0
0x1fa: V177 = S[0x0]
0x1fb: V178 = 0x1
0x1fd: V179 = 0xa0
0x1ff: V180 = 0x2
0x201: V181 = EXP 0x2 0xa0
0x202: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x203: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x204: V184 = CALLER
0x205: V185 = EQ V184 V183
0x206: V186 = 0x20e
0x209: JUMPI 0x20e V185
---
Entry stack: [V13, 0x88, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V50]

================================

Block 0x20a
[0x20a:0x20d]
---
Predecessors: [0x1f7]
Successors: []
---
0x20a PUSH1 0x0
0x20c DUP1
0x20d REVERT
---
0x20a: V187 = 0x0
0x20d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V50]

================================

Block 0x20e
[0x20e:0x212]
---
Predecessors: [0x1f7]
Successors: [0x88]
---
0x20e JUMPDEST
0x20f PUSH1 0x4
0x211 SSTORE
0x212 JUMP
---
0x20e: JUMPDEST 
0x20f: V188 = 0x4
0x211: S[0x4] = V50
0x212: JUMP 0x88
---
Entry stack: [V13, 0x88, V50]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x213
[0x213:0x218]
---
Predecessors: [0xae]
Successors: [0xb7]
---
0x213 JUMPDEST
0x214 PUSH1 0x4
0x216 SLOAD
0x217 DUP2
0x218 JUMP
---
0x213: JUMPDEST 
0x214: V189 = 0x4
0x216: V190 = S[0x4]
0x218: JUMP 0xb7
---
Entry stack: [V13, 0xb7]
Stack pops: 1
Stack additions: [S0, V190]
Exit stack: [V13, 0xb7, V190]

================================

Block 0x219
[0x219:0x227]
---
Predecessors: [0xd5]
Successors: [0xde]
---
0x219 JUMPDEST
0x21a PUSH1 0x3
0x21c SLOAD
0x21d PUSH1 0x1
0x21f PUSH1 0xa0
0x221 PUSH1 0x2
0x223 EXP
0x224 SUB
0x225 AND
0x226 DUP2
0x227 JUMP
---
0x219: JUMPDEST 
0x21a: V191 = 0x3
0x21c: V192 = S[0x3]
0x21d: V193 = 0x1
0x21f: V194 = 0xa0
0x221: V195 = 0x2
0x223: V196 = EXP 0x2 0xa0
0x224: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x225: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x227: JUMP 0xde
---
Entry stack: [V13, 0xde]
Stack pops: 1
Stack additions: [S0, V198]
Exit stack: [V13, 0xde, V198]

================================

Block 0x228
[0x228:0x236]
---
Predecessors: [0x106]
Successors: [0xde]
---
0x228 JUMPDEST
0x229 PUSH1 0x0
0x22b SLOAD
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 AND
0x235 DUP2
0x236 JUMP
---
0x228: JUMPDEST 
0x229: V199 = 0x0
0x22b: V200 = S[0x0]
0x22c: V201 = 0x1
0x22e: V202 = 0xa0
0x230: V203 = 0x2
0x232: V204 = EXP 0x2 0xa0
0x233: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x234: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x236: JUMP 0xde
---
Entry stack: [V13, 0xde]
Stack pops: 1
Stack additions: [S0, V206]
Exit stack: [V13, 0xde, V206]

================================

Block 0x237
[0x237:0x245]
---
Predecessors: [0x11b]
Successors: [0xde]
---
0x237 JUMPDEST
0x238 PUSH1 0x2
0x23a SLOAD
0x23b PUSH1 0x1
0x23d PUSH1 0xa0
0x23f PUSH1 0x2
0x241 EXP
0x242 SUB
0x243 AND
0x244 DUP2
0x245 JUMP
---
0x237: JUMPDEST 
0x238: V207 = 0x2
0x23a: V208 = S[0x2]
0x23b: V209 = 0x1
0x23d: V210 = 0xa0
0x23f: V211 = 0x2
0x241: V212 = EXP 0x2 0xa0
0x242: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x243: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x245: JUMP 0xde
---
Entry stack: [V13, 0xde]
Stack pops: 1
Stack additions: [S0, V214]
Exit stack: [V13, 0xde, V214]

================================

Block 0x246
[0x246:0x258]
---
Predecessors: [0x130]
Successors: [0x259, 0x25d]
---
0x246 JUMPDEST
0x247 PUSH1 0x0
0x249 SLOAD
0x24a PUSH1 0x1
0x24c PUSH1 0xa0
0x24e PUSH1 0x2
0x250 EXP
0x251 SUB
0x252 AND
0x253 CALLER
0x254 EQ
0x255 PUSH2 0x25d
0x258 JUMPI
---
0x246: JUMPDEST 
0x247: V215 = 0x0
0x249: V216 = S[0x0]
0x24a: V217 = 0x1
0x24c: V218 = 0xa0
0x24e: V219 = 0x2
0x250: V220 = EXP 0x2 0xa0
0x251: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x252: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x253: V223 = CALLER
0x254: V224 = EQ V223 V222
0x255: V225 = 0x25d
0x258: JUMPI 0x25d V224
---
Entry stack: [V13, 0x88, V106, V109, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V106, V109, V111]

================================

Block 0x259
[0x259:0x25c]
---
Predecessors: [0x246]
Successors: []
---
0x259 PUSH1 0x0
0x25b DUP1
0x25c REVERT
---
0x259: V226 = 0x0
0x25c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V106, V109, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V106, V109, V111]

================================

Block 0x25d
[0x25d:0x2bb]
---
Predecessors: [0x246]
Successors: [0x2bc, 0x2c0]
---
0x25d JUMPDEST
0x25e DUP3
0x25f PUSH1 0x1
0x261 PUSH1 0xa0
0x263 PUSH1 0x2
0x265 EXP
0x266 SUB
0x267 AND
0x268 PUSH4 0x95ea7b3
0x26d DUP4
0x26e DUP4
0x26f PUSH1 0x40
0x271 MLOAD
0x272 DUP4
0x273 PUSH4 0xffffffff
0x278 AND
0x279 PUSH1 0xe0
0x27b PUSH1 0x2
0x27d EXP
0x27e MUL
0x27f DUP2
0x280 MSTORE
0x281 PUSH1 0x4
0x283 ADD
0x284 DUP1
0x285 DUP4
0x286 PUSH1 0x1
0x288 PUSH1 0xa0
0x28a PUSH1 0x2
0x28c EXP
0x28d SUB
0x28e AND
0x28f PUSH1 0x1
0x291 PUSH1 0xa0
0x293 PUSH1 0x2
0x295 EXP
0x296 SUB
0x297 AND
0x298 DUP2
0x299 MSTORE
0x29a PUSH1 0x20
0x29c ADD
0x29d DUP3
0x29e DUP2
0x29f MSTORE
0x2a0 PUSH1 0x20
0x2a2 ADD
0x2a3 SWAP3
0x2a4 POP
0x2a5 POP
0x2a6 POP
0x2a7 PUSH1 0x20
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac DUP1
0x2ad DUP4
0x2ae SUB
0x2af DUP2
0x2b0 PUSH1 0x0
0x2b2 DUP8
0x2b3 DUP1
0x2b4 EXTCODESIZE
0x2b5 ISZERO
0x2b6 DUP1
0x2b7 ISZERO
0x2b8 PUSH2 0x2c0
0x2bb JUMPI
---
0x25d: JUMPDEST 
0x25f: V227 = 0x1
0x261: V228 = 0xa0
0x263: V229 = 0x2
0x265: V230 = EXP 0x2 0xa0
0x266: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x267: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x268: V233 = 0x95ea7b3
0x26f: V234 = 0x40
0x271: V235 = M[0x40]
0x273: V236 = 0xffffffff
0x278: V237 = AND 0xffffffff 0x95ea7b3
0x279: V238 = 0xe0
0x27b: V239 = 0x2
0x27d: V240 = EXP 0x2 0xe0
0x27e: V241 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x95ea7b3
0x280: M[V235] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x281: V242 = 0x4
0x283: V243 = ADD 0x4 V235
0x286: V244 = 0x1
0x288: V245 = 0xa0
0x28a: V246 = 0x2
0x28c: V247 = EXP 0x2 0xa0
0x28d: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28e: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x28f: V250 = 0x1
0x291: V251 = 0xa0
0x293: V252 = 0x2
0x295: V253 = EXP 0x2 0xa0
0x296: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x297: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x299: M[V243] = V255
0x29a: V256 = 0x20
0x29c: V257 = ADD 0x20 V243
0x29f: M[V257] = V111
0x2a0: V258 = 0x20
0x2a2: V259 = ADD 0x20 V257
0x2a7: V260 = 0x20
0x2a9: V261 = 0x40
0x2ab: V262 = M[0x40]
0x2ae: V263 = SUB V259 V262
0x2b0: V264 = 0x0
0x2b4: V265 = EXTCODESIZE V232
0x2b5: V266 = ISZERO V265
0x2b7: V267 = ISZERO V266
0x2b8: V268 = 0x2c0
0x2bb: JUMPI 0x2c0 V267
---
Entry stack: [V13, 0x88, V106, V109, V111]
Stack pops: 3
Stack additions: [S2, S1, S0, V232, 0x95ea7b3, V259, 0x20, V262, V263, V262, 0x0, V232, V266]
Exit stack: [V13, 0x88, V106, V109, V111, V232, 0x95ea7b3, V259, 0x20, V262, V263, V262, 0x0, V232, V266]

================================

Block 0x2bc
[0x2bc:0x2bf]
---
Predecessors: [0x25d]
Successors: []
---
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf REVERT
---
0x2bc: V269 = 0x0
0x2bf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V106, V109, V111, V232, 0x95ea7b3, V259, 0x20, V262, V263, V262, 0x0, V232, V266]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V106, V109, V111, V232, 0x95ea7b3, V259, 0x20, V262, V263, V262, 0x0, V232, V266]

================================

Block 0x2c0
[0x2c0:0x2ca]
---
Predecessors: [0x25d]
Successors: [0x2cb, 0x2d4]
---
0x2c0 JUMPDEST
0x2c1 POP
0x2c2 GAS
0x2c3 CALL
0x2c4 ISZERO
0x2c5 DUP1
0x2c6 ISZERO
0x2c7 PUSH2 0x2d4
0x2ca JUMPI
---
0x2c0: JUMPDEST 
0x2c2: V270 = GAS
0x2c3: V271 = CALL V270 V232 0x0 V262 V263 V262 0x20
0x2c4: V272 = ISZERO V271
0x2c6: V273 = ISZERO V272
0x2c7: V274 = 0x2d4
0x2ca: JUMPI 0x2d4 V273
---
Entry stack: [V13, 0x88, V106, V109, V111, V232, 0x95ea7b3, V259, 0x20, V262, V263, V262, 0x0, V232, V266]
Stack pops: 7
Stack additions: [V272]
Exit stack: [V13, 0x88, V106, V109, V111, V232, 0x95ea7b3, V259, V272]

================================

Block 0x2cb
[0x2cb:0x2d3]
---
Predecessors: [0x2c0]
Successors: []
---
0x2cb RETURNDATASIZE
0x2cc PUSH1 0x0
0x2ce DUP1
0x2cf RETURNDATACOPY
0x2d0 RETURNDATASIZE
0x2d1 PUSH1 0x0
0x2d3 REVERT
---
0x2cb: V275 = RETURNDATASIZE
0x2cc: V276 = 0x0
0x2cf: RETURNDATACOPY 0x0 0x0 V275
0x2d0: V277 = RETURNDATASIZE
0x2d1: V278 = 0x0
0x2d3: REVERT 0x0 V277
---
Entry stack: [V13, 0x88, V106, V109, V111, V232, 0x95ea7b3, V259, V272]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V106, V109, V111, V232, 0x95ea7b3, V259, V272]

================================

Block 0x2d4
[0x2d4:0x2e5]
---
Predecessors: [0x2c0]
Successors: [0x2e6, 0x2ea]
---
0x2d4 JUMPDEST
0x2d5 POP
0x2d6 POP
0x2d7 POP
0x2d8 POP
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc RETURNDATASIZE
0x2dd PUSH1 0x20
0x2df DUP2
0x2e0 LT
0x2e1 ISZERO
0x2e2 PUSH2 0x2ea
0x2e5 JUMPI
---
0x2d4: JUMPDEST 
0x2d9: V279 = 0x40
0x2db: V280 = M[0x40]
0x2dc: V281 = RETURNDATASIZE
0x2dd: V282 = 0x20
0x2e0: V283 = LT V281 0x20
0x2e1: V284 = ISZERO V283
0x2e2: V285 = 0x2ea
0x2e5: JUMPI 0x2ea V284
---
Entry stack: [V13, 0x88, V106, V109, V111, V232, 0x95ea7b3, V259, V272]
Stack pops: 4
Stack additions: [V280, V281]
Exit stack: [V13, 0x88, V106, V109, V111, V280, V281]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x2d4]
Successors: []
---
0x2e6 PUSH1 0x0
0x2e8 DUP1
0x2e9 REVERT
---
0x2e6: V286 = 0x0
0x2e9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V106, V109, V111, V280, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V106, V109, V111, V280, V281]

================================

Block 0x2ea
[0x2ea:0x2f0]
---
Predecessors: [0x2d4]
Successors: [0x88]
---
0x2ea JUMPDEST
0x2eb POP
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 JUMP
---
0x2ea: JUMPDEST 
0x2f0: JUMP 0x88
---
Entry stack: [V13, 0x88, V106, V109, V111, V280, V281]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x2f1
[0x2f1:0x303]
---
Predecessors: [0x15a]
Successors: [0x304, 0x308]
---
0x2f1 JUMPDEST
0x2f2 PUSH1 0x0
0x2f4 SLOAD
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd AND
0x2fe CALLER
0x2ff EQ
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2f1: JUMPDEST 
0x2f2: V287 = 0x0
0x2f4: V288 = S[0x0]
0x2f5: V289 = 0x1
0x2f7: V290 = 0xa0
0x2f9: V291 = 0x2
0x2fb: V292 = EXP 0x2 0xa0
0x2fc: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fd: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x2fe: V295 = CALLER
0x2ff: V296 = EQ V295 V294
0x300: V297 = 0x308
0x303: JUMPI 0x308 V296
---
Entry stack: [V13, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2f1]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V298 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88]

================================

Block 0x308
[0x308:0x312]
---
Predecessors: [0x2f1]
Successors: [0x372]
---
0x308 JUMPDEST
0x309 PUSH2 0x313
0x30c CALLER
0x30d ADDRESS
0x30e BALANCE
0x30f PUSH2 0x372
0x312 JUMP
---
0x308: JUMPDEST 
0x309: V299 = 0x313
0x30c: V300 = CALLER
0x30d: V301 = ADDRESS
0x30e: V302 = BALANCE V301
0x30f: V303 = 0x372
0x312: JUMP 0x372
---
Entry stack: [V13, 0x88]
Stack pops: 0
Stack additions: [0x313, V300, V302]
Exit stack: [V13, 0x88, 0x313, V300, V302]

================================

Block 0x313
[0x313:0x314]
---
Predecessors: [0x3a0]
Successors: [0x88]
---
0x313 JUMPDEST
0x314 JUMP
---
0x313: JUMPDEST 
0x314: THROW 
---
Entry stack: [V13, 0x88, V42, V144, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x88, V42, V144, S1]

================================

Block 0x315
[0x315:0x323]
---
Predecessors: [0x16f]
Successors: [0xde]
---
0x315 JUMPDEST
0x316 PUSH1 0x1
0x318 SLOAD
0x319 PUSH1 0x1
0x31b PUSH1 0xa0
0x31d PUSH1 0x2
0x31f EXP
0x320 SUB
0x321 AND
0x322 DUP2
0x323 JUMP
---
0x315: JUMPDEST 
0x316: V304 = 0x1
0x318: V305 = S[0x1]
0x319: V306 = 0x1
0x31b: V307 = 0xa0
0x31d: V308 = 0x2
0x31f: V309 = EXP 0x2 0xa0
0x320: V310 = SUB 0x10000000000000000000000000000000000000000 0x1
0x321: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x323: JUMP 0xde
---
Entry stack: [V13, 0xde]
Stack pops: 1
Stack additions: [S0, V311]
Exit stack: [V13, 0xde, V311]

================================

Block 0x324
[0x324:0x336]
---
Predecessors: [0x184]
Successors: [0x337, 0x33b]
---
0x324 JUMPDEST
0x325 PUSH1 0x0
0x327 SLOAD
0x328 PUSH1 0x1
0x32a PUSH1 0xa0
0x32c PUSH1 0x2
0x32e EXP
0x32f SUB
0x330 AND
0x331 CALLER
0x332 EQ
0x333 PUSH2 0x33b
0x336 JUMPI
---
0x324: JUMPDEST 
0x325: V312 = 0x0
0x327: V313 = S[0x0]
0x328: V314 = 0x1
0x32a: V315 = 0xa0
0x32c: V316 = 0x2
0x32e: V317 = EXP 0x2 0xa0
0x32f: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x330: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x331: V320 = CALLER
0x332: V321 = EQ V320 V319
0x333: V322 = 0x33b
0x336: JUMPI 0x33b V321
---
Entry stack: [V13, 0x88, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V137]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x324]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V323 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V137]

================================

Block 0x33b
[0x33b:0x34b]
---
Predecessors: [0x324]
Successors: [0x34c, 0x350]
---
0x33b JUMPDEST
0x33c PUSH1 0x1
0x33e PUSH1 0xa0
0x340 PUSH1 0x2
0x342 EXP
0x343 SUB
0x344 DUP2
0x345 AND
0x346 ISZERO
0x347 ISZERO
0x348 PUSH2 0x350
0x34b JUMPI
---
0x33b: JUMPDEST 
0x33c: V324 = 0x1
0x33e: V325 = 0xa0
0x340: V326 = 0x2
0x342: V327 = EXP 0x2 0xa0
0x343: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x345: V329 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x346: V330 = ISZERO V329
0x347: V331 = ISZERO V330
0x348: V332 = 0x350
0x34b: JUMPI 0x350 V331
---
Entry stack: [V13, 0x88, V137]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x88, V137]

================================

Block 0x34c
[0x34c:0x34f]
---
Predecessors: [0x33b]
Successors: []
---
0x34c PUSH1 0x0
0x34e DUP1
0x34f REVERT
---
0x34c: V333 = 0x0
0x34f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V137]

================================

Block 0x350
[0x350:0x371]
---
Predecessors: [0x33b]
Successors: [0x88]
---
0x350 JUMPDEST
0x351 PUSH1 0x0
0x353 DUP1
0x354 SLOAD
0x355 PUSH1 0x1
0x357 PUSH1 0xa0
0x359 PUSH1 0x2
0x35b EXP
0x35c SUB
0x35d NOT
0x35e AND
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 SWAP3
0x368 SWAP1
0x369 SWAP3
0x36a AND
0x36b SWAP2
0x36c SWAP1
0x36d SWAP2
0x36e OR
0x36f SWAP1
0x370 SSTORE
0x371 JUMP
---
0x350: JUMPDEST 
0x351: V334 = 0x0
0x354: V335 = S[0x0]
0x355: V336 = 0x1
0x357: V337 = 0xa0
0x359: V338 = 0x2
0x35b: V339 = EXP 0x2 0xa0
0x35c: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35d: V341 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V342 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V335
0x35f: V343 = 0x1
0x361: V344 = 0xa0
0x363: V345 = 0x2
0x365: V346 = EXP 0x2 0xa0
0x366: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36a: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x36e: V349 = OR V348 V342
0x370: S[0x0] = V349
0x371: JUMP 0x88
---
Entry stack: [V13, 0x88, V137]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x372
[0x372:0x39b]
---
Predecessors: [0x199, 0x1bd, 0x1d3, 0x308]
Successors: [0x39c, 0x3a0]
---
0x372 JUMPDEST
0x373 DUP2
0x374 PUSH1 0x1
0x376 PUSH1 0xa0
0x378 PUSH1 0x2
0x37a EXP
0x37b SUB
0x37c AND
0x37d PUSH1 0x4
0x37f SLOAD
0x380 DUP3
0x381 PUSH1 0x40
0x383 MLOAD
0x384 PUSH1 0x0
0x386 PUSH1 0x40
0x388 MLOAD
0x389 DUP1
0x38a DUP4
0x38b SUB
0x38c DUP2
0x38d DUP6
0x38e DUP9
0x38f DUP9
0x390 CALL
0x391 SWAP4
0x392 POP
0x393 POP
0x394 POP
0x395 POP
0x396 ISZERO
0x397 ISZERO
0x398 PUSH2 0x3a0
0x39b JUMPI
---
0x372: JUMPDEST 
0x374: V350 = 0x1
0x376: V351 = 0xa0
0x378: V352 = 0x2
0x37a: V353 = EXP 0x2 0xa0
0x37b: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37c: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x37d: V356 = 0x4
0x37f: V357 = S[0x4]
0x381: V358 = 0x40
0x383: V359 = M[0x40]
0x384: V360 = 0x0
0x386: V361 = 0x40
0x388: V362 = M[0x40]
0x38b: V363 = SUB V359 V362
0x390: V364 = CALL V357 V355 S0 V362 V363 V362 0x0
0x396: V365 = ISZERO V364
0x397: V366 = ISZERO V365
0x398: V367 = 0x3a0
0x39b: JUMPI 0x3a0 V366
---
Entry stack: [V13, 0x88, V42, V144, S4, S3, {0x1bd, 0x1d3, 0x1f1, 0x313}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x88, V42, V144, S4, S3, {0x1bd, 0x1d3, 0x1f1, 0x313}, S1, S0]

================================

Block 0x39c
[0x39c:0x39f]
---
Predecessors: [0x372]
Successors: []
---
0x39c PUSH1 0x0
0x39e DUP1
0x39f REVERT
---
0x39c: V368 = 0x0
0x39f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x88, V42, V144, S4, S3, {0x1bd, 0x1d3, 0x1f1, 0x313}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x88, V42, V144, S4, S3, {0x1bd, 0x1d3, 0x1f1, 0x313}, S1, S0]

================================

Block 0x3a0
[0x3a0:0x3a3]
---
Predecessors: [0x372]
Successors: [0x1bd, 0x1d3, 0x1f1, 0x313]
---
0x3a0 JUMPDEST
0x3a1 POP
0x3a2 POP
0x3a3 JUMP
---
0x3a0: JUMPDEST 
0x3a3: JUMP {0x1bd, 0x1d3, 0x1f1, 0x313}
---
Entry stack: [V13, 0x88, V42, V144, S4, S3, {0x1bd, 0x1d3, 0x1f1, 0x313}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x88, V42, V144, S4, S3]

================================

Block 0x3a4
[0x3a4:0x3cf]
---
Predecessors: []
Successors: []
---
0x3a4 STOP
0x3a5 LOG1
0x3a6 PUSH6 0x627a7a723058
0x3ad SHA3
0x3ae LT
0x3af SWAP9
0x3b0 LT
0x3b1 GASLIMIT
0x3b2 ADD
0x3b3 SWAP7
0x3b4 SWAP10
0x3b5 MISSING 0xdb
0x3b6 DUP12
0x3b7 MISSING 0xbc
0x3b8 CALLDATALOAD
0x3b9 LOG2
0x3ba REVERT
0x3bb MISSING 0x24
0x3bc PUSH16 0xa50ff9f85aa4b1535462387117564b2a
0x3cd LOG2
0x3ce STOP
0x3cf MISSING 0x29
---
0x3a4: STOP 
0x3a5: LOG S0 S1 S2
0x3a6: V369 = 0x627a7a723058
0x3ad: V370 = SHA3 0x627a7a723058 S3
0x3ae: V371 = LT V370 S4
0x3b0: V372 = LT S13 S5
0x3b1: V373 = GASLIMIT
0x3b2: V374 = ADD V373 V372
0x3b5: MISSING 0xdb
0x3b7: MISSING 0xbc
0x3b8: V375 = CALLDATALOAD S0
0x3b9: LOG V375 S1 S2 S3
0x3ba: REVERT S4 S5
0x3bb: MISSING 0x24
0x3bc: V376 = 0xa50ff9f85aa4b1535462387117564b2a
0x3cd: LOG 0xa50ff9f85aa4b1535462387117564b2a S0 S1 S2
0x3ce: STOP 
0x3cf: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, S6, S7, S8, S9, S10, S11, V374, V371, S14, S12, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Function 0:
Public function signature: 0x1d709ab4
Entry block: 0x8a
Exit block: 0x88
Body: 0x88, 0x8a, 0x92, 0x96, 0x1f7, 0x20a, 0x20e

Function 1:
Public function signature: 0x6ca7c216
Entry block: 0xa2
Exit block: 0xb7
Body: 0xa2, 0xaa, 0xae, 0xb7, 0x213

Function 2:
Public function signature: 0x6d6a01f6
Entry block: 0xc9
Exit block: 0xde
Body: 0xc9, 0xd1, 0xd5, 0xde, 0x219

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xfa
Exit block: 0xde
Body: 0xde, 0xfa, 0x102, 0x106, 0x228

Function 4:
Public function signature: 0x920dd47b
Entry block: 0x10f
Exit block: 0xde
Body: 0xde, 0x10f, 0x117, 0x11b, 0x237

Function 5:
Public function signature: 0xb029c2c8
Entry block: 0x124
Exit block: 0x88
Body: 0x88, 0x124, 0x12c, 0x130, 0x246, 0x259, 0x25d, 0x2bc, 0x2c0, 0x2cb, 0x2d4, 0x2e6, 0x2ea

Function 6:
Public function signature: 0xcbc1cfd2
Entry block: 0x14e
Exit block: 0x88
Body: 0x88, 0x14e, 0x156, 0x15a, 0x2f1, 0x304, 0x308, 0x313

Function 7:
Public function signature: 0xf023d600
Entry block: 0x163
Exit block: 0xde
Body: 0xde, 0x163, 0x16b, 0x16f, 0x315

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x178
Exit block: 0x88
Body: 0x88, 0x178, 0x180, 0x184, 0x324, 0x337, 0x33b, 0x34c, 0x350

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x88
Body: 0x7f, 0x88, 0x199, 0x1bd

Function 10:
Private function
Entry block: 0x372
Exit block: 0x3a0
Body: 0x372, 0x3a0

