Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xd0]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xd0
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xd0
0xc: JUMPI 0xd0 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xda]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1b3ed722
0x3c EQ
0x3d PUSH2 0xda
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1b3ed722
0x3c: V13 = EQ 0x1b3ed722 V11
0x3d: V14 = 0xda
0x40: JUMPI 0xda V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x103]
---
0x41 DUP1
0x42 PUSH4 0x35c1d349
0x47 EQ
0x48 PUSH2 0x103
0x4b JUMPI
---
0x42: V15 = 0x35c1d349
0x47: V16 = EQ 0x35c1d349 V11
0x48: V17 = 0x103
0x4b: JUMPI 0x103 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x16d]
---
0x4c DUP1
0x4d PUSH4 0x3ccfd60b
0x52 EQ
0x53 PUSH2 0x16d
0x56 JUMPI
---
0x4d: V18 = 0x3ccfd60b
0x52: V19 = EQ 0x3ccfd60b V11
0x53: V20 = 0x16d
0x56: JUMPI 0x16d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x182]
---
0x57 DUP1
0x58 PUSH4 0x5f504a82
0x5d EQ
0x5e PUSH2 0x182
0x61 JUMPI
---
0x58: V21 = 0x5f504a82
0x5d: V22 = EQ 0x5f504a82 V11
0x5e: V23 = 0x182
0x61: JUMPI 0x182 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1d7]
---
0x62 DUP1
0x63 PUSH4 0x63bd1d4a
0x68 EQ
0x69 PUSH2 0x1d7
0x6c JUMPI
---
0x63: V24 = 0x63bd1d4a
0x68: V25 = EQ 0x63bd1d4a V11
0x69: V26 = 0x1d7
0x6c: JUMPI 0x1d7 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1ec]
---
0x6d DUP1
0x6e PUSH4 0x6cff6f9d
0x73 EQ
0x74 PUSH2 0x1ec
0x77 JUMPI
---
0x6e: V27 = 0x6cff6f9d
0x73: V28 = EQ 0x6cff6f9d V11
0x74: V29 = 0x1ec
0x77: JUMPI 0x1ec V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x215]
---
0x78 DUP1
0x79 PUSH4 0x79ba5097
0x7e EQ
0x7f PUSH2 0x215
0x82 JUMPI
---
0x79: V30 = 0x79ba5097
0x7e: V31 = EQ 0x79ba5097 V11
0x7f: V32 = 0x215
0x82: JUMPI 0x215 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x22a]
---
0x83 DUP1
0x84 PUSH4 0x8da5cb5b
0x89 EQ
0x8a PUSH2 0x22a
0x8d JUMPI
---
0x84: V33 = 0x8da5cb5b
0x89: V34 = EQ 0x8da5cb5b V11
0x8a: V35 = 0x22a
0x8d: JUMPI 0x22a V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x27f]
---
0x8e DUP1
0x8f PUSH4 0x949e8acd
0x94 EQ
0x95 PUSH2 0x27f
0x98 JUMPI
---
0x8f: V36 = 0x949e8acd
0x94: V37 = EQ 0x949e8acd V11
0x95: V38 = 0x27f
0x98: JUMPI 0x27f V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x2a8]
---
0x99 DUP1
0x9a PUSH4 0xa6f9dae1
0x9f EQ
0xa0 PUSH2 0x2a8
0xa3 JUMPI
---
0x9a: V39 = 0xa6f9dae1
0x9f: V40 = EQ 0xa6f9dae1 V11
0xa0: V41 = 0x2a8
0xa3: JUMPI 0x2a8 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x2e1]
---
0xa4 DUP1
0xa5 PUSH4 0xc22fc384
0xaa EQ
0xab PUSH2 0x2e1
0xae JUMPI
---
0xa5: V42 = 0xc22fc384
0xaa: V43 = EQ 0xc22fc384 V11
0xab: V44 = 0x2e1
0xae: JUMPI 0x2e1 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x2f6]
---
0xaf DUP1
0xb0 PUSH4 0xd0e30db0
0xb5 EQ
0xb6 PUSH2 0x2f6
0xb9 JUMPI
---
0xb0: V45 = 0xd0e30db0
0xb5: V46 = EQ 0xd0e30db0 V11
0xb6: V47 = 0x2f6
0xb9: JUMPI 0x2f6 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x300]
---
0xba DUP1
0xbb PUSH4 0xdc39d06d
0xc0 EQ
0xc1 PUSH2 0x300
0xc4 JUMPI
---
0xbb: V48 = 0xdc39d06d
0xc0: V49 = EQ 0xdc39d06d V11
0xc1: V50 = 0x300
0xc4: JUMPI 0x300 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xcf]
---
Predecessors: [0xba]
Successors: [0xd0, 0x35a]
---
0xc5 DUP1
0xc6 PUSH4 0xed88c68e
0xcb EQ
0xcc PUSH2 0x35a
0xcf JUMPI
---
0xc6: V51 = 0xed88c68e
0xcb: V52 = EQ 0xed88c68e V11
0xcc: V53 = 0x35a
0xcf: JUMPI 0x35a V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xd7]
---
Predecessors: [0x0, 0xc5]
Successors: [0x364]
---
0xd0 JUMPDEST
0xd1 PUSH2 0xd8
0xd4 PUSH2 0x364
0xd7 JUMP
---
0xd0: JUMPDEST 
0xd1: V54 = 0xd8
0xd4: V55 = 0x364
0xd7: JUMP 0x364
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd8]
Exit stack: [V11, 0xd8]

================================

Block 0xd8
[0xd8:0xd9]
---
Predecessors: [0x3bf]
Successors: []
---
0xd8 JUMPDEST
0xd9 STOP
---
0xd8: JUMPDEST 
0xd9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe0]
---
Predecessors: [0xd]
Successors: [0xe1, 0xe5]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc ISZERO
0xdd PUSH2 0xe5
0xe0 JUMPI
---
0xda: JUMPDEST 
0xdb: V56 = CALLVALUE
0xdc: V57 = ISZERO V56
0xdd: V58 = 0xe5
0xe0: JUMPI 0xe5 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe1
[0xe1:0xe4]
---
Predecessors: [0xda]
Successors: []
---
0xe1 PUSH1 0x0
0xe3 DUP1
0xe4 REVERT
---
0xe1: V59 = 0x0
0xe4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xec]
---
Predecessors: [0xda]
Successors: [0x41e]
---
0xe5 JUMPDEST
0xe6 PUSH2 0xed
0xe9 PUSH2 0x41e
0xec JUMP
---
0xe5: JUMPDEST 
0xe6: V60 = 0xed
0xe9: V61 = 0x41e
0xec: JUMP 0x41e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xed]
Exit stack: [V11, 0xed]

================================

Block 0xed
[0xed:0x102]
---
Predecessors: [0x41e]
Successors: []
---
0xed JUMPDEST
0xee PUSH1 0x40
0xf0 MLOAD
0xf1 DUP1
0xf2 DUP3
0xf3 DUP2
0xf4 MSTORE
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP2
0xf9 POP
0xfa POP
0xfb PUSH1 0x40
0xfd MLOAD
0xfe DUP1
0xff SWAP2
0x100 SUB
0x101 SWAP1
0x102 RETURN
---
0xed: JUMPDEST 
0xee: V62 = 0x40
0xf0: V63 = M[0x40]
0xf4: M[V63] = V273
0xf5: V64 = 0x20
0xf7: V65 = ADD 0x20 V63
0xfb: V66 = 0x40
0xfd: V67 = M[0x40]
0x100: V68 = SUB V65 V67
0x102: RETURN V67 V68
---
Entry stack: [V11, 0xed, V273]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xed]

================================

Block 0x103
[0x103:0x109]
---
Predecessors: [0x41]
Successors: [0x10a, 0x10e]
---
0x103 JUMPDEST
0x104 CALLVALUE
0x105 ISZERO
0x106 PUSH2 0x10e
0x109 JUMPI
---
0x103: JUMPDEST 
0x104: V69 = CALLVALUE
0x105: V70 = ISZERO V69
0x106: V71 = 0x10e
0x109: JUMPI 0x10e V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10a
[0x10a:0x10d]
---
Predecessors: [0x103]
Successors: []
---
0x10a PUSH1 0x0
0x10c DUP1
0x10d REVERT
---
0x10a: V72 = 0x0
0x10d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10e
[0x10e:0x123]
---
Predecessors: [0x103]
Successors: [0x424]
---
0x10e JUMPDEST
0x10f PUSH2 0x124
0x112 PUSH1 0x4
0x114 DUP1
0x115 DUP1
0x116 CALLDATALOAD
0x117 SWAP1
0x118 PUSH1 0x20
0x11a ADD
0x11b SWAP1
0x11c SWAP2
0x11d SWAP1
0x11e POP
0x11f POP
0x120 PUSH2 0x424
0x123 JUMP
---
0x10e: JUMPDEST 
0x10f: V73 = 0x124
0x112: V74 = 0x4
0x116: V75 = CALLDATALOAD 0x4
0x118: V76 = 0x20
0x11a: V77 = ADD 0x20 0x4
0x120: V78 = 0x424
0x123: JUMP 0x424
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x124, V75]
Exit stack: [V11, 0x124, V75]

================================

Block 0x124
[0x124:0x16c]
---
Predecessors: [0x433]
Successors: []
---
0x124 JUMPDEST
0x125 PUSH1 0x40
0x127 MLOAD
0x128 DUP1
0x129 DUP4
0x12a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13f AND
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x20
0x15a ADD
0x15b DUP3
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 SWAP3
0x162 POP
0x163 POP
0x164 POP
0x165 PUSH1 0x40
0x167 MLOAD
0x168 DUP1
0x169 SWAP2
0x16a SUB
0x16b SWAP1
0x16c RETURN
---
0x124: JUMPDEST 
0x125: V79 = 0x40
0x127: V80 = M[0x40]
0x12a: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x140: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x157: M[V80] = V84
0x158: V85 = 0x20
0x15a: V86 = ADD 0x20 V80
0x15d: M[V86] = V299
0x15e: V87 = 0x20
0x160: V88 = ADD 0x20 V86
0x165: V89 = 0x40
0x167: V90 = M[0x40]
0x16a: V91 = SUB V88 V90
0x16c: RETURN V90 V91
---
Entry stack: [V11, 0x124, V296, V299]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x124]

================================

Block 0x16d
[0x16d:0x173]
---
Predecessors: [0x4c]
Successors: [0x174, 0x178]
---
0x16d JUMPDEST
0x16e CALLVALUE
0x16f ISZERO
0x170 PUSH2 0x178
0x173 JUMPI
---
0x16d: JUMPDEST 
0x16e: V92 = CALLVALUE
0x16f: V93 = ISZERO V92
0x170: V94 = 0x178
0x173: JUMPI 0x178 V93
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x174
[0x174:0x177]
---
Predecessors: [0x16d]
Successors: []
---
0x174 PUSH1 0x0
0x176 DUP1
0x177 REVERT
---
0x174: V95 = 0x0
0x177: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x178
[0x178:0x17f]
---
Predecessors: [0x16d]
Successors: [0x477]
---
0x178 JUMPDEST
0x179 PUSH2 0x180
0x17c PUSH2 0x477
0x17f JUMP
---
0x178: JUMPDEST 
0x179: V96 = 0x180
0x17c: V97 = 0x477
0x17f: JUMP 0x477
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x180]
Exit stack: [V11, 0x180]

================================

Block 0x180
[0x180:0x181]
---
Predecessors: [0x50d]
Successors: []
---
0x180 JUMPDEST
0x181 STOP
---
0x180: JUMPDEST 
0x181: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x182
[0x182:0x188]
---
Predecessors: [0x57]
Successors: [0x189, 0x18d]
---
0x182 JUMPDEST
0x183 CALLVALUE
0x184 ISZERO
0x185 PUSH2 0x18d
0x188 JUMPI
---
0x182: JUMPDEST 
0x183: V98 = CALLVALUE
0x184: V99 = ISZERO V98
0x185: V100 = 0x18d
0x188: JUMPI 0x18d V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x189
[0x189:0x18c]
---
Predecessors: [0x182]
Successors: []
---
0x189 PUSH1 0x0
0x18b DUP1
0x18c REVERT
---
0x189: V101 = 0x0
0x18c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18d
[0x18d:0x194]
---
Predecessors: [0x182]
Successors: [0x513]
---
0x18d JUMPDEST
0x18e PUSH2 0x195
0x191 PUSH2 0x513
0x194 JUMP
---
0x18d: JUMPDEST 
0x18e: V102 = 0x195
0x191: V103 = 0x513
0x194: JUMP 0x513
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x195]
Exit stack: [V11, 0x195]

================================

Block 0x195
[0x195:0x1d6]
---
Predecessors: [0x513]
Successors: []
---
0x195 JUMPDEST
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a DUP3
0x19b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b0 AND
0x1b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c6 AND
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP2
0x1cd POP
0x1ce POP
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 SWAP2
0x1d4 SUB
0x1d5 SWAP1
0x1d6 RETURN
---
0x195: JUMPDEST 
0x196: V104 = 0x40
0x198: V105 = M[0x40]
0x19b: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b0: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x1b1: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1c8: M[V105] = V109
0x1c9: V110 = 0x20
0x1cb: V111 = ADD 0x20 V105
0x1cf: V112 = 0x40
0x1d1: V113 = M[0x40]
0x1d4: V114 = SUB V111 V113
0x1d6: RETURN V113 V114
---
Entry stack: [V11, 0x195, V342]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x195]

================================

Block 0x1d7
[0x1d7:0x1dd]
---
Predecessors: [0x62]
Successors: [0x1de, 0x1e2]
---
0x1d7 JUMPDEST
0x1d8 CALLVALUE
0x1d9 ISZERO
0x1da PUSH2 0x1e2
0x1dd JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V115 = CALLVALUE
0x1d9: V116 = ISZERO V115
0x1da: V117 = 0x1e2
0x1dd: JUMPI 0x1e2 V116
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1de
[0x1de:0x1e1]
---
Predecessors: [0x1d7]
Successors: []
---
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 REVERT
---
0x1de: V118 = 0x0
0x1e1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e2
[0x1e2:0x1e9]
---
Predecessors: [0x1d7]
Successors: [0x539]
---
0x1e2 JUMPDEST
0x1e3 PUSH2 0x1ea
0x1e6 PUSH2 0x539
0x1e9 JUMP
---
0x1e2: JUMPDEST 
0x1e3: V119 = 0x1ea
0x1e6: V120 = 0x539
0x1e9: JUMP 0x539
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ea]
Exit stack: [V11, 0x1ea]

================================

Block 0x1ea
[0x1ea:0x1eb]
---
Predecessors: [0x802]
Successors: []
---
0x1ea JUMPDEST
0x1eb STOP
---
0x1ea: JUMPDEST 
0x1eb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ec
[0x1ec:0x1f2]
---
Predecessors: [0x6d]
Successors: [0x1f3, 0x1f7]
---
0x1ec JUMPDEST
0x1ed CALLVALUE
0x1ee ISZERO
0x1ef PUSH2 0x1f7
0x1f2 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V121 = CALLVALUE
0x1ee: V122 = ISZERO V121
0x1ef: V123 = 0x1f7
0x1f2: JUMPI 0x1f7 V122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f3
[0x1f3:0x1f6]
---
Predecessors: [0x1ec]
Successors: []
---
0x1f3 PUSH1 0x0
0x1f5 DUP1
0x1f6 REVERT
---
0x1f3: V124 = 0x0
0x1f6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f7
[0x1f7:0x1fe]
---
Predecessors: [0x1ec]
Successors: [0x807]
---
0x1f7 JUMPDEST
0x1f8 PUSH2 0x1ff
0x1fb PUSH2 0x807
0x1fe JUMP
---
0x1f7: JUMPDEST 
0x1f8: V125 = 0x1ff
0x1fb: V126 = 0x807
0x1fe: JUMP 0x807
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ff]
Exit stack: [V11, 0x1ff]

================================

Block 0x1ff
[0x1ff:0x214]
---
Predecessors: [0x807]
Successors: []
---
0x1ff JUMPDEST
0x200 PUSH1 0x40
0x202 MLOAD
0x203 DUP1
0x204 DUP3
0x205 DUP2
0x206 MSTORE
0x207 PUSH1 0x20
0x209 ADD
0x20a SWAP2
0x20b POP
0x20c POP
0x20d PUSH1 0x40
0x20f MLOAD
0x210 DUP1
0x211 SWAP2
0x212 SUB
0x213 SWAP1
0x214 RETURN
---
0x1ff: JUMPDEST 
0x200: V127 = 0x40
0x202: V128 = M[0x40]
0x206: M[V128] = V558
0x207: V129 = 0x20
0x209: V130 = ADD 0x20 V128
0x20d: V131 = 0x40
0x20f: V132 = M[0x40]
0x212: V133 = SUB V130 V132
0x214: RETURN V132 V133
---
Entry stack: [V11, 0x1ff, V558]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1ff]

================================

Block 0x215
[0x215:0x21b]
---
Predecessors: [0x78]
Successors: [0x21c, 0x220]
---
0x215 JUMPDEST
0x216 CALLVALUE
0x217 ISZERO
0x218 PUSH2 0x220
0x21b JUMPI
---
0x215: JUMPDEST 
0x216: V134 = CALLVALUE
0x217: V135 = ISZERO V134
0x218: V136 = 0x220
0x21b: JUMPI 0x220 V135
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x21c
[0x21c:0x21f]
---
Predecessors: [0x215]
Successors: []
---
0x21c PUSH1 0x0
0x21e DUP1
0x21f REVERT
---
0x21c: V137 = 0x0
0x21f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x220
[0x220:0x227]
---
Predecessors: [0x215]
Successors: [0x80d]
---
0x220 JUMPDEST
0x221 PUSH2 0x228
0x224 PUSH2 0x80d
0x227 JUMP
---
0x220: JUMPDEST 
0x221: V138 = 0x228
0x224: V139 = 0x80d
0x227: JUMP 0x80d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x228]
Exit stack: [V11, 0x228]

================================

Block 0x228
[0x228:0x229]
---
Predecessors: [0x869]
Successors: []
---
0x228 JUMPDEST
0x229 STOP
---
0x228: JUMPDEST 
0x229: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x22a
[0x22a:0x230]
---
Predecessors: [0x83]
Successors: [0x231, 0x235]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x22a: JUMPDEST 
0x22b: V140 = CALLVALUE
0x22c: V141 = ISZERO V140
0x22d: V142 = 0x235
0x230: JUMPI 0x235 V141
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x22a]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V143 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x235
[0x235:0x23c]
---
Predecessors: [0x22a]
Successors: [0x8cd]
---
0x235 JUMPDEST
0x236 PUSH2 0x23d
0x239 PUSH2 0x8cd
0x23c JUMP
---
0x235: JUMPDEST 
0x236: V144 = 0x23d
0x239: V145 = 0x8cd
0x23c: JUMP 0x8cd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V11, 0x23d]

================================

Block 0x23d
[0x23d:0x27e]
---
Predecessors: [0x8cd]
Successors: []
---
0x23d JUMPDEST
0x23e PUSH1 0x40
0x240 MLOAD
0x241 DUP1
0x242 DUP3
0x243 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x258 AND
0x259 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26e AND
0x26f DUP2
0x270 MSTORE
0x271 PUSH1 0x20
0x273 ADD
0x274 SWAP2
0x275 POP
0x276 POP
0x277 PUSH1 0x40
0x279 MLOAD
0x27a DUP1
0x27b SWAP2
0x27c SUB
0x27d SWAP1
0x27e RETURN
---
0x23d: JUMPDEST 
0x23e: V146 = 0x40
0x240: V147 = M[0x40]
0x243: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x258: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x259: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x270: M[V147] = V151
0x271: V152 = 0x20
0x273: V153 = ADD 0x20 V147
0x277: V154 = 0x40
0x279: V155 = M[0x40]
0x27c: V156 = SUB V153 V155
0x27e: RETURN V155 V156
---
Entry stack: [V11, 0x23d, V603]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x23d]

================================

Block 0x27f
[0x27f:0x285]
---
Predecessors: [0x8e]
Successors: [0x286, 0x28a]
---
0x27f JUMPDEST
0x280 CALLVALUE
0x281 ISZERO
0x282 PUSH2 0x28a
0x285 JUMPI
---
0x27f: JUMPDEST 
0x280: V157 = CALLVALUE
0x281: V158 = ISZERO V157
0x282: V159 = 0x28a
0x285: JUMPI 0x28a V158
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x286
[0x286:0x289]
---
Predecessors: [0x27f]
Successors: []
---
0x286 PUSH1 0x0
0x288 DUP1
0x289 REVERT
---
0x286: V160 = 0x0
0x289: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x28a
[0x28a:0x291]
---
Predecessors: [0x27f]
Successors: [0x8f2]
---
0x28a JUMPDEST
0x28b PUSH2 0x292
0x28e PUSH2 0x8f2
0x291 JUMP
---
0x28a: JUMPDEST 
0x28b: V161 = 0x292
0x28e: V162 = 0x8f2
0x291: JUMP 0x8f2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x292]
Exit stack: [V11, 0x292]

================================

Block 0x292
[0x292:0x2a7]
---
Predecessors: [0x986]
Successors: []
---
0x292 JUMPDEST
0x293 PUSH1 0x40
0x295 MLOAD
0x296 DUP1
0x297 DUP3
0x298 DUP2
0x299 MSTORE
0x29a PUSH1 0x20
0x29c ADD
0x29d SWAP2
0x29e POP
0x29f POP
0x2a0 PUSH1 0x40
0x2a2 MLOAD
0x2a3 DUP1
0x2a4 SWAP2
0x2a5 SUB
0x2a6 SWAP1
0x2a7 RETURN
---
0x292: JUMPDEST 
0x293: V163 = 0x40
0x295: V164 = M[0x40]
0x299: M[V164] = V642
0x29a: V165 = 0x20
0x29c: V166 = ADD 0x20 V164
0x2a0: V167 = 0x40
0x2a2: V168 = M[0x40]
0x2a5: V169 = SUB V166 V168
0x2a7: RETURN V168 V169
---
Entry stack: [V11, V642]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a8
[0x2a8:0x2ae]
---
Predecessors: [0x99]
Successors: [0x2af, 0x2b3]
---
0x2a8 JUMPDEST
0x2a9 CALLVALUE
0x2aa ISZERO
0x2ab PUSH2 0x2b3
0x2ae JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V170 = CALLVALUE
0x2aa: V171 = ISZERO V170
0x2ab: V172 = 0x2b3
0x2ae: JUMPI 0x2b3 V171
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2af
[0x2af:0x2b2]
---
Predecessors: [0x2a8]
Successors: []
---
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 REVERT
---
0x2af: V173 = 0x0
0x2b2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b3
[0x2b3:0x2de]
---
Predecessors: [0x2a8]
Successors: [0x995]
---
0x2b3 JUMPDEST
0x2b4 PUSH2 0x2df
0x2b7 PUSH1 0x4
0x2b9 DUP1
0x2ba DUP1
0x2bb CALLDATALOAD
0x2bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d1 AND
0x2d2 SWAP1
0x2d3 PUSH1 0x20
0x2d5 ADD
0x2d6 SWAP1
0x2d7 SWAP2
0x2d8 SWAP1
0x2d9 POP
0x2da POP
0x2db PUSH2 0x995
0x2de JUMP
---
0x2b3: JUMPDEST 
0x2b4: V174 = 0x2df
0x2b7: V175 = 0x4
0x2bb: V176 = CALLDATALOAD 0x4
0x2bc: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x2d3: V179 = 0x20
0x2d5: V180 = ADD 0x20 0x4
0x2db: V181 = 0x995
0x2de: JUMP 0x995
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2df, V178]
Exit stack: [V11, 0x2df, V178]

================================

Block 0x2df
[0x2df:0x2e0]
---
Predecessors: [0x9f0]
Successors: []
---
0x2df JUMPDEST
0x2e0 STOP
---
0x2df: JUMPDEST 
0x2e0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e1
[0x2e1:0x2e7]
---
Predecessors: [0xa4]
Successors: [0x2e8, 0x2ec]
---
0x2e1 JUMPDEST
0x2e2 CALLVALUE
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x2e1: JUMPDEST 
0x2e2: V182 = CALLVALUE
0x2e3: V183 = ISZERO V182
0x2e4: V184 = 0x2ec
0x2e7: JUMPI 0x2ec V183
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x2e1]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V185 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ec
[0x2ec:0x2f3]
---
Predecessors: [0x2e1]
Successors: [0xa34]
---
0x2ec JUMPDEST
0x2ed PUSH2 0x2f4
0x2f0 PUSH2 0xa34
0x2f3 JUMP
---
0x2ec: JUMPDEST 
0x2ed: V186 = 0x2f4
0x2f0: V187 = 0xa34
0x2f3: JUMP 0xa34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2f4]
Exit stack: [V11, 0x2f4]

================================

Block 0x2f4
[0x2f4:0x2f5]
---
Predecessors: [0xae6]
Successors: []
---
0x2f4 JUMPDEST
0x2f5 STOP
---
0x2f4: JUMPDEST 
0x2f5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f6
[0x2f6:0x2fd]
---
Predecessors: [0xaf]
Successors: [0x364]
---
0x2f6 JUMPDEST
0x2f7 PUSH2 0x2fe
0x2fa PUSH2 0x364
0x2fd JUMP
---
0x2f6: JUMPDEST 
0x2f7: V188 = 0x2fe
0x2fa: V189 = 0x364
0x2fd: JUMP 0x364
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2fe]
Exit stack: [V11, 0x2fe]

================================

Block 0x2fe
[0x2fe:0x2ff]
---
Predecessors: [0x3bf]
Successors: []
---
0x2fe JUMPDEST
0x2ff STOP
---
0x2fe: JUMPDEST 
0x2ff: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x300
[0x300:0x306]
---
Predecessors: [0xba]
Successors: [0x307, 0x30b]
---
0x300 JUMPDEST
0x301 CALLVALUE
0x302 ISZERO
0x303 PUSH2 0x30b
0x306 JUMPI
---
0x300: JUMPDEST 
0x301: V190 = CALLVALUE
0x302: V191 = ISZERO V190
0x303: V192 = 0x30b
0x306: JUMPI 0x30b V191
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x307
[0x307:0x30a]
---
Predecessors: [0x300]
Successors: []
---
0x307 PUSH1 0x0
0x309 DUP1
0x30a REVERT
---
0x307: V193 = 0x0
0x30a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x30b
[0x30b:0x33f]
---
Predecessors: [0x300]
Successors: [0xae8]
---
0x30b JUMPDEST
0x30c PUSH2 0x340
0x30f PUSH1 0x4
0x311 DUP1
0x312 DUP1
0x313 CALLDATALOAD
0x314 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x329 AND
0x32a SWAP1
0x32b PUSH1 0x20
0x32d ADD
0x32e SWAP1
0x32f SWAP2
0x330 SWAP1
0x331 DUP1
0x332 CALLDATALOAD
0x333 SWAP1
0x334 PUSH1 0x20
0x336 ADD
0x337 SWAP1
0x338 SWAP2
0x339 SWAP1
0x33a POP
0x33b POP
0x33c PUSH2 0xae8
0x33f JUMP
---
0x30b: JUMPDEST 
0x30c: V194 = 0x340
0x30f: V195 = 0x4
0x313: V196 = CALLDATALOAD 0x4
0x314: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x329: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x32b: V199 = 0x20
0x32d: V200 = ADD 0x20 0x4
0x332: V201 = CALLDATALOAD 0x24
0x334: V202 = 0x20
0x336: V203 = ADD 0x20 0x24
0x33c: V204 = 0xae8
0x33f: JUMP 0xae8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x340, V198, V201]
Exit stack: [V11, 0x340, V198, V201]

================================

Block 0x340
[0x340:0x359]
---
Predecessors: [0xc15]
Successors: []
---
0x340 JUMPDEST
0x341 PUSH1 0x40
0x343 MLOAD
0x344 DUP1
0x345 DUP3
0x346 ISZERO
0x347 ISZERO
0x348 ISZERO
0x349 ISZERO
0x34a DUP2
0x34b MSTORE
0x34c PUSH1 0x20
0x34e ADD
0x34f SWAP2
0x350 POP
0x351 POP
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 SWAP2
0x357 SUB
0x358 SWAP1
0x359 RETURN
---
0x340: JUMPDEST 
0x341: V205 = 0x40
0x343: V206 = M[0x40]
0x346: V207 = ISZERO V773
0x347: V208 = ISZERO V207
0x348: V209 = ISZERO V208
0x349: V210 = ISZERO V209
0x34b: M[V206] = V210
0x34c: V211 = 0x20
0x34e: V212 = ADD 0x20 V206
0x352: V213 = 0x40
0x354: V214 = M[0x40]
0x357: V215 = SUB V212 V214
0x359: RETURN V214 V215
---
Entry stack: [V11, V773]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x35a
[0x35a:0x361]
---
Predecessors: [0xc5]
Successors: [0xc27]
---
0x35a JUMPDEST
0x35b PUSH2 0x362
0x35e PUSH2 0xc27
0x361 JUMP
---
0x35a: JUMPDEST 
0x35b: V216 = 0x362
0x35e: V217 = 0xc27
0x361: JUMP 0xc27
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x362]
Exit stack: [V11, 0x362]

================================

Block 0x362
[0x362:0x363]
---
Predecessors: [0xc27]
Successors: []
---
0x362 JUMPDEST
0x363 STOP
---
0x362: JUMPDEST 
0x363: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x364
[0x364:0x377]
---
Predecessors: [0xd0, 0x2f6]
Successors: [0xc29]
---
0x364 JUMPDEST
0x365 PUSH1 0x5
0x367 DUP1
0x368 SLOAD
0x369 DUP1
0x36a PUSH1 0x1
0x36c ADD
0x36d DUP3
0x36e DUP2
0x36f PUSH2 0x378
0x372 SWAP2
0x373 SWAP1
0x374 PUSH2 0xc29
0x377 JUMP
---
0x364: JUMPDEST 
0x365: V218 = 0x5
0x368: V219 = S[0x5]
0x36a: V220 = 0x1
0x36c: V221 = ADD 0x1 V219
0x36f: V222 = 0x378
0x374: V223 = 0xc29
0x377: JUMP 0xc29
---
Entry stack: [V11, {0xd8, 0x2fe}]
Stack pops: 0
Stack additions: [0x5, V219, V221, 0x378, 0x5, V221]
Exit stack: [V11, {0xd8, 0x2fe}, 0x5, V219, V221, 0x378, 0x5, V221]

================================

Block 0x378
[0x378:0x3bd]
---
Predecessors: [0xc56]
Successors: [0x3be, 0x3bf]
---
0x378 JUMPDEST
0x379 SWAP2
0x37a PUSH1 0x0
0x37c MSTORE
0x37d PUSH1 0x20
0x37f PUSH1 0x0
0x381 SHA3
0x382 SWAP1
0x383 PUSH1 0x2
0x385 MUL
0x386 ADD
0x387 PUSH1 0x0
0x389 PUSH1 0x40
0x38b DUP1
0x38c MLOAD
0x38d SWAP1
0x38e DUP2
0x38f ADD
0x390 PUSH1 0x40
0x392 MSTORE
0x393 DUP1
0x394 CALLER
0x395 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3aa AND
0x3ab DUP2
0x3ac MSTORE
0x3ad PUSH1 0x20
0x3af ADD
0x3b0 PUSH1 0x64
0x3b2 PUSH1 0x2
0x3b4 SLOAD
0x3b5 CALLVALUE
0x3b6 MUL
0x3b7 DUP2
0x3b8 ISZERO
0x3b9 ISZERO
0x3ba PUSH2 0x3bf
0x3bd JUMPI
---
0x378: JUMPDEST 
0x37a: V224 = 0x0
0x37c: M[0x0] = 0x5
0x37d: V225 = 0x20
0x37f: V226 = 0x0
0x381: V227 = SHA3 0x0 0x20
0x383: V228 = 0x2
0x385: V229 = MUL 0x2 S1
0x386: V230 = ADD V229 V227
0x387: V231 = 0x0
0x389: V232 = 0x40
0x38c: V233 = M[0x40]
0x38f: V234 = ADD V233 0x40
0x390: V235 = 0x40
0x392: M[0x40] = V234
0x394: V236 = CALLER
0x395: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x3aa: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x3ac: M[V233] = V238
0x3ad: V239 = 0x20
0x3af: V240 = ADD 0x20 V233
0x3b0: V241 = 0x64
0x3b2: V242 = 0x2
0x3b4: V243 = S[0x2]
0x3b5: V244 = CALLVALUE
0x3b6: V245 = MUL V244 V243
0x3b8: V246 = ISZERO 0x64
0x3b9: V247 = ISZERO 0x0
0x3ba: V248 = 0x3bf
0x3bd: JUMPI 0x3bf 0x1
---
Entry stack: [V11, {0xd8, 0x2fe}, 0x5, S1, S0]
Stack pops: 3
Stack additions: [S0, V230, 0x0, V233, V240, 0x64, V245]
Exit stack: [V11, {0xd8, 0x2fe}, S0, V230, 0x0, V233, V240, 0x64, V245]

================================

Block 0x3be
[0x3be:0x3be]
---
Predecessors: [0x378]
Successors: []
---
0x3be INVALID
---
0x3be: INVALID 
---
Entry stack: [V11, {0xd8, 0x2fe}, S6, V230, 0x0, V233, V240, 0x64, V245]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd8, 0x2fe}, S6, V230, 0x0, V233, V240, 0x64, V245]

================================

Block 0x3bf
[0x3bf:0x41d]
---
Predecessors: [0x378]
Successors: [0xd8, 0x2fe]
---
0x3bf JUMPDEST
0x3c0 DIV
0x3c1 DUP2
0x3c2 MSTORE
0x3c3 POP
0x3c4 SWAP1
0x3c5 SWAP2
0x3c6 SWAP1
0x3c7 SWAP2
0x3c8 POP
0x3c9 PUSH1 0x0
0x3cb DUP3
0x3cc ADD
0x3cd MLOAD
0x3ce DUP2
0x3cf PUSH1 0x0
0x3d1 ADD
0x3d2 PUSH1 0x0
0x3d4 PUSH2 0x100
0x3d7 EXP
0x3d8 DUP2
0x3d9 SLOAD
0x3da DUP2
0x3db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f0 MUL
0x3f1 NOT
0x3f2 AND
0x3f3 SWAP1
0x3f4 DUP4
0x3f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40a AND
0x40b MUL
0x40c OR
0x40d SWAP1
0x40e SSTORE
0x40f POP
0x410 PUSH1 0x20
0x412 DUP3
0x413 ADD
0x414 MLOAD
0x415 DUP2
0x416 PUSH1 0x1
0x418 ADD
0x419 SSTORE
0x41a POP
0x41b POP
0x41c POP
0x41d JUMP
---
0x3bf: JUMPDEST 
0x3c0: V249 = DIV V245 0x64
0x3c2: M[V240] = V249
0x3c9: V250 = 0x0
0x3cc: V251 = ADD V233 0x0
0x3cd: V252 = M[V251]
0x3cf: V253 = 0x0
0x3d1: V254 = ADD 0x0 V230
0x3d2: V255 = 0x0
0x3d4: V256 = 0x100
0x3d7: V257 = EXP 0x100 0x0
0x3d9: V258 = S[V254]
0x3db: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f0: V260 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3f1: V261 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3f2: V262 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V258
0x3f5: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x40a: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x40b: V265 = MUL V264 0x1
0x40c: V266 = OR V265 V262
0x40e: S[V254] = V266
0x410: V267 = 0x20
0x413: V268 = ADD V233 0x20
0x414: V269 = M[V268]
0x416: V270 = 0x1
0x418: V271 = ADD 0x1 V230
0x419: S[V271] = V269
0x41d: JUMP {0xd8, 0x2fe}
---
Entry stack: [V11, {0xd8, 0x2fe}, S6, V230, 0x0, V233, V240, 0x64, V245]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x41e
[0x41e:0x423]
---
Predecessors: [0xe5]
Successors: [0xed]
---
0x41e JUMPDEST
0x41f PUSH1 0x2
0x421 SLOAD
0x422 DUP2
0x423 JUMP
---
0x41e: JUMPDEST 
0x41f: V272 = 0x2
0x421: V273 = S[0x2]
0x423: JUMP 0xed
---
Entry stack: [V11, 0xed]
Stack pops: 1
Stack additions: [S0, V273]
Exit stack: [V11, 0xed, V273]

================================

Block 0x424
[0x424:0x431]
---
Predecessors: [0x10e]
Successors: [0x432, 0x433]
---
0x424 JUMPDEST
0x425 PUSH1 0x5
0x427 DUP2
0x428 DUP2
0x429 SLOAD
0x42a DUP2
0x42b LT
0x42c ISZERO
0x42d ISZERO
0x42e PUSH2 0x433
0x431 JUMPI
---
0x424: JUMPDEST 
0x425: V274 = 0x5
0x429: V275 = S[0x5]
0x42b: V276 = LT V75 V275
0x42c: V277 = ISZERO V276
0x42d: V278 = ISZERO V277
0x42e: V279 = 0x433
0x431: JUMPI 0x433 V278
---
Entry stack: [V11, 0x124, V75]
Stack pops: 1
Stack additions: [S0, 0x5, S0]
Exit stack: [V11, 0x124, V75, 0x5, V75]

================================

Block 0x432
[0x432:0x432]
---
Predecessors: [0x424]
Successors: []
---
0x432 INVALID
---
0x432: INVALID 
---
Entry stack: [V11, 0x124, V75, 0x5, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x124, V75, 0x5, V75]

================================

Block 0x433
[0x433:0x476]
---
Predecessors: [0x424]
Successors: [0x124]
---
0x433 JUMPDEST
0x434 SWAP1
0x435 PUSH1 0x0
0x437 MSTORE
0x438 PUSH1 0x20
0x43a PUSH1 0x0
0x43c SHA3
0x43d SWAP1
0x43e PUSH1 0x2
0x440 MUL
0x441 ADD
0x442 PUSH1 0x0
0x444 SWAP2
0x445 POP
0x446 SWAP1
0x447 POP
0x448 DUP1
0x449 PUSH1 0x0
0x44b ADD
0x44c PUSH1 0x0
0x44e SWAP1
0x44f SLOAD
0x450 SWAP1
0x451 PUSH2 0x100
0x454 EXP
0x455 SWAP1
0x456 DIV
0x457 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46c AND
0x46d SWAP1
0x46e DUP1
0x46f PUSH1 0x1
0x471 ADD
0x472 SLOAD
0x473 SWAP1
0x474 POP
0x475 DUP3
0x476 JUMP
---
0x433: JUMPDEST 
0x435: V280 = 0x0
0x437: M[0x0] = 0x5
0x438: V281 = 0x20
0x43a: V282 = 0x0
0x43c: V283 = SHA3 0x0 0x20
0x43e: V284 = 0x2
0x440: V285 = MUL 0x2 V75
0x441: V286 = ADD V285 V283
0x442: V287 = 0x0
0x449: V288 = 0x0
0x44b: V289 = ADD 0x0 V286
0x44c: V290 = 0x0
0x44f: V291 = S[V289]
0x451: V292 = 0x100
0x454: V293 = EXP 0x100 0x0
0x456: V294 = DIV V291 0x1
0x457: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x46c: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x46f: V297 = 0x1
0x471: V298 = ADD 0x1 V286
0x472: V299 = S[V298]
0x476: JUMP 0x124
---
Entry stack: [V11, 0x124, V75, 0x5, V75]
Stack pops: 4
Stack additions: [S3, V296, V299]
Exit stack: [V11, 0x124, V296, V299]

================================

Block 0x477
[0x477:0x4fb]
---
Predecessors: [0x178]
Successors: [0x4fc, 0x500]
---
0x477 JUMPDEST
0x478 PUSH1 0x4
0x47a PUSH1 0x0
0x47c SWAP1
0x47d SLOAD
0x47e SWAP1
0x47f PUSH2 0x100
0x482 EXP
0x483 SWAP1
0x484 DIV
0x485 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49a AND
0x49b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b0 AND
0x4b1 PUSH4 0x3ccfd60b
0x4b6 PUSH3 0xf4240
0x4ba PUSH1 0x40
0x4bc MLOAD
0x4bd DUP3
0x4be PUSH4 0xffffffff
0x4c3 AND
0x4c4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4e2 MUL
0x4e3 DUP2
0x4e4 MSTORE
0x4e5 PUSH1 0x4
0x4e7 ADD
0x4e8 PUSH1 0x0
0x4ea PUSH1 0x40
0x4ec MLOAD
0x4ed DUP1
0x4ee DUP4
0x4ef SUB
0x4f0 DUP2
0x4f1 PUSH1 0x0
0x4f3 DUP9
0x4f4 DUP1
0x4f5 EXTCODESIZE
0x4f6 ISZERO
0x4f7 ISZERO
0x4f8 PUSH2 0x500
0x4fb JUMPI
---
0x477: JUMPDEST 
0x478: V300 = 0x4
0x47a: V301 = 0x0
0x47d: V302 = S[0x4]
0x47f: V303 = 0x100
0x482: V304 = EXP 0x100 0x0
0x484: V305 = DIV V302 0x1
0x485: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x49a: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x49b: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b0: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x4b1: V310 = 0x3ccfd60b
0x4b6: V311 = 0xf4240
0x4ba: V312 = 0x40
0x4bc: V313 = M[0x40]
0x4be: V314 = 0xffffffff
0x4c3: V315 = AND 0xffffffff 0x3ccfd60b
0x4c4: V316 = 0x100000000000000000000000000000000000000000000000000000000
0x4e2: V317 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x4e4: M[V313] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x4e5: V318 = 0x4
0x4e7: V319 = ADD 0x4 V313
0x4e8: V320 = 0x0
0x4ea: V321 = 0x40
0x4ec: V322 = M[0x40]
0x4ef: V323 = SUB V319 V322
0x4f1: V324 = 0x0
0x4f5: V325 = EXTCODESIZE V309
0x4f6: V326 = ISZERO V325
0x4f7: V327 = ISZERO V326
0x4f8: V328 = 0x500
0x4fb: JUMPI 0x500 V327
---
Entry stack: [V11, 0x180]
Stack pops: 0
Stack additions: [V309, 0x3ccfd60b, 0xf4240, V319, 0x0, V322, V323, V322, 0x0, V309]
Exit stack: [V11, 0x180, V309, 0x3ccfd60b, 0xf4240, V319, 0x0, V322, V323, V322, 0x0, V309]

================================

Block 0x4fc
[0x4fc:0x4ff]
---
Predecessors: [0x477]
Successors: []
---
0x4fc PUSH1 0x0
0x4fe DUP1
0x4ff REVERT
---
0x4fc: V329 = 0x0
0x4ff: REVERT 0x0 0x0
---
Entry stack: [V11, 0x180, V309, 0x3ccfd60b, 0xf4240, V319, 0x0, V322, V323, V322, 0x0, V309]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x180, V309, 0x3ccfd60b, 0xf4240, V319, 0x0, V322, V323, V322, 0x0, V309]

================================

Block 0x500
[0x500:0x508]
---
Predecessors: [0x477]
Successors: [0x509, 0x50d]
---
0x500 JUMPDEST
0x501 DUP8
0x502 CALL
0x503 ISZERO
0x504 ISZERO
0x505 PUSH2 0x50d
0x508 JUMPI
---
0x500: JUMPDEST 
0x502: V330 = CALL 0xf4240 V309 0x0 V322 V323 V322 0x0
0x503: V331 = ISZERO V330
0x504: V332 = ISZERO V331
0x505: V333 = 0x50d
0x508: JUMPI 0x50d V332
---
Entry stack: [V11, 0x180, V309, 0x3ccfd60b, 0xf4240, V319, 0x0, V322, V323, V322, 0x0, V309]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V11, 0x180, V309, 0x3ccfd60b, 0xf4240, V319]

================================

Block 0x509
[0x509:0x50c]
---
Predecessors: [0x500]
Successors: []
---
0x509 PUSH1 0x0
0x50b DUP1
0x50c REVERT
---
0x509: V334 = 0x0
0x50c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x180, V309, 0x3ccfd60b, 0xf4240, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x180, V309, 0x3ccfd60b, 0xf4240, V319]

================================

Block 0x50d
[0x50d:0x512]
---
Predecessors: [0x500]
Successors: [0x180]
---
0x50d JUMPDEST
0x50e POP
0x50f POP
0x510 POP
0x511 POP
0x512 JUMP
---
0x50d: JUMPDEST 
0x512: JUMP 0x180
---
Entry stack: [V11, 0x180, V309, 0x3ccfd60b, 0xf4240, V319]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x513
[0x513:0x538]
---
Predecessors: [0x18d]
Successors: [0x195]
---
0x513 JUMPDEST
0x514 PUSH1 0x1
0x516 PUSH1 0x0
0x518 SWAP1
0x519 SLOAD
0x51a SWAP1
0x51b PUSH2 0x100
0x51e EXP
0x51f SWAP1
0x520 DIV
0x521 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x536 AND
0x537 DUP2
0x538 JUMP
---
0x513: JUMPDEST 
0x514: V335 = 0x1
0x516: V336 = 0x0
0x519: V337 = S[0x1]
0x51b: V338 = 0x100
0x51e: V339 = EXP 0x100 0x0
0x520: V340 = DIV V337 0x1
0x521: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x536: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x538: JUMP 0x195
---
Entry stack: [V11, 0x195]
Stack pops: 1
Stack additions: [S0, V342]
Exit stack: [V11, 0x195, V342]

================================

Block 0x539
[0x539:0x562]
---
Predecessors: [0x1e2]
Successors: [0x563, 0x567]
---
0x539 JUMPDEST
0x53a PUSH1 0x0
0x53c DUP1
0x53d PUSH1 0x0
0x53f ADDRESS
0x540 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x555 AND
0x556 BALANCE
0x557 SWAP3
0x558 POP
0x559 PUSH1 0x1
0x55b DUP4
0x55c GT
0x55d ISZERO
0x55e ISZERO
0x55f PUSH2 0x567
0x562 JUMPI
---
0x539: JUMPDEST 
0x53a: V343 = 0x0
0x53d: V344 = 0x0
0x53f: V345 = ADDRESS
0x540: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x555: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x556: V348 = BALANCE V347
0x559: V349 = 0x1
0x55c: V350 = GT V348 0x1
0x55d: V351 = ISZERO V350
0x55e: V352 = ISZERO V351
0x55f: V353 = 0x567
0x562: JUMPI 0x567 V352
---
Entry stack: [V11, 0x1ea]
Stack pops: 0
Stack additions: [V348, 0x0, 0x0]
Exit stack: [V11, 0x1ea, V348, 0x0, 0x0]

================================

Block 0x563
[0x563:0x566]
---
Predecessors: [0x539]
Successors: []
---
0x563 PUSH1 0x0
0x565 DUP1
0x566 REVERT
---
0x563: V354 = 0x0
0x566: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ea, V348, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, V348, 0x0, 0x0]

================================

Block 0x567
[0x567:0x571]
---
Predecessors: [0x539]
Successors: [0x572, 0x573]
---
0x567 JUMPDEST
0x568 PUSH1 0x2
0x56a DUP4
0x56b DUP2
0x56c ISZERO
0x56d ISZERO
0x56e PUSH2 0x573
0x571 JUMPI
---
0x567: JUMPDEST 
0x568: V355 = 0x2
0x56c: V356 = ISZERO 0x2
0x56d: V357 = ISZERO 0x0
0x56e: V358 = 0x573
0x571: JUMPI 0x573 0x1
---
Entry stack: [V11, 0x1ea, V348, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x2, S2]
Exit stack: [V11, 0x1ea, V348, 0x0, 0x0, 0x2, V348]

================================

Block 0x572
[0x572:0x572]
---
Predecessors: [0x567]
Successors: []
---
0x572 INVALID
---
0x572: INVALID 
---
Entry stack: [V11, 0x1ea, V348, 0x0, 0x0, 0x2, V348]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, V348, 0x0, 0x0, 0x2, V348]

================================

Block 0x573
[0x573:0x633]
---
Predecessors: [0x567]
Successors: [0x634, 0x638]
---
0x573 JUMPDEST
0x574 DIV
0x575 SWAP2
0x576 POP
0x577 DUP2
0x578 PUSH1 0x0
0x57a SUB
0x57b SWAP3
0x57c POP
0x57d PUSH1 0x4
0x57f PUSH1 0x0
0x581 SWAP1
0x582 SLOAD
0x583 SWAP1
0x584 PUSH2 0x100
0x587 EXP
0x588 SWAP1
0x589 DIV
0x58a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59f AND
0x5a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b5 AND
0x5b6 PUSH4 0xf088d547
0x5bb DUP4
0x5bc CALLER
0x5bd PUSH1 0x40
0x5bf MLOAD
0x5c0 DUP4
0x5c1 PUSH4 0xffffffff
0x5c6 AND
0x5c7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5e5 MUL
0x5e6 DUP2
0x5e7 MSTORE
0x5e8 PUSH1 0x4
0x5ea ADD
0x5eb DUP1
0x5ec DUP3
0x5ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x602 AND
0x603 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x618 AND
0x619 DUP2
0x61a MSTORE
0x61b PUSH1 0x20
0x61d ADD
0x61e SWAP2
0x61f POP
0x620 POP
0x621 PUSH1 0x20
0x623 PUSH1 0x40
0x625 MLOAD
0x626 DUP1
0x627 DUP4
0x628 SUB
0x629 DUP2
0x62a DUP6
0x62b DUP9
0x62c DUP1
0x62d EXTCODESIZE
0x62e ISZERO
0x62f ISZERO
0x630 PUSH2 0x638
0x633 JUMPI
---
0x573: JUMPDEST 
0x574: V359 = DIV V348 0x2
0x578: V360 = 0x0
0x57a: V361 = SUB 0x0 V359
0x57d: V362 = 0x4
0x57f: V363 = 0x0
0x582: V364 = S[0x4]
0x584: V365 = 0x100
0x587: V366 = EXP 0x100 0x0
0x589: V367 = DIV V364 0x1
0x58a: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x59f: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x5a0: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b5: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x5b6: V372 = 0xf088d547
0x5bc: V373 = CALLER
0x5bd: V374 = 0x40
0x5bf: V375 = M[0x40]
0x5c1: V376 = 0xffffffff
0x5c6: V377 = AND 0xffffffff 0xf088d547
0x5c7: V378 = 0x100000000000000000000000000000000000000000000000000000000
0x5e5: V379 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf088d547
0x5e7: M[V375] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x5e8: V380 = 0x4
0x5ea: V381 = ADD 0x4 V375
0x5ed: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x602: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x603: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x618: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x61a: M[V381] = V385
0x61b: V386 = 0x20
0x61d: V387 = ADD 0x20 V381
0x621: V388 = 0x20
0x623: V389 = 0x40
0x625: V390 = M[0x40]
0x628: V391 = SUB V387 V390
0x62d: V392 = EXTCODESIZE V371
0x62e: V393 = ISZERO V392
0x62f: V394 = ISZERO V393
0x630: V395 = 0x638
0x633: JUMPI 0x638 V394
---
Entry stack: [V11, 0x1ea, V348, 0x0, 0x0, 0x2, V348]
Stack pops: 5
Stack additions: [V361, V359, S2, V371, 0xf088d547, V359, V387, 0x20, V390, V391, V390, V359, V371]
Exit stack: [V11, 0x1ea, V361, V359, 0x0, V371, 0xf088d547, V359, V387, 0x20, V390, V391, V390, V359, V371]

================================

Block 0x634
[0x634:0x637]
---
Predecessors: [0x573]
Successors: []
---
0x634 PUSH1 0x0
0x636 DUP1
0x637 REVERT
---
0x634: V396 = 0x0
0x637: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ea, V361, V359, 0x0, V371, 0xf088d547, V359, V387, 0x20, V390, V391, V390, V359, V371]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, V361, V359, 0x0, V371, 0xf088d547, V359, V387, 0x20, V390, V391, V390, V359, V371]

================================

Block 0x638
[0x638:0x640]
---
Predecessors: [0x573]
Successors: [0x641, 0x645]
---
0x638 JUMPDEST
0x639 GAS
0x63a CALL
0x63b ISZERO
0x63c ISZERO
0x63d PUSH2 0x645
0x640 JUMPI
---
0x638: JUMPDEST 
0x639: V397 = GAS
0x63a: V398 = CALL V397 V371 V359 V390 V391 V390 0x20
0x63b: V399 = ISZERO V398
0x63c: V400 = ISZERO V399
0x63d: V401 = 0x645
0x640: JUMPI 0x645 V400
---
Entry stack: [V11, 0x1ea, V361, V359, 0x0, V371, 0xf088d547, V359, V387, 0x20, V390, V391, V390, V359, V371]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1ea, V361, V359, 0x0, V371, 0xf088d547, V359, V387]

================================

Block 0x641
[0x641:0x644]
---
Predecessors: [0x638]
Successors: []
---
0x641 PUSH1 0x0
0x643 DUP1
0x644 REVERT
---
0x641: V402 = 0x0
0x644: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ea, V361, V359, 0x0, V371, 0xf088d547, V359, V387]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, V361, V359, 0x0, V371, 0xf088d547, V359, V387]

================================

Block 0x645
[0x645:0x651]
---
Predecessors: [0x638]
Successors: [0x652]
---
0x645 JUMPDEST
0x646 POP
0x647 POP
0x648 POP
0x649 POP
0x64a PUSH1 0x40
0x64c MLOAD
0x64d DUP1
0x64e MLOAD
0x64f SWAP1
0x650 POP
0x651 POP
---
0x645: JUMPDEST 
0x64a: V403 = 0x40
0x64c: V404 = M[0x40]
0x64e: V405 = M[V404]
---
Entry stack: [V11, 0x1ea, V361, V359, 0x0, V371, 0xf088d547, V359, V387]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x1ea, V361, V359, 0x0]

================================

Block 0x652
[0x652:0x65b]
---
Predecessors: [0x645, 0x7fd]
Successors: [0x65c, 0x802]
---
0x652 JUMPDEST
0x653 PUSH1 0x0
0x655 DUP4
0x656 GT
0x657 ISZERO
0x658 PUSH2 0x802
0x65b JUMPI
---
0x652: JUMPDEST 
0x653: V406 = 0x0
0x656: V407 = GT S2 0x0
0x657: V408 = ISZERO V407
0x658: V409 = 0x802
0x65b: JUMPI 0x802 V408
---
Entry stack: [V11, 0x1ea, S2, V359, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x1ea, S2, V359, S0]

================================

Block 0x65c
[0x65c:0x66a]
---
Predecessors: [0x652]
Successors: [0x66b, 0x66c]
---
0x65c PUSH1 0x5
0x65e PUSH1 0x3
0x660 SLOAD
0x661 DUP2
0x662 SLOAD
0x663 DUP2
0x664 LT
0x665 ISZERO
0x666 ISZERO
0x667 PUSH2 0x66c
0x66a JUMPI
---
0x65c: V410 = 0x5
0x65e: V411 = 0x3
0x660: V412 = S[0x3]
0x662: V413 = S[0x5]
0x664: V414 = LT V412 V413
0x665: V415 = ISZERO V414
0x666: V416 = ISZERO V415
0x667: V417 = 0x66c
0x66a: JUMPI 0x66c V416
---
Entry stack: [V11, 0x1ea, S2, V359, S0]
Stack pops: 0
Stack additions: [0x5, V412]
Exit stack: [V11, 0x1ea, S2, V359, S0, 0x5, V412]

================================

Block 0x66b
[0x66b:0x66b]
---
Predecessors: [0x65c]
Successors: []
---
0x66b INVALID
---
0x66b: INVALID 
---
Entry stack: [V11, 0x1ea, S4, V359, S2, 0x5, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, S4, V359, S2, 0x5, V412]

================================

Block 0x66c
[0x66c:0x684]
---
Predecessors: [0x65c]
Successors: [0x685, 0x6ac]
---
0x66c JUMPDEST
0x66d SWAP1
0x66e PUSH1 0x0
0x670 MSTORE
0x671 PUSH1 0x20
0x673 PUSH1 0x0
0x675 SHA3
0x676 SWAP1
0x677 PUSH1 0x2
0x679 MUL
0x67a ADD
0x67b PUSH1 0x1
0x67d ADD
0x67e SLOAD
0x67f DUP4
0x680 LT
0x681 PUSH2 0x6ac
0x684 JUMPI
---
0x66c: JUMPDEST 
0x66e: V418 = 0x0
0x670: M[0x0] = 0x5
0x671: V419 = 0x20
0x673: V420 = 0x0
0x675: V421 = SHA3 0x0 0x20
0x677: V422 = 0x2
0x679: V423 = MUL 0x2 V412
0x67a: V424 = ADD V423 V421
0x67b: V425 = 0x1
0x67d: V426 = ADD 0x1 V424
0x67e: V427 = S[V426]
0x680: V428 = LT S4 V427
0x681: V429 = 0x6ac
0x684: JUMPI 0x6ac V428
---
Entry stack: [V11, 0x1ea, S4, V359, S2, 0x5, V412]
Stack pops: 5
Stack additions: [S4, S3, S2]
Exit stack: [V11, 0x1ea, S4, V359, S2]

================================

Block 0x685
[0x685:0x693]
---
Predecessors: [0x66c]
Successors: [0x694, 0x695]
---
0x685 PUSH1 0x5
0x687 PUSH1 0x3
0x689 SLOAD
0x68a DUP2
0x68b SLOAD
0x68c DUP2
0x68d LT
0x68e ISZERO
0x68f ISZERO
0x690 PUSH2 0x695
0x693 JUMPI
---
0x685: V430 = 0x5
0x687: V431 = 0x3
0x689: V432 = S[0x3]
0x68b: V433 = S[0x5]
0x68d: V434 = LT V432 V433
0x68e: V435 = ISZERO V434
0x68f: V436 = ISZERO V435
0x690: V437 = 0x695
0x693: JUMPI 0x695 V436
---
Entry stack: [V11, 0x1ea, S2, V359, S0]
Stack pops: 0
Stack additions: [0x5, V432]
Exit stack: [V11, 0x1ea, S2, V359, S0, 0x5, V432]

================================

Block 0x694
[0x694:0x694]
---
Predecessors: [0x685]
Successors: []
---
0x694 INVALID
---
0x694: INVALID 
---
Entry stack: [V11, 0x1ea, S4, V359, S2, 0x5, V432]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, S4, V359, S2, 0x5, V432]

================================

Block 0x695
[0x695:0x6ab]
---
Predecessors: [0x685]
Successors: [0x6ae]
---
0x695 JUMPDEST
0x696 SWAP1
0x697 PUSH1 0x0
0x699 MSTORE
0x69a PUSH1 0x20
0x69c PUSH1 0x0
0x69e SHA3
0x69f SWAP1
0x6a0 PUSH1 0x2
0x6a2 MUL
0x6a3 ADD
0x6a4 PUSH1 0x1
0x6a6 ADD
0x6a7 SLOAD
0x6a8 PUSH2 0x6ae
0x6ab JUMP
---
0x695: JUMPDEST 
0x697: V438 = 0x0
0x699: M[0x0] = 0x5
0x69a: V439 = 0x20
0x69c: V440 = 0x0
0x69e: V441 = SHA3 0x0 0x20
0x6a0: V442 = 0x2
0x6a2: V443 = MUL 0x2 V432
0x6a3: V444 = ADD V443 V441
0x6a4: V445 = 0x1
0x6a6: V446 = ADD 0x1 V444
0x6a7: V447 = S[V446]
0x6a8: V448 = 0x6ae
0x6ab: JUMP 0x6ae
---
Entry stack: [V11, 0x1ea, S4, V359, S2, 0x5, V432]
Stack pops: 2
Stack additions: [V447]
Exit stack: [V11, 0x1ea, S4, V359, S2, V447]

================================

Block 0x6ac
[0x6ac:0x6ad]
---
Predecessors: [0x66c]
Successors: [0x6ae]
---
0x6ac JUMPDEST
0x6ad DUP3
---
0x6ac: JUMPDEST 
---
Entry stack: [V11, 0x1ea, S2, V359, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V11, 0x1ea, S2, V359, S0, S2]

================================

Block 0x6ae
[0x6ae:0x6b9]
---
Predecessors: [0x695, 0x6ac]
Successors: [0x6ba, 0x7e2]
---
0x6ae JUMPDEST
0x6af SWAP1
0x6b0 POP
0x6b1 PUSH1 0x0
0x6b3 DUP2
0x6b4 GT
0x6b5 ISZERO
0x6b6 PUSH2 0x7e2
0x6b9 JUMPI
---
0x6ae: JUMPDEST 
0x6b1: V449 = 0x0
0x6b4: V450 = GT S0 0x0
0x6b5: V451 = ISZERO V450
0x6b6: V452 = 0x7e2
0x6b9: JUMPI 0x7e2 V451
---
Entry stack: [V11, 0x1ea, S3, V359, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x1ea, S3, V359, S0]

================================

Block 0x6ba
[0x6ba:0x6c9]
---
Predecessors: [0x6ae]
Successors: [0x6ca, 0x6cb]
---
0x6ba DUP1
0x6bb PUSH1 0x5
0x6bd PUSH1 0x3
0x6bf SLOAD
0x6c0 DUP2
0x6c1 SLOAD
0x6c2 DUP2
0x6c3 LT
0x6c4 ISZERO
0x6c5 ISZERO
0x6c6 PUSH2 0x6cb
0x6c9 JUMPI
---
0x6bb: V453 = 0x5
0x6bd: V454 = 0x3
0x6bf: V455 = S[0x3]
0x6c1: V456 = S[0x5]
0x6c3: V457 = LT V455 V456
0x6c4: V458 = ISZERO V457
0x6c5: V459 = ISZERO V458
0x6c6: V460 = 0x6cb
0x6c9: JUMPI 0x6cb V459
---
Entry stack: [V11, 0x1ea, S2, V359, S0]
Stack pops: 1
Stack additions: [S0, S0, 0x5, V455]
Exit stack: [V11, 0x1ea, S2, V359, S0, S0, 0x5, V455]

================================

Block 0x6ca
[0x6ca:0x6ca]
---
Predecessors: [0x6ba]
Successors: []
---
0x6ca INVALID
---
0x6ca: INVALID 
---
Entry stack: [V11, 0x1ea, S5, V359, S3, S2, 0x5, V455]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, S5, V359, S3, S2, 0x5, V455]

================================

Block 0x6cb
[0x6cb:0x6fd]
---
Predecessors: [0x6ba]
Successors: [0x6fe, 0x6ff]
---
0x6cb JUMPDEST
0x6cc SWAP1
0x6cd PUSH1 0x0
0x6cf MSTORE
0x6d0 PUSH1 0x20
0x6d2 PUSH1 0x0
0x6d4 SHA3
0x6d5 SWAP1
0x6d6 PUSH1 0x2
0x6d8 MUL
0x6d9 ADD
0x6da PUSH1 0x1
0x6dc ADD
0x6dd PUSH1 0x0
0x6df DUP3
0x6e0 DUP3
0x6e1 SLOAD
0x6e2 SUB
0x6e3 SWAP3
0x6e4 POP
0x6e5 POP
0x6e6 DUP2
0x6e7 SWAP1
0x6e8 SSTORE
0x6e9 POP
0x6ea DUP1
0x6eb DUP4
0x6ec SUB
0x6ed SWAP3
0x6ee POP
0x6ef PUSH1 0x5
0x6f1 PUSH1 0x3
0x6f3 SLOAD
0x6f4 DUP2
0x6f5 SLOAD
0x6f6 DUP2
0x6f7 LT
0x6f8 ISZERO
0x6f9 ISZERO
0x6fa PUSH2 0x6ff
0x6fd JUMPI
---
0x6cb: JUMPDEST 
0x6cd: V461 = 0x0
0x6cf: M[0x0] = 0x5
0x6d0: V462 = 0x20
0x6d2: V463 = 0x0
0x6d4: V464 = SHA3 0x0 0x20
0x6d6: V465 = 0x2
0x6d8: V466 = MUL 0x2 V455
0x6d9: V467 = ADD V466 V464
0x6da: V468 = 0x1
0x6dc: V469 = ADD 0x1 V467
0x6dd: V470 = 0x0
0x6e1: V471 = S[V469]
0x6e2: V472 = SUB V471 S2
0x6e8: S[V469] = V472
0x6ec: V473 = SUB S5 S3
0x6ef: V474 = 0x5
0x6f1: V475 = 0x3
0x6f3: V476 = S[0x3]
0x6f5: V477 = S[0x5]
0x6f7: V478 = LT V476 V477
0x6f8: V479 = ISZERO V478
0x6f9: V480 = ISZERO V479
0x6fa: V481 = 0x6ff
0x6fd: JUMPI 0x6ff V480
---
Entry stack: [V11, 0x1ea, S5, V359, S3, S2, 0x5, V455]
Stack pops: 6
Stack additions: [V473, S4, S3, 0x5, V476]
Exit stack: [V11, 0x1ea, V473, V359, S3, 0x5, V476]

================================

Block 0x6fe
[0x6fe:0x6fe]
---
Predecessors: [0x6cb]
Successors: []
---
0x6fe INVALID
---
0x6fe: INVALID 
---
Entry stack: [V11, 0x1ea, V473, V359, S2, 0x5, V476]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, V473, V359, S2, 0x5, V476]

================================

Block 0x6ff
[0x6ff:0x76b]
---
Predecessors: [0x6cb]
Successors: [0x76c, 0x7e1]
---
0x6ff JUMPDEST
0x700 SWAP1
0x701 PUSH1 0x0
0x703 MSTORE
0x704 PUSH1 0x20
0x706 PUSH1 0x0
0x708 SHA3
0x709 SWAP1
0x70a PUSH1 0x2
0x70c MUL
0x70d ADD
0x70e PUSH1 0x0
0x710 ADD
0x711 PUSH1 0x0
0x713 SWAP1
0x714 SLOAD
0x715 SWAP1
0x716 PUSH2 0x100
0x719 EXP
0x71a SWAP1
0x71b DIV
0x71c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x731 AND
0x732 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x747 AND
0x748 PUSH2 0x8fc
0x74b DUP3
0x74c SWAP1
0x74d DUP2
0x74e ISZERO
0x74f MUL
0x750 SWAP1
0x751 PUSH1 0x40
0x753 MLOAD
0x754 PUSH1 0x0
0x756 PUSH1 0x40
0x758 MLOAD
0x759 DUP1
0x75a DUP4
0x75b SUB
0x75c DUP2
0x75d DUP6
0x75e DUP9
0x75f DUP9
0x760 CALL
0x761 SWAP4
0x762 POP
0x763 POP
0x764 POP
0x765 POP
0x766 ISZERO
0x767 ISZERO
0x768 PUSH2 0x7e1
0x76b JUMPI
---
0x6ff: JUMPDEST 
0x701: V482 = 0x0
0x703: M[0x0] = 0x5
0x704: V483 = 0x20
0x706: V484 = 0x0
0x708: V485 = SHA3 0x0 0x20
0x70a: V486 = 0x2
0x70c: V487 = MUL 0x2 V476
0x70d: V488 = ADD V487 V485
0x70e: V489 = 0x0
0x710: V490 = ADD 0x0 V488
0x711: V491 = 0x0
0x714: V492 = S[V490]
0x716: V493 = 0x100
0x719: V494 = EXP 0x100 0x0
0x71b: V495 = DIV V492 0x1
0x71c: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x731: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V495
0x732: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x747: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x748: V500 = 0x8fc
0x74e: V501 = ISZERO S2
0x74f: V502 = MUL V501 0x8fc
0x751: V503 = 0x40
0x753: V504 = M[0x40]
0x754: V505 = 0x0
0x756: V506 = 0x40
0x758: V507 = M[0x40]
0x75b: V508 = SUB V504 V507
0x760: V509 = CALL V502 V499 S2 V507 V508 V507 0x0
0x766: V510 = ISZERO V509
0x767: V511 = ISZERO V510
0x768: V512 = 0x7e1
0x76b: JUMPI 0x7e1 V511
---
Entry stack: [V11, 0x1ea, V473, V359, S2, 0x5, V476]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V11, 0x1ea, V473, V359, S2]

================================

Block 0x76c
[0x76c:0x77a]
---
Predecessors: [0x6ff]
Successors: [0x77b, 0x77c]
---
0x76c PUSH1 0x5
0x76e PUSH1 0x3
0x770 SLOAD
0x771 DUP2
0x772 SLOAD
0x773 DUP2
0x774 LT
0x775 ISZERO
0x776 ISZERO
0x777 PUSH2 0x77c
0x77a JUMPI
---
0x76c: V513 = 0x5
0x76e: V514 = 0x3
0x770: V515 = S[0x3]
0x772: V516 = S[0x5]
0x774: V517 = LT V515 V516
0x775: V518 = ISZERO V517
0x776: V519 = ISZERO V518
0x777: V520 = 0x77c
0x77a: JUMPI 0x77c V519
---
Entry stack: [V11, 0x1ea, V473, V359, S0]
Stack pops: 0
Stack additions: [0x5, V515]
Exit stack: [V11, 0x1ea, V473, V359, S0, 0x5, V515]

================================

Block 0x77b
[0x77b:0x77b]
---
Predecessors: [0x76c]
Successors: []
---
0x77b INVALID
---
0x77b: INVALID 
---
Entry stack: [V11, 0x1ea, V473, V359, S2, 0x5, V515]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, V473, V359, S2, 0x5, V515]

================================

Block 0x77c
[0x77c:0x7e0]
---
Predecessors: [0x76c]
Successors: [0x7e1]
---
0x77c JUMPDEST
0x77d SWAP1
0x77e PUSH1 0x0
0x780 MSTORE
0x781 PUSH1 0x20
0x783 PUSH1 0x0
0x785 SHA3
0x786 SWAP1
0x787 PUSH1 0x2
0x789 MUL
0x78a ADD
0x78b PUSH1 0x0
0x78d ADD
0x78e PUSH1 0x0
0x790 SWAP1
0x791 SLOAD
0x792 SWAP1
0x793 PUSH2 0x100
0x796 EXP
0x797 SWAP1
0x798 DIV
0x799 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ae AND
0x7af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c4 AND
0x7c5 DUP2
0x7c6 PUSH3 0xf4240
0x7ca SWAP1
0x7cb PUSH1 0x40
0x7cd MLOAD
0x7ce PUSH1 0x0
0x7d0 PUSH1 0x40
0x7d2 MLOAD
0x7d3 DUP1
0x7d4 DUP4
0x7d5 SUB
0x7d6 DUP2
0x7d7 DUP6
0x7d8 DUP9
0x7d9 DUP9
0x7da CALL
0x7db SWAP4
0x7dc POP
0x7dd POP
0x7de POP
0x7df POP
0x7e0 POP
---
0x77c: JUMPDEST 
0x77e: V521 = 0x0
0x780: M[0x0] = 0x5
0x781: V522 = 0x20
0x783: V523 = 0x0
0x785: V524 = SHA3 0x0 0x20
0x787: V525 = 0x2
0x789: V526 = MUL 0x2 V515
0x78a: V527 = ADD V526 V524
0x78b: V528 = 0x0
0x78d: V529 = ADD 0x0 V527
0x78e: V530 = 0x0
0x791: V531 = S[V529]
0x793: V532 = 0x100
0x796: V533 = EXP 0x100 0x0
0x798: V534 = DIV V531 0x1
0x799: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ae: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x7af: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c4: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x7c6: V539 = 0xf4240
0x7cb: V540 = 0x40
0x7cd: V541 = M[0x40]
0x7ce: V542 = 0x0
0x7d0: V543 = 0x40
0x7d2: V544 = M[0x40]
0x7d5: V545 = SUB V541 V544
0x7da: V546 = CALL 0xf4240 V538 S2 V544 V545 V544 0x0
---
Entry stack: [V11, 0x1ea, V473, V359, S2, 0x5, V515]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V11, 0x1ea, V473, V359, S2]

================================

Block 0x7e1
[0x7e1:0x7e1]
---
Predecessors: [0x6ff, 0x77c]
Successors: [0x7e2]
---
0x7e1 JUMPDEST
---
0x7e1: JUMPDEST 
---
Entry stack: [V11, 0x1ea, V473, V359, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, V473, V359, S0]

================================

Block 0x7e2
[0x7e2:0x7eb]
---
Predecessors: [0x6ae, 0x7e1]
Successors: [0x7ec, 0x7fd]
---
0x7e2 JUMPDEST
0x7e3 PUSH1 0x0
0x7e5 DUP4
0x7e6 GT
0x7e7 ISZERO
0x7e8 PUSH2 0x7fd
0x7eb JUMPI
---
0x7e2: JUMPDEST 
0x7e3: V547 = 0x0
0x7e6: V548 = GT S2 0x0
0x7e7: V549 = ISZERO V548
0x7e8: V550 = 0x7fd
0x7eb: JUMPI 0x7fd V549
---
Entry stack: [V11, 0x1ea, S2, V359, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x1ea, S2, V359, S0]

================================

Block 0x7ec
[0x7ec:0x7fc]
---
Predecessors: [0x7e2]
Successors: [0x7fd]
---
0x7ec PUSH1 0x1
0x7ee PUSH1 0x3
0x7f0 PUSH1 0x0
0x7f2 DUP3
0x7f3 DUP3
0x7f4 SLOAD
0x7f5 ADD
0x7f6 SWAP3
0x7f7 POP
0x7f8 POP
0x7f9 DUP2
0x7fa SWAP1
0x7fb SSTORE
0x7fc POP
---
0x7ec: V551 = 0x1
0x7ee: V552 = 0x3
0x7f0: V553 = 0x0
0x7f4: V554 = S[0x3]
0x7f5: V555 = ADD V554 0x1
0x7fb: S[0x3] = V555
---
Entry stack: [V11, 0x1ea, S2, V359, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, S2, V359, S0]

================================

Block 0x7fd
[0x7fd:0x801]
---
Predecessors: [0x7e2, 0x7ec]
Successors: [0x652]
---
0x7fd JUMPDEST
0x7fe PUSH2 0x652
0x801 JUMP
---
0x7fd: JUMPDEST 
0x7fe: V556 = 0x652
0x801: JUMP 0x652
---
Entry stack: [V11, 0x1ea, S2, V359, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ea, S2, V359, S0]

================================

Block 0x802
[0x802:0x806]
---
Predecessors: [0x652]
Successors: [0x1ea]
---
0x802 JUMPDEST
0x803 POP
0x804 POP
0x805 POP
0x806 JUMP
---
0x802: JUMPDEST 
0x806: JUMP 0x1ea
---
Entry stack: [V11, 0x1ea, S2, V359, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x807
[0x807:0x80c]
---
Predecessors: [0x1f7]
Successors: [0x1ff]
---
0x807 JUMPDEST
0x808 PUSH1 0x3
0x80a SLOAD
0x80b DUP2
0x80c JUMP
---
0x807: JUMPDEST 
0x808: V557 = 0x3
0x80a: V558 = S[0x3]
0x80c: JUMP 0x1ff
---
Entry stack: [V11, 0x1ff]
Stack pops: 1
Stack additions: [S0, V558]
Exit stack: [V11, 0x1ff, V558]

================================

Block 0x80d
[0x80d:0x864]
---
Predecessors: [0x220]
Successors: [0x865, 0x869]
---
0x80d JUMPDEST
0x80e PUSH1 0x1
0x810 PUSH1 0x0
0x812 SWAP1
0x813 SLOAD
0x814 SWAP1
0x815 PUSH2 0x100
0x818 EXP
0x819 SWAP1
0x81a DIV
0x81b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x830 AND
0x831 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x846 AND
0x847 CALLER
0x848 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85d AND
0x85e EQ
0x85f ISZERO
0x860 ISZERO
0x861 PUSH2 0x869
0x864 JUMPI
---
0x80d: JUMPDEST 
0x80e: V559 = 0x1
0x810: V560 = 0x0
0x813: V561 = S[0x1]
0x815: V562 = 0x100
0x818: V563 = EXP 0x100 0x0
0x81a: V564 = DIV V561 0x1
0x81b: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0x830: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0x831: V567 = 0xffffffffffffffffffffffffffffffffffffffff
0x846: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x847: V569 = CALLER
0x848: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0x85d: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x85e: V572 = EQ V571 V568
0x85f: V573 = ISZERO V572
0x860: V574 = ISZERO V573
0x861: V575 = 0x869
0x864: JUMPI 0x869 V574
---
Entry stack: [V11, 0x228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x228]

================================

Block 0x865
[0x865:0x868]
---
Predecessors: [0x80d]
Successors: []
---
0x865 PUSH1 0x0
0x867 DUP1
0x868 REVERT
---
0x865: V576 = 0x0
0x868: REVERT 0x0 0x0
---
Entry stack: [V11, 0x228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x228]

================================

Block 0x869
[0x869:0x8cc]
---
Predecessors: [0x80d]
Successors: [0x228]
---
0x869 JUMPDEST
0x86a PUSH1 0x1
0x86c PUSH1 0x0
0x86e SWAP1
0x86f SLOAD
0x870 SWAP1
0x871 PUSH2 0x100
0x874 EXP
0x875 SWAP1
0x876 DIV
0x877 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88c AND
0x88d PUSH1 0x0
0x88f DUP1
0x890 PUSH2 0x100
0x893 EXP
0x894 DUP2
0x895 SLOAD
0x896 DUP2
0x897 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ac MUL
0x8ad NOT
0x8ae AND
0x8af SWAP1
0x8b0 DUP4
0x8b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c6 AND
0x8c7 MUL
0x8c8 OR
0x8c9 SWAP1
0x8ca SSTORE
0x8cb POP
0x8cc JUMP
---
0x869: JUMPDEST 
0x86a: V577 = 0x1
0x86c: V578 = 0x0
0x86f: V579 = S[0x1]
0x871: V580 = 0x100
0x874: V581 = EXP 0x100 0x0
0x876: V582 = DIV V579 0x1
0x877: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0x88c: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x88d: V585 = 0x0
0x890: V586 = 0x100
0x893: V587 = EXP 0x100 0x0
0x895: V588 = S[0x0]
0x897: V589 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ac: V590 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x8ad: V591 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8ae: V592 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V588
0x8b1: V593 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c6: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V584
0x8c7: V595 = MUL V594 0x1
0x8c8: V596 = OR V595 V592
0x8ca: S[0x0] = V596
0x8cc: JUMP 0x228
---
Entry stack: [V11, 0x228]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x8cd
[0x8cd:0x8f1]
---
Predecessors: [0x235]
Successors: [0x23d]
---
0x8cd JUMPDEST
0x8ce PUSH1 0x0
0x8d0 DUP1
0x8d1 SWAP1
0x8d2 SLOAD
0x8d3 SWAP1
0x8d4 PUSH2 0x100
0x8d7 EXP
0x8d8 SWAP1
0x8d9 DIV
0x8da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ef AND
0x8f0 DUP2
0x8f1 JUMP
---
0x8cd: JUMPDEST 
0x8ce: V597 = 0x0
0x8d2: V598 = S[0x0]
0x8d4: V599 = 0x100
0x8d7: V600 = EXP 0x100 0x0
0x8d9: V601 = DIV V598 0x1
0x8da: V602 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ef: V603 = AND 0xffffffffffffffffffffffffffffffffffffffff V601
0x8f1: JUMP 0x23d
---
Entry stack: [V11, 0x23d]
Stack pops: 1
Stack additions: [S0, V603]
Exit stack: [V11, 0x23d, V603]

================================

Block 0x8f2
[0x8f2:0x974]
---
Predecessors: [0x28a]
Successors: [0x975, 0x979]
---
0x8f2 JUMPDEST
0x8f3 PUSH1 0x0
0x8f5 PUSH1 0x4
0x8f7 PUSH1 0x0
0x8f9 SWAP1
0x8fa SLOAD
0x8fb SWAP1
0x8fc PUSH2 0x100
0x8ff EXP
0x900 SWAP1
0x901 DIV
0x902 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x917 AND
0x918 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92d AND
0x92e PUSH4 0x949e8acd
0x933 PUSH1 0x40
0x935 MLOAD
0x936 DUP2
0x937 PUSH4 0xffffffff
0x93c AND
0x93d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x95b MUL
0x95c DUP2
0x95d MSTORE
0x95e PUSH1 0x4
0x960 ADD
0x961 PUSH1 0x20
0x963 PUSH1 0x40
0x965 MLOAD
0x966 DUP1
0x967 DUP4
0x968 SUB
0x969 DUP2
0x96a PUSH1 0x0
0x96c DUP8
0x96d DUP1
0x96e EXTCODESIZE
0x96f ISZERO
0x970 ISZERO
0x971 PUSH2 0x979
0x974 JUMPI
---
0x8f2: JUMPDEST 
0x8f3: V604 = 0x0
0x8f5: V605 = 0x4
0x8f7: V606 = 0x0
0x8fa: V607 = S[0x4]
0x8fc: V608 = 0x100
0x8ff: V609 = EXP 0x100 0x0
0x901: V610 = DIV V607 0x1
0x902: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0x917: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x918: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0x92d: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0x92e: V615 = 0x949e8acd
0x933: V616 = 0x40
0x935: V617 = M[0x40]
0x937: V618 = 0xffffffff
0x93c: V619 = AND 0xffffffff 0x949e8acd
0x93d: V620 = 0x100000000000000000000000000000000000000000000000000000000
0x95b: V621 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x949e8acd
0x95d: M[V617] = 0x949e8acd00000000000000000000000000000000000000000000000000000000
0x95e: V622 = 0x4
0x960: V623 = ADD 0x4 V617
0x961: V624 = 0x20
0x963: V625 = 0x40
0x965: V626 = M[0x40]
0x968: V627 = SUB V623 V626
0x96a: V628 = 0x0
0x96e: V629 = EXTCODESIZE V614
0x96f: V630 = ISZERO V629
0x970: V631 = ISZERO V630
0x971: V632 = 0x979
0x974: JUMPI 0x979 V631
---
Entry stack: [V11, 0x292]
Stack pops: 0
Stack additions: [0x0, V614, 0x949e8acd, V623, 0x20, V626, V627, V626, 0x0, V614]
Exit stack: [V11, 0x292, 0x0, V614, 0x949e8acd, V623, 0x20, V626, V627, V626, 0x0, V614]

================================

Block 0x975
[0x975:0x978]
---
Predecessors: [0x8f2]
Successors: []
---
0x975 PUSH1 0x0
0x977 DUP1
0x978 REVERT
---
0x975: V633 = 0x0
0x978: REVERT 0x0 0x0
---
Entry stack: [V11, 0x292, 0x0, V614, 0x949e8acd, V623, 0x20, V626, V627, V626, 0x0, V614]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x292, 0x0, V614, 0x949e8acd, V623, 0x20, V626, V627, V626, 0x0, V614]

================================

Block 0x979
[0x979:0x981]
---
Predecessors: [0x8f2]
Successors: [0x982, 0x986]
---
0x979 JUMPDEST
0x97a GAS
0x97b CALL
0x97c ISZERO
0x97d ISZERO
0x97e PUSH2 0x986
0x981 JUMPI
---
0x979: JUMPDEST 
0x97a: V634 = GAS
0x97b: V635 = CALL V634 V614 0x0 V626 V627 V626 0x20
0x97c: V636 = ISZERO V635
0x97d: V637 = ISZERO V636
0x97e: V638 = 0x986
0x981: JUMPI 0x986 V637
---
Entry stack: [V11, 0x292, 0x0, V614, 0x949e8acd, V623, 0x20, V626, V627, V626, 0x0, V614]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x292, 0x0, V614, 0x949e8acd, V623]

================================

Block 0x982
[0x982:0x985]
---
Predecessors: [0x979]
Successors: []
---
0x982 PUSH1 0x0
0x984 DUP1
0x985 REVERT
---
0x982: V639 = 0x0
0x985: REVERT 0x0 0x0
---
Entry stack: [V11, 0x292, 0x0, V614, 0x949e8acd, V623]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x292, 0x0, V614, 0x949e8acd, V623]

================================

Block 0x986
[0x986:0x994]
---
Predecessors: [0x979]
Successors: [0x292]
---
0x986 JUMPDEST
0x987 POP
0x988 POP
0x989 POP
0x98a PUSH1 0x40
0x98c MLOAD
0x98d DUP1
0x98e MLOAD
0x98f SWAP1
0x990 POP
0x991 SWAP1
0x992 POP
0x993 SWAP1
0x994 JUMP
---
0x986: JUMPDEST 
0x98a: V640 = 0x40
0x98c: V641 = M[0x40]
0x98e: V642 = M[V641]
0x994: JUMP 0x292
---
Entry stack: [V11, 0x292, 0x0, V614, 0x949e8acd, V623]
Stack pops: 5
Stack additions: [V642]
Exit stack: [V11, V642]

================================

Block 0x995
[0x995:0x9eb]
---
Predecessors: [0x2b3]
Successors: [0x9ec, 0x9f0]
---
0x995 JUMPDEST
0x996 PUSH1 0x0
0x998 DUP1
0x999 SWAP1
0x99a SLOAD
0x99b SWAP1
0x99c PUSH2 0x100
0x99f EXP
0x9a0 SWAP1
0x9a1 DIV
0x9a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b7 AND
0x9b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9cd AND
0x9ce CALLER
0x9cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e4 AND
0x9e5 EQ
0x9e6 ISZERO
0x9e7 ISZERO
0x9e8 PUSH2 0x9f0
0x9eb JUMPI
---
0x995: JUMPDEST 
0x996: V643 = 0x0
0x99a: V644 = S[0x0]
0x99c: V645 = 0x100
0x99f: V646 = EXP 0x100 0x0
0x9a1: V647 = DIV V644 0x1
0x9a2: V648 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b7: V649 = AND 0xffffffffffffffffffffffffffffffffffffffff V647
0x9b8: V650 = 0xffffffffffffffffffffffffffffffffffffffff
0x9cd: V651 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0x9ce: V652 = CALLER
0x9cf: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e4: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V652
0x9e5: V655 = EQ V654 V651
0x9e6: V656 = ISZERO V655
0x9e7: V657 = ISZERO V656
0x9e8: V658 = 0x9f0
0x9eb: JUMPI 0x9f0 V657
---
Entry stack: [V11, 0x2df, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2df, V178]

================================

Block 0x9ec
[0x9ec:0x9ef]
---
Predecessors: [0x995]
Successors: []
---
0x9ec PUSH1 0x0
0x9ee DUP1
0x9ef REVERT
---
0x9ec: V659 = 0x0
0x9ef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2df, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2df, V178]

================================

Block 0x9f0
[0x9f0:0xa33]
---
Predecessors: [0x995]
Successors: [0x2df]
---
0x9f0 JUMPDEST
0x9f1 DUP1
0x9f2 PUSH1 0x1
0x9f4 PUSH1 0x0
0x9f6 PUSH2 0x100
0x9f9 EXP
0x9fa DUP2
0x9fb SLOAD
0x9fc DUP2
0x9fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa12 MUL
0xa13 NOT
0xa14 AND
0xa15 SWAP1
0xa16 DUP4
0xa17 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2c AND
0xa2d MUL
0xa2e OR
0xa2f SWAP1
0xa30 SSTORE
0xa31 POP
0xa32 POP
0xa33 JUMP
---
0x9f0: JUMPDEST 
0x9f2: V660 = 0x1
0x9f4: V661 = 0x0
0x9f6: V662 = 0x100
0x9f9: V663 = EXP 0x100 0x0
0x9fb: V664 = S[0x1]
0x9fd: V665 = 0xffffffffffffffffffffffffffffffffffffffff
0xa12: V666 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xa13: V667 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa14: V668 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V664
0xa17: V669 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2c: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0xa2d: V671 = MUL V670 0x1
0xa2e: V672 = OR V671 V668
0xa30: S[0x1] = V672
0xa33: JUMP 0x2df
---
Entry stack: [V11, 0x2df, V178]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xa34
[0xa34:0xa8a]
---
Predecessors: [0x2ec]
Successors: [0xa8b, 0xa8f]
---
0xa34 JUMPDEST
0xa35 PUSH1 0x0
0xa37 DUP1
0xa38 SWAP1
0xa39 SLOAD
0xa3a SWAP1
0xa3b PUSH2 0x100
0xa3e EXP
0xa3f SWAP1
0xa40 DIV
0xa41 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa56 AND
0xa57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6c AND
0xa6d CALLER
0xa6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa83 AND
0xa84 EQ
0xa85 ISZERO
0xa86 ISZERO
0xa87 PUSH2 0xa8f
0xa8a JUMPI
---
0xa34: JUMPDEST 
0xa35: V673 = 0x0
0xa39: V674 = S[0x0]
0xa3b: V675 = 0x100
0xa3e: V676 = EXP 0x100 0x0
0xa40: V677 = DIV V674 0x1
0xa41: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0xa56: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0xa57: V680 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6c: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0xa6d: V682 = CALLER
0xa6e: V683 = 0xffffffffffffffffffffffffffffffffffffffff
0xa83: V684 = AND 0xffffffffffffffffffffffffffffffffffffffff V682
0xa84: V685 = EQ V684 V681
0xa85: V686 = ISZERO V685
0xa86: V687 = ISZERO V686
0xa87: V688 = 0xa8f
0xa8a: JUMPI 0xa8f V687
---
Entry stack: [V11, 0x2f4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2f4]

================================

Block 0xa8b
[0xa8b:0xa8e]
---
Predecessors: [0xa34]
Successors: []
---
0xa8b PUSH1 0x0
0xa8d DUP1
0xa8e REVERT
---
0xa8b: V689 = 0x0
0xa8e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2f4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2f4]

================================

Block 0xa8f
[0xa8f:0xae1]
---
Predecessors: [0xa34]
Successors: [0xae2, 0xae6]
---
0xa8f JUMPDEST
0xa90 CALLER
0xa91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa6 AND
0xaa7 PUSH2 0x8fc
0xaaa ADDRESS
0xaab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac0 AND
0xac1 BALANCE
0xac2 SWAP1
0xac3 DUP2
0xac4 ISZERO
0xac5 MUL
0xac6 SWAP1
0xac7 PUSH1 0x40
0xac9 MLOAD
0xaca PUSH1 0x0
0xacc PUSH1 0x40
0xace MLOAD
0xacf DUP1
0xad0 DUP4
0xad1 SUB
0xad2 DUP2
0xad3 DUP6
0xad4 DUP9
0xad5 DUP9
0xad6 CALL
0xad7 SWAP4
0xad8 POP
0xad9 POP
0xada POP
0xadb POP
0xadc ISZERO
0xadd ISZERO
0xade PUSH2 0xae6
0xae1 JUMPI
---
0xa8f: JUMPDEST 
0xa90: V690 = CALLER
0xa91: V691 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa6: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0xaa7: V693 = 0x8fc
0xaaa: V694 = ADDRESS
0xaab: V695 = 0xffffffffffffffffffffffffffffffffffffffff
0xac0: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V694
0xac1: V697 = BALANCE V696
0xac4: V698 = ISZERO V697
0xac5: V699 = MUL V698 0x8fc
0xac7: V700 = 0x40
0xac9: V701 = M[0x40]
0xaca: V702 = 0x0
0xacc: V703 = 0x40
0xace: V704 = M[0x40]
0xad1: V705 = SUB V701 V704
0xad6: V706 = CALL V699 V692 V697 V704 V705 V704 0x0
0xadc: V707 = ISZERO V706
0xadd: V708 = ISZERO V707
0xade: V709 = 0xae6
0xae1: JUMPI 0xae6 V708
---
Entry stack: [V11, 0x2f4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2f4]

================================

Block 0xae2
[0xae2:0xae5]
---
Predecessors: [0xa8f]
Successors: []
---
0xae2 PUSH1 0x0
0xae4 DUP1
0xae5 REVERT
---
0xae2: V710 = 0x0
0xae5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2f4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2f4]

================================

Block 0xae6
[0xae6:0xae7]
---
Predecessors: [0xa8f]
Successors: [0x2f4]
---
0xae6 JUMPDEST
0xae7 JUMP
---
0xae6: JUMPDEST 
0xae7: JUMP 0x2f4
---
Entry stack: [V11, 0x2f4]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xae8
[0xae8:0xb40]
---
Predecessors: [0x30b]
Successors: [0xb41, 0xb45]
---
0xae8 JUMPDEST
0xae9 PUSH1 0x0
0xaeb DUP1
0xaec PUSH1 0x0
0xaee SWAP1
0xaef SLOAD
0xaf0 SWAP1
0xaf1 PUSH2 0x100
0xaf4 EXP
0xaf5 SWAP1
0xaf6 DIV
0xaf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0c AND
0xb0d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb22 AND
0xb23 CALLER
0xb24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb39 AND
0xb3a EQ
0xb3b ISZERO
0xb3c ISZERO
0xb3d PUSH2 0xb45
0xb40 JUMPI
---
0xae8: JUMPDEST 
0xae9: V711 = 0x0
0xaec: V712 = 0x0
0xaef: V713 = S[0x0]
0xaf1: V714 = 0x100
0xaf4: V715 = EXP 0x100 0x0
0xaf6: V716 = DIV V713 0x1
0xaf7: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0c: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V716
0xb0d: V719 = 0xffffffffffffffffffffffffffffffffffffffff
0xb22: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V718
0xb23: V721 = CALLER
0xb24: V722 = 0xffffffffffffffffffffffffffffffffffffffff
0xb39: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff V721
0xb3a: V724 = EQ V723 V720
0xb3b: V725 = ISZERO V724
0xb3c: V726 = ISZERO V725
0xb3d: V727 = 0xb45
0xb40: JUMPI 0xb45 V726
---
Entry stack: [V11, 0x340, V198, V201]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x340, V198, V201, 0x0]

================================

Block 0xb41
[0xb41:0xb44]
---
Predecessors: [0xae8]
Successors: []
---
0xb41 PUSH1 0x0
0xb43 DUP1
0xb44 REVERT
---
0xb41: V728 = 0x0
0xb44: REVERT 0x0 0x0
---
Entry stack: [V11, 0x340, V198, V201, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x340, V198, V201, 0x0]

================================

Block 0xb45
[0xb45:0xc03]
---
Predecessors: [0xae8]
Successors: [0xc04, 0xc08]
---
0xb45 JUMPDEST
0xb46 DUP3
0xb47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5c AND
0xb5d PUSH4 0xa9059cbb
0xb62 PUSH1 0x0
0xb64 DUP1
0xb65 SWAP1
0xb66 SLOAD
0xb67 SWAP1
0xb68 PUSH2 0x100
0xb6b EXP
0xb6c SWAP1
0xb6d DIV
0xb6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb83 AND
0xb84 DUP5
0xb85 PUSH1 0x40
0xb87 MLOAD
0xb88 DUP4
0xb89 PUSH4 0xffffffff
0xb8e AND
0xb8f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xbad MUL
0xbae DUP2
0xbaf MSTORE
0xbb0 PUSH1 0x4
0xbb2 ADD
0xbb3 DUP1
0xbb4 DUP4
0xbb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbca AND
0xbcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe0 AND
0xbe1 DUP2
0xbe2 MSTORE
0xbe3 PUSH1 0x20
0xbe5 ADD
0xbe6 DUP3
0xbe7 DUP2
0xbe8 MSTORE
0xbe9 PUSH1 0x20
0xbeb ADD
0xbec SWAP3
0xbed POP
0xbee POP
0xbef POP
0xbf0 PUSH1 0x20
0xbf2 PUSH1 0x40
0xbf4 MLOAD
0xbf5 DUP1
0xbf6 DUP4
0xbf7 SUB
0xbf8 DUP2
0xbf9 PUSH1 0x0
0xbfb DUP8
0xbfc DUP1
0xbfd EXTCODESIZE
0xbfe ISZERO
0xbff ISZERO
0xc00 PUSH2 0xc08
0xc03 JUMPI
---
0xb45: JUMPDEST 
0xb47: V729 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5c: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0xb5d: V731 = 0xa9059cbb
0xb62: V732 = 0x0
0xb66: V733 = S[0x0]
0xb68: V734 = 0x100
0xb6b: V735 = EXP 0x100 0x0
0xb6d: V736 = DIV V733 0x1
0xb6e: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xb83: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0xb85: V739 = 0x40
0xb87: V740 = M[0x40]
0xb89: V741 = 0xffffffff
0xb8e: V742 = AND 0xffffffff 0xa9059cbb
0xb8f: V743 = 0x100000000000000000000000000000000000000000000000000000000
0xbad: V744 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xbaf: M[V740] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xbb0: V745 = 0x4
0xbb2: V746 = ADD 0x4 V740
0xbb5: V747 = 0xffffffffffffffffffffffffffffffffffffffff
0xbca: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0xbcb: V749 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe0: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V748
0xbe2: M[V746] = V750
0xbe3: V751 = 0x20
0xbe5: V752 = ADD 0x20 V746
0xbe8: M[V752] = V201
0xbe9: V753 = 0x20
0xbeb: V754 = ADD 0x20 V752
0xbf0: V755 = 0x20
0xbf2: V756 = 0x40
0xbf4: V757 = M[0x40]
0xbf7: V758 = SUB V754 V757
0xbf9: V759 = 0x0
0xbfd: V760 = EXTCODESIZE V730
0xbfe: V761 = ISZERO V760
0xbff: V762 = ISZERO V761
0xc00: V763 = 0xc08
0xc03: JUMPI 0xc08 V762
---
Entry stack: [V11, 0x340, V198, V201, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V730, 0xa9059cbb, V754, 0x20, V757, V758, V757, 0x0, V730]
Exit stack: [V11, 0x340, V198, V201, 0x0, V730, 0xa9059cbb, V754, 0x20, V757, V758, V757, 0x0, V730]

================================

Block 0xc04
[0xc04:0xc07]
---
Predecessors: [0xb45]
Successors: []
---
0xc04 PUSH1 0x0
0xc06 DUP1
0xc07 REVERT
---
0xc04: V764 = 0x0
0xc07: REVERT 0x0 0x0
---
Entry stack: [V11, 0x340, V198, V201, 0x0, V730, 0xa9059cbb, V754, 0x20, V757, V758, V757, 0x0, V730]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x340, V198, V201, 0x0, V730, 0xa9059cbb, V754, 0x20, V757, V758, V757, 0x0, V730]

================================

Block 0xc08
[0xc08:0xc10]
---
Predecessors: [0xb45]
Successors: [0xc11, 0xc15]
---
0xc08 JUMPDEST
0xc09 GAS
0xc0a CALL
0xc0b ISZERO
0xc0c ISZERO
0xc0d PUSH2 0xc15
0xc10 JUMPI
---
0xc08: JUMPDEST 
0xc09: V765 = GAS
0xc0a: V766 = CALL V765 V730 0x0 V757 V758 V757 0x20
0xc0b: V767 = ISZERO V766
0xc0c: V768 = ISZERO V767
0xc0d: V769 = 0xc15
0xc10: JUMPI 0xc15 V768
---
Entry stack: [V11, 0x340, V198, V201, 0x0, V730, 0xa9059cbb, V754, 0x20, V757, V758, V757, 0x0, V730]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x340, V198, V201, 0x0, V730, 0xa9059cbb, V754]

================================

Block 0xc11
[0xc11:0xc14]
---
Predecessors: [0xc08]
Successors: []
---
0xc11 PUSH1 0x0
0xc13 DUP1
0xc14 REVERT
---
0xc11: V770 = 0x0
0xc14: REVERT 0x0 0x0
---
Entry stack: [V11, 0x340, V198, V201, 0x0, V730, 0xa9059cbb, V754]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x340, V198, V201, 0x0, V730, 0xa9059cbb, V754]

================================

Block 0xc15
[0xc15:0xc26]
---
Predecessors: [0xc08]
Successors: [0x340]
---
0xc15 JUMPDEST
0xc16 POP
0xc17 POP
0xc18 POP
0xc19 PUSH1 0x40
0xc1b MLOAD
0xc1c DUP1
0xc1d MLOAD
0xc1e SWAP1
0xc1f POP
0xc20 SWAP1
0xc21 POP
0xc22 SWAP3
0xc23 SWAP2
0xc24 POP
0xc25 POP
0xc26 JUMP
---
0xc15: JUMPDEST 
0xc19: V771 = 0x40
0xc1b: V772 = M[0x40]
0xc1d: V773 = M[V772]
0xc26: JUMP 0x340
---
Entry stack: [V11, 0x340, V198, V201, 0x0, V730, 0xa9059cbb, V754]
Stack pops: 7
Stack additions: [V773]
Exit stack: [V11, V773]

================================

Block 0xc27
[0xc27:0xc28]
---
Predecessors: [0x35a]
Successors: [0x362]
---
0xc27 JUMPDEST
0xc28 JUMP
---
0xc27: JUMPDEST 
0xc28: JUMP 0x362
---
Entry stack: [V11, 0x362]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xc29
[0xc29:0xc36]
---
Predecessors: [0x364]
Successors: [0xc37, 0xc56]
---
0xc29 JUMPDEST
0xc2a DUP2
0xc2b SLOAD
0xc2c DUP2
0xc2d DUP4
0xc2e SSTORE
0xc2f DUP2
0xc30 DUP2
0xc31 ISZERO
0xc32 GT
0xc33 PUSH2 0xc56
0xc36 JUMPI
---
0xc29: JUMPDEST 
0xc2b: V774 = S[0x5]
0xc2e: S[0x5] = V221
0xc31: V775 = ISZERO V774
0xc32: V776 = GT V775 V221
0xc33: V777 = 0xc56
0xc36: JUMPI 0xc56 V776
---
Entry stack: [V11, {0xd8, 0x2fe}, 0x5, V219, V221, 0x378, 0x5, V221]
Stack pops: 2
Stack additions: [S1, S0, V774]
Exit stack: [V11, {0xd8, 0x2fe}, 0x5, V219, V221, 0x378, 0x5, V221, V774]

================================

Block 0xc37
[0xc37:0xc54]
---
Predecessors: [0xc29]
Successors: [0xc5b]
---
0xc37 PUSH1 0x2
0xc39 MUL
0xc3a DUP2
0xc3b PUSH1 0x2
0xc3d MUL
0xc3e DUP4
0xc3f PUSH1 0x0
0xc41 MSTORE
0xc42 PUSH1 0x20
0xc44 PUSH1 0x0
0xc46 SHA3
0xc47 SWAP2
0xc48 DUP3
0xc49 ADD
0xc4a SWAP2
0xc4b ADD
0xc4c PUSH2 0xc55
0xc4f SWAP2
0xc50 SWAP1
0xc51 PUSH2 0xc5b
0xc54 JUMP
---
0xc37: V778 = 0x2
0xc39: V779 = MUL 0x2 V774
0xc3b: V780 = 0x2
0xc3d: V781 = MUL 0x2 V221
0xc3f: V782 = 0x0
0xc41: M[0x0] = 0x5
0xc42: V783 = 0x20
0xc44: V784 = 0x0
0xc46: V785 = SHA3 0x0 0x20
0xc49: V786 = ADD V785 V779
0xc4b: V787 = ADD V785 V781
0xc4c: V788 = 0xc55
0xc51: V789 = 0xc5b
0xc54: JUMP 0xc5b
---
Entry stack: [V11, {0xd8, 0x2fe}, 0x5, V219, V221, 0x378, 0x5, V221, V774]
Stack pops: 3
Stack additions: [S2, S1, 0xc55, V786, V787]
Exit stack: [V11, {0xd8, 0x2fe}, 0x5, V219, V221, 0x378, 0x5, V221, 0xc55, V786, V787]

================================

Block 0xc55
[0xc55:0xc55]
---
Predecessors: [0xca6]
Successors: [0xc56]
---
0xc55 JUMPDEST
---
0xc55: JUMPDEST 
---
Entry stack: [V11, {0xd8, 0x2fe}, 0x5, S5, S4, 0x378, 0x5, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd8, 0x2fe}, 0x5, S5, S4, 0x378, 0x5, S1, S0]

================================

Block 0xc56
[0xc56:0xc5a]
---
Predecessors: [0xc29, 0xc55]
Successors: [0x378]
---
0xc56 JUMPDEST
0xc57 POP
0xc58 POP
0xc59 POP
0xc5a JUMP
---
0xc56: JUMPDEST 
0xc5a: JUMP 0x378
---
Entry stack: [V11, {0xd8, 0x2fe}, 0x5, S5, S4, 0x378, 0x5, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, {0xd8, 0x2fe}, 0x5, S5, S4]

================================

Block 0xc5b
[0xc5b:0xc60]
---
Predecessors: [0xc37]
Successors: [0xc61]
---
0xc5b JUMPDEST
0xc5c PUSH2 0xca6
0xc5f SWAP2
0xc60 SWAP1
---
0xc5b: JUMPDEST 
0xc5c: V790 = 0xca6
---
Entry stack: [V11, {0xd8, 0x2fe}, 0x5, S7, S6, 0x378, 0x5, S3, 0xc55, V786, V787]
Stack pops: 2
Stack additions: [0xca6, S1, S0]
Exit stack: [V11, {0xd8, 0x2fe}, 0x5, S7, S6, 0x378, 0x5, S3, 0xc55, 0xca6, V786, V787]

================================

Block 0xc61
[0xc61:0xc69]
---
Predecessors: [0xc5b, 0xc6a]
Successors: [0xc6a, 0xca2]
---
0xc61 JUMPDEST
0xc62 DUP1
0xc63 DUP3
0xc64 GT
0xc65 ISZERO
0xc66 PUSH2 0xca2
0xc69 JUMPI
---
0xc61: JUMPDEST 
0xc64: V791 = GT S1 S0
0xc65: V792 = ISZERO V791
0xc66: V793 = 0xca2
0xc69: JUMPI 0xca2 V792
---
Entry stack: [V11, {0xd8, 0x2fe}, 0x5, S8, S7, 0x378, 0x5, S4, 0xc55, 0xca6, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, {0xd8, 0x2fe}, 0x5, S8, S7, 0x378, 0x5, S4, 0xc55, 0xca6, S1, S0]

================================

Block 0xc6a
[0xc6a:0xca1]
---
Predecessors: [0xc61]
Successors: [0xc61]
---
0xc6a PUSH1 0x0
0xc6c DUP1
0xc6d DUP3
0xc6e ADD
0xc6f PUSH1 0x0
0xc71 PUSH2 0x100
0xc74 EXP
0xc75 DUP2
0xc76 SLOAD
0xc77 SWAP1
0xc78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc8d MUL
0xc8e NOT
0xc8f AND
0xc90 SWAP1
0xc91 SSTORE
0xc92 PUSH1 0x1
0xc94 DUP3
0xc95 ADD
0xc96 PUSH1 0x0
0xc98 SWAP1
0xc99 SSTORE
0xc9a POP
0xc9b PUSH1 0x2
0xc9d ADD
0xc9e PUSH2 0xc61
0xca1 JUMP
---
0xc6a: V794 = 0x0
0xc6e: V795 = ADD S0 0x0
0xc6f: V796 = 0x0
0xc71: V797 = 0x100
0xc74: V798 = EXP 0x100 0x0
0xc76: V799 = S[V795]
0xc78: V800 = 0xffffffffffffffffffffffffffffffffffffffff
0xc8d: V801 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xc8e: V802 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc8f: V803 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V799
0xc91: S[V795] = V803
0xc92: V804 = 0x1
0xc95: V805 = ADD S0 0x1
0xc96: V806 = 0x0
0xc99: S[V805] = 0x0
0xc9b: V807 = 0x2
0xc9d: V808 = ADD 0x2 S0
0xc9e: V809 = 0xc61
0xca1: JUMP 0xc61
---
Entry stack: [V11, {0xd8, 0x2fe}, 0x5, S8, S7, 0x378, 0x5, S4, 0xc55, 0xca6, S1, S0]
Stack pops: 1
Stack additions: [V808]
Exit stack: [V11, {0xd8, 0x2fe}, 0x5, S8, S7, 0x378, 0x5, S4, 0xc55, 0xca6, S1, V808]

================================

Block 0xca2
[0xca2:0xca5]
---
Predecessors: [0xc61]
Successors: [0xca6]
---
0xca2 JUMPDEST
0xca3 POP
0xca4 SWAP1
0xca5 JUMP
---
0xca2: JUMPDEST 
0xca5: JUMP 0xca6
---
Entry stack: [V11, {0xd8, 0x2fe}, 0x5, S8, S7, 0x378, 0x5, S4, 0xc55, 0xca6, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, {0xd8, 0x2fe}, 0x5, S8, S7, 0x378, 0x5, S4, 0xc55, S1]

================================

Block 0xca6
[0xca6:0xca8]
---
Predecessors: [0xca2]
Successors: [0xc55]
---
0xca6 JUMPDEST
0xca7 SWAP1
0xca8 JUMP
---
0xca6: JUMPDEST 
0xca8: JUMP 0xc55
---
Entry stack: [V11, {0xd8, 0x2fe}, 0x5, S6, S5, 0x378, 0x5, S2, 0xc55, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, {0xd8, 0x2fe}, 0x5, S6, S5, 0x378, 0x5, S2, S0]

================================

Block 0xca9
[0xca9:0xcd4]
---
Predecessors: []
Successors: []
---
0xca9 STOP
0xcaa LOG1
0xcab PUSH6 0x627a7a723058
0xcb2 SHA3
0xcb3 MISSING 0x2a
0xcb4 MISSING 0xc7
0xcb5 CALLDATACOPY
0xcb6 PUSH22 0x9bce8544069ebea905bf01b119c2a26c9335ee4dd900
0xccd MISSING 0xaf
0xcce SWAP13
0xccf GASLIMIT
0xcd0 CALLDATACOPY
0xcd1 SWAP7
0xcd2 REVERT
0xcd3 STOP
0xcd4 MISSING 0x29
---
0xca9: STOP 
0xcaa: LOG S0 S1 S2
0xcab: V810 = 0x627a7a723058
0xcb2: V811 = SHA3 0x627a7a723058 S3
0xcb3: MISSING 0x2a
0xcb4: MISSING 0xc7
0xcb5: CALLDATACOPY S0 S1 S2
0xcb6: V812 = 0x9bce8544069ebea905bf01b119c2a26c9335ee4dd900
0xccd: MISSING 0xaf
0xccf: V813 = GASLIMIT
0xcd0: CALLDATACOPY V813 S13 S1
0xcd2: REVERT S9 S3
0xcd3: STOP 
0xcd4: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V811, 0x9bce8544069ebea905bf01b119c2a26c9335ee4dd900, S4, S5, S6, S7, S8, S2, S10, S11, S12, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x1b3ed722
Entry block: 0xda
Exit block: 0xed
Body: 0xda, 0xe1, 0xe5, 0xed, 0x41e

Function 1:
Public function signature: 0x35c1d349
Entry block: 0x103
Exit block: 0x124
Body: 0x103, 0x10a, 0x10e, 0x124, 0x424, 0x432, 0x433

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x16d
Exit block: 0x180
Body: 0x16d, 0x174, 0x178, 0x180, 0x477, 0x4fc, 0x500, 0x509, 0x50d

Function 3:
Public function signature: 0x5f504a82
Entry block: 0x182
Exit block: 0x195
Body: 0x182, 0x189, 0x18d, 0x195, 0x513

Function 4:
Public function signature: 0x63bd1d4a
Entry block: 0x1d7
Exit block: 0x77b
Body: 0x1d7, 0x1de, 0x1e2, 0x1ea, 0x539, 0x563, 0x567, 0x572, 0x573, 0x634, 0x638, 0x641, 0x645, 0x652, 0x65c, 0x66b, 0x66c, 0x685, 0x694, 0x695, 0x6ac, 0x6ae, 0x6ba, 0x6ca, 0x6cb, 0x6fe, 0x6ff, 0x76c, 0x77b, 0x77c, 0x7e1, 0x7e2, 0x7ec, 0x7fd, 0x802

Function 5:
Public function signature: 0x6cff6f9d
Entry block: 0x1ec
Exit block: 0x1ff
Body: 0x1ec, 0x1f3, 0x1f7, 0x1ff, 0x807

Function 6:
Public function signature: 0x79ba5097
Entry block: 0x215
Exit block: 0x228
Body: 0x215, 0x21c, 0x220, 0x228, 0x80d, 0x865, 0x869

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x22a
Exit block: 0x23d
Body: 0x22a, 0x231, 0x235, 0x23d, 0x8cd

Function 8:
Public function signature: 0x949e8acd
Entry block: 0x27f
Exit block: 0x292
Body: 0x27f, 0x286, 0x28a, 0x292, 0x8f2, 0x975, 0x979, 0x982, 0x986

Function 9:
Public function signature: 0xa6f9dae1
Entry block: 0x2a8
Exit block: 0x2df
Body: 0x2a8, 0x2af, 0x2b3, 0x2df, 0x995, 0x9ec, 0x9f0

Function 10:
Public function signature: 0xc22fc384
Entry block: 0x2e1
Exit block: 0x2f4
Body: 0x2e1, 0x2e8, 0x2ec, 0x2f4, 0xa34, 0xa8b, 0xa8f, 0xae2, 0xae6

Function 11:
Public function signature: 0xd0e30db0
Entry block: 0x2f6
Exit block: 0x2fe
Body: 0x2f6, 0x2fe

Function 12:
Public function signature: 0xdc39d06d
Entry block: 0x300
Exit block: 0x340
Body: 0x300, 0x307, 0x30b, 0x340, 0xae8, 0xb41, 0xb45, 0xc04, 0xc08, 0xc11, 0xc15

Function 13:
Public function signature: 0xed88c68e
Entry block: 0x35a
Exit block: 0x362
Body: 0x35a, 0x362, 0xc27

Function 14:
Public fallback function
Entry block: 0xd0
Exit block: 0xd8
Body: 0xd0, 0xd8

Function 15:
Private function
Entry block: 0x364
Exit block: 0x3bf
Body: 0x364, 0x378, 0x3bf, 0xc29, 0xc37, 0xc55, 0xc56, 0xc5b, 0xc61, 0xc6a, 0xca2, 0xca6

