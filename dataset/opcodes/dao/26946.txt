Block 0x0
[0x0:0xe]
---
Predecessors: []
Successors: [0x14c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 DUP1
0x8 PUSH2 0xf
0xb PUSH2 0x14c
0xe JUMP
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x0
0x8: V3 = 0xf
0xb: V4 = 0x14c
0xe: JUMP 0x14c
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, 0x0, 0xf]
Exit stack: [0x0, 0x0, 0xf]

================================

Block 0xf
[0xf:0x21]
---
Predecessors: [0x14c]
Successors: [0x22, 0x2b]
---
0xf JUMPDEST
0x10 PUSH1 0x40
0x12 MLOAD
0x13 DUP1
0x14 SWAP2
0x15 SUB
0x16 SWAP1
0x17 PUSH1 0x0
0x19 CREATE
0x1a DUP1
0x1b ISZERO
0x1c DUP1
0x1d ISZERO
0x1e PUSH2 0x2b
0x21 JUMPI
---
0xf: JUMPDEST 
0x10: V5 = 0x40
0x12: V6 = M[0x40]
0x15: V7 = SUB V69 V6
0x17: V8 = 0x0
0x19: V9 = CREATE 0x0 V6 V7
0x1b: V10 = ISZERO V9
0x1d: V11 = ISZERO V10
0x1e: V12 = 0x2b
0x21: JUMPI 0x2b V11
---
Entry stack: [0x0, 0x0, V69]
Stack pops: 1
Stack additions: [V9, V10]
Exit stack: [0x0, 0x0, V9, V10]

================================

Block 0x22
[0x22:0x2a]
---
Predecessors: [0xf]
Successors: []
---
0x22 RETURNDATASIZE
0x23 PUSH1 0x0
0x25 DUP1
0x26 RETURNDATACOPY
0x27 RETURNDATASIZE
0x28 PUSH1 0x0
0x2a REVERT
---
0x22: V13 = RETURNDATASIZE
0x23: V14 = 0x0
0x26: RETURNDATACOPY 0x0 0x0 V13
0x27: V15 = RETURNDATASIZE
0x28: V16 = 0x0
0x2a: REVERT 0x0 V15
---
Entry stack: [0x0, 0x0, V9, V10]
Stack pops: 0
Stack additions: []
Exit stack: [0x0, 0x0, V9, V10]

================================

Block 0x2b
[0x2b:0x35]
---
Predecessors: [0xf]
Successors: [0x15c]
---
0x2b JUMPDEST
0x2c POP
0x2d SWAP2
0x2e POP
0x2f PUSH2 0x36
0x32 PUSH2 0x15c
0x35 JUMP
---
0x2b: JUMPDEST 
0x2f: V17 = 0x36
0x32: V18 = 0x15c
0x35: JUMP 0x15c
---
Entry stack: [0x0, 0x0, V9, V10]
Stack pops: 4
Stack additions: [S1, S2, 0x36]
Exit stack: [V9, 0x0, 0x36]

================================

Block 0x36
[0x36:0x48]
---
Predecessors: [0x15c]
Successors: [0x49, 0x52]
---
0x36 JUMPDEST
0x37 PUSH1 0x40
0x39 MLOAD
0x3a DUP1
0x3b SWAP2
0x3c SUB
0x3d SWAP1
0x3e PUSH1 0x0
0x40 CREATE
0x41 DUP1
0x42 ISZERO
0x43 DUP1
0x44 ISZERO
0x45 PUSH2 0x52
0x48 JUMPI
---
0x36: JUMPDEST 
0x37: V19 = 0x40
0x39: V20 = M[0x40]
0x3c: V21 = SUB V74 V20
0x3e: V22 = 0x0
0x40: V23 = CREATE 0x0 V20 V21
0x42: V24 = ISZERO V23
0x44: V25 = ISZERO V24
0x45: V26 = 0x52
0x48: JUMPI 0x52 V25
---
Entry stack: [V9, 0x0, V74]
Stack pops: 1
Stack additions: [V23, V24]
Exit stack: [V9, 0x0, V23, V24]

================================

Block 0x49
[0x49:0x51]
---
Predecessors: [0x36]
Successors: []
---
0x49 RETURNDATASIZE
0x4a PUSH1 0x0
0x4c DUP1
0x4d RETURNDATACOPY
0x4e RETURNDATASIZE
0x4f PUSH1 0x0
0x51 REVERT
---
0x49: V27 = RETURNDATASIZE
0x4a: V28 = 0x0
0x4d: RETURNDATACOPY 0x0 0x0 V27
0x4e: V29 = RETURNDATASIZE
0x4f: V30 = 0x0
0x51: REVERT 0x0 V29
---
Entry stack: [V9, 0x0, V23, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x0, V23, V24]

================================

Block 0x52
[0x52:0x14b]
---
Predecessors: [0x36]
Successors: []
---
0x52 JUMPDEST
0x53 POP
0x54 SWAP1
0x55 POP
0x56 DUP2
0x57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c AND
0x6d PUSH5 0xe8d4a51000
0x73 PUSH3 0x186a0
0x77 SWAP1
0x78 PUSH1 0x40
0x7a MLOAD
0x7b DUP1
0x7c DUP1
0x7d PUSH32 0x7265286164647265737329000000000000000000000000000000000000000000
0x9e DUP2
0x9f MSTORE
0xa0 POP
0xa1 PUSH1 0xb
0xa3 ADD
0xa4 SWAP1
0xa5 POP
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 DUP1
0xaa SWAP2
0xab SUB
0xac SWAP1
0xad SHA3
0xae PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xcc SWAP1
0xcd DIV
0xce SWAP2
0xcf SWAP1
0xd0 DUP5
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP5
0xd5 PUSH4 0xffffffff
0xda AND
0xdb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf9 MUL
0xfa DUP2
0xfb MSTORE
0xfc PUSH1 0x4
0xfe ADD
0xff DUP1
0x100 DUP3
0x101 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116 AND
0x117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c AND
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x20
0x131 ADD
0x132 SWAP2
0x133 POP
0x134 POP
0x135 PUSH1 0x0
0x137 PUSH1 0x40
0x139 MLOAD
0x13a DUP1
0x13b DUP4
0x13c SUB
0x13d DUP2
0x13e DUP6
0x13f DUP10
0x140 DUP9
0x141 CALL
0x142 SWAP5
0x143 POP
0x144 POP
0x145 POP
0x146 POP
0x147 POP
0x148 POP
0x149 POP
0x14a POP
0x14b STOP
---
0x52: JUMPDEST 
0x57: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V9
0x6d: V33 = 0xe8d4a51000
0x73: V34 = 0x186a0
0x78: V35 = 0x40
0x7a: V36 = M[0x40]
0x7d: V37 = 0x7265286164647265737329000000000000000000000000000000000000000000
0x9f: M[V36] = 0x7265286164647265737329000000000000000000000000000000000000000000
0xa1: V38 = 0xb
0xa3: V39 = ADD 0xb V36
0xa6: V40 = 0x40
0xa8: V41 = M[0x40]
0xab: V42 = SUB V39 V41
0xad: V43 = SHA3 V41 V42
0xae: V44 = 0x100000000000000000000000000000000000000000000000000000000
0xcd: V45 = DIV V43 0x100000000000000000000000000000000000000000000000000000000
0xd1: V46 = 0x40
0xd3: V47 = M[0x40]
0xd5: V48 = 0xffffffff
0xda: V49 = AND 0xffffffff V45
0xdb: V50 = 0x100000000000000000000000000000000000000000000000000000000
0xf9: V51 = MUL 0x100000000000000000000000000000000000000000000000000000000 V49
0xfb: M[V47] = V51
0xfc: V52 = 0x4
0xfe: V53 = ADD 0x4 V47
0x101: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x116: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x117: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x12e: M[V53] = V57
0x12f: V58 = 0x20
0x131: V59 = ADD 0x20 V53
0x135: V60 = 0x0
0x137: V61 = 0x40
0x139: V62 = M[0x40]
0x13c: V63 = SUB V59 V62
0x141: V64 = CALL 0x186a0 V32 0xe8d4a51000 V62 V63 V62 0x0
0x14b: STOP 
---
Entry stack: [V9, 0x0, V23, V24]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x14c
[0x14c:0x15b]
---
Predecessors: [0x0]
Successors: [0xf]
---
0x14c JUMPDEST
0x14d PUSH1 0x40
0x14f MLOAD
0x150 PUSH2 0x177
0x153 DUP1
0x154 PUSH2 0x16d
0x157 DUP4
0x158 CODECOPY
0x159 ADD
0x15a SWAP1
0x15b JUMP
---
0x14c: JUMPDEST 
0x14d: V65 = 0x40
0x14f: V66 = M[0x40]
0x150: V67 = 0x177
0x154: V68 = 0x16d
0x158: CODECOPY V66 0x16d 0x177
0x159: V69 = ADD 0x177 V66
0x15b: JUMP 0xf
---
Entry stack: [0x0, 0x0, 0xf]
Stack pops: 1
Stack additions: [V69]
Exit stack: [0x0, 0x0, V69]

================================

Block 0x15c
[0x15c:0x16b]
---
Predecessors: [0x2b]
Successors: [0x36]
---
0x15c JUMPDEST
0x15d PUSH1 0x40
0x15f MLOAD
0x160 PUSH2 0x159
0x163 DUP1
0x164 PUSH2 0x2e4
0x167 DUP4
0x168 CODECOPY
0x169 ADD
0x16a SWAP1
0x16b JUMP
---
0x15c: JUMPDEST 
0x15d: V70 = 0x40
0x15f: V71 = M[0x40]
0x160: V72 = 0x159
0x164: V73 = 0x2e4
0x168: CODECOPY V71 0x2e4 0x159
0x169: V74 = ADD 0x159 V71
0x16b: JUMP 0x36
---
Entry stack: [V9, 0x0, 0x36]
Stack pops: 1
Stack additions: [V74]
Exit stack: [V9, 0x0, V74]

================================

Block 0x16c
[0x16c:0x178]
---
Predecessors: []
Successors: [0x179]
---
0x16c STOP
0x16d PUSH1 0x80
0x16f PUSH1 0x40
0x171 MSTORE
0x172 CALLVALUE
0x173 DUP1
0x174 ISZERO
0x175 PUSH2 0x10
0x178 JUMPI
---
0x16c: STOP 
0x16d: V75 = 0x80
0x16f: V76 = 0x40
0x171: M[0x40] = 0x80
0x172: V77 = CALLVALUE
0x174: V78 = ISZERO V77
0x175: V79 = 0x10
0x178: THROWI V78
---
Entry stack: []
Stack pops: 0
Stack additions: [V77]
Exit stack: []

================================

Block 0x179
[0x179:0x199]
---
Predecessors: [0x16c]
Successors: [0x19a]
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
0x17d JUMPDEST
0x17e POP
0x17f PUSH2 0x157
0x182 DUP1
0x183 PUSH2 0x20
0x186 PUSH1 0x0
0x188 CODECOPY
0x189 PUSH1 0x0
0x18b RETURN
0x18c STOP
0x18d PUSH1 0x80
0x18f PUSH1 0x40
0x191 MSTORE
0x192 PUSH1 0x4
0x194 CALLDATASIZE
0x195 LT
0x196 PUSH2 0x41
0x199 JUMPI
---
0x179: V80 = 0x0
0x17c: REVERT 0x0 0x0
0x17d: JUMPDEST 
0x17f: V81 = 0x157
0x183: V82 = 0x20
0x186: V83 = 0x0
0x188: CODECOPY 0x0 0x20 0x157
0x189: V84 = 0x0
0x18b: RETURN 0x0 0x157
0x18c: STOP 
0x18d: V85 = 0x80
0x18f: V86 = 0x40
0x191: M[0x40] = 0x80
0x192: V87 = 0x4
0x194: V88 = CALLDATASIZE
0x195: V89 = LT V88 0x4
0x196: V90 = 0x41
0x199: THROWI V89
---
Entry stack: [V77]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x19a
[0x19a:0x1cd]
---
Predecessors: [0x179]
Successors: [0x1ce]
---
0x19a PUSH1 0x0
0x19c CALLDATALOAD
0x19d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1bb SWAP1
0x1bc DIV
0x1bd PUSH4 0xffffffff
0x1c2 AND
0x1c3 DUP1
0x1c4 PUSH4 0xddb49652
0x1c9 EQ
0x1ca PUSH2 0x46
0x1cd JUMPI
---
0x19a: V91 = 0x0
0x19c: V92 = CALLDATALOAD 0x0
0x19d: V93 = 0x100000000000000000000000000000000000000000000000000000000
0x1bc: V94 = DIV V92 0x100000000000000000000000000000000000000000000000000000000
0x1bd: V95 = 0xffffffff
0x1c2: V96 = AND 0xffffffff V94
0x1c4: V97 = 0xddb49652
0x1c9: V98 = EQ 0xddb49652 V96
0x1ca: V99 = 0x46
0x1cd: THROWI V98
---
Entry stack: []
Stack pops: 0
Stack additions: [V96]
Exit stack: [V96]

================================

Block 0x1ce
[0x1ce:0x310]
---
Predecessors: [0x19a]
Successors: [0x311]
---
0x1ce JUMPDEST
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
0x1d3 JUMPDEST
0x1d4 PUSH2 0x7a
0x1d7 PUSH1 0x4
0x1d9 DUP1
0x1da CALLDATASIZE
0x1db SUB
0x1dc DUP2
0x1dd ADD
0x1de SWAP1
0x1df DUP1
0x1e0 DUP1
0x1e1 CALLDATALOAD
0x1e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f7 AND
0x1f8 SWAP1
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc SWAP1
0x1fd SWAP3
0x1fe SWAP2
0x1ff SWAP1
0x200 POP
0x201 POP
0x202 POP
0x203 PUSH2 0x7c
0x206 JUMP
0x207 JUMPDEST
0x208 STOP
0x209 JUMPDEST
0x20a DUP1
0x20b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x220 AND
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 DUP1
0x226 PUSH32 0x7265282900000000000000000000000000000000000000000000000000000000
0x247 DUP2
0x248 MSTORE
0x249 POP
0x24a PUSH1 0x4
0x24c ADD
0x24d SWAP1
0x24e POP
0x24f PUSH1 0x40
0x251 MLOAD
0x252 DUP1
0x253 SWAP2
0x254 SUB
0x255 SWAP1
0x256 SHA3
0x257 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x275 SWAP1
0x276 DIV
0x277 PUSH1 0x40
0x279 MLOAD
0x27a DUP2
0x27b PUSH4 0xffffffff
0x280 AND
0x281 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x29f MUL
0x2a0 DUP2
0x2a1 MSTORE
0x2a2 PUSH1 0x4
0x2a4 ADD
0x2a5 PUSH1 0x0
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa DUP1
0x2ab DUP4
0x2ac SUB
0x2ad DUP2
0x2ae DUP7
0x2af GAS
0x2b0 DELEGATECALL
0x2b1 SWAP3
0x2b2 POP
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 JUMP
0x2b8 STOP
0x2b9 LOG1
0x2ba PUSH6 0x627a7a723058
0x2c1 SHA3
0x2c2 MISSING 0x2b
0x2c3 SWAP4
0x2c4 LOG2
0x2c5 SHL
0x2c6 MISSING 0x2f
0x2c7 MISSING 0xa9
0x2c8 COINBASE
0x2c9 EXTCODEHASH
0x2ca SWAP16
0x2cb OR
0x2cc DUP11
0x2cd MISSING 0x1f
0x2ce BALANCE
0x2cf MISSING 0xe7
0x2d0 SGT
0x2d1 MISSING 0xca
0x2d2 MISSING 0xe0
0x2d3 MISSING 0x5d
0x2d4 MISSING 0xd2
0x2d5 PUSH1 0xb8
0x2d7 SWAP10
0x2d8 BALANCE
0x2d9 SELFDESTRUCT
0x2da MISSING 0xd7
0x2db MISSING 0xa7
0x2dc MISSING 0xc4
0x2dd SWAP9
0x2de MISSING 0xb3
0x2df DUP3
0x2e0 PUSH18 0xf90029608060405234801561001057600080
0x2f3 REVERT
0x2f4 JUMPDEST
0x2f5 POP
0x2f6 PUSH2 0x139
0x2f9 DUP1
0x2fa PUSH2 0x20
0x2fd PUSH1 0x0
0x2ff CODECOPY
0x300 PUSH1 0x0
0x302 RETURN
0x303 STOP
0x304 PUSH1 0x80
0x306 PUSH1 0x40
0x308 MSTORE
0x309 PUSH1 0x4
0x30b CALLDATASIZE
0x30c LT
0x30d PUSH2 0x41
0x310 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V100 = 0x0
0x1d2: REVERT 0x0 0x0
0x1d3: JUMPDEST 
0x1d4: V101 = 0x7a
0x1d7: V102 = 0x4
0x1da: V103 = CALLDATASIZE
0x1db: V104 = SUB V103 0x4
0x1dd: V105 = ADD 0x4 V104
0x1e1: V106 = CALLDATALOAD 0x4
0x1e2: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f7: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1f9: V109 = 0x20
0x1fb: V110 = ADD 0x20 0x4
0x203: V111 = 0x7c
0x206: THROW 
0x207: JUMPDEST 
0x208: STOP 
0x209: JUMPDEST 
0x20b: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x220: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x221: V114 = 0x40
0x223: V115 = M[0x40]
0x226: V116 = 0x7265282900000000000000000000000000000000000000000000000000000000
0x248: M[V115] = 0x7265282900000000000000000000000000000000000000000000000000000000
0x24a: V117 = 0x4
0x24c: V118 = ADD 0x4 V115
0x24f: V119 = 0x40
0x251: V120 = M[0x40]
0x254: V121 = SUB V118 V120
0x256: V122 = SHA3 V120 V121
0x257: V123 = 0x100000000000000000000000000000000000000000000000000000000
0x276: V124 = DIV V122 0x100000000000000000000000000000000000000000000000000000000
0x277: V125 = 0x40
0x279: V126 = M[0x40]
0x27b: V127 = 0xffffffff
0x280: V128 = AND 0xffffffff V124
0x281: V129 = 0x100000000000000000000000000000000000000000000000000000000
0x29f: V130 = MUL 0x100000000000000000000000000000000000000000000000000000000 V128
0x2a1: M[V126] = V130
0x2a2: V131 = 0x4
0x2a4: V132 = ADD 0x4 V126
0x2a5: V133 = 0x0
0x2a7: V134 = 0x40
0x2a9: V135 = M[0x40]
0x2ac: V136 = SUB V132 V135
0x2af: V137 = GAS
0x2b0: V138 = DELEGATECALL V137 V113 V135 V136 V135 0x0
0x2b7: JUMP S1
0x2b8: STOP 
0x2b9: LOG S0 S1 S2
0x2ba: V139 = 0x627a7a723058
0x2c1: V140 = SHA3 0x627a7a723058 S3
0x2c2: MISSING 0x2b
0x2c4: LOG S4 S1 S2 S3
0x2c5: V141 = SHL S0 S5
0x2c6: MISSING 0x2f
0x2c7: MISSING 0xa9
0x2c8: V142 = COINBASE
0x2c9: V143 = EXTCODEHASH V142
0x2cb: V144 = OR S15 S0
0x2cd: MISSING 0x1f
0x2ce: V145 = BALANCE S0
0x2cf: MISSING 0xe7
0x2d0: V146 = SGT S0 S1
0x2d1: MISSING 0xca
0x2d2: MISSING 0xe0
0x2d3: MISSING 0x5d
0x2d4: MISSING 0xd2
0x2d5: V147 = 0xb8
0x2d8: V148 = BALANCE S9
0x2d9: SELFDESTRUCT V148
0x2da: MISSING 0xd7
0x2db: MISSING 0xa7
0x2dc: MISSING 0xc4
0x2de: MISSING 0xb3
0x2e0: V149 = 0xf90029608060405234801561001057600080
0x2f3: REVERT 0xf90029608060405234801561001057600080 S2
0x2f4: JUMPDEST 
0x2f6: V150 = 0x139
0x2fa: V151 = 0x20
0x2fd: V152 = 0x0
0x2ff: CODECOPY 0x0 0x20 0x139
0x300: V153 = 0x0
0x302: RETURN 0x0 0x139
0x303: STOP 
0x304: V154 = 0x80
0x306: V155 = 0x40
0x308: M[0x40] = 0x80
0x309: V156 = 0x4
0x30b: V157 = CALLDATASIZE
0x30c: V158 = LT V157 0x4
0x30d: V159 = 0x41
0x310: THROWI V158
---
Entry stack: [V96]
Stack pops: 0
Stack additions: [V108, 0x7a, V140, V141, S10, V144, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V143, V145, V146, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0xb8, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, S0, S1, S2]
Exit stack: []

================================

Block 0x311
[0x311:0x344]
---
Predecessors: [0x1ce]
Successors: [0x345]
---
0x311 PUSH1 0x0
0x313 CALLDATALOAD
0x314 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x332 SWAP1
0x333 DIV
0x334 PUSH4 0xffffffff
0x339 AND
0x33a DUP1
0x33b PUSH4 0x15d55b28
0x340 EQ
0x341 PUSH2 0x46
0x344 JUMPI
---
0x311: V160 = 0x0
0x313: V161 = CALLDATALOAD 0x0
0x314: V162 = 0x100000000000000000000000000000000000000000000000000000000
0x333: V163 = DIV V161 0x100000000000000000000000000000000000000000000000000000000
0x334: V164 = 0xffffffff
0x339: V165 = AND 0xffffffff V163
0x33b: V166 = 0x15d55b28
0x340: V167 = EQ 0x15d55b28 V165
0x341: V168 = 0x46
0x344: THROWI V167
---
Entry stack: []
Stack pops: 0
Stack additions: [V165]
Exit stack: [V165]

================================

Block 0x345
[0x345:0x370]
---
Predecessors: [0x311]
Successors: [0x371]
---
0x345 JUMPDEST
0x346 PUSH1 0x0
0x348 DUP1
0x349 REVERT
0x34a JUMPDEST
0x34b PUSH2 0x4e
0x34e PUSH2 0x50
0x351 JUMP
0x352 JUMPDEST
0x353 STOP
0x354 JUMPDEST
0x355 PUSH1 0x0
0x357 CALLVALUE
0x358 PUSH2 0x5b
0x35b PUSH2 0x7e
0x35e JUMP
0x35f JUMPDEST
0x360 PUSH1 0x40
0x362 MLOAD
0x363 DUP1
0x364 SWAP2
0x365 SUB
0x366 SWAP1
0x367 DUP3
0x368 CREATE
0x369 DUP1
0x36a ISZERO
0x36b ISZERO
0x36c ISZERO
0x36d PUSH2 0x76
0x370 JUMPI
---
0x345: JUMPDEST 
0x346: V169 = 0x0
0x349: REVERT 0x0 0x0
0x34a: JUMPDEST 
0x34b: V170 = 0x4e
0x34e: V171 = 0x50
0x351: THROW 
0x352: JUMPDEST 
0x353: STOP 
0x354: JUMPDEST 
0x355: V172 = 0x0
0x357: V173 = CALLVALUE
0x358: V174 = 0x5b
0x35b: V175 = 0x7e
0x35e: THROW 
0x35f: JUMPDEST 
0x360: V176 = 0x40
0x362: V177 = M[0x40]
0x365: V178 = SUB S0 V177
0x368: V179 = CREATE S1 V177 V178
0x36a: V180 = ISZERO V179
0x36b: V181 = ISZERO V180
0x36c: V182 = ISZERO V181
0x36d: V183 = 0x76
0x370: THROWI V182
---
Entry stack: [V165]
Stack pops: 0
Stack additions: [0x4e, 0x5b, V173, 0x0, V179, S1]
Exit stack: []

================================

Block 0x371
[0x371:0x401]
---
Predecessors: [0x345]
Successors: [0x402]
---
0x371 RETURNDATASIZE
0x372 PUSH1 0x0
0x374 DUP1
0x375 RETURNDATACOPY
0x376 RETURNDATASIZE
0x377 PUSH1 0x0
0x379 REVERT
0x37a JUMPDEST
0x37b POP
0x37c SWAP1
0x37d POP
0x37e SWAP1
0x37f POP
0x380 POP
0x381 JUMP
0x382 JUMPDEST
0x383 PUSH1 0x40
0x385 MLOAD
0x386 PUSH1 0x80
0x388 DUP1
0x389 PUSH2 0x8e
0x38c DUP4
0x38d CODECOPY
0x38e ADD
0x38f SWAP1
0x390 JUMP
0x391 STOP
0x392 PUSH1 0x80
0x394 PUSH1 0x40
0x396 MSTORE
0x397 PUSH1 0x0
0x399 PUSH20 0x3115a65bd094867f00e75b6173e93dcd921bdda5
0x3ae SWAP1
0x3af POP
0x3b0 DUP1
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 AND
0x3c7 PUSH2 0x8fc
0x3ca ADDRESS
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 BALANCE
0x3e2 SWAP1
0x3e3 DUP2
0x3e4 ISZERO
0x3e5 MUL
0x3e6 SWAP1
0x3e7 PUSH1 0x40
0x3e9 MLOAD
0x3ea PUSH1 0x0
0x3ec PUSH1 0x40
0x3ee MLOAD
0x3ef DUP1
0x3f0 DUP4
0x3f1 SUB
0x3f2 DUP2
0x3f3 DUP6
0x3f4 DUP9
0x3f5 DUP9
0x3f6 CALL
0x3f7 SWAP4
0x3f8 POP
0x3f9 POP
0x3fa POP
0x3fb POP
0x3fc ISZERO
0x3fd DUP1
0x3fe ISZERO
0x3ff PUSH1 0x79
0x401 JUMPI
---
0x371: V184 = RETURNDATASIZE
0x372: V185 = 0x0
0x375: RETURNDATACOPY 0x0 0x0 V184
0x376: V186 = RETURNDATASIZE
0x377: V187 = 0x0
0x379: REVERT 0x0 V186
0x37a: JUMPDEST 
0x381: JUMP S4
0x382: JUMPDEST 
0x383: V188 = 0x40
0x385: V189 = M[0x40]
0x386: V190 = 0x80
0x389: V191 = 0x8e
0x38d: CODECOPY V189 0x8e 0x80
0x38e: V192 = ADD 0x80 V189
0x390: JUMP S0
0x391: STOP 
0x392: V193 = 0x80
0x394: V194 = 0x40
0x396: M[0x40] = 0x80
0x397: V195 = 0x0
0x399: V196 = 0x3115a65bd094867f00e75b6173e93dcd921bdda5
0x3b1: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x3115a65bd094867f00e75b6173e93dcd921bdda5
0x3c7: V199 = 0x8fc
0x3ca: V200 = ADDRESS
0x3cb: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x3e1: V203 = BALANCE V202
0x3e4: V204 = ISZERO V203
0x3e5: V205 = MUL V204 0x8fc
0x3e7: V206 = 0x40
0x3e9: V207 = M[0x40]
0x3ea: V208 = 0x0
0x3ec: V209 = 0x40
0x3ee: V210 = M[0x40]
0x3f1: V211 = SUB V207 V210
0x3f6: V212 = CALL V205 0x3115a65bd094867f00e75b6173e93dcd921bdda5 V203 V210 V211 V210 0x0
0x3fc: V213 = ISZERO V212
0x3fe: V214 = ISZERO V213
0x3ff: V215 = 0x79
0x401: THROWI V214
---
Entry stack: [S1, V179]
Stack pops: 0
Stack additions: [V192, V213, 0x3115a65bd094867f00e75b6173e93dcd921bdda5]
Exit stack: []

================================

Block 0x402
[0x402:0x467]
---
Predecessors: [0x371]
Successors: []
---
0x402 RETURNDATASIZE
0x403 PUSH1 0x0
0x405 DUP1
0x406 RETURNDATACOPY
0x407 RETURNDATASIZE
0x408 PUSH1 0x0
0x40a REVERT
0x40b JUMPDEST
0x40c POP
0x40d PUSH1 0x0
0x40f DUP1
0x410 REVERT
0x411 STOP
0x412 LOG1
0x413 PUSH6 0x627a7a723058
0x41a SHA3
0x41b DUP10
0x41c SHR
0x41d EXP
0x41e MISSING 0xb3
0x41f DUP10
0x420 MISSING 0x5c
0x421 MISSING 0xe1
0x422 DUP14
0x423 PUSH24 0x673efe6f437fe1983f4840cdbc33fd82084b8e614cd83b00
0x43c MISSING 0x29
0x43d LOG1
0x43e PUSH6 0x627a7a723058
0x445 SHA3
0x446 MISSING 0xe6
0x447 MISSING 0xc4
0x448 CALLDATACOPY
0x449 INVALID
0x44a ORIGIN
0x44b MISSING 0x2f
0x44c OR
0x44d CALLDATASIZE
0x44e MISSING 0xba
0x44f MISSING 0xc4
0x450 DUP10
0x451 EXP
0x452 MISSING 0xda
0x453 MISSING 0xcd
0x454 MISSING 0x4a
0x455 CALLVALUE
0x456 MSIZE
0x457 PUSH14 0xb17cd0ca04317c64440ce48920bc
0x466 STOP
0x467 MISSING 0x29
---
0x402: V216 = RETURNDATASIZE
0x403: V217 = 0x0
0x406: RETURNDATACOPY 0x0 0x0 V216
0x407: V218 = RETURNDATASIZE
0x408: V219 = 0x0
0x40a: REVERT 0x0 V218
0x40b: JUMPDEST 
0x40d: V220 = 0x0
0x410: REVERT 0x0 0x0
0x411: STOP 
0x412: LOG S0 S1 S2
0x413: V221 = 0x627a7a723058
0x41a: V222 = SHA3 0x627a7a723058 S3
0x41c: V223 = SHR S12 V222
0x41d: V224 = EXP V223 S4
0x41e: MISSING 0xb3
0x420: MISSING 0x5c
0x421: MISSING 0xe1
0x423: V225 = 0x673efe6f437fe1983f4840cdbc33fd82084b8e614cd83b00
0x43c: MISSING 0x29
0x43d: LOG S0 S1 S2
0x43e: V226 = 0x627a7a723058
0x445: V227 = SHA3 0x627a7a723058 S3
0x446: MISSING 0xe6
0x447: MISSING 0xc4
0x448: CALLDATACOPY S0 S1 S2
0x449: INVALID 
0x44a: V228 = ORIGIN
0x44b: MISSING 0x2f
0x44c: V229 = OR S0 S1
0x44d: V230 = CALLDATASIZE
0x44e: MISSING 0xba
0x44f: MISSING 0xc4
0x451: V231 = EXP S9 S0
0x452: MISSING 0xda
0x453: MISSING 0xcd
0x454: MISSING 0x4a
0x455: V232 = CALLVALUE
0x456: V233 = MSIZE
0x457: V234 = 0xb17cd0ca04317c64440ce48920bc
0x466: STOP 
0x467: MISSING 0x29
---
Entry stack: [0x3115a65bd094867f00e75b6173e93dcd921bdda5, V213]
Stack pops: 0
Stack additions: [V224, S5, S6, S7, S8, S9, S10, S11, S12, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, 0x673efe6f437fe1983f4840cdbc33fd82084b8e614cd83b00, S13, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V227, V228, V230, V229, V231, S1, S2, S3, S4, S5, S6, S7, S8, S9, 0xb17cd0ca04317c64440ce48920bc, V233, V232]
Exit stack: []

================================

Function 0:
Public function signature: 0xddb49652
Entry block: 0x1ce
Exit block: 0x402
Body: 0x1ce, 0x311, 0x345, 0x371, 0x402

Function 1:
Public fallback function
Entry block: 0x1ce
Exit block: 0x1ce
Body: 0x1ce

