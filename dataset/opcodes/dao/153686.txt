Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x9e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x9e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x9e
0xa: JUMPI 0x9e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xc3]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xf6e40c3
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xc3
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xf6e40c3
0x20: V14 = EQ V12 0xf6e40c3
0x21: V15 = 0xc3
0x24: JUMPI 0xc3 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xdb]
---
0x25 DUP1
0x26 PUSH4 0x1c0463de
0x2b EQ
0x2c PUSH2 0xdb
0x2f JUMPI
---
0x26: V16 = 0x1c0463de
0x2b: V17 = EQ 0x1c0463de V12
0x2c: V18 = 0xdb
0x2f: JUMPI 0xdb V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xff]
---
0x30 DUP1
0x31 PUSH4 0x1e820325
0x36 EQ
0x37 PUSH2 0xff
0x3a JUMPI
---
0x31: V19 = 0x1e820325
0x36: V20 = EQ 0x1e820325 V12
0x37: V21 = 0xff
0x3a: JUMPI 0xff V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x12b]
---
0x3b DUP1
0x3c PUSH4 0x3ccfd60b
0x41 EQ
0x42 PUSH2 0x12b
0x45 JUMPI
---
0x3c: V22 = 0x3ccfd60b
0x41: V23 = EQ 0x3ccfd60b V12
0x42: V24 = 0x12b
0x45: JUMPI 0x12b V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x13d]
---
0x46 DUP1
0x47 PUSH4 0x5485868a
0x4c EQ
0x4d PUSH2 0x13d
0x50 JUMPI
---
0x47: V25 = 0x5485868a
0x4c: V26 = EQ 0x5485868a V12
0x4d: V27 = 0x13d
0x50: JUMPI 0x13d V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x169]
---
0x51 DUP1
0x52 PUSH4 0x8a19c8bc
0x57 EQ
0x58 PUSH2 0x169
0x5b JUMPI
---
0x52: V28 = 0x8a19c8bc
0x57: V29 = EQ 0x8a19c8bc V12
0x58: V30 = 0x169
0x5b: JUMPI 0x169 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x195]
---
0x5c DUP1
0x5d PUSH4 0xb3ca07d1
0x62 EQ
0x63 PUSH2 0x195
0x66 JUMPI
---
0x5d: V31 = 0xb3ca07d1
0x62: V32 = EQ 0xb3ca07d1 V12
0x63: V33 = 0x195
0x66: JUMPI 0x195 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1b0]
---
0x67 DUP1
0x68 PUSH4 0xd0e30db0
0x6d EQ
0x6e PUSH2 0x1b0
0x71 JUMPI
---
0x68: V34 = 0xd0e30db0
0x6d: V35 = EQ 0xd0e30db0 V12
0x6e: V36 = 0x1b0
0x71: JUMPI 0x1b0 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1ba]
---
0x72 DUP1
0x73 PUSH4 0xe66f53b7
0x78 EQ
0x79 PUSH2 0x1ba
0x7c JUMPI
---
0x73: V37 = 0xe66f53b7
0x78: V38 = EQ 0xe66f53b7 V12
0x79: V39 = 0x1ba
0x7c: JUMPI 0x1ba V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x1e6]
---
0x7d DUP1
0x7e PUSH4 0xe90956cf
0x83 EQ
0x84 PUSH2 0x1e6
0x87 JUMPI
---
0x7e: V40 = 0xe90956cf
0x83: V41 = EQ 0xe90956cf V12
0x84: V42 = 0x1e6
0x87: JUMPI 0x1e6 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x204]
---
0x88 DUP1
0x89 PUSH4 0xf2fde38b
0x8e EQ
0x8f PUSH2 0x204
0x92 JUMPI
---
0x89: V43 = 0xf2fde38b
0x8e: V44 = EQ 0xf2fde38b V12
0x8f: V45 = 0x204
0x92: JUMPI 0x204 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x222]
---
0x93 DUP1
0x94 PUSH4 0xfc0e74d1
0x99 EQ
0x9a PUSH2 0x222
0x9d JUMPI
---
0x94: V46 = 0xfc0e74d1
0x99: V47 = EQ 0xfc0e74d1 V12
0x9a: V48 = 0x222
0x9d: JUMPI 0x222 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x0, 0x93]
Successors: [0xa2]
---
0x9e JUMPDEST
0x9f PUSH2 0xc1
---
0x9e: JUMPDEST 
0x9f: V49 = 0xc1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0xa2
[0xa2:0xb8]
---
Predecessors: [0x9e]
Successors: [0xb9, 0xbd]
---
0xa2 JUMPDEST
0xa3 PUSH1 0x4
0xa5 SLOAD
0xa6 CALLER
0xa7 PUSH1 0x1
0xa9 PUSH1 0xa0
0xab PUSH1 0x2
0xad EXP
0xae SUB
0xaf SWAP1
0xb0 DUP2
0xb1 AND
0xb2 SWAP2
0xb3 AND
0xb4 EQ
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xa2: JUMPDEST 
0xa3: V50 = 0x4
0xa5: V51 = S[0x4]
0xa6: V52 = CALLER
0xa7: V53 = 0x1
0xa9: V54 = 0xa0
0xab: V55 = 0x2
0xad: V56 = EXP 0x2 0xa0
0xae: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xb3: V59 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0xb4: V60 = EQ V59 V58
0xb5: V61 = 0xbd
0xb8: JUMPI 0xbd V60
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xa2]
Successors: []
---
0xb9 PUSH2 0x0
0xbc JUMP
---
0xb9: V62 = 0x0
0xbc: THROW 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0xbd
[0xbd:0xbd]
---
Predecessors: [0xa2, 0x71d, 0x937]
Successors: [0xbe]
---
0xbd JUMPDEST
---
0xbd: JUMPDEST 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0xbe
[0xbe:0xbe]
---
Predecessors: [0xbd]
Successors: [0xbf]
---
0xbe JUMPDEST
---
0xbe: JUMPDEST 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0xbf
[0xbf:0xc0]
---
Predecessors: [0xbe]
Successors: [0xc1]
---
0xbf JUMPDEST
0xc0 JUMP
---
0xbf: JUMPDEST 
0xc0: JUMP 0xc1
---
Entry stack: [V12, 0xc1]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc1
[0xc1:0xc2]
---
Predecessors: [0xbf, 0x3a5, 0x918, 0x9b0, 0x9eb]
Successors: []
---
0xc1 JUMPDEST
0xc2 STOP
---
0xc1: JUMPDEST 
0xc2: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3
[0xc3:0xc9]
---
Predecessors: [0xb]
Successors: [0xca, 0xcb]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 ISZERO
0xc6 PUSH2 0xcb
0xc9 JUMPI
---
0xc3: JUMPDEST 
0xc4: V63 = CALLVALUE
0xc5: V64 = ISZERO V63
0xc6: V65 = 0xcb
0xc9: JUMPI 0xcb V64
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xca
[0xca:0xca]
---
Predecessors: [0xc3]
Successors: []
---
0xca INVALID
---
0xca: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb
[0xcb:0xd8]
---
Predecessors: [0xc3]
Successors: [0x234]
---
0xcb JUMPDEST
0xcc PUSH2 0xc1
0xcf PUSH1 0x4
0xd1 CALLDATALOAD
0xd2 PUSH1 0x24
0xd4 CALLDATALOAD
0xd5 PUSH2 0x234
0xd8 JUMP
---
0xcb: JUMPDEST 
0xcc: V66 = 0xc1
0xcf: V67 = 0x4
0xd1: V68 = CALLDATALOAD 0x4
0xd2: V69 = 0x24
0xd4: V70 = CALLDATALOAD 0x24
0xd5: V71 = 0x234
0xd8: JUMP 0x234
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1, V68, V70]
Exit stack: [V12, 0xc1, V68, V70]

================================

Block 0xd9
[0xd9:0xda]
---
Predecessors: []
Successors: []
---
0xd9 JUMPDEST
0xda STOP
---
0xd9: JUMPDEST 
0xda: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdb
[0xdb:0xe1]
---
Predecessors: [0x25]
Successors: [0xe2, 0xe3]
---
0xdb JUMPDEST
0xdc CALLVALUE
0xdd ISZERO
0xde PUSH2 0xe3
0xe1 JUMPI
---
0xdb: JUMPDEST 
0xdc: V72 = CALLVALUE
0xdd: V73 = ISZERO V72
0xde: V74 = 0xe3
0xe1: JUMPI 0xe3 V73
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe2
[0xe2:0xe2]
---
Predecessors: [0xdb]
Successors: []
---
0xe2 INVALID
---
0xe2: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe3
[0xe3:0xea]
---
Predecessors: [0xdb]
Successors: [0x3a9]
---
0xe3 JUMPDEST
0xe4 PUSH2 0xeb
0xe7 PUSH2 0x3a9
0xea JUMP
---
0xe3: JUMPDEST 
0xe4: V75 = 0xeb
0xe7: V76 = 0x3a9
0xea: JUMP 0x3a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xeb]
Exit stack: [V12, 0xeb]

================================

Block 0xeb
[0xeb:0xfe]
---
Predecessors: [0x3d8]
Successors: []
---
0xeb JUMPDEST
0xec PUSH1 0x40
0xee DUP1
0xef MLOAD
0xf0 SWAP2
0xf1 ISZERO
0xf2 ISZERO
0xf3 DUP3
0xf4 MSTORE
0xf5 MLOAD
0xf6 SWAP1
0xf7 DUP2
0xf8 SWAP1
0xf9 SUB
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP1
0xfe RETURN
---
0xeb: JUMPDEST 
0xec: V77 = 0x40
0xef: V78 = M[0x40]
0xf1: V79 = ISZERO S0
0xf2: V80 = ISZERO V79
0xf4: M[V78] = V80
0xf5: V81 = M[0x40]
0xf9: V82 = SUB V78 V81
0xfa: V83 = 0x20
0xfc: V84 = ADD 0x20 V82
0xfe: RETURN V81 V84
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xff
[0xff:0x105]
---
Predecessors: [0x30]
Successors: [0x106, 0x107]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 ISZERO
0x102 PUSH2 0x107
0x105 JUMPI
---
0xff: JUMPDEST 
0x100: V85 = CALLVALUE
0x101: V86 = ISZERO V85
0x102: V87 = 0x107
0x105: JUMPI 0x107 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x106
[0x106:0x106]
---
Predecessors: [0xff]
Successors: []
---
0x106 INVALID
---
0x106: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x107
[0x107:0x10e]
---
Predecessors: [0xff]
Successors: [0x3db]
---
0x107 JUMPDEST
0x108 PUSH2 0x10f
0x10b PUSH2 0x3db
0x10e JUMP
---
0x107: JUMPDEST 
0x108: V88 = 0x10f
0x10b: V89 = 0x3db
0x10e: JUMP 0x3db
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10f]
Exit stack: [V12, 0x10f]

================================

Block 0x10f
[0x10f:0x12a]
---
Predecessors: [0x6fe, 0x756, 0x765, 0x952]
Successors: []
---
0x10f JUMPDEST
0x110 PUSH1 0x40
0x112 DUP1
0x113 MLOAD
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c SWAP1
0x11d SWAP3
0x11e AND
0x11f DUP3
0x120 MSTORE
0x121 MLOAD
0x122 SWAP1
0x123 DUP2
0x124 SWAP1
0x125 SUB
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP1
0x12a RETURN
---
0x10f: JUMPDEST 
0x110: V90 = 0x40
0x113: V91 = M[0x40]
0x114: V92 = 0x1
0x116: V93 = 0xa0
0x118: V94 = 0x2
0x11a: V95 = EXP 0x2 0xa0
0x11b: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e: V97 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x120: M[V91] = V97
0x121: V98 = M[0x40]
0x125: V99 = SUB V91 V98
0x126: V100 = 0x20
0x128: V101 = ADD 0x20 V99
0x12a: RETURN V98 V101
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x12b
[0x12b:0x131]
---
Predecessors: [0x3b]
Successors: [0x132, 0x133]
---
0x12b JUMPDEST
0x12c CALLVALUE
0x12d ISZERO
0x12e PUSH2 0x133
0x131 JUMPI
---
0x12b: JUMPDEST 
0x12c: V102 = CALLVALUE
0x12d: V103 = ISZERO V102
0x12e: V104 = 0x133
0x131: JUMPI 0x133 V103
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x132
[0x132:0x132]
---
Predecessors: [0x12b]
Successors: []
---
0x132 INVALID
---
0x132: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x133
[0x133:0x13a]
---
Predecessors: [0x12b]
Successors: [0x702]
---
0x133 JUMPDEST
0x134 PUSH2 0xc1
0x137 PUSH2 0x702
0x13a JUMP
---
0x133: JUMPDEST 
0x134: V105 = 0xc1
0x137: V106 = 0x702
0x13a: JUMP 0x702
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0x13b
[0x13b:0x13c]
---
Predecessors: []
Successors: []
---
0x13b JUMPDEST
0x13c STOP
---
0x13b: JUMPDEST 
0x13c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x46]
Successors: [0x144, 0x145]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f ISZERO
0x140 PUSH2 0x145
0x143 JUMPI
---
0x13d: JUMPDEST 
0x13e: V107 = CALLVALUE
0x13f: V108 = ISZERO V107
0x140: V109 = 0x145
0x143: JUMPI 0x145 V108
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x144
[0x144:0x144]
---
Predecessors: [0x13d]
Successors: []
---
0x144 INVALID
---
0x144: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x145
[0x145:0x14c]
---
Predecessors: [0x13d]
Successors: [0x756]
---
0x145 JUMPDEST
0x146 PUSH2 0x10f
0x149 PUSH2 0x756
0x14c JUMP
---
0x145: JUMPDEST 
0x146: V110 = 0x10f
0x149: V111 = 0x756
0x14c: JUMP 0x756
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10f]
Exit stack: [V12, 0x10f]

================================

Block 0x14d
[0x14d:0x168]
---
Predecessors: []
Successors: []
---
0x14d JUMPDEST
0x14e PUSH1 0x40
0x150 DUP1
0x151 MLOAD
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a SWAP1
0x15b SWAP3
0x15c AND
0x15d DUP3
0x15e MSTORE
0x15f MLOAD
0x160 SWAP1
0x161 DUP2
0x162 SWAP1
0x163 SUB
0x164 PUSH1 0x20
0x166 ADD
0x167 SWAP1
0x168 RETURN
---
0x14d: JUMPDEST 
0x14e: V112 = 0x40
0x151: V113 = M[0x40]
0x152: V114 = 0x1
0x154: V115 = 0xa0
0x156: V116 = 0x2
0x158: V117 = EXP 0x2 0xa0
0x159: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15c: V119 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x15e: M[V113] = V119
0x15f: V120 = M[0x40]
0x163: V121 = SUB V113 V120
0x164: V122 = 0x20
0x166: V123 = ADD 0x20 V121
0x168: RETURN V120 V123
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x169
[0x169:0x16f]
---
Predecessors: [0x51]
Successors: [0x170, 0x171]
---
0x169 JUMPDEST
0x16a CALLVALUE
0x16b ISZERO
0x16c PUSH2 0x171
0x16f JUMPI
---
0x169: JUMPDEST 
0x16a: V124 = CALLVALUE
0x16b: V125 = ISZERO V124
0x16c: V126 = 0x171
0x16f: JUMPI 0x171 V125
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x170
[0x170:0x170]
---
Predecessors: [0x169]
Successors: []
---
0x170 INVALID
---
0x170: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x171
[0x171:0x178]
---
Predecessors: [0x169]
Successors: [0x765]
---
0x171 JUMPDEST
0x172 PUSH2 0x10f
0x175 PUSH2 0x765
0x178 JUMP
---
0x171: JUMPDEST 
0x172: V127 = 0x10f
0x175: V128 = 0x765
0x178: JUMP 0x765
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10f]
Exit stack: [V12, 0x10f]

================================

Block 0x179
[0x179:0x194]
---
Predecessors: []
Successors: []
---
0x179 JUMPDEST
0x17a PUSH1 0x40
0x17c DUP1
0x17d MLOAD
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 SWAP1
0x187 SWAP3
0x188 AND
0x189 DUP3
0x18a MSTORE
0x18b MLOAD
0x18c SWAP1
0x18d DUP2
0x18e SWAP1
0x18f SUB
0x190 PUSH1 0x20
0x192 ADD
0x193 SWAP1
0x194 RETURN
---
0x179: JUMPDEST 
0x17a: V129 = 0x40
0x17d: V130 = M[0x40]
0x17e: V131 = 0x1
0x180: V132 = 0xa0
0x182: V133 = 0x2
0x184: V134 = EXP 0x2 0xa0
0x185: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x188: V136 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x18a: M[V130] = V136
0x18b: V137 = M[0x40]
0x18f: V138 = SUB V130 V137
0x190: V139 = 0x20
0x192: V140 = ADD 0x20 V138
0x194: RETURN V137 V140
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x195
[0x195:0x19b]
---
Predecessors: [0x5c]
Successors: [0x19c, 0x19d]
---
0x195 JUMPDEST
0x196 CALLVALUE
0x197 ISZERO
0x198 PUSH2 0x19d
0x19b JUMPI
---
0x195: JUMPDEST 
0x196: V141 = CALLVALUE
0x197: V142 = ISZERO V141
0x198: V143 = 0x19d
0x19b: JUMPI 0x19d V142
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19c
[0x19c:0x19c]
---
Predecessors: [0x195]
Successors: []
---
0x19c INVALID
---
0x19c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19d
[0x19d:0x1ad]
---
Predecessors: [0x195]
Successors: [0x774]
---
0x19d JUMPDEST
0x19e PUSH2 0xc1
0x1a1 PUSH1 0x4
0x1a3 CALLDATALOAD
0x1a4 PUSH1 0xff
0x1a6 PUSH1 0x24
0x1a8 CALLDATALOAD
0x1a9 AND
0x1aa PUSH2 0x774
0x1ad JUMP
---
0x19d: JUMPDEST 
0x19e: V144 = 0xc1
0x1a1: V145 = 0x4
0x1a3: V146 = CALLDATALOAD 0x4
0x1a4: V147 = 0xff
0x1a6: V148 = 0x24
0x1a8: V149 = CALLDATALOAD 0x24
0x1a9: V150 = AND V149 0xff
0x1aa: V151 = 0x774
0x1ad: JUMP 0x774
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1, V146, V150]
Exit stack: [V12, 0xc1, V146, V150]

================================

Block 0x1ae
[0x1ae:0x1af]
---
Predecessors: []
Successors: []
---
0x1ae JUMPDEST
0x1af STOP
---
0x1ae: JUMPDEST 
0x1af: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1b0
[0x1b0:0x1b7]
---
Predecessors: [0x67]
Successors: [0x91c]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0xc1
0x1b4 PUSH2 0x91c
0x1b7 JUMP
---
0x1b0: JUMPDEST 
0x1b1: V152 = 0xc1
0x1b4: V153 = 0x91c
0x1b7: JUMP 0x91c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0x1b8
[0x1b8:0x1b9]
---
Predecessors: []
Successors: []
---
0x1b8 JUMPDEST
0x1b9 STOP
---
0x1b8: JUMPDEST 
0x1b9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ba
[0x1ba:0x1c0]
---
Predecessors: [0x72]
Successors: [0x1c1, 0x1c2]
---
0x1ba JUMPDEST
0x1bb CALLVALUE
0x1bc ISZERO
0x1bd PUSH2 0x1c2
0x1c0 JUMPI
---
0x1ba: JUMPDEST 
0x1bb: V154 = CALLVALUE
0x1bc: V155 = ISZERO V154
0x1bd: V156 = 0x1c2
0x1c0: JUMPI 0x1c2 V155
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c1
[0x1c1:0x1c1]
---
Predecessors: [0x1ba]
Successors: []
---
0x1c1 INVALID
---
0x1c1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c2
[0x1c2:0x1c9]
---
Predecessors: [0x1ba]
Successors: [0x952]
---
0x1c2 JUMPDEST
0x1c3 PUSH2 0x10f
0x1c6 PUSH2 0x952
0x1c9 JUMP
---
0x1c2: JUMPDEST 
0x1c3: V157 = 0x10f
0x1c6: V158 = 0x952
0x1c9: JUMP 0x952
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10f]
Exit stack: [V12, 0x10f]

================================

Block 0x1ca
[0x1ca:0x1e5]
---
Predecessors: []
Successors: []
---
0x1ca JUMPDEST
0x1cb PUSH1 0x40
0x1cd DUP1
0x1ce MLOAD
0x1cf PUSH1 0x1
0x1d1 PUSH1 0xa0
0x1d3 PUSH1 0x2
0x1d5 EXP
0x1d6 SUB
0x1d7 SWAP1
0x1d8 SWAP3
0x1d9 AND
0x1da DUP3
0x1db MSTORE
0x1dc MLOAD
0x1dd SWAP1
0x1de DUP2
0x1df SWAP1
0x1e0 SUB
0x1e1 PUSH1 0x20
0x1e3 ADD
0x1e4 SWAP1
0x1e5 RETURN
---
0x1ca: JUMPDEST 
0x1cb: V159 = 0x40
0x1ce: V160 = M[0x40]
0x1cf: V161 = 0x1
0x1d1: V162 = 0xa0
0x1d3: V163 = 0x2
0x1d5: V164 = EXP 0x2 0xa0
0x1d6: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V166 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1db: M[V160] = V166
0x1dc: V167 = M[0x40]
0x1e0: V168 = SUB V160 V167
0x1e1: V169 = 0x20
0x1e3: V170 = ADD 0x20 V168
0x1e5: RETURN V167 V170
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e6
[0x1e6:0x1ec]
---
Predecessors: [0x7d]
Successors: [0x1ed, 0x1ee]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 ISZERO
0x1e9 PUSH2 0x1ee
0x1ec JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V171 = CALLVALUE
0x1e8: V172 = ISZERO V171
0x1e9: V173 = 0x1ee
0x1ec: JUMPI 0x1ee V172
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ed
[0x1ed:0x1ed]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ed INVALID
---
0x1ed: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ee
[0x1ee:0x201]
---
Predecessors: [0x1e6]
Successors: [0x961]
---
0x1ee JUMPDEST
0x1ef PUSH2 0xc1
0x1f2 PUSH1 0x1
0x1f4 PUSH1 0xa0
0x1f6 PUSH1 0x2
0x1f8 EXP
0x1f9 SUB
0x1fa PUSH1 0x4
0x1fc CALLDATALOAD
0x1fd AND
0x1fe PUSH2 0x961
0x201 JUMP
---
0x1ee: JUMPDEST 
0x1ef: V174 = 0xc1
0x1f2: V175 = 0x1
0x1f4: V176 = 0xa0
0x1f6: V177 = 0x2
0x1f8: V178 = EXP 0x2 0xa0
0x1f9: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fa: V180 = 0x4
0x1fc: V181 = CALLDATALOAD 0x4
0x1fd: V182 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V183 = 0x961
0x201: JUMP 0x961
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1, V182]
Exit stack: [V12, 0xc1, V182]

================================

Block 0x202
[0x202:0x203]
---
Predecessors: []
Successors: []
---
0x202 JUMPDEST
0x203 STOP
---
0x202: JUMPDEST 
0x203: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x204
[0x204:0x20a]
---
Predecessors: [0x88]
Successors: [0x20b, 0x20c]
---
0x204 JUMPDEST
0x205 CALLVALUE
0x206 ISZERO
0x207 PUSH2 0x20c
0x20a JUMPI
---
0x204: JUMPDEST 
0x205: V184 = CALLVALUE
0x206: V185 = ISZERO V184
0x207: V186 = 0x20c
0x20a: JUMPI 0x20c V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20b
[0x20b:0x20b]
---
Predecessors: [0x204]
Successors: []
---
0x20b INVALID
---
0x20b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20c
[0x20c:0x21f]
---
Predecessors: [0x204]
Successors: [0x9b3]
---
0x20c JUMPDEST
0x20d PUSH2 0xc1
0x210 PUSH1 0x1
0x212 PUSH1 0xa0
0x214 PUSH1 0x2
0x216 EXP
0x217 SUB
0x218 PUSH1 0x4
0x21a CALLDATALOAD
0x21b AND
0x21c PUSH2 0x9b3
0x21f JUMP
---
0x20c: JUMPDEST 
0x20d: V187 = 0xc1
0x210: V188 = 0x1
0x212: V189 = 0xa0
0x214: V190 = 0x2
0x216: V191 = EXP 0x2 0xa0
0x217: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x218: V193 = 0x4
0x21a: V194 = CALLDATALOAD 0x4
0x21b: V195 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x21c: V196 = 0x9b3
0x21f: JUMP 0x9b3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1, V195]
Exit stack: [V12, 0xc1, V195]

================================

Block 0x220
[0x220:0x221]
---
Predecessors: []
Successors: []
---
0x220 JUMPDEST
0x221 STOP
---
0x220: JUMPDEST 
0x221: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x222
[0x222:0x228]
---
Predecessors: [0x93]
Successors: [0x229, 0x22a]
---
0x222 JUMPDEST
0x223 CALLVALUE
0x224 ISZERO
0x225 PUSH2 0x22a
0x228 JUMPI
---
0x222: JUMPDEST 
0x223: V197 = CALLVALUE
0x224: V198 = ISZERO V197
0x225: V199 = 0x22a
0x228: JUMPI 0x22a V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x229
[0x229:0x229]
---
Predecessors: [0x222]
Successors: []
---
0x229 INVALID
---
0x229: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22a
[0x22a:0x231]
---
Predecessors: [0x222]
Successors: [0x9ee]
---
0x22a JUMPDEST
0x22b PUSH2 0xc1
0x22e PUSH2 0x9ee
0x231 JUMP
---
0x22a: JUMPDEST 
0x22b: V200 = 0xc1
0x22e: V201 = 0x9ee
0x231: JUMP 0x9ee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0x232
[0x232:0x233]
---
Predecessors: []
Successors: []
---
0x232 JUMPDEST
0x233 STOP
---
0x232: JUMPDEST 
0x233: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x234
[0x234:0x24a]
---
Predecessors: [0xcb]
Successors: [0x24b, 0x24f]
---
0x234 JUMPDEST
0x235 PUSH1 0x3
0x237 SLOAD
0x238 CALLER
0x239 PUSH1 0x1
0x23b PUSH1 0xa0
0x23d PUSH1 0x2
0x23f EXP
0x240 SUB
0x241 SWAP1
0x242 DUP2
0x243 AND
0x244 SWAP2
0x245 AND
0x246 EQ
0x247 PUSH2 0x24f
0x24a JUMPI
---
0x234: JUMPDEST 
0x235: V202 = 0x3
0x237: V203 = S[0x3]
0x238: V204 = CALLER
0x239: V205 = 0x1
0x23b: V206 = 0xa0
0x23d: V207 = 0x2
0x23f: V208 = EXP 0x2 0xa0
0x240: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x243: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x245: V211 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x246: V212 = EQ V211 V210
0x247: V213 = 0x24f
0x24a: JUMPI 0x24f V212
---
Entry stack: [V12, 0xc1, V68, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70]

================================

Block 0x24b
[0x24b:0x24e]
---
Predecessors: [0x234]
Successors: []
---
0x24b PUSH2 0x0
0x24e JUMP
---
0x24b: V214 = 0x0
0x24e: THROW 
---
Entry stack: [V12, 0xc1, V68, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70]

================================

Block 0x24f
[0x24f:0x260]
---
Predecessors: [0x234]
Successors: [0x261, 0x265]
---
0x24f JUMPDEST
0x250 PUSH1 0x4
0x252 SLOAD
0x253 PUSH1 0x1
0x255 PUSH1 0xa0
0x257 PUSH1 0x2
0x259 EXP
0x25a SUB
0x25b AND
0x25c ISZERO
0x25d PUSH2 0x265
0x260 JUMPI
---
0x24f: JUMPDEST 
0x250: V215 = 0x4
0x252: V216 = S[0x4]
0x253: V217 = 0x1
0x255: V218 = 0xa0
0x257: V219 = 0x2
0x259: V220 = EXP 0x2 0xa0
0x25a: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25b: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x25c: V223 = ISZERO V222
0x25d: V224 = 0x265
0x260: JUMPI 0x265 V223
---
Entry stack: [V12, 0xc1, V68, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70]

================================

Block 0x261
[0x261:0x264]
---
Predecessors: [0x24f]
Successors: []
---
0x261 PUSH2 0x0
0x264 JUMP
---
0x261: V225 = 0x0
0x264: THROW 
---
Entry stack: [V12, 0xc1, V68, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70]

================================

Block 0x265
[0x265:0x278]
---
Predecessors: [0x24f]
Successors: [0x279, 0x312]
---
0x265 JUMPDEST
0x266 PUSH1 0x0
0x268 ADDRESS
0x269 PUSH1 0x1
0x26b PUSH1 0xa0
0x26d PUSH1 0x2
0x26f EXP
0x270 SUB
0x271 AND
0x272 BALANCE
0x273 GT
0x274 ISZERO
0x275 PUSH2 0x312
0x278 JUMPI
---
0x265: JUMPDEST 
0x266: V226 = 0x0
0x268: V227 = ADDRESS
0x269: V228 = 0x1
0x26b: V229 = 0xa0
0x26d: V230 = 0x2
0x26f: V231 = EXP 0x2 0xa0
0x270: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x271: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x272: V234 = BALANCE V233
0x273: V235 = GT V234 0x0
0x274: V236 = ISZERO V235
0x275: V237 = 0x312
0x278: JUMPI 0x312 V236
---
Entry stack: [V12, 0xc1, V68, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70]

================================

Block 0x279
[0x279:0x2d5]
---
Predecessors: [0x265]
Successors: [0x2d6, 0x2d7]
---
0x279 PUSH1 0x2
0x27b SLOAD
0x27c PUSH1 0x40
0x27e DUP1
0x27f MLOAD
0x280 PUSH1 0x0
0x282 PUSH1 0x20
0x284 SWAP2
0x285 DUP3
0x286 ADD
0x287 MSTORE
0x288 DUP2
0x289 MLOAD
0x28a PUSH1 0xe0
0x28c PUSH1 0x2
0x28e EXP
0x28f PUSH4 0x20e12a43
0x294 MUL
0x295 DUP2
0x296 MSTORE
0x297 PUSH1 0x4
0x299 DUP2
0x29a ADD
0x29b DUP7
0x29c SWAP1
0x29d MSTORE
0x29e PUSH1 0x24
0x2a0 DUP2
0x2a1 ADD
0x2a2 DUP6
0x2a3 SWAP1
0x2a4 MSTORE
0x2a5 SWAP2
0x2a6 MLOAD
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af SWAP4
0x2b0 DUP5
0x2b1 AND
0x2b2 SWAP4
0x2b3 PUSH4 0x20e12a43
0x2b8 SWAP4
0x2b9 ADDRESS
0x2ba SWAP1
0x2bb SWAP2
0x2bc AND
0x2bd BALANCE
0x2be SWAP3
0x2bf PUSH1 0x44
0x2c1 DUP1
0x2c2 DUP4
0x2c3 ADD
0x2c4 SWAP4
0x2c5 SWAP2
0x2c6 SWAP3
0x2c7 DUP3
0x2c8 SWAP1
0x2c9 SUB
0x2ca ADD
0x2cb DUP2
0x2cc DUP6
0x2cd DUP9
0x2ce DUP1
0x2cf EXTCODESIZE
0x2d0 ISZERO
0x2d1 ISZERO
0x2d2 PUSH2 0x2d7
0x2d5 JUMPI
---
0x279: V238 = 0x2
0x27b: V239 = S[0x2]
0x27c: V240 = 0x40
0x27f: V241 = M[0x40]
0x280: V242 = 0x0
0x282: V243 = 0x20
0x286: V244 = ADD 0x20 V241
0x287: M[V244] = 0x0
0x289: V245 = M[0x40]
0x28a: V246 = 0xe0
0x28c: V247 = 0x2
0x28e: V248 = EXP 0x2 0xe0
0x28f: V249 = 0x20e12a43
0x294: V250 = MUL 0x20e12a43 0x100000000000000000000000000000000000000000000000000000000
0x296: M[V245] = 0x20e12a4300000000000000000000000000000000000000000000000000000000
0x297: V251 = 0x4
0x29a: V252 = ADD V245 0x4
0x29d: M[V252] = V68
0x29e: V253 = 0x24
0x2a1: V254 = ADD V245 0x24
0x2a4: M[V254] = V70
0x2a6: V255 = M[0x40]
0x2a7: V256 = 0x1
0x2a9: V257 = 0xa0
0x2ab: V258 = 0x2
0x2ad: V259 = EXP 0x2 0xa0
0x2ae: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b1: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x2b3: V262 = 0x20e12a43
0x2b9: V263 = ADDRESS
0x2bc: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x2bd: V265 = BALANCE V264
0x2bf: V266 = 0x44
0x2c3: V267 = ADD V245 0x44
0x2c9: V268 = SUB V245 V255
0x2ca: V269 = ADD V268 0x44
0x2cf: V270 = EXTCODESIZE V261
0x2d0: V271 = ISZERO V270
0x2d1: V272 = ISZERO V271
0x2d2: V273 = 0x2d7
0x2d5: JUMPI 0x2d7 V272
---
Entry stack: [V12, 0xc1, V68, V70]
Stack pops: 2
Stack additions: [S1, S0, V261, 0x20e12a43, V265, V267, 0x20, V255, V269, V255, V265, V261]
Exit stack: [V12, 0xc1, V68, V70, V261, 0x20e12a43, V265, V267, 0x20, V255, V269, V255, V265, V261]

================================

Block 0x2d6
[0x2d6:0x2d6]
---
Predecessors: [0x279]
Successors: []
---
0x2d6 INVALID
---
0x2d6: INVALID 
---
Entry stack: [V12, 0xc1, V68, V70, V261, 0x20e12a43, V265, V267, 0x20, V255, V269, V255, V265, V261]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70, V261, 0x20e12a43, V265, V267, 0x20, V255, V269, V255, V265, V261]

================================

Block 0x2d7
[0x2d7:0x2e3]
---
Predecessors: [0x279]
Successors: [0x2e4, 0x2e5]
---
0x2d7 JUMPDEST
0x2d8 PUSH2 0x235a
0x2db GAS
0x2dc SUB
0x2dd CALL
0x2de ISZERO
0x2df ISZERO
0x2e0 PUSH2 0x2e5
0x2e3 JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V274 = 0x235a
0x2db: V275 = GAS
0x2dc: V276 = SUB V275 0x235a
0x2dd: V277 = CALL V276 V261 V265 V255 V269 V255 0x20
0x2de: V278 = ISZERO V277
0x2df: V279 = ISZERO V278
0x2e0: V280 = 0x2e5
0x2e3: JUMPI 0x2e5 V279
---
Entry stack: [V12, 0xc1, V68, V70, V261, 0x20e12a43, V265, V267, 0x20, V255, V269, V255, V265, V261]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70, V261, 0x20e12a43, V265, V267]

================================

Block 0x2e4
[0x2e4:0x2e4]
---
Predecessors: [0x2d7]
Successors: []
---
0x2e4 INVALID
---
0x2e4: INVALID 
---
Entry stack: [V12, 0xc1, V68, V70, V261, 0x20e12a43, V265, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70, V261, 0x20e12a43, V265, V267]

================================

Block 0x2e5
[0x2e5:0x311]
---
Predecessors: [0x2d7]
Successors: [0x3a2]
---
0x2e5 JUMPDEST
0x2e6 POP
0x2e7 POP
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb MLOAD
0x2ec PUSH1 0x4
0x2ee DUP1
0x2ef SLOAD
0x2f0 PUSH1 0x1
0x2f2 PUSH1 0xa0
0x2f4 PUSH1 0x2
0x2f6 EXP
0x2f7 SUB
0x2f8 NOT
0x2f9 AND
0x2fa PUSH1 0x1
0x2fc PUSH1 0xa0
0x2fe PUSH1 0x2
0x300 EXP
0x301 SUB
0x302 SWAP1
0x303 SWAP3
0x304 AND
0x305 SWAP2
0x306 SWAP1
0x307 SWAP2
0x308 OR
0x309 SWAP1
0x30a SSTORE
0x30b POP
0x30c PUSH2 0x3a2
0x30f SWAP1
0x310 POP
0x311 JUMP
---
0x2e5: JUMPDEST 
0x2e8: V281 = 0x40
0x2ea: V282 = M[0x40]
0x2eb: V283 = M[V282]
0x2ec: V284 = 0x4
0x2ef: V285 = S[0x4]
0x2f0: V286 = 0x1
0x2f2: V287 = 0xa0
0x2f4: V288 = 0x2
0x2f6: V289 = EXP 0x2 0xa0
0x2f7: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f8: V291 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V292 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V285
0x2fa: V293 = 0x1
0x2fc: V294 = 0xa0
0x2fe: V295 = 0x2
0x300: V296 = EXP 0x2 0xa0
0x301: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x304: V298 = AND V283 0xffffffffffffffffffffffffffffffffffffffff
0x308: V299 = OR V298 V292
0x30a: S[0x4] = V299
0x30c: V300 = 0x3a2
0x311: JUMP 0x3a2
---
Entry stack: [V12, 0xc1, V68, V70, V261, 0x20e12a43, V265, V267]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70]

================================

Block 0x312
[0x312:0x36c]
---
Predecessors: [0x265]
Successors: [0x36d, 0x36e]
---
0x312 JUMPDEST
0x313 PUSH1 0x2
0x315 SLOAD
0x316 PUSH1 0x40
0x318 DUP1
0x319 MLOAD
0x31a PUSH1 0x0
0x31c PUSH1 0x20
0x31e SWAP2
0x31f DUP3
0x320 ADD
0x321 DUP2
0x322 SWAP1
0x323 MSTORE
0x324 DUP3
0x325 MLOAD
0x326 PUSH1 0xe0
0x328 PUSH1 0x2
0x32a EXP
0x32b PUSH4 0x20e12a43
0x330 MUL
0x331 DUP2
0x332 MSTORE
0x333 PUSH1 0x4
0x335 DUP2
0x336 ADD
0x337 DUP8
0x338 SWAP1
0x339 MSTORE
0x33a PUSH1 0x24
0x33c DUP2
0x33d ADD
0x33e DUP7
0x33f SWAP1
0x340 MSTORE
0x341 SWAP3
0x342 MLOAD
0x343 PUSH1 0x1
0x345 PUSH1 0xa0
0x347 PUSH1 0x2
0x349 EXP
0x34a SUB
0x34b SWAP1
0x34c SWAP5
0x34d AND
0x34e SWAP4
0x34f PUSH4 0x20e12a43
0x354 SWAP4
0x355 PUSH1 0x44
0x357 DUP1
0x358 DUP3
0x359 ADD
0x35a SWAP5
0x35b SWAP4
0x35c SWAP2
0x35d DUP4
0x35e SWAP1
0x35f SUB
0x360 ADD
0x361 SWAP1
0x362 DUP3
0x363 SWAP1
0x364 DUP8
0x365 DUP1
0x366 EXTCODESIZE
0x367 ISZERO
0x368 ISZERO
0x369 PUSH2 0x36e
0x36c JUMPI
---
0x312: JUMPDEST 
0x313: V301 = 0x2
0x315: V302 = S[0x2]
0x316: V303 = 0x40
0x319: V304 = M[0x40]
0x31a: V305 = 0x0
0x31c: V306 = 0x20
0x320: V307 = ADD 0x20 V304
0x323: M[V307] = 0x0
0x325: V308 = M[0x40]
0x326: V309 = 0xe0
0x328: V310 = 0x2
0x32a: V311 = EXP 0x2 0xe0
0x32b: V312 = 0x20e12a43
0x330: V313 = MUL 0x20e12a43 0x100000000000000000000000000000000000000000000000000000000
0x332: M[V308] = 0x20e12a4300000000000000000000000000000000000000000000000000000000
0x333: V314 = 0x4
0x336: V315 = ADD V308 0x4
0x339: M[V315] = V68
0x33a: V316 = 0x24
0x33d: V317 = ADD V308 0x24
0x340: M[V317] = V70
0x342: V318 = M[0x40]
0x343: V319 = 0x1
0x345: V320 = 0xa0
0x347: V321 = 0x2
0x349: V322 = EXP 0x2 0xa0
0x34a: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34d: V324 = AND V302 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V325 = 0x20e12a43
0x355: V326 = 0x44
0x359: V327 = ADD V308 0x44
0x35f: V328 = SUB V308 V318
0x360: V329 = ADD V328 0x44
0x366: V330 = EXTCODESIZE V324
0x367: V331 = ISZERO V330
0x368: V332 = ISZERO V331
0x369: V333 = 0x36e
0x36c: JUMPI 0x36e V332
---
Entry stack: [V12, 0xc1, V68, V70]
Stack pops: 2
Stack additions: [S1, S0, V324, 0x20e12a43, V327, 0x20, V318, V329, V318, 0x0, V324]
Exit stack: [V12, 0xc1, V68, V70, V324, 0x20e12a43, V327, 0x20, V318, V329, V318, 0x0, V324]

================================

Block 0x36d
[0x36d:0x36d]
---
Predecessors: [0x312]
Successors: []
---
0x36d INVALID
---
0x36d: INVALID 
---
Entry stack: [V12, 0xc1, V68, V70, V324, 0x20e12a43, V327, 0x20, V318, V329, V318, 0x0, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70, V324, 0x20e12a43, V327, 0x20, V318, V329, V318, 0x0, V324]

================================

Block 0x36e
[0x36e:0x379]
---
Predecessors: [0x312]
Successors: [0x37a, 0x37b]
---
0x36e JUMPDEST
0x36f PUSH1 0x32
0x371 GAS
0x372 SUB
0x373 CALL
0x374 ISZERO
0x375 ISZERO
0x376 PUSH2 0x37b
0x379 JUMPI
---
0x36e: JUMPDEST 
0x36f: V334 = 0x32
0x371: V335 = GAS
0x372: V336 = SUB V335 0x32
0x373: V337 = CALL V336 V324 0x0 V318 V329 V318 0x20
0x374: V338 = ISZERO V337
0x375: V339 = ISZERO V338
0x376: V340 = 0x37b
0x379: JUMPI 0x37b V339
---
Entry stack: [V12, 0xc1, V68, V70, V324, 0x20e12a43, V327, 0x20, V318, V329, V318, 0x0, V324]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70, V324, 0x20e12a43, V327]

================================

Block 0x37a
[0x37a:0x37a]
---
Predecessors: [0x36e]
Successors: []
---
0x37a INVALID
---
0x37a: INVALID 
---
Entry stack: [V12, 0xc1, V68, V70, V324, 0x20e12a43, V327]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70, V324, 0x20e12a43, V327]

================================

Block 0x37b
[0x37b:0x3a1]
---
Predecessors: [0x36e]
Successors: [0x3a2]
---
0x37b JUMPDEST
0x37c POP
0x37d POP
0x37e PUSH1 0x40
0x380 MLOAD
0x381 MLOAD
0x382 PUSH1 0x4
0x384 DUP1
0x385 SLOAD
0x386 PUSH1 0x1
0x388 PUSH1 0xa0
0x38a PUSH1 0x2
0x38c EXP
0x38d SUB
0x38e NOT
0x38f AND
0x390 PUSH1 0x1
0x392 PUSH1 0xa0
0x394 PUSH1 0x2
0x396 EXP
0x397 SUB
0x398 SWAP1
0x399 SWAP3
0x39a AND
0x39b SWAP2
0x39c SWAP1
0x39d SWAP2
0x39e OR
0x39f SWAP1
0x3a0 SSTORE
0x3a1 POP
---
0x37b: JUMPDEST 
0x37e: V341 = 0x40
0x380: V342 = M[0x40]
0x381: V343 = M[V342]
0x382: V344 = 0x4
0x385: V345 = S[0x4]
0x386: V346 = 0x1
0x388: V347 = 0xa0
0x38a: V348 = 0x2
0x38c: V349 = EXP 0x2 0xa0
0x38d: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38e: V351 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x38f: V352 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V345
0x390: V353 = 0x1
0x392: V354 = 0xa0
0x394: V355 = 0x2
0x396: V356 = EXP 0x2 0xa0
0x397: V357 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39a: V358 = AND V343 0xffffffffffffffffffffffffffffffffffffffff
0x39e: V359 = OR V358 V352
0x3a0: S[0x4] = V359
---
Entry stack: [V12, 0xc1, V68, V70, V324, 0x20e12a43, V327]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70]

================================

Block 0x3a2
[0x3a2:0x3a2]
---
Predecessors: [0x2e5, 0x37b]
Successors: [0x3a3]
---
0x3a2 JUMPDEST
---
0x3a2: JUMPDEST 
---
Entry stack: [V12, 0xc1, V68, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70]

================================

Block 0x3a3
[0x3a3:0x3a3]
---
Predecessors: [0x3a2]
Successors: [0x3a4]
---
0x3a3 JUMPDEST
---
0x3a3: JUMPDEST 
---
Entry stack: [V12, 0xc1, V68, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70]

================================

Block 0x3a4
[0x3a4:0x3a4]
---
Predecessors: [0x3a3]
Successors: [0x3a5]
---
0x3a4 JUMPDEST
---
0x3a4: JUMPDEST 
---
Entry stack: [V12, 0xc1, V68, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V68, V70]

================================

Block 0x3a5
[0x3a5:0x3a8]
---
Predecessors: [0x3a4]
Successors: [0xc1]
---
0x3a5 JUMPDEST
0x3a6 POP
0x3a7 POP
0x3a8 JUMP
---
0x3a5: JUMPDEST 
0x3a8: JUMP 0xc1
---
Entry stack: [V12, 0xc1, V68, V70]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a9
[0x3a9:0x3bf]
---
Predecessors: [0xe3]
Successors: [0x3c0, 0x3d5]
---
0x3a9 JUMPDEST
0x3aa PUSH1 0x4
0x3ac SLOAD
0x3ad PUSH1 0x0
0x3af SWAP1
0x3b0 PUSH1 0x1
0x3b2 PUSH1 0xa0
0x3b4 PUSH1 0x2
0x3b6 EXP
0x3b7 SUB
0x3b8 AND
0x3b9 ISZERO
0x3ba DUP1
0x3bb ISZERO
0x3bc PUSH2 0x3d5
0x3bf JUMPI
---
0x3a9: JUMPDEST 
0x3aa: V360 = 0x4
0x3ac: V361 = S[0x4]
0x3ad: V362 = 0x0
0x3b0: V363 = 0x1
0x3b2: V364 = 0xa0
0x3b4: V365 = 0x2
0x3b6: V366 = EXP 0x2 0xa0
0x3b7: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b8: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x3b9: V369 = ISZERO V368
0x3bb: V370 = ISZERO V369
0x3bc: V371 = 0x3d5
0x3bf: JUMPI 0x3d5 V370
---
Entry stack: [V12, 0xeb]
Stack pops: 0
Stack additions: [0x0, V369]
Exit stack: [V12, 0xeb, 0x0, V369]

================================

Block 0x3c0
[0x3c0:0x3d4]
---
Predecessors: [0x3a9]
Successors: [0x3d5]
---
0x3c0 POP
0x3c1 PUSH7 0x38d7ea4c68000
0x3c9 ADDRESS
0x3ca PUSH1 0x1
0x3cc PUSH1 0xa0
0x3ce PUSH1 0x2
0x3d0 EXP
0x3d1 SUB
0x3d2 AND
0x3d3 BALANCE
0x3d4 LT
---
0x3c1: V372 = 0x38d7ea4c68000
0x3c9: V373 = ADDRESS
0x3ca: V374 = 0x1
0x3cc: V375 = 0xa0
0x3ce: V376 = 0x2
0x3d0: V377 = EXP 0x2 0xa0
0x3d1: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d2: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x3d3: V380 = BALANCE V379
0x3d4: V381 = LT V380 0x38d7ea4c68000
---
Entry stack: [V12, 0xeb, 0x0, V369]
Stack pops: 1
Stack additions: [V381]
Exit stack: [V12, 0xeb, 0x0, V381]

================================

Block 0x3d5
[0x3d5:0x3d7]
---
Predecessors: [0x3a9, 0x3c0]
Successors: [0x3d8]
---
0x3d5 JUMPDEST
0x3d6 SWAP1
0x3d7 POP
---
0x3d5: JUMPDEST 
---
Entry stack: [V12, 0xeb, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xeb, S0]

================================

Block 0x3d8
[0x3d8:0x3da]
---
Predecessors: [0x3d5]
Successors: [0xeb]
---
0x3d8 JUMPDEST
0x3d9 SWAP1
0x3da JUMP
---
0x3d8: JUMPDEST 
0x3da: JUMP 0xeb
---
Entry stack: [V12, 0xeb, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x3db
[0x3db:0x3f6]
---
Predecessors: [0x107]
Successors: [0x3f7, 0x3fb]
---
0x3db JUMPDEST
0x3dc PUSH1 0x1
0x3de SLOAD
0x3df PUSH1 0x0
0x3e1 SWAP1
0x3e2 DUP2
0x3e3 SWAP1
0x3e4 CALLER
0x3e5 PUSH1 0x1
0x3e7 PUSH1 0xa0
0x3e9 PUSH1 0x2
0x3eb EXP
0x3ec SUB
0x3ed SWAP1
0x3ee DUP2
0x3ef AND
0x3f0 SWAP2
0x3f1 AND
0x3f2 EQ
0x3f3 PUSH2 0x3fb
0x3f6 JUMPI
---
0x3db: JUMPDEST 
0x3dc: V382 = 0x1
0x3de: V383 = S[0x1]
0x3df: V384 = 0x0
0x3e4: V385 = CALLER
0x3e5: V386 = 0x1
0x3e7: V387 = 0xa0
0x3e9: V388 = 0x2
0x3eb: V389 = EXP 0x2 0xa0
0x3ec: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ef: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x3f1: V392 = AND V383 0xffffffffffffffffffffffffffffffffffffffff
0x3f2: V393 = EQ V392 V391
0x3f3: V394 = 0x3fb
0x3f6: JUMPI 0x3fb V393
---
Entry stack: [V12, 0x10f]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x10f, 0x0, 0x0]

================================

Block 0x3f7
[0x3f7:0x3fa]
---
Predecessors: [0x3db]
Successors: []
---
0x3f7 PUSH2 0x0
0x3fa JUMP
---
0x3f7: V395 = 0x0
0x3fa: THROW 
---
Entry stack: [V12, 0x10f, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, 0x0]

================================

Block 0x3fb
[0x3fb:0x40d]
---
Predecessors: [0x3db]
Successors: [0x40e, 0x480]
---
0x3fb JUMPDEST
0x3fc PUSH1 0x4
0x3fe SLOAD
0x3ff PUSH1 0x1
0x401 PUSH1 0xa0
0x403 PUSH1 0x2
0x405 EXP
0x406 SUB
0x407 AND
0x408 ISZERO
0x409 DUP1
0x40a PUSH2 0x480
0x40d JUMPI
---
0x3fb: JUMPDEST 
0x3fc: V396 = 0x4
0x3fe: V397 = S[0x4]
0x3ff: V398 = 0x1
0x401: V399 = 0xa0
0x403: V400 = 0x2
0x405: V401 = EXP 0x2 0xa0
0x406: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x407: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x408: V404 = ISZERO V403
0x40a: V405 = 0x480
0x40d: JUMPI 0x480 V404
---
Entry stack: [V12, 0x10f, 0x0, 0x0]
Stack pops: 0
Stack additions: [V404]
Exit stack: [V12, 0x10f, 0x0, 0x0, V404]

================================

Block 0x40e
[0x40e:0x467]
---
Predecessors: [0x3fb]
Successors: [0x468, 0x469]
---
0x40e POP
0x40f PUSH1 0x4
0x411 PUSH1 0x0
0x413 SWAP1
0x414 SLOAD
0x415 SWAP1
0x416 PUSH2 0x100
0x419 EXP
0x41a SWAP1
0x41b DIV
0x41c PUSH1 0x1
0x41e PUSH1 0xa0
0x420 PUSH1 0x2
0x422 EXP
0x423 SUB
0x424 AND
0x425 PUSH1 0x1
0x427 PUSH1 0xa0
0x429 PUSH1 0x2
0x42b EXP
0x42c SUB
0x42d AND
0x42e PUSH4 0x36b09474
0x433 PUSH1 0x0
0x435 PUSH1 0x40
0x437 MLOAD
0x438 PUSH1 0x20
0x43a ADD
0x43b MSTORE
0x43c PUSH1 0x40
0x43e MLOAD
0x43f DUP2
0x440 PUSH4 0xffffffff
0x445 AND
0x446 PUSH1 0xe0
0x448 PUSH1 0x2
0x44a EXP
0x44b MUL
0x44c DUP2
0x44d MSTORE
0x44e PUSH1 0x4
0x450 ADD
0x451 DUP1
0x452 SWAP1
0x453 POP
0x454 PUSH1 0x20
0x456 PUSH1 0x40
0x458 MLOAD
0x459 DUP1
0x45a DUP4
0x45b SUB
0x45c DUP2
0x45d PUSH1 0x0
0x45f DUP8
0x460 DUP1
0x461 EXTCODESIZE
0x462 ISZERO
0x463 ISZERO
0x464 PUSH2 0x469
0x467 JUMPI
---
0x40f: V406 = 0x4
0x411: V407 = 0x0
0x414: V408 = S[0x4]
0x416: V409 = 0x100
0x419: V410 = EXP 0x100 0x0
0x41b: V411 = DIV V408 0x1
0x41c: V412 = 0x1
0x41e: V413 = 0xa0
0x420: V414 = 0x2
0x422: V415 = EXP 0x2 0xa0
0x423: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x424: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x425: V418 = 0x1
0x427: V419 = 0xa0
0x429: V420 = 0x2
0x42b: V421 = EXP 0x2 0xa0
0x42c: V422 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42d: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x42e: V424 = 0x36b09474
0x433: V425 = 0x0
0x435: V426 = 0x40
0x437: V427 = M[0x40]
0x438: V428 = 0x20
0x43a: V429 = ADD 0x20 V427
0x43b: M[V429] = 0x0
0x43c: V430 = 0x40
0x43e: V431 = M[0x40]
0x440: V432 = 0xffffffff
0x445: V433 = AND 0xffffffff 0x36b09474
0x446: V434 = 0xe0
0x448: V435 = 0x2
0x44a: V436 = EXP 0x2 0xe0
0x44b: V437 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x36b09474
0x44d: M[V431] = 0x36b0947400000000000000000000000000000000000000000000000000000000
0x44e: V438 = 0x4
0x450: V439 = ADD 0x4 V431
0x454: V440 = 0x20
0x456: V441 = 0x40
0x458: V442 = M[0x40]
0x45b: V443 = SUB V439 V442
0x45d: V444 = 0x0
0x461: V445 = EXTCODESIZE V423
0x462: V446 = ISZERO V445
0x463: V447 = ISZERO V446
0x464: V448 = 0x469
0x467: JUMPI 0x469 V447
---
Entry stack: [V12, 0x10f, 0x0, 0x0, V404]
Stack pops: 1
Stack additions: [V423, 0x36b09474, V439, 0x20, V442, V443, V442, 0x0, V423]
Exit stack: [V12, 0x10f, 0x0, 0x0, V423, 0x36b09474, V439, 0x20, V442, V443, V442, 0x0, V423]

================================

Block 0x468
[0x468:0x468]
---
Predecessors: [0x40e]
Successors: []
---
0x468 INVALID
---
0x468: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, 0x0, V423, 0x36b09474, V439, 0x20, V442, V443, V442, 0x0, V423]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, 0x0, V423, 0x36b09474, V439, 0x20, V442, V443, V442, 0x0, V423]

================================

Block 0x469
[0x469:0x474]
---
Predecessors: [0x40e]
Successors: [0x475, 0x476]
---
0x469 JUMPDEST
0x46a PUSH1 0x32
0x46c GAS
0x46d SUB
0x46e CALL
0x46f ISZERO
0x470 ISZERO
0x471 PUSH2 0x476
0x474 JUMPI
---
0x469: JUMPDEST 
0x46a: V449 = 0x32
0x46c: V450 = GAS
0x46d: V451 = SUB V450 0x32
0x46e: V452 = CALL V451 V423 0x0 V442 V443 V442 0x20
0x46f: V453 = ISZERO V452
0x470: V454 = ISZERO V453
0x471: V455 = 0x476
0x474: JUMPI 0x476 V454
---
Entry stack: [V12, 0x10f, 0x0, 0x0, V423, 0x36b09474, V439, 0x20, V442, V443, V442, 0x0, V423]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, 0x0, V423, 0x36b09474, V439]

================================

Block 0x475
[0x475:0x475]
---
Predecessors: [0x469]
Successors: []
---
0x475 INVALID
---
0x475: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, 0x0, V423, 0x36b09474, V439]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, 0x0, V423, 0x36b09474, V439]

================================

Block 0x476
[0x476:0x47f]
---
Predecessors: [0x469]
Successors: [0x480]
---
0x476 JUMPDEST
0x477 POP
0x478 POP
0x479 PUSH1 0x40
0x47b MLOAD
0x47c MLOAD
0x47d ISZERO
0x47e SWAP1
0x47f POP
---
0x476: JUMPDEST 
0x479: V456 = 0x40
0x47b: V457 = M[0x40]
0x47c: V458 = M[V457]
0x47d: V459 = ISZERO V458
---
Entry stack: [V12, 0x10f, 0x0, 0x0, V423, 0x36b09474, V439]
Stack pops: 3
Stack additions: [V459]
Exit stack: [V12, 0x10f, 0x0, 0x0, V459]

================================

Block 0x480
[0x480:0x485]
---
Predecessors: [0x3fb, 0x476]
Successors: [0x486, 0x48a]
---
0x480 JUMPDEST
0x481 ISZERO
0x482 PUSH2 0x48a
0x485 JUMPI
---
0x480: JUMPDEST 
0x481: V460 = ISZERO S0
0x482: V461 = 0x48a
0x485: JUMPI 0x48a V460
---
Entry stack: [V12, 0x10f, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, 0x0]

================================

Block 0x486
[0x486:0x489]
---
Predecessors: [0x480]
Successors: []
---
0x486 PUSH2 0x0
0x489 JUMP
---
0x486: V462 = 0x0
0x489: THROW 
---
Entry stack: [V12, 0x10f, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, 0x0]

================================

Block 0x48a
[0x48a:0x4f0]
---
Predecessors: [0x480]
Successors: [0x4f1, 0x4f2]
---
0x48a JUMPDEST
0x48b POP
0x48c PUSH1 0x4
0x48e DUP1
0x48f SLOAD
0x490 PUSH1 0x40
0x492 DUP1
0x493 MLOAD
0x494 PUSH1 0x0
0x496 PUSH1 0x20
0x498 SWAP2
0x499 DUP3
0x49a ADD
0x49b DUP2
0x49c SWAP1
0x49d MSTORE
0x49e DUP3
0x49f MLOAD
0x4a0 PUSH32 0x5c76ca2d00000000000000000000000000000000000000000000000000000000
0x4c1 DUP2
0x4c2 MSTORE
0x4c3 SWAP3
0x4c4 MLOAD
0x4c5 PUSH1 0x1
0x4c7 PUSH1 0xa0
0x4c9 PUSH1 0x2
0x4cb EXP
0x4cc SUB
0x4cd SWAP1
0x4ce SWAP5
0x4cf AND
0x4d0 SWAP5
0x4d1 DUP6
0x4d2 SWAP5
0x4d3 PUSH4 0x5c76ca2d
0x4d8 SWAP5
0x4d9 DUP1
0x4da DUP4
0x4db ADD
0x4dc SWAP5
0x4dd SWAP4
0x4de SWAP2
0x4df SWAP3
0x4e0 SWAP1
0x4e1 DUP4
0x4e2 SWAP1
0x4e3 SUB
0x4e4 ADD
0x4e5 SWAP1
0x4e6 DUP3
0x4e7 SWAP1
0x4e8 DUP8
0x4e9 DUP1
0x4ea EXTCODESIZE
0x4eb ISZERO
0x4ec ISZERO
0x4ed PUSH2 0x4f2
0x4f0 JUMPI
---
0x48a: JUMPDEST 
0x48c: V463 = 0x4
0x48f: V464 = S[0x4]
0x490: V465 = 0x40
0x493: V466 = M[0x40]
0x494: V467 = 0x0
0x496: V468 = 0x20
0x49a: V469 = ADD 0x20 V466
0x49d: M[V469] = 0x0
0x49f: V470 = M[0x40]
0x4a0: V471 = 0x5c76ca2d00000000000000000000000000000000000000000000000000000000
0x4c2: M[V470] = 0x5c76ca2d00000000000000000000000000000000000000000000000000000000
0x4c4: V472 = M[0x40]
0x4c5: V473 = 0x1
0x4c7: V474 = 0xa0
0x4c9: V475 = 0x2
0x4cb: V476 = EXP 0x2 0xa0
0x4cc: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V478 = AND V464 0xffffffffffffffffffffffffffffffffffffffff
0x4d3: V479 = 0x5c76ca2d
0x4db: V480 = ADD 0x4 V470
0x4e3: V481 = SUB V470 V472
0x4e4: V482 = ADD V481 0x4
0x4ea: V483 = EXTCODESIZE V478
0x4eb: V484 = ISZERO V483
0x4ec: V485 = ISZERO V484
0x4ed: V486 = 0x4f2
0x4f0: JUMPI 0x4f2 V485
---
Entry stack: [V12, 0x10f, 0x0, 0x0]
Stack pops: 1
Stack additions: [V478, V478, 0x5c76ca2d, V480, 0x20, V472, V482, V472, 0x0, V478]
Exit stack: [V12, 0x10f, 0x0, V478, V478, 0x5c76ca2d, V480, 0x20, V472, V482, V472, 0x0, V478]

================================

Block 0x4f1
[0x4f1:0x4f1]
---
Predecessors: [0x48a]
Successors: []
---
0x4f1 INVALID
---
0x4f1: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, V478, V478, 0x5c76ca2d, V480, 0x20, V472, V482, V472, 0x0, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V478, 0x5c76ca2d, V480, 0x20, V472, V482, V472, 0x0, V478]

================================

Block 0x4f2
[0x4f2:0x4fd]
---
Predecessors: [0x48a]
Successors: [0x4fe, 0x4ff]
---
0x4f2 JUMPDEST
0x4f3 PUSH1 0x32
0x4f5 GAS
0x4f6 SUB
0x4f7 CALL
0x4f8 ISZERO
0x4f9 ISZERO
0x4fa PUSH2 0x4ff
0x4fd JUMPI
---
0x4f2: JUMPDEST 
0x4f3: V487 = 0x32
0x4f5: V488 = GAS
0x4f6: V489 = SUB V488 0x32
0x4f7: V490 = CALL V489 V478 0x0 V472 V482 V472 0x20
0x4f8: V491 = ISZERO V490
0x4f9: V492 = ISZERO V491
0x4fa: V493 = 0x4ff
0x4fd: JUMPI 0x4ff V492
---
Entry stack: [V12, 0x10f, 0x0, V478, V478, 0x5c76ca2d, V480, 0x20, V472, V482, V472, 0x0, V478]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V478, 0x5c76ca2d, V480]

================================

Block 0x4fe
[0x4fe:0x4fe]
---
Predecessors: [0x4f2]
Successors: []
---
0x4fe INVALID
---
0x4fe: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, V478, V478, 0x5c76ca2d, V480]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V478, 0x5c76ca2d, V480]

================================

Block 0x4ff
[0x4ff:0x50d]
---
Predecessors: [0x4f2]
Successors: [0x50e, 0x5f1]
---
0x4ff JUMPDEST
0x500 POP
0x501 POP
0x502 PUSH1 0x40
0x504 MLOAD
0x505 MLOAD
0x506 ISZERO
0x507 ISZERO
0x508 SWAP1
0x509 POP
0x50a PUSH2 0x5f1
0x50d JUMPI
---
0x4ff: JUMPDEST 
0x502: V494 = 0x40
0x504: V495 = M[0x40]
0x505: V496 = M[V495]
0x506: V497 = ISZERO V496
0x507: V498 = ISZERO V497
0x50a: V499 = 0x5f1
0x50d: JUMPI 0x5f1 V498
---
Entry stack: [V12, 0x10f, 0x0, V478, V478, 0x5c76ca2d, V480]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478]

================================

Block 0x50e
[0x50e:0x563]
---
Predecessors: [0x4ff]
Successors: [0x564, 0x565]
---
0x50e PUSH1 0x4
0x510 DUP1
0x511 SLOAD
0x512 PUSH1 0x40
0x514 DUP1
0x515 MLOAD
0x516 PUSH32 0x7d2026cd00000000000000000000000000000000000000000000000000000000
0x537 DUP2
0x538 MSTORE
0x539 SWAP1
0x53a MLOAD
0x53b PUSH1 0x1
0x53d PUSH1 0xa0
0x53f PUSH1 0x2
0x541 EXP
0x542 SUB
0x543 SWAP1
0x544 SWAP3
0x545 AND
0x546 SWAP3
0x547 PUSH4 0x7d2026cd
0x54c SWAP3
0x54d DUP3
0x54e DUP3
0x54f ADD
0x550 SWAP3
0x551 PUSH1 0x0
0x553 SWAP3
0x554 SWAP1
0x555 DUP3
0x556 SWAP1
0x557 SUB
0x558 ADD
0x559 DUP2
0x55a DUP4
0x55b DUP8
0x55c DUP1
0x55d EXTCODESIZE
0x55e ISZERO
0x55f ISZERO
0x560 PUSH2 0x565
0x563 JUMPI
---
0x50e: V500 = 0x4
0x511: V501 = S[0x4]
0x512: V502 = 0x40
0x515: V503 = M[0x40]
0x516: V504 = 0x7d2026cd00000000000000000000000000000000000000000000000000000000
0x538: M[V503] = 0x7d2026cd00000000000000000000000000000000000000000000000000000000
0x53a: V505 = M[0x40]
0x53b: V506 = 0x1
0x53d: V507 = 0xa0
0x53f: V508 = 0x2
0x541: V509 = EXP 0x2 0xa0
0x542: V510 = SUB 0x10000000000000000000000000000000000000000 0x1
0x545: V511 = AND V501 0xffffffffffffffffffffffffffffffffffffffff
0x547: V512 = 0x7d2026cd
0x54f: V513 = ADD 0x4 V503
0x551: V514 = 0x0
0x557: V515 = SUB V503 V505
0x558: V516 = ADD V515 0x4
0x55d: V517 = EXTCODESIZE V511
0x55e: V518 = ISZERO V517
0x55f: V519 = ISZERO V518
0x560: V520 = 0x565
0x563: JUMPI 0x565 V519
---
Entry stack: [V12, 0x10f, 0x0, V478]
Stack pops: 0
Stack additions: [V511, 0x7d2026cd, V513, 0x0, V505, V516, V505, 0x0, V511]
Exit stack: [V12, 0x10f, 0x0, V478, V511, 0x7d2026cd, V513, 0x0, V505, V516, V505, 0x0, V511]

================================

Block 0x564
[0x564:0x564]
---
Predecessors: [0x50e]
Successors: []
---
0x564 INVALID
---
0x564: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, V478, V511, 0x7d2026cd, V513, 0x0, V505, V516, V505, 0x0, V511]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V511, 0x7d2026cd, V513, 0x0, V505, V516, V505, 0x0, V511]

================================

Block 0x565
[0x565:0x570]
---
Predecessors: [0x50e]
Successors: [0x571, 0x572]
---
0x565 JUMPDEST
0x566 PUSH1 0x32
0x568 GAS
0x569 SUB
0x56a CALL
0x56b ISZERO
0x56c ISZERO
0x56d PUSH2 0x572
0x570 JUMPI
---
0x565: JUMPDEST 
0x566: V521 = 0x32
0x568: V522 = GAS
0x569: V523 = SUB V522 0x32
0x56a: V524 = CALL V523 V511 0x0 V505 V516 V505 0x0
0x56b: V525 = ISZERO V524
0x56c: V526 = ISZERO V525
0x56d: V527 = 0x572
0x570: JUMPI 0x572 V526
---
Entry stack: [V12, 0x10f, 0x0, V478, V511, 0x7d2026cd, V513, 0x0, V505, V516, V505, 0x0, V511]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V511, 0x7d2026cd, V513]

================================

Block 0x571
[0x571:0x571]
---
Predecessors: [0x565]
Successors: []
---
0x571 INVALID
---
0x571: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, V478, V511, 0x7d2026cd, V513]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V511, 0x7d2026cd, V513]

================================

Block 0x572
[0x572:0x5da]
---
Predecessors: [0x565]
Successors: [0x5db, 0x5dc]
---
0x572 JUMPDEST
0x573 POP
0x574 POP
0x575 PUSH1 0x4
0x577 DUP1
0x578 SLOAD
0x579 PUSH1 0x3
0x57b SLOAD
0x57c PUSH1 0x40
0x57e DUP1
0x57f MLOAD
0x580 PUSH32 0x3a3bdf5600000000000000000000000000000000000000000000000000000000
0x5a1 DUP2
0x5a2 MSTORE
0x5a3 PUSH1 0x1
0x5a5 PUSH1 0xa0
0x5a7 PUSH1 0x2
0x5a9 EXP
0x5aa SUB
0x5ab SWAP3
0x5ac DUP4
0x5ad AND
0x5ae SWAP5
0x5af DUP2
0x5b0 ADD
0x5b1 SWAP5
0x5b2 SWAP1
0x5b3 SWAP5
0x5b4 MSTORE
0x5b5 MLOAD
0x5b6 SWAP2
0x5b7 AND
0x5b8 SWAP3
0x5b9 POP
0x5ba PUSH4 0x3a3bdf56
0x5bf SWAP2
0x5c0 PUSH1 0x24
0x5c2 DUP1
0x5c3 DUP3
0x5c4 ADD
0x5c5 SWAP3
0x5c6 PUSH1 0x0
0x5c8 SWAP3
0x5c9 SWAP1
0x5ca SWAP2
0x5cb SWAP1
0x5cc DUP3
0x5cd SWAP1
0x5ce SUB
0x5cf ADD
0x5d0 DUP2
0x5d1 DUP4
0x5d2 DUP8
0x5d3 DUP1
0x5d4 EXTCODESIZE
0x5d5 ISZERO
0x5d6 ISZERO
0x5d7 PUSH2 0x5dc
0x5da JUMPI
---
0x572: JUMPDEST 
0x575: V528 = 0x4
0x578: V529 = S[0x4]
0x579: V530 = 0x3
0x57b: V531 = S[0x3]
0x57c: V532 = 0x40
0x57f: V533 = M[0x40]
0x580: V534 = 0x3a3bdf5600000000000000000000000000000000000000000000000000000000
0x5a2: M[V533] = 0x3a3bdf5600000000000000000000000000000000000000000000000000000000
0x5a3: V535 = 0x1
0x5a5: V536 = 0xa0
0x5a7: V537 = 0x2
0x5a9: V538 = EXP 0x2 0xa0
0x5aa: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ad: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x5b0: V541 = ADD V533 0x4
0x5b4: M[V541] = V540
0x5b5: V542 = M[0x40]
0x5b7: V543 = AND V529 0xffffffffffffffffffffffffffffffffffffffff
0x5ba: V544 = 0x3a3bdf56
0x5c0: V545 = 0x24
0x5c4: V546 = ADD V533 0x24
0x5c6: V547 = 0x0
0x5ce: V548 = SUB V533 V542
0x5cf: V549 = ADD V548 0x24
0x5d4: V550 = EXTCODESIZE V543
0x5d5: V551 = ISZERO V550
0x5d6: V552 = ISZERO V551
0x5d7: V553 = 0x5dc
0x5da: JUMPI 0x5dc V552
---
Entry stack: [V12, 0x10f, 0x0, V478, V511, 0x7d2026cd, V513]
Stack pops: 3
Stack additions: [V543, 0x3a3bdf56, V546, 0x0, V542, V549, V542, 0x0, V543]
Exit stack: [V12, 0x10f, 0x0, V478, V543, 0x3a3bdf56, V546, 0x0, V542, V549, V542, 0x0, V543]

================================

Block 0x5db
[0x5db:0x5db]
---
Predecessors: [0x572]
Successors: []
---
0x5db INVALID
---
0x5db: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, V478, V543, 0x3a3bdf56, V546, 0x0, V542, V549, V542, 0x0, V543]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V543, 0x3a3bdf56, V546, 0x0, V542, V549, V542, 0x0, V543]

================================

Block 0x5dc
[0x5dc:0x5e7]
---
Predecessors: [0x572]
Successors: [0x5e8, 0x5e9]
---
0x5dc JUMPDEST
0x5dd PUSH1 0x32
0x5df GAS
0x5e0 SUB
0x5e1 CALL
0x5e2 ISZERO
0x5e3 ISZERO
0x5e4 PUSH2 0x5e9
0x5e7 JUMPI
---
0x5dc: JUMPDEST 
0x5dd: V554 = 0x32
0x5df: V555 = GAS
0x5e0: V556 = SUB V555 0x32
0x5e1: V557 = CALL V556 V543 0x0 V542 V549 V542 0x0
0x5e2: V558 = ISZERO V557
0x5e3: V559 = ISZERO V558
0x5e4: V560 = 0x5e9
0x5e7: JUMPI 0x5e9 V559
---
Entry stack: [V12, 0x10f, 0x0, V478, V543, 0x3a3bdf56, V546, 0x0, V542, V549, V542, 0x0, V543]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V543, 0x3a3bdf56, V546]

================================

Block 0x5e8
[0x5e8:0x5e8]
---
Predecessors: [0x5dc]
Successors: []
---
0x5e8 INVALID
---
0x5e8: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, V478, V543, 0x3a3bdf56, V546]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V543, 0x3a3bdf56, V546]

================================

Block 0x5e9
[0x5e9:0x5f0]
---
Predecessors: [0x5dc]
Successors: [0x671]
---
0x5e9 JUMPDEST
0x5ea POP
0x5eb POP
0x5ec POP
0x5ed PUSH2 0x671
0x5f0 JUMP
---
0x5e9: JUMPDEST 
0x5ed: V561 = 0x671
0x5f0: JUMP 0x671
---
Entry stack: [V12, 0x10f, 0x0, V478, V543, 0x3a3bdf56, V546]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478]

================================

Block 0x5f1
[0x5f1:0x608]
---
Predecessors: [0x4ff]
Successors: [0x609, 0x671]
---
0x5f1 JUMPDEST
0x5f2 PUSH1 0x4
0x5f4 SLOAD
0x5f5 PUSH1 0x0
0x5f7 PUSH1 0x1
0x5f9 PUSH1 0xa0
0x5fb PUSH1 0x2
0x5fd EXP
0x5fe SUB
0x5ff SWAP1
0x600 SWAP2
0x601 AND
0x602 BALANCE
0x603 GT
0x604 ISZERO
0x605 PUSH2 0x671
0x608 JUMPI
---
0x5f1: JUMPDEST 
0x5f2: V562 = 0x4
0x5f4: V563 = S[0x4]
0x5f5: V564 = 0x0
0x5f7: V565 = 0x1
0x5f9: V566 = 0xa0
0x5fb: V567 = 0x2
0x5fd: V568 = EXP 0x2 0xa0
0x5fe: V569 = SUB 0x10000000000000000000000000000000000000000 0x1
0x601: V570 = AND V563 0xffffffffffffffffffffffffffffffffffffffff
0x602: V571 = BALANCE V570
0x603: V572 = GT V571 0x0
0x604: V573 = ISZERO V572
0x605: V574 = 0x671
0x608: JUMPI 0x671 V573
---
Entry stack: [V12, 0x10f, 0x0, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478]

================================

Block 0x609
[0x609:0x65e]
---
Predecessors: [0x5f1]
Successors: [0x65f, 0x660]
---
0x609 PUSH1 0x4
0x60b DUP1
0x60c SLOAD
0x60d PUSH1 0x40
0x60f DUP1
0x610 MLOAD
0x611 PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x632 DUP2
0x633 MSTORE
0x634 SWAP1
0x635 MLOAD
0x636 PUSH1 0x1
0x638 PUSH1 0xa0
0x63a PUSH1 0x2
0x63c EXP
0x63d SUB
0x63e SWAP1
0x63f SWAP3
0x640 AND
0x641 SWAP3
0x642 PUSH4 0x3ccfd60b
0x647 SWAP3
0x648 DUP3
0x649 DUP3
0x64a ADD
0x64b SWAP3
0x64c PUSH1 0x0
0x64e SWAP3
0x64f SWAP1
0x650 DUP3
0x651 SWAP1
0x652 SUB
0x653 ADD
0x654 DUP2
0x655 DUP4
0x656 DUP8
0x657 DUP1
0x658 EXTCODESIZE
0x659 ISZERO
0x65a ISZERO
0x65b PUSH2 0x660
0x65e JUMPI
---
0x609: V575 = 0x4
0x60c: V576 = S[0x4]
0x60d: V577 = 0x40
0x610: V578 = M[0x40]
0x611: V579 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x633: M[V578] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x635: V580 = M[0x40]
0x636: V581 = 0x1
0x638: V582 = 0xa0
0x63a: V583 = 0x2
0x63c: V584 = EXP 0x2 0xa0
0x63d: V585 = SUB 0x10000000000000000000000000000000000000000 0x1
0x640: V586 = AND V576 0xffffffffffffffffffffffffffffffffffffffff
0x642: V587 = 0x3ccfd60b
0x64a: V588 = ADD 0x4 V578
0x64c: V589 = 0x0
0x652: V590 = SUB V578 V580
0x653: V591 = ADD V590 0x4
0x658: V592 = EXTCODESIZE V586
0x659: V593 = ISZERO V592
0x65a: V594 = ISZERO V593
0x65b: V595 = 0x660
0x65e: JUMPI 0x660 V594
---
Entry stack: [V12, 0x10f, 0x0, V478]
Stack pops: 0
Stack additions: [V586, 0x3ccfd60b, V588, 0x0, V580, V591, V580, 0x0, V586]
Exit stack: [V12, 0x10f, 0x0, V478, V586, 0x3ccfd60b, V588, 0x0, V580, V591, V580, 0x0, V586]

================================

Block 0x65f
[0x65f:0x65f]
---
Predecessors: [0x609]
Successors: []
---
0x65f INVALID
---
0x65f: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, V478, V586, 0x3ccfd60b, V588, 0x0, V580, V591, V580, 0x0, V586]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V586, 0x3ccfd60b, V588, 0x0, V580, V591, V580, 0x0, V586]

================================

Block 0x660
[0x660:0x66b]
---
Predecessors: [0x609]
Successors: [0x66c, 0x66d]
---
0x660 JUMPDEST
0x661 PUSH1 0x32
0x663 GAS
0x664 SUB
0x665 CALL
0x666 ISZERO
0x667 ISZERO
0x668 PUSH2 0x66d
0x66b JUMPI
---
0x660: JUMPDEST 
0x661: V596 = 0x32
0x663: V597 = GAS
0x664: V598 = SUB V597 0x32
0x665: V599 = CALL V598 V586 0x0 V580 V591 V580 0x0
0x666: V600 = ISZERO V599
0x667: V601 = ISZERO V600
0x668: V602 = 0x66d
0x66b: JUMPI 0x66d V601
---
Entry stack: [V12, 0x10f, 0x0, V478, V586, 0x3ccfd60b, V588, 0x0, V580, V591, V580, 0x0, V586]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V586, 0x3ccfd60b, V588]

================================

Block 0x66c
[0x66c:0x66c]
---
Predecessors: [0x660]
Successors: []
---
0x66c INVALID
---
0x66c: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, V478, V586, 0x3ccfd60b, V588]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V586, 0x3ccfd60b, V588]

================================

Block 0x66d
[0x66d:0x670]
---
Predecessors: [0x660]
Successors: [0x671]
---
0x66d JUMPDEST
0x66e POP
0x66f POP
0x670 POP
---
0x66d: JUMPDEST 
---
Entry stack: [V12, 0x10f, 0x0, V478, V586, 0x3ccfd60b, V588]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478]

================================

Block 0x671
[0x671:0x671]
---
Predecessors: [0x5e9, 0x5f1, 0x66d]
Successors: [0x672]
---
0x671 JUMPDEST
---
0x671: JUMPDEST 
---
Entry stack: [V12, 0x10f, 0x0, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478]

================================

Block 0x672
[0x672:0x6d6]
---
Predecessors: [0x671]
Successors: [0x6d7, 0x6d8]
---
0x672 JUMPDEST
0x673 PUSH1 0x4
0x675 DUP1
0x676 SLOAD
0x677 PUSH1 0x3
0x679 SLOAD
0x67a PUSH1 0x40
0x67c DUP1
0x67d MLOAD
0x67e PUSH32 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x69f DUP2
0x6a0 MSTORE
0x6a1 PUSH1 0x1
0x6a3 PUSH1 0xa0
0x6a5 PUSH1 0x2
0x6a7 EXP
0x6a8 SUB
0x6a9 SWAP3
0x6aa DUP4
0x6ab AND
0x6ac SWAP5
0x6ad DUP2
0x6ae ADD
0x6af SWAP5
0x6b0 SWAP1
0x6b1 SWAP5
0x6b2 MSTORE
0x6b3 MLOAD
0x6b4 SWAP2
0x6b5 AND
0x6b6 SWAP2
0x6b7 PUSH4 0xf2fde38b
0x6bc SWAP2
0x6bd PUSH1 0x24
0x6bf DUP1
0x6c0 DUP4
0x6c1 ADD
0x6c2 SWAP3
0x6c3 PUSH1 0x0
0x6c5 SWAP3
0x6c6 SWAP2
0x6c7 SWAP1
0x6c8 DUP3
0x6c9 SWAP1
0x6ca SUB
0x6cb ADD
0x6cc DUP2
0x6cd DUP4
0x6ce DUP8
0x6cf DUP1
0x6d0 EXTCODESIZE
0x6d1 ISZERO
0x6d2 ISZERO
0x6d3 PUSH2 0x6d8
0x6d6 JUMPI
---
0x672: JUMPDEST 
0x673: V603 = 0x4
0x676: V604 = S[0x4]
0x677: V605 = 0x3
0x679: V606 = S[0x3]
0x67a: V607 = 0x40
0x67d: V608 = M[0x40]
0x67e: V609 = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x6a0: M[V608] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x6a1: V610 = 0x1
0x6a3: V611 = 0xa0
0x6a5: V612 = 0x2
0x6a7: V613 = EXP 0x2 0xa0
0x6a8: V614 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ab: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x6ae: V616 = ADD V608 0x4
0x6b2: M[V616] = V615
0x6b3: V617 = M[0x40]
0x6b5: V618 = AND V604 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: V619 = 0xf2fde38b
0x6bd: V620 = 0x24
0x6c1: V621 = ADD V608 0x24
0x6c3: V622 = 0x0
0x6ca: V623 = SUB V608 V617
0x6cb: V624 = ADD V623 0x24
0x6d0: V625 = EXTCODESIZE V618
0x6d1: V626 = ISZERO V625
0x6d2: V627 = ISZERO V626
0x6d3: V628 = 0x6d8
0x6d6: JUMPI 0x6d8 V627
---
Entry stack: [V12, 0x10f, 0x0, V478]
Stack pops: 0
Stack additions: [V618, 0xf2fde38b, V621, 0x0, V617, V624, V617, 0x0, V618]
Exit stack: [V12, 0x10f, 0x0, V478, V618, 0xf2fde38b, V621, 0x0, V617, V624, V617, 0x0, V618]

================================

Block 0x6d7
[0x6d7:0x6d7]
---
Predecessors: [0x672]
Successors: []
---
0x6d7 INVALID
---
0x6d7: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, V478, V618, 0xf2fde38b, V621, 0x0, V617, V624, V617, 0x0, V618]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V618, 0xf2fde38b, V621, 0x0, V617, V624, V617, 0x0, V618]

================================

Block 0x6d8
[0x6d8:0x6e3]
---
Predecessors: [0x672]
Successors: [0x6e4, 0x6e5]
---
0x6d8 JUMPDEST
0x6d9 PUSH1 0x32
0x6db GAS
0x6dc SUB
0x6dd CALL
0x6de ISZERO
0x6df ISZERO
0x6e0 PUSH2 0x6e5
0x6e3 JUMPI
---
0x6d8: JUMPDEST 
0x6d9: V629 = 0x32
0x6db: V630 = GAS
0x6dc: V631 = SUB V630 0x32
0x6dd: V632 = CALL V631 V618 0x0 V617 V624 V617 0x0
0x6de: V633 = ISZERO V632
0x6df: V634 = ISZERO V633
0x6e0: V635 = 0x6e5
0x6e3: JUMPI 0x6e5 V634
---
Entry stack: [V12, 0x10f, 0x0, V478, V618, 0xf2fde38b, V621, 0x0, V617, V624, V617, 0x0, V618]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V618, 0xf2fde38b, V621]

================================

Block 0x6e4
[0x6e4:0x6e4]
---
Predecessors: [0x6d8]
Successors: []
---
0x6e4 INVALID
---
0x6e4: INVALID 
---
Entry stack: [V12, 0x10f, 0x0, V478, V618, 0xf2fde38b, V621]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, 0x0, V478, V618, 0xf2fde38b, V621]

================================

Block 0x6e5
[0x6e5:0x6fb]
---
Predecessors: [0x6d8]
Successors: [0x6fc]
---
0x6e5 JUMPDEST
0x6e6 POP
0x6e7 POP
0x6e8 PUSH1 0x4
0x6ea DUP1
0x6eb SLOAD
0x6ec PUSH1 0x1
0x6ee PUSH1 0xa0
0x6f0 PUSH1 0x2
0x6f2 EXP
0x6f3 SUB
0x6f4 NOT
0x6f5 AND
0x6f6 SWAP1
0x6f7 SSTORE
0x6f8 POP
0x6f9 SWAP1
0x6fa POP
0x6fb DUP1
---
0x6e5: JUMPDEST 
0x6e8: V636 = 0x4
0x6eb: V637 = S[0x4]
0x6ec: V638 = 0x1
0x6ee: V639 = 0xa0
0x6f0: V640 = 0x2
0x6f2: V641 = EXP 0x2 0xa0
0x6f3: V642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f4: V643 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6f5: V644 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V637
0x6f7: S[0x4] = V644
---
Entry stack: [V12, 0x10f, 0x0, V478, V618, 0xf2fde38b, V621]
Stack pops: 5
Stack additions: [S3, S3]
Exit stack: [V12, 0x10f, V478, V478]

================================

Block 0x6fc
[0x6fc:0x6fc]
---
Predecessors: [0x6e5]
Successors: [0x6fd]
---
0x6fc JUMPDEST
---
0x6fc: JUMPDEST 
---
Entry stack: [V12, 0x10f, V478, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, V478, V478]

================================

Block 0x6fd
[0x6fd:0x6fd]
---
Predecessors: [0x6fc]
Successors: [0x6fe]
---
0x6fd JUMPDEST
---
0x6fd: JUMPDEST 
---
Entry stack: [V12, 0x10f, V478, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10f, V478, V478]

================================

Block 0x6fe
[0x6fe:0x701]
---
Predecessors: [0x6fd]
Successors: [0x10f]
---
0x6fe JUMPDEST
0x6ff POP
0x700 SWAP1
0x701 JUMP
---
0x6fe: JUMPDEST 
0x701: JUMP 0x10f
---
Entry stack: [V12, 0x10f, V478, V478]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, V478]

================================

Block 0x702
[0x702:0x718]
---
Predecessors: [0x133]
Successors: [0x719, 0x71d]
---
0x702 JUMPDEST
0x703 PUSH1 0x1
0x705 SLOAD
0x706 CALLER
0x707 PUSH1 0x1
0x709 PUSH1 0xa0
0x70b PUSH1 0x2
0x70d EXP
0x70e SUB
0x70f SWAP1
0x710 DUP2
0x711 AND
0x712 SWAP2
0x713 AND
0x714 EQ
0x715 PUSH2 0x71d
0x718 JUMPI
---
0x702: JUMPDEST 
0x703: V645 = 0x1
0x705: V646 = S[0x1]
0x706: V647 = CALLER
0x707: V648 = 0x1
0x709: V649 = 0xa0
0x70b: V650 = 0x2
0x70d: V651 = EXP 0x2 0xa0
0x70e: V652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x711: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V647
0x713: V654 = AND V646 0xffffffffffffffffffffffffffffffffffffffff
0x714: V655 = EQ V654 V653
0x715: V656 = 0x71d
0x718: JUMPI 0x71d V655
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x719
[0x719:0x71c]
---
Predecessors: [0x702]
Successors: []
---
0x719 PUSH2 0x0
0x71c JUMP
---
0x719: V657 = 0x0
0x71c: THROW 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x71d
[0x71d:0x74d]
---
Predecessors: [0x702]
Successors: [0xbd, 0x74e]
---
0x71d JUMPDEST
0x71e PUSH1 0x1
0x720 SLOAD
0x721 PUSH1 0x40
0x723 MLOAD
0x724 PUSH1 0x1
0x726 PUSH1 0xa0
0x728 PUSH1 0x2
0x72a EXP
0x72b SUB
0x72c SWAP2
0x72d DUP3
0x72e AND
0x72f SWAP2
0x730 ADDRESS
0x731 AND
0x732 BALANCE
0x733 DUP1
0x734 ISZERO
0x735 PUSH2 0x8fc
0x738 MUL
0x739 SWAP2
0x73a PUSH1 0x0
0x73c DUP2
0x73d DUP2
0x73e DUP2
0x73f DUP6
0x740 DUP9
0x741 DUP9
0x742 CALL
0x743 SWAP4
0x744 POP
0x745 POP
0x746 POP
0x747 POP
0x748 ISZERO
0x749 ISZERO
0x74a PUSH2 0xbd
0x74d JUMPI
---
0x71d: JUMPDEST 
0x71e: V658 = 0x1
0x720: V659 = S[0x1]
0x721: V660 = 0x40
0x723: V661 = M[0x40]
0x724: V662 = 0x1
0x726: V663 = 0xa0
0x728: V664 = 0x2
0x72a: V665 = EXP 0x2 0xa0
0x72b: V666 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72e: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V659
0x730: V668 = ADDRESS
0x731: V669 = AND V668 0xffffffffffffffffffffffffffffffffffffffff
0x732: V670 = BALANCE V669
0x734: V671 = ISZERO V670
0x735: V672 = 0x8fc
0x738: V673 = MUL 0x8fc V671
0x73a: V674 = 0x0
0x742: V675 = CALL V673 V667 V670 V661 0x0 V661 0x0
0x748: V676 = ISZERO V675
0x749: V677 = ISZERO V676
0x74a: V678 = 0xbd
0x74d: JUMPI 0xbd V677
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x74e
[0x74e:0x751]
---
Predecessors: [0x71d]
Successors: []
---
0x74e PUSH2 0x0
0x751 JUMP
---
0x74e: V679 = 0x0
0x751: THROW 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x752
[0x752:0x752]
---
Predecessors: []
Successors: [0x753]
---
0x752 JUMPDEST
---
0x752: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x753
[0x753:0x753]
---
Predecessors: [0x752]
Successors: [0x754]
---
0x753 JUMPDEST
---
0x753: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x754
[0x754:0x755]
---
Predecessors: [0x753]
Successors: []
Has unresolved jump.
---
0x754 JUMPDEST
0x755 JUMP
---
0x754: JUMPDEST 
0x755: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x756
[0x756:0x764]
---
Predecessors: [0x145]
Successors: [0x10f]
---
0x756 JUMPDEST
0x757 PUSH1 0x2
0x759 SLOAD
0x75a PUSH1 0x1
0x75c PUSH1 0xa0
0x75e PUSH1 0x2
0x760 EXP
0x761 SUB
0x762 AND
0x763 DUP2
0x764 JUMP
---
0x756: JUMPDEST 
0x757: V680 = 0x2
0x759: V681 = S[0x2]
0x75a: V682 = 0x1
0x75c: V683 = 0xa0
0x75e: V684 = 0x2
0x760: V685 = EXP 0x2 0xa0
0x761: V686 = SUB 0x10000000000000000000000000000000000000000 0x1
0x762: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0x764: JUMP 0x10f
---
Entry stack: [V12, 0x10f]
Stack pops: 1
Stack additions: [S0, V687]
Exit stack: [V12, 0x10f, V687]

================================

Block 0x765
[0x765:0x773]
---
Predecessors: [0x171]
Successors: [0x10f]
---
0x765 JUMPDEST
0x766 PUSH1 0x4
0x768 SLOAD
0x769 PUSH1 0x1
0x76b PUSH1 0xa0
0x76d PUSH1 0x2
0x76f EXP
0x770 SUB
0x771 AND
0x772 DUP2
0x773 JUMP
---
0x765: JUMPDEST 
0x766: V688 = 0x4
0x768: V689 = S[0x4]
0x769: V690 = 0x1
0x76b: V691 = 0xa0
0x76d: V692 = 0x2
0x76f: V693 = EXP 0x2 0xa0
0x770: V694 = SUB 0x10000000000000000000000000000000000000000 0x1
0x771: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0x773: JUMP 0x10f
---
Entry stack: [V12, 0x10f]
Stack pops: 1
Stack additions: [S0, V695]
Exit stack: [V12, 0x10f, V695]

================================

Block 0x774
[0x774:0x78a]
---
Predecessors: [0x19d]
Successors: [0x78b, 0x78f]
---
0x774 JUMPDEST
0x775 PUSH1 0x3
0x777 SLOAD
0x778 CALLER
0x779 PUSH1 0x1
0x77b PUSH1 0xa0
0x77d PUSH1 0x2
0x77f EXP
0x780 SUB
0x781 SWAP1
0x782 DUP2
0x783 AND
0x784 SWAP2
0x785 AND
0x786 EQ
0x787 PUSH2 0x78f
0x78a JUMPI
---
0x774: JUMPDEST 
0x775: V696 = 0x3
0x777: V697 = S[0x3]
0x778: V698 = CALLER
0x779: V699 = 0x1
0x77b: V700 = 0xa0
0x77d: V701 = 0x2
0x77f: V702 = EXP 0x2 0xa0
0x780: V703 = SUB 0x10000000000000000000000000000000000000000 0x1
0x783: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V698
0x785: V705 = AND V697 0xffffffffffffffffffffffffffffffffffffffff
0x786: V706 = EQ V705 V704
0x787: V707 = 0x78f
0x78a: JUMPI 0x78f V706
---
Entry stack: [V12, 0xc1, V146, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150]

================================

Block 0x78b
[0x78b:0x78e]
---
Predecessors: [0x774]
Successors: []
---
0x78b PUSH2 0x0
0x78e JUMP
---
0x78b: V708 = 0x0
0x78e: THROW 
---
Entry stack: [V12, 0xc1, V146, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150]

================================

Block 0x78f
[0x78f:0x7a1]
---
Predecessors: [0x774]
Successors: [0x7a2, 0x816]
---
0x78f JUMPDEST
0x790 PUSH1 0x4
0x792 SLOAD
0x793 PUSH1 0x1
0x795 PUSH1 0xa0
0x797 PUSH1 0x2
0x799 EXP
0x79a SUB
0x79b AND
0x79c ISZERO
0x79d DUP1
0x79e PUSH2 0x816
0x7a1 JUMPI
---
0x78f: JUMPDEST 
0x790: V709 = 0x4
0x792: V710 = S[0x4]
0x793: V711 = 0x1
0x795: V712 = 0xa0
0x797: V713 = 0x2
0x799: V714 = EXP 0x2 0xa0
0x79a: V715 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79b: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V710
0x79c: V717 = ISZERO V716
0x79e: V718 = 0x816
0x7a1: JUMPI 0x816 V717
---
Entry stack: [V12, 0xc1, V146, V150]
Stack pops: 0
Stack additions: [V717]
Exit stack: [V12, 0xc1, V146, V150, V717]

================================

Block 0x7a2
[0x7a2:0x7fb]
---
Predecessors: [0x78f]
Successors: [0x7fc, 0x7fd]
---
0x7a2 POP
0x7a3 PUSH1 0x4
0x7a5 PUSH1 0x0
0x7a7 SWAP1
0x7a8 SLOAD
0x7a9 SWAP1
0x7aa PUSH2 0x100
0x7ad EXP
0x7ae SWAP1
0x7af DIV
0x7b0 PUSH1 0x1
0x7b2 PUSH1 0xa0
0x7b4 PUSH1 0x2
0x7b6 EXP
0x7b7 SUB
0x7b8 AND
0x7b9 PUSH1 0x1
0x7bb PUSH1 0xa0
0x7bd PUSH1 0x2
0x7bf EXP
0x7c0 SUB
0x7c1 AND
0x7c2 PUSH4 0x28180023
0x7c7 PUSH1 0x0
0x7c9 PUSH1 0x40
0x7cb MLOAD
0x7cc PUSH1 0x20
0x7ce ADD
0x7cf MSTORE
0x7d0 PUSH1 0x40
0x7d2 MLOAD
0x7d3 DUP2
0x7d4 PUSH4 0xffffffff
0x7d9 AND
0x7da PUSH1 0xe0
0x7dc PUSH1 0x2
0x7de EXP
0x7df MUL
0x7e0 DUP2
0x7e1 MSTORE
0x7e2 PUSH1 0x4
0x7e4 ADD
0x7e5 DUP1
0x7e6 SWAP1
0x7e7 POP
0x7e8 PUSH1 0x20
0x7ea PUSH1 0x40
0x7ec MLOAD
0x7ed DUP1
0x7ee DUP4
0x7ef SUB
0x7f0 DUP2
0x7f1 PUSH1 0x0
0x7f3 DUP8
0x7f4 DUP1
0x7f5 EXTCODESIZE
0x7f6 ISZERO
0x7f7 ISZERO
0x7f8 PUSH2 0x7fd
0x7fb JUMPI
---
0x7a3: V719 = 0x4
0x7a5: V720 = 0x0
0x7a8: V721 = S[0x4]
0x7aa: V722 = 0x100
0x7ad: V723 = EXP 0x100 0x0
0x7af: V724 = DIV V721 0x1
0x7b0: V725 = 0x1
0x7b2: V726 = 0xa0
0x7b4: V727 = 0x2
0x7b6: V728 = EXP 0x2 0xa0
0x7b7: V729 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b8: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0x7b9: V731 = 0x1
0x7bb: V732 = 0xa0
0x7bd: V733 = 0x2
0x7bf: V734 = EXP 0x2 0xa0
0x7c0: V735 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c1: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff V730
0x7c2: V737 = 0x28180023
0x7c7: V738 = 0x0
0x7c9: V739 = 0x40
0x7cb: V740 = M[0x40]
0x7cc: V741 = 0x20
0x7ce: V742 = ADD 0x20 V740
0x7cf: M[V742] = 0x0
0x7d0: V743 = 0x40
0x7d2: V744 = M[0x40]
0x7d4: V745 = 0xffffffff
0x7d9: V746 = AND 0xffffffff 0x28180023
0x7da: V747 = 0xe0
0x7dc: V748 = 0x2
0x7de: V749 = EXP 0x2 0xe0
0x7df: V750 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x28180023
0x7e1: M[V744] = 0x2818002300000000000000000000000000000000000000000000000000000000
0x7e2: V751 = 0x4
0x7e4: V752 = ADD 0x4 V744
0x7e8: V753 = 0x20
0x7ea: V754 = 0x40
0x7ec: V755 = M[0x40]
0x7ef: V756 = SUB V752 V755
0x7f1: V757 = 0x0
0x7f5: V758 = EXTCODESIZE V736
0x7f6: V759 = ISZERO V758
0x7f7: V760 = ISZERO V759
0x7f8: V761 = 0x7fd
0x7fb: JUMPI 0x7fd V760
---
Entry stack: [V12, 0xc1, V146, V150, V717]
Stack pops: 1
Stack additions: [V736, 0x28180023, V752, 0x20, V755, V756, V755, 0x0, V736]
Exit stack: [V12, 0xc1, V146, V150, V736, 0x28180023, V752, 0x20, V755, V756, V755, 0x0, V736]

================================

Block 0x7fc
[0x7fc:0x7fc]
---
Predecessors: [0x7a2]
Successors: []
---
0x7fc INVALID
---
0x7fc: INVALID 
---
Entry stack: [V12, 0xc1, V146, V150, V736, 0x28180023, V752, 0x20, V755, V756, V755, 0x0, V736]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150, V736, 0x28180023, V752, 0x20, V755, V756, V755, 0x0, V736]

================================

Block 0x7fd
[0x7fd:0x808]
---
Predecessors: [0x7a2]
Successors: [0x809, 0x80a]
---
0x7fd JUMPDEST
0x7fe PUSH1 0x32
0x800 GAS
0x801 SUB
0x802 CALL
0x803 ISZERO
0x804 ISZERO
0x805 PUSH2 0x80a
0x808 JUMPI
---
0x7fd: JUMPDEST 
0x7fe: V762 = 0x32
0x800: V763 = GAS
0x801: V764 = SUB V763 0x32
0x802: V765 = CALL V764 V736 0x0 V755 V756 V755 0x20
0x803: V766 = ISZERO V765
0x804: V767 = ISZERO V766
0x805: V768 = 0x80a
0x808: JUMPI 0x80a V767
---
Entry stack: [V12, 0xc1, V146, V150, V736, 0x28180023, V752, 0x20, V755, V756, V755, 0x0, V736]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150, V736, 0x28180023, V752]

================================

Block 0x809
[0x809:0x809]
---
Predecessors: [0x7fd]
Successors: []
---
0x809 INVALID
---
0x809: INVALID 
---
Entry stack: [V12, 0xc1, V146, V150, V736, 0x28180023, V752]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150, V736, 0x28180023, V752]

================================

Block 0x80a
[0x80a:0x815]
---
Predecessors: [0x7fd]
Successors: [0x816]
---
0x80a JUMPDEST
0x80b POP
0x80c POP
0x80d PUSH1 0x40
0x80f MLOAD
0x810 MLOAD
0x811 NUMBER
0x812 GT
0x813 ISZERO
0x814 SWAP1
0x815 POP
---
0x80a: JUMPDEST 
0x80d: V769 = 0x40
0x80f: V770 = M[0x40]
0x810: V771 = M[V770]
0x811: V772 = NUMBER
0x812: V773 = GT V772 V771
0x813: V774 = ISZERO V773
---
Entry stack: [V12, 0xc1, V146, V150, V736, 0x28180023, V752]
Stack pops: 3
Stack additions: [V774]
Exit stack: [V12, 0xc1, V146, V150, V774]

================================

Block 0x816
[0x816:0x81b]
---
Predecessors: [0x78f, 0x80a]
Successors: [0x81c, 0x892]
---
0x816 JUMPDEST
0x817 DUP1
0x818 PUSH2 0x892
0x81b JUMPI
---
0x816: JUMPDEST 
0x818: V775 = 0x892
0x81b: JUMPI 0x892 S0
---
Entry stack: [V12, 0xc1, V146, V150, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc1, V146, V150, S0]

================================

Block 0x81c
[0x81c:0x875]
---
Predecessors: [0x816]
Successors: [0x876, 0x877]
---
0x81c POP
0x81d PUSH1 0x4
0x81f PUSH1 0x0
0x821 SWAP1
0x822 SLOAD
0x823 SWAP1
0x824 PUSH2 0x100
0x827 EXP
0x828 SWAP1
0x829 DIV
0x82a PUSH1 0x1
0x82c PUSH1 0xa0
0x82e PUSH1 0x2
0x830 EXP
0x831 SUB
0x832 AND
0x833 PUSH1 0x1
0x835 PUSH1 0xa0
0x837 PUSH1 0x2
0x839 EXP
0x83a SUB
0x83b AND
0x83c PUSH4 0x36b09474
0x841 PUSH1 0x0
0x843 PUSH1 0x40
0x845 MLOAD
0x846 PUSH1 0x20
0x848 ADD
0x849 MSTORE
0x84a PUSH1 0x40
0x84c MLOAD
0x84d DUP2
0x84e PUSH4 0xffffffff
0x853 AND
0x854 PUSH1 0xe0
0x856 PUSH1 0x2
0x858 EXP
0x859 MUL
0x85a DUP2
0x85b MSTORE
0x85c PUSH1 0x4
0x85e ADD
0x85f DUP1
0x860 SWAP1
0x861 POP
0x862 PUSH1 0x20
0x864 PUSH1 0x40
0x866 MLOAD
0x867 DUP1
0x868 DUP4
0x869 SUB
0x86a DUP2
0x86b PUSH1 0x0
0x86d DUP8
0x86e DUP1
0x86f EXTCODESIZE
0x870 ISZERO
0x871 ISZERO
0x872 PUSH2 0x877
0x875 JUMPI
---
0x81d: V776 = 0x4
0x81f: V777 = 0x0
0x822: V778 = S[0x4]
0x824: V779 = 0x100
0x827: V780 = EXP 0x100 0x0
0x829: V781 = DIV V778 0x1
0x82a: V782 = 0x1
0x82c: V783 = 0xa0
0x82e: V784 = 0x2
0x830: V785 = EXP 0x2 0xa0
0x831: V786 = SUB 0x10000000000000000000000000000000000000000 0x1
0x832: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0x833: V788 = 0x1
0x835: V789 = 0xa0
0x837: V790 = 0x2
0x839: V791 = EXP 0x2 0xa0
0x83a: V792 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83b: V793 = AND 0xffffffffffffffffffffffffffffffffffffffff V787
0x83c: V794 = 0x36b09474
0x841: V795 = 0x0
0x843: V796 = 0x40
0x845: V797 = M[0x40]
0x846: V798 = 0x20
0x848: V799 = ADD 0x20 V797
0x849: M[V799] = 0x0
0x84a: V800 = 0x40
0x84c: V801 = M[0x40]
0x84e: V802 = 0xffffffff
0x853: V803 = AND 0xffffffff 0x36b09474
0x854: V804 = 0xe0
0x856: V805 = 0x2
0x858: V806 = EXP 0x2 0xe0
0x859: V807 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x36b09474
0x85b: M[V801] = 0x36b0947400000000000000000000000000000000000000000000000000000000
0x85c: V808 = 0x4
0x85e: V809 = ADD 0x4 V801
0x862: V810 = 0x20
0x864: V811 = 0x40
0x866: V812 = M[0x40]
0x869: V813 = SUB V809 V812
0x86b: V814 = 0x0
0x86f: V815 = EXTCODESIZE V793
0x870: V816 = ISZERO V815
0x871: V817 = ISZERO V816
0x872: V818 = 0x877
0x875: JUMPI 0x877 V817
---
Entry stack: [V12, 0xc1, V146, V150, S0]
Stack pops: 1
Stack additions: [V793, 0x36b09474, V809, 0x20, V812, V813, V812, 0x0, V793]
Exit stack: [V12, 0xc1, V146, V150, V793, 0x36b09474, V809, 0x20, V812, V813, V812, 0x0, V793]

================================

Block 0x876
[0x876:0x876]
---
Predecessors: [0x81c]
Successors: []
---
0x876 INVALID
---
0x876: INVALID 
---
Entry stack: [V12, 0xc1, V146, V150, V793, 0x36b09474, V809, 0x20, V812, V813, V812, 0x0, V793]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150, V793, 0x36b09474, V809, 0x20, V812, V813, V812, 0x0, V793]

================================

Block 0x877
[0x877:0x882]
---
Predecessors: [0x81c]
Successors: [0x883, 0x884]
---
0x877 JUMPDEST
0x878 PUSH1 0x32
0x87a GAS
0x87b SUB
0x87c CALL
0x87d ISZERO
0x87e ISZERO
0x87f PUSH2 0x884
0x882 JUMPI
---
0x877: JUMPDEST 
0x878: V819 = 0x32
0x87a: V820 = GAS
0x87b: V821 = SUB V820 0x32
0x87c: V822 = CALL V821 V793 0x0 V812 V813 V812 0x20
0x87d: V823 = ISZERO V822
0x87e: V824 = ISZERO V823
0x87f: V825 = 0x884
0x882: JUMPI 0x884 V824
---
Entry stack: [V12, 0xc1, V146, V150, V793, 0x36b09474, V809, 0x20, V812, V813, V812, 0x0, V793]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150, V793, 0x36b09474, V809]

================================

Block 0x883
[0x883:0x883]
---
Predecessors: [0x877]
Successors: []
---
0x883 INVALID
---
0x883: INVALID 
---
Entry stack: [V12, 0xc1, V146, V150, V793, 0x36b09474, V809]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150, V793, 0x36b09474, V809]

================================

Block 0x884
[0x884:0x891]
---
Predecessors: [0x877]
Successors: [0x892]
---
0x884 JUMPDEST
0x885 POP
0x886 POP
0x887 PUSH1 0x40
0x889 MLOAD
0x88a MLOAD
0x88b ISZERO
0x88c ISZERO
0x88d PUSH1 0x1
0x88f EQ
0x890 SWAP1
0x891 POP
---
0x884: JUMPDEST 
0x887: V826 = 0x40
0x889: V827 = M[0x40]
0x88a: V828 = M[V827]
0x88b: V829 = ISZERO V828
0x88c: V830 = ISZERO V829
0x88d: V831 = 0x1
0x88f: V832 = EQ 0x1 V830
---
Entry stack: [V12, 0xc1, V146, V150, V793, 0x36b09474, V809]
Stack pops: 3
Stack additions: [V832]
Exit stack: [V12, 0xc1, V146, V150, V832]

================================

Block 0x892
[0x892:0x897]
---
Predecessors: [0x816, 0x884]
Successors: [0x898, 0x89c]
---
0x892 JUMPDEST
0x893 ISZERO
0x894 PUSH2 0x89c
0x897 JUMPI
---
0x892: JUMPDEST 
0x893: V833 = ISZERO S0
0x894: V834 = 0x89c
0x897: JUMPI 0x89c V833
---
Entry stack: [V12, 0xc1, V146, V150, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150]

================================

Block 0x898
[0x898:0x89b]
---
Predecessors: [0x892]
Successors: []
---
0x898 PUSH2 0x0
0x89b JUMP
---
0x898: V835 = 0x0
0x89b: THROW 
---
Entry stack: [V12, 0xc1, V146, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150]

================================

Block 0x89c
[0x89c:0x903]
---
Predecessors: [0x892]
Successors: [0x904, 0x905]
---
0x89c JUMPDEST
0x89d PUSH1 0x4
0x89f DUP1
0x8a0 SLOAD
0x8a1 PUSH1 0x40
0x8a3 DUP1
0x8a4 MLOAD
0x8a5 PUSH32 0x825c3e3600000000000000000000000000000000000000000000000000000000
0x8c6 DUP2
0x8c7 MSTORE
0x8c8 SWAP3
0x8c9 DUP4
0x8ca ADD
0x8cb DUP6
0x8cc SWAP1
0x8cd MSTORE
0x8ce PUSH1 0xff
0x8d0 DUP5
0x8d1 AND
0x8d2 PUSH1 0x24
0x8d4 DUP5
0x8d5 ADD
0x8d6 MSTORE
0x8d7 MLOAD
0x8d8 PUSH1 0x1
0x8da PUSH1 0xa0
0x8dc PUSH1 0x2
0x8de EXP
0x8df SUB
0x8e0 SWAP1
0x8e1 SWAP2
0x8e2 AND
0x8e3 SWAP2
0x8e4 PUSH4 0x825c3e36
0x8e9 SWAP2
0x8ea PUSH1 0x44
0x8ec DUP1
0x8ed DUP4
0x8ee ADD
0x8ef SWAP3
0x8f0 PUSH1 0x0
0x8f2 SWAP3
0x8f3 SWAP2
0x8f4 SWAP1
0x8f5 DUP3
0x8f6 SWAP1
0x8f7 SUB
0x8f8 ADD
0x8f9 DUP2
0x8fa DUP4
0x8fb DUP8
0x8fc DUP1
0x8fd EXTCODESIZE
0x8fe ISZERO
0x8ff ISZERO
0x900 PUSH2 0x905
0x903 JUMPI
---
0x89c: JUMPDEST 
0x89d: V836 = 0x4
0x8a0: V837 = S[0x4]
0x8a1: V838 = 0x40
0x8a4: V839 = M[0x40]
0x8a5: V840 = 0x825c3e3600000000000000000000000000000000000000000000000000000000
0x8c7: M[V839] = 0x825c3e3600000000000000000000000000000000000000000000000000000000
0x8ca: V841 = ADD V839 0x4
0x8cd: M[V841] = V146
0x8ce: V842 = 0xff
0x8d1: V843 = AND V150 0xff
0x8d2: V844 = 0x24
0x8d5: V845 = ADD V839 0x24
0x8d6: M[V845] = V843
0x8d7: V846 = M[0x40]
0x8d8: V847 = 0x1
0x8da: V848 = 0xa0
0x8dc: V849 = 0x2
0x8de: V850 = EXP 0x2 0xa0
0x8df: V851 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e2: V852 = AND V837 0xffffffffffffffffffffffffffffffffffffffff
0x8e4: V853 = 0x825c3e36
0x8ea: V854 = 0x44
0x8ee: V855 = ADD V839 0x44
0x8f0: V856 = 0x0
0x8f7: V857 = SUB V839 V846
0x8f8: V858 = ADD V857 0x44
0x8fd: V859 = EXTCODESIZE V852
0x8fe: V860 = ISZERO V859
0x8ff: V861 = ISZERO V860
0x900: V862 = 0x905
0x903: JUMPI 0x905 V861
---
Entry stack: [V12, 0xc1, V146, V150]
Stack pops: 2
Stack additions: [S1, S0, V852, 0x825c3e36, V855, 0x0, V846, V858, V846, 0x0, V852]
Exit stack: [V12, 0xc1, V146, V150, V852, 0x825c3e36, V855, 0x0, V846, V858, V846, 0x0, V852]

================================

Block 0x904
[0x904:0x904]
---
Predecessors: [0x89c]
Successors: []
---
0x904 INVALID
---
0x904: INVALID 
---
Entry stack: [V12, 0xc1, V146, V150, V852, 0x825c3e36, V855, 0x0, V846, V858, V846, 0x0, V852]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150, V852, 0x825c3e36, V855, 0x0, V846, V858, V846, 0x0, V852]

================================

Block 0x905
[0x905:0x910]
---
Predecessors: [0x89c]
Successors: [0x911, 0x912]
---
0x905 JUMPDEST
0x906 PUSH1 0x32
0x908 GAS
0x909 SUB
0x90a CALL
0x90b ISZERO
0x90c ISZERO
0x90d PUSH2 0x912
0x910 JUMPI
---
0x905: JUMPDEST 
0x906: V863 = 0x32
0x908: V864 = GAS
0x909: V865 = SUB V864 0x32
0x90a: V866 = CALL V865 V852 0x0 V846 V858 V846 0x0
0x90b: V867 = ISZERO V866
0x90c: V868 = ISZERO V867
0x90d: V869 = 0x912
0x910: JUMPI 0x912 V868
---
Entry stack: [V12, 0xc1, V146, V150, V852, 0x825c3e36, V855, 0x0, V846, V858, V846, 0x0, V852]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150, V852, 0x825c3e36, V855]

================================

Block 0x911
[0x911:0x911]
---
Predecessors: [0x905]
Successors: []
---
0x911 INVALID
---
0x911: INVALID 
---
Entry stack: [V12, 0xc1, V146, V150, V852, 0x825c3e36, V855]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150, V852, 0x825c3e36, V855]

================================

Block 0x912
[0x912:0x915]
---
Predecessors: [0x905]
Successors: [0x916]
---
0x912 JUMPDEST
0x913 POP
0x914 POP
0x915 POP
---
0x912: JUMPDEST 
---
Entry stack: [V12, 0xc1, V146, V150, V852, 0x825c3e36, V855]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150]

================================

Block 0x916
[0x916:0x916]
---
Predecessors: [0x912]
Successors: [0x917]
---
0x916 JUMPDEST
---
0x916: JUMPDEST 
---
Entry stack: [V12, 0xc1, V146, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150]

================================

Block 0x917
[0x917:0x917]
---
Predecessors: [0x916]
Successors: [0x918]
---
0x917 JUMPDEST
---
0x917: JUMPDEST 
---
Entry stack: [V12, 0xc1, V146, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V146, V150]

================================

Block 0x918
[0x918:0x91b]
---
Predecessors: [0x917]
Successors: [0xc1]
---
0x918 JUMPDEST
0x919 POP
0x91a POP
0x91b JUMP
---
0x918: JUMPDEST 
0x91b: JUMP 0xc1
---
Entry stack: [V12, 0xc1, V146, V150]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x91c
[0x91c:0x932]
---
Predecessors: [0x1b0]
Successors: [0x933, 0x937]
---
0x91c JUMPDEST
0x91d PUSH1 0x1
0x91f SLOAD
0x920 CALLER
0x921 PUSH1 0x1
0x923 PUSH1 0xa0
0x925 PUSH1 0x2
0x927 EXP
0x928 SUB
0x929 SWAP1
0x92a DUP2
0x92b AND
0x92c SWAP2
0x92d AND
0x92e EQ
0x92f PUSH2 0x937
0x932 JUMPI
---
0x91c: JUMPDEST 
0x91d: V870 = 0x1
0x91f: V871 = S[0x1]
0x920: V872 = CALLER
0x921: V873 = 0x1
0x923: V874 = 0xa0
0x925: V875 = 0x2
0x927: V876 = EXP 0x2 0xa0
0x928: V877 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92b: V878 = AND 0xffffffffffffffffffffffffffffffffffffffff V872
0x92d: V879 = AND V871 0xffffffffffffffffffffffffffffffffffffffff
0x92e: V880 = EQ V879 V878
0x92f: V881 = 0x937
0x932: JUMPI 0x937 V880
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x933
[0x933:0x936]
---
Predecessors: [0x91c]
Successors: []
---
0x933 PUSH2 0x0
0x936 JUMP
---
0x933: V882 = 0x0
0x936: THROW 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x937
[0x937:0x948]
---
Predecessors: [0x91c]
Successors: [0xbd, 0x949]
---
0x937 JUMPDEST
0x938 PUSH1 0x4
0x93a SLOAD
0x93b PUSH1 0x1
0x93d PUSH1 0xa0
0x93f PUSH1 0x2
0x941 EXP
0x942 SUB
0x943 AND
0x944 ISZERO
0x945 PUSH2 0xbd
0x948 JUMPI
---
0x937: JUMPDEST 
0x938: V883 = 0x4
0x93a: V884 = S[0x4]
0x93b: V885 = 0x1
0x93d: V886 = 0xa0
0x93f: V887 = 0x2
0x941: V888 = EXP 0x2 0xa0
0x942: V889 = SUB 0x10000000000000000000000000000000000000000 0x1
0x943: V890 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0x944: V891 = ISZERO V890
0x945: V892 = 0xbd
0x948: JUMPI 0xbd V891
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x949
[0x949:0x94c]
---
Predecessors: [0x937]
Successors: []
---
0x949 PUSH2 0x0
0x94c JUMP
---
0x949: V893 = 0x0
0x94c: THROW 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0x94d
[0x94d:0x94d]
---
Predecessors: []
Successors: [0x94e]
---
0x94d JUMPDEST
---
0x94d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x94e
[0x94e:0x94e]
---
Predecessors: [0x94d]
Successors: [0x94f]
---
0x94e JUMPDEST
---
0x94e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x94f
[0x94f:0x94f]
---
Predecessors: [0x94e]
Successors: [0x950]
---
0x94f JUMPDEST
---
0x94f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x950
[0x950:0x951]
---
Predecessors: [0x94f]
Successors: []
Has unresolved jump.
---
0x950 JUMPDEST
0x951 JUMP
---
0x950: JUMPDEST 
0x951: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x952
[0x952:0x960]
---
Predecessors: [0x1c2]
Successors: [0x10f]
---
0x952 JUMPDEST
0x953 PUSH1 0x3
0x955 SLOAD
0x956 PUSH1 0x1
0x958 PUSH1 0xa0
0x95a PUSH1 0x2
0x95c EXP
0x95d SUB
0x95e AND
0x95f DUP2
0x960 JUMP
---
0x952: JUMPDEST 
0x953: V894 = 0x3
0x955: V895 = S[0x3]
0x956: V896 = 0x1
0x958: V897 = 0xa0
0x95a: V898 = 0x2
0x95c: V899 = EXP 0x2 0xa0
0x95d: V900 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95e: V901 = AND 0xffffffffffffffffffffffffffffffffffffffff V895
0x960: JUMP 0x10f
---
Entry stack: [V12, 0x10f]
Stack pops: 1
Stack additions: [S0, V901]
Exit stack: [V12, 0x10f, V901]

================================

Block 0x961
[0x961:0x977]
---
Predecessors: [0x1ee]
Successors: [0x978, 0x97c]
---
0x961 JUMPDEST
0x962 PUSH1 0x3
0x964 SLOAD
0x965 CALLER
0x966 PUSH1 0x1
0x968 PUSH1 0xa0
0x96a PUSH1 0x2
0x96c EXP
0x96d SUB
0x96e SWAP1
0x96f DUP2
0x970 AND
0x971 SWAP2
0x972 AND
0x973 EQ
0x974 PUSH2 0x97c
0x977 JUMPI
---
0x961: JUMPDEST 
0x962: V902 = 0x3
0x964: V903 = S[0x3]
0x965: V904 = CALLER
0x966: V905 = 0x1
0x968: V906 = 0xa0
0x96a: V907 = 0x2
0x96c: V908 = EXP 0x2 0xa0
0x96d: V909 = SUB 0x10000000000000000000000000000000000000000 0x1
0x970: V910 = AND 0xffffffffffffffffffffffffffffffffffffffff V904
0x972: V911 = AND V903 0xffffffffffffffffffffffffffffffffffffffff
0x973: V912 = EQ V911 V910
0x974: V913 = 0x97c
0x977: JUMPI 0x97c V912
---
Entry stack: [V12, 0xc1, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V182]

================================

Block 0x978
[0x978:0x97b]
---
Predecessors: [0x961]
Successors: []
---
0x978 PUSH2 0x0
0x97b JUMP
---
0x978: V914 = 0x0
0x97b: THROW 
---
Entry stack: [V12, 0xc1, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V182]

================================

Block 0x97c
[0x97c:0x98d]
---
Predecessors: [0x961]
Successors: [0x98e, 0x992]
---
0x97c JUMPDEST
0x97d PUSH1 0x4
0x97f SLOAD
0x980 PUSH1 0x1
0x982 PUSH1 0xa0
0x984 PUSH1 0x2
0x986 EXP
0x987 SUB
0x988 AND
0x989 ISZERO
0x98a PUSH2 0x992
0x98d JUMPI
---
0x97c: JUMPDEST 
0x97d: V915 = 0x4
0x97f: V916 = S[0x4]
0x980: V917 = 0x1
0x982: V918 = 0xa0
0x984: V919 = 0x2
0x986: V920 = EXP 0x2 0xa0
0x987: V921 = SUB 0x10000000000000000000000000000000000000000 0x1
0x988: V922 = AND 0xffffffffffffffffffffffffffffffffffffffff V916
0x989: V923 = ISZERO V922
0x98a: V924 = 0x992
0x98d: JUMPI 0x992 V923
---
Entry stack: [V12, 0xc1, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V182]

================================

Block 0x98e
[0x98e:0x991]
---
Predecessors: [0x97c]
Successors: []
---
0x98e PUSH2 0x0
0x991 JUMP
---
0x98e: V925 = 0x0
0x991: THROW 
---
Entry stack: [V12, 0xc1, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V182]

================================

Block 0x992
[0x992:0x9ad]
---
Predecessors: [0x97c]
Successors: [0x9ae]
---
0x992 JUMPDEST
0x993 PUSH1 0x3
0x995 DUP1
0x996 SLOAD
0x997 PUSH1 0x1
0x999 PUSH1 0xa0
0x99b PUSH1 0x2
0x99d EXP
0x99e SUB
0x99f NOT
0x9a0 AND
0x9a1 PUSH1 0x1
0x9a3 PUSH1 0xa0
0x9a5 PUSH1 0x2
0x9a7 EXP
0x9a8 SUB
0x9a9 DUP4
0x9aa AND
0x9ab OR
0x9ac SWAP1
0x9ad SSTORE
---
0x992: JUMPDEST 
0x993: V926 = 0x3
0x996: V927 = S[0x3]
0x997: V928 = 0x1
0x999: V929 = 0xa0
0x99b: V930 = 0x2
0x99d: V931 = EXP 0x2 0xa0
0x99e: V932 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99f: V933 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9a0: V934 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V927
0x9a1: V935 = 0x1
0x9a3: V936 = 0xa0
0x9a5: V937 = 0x2
0x9a7: V938 = EXP 0x2 0xa0
0x9a8: V939 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9aa: V940 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x9ab: V941 = OR V940 V934
0x9ad: S[0x3] = V941
---
Entry stack: [V12, 0xc1, V182]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc1, V182]

================================

Block 0x9ae
[0x9ae:0x9ae]
---
Predecessors: [0x992]
Successors: [0x9af]
---
0x9ae JUMPDEST
---
0x9ae: JUMPDEST 
---
Entry stack: [V12, 0xc1, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V182]

================================

Block 0x9af
[0x9af:0x9af]
---
Predecessors: [0x9ae]
Successors: [0x9b0]
---
0x9af JUMPDEST
---
0x9af: JUMPDEST 
---
Entry stack: [V12, 0xc1, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V182]

================================

Block 0x9b0
[0x9b0:0x9b2]
---
Predecessors: [0x9af]
Successors: [0xc1]
---
0x9b0 JUMPDEST
0x9b1 POP
0x9b2 JUMP
---
0x9b0: JUMPDEST 
0x9b2: JUMP 0xc1
---
Entry stack: [V12, 0xc1, V182]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b3
[0x9b3:0x9c9]
---
Predecessors: [0x20c]
Successors: [0x9ca, 0x9ce]
---
0x9b3 JUMPDEST
0x9b4 PUSH1 0x1
0x9b6 SLOAD
0x9b7 CALLER
0x9b8 PUSH1 0x1
0x9ba PUSH1 0xa0
0x9bc PUSH1 0x2
0x9be EXP
0x9bf SUB
0x9c0 SWAP1
0x9c1 DUP2
0x9c2 AND
0x9c3 SWAP2
0x9c4 AND
0x9c5 EQ
0x9c6 PUSH2 0x9ce
0x9c9 JUMPI
---
0x9b3: JUMPDEST 
0x9b4: V942 = 0x1
0x9b6: V943 = S[0x1]
0x9b7: V944 = CALLER
0x9b8: V945 = 0x1
0x9ba: V946 = 0xa0
0x9bc: V947 = 0x2
0x9be: V948 = EXP 0x2 0xa0
0x9bf: V949 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c2: V950 = AND 0xffffffffffffffffffffffffffffffffffffffff V944
0x9c4: V951 = AND V943 0xffffffffffffffffffffffffffffffffffffffff
0x9c5: V952 = EQ V951 V950
0x9c6: V953 = 0x9ce
0x9c9: JUMPI 0x9ce V952
---
Entry stack: [V12, 0xc1, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V195]

================================

Block 0x9ca
[0x9ca:0x9cd]
---
Predecessors: [0x9b3]
Successors: []
---
0x9ca PUSH2 0x0
0x9cd JUMP
---
0x9ca: V954 = 0x0
0x9cd: THROW 
---
Entry stack: [V12, 0xc1, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V195]

================================

Block 0x9ce
[0x9ce:0x9e9]
---
Predecessors: [0x9b3]
Successors: [0x9ea]
---
0x9ce JUMPDEST
0x9cf PUSH1 0x1
0x9d1 DUP1
0x9d2 SLOAD
0x9d3 PUSH1 0x1
0x9d5 PUSH1 0xa0
0x9d7 PUSH1 0x2
0x9d9 EXP
0x9da SUB
0x9db NOT
0x9dc AND
0x9dd PUSH1 0x1
0x9df PUSH1 0xa0
0x9e1 PUSH1 0x2
0x9e3 EXP
0x9e4 SUB
0x9e5 DUP4
0x9e6 AND
0x9e7 OR
0x9e8 SWAP1
0x9e9 SSTORE
---
0x9ce: JUMPDEST 
0x9cf: V955 = 0x1
0x9d2: V956 = S[0x1]
0x9d3: V957 = 0x1
0x9d5: V958 = 0xa0
0x9d7: V959 = 0x2
0x9d9: V960 = EXP 0x2 0xa0
0x9da: V961 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9db: V962 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9dc: V963 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V956
0x9dd: V964 = 0x1
0x9df: V965 = 0xa0
0x9e1: V966 = 0x2
0x9e3: V967 = EXP 0x2 0xa0
0x9e4: V968 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e6: V969 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x9e7: V970 = OR V969 V963
0x9e9: S[0x1] = V970
---
Entry stack: [V12, 0xc1, V195]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc1, V195]

================================

Block 0x9ea
[0x9ea:0x9ea]
---
Predecessors: [0x9ce]
Successors: [0x9eb]
---
0x9ea JUMPDEST
---
0x9ea: JUMPDEST 
---
Entry stack: [V12, 0xc1, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1, V195]

================================

Block 0x9eb
[0x9eb:0x9ed]
---
Predecessors: [0x9ea]
Successors: [0xc1]
---
0x9eb JUMPDEST
0x9ec POP
0x9ed JUMP
---
0x9eb: JUMPDEST 
0x9ed: JUMP 0xc1
---
Entry stack: [V12, 0xc1, V195]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x9ee
[0x9ee:0xa04]
---
Predecessors: [0x22a]
Successors: [0xa05, 0xa09]
---
0x9ee JUMPDEST
0x9ef PUSH1 0x1
0x9f1 SLOAD
0x9f2 CALLER
0x9f3 PUSH1 0x1
0x9f5 PUSH1 0xa0
0x9f7 PUSH1 0x2
0x9f9 EXP
0x9fa SUB
0x9fb SWAP1
0x9fc DUP2
0x9fd AND
0x9fe SWAP2
0x9ff AND
0xa00 EQ
0xa01 PUSH2 0xa09
0xa04 JUMPI
---
0x9ee: JUMPDEST 
0x9ef: V971 = 0x1
0x9f1: V972 = S[0x1]
0x9f2: V973 = CALLER
0x9f3: V974 = 0x1
0x9f5: V975 = 0xa0
0x9f7: V976 = 0x2
0x9f9: V977 = EXP 0x2 0xa0
0x9fa: V978 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fd: V979 = AND 0xffffffffffffffffffffffffffffffffffffffff V973
0x9ff: V980 = AND V972 0xffffffffffffffffffffffffffffffffffffffff
0xa00: V981 = EQ V980 V979
0xa01: V982 = 0xa09
0xa04: JUMPI 0xa09 V981
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0xa05
[0xa05:0xa08]
---
Predecessors: [0x9ee]
Successors: []
---
0xa05 PUSH2 0x0
0xa08 JUMP
---
0xa05: V983 = 0x0
0xa08: THROW 
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0xa09
[0xa09:0xa16]
---
Predecessors: [0x9ee]
Successors: []
---
0xa09 JUMPDEST
0xa0a PUSH1 0x1
0xa0c SLOAD
0xa0d PUSH1 0x1
0xa0f PUSH1 0xa0
0xa11 PUSH1 0x2
0xa13 EXP
0xa14 SUB
0xa15 AND
0xa16 SELFDESTRUCT
---
0xa09: JUMPDEST 
0xa0a: V984 = 0x1
0xa0c: V985 = S[0x1]
0xa0d: V986 = 0x1
0xa0f: V987 = 0xa0
0xa11: V988 = 0x2
0xa13: V989 = EXP 0x2 0xa0
0xa14: V990 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa15: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff V985
0xa16: SELFDESTRUCT V991
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc1]

================================

Block 0xa17
[0xa17:0xa17]
---
Predecessors: []
Successors: [0xa18]
---
0xa17 JUMPDEST
---
0xa17: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa18
[0xa18:0xa55]
---
Predecessors: [0xa17]
Successors: []
---
0xa18 JUMPDEST
0xa19 JUMP
0xa1a STOP
0xa1b LOG1
0xa1c PUSH6 0x627a7a723058
0xa23 SHA3
0xa24 MISSING 0x1e
0xa25 PUSH7 0xd13d85b48b5816
0xa2d MISSING 0x28
0xa2e MISSING 0xc0
0xa2f CALLDATASIZE
0xa30 GASLIMIT
0xa31 MISSING 0xf7
0xa32 MISSING 0xd
0xa33 DUP12
0xa34 ADD
0xa35 MISSING 0xf9
0xa36 MISSING 0xcc
0xa37 REVERT
0xa38 MISSING 0xd4
0xa39 GAS
0xa3a CALLDATASIZE
0xa3b PUSH26 0xe7f8b06dc9fa7b40029
---
0xa18: JUMPDEST 
0xa19: JUMP S0
0xa1a: STOP 
0xa1b: LOG S0 S1 S2
0xa1c: V992 = 0x627a7a723058
0xa23: V993 = SHA3 0x627a7a723058 S3
0xa24: MISSING 0x1e
0xa25: V994 = 0xd13d85b48b5816
0xa2d: MISSING 0x28
0xa2e: MISSING 0xc0
0xa2f: V995 = CALLDATASIZE
0xa30: V996 = GASLIMIT
0xa31: MISSING 0xf7
0xa32: MISSING 0xd
0xa34: V997 = ADD S11 S0
0xa35: MISSING 0xf9
0xa36: MISSING 0xcc
0xa37: REVERT S0 S1
0xa38: MISSING 0xd4
0xa39: V998 = GAS
0xa3a: V999 = CALLDATASIZE
0xa3b: V1000 = 0xe7f8b06dc9fa7b40029
---
Entry stack: []
Stack pops: 1504
Stack additions: [0xe7f8b06dc9fa7b40029, V999, V998]
Exit stack: []

================================

Function 0:
Public function signature: 0xf6e40c3
Entry block: 0xc3
Exit block: 0xc1
Body: 0xc1, 0xc3, 0xca, 0xcb, 0x234, 0x24b, 0x24f, 0x261, 0x265, 0x279, 0x2d6, 0x2d7, 0x2e4, 0x2e5, 0x312, 0x36d, 0x36e, 0x37a, 0x37b, 0x3a2, 0x3a3, 0x3a4, 0x3a5

Function 1:
Public function signature: 0x1c0463de
Entry block: 0xdb
Exit block: 0xeb
Body: 0xdb, 0xe2, 0xe3, 0xeb, 0x3a9, 0x3c0, 0x3d5, 0x3d8

Function 2:
Public function signature: 0x1e820325
Entry block: 0xff
Exit block: 0x10f
Body: 0xff, 0x106, 0x107, 0x10f, 0x3db, 0x3f7, 0x3fb, 0x40e, 0x468, 0x469, 0x475, 0x476, 0x480, 0x486, 0x48a, 0x4f1, 0x4f2, 0x4fe, 0x4ff, 0x50e, 0x564, 0x565, 0x571, 0x572, 0x5db, 0x5dc, 0x5e8, 0x5e9, 0x5f1, 0x609, 0x65f, 0x660, 0x66c, 0x66d, 0x671, 0x672, 0x6d7, 0x6d8, 0x6e4, 0x6e5, 0x6fc, 0x6fd, 0x6fe

Function 3:
Public function signature: 0x3ccfd60b
Entry block: 0x12b
Exit block: 0xc1
Body: 0xbd, 0xbe, 0xbf, 0xc1, 0x12b, 0x132, 0x133, 0x702, 0x719, 0x71d, 0x74e

Function 4:
Public function signature: 0x5485868a
Entry block: 0x13d
Exit block: 0x10f
Body: 0x10f, 0x13d, 0x144, 0x145, 0x756

Function 5:
Public function signature: 0x8a19c8bc
Entry block: 0x169
Exit block: 0x10f
Body: 0x10f, 0x169, 0x170, 0x171, 0x765

Function 6:
Public function signature: 0xb3ca07d1
Entry block: 0x195
Exit block: 0xc1
Body: 0xc1, 0x195, 0x19c, 0x19d, 0x774, 0x78b, 0x78f, 0x7a2, 0x7fc, 0x7fd, 0x809, 0x80a, 0x816, 0x81c, 0x876, 0x877, 0x883, 0x884, 0x892, 0x898, 0x89c, 0x904, 0x905, 0x911, 0x912, 0x916, 0x917, 0x918

Function 7:
Public function signature: 0xd0e30db0
Entry block: 0x1b0
Exit block: 0xc1
Body: 0xbd, 0xbe, 0xbf, 0xc1, 0x1b0, 0x91c, 0x933, 0x937, 0x949

Function 8:
Public function signature: 0xe66f53b7
Entry block: 0x1ba
Exit block: 0x10f
Body: 0x10f, 0x1ba, 0x1c1, 0x1c2, 0x952

Function 9:
Public function signature: 0xe90956cf
Entry block: 0x1e6
Exit block: 0xc1
Body: 0xc1, 0x1e6, 0x1ed, 0x1ee, 0x961, 0x978, 0x97c, 0x98e, 0x992, 0x9ae, 0x9af, 0x9b0

Function 10:
Public function signature: 0xf2fde38b
Entry block: 0x204
Exit block: 0xc1
Body: 0xc1, 0x204, 0x20b, 0x20c, 0x9b3, 0x9ca, 0x9ce, 0x9ea, 0x9eb

Function 11:
Public function signature: 0xfc0e74d1
Entry block: 0x222
Exit block: 0xa09
Body: 0x222, 0x229, 0x22a, 0x9ee, 0xa05, 0xa09

Function 12:
Public fallback function
Entry block: 0x9e
Exit block: 0xc1
Body: 0x9e, 0xa2, 0xb9, 0xbd, 0xbe, 0xbf, 0xc1

