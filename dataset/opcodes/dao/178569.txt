Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa9
0xa: JUMPI 0xa9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xad]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xa3cb72e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xad
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xa3cb72e
0x20: V14 = EQ V12 0xa3cb72e
0x21: V15 = 0xad
0x24: JUMPI 0xad V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x13e]
---
0x25 DUP1
0x26 PUSH4 0x12065fe0
0x2b EQ
0x2c PUSH2 0x13e
0x2f JUMPI
---
0x26: V16 = 0x12065fe0
0x2b: V17 = EQ 0x12065fe0 V12
0x2c: V18 = 0x13e
0x2f: JUMPI 0x13e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x163]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0x163
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0x163
0x3a: JUMPI 0x163 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x17b]
---
0x3b DUP1
0x3c PUSH4 0x3aecd0e3
0x41 EQ
0x42 PUSH2 0x17b
0x45 JUMPI
---
0x3c: V22 = 0x3aecd0e3
0x41: V23 = EQ 0x3aecd0e3 V12
0x42: V24 = 0x17b
0x45: JUMPI 0x17b V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1ac]
---
0x46 DUP1
0x47 PUSH4 0x477bddaa
0x4c EQ
0x4d PUSH2 0x1ac
0x50 JUMPI
---
0x47: V25 = 0x477bddaa
0x4c: V26 = EQ 0x477bddaa V12
0x4d: V27 = 0x1ac
0x50: JUMPI 0x1ac V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1cd]
---
0x51 DUP1
0x52 PUSH4 0x5256bb86
0x57 EQ
0x58 PUSH2 0x1cd
0x5b JUMPI
---
0x52: V28 = 0x5256bb86
0x57: V29 = EQ 0x5256bb86 V12
0x58: V30 = 0x1cd
0x5b: JUMPI 0x1cd V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x21e]
---
0x5c DUP1
0x5d PUSH4 0x58d2d81a
0x62 EQ
0x63 PUSH2 0x21e
0x66 JUMPI
---
0x5d: V31 = 0x58d2d81a
0x62: V32 = EQ 0x58d2d81a V12
0x63: V33 = 0x21e
0x66: JUMPI 0x21e V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x281]
---
0x67 DUP1
0x68 PUSH4 0x5fd8c710
0x6d EQ
0x6e PUSH2 0x281
0x71 JUMPI
---
0x68: V34 = 0x5fd8c710
0x6d: V35 = EQ 0x5fd8c710 V12
0x6e: V36 = 0x281
0x71: JUMPI 0x281 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x296]
---
0x72 DUP1
0x73 PUSH4 0x757740f9
0x78 EQ
0x79 PUSH2 0x296
0x7c JUMPI
---
0x73: V37 = 0x757740f9
0x78: V38 = EQ 0x757740f9 V12
0x79: V39 = 0x296
0x7c: JUMPI 0x296 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2f9]
---
0x7d DUP1
0x7e PUSH4 0x853828b6
0x83 EQ
0x84 PUSH2 0x2f9
0x87 JUMPI
---
0x7e: V40 = 0x853828b6
0x83: V41 = EQ 0x853828b6 V12
0x84: V42 = 0x2f9
0x87: JUMPI 0x2f9 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x30e]
---
0x88 DUP1
0x89 PUSH4 0x9e281a98
0x8e EQ
0x8f PUSH2 0x30e
0x92 JUMPI
---
0x89: V43 = 0x9e281a98
0x8e: V44 = EQ 0x9e281a98 V12
0x8f: V45 = 0x30e
0x92: JUMPI 0x30e V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x332]
---
0x93 DUP1
0x94 PUSH4 0xb2bdfa7b
0x99 EQ
0x9a PUSH2 0x332
0x9d JUMPI
---
0x94: V46 = 0xb2bdfa7b
0x99: V47 = EQ 0xb2bdfa7b V12
0x9a: V48 = 0x332
0x9d: JUMPI 0x332 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x361]
---
0x9e DUP1
0x9f PUSH4 0xd0e30db0
0xa4 EQ
0xa5 PUSH2 0x361
0xa8 JUMPI
---
0x9f: V49 = 0xd0e30db0
0xa4: V50 = EQ 0xd0e30db0 V12
0xa5: V51 = 0x361
0xa8: JUMPI 0x361 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xa9]
---
Predecessors: [0x0, 0x9e, 0x3bb, 0x5b6, 0x76e, 0x96b, 0xccf]
Successors: [0xaa]
---
0xa9 JUMPDEST
---
0xa9: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x96a}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x96a}, S1, S0]

================================

Block 0xaa
[0xaa:0xaa]
---
Predecessors: [0xa9]
Successors: [0xab]
---
0xaa JUMPDEST
---
0xaa: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x96a}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x96a}, S1, S0]

================================

Block 0xab
[0xab:0xac]
---
Predecessors: [0xaa]
Successors: []
---
0xab JUMPDEST
0xac STOP
---
0xab: JUMPDEST 
0xac: STOP 
---
Entry stack: [V12, S3, {0xa9, 0x96a}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x96a}, S1, S0]

================================

Block 0xad
[0xad:0xb3]
---
Predecessors: [0xb]
Successors: [0xb4, 0xb8]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xad: JUMPDEST 
0xae: V52 = CALLVALUE
0xaf: V53 = ISZERO V52
0xb0: V54 = 0xb8
0xb3: JUMPI 0xb8 V53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xad]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V55 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb8
[0xb8:0x13b]
---
Predecessors: [0xad]
Successors: [0x36b]
---
0xb8 JUMPDEST
0xb9 PUSH2 0xa9
0xbc PUSH1 0x4
0xbe PUSH1 0x24
0xc0 DUP2
0xc1 CALLDATALOAD
0xc2 DUP2
0xc3 DUP2
0xc4 ADD
0xc5 SWAP1
0xc6 DUP4
0xc7 ADD
0xc8 CALLDATALOAD
0xc9 DUP1
0xca PUSH1 0x20
0xcc DUP2
0xcd DUP2
0xce MUL
0xcf ADD
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 SWAP1
0xd4 DUP2
0xd5 ADD
0xd6 PUSH1 0x40
0xd8 MSTORE
0xd9 DUP1
0xda SWAP4
0xdb SWAP3
0xdc SWAP2
0xdd SWAP1
0xde DUP2
0xdf DUP2
0xe0 MSTORE
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 DUP4
0xe5 DUP4
0xe6 PUSH1 0x20
0xe8 MUL
0xe9 DUP1
0xea DUP3
0xeb DUP5
0xec CALLDATACOPY
0xed DUP3
0xee ADD
0xef SWAP2
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 POP
0xf6 SWAP2
0xf7 SWAP1
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa SWAP1
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP1
0xff DUP3
0x100 ADD
0x101 DUP1
0x102 CALLDATALOAD
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 DUP1
0x109 DUP1
0x10a PUSH1 0x20
0x10c MUL
0x10d PUSH1 0x20
0x10f ADD
0x110 PUSH1 0x40
0x112 MLOAD
0x113 SWAP1
0x114 DUP2
0x115 ADD
0x116 PUSH1 0x40
0x118 MSTORE
0x119 DUP1
0x11a SWAP4
0x11b SWAP3
0x11c SWAP2
0x11d SWAP1
0x11e DUP2
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 ADD
0x124 DUP4
0x125 DUP4
0x126 PUSH1 0x20
0x128 MUL
0x129 DUP1
0x12a DUP3
0x12b DUP5
0x12c CALLDATACOPY
0x12d POP
0x12e SWAP5
0x12f SWAP7
0x130 POP
0x131 PUSH2 0x36b
0x134 SWAP6
0x135 POP
0x136 POP
0x137 POP
0x138 POP
0x139 POP
0x13a POP
0x13b JUMP
---
0xb8: JUMPDEST 
0xb9: V56 = 0xa9
0xbc: V57 = 0x4
0xbe: V58 = 0x24
0xc1: V59 = CALLDATALOAD 0x4
0xc4: V60 = ADD V59 0x24
0xc7: V61 = ADD 0x4 V59
0xc8: V62 = CALLDATALOAD V61
0xca: V63 = 0x20
0xce: V64 = MUL 0x20 V62
0xcf: V65 = ADD V64 0x20
0xd0: V66 = 0x40
0xd2: V67 = M[0x40]
0xd5: V68 = ADD V67 V65
0xd6: V69 = 0x40
0xd8: M[0x40] = V68
0xe0: M[V67] = V62
0xe1: V70 = 0x20
0xe3: V71 = ADD 0x20 V67
0xe6: V72 = 0x20
0xe8: V73 = MUL 0x20 V62
0xec: CALLDATACOPY V71 V60 V73
0xee: V74 = ADD V71 V73
0xf9: V75 = CALLDATALOAD 0x24
0xfb: V76 = 0x20
0xfd: V77 = ADD 0x20 0x24
0x100: V78 = ADD 0x4 V75
0x102: V79 = CALLDATALOAD V78
0x104: V80 = 0x20
0x106: V81 = ADD 0x20 V78
0x10a: V82 = 0x20
0x10c: V83 = MUL 0x20 V79
0x10d: V84 = 0x20
0x10f: V85 = ADD 0x20 V83
0x110: V86 = 0x40
0x112: V87 = M[0x40]
0x115: V88 = ADD V87 V85
0x116: V89 = 0x40
0x118: M[0x40] = V88
0x120: M[V87] = V79
0x121: V90 = 0x20
0x123: V91 = ADD 0x20 V87
0x126: V92 = 0x20
0x128: V93 = MUL 0x20 V79
0x12c: CALLDATACOPY V91 V81 V93
0x131: V94 = 0x36b
0x13b: JUMP 0x36b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V67, V87]
Exit stack: [V12, 0xa9, V67, V87]

================================

Block 0x13c
[0x13c:0x13d]
---
Predecessors: []
Successors: []
---
0x13c JUMPDEST
0x13d STOP
---
0x13c: JUMPDEST 
0x13d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x25]
Successors: [0x145, 0x149]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V95 = CALLVALUE
0x140: V96 = ISZERO V95
0x141: V97 = 0x149
0x144: JUMPI 0x149 V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13e]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V98 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x149
[0x149:0x150]
---
Predecessors: [0x13e]
Successors: [0x3bf]
---
0x149 JUMPDEST
0x14a PUSH2 0x151
0x14d PUSH2 0x3bf
0x150 JUMP
---
0x149: JUMPDEST 
0x14a: V99 = 0x151
0x14d: V100 = 0x3bf
0x150: JUMP 0x3bf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x151]
Exit stack: [V12, 0x151]

================================

Block 0x151
[0x151:0x162]
---
Predecessors: [0x43f, 0x55c]
Successors: []
---
0x151 JUMPDEST
0x152 PUSH1 0x40
0x154 MLOAD
0x155 SWAP1
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x20
0x15a ADD
0x15b PUSH1 0x40
0x15d MLOAD
0x15e DUP1
0x15f SWAP2
0x160 SUB
0x161 SWAP1
0x162 RETURN
---
0x151: JUMPDEST 
0x152: V101 = 0x40
0x154: V102 = M[0x40]
0x157: M[V102] = S0
0x158: V103 = 0x20
0x15a: V104 = ADD 0x20 V102
0x15b: V105 = 0x40
0x15d: V106 = M[0x40]
0x160: V107 = SUB V104 V106
0x162: RETURN V106 V107
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1]

================================

Block 0x163
[0x163:0x169]
---
Predecessors: [0x30]
Successors: [0x16a, 0x16e]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x163: JUMPDEST 
0x164: V108 = CALLVALUE
0x165: V109 = ISZERO V108
0x166: V110 = 0x16e
0x169: JUMPI 0x16e V109
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x163]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V111 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16e
[0x16e:0x178]
---
Predecessors: [0x163]
Successors: [0x442]
---
0x16e JUMPDEST
0x16f PUSH2 0xa9
0x172 PUSH1 0x4
0x174 CALLDATALOAD
0x175 PUSH2 0x442
0x178 JUMP
---
0x16e: JUMPDEST 
0x16f: V112 = 0xa9
0x172: V113 = 0x4
0x174: V114 = CALLDATALOAD 0x4
0x175: V115 = 0x442
0x178: JUMP 0x442
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V114]
Exit stack: [V12, 0xa9, V114]

================================

Block 0x179
[0x179:0x17a]
---
Predecessors: []
Successors: []
---
0x179 JUMPDEST
0x17a STOP
---
0x179: JUMPDEST 
0x17a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x17b
[0x17b:0x181]
---
Predecessors: [0x3b]
Successors: [0x182, 0x186]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d ISZERO
0x17e PUSH2 0x186
0x181 JUMPI
---
0x17b: JUMPDEST 
0x17c: V116 = CALLVALUE
0x17d: V117 = ISZERO V116
0x17e: V118 = 0x186
0x181: JUMPI 0x186 V117
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x182
[0x182:0x185]
---
Predecessors: [0x17b]
Successors: []
---
0x182 PUSH1 0x0
0x184 DUP1
0x185 REVERT
---
0x182: V119 = 0x0
0x185: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x186
[0x186:0x199]
---
Predecessors: [0x17b]
Successors: [0x4dc]
---
0x186 JUMPDEST
0x187 PUSH2 0x151
0x18a PUSH1 0x1
0x18c PUSH1 0xa0
0x18e PUSH1 0x2
0x190 EXP
0x191 SUB
0x192 PUSH1 0x4
0x194 CALLDATALOAD
0x195 AND
0x196 PUSH2 0x4dc
0x199 JUMP
---
0x186: JUMPDEST 
0x187: V120 = 0x151
0x18a: V121 = 0x1
0x18c: V122 = 0xa0
0x18e: V123 = 0x2
0x190: V124 = EXP 0x2 0xa0
0x191: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x192: V126 = 0x4
0x194: V127 = CALLDATALOAD 0x4
0x195: V128 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x196: V129 = 0x4dc
0x199: JUMP 0x4dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x151, V128]
Exit stack: [V12, 0x151, V128]

================================

Block 0x19a
[0x19a:0x1ab]
---
Predecessors: []
Successors: []
---
0x19a JUMPDEST
0x19b PUSH1 0x40
0x19d MLOAD
0x19e SWAP1
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 DUP1
0x1a8 SWAP2
0x1a9 SUB
0x1aa SWAP1
0x1ab RETURN
---
0x19a: JUMPDEST 
0x19b: V130 = 0x40
0x19d: V131 = M[0x40]
0x1a0: M[V131] = S0
0x1a1: V132 = 0x20
0x1a3: V133 = ADD 0x20 V131
0x1a4: V134 = 0x40
0x1a6: V135 = M[0x40]
0x1a9: V136 = SUB V133 V135
0x1ab: RETURN V135 V136
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ac
[0x1ac:0x1b2]
---
Predecessors: [0x46]
Successors: [0x1b3, 0x1b7]
---
0x1ac JUMPDEST
0x1ad CALLVALUE
0x1ae ISZERO
0x1af PUSH2 0x1b7
0x1b2 JUMPI
---
0x1ac: JUMPDEST 
0x1ad: V137 = CALLVALUE
0x1ae: V138 = ISZERO V137
0x1af: V139 = 0x1b7
0x1b2: JUMPI 0x1b7 V138
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b3
[0x1b3:0x1b6]
---
Predecessors: [0x1ac]
Successors: []
---
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 REVERT
---
0x1b3: V140 = 0x0
0x1b6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b7
[0x1b7:0x1ca]
---
Predecessors: [0x1ac]
Successors: [0x561]
---
0x1b7 JUMPDEST
0x1b8 PUSH2 0xa9
0x1bb PUSH1 0x1
0x1bd PUSH1 0xa0
0x1bf PUSH1 0x2
0x1c1 EXP
0x1c2 SUB
0x1c3 PUSH1 0x4
0x1c5 CALLDATALOAD
0x1c6 AND
0x1c7 PUSH2 0x561
0x1ca JUMP
---
0x1b7: JUMPDEST 
0x1b8: V141 = 0xa9
0x1bb: V142 = 0x1
0x1bd: V143 = 0xa0
0x1bf: V144 = 0x2
0x1c1: V145 = EXP 0x2 0xa0
0x1c2: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c3: V147 = 0x4
0x1c5: V148 = CALLDATALOAD 0x4
0x1c6: V149 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V150 = 0x561
0x1ca: JUMP 0x561
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V149]
Exit stack: [V12, 0xa9, V149]

================================

Block 0x1cb
[0x1cb:0x1cc]
---
Predecessors: []
Successors: []
---
0x1cb JUMPDEST
0x1cc STOP
---
0x1cb: JUMPDEST 
0x1cc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1cd
[0x1cd:0x1d3]
---
Predecessors: [0x51]
Successors: [0x1d4, 0x1d8]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V151 = CALLVALUE
0x1cf: V152 = ISZERO V151
0x1d0: V153 = 0x1d8
0x1d3: JUMPI 0x1d8 V152
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V154 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d8
[0x1d8:0x21b]
---
Predecessors: [0x1cd]
Successors: [0x5b9]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0xa9
0x1dc PUSH1 0x4
0x1de PUSH1 0x24
0x1e0 DUP2
0x1e1 CALLDATALOAD
0x1e2 DUP2
0x1e3 DUP2
0x1e4 ADD
0x1e5 SWAP1
0x1e6 DUP4
0x1e7 ADD
0x1e8 CALLDATALOAD
0x1e9 DUP1
0x1ea PUSH1 0x20
0x1ec DUP2
0x1ed DUP2
0x1ee MUL
0x1ef ADD
0x1f0 PUSH1 0x40
0x1f2 MLOAD
0x1f3 SWAP1
0x1f4 DUP2
0x1f5 ADD
0x1f6 PUSH1 0x40
0x1f8 MSTORE
0x1f9 DUP1
0x1fa SWAP4
0x1fb SWAP3
0x1fc SWAP2
0x1fd SWAP1
0x1fe DUP2
0x1ff DUP2
0x200 MSTORE
0x201 PUSH1 0x20
0x203 ADD
0x204 DUP4
0x205 DUP4
0x206 PUSH1 0x20
0x208 MUL
0x209 DUP1
0x20a DUP3
0x20b DUP5
0x20c CALLDATACOPY
0x20d POP
0x20e SWAP5
0x20f SWAP7
0x210 POP
0x211 PUSH2 0x5b9
0x214 SWAP6
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 POP
0x21a POP
0x21b JUMP
---
0x1d8: JUMPDEST 
0x1d9: V155 = 0xa9
0x1dc: V156 = 0x4
0x1de: V157 = 0x24
0x1e1: V158 = CALLDATALOAD 0x4
0x1e4: V159 = ADD V158 0x24
0x1e7: V160 = ADD 0x4 V158
0x1e8: V161 = CALLDATALOAD V160
0x1ea: V162 = 0x20
0x1ee: V163 = MUL 0x20 V161
0x1ef: V164 = ADD V163 0x20
0x1f0: V165 = 0x40
0x1f2: V166 = M[0x40]
0x1f5: V167 = ADD V166 V164
0x1f6: V168 = 0x40
0x1f8: M[0x40] = V167
0x200: M[V166] = V161
0x201: V169 = 0x20
0x203: V170 = ADD 0x20 V166
0x206: V171 = 0x20
0x208: V172 = MUL 0x20 V161
0x20c: CALLDATACOPY V170 V159 V172
0x211: V173 = 0x5b9
0x21b: JUMP 0x5b9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V166]
Exit stack: [V12, 0xa9, V166]

================================

Block 0x21c
[0x21c:0x21d]
---
Predecessors: []
Successors: []
---
0x21c JUMPDEST
0x21d STOP
---
0x21c: JUMPDEST 
0x21d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21e
[0x21e:0x224]
---
Predecessors: [0x5c]
Successors: [0x225, 0x229]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 ISZERO
0x221 PUSH2 0x229
0x224 JUMPI
---
0x21e: JUMPDEST 
0x21f: V174 = CALLVALUE
0x220: V175 = ISZERO V174
0x221: V176 = 0x229
0x224: JUMPI 0x229 V175
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x21e]
Successors: []
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
---
0x225: V177 = 0x0
0x228: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x229
[0x229:0x26c]
---
Predecessors: [0x21e]
Successors: [0x771]
---
0x229 JUMPDEST
0x22a PUSH2 0x26d
0x22d PUSH1 0x4
0x22f PUSH1 0x24
0x231 DUP2
0x232 CALLDATALOAD
0x233 DUP2
0x234 DUP2
0x235 ADD
0x236 SWAP1
0x237 DUP4
0x238 ADD
0x239 CALLDATALOAD
0x23a DUP1
0x23b PUSH1 0x20
0x23d DUP2
0x23e DUP2
0x23f MUL
0x240 ADD
0x241 PUSH1 0x40
0x243 MLOAD
0x244 SWAP1
0x245 DUP2
0x246 ADD
0x247 PUSH1 0x40
0x249 MSTORE
0x24a DUP1
0x24b SWAP4
0x24c SWAP3
0x24d SWAP2
0x24e SWAP1
0x24f DUP2
0x250 DUP2
0x251 MSTORE
0x252 PUSH1 0x20
0x254 ADD
0x255 DUP4
0x256 DUP4
0x257 PUSH1 0x20
0x259 MUL
0x25a DUP1
0x25b DUP3
0x25c DUP5
0x25d CALLDATACOPY
0x25e POP
0x25f SWAP5
0x260 SWAP7
0x261 POP
0x262 PUSH2 0x771
0x265 SWAP6
0x266 POP
0x267 POP
0x268 POP
0x269 POP
0x26a POP
0x26b POP
0x26c JUMP
---
0x229: JUMPDEST 
0x22a: V178 = 0x26d
0x22d: V179 = 0x4
0x22f: V180 = 0x24
0x232: V181 = CALLDATALOAD 0x4
0x235: V182 = ADD V181 0x24
0x238: V183 = ADD 0x4 V181
0x239: V184 = CALLDATALOAD V183
0x23b: V185 = 0x20
0x23f: V186 = MUL 0x20 V184
0x240: V187 = ADD V186 0x20
0x241: V188 = 0x40
0x243: V189 = M[0x40]
0x246: V190 = ADD V189 V187
0x247: V191 = 0x40
0x249: M[0x40] = V190
0x251: M[V189] = V184
0x252: V192 = 0x20
0x254: V193 = ADD 0x20 V189
0x257: V194 = 0x20
0x259: V195 = MUL 0x20 V184
0x25d: CALLDATACOPY V193 V182 V195
0x262: V196 = 0x771
0x26c: JUMP 0x771
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x26d, V189]
Exit stack: [V12, 0x26d, V189]

================================

Block 0x26d
[0x26d:0x280]
---
Predecessors: [0x55c, 0xb31]
Successors: []
---
0x26d JUMPDEST
0x26e PUSH1 0x40
0x270 MLOAD
0x271 SWAP1
0x272 ISZERO
0x273 ISZERO
0x274 DUP2
0x275 MSTORE
0x276 PUSH1 0x20
0x278 ADD
0x279 PUSH1 0x40
0x27b MLOAD
0x27c DUP1
0x27d SWAP2
0x27e SUB
0x27f SWAP1
0x280 RETURN
---
0x26d: JUMPDEST 
0x26e: V197 = 0x40
0x270: V198 = M[0x40]
0x272: V199 = ISZERO S0
0x273: V200 = ISZERO V199
0x275: M[V198] = V200
0x276: V201 = 0x20
0x278: V202 = ADD 0x20 V198
0x279: V203 = 0x40
0x27b: V204 = M[0x40]
0x27e: V205 = SUB V202 V204
0x280: RETURN V204 V205
---
Entry stack: [V12, 0xa9, V67, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa9, V67, S1]

================================

Block 0x281
[0x281:0x287]
---
Predecessors: [0x67]
Successors: [0x288, 0x28c]
---
0x281 JUMPDEST
0x282 CALLVALUE
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x281: JUMPDEST 
0x282: V206 = CALLVALUE
0x283: V207 = ISZERO V206
0x284: V208 = 0x28c
0x287: JUMPI 0x28c V207
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x281]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V209 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28c
[0x28c:0x293]
---
Predecessors: [0x281]
Successors: [0x93f]
---
0x28c JUMPDEST
0x28d PUSH2 0xa9
0x290 PUSH2 0x93f
0x293 JUMP
---
0x28c: JUMPDEST 
0x28d: V210 = 0xa9
0x290: V211 = 0x93f
0x293: JUMP 0x93f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V12, 0xa9]

================================

Block 0x294
[0x294:0x295]
---
Predecessors: []
Successors: []
---
0x294 JUMPDEST
0x295 STOP
---
0x294: JUMPDEST 
0x295: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x296
[0x296:0x29c]
---
Predecessors: [0x72]
Successors: [0x29d, 0x2a1]
---
0x296 JUMPDEST
0x297 CALLVALUE
0x298 ISZERO
0x299 PUSH2 0x2a1
0x29c JUMPI
---
0x296: JUMPDEST 
0x297: V212 = CALLVALUE
0x298: V213 = ISZERO V212
0x299: V214 = 0x2a1
0x29c: JUMPI 0x2a1 V213
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29d
[0x29d:0x2a0]
---
Predecessors: [0x296]
Successors: []
---
0x29d PUSH1 0x0
0x29f DUP1
0x2a0 REVERT
---
0x29d: V215 = 0x0
0x2a0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a1
[0x2a1:0x2e4]
---
Predecessors: [0x296]
Successors: [0x96d]
---
0x2a1 JUMPDEST
0x2a2 PUSH2 0x26d
0x2a5 PUSH1 0x4
0x2a7 PUSH1 0x24
0x2a9 DUP2
0x2aa CALLDATALOAD
0x2ab DUP2
0x2ac DUP2
0x2ad ADD
0x2ae SWAP1
0x2af DUP4
0x2b0 ADD
0x2b1 CALLDATALOAD
0x2b2 DUP1
0x2b3 PUSH1 0x20
0x2b5 DUP2
0x2b6 DUP2
0x2b7 MUL
0x2b8 ADD
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc SWAP1
0x2bd DUP2
0x2be ADD
0x2bf PUSH1 0x40
0x2c1 MSTORE
0x2c2 DUP1
0x2c3 SWAP4
0x2c4 SWAP3
0x2c5 SWAP2
0x2c6 SWAP1
0x2c7 DUP2
0x2c8 DUP2
0x2c9 MSTORE
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd DUP4
0x2ce DUP4
0x2cf PUSH1 0x20
0x2d1 MUL
0x2d2 DUP1
0x2d3 DUP3
0x2d4 DUP5
0x2d5 CALLDATACOPY
0x2d6 POP
0x2d7 SWAP5
0x2d8 SWAP7
0x2d9 POP
0x2da PUSH2 0x96d
0x2dd SWAP6
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 POP
0x2e2 POP
0x2e3 POP
0x2e4 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V216 = 0x26d
0x2a5: V217 = 0x4
0x2a7: V218 = 0x24
0x2aa: V219 = CALLDATALOAD 0x4
0x2ad: V220 = ADD V219 0x24
0x2b0: V221 = ADD 0x4 V219
0x2b1: V222 = CALLDATALOAD V221
0x2b3: V223 = 0x20
0x2b7: V224 = MUL 0x20 V222
0x2b8: V225 = ADD V224 0x20
0x2b9: V226 = 0x40
0x2bb: V227 = M[0x40]
0x2be: V228 = ADD V227 V225
0x2bf: V229 = 0x40
0x2c1: M[0x40] = V228
0x2c9: M[V227] = V222
0x2ca: V230 = 0x20
0x2cc: V231 = ADD 0x20 V227
0x2cf: V232 = 0x20
0x2d1: V233 = MUL 0x20 V222
0x2d5: CALLDATACOPY V231 V220 V233
0x2da: V234 = 0x96d
0x2e4: JUMP 0x96d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x26d, V227]
Exit stack: [V12, 0x26d, V227]

================================

Block 0x2e5
[0x2e5:0x2f8]
---
Predecessors: []
Successors: []
---
0x2e5 JUMPDEST
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 SWAP1
0x2ea ISZERO
0x2eb ISZERO
0x2ec DUP2
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 ADD
0x2f1 PUSH1 0x40
0x2f3 MLOAD
0x2f4 DUP1
0x2f5 SWAP2
0x2f6 SUB
0x2f7 SWAP1
0x2f8 RETURN
---
0x2e5: JUMPDEST 
0x2e6: V235 = 0x40
0x2e8: V236 = M[0x40]
0x2ea: V237 = ISZERO S0
0x2eb: V238 = ISZERO V237
0x2ed: M[V236] = V238
0x2ee: V239 = 0x20
0x2f0: V240 = ADD 0x20 V236
0x2f1: V241 = 0x40
0x2f3: V242 = M[0x40]
0x2f6: V243 = SUB V240 V242
0x2f8: RETURN V242 V243
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f9
[0x2f9:0x2ff]
---
Predecessors: [0x7d]
Successors: [0x300, 0x304]
---
0x2f9 JUMPDEST
0x2fa CALLVALUE
0x2fb ISZERO
0x2fc PUSH2 0x304
0x2ff JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V244 = CALLVALUE
0x2fb: V245 = ISZERO V244
0x2fc: V246 = 0x304
0x2ff: JUMPI 0x304 V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x300
[0x300:0x303]
---
Predecessors: [0x2f9]
Successors: []
---
0x300 PUSH1 0x0
0x302 DUP1
0x303 REVERT
---
0x300: V247 = 0x0
0x303: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x304
[0x304:0x30b]
---
Predecessors: [0x2f9]
Successors: [0xb36]
---
0x304 JUMPDEST
0x305 PUSH2 0xa9
0x308 PUSH2 0xb36
0x30b JUMP
---
0x304: JUMPDEST 
0x305: V248 = 0xa9
0x308: V249 = 0xb36
0x30b: JUMP 0xb36
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V12, 0xa9]

================================

Block 0x30c
[0x30c:0x30d]
---
Predecessors: []
Successors: []
---
0x30c JUMPDEST
0x30d STOP
---
0x30c: JUMPDEST 
0x30d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x30e
[0x30e:0x314]
---
Predecessors: [0x88]
Successors: [0x315, 0x319]
---
0x30e JUMPDEST
0x30f CALLVALUE
0x310 ISZERO
0x311 PUSH2 0x319
0x314 JUMPI
---
0x30e: JUMPDEST 
0x30f: V250 = CALLVALUE
0x310: V251 = ISZERO V250
0x311: V252 = 0x319
0x314: JUMPI 0x319 V251
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x315
[0x315:0x318]
---
Predecessors: [0x30e]
Successors: []
---
0x315 PUSH1 0x0
0x317 DUP1
0x318 REVERT
---
0x315: V253 = 0x0
0x318: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x319
[0x319:0x32f]
---
Predecessors: [0x30e]
Successors: [0xb61]
---
0x319 JUMPDEST
0x31a PUSH2 0xa9
0x31d PUSH1 0x1
0x31f PUSH1 0xa0
0x321 PUSH1 0x2
0x323 EXP
0x324 SUB
0x325 PUSH1 0x4
0x327 CALLDATALOAD
0x328 AND
0x329 PUSH1 0x24
0x32b CALLDATALOAD
0x32c PUSH2 0xb61
0x32f JUMP
---
0x319: JUMPDEST 
0x31a: V254 = 0xa9
0x31d: V255 = 0x1
0x31f: V256 = 0xa0
0x321: V257 = 0x2
0x323: V258 = EXP 0x2 0xa0
0x324: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x325: V260 = 0x4
0x327: V261 = CALLDATALOAD 0x4
0x328: V262 = AND V261 0xffffffffffffffffffffffffffffffffffffffff
0x329: V263 = 0x24
0x32b: V264 = CALLDATALOAD 0x24
0x32c: V265 = 0xb61
0x32f: JUMP 0xb61
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9, V262, V264]
Exit stack: [V12, 0xa9, V262, V264]

================================

Block 0x330
[0x330:0x331]
---
Predecessors: []
Successors: []
---
0x330 JUMPDEST
0x331 STOP
---
0x330: JUMPDEST 
0x331: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x332
[0x332:0x338]
---
Predecessors: [0x93]
Successors: [0x339, 0x33d]
---
0x332 JUMPDEST
0x333 CALLVALUE
0x334 ISZERO
0x335 PUSH2 0x33d
0x338 JUMPI
---
0x332: JUMPDEST 
0x333: V266 = CALLVALUE
0x334: V267 = ISZERO V266
0x335: V268 = 0x33d
0x338: JUMPI 0x33d V267
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x339
[0x339:0x33c]
---
Predecessors: [0x332]
Successors: []
---
0x339 PUSH1 0x0
0x33b DUP1
0x33c REVERT
---
0x339: V269 = 0x0
0x33c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33d
[0x33d:0x344]
---
Predecessors: [0x332]
Successors: [0xc6b]
---
0x33d JUMPDEST
0x33e PUSH2 0x345
0x341 PUSH2 0xc6b
0x344 JUMP
---
0x33d: JUMPDEST 
0x33e: V270 = 0x345
0x341: V271 = 0xc6b
0x344: JUMP 0xc6b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x345]
Exit stack: [V12, 0x345]

================================

Block 0x345
[0x345:0x360]
---
Predecessors: [0xc6b]
Successors: []
---
0x345 JUMPDEST
0x346 PUSH1 0x40
0x348 MLOAD
0x349 PUSH1 0x1
0x34b PUSH1 0xa0
0x34d PUSH1 0x2
0x34f EXP
0x350 SUB
0x351 SWAP1
0x352 SWAP2
0x353 AND
0x354 DUP2
0x355 MSTORE
0x356 PUSH1 0x20
0x358 ADD
0x359 PUSH1 0x40
0x35b MLOAD
0x35c DUP1
0x35d SWAP2
0x35e SUB
0x35f SWAP1
0x360 RETURN
---
0x345: JUMPDEST 
0x346: V272 = 0x40
0x348: V273 = M[0x40]
0x349: V274 = 0x1
0x34b: V275 = 0xa0
0x34d: V276 = 0x2
0x34f: V277 = EXP 0x2 0xa0
0x350: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V279 = AND V1233 0xffffffffffffffffffffffffffffffffffffffff
0x355: M[V273] = V279
0x356: V280 = 0x20
0x358: V281 = ADD 0x20 V273
0x359: V282 = 0x40
0x35b: V283 = M[0x40]
0x35e: V284 = SUB V281 V283
0x360: RETURN V283 V284
---
Entry stack: [V12, 0x345, V1233]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x345]

================================

Block 0x361
[0x361:0x368]
---
Predecessors: [0x9e]
Successors: [0xc7a]
---
0x361 JUMPDEST
0x362 PUSH2 0xa9
0x365 PUSH2 0xc7a
0x368 JUMP
---
0x361: JUMPDEST 
0x362: V285 = 0xa9
0x365: V286 = 0xc7a
0x368: JUMP 0xc7a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V12, 0xa9]

================================

Block 0x369
[0x369:0x36a]
---
Predecessors: []
Successors: []
---
0x369 JUMPDEST
0x36a STOP
---
0x369: JUMPDEST 
0x36a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x36b
[0x36b:0x381]
---
Predecessors: [0xb8]
Successors: [0x382, 0x383]
---
0x36b JUMPDEST
0x36c PUSH1 0x2
0x36e SLOAD
0x36f CALLER
0x370 PUSH1 0x1
0x372 PUSH1 0xa0
0x374 PUSH1 0x2
0x376 EXP
0x377 SUB
0x378 SWAP1
0x379 DUP2
0x37a AND
0x37b SWAP2
0x37c AND
0x37d EQ
0x37e PUSH2 0x383
0x381 JUMPI
---
0x36b: JUMPDEST 
0x36c: V287 = 0x2
0x36e: V288 = S[0x2]
0x36f: V289 = CALLER
0x370: V290 = 0x1
0x372: V291 = 0xa0
0x374: V292 = 0x2
0x376: V293 = EXP 0x2 0xa0
0x377: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37a: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x37c: V296 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0x37d: V297 = EQ V296 V295
0x37e: V298 = 0x383
0x381: JUMPI 0x383 V297
---
Entry stack: [V12, 0xa9, V67, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, V87]

================================

Block 0x382
[0x382:0x382]
---
Predecessors: [0x36b]
Successors: []
---
0x382 INVALID
---
0x382: INVALID 
---
Entry stack: [V12, 0xa9, V67, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, V87]

================================

Block 0x383
[0x383:0x38b]
---
Predecessors: [0x36b]
Successors: [0x771]
---
0x383 JUMPDEST
0x384 PUSH2 0x38c
0x387 DUP3
0x388 PUSH2 0x771
0x38b JUMP
---
0x383: JUMPDEST 
0x384: V299 = 0x38c
0x388: V300 = 0x771
0x38b: JUMP 0x771
---
Entry stack: [V12, 0xa9, V67, V87]
Stack pops: 2
Stack additions: [S1, S0, 0x38c, S1]
Exit stack: [V12, 0xa9, V67, V87, 0x38c, V67]

================================

Block 0x38c
[0x38c:0x392]
---
Predecessors: [0x55c]
Successors: [0x393, 0x39e]
---
0x38c JUMPDEST
0x38d ISZERO
0x38e DUP1
0x38f PUSH2 0x39e
0x392 JUMPI
---
0x38c: JUMPDEST 
0x38d: V301 = ISZERO V485
0x38f: V302 = 0x39e
0x392: JUMPI 0x39e V301
---
Entry stack: [V12, 0xa9, V67, S1, V485]
Stack pops: 1
Stack additions: [V301]
Exit stack: [V12, 0xa9, V67, S1, V301]

================================

Block 0x393
[0x393:0x39b]
---
Predecessors: [0x38c]
Successors: [0x96d]
---
0x393 POP
0x394 PUSH2 0x39c
0x397 DUP2
0x398 PUSH2 0x96d
0x39b JUMP
---
0x394: V303 = 0x39c
0x398: V304 = 0x96d
0x39b: JUMP 0x96d
---
Entry stack: [V12, 0xa9, V67, S1, V301]
Stack pops: 2
Stack additions: [S1, 0x39c, S1]
Exit stack: [V12, 0xa9, V67, S1, 0x39c, S1]

================================

Block 0x39c
[0x39c:0x39d]
---
Predecessors: [0xb31]
Successors: [0x39e]
---
0x39c JUMPDEST
0x39d ISZERO
---
0x39c: JUMPDEST 
0x39d: V305 = ISZERO V1092
---
Entry stack: [V12, 0xa9, V67, S1, V1092]
Stack pops: 1
Stack additions: [V305]
Exit stack: [V12, 0xa9, V67, S1, V305]

================================

Block 0x39e
[0x39e:0x3a3]
---
Predecessors: [0x38c, 0x39c]
Successors: [0x3a4, 0x3a8]
---
0x39e JUMPDEST
0x39f ISZERO
0x3a0 PUSH2 0x3a8
0x3a3 JUMPI
---
0x39e: JUMPDEST 
0x39f: V306 = ISZERO S0
0x3a0: V307 = 0x3a8
0x3a3: JUMPI 0x3a8 V306
---
Entry stack: [V12, 0xa9, V67, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa9, V67, S1]

================================

Block 0x3a4
[0x3a4:0x3a7]
---
Predecessors: [0x39e]
Successors: [0x3ba]
---
0x3a4 PUSH2 0x3ba
0x3a7 JUMP
---
0x3a4: V308 = 0x3ba
0x3a7: JUMP 0x3ba
---
Entry stack: [V12, 0xa9, V67, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, V87]

================================

Block 0x3a8
[0x3a8:0x3b0]
---
Predecessors: [0x39e]
Successors: [0x5b9]
---
0x3a8 JUMPDEST
0x3a9 PUSH2 0x3b1
0x3ac DUP3
0x3ad PUSH2 0x5b9
0x3b0 JUMP
---
0x3a8: JUMPDEST 
0x3a9: V309 = 0x3b1
0x3ad: V310 = 0x5b9
0x3b0: JUMP 0x5b9
---
Entry stack: [V12, 0xa9, V67, V87]
Stack pops: 2
Stack additions: [S1, S0, 0x3b1, S1]
Exit stack: [V12, 0xa9, V67, V87, 0x3b1, V67]

================================

Block 0x3b1
[0x3b1:0x3b9]
---
Predecessors: [0x76e]
Successors: [0x5b9]
---
0x3b1 JUMPDEST
0x3b2 PUSH2 0x3ba
0x3b5 DUP2
0x3b6 PUSH2 0x5b9
0x3b9 JUMP
---
0x3b1: JUMPDEST 
0x3b2: V311 = 0x3ba
0x3b6: V312 = 0x5b9
0x3b9: JUMP 0x5b9
---
Entry stack: [V12, 0xa9, V67, S0]
Stack pops: 1
Stack additions: [S0, 0x3ba, S0]
Exit stack: [V12, 0xa9, V67, S0, 0x3ba, S0]

================================

Block 0x3ba
[0x3ba:0x3ba]
---
Predecessors: [0x3a4, 0x5b6, 0x76e, 0xc51]
Successors: [0x3bb]
---
0x3ba JUMPDEST
---
0x3ba: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x96a}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x96a}, S1, S0]

================================

Block 0x3bb
[0x3bb:0x3be]
---
Predecessors: [0x3ba]
Successors: [0xa9, 0x96a]
---
0x3bb JUMPDEST
0x3bc POP
0x3bd POP
0x3be JUMP
---
0x3bb: JUMPDEST 
0x3be: JUMP {0xa9, 0x96a}
---
Entry stack: [V12, S3, {0xa9, 0x96a}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S3]

================================

Block 0x3bf
[0x3bf:0x41d]
---
Predecessors: [0x149, 0x45d, 0xb4e]
Successors: [0x41e, 0x422]
---
0x3bf JUMPDEST
0x3c0 PUSH1 0x1
0x3c2 SLOAD
0x3c3 PUSH1 0x0
0x3c5 SWAP1
0x3c6 PUSH1 0x1
0x3c8 PUSH1 0xa0
0x3ca PUSH1 0x2
0x3cc EXP
0x3cd SUB
0x3ce AND
0x3cf PUSH4 0xf7888aec
0x3d4 DUP3
0x3d5 ADDRESS
0x3d6 DUP2
0x3d7 PUSH1 0x40
0x3d9 MLOAD
0x3da PUSH1 0x20
0x3dc ADD
0x3dd MSTORE
0x3de PUSH1 0x40
0x3e0 MLOAD
0x3e1 PUSH1 0xe0
0x3e3 PUSH1 0x2
0x3e5 EXP
0x3e6 PUSH4 0xffffffff
0x3eb DUP6
0x3ec AND
0x3ed MUL
0x3ee DUP2
0x3ef MSTORE
0x3f0 PUSH1 0x1
0x3f2 PUSH1 0xa0
0x3f4 PUSH1 0x2
0x3f6 EXP
0x3f7 SUB
0x3f8 SWAP3
0x3f9 DUP4
0x3fa AND
0x3fb PUSH1 0x4
0x3fd DUP3
0x3fe ADD
0x3ff MSTORE
0x400 SWAP2
0x401 AND
0x402 PUSH1 0x24
0x404 DUP3
0x405 ADD
0x406 MSTORE
0x407 PUSH1 0x44
0x409 ADD
0x40a PUSH1 0x20
0x40c PUSH1 0x40
0x40e MLOAD
0x40f DUP1
0x410 DUP4
0x411 SUB
0x412 DUP2
0x413 PUSH1 0x0
0x415 DUP8
0x416 DUP1
0x417 EXTCODESIZE
0x418 ISZERO
0x419 ISZERO
0x41a PUSH2 0x422
0x41d JUMPI
---
0x3bf: JUMPDEST 
0x3c0: V313 = 0x1
0x3c2: V314 = S[0x1]
0x3c3: V315 = 0x0
0x3c6: V316 = 0x1
0x3c8: V317 = 0xa0
0x3ca: V318 = 0x2
0x3cc: V319 = EXP 0x2 0xa0
0x3cd: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ce: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x3cf: V322 = 0xf7888aec
0x3d5: V323 = ADDRESS
0x3d7: V324 = 0x40
0x3d9: V325 = M[0x40]
0x3da: V326 = 0x20
0x3dc: V327 = ADD 0x20 V325
0x3dd: M[V327] = 0x0
0x3de: V328 = 0x40
0x3e0: V329 = M[0x40]
0x3e1: V330 = 0xe0
0x3e3: V331 = 0x2
0x3e5: V332 = EXP 0x2 0xe0
0x3e6: V333 = 0xffffffff
0x3ec: V334 = AND 0xf7888aec 0xffffffff
0x3ed: V335 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x3ef: M[V329] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x3f0: V336 = 0x1
0x3f2: V337 = 0xa0
0x3f4: V338 = 0x2
0x3f6: V339 = EXP 0x2 0xa0
0x3f7: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fa: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3fb: V342 = 0x4
0x3fe: V343 = ADD V329 0x4
0x3ff: M[V343] = 0x0
0x401: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x402: V345 = 0x24
0x405: V346 = ADD V329 0x24
0x406: M[V346] = V344
0x407: V347 = 0x44
0x409: V348 = ADD 0x44 V329
0x40a: V349 = 0x20
0x40c: V350 = 0x40
0x40e: V351 = M[0x40]
0x411: V352 = SUB V348 V351
0x413: V353 = 0x0
0x417: V354 = EXTCODESIZE V321
0x418: V355 = ISZERO V354
0x419: V356 = ISZERO V355
0x41a: V357 = 0x422
0x41d: JUMPI 0x422 V356
---
Entry stack: [V12, S4, S3, S2, S1, {0x151, 0x465, 0xb59}]
Stack pops: 0
Stack additions: [0x0, V321, 0xf7888aec, V348, 0x20, V351, V352, V351, 0x0, V321]
Exit stack: [V12, S4, S3, S2, S1, {0x151, 0x465, 0xb59}, 0x0, V321, 0xf7888aec, V348, 0x20, V351, V352, V351, 0x0, V321]

================================

Block 0x41e
[0x41e:0x421]
---
Predecessors: [0x3bf]
Successors: []
---
0x41e PUSH1 0x0
0x420 DUP1
0x421 REVERT
---
0x41e: V358 = 0x0
0x421: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, {0x151, 0x465, 0xb59}, 0x0, V321, 0xf7888aec, V348, 0x20, V351, V352, V351, 0x0, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, {0x151, 0x465, 0xb59}, 0x0, V321, 0xf7888aec, V348, 0x20, V351, V352, V351, 0x0, V321]

================================

Block 0x422
[0x422:0x42e]
---
Predecessors: [0x3bf]
Successors: [0x42f, 0x433]
---
0x422 JUMPDEST
0x423 PUSH2 0x2c6
0x426 GAS
0x427 SUB
0x428 CALL
0x429 ISZERO
0x42a ISZERO
0x42b PUSH2 0x433
0x42e JUMPI
---
0x422: JUMPDEST 
0x423: V359 = 0x2c6
0x426: V360 = GAS
0x427: V361 = SUB V360 0x2c6
0x428: V362 = CALL V361 V321 0x0 V351 V352 V351 0x20
0x429: V363 = ISZERO V362
0x42a: V364 = ISZERO V363
0x42b: V365 = 0x433
0x42e: JUMPI 0x433 V364
---
Entry stack: [V12, S14, S13, S12, S11, {0x151, 0x465, 0xb59}, 0x0, V321, 0xf7888aec, V348, 0x20, V351, V352, V351, 0x0, V321]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, {0x151, 0x465, 0xb59}, 0x0, V321, 0xf7888aec, V348]

================================

Block 0x42f
[0x42f:0x432]
---
Predecessors: [0x422]
Successors: []
---
0x42f PUSH1 0x0
0x431 DUP1
0x432 REVERT
---
0x42f: V366 = 0x0
0x432: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, {0x151, 0x465, 0xb59}, 0x0, S2, 0xf7888aec, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, {0x151, 0x465, 0xb59}, 0x0, S2, 0xf7888aec, S0]

================================

Block 0x433
[0x433:0x43e]
---
Predecessors: [0x422]
Successors: [0x43f]
---
0x433 JUMPDEST
0x434 POP
0x435 POP
0x436 POP
0x437 PUSH1 0x40
0x439 MLOAD
0x43a DUP1
0x43b MLOAD
0x43c SWAP2
0x43d POP
0x43e POP
---
0x433: JUMPDEST 
0x437: V367 = 0x40
0x439: V368 = M[0x40]
0x43b: V369 = M[V368]
---
Entry stack: [V12, S8, S7, S6, S5, {0x151, 0x465, 0xb59}, 0x0, S2, 0xf7888aec, S0]
Stack pops: 4
Stack additions: [V369]
Exit stack: [V12, S8, S7, S6, S5, {0x151, 0x465, 0xb59}, V369]

================================

Block 0x43f
[0x43f:0x441]
---
Predecessors: [0x433]
Successors: [0x151, 0x465, 0xb59]
---
0x43f JUMPDEST
0x440 SWAP1
0x441 JUMP
---
0x43f: JUMPDEST 
0x441: JUMP {0x151, 0x465, 0xb59}
---
Entry stack: [V12, S5, S4, S3, S2, {0x151, 0x465, 0xb59}, V369]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S5, S4, S3, S2, V369]

================================

Block 0x442
[0x442:0x45b]
---
Predecessors: [0x16e, 0xb59]
Successors: [0x45c, 0x45d]
---
0x442 JUMPDEST
0x443 PUSH1 0x2
0x445 SLOAD
0x446 PUSH1 0x0
0x448 SWAP1
0x449 CALLER
0x44a PUSH1 0x1
0x44c PUSH1 0xa0
0x44e PUSH1 0x2
0x450 EXP
0x451 SUB
0x452 SWAP1
0x453 DUP2
0x454 AND
0x455 SWAP2
0x456 AND
0x457 EQ
0x458 PUSH2 0x45d
0x45b JUMPI
---
0x442: JUMPDEST 
0x443: V370 = 0x2
0x445: V371 = S[0x2]
0x446: V372 = 0x0
0x449: V373 = CALLER
0x44a: V374 = 0x1
0x44c: V375 = 0xa0
0x44e: V376 = 0x2
0x450: V377 = EXP 0x2 0xa0
0x451: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x454: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x456: V380 = AND V371 0xffffffffffffffffffffffffffffffffffffffff
0x457: V381 = EQ V380 V379
0x458: V382 = 0x45d
0x45b: JUMPI 0x45d V381
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x45c
[0x45c:0x45c]
---
Predecessors: [0x442]
Successors: []
---
0x45c INVALID
---
0x45c: INVALID 
---
Entry stack: [V12, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x45d
[0x45d:0x464]
---
Predecessors: [0x442]
Successors: [0x3bf]
---
0x45d JUMPDEST
0x45e PUSH2 0x465
0x461 PUSH2 0x3bf
0x464 JUMP
---
0x45d: JUMPDEST 
0x45e: V383 = 0x465
0x461: V384 = 0x3bf
0x464: JUMP 0x3bf
---
Entry stack: [V12, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: [0x465]
Exit stack: [V12, S5, S4, S3, S2, S1, 0x0, 0x465]

================================

Block 0x465
[0x465:0x472]
---
Predecessors: [0x43f]
Successors: [0x473, 0x474]
---
0x465 JUMPDEST
0x466 SWAP1
0x467 POP
0x468 PUSH1 0x0
0x46a DUP3
0x46b DUP3
0x46c SUB
0x46d LT
0x46e ISZERO
0x46f PUSH2 0x474
0x472 JUMPI
---
0x465: JUMPDEST 
0x468: V385 = 0x0
0x46c: V386 = SUB V369 S2
0x46d: V387 = LT V386 0x0
0x46e: V388 = ISZERO V387
0x46f: V389 = 0x474
0x472: JUMPI 0x474 V388
---
Entry stack: [V12, S4, S3, S2, S1, V369]
Stack pops: 3
Stack additions: [S2, S0]
Exit stack: [V12, S4, S3, S2, V369]

================================

Block 0x473
[0x473:0x473]
---
Predecessors: [0x465]
Successors: []
---
0x473 INVALID
---
0x473: INVALID 
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0x474
[0x474:0x4b8]
---
Predecessors: [0x465]
Successors: [0x4b9, 0x4bd]
---
0x474 JUMPDEST
0x475 PUSH1 0x1
0x477 SLOAD
0x478 PUSH1 0x1
0x47a PUSH1 0xa0
0x47c PUSH1 0x2
0x47e EXP
0x47f SUB
0x480 AND
0x481 PUSH4 0x2e1a7d4d
0x486 GAS
0x487 DUP5
0x488 PUSH1 0x40
0x48a MLOAD
0x48b PUSH1 0xe0
0x48d PUSH1 0x2
0x48f EXP
0x490 PUSH4 0xffffffff
0x495 DUP6
0x496 AND
0x497 MUL
0x498 DUP2
0x499 MSTORE
0x49a PUSH1 0x4
0x49c DUP2
0x49d ADD
0x49e SWAP2
0x49f SWAP1
0x4a0 SWAP2
0x4a1 MSTORE
0x4a2 PUSH1 0x24
0x4a4 ADD
0x4a5 PUSH1 0x0
0x4a7 PUSH1 0x40
0x4a9 MLOAD
0x4aa DUP1
0x4ab DUP4
0x4ac SUB
0x4ad DUP2
0x4ae PUSH1 0x0
0x4b0 DUP9
0x4b1 DUP1
0x4b2 EXTCODESIZE
0x4b3 ISZERO
0x4b4 ISZERO
0x4b5 PUSH2 0x4bd
0x4b8 JUMPI
---
0x474: JUMPDEST 
0x475: V390 = 0x1
0x477: V391 = S[0x1]
0x478: V392 = 0x1
0x47a: V393 = 0xa0
0x47c: V394 = 0x2
0x47e: V395 = EXP 0x2 0xa0
0x47f: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x480: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x481: V398 = 0x2e1a7d4d
0x486: V399 = GAS
0x488: V400 = 0x40
0x48a: V401 = M[0x40]
0x48b: V402 = 0xe0
0x48d: V403 = 0x2
0x48f: V404 = EXP 0x2 0xe0
0x490: V405 = 0xffffffff
0x496: V406 = AND 0x2e1a7d4d 0xffffffff
0x497: V407 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x499: M[V401] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x49a: V408 = 0x4
0x49d: V409 = ADD V401 0x4
0x4a1: M[V409] = S1
0x4a2: V410 = 0x24
0x4a4: V411 = ADD 0x24 V401
0x4a5: V412 = 0x0
0x4a7: V413 = 0x40
0x4a9: V414 = M[0x40]
0x4ac: V415 = SUB V411 V414
0x4ae: V416 = 0x0
0x4b2: V417 = EXTCODESIZE V397
0x4b3: V418 = ISZERO V417
0x4b4: V419 = ISZERO V418
0x4b5: V420 = 0x4bd
0x4b8: JUMPI 0x4bd V419
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V397, 0x2e1a7d4d, V399, V411, 0x0, V414, V415, V414, 0x0, V397]
Exit stack: [V12, S3, S2, S1, S0, V397, 0x2e1a7d4d, V399, V411, 0x0, V414, V415, V414, 0x0, V397]

================================

Block 0x4b9
[0x4b9:0x4bc]
---
Predecessors: [0x474]
Successors: []
---
0x4b9 PUSH1 0x0
0x4bb DUP1
0x4bc REVERT
---
0x4b9: V421 = 0x0
0x4bc: REVERT 0x0 0x0
---
Entry stack: [V12, S13, {0xa9, 0x96a}, S11, S10, V397, 0x2e1a7d4d, V399, V411, 0x0, V414, V415, V414, 0x0, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, {0xa9, 0x96a}, S11, S10, V397, 0x2e1a7d4d, V399, V411, 0x0, V414, V415, V414, 0x0, V397]

================================

Block 0x4bd
[0x4bd:0x4c5]
---
Predecessors: [0x474]
Successors: [0x4c6, 0x4ca]
---
0x4bd JUMPDEST
0x4be DUP8
0x4bf CALL
0x4c0 ISZERO
0x4c1 ISZERO
0x4c2 PUSH2 0x4ca
0x4c5 JUMPI
---
0x4bd: JUMPDEST 
0x4bf: V422 = CALL V399 V397 0x0 V414 V415 V414 0x0
0x4c0: V423 = ISZERO V422
0x4c1: V424 = ISZERO V423
0x4c2: V425 = 0x4ca
0x4c5: JUMPI 0x4ca V424
---
Entry stack: [V12, S13, {0xa9, 0x96a}, S11, S10, V397, 0x2e1a7d4d, V399, V411, 0x0, V414, V415, V414, 0x0, V397]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, S13, {0xa9, 0x96a}, S11, S10, V397, 0x2e1a7d4d, V399, V411]

================================

Block 0x4c6
[0x4c6:0x4c9]
---
Predecessors: [0x4bd]
Successors: []
---
0x4c6 PUSH1 0x0
0x4c8 DUP1
0x4c9 REVERT
---
0x4c6: V426 = 0x0
0x4c9: REVERT 0x0 0x0
---
Entry stack: [V12, S7, {0xa9, 0x96a}, S5, S4, S3, 0x2e1a7d4d, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, {0xa9, 0x96a}, S5, S4, S3, 0x2e1a7d4d, S1, S0]

================================

Block 0x4ca
[0x4ca:0x4d6]
---
Predecessors: [0x4bd]
Successors: [0xcd1]
---
0x4ca JUMPDEST
0x4cb POP
0x4cc POP
0x4cd POP
0x4ce POP
0x4cf PUSH2 0x3ba
0x4d2 DUP3
0x4d3 PUSH2 0xcd1
0x4d6 JUMP
---
0x4ca: JUMPDEST 
0x4cf: V427 = 0x3ba
0x4d3: V428 = 0xcd1
0x4d6: JUMP 0xcd1
---
Entry stack: [V12, S7, {0xa9, 0x96a}, S5, S4, S3, 0x2e1a7d4d, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, 0x3ba, S5]
Exit stack: [V12, S7, {0xa9, 0x96a}, S5, S4, 0x3ba, S5]

================================

Block 0x4d7
[0x4d7:0x4d7]
---
Predecessors: []
Successors: [0x4d8]
---
0x4d7 JUMPDEST
---
0x4d7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4d8
[0x4d8:0x4db]
---
Predecessors: [0x4d7]
Successors: []
Has unresolved jump.
---
0x4d8 JUMPDEST
0x4d9 POP
0x4da POP
0x4db JUMP
---
0x4d8: JUMPDEST 
0x4db: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x4dc
[0x4dc:0x53a]
---
Predecessors: [0x186]
Successors: [0x53b, 0x53f]
---
0x4dc JUMPDEST
0x4dd PUSH1 0x1
0x4df SLOAD
0x4e0 PUSH1 0x0
0x4e2 SWAP1
0x4e3 PUSH1 0x1
0x4e5 PUSH1 0xa0
0x4e7 PUSH1 0x2
0x4e9 EXP
0x4ea SUB
0x4eb AND
0x4ec PUSH4 0xf7888aec
0x4f1 DUP4
0x4f2 ADDRESS
0x4f3 DUP5
0x4f4 PUSH1 0x40
0x4f6 MLOAD
0x4f7 PUSH1 0x20
0x4f9 ADD
0x4fa MSTORE
0x4fb PUSH1 0x40
0x4fd MLOAD
0x4fe PUSH1 0xe0
0x500 PUSH1 0x2
0x502 EXP
0x503 PUSH4 0xffffffff
0x508 DUP6
0x509 AND
0x50a MUL
0x50b DUP2
0x50c MSTORE
0x50d PUSH1 0x1
0x50f PUSH1 0xa0
0x511 PUSH1 0x2
0x513 EXP
0x514 SUB
0x515 SWAP3
0x516 DUP4
0x517 AND
0x518 PUSH1 0x4
0x51a DUP3
0x51b ADD
0x51c MSTORE
0x51d SWAP2
0x51e AND
0x51f PUSH1 0x24
0x521 DUP3
0x522 ADD
0x523 MSTORE
0x524 PUSH1 0x44
0x526 ADD
0x527 PUSH1 0x20
0x529 PUSH1 0x40
0x52b MLOAD
0x52c DUP1
0x52d DUP4
0x52e SUB
0x52f DUP2
0x530 PUSH1 0x0
0x532 DUP8
0x533 DUP1
0x534 EXTCODESIZE
0x535 ISZERO
0x536 ISZERO
0x537 PUSH2 0x53f
0x53a JUMPI
---
0x4dc: JUMPDEST 
0x4dd: V429 = 0x1
0x4df: V430 = S[0x1]
0x4e0: V431 = 0x0
0x4e3: V432 = 0x1
0x4e5: V433 = 0xa0
0x4e7: V434 = 0x2
0x4e9: V435 = EXP 0x2 0xa0
0x4ea: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4eb: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x4ec: V438 = 0xf7888aec
0x4f2: V439 = ADDRESS
0x4f4: V440 = 0x40
0x4f6: V441 = M[0x40]
0x4f7: V442 = 0x20
0x4f9: V443 = ADD 0x20 V441
0x4fa: M[V443] = 0x0
0x4fb: V444 = 0x40
0x4fd: V445 = M[0x40]
0x4fe: V446 = 0xe0
0x500: V447 = 0x2
0x502: V448 = EXP 0x2 0xe0
0x503: V449 = 0xffffffff
0x509: V450 = AND 0xf7888aec 0xffffffff
0x50a: V451 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x50c: M[V445] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x50d: V452 = 0x1
0x50f: V453 = 0xa0
0x511: V454 = 0x2
0x513: V455 = EXP 0x2 0xa0
0x514: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x517: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x518: V458 = 0x4
0x51b: V459 = ADD V445 0x4
0x51c: M[V459] = V457
0x51e: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x51f: V461 = 0x24
0x522: V462 = ADD V445 0x24
0x523: M[V462] = V460
0x524: V463 = 0x44
0x526: V464 = ADD 0x44 V445
0x527: V465 = 0x20
0x529: V466 = 0x40
0x52b: V467 = M[0x40]
0x52e: V468 = SUB V464 V467
0x530: V469 = 0x0
0x534: V470 = EXTCODESIZE V437
0x535: V471 = ISZERO V470
0x536: V472 = ISZERO V471
0x537: V473 = 0x53f
0x53a: JUMPI 0x53f V472
---
Entry stack: [V12, 0x151, V128]
Stack pops: 1
Stack additions: [S0, 0x0, V437, 0xf7888aec, V464, 0x20, V467, V468, V467, 0x0, V437]
Exit stack: [V12, 0x151, V128, 0x0, V437, 0xf7888aec, V464, 0x20, V467, V468, V467, 0x0, V437]

================================

Block 0x53b
[0x53b:0x53e]
---
Predecessors: [0x4dc]
Successors: []
---
0x53b PUSH1 0x0
0x53d DUP1
0x53e REVERT
---
0x53b: V474 = 0x0
0x53e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x151, V128, 0x0, V437, 0xf7888aec, V464, 0x20, V467, V468, V467, 0x0, V437]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x151, V128, 0x0, V437, 0xf7888aec, V464, 0x20, V467, V468, V467, 0x0, V437]

================================

Block 0x53f
[0x53f:0x54b]
---
Predecessors: [0x4dc, 0x877]
Successors: [0x54c, 0x550]
---
0x53f JUMPDEST
0x540 PUSH2 0x2c6
0x543 GAS
0x544 SUB
0x545 CALL
0x546 ISZERO
0x547 ISZERO
0x548 PUSH2 0x550
0x54b JUMPI
---
0x53f: JUMPDEST 
0x540: V475 = 0x2c6
0x543: V476 = GAS
0x544: V477 = SUB V476 0x2c6
0x545: V478 = CALL V477 S0 0x0 S2 S3 S4 0x20
0x546: V479 = ISZERO V478
0x547: V480 = ISZERO V479
0x548: V481 = 0x550
0x54b: JUMPI 0x550 V480
---
Entry stack: [V12, 0xa9, V67, S12, {0x151, 0x26d, 0x38c}, S10, 0x0, S8, {0x6c86888b, 0xf7888aec}, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0x151, 0x26d, 0x38c}, S10, 0x0, S8, {0x6c86888b, 0xf7888aec}, S6]

================================

Block 0x54c
[0x54c:0x54f]
---
Predecessors: [0x53f]
Successors: []
---
0x54c PUSH1 0x0
0x54e DUP1
0x54f REVERT
---
0x54c: V482 = 0x0
0x54f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S6, {0x151, 0x26d, 0x38c}, S4, 0x0, S2, {0x6c86888b, 0xf7888aec}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S6, {0x151, 0x26d, 0x38c}, S4, 0x0, S2, {0x6c86888b, 0xf7888aec}, S0]

================================

Block 0x550
[0x550:0x55b]
---
Predecessors: [0x53f, 0x91d]
Successors: [0x55c]
---
0x550 JUMPDEST
0x551 POP
0x552 POP
0x553 POP
0x554 PUSH1 0x40
0x556 MLOAD
0x557 DUP1
0x558 MLOAD
0x559 SWAP2
0x55a POP
0x55b POP
---
0x550: JUMPDEST 
0x554: V483 = 0x40
0x556: V484 = M[0x40]
0x558: V485 = M[V484]
---
Entry stack: [V12, 0xa9, V67, S6, {0x151, 0x26d, 0x38c}, S4, 0x0, S2, {0x6c86888b, 0xf7888aec}, S0]
Stack pops: 4
Stack additions: [V485]
Exit stack: [V12, 0xa9, V67, S6, {0x151, 0x26d, 0x38c}, S4, V485]

================================

Block 0x55c
[0x55c:0x560]
---
Predecessors: [0x550]
Successors: [0x151, 0x26d, 0x38c]
---
0x55c JUMPDEST
0x55d SWAP2
0x55e SWAP1
0x55f POP
0x560 JUMP
---
0x55c: JUMPDEST 
0x560: JUMP {0x151, 0x26d, 0x38c}
---
Entry stack: [V12, 0xa9, V67, S3, {0x151, 0x26d, 0x38c}, S1, V485]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0xa9, V67, S3, V485]

================================

Block 0x561
[0x561:0x577]
---
Predecessors: [0x1b7]
Successors: [0x578, 0x579]
---
0x561 JUMPDEST
0x562 PUSH1 0x2
0x564 SLOAD
0x565 CALLER
0x566 PUSH1 0x1
0x568 PUSH1 0xa0
0x56a PUSH1 0x2
0x56c EXP
0x56d SUB
0x56e SWAP1
0x56f DUP2
0x570 AND
0x571 SWAP2
0x572 AND
0x573 EQ
0x574 PUSH2 0x579
0x577 JUMPI
---
0x561: JUMPDEST 
0x562: V486 = 0x2
0x564: V487 = S[0x2]
0x565: V488 = CALLER
0x566: V489 = 0x1
0x568: V490 = 0xa0
0x56a: V491 = 0x2
0x56c: V492 = EXP 0x2 0xa0
0x56d: V493 = SUB 0x10000000000000000000000000000000000000000 0x1
0x570: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x572: V495 = AND V487 0xffffffffffffffffffffffffffffffffffffffff
0x573: V496 = EQ V495 V494
0x574: V497 = 0x579
0x577: JUMPI 0x579 V496
---
Entry stack: [V12, 0xa9, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V149]

================================

Block 0x578
[0x578:0x578]
---
Predecessors: [0x561]
Successors: []
---
0x578 INVALID
---
0x578: INVALID 
---
Entry stack: [V12, 0xa9, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V149]

================================

Block 0x579
[0x579:0x5b5]
---
Predecessors: [0x561]
Successors: [0x5b6]
---
0x579 JUMPDEST
0x57a PUSH1 0x0
0x57c DUP1
0x57d SLOAD
0x57e PUSH1 0x1
0x580 PUSH1 0xa0
0x582 PUSH1 0x2
0x584 EXP
0x585 SUB
0x586 DUP1
0x587 DUP5
0x588 AND
0x589 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59e NOT
0x59f SWAP3
0x5a0 DUP4
0x5a1 AND
0x5a2 OR
0x5a3 SWAP3
0x5a4 DUP4
0x5a5 SWAP1
0x5a6 SSTORE
0x5a7 PUSH1 0x1
0x5a9 DUP1
0x5aa SLOAD
0x5ab SWAP1
0x5ac SWAP3
0x5ad AND
0x5ae SWAP3
0x5af AND
0x5b0 SWAP2
0x5b1 SWAP1
0x5b2 SWAP2
0x5b3 OR
0x5b4 SWAP1
0x5b5 SSTORE
---
0x579: JUMPDEST 
0x57a: V498 = 0x0
0x57d: V499 = S[0x0]
0x57e: V500 = 0x1
0x580: V501 = 0xa0
0x582: V502 = 0x2
0x584: V503 = EXP 0x2 0xa0
0x585: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x588: V505 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x589: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V507 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5a1: V508 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V499
0x5a2: V509 = OR V508 V505
0x5a6: S[0x0] = V509
0x5a7: V510 = 0x1
0x5aa: V511 = S[0x1]
0x5ad: V512 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V511
0x5af: V513 = AND V509 0xffffffffffffffffffffffffffffffffffffffff
0x5b3: V514 = OR V513 V512
0x5b5: S[0x1] = V514
---
Entry stack: [V12, 0xa9, V149]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xa9, V149]

================================

Block 0x5b6
[0x5b6:0x5b8]
---
Predecessors: [0x579, 0xcd1]
Successors: [0xa9, 0x3ba, 0x96a]
---
0x5b6 JUMPDEST
0x5b7 POP
0x5b8 JUMP
---
0x5b6: JUMPDEST 
0x5b8: JUMP {0xa9, 0x3ba, 0x96a}
---
Entry stack: [V12, S5, {0xa9, 0x96a}, S3, S2, {0xa9, 0x3ba, 0x96a}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S5, {0xa9, 0x96a}, S3, S2]

================================

Block 0x5b9
[0x5b9:0x5d6]
---
Predecessors: [0x1d8, 0x3a8, 0x3b1]
Successors: [0x5d7, 0x5d8]
---
0x5b9 JUMPDEST
0x5ba PUSH1 0x1
0x5bc SLOAD
0x5bd PUSH1 0x1
0x5bf PUSH1 0xa0
0x5c1 PUSH1 0x2
0x5c3 EXP
0x5c4 SUB
0x5c5 AND
0x5c6 PUSH4 0xa19b14a
0x5cb GAS
0x5cc DUP4
0x5cd PUSH1 0x0
0x5cf DUP2
0x5d0 MLOAD
0x5d1 DUP2
0x5d2 LT
0x5d3 PUSH2 0x5d8
0x5d6 JUMPI
---
0x5b9: JUMPDEST 
0x5ba: V515 = 0x1
0x5bc: V516 = S[0x1]
0x5bd: V517 = 0x1
0x5bf: V518 = 0xa0
0x5c1: V519 = 0x2
0x5c3: V520 = EXP 0x2 0xa0
0x5c4: V521 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c5: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x5c6: V523 = 0xa19b14a
0x5cb: V524 = GAS
0x5cd: V525 = 0x0
0x5d0: V526 = M[S0]
0x5d2: V527 = LT 0x0 V526
0x5d3: V528 = 0x5d8
0x5d6: JUMPI 0x5d8 V527
---
Entry stack: [V12, 0xa9, V67, S2, {0xa9, 0x3b1, 0x3ba}, S0]
Stack pops: 1
Stack additions: [S0, V522, 0xa19b14a, V524, S0, 0x0]
Exit stack: [V12, 0xa9, V67, S2, {0xa9, 0x3b1, 0x3ba}, S0, V522, 0xa19b14a, V524, S0, 0x0]

================================

Block 0x5d7
[0x5d7:0x5d7]
---
Predecessors: [0x5b9]
Successors: []
---
0x5d7 INVALID
---
0x5d7: INVALID 
---
Entry stack: [V12, 0xa9, V67, S7, {0xa9, 0x3b1, 0x3ba}, S5, V522, 0xa19b14a, V524, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S7, {0xa9, 0x3b1, 0x3ba}, S5, V522, 0xa19b14a, V524, S1, 0x0]

================================

Block 0x5d8
[0x5d8:0x5ed]
---
Predecessors: [0x5b9]
Successors: [0x5ee, 0x5ef]
---
0x5d8 JUMPDEST
0x5d9 SWAP1
0x5da PUSH1 0x20
0x5dc ADD
0x5dd SWAP1
0x5de PUSH1 0x20
0x5e0 MUL
0x5e1 ADD
0x5e2 MLOAD
0x5e3 DUP5
0x5e4 PUSH1 0x1
0x5e6 DUP2
0x5e7 MLOAD
0x5e8 DUP2
0x5e9 LT
0x5ea PUSH2 0x5ef
0x5ed JUMPI
---
0x5d8: JUMPDEST 
0x5da: V529 = 0x20
0x5dc: V530 = ADD 0x20 S1
0x5de: V531 = 0x20
0x5e0: V532 = MUL 0x20 0x0
0x5e1: V533 = ADD 0x0 V530
0x5e2: V534 = M[V533]
0x5e4: V535 = 0x1
0x5e7: V536 = M[S5]
0x5e9: V537 = LT 0x1 V536
0x5ea: V538 = 0x5ef
0x5ed: JUMPI 0x5ef V537
---
Entry stack: [V12, 0xa9, V67, S7, {0xa9, 0x3b1, 0x3ba}, S5, V522, 0xa19b14a, V524, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V534, S5, 0x1]
Exit stack: [V12, 0xa9, V67, S7, {0xa9, 0x3b1, 0x3ba}, S5, V522, 0xa19b14a, V524, V534, S5, 0x1]

================================

Block 0x5ee
[0x5ee:0x5ee]
---
Predecessors: [0x5d8]
Successors: []
---
0x5ee INVALID
---
0x5ee: INVALID 
---
Entry stack: [V12, 0xa9, V67, S8, {0xa9, 0x3b1, 0x3ba}, S6, S5, 0xa19b14a, S3, V534, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S8, {0xa9, 0x3b1, 0x3ba}, S6, S5, 0xa19b14a, S3, V534, S1, 0x1]

================================

Block 0x5ef
[0x5ef:0x604]
---
Predecessors: [0x5d8]
Successors: [0x605, 0x606]
---
0x5ef JUMPDEST
0x5f0 SWAP1
0x5f1 PUSH1 0x20
0x5f3 ADD
0x5f4 SWAP1
0x5f5 PUSH1 0x20
0x5f7 MUL
0x5f8 ADD
0x5f9 MLOAD
0x5fa DUP6
0x5fb PUSH1 0x2
0x5fd DUP2
0x5fe MLOAD
0x5ff DUP2
0x600 LT
0x601 PUSH2 0x606
0x604 JUMPI
---
0x5ef: JUMPDEST 
0x5f1: V539 = 0x20
0x5f3: V540 = ADD 0x20 S1
0x5f5: V541 = 0x20
0x5f7: V542 = MUL 0x20 0x1
0x5f8: V543 = ADD 0x20 V540
0x5f9: V544 = M[V543]
0x5fb: V545 = 0x2
0x5fe: V546 = M[S6]
0x600: V547 = LT 0x2 V546
0x601: V548 = 0x606
0x604: JUMPI 0x606 V547
---
Entry stack: [V12, 0xa9, V67, S8, {0xa9, 0x3b1, 0x3ba}, S6, S5, 0xa19b14a, S3, V534, S1, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V544, S6, 0x2]
Exit stack: [V12, 0xa9, V67, S8, {0xa9, 0x3b1, 0x3ba}, S6, S5, 0xa19b14a, S3, V534, V544, S6, 0x2]

================================

Block 0x605
[0x605:0x605]
---
Predecessors: [0x5ef]
Successors: []
---
0x605 INVALID
---
0x605: INVALID 
---
Entry stack: [V12, 0xa9, V67, S9, {0xa9, 0x3b1, 0x3ba}, S7, S6, 0xa19b14a, S4, S3, V544, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S9, {0xa9, 0x3b1, 0x3ba}, S7, S6, 0xa19b14a, S4, S3, V544, S1, 0x2]

================================

Block 0x606
[0x606:0x61b]
---
Predecessors: [0x5ef]
Successors: [0x61c, 0x61d]
---
0x606 JUMPDEST
0x607 SWAP1
0x608 PUSH1 0x20
0x60a ADD
0x60b SWAP1
0x60c PUSH1 0x20
0x60e MUL
0x60f ADD
0x610 MLOAD
0x611 DUP7
0x612 PUSH1 0x3
0x614 DUP2
0x615 MLOAD
0x616 DUP2
0x617 LT
0x618 PUSH2 0x61d
0x61b JUMPI
---
0x606: JUMPDEST 
0x608: V549 = 0x20
0x60a: V550 = ADD 0x20 S1
0x60c: V551 = 0x20
0x60e: V552 = MUL 0x20 0x2
0x60f: V553 = ADD 0x40 V550
0x610: V554 = M[V553]
0x612: V555 = 0x3
0x615: V556 = M[S7]
0x617: V557 = LT 0x3 V556
0x618: V558 = 0x61d
0x61b: JUMPI 0x61d V557
---
Entry stack: [V12, 0xa9, V67, S9, {0xa9, 0x3b1, 0x3ba}, S7, S6, 0xa19b14a, S4, S3, V544, S1, 0x2]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V554, S7, 0x3]
Exit stack: [V12, 0xa9, V67, S9, {0xa9, 0x3b1, 0x3ba}, S7, S6, 0xa19b14a, S4, S3, V544, V554, S7, 0x3]

================================

Block 0x61c
[0x61c:0x61c]
---
Predecessors: [0x606]
Successors: []
---
0x61c INVALID
---
0x61c: INVALID 
---
Entry stack: [V12, 0xa9, V67, S10, {0xa9, 0x3b1, 0x3ba}, S8, S7, 0xa19b14a, S5, S4, S3, V554, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S10, {0xa9, 0x3b1, 0x3ba}, S8, S7, 0xa19b14a, S5, S4, S3, V554, S1, 0x3]

================================

Block 0x61d
[0x61d:0x632]
---
Predecessors: [0x606]
Successors: [0x633, 0x634]
---
0x61d JUMPDEST
0x61e SWAP1
0x61f PUSH1 0x20
0x621 ADD
0x622 SWAP1
0x623 PUSH1 0x20
0x625 MUL
0x626 ADD
0x627 MLOAD
0x628 DUP8
0x629 PUSH1 0x4
0x62b DUP2
0x62c MLOAD
0x62d DUP2
0x62e LT
0x62f PUSH2 0x634
0x632 JUMPI
---
0x61d: JUMPDEST 
0x61f: V559 = 0x20
0x621: V560 = ADD 0x20 S1
0x623: V561 = 0x20
0x625: V562 = MUL 0x20 0x3
0x626: V563 = ADD 0x60 V560
0x627: V564 = M[V563]
0x629: V565 = 0x4
0x62c: V566 = M[S8]
0x62e: V567 = LT 0x4 V566
0x62f: V568 = 0x634
0x632: JUMPI 0x634 V567
---
Entry stack: [V12, 0xa9, V67, S10, {0xa9, 0x3b1, 0x3ba}, S8, S7, 0xa19b14a, S5, S4, S3, V554, S1, 0x3]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V564, S8, 0x4]
Exit stack: [V12, 0xa9, V67, S10, {0xa9, 0x3b1, 0x3ba}, S8, S7, 0xa19b14a, S5, S4, S3, V554, V564, S8, 0x4]

================================

Block 0x633
[0x633:0x633]
---
Predecessors: [0x61d]
Successors: []
---
0x633 INVALID
---
0x633: INVALID 
---
Entry stack: [V12, 0xa9, V67, S11, {0xa9, 0x3b1, 0x3ba}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V564, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S11, {0xa9, 0x3b1, 0x3ba}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V564, S1, 0x4]

================================

Block 0x634
[0x634:0x649]
---
Predecessors: [0x61d]
Successors: [0x64a, 0x64b]
---
0x634 JUMPDEST
0x635 SWAP1
0x636 PUSH1 0x20
0x638 ADD
0x639 SWAP1
0x63a PUSH1 0x20
0x63c MUL
0x63d ADD
0x63e MLOAD
0x63f DUP9
0x640 PUSH1 0x5
0x642 DUP2
0x643 MLOAD
0x644 DUP2
0x645 LT
0x646 PUSH2 0x64b
0x649 JUMPI
---
0x634: JUMPDEST 
0x636: V569 = 0x20
0x638: V570 = ADD 0x20 S1
0x63a: V571 = 0x20
0x63c: V572 = MUL 0x20 0x4
0x63d: V573 = ADD 0x80 V570
0x63e: V574 = M[V573]
0x640: V575 = 0x5
0x643: V576 = M[S9]
0x645: V577 = LT 0x5 V576
0x646: V578 = 0x64b
0x649: JUMPI 0x64b V577
---
Entry stack: [V12, 0xa9, V67, S11, {0xa9, 0x3b1, 0x3ba}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V564, S1, 0x4]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V574, S9, 0x5]
Exit stack: [V12, 0xa9, V67, S11, {0xa9, 0x3b1, 0x3ba}, S9, S8, 0xa19b14a, S6, S5, S4, S3, V564, V574, S9, 0x5]

================================

Block 0x64a
[0x64a:0x64a]
---
Predecessors: [0x634]
Successors: []
---
0x64a INVALID
---
0x64a: INVALID 
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b1, 0x3ba}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V574, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b1, 0x3ba}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V574, S1, 0x5]

================================

Block 0x64b
[0x64b:0x660]
---
Predecessors: [0x634]
Successors: [0x661, 0x662]
---
0x64b JUMPDEST
0x64c SWAP1
0x64d PUSH1 0x20
0x64f ADD
0x650 SWAP1
0x651 PUSH1 0x20
0x653 MUL
0x654 ADD
0x655 MLOAD
0x656 DUP10
0x657 PUSH1 0x6
0x659 DUP2
0x65a MLOAD
0x65b DUP2
0x65c LT
0x65d PUSH2 0x662
0x660 JUMPI
---
0x64b: JUMPDEST 
0x64d: V579 = 0x20
0x64f: V580 = ADD 0x20 S1
0x651: V581 = 0x20
0x653: V582 = MUL 0x20 0x5
0x654: V583 = ADD 0xa0 V580
0x655: V584 = M[V583]
0x657: V585 = 0x6
0x65a: V586 = M[S10]
0x65c: V587 = LT 0x6 V586
0x65d: V588 = 0x662
0x660: JUMPI 0x662 V587
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b1, 0x3ba}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V574, S1, 0x5]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V584, S10, 0x6]
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b1, 0x3ba}, S10, S9, 0xa19b14a, S7, S6, S5, S4, S3, V574, V584, S10, 0x6]

================================

Block 0x661
[0x661:0x661]
---
Predecessors: [0x64b]
Successors: []
---
0x661 INVALID
---
0x661: INVALID 
---
Entry stack: [V12, 0xa9, V67, S13, {0xa9, 0x3b1, 0x3ba}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V584, S1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S13, {0xa9, 0x3b1, 0x3ba}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V584, S1, 0x6]

================================

Block 0x662
[0x662:0x677]
---
Predecessors: [0x64b]
Successors: [0x678, 0x679]
---
0x662 JUMPDEST
0x663 SWAP1
0x664 PUSH1 0x20
0x666 ADD
0x667 SWAP1
0x668 PUSH1 0x20
0x66a MUL
0x66b ADD
0x66c MLOAD
0x66d DUP11
0x66e PUSH1 0x7
0x670 DUP2
0x671 MLOAD
0x672 DUP2
0x673 LT
0x674 PUSH2 0x679
0x677 JUMPI
---
0x662: JUMPDEST 
0x664: V589 = 0x20
0x666: V590 = ADD 0x20 S1
0x668: V591 = 0x20
0x66a: V592 = MUL 0x20 0x6
0x66b: V593 = ADD 0xc0 V590
0x66c: V594 = M[V593]
0x66e: V595 = 0x7
0x671: V596 = M[S11]
0x673: V597 = LT 0x7 V596
0x674: V598 = 0x679
0x677: JUMPI 0x679 V597
---
Entry stack: [V12, 0xa9, V67, S13, {0xa9, 0x3b1, 0x3ba}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V584, S1, 0x6]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V594, S11, 0x7]
Exit stack: [V12, 0xa9, V67, S13, {0xa9, 0x3b1, 0x3ba}, S11, S10, 0xa19b14a, S8, S7, S6, S5, S4, S3, V584, V594, S11, 0x7]

================================

Block 0x678
[0x678:0x678]
---
Predecessors: [0x662]
Successors: []
---
0x678 INVALID
---
0x678: INVALID 
---
Entry stack: [V12, 0xa9, V67, S14, {0xa9, 0x3b1, 0x3ba}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V594, S1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S14, {0xa9, 0x3b1, 0x3ba}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V594, S1, 0x7]

================================

Block 0x679
[0x679:0x68e]
---
Predecessors: [0x662]
Successors: [0x68f, 0x690]
---
0x679 JUMPDEST
0x67a SWAP1
0x67b PUSH1 0x20
0x67d ADD
0x67e SWAP1
0x67f PUSH1 0x20
0x681 MUL
0x682 ADD
0x683 MLOAD
0x684 DUP12
0x685 PUSH1 0x8
0x687 DUP2
0x688 MLOAD
0x689 DUP2
0x68a LT
0x68b PUSH2 0x690
0x68e JUMPI
---
0x679: JUMPDEST 
0x67b: V599 = 0x20
0x67d: V600 = ADD 0x20 S1
0x67f: V601 = 0x20
0x681: V602 = MUL 0x20 0x7
0x682: V603 = ADD 0xe0 V600
0x683: V604 = M[V603]
0x685: V605 = 0x8
0x688: V606 = M[S12]
0x68a: V607 = LT 0x8 V606
0x68b: V608 = 0x690
0x68e: JUMPI 0x690 V607
---
Entry stack: [V12, 0xa9, V67, S14, {0xa9, 0x3b1, 0x3ba}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V594, S1, 0x7]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V604, S12, 0x8]
Exit stack: [V12, 0xa9, V67, S14, {0xa9, 0x3b1, 0x3ba}, S12, S11, 0xa19b14a, S9, S8, S7, S6, S5, S4, S3, V594, V604, S12, 0x8]

================================

Block 0x68f
[0x68f:0x68f]
---
Predecessors: [0x679]
Successors: []
---
0x68f INVALID
---
0x68f: INVALID 
---
Entry stack: [V12, 0xa9, V67, S15, {0xa9, 0x3b1, 0x3ba}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V604, S1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S15, {0xa9, 0x3b1, 0x3ba}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V604, S1, 0x8]

================================

Block 0x690
[0x690:0x6a5]
---
Predecessors: [0x679]
Successors: [0x6a6, 0x6a7]
---
0x690 JUMPDEST
0x691 SWAP1
0x692 PUSH1 0x20
0x694 ADD
0x695 SWAP1
0x696 PUSH1 0x20
0x698 MUL
0x699 ADD
0x69a MLOAD
0x69b DUP13
0x69c PUSH1 0x9
0x69e DUP2
0x69f MLOAD
0x6a0 DUP2
0x6a1 LT
0x6a2 PUSH2 0x6a7
0x6a5 JUMPI
---
0x690: JUMPDEST 
0x692: V609 = 0x20
0x694: V610 = ADD 0x20 S1
0x696: V611 = 0x20
0x698: V612 = MUL 0x20 0x8
0x699: V613 = ADD 0x100 V610
0x69a: V614 = M[V613]
0x69c: V615 = 0x9
0x69f: V616 = M[S13]
0x6a1: V617 = LT 0x9 V616
0x6a2: V618 = 0x6a7
0x6a5: JUMPI 0x6a7 V617
---
Entry stack: [V12, 0xa9, V67, S15, {0xa9, 0x3b1, 0x3ba}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V604, S1, 0x8]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V614, S13, 0x9]
Exit stack: [V12, 0xa9, V67, S15, {0xa9, 0x3b1, 0x3ba}, S13, S12, 0xa19b14a, S10, S9, S8, S7, S6, S5, S4, S3, V604, V614, S13, 0x9]

================================

Block 0x6a6
[0x6a6:0x6a6]
---
Predecessors: [0x690]
Successors: []
---
0x6a6 INVALID
---
0x6a6: INVALID 
---
Entry stack: [V12, 0xa9, V67, S16, {0xa9, 0x3b1, 0x3ba}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V614, S1, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S16, {0xa9, 0x3b1, 0x3ba}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V614, S1, 0x9]

================================

Block 0x6a7
[0x6a7:0x6bc]
---
Predecessors: [0x690]
Successors: [0x6bd, 0x6be]
---
0x6a7 JUMPDEST
0x6a8 SWAP1
0x6a9 PUSH1 0x20
0x6ab ADD
0x6ac SWAP1
0x6ad PUSH1 0x20
0x6af MUL
0x6b0 ADD
0x6b1 MLOAD
0x6b2 DUP14
0x6b3 PUSH1 0xa
0x6b5 DUP2
0x6b6 MLOAD
0x6b7 DUP2
0x6b8 LT
0x6b9 PUSH2 0x6be
0x6bc JUMPI
---
0x6a7: JUMPDEST 
0x6a9: V619 = 0x20
0x6ab: V620 = ADD 0x20 S1
0x6ad: V621 = 0x20
0x6af: V622 = MUL 0x20 0x9
0x6b0: V623 = ADD 0x120 V620
0x6b1: V624 = M[V623]
0x6b3: V625 = 0xa
0x6b6: V626 = M[S14]
0x6b8: V627 = LT 0xa V626
0x6b9: V628 = 0x6be
0x6bc: JUMPI 0x6be V627
---
Entry stack: [V12, 0xa9, V67, S16, {0xa9, 0x3b1, 0x3ba}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V614, S1, 0x9]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V624, S14, 0xa]
Exit stack: [V12, 0xa9, V67, S16, {0xa9, 0x3b1, 0x3ba}, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, V614, V624, S14, 0xa]

================================

Block 0x6bd
[0x6bd:0x6bd]
---
Predecessors: [0x6a7]
Successors: []
---
0x6bd INVALID
---
0x6bd: INVALID 
---
Entry stack: [V12, 0xa9, V67, S17, {0xa9, 0x3b1, 0x3ba}, S15, S14, 0xa19b14a, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V624, S1, 0xa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S17, {0xa9, 0x3b1, 0x3ba}, S15, S14, 0xa19b14a, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V624, S1, 0xa]

================================

Block 0x6be
[0x6be:0x757]
---
Predecessors: [0x6a7]
Successors: [0x758, 0x75c]
---
0x6be JUMPDEST
0x6bf SWAP1
0x6c0 PUSH1 0x20
0x6c2 ADD
0x6c3 SWAP1
0x6c4 PUSH1 0x20
0x6c6 MUL
0x6c7 ADD
0x6c8 MLOAD
0x6c9 PUSH1 0x40
0x6cb MLOAD
0x6cc PUSH1 0xe0
0x6ce PUSH1 0x2
0x6d0 EXP
0x6d1 PUSH4 0xffffffff
0x6d6 DUP16
0x6d7 AND
0x6d8 MUL
0x6d9 DUP2
0x6da MSTORE
0x6db PUSH1 0x1
0x6dd PUSH1 0xa0
0x6df PUSH1 0x2
0x6e1 EXP
0x6e2 SUB
0x6e3 SWAP12
0x6e4 DUP13
0x6e5 AND
0x6e6 PUSH1 0x4
0x6e8 DUP3
0x6e9 ADD
0x6ea MSTORE
0x6eb PUSH1 0x24
0x6ed DUP2
0x6ee ADD
0x6ef SWAP11
0x6f0 SWAP1
0x6f1 SWAP11
0x6f2 MSTORE
0x6f3 SWAP8
0x6f4 DUP11
0x6f5 AND
0x6f6 PUSH1 0x44
0x6f8 DUP11
0x6f9 ADD
0x6fa MSTORE
0x6fb PUSH1 0x64
0x6fd DUP10
0x6fe ADD
0x6ff SWAP7
0x700 SWAP1
0x701 SWAP7
0x702 MSTORE
0x703 PUSH1 0x84
0x705 DUP9
0x706 ADD
0x707 SWAP5
0x708 SWAP1
0x709 SWAP5
0x70a MSTORE
0x70b PUSH1 0xa4
0x70d DUP8
0x70e ADD
0x70f SWAP3
0x710 SWAP1
0x711 SWAP3
0x712 MSTORE
0x713 SWAP1
0x714 SWAP6
0x715 AND
0x716 PUSH1 0xc4
0x718 DUP6
0x719 ADD
0x71a MSTORE
0x71b PUSH1 0xff
0x71d SWAP1
0x71e SWAP5
0x71f AND
0x720 PUSH1 0xe4
0x722 DUP5
0x723 ADD
0x724 MSTORE
0x725 PUSH2 0x104
0x728 DUP4
0x729 ADD
0x72a SWAP4
0x72b SWAP1
0x72c SWAP4
0x72d MSTORE
0x72e PUSH2 0x124
0x731 DUP3
0x732 ADD
0x733 SWAP3
0x734 SWAP1
0x735 SWAP3
0x736 MSTORE
0x737 PUSH2 0x144
0x73a DUP2
0x73b ADD
0x73c SWAP2
0x73d SWAP1
0x73e SWAP2
0x73f MSTORE
0x740 PUSH2 0x164
0x743 ADD
0x744 PUSH1 0x0
0x746 PUSH1 0x40
0x748 MLOAD
0x749 DUP1
0x74a DUP4
0x74b SUB
0x74c DUP2
0x74d PUSH1 0x0
0x74f DUP9
0x750 DUP1
0x751 EXTCODESIZE
0x752 ISZERO
0x753 ISZERO
0x754 PUSH2 0x75c
0x757 JUMPI
---
0x6be: JUMPDEST 
0x6c0: V629 = 0x20
0x6c2: V630 = ADD 0x20 S1
0x6c4: V631 = 0x20
0x6c6: V632 = MUL 0x20 0xa
0x6c7: V633 = ADD 0x140 V630
0x6c8: V634 = M[V633]
0x6c9: V635 = 0x40
0x6cb: V636 = M[0x40]
0x6cc: V637 = 0xe0
0x6ce: V638 = 0x2
0x6d0: V639 = EXP 0x2 0xe0
0x6d1: V640 = 0xffffffff
0x6d7: V641 = AND 0xa19b14a 0xffffffff
0x6d8: V642 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x6da: M[V636] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x6db: V643 = 0x1
0x6dd: V644 = 0xa0
0x6df: V645 = 0x2
0x6e1: V646 = EXP 0x2 0xa0
0x6e2: V647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e5: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x6e6: V649 = 0x4
0x6e9: V650 = ADD V636 0x4
0x6ea: M[V650] = V648
0x6eb: V651 = 0x24
0x6ee: V652 = ADD V636 0x24
0x6f2: M[V652] = S10
0x6f5: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x6f6: V654 = 0x44
0x6f9: V655 = ADD V636 0x44
0x6fa: M[V655] = V653
0x6fb: V656 = 0x64
0x6fe: V657 = ADD V636 0x64
0x702: M[V657] = S8
0x703: V658 = 0x84
0x706: V659 = ADD V636 0x84
0x70a: M[V659] = S7
0x70b: V660 = 0xa4
0x70e: V661 = ADD V636 0xa4
0x712: M[V661] = S6
0x715: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x716: V663 = 0xc4
0x719: V664 = ADD V636 0xc4
0x71a: M[V664] = V662
0x71b: V665 = 0xff
0x71f: V666 = AND S4 0xff
0x720: V667 = 0xe4
0x723: V668 = ADD V636 0xe4
0x724: M[V668] = V666
0x725: V669 = 0x104
0x729: V670 = ADD V636 0x104
0x72d: M[V670] = S3
0x72e: V671 = 0x124
0x732: V672 = ADD V636 0x124
0x736: M[V672] = V624
0x737: V673 = 0x144
0x73b: V674 = ADD V636 0x144
0x73f: M[V674] = V634
0x740: V675 = 0x164
0x743: V676 = ADD 0x164 V636
0x744: V677 = 0x0
0x746: V678 = 0x40
0x748: V679 = M[0x40]
0x74b: V680 = SUB V676 V679
0x74d: V681 = 0x0
0x751: V682 = EXTCODESIZE S14
0x752: V683 = ISZERO V682
0x753: V684 = ISZERO V683
0x754: V685 = 0x75c
0x757: JUMPI 0x75c V684
---
Entry stack: [V12, 0xa9, V67, S17, {0xa9, 0x3b1, 0x3ba}, S15, S14, 0xa19b14a, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V624, S1, 0xa]
Stack pops: 15
Stack additions: [S14, S13, S12, V676, 0x0, V679, V680, V679, 0x0, S14]
Exit stack: [V12, 0xa9, V67, S17, {0xa9, 0x3b1, 0x3ba}, S15, S14, 0xa19b14a, S12, V676, 0x0, V679, V680, V679, 0x0, S14]

================================

Block 0x758
[0x758:0x75b]
---
Predecessors: [0x6be]
Successors: []
---
0x758 PUSH1 0x0
0x75a DUP1
0x75b REVERT
---
0x758: V686 = 0x0
0x75b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b1, 0x3ba}, S10, S9, 0xa19b14a, S7, V676, 0x0, V679, V680, V679, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b1, 0x3ba}, S10, S9, 0xa19b14a, S7, V676, 0x0, V679, V680, V679, 0x0, S0]

================================

Block 0x75c
[0x75c:0x764]
---
Predecessors: [0x6be]
Successors: [0x765, 0x769]
---
0x75c JUMPDEST
0x75d DUP8
0x75e CALL
0x75f ISZERO
0x760 ISZERO
0x761 PUSH2 0x769
0x764 JUMPI
---
0x75c: JUMPDEST 
0x75e: V687 = CALL S7 S0 0x0 V679 V680 V679 0x0
0x75f: V688 = ISZERO V687
0x760: V689 = ISZERO V688
0x761: V690 = 0x769
0x764: JUMPI 0x769 V689
---
Entry stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b1, 0x3ba}, S10, S9, 0xa19b14a, S7, V676, 0x0, V679, V680, V679, 0x0, S0]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, 0xa9, V67, S12, {0xa9, 0x3b1, 0x3ba}, S10, S9, 0xa19b14a, S7, V676]

================================

Block 0x765
[0x765:0x768]
---
Predecessors: [0x75c]
Successors: []
---
0x765 PUSH1 0x0
0x767 DUP1
0x768 REVERT
---
0x765: V691 = 0x0
0x768: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S6, {0xa9, 0x3b1, 0x3ba}, S4, S3, 0xa19b14a, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S6, {0xa9, 0x3b1, 0x3ba}, S4, S3, 0xa19b14a, S1, S0]

================================

Block 0x769
[0x769:0x76d]
---
Predecessors: [0x75c]
Successors: [0x76e]
---
0x769 JUMPDEST
0x76a POP
0x76b POP
0x76c POP
0x76d POP
---
0x769: JUMPDEST 
---
Entry stack: [V12, 0xa9, V67, S6, {0xa9, 0x3b1, 0x3ba}, S4, S3, 0xa19b14a, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xa9, V67, S6, {0xa9, 0x3b1, 0x3ba}, S4]

================================

Block 0x76e
[0x76e:0x770]
---
Predecessors: [0x769]
Successors: [0xa9, 0x3b1, 0x3ba]
---
0x76e JUMPDEST
0x76f POP
0x770 JUMP
---
0x76e: JUMPDEST 
0x770: JUMP {0xa9, 0x3b1, 0x3ba}
---
Entry stack: [V12, 0xa9, V67, S2, {0xa9, 0x3b1, 0x3ba}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xa9, V67, S2]

================================

Block 0x771
[0x771:0x78f]
---
Predecessors: [0x229, 0x383]
Successors: [0x790, 0x791]
---
0x771 JUMPDEST
0x772 PUSH1 0x1
0x774 SLOAD
0x775 PUSH1 0x0
0x777 SWAP1
0x778 PUSH1 0x1
0x77a PUSH1 0xa0
0x77c PUSH1 0x2
0x77e EXP
0x77f SUB
0x780 AND
0x781 PUSH4 0x6c86888b
0x786 DUP4
0x787 DUP4
0x788 DUP2
0x789 MLOAD
0x78a DUP2
0x78b LT
0x78c PUSH2 0x791
0x78f JUMPI
---
0x771: JUMPDEST 
0x772: V692 = 0x1
0x774: V693 = S[0x1]
0x775: V694 = 0x0
0x778: V695 = 0x1
0x77a: V696 = 0xa0
0x77c: V697 = 0x2
0x77e: V698 = EXP 0x2 0xa0
0x77f: V699 = SUB 0x10000000000000000000000000000000000000000 0x1
0x780: V700 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0x781: V701 = 0x6c86888b
0x789: V702 = M[S0]
0x78b: V703 = LT 0x0 V702
0x78c: V704 = 0x791
0x78f: JUMPI 0x791 V703
---
Entry stack: [V12, 0xa9, V67, S2, {0x26d, 0x38c}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V700, 0x6c86888b, S0, 0x0]
Exit stack: [V12, 0xa9, V67, S2, {0x26d, 0x38c}, S0, 0x0, V700, 0x6c86888b, S0, 0x0]

================================

Block 0x790
[0x790:0x790]
---
Predecessors: [0x771]
Successors: []
---
0x790 INVALID
---
0x790: INVALID 
---
Entry stack: [V12, 0xa9, V67, S7, {0x26d, 0x38c}, S5, 0x0, V700, 0x6c86888b, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S7, {0x26d, 0x38c}, S5, 0x0, V700, 0x6c86888b, S1, 0x0]

================================

Block 0x791
[0x791:0x7a6]
---
Predecessors: [0x771]
Successors: [0x7a7, 0x7a8]
---
0x791 JUMPDEST
0x792 SWAP1
0x793 PUSH1 0x20
0x795 ADD
0x796 SWAP1
0x797 PUSH1 0x20
0x799 MUL
0x79a ADD
0x79b MLOAD
0x79c DUP5
0x79d PUSH1 0x1
0x79f DUP2
0x7a0 MLOAD
0x7a1 DUP2
0x7a2 LT
0x7a3 PUSH2 0x7a8
0x7a6 JUMPI
---
0x791: JUMPDEST 
0x793: V705 = 0x20
0x795: V706 = ADD 0x20 S1
0x797: V707 = 0x20
0x799: V708 = MUL 0x20 0x0
0x79a: V709 = ADD 0x0 V706
0x79b: V710 = M[V709]
0x79d: V711 = 0x1
0x7a0: V712 = M[S5]
0x7a2: V713 = LT 0x1 V712
0x7a3: V714 = 0x7a8
0x7a6: JUMPI 0x7a8 V713
---
Entry stack: [V12, 0xa9, V67, S7, {0x26d, 0x38c}, S5, 0x0, V700, 0x6c86888b, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V710, S5, 0x1]
Exit stack: [V12, 0xa9, V67, S7, {0x26d, 0x38c}, S5, 0x0, V700, 0x6c86888b, V710, S5, 0x1]

================================

Block 0x7a7
[0x7a7:0x7a7]
---
Predecessors: [0x791]
Successors: []
---
0x7a7 INVALID
---
0x7a7: INVALID 
---
Entry stack: [V12, 0xa9, V67, S8, {0x26d, 0x38c}, S6, 0x0, S4, 0x6c86888b, V710, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S8, {0x26d, 0x38c}, S6, 0x0, S4, 0x6c86888b, V710, S1, 0x1]

================================

Block 0x7a8
[0x7a8:0x7bd]
---
Predecessors: [0x791]
Successors: [0x7be, 0x7bf]
---
0x7a8 JUMPDEST
0x7a9 SWAP1
0x7aa PUSH1 0x20
0x7ac ADD
0x7ad SWAP1
0x7ae PUSH1 0x20
0x7b0 MUL
0x7b1 ADD
0x7b2 MLOAD
0x7b3 DUP6
0x7b4 PUSH1 0x2
0x7b6 DUP2
0x7b7 MLOAD
0x7b8 DUP2
0x7b9 LT
0x7ba PUSH2 0x7bf
0x7bd JUMPI
---
0x7a8: JUMPDEST 
0x7aa: V715 = 0x20
0x7ac: V716 = ADD 0x20 S1
0x7ae: V717 = 0x20
0x7b0: V718 = MUL 0x20 0x1
0x7b1: V719 = ADD 0x20 V716
0x7b2: V720 = M[V719]
0x7b4: V721 = 0x2
0x7b7: V722 = M[S6]
0x7b9: V723 = LT 0x2 V722
0x7ba: V724 = 0x7bf
0x7bd: JUMPI 0x7bf V723
---
Entry stack: [V12, 0xa9, V67, S8, {0x26d, 0x38c}, S6, 0x0, S4, 0x6c86888b, V710, S1, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V720, S6, 0x2]
Exit stack: [V12, 0xa9, V67, S8, {0x26d, 0x38c}, S6, 0x0, S4, 0x6c86888b, V710, V720, S6, 0x2]

================================

Block 0x7be
[0x7be:0x7be]
---
Predecessors: [0x7a8]
Successors: []
---
0x7be INVALID
---
0x7be: INVALID 
---
Entry stack: [V12, 0xa9, V67, S9, {0x26d, 0x38c}, S7, 0x0, S5, 0x6c86888b, S3, V720, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S9, {0x26d, 0x38c}, S7, 0x0, S5, 0x6c86888b, S3, V720, S1, 0x2]

================================

Block 0x7bf
[0x7bf:0x7d4]
---
Predecessors: [0x7a8]
Successors: [0x7d5, 0x7d6]
---
0x7bf JUMPDEST
0x7c0 SWAP1
0x7c1 PUSH1 0x20
0x7c3 ADD
0x7c4 SWAP1
0x7c5 PUSH1 0x20
0x7c7 MUL
0x7c8 ADD
0x7c9 MLOAD
0x7ca DUP7
0x7cb PUSH1 0x3
0x7cd DUP2
0x7ce MLOAD
0x7cf DUP2
0x7d0 LT
0x7d1 PUSH2 0x7d6
0x7d4 JUMPI
---
0x7bf: JUMPDEST 
0x7c1: V725 = 0x20
0x7c3: V726 = ADD 0x20 S1
0x7c5: V727 = 0x20
0x7c7: V728 = MUL 0x20 0x2
0x7c8: V729 = ADD 0x40 V726
0x7c9: V730 = M[V729]
0x7cb: V731 = 0x3
0x7ce: V732 = M[S7]
0x7d0: V733 = LT 0x3 V732
0x7d1: V734 = 0x7d6
0x7d4: JUMPI 0x7d6 V733
---
Entry stack: [V12, 0xa9, V67, S9, {0x26d, 0x38c}, S7, 0x0, S5, 0x6c86888b, S3, V720, S1, 0x2]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V730, S7, 0x3]
Exit stack: [V12, 0xa9, V67, S9, {0x26d, 0x38c}, S7, 0x0, S5, 0x6c86888b, S3, V720, V730, S7, 0x3]

================================

Block 0x7d5
[0x7d5:0x7d5]
---
Predecessors: [0x7bf]
Successors: []
---
0x7d5 INVALID
---
0x7d5: INVALID 
---
Entry stack: [V12, 0xa9, V67, S10, {0x26d, 0x38c}, S8, 0x0, S6, 0x6c86888b, S4, S3, V730, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S10, {0x26d, 0x38c}, S8, 0x0, S6, 0x6c86888b, S4, S3, V730, S1, 0x3]

================================

Block 0x7d6
[0x7d6:0x7eb]
---
Predecessors: [0x7bf]
Successors: [0x7ec, 0x7ed]
---
0x7d6 JUMPDEST
0x7d7 SWAP1
0x7d8 PUSH1 0x20
0x7da ADD
0x7db SWAP1
0x7dc PUSH1 0x20
0x7de MUL
0x7df ADD
0x7e0 MLOAD
0x7e1 DUP8
0x7e2 PUSH1 0x4
0x7e4 DUP2
0x7e5 MLOAD
0x7e6 DUP2
0x7e7 LT
0x7e8 PUSH2 0x7ed
0x7eb JUMPI
---
0x7d6: JUMPDEST 
0x7d8: V735 = 0x20
0x7da: V736 = ADD 0x20 S1
0x7dc: V737 = 0x20
0x7de: V738 = MUL 0x20 0x3
0x7df: V739 = ADD 0x60 V736
0x7e0: V740 = M[V739]
0x7e2: V741 = 0x4
0x7e5: V742 = M[S8]
0x7e7: V743 = LT 0x4 V742
0x7e8: V744 = 0x7ed
0x7eb: JUMPI 0x7ed V743
---
Entry stack: [V12, 0xa9, V67, S10, {0x26d, 0x38c}, S8, 0x0, S6, 0x6c86888b, S4, S3, V730, S1, 0x3]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V740, S8, 0x4]
Exit stack: [V12, 0xa9, V67, S10, {0x26d, 0x38c}, S8, 0x0, S6, 0x6c86888b, S4, S3, V730, V740, S8, 0x4]

================================

Block 0x7ec
[0x7ec:0x7ec]
---
Predecessors: [0x7d6]
Successors: []
---
0x7ec INVALID
---
0x7ec: INVALID 
---
Entry stack: [V12, 0xa9, V67, S11, {0x26d, 0x38c}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V740, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S11, {0x26d, 0x38c}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V740, S1, 0x4]

================================

Block 0x7ed
[0x7ed:0x802]
---
Predecessors: [0x7d6]
Successors: [0x803, 0x804]
---
0x7ed JUMPDEST
0x7ee SWAP1
0x7ef PUSH1 0x20
0x7f1 ADD
0x7f2 SWAP1
0x7f3 PUSH1 0x20
0x7f5 MUL
0x7f6 ADD
0x7f7 MLOAD
0x7f8 DUP9
0x7f9 PUSH1 0x5
0x7fb DUP2
0x7fc MLOAD
0x7fd DUP2
0x7fe LT
0x7ff PUSH2 0x804
0x802 JUMPI
---
0x7ed: JUMPDEST 
0x7ef: V745 = 0x20
0x7f1: V746 = ADD 0x20 S1
0x7f3: V747 = 0x20
0x7f5: V748 = MUL 0x20 0x4
0x7f6: V749 = ADD 0x80 V746
0x7f7: V750 = M[V749]
0x7f9: V751 = 0x5
0x7fc: V752 = M[S9]
0x7fe: V753 = LT 0x5 V752
0x7ff: V754 = 0x804
0x802: JUMPI 0x804 V753
---
Entry stack: [V12, 0xa9, V67, S11, {0x26d, 0x38c}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V740, S1, 0x4]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V750, S9, 0x5]
Exit stack: [V12, 0xa9, V67, S11, {0x26d, 0x38c}, S9, 0x0, S7, 0x6c86888b, S5, S4, S3, V740, V750, S9, 0x5]

================================

Block 0x803
[0x803:0x803]
---
Predecessors: [0x7ed]
Successors: []
---
0x803 INVALID
---
0x803: INVALID 
---
Entry stack: [V12, 0xa9, V67, S12, {0x26d, 0x38c}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V750, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0x26d, 0x38c}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V750, S1, 0x5]

================================

Block 0x804
[0x804:0x819]
---
Predecessors: [0x7ed]
Successors: [0x81a, 0x81b]
---
0x804 JUMPDEST
0x805 SWAP1
0x806 PUSH1 0x20
0x808 ADD
0x809 SWAP1
0x80a PUSH1 0x20
0x80c MUL
0x80d ADD
0x80e MLOAD
0x80f DUP10
0x810 PUSH1 0x6
0x812 DUP2
0x813 MLOAD
0x814 DUP2
0x815 LT
0x816 PUSH2 0x81b
0x819 JUMPI
---
0x804: JUMPDEST 
0x806: V755 = 0x20
0x808: V756 = ADD 0x20 S1
0x80a: V757 = 0x20
0x80c: V758 = MUL 0x20 0x5
0x80d: V759 = ADD 0xa0 V756
0x80e: V760 = M[V759]
0x810: V761 = 0x6
0x813: V762 = M[S10]
0x815: V763 = LT 0x6 V762
0x816: V764 = 0x81b
0x819: JUMPI 0x81b V763
---
Entry stack: [V12, 0xa9, V67, S12, {0x26d, 0x38c}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V750, S1, 0x5]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V760, S10, 0x6]
Exit stack: [V12, 0xa9, V67, S12, {0x26d, 0x38c}, S10, 0x0, S8, 0x6c86888b, S6, S5, S4, S3, V750, V760, S10, 0x6]

================================

Block 0x81a
[0x81a:0x81a]
---
Predecessors: [0x804]
Successors: []
---
0x81a INVALID
---
0x81a: INVALID 
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x38c}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V760, S1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x38c}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V760, S1, 0x6]

================================

Block 0x81b
[0x81b:0x830]
---
Predecessors: [0x804]
Successors: [0x831, 0x832]
---
0x81b JUMPDEST
0x81c SWAP1
0x81d PUSH1 0x20
0x81f ADD
0x820 SWAP1
0x821 PUSH1 0x20
0x823 MUL
0x824 ADD
0x825 MLOAD
0x826 DUP11
0x827 PUSH1 0x7
0x829 DUP2
0x82a MLOAD
0x82b DUP2
0x82c LT
0x82d PUSH2 0x832
0x830 JUMPI
---
0x81b: JUMPDEST 
0x81d: V765 = 0x20
0x81f: V766 = ADD 0x20 S1
0x821: V767 = 0x20
0x823: V768 = MUL 0x20 0x6
0x824: V769 = ADD 0xc0 V766
0x825: V770 = M[V769]
0x827: V771 = 0x7
0x82a: V772 = M[S11]
0x82c: V773 = LT 0x7 V772
0x82d: V774 = 0x832
0x830: JUMPI 0x832 V773
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x38c}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V760, S1, 0x6]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V770, S11, 0x7]
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x38c}, S11, 0x0, S9, 0x6c86888b, S7, S6, S5, S4, S3, V760, V770, S11, 0x7]

================================

Block 0x831
[0x831:0x831]
---
Predecessors: [0x81b]
Successors: []
---
0x831 INVALID
---
0x831: INVALID 
---
Entry stack: [V12, 0xa9, V67, S14, {0x26d, 0x38c}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V770, S1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S14, {0x26d, 0x38c}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V770, S1, 0x7]

================================

Block 0x832
[0x832:0x847]
---
Predecessors: [0x81b]
Successors: [0x848, 0x849]
---
0x832 JUMPDEST
0x833 SWAP1
0x834 PUSH1 0x20
0x836 ADD
0x837 SWAP1
0x838 PUSH1 0x20
0x83a MUL
0x83b ADD
0x83c MLOAD
0x83d DUP12
0x83e PUSH1 0x8
0x840 DUP2
0x841 MLOAD
0x842 DUP2
0x843 LT
0x844 PUSH2 0x849
0x847 JUMPI
---
0x832: JUMPDEST 
0x834: V775 = 0x20
0x836: V776 = ADD 0x20 S1
0x838: V777 = 0x20
0x83a: V778 = MUL 0x20 0x7
0x83b: V779 = ADD 0xe0 V776
0x83c: V780 = M[V779]
0x83e: V781 = 0x8
0x841: V782 = M[S12]
0x843: V783 = LT 0x8 V782
0x844: V784 = 0x849
0x847: JUMPI 0x849 V783
---
Entry stack: [V12, 0xa9, V67, S14, {0x26d, 0x38c}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V770, S1, 0x7]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V780, S12, 0x8]
Exit stack: [V12, 0xa9, V67, S14, {0x26d, 0x38c}, S12, 0x0, S10, 0x6c86888b, S8, S7, S6, S5, S4, S3, V770, V780, S12, 0x8]

================================

Block 0x848
[0x848:0x848]
---
Predecessors: [0x832]
Successors: []
---
0x848 INVALID
---
0x848: INVALID 
---
Entry stack: [V12, 0xa9, V67, S15, {0x26d, 0x38c}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V780, S1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S15, {0x26d, 0x38c}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V780, S1, 0x8]

================================

Block 0x849
[0x849:0x85e]
---
Predecessors: [0x832]
Successors: [0x85f, 0x860]
---
0x849 JUMPDEST
0x84a SWAP1
0x84b PUSH1 0x20
0x84d ADD
0x84e SWAP1
0x84f PUSH1 0x20
0x851 MUL
0x852 ADD
0x853 MLOAD
0x854 DUP13
0x855 PUSH1 0x9
0x857 DUP2
0x858 MLOAD
0x859 DUP2
0x85a LT
0x85b PUSH2 0x860
0x85e JUMPI
---
0x849: JUMPDEST 
0x84b: V785 = 0x20
0x84d: V786 = ADD 0x20 S1
0x84f: V787 = 0x20
0x851: V788 = MUL 0x20 0x8
0x852: V789 = ADD 0x100 V786
0x853: V790 = M[V789]
0x855: V791 = 0x9
0x858: V792 = M[S13]
0x85a: V793 = LT 0x9 V792
0x85b: V794 = 0x860
0x85e: JUMPI 0x860 V793
---
Entry stack: [V12, 0xa9, V67, S15, {0x26d, 0x38c}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V780, S1, 0x8]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V790, S13, 0x9]
Exit stack: [V12, 0xa9, V67, S15, {0x26d, 0x38c}, S13, 0x0, S11, 0x6c86888b, S9, S8, S7, S6, S5, S4, S3, V780, V790, S13, 0x9]

================================

Block 0x85f
[0x85f:0x85f]
---
Predecessors: [0x849]
Successors: []
---
0x85f INVALID
---
0x85f: INVALID 
---
Entry stack: [V12, 0xa9, V67, S16, {0x26d, 0x38c}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V790, S1, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S16, {0x26d, 0x38c}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V790, S1, 0x9]

================================

Block 0x860
[0x860:0x875]
---
Predecessors: [0x849]
Successors: [0x876, 0x877]
---
0x860 JUMPDEST
0x861 SWAP1
0x862 PUSH1 0x20
0x864 ADD
0x865 SWAP1
0x866 PUSH1 0x20
0x868 MUL
0x869 ADD
0x86a MLOAD
0x86b DUP14
0x86c PUSH1 0xa
0x86e DUP2
0x86f MLOAD
0x870 DUP2
0x871 LT
0x872 PUSH2 0x877
0x875 JUMPI
---
0x860: JUMPDEST 
0x862: V795 = 0x20
0x864: V796 = ADD 0x20 S1
0x866: V797 = 0x20
0x868: V798 = MUL 0x20 0x9
0x869: V799 = ADD 0x120 V796
0x86a: V800 = M[V799]
0x86c: V801 = 0xa
0x86f: V802 = M[S14]
0x871: V803 = LT 0xa V802
0x872: V804 = 0x877
0x875: JUMPI 0x877 V803
---
Entry stack: [V12, 0xa9, V67, S16, {0x26d, 0x38c}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V790, S1, 0x9]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V800, S14, 0xa]
Exit stack: [V12, 0xa9, V67, S16, {0x26d, 0x38c}, S14, 0x0, S12, 0x6c86888b, S10, S9, S8, S7, S6, S5, S4, S3, V790, V800, S14, 0xa]

================================

Block 0x876
[0x876:0x876]
---
Predecessors: [0x860]
Successors: []
---
0x876 INVALID
---
0x876: INVALID 
---
Entry stack: [V12, 0xa9, V67, S17, {0x26d, 0x38c}, S15, 0x0, S13, 0x6c86888b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V800, S1, 0xa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S17, {0x26d, 0x38c}, S15, 0x0, S13, 0x6c86888b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V800, S1, 0xa]

================================

Block 0x877
[0x877:0x918]
---
Predecessors: [0x860]
Successors: [0x53f, 0x919]
---
0x877 JUMPDEST
0x878 SWAP1
0x879 PUSH1 0x20
0x87b ADD
0x87c SWAP1
0x87d PUSH1 0x20
0x87f MUL
0x880 ADD
0x881 MLOAD
0x882 ADDRESS
0x883 PUSH1 0x0
0x885 PUSH1 0x40
0x887 MLOAD
0x888 PUSH1 0x20
0x88a ADD
0x88b MSTORE
0x88c PUSH1 0x40
0x88e MLOAD
0x88f PUSH1 0xe0
0x891 PUSH1 0x2
0x893 EXP
0x894 PUSH4 0xffffffff
0x899 DUP16
0x89a AND
0x89b MUL
0x89c DUP2
0x89d MSTORE
0x89e PUSH1 0x1
0x8a0 PUSH1 0xa0
0x8a2 PUSH1 0x2
0x8a4 EXP
0x8a5 SUB
0x8a6 SWAP13
0x8a7 DUP14
0x8a8 AND
0x8a9 PUSH1 0x4
0x8ab DUP3
0x8ac ADD
0x8ad MSTORE
0x8ae PUSH1 0x24
0x8b0 DUP2
0x8b1 ADD
0x8b2 SWAP12
0x8b3 SWAP1
0x8b4 SWAP12
0x8b5 MSTORE
0x8b6 SWAP9
0x8b7 DUP12
0x8b8 AND
0x8b9 PUSH1 0x44
0x8bb DUP12
0x8bc ADD
0x8bd MSTORE
0x8be PUSH1 0x64
0x8c0 DUP11
0x8c1 ADD
0x8c2 SWAP8
0x8c3 SWAP1
0x8c4 SWAP8
0x8c5 MSTORE
0x8c6 PUSH1 0x84
0x8c8 DUP10
0x8c9 ADD
0x8ca SWAP6
0x8cb SWAP1
0x8cc SWAP6
0x8cd MSTORE
0x8ce PUSH1 0xa4
0x8d0 DUP9
0x8d1 ADD
0x8d2 SWAP4
0x8d3 SWAP1
0x8d4 SWAP4
0x8d5 MSTORE
0x8d6 SWAP1
0x8d7 DUP8
0x8d8 AND
0x8d9 PUSH1 0xc4
0x8db DUP8
0x8dc ADD
0x8dd MSTORE
0x8de PUSH1 0xff
0x8e0 AND
0x8e1 PUSH1 0xe4
0x8e3 DUP7
0x8e4 ADD
0x8e5 MSTORE
0x8e6 PUSH2 0x104
0x8e9 DUP6
0x8ea ADD
0x8eb MSTORE
0x8ec PUSH2 0x124
0x8ef DUP5
0x8f0 ADD
0x8f1 MSTORE
0x8f2 PUSH2 0x144
0x8f5 DUP4
0x8f6 ADD
0x8f7 MSTORE
0x8f8 SWAP1
0x8f9 SWAP2
0x8fa AND
0x8fb PUSH2 0x164
0x8fe DUP3
0x8ff ADD
0x900 MSTORE
0x901 PUSH2 0x184
0x904 ADD
0x905 PUSH1 0x20
0x907 PUSH1 0x40
0x909 MLOAD
0x90a DUP1
0x90b DUP4
0x90c SUB
0x90d DUP2
0x90e PUSH1 0x0
0x910 DUP8
0x911 DUP1
0x912 EXTCODESIZE
0x913 ISZERO
0x914 ISZERO
0x915 PUSH2 0x53f
0x918 JUMPI
---
0x877: JUMPDEST 
0x879: V805 = 0x20
0x87b: V806 = ADD 0x20 S1
0x87d: V807 = 0x20
0x87f: V808 = MUL 0x20 0xa
0x880: V809 = ADD 0x140 V806
0x881: V810 = M[V809]
0x882: V811 = ADDRESS
0x883: V812 = 0x0
0x885: V813 = 0x40
0x887: V814 = M[0x40]
0x888: V815 = 0x20
0x88a: V816 = ADD 0x20 V814
0x88b: M[V816] = 0x0
0x88c: V817 = 0x40
0x88e: V818 = M[0x40]
0x88f: V819 = 0xe0
0x891: V820 = 0x2
0x893: V821 = EXP 0x2 0xe0
0x894: V822 = 0xffffffff
0x89a: V823 = AND 0x6c86888b 0xffffffff
0x89b: V824 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x89d: M[V818] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x89e: V825 = 0x1
0x8a0: V826 = 0xa0
0x8a2: V827 = 0x2
0x8a4: V828 = EXP 0x2 0xa0
0x8a5: V829 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a8: V830 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x8a9: V831 = 0x4
0x8ac: V832 = ADD V818 0x4
0x8ad: M[V832] = V830
0x8ae: V833 = 0x24
0x8b1: V834 = ADD V818 0x24
0x8b5: M[V834] = S10
0x8b8: V835 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x8b9: V836 = 0x44
0x8bc: V837 = ADD V818 0x44
0x8bd: M[V837] = V835
0x8be: V838 = 0x64
0x8c1: V839 = ADD V818 0x64
0x8c5: M[V839] = S8
0x8c6: V840 = 0x84
0x8c9: V841 = ADD V818 0x84
0x8cd: M[V841] = S7
0x8ce: V842 = 0xa4
0x8d1: V843 = ADD V818 0xa4
0x8d5: M[V843] = S6
0x8d8: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x8d9: V845 = 0xc4
0x8dc: V846 = ADD V818 0xc4
0x8dd: M[V846] = V844
0x8de: V847 = 0xff
0x8e0: V848 = AND 0xff S4
0x8e1: V849 = 0xe4
0x8e4: V850 = ADD V818 0xe4
0x8e5: M[V850] = V848
0x8e6: V851 = 0x104
0x8ea: V852 = ADD V818 0x104
0x8eb: M[V852] = S3
0x8ec: V853 = 0x124
0x8f0: V854 = ADD V818 0x124
0x8f1: M[V854] = V800
0x8f2: V855 = 0x144
0x8f6: V856 = ADD V818 0x144
0x8f7: M[V856] = V810
0x8fa: V857 = AND 0xffffffffffffffffffffffffffffffffffffffff V811
0x8fb: V858 = 0x164
0x8ff: V859 = ADD V818 0x164
0x900: M[V859] = V857
0x901: V860 = 0x184
0x904: V861 = ADD 0x184 V818
0x905: V862 = 0x20
0x907: V863 = 0x40
0x909: V864 = M[0x40]
0x90c: V865 = SUB V861 V864
0x90e: V866 = 0x0
0x912: V867 = EXTCODESIZE S13
0x913: V868 = ISZERO V867
0x914: V869 = ISZERO V868
0x915: V870 = 0x53f
0x918: JUMPI 0x53f V869
---
Entry stack: [V12, 0xa9, V67, S17, {0x26d, 0x38c}, S15, 0x0, S13, 0x6c86888b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V800, S1, 0xa]
Stack pops: 14
Stack additions: [S13, S12, V861, 0x20, V864, V865, V864, 0x0, S13]
Exit stack: [V12, 0xa9, V67, S17, {0x26d, 0x38c}, S15, 0x0, S13, 0x6c86888b, V861, 0x20, V864, V865, V864, 0x0, S13]

================================

Block 0x919
[0x919:0x91c]
---
Predecessors: [0x877]
Successors: []
---
0x919 PUSH1 0x0
0x91b DUP1
0x91c REVERT
---
0x919: V871 = 0x0
0x91c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S12, {0x26d, 0x38c}, S10, 0x0, S8, 0x6c86888b, V861, 0x20, V864, V865, V864, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0x26d, 0x38c}, S10, 0x0, S8, 0x6c86888b, V861, 0x20, V864, V865, V864, 0x0, S0]

================================

Block 0x91d
[0x91d:0x929]
---
Predecessors: []
Successors: [0x550, 0x92a]
---
0x91d JUMPDEST
0x91e PUSH2 0x2c6
0x921 GAS
0x922 SUB
0x923 CALL
0x924 ISZERO
0x925 ISZERO
0x926 PUSH2 0x550
0x929 JUMPI
---
0x91d: JUMPDEST 
0x91e: V872 = 0x2c6
0x921: V873 = GAS
0x922: V874 = SUB V873 0x2c6
0x923: V875 = CALL V874 S0 S1 S2 S3 S4 S5
0x924: V876 = ISZERO V875
0x925: V877 = ISZERO V876
0x926: V878 = 0x550
0x929: JUMPI 0x550 V877
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x92a
[0x92a:0x939]
---
Predecessors: [0x91d]
Successors: [0x93a]
---
0x92a PUSH1 0x0
0x92c DUP1
0x92d REVERT
0x92e JUMPDEST
0x92f POP
0x930 POP
0x931 POP
0x932 PUSH1 0x40
0x934 MLOAD
0x935 DUP1
0x936 MLOAD
0x937 SWAP2
0x938 POP
0x939 POP
---
0x92a: V879 = 0x0
0x92d: REVERT 0x0 0x0
0x92e: JUMPDEST 
0x932: V880 = 0x40
0x934: V881 = M[0x40]
0x936: V882 = M[V881]
---
Entry stack: []
Stack pops: 0
Stack additions: [V882]
Exit stack: []

================================

Block 0x93a
[0x93a:0x93e]
---
Predecessors: [0x92a]
Successors: []
Has unresolved jump.
---
0x93a JUMPDEST
0x93b SWAP2
0x93c SWAP1
0x93d POP
0x93e JUMP
---
0x93a: JUMPDEST 
0x93e: JUMP S2
---
Entry stack: [V882]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V882]

================================

Block 0x93f
[0x93f:0x955]
---
Predecessors: [0x28c]
Successors: [0x956, 0x957]
---
0x93f JUMPDEST
0x940 PUSH1 0x2
0x942 SLOAD
0x943 CALLER
0x944 PUSH1 0x1
0x946 PUSH1 0xa0
0x948 PUSH1 0x2
0x94a EXP
0x94b SUB
0x94c SWAP1
0x94d DUP2
0x94e AND
0x94f SWAP2
0x950 AND
0x951 EQ
0x952 PUSH2 0x957
0x955 JUMPI
---
0x93f: JUMPDEST 
0x940: V883 = 0x2
0x942: V884 = S[0x2]
0x943: V885 = CALLER
0x944: V886 = 0x1
0x946: V887 = 0xa0
0x948: V888 = 0x2
0x94a: V889 = EXP 0x2 0xa0
0x94b: V890 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94e: V891 = AND 0xffffffffffffffffffffffffffffffffffffffff V885
0x950: V892 = AND V884 0xffffffffffffffffffffffffffffffffffffffff
0x951: V893 = EQ V892 V891
0x952: V894 = 0x957
0x955: JUMPI 0x957 V893
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0x956
[0x956:0x956]
---
Predecessors: [0x93f]
Successors: []
---
0x956 INVALID
---
0x956: INVALID 
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0x957
[0x957:0x969]
---
Predecessors: [0x93f]
Successors: [0xcd1]
---
0x957 JUMPDEST
0x958 PUSH2 0x96a
0x95b ADDRESS
0x95c PUSH1 0x1
0x95e PUSH1 0xa0
0x960 PUSH1 0x2
0x962 EXP
0x963 SUB
0x964 AND
0x965 BALANCE
0x966 PUSH2 0xcd1
0x969 JUMP
---
0x957: JUMPDEST 
0x958: V895 = 0x96a
0x95b: V896 = ADDRESS
0x95c: V897 = 0x1
0x95e: V898 = 0xa0
0x960: V899 = 0x2
0x962: V900 = EXP 0x2 0xa0
0x963: V901 = SUB 0x10000000000000000000000000000000000000000 0x1
0x964: V902 = AND 0xffffffffffffffffffffffffffffffffffffffff V896
0x965: V903 = BALANCE V902
0x966: V904 = 0xcd1
0x969: JUMP 0xcd1
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: [0x96a, V903]
Exit stack: [V12, 0xa9, 0x96a, V903]

================================

Block 0x96a
[0x96a:0x96a]
---
Predecessors: [0x3bb, 0x5b6]
Successors: [0x96b]
---
0x96a JUMPDEST
---
0x96a: JUMPDEST 
---
Entry stack: [V12, S3, {0xa9, 0x96a}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x96a}, S1, S0]

================================

Block 0x96b
[0x96b:0x96c]
---
Predecessors: [0x96a]
Successors: [0xa9]
---
0x96b JUMPDEST
0x96c JUMP
---
0x96b: JUMPDEST 
0x96c: JUMP S0
---
Entry stack: [V12, S3, {0xa9, 0x96a}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S3, {0xa9, 0x96a}, S1]

================================

Block 0x96d
[0x96d:0x97a]
---
Predecessors: [0x2a1, 0x393]
Successors: [0x97b, 0x97c]
---
0x96d JUMPDEST
0x96e PUSH1 0x0
0x970 DUP2
0x971 PUSH1 0xa
0x973 DUP2
0x974 MLOAD
0x975 DUP2
0x976 LT
0x977 PUSH2 0x97c
0x97a JUMPI
---
0x96d: JUMPDEST 
0x96e: V905 = 0x0
0x971: V906 = 0xa
0x974: V907 = M[S0]
0x976: V908 = LT 0xa V907
0x977: V909 = 0x97c
0x97a: JUMPI 0x97c V908
---
Entry stack: [V12, 0xa9, V67, S2, {0x26d, 0x39c}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, S0, 0xa]
Exit stack: [V12, 0xa9, V67, S2, {0x26d, 0x39c}, S0, 0x0, S0, 0xa]

================================

Block 0x97b
[0x97b:0x97b]
---
Predecessors: [0x96d]
Successors: []
---
0x97b INVALID
---
0x97b: INVALID 
---
Entry stack: [V12, 0xa9, V67, S5, {0x26d, 0x39c}, S3, 0x0, S1, 0xa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S5, {0x26d, 0x39c}, S3, 0x0, S1, 0xa]

================================

Block 0x97c
[0x97c:0x9a2]
---
Predecessors: [0x96d]
Successors: [0x9a3, 0x9a4]
---
0x97c JUMPDEST
0x97d SWAP1
0x97e PUSH1 0x20
0x980 ADD
0x981 SWAP1
0x982 PUSH1 0x20
0x984 MUL
0x985 ADD
0x986 MLOAD
0x987 PUSH1 0x1
0x989 SLOAD
0x98a PUSH1 0x1
0x98c PUSH1 0xa0
0x98e PUSH1 0x2
0x990 EXP
0x991 SUB
0x992 AND
0x993 PUSH4 0xfb6e155f
0x998 DUP5
0x999 PUSH1 0x0
0x99b DUP2
0x99c MLOAD
0x99d DUP2
0x99e LT
0x99f PUSH2 0x9a4
0x9a2 JUMPI
---
0x97c: JUMPDEST 
0x97e: V910 = 0x20
0x980: V911 = ADD 0x20 S1
0x982: V912 = 0x20
0x984: V913 = MUL 0x20 0xa
0x985: V914 = ADD 0x140 V911
0x986: V915 = M[V914]
0x987: V916 = 0x1
0x989: V917 = S[0x1]
0x98a: V918 = 0x1
0x98c: V919 = 0xa0
0x98e: V920 = 0x2
0x990: V921 = EXP 0x2 0xa0
0x991: V922 = SUB 0x10000000000000000000000000000000000000000 0x1
0x992: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V917
0x993: V924 = 0xfb6e155f
0x999: V925 = 0x0
0x99c: V926 = M[S3]
0x99e: V927 = LT 0x0 V926
0x99f: V928 = 0x9a4
0x9a2: JUMPI 0x9a4 V927
---
Entry stack: [V12, 0xa9, V67, S5, {0x26d, 0x39c}, S3, 0x0, S1, 0xa]
Stack pops: 4
Stack additions: [S3, S2, V915, V923, 0xfb6e155f, S3, 0x0]
Exit stack: [V12, 0xa9, V67, S5, {0x26d, 0x39c}, S3, 0x0, V915, V923, 0xfb6e155f, S3, 0x0]

================================

Block 0x9a3
[0x9a3:0x9a3]
---
Predecessors: [0x97c]
Successors: []
---
0x9a3 INVALID
---
0x9a3: INVALID 
---
Entry stack: [V12, 0xa9, V67, S8, {0x26d, 0x39c}, S6, 0x0, V915, V923, 0xfb6e155f, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S8, {0x26d, 0x39c}, S6, 0x0, V915, V923, 0xfb6e155f, S1, 0x0]

================================

Block 0x9a4
[0x9a4:0x9b9]
---
Predecessors: [0x97c]
Successors: [0x9ba, 0x9bb]
---
0x9a4 JUMPDEST
0x9a5 SWAP1
0x9a6 PUSH1 0x20
0x9a8 ADD
0x9a9 SWAP1
0x9aa PUSH1 0x20
0x9ac MUL
0x9ad ADD
0x9ae MLOAD
0x9af DUP6
0x9b0 PUSH1 0x1
0x9b2 DUP2
0x9b3 MLOAD
0x9b4 DUP2
0x9b5 LT
0x9b6 PUSH2 0x9bb
0x9b9 JUMPI
---
0x9a4: JUMPDEST 
0x9a6: V929 = 0x20
0x9a8: V930 = ADD 0x20 S1
0x9aa: V931 = 0x20
0x9ac: V932 = MUL 0x20 0x0
0x9ad: V933 = ADD 0x0 V930
0x9ae: V934 = M[V933]
0x9b0: V935 = 0x1
0x9b3: V936 = M[S6]
0x9b5: V937 = LT 0x1 V936
0x9b6: V938 = 0x9bb
0x9b9: JUMPI 0x9bb V937
---
Entry stack: [V12, 0xa9, V67, S8, {0x26d, 0x39c}, S6, 0x0, V915, V923, 0xfb6e155f, S1, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V934, S6, 0x1]
Exit stack: [V12, 0xa9, V67, S8, {0x26d, 0x39c}, S6, 0x0, V915, V923, 0xfb6e155f, V934, S6, 0x1]

================================

Block 0x9ba
[0x9ba:0x9ba]
---
Predecessors: [0x9a4]
Successors: []
---
0x9ba INVALID
---
0x9ba: INVALID 
---
Entry stack: [V12, 0xa9, V67, S9, {0x26d, 0x39c}, S7, 0x0, S5, S4, 0xfb6e155f, V934, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S9, {0x26d, 0x39c}, S7, 0x0, S5, S4, 0xfb6e155f, V934, S1, 0x1]

================================

Block 0x9bb
[0x9bb:0x9d0]
---
Predecessors: [0x9a4]
Successors: [0x9d1, 0x9d2]
---
0x9bb JUMPDEST
0x9bc SWAP1
0x9bd PUSH1 0x20
0x9bf ADD
0x9c0 SWAP1
0x9c1 PUSH1 0x20
0x9c3 MUL
0x9c4 ADD
0x9c5 MLOAD
0x9c6 DUP7
0x9c7 PUSH1 0x2
0x9c9 DUP2
0x9ca MLOAD
0x9cb DUP2
0x9cc LT
0x9cd PUSH2 0x9d2
0x9d0 JUMPI
---
0x9bb: JUMPDEST 
0x9bd: V939 = 0x20
0x9bf: V940 = ADD 0x20 S1
0x9c1: V941 = 0x20
0x9c3: V942 = MUL 0x20 0x1
0x9c4: V943 = ADD 0x20 V940
0x9c5: V944 = M[V943]
0x9c7: V945 = 0x2
0x9ca: V946 = M[S7]
0x9cc: V947 = LT 0x2 V946
0x9cd: V948 = 0x9d2
0x9d0: JUMPI 0x9d2 V947
---
Entry stack: [V12, 0xa9, V67, S9, {0x26d, 0x39c}, S7, 0x0, S5, S4, 0xfb6e155f, V934, S1, 0x1]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V944, S7, 0x2]
Exit stack: [V12, 0xa9, V67, S9, {0x26d, 0x39c}, S7, 0x0, S5, S4, 0xfb6e155f, V934, V944, S7, 0x2]

================================

Block 0x9d1
[0x9d1:0x9d1]
---
Predecessors: [0x9bb]
Successors: []
---
0x9d1 INVALID
---
0x9d1: INVALID 
---
Entry stack: [V12, 0xa9, V67, S10, {0x26d, 0x39c}, S8, 0x0, S6, S5, 0xfb6e155f, S3, V944, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S10, {0x26d, 0x39c}, S8, 0x0, S6, S5, 0xfb6e155f, S3, V944, S1, 0x2]

================================

Block 0x9d2
[0x9d2:0x9e7]
---
Predecessors: [0x9bb]
Successors: [0x9e8, 0x9e9]
---
0x9d2 JUMPDEST
0x9d3 SWAP1
0x9d4 PUSH1 0x20
0x9d6 ADD
0x9d7 SWAP1
0x9d8 PUSH1 0x20
0x9da MUL
0x9db ADD
0x9dc MLOAD
0x9dd DUP8
0x9de PUSH1 0x3
0x9e0 DUP2
0x9e1 MLOAD
0x9e2 DUP2
0x9e3 LT
0x9e4 PUSH2 0x9e9
0x9e7 JUMPI
---
0x9d2: JUMPDEST 
0x9d4: V949 = 0x20
0x9d6: V950 = ADD 0x20 S1
0x9d8: V951 = 0x20
0x9da: V952 = MUL 0x20 0x2
0x9db: V953 = ADD 0x40 V950
0x9dc: V954 = M[V953]
0x9de: V955 = 0x3
0x9e1: V956 = M[S8]
0x9e3: V957 = LT 0x3 V956
0x9e4: V958 = 0x9e9
0x9e7: JUMPI 0x9e9 V957
---
Entry stack: [V12, 0xa9, V67, S10, {0x26d, 0x39c}, S8, 0x0, S6, S5, 0xfb6e155f, S3, V944, S1, 0x2]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V954, S8, 0x3]
Exit stack: [V12, 0xa9, V67, S10, {0x26d, 0x39c}, S8, 0x0, S6, S5, 0xfb6e155f, S3, V944, V954, S8, 0x3]

================================

Block 0x9e8
[0x9e8:0x9e8]
---
Predecessors: [0x9d2]
Successors: []
---
0x9e8 INVALID
---
0x9e8: INVALID 
---
Entry stack: [V12, 0xa9, V67, S11, {0x26d, 0x39c}, S9, 0x0, S7, S6, 0xfb6e155f, S4, S3, V954, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S11, {0x26d, 0x39c}, S9, 0x0, S7, S6, 0xfb6e155f, S4, S3, V954, S1, 0x3]

================================

Block 0x9e9
[0x9e9:0x9fe]
---
Predecessors: [0x9d2]
Successors: [0x9ff, 0xa00]
---
0x9e9 JUMPDEST
0x9ea SWAP1
0x9eb PUSH1 0x20
0x9ed ADD
0x9ee SWAP1
0x9ef PUSH1 0x20
0x9f1 MUL
0x9f2 ADD
0x9f3 MLOAD
0x9f4 DUP9
0x9f5 PUSH1 0x4
0x9f7 DUP2
0x9f8 MLOAD
0x9f9 DUP2
0x9fa LT
0x9fb PUSH2 0xa00
0x9fe JUMPI
---
0x9e9: JUMPDEST 
0x9eb: V959 = 0x20
0x9ed: V960 = ADD 0x20 S1
0x9ef: V961 = 0x20
0x9f1: V962 = MUL 0x20 0x3
0x9f2: V963 = ADD 0x60 V960
0x9f3: V964 = M[V963]
0x9f5: V965 = 0x4
0x9f8: V966 = M[S9]
0x9fa: V967 = LT 0x4 V966
0x9fb: V968 = 0xa00
0x9fe: JUMPI 0xa00 V967
---
Entry stack: [V12, 0xa9, V67, S11, {0x26d, 0x39c}, S9, 0x0, S7, S6, 0xfb6e155f, S4, S3, V954, S1, 0x3]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V964, S9, 0x4]
Exit stack: [V12, 0xa9, V67, S11, {0x26d, 0x39c}, S9, 0x0, S7, S6, 0xfb6e155f, S4, S3, V954, V964, S9, 0x4]

================================

Block 0x9ff
[0x9ff:0x9ff]
---
Predecessors: [0x9e9]
Successors: []
---
0x9ff INVALID
---
0x9ff: INVALID 
---
Entry stack: [V12, 0xa9, V67, S12, {0x26d, 0x39c}, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V964, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S12, {0x26d, 0x39c}, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V964, S1, 0x4]

================================

Block 0xa00
[0xa00:0xa15]
---
Predecessors: [0x9e9]
Successors: [0xa16, 0xa17]
---
0xa00 JUMPDEST
0xa01 SWAP1
0xa02 PUSH1 0x20
0xa04 ADD
0xa05 SWAP1
0xa06 PUSH1 0x20
0xa08 MUL
0xa09 ADD
0xa0a MLOAD
0xa0b DUP10
0xa0c PUSH1 0x5
0xa0e DUP2
0xa0f MLOAD
0xa10 DUP2
0xa11 LT
0xa12 PUSH2 0xa17
0xa15 JUMPI
---
0xa00: JUMPDEST 
0xa02: V969 = 0x20
0xa04: V970 = ADD 0x20 S1
0xa06: V971 = 0x20
0xa08: V972 = MUL 0x20 0x4
0xa09: V973 = ADD 0x80 V970
0xa0a: V974 = M[V973]
0xa0c: V975 = 0x5
0xa0f: V976 = M[S10]
0xa11: V977 = LT 0x5 V976
0xa12: V978 = 0xa17
0xa15: JUMPI 0xa17 V977
---
Entry stack: [V12, 0xa9, V67, S12, {0x26d, 0x39c}, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V964, S1, 0x4]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V974, S10, 0x5]
Exit stack: [V12, 0xa9, V67, S12, {0x26d, 0x39c}, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V964, V974, S10, 0x5]

================================

Block 0xa16
[0xa16:0xa16]
---
Predecessors: [0xa00]
Successors: []
---
0xa16 INVALID
---
0xa16: INVALID 
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x39c}, S11, 0x0, S9, S8, 0xfb6e155f, S6, S5, S4, S3, V974, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x39c}, S11, 0x0, S9, S8, 0xfb6e155f, S6, S5, S4, S3, V974, S1, 0x5]

================================

Block 0xa17
[0xa17:0xa2c]
---
Predecessors: [0xa00]
Successors: [0xa2d, 0xa2e]
---
0xa17 JUMPDEST
0xa18 SWAP1
0xa19 PUSH1 0x20
0xa1b ADD
0xa1c SWAP1
0xa1d PUSH1 0x20
0xa1f MUL
0xa20 ADD
0xa21 MLOAD
0xa22 DUP11
0xa23 PUSH1 0x6
0xa25 DUP2
0xa26 MLOAD
0xa27 DUP2
0xa28 LT
0xa29 PUSH2 0xa2e
0xa2c JUMPI
---
0xa17: JUMPDEST 
0xa19: V979 = 0x20
0xa1b: V980 = ADD 0x20 S1
0xa1d: V981 = 0x20
0xa1f: V982 = MUL 0x20 0x5
0xa20: V983 = ADD 0xa0 V980
0xa21: V984 = M[V983]
0xa23: V985 = 0x6
0xa26: V986 = M[S11]
0xa28: V987 = LT 0x6 V986
0xa29: V988 = 0xa2e
0xa2c: JUMPI 0xa2e V987
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x39c}, S11, 0x0, S9, S8, 0xfb6e155f, S6, S5, S4, S3, V974, S1, 0x5]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V984, S11, 0x6]
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x39c}, S11, 0x0, S9, S8, 0xfb6e155f, S6, S5, S4, S3, V974, V984, S11, 0x6]

================================

Block 0xa2d
[0xa2d:0xa2d]
---
Predecessors: [0xa17]
Successors: []
---
0xa2d INVALID
---
0xa2d: INVALID 
---
Entry stack: [V12, 0xa9, V67, S14, {0x26d, 0x39c}, S12, 0x0, S10, S9, 0xfb6e155f, S7, S6, S5, S4, S3, V984, S1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S14, {0x26d, 0x39c}, S12, 0x0, S10, S9, 0xfb6e155f, S7, S6, S5, S4, S3, V984, S1, 0x6]

================================

Block 0xa2e
[0xa2e:0xa43]
---
Predecessors: [0xa17]
Successors: [0xa44, 0xa45]
---
0xa2e JUMPDEST
0xa2f SWAP1
0xa30 PUSH1 0x20
0xa32 ADD
0xa33 SWAP1
0xa34 PUSH1 0x20
0xa36 MUL
0xa37 ADD
0xa38 MLOAD
0xa39 DUP12
0xa3a PUSH1 0x7
0xa3c DUP2
0xa3d MLOAD
0xa3e DUP2
0xa3f LT
0xa40 PUSH2 0xa45
0xa43 JUMPI
---
0xa2e: JUMPDEST 
0xa30: V989 = 0x20
0xa32: V990 = ADD 0x20 S1
0xa34: V991 = 0x20
0xa36: V992 = MUL 0x20 0x6
0xa37: V993 = ADD 0xc0 V990
0xa38: V994 = M[V993]
0xa3a: V995 = 0x7
0xa3d: V996 = M[S12]
0xa3f: V997 = LT 0x7 V996
0xa40: V998 = 0xa45
0xa43: JUMPI 0xa45 V997
---
Entry stack: [V12, 0xa9, V67, S14, {0x26d, 0x39c}, S12, 0x0, S10, S9, 0xfb6e155f, S7, S6, S5, S4, S3, V984, S1, 0x6]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V994, S12, 0x7]
Exit stack: [V12, 0xa9, V67, S14, {0x26d, 0x39c}, S12, 0x0, S10, S9, 0xfb6e155f, S7, S6, S5, S4, S3, V984, V994, S12, 0x7]

================================

Block 0xa44
[0xa44:0xa44]
---
Predecessors: [0xa2e]
Successors: []
---
0xa44 INVALID
---
0xa44: INVALID 
---
Entry stack: [V12, 0xa9, V67, S15, {0x26d, 0x39c}, S13, 0x0, S11, S10, 0xfb6e155f, S8, S7, S6, S5, S4, S3, V994, S1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S15, {0x26d, 0x39c}, S13, 0x0, S11, S10, 0xfb6e155f, S8, S7, S6, S5, S4, S3, V994, S1, 0x7]

================================

Block 0xa45
[0xa45:0xa5a]
---
Predecessors: [0xa2e]
Successors: [0xa5b, 0xa5c]
---
0xa45 JUMPDEST
0xa46 SWAP1
0xa47 PUSH1 0x20
0xa49 ADD
0xa4a SWAP1
0xa4b PUSH1 0x20
0xa4d MUL
0xa4e ADD
0xa4f MLOAD
0xa50 DUP13
0xa51 PUSH1 0x8
0xa53 DUP2
0xa54 MLOAD
0xa55 DUP2
0xa56 LT
0xa57 PUSH2 0xa5c
0xa5a JUMPI
---
0xa45: JUMPDEST 
0xa47: V999 = 0x20
0xa49: V1000 = ADD 0x20 S1
0xa4b: V1001 = 0x20
0xa4d: V1002 = MUL 0x20 0x7
0xa4e: V1003 = ADD 0xe0 V1000
0xa4f: V1004 = M[V1003]
0xa51: V1005 = 0x8
0xa54: V1006 = M[S13]
0xa56: V1007 = LT 0x8 V1006
0xa57: V1008 = 0xa5c
0xa5a: JUMPI 0xa5c V1007
---
Entry stack: [V12, 0xa9, V67, S15, {0x26d, 0x39c}, S13, 0x0, S11, S10, 0xfb6e155f, S8, S7, S6, S5, S4, S3, V994, S1, 0x7]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1004, S13, 0x8]
Exit stack: [V12, 0xa9, V67, S15, {0x26d, 0x39c}, S13, 0x0, S11, S10, 0xfb6e155f, S8, S7, S6, S5, S4, S3, V994, V1004, S13, 0x8]

================================

Block 0xa5b
[0xa5b:0xa5b]
---
Predecessors: [0xa45]
Successors: []
---
0xa5b INVALID
---
0xa5b: INVALID 
---
Entry stack: [V12, 0xa9, V67, S16, {0x26d, 0x39c}, S14, 0x0, S12, S11, 0xfb6e155f, S9, S8, S7, S6, S5, S4, S3, V1004, S1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S16, {0x26d, 0x39c}, S14, 0x0, S12, S11, 0xfb6e155f, S9, S8, S7, S6, S5, S4, S3, V1004, S1, 0x8]

================================

Block 0xa5c
[0xa5c:0xa71]
---
Predecessors: [0xa45]
Successors: [0xa72, 0xa73]
---
0xa5c JUMPDEST
0xa5d SWAP1
0xa5e PUSH1 0x20
0xa60 ADD
0xa61 SWAP1
0xa62 PUSH1 0x20
0xa64 MUL
0xa65 ADD
0xa66 MLOAD
0xa67 DUP14
0xa68 PUSH1 0x9
0xa6a DUP2
0xa6b MLOAD
0xa6c DUP2
0xa6d LT
0xa6e PUSH2 0xa73
0xa71 JUMPI
---
0xa5c: JUMPDEST 
0xa5e: V1009 = 0x20
0xa60: V1010 = ADD 0x20 S1
0xa62: V1011 = 0x20
0xa64: V1012 = MUL 0x20 0x8
0xa65: V1013 = ADD 0x100 V1010
0xa66: V1014 = M[V1013]
0xa68: V1015 = 0x9
0xa6b: V1016 = M[S14]
0xa6d: V1017 = LT 0x9 V1016
0xa6e: V1018 = 0xa73
0xa71: JUMPI 0xa73 V1017
---
Entry stack: [V12, 0xa9, V67, S16, {0x26d, 0x39c}, S14, 0x0, S12, S11, 0xfb6e155f, S9, S8, S7, S6, S5, S4, S3, V1004, S1, 0x8]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1014, S14, 0x9]
Exit stack: [V12, 0xa9, V67, S16, {0x26d, 0x39c}, S14, 0x0, S12, S11, 0xfb6e155f, S9, S8, S7, S6, S5, S4, S3, V1004, V1014, S14, 0x9]

================================

Block 0xa72
[0xa72:0xa72]
---
Predecessors: [0xa5c]
Successors: []
---
0xa72 INVALID
---
0xa72: INVALID 
---
Entry stack: [V12, 0xa9, V67, S17, {0x26d, 0x39c}, S15, 0x0, S13, S12, 0xfb6e155f, S10, S9, S8, S7, S6, S5, S4, S3, V1014, S1, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S17, {0x26d, 0x39c}, S15, 0x0, S13, S12, 0xfb6e155f, S10, S9, S8, S7, S6, S5, S4, S3, V1014, S1, 0x9]

================================

Block 0xa73
[0xa73:0xb0c]
---
Predecessors: [0xa5c]
Successors: [0xb0d, 0xb11]
---
0xa73 JUMPDEST
0xa74 SWAP1
0xa75 PUSH1 0x20
0xa77 ADD
0xa78 SWAP1
0xa79 PUSH1 0x20
0xa7b MUL
0xa7c ADD
0xa7d MLOAD
0xa7e PUSH1 0x0
0xa80 PUSH1 0x40
0xa82 MLOAD
0xa83 PUSH1 0x20
0xa85 ADD
0xa86 MSTORE
0xa87 PUSH1 0x40
0xa89 MLOAD
0xa8a PUSH1 0xe0
0xa8c PUSH1 0x2
0xa8e EXP
0xa8f PUSH4 0xffffffff
0xa94 DUP14
0xa95 AND
0xa96 MUL
0xa97 DUP2
0xa98 MSTORE
0xa99 PUSH1 0x1
0xa9b PUSH1 0xa0
0xa9d PUSH1 0x2
0xa9f EXP
0xaa0 SUB
0xaa1 SWAP11
0xaa2 DUP12
0xaa3 AND
0xaa4 PUSH1 0x4
0xaa6 DUP3
0xaa7 ADD
0xaa8 MSTORE
0xaa9 PUSH1 0x24
0xaab DUP2
0xaac ADD
0xaad SWAP10
0xaae SWAP1
0xaaf SWAP10
0xab0 MSTORE
0xab1 SWAP7
0xab2 DUP10
0xab3 AND
0xab4 PUSH1 0x44
0xab6 DUP10
0xab7 ADD
0xab8 MSTORE
0xab9 PUSH1 0x64
0xabb DUP9
0xabc ADD
0xabd SWAP6
0xabe SWAP1
0xabf SWAP6
0xac0 MSTORE
0xac1 PUSH1 0x84
0xac3 DUP8
0xac4 ADD
0xac5 SWAP4
0xac6 SWAP1
0xac7 SWAP4
0xac8 MSTORE
0xac9 PUSH1 0xa4
0xacb DUP7
0xacc ADD
0xacd SWAP2
0xace SWAP1
0xacf SWAP2
0xad0 MSTORE
0xad1 SWAP1
0xad2 SWAP5
0xad3 AND
0xad4 PUSH1 0xc4
0xad6 DUP5
0xad7 ADD
0xad8 MSTORE
0xad9 PUSH1 0xff
0xadb SWAP1
0xadc SWAP4
0xadd AND
0xade PUSH1 0xe4
0xae0 DUP4
0xae1 ADD
0xae2 MSTORE
0xae3 PUSH2 0x104
0xae6 DUP3
0xae7 ADD
0xae8 SWAP3
0xae9 SWAP1
0xaea SWAP3
0xaeb MSTORE
0xaec PUSH2 0x124
0xaef DUP2
0xaf0 ADD
0xaf1 SWAP2
0xaf2 SWAP1
0xaf3 SWAP2
0xaf4 MSTORE
0xaf5 PUSH2 0x144
0xaf8 ADD
0xaf9 PUSH1 0x20
0xafb PUSH1 0x40
0xafd MLOAD
0xafe DUP1
0xaff DUP4
0xb00 SUB
0xb01 DUP2
0xb02 PUSH1 0x0
0xb04 DUP8
0xb05 DUP1
0xb06 EXTCODESIZE
0xb07 ISZERO
0xb08 ISZERO
0xb09 PUSH2 0xb11
0xb0c JUMPI
---
0xa73: JUMPDEST 
0xa75: V1019 = 0x20
0xa77: V1020 = ADD 0x20 S1
0xa79: V1021 = 0x20
0xa7b: V1022 = MUL 0x20 0x9
0xa7c: V1023 = ADD 0x120 V1020
0xa7d: V1024 = M[V1023]
0xa7e: V1025 = 0x0
0xa80: V1026 = 0x40
0xa82: V1027 = M[0x40]
0xa83: V1028 = 0x20
0xa85: V1029 = ADD 0x20 V1027
0xa86: M[V1029] = 0x0
0xa87: V1030 = 0x40
0xa89: V1031 = M[0x40]
0xa8a: V1032 = 0xe0
0xa8c: V1033 = 0x2
0xa8e: V1034 = EXP 0x2 0xe0
0xa8f: V1035 = 0xffffffff
0xa95: V1036 = AND 0xfb6e155f 0xffffffff
0xa96: V1037 = MUL 0xfb6e155f 0x100000000000000000000000000000000000000000000000000000000
0xa98: M[V1031] = 0xfb6e155f00000000000000000000000000000000000000000000000000000000
0xa99: V1038 = 0x1
0xa9b: V1039 = 0xa0
0xa9d: V1040 = 0x2
0xa9f: V1041 = EXP 0x2 0xa0
0xaa0: V1042 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa3: V1043 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0xaa4: V1044 = 0x4
0xaa7: V1045 = ADD V1031 0x4
0xaa8: M[V1045] = V1043
0xaa9: V1046 = 0x24
0xaac: V1047 = ADD V1031 0x24
0xab0: M[V1047] = S9
0xab3: V1048 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xab4: V1049 = 0x44
0xab7: V1050 = ADD V1031 0x44
0xab8: M[V1050] = V1048
0xab9: V1051 = 0x64
0xabc: V1052 = ADD V1031 0x64
0xac0: M[V1052] = S7
0xac1: V1053 = 0x84
0xac4: V1054 = ADD V1031 0x84
0xac8: M[V1054] = S6
0xac9: V1055 = 0xa4
0xacc: V1056 = ADD V1031 0xa4
0xad0: M[V1056] = S5
0xad3: V1057 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xad4: V1058 = 0xc4
0xad7: V1059 = ADD V1031 0xc4
0xad8: M[V1059] = V1057
0xad9: V1060 = 0xff
0xadd: V1061 = AND S3 0xff
0xade: V1062 = 0xe4
0xae1: V1063 = ADD V1031 0xe4
0xae2: M[V1063] = V1061
0xae3: V1064 = 0x104
0xae7: V1065 = ADD V1031 0x104
0xaeb: M[V1065] = V1014
0xaec: V1066 = 0x124
0xaf0: V1067 = ADD V1031 0x124
0xaf4: M[V1067] = V1024
0xaf5: V1068 = 0x144
0xaf8: V1069 = ADD 0x144 V1031
0xaf9: V1070 = 0x20
0xafb: V1071 = 0x40
0xafd: V1072 = M[0x40]
0xb00: V1073 = SUB V1069 V1072
0xb02: V1074 = 0x0
0xb06: V1075 = EXTCODESIZE S12
0xb07: V1076 = ISZERO V1075
0xb08: V1077 = ISZERO V1076
0xb09: V1078 = 0xb11
0xb0c: JUMPI 0xb11 V1077
---
Entry stack: [V12, 0xa9, V67, S17, {0x26d, 0x39c}, S15, 0x0, S13, S12, 0xfb6e155f, S10, S9, S8, S7, S6, S5, S4, S3, V1014, S1, 0x9]
Stack pops: 13
Stack additions: [S12, S11, V1069, 0x20, V1072, V1073, V1072, 0x0, S12]
Exit stack: [V12, 0xa9, V67, S17, {0x26d, 0x39c}, S15, 0x0, S13, S12, 0xfb6e155f, V1069, 0x20, V1072, V1073, V1072, 0x0, S12]

================================

Block 0xb0d
[0xb0d:0xb10]
---
Predecessors: [0xa73]
Successors: []
---
0xb0d PUSH1 0x0
0xb0f DUP1
0xb10 REVERT
---
0xb0d: V1079 = 0x0
0xb10: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x39c}, S11, 0x0, S9, S8, 0xfb6e155f, V1069, 0x20, V1072, V1073, V1072, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x39c}, S11, 0x0, S9, S8, 0xfb6e155f, V1069, 0x20, V1072, V1073, V1072, 0x0, S0]

================================

Block 0xb11
[0xb11:0xb1d]
---
Predecessors: [0xa73]
Successors: [0xb1e, 0xb22]
---
0xb11 JUMPDEST
0xb12 PUSH2 0x2c6
0xb15 GAS
0xb16 SUB
0xb17 CALL
0xb18 ISZERO
0xb19 ISZERO
0xb1a PUSH2 0xb22
0xb1d JUMPI
---
0xb11: JUMPDEST 
0xb12: V1080 = 0x2c6
0xb15: V1081 = GAS
0xb16: V1082 = SUB V1081 0x2c6
0xb17: V1083 = CALL V1082 S0 0x0 V1072 V1073 V1072 0x20
0xb18: V1084 = ISZERO V1083
0xb19: V1085 = ISZERO V1084
0xb1a: V1086 = 0xb22
0xb1d: JUMPI 0xb22 V1085
---
Entry stack: [V12, 0xa9, V67, S13, {0x26d, 0x39c}, S11, 0x0, S9, S8, 0xfb6e155f, V1069, 0x20, V1072, V1073, V1072, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V67, S13, {0x26d, 0x39c}, S11, 0x0, S9, S8, 0xfb6e155f, V1069]

================================

Block 0xb1e
[0xb1e:0xb21]
---
Predecessors: [0xb11]
Successors: []
---
0xb1e PUSH1 0x0
0xb20 DUP1
0xb21 REVERT
---
0xb1e: V1087 = 0x0
0xb21: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V67, S7, {0x26d, 0x39c}, S5, 0x0, S3, S2, 0xfb6e155f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V67, S7, {0x26d, 0x39c}, S5, 0x0, S3, S2, 0xfb6e155f, S0]

================================

Block 0xb22
[0xb22:0xb30]
---
Predecessors: [0xb11]
Successors: [0xb31]
---
0xb22 JUMPDEST
0xb23 POP
0xb24 POP
0xb25 POP
0xb26 PUSH1 0x40
0xb28 MLOAD
0xb29 DUP1
0xb2a MLOAD
0xb2b SWAP1
0xb2c POP
0xb2d LT
0xb2e ISZERO
0xb2f SWAP1
0xb30 POP
---
0xb22: JUMPDEST 
0xb26: V1088 = 0x40
0xb28: V1089 = M[0x40]
0xb2a: V1090 = M[V1089]
0xb2d: V1091 = LT V1090 S3
0xb2e: V1092 = ISZERO V1091
---
Entry stack: [V12, 0xa9, V67, S7, {0x26d, 0x39c}, S5, 0x0, S3, S2, 0xfb6e155f, S0]
Stack pops: 5
Stack additions: [V1092]
Exit stack: [V12, 0xa9, V67, S7, {0x26d, 0x39c}, S5, V1092]

================================

Block 0xb31
[0xb31:0xb35]
---
Predecessors: [0xb22]
Successors: [0x26d, 0x39c]
---
0xb31 JUMPDEST
0xb32 SWAP2
0xb33 SWAP1
0xb34 POP
0xb35 JUMP
---
0xb31: JUMPDEST 
0xb35: JUMP {0x26d, 0x39c}
---
Entry stack: [V12, 0xa9, V67, S3, {0x26d, 0x39c}, S1, V1092]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0xa9, V67, S3, V1092]

================================

Block 0xb36
[0xb36:0xb4c]
---
Predecessors: [0x304]
Successors: [0xb4d, 0xb4e]
---
0xb36 JUMPDEST
0xb37 PUSH1 0x2
0xb39 SLOAD
0xb3a CALLER
0xb3b PUSH1 0x1
0xb3d PUSH1 0xa0
0xb3f PUSH1 0x2
0xb41 EXP
0xb42 SUB
0xb43 SWAP1
0xb44 DUP2
0xb45 AND
0xb46 SWAP2
0xb47 AND
0xb48 EQ
0xb49 PUSH2 0xb4e
0xb4c JUMPI
---
0xb36: JUMPDEST 
0xb37: V1093 = 0x2
0xb39: V1094 = S[0x2]
0xb3a: V1095 = CALLER
0xb3b: V1096 = 0x1
0xb3d: V1097 = 0xa0
0xb3f: V1098 = 0x2
0xb41: V1099 = EXP 0x2 0xa0
0xb42: V1100 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb45: V1101 = AND 0xffffffffffffffffffffffffffffffffffffffff V1095
0xb47: V1102 = AND V1094 0xffffffffffffffffffffffffffffffffffffffff
0xb48: V1103 = EQ V1102 V1101
0xb49: V1104 = 0xb4e
0xb4c: JUMPI 0xb4e V1103
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0xb4d
[0xb4d:0xb4d]
---
Predecessors: [0xb36]
Successors: []
---
0xb4d INVALID
---
0xb4d: INVALID 
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0xb4e
[0xb4e:0xb58]
---
Predecessors: [0xb36]
Successors: [0x3bf]
---
0xb4e JUMPDEST
0xb4f PUSH2 0x96a
0xb52 PUSH2 0xb59
0xb55 PUSH2 0x3bf
0xb58 JUMP
---
0xb4e: JUMPDEST 
0xb4f: V1105 = 0x96a
0xb52: V1106 = 0xb59
0xb55: V1107 = 0x3bf
0xb58: JUMP 0x3bf
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: [0x96a, 0xb59]
Exit stack: [V12, 0xa9, 0x96a, 0xb59]

================================

Block 0xb59
[0xb59:0xb5d]
---
Predecessors: [0x43f]
Successors: [0x442]
---
0xb59 JUMPDEST
0xb5a PUSH2 0x442
0xb5d JUMP
---
0xb59: JUMPDEST 
0xb5a: V1108 = 0x442
0xb5d: JUMP 0x442
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0xb5e
[0xb5e:0xb5e]
---
Predecessors: []
Successors: [0xb5f]
---
0xb5e JUMPDEST
---
0xb5e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb5f
[0xb5f:0xb60]
---
Predecessors: [0xb5e]
Successors: []
Has unresolved jump.
---
0xb5f JUMPDEST
0xb60 JUMP
---
0xb5f: JUMPDEST 
0xb60: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb61
[0xb61:0xb77]
---
Predecessors: [0x319]
Successors: [0xb78, 0xb79]
---
0xb61 JUMPDEST
0xb62 PUSH1 0x2
0xb64 SLOAD
0xb65 CALLER
0xb66 PUSH1 0x1
0xb68 PUSH1 0xa0
0xb6a PUSH1 0x2
0xb6c EXP
0xb6d SUB
0xb6e SWAP1
0xb6f DUP2
0xb70 AND
0xb71 SWAP2
0xb72 AND
0xb73 EQ
0xb74 PUSH2 0xb79
0xb77 JUMPI
---
0xb61: JUMPDEST 
0xb62: V1109 = 0x2
0xb64: V1110 = S[0x2]
0xb65: V1111 = CALLER
0xb66: V1112 = 0x1
0xb68: V1113 = 0xa0
0xb6a: V1114 = 0x2
0xb6c: V1115 = EXP 0x2 0xa0
0xb6d: V1116 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb70: V1117 = AND 0xffffffffffffffffffffffffffffffffffffffff V1111
0xb72: V1118 = AND V1110 0xffffffffffffffffffffffffffffffffffffffff
0xb73: V1119 = EQ V1118 V1117
0xb74: V1120 = 0xb79
0xb77: JUMPI 0xb79 V1119
---
Entry stack: [V12, 0xa9, V262, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264]

================================

Block 0xb78
[0xb78:0xb78]
---
Predecessors: [0xb61]
Successors: []
---
0xb78 INVALID
---
0xb78: INVALID 
---
Entry stack: [V12, 0xa9, V262, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264]

================================

Block 0xb79
[0xb79:0xbca]
---
Predecessors: [0xb61]
Successors: [0xbcb, 0xbcf]
---
0xb79 JUMPDEST
0xb7a PUSH1 0x1
0xb7c SLOAD
0xb7d PUSH1 0x1
0xb7f PUSH1 0xa0
0xb81 PUSH1 0x2
0xb83 EXP
0xb84 SUB
0xb85 AND
0xb86 PUSH4 0x9e281a98
0xb8b DUP4
0xb8c DUP4
0xb8d PUSH1 0x40
0xb8f MLOAD
0xb90 PUSH1 0xe0
0xb92 PUSH1 0x2
0xb94 EXP
0xb95 PUSH4 0xffffffff
0xb9a DUP6
0xb9b AND
0xb9c MUL
0xb9d DUP2
0xb9e MSTORE
0xb9f PUSH1 0x1
0xba1 PUSH1 0xa0
0xba3 PUSH1 0x2
0xba5 EXP
0xba6 SUB
0xba7 SWAP1
0xba8 SWAP3
0xba9 AND
0xbaa PUSH1 0x4
0xbac DUP4
0xbad ADD
0xbae MSTORE
0xbaf PUSH1 0x24
0xbb1 DUP3
0xbb2 ADD
0xbb3 MSTORE
0xbb4 PUSH1 0x44
0xbb6 ADD
0xbb7 PUSH1 0x0
0xbb9 PUSH1 0x40
0xbbb MLOAD
0xbbc DUP1
0xbbd DUP4
0xbbe SUB
0xbbf DUP2
0xbc0 PUSH1 0x0
0xbc2 DUP8
0xbc3 DUP1
0xbc4 EXTCODESIZE
0xbc5 ISZERO
0xbc6 ISZERO
0xbc7 PUSH2 0xbcf
0xbca JUMPI
---
0xb79: JUMPDEST 
0xb7a: V1121 = 0x1
0xb7c: V1122 = S[0x1]
0xb7d: V1123 = 0x1
0xb7f: V1124 = 0xa0
0xb81: V1125 = 0x2
0xb83: V1126 = EXP 0x2 0xa0
0xb84: V1127 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb85: V1128 = AND 0xffffffffffffffffffffffffffffffffffffffff V1122
0xb86: V1129 = 0x9e281a98
0xb8d: V1130 = 0x40
0xb8f: V1131 = M[0x40]
0xb90: V1132 = 0xe0
0xb92: V1133 = 0x2
0xb94: V1134 = EXP 0x2 0xe0
0xb95: V1135 = 0xffffffff
0xb9b: V1136 = AND 0x9e281a98 0xffffffff
0xb9c: V1137 = MUL 0x9e281a98 0x100000000000000000000000000000000000000000000000000000000
0xb9e: M[V1131] = 0x9e281a9800000000000000000000000000000000000000000000000000000000
0xb9f: V1138 = 0x1
0xba1: V1139 = 0xa0
0xba3: V1140 = 0x2
0xba5: V1141 = EXP 0x2 0xa0
0xba6: V1142 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba9: V1143 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0xbaa: V1144 = 0x4
0xbad: V1145 = ADD V1131 0x4
0xbae: M[V1145] = V1143
0xbaf: V1146 = 0x24
0xbb2: V1147 = ADD V1131 0x24
0xbb3: M[V1147] = V264
0xbb4: V1148 = 0x44
0xbb6: V1149 = ADD 0x44 V1131
0xbb7: V1150 = 0x0
0xbb9: V1151 = 0x40
0xbbb: V1152 = M[0x40]
0xbbe: V1153 = SUB V1149 V1152
0xbc0: V1154 = 0x0
0xbc4: V1155 = EXTCODESIZE V1128
0xbc5: V1156 = ISZERO V1155
0xbc6: V1157 = ISZERO V1156
0xbc7: V1158 = 0xbcf
0xbca: JUMPI 0xbcf V1157
---
Entry stack: [V12, 0xa9, V262, V264]
Stack pops: 2
Stack additions: [S1, S0, V1128, 0x9e281a98, V1149, 0x0, V1152, V1153, V1152, 0x0, V1128]
Exit stack: [V12, 0xa9, V262, V264, V1128, 0x9e281a98, V1149, 0x0, V1152, V1153, V1152, 0x0, V1128]

================================

Block 0xbcb
[0xbcb:0xbce]
---
Predecessors: [0xb79]
Successors: []
---
0xbcb PUSH1 0x0
0xbcd DUP1
0xbce REVERT
---
0xbcb: V1159 = 0x0
0xbce: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V262, V264, V1128, 0x9e281a98, V1149, 0x0, V1152, V1153, V1152, 0x0, V1128]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1128, 0x9e281a98, V1149, 0x0, V1152, V1153, V1152, 0x0, V1128]

================================

Block 0xbcf
[0xbcf:0xbdb]
---
Predecessors: [0xb79]
Successors: [0xbdc, 0xbe0]
---
0xbcf JUMPDEST
0xbd0 PUSH2 0x2c6
0xbd3 GAS
0xbd4 SUB
0xbd5 CALL
0xbd6 ISZERO
0xbd7 ISZERO
0xbd8 PUSH2 0xbe0
0xbdb JUMPI
---
0xbcf: JUMPDEST 
0xbd0: V1160 = 0x2c6
0xbd3: V1161 = GAS
0xbd4: V1162 = SUB V1161 0x2c6
0xbd5: V1163 = CALL V1162 V1128 0x0 V1152 V1153 V1152 0x0
0xbd6: V1164 = ISZERO V1163
0xbd7: V1165 = ISZERO V1164
0xbd8: V1166 = 0xbe0
0xbdb: JUMPI 0xbe0 V1165
---
Entry stack: [V12, 0xa9, V262, V264, V1128, 0x9e281a98, V1149, 0x0, V1152, V1153, V1152, 0x0, V1128]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1128, 0x9e281a98, V1149]

================================

Block 0xbdc
[0xbdc:0xbdf]
---
Predecessors: [0xbcf]
Successors: []
---
0xbdc PUSH1 0x0
0xbde DUP1
0xbdf REVERT
---
0xbdc: V1167 = 0x0
0xbdf: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V262, V264, V1128, 0x9e281a98, V1149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1128, 0x9e281a98, V1149]

================================

Block 0xbe0
[0xbe0:0xc3b]
---
Predecessors: [0xbcf]
Successors: [0xc3c, 0xc40]
---
0xbe0 JUMPDEST
0xbe1 POP
0xbe2 POP
0xbe3 POP
0xbe4 DUP2
0xbe5 PUSH1 0x1
0xbe7 PUSH1 0xa0
0xbe9 PUSH1 0x2
0xbeb EXP
0xbec SUB
0xbed AND
0xbee PUSH4 0xa9059cbb
0xbf3 CALLER
0xbf4 DUP4
0xbf5 PUSH1 0x0
0xbf7 PUSH1 0x40
0xbf9 MLOAD
0xbfa PUSH1 0x20
0xbfc ADD
0xbfd MSTORE
0xbfe PUSH1 0x40
0xc00 MLOAD
0xc01 PUSH1 0xe0
0xc03 PUSH1 0x2
0xc05 EXP
0xc06 PUSH4 0xffffffff
0xc0b DUP6
0xc0c AND
0xc0d MUL
0xc0e DUP2
0xc0f MSTORE
0xc10 PUSH1 0x1
0xc12 PUSH1 0xa0
0xc14 PUSH1 0x2
0xc16 EXP
0xc17 SUB
0xc18 SWAP1
0xc19 SWAP3
0xc1a AND
0xc1b PUSH1 0x4
0xc1d DUP4
0xc1e ADD
0xc1f MSTORE
0xc20 PUSH1 0x24
0xc22 DUP3
0xc23 ADD
0xc24 MSTORE
0xc25 PUSH1 0x44
0xc27 ADD
0xc28 PUSH1 0x20
0xc2a PUSH1 0x40
0xc2c MLOAD
0xc2d DUP1
0xc2e DUP4
0xc2f SUB
0xc30 DUP2
0xc31 PUSH1 0x0
0xc33 DUP8
0xc34 DUP1
0xc35 EXTCODESIZE
0xc36 ISZERO
0xc37 ISZERO
0xc38 PUSH2 0xc40
0xc3b JUMPI
---
0xbe0: JUMPDEST 
0xbe5: V1168 = 0x1
0xbe7: V1169 = 0xa0
0xbe9: V1170 = 0x2
0xbeb: V1171 = EXP 0x2 0xa0
0xbec: V1172 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbed: V1173 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0xbee: V1174 = 0xa9059cbb
0xbf3: V1175 = CALLER
0xbf5: V1176 = 0x0
0xbf7: V1177 = 0x40
0xbf9: V1178 = M[0x40]
0xbfa: V1179 = 0x20
0xbfc: V1180 = ADD 0x20 V1178
0xbfd: M[V1180] = 0x0
0xbfe: V1181 = 0x40
0xc00: V1182 = M[0x40]
0xc01: V1183 = 0xe0
0xc03: V1184 = 0x2
0xc05: V1185 = EXP 0x2 0xe0
0xc06: V1186 = 0xffffffff
0xc0c: V1187 = AND 0xa9059cbb 0xffffffff
0xc0d: V1188 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xc0f: M[V1182] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc10: V1189 = 0x1
0xc12: V1190 = 0xa0
0xc14: V1191 = 0x2
0xc16: V1192 = EXP 0x2 0xa0
0xc17: V1193 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1a: V1194 = AND V1175 0xffffffffffffffffffffffffffffffffffffffff
0xc1b: V1195 = 0x4
0xc1e: V1196 = ADD V1182 0x4
0xc1f: M[V1196] = V1194
0xc20: V1197 = 0x24
0xc23: V1198 = ADD V1182 0x24
0xc24: M[V1198] = V264
0xc25: V1199 = 0x44
0xc27: V1200 = ADD 0x44 V1182
0xc28: V1201 = 0x20
0xc2a: V1202 = 0x40
0xc2c: V1203 = M[0x40]
0xc2f: V1204 = SUB V1200 V1203
0xc31: V1205 = 0x0
0xc35: V1206 = EXTCODESIZE V1173
0xc36: V1207 = ISZERO V1206
0xc37: V1208 = ISZERO V1207
0xc38: V1209 = 0xc40
0xc3b: JUMPI 0xc40 V1208
---
Entry stack: [V12, 0xa9, V262, V264, V1128, 0x9e281a98, V1149]
Stack pops: 5
Stack additions: [S4, S3, V1173, 0xa9059cbb, V1200, 0x20, V1203, V1204, V1203, 0x0, V1173]
Exit stack: [V12, 0xa9, V262, V264, V1173, 0xa9059cbb, V1200, 0x20, V1203, V1204, V1203, 0x0, V1173]

================================

Block 0xc3c
[0xc3c:0xc3f]
---
Predecessors: [0xbe0]
Successors: []
---
0xc3c PUSH1 0x0
0xc3e DUP1
0xc3f REVERT
---
0xc3c: V1210 = 0x0
0xc3f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V262, V264, V1173, 0xa9059cbb, V1200, 0x20, V1203, V1204, V1203, 0x0, V1173]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1173, 0xa9059cbb, V1200, 0x20, V1203, V1204, V1203, 0x0, V1173]

================================

Block 0xc40
[0xc40:0xc4c]
---
Predecessors: [0xbe0]
Successors: [0xc4d, 0xc51]
---
0xc40 JUMPDEST
0xc41 PUSH2 0x2c6
0xc44 GAS
0xc45 SUB
0xc46 CALL
0xc47 ISZERO
0xc48 ISZERO
0xc49 PUSH2 0xc51
0xc4c JUMPI
---
0xc40: JUMPDEST 
0xc41: V1211 = 0x2c6
0xc44: V1212 = GAS
0xc45: V1213 = SUB V1212 0x2c6
0xc46: V1214 = CALL V1213 V1173 0x0 V1203 V1204 V1203 0x20
0xc47: V1215 = ISZERO V1214
0xc48: V1216 = ISZERO V1215
0xc49: V1217 = 0xc51
0xc4c: JUMPI 0xc51 V1216
---
Entry stack: [V12, 0xa9, V262, V264, V1173, 0xa9059cbb, V1200, 0x20, V1203, V1204, V1203, 0x0, V1173]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1173, 0xa9059cbb, V1200]

================================

Block 0xc4d
[0xc4d:0xc50]
---
Predecessors: [0xc40]
Successors: []
---
0xc4d PUSH1 0x0
0xc4f DUP1
0xc50 REVERT
---
0xc4d: V1218 = 0x0
0xc50: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V262, V264, V1173, 0xa9059cbb, V1200]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264, V1173, 0xa9059cbb, V1200]

================================

Block 0xc51
[0xc51:0xc61]
---
Predecessors: [0xc40]
Successors: [0x3ba, 0xc62]
---
0xc51 JUMPDEST
0xc52 POP
0xc53 POP
0xc54 POP
0xc55 PUSH1 0x40
0xc57 MLOAD
0xc58 DUP1
0xc59 MLOAD
0xc5a SWAP1
0xc5b POP
0xc5c ISZERO
0xc5d ISZERO
0xc5e PUSH2 0x3ba
0xc61 JUMPI
---
0xc51: JUMPDEST 
0xc55: V1219 = 0x40
0xc57: V1220 = M[0x40]
0xc59: V1221 = M[V1220]
0xc5c: V1222 = ISZERO V1221
0xc5d: V1223 = ISZERO V1222
0xc5e: V1224 = 0x3ba
0xc61: JUMPI 0x3ba V1223
---
Entry stack: [V12, 0xa9, V262, V264, V1173, 0xa9059cbb, V1200]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264]

================================

Block 0xc62
[0xc62:0xc65]
---
Predecessors: [0xc51]
Successors: []
---
0xc62 PUSH1 0x0
0xc64 DUP1
0xc65 REVERT
---
0xc62: V1225 = 0x0
0xc65: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V262, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V262, V264]

================================

Block 0xc66
[0xc66:0xc66]
---
Predecessors: []
Successors: [0xc67]
---
0xc66 JUMPDEST
---
0xc66: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc67
[0xc67:0xc6a]
---
Predecessors: [0xc66]
Successors: []
Has unresolved jump.
---
0xc67 JUMPDEST
0xc68 POP
0xc69 POP
0xc6a JUMP
---
0xc67: JUMPDEST 
0xc6a: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xc6b
[0xc6b:0xc79]
---
Predecessors: [0x33d]
Successors: [0x345]
---
0xc6b JUMPDEST
0xc6c PUSH1 0x2
0xc6e SLOAD
0xc6f PUSH1 0x1
0xc71 PUSH1 0xa0
0xc73 PUSH1 0x2
0xc75 EXP
0xc76 SUB
0xc77 AND
0xc78 DUP2
0xc79 JUMP
---
0xc6b: JUMPDEST 
0xc6c: V1226 = 0x2
0xc6e: V1227 = S[0x2]
0xc6f: V1228 = 0x1
0xc71: V1229 = 0xa0
0xc73: V1230 = 0x2
0xc75: V1231 = EXP 0x2 0xa0
0xc76: V1232 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc77: V1233 = AND 0xffffffffffffffffffffffffffffffffffffffff V1227
0xc79: JUMP 0x345
---
Entry stack: [V12, 0x345]
Stack pops: 1
Stack additions: [S0, V1233]
Exit stack: [V12, 0x345, V1233]

================================

Block 0xc7a
[0xc7a:0xcb4]
---
Predecessors: [0x361]
Successors: [0xcb5, 0xcb9]
---
0xc7a JUMPDEST
0xc7b PUSH1 0x1
0xc7d SLOAD
0xc7e PUSH1 0x1
0xc80 PUSH1 0xa0
0xc82 PUSH1 0x2
0xc84 EXP
0xc85 SUB
0xc86 AND
0xc87 PUSH4 0xd0e30db0
0xc8c CALLVALUE
0xc8d PUSH1 0x40
0xc8f MLOAD
0xc90 DUP3
0xc91 PUSH4 0xffffffff
0xc96 AND
0xc97 PUSH1 0xe0
0xc99 PUSH1 0x2
0xc9b EXP
0xc9c MUL
0xc9d DUP2
0xc9e MSTORE
0xc9f PUSH1 0x4
0xca1 ADD
0xca2 PUSH1 0x0
0xca4 PUSH1 0x40
0xca6 MLOAD
0xca7 DUP1
0xca8 DUP4
0xca9 SUB
0xcaa DUP2
0xcab DUP6
0xcac DUP9
0xcad DUP1
0xcae EXTCODESIZE
0xcaf ISZERO
0xcb0 ISZERO
0xcb1 PUSH2 0xcb9
0xcb4 JUMPI
---
0xc7a: JUMPDEST 
0xc7b: V1234 = 0x1
0xc7d: V1235 = S[0x1]
0xc7e: V1236 = 0x1
0xc80: V1237 = 0xa0
0xc82: V1238 = 0x2
0xc84: V1239 = EXP 0x2 0xa0
0xc85: V1240 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc86: V1241 = AND 0xffffffffffffffffffffffffffffffffffffffff V1235
0xc87: V1242 = 0xd0e30db0
0xc8c: V1243 = CALLVALUE
0xc8d: V1244 = 0x40
0xc8f: V1245 = M[0x40]
0xc91: V1246 = 0xffffffff
0xc96: V1247 = AND 0xffffffff 0xd0e30db0
0xc97: V1248 = 0xe0
0xc99: V1249 = 0x2
0xc9b: V1250 = EXP 0x2 0xe0
0xc9c: V1251 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0xc9e: M[V1245] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0xc9f: V1252 = 0x4
0xca1: V1253 = ADD 0x4 V1245
0xca2: V1254 = 0x0
0xca4: V1255 = 0x40
0xca6: V1256 = M[0x40]
0xca9: V1257 = SUB V1253 V1256
0xcae: V1258 = EXTCODESIZE V1241
0xcaf: V1259 = ISZERO V1258
0xcb0: V1260 = ISZERO V1259
0xcb1: V1261 = 0xcb9
0xcb4: JUMPI 0xcb9 V1260
---
Entry stack: [V12, 0xa9]
Stack pops: 0
Stack additions: [V1241, 0xd0e30db0, V1243, V1253, 0x0, V1256, V1257, V1256, V1243, V1241]
Exit stack: [V12, 0xa9, V1241, 0xd0e30db0, V1243, V1253, 0x0, V1256, V1257, V1256, V1243, V1241]

================================

Block 0xcb5
[0xcb5:0xcb8]
---
Predecessors: [0xc7a]
Successors: []
---
0xcb5 PUSH1 0x0
0xcb7 DUP1
0xcb8 REVERT
---
0xcb5: V1262 = 0x0
0xcb8: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V1241, 0xd0e30db0, V1243, V1253, 0x0, V1256, V1257, V1256, V1243, V1241]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V1241, 0xd0e30db0, V1243, V1253, 0x0, V1256, V1257, V1256, V1243, V1241]

================================

Block 0xcb9
[0xcb9:0xcc5]
---
Predecessors: [0xc7a]
Successors: [0xcc6, 0xcca]
---
0xcb9 JUMPDEST
0xcba PUSH2 0x25ee
0xcbd GAS
0xcbe SUB
0xcbf CALL
0xcc0 ISZERO
0xcc1 ISZERO
0xcc2 PUSH2 0xcca
0xcc5 JUMPI
---
0xcb9: JUMPDEST 
0xcba: V1263 = 0x25ee
0xcbd: V1264 = GAS
0xcbe: V1265 = SUB V1264 0x25ee
0xcbf: V1266 = CALL V1265 V1241 V1243 V1256 V1257 V1256 0x0
0xcc0: V1267 = ISZERO V1266
0xcc1: V1268 = ISZERO V1267
0xcc2: V1269 = 0xcca
0xcc5: JUMPI 0xcca V1268
---
Entry stack: [V12, 0xa9, V1241, 0xd0e30db0, V1243, V1253, 0x0, V1256, V1257, V1256, V1243, V1241]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa9, V1241, 0xd0e30db0, V1243, V1253]

================================

Block 0xcc6
[0xcc6:0xcc9]
---
Predecessors: [0xcb9]
Successors: []
---
0xcc6 PUSH1 0x0
0xcc8 DUP1
0xcc9 REVERT
---
0xcc6: V1270 = 0x0
0xcc9: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa9, V1241, 0xd0e30db0, V1243, V1253]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa9, V1241, 0xd0e30db0, V1243, V1253]

================================

Block 0xcca
[0xcca:0xcce]
---
Predecessors: [0xcb9]
Successors: [0xccf]
---
0xcca JUMPDEST
0xccb POP
0xccc POP
0xccd POP
0xcce POP
---
0xcca: JUMPDEST 
---
Entry stack: [V12, 0xa9, V1241, 0xd0e30db0, V1243, V1253]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xa9]

================================

Block 0xccf
[0xccf:0xcd0]
---
Predecessors: [0xcca]
Successors: [0xa9]
---
0xccf JUMPDEST
0xcd0 JUMP
---
0xccf: JUMPDEST 
0xcd0: JUMP 0xa9
---
Entry stack: [V12, 0xa9]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd1
[0xcd1:0xcfc]
---
Predecessors: [0x4ca, 0x957]
Successors: [0x5b6, 0xcfd]
---
0xcd1 JUMPDEST
0xcd2 PUSH1 0x2
0xcd4 SLOAD
0xcd5 PUSH1 0x1
0xcd7 PUSH1 0xa0
0xcd9 PUSH1 0x2
0xcdb EXP
0xcdc SUB
0xcdd AND
0xcde DUP2
0xcdf PUSH1 0x40
0xce1 MLOAD
0xce2 PUSH1 0x0
0xce4 PUSH1 0x40
0xce6 MLOAD
0xce7 DUP1
0xce8 DUP4
0xce9 SUB
0xcea DUP2
0xceb DUP6
0xcec DUP8
0xced PUSH2 0x8796
0xcf0 GAS
0xcf1 SUB
0xcf2 CALL
0xcf3 SWAP3
0xcf4 POP
0xcf5 POP
0xcf6 POP
0xcf7 ISZERO
0xcf8 ISZERO
0xcf9 PUSH2 0x5b6
0xcfc JUMPI
---
0xcd1: JUMPDEST 
0xcd2: V1271 = 0x2
0xcd4: V1272 = S[0x2]
0xcd5: V1273 = 0x1
0xcd7: V1274 = 0xa0
0xcd9: V1275 = 0x2
0xcdb: V1276 = EXP 0x2 0xa0
0xcdc: V1277 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcdd: V1278 = AND 0xffffffffffffffffffffffffffffffffffffffff V1272
0xcdf: V1279 = 0x40
0xce1: V1280 = M[0x40]
0xce2: V1281 = 0x0
0xce4: V1282 = 0x40
0xce6: V1283 = M[0x40]
0xce9: V1284 = SUB V1280 V1283
0xced: V1285 = 0x8796
0xcf0: V1286 = GAS
0xcf1: V1287 = SUB V1286 0x8796
0xcf2: V1288 = CALL V1287 V1278 S0 V1283 V1284 V1283 0x0
0xcf7: V1289 = ISZERO V1288
0xcf8: V1290 = ISZERO V1289
0xcf9: V1291 = 0x5b6
0xcfc: JUMPI 0x5b6 V1290
---
Entry stack: [V12, S5, {0xa9, 0x96a}, S3, S2, {0x3ba, 0x96a}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S5, {0xa9, 0x96a}, S3, S2, {0x3ba, 0x96a}, S0]

================================

Block 0xcfd
[0xcfd:0xd00]
---
Predecessors: [0xcd1]
Successors: []
---
0xcfd PUSH1 0x0
0xcff DUP1
0xd00 REVERT
---
0xcfd: V1292 = 0x0
0xd00: REVERT 0x0 0x0
---
Entry stack: [V12, S5, {0xa9, 0x96a}, S3, S2, {0x3ba, 0x96a}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, {0xa9, 0x96a}, S3, S2, {0x3ba, 0x96a}, S0]

================================

Block 0xd01
[0xd01:0xd01]
---
Predecessors: []
Successors: [0xd02]
---
0xd01 JUMPDEST
---
0xd01: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd02
[0xd02:0xd39]
---
Predecessors: [0xd01]
Successors: []
---
0xd02 JUMPDEST
0xd03 POP
0xd04 JUMP
0xd05 STOP
0xd06 LOG1
0xd07 PUSH6 0x627a7a723058
0xd0e SHA3
0xd0f PUSH17 0x6b9e73d4ae982b1224f839082e895ef332
0xd21 CALLDATALOAD
0xd22 DIFFICULTY
0xd23 CALLER
0xd24 MISSING 0x27
0xd25 SWAP14
0xd26 JUMP
0xd27 MISSING 0xaa
0xd28 PUSH17 0x9cb2a311153f0029
---
0xd02: JUMPDEST 
0xd04: JUMP S1
0xd05: STOP 
0xd06: LOG S0 S1 S2
0xd07: V1293 = 0x627a7a723058
0xd0e: V1294 = SHA3 0x627a7a723058 S3
0xd0f: V1295 = 0x6b9e73d4ae982b1224f839082e895ef332
0xd21: V1296 = CALLDATALOAD 0x6b9e73d4ae982b1224f839082e895ef332
0xd22: V1297 = DIFFICULTY
0xd23: V1298 = CALLER
0xd24: MISSING 0x27
0xd26: JUMP S14
0xd27: MISSING 0xaa
0xd28: V1299 = 0x9cb2a311153f0029
---
Entry stack: []
Stack pops: 22
Stack additions: [0x9cb2a311153f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xa3cb72e
Entry block: 0xad
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0xad, 0xb4, 0xb8, 0x36b, 0x382, 0x383, 0x38c, 0x393, 0x39c, 0x39e, 0x3a4, 0x3a8, 0x3b1, 0x3ba, 0x3bb, 0x96a, 0x96b

Function 1:
Public function signature: 0x12065fe0
Entry block: 0x13e
Exit block: 0x151
Body: 0x13e, 0x145, 0x149, 0x151

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0x163
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x163, 0x16a, 0x16e, 0x3ba, 0x3bb, 0x442, 0x45c, 0x45d, 0x465, 0x473, 0x474, 0x4b9, 0x4bd, 0x4c6, 0x4ca, 0x96a, 0x96b

Function 3:
Public function signature: 0x3aecd0e3
Entry block: 0x17b
Exit block: 0xab
Body: 0xab, 0x17b, 0x182, 0x186, 0x4dc, 0x53b

Function 4:
Public function signature: 0x477bddaa
Entry block: 0x1ac
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x1ac, 0x1b3, 0x1b7, 0x561, 0x578, 0x579

Function 5:
Public function signature: 0x5256bb86
Entry block: 0x1cd
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x1cd, 0x1d4, 0x1d8

Function 6:
Public function signature: 0x58d2d81a
Entry block: 0x21e
Exit block: 0x225
Body: 0x21e, 0x225, 0x229, 0x26d

Function 7:
Public function signature: 0x5fd8c710
Entry block: 0x281
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x281, 0x288, 0x28c, 0x93f, 0x956, 0x957, 0x96a, 0x96b

Function 8:
Public function signature: 0x757740f9
Entry block: 0x296
Exit block: 0x26d
Body: 0x26d, 0x296, 0x29d, 0x2a1

Function 9:
Public function signature: 0x853828b6
Entry block: 0x2f9
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x2f9, 0x300, 0x304, 0x3ba, 0x3bb, 0x442, 0x45c, 0x45d, 0x465, 0x473, 0x474, 0x4b9, 0x4bd, 0x4c6, 0x4ca, 0x96a, 0x96b, 0xb36, 0xb4d, 0xb4e, 0xb59

Function 10:
Public function signature: 0x9e281a98
Entry block: 0x30e
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x30e, 0x315, 0x319, 0x3ba, 0x3bb, 0x96a, 0x96b, 0xb61, 0xb78, 0xb79, 0xbcb, 0xbcf, 0xbdc, 0xbe0, 0xc3c, 0xc40, 0xc4d, 0xc51, 0xc62

Function 11:
Public function signature: 0xb2bdfa7b
Entry block: 0x332
Exit block: 0x345
Body: 0x332, 0x339, 0x33d, 0x345, 0xc6b

Function 12:
Public function signature: 0xd0e30db0
Entry block: 0x361
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab, 0x361, 0xc7a, 0xcb5, 0xcb9, 0xcc6, 0xcca, 0xccf

Function 13:
Public fallback function
Entry block: 0xa9
Exit block: 0xab
Body: 0xa9, 0xaa, 0xab

Function 14:
Private function
Entry block: 0x771
Exit block: 0x55c
Body: 0x53f, 0x550, 0x55c, 0x771, 0x791, 0x7a8, 0x7bf, 0x7d6, 0x7ed, 0x804, 0x81b, 0x832, 0x849, 0x860, 0x877

Function 15:
Private function
Entry block: 0xcd1
Exit block: 0x5b6
Body: 0x5b6, 0xcd1

Function 16:
Private function
Entry block: 0x96d
Exit block: 0xb31
Body: 0x96d, 0x97c, 0x9a4, 0x9bb, 0x9d2, 0x9e9, 0xa00, 0xa17, 0xa2e, 0xa45, 0xa5c, 0xa73, 0xb11, 0xb22, 0xb31

Function 17:
Private function
Entry block: 0x5b9
Exit block: 0x76e
Body: 0x5b9, 0x5d8, 0x5ef, 0x606, 0x61d, 0x634, 0x64b, 0x662, 0x679, 0x690, 0x6a7, 0x6be, 0x75c, 0x769, 0x76e

Function 18:
Private function
Entry block: 0x3bf
Exit block: 0x43f
Body: 0x3bf, 0x422, 0x433, 0x43f

