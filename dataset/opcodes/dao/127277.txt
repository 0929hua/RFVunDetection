Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x93]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x93
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x93
0xa: JUMPI 0x93 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xdf]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x146901db
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xdf
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x146901db
0x20: V14 = EQ V12 0x146901db
0x21: V15 = 0xdf
0x24: JUMPI 0xdf V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xf1]
---
0x25 DUP1
0x26 PUSH4 0x1e0018d6
0x2b EQ
0x2c PUSH2 0xf1
0x2f JUMPI
---
0x26: V16 = 0x1e0018d6
0x2b: V17 = EQ 0x1e0018d6 V12
0x2c: V18 = 0xf1
0x2f: JUMPI 0xf1 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x11d]
---
0x30 DUP1
0x31 PUSH4 0x3ccfd60b
0x36 EQ
0x37 PUSH2 0x11d
0x3a JUMPI
---
0x31: V19 = 0x3ccfd60b
0x36: V20 = EQ 0x3ccfd60b V12
0x37: V21 = 0x11d
0x3a: JUMPI 0x11d V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x12f]
---
0x3b DUP1
0x3c PUSH4 0x64ae4451
0x41 EQ
0x42 PUSH2 0x12f
0x45 JUMPI
---
0x3c: V22 = 0x64ae4451
0x41: V23 = EQ 0x64ae4451 V12
0x42: V24 = 0x12f
0x45: JUMPI 0x12f V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x159]
---
0x46 DUP1
0x47 PUSH4 0x773041ce
0x4c EQ
0x4d PUSH2 0x159
0x50 JUMPI
---
0x47: V25 = 0x773041ce
0x4c: V26 = EQ 0x773041ce V12
0x4d: V27 = 0x159
0x50: JUMPI 0x159 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x177]
---
0x51 DUP1
0x52 PUSH4 0x8abdf5aa
0x57 EQ
0x58 PUSH2 0x177
0x5b JUMPI
---
0x52: V28 = 0x8abdf5aa
0x57: V29 = EQ 0x8abdf5aa V12
0x58: V30 = 0x177
0x5b: JUMPI 0x177 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x199]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x199
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x199
0x66: JUMPI 0x199 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1c5]
---
0x67 DUP1
0x68 PUSH4 0xc19d93fb
0x6d EQ
0x6e PUSH2 0x1c5
0x71 JUMPI
---
0x68: V34 = 0xc19d93fb
0x6d: V35 = EQ 0xc19d93fb V12
0x6e: V36 = 0x1c5
0x71: JUMPI 0x1c5 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1f9]
---
0x72 DUP1
0x73 PUSH4 0xeaf98d23
0x78 EQ
0x79 PUSH2 0x1f9
0x7c JUMPI
---
0x73: V37 = 0xeaf98d23
0x78: V38 = EQ 0xeaf98d23 V12
0x79: V39 = 0x1f9
0x7c: JUMPI 0x1f9 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x21b]
---
0x7d DUP1
0x7e PUSH4 0xec8ac4d8
0x83 EQ
0x84 PUSH2 0x21b
0x87 JUMPI
---
0x7e: V40 = 0xec8ac4d8
0x83: V41 = EQ 0xec8ac4d8 V12
0x84: V42 = 0x21b
0x87: JUMPI 0x21b V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x239]
---
0x88 DUP1
0x89 PUSH4 0xf2fde38b
0x8e EQ
0x8f PUSH2 0x239
0x92 JUMPI
---
0x89: V43 = 0xf2fde38b
0x8e: V44 = EQ 0xf2fde38b V12
0x8f: V45 = 0x239
0x92: JUMPI 0x239 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x0, 0x88]
Successors: [0x97]
---
0x93 JUMPDEST
0x94 PUSH2 0xdd
---
0x93: JUMPDEST 
0x94: V46 = 0xdd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdd]
Exit stack: [V12, 0xdd]

================================

Block 0x97
[0x97:0xda]
---
Predecessors: [0x93]
Successors: [0xdb]
---
0x97 JUMPDEST
0x98 PUSH1 0x40
0x9a DUP1
0x9b MLOAD
0x9c CALLVALUE
0x9d DUP2
0x9e MSTORE
0x9f PUSH1 0x1
0xa1 PUSH1 0xa0
0xa3 PUSH1 0x2
0xa5 EXP
0xa6 SUB
0xa7 CALLER
0xa8 AND
0xa9 PUSH1 0x20
0xab DUP3
0xac ADD
0xad MSTORE
0xae DUP2
0xaf MLOAD
0xb0 PUSH32 0x33e36c5037a4834b94e805648de1a58578badec436cfbd0679b82ca91603f40d
0xd1 SWAP3
0xd2 SWAP2
0xd3 DUP2
0xd4 SWAP1
0xd5 SUB
0xd6 SWAP1
0xd7 SWAP2
0xd8 ADD
0xd9 SWAP1
0xda LOG1
---
0x97: JUMPDEST 
0x98: V47 = 0x40
0x9b: V48 = M[0x40]
0x9c: V49 = CALLVALUE
0x9e: M[V48] = V49
0x9f: V50 = 0x1
0xa1: V51 = 0xa0
0xa3: V52 = 0x2
0xa5: V53 = EXP 0x2 0xa0
0xa6: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7: V55 = CALLER
0xa8: V56 = AND V55 0xffffffffffffffffffffffffffffffffffffffff
0xa9: V57 = 0x20
0xac: V58 = ADD V48 0x20
0xad: M[V58] = V56
0xaf: V59 = M[0x40]
0xb0: V60 = 0x33e36c5037a4834b94e805648de1a58578badec436cfbd0679b82ca91603f40d
0xd5: V61 = SUB V48 V59
0xd8: V62 = ADD 0x40 V61
0xda: LOG V59 V62 0x33e36c5037a4834b94e805648de1a58578badec436cfbd0679b82ca91603f40d
---
Entry stack: [V12, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd]

================================

Block 0xdb
[0xdb:0xdc]
---
Predecessors: [0x97]
Successors: [0xdd]
---
0xdb JUMPDEST
0xdc JUMP
---
0xdb: JUMPDEST 
0xdc: JUMP 0xdd
---
Entry stack: [V12, 0xdd]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd
[0xdd:0xde]
---
Predecessors: [0xdb, 0x2bc, 0x475, 0x529, 0x6b6, 0x704]
Successors: []
---
0xdd JUMPDEST
0xde STOP
---
0xdd: JUMPDEST 
0xde: STOP 
---
Entry stack: [V12, 0xdd, S11, 0x0, S9, S8, {0x0, 0xdd}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, S11, 0x0, S9, S8, {0x0, 0xdd}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xdf
[0xdf:0xe5]
---
Predecessors: [0xb]
Successors: [0xe6, 0xe7]
---
0xdf JUMPDEST
0xe0 CALLVALUE
0xe1 ISZERO
0xe2 PUSH2 0xe7
0xe5 JUMPI
---
0xdf: JUMPDEST 
0xe0: V63 = CALLVALUE
0xe1: V64 = ISZERO V63
0xe2: V65 = 0xe7
0xe5: JUMPI 0xe7 V64
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe6
[0xe6:0xe6]
---
Predecessors: [0xdf]
Successors: []
---
0xe6 INVALID
---
0xe6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0xdf]
Successors: [0x257]
---
0xe7 JUMPDEST
0xe8 PUSH2 0xdd
0xeb PUSH2 0x257
0xee JUMP
---
0xe7: JUMPDEST 
0xe8: V66 = 0xdd
0xeb: V67 = 0x257
0xee: JUMP 0x257
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdd]
Exit stack: [V12, 0xdd]

================================

Block 0xef
[0xef:0xf0]
---
Predecessors: []
Successors: []
---
0xef JUMPDEST
0xf0 STOP
---
0xef: JUMPDEST 
0xf0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0x25]
Successors: [0xf8, 0xf9]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xf9
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V68 = CALLVALUE
0xf3: V69 = ISZERO V68
0xf4: V70 = 0xf9
0xf7: JUMPI 0xf9 V69
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0xf8]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 INVALID
---
0xf8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0xf1]
Successors: [0x2be]
---
0xf9 JUMPDEST
0xfa PUSH2 0x101
0xfd PUSH2 0x2be
0x100 JUMP
---
0xf9: JUMPDEST 
0xfa: V71 = 0x101
0xfd: V72 = 0x2be
0x100: JUMP 0x2be
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V12, 0x101]

================================

Block 0x101
[0x101:0x11c]
---
Predecessors: [0x2be, 0x55f]
Successors: []
---
0x101 JUMPDEST
0x102 PUSH1 0x40
0x104 DUP1
0x105 MLOAD
0x106 PUSH1 0x1
0x108 PUSH1 0xa0
0x10a PUSH1 0x2
0x10c EXP
0x10d SUB
0x10e SWAP1
0x10f SWAP3
0x110 AND
0x111 DUP3
0x112 MSTORE
0x113 MLOAD
0x114 SWAP1
0x115 DUP2
0x116 SWAP1
0x117 SUB
0x118 PUSH1 0x20
0x11a ADD
0x11b SWAP1
0x11c RETURN
---
0x101: JUMPDEST 
0x102: V73 = 0x40
0x105: V74 = M[0x40]
0x106: V75 = 0x1
0x108: V76 = 0xa0
0x10a: V77 = 0x2
0x10c: V78 = EXP 0x2 0xa0
0x10d: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0x110: V80 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x112: M[V74] = V80
0x113: V81 = M[0x40]
0x117: V82 = SUB V74 V81
0x118: V83 = 0x20
0x11a: V84 = ADD 0x20 V82
0x11c: RETURN V81 V84
---
Entry stack: [V12, 0x101, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x101]

================================

Block 0x11d
[0x11d:0x123]
---
Predecessors: [0x30]
Successors: [0x124, 0x125]
---
0x11d JUMPDEST
0x11e CALLVALUE
0x11f ISZERO
0x120 PUSH2 0x125
0x123 JUMPI
---
0x11d: JUMPDEST 
0x11e: V85 = CALLVALUE
0x11f: V86 = ISZERO V85
0x120: V87 = 0x125
0x123: JUMPI 0x125 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x124
[0x124:0x124]
---
Predecessors: [0x11d]
Successors: []
---
0x124 INVALID
---
0x124: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x125
[0x125:0x12c]
---
Predecessors: [0x11d]
Successors: [0x2cd]
---
0x125 JUMPDEST
0x126 PUSH2 0xdd
0x129 PUSH2 0x2cd
0x12c JUMP
---
0x125: JUMPDEST 
0x126: V88 = 0xdd
0x129: V89 = 0x2cd
0x12c: JUMP 0x2cd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdd]
Exit stack: [V12, 0xdd]

================================

Block 0x12d
[0x12d:0x12e]
---
Predecessors: []
Successors: []
---
0x12d JUMPDEST
0x12e STOP
---
0x12d: JUMPDEST 
0x12e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12f
[0x12f:0x135]
---
Predecessors: [0x3b]
Successors: [0x136, 0x137]
---
0x12f JUMPDEST
0x130 CALLVALUE
0x131 ISZERO
0x132 PUSH2 0x137
0x135 JUMPI
---
0x12f: JUMPDEST 
0x130: V90 = CALLVALUE
0x131: V91 = ISZERO V90
0x132: V92 = 0x137
0x135: JUMPI 0x137 V91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x136
[0x136:0x136]
---
Predecessors: [0x12f]
Successors: []
---
0x136 INVALID
---
0x136: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x137
[0x137:0x144]
---
Predecessors: [0x12f]
Successors: [0x479]
---
0x137 JUMPDEST
0x138 PUSH2 0x145
0x13b PUSH1 0xff
0x13d PUSH1 0x4
0x13f CALLDATALOAD
0x140 AND
0x141 PUSH2 0x479
0x144 JUMP
---
0x137: JUMPDEST 
0x138: V93 = 0x145
0x13b: V94 = 0xff
0x13d: V95 = 0x4
0x13f: V96 = CALLDATALOAD 0x4
0x140: V97 = AND V96 0xff
0x141: V98 = 0x479
0x144: JUMP 0x479
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x145, V97]
Exit stack: [V12, 0x145, V97]

================================

Block 0x145
[0x145:0x158]
---
Predecessors: [0x4a3]
Successors: []
---
0x145 JUMPDEST
0x146 PUSH1 0x40
0x148 DUP1
0x149 MLOAD
0x14a SWAP2
0x14b ISZERO
0x14c ISZERO
0x14d DUP3
0x14e MSTORE
0x14f MLOAD
0x150 SWAP1
0x151 DUP2
0x152 SWAP1
0x153 SUB
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP1
0x158 RETURN
---
0x145: JUMPDEST 
0x146: V99 = 0x40
0x149: V100 = M[0x40]
0x14b: V101 = ISZERO S0
0x14c: V102 = ISZERO V101
0x14e: M[V100] = V102
0x14f: V103 = M[0x40]
0x153: V104 = SUB V100 V103
0x154: V105 = 0x20
0x156: V106 = ADD 0x20 V104
0x158: RETURN V103 V106
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xdd, 0x0, 0x0, S1]

================================

Block 0x159
[0x159:0x15f]
---
Predecessors: [0x46]
Successors: [0x160, 0x161]
---
0x159 JUMPDEST
0x15a CALLVALUE
0x15b ISZERO
0x15c PUSH2 0x161
0x15f JUMPI
---
0x159: JUMPDEST 
0x15a: V107 = CALLVALUE
0x15b: V108 = ISZERO V107
0x15c: V109 = 0x161
0x15f: JUMPI 0x161 V108
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x160
[0x160:0x160]
---
Predecessors: [0x159]
Successors: []
---
0x160 INVALID
---
0x160: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x161
[0x161:0x174]
---
Predecessors: [0x159]
Successors: [0x4a8]
---
0x161 JUMPDEST
0x162 PUSH2 0xdd
0x165 PUSH1 0x1
0x167 PUSH1 0xa0
0x169 PUSH1 0x2
0x16b EXP
0x16c SUB
0x16d PUSH1 0x4
0x16f CALLDATALOAD
0x170 AND
0x171 PUSH2 0x4a8
0x174 JUMP
---
0x161: JUMPDEST 
0x162: V110 = 0xdd
0x165: V111 = 0x1
0x167: V112 = 0xa0
0x169: V113 = 0x2
0x16b: V114 = EXP 0x2 0xa0
0x16c: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16d: V116 = 0x4
0x16f: V117 = CALLDATALOAD 0x4
0x170: V118 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x171: V119 = 0x4a8
0x174: JUMP 0x4a8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdd, V118]
Exit stack: [V12, 0xdd, V118]

================================

Block 0x175
[0x175:0x176]
---
Predecessors: []
Successors: []
---
0x175 JUMPDEST
0x176 STOP
---
0x175: JUMPDEST 
0x176: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x177
[0x177:0x17d]
---
Predecessors: [0x51]
Successors: [0x17e, 0x17f]
---
0x177 JUMPDEST
0x178 CALLVALUE
0x179 ISZERO
0x17a PUSH2 0x17f
0x17d JUMPI
---
0x177: JUMPDEST 
0x178: V120 = CALLVALUE
0x179: V121 = ISZERO V120
0x17a: V122 = 0x17f
0x17d: JUMPI 0x17f V121
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17e
[0x17e:0x17e]
---
Predecessors: [0x177]
Successors: []
---
0x17e INVALID
---
0x17e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17f
[0x17f:0x186]
---
Predecessors: [0x177]
Successors: [0x52c]
---
0x17f JUMPDEST
0x180 PUSH2 0x187
0x183 PUSH2 0x52c
0x186 JUMP
---
0x17f: JUMPDEST 
0x180: V123 = 0x187
0x183: V124 = 0x52c
0x186: JUMP 0x52c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x187]
Exit stack: [V12, 0x187]

================================

Block 0x187
[0x187:0x198]
---
Predecessors: [0x55c, 0x57e]
Successors: []
---
0x187 JUMPDEST
0x188 PUSH1 0x40
0x18a DUP1
0x18b MLOAD
0x18c SWAP2
0x18d DUP3
0x18e MSTORE
0x18f MLOAD
0x190 SWAP1
0x191 DUP2
0x192 SWAP1
0x193 SUB
0x194 PUSH1 0x20
0x196 ADD
0x197 SWAP1
0x198 RETURN
---
0x187: JUMPDEST 
0x188: V125 = 0x40
0x18b: V126 = M[0x40]
0x18e: M[V126] = S0
0x18f: V127 = M[0x40]
0x193: V128 = SUB V126 V127
0x194: V129 = 0x20
0x196: V130 = ADD 0x20 V128
0x198: RETURN V127 V130
---
Entry stack: [V12, 0xdd, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xdd, S3, S2, S1]

================================

Block 0x199
[0x199:0x19f]
---
Predecessors: [0x5c]
Successors: [0x1a0, 0x1a1]
---
0x199 JUMPDEST
0x19a CALLVALUE
0x19b ISZERO
0x19c PUSH2 0x1a1
0x19f JUMPI
---
0x199: JUMPDEST 
0x19a: V131 = CALLVALUE
0x19b: V132 = ISZERO V131
0x19c: V133 = 0x1a1
0x19f: JUMPI 0x1a1 V132
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a0
[0x1a0:0x1a0]
---
Predecessors: [0x199]
Successors: []
---
0x1a0 INVALID
---
0x1a0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a1
[0x1a1:0x1a8]
---
Predecessors: [0x199]
Successors: [0x55f]
---
0x1a1 JUMPDEST
0x1a2 PUSH2 0x101
0x1a5 PUSH2 0x55f
0x1a8 JUMP
---
0x1a1: JUMPDEST 
0x1a2: V134 = 0x101
0x1a5: V135 = 0x55f
0x1a8: JUMP 0x55f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V12, 0x101]

================================

Block 0x1a9
[0x1a9:0x1c4]
---
Predecessors: []
Successors: []
---
0x1a9 JUMPDEST
0x1aa PUSH1 0x40
0x1ac DUP1
0x1ad MLOAD
0x1ae PUSH1 0x1
0x1b0 PUSH1 0xa0
0x1b2 PUSH1 0x2
0x1b4 EXP
0x1b5 SUB
0x1b6 SWAP1
0x1b7 SWAP3
0x1b8 AND
0x1b9 DUP3
0x1ba MSTORE
0x1bb MLOAD
0x1bc SWAP1
0x1bd DUP2
0x1be SWAP1
0x1bf SUB
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP1
0x1c4 RETURN
---
0x1a9: JUMPDEST 
0x1aa: V136 = 0x40
0x1ad: V137 = M[0x40]
0x1ae: V138 = 0x1
0x1b0: V139 = 0xa0
0x1b2: V140 = 0x2
0x1b4: V141 = EXP 0x2 0xa0
0x1b5: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b8: V143 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: M[V137] = V143
0x1bb: V144 = M[0x40]
0x1bf: V145 = SUB V137 V144
0x1c0: V146 = 0x20
0x1c2: V147 = ADD 0x20 V145
0x1c4: RETURN V144 V147
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1c5
[0x1c5:0x1cb]
---
Predecessors: [0x67]
Successors: [0x1cc, 0x1cd]
---
0x1c5 JUMPDEST
0x1c6 CALLVALUE
0x1c7 ISZERO
0x1c8 PUSH2 0x1cd
0x1cb JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V148 = CALLVALUE
0x1c7: V149 = ISZERO V148
0x1c8: V150 = 0x1cd
0x1cb: JUMPI 0x1cd V149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cc
[0x1cc:0x1cc]
---
Predecessors: [0x1c5]
Successors: []
---
0x1cc INVALID
---
0x1cc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cd
[0x1cd:0x1d4]
---
Predecessors: [0x1c5]
Successors: [0x56e]
---
0x1cd JUMPDEST
0x1ce PUSH2 0x1d5
0x1d1 PUSH2 0x56e
0x1d4 JUMP
---
0x1cd: JUMPDEST 
0x1ce: V151 = 0x1d5
0x1d1: V152 = 0x56e
0x1d4: JUMP 0x56e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d5]
Exit stack: [V12, 0x1d5]

================================

Block 0x1d5
[0x1d5:0x1e3]
---
Predecessors: [0x56e]
Successors: [0x1e4, 0x1e5]
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 DUP1
0x1da DUP3
0x1db PUSH1 0x2
0x1dd DUP2
0x1de GT
0x1df ISZERO
0x1e0 PUSH2 0x1e5
0x1e3 JUMPI
---
0x1d5: JUMPDEST 
0x1d6: V153 = 0x40
0x1d8: V154 = M[0x40]
0x1db: V155 = 0x2
0x1de: V156 = GT V476 0x2
0x1df: V157 = ISZERO V156
0x1e0: V158 = 0x1e5
0x1e3: JUMPI 0x1e5 V157
---
Entry stack: [V12, 0x1d5, V476]
Stack pops: 1
Stack additions: [S0, V154, V154, S0]
Exit stack: [V12, 0x1d5, V476, V154, V154, V476]

================================

Block 0x1e4
[0x1e4:0x1e4]
---
Predecessors: [0x1d5]
Successors: []
---
0x1e4 INVALID
---
0x1e4: INVALID 
---
Entry stack: [V12, 0x1d5, V476, V154, V154, V476]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1d5, V476, V154, V154, V476]

================================

Block 0x1e5
[0x1e5:0x1f8]
---
Predecessors: [0x1d5]
Successors: []
---
0x1e5 JUMPDEST
0x1e6 PUSH1 0xff
0x1e8 AND
0x1e9 DUP2
0x1ea MSTORE
0x1eb PUSH1 0x20
0x1ed ADD
0x1ee SWAP2
0x1ef POP
0x1f0 POP
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 SWAP2
0x1f6 SUB
0x1f7 SWAP1
0x1f8 RETURN
---
0x1e5: JUMPDEST 
0x1e6: V159 = 0xff
0x1e8: V160 = AND 0xff V476
0x1ea: M[V154] = V160
0x1eb: V161 = 0x20
0x1ed: V162 = ADD 0x20 V154
0x1f1: V163 = 0x40
0x1f3: V164 = M[0x40]
0x1f6: V165 = SUB V162 V164
0x1f8: RETURN V164 V165
---
Entry stack: [V12, 0x1d5, V476, V154, V154, V476]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x1d5]

================================

Block 0x1f9
[0x1f9:0x1ff]
---
Predecessors: [0x72]
Successors: [0x200, 0x201]
---
0x1f9 JUMPDEST
0x1fa CALLVALUE
0x1fb ISZERO
0x1fc PUSH2 0x201
0x1ff JUMPI
---
0x1f9: JUMPDEST 
0x1fa: V166 = CALLVALUE
0x1fb: V167 = ISZERO V166
0x1fc: V168 = 0x201
0x1ff: JUMPI 0x201 V167
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x200
[0x200:0x200]
---
Predecessors: [0x1f9]
Successors: []
---
0x200 INVALID
---
0x200: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x201
[0x201:0x208]
---
Predecessors: [0x1f9]
Successors: [0x57e]
---
0x201 JUMPDEST
0x202 PUSH2 0x187
0x205 PUSH2 0x57e
0x208 JUMP
---
0x201: JUMPDEST 
0x202: V169 = 0x187
0x205: V170 = 0x57e
0x208: JUMP 0x57e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x187]
Exit stack: [V12, 0x187]

================================

Block 0x209
[0x209:0x21a]
---
Predecessors: []
Successors: []
---
0x209 JUMPDEST
0x20a PUSH1 0x40
0x20c DUP1
0x20d MLOAD
0x20e SWAP2
0x20f DUP3
0x210 MSTORE
0x211 MLOAD
0x212 SWAP1
0x213 DUP2
0x214 SWAP1
0x215 SUB
0x216 PUSH1 0x20
0x218 ADD
0x219 SWAP1
0x21a RETURN
---
0x209: JUMPDEST 
0x20a: V171 = 0x40
0x20d: V172 = M[0x40]
0x210: M[V172] = S0
0x211: V173 = M[0x40]
0x215: V174 = SUB V172 V173
0x216: V175 = 0x20
0x218: V176 = ADD 0x20 V174
0x21a: RETURN V173 V176
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x21b
[0x21b:0x221]
---
Predecessors: [0x7d]
Successors: [0x222, 0x223]
---
0x21b JUMPDEST
0x21c CALLVALUE
0x21d ISZERO
0x21e PUSH2 0x223
0x221 JUMPI
---
0x21b: JUMPDEST 
0x21c: V177 = CALLVALUE
0x21d: V178 = ISZERO V177
0x21e: V179 = 0x223
0x221: JUMPI 0x223 V178
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x222
[0x222:0x222]
---
Predecessors: [0x21b]
Successors: []
---
0x222 INVALID
---
0x222: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x223
[0x223:0x236]
---
Predecessors: [0x21b]
Successors: [0x583]
---
0x223 JUMPDEST
0x224 PUSH2 0xdd
0x227 PUSH1 0x1
0x229 PUSH1 0xa0
0x22b PUSH1 0x2
0x22d EXP
0x22e SUB
0x22f PUSH1 0x4
0x231 CALLDATALOAD
0x232 AND
0x233 PUSH2 0x583
0x236 JUMP
---
0x223: JUMPDEST 
0x224: V180 = 0xdd
0x227: V181 = 0x1
0x229: V182 = 0xa0
0x22b: V183 = 0x2
0x22d: V184 = EXP 0x2 0xa0
0x22e: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22f: V186 = 0x4
0x231: V187 = CALLDATALOAD 0x4
0x232: V188 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x233: V189 = 0x583
0x236: JUMP 0x583
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdd, V188]
Exit stack: [V12, 0xdd, V188]

================================

Block 0x237
[0x237:0x238]
---
Predecessors: []
Successors: []
---
0x237 JUMPDEST
0x238 STOP
---
0x237: JUMPDEST 
0x238: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x239
[0x239:0x23f]
---
Predecessors: [0x88]
Successors: [0x240, 0x241]
---
0x239 JUMPDEST
0x23a CALLVALUE
0x23b ISZERO
0x23c PUSH2 0x241
0x23f JUMPI
---
0x239: JUMPDEST 
0x23a: V190 = CALLVALUE
0x23b: V191 = ISZERO V190
0x23c: V192 = 0x241
0x23f: JUMPI 0x241 V191
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x240
[0x240:0x240]
---
Predecessors: [0x239]
Successors: []
---
0x240 INVALID
---
0x240: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x241
[0x241:0x254]
---
Predecessors: [0x239]
Successors: [0x6bb]
---
0x241 JUMPDEST
0x242 PUSH2 0xdd
0x245 PUSH1 0x1
0x247 PUSH1 0xa0
0x249 PUSH1 0x2
0x24b EXP
0x24c SUB
0x24d PUSH1 0x4
0x24f CALLDATALOAD
0x250 AND
0x251 PUSH2 0x6bb
0x254 JUMP
---
0x241: JUMPDEST 
0x242: V193 = 0xdd
0x245: V194 = 0x1
0x247: V195 = 0xa0
0x249: V196 = 0x2
0x24b: V197 = EXP 0x2 0xa0
0x24c: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24d: V199 = 0x4
0x24f: V200 = CALLDATALOAD 0x4
0x250: V201 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x251: V202 = 0x6bb
0x254: JUMP 0x6bb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xdd, V201]
Exit stack: [V12, 0xdd, V201]

================================

Block 0x255
[0x255:0x256]
---
Predecessors: []
Successors: []
---
0x255 JUMPDEST
0x256 STOP
---
0x255: JUMPDEST 
0x256: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x257
[0x257:0x26d]
---
Predecessors: [0xe7]
Successors: [0x26e, 0x273]
---
0x257 JUMPDEST
0x258 PUSH1 0x0
0x25a SLOAD
0x25b CALLER
0x25c PUSH1 0x1
0x25e PUSH1 0xa0
0x260 PUSH1 0x2
0x262 EXP
0x263 SUB
0x264 SWAP1
0x265 DUP2
0x266 AND
0x267 SWAP2
0x268 AND
0x269 EQ
0x26a PUSH2 0x273
0x26d JUMPI
---
0x257: JUMPDEST 
0x258: V203 = 0x0
0x25a: V204 = S[0x0]
0x25b: V205 = CALLER
0x25c: V206 = 0x1
0x25e: V207 = 0xa0
0x260: V208 = 0x2
0x262: V209 = EXP 0x2 0xa0
0x263: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x266: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x268: V212 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x269: V213 = EQ V212 V211
0x26a: V214 = 0x273
0x26d: JUMPI 0x273 V213
---
Entry stack: [V12, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd]

================================

Block 0x26e
[0x26e:0x272]
---
Predecessors: [0x257]
Successors: []
---
0x26e PUSH1 0x0
0x270 PUSH1 0x0
0x272 REVERT
---
0x26e: V215 = 0x0
0x270: V216 = 0x0
0x272: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd]

================================

Block 0x273
[0x273:0x28b]
---
Predecessors: [0x257]
Successors: [0x28c]
---
0x273 JUMPDEST
0x274 PUSH1 0x1
0x276 DUP1
0x277 SLOAD
0x278 PUSH1 0x2
0x27a SWAP2
0x27b SWAP1
0x27c PUSH1 0xa0
0x27e PUSH1 0x2
0x280 EXP
0x281 PUSH1 0xff
0x283 MUL
0x284 NOT
0x285 AND
0x286 PUSH1 0xa0
0x288 PUSH1 0x2
0x28a EXP
0x28b DUP4
---
0x273: JUMPDEST 
0x274: V217 = 0x1
0x277: V218 = S[0x1]
0x278: V219 = 0x2
0x27c: V220 = 0xa0
0x27e: V221 = 0x2
0x280: V222 = EXP 0x2 0xa0
0x281: V223 = 0xff
0x283: V224 = MUL 0xff 0x10000000000000000000000000000000000000000
0x284: V225 = NOT 0xff0000000000000000000000000000000000000000
0x285: V226 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V218
0x286: V227 = 0xa0
0x288: V228 = 0x2
0x28a: V229 = EXP 0x2 0xa0
---
Entry stack: [V12, 0xdd]
Stack pops: 0
Stack additions: [0x2, 0x1, V226, 0x10000000000000000000000000000000000000000, 0x2]
Exit stack: [V12, 0xdd, 0x2, 0x1, V226, 0x10000000000000000000000000000000000000000, 0x2]

================================

Block 0x28c
[0x28c:0x2ba]
---
Predecessors: [0x273]
Successors: [0x2bb]
---
0x28c JUMPDEST
0x28d MUL
0x28e OR
0x28f SWAP1
0x290 SSTORE
0x291 POP
0x292 PUSH1 0x40
0x294 MLOAD
0x295 PUSH32 0x1b0ba14d0d88ac936babe67c6ed402959bc2a548d8521436f4f27a29be3f619a
0x2b6 SWAP1
0x2b7 PUSH1 0x0
0x2b9 SWAP1
0x2ba LOG1
---
0x28c: JUMPDEST 
0x28d: V230 = MUL 0x2 0x10000000000000000000000000000000000000000
0x28e: V231 = OR 0x20000000000000000000000000000000000000000 V226
0x290: S[0x1] = V231
0x292: V232 = 0x40
0x294: V233 = M[0x40]
0x295: V234 = 0x1b0ba14d0d88ac936babe67c6ed402959bc2a548d8521436f4f27a29be3f619a
0x2b7: V235 = 0x0
0x2ba: LOG V233 0x0 0x1b0ba14d0d88ac936babe67c6ed402959bc2a548d8521436f4f27a29be3f619a
---
Entry stack: [V12, 0xdd, 0x2, 0x1, V226, 0x10000000000000000000000000000000000000000, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0xdd]

================================

Block 0x2bb
[0x2bb:0x2bb]
---
Predecessors: [0x28c]
Successors: [0x2bc]
---
0x2bb JUMPDEST
---
0x2bb: JUMPDEST 
---
Entry stack: [V12, 0xdd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd]

================================

Block 0x2bc
[0x2bc:0x2bd]
---
Predecessors: [0x2bb]
Successors: [0xdd]
---
0x2bc JUMPDEST
0x2bd JUMP
---
0x2bc: JUMPDEST 
0x2bd: JUMP 0xdd
---
Entry stack: [V12, 0xdd]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x2be
[0x2be:0x2cc]
---
Predecessors: [0xf9]
Successors: [0x101]
---
0x2be JUMPDEST
0x2bf PUSH1 0x1
0x2c1 SLOAD
0x2c2 PUSH1 0x1
0x2c4 PUSH1 0xa0
0x2c6 PUSH1 0x2
0x2c8 EXP
0x2c9 SUB
0x2ca AND
0x2cb DUP2
0x2cc JUMP
---
0x2be: JUMPDEST 
0x2bf: V236 = 0x1
0x2c1: V237 = S[0x1]
0x2c2: V238 = 0x1
0x2c4: V239 = 0xa0
0x2c6: V240 = 0x2
0x2c8: V241 = EXP 0x2 0xa0
0x2c9: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ca: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x2cc: JUMP 0x101
---
Entry stack: [V12, 0x101]
Stack pops: 1
Stack additions: [S0, V243]
Exit stack: [V12, 0x101, V243]

================================

Block 0x2cd
[0x2cd:0x2e6]
---
Predecessors: [0x125]
Successors: [0x2e7, 0x2ec]
---
0x2cd JUMPDEST
0x2ce PUSH1 0x0
0x2d0 DUP1
0x2d1 SLOAD
0x2d2 DUP2
0x2d3 SWAP1
0x2d4 CALLER
0x2d5 PUSH1 0x1
0x2d7 PUSH1 0xa0
0x2d9 PUSH1 0x2
0x2db EXP
0x2dc SUB
0x2dd SWAP1
0x2de DUP2
0x2df AND
0x2e0 SWAP2
0x2e1 AND
0x2e2 EQ
0x2e3 PUSH2 0x2ec
0x2e6 JUMPI
---
0x2cd: JUMPDEST 
0x2ce: V244 = 0x0
0x2d1: V245 = S[0x0]
0x2d4: V246 = CALLER
0x2d5: V247 = 0x1
0x2d7: V248 = 0xa0
0x2d9: V249 = 0x2
0x2db: V250 = EXP 0x2 0xa0
0x2dc: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2df: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x2e1: V253 = AND V245 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V254 = EQ V253 V252
0x2e3: V255 = 0x2ec
0x2e6: JUMPI 0x2ec V254
---
Entry stack: [V12, 0xdd]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xdd, 0x0, 0x0]

================================

Block 0x2e7
[0x2e7:0x2eb]
---
Predecessors: [0x2cd]
Successors: []
---
0x2e7 PUSH1 0x0
0x2e9 PUSH1 0x0
0x2eb REVERT
---
0x2e7: V256 = 0x0
0x2e9: V257 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdd, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, 0x0, 0x0]

================================

Block 0x2ec
[0x2ec:0x2ef]
---
Predecessors: [0x2cd]
Successors: [0x2f0]
---
0x2ec JUMPDEST
0x2ed PUSH1 0x1
0x2ef DUP1
---
0x2ec: JUMPDEST 
0x2ed: V258 = 0x1
---
Entry stack: [V12, 0xdd, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x1, 0x1]
Exit stack: [V12, 0xdd, 0x0, 0x0, 0x1, 0x1]

================================

Block 0x2f0
[0x2f0:0x306]
---
Predecessors: [0x2ec]
Successors: [0x307, 0x308]
---
0x2f0 JUMPDEST
0x2f1 PUSH1 0x1
0x2f3 SLOAD
0x2f4 PUSH1 0xa0
0x2f6 PUSH1 0x2
0x2f8 EXP
0x2f9 SWAP1
0x2fa DIV
0x2fb PUSH1 0xff
0x2fd AND
0x2fe PUSH1 0x2
0x300 DUP2
0x301 GT
0x302 ISZERO
0x303 PUSH2 0x308
0x306 JUMPI
---
0x2f0: JUMPDEST 
0x2f1: V259 = 0x1
0x2f3: V260 = S[0x1]
0x2f4: V261 = 0xa0
0x2f6: V262 = 0x2
0x2f8: V263 = EXP 0x2 0xa0
0x2fa: V264 = DIV V260 0x10000000000000000000000000000000000000000
0x2fb: V265 = 0xff
0x2fd: V266 = AND 0xff V264
0x2fe: V267 = 0x2
0x301: V268 = GT V266 0x2
0x302: V269 = ISZERO V268
0x303: V270 = 0x308
0x306: JUMPI 0x308 V269
---
Entry stack: [V12, 0xdd, 0x0, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: [V266]
Exit stack: [V12, 0xdd, 0x0, 0x0, 0x1, 0x1, V266]

================================

Block 0x307
[0x307:0x307]
---
Predecessors: [0x2f0]
Successors: []
---
0x307 INVALID
---
0x307: INVALID 
---
Entry stack: [V12, 0xdd, 0x0, 0x0, 0x1, 0x1, V266]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, 0x0, 0x0, 0x1, 0x1, V266]

================================

Block 0x308
[0x308:0x30e]
---
Predecessors: [0x2f0]
Successors: [0x30f, 0x314]
---
0x308 JUMPDEST
0x309 EQ
0x30a ISZERO
0x30b PUSH2 0x314
0x30e JUMPI
---
0x308: JUMPDEST 
0x309: V271 = EQ V266 0x1
0x30a: V272 = ISZERO V271
0x30b: V273 = 0x314
0x30e: JUMPI 0x314 V272
---
Entry stack: [V12, 0xdd, 0x0, 0x0, 0x1, 0x1, V266]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xdd, 0x0, 0x0, 0x1]

================================

Block 0x30f
[0x30f:0x313]
---
Predecessors: [0x308]
Successors: []
---
0x30f PUSH1 0x0
0x311 PUSH1 0x0
0x313 REVERT
---
0x30f: V274 = 0x0
0x311: V275 = 0x0
0x313: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdd, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, 0x0, 0x0, 0x1]

================================

Block 0x314
[0x314:0x31d]
---
Predecessors: [0x308]
Successors: [0x479]
---
0x314 JUMPDEST
0x315 PUSH2 0x31e
0x318 PUSH1 0x2
0x31a PUSH2 0x479
0x31d JUMP
---
0x314: JUMPDEST 
0x315: V276 = 0x31e
0x318: V277 = 0x2
0x31a: V278 = 0x479
0x31d: JUMP 0x479
---
Entry stack: [V12, 0xdd, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: [0x31e, 0x2]
Exit stack: [V12, 0xdd, 0x0, 0x0, 0x1, 0x31e, 0x2]

================================

Block 0x31e
[0x31e:0x323]
---
Predecessors: [0x4a3]
Successors: [0x324, 0x397]
---
0x31e JUMPDEST
0x31f ISZERO
0x320 PUSH2 0x397
0x323 JUMPI
---
0x31e: JUMPDEST 
0x31f: V279 = ISZERO S0
0x320: V280 = 0x397
0x323: JUMPI 0x397 V279
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xdd, 0x0, 0x0, S1]

================================

Block 0x324
[0x324:0x359]
---
Predecessors: [0x31e]
Successors: [0x35a, 0x35f]
---
0x324 PUSH1 0x1
0x326 SLOAD
0x327 PUSH1 0x40
0x329 MLOAD
0x32a PUSH1 0x1
0x32c PUSH1 0xa0
0x32e PUSH1 0x2
0x330 EXP
0x331 SUB
0x332 ADDRESS
0x333 DUP2
0x334 AND
0x335 BALANCE
0x336 SWAP6
0x337 POP
0x338 SWAP2
0x339 SWAP1
0x33a SWAP2
0x33b AND
0x33c SWAP1
0x33d DUP5
0x33e ISZERO
0x33f PUSH2 0x8fc
0x342 MUL
0x343 SWAP1
0x344 DUP6
0x345 SWAP1
0x346 PUSH1 0x0
0x348 DUP2
0x349 DUP2
0x34a DUP2
0x34b DUP6
0x34c DUP9
0x34d DUP9
0x34e CALL
0x34f SWAP4
0x350 POP
0x351 POP
0x352 POP
0x353 POP
0x354 ISZERO
0x355 ISZERO
0x356 PUSH2 0x35f
0x359 JUMPI
---
0x324: V281 = 0x1
0x326: V282 = S[0x1]
0x327: V283 = 0x40
0x329: V284 = M[0x40]
0x32a: V285 = 0x1
0x32c: V286 = 0xa0
0x32e: V287 = 0x2
0x330: V288 = EXP 0x2 0xa0
0x331: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x332: V290 = ADDRESS
0x334: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x335: V292 = BALANCE V291
0x33b: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x33e: V294 = ISZERO V292
0x33f: V295 = 0x8fc
0x342: V296 = MUL 0x8fc V294
0x346: V297 = 0x0
0x34e: V298 = CALL V296 V293 V292 V284 0x0 V284 0x0
0x354: V299 = ISZERO V298
0x355: V300 = ISZERO V299
0x356: V301 = 0x35f
0x359: JUMPI 0x35f V300
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S0]
Stack pops: 3
Stack additions: [V292, S1, S0]
Exit stack: [V12, 0xdd, V292, 0x0, S0]

================================

Block 0x35a
[0x35a:0x35e]
---
Predecessors: [0x324]
Successors: []
---
0x35a PUSH1 0x0
0x35c PUSH1 0x0
0x35e REVERT
---
0x35a: V302 = 0x0
0x35c: V303 = 0x0
0x35e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdd, V292, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V292, 0x0, S0]

================================

Block 0x35f
[0x35f:0x396]
---
Predecessors: [0x324]
Successors: [0x470]
---
0x35f JUMPDEST
0x360 PUSH1 0x40
0x362 DUP1
0x363 MLOAD
0x364 DUP5
0x365 DUP2
0x366 MSTORE
0x367 SWAP1
0x368 MLOAD
0x369 PUSH32 0xca4bd5135a11e3fc146ac22d75f0d2eae9b6c61b6fa3eb6724a456b311ad72d3
0x38a SWAP2
0x38b DUP2
0x38c SWAP1
0x38d SUB
0x38e PUSH1 0x20
0x390 ADD
0x391 SWAP1
0x392 LOG1
0x393 PUSH2 0x470
0x396 JUMP
---
0x35f: JUMPDEST 
0x360: V304 = 0x40
0x363: V305 = M[0x40]
0x366: M[V305] = V292
0x368: V306 = M[0x40]
0x369: V307 = 0xca4bd5135a11e3fc146ac22d75f0d2eae9b6c61b6fa3eb6724a456b311ad72d3
0x38d: V308 = SUB V305 V306
0x38e: V309 = 0x20
0x390: V310 = ADD 0x20 V308
0x392: LOG V306 V310 0xca4bd5135a11e3fc146ac22d75f0d2eae9b6c61b6fa3eb6724a456b311ad72d3
0x393: V311 = 0x470
0x396: JUMP 0x470
---
Entry stack: [V12, 0xdd, V292, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xdd, V292, 0x0, S0]

================================

Block 0x397
[0x397:0x3a0]
---
Predecessors: [0x31e]
Successors: [0x479]
---
0x397 JUMPDEST
0x398 PUSH2 0x3a1
0x39b PUSH1 0x0
0x39d PUSH2 0x479
0x3a0 JUMP
---
0x397: JUMPDEST 
0x398: V312 = 0x3a1
0x39b: V313 = 0x0
0x39d: V314 = 0x479
0x3a0: JUMP 0x479
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S0]
Stack pops: 0
Stack additions: [0x3a1, 0x0]
Exit stack: [V12, 0xdd, 0x0, 0x0, S0, 0x3a1, 0x0]

================================

Block 0x3a1
[0x3a1:0x3a6]
---
Predecessors: [0x4a3]
Successors: [0x3a7, 0x470]
---
0x3a1 JUMPDEST
0x3a2 ISZERO
0x3a3 PUSH2 0x470
0x3a6 JUMPI
---
0x3a1: JUMPDEST 
0x3a2: V315 = ISZERO S0
0x3a3: V316 = 0x470
0x3a6: JUMPI 0x470 V315
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xdd, 0x0, 0x0, S1]

================================

Block 0x3a7
[0x3a7:0x3ad]
---
Predecessors: [0x3a1]
Successors: [0x52c]
---
0x3a7 PUSH2 0x3ae
0x3aa PUSH2 0x52c
0x3ad JUMP
---
0x3a7: V317 = 0x3ae
0x3aa: V318 = 0x52c
0x3ad: JUMP 0x52c
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S0]
Stack pops: 0
Stack additions: [0x3ae]
Exit stack: [V12, 0xdd, 0x0, 0x0, S0, 0x3ae]

================================

Block 0x3ae
[0x3ae:0x3c9]
---
Predecessors: [0x55c]
Successors: [0x707]
---
0x3ae JUMPDEST
0x3af SWAP2
0x3b0 POP
0x3b1 PUSH2 0x3ca
0x3b4 PUSH1 0x1
0x3b6 PUSH1 0xa0
0x3b8 PUSH1 0x2
0x3ba EXP
0x3bb SUB
0x3bc ADDRESS
0x3bd AND
0x3be BALANCE
0x3bf DUP4
0x3c0 PUSH4 0xffffffff
0x3c5 PUSH2 0x707
0x3c8 AND
0x3c9 JUMP
---
0x3ae: JUMPDEST 
0x3b1: V319 = 0x3ca
0x3b4: V320 = 0x1
0x3b6: V321 = 0xa0
0x3b8: V322 = 0x2
0x3ba: V323 = EXP 0x2 0xa0
0x3bb: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bc: V325 = ADDRESS
0x3bd: V326 = AND V325 0xffffffffffffffffffffffffffffffffffffffff
0x3be: V327 = BALANCE V326
0x3c0: V328 = 0xffffffff
0x3c5: V329 = 0x707
0x3c8: V330 = AND 0x707 0xffffffff
0x3c9: JUMP 0x707
---
Entry stack: [V12, 0xdd, S3, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x3ca, V327, S0]
Exit stack: [V12, 0xdd, S3, S0, S1, 0x3ca, V327, S0]

================================

Block 0x3ca
[0x3ca:0x3fa]
---
Predecessors: [0x71a]
Successors: [0x3fb, 0x400]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x1
0x3cd SLOAD
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 SWAP2
0x3d2 SWAP5
0x3d3 POP
0x3d4 PUSH1 0x1
0x3d6 PUSH1 0xa0
0x3d8 PUSH1 0x2
0x3da EXP
0x3db SUB
0x3dc AND
0x3dd SWAP1
0x3de DUP5
0x3df ISZERO
0x3e0 PUSH2 0x8fc
0x3e3 MUL
0x3e4 SWAP1
0x3e5 DUP6
0x3e6 SWAP1
0x3e7 PUSH1 0x0
0x3e9 DUP2
0x3ea DUP2
0x3eb DUP2
0x3ec DUP6
0x3ed DUP9
0x3ee DUP9
0x3ef CALL
0x3f0 SWAP4
0x3f1 POP
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 ISZERO
0x3f6 ISZERO
0x3f7 PUSH2 0x400
0x3fa JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V331 = 0x1
0x3cd: V332 = S[0x1]
0x3ce: V333 = 0x40
0x3d0: V334 = M[0x40]
0x3d4: V335 = 0x1
0x3d6: V336 = 0xa0
0x3d8: V337 = 0x2
0x3da: V338 = EXP 0x2 0xa0
0x3db: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dc: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x3df: V341 = ISZERO S0
0x3e0: V342 = 0x8fc
0x3e3: V343 = MUL 0x8fc V341
0x3e7: V344 = 0x0
0x3ef: V345 = CALL V343 V340 S0 V334 0x0 V334 0x0
0x3f5: V346 = ISZERO V345
0x3f6: V347 = ISZERO V346
0x3f7: V348 = 0x400
0x3fa: JUMPI 0x400 V347
---
Entry stack: [V12, 0xdd, V188, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V12, 0xdd, S0, S2, S1]

================================

Block 0x3fb
[0x3fb:0x3ff]
---
Predecessors: [0x3ca]
Successors: []
---
0x3fb PUSH1 0x0
0x3fd PUSH1 0x0
0x3ff REVERT
---
0x3fb: V349 = 0x0
0x3fd: V350 = 0x0
0x3ff: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdd, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, S2, S1, S0]

================================

Block 0x400
[0x400:0x42e]
---
Predecessors: [0x3ca]
Successors: [0x42f, 0x434]
---
0x400 JUMPDEST
0x401 PUSH1 0x0
0x403 DUP1
0x404 SLOAD
0x405 PUSH1 0x40
0x407 MLOAD
0x408 PUSH1 0x1
0x40a PUSH1 0xa0
0x40c PUSH1 0x2
0x40e EXP
0x40f SUB
0x410 SWAP1
0x411 SWAP2
0x412 AND
0x413 SWAP2
0x414 DUP5
0x415 ISZERO
0x416 PUSH2 0x8fc
0x419 MUL
0x41a SWAP2
0x41b DUP6
0x41c SWAP2
0x41d DUP2
0x41e DUP2
0x41f DUP2
0x420 DUP6
0x421 DUP9
0x422 DUP9
0x423 CALL
0x424 SWAP4
0x425 POP
0x426 POP
0x427 POP
0x428 POP
0x429 ISZERO
0x42a ISZERO
0x42b PUSH2 0x434
0x42e JUMPI
---
0x400: JUMPDEST 
0x401: V351 = 0x0
0x404: V352 = S[0x0]
0x405: V353 = 0x40
0x407: V354 = M[0x40]
0x408: V355 = 0x1
0x40a: V356 = 0xa0
0x40c: V357 = 0x2
0x40e: V358 = EXP 0x2 0xa0
0x40f: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x412: V360 = AND V352 0xffffffffffffffffffffffffffffffffffffffff
0x415: V361 = ISZERO S1
0x416: V362 = 0x8fc
0x419: V363 = MUL 0x8fc V361
0x423: V364 = CALL V363 V360 S1 V354 0x0 V354 0x0
0x429: V365 = ISZERO V364
0x42a: V366 = ISZERO V365
0x42b: V367 = 0x434
0x42e: JUMPI 0x434 V366
---
Entry stack: [V12, 0xdd, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xdd, S2, S1, S0]

================================

Block 0x42f
[0x42f:0x433]
---
Predecessors: [0x400]
Successors: []
---
0x42f PUSH1 0x0
0x431 PUSH1 0x0
0x433 REVERT
---
0x42f: V368 = 0x0
0x431: V369 = 0x0
0x433: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdd, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, S2, S1, S0]

================================

Block 0x434
[0x434:0x46f]
---
Predecessors: [0x400]
Successors: [0x470]
---
0x434 JUMPDEST
0x435 PUSH1 0x40
0x437 DUP1
0x438 MLOAD
0x439 DUP5
0x43a DUP2
0x43b MSTORE
0x43c PUSH1 0x20
0x43e DUP2
0x43f ADD
0x440 DUP5
0x441 SWAP1
0x442 MSTORE
0x443 DUP2
0x444 MLOAD
0x445 PUSH32 0xd66662c0ded9e58fd31d5e44944bcfd07ffc15e6927ecc1382e7941cb7bd24c4
0x466 SWAP3
0x467 SWAP2
0x468 DUP2
0x469 SWAP1
0x46a SUB
0x46b SWAP1
0x46c SWAP2
0x46d ADD
0x46e SWAP1
0x46f LOG1
---
0x434: JUMPDEST 
0x435: V370 = 0x40
0x438: V371 = M[0x40]
0x43b: M[V371] = S2
0x43c: V372 = 0x20
0x43f: V373 = ADD V371 0x20
0x442: M[V373] = S1
0x444: V374 = M[0x40]
0x445: V375 = 0xd66662c0ded9e58fd31d5e44944bcfd07ffc15e6927ecc1382e7941cb7bd24c4
0x46a: V376 = SUB V371 V374
0x46d: V377 = ADD 0x40 V376
0x46f: LOG V374 V377 0xd66662c0ded9e58fd31d5e44944bcfd07ffc15e6927ecc1382e7941cb7bd24c4
---
Entry stack: [V12, 0xdd, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xdd, S2, S1, S0]

================================

Block 0x470
[0x470:0x470]
---
Predecessors: [0x35f, 0x3a1, 0x434]
Successors: [0x471]
---
0x470 JUMPDEST
---
0x470: JUMPDEST 
---
Entry stack: [V12, 0xdd, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, S2, S1, S0]

================================

Block 0x471
[0x471:0x471]
---
Predecessors: [0x470]
Successors: [0x472]
---
0x471 JUMPDEST
---
0x471: JUMPDEST 
---
Entry stack: [V12, 0xdd, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, S2, S1, S0]

================================

Block 0x472
[0x472:0x472]
---
Predecessors: [0x471]
Successors: [0x473]
---
0x472 JUMPDEST
---
0x472: JUMPDEST 
---
Entry stack: [V12, 0xdd, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, S2, S1, S0]

================================

Block 0x473
[0x473:0x474]
---
Predecessors: [0x472]
Successors: [0x475]
---
0x473 JUMPDEST
0x474 POP
---
0x473: JUMPDEST 
---
Entry stack: [V12, 0xdd, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xdd, S2, S1]

================================

Block 0x475
[0x475:0x478]
---
Predecessors: [0x473]
Successors: [0xdd]
---
0x475 JUMPDEST
0x476 POP
0x477 POP
0x478 JUMP
---
0x475: JUMPDEST 
0x478: JUMP 0xdd
---
Entry stack: [V12, 0xdd, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x479
[0x479:0x485]
---
Predecessors: [0x137, 0x314, 0x397]
Successors: [0x486, 0x487]
---
0x479 JUMPDEST
0x47a PUSH1 0x0
0x47c DUP2
0x47d PUSH1 0x2
0x47f DUP2
0x480 GT
0x481 ISZERO
0x482 PUSH2 0x487
0x485 JUMPI
---
0x479: JUMPDEST 
0x47a: V378 = 0x0
0x47d: V379 = 0x2
0x480: V380 = GT S0 0x2
0x481: V381 = ISZERO V380
0x482: V382 = 0x487
0x485: JUMPI 0x487 V381
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S2, {0x145, 0x31e, 0x3a1}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V12, 0xdd, 0x0, 0x0, S2, {0x145, 0x31e, 0x3a1}, S0, 0x0, S0]

================================

Block 0x486
[0x486:0x486]
---
Predecessors: [0x479]
Successors: []
---
0x486 INVALID
---
0x486: INVALID 
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S4, {0x145, 0x31e, 0x3a1}, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, 0x0, 0x0, S4, {0x145, 0x31e, 0x3a1}, S2, 0x0, S0]

================================

Block 0x487
[0x487:0x49d]
---
Predecessors: [0x479]
Successors: [0x49e, 0x49f]
---
0x487 JUMPDEST
0x488 PUSH1 0x1
0x48a SLOAD
0x48b PUSH1 0xa0
0x48d PUSH1 0x2
0x48f EXP
0x490 SWAP1
0x491 DIV
0x492 PUSH1 0xff
0x494 AND
0x495 PUSH1 0x2
0x497 DUP2
0x498 GT
0x499 ISZERO
0x49a PUSH2 0x49f
0x49d JUMPI
---
0x487: JUMPDEST 
0x488: V383 = 0x1
0x48a: V384 = S[0x1]
0x48b: V385 = 0xa0
0x48d: V386 = 0x2
0x48f: V387 = EXP 0x2 0xa0
0x491: V388 = DIV V384 0x10000000000000000000000000000000000000000
0x492: V389 = 0xff
0x494: V390 = AND 0xff V388
0x495: V391 = 0x2
0x498: V392 = GT V390 0x2
0x499: V393 = ISZERO V392
0x49a: V394 = 0x49f
0x49d: JUMPI 0x49f V393
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S4, {0x145, 0x31e, 0x3a1}, S2, 0x0, S0]
Stack pops: 0
Stack additions: [V390]
Exit stack: [V12, 0xdd, 0x0, 0x0, S4, {0x145, 0x31e, 0x3a1}, S2, 0x0, S0, V390]

================================

Block 0x49e
[0x49e:0x49e]
---
Predecessors: [0x487]
Successors: []
---
0x49e INVALID
---
0x49e: INVALID 
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S5, {0x145, 0x31e, 0x3a1}, S3, 0x0, S1, V390]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, 0x0, 0x0, S5, {0x145, 0x31e, 0x3a1}, S3, 0x0, S1, V390]

================================

Block 0x49f
[0x49f:0x4a2]
---
Predecessors: [0x487]
Successors: [0x4a3]
---
0x49f JUMPDEST
0x4a0 EQ
0x4a1 SWAP1
0x4a2 POP
---
0x49f: JUMPDEST 
0x4a0: V395 = EQ V390 S1
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S5, {0x145, 0x31e, 0x3a1}, S3, 0x0, S1, V390]
Stack pops: 3
Stack additions: [V395]
Exit stack: [V12, 0xdd, 0x0, 0x0, S5, {0x145, 0x31e, 0x3a1}, S3, V395]

================================

Block 0x4a3
[0x4a3:0x4a7]
---
Predecessors: [0x49f]
Successors: [0x145, 0x31e, 0x3a1]
---
0x4a3 JUMPDEST
0x4a4 SWAP2
0x4a5 SWAP1
0x4a6 POP
0x4a7 JUMP
---
0x4a3: JUMPDEST 
0x4a7: JUMP {0x145, 0x31e, 0x3a1}
---
Entry stack: [V12, 0xdd, 0x0, 0x0, S3, {0x145, 0x31e, 0x3a1}, S1, V395]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0xdd, 0x0, 0x0, S3, V395]

================================

Block 0x4a8
[0x4a8:0x4be]
---
Predecessors: [0x161]
Successors: [0x4bf, 0x4c4]
---
0x4a8 JUMPDEST
0x4a9 PUSH1 0x0
0x4ab SLOAD
0x4ac CALLER
0x4ad PUSH1 0x1
0x4af PUSH1 0xa0
0x4b1 PUSH1 0x2
0x4b3 EXP
0x4b4 SUB
0x4b5 SWAP1
0x4b6 DUP2
0x4b7 AND
0x4b8 SWAP2
0x4b9 AND
0x4ba EQ
0x4bb PUSH2 0x4c4
0x4be JUMPI
---
0x4a8: JUMPDEST 
0x4a9: V396 = 0x0
0x4ab: V397 = S[0x0]
0x4ac: V398 = CALLER
0x4ad: V399 = 0x1
0x4af: V400 = 0xa0
0x4b1: V401 = 0x2
0x4b3: V402 = EXP 0x2 0xa0
0x4b4: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b7: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x4b9: V405 = AND V397 0xffffffffffffffffffffffffffffffffffffffff
0x4ba: V406 = EQ V405 V404
0x4bb: V407 = 0x4c4
0x4be: JUMPI 0x4c4 V406
---
Entry stack: [V12, 0xdd, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V118]

================================

Block 0x4bf
[0x4bf:0x4c3]
---
Predecessors: [0x4a8]
Successors: []
---
0x4bf PUSH1 0x0
0x4c1 PUSH1 0x0
0x4c3 REVERT
---
0x4bf: V408 = 0x0
0x4c1: V409 = 0x0
0x4c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdd, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V118]

================================

Block 0x4c4
[0x4c4:0x527]
---
Predecessors: [0x4a8]
Successors: [0x528]
---
0x4c4 JUMPDEST
0x4c5 PUSH1 0x1
0x4c7 SLOAD
0x4c8 PUSH1 0x40
0x4ca DUP1
0x4cb MLOAD
0x4cc PUSH1 0x1
0x4ce PUSH1 0xa0
0x4d0 PUSH1 0x2
0x4d2 EXP
0x4d3 SUB
0x4d4 SWAP3
0x4d5 DUP4
0x4d6 AND
0x4d7 DUP2
0x4d8 MSTORE
0x4d9 SWAP2
0x4da DUP4
0x4db AND
0x4dc PUSH1 0x20
0x4de DUP4
0x4df ADD
0x4e0 MSTORE
0x4e1 DUP1
0x4e2 MLOAD
0x4e3 PUSH32 0xc204b28865760f18aa0ef147ee25573d2dba9f208385c8aa65fb79150978fb6d
0x504 SWAP3
0x505 DUP2
0x506 SWAP1
0x507 SUB
0x508 SWAP1
0x509 SWAP2
0x50a ADD
0x50b SWAP1
0x50c LOG1
0x50d PUSH1 0x1
0x50f DUP1
0x510 SLOAD
0x511 PUSH1 0x1
0x513 PUSH1 0xa0
0x515 PUSH1 0x2
0x517 EXP
0x518 SUB
0x519 NOT
0x51a AND
0x51b PUSH1 0x1
0x51d PUSH1 0xa0
0x51f PUSH1 0x2
0x521 EXP
0x522 SUB
0x523 DUP4
0x524 AND
0x525 OR
0x526 SWAP1
0x527 SSTORE
---
0x4c4: JUMPDEST 
0x4c5: V410 = 0x1
0x4c7: V411 = S[0x1]
0x4c8: V412 = 0x40
0x4cb: V413 = M[0x40]
0x4cc: V414 = 0x1
0x4ce: V415 = 0xa0
0x4d0: V416 = 0x2
0x4d2: V417 = EXP 0x2 0xa0
0x4d3: V418 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d6: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x4d8: M[V413] = V419
0x4db: V420 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x4dc: V421 = 0x20
0x4df: V422 = ADD V413 0x20
0x4e0: M[V422] = V420
0x4e2: V423 = M[0x40]
0x4e3: V424 = 0xc204b28865760f18aa0ef147ee25573d2dba9f208385c8aa65fb79150978fb6d
0x507: V425 = SUB V413 V423
0x50a: V426 = ADD 0x40 V425
0x50c: LOG V423 V426 0xc204b28865760f18aa0ef147ee25573d2dba9f208385c8aa65fb79150978fb6d
0x50d: V427 = 0x1
0x510: V428 = S[0x1]
0x511: V429 = 0x1
0x513: V430 = 0xa0
0x515: V431 = 0x2
0x517: V432 = EXP 0x2 0xa0
0x518: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x519: V434 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x51a: V435 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V428
0x51b: V436 = 0x1
0x51d: V437 = 0xa0
0x51f: V438 = 0x2
0x521: V439 = EXP 0x2 0xa0
0x522: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x524: V441 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x525: V442 = OR V441 V435
0x527: S[0x1] = V442
---
Entry stack: [V12, 0xdd, V118]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xdd, V118]

================================

Block 0x528
[0x528:0x528]
---
Predecessors: [0x4c4, 0x6d7, 0x76c]
Successors: [0x529]
---
0x528 JUMPDEST
---
0x528: JUMPDEST 
---
Entry stack: [V12, 0xdd, S13, 0x0, S11, S10, {0x0, 0xdd}, S8, S7, S6, S5, S4, S3, S2, {0xdd, 0x715, 0x744}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, S13, 0x0, S11, S10, {0x0, 0xdd}, S8, S7, S6, S5, S4, S3, S2, {0xdd, 0x715, 0x744}, S0]

================================

Block 0x529
[0x529:0x52b]
---
Predecessors: [0x528]
Successors: [0xdd, 0x715, 0x744]
---
0x529 JUMPDEST
0x52a POP
0x52b JUMP
---
0x529: JUMPDEST 
0x52b: JUMP {0xdd, 0x715, 0x744}
---
Entry stack: [V12, 0xdd, S13, 0x0, S11, S10, {0x0, 0xdd}, S8, S7, S6, S5, S4, S3, S2, {0xdd, 0x715, 0x744}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xdd, S13, 0x0, S11, S10, {0x0, 0xdd}, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x52c
[0x52c:0x54c]
---
Predecessors: [0x17f, 0x3a7, 0x5a2]
Successors: [0x720]
---
0x52c JUMPDEST
0x52d PUSH1 0x0
0x52f PUSH2 0x559
0x532 PUSH1 0x64
0x534 PUSH2 0x54d
0x537 PUSH1 0x1
0x539 PUSH1 0xa0
0x53b PUSH1 0x2
0x53d EXP
0x53e SUB
0x53f ADDRESS
0x540 AND
0x541 BALANCE
0x542 DUP5
0x543 PUSH4 0xffffffff
0x548 PUSH2 0x720
0x54b AND
0x54c JUMP
---
0x52c: JUMPDEST 
0x52d: V443 = 0x0
0x52f: V444 = 0x559
0x532: V445 = 0x64
0x534: V446 = 0x54d
0x537: V447 = 0x1
0x539: V448 = 0xa0
0x53b: V449 = 0x2
0x53d: V450 = EXP 0x2 0xa0
0x53e: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53f: V452 = ADDRESS
0x540: V453 = AND V452 0xffffffffffffffffffffffffffffffffffffffff
0x541: V454 = BALANCE V453
0x543: V455 = 0xffffffff
0x548: V456 = 0x720
0x54b: V457 = AND 0x720 0xffffffff
0x54c: JUMP 0x720
---
Entry stack: [V12, 0xdd, S3, 0x0, S1, {0x187, 0x3ae, 0x5aa}]
Stack pops: 0
Stack additions: [0x0, 0x559, 0x64, 0x54d, V454, 0x0]
Exit stack: [V12, 0xdd, S3, 0x0, S1, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, 0x54d, V454, 0x0]

================================

Block 0x54d
[0x54d:0x558]
---
Predecessors: [0x748]
Successors: [0x74f]
---
0x54d JUMPDEST
0x54e SWAP1
0x54f PUSH4 0xffffffff
0x554 PUSH2 0x74f
0x557 AND
0x558 JUMP
---
0x54d: JUMPDEST 
0x54f: V458 = 0xffffffff
0x554: V459 = 0x74f
0x557: V460 = AND 0x74f 0xffffffff
0x558: JUMP 0x74f
---
Entry stack: [V12, 0xdd, S7, 0x0, S5, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, V628]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, 0xdd, S7, 0x0, S5, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, V628, 0x64]

================================

Block 0x559
[0x559:0x55b]
---
Predecessors: [0x765]
Successors: [0x55c]
---
0x559 JUMPDEST
0x55a SWAP1
0x55b POP
---
0x559: JUMPDEST 
---
Entry stack: [V12, 0xdd, S5, 0x0, S3, {0x187, 0x3ae, 0x5aa}, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xdd, S5, 0x0, S3, {0x187, 0x3ae, 0x5aa}, S0]

================================

Block 0x55c
[0x55c:0x55e]
---
Predecessors: [0x559]
Successors: [0x187, 0x3ae, 0x5aa]
---
0x55c JUMPDEST
0x55d SWAP1
0x55e JUMP
---
0x55c: JUMPDEST 
0x55e: JUMP {0x187, 0x3ae, 0x5aa}
---
Entry stack: [V12, 0xdd, S4, 0x0, S2, {0x187, 0x3ae, 0x5aa}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xdd, S4, 0x0, S2, S0]

================================

Block 0x55f
[0x55f:0x56d]
---
Predecessors: [0x1a1]
Successors: [0x101]
---
0x55f JUMPDEST
0x560 PUSH1 0x0
0x562 SLOAD
0x563 PUSH1 0x1
0x565 PUSH1 0xa0
0x567 PUSH1 0x2
0x569 EXP
0x56a SUB
0x56b AND
0x56c DUP2
0x56d JUMP
---
0x55f: JUMPDEST 
0x560: V461 = 0x0
0x562: V462 = S[0x0]
0x563: V463 = 0x1
0x565: V464 = 0xa0
0x567: V465 = 0x2
0x569: V466 = EXP 0x2 0xa0
0x56a: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56b: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x56d: JUMP 0x101
---
Entry stack: [V12, 0x101]
Stack pops: 1
Stack additions: [S0, V468]
Exit stack: [V12, 0x101, V468]

================================

Block 0x56e
[0x56e:0x57d]
---
Predecessors: [0x1cd]
Successors: [0x1d5]
---
0x56e JUMPDEST
0x56f PUSH1 0x1
0x571 SLOAD
0x572 PUSH1 0xa0
0x574 PUSH1 0x2
0x576 EXP
0x577 SWAP1
0x578 DIV
0x579 PUSH1 0xff
0x57b AND
0x57c DUP2
0x57d JUMP
---
0x56e: JUMPDEST 
0x56f: V469 = 0x1
0x571: V470 = S[0x1]
0x572: V471 = 0xa0
0x574: V472 = 0x2
0x576: V473 = EXP 0x2 0xa0
0x578: V474 = DIV V470 0x10000000000000000000000000000000000000000
0x579: V475 = 0xff
0x57b: V476 = AND 0xff V474
0x57d: JUMP 0x1d5
---
Entry stack: [V12, 0x1d5]
Stack pops: 1
Stack additions: [S0, V476]
Exit stack: [V12, 0x1d5, V476]

================================

Block 0x57e
[0x57e:0x582]
---
Predecessors: [0x201]
Successors: [0x187]
---
0x57e JUMPDEST
0x57f PUSH1 0x0
0x581 DUP2
0x582 JUMP
---
0x57e: JUMPDEST 
0x57f: V477 = 0x0
0x582: JUMP 0x187
---
Entry stack: [V12, 0x187]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, 0x187, 0x0]

================================

Block 0x583
[0x583:0x59c]
---
Predecessors: [0x223]
Successors: [0x59d, 0x5a2]
---
0x583 JUMPDEST
0x584 PUSH1 0x0
0x586 DUP1
0x587 SLOAD
0x588 DUP2
0x589 SWAP1
0x58a CALLER
0x58b PUSH1 0x1
0x58d PUSH1 0xa0
0x58f PUSH1 0x2
0x591 EXP
0x592 SUB
0x593 SWAP1
0x594 DUP2
0x595 AND
0x596 SWAP2
0x597 AND
0x598 EQ
0x599 PUSH2 0x5a2
0x59c JUMPI
---
0x583: JUMPDEST 
0x584: V478 = 0x0
0x587: V479 = S[0x0]
0x58a: V480 = CALLER
0x58b: V481 = 0x1
0x58d: V482 = 0xa0
0x58f: V483 = 0x2
0x591: V484 = EXP 0x2 0xa0
0x592: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x595: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x597: V487 = AND V479 0xffffffffffffffffffffffffffffffffffffffff
0x598: V488 = EQ V487 V486
0x599: V489 = 0x5a2
0x59c: JUMPI 0x5a2 V488
---
Entry stack: [V12, 0xdd, V188]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xdd, V188, 0x0, 0x0]

================================

Block 0x59d
[0x59d:0x5a1]
---
Predecessors: [0x583]
Successors: []
---
0x59d PUSH1 0x0
0x59f PUSH1 0x0
0x5a1 REVERT
---
0x59d: V490 = 0x0
0x59f: V491 = 0x0
0x5a1: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdd, V188, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V188, 0x0, 0x0]

================================

Block 0x5a2
[0x5a2:0x5a9]
---
Predecessors: [0x583]
Successors: [0x52c]
---
0x5a2 JUMPDEST
0x5a3 PUSH2 0x5aa
0x5a6 PUSH2 0x52c
0x5a9 JUMP
---
0x5a2: JUMPDEST 
0x5a3: V492 = 0x5aa
0x5a6: V493 = 0x52c
0x5a9: JUMP 0x52c
---
Entry stack: [V12, 0xdd, V188, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x5aa]
Exit stack: [V12, 0xdd, V188, 0x0, 0x0, 0x5aa]

================================

Block 0x5aa
[0x5aa:0x5c5]
---
Predecessors: [0x55c]
Successors: [0x707]
---
0x5aa JUMPDEST
0x5ab SWAP2
0x5ac POP
0x5ad PUSH2 0x5c6
0x5b0 PUSH1 0x1
0x5b2 PUSH1 0xa0
0x5b4 PUSH1 0x2
0x5b6 EXP
0x5b7 SUB
0x5b8 ADDRESS
0x5b9 AND
0x5ba BALANCE
0x5bb DUP4
0x5bc PUSH4 0xffffffff
0x5c1 PUSH2 0x707
0x5c4 AND
0x5c5 JUMP
---
0x5aa: JUMPDEST 
0x5ad: V494 = 0x5c6
0x5b0: V495 = 0x1
0x5b2: V496 = 0xa0
0x5b4: V497 = 0x2
0x5b6: V498 = EXP 0x2 0xa0
0x5b7: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b8: V500 = ADDRESS
0x5b9: V501 = AND V500 0xffffffffffffffffffffffffffffffffffffffff
0x5ba: V502 = BALANCE V501
0x5bc: V503 = 0xffffffff
0x5c1: V504 = 0x707
0x5c4: V505 = AND 0x707 0xffffffff
0x5c5: JUMP 0x707
---
Entry stack: [V12, 0xdd, S3, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x5c6, V502, S0]
Exit stack: [V12, 0xdd, S3, S0, S1, 0x5c6, V502, S0]

================================

Block 0x5c6
[0x5c6:0x615]
---
Predecessors: [0x71a]
Successors: [0x616, 0x617]
---
0x5c6 JUMPDEST
0x5c7 PUSH1 0x1
0x5c9 SLOAD
0x5ca PUSH1 0x40
0x5cc DUP1
0x5cd MLOAD
0x5ce PUSH1 0xe1
0x5d0 PUSH1 0x2
0x5d2 EXP
0x5d3 PUSH4 0x676ddf77
0x5d8 MUL
0x5d9 DUP2
0x5da MSTORE
0x5db PUSH1 0x1
0x5dd PUSH1 0xa0
0x5df PUSH1 0x2
0x5e1 EXP
0x5e2 SUB
0x5e3 SWAP3
0x5e4 DUP4
0x5e5 AND
0x5e6 PUSH1 0x4
0x5e8 DUP3
0x5e9 ADD
0x5ea MSTORE
0x5eb SWAP1
0x5ec MLOAD
0x5ed SWAP3
0x5ee SWAP4
0x5ef POP
0x5f0 SWAP1
0x5f1 DUP6
0x5f2 AND
0x5f3 SWAP2
0x5f4 PUSH4 0xcedbbeee
0x5f9 SWAP2
0x5fa DUP5
0x5fb SWAP2
0x5fc PUSH1 0x24
0x5fe DUP1
0x5ff DUP4
0x600 ADD
0x601 SWAP3
0x602 PUSH1 0x0
0x604 SWAP3
0x605 SWAP2
0x606 SWAP1
0x607 DUP3
0x608 SWAP1
0x609 SUB
0x60a ADD
0x60b DUP2
0x60c DUP6
0x60d DUP9
0x60e DUP1
0x60f EXTCODESIZE
0x610 ISZERO
0x611 ISZERO
0x612 PUSH2 0x617
0x615 JUMPI
---
0x5c6: JUMPDEST 
0x5c7: V506 = 0x1
0x5c9: V507 = S[0x1]
0x5ca: V508 = 0x40
0x5cd: V509 = M[0x40]
0x5ce: V510 = 0xe1
0x5d0: V511 = 0x2
0x5d2: V512 = EXP 0x2 0xe1
0x5d3: V513 = 0x676ddf77
0x5d8: V514 = MUL 0x676ddf77 0x200000000000000000000000000000000000000000000000000000000
0x5da: M[V509] = 0xcedbbeee00000000000000000000000000000000000000000000000000000000
0x5db: V515 = 0x1
0x5dd: V516 = 0xa0
0x5df: V517 = 0x2
0x5e1: V518 = EXP 0x2 0xa0
0x5e2: V519 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e5: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x5e6: V521 = 0x4
0x5e9: V522 = ADD V509 0x4
0x5ea: M[V522] = V520
0x5ec: V523 = M[0x40]
0x5f2: V524 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x5f4: V525 = 0xcedbbeee
0x5fc: V526 = 0x24
0x600: V527 = ADD V509 0x24
0x602: V528 = 0x0
0x609: V529 = SUB V509 V523
0x60a: V530 = ADD V529 0x24
0x60f: V531 = EXTCODESIZE V524
0x610: V532 = ISZERO V531
0x611: V533 = ISZERO V532
0x612: V534 = 0x617
0x615: JUMPI 0x617 V533
---
Entry stack: [V12, 0xdd, V188, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S0, V524, 0xcedbbeee, S0, V527, 0x0, V523, V530, V523, S0, V524]
Exit stack: [V12, 0xdd, V188, S2, S0, V524, 0xcedbbeee, S0, V527, 0x0, V523, V530, V523, S0, V524]

================================

Block 0x616
[0x616:0x616]
---
Predecessors: [0x5c6]
Successors: []
---
0x616 INVALID
---
0x616: INVALID 
---
Entry stack: [V12, 0xdd, V188, S11, S10, V524, 0xcedbbeee, S7, V527, 0x0, V523, V530, V523, S1, V524]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V188, S11, S10, V524, 0xcedbbeee, S7, V527, 0x0, V523, V530, V523, S1, V524]

================================

Block 0x617
[0x617:0x623]
---
Predecessors: [0x5c6]
Successors: [0x624, 0x625]
---
0x617 JUMPDEST
0x618 PUSH2 0x25ee
0x61b GAS
0x61c SUB
0x61d CALL
0x61e ISZERO
0x61f ISZERO
0x620 PUSH2 0x625
0x623 JUMPI
---
0x617: JUMPDEST 
0x618: V535 = 0x25ee
0x61b: V536 = GAS
0x61c: V537 = SUB V536 0x25ee
0x61d: V538 = CALL V537 V524 S1 V523 V530 V523 0x0
0x61e: V539 = ISZERO V538
0x61f: V540 = ISZERO V539
0x620: V541 = 0x625
0x623: JUMPI 0x625 V540
---
Entry stack: [V12, 0xdd, V188, S11, S10, V524, 0xcedbbeee, S7, V527, 0x0, V523, V530, V523, S1, V524]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xdd, V188, S11, S10, V524, 0xcedbbeee, S7, V527]

================================

Block 0x624
[0x624:0x624]
---
Predecessors: [0x617]
Successors: []
---
0x624 INVALID
---
0x624: INVALID 
---
Entry stack: [V12, 0xdd, V188, S5, S4, V524, 0xcedbbeee, S1, V527]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V188, S5, S4, V524, 0xcedbbeee, S1, V527]

================================

Block 0x625
[0x625:0x657]
---
Predecessors: [0x617]
Successors: [0x658, 0x65d]
---
0x625 JUMPDEST
0x626 POP
0x627 POP
0x628 PUSH1 0x0
0x62a DUP1
0x62b SLOAD
0x62c PUSH1 0x40
0x62e MLOAD
0x62f PUSH1 0x1
0x631 PUSH1 0xa0
0x633 PUSH1 0x2
0x635 EXP
0x636 SUB
0x637 SWAP1
0x638 SWAP2
0x639 AND
0x63a SWAP4
0x63b POP
0x63c DUP6
0x63d ISZERO
0x63e PUSH2 0x8fc
0x641 MUL
0x642 SWAP3
0x643 POP
0x644 DUP6
0x645 SWAP2
0x646 DUP2
0x647 DUP2
0x648 DUP2
0x649 DUP6
0x64a DUP9
0x64b DUP9
0x64c CALL
0x64d SWAP4
0x64e POP
0x64f POP
0x650 POP
0x651 POP
0x652 ISZERO
0x653 ISZERO
0x654 PUSH2 0x65d
0x657 JUMPI
---
0x625: JUMPDEST 
0x628: V542 = 0x0
0x62b: V543 = S[0x0]
0x62c: V544 = 0x40
0x62e: V545 = M[0x40]
0x62f: V546 = 0x1
0x631: V547 = 0xa0
0x633: V548 = 0x2
0x635: V549 = EXP 0x2 0xa0
0x636: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x639: V551 = AND V543 0xffffffffffffffffffffffffffffffffffffffff
0x63d: V552 = ISZERO S5
0x63e: V553 = 0x8fc
0x641: V554 = MUL 0x8fc V552
0x64c: V555 = CALL V554 V551 S5 V545 0x0 V545 0x0
0x652: V556 = ISZERO V555
0x653: V557 = ISZERO V556
0x654: V558 = 0x65d
0x657: JUMPI 0x65d V557
---
Entry stack: [V12, 0xdd, V188, S5, S4, V524, 0xcedbbeee, S1, V527]
Stack pops: 6
Stack additions: [S5, S4]
Exit stack: [V12, 0xdd, V188, S5, S4]

================================

Block 0x658
[0x658:0x65c]
---
Predecessors: [0x625]
Successors: []
---
0x658 PUSH1 0x0
0x65a PUSH1 0x0
0x65c REVERT
---
0x658: V559 = 0x0
0x65a: V560 = 0x0
0x65c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdd, V188, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V188, S1, S0]

================================

Block 0x65d
[0x65d:0x673]
---
Predecessors: [0x625]
Successors: [0x674]
---
0x65d JUMPDEST
0x65e PUSH1 0x1
0x660 DUP1
0x661 SLOAD
0x662 DUP2
0x663 SWAP1
0x664 PUSH1 0xa0
0x666 PUSH1 0x2
0x668 EXP
0x669 PUSH1 0xff
0x66b MUL
0x66c NOT
0x66d AND
0x66e PUSH1 0xa0
0x670 PUSH1 0x2
0x672 EXP
0x673 DUP3
---
0x65d: JUMPDEST 
0x65e: V561 = 0x1
0x661: V562 = S[0x1]
0x664: V563 = 0xa0
0x666: V564 = 0x2
0x668: V565 = EXP 0x2 0xa0
0x669: V566 = 0xff
0x66b: V567 = MUL 0xff 0x10000000000000000000000000000000000000000
0x66c: V568 = NOT 0xff0000000000000000000000000000000000000000
0x66d: V569 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V562
0x66e: V570 = 0xa0
0x670: V571 = 0x2
0x672: V572 = EXP 0x2 0xa0
---
Entry stack: [V12, 0xdd, V188, S1, S0]
Stack pops: 0
Stack additions: [0x1, 0x1, V569, 0x10000000000000000000000000000000000000000, 0x1]
Exit stack: [V12, 0xdd, V188, S1, S0, 0x1, 0x1, V569, 0x10000000000000000000000000000000000000000, 0x1]

================================

Block 0x674
[0x674:0x6b4]
---
Predecessors: [0x65d]
Successors: [0x6b5]
---
0x674 JUMPDEST
0x675 MUL
0x676 OR
0x677 SWAP1
0x678 SSTORE
0x679 POP
0x67a PUSH1 0x40
0x67c DUP1
0x67d MLOAD
0x67e DUP3
0x67f DUP2
0x680 MSTORE
0x681 PUSH1 0x20
0x683 DUP2
0x684 ADD
0x685 DUP5
0x686 SWAP1
0x687 MSTORE
0x688 DUP2
0x689 MLOAD
0x68a PUSH32 0x49b5d93faf7f89cd3f6c0c1147af3cd01eeababb74d077588563eb980aa1fd0b
0x6ab SWAP3
0x6ac SWAP2
0x6ad DUP2
0x6ae SWAP1
0x6af SUB
0x6b0 SWAP1
0x6b1 SWAP2
0x6b2 ADD
0x6b3 SWAP1
0x6b4 LOG1
---
0x674: JUMPDEST 
0x675: V573 = MUL 0x1 0x10000000000000000000000000000000000000000
0x676: V574 = OR 0x10000000000000000000000000000000000000000 V569
0x678: S[0x1] = V574
0x67a: V575 = 0x40
0x67d: V576 = M[0x40]
0x680: M[V576] = S5
0x681: V577 = 0x20
0x684: V578 = ADD V576 0x20
0x687: M[V578] = S6
0x689: V579 = M[0x40]
0x68a: V580 = 0x49b5d93faf7f89cd3f6c0c1147af3cd01eeababb74d077588563eb980aa1fd0b
0x6af: V581 = SUB V576 V579
0x6b2: V582 = ADD 0x40 V581
0x6b4: LOG V579 V582 0x49b5d93faf7f89cd3f6c0c1147af3cd01eeababb74d077588563eb980aa1fd0b
---
Entry stack: [V12, 0xdd, V188, S6, S5, 0x1, 0x1, V569, 0x10000000000000000000000000000000000000000, 0x1]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0xdd, V188, S6, S5]

================================

Block 0x6b5
[0x6b5:0x6b5]
---
Predecessors: [0x674]
Successors: [0x6b6]
---
0x6b5 JUMPDEST
---
0x6b5: JUMPDEST 
---
Entry stack: [V12, 0xdd, V188, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V188, S1, S0]

================================

Block 0x6b6
[0x6b6:0x6ba]
---
Predecessors: [0x6b5]
Successors: [0xdd]
---
0x6b6 JUMPDEST
0x6b7 POP
0x6b8 POP
0x6b9 POP
0x6ba JUMP
---
0x6b6: JUMPDEST 
0x6ba: JUMP 0xdd
---
Entry stack: [V12, 0xdd, V188, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x6bb
[0x6bb:0x6d1]
---
Predecessors: [0x241]
Successors: [0x6d2, 0x6d7]
---
0x6bb JUMPDEST
0x6bc PUSH1 0x0
0x6be SLOAD
0x6bf CALLER
0x6c0 PUSH1 0x1
0x6c2 PUSH1 0xa0
0x6c4 PUSH1 0x2
0x6c6 EXP
0x6c7 SUB
0x6c8 SWAP1
0x6c9 DUP2
0x6ca AND
0x6cb SWAP2
0x6cc AND
0x6cd EQ
0x6ce PUSH2 0x6d7
0x6d1 JUMPI
---
0x6bb: JUMPDEST 
0x6bc: V583 = 0x0
0x6be: V584 = S[0x0]
0x6bf: V585 = CALLER
0x6c0: V586 = 0x1
0x6c2: V587 = 0xa0
0x6c4: V588 = 0x2
0x6c6: V589 = EXP 0x2 0xa0
0x6c7: V590 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ca: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x6cc: V592 = AND V584 0xffffffffffffffffffffffffffffffffffffffff
0x6cd: V593 = EQ V592 V591
0x6ce: V594 = 0x6d7
0x6d1: JUMPI 0x6d7 V593
---
Entry stack: [V12, 0xdd, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V201]

================================

Block 0x6d2
[0x6d2:0x6d6]
---
Predecessors: [0x6bb]
Successors: []
---
0x6d2 PUSH1 0x0
0x6d4 PUSH1 0x0
0x6d6 REVERT
---
0x6d2: V595 = 0x0
0x6d4: V596 = 0x0
0x6d6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdd, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V201]

================================

Block 0x6d7
[0x6d7:0x6e6]
---
Predecessors: [0x6bb]
Successors: [0x528, 0x6e7]
---
0x6d7 JUMPDEST
0x6d8 PUSH1 0x1
0x6da PUSH1 0xa0
0x6dc PUSH1 0x2
0x6de EXP
0x6df SUB
0x6e0 DUP2
0x6e1 AND
0x6e2 ISZERO
0x6e3 PUSH2 0x528
0x6e6 JUMPI
---
0x6d7: JUMPDEST 
0x6d8: V597 = 0x1
0x6da: V598 = 0xa0
0x6dc: V599 = 0x2
0x6de: V600 = EXP 0x2 0xa0
0x6df: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e1: V602 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x6e2: V603 = ISZERO V602
0x6e3: V604 = 0x528
0x6e6: JUMPI 0x528 V603
---
Entry stack: [V12, 0xdd, V201]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xdd, V201]

================================

Block 0x6e7
[0x6e7:0x701]
---
Predecessors: [0x6d7]
Successors: [0x702]
---
0x6e7 PUSH1 0x0
0x6e9 DUP1
0x6ea SLOAD
0x6eb PUSH1 0x1
0x6ed PUSH1 0xa0
0x6ef PUSH1 0x2
0x6f1 EXP
0x6f2 SUB
0x6f3 NOT
0x6f4 AND
0x6f5 PUSH1 0x1
0x6f7 PUSH1 0xa0
0x6f9 PUSH1 0x2
0x6fb EXP
0x6fc SUB
0x6fd DUP4
0x6fe AND
0x6ff OR
0x700 SWAP1
0x701 SSTORE
---
0x6e7: V605 = 0x0
0x6ea: V606 = S[0x0]
0x6eb: V607 = 0x1
0x6ed: V608 = 0xa0
0x6ef: V609 = 0x2
0x6f1: V610 = EXP 0x2 0xa0
0x6f2: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f3: V612 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6f4: V613 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V606
0x6f5: V614 = 0x1
0x6f7: V615 = 0xa0
0x6f9: V616 = 0x2
0x6fb: V617 = EXP 0x2 0xa0
0x6fc: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fe: V619 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x6ff: V620 = OR V619 V613
0x701: S[0x0] = V620
---
Entry stack: [V12, 0xdd, V201]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xdd, V201]

================================

Block 0x702
[0x702:0x702]
---
Predecessors: [0x6e7]
Successors: [0x703]
---
0x702 JUMPDEST
---
0x702: JUMPDEST 
---
Entry stack: [V12, 0xdd, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V201]

================================

Block 0x703
[0x703:0x703]
---
Predecessors: [0x702]
Successors: [0x704]
---
0x703 JUMPDEST
---
0x703: JUMPDEST 
---
Entry stack: [V12, 0xdd, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, V201]

================================

Block 0x704
[0x704:0x706]
---
Predecessors: [0x703]
Successors: [0xdd]
---
0x704 JUMPDEST
0x705 POP
0x706 JUMP
---
0x704: JUMPDEST 
0x706: JUMP 0xdd
---
Entry stack: [V12, 0xdd, V201]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x707
[0x707:0x714]
---
Predecessors: [0x3ae, 0x5aa]
Successors: [0x76c]
---
0x707 JUMPDEST
0x708 PUSH1 0x0
0x70a PUSH2 0x715
0x70d DUP4
0x70e DUP4
0x70f GT
0x710 ISZERO
0x711 PUSH2 0x76c
0x714 JUMP
---
0x707: JUMPDEST 
0x708: V621 = 0x0
0x70a: V622 = 0x715
0x70f: V623 = GT S0 S1
0x710: V624 = ISZERO V623
0x711: V625 = 0x76c
0x714: JUMP 0x76c
---
Entry stack: [V12, 0xdd, S5, S4, S3, {0x3ca, 0x5c6}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x715, V624]
Exit stack: [V12, 0xdd, S5, S4, S3, {0x3ca, 0x5c6}, S1, S0, 0x0, 0x715, V624]

================================

Block 0x715
[0x715:0x719]
---
Predecessors: [0x529]
Successors: [0x71a]
---
0x715 JUMPDEST
0x716 POP
0x717 DUP1
0x718 DUP3
0x719 SUB
---
0x715: JUMPDEST 
0x719: V626 = SUB S2 S1
---
Entry stack: [V12, 0xdd, S11, 0x0, S9, S8, {0x0, 0xdd}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V626]
Exit stack: [V12, 0xdd, S11, 0x0, S9, S8, {0x0, 0xdd}, S6, S5, S4, S3, S2, S1, V626]

================================

Block 0x71a
[0x71a:0x71f]
---
Predecessors: [0x715]
Successors: [0x3ca, 0x5c6]
---
0x71a JUMPDEST
0x71b SWAP3
0x71c SWAP2
0x71d POP
0x71e POP
0x71f JUMP
---
0x71a: JUMPDEST 
0x71f: JUMP S3
---
Entry stack: [V12, 0xdd, S11, 0x0, S9, S8, {0x0, 0xdd}, S6, S5, S4, S3, S2, S1, V626]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0xdd, S11, 0x0, S9, S8, {0x0, 0xdd}, S6, S5, S4, V626]

================================

Block 0x720
[0x720:0x72f]
---
Predecessors: [0x52c]
Successors: [0x730, 0x73f]
---
0x720 JUMPDEST
0x721 PUSH1 0x0
0x723 DUP3
0x724 DUP3
0x725 MUL
0x726 PUSH2 0x744
0x729 DUP5
0x72a ISZERO
0x72b DUP1
0x72c PUSH2 0x73f
0x72f JUMPI
---
0x720: JUMPDEST 
0x721: V627 = 0x0
0x725: V628 = MUL 0x0 V454
0x726: V629 = 0x744
0x72a: V630 = ISZERO V454
0x72c: V631 = 0x73f
0x72f: JUMPI 0x73f V630
---
Entry stack: [V12, 0xdd, S9, 0x0, S7, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, 0x54d, V454, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V628, 0x744, V630]
Exit stack: [V12, 0xdd, S9, 0x0, S7, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, 0x54d, V454, 0x0, 0x0, V628, 0x744, V630]

================================

Block 0x730
[0x730:0x73a]
---
Predecessors: [0x720]
Successors: [0x73b, 0x73c]
---
0x730 POP
0x731 DUP4
0x732 DUP6
0x733 DUP4
0x734 DUP2
0x735 ISZERO
0x736 ISZERO
0x737 PUSH2 0x73c
0x73a JUMPI
---
0x735: V632 = ISZERO V454
0x736: V633 = ISZERO V632
0x737: V634 = 0x73c
0x73a: JUMPI 0x73c V633
---
Entry stack: [V12, 0xdd, S13, 0x0, S11, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, 0x54d, V454, 0x0, 0x0, V628, 0x744, V630]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S4, S5, S2]
Exit stack: [V12, 0xdd, S13, 0x0, S11, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, 0x54d, V454, 0x0, 0x0, V628, 0x744, 0x0, V454, V628]

================================

Block 0x73b
[0x73b:0x73b]
---
Predecessors: [0x730]
Successors: []
---
0x73b INVALID
---
0x73b: INVALID 
---
Entry stack: [V12, 0xdd, S15, 0x0, S13, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, 0x54d, V454, 0x0, 0x0, V628, 0x744, 0x0, V454, V628]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, S15, 0x0, S13, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, 0x54d, V454, 0x0, 0x0, V628, 0x744, 0x0, V454, V628]

================================

Block 0x73c
[0x73c:0x73e]
---
Predecessors: [0x730]
Successors: [0x73f]
---
0x73c JUMPDEST
0x73d DIV
0x73e EQ
---
0x73c: JUMPDEST 
0x73d: V635 = DIV V628 V454
0x73e: V636 = EQ V635 0x0
---
Entry stack: [V12, 0xdd, S15, 0x0, S13, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, 0x54d, V454, 0x0, 0x0, V628, 0x744, 0x0, V454, V628]
Stack pops: 3
Stack additions: [V636]
Exit stack: [V12, 0xdd, S15, 0x0, S13, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, 0x54d, V454, 0x0, 0x0, V628, 0x744, V636]

================================

Block 0x73f
[0x73f:0x743]
---
Predecessors: [0x720, 0x73c]
Successors: [0x76c]
---
0x73f JUMPDEST
0x740 PUSH2 0x76c
0x743 JUMP
---
0x73f: JUMPDEST 
0x740: V637 = 0x76c
0x743: JUMP 0x76c
---
Entry stack: [V12, 0xdd, S13, 0x0, S11, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, 0x54d, V454, 0x0, 0x0, V628, 0x744, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, S13, 0x0, S11, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, 0x64, 0x54d, V454, 0x0, 0x0, V628, 0x744, S0]

================================

Block 0x744
[0x744:0x747]
---
Predecessors: [0x529]
Successors: [0x748]
---
0x744 JUMPDEST
0x745 DUP1
0x746 SWAP2
0x747 POP
---
0x744: JUMPDEST 
---
Entry stack: [V12, 0xdd, S11, 0x0, S9, S8, {0x0, 0xdd}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0xdd, S11, 0x0, S9, S8, {0x0, 0xdd}, S6, S5, S4, S3, S2, S0, S0]

================================

Block 0x748
[0x748:0x74e]
---
Predecessors: [0x744]
Successors: [0x54d]
---
0x748 JUMPDEST
0x749 POP
0x74a SWAP3
0x74b SWAP2
0x74c POP
0x74d POP
0x74e JUMP
---
0x748: JUMPDEST 
0x74e: JUMP S4
---
Entry stack: [V12, 0xdd, S11, 0x0, S9, S8, {0x0, 0xdd}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0xdd, S11, 0x0, S9, S8, {0x0, 0xdd}, S6, S5, S1]

================================

Block 0x74f
[0x74f:0x75c]
---
Predecessors: [0x54d]
Successors: [0x75d, 0x75e]
---
0x74f JUMPDEST
0x750 PUSH1 0x0
0x752 PUSH1 0x0
0x754 DUP3
0x755 DUP5
0x756 DUP2
0x757 ISZERO
0x758 ISZERO
0x759 PUSH2 0x75e
0x75c JUMPI
---
0x74f: JUMPDEST 
0x750: V638 = 0x0
0x752: V639 = 0x0
0x757: V640 = ISZERO 0x64
0x758: V641 = ISZERO 0x0
0x759: V642 = 0x75e
0x75c: JUMPI 0x75e 0x1
---
Entry stack: [V12, 0xdd, S7, 0x0, S5, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, V628, 0x64]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V12, 0xdd, S7, 0x0, S5, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, V628, 0x64, 0x0, 0x0, 0x64, V628]

================================

Block 0x75d
[0x75d:0x75d]
---
Predecessors: [0x74f]
Successors: []
---
0x75d INVALID
---
0x75d: INVALID 
---
Entry stack: [V12, 0xdd, S11, 0x0, S9, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, V628, 0x64, 0x0, 0x0, 0x64, V628]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, S11, 0x0, S9, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, V628, 0x64, 0x0, 0x0, 0x64, V628]

================================

Block 0x75e
[0x75e:0x764]
---
Predecessors: [0x74f]
Successors: [0x765]
---
0x75e JUMPDEST
0x75f DIV
0x760 SWAP1
0x761 POP
0x762 DUP1
0x763 SWAP2
0x764 POP
---
0x75e: JUMPDEST 
0x75f: V643 = DIV V628 0x64
---
Entry stack: [V12, 0xdd, S11, 0x0, S9, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, V628, 0x64, 0x0, 0x0, 0x64, V628]
Stack pops: 4
Stack additions: [V643, V643]
Exit stack: [V12, 0xdd, S11, 0x0, S9, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, V628, 0x64, V643, V643]

================================

Block 0x765
[0x765:0x76b]
---
Predecessors: [0x75e]
Successors: [0x559]
---
0x765 JUMPDEST
0x766 POP
0x767 SWAP3
0x768 SWAP2
0x769 POP
0x76a POP
0x76b JUMP
---
0x765: JUMPDEST 
0x76b: JUMP 0x559
---
Entry stack: [V12, 0xdd, S9, 0x0, S7, {0x187, 0x3ae, 0x5aa}, 0x0, 0x559, V628, 0x64, V643, V643]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0xdd, S9, 0x0, S7, {0x187, 0x3ae, 0x5aa}, 0x0, V643]

================================

Block 0x76c
[0x76c:0x773]
---
Predecessors: [0x707, 0x73f]
Successors: [0x528, 0x774]
---
0x76c JUMPDEST
0x76d DUP1
0x76e ISZERO
0x76f ISZERO
0x770 PUSH2 0x528
0x773 JUMPI
---
0x76c: JUMPDEST 
0x76e: V644 = ISZERO S0
0x76f: V645 = ISZERO V644
0x770: V646 = 0x528
0x773: JUMPI 0x528 V645
---
Entry stack: [V12, 0xdd, S13, 0x0, S11, S10, {0x0, 0xdd}, S8, S7, S6, S5, S4, S3, S2, {0x715, 0x744}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xdd, S13, 0x0, S11, S10, {0x0, 0xdd}, S8, S7, S6, S5, S4, S3, S2, {0x715, 0x744}, S0]

================================

Block 0x774
[0x774:0x778]
---
Predecessors: [0x76c]
Successors: []
---
0x774 PUSH1 0x0
0x776 PUSH1 0x0
0x778 REVERT
---
0x774: V647 = 0x0
0x776: V648 = 0x0
0x778: REVERT 0x0 0x0
---
Entry stack: [V12, 0xdd, S13, 0x0, S11, S10, {0x0, 0xdd}, S8, S7, S6, S5, S4, S3, S2, {0x715, 0x744}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xdd, S13, 0x0, S11, S10, {0x0, 0xdd}, S8, S7, S6, S5, S4, S3, S2, {0x715, 0x744}, S0]

================================

Block 0x779
[0x779:0x779]
---
Predecessors: []
Successors: [0x77a]
---
0x779 JUMPDEST
---
0x779: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x77a
[0x77a:0x7a8]
---
Predecessors: [0x779]
Successors: []
---
0x77a JUMPDEST
0x77b POP
0x77c JUMP
0x77d STOP
0x77e LOG1
0x77f PUSH6 0x627a7a723058
0x786 SHA3
0x787 ORIGIN
0x788 PUSH6 0x1d73bf0ee992
0x78f SWAP12
0x790 MISSING 0xeb
0x791 MISSING 0xc
0x792 MISSING 0xcf
0x793 CODESIZE
0x794 MISSING 0xbc
0x795 MISSING 0xda
0x796 PUSH11 0x58d7b665eb2cc7c965977d
0x7a2 MISSING 0xbb
0x7a3 RETURNDATASIZE
0x7a4 MISSING 0xfb
0x7a5 RETURNDATASIZE
0x7a6 XOR
0x7a7 STOP
0x7a8 MISSING 0x29
---
0x77a: JUMPDEST 
0x77c: JUMP S1
0x77d: STOP 
0x77e: LOG S0 S1 S2
0x77f: V649 = 0x627a7a723058
0x786: V650 = SHA3 0x627a7a723058 S3
0x787: V651 = ORIGIN
0x788: V652 = 0x1d73bf0ee992
0x790: MISSING 0xeb
0x791: MISSING 0xc
0x792: MISSING 0xcf
0x793: V653 = CODESIZE
0x794: MISSING 0xbc
0x795: MISSING 0xda
0x796: V654 = 0x58d7b665eb2cc7c965977d
0x7a2: MISSING 0xbb
0x7a3: V655 = RETURNDATASIZE
0x7a4: MISSING 0xfb
0x7a5: V656 = RETURNDATASIZE
0x7a6: V657 = XOR V656 S0
0x7a7: STOP 
0x7a8: MISSING 0x29
---
Entry stack: []
Stack pops: 681
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x146901db
Entry block: 0xdf
Exit block: 0xdd
Body: 0xdd, 0xdf, 0xe6, 0xe7, 0x257, 0x26e, 0x273, 0x28c, 0x2bb, 0x2bc

Function 1:
Public function signature: 0x1e0018d6
Entry block: 0xf1
Exit block: 0x101
Body: 0xf1, 0xf8, 0xf9, 0x101, 0x2be

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x11d
Exit block: 0xdd
Body: 0xdd, 0x11d, 0x124, 0x125, 0x2cd, 0x2e7, 0x2ec, 0x2f0, 0x307, 0x308, 0x30f, 0x314, 0x31e, 0x324, 0x35a, 0x35f, 0x397, 0x3a1, 0x3a7, 0x3ae, 0x470, 0x471, 0x472, 0x473, 0x475, 0x774

Function 3:
Public function signature: 0x64ae4451
Entry block: 0x12f
Exit block: 0x145
Body: 0x12f, 0x136, 0x137, 0x145

Function 4:
Public function signature: 0x773041ce
Entry block: 0x159
Exit block: 0x774
Body: 0x159, 0x160, 0x161, 0x4a8, 0x4bf, 0x4c4, 0x774

Function 5:
Public function signature: 0x8abdf5aa
Entry block: 0x177
Exit block: 0x17e
Body: 0x177, 0x17e, 0x17f, 0x187

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x199
Exit block: 0x101
Body: 0x101, 0x199, 0x1a0, 0x1a1, 0x55f

Function 7:
Public function signature: 0xc19d93fb
Entry block: 0x1c5
Exit block: 0x1e4
Body: 0x1c5, 0x1cc, 0x1cd, 0x1d5, 0x1e4, 0x1e5, 0x56e

Function 8:
Public function signature: 0xeaf98d23
Entry block: 0x1f9
Exit block: 0x187
Body: 0x187, 0x1f9, 0x200, 0x201, 0x57e

Function 9:
Public function signature: 0xec8ac4d8
Entry block: 0x21b
Exit block: 0x774
Body: 0x21b, 0x222, 0x223, 0x583, 0x59d, 0x5a2, 0x5aa, 0x774

Function 10:
Public function signature: 0xf2fde38b
Entry block: 0x239
Exit block: 0xdd
Body: 0xdd, 0x239, 0x240, 0x241, 0x6bb, 0x6d2, 0x6d7, 0x6e7, 0x702, 0x703, 0x704, 0x774

Function 11:
Public fallback function
Entry block: 0x93
Exit block: 0xdd
Body: 0x93, 0x97, 0xdb, 0xdd

Function 12:
Private function
Entry block: 0x707
Exit block: 0x71a
Body: 0x3ae, 0x3ca, 0x528, 0x529, 0x54d, 0x559, 0x55c, 0x5aa, 0x5c6, 0x707, 0x715, 0x71a, 0x744, 0x748, 0x74f, 0x75e, 0x765, 0x76c

Function 13:
Private function
Entry block: 0x479
Exit block: 0x4a3
Body: 0x479, 0x487, 0x49f, 0x4a3

Function 14:
Private function
Entry block: 0x52c
Exit block: 0x55c
Body: 0x528, 0x529, 0x52c, 0x54d, 0x559, 0x55c, 0x720, 0x730, 0x73c, 0x73f, 0x744, 0x748, 0x74f, 0x75e, 0x765, 0x76c

