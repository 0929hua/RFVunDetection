Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x67
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x67
0xa: JUMPI 0x67 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x7f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xa19b14a
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x7f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xa19b14a
0x20: V14 = EQ V12 0xa19b14a
0x21: V15 = 0x7f
0x24: JUMPI 0x7f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xce]
---
0x25 DUP1
0x26 PUSH4 0x2cf2c0af
0x2b EQ
0x2c PUSH2 0xce
0x2f JUMPI
---
0x26: V16 = 0x2cf2c0af
0x2b: V17 = EQ 0x2cf2c0af V12
0x2c: V18 = 0xce
0x2f: JUMPI 0xce V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xe6]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0xe6
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0xe6
0x3a: JUMPI 0xe6 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xfe]
---
0x3b DUP1
0x3c PUSH4 0x43d726d6
0x41 EQ
0x42 PUSH2 0xfe
0x45 JUMPI
---
0x3c: V22 = 0x43d726d6
0x41: V23 = EQ 0x43d726d6 V12
0x42: V24 = 0xfe
0x45: JUMPI 0xfe V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x113]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x113
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x113
0x50: JUMPI 0x113 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x142]
---
0x51 DUP1
0x52 PUSH4 0xd0e30db0
0x57 EQ
0x58 PUSH2 0x142
0x5b JUMPI
---
0x52: V28 = 0xd0e30db0
0x57: V29 = EQ 0xd0e30db0 V12
0x58: V30 = 0x142
0x5b: JUMPI 0x142 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x14c]
---
0x5c DUP1
0x5d PUSH4 0xf1b83630
0x62 EQ
0x63 PUSH2 0x14c
0x66 JUMPI
---
0x5d: V31 = 0xf1b83630
0x62: V32 = EQ 0xf1b83630 V12
0x63: V33 = 0x14c
0x66: JUMPI 0x14c V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0x0, 0x5c]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V34 = CALLVALUE
0x69: V35 = ISZERO V34
0x6a: V36 = 0x72
0x6d: JUMPI 0x72 V35
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V37 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x67]
Successors: [0x76]
---
0x72 JUMPDEST
0x73 PUSH2 0x7d
---
0x72: JUMPDEST 
0x73: V38 = 0x7d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0x76
[0x76:0x7a]
---
Predecessors: [0x72]
Successors: []
---
0x76 JUMPDEST
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x76: JUMPDEST 
0x77: V39 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x7b
[0x7b:0x7c]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x7b JUMPDEST
0x7c JUMP
---
0x7b: JUMPDEST 
0x7c: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7d
[0x7d:0x7e]
---
Predecessors: [0x248, 0x2ca, 0x395, 0x44b, 0x49d]
Successors: []
---
0x7d JUMPDEST
0x7e STOP
---
0x7d: JUMPDEST 
0x7e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f
[0x7f:0x85]
---
Predecessors: [0xb]
Successors: [0x86, 0x8a]
---
0x7f JUMPDEST
0x80 CALLVALUE
0x81 ISZERO
0x82 PUSH2 0x8a
0x85 JUMPI
---
0x7f: JUMPDEST 
0x80: V40 = CALLVALUE
0x81: V41 = ISZERO V40
0x82: V42 = 0x8a
0x85: JUMPI 0x8a V41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x7f]
Successors: []
---
0x86 PUSH1 0x0
0x88 DUP1
0x89 REVERT
---
0x86: V43 = 0x0
0x89: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a
[0x8a:0xcb]
---
Predecessors: [0x7f]
Successors: [0x164]
---
0x8a JUMPDEST
0x8b PUSH2 0x7d
0x8e PUSH1 0x1
0x90 PUSH1 0xa0
0x92 PUSH1 0x2
0x94 EXP
0x95 SUB
0x96 PUSH1 0x4
0x98 CALLDATALOAD
0x99 DUP2
0x9a AND
0x9b SWAP1
0x9c PUSH1 0x24
0x9e CALLDATALOAD
0x9f SWAP1
0xa0 PUSH1 0x44
0xa2 CALLDATALOAD
0xa3 DUP2
0xa4 AND
0xa5 SWAP1
0xa6 PUSH1 0x64
0xa8 CALLDATALOAD
0xa9 SWAP1
0xaa PUSH1 0x84
0xac CALLDATALOAD
0xad SWAP1
0xae PUSH1 0xa4
0xb0 CALLDATALOAD
0xb1 SWAP1
0xb2 PUSH1 0xc4
0xb4 CALLDATALOAD
0xb5 AND
0xb6 PUSH1 0xff
0xb8 PUSH1 0xe4
0xba CALLDATALOAD
0xbb AND
0xbc PUSH2 0x104
0xbf CALLDATALOAD
0xc0 PUSH2 0x124
0xc3 CALLDATALOAD
0xc4 PUSH2 0x144
0xc7 CALLDATALOAD
0xc8 PUSH2 0x164
0xcb JUMP
---
0x8a: JUMPDEST 
0x8b: V44 = 0x7d
0x8e: V45 = 0x1
0x90: V46 = 0xa0
0x92: V47 = 0x2
0x94: V48 = EXP 0x2 0xa0
0x95: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96: V50 = 0x4
0x98: V51 = CALLDATALOAD 0x4
0x9a: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0x9c: V53 = 0x24
0x9e: V54 = CALLDATALOAD 0x24
0xa0: V55 = 0x44
0xa2: V56 = CALLDATALOAD 0x44
0xa4: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xa6: V58 = 0x64
0xa8: V59 = CALLDATALOAD 0x64
0xaa: V60 = 0x84
0xac: V61 = CALLDATALOAD 0x84
0xae: V62 = 0xa4
0xb0: V63 = CALLDATALOAD 0xa4
0xb2: V64 = 0xc4
0xb4: V65 = CALLDATALOAD 0xc4
0xb5: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xb6: V67 = 0xff
0xb8: V68 = 0xe4
0xba: V69 = CALLDATALOAD 0xe4
0xbb: V70 = AND V69 0xff
0xbc: V71 = 0x104
0xbf: V72 = CALLDATALOAD 0x104
0xc0: V73 = 0x124
0xc3: V74 = CALLDATALOAD 0x124
0xc4: V75 = 0x144
0xc7: V76 = CALLDATALOAD 0x144
0xc8: V77 = 0x164
0xcb: JUMP 0x164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76]
Exit stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: []
Successors: []
---
0xcc JUMPDEST
0xcd STOP
---
0xcc: JUMPDEST 
0xcd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0x25]
Successors: [0xd5, 0xd9]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V78 = CALLVALUE
0xd0: V79 = ISZERO V78
0xd1: V80 = 0xd9
0xd4: JUMPI 0xd9 V79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xce]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V81 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd9
[0xd9:0xe3]
---
Predecessors: [0xce]
Successors: [0x256]
---
0xd9 JUMPDEST
0xda PUSH2 0x7d
0xdd PUSH1 0x4
0xdf CALLDATALOAD
0xe0 PUSH2 0x256
0xe3 JUMP
---
0xd9: JUMPDEST 
0xda: V82 = 0x7d
0xdd: V83 = 0x4
0xdf: V84 = CALLDATALOAD 0x4
0xe0: V85 = 0x256
0xe3: JUMP 0x256
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V84]
Exit stack: [V12, 0x7d, V84]

================================

Block 0xe4
[0xe4:0xe5]
---
Predecessors: []
Successors: []
---
0xe4 JUMPDEST
0xe5 STOP
---
0xe4: JUMPDEST 
0xe5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe6
[0xe6:0xec]
---
Predecessors: [0x30]
Successors: [0xed, 0xf1]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe6: JUMPDEST 
0xe7: V86 = CALLVALUE
0xe8: V87 = ISZERO V86
0xe9: V88 = 0xf1
0xec: JUMPI 0xf1 V87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe6]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V89 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf1
[0xf1:0xfb]
---
Predecessors: [0xe6]
Successors: [0x2ce]
---
0xf1 JUMPDEST
0xf2 PUSH2 0x7d
0xf5 PUSH1 0x4
0xf7 CALLDATALOAD
0xf8 PUSH2 0x2ce
0xfb JUMP
---
0xf1: JUMPDEST 
0xf2: V90 = 0x7d
0xf5: V91 = 0x4
0xf7: V92 = CALLDATALOAD 0x4
0xf8: V93 = 0x2ce
0xfb: JUMP 0x2ce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V92]
Exit stack: [V12, 0x7d, V92]

================================

Block 0xfc
[0xfc:0xfd]
---
Predecessors: []
Successors: []
---
0xfc JUMPDEST
0xfd STOP
---
0xfc: JUMPDEST 
0xfd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xfe
[0xfe:0x104]
---
Predecessors: [0x3b]
Successors: [0x105, 0x109]
---
0xfe JUMPDEST
0xff CALLVALUE
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xfe: JUMPDEST 
0xff: V94 = CALLVALUE
0x100: V95 = ISZERO V94
0x101: V96 = 0x109
0x104: JUMPI 0x109 V95
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xfe]
Successors: []
---
0x105 PUSH1 0x0
0x107 DUP1
0x108 REVERT
---
0x105: V97 = 0x0
0x108: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x109
[0x109:0x110]
---
Predecessors: [0xfe]
Successors: [0x398]
---
0x109 JUMPDEST
0x10a PUSH2 0x7d
0x10d PUSH2 0x398
0x110 JUMP
---
0x109: JUMPDEST 
0x10a: V98 = 0x7d
0x10d: V99 = 0x398
0x110: JUMP 0x398
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0x111
[0x111:0x112]
---
Predecessors: []
Successors: []
---
0x111 JUMPDEST
0x112 STOP
---
0x111: JUMPDEST 
0x112: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0x46]
Successors: [0x11a, 0x11e]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x113: JUMPDEST 
0x114: V100 = CALLVALUE
0x115: V101 = ISZERO V100
0x116: V102 = 0x11e
0x119: JUMPI 0x11e V101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x113]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V103 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11e
[0x11e:0x125]
---
Predecessors: [0x113]
Successors: [0x3c4]
---
0x11e JUMPDEST
0x11f PUSH2 0x126
0x122 PUSH2 0x3c4
0x125 JUMP
---
0x11e: JUMPDEST 
0x11f: V104 = 0x126
0x122: V105 = 0x3c4
0x125: JUMP 0x3c4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x126]
Exit stack: [V12, 0x126]

================================

Block 0x126
[0x126:0x141]
---
Predecessors: [0x3c4]
Successors: []
---
0x126 JUMPDEST
0x127 PUSH1 0x40
0x129 MLOAD
0x12a PUSH1 0x1
0x12c PUSH1 0xa0
0x12e PUSH1 0x2
0x130 EXP
0x131 SUB
0x132 SWAP1
0x133 SWAP2
0x134 AND
0x135 DUP2
0x136 MSTORE
0x137 PUSH1 0x20
0x139 ADD
0x13a PUSH1 0x40
0x13c MLOAD
0x13d DUP1
0x13e SWAP2
0x13f SUB
0x140 SWAP1
0x141 RETURN
---
0x126: JUMPDEST 
0x127: V106 = 0x40
0x129: V107 = M[0x40]
0x12a: V108 = 0x1
0x12c: V109 = 0xa0
0x12e: V110 = 0x2
0x130: V111 = EXP 0x2 0xa0
0x131: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x134: V113 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x136: M[V107] = V113
0x137: V114 = 0x20
0x139: V115 = ADD 0x20 V107
0x13a: V116 = 0x40
0x13c: V117 = M[0x40]
0x13f: V118 = SUB V115 V117
0x141: RETURN V117 V118
---
Entry stack: [V12, 0x126, V353]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x126]

================================

Block 0x142
[0x142:0x149]
---
Predecessors: [0x51]
Successors: [0x3d3]
---
0x142 JUMPDEST
0x143 PUSH2 0x7d
0x146 PUSH2 0x3d3
0x149 JUMP
---
0x142: JUMPDEST 
0x143: V119 = 0x7d
0x146: V120 = 0x3d3
0x149: JUMP 0x3d3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0x14a
[0x14a:0x14b]
---
Predecessors: []
Successors: []
---
0x14a JUMPDEST
0x14b STOP
---
0x14a: JUMPDEST 
0x14b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x14c
[0x14c:0x152]
---
Predecessors: [0x5c]
Successors: [0x153, 0x157]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0x14c: JUMPDEST 
0x14d: V121 = CALLVALUE
0x14e: V122 = ISZERO V121
0x14f: V123 = 0x157
0x152: JUMPI 0x157 V122
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x14c]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V124 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x157
[0x157:0x161]
---
Predecessors: [0x14c]
Successors: [0x44d]
---
0x157 JUMPDEST
0x158 PUSH2 0x7d
0x15b PUSH1 0x4
0x15d CALLDATALOAD
0x15e PUSH2 0x44d
0x161 JUMP
---
0x157: JUMPDEST 
0x158: V125 = 0x7d
0x15b: V126 = 0x4
0x15d: V127 = CALLDATALOAD 0x4
0x15e: V128 = 0x44d
0x161: JUMP 0x44d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V127]
Exit stack: [V12, 0x7d, V127]

================================

Block 0x162
[0x162:0x163]
---
Predecessors: []
Successors: []
---
0x162 JUMPDEST
0x163 STOP
---
0x162: JUMPDEST 
0x163: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x164
[0x164:0x17b]
---
Predecessors: [0x8a]
Successors: [0x17c, 0x180]
---
0x164 JUMPDEST
0x165 PUSH1 0x0
0x167 DUP1
0x168 SLOAD
0x169 CALLER
0x16a PUSH1 0x1
0x16c PUSH1 0xa0
0x16e PUSH1 0x2
0x170 EXP
0x171 SUB
0x172 SWAP1
0x173 DUP2
0x174 AND
0x175 SWAP2
0x176 AND
0x177 EQ
0x178 PUSH2 0x180
0x17b JUMPI
---
0x164: JUMPDEST 
0x165: V129 = 0x0
0x168: V130 = S[0x0]
0x169: V131 = CALLER
0x16a: V132 = 0x1
0x16c: V133 = 0xa0
0x16e: V134 = 0x2
0x170: V135 = EXP 0x2 0xa0
0x171: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x174: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x176: V138 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x177: V139 = EQ V138 V137
0x178: V140 = 0x180
0x17b: JUMPI 0x180 V139
---
Entry stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, 0x0]

================================

Block 0x17c
[0x17c:0x17f]
---
Predecessors: [0x164]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f REVERT
---
0x17c: V141 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, 0x0]

================================

Block 0x180
[0x180:0x22d]
---
Predecessors: [0x164]
Successors: [0x22e, 0x232]
---
0x180 JUMPDEST
0x181 POP
0x182 PUSH1 0x1
0x184 SLOAD
0x185 PUSH1 0x1
0x187 PUSH1 0xa0
0x189 PUSH1 0x2
0x18b EXP
0x18c SUB
0x18d AND
0x18e DUP1
0x18f PUSH4 0xa19b14a
0x194 DUP14
0x195 DUP14
0x196 DUP14
0x197 DUP14
0x198 DUP14
0x199 DUP14
0x19a DUP14
0x19b DUP14
0x19c DUP14
0x19d DUP14
0x19e DUP14
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 PUSH1 0xe0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 PUSH4 0xffffffff
0x1ac DUP15
0x1ad AND
0x1ae MUL
0x1af DUP2
0x1b0 MSTORE
0x1b1 PUSH1 0x1
0x1b3 PUSH1 0xa0
0x1b5 PUSH1 0x2
0x1b7 EXP
0x1b8 SUB
0x1b9 SWAP12
0x1ba DUP13
0x1bb AND
0x1bc PUSH1 0x4
0x1be DUP3
0x1bf ADD
0x1c0 MSTORE
0x1c1 PUSH1 0x24
0x1c3 DUP2
0x1c4 ADD
0x1c5 SWAP11
0x1c6 SWAP1
0x1c7 SWAP11
0x1c8 MSTORE
0x1c9 SWAP8
0x1ca DUP11
0x1cb AND
0x1cc PUSH1 0x44
0x1ce DUP11
0x1cf ADD
0x1d0 MSTORE
0x1d1 PUSH1 0x64
0x1d3 DUP10
0x1d4 ADD
0x1d5 SWAP7
0x1d6 SWAP1
0x1d7 SWAP7
0x1d8 MSTORE
0x1d9 PUSH1 0x84
0x1db DUP9
0x1dc ADD
0x1dd SWAP5
0x1de SWAP1
0x1df SWAP5
0x1e0 MSTORE
0x1e1 PUSH1 0xa4
0x1e3 DUP8
0x1e4 ADD
0x1e5 SWAP3
0x1e6 SWAP1
0x1e7 SWAP3
0x1e8 MSTORE
0x1e9 SWAP1
0x1ea SWAP6
0x1eb AND
0x1ec PUSH1 0xc4
0x1ee DUP6
0x1ef ADD
0x1f0 MSTORE
0x1f1 PUSH1 0xff
0x1f3 SWAP1
0x1f4 SWAP5
0x1f5 AND
0x1f6 PUSH1 0xe4
0x1f8 DUP5
0x1f9 ADD
0x1fa MSTORE
0x1fb PUSH2 0x104
0x1fe DUP4
0x1ff ADD
0x200 SWAP4
0x201 SWAP1
0x202 SWAP4
0x203 MSTORE
0x204 PUSH2 0x124
0x207 DUP3
0x208 ADD
0x209 SWAP3
0x20a SWAP1
0x20b SWAP3
0x20c MSTORE
0x20d PUSH2 0x144
0x210 DUP2
0x211 ADD
0x212 SWAP2
0x213 SWAP1
0x214 SWAP2
0x215 MSTORE
0x216 PUSH2 0x164
0x219 ADD
0x21a PUSH1 0x0
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 DUP4
0x221 SUB
0x222 DUP2
0x223 PUSH1 0x0
0x225 DUP8
0x226 DUP1
0x227 EXTCODESIZE
0x228 ISZERO
0x229 ISZERO
0x22a PUSH2 0x232
0x22d JUMPI
---
0x180: JUMPDEST 
0x182: V142 = 0x1
0x184: V143 = S[0x1]
0x185: V144 = 0x1
0x187: V145 = 0xa0
0x189: V146 = 0x2
0x18b: V147 = EXP 0x2 0xa0
0x18c: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18d: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x18f: V150 = 0xa19b14a
0x19f: V151 = 0x40
0x1a1: V152 = M[0x40]
0x1a2: V153 = 0xe0
0x1a4: V154 = 0x2
0x1a6: V155 = EXP 0x2 0xe0
0x1a7: V156 = 0xffffffff
0x1ad: V157 = AND 0xa19b14a 0xffffffff
0x1ae: V158 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x1b0: M[V152] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x1b1: V159 = 0x1
0x1b3: V160 = 0xa0
0x1b5: V161 = 0x2
0x1b7: V162 = EXP 0x2 0xa0
0x1b8: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bb: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x1bc: V165 = 0x4
0x1bf: V166 = ADD V152 0x4
0x1c0: M[V166] = V164
0x1c1: V167 = 0x24
0x1c4: V168 = ADD V152 0x24
0x1c8: M[V168] = V54
0x1cb: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x1cc: V170 = 0x44
0x1cf: V171 = ADD V152 0x44
0x1d0: M[V171] = V169
0x1d1: V172 = 0x64
0x1d4: V173 = ADD V152 0x64
0x1d8: M[V173] = V59
0x1d9: V174 = 0x84
0x1dc: V175 = ADD V152 0x84
0x1e0: M[V175] = V61
0x1e1: V176 = 0xa4
0x1e4: V177 = ADD V152 0xa4
0x1e8: M[V177] = V63
0x1eb: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x1ec: V179 = 0xc4
0x1ef: V180 = ADD V152 0xc4
0x1f0: M[V180] = V178
0x1f1: V181 = 0xff
0x1f5: V182 = AND V70 0xff
0x1f6: V183 = 0xe4
0x1f9: V184 = ADD V152 0xe4
0x1fa: M[V184] = V182
0x1fb: V185 = 0x104
0x1ff: V186 = ADD V152 0x104
0x203: M[V186] = V72
0x204: V187 = 0x124
0x208: V188 = ADD V152 0x124
0x20c: M[V188] = V74
0x20d: V189 = 0x144
0x211: V190 = ADD V152 0x144
0x215: M[V190] = V76
0x216: V191 = 0x164
0x219: V192 = ADD 0x164 V152
0x21a: V193 = 0x0
0x21c: V194 = 0x40
0x21e: V195 = M[0x40]
0x221: V196 = SUB V192 V195
0x223: V197 = 0x0
0x227: V198 = EXTCODESIZE V149
0x228: V199 = ISZERO V198
0x229: V200 = ISZERO V199
0x22a: V201 = 0x232
0x22d: JUMPI 0x232 V200
---
Entry stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V149, V149, 0xa19b14a, V192, 0x0, V195, V196, V195, 0x0, V149]
Exit stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149, V149, 0xa19b14a, V192, 0x0, V195, V196, V195, 0x0, V149]

================================

Block 0x22e
[0x22e:0x231]
---
Predecessors: [0x180]
Successors: []
---
0x22e PUSH1 0x0
0x230 DUP1
0x231 REVERT
---
0x22e: V202 = 0x0
0x231: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149, V149, 0xa19b14a, V192, 0x0, V195, V196, V195, 0x0, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149, V149, 0xa19b14a, V192, 0x0, V195, V196, V195, 0x0, V149]

================================

Block 0x232
[0x232:0x23e]
---
Predecessors: [0x180]
Successors: [0x23f, 0x243]
---
0x232 JUMPDEST
0x233 PUSH2 0x2c6
0x236 GAS
0x237 SUB
0x238 CALL
0x239 ISZERO
0x23a ISZERO
0x23b PUSH2 0x243
0x23e JUMPI
---
0x232: JUMPDEST 
0x233: V203 = 0x2c6
0x236: V204 = GAS
0x237: V205 = SUB V204 0x2c6
0x238: V206 = CALL V205 V149 0x0 V195 V196 V195 0x0
0x239: V207 = ISZERO V206
0x23a: V208 = ISZERO V207
0x23b: V209 = 0x243
0x23e: JUMPI 0x243 V208
---
Entry stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149, V149, 0xa19b14a, V192, 0x0, V195, V196, V195, 0x0, V149]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149, V149, 0xa19b14a, V192]

================================

Block 0x23f
[0x23f:0x242]
---
Predecessors: [0x232]
Successors: []
---
0x23f PUSH1 0x0
0x241 DUP1
0x242 REVERT
---
0x23f: V210 = 0x0
0x242: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149, V149, 0xa19b14a, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149, V149, 0xa19b14a, V192]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x232]
Successors: [0x247]
---
0x243 JUMPDEST
0x244 POP
0x245 POP
0x246 POP
---
0x243: JUMPDEST 
---
Entry stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149, V149, 0xa19b14a, V192]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149]

================================

Block 0x247
[0x247:0x247]
---
Predecessors: [0x243]
Successors: [0x248]
---
0x247 JUMPDEST
---
0x247: JUMPDEST 
---
Entry stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149]

================================

Block 0x248
[0x248:0x255]
---
Predecessors: [0x247]
Successors: [0x7d]
---
0x248 JUMPDEST
0x249 POP
0x24a POP
0x24b POP
0x24c POP
0x24d POP
0x24e POP
0x24f POP
0x250 POP
0x251 POP
0x252 POP
0x253 POP
0x254 POP
0x255 JUMP
---
0x248: JUMPDEST 
0x255: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V52, V54, V57, V59, V61, V63, V66, V70, V72, V74, V76, V149]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0x256
[0x256:0x26d]
---
Predecessors: [0xd9]
Successors: [0x26e, 0x272]
---
0x256 JUMPDEST
0x257 PUSH1 0x0
0x259 DUP1
0x25a SLOAD
0x25b CALLER
0x25c PUSH1 0x1
0x25e PUSH1 0xa0
0x260 PUSH1 0x2
0x262 EXP
0x263 SUB
0x264 SWAP1
0x265 DUP2
0x266 AND
0x267 SWAP2
0x268 AND
0x269 EQ
0x26a PUSH2 0x272
0x26d JUMPI
---
0x256: JUMPDEST 
0x257: V211 = 0x0
0x25a: V212 = S[0x0]
0x25b: V213 = CALLER
0x25c: V214 = 0x1
0x25e: V215 = 0xa0
0x260: V216 = 0x2
0x262: V217 = EXP 0x2 0xa0
0x263: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x266: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x268: V220 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x269: V221 = EQ V220 V219
0x26a: V222 = 0x272
0x26d: JUMPI 0x272 V221
---
Entry stack: [V12, 0x7d, V84]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V84, 0x0]

================================

Block 0x26e
[0x26e:0x271]
---
Predecessors: [0x256]
Successors: []
---
0x26e PUSH1 0x0
0x270 DUP1
0x271 REVERT
---
0x26e: V223 = 0x0
0x271: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V84, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V84, 0x0]

================================

Block 0x272
[0x272:0x2ae]
---
Predecessors: [0x256]
Successors: [0x2af, 0x2b3]
---
0x272 JUMPDEST
0x273 POP
0x274 PUSH1 0x1
0x276 SLOAD
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f AND
0x280 DUP1
0x281 PUSH4 0xd0e30db0
0x286 DUP4
0x287 PUSH1 0x40
0x289 MLOAD
0x28a DUP3
0x28b PUSH4 0xffffffff
0x290 AND
0x291 PUSH1 0xe0
0x293 PUSH1 0x2
0x295 EXP
0x296 MUL
0x297 DUP2
0x298 MSTORE
0x299 PUSH1 0x4
0x29b ADD
0x29c PUSH1 0x0
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 DUP1
0x2a2 DUP4
0x2a3 SUB
0x2a4 DUP2
0x2a5 DUP6
0x2a6 DUP9
0x2a7 DUP1
0x2a8 EXTCODESIZE
0x2a9 ISZERO
0x2aa ISZERO
0x2ab PUSH2 0x2b3
0x2ae JUMPI
---
0x272: JUMPDEST 
0x274: V224 = 0x1
0x276: V225 = S[0x1]
0x277: V226 = 0x1
0x279: V227 = 0xa0
0x27b: V228 = 0x2
0x27d: V229 = EXP 0x2 0xa0
0x27e: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x281: V232 = 0xd0e30db0
0x287: V233 = 0x40
0x289: V234 = M[0x40]
0x28b: V235 = 0xffffffff
0x290: V236 = AND 0xffffffff 0xd0e30db0
0x291: V237 = 0xe0
0x293: V238 = 0x2
0x295: V239 = EXP 0x2 0xe0
0x296: V240 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x298: M[V234] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x299: V241 = 0x4
0x29b: V242 = ADD 0x4 V234
0x29c: V243 = 0x0
0x29e: V244 = 0x40
0x2a0: V245 = M[0x40]
0x2a3: V246 = SUB V242 V245
0x2a8: V247 = EXTCODESIZE V231
0x2a9: V248 = ISZERO V247
0x2aa: V249 = ISZERO V248
0x2ab: V250 = 0x2b3
0x2ae: JUMPI 0x2b3 V249
---
Entry stack: [V12, 0x7d, V84, 0x0]
Stack pops: 2
Stack additions: [S1, V231, V231, 0xd0e30db0, S1, V242, 0x0, V245, V246, V245, S1, V231]
Exit stack: [V12, 0x7d, V84, V231, V231, 0xd0e30db0, V84, V242, 0x0, V245, V246, V245, V84, V231]

================================

Block 0x2af
[0x2af:0x2b2]
---
Predecessors: [0x272]
Successors: []
---
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 REVERT
---
0x2af: V251 = 0x0
0x2b2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V84, V231, V231, 0xd0e30db0, V84, V242, 0x0, V245, V246, V245, V84, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V84, V231, V231, 0xd0e30db0, V84, V242, 0x0, V245, V246, V245, V84, V231]

================================

Block 0x2b3
[0x2b3:0x2bf]
---
Predecessors: [0x272]
Successors: [0x2c0, 0x2c4]
---
0x2b3 JUMPDEST
0x2b4 PUSH2 0x25ee
0x2b7 GAS
0x2b8 SUB
0x2b9 CALL
0x2ba ISZERO
0x2bb ISZERO
0x2bc PUSH2 0x2c4
0x2bf JUMPI
---
0x2b3: JUMPDEST 
0x2b4: V252 = 0x25ee
0x2b7: V253 = GAS
0x2b8: V254 = SUB V253 0x25ee
0x2b9: V255 = CALL V254 V231 V84 V245 V246 V245 0x0
0x2ba: V256 = ISZERO V255
0x2bb: V257 = ISZERO V256
0x2bc: V258 = 0x2c4
0x2bf: JUMPI 0x2c4 V257
---
Entry stack: [V12, 0x7d, V84, V231, V231, 0xd0e30db0, V84, V242, 0x0, V245, V246, V245, V84, V231]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V84, V231, V231, 0xd0e30db0, V84, V242]

================================

Block 0x2c0
[0x2c0:0x2c3]
---
Predecessors: [0x2b3]
Successors: []
---
0x2c0 PUSH1 0x0
0x2c2 DUP1
0x2c3 REVERT
---
0x2c0: V259 = 0x0
0x2c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V84, V231, V231, 0xd0e30db0, V84, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V84, V231, V231, 0xd0e30db0, V84, V242]

================================

Block 0x2c4
[0x2c4:0x2c8]
---
Predecessors: [0x2b3]
Successors: [0x2c9]
---
0x2c4 JUMPDEST
0x2c5 POP
0x2c6 POP
0x2c7 POP
0x2c8 POP
---
0x2c4: JUMPDEST 
---
Entry stack: [V12, 0x7d, V84, V231, V231, 0xd0e30db0, V84, V242]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x7d, V84, V231]

================================

Block 0x2c9
[0x2c9:0x2c9]
---
Predecessors: [0x2c4]
Successors: [0x2ca]
---
0x2c9 JUMPDEST
---
0x2c9: JUMPDEST 
---
Entry stack: [V12, 0x7d, V84, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V84, V231]

================================

Block 0x2ca
[0x2ca:0x2cd]
---
Predecessors: [0x2c9]
Successors: [0x7d]
---
0x2ca JUMPDEST
0x2cb POP
0x2cc POP
0x2cd JUMP
---
0x2ca: JUMPDEST 
0x2cd: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V84, V231]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ce
[0x2ce:0x2e4]
---
Predecessors: [0xf1]
Successors: [0x2e5, 0x2e9]
---
0x2ce JUMPDEST
0x2cf PUSH1 0x0
0x2d1 SLOAD
0x2d2 CALLER
0x2d3 PUSH1 0x1
0x2d5 PUSH1 0xa0
0x2d7 PUSH1 0x2
0x2d9 EXP
0x2da SUB
0x2db SWAP1
0x2dc DUP2
0x2dd AND
0x2de SWAP2
0x2df AND
0x2e0 EQ
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2ce: JUMPDEST 
0x2cf: V260 = 0x0
0x2d1: V261 = S[0x0]
0x2d2: V262 = CALLER
0x2d3: V263 = 0x1
0x2d5: V264 = 0xa0
0x2d7: V265 = 0x2
0x2d9: V266 = EXP 0x2 0xa0
0x2da: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dd: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x2df: V269 = AND V261 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: V270 = EQ V269 V268
0x2e1: V271 = 0x2e9
0x2e4: JUMPI 0x2e9 V270
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V92]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2ce]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V272 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V92]

================================

Block 0x2e9
[0x2e9:0x317]
---
Predecessors: [0x2ce]
Successors: [0x318, 0x31c]
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x0
0x2ec SLOAD
0x2ed PUSH1 0x1
0x2ef PUSH1 0xa0
0x2f1 PUSH1 0x2
0x2f3 EXP
0x2f4 SUB
0x2f5 AND
0x2f6 DUP2
0x2f7 ISZERO
0x2f8 PUSH2 0x8fc
0x2fb MUL
0x2fc DUP3
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 PUSH1 0x0
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP1
0x306 DUP4
0x307 SUB
0x308 DUP2
0x309 DUP6
0x30a DUP9
0x30b DUP9
0x30c CALL
0x30d SWAP4
0x30e POP
0x30f POP
0x310 POP
0x311 POP
0x312 ISZERO
0x313 ISZERO
0x314 PUSH2 0x31c
0x317 JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V273 = 0x0
0x2ec: V274 = S[0x0]
0x2ed: V275 = 0x1
0x2ef: V276 = 0xa0
0x2f1: V277 = 0x2
0x2f3: V278 = EXP 0x2 0xa0
0x2f4: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f5: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x2f7: V281 = ISZERO V92
0x2f8: V282 = 0x8fc
0x2fb: V283 = MUL 0x8fc V281
0x2fd: V284 = 0x40
0x2ff: V285 = M[0x40]
0x300: V286 = 0x0
0x302: V287 = 0x40
0x304: V288 = M[0x40]
0x307: V289 = SUB V285 V288
0x30c: V290 = CALL V283 V280 V92 V288 V289 V288 0x0
0x312: V291 = ISZERO V290
0x313: V292 = ISZERO V291
0x314: V293 = 0x31c
0x317: JUMPI 0x31c V292
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V92]

================================

Block 0x318
[0x318:0x31b]
---
Predecessors: [0x2e9]
Successors: []
---
0x318 PUSH1 0x0
0x31a DUP1
0x31b REVERT
---
0x318: V294 = 0x0
0x31b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V92]

================================

Block 0x31c
[0x31c:0x393]
---
Predecessors: [0x2e9]
Successors: [0x394]
---
0x31c JUMPDEST
0x31d PUSH32 0xf341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567
0x33e PUSH20 0x1111111111111111111111111111111111111111
0x353 CALLER
0x354 DUP4
0x355 ADDRESS
0x356 PUSH1 0x1
0x358 PUSH1 0xa0
0x35a PUSH1 0x2
0x35c EXP
0x35d SUB
0x35e AND
0x35f BALANCE
0x360 PUSH1 0x40
0x362 MLOAD
0x363 PUSH1 0x1
0x365 PUSH1 0xa0
0x367 PUSH1 0x2
0x369 EXP
0x36a SUB
0x36b SWAP5
0x36c DUP6
0x36d AND
0x36e DUP2
0x36f MSTORE
0x370 SWAP3
0x371 SWAP1
0x372 SWAP4
0x373 AND
0x374 PUSH1 0x20
0x376 DUP4
0x377 ADD
0x378 MSTORE
0x379 PUSH1 0x40
0x37b DUP1
0x37c DUP4
0x37d ADD
0x37e SWAP2
0x37f SWAP1
0x380 SWAP2
0x381 MSTORE
0x382 PUSH1 0x60
0x384 DUP3
0x385 ADD
0x386 SWAP3
0x387 SWAP1
0x388 SWAP3
0x389 MSTORE
0x38a PUSH1 0x80
0x38c ADD
0x38d SWAP1
0x38e MLOAD
0x38f DUP1
0x390 SWAP2
0x391 SUB
0x392 SWAP1
0x393 LOG1
---
0x31c: JUMPDEST 
0x31d: V295 = 0xf341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567
0x33e: V296 = 0x1111111111111111111111111111111111111111
0x353: V297 = CALLER
0x355: V298 = ADDRESS
0x356: V299 = 0x1
0x358: V300 = 0xa0
0x35a: V301 = 0x2
0x35c: V302 = EXP 0x2 0xa0
0x35d: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35e: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x35f: V305 = BALANCE V304
0x360: V306 = 0x40
0x362: V307 = M[0x40]
0x363: V308 = 0x1
0x365: V309 = 0xa0
0x367: V310 = 0x2
0x369: V311 = EXP 0x2 0xa0
0x36a: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36d: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x1111111111111111111111111111111111111111
0x36f: M[V307] = 0x1111111111111111111111111111111111111111
0x373: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x374: V315 = 0x20
0x377: V316 = ADD V307 0x20
0x378: M[V316] = V314
0x379: V317 = 0x40
0x37d: V318 = ADD V307 0x40
0x381: M[V318] = V92
0x382: V319 = 0x60
0x385: V320 = ADD V307 0x60
0x389: M[V320] = V305
0x38a: V321 = 0x80
0x38c: V322 = ADD 0x80 V307
0x38e: V323 = M[0x40]
0x391: V324 = SUB V322 V323
0x393: LOG V323 V324 0xf341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V92]

================================

Block 0x394
[0x394:0x394]
---
Predecessors: [0x31c]
Successors: [0x395]
---
0x394 JUMPDEST
---
0x394: JUMPDEST 
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V92]

================================

Block 0x395
[0x395:0x397]
---
Predecessors: [0x394]
Successors: [0x7d]
---
0x395 JUMPDEST
0x396 POP
0x397 JUMP
---
0x395: JUMPDEST 
0x397: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x398
[0x398:0x3ae]
---
Predecessors: [0x109]
Successors: [0x3af, 0x3b3]
---
0x398 JUMPDEST
0x399 PUSH1 0x0
0x39b SLOAD
0x39c CALLER
0x39d PUSH1 0x1
0x39f PUSH1 0xa0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 SUB
0x3a5 SWAP1
0x3a6 DUP2
0x3a7 AND
0x3a8 SWAP2
0x3a9 AND
0x3aa EQ
0x3ab PUSH2 0x3b3
0x3ae JUMPI
---
0x398: JUMPDEST 
0x399: V325 = 0x0
0x39b: V326 = S[0x0]
0x39c: V327 = CALLER
0x39d: V328 = 0x1
0x39f: V329 = 0xa0
0x3a1: V330 = 0x2
0x3a3: V331 = EXP 0x2 0xa0
0x3a4: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x3a9: V334 = AND V326 0xffffffffffffffffffffffffffffffffffffffff
0x3aa: V335 = EQ V334 V333
0x3ab: V336 = 0x3b3
0x3ae: JUMPI 0x3b3 V335
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x3af
[0x3af:0x3b2]
---
Predecessors: [0x398]
Successors: []
---
0x3af PUSH1 0x0
0x3b1 DUP1
0x3b2 REVERT
---
0x3af: V337 = 0x0
0x3b2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x3b3
[0x3b3:0x3c0]
---
Predecessors: [0x398]
Successors: []
---
0x3b3 JUMPDEST
0x3b4 PUSH1 0x0
0x3b6 SLOAD
0x3b7 PUSH1 0x1
0x3b9 PUSH1 0xa0
0x3bb PUSH1 0x2
0x3bd EXP
0x3be SUB
0x3bf AND
0x3c0 SELFDESTRUCT
---
0x3b3: JUMPDEST 
0x3b4: V338 = 0x0
0x3b6: V339 = S[0x0]
0x3b7: V340 = 0x1
0x3b9: V341 = 0xa0
0x3bb: V342 = 0x2
0x3bd: V343 = EXP 0x2 0xa0
0x3be: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bf: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x3c0: SELFDESTRUCT V345
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x3c1
[0x3c1:0x3c1]
---
Predecessors: []
Successors: [0x3c2]
---
0x3c1 JUMPDEST
---
0x3c1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3c2
[0x3c2:0x3c3]
---
Predecessors: [0x3c1]
Successors: []
Has unresolved jump.
---
0x3c2 JUMPDEST
0x3c3 JUMP
---
0x3c2: JUMPDEST 
0x3c3: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c4
[0x3c4:0x3d2]
---
Predecessors: [0x11e]
Successors: [0x126]
---
0x3c4 JUMPDEST
0x3c5 PUSH1 0x0
0x3c7 SLOAD
0x3c8 PUSH1 0x1
0x3ca PUSH1 0xa0
0x3cc PUSH1 0x2
0x3ce EXP
0x3cf SUB
0x3d0 AND
0x3d1 DUP2
0x3d2 JUMP
---
0x3c4: JUMPDEST 
0x3c5: V346 = 0x0
0x3c7: V347 = S[0x0]
0x3c8: V348 = 0x1
0x3ca: V349 = 0xa0
0x3cc: V350 = 0x2
0x3ce: V351 = EXP 0x2 0xa0
0x3cf: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d0: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x3d2: JUMP 0x126
---
Entry stack: [V12, 0x126]
Stack pops: 1
Stack additions: [S0, V353]
Exit stack: [V12, 0x126, V353]

================================

Block 0x3d3
[0x3d3:0x44a]
---
Predecessors: [0x142]
Successors: [0x44b]
---
0x3d3 JUMPDEST
0x3d4 PUSH32 0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7
0x3f5 PUSH20 0x1111111111111111111111111111111111111111
0x40a CALLER
0x40b CALLVALUE
0x40c ADDRESS
0x40d PUSH1 0x1
0x40f PUSH1 0xa0
0x411 PUSH1 0x2
0x413 EXP
0x414 SUB
0x415 AND
0x416 BALANCE
0x417 PUSH1 0x40
0x419 MLOAD
0x41a PUSH1 0x1
0x41c PUSH1 0xa0
0x41e PUSH1 0x2
0x420 EXP
0x421 SUB
0x422 SWAP5
0x423 DUP6
0x424 AND
0x425 DUP2
0x426 MSTORE
0x427 SWAP3
0x428 SWAP1
0x429 SWAP4
0x42a AND
0x42b PUSH1 0x20
0x42d DUP4
0x42e ADD
0x42f MSTORE
0x430 PUSH1 0x40
0x432 DUP1
0x433 DUP4
0x434 ADD
0x435 SWAP2
0x436 SWAP1
0x437 SWAP2
0x438 MSTORE
0x439 PUSH1 0x60
0x43b DUP3
0x43c ADD
0x43d SWAP3
0x43e SWAP1
0x43f SWAP3
0x440 MSTORE
0x441 PUSH1 0x80
0x443 ADD
0x444 SWAP1
0x445 MLOAD
0x446 DUP1
0x447 SWAP2
0x448 SUB
0x449 SWAP1
0x44a LOG1
---
0x3d3: JUMPDEST 
0x3d4: V354 = 0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7
0x3f5: V355 = 0x1111111111111111111111111111111111111111
0x40a: V356 = CALLER
0x40b: V357 = CALLVALUE
0x40c: V358 = ADDRESS
0x40d: V359 = 0x1
0x40f: V360 = 0xa0
0x411: V361 = 0x2
0x413: V362 = EXP 0x2 0xa0
0x414: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x415: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x416: V365 = BALANCE V364
0x417: V366 = 0x40
0x419: V367 = M[0x40]
0x41a: V368 = 0x1
0x41c: V369 = 0xa0
0x41e: V370 = 0x2
0x420: V371 = EXP 0x2 0xa0
0x421: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x424: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x1111111111111111111111111111111111111111
0x426: M[V367] = 0x1111111111111111111111111111111111111111
0x42a: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x42b: V375 = 0x20
0x42e: V376 = ADD V367 0x20
0x42f: M[V376] = V374
0x430: V377 = 0x40
0x434: V378 = ADD V367 0x40
0x438: M[V378] = V357
0x439: V379 = 0x60
0x43c: V380 = ADD V367 0x60
0x440: M[V380] = V365
0x441: V381 = 0x80
0x443: V382 = ADD 0x80 V367
0x445: V383 = M[0x40]
0x448: V384 = SUB V382 V383
0x44a: LOG V383 V384 0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x44b
[0x44b:0x44c]
---
Predecessors: [0x3d3]
Successors: [0x7d]
---
0x44b JUMPDEST
0x44c JUMP
---
0x44b: JUMPDEST 
0x44c: JUMP 0x7d
---
Entry stack: [V12, 0x7d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x44d
[0x44d:0x463]
---
Predecessors: [0x157]
Successors: [0x464, 0x468]
---
0x44d JUMPDEST
0x44e PUSH1 0x0
0x450 SLOAD
0x451 CALLER
0x452 PUSH1 0x1
0x454 PUSH1 0xa0
0x456 PUSH1 0x2
0x458 EXP
0x459 SUB
0x45a SWAP1
0x45b DUP2
0x45c AND
0x45d SWAP2
0x45e AND
0x45f EQ
0x460 PUSH2 0x468
0x463 JUMPI
---
0x44d: JUMPDEST 
0x44e: V385 = 0x0
0x450: V386 = S[0x0]
0x451: V387 = CALLER
0x452: V388 = 0x1
0x454: V389 = 0xa0
0x456: V390 = 0x2
0x458: V391 = EXP 0x2 0xa0
0x459: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45c: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x45e: V394 = AND V386 0xffffffffffffffffffffffffffffffffffffffff
0x45f: V395 = EQ V394 V393
0x460: V396 = 0x468
0x463: JUMPI 0x468 V395
---
Entry stack: [V12, 0x7d, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V127]

================================

Block 0x464
[0x464:0x467]
---
Predecessors: [0x44d]
Successors: []
---
0x464 PUSH1 0x0
0x466 DUP1
0x467 REVERT
---
0x464: V397 = 0x0
0x467: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V127]

================================

Block 0x468
[0x468:0x49b]
---
Predecessors: [0x44d]
Successors: [0x49c]
---
0x468 JUMPDEST
0x469 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x48a DUP2
0x48b PUSH1 0x40
0x48d MLOAD
0x48e SWAP1
0x48f DUP2
0x490 MSTORE
0x491 PUSH1 0x20
0x493 ADD
0x494 PUSH1 0x40
0x496 MLOAD
0x497 DUP1
0x498 SWAP2
0x499 SUB
0x49a SWAP1
0x49b LOG1
---
0x468: JUMPDEST 
0x469: V398 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x48b: V399 = 0x40
0x48d: V400 = M[0x40]
0x490: M[V400] = V127
0x491: V401 = 0x20
0x493: V402 = ADD 0x20 V400
0x494: V403 = 0x40
0x496: V404 = M[0x40]
0x499: V405 = SUB V402 V404
0x49b: LOG V404 V405 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
---
Entry stack: [V12, 0x7d, V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V127]

================================

Block 0x49c
[0x49c:0x49c]
---
Predecessors: [0x468]
Successors: [0x49d]
---
0x49c JUMPDEST
---
0x49c: JUMPDEST 
---
Entry stack: [V12, 0x7d, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V127]

================================

Block 0x49d
[0x49d:0x49f]
---
Predecessors: [0x49c]
Successors: [0x7d]
---
0x49d JUMPDEST
0x49e POP
0x49f JUMP
---
0x49d: JUMPDEST 
0x49f: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V127]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a0
[0x4a0:0x4cb]
---
Predecessors: []
Successors: []
---
0x4a0 STOP
0x4a1 LOG1
0x4a2 PUSH6 0x627a7a723058
0x4a9 SHA3
0x4aa MISSING 0x4f
0x4ab SLT
0x4ac MSIZE
0x4ad GAS
0x4ae MISSING 0xe7
0x4af MISSING 0xe5
0x4b0 MISSING 0xd5
0x4b1 CALLDATASIZE
0x4b2 STATICCALL
0x4b3 RETURNDATASIZE
0x4b4 MISSING 0x5c
0x4b5 SHR
0x4b6 REVERT
0x4b7 MISSING 0xc6
0x4b8 SWAP16
0x4b9 MISSING 0x49
0x4ba GT
0x4bb CREATE
0x4bc GT
0x4bd BLOCKHASH
0x4be MISSING 0x23
0x4bf MISSING 0x2b
0x4c0 MISSING 0xb9
0x4c1 MISSING 0xbb
0x4c2 PUSH9 0xc0db44dd62b8970029
---
0x4a0: STOP 
0x4a1: LOG S0 S1 S2
0x4a2: V406 = 0x627a7a723058
0x4a9: V407 = SHA3 0x627a7a723058 S3
0x4aa: MISSING 0x4f
0x4ab: V408 = SLT S0 S1
0x4ac: V409 = MSIZE
0x4ad: V410 = GAS
0x4ae: MISSING 0xe7
0x4af: MISSING 0xe5
0x4b0: MISSING 0xd5
0x4b1: V411 = CALLDATASIZE
0x4b2: V412 = STATICCALL V411 S0 S1 S2 S3 S4
0x4b3: V413 = RETURNDATASIZE
0x4b4: MISSING 0x5c
0x4b5: V414 = SHR S0 S1
0x4b6: REVERT V414 S2
0x4b7: MISSING 0xc6
0x4b9: MISSING 0x49
0x4ba: V415 = GT S0 S1
0x4bb: V416 = CREATE V415 S2 S3
0x4bc: V417 = GT V416 S4
0x4bd: V418 = BLOCKHASH V417
0x4be: MISSING 0x23
0x4bf: MISSING 0x2b
0x4c0: MISSING 0xb9
0x4c1: MISSING 0xbb
0x4c2: V419 = 0xc0db44dd62b8970029
---
Entry stack: []
Stack pops: 0
Stack additions: [V407, V410, V409, V408, V413, V412, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, V418, 0xc0db44dd62b8970029]
Exit stack: []

================================

Function 0:
Public function signature: 0xa19b14a
Entry block: 0x7f
Exit block: 0x7d
Body: 0x7d, 0x7f, 0x86, 0x8a, 0x164, 0x17c, 0x180, 0x22e, 0x232, 0x23f, 0x243, 0x247, 0x248

Function 1:
Public function signature: 0x2cf2c0af
Entry block: 0xce
Exit block: 0x7d
Body: 0x7d, 0xce, 0xd5, 0xd9, 0x256, 0x26e, 0x272, 0x2af, 0x2b3, 0x2c0, 0x2c4, 0x2c9, 0x2ca

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0xe6
Exit block: 0x7d
Body: 0x7d, 0xe6, 0xed, 0xf1, 0x2ce, 0x2e5, 0x2e9, 0x318, 0x31c, 0x394, 0x395

Function 3:
Public function signature: 0x43d726d6
Entry block: 0xfe
Exit block: 0x3b3
Body: 0xfe, 0x105, 0x109, 0x398, 0x3af, 0x3b3

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x113
Exit block: 0x126
Body: 0x113, 0x11a, 0x11e, 0x126, 0x3c4

Function 5:
Public function signature: 0xd0e30db0
Entry block: 0x142
Exit block: 0x7d
Body: 0x7d, 0x142, 0x3d3, 0x44b

Function 6:
Public function signature: 0xf1b83630
Entry block: 0x14c
Exit block: 0x7d
Body: 0x7d, 0x14c, 0x153, 0x157, 0x44d, 0x464, 0x468, 0x49c, 0x49d

Function 7:
Public fallback function
Entry block: 0x67
Exit block: 0x76
Body: 0x67, 0x6e, 0x72, 0x76

