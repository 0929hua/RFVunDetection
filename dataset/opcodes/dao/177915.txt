Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x8f]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x11610c25
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x8f
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x11610c25
0x3b: V13 = EQ V11 0x11610c25
0x3c: V14 = 0x8f
0x3f: JUMPI 0x8f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xb6]
---
0x40 DUP1
0x41 PUSH4 0x24600fc3
0x46 EQ
0x47 PUSH2 0xb6
0x4a JUMPI
---
0x41: V15 = 0x24600fc3
0x46: V16 = EQ 0x24600fc3 V11
0x47: V17 = 0xb6
0x4a: JUMPI 0xb6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xcb]
---
0x4b DUP1
0x4c PUSH4 0x25a58b56
0x51 EQ
0x52 PUSH2 0xcb
0x55 JUMPI
---
0x4c: V18 = 0x25a58b56
0x51: V19 = EQ 0x25a58b56 V11
0x52: V20 = 0xcb
0x55: JUMPI 0xcb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xfa]
---
0x56 DUP1
0x57 PUSH4 0x30ce4895
0x5c EQ
0x5d PUSH2 0xfa
0x60 JUMPI
---
0x57: V21 = 0x30ce4895
0x5c: V22 = EQ 0x30ce4895 V11
0x5d: V23 = 0xfa
0x60: JUMPI 0xfa V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x12a]
---
0x61 DUP1
0x62 PUSH4 0x40062b0b
0x67 EQ
0x68 PUSH2 0x12a
0x6b JUMPI
---
0x62: V24 = 0x40062b0b
0x67: V25 = EQ 0x40062b0b V11
0x68: V26 = 0x12a
0x6b: JUMPI 0x12a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x138]
---
0x6c DUP1
0x6d PUSH4 0x41c0e1b5
0x72 EQ
0x73 PUSH2 0x138
0x76 JUMPI
---
0x6d: V27 = 0x41c0e1b5
0x72: V28 = EQ 0x41c0e1b5 V11
0x73: V29 = 0x138
0x76: JUMPI 0x138 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x14d]
---
0x77 DUP1
0x78 PUSH4 0x590e1ae3
0x7d EQ
0x7e PUSH2 0x14d
0x81 JUMPI
---
0x78: V30 = 0x590e1ae3
0x7d: V31 = EQ 0x590e1ae3 V11
0x7e: V32 = 0x14d
0x81: JUMPI 0x14d V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x162]
---
0x82 DUP1
0x83 PUSH4 0x602e253c
0x88 EQ
0x89 PUSH2 0x162
0x8c JUMPI
---
0x83: V33 = 0x602e253c
0x88: V34 = EQ 0x602e253c V11
0x89: V35 = 0x162
0x8c: JUMPI 0x162 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x0, 0x82, 0x207, 0x61d, 0x776, 0x9e7]
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S0]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0xd]
Successors: [0x97, 0x9b]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 DUP1
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x8f: JUMPDEST 
0x90: V36 = CALLVALUE
0x92: V37 = ISZERO V36
0x93: V38 = 0x9b
0x96: JUMPI 0x9b V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x8f]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V39 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x9b
[0x9b:0xa3]
---
Predecessors: [0x8f]
Successors: [0x186]
---
0x9b JUMPDEST
0x9c POP
0x9d PUSH2 0xa4
0xa0 PUSH2 0x186
0xa3 JUMP
---
0x9b: JUMPDEST 
0x9d: V40 = 0xa4
0xa0: V41 = 0x186
0xa3: JUMP 0x186
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0xa4]
Exit stack: [V11, 0xa4]

================================

Block 0xa4
[0xa4:0xb5]
---
Predecessors: [0x186]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 DUP1
0xa8 MLOAD
0xa9 SWAP2
0xaa DUP3
0xab MSTORE
0xac MLOAD
0xad SWAP1
0xae DUP2
0xaf SWAP1
0xb0 SUB
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 SWAP1
0xb5 RETURN
---
0xa4: JUMPDEST 
0xa5: V42 = 0x40
0xa8: V43 = M[0x40]
0xab: M[V43] = V127
0xac: V44 = M[0x40]
0xb0: V45 = SUB V43 V44
0xb1: V46 = 0x20
0xb3: V47 = ADD 0x20 V45
0xb5: RETURN V44 V47
---
Entry stack: [V11, 0xa4, V127]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa4]

================================

Block 0xb6
[0xb6:0xbd]
---
Predecessors: [0x40]
Successors: [0xbe, 0xc2]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 DUP1
0xb9 ISZERO
0xba PUSH2 0xc2
0xbd JUMPI
---
0xb6: JUMPDEST 
0xb7: V48 = CALLVALUE
0xb9: V49 = ISZERO V48
0xba: V50 = 0xc2
0xbd: JUMPI 0xc2 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xbe
[0xbe:0xc1]
---
Predecessors: [0xb6]
Successors: []
---
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 REVERT
---
0xbe: V51 = 0x0
0xc1: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xc2
[0xc2:0xca]
---
Predecessors: [0xb6]
Successors: [0x18c]
---
0xc2 JUMPDEST
0xc3 POP
0xc4 PUSH2 0x8d
0xc7 PUSH2 0x18c
0xca JUMP
---
0xc2: JUMPDEST 
0xc4: V52 = 0x8d
0xc7: V53 = 0x18c
0xca: JUMP 0x18c
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0xcb
[0xcb:0xd2]
---
Predecessors: [0x4b]
Successors: [0xd3, 0xd7]
---
0xcb JUMPDEST
0xcc CALLVALUE
0xcd DUP1
0xce ISZERO
0xcf PUSH2 0xd7
0xd2 JUMPI
---
0xcb: JUMPDEST 
0xcc: V54 = CALLVALUE
0xce: V55 = ISZERO V54
0xcf: V56 = 0xd7
0xd2: JUMPI 0xd7 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xd3
[0xd3:0xd6]
---
Predecessors: [0xcb]
Successors: []
---
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 REVERT
---
0xd3: V57 = 0x0
0xd6: REVERT 0x0 0x0
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xd7
[0xd7:0xdf]
---
Predecessors: [0xcb]
Successors: [0x209]
---
0xd7 JUMPDEST
0xd8 POP
0xd9 PUSH2 0xe0
0xdc PUSH2 0x209
0xdf JUMP
---
0xd7: JUMPDEST 
0xd9: V58 = 0xe0
0xdc: V59 = 0x209
0xdf: JUMP 0x209
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: [0xe0]
Exit stack: [V11, 0xe0]

================================

Block 0xe0
[0xe0:0xf9]
---
Predecessors: [0x209]
Successors: []
---
0xe0 JUMPDEST
0xe1 PUSH1 0x40
0xe3 DUP1
0xe4 MLOAD
0xe5 PUSH5 0xffffffffff
0xeb SWAP1
0xec SWAP3
0xed AND
0xee DUP3
0xef MSTORE
0xf0 MLOAD
0xf1 SWAP1
0xf2 DUP2
0xf3 SWAP1
0xf4 SUB
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 RETURN
---
0xe0: JUMPDEST 
0xe1: V60 = 0x40
0xe4: V61 = M[0x40]
0xe5: V62 = 0xffffffffff
0xed: V63 = AND V185 0xffffffffff
0xef: M[V61] = V63
0xf0: V64 = M[0x40]
0xf4: V65 = SUB V61 V64
0xf5: V66 = 0x20
0xf7: V67 = ADD 0x20 V65
0xf9: RETURN V64 V67
---
Entry stack: [V11, 0xe0, V185]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe0]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x56]
Successors: [0x102, 0x106]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfa: JUMPDEST 
0xfb: V68 = CALLVALUE
0xfd: V69 = ISZERO V68
0xfe: V70 = 0x106
0x101: JUMPI 0x106 V69
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V68]
Exit stack: [V11, V68]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfa]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V71 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V11, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68]

================================

Block 0x106
[0x106:0x129]
---
Predecessors: [0xfa]
Successors: [0x216]
---
0x106 JUMPDEST
0x107 POP
0x108 PUSH2 0x8d
0x10b PUSH1 0x4
0x10d CALLDATALOAD
0x10e PUSH1 0x24
0x110 CALLDATALOAD
0x111 PUSH1 0x44
0x113 CALLDATALOAD
0x114 PUSH1 0x64
0x116 CALLDATALOAD
0x117 PUSH1 0x84
0x119 CALLDATALOAD
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 PUSH1 0xa4
0x124 CALLDATALOAD
0x125 AND
0x126 PUSH2 0x216
0x129 JUMP
---
0x106: JUMPDEST 
0x108: V72 = 0x8d
0x10b: V73 = 0x4
0x10d: V74 = CALLDATALOAD 0x4
0x10e: V75 = 0x24
0x110: V76 = CALLDATALOAD 0x24
0x111: V77 = 0x44
0x113: V78 = CALLDATALOAD 0x44
0x114: V79 = 0x64
0x116: V80 = CALLDATALOAD 0x64
0x117: V81 = 0x84
0x119: V82 = CALLDATALOAD 0x84
0x11a: V83 = 0x1
0x11c: V84 = 0xa0
0x11e: V85 = 0x2
0x120: V86 = EXP 0x2 0xa0
0x121: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x122: V88 = 0xa4
0x124: V89 = CALLDATALOAD 0xa4
0x125: V90 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x126: V91 = 0x216
0x129: JUMP 0x216
---
Entry stack: [V11, V68]
Stack pops: 1
Stack additions: [0x8d, V74, V76, V78, V80, V82, V90]
Exit stack: [V11, 0x8d, V74, V76, V78, V80, V82, V90]

================================

Block 0x12a
[0x12a:0x137]
---
Predecessors: [0x61]
Successors: [0x62b]
---
0x12a JUMPDEST
0x12b PUSH2 0x8d
0x12e PUSH1 0x4
0x130 CALLDATALOAD
0x131 PUSH1 0x24
0x133 CALLDATALOAD
0x134 PUSH2 0x62b
0x137 JUMP
---
0x12a: JUMPDEST 
0x12b: V92 = 0x8d
0x12e: V93 = 0x4
0x130: V94 = CALLDATALOAD 0x4
0x131: V95 = 0x24
0x133: V96 = CALLDATALOAD 0x24
0x134: V97 = 0x62b
0x137: JUMP 0x62b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d, V94, V96]
Exit stack: [V11, 0x8d, V94, V96]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0x6c]
Successors: [0x140, 0x144]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a DUP1
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x138: JUMPDEST 
0x139: V98 = CALLVALUE
0x13b: V99 = ISZERO V98
0x13c: V100 = 0x144
0x13f: JUMPI 0x144 V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V11, V98]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x138]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V101 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V11, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V98]

================================

Block 0x144
[0x144:0x14c]
---
Predecessors: [0x138]
Successors: [0x77f]
---
0x144 JUMPDEST
0x145 POP
0x146 PUSH2 0x8d
0x149 PUSH2 0x77f
0x14c JUMP
---
0x144: JUMPDEST 
0x146: V102 = 0x8d
0x149: V103 = 0x77f
0x14c: JUMP 0x77f
---
Entry stack: [V11, V98]
Stack pops: 1
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x14d
[0x14d:0x154]
---
Predecessors: [0x77]
Successors: [0x155, 0x159]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f DUP1
0x150 ISZERO
0x151 PUSH2 0x159
0x154 JUMPI
---
0x14d: JUMPDEST 
0x14e: V104 = CALLVALUE
0x150: V105 = ISZERO V104
0x151: V106 = 0x159
0x154: JUMPI 0x159 V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V11, V104]

================================

Block 0x155
[0x155:0x158]
---
Predecessors: [0x14d]
Successors: []
---
0x155 PUSH1 0x0
0x157 DUP1
0x158 REVERT
---
0x155: V107 = 0x0
0x158: REVERT 0x0 0x0
---
Entry stack: [V11, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V104]

================================

Block 0x159
[0x159:0x161]
---
Predecessors: [0x14d]
Successors: [0x7f1]
---
0x159 JUMPDEST
0x15a POP
0x15b PUSH2 0x8d
0x15e PUSH2 0x7f1
0x161 JUMP
---
0x159: JUMPDEST 
0x15b: V108 = 0x8d
0x15e: V109 = 0x7f1
0x161: JUMP 0x7f1
---
Entry stack: [V11, V104]
Stack pops: 1
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x162
[0x162:0x169]
---
Predecessors: [0x82]
Successors: [0x16a, 0x16e]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 DUP1
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x162: JUMPDEST 
0x163: V110 = CALLVALUE
0x165: V111 = ISZERO V110
0x166: V112 = 0x16e
0x169: JUMPI 0x16e V111
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V110]
Exit stack: [V11, V110]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x162]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V113 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V11, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V110]

================================

Block 0x16e
[0x16e:0x185]
---
Predecessors: [0x162]
Successors: [0x9ee]
---
0x16e JUMPDEST
0x16f POP
0x170 PUSH2 0x8d
0x173 PUSH1 0x4
0x175 CALLDATALOAD
0x176 PUSH1 0x24
0x178 CALLDATALOAD
0x179 PUSH1 0x44
0x17b CALLDATALOAD
0x17c PUSH1 0x64
0x17e CALLDATALOAD
0x17f PUSH1 0x84
0x181 CALLDATALOAD
0x182 PUSH2 0x9ee
0x185 JUMP
---
0x16e: JUMPDEST 
0x170: V114 = 0x8d
0x173: V115 = 0x4
0x175: V116 = CALLDATALOAD 0x4
0x176: V117 = 0x24
0x178: V118 = CALLDATALOAD 0x24
0x179: V119 = 0x44
0x17b: V120 = CALLDATALOAD 0x44
0x17c: V121 = 0x64
0x17e: V122 = CALLDATALOAD 0x64
0x17f: V123 = 0x84
0x181: V124 = CALLDATALOAD 0x84
0x182: V125 = 0x9ee
0x185: JUMP 0x9ee
---
Entry stack: [V11, V110]
Stack pops: 1
Stack additions: [0x8d, V116, V118, V120, V122, V124]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124]

================================

Block 0x186
[0x186:0x18b]
---
Predecessors: [0x9b]
Successors: [0xa4]
---
0x186 JUMPDEST
0x187 PUSH1 0x9
0x189 SLOAD
0x18a DUP2
0x18b JUMP
---
0x186: JUMPDEST 
0x187: V126 = 0x9
0x189: V127 = S[0x9]
0x18b: JUMP 0xa4
---
Entry stack: [V11, 0xa4]
Stack pops: 1
Stack additions: [S0, V127]
Exit stack: [V11, 0xa4, V127]

================================

Block 0x18c
[0x18c:0x19e]
---
Predecessors: [0xc2]
Successors: [0x19f, 0x1f0]
---
0x18c JUMPDEST
0x18d PUSH1 0x2
0x18f SLOAD
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 AND
0x199 CALLER
0x19a EQ
0x19b PUSH2 0x1f0
0x19e JUMPI
---
0x18c: JUMPDEST 
0x18d: V128 = 0x2
0x18f: V129 = S[0x2]
0x190: V130 = 0x1
0x192: V131 = 0xa0
0x194: V132 = 0x2
0x196: V133 = EXP 0x2 0xa0
0x197: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x199: V136 = CALLER
0x19a: V137 = EQ V136 V135
0x19b: V138 = 0x1f0
0x19e: JUMPI 0x1f0 V137
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x19f
[0x19f:0x1ef]
---
Predecessors: [0x18c]
Successors: []
---
0x19f PUSH1 0x40
0x1a1 DUP1
0x1a2 MLOAD
0x1a3 PUSH1 0xe5
0x1a5 PUSH1 0x2
0x1a7 EXP
0x1a8 PUSH3 0x461bcd
0x1ac MUL
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 PUSH1 0x4
0x1b3 DUP3
0x1b4 ADD
0x1b5 MSTORE
0x1b6 PUSH1 0x26
0x1b8 PUSH1 0x24
0x1ba DUP3
0x1bb ADD
0x1bc MSTORE
0x1bd PUSH1 0x0
0x1bf DUP1
0x1c0 MLOAD
0x1c1 PUSH1 0x20
0x1c3 PUSH2 0xbf0
0x1c6 DUP4
0x1c7 CODECOPY
0x1c8 DUP2
0x1c9 MLOAD
0x1ca SWAP2
0x1cb MSTORE
0x1cc PUSH1 0x44
0x1ce DUP3
0x1cf ADD
0x1d0 MSTORE
0x1d1 PUSH1 0x0
0x1d3 DUP1
0x1d4 MLOAD
0x1d5 PUSH1 0x20
0x1d7 PUSH2 0xbd0
0x1da DUP4
0x1db CODECOPY
0x1dc DUP2
0x1dd MLOAD
0x1de SWAP2
0x1df MSTORE
0x1e0 PUSH1 0x64
0x1e2 DUP3
0x1e3 ADD
0x1e4 MSTORE
0x1e5 SWAP1
0x1e6 MLOAD
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 SWAP1
0x1ea SUB
0x1eb PUSH1 0x84
0x1ed ADD
0x1ee SWAP1
0x1ef REVERT
---
0x19f: V139 = 0x40
0x1a2: V140 = M[0x40]
0x1a3: V141 = 0xe5
0x1a5: V142 = 0x2
0x1a7: V143 = EXP 0x2 0xe5
0x1a8: V144 = 0x461bcd
0x1ac: V145 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x1ae: M[V140] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1af: V146 = 0x20
0x1b1: V147 = 0x4
0x1b4: V148 = ADD V140 0x4
0x1b5: M[V148] = 0x20
0x1b6: V149 = 0x26
0x1b8: V150 = 0x24
0x1bb: V151 = ADD V140 0x24
0x1bc: M[V151] = 0x26
0x1bd: V152 = 0x0
0x1c0: V153 = M[0x0]
0x1c1: V154 = 0x20
0x1c3: V155 = 0xbf0
0x1c7: CODECOPY 0x0 0xbf0 0x20
0x1c9: V156 = M[0x0]
0x1cb: M[0x0] = V153
0x1cc: V157 = 0x44
0x1cf: V158 = ADD V140 0x44
0x1d0: M[V158] = V156
0x1d1: V159 = 0x0
0x1d4: V160 = M[0x0]
0x1d5: V161 = 0x20
0x1d7: V162 = 0xbd0
0x1db: CODECOPY 0x0 0xbd0 0x20
0x1dd: V163 = M[0x0]
0x1df: M[0x0] = V160
0x1e0: V164 = 0x64
0x1e3: V165 = ADD V140 0x64
0x1e4: M[V165] = V163
0x1e6: V166 = M[0x40]
0x1ea: V167 = SUB V140 V166
0x1eb: V168 = 0x84
0x1ed: V169 = ADD 0x84 V167
0x1ef: REVERT V166 V169
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x1f0
[0x1f0:0x206]
---
Predecessors: [0x18c]
Successors: [0xba6]
---
0x1f0 JUMPDEST
0x1f1 PUSH1 0x2
0x1f3 SLOAD
0x1f4 PUSH2 0x207
0x1f7 SWAP1
0x1f8 PUSH1 0x1
0x1fa PUSH1 0xa0
0x1fc PUSH1 0x2
0x1fe EXP
0x1ff SUB
0x200 AND
0x201 ADDRESS
0x202 BALANCE
0x203 PUSH2 0xba6
0x206 JUMP
---
0x1f0: JUMPDEST 
0x1f1: V170 = 0x2
0x1f3: V171 = S[0x2]
0x1f4: V172 = 0x207
0x1f8: V173 = 0x1
0x1fa: V174 = 0xa0
0x1fc: V175 = 0x2
0x1fe: V176 = EXP 0x2 0xa0
0x1ff: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x200: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x201: V179 = ADDRESS
0x202: V180 = BALANCE V179
0x203: V181 = 0xba6
0x206: JUMP 0xba6
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [0x207, V178, V180]
Exit stack: [V11, 0x8d, 0x207, V178, V180]

================================

Block 0x207
[0x207:0x208]
---
Predecessors: [0xba6]
Successors: [0x8d]
---
0x207 JUMPDEST
0x208 JUMP
---
0x207: JUMPDEST 
0x208: JUMP 0x8d
---
Entry stack: [V11, 0x8d]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x209
[0x209:0x215]
---
Predecessors: [0xd7]
Successors: [0xe0]
---
0x209 JUMPDEST
0x20a PUSH1 0x8
0x20c SLOAD
0x20d PUSH5 0xffffffffff
0x213 AND
0x214 DUP2
0x215 JUMP
---
0x209: JUMPDEST 
0x20a: V182 = 0x8
0x20c: V183 = S[0x8]
0x20d: V184 = 0xffffffffff
0x213: V185 = AND 0xffffffffff V183
0x215: JUMP 0xe0
---
Entry stack: [V11, 0xe0]
Stack pops: 1
Stack additions: [S0, V185]
Exit stack: [V11, 0xe0, V185]

================================

Block 0x216
[0x216:0x22e]
---
Predecessors: [0x106, 0xb83]
Successors: [0x22f, 0x280]
---
0x216 JUMPDEST
0x217 PUSH1 0x2
0x219 SLOAD
0x21a PUSH1 0x0
0x21c SWAP1
0x21d PUSH1 0x60
0x21f SWAP1
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 AND
0x229 CALLER
0x22a EQ
0x22b PUSH2 0x280
0x22e JUMPI
---
0x216: JUMPDEST 
0x217: V186 = 0x2
0x219: V187 = S[0x2]
0x21a: V188 = 0x0
0x21d: V189 = 0x60
0x220: V190 = 0x1
0x222: V191 = 0xa0
0x224: V192 = 0x2
0x226: V193 = EXP 0x2 0xa0
0x227: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x229: V196 = CALLER
0x22a: V197 = EQ V196 V195
0x22b: V198 = 0x280
0x22e: JUMPI 0x280 V197
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S7, {0x8d, 0x776}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S7, {0x8d, 0x776}, S5, S4, S3, S2, S1, S0, 0x0, 0x60]

================================

Block 0x22f
[0x22f:0x27f]
---
Predecessors: [0x216]
Successors: []
---
0x22f PUSH1 0x40
0x231 DUP1
0x232 MLOAD
0x233 PUSH1 0xe5
0x235 PUSH1 0x2
0x237 EXP
0x238 PUSH3 0x461bcd
0x23c MUL
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x20
0x241 PUSH1 0x4
0x243 DUP3
0x244 ADD
0x245 MSTORE
0x246 PUSH1 0x26
0x248 PUSH1 0x24
0x24a DUP3
0x24b ADD
0x24c MSTORE
0x24d PUSH1 0x0
0x24f DUP1
0x250 MLOAD
0x251 PUSH1 0x20
0x253 PUSH2 0xbf0
0x256 DUP4
0x257 CODECOPY
0x258 DUP2
0x259 MLOAD
0x25a SWAP2
0x25b MSTORE
0x25c PUSH1 0x44
0x25e DUP3
0x25f ADD
0x260 MSTORE
0x261 PUSH1 0x0
0x263 DUP1
0x264 MLOAD
0x265 PUSH1 0x20
0x267 PUSH2 0xbd0
0x26a DUP4
0x26b CODECOPY
0x26c DUP2
0x26d MLOAD
0x26e SWAP2
0x26f MSTORE
0x270 PUSH1 0x64
0x272 DUP3
0x273 ADD
0x274 MSTORE
0x275 SWAP1
0x276 MLOAD
0x277 SWAP1
0x278 DUP2
0x279 SWAP1
0x27a SUB
0x27b PUSH1 0x84
0x27d ADD
0x27e SWAP1
0x27f REVERT
---
0x22f: V199 = 0x40
0x232: V200 = M[0x40]
0x233: V201 = 0xe5
0x235: V202 = 0x2
0x237: V203 = EXP 0x2 0xe5
0x238: V204 = 0x461bcd
0x23c: V205 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x23e: M[V200] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x23f: V206 = 0x20
0x241: V207 = 0x4
0x244: V208 = ADD V200 0x4
0x245: M[V208] = 0x20
0x246: V209 = 0x26
0x248: V210 = 0x24
0x24b: V211 = ADD V200 0x24
0x24c: M[V211] = 0x26
0x24d: V212 = 0x0
0x250: V213 = M[0x0]
0x251: V214 = 0x20
0x253: V215 = 0xbf0
0x257: CODECOPY 0x0 0xbf0 0x20
0x259: V216 = M[0x0]
0x25b: M[0x0] = V213
0x25c: V217 = 0x44
0x25f: V218 = ADD V200 0x44
0x260: M[V218] = V216
0x261: V219 = 0x0
0x264: V220 = M[0x0]
0x265: V221 = 0x20
0x267: V222 = 0xbd0
0x26b: CODECOPY 0x0 0xbd0 0x20
0x26d: V223 = M[0x0]
0x26f: M[0x0] = V220
0x270: V224 = 0x64
0x273: V225 = ADD V200 0x64
0x274: M[V225] = V223
0x276: V226 = M[0x40]
0x27a: V227 = SUB V200 V226
0x27b: V228 = 0x84
0x27d: V229 = ADD 0x84 V227
0x27f: REVERT V226 V229
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60]

================================

Block 0x280
[0x280:0x2f4]
---
Predecessors: [0x216]
Successors: [0x2f5]
---
0x280 JUMPDEST
0x281 PUSH1 0x5
0x283 DUP6
0x284 SWAP1
0x285 SSTORE
0x286 PUSH1 0x6
0x288 DUP5
0x289 SWAP1
0x28a SSTORE
0x28b PUSH1 0x4
0x28d DUP7
0x28e SWAP1
0x28f SSTORE
0x290 PUSH8 0x1000000000000000
0x299 DUP8
0x29a ADD
0x29b PUSH1 0x3
0x29d SSTORE
0x29e PUSH1 0x1
0x2a0 DUP1
0x2a1 SLOAD
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 NOT
0x2b8 AND
0x2b9 PUSH1 0x1
0x2bb PUSH1 0xa0
0x2bd PUSH1 0x2
0x2bf EXP
0x2c0 SUB
0x2c1 DUP6
0x2c2 AND
0x2c3 OR
0x2c4 SWAP1
0x2c5 SSTORE
0x2c6 PUSH1 0x7
0x2c8 DUP9
0x2c9 SWAP1
0x2ca SSTORE
0x2cb PUSH1 0x40
0x2cd DUP1
0x2ce MLOAD
0x2cf PUSH1 0x20
0x2d1 DUP1
0x2d2 DUP3
0x2d3 ADD
0x2d4 DUP12
0x2d5 SWAP1
0x2d6 MSTORE
0x2d7 DUP3
0x2d8 MLOAD
0x2d9 DUP1
0x2da DUP4
0x2db SUB
0x2dc DUP3
0x2dd ADD
0x2de DUP2
0x2df MSTORE
0x2e0 SWAP2
0x2e1 DUP4
0x2e2 ADD
0x2e3 SWAP3
0x2e4 DUP4
0x2e5 SWAP1
0x2e6 MSTORE
0x2e7 DUP2
0x2e8 MLOAD
0x2e9 DUP10
0x2ea SWAP4
0x2eb SWAP2
0x2ec DUP3
0x2ed SWAP2
0x2ee SWAP1
0x2ef DUP5
0x2f0 ADD
0x2f1 SWAP1
0x2f2 DUP1
0x2f3 DUP4
0x2f4 DUP4
---
0x280: JUMPDEST 
0x281: V230 = 0x5
0x285: S[0x5] = S4
0x286: V231 = 0x6
0x28a: S[0x6] = S3
0x28b: V232 = 0x4
0x28f: S[0x4] = S5
0x290: V233 = 0x1000000000000000
0x29a: V234 = ADD S6 0x1000000000000000
0x29b: V235 = 0x3
0x29d: S[0x3] = V234
0x29e: V236 = 0x1
0x2a1: V237 = S[0x1]
0x2a2: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V239 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: V240 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V237
0x2b9: V241 = 0x1
0x2bb: V242 = 0xa0
0x2bd: V243 = 0x2
0x2bf: V244 = EXP 0x2 0xa0
0x2c0: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c2: V246 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: V247 = OR V246 V240
0x2c5: S[0x1] = V247
0x2c6: V248 = 0x7
0x2ca: S[0x7] = S7
0x2cb: V249 = 0x40
0x2ce: V250 = M[0x40]
0x2cf: V251 = 0x20
0x2d3: V252 = ADD V250 0x20
0x2d6: M[V252] = S7
0x2d8: V253 = M[0x40]
0x2db: V254 = SUB V250 V253
0x2dd: V255 = ADD 0x20 V254
0x2df: M[V253] = V255
0x2e2: V256 = ADD 0x40 V250
0x2e6: M[0x40] = V256
0x2e8: V257 = M[V253]
0x2f0: V258 = ADD V253 0x20
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, S5, V253, V256, V256, V258, V257, V257, V256, V258]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60, S5, V253, V256, V256, V258, V257, V257, V256, V258]

================================

Block 0x2f5
[0x2f5:0x2fd]
---
Predecessors: [0x280, 0x2fe]
Successors: [0x2fe, 0x314]
---
0x2f5 JUMPDEST
0x2f6 PUSH1 0x20
0x2f8 DUP4
0x2f9 LT
0x2fa PUSH2 0x314
0x2fd JUMPI
---
0x2f5: JUMPDEST 
0x2f6: V259 = 0x20
0x2f9: V260 = LT S2 0x20
0x2fa: V261 = 0x314
0x2fd: JUMPI 0x314 V260
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S18, {0x8d, 0x776}, S16, S15, S14, S13, S12, S11, 0x0, 0x60, S8, V253, V256, V256, V258, V257, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S18, {0x8d, 0x776}, S16, S15, S14, S13, S12, S11, 0x0, 0x60, S8, V253, V256, V256, V258, V257, S2, S1, S0]

================================

Block 0x2fe
[0x2fe:0x313]
---
Predecessors: [0x2f5]
Successors: [0x2f5]
---
0x2fe DUP1
0x2ff MLOAD
0x300 DUP3
0x301 MSTORE
0x302 PUSH1 0x1f
0x304 NOT
0x305 SWAP1
0x306 SWAP3
0x307 ADD
0x308 SWAP2
0x309 PUSH1 0x20
0x30b SWAP2
0x30c DUP3
0x30d ADD
0x30e SWAP2
0x30f ADD
0x310 PUSH2 0x2f5
0x313 JUMP
---
0x2ff: V262 = M[S0]
0x301: M[S1] = V262
0x302: V263 = 0x1f
0x304: V264 = NOT 0x1f
0x307: V265 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x309: V266 = 0x20
0x30d: V267 = ADD 0x20 S1
0x30f: V268 = ADD 0x20 S0
0x310: V269 = 0x2f5
0x313: JUMP 0x2f5
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S18, {0x8d, 0x776}, S16, S15, S14, S13, S12, S11, 0x0, 0x60, S8, V253, V256, V256, V258, V257, S2, S1, S0]
Stack pops: 3
Stack additions: [V265, V267, V268]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S18, {0x8d, 0x776}, S16, S15, S14, S13, S12, S11, 0x0, 0x60, S8, V253, V256, V256, V258, V257, V265, V267, V268]

================================

Block 0x314
[0x314:0x34c]
---
Predecessors: [0x2f5]
Successors: [0x34d, 0x351]
---
0x314 JUMPDEST
0x315 PUSH1 0x1
0x317 DUP4
0x318 PUSH1 0x20
0x31a SUB
0x31b PUSH2 0x100
0x31e EXP
0x31f SUB
0x320 DUP1
0x321 NOT
0x322 DUP3
0x323 MLOAD
0x324 AND
0x325 DUP2
0x326 DUP5
0x327 MLOAD
0x328 AND
0x329 DUP1
0x32a DUP3
0x32b OR
0x32c DUP6
0x32d MSTORE
0x32e POP
0x32f POP
0x330 POP
0x331 POP
0x332 POP
0x333 POP
0x334 SWAP1
0x335 POP
0x336 ADD
0x337 SWAP2
0x338 POP
0x339 POP
0x33a PUSH1 0x40
0x33c MLOAD
0x33d DUP1
0x33e SWAP2
0x33f SUB
0x340 SWAP1
0x341 SHA3
0x342 PUSH1 0x1
0x344 SWAP1
0x345 DIV
0x346 EQ
0x347 ISZERO
0x348 ISZERO
0x349 PUSH2 0x351
0x34c JUMPI
---
0x314: JUMPDEST 
0x315: V270 = 0x1
0x318: V271 = 0x20
0x31a: V272 = SUB 0x20 S2
0x31b: V273 = 0x100
0x31e: V274 = EXP 0x100 V272
0x31f: V275 = SUB V274 0x1
0x321: V276 = NOT V275
0x323: V277 = M[S0]
0x324: V278 = AND V277 V276
0x327: V279 = M[S1]
0x328: V280 = AND V279 V275
0x32b: V281 = OR V278 V280
0x32d: M[S1] = V281
0x336: V282 = ADD V257 V256
0x33a: V283 = 0x40
0x33c: V284 = M[0x40]
0x33f: V285 = SUB V282 V284
0x341: V286 = SHA3 V284 V285
0x342: V287 = 0x1
0x345: V288 = DIV V286 0x1
0x346: V289 = EQ V288 S8
0x347: V290 = ISZERO V289
0x348: V291 = ISZERO V290
0x349: V292 = 0x351
0x34c: JUMPI 0x351 V291
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S18, {0x8d, 0x776}, S16, S15, S14, S13, S12, S11, 0x0, 0x60, S8, V253, V256, V256, V258, V257, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S18, {0x8d, 0x776}, S16, S15, S14, S13, S12, S11, 0x0, 0x60]

================================

Block 0x34d
[0x34d:0x350]
---
Predecessors: [0x314]
Successors: []
---
0x34d PUSH1 0x0
0x34f DUP1
0x350 REVERT
---
0x34d: V293 = 0x0
0x350: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60]

================================

Block 0x351
[0x351:0x35b]
---
Predecessors: [0x314]
Successors: [0x35c, 0x3ab]
---
0x351 JUMPDEST
0x352 PUSH1 0x3
0x354 SLOAD
0x355 NUMBER
0x356 GT
0x357 ISZERO
0x358 PUSH2 0x3ab
0x35b JUMPI
---
0x351: JUMPDEST 
0x352: V294 = 0x3
0x354: V295 = S[0x3]
0x355: V296 = NUMBER
0x356: V297 = GT V296 V295
0x357: V298 = ISZERO V297
0x358: V299 = 0x3ab
0x35b: JUMPI 0x3ab V298
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60]

================================

Block 0x35c
[0x35c:0x3aa]
---
Predecessors: [0x351]
Successors: []
---
0x35c PUSH1 0x40
0x35e DUP1
0x35f MLOAD
0x360 PUSH1 0xe5
0x362 PUSH1 0x2
0x364 EXP
0x365 PUSH3 0x461bcd
0x369 MUL
0x36a DUP2
0x36b MSTORE
0x36c PUSH1 0x20
0x36e PUSH1 0x4
0x370 DUP3
0x371 ADD
0x372 MSTORE
0x373 PUSH1 0x13
0x375 PUSH1 0x24
0x377 DUP3
0x378 ADD
0x379 MSTORE
0x37a PUSH32 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x39b PUSH1 0x44
0x39d DUP3
0x39e ADD
0x39f MSTORE
0x3a0 SWAP1
0x3a1 MLOAD
0x3a2 SWAP1
0x3a3 DUP2
0x3a4 SWAP1
0x3a5 SUB
0x3a6 PUSH1 0x64
0x3a8 ADD
0x3a9 SWAP1
0x3aa REVERT
---
0x35c: V300 = 0x40
0x35f: V301 = M[0x40]
0x360: V302 = 0xe5
0x362: V303 = 0x2
0x364: V304 = EXP 0x2 0xe5
0x365: V305 = 0x461bcd
0x369: V306 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x36b: M[V301] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x36c: V307 = 0x20
0x36e: V308 = 0x4
0x371: V309 = ADD V301 0x4
0x372: M[V309] = 0x20
0x373: V310 = 0x13
0x375: V311 = 0x24
0x378: V312 = ADD V301 0x24
0x379: M[V312] = 0x13
0x37a: V313 = 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x39b: V314 = 0x44
0x39e: V315 = ADD V301 0x44
0x39f: M[V315] = 0x436f6d6d69742068617320657870697265642e00000000000000000000000000
0x3a1: V316 = M[0x40]
0x3a5: V317 = SUB V301 V316
0x3a6: V318 = 0x64
0x3a8: V319 = ADD 0x64 V317
0x3aa: REVERT V316 V319
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60]

================================

Block 0x3ab
[0x3ab:0x412]
---
Predecessors: [0x351]
Successors: [0x413]
---
0x3ab JUMPDEST
0x3ac PUSH1 0x3
0x3ae SLOAD
0x3af PUSH1 0x4
0x3b1 SLOAD
0x3b2 PUSH1 0x40
0x3b4 MLOAD
0x3b5 PUSH1 0x20
0x3b7 ADD
0x3b8 DUP1
0x3b9 DUP4
0x3ba PUSH5 0xffffffffff
0x3c0 AND
0x3c1 PUSH5 0xffffffffff
0x3c7 AND
0x3c8 PUSH28 0x1000000000000000000000000000000000000000000000000000000
0x3e5 MUL
0x3e6 DUP2
0x3e7 MSTORE
0x3e8 PUSH1 0x5
0x3ea ADD
0x3eb DUP3
0x3ec DUP2
0x3ed MSTORE
0x3ee PUSH1 0x20
0x3f0 ADD
0x3f1 SWAP3
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 PUSH1 0x20
0x3fa DUP2
0x3fb DUP4
0x3fc SUB
0x3fd SUB
0x3fe DUP2
0x3ff MSTORE
0x400 SWAP1
0x401 PUSH1 0x40
0x403 MSTORE
0x404 PUSH1 0x40
0x406 MLOAD
0x407 DUP1
0x408 DUP3
0x409 DUP1
0x40a MLOAD
0x40b SWAP1
0x40c PUSH1 0x20
0x40e ADD
0x40f SWAP1
0x410 DUP1
0x411 DUP4
0x412 DUP4
---
0x3ab: JUMPDEST 
0x3ac: V320 = 0x3
0x3ae: V321 = S[0x3]
0x3af: V322 = 0x4
0x3b1: V323 = S[0x4]
0x3b2: V324 = 0x40
0x3b4: V325 = M[0x40]
0x3b5: V326 = 0x20
0x3b7: V327 = ADD 0x20 V325
0x3ba: V328 = 0xffffffffff
0x3c0: V329 = AND 0xffffffffff V321
0x3c1: V330 = 0xffffffffff
0x3c7: V331 = AND 0xffffffffff V329
0x3c8: V332 = 0x1000000000000000000000000000000000000000000000000000000
0x3e5: V333 = MUL 0x1000000000000000000000000000000000000000000000000000000 V331
0x3e7: M[V327] = V333
0x3e8: V334 = 0x5
0x3ea: V335 = ADD 0x5 V327
0x3ed: M[V335] = V323
0x3ee: V336 = 0x20
0x3f0: V337 = ADD 0x20 V335
0x3f5: V338 = 0x40
0x3f7: V339 = M[0x40]
0x3f8: V340 = 0x20
0x3fc: V341 = SUB V337 V339
0x3fd: V342 = SUB V341 0x20
0x3ff: M[V339] = V342
0x401: V343 = 0x40
0x403: M[0x40] = V337
0x404: V344 = 0x40
0x406: V345 = M[0x40]
0x40a: V346 = M[V339]
0x40c: V347 = 0x20
0x40e: V348 = ADD 0x20 V339
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60]
Stack pops: 0
Stack additions: [V339, V345, V345, V348, V346, V346, V345, V348]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, 0x0, 0x60, V339, V345, V345, V348, V346, V346, V345, V348]

================================

Block 0x413
[0x413:0x41b]
---
Predecessors: [0x3ab, 0x41c]
Successors: [0x41c, 0x432]
---
0x413 JUMPDEST
0x414 PUSH1 0x20
0x416 DUP4
0x417 LT
0x418 PUSH2 0x432
0x41b JUMPI
---
0x413: JUMPDEST 
0x414: V349 = 0x20
0x417: V350 = LT S2 0x20
0x418: V351 = 0x432
0x41b: JUMPI 0x432 V350
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S17, {0x8d, 0x776}, S15, S14, S13, S12, S11, S10, 0x0, 0x60, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S17, {0x8d, 0x776}, S15, S14, S13, S12, S11, S10, 0x0, 0x60, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x41c
[0x41c:0x431]
---
Predecessors: [0x413]
Successors: [0x413]
---
0x41c DUP1
0x41d MLOAD
0x41e DUP3
0x41f MSTORE
0x420 PUSH1 0x1f
0x422 NOT
0x423 SWAP1
0x424 SWAP3
0x425 ADD
0x426 SWAP2
0x427 PUSH1 0x20
0x429 SWAP2
0x42a DUP3
0x42b ADD
0x42c SWAP2
0x42d ADD
0x42e PUSH2 0x413
0x431 JUMP
---
0x41d: V352 = M[S0]
0x41f: M[S1] = V352
0x420: V353 = 0x1f
0x422: V354 = NOT 0x1f
0x425: V355 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x427: V356 = 0x20
0x42b: V357 = ADD 0x20 S1
0x42d: V358 = ADD 0x20 S0
0x42e: V359 = 0x413
0x431: JUMP 0x413
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S17, {0x8d, 0x776}, S15, S14, S13, S12, S11, S10, 0x0, 0x60, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V355, V357, V358]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S17, {0x8d, 0x776}, S15, S14, S13, S12, S11, S10, 0x0, 0x60, S7, S6, S5, S4, S3, V355, V357, V358]

================================

Block 0x432
[0x432:0x4ab]
---
Predecessors: [0x413]
Successors: [0x4ac, 0x4b5]
---
0x432 JUMPDEST
0x433 MLOAD
0x434 DUP2
0x435 MLOAD
0x436 PUSH1 0x20
0x438 SWAP4
0x439 DUP5
0x43a SUB
0x43b PUSH2 0x100
0x43e EXP
0x43f PUSH1 0x0
0x441 NOT
0x442 ADD
0x443 DUP1
0x444 NOT
0x445 SWAP1
0x446 SWAP3
0x447 AND
0x448 SWAP2
0x449 AND
0x44a OR
0x44b SWAP1
0x44c MSTORE
0x44d PUSH1 0x40
0x44f DUP1
0x450 MLOAD
0x451 SWAP3
0x452 SWAP1
0x453 SWAP5
0x454 ADD
0x455 DUP3
0x456 SWAP1
0x457 SUB
0x458 DUP3
0x459 SHA3
0x45a PUSH1 0x5
0x45c SLOAD
0x45d PUSH1 0x6
0x45f SLOAD
0x460 PUSH1 0x0
0x462 DUP1
0x463 DUP7
0x464 MSTORE
0x465 DUP6
0x466 DUP6
0x467 ADD
0x468 DUP1
0x469 DUP10
0x46a MSTORE
0x46b DUP5
0x46c SWAP1
0x46d MSTORE
0x46e PUSH1 0x1b
0x470 DUP7
0x471 DUP10
0x472 ADD
0x473 MSTORE
0x474 PUSH1 0x60
0x476 DUP7
0x477 ADD
0x478 SWAP3
0x479 SWAP1
0x47a SWAP3
0x47b MSTORE
0x47c PUSH1 0x80
0x47e DUP6
0x47f ADD
0x480 MSTORE
0x481 SWAP5
0x482 MLOAD
0x483 SWAP1
0x484 SWAP9
0x485 POP
0x486 PUSH1 0x1
0x488 SWAP7
0x489 POP
0x48a PUSH1 0xa0
0x48c DUP1
0x48d DUP5
0x48e ADD
0x48f SWAP7
0x490 POP
0x491 SWAP2
0x492 SWAP5
0x493 PUSH1 0x1f
0x495 NOT
0x496 DUP3
0x497 ADD
0x498 SWAP5
0x499 POP
0x49a SWAP3
0x49b DUP2
0x49c SWAP1
0x49d SUB
0x49e SWAP1
0x49f SWAP2
0x4a0 ADD
0x4a1 SWAP2
0x4a2 DUP7
0x4a3 GAS
0x4a4 CALL
0x4a5 ISZERO
0x4a6 DUP1
0x4a7 ISZERO
0x4a8 PUSH2 0x4b5
0x4ab JUMPI
---
0x432: JUMPDEST 
0x433: V360 = M[S0]
0x435: V361 = M[S1]
0x436: V362 = 0x20
0x43a: V363 = SUB 0x20 S2
0x43b: V364 = 0x100
0x43e: V365 = EXP 0x100 V363
0x43f: V366 = 0x0
0x441: V367 = NOT 0x0
0x442: V368 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V365
0x444: V369 = NOT V368
0x447: V370 = AND V360 V369
0x449: V371 = AND V368 V361
0x44a: V372 = OR V371 V370
0x44c: M[S1] = V372
0x44d: V373 = 0x40
0x450: V374 = M[0x40]
0x454: V375 = ADD S5 S3
0x457: V376 = SUB V375 V374
0x459: V377 = SHA3 V374 V376
0x45a: V378 = 0x5
0x45c: V379 = S[0x5]
0x45d: V380 = 0x6
0x45f: V381 = S[0x6]
0x460: V382 = 0x0
0x464: M[V374] = 0x0
0x467: V383 = ADD 0x20 V374
0x46a: M[0x40] = V383
0x46d: M[V383] = V377
0x46e: V384 = 0x1b
0x472: V385 = ADD 0x40 V374
0x473: M[V385] = 0x1b
0x474: V386 = 0x60
0x477: V387 = ADD V374 0x60
0x47b: M[V387] = V379
0x47c: V388 = 0x80
0x47f: V389 = ADD V374 0x80
0x480: M[V389] = V381
0x482: V390 = M[0x40]
0x486: V391 = 0x1
0x48a: V392 = 0xa0
0x48e: V393 = ADD V374 0xa0
0x493: V394 = 0x1f
0x495: V395 = NOT 0x1f
0x497: V396 = ADD V390 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x49d: V397 = SUB V374 V390
0x4a0: V398 = ADD 0xa0 V397
0x4a3: V399 = GAS
0x4a4: V400 = CALL V399 0x1 0x0 V390 V398 V396 0x20
0x4a5: V401 = ISZERO V400
0x4a7: V402 = ISZERO V401
0x4a8: V403 = 0x4b5
0x4ab: JUMPI 0x4b5 V402
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S17, {0x8d, 0x776}, S15, S14, S13, S12, S11, S10, 0x0, 0x60, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [V377, S8, 0x1, V393, V401]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S17, {0x8d, 0x776}, S15, S14, S13, S12, S11, S10, V377, 0x60, 0x1, V393, V401]

================================

Block 0x4ac
[0x4ac:0x4b4]
---
Predecessors: [0x432]
Successors: []
---
0x4ac RETURNDATASIZE
0x4ad PUSH1 0x0
0x4af DUP1
0x4b0 RETURNDATACOPY
0x4b1 RETURNDATASIZE
0x4b2 PUSH1 0x0
0x4b4 REVERT
---
0x4ac: V404 = RETURNDATASIZE
0x4ad: V405 = 0x0
0x4b0: RETURNDATACOPY 0x0 0x0 V404
0x4b1: V406 = RETURNDATASIZE
0x4b2: V407 = 0x0
0x4b4: REVERT 0x0 V406
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S12, {0x8d, 0x776}, S10, S9, S8, S7, S6, S5, V377, 0x60, 0x1, V393, V401]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S12, {0x8d, 0x776}, S10, S9, S8, S7, S6, S5, V377, 0x60, 0x1, V393, V401]

================================

Block 0x4b5
[0x4b5:0x4d6]
---
Predecessors: [0x432]
Successors: [0x4d7, 0x526]
---
0x4b5 JUMPDEST
0x4b6 POP
0x4b7 POP
0x4b8 PUSH1 0x40
0x4ba MLOAD
0x4bb PUSH1 0x1f
0x4bd NOT
0x4be ADD
0x4bf MLOAD
0x4c0 PUSH1 0x1
0x4c2 SLOAD
0x4c3 PUSH1 0x1
0x4c5 PUSH1 0xa0
0x4c7 PUSH1 0x2
0x4c9 EXP
0x4ca SUB
0x4cb SWAP1
0x4cc DUP2
0x4cd AND
0x4ce SWAP2
0x4cf AND
0x4d0 EQ
0x4d1 SWAP1
0x4d2 POP
0x4d3 PUSH2 0x526
0x4d6 JUMPI
---
0x4b5: JUMPDEST 
0x4b8: V408 = 0x40
0x4ba: V409 = M[0x40]
0x4bb: V410 = 0x1f
0x4bd: V411 = NOT 0x1f
0x4be: V412 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0 V409
0x4bf: V413 = M[V412]
0x4c0: V414 = 0x1
0x4c2: V415 = S[0x1]
0x4c3: V416 = 0x1
0x4c5: V417 = 0xa0
0x4c7: V418 = 0x2
0x4c9: V419 = EXP 0x2 0xa0
0x4ca: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cd: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x4cf: V422 = AND V413 0xffffffffffffffffffffffffffffffffffffffff
0x4d0: V423 = EQ V422 V421
0x4d3: V424 = 0x526
0x4d6: JUMPI 0x526 V423
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S12, {0x8d, 0x776}, S10, S9, S8, S7, S6, S5, V377, 0x60, 0x1, V393, V401]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S12, {0x8d, 0x776}, S10, S9, S8, S7, S6, S5, V377, 0x60]

================================

Block 0x4d7
[0x4d7:0x525]
---
Predecessors: [0x4b5]
Successors: []
---
0x4d7 PUSH1 0x40
0x4d9 DUP1
0x4da MLOAD
0x4db PUSH1 0xe5
0x4dd PUSH1 0x2
0x4df EXP
0x4e0 PUSH3 0x461bcd
0x4e4 MUL
0x4e5 DUP2
0x4e6 MSTORE
0x4e7 PUSH1 0x20
0x4e9 PUSH1 0x4
0x4eb DUP3
0x4ec ADD
0x4ed MSTORE
0x4ee PUSH1 0x1d
0x4f0 PUSH1 0x24
0x4f2 DUP3
0x4f3 ADD
0x4f4 MSTORE
0x4f5 PUSH32 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x516 PUSH1 0x44
0x518 DUP3
0x519 ADD
0x51a MSTORE
0x51b SWAP1
0x51c MLOAD
0x51d SWAP1
0x51e DUP2
0x51f SWAP1
0x520 SUB
0x521 PUSH1 0x64
0x523 ADD
0x524 SWAP1
0x525 REVERT
---
0x4d7: V425 = 0x40
0x4da: V426 = M[0x40]
0x4db: V427 = 0xe5
0x4dd: V428 = 0x2
0x4df: V429 = EXP 0x2 0xe5
0x4e0: V430 = 0x461bcd
0x4e4: V431 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x4e6: M[V426] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4e7: V432 = 0x20
0x4e9: V433 = 0x4
0x4ec: V434 = ADD V426 0x4
0x4ed: M[V434] = 0x20
0x4ee: V435 = 0x1d
0x4f0: V436 = 0x24
0x4f3: V437 = ADD V426 0x24
0x4f4: M[V437] = 0x1d
0x4f5: V438 = 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x516: V439 = 0x44
0x519: V440 = ADD V426 0x44
0x51a: M[V440] = 0x4543445341207369676e6174757265206973206e6f742076616c69642e000000
0x51c: V441 = M[0x40]
0x520: V442 = SUB V426 V441
0x521: V443 = 0x64
0x523: V444 = ADD 0x64 V442
0x525: REVERT V441 V444
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, S1, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, S1, 0x60]

================================

Block 0x526
[0x526:0x556]
---
Predecessors: [0x4b5]
Successors: [0x557, 0x558]
---
0x526 JUMPDEST
0x527 PUSH1 0x40
0x529 DUP1
0x52a MLOAD
0x52b PUSH1 0x1
0x52d DUP1
0x52e DUP3
0x52f MSTORE
0x530 DUP2
0x531 DUP4
0x532 ADD
0x533 SWAP1
0x534 SWAP3
0x535 MSTORE
0x536 SWAP1
0x537 PUSH1 0x20
0x539 DUP1
0x53a DUP4
0x53b ADD
0x53c SWAP1
0x53d DUP1
0x53e CODESIZE
0x53f DUP4
0x540 CODECOPY
0x541 ADD
0x542 SWAP1
0x543 POP
0x544 POP
0x545 SWAP1
0x546 POP
0x547 PUSH1 0x4
0x549 SLOAD
0x54a DUP2
0x54b PUSH1 0x0
0x54d DUP2
0x54e MLOAD
0x54f DUP2
0x550 LT
0x551 ISZERO
0x552 ISZERO
0x553 PUSH2 0x558
0x556 JUMPI
---
0x526: JUMPDEST 
0x527: V445 = 0x40
0x52a: V446 = M[0x40]
0x52b: V447 = 0x1
0x52f: M[V446] = 0x1
0x532: V448 = ADD 0x40 V446
0x535: M[0x40] = V448
0x537: V449 = 0x20
0x53b: V450 = ADD V446 0x20
0x53e: V451 = CODESIZE
0x540: CODECOPY V450 V451 0x20
0x541: V452 = ADD 0x20 V450
0x547: V453 = 0x4
0x549: V454 = S[0x4]
0x54b: V455 = 0x0
0x54e: V456 = M[V446]
0x550: V457 = LT 0x0 V456
0x551: V458 = ISZERO V457
0x552: V459 = ISZERO V458
0x553: V460 = 0x558
0x556: JUMPI 0x558 V459
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, S1, 0x60]
Stack pops: 1
Stack additions: [V446, V454, V446, 0x0]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S9, {0x8d, 0x776}, S7, S6, S5, S4, S3, S2, S1, V446, V454, V446, 0x0]

================================

Block 0x557
[0x557:0x557]
---
Predecessors: [0x526]
Successors: []
---
0x557 INVALID
---
0x557: INVALID 
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S12, {0x8d, 0x776}, S10, S9, S8, S7, S6, S5, S4, V446, V454, V446, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S12, {0x8d, 0x776}, S10, S9, S8, S7, S6, S5, S4, V446, V454, V446, 0x0]

================================

Block 0x558
[0x558:0x5cb]
---
Predecessors: [0x526]
Successors: [0x5cc]
---
0x558 JUMPDEST
0x559 PUSH1 0x20
0x55b SWAP1
0x55c DUP2
0x55d MUL
0x55e SWAP1
0x55f SWAP2
0x560 ADD
0x561 DUP2
0x562 ADD
0x563 SWAP2
0x564 SWAP1
0x565 SWAP2
0x566 MSTORE
0x567 PUSH1 0x0
0x569 DUP1
0x56a SLOAD
0x56b PUSH1 0x40
0x56d MLOAD
0x56e PUSH32 0xef11554200000000000000000000000000000000000000000000000000000000
0x58f DUP2
0x590 MSTORE
0x591 PUSH1 0x4
0x593 DUP2
0x594 ADD
0x595 DUP5
0x596 DUP2
0x597 MSTORE
0x598 DUP6
0x599 MLOAD
0x59a PUSH1 0x24
0x59c DUP4
0x59d ADD
0x59e MSTORE
0x59f DUP6
0x5a0 MLOAD
0x5a1 PUSH1 0x1
0x5a3 PUSH1 0xa0
0x5a5 PUSH1 0x2
0x5a7 EXP
0x5a8 SUB
0x5a9 SWAP1
0x5aa SWAP4
0x5ab AND
0x5ac SWAP5
0x5ad PUSH4 0xef115542
0x5b2 SWAP5
0x5b3 DUP8
0x5b4 SWAP5
0x5b5 SWAP3
0x5b6 SWAP4
0x5b7 DUP5
0x5b8 SWAP4
0x5b9 PUSH1 0x44
0x5bb SWAP1
0x5bc SWAP2
0x5bd ADD
0x5be SWAP3
0x5bf DUP7
0x5c0 DUP2
0x5c1 ADD
0x5c2 SWAP3
0x5c3 SWAP2
0x5c4 MUL
0x5c5 SWAP1
0x5c6 DUP2
0x5c7 SWAP1
0x5c8 DUP5
0x5c9 SWAP1
0x5ca DUP5
0x5cb SWAP1
---
0x558: JUMPDEST 
0x559: V461 = 0x20
0x55d: V462 = MUL 0x20 0x0
0x560: V463 = ADD V446 0x0
0x562: V464 = ADD 0x20 V463
0x566: M[V464] = V454
0x567: V465 = 0x0
0x56a: V466 = S[0x0]
0x56b: V467 = 0x40
0x56d: V468 = M[0x40]
0x56e: V469 = 0xef11554200000000000000000000000000000000000000000000000000000000
0x590: M[V468] = 0xef11554200000000000000000000000000000000000000000000000000000000
0x591: V470 = 0x4
0x594: V471 = ADD V468 0x4
0x597: M[V471] = 0x20
0x599: V472 = M[V446]
0x59a: V473 = 0x24
0x59d: V474 = ADD V468 0x24
0x59e: M[V474] = V472
0x5a0: V475 = M[V446]
0x5a1: V476 = 0x1
0x5a3: V477 = 0xa0
0x5a5: V478 = 0x2
0x5a7: V479 = EXP 0x2 0xa0
0x5a8: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ab: V481 = AND V466 0xffffffffffffffffffffffffffffffffffffffff
0x5ad: V482 = 0xef115542
0x5b9: V483 = 0x44
0x5bd: V484 = ADD V468 0x44
0x5c1: V485 = ADD 0x20 V446
0x5c4: V486 = MUL V475 0x20
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S12, {0x8d, 0x776}, S10, S9, S8, S7, S6, S5, S4, V446, V454, V446, 0x0]
Stack pops: 4
Stack additions: [S3, V481, 0xef115542, S3, V471, V471, V484, V485, V486, V486, V484, V485, 0x0]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S12, {0x8d, 0x776}, S10, S9, S8, S7, S6, S5, S4, V446, V481, 0xef115542, V446, V471, V471, V484, V485, V486, V486, V484, V485, 0x0]

================================

Block 0x5cc
[0x5cc:0x5d4]
---
Predecessors: [0x558, 0x5d5]
Successors: [0x5d5, 0x5e4]
---
0x5cc JUMPDEST
0x5cd DUP4
0x5ce DUP2
0x5cf LT
0x5d0 ISZERO
0x5d1 PUSH2 0x5e4
0x5d4 JUMPI
---
0x5cc: JUMPDEST 
0x5cf: V487 = LT S0 S3
0x5d0: V488 = ISZERO V487
0x5d1: V489 = 0x5e4
0x5d4: JUMPI 0x5e4 V488
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S21, {0x8d, 0x776}, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xef115542, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S21, {0x8d, 0x776}, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xef115542, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5d5
[0x5d5:0x5e3]
---
Predecessors: [0x5cc]
Successors: [0x5cc]
---
0x5d5 DUP2
0x5d6 DUP2
0x5d7 ADD
0x5d8 MLOAD
0x5d9 DUP4
0x5da DUP3
0x5db ADD
0x5dc MSTORE
0x5dd PUSH1 0x20
0x5df ADD
0x5e0 PUSH2 0x5cc
0x5e3 JUMP
---
0x5d7: V490 = ADD S0 S1
0x5d8: V491 = M[V490]
0x5db: V492 = ADD S0 S2
0x5dc: M[V492] = V491
0x5dd: V493 = 0x20
0x5df: V494 = ADD 0x20 S0
0x5e0: V495 = 0x5cc
0x5e3: JUMP 0x5cc
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S21, {0x8d, 0x776}, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xef115542, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V494]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S21, {0x8d, 0x776}, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xef115542, S9, S8, S7, S6, S5, S4, S3, S2, S1, V494]

================================

Block 0x5e4
[0x5e4:0x604]
---
Predecessors: [0x5cc]
Successors: [0x605, 0x609]
---
0x5e4 JUMPDEST
0x5e5 POP
0x5e6 POP
0x5e7 POP
0x5e8 POP
0x5e9 SWAP1
0x5ea POP
0x5eb ADD
0x5ec SWAP3
0x5ed POP
0x5ee POP
0x5ef POP
0x5f0 PUSH1 0x0
0x5f2 PUSH1 0x40
0x5f4 MLOAD
0x5f5 DUP1
0x5f6 DUP4
0x5f7 SUB
0x5f8 DUP2
0x5f9 PUSH1 0x0
0x5fb DUP8
0x5fc DUP1
0x5fd EXTCODESIZE
0x5fe ISZERO
0x5ff DUP1
0x600 ISZERO
0x601 PUSH2 0x609
0x604 JUMPI
---
0x5e4: JUMPDEST 
0x5eb: V496 = ADD S4 S6
0x5f0: V497 = 0x0
0x5f2: V498 = 0x40
0x5f4: V499 = M[0x40]
0x5f7: V500 = SUB V496 V499
0x5f9: V501 = 0x0
0x5fd: V502 = EXTCODESIZE S11
0x5fe: V503 = ISZERO V502
0x600: V504 = ISZERO V503
0x601: V505 = 0x609
0x604: JUMPI 0x609 V504
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S21, {0x8d, 0x776}, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xef115542, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, V496, 0x0, V499, V500, V499, 0x0, S11, V503]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S21, {0x8d, 0x776}, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xef115542, V496, 0x0, V499, V500, V499, 0x0, S11, V503]

================================

Block 0x605
[0x605:0x608]
---
Predecessors: [0x5e4]
Successors: []
---
0x605 PUSH1 0x0
0x607 DUP1
0x608 REVERT
---
0x605: V506 = 0x0
0x608: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S19, {0x8d, 0x776}, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0xef115542, V496, 0x0, V499, V500, V499, 0x0, S1, V503]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S19, {0x8d, 0x776}, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0xef115542, V496, 0x0, V499, V500, V499, 0x0, S1, V503]

================================

Block 0x609
[0x609:0x613]
---
Predecessors: [0x5e4]
Successors: [0x614, 0x61d]
---
0x609 JUMPDEST
0x60a POP
0x60b GAS
0x60c CALL
0x60d ISZERO
0x60e DUP1
0x60f ISZERO
0x610 PUSH2 0x61d
0x613 JUMPI
---
0x609: JUMPDEST 
0x60b: V507 = GAS
0x60c: V508 = CALL V507 S1 0x0 V499 V500 V499 0x0
0x60d: V509 = ISZERO V508
0x60f: V510 = ISZERO V509
0x610: V511 = 0x61d
0x613: JUMPI 0x61d V510
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S19, {0x8d, 0x776}, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0xef115542, V496, 0x0, V499, V500, V499, 0x0, S1, V503]
Stack pops: 7
Stack additions: [V509]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S19, {0x8d, 0x776}, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0xef115542, V496, V509]

================================

Block 0x614
[0x614:0x61c]
---
Predecessors: [0x609]
Successors: []
---
0x614 RETURNDATASIZE
0x615 PUSH1 0x0
0x617 DUP1
0x618 RETURNDATACOPY
0x619 RETURNDATASIZE
0x61a PUSH1 0x0
0x61c REVERT
---
0x614: V512 = RETURNDATASIZE
0x615: V513 = 0x0
0x618: RETURNDATACOPY 0x0 0x0 V512
0x619: V514 = RETURNDATASIZE
0x61a: V515 = 0x0
0x61c: REVERT 0x0 V514
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S13, {0x8d, 0x776}, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xef115542, S1, V509]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S13, {0x8d, 0x776}, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xef115542, S1, V509]

================================

Block 0x61d
[0x61d:0x62a]
---
Predecessors: [0x609]
Successors: [0x8d, 0x776]
---
0x61d JUMPDEST
0x61e POP
0x61f POP
0x620 POP
0x621 POP
0x622 POP
0x623 POP
0x624 POP
0x625 POP
0x626 POP
0x627 POP
0x628 POP
0x629 POP
0x62a JUMP
---
0x61d: JUMPDEST 
0x62a: JUMP {0x8d, 0x776}
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S13, {0x8d, 0x776}, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xef115542, S1, V509]
Stack pops: 13
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, S13]

================================

Block 0x62b
[0x62b:0x63d]
---
Predecessors: [0x12a]
Successors: [0x63e, 0x68f]
---
0x62b JUMPDEST
0x62c PUSH1 0x2
0x62e SLOAD
0x62f PUSH1 0x1
0x631 PUSH1 0xa0
0x633 PUSH1 0x2
0x635 EXP
0x636 SUB
0x637 AND
0x638 CALLER
0x639 EQ
0x63a PUSH2 0x68f
0x63d JUMPI
---
0x62b: JUMPDEST 
0x62c: V516 = 0x2
0x62e: V517 = S[0x2]
0x62f: V518 = 0x1
0x631: V519 = 0xa0
0x633: V520 = 0x2
0x635: V521 = EXP 0x2 0xa0
0x636: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x637: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x638: V524 = CALLER
0x639: V525 = EQ V524 V523
0x63a: V526 = 0x68f
0x63d: JUMPI 0x68f V525
---
Entry stack: [V11, 0x8d, V94, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V94, V96]

================================

Block 0x63e
[0x63e:0x68e]
---
Predecessors: [0x62b]
Successors: []
---
0x63e PUSH1 0x40
0x640 DUP1
0x641 MLOAD
0x642 PUSH1 0xe5
0x644 PUSH1 0x2
0x646 EXP
0x647 PUSH3 0x461bcd
0x64b MUL
0x64c DUP2
0x64d MSTORE
0x64e PUSH1 0x20
0x650 PUSH1 0x4
0x652 DUP3
0x653 ADD
0x654 MSTORE
0x655 PUSH1 0x26
0x657 PUSH1 0x24
0x659 DUP3
0x65a ADD
0x65b MSTORE
0x65c PUSH1 0x0
0x65e DUP1
0x65f MLOAD
0x660 PUSH1 0x20
0x662 PUSH2 0xbf0
0x665 DUP4
0x666 CODECOPY
0x667 DUP2
0x668 MLOAD
0x669 SWAP2
0x66a MSTORE
0x66b PUSH1 0x44
0x66d DUP3
0x66e ADD
0x66f MSTORE
0x670 PUSH1 0x0
0x672 DUP1
0x673 MLOAD
0x674 PUSH1 0x20
0x676 PUSH2 0xbd0
0x679 DUP4
0x67a CODECOPY
0x67b DUP2
0x67c MLOAD
0x67d SWAP2
0x67e MSTORE
0x67f PUSH1 0x64
0x681 DUP3
0x682 ADD
0x683 MSTORE
0x684 SWAP1
0x685 MLOAD
0x686 SWAP1
0x687 DUP2
0x688 SWAP1
0x689 SUB
0x68a PUSH1 0x84
0x68c ADD
0x68d SWAP1
0x68e REVERT
---
0x63e: V527 = 0x40
0x641: V528 = M[0x40]
0x642: V529 = 0xe5
0x644: V530 = 0x2
0x646: V531 = EXP 0x2 0xe5
0x647: V532 = 0x461bcd
0x64b: V533 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x64d: M[V528] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x64e: V534 = 0x20
0x650: V535 = 0x4
0x653: V536 = ADD V528 0x4
0x654: M[V536] = 0x20
0x655: V537 = 0x26
0x657: V538 = 0x24
0x65a: V539 = ADD V528 0x24
0x65b: M[V539] = 0x26
0x65c: V540 = 0x0
0x65f: V541 = M[0x0]
0x660: V542 = 0x20
0x662: V543 = 0xbf0
0x666: CODECOPY 0x0 0xbf0 0x20
0x668: V544 = M[0x0]
0x66a: M[0x0] = V541
0x66b: V545 = 0x44
0x66e: V546 = ADD V528 0x44
0x66f: M[V546] = V544
0x670: V547 = 0x0
0x673: V548 = M[0x0]
0x674: V549 = 0x20
0x676: V550 = 0xbd0
0x67a: CODECOPY 0x0 0xbd0 0x20
0x67c: V551 = M[0x0]
0x67e: M[0x0] = V548
0x67f: V552 = 0x64
0x682: V553 = ADD V528 0x64
0x683: M[V553] = V551
0x685: V554 = M[0x40]
0x689: V555 = SUB V528 V554
0x68a: V556 = 0x84
0x68c: V557 = ADD 0x84 V555
0x68e: REVERT V554 V557
---
Entry stack: [V11, 0x8d, V94, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V94, V96]

================================

Block 0x68f
[0x68f:0x696]
---
Predecessors: [0x62b]
Successors: [0x697, 0x69b]
---
0x68f JUMPDEST
0x690 DUP2
0x691 ISZERO
0x692 ISZERO
0x693 PUSH2 0x69b
0x696 JUMPI
---
0x68f: JUMPDEST 
0x691: V558 = ISZERO V94
0x692: V559 = ISZERO V558
0x693: V560 = 0x69b
0x696: JUMPI 0x69b V559
---
Entry stack: [V11, 0x8d, V94, V96]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x8d, V94, V96]

================================

Block 0x697
[0x697:0x69a]
---
Predecessors: [0x68f]
Successors: [0x69b]
---
0x697 ADDRESS
0x698 BALANCE
0x699 SWAP2
0x69a POP
---
0x697: V561 = ADDRESS
0x698: V562 = BALANCE V561
---
Entry stack: [V11, 0x8d, V94, V96]
Stack pops: 2
Stack additions: [V562, S0]
Exit stack: [V11, 0x8d, V562, V96]

================================

Block 0x69b
[0x69b:0x6a1]
---
Predecessors: [0x68f, 0x697]
Successors: [0x6a2, 0x6ab]
---
0x69b JUMPDEST
0x69c DUP1
0x69d ISZERO
0x69e PUSH2 0x6ab
0x6a1 JUMPI
---
0x69b: JUMPDEST 
0x69d: V563 = ISZERO V96
0x69e: V564 = 0x6ab
0x6a1: JUMPI 0x6ab V563
---
Entry stack: [V11, 0x8d, S1, V96]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x8d, S1, V96]

================================

Block 0x6a2
[0x6a2:0x6aa]
---
Predecessors: [0x69b]
Successors: [0x6b1]
---
0x6a2 PUSH1 0x9
0x6a4 DUP2
0x6a5 SWAP1
0x6a6 SSTORE
0x6a7 PUSH2 0x6b1
0x6aa JUMP
---
0x6a2: V565 = 0x9
0x6a6: S[0x9] = V96
0x6a7: V566 = 0x6b1
0x6aa: JUMP 0x6b1
---
Entry stack: [V11, 0x8d, S1, V96]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x8d, S1, V96]

================================

Block 0x6ab
[0x6ab:0x6b0]
---
Predecessors: [0x69b]
Successors: [0x6b1]
---
0x6ab JUMPDEST
0x6ac PUSH1 0x32
0x6ae PUSH1 0x9
0x6b0 SSTORE
---
0x6ab: JUMPDEST 
0x6ac: V567 = 0x32
0x6ae: V568 = 0x9
0x6b0: S[0x9] = 0x32
---
Entry stack: [V11, 0x8d, S1, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, S1, V96]

================================

Block 0x6b1
[0x6b1:0x75d]
---
Predecessors: [0x6a2, 0x6ab]
Successors: [0x75e, 0x762]
---
0x6b1 JUMPDEST
0x6b2 PUSH1 0x8
0x6b4 DUP1
0x6b5 SLOAD
0x6b6 PUSH5 0xffffffffff
0x6bc NOT
0x6bd AND
0x6be NUMBER
0x6bf PUSH5 0xffffffffff
0x6c5 AND
0x6c6 OR
0x6c7 SWAP1
0x6c8 SSTORE
0x6c9 PUSH1 0x0
0x6cb DUP1
0x6cc SLOAD
0x6cd PUSH1 0x9
0x6cf SLOAD
0x6d0 PUSH1 0x3
0x6d2 SLOAD
0x6d3 PUSH1 0x4
0x6d5 DUP1
0x6d6 SLOAD
0x6d7 PUSH1 0x5
0x6d9 SLOAD
0x6da PUSH1 0x6
0x6dc SLOAD
0x6dd PUSH1 0x40
0x6df DUP1
0x6e0 MLOAD
0x6e1 PUSH32 0x5e83b46300000000000000000000000000000000000000000000000000000000
0x702 DUP2
0x703 MSTORE
0x704 SWAP5
0x705 DUP6
0x706 ADD
0x707 SWAP7
0x708 SWAP1
0x709 SWAP7
0x70a MSTORE
0x70b PUSH1 0x64
0x70d PUSH1 0x24
0x70f DUP6
0x710 ADD
0x711 DUP2
0x712 SWAP1
0x713 MSTORE
0x714 PUSH1 0x44
0x716 DUP6
0x717 ADD
0x718 SWAP6
0x719 SWAP1
0x71a SWAP6
0x71b MSTORE
0x71c SWAP4
0x71d DUP4
0x71e ADD
0x71f SWAP2
0x720 SWAP1
0x721 SWAP2
0x722 MSTORE
0x723 PUSH1 0x84
0x725 DUP3
0x726 ADD
0x727 MSTORE
0x728 PUSH1 0xa4
0x72a DUP2
0x72b ADD
0x72c SWAP2
0x72d SWAP1
0x72e SWAP2
0x72f MSTORE
0x730 SWAP1
0x731 MLOAD
0x732 PUSH1 0x1
0x734 PUSH1 0xa0
0x736 PUSH1 0x2
0x738 EXP
0x739 SUB
0x73a SWAP1
0x73b SWAP3
0x73c AND
0x73d SWAP3
0x73e PUSH4 0x5e83b463
0x743 SWAP3
0x744 DUP7
0x745 SWAP3
0x746 PUSH1 0xc4
0x748 DUP1
0x749 DUP3
0x74a ADD
0x74b SWAP4
0x74c SWAP3
0x74d SWAP2
0x74e DUP3
0x74f SWAP1
0x750 SUB
0x751 ADD
0x752 DUP2
0x753 DUP6
0x754 DUP9
0x755 DUP1
0x756 EXTCODESIZE
0x757 ISZERO
0x758 DUP1
0x759 ISZERO
0x75a PUSH2 0x762
0x75d JUMPI
---
0x6b1: JUMPDEST 
0x6b2: V569 = 0x8
0x6b5: V570 = S[0x8]
0x6b6: V571 = 0xffffffffff
0x6bc: V572 = NOT 0xffffffffff
0x6bd: V573 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000 V570
0x6be: V574 = NUMBER
0x6bf: V575 = 0xffffffffff
0x6c5: V576 = AND 0xffffffffff V574
0x6c6: V577 = OR V576 V573
0x6c8: S[0x8] = V577
0x6c9: V578 = 0x0
0x6cc: V579 = S[0x0]
0x6cd: V580 = 0x9
0x6cf: V581 = S[0x9]
0x6d0: V582 = 0x3
0x6d2: V583 = S[0x3]
0x6d3: V584 = 0x4
0x6d6: V585 = S[0x4]
0x6d7: V586 = 0x5
0x6d9: V587 = S[0x5]
0x6da: V588 = 0x6
0x6dc: V589 = S[0x6]
0x6dd: V590 = 0x40
0x6e0: V591 = M[0x40]
0x6e1: V592 = 0x5e83b46300000000000000000000000000000000000000000000000000000000
0x703: M[V591] = 0x5e83b46300000000000000000000000000000000000000000000000000000000
0x706: V593 = ADD V591 0x4
0x70a: M[V593] = V581
0x70b: V594 = 0x64
0x70d: V595 = 0x24
0x710: V596 = ADD V591 0x24
0x713: M[V596] = 0x64
0x714: V597 = 0x44
0x717: V598 = ADD V591 0x44
0x71b: M[V598] = V583
0x71e: V599 = ADD V591 0x64
0x722: M[V599] = V585
0x723: V600 = 0x84
0x726: V601 = ADD V591 0x84
0x727: M[V601] = V587
0x728: V602 = 0xa4
0x72b: V603 = ADD V591 0xa4
0x72f: M[V603] = V589
0x731: V604 = M[0x40]
0x732: V605 = 0x1
0x734: V606 = 0xa0
0x736: V607 = 0x2
0x738: V608 = EXP 0x2 0xa0
0x739: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73c: V610 = AND V579 0xffffffffffffffffffffffffffffffffffffffff
0x73e: V611 = 0x5e83b463
0x746: V612 = 0xc4
0x74a: V613 = ADD V591 0xc4
0x750: V614 = SUB V591 V604
0x751: V615 = ADD V614 0xc4
0x756: V616 = EXTCODESIZE V610
0x757: V617 = ISZERO V616
0x759: V618 = ISZERO V617
0x75a: V619 = 0x762
0x75d: JUMPI 0x762 V618
---
Entry stack: [V11, 0x8d, S1, V96]
Stack pops: 2
Stack additions: [S1, S0, V610, 0x5e83b463, S1, V613, 0x0, V604, V615, V604, S1, V610, V617]
Exit stack: [V11, 0x8d, S1, V96, V610, 0x5e83b463, S1, V613, 0x0, V604, V615, V604, S1, V610, V617]

================================

Block 0x75e
[0x75e:0x761]
---
Predecessors: [0x6b1]
Successors: []
---
0x75e PUSH1 0x0
0x760 DUP1
0x761 REVERT
---
0x75e: V620 = 0x0
0x761: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, S12, V96, V610, 0x5e83b463, S8, V613, 0x0, V604, V615, V604, S2, V610, V617]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, S12, V96, V610, 0x5e83b463, S8, V613, 0x0, V604, V615, V604, S2, V610, V617]

================================

Block 0x762
[0x762:0x76c]
---
Predecessors: [0x6b1]
Successors: [0x76d, 0x776]
---
0x762 JUMPDEST
0x763 POP
0x764 GAS
0x765 CALL
0x766 ISZERO
0x767 DUP1
0x768 ISZERO
0x769 PUSH2 0x776
0x76c JUMPI
---
0x762: JUMPDEST 
0x764: V621 = GAS
0x765: V622 = CALL V621 V610 S2 V604 V615 V604 0x0
0x766: V623 = ISZERO V622
0x768: V624 = ISZERO V623
0x769: V625 = 0x776
0x76c: JUMPI 0x776 V624
---
Entry stack: [V11, 0x8d, S12, V96, V610, 0x5e83b463, S8, V613, 0x0, V604, V615, V604, S2, V610, V617]
Stack pops: 7
Stack additions: [V623]
Exit stack: [V11, 0x8d, S12, V96, V610, 0x5e83b463, S8, V613, V623]

================================

Block 0x76d
[0x76d:0x775]
---
Predecessors: [0x762]
Successors: []
---
0x76d RETURNDATASIZE
0x76e PUSH1 0x0
0x770 DUP1
0x771 RETURNDATACOPY
0x772 RETURNDATASIZE
0x773 PUSH1 0x0
0x775 REVERT
---
0x76d: V626 = RETURNDATASIZE
0x76e: V627 = 0x0
0x771: RETURNDATACOPY 0x0 0x0 V626
0x772: V628 = RETURNDATASIZE
0x773: V629 = 0x0
0x775: REVERT 0x0 V628
---
Entry stack: [V11, 0x8d, S6, V96, V610, 0x5e83b463, S2, V613, V623]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, S6, V96, V610, 0x5e83b463, S2, V613, V623]

================================

Block 0x776
[0x776:0x77e]
---
Predecessors: [0x61d, 0x762]
Successors: [0x8d]
---
0x776 JUMPDEST
0x777 POP
0x778 POP
0x779 POP
0x77a POP
0x77b POP
0x77c POP
0x77d POP
0x77e JUMP
---
0x776: JUMPDEST 
0x77e: JUMP 0x8d
---
Entry stack: [V11, 0x8d, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x77f
[0x77f:0x791]
---
Predecessors: [0x144]
Successors: [0x792, 0x7e3]
---
0x77f JUMPDEST
0x780 PUSH1 0x2
0x782 SLOAD
0x783 PUSH1 0x1
0x785 PUSH1 0xa0
0x787 PUSH1 0x2
0x789 EXP
0x78a SUB
0x78b AND
0x78c CALLER
0x78d EQ
0x78e PUSH2 0x7e3
0x791 JUMPI
---
0x77f: JUMPDEST 
0x780: V630 = 0x2
0x782: V631 = S[0x2]
0x783: V632 = 0x1
0x785: V633 = 0xa0
0x787: V634 = 0x2
0x789: V635 = EXP 0x2 0xa0
0x78a: V636 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78b: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0x78c: V638 = CALLER
0x78d: V639 = EQ V638 V637
0x78e: V640 = 0x7e3
0x791: JUMPI 0x7e3 V639
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x792
[0x792:0x7e2]
---
Predecessors: [0x77f]
Successors: []
---
0x792 PUSH1 0x40
0x794 DUP1
0x795 MLOAD
0x796 PUSH1 0xe5
0x798 PUSH1 0x2
0x79a EXP
0x79b PUSH3 0x461bcd
0x79f MUL
0x7a0 DUP2
0x7a1 MSTORE
0x7a2 PUSH1 0x20
0x7a4 PUSH1 0x4
0x7a6 DUP3
0x7a7 ADD
0x7a8 MSTORE
0x7a9 PUSH1 0x26
0x7ab PUSH1 0x24
0x7ad DUP3
0x7ae ADD
0x7af MSTORE
0x7b0 PUSH1 0x0
0x7b2 DUP1
0x7b3 MLOAD
0x7b4 PUSH1 0x20
0x7b6 PUSH2 0xbf0
0x7b9 DUP4
0x7ba CODECOPY
0x7bb DUP2
0x7bc MLOAD
0x7bd SWAP2
0x7be MSTORE
0x7bf PUSH1 0x44
0x7c1 DUP3
0x7c2 ADD
0x7c3 MSTORE
0x7c4 PUSH1 0x0
0x7c6 DUP1
0x7c7 MLOAD
0x7c8 PUSH1 0x20
0x7ca PUSH2 0xbd0
0x7cd DUP4
0x7ce CODECOPY
0x7cf DUP2
0x7d0 MLOAD
0x7d1 SWAP2
0x7d2 MSTORE
0x7d3 PUSH1 0x64
0x7d5 DUP3
0x7d6 ADD
0x7d7 MSTORE
0x7d8 SWAP1
0x7d9 MLOAD
0x7da SWAP1
0x7db DUP2
0x7dc SWAP1
0x7dd SUB
0x7de PUSH1 0x84
0x7e0 ADD
0x7e1 SWAP1
0x7e2 REVERT
---
0x792: V641 = 0x40
0x795: V642 = M[0x40]
0x796: V643 = 0xe5
0x798: V644 = 0x2
0x79a: V645 = EXP 0x2 0xe5
0x79b: V646 = 0x461bcd
0x79f: V647 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x7a1: M[V642] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7a2: V648 = 0x20
0x7a4: V649 = 0x4
0x7a7: V650 = ADD V642 0x4
0x7a8: M[V650] = 0x20
0x7a9: V651 = 0x26
0x7ab: V652 = 0x24
0x7ae: V653 = ADD V642 0x24
0x7af: M[V653] = 0x26
0x7b0: V654 = 0x0
0x7b3: V655 = M[0x0]
0x7b4: V656 = 0x20
0x7b6: V657 = 0xbf0
0x7ba: CODECOPY 0x0 0xbf0 0x20
0x7bc: V658 = M[0x0]
0x7be: M[0x0] = V655
0x7bf: V659 = 0x44
0x7c2: V660 = ADD V642 0x44
0x7c3: M[V660] = V658
0x7c4: V661 = 0x0
0x7c7: V662 = M[0x0]
0x7c8: V663 = 0x20
0x7ca: V664 = 0xbd0
0x7ce: CODECOPY 0x0 0xbd0 0x20
0x7d0: V665 = M[0x0]
0x7d2: M[0x0] = V662
0x7d3: V666 = 0x64
0x7d6: V667 = ADD V642 0x64
0x7d7: M[V667] = V665
0x7d9: V668 = M[0x40]
0x7dd: V669 = SUB V642 V668
0x7de: V670 = 0x84
0x7e0: V671 = ADD 0x84 V669
0x7e2: REVERT V668 V671
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x7e3
[0x7e3:0x7f0]
---
Predecessors: [0x77f]
Successors: []
---
0x7e3 JUMPDEST
0x7e4 PUSH1 0x2
0x7e6 SLOAD
0x7e7 PUSH1 0x1
0x7e9 PUSH1 0xa0
0x7eb PUSH1 0x2
0x7ed EXP
0x7ee SUB
0x7ef AND
0x7f0 SELFDESTRUCT
---
0x7e3: JUMPDEST 
0x7e4: V672 = 0x2
0x7e6: V673 = S[0x2]
0x7e7: V674 = 0x1
0x7e9: V675 = 0xa0
0x7eb: V676 = 0x2
0x7ed: V677 = EXP 0x2 0xa0
0x7ee: V678 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ef: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V673
0x7f0: SELFDESTRUCT V679
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x7f1
[0x7f1:0x806]
---
Predecessors: [0x159]
Successors: [0x807, 0x858]
---
0x7f1 JUMPDEST
0x7f2 PUSH1 0x2
0x7f4 SLOAD
0x7f5 PUSH1 0x60
0x7f7 SWAP1
0x7f8 PUSH1 0x1
0x7fa PUSH1 0xa0
0x7fc PUSH1 0x2
0x7fe EXP
0x7ff SUB
0x800 AND
0x801 CALLER
0x802 EQ
0x803 PUSH2 0x858
0x806 JUMPI
---
0x7f1: JUMPDEST 
0x7f2: V680 = 0x2
0x7f4: V681 = S[0x2]
0x7f5: V682 = 0x60
0x7f8: V683 = 0x1
0x7fa: V684 = 0xa0
0x7fc: V685 = 0x2
0x7fe: V686 = EXP 0x2 0xa0
0x7ff: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x800: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0x801: V689 = CALLER
0x802: V690 = EQ V689 V688
0x803: V691 = 0x858
0x806: JUMPI 0x858 V690
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V11, 0x8d, 0x60]

================================

Block 0x807
[0x807:0x857]
---
Predecessors: [0x7f1]
Successors: []
---
0x807 PUSH1 0x40
0x809 DUP1
0x80a MLOAD
0x80b PUSH1 0xe5
0x80d PUSH1 0x2
0x80f EXP
0x810 PUSH3 0x461bcd
0x814 MUL
0x815 DUP2
0x816 MSTORE
0x817 PUSH1 0x20
0x819 PUSH1 0x4
0x81b DUP3
0x81c ADD
0x81d MSTORE
0x81e PUSH1 0x26
0x820 PUSH1 0x24
0x822 DUP3
0x823 ADD
0x824 MSTORE
0x825 PUSH1 0x0
0x827 DUP1
0x828 MLOAD
0x829 PUSH1 0x20
0x82b PUSH2 0xbf0
0x82e DUP4
0x82f CODECOPY
0x830 DUP2
0x831 MLOAD
0x832 SWAP2
0x833 MSTORE
0x834 PUSH1 0x44
0x836 DUP3
0x837 ADD
0x838 MSTORE
0x839 PUSH1 0x0
0x83b DUP1
0x83c MLOAD
0x83d PUSH1 0x20
0x83f PUSH2 0xbd0
0x842 DUP4
0x843 CODECOPY
0x844 DUP2
0x845 MLOAD
0x846 SWAP2
0x847 MSTORE
0x848 PUSH1 0x64
0x84a DUP3
0x84b ADD
0x84c MSTORE
0x84d SWAP1
0x84e MLOAD
0x84f SWAP1
0x850 DUP2
0x851 SWAP1
0x852 SUB
0x853 PUSH1 0x84
0x855 ADD
0x856 SWAP1
0x857 REVERT
---
0x807: V692 = 0x40
0x80a: V693 = M[0x40]
0x80b: V694 = 0xe5
0x80d: V695 = 0x2
0x80f: V696 = EXP 0x2 0xe5
0x810: V697 = 0x461bcd
0x814: V698 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x816: M[V693] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x817: V699 = 0x20
0x819: V700 = 0x4
0x81c: V701 = ADD V693 0x4
0x81d: M[V701] = 0x20
0x81e: V702 = 0x26
0x820: V703 = 0x24
0x823: V704 = ADD V693 0x24
0x824: M[V704] = 0x26
0x825: V705 = 0x0
0x828: V706 = M[0x0]
0x829: V707 = 0x20
0x82b: V708 = 0xbf0
0x82f: CODECOPY 0x0 0xbf0 0x20
0x831: V709 = M[0x0]
0x833: M[0x0] = V706
0x834: V710 = 0x44
0x837: V711 = ADD V693 0x44
0x838: M[V711] = V709
0x839: V712 = 0x0
0x83c: V713 = M[0x0]
0x83d: V714 = 0x20
0x83f: V715 = 0xbd0
0x843: CODECOPY 0x0 0xbd0 0x20
0x845: V716 = M[0x0]
0x847: M[0x0] = V713
0x848: V717 = 0x64
0x84b: V718 = ADD V693 0x64
0x84c: M[V718] = V716
0x84e: V719 = M[0x40]
0x852: V720 = SUB V693 V719
0x853: V721 = 0x84
0x855: V722 = ADD 0x84 V720
0x857: REVERT V719 V722
---
Entry stack: [V11, 0x8d, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, 0x60]

================================

Block 0x858
[0x858:0x86e]
---
Predecessors: [0x7f1]
Successors: [0x86f, 0x873]
---
0x858 JUMPDEST
0x859 PUSH1 0x8
0x85b SLOAD
0x85c PUSH1 0xfa
0x85e PUSH5 0xffffffffff
0x864 SWAP2
0x865 DUP3
0x866 AND
0x867 ADD
0x868 AND
0x869 NUMBER
0x86a GT
0x86b PUSH2 0x873
0x86e JUMPI
---
0x858: JUMPDEST 
0x859: V723 = 0x8
0x85b: V724 = S[0x8]
0x85c: V725 = 0xfa
0x85e: V726 = 0xffffffffff
0x866: V727 = AND 0xffffffffff V724
0x867: V728 = ADD V727 0xfa
0x868: V729 = AND V728 0xffffffffff
0x869: V730 = NUMBER
0x86a: V731 = GT V730 V729
0x86b: V732 = 0x873
0x86e: JUMPI 0x873 V731
---
Entry stack: [V11, 0x8d, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, 0x60]

================================

Block 0x86f
[0x86f:0x872]
---
Predecessors: [0x858]
Successors: []
---
0x86f PUSH1 0x0
0x871 DUP1
0x872 REVERT
---
0x86f: V733 = 0x0
0x872: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, 0x60]

================================

Block 0x873
[0x873:0x8d2]
---
Predecessors: [0x858]
Successors: [0x8d3, 0x8d7]
---
0x873 JUMPDEST
0x874 PUSH1 0x0
0x876 DUP1
0x877 SLOAD
0x878 PUSH1 0x4
0x87a DUP1
0x87b SLOAD
0x87c PUSH1 0x40
0x87e DUP1
0x87f MLOAD
0x880 PUSH32 0xe1fdb4b400000000000000000000000000000000000000000000000000000000
0x8a1 DUP2
0x8a2 MSTORE
0x8a3 SWAP3
0x8a4 DUP4
0x8a5 ADD
0x8a6 SWAP2
0x8a7 SWAP1
0x8a8 SWAP2
0x8a9 MSTORE
0x8aa MLOAD
0x8ab PUSH1 0x1
0x8ad PUSH1 0xa0
0x8af PUSH1 0x2
0x8b1 EXP
0x8b2 SUB
0x8b3 SWAP1
0x8b4 SWAP3
0x8b5 AND
0x8b6 SWAP3
0x8b7 PUSH4 0xe1fdb4b4
0x8bc SWAP3
0x8bd PUSH1 0x24
0x8bf DUP1
0x8c0 DUP5
0x8c1 ADD
0x8c2 SWAP4
0x8c3 DUP3
0x8c4 SWAP1
0x8c5 SUB
0x8c6 ADD
0x8c7 DUP2
0x8c8 DUP4
0x8c9 DUP8
0x8ca DUP1
0x8cb EXTCODESIZE
0x8cc ISZERO
0x8cd DUP1
0x8ce ISZERO
0x8cf PUSH2 0x8d7
0x8d2 JUMPI
---
0x873: JUMPDEST 
0x874: V734 = 0x0
0x877: V735 = S[0x0]
0x878: V736 = 0x4
0x87b: V737 = S[0x4]
0x87c: V738 = 0x40
0x87f: V739 = M[0x40]
0x880: V740 = 0xe1fdb4b400000000000000000000000000000000000000000000000000000000
0x8a2: M[V739] = 0xe1fdb4b400000000000000000000000000000000000000000000000000000000
0x8a5: V741 = ADD V739 0x4
0x8a9: M[V741] = V737
0x8aa: V742 = M[0x40]
0x8ab: V743 = 0x1
0x8ad: V744 = 0xa0
0x8af: V745 = 0x2
0x8b1: V746 = EXP 0x2 0xa0
0x8b2: V747 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b5: V748 = AND V735 0xffffffffffffffffffffffffffffffffffffffff
0x8b7: V749 = 0xe1fdb4b4
0x8bd: V750 = 0x24
0x8c1: V751 = ADD V739 0x24
0x8c5: V752 = SUB V739 V742
0x8c6: V753 = ADD V752 0x24
0x8cb: V754 = EXTCODESIZE V748
0x8cc: V755 = ISZERO V754
0x8ce: V756 = ISZERO V755
0x8cf: V757 = 0x8d7
0x8d2: JUMPI 0x8d7 V756
---
Entry stack: [V11, 0x8d, 0x60]
Stack pops: 0
Stack additions: [V748, 0xe1fdb4b4, V751, 0x0, V742, V753, V742, 0x0, V748, V755]
Exit stack: [V11, 0x8d, 0x60, V748, 0xe1fdb4b4, V751, 0x0, V742, V753, V742, 0x0, V748, V755]

================================

Block 0x8d3
[0x8d3:0x8d6]
---
Predecessors: [0x873]
Successors: []
---
0x8d3 PUSH1 0x0
0x8d5 DUP1
0x8d6 REVERT
---
0x8d3: V758 = 0x0
0x8d6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, 0x60, V748, 0xe1fdb4b4, V751, 0x0, V742, V753, V742, 0x0, V748, V755]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, 0x60, V748, 0xe1fdb4b4, V751, 0x0, V742, V753, V742, 0x0, V748, V755]

================================

Block 0x8d7
[0x8d7:0x8e1]
---
Predecessors: [0x873]
Successors: [0x8e2, 0x8eb]
---
0x8d7 JUMPDEST
0x8d8 POP
0x8d9 GAS
0x8da CALL
0x8db ISZERO
0x8dc DUP1
0x8dd ISZERO
0x8de PUSH2 0x8eb
0x8e1 JUMPI
---
0x8d7: JUMPDEST 
0x8d9: V759 = GAS
0x8da: V760 = CALL V759 V748 0x0 V742 V753 V742 0x0
0x8db: V761 = ISZERO V760
0x8dd: V762 = ISZERO V761
0x8de: V763 = 0x8eb
0x8e1: JUMPI 0x8eb V762
---
Entry stack: [V11, 0x8d, 0x60, V748, 0xe1fdb4b4, V751, 0x0, V742, V753, V742, 0x0, V748, V755]
Stack pops: 7
Stack additions: [V761]
Exit stack: [V11, 0x8d, 0x60, V748, 0xe1fdb4b4, V751, V761]

================================

Block 0x8e2
[0x8e2:0x8ea]
---
Predecessors: [0x8d7]
Successors: []
---
0x8e2 RETURNDATASIZE
0x8e3 PUSH1 0x0
0x8e5 DUP1
0x8e6 RETURNDATACOPY
0x8e7 RETURNDATASIZE
0x8e8 PUSH1 0x0
0x8ea REVERT
---
0x8e2: V764 = RETURNDATASIZE
0x8e3: V765 = 0x0
0x8e6: RETURNDATACOPY 0x0 0x0 V764
0x8e7: V766 = RETURNDATASIZE
0x8e8: V767 = 0x0
0x8ea: REVERT 0x0 V766
---
Entry stack: [V11, 0x8d, 0x60, V748, 0xe1fdb4b4, V751, V761]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, 0x60, V748, 0xe1fdb4b4, V751, V761]

================================

Block 0x8eb
[0x8eb:0x920]
---
Predecessors: [0x8d7]
Successors: [0x921, 0x922]
---
0x8eb JUMPDEST
0x8ec POP
0x8ed POP
0x8ee PUSH1 0x40
0x8f0 DUP1
0x8f1 MLOAD
0x8f2 PUSH1 0x1
0x8f4 DUP1
0x8f5 DUP3
0x8f6 MSTORE
0x8f7 DUP2
0x8f8 DUP4
0x8f9 ADD
0x8fa SWAP1
0x8fb SWAP3
0x8fc MSTORE
0x8fd SWAP3
0x8fe POP
0x8ff SWAP1
0x900 POP
0x901 PUSH1 0x20
0x903 DUP1
0x904 DUP4
0x905 ADD
0x906 SWAP1
0x907 DUP1
0x908 CODESIZE
0x909 DUP4
0x90a CODECOPY
0x90b ADD
0x90c SWAP1
0x90d POP
0x90e POP
0x90f SWAP1
0x910 POP
0x911 PUSH1 0x4
0x913 SLOAD
0x914 DUP2
0x915 PUSH1 0x0
0x917 DUP2
0x918 MLOAD
0x919 DUP2
0x91a LT
0x91b ISZERO
0x91c ISZERO
0x91d PUSH2 0x922
0x920 JUMPI
---
0x8eb: JUMPDEST 
0x8ee: V768 = 0x40
0x8f1: V769 = M[0x40]
0x8f2: V770 = 0x1
0x8f6: M[V769] = 0x1
0x8f9: V771 = ADD 0x40 V769
0x8fc: M[0x40] = V771
0x901: V772 = 0x20
0x905: V773 = ADD V769 0x20
0x908: V774 = CODESIZE
0x90a: CODECOPY V773 V774 0x20
0x90b: V775 = ADD 0x20 V773
0x911: V776 = 0x4
0x913: V777 = S[0x4]
0x915: V778 = 0x0
0x918: V779 = M[V769]
0x91a: V780 = LT 0x0 V779
0x91b: V781 = ISZERO V780
0x91c: V782 = ISZERO V781
0x91d: V783 = 0x922
0x920: JUMPI 0x922 V782
---
Entry stack: [V11, 0x8d, 0x60, V748, 0xe1fdb4b4, V751, V761]
Stack pops: 5
Stack additions: [V769, V777, V769, 0x0]
Exit stack: [V11, 0x8d, V769, V777, V769, 0x0]

================================

Block 0x921
[0x921:0x921]
---
Predecessors: [0x8eb]
Successors: []
---
0x921 INVALID
---
0x921: INVALID 
---
Entry stack: [V11, 0x8d, V769, V777, V769, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V769, V777, V769, 0x0]

================================

Block 0x922
[0x922:0x995]
---
Predecessors: [0x8eb]
Successors: [0x996]
---
0x922 JUMPDEST
0x923 PUSH1 0x20
0x925 SWAP1
0x926 DUP2
0x927 MUL
0x928 SWAP1
0x929 SWAP2
0x92a ADD
0x92b DUP2
0x92c ADD
0x92d SWAP2
0x92e SWAP1
0x92f SWAP2
0x930 MSTORE
0x931 PUSH1 0x0
0x933 DUP1
0x934 SLOAD
0x935 PUSH1 0x40
0x937 MLOAD
0x938 PUSH32 0xef11554200000000000000000000000000000000000000000000000000000000
0x959 DUP2
0x95a MSTORE
0x95b PUSH1 0x4
0x95d DUP2
0x95e ADD
0x95f DUP5
0x960 DUP2
0x961 MSTORE
0x962 DUP6
0x963 MLOAD
0x964 PUSH1 0x24
0x966 DUP4
0x967 ADD
0x968 MSTORE
0x969 DUP6
0x96a MLOAD
0x96b PUSH1 0x1
0x96d PUSH1 0xa0
0x96f PUSH1 0x2
0x971 EXP
0x972 SUB
0x973 SWAP1
0x974 SWAP4
0x975 AND
0x976 SWAP5
0x977 PUSH4 0xef115542
0x97c SWAP5
0x97d DUP8
0x97e SWAP5
0x97f SWAP3
0x980 SWAP4
0x981 DUP5
0x982 SWAP4
0x983 PUSH1 0x44
0x985 SWAP1
0x986 SWAP2
0x987 ADD
0x988 SWAP3
0x989 DUP7
0x98a DUP2
0x98b ADD
0x98c SWAP3
0x98d SWAP2
0x98e MUL
0x98f SWAP1
0x990 DUP2
0x991 SWAP1
0x992 DUP5
0x993 SWAP1
0x994 DUP5
0x995 SWAP1
---
0x922: JUMPDEST 
0x923: V784 = 0x20
0x927: V785 = MUL 0x20 0x0
0x92a: V786 = ADD V769 0x0
0x92c: V787 = ADD 0x20 V786
0x930: M[V787] = V777
0x931: V788 = 0x0
0x934: V789 = S[0x0]
0x935: V790 = 0x40
0x937: V791 = M[0x40]
0x938: V792 = 0xef11554200000000000000000000000000000000000000000000000000000000
0x95a: M[V791] = 0xef11554200000000000000000000000000000000000000000000000000000000
0x95b: V793 = 0x4
0x95e: V794 = ADD V791 0x4
0x961: M[V794] = 0x20
0x963: V795 = M[V769]
0x964: V796 = 0x24
0x967: V797 = ADD V791 0x24
0x968: M[V797] = V795
0x96a: V798 = M[V769]
0x96b: V799 = 0x1
0x96d: V800 = 0xa0
0x96f: V801 = 0x2
0x971: V802 = EXP 0x2 0xa0
0x972: V803 = SUB 0x10000000000000000000000000000000000000000 0x1
0x975: V804 = AND V789 0xffffffffffffffffffffffffffffffffffffffff
0x977: V805 = 0xef115542
0x983: V806 = 0x44
0x987: V807 = ADD V791 0x44
0x98b: V808 = ADD 0x20 V769
0x98e: V809 = MUL V798 0x20
---
Entry stack: [V11, 0x8d, V769, V777, V769, 0x0]
Stack pops: 4
Stack additions: [S3, V804, 0xef115542, S3, V794, V794, V807, V808, V809, V809, V807, V808, 0x0]
Exit stack: [V11, 0x8d, V769, V804, 0xef115542, V769, V794, V794, V807, V808, V809, V809, V807, V808, 0x0]

================================

Block 0x996
[0x996:0x99e]
---
Predecessors: [0x922, 0x99f]
Successors: [0x99f, 0x9ae]
---
0x996 JUMPDEST
0x997 DUP4
0x998 DUP2
0x999 LT
0x99a ISZERO
0x99b PUSH2 0x9ae
0x99e JUMPI
---
0x996: JUMPDEST 
0x999: V810 = LT S0 V809
0x99a: V811 = ISZERO V810
0x99b: V812 = 0x9ae
0x99e: JUMPI 0x9ae V811
---
Entry stack: [V11, 0x8d, V769, V804, 0xef115542, V769, V794, V794, V807, V808, V809, V809, V807, V808, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x8d, V769, V804, 0xef115542, V769, V794, V794, V807, V808, V809, V809, V807, V808, S0]

================================

Block 0x99f
[0x99f:0x9ad]
---
Predecessors: [0x996]
Successors: [0x996]
---
0x99f DUP2
0x9a0 DUP2
0x9a1 ADD
0x9a2 MLOAD
0x9a3 DUP4
0x9a4 DUP3
0x9a5 ADD
0x9a6 MSTORE
0x9a7 PUSH1 0x20
0x9a9 ADD
0x9aa PUSH2 0x996
0x9ad JUMP
---
0x9a1: V813 = ADD S0 V808
0x9a2: V814 = M[V813]
0x9a5: V815 = ADD S0 V807
0x9a6: M[V815] = V814
0x9a7: V816 = 0x20
0x9a9: V817 = ADD 0x20 S0
0x9aa: V818 = 0x996
0x9ad: JUMP 0x996
---
Entry stack: [V11, 0x8d, V769, V804, 0xef115542, V769, V794, V794, V807, V808, V809, V809, V807, V808, S0]
Stack pops: 3
Stack additions: [S2, S1, V817]
Exit stack: [V11, 0x8d, V769, V804, 0xef115542, V769, V794, V794, V807, V808, V809, V809, V807, V808, V817]

================================

Block 0x9ae
[0x9ae:0x9ce]
---
Predecessors: [0x996]
Successors: [0x9cf, 0x9d3]
---
0x9ae JUMPDEST
0x9af POP
0x9b0 POP
0x9b1 POP
0x9b2 POP
0x9b3 SWAP1
0x9b4 POP
0x9b5 ADD
0x9b6 SWAP3
0x9b7 POP
0x9b8 POP
0x9b9 POP
0x9ba PUSH1 0x0
0x9bc PUSH1 0x40
0x9be MLOAD
0x9bf DUP1
0x9c0 DUP4
0x9c1 SUB
0x9c2 DUP2
0x9c3 PUSH1 0x0
0x9c5 DUP8
0x9c6 DUP1
0x9c7 EXTCODESIZE
0x9c8 ISZERO
0x9c9 DUP1
0x9ca ISZERO
0x9cb PUSH2 0x9d3
0x9ce JUMPI
---
0x9ae: JUMPDEST 
0x9b5: V819 = ADD V809 V807
0x9ba: V820 = 0x0
0x9bc: V821 = 0x40
0x9be: V822 = M[0x40]
0x9c1: V823 = SUB V819 V822
0x9c3: V824 = 0x0
0x9c7: V825 = EXTCODESIZE V804
0x9c8: V826 = ISZERO V825
0x9ca: V827 = ISZERO V826
0x9cb: V828 = 0x9d3
0x9ce: JUMPI 0x9d3 V827
---
Entry stack: [V11, 0x8d, V769, V804, 0xef115542, V769, V794, V794, V807, V808, V809, V809, V807, V808, S0]
Stack pops: 12
Stack additions: [S11, S10, V819, 0x0, V822, V823, V822, 0x0, S11, V826]
Exit stack: [V11, 0x8d, V769, V804, 0xef115542, V819, 0x0, V822, V823, V822, 0x0, V804, V826]

================================

Block 0x9cf
[0x9cf:0x9d2]
---
Predecessors: [0x9ae]
Successors: []
---
0x9cf PUSH1 0x0
0x9d1 DUP1
0x9d2 REVERT
---
0x9cf: V829 = 0x0
0x9d2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V769, V804, 0xef115542, V819, 0x0, V822, V823, V822, 0x0, V804, V826]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V769, V804, 0xef115542, V819, 0x0, V822, V823, V822, 0x0, V804, V826]

================================

Block 0x9d3
[0x9d3:0x9dd]
---
Predecessors: [0x9ae]
Successors: [0x9de, 0x9e7]
---
0x9d3 JUMPDEST
0x9d4 POP
0x9d5 GAS
0x9d6 CALL
0x9d7 ISZERO
0x9d8 DUP1
0x9d9 ISZERO
0x9da PUSH2 0x9e7
0x9dd JUMPI
---
0x9d3: JUMPDEST 
0x9d5: V830 = GAS
0x9d6: V831 = CALL V830 V804 0x0 V822 V823 V822 0x0
0x9d7: V832 = ISZERO V831
0x9d9: V833 = ISZERO V832
0x9da: V834 = 0x9e7
0x9dd: JUMPI 0x9e7 V833
---
Entry stack: [V11, 0x8d, V769, V804, 0xef115542, V819, 0x0, V822, V823, V822, 0x0, V804, V826]
Stack pops: 7
Stack additions: [V832]
Exit stack: [V11, 0x8d, V769, V804, 0xef115542, V819, V832]

================================

Block 0x9de
[0x9de:0x9e6]
---
Predecessors: [0x9d3]
Successors: []
---
0x9de RETURNDATASIZE
0x9df PUSH1 0x0
0x9e1 DUP1
0x9e2 RETURNDATACOPY
0x9e3 RETURNDATASIZE
0x9e4 PUSH1 0x0
0x9e6 REVERT
---
0x9de: V835 = RETURNDATASIZE
0x9df: V836 = 0x0
0x9e2: RETURNDATACOPY 0x0 0x0 V835
0x9e3: V837 = RETURNDATASIZE
0x9e4: V838 = 0x0
0x9e6: REVERT 0x0 V837
---
Entry stack: [V11, 0x8d, V769, V804, 0xef115542, V819, V832]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V769, V804, 0xef115542, V819, V832]

================================

Block 0x9e7
[0x9e7:0x9ed]
---
Predecessors: [0x9d3]
Successors: [0x8d]
---
0x9e7 JUMPDEST
0x9e8 POP
0x9e9 POP
0x9ea POP
0x9eb POP
0x9ec POP
0x9ed JUMP
---
0x9e7: JUMPDEST 
0x9ed: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V769, V804, 0xef115542, V819, V832]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x9ee
[0x9ee:0xa05]
---
Predecessors: [0x16e]
Successors: [0xa06, 0xa57]
---
0x9ee JUMPDEST
0x9ef PUSH1 0x2
0x9f1 SLOAD
0x9f2 PUSH1 0x0
0x9f4 SWAP1
0x9f5 DUP2
0x9f6 SWAP1
0x9f7 PUSH1 0x1
0x9f9 PUSH1 0xa0
0x9fb PUSH1 0x2
0x9fd EXP
0x9fe SUB
0x9ff AND
0xa00 CALLER
0xa01 EQ
0xa02 PUSH2 0xa57
0xa05 JUMPI
---
0x9ee: JUMPDEST 
0x9ef: V839 = 0x2
0x9f1: V840 = S[0x2]
0x9f2: V841 = 0x0
0x9f7: V842 = 0x1
0x9f9: V843 = 0xa0
0x9fb: V844 = 0x2
0x9fd: V845 = EXP 0x2 0xa0
0x9fe: V846 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ff: V847 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0xa00: V848 = CALLER
0xa01: V849 = EQ V848 V847
0xa02: V850 = 0xa57
0xa05: JUMPI 0xa57 V849
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, 0x0, 0x0]

================================

Block 0xa06
[0xa06:0xa56]
---
Predecessors: [0x9ee]
Successors: []
---
0xa06 PUSH1 0x40
0xa08 DUP1
0xa09 MLOAD
0xa0a PUSH1 0xe5
0xa0c PUSH1 0x2
0xa0e EXP
0xa0f PUSH3 0x461bcd
0xa13 MUL
0xa14 DUP2
0xa15 MSTORE
0xa16 PUSH1 0x20
0xa18 PUSH1 0x4
0xa1a DUP3
0xa1b ADD
0xa1c MSTORE
0xa1d PUSH1 0x26
0xa1f PUSH1 0x24
0xa21 DUP3
0xa22 ADD
0xa23 MSTORE
0xa24 PUSH1 0x0
0xa26 DUP1
0xa27 MLOAD
0xa28 PUSH1 0x20
0xa2a PUSH2 0xbf0
0xa2d DUP4
0xa2e CODECOPY
0xa2f DUP2
0xa30 MLOAD
0xa31 SWAP2
0xa32 MSTORE
0xa33 PUSH1 0x44
0xa35 DUP3
0xa36 ADD
0xa37 MSTORE
0xa38 PUSH1 0x0
0xa3a DUP1
0xa3b MLOAD
0xa3c PUSH1 0x20
0xa3e PUSH2 0xbd0
0xa41 DUP4
0xa42 CODECOPY
0xa43 DUP2
0xa44 MLOAD
0xa45 SWAP2
0xa46 MSTORE
0xa47 PUSH1 0x64
0xa49 DUP3
0xa4a ADD
0xa4b MSTORE
0xa4c SWAP1
0xa4d MLOAD
0xa4e SWAP1
0xa4f DUP2
0xa50 SWAP1
0xa51 SUB
0xa52 PUSH1 0x84
0xa54 ADD
0xa55 SWAP1
0xa56 REVERT
---
0xa06: V851 = 0x40
0xa09: V852 = M[0x40]
0xa0a: V853 = 0xe5
0xa0c: V854 = 0x2
0xa0e: V855 = EXP 0x2 0xe5
0xa0f: V856 = 0x461bcd
0xa13: V857 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xa15: M[V852] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa16: V858 = 0x20
0xa18: V859 = 0x4
0xa1b: V860 = ADD V852 0x4
0xa1c: M[V860] = 0x20
0xa1d: V861 = 0x26
0xa1f: V862 = 0x24
0xa22: V863 = ADD V852 0x24
0xa23: M[V863] = 0x26
0xa24: V864 = 0x0
0xa27: V865 = M[0x0]
0xa28: V866 = 0x20
0xa2a: V867 = 0xbf0
0xa2e: CODECOPY 0x0 0xbf0 0x20
0xa30: V868 = M[0x0]
0xa32: M[0x0] = V865
0xa33: V869 = 0x44
0xa36: V870 = ADD V852 0x44
0xa37: M[V870] = V868
0xa38: V871 = 0x0
0xa3b: V872 = M[0x0]
0xa3c: V873 = 0x20
0xa3e: V874 = 0xbd0
0xa42: CODECOPY 0x0 0xbd0 0x20
0xa44: V875 = M[0x0]
0xa46: M[0x0] = V872
0xa47: V876 = 0x64
0xa4a: V877 = ADD V852 0x64
0xa4b: M[V877] = V875
0xa4d: V878 = M[0x40]
0xa51: V879 = SUB V852 V878
0xa52: V880 = 0x84
0xa54: V881 = ADD 0x84 V879
0xa56: REVERT V878 V881
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, 0x0, 0x0]

================================

Block 0xa57
[0xa57:0xa98]
---
Predecessors: [0x9ee]
Successors: [0xa99]
---
0xa57 JUMPDEST
0xa58 PUSH1 0x7
0xa5a SLOAD
0xa5b PUSH1 0x8
0xa5d SLOAD
0xa5e PUSH1 0x40
0xa60 DUP1
0xa61 MLOAD
0xa62 PUSH1 0x20
0xa64 DUP1
0xa65 DUP3
0xa66 ADD
0xa67 SWAP5
0xa68 SWAP1
0xa69 SWAP5
0xa6a MSTORE
0xa6b PUSH5 0xffffffffff
0xa71 SWAP1
0xa72 SWAP3
0xa73 AND
0xa74 BLOCKHASH
0xa75 DUP3
0xa76 DUP3
0xa77 ADD
0xa78 MSTORE
0xa79 DUP1
0xa7a MLOAD
0xa7b DUP1
0xa7c DUP4
0xa7d SUB
0xa7e DUP3
0xa7f ADD
0xa80 DUP2
0xa81 MSTORE
0xa82 PUSH1 0x60
0xa84 SWAP1
0xa85 SWAP3
0xa86 ADD
0xa87 SWAP1
0xa88 DUP2
0xa89 SWAP1
0xa8a MSTORE
0xa8b DUP2
0xa8c MLOAD
0xa8d SWAP2
0xa8e SWAP3
0xa8f SWAP1
0xa90 SWAP2
0xa91 DUP3
0xa92 SWAP2
0xa93 DUP5
0xa94 ADD
0xa95 SWAP1
0xa96 DUP1
0xa97 DUP4
0xa98 DUP4
---
0xa57: JUMPDEST 
0xa58: V882 = 0x7
0xa5a: V883 = S[0x7]
0xa5b: V884 = 0x8
0xa5d: V885 = S[0x8]
0xa5e: V886 = 0x40
0xa61: V887 = M[0x40]
0xa62: V888 = 0x20
0xa66: V889 = ADD V887 0x20
0xa6a: M[V889] = V883
0xa6b: V890 = 0xffffffffff
0xa73: V891 = AND V885 0xffffffffff
0xa74: V892 = BLOCKHASH V891
0xa77: V893 = ADD 0x40 V887
0xa78: M[V893] = V892
0xa7a: V894 = M[0x40]
0xa7d: V895 = SUB V887 V894
0xa7f: V896 = ADD 0x40 V895
0xa81: M[V894] = V896
0xa82: V897 = 0x60
0xa86: V898 = ADD V887 0x60
0xa8a: M[0x40] = V898
0xa8c: V899 = M[V894]
0xa94: V900 = ADD V894 0x20
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, 0x0, 0x0]
Stack pops: 0
Stack additions: [V894, V898, V898, V900, V899, V899, V898, V900]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, 0x0, 0x0, V894, V898, V898, V900, V899, V899, V898, V900]

================================

Block 0xa99
[0xa99:0xaa1]
---
Predecessors: [0xa57, 0xaa2]
Successors: [0xaa2, 0xab8]
---
0xa99 JUMPDEST
0xa9a PUSH1 0x20
0xa9c DUP4
0xa9d LT
0xa9e PUSH2 0xab8
0xaa1 JUMPI
---
0xa99: JUMPDEST 
0xa9a: V901 = 0x20
0xa9d: V902 = LT S2 0x20
0xa9e: V903 = 0xab8
0xaa1: JUMPI 0xab8 V902
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, 0x0, 0x0, V894, V898, V898, V900, V899, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, 0x0, 0x0, V894, V898, V898, V900, V899, S2, S1, S0]

================================

Block 0xaa2
[0xaa2:0xab7]
---
Predecessors: [0xa99]
Successors: [0xa99]
---
0xaa2 DUP1
0xaa3 MLOAD
0xaa4 DUP3
0xaa5 MSTORE
0xaa6 PUSH1 0x1f
0xaa8 NOT
0xaa9 SWAP1
0xaaa SWAP3
0xaab ADD
0xaac SWAP2
0xaad PUSH1 0x20
0xaaf SWAP2
0xab0 DUP3
0xab1 ADD
0xab2 SWAP2
0xab3 ADD
0xab4 PUSH2 0xa99
0xab7 JUMP
---
0xaa3: V904 = M[S0]
0xaa5: M[S1] = V904
0xaa6: V905 = 0x1f
0xaa8: V906 = NOT 0x1f
0xaab: V907 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xaad: V908 = 0x20
0xab1: V909 = ADD 0x20 S1
0xab3: V910 = ADD 0x20 S0
0xab4: V911 = 0xa99
0xab7: JUMP 0xa99
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, 0x0, 0x0, V894, V898, V898, V900, V899, S2, S1, S0]
Stack pops: 3
Stack additions: [V907, V909, V910]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, 0x0, 0x0, V894, V898, V898, V900, V899, V907, V909, V910]

================================

Block 0xab8
[0xab8:0xaf0]
---
Predecessors: [0xa99]
Successors: [0xaf1]
---
0xab8 JUMPDEST
0xab9 MLOAD
0xaba DUP2
0xabb MLOAD
0xabc PUSH1 0x20
0xabe SWAP4
0xabf SWAP1
0xac0 SWAP4
0xac1 SUB
0xac2 PUSH2 0x100
0xac5 EXP
0xac6 PUSH1 0x0
0xac8 NOT
0xac9 ADD
0xaca DUP1
0xacb NOT
0xacc SWAP1
0xacd SWAP2
0xace AND
0xacf SWAP3
0xad0 AND
0xad1 SWAP2
0xad2 SWAP1
0xad3 SWAP2
0xad4 OR
0xad5 SWAP1
0xad6 MSTORE
0xad7 PUSH1 0x40
0xad9 MLOAD
0xada SWAP3
0xadb ADD
0xadc DUP3
0xadd SWAP1
0xade SUB
0xadf SWAP1
0xae0 SWAP2
0xae1 SHA3
0xae2 SWAP5
0xae3 POP
0xae4 PUSH1 0x64
0xae6 SWAP3
0xae7 POP
0xae8 DUP5
0xae9 SWAP2
0xaea POP
0xaeb PUSH2 0xaf1
0xaee SWAP1
0xaef POP
0xaf0 JUMP
---
0xab8: JUMPDEST 
0xab9: V912 = M[S0]
0xabb: V913 = M[S1]
0xabc: V914 = 0x20
0xac1: V915 = SUB 0x20 S2
0xac2: V916 = 0x100
0xac5: V917 = EXP 0x100 V915
0xac6: V918 = 0x0
0xac8: V919 = NOT 0x0
0xac9: V920 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V917
0xacb: V921 = NOT V920
0xace: V922 = AND V912 V921
0xad0: V923 = AND V913 V920
0xad4: V924 = OR V923 V922
0xad6: M[S1] = V924
0xad7: V925 = 0x40
0xad9: V926 = M[0x40]
0xadb: V927 = ADD V898 V899
0xade: V928 = SUB V927 V926
0xae1: V929 = SHA3 V926 V928
0xae4: V930 = 0x64
0xaeb: V931 = 0xaf1
0xaf0: JUMP 0xaf1
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, 0x0, 0x0, V894, V898, V898, V900, V899, S2, S1, S0]
Stack pops: 10
Stack additions: [V929, S8, 0x64, V929]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, 0x0, 0x64, V929]

================================

Block 0xaf1
[0xaf1:0xaff]
---
Predecessors: [0xab8]
Successors: [0xb00, 0xb04]
---
0xaf1 JUMPDEST
0xaf2 MOD
0xaf3 SWAP1
0xaf4 POP
0xaf5 PUSH1 0x9
0xaf7 SLOAD
0xaf8 DUP2
0xaf9 LT
0xafa ISZERO
0xafb ISZERO
0xafc PUSH2 0xb04
0xaff JUMPI
---
0xaf1: JUMPDEST 
0xaf2: V932 = MOD V929 0x64
0xaf5: V933 = 0x9
0xaf7: V934 = S[0x9]
0xaf9: V935 = LT V932 V934
0xafa: V936 = ISZERO V935
0xafb: V937 = ISZERO V936
0xafc: V938 = 0xb04
0xaff: JUMPI 0xb04 V937
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, 0x0, 0x64, V929]
Stack pops: 3
Stack additions: [V932]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932]

================================

Block 0xb00
[0xb00:0xb03]
---
Predecessors: [0xaf1]
Successors: []
---
0xb00 PUSH1 0x0
0xb02 DUP1
0xb03 REVERT
---
0xb00: V939 = 0x0
0xb03: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932]

================================

Block 0xb04
[0xb04:0xb6a]
---
Predecessors: [0xaf1]
Successors: [0xb6b, 0xb6f]
---
0xb04 JUMPDEST
0xb05 PUSH1 0x0
0xb07 DUP1
0xb08 SLOAD
0xb09 PUSH1 0x7
0xb0b SLOAD
0xb0c PUSH1 0x40
0xb0e DUP1
0xb0f MLOAD
0xb10 PUSH32 0xd2cbe1300000000000000000000000000000000000000000000000000000000
0xb31 DUP2
0xb32 MSTORE
0xb33 PUSH1 0x4
0xb35 DUP2
0xb36 ADD
0xb37 SWAP3
0xb38 SWAP1
0xb39 SWAP3
0xb3a MSTORE
0xb3b PUSH1 0x24
0xb3d DUP3
0xb3e ADD
0xb3f DUP5
0xb40 SWAP1
0xb41 MSTORE
0xb42 MLOAD
0xb43 PUSH1 0x1
0xb45 PUSH1 0xa0
0xb47 PUSH1 0x2
0xb49 EXP
0xb4a SUB
0xb4b SWAP1
0xb4c SWAP3
0xb4d AND
0xb4e SWAP3
0xb4f PUSH4 0xd2cbe13
0xb54 SWAP3
0xb55 PUSH1 0x44
0xb57 DUP1
0xb58 DUP5
0xb59 ADD
0xb5a SWAP4
0xb5b DUP3
0xb5c SWAP1
0xb5d SUB
0xb5e ADD
0xb5f DUP2
0xb60 DUP4
0xb61 DUP8
0xb62 DUP1
0xb63 EXTCODESIZE
0xb64 ISZERO
0xb65 DUP1
0xb66 ISZERO
0xb67 PUSH2 0xb6f
0xb6a JUMPI
---
0xb04: JUMPDEST 
0xb05: V940 = 0x0
0xb08: V941 = S[0x0]
0xb09: V942 = 0x7
0xb0b: V943 = S[0x7]
0xb0c: V944 = 0x40
0xb0f: V945 = M[0x40]
0xb10: V946 = 0xd2cbe1300000000000000000000000000000000000000000000000000000000
0xb32: M[V945] = 0xd2cbe1300000000000000000000000000000000000000000000000000000000
0xb33: V947 = 0x4
0xb36: V948 = ADD V945 0x4
0xb3a: M[V948] = V943
0xb3b: V949 = 0x24
0xb3e: V950 = ADD V945 0x24
0xb41: M[V950] = 0x0
0xb42: V951 = M[0x40]
0xb43: V952 = 0x1
0xb45: V953 = 0xa0
0xb47: V954 = 0x2
0xb49: V955 = EXP 0x2 0xa0
0xb4a: V956 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4d: V957 = AND V941 0xffffffffffffffffffffffffffffffffffffffff
0xb4f: V958 = 0xd2cbe13
0xb55: V959 = 0x44
0xb59: V960 = ADD V945 0x44
0xb5d: V961 = SUB V945 V951
0xb5e: V962 = ADD V961 0x44
0xb63: V963 = EXTCODESIZE V957
0xb64: V964 = ISZERO V963
0xb66: V965 = ISZERO V964
0xb67: V966 = 0xb6f
0xb6a: JUMPI 0xb6f V965
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932]
Stack pops: 0
Stack additions: [V957, 0xd2cbe13, V960, 0x0, V951, V962, V951, 0x0, V957, V964]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932, V957, 0xd2cbe13, V960, 0x0, V951, V962, V951, 0x0, V957, V964]

================================

Block 0xb6b
[0xb6b:0xb6e]
---
Predecessors: [0xb04]
Successors: []
---
0xb6b PUSH1 0x0
0xb6d DUP1
0xb6e REVERT
---
0xb6b: V967 = 0x0
0xb6e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932, V957, 0xd2cbe13, V960, 0x0, V951, V962, V951, 0x0, V957, V964]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932, V957, 0xd2cbe13, V960, 0x0, V951, V962, V951, 0x0, V957, V964]

================================

Block 0xb6f
[0xb6f:0xb79]
---
Predecessors: [0xb04]
Successors: [0xb7a, 0xb83]
---
0xb6f JUMPDEST
0xb70 POP
0xb71 GAS
0xb72 CALL
0xb73 ISZERO
0xb74 DUP1
0xb75 ISZERO
0xb76 PUSH2 0xb83
0xb79 JUMPI
---
0xb6f: JUMPDEST 
0xb71: V968 = GAS
0xb72: V969 = CALL V968 V957 0x0 V951 V962 V951 0x0
0xb73: V970 = ISZERO V969
0xb75: V971 = ISZERO V970
0xb76: V972 = 0xb83
0xb79: JUMPI 0xb83 V971
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932, V957, 0xd2cbe13, V960, 0x0, V951, V962, V951, 0x0, V957, V964]
Stack pops: 7
Stack additions: [V970]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932, V957, 0xd2cbe13, V960, V970]

================================

Block 0xb7a
[0xb7a:0xb82]
---
Predecessors: [0xb6f]
Successors: []
---
0xb7a RETURNDATASIZE
0xb7b PUSH1 0x0
0xb7d DUP1
0xb7e RETURNDATACOPY
0xb7f RETURNDATASIZE
0xb80 PUSH1 0x0
0xb82 REVERT
---
0xb7a: V973 = RETURNDATASIZE
0xb7b: V974 = 0x0
0xb7e: RETURNDATACOPY 0x0 0x0 V973
0xb7f: V975 = RETURNDATASIZE
0xb80: V976 = 0x0
0xb82: REVERT 0x0 V975
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932, V957, 0xd2cbe13, V960, V970]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932, V957, 0xd2cbe13, V960, V970]

================================

Block 0xb83
[0xb83:0xba5]
---
Predecessors: [0xb6f]
Successors: [0x216]
---
0xb83 JUMPDEST
0xb84 POP
0xb85 POP
0xb86 PUSH1 0x1
0xb88 SLOAD
0xb89 PUSH2 0x776
0xb8c SWAP3
0xb8d POP
0xb8e DUP10
0xb8f SWAP2
0xb90 POP
0xb91 DUP9
0xb92 SWAP1
0xb93 DUP9
0xb94 SWAP1
0xb95 DUP9
0xb96 SWAP1
0xb97 DUP9
0xb98 SWAP1
0xb99 PUSH1 0x1
0xb9b PUSH1 0xa0
0xb9d PUSH1 0x2
0xb9f EXP
0xba0 SUB
0xba1 AND
0xba2 PUSH2 0x216
0xba5 JUMP
---
0xb83: JUMPDEST 
0xb86: V977 = 0x1
0xb88: V978 = S[0x1]
0xb89: V979 = 0x776
0xb99: V980 = 0x1
0xb9b: V981 = 0xa0
0xb9d: V982 = 0x2
0xb9f: V983 = EXP 0x2 0xa0
0xba0: V984 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba1: V985 = AND 0xffffffffffffffffffffffffffffffffffffffff V978
0xba2: V986 = 0x216
0xba5: JUMP 0x216
---
Entry stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932, V957, 0xd2cbe13, V960, V970]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, 0x776, S10, S9, S8, S7, S6, V985]
Exit stack: [V11, 0x8d, V116, V118, V120, V122, V124, V929, V932, 0x776, V116, V118, V120, V122, V124, V985]

================================

Block 0xba6
[0xba6:0xbce]
---
Predecessors: [0x1f0]
Successors: [0x207]
---
0xba6 JUMPDEST
0xba7 PUSH1 0x40
0xba9 MLOAD
0xbaa PUSH1 0x1
0xbac PUSH1 0xa0
0xbae PUSH1 0x2
0xbb0 EXP
0xbb1 SUB
0xbb2 DUP4
0xbb3 AND
0xbb4 SWAP1
0xbb5 DUP3
0xbb6 ISZERO
0xbb7 PUSH2 0x8fc
0xbba MUL
0xbbb SWAP1
0xbbc DUP4
0xbbd SWAP1
0xbbe PUSH1 0x0
0xbc0 DUP2
0xbc1 DUP2
0xbc2 DUP2
0xbc3 DUP6
0xbc4 DUP9
0xbc5 DUP9
0xbc6 CALL
0xbc7 POP
0xbc8 POP
0xbc9 POP
0xbca POP
0xbcb POP
0xbcc POP
0xbcd POP
0xbce JUMP
---
0xba6: JUMPDEST 
0xba7: V987 = 0x40
0xba9: V988 = M[0x40]
0xbaa: V989 = 0x1
0xbac: V990 = 0xa0
0xbae: V991 = 0x2
0xbb0: V992 = EXP 0x2 0xa0
0xbb1: V993 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb3: V994 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0xbb6: V995 = ISZERO V180
0xbb7: V996 = 0x8fc
0xbba: V997 = MUL 0x8fc V995
0xbbe: V998 = 0x0
0xbc6: V999 = CALL V997 V994 V180 V988 0x0 V988 0x0
0xbce: JUMP 0x207
---
Entry stack: [V11, 0x8d, 0x207, V178, V180]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0xbcf
[0xbcf:0xc42]
---
Predecessors: []
Successors: []
---
0xbcf STOP
0xbd0 PUSH16 0x776e65722e0000000000000000000000
0xbe1 STOP
0xbe2 STOP
0xbe3 STOP
0xbe4 STOP
0xbe5 STOP
0xbe6 STOP
0xbe7 STOP
0xbe8 STOP
0xbe9 STOP
0xbea STOP
0xbeb STOP
0xbec STOP
0xbed STOP
0xbee STOP
0xbef STOP
0xbf0 MISSING 0x4f
0xbf1 PUSH15 0x6c794f776e6572206d6574686f6473
0xc01 SHA3
0xc02 PUSH4 0x616c6c65
0xc07 PUSH5 0x206279206e
0xc0d PUSH16 0x6e2da165627a7a723058207afa797005
0xc1e MISSING 0xd3
0xc1f MISSING 0x2b
0xc20 MISSING 0xb5
0xc21 MISSING 0xdf
0xc22 SWAP2
0xc23 PUSH9 0x2fb4689979783f8af7
0xc2d DUP10
0xc2e MISSING 0xd0
0xc2f MISSING 0xb5
0xc30 PUSH18 0x52e89807a254b9a60029
---
0xbcf: STOP 
0xbd0: V1000 = 0x776e65722e0000000000000000000000
0xbe1: STOP 
0xbe2: STOP 
0xbe3: STOP 
0xbe4: STOP 
0xbe5: STOP 
0xbe6: STOP 
0xbe7: STOP 
0xbe8: STOP 
0xbe9: STOP 
0xbea: STOP 
0xbeb: STOP 
0xbec: STOP 
0xbed: STOP 
0xbee: STOP 
0xbef: STOP 
0xbf0: MISSING 0x4f
0xbf1: V1001 = 0x6c794f776e6572206d6574686f6473
0xc01: V1002 = SHA3 0x6c794f776e6572206d6574686f6473 S0
0xc02: V1003 = 0x616c6c65
0xc07: V1004 = 0x206279206e
0xc0d: V1005 = 0x6e2da165627a7a723058207afa797005
0xc1e: MISSING 0xd3
0xc1f: MISSING 0x2b
0xc20: MISSING 0xb5
0xc21: MISSING 0xdf
0xc23: V1006 = 0x2fb4689979783f8af7
0xc2e: MISSING 0xd0
0xc2f: MISSING 0xb5
0xc30: V1007 = 0x52e89807a254b9a60029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x776e65722e0000000000000000000000, 0x6e2da165627a7a723058207afa797005, 0x206279206e, 0x616c6c65, V1002, S8, 0x2fb4689979783f8af7, S2, S1, S0, S3, S4, S5, S6, S7, S8, 0x52e89807a254b9a60029]
Exit stack: []

================================

Function 0:
Public function signature: 0x11610c25
Entry block: 0x8f
Exit block: 0xa4
Body: 0x8f, 0x97, 0x9b, 0xa4, 0x186

Function 1:
Public function signature: 0x24600fc3
Entry block: 0xb6
Exit block: 0x8d
Body: 0x8d, 0xb6, 0xbe, 0xc2, 0x18c, 0x19f, 0x1f0, 0x207, 0xba6

Function 2:
Public function signature: 0x25a58b56
Entry block: 0xcb
Exit block: 0xe0
Body: 0xcb, 0xd3, 0xd7, 0xe0, 0x209

Function 3:
Public function signature: 0x30ce4895
Entry block: 0xfa
Exit block: 0x8d
Body: 0x8d, 0xfa, 0x102, 0x106

Function 4:
Public function signature: 0x40062b0b
Entry block: 0x12a
Exit block: 0x8d
Body: 0x8d, 0x12a, 0x62b, 0x63e, 0x68f, 0x697, 0x69b, 0x6a2, 0x6ab, 0x6b1, 0x75e, 0x762, 0x76d, 0x776

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x138
Exit block: 0x7e3
Body: 0x138, 0x140, 0x144, 0x77f, 0x792, 0x7e3

Function 6:
Public function signature: 0x590e1ae3
Entry block: 0x14d
Exit block: 0x8d
Body: 0x8d, 0x14d, 0x155, 0x159, 0x7f1, 0x807, 0x858, 0x86f, 0x873, 0x8d3, 0x8d7, 0x8e2, 0x8eb, 0x921, 0x922, 0x996, 0x99f, 0x9ae, 0x9cf, 0x9d3, 0x9de, 0x9e7

Function 7:
Public function signature: 0x602e253c
Entry block: 0x162
Exit block: 0x8d
Body: 0x8d, 0x162, 0x16a, 0x16e, 0x776, 0x9ee, 0xa06, 0xa57, 0xa99, 0xaa2, 0xab8, 0xaf1, 0xb00, 0xb04, 0xb6b, 0xb6f, 0xb7a, 0xb83

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x8d
Body: 0x8d

Function 9:
Private function
Entry block: 0x216
Exit block: 0x61d
Body: 0x216, 0x280, 0x2f5, 0x2fe, 0x314, 0x351, 0x3ab, 0x413, 0x41c, 0x432, 0x4b5, 0x526, 0x558, 0x5cc, 0x5d5, 0x5e4, 0x609, 0x61d

