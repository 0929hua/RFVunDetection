Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x93]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x93
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x93
0xa: JUMPI 0x93 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xff]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x29dcb0cf
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xff
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x29dcb0cf
0x20: V14 = EQ V12 0x29dcb0cf
0x21: V15 = 0xff
0x24: JUMPI 0xff V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x121]
---
0x25 DUP1
0x26 PUSH4 0x3ccfd60b
0x2b EQ
0x2c PUSH2 0x121
0x2f JUMPI
---
0x26: V16 = 0x3ccfd60b
0x2b: V17 = EQ 0x3ccfd60b V12
0x2c: V18 = 0x121
0x2f: JUMPI 0x121 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x133]
---
0x30 DUP1
0x31 PUSH4 0x47786d37
0x36 EQ
0x37 PUSH2 0x133
0x3a JUMPI
---
0x31: V19 = 0x47786d37
0x36: V20 = EQ 0x47786d37 V12
0x37: V21 = 0x133
0x3a: JUMPI 0x133 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x148]
---
0x3b DUP1
0x3c PUSH4 0x680a50cb
0x41 EQ
0x42 PUSH2 0x148
0x45 JUMPI
---
0x3c: V22 = 0x680a50cb
0x41: V23 = EQ 0x680a50cb V12
0x42: V24 = 0x148
0x45: JUMPI 0x148 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x15d]
---
0x46 DUP1
0x47 PUSH4 0x69ffa08a
0x4c EQ
0x4d PUSH2 0x15d
0x50 JUMPI
---
0x47: V25 = 0x69ffa08a
0x4c: V26 = EQ 0x69ffa08a V12
0x4d: V27 = 0x15d
0x50: JUMPI 0x15d V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x193]
---
0x51 DUP1
0x52 PUSH4 0x78e97925
0x57 EQ
0x58 PUSH2 0x193
0x5b JUMPI
---
0x52: V28 = 0x78e97925
0x57: V29 = EQ 0x78e97925 V12
0x58: V30 = 0x193
0x5b: JUMPI 0x193 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1b5]
---
0x5c DUP1
0x5d PUSH4 0x79ba5097
0x62 EQ
0x63 PUSH2 0x1b5
0x66 JUMPI
---
0x5d: V31 = 0x79ba5097
0x62: V32 = EQ 0x79ba5097 V12
0x63: V33 = 0x1b5
0x66: JUMPI 0x1b5 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1c7]
---
0x67 DUP1
0x68 PUSH4 0x8da5cb5b
0x6d EQ
0x6e PUSH2 0x1c7
0x71 JUMPI
---
0x68: V34 = 0x8da5cb5b
0x6d: V35 = EQ 0x8da5cb5b V12
0x6e: V36 = 0x1c7
0x71: JUMPI 0x1c7 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1f3]
---
0x72 DUP1
0x73 PUSH4 0xa6f9dae1
0x78 EQ
0x79 PUSH2 0x1f3
0x7c JUMPI
---
0x73: V37 = 0xa6f9dae1
0x78: V38 = EQ 0xa6f9dae1 V12
0x79: V39 = 0x1f3
0x7c: JUMPI 0x1f3 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x211]
---
0x7d DUP1
0x7e PUSH4 0xba278e08
0x83 EQ
0x84 PUSH2 0x211
0x87 JUMPI
---
0x7e: V40 = 0xba278e08
0x83: V41 = EQ 0xba278e08 V12
0x84: V42 = 0x211
0x87: JUMPI 0x211 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x229]
---
0x88 DUP1
0x89 PUSH4 0xe93f57b9
0x8e EQ
0x8f PUSH2 0x229
0x92 JUMPI
---
0x89: V43 = 0xe93f57b9
0x8e: V44 = EQ 0xe93f57b9 V12
0x8f: V45 = 0x229
0x92: JUMPI 0x229 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x0, 0x88]
Successors: [0x97]
---
0x93 JUMPDEST
0x94 PUSH2 0xfd
---
0x93: JUMPDEST 
0x94: V46 = 0xfd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfd]
Exit stack: [V12, 0xfd]

================================

Block 0x97
[0x97:0xa4]
---
Predecessors: [0x93]
Successors: [0xa5, 0xaa]
---
0x97 JUMPDEST
0x98 PUSH5 0xc80000000
0x9e GASPRICE
0x9f GT
0xa0 ISZERO
0xa1 PUSH2 0xaa
0xa4 JUMPI
---
0x97: JUMPDEST 
0x98: V47 = 0xc80000000
0x9e: V48 = GASPRICE
0x9f: V49 = GT V48 0xc80000000
0xa0: V50 = ISZERO V49
0xa1: V51 = 0xaa
0xa4: JUMPI 0xaa V50
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0xa5
[0xa5:0xa9]
---
Predecessors: [0x97]
Successors: []
---
0xa5 PUSH1 0x0
0xa7 PUSH1 0x0
0xa9 REVERT
---
0xa5: V52 = 0x0
0xa7: V53 = 0x0
0xa9: REVERT 0x0 0x0
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0xaa
[0xaa:0xb4]
---
Predecessors: [0x97]
Successors: [0xb5, 0xbc]
---
0xaa JUMPDEST
0xab PUSH1 0x3
0xad SLOAD
0xae TIMESTAMP
0xaf LT
0xb0 DUP1
0xb1 PUSH2 0xbc
0xb4 JUMPI
---
0xaa: JUMPDEST 
0xab: V54 = 0x3
0xad: V55 = S[0x3]
0xae: V56 = TIMESTAMP
0xaf: V57 = LT V56 V55
0xb1: V58 = 0xbc
0xb4: JUMPI 0xbc V57
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V12, 0xfd, V57]

================================

Block 0xb5
[0xb5:0xbb]
---
Predecessors: [0xaa]
Successors: [0xbc]
---
0xb5 POP
0xb6 PUSH1 0x2
0xb8 SLOAD
0xb9 TIMESTAMP
0xba LT
0xbb ISZERO
---
0xb6: V59 = 0x2
0xb8: V60 = S[0x2]
0xb9: V61 = TIMESTAMP
0xba: V62 = LT V61 V60
0xbb: V63 = ISZERO V62
---
Entry stack: [V12, 0xfd, V57]
Stack pops: 1
Stack additions: [V63]
Exit stack: [V12, 0xfd, V63]

================================

Block 0xbc
[0xbc:0xc1]
---
Predecessors: [0xaa, 0xb5]
Successors: [0xc2, 0xc7]
---
0xbc JUMPDEST
0xbd ISZERO
0xbe PUSH2 0xc7
0xc1 JUMPI
---
0xbc: JUMPDEST 
0xbd: V64 = ISZERO S0
0xbe: V65 = 0xc7
0xc1: JUMPI 0xc7 V64
---
Entry stack: [V12, 0xfd, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0xc2
[0xc2:0xc6]
---
Predecessors: [0xbc]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 PUSH1 0x0
0xc6 REVERT
---
0xc2: V66 = 0x0
0xc4: V67 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0xc7
[0xc7:0xda]
---
Predecessors: [0xbc]
Successors: [0xdb, 0xe0]
---
0xc7 JUMPDEST
0xc8 PUSH1 0x4
0xca SLOAD
0xcb PUSH1 0x1
0xcd PUSH1 0xa0
0xcf PUSH1 0x2
0xd1 EXP
0xd2 SUB
0xd3 ADDRESS
0xd4 AND
0xd5 BALANCE
0xd6 LT
0xd7 PUSH2 0xe0
0xda JUMPI
---
0xc7: JUMPDEST 
0xc8: V68 = 0x4
0xca: V69 = S[0x4]
0xcb: V70 = 0x1
0xcd: V71 = 0xa0
0xcf: V72 = 0x2
0xd1: V73 = EXP 0x2 0xa0
0xd2: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3: V75 = ADDRESS
0xd4: V76 = AND V75 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V77 = BALANCE V76
0xd6: V78 = LT V77 V69
0xd7: V79 = 0xe0
0xda: JUMPI 0xe0 V78
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0xdb
[0xdb:0xdf]
---
Predecessors: [0xc7]
Successors: []
---
0xdb PUSH1 0x0
0xdd PUSH1 0x0
0xdf REVERT
---
0xdb: V80 = 0x0
0xdd: V81 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0xe0
[0xe0:0xf5]
---
Predecessors: [0xc7]
Successors: [0xf6, 0xfa]
---
0xe0 JUMPDEST
0xe1 PUSH1 0x4
0xe3 SLOAD
0xe4 PUSH1 0x1
0xe6 PUSH1 0xa0
0xe8 PUSH1 0x2
0xea EXP
0xeb SUB
0xec ADDRESS
0xed AND
0xee BALANCE
0xef CALLVALUE
0xf0 ADD
0xf1 LT
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xe0: JUMPDEST 
0xe1: V82 = 0x4
0xe3: V83 = S[0x4]
0xe4: V84 = 0x1
0xe6: V85 = 0xa0
0xe8: V86 = 0x2
0xea: V87 = EXP 0x2 0xa0
0xeb: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec: V89 = ADDRESS
0xed: V90 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0xee: V91 = BALANCE V90
0xef: V92 = CALLVALUE
0xf0: V93 = ADD V92 V91
0xf1: V94 = LT V93 V83
0xf2: V95 = 0xfa
0xf5: JUMPI 0xfa V94
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xe0]
Successors: [0xfa]
---
0xf6 TIMESTAMP
0xf7 PUSH1 0x2
0xf9 SSTORE
---
0xf6: V96 = TIMESTAMP
0xf7: V97 = 0x2
0xf9: S[0x2] = V96
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0xfa
[0xfa:0xfa]
---
Predecessors: [0xe0, 0xf6, 0x26d, 0x489]
Successors: [0xfb]
---
0xfa JUMPDEST
---
0xfa: JUMPDEST 
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0xfb
[0xfb:0xfc]
---
Predecessors: [0xfa]
Successors: [0xfd]
---
0xfb JUMPDEST
0xfc JUMP
---
0xfb: JUMPDEST 
0xfc: JUMP 0xfd
---
Entry stack: [V12, 0xfd]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xfd
[0xfd:0xfe]
---
Predecessors: [0xfb, 0x2c8, 0x2fe, 0x4d1, 0x528, 0x562]
Successors: []
---
0xfd JUMPDEST
0xfe STOP
---
0xfd: JUMPDEST 
0xfe: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xff
[0xff:0x105]
---
Predecessors: [0xb]
Successors: [0x106, 0x107]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 ISZERO
0x102 PUSH2 0x107
0x105 JUMPI
---
0xff: JUMPDEST 
0x100: V98 = CALLVALUE
0x101: V99 = ISZERO V98
0x102: V100 = 0x107
0x105: JUMPI 0x107 V99
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x106
[0x106:0x106]
---
Predecessors: [0xff]
Successors: []
---
0x106 INVALID
---
0x106: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x107
[0x107:0x10e]
---
Predecessors: [0xff]
Successors: [0x24b]
---
0x107 JUMPDEST
0x108 PUSH2 0x10f
0x10b PUSH2 0x24b
0x10e JUMP
---
0x107: JUMPDEST 
0x108: V101 = 0x10f
0x10b: V102 = 0x24b
0x10e: JUMP 0x24b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10f]
Exit stack: [V12, 0x10f]

================================

Block 0x10f
[0x10f:0x120]
---
Predecessors: [0x24b, 0x483, 0x566]
Successors: []
---
0x10f JUMPDEST
0x110 PUSH1 0x40
0x112 DUP1
0x113 MLOAD
0x114 SWAP2
0x115 DUP3
0x116 MSTORE
0x117 MLOAD
0x118 SWAP1
0x119 DUP2
0x11a SWAP1
0x11b SUB
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP1
0x120 RETURN
---
0x10f: JUMPDEST 
0x110: V103 = 0x40
0x113: V104 = M[0x40]
0x116: M[V104] = S0
0x117: V105 = M[0x40]
0x11b: V106 = SUB V104 V105
0x11c: V107 = 0x20
0x11e: V108 = ADD 0x20 V106
0x120: RETURN V105 V108
---
Entry stack: [V12, 0x10f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10f]

================================

Block 0x121
[0x121:0x127]
---
Predecessors: [0x25]
Successors: [0x128, 0x129]
---
0x121 JUMPDEST
0x122 CALLVALUE
0x123 ISZERO
0x124 PUSH2 0x129
0x127 JUMPI
---
0x121: JUMPDEST 
0x122: V109 = CALLVALUE
0x123: V110 = ISZERO V109
0x124: V111 = 0x129
0x127: JUMPI 0x129 V110
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x128
[0x128:0x128]
---
Predecessors: [0x121]
Successors: []
---
0x128 INVALID
---
0x128: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x129
[0x129:0x130]
---
Predecessors: [0x121]
Successors: [0x251]
---
0x129 JUMPDEST
0x12a PUSH2 0xfd
0x12d PUSH2 0x251
0x130 JUMP
---
0x129: JUMPDEST 
0x12a: V112 = 0xfd
0x12d: V113 = 0x251
0x130: JUMP 0x251
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfd]
Exit stack: [V12, 0xfd]

================================

Block 0x131
[0x131:0x132]
---
Predecessors: []
Successors: []
---
0x131 JUMPDEST
0x132 STOP
---
0x131: JUMPDEST 
0x132: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x133
[0x133:0x139]
---
Predecessors: [0x30]
Successors: [0x13a, 0x13b]
---
0x133 JUMPDEST
0x134 CALLVALUE
0x135 ISZERO
0x136 PUSH2 0x13b
0x139 JUMPI
---
0x133: JUMPDEST 
0x134: V114 = CALLVALUE
0x135: V115 = ISZERO V114
0x136: V116 = 0x13b
0x139: JUMPI 0x13b V115
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13a
[0x13a:0x13a]
---
Predecessors: [0x133]
Successors: []
---
0x13a INVALID
---
0x13a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13b
[0x13b:0x145]
---
Predecessors: [0x133]
Successors: [0x2a5]
---
0x13b JUMPDEST
0x13c PUSH2 0xfd
0x13f PUSH1 0x4
0x141 CALLDATALOAD
0x142 PUSH2 0x2a5
0x145 JUMP
---
0x13b: JUMPDEST 
0x13c: V117 = 0xfd
0x13f: V118 = 0x4
0x141: V119 = CALLDATALOAD 0x4
0x142: V120 = 0x2a5
0x145: JUMP 0x2a5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfd, V119]
Exit stack: [V12, 0xfd, V119]

================================

Block 0x146
[0x146:0x147]
---
Predecessors: []
Successors: []
---
0x146 JUMPDEST
0x147 STOP
---
0x146: JUMPDEST 
0x147: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x148
[0x148:0x14e]
---
Predecessors: [0x3b]
Successors: [0x14f, 0x150]
---
0x148 JUMPDEST
0x149 CALLVALUE
0x14a ISZERO
0x14b PUSH2 0x150
0x14e JUMPI
---
0x148: JUMPDEST 
0x149: V121 = CALLVALUE
0x14a: V122 = ISZERO V121
0x14b: V123 = 0x150
0x14e: JUMPI 0x150 V122
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14f
[0x14f:0x14f]
---
Predecessors: [0x148]
Successors: []
---
0x14f INVALID
---
0x14f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x150
[0x150:0x15a]
---
Predecessors: [0x148]
Successors: [0x2cb]
---
0x150 JUMPDEST
0x151 PUSH2 0xfd
0x154 PUSH1 0x4
0x156 CALLDATALOAD
0x157 PUSH2 0x2cb
0x15a JUMP
---
0x150: JUMPDEST 
0x151: V124 = 0xfd
0x154: V125 = 0x4
0x156: V126 = CALLDATALOAD 0x4
0x157: V127 = 0x2cb
0x15a: JUMP 0x2cb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfd, V126]
Exit stack: [V12, 0xfd, V126]

================================

Block 0x15b
[0x15b:0x15c]
---
Predecessors: []
Successors: []
---
0x15b JUMPDEST
0x15c STOP
---
0x15b: JUMPDEST 
0x15c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15d
[0x15d:0x163]
---
Predecessors: [0x46]
Successors: [0x164, 0x165]
---
0x15d JUMPDEST
0x15e CALLVALUE
0x15f ISZERO
0x160 PUSH2 0x165
0x163 JUMPI
---
0x15d: JUMPDEST 
0x15e: V128 = CALLVALUE
0x15f: V129 = ISZERO V128
0x160: V130 = 0x165
0x163: JUMPI 0x165 V129
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x164
[0x164:0x164]
---
Predecessors: [0x15d]
Successors: []
---
0x164 INVALID
---
0x164: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x17e]
---
Predecessors: [0x15d]
Successors: [0x301]
---
0x165 JUMPDEST
0x166 PUSH2 0x17f
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 PUSH1 0x4
0x173 CALLDATALOAD
0x174 DUP2
0x175 AND
0x176 SWAP1
0x177 PUSH1 0x24
0x179 CALLDATALOAD
0x17a AND
0x17b PUSH2 0x301
0x17e JUMP
---
0x165: JUMPDEST 
0x166: V131 = 0x17f
0x169: V132 = 0x1
0x16b: V133 = 0xa0
0x16d: V134 = 0x2
0x16f: V135 = EXP 0x2 0xa0
0x170: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V137 = 0x4
0x173: V138 = CALLDATALOAD 0x4
0x175: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x177: V140 = 0x24
0x179: V141 = CALLDATALOAD 0x24
0x17a: V142 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V143 = 0x301
0x17e: JUMP 0x301
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x17f, V139, V142]
Exit stack: [V12, 0x17f, V139, V142]

================================

Block 0x17f
[0x17f:0x192]
---
Predecessors: [0x47b]
Successors: []
---
0x17f JUMPDEST
0x180 PUSH1 0x40
0x182 DUP1
0x183 MLOAD
0x184 SWAP2
0x185 ISZERO
0x186 ISZERO
0x187 DUP3
0x188 MSTORE
0x189 MLOAD
0x18a SWAP1
0x18b DUP2
0x18c SWAP1
0x18d SUB
0x18e PUSH1 0x20
0x190 ADD
0x191 SWAP1
0x192 RETURN
---
0x17f: JUMPDEST 
0x180: V144 = 0x40
0x183: V145 = M[0x40]
0x185: V146 = ISZERO {0x0, 0x1}
0x186: V147 = ISZERO V146
0x188: M[V145] = V147
0x189: V148 = M[0x40]
0x18d: V149 = SUB V145 V148
0x18e: V150 = 0x20
0x190: V151 = ADD 0x20 V149
0x192: RETURN V148 V151
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x193
[0x193:0x199]
---
Predecessors: [0x51]
Successors: [0x19a, 0x19b]
---
0x193 JUMPDEST
0x194 CALLVALUE
0x195 ISZERO
0x196 PUSH2 0x19b
0x199 JUMPI
---
0x193: JUMPDEST 
0x194: V152 = CALLVALUE
0x195: V153 = ISZERO V152
0x196: V154 = 0x19b
0x199: JUMPI 0x19b V153
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19a
[0x19a:0x19a]
---
Predecessors: [0x193]
Successors: []
---
0x19a INVALID
---
0x19a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19b
[0x19b:0x1a2]
---
Predecessors: [0x193]
Successors: [0x483]
---
0x19b JUMPDEST
0x19c PUSH2 0x10f
0x19f PUSH2 0x483
0x1a2 JUMP
---
0x19b: JUMPDEST 
0x19c: V155 = 0x10f
0x19f: V156 = 0x483
0x1a2: JUMP 0x483
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10f]
Exit stack: [V12, 0x10f]

================================

Block 0x1a3
[0x1a3:0x1b4]
---
Predecessors: []
Successors: []
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x40
0x1a6 DUP1
0x1a7 MLOAD
0x1a8 SWAP2
0x1a9 DUP3
0x1aa MSTORE
0x1ab MLOAD
0x1ac SWAP1
0x1ad DUP2
0x1ae SWAP1
0x1af SUB
0x1b0 PUSH1 0x20
0x1b2 ADD
0x1b3 SWAP1
0x1b4 RETURN
---
0x1a3: JUMPDEST 
0x1a4: V157 = 0x40
0x1a7: V158 = M[0x40]
0x1aa: M[V158] = S0
0x1ab: V159 = M[0x40]
0x1af: V160 = SUB V158 V159
0x1b0: V161 = 0x20
0x1b2: V162 = ADD 0x20 V160
0x1b4: RETURN V159 V162
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b5
[0x1b5:0x1bb]
---
Predecessors: [0x5c]
Successors: [0x1bc, 0x1bd]
---
0x1b5 JUMPDEST
0x1b6 CALLVALUE
0x1b7 ISZERO
0x1b8 PUSH2 0x1bd
0x1bb JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V163 = CALLVALUE
0x1b7: V164 = ISZERO V163
0x1b8: V165 = 0x1bd
0x1bb: JUMPI 0x1bd V164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bc
[0x1bc:0x1bc]
---
Predecessors: [0x1b5]
Successors: []
---
0x1bc INVALID
---
0x1bc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bd
[0x1bd:0x1c4]
---
Predecessors: [0x1b5]
Successors: [0x489]
---
0x1bd JUMPDEST
0x1be PUSH2 0xfd
0x1c1 PUSH2 0x489
0x1c4 JUMP
---
0x1bd: JUMPDEST 
0x1be: V166 = 0xfd
0x1c1: V167 = 0x489
0x1c4: JUMP 0x489
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfd]
Exit stack: [V12, 0xfd]

================================

Block 0x1c5
[0x1c5:0x1c6]
---
Predecessors: []
Successors: []
---
0x1c5 JUMPDEST
0x1c6 STOP
---
0x1c5: JUMPDEST 
0x1c6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c7
[0x1c7:0x1cd]
---
Predecessors: [0x67]
Successors: [0x1ce, 0x1cf]
---
0x1c7 JUMPDEST
0x1c8 CALLVALUE
0x1c9 ISZERO
0x1ca PUSH2 0x1cf
0x1cd JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V168 = CALLVALUE
0x1c9: V169 = ISZERO V168
0x1ca: V170 = 0x1cf
0x1cd: JUMPI 0x1cf V169
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ce
[0x1ce:0x1ce]
---
Predecessors: [0x1c7]
Successors: []
---
0x1ce INVALID
---
0x1ce: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cf
[0x1cf:0x1d6]
---
Predecessors: [0x1c7]
Successors: [0x4d3]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0x1d7
0x1d3 PUSH2 0x4d3
0x1d6 JUMP
---
0x1cf: JUMPDEST 
0x1d0: V171 = 0x1d7
0x1d3: V172 = 0x4d3
0x1d6: JUMP 0x4d3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V12, 0x1d7]

================================

Block 0x1d7
[0x1d7:0x1f2]
---
Predecessors: [0x4d3]
Successors: []
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x40
0x1da DUP1
0x1db MLOAD
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 SWAP1
0x1e5 SWAP3
0x1e6 AND
0x1e7 DUP3
0x1e8 MSTORE
0x1e9 MLOAD
0x1ea SWAP1
0x1eb DUP2
0x1ec SWAP1
0x1ed SUB
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 SWAP1
0x1f2 RETURN
---
0x1d7: JUMPDEST 
0x1d8: V173 = 0x40
0x1db: V174 = M[0x40]
0x1dc: V175 = 0x1
0x1de: V176 = 0xa0
0x1e0: V177 = 0x2
0x1e2: V178 = EXP 0x2 0xa0
0x1e3: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e6: V180 = AND V478 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: M[V174] = V180
0x1e9: V181 = M[0x40]
0x1ed: V182 = SUB V174 V181
0x1ee: V183 = 0x20
0x1f0: V184 = ADD 0x20 V182
0x1f2: RETURN V181 V184
---
Entry stack: [V12, 0x1d7, V478]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1d7]

================================

Block 0x1f3
[0x1f3:0x1f9]
---
Predecessors: [0x72]
Successors: [0x1fa, 0x1fb]
---
0x1f3 JUMPDEST
0x1f4 CALLVALUE
0x1f5 ISZERO
0x1f6 PUSH2 0x1fb
0x1f9 JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V185 = CALLVALUE
0x1f5: V186 = ISZERO V185
0x1f6: V187 = 0x1fb
0x1f9: JUMPI 0x1fb V186
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fa
[0x1fa:0x1fa]
---
Predecessors: [0x1f3]
Successors: []
---
0x1fa INVALID
---
0x1fa: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fb
[0x1fb:0x20e]
---
Predecessors: [0x1f3]
Successors: [0x4e2]
---
0x1fb JUMPDEST
0x1fc PUSH2 0xfd
0x1ff PUSH1 0x1
0x201 PUSH1 0xa0
0x203 PUSH1 0x2
0x205 EXP
0x206 SUB
0x207 PUSH1 0x4
0x209 CALLDATALOAD
0x20a AND
0x20b PUSH2 0x4e2
0x20e JUMP
---
0x1fb: JUMPDEST 
0x1fc: V188 = 0xfd
0x1ff: V189 = 0x1
0x201: V190 = 0xa0
0x203: V191 = 0x2
0x205: V192 = EXP 0x2 0xa0
0x206: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x207: V194 = 0x4
0x209: V195 = CALLDATALOAD 0x4
0x20a: V196 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V197 = 0x4e2
0x20e: JUMP 0x4e2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfd, V196]
Exit stack: [V12, 0xfd, V196]

================================

Block 0x20f
[0x20f:0x210]
---
Predecessors: []
Successors: []
---
0x20f JUMPDEST
0x210 STOP
---
0x20f: JUMPDEST 
0x210: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x211
[0x211:0x217]
---
Predecessors: [0x7d]
Successors: [0x218, 0x219]
---
0x211 JUMPDEST
0x212 CALLVALUE
0x213 ISZERO
0x214 PUSH2 0x219
0x217 JUMPI
---
0x211: JUMPDEST 
0x212: V198 = CALLVALUE
0x213: V199 = ISZERO V198
0x214: V200 = 0x219
0x217: JUMPI 0x219 V199
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x218
[0x218:0x218]
---
Predecessors: [0x211]
Successors: []
---
0x218 INVALID
---
0x218: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x219
[0x219:0x226]
---
Predecessors: [0x211]
Successors: [0x52b]
---
0x219 JUMPDEST
0x21a PUSH2 0xfd
0x21d PUSH1 0x4
0x21f CALLDATALOAD
0x220 PUSH1 0x24
0x222 CALLDATALOAD
0x223 PUSH2 0x52b
0x226 JUMP
---
0x219: JUMPDEST 
0x21a: V201 = 0xfd
0x21d: V202 = 0x4
0x21f: V203 = CALLDATALOAD 0x4
0x220: V204 = 0x24
0x222: V205 = CALLDATALOAD 0x24
0x223: V206 = 0x52b
0x226: JUMP 0x52b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfd, V203, V205]
Exit stack: [V12, 0xfd, V203, V205]

================================

Block 0x227
[0x227:0x228]
---
Predecessors: []
Successors: []
---
0x227 JUMPDEST
0x228 STOP
---
0x227: JUMPDEST 
0x228: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x229
[0x229:0x22f]
---
Predecessors: [0x88]
Successors: [0x230, 0x231]
---
0x229 JUMPDEST
0x22a CALLVALUE
0x22b ISZERO
0x22c PUSH2 0x231
0x22f JUMPI
---
0x229: JUMPDEST 
0x22a: V207 = CALLVALUE
0x22b: V208 = ISZERO V207
0x22c: V209 = 0x231
0x22f: JUMPI 0x231 V208
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x230
[0x230:0x230]
---
Predecessors: [0x229]
Successors: []
---
0x230 INVALID
---
0x230: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x231
[0x231:0x238]
---
Predecessors: [0x229]
Successors: [0x566]
---
0x231 JUMPDEST
0x232 PUSH2 0x10f
0x235 PUSH2 0x566
0x238 JUMP
---
0x231: JUMPDEST 
0x232: V210 = 0x10f
0x235: V211 = 0x566
0x238: JUMP 0x566
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10f]
Exit stack: [V12, 0x10f]

================================

Block 0x239
[0x239:0x24a]
---
Predecessors: []
Successors: []
---
0x239 JUMPDEST
0x23a PUSH1 0x40
0x23c DUP1
0x23d MLOAD
0x23e SWAP2
0x23f DUP3
0x240 MSTORE
0x241 MLOAD
0x242 SWAP1
0x243 DUP2
0x244 SWAP1
0x245 SUB
0x246 PUSH1 0x20
0x248 ADD
0x249 SWAP1
0x24a RETURN
---
0x239: JUMPDEST 
0x23a: V212 = 0x40
0x23d: V213 = M[0x40]
0x240: M[V213] = S0
0x241: V214 = M[0x40]
0x245: V215 = SUB V213 V214
0x246: V216 = 0x20
0x248: V217 = ADD 0x20 V215
0x24a: RETURN V214 V217
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x24b
[0x24b:0x250]
---
Predecessors: [0x107]
Successors: [0x10f]
---
0x24b JUMPDEST
0x24c PUSH1 0x2
0x24e SLOAD
0x24f DUP2
0x250 JUMP
---
0x24b: JUMPDEST 
0x24c: V218 = 0x2
0x24e: V219 = S[0x2]
0x250: JUMP 0x10f
---
Entry stack: [V12, 0x10f]
Stack pops: 1
Stack additions: [S0, V219]
Exit stack: [V12, 0x10f, V219]

================================

Block 0x251
[0x251:0x267]
---
Predecessors: [0x129]
Successors: [0x268, 0x26d]
---
0x251 JUMPDEST
0x252 PUSH1 0x0
0x254 SLOAD
0x255 CALLER
0x256 PUSH1 0x1
0x258 PUSH1 0xa0
0x25a PUSH1 0x2
0x25c EXP
0x25d SUB
0x25e SWAP1
0x25f DUP2
0x260 AND
0x261 SWAP2
0x262 AND
0x263 EQ
0x264 PUSH2 0x26d
0x267 JUMPI
---
0x251: JUMPDEST 
0x252: V220 = 0x0
0x254: V221 = S[0x0]
0x255: V222 = CALLER
0x256: V223 = 0x1
0x258: V224 = 0xa0
0x25a: V225 = 0x2
0x25c: V226 = EXP 0x2 0xa0
0x25d: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x260: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x262: V229 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x263: V230 = EQ V229 V228
0x264: V231 = 0x26d
0x267: JUMPI 0x26d V230
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0x268
[0x268:0x26c]
---
Predecessors: [0x251]
Successors: []
---
0x268 PUSH1 0x0
0x26a PUSH1 0x0
0x26c REVERT
---
0x268: V232 = 0x0
0x26a: V233 = 0x0
0x26c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0x26d
[0x26d:0x29b]
---
Predecessors: [0x251]
Successors: [0xfa, 0x29c]
---
0x26d JUMPDEST
0x26e PUSH1 0x0
0x270 DUP1
0x271 SLOAD
0x272 PUSH1 0x40
0x274 MLOAD
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d SWAP2
0x27e DUP3
0x27f AND
0x280 SWAP3
0x281 ADDRESS
0x282 SWAP1
0x283 SWAP3
0x284 AND
0x285 BALANCE
0x286 SWAP2
0x287 DUP2
0x288 DUP2
0x289 DUP2
0x28a DUP6
0x28b DUP8
0x28c PUSH2 0x8796
0x28f GAS
0x290 SUB
0x291 CALL
0x292 SWAP3
0x293 POP
0x294 POP
0x295 POP
0x296 ISZERO
0x297 ISZERO
0x298 PUSH2 0xfa
0x29b JUMPI
---
0x26d: JUMPDEST 
0x26e: V234 = 0x0
0x271: V235 = S[0x0]
0x272: V236 = 0x40
0x274: V237 = M[0x40]
0x275: V238 = 0x1
0x277: V239 = 0xa0
0x279: V240 = 0x2
0x27b: V241 = EXP 0x2 0xa0
0x27c: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x281: V244 = ADDRESS
0x284: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x285: V246 = BALANCE V245
0x28c: V247 = 0x8796
0x28f: V248 = GAS
0x290: V249 = SUB V248 0x8796
0x291: V250 = CALL V249 V243 V246 V237 0x0 V237 0x0
0x296: V251 = ISZERO V250
0x297: V252 = ISZERO V251
0x298: V253 = 0xfa
0x29b: JUMPI 0xfa V252
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0x29c
[0x29c:0x2a0]
---
Predecessors: [0x26d]
Successors: []
---
0x29c PUSH1 0x0
0x29e PUSH1 0x0
0x2a0 REVERT
---
0x29c: V254 = 0x0
0x29e: V255 = 0x0
0x2a0: REVERT 0x0 0x0
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0x2a1
[0x2a1:0x2a1]
---
Predecessors: []
Successors: [0x2a2]
---
0x2a1 JUMPDEST
---
0x2a1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2a2
[0x2a2:0x2a2]
---
Predecessors: [0x2a1]
Successors: [0x2a3]
---
0x2a2 JUMPDEST
---
0x2a2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2a3
[0x2a3:0x2a4]
---
Predecessors: [0x2a2]
Successors: []
Has unresolved jump.
---
0x2a3 JUMPDEST
0x2a4 JUMP
---
0x2a3: JUMPDEST 
0x2a4: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a5
[0x2a5:0x2bb]
---
Predecessors: [0x13b]
Successors: [0x2bc, 0x2c1]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x0
0x2a8 SLOAD
0x2a9 CALLER
0x2aa PUSH1 0x1
0x2ac PUSH1 0xa0
0x2ae PUSH1 0x2
0x2b0 EXP
0x2b1 SUB
0x2b2 SWAP1
0x2b3 DUP2
0x2b4 AND
0x2b5 SWAP2
0x2b6 AND
0x2b7 EQ
0x2b8 PUSH2 0x2c1
0x2bb JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V256 = 0x0
0x2a8: V257 = S[0x0]
0x2a9: V258 = CALLER
0x2aa: V259 = 0x1
0x2ac: V260 = 0xa0
0x2ae: V261 = 0x2
0x2b0: V262 = EXP 0x2 0xa0
0x2b1: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b4: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x2b6: V265 = AND V257 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V266 = EQ V265 V264
0x2b8: V267 = 0x2c1
0x2bb: JUMPI 0x2c1 V266
---
Entry stack: [V12, 0xfd, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V119]

================================

Block 0x2bc
[0x2bc:0x2c0]
---
Predecessors: [0x2a5]
Successors: []
---
0x2bc PUSH1 0x0
0x2be PUSH1 0x0
0x2c0 REVERT
---
0x2bc: V268 = 0x0
0x2be: V269 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V12, 0xfd, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V119]

================================

Block 0x2c1
[0x2c1:0x2c6]
---
Predecessors: [0x2a5]
Successors: [0x2c7]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x4
0x2c4 DUP2
0x2c5 SWAP1
0x2c6 SSTORE
---
0x2c1: JUMPDEST 
0x2c2: V270 = 0x4
0x2c6: S[0x4] = V119
---
Entry stack: [V12, 0xfd, V119]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xfd, V119]

================================

Block 0x2c7
[0x2c7:0x2c7]
---
Predecessors: [0x2c1]
Successors: [0x2c8]
---
0x2c7 JUMPDEST
---
0x2c7: JUMPDEST 
---
Entry stack: [V12, 0xfd, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V119]

================================

Block 0x2c8
[0x2c8:0x2ca]
---
Predecessors: [0x2c7]
Successors: [0xfd]
---
0x2c8 JUMPDEST
0x2c9 POP
0x2ca JUMP
---
0x2c8: JUMPDEST 
0x2ca: JUMP 0xfd
---
Entry stack: [V12, 0xfd, V119]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cb
[0x2cb:0x2e1]
---
Predecessors: [0x150]
Successors: [0x2e2, 0x2e7]
---
0x2cb JUMPDEST
0x2cc PUSH1 0x0
0x2ce SLOAD
0x2cf CALLER
0x2d0 PUSH1 0x1
0x2d2 PUSH1 0xa0
0x2d4 PUSH1 0x2
0x2d6 EXP
0x2d7 SUB
0x2d8 SWAP1
0x2d9 DUP2
0x2da AND
0x2db SWAP2
0x2dc AND
0x2dd EQ
0x2de PUSH2 0x2e7
0x2e1 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V271 = 0x0
0x2ce: V272 = S[0x0]
0x2cf: V273 = CALLER
0x2d0: V274 = 0x1
0x2d2: V275 = 0xa0
0x2d4: V276 = 0x2
0x2d6: V277 = EXP 0x2 0xa0
0x2d7: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2da: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x2dc: V280 = AND V272 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V281 = EQ V280 V279
0x2de: V282 = 0x2e7
0x2e1: JUMPI 0x2e7 V281
---
Entry stack: [V12, 0xfd, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V126]

================================

Block 0x2e2
[0x2e2:0x2e6]
---
Predecessors: [0x2cb]
Successors: []
---
0x2e2 PUSH1 0x0
0x2e4 PUSH1 0x0
0x2e6 REVERT
---
0x2e2: V283 = 0x0
0x2e4: V284 = 0x0
0x2e6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xfd, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V126]

================================

Block 0x2e7
[0x2e7:0x2f1]
---
Predecessors: [0x2cb]
Successors: [0x2f2, 0x2f7]
---
0x2e7 JUMPDEST
0x2e8 PUSH1 0x2
0x2ea SLOAD
0x2eb DUP2
0x2ec GT
0x2ed ISZERO
0x2ee PUSH2 0x2f7
0x2f1 JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V285 = 0x2
0x2ea: V286 = S[0x2]
0x2ec: V287 = GT V126 V286
0x2ed: V288 = ISZERO V287
0x2ee: V289 = 0x2f7
0x2f1: JUMPI 0x2f7 V288
---
Entry stack: [V12, 0xfd, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xfd, V126]

================================

Block 0x2f2
[0x2f2:0x2f6]
---
Predecessors: [0x2e7]
Successors: []
---
0x2f2 PUSH1 0x0
0x2f4 PUSH1 0x0
0x2f6 REVERT
---
0x2f2: V290 = 0x0
0x2f4: V291 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xfd, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V126]

================================

Block 0x2f7
[0x2f7:0x2fc]
---
Predecessors: [0x2e7]
Successors: [0x2fd]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x2
0x2fa DUP2
0x2fb SWAP1
0x2fc SSTORE
---
0x2f7: JUMPDEST 
0x2f8: V292 = 0x2
0x2fc: S[0x2] = V126
---
Entry stack: [V12, 0xfd, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xfd, V126]

================================

Block 0x2fd
[0x2fd:0x2fd]
---
Predecessors: [0x2f7]
Successors: [0x2fe]
---
0x2fd JUMPDEST
---
0x2fd: JUMPDEST 
---
Entry stack: [V12, 0xfd, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V126]

================================

Block 0x2fe
[0x2fe:0x300]
---
Predecessors: [0x2fd]
Successors: [0xfd]
---
0x2fe JUMPDEST
0x2ff POP
0x300 JUMP
---
0x2fe: JUMPDEST 
0x300: JUMP 0xfd
---
Entry stack: [V12, 0xfd, V126]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x301
[0x301:0x31c]
---
Predecessors: [0x165]
Successors: [0x31d, 0x322]
---
0x301 JUMPDEST
0x302 PUSH1 0x0
0x304 DUP1
0x305 SLOAD
0x306 DUP2
0x307 SWAP1
0x308 DUP2
0x309 SWAP1
0x30a CALLER
0x30b PUSH1 0x1
0x30d PUSH1 0xa0
0x30f PUSH1 0x2
0x311 EXP
0x312 SUB
0x313 SWAP1
0x314 DUP2
0x315 AND
0x316 SWAP2
0x317 AND
0x318 EQ
0x319 PUSH2 0x322
0x31c JUMPI
---
0x301: JUMPDEST 
0x302: V293 = 0x0
0x305: V294 = S[0x0]
0x30a: V295 = CALLER
0x30b: V296 = 0x1
0x30d: V297 = 0xa0
0x30f: V298 = 0x2
0x311: V299 = EXP 0x2 0xa0
0x312: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x315: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x317: V302 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x318: V303 = EQ V302 V301
0x319: V304 = 0x322
0x31c: JUMPI 0x322 V303
---
Entry stack: [V12, 0x17f, V139, V142]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x17f, V139, V142, 0x0, 0x0, 0x0]

================================

Block 0x31d
[0x31d:0x321]
---
Predecessors: [0x301]
Successors: []
---
0x31d PUSH1 0x0
0x31f PUSH1 0x0
0x321 REVERT
---
0x31d: V305 = 0x0
0x31f: V306 = 0x0
0x321: REVERT 0x0 0x0
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17f, V139, V142, 0x0, 0x0, 0x0]

================================

Block 0x322
[0x322:0x383]
---
Predecessors: [0x301]
Successors: [0x384, 0x385]
---
0x322 JUMPDEST
0x323 DUP5
0x324 SWAP2
0x325 POP
0x326 DUP2
0x327 PUSH1 0x1
0x329 PUSH1 0xa0
0x32b PUSH1 0x2
0x32d EXP
0x32e SUB
0x32f AND
0x330 PUSH4 0x70a08231
0x335 ADDRESS
0x336 PUSH1 0x0
0x338 PUSH1 0x40
0x33a MLOAD
0x33b PUSH1 0x20
0x33d ADD
0x33e MSTORE
0x33f PUSH1 0x40
0x341 MLOAD
0x342 DUP3
0x343 PUSH4 0xffffffff
0x348 AND
0x349 PUSH1 0xe0
0x34b PUSH1 0x2
0x34d EXP
0x34e MUL
0x34f DUP2
0x350 MSTORE
0x351 PUSH1 0x4
0x353 ADD
0x354 DUP1
0x355 DUP3
0x356 PUSH1 0x1
0x358 PUSH1 0xa0
0x35a PUSH1 0x2
0x35c EXP
0x35d SUB
0x35e AND
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 AND
0x368 DUP2
0x369 MSTORE
0x36a PUSH1 0x20
0x36c ADD
0x36d SWAP2
0x36e POP
0x36f POP
0x370 PUSH1 0x20
0x372 PUSH1 0x40
0x374 MLOAD
0x375 DUP1
0x376 DUP4
0x377 SUB
0x378 DUP2
0x379 PUSH1 0x0
0x37b DUP8
0x37c DUP1
0x37d EXTCODESIZE
0x37e ISZERO
0x37f ISZERO
0x380 PUSH2 0x385
0x383 JUMPI
---
0x322: JUMPDEST 
0x327: V307 = 0x1
0x329: V308 = 0xa0
0x32b: V309 = 0x2
0x32d: V310 = EXP 0x2 0xa0
0x32e: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32f: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x330: V313 = 0x70a08231
0x335: V314 = ADDRESS
0x336: V315 = 0x0
0x338: V316 = 0x40
0x33a: V317 = M[0x40]
0x33b: V318 = 0x20
0x33d: V319 = ADD 0x20 V317
0x33e: M[V319] = 0x0
0x33f: V320 = 0x40
0x341: V321 = M[0x40]
0x343: V322 = 0xffffffff
0x348: V323 = AND 0xffffffff 0x70a08231
0x349: V324 = 0xe0
0x34b: V325 = 0x2
0x34d: V326 = EXP 0x2 0xe0
0x34e: V327 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x350: M[V321] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x351: V328 = 0x4
0x353: V329 = ADD 0x4 V321
0x356: V330 = 0x1
0x358: V331 = 0xa0
0x35a: V332 = 0x2
0x35c: V333 = EXP 0x2 0xa0
0x35d: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35e: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x35f: V336 = 0x1
0x361: V337 = 0xa0
0x363: V338 = 0x2
0x365: V339 = EXP 0x2 0xa0
0x366: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x367: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x369: M[V329] = V341
0x36a: V342 = 0x20
0x36c: V343 = ADD 0x20 V329
0x370: V344 = 0x20
0x372: V345 = 0x40
0x374: V346 = M[0x40]
0x377: V347 = SUB V343 V346
0x379: V348 = 0x0
0x37d: V349 = EXTCODESIZE V312
0x37e: V350 = ISZERO V349
0x37f: V351 = ISZERO V350
0x380: V352 = 0x385
0x383: JUMPI 0x385 V351
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S4, S0, V312, 0x70a08231, V343, 0x20, V346, V347, V346, 0x0, V312]
Exit stack: [V12, 0x17f, V139, V142, 0x0, V139, 0x0, V312, 0x70a08231, V343, 0x20, V346, V347, V346, 0x0, V312]

================================

Block 0x384
[0x384:0x384]
---
Predecessors: [0x322]
Successors: []
---
0x384 INVALID
---
0x384: INVALID 
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, V139, 0x0, V312, 0x70a08231, V343, 0x20, V346, V347, V346, 0x0, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17f, V139, V142, 0x0, V139, 0x0, V312, 0x70a08231, V343, 0x20, V346, V347, V346, 0x0, V312]

================================

Block 0x385
[0x385:0x391]
---
Predecessors: [0x322]
Successors: [0x392, 0x393]
---
0x385 JUMPDEST
0x386 PUSH2 0x2c6
0x389 GAS
0x38a SUB
0x38b CALL
0x38c ISZERO
0x38d ISZERO
0x38e PUSH2 0x393
0x391 JUMPI
---
0x385: JUMPDEST 
0x386: V353 = 0x2c6
0x389: V354 = GAS
0x38a: V355 = SUB V354 0x2c6
0x38b: V356 = CALL V355 V312 0x0 V346 V347 V346 0x20
0x38c: V357 = ISZERO V356
0x38d: V358 = ISZERO V357
0x38e: V359 = 0x393
0x391: JUMPI 0x393 V358
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, V139, 0x0, V312, 0x70a08231, V343, 0x20, V346, V347, V346, 0x0, V312]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x17f, V139, V142, 0x0, V139, 0x0, V312, 0x70a08231, V343]

================================

Block 0x392
[0x392:0x392]
---
Predecessors: [0x385]
Successors: []
---
0x392 INVALID
---
0x392: INVALID 
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, V139, 0x0, V312, 0x70a08231, V343]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17f, V139, V142, 0x0, V139, 0x0, V312, 0x70a08231, V343]

================================

Block 0x393
[0x393:0x405]
---
Predecessors: [0x385]
Successors: [0x406, 0x407]
---
0x393 JUMPDEST
0x394 POP
0x395 POP
0x396 POP
0x397 PUSH1 0x40
0x399 MLOAD
0x39a DUP1
0x39b MLOAD
0x39c SWAP1
0x39d POP
0x39e SWAP1
0x39f POP
0x3a0 DUP2
0x3a1 PUSH1 0x1
0x3a3 PUSH1 0xa0
0x3a5 PUSH1 0x2
0x3a7 EXP
0x3a8 SUB
0x3a9 AND
0x3aa PUSH4 0xa9059cbb
0x3af DUP6
0x3b0 DUP4
0x3b1 PUSH1 0x0
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 PUSH1 0x20
0x3b8 ADD
0x3b9 MSTORE
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd DUP4
0x3be PUSH4 0xffffffff
0x3c3 AND
0x3c4 PUSH1 0xe0
0x3c6 PUSH1 0x2
0x3c8 EXP
0x3c9 MUL
0x3ca DUP2
0x3cb MSTORE
0x3cc PUSH1 0x4
0x3ce ADD
0x3cf DUP1
0x3d0 DUP4
0x3d1 PUSH1 0x1
0x3d3 PUSH1 0xa0
0x3d5 PUSH1 0x2
0x3d7 EXP
0x3d8 SUB
0x3d9 AND
0x3da PUSH1 0x1
0x3dc PUSH1 0xa0
0x3de PUSH1 0x2
0x3e0 EXP
0x3e1 SUB
0x3e2 AND
0x3e3 DUP2
0x3e4 MSTORE
0x3e5 PUSH1 0x20
0x3e7 ADD
0x3e8 DUP3
0x3e9 DUP2
0x3ea MSTORE
0x3eb PUSH1 0x20
0x3ed ADD
0x3ee SWAP3
0x3ef POP
0x3f0 POP
0x3f1 POP
0x3f2 PUSH1 0x20
0x3f4 PUSH1 0x40
0x3f6 MLOAD
0x3f7 DUP1
0x3f8 DUP4
0x3f9 SUB
0x3fa DUP2
0x3fb PUSH1 0x0
0x3fd DUP8
0x3fe DUP1
0x3ff EXTCODESIZE
0x400 ISZERO
0x401 ISZERO
0x402 PUSH2 0x407
0x405 JUMPI
---
0x393: JUMPDEST 
0x397: V360 = 0x40
0x399: V361 = M[0x40]
0x39b: V362 = M[V361]
0x3a1: V363 = 0x1
0x3a3: V364 = 0xa0
0x3a5: V365 = 0x2
0x3a7: V366 = EXP 0x2 0xa0
0x3a8: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a9: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x3aa: V369 = 0xa9059cbb
0x3b1: V370 = 0x0
0x3b3: V371 = 0x40
0x3b5: V372 = M[0x40]
0x3b6: V373 = 0x20
0x3b8: V374 = ADD 0x20 V372
0x3b9: M[V374] = 0x0
0x3ba: V375 = 0x40
0x3bc: V376 = M[0x40]
0x3be: V377 = 0xffffffff
0x3c3: V378 = AND 0xffffffff 0xa9059cbb
0x3c4: V379 = 0xe0
0x3c6: V380 = 0x2
0x3c8: V381 = EXP 0x2 0xe0
0x3c9: V382 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x3cb: M[V376] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3cc: V383 = 0x4
0x3ce: V384 = ADD 0x4 V376
0x3d1: V385 = 0x1
0x3d3: V386 = 0xa0
0x3d5: V387 = 0x2
0x3d7: V388 = EXP 0x2 0xa0
0x3d8: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d9: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x3da: V391 = 0x1
0x3dc: V392 = 0xa0
0x3de: V393 = 0x2
0x3e0: V394 = EXP 0x2 0xa0
0x3e1: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e2: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x3e4: M[V384] = V396
0x3e5: V397 = 0x20
0x3e7: V398 = ADD 0x20 V384
0x3ea: M[V398] = V362
0x3eb: V399 = 0x20
0x3ed: V400 = ADD 0x20 V398
0x3f2: V401 = 0x20
0x3f4: V402 = 0x40
0x3f6: V403 = M[0x40]
0x3f9: V404 = SUB V400 V403
0x3fb: V405 = 0x0
0x3ff: V406 = EXTCODESIZE V368
0x400: V407 = ISZERO V406
0x401: V408 = ISZERO V407
0x402: V409 = 0x407
0x405: JUMPI 0x407 V408
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, V139, 0x0, V312, 0x70a08231, V343]
Stack pops: 7
Stack additions: [S6, S5, S4, V362, V368, 0xa9059cbb, V400, 0x20, V403, V404, V403, 0x0, V368]
Exit stack: [V12, 0x17f, V139, V142, 0x0, V139, V362, V368, 0xa9059cbb, V400, 0x20, V403, V404, V403, 0x0, V368]

================================

Block 0x406
[0x406:0x406]
---
Predecessors: [0x393]
Successors: []
---
0x406 INVALID
---
0x406: INVALID 
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, V139, V362, V368, 0xa9059cbb, V400, 0x20, V403, V404, V403, 0x0, V368]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17f, V139, V142, 0x0, V139, V362, V368, 0xa9059cbb, V400, 0x20, V403, V404, V403, 0x0, V368]

================================

Block 0x407
[0x407:0x413]
---
Predecessors: [0x393]
Successors: [0x414, 0x415]
---
0x407 JUMPDEST
0x408 PUSH2 0x2c6
0x40b GAS
0x40c SUB
0x40d CALL
0x40e ISZERO
0x40f ISZERO
0x410 PUSH2 0x415
0x413 JUMPI
---
0x407: JUMPDEST 
0x408: V410 = 0x2c6
0x40b: V411 = GAS
0x40c: V412 = SUB V411 0x2c6
0x40d: V413 = CALL V412 V368 0x0 V403 V404 V403 0x20
0x40e: V414 = ISZERO V413
0x40f: V415 = ISZERO V414
0x410: V416 = 0x415
0x413: JUMPI 0x415 V415
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, V139, V362, V368, 0xa9059cbb, V400, 0x20, V403, V404, V403, 0x0, V368]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x17f, V139, V142, 0x0, V139, V362, V368, 0xa9059cbb, V400]

================================

Block 0x414
[0x414:0x414]
---
Predecessors: [0x407]
Successors: []
---
0x414 INVALID
---
0x414: INVALID 
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, V139, V362, V368, 0xa9059cbb, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17f, V139, V142, 0x0, V139, V362, V368, 0xa9059cbb, V400]

================================

Block 0x415
[0x415:0x422]
---
Predecessors: [0x407]
Successors: [0x423, 0x475]
---
0x415 JUMPDEST
0x416 POP
0x417 POP
0x418 PUSH1 0x40
0x41a MLOAD
0x41b MLOAD
0x41c ISZERO
0x41d SWAP1
0x41e POP
0x41f PUSH2 0x475
0x422 JUMPI
---
0x415: JUMPDEST 
0x418: V417 = 0x40
0x41a: V418 = M[0x40]
0x41b: V419 = M[V418]
0x41c: V420 = ISZERO V419
0x41f: V421 = 0x475
0x422: JUMPI 0x475 V420
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, V139, V362, V368, 0xa9059cbb, V400]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x17f, V139, V142, 0x0, V139, V362]

================================

Block 0x423
[0x423:0x474]
---
Predecessors: [0x415]
Successors: [0x47a]
---
0x423 PUSH1 0x40
0x425 DUP1
0x426 MLOAD
0x427 PUSH1 0x1
0x429 PUSH1 0xa0
0x42b PUSH1 0x2
0x42d EXP
0x42e SUB
0x42f DUP1
0x430 DUP9
0x431 AND
0x432 DUP3
0x433 MSTORE
0x434 DUP7
0x435 AND
0x436 PUSH1 0x20
0x438 DUP3
0x439 ADD
0x43a MSTORE
0x43b DUP1
0x43c DUP3
0x43d ADD
0x43e DUP4
0x43f SWAP1
0x440 MSTORE
0x441 SWAP1
0x442 MLOAD
0x443 PUSH32 0x977a8f1bdcf5f444d404662ea2c090d707ebcef1be61b37fe6ce74d0c6288fb8
0x464 SWAP2
0x465 DUP2
0x466 SWAP1
0x467 SUB
0x468 PUSH1 0x60
0x46a ADD
0x46b SWAP1
0x46c LOG1
0x46d PUSH1 0x1
0x46f SWAP3
0x470 POP
0x471 PUSH2 0x47a
0x474 JUMP
---
0x423: V422 = 0x40
0x426: V423 = M[0x40]
0x427: V424 = 0x1
0x429: V425 = 0xa0
0x42b: V426 = 0x2
0x42d: V427 = EXP 0x2 0xa0
0x42e: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x431: V429 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x433: M[V423] = V429
0x435: V430 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x436: V431 = 0x20
0x439: V432 = ADD V423 0x20
0x43a: M[V432] = V430
0x43d: V433 = ADD 0x40 V423
0x440: M[V433] = V362
0x442: V434 = M[0x40]
0x443: V435 = 0x977a8f1bdcf5f444d404662ea2c090d707ebcef1be61b37fe6ce74d0c6288fb8
0x467: V436 = SUB V423 V434
0x468: V437 = 0x60
0x46a: V438 = ADD 0x60 V436
0x46c: LOG V434 V438 0x977a8f1bdcf5f444d404662ea2c090d707ebcef1be61b37fe6ce74d0c6288fb8
0x46d: V439 = 0x1
0x471: V440 = 0x47a
0x474: JUMP 0x47a
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, V139, V362]
Stack pops: 5
Stack additions: [S4, S3, 0x1, S1, S0]
Exit stack: [V12, 0x17f, V139, V142, 0x1, V139, V362]

================================

Block 0x475
[0x475:0x479]
---
Predecessors: [0x415]
Successors: [0x47a]
---
0x475 JUMPDEST
0x476 PUSH1 0x0
0x478 SWAP3
0x479 POP
---
0x475: JUMPDEST 
0x476: V441 = 0x0
---
Entry stack: [V12, 0x17f, V139, V142, 0x0, V139, V362]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V12, 0x17f, V139, V142, 0x0, V139, V362]

================================

Block 0x47a
[0x47a:0x47a]
---
Predecessors: [0x423, 0x475]
Successors: [0x47b]
---
0x47a JUMPDEST
---
0x47a: JUMPDEST 
---
Entry stack: [V12, 0x17f, V139, V142, {0x0, 0x1}, V139, V362]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x17f, V139, V142, {0x0, 0x1}, V139, V362]

================================

Block 0x47b
[0x47b:0x482]
---
Predecessors: [0x47a]
Successors: [0x17f]
---
0x47b JUMPDEST
0x47c POP
0x47d POP
0x47e SWAP3
0x47f SWAP2
0x480 POP
0x481 POP
0x482 JUMP
---
0x47b: JUMPDEST 
0x482: JUMP 0x17f
---
Entry stack: [V12, 0x17f, V139, V142, {0x0, 0x1}, V139, V362]
Stack pops: 6
Stack additions: [S2]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x483
[0x483:0x488]
---
Predecessors: [0x19b]
Successors: [0x10f]
---
0x483 JUMPDEST
0x484 PUSH1 0x3
0x486 SLOAD
0x487 DUP2
0x488 JUMP
---
0x483: JUMPDEST 
0x484: V442 = 0x3
0x486: V443 = S[0x3]
0x488: JUMP 0x10f
---
Entry stack: [V12, 0x10f]
Stack pops: 1
Stack additions: [S0, V443]
Exit stack: [V12, 0x10f, V443]

================================

Block 0x489
[0x489:0x4a0]
---
Predecessors: [0x1bd]
Successors: [0xfa, 0x4a1]
---
0x489 JUMPDEST
0x48a PUSH1 0x1
0x48c SLOAD
0x48d CALLER
0x48e PUSH1 0x1
0x490 PUSH1 0xa0
0x492 PUSH1 0x2
0x494 EXP
0x495 SUB
0x496 SWAP1
0x497 DUP2
0x498 AND
0x499 SWAP2
0x49a AND
0x49b EQ
0x49c ISZERO
0x49d PUSH2 0xfa
0x4a0 JUMPI
---
0x489: JUMPDEST 
0x48a: V444 = 0x1
0x48c: V445 = S[0x1]
0x48d: V446 = CALLER
0x48e: V447 = 0x1
0x490: V448 = 0xa0
0x492: V449 = 0x2
0x494: V450 = EXP 0x2 0xa0
0x495: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x498: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x49a: V453 = AND V445 0xffffffffffffffffffffffffffffffffffffffff
0x49b: V454 = EQ V453 V452
0x49c: V455 = ISZERO V454
0x49d: V456 = 0xfa
0x4a0: JUMPI 0xfa V455
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0x4a1
[0x4a1:0x4cf]
---
Predecessors: [0x489]
Successors: [0x4d0]
---
0x4a1 PUSH1 0x1
0x4a3 SLOAD
0x4a4 PUSH1 0x0
0x4a6 DUP1
0x4a7 SLOAD
0x4a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bd NOT
0x4be AND
0x4bf PUSH1 0x1
0x4c1 PUSH1 0xa0
0x4c3 PUSH1 0x2
0x4c5 EXP
0x4c6 SUB
0x4c7 SWAP1
0x4c8 SWAP3
0x4c9 AND
0x4ca SWAP2
0x4cb SWAP1
0x4cc SWAP2
0x4cd OR
0x4ce SWAP1
0x4cf SSTORE
---
0x4a1: V457 = 0x1
0x4a3: V458 = S[0x1]
0x4a4: V459 = 0x0
0x4a7: V460 = S[0x0]
0x4a8: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bd: V462 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4be: V463 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V460
0x4bf: V464 = 0x1
0x4c1: V465 = 0xa0
0x4c3: V466 = 0x2
0x4c5: V467 = EXP 0x2 0xa0
0x4c6: V468 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c9: V469 = AND V458 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V470 = OR V469 V463
0x4cf: S[0x0] = V470
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0x4d0
[0x4d0:0x4d0]
---
Predecessors: [0x4a1]
Successors: [0x4d1]
---
0x4d0 JUMPDEST
---
0x4d0: JUMPDEST 
---
Entry stack: [V12, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd]

================================

Block 0x4d1
[0x4d1:0x4d2]
---
Predecessors: [0x4d0]
Successors: [0xfd]
---
0x4d1 JUMPDEST
0x4d2 JUMP
---
0x4d1: JUMPDEST 
0x4d2: JUMP 0xfd
---
Entry stack: [V12, 0xfd]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d3
[0x4d3:0x4e1]
---
Predecessors: [0x1cf]
Successors: [0x1d7]
---
0x4d3 JUMPDEST
0x4d4 PUSH1 0x0
0x4d6 SLOAD
0x4d7 PUSH1 0x1
0x4d9 PUSH1 0xa0
0x4db PUSH1 0x2
0x4dd EXP
0x4de SUB
0x4df AND
0x4e0 DUP2
0x4e1 JUMP
---
0x4d3: JUMPDEST 
0x4d4: V471 = 0x0
0x4d6: V472 = S[0x0]
0x4d7: V473 = 0x1
0x4d9: V474 = 0xa0
0x4db: V475 = 0x2
0x4dd: V476 = EXP 0x2 0xa0
0x4de: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4df: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x4e1: JUMP 0x1d7
---
Entry stack: [V12, 0x1d7]
Stack pops: 1
Stack additions: [S0, V478]
Exit stack: [V12, 0x1d7, V478]

================================

Block 0x4e2
[0x4e2:0x4f8]
---
Predecessors: [0x1fb]
Successors: [0x4f9, 0x4fe]
---
0x4e2 JUMPDEST
0x4e3 PUSH1 0x0
0x4e5 SLOAD
0x4e6 CALLER
0x4e7 PUSH1 0x1
0x4e9 PUSH1 0xa0
0x4eb PUSH1 0x2
0x4ed EXP
0x4ee SUB
0x4ef SWAP1
0x4f0 DUP2
0x4f1 AND
0x4f2 SWAP2
0x4f3 AND
0x4f4 EQ
0x4f5 PUSH2 0x4fe
0x4f8 JUMPI
---
0x4e2: JUMPDEST 
0x4e3: V479 = 0x0
0x4e5: V480 = S[0x0]
0x4e6: V481 = CALLER
0x4e7: V482 = 0x1
0x4e9: V483 = 0xa0
0x4eb: V484 = 0x2
0x4ed: V485 = EXP 0x2 0xa0
0x4ee: V486 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f1: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x4f3: V488 = AND V480 0xffffffffffffffffffffffffffffffffffffffff
0x4f4: V489 = EQ V488 V487
0x4f5: V490 = 0x4fe
0x4f8: JUMPI 0x4fe V489
---
Entry stack: [V12, 0xfd, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V196]

================================

Block 0x4f9
[0x4f9:0x4fd]
---
Predecessors: [0x4e2]
Successors: []
---
0x4f9 PUSH1 0x0
0x4fb PUSH1 0x0
0x4fd REVERT
---
0x4f9: V491 = 0x0
0x4fb: V492 = 0x0
0x4fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0xfd, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V196]

================================

Block 0x4fe
[0x4fe:0x526]
---
Predecessors: [0x4e2]
Successors: [0x527]
---
0x4fe JUMPDEST
0x4ff PUSH1 0x1
0x501 DUP1
0x502 SLOAD
0x503 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x518 NOT
0x519 AND
0x51a PUSH1 0x1
0x51c PUSH1 0xa0
0x51e PUSH1 0x2
0x520 EXP
0x521 SUB
0x522 DUP4
0x523 AND
0x524 OR
0x525 SWAP1
0x526 SSTORE
---
0x4fe: JUMPDEST 
0x4ff: V493 = 0x1
0x502: V494 = S[0x1]
0x503: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x518: V496 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x519: V497 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V494
0x51a: V498 = 0x1
0x51c: V499 = 0xa0
0x51e: V500 = 0x2
0x520: V501 = EXP 0x2 0xa0
0x521: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x523: V503 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x524: V504 = OR V503 V497
0x526: S[0x1] = V504
---
Entry stack: [V12, 0xfd, V196]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xfd, V196]

================================

Block 0x527
[0x527:0x527]
---
Predecessors: [0x4fe]
Successors: [0x528]
---
0x527 JUMPDEST
---
0x527: JUMPDEST 
---
Entry stack: [V12, 0xfd, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V196]

================================

Block 0x528
[0x528:0x52a]
---
Predecessors: [0x527]
Successors: [0xfd]
---
0x528 JUMPDEST
0x529 POP
0x52a JUMP
---
0x528: JUMPDEST 
0x52a: JUMP 0xfd
---
Entry stack: [V12, 0xfd, V196]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x52b
[0x52b:0x541]
---
Predecessors: [0x219]
Successors: [0x542, 0x547]
---
0x52b JUMPDEST
0x52c PUSH1 0x0
0x52e SLOAD
0x52f CALLER
0x530 PUSH1 0x1
0x532 PUSH1 0xa0
0x534 PUSH1 0x2
0x536 EXP
0x537 SUB
0x538 SWAP1
0x539 DUP2
0x53a AND
0x53b SWAP2
0x53c AND
0x53d EQ
0x53e PUSH2 0x547
0x541 JUMPI
---
0x52b: JUMPDEST 
0x52c: V505 = 0x0
0x52e: V506 = S[0x0]
0x52f: V507 = CALLER
0x530: V508 = 0x1
0x532: V509 = 0xa0
0x534: V510 = 0x2
0x536: V511 = EXP 0x2 0xa0
0x537: V512 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53a: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x53c: V514 = AND V506 0xffffffffffffffffffffffffffffffffffffffff
0x53d: V515 = EQ V514 V513
0x53e: V516 = 0x547
0x541: JUMPI 0x547 V515
---
Entry stack: [V12, 0xfd, V203, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V203, V205]

================================

Block 0x542
[0x542:0x546]
---
Predecessors: [0x52b]
Successors: []
---
0x542 PUSH1 0x0
0x544 PUSH1 0x0
0x546 REVERT
---
0x542: V517 = 0x0
0x544: V518 = 0x0
0x546: REVERT 0x0 0x0
---
Entry stack: [V12, 0xfd, V203, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V203, V205]

================================

Block 0x547
[0x547:0x550]
---
Predecessors: [0x52b]
Successors: [0x551, 0x556]
---
0x547 JUMPDEST
0x548 PUSH1 0x3
0x54a SLOAD
0x54b TIMESTAMP
0x54c LT
0x54d PUSH2 0x556
0x550 JUMPI
---
0x547: JUMPDEST 
0x548: V519 = 0x3
0x54a: V520 = S[0x3]
0x54b: V521 = TIMESTAMP
0x54c: V522 = LT V521 V520
0x54d: V523 = 0x556
0x550: JUMPI 0x556 V522
---
Entry stack: [V12, 0xfd, V203, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V203, V205]

================================

Block 0x551
[0x551:0x555]
---
Predecessors: [0x547]
Successors: []
---
0x551 PUSH1 0x0
0x553 PUSH1 0x0
0x555 REVERT
---
0x551: V524 = 0x0
0x553: V525 = 0x0
0x555: REVERT 0x0 0x0
---
Entry stack: [V12, 0xfd, V203, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V203, V205]

================================

Block 0x556
[0x556:0x560]
---
Predecessors: [0x547]
Successors: [0x561]
---
0x556 JUMPDEST
0x557 PUSH1 0x3
0x559 DUP3
0x55a SWAP1
0x55b SSTORE
0x55c PUSH1 0x2
0x55e DUP2
0x55f SWAP1
0x560 SSTORE
---
0x556: JUMPDEST 
0x557: V526 = 0x3
0x55b: S[0x3] = V203
0x55c: V527 = 0x2
0x560: S[0x2] = V205
---
Entry stack: [V12, 0xfd, V203, V205]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xfd, V203, V205]

================================

Block 0x561
[0x561:0x561]
---
Predecessors: [0x556]
Successors: [0x562]
---
0x561 JUMPDEST
---
0x561: JUMPDEST 
---
Entry stack: [V12, 0xfd, V203, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xfd, V203, V205]

================================

Block 0x562
[0x562:0x565]
---
Predecessors: [0x561]
Successors: [0xfd]
---
0x562 JUMPDEST
0x563 POP
0x564 POP
0x565 JUMP
---
0x562: JUMPDEST 
0x565: JUMP 0xfd
---
Entry stack: [V12, 0xfd, V203, V205]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x566
[0x566:0x56b]
---
Predecessors: [0x231]
Successors: [0x10f]
---
0x566 JUMPDEST
0x567 PUSH1 0x4
0x569 SLOAD
0x56a DUP2
0x56b JUMP
---
0x566: JUMPDEST 
0x567: V528 = 0x4
0x569: V529 = S[0x4]
0x56b: JUMP 0x10f
---
Entry stack: [V12, 0x10f]
Stack pops: 1
Stack additions: [S0, V529]
Exit stack: [V12, 0x10f, V529]

================================

Block 0x56c
[0x56c:0x597]
---
Predecessors: []
Successors: []
---
0x56c STOP
0x56d LOG1
0x56e PUSH6 0x627a7a723058
0x575 SHA3
0x576 MULMOD
0x577 MISSING 0x24
0x578 PUSH19 0x55ff256ecc0321a6ebbec367485f636d28bca9
0x58c PUSH10 0xbeb2cde25501348da200
0x597 MISSING 0x29
---
0x56c: STOP 
0x56d: LOG S0 S1 S2
0x56e: V530 = 0x627a7a723058
0x575: V531 = SHA3 0x627a7a723058 S3
0x576: V532 = MULMOD V531 S4 S5
0x577: MISSING 0x24
0x578: V533 = 0x55ff256ecc0321a6ebbec367485f636d28bca9
0x58c: V534 = 0xbeb2cde25501348da200
0x597: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V532, 0xbeb2cde25501348da200, 0x55ff256ecc0321a6ebbec367485f636d28bca9]
Exit stack: []

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0xff
Exit block: 0x10f
Body: 0xff, 0x106, 0x107, 0x10f, 0x24b

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x121
Exit block: 0xfd
Body: 0xfa, 0xfb, 0xfd, 0x121, 0x128, 0x129, 0x251, 0x268, 0x26d, 0x29c

Function 2:
Public function signature: 0x47786d37
Entry block: 0x133
Exit block: 0xfd
Body: 0xfd, 0x133, 0x13a, 0x13b, 0x2a5, 0x2bc, 0x2c1, 0x2c7, 0x2c8

Function 3:
Public function signature: 0x680a50cb
Entry block: 0x148
Exit block: 0xfd
Body: 0xfd, 0x148, 0x14f, 0x150, 0x2cb, 0x2e2, 0x2e7, 0x2f2, 0x2f7, 0x2fd, 0x2fe

Function 4:
Public function signature: 0x69ffa08a
Entry block: 0x15d
Exit block: 0x17f
Body: 0x15d, 0x164, 0x165, 0x17f, 0x301, 0x31d, 0x322, 0x384, 0x385, 0x392, 0x393, 0x406, 0x407, 0x414, 0x415, 0x423, 0x475, 0x47a, 0x47b

Function 5:
Public function signature: 0x78e97925
Entry block: 0x193
Exit block: 0x10f
Body: 0x10f, 0x193, 0x19a, 0x19b, 0x483

Function 6:
Public function signature: 0x79ba5097
Entry block: 0x1b5
Exit block: 0xfd
Body: 0xfa, 0xfb, 0xfd, 0x1b5, 0x1bc, 0x1bd, 0x489, 0x4a1, 0x4d0, 0x4d1

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x1c7
Exit block: 0x1d7
Body: 0x1c7, 0x1ce, 0x1cf, 0x1d7, 0x4d3

Function 8:
Public function signature: 0xa6f9dae1
Entry block: 0x1f3
Exit block: 0xfd
Body: 0xfd, 0x1f3, 0x1fa, 0x1fb, 0x4e2, 0x4f9, 0x4fe, 0x527, 0x528

Function 9:
Public function signature: 0xba278e08
Entry block: 0x211
Exit block: 0xfd
Body: 0xfd, 0x211, 0x218, 0x219, 0x52b, 0x542, 0x547, 0x551, 0x556, 0x561, 0x562

Function 10:
Public function signature: 0xe93f57b9
Entry block: 0x229
Exit block: 0x10f
Body: 0x10f, 0x229, 0x230, 0x231, 0x566

Function 11:
Public fallback function
Entry block: 0x93
Exit block: 0xfd
Body: 0x93, 0x97, 0xa5, 0xaa, 0xb5, 0xbc, 0xc2, 0xc7, 0xdb, 0xe0, 0xf6, 0xfa, 0xfb, 0xfd

