Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x7c]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x5930349f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x7c
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x5930349f
0x3b: V13 = EQ V11 0x5930349f
0x3c: V14 = 0x7c
0x3f: JUMPI 0x7c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x9b]
---
0x40 DUP1
0x41 PUSH4 0x59f24271
0x46 EQ
0x47 PUSH2 0x9b
0x4a JUMPI
---
0x41: V15 = 0x59f24271
0x46: V16 = EQ 0x59f24271 V11
0x47: V17 = 0x9b
0x4a: JUMPI 0x9b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xc2]
---
0x4b DUP1
0x4c PUSH4 0x7002ce42
0x51 EQ
0x52 PUSH2 0xc2
0x55 JUMPI
---
0x4c: V18 = 0x7002ce42
0x51: V19 = EQ 0x7002ce42 V11
0x52: V20 = 0xc2
0x55: JUMPI 0xc2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xf6]
---
0x56 DUP1
0x57 PUSH4 0x888b15dd
0x5c EQ
0x5d PUSH2 0xf6
0x60 JUMPI
---
0x57: V21 = 0x888b15dd
0x5c: V22 = EQ 0x888b15dd V11
0x5d: V23 = 0xf6
0x60: JUMPI 0xf6 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x123]
---
0x61 DUP1
0x62 PUSH4 0x8da5cb5b
0x67 EQ
0x68 PUSH2 0x123
0x6b JUMPI
---
0x62: V24 = 0x8da5cb5b
0x67: V25 = EQ 0x8da5cb5b V11
0x68: V26 = 0x123
0x6b: JUMPI 0x123 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x138]
---
0x6c DUP1
0x6d PUSH4 0xb4e2f060
0x72 EQ
0x73 PUSH2 0x138
0x76 JUMPI
---
0x6d: V27 = 0xb4e2f060
0x72: V28 = EQ 0xb4e2f060 V11
0x73: V29 = 0x138
0x76: JUMPI 0x138 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x7b]
---
Predecessors: [0x0, 0x6c]
Successors: []
---
0x77 JUMPDEST
0x78 PUSH1 0x0
0x7a DUP1
0x7b REVERT
---
0x77: JUMPDEST 
0x78: V30 = 0x0
0x7b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x98]
---
Predecessors: [0xd]
Successors: [0x154]
---
0x7c JUMPDEST
0x7d PUSH2 0x99
0x80 PUSH1 0x1
0x82 PUSH1 0xa0
0x84 PUSH1 0x2
0x86 EXP
0x87 SUB
0x88 PUSH1 0x4
0x8a CALLDATALOAD
0x8b AND
0x8c PUSH1 0x24
0x8e CALLDATALOAD
0x8f PUSH1 0x44
0x91 CALLDATALOAD
0x92 PUSH1 0x64
0x94 CALLDATALOAD
0x95 PUSH2 0x154
0x98 JUMP
---
0x7c: JUMPDEST 
0x7d: V31 = 0x99
0x80: V32 = 0x1
0x82: V33 = 0xa0
0x84: V34 = 0x2
0x86: V35 = EXP 0x2 0xa0
0x87: V36 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88: V37 = 0x4
0x8a: V38 = CALLDATALOAD 0x4
0x8b: V39 = AND V38 0xffffffffffffffffffffffffffffffffffffffff
0x8c: V40 = 0x24
0x8e: V41 = CALLDATALOAD 0x24
0x8f: V42 = 0x44
0x91: V43 = CALLDATALOAD 0x44
0x92: V44 = 0x64
0x94: V45 = CALLDATALOAD 0x64
0x95: V46 = 0x154
0x98: JUMP 0x154
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x99, V39, V41, V43, V45]
Exit stack: [V11, 0x99, V39, V41, V43, V45]

================================

Block 0x99
[0x99:0x9a]
---
Predecessors: [0x21e, 0x3a9]
Successors: []
---
0x99 JUMPDEST
0x9a STOP
---
0x99: JUMPDEST 
0x9a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9b
[0x9b:0xa2]
---
Predecessors: [0x40]
Successors: [0xa3, 0xa7]
---
0x9b JUMPDEST
0x9c CALLVALUE
0x9d DUP1
0x9e ISZERO
0x9f PUSH2 0xa7
0xa2 JUMPI
---
0x9b: JUMPDEST 
0x9c: V47 = CALLVALUE
0x9e: V48 = ISZERO V47
0x9f: V49 = 0xa7
0xa2: JUMPI 0xa7 V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V47]
Exit stack: [V11, V47]

================================

Block 0xa3
[0xa3:0xa6]
---
Predecessors: [0x9b]
Successors: []
---
0xa3 PUSH1 0x0
0xa5 DUP1
0xa6 REVERT
---
0xa3: V50 = 0x0
0xa6: REVERT 0x0 0x0
---
Entry stack: [V11, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V47]

================================

Block 0xa7
[0xa7:0xaf]
---
Predecessors: [0x9b]
Successors: [0x225]
---
0xa7 JUMPDEST
0xa8 POP
0xa9 PUSH2 0xb0
0xac PUSH2 0x225
0xaf JUMP
---
0xa7: JUMPDEST 
0xa9: V51 = 0xb0
0xac: V52 = 0x225
0xaf: JUMP 0x225
---
Entry stack: [V11, V47]
Stack pops: 1
Stack additions: [0xb0]
Exit stack: [V11, 0xb0]

================================

Block 0xb0
[0xb0:0xc1]
---
Predecessors: [0x225]
Successors: []
---
0xb0 JUMPDEST
0xb1 PUSH1 0x40
0xb3 DUP1
0xb4 MLOAD
0xb5 SWAP2
0xb6 DUP3
0xb7 MSTORE
0xb8 MLOAD
0xb9 SWAP1
0xba DUP2
0xbb SWAP1
0xbc SUB
0xbd PUSH1 0x20
0xbf ADD
0xc0 SWAP1
0xc1 RETURN
---
0xb0: JUMPDEST 
0xb1: V53 = 0x40
0xb4: V54 = M[0x40]
0xb7: M[V54] = V178
0xb8: V55 = M[0x40]
0xbc: V56 = SUB V54 V55
0xbd: V57 = 0x20
0xbf: V58 = ADD 0x20 V56
0xc1: RETURN V55 V58
---
Entry stack: [V11, V178]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xc2
[0xc2:0xc9]
---
Predecessors: [0x4b]
Successors: [0xca, 0xce]
---
0xc2 JUMPDEST
0xc3 CALLVALUE
0xc4 DUP1
0xc5 ISZERO
0xc6 PUSH2 0xce
0xc9 JUMPI
---
0xc2: JUMPDEST 
0xc3: V59 = CALLVALUE
0xc5: V60 = ISZERO V59
0xc6: V61 = 0xce
0xc9: JUMPI 0xce V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V59]
Exit stack: [V11, V59]

================================

Block 0xca
[0xca:0xcd]
---
Predecessors: [0xc2]
Successors: []
---
0xca PUSH1 0x0
0xcc DUP1
0xcd REVERT
---
0xca: V62 = 0x0
0xcd: REVERT 0x0 0x0
---
Entry stack: [V11, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V59]

================================

Block 0xce
[0xce:0xd9]
---
Predecessors: [0xc2]
Successors: [0x22b]
---
0xce JUMPDEST
0xcf POP
0xd0 PUSH2 0xda
0xd3 PUSH1 0x4
0xd5 CALLDATALOAD
0xd6 PUSH2 0x22b
0xd9 JUMP
---
0xce: JUMPDEST 
0xd0: V63 = 0xda
0xd3: V64 = 0x4
0xd5: V65 = CALLDATALOAD 0x4
0xd6: V66 = 0x22b
0xd9: JUMP 0x22b
---
Entry stack: [V11, V59]
Stack pops: 1
Stack additions: [0xda, V65]
Exit stack: [V11, 0xda, V65]

================================

Block 0xda
[0xda:0xf5]
---
Predecessors: [0x239, 0x31b]
Successors: []
---
0xda JUMPDEST
0xdb PUSH1 0x40
0xdd DUP1
0xde MLOAD
0xdf PUSH1 0x1
0xe1 PUSH1 0xa0
0xe3 PUSH1 0x2
0xe5 EXP
0xe6 SUB
0xe7 SWAP1
0xe8 SWAP3
0xe9 AND
0xea DUP3
0xeb MSTORE
0xec MLOAD
0xed SWAP1
0xee DUP2
0xef SWAP1
0xf0 SUB
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP1
0xf5 RETURN
---
0xda: JUMPDEST 
0xdb: V67 = 0x40
0xde: V68 = M[0x40]
0xdf: V69 = 0x1
0xe1: V70 = 0xa0
0xe3: V71 = 0x2
0xe5: V72 = EXP 0x2 0xa0
0xe6: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe9: V74 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xeb: M[V68] = V74
0xec: V75 = M[0x40]
0xf0: V76 = SUB V68 V75
0xf1: V77 = 0x20
0xf3: V78 = ADD 0x20 V76
0xf5: RETURN V75 V78
---
Entry stack: [V11, 0xda, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0x56]
Successors: [0xfe, 0x102]
---
0xf6 JUMPDEST
0xf7 CALLVALUE
0xf8 DUP1
0xf9 ISZERO
0xfa PUSH2 0x102
0xfd JUMPI
---
0xf6: JUMPDEST 
0xf7: V79 = CALLVALUE
0xf9: V80 = ISZERO V79
0xfa: V81 = 0x102
0xfd: JUMPI 0x102 V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V11, V79]

================================

Block 0xfe
[0xfe:0x101]
---
Predecessors: [0xf6]
Successors: []
---
0xfe PUSH1 0x0
0x100 DUP1
0x101 REVERT
---
0xfe: V82 = 0x0
0x101: REVERT 0x0 0x0
---
Entry stack: [V11, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V79]

================================

Block 0x102
[0x102:0x122]
---
Predecessors: [0xf6]
Successors: [0x253]
---
0x102 JUMPDEST
0x103 POP
0x104 PUSH2 0x99
0x107 PUSH1 0x1
0x109 PUSH1 0xa0
0x10b PUSH1 0x2
0x10d EXP
0x10e SUB
0x10f PUSH1 0x4
0x111 CALLDATALOAD
0x112 DUP2
0x113 AND
0x114 SWAP1
0x115 PUSH1 0x24
0x117 CALLDATALOAD
0x118 AND
0x119 PUSH1 0x44
0x11b CALLDATALOAD
0x11c PUSH1 0x64
0x11e CALLDATALOAD
0x11f PUSH2 0x253
0x122 JUMP
---
0x102: JUMPDEST 
0x104: V83 = 0x99
0x107: V84 = 0x1
0x109: V85 = 0xa0
0x10b: V86 = 0x2
0x10d: V87 = EXP 0x2 0xa0
0x10e: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V89 = 0x4
0x111: V90 = CALLDATALOAD 0x4
0x113: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x115: V92 = 0x24
0x117: V93 = CALLDATALOAD 0x24
0x118: V94 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x119: V95 = 0x44
0x11b: V96 = CALLDATALOAD 0x44
0x11c: V97 = 0x64
0x11e: V98 = CALLDATALOAD 0x64
0x11f: V99 = 0x253
0x122: JUMP 0x253
---
Entry stack: [V11, V79]
Stack pops: 1
Stack additions: [0x99, V91, V94, V96, V98]
Exit stack: [V11, 0x99, V91, V94, V96, V98]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x61]
Successors: [0x12b, 0x12f]
---
0x123 JUMPDEST
0x124 CALLVALUE
0x125 DUP1
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x123: JUMPDEST 
0x124: V100 = CALLVALUE
0x126: V101 = ISZERO V100
0x127: V102 = 0x12f
0x12a: JUMPI 0x12f V101
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V100]
Exit stack: [V11, V100]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x123]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V103 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V11, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V100]

================================

Block 0x12f
[0x12f:0x137]
---
Predecessors: [0x123]
Successors: [0x31b]
---
0x12f JUMPDEST
0x130 POP
0x131 PUSH2 0xda
0x134 PUSH2 0x31b
0x137 JUMP
---
0x12f: JUMPDEST 
0x131: V104 = 0xda
0x134: V105 = 0x31b
0x137: JUMP 0x31b
---
Entry stack: [V11, V100]
Stack pops: 1
Stack additions: [0xda]
Exit stack: [V11, 0xda]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0x6c]
Successors: [0x140, 0x144]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a DUP1
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x138: JUMPDEST 
0x139: V106 = CALLVALUE
0x13b: V107 = ISZERO V106
0x13c: V108 = 0x144
0x13f: JUMPI 0x144 V107
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V106]
Exit stack: [V11, V106]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x138]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V109 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V11, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V106]

================================

Block 0x144
[0x144:0x153]
---
Predecessors: [0x138]
Successors: [0x32a]
---
0x144 JUMPDEST
0x145 POP
0x146 PUSH2 0x99
0x149 PUSH2 0xffff
0x14c PUSH1 0x4
0x14e CALLDATALOAD
0x14f AND
0x150 PUSH2 0x32a
0x153 JUMP
---
0x144: JUMPDEST 
0x146: V110 = 0x99
0x149: V111 = 0xffff
0x14c: V112 = 0x4
0x14e: V113 = CALLDATALOAD 0x4
0x14f: V114 = AND V113 0xffff
0x150: V115 = 0x32a
0x153: JUMP 0x32a
---
Entry stack: [V11, V106]
Stack pops: 1
Stack additions: [0x99, V114]
Exit stack: [V11, 0x99, V114]

================================

Block 0x154
[0x154:0x167]
---
Predecessors: [0x7c]
Successors: [0x168, 0x16c]
---
0x154 JUMPDEST
0x155 PUSH1 0x0
0x157 DUP1
0x158 SLOAD
0x159 PUSH1 0x1
0x15b PUSH1 0xa0
0x15d PUSH1 0x2
0x15f EXP
0x160 SUB
0x161 AND
0x162 CALLER
0x163 EQ
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x154: JUMPDEST 
0x155: V116 = 0x0
0x158: V117 = S[0x0]
0x159: V118 = 0x1
0x15b: V119 = 0xa0
0x15d: V120 = 0x2
0x15f: V121 = EXP 0x2 0xa0
0x160: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x161: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x162: V124 = CALLER
0x163: V125 = EQ V124 V123
0x164: V126 = 0x16c
0x167: JUMPI 0x16c V125
---
Entry stack: [V11, 0x99, V39, V41, V43, V45]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x99, V39, V41, V43, V45, 0x0]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x154]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V127 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x99, V39, V41, V43, V45, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V39, V41, V43, V45, 0x0]

================================

Block 0x16c
[0x16c:0x16e]
---
Predecessors: [0x154]
Successors: [0x16f]
---
0x16c JUMPDEST
0x16d POP
0x16e DUP2
---
0x16c: JUMPDEST 
---
Entry stack: [V11, 0x99, V39, V41, V43, V45, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V11, 0x99, V39, V41, V43, V45, V43]

================================

Block 0x16f
[0x16f:0x177]
---
Predecessors: [0x16c, 0x20d]
Successors: [0x178, 0x21e]
---
0x16f JUMPDEST
0x170 DUP2
0x171 DUP2
0x172 LT
0x173 ISZERO
0x174 PUSH2 0x21e
0x177 JUMPI
---
0x16f: JUMPDEST 
0x172: V128 = LT S0 V45
0x173: V129 = ISZERO V128
0x174: V130 = 0x21e
0x177: JUMPI 0x21e V129
---
Entry stack: [V11, 0x99, V39, V41, V43, V45, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x99, V39, V41, V43, V45, S0]

================================

Block 0x178
[0x178:0x183]
---
Predecessors: [0x16f]
Successors: [0x184, 0x185]
---
0x178 PUSH1 0x1
0x17a DUP1
0x17b SLOAD
0x17c DUP3
0x17d SWAP1
0x17e DUP2
0x17f LT
0x180 PUSH2 0x185
0x183 JUMPI
---
0x178: V131 = 0x1
0x17b: V132 = S[0x1]
0x17f: V133 = LT S0 V132
0x180: V134 = 0x185
0x183: JUMPI 0x185 V133
---
Entry stack: [V11, 0x99, V39, V41, V43, V45, S0]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0x99, V39, V41, V43, V45, S0, 0x1, S0]

================================

Block 0x184
[0x184:0x184]
---
Predecessors: [0x178]
Successors: []
---
0x184 INVALID
---
0x184: INVALID 
---
Entry stack: [V11, 0x99, V39, V41, V43, V45, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V39, V41, V43, V45, S2, 0x1, S0]

================================

Block 0x185
[0x185:0x1f4]
---
Predecessors: [0x178]
Successors: [0x1f5, 0x1f9]
---
0x185 JUMPDEST
0x186 PUSH1 0x0
0x188 SWAP2
0x189 DUP3
0x18a MSTORE
0x18b PUSH1 0x20
0x18d DUP3
0x18e SHA3
0x18f ADD
0x190 SLOAD
0x191 PUSH1 0x40
0x193 DUP1
0x194 MLOAD
0x195 PUSH32 0x49dcbc5e00000000000000000000000000000000000000000000000000000000
0x1b6 DUP2
0x1b7 MSTORE
0x1b8 PUSH1 0x1
0x1ba PUSH1 0xa0
0x1bc PUSH1 0x2
0x1be EXP
0x1bf SUB
0x1c0 DUP10
0x1c1 DUP2
0x1c2 AND
0x1c3 PUSH1 0x4
0x1c5 DUP4
0x1c6 ADD
0x1c7 MSTORE
0x1c8 PUSH1 0x24
0x1ca DUP3
0x1cb ADD
0x1cc DUP10
0x1cd SWAP1
0x1ce MSTORE
0x1cf SWAP2
0x1d0 MLOAD
0x1d1 SWAP2
0x1d2 SWAP1
0x1d3 SWAP3
0x1d4 AND
0x1d5 SWAP3
0x1d6 PUSH4 0x49dcbc5e
0x1db SWAP3
0x1dc DUP9
0x1dd SWAP3
0x1de PUSH1 0x44
0x1e0 DUP1
0x1e1 DUP4
0x1e2 ADD
0x1e3 SWAP4
0x1e4 SWAP3
0x1e5 DUP3
0x1e6 SWAP1
0x1e7 SUB
0x1e8 ADD
0x1e9 DUP2
0x1ea DUP6
0x1eb DUP9
0x1ec DUP1
0x1ed EXTCODESIZE
0x1ee ISZERO
0x1ef DUP1
0x1f0 ISZERO
0x1f1 PUSH2 0x1f9
0x1f4 JUMPI
---
0x185: JUMPDEST 
0x186: V135 = 0x0
0x18a: M[0x0] = 0x1
0x18b: V136 = 0x20
0x18e: V137 = SHA3 0x0 0x20
0x18f: V138 = ADD V137 S0
0x190: V139 = S[V138]
0x191: V140 = 0x40
0x194: V141 = M[0x40]
0x195: V142 = 0x49dcbc5e00000000000000000000000000000000000000000000000000000000
0x1b7: M[V141] = 0x49dcbc5e00000000000000000000000000000000000000000000000000000000
0x1b8: V143 = 0x1
0x1ba: V144 = 0xa0
0x1bc: V145 = 0x2
0x1be: V146 = EXP 0x2 0xa0
0x1bf: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c2: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x1c3: V149 = 0x4
0x1c6: V150 = ADD V141 0x4
0x1c7: M[V150] = V148
0x1c8: V151 = 0x24
0x1cb: V152 = ADD V141 0x24
0x1ce: M[V152] = V41
0x1d0: V153 = M[0x40]
0x1d4: V154 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V155 = 0x49dcbc5e
0x1de: V156 = 0x44
0x1e2: V157 = ADD V141 0x44
0x1e7: V158 = SUB V141 V153
0x1e8: V159 = ADD V158 0x44
0x1ed: V160 = EXTCODESIZE V154
0x1ee: V161 = ISZERO V160
0x1f0: V162 = ISZERO V161
0x1f1: V163 = 0x1f9
0x1f4: JUMPI 0x1f9 V162
---
Entry stack: [V11, 0x99, V39, V41, V43, V45, S2, 0x1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V154, 0x49dcbc5e, S5, V157, 0x0, V153, V159, V153, S5, V154, V161]
Exit stack: [V11, 0x99, V39, V41, V43, V45, S2, V154, 0x49dcbc5e, V41, V157, 0x0, V153, V159, V153, V41, V154, V161]

================================

Block 0x1f5
[0x1f5:0x1f8]
---
Predecessors: [0x185]
Successors: []
---
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 REVERT
---
0x1f5: V164 = 0x0
0x1f8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x99, V39, V41, V43, V45, S11, V154, 0x49dcbc5e, V41, V157, 0x0, V153, V159, V153, V41, V154, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V39, V41, V43, V45, S11, V154, 0x49dcbc5e, V41, V157, 0x0, V153, V159, V153, V41, V154, V161]

================================

Block 0x1f9
[0x1f9:0x203]
---
Predecessors: [0x185]
Successors: [0x204, 0x20d]
---
0x1f9 JUMPDEST
0x1fa POP
0x1fb GAS
0x1fc CALL
0x1fd ISZERO
0x1fe DUP1
0x1ff ISZERO
0x200 PUSH2 0x20d
0x203 JUMPI
---
0x1f9: JUMPDEST 
0x1fb: V165 = GAS
0x1fc: V166 = CALL V165 V154 V41 V153 V159 V153 0x0
0x1fd: V167 = ISZERO V166
0x1ff: V168 = ISZERO V167
0x200: V169 = 0x20d
0x203: JUMPI 0x20d V168
---
Entry stack: [V11, 0x99, V39, V41, V43, V45, S11, V154, 0x49dcbc5e, V41, V157, 0x0, V153, V159, V153, V41, V154, V161]
Stack pops: 7
Stack additions: [V167]
Exit stack: [V11, 0x99, V39, V41, V43, V45, S11, V154, 0x49dcbc5e, V41, V157, V167]

================================

Block 0x204
[0x204:0x20c]
---
Predecessors: [0x1f9]
Successors: []
---
0x204 RETURNDATASIZE
0x205 PUSH1 0x0
0x207 DUP1
0x208 RETURNDATACOPY
0x209 RETURNDATASIZE
0x20a PUSH1 0x0
0x20c REVERT
---
0x204: V170 = RETURNDATASIZE
0x205: V171 = 0x0
0x208: RETURNDATACOPY 0x0 0x0 V170
0x209: V172 = RETURNDATASIZE
0x20a: V173 = 0x0
0x20c: REVERT 0x0 V172
---
Entry stack: [V11, 0x99, V39, V41, V43, V45, S5, V154, 0x49dcbc5e, V41, V157, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V39, V41, V43, V45, S5, V154, 0x49dcbc5e, V41, V157, V167]

================================

Block 0x20d
[0x20d:0x21d]
---
Predecessors: [0x1f9]
Successors: [0x16f]
---
0x20d JUMPDEST
0x20e POP
0x20f POP
0x210 PUSH1 0x1
0x212 SWAP1
0x213 SWAP4
0x214 ADD
0x215 SWAP3
0x216 POP
0x217 PUSH2 0x16f
0x21a SWAP2
0x21b POP
0x21c POP
0x21d JUMP
---
0x20d: JUMPDEST 
0x210: V174 = 0x1
0x214: V175 = ADD S5 0x1
0x217: V176 = 0x16f
0x21d: JUMP 0x16f
---
Entry stack: [V11, 0x99, V39, V41, V43, V45, S5, V154, 0x49dcbc5e, V41, V157, V167]
Stack pops: 6
Stack additions: [V175]
Exit stack: [V11, 0x99, V39, V41, V43, V45, V175]

================================

Block 0x21e
[0x21e:0x224]
---
Predecessors: [0x16f, 0x26e]
Successors: [0x99]
---
0x21e JUMPDEST
0x21f POP
0x220 POP
0x221 POP
0x222 POP
0x223 POP
0x224 JUMP
---
0x21e: JUMPDEST 
0x224: JUMP 0x99
---
Entry stack: [V11, 0x99, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x225
[0x225:0x22a]
---
Predecessors: [0xa7]
Successors: [0xb0]
---
0x225 JUMPDEST
0x226 PUSH1 0x1
0x228 SLOAD
0x229 SWAP1
0x22a JUMP
---
0x225: JUMPDEST 
0x226: V177 = 0x1
0x228: V178 = S[0x1]
0x22a: JUMP 0xb0
---
Entry stack: [V11, 0xb0]
Stack pops: 1
Stack additions: [V178]
Exit stack: [V11, V178]

================================

Block 0x22b
[0x22b:0x237]
---
Predecessors: [0xce]
Successors: [0x238, 0x239]
---
0x22b JUMPDEST
0x22c PUSH1 0x1
0x22e DUP1
0x22f SLOAD
0x230 DUP3
0x231 SWAP1
0x232 DUP2
0x233 LT
0x234 PUSH2 0x239
0x237 JUMPI
---
0x22b: JUMPDEST 
0x22c: V179 = 0x1
0x22f: V180 = S[0x1]
0x233: V181 = LT V65 V180
0x234: V182 = 0x239
0x237: JUMPI 0x239 V181
---
Entry stack: [V11, 0xda, V65]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0xda, V65, 0x1, V65]

================================

Block 0x238
[0x238:0x238]
---
Predecessors: [0x22b]
Successors: []
---
0x238 INVALID
---
0x238: INVALID 
---
Entry stack: [V11, 0xda, V65, 0x1, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V65, 0x1, V65]

================================

Block 0x239
[0x239:0x252]
---
Predecessors: [0x22b]
Successors: [0xda]
---
0x239 JUMPDEST
0x23a PUSH1 0x0
0x23c SWAP2
0x23d DUP3
0x23e MSTORE
0x23f PUSH1 0x20
0x241 SWAP1
0x242 SWAP2
0x243 SHA3
0x244 ADD
0x245 SLOAD
0x246 PUSH1 0x1
0x248 PUSH1 0xa0
0x24a PUSH1 0x2
0x24c EXP
0x24d SUB
0x24e AND
0x24f SWAP1
0x250 POP
0x251 DUP2
0x252 JUMP
---
0x239: JUMPDEST 
0x23a: V183 = 0x0
0x23e: M[0x0] = 0x1
0x23f: V184 = 0x20
0x243: V185 = SHA3 0x0 0x20
0x244: V186 = ADD V185 V65
0x245: V187 = S[V186]
0x246: V188 = 0x1
0x248: V189 = 0xa0
0x24a: V190 = 0x2
0x24c: V191 = EXP 0x2 0xa0
0x24d: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24e: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x252: JUMP 0xda
---
Entry stack: [V11, 0xda, V65, 0x1, V65]
Stack pops: 4
Stack additions: [S3, V193]
Exit stack: [V11, 0xda, V193]

================================

Block 0x253
[0x253:0x266]
---
Predecessors: [0x102]
Successors: [0x267, 0x26b]
---
0x253 JUMPDEST
0x254 PUSH1 0x0
0x256 DUP1
0x257 SLOAD
0x258 PUSH1 0x1
0x25a PUSH1 0xa0
0x25c PUSH1 0x2
0x25e EXP
0x25f SUB
0x260 AND
0x261 CALLER
0x262 EQ
0x263 PUSH2 0x26b
0x266 JUMPI
---
0x253: JUMPDEST 
0x254: V194 = 0x0
0x257: V195 = S[0x0]
0x258: V196 = 0x1
0x25a: V197 = 0xa0
0x25c: V198 = 0x2
0x25e: V199 = EXP 0x2 0xa0
0x25f: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x260: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x261: V202 = CALLER
0x262: V203 = EQ V202 V201
0x263: V204 = 0x26b
0x266: JUMPI 0x26b V203
---
Entry stack: [V11, 0x99, V91, V94, V96, V98]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x99, V91, V94, V96, V98, 0x0]

================================

Block 0x267
[0x267:0x26a]
---
Predecessors: [0x253]
Successors: []
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
---
0x267: V205 = 0x0
0x26a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x99, V91, V94, V96, V98, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V91, V94, V96, V98, 0x0]

================================

Block 0x26b
[0x26b:0x26d]
---
Predecessors: [0x253]
Successors: [0x26e]
---
0x26b JUMPDEST
0x26c POP
0x26d DUP2
---
0x26b: JUMPDEST 
---
Entry stack: [V11, 0x99, V91, V94, V96, V98, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V11, 0x99, V91, V94, V96, V98, V96]

================================

Block 0x26e
[0x26e:0x276]
---
Predecessors: [0x26b, 0x30b]
Successors: [0x21e, 0x277]
---
0x26e JUMPDEST
0x26f DUP2
0x270 DUP2
0x271 LT
0x272 ISZERO
0x273 PUSH2 0x21e
0x276 JUMPI
---
0x26e: JUMPDEST 
0x271: V206 = LT S0 V98
0x272: V207 = ISZERO V206
0x273: V208 = 0x21e
0x276: JUMPI 0x21e V207
---
Entry stack: [V11, 0x99, V91, V94, V96, V98, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x99, V91, V94, V96, V98, S0]

================================

Block 0x277
[0x277:0x282]
---
Predecessors: [0x26e]
Successors: [0x283, 0x284]
---
0x277 PUSH1 0x1
0x279 DUP1
0x27a SLOAD
0x27b DUP3
0x27c SWAP1
0x27d DUP2
0x27e LT
0x27f PUSH2 0x284
0x282 JUMPI
---
0x277: V209 = 0x1
0x27a: V210 = S[0x1]
0x27e: V211 = LT S0 V210
0x27f: V212 = 0x284
0x282: JUMPI 0x284 V211
---
Entry stack: [V11, 0x99, V91, V94, V96, V98, S0]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0x99, V91, V94, V96, V98, S0, 0x1, S0]

================================

Block 0x283
[0x283:0x283]
---
Predecessors: [0x277]
Successors: []
---
0x283 INVALID
---
0x283: INVALID 
---
Entry stack: [V11, 0x99, V91, V94, V96, V98, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V91, V94, V96, V98, S2, 0x1, S0]

================================

Block 0x284
[0x284:0x2f2]
---
Predecessors: [0x277]
Successors: [0x2f3, 0x2f7]
---
0x284 JUMPDEST
0x285 PUSH1 0x0
0x287 SWAP2
0x288 DUP3
0x289 MSTORE
0x28a PUSH1 0x20
0x28c DUP3
0x28d SHA3
0x28e ADD
0x28f SLOAD
0x290 PUSH1 0x40
0x292 DUP1
0x293 MLOAD
0x294 PUSH32 0x48ae238f00000000000000000000000000000000000000000000000000000000
0x2b5 DUP2
0x2b6 MSTORE
0x2b7 PUSH1 0x1
0x2b9 PUSH1 0xa0
0x2bb PUSH1 0x2
0x2bd EXP
0x2be SUB
0x2bf DUP10
0x2c0 DUP2
0x2c1 AND
0x2c2 PUSH1 0x4
0x2c4 DUP4
0x2c5 ADD
0x2c6 MSTORE
0x2c7 DUP9
0x2c8 DUP2
0x2c9 AND
0x2ca PUSH1 0x24
0x2cc DUP4
0x2cd ADD
0x2ce MSTORE
0x2cf SWAP2
0x2d0 MLOAD
0x2d1 SWAP2
0x2d2 SWAP1
0x2d3 SWAP3
0x2d4 AND
0x2d5 SWAP3
0x2d6 PUSH4 0x48ae238f
0x2db SWAP3
0x2dc PUSH1 0x44
0x2de DUP1
0x2df DUP3
0x2e0 ADD
0x2e1 SWAP4
0x2e2 SWAP2
0x2e3 DUP3
0x2e4 SWAP1
0x2e5 SUB
0x2e6 ADD
0x2e7 DUP2
0x2e8 DUP4
0x2e9 DUP8
0x2ea DUP1
0x2eb EXTCODESIZE
0x2ec ISZERO
0x2ed DUP1
0x2ee ISZERO
0x2ef PUSH2 0x2f7
0x2f2 JUMPI
---
0x284: JUMPDEST 
0x285: V213 = 0x0
0x289: M[0x0] = 0x1
0x28a: V214 = 0x20
0x28d: V215 = SHA3 0x0 0x20
0x28e: V216 = ADD V215 S0
0x28f: V217 = S[V216]
0x290: V218 = 0x40
0x293: V219 = M[0x40]
0x294: V220 = 0x48ae238f00000000000000000000000000000000000000000000000000000000
0x2b6: M[V219] = 0x48ae238f00000000000000000000000000000000000000000000000000000000
0x2b7: V221 = 0x1
0x2b9: V222 = 0xa0
0x2bb: V223 = 0x2
0x2bd: V224 = EXP 0x2 0xa0
0x2be: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c1: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x2c2: V227 = 0x4
0x2c5: V228 = ADD V219 0x4
0x2c6: M[V228] = V226
0x2c9: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x2ca: V230 = 0x24
0x2cd: V231 = ADD V219 0x24
0x2ce: M[V231] = V229
0x2d0: V232 = M[0x40]
0x2d4: V233 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x2d6: V234 = 0x48ae238f
0x2dc: V235 = 0x44
0x2e0: V236 = ADD V219 0x44
0x2e5: V237 = SUB V219 V232
0x2e6: V238 = ADD V237 0x44
0x2eb: V239 = EXTCODESIZE V233
0x2ec: V240 = ISZERO V239
0x2ee: V241 = ISZERO V240
0x2ef: V242 = 0x2f7
0x2f2: JUMPI 0x2f7 V241
---
Entry stack: [V11, 0x99, V91, V94, V96, V98, S2, 0x1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V233, 0x48ae238f, V236, 0x0, V232, V238, V232, 0x0, V233, V240]
Exit stack: [V11, 0x99, V91, V94, V96, V98, S2, V233, 0x48ae238f, V236, 0x0, V232, V238, V232, 0x0, V233, V240]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x284]
Successors: []
---
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 REVERT
---
0x2f3: V243 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x99, V91, V94, V96, V98, S10, V233, 0x48ae238f, V236, 0x0, V232, V238, V232, 0x0, V233, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V91, V94, V96, V98, S10, V233, 0x48ae238f, V236, 0x0, V232, V238, V232, 0x0, V233, V240]

================================

Block 0x2f7
[0x2f7:0x301]
---
Predecessors: [0x284]
Successors: [0x302, 0x30b]
---
0x2f7 JUMPDEST
0x2f8 POP
0x2f9 GAS
0x2fa CALL
0x2fb ISZERO
0x2fc DUP1
0x2fd ISZERO
0x2fe PUSH2 0x30b
0x301 JUMPI
---
0x2f7: JUMPDEST 
0x2f9: V244 = GAS
0x2fa: V245 = CALL V244 V233 0x0 V232 V238 V232 0x0
0x2fb: V246 = ISZERO V245
0x2fd: V247 = ISZERO V246
0x2fe: V248 = 0x30b
0x301: JUMPI 0x30b V247
---
Entry stack: [V11, 0x99, V91, V94, V96, V98, S10, V233, 0x48ae238f, V236, 0x0, V232, V238, V232, 0x0, V233, V240]
Stack pops: 7
Stack additions: [V246]
Exit stack: [V11, 0x99, V91, V94, V96, V98, S10, V233, 0x48ae238f, V236, V246]

================================

Block 0x302
[0x302:0x30a]
---
Predecessors: [0x2f7]
Successors: []
---
0x302 RETURNDATASIZE
0x303 PUSH1 0x0
0x305 DUP1
0x306 RETURNDATACOPY
0x307 RETURNDATASIZE
0x308 PUSH1 0x0
0x30a REVERT
---
0x302: V249 = RETURNDATASIZE
0x303: V250 = 0x0
0x306: RETURNDATACOPY 0x0 0x0 V249
0x307: V251 = RETURNDATASIZE
0x308: V252 = 0x0
0x30a: REVERT 0x0 V251
---
Entry stack: [V11, 0x99, V91, V94, V96, V98, S4, V233, 0x48ae238f, V236, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V91, V94, V96, V98, S4, V233, 0x48ae238f, V236, V246]

================================

Block 0x30b
[0x30b:0x31a]
---
Predecessors: [0x2f7]
Successors: [0x26e]
---
0x30b JUMPDEST
0x30c POP
0x30d POP
0x30e PUSH1 0x1
0x310 SWAP1
0x311 SWAP3
0x312 ADD
0x313 SWAP2
0x314 POP
0x315 PUSH2 0x26e
0x318 SWAP1
0x319 POP
0x31a JUMP
---
0x30b: JUMPDEST 
0x30e: V253 = 0x1
0x312: V254 = ADD S4 0x1
0x315: V255 = 0x26e
0x31a: JUMP 0x26e
---
Entry stack: [V11, 0x99, V91, V94, V96, V98, S4, V233, 0x48ae238f, V236, V246]
Stack pops: 5
Stack additions: [V254]
Exit stack: [V11, 0x99, V91, V94, V96, V98, V254]

================================

Block 0x31b
[0x31b:0x329]
---
Predecessors: [0x12f]
Successors: [0xda]
---
0x31b JUMPDEST
0x31c PUSH1 0x0
0x31e SLOAD
0x31f PUSH1 0x1
0x321 PUSH1 0xa0
0x323 PUSH1 0x2
0x325 EXP
0x326 SUB
0x327 AND
0x328 DUP2
0x329 JUMP
---
0x31b: JUMPDEST 
0x31c: V256 = 0x0
0x31e: V257 = S[0x0]
0x31f: V258 = 0x1
0x321: V259 = 0xa0
0x323: V260 = 0x2
0x325: V261 = EXP 0x2 0xa0
0x326: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x327: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x329: JUMP 0xda
---
Entry stack: [V11, 0xda]
Stack pops: 1
Stack additions: [S0, V263]
Exit stack: [V11, 0xda, V263]

================================

Block 0x32a
[0x32a:0x32c]
---
Predecessors: [0x144]
Successors: [0x32d]
---
0x32a JUMPDEST
0x32b PUSH1 0x0
---
0x32a: JUMPDEST 
0x32b: V264 = 0x0
---
Entry stack: [V11, 0x99, V114]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x99, V114, 0x0]

================================

Block 0x32d
[0x32d:0x33d]
---
Predecessors: [0x32a, 0x363]
Successors: [0x33e, 0x3a9]
---
0x32d JUMPDEST
0x32e DUP2
0x32f PUSH2 0xffff
0x332 AND
0x333 DUP2
0x334 PUSH2 0xffff
0x337 AND
0x338 LT
0x339 ISZERO
0x33a PUSH2 0x3a9
0x33d JUMPI
---
0x32d: JUMPDEST 
0x32f: V265 = 0xffff
0x332: V266 = AND 0xffff V114
0x334: V267 = 0xffff
0x337: V268 = AND 0xffff S0
0x338: V269 = LT V268 V266
0x339: V270 = ISZERO V269
0x33a: V271 = 0x3a9
0x33d: JUMPI 0x3a9 V270
---
Entry stack: [V11, 0x99, V114, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x99, V114, S0]

================================

Block 0x33e
[0x33e:0x346]
---
Predecessors: [0x32d]
Successors: [0x3ad]
---
0x33e PUSH1 0x1
0x340 PUSH2 0x347
0x343 PUSH2 0x3ad
0x346 JUMP
---
0x33e: V272 = 0x1
0x340: V273 = 0x347
0x343: V274 = 0x3ad
0x346: JUMP 0x3ad
---
Entry stack: [V11, 0x99, V114, S0]
Stack pops: 0
Stack additions: [0x1, 0x347]
Exit stack: [V11, 0x99, V114, S0, 0x1, 0x347]

================================

Block 0x347
[0x347:0x359]
---
Predecessors: [0x3ad]
Successors: [0x35a, 0x363]
---
0x347 JUMPDEST
0x348 PUSH1 0x40
0x34a MLOAD
0x34b DUP1
0x34c SWAP2
0x34d SUB
0x34e SWAP1
0x34f PUSH1 0x0
0x351 CREATE
0x352 DUP1
0x353 ISZERO
0x354 DUP1
0x355 ISZERO
0x356 PUSH2 0x363
0x359 JUMPI
---
0x347: JUMPDEST 
0x348: V275 = 0x40
0x34a: V276 = M[0x40]
0x34d: V277 = SUB V311 V276
0x34f: V278 = 0x0
0x351: V279 = CREATE 0x0 V276 V277
0x353: V280 = ISZERO V279
0x355: V281 = ISZERO V280
0x356: V282 = 0x363
0x359: JUMPI 0x363 V281
---
Entry stack: [V11, 0x99, V114, S2, 0x1, V311]
Stack pops: 1
Stack additions: [V279, V280]
Exit stack: [V11, 0x99, V114, S2, 0x1, V279, V280]

================================

Block 0x35a
[0x35a:0x362]
---
Predecessors: [0x347]
Successors: []
---
0x35a RETURNDATASIZE
0x35b PUSH1 0x0
0x35d DUP1
0x35e RETURNDATACOPY
0x35f RETURNDATASIZE
0x360 PUSH1 0x0
0x362 REVERT
---
0x35a: V283 = RETURNDATASIZE
0x35b: V284 = 0x0
0x35e: RETURNDATACOPY 0x0 0x0 V283
0x35f: V285 = RETURNDATASIZE
0x360: V286 = 0x0
0x362: REVERT 0x0 V285
---
Entry stack: [V11, 0x99, V114, S3, 0x1, V279, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x99, V114, S3, 0x1, V279, V280]

================================

Block 0x363
[0x363:0x3a8]
---
Predecessors: [0x347]
Successors: [0x32d]
---
0x363 JUMPDEST
0x364 POP
0x365 DUP2
0x366 SLOAD
0x367 PUSH1 0x1
0x369 DUP1
0x36a DUP3
0x36b ADD
0x36c DUP5
0x36d SSTORE
0x36e PUSH1 0x0
0x370 SWAP4
0x371 DUP5
0x372 MSTORE
0x373 PUSH1 0x20
0x375 SWAP1
0x376 SWAP4
0x377 SHA3
0x378 ADD
0x379 DUP1
0x37a SLOAD
0x37b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x390 NOT
0x391 AND
0x392 PUSH1 0x1
0x394 PUSH1 0xa0
0x396 PUSH1 0x2
0x398 EXP
0x399 SUB
0x39a SWAP3
0x39b SWAP1
0x39c SWAP3
0x39d AND
0x39e SWAP2
0x39f SWAP1
0x3a0 SWAP2
0x3a1 OR
0x3a2 SWAP1
0x3a3 SSTORE
0x3a4 ADD
0x3a5 PUSH2 0x32d
0x3a8 JUMP
---
0x363: JUMPDEST 
0x366: V287 = S[0x1]
0x367: V288 = 0x1
0x36b: V289 = ADD V287 0x1
0x36d: S[0x1] = V289
0x36e: V290 = 0x0
0x372: M[0x0] = 0x1
0x373: V291 = 0x20
0x377: V292 = SHA3 0x0 0x20
0x378: V293 = ADD V292 V287
0x37a: V294 = S[V293]
0x37b: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x390: V296 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x391: V297 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V294
0x392: V298 = 0x1
0x394: V299 = 0xa0
0x396: V300 = 0x2
0x398: V301 = EXP 0x2 0xa0
0x399: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39d: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x3a1: V304 = OR V303 V297
0x3a3: S[V293] = V304
0x3a4: V305 = ADD 0x1 S3
0x3a5: V306 = 0x32d
0x3a8: JUMP 0x32d
---
Entry stack: [V11, 0x99, V114, S3, 0x1, V279, V280]
Stack pops: 4
Stack additions: [V305]
Exit stack: [V11, 0x99, V114, V305]

================================

Block 0x3a9
[0x3a9:0x3ac]
---
Predecessors: [0x32d]
Successors: [0x99]
---
0x3a9 JUMPDEST
0x3aa POP
0x3ab POP
0x3ac JUMP
---
0x3a9: JUMPDEST 
0x3ac: JUMP 0x99
---
Entry stack: [V11, 0x99, V114, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ad
[0x3ad:0x3bc]
---
Predecessors: [0x33e]
Successors: [0x347]
---
0x3ad JUMPDEST
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 PUSH2 0x33c
0x3b4 DUP1
0x3b5 PUSH2 0x3be
0x3b8 DUP4
0x3b9 CODECOPY
0x3ba ADD
0x3bb SWAP1
0x3bc JUMP
---
0x3ad: JUMPDEST 
0x3ae: V307 = 0x40
0x3b0: V308 = M[0x40]
0x3b1: V309 = 0x33c
0x3b5: V310 = 0x3be
0x3b9: CODECOPY V308 0x3be 0x33c
0x3ba: V311 = ADD 0x33c V308
0x3bc: JUMP 0x347
---
Entry stack: [V11, 0x99, V114, S2, 0x1, 0x347]
Stack pops: 1
Stack additions: [V311]
Exit stack: [V11, 0x99, V114, S2, 0x1, V311]

================================

Block 0x3bd
[0x3bd:0x3c9]
---
Predecessors: []
Successors: [0x3ca]
---
0x3bd STOP
0x3be PUSH1 0x80
0x3c0 PUSH1 0x40
0x3c2 MSTORE
0x3c3 CALLVALUE
0x3c4 DUP1
0x3c5 ISZERO
0x3c6 PUSH2 0x10
0x3c9 JUMPI
---
0x3bd: STOP 
0x3be: V312 = 0x80
0x3c0: V313 = 0x40
0x3c2: M[0x40] = 0x80
0x3c3: V314 = CALLVALUE
0x3c5: V315 = ISZERO V314
0x3c6: V316 = 0x10
0x3c9: THROWI V315
---
Entry stack: []
Stack pops: 0
Stack additions: [V314]
Exit stack: []

================================

Block 0x3ca
[0x3ca:0x3fc]
---
Predecessors: [0x3bd]
Successors: [0x3fd]
---
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd REVERT
0x3ce JUMPDEST
0x3cf POP
0x3d0 PUSH1 0x0
0x3d2 DUP1
0x3d3 SLOAD
0x3d4 PUSH1 0x1
0x3d6 PUSH1 0xa0
0x3d8 PUSH1 0x2
0x3da EXP
0x3db SUB
0x3dc NOT
0x3dd AND
0x3de CALLER
0x3df OR
0x3e0 SWAP1
0x3e1 SSTORE
0x3e2 PUSH2 0x30a
0x3e5 DUP1
0x3e6 PUSH2 0x32
0x3e9 PUSH1 0x0
0x3eb CODECOPY
0x3ec PUSH1 0x0
0x3ee RETURN
0x3ef STOP
0x3f0 PUSH1 0x80
0x3f2 PUSH1 0x40
0x3f4 MSTORE
0x3f5 PUSH1 0x4
0x3f7 CALLDATASIZE
0x3f8 LT
0x3f9 PUSH2 0x61
0x3fc JUMPI
---
0x3ca: V317 = 0x0
0x3cd: REVERT 0x0 0x0
0x3ce: JUMPDEST 
0x3d0: V318 = 0x0
0x3d3: V319 = S[0x0]
0x3d4: V320 = 0x1
0x3d6: V321 = 0xa0
0x3d8: V322 = 0x2
0x3da: V323 = EXP 0x2 0xa0
0x3db: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dc: V325 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: V326 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V319
0x3de: V327 = CALLER
0x3df: V328 = OR V327 V326
0x3e1: S[0x0] = V328
0x3e2: V329 = 0x30a
0x3e6: V330 = 0x32
0x3e9: V331 = 0x0
0x3eb: CODECOPY 0x0 0x32 0x30a
0x3ec: V332 = 0x0
0x3ee: RETURN 0x0 0x30a
0x3ef: STOP 
0x3f0: V333 = 0x80
0x3f2: V334 = 0x40
0x3f4: M[0x40] = 0x80
0x3f5: V335 = 0x4
0x3f7: V336 = CALLDATASIZE
0x3f8: V337 = LT V336 0x4
0x3f9: V338 = 0x61
0x3fc: THROWI V337
---
Entry stack: [V314]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3fd
[0x3fd:0x42f]
---
Predecessors: [0x3ca]
Successors: [0x430]
---
0x3fd PUSH4 0xffffffff
0x402 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x420 PUSH1 0x0
0x422 CALLDATALOAD
0x423 DIV
0x424 AND
0x425 PUSH4 0x48ae238f
0x42a DUP2
0x42b EQ
0x42c PUSH2 0x66
0x42f JUMPI
---
0x3fd: V339 = 0xffffffff
0x402: V340 = 0x100000000000000000000000000000000000000000000000000000000
0x420: V341 = 0x0
0x422: V342 = CALLDATALOAD 0x0
0x423: V343 = DIV V342 0x100000000000000000000000000000000000000000000000000000000
0x424: V344 = AND V343 0xffffffff
0x425: V345 = 0x48ae238f
0x42b: V346 = EQ V344 0x48ae238f
0x42c: V347 = 0x66
0x42f: THROWI V346
---
Entry stack: []
Stack pops: 0
Stack additions: [V344]
Exit stack: [V344]

================================

Block 0x430
[0x430:0x43a]
---
Predecessors: [0x3fd]
Successors: [0x43b]
---
0x430 DUP1
0x431 PUSH4 0x49dcbc5e
0x436 EQ
0x437 PUSH2 0x8f
0x43a JUMPI
---
0x431: V348 = 0x49dcbc5e
0x436: V349 = EQ 0x49dcbc5e V344
0x437: V350 = 0x8f
0x43a: THROWI V349
---
Entry stack: [V344]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V344]

================================

Block 0x43b
[0x43b:0x445]
---
Predecessors: [0x430]
Successors: [0x446]
---
0x43b DUP1
0x43c PUSH4 0x60b8cfb1
0x441 EQ
0x442 PUSH2 0xa6
0x445 JUMPI
---
0x43c: V351 = 0x60b8cfb1
0x441: V352 = EQ 0x60b8cfb1 V344
0x442: V353 = 0xa6
0x445: THROWI V352
---
Entry stack: [V344]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V344]

================================

Block 0x446
[0x446:0x450]
---
Predecessors: [0x43b]
Successors: [0x451]
---
0x446 DUP1
0x447 PUSH4 0x8da5cb5b
0x44c EQ
0x44d PUSH2 0xbb
0x450 JUMPI
---
0x447: V354 = 0x8da5cb5b
0x44c: V355 = EQ 0x8da5cb5b V344
0x44d: V356 = 0xbb
0x450: THROWI V355
---
Entry stack: [V344]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V344]

================================

Block 0x451
[0x451:0x45d]
---
Predecessors: [0x446]
Successors: [0x45e]
---
0x451 JUMPDEST
0x452 PUSH1 0x0
0x454 DUP1
0x455 REVERT
0x456 JUMPDEST
0x457 CALLVALUE
0x458 DUP1
0x459 ISZERO
0x45a PUSH2 0x72
0x45d JUMPI
---
0x451: JUMPDEST 
0x452: V357 = 0x0
0x455: REVERT 0x0 0x0
0x456: JUMPDEST 
0x457: V358 = CALLVALUE
0x459: V359 = ISZERO V358
0x45a: V360 = 0x72
0x45d: THROWI V359
---
Entry stack: [V344]
Stack pops: 0
Stack additions: [V358]
Exit stack: []

================================

Block 0x45e
[0x45e:0x49d]
---
Predecessors: [0x451]
Successors: [0x49e]
---
0x45e PUSH1 0x0
0x460 DUP1
0x461 REVERT
0x462 JUMPDEST
0x463 POP
0x464 PUSH2 0x8d
0x467 PUSH1 0x1
0x469 PUSH1 0xa0
0x46b PUSH1 0x2
0x46d EXP
0x46e SUB
0x46f PUSH1 0x4
0x471 CALLDATALOAD
0x472 DUP2
0x473 AND
0x474 SWAP1
0x475 PUSH1 0x24
0x477 CALLDATALOAD
0x478 AND
0x479 PUSH2 0xec
0x47c JUMP
0x47d JUMPDEST
0x47e STOP
0x47f JUMPDEST
0x480 PUSH2 0x8d
0x483 PUSH1 0x1
0x485 PUSH1 0xa0
0x487 PUSH1 0x2
0x489 EXP
0x48a SUB
0x48b PUSH1 0x4
0x48d CALLDATALOAD
0x48e AND
0x48f PUSH1 0x24
0x491 CALLDATALOAD
0x492 PUSH2 0x237
0x495 JUMP
0x496 JUMPDEST
0x497 CALLVALUE
0x498 DUP1
0x499 ISZERO
0x49a PUSH2 0xb2
0x49d JUMPI
---
0x45e: V361 = 0x0
0x461: REVERT 0x0 0x0
0x462: JUMPDEST 
0x464: V362 = 0x8d
0x467: V363 = 0x1
0x469: V364 = 0xa0
0x46b: V365 = 0x2
0x46d: V366 = EXP 0x2 0xa0
0x46e: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46f: V368 = 0x4
0x471: V369 = CALLDATALOAD 0x4
0x473: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x475: V371 = 0x24
0x477: V372 = CALLDATALOAD 0x24
0x478: V373 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x479: V374 = 0xec
0x47c: THROW 
0x47d: JUMPDEST 
0x47e: STOP 
0x47f: JUMPDEST 
0x480: V375 = 0x8d
0x483: V376 = 0x1
0x485: V377 = 0xa0
0x487: V378 = 0x2
0x489: V379 = EXP 0x2 0xa0
0x48a: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48b: V381 = 0x4
0x48d: V382 = CALLDATALOAD 0x4
0x48e: V383 = AND V382 0xffffffffffffffffffffffffffffffffffffffff
0x48f: V384 = 0x24
0x491: V385 = CALLDATALOAD 0x24
0x492: V386 = 0x237
0x495: THROW 
0x496: JUMPDEST 
0x497: V387 = CALLVALUE
0x499: V388 = ISZERO V387
0x49a: V389 = 0xb2
0x49d: THROWI V388
---
Entry stack: [V358]
Stack pops: 0
Stack additions: [V373, V370, 0x8d, V385, V383, 0x8d, V387]
Exit stack: []

================================

Block 0x49e
[0x49e:0x4b2]
---
Predecessors: [0x45e]
Successors: [0x4b3]
---
0x49e PUSH1 0x0
0x4a0 DUP1
0x4a1 REVERT
0x4a2 JUMPDEST
0x4a3 POP
0x4a4 PUSH2 0x8d
0x4a7 PUSH2 0x27a
0x4aa JUMP
0x4ab JUMPDEST
0x4ac CALLVALUE
0x4ad DUP1
0x4ae ISZERO
0x4af PUSH2 0xc7
0x4b2 JUMPI
---
0x49e: V390 = 0x0
0x4a1: REVERT 0x0 0x0
0x4a2: JUMPDEST 
0x4a4: V391 = 0x8d
0x4a7: V392 = 0x27a
0x4aa: THROW 
0x4ab: JUMPDEST 
0x4ac: V393 = CALLVALUE
0x4ae: V394 = ISZERO V393
0x4af: V395 = 0xc7
0x4b2: THROWI V394
---
Entry stack: [V387]
Stack pops: 0
Stack additions: [0x8d, V393]
Exit stack: []

================================

Block 0x4b3
[0x4b3:0x4f1]
---
Predecessors: [0x49e]
Successors: [0x4f2]
---
0x4b3 PUSH1 0x0
0x4b5 DUP1
0x4b6 REVERT
0x4b7 JUMPDEST
0x4b8 POP
0x4b9 PUSH2 0xd0
0x4bc PUSH2 0x2cf
0x4bf JUMP
0x4c0 JUMPDEST
0x4c1 PUSH1 0x40
0x4c3 DUP1
0x4c4 MLOAD
0x4c5 PUSH1 0x1
0x4c7 PUSH1 0xa0
0x4c9 PUSH1 0x2
0x4cb EXP
0x4cc SUB
0x4cd SWAP1
0x4ce SWAP3
0x4cf AND
0x4d0 DUP3
0x4d1 MSTORE
0x4d2 MLOAD
0x4d3 SWAP1
0x4d4 DUP2
0x4d5 SWAP1
0x4d6 SUB
0x4d7 PUSH1 0x20
0x4d9 ADD
0x4da SWAP1
0x4db RETURN
0x4dc JUMPDEST
0x4dd PUSH1 0x0
0x4df DUP1
0x4e0 SLOAD
0x4e1 DUP2
0x4e2 SWAP1
0x4e3 PUSH1 0x1
0x4e5 PUSH1 0xa0
0x4e7 PUSH1 0x2
0x4e9 EXP
0x4ea SUB
0x4eb AND
0x4ec CALLER
0x4ed EQ
0x4ee PUSH2 0x106
0x4f1 JUMPI
---
0x4b3: V396 = 0x0
0x4b6: REVERT 0x0 0x0
0x4b7: JUMPDEST 
0x4b9: V397 = 0xd0
0x4bc: V398 = 0x2cf
0x4bf: THROW 
0x4c0: JUMPDEST 
0x4c1: V399 = 0x40
0x4c4: V400 = M[0x40]
0x4c5: V401 = 0x1
0x4c7: V402 = 0xa0
0x4c9: V403 = 0x2
0x4cb: V404 = EXP 0x2 0xa0
0x4cc: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V406 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: M[V400] = V406
0x4d2: V407 = M[0x40]
0x4d6: V408 = SUB V400 V407
0x4d7: V409 = 0x20
0x4d9: V410 = ADD 0x20 V408
0x4db: RETURN V407 V410
0x4dc: JUMPDEST 
0x4dd: V411 = 0x0
0x4e0: V412 = S[0x0]
0x4e3: V413 = 0x1
0x4e5: V414 = 0xa0
0x4e7: V415 = 0x2
0x4e9: V416 = EXP 0x2 0xa0
0x4ea: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4eb: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x4ec: V419 = CALLER
0x4ed: V420 = EQ V419 V418
0x4ee: V421 = 0x106
0x4f1: THROWI V420
---
Entry stack: [V393]
Stack pops: 0
Stack additions: [0xd0, 0x0, 0x0]
Exit stack: []

================================

Block 0x4f2
[0x4f2:0x555]
---
Predecessors: [0x4b3]
Successors: [0x556]
---
0x4f2 PUSH1 0x0
0x4f4 DUP1
0x4f5 REVERT
0x4f6 JUMPDEST
0x4f7 PUSH1 0x40
0x4f9 DUP1
0x4fa MLOAD
0x4fb PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x51c DUP2
0x51d MSTORE
0x51e ADDRESS
0x51f PUSH1 0x4
0x521 DUP3
0x522 ADD
0x523 MSTORE
0x524 SWAP1
0x525 MLOAD
0x526 DUP6
0x527 SWAP4
0x528 POP
0x529 PUSH1 0x1
0x52b PUSH1 0xa0
0x52d PUSH1 0x2
0x52f EXP
0x530 SUB
0x531 DUP5
0x532 AND
0x533 SWAP2
0x534 PUSH4 0x70a08231
0x539 SWAP2
0x53a PUSH1 0x24
0x53c DUP1
0x53d DUP4
0x53e ADD
0x53f SWAP3
0x540 PUSH1 0x20
0x542 SWAP3
0x543 SWAP2
0x544 SWAP1
0x545 DUP3
0x546 SWAP1
0x547 SUB
0x548 ADD
0x549 DUP2
0x54a PUSH1 0x0
0x54c DUP8
0x54d DUP1
0x54e EXTCODESIZE
0x54f ISZERO
0x550 DUP1
0x551 ISZERO
0x552 PUSH2 0x16a
0x555 JUMPI
---
0x4f2: V422 = 0x0
0x4f5: REVERT 0x0 0x0
0x4f6: JUMPDEST 
0x4f7: V423 = 0x40
0x4fa: V424 = M[0x40]
0x4fb: V425 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x51d: M[V424] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x51e: V426 = ADDRESS
0x51f: V427 = 0x4
0x522: V428 = ADD V424 0x4
0x523: M[V428] = V426
0x525: V429 = M[0x40]
0x529: V430 = 0x1
0x52b: V431 = 0xa0
0x52d: V432 = 0x2
0x52f: V433 = EXP 0x2 0xa0
0x530: V434 = SUB 0x10000000000000000000000000000000000000000 0x1
0x532: V435 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x534: V436 = 0x70a08231
0x53a: V437 = 0x24
0x53e: V438 = ADD V424 0x24
0x540: V439 = 0x20
0x547: V440 = SUB V424 V429
0x548: V441 = ADD V440 0x24
0x54a: V442 = 0x0
0x54e: V443 = EXTCODESIZE V435
0x54f: V444 = ISZERO V443
0x551: V445 = ISZERO V444
0x552: V446 = 0x16a
0x555: THROWI V445
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [V444, V435, 0x0, V429, V441, V429, 0x20, V438, 0x70a08231, V435, S0, S3, S2, S3]
Exit stack: []

================================

Block 0x556
[0x556:0x564]
---
Predecessors: [0x4f2]
Successors: [0x565]
---
0x556 PUSH1 0x0
0x558 DUP1
0x559 REVERT
0x55a JUMPDEST
0x55b POP
0x55c GAS
0x55d CALL
0x55e ISZERO
0x55f DUP1
0x560 ISZERO
0x561 PUSH2 0x17e
0x564 JUMPI
---
0x556: V447 = 0x0
0x559: REVERT 0x0 0x0
0x55a: JUMPDEST 
0x55c: V448 = GAS
0x55d: V449 = CALL V448 S1 S2 S3 S4 S5 S6
0x55e: V450 = ISZERO V449
0x560: V451 = ISZERO V450
0x561: V452 = 0x17e
0x564: THROWI V451
---
Entry stack: [S13, S12, S11, S10, V435, 0x70a08231, V438, 0x20, V429, V441, V429, 0x0, V435, V444]
Stack pops: 0
Stack additions: [V450]
Exit stack: []

================================

Block 0x565
[0x565:0x57f]
---
Predecessors: [0x556]
Successors: [0x580]
---
0x565 RETURNDATASIZE
0x566 PUSH1 0x0
0x568 DUP1
0x569 RETURNDATACOPY
0x56a RETURNDATASIZE
0x56b PUSH1 0x0
0x56d REVERT
0x56e JUMPDEST
0x56f POP
0x570 POP
0x571 POP
0x572 POP
0x573 PUSH1 0x40
0x575 MLOAD
0x576 RETURNDATASIZE
0x577 PUSH1 0x20
0x579 DUP2
0x57a LT
0x57b ISZERO
0x57c PUSH2 0x194
0x57f JUMPI
---
0x565: V453 = RETURNDATASIZE
0x566: V454 = 0x0
0x569: RETURNDATACOPY 0x0 0x0 V453
0x56a: V455 = RETURNDATASIZE
0x56b: V456 = 0x0
0x56d: REVERT 0x0 V455
0x56e: JUMPDEST 
0x573: V457 = 0x40
0x575: V458 = M[0x40]
0x576: V459 = RETURNDATASIZE
0x577: V460 = 0x20
0x57a: V461 = LT V459 0x20
0x57b: V462 = ISZERO V461
0x57c: V463 = 0x194
0x57f: THROWI V462
---
Entry stack: [V450]
Stack pops: 0
Stack additions: [V459, V458]
Exit stack: []

================================

Block 0x580
[0x580:0x5f0]
---
Predecessors: [0x565]
Successors: [0x5f1]
---
0x580 PUSH1 0x0
0x582 DUP1
0x583 REVERT
0x584 JUMPDEST
0x585 POP
0x586 MLOAD
0x587 PUSH1 0x40
0x589 DUP1
0x58a MLOAD
0x58b PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5ac DUP2
0x5ad MSTORE
0x5ae PUSH1 0x1
0x5b0 PUSH1 0xa0
0x5b2 PUSH1 0x2
0x5b4 EXP
0x5b5 SUB
0x5b6 DUP7
0x5b7 DUP2
0x5b8 AND
0x5b9 PUSH1 0x4
0x5bb DUP4
0x5bc ADD
0x5bd MSTORE
0x5be PUSH1 0x24
0x5c0 DUP3
0x5c1 ADD
0x5c2 DUP5
0x5c3 SWAP1
0x5c4 MSTORE
0x5c5 SWAP2
0x5c6 MLOAD
0x5c7 SWAP3
0x5c8 SWAP4
0x5c9 POP
0x5ca SWAP1
0x5cb DUP5
0x5cc AND
0x5cd SWAP2
0x5ce PUSH4 0xa9059cbb
0x5d3 SWAP2
0x5d4 PUSH1 0x44
0x5d6 DUP1
0x5d7 DUP3
0x5d8 ADD
0x5d9 SWAP3
0x5da PUSH1 0x20
0x5dc SWAP3
0x5dd SWAP1
0x5de SWAP2
0x5df SWAP1
0x5e0 DUP3
0x5e1 SWAP1
0x5e2 SUB
0x5e3 ADD
0x5e4 DUP2
0x5e5 PUSH1 0x0
0x5e7 DUP8
0x5e8 DUP1
0x5e9 EXTCODESIZE
0x5ea ISZERO
0x5eb DUP1
0x5ec ISZERO
0x5ed PUSH2 0x205
0x5f0 JUMPI
---
0x580: V464 = 0x0
0x583: REVERT 0x0 0x0
0x584: JUMPDEST 
0x586: V465 = M[S1]
0x587: V466 = 0x40
0x58a: V467 = M[0x40]
0x58b: V468 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5ad: M[V467] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5ae: V469 = 0x1
0x5b0: V470 = 0xa0
0x5b2: V471 = 0x2
0x5b4: V472 = EXP 0x2 0xa0
0x5b5: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b8: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x5b9: V475 = 0x4
0x5bc: V476 = ADD V467 0x4
0x5bd: M[V476] = V474
0x5be: V477 = 0x24
0x5c1: V478 = ADD V467 0x24
0x5c4: M[V478] = V465
0x5c6: V479 = M[0x40]
0x5cc: V480 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x5ce: V481 = 0xa9059cbb
0x5d4: V482 = 0x44
0x5d8: V483 = ADD V467 0x44
0x5da: V484 = 0x20
0x5e2: V485 = SUB V467 V479
0x5e3: V486 = ADD V485 0x44
0x5e5: V487 = 0x0
0x5e9: V488 = EXTCODESIZE V480
0x5ea: V489 = ISZERO V488
0x5ec: V490 = ISZERO V489
0x5ed: V491 = 0x205
0x5f0: THROWI V490
---
Entry stack: [V458, V459]
Stack pops: 0
Stack additions: [V489, V480, 0x0, V479, V486, V479, 0x20, V483, 0xa9059cbb, V480, V465, S3, S4]
Exit stack: []

================================

Block 0x5f1
[0x5f1:0x5ff]
---
Predecessors: [0x580]
Successors: [0x600]
---
0x5f1 PUSH1 0x0
0x5f3 DUP1
0x5f4 REVERT
0x5f5 JUMPDEST
0x5f6 POP
0x5f7 GAS
0x5f8 CALL
0x5f9 ISZERO
0x5fa DUP1
0x5fb ISZERO
0x5fc PUSH2 0x219
0x5ff JUMPI
---
0x5f1: V492 = 0x0
0x5f4: REVERT 0x0 0x0
0x5f5: JUMPDEST 
0x5f7: V493 = GAS
0x5f8: V494 = CALL V493 S1 S2 S3 S4 S5 S6
0x5f9: V495 = ISZERO V494
0x5fb: V496 = ISZERO V495
0x5fc: V497 = 0x219
0x5ff: THROWI V496
---
Entry stack: [S12, S11, V465, V480, 0xa9059cbb, V483, 0x20, V479, V486, V479, 0x0, V480, V489]
Stack pops: 0
Stack additions: [V495]
Exit stack: []

================================

Block 0x600
[0x600:0x61a]
---
Predecessors: [0x5f1]
Successors: [0x61b]
---
0x600 RETURNDATASIZE
0x601 PUSH1 0x0
0x603 DUP1
0x604 RETURNDATACOPY
0x605 RETURNDATASIZE
0x606 PUSH1 0x0
0x608 REVERT
0x609 JUMPDEST
0x60a POP
0x60b POP
0x60c POP
0x60d POP
0x60e PUSH1 0x40
0x610 MLOAD
0x611 RETURNDATASIZE
0x612 PUSH1 0x20
0x614 DUP2
0x615 LT
0x616 ISZERO
0x617 PUSH2 0x22f
0x61a JUMPI
---
0x600: V498 = RETURNDATASIZE
0x601: V499 = 0x0
0x604: RETURNDATACOPY 0x0 0x0 V498
0x605: V500 = RETURNDATASIZE
0x606: V501 = 0x0
0x608: REVERT 0x0 V500
0x609: JUMPDEST 
0x60e: V502 = 0x40
0x610: V503 = M[0x40]
0x611: V504 = RETURNDATASIZE
0x612: V505 = 0x20
0x615: V506 = LT V504 0x20
0x616: V507 = ISZERO V506
0x617: V508 = 0x22f
0x61a: THROWI V507
---
Entry stack: [V495]
Stack pops: 0
Stack additions: [V504, V503]
Exit stack: []

================================

Block 0x61b
[0x61b:0x639]
---
Predecessors: [0x600]
Successors: [0x63a]
---
0x61b PUSH1 0x0
0x61d DUP1
0x61e REVERT
0x61f JUMPDEST
0x620 POP
0x621 POP
0x622 POP
0x623 POP
0x624 POP
0x625 POP
0x626 JUMP
0x627 JUMPDEST
0x628 PUSH1 0x0
0x62a SLOAD
0x62b PUSH1 0x1
0x62d PUSH1 0xa0
0x62f PUSH1 0x2
0x631 EXP
0x632 SUB
0x633 AND
0x634 CALLER
0x635 EQ
0x636 PUSH2 0x24e
0x639 JUMPI
---
0x61b: V509 = 0x0
0x61e: REVERT 0x0 0x0
0x61f: JUMPDEST 
0x626: JUMP S6
0x627: JUMPDEST 
0x628: V510 = 0x0
0x62a: V511 = S[0x0]
0x62b: V512 = 0x1
0x62d: V513 = 0xa0
0x62f: V514 = 0x2
0x631: V515 = EXP 0x2 0xa0
0x632: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x633: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x634: V518 = CALLER
0x635: V519 = EQ V518 V517
0x636: V520 = 0x24e
0x639: THROWI V519
---
Entry stack: [V503, V504]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x63a
[0x63a:0x661]
---
Predecessors: [0x61b]
Successors: [0x662]
---
0x63a PUSH1 0x0
0x63c DUP1
0x63d REVERT
0x63e JUMPDEST
0x63f PUSH1 0x40
0x641 MLOAD
0x642 PUSH1 0x1
0x644 PUSH1 0xa0
0x646 PUSH1 0x2
0x648 EXP
0x649 SUB
0x64a DUP4
0x64b AND
0x64c SWAP1
0x64d DUP3
0x64e SWAP1
0x64f PUSH1 0x0
0x651 DUP2
0x652 DUP2
0x653 DUP2
0x654 DUP6
0x655 DUP8
0x656 GAS
0x657 CALL
0x658 SWAP3
0x659 POP
0x65a POP
0x65b POP
0x65c ISZERO
0x65d ISZERO
0x65e PUSH2 0x276
0x661 JUMPI
---
0x63a: V521 = 0x0
0x63d: REVERT 0x0 0x0
0x63e: JUMPDEST 
0x63f: V522 = 0x40
0x641: V523 = M[0x40]
0x642: V524 = 0x1
0x644: V525 = 0xa0
0x646: V526 = 0x2
0x648: V527 = EXP 0x2 0xa0
0x649: V528 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64b: V529 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x64f: V530 = 0x0
0x656: V531 = GAS
0x657: V532 = CALL V531 V529 S0 V523 0x0 V523 0x0
0x65c: V533 = ISZERO V532
0x65d: V534 = ISZERO V533
0x65e: V535 = 0x276
0x661: THROWI V534
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0x662
[0x662:0x67c]
---
Predecessors: [0x63a]
Successors: [0x67d]
---
0x662 PUSH1 0x0
0x664 DUP1
0x665 REVERT
0x666 JUMPDEST
0x667 POP
0x668 POP
0x669 JUMP
0x66a JUMPDEST
0x66b PUSH1 0x0
0x66d SLOAD
0x66e PUSH1 0x1
0x670 PUSH1 0xa0
0x672 PUSH1 0x2
0x674 EXP
0x675 SUB
0x676 AND
0x677 CALLER
0x678 EQ
0x679 PUSH2 0x291
0x67c JUMPI
---
0x662: V536 = 0x0
0x665: REVERT 0x0 0x0
0x666: JUMPDEST 
0x669: JUMP S2
0x66a: JUMPDEST 
0x66b: V537 = 0x0
0x66d: V538 = S[0x0]
0x66e: V539 = 0x1
0x670: V540 = 0xa0
0x672: V541 = 0x2
0x674: V542 = EXP 0x2 0xa0
0x675: V543 = SUB 0x10000000000000000000000000000000000000000 0x1
0x676: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x677: V545 = CALLER
0x678: V546 = EQ V545 V544
0x679: V547 = 0x291
0x67c: THROWI V546
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x67d
[0x67d:0x6b2]
---
Predecessors: [0x662]
Successors: [0x6b3]
---
0x67d PUSH1 0x0
0x67f DUP1
0x680 REVERT
0x681 JUMPDEST
0x682 PUSH1 0x0
0x684 DUP1
0x685 SLOAD
0x686 PUSH1 0x40
0x688 MLOAD
0x689 PUSH1 0x1
0x68b PUSH1 0xa0
0x68d PUSH1 0x2
0x68f EXP
0x690 SUB
0x691 SWAP1
0x692 SWAP2
0x693 AND
0x694 SWAP2
0x695 ADDRESS
0x696 BALANCE
0x697 DUP1
0x698 ISZERO
0x699 PUSH2 0x8fc
0x69c MUL
0x69d SWAP3
0x69e SWAP1
0x69f SWAP2
0x6a0 DUP2
0x6a1 DUP2
0x6a2 DUP2
0x6a3 DUP6
0x6a4 DUP9
0x6a5 DUP9
0x6a6 CALL
0x6a7 SWAP4
0x6a8 POP
0x6a9 POP
0x6aa POP
0x6ab POP
0x6ac ISZERO
0x6ad DUP1
0x6ae ISZERO
0x6af PUSH2 0x2cc
0x6b2 JUMPI
---
0x67d: V548 = 0x0
0x680: REVERT 0x0 0x0
0x681: JUMPDEST 
0x682: V549 = 0x0
0x685: V550 = S[0x0]
0x686: V551 = 0x40
0x688: V552 = M[0x40]
0x689: V553 = 0x1
0x68b: V554 = 0xa0
0x68d: V555 = 0x2
0x68f: V556 = EXP 0x2 0xa0
0x690: V557 = SUB 0x10000000000000000000000000000000000000000 0x1
0x693: V558 = AND V550 0xffffffffffffffffffffffffffffffffffffffff
0x695: V559 = ADDRESS
0x696: V560 = BALANCE V559
0x698: V561 = ISZERO V560
0x699: V562 = 0x8fc
0x69c: V563 = MUL 0x8fc V561
0x6a6: V564 = CALL V563 V558 V560 V552 0x0 V552 0x0
0x6ac: V565 = ISZERO V564
0x6ae: V566 = ISZERO V565
0x6af: V567 = 0x2cc
0x6b2: THROWI V566
---
Entry stack: []
Stack pops: 0
Stack additions: [V565]
Exit stack: []

================================

Block 0x6b3
[0x6b3:0x724]
---
Predecessors: [0x67d]
Successors: []
---
0x6b3 RETURNDATASIZE
0x6b4 PUSH1 0x0
0x6b6 DUP1
0x6b7 RETURNDATACOPY
0x6b8 RETURNDATASIZE
0x6b9 PUSH1 0x0
0x6bb REVERT
0x6bc JUMPDEST
0x6bd POP
0x6be JUMP
0x6bf JUMPDEST
0x6c0 PUSH1 0x0
0x6c2 SLOAD
0x6c3 PUSH1 0x1
0x6c5 PUSH1 0xa0
0x6c7 PUSH1 0x2
0x6c9 EXP
0x6ca SUB
0x6cb AND
0x6cc DUP2
0x6cd JUMP
0x6ce STOP
0x6cf LOG1
0x6d0 PUSH6 0x627a7a723058
0x6d7 SHA3
0x6d8 PUSH18 0xd6fda7a2d5128eefaae141894f757eef92cb
0x6eb CALLER
0x6ec RETURNDATASIZE
0x6ed STATICCALL
0x6ee POP
0x6ef MISSING 0x4e
0x6f0 MISSING 0xd2
0x6f1 MISSING 0x5e
0x6f2 SWAP8
0x6f3 MISSING 0xc
0x6f4 PUSH5 0x8de8950029
0x6fa LOG1
0x6fb PUSH6 0x627a7a723058
0x702 SHA3
0x703 MISSING 0x24
0x704 PUSH14 0xd72cf5fc9762284a2b330594820
0x713 MISSING 0xf8
0x714 SWAP12
0x715 MISSING 0xf7
0x716 PUSH6 0xe1a26a78bcb6
0x71d MISSING 0xbd
0x71e MISSING 0xc2
0x71f GAS
0x720 PUSH4 0x437d0029
---
0x6b3: V568 = RETURNDATASIZE
0x6b4: V569 = 0x0
0x6b7: RETURNDATACOPY 0x0 0x0 V568
0x6b8: V570 = RETURNDATASIZE
0x6b9: V571 = 0x0
0x6bb: REVERT 0x0 V570
0x6bc: JUMPDEST 
0x6be: JUMP S1
0x6bf: JUMPDEST 
0x6c0: V572 = 0x0
0x6c2: V573 = S[0x0]
0x6c3: V574 = 0x1
0x6c5: V575 = 0xa0
0x6c7: V576 = 0x2
0x6c9: V577 = EXP 0x2 0xa0
0x6ca: V578 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cb: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x6cd: JUMP S0
0x6ce: STOP 
0x6cf: LOG S0 S1 S2
0x6d0: V580 = 0x627a7a723058
0x6d7: V581 = SHA3 0x627a7a723058 S3
0x6d8: V582 = 0xd6fda7a2d5128eefaae141894f757eef92cb
0x6eb: V583 = CALLER
0x6ec: V584 = RETURNDATASIZE
0x6ed: V585 = STATICCALL V584 V583 0xd6fda7a2d5128eefaae141894f757eef92cb V581 S4 S5
0x6ef: MISSING 0x4e
0x6f0: MISSING 0xd2
0x6f1: MISSING 0x5e
0x6f3: MISSING 0xc
0x6f4: V586 = 0x8de8950029
0x6fa: LOG 0x8de8950029 S0 S1
0x6fb: V587 = 0x627a7a723058
0x702: V588 = SHA3 0x627a7a723058 S2
0x703: MISSING 0x24
0x704: V589 = 0xd72cf5fc9762284a2b330594820
0x713: MISSING 0xf8
0x715: MISSING 0xf7
0x716: V590 = 0xe1a26a78bcb6
0x71d: MISSING 0xbd
0x71e: MISSING 0xc2
0x71f: V591 = GAS
0x720: V592 = 0x437d0029
---
Entry stack: [V565]
Stack pops: 0
Stack additions: [V579, S0, S8, S1, S2, S3, S4, S5, S6, S7, S0, V588, 0xd72cf5fc9762284a2b330594820, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, 0xe1a26a78bcb6, 0x437d0029, V591]
Exit stack: []

================================

Function 0:
Public function signature: 0x5930349f
Entry block: 0x7c
Exit block: 0x204
Body: 0x7c, 0x99, 0x154, 0x168, 0x16c, 0x16f, 0x178, 0x184, 0x185, 0x1f5, 0x1f9, 0x204, 0x20d, 0x21e

Function 1:
Public function signature: 0x59f24271
Entry block: 0x9b
Exit block: 0xb0
Body: 0x9b, 0xa3, 0xa7, 0xb0, 0x225

Function 2:
Public function signature: 0x7002ce42
Entry block: 0xc2
Exit block: 0xda
Body: 0xc2, 0xca, 0xce, 0xda, 0x22b, 0x238, 0x239

Function 3:
Public function signature: 0x888b15dd
Entry block: 0xf6
Exit block: 0x302
Body: 0x99, 0xf6, 0xfe, 0x102, 0x21e, 0x253, 0x267, 0x26b, 0x26e, 0x277, 0x283, 0x284, 0x2f3, 0x2f7, 0x302, 0x30b

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x123
Exit block: 0xda
Body: 0xda, 0x123, 0x12b, 0x12f, 0x31b

Function 5:
Public function signature: 0xb4e2f060
Entry block: 0x138
Exit block: 0x35a
Body: 0x99, 0x138, 0x140, 0x144, 0x32a, 0x32d, 0x33e, 0x347, 0x35a, 0x363, 0x3a9, 0x3ad

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

