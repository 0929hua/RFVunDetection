Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x11b]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6fdde03
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x11b
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6fdde03
0x3b: V13 = EQ V11 0x6fdde03
0x3c: V14 = 0x11b
0x3f: JUMPI 0x11b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x1a5]
---
0x40 DUP1
0x41 PUSH4 0x10639ea0
0x46 EQ
0x47 PUSH2 0x1a5
0x4a JUMPI
---
0x41: V15 = 0x10639ea0
0x46: V16 = EQ 0x10639ea0 V11
0x47: V17 = 0x1a5
0x4a: JUMPI 0x1a5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1ce]
---
0x4b DUP1
0x4c PUSH4 0x200d2ed2
0x51 EQ
0x52 PUSH2 0x1ce
0x55 JUMPI
---
0x4c: V18 = 0x200d2ed2
0x51: V19 = EQ 0x200d2ed2 V11
0x52: V20 = 0x1ce
0x55: JUMPI 0x1ce V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x20f]
---
0x56 DUP1
0x57 PUSH4 0x66d38203
0x5c EQ
0x5d PUSH2 0x20f
0x60 JUMPI
---
0x57: V21 = 0x66d38203
0x5c: V22 = EQ 0x66d38203 V11
0x5d: V23 = 0x20f
0x60: JUMPI 0x20f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x232]
---
0x61 DUP1
0x62 PUSH4 0x88d761f2
0x67 EQ
0x68 PUSH2 0x232
0x6b JUMPI
---
0x62: V24 = 0x88d761f2
0x67: V25 = EQ 0x88d761f2 V11
0x68: V26 = 0x232
0x6b: JUMPI 0x232 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x247]
---
0x6c DUP1
0x6d PUSH4 0xa0f52da0
0x72 EQ
0x73 PUSH2 0x247
0x76 JUMPI
---
0x6d: V27 = 0xa0f52da0
0x72: V28 = EQ 0xa0f52da0 V11
0x73: V29 = 0x247
0x76: JUMPI 0x247 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x268]
---
0x77 DUP1
0x78 PUSH4 0xd0e30db0
0x7d EQ
0x7e PUSH2 0x268
0x81 JUMPI
---
0x78: V30 = 0xd0e30db0
0x7d: V31 = EQ 0xd0e30db0 V11
0x7e: V32 = 0x268
0x81: JUMPI 0x268 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0xe7]
---
Predecessors: [0x0, 0x77]
Successors: [0xe8, 0xec]
---
0x82 JUMPDEST
0x83 PUSH1 0x1
0x85 SLOAD
0x86 PUSH1 0x40
0x88 DUP1
0x89 MLOAD
0x8a PUSH32 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xab DUP2
0xac MSTORE
0xad PUSH1 0x1
0xaf PUSH1 0xa0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 SUB
0xb5 SWAP1
0xb6 SWAP3
0xb7 AND
0xb8 PUSH1 0x4
0xba DUP4
0xbb ADD
0xbc DUP2
0xbd SWAP1
0xbe MSTORE
0xbf SWAP1
0xc0 MLOAD
0xc1 SWAP1
0xc2 SWAP2
0xc3 PUSH4 0xf340fa01
0xc8 SWAP2
0xc9 ADDRESS
0xca BALANCE
0xcb SWAP2
0xcc PUSH1 0x24
0xce DUP1
0xcf DUP3
0xd0 ADD
0xd1 SWAP3
0xd2 PUSH1 0x20
0xd4 SWAP3
0xd5 SWAP1
0xd6 SWAP2
0xd7 SWAP1
0xd8 DUP3
0xd9 SWAP1
0xda SUB
0xdb ADD
0xdc DUP2
0xdd DUP6
0xde DUP9
0xdf DUP1
0xe0 EXTCODESIZE
0xe1 ISZERO
0xe2 DUP1
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0x82: JUMPDEST 
0x83: V33 = 0x1
0x85: V34 = S[0x1]
0x86: V35 = 0x40
0x89: V36 = M[0x40]
0x8a: V37 = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xac: M[V36] = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xad: V38 = 0x1
0xaf: V39 = 0xa0
0xb1: V40 = 0x2
0xb3: V41 = EXP 0x2 0xa0
0xb4: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7: V43 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V44 = 0x4
0xbb: V45 = ADD V36 0x4
0xbe: M[V45] = V43
0xc0: V46 = M[0x40]
0xc3: V47 = 0xf340fa01
0xc9: V48 = ADDRESS
0xca: V49 = BALANCE V48
0xcc: V50 = 0x24
0xd0: V51 = ADD V36 0x24
0xd2: V52 = 0x20
0xda: V53 = SUB V36 V46
0xdb: V54 = ADD V53 0x24
0xe0: V55 = EXTCODESIZE V43
0xe1: V56 = ISZERO V55
0xe3: V57 = ISZERO V56
0xe4: V58 = 0xec
0xe7: JUMPI 0xec V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Exit stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0x82]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V59 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]

================================

Block 0xec
[0xec:0xf6]
---
Predecessors: [0x82]
Successors: [0xf7, 0x100]
---
0xec JUMPDEST
0xed POP
0xee GAS
0xef CALL
0xf0 ISZERO
0xf1 DUP1
0xf2 ISZERO
0xf3 PUSH2 0x100
0xf6 JUMPI
---
0xec: JUMPDEST 
0xee: V60 = GAS
0xef: V61 = CALL V60 V43 V49 V46 V54 V46 0x20
0xf0: V62 = ISZERO V61
0xf2: V63 = ISZERO V62
0xf3: V64 = 0x100
0xf6: JUMPI 0x100 V63
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, 0x20, V46, V54, V46, V49, V43, V56]
Stack pops: 7
Stack additions: [V62]
Exit stack: [V11, V43, 0xf340fa01, V49, V51, V62]

================================

Block 0xf7
[0xf7:0xff]
---
Predecessors: [0xec]
Successors: []
---
0xf7 RETURNDATASIZE
0xf8 PUSH1 0x0
0xfa DUP1
0xfb RETURNDATACOPY
0xfc RETURNDATASIZE
0xfd PUSH1 0x0
0xff REVERT
---
0xf7: V65 = RETURNDATASIZE
0xf8: V66 = 0x0
0xfb: RETURNDATACOPY 0x0 0x0 V65
0xfc: V67 = RETURNDATASIZE
0xfd: V68 = 0x0
0xff: REVERT 0x0 V67
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43, 0xf340fa01, V49, V51, V62]

================================

Block 0x100
[0x100:0x112]
---
Predecessors: [0xec]
Successors: [0x113, 0x117]
---
0x100 JUMPDEST
0x101 POP
0x102 POP
0x103 POP
0x104 POP
0x105 POP
0x106 PUSH1 0x40
0x108 MLOAD
0x109 RETURNDATASIZE
0x10a PUSH1 0x20
0x10c DUP2
0x10d LT
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x100: JUMPDEST 
0x106: V69 = 0x40
0x108: V70 = M[0x40]
0x109: V71 = RETURNDATASIZE
0x10a: V72 = 0x20
0x10d: V73 = LT V71 0x20
0x10e: V74 = ISZERO V73
0x10f: V75 = 0x117
0x112: JUMPI 0x117 V74
---
Entry stack: [V11, V43, 0xf340fa01, V49, V51, V62]
Stack pops: 5
Stack additions: [V70, V71]
Exit stack: [V11, V70, V71]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x100]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V76 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V11, V70, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V70, V71]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x100]
Successors: []
---
0x117 JUMPDEST
0x118 POP
0x119 POP
0x11a STOP
---
0x117: JUMPDEST 
0x11a: STOP 
---
Entry stack: [V11, V70, V71]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0xd]
Successors: [0x123, 0x127]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d DUP1
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11b: JUMPDEST 
0x11c: V77 = CALLVALUE
0x11e: V78 = ISZERO V77
0x11f: V79 = 0x127
0x122: JUMPI 0x127 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11b]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V80 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x127
[0x127:0x12f]
---
Predecessors: [0x11b]
Successors: [0x270]
---
0x127 JUMPDEST
0x128 POP
0x129 PUSH2 0x130
0x12c PUSH2 0x270
0x12f JUMP
---
0x127: JUMPDEST 
0x129: V81 = 0x130
0x12c: V82 = 0x270
0x12f: JUMP 0x270
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x130]
Exit stack: [V11, 0x130]

================================

Block 0x130
[0x130:0x151]
---
Predecessors: [0x2f6]
Successors: [0x152]
---
0x130 JUMPDEST
0x131 PUSH1 0x40
0x133 DUP1
0x134 MLOAD
0x135 PUSH1 0x20
0x137 DUP1
0x138 DUP3
0x139 MSTORE
0x13a DUP4
0x13b MLOAD
0x13c DUP2
0x13d DUP4
0x13e ADD
0x13f MSTORE
0x140 DUP4
0x141 MLOAD
0x142 SWAP2
0x143 SWAP3
0x144 DUP4
0x145 SWAP3
0x146 SWAP1
0x147 DUP4
0x148 ADD
0x149 SWAP2
0x14a DUP6
0x14b ADD
0x14c SWAP1
0x14d DUP1
0x14e DUP4
0x14f DUP4
0x150 PUSH1 0x0
---
0x130: JUMPDEST 
0x131: V83 = 0x40
0x134: V84 = M[0x40]
0x135: V85 = 0x20
0x139: M[V84] = 0x20
0x13b: V86 = M[V198]
0x13e: V87 = ADD V84 0x20
0x13f: M[V87] = V86
0x141: V88 = M[V198]
0x148: V89 = ADD V84 0x40
0x14b: V90 = ADD V198 0x20
0x150: V91 = 0x0
---
Entry stack: [V11, 0x130, V198]
Stack pops: 1
Stack additions: [S0, V84, V84, V89, V90, V88, V88, V89, V90, 0x0]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, 0x0]

================================

Block 0x152
[0x152:0x15a]
---
Predecessors: [0x130, 0x15b]
Successors: [0x15b, 0x16a]
---
0x152 JUMPDEST
0x153 DUP4
0x154 DUP2
0x155 LT
0x156 ISZERO
0x157 PUSH2 0x16a
0x15a JUMPI
---
0x152: JUMPDEST 
0x155: V92 = LT S0 V88
0x156: V93 = ISZERO V92
0x157: V94 = 0x16a
0x15a: JUMPI 0x16a V93
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]

================================

Block 0x15b
[0x15b:0x169]
---
Predecessors: [0x152]
Successors: [0x152]
---
0x15b DUP2
0x15c DUP2
0x15d ADD
0x15e MLOAD
0x15f DUP4
0x160 DUP3
0x161 ADD
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 PUSH2 0x152
0x169 JUMP
---
0x15d: V95 = ADD S0 V90
0x15e: V96 = M[V95]
0x161: V97 = ADD S0 V89
0x162: M[V97] = V96
0x163: V98 = 0x20
0x165: V99 = ADD 0x20 S0
0x166: V100 = 0x152
0x169: JUMP 0x152
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 3
Stack additions: [S2, S1, V99]
Exit stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, V99]

================================

Block 0x16a
[0x16a:0x17d]
---
Predecessors: [0x152]
Successors: [0x17e, 0x197]
---
0x16a JUMPDEST
0x16b POP
0x16c POP
0x16d POP
0x16e POP
0x16f SWAP1
0x170 POP
0x171 SWAP1
0x172 DUP2
0x173 ADD
0x174 SWAP1
0x175 PUSH1 0x1f
0x177 AND
0x178 DUP1
0x179 ISZERO
0x17a PUSH2 0x197
0x17d JUMPI
---
0x16a: JUMPDEST 
0x173: V101 = ADD V88 V89
0x175: V102 = 0x1f
0x177: V103 = AND 0x1f V88
0x179: V104 = ISZERO V103
0x17a: V105 = 0x197
0x17d: JUMPI 0x197 V104
---
Entry stack: [V11, 0x130, V198, V84, V84, V89, V90, V88, V88, V89, V90, S0]
Stack pops: 7
Stack additions: [V101, V103]
Exit stack: [V11, 0x130, V198, V84, V84, V101, V103]

================================

Block 0x17e
[0x17e:0x196]
---
Predecessors: [0x16a]
Successors: [0x197]
---
0x17e DUP1
0x17f DUP3
0x180 SUB
0x181 DUP1
0x182 MLOAD
0x183 PUSH1 0x1
0x185 DUP4
0x186 PUSH1 0x20
0x188 SUB
0x189 PUSH2 0x100
0x18c EXP
0x18d SUB
0x18e NOT
0x18f AND
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 SWAP2
0x196 POP
---
0x180: V106 = SUB V101 V103
0x182: V107 = M[V106]
0x183: V108 = 0x1
0x186: V109 = 0x20
0x188: V110 = SUB 0x20 V103
0x189: V111 = 0x100
0x18c: V112 = EXP 0x100 V110
0x18d: V113 = SUB V112 0x1
0x18e: V114 = NOT V113
0x18f: V115 = AND V114 V107
0x191: M[V106] = V115
0x192: V116 = 0x20
0x194: V117 = ADD 0x20 V106
---
Entry stack: [V11, 0x130, V198, V84, V84, V101, V103]
Stack pops: 2
Stack additions: [V117, S0]
Exit stack: [V11, 0x130, V198, V84, V84, V117, V103]

================================

Block 0x197
[0x197:0x1a4]
---
Predecessors: [0x16a, 0x17e]
Successors: []
---
0x197 JUMPDEST
0x198 POP
0x199 SWAP3
0x19a POP
0x19b POP
0x19c POP
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 DUP1
0x1a1 SWAP2
0x1a2 SUB
0x1a3 SWAP1
0x1a4 RETURN
---
0x197: JUMPDEST 
0x19d: V118 = 0x40
0x19f: V119 = M[0x40]
0x1a2: V120 = SUB S1 V119
0x1a4: RETURN V119 V120
---
Entry stack: [V11, 0x130, V198, V84, V84, S1, V103]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x130]

================================

Block 0x1a5
[0x1a5:0x1ac]
---
Predecessors: [0x40]
Successors: [0x1ad, 0x1b1]
---
0x1a5 JUMPDEST
0x1a6 CALLVALUE
0x1a7 DUP1
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V121 = CALLVALUE
0x1a8: V122 = ISZERO V121
0x1a9: V123 = 0x1b1
0x1ac: JUMPI 0x1b1 V122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V121]
Exit stack: [V11, V121]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a5]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V124 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V11, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V121]

================================

Block 0x1b1
[0x1b1:0x1b9]
---
Predecessors: [0x1a5]
Successors: [0x2fe]
---
0x1b1 JUMPDEST
0x1b2 POP
0x1b3 PUSH2 0x1ba
0x1b6 PUSH2 0x2fe
0x1b9 JUMP
---
0x1b1: JUMPDEST 
0x1b3: V125 = 0x1ba
0x1b6: V126 = 0x2fe
0x1b9: JUMP 0x2fe
---
Entry stack: [V11, V121]
Stack pops: 1
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x1ba
[0x1ba:0x1cd]
---
Predecessors: [0x3aa, 0x577, 0x721]
Successors: []
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd DUP1
0x1be MLOAD
0x1bf SWAP2
0x1c0 ISZERO
0x1c1 ISZERO
0x1c2 DUP3
0x1c3 MSTORE
0x1c4 MLOAD
0x1c5 SWAP1
0x1c6 DUP2
0x1c7 SWAP1
0x1c8 SUB
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP1
0x1cd RETURN
---
0x1ba: JUMPDEST 
0x1bb: V127 = 0x40
0x1be: V128 = M[0x40]
0x1c0: V129 = ISZERO {0x0, 0x1}
0x1c1: V130 = ISZERO V129
0x1c3: M[V128] = V130
0x1c4: V131 = M[0x40]
0x1c8: V132 = SUB V128 V131
0x1c9: V133 = 0x20
0x1cb: V134 = ADD 0x20 V132
0x1cd: RETURN V131 V134
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ce
[0x1ce:0x1d5]
---
Predecessors: [0x4b]
Successors: [0x1d6, 0x1da]
---
0x1ce JUMPDEST
0x1cf CALLVALUE
0x1d0 DUP1
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V135 = CALLVALUE
0x1d1: V136 = ISZERO V135
0x1d2: V137 = 0x1da
0x1d5: JUMPI 0x1da V136
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V135]
Exit stack: [V11, V135]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V138 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V11, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V135]

================================

Block 0x1da
[0x1da:0x1e2]
---
Predecessors: [0x1ce]
Successors: [0x3ad]
---
0x1da JUMPDEST
0x1db POP
0x1dc PUSH2 0x1e3
0x1df PUSH2 0x3ad
0x1e2 JUMP
---
0x1da: JUMPDEST 
0x1dc: V139 = 0x1e3
0x1df: V140 = 0x3ad
0x1e2: JUMP 0x3ad
---
Entry stack: [V11, V135]
Stack pops: 1
Stack additions: [0x1e3]
Exit stack: [V11, 0x1e3]

================================

Block 0x1e3
[0x1e3:0x20e]
---
Predecessors: [0x3cb]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x40
0x1e6 DUP1
0x1e7 MLOAD
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 SWAP5
0x1f1 DUP6
0x1f2 AND
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 SWAP3
0x1f6 SWAP1
0x1f7 SWAP4
0x1f8 AND
0x1f9 PUSH1 0x20
0x1fb DUP4
0x1fc ADD
0x1fd MSTORE
0x1fe ISZERO
0x1ff ISZERO
0x200 DUP2
0x201 DUP4
0x202 ADD
0x203 MSTORE
0x204 SWAP1
0x205 MLOAD
0x206 SWAP1
0x207 DUP2
0x208 SWAP1
0x209 SUB
0x20a PUSH1 0x60
0x20c ADD
0x20d SWAP1
0x20e RETURN
---
0x1e3: JUMPDEST 
0x1e4: V141 = 0x40
0x1e7: V142 = M[0x40]
0x1e8: V143 = 0x1
0x1ea: V144 = 0xa0
0x1ec: V145 = 0x2
0x1ee: V146 = EXP 0x2 0xa0
0x1ef: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x1f4: M[V142] = V148
0x1f8: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x1f9: V150 = 0x20
0x1fc: V151 = ADD V142 0x20
0x1fd: M[V151] = V149
0x1fe: V152 = ISZERO V313
0x1ff: V153 = ISZERO V152
0x202: V154 = ADD 0x40 V142
0x203: M[V154] = V153
0x205: V155 = M[0x40]
0x209: V156 = SUB V142 V155
0x20a: V157 = 0x60
0x20c: V158 = ADD 0x60 V156
0x20e: RETURN V155 V158
---
Entry stack: [V11, V308, V309, V313]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x216]
---
Predecessors: [0x56]
Successors: [0x217, 0x21b]
---
0x20f JUMPDEST
0x210 CALLVALUE
0x211 DUP1
0x212 ISZERO
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x20f: JUMPDEST 
0x210: V159 = CALLVALUE
0x212: V160 = ISZERO V159
0x213: V161 = 0x21b
0x216: JUMPI 0x21b V160
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V159]
Exit stack: [V11, V159]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x20f]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V162 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V11, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V159]

================================

Block 0x21b
[0x21b:0x22f]
---
Predecessors: [0x20f]
Successors: [0x402]
---
0x21b JUMPDEST
0x21c POP
0x21d PUSH2 0x230
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 PUSH1 0x4
0x22a CALLDATALOAD
0x22b AND
0x22c PUSH2 0x402
0x22f JUMP
---
0x21b: JUMPDEST 
0x21d: V163 = 0x230
0x220: V164 = 0x1
0x222: V165 = 0xa0
0x224: V166 = 0x2
0x226: V167 = EXP 0x2 0xa0
0x227: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V169 = 0x4
0x22a: V170 = CALLDATALOAD 0x4
0x22b: V171 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V172 = 0x402
0x22f: JUMP 0x402
---
Entry stack: [V11, V159]
Stack pops: 1
Stack additions: [0x230, V171]
Exit stack: [V11, 0x230, V171]

================================

Block 0x230
[0x230:0x231]
---
Predecessors: [0x49f]
Successors: []
---
0x230 JUMPDEST
0x231 STOP
---
0x230: JUMPDEST 
0x231: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x232
[0x232:0x239]
---
Predecessors: [0x61]
Successors: [0x23a, 0x23e]
---
0x232 JUMPDEST
0x233 CALLVALUE
0x234 DUP1
0x235 ISZERO
0x236 PUSH2 0x23e
0x239 JUMPI
---
0x232: JUMPDEST 
0x233: V173 = CALLVALUE
0x235: V174 = ISZERO V173
0x236: V175 = 0x23e
0x239: JUMPI 0x23e V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V173]
Exit stack: [V11, V173]

================================

Block 0x23a
[0x23a:0x23d]
---
Predecessors: [0x232]
Successors: []
---
0x23a PUSH1 0x0
0x23c DUP1
0x23d REVERT
---
0x23a: V176 = 0x0
0x23d: REVERT 0x0 0x0
---
Entry stack: [V11, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V173]

================================

Block 0x23e
[0x23e:0x246]
---
Predecessors: [0x232]
Successors: [0x4ec]
---
0x23e JUMPDEST
0x23f POP
0x240 PUSH2 0x1ba
0x243 PUSH2 0x4ec
0x246 JUMP
---
0x23e: JUMPDEST 
0x240: V177 = 0x1ba
0x243: V178 = 0x4ec
0x246: JUMP 0x4ec
---
Entry stack: [V11, V173]
Stack pops: 1
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x6c]
Successors: [0x24f, 0x253]
---
0x247 JUMPDEST
0x248 CALLVALUE
0x249 DUP1
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x247: JUMPDEST 
0x248: V179 = CALLVALUE
0x24a: V180 = ISZERO V179
0x24b: V181 = 0x253
0x24e: JUMPI 0x253 V180
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V179]
Exit stack: [V11, V179]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x247]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V182 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V11, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V179]

================================

Block 0x253
[0x253:0x267]
---
Predecessors: [0x247]
Successors: [0x5af]
---
0x253 JUMPDEST
0x254 POP
0x255 PUSH2 0x1ba
0x258 PUSH1 0x1
0x25a PUSH1 0xa0
0x25c PUSH1 0x2
0x25e EXP
0x25f SUB
0x260 PUSH1 0x4
0x262 CALLDATALOAD
0x263 AND
0x264 PUSH2 0x5af
0x267 JUMP
---
0x253: JUMPDEST 
0x255: V183 = 0x1ba
0x258: V184 = 0x1
0x25a: V185 = 0xa0
0x25c: V186 = 0x2
0x25e: V187 = EXP 0x2 0xa0
0x25f: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x260: V189 = 0x4
0x262: V190 = CALLDATALOAD 0x4
0x263: V191 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x264: V192 = 0x5af
0x267: JUMP 0x5af
---
Entry stack: [V11, V179]
Stack pops: 1
Stack additions: [0x1ba, V191]
Exit stack: [V11, 0x1ba, V191]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x77]
Successors: [0x726]
---
0x268 JUMPDEST
0x269 PUSH2 0x1ba
0x26c PUSH2 0x726
0x26f JUMP
---
0x268: JUMPDEST 
0x269: V193 = 0x1ba
0x26c: V194 = 0x726
0x26f: JUMP 0x726
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V11, 0x1ba]

================================

Block 0x270
[0x270:0x2af]
---
Predecessors: [0x127]
Successors: [0x2b0, 0x2f6]
---
0x270 JUMPDEST
0x271 PUSH1 0x0
0x273 DUP1
0x274 SLOAD
0x275 PUSH1 0x40
0x277 DUP1
0x278 MLOAD
0x279 PUSH1 0x20
0x27b PUSH1 0x2
0x27d PUSH1 0x1
0x27f DUP6
0x280 AND
0x281 ISZERO
0x282 PUSH2 0x100
0x285 MUL
0x286 PUSH1 0x0
0x288 NOT
0x289 ADD
0x28a SWAP1
0x28b SWAP5
0x28c AND
0x28d SWAP4
0x28e SWAP1
0x28f SWAP4
0x290 DIV
0x291 PUSH1 0x1f
0x293 DUP2
0x294 ADD
0x295 DUP5
0x296 SWAP1
0x297 DIV
0x298 DUP5
0x299 MUL
0x29a DUP3
0x29b ADD
0x29c DUP5
0x29d ADD
0x29e SWAP1
0x29f SWAP3
0x2a0 MSTORE
0x2a1 DUP2
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 SWAP3
0x2a5 SWAP2
0x2a6 DUP4
0x2a7 ADD
0x2a8 DUP3
0x2a9 DUP3
0x2aa DUP1
0x2ab ISZERO
0x2ac PUSH2 0x2f6
0x2af JUMPI
---
0x270: JUMPDEST 
0x271: V195 = 0x0
0x274: V196 = S[0x0]
0x275: V197 = 0x40
0x278: V198 = M[0x40]
0x279: V199 = 0x20
0x27b: V200 = 0x2
0x27d: V201 = 0x1
0x280: V202 = AND V196 0x1
0x281: V203 = ISZERO V202
0x282: V204 = 0x100
0x285: V205 = MUL 0x100 V203
0x286: V206 = 0x0
0x288: V207 = NOT 0x0
0x289: V208 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V205
0x28c: V209 = AND V196 V208
0x290: V210 = DIV V209 0x2
0x291: V211 = 0x1f
0x294: V212 = ADD V210 0x1f
0x297: V213 = DIV V212 0x20
0x299: V214 = MUL 0x20 V213
0x29b: V215 = ADD V198 V214
0x29d: V216 = ADD 0x20 V215
0x2a0: M[0x40] = V216
0x2a3: M[V198] = V210
0x2a7: V217 = ADD V198 0x20
0x2ab: V218 = ISZERO V210
0x2ac: V219 = 0x2f6
0x2af: JUMPI 0x2f6 V218
---
Entry stack: [V11, 0x130]
Stack pops: 0
Stack additions: [V198, 0x0, V210, V217, 0x0, V210]
Exit stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]

================================

Block 0x2b0
[0x2b0:0x2b7]
---
Predecessors: [0x270]
Successors: [0x2b8, 0x2cb]
---
0x2b0 DUP1
0x2b1 PUSH1 0x1f
0x2b3 LT
0x2b4 PUSH2 0x2cb
0x2b7 JUMPI
---
0x2b1: V220 = 0x1f
0x2b3: V221 = LT 0x1f V210
0x2b4: V222 = 0x2cb
0x2b7: JUMPI 0x2cb V221
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]

================================

Block 0x2b8
[0x2b8:0x2ca]
---
Predecessors: [0x2b0]
Successors: [0x2f6]
---
0x2b8 PUSH2 0x100
0x2bb DUP1
0x2bc DUP4
0x2bd SLOAD
0x2be DIV
0x2bf MUL
0x2c0 DUP4
0x2c1 MSTORE
0x2c2 SWAP2
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 SWAP2
0x2c7 PUSH2 0x2f6
0x2ca JUMP
---
0x2b8: V223 = 0x100
0x2bd: V224 = S[0x0]
0x2be: V225 = DIV V224 0x100
0x2bf: V226 = MUL V225 0x100
0x2c1: M[V217] = V226
0x2c3: V227 = 0x20
0x2c5: V228 = ADD 0x20 V217
0x2c7: V229 = 0x2f6
0x2ca: JUMP 0x2f6
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 3
Stack additions: [V228, S1, S0]
Exit stack: [V11, 0x130, V198, 0x0, V210, V228, 0x0, V210]

================================

Block 0x2cb
[0x2cb:0x2d8]
---
Predecessors: [0x2b0]
Successors: [0x2d9]
---
0x2cb JUMPDEST
0x2cc DUP3
0x2cd ADD
0x2ce SWAP2
0x2cf SWAP1
0x2d0 PUSH1 0x0
0x2d2 MSTORE
0x2d3 PUSH1 0x20
0x2d5 PUSH1 0x0
0x2d7 SHA3
0x2d8 SWAP1
---
0x2cb: JUMPDEST 
0x2cd: V230 = ADD V217 V210
0x2d0: V231 = 0x0
0x2d2: M[0x0] = 0x0
0x2d3: V232 = 0x20
0x2d5: V233 = 0x0
0x2d7: V234 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V217, 0x0, V210]
Stack pops: 3
Stack additions: [V230, V234, S2]
Exit stack: [V11, 0x130, V198, 0x0, V210, V230, V234, V217]

================================

Block 0x2d9
[0x2d9:0x2ec]
---
Predecessors: [0x2cb, 0x2d9]
Successors: [0x2d9, 0x2ed]
---
0x2d9 JUMPDEST
0x2da DUP2
0x2db SLOAD
0x2dc DUP2
0x2dd MSTORE
0x2de SWAP1
0x2df PUSH1 0x1
0x2e1 ADD
0x2e2 SWAP1
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 DUP1
0x2e7 DUP4
0x2e8 GT
0x2e9 PUSH2 0x2d9
0x2ec JUMPI
---
0x2d9: JUMPDEST 
0x2db: V235 = S[S1]
0x2dd: M[S0] = V235
0x2df: V236 = 0x1
0x2e1: V237 = ADD 0x1 S1
0x2e3: V238 = 0x20
0x2e5: V239 = ADD 0x20 S0
0x2e8: V240 = GT V230 V239
0x2e9: V241 = 0x2d9
0x2ec: JUMPI 0x2d9 V240
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V230, S1, S0]
Stack pops: 3
Stack additions: [S2, V237, V239]
Exit stack: [V11, 0x130, V198, 0x0, V210, V230, V237, V239]

================================

Block 0x2ed
[0x2ed:0x2f5]
---
Predecessors: [0x2d9]
Successors: [0x2f6]
---
0x2ed DUP3
0x2ee SWAP1
0x2ef SUB
0x2f0 PUSH1 0x1f
0x2f2 AND
0x2f3 DUP3
0x2f4 ADD
0x2f5 SWAP2
---
0x2ef: V242 = SUB V239 V230
0x2f0: V243 = 0x1f
0x2f2: V244 = AND 0x1f V242
0x2f4: V245 = ADD V230 V244
---
Entry stack: [V11, 0x130, V198, 0x0, V210, V230, V237, V239]
Stack pops: 3
Stack additions: [V245, S1, S2]
Exit stack: [V11, 0x130, V198, 0x0, V210, V245, V237, V230]

================================

Block 0x2f6
[0x2f6:0x2fd]
---
Predecessors: [0x270, 0x2b8, 0x2ed]
Successors: [0x130]
---
0x2f6 JUMPDEST
0x2f7 POP
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc DUP2
0x2fd JUMP
---
0x2f6: JUMPDEST 
0x2fd: JUMP 0x130
---
Entry stack: [V11, 0x130, V198, 0x0, V210, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x130, V198]

================================

Block 0x2fe
[0x2fe:0x313]
---
Predecessors: [0x1b1]
Successors: [0x314, 0x389]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x1
0x301 SLOAD
0x302 PUSH1 0x0
0x304 SWAP1
0x305 PUSH1 0x1
0x307 PUSH1 0xa0
0x309 PUSH1 0x2
0x30b EXP
0x30c SUB
0x30d AND
0x30e CALLER
0x30f EQ
0x310 PUSH2 0x389
0x313 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V246 = 0x1
0x301: V247 = S[0x1]
0x302: V248 = 0x0
0x305: V249 = 0x1
0x307: V250 = 0xa0
0x309: V251 = 0x2
0x30b: V252 = EXP 0x2 0xa0
0x30c: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30d: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x30e: V255 = CALLER
0x30f: V256 = EQ V255 V254
0x310: V257 = 0x389
0x313: JUMPI 0x389 V256
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x314
[0x314:0x388]
---
Predecessors: [0x2fe]
Successors: []
---
0x314 PUSH1 0x40
0x316 DUP1
0x317 MLOAD
0x318 PUSH1 0xe5
0x31a PUSH1 0x2
0x31c EXP
0x31d PUSH3 0x461bcd
0x321 MUL
0x322 DUP2
0x323 MSTORE
0x324 PUSH1 0x20
0x326 PUSH1 0x4
0x328 DUP3
0x329 ADD
0x32a MSTORE
0x32b PUSH1 0x24
0x32d DUP2
0x32e ADD
0x32f DUP3
0x330 SWAP1
0x331 MSTORE
0x332 PUSH32 0x4d616e616765722063616e63656c4d6967726174696f6e206661696c6564202d
0x353 PUSH1 0x44
0x355 DUP3
0x356 ADD
0x357 MSTORE
0x358 PUSH32 0x206d73672e73656e646572206d7573742062652063757272656e742062616e6b
0x379 PUSH1 0x64
0x37b DUP3
0x37c ADD
0x37d MSTORE
0x37e SWAP1
0x37f MLOAD
0x380 SWAP1
0x381 DUP2
0x382 SWAP1
0x383 SUB
0x384 PUSH1 0x84
0x386 ADD
0x387 SWAP1
0x388 REVERT
---
0x314: V258 = 0x40
0x317: V259 = M[0x40]
0x318: V260 = 0xe5
0x31a: V261 = 0x2
0x31c: V262 = EXP 0x2 0xe5
0x31d: V263 = 0x461bcd
0x321: V264 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x323: M[V259] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x324: V265 = 0x20
0x326: V266 = 0x4
0x329: V267 = ADD V259 0x4
0x32a: M[V267] = 0x20
0x32b: V268 = 0x24
0x32e: V269 = ADD V259 0x24
0x331: M[V269] = 0x40
0x332: V270 = 0x4d616e616765722063616e63656c4d6967726174696f6e206661696c6564202d
0x353: V271 = 0x44
0x356: V272 = ADD V259 0x44
0x357: M[V272] = 0x4d616e616765722063616e63656c4d6967726174696f6e206661696c6564202d
0x358: V273 = 0x206d73672e73656e646572206d7573742062652063757272656e742062616e6b
0x379: V274 = 0x64
0x37c: V275 = ADD V259 0x64
0x37d: M[V275] = 0x206d73672e73656e646572206d7573742062652063757272656e742062616e6b
0x37f: V276 = M[0x40]
0x383: V277 = SUB V259 V276
0x384: V278 = 0x84
0x386: V279 = ADD 0x84 V277
0x388: REVERT V276 V279
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x389
[0x389:0x3a9]
---
Predecessors: [0x2fe]
Successors: [0x3aa]
---
0x389 JUMPDEST
0x38a POP
0x38b PUSH1 0x2
0x38d DUP1
0x38e SLOAD
0x38f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a4 NOT
0x3a5 AND
0x3a6 SWAP1
0x3a7 SSTORE
0x3a8 PUSH1 0x1
---
0x389: JUMPDEST 
0x38b: V280 = 0x2
0x38e: V281 = S[0x2]
0x38f: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V283 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3a5: V284 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V281
0x3a7: S[0x2] = V284
0x3a8: V285 = 0x1
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x1ba, 0x1]

================================

Block 0x3aa
[0x3aa:0x3ac]
---
Predecessors: [0x389, 0x8dc, 0x8e3]
Successors: [0x1ba]
---
0x3aa JUMPDEST
0x3ab SWAP1
0x3ac JUMP
---
0x3aa: JUMPDEST 
0x3ac: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x3ad
[0x3ad:0x3c6]
---
Predecessors: [0x1da]
Successors: [0x3c7, 0x3cb]
---
0x3ad JUMPDEST
0x3ae PUSH1 0x3
0x3b0 SLOAD
0x3b1 PUSH1 0x0
0x3b3 SWAP1
0x3b4 DUP2
0x3b5 SWAP1
0x3b6 DUP2
0x3b7 SWAP1
0x3b8 PUSH1 0x1
0x3ba PUSH1 0xa0
0x3bc PUSH1 0x2
0x3be EXP
0x3bf SUB
0x3c0 AND
0x3c1 CALLER
0x3c2 EQ
0x3c3 PUSH2 0x3cb
0x3c6 JUMPI
---
0x3ad: JUMPDEST 
0x3ae: V286 = 0x3
0x3b0: V287 = S[0x3]
0x3b1: V288 = 0x0
0x3b8: V289 = 0x1
0x3ba: V290 = 0xa0
0x3bc: V291 = 0x2
0x3be: V292 = EXP 0x2 0xa0
0x3bf: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c0: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x3c1: V295 = CALLER
0x3c2: V296 = EQ V295 V294
0x3c3: V297 = 0x3cb
0x3c6: JUMPI 0x3cb V296
---
Entry stack: [V11, 0x1e3]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x1e3, 0x0, 0x0, 0x0]

================================

Block 0x3c7
[0x3c7:0x3ca]
---
Predecessors: [0x3ad]
Successors: []
---
0x3c7 PUSH1 0x0
0x3c9 DUP1
0x3ca REVERT
---
0x3c7: V298 = 0x0
0x3ca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1e3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e3, 0x0, 0x0, 0x0]

================================

Block 0x3cb
[0x3cb:0x401]
---
Predecessors: [0x3ad]
Successors: [0x1e3]
---
0x3cb JUMPDEST
0x3cc POP
0x3cd POP
0x3ce PUSH1 0x1
0x3d0 SLOAD
0x3d1 PUSH1 0x2
0x3d3 SLOAD
0x3d4 PUSH1 0x1
0x3d6 PUSH1 0xa0
0x3d8 PUSH1 0x2
0x3da EXP
0x3db SUB
0x3dc SWAP2
0x3dd DUP3
0x3de AND
0x3df SWAP4
0x3e0 SWAP2
0x3e1 DUP2
0x3e2 AND
0x3e3 SWAP3
0x3e4 POP
0x3e5 PUSH21 0x10000000000000000000000000000000000000000
0x3fb SWAP1
0x3fc DIV
0x3fd PUSH1 0xff
0x3ff AND
0x400 SWAP1
0x401 JUMP
---
0x3cb: JUMPDEST 
0x3ce: V299 = 0x1
0x3d0: V300 = S[0x1]
0x3d1: V301 = 0x2
0x3d3: V302 = S[0x2]
0x3d4: V303 = 0x1
0x3d6: V304 = 0xa0
0x3d8: V305 = 0x2
0x3da: V306 = EXP 0x2 0xa0
0x3db: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3de: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x3e2: V309 = AND V302 0xffffffffffffffffffffffffffffffffffffffff
0x3e5: V310 = 0x10000000000000000000000000000000000000000
0x3fc: V311 = DIV V302 0x10000000000000000000000000000000000000000
0x3fd: V312 = 0xff
0x3ff: V313 = AND 0xff V311
0x401: JUMP 0x1e3
---
Entry stack: [V11, 0x1e3, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V308, V309, V313]
Exit stack: [V11, V308, V309, V313]

================================

Block 0x402
[0x402:0x429]
---
Predecessors: [0x21b]
Successors: [0x42a, 0x49f]
---
0x402 JUMPDEST
0x403 PUSH1 0x2
0x405 SLOAD
0x406 PUSH21 0x10000000000000000000000000000000000000000
0x41c SWAP1
0x41d DIV
0x41e PUSH1 0xff
0x420 AND
0x421 ISZERO
0x422 ISZERO
0x423 PUSH1 0x1
0x425 EQ
0x426 PUSH2 0x49f
0x429 JUMPI
---
0x402: JUMPDEST 
0x403: V314 = 0x2
0x405: V315 = S[0x2]
0x406: V316 = 0x10000000000000000000000000000000000000000
0x41d: V317 = DIV V315 0x10000000000000000000000000000000000000000
0x41e: V318 = 0xff
0x420: V319 = AND 0xff V317
0x421: V320 = ISZERO V319
0x422: V321 = ISZERO V320
0x423: V322 = 0x1
0x425: V323 = EQ 0x1 V321
0x426: V324 = 0x49f
0x429: JUMPI 0x49f V323
---
Entry stack: [V11, 0x230, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x230, V171]

================================

Block 0x42a
[0x42a:0x49e]
---
Predecessors: [0x402]
Successors: []
---
0x42a PUSH1 0x40
0x42c DUP1
0x42d MLOAD
0x42e PUSH1 0xe5
0x430 PUSH1 0x2
0x432 EXP
0x433 PUSH3 0x461bcd
0x437 MUL
0x438 DUP2
0x439 MSTORE
0x43a PUSH1 0x20
0x43c PUSH1 0x4
0x43e DUP3
0x43f ADD
0x440 MSTORE
0x441 PUSH1 0x2e
0x443 PUSH1 0x24
0x445 DUP3
0x446 ADD
0x447 MSTORE
0x448 PUSH32 0x4d616e61676572207365747570206661696c6564202d2062616e6b20616c7265
0x469 PUSH1 0x44
0x46b DUP3
0x46c ADD
0x46d MSTORE
0x46e PUSH32 0x6164792072656769737465726564000000000000000000000000000000000000
0x48f PUSH1 0x64
0x491 DUP3
0x492 ADD
0x493 MSTORE
0x494 SWAP1
0x495 MLOAD
0x496 SWAP1
0x497 DUP2
0x498 SWAP1
0x499 SUB
0x49a PUSH1 0x84
0x49c ADD
0x49d SWAP1
0x49e REVERT
---
0x42a: V325 = 0x40
0x42d: V326 = M[0x40]
0x42e: V327 = 0xe5
0x430: V328 = 0x2
0x432: V329 = EXP 0x2 0xe5
0x433: V330 = 0x461bcd
0x437: V331 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x439: M[V326] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x43a: V332 = 0x20
0x43c: V333 = 0x4
0x43f: V334 = ADD V326 0x4
0x440: M[V334] = 0x20
0x441: V335 = 0x2e
0x443: V336 = 0x24
0x446: V337 = ADD V326 0x24
0x447: M[V337] = 0x2e
0x448: V338 = 0x4d616e61676572207365747570206661696c6564202d2062616e6b20616c7265
0x469: V339 = 0x44
0x46c: V340 = ADD V326 0x44
0x46d: M[V340] = 0x4d616e61676572207365747570206661696c6564202d2062616e6b20616c7265
0x46e: V341 = 0x6164792072656769737465726564000000000000000000000000000000000000
0x48f: V342 = 0x64
0x492: V343 = ADD V326 0x64
0x493: M[V343] = 0x6164792072656769737465726564000000000000000000000000000000000000
0x495: V344 = M[0x40]
0x499: V345 = SUB V326 V344
0x49a: V346 = 0x84
0x49c: V347 = ADD 0x84 V345
0x49e: REVERT V344 V347
---
Entry stack: [V11, 0x230, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x230, V171]

================================

Block 0x49f
[0x49f:0x4eb]
---
Predecessors: [0x402]
Successors: [0x230]
---
0x49f JUMPDEST
0x4a0 PUSH1 0x1
0x4a2 DUP1
0x4a3 SLOAD
0x4a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b9 NOT
0x4ba AND
0x4bb PUSH1 0x1
0x4bd PUSH1 0xa0
0x4bf PUSH1 0x2
0x4c1 EXP
0x4c2 SUB
0x4c3 SWAP3
0x4c4 SWAP1
0x4c5 SWAP3
0x4c6 AND
0x4c7 SWAP2
0x4c8 SWAP1
0x4c9 SWAP2
0x4ca OR
0x4cb SWAP1
0x4cc SSTORE
0x4cd PUSH1 0x2
0x4cf DUP1
0x4d0 SLOAD
0x4d1 PUSH21 0xff0000000000000000000000000000000000000000
0x4e7 NOT
0x4e8 AND
0x4e9 SWAP1
0x4ea SSTORE
0x4eb JUMP
---
0x49f: JUMPDEST 
0x4a0: V348 = 0x1
0x4a3: V349 = S[0x1]
0x4a4: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b9: V351 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4ba: V352 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V349
0x4bb: V353 = 0x1
0x4bd: V354 = 0xa0
0x4bf: V355 = 0x2
0x4c1: V356 = EXP 0x2 0xa0
0x4c2: V357 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c6: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x4ca: V359 = OR V358 V352
0x4cc: S[0x1] = V359
0x4cd: V360 = 0x2
0x4d0: V361 = S[0x2]
0x4d1: V362 = 0xff0000000000000000000000000000000000000000
0x4e7: V363 = NOT 0xff0000000000000000000000000000000000000000
0x4e8: V364 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V361
0x4ea: S[0x2] = V364
0x4eb: JUMP 0x230
---
Entry stack: [V11, 0x230, V171]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ec
[0x4ec:0x501]
---
Predecessors: [0x23e]
Successors: [0x502, 0x577]
---
0x4ec JUMPDEST
0x4ed PUSH1 0x2
0x4ef SLOAD
0x4f0 PUSH1 0x0
0x4f2 SWAP1
0x4f3 PUSH1 0x1
0x4f5 PUSH1 0xa0
0x4f7 PUSH1 0x2
0x4f9 EXP
0x4fa SUB
0x4fb AND
0x4fc CALLER
0x4fd EQ
0x4fe PUSH2 0x577
0x501 JUMPI
---
0x4ec: JUMPDEST 
0x4ed: V365 = 0x2
0x4ef: V366 = S[0x2]
0x4f0: V367 = 0x0
0x4f3: V368 = 0x1
0x4f5: V369 = 0xa0
0x4f7: V370 = 0x2
0x4f9: V371 = EXP 0x2 0xa0
0x4fa: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fb: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x4fc: V374 = CALLER
0x4fd: V375 = EQ V374 V373
0x4fe: V376 = 0x577
0x501: JUMPI 0x577 V375
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x502
[0x502:0x576]
---
Predecessors: [0x4ec]
Successors: []
---
0x502 PUSH1 0x40
0x504 DUP1
0x505 MLOAD
0x506 PUSH1 0xe5
0x508 PUSH1 0x2
0x50a EXP
0x50b PUSH3 0x461bcd
0x50f MUL
0x510 DUP2
0x511 MSTORE
0x512 PUSH1 0x20
0x514 PUSH1 0x4
0x516 DUP3
0x517 ADD
0x518 MSTORE
0x519 PUSH1 0x3c
0x51b PUSH1 0x24
0x51d DUP3
0x51e ADD
0x51f MSTORE
0x520 PUSH32 0x4d616e616765722066696e6973684d6967726174696f6e206661696c6564202d
0x541 PUSH1 0x44
0x543 DUP3
0x544 ADD
0x545 MSTORE
0x546 PUSH32 0x206d73672e73656e646572206d757374206265206e65772062616e6b00000000
0x567 PUSH1 0x64
0x569 DUP3
0x56a ADD
0x56b MSTORE
0x56c SWAP1
0x56d MLOAD
0x56e SWAP1
0x56f DUP2
0x570 SWAP1
0x571 SUB
0x572 PUSH1 0x84
0x574 ADD
0x575 SWAP1
0x576 REVERT
---
0x502: V377 = 0x40
0x505: V378 = M[0x40]
0x506: V379 = 0xe5
0x508: V380 = 0x2
0x50a: V381 = EXP 0x2 0xe5
0x50b: V382 = 0x461bcd
0x50f: V383 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x511: M[V378] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x512: V384 = 0x20
0x514: V385 = 0x4
0x517: V386 = ADD V378 0x4
0x518: M[V386] = 0x20
0x519: V387 = 0x3c
0x51b: V388 = 0x24
0x51e: V389 = ADD V378 0x24
0x51f: M[V389] = 0x3c
0x520: V390 = 0x4d616e616765722066696e6973684d6967726174696f6e206661696c6564202d
0x541: V391 = 0x44
0x544: V392 = ADD V378 0x44
0x545: M[V392] = 0x4d616e616765722066696e6973684d6967726174696f6e206661696c6564202d
0x546: V393 = 0x206d73672e73656e646572206d757374206265206e65772062616e6b00000000
0x567: V394 = 0x64
0x56a: V395 = ADD V378 0x64
0x56b: M[V395] = 0x206d73672e73656e646572206d757374206265206e65772062616e6b00000000
0x56d: V396 = M[0x40]
0x571: V397 = SUB V378 V396
0x572: V398 = 0x84
0x574: V399 = ADD 0x84 V397
0x576: REVERT V396 V399
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x577
[0x577:0x5ae]
---
Predecessors: [0x4ec]
Successors: [0x1ba]
---
0x577 JUMPDEST
0x578 POP
0x579 PUSH1 0x2
0x57b DUP1
0x57c SLOAD
0x57d PUSH1 0x1
0x57f DUP1
0x580 SLOAD
0x581 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x596 NOT
0x597 SWAP1
0x598 DUP2
0x599 AND
0x59a PUSH1 0x1
0x59c PUSH1 0xa0
0x59e PUSH1 0x2
0x5a0 EXP
0x5a1 SUB
0x5a2 DUP5
0x5a3 AND
0x5a4 OR
0x5a5 DUP3
0x5a6 SSTORE
0x5a7 SWAP1
0x5a8 SWAP2
0x5a9 AND
0x5aa SWAP1
0x5ab SWAP2
0x5ac SSTORE
0x5ad SWAP1
0x5ae JUMP
---
0x577: JUMPDEST 
0x579: V400 = 0x2
0x57c: V401 = S[0x2]
0x57d: V402 = 0x1
0x580: V403 = S[0x1]
0x581: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x596: V405 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x599: V406 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V403
0x59a: V407 = 0x1
0x59c: V408 = 0xa0
0x59e: V409 = 0x2
0x5a0: V410 = EXP 0x2 0xa0
0x5a1: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a3: V412 = AND V401 0xffffffffffffffffffffffffffffffffffffffff
0x5a4: V413 = OR V412 V406
0x5a6: S[0x1] = V413
0x5a9: V414 = AND V401 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x5ac: S[0x2] = V414
0x5ae: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x5af
[0x5af:0x5c4]
---
Predecessors: [0x253]
Successors: [0x5c5, 0x660]
---
0x5af JUMPDEST
0x5b0 PUSH1 0x1
0x5b2 SLOAD
0x5b3 PUSH1 0x0
0x5b5 SWAP1
0x5b6 PUSH1 0x1
0x5b8 PUSH1 0xa0
0x5ba PUSH1 0x2
0x5bc EXP
0x5bd SUB
0x5be AND
0x5bf CALLER
0x5c0 EQ
0x5c1 PUSH2 0x660
0x5c4 JUMPI
---
0x5af: JUMPDEST 
0x5b0: V415 = 0x1
0x5b2: V416 = S[0x1]
0x5b3: V417 = 0x0
0x5b6: V418 = 0x1
0x5b8: V419 = 0xa0
0x5ba: V420 = 0x2
0x5bc: V421 = EXP 0x2 0xa0
0x5bd: V422 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5be: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x5bf: V424 = CALLER
0x5c0: V425 = EQ V424 V423
0x5c1: V426 = 0x660
0x5c4: JUMPI 0x660 V425
---
Entry stack: [V11, 0x1ba, V191]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x5c5
[0x5c5:0x65f]
---
Predecessors: [0x5af]
Successors: []
---
0x5c5 PUSH1 0x40
0x5c7 DUP1
0x5c8 MLOAD
0x5c9 PUSH1 0xe5
0x5cb PUSH1 0x2
0x5cd EXP
0x5ce PUSH3 0x461bcd
0x5d2 MUL
0x5d3 DUP2
0x5d4 MSTORE
0x5d5 PUSH1 0x20
0x5d7 PUSH1 0x4
0x5d9 DUP3
0x5da ADD
0x5db MSTORE
0x5dc PUSH1 0x41
0x5de PUSH1 0x24
0x5e0 DUP3
0x5e1 ADD
0x5e2 MSTORE
0x5e3 PUSH32 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x604 PUSH1 0x44
0x606 DUP3
0x607 ADD
0x608 MSTORE
0x609 PUSH32 0x2d206d73672e73656e646572206d7573742062652063757272656e742062616e
0x62a PUSH1 0x64
0x62c DUP3
0x62d ADD
0x62e MSTORE
0x62f PUSH32 0x6b00000000000000000000000000000000000000000000000000000000000000
0x650 PUSH1 0x84
0x652 DUP3
0x653 ADD
0x654 MSTORE
0x655 SWAP1
0x656 MLOAD
0x657 SWAP1
0x658 DUP2
0x659 SWAP1
0x65a SUB
0x65b PUSH1 0xa4
0x65d ADD
0x65e SWAP1
0x65f REVERT
---
0x5c5: V427 = 0x40
0x5c8: V428 = M[0x40]
0x5c9: V429 = 0xe5
0x5cb: V430 = 0x2
0x5cd: V431 = EXP 0x2 0xe5
0x5ce: V432 = 0x461bcd
0x5d2: V433 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x5d4: M[V428] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5d5: V434 = 0x20
0x5d7: V435 = 0x4
0x5da: V436 = ADD V428 0x4
0x5db: M[V436] = 0x20
0x5dc: V437 = 0x41
0x5de: V438 = 0x24
0x5e1: V439 = ADD V428 0x24
0x5e2: M[V439] = 0x41
0x5e3: V440 = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x604: V441 = 0x44
0x607: V442 = ADD V428 0x44
0x608: M[V442] = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0x609: V443 = 0x2d206d73672e73656e646572206d7573742062652063757272656e742062616e
0x62a: V444 = 0x64
0x62d: V445 = ADD V428 0x64
0x62e: M[V445] = 0x2d206d73672e73656e646572206d7573742062652063757272656e742062616e
0x62f: V446 = 0x6b00000000000000000000000000000000000000000000000000000000000000
0x650: V447 = 0x84
0x653: V448 = ADD V428 0x84
0x654: M[V448] = 0x6b00000000000000000000000000000000000000000000000000000000000000
0x656: V449 = M[0x40]
0x65a: V450 = SUB V428 V449
0x65b: V451 = 0xa4
0x65d: V452 = ADD 0xa4 V450
0x65f: REVERT V449 V452
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x660
[0x660:0x6b2]
---
Predecessors: [0x5af]
Successors: [0x6b3, 0x6b7]
---
0x660 JUMPDEST
0x661 DUP2
0x662 PUSH1 0x1
0x664 PUSH1 0xa0
0x666 PUSH1 0x2
0x668 EXP
0x669 SUB
0x66a AND
0x66b PUSH4 0x839e0fb
0x670 PUSH1 0x40
0x672 MLOAD
0x673 DUP2
0x674 PUSH4 0xffffffff
0x679 AND
0x67a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x698 MUL
0x699 DUP2
0x69a MSTORE
0x69b PUSH1 0x4
0x69d ADD
0x69e PUSH1 0x20
0x6a0 PUSH1 0x40
0x6a2 MLOAD
0x6a3 DUP1
0x6a4 DUP4
0x6a5 SUB
0x6a6 DUP2
0x6a7 PUSH1 0x0
0x6a9 DUP8
0x6aa DUP1
0x6ab EXTCODESIZE
0x6ac ISZERO
0x6ad DUP1
0x6ae ISZERO
0x6af PUSH2 0x6b7
0x6b2 JUMPI
---
0x660: JUMPDEST 
0x662: V453 = 0x1
0x664: V454 = 0xa0
0x666: V455 = 0x2
0x668: V456 = EXP 0x2 0xa0
0x669: V457 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66a: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x66b: V459 = 0x839e0fb
0x670: V460 = 0x40
0x672: V461 = M[0x40]
0x674: V462 = 0xffffffff
0x679: V463 = AND 0xffffffff 0x839e0fb
0x67a: V464 = 0x100000000000000000000000000000000000000000000000000000000
0x698: V465 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x839e0fb
0x69a: M[V461] = 0x839e0fb00000000000000000000000000000000000000000000000000000000
0x69b: V466 = 0x4
0x69d: V467 = ADD 0x4 V461
0x69e: V468 = 0x20
0x6a0: V469 = 0x40
0x6a2: V470 = M[0x40]
0x6a5: V471 = SUB V467 V470
0x6a7: V472 = 0x0
0x6ab: V473 = EXTCODESIZE V458
0x6ac: V474 = ISZERO V473
0x6ae: V475 = ISZERO V474
0x6af: V476 = 0x6b7
0x6b2: JUMPI 0x6b7 V475
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V458, 0x839e0fb, V467, 0x20, V470, V471, V470, 0x0, V458, V474]
Exit stack: [V11, 0x1ba, V191, 0x0, V458, 0x839e0fb, V467, 0x20, V470, V471, V470, 0x0, V458, V474]

================================

Block 0x6b3
[0x6b3:0x6b6]
---
Predecessors: [0x660]
Successors: []
---
0x6b3 PUSH1 0x0
0x6b5 DUP1
0x6b6 REVERT
---
0x6b3: V477 = 0x0
0x6b6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0, V458, 0x839e0fb, V467, 0x20, V470, V471, V470, 0x0, V458, V474]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V458, 0x839e0fb, V467, 0x20, V470, V471, V470, 0x0, V458, V474]

================================

Block 0x6b7
[0x6b7:0x6c1]
---
Predecessors: [0x660]
Successors: [0x6c2, 0x6cb]
---
0x6b7 JUMPDEST
0x6b8 POP
0x6b9 GAS
0x6ba CALL
0x6bb ISZERO
0x6bc DUP1
0x6bd ISZERO
0x6be PUSH2 0x6cb
0x6c1 JUMPI
---
0x6b7: JUMPDEST 
0x6b9: V478 = GAS
0x6ba: V479 = CALL V478 V458 0x0 V470 V471 V470 0x20
0x6bb: V480 = ISZERO V479
0x6bd: V481 = ISZERO V480
0x6be: V482 = 0x6cb
0x6c1: JUMPI 0x6cb V481
---
Entry stack: [V11, 0x1ba, V191, 0x0, V458, 0x839e0fb, V467, 0x20, V470, V471, V470, 0x0, V458, V474]
Stack pops: 7
Stack additions: [V480]
Exit stack: [V11, 0x1ba, V191, 0x0, V458, 0x839e0fb, V467, V480]

================================

Block 0x6c2
[0x6c2:0x6ca]
---
Predecessors: [0x6b7]
Successors: []
---
0x6c2 RETURNDATASIZE
0x6c3 PUSH1 0x0
0x6c5 DUP1
0x6c6 RETURNDATACOPY
0x6c7 RETURNDATASIZE
0x6c8 PUSH1 0x0
0x6ca REVERT
---
0x6c2: V483 = RETURNDATASIZE
0x6c3: V484 = 0x0
0x6c6: RETURNDATACOPY 0x0 0x0 V483
0x6c7: V485 = RETURNDATASIZE
0x6c8: V486 = 0x0
0x6ca: REVERT 0x0 V485
---
Entry stack: [V11, 0x1ba, V191, 0x0, V458, 0x839e0fb, V467, V480]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V458, 0x839e0fb, V467, V480]

================================

Block 0x6cb
[0x6cb:0x6dc]
---
Predecessors: [0x6b7]
Successors: [0x6dd, 0x6e1]
---
0x6cb JUMPDEST
0x6cc POP
0x6cd POP
0x6ce POP
0x6cf POP
0x6d0 PUSH1 0x40
0x6d2 MLOAD
0x6d3 RETURNDATASIZE
0x6d4 PUSH1 0x20
0x6d6 DUP2
0x6d7 LT
0x6d8 ISZERO
0x6d9 PUSH2 0x6e1
0x6dc JUMPI
---
0x6cb: JUMPDEST 
0x6d0: V487 = 0x40
0x6d2: V488 = M[0x40]
0x6d3: V489 = RETURNDATASIZE
0x6d4: V490 = 0x20
0x6d7: V491 = LT V489 0x20
0x6d8: V492 = ISZERO V491
0x6d9: V493 = 0x6e1
0x6dc: JUMPI 0x6e1 V492
---
Entry stack: [V11, 0x1ba, V191, 0x0, V458, 0x839e0fb, V467, V480]
Stack pops: 4
Stack additions: [V488, V489]
Exit stack: [V11, 0x1ba, V191, 0x0, V488, V489]

================================

Block 0x6dd
[0x6dd:0x6e0]
---
Predecessors: [0x6cb]
Successors: []
---
0x6dd PUSH1 0x0
0x6df DUP1
0x6e0 REVERT
---
0x6dd: V494 = 0x0
0x6e0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0, V488, V489]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0, V488, V489]

================================

Block 0x6e1
[0x6e1:0x6ed]
---
Predecessors: [0x6cb]
Successors: [0x6ee, 0x71d]
---
0x6e1 JUMPDEST
0x6e2 POP
0x6e3 MLOAD
0x6e4 ISZERO
0x6e5 ISZERO
0x6e6 PUSH1 0x1
0x6e8 EQ
0x6e9 ISZERO
0x6ea PUSH2 0x71d
0x6ed JUMPI
---
0x6e1: JUMPDEST 
0x6e3: V495 = M[V488]
0x6e4: V496 = ISZERO V495
0x6e5: V497 = ISZERO V496
0x6e6: V498 = 0x1
0x6e8: V499 = EQ 0x1 V497
0x6e9: V500 = ISZERO V499
0x6ea: V501 = 0x71d
0x6ed: JUMPI 0x71d V500
---
Entry stack: [V11, 0x1ba, V191, 0x0, V488, V489]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x6ee
[0x6ee:0x71c]
---
Predecessors: [0x6e1]
Successors: [0x721]
---
0x6ee POP
0x6ef PUSH1 0x2
0x6f1 DUP1
0x6f2 SLOAD
0x6f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x708 NOT
0x709 AND
0x70a PUSH1 0x1
0x70c PUSH1 0xa0
0x70e PUSH1 0x2
0x710 EXP
0x711 SUB
0x712 DUP4
0x713 AND
0x714 OR
0x715 SWAP1
0x716 SSTORE
0x717 PUSH1 0x1
0x719 PUSH2 0x721
0x71c JUMP
---
0x6ef: V502 = 0x2
0x6f2: V503 = S[0x2]
0x6f3: V504 = 0xffffffffffffffffffffffffffffffffffffffff
0x708: V505 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x709: V506 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V503
0x70a: V507 = 0x1
0x70c: V508 = 0xa0
0x70e: V509 = 0x2
0x710: V510 = EXP 0x2 0xa0
0x711: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x713: V512 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x714: V513 = OR V512 V506
0x716: S[0x2] = V513
0x717: V514 = 0x1
0x719: V515 = 0x721
0x71c: JUMP 0x721
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V11, 0x1ba, V191, 0x1]

================================

Block 0x71d
[0x71d:0x720]
---
Predecessors: [0x6e1]
Successors: [0x721]
---
0x71d JUMPDEST
0x71e POP
0x71f PUSH1 0x0
---
0x71d: JUMPDEST 
0x71f: V516 = 0x0
---
Entry stack: [V11, 0x1ba, V191, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, V191, 0x0]

================================

Block 0x721
[0x721:0x725]
---
Predecessors: [0x6ee, 0x71d]
Successors: [0x1ba]
---
0x721 JUMPDEST
0x722 SWAP2
0x723 SWAP1
0x724 POP
0x725 JUMP
---
0x721: JUMPDEST 
0x725: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, V191, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x726
[0x726:0x72f]
---
Predecessors: [0x268]
Successors: [0x730, 0x7a5]
---
0x726 JUMPDEST
0x727 PUSH1 0x0
0x729 CALLVALUE
0x72a DUP2
0x72b LT
0x72c PUSH2 0x7a5
0x72f JUMPI
---
0x726: JUMPDEST 
0x727: V517 = 0x0
0x729: V518 = CALLVALUE
0x72b: V519 = LT 0x0 V518
0x72c: V520 = 0x7a5
0x72f: JUMPI 0x7a5 V519
---
Entry stack: [V11, 0x1ba]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x730
[0x730:0x7a4]
---
Predecessors: [0x726]
Successors: []
---
0x730 PUSH1 0x40
0x732 DUP1
0x733 MLOAD
0x734 PUSH1 0xe5
0x736 PUSH1 0x2
0x738 EXP
0x739 PUSH3 0x461bcd
0x73d MUL
0x73e DUP2
0x73f MSTORE
0x740 PUSH1 0x20
0x742 PUSH1 0x4
0x744 DUP3
0x745 ADD
0x746 MSTORE
0x747 PUSH1 0x32
0x749 PUSH1 0x24
0x74b DUP3
0x74c ADD
0x74d MSTORE
0x74e PUSH32 0x4d616e61676572204465706f736974206661696c6564202d207a65726f206465
0x76f PUSH1 0x44
0x771 DUP3
0x772 ADD
0x773 MSTORE
0x774 PUSH32 0x706f73697473206e6f7420616c6c6f7765640000000000000000000000000000
0x795 PUSH1 0x64
0x797 DUP3
0x798 ADD
0x799 MSTORE
0x79a SWAP1
0x79b MLOAD
0x79c SWAP1
0x79d DUP2
0x79e SWAP1
0x79f SUB
0x7a0 PUSH1 0x84
0x7a2 ADD
0x7a3 SWAP1
0x7a4 REVERT
---
0x730: V521 = 0x40
0x733: V522 = M[0x40]
0x734: V523 = 0xe5
0x736: V524 = 0x2
0x738: V525 = EXP 0x2 0xe5
0x739: V526 = 0x461bcd
0x73d: V527 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x73f: M[V522] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x740: V528 = 0x20
0x742: V529 = 0x4
0x745: V530 = ADD V522 0x4
0x746: M[V530] = 0x20
0x747: V531 = 0x32
0x749: V532 = 0x24
0x74c: V533 = ADD V522 0x24
0x74d: M[V533] = 0x32
0x74e: V534 = 0x4d616e61676572204465706f736974206661696c6564202d207a65726f206465
0x76f: V535 = 0x44
0x772: V536 = ADD V522 0x44
0x773: M[V536] = 0x4d616e61676572204465706f736974206661696c6564202d207a65726f206465
0x774: V537 = 0x706f73697473206e6f7420616c6c6f7765640000000000000000000000000000
0x795: V538 = 0x64
0x798: V539 = ADD V522 0x64
0x799: M[V539] = 0x706f73697473206e6f7420616c6c6f7765640000000000000000000000000000
0x79b: V540 = M[0x40]
0x79f: V541 = SUB V522 V540
0x7a0: V542 = 0x84
0x7a2: V543 = ADD 0x84 V541
0x7a4: REVERT V540 V543
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x7a5
[0x7a5:0x7c8]
---
Predecessors: [0x726]
Successors: [0x7c9, 0x83e]
---
0x7a5 JUMPDEST
0x7a6 PUSH1 0x2
0x7a8 SLOAD
0x7a9 PUSH21 0x10000000000000000000000000000000000000000
0x7bf SWAP1
0x7c0 DIV
0x7c1 PUSH1 0xff
0x7c3 AND
0x7c4 ISZERO
0x7c5 PUSH2 0x83e
0x7c8 JUMPI
---
0x7a5: JUMPDEST 
0x7a6: V544 = 0x2
0x7a8: V545 = S[0x2]
0x7a9: V546 = 0x10000000000000000000000000000000000000000
0x7c0: V547 = DIV V545 0x10000000000000000000000000000000000000000
0x7c1: V548 = 0xff
0x7c3: V549 = AND 0xff V547
0x7c4: V550 = ISZERO V549
0x7c5: V551 = 0x83e
0x7c8: JUMPI 0x83e V550
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x7c9
[0x7c9:0x83d]
---
Predecessors: [0x7a5]
Successors: []
---
0x7c9 PUSH1 0x40
0x7cb DUP1
0x7cc MLOAD
0x7cd PUSH1 0xe5
0x7cf PUSH1 0x2
0x7d1 EXP
0x7d2 PUSH3 0x461bcd
0x7d6 MUL
0x7d7 DUP2
0x7d8 MSTORE
0x7d9 PUSH1 0x20
0x7db PUSH1 0x4
0x7dd DUP3
0x7de ADD
0x7df MSTORE
0x7e0 PUSH1 0x2b
0x7e2 PUSH1 0x24
0x7e4 DUP3
0x7e5 ADD
0x7e6 MSTORE
0x7e7 PUSH32 0x4d616e61676572204465706f736974206661696c6564202d206e6f2072656769
0x808 PUSH1 0x44
0x80a DUP3
0x80b ADD
0x80c MSTORE
0x80d PUSH32 0x7374657265642062616e6b000000000000000000000000000000000000000000
0x82e PUSH1 0x64
0x830 DUP3
0x831 ADD
0x832 MSTORE
0x833 SWAP1
0x834 MLOAD
0x835 SWAP1
0x836 DUP2
0x837 SWAP1
0x838 SUB
0x839 PUSH1 0x84
0x83b ADD
0x83c SWAP1
0x83d REVERT
---
0x7c9: V552 = 0x40
0x7cc: V553 = M[0x40]
0x7cd: V554 = 0xe5
0x7cf: V555 = 0x2
0x7d1: V556 = EXP 0x2 0xe5
0x7d2: V557 = 0x461bcd
0x7d6: V558 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x7d8: M[V553] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7d9: V559 = 0x20
0x7db: V560 = 0x4
0x7de: V561 = ADD V553 0x4
0x7df: M[V561] = 0x20
0x7e0: V562 = 0x2b
0x7e2: V563 = 0x24
0x7e5: V564 = ADD V553 0x24
0x7e6: M[V564] = 0x2b
0x7e7: V565 = 0x4d616e61676572204465706f736974206661696c6564202d206e6f2072656769
0x808: V566 = 0x44
0x80b: V567 = ADD V553 0x44
0x80c: M[V567] = 0x4d616e61676572204465706f736974206661696c6564202d206e6f2072656769
0x80d: V568 = 0x7374657265642062616e6b000000000000000000000000000000000000000000
0x82e: V569 = 0x64
0x831: V570 = ADD V553 0x64
0x832: M[V570] = 0x7374657265642062616e6b000000000000000000000000000000000000000000
0x834: V571 = M[0x40]
0x838: V572 = SUB V553 V571
0x839: V573 = 0x84
0x83b: V574 = ADD 0x84 V572
0x83d: REVERT V571 V574
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x83e
[0x83e:0x89f]
---
Predecessors: [0x7a5]
Successors: [0x8a0, 0x8a4]
---
0x83e JUMPDEST
0x83f PUSH1 0x1
0x841 SLOAD
0x842 PUSH1 0x40
0x844 DUP1
0x845 MLOAD
0x846 PUSH32 0xf340fa0100000000000000000000000000000000000000000000000000000000
0x867 DUP2
0x868 MSTORE
0x869 CALLER
0x86a PUSH1 0x4
0x86c DUP3
0x86d ADD
0x86e MSTORE
0x86f SWAP1
0x870 MLOAD
0x871 PUSH1 0x1
0x873 PUSH1 0xa0
0x875 PUSH1 0x2
0x877 EXP
0x878 SUB
0x879 SWAP1
0x87a SWAP3
0x87b AND
0x87c SWAP2
0x87d PUSH4 0xf340fa01
0x882 SWAP2
0x883 CALLVALUE
0x884 SWAP2
0x885 PUSH1 0x24
0x887 DUP1
0x888 DUP4
0x889 ADD
0x88a SWAP3
0x88b PUSH1 0x20
0x88d SWAP3
0x88e SWAP2
0x88f SWAP1
0x890 DUP3
0x891 SWAP1
0x892 SUB
0x893 ADD
0x894 DUP2
0x895 DUP6
0x896 DUP9
0x897 DUP1
0x898 EXTCODESIZE
0x899 ISZERO
0x89a DUP1
0x89b ISZERO
0x89c PUSH2 0x8a4
0x89f JUMPI
---
0x83e: JUMPDEST 
0x83f: V575 = 0x1
0x841: V576 = S[0x1]
0x842: V577 = 0x40
0x845: V578 = M[0x40]
0x846: V579 = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0x868: M[V578] = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0x869: V580 = CALLER
0x86a: V581 = 0x4
0x86d: V582 = ADD V578 0x4
0x86e: M[V582] = V580
0x870: V583 = M[0x40]
0x871: V584 = 0x1
0x873: V585 = 0xa0
0x875: V586 = 0x2
0x877: V587 = EXP 0x2 0xa0
0x878: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87b: V589 = AND V576 0xffffffffffffffffffffffffffffffffffffffff
0x87d: V590 = 0xf340fa01
0x883: V591 = CALLVALUE
0x885: V592 = 0x24
0x889: V593 = ADD V578 0x24
0x88b: V594 = 0x20
0x892: V595 = SUB V578 V583
0x893: V596 = ADD V595 0x24
0x898: V597 = EXTCODESIZE V589
0x899: V598 = ISZERO V597
0x89b: V599 = ISZERO V598
0x89c: V600 = 0x8a4
0x89f: JUMPI 0x8a4 V599
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 0
Stack additions: [V589, 0xf340fa01, V591, V593, 0x20, V583, V596, V583, V591, V589, V598]
Exit stack: [V11, 0x1ba, 0x0, V589, 0xf340fa01, V591, V593, 0x20, V583, V596, V583, V591, V589, V598]

================================

Block 0x8a0
[0x8a0:0x8a3]
---
Predecessors: [0x83e]
Successors: []
---
0x8a0 PUSH1 0x0
0x8a2 DUP1
0x8a3 REVERT
---
0x8a0: V601 = 0x0
0x8a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, 0x0, V589, 0xf340fa01, V591, V593, 0x20, V583, V596, V583, V591, V589, V598]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, V589, 0xf340fa01, V591, V593, 0x20, V583, V596, V583, V591, V589, V598]

================================

Block 0x8a4
[0x8a4:0x8ae]
---
Predecessors: [0x83e]
Successors: [0x8af, 0x8b8]
---
0x8a4 JUMPDEST
0x8a5 POP
0x8a6 GAS
0x8a7 CALL
0x8a8 ISZERO
0x8a9 DUP1
0x8aa ISZERO
0x8ab PUSH2 0x8b8
0x8ae JUMPI
---
0x8a4: JUMPDEST 
0x8a6: V602 = GAS
0x8a7: V603 = CALL V602 V589 V591 V583 V596 V583 0x20
0x8a8: V604 = ISZERO V603
0x8aa: V605 = ISZERO V604
0x8ab: V606 = 0x8b8
0x8ae: JUMPI 0x8b8 V605
---
Entry stack: [V11, 0x1ba, 0x0, V589, 0xf340fa01, V591, V593, 0x20, V583, V596, V583, V591, V589, V598]
Stack pops: 7
Stack additions: [V604]
Exit stack: [V11, 0x1ba, 0x0, V589, 0xf340fa01, V591, V593, V604]

================================

Block 0x8af
[0x8af:0x8b7]
---
Predecessors: [0x8a4]
Successors: []
---
0x8af RETURNDATASIZE
0x8b0 PUSH1 0x0
0x8b2 DUP1
0x8b3 RETURNDATACOPY
0x8b4 RETURNDATASIZE
0x8b5 PUSH1 0x0
0x8b7 REVERT
---
0x8af: V607 = RETURNDATASIZE
0x8b0: V608 = 0x0
0x8b3: RETURNDATACOPY 0x0 0x0 V607
0x8b4: V609 = RETURNDATASIZE
0x8b5: V610 = 0x0
0x8b7: REVERT 0x0 V609
---
Entry stack: [V11, 0x1ba, 0x0, V589, 0xf340fa01, V591, V593, V604]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, V589, 0xf340fa01, V591, V593, V604]

================================

Block 0x8b8
[0x8b8:0x8ca]
---
Predecessors: [0x8a4]
Successors: [0x8cb, 0x8cf]
---
0x8b8 JUMPDEST
0x8b9 POP
0x8ba POP
0x8bb POP
0x8bc POP
0x8bd POP
0x8be PUSH1 0x40
0x8c0 MLOAD
0x8c1 RETURNDATASIZE
0x8c2 PUSH1 0x20
0x8c4 DUP2
0x8c5 LT
0x8c6 ISZERO
0x8c7 PUSH2 0x8cf
0x8ca JUMPI
---
0x8b8: JUMPDEST 
0x8be: V611 = 0x40
0x8c0: V612 = M[0x40]
0x8c1: V613 = RETURNDATASIZE
0x8c2: V614 = 0x20
0x8c5: V615 = LT V613 0x20
0x8c6: V616 = ISZERO V615
0x8c7: V617 = 0x8cf
0x8ca: JUMPI 0x8cf V616
---
Entry stack: [V11, 0x1ba, 0x0, V589, 0xf340fa01, V591, V593, V604]
Stack pops: 5
Stack additions: [V612, V613]
Exit stack: [V11, 0x1ba, 0x0, V612, V613]

================================

Block 0x8cb
[0x8cb:0x8ce]
---
Predecessors: [0x8b8]
Successors: []
---
0x8cb PUSH1 0x0
0x8cd DUP1
0x8ce REVERT
---
0x8cb: V618 = 0x0
0x8ce: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ba, 0x0, V612, V613]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0, V612, V613]

================================

Block 0x8cf
[0x8cf:0x8db]
---
Predecessors: [0x8b8]
Successors: [0x8dc, 0x8e3]
---
0x8cf JUMPDEST
0x8d0 POP
0x8d1 MLOAD
0x8d2 ISZERO
0x8d3 ISZERO
0x8d4 PUSH1 0x1
0x8d6 EQ
0x8d7 ISZERO
0x8d8 PUSH2 0x8e3
0x8db JUMPI
---
0x8cf: JUMPDEST 
0x8d1: V619 = M[V612]
0x8d2: V620 = ISZERO V619
0x8d3: V621 = ISZERO V620
0x8d4: V622 = 0x1
0x8d6: V623 = EQ 0x1 V621
0x8d7: V624 = ISZERO V623
0x8d8: V625 = 0x8e3
0x8db: JUMPI 0x8e3 V624
---
Entry stack: [V11, 0x1ba, 0x0, V612, V613]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x8dc
[0x8dc:0x8e2]
---
Predecessors: [0x8cf]
Successors: [0x3aa]
---
0x8dc POP
0x8dd PUSH1 0x1
0x8df PUSH2 0x3aa
0x8e2 JUMP
---
0x8dd: V626 = 0x1
0x8df: V627 = 0x3aa
0x8e2: JUMP 0x3aa
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x1ba, 0x1]

================================

Block 0x8e3
[0x8e3:0x8ea]
---
Predecessors: [0x8cf]
Successors: [0x3aa]
---
0x8e3 JUMPDEST
0x8e4 POP
0x8e5 PUSH1 0x0
0x8e7 PUSH2 0x3aa
0x8ea JUMP
---
0x8e3: JUMPDEST 
0x8e5: V628 = 0x0
0x8e7: V629 = 0x3aa
0x8ea: JUMP 0x3aa
---
Entry stack: [V11, 0x1ba, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1ba, 0x0]

================================

Block 0x8eb
[0x8eb:0x921]
---
Predecessors: []
Successors: []
---
0x8eb STOP
0x8ec LOG1
0x8ed PUSH6 0x627a7a723058
0x8f4 SHA3
0x8f5 MISSING 0xd
0x8f6 CREATE2
0x8f7 PUSH7 0xcc108b39946773
0x8ff MISSING 0x5f
0x900 SLT
0x901 DIV
0x902 MISSING 0xf8
0x903 EQ
0x904 SAR
0x905 MISSING 0xf7
0x906 SWAP16
0x907 DUP7
0x908 MISSING 0xb3
0x909 GAS
0x90a SHR
0x90b SUB
0x90c ADDMOD
0x90d MISSING 0xd5
0x90e MISSING 0xed
0x90f PUSH18 0x4b525610f70029
---
0x8eb: STOP 
0x8ec: LOG S0 S1 S2
0x8ed: V630 = 0x627a7a723058
0x8f4: V631 = SHA3 0x627a7a723058 S3
0x8f5: MISSING 0xd
0x8f6: V632 = CREATE2 S0 S1 S2 S3
0x8f7: V633 = 0xcc108b39946773
0x8ff: MISSING 0x5f
0x900: V634 = SLT S0 S1
0x901: V635 = DIV V634 S2
0x902: MISSING 0xf8
0x903: V636 = EQ S0 S1
0x904: V637 = SAR V636 S2
0x905: MISSING 0xf7
0x908: MISSING 0xb3
0x909: V638 = GAS
0x90a: V639 = SHR V638 S0
0x90b: V640 = SUB V639 S1
0x90c: V641 = ADDMOD V640 S2 S3
0x90d: MISSING 0xd5
0x90e: MISSING 0xed
0x90f: V642 = 0x4b525610f70029
---
Entry stack: []
Stack pops: 0
Stack additions: [V631, 0xcc108b39946773, V632, V635, V637, S6, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, V641, 0x4b525610f70029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x11b
Exit block: 0x197
Body: 0x11b, 0x123, 0x127, 0x130, 0x152, 0x15b, 0x16a, 0x17e, 0x197, 0x270, 0x2b0, 0x2b8, 0x2cb, 0x2d9, 0x2ed, 0x2f6

Function 1:
Public function signature: 0x10639ea0
Entry block: 0x1a5
Exit block: 0x1ba
Body: 0x1a5, 0x1ad, 0x1b1, 0x1ba, 0x2fe, 0x314, 0x389, 0x3aa

Function 2:
Public function signature: 0x200d2ed2
Entry block: 0x1ce
Exit block: 0x1e3
Body: 0x1ce, 0x1d6, 0x1da, 0x1e3, 0x3ad, 0x3c7, 0x3cb

Function 3:
Public function signature: 0x66d38203
Entry block: 0x20f
Exit block: 0x230
Body: 0x20f, 0x217, 0x21b, 0x230, 0x402, 0x42a, 0x49f

Function 4:
Public function signature: 0x88d761f2
Entry block: 0x232
Exit block: 0x1ba
Body: 0x1ba, 0x232, 0x23a, 0x23e, 0x4ec, 0x502, 0x577

Function 5:
Public function signature: 0xa0f52da0
Entry block: 0x247
Exit block: 0x1ba
Body: 0x1ba, 0x247, 0x24f, 0x253, 0x5af, 0x5c5, 0x660, 0x6b3, 0x6b7, 0x6c2, 0x6cb, 0x6dd, 0x6e1, 0x6ee, 0x71d, 0x721

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x268
Exit block: 0x1ba
Body: 0x1ba, 0x268, 0x3aa, 0x726, 0x730, 0x7a5, 0x7c9, 0x83e, 0x8a0, 0x8a4, 0x8af, 0x8b8, 0x8cb, 0x8cf, 0x8dc, 0x8e3

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x117
Body: 0x82, 0xe8, 0xec, 0xf7, 0x100, 0x113, 0x117

