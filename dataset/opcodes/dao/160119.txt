Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x53]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x53
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x53
0xc: JUMPI 0x53 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xd2]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x106b96ce
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xd2
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x106b96ce
0x22: V15 = EQ V13 0x106b96ce
0x23: V16 = 0xd2
0x26: JUMPI 0xd2 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xf1]
---
0x27 DUP1
0x28 PUSH4 0x41c0e1b5
0x2d EQ
0x2e PUSH2 0xf1
0x31 JUMPI
---
0x28: V17 = 0x41c0e1b5
0x2d: V18 = EQ 0x41c0e1b5 V13
0x2e: V19 = 0xf1
0x31: JUMPI 0xf1 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x104]
---
0x32 DUP1
0x33 PUSH4 0x8da5cb5b
0x38 EQ
0x39 PUSH2 0x104
0x3c JUMPI
---
0x33: V20 = 0x8da5cb5b
0x38: V21 = EQ 0x8da5cb5b V13
0x39: V22 = 0x104
0x3c: JUMPI 0x104 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x133]
---
0x3d DUP1
0x3e PUSH4 0x93fc9fbe
0x43 EQ
0x44 PUSH2 0x133
0x47 JUMPI
---
0x3e: V23 = 0x93fc9fbe
0x43: V24 = EQ 0x93fc9fbe V13
0x44: V25 = 0x133
0x47: JUMPI 0x133 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x146]
---
0x48 DUP1
0x49 PUSH4 0xde82efb4
0x4e EQ
0x4f PUSH2 0x146
0x52 JUMPI
---
0x49: V26 = 0xde82efb4
0x4e: V27 = EQ 0xde82efb4 V13
0x4f: V28 = 0x146
0x52: JUMPI 0x146 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5e]
---
Predecessors: [0x0, 0x48]
Successors: [0x5f, 0xd0]
---
0x53 JUMPDEST
0x54 PUSH3 0x3d090
0x58 GAS
0x59 GT
0x5a ISZERO
0x5b PUSH2 0xd0
0x5e JUMPI
---
0x53: JUMPDEST 
0x54: V29 = 0x3d090
0x58: V30 = GAS
0x59: V31 = GT V30 0x3d090
0x5a: V32 = ISZERO V31
0x5b: V33 = 0xd0
0x5e: JUMPI 0xd0 V32
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x5f
[0x5f:0xcf]
---
Predecessors: [0x53]
Successors: [0xd0]
---
0x5f PUSH1 0x0
0x61 SLOAD
0x62 PUSH1 0x1
0x64 PUSH1 0xa0
0x66 PUSH1 0x2
0x68 EXP
0x69 SUB
0x6a AND
0x6b PUSH3 0x3d090
0x6f PUSH1 0x40
0x71 MLOAD
0x72 PUSH32 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x5
0x97 ADD
0x98 PUSH1 0x40
0x9a MLOAD
0x9b DUP1
0x9c SWAP2
0x9d SUB
0x9e SWAP1
0x9f SHA3
0xa0 PUSH1 0xe0
0xa2 PUSH1 0x2
0xa4 EXP
0xa5 SWAP1
0xa6 DIV
0xa7 SWAP1
0xa8 PUSH1 0x40
0xaa MLOAD
0xab DUP3
0xac PUSH4 0xffffffff
0xb1 AND
0xb2 PUSH1 0xe0
0xb4 PUSH1 0x2
0xb6 EXP
0xb7 MUL
0xb8 DUP2
0xb9 MSTORE
0xba PUSH1 0x4
0xbc ADD
0xbd PUSH1 0x0
0xbf PUSH1 0x40
0xc1 MLOAD
0xc2 DUP1
0xc3 DUP4
0xc4 SUB
0xc5 DUP2
0xc6 PUSH1 0x0
0xc8 DUP9
0xc9 DUP8
0xca CALL
0xcb POP
0xcc POP
0xcd POP
0xce POP
0xcf POP
---
0x5f: V34 = 0x0
0x61: V35 = S[0x0]
0x62: V36 = 0x1
0x64: V37 = 0xa0
0x66: V38 = 0x2
0x68: V39 = EXP 0x2 0xa0
0x69: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x6b: V42 = 0x3d090
0x6f: V43 = 0x40
0x71: V44 = M[0x40]
0x72: V45 = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x94: M[V44] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x95: V46 = 0x5
0x97: V47 = ADD 0x5 V44
0x98: V48 = 0x40
0x9a: V49 = M[0x40]
0x9d: V50 = SUB V47 V49
0x9f: V51 = SHA3 V49 V50
0xa0: V52 = 0xe0
0xa2: V53 = 0x2
0xa4: V54 = EXP 0x2 0xe0
0xa6: V55 = DIV V51 0x100000000000000000000000000000000000000000000000000000000
0xa8: V56 = 0x40
0xaa: V57 = M[0x40]
0xac: V58 = 0xffffffff
0xb1: V59 = AND 0xffffffff V55
0xb2: V60 = 0xe0
0xb4: V61 = 0x2
0xb6: V62 = EXP 0x2 0xe0
0xb7: V63 = MUL 0x100000000000000000000000000000000000000000000000000000000 V59
0xb9: M[V57] = V63
0xba: V64 = 0x4
0xbc: V65 = ADD 0x4 V57
0xbd: V66 = 0x0
0xbf: V67 = 0x40
0xc1: V68 = M[0x40]
0xc4: V69 = SUB V65 V68
0xc6: V70 = 0x0
0xca: V71 = CALL 0x3d090 V41 0x0 V68 V69 V68 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd0
[0xd0:0xd1]
---
Predecessors: [0x53, 0x5f, 0x174, 0x333]
Successors: []
---
0xd0 JUMPDEST
0xd1 STOP
---
0xd0: JUMPDEST 
0xd1: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0xd]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V72 = CALLVALUE
0xd4: V73 = ISZERO V72
0xd5: V74 = 0xdd
0xd8: JUMPI 0xdd V73
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V75 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xdd
[0xdd:0xf0]
---
Predecessors: [0xd2]
Successors: [0x159]
---
0xdd JUMPDEST
0xde PUSH2 0xd0
0xe1 PUSH1 0x1
0xe3 PUSH1 0xa0
0xe5 PUSH1 0x2
0xe7 EXP
0xe8 SUB
0xe9 PUSH1 0x4
0xeb CALLDATALOAD
0xec AND
0xed PUSH2 0x159
0xf0 JUMP
---
0xdd: JUMPDEST 
0xde: V76 = 0xd0
0xe1: V77 = 0x1
0xe3: V78 = 0xa0
0xe5: V79 = 0x2
0xe7: V80 = EXP 0x2 0xa0
0xe8: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe9: V82 = 0x4
0xeb: V83 = CALLDATALOAD 0x4
0xec: V84 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0xed: V85 = 0x159
0xf0: JUMP 0x159
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd0, V84]
Exit stack: [V13, 0xd0, V84]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0x27]
Successors: [0xf8, 0xfc]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V86 = CALLVALUE
0xf3: V87 = ISZERO V86
0xf4: V88 = 0xfc
0xf7: JUMPI 0xfc V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V89 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0xf1]
Successors: [0x2d7]
---
0xfc JUMPDEST
0xfd PUSH2 0xd0
0x100 PUSH2 0x2d7
0x103 JUMP
---
0xfc: JUMPDEST 
0xfd: V90 = 0xd0
0x100: V91 = 0x2d7
0x103: JUMP 0x2d7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V13, 0xd0]

================================

Block 0x104
[0x104:0x10a]
---
Predecessors: [0x32]
Successors: [0x10b, 0x10f]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0x104: JUMPDEST 
0x105: V92 = CALLVALUE
0x106: V93 = ISZERO V92
0x107: V94 = 0x10f
0x10a: JUMPI 0x10f V93
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0x104]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V95 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x10f
[0x10f:0x116]
---
Predecessors: [0x104]
Successors: [0x2fd]
---
0x10f JUMPDEST
0x110 PUSH2 0x117
0x113 PUSH2 0x2fd
0x116 JUMP
---
0x10f: JUMPDEST 
0x110: V96 = 0x117
0x113: V97 = 0x2fd
0x116: JUMP 0x2fd
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V13, 0x117]

================================

Block 0x117
[0x117:0x132]
---
Predecessors: [0x2fd, 0x30c]
Successors: []
---
0x117 JUMPDEST
0x118 PUSH1 0x40
0x11a MLOAD
0x11b PUSH1 0x1
0x11d PUSH1 0xa0
0x11f PUSH1 0x2
0x121 EXP
0x122 SUB
0x123 SWAP1
0x124 SWAP2
0x125 AND
0x126 DUP2
0x127 MSTORE
0x128 PUSH1 0x20
0x12a ADD
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f SWAP2
0x130 SUB
0x131 SWAP1
0x132 RETURN
---
0x117: JUMPDEST 
0x118: V98 = 0x40
0x11a: V99 = M[0x40]
0x11b: V100 = 0x1
0x11d: V101 = 0xa0
0x11f: V102 = 0x2
0x121: V103 = EXP 0x2 0xa0
0x122: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x125: V105 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x127: M[V99] = V105
0x128: V106 = 0x20
0x12a: V107 = ADD 0x20 V99
0x12b: V108 = 0x40
0x12d: V109 = M[0x40]
0x130: V110 = SUB V107 V109
0x132: RETURN V109 V110
---
Entry stack: [V13, 0x117, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x117]

================================

Block 0x133
[0x133:0x139]
---
Predecessors: [0x3d]
Successors: [0x13a, 0x13e]
---
0x133 JUMPDEST
0x134 CALLVALUE
0x135 ISZERO
0x136 PUSH2 0x13e
0x139 JUMPI
---
0x133: JUMPDEST 
0x134: V111 = CALLVALUE
0x135: V112 = ISZERO V111
0x136: V113 = 0x13e
0x139: JUMPI 0x13e V112
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13a
[0x13a:0x13d]
---
Predecessors: [0x133]
Successors: []
---
0x13a PUSH1 0x0
0x13c DUP1
0x13d REVERT
---
0x13a: V114 = 0x0
0x13d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x133]
Successors: [0x30c]
---
0x13e JUMPDEST
0x13f PUSH2 0x117
0x142 PUSH2 0x30c
0x145 JUMP
---
0x13e: JUMPDEST 
0x13f: V115 = 0x117
0x142: V116 = 0x30c
0x145: JUMP 0x30c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V13, 0x117]

================================

Block 0x146
[0x146:0x14c]
---
Predecessors: [0x48]
Successors: [0x14d, 0x151]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 ISZERO
0x149 PUSH2 0x151
0x14c JUMPI
---
0x146: JUMPDEST 
0x147: V117 = CALLVALUE
0x148: V118 = ISZERO V117
0x149: V119 = 0x151
0x14c: JUMPI 0x151 V118
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x146]
Successors: []
---
0x14d PUSH1 0x0
0x14f DUP1
0x150 REVERT
---
0x14d: V120 = 0x0
0x150: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x151
[0x151:0x158]
---
Predecessors: [0x146]
Successors: [0x31b]
---
0x151 JUMPDEST
0x152 PUSH2 0xd0
0x155 PUSH2 0x31b
0x158 JUMP
---
0x151: JUMPDEST 
0x152: V121 = 0xd0
0x155: V122 = 0x31b
0x158: JUMP 0x31b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V13, 0xd0]

================================

Block 0x159
[0x159:0x172]
---
Predecessors: [0xdd]
Successors: [0x173, 0x174]
---
0x159 JUMPDEST
0x15a PUSH1 0x1
0x15c SLOAD
0x15d PUSH1 0x0
0x15f SWAP1
0x160 CALLER
0x161 PUSH1 0x1
0x163 PUSH1 0xa0
0x165 PUSH1 0x2
0x167 EXP
0x168 SUB
0x169 SWAP1
0x16a DUP2
0x16b AND
0x16c SWAP2
0x16d AND
0x16e EQ
0x16f PUSH2 0x174
0x172 JUMPI
---
0x159: JUMPDEST 
0x15a: V123 = 0x1
0x15c: V124 = S[0x1]
0x15d: V125 = 0x0
0x160: V126 = CALLER
0x161: V127 = 0x1
0x163: V128 = 0xa0
0x165: V129 = 0x2
0x167: V130 = EXP 0x2 0xa0
0x168: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x16d: V133 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V134 = EQ V133 V132
0x16f: V135 = 0x174
0x172: JUMPI 0x174 V134
---
Entry stack: [V13, 0xd0, V84]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xd0, V84, 0x0]

================================

Block 0x173
[0x173:0x173]
---
Predecessors: [0x159]
Successors: []
---
0x173 INVALID
---
0x173: INVALID 
---
Entry stack: [V13, 0xd0, V84, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0, V84, 0x0]

================================

Block 0x174
[0x174:0x2d6]
---
Predecessors: [0x159]
Successors: [0xd0]
---
0x174 JUMPDEST
0x175 POP
0x176 PUSH1 0x0
0x178 DUP1
0x179 SLOAD
0x17a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18f NOT
0x190 AND
0x191 PUSH1 0x1
0x193 PUSH1 0xa0
0x195 PUSH1 0x2
0x197 EXP
0x198 SUB
0x199 DUP4
0x19a DUP2
0x19b AND
0x19c SWAP2
0x19d SWAP1
0x19e SWAP2
0x19f OR
0x1a0 DUP1
0x1a1 DUP4
0x1a2 SSTORE
0x1a3 AND
0x1a4 PUSH3 0x3d090
0x1a8 PUSH7 0x38d7ea4c68000
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 PUSH32 0x706c617953797374656d2875696e743235362c61646472657373290000000000
0x1d4 DUP2
0x1d5 MSTORE
0x1d6 PUSH1 0x1b
0x1d8 ADD
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc DUP1
0x1dd SWAP2
0x1de SUB
0x1df SWAP1
0x1e0 SHA3
0x1e1 PUSH1 0xe0
0x1e3 PUSH1 0x2
0x1e5 EXP
0x1e6 SWAP1
0x1e7 DIV
0x1e8 SWAP2
0x1e9 SWAP1
0x1ea DUP5
0x1eb ADDRESS
0x1ec PUSH1 0x40
0x1ee MLOAD
0x1ef PUSH1 0xe0
0x1f1 PUSH1 0x2
0x1f3 EXP
0x1f4 PUSH4 0xffffffff
0x1f9 DUP8
0x1fa AND
0x1fb MUL
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x4
0x200 DUP2
0x201 ADD
0x202 SWAP3
0x203 SWAP1
0x204 SWAP3
0x205 MSTORE
0x206 PUSH1 0x1
0x208 PUSH1 0xa0
0x20a PUSH1 0x2
0x20c EXP
0x20d SUB
0x20e AND
0x20f PUSH1 0x24
0x211 DUP3
0x212 ADD
0x213 MSTORE
0x214 PUSH1 0x44
0x216 ADD
0x217 PUSH1 0x0
0x219 PUSH1 0x40
0x21b MLOAD
0x21c DUP1
0x21d DUP4
0x21e SUB
0x21f DUP2
0x220 DUP6
0x221 DUP10
0x222 DUP9
0x223 CALL
0x224 SWAP5
0x225 POP
0x226 POP
0x227 POP
0x228 POP
0x229 POP
0x22a POP
0x22b PUSH32 0x61c6970ff4486b393111ec2528e2000afa03ab44363f2b450b3b112e3937d6c8
0x24c DUP3
0x24d PUSH1 0x40
0x24f MLOAD
0x250 PUSH32 0x706c617953797374656d2875696e743235362c61646472657373290000000000
0x271 DUP2
0x272 MSTORE
0x273 PUSH1 0x1b
0x275 ADD
0x276 PUSH1 0x40
0x278 MLOAD
0x279 DUP1
0x27a SWAP2
0x27b SUB
0x27c SWAP1
0x27d SHA3
0x27e DUP4
0x27f ADDRESS
0x280 PUSH1 0x40
0x282 MLOAD
0x283 PUSH1 0x1
0x285 PUSH1 0xa0
0x287 PUSH1 0x2
0x289 EXP
0x28a SUB
0x28b SWAP5
0x28c DUP6
0x28d AND
0x28e DUP2
0x28f MSTORE
0x290 PUSH32 0xffffffff00000000000000000000000000000000000000000000000000000000
0x2b1 SWAP1
0x2b2 SWAP4
0x2b3 AND
0x2b4 PUSH1 0x20
0x2b6 DUP5
0x2b7 ADD
0x2b8 MSTORE
0x2b9 PUSH1 0x40
0x2bb DUP1
0x2bc DUP5
0x2bd ADD
0x2be SWAP3
0x2bf SWAP1
0x2c0 SWAP3
0x2c1 MSTORE
0x2c2 SWAP1
0x2c3 SWAP3
0x2c4 AND
0x2c5 PUSH1 0x60
0x2c7 DUP3
0x2c8 ADD
0x2c9 MSTORE
0x2ca PUSH1 0x80
0x2cc ADD
0x2cd SWAP1
0x2ce MLOAD
0x2cf DUP1
0x2d0 SWAP2
0x2d1 SUB
0x2d2 SWAP1
0x2d3 LOG1
0x2d4 POP
0x2d5 POP
0x2d6 JUMP
---
0x174: JUMPDEST 
0x176: V136 = 0x0
0x179: V137 = S[0x0]
0x17a: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V139 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x190: V140 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V137
0x191: V141 = 0x1
0x193: V142 = 0xa0
0x195: V143 = 0x2
0x197: V144 = EXP 0x2 0xa0
0x198: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19b: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x19f: V147 = OR V146 V140
0x1a2: S[0x0] = V147
0x1a3: V148 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V149 = 0x3d090
0x1a8: V150 = 0x38d7ea4c68000
0x1b0: V151 = 0x40
0x1b2: V152 = M[0x40]
0x1b3: V153 = 0x706c617953797374656d2875696e743235362c61646472657373290000000000
0x1d5: M[V152] = 0x706c617953797374656d2875696e743235362c61646472657373290000000000
0x1d6: V154 = 0x1b
0x1d8: V155 = ADD 0x1b V152
0x1d9: V156 = 0x40
0x1db: V157 = M[0x40]
0x1de: V158 = SUB V155 V157
0x1e0: V159 = SHA3 V157 V158
0x1e1: V160 = 0xe0
0x1e3: V161 = 0x2
0x1e5: V162 = EXP 0x2 0xe0
0x1e7: V163 = DIV V159 0x100000000000000000000000000000000000000000000000000000000
0x1eb: V164 = ADDRESS
0x1ec: V165 = 0x40
0x1ee: V166 = M[0x40]
0x1ef: V167 = 0xe0
0x1f1: V168 = 0x2
0x1f3: V169 = EXP 0x2 0xe0
0x1f4: V170 = 0xffffffff
0x1fa: V171 = AND V163 0xffffffff
0x1fb: V172 = MUL V171 0x100000000000000000000000000000000000000000000000000000000
0x1fd: M[V166] = V172
0x1fe: V173 = 0x4
0x201: V174 = ADD V166 0x4
0x205: M[V174] = 0x0
0x206: V175 = 0x1
0x208: V176 = 0xa0
0x20a: V177 = 0x2
0x20c: V178 = EXP 0x2 0xa0
0x20d: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20e: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x20f: V181 = 0x24
0x212: V182 = ADD V166 0x24
0x213: M[V182] = V180
0x214: V183 = 0x44
0x216: V184 = ADD 0x44 V166
0x217: V185 = 0x0
0x219: V186 = 0x40
0x21b: V187 = M[0x40]
0x21e: V188 = SUB V184 V187
0x223: V189 = CALL 0x3d090 V148 0x38d7ea4c68000 V187 V188 V187 0x0
0x22b: V190 = 0x61c6970ff4486b393111ec2528e2000afa03ab44363f2b450b3b112e3937d6c8
0x24d: V191 = 0x40
0x24f: V192 = M[0x40]
0x250: V193 = 0x706c617953797374656d2875696e743235362c61646472657373290000000000
0x272: M[V192] = 0x706c617953797374656d2875696e743235362c61646472657373290000000000
0x273: V194 = 0x1b
0x275: V195 = ADD 0x1b V192
0x276: V196 = 0x40
0x278: V197 = M[0x40]
0x27b: V198 = SUB V195 V197
0x27d: V199 = SHA3 V197 V198
0x27f: V200 = ADDRESS
0x280: V201 = 0x40
0x282: V202 = M[0x40]
0x283: V203 = 0x1
0x285: V204 = 0xa0
0x287: V205 = 0x2
0x289: V206 = EXP 0x2 0xa0
0x28a: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28d: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x28f: M[V202] = V208
0x290: V209 = 0xffffffff00000000000000000000000000000000000000000000000000000000
0x2b3: V210 = AND V199 0xffffffff00000000000000000000000000000000000000000000000000000000
0x2b4: V211 = 0x20
0x2b7: V212 = ADD V202 0x20
0x2b8: M[V212] = V210
0x2b9: V213 = 0x40
0x2bd: V214 = ADD V202 0x40
0x2c1: M[V214] = 0x0
0x2c4: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x2c5: V216 = 0x60
0x2c8: V217 = ADD V202 0x60
0x2c9: M[V217] = V215
0x2ca: V218 = 0x80
0x2cc: V219 = ADD 0x80 V202
0x2ce: V220 = M[0x40]
0x2d1: V221 = SUB V219 V220
0x2d3: LOG V220 V221 0x61c6970ff4486b393111ec2528e2000afa03ab44363f2b450b3b112e3937d6c8
0x2d6: JUMP 0xd0
---
Entry stack: [V13, 0xd0, V84, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x2d7
[0x2d7:0x2ed]
---
Predecessors: [0xfc]
Successors: [0x2ee, 0x2ef]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x1
0x2da SLOAD
0x2db CALLER
0x2dc PUSH1 0x1
0x2de PUSH1 0xa0
0x2e0 PUSH1 0x2
0x2e2 EXP
0x2e3 SUB
0x2e4 SWAP1
0x2e5 DUP2
0x2e6 AND
0x2e7 SWAP2
0x2e8 AND
0x2e9 EQ
0x2ea PUSH2 0x2ef
0x2ed JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V222 = 0x1
0x2da: V223 = S[0x1]
0x2db: V224 = CALLER
0x2dc: V225 = 0x1
0x2de: V226 = 0xa0
0x2e0: V227 = 0x2
0x2e2: V228 = EXP 0x2 0xa0
0x2e3: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e6: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x2e8: V231 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V232 = EQ V231 V230
0x2ea: V233 = 0x2ef
0x2ed: JUMPI 0x2ef V232
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x2ee
[0x2ee:0x2ee]
---
Predecessors: [0x2d7]
Successors: []
---
0x2ee INVALID
---
0x2ee: INVALID 
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x2ef
[0x2ef:0x2fc]
---
Predecessors: [0x2d7]
Successors: []
---
0x2ef JUMPDEST
0x2f0 PUSH1 0x1
0x2f2 SLOAD
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 PUSH1 0x2
0x2f9 EXP
0x2fa SUB
0x2fb AND
0x2fc SELFDESTRUCT
---
0x2ef: JUMPDEST 
0x2f0: V234 = 0x1
0x2f2: V235 = S[0x1]
0x2f3: V236 = 0x1
0x2f5: V237 = 0xa0
0x2f7: V238 = 0x2
0x2f9: V239 = EXP 0x2 0xa0
0x2fa: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fb: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x2fc: SELFDESTRUCT V241
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x2fd
[0x2fd:0x30b]
---
Predecessors: [0x10f]
Successors: [0x117]
---
0x2fd JUMPDEST
0x2fe PUSH1 0x1
0x300 SLOAD
0x301 PUSH1 0x1
0x303 PUSH1 0xa0
0x305 PUSH1 0x2
0x307 EXP
0x308 SUB
0x309 AND
0x30a DUP2
0x30b JUMP
---
0x2fd: JUMPDEST 
0x2fe: V242 = 0x1
0x300: V243 = S[0x1]
0x301: V244 = 0x1
0x303: V245 = 0xa0
0x305: V246 = 0x2
0x307: V247 = EXP 0x2 0xa0
0x308: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x309: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x30b: JUMP 0x117
---
Entry stack: [V13, 0x117]
Stack pops: 1
Stack additions: [S0, V249]
Exit stack: [V13, 0x117, V249]

================================

Block 0x30c
[0x30c:0x31a]
---
Predecessors: [0x13e]
Successors: [0x117]
---
0x30c JUMPDEST
0x30d PUSH1 0x0
0x30f SLOAD
0x310 PUSH1 0x1
0x312 PUSH1 0xa0
0x314 PUSH1 0x2
0x316 EXP
0x317 SUB
0x318 AND
0x319 DUP2
0x31a JUMP
---
0x30c: JUMPDEST 
0x30d: V250 = 0x0
0x30f: V251 = S[0x0]
0x310: V252 = 0x1
0x312: V253 = 0xa0
0x314: V254 = 0x2
0x316: V255 = EXP 0x2 0xa0
0x317: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x318: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x31a: JUMP 0x117
---
Entry stack: [V13, 0x117]
Stack pops: 1
Stack additions: [S0, V257]
Exit stack: [V13, 0x117, V257]

================================

Block 0x31b
[0x31b:0x331]
---
Predecessors: [0x151]
Successors: [0x332, 0x333]
---
0x31b JUMPDEST
0x31c PUSH1 0x1
0x31e SLOAD
0x31f CALLER
0x320 PUSH1 0x1
0x322 PUSH1 0xa0
0x324 PUSH1 0x2
0x326 EXP
0x327 SUB
0x328 SWAP1
0x329 DUP2
0x32a AND
0x32b SWAP2
0x32c AND
0x32d EQ
0x32e PUSH2 0x333
0x331 JUMPI
---
0x31b: JUMPDEST 
0x31c: V258 = 0x1
0x31e: V259 = S[0x1]
0x31f: V260 = CALLER
0x320: V261 = 0x1
0x322: V262 = 0xa0
0x324: V263 = 0x2
0x326: V264 = EXP 0x2 0xa0
0x327: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32a: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x32c: V267 = AND V259 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V268 = EQ V267 V266
0x32e: V269 = 0x333
0x331: JUMPI 0x333 V268
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x332
[0x332:0x332]
---
Predecessors: [0x31b]
Successors: []
---
0x332 INVALID
---
0x332: INVALID 
---
Entry stack: [V13, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd0]

================================

Block 0x333
[0x333:0x3a5]
---
Predecessors: [0x31b]
Successors: [0xd0]
---
0x333 JUMPDEST
0x334 PUSH1 0x0
0x336 SLOAD
0x337 PUSH1 0x1
0x339 PUSH1 0xa0
0x33b PUSH1 0x2
0x33d EXP
0x33e SUB
0x33f AND
0x340 PUSH3 0x3d090
0x344 PUSH1 0x40
0x346 MLOAD
0x347 PUSH32 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x368 DUP2
0x369 MSTORE
0x36a PUSH1 0x5
0x36c ADD
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 SWAP2
0x372 SUB
0x373 SWAP1
0x374 SHA3
0x375 PUSH1 0xe0
0x377 PUSH1 0x2
0x379 EXP
0x37a SWAP1
0x37b DIV
0x37c SWAP1
0x37d PUSH1 0x40
0x37f MLOAD
0x380 DUP3
0x381 PUSH4 0xffffffff
0x386 AND
0x387 PUSH1 0xe0
0x389 PUSH1 0x2
0x38b EXP
0x38c MUL
0x38d DUP2
0x38e MSTORE
0x38f PUSH1 0x4
0x391 ADD
0x392 PUSH1 0x0
0x394 PUSH1 0x40
0x396 MLOAD
0x397 DUP1
0x398 DUP4
0x399 SUB
0x39a DUP2
0x39b PUSH1 0x0
0x39d DUP9
0x39e DUP8
0x39f CALL
0x3a0 POP
0x3a1 POP
0x3a2 POP
0x3a3 POP
0x3a4 POP
0x3a5 JUMP
---
0x333: JUMPDEST 
0x334: V270 = 0x0
0x336: V271 = S[0x0]
0x337: V272 = 0x1
0x339: V273 = 0xa0
0x33b: V274 = 0x2
0x33d: V275 = EXP 0x2 0xa0
0x33e: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33f: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x340: V278 = 0x3d090
0x344: V279 = 0x40
0x346: V280 = M[0x40]
0x347: V281 = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x369: M[V280] = 0x776f6e2829000000000000000000000000000000000000000000000000000000
0x36a: V282 = 0x5
0x36c: V283 = ADD 0x5 V280
0x36d: V284 = 0x40
0x36f: V285 = M[0x40]
0x372: V286 = SUB V283 V285
0x374: V287 = SHA3 V285 V286
0x375: V288 = 0xe0
0x377: V289 = 0x2
0x379: V290 = EXP 0x2 0xe0
0x37b: V291 = DIV V287 0x100000000000000000000000000000000000000000000000000000000
0x37d: V292 = 0x40
0x37f: V293 = M[0x40]
0x381: V294 = 0xffffffff
0x386: V295 = AND 0xffffffff V291
0x387: V296 = 0xe0
0x389: V297 = 0x2
0x38b: V298 = EXP 0x2 0xe0
0x38c: V299 = MUL 0x100000000000000000000000000000000000000000000000000000000 V295
0x38e: M[V293] = V299
0x38f: V300 = 0x4
0x391: V301 = ADD 0x4 V293
0x392: V302 = 0x0
0x394: V303 = 0x40
0x396: V304 = M[0x40]
0x399: V305 = SUB V301 V304
0x39b: V306 = 0x0
0x39f: V307 = CALL 0x3d090 V277 0x0 V304 V305 V304 0x0
0x3a5: JUMP 0xd0
---
Entry stack: [V13, 0xd0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x3a6
[0x3a6:0x3d1]
---
Predecessors: []
Successors: []
---
0x3a6 STOP
0x3a7 LOG1
0x3a8 PUSH6 0x627a7a723058
0x3af SHA3
0x3b0 SWAP11
0x3b1 MISSING 0xb8
0x3b2 MISSING 0x48
0x3b3 SWAP6
0x3b4 MISSING 0x29
0x3b5 MISSING 0xd6
0x3b6 SWAP12
0x3b7 MISSING 0xa7
0x3b8 EQ
0x3b9 MISSING 0xfb
0x3ba LOG4
0x3bb PUSH15 0xd1da06625f8c70c28599964c8865b5
0x3cb CALL
0x3cc XOR
0x3cd MISSING 0xf
0x3ce MOD
0x3cf GAS
0x3d0 STOP
0x3d1 MISSING 0x29
---
0x3a6: STOP 
0x3a7: LOG S0 S1 S2
0x3a8: V308 = 0x627a7a723058
0x3af: V309 = SHA3 0x627a7a723058 S3
0x3b1: MISSING 0xb8
0x3b2: MISSING 0x48
0x3b4: MISSING 0x29
0x3b5: MISSING 0xd6
0x3b7: MISSING 0xa7
0x3b8: V310 = EQ S0 S1
0x3b9: MISSING 0xfb
0x3ba: LOG S0 S1 S2 S3 S4 S5
0x3bb: V311 = 0xd1da06625f8c70c28599964c8865b5
0x3cb: V312 = CALL 0xd1da06625f8c70c28599964c8865b5 S6 S7 S8 S9 S10 S11
0x3cc: V313 = XOR V312 S12
0x3cd: MISSING 0xf
0x3ce: V314 = MOD S0 S1
0x3cf: V315 = GAS
0x3d0: STOP 
0x3d1: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S14, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V309, S6, S1, S2, S3, S4, S5, S0, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, V310, V313, V315, V314]
Exit stack: []

================================

Function 0:
Public function signature: 0x106b96ce
Entry block: 0xd2
Exit block: 0xd0
Body: 0xd0, 0xd2, 0xd9, 0xdd, 0x159, 0x173, 0x174

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xf1
Exit block: 0x2ee
Body: 0xf1, 0xf8, 0xfc, 0x2d7, 0x2ee, 0x2ef

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x104
Exit block: 0x117
Body: 0x104, 0x10b, 0x10f, 0x117, 0x2fd

Function 3:
Public function signature: 0x93fc9fbe
Entry block: 0x133
Exit block: 0x117
Body: 0x117, 0x133, 0x13a, 0x13e, 0x30c

Function 4:
Public function signature: 0xde82efb4
Entry block: 0x146
Exit block: 0xd0
Body: 0xd0, 0x146, 0x14d, 0x151, 0x31b, 0x332, 0x333

Function 5:
Public fallback function
Entry block: 0x53
Exit block: 0xd0
Body: 0x53, 0x5f, 0xd0

