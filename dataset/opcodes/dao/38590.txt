Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x562e0f13
0x3c EQ
0x3d PUSH2 0x4e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x562e0f13
0x3c: V13 = EQ 0x562e0f13 V11
0x3d: V14 = 0x4e
0x40: JUMPI 0x4e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x58]
---
0x41 DUP1
0x42 PUSH4 0xf6c5c80d
0x47 EQ
0x48 PUSH2 0x58
0x4b JUMPI
---
0x42: V15 = 0xf6c5c80d
0x47: V16 = EQ 0xf6c5c80d V11
0x48: V17 = 0x58
0x4b: JUMPI 0x58 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x4d]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d STOP
---
0x4c: JUMPDEST 
0x4d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x55]
---
Predecessors: [0xd]
Successors: [0x6f]
---
0x4e JUMPDEST
0x4f PUSH2 0x56
0x52 PUSH2 0x6f
0x55 JUMP
---
0x4e: JUMPDEST 
0x4f: V18 = 0x56
0x52: V19 = 0x6f
0x55: JUMP 0x6f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x3aa]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5f]
---
Predecessors: [0x41]
Successors: [0x60, 0x64]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a DUP1
0x5b ISZERO
0x5c PUSH2 0x64
0x5f JUMPI
---
0x58: JUMPDEST 
0x59: V20 = CALLVALUE
0x5b: V21 = ISZERO V20
0x5c: V22 = 0x64
0x5f: JUMPI 0x64 V21
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V20]
Exit stack: [V11, V20]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x58]
Successors: []
---
0x60 PUSH1 0x0
0x62 DUP1
0x63 REVERT
---
0x60: V23 = 0x0
0x63: REVERT 0x0 0x0
---
Entry stack: [V11, V20]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V20]

================================

Block 0x64
[0x64:0x6c]
---
Predecessors: [0x58]
Successors: [0x3af]
---
0x64 JUMPDEST
0x65 POP
0x66 PUSH2 0x6d
0x69 PUSH2 0x3af
0x6c JUMP
---
0x64: JUMPDEST 
0x66: V24 = 0x6d
0x69: V25 = 0x3af
0x6c: JUMP 0x3af
---
Entry stack: [V11, V20]
Stack pops: 1
Stack additions: [0x6d]
Exit stack: [V11, 0x6d]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: []
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6f
[0x6f:0x146]
---
Predecessors: [0x4e]
Successors: [0x147, 0x14b]
---
0x6f JUMPDEST
0x70 PUSH1 0x0
0x72 DUP1
0x73 ADDRESS
0x74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89 AND
0x8a BALANCE
0x8b SWAP2
0x8c POP
0x8d PUSH1 0x1
0x8f PUSH1 0x0
0x91 SWAP1
0x92 SLOAD
0x93 SWAP1
0x94 PUSH2 0x100
0x97 EXP
0x98 SWAP1
0x99 DIV
0x9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf AND
0xb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5 AND
0xc6 PUSH4 0xd0febe4c
0xcb PUSH1 0x1
0xcd PUSH1 0x0
0xcf SWAP1
0xd0 SLOAD
0xd1 SWAP1
0xd2 PUSH2 0x100
0xd5 EXP
0xd6 SWAP1
0xd7 DIV
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed AND
0xee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x103 AND
0x104 BALANCE
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP3
0x109 PUSH4 0xffffffff
0x10e AND
0x10f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12d MUL
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x4
0x132 ADD
0x133 PUSH1 0x0
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 DUP4
0x13a SUB
0x13b DUP2
0x13c DUP6
0x13d DUP9
0x13e DUP1
0x13f EXTCODESIZE
0x140 ISZERO
0x141 DUP1
0x142 ISZERO
0x143 PUSH2 0x14b
0x146 JUMPI
---
0x6f: JUMPDEST 
0x70: V26 = 0x0
0x73: V27 = ADDRESS
0x74: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x89: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x8a: V30 = BALANCE V29
0x8d: V31 = 0x1
0x8f: V32 = 0x0
0x92: V33 = S[0x1]
0x94: V34 = 0x100
0x97: V35 = EXP 0x100 0x0
0x99: V36 = DIV V33 0x1
0x9a: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xb0: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xc6: V41 = 0xd0febe4c
0xcb: V42 = 0x1
0xcd: V43 = 0x0
0xd0: V44 = S[0x1]
0xd2: V45 = 0x100
0xd5: V46 = EXP 0x100 0x0
0xd7: V47 = DIV V44 0x1
0xd8: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xee: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0x103: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x104: V52 = BALANCE V51
0x105: V53 = 0x40
0x107: V54 = M[0x40]
0x109: V55 = 0xffffffff
0x10e: V56 = AND 0xffffffff 0xd0febe4c
0x10f: V57 = 0x100000000000000000000000000000000000000000000000000000000
0x12d: V58 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0febe4c
0x12f: M[V54] = 0xd0febe4c00000000000000000000000000000000000000000000000000000000
0x130: V59 = 0x4
0x132: V60 = ADD 0x4 V54
0x133: V61 = 0x0
0x135: V62 = 0x40
0x137: V63 = M[0x40]
0x13a: V64 = SUB V60 V63
0x13f: V65 = EXTCODESIZE V40
0x140: V66 = ISZERO V65
0x142: V67 = ISZERO V66
0x143: V68 = 0x14b
0x146: JUMPI 0x14b V67
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: [V30, 0x0, V40, 0xd0febe4c, V52, V60, 0x0, V63, V64, V63, V52, V40, V66]
Exit stack: [V11, 0x56, V30, 0x0, V40, 0xd0febe4c, V52, V60, 0x0, V63, V64, V63, V52, V40, V66]

================================

Block 0x147
[0x147:0x14a]
---
Predecessors: [0x6f]
Successors: []
---
0x147 PUSH1 0x0
0x149 DUP1
0x14a REVERT
---
0x147: V69 = 0x0
0x14a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V30, 0x0, V40, 0xd0febe4c, V52, V60, 0x0, V63, V64, V63, V52, V40, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V30, 0x0, V40, 0xd0febe4c, V52, V60, 0x0, V63, V64, V63, V52, V40, V66]

================================

Block 0x14b
[0x14b:0x155]
---
Predecessors: [0x6f]
Successors: [0x156, 0x15f]
---
0x14b JUMPDEST
0x14c POP
0x14d GAS
0x14e CALL
0x14f ISZERO
0x150 DUP1
0x151 ISZERO
0x152 PUSH2 0x15f
0x155 JUMPI
---
0x14b: JUMPDEST 
0x14d: V70 = GAS
0x14e: V71 = CALL V70 V40 V52 V63 V64 V63 0x0
0x14f: V72 = ISZERO V71
0x151: V73 = ISZERO V72
0x152: V74 = 0x15f
0x155: JUMPI 0x15f V73
---
Entry stack: [V11, 0x56, V30, 0x0, V40, 0xd0febe4c, V52, V60, 0x0, V63, V64, V63, V52, V40, V66]
Stack pops: 7
Stack additions: [V72]
Exit stack: [V11, 0x56, V30, 0x0, V40, 0xd0febe4c, V52, V60, V72]

================================

Block 0x156
[0x156:0x15e]
---
Predecessors: [0x14b]
Successors: []
---
0x156 RETURNDATASIZE
0x157 PUSH1 0x0
0x159 DUP1
0x15a RETURNDATACOPY
0x15b RETURNDATASIZE
0x15c PUSH1 0x0
0x15e REVERT
---
0x156: V75 = RETURNDATASIZE
0x157: V76 = 0x0
0x15a: RETURNDATACOPY 0x0 0x0 V75
0x15b: V77 = RETURNDATASIZE
0x15c: V78 = 0x0
0x15e: REVERT 0x0 V77
---
Entry stack: [V11, 0x56, V30, 0x0, V40, 0xd0febe4c, V52, V60, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V30, 0x0, V40, 0xd0febe4c, V52, V60, V72]

================================

Block 0x15f
[0x15f:0x25a]
---
Predecessors: [0x14b]
Successors: [0x25b, 0x25f]
---
0x15f JUMPDEST
0x160 POP
0x161 POP
0x162 POP
0x163 POP
0x164 POP
0x165 PUSH1 0x1
0x167 PUSH1 0x0
0x169 SWAP1
0x16a SLOAD
0x16b SWAP1
0x16c PUSH2 0x100
0x16f EXP
0x170 SWAP1
0x171 DIV
0x172 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x187 AND
0x188 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19d AND
0x19e PUSH4 0x6c11bcd3
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0x0
0x1a7 SWAP1
0x1a8 SLOAD
0x1a9 SWAP1
0x1aa PUSH2 0x100
0x1ad EXP
0x1ae SWAP1
0x1af DIV
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc PUSH4 0x70a08231
0x1e1 ADDRESS
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 DUP3
0x1e6 PUSH4 0xffffffff
0x1eb AND
0x1ec PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x20a MUL
0x20b DUP2
0x20c MSTORE
0x20d PUSH1 0x4
0x20f ADD
0x210 DUP1
0x211 DUP3
0x212 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x227 AND
0x228 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23d AND
0x23e DUP2
0x23f MSTORE
0x240 PUSH1 0x20
0x242 ADD
0x243 SWAP2
0x244 POP
0x245 POP
0x246 PUSH1 0x20
0x248 PUSH1 0x40
0x24a MLOAD
0x24b DUP1
0x24c DUP4
0x24d SUB
0x24e DUP2
0x24f PUSH1 0x0
0x251 DUP8
0x252 DUP1
0x253 EXTCODESIZE
0x254 ISZERO
0x255 DUP1
0x256 ISZERO
0x257 PUSH2 0x25f
0x25a JUMPI
---
0x15f: JUMPDEST 
0x165: V79 = 0x1
0x167: V80 = 0x0
0x16a: V81 = S[0x1]
0x16c: V82 = 0x100
0x16f: V83 = EXP 0x100 0x0
0x171: V84 = DIV V81 0x1
0x172: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x187: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x188: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x19e: V89 = 0x6c11bcd3
0x1a3: V90 = 0x1
0x1a5: V91 = 0x0
0x1a8: V92 = S[0x1]
0x1aa: V93 = 0x100
0x1ad: V94 = EXP 0x100 0x0
0x1af: V95 = DIV V92 0x1
0x1b0: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1c6: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1dc: V100 = 0x70a08231
0x1e1: V101 = ADDRESS
0x1e2: V102 = 0x40
0x1e4: V103 = M[0x40]
0x1e6: V104 = 0xffffffff
0x1eb: V105 = AND 0xffffffff 0x70a08231
0x1ec: V106 = 0x100000000000000000000000000000000000000000000000000000000
0x20a: V107 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x20c: M[V103] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x20d: V108 = 0x4
0x20f: V109 = ADD 0x4 V103
0x212: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x227: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x228: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x23f: M[V109] = V113
0x240: V114 = 0x20
0x242: V115 = ADD 0x20 V109
0x246: V116 = 0x20
0x248: V117 = 0x40
0x24a: V118 = M[0x40]
0x24d: V119 = SUB V115 V118
0x24f: V120 = 0x0
0x253: V121 = EXTCODESIZE V99
0x254: V122 = ISZERO V121
0x256: V123 = ISZERO V122
0x257: V124 = 0x25f
0x25a: JUMPI 0x25f V123
---
Entry stack: [V11, 0x56, V30, 0x0, V40, 0xd0febe4c, V52, V60, V72]
Stack pops: 5
Stack additions: [V88, 0x6c11bcd3, V99, 0x70a08231, V115, 0x20, V118, V119, V118, 0x0, V99, V122]
Exit stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V99, 0x70a08231, V115, 0x20, V118, V119, V118, 0x0, V99, V122]

================================

Block 0x25b
[0x25b:0x25e]
---
Predecessors: [0x15f]
Successors: []
---
0x25b PUSH1 0x0
0x25d DUP1
0x25e REVERT
---
0x25b: V125 = 0x0
0x25e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V99, 0x70a08231, V115, 0x20, V118, V119, V118, 0x0, V99, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V99, 0x70a08231, V115, 0x20, V118, V119, V118, 0x0, V99, V122]

================================

Block 0x25f
[0x25f:0x269]
---
Predecessors: [0x15f]
Successors: [0x26a, 0x273]
---
0x25f JUMPDEST
0x260 POP
0x261 GAS
0x262 CALL
0x263 ISZERO
0x264 DUP1
0x265 ISZERO
0x266 PUSH2 0x273
0x269 JUMPI
---
0x25f: JUMPDEST 
0x261: V126 = GAS
0x262: V127 = CALL V126 V99 0x0 V118 V119 V118 0x20
0x263: V128 = ISZERO V127
0x265: V129 = ISZERO V128
0x266: V130 = 0x273
0x269: JUMPI 0x273 V129
---
Entry stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V99, 0x70a08231, V115, 0x20, V118, V119, V118, 0x0, V99, V122]
Stack pops: 7
Stack additions: [V128]
Exit stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V99, 0x70a08231, V115, V128]

================================

Block 0x26a
[0x26a:0x272]
---
Predecessors: [0x25f]
Successors: []
---
0x26a RETURNDATASIZE
0x26b PUSH1 0x0
0x26d DUP1
0x26e RETURNDATACOPY
0x26f RETURNDATASIZE
0x270 PUSH1 0x0
0x272 REVERT
---
0x26a: V131 = RETURNDATASIZE
0x26b: V132 = 0x0
0x26e: RETURNDATACOPY 0x0 0x0 V131
0x26f: V133 = RETURNDATASIZE
0x270: V134 = 0x0
0x272: REVERT 0x0 V133
---
Entry stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V99, 0x70a08231, V115, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V99, 0x70a08231, V115, V128]

================================

Block 0x273
[0x273:0x284]
---
Predecessors: [0x25f]
Successors: [0x285, 0x289]
---
0x273 JUMPDEST
0x274 POP
0x275 POP
0x276 POP
0x277 POP
0x278 PUSH1 0x40
0x27a MLOAD
0x27b RETURNDATASIZE
0x27c PUSH1 0x20
0x27e DUP2
0x27f LT
0x280 ISZERO
0x281 PUSH2 0x289
0x284 JUMPI
---
0x273: JUMPDEST 
0x278: V135 = 0x40
0x27a: V136 = M[0x40]
0x27b: V137 = RETURNDATASIZE
0x27c: V138 = 0x20
0x27f: V139 = LT V137 0x20
0x280: V140 = ISZERO V139
0x281: V141 = 0x289
0x284: JUMPI 0x289 V140
---
Entry stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V99, 0x70a08231, V115, V128]
Stack pops: 4
Stack additions: [V136, V137]
Exit stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V136, V137]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x273]
Successors: []
---
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
---
0x285: V142 = 0x0
0x288: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V136, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V136, V137]

================================

Block 0x289
[0x289:0x2e7]
---
Predecessors: [0x273]
Successors: [0x2e8, 0x2ec]
---
0x289 JUMPDEST
0x28a DUP2
0x28b ADD
0x28c SWAP1
0x28d DUP1
0x28e DUP1
0x28f MLOAD
0x290 SWAP1
0x291 PUSH1 0x20
0x293 ADD
0x294 SWAP1
0x295 SWAP3
0x296 SWAP2
0x297 SWAP1
0x298 POP
0x299 POP
0x29a POP
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP3
0x29f PUSH4 0xffffffff
0x2a4 AND
0x2a5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c3 MUL
0x2c4 DUP2
0x2c5 MSTORE
0x2c6 PUSH1 0x4
0x2c8 ADD
0x2c9 DUP1
0x2ca DUP3
0x2cb DUP2
0x2cc MSTORE
0x2cd PUSH1 0x20
0x2cf ADD
0x2d0 SWAP2
0x2d1 POP
0x2d2 POP
0x2d3 PUSH1 0x0
0x2d5 PUSH1 0x40
0x2d7 MLOAD
0x2d8 DUP1
0x2d9 DUP4
0x2da SUB
0x2db DUP2
0x2dc PUSH1 0x0
0x2de DUP8
0x2df DUP1
0x2e0 EXTCODESIZE
0x2e1 ISZERO
0x2e2 DUP1
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x289: JUMPDEST 
0x28b: V143 = ADD V136 V137
0x28f: V144 = M[V136]
0x291: V145 = 0x20
0x293: V146 = ADD 0x20 V136
0x29b: V147 = 0x40
0x29d: V148 = M[0x40]
0x29f: V149 = 0xffffffff
0x2a4: V150 = AND 0xffffffff 0x6c11bcd3
0x2a5: V151 = 0x100000000000000000000000000000000000000000000000000000000
0x2c3: V152 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x6c11bcd3
0x2c5: M[V148] = 0x6c11bcd300000000000000000000000000000000000000000000000000000000
0x2c6: V153 = 0x4
0x2c8: V154 = ADD 0x4 V148
0x2cc: M[V154] = V144
0x2cd: V155 = 0x20
0x2cf: V156 = ADD 0x20 V154
0x2d3: V157 = 0x0
0x2d5: V158 = 0x40
0x2d7: V159 = M[0x40]
0x2da: V160 = SUB V156 V159
0x2dc: V161 = 0x0
0x2e0: V162 = EXTCODESIZE V88
0x2e1: V163 = ISZERO V162
0x2e3: V164 = ISZERO V163
0x2e4: V165 = 0x2ec
0x2e7: JUMPI 0x2ec V164
---
Entry stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V136, V137]
Stack pops: 4
Stack additions: [S3, S2, V156, 0x0, V159, V160, V159, 0x0, S3, V163]
Exit stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V156, 0x0, V159, V160, V159, 0x0, V88, V163]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x289]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V166 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V156, 0x0, V159, V160, V159, 0x0, V88, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V156, 0x0, V159, V160, V159, 0x0, V88, V163]

================================

Block 0x2ec
[0x2ec:0x2f6]
---
Predecessors: [0x289]
Successors: [0x2f7, 0x300]
---
0x2ec JUMPDEST
0x2ed POP
0x2ee GAS
0x2ef CALL
0x2f0 ISZERO
0x2f1 DUP1
0x2f2 ISZERO
0x2f3 PUSH2 0x300
0x2f6 JUMPI
---
0x2ec: JUMPDEST 
0x2ee: V167 = GAS
0x2ef: V168 = CALL V167 V88 0x0 V159 V160 V159 0x0
0x2f0: V169 = ISZERO V168
0x2f2: V170 = ISZERO V169
0x2f3: V171 = 0x300
0x2f6: JUMPI 0x300 V170
---
Entry stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V156, 0x0, V159, V160, V159, 0x0, V88, V163]
Stack pops: 7
Stack additions: [V169]
Exit stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V156, V169]

================================

Block 0x2f7
[0x2f7:0x2ff]
---
Predecessors: [0x2ec]
Successors: []
---
0x2f7 RETURNDATASIZE
0x2f8 PUSH1 0x0
0x2fa DUP1
0x2fb RETURNDATACOPY
0x2fc RETURNDATASIZE
0x2fd PUSH1 0x0
0x2ff REVERT
---
0x2f7: V172 = RETURNDATASIZE
0x2f8: V173 = 0x0
0x2fb: RETURNDATACOPY 0x0 0x0 V172
0x2fc: V174 = RETURNDATASIZE
0x2fd: V175 = 0x0
0x2ff: REVERT 0x0 V174
---
Entry stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V156, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V156, V169]

================================

Block 0x300
[0x300:0x327]
---
Predecessors: [0x2ec]
Successors: [0x328, 0x32c]
---
0x300 JUMPDEST
0x301 POP
0x302 POP
0x303 POP
0x304 POP
0x305 ADDRESS
0x306 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31b AND
0x31c BALANCE
0x31d SWAP1
0x31e POP
0x31f DUP2
0x320 DUP2
0x321 GT
0x322 ISZERO
0x323 ISZERO
0x324 PUSH2 0x32c
0x327 JUMPI
---
0x300: JUMPDEST 
0x305: V176 = ADDRESS
0x306: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x31c: V179 = BALANCE V178
0x321: V180 = GT V179 V30
0x322: V181 = ISZERO V180
0x323: V182 = ISZERO V181
0x324: V183 = 0x32c
0x327: JUMPI 0x32c V182
---
Entry stack: [V11, 0x56, V30, 0x0, V88, 0x6c11bcd3, V156, V169]
Stack pops: 6
Stack additions: [S5, V179]
Exit stack: [V11, 0x56, V30, V179]

================================

Block 0x328
[0x328:0x32b]
---
Predecessors: [0x300]
Successors: []
---
0x328 PUSH1 0x0
0x32a DUP1
0x32b REVERT
---
0x328: V184 = 0x0
0x32b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V30, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V30, V179]

================================

Block 0x32c
[0x32c:0x3a0]
---
Predecessors: [0x300]
Successors: [0x3a1, 0x3aa]
---
0x32c JUMPDEST
0x32d PUSH1 0x0
0x32f DUP1
0x330 SWAP1
0x331 SLOAD
0x332 SWAP1
0x333 PUSH2 0x100
0x336 EXP
0x337 SWAP1
0x338 DIV
0x339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34e AND
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 AND
0x365 PUSH2 0x8fc
0x368 ADDRESS
0x369 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37e AND
0x37f BALANCE
0x380 SWAP1
0x381 DUP2
0x382 ISZERO
0x383 MUL
0x384 SWAP1
0x385 PUSH1 0x40
0x387 MLOAD
0x388 PUSH1 0x0
0x38a PUSH1 0x40
0x38c MLOAD
0x38d DUP1
0x38e DUP4
0x38f SUB
0x390 DUP2
0x391 DUP6
0x392 DUP9
0x393 DUP9
0x394 CALL
0x395 SWAP4
0x396 POP
0x397 POP
0x398 POP
0x399 POP
0x39a ISZERO
0x39b DUP1
0x39c ISZERO
0x39d PUSH2 0x3aa
0x3a0 JUMPI
---
0x32c: JUMPDEST 
0x32d: V185 = 0x0
0x331: V186 = S[0x0]
0x333: V187 = 0x100
0x336: V188 = EXP 0x100 0x0
0x338: V189 = DIV V186 0x1
0x339: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x34f: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x365: V194 = 0x8fc
0x368: V195 = ADDRESS
0x369: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x37f: V198 = BALANCE V197
0x382: V199 = ISZERO V198
0x383: V200 = MUL V199 0x8fc
0x385: V201 = 0x40
0x387: V202 = M[0x40]
0x388: V203 = 0x0
0x38a: V204 = 0x40
0x38c: V205 = M[0x40]
0x38f: V206 = SUB V202 V205
0x394: V207 = CALL V200 V193 V198 V205 V206 V205 0x0
0x39a: V208 = ISZERO V207
0x39c: V209 = ISZERO V208
0x39d: V210 = 0x3aa
0x3a0: JUMPI 0x3aa V209
---
Entry stack: [V11, 0x56, V30, V179]
Stack pops: 0
Stack additions: [V208]
Exit stack: [V11, 0x56, V30, V179, V208]

================================

Block 0x3a1
[0x3a1:0x3a9]
---
Predecessors: [0x32c]
Successors: []
---
0x3a1 RETURNDATASIZE
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 RETURNDATACOPY
0x3a6 RETURNDATASIZE
0x3a7 PUSH1 0x0
0x3a9 REVERT
---
0x3a1: V211 = RETURNDATASIZE
0x3a2: V212 = 0x0
0x3a5: RETURNDATACOPY 0x0 0x0 V211
0x3a6: V213 = RETURNDATASIZE
0x3a7: V214 = 0x0
0x3a9: REVERT 0x0 V213
---
Entry stack: [V11, 0x56, V30, V179, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V30, V179, V208]

================================

Block 0x3aa
[0x3aa:0x3ae]
---
Predecessors: [0x32c]
Successors: [0x56]
---
0x3aa JUMPDEST
0x3ab POP
0x3ac POP
0x3ad POP
0x3ae JUMP
---
0x3aa: JUMPDEST 
0x3ae: JUMP 0x56
---
Entry stack: [V11, 0x56, V30, V179, V208]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x3af
[0x3af:0x405]
---
Predecessors: [0x64]
Successors: [0x406, 0x40a]
---
0x3af JUMPDEST
0x3b0 PUSH1 0x0
0x3b2 DUP1
0x3b3 SWAP1
0x3b4 SLOAD
0x3b5 SWAP1
0x3b6 PUSH2 0x100
0x3b9 EXP
0x3ba SWAP1
0x3bb DIV
0x3bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d1 AND
0x3d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e7 AND
0x3e8 CALLER
0x3e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fe AND
0x3ff EQ
0x400 ISZERO
0x401 ISZERO
0x402 PUSH2 0x40a
0x405 JUMPI
---
0x3af: JUMPDEST 
0x3b0: V215 = 0x0
0x3b4: V216 = S[0x0]
0x3b6: V217 = 0x100
0x3b9: V218 = EXP 0x100 0x0
0x3bb: V219 = DIV V216 0x1
0x3bc: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d1: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x3d2: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e7: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x3e8: V224 = CALLER
0x3e9: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fe: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x3ff: V227 = EQ V226 V223
0x400: V228 = ISZERO V227
0x401: V229 = ISZERO V228
0x402: V230 = 0x40a
0x405: JUMPI 0x40a V229
---
Entry stack: [V11, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6d]

================================

Block 0x406
[0x406:0x409]
---
Predecessors: [0x3af]
Successors: []
---
0x406 PUSH1 0x0
0x408 DUP1
0x409 REVERT
---
0x406: V231 = 0x0
0x409: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6d]

================================

Block 0x40a
[0x40a:0x443]
---
Predecessors: [0x3af]
Successors: []
---
0x40a JUMPDEST
0x40b PUSH1 0x0
0x40d DUP1
0x40e SWAP1
0x40f SLOAD
0x410 SWAP1
0x411 PUSH2 0x100
0x414 EXP
0x415 SWAP1
0x416 DIV
0x417 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42c AND
0x42d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x442 AND
0x443 SELFDESTRUCT
---
0x40a: JUMPDEST 
0x40b: V232 = 0x0
0x40f: V233 = S[0x0]
0x411: V234 = 0x100
0x414: V235 = EXP 0x100 0x0
0x416: V236 = DIV V233 0x1
0x417: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x42c: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x42d: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x442: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x443: SELFDESTRUCT V240
---
Entry stack: [V11, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6d]

================================

Block 0x444
[0x444:0x46f]
---
Predecessors: []
Successors: []
---
0x444 STOP
0x445 LOG1
0x446 PUSH6 0x627a7a723058
0x44d SHA3
0x44e MISSING 0x46
0x44f MISSING 0xd3
0x450 DUP7
0x451 MISSING 0xce
0x452 LOG2
0x453 EXTCODECOPY
0x454 SELFDESTRUCT
0x455 SWAP11
0x456 DUP8
0x457 DUP11
0x458 ADD
0x459 PUSH14 0xfc0d119c45f715216c8052efeda1
0x468 MISSING 0xc5
0x469 PUSH2 0xc589
0x46c MISSING 0xb3
0x46d MISSING 0x4c
0x46e STOP
0x46f MISSING 0x29
---
0x444: STOP 
0x445: LOG S0 S1 S2
0x446: V241 = 0x627a7a723058
0x44d: V242 = SHA3 0x627a7a723058 S3
0x44e: MISSING 0x46
0x44f: MISSING 0xd3
0x451: MISSING 0xce
0x452: LOG S0 S1 S2 S3
0x453: EXTCODECOPY S4 S5 S6 S7
0x454: SELFDESTRUCT S8
0x458: V243 = ADD S9 S7
0x459: V244 = 0xfc0d119c45f715216c8052efeda1
0x468: MISSING 0xc5
0x469: V245 = 0xc589
0x46c: MISSING 0xb3
0x46d: MISSING 0x4c
0x46e: STOP 
0x46f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V242, S6, S0, S1, S2, S3, S4, S5, S6, 0xfc0d119c45f715216c8052efeda1, V243, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, 0xc589]
Exit stack: []

================================

Function 0:
Public function signature: 0x562e0f13
Entry block: 0x4e
Exit block: 0x56
Body: 0x4e, 0x56, 0x6f, 0x147, 0x14b, 0x156, 0x15f, 0x25b, 0x25f, 0x26a, 0x273, 0x285, 0x289, 0x2e8, 0x2ec, 0x2f7, 0x300, 0x328, 0x32c, 0x3a1, 0x3aa

Function 1:
Public function signature: 0xf6c5c80d
Entry block: 0x58
Exit block: 0x406
Body: 0x58, 0x60, 0x64, 0x3af, 0x406, 0x40a

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

