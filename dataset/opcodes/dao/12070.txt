Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xab]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xab
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xab
0xc: JUMPI 0xab V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x140]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x6fdde03
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x140
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x6fdde03
0x22: V15 = EQ V13 0x6fdde03
0x23: V16 = 0x140
0x26: JUMPI 0x140 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x1ca]
---
0x27 DUP1
0x28 PUSH4 0x10639ea0
0x2d EQ
0x2e PUSH2 0x1ca
0x31 JUMPI
---
0x28: V17 = 0x10639ea0
0x2d: V18 = EQ 0x10639ea0 V13
0x2e: V19 = 0x1ca
0x31: JUMPI 0x1ca V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1f3]
---
0x32 DUP1
0x33 PUSH4 0x112dcbd8
0x38 EQ
0x39 PUSH2 0x1f3
0x3c JUMPI
---
0x33: V20 = 0x112dcbd8
0x38: V21 = EQ 0x112dcbd8 V13
0x39: V22 = 0x1f3
0x3c: JUMPI 0x1f3 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x224]
---
0x3d DUP1
0x3e PUSH4 0x200d2ed2
0x43 EQ
0x44 PUSH2 0x224
0x47 JUMPI
---
0x3e: V23 = 0x200d2ed2
0x43: V24 = EQ 0x200d2ed2 V13
0x44: V25 = 0x224
0x47: JUMPI 0x224 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x265]
---
0x48 DUP1
0x49 PUSH4 0x28b7bede
0x4e EQ
0x4f PUSH2 0x265
0x52 JUMPI
---
0x49: V26 = 0x28b7bede
0x4e: V27 = EQ 0x28b7bede V13
0x4f: V28 = 0x265
0x52: JUMPI 0x265 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x27a]
---
0x53 DUP1
0x54 PUSH4 0x60d704db
0x59 EQ
0x5a PUSH2 0x27a
0x5d JUMPI
---
0x54: V29 = 0x60d704db
0x59: V30 = EQ 0x60d704db V13
0x5a: V31 = 0x27a
0x5d: JUMPI 0x27a V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x28f]
---
0x5e DUP1
0x5f PUSH4 0x66d38203
0x64 EQ
0x65 PUSH2 0x28f
0x68 JUMPI
---
0x5f: V32 = 0x66d38203
0x64: V33 = EQ 0x66d38203 V13
0x65: V34 = 0x28f
0x68: JUMPI 0x28f V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x2b2]
---
0x69 DUP1
0x6a PUSH4 0x7c784a01
0x6f EQ
0x70 PUSH2 0x2b2
0x73 JUMPI
---
0x6a: V35 = 0x7c784a01
0x6f: V36 = EQ 0x7c784a01 V13
0x70: V37 = 0x2b2
0x73: JUMPI 0x2b2 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x2c7]
---
0x74 DUP1
0x75 PUSH4 0x88d761f2
0x7a EQ
0x7b PUSH2 0x2c7
0x7e JUMPI
---
0x75: V38 = 0x88d761f2
0x7a: V39 = EQ 0x88d761f2 V13
0x7b: V40 = 0x2c7
0x7e: JUMPI 0x2c7 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x2dc]
---
0x7f DUP1
0x80 PUSH4 0xa0f52da0
0x85 EQ
0x86 PUSH2 0x2dc
0x89 JUMPI
---
0x80: V41 = 0xa0f52da0
0x85: V42 = EQ 0xa0f52da0 V13
0x86: V43 = 0x2dc
0x89: JUMPI 0x2dc V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x2fd]
---
0x8a DUP1
0x8b PUSH4 0xca628c78
0x90 EQ
0x91 PUSH2 0x2fd
0x94 JUMPI
---
0x8b: V44 = 0xca628c78
0x90: V45 = EQ 0xca628c78 V13
0x91: V46 = 0x2fd
0x94: JUMPI 0x2fd V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x312]
---
0x95 DUP1
0x96 PUSH4 0xd0e30db0
0x9b EQ
0x9c PUSH2 0x312
0x9f JUMPI
---
0x96: V47 = 0xd0e30db0
0x9b: V48 = EQ 0xd0e30db0 V13
0x9c: V49 = 0x312
0x9f: JUMPI 0x312 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x31a]
---
0xa0 DUP1
0xa1 PUSH4 0xf77ed310
0xa6 EQ
0xa7 PUSH2 0x31a
0xaa JUMPI
---
0xa1: V50 = 0xf77ed310
0xa6: V51 = EQ 0xf77ed310 V13
0xa7: V52 = 0x31a
0xaa: JUMPI 0x31a V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0x10c]
---
Predecessors: [0x0, 0xa0]
Successors: [0x10d, 0x111]
---
0xab JUMPDEST
0xac PUSH1 0x4
0xae DUP1
0xaf SLOAD
0xb0 PUSH1 0x40
0xb2 DUP1
0xb3 MLOAD
0xb4 PUSH32 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xd5 DUP2
0xd6 MSTORE
0xd7 PUSH1 0x1
0xd9 PUSH1 0xa0
0xdb PUSH1 0x2
0xdd EXP
0xde SUB
0xdf SWAP1
0xe0 SWAP3
0xe1 AND
0xe2 SWAP3
0xe3 DUP3
0xe4 ADD
0xe5 DUP4
0xe6 SWAP1
0xe7 MSTORE
0xe8 MLOAD
0xe9 PUSH4 0xf340fa01
0xee SWAP2
0xef ADDRESS
0xf0 BALANCE
0xf1 SWAP2
0xf2 PUSH1 0x24
0xf4 DUP1
0xf5 DUP4
0xf6 ADD
0xf7 SWAP3
0xf8 PUSH1 0x20
0xfa SWAP3
0xfb SWAP2
0xfc SWAP1
0xfd DUP3
0xfe SWAP1
0xff SUB
0x100 ADD
0x101 DUP2
0x102 DUP6
0x103 DUP9
0x104 DUP1
0x105 EXTCODESIZE
0x106 ISZERO
0x107 DUP1
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0xab: JUMPDEST 
0xac: V53 = 0x4
0xaf: V54 = S[0x4]
0xb0: V55 = 0x40
0xb3: V56 = M[0x40]
0xb4: V57 = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xd6: M[V56] = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0xd7: V58 = 0x1
0xd9: V59 = 0xa0
0xdb: V60 = 0x2
0xdd: V61 = EXP 0x2 0xa0
0xde: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1: V63 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V64 = ADD V56 0x4
0xe7: M[V64] = V63
0xe8: V65 = M[0x40]
0xe9: V66 = 0xf340fa01
0xef: V67 = ADDRESS
0xf0: V68 = BALANCE V67
0xf2: V69 = 0x24
0xf6: V70 = ADD V56 0x24
0xf8: V71 = 0x20
0xff: V72 = SUB V56 V65
0x100: V73 = ADD V72 0x24
0x105: V74 = EXTCODESIZE V63
0x106: V75 = ISZERO V74
0x108: V76 = ISZERO V75
0x109: V77 = 0x111
0x10c: JUMPI 0x111 V76
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V63, 0xf340fa01, V68, V70, 0x20, V65, V73, V65, V68, V63, V75]
Exit stack: [V13, V63, 0xf340fa01, V68, V70, 0x20, V65, V73, V65, V68, V63, V75]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0xab]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V78 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V13, V63, 0xf340fa01, V68, V70, 0x20, V65, V73, V65, V68, V63, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V63, 0xf340fa01, V68, V70, 0x20, V65, V73, V65, V68, V63, V75]

================================

Block 0x111
[0x111:0x11b]
---
Predecessors: [0xab]
Successors: [0x11c, 0x125]
---
0x111 JUMPDEST
0x112 POP
0x113 GAS
0x114 CALL
0x115 ISZERO
0x116 DUP1
0x117 ISZERO
0x118 PUSH2 0x125
0x11b JUMPI
---
0x111: JUMPDEST 
0x113: V79 = GAS
0x114: V80 = CALL V79 V63 V68 V65 V73 V65 0x20
0x115: V81 = ISZERO V80
0x117: V82 = ISZERO V81
0x118: V83 = 0x125
0x11b: JUMPI 0x125 V82
---
Entry stack: [V13, V63, 0xf340fa01, V68, V70, 0x20, V65, V73, V65, V68, V63, V75]
Stack pops: 7
Stack additions: [V81]
Exit stack: [V13, V63, 0xf340fa01, V68, V70, V81]

================================

Block 0x11c
[0x11c:0x124]
---
Predecessors: [0x111]
Successors: []
---
0x11c RETURNDATASIZE
0x11d PUSH1 0x0
0x11f DUP1
0x120 RETURNDATACOPY
0x121 RETURNDATASIZE
0x122 PUSH1 0x0
0x124 REVERT
---
0x11c: V84 = RETURNDATASIZE
0x11d: V85 = 0x0
0x120: RETURNDATACOPY 0x0 0x0 V84
0x121: V86 = RETURNDATASIZE
0x122: V87 = 0x0
0x124: REVERT 0x0 V86
---
Entry stack: [V13, V63, 0xf340fa01, V68, V70, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V63, 0xf340fa01, V68, V70, V81]

================================

Block 0x125
[0x125:0x137]
---
Predecessors: [0x111]
Successors: [0x138, 0x13c]
---
0x125 JUMPDEST
0x126 POP
0x127 POP
0x128 POP
0x129 POP
0x12a POP
0x12b PUSH1 0x40
0x12d MLOAD
0x12e RETURNDATASIZE
0x12f PUSH1 0x20
0x131 DUP2
0x132 LT
0x133 ISZERO
0x134 PUSH2 0x13c
0x137 JUMPI
---
0x125: JUMPDEST 
0x12b: V88 = 0x40
0x12d: V89 = M[0x40]
0x12e: V90 = RETURNDATASIZE
0x12f: V91 = 0x20
0x132: V92 = LT V90 0x20
0x133: V93 = ISZERO V92
0x134: V94 = 0x13c
0x137: JUMPI 0x13c V93
---
Entry stack: [V13, V63, 0xf340fa01, V68, V70, V81]
Stack pops: 5
Stack additions: [V89, V90]
Exit stack: [V13, V89, V90]

================================

Block 0x138
[0x138:0x13b]
---
Predecessors: [0x125]
Successors: []
---
0x138 PUSH1 0x0
0x13a DUP1
0x13b REVERT
---
0x138: V95 = 0x0
0x13b: REVERT 0x0 0x0
---
Entry stack: [V13, V89, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V89, V90]

================================

Block 0x13c
[0x13c:0x13f]
---
Predecessors: [0x125]
Successors: []
---
0x13c JUMPDEST
0x13d POP
0x13e POP
0x13f STOP
---
0x13c: JUMPDEST 
0x13f: STOP 
---
Entry stack: [V13, V89, V90]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x140
[0x140:0x147]
---
Predecessors: [0xd]
Successors: [0x148, 0x14c]
---
0x140 JUMPDEST
0x141 CALLVALUE
0x142 DUP1
0x143 ISZERO
0x144 PUSH2 0x14c
0x147 JUMPI
---
0x140: JUMPDEST 
0x141: V96 = CALLVALUE
0x143: V97 = ISZERO V96
0x144: V98 = 0x14c
0x147: JUMPI 0x14c V97
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V13, V96]

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0x140]
Successors: []
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
---
0x148: V99 = 0x0
0x14b: REVERT 0x0 0x0
---
Entry stack: [V13, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V96]

================================

Block 0x14c
[0x14c:0x154]
---
Predecessors: [0x140]
Successors: [0x32f]
---
0x14c JUMPDEST
0x14d POP
0x14e PUSH2 0x155
0x151 PUSH2 0x32f
0x154 JUMP
---
0x14c: JUMPDEST 
0x14e: V100 = 0x155
0x151: V101 = 0x32f
0x154: JUMP 0x32f
---
Entry stack: [V13, V96]
Stack pops: 1
Stack additions: [0x155]
Exit stack: [V13, 0x155]

================================

Block 0x155
[0x155:0x176]
---
Predecessors: [0x3b5]
Successors: [0x177]
---
0x155 JUMPDEST
0x156 PUSH1 0x40
0x158 DUP1
0x159 MLOAD
0x15a PUSH1 0x20
0x15c DUP1
0x15d DUP3
0x15e MSTORE
0x15f DUP4
0x160 MLOAD
0x161 DUP2
0x162 DUP4
0x163 ADD
0x164 MSTORE
0x165 DUP4
0x166 MLOAD
0x167 SWAP2
0x168 SWAP3
0x169 DUP4
0x16a SWAP3
0x16b SWAP1
0x16c DUP4
0x16d ADD
0x16e SWAP2
0x16f DUP6
0x170 ADD
0x171 SWAP1
0x172 DUP1
0x173 DUP4
0x174 DUP4
0x175 PUSH1 0x0
---
0x155: JUMPDEST 
0x156: V102 = 0x40
0x159: V103 = M[0x40]
0x15a: V104 = 0x20
0x15e: M[V103] = 0x20
0x160: V105 = M[V265]
0x163: V106 = ADD V103 0x20
0x164: M[V106] = V105
0x166: V107 = M[V265]
0x16d: V108 = ADD V103 0x40
0x170: V109 = ADD V265 0x20
0x175: V110 = 0x0
---
Entry stack: [V13, 0x155, V265]
Stack pops: 1
Stack additions: [S0, V103, V103, V108, V109, V107, V107, V108, V109, 0x0]
Exit stack: [V13, 0x155, V265, V103, V103, V108, V109, V107, V107, V108, V109, 0x0]

================================

Block 0x177
[0x177:0x17f]
---
Predecessors: [0x155, 0x180]
Successors: [0x180, 0x18f]
---
0x177 JUMPDEST
0x178 DUP4
0x179 DUP2
0x17a LT
0x17b ISZERO
0x17c PUSH2 0x18f
0x17f JUMPI
---
0x177: JUMPDEST 
0x17a: V111 = LT S0 V107
0x17b: V112 = ISZERO V111
0x17c: V113 = 0x18f
0x17f: JUMPI 0x18f V112
---
Entry stack: [V13, 0x155, V265, V103, V103, V108, V109, V107, V107, V108, V109, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x155, V265, V103, V103, V108, V109, V107, V107, V108, V109, S0]

================================

Block 0x180
[0x180:0x18e]
---
Predecessors: [0x177]
Successors: [0x177]
---
0x180 DUP2
0x181 DUP2
0x182 ADD
0x183 MLOAD
0x184 DUP4
0x185 DUP3
0x186 ADD
0x187 MSTORE
0x188 PUSH1 0x20
0x18a ADD
0x18b PUSH2 0x177
0x18e JUMP
---
0x182: V114 = ADD S0 V109
0x183: V115 = M[V114]
0x186: V116 = ADD S0 V108
0x187: M[V116] = V115
0x188: V117 = 0x20
0x18a: V118 = ADD 0x20 S0
0x18b: V119 = 0x177
0x18e: JUMP 0x177
---
Entry stack: [V13, 0x155, V265, V103, V103, V108, V109, V107, V107, V108, V109, S0]
Stack pops: 3
Stack additions: [S2, S1, V118]
Exit stack: [V13, 0x155, V265, V103, V103, V108, V109, V107, V107, V108, V109, V118]

================================

Block 0x18f
[0x18f:0x1a2]
---
Predecessors: [0x177]
Successors: [0x1a3, 0x1bc]
---
0x18f JUMPDEST
0x190 POP
0x191 POP
0x192 POP
0x193 POP
0x194 SWAP1
0x195 POP
0x196 SWAP1
0x197 DUP2
0x198 ADD
0x199 SWAP1
0x19a PUSH1 0x1f
0x19c AND
0x19d DUP1
0x19e ISZERO
0x19f PUSH2 0x1bc
0x1a2 JUMPI
---
0x18f: JUMPDEST 
0x198: V120 = ADD V107 V108
0x19a: V121 = 0x1f
0x19c: V122 = AND 0x1f V107
0x19e: V123 = ISZERO V122
0x19f: V124 = 0x1bc
0x1a2: JUMPI 0x1bc V123
---
Entry stack: [V13, 0x155, V265, V103, V103, V108, V109, V107, V107, V108, V109, S0]
Stack pops: 7
Stack additions: [V120, V122]
Exit stack: [V13, 0x155, V265, V103, V103, V120, V122]

================================

Block 0x1a3
[0x1a3:0x1bb]
---
Predecessors: [0x18f]
Successors: [0x1bc]
---
0x1a3 DUP1
0x1a4 DUP3
0x1a5 SUB
0x1a6 DUP1
0x1a7 MLOAD
0x1a8 PUSH1 0x1
0x1aa DUP4
0x1ab PUSH1 0x20
0x1ad SUB
0x1ae PUSH2 0x100
0x1b1 EXP
0x1b2 SUB
0x1b3 NOT
0x1b4 AND
0x1b5 DUP2
0x1b6 MSTORE
0x1b7 PUSH1 0x20
0x1b9 ADD
0x1ba SWAP2
0x1bb POP
---
0x1a5: V125 = SUB V120 V122
0x1a7: V126 = M[V125]
0x1a8: V127 = 0x1
0x1ab: V128 = 0x20
0x1ad: V129 = SUB 0x20 V122
0x1ae: V130 = 0x100
0x1b1: V131 = EXP 0x100 V129
0x1b2: V132 = SUB V131 0x1
0x1b3: V133 = NOT V132
0x1b4: V134 = AND V133 V126
0x1b6: M[V125] = V134
0x1b7: V135 = 0x20
0x1b9: V136 = ADD 0x20 V125
---
Entry stack: [V13, 0x155, V265, V103, V103, V120, V122]
Stack pops: 2
Stack additions: [V136, S0]
Exit stack: [V13, 0x155, V265, V103, V103, V136, V122]

================================

Block 0x1bc
[0x1bc:0x1c9]
---
Predecessors: [0x18f, 0x1a3]
Successors: []
---
0x1bc JUMPDEST
0x1bd POP
0x1be SWAP3
0x1bf POP
0x1c0 POP
0x1c1 POP
0x1c2 PUSH1 0x40
0x1c4 MLOAD
0x1c5 DUP1
0x1c6 SWAP2
0x1c7 SUB
0x1c8 SWAP1
0x1c9 RETURN
---
0x1bc: JUMPDEST 
0x1c2: V137 = 0x40
0x1c4: V138 = M[0x40]
0x1c7: V139 = SUB S1 V138
0x1c9: RETURN V138 V139
---
Entry stack: [V13, 0x155, V265, V103, V103, S1, V122]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x155]

================================

Block 0x1ca
[0x1ca:0x1d1]
---
Predecessors: [0x27]
Successors: [0x1d2, 0x1d6]
---
0x1ca JUMPDEST
0x1cb CALLVALUE
0x1cc DUP1
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V140 = CALLVALUE
0x1cd: V141 = ISZERO V140
0x1ce: V142 = 0x1d6
0x1d1: JUMPI 0x1d6 V141
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V140]
Exit stack: [V13, V140]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V143 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V13, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V140]

================================

Block 0x1d6
[0x1d6:0x1de]
---
Predecessors: [0x1ca]
Successors: [0x3bd]
---
0x1d6 JUMPDEST
0x1d7 POP
0x1d8 PUSH2 0x1df
0x1db PUSH2 0x3bd
0x1de JUMP
---
0x1d6: JUMPDEST 
0x1d8: V144 = 0x1df
0x1db: V145 = 0x3bd
0x1de: JUMP 0x3bd
---
Entry stack: [V13, V140]
Stack pops: 1
Stack additions: [0x1df]
Exit stack: [V13, 0x1df]

================================

Block 0x1df
[0x1df:0x1f2]
---
Predecessors: [0x48f, 0xbaa, 0xd3f]
Successors: []
---
0x1df JUMPDEST
0x1e0 PUSH1 0x40
0x1e2 DUP1
0x1e3 MLOAD
0x1e4 SWAP2
0x1e5 ISZERO
0x1e6 ISZERO
0x1e7 DUP3
0x1e8 MSTORE
0x1e9 MLOAD
0x1ea SWAP1
0x1eb DUP2
0x1ec SWAP1
0x1ed SUB
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 SWAP1
0x1f2 RETURN
---
0x1df: JUMPDEST 
0x1e0: V146 = 0x40
0x1e3: V147 = M[0x40]
0x1e5: V148 = ISZERO {0x0, 0x1}
0x1e6: V149 = ISZERO V148
0x1e8: M[V147] = V149
0x1e9: V150 = M[0x40]
0x1ed: V151 = SUB V147 V150
0x1ee: V152 = 0x20
0x1f0: V153 = ADD 0x20 V151
0x1f2: RETURN V150 V153
---
Entry stack: [V13, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f3
[0x1f3:0x1fa]
---
Predecessors: [0x32]
Successors: [0x1fb, 0x1ff]
---
0x1f3 JUMPDEST
0x1f4 CALLVALUE
0x1f5 DUP1
0x1f6 ISZERO
0x1f7 PUSH2 0x1ff
0x1fa JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V154 = CALLVALUE
0x1f6: V155 = ISZERO V154
0x1f7: V156 = 0x1ff
0x1fa: JUMPI 0x1ff V155
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V13, V154]

================================

Block 0x1fb
[0x1fb:0x1fe]
---
Predecessors: [0x1f3]
Successors: []
---
0x1fb PUSH1 0x0
0x1fd DUP1
0x1fe REVERT
---
0x1fb: V157 = 0x0
0x1fe: REVERT 0x0 0x0
---
Entry stack: [V13, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V154]

================================

Block 0x1ff
[0x1ff:0x207]
---
Predecessors: [0x1f3]
Successors: [0x492]
---
0x1ff JUMPDEST
0x200 POP
0x201 PUSH2 0x208
0x204 PUSH2 0x492
0x207 JUMP
---
0x1ff: JUMPDEST 
0x201: V158 = 0x208
0x204: V159 = 0x492
0x207: JUMP 0x492
---
Entry stack: [V13, V154]
Stack pops: 1
Stack additions: [0x208]
Exit stack: [V13, 0x208]

================================

Block 0x208
[0x208:0x223]
---
Predecessors: [0x5a4, 0x671]
Successors: []
---
0x208 JUMPDEST
0x209 PUSH1 0x40
0x20b DUP1
0x20c MLOAD
0x20d PUSH1 0x1
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SUB
0x215 SWAP1
0x216 SWAP3
0x217 AND
0x218 DUP3
0x219 MSTORE
0x21a MLOAD
0x21b SWAP1
0x21c DUP2
0x21d SWAP1
0x21e SUB
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP1
0x223 RETURN
---
0x208: JUMPDEST 
0x209: V160 = 0x40
0x20c: V161 = M[0x40]
0x20d: V162 = 0x1
0x20f: V163 = 0xa0
0x211: V164 = 0x2
0x213: V165 = EXP 0x2 0xa0
0x214: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x217: V167 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x219: M[V161] = V167
0x21a: V168 = M[0x40]
0x21e: V169 = SUB V161 V168
0x21f: V170 = 0x20
0x221: V171 = ADD 0x20 V169
0x223: RETURN V168 V171
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x224
[0x224:0x22b]
---
Predecessors: [0x3d]
Successors: [0x22c, 0x230]
---
0x224 JUMPDEST
0x225 CALLVALUE
0x226 DUP1
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x224: JUMPDEST 
0x225: V172 = CALLVALUE
0x227: V173 = ISZERO V172
0x228: V174 = 0x230
0x22b: JUMPI 0x230 V173
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V172]
Exit stack: [V13, V172]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x224]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V175 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V13, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V172]

================================

Block 0x230
[0x230:0x238]
---
Predecessors: [0x224]
Successors: [0x5ab]
---
0x230 JUMPDEST
0x231 POP
0x232 PUSH2 0x239
0x235 PUSH2 0x5ab
0x238 JUMP
---
0x230: JUMPDEST 
0x232: V176 = 0x239
0x235: V177 = 0x5ab
0x238: JUMP 0x5ab
---
Entry stack: [V13, V172]
Stack pops: 1
Stack additions: [0x239]
Exit stack: [V13, 0x239]

================================

Block 0x239
[0x239:0x264]
---
Predecessors: [0x5ab]
Successors: []
---
0x239 JUMPDEST
0x23a PUSH1 0x40
0x23c DUP1
0x23d MLOAD
0x23e PUSH1 0x1
0x240 PUSH1 0xa0
0x242 PUSH1 0x2
0x244 EXP
0x245 SUB
0x246 SWAP5
0x247 DUP6
0x248 AND
0x249 DUP2
0x24a MSTORE
0x24b SWAP3
0x24c SWAP1
0x24d SWAP4
0x24e AND
0x24f PUSH1 0x20
0x251 DUP4
0x252 ADD
0x253 MSTORE
0x254 ISZERO
0x255 ISZERO
0x256 DUP2
0x257 DUP4
0x258 ADD
0x259 MSTORE
0x25a SWAP1
0x25b MLOAD
0x25c SWAP1
0x25d DUP2
0x25e SWAP1
0x25f SUB
0x260 PUSH1 0x60
0x262 ADD
0x263 SWAP1
0x264 RETURN
---
0x239: JUMPDEST 
0x23a: V178 = 0x40
0x23d: V179 = M[0x40]
0x23e: V180 = 0x1
0x240: V181 = 0xa0
0x242: V182 = 0x2
0x244: V183 = EXP 0x2 0xa0
0x245: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x248: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x24a: M[V179] = V185
0x24e: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x24f: V187 = 0x20
0x252: V188 = ADD V179 0x20
0x253: M[V188] = V186
0x254: V189 = ISZERO V448
0x255: V190 = ISZERO V189
0x258: V191 = ADD 0x40 V179
0x259: M[V191] = V190
0x25b: V192 = M[0x40]
0x25f: V193 = SUB V179 V192
0x260: V194 = 0x60
0x262: V195 = ADD 0x60 V193
0x264: RETURN V192 V195
---
Entry stack: [V13, V441, V442, V448]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x265
[0x265:0x26c]
---
Predecessors: [0x48]
Successors: [0x26d, 0x271]
---
0x265 JUMPDEST
0x266 CALLVALUE
0x267 DUP1
0x268 ISZERO
0x269 PUSH2 0x271
0x26c JUMPI
---
0x265: JUMPDEST 
0x266: V196 = CALLVALUE
0x268: V197 = ISZERO V196
0x269: V198 = 0x271
0x26c: JUMPI 0x271 V197
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V196]
Exit stack: [V13, V196]

================================

Block 0x26d
[0x26d:0x270]
---
Predecessors: [0x265]
Successors: []
---
0x26d PUSH1 0x0
0x26f DUP1
0x270 REVERT
---
0x26d: V199 = 0x0
0x270: REVERT 0x0 0x0
---
Entry stack: [V13, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V196]

================================

Block 0x271
[0x271:0x279]
---
Predecessors: [0x265]
Successors: [0x5cf]
---
0x271 JUMPDEST
0x272 POP
0x273 PUSH2 0x208
0x276 PUSH2 0x5cf
0x279 JUMP
---
0x271: JUMPDEST 
0x273: V200 = 0x208
0x276: V201 = 0x5cf
0x279: JUMP 0x5cf
---
Entry stack: [V13, V196]
Stack pops: 1
Stack additions: [0x208]
Exit stack: [V13, 0x208]

================================

Block 0x27a
[0x27a:0x281]
---
Predecessors: [0x53]
Successors: [0x282, 0x286]
---
0x27a JUMPDEST
0x27b CALLVALUE
0x27c DUP1
0x27d ISZERO
0x27e PUSH2 0x286
0x281 JUMPI
---
0x27a: JUMPDEST 
0x27b: V202 = CALLVALUE
0x27d: V203 = ISZERO V202
0x27e: V204 = 0x286
0x281: JUMPI 0x286 V203
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V202]
Exit stack: [V13, V202]

================================

Block 0x282
[0x282:0x285]
---
Predecessors: [0x27a]
Successors: []
---
0x282 PUSH1 0x0
0x284 DUP1
0x285 REVERT
---
0x282: V205 = 0x0
0x285: REVERT 0x0 0x0
---
Entry stack: [V13, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V202]

================================

Block 0x286
[0x286:0x28e]
---
Predecessors: [0x27a]
Successors: [0x681]
---
0x286 JUMPDEST
0x287 POP
0x288 PUSH2 0x208
0x28b PUSH2 0x681
0x28e JUMP
---
0x286: JUMPDEST 
0x288: V206 = 0x208
0x28b: V207 = 0x681
0x28e: JUMP 0x681
---
Entry stack: [V13, V202]
Stack pops: 1
Stack additions: [0x208]
Exit stack: [V13, 0x208]

================================

Block 0x28f
[0x28f:0x296]
---
Predecessors: [0x5e]
Successors: [0x297, 0x29b]
---
0x28f JUMPDEST
0x290 CALLVALUE
0x291 DUP1
0x292 ISZERO
0x293 PUSH2 0x29b
0x296 JUMPI
---
0x28f: JUMPDEST 
0x290: V208 = CALLVALUE
0x292: V209 = ISZERO V208
0x293: V210 = 0x29b
0x296: JUMPI 0x29b V209
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V208]
Exit stack: [V13, V208]

================================

Block 0x297
[0x297:0x29a]
---
Predecessors: [0x28f]
Successors: []
---
0x297 PUSH1 0x0
0x299 DUP1
0x29a REVERT
---
0x297: V211 = 0x0
0x29a: REVERT 0x0 0x0
---
Entry stack: [V13, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V208]

================================

Block 0x29b
[0x29b:0x2af]
---
Predecessors: [0x28f]
Successors: [0x769]
---
0x29b JUMPDEST
0x29c POP
0x29d PUSH2 0x2b0
0x2a0 PUSH1 0x1
0x2a2 PUSH1 0xa0
0x2a4 PUSH1 0x2
0x2a6 EXP
0x2a7 SUB
0x2a8 PUSH1 0x4
0x2aa CALLDATALOAD
0x2ab AND
0x2ac PUSH2 0x769
0x2af JUMP
---
0x29b: JUMPDEST 
0x29d: V212 = 0x2b0
0x2a0: V213 = 0x1
0x2a2: V214 = 0xa0
0x2a4: V215 = 0x2
0x2a6: V216 = EXP 0x2 0xa0
0x2a7: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a8: V218 = 0x4
0x2aa: V219 = CALLDATALOAD 0x4
0x2ab: V220 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x2ac: V221 = 0x769
0x2af: JUMP 0x769
---
Entry stack: [V13, V208]
Stack pops: 1
Stack additions: [0x2b0, V220]
Exit stack: [V13, 0x2b0, V220]

================================

Block 0x2b0
[0x2b0:0x2b1]
---
Predecessors: [0x917, 0xf30]
Successors: []
---
0x2b0 JUMPDEST
0x2b1 STOP
---
0x2b0: JUMPDEST 
0x2b1: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2b2
[0x2b2:0x2b9]
---
Predecessors: [0x69]
Successors: [0x2ba, 0x2be]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 DUP1
0x2b5 ISZERO
0x2b6 PUSH2 0x2be
0x2b9 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V222 = CALLVALUE
0x2b5: V223 = ISZERO V222
0x2b6: V224 = 0x2be
0x2b9: JUMPI 0x2be V223
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V222]
Exit stack: [V13, V222]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x2b2]
Successors: []
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
---
0x2ba: V225 = 0x0
0x2bd: REVERT 0x0 0x0
---
Entry stack: [V13, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V222]

================================

Block 0x2be
[0x2be:0x2c6]
---
Predecessors: [0x2b2]
Successors: [0x966]
---
0x2be JUMPDEST
0x2bf POP
0x2c0 PUSH2 0x208
0x2c3 PUSH2 0x966
0x2c6 JUMP
---
0x2be: JUMPDEST 
0x2c0: V226 = 0x208
0x2c3: V227 = 0x966
0x2c6: JUMP 0x966
---
Entry stack: [V13, V222]
Stack pops: 1
Stack additions: [0x208]
Exit stack: [V13, 0x208]

================================

Block 0x2c7
[0x2c7:0x2ce]
---
Predecessors: [0x74]
Successors: [0x2cf, 0x2d3]
---
0x2c7 JUMPDEST
0x2c8 CALLVALUE
0x2c9 DUP1
0x2ca ISZERO
0x2cb PUSH2 0x2d3
0x2ce JUMPI
---
0x2c7: JUMPDEST 
0x2c8: V228 = CALLVALUE
0x2ca: V229 = ISZERO V228
0x2cb: V230 = 0x2d3
0x2ce: JUMPI 0x2d3 V229
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V228]
Exit stack: [V13, V228]

================================

Block 0x2cf
[0x2cf:0x2d2]
---
Predecessors: [0x2c7]
Successors: []
---
0x2cf PUSH1 0x0
0x2d1 DUP1
0x2d2 REVERT
---
0x2cf: V231 = 0x0
0x2d2: REVERT 0x0 0x0
---
Entry stack: [V13, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V228]

================================

Block 0x2d3
[0x2d3:0x2db]
---
Predecessors: [0x2c7]
Successors: [0xa4e]
---
0x2d3 JUMPDEST
0x2d4 POP
0x2d5 PUSH2 0x1df
0x2d8 PUSH2 0xa4e
0x2db JUMP
---
0x2d3: JUMPDEST 
0x2d5: V232 = 0x1df
0x2d8: V233 = 0xa4e
0x2db: JUMP 0xa4e
---
Entry stack: [V13, V228]
Stack pops: 1
Stack additions: [0x1df]
Exit stack: [V13, 0x1df]

================================

Block 0x2dc
[0x2dc:0x2e3]
---
Predecessors: [0x7f]
Successors: [0x2e4, 0x2e8]
---
0x2dc JUMPDEST
0x2dd CALLVALUE
0x2de DUP1
0x2df ISZERO
0x2e0 PUSH2 0x2e8
0x2e3 JUMPI
---
0x2dc: JUMPDEST 
0x2dd: V234 = CALLVALUE
0x2df: V235 = ISZERO V234
0x2e0: V236 = 0x2e8
0x2e3: JUMPI 0x2e8 V235
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V234]
Exit stack: [V13, V234]

================================

Block 0x2e4
[0x2e4:0x2e7]
---
Predecessors: [0x2dc]
Successors: []
---
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 REVERT
---
0x2e4: V237 = 0x0
0x2e7: REVERT 0x0 0x0
---
Entry stack: [V13, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V234]

================================

Block 0x2e8
[0x2e8:0x2fc]
---
Predecessors: [0x2dc]
Successors: [0xbe6]
---
0x2e8 JUMPDEST
0x2e9 POP
0x2ea PUSH2 0x1df
0x2ed PUSH1 0x1
0x2ef PUSH1 0xa0
0x2f1 PUSH1 0x2
0x2f3 EXP
0x2f4 SUB
0x2f5 PUSH1 0x4
0x2f7 CALLDATALOAD
0x2f8 AND
0x2f9 PUSH2 0xbe6
0x2fc JUMP
---
0x2e8: JUMPDEST 
0x2ea: V238 = 0x1df
0x2ed: V239 = 0x1
0x2ef: V240 = 0xa0
0x2f1: V241 = 0x2
0x2f3: V242 = EXP 0x2 0xa0
0x2f4: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f5: V244 = 0x4
0x2f7: V245 = CALLDATALOAD 0x4
0x2f8: V246 = AND V245 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V247 = 0xbe6
0x2fc: JUMP 0xbe6
---
Entry stack: [V13, V234]
Stack pops: 1
Stack additions: [0x1df, V246]
Exit stack: [V13, 0x1df, V246]

================================

Block 0x2fd
[0x2fd:0x304]
---
Predecessors: [0x8a]
Successors: [0x305, 0x309]
---
0x2fd JUMPDEST
0x2fe CALLVALUE
0x2ff DUP1
0x300 ISZERO
0x301 PUSH2 0x309
0x304 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V248 = CALLVALUE
0x300: V249 = ISZERO V248
0x301: V250 = 0x309
0x304: JUMPI 0x309 V249
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V248]
Exit stack: [V13, V248]

================================

Block 0x305
[0x305:0x308]
---
Predecessors: [0x2fd]
Successors: []
---
0x305 PUSH1 0x0
0x307 DUP1
0x308 REVERT
---
0x305: V251 = 0x0
0x308: REVERT 0x0 0x0
---
Entry stack: [V13, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V248]

================================

Block 0x309
[0x309:0x311]
---
Predecessors: [0x2fd]
Successors: [0xd44]
---
0x309 JUMPDEST
0x30a POP
0x30b PUSH2 0x2b0
0x30e PUSH2 0xd44
0x311 JUMP
---
0x309: JUMPDEST 
0x30b: V252 = 0x2b0
0x30e: V253 = 0xd44
0x311: JUMP 0xd44
---
Entry stack: [V13, V248]
Stack pops: 1
Stack additions: [0x2b0]
Exit stack: [V13, 0x2b0]

================================

Block 0x312
[0x312:0x319]
---
Predecessors: [0x95]
Successors: [0xf35]
---
0x312 JUMPDEST
0x313 PUSH2 0x1df
0x316 PUSH2 0xf35
0x319 JUMP
---
0x312: JUMPDEST 
0x313: V254 = 0x1df
0x316: V255 = 0xf35
0x319: JUMP 0xf35
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1df]
Exit stack: [V13, 0x1df]

================================

Block 0x31a
[0x31a:0x321]
---
Predecessors: [0xa0]
Successors: [0x322, 0x326]
---
0x31a JUMPDEST
0x31b CALLVALUE
0x31c DUP1
0x31d ISZERO
0x31e PUSH2 0x326
0x321 JUMPI
---
0x31a: JUMPDEST 
0x31b: V256 = CALLVALUE
0x31d: V257 = ISZERO V256
0x31e: V258 = 0x326
0x321: JUMPI 0x326 V257
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V256]
Exit stack: [V13, V256]

================================

Block 0x322
[0x322:0x325]
---
Predecessors: [0x31a]
Successors: []
---
0x322 PUSH1 0x0
0x324 DUP1
0x325 REVERT
---
0x322: V259 = 0x0
0x325: REVERT 0x0 0x0
---
Entry stack: [V13, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V256]

================================

Block 0x326
[0x326:0x32e]
---
Predecessors: [0x31a]
Successors: [0x10ec]
---
0x326 JUMPDEST
0x327 POP
0x328 PUSH2 0x208
0x32b PUSH2 0x10ec
0x32e JUMP
---
0x326: JUMPDEST 
0x328: V260 = 0x208
0x32b: V261 = 0x10ec
0x32e: JUMP 0x10ec
---
Entry stack: [V13, V256]
Stack pops: 1
Stack additions: [0x208]
Exit stack: [V13, 0x208]

================================

Block 0x32f
[0x32f:0x36e]
---
Predecessors: [0x14c]
Successors: [0x36f, 0x3b5]
---
0x32f JUMPDEST
0x330 PUSH1 0x0
0x332 DUP1
0x333 SLOAD
0x334 PUSH1 0x40
0x336 DUP1
0x337 MLOAD
0x338 PUSH1 0x20
0x33a PUSH1 0x2
0x33c PUSH1 0x1
0x33e DUP6
0x33f AND
0x340 ISZERO
0x341 PUSH2 0x100
0x344 MUL
0x345 PUSH1 0x0
0x347 NOT
0x348 ADD
0x349 SWAP1
0x34a SWAP5
0x34b AND
0x34c SWAP4
0x34d SWAP1
0x34e SWAP4
0x34f DIV
0x350 PUSH1 0x1f
0x352 DUP2
0x353 ADD
0x354 DUP5
0x355 SWAP1
0x356 DIV
0x357 DUP5
0x358 MUL
0x359 DUP3
0x35a ADD
0x35b DUP5
0x35c ADD
0x35d SWAP1
0x35e SWAP3
0x35f MSTORE
0x360 DUP2
0x361 DUP2
0x362 MSTORE
0x363 SWAP3
0x364 SWAP2
0x365 DUP4
0x366 ADD
0x367 DUP3
0x368 DUP3
0x369 DUP1
0x36a ISZERO
0x36b PUSH2 0x3b5
0x36e JUMPI
---
0x32f: JUMPDEST 
0x330: V262 = 0x0
0x333: V263 = S[0x0]
0x334: V264 = 0x40
0x337: V265 = M[0x40]
0x338: V266 = 0x20
0x33a: V267 = 0x2
0x33c: V268 = 0x1
0x33f: V269 = AND V263 0x1
0x340: V270 = ISZERO V269
0x341: V271 = 0x100
0x344: V272 = MUL 0x100 V270
0x345: V273 = 0x0
0x347: V274 = NOT 0x0
0x348: V275 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V272
0x34b: V276 = AND V263 V275
0x34f: V277 = DIV V276 0x2
0x350: V278 = 0x1f
0x353: V279 = ADD V277 0x1f
0x356: V280 = DIV V279 0x20
0x358: V281 = MUL 0x20 V280
0x35a: V282 = ADD V265 V281
0x35c: V283 = ADD 0x20 V282
0x35f: M[0x40] = V283
0x362: M[V265] = V277
0x366: V284 = ADD V265 0x20
0x36a: V285 = ISZERO V277
0x36b: V286 = 0x3b5
0x36e: JUMPI 0x3b5 V285
---
Entry stack: [V13, 0x155]
Stack pops: 0
Stack additions: [V265, 0x0, V277, V284, 0x0, V277]
Exit stack: [V13, 0x155, V265, 0x0, V277, V284, 0x0, V277]

================================

Block 0x36f
[0x36f:0x376]
---
Predecessors: [0x32f]
Successors: [0x377, 0x38a]
---
0x36f DUP1
0x370 PUSH1 0x1f
0x372 LT
0x373 PUSH2 0x38a
0x376 JUMPI
---
0x370: V287 = 0x1f
0x372: V288 = LT 0x1f V277
0x373: V289 = 0x38a
0x376: JUMPI 0x38a V288
---
Entry stack: [V13, 0x155, V265, 0x0, V277, V284, 0x0, V277]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x155, V265, 0x0, V277, V284, 0x0, V277]

================================

Block 0x377
[0x377:0x389]
---
Predecessors: [0x36f]
Successors: [0x3b5]
---
0x377 PUSH2 0x100
0x37a DUP1
0x37b DUP4
0x37c SLOAD
0x37d DIV
0x37e MUL
0x37f DUP4
0x380 MSTORE
0x381 SWAP2
0x382 PUSH1 0x20
0x384 ADD
0x385 SWAP2
0x386 PUSH2 0x3b5
0x389 JUMP
---
0x377: V290 = 0x100
0x37c: V291 = S[0x0]
0x37d: V292 = DIV V291 0x100
0x37e: V293 = MUL V292 0x100
0x380: M[V284] = V293
0x382: V294 = 0x20
0x384: V295 = ADD 0x20 V284
0x386: V296 = 0x3b5
0x389: JUMP 0x3b5
---
Entry stack: [V13, 0x155, V265, 0x0, V277, V284, 0x0, V277]
Stack pops: 3
Stack additions: [V295, S1, S0]
Exit stack: [V13, 0x155, V265, 0x0, V277, V295, 0x0, V277]

================================

Block 0x38a
[0x38a:0x397]
---
Predecessors: [0x36f]
Successors: [0x398]
---
0x38a JUMPDEST
0x38b DUP3
0x38c ADD
0x38d SWAP2
0x38e SWAP1
0x38f PUSH1 0x0
0x391 MSTORE
0x392 PUSH1 0x20
0x394 PUSH1 0x0
0x396 SHA3
0x397 SWAP1
---
0x38a: JUMPDEST 
0x38c: V297 = ADD V284 V277
0x38f: V298 = 0x0
0x391: M[0x0] = 0x0
0x392: V299 = 0x20
0x394: V300 = 0x0
0x396: V301 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x155, V265, 0x0, V277, V284, 0x0, V277]
Stack pops: 3
Stack additions: [V297, V301, S2]
Exit stack: [V13, 0x155, V265, 0x0, V277, V297, V301, V284]

================================

Block 0x398
[0x398:0x3ab]
---
Predecessors: [0x38a, 0x398]
Successors: [0x398, 0x3ac]
---
0x398 JUMPDEST
0x399 DUP2
0x39a SLOAD
0x39b DUP2
0x39c MSTORE
0x39d SWAP1
0x39e PUSH1 0x1
0x3a0 ADD
0x3a1 SWAP1
0x3a2 PUSH1 0x20
0x3a4 ADD
0x3a5 DUP1
0x3a6 DUP4
0x3a7 GT
0x3a8 PUSH2 0x398
0x3ab JUMPI
---
0x398: JUMPDEST 
0x39a: V302 = S[S1]
0x39c: M[S0] = V302
0x39e: V303 = 0x1
0x3a0: V304 = ADD 0x1 S1
0x3a2: V305 = 0x20
0x3a4: V306 = ADD 0x20 S0
0x3a7: V307 = GT V297 V306
0x3a8: V308 = 0x398
0x3ab: JUMPI 0x398 V307
---
Entry stack: [V13, 0x155, V265, 0x0, V277, V297, S1, S0]
Stack pops: 3
Stack additions: [S2, V304, V306]
Exit stack: [V13, 0x155, V265, 0x0, V277, V297, V304, V306]

================================

Block 0x3ac
[0x3ac:0x3b4]
---
Predecessors: [0x398]
Successors: [0x3b5]
---
0x3ac DUP3
0x3ad SWAP1
0x3ae SUB
0x3af PUSH1 0x1f
0x3b1 AND
0x3b2 DUP3
0x3b3 ADD
0x3b4 SWAP2
---
0x3ae: V309 = SUB V306 V297
0x3af: V310 = 0x1f
0x3b1: V311 = AND 0x1f V309
0x3b3: V312 = ADD V297 V311
---
Entry stack: [V13, 0x155, V265, 0x0, V277, V297, V304, V306]
Stack pops: 3
Stack additions: [V312, S1, S2]
Exit stack: [V13, 0x155, V265, 0x0, V277, V312, V304, V297]

================================

Block 0x3b5
[0x3b5:0x3bc]
---
Predecessors: [0x32f, 0x377, 0x3ac]
Successors: [0x155]
---
0x3b5 JUMPDEST
0x3b6 POP
0x3b7 POP
0x3b8 POP
0x3b9 POP
0x3ba POP
0x3bb DUP2
0x3bc JUMP
---
0x3b5: JUMPDEST 
0x3bc: JUMP 0x155
---
Entry stack: [V13, 0x155, V265, 0x0, V277, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V13, 0x155, V265]

================================

Block 0x3bd
[0x3bd:0x3d2]
---
Predecessors: [0x1d6]
Successors: [0x3d3, 0x46e]
---
0x3bd JUMPDEST
0x3be PUSH1 0x4
0x3c0 SLOAD
0x3c1 PUSH1 0x0
0x3c3 SWAP1
0x3c4 PUSH1 0x1
0x3c6 PUSH1 0xa0
0x3c8 PUSH1 0x2
0x3ca EXP
0x3cb SUB
0x3cc AND
0x3cd CALLER
0x3ce EQ
0x3cf PUSH2 0x46e
0x3d2 JUMPI
---
0x3bd: JUMPDEST 
0x3be: V313 = 0x4
0x3c0: V314 = S[0x4]
0x3c1: V315 = 0x0
0x3c4: V316 = 0x1
0x3c6: V317 = 0xa0
0x3c8: V318 = 0x2
0x3ca: V319 = EXP 0x2 0xa0
0x3cb: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cc: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x3cd: V322 = CALLER
0x3ce: V323 = EQ V322 V321
0x3cf: V324 = 0x46e
0x3d2: JUMPI 0x46e V323
---
Entry stack: [V13, 0x1df]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1df, 0x0]

================================

Block 0x3d3
[0x3d3:0x46d]
---
Predecessors: [0x3bd]
Successors: []
---
0x3d3 PUSH1 0x40
0x3d5 DUP1
0x3d6 MLOAD
0x3d7 PUSH1 0xe5
0x3d9 PUSH1 0x2
0x3db EXP
0x3dc PUSH3 0x461bcd
0x3e0 MUL
0x3e1 DUP2
0x3e2 MSTORE
0x3e3 PUSH1 0x20
0x3e5 PUSH1 0x4
0x3e7 DUP3
0x3e8 ADD
0x3e9 MSTORE
0x3ea PUSH1 0x47
0x3ec PUSH1 0x24
0x3ee DUP3
0x3ef ADD
0x3f0 MSTORE
0x3f1 PUSH32 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x412 PUSH1 0x44
0x414 DUP3
0x415 ADD
0x416 MSTORE
0x417 PUSH32 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x438 PUSH1 0x64
0x43a DUP3
0x43b ADD
0x43c MSTORE
0x43d PUSH32 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x45e PUSH1 0x84
0x460 DUP3
0x461 ADD
0x462 MSTORE
0x463 SWAP1
0x464 MLOAD
0x465 SWAP1
0x466 DUP2
0x467 SWAP1
0x468 SUB
0x469 PUSH1 0xa4
0x46b ADD
0x46c SWAP1
0x46d REVERT
---
0x3d3: V325 = 0x40
0x3d6: V326 = M[0x40]
0x3d7: V327 = 0xe5
0x3d9: V328 = 0x2
0x3db: V329 = EXP 0x2 0xe5
0x3dc: V330 = 0x461bcd
0x3e0: V331 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x3e2: M[V326] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3e3: V332 = 0x20
0x3e5: V333 = 0x4
0x3e8: V334 = ADD V326 0x4
0x3e9: M[V334] = 0x20
0x3ea: V335 = 0x47
0x3ec: V336 = 0x24
0x3ef: V337 = ADD V326 0x24
0x3f0: M[V337] = 0x47
0x3f1: V338 = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x412: V339 = 0x44
0x415: V340 = ADD V326 0x44
0x416: M[V340] = 0x466f727761726465722063616e63656c4d6967726174696f6e206661696c6564
0x417: V341 = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x438: V342 = 0x64
0x43b: V343 = ADD V326 0x64
0x43c: M[V343] = 0x202d206d73672e73656e646572206d7573742062652063757272656e7420636f
0x43d: V344 = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x45e: V345 = 0x84
0x461: V346 = ADD V326 0x84
0x462: M[V346] = 0x72702062616e6b00000000000000000000000000000000000000000000000000
0x464: V347 = M[0x40]
0x468: V348 = SUB V326 V347
0x469: V349 = 0xa4
0x46b: V350 = ADD 0xa4 V348
0x46d: REVERT V347 V350
---
Entry stack: [V13, 0x1df, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, 0x0]

================================

Block 0x46e
[0x46e:0x48e]
---
Predecessors: [0x3bd]
Successors: [0x48f]
---
0x46e JUMPDEST
0x46f POP
0x470 PUSH1 0x2
0x472 DUP1
0x473 SLOAD
0x474 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x489 NOT
0x48a AND
0x48b SWAP1
0x48c SSTORE
0x48d PUSH1 0x1
---
0x46e: JUMPDEST 
0x470: V351 = 0x2
0x473: V352 = S[0x2]
0x474: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x489: V354 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x48a: V355 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V352
0x48c: S[0x2] = V355
0x48d: V356 = 0x1
---
Entry stack: [V13, 0x1df, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V13, 0x1df, 0x1]

================================

Block 0x48f
[0x48f:0x491]
---
Predecessors: [0x46e, 0x10dd, 0x10e4]
Successors: [0x1df]
---
0x48f JUMPDEST
0x490 SWAP1
0x491 JUMP
---
0x48f: JUMPDEST 
0x491: JUMP 0x1df
---
Entry stack: [V13, 0x1df, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, {0x0, 0x1}]

================================

Block 0x492
[0x492:0x4a7]
---
Predecessors: [0x1ff]
Successors: [0x4a8, 0x51d]
---
0x492 JUMPDEST
0x493 PUSH1 0x2
0x495 SLOAD
0x496 PUSH1 0x0
0x498 SWAP1
0x499 PUSH1 0xa0
0x49b PUSH1 0x2
0x49d EXP
0x49e SWAP1
0x49f DIV
0x4a0 PUSH1 0xff
0x4a2 AND
0x4a3 ISZERO
0x4a4 PUSH2 0x51d
0x4a7 JUMPI
---
0x492: JUMPDEST 
0x493: V357 = 0x2
0x495: V358 = S[0x2]
0x496: V359 = 0x0
0x499: V360 = 0xa0
0x49b: V361 = 0x2
0x49d: V362 = EXP 0x2 0xa0
0x49f: V363 = DIV V358 0x10000000000000000000000000000000000000000
0x4a0: V364 = 0xff
0x4a2: V365 = AND 0xff V363
0x4a3: V366 = ISZERO V365
0x4a4: V367 = 0x51d
0x4a7: JUMPI 0x51d V366
---
Entry stack: [V13, 0x208]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x4a8
[0x4a8:0x51c]
---
Predecessors: [0x492]
Successors: []
---
0x4a8 PUSH1 0x40
0x4aa DUP1
0x4ab MLOAD
0x4ac PUSH1 0xe5
0x4ae PUSH1 0x2
0x4b0 EXP
0x4b1 PUSH3 0x461bcd
0x4b5 MUL
0x4b6 DUP2
0x4b7 MSTORE
0x4b8 PUSH1 0x20
0x4ba PUSH1 0x4
0x4bc DUP3
0x4bd ADD
0x4be MSTORE
0x4bf PUSH1 0x33
0x4c1 PUSH1 0x24
0x4c3 DUP3
0x4c4 ADD
0x4c5 MSTORE
0x4c6 PUSH32 0x466f7277617264657220676574506c6179657242616e6b206661696c6564202d
0x4e7 PUSH1 0x44
0x4e9 DUP3
0x4ea ADD
0x4eb MSTORE
0x4ec PUSH32 0x206e6f20726567697374657265642062616e6b00000000000000000000000000
0x50d PUSH1 0x64
0x50f DUP3
0x510 ADD
0x511 MSTORE
0x512 SWAP1
0x513 MLOAD
0x514 SWAP1
0x515 DUP2
0x516 SWAP1
0x517 SUB
0x518 PUSH1 0x84
0x51a ADD
0x51b SWAP1
0x51c REVERT
---
0x4a8: V368 = 0x40
0x4ab: V369 = M[0x40]
0x4ac: V370 = 0xe5
0x4ae: V371 = 0x2
0x4b0: V372 = EXP 0x2 0xe5
0x4b1: V373 = 0x461bcd
0x4b5: V374 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x4b7: M[V369] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4b8: V375 = 0x20
0x4ba: V376 = 0x4
0x4bd: V377 = ADD V369 0x4
0x4be: M[V377] = 0x20
0x4bf: V378 = 0x33
0x4c1: V379 = 0x24
0x4c4: V380 = ADD V369 0x24
0x4c5: M[V380] = 0x33
0x4c6: V381 = 0x466f7277617264657220676574506c6179657242616e6b206661696c6564202d
0x4e7: V382 = 0x44
0x4ea: V383 = ADD V369 0x44
0x4eb: M[V383] = 0x466f7277617264657220676574506c6179657242616e6b206661696c6564202d
0x4ec: V384 = 0x206e6f20726567697374657265642062616e6b00000000000000000000000000
0x50d: V385 = 0x64
0x510: V386 = ADD V369 0x64
0x511: M[V386] = 0x206e6f20726567697374657265642062616e6b00000000000000000000000000
0x513: V387 = M[0x40]
0x517: V388 = SUB V369 V387
0x518: V389 = 0x84
0x51a: V390 = ADD 0x84 V388
0x51c: REVERT V387 V390
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x51d
[0x51d:0x575]
---
Predecessors: [0x492]
Successors: [0x576, 0x57a]
---
0x51d JUMPDEST
0x51e PUSH1 0x4
0x520 DUP1
0x521 SLOAD
0x522 PUSH1 0x40
0x524 DUP1
0x525 MLOAD
0x526 PUSH32 0x112dcbd800000000000000000000000000000000000000000000000000000000
0x547 DUP2
0x548 MSTORE
0x549 SWAP1
0x54a MLOAD
0x54b PUSH1 0x1
0x54d PUSH1 0xa0
0x54f PUSH1 0x2
0x551 EXP
0x552 SUB
0x553 SWAP1
0x554 SWAP3
0x555 AND
0x556 SWAP3
0x557 PUSH4 0x112dcbd8
0x55c SWAP3
0x55d DUP3
0x55e DUP3
0x55f ADD
0x560 SWAP3
0x561 PUSH1 0x20
0x563 SWAP3
0x564 SWAP1
0x565 DUP3
0x566 SWAP1
0x567 SUB
0x568 ADD
0x569 DUP2
0x56a PUSH1 0x0
0x56c DUP8
0x56d DUP1
0x56e EXTCODESIZE
0x56f ISZERO
0x570 DUP1
0x571 ISZERO
0x572 PUSH2 0x57a
0x575 JUMPI
---
0x51d: JUMPDEST 
0x51e: V391 = 0x4
0x521: V392 = S[0x4]
0x522: V393 = 0x40
0x525: V394 = M[0x40]
0x526: V395 = 0x112dcbd800000000000000000000000000000000000000000000000000000000
0x548: M[V394] = 0x112dcbd800000000000000000000000000000000000000000000000000000000
0x54a: V396 = M[0x40]
0x54b: V397 = 0x1
0x54d: V398 = 0xa0
0x54f: V399 = 0x2
0x551: V400 = EXP 0x2 0xa0
0x552: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x555: V402 = AND V392 0xffffffffffffffffffffffffffffffffffffffff
0x557: V403 = 0x112dcbd8
0x55f: V404 = ADD 0x4 V394
0x561: V405 = 0x20
0x567: V406 = SUB V394 V396
0x568: V407 = ADD V406 0x4
0x56a: V408 = 0x0
0x56e: V409 = EXTCODESIZE V402
0x56f: V410 = ISZERO V409
0x571: V411 = ISZERO V410
0x572: V412 = 0x57a
0x575: JUMPI 0x57a V411
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 0
Stack additions: [V402, 0x112dcbd8, V404, 0x20, V396, V407, V396, 0x0, V402, V410]
Exit stack: [V13, 0x208, 0x0, V402, 0x112dcbd8, V404, 0x20, V396, V407, V396, 0x0, V402, V410]

================================

Block 0x576
[0x576:0x579]
---
Predecessors: [0x51d]
Successors: []
---
0x576 PUSH1 0x0
0x578 DUP1
0x579 REVERT
---
0x576: V413 = 0x0
0x579: REVERT 0x0 0x0
---
Entry stack: [V13, 0x208, 0x0, V402, 0x112dcbd8, V404, 0x20, V396, V407, V396, 0x0, V402, V410]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0, V402, 0x112dcbd8, V404, 0x20, V396, V407, V396, 0x0, V402, V410]

================================

Block 0x57a
[0x57a:0x584]
---
Predecessors: [0x51d, 0x70c, 0x9f1, 0x1177]
Successors: [0x585, 0x58e]
---
0x57a JUMPDEST
0x57b POP
0x57c GAS
0x57d CALL
0x57e ISZERO
0x57f DUP1
0x580 ISZERO
0x581 PUSH2 0x58e
0x584 JUMPI
---
0x57a: JUMPDEST 
0x57c: V414 = GAS
0x57d: V415 = CALL V414 S1 0x0 S3 S4 S5 0x20
0x57e: V416 = ISZERO V415
0x580: V417 = ISZERO V416
0x581: V418 = 0x58e
0x584: JUMPI 0x58e V417
---
Entry stack: [V13, 0x208, 0x0, S9, {0x112dcbd8, 0x60d704db, 0x7c784a01, 0xf77ed310}, S7, 0x20, S5, S4, S3, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V416]
Exit stack: [V13, 0x208, 0x0, S9, {0x112dcbd8, 0x60d704db, 0x7c784a01, 0xf77ed310}, S7, V416]

================================

Block 0x585
[0x585:0x58d]
---
Predecessors: [0x57a]
Successors: []
---
0x585 RETURNDATASIZE
0x586 PUSH1 0x0
0x588 DUP1
0x589 RETURNDATACOPY
0x58a RETURNDATASIZE
0x58b PUSH1 0x0
0x58d REVERT
---
0x585: V419 = RETURNDATASIZE
0x586: V420 = 0x0
0x589: RETURNDATACOPY 0x0 0x0 V419
0x58a: V421 = RETURNDATASIZE
0x58b: V422 = 0x0
0x58d: REVERT 0x0 V421
---
Entry stack: [V13, 0x208, 0x0, S3, {0x112dcbd8, 0x60d704db, 0x7c784a01, 0xf77ed310}, S1, V416]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0, S3, {0x112dcbd8, 0x60d704db, 0x7c784a01, 0xf77ed310}, S1, V416]

================================

Block 0x58e
[0x58e:0x59f]
---
Predecessors: [0x57a]
Successors: [0x5a0, 0x5a4]
---
0x58e JUMPDEST
0x58f POP
0x590 POP
0x591 POP
0x592 POP
0x593 PUSH1 0x40
0x595 MLOAD
0x596 RETURNDATASIZE
0x597 PUSH1 0x20
0x599 DUP2
0x59a LT
0x59b ISZERO
0x59c PUSH2 0x5a4
0x59f JUMPI
---
0x58e: JUMPDEST 
0x593: V423 = 0x40
0x595: V424 = M[0x40]
0x596: V425 = RETURNDATASIZE
0x597: V426 = 0x20
0x59a: V427 = LT V425 0x20
0x59b: V428 = ISZERO V427
0x59c: V429 = 0x5a4
0x59f: JUMPI 0x5a4 V428
---
Entry stack: [V13, 0x208, 0x0, S3, {0x112dcbd8, 0x60d704db, 0x7c784a01, 0xf77ed310}, S1, V416]
Stack pops: 4
Stack additions: [V424, V425]
Exit stack: [V13, 0x208, 0x0, V424, V425]

================================

Block 0x5a0
[0x5a0:0x5a3]
---
Predecessors: [0x58e]
Successors: []
---
0x5a0 PUSH1 0x0
0x5a2 DUP1
0x5a3 REVERT
---
0x5a0: V430 = 0x0
0x5a3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x208, 0x0, V424, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0, V424, V425]

================================

Block 0x5a4
[0x5a4:0x5aa]
---
Predecessors: [0x58e]
Successors: [0x208]
---
0x5a4 JUMPDEST
0x5a5 POP
0x5a6 MLOAD
0x5a7 SWAP1
0x5a8 POP
0x5a9 SWAP1
0x5aa JUMP
---
0x5a4: JUMPDEST 
0x5a6: V431 = M[V424]
0x5aa: JUMP 0x208
---
Entry stack: [V13, 0x208, 0x0, V424, V425]
Stack pops: 4
Stack additions: [V431]
Exit stack: [V13, V431]

================================

Block 0x5ab
[0x5ab:0x5ce]
---
Predecessors: [0x230]
Successors: [0x239]
---
0x5ab JUMPDEST
0x5ac PUSH1 0x4
0x5ae SLOAD
0x5af PUSH1 0x2
0x5b1 SLOAD
0x5b2 PUSH1 0x1
0x5b4 PUSH1 0xa0
0x5b6 PUSH1 0x2
0x5b8 EXP
0x5b9 SUB
0x5ba SWAP2
0x5bb DUP3
0x5bc AND
0x5bd SWAP3
0x5be SWAP2
0x5bf DUP2
0x5c0 AND
0x5c1 SWAP2
0x5c2 PUSH1 0xa0
0x5c4 PUSH1 0x2
0x5c6 EXP
0x5c7 SWAP1
0x5c8 SWAP2
0x5c9 DIV
0x5ca PUSH1 0xff
0x5cc AND
0x5cd SWAP1
0x5ce JUMP
---
0x5ab: JUMPDEST 
0x5ac: V432 = 0x4
0x5ae: V433 = S[0x4]
0x5af: V434 = 0x2
0x5b1: V435 = S[0x2]
0x5b2: V436 = 0x1
0x5b4: V437 = 0xa0
0x5b6: V438 = 0x2
0x5b8: V439 = EXP 0x2 0xa0
0x5b9: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bc: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x5c0: V442 = AND V435 0xffffffffffffffffffffffffffffffffffffffff
0x5c2: V443 = 0xa0
0x5c4: V444 = 0x2
0x5c6: V445 = EXP 0x2 0xa0
0x5c9: V446 = DIV V435 0x10000000000000000000000000000000000000000
0x5ca: V447 = 0xff
0x5cc: V448 = AND 0xff V446
0x5ce: JUMP 0x239
---
Entry stack: [V13, 0x239]
Stack pops: 1
Stack additions: [V441, V442, V448]
Exit stack: [V13, V441, V442, V448]

================================

Block 0x5cf
[0x5cf:0x5e4]
---
Predecessors: [0x271]
Successors: [0x5e5, 0x65a]
---
0x5cf JUMPDEST
0x5d0 PUSH1 0x2
0x5d2 SLOAD
0x5d3 PUSH1 0x0
0x5d5 SWAP1
0x5d6 PUSH1 0xa0
0x5d8 PUSH1 0x2
0x5da EXP
0x5db SWAP1
0x5dc DIV
0x5dd PUSH1 0xff
0x5df AND
0x5e0 ISZERO
0x5e1 PUSH2 0x65a
0x5e4 JUMPI
---
0x5cf: JUMPDEST 
0x5d0: V449 = 0x2
0x5d2: V450 = S[0x2]
0x5d3: V451 = 0x0
0x5d6: V452 = 0xa0
0x5d8: V453 = 0x2
0x5da: V454 = EXP 0x2 0xa0
0x5dc: V455 = DIV V450 0x10000000000000000000000000000000000000000
0x5dd: V456 = 0xff
0x5df: V457 = AND 0xff V455
0x5e0: V458 = ISZERO V457
0x5e1: V459 = 0x65a
0x5e4: JUMPI 0x65a V458
---
Entry stack: [V13, 0x208]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x5e5
[0x5e5:0x659]
---
Predecessors: [0x5cf]
Successors: []
---
0x5e5 PUSH1 0x40
0x5e7 DUP1
0x5e8 MLOAD
0x5e9 PUSH1 0xe5
0x5eb PUSH1 0x2
0x5ed EXP
0x5ee PUSH3 0x461bcd
0x5f2 MUL
0x5f3 DUP2
0x5f4 MSTORE
0x5f5 PUSH1 0x20
0x5f7 PUSH1 0x4
0x5f9 DUP3
0x5fa ADD
0x5fb MSTORE
0x5fc PUSH1 0x2c
0x5fe PUSH1 0x24
0x600 DUP3
0x601 ADD
0x602 MSTORE
0x603 PUSH32 0x676574546f6b656e436f6e7472616374206661696c6564202d206e6f20726567
0x624 PUSH1 0x44
0x626 DUP3
0x627 ADD
0x628 MSTORE
0x629 PUSH32 0x697374657265642062616e6b0000000000000000000000000000000000000000
0x64a PUSH1 0x64
0x64c DUP3
0x64d ADD
0x64e MSTORE
0x64f SWAP1
0x650 MLOAD
0x651 SWAP1
0x652 DUP2
0x653 SWAP1
0x654 SUB
0x655 PUSH1 0x84
0x657 ADD
0x658 SWAP1
0x659 REVERT
---
0x5e5: V460 = 0x40
0x5e8: V461 = M[0x40]
0x5e9: V462 = 0xe5
0x5eb: V463 = 0x2
0x5ed: V464 = EXP 0x2 0xe5
0x5ee: V465 = 0x461bcd
0x5f2: V466 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x5f4: M[V461] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5f5: V467 = 0x20
0x5f7: V468 = 0x4
0x5fa: V469 = ADD V461 0x4
0x5fb: M[V469] = 0x20
0x5fc: V470 = 0x2c
0x5fe: V471 = 0x24
0x601: V472 = ADD V461 0x24
0x602: M[V472] = 0x2c
0x603: V473 = 0x676574546f6b656e436f6e7472616374206661696c6564202d206e6f20726567
0x624: V474 = 0x44
0x627: V475 = ADD V461 0x44
0x628: M[V475] = 0x676574546f6b656e436f6e7472616374206661696c6564202d206e6f20726567
0x629: V476 = 0x697374657265642062616e6b0000000000000000000000000000000000000000
0x64a: V477 = 0x64
0x64d: V478 = ADD V461 0x64
0x64e: M[V478] = 0x697374657265642062616e6b0000000000000000000000000000000000000000
0x650: V479 = M[0x40]
0x654: V480 = SUB V461 V479
0x655: V481 = 0x84
0x657: V482 = ADD 0x84 V480
0x659: REVERT V479 V482
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x65a
[0x65a:0x66c]
---
Predecessors: [0x5cf]
Successors: [0x66d, 0x671]
---
0x65a JUMPDEST
0x65b PUSH1 0x3
0x65d SLOAD
0x65e PUSH1 0x1
0x660 PUSH1 0xa0
0x662 PUSH1 0x2
0x664 EXP
0x665 SUB
0x666 AND
0x667 ISZERO
0x668 ISZERO
0x669 PUSH2 0x671
0x66c JUMPI
---
0x65a: JUMPDEST 
0x65b: V483 = 0x3
0x65d: V484 = S[0x3]
0x65e: V485 = 0x1
0x660: V486 = 0xa0
0x662: V487 = 0x2
0x664: V488 = EXP 0x2 0xa0
0x665: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x666: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x667: V491 = ISZERO V490
0x668: V492 = ISZERO V491
0x669: V493 = 0x671
0x66c: JUMPI 0x671 V492
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x66d
[0x66d:0x670]
---
Predecessors: [0x65a]
Successors: []
---
0x66d PUSH1 0x0
0x66f DUP1
0x670 REVERT
---
0x66d: V494 = 0x0
0x670: REVERT 0x0 0x0
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x671
[0x671:0x680]
---
Predecessors: [0x65a]
Successors: [0x208]
---
0x671 JUMPDEST
0x672 POP
0x673 PUSH1 0x3
0x675 SLOAD
0x676 PUSH1 0x1
0x678 PUSH1 0xa0
0x67a PUSH1 0x2
0x67c EXP
0x67d SUB
0x67e AND
0x67f SWAP1
0x680 JUMP
---
0x671: JUMPDEST 
0x673: V495 = 0x3
0x675: V496 = S[0x3]
0x676: V497 = 0x1
0x678: V498 = 0xa0
0x67a: V499 = 0x2
0x67c: V500 = EXP 0x2 0xa0
0x67d: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67e: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x680: JUMP 0x208
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 2
Stack additions: [V502]
Exit stack: [V13, V502]

================================

Block 0x681
[0x681:0x696]
---
Predecessors: [0x286]
Successors: [0x697, 0x70c]
---
0x681 JUMPDEST
0x682 PUSH1 0x2
0x684 SLOAD
0x685 PUSH1 0x0
0x687 SWAP1
0x688 PUSH1 0xa0
0x68a PUSH1 0x2
0x68c EXP
0x68d SWAP1
0x68e DIV
0x68f PUSH1 0xff
0x691 AND
0x692 ISZERO
0x693 PUSH2 0x70c
0x696 JUMPI
---
0x681: JUMPDEST 
0x682: V503 = 0x2
0x684: V504 = S[0x2]
0x685: V505 = 0x0
0x688: V506 = 0xa0
0x68a: V507 = 0x2
0x68c: V508 = EXP 0x2 0xa0
0x68e: V509 = DIV V504 0x10000000000000000000000000000000000000000
0x68f: V510 = 0xff
0x691: V511 = AND 0xff V509
0x692: V512 = ISZERO V511
0x693: V513 = 0x70c
0x696: JUMPI 0x70c V512
---
Entry stack: [V13, 0x208]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x697
[0x697:0x70b]
---
Predecessors: [0x681]
Successors: []
---
0x697 PUSH1 0x40
0x699 DUP1
0x69a MLOAD
0x69b PUSH1 0xe5
0x69d PUSH1 0x2
0x69f EXP
0x6a0 PUSH3 0x461bcd
0x6a4 MUL
0x6a5 DUP2
0x6a6 MSTORE
0x6a7 PUSH1 0x20
0x6a9 PUSH1 0x4
0x6ab DUP3
0x6ac ADD
0x6ad MSTORE
0x6ae PUSH1 0x2d
0x6b0 PUSH1 0x24
0x6b2 DUP3
0x6b3 ADD
0x6b4 MSTORE
0x6b5 PUSH32 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x6d6 PUSH1 0x44
0x6d8 DUP3
0x6d9 ADD
0x6da MSTORE
0x6db PUSH32 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x6fc PUSH1 0x64
0x6fe DUP3
0x6ff ADD
0x700 MSTORE
0x701 SWAP1
0x702 MLOAD
0x703 SWAP1
0x704 DUP2
0x705 SWAP1
0x706 SUB
0x707 PUSH1 0x84
0x709 ADD
0x70a SWAP1
0x70b REVERT
---
0x697: V514 = 0x40
0x69a: V515 = M[0x40]
0x69b: V516 = 0xe5
0x69d: V517 = 0x2
0x69f: V518 = EXP 0x2 0xe5
0x6a0: V519 = 0x461bcd
0x6a4: V520 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x6a6: M[V515] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6a7: V521 = 0x20
0x6a9: V522 = 0x4
0x6ac: V523 = ADD V515 0x4
0x6ad: M[V523] = 0x20
0x6ae: V524 = 0x2d
0x6b0: V525 = 0x24
0x6b3: V526 = ADD V515 0x24
0x6b4: M[V526] = 0x2d
0x6b5: V527 = 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x6d6: V528 = 0x44
0x6d9: V529 = ADD V515 0x44
0x6da: M[V529] = 0x466f727761726465722067657442616e6b206661696c6564202d206e6f207265
0x6db: V530 = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x6fc: V531 = 0x64
0x6ff: V532 = ADD V515 0x64
0x700: M[V532] = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x702: V533 = M[0x40]
0x706: V534 = SUB V515 V533
0x707: V535 = 0x84
0x709: V536 = ADD 0x84 V534
0x70b: REVERT V533 V536
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x70c
[0x70c:0x764]
---
Predecessors: [0x681]
Successors: [0x57a, 0x765]
---
0x70c JUMPDEST
0x70d PUSH1 0x4
0x70f DUP1
0x710 SLOAD
0x711 PUSH1 0x40
0x713 DUP1
0x714 MLOAD
0x715 PUSH32 0x60d704db00000000000000000000000000000000000000000000000000000000
0x736 DUP2
0x737 MSTORE
0x738 SWAP1
0x739 MLOAD
0x73a PUSH1 0x1
0x73c PUSH1 0xa0
0x73e PUSH1 0x2
0x740 EXP
0x741 SUB
0x742 SWAP1
0x743 SWAP3
0x744 AND
0x745 SWAP3
0x746 PUSH4 0x60d704db
0x74b SWAP3
0x74c DUP3
0x74d DUP3
0x74e ADD
0x74f SWAP3
0x750 PUSH1 0x20
0x752 SWAP3
0x753 SWAP1
0x754 DUP3
0x755 SWAP1
0x756 SUB
0x757 ADD
0x758 DUP2
0x759 PUSH1 0x0
0x75b DUP8
0x75c DUP1
0x75d EXTCODESIZE
0x75e ISZERO
0x75f DUP1
0x760 ISZERO
0x761 PUSH2 0x57a
0x764 JUMPI
---
0x70c: JUMPDEST 
0x70d: V537 = 0x4
0x710: V538 = S[0x4]
0x711: V539 = 0x40
0x714: V540 = M[0x40]
0x715: V541 = 0x60d704db00000000000000000000000000000000000000000000000000000000
0x737: M[V540] = 0x60d704db00000000000000000000000000000000000000000000000000000000
0x739: V542 = M[0x40]
0x73a: V543 = 0x1
0x73c: V544 = 0xa0
0x73e: V545 = 0x2
0x740: V546 = EXP 0x2 0xa0
0x741: V547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x744: V548 = AND V538 0xffffffffffffffffffffffffffffffffffffffff
0x746: V549 = 0x60d704db
0x74e: V550 = ADD 0x4 V540
0x750: V551 = 0x20
0x756: V552 = SUB V540 V542
0x757: V553 = ADD V552 0x4
0x759: V554 = 0x0
0x75d: V555 = EXTCODESIZE V548
0x75e: V556 = ISZERO V555
0x760: V557 = ISZERO V556
0x761: V558 = 0x57a
0x764: JUMPI 0x57a V557
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 0
Stack additions: [V548, 0x60d704db, V550, 0x20, V542, V553, V542, 0x0, V548, V556]
Exit stack: [V13, 0x208, 0x0, V548, 0x60d704db, V550, 0x20, V542, V553, V542, 0x0, V548, V556]

================================

Block 0x765
[0x765:0x768]
---
Predecessors: [0x70c]
Successors: []
---
0x765 PUSH1 0x0
0x767 DUP1
0x768 REVERT
---
0x765: V559 = 0x0
0x768: REVERT 0x0 0x0
---
Entry stack: [V13, 0x208, 0x0, V548, 0x60d704db, V550, 0x20, V542, V553, V542, 0x0, V548, V556]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0, V548, 0x60d704db, V550, 0x20, V542, V553, V542, 0x0, V548, V556]

================================

Block 0x769
[0x769:0x77f]
---
Predecessors: [0x29b]
Successors: [0x780, 0x7f5]
---
0x769 JUMPDEST
0x76a PUSH1 0x2
0x76c SLOAD
0x76d PUSH1 0xa0
0x76f PUSH1 0x2
0x771 EXP
0x772 SWAP1
0x773 DIV
0x774 PUSH1 0xff
0x776 AND
0x777 ISZERO
0x778 ISZERO
0x779 PUSH1 0x1
0x77b EQ
0x77c PUSH2 0x7f5
0x77f JUMPI
---
0x769: JUMPDEST 
0x76a: V560 = 0x2
0x76c: V561 = S[0x2]
0x76d: V562 = 0xa0
0x76f: V563 = 0x2
0x771: V564 = EXP 0x2 0xa0
0x773: V565 = DIV V561 0x10000000000000000000000000000000000000000
0x774: V566 = 0xff
0x776: V567 = AND 0xff V565
0x777: V568 = ISZERO V567
0x778: V569 = ISZERO V568
0x779: V570 = 0x1
0x77b: V571 = EQ 0x1 V569
0x77c: V572 = 0x7f5
0x77f: JUMPI 0x7f5 V571
---
Entry stack: [V13, 0x2b0, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V220]

================================

Block 0x780
[0x780:0x7f4]
---
Predecessors: [0x769]
Successors: []
---
0x780 PUSH1 0x40
0x782 DUP1
0x783 MLOAD
0x784 PUSH1 0xe5
0x786 PUSH1 0x2
0x788 EXP
0x789 PUSH3 0x461bcd
0x78d MUL
0x78e DUP2
0x78f MSTORE
0x790 PUSH1 0x20
0x792 PUSH1 0x4
0x794 DUP3
0x795 ADD
0x796 MSTORE
0x797 PUSH1 0x35
0x799 PUSH1 0x24
0x79b DUP3
0x79c ADD
0x79d MSTORE
0x79e PUSH32 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x7bf PUSH1 0x44
0x7c1 DUP3
0x7c2 ADD
0x7c3 MSTORE
0x7c4 PUSH32 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x7e5 PUSH1 0x64
0x7e7 DUP3
0x7e8 ADD
0x7e9 MSTORE
0x7ea SWAP1
0x7eb MLOAD
0x7ec SWAP1
0x7ed DUP2
0x7ee SWAP1
0x7ef SUB
0x7f0 PUSH1 0x84
0x7f2 ADD
0x7f3 SWAP1
0x7f4 REVERT
---
0x780: V573 = 0x40
0x783: V574 = M[0x40]
0x784: V575 = 0xe5
0x786: V576 = 0x2
0x788: V577 = EXP 0x2 0xe5
0x789: V578 = 0x461bcd
0x78d: V579 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x78f: M[V574] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x790: V580 = 0x20
0x792: V581 = 0x4
0x795: V582 = ADD V574 0x4
0x796: M[V582] = 0x20
0x797: V583 = 0x35
0x799: V584 = 0x24
0x79c: V585 = ADD V574 0x24
0x79d: M[V585] = 0x35
0x79e: V586 = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x7bf: V587 = 0x44
0x7c2: V588 = ADD V574 0x44
0x7c3: M[V588] = 0x466f72776172646572207365747570206661696c6564202d20636f7270206261
0x7c4: V589 = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x7e5: V590 = 0x64
0x7e8: V591 = ADD V574 0x64
0x7e9: M[V591] = 0x6e6b20616c726561647920726567697374657265640000000000000000000000
0x7eb: V592 = M[0x40]
0x7ef: V593 = SUB V574 V592
0x7f0: V594 = 0x84
0x7f2: V595 = ADD 0x84 V593
0x7f4: REVERT V592 V595
---
Entry stack: [V13, 0x2b0, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V220]

================================

Block 0x7f5
[0x7f5:0x82e]
---
Predecessors: [0x769]
Successors: [0x82f, 0x833]
---
0x7f5 JUMPDEST
0x7f6 DUP1
0x7f7 PUSH1 0x1
0x7f9 PUSH1 0xa0
0x7fb PUSH1 0x2
0x7fd EXP
0x7fe SUB
0x7ff AND
0x800 PUSH4 0x839e0fb
0x805 PUSH1 0x40
0x807 MLOAD
0x808 DUP2
0x809 PUSH4 0xffffffff
0x80e AND
0x80f PUSH1 0xe0
0x811 PUSH1 0x2
0x813 EXP
0x814 MUL
0x815 DUP2
0x816 MSTORE
0x817 PUSH1 0x4
0x819 ADD
0x81a PUSH1 0x20
0x81c PUSH1 0x40
0x81e MLOAD
0x81f DUP1
0x820 DUP4
0x821 SUB
0x822 DUP2
0x823 PUSH1 0x0
0x825 DUP8
0x826 DUP1
0x827 EXTCODESIZE
0x828 ISZERO
0x829 DUP1
0x82a ISZERO
0x82b PUSH2 0x833
0x82e JUMPI
---
0x7f5: JUMPDEST 
0x7f7: V596 = 0x1
0x7f9: V597 = 0xa0
0x7fb: V598 = 0x2
0x7fd: V599 = EXP 0x2 0xa0
0x7fe: V600 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ff: V601 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x800: V602 = 0x839e0fb
0x805: V603 = 0x40
0x807: V604 = M[0x40]
0x809: V605 = 0xffffffff
0x80e: V606 = AND 0xffffffff 0x839e0fb
0x80f: V607 = 0xe0
0x811: V608 = 0x2
0x813: V609 = EXP 0x2 0xe0
0x814: V610 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x839e0fb
0x816: M[V604] = 0x839e0fb00000000000000000000000000000000000000000000000000000000
0x817: V611 = 0x4
0x819: V612 = ADD 0x4 V604
0x81a: V613 = 0x20
0x81c: V614 = 0x40
0x81e: V615 = M[0x40]
0x821: V616 = SUB V612 V615
0x823: V617 = 0x0
0x827: V618 = EXTCODESIZE V601
0x828: V619 = ISZERO V618
0x82a: V620 = ISZERO V619
0x82b: V621 = 0x833
0x82e: JUMPI 0x833 V620
---
Entry stack: [V13, 0x2b0, V220]
Stack pops: 1
Stack additions: [S0, V601, 0x839e0fb, V612, 0x20, V615, V616, V615, 0x0, V601, V619]
Exit stack: [V13, 0x2b0, V220, V601, 0x839e0fb, V612, 0x20, V615, V616, V615, 0x0, V601, V619]

================================

Block 0x82f
[0x82f:0x832]
---
Predecessors: [0x7f5]
Successors: []
---
0x82f PUSH1 0x0
0x831 DUP1
0x832 REVERT
---
0x82f: V622 = 0x0
0x832: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2b0, V220, V601, 0x839e0fb, V612, 0x20, V615, V616, V615, 0x0, V601, V619]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V220, V601, 0x839e0fb, V612, 0x20, V615, V616, V615, 0x0, V601, V619]

================================

Block 0x833
[0x833:0x83d]
---
Predecessors: [0x7f5]
Successors: [0x83e, 0x847]
---
0x833 JUMPDEST
0x834 POP
0x835 GAS
0x836 CALL
0x837 ISZERO
0x838 DUP1
0x839 ISZERO
0x83a PUSH2 0x847
0x83d JUMPI
---
0x833: JUMPDEST 
0x835: V623 = GAS
0x836: V624 = CALL V623 V601 0x0 V615 V616 V615 0x20
0x837: V625 = ISZERO V624
0x839: V626 = ISZERO V625
0x83a: V627 = 0x847
0x83d: JUMPI 0x847 V626
---
Entry stack: [V13, 0x2b0, V220, V601, 0x839e0fb, V612, 0x20, V615, V616, V615, 0x0, V601, V619]
Stack pops: 7
Stack additions: [V625]
Exit stack: [V13, 0x2b0, V220, V601, 0x839e0fb, V612, V625]

================================

Block 0x83e
[0x83e:0x846]
---
Predecessors: [0x833]
Successors: []
---
0x83e RETURNDATASIZE
0x83f PUSH1 0x0
0x841 DUP1
0x842 RETURNDATACOPY
0x843 RETURNDATASIZE
0x844 PUSH1 0x0
0x846 REVERT
---
0x83e: V628 = RETURNDATASIZE
0x83f: V629 = 0x0
0x842: RETURNDATACOPY 0x0 0x0 V628
0x843: V630 = RETURNDATASIZE
0x844: V631 = 0x0
0x846: REVERT 0x0 V630
---
Entry stack: [V13, 0x2b0, V220, V601, 0x839e0fb, V612, V625]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V220, V601, 0x839e0fb, V612, V625]

================================

Block 0x847
[0x847:0x858]
---
Predecessors: [0x833]
Successors: [0x859, 0x85d]
---
0x847 JUMPDEST
0x848 POP
0x849 POP
0x84a POP
0x84b POP
0x84c PUSH1 0x40
0x84e MLOAD
0x84f RETURNDATASIZE
0x850 PUSH1 0x20
0x852 DUP2
0x853 LT
0x854 ISZERO
0x855 PUSH2 0x85d
0x858 JUMPI
---
0x847: JUMPDEST 
0x84c: V632 = 0x40
0x84e: V633 = M[0x40]
0x84f: V634 = RETURNDATASIZE
0x850: V635 = 0x20
0x853: V636 = LT V634 0x20
0x854: V637 = ISZERO V636
0x855: V638 = 0x85d
0x858: JUMPI 0x85d V637
---
Entry stack: [V13, 0x2b0, V220, V601, 0x839e0fb, V612, V625]
Stack pops: 4
Stack additions: [V633, V634]
Exit stack: [V13, 0x2b0, V220, V633, V634]

================================

Block 0x859
[0x859:0x85c]
---
Predecessors: [0x847]
Successors: []
---
0x859 PUSH1 0x0
0x85b DUP1
0x85c REVERT
---
0x859: V639 = 0x0
0x85c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2b0, V220, V633, V634]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V220, V633, V634]

================================

Block 0x85d
[0x85d:0x868]
---
Predecessors: [0x847]
Successors: [0x869, 0x86d]
---
0x85d JUMPDEST
0x85e POP
0x85f MLOAD
0x860 ISZERO
0x861 ISZERO
0x862 PUSH1 0x1
0x864 EQ
0x865 PUSH2 0x86d
0x868 JUMPI
---
0x85d: JUMPDEST 
0x85f: V640 = M[V633]
0x860: V641 = ISZERO V640
0x861: V642 = ISZERO V641
0x862: V643 = 0x1
0x864: V644 = EQ 0x1 V642
0x865: V645 = 0x86d
0x868: JUMPI 0x86d V644
---
Entry stack: [V13, 0x2b0, V220, V633, V634]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x2b0, V220]

================================

Block 0x869
[0x869:0x86c]
---
Predecessors: [0x85d]
Successors: []
---
0x869 PUSH1 0x0
0x86b DUP1
0x86c REVERT
---
0x869: V646 = 0x0
0x86c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2b0, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V220]

================================

Block 0x86d
[0x86d:0x8e8]
---
Predecessors: [0x85d]
Successors: [0x8e9, 0x8ed]
---
0x86d JUMPDEST
0x86e PUSH1 0x4
0x870 DUP1
0x871 SLOAD
0x872 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x887 NOT
0x888 AND
0x889 PUSH1 0x1
0x88b PUSH1 0xa0
0x88d PUSH1 0x2
0x88f EXP
0x890 SUB
0x891 DUP4
0x892 DUP2
0x893 AND
0x894 SWAP2
0x895 SWAP1
0x896 SWAP2
0x897 OR
0x898 DUP1
0x899 DUP4
0x89a SSTORE
0x89b PUSH1 0x40
0x89d DUP1
0x89e MLOAD
0x89f PUSH32 0x28b7bede00000000000000000000000000000000000000000000000000000000
0x8c0 DUP2
0x8c1 MSTORE
0x8c2 SWAP1
0x8c3 MLOAD
0x8c4 SWAP2
0x8c5 SWAP1
0x8c6 SWAP3
0x8c7 AND
0x8c8 SWAP3
0x8c9 PUSH4 0x28b7bede
0x8ce SWAP3
0x8cf DUP1
0x8d0 DUP3
0x8d1 ADD
0x8d2 SWAP3
0x8d3 PUSH1 0x20
0x8d5 SWAP3
0x8d6 SWAP1
0x8d7 SWAP2
0x8d8 DUP3
0x8d9 SWAP1
0x8da SUB
0x8db ADD
0x8dc DUP2
0x8dd PUSH1 0x0
0x8df DUP8
0x8e0 DUP1
0x8e1 EXTCODESIZE
0x8e2 ISZERO
0x8e3 DUP1
0x8e4 ISZERO
0x8e5 PUSH2 0x8ed
0x8e8 JUMPI
---
0x86d: JUMPDEST 
0x86e: V647 = 0x4
0x871: V648 = S[0x4]
0x872: V649 = 0xffffffffffffffffffffffffffffffffffffffff
0x887: V650 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x888: V651 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V648
0x889: V652 = 0x1
0x88b: V653 = 0xa0
0x88d: V654 = 0x2
0x88f: V655 = EXP 0x2 0xa0
0x890: V656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x893: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x897: V658 = OR V657 V651
0x89a: S[0x4] = V658
0x89b: V659 = 0x40
0x89e: V660 = M[0x40]
0x89f: V661 = 0x28b7bede00000000000000000000000000000000000000000000000000000000
0x8c1: M[V660] = 0x28b7bede00000000000000000000000000000000000000000000000000000000
0x8c3: V662 = M[0x40]
0x8c7: V663 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0x8c9: V664 = 0x28b7bede
0x8d1: V665 = ADD 0x4 V660
0x8d3: V666 = 0x20
0x8da: V667 = SUB V660 V662
0x8db: V668 = ADD V667 0x4
0x8dd: V669 = 0x0
0x8e1: V670 = EXTCODESIZE V663
0x8e2: V671 = ISZERO V670
0x8e4: V672 = ISZERO V671
0x8e5: V673 = 0x8ed
0x8e8: JUMPI 0x8ed V672
---
Entry stack: [V13, 0x2b0, V220]
Stack pops: 1
Stack additions: [S0, V663, 0x28b7bede, V665, 0x20, V662, V668, V662, 0x0, V663, V671]
Exit stack: [V13, 0x2b0, V220, V663, 0x28b7bede, V665, 0x20, V662, V668, V662, 0x0, V663, V671]

================================

Block 0x8e9
[0x8e9:0x8ec]
---
Predecessors: [0x86d]
Successors: []
---
0x8e9 PUSH1 0x0
0x8eb DUP1
0x8ec REVERT
---
0x8e9: V674 = 0x0
0x8ec: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2b0, V220, V663, 0x28b7bede, V665, 0x20, V662, V668, V662, 0x0, V663, V671]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V220, V663, 0x28b7bede, V665, 0x20, V662, V668, V662, 0x0, V663, V671]

================================

Block 0x8ed
[0x8ed:0x8f7]
---
Predecessors: [0x86d]
Successors: [0x8f8, 0x901]
---
0x8ed JUMPDEST
0x8ee POP
0x8ef GAS
0x8f0 CALL
0x8f1 ISZERO
0x8f2 DUP1
0x8f3 ISZERO
0x8f4 PUSH2 0x901
0x8f7 JUMPI
---
0x8ed: JUMPDEST 
0x8ef: V675 = GAS
0x8f0: V676 = CALL V675 V663 0x0 V662 V668 V662 0x20
0x8f1: V677 = ISZERO V676
0x8f3: V678 = ISZERO V677
0x8f4: V679 = 0x901
0x8f7: JUMPI 0x901 V678
---
Entry stack: [V13, 0x2b0, V220, V663, 0x28b7bede, V665, 0x20, V662, V668, V662, 0x0, V663, V671]
Stack pops: 7
Stack additions: [V677]
Exit stack: [V13, 0x2b0, V220, V663, 0x28b7bede, V665, V677]

================================

Block 0x8f8
[0x8f8:0x900]
---
Predecessors: [0x8ed]
Successors: []
---
0x8f8 RETURNDATASIZE
0x8f9 PUSH1 0x0
0x8fb DUP1
0x8fc RETURNDATACOPY
0x8fd RETURNDATASIZE
0x8fe PUSH1 0x0
0x900 REVERT
---
0x8f8: V680 = RETURNDATASIZE
0x8f9: V681 = 0x0
0x8fc: RETURNDATACOPY 0x0 0x0 V680
0x8fd: V682 = RETURNDATASIZE
0x8fe: V683 = 0x0
0x900: REVERT 0x0 V682
---
Entry stack: [V13, 0x2b0, V220, V663, 0x28b7bede, V665, V677]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V220, V663, 0x28b7bede, V665, V677]

================================

Block 0x901
[0x901:0x912]
---
Predecessors: [0x8ed]
Successors: [0x913, 0x917]
---
0x901 JUMPDEST
0x902 POP
0x903 POP
0x904 POP
0x905 POP
0x906 PUSH1 0x40
0x908 MLOAD
0x909 RETURNDATASIZE
0x90a PUSH1 0x20
0x90c DUP2
0x90d LT
0x90e ISZERO
0x90f PUSH2 0x917
0x912 JUMPI
---
0x901: JUMPDEST 
0x906: V684 = 0x40
0x908: V685 = M[0x40]
0x909: V686 = RETURNDATASIZE
0x90a: V687 = 0x20
0x90d: V688 = LT V686 0x20
0x90e: V689 = ISZERO V688
0x90f: V690 = 0x917
0x912: JUMPI 0x917 V689
---
Entry stack: [V13, 0x2b0, V220, V663, 0x28b7bede, V665, V677]
Stack pops: 4
Stack additions: [V685, V686]
Exit stack: [V13, 0x2b0, V220, V685, V686]

================================

Block 0x913
[0x913:0x916]
---
Predecessors: [0x901]
Successors: []
---
0x913 PUSH1 0x0
0x915 DUP1
0x916 REVERT
---
0x913: V691 = 0x0
0x916: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2b0, V220, V685, V686]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V220, V685, V686]

================================

Block 0x917
[0x917:0x965]
---
Predecessors: [0x901]
Successors: [0x2b0]
---
0x917 JUMPDEST
0x918 POP
0x919 MLOAD
0x91a PUSH1 0x3
0x91c DUP1
0x91d SLOAD
0x91e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x933 NOT
0x934 AND
0x935 PUSH1 0x1
0x937 PUSH1 0xa0
0x939 PUSH1 0x2
0x93b EXP
0x93c SUB
0x93d SWAP1
0x93e SWAP3
0x93f AND
0x940 SWAP2
0x941 SWAP1
0x942 SWAP2
0x943 OR
0x944 SWAP1
0x945 SSTORE
0x946 POP
0x947 PUSH1 0x2
0x949 DUP1
0x94a SLOAD
0x94b PUSH21 0xff0000000000000000000000000000000000000000
0x961 NOT
0x962 AND
0x963 SWAP1
0x964 SSTORE
0x965 JUMP
---
0x917: JUMPDEST 
0x919: V692 = M[V685]
0x91a: V693 = 0x3
0x91d: V694 = S[0x3]
0x91e: V695 = 0xffffffffffffffffffffffffffffffffffffffff
0x933: V696 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x934: V697 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V694
0x935: V698 = 0x1
0x937: V699 = 0xa0
0x939: V700 = 0x2
0x93b: V701 = EXP 0x2 0xa0
0x93c: V702 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93f: V703 = AND V692 0xffffffffffffffffffffffffffffffffffffffff
0x943: V704 = OR V703 V697
0x945: S[0x3] = V704
0x947: V705 = 0x2
0x94a: V706 = S[0x2]
0x94b: V707 = 0xff0000000000000000000000000000000000000000
0x961: V708 = NOT 0xff0000000000000000000000000000000000000000
0x962: V709 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V706
0x964: S[0x2] = V709
0x965: JUMP 0x2b0
---
Entry stack: [V13, 0x2b0, V220, V685, V686]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x966
[0x966:0x97b]
---
Predecessors: [0x2be]
Successors: [0x97c, 0x9f1]
---
0x966 JUMPDEST
0x967 PUSH1 0x2
0x969 SLOAD
0x96a PUSH1 0x0
0x96c SWAP1
0x96d PUSH1 0xa0
0x96f PUSH1 0x2
0x971 EXP
0x972 SWAP1
0x973 DIV
0x974 PUSH1 0xff
0x976 AND
0x977 ISZERO
0x978 PUSH2 0x9f1
0x97b JUMPI
---
0x966: JUMPDEST 
0x967: V710 = 0x2
0x969: V711 = S[0x2]
0x96a: V712 = 0x0
0x96d: V713 = 0xa0
0x96f: V714 = 0x2
0x971: V715 = EXP 0x2 0xa0
0x973: V716 = DIV V711 0x10000000000000000000000000000000000000000
0x974: V717 = 0xff
0x976: V718 = AND 0xff V716
0x977: V719 = ISZERO V718
0x978: V720 = 0x9f1
0x97b: JUMPI 0x9f1 V719
---
Entry stack: [V13, 0x208]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x97c
[0x97c:0x9f0]
---
Predecessors: [0x966]
Successors: []
---
0x97c PUSH1 0x40
0x97e DUP1
0x97f MLOAD
0x980 PUSH1 0xe5
0x982 PUSH1 0x2
0x984 EXP
0x985 PUSH3 0x461bcd
0x989 MUL
0x98a DUP2
0x98b MSTORE
0x98c PUSH1 0x20
0x98e PUSH1 0x4
0x990 DUP3
0x991 ADD
0x992 MSTORE
0x993 PUSH1 0x30
0x995 PUSH1 0x24
0x997 DUP3
0x998 ADD
0x999 MSTORE
0x99a PUSH32 0x466f727761726465722067657444657642616e6b206661696c6564202d206e6f
0x9bb PUSH1 0x44
0x9bd DUP3
0x9be ADD
0x9bf MSTORE
0x9c0 PUSH32 0x20726567697374657265642062616e6b00000000000000000000000000000000
0x9e1 PUSH1 0x64
0x9e3 DUP3
0x9e4 ADD
0x9e5 MSTORE
0x9e6 SWAP1
0x9e7 MLOAD
0x9e8 SWAP1
0x9e9 DUP2
0x9ea SWAP1
0x9eb SUB
0x9ec PUSH1 0x84
0x9ee ADD
0x9ef SWAP1
0x9f0 REVERT
---
0x97c: V721 = 0x40
0x97f: V722 = M[0x40]
0x980: V723 = 0xe5
0x982: V724 = 0x2
0x984: V725 = EXP 0x2 0xe5
0x985: V726 = 0x461bcd
0x989: V727 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x98b: M[V722] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x98c: V728 = 0x20
0x98e: V729 = 0x4
0x991: V730 = ADD V722 0x4
0x992: M[V730] = 0x20
0x993: V731 = 0x30
0x995: V732 = 0x24
0x998: V733 = ADD V722 0x24
0x999: M[V733] = 0x30
0x99a: V734 = 0x466f727761726465722067657444657642616e6b206661696c6564202d206e6f
0x9bb: V735 = 0x44
0x9be: V736 = ADD V722 0x44
0x9bf: M[V736] = 0x466f727761726465722067657444657642616e6b206661696c6564202d206e6f
0x9c0: V737 = 0x20726567697374657265642062616e6b00000000000000000000000000000000
0x9e1: V738 = 0x64
0x9e4: V739 = ADD V722 0x64
0x9e5: M[V739] = 0x20726567697374657265642062616e6b00000000000000000000000000000000
0x9e7: V740 = M[0x40]
0x9eb: V741 = SUB V722 V740
0x9ec: V742 = 0x84
0x9ee: V743 = ADD 0x84 V741
0x9f0: REVERT V740 V743
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x9f1
[0x9f1:0xa49]
---
Predecessors: [0x966]
Successors: [0x57a, 0xa4a]
---
0x9f1 JUMPDEST
0x9f2 PUSH1 0x4
0x9f4 DUP1
0x9f5 SLOAD
0x9f6 PUSH1 0x40
0x9f8 DUP1
0x9f9 MLOAD
0x9fa PUSH32 0x7c784a0100000000000000000000000000000000000000000000000000000000
0xa1b DUP2
0xa1c MSTORE
0xa1d SWAP1
0xa1e MLOAD
0xa1f PUSH1 0x1
0xa21 PUSH1 0xa0
0xa23 PUSH1 0x2
0xa25 EXP
0xa26 SUB
0xa27 SWAP1
0xa28 SWAP3
0xa29 AND
0xa2a SWAP3
0xa2b PUSH4 0x7c784a01
0xa30 SWAP3
0xa31 DUP3
0xa32 DUP3
0xa33 ADD
0xa34 SWAP3
0xa35 PUSH1 0x20
0xa37 SWAP3
0xa38 SWAP1
0xa39 DUP3
0xa3a SWAP1
0xa3b SUB
0xa3c ADD
0xa3d DUP2
0xa3e PUSH1 0x0
0xa40 DUP8
0xa41 DUP1
0xa42 EXTCODESIZE
0xa43 ISZERO
0xa44 DUP1
0xa45 ISZERO
0xa46 PUSH2 0x57a
0xa49 JUMPI
---
0x9f1: JUMPDEST 
0x9f2: V744 = 0x4
0x9f5: V745 = S[0x4]
0x9f6: V746 = 0x40
0x9f9: V747 = M[0x40]
0x9fa: V748 = 0x7c784a0100000000000000000000000000000000000000000000000000000000
0xa1c: M[V747] = 0x7c784a0100000000000000000000000000000000000000000000000000000000
0xa1e: V749 = M[0x40]
0xa1f: V750 = 0x1
0xa21: V751 = 0xa0
0xa23: V752 = 0x2
0xa25: V753 = EXP 0x2 0xa0
0xa26: V754 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa29: V755 = AND V745 0xffffffffffffffffffffffffffffffffffffffff
0xa2b: V756 = 0x7c784a01
0xa33: V757 = ADD 0x4 V747
0xa35: V758 = 0x20
0xa3b: V759 = SUB V747 V749
0xa3c: V760 = ADD V759 0x4
0xa3e: V761 = 0x0
0xa42: V762 = EXTCODESIZE V755
0xa43: V763 = ISZERO V762
0xa45: V764 = ISZERO V763
0xa46: V765 = 0x57a
0xa49: JUMPI 0x57a V764
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 0
Stack additions: [V755, 0x7c784a01, V757, 0x20, V749, V760, V749, 0x0, V755, V763]
Exit stack: [V13, 0x208, 0x0, V755, 0x7c784a01, V757, 0x20, V749, V760, V749, 0x0, V755, V763]

================================

Block 0xa4a
[0xa4a:0xa4d]
---
Predecessors: [0x9f1]
Successors: []
---
0xa4a PUSH1 0x0
0xa4c DUP1
0xa4d REVERT
---
0xa4a: V766 = 0x0
0xa4d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x208, 0x0, V755, 0x7c784a01, V757, 0x20, V749, V760, V749, 0x0, V755, V763]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0, V755, 0x7c784a01, V757, 0x20, V749, V760, V749, 0x0, V755, V763]

================================

Block 0xa4e
[0xa4e:0xa63]
---
Predecessors: [0x2d3]
Successors: [0xa64, 0xaff]
---
0xa4e JUMPDEST
0xa4f PUSH1 0x2
0xa51 SLOAD
0xa52 PUSH1 0x0
0xa54 SWAP1
0xa55 PUSH1 0x1
0xa57 PUSH1 0xa0
0xa59 PUSH1 0x2
0xa5b EXP
0xa5c SUB
0xa5d AND
0xa5e CALLER
0xa5f EQ
0xa60 PUSH2 0xaff
0xa63 JUMPI
---
0xa4e: JUMPDEST 
0xa4f: V767 = 0x2
0xa51: V768 = S[0x2]
0xa52: V769 = 0x0
0xa55: V770 = 0x1
0xa57: V771 = 0xa0
0xa59: V772 = 0x2
0xa5b: V773 = EXP 0x2 0xa0
0xa5c: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5d: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V768
0xa5e: V776 = CALLER
0xa5f: V777 = EQ V776 V775
0xa60: V778 = 0xaff
0xa63: JUMPI 0xaff V777
---
Entry stack: [V13, 0x1df]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1df, 0x0]

================================

Block 0xa64
[0xa64:0xafe]
---
Predecessors: [0xa4e]
Successors: []
---
0xa64 PUSH1 0x40
0xa66 DUP1
0xa67 MLOAD
0xa68 PUSH1 0xe5
0xa6a PUSH1 0x2
0xa6c EXP
0xa6d PUSH3 0x461bcd
0xa71 MUL
0xa72 DUP2
0xa73 MSTORE
0xa74 PUSH1 0x20
0xa76 PUSH1 0x4
0xa78 DUP3
0xa79 ADD
0xa7a MSTORE
0xa7b PUSH1 0x43
0xa7d PUSH1 0x24
0xa7f DUP3
0xa80 ADD
0xa81 MSTORE
0xa82 PUSH32 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0xaa3 PUSH1 0x44
0xaa5 DUP3
0xaa6 ADD
0xaa7 MSTORE
0xaa8 PUSH32 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0xac9 PUSH1 0x64
0xacb DUP3
0xacc ADD
0xacd MSTORE
0xace PUSH32 0x616e6b0000000000000000000000000000000000000000000000000000000000
0xaef PUSH1 0x84
0xaf1 DUP3
0xaf2 ADD
0xaf3 MSTORE
0xaf4 SWAP1
0xaf5 MLOAD
0xaf6 SWAP1
0xaf7 DUP2
0xaf8 SWAP1
0xaf9 SUB
0xafa PUSH1 0xa4
0xafc ADD
0xafd SWAP1
0xafe REVERT
---
0xa64: V779 = 0x40
0xa67: V780 = M[0x40]
0xa68: V781 = 0xe5
0xa6a: V782 = 0x2
0xa6c: V783 = EXP 0x2 0xe5
0xa6d: V784 = 0x461bcd
0xa71: V785 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xa73: M[V780] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa74: V786 = 0x20
0xa76: V787 = 0x4
0xa79: V788 = ADD V780 0x4
0xa7a: M[V788] = 0x20
0xa7b: V789 = 0x43
0xa7d: V790 = 0x24
0xa80: V791 = ADD V780 0x24
0xa81: M[V791] = 0x43
0xa82: V792 = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0xaa3: V793 = 0x44
0xaa6: V794 = ADD V780 0x44
0xaa7: M[V794] = 0x466f727761726465722066696e6973684d6967726174696f6e206661696c6564
0xaa8: V795 = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0xac9: V796 = 0x64
0xacc: V797 = ADD V780 0x64
0xacd: M[V797] = 0x202d206d73672e73656e646572206d757374206265206e657720636f72702062
0xace: V798 = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0xaef: V799 = 0x84
0xaf2: V800 = ADD V780 0x84
0xaf3: M[V800] = 0x616e6b0000000000000000000000000000000000000000000000000000000000
0xaf5: V801 = M[0x40]
0xaf9: V802 = SUB V780 V801
0xafa: V803 = 0xa4
0xafc: V804 = ADD 0xa4 V802
0xafe: REVERT V801 V804
---
Entry stack: [V13, 0x1df, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, 0x0]

================================

Block 0xaff
[0xaff:0xb7b]
---
Predecessors: [0xa4e]
Successors: [0xb7c, 0xb80]
---
0xaff JUMPDEST
0xb00 PUSH1 0x2
0xb02 SLOAD
0xb03 PUSH1 0x4
0xb05 DUP1
0xb06 SLOAD
0xb07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1c NOT
0xb1d AND
0xb1e PUSH1 0x1
0xb20 PUSH1 0xa0
0xb22 PUSH1 0x2
0xb24 EXP
0xb25 SUB
0xb26 SWAP3
0xb27 DUP4
0xb28 AND
0xb29 OR
0xb2a DUP1
0xb2b DUP3
0xb2c SSTORE
0xb2d PUSH1 0x40
0xb2f DUP1
0xb30 MLOAD
0xb31 PUSH32 0x28b7bede00000000000000000000000000000000000000000000000000000000
0xb52 DUP2
0xb53 MSTORE
0xb54 SWAP1
0xb55 MLOAD
0xb56 SWAP2
0xb57 SWAP1
0xb58 SWAP4
0xb59 AND
0xb5a SWAP3
0xb5b PUSH4 0x28b7bede
0xb60 SWAP3
0xb61 DUP2
0xb62 DUP2
0xb63 ADD
0xb64 SWAP3
0xb65 PUSH1 0x20
0xb67 SWAP3
0xb68 SWAP1
0xb69 SWAP2
0xb6a SWAP1
0xb6b DUP3
0xb6c SWAP1
0xb6d SUB
0xb6e ADD
0xb6f DUP2
0xb70 PUSH1 0x0
0xb72 DUP8
0xb73 DUP1
0xb74 EXTCODESIZE
0xb75 ISZERO
0xb76 DUP1
0xb77 ISZERO
0xb78 PUSH2 0xb80
0xb7b JUMPI
---
0xaff: JUMPDEST 
0xb00: V805 = 0x2
0xb02: V806 = S[0x2]
0xb03: V807 = 0x4
0xb06: V808 = S[0x4]
0xb07: V809 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1c: V810 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb1d: V811 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V808
0xb1e: V812 = 0x1
0xb20: V813 = 0xa0
0xb22: V814 = 0x2
0xb24: V815 = EXP 0x2 0xa0
0xb25: V816 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb28: V817 = AND 0xffffffffffffffffffffffffffffffffffffffff V806
0xb29: V818 = OR V817 V811
0xb2c: S[0x4] = V818
0xb2d: V819 = 0x40
0xb30: V820 = M[0x40]
0xb31: V821 = 0x28b7bede00000000000000000000000000000000000000000000000000000000
0xb53: M[V820] = 0x28b7bede00000000000000000000000000000000000000000000000000000000
0xb55: V822 = M[0x40]
0xb59: V823 = AND 0xffffffffffffffffffffffffffffffffffffffff V818
0xb5b: V824 = 0x28b7bede
0xb63: V825 = ADD 0x4 V820
0xb65: V826 = 0x20
0xb6d: V827 = SUB V820 V822
0xb6e: V828 = ADD V827 0x4
0xb70: V829 = 0x0
0xb74: V830 = EXTCODESIZE V823
0xb75: V831 = ISZERO V830
0xb77: V832 = ISZERO V831
0xb78: V833 = 0xb80
0xb7b: JUMPI 0xb80 V832
---
Entry stack: [V13, 0x1df, 0x0]
Stack pops: 0
Stack additions: [V823, 0x28b7bede, V825, 0x20, V822, V828, V822, 0x0, V823, V831]
Exit stack: [V13, 0x1df, 0x0, V823, 0x28b7bede, V825, 0x20, V822, V828, V822, 0x0, V823, V831]

================================

Block 0xb7c
[0xb7c:0xb7f]
---
Predecessors: [0xaff]
Successors: []
---
0xb7c PUSH1 0x0
0xb7e DUP1
0xb7f REVERT
---
0xb7c: V834 = 0x0
0xb7f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1df, 0x0, V823, 0x28b7bede, V825, 0x20, V822, V828, V822, 0x0, V823, V831]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, 0x0, V823, 0x28b7bede, V825, 0x20, V822, V828, V822, 0x0, V823, V831]

================================

Block 0xb80
[0xb80:0xb8a]
---
Predecessors: [0xaff]
Successors: [0xb8b, 0xb94]
---
0xb80 JUMPDEST
0xb81 POP
0xb82 GAS
0xb83 CALL
0xb84 ISZERO
0xb85 DUP1
0xb86 ISZERO
0xb87 PUSH2 0xb94
0xb8a JUMPI
---
0xb80: JUMPDEST 
0xb82: V835 = GAS
0xb83: V836 = CALL V835 V823 0x0 V822 V828 V822 0x20
0xb84: V837 = ISZERO V836
0xb86: V838 = ISZERO V837
0xb87: V839 = 0xb94
0xb8a: JUMPI 0xb94 V838
---
Entry stack: [V13, 0x1df, 0x0, V823, 0x28b7bede, V825, 0x20, V822, V828, V822, 0x0, V823, V831]
Stack pops: 7
Stack additions: [V837]
Exit stack: [V13, 0x1df, 0x0, V823, 0x28b7bede, V825, V837]

================================

Block 0xb8b
[0xb8b:0xb93]
---
Predecessors: [0xb80]
Successors: []
---
0xb8b RETURNDATASIZE
0xb8c PUSH1 0x0
0xb8e DUP1
0xb8f RETURNDATACOPY
0xb90 RETURNDATASIZE
0xb91 PUSH1 0x0
0xb93 REVERT
---
0xb8b: V840 = RETURNDATASIZE
0xb8c: V841 = 0x0
0xb8f: RETURNDATACOPY 0x0 0x0 V840
0xb90: V842 = RETURNDATASIZE
0xb91: V843 = 0x0
0xb93: REVERT 0x0 V842
---
Entry stack: [V13, 0x1df, 0x0, V823, 0x28b7bede, V825, V837]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, 0x0, V823, 0x28b7bede, V825, V837]

================================

Block 0xb94
[0xb94:0xba5]
---
Predecessors: [0xb80]
Successors: [0xba6, 0xbaa]
---
0xb94 JUMPDEST
0xb95 POP
0xb96 POP
0xb97 POP
0xb98 POP
0xb99 PUSH1 0x40
0xb9b MLOAD
0xb9c RETURNDATASIZE
0xb9d PUSH1 0x20
0xb9f DUP2
0xba0 LT
0xba1 ISZERO
0xba2 PUSH2 0xbaa
0xba5 JUMPI
---
0xb94: JUMPDEST 
0xb99: V844 = 0x40
0xb9b: V845 = M[0x40]
0xb9c: V846 = RETURNDATASIZE
0xb9d: V847 = 0x20
0xba0: V848 = LT V846 0x20
0xba1: V849 = ISZERO V848
0xba2: V850 = 0xbaa
0xba5: JUMPI 0xbaa V849
---
Entry stack: [V13, 0x1df, 0x0, V823, 0x28b7bede, V825, V837]
Stack pops: 4
Stack additions: [V845, V846]
Exit stack: [V13, 0x1df, 0x0, V845, V846]

================================

Block 0xba6
[0xba6:0xba9]
---
Predecessors: [0xb94]
Successors: []
---
0xba6 PUSH1 0x0
0xba8 DUP1
0xba9 REVERT
---
0xba6: V851 = 0x0
0xba9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1df, 0x0, V845, V846]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, 0x0, V845, V846]

================================

Block 0xbaa
[0xbaa:0xbe5]
---
Predecessors: [0xb94]
Successors: [0x1df]
---
0xbaa JUMPDEST
0xbab POP
0xbac MLOAD
0xbad PUSH1 0x3
0xbaf DUP1
0xbb0 SLOAD
0xbb1 PUSH1 0x1
0xbb3 PUSH1 0xa0
0xbb5 PUSH1 0x2
0xbb7 EXP
0xbb8 SUB
0xbb9 SWAP1
0xbba SWAP3
0xbbb AND
0xbbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd1 NOT
0xbd2 SWAP3
0xbd3 DUP4
0xbd4 AND
0xbd5 OR
0xbd6 SWAP1
0xbd7 SSTORE
0xbd8 PUSH1 0x2
0xbda DUP1
0xbdb SLOAD
0xbdc SWAP1
0xbdd SWAP2
0xbde AND
0xbdf SWAP1
0xbe0 SSTORE
0xbe1 POP
0xbe2 PUSH1 0x1
0xbe4 SWAP1
0xbe5 JUMP
---
0xbaa: JUMPDEST 
0xbac: V852 = M[V845]
0xbad: V853 = 0x3
0xbb0: V854 = S[0x3]
0xbb1: V855 = 0x1
0xbb3: V856 = 0xa0
0xbb5: V857 = 0x2
0xbb7: V858 = EXP 0x2 0xa0
0xbb8: V859 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbbb: V860 = AND V852 0xffffffffffffffffffffffffffffffffffffffff
0xbbc: V861 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd1: V862 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbd4: V863 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V854
0xbd5: V864 = OR V863 V860
0xbd7: S[0x3] = V864
0xbd8: V865 = 0x2
0xbdb: V866 = S[0x2]
0xbde: V867 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V866
0xbe0: S[0x2] = V867
0xbe2: V868 = 0x1
0xbe5: JUMP 0x1df
---
Entry stack: [V13, 0x1df, 0x0, V845, V846]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0xbe6
[0xbe6:0xbfb]
---
Predecessors: [0x2e8]
Successors: [0xbfc, 0xc97]
---
0xbe6 JUMPDEST
0xbe7 PUSH1 0x4
0xbe9 SLOAD
0xbea PUSH1 0x0
0xbec SWAP1
0xbed PUSH1 0x1
0xbef PUSH1 0xa0
0xbf1 PUSH1 0x2
0xbf3 EXP
0xbf4 SUB
0xbf5 AND
0xbf6 CALLER
0xbf7 EQ
0xbf8 PUSH2 0xc97
0xbfb JUMPI
---
0xbe6: JUMPDEST 
0xbe7: V869 = 0x4
0xbe9: V870 = S[0x4]
0xbea: V871 = 0x0
0xbed: V872 = 0x1
0xbef: V873 = 0xa0
0xbf1: V874 = 0x2
0xbf3: V875 = EXP 0x2 0xa0
0xbf4: V876 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf5: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff V870
0xbf6: V878 = CALLER
0xbf7: V879 = EQ V878 V877
0xbf8: V880 = 0xc97
0xbfb: JUMPI 0xc97 V879
---
Entry stack: [V13, 0x1df, V246]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1df, V246, 0x0]

================================

Block 0xbfc
[0xbfc:0xc96]
---
Predecessors: [0xbe6]
Successors: []
---
0xbfc PUSH1 0x40
0xbfe DUP1
0xbff MLOAD
0xc00 PUSH1 0xe5
0xc02 PUSH1 0x2
0xc04 EXP
0xc05 PUSH3 0x461bcd
0xc09 MUL
0xc0a DUP2
0xc0b MSTORE
0xc0c PUSH1 0x20
0xc0e PUSH1 0x4
0xc10 DUP3
0xc11 ADD
0xc12 MSTORE
0xc13 PUSH1 0x46
0xc15 PUSH1 0x24
0xc17 DUP3
0xc18 ADD
0xc19 MSTORE
0xc1a PUSH32 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0xc3b PUSH1 0x44
0xc3d DUP3
0xc3e ADD
0xc3f MSTORE
0xc40 PUSH32 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0xc61 PUSH1 0x64
0xc63 DUP3
0xc64 ADD
0xc65 MSTORE
0xc66 PUSH32 0x702062616e6b0000000000000000000000000000000000000000000000000000
0xc87 PUSH1 0x84
0xc89 DUP3
0xc8a ADD
0xc8b MSTORE
0xc8c SWAP1
0xc8d MLOAD
0xc8e SWAP1
0xc8f DUP2
0xc90 SWAP1
0xc91 SUB
0xc92 PUSH1 0xa4
0xc94 ADD
0xc95 SWAP1
0xc96 REVERT
---
0xbfc: V881 = 0x40
0xbff: V882 = M[0x40]
0xc00: V883 = 0xe5
0xc02: V884 = 0x2
0xc04: V885 = EXP 0x2 0xe5
0xc05: V886 = 0x461bcd
0xc09: V887 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xc0b: M[V882] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc0c: V888 = 0x20
0xc0e: V889 = 0x4
0xc11: V890 = ADD V882 0x4
0xc12: M[V890] = 0x20
0xc13: V891 = 0x46
0xc15: V892 = 0x24
0xc18: V893 = ADD V882 0x24
0xc19: M[V893] = 0x46
0xc1a: V894 = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0xc3b: V895 = 0x44
0xc3e: V896 = ADD V882 0x44
0xc3f: M[V896] = 0x466f727761726465722073746172744d6967726174696f6e206661696c656420
0xc40: V897 = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0xc61: V898 = 0x64
0xc64: V899 = ADD V882 0x64
0xc65: M[V899] = 0x2d206d73672e73656e646572206d7573742062652063757272656e7420636f72
0xc66: V900 = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0xc87: V901 = 0x84
0xc8a: V902 = ADD V882 0x84
0xc8b: M[V902] = 0x702062616e6b0000000000000000000000000000000000000000000000000000
0xc8d: V903 = M[0x40]
0xc91: V904 = SUB V882 V903
0xc92: V905 = 0xa4
0xc94: V906 = ADD 0xa4 V904
0xc96: REVERT V903 V906
---
Entry stack: [V13, 0x1df, V246, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, V246, 0x0]

================================

Block 0xc97
[0xc97:0xcd0]
---
Predecessors: [0xbe6]
Successors: [0xcd1, 0xcd5]
---
0xc97 JUMPDEST
0xc98 DUP2
0xc99 PUSH1 0x1
0xc9b PUSH1 0xa0
0xc9d PUSH1 0x2
0xc9f EXP
0xca0 SUB
0xca1 AND
0xca2 PUSH4 0x839e0fb
0xca7 PUSH1 0x40
0xca9 MLOAD
0xcaa DUP2
0xcab PUSH4 0xffffffff
0xcb0 AND
0xcb1 PUSH1 0xe0
0xcb3 PUSH1 0x2
0xcb5 EXP
0xcb6 MUL
0xcb7 DUP2
0xcb8 MSTORE
0xcb9 PUSH1 0x4
0xcbb ADD
0xcbc PUSH1 0x20
0xcbe PUSH1 0x40
0xcc0 MLOAD
0xcc1 DUP1
0xcc2 DUP4
0xcc3 SUB
0xcc4 DUP2
0xcc5 PUSH1 0x0
0xcc7 DUP8
0xcc8 DUP1
0xcc9 EXTCODESIZE
0xcca ISZERO
0xccb DUP1
0xccc ISZERO
0xccd PUSH2 0xcd5
0xcd0 JUMPI
---
0xc97: JUMPDEST 
0xc99: V907 = 0x1
0xc9b: V908 = 0xa0
0xc9d: V909 = 0x2
0xc9f: V910 = EXP 0x2 0xa0
0xca0: V911 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca1: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0xca2: V913 = 0x839e0fb
0xca7: V914 = 0x40
0xca9: V915 = M[0x40]
0xcab: V916 = 0xffffffff
0xcb0: V917 = AND 0xffffffff 0x839e0fb
0xcb1: V918 = 0xe0
0xcb3: V919 = 0x2
0xcb5: V920 = EXP 0x2 0xe0
0xcb6: V921 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x839e0fb
0xcb8: M[V915] = 0x839e0fb00000000000000000000000000000000000000000000000000000000
0xcb9: V922 = 0x4
0xcbb: V923 = ADD 0x4 V915
0xcbc: V924 = 0x20
0xcbe: V925 = 0x40
0xcc0: V926 = M[0x40]
0xcc3: V927 = SUB V923 V926
0xcc5: V928 = 0x0
0xcc9: V929 = EXTCODESIZE V912
0xcca: V930 = ISZERO V929
0xccc: V931 = ISZERO V930
0xccd: V932 = 0xcd5
0xcd0: JUMPI 0xcd5 V931
---
Entry stack: [V13, 0x1df, V246, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V912, 0x839e0fb, V923, 0x20, V926, V927, V926, 0x0, V912, V930]
Exit stack: [V13, 0x1df, V246, 0x0, V912, 0x839e0fb, V923, 0x20, V926, V927, V926, 0x0, V912, V930]

================================

Block 0xcd1
[0xcd1:0xcd4]
---
Predecessors: [0xc97]
Successors: []
---
0xcd1 PUSH1 0x0
0xcd3 DUP1
0xcd4 REVERT
---
0xcd1: V933 = 0x0
0xcd4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1df, V246, 0x0, V912, 0x839e0fb, V923, 0x20, V926, V927, V926, 0x0, V912, V930]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, V246, 0x0, V912, 0x839e0fb, V923, 0x20, V926, V927, V926, 0x0, V912, V930]

================================

Block 0xcd5
[0xcd5:0xcdf]
---
Predecessors: [0xc97]
Successors: [0xce0, 0xce9]
---
0xcd5 JUMPDEST
0xcd6 POP
0xcd7 GAS
0xcd8 CALL
0xcd9 ISZERO
0xcda DUP1
0xcdb ISZERO
0xcdc PUSH2 0xce9
0xcdf JUMPI
---
0xcd5: JUMPDEST 
0xcd7: V934 = GAS
0xcd8: V935 = CALL V934 V912 0x0 V926 V927 V926 0x20
0xcd9: V936 = ISZERO V935
0xcdb: V937 = ISZERO V936
0xcdc: V938 = 0xce9
0xcdf: JUMPI 0xce9 V937
---
Entry stack: [V13, 0x1df, V246, 0x0, V912, 0x839e0fb, V923, 0x20, V926, V927, V926, 0x0, V912, V930]
Stack pops: 7
Stack additions: [V936]
Exit stack: [V13, 0x1df, V246, 0x0, V912, 0x839e0fb, V923, V936]

================================

Block 0xce0
[0xce0:0xce8]
---
Predecessors: [0xcd5]
Successors: []
---
0xce0 RETURNDATASIZE
0xce1 PUSH1 0x0
0xce3 DUP1
0xce4 RETURNDATACOPY
0xce5 RETURNDATASIZE
0xce6 PUSH1 0x0
0xce8 REVERT
---
0xce0: V939 = RETURNDATASIZE
0xce1: V940 = 0x0
0xce4: RETURNDATACOPY 0x0 0x0 V939
0xce5: V941 = RETURNDATASIZE
0xce6: V942 = 0x0
0xce8: REVERT 0x0 V941
---
Entry stack: [V13, 0x1df, V246, 0x0, V912, 0x839e0fb, V923, V936]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, V246, 0x0, V912, 0x839e0fb, V923, V936]

================================

Block 0xce9
[0xce9:0xcfa]
---
Predecessors: [0xcd5]
Successors: [0xcfb, 0xcff]
---
0xce9 JUMPDEST
0xcea POP
0xceb POP
0xcec POP
0xced POP
0xcee PUSH1 0x40
0xcf0 MLOAD
0xcf1 RETURNDATASIZE
0xcf2 PUSH1 0x20
0xcf4 DUP2
0xcf5 LT
0xcf6 ISZERO
0xcf7 PUSH2 0xcff
0xcfa JUMPI
---
0xce9: JUMPDEST 
0xcee: V943 = 0x40
0xcf0: V944 = M[0x40]
0xcf1: V945 = RETURNDATASIZE
0xcf2: V946 = 0x20
0xcf5: V947 = LT V945 0x20
0xcf6: V948 = ISZERO V947
0xcf7: V949 = 0xcff
0xcfa: JUMPI 0xcff V948
---
Entry stack: [V13, 0x1df, V246, 0x0, V912, 0x839e0fb, V923, V936]
Stack pops: 4
Stack additions: [V944, V945]
Exit stack: [V13, 0x1df, V246, 0x0, V944, V945]

================================

Block 0xcfb
[0xcfb:0xcfe]
---
Predecessors: [0xce9]
Successors: []
---
0xcfb PUSH1 0x0
0xcfd DUP1
0xcfe REVERT
---
0xcfb: V950 = 0x0
0xcfe: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1df, V246, 0x0, V944, V945]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, V246, 0x0, V944, V945]

================================

Block 0xcff
[0xcff:0xd0b]
---
Predecessors: [0xce9]
Successors: [0xd0c, 0xd3b]
---
0xcff JUMPDEST
0xd00 POP
0xd01 MLOAD
0xd02 ISZERO
0xd03 ISZERO
0xd04 PUSH1 0x1
0xd06 EQ
0xd07 ISZERO
0xd08 PUSH2 0xd3b
0xd0b JUMPI
---
0xcff: JUMPDEST 
0xd01: V951 = M[V944]
0xd02: V952 = ISZERO V951
0xd03: V953 = ISZERO V952
0xd04: V954 = 0x1
0xd06: V955 = EQ 0x1 V953
0xd07: V956 = ISZERO V955
0xd08: V957 = 0xd3b
0xd0b: JUMPI 0xd3b V956
---
Entry stack: [V13, 0x1df, V246, 0x0, V944, V945]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x1df, V246, 0x0]

================================

Block 0xd0c
[0xd0c:0xd3a]
---
Predecessors: [0xcff]
Successors: [0xd3f]
---
0xd0c POP
0xd0d PUSH1 0x2
0xd0f DUP1
0xd10 SLOAD
0xd11 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd26 NOT
0xd27 AND
0xd28 PUSH1 0x1
0xd2a PUSH1 0xa0
0xd2c PUSH1 0x2
0xd2e EXP
0xd2f SUB
0xd30 DUP4
0xd31 AND
0xd32 OR
0xd33 SWAP1
0xd34 SSTORE
0xd35 PUSH1 0x1
0xd37 PUSH2 0xd3f
0xd3a JUMP
---
0xd0d: V958 = 0x2
0xd10: V959 = S[0x2]
0xd11: V960 = 0xffffffffffffffffffffffffffffffffffffffff
0xd26: V961 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd27: V962 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V959
0xd28: V963 = 0x1
0xd2a: V964 = 0xa0
0xd2c: V965 = 0x2
0xd2e: V966 = EXP 0x2 0xa0
0xd2f: V967 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd31: V968 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0xd32: V969 = OR V968 V962
0xd34: S[0x2] = V969
0xd35: V970 = 0x1
0xd37: V971 = 0xd3f
0xd3a: JUMP 0xd3f
---
Entry stack: [V13, 0x1df, V246, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V13, 0x1df, V246, 0x1]

================================

Block 0xd3b
[0xd3b:0xd3e]
---
Predecessors: [0xcff]
Successors: [0xd3f]
---
0xd3b JUMPDEST
0xd3c POP
0xd3d PUSH1 0x0
---
0xd3b: JUMPDEST 
0xd3d: V972 = 0x0
---
Entry stack: [V13, 0x1df, V246, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0x1df, V246, 0x0]

================================

Block 0xd3f
[0xd3f:0xd43]
---
Predecessors: [0xd0c, 0xd3b]
Successors: [0x1df]
---
0xd3f JUMPDEST
0xd40 SWAP2
0xd41 SWAP1
0xd42 POP
0xd43 JUMP
---
0xd3f: JUMPDEST 
0xd43: JUMP 0x1df
---
Entry stack: [V13, 0x1df, V246, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V13, {0x0, 0x1}]

================================

Block 0xd44
[0xd44:0xd59]
---
Predecessors: [0x309]
Successors: [0xd5a, 0xd5e]
---
0xd44 JUMPDEST
0xd45 PUSH1 0x1
0xd47 SLOAD
0xd48 PUSH1 0x0
0xd4a SWAP1
0xd4b PUSH1 0x1
0xd4d PUSH1 0xa0
0xd4f PUSH1 0x2
0xd51 EXP
0xd52 SUB
0xd53 AND
0xd54 CALLER
0xd55 EQ
0xd56 PUSH2 0xd5e
0xd59 JUMPI
---
0xd44: JUMPDEST 
0xd45: V973 = 0x1
0xd47: V974 = S[0x1]
0xd48: V975 = 0x0
0xd4b: V976 = 0x1
0xd4d: V977 = 0xa0
0xd4f: V978 = 0x2
0xd51: V979 = EXP 0x2 0xa0
0xd52: V980 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd53: V981 = AND 0xffffffffffffffffffffffffffffffffffffffff V974
0xd54: V982 = CALLER
0xd55: V983 = EQ V982 V981
0xd56: V984 = 0xd5e
0xd59: JUMPI 0xd5e V983
---
Entry stack: [V13, 0x2b0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x2b0, 0x0]

================================

Block 0xd5a
[0xd5a:0xd5d]
---
Predecessors: [0xd44]
Successors: []
---
0xd5a PUSH1 0x0
0xd5c DUP1
0xd5d REVERT
---
0xd5a: V985 = 0x0
0xd5d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2b0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, 0x0]

================================

Block 0xd5e
[0xd5e:0xd70]
---
Predecessors: [0xd44]
Successors: [0xd71, 0xde6]
---
0xd5e JUMPDEST
0xd5f PUSH1 0x2
0xd61 SLOAD
0xd62 PUSH1 0xa0
0xd64 PUSH1 0x2
0xd66 EXP
0xd67 SWAP1
0xd68 DIV
0xd69 PUSH1 0xff
0xd6b AND
0xd6c ISZERO
0xd6d PUSH2 0xde6
0xd70 JUMPI
---
0xd5e: JUMPDEST 
0xd5f: V986 = 0x2
0xd61: V987 = S[0x2]
0xd62: V988 = 0xa0
0xd64: V989 = 0x2
0xd66: V990 = EXP 0x2 0xa0
0xd68: V991 = DIV V987 0x10000000000000000000000000000000000000000
0xd69: V992 = 0xff
0xd6b: V993 = AND 0xff V991
0xd6c: V994 = ISZERO V993
0xd6d: V995 = 0xde6
0xd70: JUMPI 0xde6 V994
---
Entry stack: [V13, 0x2b0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, 0x0]

================================

Block 0xd71
[0xd71:0xde5]
---
Predecessors: [0xd5e]
Successors: []
---
0xd71 PUSH1 0x40
0xd73 DUP1
0xd74 MLOAD
0xd75 PUSH1 0xe5
0xd77 PUSH1 0x2
0xd79 EXP
0xd7a PUSH3 0x461bcd
0xd7e MUL
0xd7f DUP2
0xd80 MSTORE
0xd81 PUSH1 0x20
0xd83 PUSH1 0x4
0xd85 DUP3
0xd86 ADD
0xd87 MSTORE
0xd88 PUSH1 0x29
0xd8a PUSH1 0x24
0xd8c DUP3
0xd8d ADD
0xd8e MSTORE
0xd8f PUSH32 0x7769746864726177546f6b656e206661696c6564202d206e6f20726567697374
0xdb0 PUSH1 0x44
0xdb2 DUP3
0xdb3 ADD
0xdb4 MSTORE
0xdb5 PUSH32 0x657265642062616e6b0000000000000000000000000000000000000000000000
0xdd6 PUSH1 0x64
0xdd8 DUP3
0xdd9 ADD
0xdda MSTORE
0xddb SWAP1
0xddc MLOAD
0xddd SWAP1
0xdde DUP2
0xddf SWAP1
0xde0 SUB
0xde1 PUSH1 0x84
0xde3 ADD
0xde4 SWAP1
0xde5 REVERT
---
0xd71: V996 = 0x40
0xd74: V997 = M[0x40]
0xd75: V998 = 0xe5
0xd77: V999 = 0x2
0xd79: V1000 = EXP 0x2 0xe5
0xd7a: V1001 = 0x461bcd
0xd7e: V1002 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xd80: M[V997] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xd81: V1003 = 0x20
0xd83: V1004 = 0x4
0xd86: V1005 = ADD V997 0x4
0xd87: M[V1005] = 0x20
0xd88: V1006 = 0x29
0xd8a: V1007 = 0x24
0xd8d: V1008 = ADD V997 0x24
0xd8e: M[V1008] = 0x29
0xd8f: V1009 = 0x7769746864726177546f6b656e206661696c6564202d206e6f20726567697374
0xdb0: V1010 = 0x44
0xdb3: V1011 = ADD V997 0x44
0xdb4: M[V1011] = 0x7769746864726177546f6b656e206661696c6564202d206e6f20726567697374
0xdb5: V1012 = 0x657265642062616e6b0000000000000000000000000000000000000000000000
0xdd6: V1013 = 0x64
0xdd9: V1014 = ADD V997 0x64
0xdda: M[V1014] = 0x657265642062616e6b0000000000000000000000000000000000000000000000
0xddc: V1015 = M[0x40]
0xde0: V1016 = SUB V997 V1015
0xde1: V1017 = 0x84
0xde3: V1018 = ADD 0x84 V1016
0xde5: REVERT V1015 V1018
---
Entry stack: [V13, 0x2b0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, 0x0]

================================

Block 0xde6
[0xde6:0xdf8]
---
Predecessors: [0xd5e]
Successors: [0xdf9, 0xdfd]
---
0xde6 JUMPDEST
0xde7 PUSH1 0x3
0xde9 SLOAD
0xdea PUSH1 0x1
0xdec PUSH1 0xa0
0xdee PUSH1 0x2
0xdf0 EXP
0xdf1 SUB
0xdf2 AND
0xdf3 ISZERO
0xdf4 ISZERO
0xdf5 PUSH2 0xdfd
0xdf8 JUMPI
---
0xde6: JUMPDEST 
0xde7: V1019 = 0x3
0xde9: V1020 = S[0x3]
0xdea: V1021 = 0x1
0xdec: V1022 = 0xa0
0xdee: V1023 = 0x2
0xdf0: V1024 = EXP 0x2 0xa0
0xdf1: V1025 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf2: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffff V1020
0xdf3: V1027 = ISZERO V1026
0xdf4: V1028 = ISZERO V1027
0xdf5: V1029 = 0xdfd
0xdf8: JUMPI 0xdfd V1028
---
Entry stack: [V13, 0x2b0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, 0x0]

================================

Block 0xdf9
[0xdf9:0xdfc]
---
Predecessors: [0xde6]
Successors: []
---
0xdf9 PUSH1 0x0
0xdfb DUP1
0xdfc REVERT
---
0xdf9: V1030 = 0x0
0xdfc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2b0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, 0x0]

================================

Block 0xdfd
[0xdfd:0xe5e]
---
Predecessors: [0xde6]
Successors: [0xe5f, 0xe63]
---
0xdfd JUMPDEST
0xdfe PUSH1 0x3
0xe00 SLOAD
0xe01 PUSH1 0x40
0xe03 DUP1
0xe04 MLOAD
0xe05 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0xe26 DUP2
0xe27 MSTORE
0xe28 ADDRESS
0xe29 PUSH1 0x4
0xe2b DUP3
0xe2c ADD
0xe2d MSTORE
0xe2e SWAP1
0xe2f MLOAD
0xe30 PUSH1 0x1
0xe32 PUSH1 0xa0
0xe34 PUSH1 0x2
0xe36 EXP
0xe37 SUB
0xe38 SWAP1
0xe39 SWAP3
0xe3a AND
0xe3b SWAP2
0xe3c PUSH4 0x70a08231
0xe41 SWAP2
0xe42 PUSH1 0x24
0xe44 DUP1
0xe45 DUP3
0xe46 ADD
0xe47 SWAP3
0xe48 PUSH1 0x20
0xe4a SWAP3
0xe4b SWAP1
0xe4c SWAP2
0xe4d SWAP1
0xe4e DUP3
0xe4f SWAP1
0xe50 SUB
0xe51 ADD
0xe52 DUP2
0xe53 PUSH1 0x0
0xe55 DUP8
0xe56 DUP1
0xe57 EXTCODESIZE
0xe58 ISZERO
0xe59 DUP1
0xe5a ISZERO
0xe5b PUSH2 0xe63
0xe5e JUMPI
---
0xdfd: JUMPDEST 
0xdfe: V1031 = 0x3
0xe00: V1032 = S[0x3]
0xe01: V1033 = 0x40
0xe04: V1034 = M[0x40]
0xe05: V1035 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xe27: M[V1034] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xe28: V1036 = ADDRESS
0xe29: V1037 = 0x4
0xe2c: V1038 = ADD V1034 0x4
0xe2d: M[V1038] = V1036
0xe2f: V1039 = M[0x40]
0xe30: V1040 = 0x1
0xe32: V1041 = 0xa0
0xe34: V1042 = 0x2
0xe36: V1043 = EXP 0x2 0xa0
0xe37: V1044 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3a: V1045 = AND V1032 0xffffffffffffffffffffffffffffffffffffffff
0xe3c: V1046 = 0x70a08231
0xe42: V1047 = 0x24
0xe46: V1048 = ADD V1034 0x24
0xe48: V1049 = 0x20
0xe50: V1050 = SUB V1034 V1039
0xe51: V1051 = ADD V1050 0x24
0xe53: V1052 = 0x0
0xe57: V1053 = EXTCODESIZE V1045
0xe58: V1054 = ISZERO V1053
0xe5a: V1055 = ISZERO V1054
0xe5b: V1056 = 0xe63
0xe5e: JUMPI 0xe63 V1055
---
Entry stack: [V13, 0x2b0, 0x0]
Stack pops: 0
Stack additions: [V1045, 0x70a08231, V1048, 0x20, V1039, V1051, V1039, 0x0, V1045, V1054]
Exit stack: [V13, 0x2b0, 0x0, V1045, 0x70a08231, V1048, 0x20, V1039, V1051, V1039, 0x0, V1045, V1054]

================================

Block 0xe5f
[0xe5f:0xe62]
---
Predecessors: [0xdfd]
Successors: []
---
0xe5f PUSH1 0x0
0xe61 DUP1
0xe62 REVERT
---
0xe5f: V1057 = 0x0
0xe62: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2b0, 0x0, V1045, 0x70a08231, V1048, 0x20, V1039, V1051, V1039, 0x0, V1045, V1054]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, 0x0, V1045, 0x70a08231, V1048, 0x20, V1039, V1051, V1039, 0x0, V1045, V1054]

================================

Block 0xe63
[0xe63:0xe6d]
---
Predecessors: [0xdfd]
Successors: [0xe6e, 0xe77]
---
0xe63 JUMPDEST
0xe64 POP
0xe65 GAS
0xe66 CALL
0xe67 ISZERO
0xe68 DUP1
0xe69 ISZERO
0xe6a PUSH2 0xe77
0xe6d JUMPI
---
0xe63: JUMPDEST 
0xe65: V1058 = GAS
0xe66: V1059 = CALL V1058 V1045 0x0 V1039 V1051 V1039 0x20
0xe67: V1060 = ISZERO V1059
0xe69: V1061 = ISZERO V1060
0xe6a: V1062 = 0xe77
0xe6d: JUMPI 0xe77 V1061
---
Entry stack: [V13, 0x2b0, 0x0, V1045, 0x70a08231, V1048, 0x20, V1039, V1051, V1039, 0x0, V1045, V1054]
Stack pops: 7
Stack additions: [V1060]
Exit stack: [V13, 0x2b0, 0x0, V1045, 0x70a08231, V1048, V1060]

================================

Block 0xe6e
[0xe6e:0xe76]
---
Predecessors: [0xe63]
Successors: []
---
0xe6e RETURNDATASIZE
0xe6f PUSH1 0x0
0xe71 DUP1
0xe72 RETURNDATACOPY
0xe73 RETURNDATASIZE
0xe74 PUSH1 0x0
0xe76 REVERT
---
0xe6e: V1063 = RETURNDATASIZE
0xe6f: V1064 = 0x0
0xe72: RETURNDATACOPY 0x0 0x0 V1063
0xe73: V1065 = RETURNDATASIZE
0xe74: V1066 = 0x0
0xe76: REVERT 0x0 V1065
---
Entry stack: [V13, 0x2b0, 0x0, V1045, 0x70a08231, V1048, V1060]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, 0x0, V1045, 0x70a08231, V1048, V1060]

================================

Block 0xe77
[0xe77:0xe88]
---
Predecessors: [0xe63]
Successors: [0xe89, 0xe8d]
---
0xe77 JUMPDEST
0xe78 POP
0xe79 POP
0xe7a POP
0xe7b POP
0xe7c PUSH1 0x40
0xe7e MLOAD
0xe7f RETURNDATASIZE
0xe80 PUSH1 0x20
0xe82 DUP2
0xe83 LT
0xe84 ISZERO
0xe85 PUSH2 0xe8d
0xe88 JUMPI
---
0xe77: JUMPDEST 
0xe7c: V1067 = 0x40
0xe7e: V1068 = M[0x40]
0xe7f: V1069 = RETURNDATASIZE
0xe80: V1070 = 0x20
0xe83: V1071 = LT V1069 0x20
0xe84: V1072 = ISZERO V1071
0xe85: V1073 = 0xe8d
0xe88: JUMPI 0xe8d V1072
---
Entry stack: [V13, 0x2b0, 0x0, V1045, 0x70a08231, V1048, V1060]
Stack pops: 4
Stack additions: [V1068, V1069]
Exit stack: [V13, 0x2b0, 0x0, V1068, V1069]

================================

Block 0xe89
[0xe89:0xe8c]
---
Predecessors: [0xe77]
Successors: []
---
0xe89 PUSH1 0x0
0xe8b DUP1
0xe8c REVERT
---
0xe89: V1074 = 0x0
0xe8c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2b0, 0x0, V1068, V1069]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, 0x0, V1068, V1069]

================================

Block 0xe8d
[0xe8d:0xf01]
---
Predecessors: [0xe77]
Successors: [0xf02, 0xf06]
---
0xe8d JUMPDEST
0xe8e POP
0xe8f MLOAD
0xe90 PUSH1 0x3
0xe92 SLOAD
0xe93 PUSH1 0x4
0xe95 DUP1
0xe96 SLOAD
0xe97 PUSH1 0x40
0xe99 DUP1
0xe9a MLOAD
0xe9b PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xebc DUP2
0xebd MSTORE
0xebe PUSH1 0x1
0xec0 PUSH1 0xa0
0xec2 PUSH1 0x2
0xec4 EXP
0xec5 SUB
0xec6 SWAP3
0xec7 DUP4
0xec8 AND
0xec9 SWAP4
0xeca DUP2
0xecb ADD
0xecc SWAP4
0xecd SWAP1
0xece SWAP4
0xecf MSTORE
0xed0 PUSH1 0x24
0xed2 DUP4
0xed3 ADD
0xed4 DUP6
0xed5 SWAP1
0xed6 MSTORE
0xed7 MLOAD
0xed8 SWAP4
0xed9 SWAP5
0xeda POP
0xedb SWAP1
0xedc SWAP2
0xedd AND
0xede SWAP2
0xedf PUSH4 0xa9059cbb
0xee4 SWAP2
0xee5 PUSH1 0x44
0xee7 DUP1
0xee8 DUP3
0xee9 ADD
0xeea SWAP3
0xeeb PUSH1 0x20
0xeed SWAP3
0xeee SWAP1
0xeef SWAP2
0xef0 SWAP1
0xef1 DUP3
0xef2 SWAP1
0xef3 SUB
0xef4 ADD
0xef5 DUP2
0xef6 PUSH1 0x0
0xef8 DUP8
0xef9 DUP1
0xefa EXTCODESIZE
0xefb ISZERO
0xefc DUP1
0xefd ISZERO
0xefe PUSH2 0xf06
0xf01 JUMPI
---
0xe8d: JUMPDEST 
0xe8f: V1075 = M[V1068]
0xe90: V1076 = 0x3
0xe92: V1077 = S[0x3]
0xe93: V1078 = 0x4
0xe96: V1079 = S[0x4]
0xe97: V1080 = 0x40
0xe9a: V1081 = M[0x40]
0xe9b: V1082 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xebd: M[V1081] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xebe: V1083 = 0x1
0xec0: V1084 = 0xa0
0xec2: V1085 = 0x2
0xec4: V1086 = EXP 0x2 0xa0
0xec5: V1087 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec8: V1088 = AND 0xffffffffffffffffffffffffffffffffffffffff V1079
0xecb: V1089 = ADD V1081 0x4
0xecf: M[V1089] = V1088
0xed0: V1090 = 0x24
0xed3: V1091 = ADD V1081 0x24
0xed6: M[V1091] = V1075
0xed7: V1092 = M[0x40]
0xedd: V1093 = AND V1077 0xffffffffffffffffffffffffffffffffffffffff
0xedf: V1094 = 0xa9059cbb
0xee5: V1095 = 0x44
0xee9: V1096 = ADD V1081 0x44
0xeeb: V1097 = 0x20
0xef3: V1098 = SUB V1081 V1092
0xef4: V1099 = ADD V1098 0x44
0xef6: V1100 = 0x0
0xefa: V1101 = EXTCODESIZE V1093
0xefb: V1102 = ISZERO V1101
0xefd: V1103 = ISZERO V1102
0xefe: V1104 = 0xf06
0xf01: JUMPI 0xf06 V1103
---
Entry stack: [V13, 0x2b0, 0x0, V1068, V1069]
Stack pops: 3
Stack additions: [V1075, V1093, 0xa9059cbb, V1096, 0x20, V1092, V1099, V1092, 0x0, V1093, V1102]
Exit stack: [V13, 0x2b0, V1075, V1093, 0xa9059cbb, V1096, 0x20, V1092, V1099, V1092, 0x0, V1093, V1102]

================================

Block 0xf02
[0xf02:0xf05]
---
Predecessors: [0xe8d]
Successors: []
---
0xf02 PUSH1 0x0
0xf04 DUP1
0xf05 REVERT
---
0xf02: V1105 = 0x0
0xf05: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2b0, V1075, V1093, 0xa9059cbb, V1096, 0x20, V1092, V1099, V1092, 0x0, V1093, V1102]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V1075, V1093, 0xa9059cbb, V1096, 0x20, V1092, V1099, V1092, 0x0, V1093, V1102]

================================

Block 0xf06
[0xf06:0xf10]
---
Predecessors: [0xe8d]
Successors: [0xf11, 0xf1a]
---
0xf06 JUMPDEST
0xf07 POP
0xf08 GAS
0xf09 CALL
0xf0a ISZERO
0xf0b DUP1
0xf0c ISZERO
0xf0d PUSH2 0xf1a
0xf10 JUMPI
---
0xf06: JUMPDEST 
0xf08: V1106 = GAS
0xf09: V1107 = CALL V1106 V1093 0x0 V1092 V1099 V1092 0x20
0xf0a: V1108 = ISZERO V1107
0xf0c: V1109 = ISZERO V1108
0xf0d: V1110 = 0xf1a
0xf10: JUMPI 0xf1a V1109
---
Entry stack: [V13, 0x2b0, V1075, V1093, 0xa9059cbb, V1096, 0x20, V1092, V1099, V1092, 0x0, V1093, V1102]
Stack pops: 7
Stack additions: [V1108]
Exit stack: [V13, 0x2b0, V1075, V1093, 0xa9059cbb, V1096, V1108]

================================

Block 0xf11
[0xf11:0xf19]
---
Predecessors: [0xf06]
Successors: []
---
0xf11 RETURNDATASIZE
0xf12 PUSH1 0x0
0xf14 DUP1
0xf15 RETURNDATACOPY
0xf16 RETURNDATASIZE
0xf17 PUSH1 0x0
0xf19 REVERT
---
0xf11: V1111 = RETURNDATASIZE
0xf12: V1112 = 0x0
0xf15: RETURNDATACOPY 0x0 0x0 V1111
0xf16: V1113 = RETURNDATASIZE
0xf17: V1114 = 0x0
0xf19: REVERT 0x0 V1113
---
Entry stack: [V13, 0x2b0, V1075, V1093, 0xa9059cbb, V1096, V1108]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V1075, V1093, 0xa9059cbb, V1096, V1108]

================================

Block 0xf1a
[0xf1a:0xf2b]
---
Predecessors: [0xf06]
Successors: [0xf2c, 0xf30]
---
0xf1a JUMPDEST
0xf1b POP
0xf1c POP
0xf1d POP
0xf1e POP
0xf1f PUSH1 0x40
0xf21 MLOAD
0xf22 RETURNDATASIZE
0xf23 PUSH1 0x20
0xf25 DUP2
0xf26 LT
0xf27 ISZERO
0xf28 PUSH2 0xf30
0xf2b JUMPI
---
0xf1a: JUMPDEST 
0xf1f: V1115 = 0x40
0xf21: V1116 = M[0x40]
0xf22: V1117 = RETURNDATASIZE
0xf23: V1118 = 0x20
0xf26: V1119 = LT V1117 0x20
0xf27: V1120 = ISZERO V1119
0xf28: V1121 = 0xf30
0xf2b: JUMPI 0xf30 V1120
---
Entry stack: [V13, 0x2b0, V1075, V1093, 0xa9059cbb, V1096, V1108]
Stack pops: 4
Stack additions: [V1116, V1117]
Exit stack: [V13, 0x2b0, V1075, V1116, V1117]

================================

Block 0xf2c
[0xf2c:0xf2f]
---
Predecessors: [0xf1a]
Successors: []
---
0xf2c PUSH1 0x0
0xf2e DUP1
0xf2f REVERT
---
0xf2c: V1122 = 0x0
0xf2f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2b0, V1075, V1116, V1117]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2b0, V1075, V1116, V1117]

================================

Block 0xf30
[0xf30:0xf34]
---
Predecessors: [0xf1a]
Successors: [0x2b0]
---
0xf30 JUMPDEST
0xf31 POP
0xf32 POP
0xf33 POP
0xf34 JUMP
---
0xf30: JUMPDEST 
0xf34: JUMP 0x2b0
---
Entry stack: [V13, 0x2b0, V1075, V1116, V1117]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0xf35
[0xf35:0xf3e]
---
Predecessors: [0x312]
Successors: [0xf3f, 0xfb4]
---
0xf35 JUMPDEST
0xf36 PUSH1 0x0
0xf38 CALLVALUE
0xf39 DUP2
0xf3a LT
0xf3b PUSH2 0xfb4
0xf3e JUMPI
---
0xf35: JUMPDEST 
0xf36: V1123 = 0x0
0xf38: V1124 = CALLVALUE
0xf3a: V1125 = LT 0x0 V1124
0xf3b: V1126 = 0xfb4
0xf3e: JUMPI 0xfb4 V1125
---
Entry stack: [V13, 0x1df]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1df, 0x0]

================================

Block 0xf3f
[0xf3f:0xfb3]
---
Predecessors: [0xf35]
Successors: []
---
0xf3f PUSH1 0x40
0xf41 DUP1
0xf42 MLOAD
0xf43 PUSH1 0xe5
0xf45 PUSH1 0x2
0xf47 EXP
0xf48 PUSH3 0x461bcd
0xf4c MUL
0xf4d DUP2
0xf4e MSTORE
0xf4f PUSH1 0x20
0xf51 PUSH1 0x4
0xf53 DUP3
0xf54 ADD
0xf55 MSTORE
0xf56 PUSH1 0x34
0xf58 PUSH1 0x24
0xf5a DUP3
0xf5b ADD
0xf5c MSTORE
0xf5d PUSH32 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0xf7e PUSH1 0x44
0xf80 DUP3
0xf81 ADD
0xf82 MSTORE
0xf83 PUSH32 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0xfa4 PUSH1 0x64
0xfa6 DUP3
0xfa7 ADD
0xfa8 MSTORE
0xfa9 SWAP1
0xfaa MLOAD
0xfab SWAP1
0xfac DUP2
0xfad SWAP1
0xfae SUB
0xfaf PUSH1 0x84
0xfb1 ADD
0xfb2 SWAP1
0xfb3 REVERT
---
0xf3f: V1127 = 0x40
0xf42: V1128 = M[0x40]
0xf43: V1129 = 0xe5
0xf45: V1130 = 0x2
0xf47: V1131 = EXP 0x2 0xe5
0xf48: V1132 = 0x461bcd
0xf4c: V1133 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xf4e: M[V1128] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xf4f: V1134 = 0x20
0xf51: V1135 = 0x4
0xf54: V1136 = ADD V1128 0x4
0xf55: M[V1136] = 0x20
0xf56: V1137 = 0x34
0xf58: V1138 = 0x24
0xf5b: V1139 = ADD V1128 0x24
0xf5c: M[V1139] = 0x34
0xf5d: V1140 = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0xf7e: V1141 = 0x44
0xf81: V1142 = ADD V1128 0x44
0xf82: M[V1142] = 0x466f72776172646572204465706f736974206661696c6564202d207a65726f20
0xf83: V1143 = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0xfa4: V1144 = 0x64
0xfa7: V1145 = ADD V1128 0x64
0xfa8: M[V1145] = 0x6465706f73697473206e6f7420616c6c6f776564000000000000000000000000
0xfaa: V1146 = M[0x40]
0xfae: V1147 = SUB V1128 V1146
0xfaf: V1148 = 0x84
0xfb1: V1149 = ADD 0x84 V1147
0xfb3: REVERT V1146 V1149
---
Entry stack: [V13, 0x1df, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, 0x0]

================================

Block 0xfb4
[0xfb4:0xfc6]
---
Predecessors: [0xf35]
Successors: [0xfc7, 0x103c]
---
0xfb4 JUMPDEST
0xfb5 PUSH1 0x2
0xfb7 SLOAD
0xfb8 PUSH1 0xa0
0xfba PUSH1 0x2
0xfbc EXP
0xfbd SWAP1
0xfbe DIV
0xfbf PUSH1 0xff
0xfc1 AND
0xfc2 ISZERO
0xfc3 PUSH2 0x103c
0xfc6 JUMPI
---
0xfb4: JUMPDEST 
0xfb5: V1150 = 0x2
0xfb7: V1151 = S[0x2]
0xfb8: V1152 = 0xa0
0xfba: V1153 = 0x2
0xfbc: V1154 = EXP 0x2 0xa0
0xfbe: V1155 = DIV V1151 0x10000000000000000000000000000000000000000
0xfbf: V1156 = 0xff
0xfc1: V1157 = AND 0xff V1155
0xfc2: V1158 = ISZERO V1157
0xfc3: V1159 = 0x103c
0xfc6: JUMPI 0x103c V1158
---
Entry stack: [V13, 0x1df, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, 0x0]

================================

Block 0xfc7
[0xfc7:0x103b]
---
Predecessors: [0xfb4]
Successors: []
---
0xfc7 PUSH1 0x40
0xfc9 DUP1
0xfca MLOAD
0xfcb PUSH1 0xe5
0xfcd PUSH1 0x2
0xfcf EXP
0xfd0 PUSH3 0x461bcd
0xfd4 MUL
0xfd5 DUP2
0xfd6 MSTORE
0xfd7 PUSH1 0x20
0xfd9 PUSH1 0x4
0xfdb DUP3
0xfdc ADD
0xfdd MSTORE
0xfde PUSH1 0x2d
0xfe0 PUSH1 0x24
0xfe2 DUP3
0xfe3 ADD
0xfe4 MSTORE
0xfe5 PUSH32 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x1006 PUSH1 0x44
0x1008 DUP3
0x1009 ADD
0x100a MSTORE
0x100b PUSH32 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x102c PUSH1 0x64
0x102e DUP3
0x102f ADD
0x1030 MSTORE
0x1031 SWAP1
0x1032 MLOAD
0x1033 SWAP1
0x1034 DUP2
0x1035 SWAP1
0x1036 SUB
0x1037 PUSH1 0x84
0x1039 ADD
0x103a SWAP1
0x103b REVERT
---
0xfc7: V1160 = 0x40
0xfca: V1161 = M[0x40]
0xfcb: V1162 = 0xe5
0xfcd: V1163 = 0x2
0xfcf: V1164 = EXP 0x2 0xe5
0xfd0: V1165 = 0x461bcd
0xfd4: V1166 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xfd6: M[V1161] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xfd7: V1167 = 0x20
0xfd9: V1168 = 0x4
0xfdc: V1169 = ADD V1161 0x4
0xfdd: M[V1169] = 0x20
0xfde: V1170 = 0x2d
0xfe0: V1171 = 0x24
0xfe3: V1172 = ADD V1161 0x24
0xfe4: M[V1172] = 0x2d
0xfe5: V1173 = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x1006: V1174 = 0x44
0x1009: V1175 = ADD V1161 0x44
0x100a: M[V1175] = 0x466f72776172646572204465706f736974206661696c6564202d206e6f207265
0x100b: V1176 = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x102c: V1177 = 0x64
0x102f: V1178 = ADD V1161 0x64
0x1030: M[V1178] = 0x67697374657265642062616e6b00000000000000000000000000000000000000
0x1032: V1179 = M[0x40]
0x1036: V1180 = SUB V1161 V1179
0x1037: V1181 = 0x84
0x1039: V1182 = ADD 0x84 V1180
0x103b: REVERT V1179 V1182
---
Entry stack: [V13, 0x1df, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, 0x0]

================================

Block 0x103c
[0x103c:0x10a0]
---
Predecessors: [0xfb4]
Successors: [0x10a1, 0x10a5]
---
0x103c JUMPDEST
0x103d PUSH1 0x4
0x103f DUP1
0x1040 SLOAD
0x1041 PUSH1 0x40
0x1043 DUP1
0x1044 MLOAD
0x1045 PUSH32 0xf340fa0100000000000000000000000000000000000000000000000000000000
0x1066 DUP2
0x1067 MSTORE
0x1068 CALLER
0x1069 SWAP4
0x106a DUP2
0x106b ADD
0x106c SWAP4
0x106d SWAP1
0x106e SWAP4
0x106f MSTORE
0x1070 MLOAD
0x1071 PUSH1 0x1
0x1073 PUSH1 0xa0
0x1075 PUSH1 0x2
0x1077 EXP
0x1078 SUB
0x1079 SWAP1
0x107a SWAP2
0x107b AND
0x107c SWAP2
0x107d PUSH4 0xf340fa01
0x1082 SWAP2
0x1083 CALLVALUE
0x1084 SWAP2
0x1085 PUSH1 0x24
0x1087 DUP1
0x1088 DUP3
0x1089 ADD
0x108a SWAP3
0x108b PUSH1 0x20
0x108d SWAP3
0x108e SWAP1
0x108f SWAP2
0x1090 SWAP1
0x1091 DUP3
0x1092 SWAP1
0x1093 SUB
0x1094 ADD
0x1095 DUP2
0x1096 DUP6
0x1097 DUP9
0x1098 DUP1
0x1099 EXTCODESIZE
0x109a ISZERO
0x109b DUP1
0x109c ISZERO
0x109d PUSH2 0x10a5
0x10a0 JUMPI
---
0x103c: JUMPDEST 
0x103d: V1183 = 0x4
0x1040: V1184 = S[0x4]
0x1041: V1185 = 0x40
0x1044: V1186 = M[0x40]
0x1045: V1187 = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0x1067: M[V1186] = 0xf340fa0100000000000000000000000000000000000000000000000000000000
0x1068: V1188 = CALLER
0x106b: V1189 = ADD V1186 0x4
0x106f: M[V1189] = V1188
0x1070: V1190 = M[0x40]
0x1071: V1191 = 0x1
0x1073: V1192 = 0xa0
0x1075: V1193 = 0x2
0x1077: V1194 = EXP 0x2 0xa0
0x1078: V1195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x107b: V1196 = AND V1184 0xffffffffffffffffffffffffffffffffffffffff
0x107d: V1197 = 0xf340fa01
0x1083: V1198 = CALLVALUE
0x1085: V1199 = 0x24
0x1089: V1200 = ADD V1186 0x24
0x108b: V1201 = 0x20
0x1093: V1202 = SUB V1186 V1190
0x1094: V1203 = ADD V1202 0x24
0x1099: V1204 = EXTCODESIZE V1196
0x109a: V1205 = ISZERO V1204
0x109c: V1206 = ISZERO V1205
0x109d: V1207 = 0x10a5
0x10a0: JUMPI 0x10a5 V1206
---
Entry stack: [V13, 0x1df, 0x0]
Stack pops: 0
Stack additions: [V1196, 0xf340fa01, V1198, V1200, 0x20, V1190, V1203, V1190, V1198, V1196, V1205]
Exit stack: [V13, 0x1df, 0x0, V1196, 0xf340fa01, V1198, V1200, 0x20, V1190, V1203, V1190, V1198, V1196, V1205]

================================

Block 0x10a1
[0x10a1:0x10a4]
---
Predecessors: [0x103c]
Successors: []
---
0x10a1 PUSH1 0x0
0x10a3 DUP1
0x10a4 REVERT
---
0x10a1: V1208 = 0x0
0x10a4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1df, 0x0, V1196, 0xf340fa01, V1198, V1200, 0x20, V1190, V1203, V1190, V1198, V1196, V1205]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, 0x0, V1196, 0xf340fa01, V1198, V1200, 0x20, V1190, V1203, V1190, V1198, V1196, V1205]

================================

Block 0x10a5
[0x10a5:0x10af]
---
Predecessors: [0x103c]
Successors: [0x10b0, 0x10b9]
---
0x10a5 JUMPDEST
0x10a6 POP
0x10a7 GAS
0x10a8 CALL
0x10a9 ISZERO
0x10aa DUP1
0x10ab ISZERO
0x10ac PUSH2 0x10b9
0x10af JUMPI
---
0x10a5: JUMPDEST 
0x10a7: V1209 = GAS
0x10a8: V1210 = CALL V1209 V1196 V1198 V1190 V1203 V1190 0x20
0x10a9: V1211 = ISZERO V1210
0x10ab: V1212 = ISZERO V1211
0x10ac: V1213 = 0x10b9
0x10af: JUMPI 0x10b9 V1212
---
Entry stack: [V13, 0x1df, 0x0, V1196, 0xf340fa01, V1198, V1200, 0x20, V1190, V1203, V1190, V1198, V1196, V1205]
Stack pops: 7
Stack additions: [V1211]
Exit stack: [V13, 0x1df, 0x0, V1196, 0xf340fa01, V1198, V1200, V1211]

================================

Block 0x10b0
[0x10b0:0x10b8]
---
Predecessors: [0x10a5]
Successors: []
---
0x10b0 RETURNDATASIZE
0x10b1 PUSH1 0x0
0x10b3 DUP1
0x10b4 RETURNDATACOPY
0x10b5 RETURNDATASIZE
0x10b6 PUSH1 0x0
0x10b8 REVERT
---
0x10b0: V1214 = RETURNDATASIZE
0x10b1: V1215 = 0x0
0x10b4: RETURNDATACOPY 0x0 0x0 V1214
0x10b5: V1216 = RETURNDATASIZE
0x10b6: V1217 = 0x0
0x10b8: REVERT 0x0 V1216
---
Entry stack: [V13, 0x1df, 0x0, V1196, 0xf340fa01, V1198, V1200, V1211]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, 0x0, V1196, 0xf340fa01, V1198, V1200, V1211]

================================

Block 0x10b9
[0x10b9:0x10cb]
---
Predecessors: [0x10a5]
Successors: [0x10cc, 0x10d0]
---
0x10b9 JUMPDEST
0x10ba POP
0x10bb POP
0x10bc POP
0x10bd POP
0x10be POP
0x10bf PUSH1 0x40
0x10c1 MLOAD
0x10c2 RETURNDATASIZE
0x10c3 PUSH1 0x20
0x10c5 DUP2
0x10c6 LT
0x10c7 ISZERO
0x10c8 PUSH2 0x10d0
0x10cb JUMPI
---
0x10b9: JUMPDEST 
0x10bf: V1218 = 0x40
0x10c1: V1219 = M[0x40]
0x10c2: V1220 = RETURNDATASIZE
0x10c3: V1221 = 0x20
0x10c6: V1222 = LT V1220 0x20
0x10c7: V1223 = ISZERO V1222
0x10c8: V1224 = 0x10d0
0x10cb: JUMPI 0x10d0 V1223
---
Entry stack: [V13, 0x1df, 0x0, V1196, 0xf340fa01, V1198, V1200, V1211]
Stack pops: 5
Stack additions: [V1219, V1220]
Exit stack: [V13, 0x1df, 0x0, V1219, V1220]

================================

Block 0x10cc
[0x10cc:0x10cf]
---
Predecessors: [0x10b9]
Successors: []
---
0x10cc PUSH1 0x0
0x10ce DUP1
0x10cf REVERT
---
0x10cc: V1225 = 0x0
0x10cf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1df, 0x0, V1219, V1220]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1df, 0x0, V1219, V1220]

================================

Block 0x10d0
[0x10d0:0x10dc]
---
Predecessors: [0x10b9]
Successors: [0x10dd, 0x10e4]
---
0x10d0 JUMPDEST
0x10d1 POP
0x10d2 MLOAD
0x10d3 ISZERO
0x10d4 ISZERO
0x10d5 PUSH1 0x1
0x10d7 EQ
0x10d8 ISZERO
0x10d9 PUSH2 0x10e4
0x10dc JUMPI
---
0x10d0: JUMPDEST 
0x10d2: V1226 = M[V1219]
0x10d3: V1227 = ISZERO V1226
0x10d4: V1228 = ISZERO V1227
0x10d5: V1229 = 0x1
0x10d7: V1230 = EQ 0x1 V1228
0x10d8: V1231 = ISZERO V1230
0x10d9: V1232 = 0x10e4
0x10dc: JUMPI 0x10e4 V1231
---
Entry stack: [V13, 0x1df, 0x0, V1219, V1220]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x1df, 0x0]

================================

Block 0x10dd
[0x10dd:0x10e3]
---
Predecessors: [0x10d0]
Successors: [0x48f]
---
0x10dd POP
0x10de PUSH1 0x1
0x10e0 PUSH2 0x48f
0x10e3 JUMP
---
0x10de: V1233 = 0x1
0x10e0: V1234 = 0x48f
0x10e3: JUMP 0x48f
---
Entry stack: [V13, 0x1df, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V13, 0x1df, 0x1]

================================

Block 0x10e4
[0x10e4:0x10eb]
---
Predecessors: [0x10d0]
Successors: [0x48f]
---
0x10e4 JUMPDEST
0x10e5 POP
0x10e6 PUSH1 0x0
0x10e8 PUSH2 0x48f
0x10eb JUMP
---
0x10e4: JUMPDEST 
0x10e6: V1235 = 0x0
0x10e8: V1236 = 0x48f
0x10eb: JUMP 0x48f
---
Entry stack: [V13, 0x1df, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0x1df, 0x0]

================================

Block 0x10ec
[0x10ec:0x1101]
---
Predecessors: [0x326]
Successors: [0x1102, 0x1177]
---
0x10ec JUMPDEST
0x10ed PUSH1 0x2
0x10ef SLOAD
0x10f0 PUSH1 0x0
0x10f2 SWAP1
0x10f3 PUSH1 0xa0
0x10f5 PUSH1 0x2
0x10f7 EXP
0x10f8 SWAP1
0x10f9 DIV
0x10fa PUSH1 0xff
0x10fc AND
0x10fd ISZERO
0x10fe PUSH2 0x1177
0x1101 JUMPI
---
0x10ec: JUMPDEST 
0x10ed: V1237 = 0x2
0x10ef: V1238 = S[0x2]
0x10f0: V1239 = 0x0
0x10f3: V1240 = 0xa0
0x10f5: V1241 = 0x2
0x10f7: V1242 = EXP 0x2 0xa0
0x10f9: V1243 = DIV V1238 0x10000000000000000000000000000000000000000
0x10fa: V1244 = 0xff
0x10fc: V1245 = AND 0xff V1243
0x10fd: V1246 = ISZERO V1245
0x10fe: V1247 = 0x1177
0x1101: JUMPI 0x1177 V1246
---
Entry stack: [V13, 0x208]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x1102
[0x1102:0x1176]
---
Predecessors: [0x10ec]
Successors: []
---
0x1102 PUSH1 0x40
0x1104 DUP1
0x1105 MLOAD
0x1106 PUSH1 0xe5
0x1108 PUSH1 0x2
0x110a EXP
0x110b PUSH3 0x461bcd
0x110f MUL
0x1110 DUP2
0x1111 MSTORE
0x1112 PUSH1 0x20
0x1114 PUSH1 0x4
0x1116 DUP3
0x1117 ADD
0x1118 MSTORE
0x1119 PUSH1 0x30
0x111b PUSH1 0x24
0x111d DUP3
0x111e ADD
0x111f MSTORE
0x1120 PUSH32 0x466f7277617264657220676574436f6d42616e6b206661696c6564202d206e6f
0x1141 PUSH1 0x44
0x1143 DUP3
0x1144 ADD
0x1145 MSTORE
0x1146 PUSH32 0x20726567697374657265642062616e6b00000000000000000000000000000000
0x1167 PUSH1 0x64
0x1169 DUP3
0x116a ADD
0x116b MSTORE
0x116c SWAP1
0x116d MLOAD
0x116e SWAP1
0x116f DUP2
0x1170 SWAP1
0x1171 SUB
0x1172 PUSH1 0x84
0x1174 ADD
0x1175 SWAP1
0x1176 REVERT
---
0x1102: V1248 = 0x40
0x1105: V1249 = M[0x40]
0x1106: V1250 = 0xe5
0x1108: V1251 = 0x2
0x110a: V1252 = EXP 0x2 0xe5
0x110b: V1253 = 0x461bcd
0x110f: V1254 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x1111: M[V1249] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1112: V1255 = 0x20
0x1114: V1256 = 0x4
0x1117: V1257 = ADD V1249 0x4
0x1118: M[V1257] = 0x20
0x1119: V1258 = 0x30
0x111b: V1259 = 0x24
0x111e: V1260 = ADD V1249 0x24
0x111f: M[V1260] = 0x30
0x1120: V1261 = 0x466f7277617264657220676574436f6d42616e6b206661696c6564202d206e6f
0x1141: V1262 = 0x44
0x1144: V1263 = ADD V1249 0x44
0x1145: M[V1263] = 0x466f7277617264657220676574436f6d42616e6b206661696c6564202d206e6f
0x1146: V1264 = 0x20726567697374657265642062616e6b00000000000000000000000000000000
0x1167: V1265 = 0x64
0x116a: V1266 = ADD V1249 0x64
0x116b: M[V1266] = 0x20726567697374657265642062616e6b00000000000000000000000000000000
0x116d: V1267 = M[0x40]
0x1171: V1268 = SUB V1249 V1267
0x1172: V1269 = 0x84
0x1174: V1270 = ADD 0x84 V1268
0x1176: REVERT V1267 V1270
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0]

================================

Block 0x1177
[0x1177:0x11cf]
---
Predecessors: [0x10ec]
Successors: [0x57a, 0x11d0]
---
0x1177 JUMPDEST
0x1178 PUSH1 0x4
0x117a DUP1
0x117b SLOAD
0x117c PUSH1 0x40
0x117e DUP1
0x117f MLOAD
0x1180 PUSH32 0xf77ed31000000000000000000000000000000000000000000000000000000000
0x11a1 DUP2
0x11a2 MSTORE
0x11a3 SWAP1
0x11a4 MLOAD
0x11a5 PUSH1 0x1
0x11a7 PUSH1 0xa0
0x11a9 PUSH1 0x2
0x11ab EXP
0x11ac SUB
0x11ad SWAP1
0x11ae SWAP3
0x11af AND
0x11b0 SWAP3
0x11b1 PUSH4 0xf77ed310
0x11b6 SWAP3
0x11b7 DUP3
0x11b8 DUP3
0x11b9 ADD
0x11ba SWAP3
0x11bb PUSH1 0x20
0x11bd SWAP3
0x11be SWAP1
0x11bf DUP3
0x11c0 SWAP1
0x11c1 SUB
0x11c2 ADD
0x11c3 DUP2
0x11c4 PUSH1 0x0
0x11c6 DUP8
0x11c7 DUP1
0x11c8 EXTCODESIZE
0x11c9 ISZERO
0x11ca DUP1
0x11cb ISZERO
0x11cc PUSH2 0x57a
0x11cf JUMPI
---
0x1177: JUMPDEST 
0x1178: V1271 = 0x4
0x117b: V1272 = S[0x4]
0x117c: V1273 = 0x40
0x117f: V1274 = M[0x40]
0x1180: V1275 = 0xf77ed31000000000000000000000000000000000000000000000000000000000
0x11a2: M[V1274] = 0xf77ed31000000000000000000000000000000000000000000000000000000000
0x11a4: V1276 = M[0x40]
0x11a5: V1277 = 0x1
0x11a7: V1278 = 0xa0
0x11a9: V1279 = 0x2
0x11ab: V1280 = EXP 0x2 0xa0
0x11ac: V1281 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11af: V1282 = AND V1272 0xffffffffffffffffffffffffffffffffffffffff
0x11b1: V1283 = 0xf77ed310
0x11b9: V1284 = ADD 0x4 V1274
0x11bb: V1285 = 0x20
0x11c1: V1286 = SUB V1274 V1276
0x11c2: V1287 = ADD V1286 0x4
0x11c4: V1288 = 0x0
0x11c8: V1289 = EXTCODESIZE V1282
0x11c9: V1290 = ISZERO V1289
0x11cb: V1291 = ISZERO V1290
0x11cc: V1292 = 0x57a
0x11cf: JUMPI 0x57a V1291
---
Entry stack: [V13, 0x208, 0x0]
Stack pops: 0
Stack additions: [V1282, 0xf77ed310, V1284, 0x20, V1276, V1287, V1276, 0x0, V1282, V1290]
Exit stack: [V13, 0x208, 0x0, V1282, 0xf77ed310, V1284, 0x20, V1276, V1287, V1276, 0x0, V1282, V1290]

================================

Block 0x11d0
[0x11d0:0x11d3]
---
Predecessors: [0x1177]
Successors: []
---
0x11d0 PUSH1 0x0
0x11d2 DUP1
0x11d3 REVERT
---
0x11d0: V1293 = 0x0
0x11d3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x208, 0x0, V1282, 0xf77ed310, V1284, 0x20, V1276, V1287, V1276, 0x0, V1282, V1290]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x208, 0x0, V1282, 0xf77ed310, V1284, 0x20, V1276, V1287, V1276, 0x0, V1282, V1290]

================================

Block 0x11d4
[0x11d4:0x120c]
---
Predecessors: []
Successors: []
---
0x11d4 STOP
0x11d5 LOG1
0x11d6 PUSH6 0x627a7a723058
0x11dd SHA3
0x11de MISSING 0xbf
0x11df MISSING 0xeb
0x11e0 MISSING 0xca
0x11e1 MOD
0x11e2 MISSING 0xcb
0x11e3 DUP12
0x11e4 MISSING 0xba
0x11e5 ADD
0x11e6 MLOAD
0x11e7 CREATE
0x11e8 LOG4
0x11e9 MISSING 0xe9
0x11ea MISSING 0xfc
0x11eb MISSING 0x1e
0x11ec PUSH32 0x72b93b1baa4238157c0c8a0b8001f9bb00029
---
0x11d4: STOP 
0x11d5: LOG S0 S1 S2
0x11d6: V1294 = 0x627a7a723058
0x11dd: V1295 = SHA3 0x627a7a723058 S3
0x11de: MISSING 0xbf
0x11df: MISSING 0xeb
0x11e0: MISSING 0xca
0x11e1: V1296 = MOD S0 S1
0x11e2: MISSING 0xcb
0x11e4: MISSING 0xba
0x11e5: V1297 = ADD S0 S1
0x11e6: V1298 = M[V1297]
0x11e7: V1299 = CREATE V1298 S2 S3
0x11e8: LOG V1299 S4 S5 S6 S7 S8
0x11e9: MISSING 0xe9
0x11ea: MISSING 0xfc
0x11eb: MISSING 0x1e
0x11ec: V1300 = 0x72b93b1baa4238157c0c8a0b8001f9bb00029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1295, V1296, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x72b93b1baa4238157c0c8a0b8001f9bb00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x140
Exit block: 0x1bc
Body: 0x140, 0x148, 0x14c, 0x155, 0x177, 0x180, 0x18f, 0x1a3, 0x1bc, 0x32f, 0x36f, 0x377, 0x38a, 0x398, 0x3ac, 0x3b5

Function 1:
Public function signature: 0x10639ea0
Entry block: 0x1ca
Exit block: 0x1df
Body: 0x1ca, 0x1d2, 0x1d6, 0x1df, 0x3bd, 0x3d3, 0x46e, 0x48f

Function 2:
Public function signature: 0x112dcbd8
Entry block: 0x1f3
Exit block: 0x208
Body: 0x1f3, 0x1fb, 0x1ff, 0x208, 0x492, 0x4a8, 0x51d, 0x576, 0x57a, 0x585, 0x58e, 0x5a0, 0x5a4

Function 3:
Public function signature: 0x200d2ed2
Entry block: 0x224
Exit block: 0x239
Body: 0x224, 0x22c, 0x230, 0x239, 0x5ab

Function 4:
Public function signature: 0x28b7bede
Entry block: 0x265
Exit block: 0x208
Body: 0x208, 0x265, 0x26d, 0x271, 0x5cf, 0x5e5, 0x65a, 0x66d, 0x671

Function 5:
Public function signature: 0x60d704db
Entry block: 0x27a
Exit block: 0x208
Body: 0x208, 0x27a, 0x282, 0x286, 0x57a, 0x585, 0x58e, 0x5a0, 0x5a4, 0x681, 0x697, 0x70c, 0x765

Function 6:
Public function signature: 0x66d38203
Entry block: 0x28f
Exit block: 0x2b0
Body: 0x28f, 0x297, 0x29b, 0x2b0, 0x769, 0x780, 0x7f5, 0x82f, 0x833, 0x83e, 0x847, 0x859, 0x85d, 0x869, 0x86d, 0x8e9, 0x8ed, 0x8f8, 0x901, 0x913, 0x917

Function 7:
Public function signature: 0x7c784a01
Entry block: 0x2b2
Exit block: 0x208
Body: 0x208, 0x2b2, 0x2ba, 0x2be, 0x57a, 0x585, 0x58e, 0x5a0, 0x5a4, 0x966, 0x97c, 0x9f1, 0xa4a

Function 8:
Public function signature: 0x88d761f2
Entry block: 0x2c7
Exit block: 0x1df
Body: 0x1df, 0x2c7, 0x2cf, 0x2d3, 0xa4e, 0xa64, 0xaff, 0xb7c, 0xb80, 0xb8b, 0xb94, 0xba6, 0xbaa

Function 9:
Public function signature: 0xa0f52da0
Entry block: 0x2dc
Exit block: 0x1df
Body: 0x1df, 0x2dc, 0x2e4, 0x2e8, 0xbe6, 0xbfc, 0xc97, 0xcd1, 0xcd5, 0xce0, 0xce9, 0xcfb, 0xcff, 0xd0c, 0xd3b, 0xd3f

Function 10:
Public function signature: 0xca628c78
Entry block: 0x2fd
Exit block: 0x2b0
Body: 0x2b0, 0x2fd, 0x305, 0x309, 0xd44, 0xd5a, 0xd5e, 0xd71, 0xde6, 0xdf9, 0xdfd, 0xe5f, 0xe63, 0xe6e, 0xe77, 0xe89, 0xe8d, 0xf02, 0xf06, 0xf11, 0xf1a, 0xf2c, 0xf30

Function 11:
Public function signature: 0xd0e30db0
Entry block: 0x312
Exit block: 0x1df
Body: 0x1df, 0x312, 0x48f, 0xf35, 0xf3f, 0xfb4, 0xfc7, 0x103c, 0x10a1, 0x10a5, 0x10b0, 0x10b9, 0x10cc, 0x10d0, 0x10dd, 0x10e4

Function 12:
Public function signature: 0xf77ed310
Entry block: 0x31a
Exit block: 0x208
Body: 0x208, 0x31a, 0x322, 0x326, 0x57a, 0x585, 0x58e, 0x5a0, 0x5a4, 0x10ec, 0x1102, 0x1177, 0x11d0

Function 13:
Public fallback function
Entry block: 0xab
Exit block: 0x138
Body: 0xab, 0x10d, 0x111, 0x11c, 0x125, 0x138, 0x13c

