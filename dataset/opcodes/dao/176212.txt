Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x40]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x40
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x40
0xc: JUMPI 0x40 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x45]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x89a86ad3
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x45
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x89a86ad3
0x3b: V13 = EQ V11 0x89a86ad3
0x3c: V14 = 0x45
0x3f: JUMPI 0x45 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x44]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x40 JUMPDEST
0x41 PUSH1 0x0
0x43 DUP1
0x44 REVERT
---
0x40: JUMPDEST 
0x41: V15 = 0x0
0x44: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x45
[0x45:0x6b]
---
Predecessors: [0xd]
Successors: [0x6e]
---
0x45 JUMPDEST
0x46 PUSH2 0x6c
0x49 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e PUSH1 0x4
0x60 CALLDATALOAD
0x61 AND
0x62 PUSH1 0x24
0x64 CALLDATALOAD
0x65 PUSH1 0x44
0x67 CALLDATALOAD
0x68 PUSH2 0x6e
0x6b JUMP
---
0x45: JUMPDEST 
0x46: V16 = 0x6c
0x49: V17 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e: V18 = 0x4
0x60: V19 = CALLDATALOAD 0x4
0x61: V20 = AND V19 0xffffffffffffffffffffffffffffffffffffffff
0x62: V21 = 0x24
0x64: V22 = CALLDATALOAD 0x24
0x65: V23 = 0x44
0x67: V24 = CALLDATALOAD 0x44
0x68: V25 = 0x6e
0x6b: JUMP 0x6e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V20, V22, V24]
Exit stack: [V11, 0x6c, V20, V22, V24]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0xc2]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x79]
---
Predecessors: [0x45]
Successors: [0xdf]
---
0x6e JUMPDEST
0x6f CALLVALUE
0x70 DUP4
0x71 DUP4
0x72 DUP4
0x73 PUSH2 0x7a
0x76 PUSH2 0xdf
0x79 JUMP
---
0x6e: JUMPDEST 
0x6f: V26 = CALLVALUE
0x73: V27 = 0x7a
0x76: V28 = 0xdf
0x79: JUMP 0xdf
---
Entry stack: [V11, 0x6c, V20, V22, V24]
Stack pops: 3
Stack additions: [S2, S1, S0, V26, S2, S1, S0, 0x7a]
Exit stack: [V11, 0x6c, V20, V22, V24, V26, V20, V22, V24, 0x7a]

================================

Block 0x7a
[0x7a:0xb8]
---
Predecessors: [0xdf]
Successors: [0xb9, 0xc2]
---
0x7a JUMPDEST
0x7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90 SWAP1
0x91 SWAP4
0x92 AND
0x93 DUP4
0x94 MSTORE
0x95 PUSH1 0x20
0x97 DUP4
0x98 ADD
0x99 SWAP2
0x9a SWAP1
0x9b SWAP2
0x9c MSTORE
0x9d PUSH1 0x40
0x9f DUP1
0xa0 DUP4
0xa1 ADD
0xa2 SWAP2
0xa3 SWAP1
0xa4 SWAP2
0xa5 MSTORE
0xa6 MLOAD
0xa7 SWAP1
0xa8 DUP2
0xa9 SWAP1
0xaa SUB
0xab PUSH1 0x60
0xad ADD
0xae SWAP1
0xaf DUP3
0xb0 CREATE
0xb1 DUP1
0xb2 ISZERO
0xb3 DUP1
0xb4 ISZERO
0xb5 PUSH2 0xc2
0xb8 JUMPI
---
0x7a: JUMPDEST 
0x7b: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x92: V30 = AND V20 0xffffffffffffffffffffffffffffffffffffffff
0x94: M[V59] = V30
0x95: V31 = 0x20
0x98: V32 = ADD V59 0x20
0x9c: M[V32] = V22
0x9d: V33 = 0x40
0xa1: V34 = ADD V59 0x40
0xa5: M[V34] = V24
0xa6: V35 = M[0x40]
0xaa: V36 = SUB V59 V35
0xab: V37 = 0x60
0xad: V38 = ADD 0x60 V36
0xb0: V39 = CREATE V26 V35 V38
0xb2: V40 = ISZERO V39
0xb4: V41 = ISZERO V40
0xb5: V42 = 0xc2
0xb8: JUMPI 0xc2 V41
---
Entry stack: [V11, 0x6c, V20, V22, V24, V26, V20, V22, V24, V59]
Stack pops: 5
Stack additions: [S4, V39, V40]
Exit stack: [V11, 0x6c, V20, V22, V24, V26, V39, V40]

================================

Block 0xb9
[0xb9:0xc1]
---
Predecessors: [0x7a]
Successors: []
---
0xb9 RETURNDATASIZE
0xba PUSH1 0x0
0xbc DUP1
0xbd RETURNDATACOPY
0xbe RETURNDATASIZE
0xbf PUSH1 0x0
0xc1 REVERT
---
0xb9: V43 = RETURNDATASIZE
0xba: V44 = 0x0
0xbd: RETURNDATACOPY 0x0 0x0 V43
0xbe: V45 = RETURNDATASIZE
0xbf: V46 = 0x0
0xc1: REVERT 0x0 V45
---
Entry stack: [V11, 0x6c, V20, V22, V24, V26, V39, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V20, V22, V24, V26, V39, V40]

================================

Block 0xc2
[0xc2:0xde]
---
Predecessors: [0x7a]
Successors: [0x6c]
---
0xc2 JUMPDEST
0xc3 POP
0xc4 POP
0xc5 PUSH1 0x40
0xc7 MLOAD
0xc8 CALLER
0xc9 SWAP2
0xca POP
0xcb ADDRESS
0xcc BALANCE
0xcd SWAP1
0xce PUSH1 0x0
0xd0 DUP2
0xd1 DUP2
0xd2 DUP2
0xd3 DUP6
0xd4 DUP8
0xd5 GAS
0xd6 CALL
0xd7 POP
0xd8 POP
0xd9 POP
0xda POP
0xdb POP
0xdc POP
0xdd POP
0xde JUMP
---
0xc2: JUMPDEST 
0xc5: V47 = 0x40
0xc7: V48 = M[0x40]
0xc8: V49 = CALLER
0xcb: V50 = ADDRESS
0xcc: V51 = BALANCE V50
0xce: V52 = 0x0
0xd5: V53 = GAS
0xd6: V54 = CALL V53 V49 V51 V48 0x0 V48 0x0
0xde: JUMP 0x6c
---
Entry stack: [V11, 0x6c, V20, V22, V24, V26, V39, V40]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0xdf
[0xdf:0xee]
---
Predecessors: [0x6e]
Successors: [0x7a]
---
0xdf JUMPDEST
0xe0 PUSH1 0x40
0xe2 MLOAD
0xe3 PUSH2 0x11a
0xe6 DUP1
0xe7 PUSH2 0xf0
0xea DUP4
0xeb CODECOPY
0xec ADD
0xed SWAP1
0xee JUMP
---
0xdf: JUMPDEST 
0xe0: V55 = 0x40
0xe2: V56 = M[0x40]
0xe3: V57 = 0x11a
0xe7: V58 = 0xf0
0xeb: CODECOPY V56 0xf0 0x11a
0xec: V59 = ADD 0x11a V56
0xee: JUMP 0x7a
---
Entry stack: [V11, 0x6c, V20, V22, V24, V26, V20, V22, V24, 0x7a]
Stack pops: 1
Stack additions: [V59]
Exit stack: [V11, 0x6c, V20, V22, V24, V26, V20, V22, V24, V59]

================================

Block 0xef
[0xef:0x178]
---
Predecessors: []
Successors: [0x179]
---
0xef STOP
0xf0 PUSH1 0x80
0xf2 PUSH1 0x40
0xf4 MSTORE
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 PUSH1 0x60
0xfa DUP1
0xfb PUSH2 0x11a
0xfe DUP4
0xff CODECOPY
0x100 DUP2
0x101 ADD
0x102 PUSH1 0x40
0x104 DUP2
0x105 DUP2
0x106 MSTORE
0x107 DUP3
0x108 MLOAD
0x109 PUSH1 0x20
0x10b DUP5
0x10c ADD
0x10d MLOAD
0x10e SWAP4
0x10f DUP3
0x110 ADD
0x111 MLOAD
0x112 PUSH32 0x8f38f30900000000000000000000000000000000000000000000000000000000
0x133 DUP5
0x134 MSTORE
0x135 PUSH1 0x4
0x137 DUP5
0x138 ADD
0x139 DUP6
0x13a SWAP1
0x13b MSTORE
0x13c PUSH1 0x24
0x13e DUP5
0x13f ADD
0x140 DUP2
0x141 SWAP1
0x142 MSTORE
0x143 SWAP2
0x144 MLOAD
0x145 SWAP1
0x146 SWAP4
0x147 SWAP3
0x148 DUP5
0x149 SWAP2
0x14a PUSH1 0x1
0x14c PUSH1 0xa0
0x14e PUSH1 0x2
0x150 EXP
0x151 SUB
0x152 DUP4
0x153 AND
0x154 SWAP2
0x155 PUSH4 0x8f38f309
0x15a SWAP2
0x15b CALLVALUE
0x15c SWAP2
0x15d PUSH1 0x44
0x15f DUP1
0x160 DUP3
0x161 ADD
0x162 SWAP3
0x163 PUSH1 0x0
0x165 SWAP3
0x166 SWAP1
0x167 SWAP2
0x168 SWAP1
0x169 DUP3
0x16a SWAP1
0x16b SUB
0x16c ADD
0x16d DUP2
0x16e DUP6
0x16f DUP9
0x170 DUP1
0x171 EXTCODESIZE
0x172 ISZERO
0x173 DUP1
0x174 ISZERO
0x175 PUSH2 0x8d
0x178 JUMPI
---
0xef: STOP 
0xf0: V60 = 0x80
0xf2: V61 = 0x40
0xf4: M[0x40] = 0x80
0xf5: V62 = 0x40
0xf7: V63 = M[0x40]
0xf8: V64 = 0x60
0xfb: V65 = 0x11a
0xff: CODECOPY V63 0x11a 0x60
0x101: V66 = ADD V63 0x60
0x102: V67 = 0x40
0x106: M[0x40] = V66
0x108: V68 = M[V63]
0x109: V69 = 0x20
0x10c: V70 = ADD V63 0x20
0x10d: V71 = M[V70]
0x110: V72 = ADD 0x40 V63
0x111: V73 = M[V72]
0x112: V74 = 0x8f38f30900000000000000000000000000000000000000000000000000000000
0x134: M[V66] = 0x8f38f30900000000000000000000000000000000000000000000000000000000
0x135: V75 = 0x4
0x138: V76 = ADD V66 0x4
0x13b: M[V76] = V71
0x13c: V77 = 0x24
0x13f: V78 = ADD V66 0x24
0x142: M[V78] = V73
0x144: V79 = M[0x40]
0x14a: V80 = 0x1
0x14c: V81 = 0xa0
0x14e: V82 = 0x2
0x150: V83 = EXP 0x2 0xa0
0x151: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x153: V85 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0x155: V86 = 0x8f38f309
0x15b: V87 = CALLVALUE
0x15d: V88 = 0x44
0x161: V89 = ADD V66 0x44
0x163: V90 = 0x0
0x16b: V91 = SUB V66 V79
0x16c: V92 = ADD V91 0x44
0x171: V93 = EXTCODESIZE V85
0x172: V94 = ISZERO V93
0x174: V95 = ISZERO V94
0x175: V96 = 0x8d
0x178: THROWI V95
---
Entry stack: []
Stack pops: 0
Stack additions: [V94, V85, V87, V79, V92, V79, 0x0, V89, V87, 0x8f38f309, V85, V68, V73, V71, V68]
Exit stack: []

================================

Block 0x179
[0x179:0x187]
---
Predecessors: [0xef]
Successors: [0x188]
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
0x17d JUMPDEST
0x17e POP
0x17f GAS
0x180 CALL
0x181 ISZERO
0x182 DUP1
0x183 ISZERO
0x184 PUSH2 0xa1
0x187 JUMPI
---
0x179: V97 = 0x0
0x17c: REVERT 0x0 0x0
0x17d: JUMPDEST 
0x17f: V98 = GAS
0x180: V99 = CALL V98 S1 S2 S3 S4 S5 S6
0x181: V100 = ISZERO V99
0x183: V101 = ISZERO V100
0x184: V102 = 0xa1
0x187: THROWI V101
---
Entry stack: [V68, V71, V73, V68, V85, 0x8f38f309, V87, V89, 0x0, V79, V92, V79, V87, V85, V94]
Stack pops: 0
Stack additions: [V100]
Exit stack: []

================================

Block 0x188
[0x188:0x1e8]
---
Predecessors: [0x179]
Successors: [0x1e9]
---
0x188 RETURNDATASIZE
0x189 PUSH1 0x0
0x18b DUP1
0x18c RETURNDATACOPY
0x18d RETURNDATASIZE
0x18e PUSH1 0x0
0x190 REVERT
0x191 JUMPDEST
0x192 POP
0x193 POP
0x194 POP
0x195 POP
0x196 POP
0x197 DUP1
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 AND
0x1a1 PUSH4 0x3ccfd60b
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 DUP2
0x1aa PUSH4 0xffffffff
0x1af AND
0x1b0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1ce MUL
0x1cf DUP2
0x1d0 MSTORE
0x1d1 PUSH1 0x4
0x1d3 ADD
0x1d4 PUSH1 0x0
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 DUP1
0x1da DUP4
0x1db SUB
0x1dc DUP2
0x1dd PUSH1 0x0
0x1df DUP8
0x1e0 DUP1
0x1e1 EXTCODESIZE
0x1e2 ISZERO
0x1e3 DUP1
0x1e4 ISZERO
0x1e5 PUSH2 0xfd
0x1e8 JUMPI
---
0x188: V103 = RETURNDATASIZE
0x189: V104 = 0x0
0x18c: RETURNDATACOPY 0x0 0x0 V103
0x18d: V105 = RETURNDATASIZE
0x18e: V106 = 0x0
0x190: REVERT 0x0 V105
0x191: JUMPDEST 
0x198: V107 = 0x1
0x19a: V108 = 0xa0
0x19c: V109 = 0x2
0x19e: V110 = EXP 0x2 0xa0
0x19f: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a0: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x1a1: V113 = 0x3ccfd60b
0x1a6: V114 = 0x40
0x1a8: V115 = M[0x40]
0x1aa: V116 = 0xffffffff
0x1af: V117 = AND 0xffffffff 0x3ccfd60b
0x1b0: V118 = 0x100000000000000000000000000000000000000000000000000000000
0x1ce: V119 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x1d0: M[V115] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x1d1: V120 = 0x4
0x1d3: V121 = ADD 0x4 V115
0x1d4: V122 = 0x0
0x1d6: V123 = 0x40
0x1d8: V124 = M[0x40]
0x1db: V125 = SUB V121 V124
0x1dd: V126 = 0x0
0x1e1: V127 = EXTCODESIZE V112
0x1e2: V128 = ISZERO V127
0x1e4: V129 = ISZERO V128
0x1e5: V130 = 0xfd
0x1e8: THROWI V129
---
Entry stack: [V100]
Stack pops: 0
Stack additions: [V128, V112, 0x0, V124, V125, V124, 0x0, V121, 0x3ccfd60b, V112, S5]
Exit stack: []

================================

Block 0x1e9
[0x1e9:0x1f7]
---
Predecessors: [0x188]
Successors: [0x1f8]
---
0x1e9 PUSH1 0x0
0x1eb DUP1
0x1ec REVERT
0x1ed JUMPDEST
0x1ee POP
0x1ef GAS
0x1f0 CALL
0x1f1 ISZERO
0x1f2 DUP1
0x1f3 ISZERO
0x1f4 PUSH2 0x111
0x1f7 JUMPI
---
0x1e9: V131 = 0x0
0x1ec: REVERT 0x0 0x0
0x1ed: JUMPDEST 
0x1ef: V132 = GAS
0x1f0: V133 = CALL V132 S1 S2 S3 S4 S5 S6
0x1f1: V134 = ISZERO V133
0x1f3: V135 = ISZERO V134
0x1f4: V136 = 0x111
0x1f7: THROWI V135
---
Entry stack: [S10, V112, 0x3ccfd60b, V121, 0x0, V124, V125, V124, 0x0, V112, V128]
Stack pops: 0
Stack additions: [V134]
Exit stack: []

================================

Block 0x1f8
[0x1f8:0x23e]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f8 RETURNDATASIZE
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc RETURNDATACOPY
0x1fd RETURNDATASIZE
0x1fe PUSH1 0x0
0x200 REVERT
0x201 JUMPDEST
0x202 POP
0x203 CALLER
0x204 SWAP3
0x205 POP
0x206 POP
0x207 POP
0x208 SELFDESTRUCT
0x209 STOP
0x20a LOG1
0x20b PUSH6 0x627a7a723058
0x212 SHA3
0x213 MISSING 0xe
0x214 PUSH21 0xab72817ff47ca1d43e6df61ad1187128911dfe8ed1
0x22a DELEGATECALL
0x22b MISSING 0xb4
0x22c MISSING 0x49
0x22d MISSING 0xa5
0x22e SWAP11
0x22f MISSING 0xee
0x230 BYTE
0x231 SSTORE
0x232 PUSH12 0x29
---
0x1f8: V137 = RETURNDATASIZE
0x1f9: V138 = 0x0
0x1fc: RETURNDATACOPY 0x0 0x0 V137
0x1fd: V139 = RETURNDATASIZE
0x1fe: V140 = 0x0
0x200: REVERT 0x0 V139
0x201: JUMPDEST 
0x203: V141 = CALLER
0x208: SELFDESTRUCT V141
0x209: STOP 
0x20a: LOG S0 S1 S2
0x20b: V142 = 0x627a7a723058
0x212: V143 = SHA3 0x627a7a723058 S3
0x213: MISSING 0xe
0x214: V144 = 0xab72817ff47ca1d43e6df61ad1187128911dfe8ed1
0x22a: V145 = DELEGATECALL 0xab72817ff47ca1d43e6df61ad1187128911dfe8ed1 S0 S1 S2 S3 S4
0x22b: MISSING 0xb4
0x22c: MISSING 0x49
0x22d: MISSING 0xa5
0x22f: MISSING 0xee
0x230: V146 = BYTE S0 S1
0x231: S[V146] = S2
0x232: V147 = 0x29
---
Entry stack: [V134]
Stack pops: 0
Stack additions: [V143, V145, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x89a86ad3
Entry block: 0x45
Exit block: 0x6c
Body: 0x45, 0x6c, 0x6e, 0x7a, 0xb9, 0xc2, 0xdf

Function 1:
Public fallback function
Entry block: 0x40
Exit block: 0x40
Body: 0x40

