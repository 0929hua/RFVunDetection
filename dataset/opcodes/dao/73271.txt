Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x91]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xd8e6e2c
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x91
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xd8e6e2c
0x20: V14 = EQ V12 0xd8e6e2c
0x21: V15 = 0x91
0x24: JUMPI 0x91 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xb6]
---
0x25 DUP1
0x26 PUSH4 0x2cf2c0af
0x2b EQ
0x2c PUSH2 0xb6
0x2f JUMPI
---
0x26: V16 = 0x2cf2c0af
0x2b: V17 = EQ 0x2cf2c0af V12
0x2c: V18 = 0xb6
0x2f: JUMPI 0xb6 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xce]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0xce
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0xce
0x3a: JUMPI 0xce V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xe6]
---
0x3b DUP1
0x3c PUSH4 0x43d726d6
0x41 EQ
0x42 PUSH2 0xe6
0x45 JUMPI
---
0x3c: V22 = 0x43d726d6
0x41: V23 = EQ 0x43d726d6 V12
0x42: V24 = 0xe6
0x45: JUMPI 0xe6 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xfb]
---
0x46 DUP1
0x47 PUSH4 0x5c73dcea
0x4c EQ
0x4d PUSH2 0xfb
0x50 JUMPI
---
0x47: V25 = 0x5c73dcea
0x4c: V26 = EQ 0x5c73dcea V12
0x4d: V27 = 0xfb
0x50: JUMPI 0xfb V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x15c]
---
0x51 DUP1
0x52 PUSH4 0x668b8051
0x57 EQ
0x58 PUSH2 0x15c
0x5b JUMPI
---
0x52: V28 = 0x668b8051
0x57: V29 = EQ 0x668b8051 V12
0x58: V30 = 0x15c
0x5b: JUMPI 0x15c V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1a4]
---
0x5c DUP1
0x5d PUSH4 0x70a08231
0x62 EQ
0x63 PUSH2 0x1a4
0x66 JUMPI
---
0x5d: V31 = 0x70a08231
0x62: V32 = EQ 0x70a08231 V12
0x63: V33 = 0x1a4
0x66: JUMPI 0x1a4 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1d5]
---
0x67 DUP1
0x68 PUSH4 0x8da5cb5b
0x6d EQ
0x6e PUSH2 0x1d5
0x71 JUMPI
---
0x68: V34 = 0x8da5cb5b
0x6d: V35 = EQ 0x8da5cb5b V12
0x6e: V36 = 0x1d5
0x71: JUMPI 0x1d5 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x204]
---
0x72 DUP1
0x73 PUSH4 0xd0e30db0
0x78 EQ
0x79 PUSH2 0x204
0x7c JUMPI
---
0x73: V37 = 0xd0e30db0
0x78: V38 = EQ 0xd0e30db0 V12
0x79: V39 = 0x204
0x7c: JUMPI 0x204 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x20e]
---
0x7d DUP1
0x7e PUSH4 0xf1b83630
0x83 EQ
0x84 PUSH2 0x20e
0x87 JUMPI
---
0x7e: V40 = 0xf1b83630
0x83: V41 = EQ 0xf1b83630 V12
0x84: V42 = 0x20e
0x87: JUMPI 0x20e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x0, 0x7d]
Successors: [0x8c]
---
0x88 JUMPDEST
0x89 PUSH2 0x8f
---
0x88: JUMPDEST 
0x89: V43 = 0x8f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V12, 0x8f]

================================

Block 0x8c
[0x8c:0x8c]
---
Predecessors: [0x88, 0x204]
Successors: [0x8d]
---
0x8c JUMPDEST
---
0x8c: JUMPDEST 
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x8c]
Successors: [0x8f]
---
0x8d JUMPDEST
0x8e JUMP
---
0x8d: JUMPDEST 
0x8e: JUMP 0x8f
---
Entry stack: [V12, 0x8f]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f
[0x8f:0x90]
---
Predecessors: [0x8d, 0x2a0, 0x2f4, 0x5df, 0x704]
Successors: []
---
0x8f JUMPDEST
0x90 STOP
---
0x8f: JUMPDEST 
0x90: STOP 
---
Entry stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S2, S1, S0]

================================

Block 0x91
[0x91:0x97]
---
Predecessors: [0xb]
Successors: [0x98, 0x9c]
---
0x91 JUMPDEST
0x92 CALLVALUE
0x93 ISZERO
0x94 PUSH2 0x9c
0x97 JUMPI
---
0x91: JUMPDEST 
0x92: V44 = CALLVALUE
0x93: V45 = ISZERO V44
0x94: V46 = 0x9c
0x97: JUMPI 0x9c V45
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x91]
Successors: []
---
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x98: V47 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0xa3]
---
Predecessors: [0x91]
Successors: [0x226]
---
0x9c JUMPDEST
0x9d PUSH2 0xa4
0xa0 PUSH2 0x226
0xa3 JUMP
---
0x9c: JUMPDEST 
0x9d: V48 = 0xa4
0xa0: V49 = 0x226
0xa3: JUMP 0x226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V12, 0xa4]

================================

Block 0xa4
[0xa4:0xb5]
---
Predecessors: [0x229, 0x670]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 SWAP1
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x20
0xad ADD
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 DUP1
0xb2 SWAP2
0xb3 SUB
0xb4 SWAP1
0xb5 RETURN
---
0xa4: JUMPDEST 
0xa5: V50 = 0x40
0xa7: V51 = M[0x40]
0xaa: M[V51] = S0
0xab: V52 = 0x20
0xad: V53 = ADD 0x20 V51
0xae: V54 = 0x40
0xb0: V55 = M[0x40]
0xb3: V56 = SUB V53 V55
0xb5: RETURN V55 V56
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xb6
[0xb6:0xbc]
---
Predecessors: [0x25]
Successors: [0xbd, 0xc1]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 ISZERO
0xb9 PUSH2 0xc1
0xbc JUMPI
---
0xb6: JUMPDEST 
0xb7: V57 = CALLVALUE
0xb8: V58 = ISZERO V57
0xb9: V59 = 0xc1
0xbc: JUMPI 0xc1 V58
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0xb6]
Successors: []
---
0xbd PUSH1 0x0
0xbf DUP1
0xc0 REVERT
---
0xbd: V60 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0x22c]
---
0xc1 JUMPDEST
0xc2 PUSH2 0x8f
0xc5 PUSH1 0x4
0xc7 CALLDATALOAD
0xc8 PUSH2 0x22c
0xcb JUMP
---
0xc1: JUMPDEST 
0xc2: V61 = 0x8f
0xc5: V62 = 0x4
0xc7: V63 = CALLDATALOAD 0x4
0xc8: V64 = 0x22c
0xcb: JUMP 0x22c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f, V63]
Exit stack: [V12, 0x8f, V63]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: []
Successors: []
---
0xcc JUMPDEST
0xcd STOP
---
0xcc: JUMPDEST 
0xcd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0x30]
Successors: [0xd5, 0xd9]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V65 = CALLVALUE
0xd0: V66 = ISZERO V65
0xd1: V67 = 0xd9
0xd4: JUMPI 0xd9 V66
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xce]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V68 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd9
[0xd9:0xe3]
---
Predecessors: [0xce]
Successors: [0x2a4]
---
0xd9 JUMPDEST
0xda PUSH2 0x8f
0xdd PUSH1 0x4
0xdf CALLDATALOAD
0xe0 PUSH2 0x2a4
0xe3 JUMP
---
0xd9: JUMPDEST 
0xda: V69 = 0x8f
0xdd: V70 = 0x4
0xdf: V71 = CALLDATALOAD 0x4
0xe0: V72 = 0x2a4
0xe3: JUMP 0x2a4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f, V71]
Exit stack: [V12, 0x8f, V71]

================================

Block 0xe4
[0xe4:0xe5]
---
Predecessors: []
Successors: []
---
0xe4 JUMPDEST
0xe5 STOP
---
0xe4: JUMPDEST 
0xe5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe6
[0xe6:0xec]
---
Predecessors: [0x3b]
Successors: [0xed, 0xf1]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe6: JUMPDEST 
0xe7: V73 = CALLVALUE
0xe8: V74 = ISZERO V73
0xe9: V75 = 0xf1
0xec: JUMPI 0xf1 V74
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe6]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V76 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf1
[0xf1:0xf8]
---
Predecessors: [0xe6]
Successors: [0x2f7]
---
0xf1 JUMPDEST
0xf2 PUSH2 0x8f
0xf5 PUSH2 0x2f7
0xf8 JUMP
---
0xf1: JUMPDEST 
0xf2: V77 = 0x8f
0xf5: V78 = 0x2f7
0xf8: JUMP 0x2f7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V12, 0x8f]

================================

Block 0xf9
[0xf9:0xfa]
---
Predecessors: []
Successors: []
---
0xf9 JUMPDEST
0xfa STOP
---
0xf9: JUMPDEST 
0xfa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xfb
[0xfb:0x101]
---
Predecessors: [0x46]
Successors: [0x102, 0x106]
---
0xfb JUMPDEST
0xfc CALLVALUE
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfb: JUMPDEST 
0xfc: V79 = CALLVALUE
0xfd: V80 = ISZERO V79
0xfe: V81 = 0x106
0x101: JUMPI 0x106 V80
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfb]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V82 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x106
[0x106:0x147]
---
Predecessors: [0xfb]
Successors: [0x323]
---
0x106 JUMPDEST
0x107 PUSH2 0x148
0x10a PUSH1 0x1
0x10c PUSH1 0xa0
0x10e PUSH1 0x2
0x110 EXP
0x111 SUB
0x112 PUSH1 0x4
0x114 CALLDATALOAD
0x115 DUP2
0x116 AND
0x117 SWAP1
0x118 PUSH1 0x24
0x11a CALLDATALOAD
0x11b SWAP1
0x11c PUSH1 0x44
0x11e CALLDATALOAD
0x11f DUP2
0x120 AND
0x121 SWAP1
0x122 PUSH1 0x64
0x124 CALLDATALOAD
0x125 SWAP1
0x126 PUSH1 0x84
0x128 CALLDATALOAD
0x129 SWAP1
0x12a PUSH1 0xa4
0x12c CALLDATALOAD
0x12d SWAP1
0x12e PUSH1 0xc4
0x130 CALLDATALOAD
0x131 AND
0x132 PUSH1 0xff
0x134 PUSH1 0xe4
0x136 CALLDATALOAD
0x137 AND
0x138 PUSH2 0x104
0x13b CALLDATALOAD
0x13c PUSH2 0x124
0x13f CALLDATALOAD
0x140 PUSH2 0x144
0x143 CALLDATALOAD
0x144 PUSH2 0x323
0x147 JUMP
---
0x106: JUMPDEST 
0x107: V83 = 0x148
0x10a: V84 = 0x1
0x10c: V85 = 0xa0
0x10e: V86 = 0x2
0x110: V87 = EXP 0x2 0xa0
0x111: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112: V89 = 0x4
0x114: V90 = CALLDATALOAD 0x4
0x116: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x118: V92 = 0x24
0x11a: V93 = CALLDATALOAD 0x24
0x11c: V94 = 0x44
0x11e: V95 = CALLDATALOAD 0x44
0x120: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x122: V97 = 0x64
0x124: V98 = CALLDATALOAD 0x64
0x126: V99 = 0x84
0x128: V100 = CALLDATALOAD 0x84
0x12a: V101 = 0xa4
0x12c: V102 = CALLDATALOAD 0xa4
0x12e: V103 = 0xc4
0x130: V104 = CALLDATALOAD 0xc4
0x131: V105 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x132: V106 = 0xff
0x134: V107 = 0xe4
0x136: V108 = CALLDATALOAD 0xe4
0x137: V109 = AND V108 0xff
0x138: V110 = 0x104
0x13b: V111 = CALLDATALOAD 0x104
0x13c: V112 = 0x124
0x13f: V113 = CALLDATALOAD 0x124
0x140: V114 = 0x144
0x143: V115 = CALLDATALOAD 0x144
0x144: V116 = 0x323
0x147: JUMP 0x323
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115]
Exit stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115]

================================

Block 0x148
[0x148:0x15b]
---
Predecessors: [0x3fb]
Successors: []
---
0x148 JUMPDEST
0x149 PUSH1 0x40
0x14b MLOAD
0x14c SWAP1
0x14d ISZERO
0x14e ISZERO
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 ADD
0x154 PUSH1 0x40
0x156 MLOAD
0x157 DUP1
0x158 SWAP2
0x159 SUB
0x15a SWAP1
0x15b RETURN
---
0x148: JUMPDEST 
0x149: V117 = 0x40
0x14b: V118 = M[0x40]
0x14d: V119 = ISZERO V398
0x14e: V120 = ISZERO V119
0x150: M[V118] = V120
0x151: V121 = 0x20
0x153: V122 = ADD 0x20 V118
0x154: V123 = 0x40
0x156: V124 = M[0x40]
0x159: V125 = SUB V122 V124
0x15b: RETURN V124 V125
---
Entry stack: [V12, V398]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x15c
[0x15c:0x162]
---
Predecessors: [0x51]
Successors: [0x163, 0x167]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e ISZERO
0x15f PUSH2 0x167
0x162 JUMPI
---
0x15c: JUMPDEST 
0x15d: V126 = CALLVALUE
0x15e: V127 = ISZERO V126
0x15f: V128 = 0x167
0x162: JUMPI 0x167 V127
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x163
[0x163:0x166]
---
Predecessors: [0x15c]
Successors: []
---
0x163 PUSH1 0x0
0x165 DUP1
0x166 REVERT
---
0x163: V129 = 0x0
0x166: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x167
[0x167:0x1a1]
---
Predecessors: [0x15c]
Successors: [0x40b]
---
0x167 JUMPDEST
0x168 PUSH2 0x8f
0x16b PUSH1 0x1
0x16d PUSH1 0xa0
0x16f PUSH1 0x2
0x171 EXP
0x172 SUB
0x173 PUSH1 0x4
0x175 CALLDATALOAD
0x176 DUP2
0x177 AND
0x178 SWAP1
0x179 PUSH1 0x24
0x17b CALLDATALOAD
0x17c DUP2
0x17d AND
0x17e SWAP1
0x17f PUSH1 0x44
0x181 CALLDATALOAD
0x182 AND
0x183 PUSH1 0x64
0x185 CALLDATALOAD
0x186 PUSH1 0x84
0x188 CALLDATALOAD
0x189 PUSH1 0xa4
0x18b CALLDATALOAD
0x18c PUSH1 0xc4
0x18e CALLDATALOAD
0x18f PUSH1 0xe4
0x191 CALLDATALOAD
0x192 PUSH2 0x104
0x195 CALLDATALOAD
0x196 PUSH2 0x124
0x199 CALLDATALOAD
0x19a PUSH2 0x144
0x19d CALLDATALOAD
0x19e PUSH2 0x40b
0x1a1 JUMP
---
0x167: JUMPDEST 
0x168: V130 = 0x8f
0x16b: V131 = 0x1
0x16d: V132 = 0xa0
0x16f: V133 = 0x2
0x171: V134 = EXP 0x2 0xa0
0x172: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x173: V136 = 0x4
0x175: V137 = CALLDATALOAD 0x4
0x177: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x179: V139 = 0x24
0x17b: V140 = CALLDATALOAD 0x24
0x17d: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x17f: V142 = 0x44
0x181: V143 = CALLDATALOAD 0x44
0x182: V144 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x183: V145 = 0x64
0x185: V146 = CALLDATALOAD 0x64
0x186: V147 = 0x84
0x188: V148 = CALLDATALOAD 0x84
0x189: V149 = 0xa4
0x18b: V150 = CALLDATALOAD 0xa4
0x18c: V151 = 0xc4
0x18e: V152 = CALLDATALOAD 0xc4
0x18f: V153 = 0xe4
0x191: V154 = CALLDATALOAD 0xe4
0x192: V155 = 0x104
0x195: V156 = CALLDATALOAD 0x104
0x196: V157 = 0x124
0x199: V158 = CALLDATALOAD 0x124
0x19a: V159 = 0x144
0x19d: V160 = CALLDATALOAD 0x144
0x19e: V161 = 0x40b
0x1a1: JUMP 0x40b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160]
Exit stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160]

================================

Block 0x1a2
[0x1a2:0x1a3]
---
Predecessors: []
Successors: []
---
0x1a2 JUMPDEST
0x1a3 STOP
---
0x1a2: JUMPDEST 
0x1a3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a4
[0x1a4:0x1aa]
---
Predecessors: [0x5c]
Successors: [0x1ab, 0x1af]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V162 = CALLVALUE
0x1a6: V163 = ISZERO V162
0x1a7: V164 = 0x1af
0x1aa: JUMPI 0x1af V163
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V165 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1af
[0x1af:0x1c2]
---
Predecessors: [0x1a4]
Successors: [0x5ef]
---
0x1af JUMPDEST
0x1b0 PUSH2 0xa4
0x1b3 PUSH1 0x1
0x1b5 PUSH1 0xa0
0x1b7 PUSH1 0x2
0x1b9 EXP
0x1ba SUB
0x1bb PUSH1 0x4
0x1bd CALLDATALOAD
0x1be AND
0x1bf PUSH2 0x5ef
0x1c2 JUMP
---
0x1af: JUMPDEST 
0x1b0: V166 = 0xa4
0x1b3: V167 = 0x1
0x1b5: V168 = 0xa0
0x1b7: V169 = 0x2
0x1b9: V170 = EXP 0x2 0xa0
0x1ba: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bb: V172 = 0x4
0x1bd: V173 = CALLDATALOAD 0x4
0x1be: V174 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V175 = 0x5ef
0x1c2: JUMP 0x5ef
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa4, V174]
Exit stack: [V12, 0xa4, V174]

================================

Block 0x1c3
[0x1c3:0x1d4]
---
Predecessors: []
Successors: []
---
0x1c3 JUMPDEST
0x1c4 PUSH1 0x40
0x1c6 MLOAD
0x1c7 SWAP1
0x1c8 DUP2
0x1c9 MSTORE
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd PUSH1 0x40
0x1cf MLOAD
0x1d0 DUP1
0x1d1 SWAP2
0x1d2 SUB
0x1d3 SWAP1
0x1d4 RETURN
---
0x1c3: JUMPDEST 
0x1c4: V176 = 0x40
0x1c6: V177 = M[0x40]
0x1c9: M[V177] = S0
0x1ca: V178 = 0x20
0x1cc: V179 = ADD 0x20 V177
0x1cd: V180 = 0x40
0x1cf: V181 = M[0x40]
0x1d2: V182 = SUB V179 V181
0x1d4: RETURN V181 V182
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d5
[0x1d5:0x1db]
---
Predecessors: [0x67]
Successors: [0x1dc, 0x1e0]
---
0x1d5 JUMPDEST
0x1d6 CALLVALUE
0x1d7 ISZERO
0x1d8 PUSH2 0x1e0
0x1db JUMPI
---
0x1d5: JUMPDEST 
0x1d6: V183 = CALLVALUE
0x1d7: V184 = ISZERO V183
0x1d8: V185 = 0x1e0
0x1db: JUMPI 0x1e0 V184
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x1d5]
Successors: []
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df REVERT
---
0x1dc: V186 = 0x0
0x1df: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e0
[0x1e0:0x1e7]
---
Predecessors: [0x1d5]
Successors: [0x676]
---
0x1e0 JUMPDEST
0x1e1 PUSH2 0x1e8
0x1e4 PUSH2 0x676
0x1e7 JUMP
---
0x1e0: JUMPDEST 
0x1e1: V187 = 0x1e8
0x1e4: V188 = 0x676
0x1e7: JUMP 0x676
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e8]
Exit stack: [V12, 0x1e8]

================================

Block 0x1e8
[0x1e8:0x203]
---
Predecessors: [0x676]
Successors: []
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec PUSH1 0x1
0x1ee PUSH1 0xa0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 SUB
0x1f4 SWAP1
0x1f5 SWAP2
0x1f6 AND
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc PUSH1 0x40
0x1fe MLOAD
0x1ff DUP1
0x200 SWAP2
0x201 SUB
0x202 SWAP1
0x203 RETURN
---
0x1e8: JUMPDEST 
0x1e9: V189 = 0x40
0x1eb: V190 = M[0x40]
0x1ec: V191 = 0x1
0x1ee: V192 = 0xa0
0x1f0: V193 = 0x2
0x1f2: V194 = EXP 0x2 0xa0
0x1f3: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f6: V196 = AND V629 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: M[V190] = V196
0x1f9: V197 = 0x20
0x1fb: V198 = ADD 0x20 V190
0x1fc: V199 = 0x40
0x1fe: V200 = M[0x40]
0x201: V201 = SUB V198 V200
0x203: RETURN V200 V201
---
Entry stack: [V12, 0x1e8, V629]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1e8]

================================

Block 0x204
[0x204:0x20b]
---
Predecessors: [0x72]
Successors: [0x8c]
---
0x204 JUMPDEST
0x205 PUSH2 0x8f
0x208 PUSH2 0x8c
0x20b JUMP
---
0x204: JUMPDEST 
0x205: V202 = 0x8f
0x208: V203 = 0x8c
0x20b: JUMP 0x8c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V12, 0x8f]

================================

Block 0x20c
[0x20c:0x20d]
---
Predecessors: []
Successors: []
---
0x20c JUMPDEST
0x20d STOP
---
0x20c: JUMPDEST 
0x20d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x20e
[0x20e:0x214]
---
Predecessors: [0x7d]
Successors: [0x215, 0x219]
---
0x20e JUMPDEST
0x20f CALLVALUE
0x210 ISZERO
0x211 PUSH2 0x219
0x214 JUMPI
---
0x20e: JUMPDEST 
0x20f: V204 = CALLVALUE
0x210: V205 = ISZERO V204
0x211: V206 = 0x219
0x214: JUMPI 0x219 V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x20e]
Successors: []
---
0x215 PUSH1 0x0
0x217 DUP1
0x218 REVERT
---
0x215: V207 = 0x0
0x218: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x219
[0x219:0x223]
---
Predecessors: [0x20e]
Successors: [0x688]
---
0x219 JUMPDEST
0x21a PUSH2 0x8f
0x21d PUSH1 0x4
0x21f CALLDATALOAD
0x220 PUSH2 0x688
0x223 JUMP
---
0x219: JUMPDEST 
0x21a: V208 = 0x8f
0x21d: V209 = 0x4
0x21f: V210 = CALLDATALOAD 0x4
0x220: V211 = 0x688
0x223: JUMP 0x688
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f, V210]
Exit stack: [V12, 0x8f, V210]

================================

Block 0x224
[0x224:0x225]
---
Predecessors: []
Successors: []
---
0x224 JUMPDEST
0x225 STOP
---
0x224: JUMPDEST 
0x225: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x226
[0x226:0x228]
---
Predecessors: [0x9c]
Successors: [0x229]
---
0x226 JUMPDEST
0x227 PUSH1 0x3
---
0x226: JUMPDEST 
0x227: V212 = 0x3
---
Entry stack: [V12, 0xa4]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, 0xa4, 0x3]

================================

Block 0x229
[0x229:0x22b]
---
Predecessors: [0x226]
Successors: [0xa4]
---
0x229 JUMPDEST
0x22a SWAP1
0x22b JUMP
---
0x229: JUMPDEST 
0x22b: JUMP 0xa4
---
Entry stack: [V12, 0xa4, 0x3]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x3]

================================

Block 0x22c
[0x22c:0x243]
---
Predecessors: [0xc1]
Successors: [0x244, 0x248]
---
0x22c JUMPDEST
0x22d PUSH1 0x0
0x22f DUP1
0x230 SLOAD
0x231 CALLER
0x232 PUSH1 0x1
0x234 PUSH1 0xa0
0x236 PUSH1 0x2
0x238 EXP
0x239 SUB
0x23a SWAP1
0x23b DUP2
0x23c AND
0x23d SWAP2
0x23e AND
0x23f EQ
0x240 PUSH2 0x248
0x243 JUMPI
---
0x22c: JUMPDEST 
0x22d: V213 = 0x0
0x230: V214 = S[0x0]
0x231: V215 = CALLER
0x232: V216 = 0x1
0x234: V217 = 0xa0
0x236: V218 = 0x2
0x238: V219 = EXP 0x2 0xa0
0x239: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23c: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x23e: V222 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V223 = EQ V222 V221
0x240: V224 = 0x248
0x243: JUMPI 0x248 V223
---
Entry stack: [V12, 0x8f, V63]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x8f, V63, 0x0]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x22c]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V225 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V63, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V63, 0x0]

================================

Block 0x248
[0x248:0x284]
---
Predecessors: [0x22c]
Successors: [0x285, 0x289]
---
0x248 JUMPDEST
0x249 POP
0x24a PUSH1 0x1
0x24c SLOAD
0x24d PUSH1 0x1
0x24f PUSH1 0xa0
0x251 PUSH1 0x2
0x253 EXP
0x254 SUB
0x255 AND
0x256 DUP1
0x257 PUSH4 0xd0e30db0
0x25c DUP4
0x25d PUSH1 0x40
0x25f MLOAD
0x260 DUP3
0x261 PUSH4 0xffffffff
0x266 AND
0x267 PUSH1 0xe0
0x269 PUSH1 0x2
0x26b EXP
0x26c MUL
0x26d DUP2
0x26e MSTORE
0x26f PUSH1 0x4
0x271 ADD
0x272 PUSH1 0x0
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP1
0x278 DUP4
0x279 SUB
0x27a DUP2
0x27b DUP6
0x27c DUP9
0x27d DUP1
0x27e EXTCODESIZE
0x27f ISZERO
0x280 ISZERO
0x281 PUSH2 0x289
0x284 JUMPI
---
0x248: JUMPDEST 
0x24a: V226 = 0x1
0x24c: V227 = S[0x1]
0x24d: V228 = 0x1
0x24f: V229 = 0xa0
0x251: V230 = 0x2
0x253: V231 = EXP 0x2 0xa0
0x254: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x255: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x257: V234 = 0xd0e30db0
0x25d: V235 = 0x40
0x25f: V236 = M[0x40]
0x261: V237 = 0xffffffff
0x266: V238 = AND 0xffffffff 0xd0e30db0
0x267: V239 = 0xe0
0x269: V240 = 0x2
0x26b: V241 = EXP 0x2 0xe0
0x26c: V242 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x26e: M[V236] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x26f: V243 = 0x4
0x271: V244 = ADD 0x4 V236
0x272: V245 = 0x0
0x274: V246 = 0x40
0x276: V247 = M[0x40]
0x279: V248 = SUB V244 V247
0x27e: V249 = EXTCODESIZE V233
0x27f: V250 = ISZERO V249
0x280: V251 = ISZERO V250
0x281: V252 = 0x289
0x284: JUMPI 0x289 V251
---
Entry stack: [V12, 0x8f, V63, 0x0]
Stack pops: 2
Stack additions: [S1, V233, V233, 0xd0e30db0, S1, V244, 0x0, V247, V248, V247, S1, V233]
Exit stack: [V12, 0x8f, V63, V233, V233, 0xd0e30db0, V63, V244, 0x0, V247, V248, V247, V63, V233]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x248]
Successors: []
---
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
---
0x285: V253 = 0x0
0x288: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V63, V233, V233, 0xd0e30db0, V63, V244, 0x0, V247, V248, V247, V63, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V63, V233, V233, 0xd0e30db0, V63, V244, 0x0, V247, V248, V247, V63, V233]

================================

Block 0x289
[0x289:0x295]
---
Predecessors: [0x248]
Successors: [0x296, 0x29a]
---
0x289 JUMPDEST
0x28a PUSH2 0x25ee
0x28d GAS
0x28e SUB
0x28f CALL
0x290 ISZERO
0x291 ISZERO
0x292 PUSH2 0x29a
0x295 JUMPI
---
0x289: JUMPDEST 
0x28a: V254 = 0x25ee
0x28d: V255 = GAS
0x28e: V256 = SUB V255 0x25ee
0x28f: V257 = CALL V256 V233 V63 V247 V248 V247 0x0
0x290: V258 = ISZERO V257
0x291: V259 = ISZERO V258
0x292: V260 = 0x29a
0x295: JUMPI 0x29a V259
---
Entry stack: [V12, 0x8f, V63, V233, V233, 0xd0e30db0, V63, V244, 0x0, V247, V248, V247, V63, V233]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8f, V63, V233, V233, 0xd0e30db0, V63, V244]

================================

Block 0x296
[0x296:0x299]
---
Predecessors: [0x289]
Successors: []
---
0x296 PUSH1 0x0
0x298 DUP1
0x299 REVERT
---
0x296: V261 = 0x0
0x299: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V63, V233, V233, 0xd0e30db0, V63, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V63, V233, V233, 0xd0e30db0, V63, V244]

================================

Block 0x29a
[0x29a:0x29e]
---
Predecessors: [0x289]
Successors: [0x29f]
---
0x29a JUMPDEST
0x29b POP
0x29c POP
0x29d POP
0x29e POP
---
0x29a: JUMPDEST 
---
Entry stack: [V12, 0x8f, V63, V233, V233, 0xd0e30db0, V63, V244]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x8f, V63, V233]

================================

Block 0x29f
[0x29f:0x29f]
---
Predecessors: [0x29a]
Successors: [0x2a0]
---
0x29f JUMPDEST
---
0x29f: JUMPDEST 
---
Entry stack: [V12, 0x8f, V63, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V63, V233]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x29f]
Successors: [0x8f]
---
0x2a0 JUMPDEST
0x2a1 POP
0x2a2 POP
0x2a3 JUMP
---
0x2a0: JUMPDEST 
0x2a3: JUMP 0x8f
---
Entry stack: [V12, 0x8f, V63, V233]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a4
[0x2a4:0x2ba]
---
Predecessors: [0xd9]
Successors: [0x2bb, 0x2bf]
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x0
0x2a7 SLOAD
0x2a8 CALLER
0x2a9 PUSH1 0x1
0x2ab PUSH1 0xa0
0x2ad PUSH1 0x2
0x2af EXP
0x2b0 SUB
0x2b1 SWAP1
0x2b2 DUP2
0x2b3 AND
0x2b4 SWAP2
0x2b5 AND
0x2b6 EQ
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V262 = 0x0
0x2a7: V263 = S[0x0]
0x2a8: V264 = CALLER
0x2a9: V265 = 0x1
0x2ab: V266 = 0xa0
0x2ad: V267 = 0x2
0x2af: V268 = EXP 0x2 0xa0
0x2b0: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x2b5: V271 = AND V263 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: V272 = EQ V271 V270
0x2b7: V273 = 0x2bf
0x2ba: JUMPI 0x2bf V272
---
Entry stack: [V12, 0x8f, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V71]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x2a4]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V274 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V71]

================================

Block 0x2bf
[0x2bf:0x2ed]
---
Predecessors: [0x2a4]
Successors: [0x2ee, 0x2f2]
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x0
0x2c2 SLOAD
0x2c3 PUSH1 0x1
0x2c5 PUSH1 0xa0
0x2c7 PUSH1 0x2
0x2c9 EXP
0x2ca SUB
0x2cb AND
0x2cc DUP2
0x2cd ISZERO
0x2ce PUSH2 0x8fc
0x2d1 MUL
0x2d2 DUP3
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 PUSH1 0x0
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db DUP1
0x2dc DUP4
0x2dd SUB
0x2de DUP2
0x2df DUP6
0x2e0 DUP9
0x2e1 DUP9
0x2e2 CALL
0x2e3 SWAP4
0x2e4 POP
0x2e5 POP
0x2e6 POP
0x2e7 POP
0x2e8 ISZERO
0x2e9 ISZERO
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V275 = 0x0
0x2c2: V276 = S[0x0]
0x2c3: V277 = 0x1
0x2c5: V278 = 0xa0
0x2c7: V279 = 0x2
0x2c9: V280 = EXP 0x2 0xa0
0x2ca: V281 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cb: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x2cd: V283 = ISZERO V71
0x2ce: V284 = 0x8fc
0x2d1: V285 = MUL 0x8fc V283
0x2d3: V286 = 0x40
0x2d5: V287 = M[0x40]
0x2d6: V288 = 0x0
0x2d8: V289 = 0x40
0x2da: V290 = M[0x40]
0x2dd: V291 = SUB V287 V290
0x2e2: V292 = CALL V285 V282 V71 V290 V291 V290 0x0
0x2e8: V293 = ISZERO V292
0x2e9: V294 = ISZERO V293
0x2ea: V295 = 0x2f2
0x2ed: JUMPI 0x2f2 V294
---
Entry stack: [V12, 0x8f, V71]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x8f, V71]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2bf]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V296 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V71]

================================

Block 0x2f2
[0x2f2:0x2f2]
---
Predecessors: [0x2bf]
Successors: [0x2f3]
---
0x2f2 JUMPDEST
---
0x2f2: JUMPDEST 
---
Entry stack: [V12, 0x8f, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V71]

================================

Block 0x2f3
[0x2f3:0x2f3]
---
Predecessors: [0x2f2]
Successors: [0x2f4]
---
0x2f3 JUMPDEST
---
0x2f3: JUMPDEST 
---
Entry stack: [V12, 0x8f, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V71]

================================

Block 0x2f4
[0x2f4:0x2f6]
---
Predecessors: [0x2f3]
Successors: [0x8f]
---
0x2f4 JUMPDEST
0x2f5 POP
0x2f6 JUMP
---
0x2f4: JUMPDEST 
0x2f6: JUMP 0x8f
---
Entry stack: [V12, 0x8f, V71]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f7
[0x2f7:0x30d]
---
Predecessors: [0xf1]
Successors: [0x30e, 0x312]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x0
0x2fa SLOAD
0x2fb CALLER
0x2fc PUSH1 0x1
0x2fe PUSH1 0xa0
0x300 PUSH1 0x2
0x302 EXP
0x303 SUB
0x304 SWAP1
0x305 DUP2
0x306 AND
0x307 SWAP2
0x308 AND
0x309 EQ
0x30a PUSH2 0x312
0x30d JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V297 = 0x0
0x2fa: V298 = S[0x0]
0x2fb: V299 = CALLER
0x2fc: V300 = 0x1
0x2fe: V301 = 0xa0
0x300: V302 = 0x2
0x302: V303 = EXP 0x2 0xa0
0x303: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x308: V306 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0x309: V307 = EQ V306 V305
0x30a: V308 = 0x312
0x30d: JUMPI 0x312 V307
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x2f7]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V309 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x312
[0x312:0x31f]
---
Predecessors: [0x2f7]
Successors: []
---
0x312 JUMPDEST
0x313 PUSH1 0x0
0x315 SLOAD
0x316 PUSH1 0x1
0x318 PUSH1 0xa0
0x31a PUSH1 0x2
0x31c EXP
0x31d SUB
0x31e AND
0x31f SELFDESTRUCT
---
0x312: JUMPDEST 
0x313: V310 = 0x0
0x315: V311 = S[0x0]
0x316: V312 = 0x1
0x318: V313 = 0xa0
0x31a: V314 = 0x2
0x31c: V315 = EXP 0x2 0xa0
0x31d: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x31f: SELFDESTRUCT V317
---
Entry stack: [V12, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f]

================================

Block 0x320
[0x320:0x320]
---
Predecessors: []
Successors: [0x321]
---
0x320 JUMPDEST
---
0x320: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x321
[0x321:0x322]
---
Predecessors: [0x320]
Successors: []
Has unresolved jump.
---
0x321 JUMPDEST
0x322 JUMP
---
0x321: JUMPDEST 
0x322: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x323
[0x323:0x3d9]
---
Predecessors: [0x106]
Successors: [0x3da, 0x3de]
---
0x323 JUMPDEST
0x324 PUSH1 0x1
0x326 SLOAD
0x327 PUSH1 0x0
0x329 SWAP1
0x32a PUSH1 0x1
0x32c PUSH1 0xa0
0x32e PUSH1 0x2
0x330 EXP
0x331 SUB
0x332 AND
0x333 DUP1
0x334 PUSH4 0x6c86888b
0x339 DUP15
0x33a DUP15
0x33b DUP15
0x33c DUP15
0x33d DUP15
0x33e DUP15
0x33f DUP15
0x340 DUP15
0x341 DUP15
0x342 DUP15
0x343 DUP15
0x344 ADDRESS
0x345 DUP16
0x346 PUSH1 0x40
0x348 MLOAD
0x349 PUSH1 0x20
0x34b ADD
0x34c MSTORE
0x34d PUSH1 0x40
0x34f MLOAD
0x350 PUSH1 0xe0
0x352 PUSH1 0x2
0x354 EXP
0x355 PUSH4 0xffffffff
0x35a DUP16
0x35b AND
0x35c MUL
0x35d DUP2
0x35e MSTORE
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 SWAP13
0x368 DUP14
0x369 AND
0x36a PUSH1 0x4
0x36c DUP3
0x36d ADD
0x36e MSTORE
0x36f PUSH1 0x24
0x371 DUP2
0x372 ADD
0x373 SWAP12
0x374 SWAP1
0x375 SWAP12
0x376 MSTORE
0x377 SWAP9
0x378 DUP12
0x379 AND
0x37a PUSH1 0x44
0x37c DUP12
0x37d ADD
0x37e MSTORE
0x37f PUSH1 0x64
0x381 DUP11
0x382 ADD
0x383 SWAP8
0x384 SWAP1
0x385 SWAP8
0x386 MSTORE
0x387 PUSH1 0x84
0x389 DUP10
0x38a ADD
0x38b SWAP6
0x38c SWAP1
0x38d SWAP6
0x38e MSTORE
0x38f PUSH1 0xa4
0x391 DUP9
0x392 ADD
0x393 SWAP4
0x394 SWAP1
0x395 SWAP4
0x396 MSTORE
0x397 SWAP1
0x398 DUP8
0x399 AND
0x39a PUSH1 0xc4
0x39c DUP8
0x39d ADD
0x39e MSTORE
0x39f PUSH1 0xff
0x3a1 AND
0x3a2 PUSH1 0xe4
0x3a4 DUP7
0x3a5 ADD
0x3a6 MSTORE
0x3a7 PUSH2 0x104
0x3aa DUP6
0x3ab ADD
0x3ac MSTORE
0x3ad PUSH2 0x124
0x3b0 DUP5
0x3b1 ADD
0x3b2 MSTORE
0x3b3 PUSH2 0x144
0x3b6 DUP4
0x3b7 ADD
0x3b8 MSTORE
0x3b9 SWAP1
0x3ba SWAP2
0x3bb AND
0x3bc PUSH2 0x164
0x3bf DUP3
0x3c0 ADD
0x3c1 MSTORE
0x3c2 PUSH2 0x184
0x3c5 ADD
0x3c6 PUSH1 0x20
0x3c8 PUSH1 0x40
0x3ca MLOAD
0x3cb DUP1
0x3cc DUP4
0x3cd SUB
0x3ce DUP2
0x3cf PUSH1 0x0
0x3d1 DUP8
0x3d2 DUP1
0x3d3 EXTCODESIZE
0x3d4 ISZERO
0x3d5 ISZERO
0x3d6 PUSH2 0x3de
0x3d9 JUMPI
---
0x323: JUMPDEST 
0x324: V318 = 0x1
0x326: V319 = S[0x1]
0x327: V320 = 0x0
0x32a: V321 = 0x1
0x32c: V322 = 0xa0
0x32e: V323 = 0x2
0x330: V324 = EXP 0x2 0xa0
0x331: V325 = SUB 0x10000000000000000000000000000000000000000 0x1
0x332: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x334: V327 = 0x6c86888b
0x344: V328 = ADDRESS
0x346: V329 = 0x40
0x348: V330 = M[0x40]
0x349: V331 = 0x20
0x34b: V332 = ADD 0x20 V330
0x34c: M[V332] = 0x0
0x34d: V333 = 0x40
0x34f: V334 = M[0x40]
0x350: V335 = 0xe0
0x352: V336 = 0x2
0x354: V337 = EXP 0x2 0xe0
0x355: V338 = 0xffffffff
0x35b: V339 = AND 0x6c86888b 0xffffffff
0x35c: V340 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x35e: M[V334] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x35f: V341 = 0x1
0x361: V342 = 0xa0
0x363: V343 = 0x2
0x365: V344 = EXP 0x2 0xa0
0x366: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x369: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x36a: V347 = 0x4
0x36d: V348 = ADD V334 0x4
0x36e: M[V348] = V346
0x36f: V349 = 0x24
0x372: V350 = ADD V334 0x24
0x376: M[V350] = V93
0x379: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x37a: V352 = 0x44
0x37d: V353 = ADD V334 0x44
0x37e: M[V353] = V351
0x37f: V354 = 0x64
0x382: V355 = ADD V334 0x64
0x386: M[V355] = V98
0x387: V356 = 0x84
0x38a: V357 = ADD V334 0x84
0x38e: M[V357] = V100
0x38f: V358 = 0xa4
0x392: V359 = ADD V334 0xa4
0x396: M[V359] = V102
0x399: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x39a: V361 = 0xc4
0x39d: V362 = ADD V334 0xc4
0x39e: M[V362] = V360
0x39f: V363 = 0xff
0x3a1: V364 = AND 0xff V109
0x3a2: V365 = 0xe4
0x3a5: V366 = ADD V334 0xe4
0x3a6: M[V366] = V364
0x3a7: V367 = 0x104
0x3ab: V368 = ADD V334 0x104
0x3ac: M[V368] = V111
0x3ad: V369 = 0x124
0x3b1: V370 = ADD V334 0x124
0x3b2: M[V370] = V113
0x3b3: V371 = 0x144
0x3b7: V372 = ADD V334 0x144
0x3b8: M[V372] = V115
0x3bb: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x3bc: V374 = 0x164
0x3c0: V375 = ADD V334 0x164
0x3c1: M[V375] = V373
0x3c2: V376 = 0x184
0x3c5: V377 = ADD 0x184 V334
0x3c6: V378 = 0x20
0x3c8: V379 = 0x40
0x3ca: V380 = M[0x40]
0x3cd: V381 = SUB V377 V380
0x3cf: V382 = 0x0
0x3d3: V383 = EXTCODESIZE V326
0x3d4: V384 = ISZERO V383
0x3d5: V385 = ISZERO V384
0x3d6: V386 = 0x3de
0x3d9: JUMPI 0x3de V385
---
Entry stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V326, V326, 0x6c86888b, V377, 0x20, V380, V381, V380, 0x0, V326]
Exit stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115, 0x0, V326, V326, 0x6c86888b, V377, 0x20, V380, V381, V380, 0x0, V326]

================================

Block 0x3da
[0x3da:0x3dd]
---
Predecessors: [0x323]
Successors: []
---
0x3da PUSH1 0x0
0x3dc DUP1
0x3dd REVERT
---
0x3da: V387 = 0x0
0x3dd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115, 0x0, V326, V326, 0x6c86888b, V377, 0x20, V380, V381, V380, 0x0, V326]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115, 0x0, V326, V326, 0x6c86888b, V377, 0x20, V380, V381, V380, 0x0, V326]

================================

Block 0x3de
[0x3de:0x3ea]
---
Predecessors: [0x323]
Successors: [0x3eb, 0x3ef]
---
0x3de JUMPDEST
0x3df PUSH2 0x2c6
0x3e2 GAS
0x3e3 SUB
0x3e4 CALL
0x3e5 ISZERO
0x3e6 ISZERO
0x3e7 PUSH2 0x3ef
0x3ea JUMPI
---
0x3de: JUMPDEST 
0x3df: V388 = 0x2c6
0x3e2: V389 = GAS
0x3e3: V390 = SUB V389 0x2c6
0x3e4: V391 = CALL V390 V326 0x0 V380 V381 V380 0x20
0x3e5: V392 = ISZERO V391
0x3e6: V393 = ISZERO V392
0x3e7: V394 = 0x3ef
0x3ea: JUMPI 0x3ef V393
---
Entry stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115, 0x0, V326, V326, 0x6c86888b, V377, 0x20, V380, V381, V380, 0x0, V326]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115, 0x0, V326, V326, 0x6c86888b, V377]

================================

Block 0x3eb
[0x3eb:0x3ee]
---
Predecessors: [0x3de]
Successors: []
---
0x3eb PUSH1 0x0
0x3ed DUP1
0x3ee REVERT
---
0x3eb: V395 = 0x0
0x3ee: REVERT 0x0 0x0
---
Entry stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115, 0x0, V326, V326, 0x6c86888b, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115, 0x0, V326, V326, 0x6c86888b, V377]

================================

Block 0x3ef
[0x3ef:0x3fa]
---
Predecessors: [0x3de]
Successors: [0x3fb]
---
0x3ef JUMPDEST
0x3f0 POP
0x3f1 POP
0x3f2 POP
0x3f3 PUSH1 0x40
0x3f5 MLOAD
0x3f6 DUP1
0x3f7 MLOAD
0x3f8 SWAP3
0x3f9 POP
0x3fa POP
---
0x3ef: JUMPDEST 
0x3f3: V396 = 0x40
0x3f5: V397 = M[0x40]
0x3f7: V398 = M[V397]
---
Entry stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115, 0x0, V326, V326, 0x6c86888b, V377]
Stack pops: 5
Stack additions: [V398, S3]
Exit stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115, V398, V326]

================================

Block 0x3fb
[0x3fb:0x40a]
---
Predecessors: [0x3ef]
Successors: [0x148]
---
0x3fb JUMPDEST
0x3fc POP
0x3fd SWAP12
0x3fe SWAP11
0x3ff POP
0x400 POP
0x401 POP
0x402 POP
0x403 POP
0x404 POP
0x405 POP
0x406 POP
0x407 POP
0x408 POP
0x409 POP
0x40a JUMP
---
0x3fb: JUMPDEST 
0x40a: JUMP 0x148
---
Entry stack: [V12, 0x148, V91, V93, V96, V98, V100, V102, V105, V109, V111, V113, V115, V398, V326]
Stack pops: 14
Stack additions: [S1]
Exit stack: [V12, V398]

================================

Block 0x40b
[0x40b:0x412]
---
Predecessors: [0x167]
Successors: [0xa3f]
---
0x40b JUMPDEST
0x40c PUSH2 0x413
0x40f PUSH2 0xa3f
0x412 JUMP
---
0x40b: JUMPDEST 
0x40c: V399 = 0x413
0x40f: V400 = 0xa3f
0x412: JUMP 0xa3f
---
Entry stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160]
Stack pops: 0
Stack additions: [0x413]
Exit stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, 0x413]

================================

Block 0x413
[0x413:0x41c]
---
Predecessors: [0xa3f]
Successors: [0xa3f]
---
0x413 JUMPDEST
0x414 PUSH1 0x0
0x416 PUSH2 0x41d
0x419 PUSH2 0xa3f
0x41c JUMP
---
0x413: JUMPDEST 
0x414: V401 = 0x0
0x416: V402 = 0x41d
0x419: V403 = 0xa3f
0x41c: JUMP 0xa3f
---
Entry stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V971]
Stack pops: 0
Stack additions: [0x0, 0x41d]
Exit stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V971, 0x0, 0x41d]

================================

Block 0x41d
[0x41d:0x433]
---
Predecessors: [0xa3f]
Successors: [0x434, 0x438]
---
0x41d JUMPDEST
0x41e PUSH1 0x0
0x420 SLOAD
0x421 CALLER
0x422 PUSH1 0x1
0x424 PUSH1 0xa0
0x426 PUSH1 0x2
0x428 EXP
0x429 SUB
0x42a SWAP1
0x42b DUP2
0x42c AND
0x42d SWAP2
0x42e AND
0x42f EQ
0x430 PUSH2 0x438
0x433 JUMPI
---
0x41d: JUMPDEST 
0x41e: V404 = 0x0
0x420: V405 = S[0x0]
0x421: V406 = CALLER
0x422: V407 = 0x1
0x424: V408 = 0xa0
0x426: V409 = 0x2
0x428: V410 = EXP 0x2 0xa0
0x429: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42c: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x42e: V413 = AND V405 0xffffffffffffffffffffffffffffffffffffffff
0x42f: V414 = EQ V413 V412
0x430: V415 = 0x438
0x433: JUMPI 0x438 V414
---
Entry stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V971]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V971]

================================

Block 0x434
[0x434:0x437]
---
Predecessors: [0x41d]
Successors: []
---
0x434 PUSH1 0x0
0x436 DUP1
0x437 REVERT
---
0x434: V416 = 0x0
0x437: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V971]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V971]

================================

Block 0x438
[0x438:0x444]
---
Predecessors: [0x41d]
Successors: [0x445, 0x447]
---
0x438 JUMPDEST
0x439 PUSH1 0x6
0x43b PUSH1 0x40
0x43d MLOAD
0x43e DUP1
0x43f MSIZE
0x440 LT
0x441 PUSH2 0x447
0x444 JUMPI
---
0x438: JUMPDEST 
0x439: V417 = 0x6
0x43b: V418 = 0x40
0x43d: V419 = M[0x40]
0x43f: V420 = MSIZE
0x440: V421 = LT V420 V419
0x441: V422 = 0x447
0x444: JUMPI 0x447 V421
---
Entry stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V971]
Stack pops: 0
Stack additions: [0x6, V419]
Exit stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V971, 0x6, V419]

================================

Block 0x445
[0x445:0x446]
---
Predecessors: [0x438]
Successors: [0x447]
---
0x445 POP
0x446 MSIZE
---
0x446: V423 = MSIZE
---
Entry stack: [V12, 0x8f, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V971, 0x6, V419]
Stack pops: 1
Stack additions: [V423]
Exit stack: [V12, 0x8f, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V971, 0x6, V423]

================================

Block 0x447
[0x447:0x457]
---
Predecessors: [0x438, 0x445]
Successors: [0x458]
---
0x447 JUMPDEST
0x448 SWAP1
0x449 DUP1
0x44a DUP3
0x44b MSTORE
0x44c DUP1
0x44d PUSH1 0x20
0x44f MUL
0x450 PUSH1 0x20
0x452 ADD
0x453 DUP3
0x454 ADD
0x455 PUSH1 0x40
0x457 MSTORE
---
0x447: JUMPDEST 
0x44b: M[S0] = 0x6
0x44d: V424 = 0x20
0x44f: V425 = MUL 0x20 0x6
0x450: V426 = 0x20
0x452: V427 = ADD 0x20 0xc0
0x454: V428 = ADD S0 0xe0
0x455: V429 = 0x40
0x457: M[0x40] = V428
---
Entry stack: [V12, 0x8f, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V971, 0x6, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, 0x8f, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V971, S0, 0x6]

================================

Block 0x458
[0x458:0x467]
---
Predecessors: [0x447]
Successors: [0x468, 0x469]
---
0x458 JUMPDEST
0x459 POP
0x45a SWAP3
0x45b POP
0x45c DUP11
0x45d DUP4
0x45e PUSH1 0x0
0x460 DUP2
0x461 MLOAD
0x462 DUP2
0x463 LT
0x464 PUSH2 0x469
0x467 JUMPI
---
0x458: JUMPDEST 
0x45e: V430 = 0x0
0x461: V431 = M[S1]
0x463: V432 = LT 0x0 V431
0x464: V433 = 0x469
0x467: JUMPI 0x469 V432
---
Entry stack: [V12, 0x8f, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V971, S1, 0x6]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S1, S3, S2, S12, S1, 0x0]
Exit stack: [S17, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1, S3, S2, S12, S1, 0x0]

================================

Block 0x468
[0x468:0x468]
---
Predecessors: [0x458]
Successors: []
---
0x468 INVALID
---
0x468: INVALID 
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x469
[0x469:0x47f]
---
Predecessors: [0x458]
Successors: [0x480, 0x481]
---
0x469 JUMPDEST
0x46a PUSH1 0x20
0x46c SWAP1
0x46d DUP2
0x46e MUL
0x46f SWAP1
0x470 SWAP2
0x471 ADD
0x472 ADD
0x473 MSTORE
0x474 DUP10
0x475 DUP4
0x476 PUSH1 0x1
0x478 DUP2
0x479 MLOAD
0x47a DUP2
0x47b LT
0x47c PUSH2 0x481
0x47f JUMPI
---
0x469: JUMPDEST 
0x46a: V434 = 0x20
0x46e: V435 = MUL 0x20 0x0
0x471: V436 = ADD S1 0x0
0x472: V437 = ADD V436 0x20
0x473: M[V437] = S2
0x476: V438 = 0x1
0x479: V439 = M[S5]
0x47b: V440 = LT 0x1 V439
0x47c: V441 = 0x481
0x47f: JUMPI 0x481 V440
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S12, S5, 0x1]
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S12, S5, 0x1]

================================

Block 0x480
[0x480:0x480]
---
Predecessors: [0x469]
Successors: []
---
0x480 INVALID
---
0x480: INVALID 
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x481
[0x481:0x497]
---
Predecessors: [0x469]
Successors: [0x498, 0x499]
---
0x481 JUMPDEST
0x482 PUSH1 0x20
0x484 SWAP1
0x485 DUP2
0x486 MUL
0x487 SWAP1
0x488 SWAP2
0x489 ADD
0x48a ADD
0x48b MSTORE
0x48c DUP9
0x48d DUP4
0x48e PUSH1 0x2
0x490 DUP2
0x491 MLOAD
0x492 DUP2
0x493 LT
0x494 PUSH2 0x499
0x497 JUMPI
---
0x481: JUMPDEST 
0x482: V442 = 0x20
0x486: V443 = MUL 0x20 0x1
0x489: V444 = ADD S1 0x20
0x48a: V445 = ADD V444 0x20
0x48b: M[V445] = S2
0x48e: V446 = 0x2
0x491: V447 = M[S5]
0x493: V448 = LT 0x2 V447
0x494: V449 = 0x499
0x497: JUMPI 0x499 V448
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S11, S5, 0x2]
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S11, S5, 0x2]

================================

Block 0x498
[0x498:0x498]
---
Predecessors: [0x481]
Successors: []
---
0x498 INVALID
---
0x498: INVALID 
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]

================================

Block 0x499
[0x499:0x4af]
---
Predecessors: [0x481]
Successors: [0x4b0, 0x4b1]
---
0x499 JUMPDEST
0x49a PUSH1 0x20
0x49c SWAP1
0x49d DUP2
0x49e MUL
0x49f SWAP1
0x4a0 SWAP2
0x4a1 ADD
0x4a2 ADD
0x4a3 MSTORE
0x4a4 DUP8
0x4a5 DUP4
0x4a6 PUSH1 0x3
0x4a8 DUP2
0x4a9 MLOAD
0x4aa DUP2
0x4ab LT
0x4ac PUSH2 0x4b1
0x4af JUMPI
---
0x499: JUMPDEST 
0x49a: V450 = 0x20
0x49e: V451 = MUL 0x20 0x2
0x4a1: V452 = ADD S1 0x40
0x4a2: V453 = ADD V452 0x20
0x4a3: M[V453] = S2
0x4a6: V454 = 0x3
0x4a9: V455 = M[S5]
0x4ab: V456 = LT 0x3 V455
0x4ac: V457 = 0x4b1
0x4af: JUMPI 0x4b1 V456
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S10, S5, 0x3]
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S10, S5, 0x3]

================================

Block 0x4b0
[0x4b0:0x4b0]
---
Predecessors: [0x499]
Successors: []
---
0x4b0 INVALID
---
0x4b0: INVALID 
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]

================================

Block 0x4b1
[0x4b1:0x4c7]
---
Predecessors: [0x499]
Successors: [0x4c8, 0x4c9]
---
0x4b1 JUMPDEST
0x4b2 PUSH1 0x20
0x4b4 SWAP1
0x4b5 DUP2
0x4b6 MUL
0x4b7 SWAP1
0x4b8 SWAP2
0x4b9 ADD
0x4ba ADD
0x4bb MSTORE
0x4bc DUP7
0x4bd DUP4
0x4be PUSH1 0x4
0x4c0 DUP2
0x4c1 MLOAD
0x4c2 DUP2
0x4c3 LT
0x4c4 PUSH2 0x4c9
0x4c7 JUMPI
---
0x4b1: JUMPDEST 
0x4b2: V458 = 0x20
0x4b6: V459 = MUL 0x20 0x3
0x4b9: V460 = ADD S1 0x60
0x4ba: V461 = ADD V460 0x20
0x4bb: M[V461] = S2
0x4be: V462 = 0x4
0x4c1: V463 = M[S5]
0x4c3: V464 = LT 0x4 V463
0x4c4: V465 = 0x4c9
0x4c7: JUMPI 0x4c9 V464
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S9, S5, 0x4]
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S9, S5, 0x4]

================================

Block 0x4c8
[0x4c8:0x4c8]
---
Predecessors: [0x4b1]
Successors: []
---
0x4c8 INVALID
---
0x4c8: INVALID 
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]

================================

Block 0x4c9
[0x4c9:0x4df]
---
Predecessors: [0x4b1]
Successors: [0x4e0, 0x4e1]
---
0x4c9 JUMPDEST
0x4ca PUSH1 0x20
0x4cc SWAP1
0x4cd DUP2
0x4ce MUL
0x4cf SWAP1
0x4d0 SWAP2
0x4d1 ADD
0x4d2 ADD
0x4d3 MSTORE
0x4d4 DUP6
0x4d5 DUP4
0x4d6 PUSH1 0x5
0x4d8 DUP2
0x4d9 MLOAD
0x4da DUP2
0x4db LT
0x4dc PUSH2 0x4e1
0x4df JUMPI
---
0x4c9: JUMPDEST 
0x4ca: V466 = 0x20
0x4ce: V467 = MUL 0x20 0x4
0x4d1: V468 = ADD S1 0x80
0x4d2: V469 = ADD V468 0x20
0x4d3: M[V469] = S2
0x4d6: V470 = 0x5
0x4d9: V471 = M[S5]
0x4db: V472 = LT 0x5 V471
0x4dc: V473 = 0x4e1
0x4df: JUMPI 0x4e1 V472
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S8, S5, 0x5]
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S8, S5, 0x5]

================================

Block 0x4e0
[0x4e0:0x4e0]
---
Predecessors: [0x4c9]
Successors: []
---
0x4e0 INVALID
---
0x4e0: INVALID 
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x5]

================================

Block 0x4e1
[0x4e1:0x4ef]
---
Predecessors: [0x4c9]
Successors: [0x4f0]
---
0x4e1 JUMPDEST
0x4e2 PUSH1 0x20
0x4e4 SWAP1
0x4e5 DUP2
0x4e6 MUL
0x4e7 SWAP1
0x4e8 SWAP2
0x4e9 ADD
0x4ea ADD
0x4eb MSTORE
0x4ec PUSH1 0x0
0x4ee SWAP2
0x4ef POP
---
0x4e1: JUMPDEST 
0x4e2: V474 = 0x20
0x4e6: V475 = MUL 0x20 0x5
0x4e9: V476 = ADD S1 0xa0
0x4ea: V477 = ADD V476 0x20
0x4eb: M[V477] = S2
0x4ec: V478 = 0x0
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x5]
Stack pops: 5
Stack additions: [0x0, S3]
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, S3]

================================

Block 0x4f0
[0x4f0:0x4f9]
---
Predecessors: [0x4e1, 0x534]
Successors: [0x4fa, 0x53f]
---
0x4f0 JUMPDEST
0x4f1 PUSH1 0x6
0x4f3 DUP3
0x4f4 LT
0x4f5 ISZERO
0x4f6 PUSH2 0x53f
0x4f9 JUMPI
---
0x4f0: JUMPDEST 
0x4f1: V479 = 0x6
0x4f4: V480 = LT S1 0x6
0x4f5: V481 = ISZERO V480
0x4f6: V482 = 0x53f
0x4f9: JUMPI 0x53f V481
---
Entry stack: [V12, 0x8f, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x8f, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4fa
[0x4fa:0x507]
---
Predecessors: [0x4f0]
Successors: [0x508, 0x509]
---
0x4fa DUP2
0x4fb PUSH1 0x3
0x4fd ADD
0x4fe DUP4
0x4ff DUP4
0x500 DUP2
0x501 MLOAD
0x502 DUP2
0x503 LT
0x504 PUSH2 0x509
0x507 JUMPI
---
0x4fb: V483 = 0x3
0x4fd: V484 = ADD 0x3 S1
0x501: V485 = M[S2]
0x503: V486 = LT S1 V485
0x504: V487 = 0x509
0x507: JUMPI 0x509 V486
---
Entry stack: [V12, 0x8f, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V484, S2, S1]
Exit stack: [V12, 0x8f, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V484, S2, S1]

================================

Block 0x508
[0x508:0x508]
---
Predecessors: [0x4fa]
Successors: []
---
0x508 INVALID
---
0x508: INVALID 
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V484, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V484, S1, S0]

================================

Block 0x509
[0x509:0x51a]
---
Predecessors: [0x4fa]
Successors: [0x51b, 0x51c]
---
0x509 JUMPDEST
0x50a SWAP1
0x50b PUSH1 0x20
0x50d ADD
0x50e SWAP1
0x50f PUSH1 0x20
0x511 MUL
0x512 ADD
0x513 MLOAD
0x514 DUP2
0x515 ISZERO
0x516 ISZERO
0x517 PUSH2 0x51c
0x51a JUMPI
---
0x509: JUMPDEST 
0x50b: V488 = 0x20
0x50d: V489 = ADD 0x20 S1
0x50f: V490 = 0x20
0x511: V491 = MUL 0x20 S0
0x512: V492 = ADD V491 V489
0x513: V493 = M[V492]
0x515: V494 = ISZERO V484
0x516: V495 = ISZERO V494
0x517: V496 = 0x51c
0x51a: JUMPI 0x51c V495
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V484, S1, S0]
Stack pops: 3
Stack additions: [S2, V493]
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V484, V493]

================================

Block 0x51b
[0x51b:0x51b]
---
Predecessors: [0x509]
Successors: []
---
0x51b INVALID
---
0x51b: INVALID 
---
Entry stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V484, V493]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V484, V493]

================================

Block 0x51c
[0x51c:0x527]
---
Predecessors: [0x509]
Successors: [0x528, 0x529]
---
0x51c JUMPDEST
0x51d DIV
0x51e DUP4
0x51f DUP4
0x520 DUP2
0x521 MLOAD
0x522 DUP2
0x523 LT
0x524 PUSH2 0x529
0x527 JUMPI
---
0x51c: JUMPDEST 
0x51d: V497 = DIV V493 V484
0x521: V498 = M[S4]
0x523: V499 = LT S3 V498
0x524: V500 = 0x529
0x527: JUMPI 0x529 V499
---
Entry stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V484, V493]
Stack pops: 5
Stack additions: [S4, S3, S2, V497, S4, S3]
Exit stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V497, S4, S3]

================================

Block 0x528
[0x528:0x528]
---
Predecessors: [0x51c]
Successors: []
---
0x528 INVALID
---
0x528: INVALID 
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V497, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V497, S1, S0]

================================

Block 0x529
[0x529:0x533]
---
Predecessors: [0x51c]
Successors: [0x534]
---
0x529 JUMPDEST
0x52a PUSH1 0x20
0x52c SWAP1
0x52d DUP2
0x52e MUL
0x52f SWAP1
0x530 SWAP2
0x531 ADD
0x532 ADD
0x533 MSTORE
---
0x529: JUMPDEST 
0x52a: V501 = 0x20
0x52e: V502 = MUL 0x20 S0
0x531: V503 = ADD S1 V502
0x532: V504 = ADD V503 0x20
0x533: M[V504] = V497
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V497, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x534
[0x534:0x53e]
---
Predecessors: [0x529]
Successors: [0x4f0]
---
0x534 JUMPDEST
0x535 PUSH1 0x1
0x537 SWAP1
0x538 SWAP2
0x539 ADD
0x53a SWAP1
0x53b PUSH2 0x4f0
0x53e JUMP
---
0x534: JUMPDEST 
0x535: V505 = 0x1
0x539: V506 = ADD S1 0x1
0x53b: V507 = 0x4f0
0x53e: JUMP 0x4f0
---
Entry stack: [V12, 0x8f, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V506, S0]
Exit stack: [V12, 0x8f, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V506, S0]

================================

Block 0x53f
[0x53f:0x54b]
---
Predecessors: [0x4f0]
Successors: [0x54c, 0x54e]
---
0x53f JUMPDEST
0x540 PUSH1 0x3
0x542 PUSH1 0x40
0x544 MLOAD
0x545 DUP1
0x546 MSIZE
0x547 LT
0x548 PUSH2 0x54e
0x54b JUMPI
---
0x53f: JUMPDEST 
0x540: V508 = 0x3
0x542: V509 = 0x40
0x544: V510 = M[0x40]
0x546: V511 = MSIZE
0x547: V512 = LT V511 V510
0x548: V513 = 0x54e
0x54b: JUMPI 0x54e V512
---
Entry stack: [V12, 0x8f, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3, V510]
Exit stack: [V12, 0x8f, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x3, V510]

================================

Block 0x54c
[0x54c:0x54d]
---
Predecessors: [0x53f]
Successors: [0x54e]
---
0x54c POP
0x54d MSIZE
---
0x54d: V514 = MSIZE
---
Entry stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, V510]
Stack pops: 1
Stack additions: [V514]
Exit stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, V514]

================================

Block 0x54e
[0x54e:0x55e]
---
Predecessors: [0x53f, 0x54c]
Successors: [0x55f]
---
0x54e JUMPDEST
0x54f SWAP1
0x550 DUP1
0x551 DUP3
0x552 MSTORE
0x553 DUP1
0x554 PUSH1 0x20
0x556 MUL
0x557 PUSH1 0x20
0x559 ADD
0x55a DUP3
0x55b ADD
0x55c PUSH1 0x40
0x55e MSTORE
---
0x54e: JUMPDEST 
0x552: M[S0] = 0x3
0x554: V515 = 0x20
0x556: V516 = MUL 0x20 0x3
0x557: V517 = 0x20
0x559: V518 = ADD 0x20 0x60
0x55b: V519 = ADD S0 0x80
0x55c: V520 = 0x40
0x55e: M[0x40] = V519
---
Entry stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, 0x3]

================================

Block 0x55f
[0x55f:0x56e]
---
Predecessors: [0x54e]
Successors: [0x56f, 0x570]
---
0x55f JUMPDEST
0x560 POP
0x561 SWAP1
0x562 POP
0x563 DUP14
0x564 DUP2
0x565 PUSH1 0x0
0x567 DUP2
0x568 MLOAD
0x569 DUP2
0x56a LT
0x56b PUSH2 0x570
0x56e JUMPI
---
0x55f: JUMPDEST 
0x565: V521 = 0x0
0x568: V522 = M[S1]
0x56a: V523 = LT 0x0 V522
0x56b: V524 = 0x570
0x56e: JUMPI 0x570 V523
---
Entry stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1, S15, S1, 0x0]
Exit stack: [V12, 0x8f, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1, S15, S1, 0x0]

================================

Block 0x56f
[0x56f:0x56f]
---
Predecessors: [0x55f]
Successors: []
---
0x56f INVALID
---
0x56f: INVALID 
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x570
[0x570:0x593]
---
Predecessors: [0x55f]
Successors: [0x594, 0x595]
---
0x570 JUMPDEST
0x571 PUSH1 0x1
0x573 PUSH1 0xa0
0x575 PUSH1 0x2
0x577 EXP
0x578 SUB
0x579 SWAP1
0x57a SWAP3
0x57b AND
0x57c PUSH1 0x20
0x57e SWAP3
0x57f DUP4
0x580 MUL
0x581 SWAP1
0x582 SWAP2
0x583 ADD
0x584 SWAP1
0x585 SWAP2
0x586 ADD
0x587 MSTORE
0x588 DUP13
0x589 DUP2
0x58a PUSH1 0x1
0x58c DUP2
0x58d MLOAD
0x58e DUP2
0x58f LT
0x590 PUSH2 0x595
0x593 JUMPI
---
0x570: JUMPDEST 
0x571: V525 = 0x1
0x573: V526 = 0xa0
0x575: V527 = 0x2
0x577: V528 = EXP 0x2 0xa0
0x578: V529 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57b: V530 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x57c: V531 = 0x20
0x580: V532 = MUL 0x20 0x0
0x583: V533 = ADD S1 0x0
0x586: V534 = ADD 0x20 V533
0x587: M[V534] = V530
0x58a: V535 = 0x1
0x58d: V536 = M[S3]
0x58f: V537 = LT 0x1 V536
0x590: V538 = 0x595
0x593: JUMPI 0x595 V537
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S15, S3, 0x1]
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S15, S3, 0x1]

================================

Block 0x594
[0x594:0x594]
---
Predecessors: [0x570]
Successors: []
---
0x594 INVALID
---
0x594: INVALID 
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x595
[0x595:0x5b8]
---
Predecessors: [0x570]
Successors: [0x5b9, 0x5ba]
---
0x595 JUMPDEST
0x596 PUSH1 0x1
0x598 PUSH1 0xa0
0x59a PUSH1 0x2
0x59c EXP
0x59d SUB
0x59e SWAP1
0x59f SWAP3
0x5a0 AND
0x5a1 PUSH1 0x20
0x5a3 SWAP3
0x5a4 DUP4
0x5a5 MUL
0x5a6 SWAP1
0x5a7 SWAP2
0x5a8 ADD
0x5a9 SWAP1
0x5aa SWAP2
0x5ab ADD
0x5ac MSTORE
0x5ad DUP12
0x5ae DUP2
0x5af PUSH1 0x2
0x5b1 DUP2
0x5b2 MLOAD
0x5b3 DUP2
0x5b4 LT
0x5b5 PUSH2 0x5ba
0x5b8 JUMPI
---
0x595: JUMPDEST 
0x596: V539 = 0x1
0x598: V540 = 0xa0
0x59a: V541 = 0x2
0x59c: V542 = EXP 0x2 0xa0
0x59d: V543 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a0: V544 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x5a1: V545 = 0x20
0x5a5: V546 = MUL 0x20 0x1
0x5a8: V547 = ADD S1 0x20
0x5ab: V548 = ADD 0x20 V547
0x5ac: M[V548] = V544
0x5af: V549 = 0x2
0x5b2: V550 = M[S3]
0x5b4: V551 = LT 0x2 V550
0x5b5: V552 = 0x5ba
0x5b8: JUMPI 0x5ba V551
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S14, S3, 0x2]
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S14, S3, 0x2]

================================

Block 0x5b9
[0x5b9:0x5b9]
---
Predecessors: [0x595]
Successors: []
---
0x5b9 INVALID
---
0x5b9: INVALID 
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]

================================

Block 0x5ba
[0x5ba:0x5dc]
---
Predecessors: [0x595]
Successors: [0x708]
---
0x5ba JUMPDEST
0x5bb PUSH1 0x1
0x5bd PUSH1 0xa0
0x5bf PUSH1 0x2
0x5c1 EXP
0x5c2 SUB
0x5c3 SWAP1
0x5c4 SWAP3
0x5c5 AND
0x5c6 PUSH1 0x20
0x5c8 SWAP3
0x5c9 DUP4
0x5ca MUL
0x5cb SWAP1
0x5cc SWAP2
0x5cd ADD
0x5ce SWAP1
0x5cf SWAP2
0x5d0 ADD
0x5d1 MSTORE
0x5d2 PUSH2 0x5dd
0x5d5 DUP2
0x5d6 DUP5
0x5d7 DUP8
0x5d8 DUP8
0x5d9 PUSH2 0x708
0x5dc JUMP
---
0x5ba: JUMPDEST 
0x5bb: V553 = 0x1
0x5bd: V554 = 0xa0
0x5bf: V555 = 0x2
0x5c1: V556 = EXP 0x2 0xa0
0x5c2: V557 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c5: V558 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x5c6: V559 = 0x20
0x5ca: V560 = MUL 0x20 0x2
0x5cd: V561 = ADD S1 0x40
0x5d0: V562 = ADD 0x20 V561
0x5d1: M[V562] = V558
0x5d2: V563 = 0x5dd
0x5d9: V564 = 0x708
0x5dc: JUMP 0x708
---
Entry stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, 0x5dd, S3, S5, S7, S6]
Exit stack: [V12, 0x8f, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x5dd, S3, S5, S7, S6]

================================

Block 0x5dd
[0x5dd:0x5dd]
---
Predecessors: [0x704]
Successors: [0x5de]
---
0x5dd JUMPDEST
---
0x5dd: JUMPDEST 
---
Entry stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S2, S1, S0]

================================

Block 0x5de
[0x5de:0x5de]
---
Predecessors: [0x5dd]
Successors: [0x5df]
---
0x5de JUMPDEST
---
0x5de: JUMPDEST 
---
Entry stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S2, S1, S0]

================================

Block 0x5df
[0x5df:0x5ee]
---
Predecessors: [0x5de]
Successors: [0x8f]
---
0x5df JUMPDEST
0x5e0 POP
0x5e1 POP
0x5e2 POP
0x5e3 POP
0x5e4 POP
0x5e5 POP
0x5e6 POP
0x5e7 POP
0x5e8 POP
0x5e9 POP
0x5ea POP
0x5eb POP
0x5ec POP
0x5ed POP
0x5ee JUMP
---
0x5df: JUMPDEST 
0x5ee: JUMP 0x8f
---
Entry stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S2, S1, S0]
Stack pops: 15
Stack additions: []
Exit stack: [V12]

================================

Block 0x5ef
[0x5ef:0x64e]
---
Predecessors: [0x1af]
Successors: [0x64f, 0x653]
---
0x5ef JUMPDEST
0x5f0 PUSH1 0x1
0x5f2 SLOAD
0x5f3 PUSH1 0x0
0x5f5 SWAP1
0x5f6 PUSH1 0x1
0x5f8 PUSH1 0xa0
0x5fa PUSH1 0x2
0x5fc EXP
0x5fd SUB
0x5fe AND
0x5ff DUP1
0x600 PUSH4 0xf7888aec
0x605 DUP5
0x606 ADDRESS
0x607 DUP6
0x608 PUSH1 0x40
0x60a MLOAD
0x60b PUSH1 0x20
0x60d ADD
0x60e MSTORE
0x60f PUSH1 0x40
0x611 MLOAD
0x612 PUSH1 0xe0
0x614 PUSH1 0x2
0x616 EXP
0x617 PUSH4 0xffffffff
0x61c DUP6
0x61d AND
0x61e MUL
0x61f DUP2
0x620 MSTORE
0x621 PUSH1 0x1
0x623 PUSH1 0xa0
0x625 PUSH1 0x2
0x627 EXP
0x628 SUB
0x629 SWAP3
0x62a DUP4
0x62b AND
0x62c PUSH1 0x4
0x62e DUP3
0x62f ADD
0x630 MSTORE
0x631 SWAP2
0x632 AND
0x633 PUSH1 0x24
0x635 DUP3
0x636 ADD
0x637 MSTORE
0x638 PUSH1 0x44
0x63a ADD
0x63b PUSH1 0x20
0x63d PUSH1 0x40
0x63f MLOAD
0x640 DUP1
0x641 DUP4
0x642 SUB
0x643 DUP2
0x644 PUSH1 0x0
0x646 DUP8
0x647 DUP1
0x648 EXTCODESIZE
0x649 ISZERO
0x64a ISZERO
0x64b PUSH2 0x653
0x64e JUMPI
---
0x5ef: JUMPDEST 
0x5f0: V565 = 0x1
0x5f2: V566 = S[0x1]
0x5f3: V567 = 0x0
0x5f6: V568 = 0x1
0x5f8: V569 = 0xa0
0x5fa: V570 = 0x2
0x5fc: V571 = EXP 0x2 0xa0
0x5fd: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fe: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x600: V574 = 0xf7888aec
0x606: V575 = ADDRESS
0x608: V576 = 0x40
0x60a: V577 = M[0x40]
0x60b: V578 = 0x20
0x60d: V579 = ADD 0x20 V577
0x60e: M[V579] = 0x0
0x60f: V580 = 0x40
0x611: V581 = M[0x40]
0x612: V582 = 0xe0
0x614: V583 = 0x2
0x616: V584 = EXP 0x2 0xe0
0x617: V585 = 0xffffffff
0x61d: V586 = AND 0xf7888aec 0xffffffff
0x61e: V587 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x620: M[V581] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x621: V588 = 0x1
0x623: V589 = 0xa0
0x625: V590 = 0x2
0x627: V591 = EXP 0x2 0xa0
0x628: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62b: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x62c: V594 = 0x4
0x62f: V595 = ADD V581 0x4
0x630: M[V595] = V593
0x632: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V575
0x633: V597 = 0x24
0x636: V598 = ADD V581 0x24
0x637: M[V598] = V596
0x638: V599 = 0x44
0x63a: V600 = ADD 0x44 V581
0x63b: V601 = 0x20
0x63d: V602 = 0x40
0x63f: V603 = M[0x40]
0x642: V604 = SUB V600 V603
0x644: V605 = 0x0
0x648: V606 = EXTCODESIZE V573
0x649: V607 = ISZERO V606
0x64a: V608 = ISZERO V607
0x64b: V609 = 0x653
0x64e: JUMPI 0x653 V608
---
Entry stack: [V12, 0xa4, V174]
Stack pops: 1
Stack additions: [S0, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]
Exit stack: [V12, 0xa4, V174, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]

================================

Block 0x64f
[0x64f:0x652]
---
Predecessors: [0x5ef]
Successors: []
---
0x64f PUSH1 0x0
0x651 DUP1
0x652 REVERT
---
0x64f: V610 = 0x0
0x652: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa4, V174, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa4, V174, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]

================================

Block 0x653
[0x653:0x65f]
---
Predecessors: [0x5ef]
Successors: [0x660, 0x664]
---
0x653 JUMPDEST
0x654 PUSH2 0x2c6
0x657 GAS
0x658 SUB
0x659 CALL
0x65a ISZERO
0x65b ISZERO
0x65c PUSH2 0x664
0x65f JUMPI
---
0x653: JUMPDEST 
0x654: V611 = 0x2c6
0x657: V612 = GAS
0x658: V613 = SUB V612 0x2c6
0x659: V614 = CALL V613 V573 0x0 V603 V604 V603 0x20
0x65a: V615 = ISZERO V614
0x65b: V616 = ISZERO V615
0x65c: V617 = 0x664
0x65f: JUMPI 0x664 V616
---
Entry stack: [V12, 0xa4, V174, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xa4, V174, 0x0, V573, V573, 0xf7888aec, V600]

================================

Block 0x660
[0x660:0x663]
---
Predecessors: [0x653]
Successors: []
---
0x660 PUSH1 0x0
0x662 DUP1
0x663 REVERT
---
0x660: V618 = 0x0
0x663: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa4, V174, 0x0, V573, V573, 0xf7888aec, V600]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa4, V174, 0x0, V573, V573, 0xf7888aec, V600]

================================

Block 0x664
[0x664:0x66f]
---
Predecessors: [0x653]
Successors: [0x670]
---
0x664 JUMPDEST
0x665 POP
0x666 POP
0x667 POP
0x668 PUSH1 0x40
0x66a MLOAD
0x66b DUP1
0x66c MLOAD
0x66d SWAP3
0x66e POP
0x66f POP
---
0x664: JUMPDEST 
0x668: V619 = 0x40
0x66a: V620 = M[0x40]
0x66c: V621 = M[V620]
---
Entry stack: [V12, 0xa4, V174, 0x0, V573, V573, 0xf7888aec, V600]
Stack pops: 5
Stack additions: [V621, S3]
Exit stack: [V12, 0xa4, V174, V621, V573]

================================

Block 0x670
[0x670:0x675]
---
Predecessors: [0x664]
Successors: [0xa4]
---
0x670 JUMPDEST
0x671 POP
0x672 SWAP2
0x673 SWAP1
0x674 POP
0x675 JUMP
---
0x670: JUMPDEST 
0x675: JUMP 0xa4
---
Entry stack: [V12, 0xa4, V174, V621, V573]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V621]

================================

Block 0x676
[0x676:0x684]
---
Predecessors: [0x1e0]
Successors: [0x1e8]
---
0x676 JUMPDEST
0x677 PUSH1 0x0
0x679 SLOAD
0x67a PUSH1 0x1
0x67c PUSH1 0xa0
0x67e PUSH1 0x2
0x680 EXP
0x681 SUB
0x682 AND
0x683 DUP2
0x684 JUMP
---
0x676: JUMPDEST 
0x677: V622 = 0x0
0x679: V623 = S[0x0]
0x67a: V624 = 0x1
0x67c: V625 = 0xa0
0x67e: V626 = 0x2
0x680: V627 = EXP 0x2 0xa0
0x681: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x682: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0x684: JUMP 0x1e8
---
Entry stack: [V12, 0x1e8]
Stack pops: 1
Stack additions: [S0, V629]
Exit stack: [V12, 0x1e8, V629]

================================

Block 0x685
[0x685:0x685]
---
Predecessors: []
Successors: [0x686]
---
0x685 JUMPDEST
---
0x685: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x686
[0x686:0x687]
---
Predecessors: [0x685]
Successors: []
Has unresolved jump.
---
0x686 JUMPDEST
0x687 JUMP
---
0x686: JUMPDEST 
0x687: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x688
[0x688:0x69f]
---
Predecessors: [0x219]
Successors: [0x6a0, 0x6a4]
---
0x688 JUMPDEST
0x689 PUSH1 0x0
0x68b DUP1
0x68c SLOAD
0x68d CALLER
0x68e PUSH1 0x1
0x690 PUSH1 0xa0
0x692 PUSH1 0x2
0x694 EXP
0x695 SUB
0x696 SWAP1
0x697 DUP2
0x698 AND
0x699 SWAP2
0x69a AND
0x69b EQ
0x69c PUSH2 0x6a4
0x69f JUMPI
---
0x688: JUMPDEST 
0x689: V630 = 0x0
0x68c: V631 = S[0x0]
0x68d: V632 = CALLER
0x68e: V633 = 0x1
0x690: V634 = 0xa0
0x692: V635 = 0x2
0x694: V636 = EXP 0x2 0xa0
0x695: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x698: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x69a: V639 = AND V631 0xffffffffffffffffffffffffffffffffffffffff
0x69b: V640 = EQ V639 V638
0x69c: V641 = 0x6a4
0x69f: JUMPI 0x6a4 V640
---
Entry stack: [V12, 0x8f, V210]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x8f, V210, 0x0]

================================

Block 0x6a0
[0x6a0:0x6a3]
---
Predecessors: [0x688]
Successors: []
---
0x6a0 PUSH1 0x0
0x6a2 DUP1
0x6a3 REVERT
---
0x6a0: V642 = 0x0
0x6a3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V210, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V210, 0x0]

================================

Block 0x6a4
[0x6a4:0x6e9]
---
Predecessors: [0x688]
Successors: [0x6ea, 0x6ee]
---
0x6a4 JUMPDEST
0x6a5 POP
0x6a6 PUSH1 0x1
0x6a8 SLOAD
0x6a9 PUSH1 0x1
0x6ab PUSH1 0xa0
0x6ad PUSH1 0x2
0x6af EXP
0x6b0 SUB
0x6b1 AND
0x6b2 DUP1
0x6b3 PUSH4 0x2e1a7d4d
0x6b8 DUP4
0x6b9 PUSH1 0x40
0x6bb MLOAD
0x6bc PUSH1 0xe0
0x6be PUSH1 0x2
0x6c0 EXP
0x6c1 PUSH4 0xffffffff
0x6c6 DUP5
0x6c7 AND
0x6c8 MUL
0x6c9 DUP2
0x6ca MSTORE
0x6cb PUSH1 0x4
0x6cd DUP2
0x6ce ADD
0x6cf SWAP2
0x6d0 SWAP1
0x6d1 SWAP2
0x6d2 MSTORE
0x6d3 PUSH1 0x24
0x6d5 ADD
0x6d6 PUSH1 0x0
0x6d8 PUSH1 0x40
0x6da MLOAD
0x6db DUP1
0x6dc DUP4
0x6dd SUB
0x6de DUP2
0x6df PUSH1 0x0
0x6e1 DUP8
0x6e2 DUP1
0x6e3 EXTCODESIZE
0x6e4 ISZERO
0x6e5 ISZERO
0x6e6 PUSH2 0x6ee
0x6e9 JUMPI
---
0x6a4: JUMPDEST 
0x6a6: V643 = 0x1
0x6a8: V644 = S[0x1]
0x6a9: V645 = 0x1
0x6ab: V646 = 0xa0
0x6ad: V647 = 0x2
0x6af: V648 = EXP 0x2 0xa0
0x6b0: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b1: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x6b3: V651 = 0x2e1a7d4d
0x6b9: V652 = 0x40
0x6bb: V653 = M[0x40]
0x6bc: V654 = 0xe0
0x6be: V655 = 0x2
0x6c0: V656 = EXP 0x2 0xe0
0x6c1: V657 = 0xffffffff
0x6c7: V658 = AND 0x2e1a7d4d 0xffffffff
0x6c8: V659 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x6ca: M[V653] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x6cb: V660 = 0x4
0x6ce: V661 = ADD V653 0x4
0x6d2: M[V661] = V210
0x6d3: V662 = 0x24
0x6d5: V663 = ADD 0x24 V653
0x6d6: V664 = 0x0
0x6d8: V665 = 0x40
0x6da: V666 = M[0x40]
0x6dd: V667 = SUB V663 V666
0x6df: V668 = 0x0
0x6e3: V669 = EXTCODESIZE V650
0x6e4: V670 = ISZERO V669
0x6e5: V671 = ISZERO V670
0x6e6: V672 = 0x6ee
0x6e9: JUMPI 0x6ee V671
---
Entry stack: [V12, 0x8f, V210, 0x0]
Stack pops: 2
Stack additions: [S1, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Exit stack: [V12, 0x8f, V210, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]

================================

Block 0x6ea
[0x6ea:0x6ed]
---
Predecessors: [0x6a4]
Successors: []
---
0x6ea PUSH1 0x0
0x6ec DUP1
0x6ed REVERT
---
0x6ea: V673 = 0x0
0x6ed: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V210, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V210, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]

================================

Block 0x6ee
[0x6ee:0x6fa]
---
Predecessors: [0x6a4]
Successors: [0x6fb, 0x6ff]
---
0x6ee JUMPDEST
0x6ef PUSH2 0x2c6
0x6f2 GAS
0x6f3 SUB
0x6f4 CALL
0x6f5 ISZERO
0x6f6 ISZERO
0x6f7 PUSH2 0x6ff
0x6fa JUMPI
---
0x6ee: JUMPDEST 
0x6ef: V674 = 0x2c6
0x6f2: V675 = GAS
0x6f3: V676 = SUB V675 0x2c6
0x6f4: V677 = CALL V676 V650 0x0 V666 V667 V666 0x0
0x6f5: V678 = ISZERO V677
0x6f6: V679 = ISZERO V678
0x6f7: V680 = 0x6ff
0x6fa: JUMPI 0x6ff V679
---
Entry stack: [V12, 0x8f, V210, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8f, V210, V650, V650, 0x2e1a7d4d, V663]

================================

Block 0x6fb
[0x6fb:0x6fe]
---
Predecessors: [0x6ee]
Successors: []
---
0x6fb PUSH1 0x0
0x6fd DUP1
0x6fe REVERT
---
0x6fb: V681 = 0x0
0x6fe: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, V210, V650, V650, 0x2e1a7d4d, V663]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V210, V650, V650, 0x2e1a7d4d, V663]

================================

Block 0x6ff
[0x6ff:0x702]
---
Predecessors: [0x6ee, 0xa31]
Successors: [0x703]
---
0x6ff JUMPDEST
0x700 POP
0x701 POP
0x702 POP
---
0x6ff: JUMPDEST 
---
Entry stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S8, S7, S6, {0x8f, 0x5dd}, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S8, S7, S6, {0x8f, 0x5dd}, S4, S3]

================================

Block 0x703
[0x703:0x703]
---
Predecessors: [0x6ff]
Successors: [0x704]
---
0x703 JUMPDEST
---
0x703: JUMPDEST 
---
Entry stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S5, S4, S3, {0x8f, 0x5dd}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S5, S4, S3, {0x8f, 0x5dd}, S1, S0]

================================

Block 0x704
[0x704:0x707]
---
Predecessors: [0x703]
Successors: [0x8f, 0x5dd]
---
0x704 JUMPDEST
0x705 POP
0x706 POP
0x707 JUMP
---
0x704: JUMPDEST 
0x707: JUMP {0x8f, 0x5dd}
---
Entry stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S5, S4, S3, {0x8f, 0x5dd}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S5, S4, S3]

================================

Block 0x708
[0x708:0x71f]
---
Predecessors: [0x5ba]
Successors: [0x720, 0x724]
---
0x708 JUMPDEST
0x709 PUSH1 0x0
0x70b DUP1
0x70c SLOAD
0x70d CALLER
0x70e PUSH1 0x1
0x710 PUSH1 0xa0
0x712 PUSH1 0x2
0x714 EXP
0x715 SUB
0x716 SWAP1
0x717 DUP2
0x718 AND
0x719 SWAP2
0x71a AND
0x71b EQ
0x71c PUSH2 0x724
0x71f JUMPI
---
0x708: JUMPDEST 
0x709: V682 = 0x0
0x70c: V683 = S[0x0]
0x70d: V684 = CALLER
0x70e: V685 = 0x1
0x710: V686 = 0xa0
0x712: V687 = 0x2
0x714: V688 = EXP 0x2 0xa0
0x715: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x718: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V684
0x71a: V691 = AND V683 0xffffffffffffffffffffffffffffffffffffffff
0x71b: V692 = EQ V691 V690
0x71c: V693 = 0x724
0x71f: JUMPI 0x724 V692
---
Entry stack: [V12, 0x8f, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x5dd, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x8f, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x5dd, S3, S2, S1, S0, 0x0]

================================

Block 0x720
[0x720:0x723]
---
Predecessors: [0x708]
Successors: []
---
0x720 PUSH1 0x0
0x722 DUP1
0x723 REVERT
---
0x720: V694 = 0x0
0x723: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x5dd, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x5dd, S4, S3, S2, S1, 0x0]

================================

Block 0x724
[0x724:0x72f]
---
Predecessors: [0x708]
Successors: [0x730, 0x731]
---
0x724 JUMPDEST
0x725 DUP4
0x726 PUSH1 0x5
0x728 DUP2
0x729 MLOAD
0x72a DUP2
0x72b LT
0x72c PUSH2 0x731
0x72f JUMPI
---
0x724: JUMPDEST 
0x726: V695 = 0x5
0x729: V696 = M[S3]
0x72b: V697 = LT 0x5 V696
0x72c: V698 = 0x731
0x72f: JUMPI 0x731 V697
---
Entry stack: [V12, 0x8f, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x5dd, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x5]
Exit stack: [V12, 0x8f, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x5dd, S4, S3, S2, S1, 0x0, S3, 0x5]

================================

Block 0x730
[0x730:0x730]
---
Predecessors: [0x724]
Successors: []
---
0x730 INVALID
---
0x730: INVALID 
---
Entry stack: [V12, 0x8f, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x5dd, S6, S5, S4, S3, 0x0, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x5dd, S6, S5, S4, S3, 0x0, S1, 0x5]

================================

Block 0x731
[0x731:0x74b]
---
Predecessors: [0x724]
Successors: [0x74c, 0x74d]
---
0x731 JUMPDEST
0x732 SWAP1
0x733 PUSH1 0x20
0x735 ADD
0x736 SWAP1
0x737 PUSH1 0x20
0x739 MUL
0x73a ADD
0x73b MLOAD
0x73c SWAP1
0x73d POP
0x73e PUSH2 0x6ff
0x741 DUP6
0x742 PUSH1 0x0
0x744 DUP2
0x745 MLOAD
0x746 DUP2
0x747 LT
0x748 PUSH2 0x74d
0x74b JUMPI
---
0x731: JUMPDEST 
0x733: V699 = 0x20
0x735: V700 = ADD 0x20 S1
0x737: V701 = 0x20
0x739: V702 = MUL 0x20 0x5
0x73a: V703 = ADD 0xa0 V700
0x73b: V704 = M[V703]
0x73e: V705 = 0x6ff
0x742: V706 = 0x0
0x745: V707 = M[S6]
0x747: V708 = LT 0x0 V707
0x748: V709 = 0x74d
0x74b: JUMPI 0x74d V708
---
Entry stack: [V12, 0x8f, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x5dd, S6, S5, S4, S3, 0x0, S1, 0x5]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V704, 0x6ff, S6, 0x0]
Exit stack: [V12, 0x8f, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x5dd, S6, S5, S4, S3, V704, 0x6ff, S6, 0x0]

================================

Block 0x74c
[0x74c:0x74c]
---
Predecessors: [0x731]
Successors: []
---
0x74c INVALID
---
0x74c: INVALID 
---
Entry stack: [V12, 0x8f, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x5dd, S7, S6, S5, S4, V704, 0x6ff, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x5dd, S7, S6, S5, S4, V704, 0x6ff, S1, 0x0]

================================

Block 0x74d
[0x74d:0x762]
---
Predecessors: [0x731]
Successors: [0x763, 0x764]
---
0x74d JUMPDEST
0x74e SWAP1
0x74f PUSH1 0x20
0x751 ADD
0x752 SWAP1
0x753 PUSH1 0x20
0x755 MUL
0x756 ADD
0x757 MLOAD
0x758 DUP6
0x759 PUSH1 0x0
0x75b DUP2
0x75c MLOAD
0x75d DUP2
0x75e LT
0x75f PUSH2 0x764
0x762 JUMPI
---
0x74d: JUMPDEST 
0x74f: V710 = 0x20
0x751: V711 = ADD 0x20 S1
0x753: V712 = 0x20
0x755: V713 = MUL 0x20 0x0
0x756: V714 = ADD 0x0 V711
0x757: V715 = M[V714]
0x759: V716 = 0x0
0x75c: V717 = M[S6]
0x75e: V718 = LT 0x0 V717
0x75f: V719 = 0x764
0x762: JUMPI 0x764 V718
---
Entry stack: [V12, 0x8f, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x5dd, S7, S6, S5, S4, V704, 0x6ff, S1, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V715, S6, 0x0]
Exit stack: [V12, 0x8f, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x5dd, S7, S6, S5, S4, V704, 0x6ff, V715, S6, 0x0]

================================

Block 0x763
[0x763:0x763]
---
Predecessors: [0x74d]
Successors: []
---
0x763 INVALID
---
0x763: INVALID 
---
Entry stack: [V12, 0x8f, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x5dd, S8, S7, S6, S5, V704, 0x6ff, V715, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x5dd, S8, S7, S6, S5, V704, 0x6ff, V715, S1, 0x0]

================================

Block 0x764
[0x764:0x779]
---
Predecessors: [0x74d]
Successors: [0x77a, 0x77b]
---
0x764 JUMPDEST
0x765 SWAP1
0x766 PUSH1 0x20
0x768 ADD
0x769 SWAP1
0x76a PUSH1 0x20
0x76c MUL
0x76d ADD
0x76e MLOAD
0x76f DUP8
0x770 PUSH1 0x1
0x772 DUP2
0x773 MLOAD
0x774 DUP2
0x775 LT
0x776 PUSH2 0x77b
0x779 JUMPI
---
0x764: JUMPDEST 
0x766: V720 = 0x20
0x768: V721 = ADD 0x20 S1
0x76a: V722 = 0x20
0x76c: V723 = MUL 0x20 0x0
0x76d: V724 = ADD 0x0 V721
0x76e: V725 = M[V724]
0x770: V726 = 0x1
0x773: V727 = M[S8]
0x775: V728 = LT 0x1 V727
0x776: V729 = 0x77b
0x779: JUMPI 0x77b V728
---
Entry stack: [V12, 0x8f, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x5dd, S8, S7, S6, S5, V704, 0x6ff, V715, S1, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V725, S8, 0x1]
Exit stack: [V12, 0x8f, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x5dd, S8, S7, S6, S5, V704, 0x6ff, V715, V725, S8, 0x1]

================================

Block 0x77a
[0x77a:0x77a]
---
Predecessors: [0x764]
Successors: []
---
0x77a INVALID
---
0x77a: INVALID 
---
Entry stack: [V12, 0x8f, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x5dd, S9, S8, S7, S6, V704, 0x6ff, V715, V725, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x5dd, S9, S8, S7, S6, V704, 0x6ff, V715, V725, S1, 0x1]

================================

Block 0x77b
[0x77b:0x790]
---
Predecessors: [0x764]
Successors: [0x791, 0x792]
---
0x77b JUMPDEST
0x77c SWAP1
0x77d PUSH1 0x20
0x77f ADD
0x780 SWAP1
0x781 PUSH1 0x20
0x783 MUL
0x784 ADD
0x785 MLOAD
0x786 DUP8
0x787 PUSH1 0x1
0x789 DUP2
0x78a MLOAD
0x78b DUP2
0x78c LT
0x78d PUSH2 0x792
0x790 JUMPI
---
0x77b: JUMPDEST 
0x77d: V730 = 0x20
0x77f: V731 = ADD 0x20 S1
0x781: V732 = 0x20
0x783: V733 = MUL 0x20 0x1
0x784: V734 = ADD 0x20 V731
0x785: V735 = M[V734]
0x787: V736 = 0x1
0x78a: V737 = M[S8]
0x78c: V738 = LT 0x1 V737
0x78d: V739 = 0x792
0x790: JUMPI 0x792 V738
---
Entry stack: [V12, 0x8f, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x5dd, S9, S8, S7, S6, V704, 0x6ff, V715, V725, S1, 0x1]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V735, S8, 0x1]
Exit stack: [V12, 0x8f, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x5dd, S9, S8, S7, S6, V704, 0x6ff, V715, V725, V735, S8, 0x1]

================================

Block 0x791
[0x791:0x791]
---
Predecessors: [0x77b]
Successors: []
---
0x791 INVALID
---
0x791: INVALID 
---
Entry stack: [V12, 0x8f, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x5dd, S10, S9, S8, S7, V704, 0x6ff, V715, V725, V735, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x5dd, S10, S9, S8, S7, V704, 0x6ff, V715, V725, V735, S1, 0x1]

================================

Block 0x792
[0x792:0x7a7]
---
Predecessors: [0x77b]
Successors: [0x7a8, 0x7a9]
---
0x792 JUMPDEST
0x793 SWAP1
0x794 PUSH1 0x20
0x796 ADD
0x797 SWAP1
0x798 PUSH1 0x20
0x79a MUL
0x79b ADD
0x79c MLOAD
0x79d DUP9
0x79e PUSH1 0x3
0x7a0 DUP2
0x7a1 MLOAD
0x7a2 DUP2
0x7a3 LT
0x7a4 PUSH2 0x7a9
0x7a7 JUMPI
---
0x792: JUMPDEST 
0x794: V740 = 0x20
0x796: V741 = ADD 0x20 S1
0x798: V742 = 0x20
0x79a: V743 = MUL 0x20 0x1
0x79b: V744 = ADD 0x20 V741
0x79c: V745 = M[V744]
0x79e: V746 = 0x3
0x7a1: V747 = M[S9]
0x7a3: V748 = LT 0x3 V747
0x7a4: V749 = 0x7a9
0x7a7: JUMPI 0x7a9 V748
---
Entry stack: [V12, 0x8f, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x5dd, S10, S9, S8, S7, V704, 0x6ff, V715, V725, V735, S1, 0x1]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V745, S9, 0x3]
Exit stack: [V12, 0x8f, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x5dd, S10, S9, S8, S7, V704, 0x6ff, V715, V725, V735, V745, S9, 0x3]

================================

Block 0x7a8
[0x7a8:0x7a8]
---
Predecessors: [0x792]
Successors: []
---
0x7a8 INVALID
---
0x7a8: INVALID 
---
Entry stack: [V12, 0x8f, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x5dd, S11, S10, S9, S8, V704, 0x6ff, V715, V725, V735, V745, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x5dd, S11, S10, S9, S8, V704, 0x6ff, V715, V725, V735, V745, S1, 0x3]

================================

Block 0x7a9
[0x7a9:0x7be]
---
Predecessors: [0x792]
Successors: [0x7bf, 0x7c0]
---
0x7a9 JUMPDEST
0x7aa SWAP1
0x7ab PUSH1 0x20
0x7ad ADD
0x7ae SWAP1
0x7af PUSH1 0x20
0x7b1 MUL
0x7b2 ADD
0x7b3 MLOAD
0x7b4 DUP10
0x7b5 PUSH1 0x4
0x7b7 DUP2
0x7b8 MLOAD
0x7b9 DUP2
0x7ba LT
0x7bb PUSH2 0x7c0
0x7be JUMPI
---
0x7a9: JUMPDEST 
0x7ab: V750 = 0x20
0x7ad: V751 = ADD 0x20 S1
0x7af: V752 = 0x20
0x7b1: V753 = MUL 0x20 0x3
0x7b2: V754 = ADD 0x60 V751
0x7b3: V755 = M[V754]
0x7b5: V756 = 0x4
0x7b8: V757 = M[S10]
0x7ba: V758 = LT 0x4 V757
0x7bb: V759 = 0x7c0
0x7be: JUMPI 0x7c0 V758
---
Entry stack: [V12, 0x8f, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x5dd, S11, S10, S9, S8, V704, 0x6ff, V715, V725, V735, V745, S1, 0x3]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V755, S10, 0x4]
Exit stack: [V12, 0x8f, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x5dd, S11, S10, S9, S8, V704, 0x6ff, V715, V725, V735, V745, V755, S10, 0x4]

================================

Block 0x7bf
[0x7bf:0x7bf]
---
Predecessors: [0x7a9]
Successors: []
---
0x7bf INVALID
---
0x7bf: INVALID 
---
Entry stack: [V12, 0x8f, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x5dd, S12, S11, S10, S9, V704, 0x6ff, V715, V725, V735, V745, V755, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x5dd, S12, S11, S10, S9, V704, 0x6ff, V715, V725, V735, V745, V755, S1, 0x4]

================================

Block 0x7c0
[0x7c0:0x7d5]
---
Predecessors: [0x7a9]
Successors: [0x7d6, 0x7d7]
---
0x7c0 JUMPDEST
0x7c1 SWAP1
0x7c2 PUSH1 0x20
0x7c4 ADD
0x7c5 SWAP1
0x7c6 PUSH1 0x20
0x7c8 MUL
0x7c9 ADD
0x7ca MLOAD
0x7cb DUP12
0x7cc PUSH1 0x2
0x7ce DUP2
0x7cf MLOAD
0x7d0 DUP2
0x7d1 LT
0x7d2 PUSH2 0x7d7
0x7d5 JUMPI
---
0x7c0: JUMPDEST 
0x7c2: V760 = 0x20
0x7c4: V761 = ADD 0x20 S1
0x7c6: V762 = 0x20
0x7c8: V763 = MUL 0x20 0x4
0x7c9: V764 = ADD 0x80 V761
0x7ca: V765 = M[V764]
0x7cc: V766 = 0x2
0x7cf: V767 = M[S12]
0x7d1: V768 = LT 0x2 V767
0x7d2: V769 = 0x7d7
0x7d5: JUMPI 0x7d7 V768
---
Entry stack: [V12, 0x8f, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x5dd, S12, S11, S10, S9, V704, 0x6ff, V715, V725, V735, V745, V755, S1, 0x4]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V765, S12, 0x2]
Exit stack: [V12, 0x8f, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x5dd, S12, S11, S10, S9, V704, 0x6ff, V715, V725, V735, V745, V755, V765, S12, 0x2]

================================

Block 0x7d6
[0x7d6:0x7d6]
---
Predecessors: [0x7c0]
Successors: []
---
0x7d6 INVALID
---
0x7d6: INVALID 
---
Entry stack: [V12, 0x8f, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x5dd, S13, S12, S11, S10, V704, 0x6ff, V715, V725, V735, V745, V755, V765, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x5dd, S13, S12, S11, S10, V704, 0x6ff, V715, V725, V735, V745, V755, V765, S1, 0x2]

================================

Block 0x7d7
[0x7d7:0x7ef]
---
Predecessors: [0x7c0]
Successors: [0x7f0, 0x7f1]
---
0x7d7 JUMPDEST
0x7d8 SWAP1
0x7d9 PUSH1 0x20
0x7db ADD
0x7dc SWAP1
0x7dd PUSH1 0x20
0x7df MUL
0x7e0 ADD
0x7e1 MLOAD
0x7e2 DUP9
0x7e3 DUP12
0x7e4 DUP12
0x7e5 DUP15
0x7e6 PUSH1 0x2
0x7e8 DUP2
0x7e9 MLOAD
0x7ea DUP2
0x7eb LT
0x7ec PUSH2 0x7f1
0x7ef JUMPI
---
0x7d7: JUMPDEST 
0x7d9: V770 = 0x20
0x7db: V771 = ADD 0x20 S1
0x7dd: V772 = 0x20
0x7df: V773 = MUL 0x20 0x2
0x7e0: V774 = ADD 0x40 V771
0x7e1: V775 = M[V774]
0x7e6: V776 = 0x2
0x7e9: V777 = M[S12]
0x7eb: V778 = LT 0x2 V777
0x7ec: V779 = 0x7f1
0x7ef: JUMPI 0x7f1 V778
---
Entry stack: [V12, 0x8f, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x5dd, S13, S12, S11, S10, V704, 0x6ff, V715, V725, V735, V745, V755, V765, S1, 0x2]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V775, S9, S11, S10, S12, 0x2]
Exit stack: [V12, 0x8f, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x5dd, S13, S12, S11, S10, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S11, S10, S12, 0x2]

================================

Block 0x7f0
[0x7f0:0x7f0]
---
Predecessors: [0x7d7]
Successors: []
---
0x7f0 INVALID
---
0x7f0: INVALID 
---
Entry stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, S1, 0x2]

================================

Block 0x7f1
[0x7f1:0x7ff]
---
Predecessors: [0x7d7]
Successors: [0x809]
---
0x7f1 JUMPDEST
0x7f2 SWAP1
0x7f3 PUSH1 0x20
0x7f5 ADD
0x7f6 SWAP1
0x7f7 PUSH1 0x20
0x7f9 MUL
0x7fa ADD
0x7fb MLOAD
0x7fc PUSH2 0x809
0x7ff JUMP
---
0x7f1: JUMPDEST 
0x7f3: V780 = 0x20
0x7f5: V781 = ADD 0x20 S1
0x7f7: V782 = 0x20
0x7f9: V783 = MUL 0x20 0x2
0x7fa: V784 = ADD 0x40 V781
0x7fb: V785 = M[V784]
0x7fc: V786 = 0x809
0x7ff: JUMP 0x809
---
Entry stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, S1, 0x2]
Stack pops: 2
Stack additions: [V785]
Exit stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785]

================================

Block 0x800
[0x800:0x800]
---
Predecessors: []
Successors: [0x801]
---
0x800 JUMPDEST
---
0x800: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x801
[0x801:0x801]
---
Predecessors: [0x800]
Successors: [0x802]
---
0x801 JUMPDEST
---
0x801: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x802
[0x802:0x808]
---
Predecessors: [0x801]
Successors: []
Has unresolved jump.
---
0x802 JUMPDEST
0x803 POP
0x804 POP
0x805 POP
0x806 POP
0x807 POP
0x808 JUMP
---
0x802: JUMPDEST 
0x808: JUMP S5
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x809
[0x809:0x820]
---
Predecessors: [0x7f1]
Successors: [0x821, 0x825]
---
0x809 JUMPDEST
0x80a PUSH1 0x0
0x80c DUP1
0x80d SLOAD
0x80e CALLER
0x80f PUSH1 0x1
0x811 PUSH1 0xa0
0x813 PUSH1 0x2
0x815 EXP
0x816 SUB
0x817 SWAP1
0x818 DUP2
0x819 AND
0x81a SWAP2
0x81b AND
0x81c EQ
0x81d PUSH2 0x825
0x820 JUMPI
---
0x809: JUMPDEST 
0x80a: V787 = 0x0
0x80d: V788 = S[0x0]
0x80e: V789 = CALLER
0x80f: V790 = 0x1
0x811: V791 = 0xa0
0x813: V792 = 0x2
0x815: V793 = EXP 0x2 0xa0
0x816: V794 = SUB 0x10000000000000000000000000000000000000000 0x1
0x819: V795 = AND 0xffffffffffffffffffffffffffffffffffffffff V789
0x81b: V796 = AND V788 0xffffffffffffffffffffffffffffffffffffffff
0x81c: V797 = EQ V796 V795
0x81d: V798 = 0x825
0x820: JUMPI 0x825 V797
---
Entry stack: [V12, 0x8f, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0x5dd, S16, S15, S14, S13, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S2, S1, V785]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x8f, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0x5dd, S16, S15, S14, S13, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S2, S1, V785, 0x0]

================================

Block 0x821
[0x821:0x824]
---
Predecessors: [0x809]
Successors: []
---
0x821 PUSH1 0x0
0x823 DUP1
0x824 REVERT
---
0x821: V799 = 0x0
0x824: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, 0x0]

================================

Block 0x825
[0x825:0x8da]
---
Predecessors: [0x809]
Successors: [0x8db, 0x8df]
---
0x825 JUMPDEST
0x826 POP
0x827 PUSH1 0x1
0x829 SLOAD
0x82a PUSH1 0x1
0x82c PUSH1 0xa0
0x82e PUSH1 0x2
0x830 EXP
0x831 SUB
0x832 AND
0x833 DUP1
0x834 PUSH4 0x6c86888b
0x839 DUP14
0x83a DUP14
0x83b DUP14
0x83c DUP14
0x83d DUP14
0x83e DUP14
0x83f DUP14
0x840 DUP14
0x841 DUP14
0x842 DUP14
0x843 DUP14
0x844 ADDRESS
0x845 PUSH1 0x0
0x847 PUSH1 0x40
0x849 MLOAD
0x84a PUSH1 0x20
0x84c ADD
0x84d MSTORE
0x84e PUSH1 0x40
0x850 MLOAD
0x851 PUSH1 0xe0
0x853 PUSH1 0x2
0x855 EXP
0x856 PUSH4 0xffffffff
0x85b DUP16
0x85c AND
0x85d MUL
0x85e DUP2
0x85f MSTORE
0x860 PUSH1 0x1
0x862 PUSH1 0xa0
0x864 PUSH1 0x2
0x866 EXP
0x867 SUB
0x868 SWAP13
0x869 DUP14
0x86a AND
0x86b PUSH1 0x4
0x86d DUP3
0x86e ADD
0x86f MSTORE
0x870 PUSH1 0x24
0x872 DUP2
0x873 ADD
0x874 SWAP12
0x875 SWAP1
0x876 SWAP12
0x877 MSTORE
0x878 SWAP9
0x879 DUP12
0x87a AND
0x87b PUSH1 0x44
0x87d DUP12
0x87e ADD
0x87f MSTORE
0x880 PUSH1 0x64
0x882 DUP11
0x883 ADD
0x884 SWAP8
0x885 SWAP1
0x886 SWAP8
0x887 MSTORE
0x888 PUSH1 0x84
0x88a DUP10
0x88b ADD
0x88c SWAP6
0x88d SWAP1
0x88e SWAP6
0x88f MSTORE
0x890 PUSH1 0xa4
0x892 DUP9
0x893 ADD
0x894 SWAP4
0x895 SWAP1
0x896 SWAP4
0x897 MSTORE
0x898 SWAP1
0x899 DUP8
0x89a AND
0x89b PUSH1 0xc4
0x89d DUP8
0x89e ADD
0x89f MSTORE
0x8a0 PUSH1 0xff
0x8a2 AND
0x8a3 PUSH1 0xe4
0x8a5 DUP7
0x8a6 ADD
0x8a7 MSTORE
0x8a8 PUSH2 0x104
0x8ab DUP6
0x8ac ADD
0x8ad MSTORE
0x8ae PUSH2 0x124
0x8b1 DUP5
0x8b2 ADD
0x8b3 MSTORE
0x8b4 PUSH2 0x144
0x8b7 DUP4
0x8b8 ADD
0x8b9 MSTORE
0x8ba SWAP1
0x8bb SWAP2
0x8bc AND
0x8bd PUSH2 0x164
0x8c0 DUP3
0x8c1 ADD
0x8c2 MSTORE
0x8c3 PUSH2 0x184
0x8c6 ADD
0x8c7 PUSH1 0x20
0x8c9 PUSH1 0x40
0x8cb MLOAD
0x8cc DUP1
0x8cd DUP4
0x8ce SUB
0x8cf DUP2
0x8d0 PUSH1 0x0
0x8d2 DUP8
0x8d3 DUP1
0x8d4 EXTCODESIZE
0x8d5 ISZERO
0x8d6 ISZERO
0x8d7 PUSH2 0x8df
0x8da JUMPI
---
0x825: JUMPDEST 
0x827: V800 = 0x1
0x829: V801 = S[0x1]
0x82a: V802 = 0x1
0x82c: V803 = 0xa0
0x82e: V804 = 0x2
0x830: V805 = EXP 0x2 0xa0
0x831: V806 = SUB 0x10000000000000000000000000000000000000000 0x1
0x832: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff V801
0x834: V808 = 0x6c86888b
0x844: V809 = ADDRESS
0x845: V810 = 0x0
0x847: V811 = 0x40
0x849: V812 = M[0x40]
0x84a: V813 = 0x20
0x84c: V814 = ADD 0x20 V812
0x84d: M[V814] = 0x0
0x84e: V815 = 0x40
0x850: V816 = M[0x40]
0x851: V817 = 0xe0
0x853: V818 = 0x2
0x855: V819 = EXP 0x2 0xe0
0x856: V820 = 0xffffffff
0x85c: V821 = AND 0x6c86888b 0xffffffff
0x85d: V822 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x85f: M[V816] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x860: V823 = 0x1
0x862: V824 = 0xa0
0x864: V825 = 0x2
0x866: V826 = EXP 0x2 0xa0
0x867: V827 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86a: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0x86b: V829 = 0x4
0x86e: V830 = ADD V816 0x4
0x86f: M[V830] = V828
0x870: V831 = 0x24
0x873: V832 = ADD V816 0x24
0x877: M[V832] = V725
0x87a: V833 = AND 0xffffffffffffffffffffffffffffffffffffffff V735
0x87b: V834 = 0x44
0x87e: V835 = ADD V816 0x44
0x87f: M[V835] = V833
0x880: V836 = 0x64
0x883: V837 = ADD V816 0x64
0x887: M[V837] = V745
0x888: V838 = 0x84
0x88b: V839 = ADD V816 0x84
0x88f: M[V839] = V755
0x890: V840 = 0xa4
0x893: V841 = ADD V816 0xa4
0x897: M[V841] = V765
0x89a: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0x89b: V843 = 0xc4
0x89e: V844 = ADD V816 0xc4
0x89f: M[V844] = V842
0x8a0: V845 = 0xff
0x8a2: V846 = AND 0xff V704
0x8a3: V847 = 0xe4
0x8a6: V848 = ADD V816 0xe4
0x8a7: M[V848] = V846
0x8a8: V849 = 0x104
0x8ac: V850 = ADD V816 0x104
0x8ad: M[V850] = S3
0x8ae: V851 = 0x124
0x8b2: V852 = ADD V816 0x124
0x8b3: M[V852] = S2
0x8b4: V853 = 0x144
0x8b8: V854 = ADD V816 0x144
0x8b9: M[V854] = V785
0x8bc: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V809
0x8bd: V856 = 0x164
0x8c1: V857 = ADD V816 0x164
0x8c2: M[V857] = V855
0x8c3: V858 = 0x184
0x8c6: V859 = ADD 0x184 V816
0x8c7: V860 = 0x20
0x8c9: V861 = 0x40
0x8cb: V862 = M[0x40]
0x8ce: V863 = SUB V859 V862
0x8d0: V864 = 0x0
0x8d4: V865 = EXTCODESIZE V807
0x8d5: V866 = ISZERO V865
0x8d6: V867 = ISZERO V866
0x8d7: V868 = 0x8df
0x8da: JUMPI 0x8df V867
---
Entry stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V807, V807, 0x6c86888b, V859, 0x20, V862, V863, V862, 0x0, V807]
Exit stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, V807, V807, 0x6c86888b, V859, 0x20, V862, V863, V862, 0x0, V807]

================================

Block 0x8db
[0x8db:0x8de]
---
Predecessors: [0x825]
Successors: []
---
0x8db PUSH1 0x0
0x8dd DUP1
0x8de REVERT
---
0x8db: V869 = 0x0
0x8de: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x5dd, S26, S25, S24, S23, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S12, S11, V785, V807, V807, 0x6c86888b, V859, 0x20, V862, V863, V862, 0x0, V807]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x5dd, S26, S25, S24, S23, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S12, S11, V785, V807, V807, 0x6c86888b, V859, 0x20, V862, V863, V862, 0x0, V807]

================================

Block 0x8df
[0x8df:0x8eb]
---
Predecessors: [0x825]
Successors: [0x8ec, 0x8f0]
---
0x8df JUMPDEST
0x8e0 PUSH2 0x2c6
0x8e3 GAS
0x8e4 SUB
0x8e5 CALL
0x8e6 ISZERO
0x8e7 ISZERO
0x8e8 PUSH2 0x8f0
0x8eb JUMPI
---
0x8df: JUMPDEST 
0x8e0: V870 = 0x2c6
0x8e3: V871 = GAS
0x8e4: V872 = SUB V871 0x2c6
0x8e5: V873 = CALL V872 V807 0x0 V862 V863 V862 0x20
0x8e6: V874 = ISZERO V873
0x8e7: V875 = ISZERO V874
0x8e8: V876 = 0x8f0
0x8eb: JUMPI 0x8f0 V875
---
Entry stack: [V12, 0x8f, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x5dd, S26, S25, S24, S23, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S12, S11, V785, V807, V807, 0x6c86888b, V859, 0x20, V862, V863, V862, 0x0, V807]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8f, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x5dd, S26, S25, S24, S23, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S12, S11, V785, V807, V807, 0x6c86888b, V859]

================================

Block 0x8ec
[0x8ec:0x8ef]
---
Predecessors: [0x8df]
Successors: []
---
0x8ec PUSH1 0x0
0x8ee DUP1
0x8ef REVERT
---
0x8ec: V877 = 0x0
0x8ef: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x5dd, S20, S19, S18, S17, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S6, S5, V785, V807, V807, 0x6c86888b, V859]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x5dd, S20, S19, S18, S17, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S6, S5, V785, V807, V807, 0x6c86888b, V859]

================================

Block 0x8f0
[0x8f0:0x8ff]
---
Predecessors: [0x8df]
Successors: [0x900, 0x9fa]
---
0x8f0 JUMPDEST
0x8f1 POP
0x8f2 POP
0x8f3 POP
0x8f4 PUSH1 0x40
0x8f6 MLOAD
0x8f7 DUP1
0x8f8 MLOAD
0x8f9 SWAP1
0x8fa POP
0x8fb ISZERO
0x8fc PUSH2 0x9fa
0x8ff JUMPI
---
0x8f0: JUMPDEST 
0x8f4: V878 = 0x40
0x8f6: V879 = M[0x40]
0x8f8: V880 = M[V879]
0x8fb: V881 = ISZERO V880
0x8fc: V882 = 0x9fa
0x8ff: JUMPI 0x9fa V881
---
Entry stack: [V12, 0x8f, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x5dd, S20, S19, S18, S17, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S6, S5, V785, V807, V807, 0x6c86888b, V859]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x8f, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x5dd, S20, S19, S18, S17, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S6, S5, V785, V807]

================================

Block 0x900
[0x900:0x9dc]
---
Predecessors: [0x8f0]
Successors: [0x9dd, 0x9e1]
---
0x900 PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x921 PUSH1 0x14
0x923 PUSH1 0x40
0x925 MLOAD
0x926 SWAP1
0x927 DUP2
0x928 MSTORE
0x929 PUSH1 0x20
0x92b ADD
0x92c PUSH1 0x40
0x92e MLOAD
0x92f DUP1
0x930 SWAP2
0x931 SUB
0x932 SWAP1
0x933 LOG1
0x934 DUP1
0x935 PUSH1 0x1
0x937 PUSH1 0xa0
0x939 PUSH1 0x2
0x93b EXP
0x93c SUB
0x93d AND
0x93e PUSH4 0xa19b14a
0x943 DUP14
0x944 DUP14
0x945 DUP14
0x946 DUP14
0x947 DUP14
0x948 DUP14
0x949 DUP14
0x94a DUP14
0x94b DUP14
0x94c DUP14
0x94d DUP14
0x94e PUSH1 0x40
0x950 MLOAD
0x951 PUSH1 0xe0
0x953 PUSH1 0x2
0x955 EXP
0x956 PUSH4 0xffffffff
0x95b DUP15
0x95c AND
0x95d MUL
0x95e DUP2
0x95f MSTORE
0x960 PUSH1 0x1
0x962 PUSH1 0xa0
0x964 PUSH1 0x2
0x966 EXP
0x967 SUB
0x968 SWAP12
0x969 DUP13
0x96a AND
0x96b PUSH1 0x4
0x96d DUP3
0x96e ADD
0x96f MSTORE
0x970 PUSH1 0x24
0x972 DUP2
0x973 ADD
0x974 SWAP11
0x975 SWAP1
0x976 SWAP11
0x977 MSTORE
0x978 SWAP8
0x979 DUP11
0x97a AND
0x97b PUSH1 0x44
0x97d DUP11
0x97e ADD
0x97f MSTORE
0x980 PUSH1 0x64
0x982 DUP10
0x983 ADD
0x984 SWAP7
0x985 SWAP1
0x986 SWAP7
0x987 MSTORE
0x988 PUSH1 0x84
0x98a DUP9
0x98b ADD
0x98c SWAP5
0x98d SWAP1
0x98e SWAP5
0x98f MSTORE
0x990 PUSH1 0xa4
0x992 DUP8
0x993 ADD
0x994 SWAP3
0x995 SWAP1
0x996 SWAP3
0x997 MSTORE
0x998 SWAP1
0x999 SWAP6
0x99a AND
0x99b PUSH1 0xc4
0x99d DUP6
0x99e ADD
0x99f MSTORE
0x9a0 PUSH1 0xff
0x9a2 SWAP1
0x9a3 SWAP5
0x9a4 AND
0x9a5 PUSH1 0xe4
0x9a7 DUP5
0x9a8 ADD
0x9a9 MSTORE
0x9aa PUSH2 0x104
0x9ad DUP4
0x9ae ADD
0x9af SWAP4
0x9b0 SWAP1
0x9b1 SWAP4
0x9b2 MSTORE
0x9b3 PUSH2 0x124
0x9b6 DUP3
0x9b7 ADD
0x9b8 SWAP3
0x9b9 SWAP1
0x9ba SWAP3
0x9bb MSTORE
0x9bc PUSH2 0x144
0x9bf DUP2
0x9c0 ADD
0x9c1 SWAP2
0x9c2 SWAP1
0x9c3 SWAP2
0x9c4 MSTORE
0x9c5 PUSH2 0x164
0x9c8 ADD
0x9c9 PUSH1 0x0
0x9cb PUSH1 0x40
0x9cd MLOAD
0x9ce DUP1
0x9cf DUP4
0x9d0 SUB
0x9d1 DUP2
0x9d2 PUSH1 0x0
0x9d4 DUP8
0x9d5 DUP1
0x9d6 EXTCODESIZE
0x9d7 ISZERO
0x9d8 ISZERO
0x9d9 PUSH2 0x9e1
0x9dc JUMPI
---
0x900: V883 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x921: V884 = 0x14
0x923: V885 = 0x40
0x925: V886 = M[0x40]
0x928: M[V886] = 0x14
0x929: V887 = 0x20
0x92b: V888 = ADD 0x20 V886
0x92c: V889 = 0x40
0x92e: V890 = M[0x40]
0x931: V891 = SUB V888 V890
0x933: LOG V890 V891 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x935: V892 = 0x1
0x937: V893 = 0xa0
0x939: V894 = 0x2
0x93b: V895 = EXP 0x2 0xa0
0x93c: V896 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93d: V897 = AND 0xffffffffffffffffffffffffffffffffffffffff V807
0x93e: V898 = 0xa19b14a
0x94e: V899 = 0x40
0x950: V900 = M[0x40]
0x951: V901 = 0xe0
0x953: V902 = 0x2
0x955: V903 = EXP 0x2 0xe0
0x956: V904 = 0xffffffff
0x95c: V905 = AND 0xa19b14a 0xffffffff
0x95d: V906 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x95f: M[V900] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x960: V907 = 0x1
0x962: V908 = 0xa0
0x964: V909 = 0x2
0x966: V910 = EXP 0x2 0xa0
0x967: V911 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96a: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0x96b: V913 = 0x4
0x96e: V914 = ADD V900 0x4
0x96f: M[V914] = V912
0x970: V915 = 0x24
0x973: V916 = ADD V900 0x24
0x977: M[V916] = V725
0x97a: V917 = AND 0xffffffffffffffffffffffffffffffffffffffff V735
0x97b: V918 = 0x44
0x97e: V919 = ADD V900 0x44
0x97f: M[V919] = V917
0x980: V920 = 0x64
0x983: V921 = ADD V900 0x64
0x987: M[V921] = V745
0x988: V922 = 0x84
0x98b: V923 = ADD V900 0x84
0x98f: M[V923] = V755
0x990: V924 = 0xa4
0x993: V925 = ADD V900 0xa4
0x997: M[V925] = V765
0x99a: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0x99b: V927 = 0xc4
0x99e: V928 = ADD V900 0xc4
0x99f: M[V928] = V926
0x9a0: V929 = 0xff
0x9a4: V930 = AND V704 0xff
0x9a5: V931 = 0xe4
0x9a8: V932 = ADD V900 0xe4
0x9a9: M[V932] = V930
0x9aa: V933 = 0x104
0x9ae: V934 = ADD V900 0x104
0x9b2: M[V934] = S3
0x9b3: V935 = 0x124
0x9b7: V936 = ADD V900 0x124
0x9bb: M[V936] = S2
0x9bc: V937 = 0x144
0x9c0: V938 = ADD V900 0x144
0x9c4: M[V938] = V785
0x9c5: V939 = 0x164
0x9c8: V940 = ADD 0x164 V900
0x9c9: V941 = 0x0
0x9cb: V942 = 0x40
0x9cd: V943 = M[0x40]
0x9d0: V944 = SUB V940 V943
0x9d2: V945 = 0x0
0x9d6: V946 = EXTCODESIZE V897
0x9d7: V947 = ISZERO V946
0x9d8: V948 = ISZERO V947
0x9d9: V949 = 0x9e1
0x9dc: JUMPI 0x9e1 V948
---
Entry stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, V807]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V897, 0xa19b14a, V940, 0x0, V943, V944, V943, 0x0, V897]
Exit stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, V807, V897, 0xa19b14a, V940, 0x0, V943, V944, V943, 0x0, V897]

================================

Block 0x9dd
[0x9dd:0x9e0]
---
Predecessors: [0x900]
Successors: []
---
0x9dd PUSH1 0x0
0x9df DUP1
0x9e0 REVERT
---
0x9dd: V950 = 0x0
0x9e0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x5dd, S26, S25, S24, S23, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S12, S11, V785, V807, V897, 0xa19b14a, V940, 0x0, V943, V944, V943, 0x0, V897]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x5dd, S26, S25, S24, S23, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S12, S11, V785, V807, V897, 0xa19b14a, V940, 0x0, V943, V944, V943, 0x0, V897]

================================

Block 0x9e1
[0x9e1:0x9ed]
---
Predecessors: [0x900]
Successors: [0x9ee, 0x9f2]
---
0x9e1 JUMPDEST
0x9e2 PUSH2 0x2c6
0x9e5 GAS
0x9e6 SUB
0x9e7 CALL
0x9e8 ISZERO
0x9e9 ISZERO
0x9ea PUSH2 0x9f2
0x9ed JUMPI
---
0x9e1: JUMPDEST 
0x9e2: V951 = 0x2c6
0x9e5: V952 = GAS
0x9e6: V953 = SUB V952 0x2c6
0x9e7: V954 = CALL V953 V897 0x0 V943 V944 V943 0x0
0x9e8: V955 = ISZERO V954
0x9e9: V956 = ISZERO V955
0x9ea: V957 = 0x9f2
0x9ed: JUMPI 0x9f2 V956
---
Entry stack: [V12, 0x8f, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x5dd, S26, S25, S24, S23, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S12, S11, V785, V807, V897, 0xa19b14a, V940, 0x0, V943, V944, V943, 0x0, V897]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x8f, S41, S40, S39, S38, S37, S36, S35, S34, S33, S32, S31, S30, S29, S28, 0x5dd, S26, S25, S24, S23, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S12, S11, V785, V807, V897, 0xa19b14a, V940]

================================

Block 0x9ee
[0x9ee:0x9f1]
---
Predecessors: [0x9e1]
Successors: []
---
0x9ee PUSH1 0x0
0x9f0 DUP1
0x9f1 REVERT
---
0x9ee: V958 = 0x0
0x9f1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x8f, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x5dd, S20, S19, S18, S17, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S6, S5, V785, V807, V897, 0xa19b14a, V940]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x5dd, S20, S19, S18, S17, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S6, S5, V785, V807, V897, 0xa19b14a, V940]

================================

Block 0x9f2
[0x9f2:0x9f9]
---
Predecessors: [0x9e1]
Successors: [0xa2f]
---
0x9f2 JUMPDEST
0x9f3 POP
0x9f4 POP
0x9f5 POP
0x9f6 PUSH2 0xa2f
0x9f9 JUMP
---
0x9f2: JUMPDEST 
0x9f6: V959 = 0xa2f
0x9f9: JUMP 0xa2f
---
Entry stack: [V12, 0x8f, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x5dd, S20, S19, S18, S17, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S6, S5, V785, V807, V897, 0xa19b14a, V940]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x8f, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, 0x5dd, S20, S19, S18, S17, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S6, S5, V785, V807]

================================

Block 0x9fa
[0x9fa:0xa2e]
---
Predecessors: [0x8f0]
Successors: [0xa2f]
---
0x9fa JUMPDEST
0x9fb PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xa1c PUSH1 0x15
0xa1e PUSH1 0x40
0xa20 MLOAD
0xa21 SWAP1
0xa22 DUP2
0xa23 MSTORE
0xa24 PUSH1 0x20
0xa26 ADD
0xa27 PUSH1 0x40
0xa29 MLOAD
0xa2a DUP1
0xa2b SWAP2
0xa2c SUB
0xa2d SWAP1
0xa2e LOG1
---
0x9fa: JUMPDEST 
0x9fb: V960 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0xa1c: V961 = 0x15
0xa1e: V962 = 0x40
0xa20: V963 = M[0x40]
0xa23: M[V963] = 0x15
0xa24: V964 = 0x20
0xa26: V965 = ADD 0x20 V963
0xa27: V966 = 0x40
0xa29: V967 = M[0x40]
0xa2c: V968 = SUB V965 V967
0xa2e: LOG V967 V968 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
---
Entry stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, V807]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, V807]

================================

Block 0xa2f
[0xa2f:0xa2f]
---
Predecessors: [0x9f2, 0x9fa]
Successors: [0xa30]
---
0xa2f JUMPDEST
---
0xa2f: JUMPDEST 
---
Entry stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, V807]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, V807]

================================

Block 0xa30
[0xa30:0xa30]
---
Predecessors: [0xa2f]
Successors: [0xa31]
---
0xa30 JUMPDEST
---
0xa30: JUMPDEST 
---
Entry stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, V807]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x8f, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x5dd, S17, S16, S15, S14, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, S3, S2, V785, V807]

================================

Block 0xa31
[0xa31:0xa3e]
---
Predecessors: [0xa30]
Successors: [0x6ff]
---
0xa31 JUMPDEST
0xa32 POP
0xa33 POP
0xa34 POP
0xa35 POP
0xa36 POP
0xa37 POP
0xa38 POP
0xa39 POP
0xa3a POP
0xa3b POP
0xa3c POP
0xa3d POP
0xa3e JUMP
---
0xa31: JUMPDEST 
0xa3e: JUMP 0x6ff
---
Entry stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S21, S20, S19, 0x5dd, S17, S16, V158, V160, V704, 0x6ff, V715, V725, V735, V745, V755, V765, V775, V704, V158, V160, V785, V807]
Stack pops: 13
Stack additions: []
Exit stack: [V12, 0x8f, V138, V141, V144, V146, V148, V150, V152, V154, V156, V158, V160, S21, S20, S19, 0x5dd, S17, S16, V158, V160, V704]

================================

Block 0xa3f
[0xa3f:0xa50]
---
Predecessors: [0x40b, 0x413]
Successors: [0x413, 0x41d]
---
0xa3f JUMPDEST
0xa40 PUSH1 0x20
0xa42 PUSH1 0x40
0xa44 MLOAD
0xa45 SWAP1
0xa46 DUP2
0xa47 ADD
0xa48 PUSH1 0x40
0xa4a MSTORE
0xa4b PUSH1 0x0
0xa4d DUP2
0xa4e MSTORE
0xa4f SWAP1
0xa50 JUMP
---
0xa3f: JUMPDEST 
0xa40: V969 = 0x20
0xa42: V970 = 0x40
0xa44: V971 = M[0x40]
0xa47: V972 = ADD V971 0x20
0xa48: V973 = 0x40
0xa4a: M[0x40] = V972
0xa4b: V974 = 0x0
0xa4e: M[V971] = 0x0
0xa50: JUMP {0x413, 0x41d}
---
Entry stack: [V12, 0x8f, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x413, 0x41d}]
Stack pops: 1
Stack additions: [V971]
Exit stack: [V12, 0x8f, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V971]

================================

Block 0xa51
[0xa51:0xa9f]
---
Predecessors: []
Successors: []
---
0xa51 JUMPDEST
0xa52 PUSH1 0x20
0xa54 PUSH1 0x40
0xa56 MLOAD
0xa57 SWAP1
0xa58 DUP2
0xa59 ADD
0xa5a PUSH1 0x40
0xa5c MSTORE
0xa5d PUSH1 0x0
0xa5f DUP2
0xa60 MSTORE
0xa61 SWAP1
0xa62 JUMP
0xa63 STOP
0xa64 LOG1
0xa65 PUSH6 0x627a7a723058
0xa6c SHA3
0xa6d DUP11
0xa6e ADDRESS
0xa6f ADDMOD
0xa70 MISSING 0xb0
0xa71 DUP11
0xa72 SWAP2
0xa73 CALLDATALOAD
0xa74 LOG1
0xa75 BALANCE
0xa76 MISSING 0xc
0xa77 EQ
0xa78 MISSING 0x29
0xa79 MISSING 0xcf
0xa7a MISSING 0x48
0xa7b MISSING 0xbc
0xa7c BALANCE
0xa7d DUP4
0xa7e MULMOD
0xa7f MISSING 0xda
0xa80 MISSING 0x26
0xa81 MISSING 0xb3
0xa82 SWAP16
0xa83 MISSING 0x2c
0xa84 PUSH1 0xbd
0xa86 PUSH25 0xc11b9ad8cee30029
---
0xa51: JUMPDEST 
0xa52: V975 = 0x20
0xa54: V976 = 0x40
0xa56: V977 = M[0x40]
0xa59: V978 = ADD V977 0x20
0xa5a: V979 = 0x40
0xa5c: M[0x40] = V978
0xa5d: V980 = 0x0
0xa60: M[V977] = 0x0
0xa62: JUMP S0
0xa63: STOP 
0xa64: LOG S0 S1 S2
0xa65: V981 = 0x627a7a723058
0xa6c: V982 = SHA3 0x627a7a723058 S3
0xa6e: V983 = ADDRESS
0xa6f: V984 = ADDMOD V983 S13 V982
0xa70: MISSING 0xb0
0xa73: V985 = CALLDATALOAD S1
0xa74: LOG V985 S0 S10
0xa75: V986 = BALANCE S2
0xa76: MISSING 0xc
0xa77: V987 = EQ S0 S1
0xa78: MISSING 0x29
0xa79: MISSING 0xcf
0xa7a: MISSING 0x48
0xa7b: MISSING 0xbc
0xa7c: V988 = BALANCE S0
0xa7e: V989 = MULMOD S3 V988 S1
0xa7f: MISSING 0xda
0xa80: MISSING 0x26
0xa81: MISSING 0xb3
0xa83: MISSING 0x2c
0xa84: V990 = 0xbd
0xa86: V991 = 0xc11b9ad8cee30029
---
Entry stack: []
Stack pops: 2
Stack additions: [V984, S4, S5, S6, S7, S8, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, 0xc11b9ad8cee30029, 0xbd]
Exit stack: []

================================

Function 0:
Public function signature: 0xd8e6e2c
Entry block: 0x91
Exit block: 0xa4
Body: 0x91, 0x98, 0x9c, 0xa4, 0x226, 0x229

Function 1:
Public function signature: 0x2cf2c0af
Entry block: 0xb6
Exit block: 0x8f
Body: 0x8f, 0xb6, 0xbd, 0xc1, 0x22c, 0x244, 0x248, 0x285, 0x289, 0x296, 0x29a, 0x29f, 0x2a0

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0xce
Exit block: 0x8f
Body: 0x8f, 0xce, 0xd5, 0xd9, 0x2a4, 0x2bb, 0x2bf, 0x2ee, 0x2f2, 0x2f3, 0x2f4

Function 3:
Public function signature: 0x43d726d6
Entry block: 0xe6
Exit block: 0x312
Body: 0xe6, 0xed, 0xf1, 0x2f7, 0x30e, 0x312

Function 4:
Public function signature: 0x5c73dcea
Entry block: 0xfb
Exit block: 0x148
Body: 0xfb, 0x102, 0x106, 0x148, 0x323, 0x3da, 0x3de, 0x3eb, 0x3ef, 0x3fb

Function 5:
Public function signature: 0x668b8051
Entry block: 0x15c
Exit block: 0x8f
Body: 0x8f, 0x15c, 0x163, 0x167, 0x40b, 0x413, 0x41d, 0x434, 0x438, 0x445, 0x447, 0x458, 0x468, 0x469, 0x480, 0x481, 0x498, 0x499, 0x4b0, 0x4b1, 0x4c8, 0x4c9, 0x4e0, 0x4e1, 0x4f0, 0x4fa, 0x508, 0x509, 0x51b, 0x51c, 0x528, 0x529, 0x534, 0x53f, 0x54c, 0x54e, 0x55f, 0x56f, 0x570, 0x594, 0x595, 0x5b9, 0x5ba, 0x5dd, 0x5de, 0x5df, 0x6ff, 0x703, 0x704, 0x708, 0x720, 0x724, 0x730, 0x731, 0x74c, 0x74d, 0x763, 0x764, 0x77a, 0x77b, 0x791, 0x792, 0x7a8, 0x7a9, 0x7bf, 0x7c0, 0x7d6, 0x7d7, 0x7f0, 0x7f1, 0x809, 0x821, 0x825, 0x8db, 0x8df, 0x8ec, 0x8f0, 0x900, 0x9dd, 0x9e1, 0x9ee, 0x9f2, 0x9fa, 0xa2f, 0xa30, 0xa31, 0xa3f

Function 6:
Public function signature: 0x70a08231
Entry block: 0x1a4
Exit block: 0xa4
Body: 0xa4, 0x1a4, 0x1ab, 0x1af, 0x5ef, 0x64f, 0x653, 0x660, 0x664, 0x670

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x1d5
Exit block: 0x1e8
Body: 0x1d5, 0x1dc, 0x1e0, 0x1e8, 0x676

Function 8:
Public function signature: 0xd0e30db0
Entry block: 0x204
Exit block: 0x8f
Body: 0x8c, 0x8d, 0x8f, 0x204

Function 9:
Public function signature: 0xf1b83630
Entry block: 0x20e
Exit block: 0x8f
Body: 0x8f, 0x20e, 0x215, 0x219, 0x5dd, 0x5de, 0x5df, 0x688, 0x6a0, 0x6a4, 0x6ea, 0x6ee, 0x6fb, 0x6ff, 0x703, 0x704

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x8f
Body: 0x88, 0x8c, 0x8d, 0x8f

