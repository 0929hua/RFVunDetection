Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x72]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x72
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x72
0xa: JUMPI 0x72 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x76]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2e1a7d4d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x76
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2e1a7d4d
0x20: V14 = EQ V12 0x2e1a7d4d
0x21: V15 = 0x76
0x24: JUMPI 0x76 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x8e]
---
0x25 DUP1
0x26 PUSH4 0x3bf1af13
0x2b EQ
0x2c PUSH2 0x8e
0x2f JUMPI
---
0x26: V16 = 0x3bf1af13
0x2b: V17 = EQ 0x3bf1af13 V12
0x2c: V18 = 0x8e
0x2f: JUMPI 0x8e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xb2]
---
0x30 DUP1
0x31 PUSH4 0x9e281a98
0x36 EQ
0x37 PUSH2 0xb2
0x3a JUMPI
---
0x31: V19 = 0x9e281a98
0x36: V20 = EQ 0x9e281a98 V12
0x37: V21 = 0xb2
0x3a: JUMPI 0xb2 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xd6]
---
0x3b DUP1
0x3c PUSH4 0xa60c1824
0x41 EQ
0x42 PUSH2 0xd6
0x45 JUMPI
---
0x3c: V22 = 0xa60c1824
0x41: V23 = EQ 0xa60c1824 V12
0x42: V24 = 0xd6
0x45: JUMPI 0xd6 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x12c]
---
0x46 DUP1
0x47 PUSH4 0xbf5a7f7a
0x4c EQ
0x4d PUSH2 0x12c
0x50 JUMPI
---
0x47: V25 = 0xbf5a7f7a
0x4c: V26 = EQ 0xbf5a7f7a V12
0x4d: V27 = 0x12c
0x50: JUMPI 0x12c V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x156]
---
0x51 DUP1
0x52 PUSH4 0xf3372898
0x57 EQ
0x58 PUSH2 0x156
0x5b JUMPI
---
0x52: V28 = 0xf3372898
0x57: V29 = EQ 0xf3372898 V12
0x58: V30 = 0x156
0x5b: JUMPI 0x156 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x246]
---
0x5c DUP1
0x5d PUSH4 0xf851a440
0x62 EQ
0x63 PUSH2 0x246
0x66 JUMPI
---
0x5d: V31 = 0xf851a440
0x62: V32 = EQ 0xf851a440 V12
0x63: V33 = 0x246
0x66: JUMPI 0x246 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x275]
---
0x67 DUP1
0x68 PUSH4 0xfa03c225
0x6d EQ
0x6e PUSH2 0x275
0x71 JUMPI
---
0x68: V34 = 0xfa03c225
0x6d: V35 = EQ 0xfa03c225 V12
0x6e: V36 = 0x275
0x71: JUMPI 0x275 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x72]
---
Predecessors: [0x0, 0x67, 0x2fa, 0x388, 0x58f, 0x63d, 0xa7a, 0xb23]
Successors: [0x73]
---
0x72 JUMPDEST
---
0x72: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x73
[0x73:0x73]
---
Predecessors: [0x72]
Successors: [0x74]
---
0x73 JUMPDEST
---
0x73: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x74
[0x74:0x75]
---
Predecessors: [0x73]
Successors: []
---
0x74 JUMPDEST
0x75 STOP
---
0x74: JUMPDEST 
0x75: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76
[0x76:0x7c]
---
Predecessors: [0xb]
Successors: [0x7d, 0x81]
---
0x76 JUMPDEST
0x77 CALLVALUE
0x78 ISZERO
0x79 PUSH2 0x81
0x7c JUMPI
---
0x76: JUMPDEST 
0x77: V37 = CALLVALUE
0x78: V38 = ISZERO V37
0x79: V39 = 0x81
0x7c: JUMPI 0x81 V38
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x76]
Successors: []
---
0x7d PUSH1 0x0
0x7f DUP1
0x80 REVERT
---
0x7d: V40 = 0x0
0x80: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x299]
---
0x81 JUMPDEST
0x82 PUSH2 0x72
0x85 PUSH1 0x4
0x87 CALLDATALOAD
0x88 PUSH2 0x299
0x8b JUMP
---
0x81: JUMPDEST 
0x82: V41 = 0x72
0x85: V42 = 0x4
0x87: V43 = CALLDATALOAD 0x4
0x88: V44 = 0x299
0x8b: JUMP 0x299
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x72, V43]
Exit stack: [V12, 0x72, V43]

================================

Block 0x8c
[0x8c:0x8d]
---
Predecessors: []
Successors: []
---
0x8c JUMPDEST
0x8d STOP
---
0x8c: JUMPDEST 
0x8d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8e
[0x8e:0x94]
---
Predecessors: [0x25]
Successors: [0x95, 0x99]
---
0x8e JUMPDEST
0x8f CALLVALUE
0x90 ISZERO
0x91 PUSH2 0x99
0x94 JUMPI
---
0x8e: JUMPDEST 
0x8f: V45 = CALLVALUE
0x90: V46 = ISZERO V45
0x91: V47 = 0x99
0x94: JUMPI 0x99 V46
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x8e]
Successors: []
---
0x95 PUSH1 0x0
0x97 DUP1
0x98 REVERT
---
0x95: V48 = 0x0
0x98: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x99
[0x99:0xaf]
---
Predecessors: [0x8e]
Successors: [0x2fd]
---
0x99 JUMPDEST
0x9a PUSH2 0x72
0x9d PUSH1 0x1
0x9f PUSH1 0xa0
0xa1 PUSH1 0x2
0xa3 EXP
0xa4 SUB
0xa5 PUSH1 0x4
0xa7 CALLDATALOAD
0xa8 AND
0xa9 PUSH1 0x24
0xab CALLDATALOAD
0xac PUSH2 0x2fd
0xaf JUMP
---
0x99: JUMPDEST 
0x9a: V49 = 0x72
0x9d: V50 = 0x1
0x9f: V51 = 0xa0
0xa1: V52 = 0x2
0xa3: V53 = EXP 0x2 0xa0
0xa4: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5: V55 = 0x4
0xa7: V56 = CALLDATALOAD 0x4
0xa8: V57 = AND V56 0xffffffffffffffffffffffffffffffffffffffff
0xa9: V58 = 0x24
0xab: V59 = CALLDATALOAD 0x24
0xac: V60 = 0x2fd
0xaf: JUMP 0x2fd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x72, V57, V59]
Exit stack: [V12, 0x72, V57, V59]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: []
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb2
[0xb2:0xb8]
---
Predecessors: [0x30]
Successors: [0xb9, 0xbd]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xb2: JUMPDEST 
0xb3: V61 = CALLVALUE
0xb4: V62 = ISZERO V61
0xb5: V63 = 0xbd
0xb8: JUMPI 0xbd V62
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xb2]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V64 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd
[0xbd:0xd3]
---
Predecessors: [0xb2]
Successors: [0x38c]
---
0xbd JUMPDEST
0xbe PUSH2 0x72
0xc1 PUSH1 0x1
0xc3 PUSH1 0xa0
0xc5 PUSH1 0x2
0xc7 EXP
0xc8 SUB
0xc9 PUSH1 0x4
0xcb CALLDATALOAD
0xcc AND
0xcd PUSH1 0x24
0xcf CALLDATALOAD
0xd0 PUSH2 0x38c
0xd3 JUMP
---
0xbd: JUMPDEST 
0xbe: V65 = 0x72
0xc1: V66 = 0x1
0xc3: V67 = 0xa0
0xc5: V68 = 0x2
0xc7: V69 = EXP 0x2 0xa0
0xc8: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc9: V71 = 0x4
0xcb: V72 = CALLDATALOAD 0x4
0xcc: V73 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0xcd: V74 = 0x24
0xcf: V75 = CALLDATALOAD 0x24
0xd0: V76 = 0x38c
0xd3: JUMP 0x38c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x72, V73, V75]
Exit stack: [V12, 0x72, V73, V75]

================================

Block 0xd4
[0xd4:0xd5]
---
Predecessors: []
Successors: []
---
0xd4 JUMPDEST
0xd5 STOP
---
0xd4: JUMPDEST 
0xd5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0x3b]
Successors: [0xdd, 0xe1]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd6: JUMPDEST 
0xd7: V77 = CALLVALUE
0xd8: V78 = ISZERO V77
0xd9: V79 = 0xe1
0xdc: JUMPI 0xe1 V78
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd6]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V80 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe1
[0xe1:0x129]
---
Predecessors: [0xd6]
Successors: [0x444]
---
0xe1 JUMPDEST
0xe2 PUSH2 0x72
0xe5 PUSH1 0x1
0xe7 PUSH1 0xa0
0xe9 PUSH1 0x2
0xeb EXP
0xec SUB
0xed PUSH1 0x4
0xef CALLDATALOAD
0xf0 DUP2
0xf1 AND
0xf2 SWAP1
0xf3 PUSH1 0x24
0xf5 CALLDATALOAD
0xf6 DUP2
0xf7 AND
0xf8 SWAP1
0xf9 PUSH1 0x44
0xfb CALLDATALOAD
0xfc SWAP1
0xfd PUSH1 0x64
0xff CALLDATALOAD
0x100 DUP2
0x101 AND
0x102 SWAP1
0x103 PUSH1 0x84
0x105 CALLDATALOAD
0x106 SWAP1
0x107 PUSH1 0xa4
0x109 CALLDATALOAD
0x10a SWAP1
0x10b PUSH1 0xc4
0x10d CALLDATALOAD
0x10e SWAP1
0x10f PUSH1 0xe4
0x111 CALLDATALOAD
0x112 AND
0x113 PUSH1 0xff
0x115 PUSH2 0x104
0x118 CALLDATALOAD
0x119 AND
0x11a PUSH2 0x124
0x11d CALLDATALOAD
0x11e PUSH2 0x144
0x121 CALLDATALOAD
0x122 PUSH2 0x164
0x125 CALLDATALOAD
0x126 PUSH2 0x444
0x129 JUMP
---
0xe1: JUMPDEST 
0xe2: V81 = 0x72
0xe5: V82 = 0x1
0xe7: V83 = 0xa0
0xe9: V84 = 0x2
0xeb: V85 = EXP 0x2 0xa0
0xec: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed: V87 = 0x4
0xef: V88 = CALLDATALOAD 0x4
0xf1: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0xf3: V90 = 0x24
0xf5: V91 = CALLDATALOAD 0x24
0xf7: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0xf9: V93 = 0x44
0xfb: V94 = CALLDATALOAD 0x44
0xfd: V95 = 0x64
0xff: V96 = CALLDATALOAD 0x64
0x101: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x103: V98 = 0x84
0x105: V99 = CALLDATALOAD 0x84
0x107: V100 = 0xa4
0x109: V101 = CALLDATALOAD 0xa4
0x10b: V102 = 0xc4
0x10d: V103 = CALLDATALOAD 0xc4
0x10f: V104 = 0xe4
0x111: V105 = CALLDATALOAD 0xe4
0x112: V106 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x113: V107 = 0xff
0x115: V108 = 0x104
0x118: V109 = CALLDATALOAD 0x104
0x119: V110 = AND V109 0xff
0x11a: V111 = 0x124
0x11d: V112 = CALLDATALOAD 0x124
0x11e: V113 = 0x144
0x121: V114 = CALLDATALOAD 0x144
0x122: V115 = 0x164
0x125: V116 = CALLDATALOAD 0x164
0x126: V117 = 0x444
0x129: JUMP 0x444
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x72, V89, V92, V94, V97, V99, V101, V103, V106, V110, V112, V114, V116]
Exit stack: [V12, 0x72, V89, V92, V94, V97, V99, V101, V103, V106, V110, V112, V114, V116]

================================

Block 0x12a
[0x12a:0x12b]
---
Predecessors: []
Successors: []
---
0x12a JUMPDEST
0x12b STOP
---
0x12a: JUMPDEST 
0x12b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12c
[0x12c:0x132]
---
Predecessors: [0x46]
Successors: [0x133, 0x137]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e ISZERO
0x12f PUSH2 0x137
0x132 JUMPI
---
0x12c: JUMPDEST 
0x12d: V118 = CALLVALUE
0x12e: V119 = ISZERO V118
0x12f: V120 = 0x137
0x132: JUMPI 0x137 V119
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x133
[0x133:0x136]
---
Predecessors: [0x12c]
Successors: []
---
0x133 PUSH1 0x0
0x135 DUP1
0x136 REVERT
---
0x133: V121 = 0x0
0x136: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x137
[0x137:0x153]
---
Predecessors: [0x12c]
Successors: [0x59d]
---
0x137 JUMPDEST
0x138 PUSH2 0x72
0x13b PUSH1 0x1
0x13d PUSH1 0xa0
0x13f PUSH1 0x2
0x141 EXP
0x142 SUB
0x143 PUSH1 0x4
0x145 CALLDATALOAD
0x146 DUP2
0x147 AND
0x148 SWAP1
0x149 PUSH1 0x24
0x14b CALLDATALOAD
0x14c AND
0x14d PUSH1 0x44
0x14f CALLDATALOAD
0x150 PUSH2 0x59d
0x153 JUMP
---
0x137: JUMPDEST 
0x138: V122 = 0x72
0x13b: V123 = 0x1
0x13d: V124 = 0xa0
0x13f: V125 = 0x2
0x141: V126 = EXP 0x2 0xa0
0x142: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V128 = 0x4
0x145: V129 = CALLDATALOAD 0x4
0x147: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x149: V131 = 0x24
0x14b: V132 = CALLDATALOAD 0x24
0x14c: V133 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V134 = 0x44
0x14f: V135 = CALLDATALOAD 0x44
0x150: V136 = 0x59d
0x153: JUMP 0x59d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x72, V130, V133, V135]
Exit stack: [V12, 0x72, V130, V133, V135]

================================

Block 0x154
[0x154:0x155]
---
Predecessors: []
Successors: []
---
0x154 JUMPDEST
0x155 STOP
---
0x154: JUMPDEST 
0x155: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x156
[0x156:0x15c]
---
Predecessors: [0x51]
Successors: [0x15d, 0x161]
---
0x156 JUMPDEST
0x157 CALLVALUE
0x158 ISZERO
0x159 PUSH2 0x161
0x15c JUMPI
---
0x156: JUMPDEST 
0x157: V137 = CALLVALUE
0x158: V138 = ISZERO V137
0x159: V139 = 0x161
0x15c: JUMPI 0x161 V138
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15d
[0x15d:0x160]
---
Predecessors: [0x156]
Successors: []
---
0x15d PUSH1 0x0
0x15f DUP1
0x160 REVERT
---
0x15d: V140 = 0x0
0x160: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x161
[0x161:0x243]
---
Predecessors: [0x156]
Successors: [0x642]
---
0x161 JUMPDEST
0x162 PUSH2 0x72
0x165 PUSH1 0x4
0x167 DUP1
0x168 CALLDATALOAD
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 AND
0x172 SWAP1
0x173 PUSH1 0x24
0x175 DUP1
0x176 CALLDATALOAD
0x177 PUSH1 0xff
0x179 SWAP1
0x17a DUP2
0x17b AND
0x17c SWAP3
0x17d PUSH1 0x44
0x17f CALLDATALOAD
0x180 SWAP1
0x181 SWAP2
0x182 AND
0x183 SWAP2
0x184 PUSH1 0x84
0x186 SWAP1
0x187 PUSH1 0x64
0x189 CALLDATALOAD
0x18a SWAP1
0x18b DUP2
0x18c ADD
0x18d SWAP1
0x18e DUP4
0x18f ADD
0x190 CALLDATALOAD
0x191 DUP1
0x192 PUSH1 0x20
0x194 DUP1
0x195 DUP3
0x196 MUL
0x197 ADD
0x198 PUSH1 0x40
0x19a MLOAD
0x19b SWAP1
0x19c DUP2
0x19d ADD
0x19e PUSH1 0x40
0x1a0 MSTORE
0x1a1 DUP1
0x1a2 SWAP4
0x1a3 SWAP3
0x1a4 SWAP2
0x1a5 SWAP1
0x1a6 DUP2
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac DUP4
0x1ad DUP4
0x1ae PUSH1 0x20
0x1b0 MUL
0x1b1 DUP1
0x1b2 DUP3
0x1b3 DUP5
0x1b4 CALLDATACOPY
0x1b5 DUP3
0x1b6 ADD
0x1b7 SWAP2
0x1b8 POP
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc POP
0x1bd POP
0x1be SWAP2
0x1bf SWAP1
0x1c0 DUP1
0x1c1 CALLDATALOAD
0x1c2 SWAP1
0x1c3 PUSH1 0x20
0x1c5 ADD
0x1c6 SWAP1
0x1c7 DUP3
0x1c8 ADD
0x1c9 DUP1
0x1ca CALLDATALOAD
0x1cb SWAP1
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf SWAP1
0x1d0 DUP1
0x1d1 DUP1
0x1d2 PUSH1 0x20
0x1d4 MUL
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db SWAP1
0x1dc DUP2
0x1dd ADD
0x1de PUSH1 0x40
0x1e0 MSTORE
0x1e1 DUP1
0x1e2 SWAP4
0x1e3 SWAP3
0x1e4 SWAP2
0x1e5 SWAP1
0x1e6 DUP2
0x1e7 DUP2
0x1e8 MSTORE
0x1e9 PUSH1 0x20
0x1eb ADD
0x1ec DUP4
0x1ed DUP4
0x1ee PUSH1 0x20
0x1f0 MUL
0x1f1 DUP1
0x1f2 DUP3
0x1f3 DUP5
0x1f4 CALLDATACOPY
0x1f5 DUP3
0x1f6 ADD
0x1f7 SWAP2
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc POP
0x1fd POP
0x1fe SWAP2
0x1ff SWAP1
0x200 DUP1
0x201 CALLDATALOAD
0x202 SWAP1
0x203 PUSH1 0x20
0x205 ADD
0x206 SWAP1
0x207 DUP3
0x208 ADD
0x209 DUP1
0x20a CALLDATALOAD
0x20b SWAP1
0x20c PUSH1 0x20
0x20e ADD
0x20f SWAP1
0x210 DUP1
0x211 DUP1
0x212 PUSH1 0x20
0x214 MUL
0x215 PUSH1 0x20
0x217 ADD
0x218 PUSH1 0x40
0x21a MLOAD
0x21b SWAP1
0x21c DUP2
0x21d ADD
0x21e PUSH1 0x40
0x220 MSTORE
0x221 DUP1
0x222 SWAP4
0x223 SWAP3
0x224 SWAP2
0x225 SWAP1
0x226 DUP2
0x227 DUP2
0x228 MSTORE
0x229 PUSH1 0x20
0x22b ADD
0x22c DUP4
0x22d DUP4
0x22e PUSH1 0x20
0x230 MUL
0x231 DUP1
0x232 DUP3
0x233 DUP5
0x234 CALLDATACOPY
0x235 POP
0x236 SWAP5
0x237 SWAP7
0x238 POP
0x239 PUSH2 0x642
0x23c SWAP6
0x23d POP
0x23e POP
0x23f POP
0x240 POP
0x241 POP
0x242 POP
0x243 JUMP
---
0x161: JUMPDEST 
0x162: V141 = 0x72
0x165: V142 = 0x4
0x168: V143 = CALLDATALOAD 0x4
0x169: V144 = 0x1
0x16b: V145 = 0xa0
0x16d: V146 = 0x2
0x16f: V147 = EXP 0x2 0xa0
0x170: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x173: V150 = 0x24
0x176: V151 = CALLDATALOAD 0x24
0x177: V152 = 0xff
0x17b: V153 = AND 0xff V151
0x17d: V154 = 0x44
0x17f: V155 = CALLDATALOAD 0x44
0x182: V156 = AND 0xff V155
0x184: V157 = 0x84
0x187: V158 = 0x64
0x189: V159 = CALLDATALOAD 0x64
0x18c: V160 = ADD V159 0x24
0x18f: V161 = ADD 0x4 V159
0x190: V162 = CALLDATALOAD V161
0x192: V163 = 0x20
0x196: V164 = MUL V162 0x20
0x197: V165 = ADD V164 0x20
0x198: V166 = 0x40
0x19a: V167 = M[0x40]
0x19d: V168 = ADD V167 V165
0x19e: V169 = 0x40
0x1a0: M[0x40] = V168
0x1a8: M[V167] = V162
0x1a9: V170 = 0x20
0x1ab: V171 = ADD 0x20 V167
0x1ae: V172 = 0x20
0x1b0: V173 = MUL 0x20 V162
0x1b4: CALLDATACOPY V171 V160 V173
0x1b6: V174 = ADD V171 V173
0x1c1: V175 = CALLDATALOAD 0x84
0x1c3: V176 = 0x20
0x1c5: V177 = ADD 0x20 0x84
0x1c8: V178 = ADD 0x4 V175
0x1ca: V179 = CALLDATALOAD V178
0x1cc: V180 = 0x20
0x1ce: V181 = ADD 0x20 V178
0x1d2: V182 = 0x20
0x1d4: V183 = MUL 0x20 V179
0x1d5: V184 = 0x20
0x1d7: V185 = ADD 0x20 V183
0x1d8: V186 = 0x40
0x1da: V187 = M[0x40]
0x1dd: V188 = ADD V187 V185
0x1de: V189 = 0x40
0x1e0: M[0x40] = V188
0x1e8: M[V187] = V179
0x1e9: V190 = 0x20
0x1eb: V191 = ADD 0x20 V187
0x1ee: V192 = 0x20
0x1f0: V193 = MUL 0x20 V179
0x1f4: CALLDATACOPY V191 V181 V193
0x1f6: V194 = ADD V191 V193
0x201: V195 = CALLDATALOAD 0xa4
0x203: V196 = 0x20
0x205: V197 = ADD 0x20 0xa4
0x208: V198 = ADD 0x4 V195
0x20a: V199 = CALLDATALOAD V198
0x20c: V200 = 0x20
0x20e: V201 = ADD 0x20 V198
0x212: V202 = 0x20
0x214: V203 = MUL 0x20 V199
0x215: V204 = 0x20
0x217: V205 = ADD 0x20 V203
0x218: V206 = 0x40
0x21a: V207 = M[0x40]
0x21d: V208 = ADD V207 V205
0x21e: V209 = 0x40
0x220: M[0x40] = V208
0x228: M[V207] = V199
0x229: V210 = 0x20
0x22b: V211 = ADD 0x20 V207
0x22e: V212 = 0x20
0x230: V213 = MUL 0x20 V199
0x234: CALLDATACOPY V211 V201 V213
0x239: V214 = 0x642
0x243: JUMP 0x642
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x72, V149, V153, V156, V167, V187, V207]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]

================================

Block 0x244
[0x244:0x245]
---
Predecessors: []
Successors: []
---
0x244 JUMPDEST
0x245 STOP
---
0x244: JUMPDEST 
0x245: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x246
[0x246:0x24c]
---
Predecessors: [0x5c]
Successors: [0x24d, 0x251]
---
0x246 JUMPDEST
0x247 CALLVALUE
0x248 ISZERO
0x249 PUSH2 0x251
0x24c JUMPI
---
0x246: JUMPDEST 
0x247: V215 = CALLVALUE
0x248: V216 = ISZERO V215
0x249: V217 = 0x251
0x24c: JUMPI 0x251 V216
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24d
[0x24d:0x250]
---
Predecessors: [0x246]
Successors: []
---
0x24d PUSH1 0x0
0x24f DUP1
0x250 REVERT
---
0x24d: V218 = 0x0
0x250: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x251
[0x251:0x258]
---
Predecessors: [0x246]
Successors: [0xa82]
---
0x251 JUMPDEST
0x252 PUSH2 0x259
0x255 PUSH2 0xa82
0x258 JUMP
---
0x251: JUMPDEST 
0x252: V219 = 0x259
0x255: V220 = 0xa82
0x258: JUMP 0xa82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x259
[0x259:0x274]
---
Predecessors: [0xa82]
Successors: []
---
0x259 JUMPDEST
0x25a PUSH1 0x40
0x25c MLOAD
0x25d PUSH1 0x1
0x25f PUSH1 0xa0
0x261 PUSH1 0x2
0x263 EXP
0x264 SUB
0x265 SWAP1
0x266 SWAP2
0x267 AND
0x268 DUP2
0x269 MSTORE
0x26a PUSH1 0x20
0x26c ADD
0x26d PUSH1 0x40
0x26f MLOAD
0x270 DUP1
0x271 SWAP2
0x272 SUB
0x273 SWAP1
0x274 RETURN
---
0x259: JUMPDEST 
0x25a: V221 = 0x40
0x25c: V222 = M[0x40]
0x25d: V223 = 0x1
0x25f: V224 = 0xa0
0x261: V225 = 0x2
0x263: V226 = EXP 0x2 0xa0
0x264: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x267: V228 = AND V951 0xffffffffffffffffffffffffffffffffffffffff
0x269: M[V222] = V228
0x26a: V229 = 0x20
0x26c: V230 = ADD 0x20 V222
0x26d: V231 = 0x40
0x26f: V232 = M[0x40]
0x272: V233 = SUB V230 V232
0x274: RETURN V232 V233
---
Entry stack: [V12, 0x259, V951]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x259]

================================

Block 0x275
[0x275:0x27b]
---
Predecessors: [0x67]
Successors: [0x27c, 0x280]
---
0x275 JUMPDEST
0x276 CALLVALUE
0x277 ISZERO
0x278 PUSH2 0x280
0x27b JUMPI
---
0x275: JUMPDEST 
0x276: V234 = CALLVALUE
0x277: V235 = ISZERO V234
0x278: V236 = 0x280
0x27b: JUMPI 0x280 V235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27c
[0x27c:0x27f]
---
Predecessors: [0x275]
Successors: []
---
0x27c PUSH1 0x0
0x27e DUP1
0x27f REVERT
---
0x27c: V237 = 0x0
0x27f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x280
[0x280:0x296]
---
Predecessors: [0x275]
Successors: [0xa91]
---
0x280 JUMPDEST
0x281 PUSH2 0x72
0x284 PUSH1 0x1
0x286 PUSH1 0xa0
0x288 PUSH1 0x2
0x28a EXP
0x28b SUB
0x28c PUSH1 0x4
0x28e CALLDATALOAD
0x28f AND
0x290 PUSH1 0x24
0x292 CALLDATALOAD
0x293 PUSH2 0xa91
0x296 JUMP
---
0x280: JUMPDEST 
0x281: V238 = 0x72
0x284: V239 = 0x1
0x286: V240 = 0xa0
0x288: V241 = 0x2
0x28a: V242 = EXP 0x2 0xa0
0x28b: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28c: V244 = 0x4
0x28e: V245 = CALLDATALOAD 0x4
0x28f: V246 = AND V245 0xffffffffffffffffffffffffffffffffffffffff
0x290: V247 = 0x24
0x292: V248 = CALLDATALOAD 0x24
0x293: V249 = 0xa91
0x296: JUMP 0xa91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x72, V246, V248]
Exit stack: [V12, 0x72, V246, V248]

================================

Block 0x297
[0x297:0x298]
---
Predecessors: []
Successors: []
---
0x297 JUMPDEST
0x298 STOP
---
0x297: JUMPDEST 
0x298: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x299
[0x299:0x2af]
---
Predecessors: [0x81]
Successors: [0x2b0, 0x2b4]
---
0x299 JUMPDEST
0x29a PUSH1 0x0
0x29c SLOAD
0x29d CALLER
0x29e PUSH1 0x1
0x2a0 PUSH1 0xa0
0x2a2 PUSH1 0x2
0x2a4 EXP
0x2a5 SUB
0x2a6 SWAP1
0x2a7 DUP2
0x2a8 AND
0x2a9 SWAP2
0x2aa AND
0x2ab EQ
0x2ac PUSH2 0x2b4
0x2af JUMPI
---
0x299: JUMPDEST 
0x29a: V250 = 0x0
0x29c: V251 = S[0x0]
0x29d: V252 = CALLER
0x29e: V253 = 0x1
0x2a0: V254 = 0xa0
0x2a2: V255 = 0x2
0x2a4: V256 = EXP 0x2 0xa0
0x2a5: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a8: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x2aa: V259 = AND V251 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V260 = EQ V259 V258
0x2ac: V261 = 0x2b4
0x2af: JUMPI 0x2b4 V260
---
Entry stack: [V12, 0x72, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V43]

================================

Block 0x2b0
[0x2b0:0x2b3]
---
Predecessors: [0x299]
Successors: []
---
0x2b0 PUSH1 0x0
0x2b2 DUP1
0x2b3 REVERT
---
0x2b0: V262 = 0x0
0x2b3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V43]

================================

Block 0x2b4
[0x2b4:0x2c6]
---
Predecessors: [0x299]
Successors: [0x2c7, 0x2cb]
---
0x2b4 JUMPDEST
0x2b5 DUP1
0x2b6 ADDRESS
0x2b7 PUSH1 0x1
0x2b9 PUSH1 0xa0
0x2bb PUSH1 0x2
0x2bd EXP
0x2be SUB
0x2bf AND
0x2c0 BALANCE
0x2c1 LT
0x2c2 ISZERO
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x2b4: JUMPDEST 
0x2b6: V263 = ADDRESS
0x2b7: V264 = 0x1
0x2b9: V265 = 0xa0
0x2bb: V266 = 0x2
0x2bd: V267 = EXP 0x2 0xa0
0x2be: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bf: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x2c0: V270 = BALANCE V269
0x2c1: V271 = LT V270 V43
0x2c2: V272 = ISZERO V271
0x2c3: V273 = 0x2cb
0x2c6: JUMPI 0x2cb V272
---
Entry stack: [V12, 0x72, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x72, V43]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x2b4]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V274 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V43]

================================

Block 0x2cb
[0x2cb:0x2f4]
---
Predecessors: [0x2b4]
Successors: [0x2f5, 0x2f9]
---
0x2cb JUMPDEST
0x2cc CALLER
0x2cd PUSH1 0x1
0x2cf PUSH1 0xa0
0x2d1 PUSH1 0x2
0x2d3 EXP
0x2d4 SUB
0x2d5 AND
0x2d6 DUP2
0x2d7 PUSH1 0x40
0x2d9 MLOAD
0x2da PUSH1 0x0
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df DUP1
0x2e0 DUP4
0x2e1 SUB
0x2e2 DUP2
0x2e3 DUP6
0x2e4 DUP8
0x2e5 PUSH2 0x8796
0x2e8 GAS
0x2e9 SUB
0x2ea CALL
0x2eb SWAP3
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef ISZERO
0x2f0 ISZERO
0x2f1 PUSH2 0x2f9
0x2f4 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V275 = CALLER
0x2cd: V276 = 0x1
0x2cf: V277 = 0xa0
0x2d1: V278 = 0x2
0x2d3: V279 = EXP 0x2 0xa0
0x2d4: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d5: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x2d7: V282 = 0x40
0x2d9: V283 = M[0x40]
0x2da: V284 = 0x0
0x2dc: V285 = 0x40
0x2de: V286 = M[0x40]
0x2e1: V287 = SUB V283 V286
0x2e5: V288 = 0x8796
0x2e8: V289 = GAS
0x2e9: V290 = SUB V289 0x8796
0x2ea: V291 = CALL V290 V281 V43 V286 V287 V286 0x0
0x2ef: V292 = ISZERO V291
0x2f0: V293 = ISZERO V292
0x2f1: V294 = 0x2f9
0x2f4: JUMPI 0x2f9 V293
---
Entry stack: [V12, 0x72, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x72, V43]

================================

Block 0x2f5
[0x2f5:0x2f8]
---
Predecessors: [0x2cb]
Successors: []
---
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 REVERT
---
0x2f5: V295 = 0x0
0x2f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V43]

================================

Block 0x2f9
[0x2f9:0x2f9]
---
Predecessors: [0x2cb]
Successors: [0x2fa]
---
0x2f9 JUMPDEST
---
0x2f9: JUMPDEST 
---
Entry stack: [V12, 0x72, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V43]

================================

Block 0x2fa
[0x2fa:0x2fc]
---
Predecessors: [0x2f9]
Successors: [0x72]
---
0x2fa JUMPDEST
0x2fb POP
0x2fc JUMP
---
0x2fa: JUMPDEST 
0x2fc: JUMP 0x72
---
Entry stack: [V12, 0x72, V43]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fd
[0x2fd:0x313]
---
Predecessors: [0x99]
Successors: [0x314, 0x318]
---
0x2fd JUMPDEST
0x2fe PUSH1 0x0
0x300 SLOAD
0x301 CALLER
0x302 PUSH1 0x1
0x304 PUSH1 0xa0
0x306 PUSH1 0x2
0x308 EXP
0x309 SUB
0x30a SWAP1
0x30b DUP2
0x30c AND
0x30d SWAP2
0x30e AND
0x30f EQ
0x310 PUSH2 0x318
0x313 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V296 = 0x0
0x300: V297 = S[0x0]
0x301: V298 = CALLER
0x302: V299 = 0x1
0x304: V300 = 0xa0
0x306: V301 = 0x2
0x308: V302 = EXP 0x2 0xa0
0x309: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30c: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x30e: V305 = AND V297 0xffffffffffffffffffffffffffffffffffffffff
0x30f: V306 = EQ V305 V304
0x310: V307 = 0x318
0x313: JUMPI 0x318 V306
---
Entry stack: [V12, 0x72, V57, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V57, V59]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x2fd]
Successors: []
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
---
0x314: V308 = 0x0
0x317: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V57, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V57, V59]

================================

Block 0x318
[0x318:0x387]
---
Predecessors: [0x2fd]
Successors: [0x388]
---
0x318 JUMPDEST
0x319 DUP2
0x31a PUSH1 0x1
0x31c PUSH1 0xa0
0x31e PUSH1 0x2
0x320 EXP
0x321 SUB
0x322 AND
0x323 DUP2
0x324 PUSH1 0x40
0x326 MLOAD
0x327 PUSH32 0x6465706f73697428290000000000000000000000000000000000000000000000
0x348 DUP2
0x349 MSTORE
0x34a PUSH1 0x9
0x34c ADD
0x34d PUSH1 0x40
0x34f MLOAD
0x350 DUP1
0x351 SWAP2
0x352 SUB
0x353 SWAP1
0x354 SHA3
0x355 PUSH1 0xe0
0x357 PUSH1 0x2
0x359 EXP
0x35a SWAP1
0x35b DIV
0x35c SWAP1
0x35d PUSH1 0x40
0x35f MLOAD
0x360 DUP3
0x361 PUSH4 0xffffffff
0x366 AND
0x367 PUSH1 0xe0
0x369 PUSH1 0x2
0x36b EXP
0x36c MUL
0x36d DUP2
0x36e MSTORE
0x36f PUSH1 0x4
0x371 ADD
0x372 PUSH1 0x0
0x374 PUSH1 0x40
0x376 MLOAD
0x377 DUP1
0x378 DUP4
0x379 SUB
0x37a DUP2
0x37b DUP6
0x37c DUP9
0x37d PUSH2 0x8796
0x380 GAS
0x381 SUB
0x382 CALL
0x383 POP
0x384 POP
0x385 POP
0x386 POP
0x387 POP
---
0x318: JUMPDEST 
0x31a: V309 = 0x1
0x31c: V310 = 0xa0
0x31e: V311 = 0x2
0x320: V312 = EXP 0x2 0xa0
0x321: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x322: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x324: V315 = 0x40
0x326: V316 = M[0x40]
0x327: V317 = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x349: M[V316] = 0x6465706f73697428290000000000000000000000000000000000000000000000
0x34a: V318 = 0x9
0x34c: V319 = ADD 0x9 V316
0x34d: V320 = 0x40
0x34f: V321 = M[0x40]
0x352: V322 = SUB V319 V321
0x354: V323 = SHA3 V321 V322
0x355: V324 = 0xe0
0x357: V325 = 0x2
0x359: V326 = EXP 0x2 0xe0
0x35b: V327 = DIV V323 0x100000000000000000000000000000000000000000000000000000000
0x35d: V328 = 0x40
0x35f: V329 = M[0x40]
0x361: V330 = 0xffffffff
0x366: V331 = AND 0xffffffff V327
0x367: V332 = 0xe0
0x369: V333 = 0x2
0x36b: V334 = EXP 0x2 0xe0
0x36c: V335 = MUL 0x100000000000000000000000000000000000000000000000000000000 V331
0x36e: M[V329] = V335
0x36f: V336 = 0x4
0x371: V337 = ADD 0x4 V329
0x372: V338 = 0x0
0x374: V339 = 0x40
0x376: V340 = M[0x40]
0x379: V341 = SUB V337 V340
0x37d: V342 = 0x8796
0x380: V343 = GAS
0x381: V344 = SUB V343 0x8796
0x382: V345 = CALL V344 V314 V59 V340 V341 V340 0x0
---
Entry stack: [V12, 0x72, V57, V59]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x72, V57, V59]

================================

Block 0x388
[0x388:0x38b]
---
Predecessors: [0x318, 0x42a]
Successors: [0x72]
---
0x388 JUMPDEST
0x389 POP
0x38a POP
0x38b JUMP
---
0x388: JUMPDEST 
0x38b: JUMP 0x72
---
Entry stack: [V12, 0x72, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x38c
[0x38c:0x3a2]
---
Predecessors: [0xbd]
Successors: [0x3a3, 0x3a7]
---
0x38c JUMPDEST
0x38d PUSH1 0x0
0x38f SLOAD
0x390 CALLER
0x391 PUSH1 0x1
0x393 PUSH1 0xa0
0x395 PUSH1 0x2
0x397 EXP
0x398 SUB
0x399 SWAP1
0x39a DUP2
0x39b AND
0x39c SWAP2
0x39d AND
0x39e EQ
0x39f PUSH2 0x3a7
0x3a2 JUMPI
---
0x38c: JUMPDEST 
0x38d: V346 = 0x0
0x38f: V347 = S[0x0]
0x390: V348 = CALLER
0x391: V349 = 0x1
0x393: V350 = 0xa0
0x395: V351 = 0x2
0x397: V352 = EXP 0x2 0xa0
0x398: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39b: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x39d: V355 = AND V347 0xffffffffffffffffffffffffffffffffffffffff
0x39e: V356 = EQ V355 V354
0x39f: V357 = 0x3a7
0x3a2: JUMPI 0x3a7 V356
---
Entry stack: [V12, 0x72, V73, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V73, V75]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x38c]
Successors: []
---
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 REVERT
---
0x3a3: V358 = 0x0
0x3a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V73, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V73, V75]

================================

Block 0x3a7
[0x3a7:0x3b7]
---
Predecessors: [0x38c]
Successors: [0x3b8, 0x3bc]
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x1
0x3aa PUSH1 0xa0
0x3ac PUSH1 0x2
0x3ae EXP
0x3af SUB
0x3b0 DUP3
0x3b1 AND
0x3b2 ISZERO
0x3b3 ISZERO
0x3b4 PUSH2 0x3bc
0x3b7 JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V359 = 0x1
0x3aa: V360 = 0xa0
0x3ac: V361 = 0x2
0x3ae: V362 = EXP 0x2 0xa0
0x3af: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b1: V364 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V365 = ISZERO V364
0x3b3: V366 = ISZERO V365
0x3b4: V367 = 0x3bc
0x3b7: JUMPI 0x3bc V366
---
Entry stack: [V12, 0x72, V73, V75]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x72, V73, V75]

================================

Block 0x3b8
[0x3b8:0x3bb]
---
Predecessors: [0x3a7]
Successors: []
---
0x3b8 PUSH1 0x0
0x3ba DUP1
0x3bb REVERT
---
0x3b8: V368 = 0x0
0x3bb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V73, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V73, V75]

================================

Block 0x3bc
[0x3bc:0x414]
---
Predecessors: [0x3a7]
Successors: [0x415, 0x419]
---
0x3bc JUMPDEST
0x3bd DUP2
0x3be PUSH1 0x1
0x3c0 PUSH1 0xa0
0x3c2 PUSH1 0x2
0x3c4 EXP
0x3c5 SUB
0x3c6 AND
0x3c7 PUSH4 0xa9059cbb
0x3cc CALLER
0x3cd DUP4
0x3ce PUSH1 0x0
0x3d0 PUSH1 0x40
0x3d2 MLOAD
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 MSTORE
0x3d7 PUSH1 0x40
0x3d9 MLOAD
0x3da PUSH1 0xe0
0x3dc PUSH1 0x2
0x3de EXP
0x3df PUSH4 0xffffffff
0x3e4 DUP6
0x3e5 AND
0x3e6 MUL
0x3e7 DUP2
0x3e8 MSTORE
0x3e9 PUSH1 0x1
0x3eb PUSH1 0xa0
0x3ed PUSH1 0x2
0x3ef EXP
0x3f0 SUB
0x3f1 SWAP1
0x3f2 SWAP3
0x3f3 AND
0x3f4 PUSH1 0x4
0x3f6 DUP4
0x3f7 ADD
0x3f8 MSTORE
0x3f9 PUSH1 0x24
0x3fb DUP3
0x3fc ADD
0x3fd MSTORE
0x3fe PUSH1 0x44
0x400 ADD
0x401 PUSH1 0x20
0x403 PUSH1 0x40
0x405 MLOAD
0x406 DUP1
0x407 DUP4
0x408 SUB
0x409 DUP2
0x40a PUSH1 0x0
0x40c DUP8
0x40d DUP1
0x40e EXTCODESIZE
0x40f ISZERO
0x410 ISZERO
0x411 PUSH2 0x419
0x414 JUMPI
---
0x3bc: JUMPDEST 
0x3be: V369 = 0x1
0x3c0: V370 = 0xa0
0x3c2: V371 = 0x2
0x3c4: V372 = EXP 0x2 0xa0
0x3c5: V373 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c6: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x3c7: V375 = 0xa9059cbb
0x3cc: V376 = CALLER
0x3ce: V377 = 0x0
0x3d0: V378 = 0x40
0x3d2: V379 = M[0x40]
0x3d3: V380 = 0x20
0x3d5: V381 = ADD 0x20 V379
0x3d6: M[V381] = 0x0
0x3d7: V382 = 0x40
0x3d9: V383 = M[0x40]
0x3da: V384 = 0xe0
0x3dc: V385 = 0x2
0x3de: V386 = EXP 0x2 0xe0
0x3df: V387 = 0xffffffff
0x3e5: V388 = AND 0xa9059cbb 0xffffffff
0x3e6: V389 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3e8: M[V383] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3e9: V390 = 0x1
0x3eb: V391 = 0xa0
0x3ed: V392 = 0x2
0x3ef: V393 = EXP 0x2 0xa0
0x3f0: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f3: V395 = AND V376 0xffffffffffffffffffffffffffffffffffffffff
0x3f4: V396 = 0x4
0x3f7: V397 = ADD V383 0x4
0x3f8: M[V397] = V395
0x3f9: V398 = 0x24
0x3fc: V399 = ADD V383 0x24
0x3fd: M[V399] = V75
0x3fe: V400 = 0x44
0x400: V401 = ADD 0x44 V383
0x401: V402 = 0x20
0x403: V403 = 0x40
0x405: V404 = M[0x40]
0x408: V405 = SUB V401 V404
0x40a: V406 = 0x0
0x40e: V407 = EXTCODESIZE V374
0x40f: V408 = ISZERO V407
0x410: V409 = ISZERO V408
0x411: V410 = 0x419
0x414: JUMPI 0x419 V409
---
Entry stack: [V12, 0x72, V73, V75]
Stack pops: 2
Stack additions: [S1, S0, V374, 0xa9059cbb, V401, 0x20, V404, V405, V404, 0x0, V374]
Exit stack: [V12, 0x72, V73, V75, V374, 0xa9059cbb, V401, 0x20, V404, V405, V404, 0x0, V374]

================================

Block 0x415
[0x415:0x418]
---
Predecessors: [0x3bc]
Successors: []
---
0x415 PUSH1 0x0
0x417 DUP1
0x418 REVERT
---
0x415: V411 = 0x0
0x418: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V73, V75, V374, 0xa9059cbb, V401, 0x20, V404, V405, V404, 0x0, V374]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V73, V75, V374, 0xa9059cbb, V401, 0x20, V404, V405, V404, 0x0, V374]

================================

Block 0x419
[0x419:0x425]
---
Predecessors: [0x3bc]
Successors: [0x426, 0x42a]
---
0x419 JUMPDEST
0x41a PUSH2 0x2c6
0x41d GAS
0x41e SUB
0x41f CALL
0x420 ISZERO
0x421 ISZERO
0x422 PUSH2 0x42a
0x425 JUMPI
---
0x419: JUMPDEST 
0x41a: V412 = 0x2c6
0x41d: V413 = GAS
0x41e: V414 = SUB V413 0x2c6
0x41f: V415 = CALL V414 V374 0x0 V404 V405 V404 0x20
0x420: V416 = ISZERO V415
0x421: V417 = ISZERO V416
0x422: V418 = 0x42a
0x425: JUMPI 0x42a V417
---
Entry stack: [V12, 0x72, V73, V75, V374, 0xa9059cbb, V401, 0x20, V404, V405, V404, 0x0, V374]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x72, V73, V75, V374, 0xa9059cbb, V401]

================================

Block 0x426
[0x426:0x429]
---
Predecessors: [0x419]
Successors: []
---
0x426 PUSH1 0x0
0x428 DUP1
0x429 REVERT
---
0x426: V419 = 0x0
0x429: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V73, V75, V374, 0xa9059cbb, V401]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V73, V75, V374, 0xa9059cbb, V401]

================================

Block 0x42a
[0x42a:0x43a]
---
Predecessors: [0x419]
Successors: [0x388, 0x43b]
---
0x42a JUMPDEST
0x42b POP
0x42c POP
0x42d POP
0x42e PUSH1 0x40
0x430 MLOAD
0x431 DUP1
0x432 MLOAD
0x433 SWAP1
0x434 POP
0x435 ISZERO
0x436 ISZERO
0x437 PUSH2 0x388
0x43a JUMPI
---
0x42a: JUMPDEST 
0x42e: V420 = 0x40
0x430: V421 = M[0x40]
0x432: V422 = M[V421]
0x435: V423 = ISZERO V422
0x436: V424 = ISZERO V423
0x437: V425 = 0x388
0x43a: JUMPI 0x388 V424
---
Entry stack: [V12, 0x72, V73, V75, V374, 0xa9059cbb, V401]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x72, V73, V75]

================================

Block 0x43b
[0x43b:0x43e]
---
Predecessors: [0x42a]
Successors: []
---
0x43b PUSH1 0x0
0x43d DUP1
0x43e REVERT
---
0x43b: V426 = 0x0
0x43e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V73, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V73, V75]

================================

Block 0x43f
[0x43f:0x43f]
---
Predecessors: []
Successors: [0x440]
---
0x43f JUMPDEST
---
0x43f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x440
[0x440:0x443]
---
Predecessors: [0x43f]
Successors: []
Has unresolved jump.
---
0x440 JUMPDEST
0x441 POP
0x442 POP
0x443 JUMP
---
0x440: JUMPDEST 
0x443: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x444
[0x444:0x45a]
---
Predecessors: [0xe1]
Successors: [0x45b, 0x45f]
---
0x444 JUMPDEST
0x445 PUSH1 0x0
0x447 SLOAD
0x448 CALLER
0x449 PUSH1 0x1
0x44b PUSH1 0xa0
0x44d PUSH1 0x2
0x44f EXP
0x450 SUB
0x451 SWAP1
0x452 DUP2
0x453 AND
0x454 SWAP2
0x455 AND
0x456 EQ
0x457 PUSH2 0x45f
0x45a JUMPI
---
0x444: JUMPDEST 
0x445: V427 = 0x0
0x447: V428 = S[0x0]
0x448: V429 = CALLER
0x449: V430 = 0x1
0x44b: V431 = 0xa0
0x44d: V432 = 0x2
0x44f: V433 = EXP 0x2 0xa0
0x450: V434 = SUB 0x10000000000000000000000000000000000000000 0x1
0x453: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x455: V436 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x456: V437 = EQ V436 V435
0x457: V438 = 0x45f
0x45a: JUMPI 0x45f V437
---
Entry stack: [V12, 0x72, V89, V92, V94, V97, V99, V101, V103, V106, V110, V112, V114, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V89, V92, V94, V97, V99, V101, V103, V106, V110, V112, V114, V116]

================================

Block 0x45b
[0x45b:0x45e]
---
Predecessors: [0x444]
Successors: []
---
0x45b PUSH1 0x0
0x45d DUP1
0x45e REVERT
---
0x45b: V439 = 0x0
0x45e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V89, V92, V94, V97, V99, V101, V103, V106, V110, V112, V114, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V89, V92, V94, V97, V99, V101, V103, V106, V110, V112, V114, V116]

================================

Block 0x45f
[0x45f:0x58e]
---
Predecessors: [0x444]
Successors: [0x58f]
---
0x45f JUMPDEST
0x460 DUP12
0x461 PUSH1 0x1
0x463 PUSH1 0xa0
0x465 PUSH1 0x2
0x467 EXP
0x468 SUB
0x469 AND
0x46a PUSH1 0x40
0x46c MLOAD
0x46d DUP1
0x46e DUP1
0x46f PUSH32 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x490 DUP2
0x491 MSTORE
0x492 PUSH1 0x20
0x494 ADD
0x495 PUSH32 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x4b6 DUP2
0x4b7 MSTORE
0x4b8 PUSH1 0x20
0x4ba ADD
0x4bb PUSH32 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x4dc DUP2
0x4dd MSTORE
0x4de POP
0x4df PUSH1 0x5c
0x4e1 ADD
0x4e2 SWAP1
0x4e3 POP
0x4e4 PUSH1 0x40
0x4e6 MLOAD
0x4e7 DUP1
0x4e8 SWAP2
0x4e9 SUB
0x4ea SWAP1
0x4eb SHA3
0x4ec PUSH1 0xe0
0x4ee PUSH1 0x2
0x4f0 EXP
0x4f1 SWAP1
0x4f2 DIV
0x4f3 DUP13
0x4f4 DUP13
0x4f5 DUP13
0x4f6 DUP13
0x4f7 DUP13
0x4f8 DUP13
0x4f9 DUP13
0x4fa DUP13
0x4fb DUP13
0x4fc DUP13
0x4fd DUP13
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 PUSH1 0xe0
0x503 PUSH1 0x2
0x505 EXP
0x506 PUSH4 0xffffffff
0x50b DUP15
0x50c AND
0x50d MUL
0x50e DUP2
0x50f MSTORE
0x510 PUSH1 0x1
0x512 PUSH1 0xa0
0x514 PUSH1 0x2
0x516 EXP
0x517 SUB
0x518 SWAP12
0x519 DUP13
0x51a AND
0x51b PUSH1 0x4
0x51d DUP3
0x51e ADD
0x51f MSTORE
0x520 PUSH1 0x24
0x522 DUP2
0x523 ADD
0x524 SWAP11
0x525 SWAP1
0x526 SWAP11
0x527 MSTORE
0x528 SWAP8
0x529 DUP11
0x52a AND
0x52b PUSH1 0x44
0x52d DUP11
0x52e ADD
0x52f MSTORE
0x530 PUSH1 0x64
0x532 DUP10
0x533 ADD
0x534 SWAP7
0x535 SWAP1
0x536 SWAP7
0x537 MSTORE
0x538 PUSH1 0x84
0x53a DUP9
0x53b ADD
0x53c SWAP5
0x53d SWAP1
0x53e SWAP5
0x53f MSTORE
0x540 PUSH1 0xa4
0x542 DUP8
0x543 ADD
0x544 SWAP3
0x545 SWAP1
0x546 SWAP3
0x547 MSTORE
0x548 SWAP1
0x549 SWAP6
0x54a AND
0x54b PUSH1 0xc4
0x54d DUP6
0x54e ADD
0x54f MSTORE
0x550 PUSH1 0xff
0x552 SWAP1
0x553 SWAP5
0x554 AND
0x555 PUSH1 0xe4
0x557 DUP5
0x558 ADD
0x559 MSTORE
0x55a PUSH2 0x104
0x55d DUP4
0x55e ADD
0x55f SWAP4
0x560 SWAP1
0x561 SWAP4
0x562 MSTORE
0x563 PUSH2 0x124
0x566 DUP3
0x567 ADD
0x568 SWAP3
0x569 SWAP1
0x56a SWAP3
0x56b MSTORE
0x56c PUSH2 0x144
0x56f DUP2
0x570 ADD
0x571 SWAP2
0x572 SWAP1
0x573 SWAP2
0x574 MSTORE
0x575 PUSH2 0x164
0x578 ADD
0x579 PUSH1 0x0
0x57b PUSH1 0x40
0x57d MLOAD
0x57e DUP1
0x57f DUP4
0x580 SUB
0x581 DUP2
0x582 PUSH1 0x0
0x584 DUP8
0x585 PUSH2 0x646e
0x588 GAS
0x589 SUB
0x58a CALL
0x58b POP
0x58c POP
0x58d POP
0x58e POP
---
0x45f: JUMPDEST 
0x461: V440 = 0x1
0x463: V441 = 0xa0
0x465: V442 = 0x2
0x467: V443 = EXP 0x2 0xa0
0x468: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x469: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x46a: V446 = 0x40
0x46c: V447 = M[0x40]
0x46f: V448 = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x491: M[V447] = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x492: V449 = 0x20
0x494: V450 = ADD 0x20 V447
0x495: V451 = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x4b7: M[V450] = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x4b8: V452 = 0x20
0x4ba: V453 = ADD 0x20 V450
0x4bb: V454 = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x4dd: M[V453] = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x4df: V455 = 0x5c
0x4e1: V456 = ADD 0x5c V447
0x4e4: V457 = 0x40
0x4e6: V458 = M[0x40]
0x4e9: V459 = SUB V456 V458
0x4eb: V460 = SHA3 V458 V459
0x4ec: V461 = 0xe0
0x4ee: V462 = 0x2
0x4f0: V463 = EXP 0x2 0xe0
0x4f2: V464 = DIV V460 0x100000000000000000000000000000000000000000000000000000000
0x4fe: V465 = 0x40
0x500: V466 = M[0x40]
0x501: V467 = 0xe0
0x503: V468 = 0x2
0x505: V469 = EXP 0x2 0xe0
0x506: V470 = 0xffffffff
0x50c: V471 = AND V464 0xffffffff
0x50d: V472 = MUL V471 0x100000000000000000000000000000000000000000000000000000000
0x50f: M[V466] = V472
0x510: V473 = 0x1
0x512: V474 = 0xa0
0x514: V475 = 0x2
0x516: V476 = EXP 0x2 0xa0
0x517: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51a: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x51b: V479 = 0x4
0x51e: V480 = ADD V466 0x4
0x51f: M[V480] = V478
0x520: V481 = 0x24
0x523: V482 = ADD V466 0x24
0x527: M[V482] = V94
0x52a: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x52b: V484 = 0x44
0x52e: V485 = ADD V466 0x44
0x52f: M[V485] = V483
0x530: V486 = 0x64
0x533: V487 = ADD V466 0x64
0x537: M[V487] = V99
0x538: V488 = 0x84
0x53b: V489 = ADD V466 0x84
0x53f: M[V489] = V101
0x540: V490 = 0xa4
0x543: V491 = ADD V466 0xa4
0x547: M[V491] = V103
0x54a: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x54b: V493 = 0xc4
0x54e: V494 = ADD V466 0xc4
0x54f: M[V494] = V492
0x550: V495 = 0xff
0x554: V496 = AND V110 0xff
0x555: V497 = 0xe4
0x558: V498 = ADD V466 0xe4
0x559: M[V498] = V496
0x55a: V499 = 0x104
0x55e: V500 = ADD V466 0x104
0x562: M[V500] = V112
0x563: V501 = 0x124
0x567: V502 = ADD V466 0x124
0x56b: M[V502] = V114
0x56c: V503 = 0x144
0x570: V504 = ADD V466 0x144
0x574: M[V504] = V116
0x575: V505 = 0x164
0x578: V506 = ADD 0x164 V466
0x579: V507 = 0x0
0x57b: V508 = 0x40
0x57d: V509 = M[0x40]
0x580: V510 = SUB V506 V509
0x582: V511 = 0x0
0x585: V512 = 0x646e
0x588: V513 = GAS
0x589: V514 = SUB V513 0x646e
0x58a: V515 = CALL V514 V445 0x0 V509 V510 V509 0x0
---
Entry stack: [V12, 0x72, V89, V92, V94, V97, V99, V101, V103, V106, V110, V112, V114, V116]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x72, V89, V92, V94, V97, V99, V101, V103, V106, V110, V112, V114, V116]

================================

Block 0x58f
[0x58f:0x59c]
---
Predecessors: [0x45f]
Successors: [0x72]
---
0x58f JUMPDEST
0x590 POP
0x591 POP
0x592 POP
0x593 POP
0x594 POP
0x595 POP
0x596 POP
0x597 POP
0x598 POP
0x599 POP
0x59a POP
0x59b POP
0x59c JUMP
---
0x58f: JUMPDEST 
0x59c: JUMP 0x72
---
Entry stack: [V12, 0x72, V89, V92, V94, V97, V99, V101, V103, V106, V110, V112, V114, V116]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0x59d
[0x59d:0x5b3]
---
Predecessors: [0x137]
Successors: [0x5b4, 0x5b8]
---
0x59d JUMPDEST
0x59e PUSH1 0x0
0x5a0 SLOAD
0x5a1 CALLER
0x5a2 PUSH1 0x1
0x5a4 PUSH1 0xa0
0x5a6 PUSH1 0x2
0x5a8 EXP
0x5a9 SUB
0x5aa SWAP1
0x5ab DUP2
0x5ac AND
0x5ad SWAP2
0x5ae AND
0x5af EQ
0x5b0 PUSH2 0x5b8
0x5b3 JUMPI
---
0x59d: JUMPDEST 
0x59e: V516 = 0x0
0x5a0: V517 = S[0x0]
0x5a1: V518 = CALLER
0x5a2: V519 = 0x1
0x5a4: V520 = 0xa0
0x5a6: V521 = 0x2
0x5a8: V522 = EXP 0x2 0xa0
0x5a9: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ac: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x5ae: V525 = AND V517 0xffffffffffffffffffffffffffffffffffffffff
0x5af: V526 = EQ V525 V524
0x5b0: V527 = 0x5b8
0x5b3: JUMPI 0x5b8 V526
---
Entry stack: [V12, 0x72, V130, V133, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V130, V133, V135]

================================

Block 0x5b4
[0x5b4:0x5b7]
---
Predecessors: [0x59d]
Successors: []
---
0x5b4 PUSH1 0x0
0x5b6 DUP1
0x5b7 REVERT
---
0x5b4: V528 = 0x0
0x5b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V130, V133, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V130, V133, V135]

================================

Block 0x5b8
[0x5b8:0x63c]
---
Predecessors: [0x59d]
Successors: [0x63d]
---
0x5b8 JUMPDEST
0x5b9 DUP3
0x5ba PUSH1 0x1
0x5bc PUSH1 0xa0
0x5be PUSH1 0x2
0x5c0 EXP
0x5c1 SUB
0x5c2 AND
0x5c3 PUSH1 0x40
0x5c5 MLOAD
0x5c6 PUSH32 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0x5e7 DUP2
0x5e8 MSTORE
0x5e9 PUSH1 0x1e
0x5eb ADD
0x5ec PUSH1 0x40
0x5ee MLOAD
0x5ef DUP1
0x5f0 SWAP2
0x5f1 SUB
0x5f2 SWAP1
0x5f3 SHA3
0x5f4 PUSH1 0xe0
0x5f6 PUSH1 0x2
0x5f8 EXP
0x5f9 SWAP1
0x5fa DIV
0x5fb DUP4
0x5fc DUP4
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 PUSH1 0xe0
0x602 PUSH1 0x2
0x604 EXP
0x605 PUSH4 0xffffffff
0x60a DUP6
0x60b AND
0x60c MUL
0x60d DUP2
0x60e MSTORE
0x60f PUSH1 0x1
0x611 PUSH1 0xa0
0x613 PUSH1 0x2
0x615 EXP
0x616 SUB
0x617 SWAP1
0x618 SWAP3
0x619 AND
0x61a PUSH1 0x4
0x61c DUP4
0x61d ADD
0x61e MSTORE
0x61f PUSH1 0x24
0x621 DUP3
0x622 ADD
0x623 MSTORE
0x624 PUSH1 0x44
0x626 ADD
0x627 PUSH1 0x0
0x629 PUSH1 0x40
0x62b MLOAD
0x62c DUP1
0x62d DUP4
0x62e SUB
0x62f DUP2
0x630 PUSH1 0x0
0x632 DUP8
0x633 PUSH2 0x646e
0x636 GAS
0x637 SUB
0x638 CALL
0x639 POP
0x63a POP
0x63b POP
0x63c POP
---
0x5b8: JUMPDEST 
0x5ba: V529 = 0x1
0x5bc: V530 = 0xa0
0x5be: V531 = 0x2
0x5c0: V532 = EXP 0x2 0xa0
0x5c1: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c2: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x5c3: V535 = 0x40
0x5c5: V536 = M[0x40]
0x5c6: V537 = 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0x5e8: M[V536] = 0x7769746864726177546f6b656e28616464726573732c75696e74323536290000
0x5e9: V538 = 0x1e
0x5eb: V539 = ADD 0x1e V536
0x5ec: V540 = 0x40
0x5ee: V541 = M[0x40]
0x5f1: V542 = SUB V539 V541
0x5f3: V543 = SHA3 V541 V542
0x5f4: V544 = 0xe0
0x5f6: V545 = 0x2
0x5f8: V546 = EXP 0x2 0xe0
0x5fa: V547 = DIV V543 0x100000000000000000000000000000000000000000000000000000000
0x5fd: V548 = 0x40
0x5ff: V549 = M[0x40]
0x600: V550 = 0xe0
0x602: V551 = 0x2
0x604: V552 = EXP 0x2 0xe0
0x605: V553 = 0xffffffff
0x60b: V554 = AND V547 0xffffffff
0x60c: V555 = MUL V554 0x100000000000000000000000000000000000000000000000000000000
0x60e: M[V549] = V555
0x60f: V556 = 0x1
0x611: V557 = 0xa0
0x613: V558 = 0x2
0x615: V559 = EXP 0x2 0xa0
0x616: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x619: V561 = AND V133 0xffffffffffffffffffffffffffffffffffffffff
0x61a: V562 = 0x4
0x61d: V563 = ADD V549 0x4
0x61e: M[V563] = V561
0x61f: V564 = 0x24
0x622: V565 = ADD V549 0x24
0x623: M[V565] = V135
0x624: V566 = 0x44
0x626: V567 = ADD 0x44 V549
0x627: V568 = 0x0
0x629: V569 = 0x40
0x62b: V570 = M[0x40]
0x62e: V571 = SUB V567 V570
0x630: V572 = 0x0
0x633: V573 = 0x646e
0x636: V574 = GAS
0x637: V575 = SUB V574 0x646e
0x638: V576 = CALL V575 V534 0x0 V570 V571 V570 0x0
---
Entry stack: [V12, 0x72, V130, V133, V135]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x72, V130, V133, V135]

================================

Block 0x63d
[0x63d:0x641]
---
Predecessors: [0x5b8]
Successors: [0x72]
---
0x63d JUMPDEST
0x63e POP
0x63f POP
0x640 POP
0x641 JUMP
---
0x63d: JUMPDEST 
0x641: JUMP 0x72
---
Entry stack: [V12, 0x72, V130, V133, V135]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x642
[0x642:0x658]
---
Predecessors: [0x161]
Successors: [0x659, 0x65d]
---
0x642 JUMPDEST
0x643 PUSH1 0x0
0x645 SLOAD
0x646 CALLER
0x647 PUSH1 0x1
0x649 PUSH1 0xa0
0x64b PUSH1 0x2
0x64d EXP
0x64e SUB
0x64f SWAP1
0x650 DUP2
0x651 AND
0x652 SWAP2
0x653 AND
0x654 EQ
0x655 PUSH2 0x65d
0x658 JUMPI
---
0x642: JUMPDEST 
0x643: V577 = 0x0
0x645: V578 = S[0x0]
0x646: V579 = CALLER
0x647: V580 = 0x1
0x649: V581 = 0xa0
0x64b: V582 = 0x2
0x64d: V583 = EXP 0x2 0xa0
0x64e: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x651: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x653: V586 = AND V578 0xffffffffffffffffffffffffffffffffffffffff
0x654: V587 = EQ V586 V585
0x655: V588 = 0x65d
0x658: JUMPI 0x65d V587
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]

================================

Block 0x659
[0x659:0x65c]
---
Predecessors: [0x642]
Successors: []
---
0x659 PUSH1 0x0
0x65b DUP1
0x65c REVERT
---
0x659: V589 = 0x0
0x65c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]

================================

Block 0x65d
[0x65d:0x6fb]
---
Predecessors: [0x642]
Successors: [0x6fc, 0x6fd]
---
0x65d JUMPDEST
0x65e DUP6
0x65f PUSH1 0x1
0x661 PUSH1 0xa0
0x663 PUSH1 0x2
0x665 EXP
0x666 SUB
0x667 AND
0x668 PUSH1 0x40
0x66a MLOAD
0x66b DUP1
0x66c DUP1
0x66d PUSH32 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x68e DUP2
0x68f MSTORE
0x690 PUSH1 0x20
0x692 ADD
0x693 PUSH32 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x6b4 DUP2
0x6b5 MSTORE
0x6b6 PUSH1 0x20
0x6b8 ADD
0x6b9 PUSH32 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x6da DUP2
0x6db MSTORE
0x6dc POP
0x6dd PUSH1 0x5c
0x6df ADD
0x6e0 SWAP1
0x6e1 POP
0x6e2 PUSH1 0x40
0x6e4 MLOAD
0x6e5 DUP1
0x6e6 SWAP2
0x6e7 SUB
0x6e8 SWAP1
0x6e9 SHA3
0x6ea PUSH1 0xe0
0x6ec PUSH1 0x2
0x6ee EXP
0x6ef SWAP1
0x6f0 DIV
0x6f1 DUP4
0x6f2 PUSH1 0x0
0x6f4 DUP2
0x6f5 MLOAD
0x6f6 DUP2
0x6f7 LT
0x6f8 PUSH2 0x6fd
0x6fb JUMPI
---
0x65d: JUMPDEST 
0x65f: V590 = 0x1
0x661: V591 = 0xa0
0x663: V592 = 0x2
0x665: V593 = EXP 0x2 0xa0
0x666: V594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x667: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x668: V596 = 0x40
0x66a: V597 = M[0x40]
0x66d: V598 = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x68f: M[V597] = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x690: V599 = 0x20
0x692: V600 = ADD 0x20 V597
0x693: V601 = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x6b5: M[V600] = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x6b6: V602 = 0x20
0x6b8: V603 = ADD 0x20 V600
0x6b9: V604 = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x6db: M[V603] = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x6dd: V605 = 0x5c
0x6df: V606 = ADD 0x5c V597
0x6e2: V607 = 0x40
0x6e4: V608 = M[0x40]
0x6e7: V609 = SUB V606 V608
0x6e9: V610 = SHA3 V608 V609
0x6ea: V611 = 0xe0
0x6ec: V612 = 0x2
0x6ee: V613 = EXP 0x2 0xe0
0x6f0: V614 = DIV V610 0x100000000000000000000000000000000000000000000000000000000
0x6f2: V615 = 0x0
0x6f5: V616 = M[V187]
0x6f7: V617 = LT 0x0 V616
0x6f8: V618 = 0x6fd
0x6fb: JUMPI 0x6fd V617
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V595, V614, S1, 0x0]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V187, 0x0]

================================

Block 0x6fc
[0x6fc:0x6fc]
---
Predecessors: [0x65d]
Successors: []
---
0x6fc INVALID
---
0x6fc: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V187, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V187, 0x0]

================================

Block 0x6fd
[0x6fd:0x712]
---
Predecessors: [0x65d]
Successors: [0x713, 0x714]
---
0x6fd JUMPDEST
0x6fe SWAP1
0x6ff PUSH1 0x20
0x701 ADD
0x702 SWAP1
0x703 PUSH1 0x20
0x705 MUL
0x706 ADD
0x707 MLOAD
0x708 DUP6
0x709 PUSH1 0x0
0x70b DUP2
0x70c MLOAD
0x70d DUP2
0x70e LT
0x70f PUSH2 0x714
0x712 JUMPI
---
0x6fd: JUMPDEST 
0x6ff: V619 = 0x20
0x701: V620 = ADD 0x20 V187
0x703: V621 = 0x20
0x705: V622 = MUL 0x20 0x0
0x706: V623 = ADD 0x0 V620
0x707: V624 = M[V623]
0x709: V625 = 0x0
0x70c: V626 = M[V167]
0x70e: V627 = LT 0x0 V626
0x70f: V628 = 0x714
0x712: JUMPI 0x714 V627
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V187, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V624, S6, 0x0]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V167, 0x0]

================================

Block 0x713
[0x713:0x713]
---
Predecessors: [0x6fd]
Successors: []
---
0x713 INVALID
---
0x713: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V167, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V167, 0x0]

================================

Block 0x714
[0x714:0x729]
---
Predecessors: [0x6fd]
Successors: [0x72a, 0x72b]
---
0x714 JUMPDEST
0x715 SWAP1
0x716 PUSH1 0x20
0x718 ADD
0x719 SWAP1
0x71a PUSH1 0x20
0x71c MUL
0x71d ADD
0x71e MLOAD
0x71f DUP6
0x720 PUSH1 0x2
0x722 DUP2
0x723 MLOAD
0x724 DUP2
0x725 LT
0x726 PUSH2 0x72b
0x729 JUMPI
---
0x714: JUMPDEST 
0x716: V629 = 0x20
0x718: V630 = ADD 0x20 V167
0x71a: V631 = 0x20
0x71c: V632 = MUL 0x20 0x0
0x71d: V633 = ADD 0x0 V630
0x71e: V634 = M[V633]
0x720: V635 = 0x2
0x723: V636 = M[V187]
0x725: V637 = LT 0x2 V636
0x726: V638 = 0x72b
0x729: JUMPI 0x72b V637
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V167, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V634, S6, 0x2]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V187, 0x2]

================================

Block 0x72a
[0x72a:0x72a]
---
Predecessors: [0x714]
Successors: []
---
0x72a INVALID
---
0x72a: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V187, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V187, 0x2]

================================

Block 0x72b
[0x72b:0x740]
---
Predecessors: [0x714]
Successors: [0x741, 0x742]
---
0x72b JUMPDEST
0x72c SWAP1
0x72d PUSH1 0x20
0x72f ADD
0x730 SWAP1
0x731 PUSH1 0x20
0x733 MUL
0x734 ADD
0x735 MLOAD
0x736 DUP8
0x737 PUSH1 0x2
0x739 DUP2
0x73a MLOAD
0x73b DUP2
0x73c LT
0x73d PUSH2 0x742
0x740 JUMPI
---
0x72b: JUMPDEST 
0x72d: V639 = 0x20
0x72f: V640 = ADD 0x20 V187
0x731: V641 = 0x20
0x733: V642 = MUL 0x20 0x2
0x734: V643 = ADD 0x40 V640
0x735: V644 = M[V643]
0x737: V645 = 0x2
0x73a: V646 = M[V167]
0x73c: V647 = LT 0x2 V646
0x73d: V648 = 0x742
0x740: JUMPI 0x742 V647
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V187, 0x2]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V644, S8, 0x2]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V167, 0x2]

================================

Block 0x741
[0x741:0x741]
---
Predecessors: [0x72b]
Successors: []
---
0x741 INVALID
---
0x741: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V167, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V167, 0x2]

================================

Block 0x742
[0x742:0x757]
---
Predecessors: [0x72b]
Successors: [0x758, 0x759]
---
0x742 JUMPDEST
0x743 SWAP1
0x744 PUSH1 0x20
0x746 ADD
0x747 SWAP1
0x748 PUSH1 0x20
0x74a MUL
0x74b ADD
0x74c MLOAD
0x74d DUP9
0x74e PUSH1 0x4
0x750 DUP2
0x751 MLOAD
0x752 DUP2
0x753 LT
0x754 PUSH2 0x759
0x757 JUMPI
---
0x742: JUMPDEST 
0x744: V649 = 0x20
0x746: V650 = ADD 0x20 V167
0x748: V651 = 0x20
0x74a: V652 = MUL 0x20 0x2
0x74b: V653 = ADD 0x40 V650
0x74c: V654 = M[V653]
0x74e: V655 = 0x4
0x751: V656 = M[V167]
0x753: V657 = LT 0x4 V656
0x754: V658 = 0x759
0x757: JUMPI 0x759 V657
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V167, 0x2]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V654, S9, 0x4]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V167, 0x4]

================================

Block 0x758
[0x758:0x758]
---
Predecessors: [0x742]
Successors: []
---
0x758 INVALID
---
0x758: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V167, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V167, 0x4]

================================

Block 0x759
[0x759:0x76e]
---
Predecessors: [0x742]
Successors: [0x76f, 0x770]
---
0x759 JUMPDEST
0x75a SWAP1
0x75b PUSH1 0x20
0x75d ADD
0x75e SWAP1
0x75f PUSH1 0x20
0x761 MUL
0x762 ADD
0x763 MLOAD
0x764 DUP10
0x765 PUSH1 0x6
0x767 DUP2
0x768 MLOAD
0x769 DUP2
0x76a LT
0x76b PUSH2 0x770
0x76e JUMPI
---
0x759: JUMPDEST 
0x75b: V659 = 0x20
0x75d: V660 = ADD 0x20 V167
0x75f: V661 = 0x20
0x761: V662 = MUL 0x20 0x4
0x762: V663 = ADD 0x80 V660
0x763: V664 = M[V663]
0x765: V665 = 0x6
0x768: V666 = M[V167]
0x76a: V667 = LT 0x6 V666
0x76b: V668 = 0x770
0x76e: JUMPI 0x770 V667
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V167, 0x4]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V664, S10, 0x6]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V167, 0x6]

================================

Block 0x76f
[0x76f:0x76f]
---
Predecessors: [0x759]
Successors: []
---
0x76f INVALID
---
0x76f: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V167, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V167, 0x6]

================================

Block 0x770
[0x770:0x785]
---
Predecessors: [0x759]
Successors: [0x786, 0x787]
---
0x770 JUMPDEST
0x771 SWAP1
0x772 PUSH1 0x20
0x774 ADD
0x775 SWAP1
0x776 PUSH1 0x20
0x778 MUL
0x779 ADD
0x77a MLOAD
0x77b DUP10
0x77c PUSH1 0x4
0x77e DUP2
0x77f MLOAD
0x780 DUP2
0x781 LT
0x782 PUSH2 0x787
0x785 JUMPI
---
0x770: JUMPDEST 
0x772: V669 = 0x20
0x774: V670 = ADD 0x20 V167
0x776: V671 = 0x20
0x778: V672 = MUL 0x20 0x6
0x779: V673 = ADD 0xc0 V670
0x77a: V674 = M[V673]
0x77c: V675 = 0x4
0x77f: V676 = M[V187]
0x781: V677 = LT 0x4 V676
0x782: V678 = 0x787
0x785: JUMPI 0x787 V677
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V167, 0x6]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V674, S10, 0x4]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V187, 0x4]

================================

Block 0x786
[0x786:0x786]
---
Predecessors: [0x770]
Successors: []
---
0x786 INVALID
---
0x786: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V187, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V187, 0x4]

================================

Block 0x787
[0x787:0x79d]
---
Predecessors: [0x770]
Successors: [0x79e, 0x79f]
---
0x787 JUMPDEST
0x788 SWAP1
0x789 PUSH1 0x20
0x78b ADD
0x78c SWAP1
0x78d PUSH1 0x20
0x78f MUL
0x790 ADD
0x791 MLOAD
0x792 DUP14
0x793 DUP11
0x794 PUSH1 0x0
0x796 DUP2
0x797 MLOAD
0x798 DUP2
0x799 LT
0x79a PUSH2 0x79f
0x79d JUMPI
---
0x787: JUMPDEST 
0x789: V679 = 0x20
0x78b: V680 = ADD 0x20 V187
0x78d: V681 = 0x20
0x78f: V682 = MUL 0x20 0x4
0x790: V683 = ADD 0x80 V680
0x791: V684 = M[V683]
0x794: V685 = 0x0
0x797: V686 = M[V207]
0x799: V687 = LT 0x0 V686
0x79a: V688 = 0x79f
0x79d: JUMPI 0x79f V687
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V187, 0x4]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V684, S14, S10, 0x0]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V207, 0x0]

================================

Block 0x79e
[0x79e:0x79e]
---
Predecessors: [0x787]
Successors: []
---
0x79e INVALID
---
0x79e: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V207, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V207, 0x0]

================================

Block 0x79f
[0x79f:0x7b4]
---
Predecessors: [0x787]
Successors: [0x7b5, 0x7b6]
---
0x79f JUMPDEST
0x7a0 SWAP1
0x7a1 PUSH1 0x20
0x7a3 ADD
0x7a4 SWAP1
0x7a5 PUSH1 0x20
0x7a7 MUL
0x7a8 ADD
0x7a9 MLOAD
0x7aa DUP12
0x7ab PUSH1 0x2
0x7ad DUP2
0x7ae MLOAD
0x7af DUP2
0x7b0 LT
0x7b1 PUSH2 0x7b6
0x7b4 JUMPI
---
0x79f: JUMPDEST 
0x7a1: V689 = 0x20
0x7a3: V690 = ADD 0x20 V207
0x7a5: V691 = 0x20
0x7a7: V692 = MUL 0x20 0x0
0x7a8: V693 = ADD 0x0 V690
0x7a9: V694 = M[V693]
0x7ab: V695 = 0x2
0x7ae: V696 = M[V207]
0x7b0: V697 = LT 0x2 V696
0x7b1: V698 = 0x7b6
0x7b4: JUMPI 0x7b6 V697
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V207, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V694, S12, 0x2]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V694, V207, 0x2]

================================

Block 0x7b5
[0x7b5:0x7b5]
---
Predecessors: [0x79f]
Successors: []
---
0x7b5 INVALID
---
0x7b5: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V694, V207, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V694, V207, 0x2]

================================

Block 0x7b6
[0x7b6:0x7cb]
---
Predecessors: [0x79f]
Successors: [0x7cc, 0x7cd]
---
0x7b6 JUMPDEST
0x7b7 SWAP1
0x7b8 PUSH1 0x20
0x7ba ADD
0x7bb SWAP1
0x7bc PUSH1 0x20
0x7be MUL
0x7bf ADD
0x7c0 MLOAD
0x7c1 DUP15
0x7c2 PUSH1 0x8
0x7c4 DUP2
0x7c5 MLOAD
0x7c6 DUP2
0x7c7 LT
0x7c8 PUSH2 0x7cd
0x7cb JUMPI
---
0x7b6: JUMPDEST 
0x7b8: V699 = 0x20
0x7ba: V700 = ADD 0x20 V207
0x7bc: V701 = 0x20
0x7be: V702 = MUL 0x20 0x2
0x7bf: V703 = ADD 0x40 V700
0x7c0: V704 = M[V703]
0x7c2: V705 = 0x8
0x7c5: V706 = M[V167]
0x7c7: V707 = LT 0x8 V706
0x7c8: V708 = 0x7cd
0x7cb: JUMPI 0x7cd V707
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V694, V207, 0x2]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V704, S15, 0x8]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V694, V704, V167, 0x8]

================================

Block 0x7cc
[0x7cc:0x7cc]
---
Predecessors: [0x7b6]
Successors: []
---
0x7cc INVALID
---
0x7cc: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V694, V704, V167, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V694, V704, V167, 0x8]

================================

Block 0x7cd
[0x7cd:0x86d]
---
Predecessors: [0x7b6]
Successors: [0x86e, 0xa79]
---
0x7cd JUMPDEST
0x7ce SWAP1
0x7cf PUSH1 0x20
0x7d1 ADD
0x7d2 SWAP1
0x7d3 PUSH1 0x20
0x7d5 MUL
0x7d6 ADD
0x7d7 MLOAD
0x7d8 PUSH1 0x40
0x7da MLOAD
0x7db PUSH1 0xe0
0x7dd PUSH1 0x2
0x7df EXP
0x7e0 PUSH4 0xffffffff
0x7e5 DUP15
0x7e6 AND
0x7e7 MUL
0x7e8 DUP2
0x7e9 MSTORE
0x7ea PUSH1 0x1
0x7ec PUSH1 0xa0
0x7ee PUSH1 0x2
0x7f0 EXP
0x7f1 SUB
0x7f2 SWAP12
0x7f3 DUP13
0x7f4 AND
0x7f5 PUSH1 0x4
0x7f7 DUP3
0x7f8 ADD
0x7f9 MSTORE
0x7fa PUSH1 0x24
0x7fc DUP2
0x7fd ADD
0x7fe SWAP11
0x7ff SWAP1
0x800 SWAP11
0x801 MSTORE
0x802 SWAP8
0x803 DUP11
0x804 AND
0x805 PUSH1 0x44
0x807 DUP11
0x808 ADD
0x809 MSTORE
0x80a PUSH1 0x64
0x80c DUP10
0x80d ADD
0x80e SWAP7
0x80f SWAP1
0x810 SWAP7
0x811 MSTORE
0x812 PUSH1 0x84
0x814 DUP9
0x815 ADD
0x816 SWAP5
0x817 SWAP1
0x818 SWAP5
0x819 MSTORE
0x81a PUSH1 0xa4
0x81c DUP8
0x81d ADD
0x81e SWAP3
0x81f SWAP1
0x820 SWAP3
0x821 MSTORE
0x822 SWAP1
0x823 SWAP6
0x824 AND
0x825 PUSH1 0xc4
0x827 DUP6
0x828 ADD
0x829 MSTORE
0x82a PUSH1 0xff
0x82c SWAP1
0x82d SWAP5
0x82e AND
0x82f PUSH1 0xe4
0x831 DUP5
0x832 ADD
0x833 MSTORE
0x834 PUSH2 0x104
0x837 DUP4
0x838 ADD
0x839 SWAP4
0x83a SWAP1
0x83b SWAP4
0x83c MSTORE
0x83d PUSH2 0x124
0x840 DUP3
0x841 ADD
0x842 SWAP3
0x843 SWAP1
0x844 SWAP3
0x845 MSTORE
0x846 PUSH2 0x144
0x849 DUP2
0x84a ADD
0x84b SWAP2
0x84c SWAP1
0x84d SWAP2
0x84e MSTORE
0x84f PUSH2 0x164
0x852 ADD
0x853 PUSH1 0x0
0x855 PUSH1 0x40
0x857 MLOAD
0x858 DUP1
0x859 DUP4
0x85a SUB
0x85b DUP2
0x85c PUSH1 0x0
0x85e DUP8
0x85f PUSH2 0x646e
0x862 GAS
0x863 SUB
0x864 CALL
0x865 SWAP3
0x866 POP
0x867 POP
0x868 POP
0x869 ISZERO
0x86a PUSH2 0xa79
0x86d JUMPI
---
0x7cd: JUMPDEST 
0x7cf: V709 = 0x20
0x7d1: V710 = ADD 0x20 V167
0x7d3: V711 = 0x20
0x7d5: V712 = MUL 0x20 0x8
0x7d6: V713 = ADD 0x100 V710
0x7d7: V714 = M[V713]
0x7d8: V715 = 0x40
0x7da: V716 = M[0x40]
0x7db: V717 = 0xe0
0x7dd: V718 = 0x2
0x7df: V719 = EXP 0x2 0xe0
0x7e0: V720 = 0xffffffff
0x7e6: V721 = AND V614 0xffffffff
0x7e7: V722 = MUL V721 0x100000000000000000000000000000000000000000000000000000000
0x7e9: M[V716] = V722
0x7ea: V723 = 0x1
0x7ec: V724 = 0xa0
0x7ee: V725 = 0x2
0x7f0: V726 = EXP 0x2 0xa0
0x7f1: V727 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f4: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0x7f5: V729 = 0x4
0x7f8: V730 = ADD V716 0x4
0x7f9: M[V730] = V728
0x7fa: V731 = 0x24
0x7fd: V732 = ADD V716 0x24
0x801: M[V732] = V634
0x804: V733 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x805: V734 = 0x44
0x808: V735 = ADD V716 0x44
0x809: M[V735] = V733
0x80a: V736 = 0x64
0x80d: V737 = ADD V716 0x64
0x811: M[V737] = V654
0x812: V738 = 0x84
0x815: V739 = ADD V716 0x84
0x819: M[V739] = V664
0x81a: V740 = 0xa4
0x81d: V741 = ADD V716 0xa4
0x821: M[V741] = V674
0x824: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V684
0x825: V743 = 0xc4
0x828: V744 = ADD V716 0xc4
0x829: M[V744] = V742
0x82a: V745 = 0xff
0x82e: V746 = AND V153 0xff
0x82f: V747 = 0xe4
0x832: V748 = ADD V716 0xe4
0x833: M[V748] = V746
0x834: V749 = 0x104
0x838: V750 = ADD V716 0x104
0x83c: M[V750] = V694
0x83d: V751 = 0x124
0x841: V752 = ADD V716 0x124
0x845: M[V752] = V704
0x846: V753 = 0x144
0x84a: V754 = ADD V716 0x144
0x84e: M[V754] = V714
0x84f: V755 = 0x164
0x852: V756 = ADD 0x164 V716
0x853: V757 = 0x0
0x855: V758 = 0x40
0x857: V759 = M[0x40]
0x85a: V760 = SUB V756 V759
0x85c: V761 = 0x0
0x85f: V762 = 0x646e
0x862: V763 = GAS
0x863: V764 = SUB V763 0x646e
0x864: V765 = CALL V764 V595 0x0 V759 V760 V759 0x0
0x869: V766 = ISZERO V765
0x86a: V767 = 0xa79
0x86d: JUMPI 0xa79 V766
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V595, V614, V624, V634, V644, V654, V664, V674, V684, V153, V694, V704, V167, 0x8]
Stack pops: 14
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]

================================

Block 0x86e
[0x86e:0x90b]
---
Predecessors: [0x7cd]
Successors: [0x90c, 0x90d]
---
0x86e DUP6
0x86f PUSH1 0x1
0x871 PUSH1 0xa0
0x873 PUSH1 0x2
0x875 EXP
0x876 SUB
0x877 AND
0x878 PUSH1 0x40
0x87a MLOAD
0x87b DUP1
0x87c DUP1
0x87d PUSH32 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x89e DUP2
0x89f MSTORE
0x8a0 PUSH1 0x20
0x8a2 ADD
0x8a3 PUSH32 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x8c4 DUP2
0x8c5 MSTORE
0x8c6 PUSH1 0x20
0x8c8 ADD
0x8c9 PUSH32 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x8ea DUP2
0x8eb MSTORE
0x8ec POP
0x8ed PUSH1 0x5c
0x8ef ADD
0x8f0 SWAP1
0x8f1 POP
0x8f2 PUSH1 0x40
0x8f4 MLOAD
0x8f5 DUP1
0x8f6 SWAP2
0x8f7 SUB
0x8f8 SWAP1
0x8f9 SHA3
0x8fa PUSH1 0xe0
0x8fc PUSH1 0x2
0x8fe EXP
0x8ff SWAP1
0x900 DIV
0x901 DUP4
0x902 PUSH1 0x1
0x904 DUP2
0x905 MLOAD
0x906 DUP2
0x907 LT
0x908 PUSH2 0x90d
0x90b JUMPI
---
0x86f: V768 = 0x1
0x871: V769 = 0xa0
0x873: V770 = 0x2
0x875: V771 = EXP 0x2 0xa0
0x876: V772 = SUB 0x10000000000000000000000000000000000000000 0x1
0x877: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x878: V774 = 0x40
0x87a: V775 = M[0x40]
0x87d: V776 = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x89f: M[V775] = 0x747261646528616464726573732c75696e743235362c616464726573732c7569
0x8a0: V777 = 0x20
0x8a2: V778 = ADD 0x20 V775
0x8a3: V779 = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x8c5: M[V778] = 0x6e743235362c75696e743235362c75696e743235362c616464726573732c7569
0x8c6: V780 = 0x20
0x8c8: V781 = ADD 0x20 V778
0x8c9: V782 = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x8eb: M[V781] = 0x6e74382c627974657333322c627974657333322c75696e743235362900000000
0x8ed: V783 = 0x5c
0x8ef: V784 = ADD 0x5c V775
0x8f2: V785 = 0x40
0x8f4: V786 = M[0x40]
0x8f7: V787 = SUB V784 V786
0x8f9: V788 = SHA3 V786 V787
0x8fa: V789 = 0xe0
0x8fc: V790 = 0x2
0x8fe: V791 = EXP 0x2 0xe0
0x900: V792 = DIV V788 0x100000000000000000000000000000000000000000000000000000000
0x902: V793 = 0x1
0x905: V794 = M[V187]
0x907: V795 = LT 0x1 V794
0x908: V796 = 0x90d
0x90b: JUMPI 0x90d V795
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V773, V792, S1, 0x1]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V187, 0x1]

================================

Block 0x90c
[0x90c:0x90c]
---
Predecessors: [0x86e]
Successors: []
---
0x90c INVALID
---
0x90c: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V187, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V187, 0x1]

================================

Block 0x90d
[0x90d:0x922]
---
Predecessors: [0x86e]
Successors: [0x923, 0x924]
---
0x90d JUMPDEST
0x90e SWAP1
0x90f PUSH1 0x20
0x911 ADD
0x912 SWAP1
0x913 PUSH1 0x20
0x915 MUL
0x916 ADD
0x917 MLOAD
0x918 DUP6
0x919 PUSH1 0x1
0x91b DUP2
0x91c MLOAD
0x91d DUP2
0x91e LT
0x91f PUSH2 0x924
0x922 JUMPI
---
0x90d: JUMPDEST 
0x90f: V797 = 0x20
0x911: V798 = ADD 0x20 V187
0x913: V799 = 0x20
0x915: V800 = MUL 0x20 0x1
0x916: V801 = ADD 0x20 V798
0x917: V802 = M[V801]
0x919: V803 = 0x1
0x91c: V804 = M[V167]
0x91e: V805 = LT 0x1 V804
0x91f: V806 = 0x924
0x922: JUMPI 0x924 V805
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V187, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V802, S6, 0x1]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V167, 0x1]

================================

Block 0x923
[0x923:0x923]
---
Predecessors: [0x90d]
Successors: []
---
0x923 INVALID
---
0x923: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V167, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V167, 0x1]

================================

Block 0x924
[0x924:0x939]
---
Predecessors: [0x90d]
Successors: [0x93a, 0x93b]
---
0x924 JUMPDEST
0x925 SWAP1
0x926 PUSH1 0x20
0x928 ADD
0x929 SWAP1
0x92a PUSH1 0x20
0x92c MUL
0x92d ADD
0x92e MLOAD
0x92f DUP6
0x930 PUSH1 0x3
0x932 DUP2
0x933 MLOAD
0x934 DUP2
0x935 LT
0x936 PUSH2 0x93b
0x939 JUMPI
---
0x924: JUMPDEST 
0x926: V807 = 0x20
0x928: V808 = ADD 0x20 V167
0x92a: V809 = 0x20
0x92c: V810 = MUL 0x20 0x1
0x92d: V811 = ADD 0x20 V808
0x92e: V812 = M[V811]
0x930: V813 = 0x3
0x933: V814 = M[V187]
0x935: V815 = LT 0x3 V814
0x936: V816 = 0x93b
0x939: JUMPI 0x93b V815
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V167, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V812, S6, 0x3]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V187, 0x3]

================================

Block 0x93a
[0x93a:0x93a]
---
Predecessors: [0x924]
Successors: []
---
0x93a INVALID
---
0x93a: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V187, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V187, 0x3]

================================

Block 0x93b
[0x93b:0x950]
---
Predecessors: [0x924]
Successors: [0x951, 0x952]
---
0x93b JUMPDEST
0x93c SWAP1
0x93d PUSH1 0x20
0x93f ADD
0x940 SWAP1
0x941 PUSH1 0x20
0x943 MUL
0x944 ADD
0x945 MLOAD
0x946 DUP8
0x947 PUSH1 0x3
0x949 DUP2
0x94a MLOAD
0x94b DUP2
0x94c LT
0x94d PUSH2 0x952
0x950 JUMPI
---
0x93b: JUMPDEST 
0x93d: V817 = 0x20
0x93f: V818 = ADD 0x20 V187
0x941: V819 = 0x20
0x943: V820 = MUL 0x20 0x3
0x944: V821 = ADD 0x60 V818
0x945: V822 = M[V821]
0x947: V823 = 0x3
0x94a: V824 = M[V167]
0x94c: V825 = LT 0x3 V824
0x94d: V826 = 0x952
0x950: JUMPI 0x952 V825
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V187, 0x3]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V822, S8, 0x3]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V167, 0x3]

================================

Block 0x951
[0x951:0x951]
---
Predecessors: [0x93b]
Successors: []
---
0x951 INVALID
---
0x951: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V167, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V167, 0x3]

================================

Block 0x952
[0x952:0x967]
---
Predecessors: [0x93b]
Successors: [0x968, 0x969]
---
0x952 JUMPDEST
0x953 SWAP1
0x954 PUSH1 0x20
0x956 ADD
0x957 SWAP1
0x958 PUSH1 0x20
0x95a MUL
0x95b ADD
0x95c MLOAD
0x95d DUP9
0x95e PUSH1 0x5
0x960 DUP2
0x961 MLOAD
0x962 DUP2
0x963 LT
0x964 PUSH2 0x969
0x967 JUMPI
---
0x952: JUMPDEST 
0x954: V827 = 0x20
0x956: V828 = ADD 0x20 V167
0x958: V829 = 0x20
0x95a: V830 = MUL 0x20 0x3
0x95b: V831 = ADD 0x60 V828
0x95c: V832 = M[V831]
0x95e: V833 = 0x5
0x961: V834 = M[V167]
0x963: V835 = LT 0x5 V834
0x964: V836 = 0x969
0x967: JUMPI 0x969 V835
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V167, 0x3]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V832, S9, 0x5]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V167, 0x5]

================================

Block 0x968
[0x968:0x968]
---
Predecessors: [0x952]
Successors: []
---
0x968 INVALID
---
0x968: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V167, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V167, 0x5]

================================

Block 0x969
[0x969:0x97e]
---
Predecessors: [0x952]
Successors: [0x97f, 0x980]
---
0x969 JUMPDEST
0x96a SWAP1
0x96b PUSH1 0x20
0x96d ADD
0x96e SWAP1
0x96f PUSH1 0x20
0x971 MUL
0x972 ADD
0x973 MLOAD
0x974 DUP10
0x975 PUSH1 0x7
0x977 DUP2
0x978 MLOAD
0x979 DUP2
0x97a LT
0x97b PUSH2 0x980
0x97e JUMPI
---
0x969: JUMPDEST 
0x96b: V837 = 0x20
0x96d: V838 = ADD 0x20 V167
0x96f: V839 = 0x20
0x971: V840 = MUL 0x20 0x5
0x972: V841 = ADD 0xa0 V838
0x973: V842 = M[V841]
0x975: V843 = 0x7
0x978: V844 = M[V167]
0x97a: V845 = LT 0x7 V844
0x97b: V846 = 0x980
0x97e: JUMPI 0x980 V845
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V167, 0x5]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V842, S10, 0x7]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V167, 0x7]

================================

Block 0x97f
[0x97f:0x97f]
---
Predecessors: [0x969]
Successors: []
---
0x97f INVALID
---
0x97f: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V167, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V167, 0x7]

================================

Block 0x980
[0x980:0x995]
---
Predecessors: [0x969]
Successors: [0x996, 0x997]
---
0x980 JUMPDEST
0x981 SWAP1
0x982 PUSH1 0x20
0x984 ADD
0x985 SWAP1
0x986 PUSH1 0x20
0x988 MUL
0x989 ADD
0x98a MLOAD
0x98b DUP10
0x98c PUSH1 0x5
0x98e DUP2
0x98f MLOAD
0x990 DUP2
0x991 LT
0x992 PUSH2 0x997
0x995 JUMPI
---
0x980: JUMPDEST 
0x982: V847 = 0x20
0x984: V848 = ADD 0x20 V167
0x986: V849 = 0x20
0x988: V850 = MUL 0x20 0x7
0x989: V851 = ADD 0xe0 V848
0x98a: V852 = M[V851]
0x98c: V853 = 0x5
0x98f: V854 = M[V187]
0x991: V855 = LT 0x5 V854
0x992: V856 = 0x997
0x995: JUMPI 0x997 V855
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V167, 0x7]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V852, S10, 0x5]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V187, 0x5]

================================

Block 0x996
[0x996:0x996]
---
Predecessors: [0x980]
Successors: []
---
0x996 INVALID
---
0x996: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V187, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V187, 0x5]

================================

Block 0x997
[0x997:0x9ad]
---
Predecessors: [0x980]
Successors: [0x9ae, 0x9af]
---
0x997 JUMPDEST
0x998 SWAP1
0x999 PUSH1 0x20
0x99b ADD
0x99c SWAP1
0x99d PUSH1 0x20
0x99f MUL
0x9a0 ADD
0x9a1 MLOAD
0x9a2 DUP13
0x9a3 DUP11
0x9a4 PUSH1 0x1
0x9a6 DUP2
0x9a7 MLOAD
0x9a8 DUP2
0x9a9 LT
0x9aa PUSH2 0x9af
0x9ad JUMPI
---
0x997: JUMPDEST 
0x999: V857 = 0x20
0x99b: V858 = ADD 0x20 V187
0x99d: V859 = 0x20
0x99f: V860 = MUL 0x20 0x5
0x9a0: V861 = ADD 0xa0 V858
0x9a1: V862 = M[V861]
0x9a4: V863 = 0x1
0x9a7: V864 = M[V207]
0x9a9: V865 = LT 0x1 V864
0x9aa: V866 = 0x9af
0x9ad: JUMPI 0x9af V865
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V187, 0x5]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V862, S13, S10, 0x1]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V207, 0x1]

================================

Block 0x9ae
[0x9ae:0x9ae]
---
Predecessors: [0x997]
Successors: []
---
0x9ae INVALID
---
0x9ae: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V207, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V207, 0x1]

================================

Block 0x9af
[0x9af:0x9c4]
---
Predecessors: [0x997]
Successors: [0x9c5, 0x9c6]
---
0x9af JUMPDEST
0x9b0 SWAP1
0x9b1 PUSH1 0x20
0x9b3 ADD
0x9b4 SWAP1
0x9b5 PUSH1 0x20
0x9b7 MUL
0x9b8 ADD
0x9b9 MLOAD
0x9ba DUP12
0x9bb PUSH1 0x3
0x9bd DUP2
0x9be MLOAD
0x9bf DUP2
0x9c0 LT
0x9c1 PUSH2 0x9c6
0x9c4 JUMPI
---
0x9af: JUMPDEST 
0x9b1: V867 = 0x20
0x9b3: V868 = ADD 0x20 V207
0x9b5: V869 = 0x20
0x9b7: V870 = MUL 0x20 0x1
0x9b8: V871 = ADD 0x20 V868
0x9b9: V872 = M[V871]
0x9bb: V873 = 0x3
0x9be: V874 = M[V207]
0x9c0: V875 = LT 0x3 V874
0x9c1: V876 = 0x9c6
0x9c4: JUMPI 0x9c6 V875
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V207, 0x1]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V872, S12, 0x3]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V872, V207, 0x3]

================================

Block 0x9c5
[0x9c5:0x9c5]
---
Predecessors: [0x9af]
Successors: []
---
0x9c5 INVALID
---
0x9c5: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V872, V207, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V872, V207, 0x3]

================================

Block 0x9c6
[0x9c6:0x9db]
---
Predecessors: [0x9af]
Successors: [0x9dc, 0x9dd]
---
0x9c6 JUMPDEST
0x9c7 SWAP1
0x9c8 PUSH1 0x20
0x9ca ADD
0x9cb SWAP1
0x9cc PUSH1 0x20
0x9ce MUL
0x9cf ADD
0x9d0 MLOAD
0x9d1 DUP15
0x9d2 PUSH1 0x9
0x9d4 DUP2
0x9d5 MLOAD
0x9d6 DUP2
0x9d7 LT
0x9d8 PUSH2 0x9dd
0x9db JUMPI
---
0x9c6: JUMPDEST 
0x9c8: V877 = 0x20
0x9ca: V878 = ADD 0x20 V207
0x9cc: V879 = 0x20
0x9ce: V880 = MUL 0x20 0x3
0x9cf: V881 = ADD 0x60 V878
0x9d0: V882 = M[V881]
0x9d2: V883 = 0x9
0x9d5: V884 = M[V167]
0x9d7: V885 = LT 0x9 V884
0x9d8: V886 = 0x9dd
0x9db: JUMPI 0x9dd V885
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V872, V207, 0x3]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V882, S15, 0x9]
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V872, V882, V167, 0x9]

================================

Block 0x9dc
[0x9dc:0x9dc]
---
Predecessors: [0x9c6]
Successors: []
---
0x9dc INVALID
---
0x9dc: INVALID 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V872, V882, V167, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V872, V882, V167, 0x9]

================================

Block 0x9dd
[0x9dd:0xa78]
---
Predecessors: [0x9c6]
Successors: [0xa79]
---
0x9dd JUMPDEST
0x9de SWAP1
0x9df PUSH1 0x20
0x9e1 ADD
0x9e2 SWAP1
0x9e3 PUSH1 0x20
0x9e5 MUL
0x9e6 ADD
0x9e7 MLOAD
0x9e8 PUSH1 0x40
0x9ea MLOAD
0x9eb PUSH1 0xe0
0x9ed PUSH1 0x2
0x9ef EXP
0x9f0 PUSH4 0xffffffff
0x9f5 DUP15
0x9f6 AND
0x9f7 MUL
0x9f8 DUP2
0x9f9 MSTORE
0x9fa PUSH1 0x1
0x9fc PUSH1 0xa0
0x9fe PUSH1 0x2
0xa00 EXP
0xa01 SUB
0xa02 SWAP12
0xa03 DUP13
0xa04 AND
0xa05 PUSH1 0x4
0xa07 DUP3
0xa08 ADD
0xa09 MSTORE
0xa0a PUSH1 0x24
0xa0c DUP2
0xa0d ADD
0xa0e SWAP11
0xa0f SWAP1
0xa10 SWAP11
0xa11 MSTORE
0xa12 SWAP8
0xa13 DUP11
0xa14 AND
0xa15 PUSH1 0x44
0xa17 DUP11
0xa18 ADD
0xa19 MSTORE
0xa1a PUSH1 0x64
0xa1c DUP10
0xa1d ADD
0xa1e SWAP7
0xa1f SWAP1
0xa20 SWAP7
0xa21 MSTORE
0xa22 PUSH1 0x84
0xa24 DUP9
0xa25 ADD
0xa26 SWAP5
0xa27 SWAP1
0xa28 SWAP5
0xa29 MSTORE
0xa2a PUSH1 0xa4
0xa2c DUP8
0xa2d ADD
0xa2e SWAP3
0xa2f SWAP1
0xa30 SWAP3
0xa31 MSTORE
0xa32 SWAP1
0xa33 SWAP6
0xa34 AND
0xa35 PUSH1 0xc4
0xa37 DUP6
0xa38 ADD
0xa39 MSTORE
0xa3a PUSH1 0xff
0xa3c SWAP1
0xa3d SWAP5
0xa3e AND
0xa3f PUSH1 0xe4
0xa41 DUP5
0xa42 ADD
0xa43 MSTORE
0xa44 PUSH2 0x104
0xa47 DUP4
0xa48 ADD
0xa49 SWAP4
0xa4a SWAP1
0xa4b SWAP4
0xa4c MSTORE
0xa4d PUSH2 0x124
0xa50 DUP3
0xa51 ADD
0xa52 SWAP3
0xa53 SWAP1
0xa54 SWAP3
0xa55 MSTORE
0xa56 PUSH2 0x144
0xa59 DUP2
0xa5a ADD
0xa5b SWAP2
0xa5c SWAP1
0xa5d SWAP2
0xa5e MSTORE
0xa5f PUSH2 0x164
0xa62 ADD
0xa63 PUSH1 0x0
0xa65 PUSH1 0x40
0xa67 MLOAD
0xa68 DUP1
0xa69 DUP4
0xa6a SUB
0xa6b DUP2
0xa6c PUSH1 0x0
0xa6e DUP8
0xa6f PUSH2 0x646e
0xa72 GAS
0xa73 SUB
0xa74 CALL
0xa75 POP
0xa76 POP
0xa77 POP
0xa78 POP
---
0x9dd: JUMPDEST 
0x9df: V887 = 0x20
0x9e1: V888 = ADD 0x20 V167
0x9e3: V889 = 0x20
0x9e5: V890 = MUL 0x20 0x9
0x9e6: V891 = ADD 0x120 V888
0x9e7: V892 = M[V891]
0x9e8: V893 = 0x40
0x9ea: V894 = M[0x40]
0x9eb: V895 = 0xe0
0x9ed: V896 = 0x2
0x9ef: V897 = EXP 0x2 0xe0
0x9f0: V898 = 0xffffffff
0x9f6: V899 = AND V792 0xffffffff
0x9f7: V900 = MUL V899 0x100000000000000000000000000000000000000000000000000000000
0x9f9: M[V894] = V900
0x9fa: V901 = 0x1
0x9fc: V902 = 0xa0
0x9fe: V903 = 0x2
0xa00: V904 = EXP 0x2 0xa0
0xa01: V905 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa04: V906 = AND 0xffffffffffffffffffffffffffffffffffffffff V802
0xa05: V907 = 0x4
0xa08: V908 = ADD V894 0x4
0xa09: M[V908] = V906
0xa0a: V909 = 0x24
0xa0d: V910 = ADD V894 0x24
0xa11: M[V910] = V812
0xa14: V911 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0xa15: V912 = 0x44
0xa18: V913 = ADD V894 0x44
0xa19: M[V913] = V911
0xa1a: V914 = 0x64
0xa1d: V915 = ADD V894 0x64
0xa21: M[V915] = V832
0xa22: V916 = 0x84
0xa25: V917 = ADD V894 0x84
0xa29: M[V917] = V842
0xa2a: V918 = 0xa4
0xa2d: V919 = ADD V894 0xa4
0xa31: M[V919] = V852
0xa34: V920 = AND 0xffffffffffffffffffffffffffffffffffffffff V862
0xa35: V921 = 0xc4
0xa38: V922 = ADD V894 0xc4
0xa39: M[V922] = V920
0xa3a: V923 = 0xff
0xa3e: V924 = AND V156 0xff
0xa3f: V925 = 0xe4
0xa42: V926 = ADD V894 0xe4
0xa43: M[V926] = V924
0xa44: V927 = 0x104
0xa48: V928 = ADD V894 0x104
0xa4c: M[V928] = V872
0xa4d: V929 = 0x124
0xa51: V930 = ADD V894 0x124
0xa55: M[V930] = V882
0xa56: V931 = 0x144
0xa5a: V932 = ADD V894 0x144
0xa5e: M[V932] = V892
0xa5f: V933 = 0x164
0xa62: V934 = ADD 0x164 V894
0xa63: V935 = 0x0
0xa65: V936 = 0x40
0xa67: V937 = M[0x40]
0xa6a: V938 = SUB V934 V937
0xa6c: V939 = 0x0
0xa6f: V940 = 0x646e
0xa72: V941 = GAS
0xa73: V942 = SUB V941 0x646e
0xa74: V943 = CALL V942 V773 0x0 V937 V938 V937 0x0
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207, V773, V792, V802, V812, V822, V832, V842, V852, V862, V156, V872, V882, V167, 0x9]
Stack pops: 14
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]

================================

Block 0xa79
[0xa79:0xa79]
---
Predecessors: [0x7cd, 0x9dd]
Successors: [0xa7a]
---
0xa79 JUMPDEST
---
0xa79: JUMPDEST 
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]

================================

Block 0xa7a
[0xa7a:0xa81]
---
Predecessors: [0xa79]
Successors: [0x72]
---
0xa7a JUMPDEST
0xa7b POP
0xa7c POP
0xa7d POP
0xa7e POP
0xa7f POP
0xa80 POP
0xa81 JUMP
---
0xa7a: JUMPDEST 
0xa81: JUMP 0x72
---
Entry stack: [V12, 0x72, V149, V153, V156, V167, V187, V207]
Stack pops: 7
Stack additions: []
Exit stack: [V12]

================================

Block 0xa82
[0xa82:0xa90]
---
Predecessors: [0x251]
Successors: [0x259]
---
0xa82 JUMPDEST
0xa83 PUSH1 0x0
0xa85 SLOAD
0xa86 PUSH1 0x1
0xa88 PUSH1 0xa0
0xa8a PUSH1 0x2
0xa8c EXP
0xa8d SUB
0xa8e AND
0xa8f DUP2
0xa90 JUMP
---
0xa82: JUMPDEST 
0xa83: V944 = 0x0
0xa85: V945 = S[0x0]
0xa86: V946 = 0x1
0xa88: V947 = 0xa0
0xa8a: V948 = 0x2
0xa8c: V949 = EXP 0x2 0xa0
0xa8d: V950 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8e: V951 = AND 0xffffffffffffffffffffffffffffffffffffffff V945
0xa90: JUMP 0x259
---
Entry stack: [V12, 0x259]
Stack pops: 1
Stack additions: [S0, V951]
Exit stack: [V12, 0x259, V951]

================================

Block 0xa91
[0xa91:0xaa7]
---
Predecessors: [0x280]
Successors: [0xaa8, 0xaac]
---
0xa91 JUMPDEST
0xa92 PUSH1 0x0
0xa94 SLOAD
0xa95 CALLER
0xa96 PUSH1 0x1
0xa98 PUSH1 0xa0
0xa9a PUSH1 0x2
0xa9c EXP
0xa9d SUB
0xa9e SWAP1
0xa9f DUP2
0xaa0 AND
0xaa1 SWAP2
0xaa2 AND
0xaa3 EQ
0xaa4 PUSH2 0xaac
0xaa7 JUMPI
---
0xa91: JUMPDEST 
0xa92: V952 = 0x0
0xa94: V953 = S[0x0]
0xa95: V954 = CALLER
0xa96: V955 = 0x1
0xa98: V956 = 0xa0
0xa9a: V957 = 0x2
0xa9c: V958 = EXP 0x2 0xa0
0xa9d: V959 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa0: V960 = AND 0xffffffffffffffffffffffffffffffffffffffff V954
0xaa2: V961 = AND V953 0xffffffffffffffffffffffffffffffffffffffff
0xaa3: V962 = EQ V961 V960
0xaa4: V963 = 0xaac
0xaa7: JUMPI 0xaac V962
---
Entry stack: [V12, 0x72, V246, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V246, V248]

================================

Block 0xaa8
[0xaa8:0xaab]
---
Predecessors: [0xa91]
Successors: []
---
0xaa8 PUSH1 0x0
0xaaa DUP1
0xaab REVERT
---
0xaa8: V964 = 0x0
0xaab: REVERT 0x0 0x0
---
Entry stack: [V12, 0x72, V246, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x72, V246, V248]

================================

Block 0xaac
[0xaac:0xb22]
---
Predecessors: [0xa91]
Successors: [0xb23]
---
0xaac JUMPDEST
0xaad DUP2
0xaae PUSH1 0x1
0xab0 PUSH1 0xa0
0xab2 PUSH1 0x2
0xab4 EXP
0xab5 SUB
0xab6 AND
0xab7 PUSH1 0x40
0xab9 MLOAD
0xaba PUSH32 0x77697468647261772875696e7432353629000000000000000000000000000000
0xadb DUP2
0xadc MSTORE
0xadd PUSH1 0x11
0xadf ADD
0xae0 PUSH1 0x40
0xae2 MLOAD
0xae3 DUP1
0xae4 SWAP2
0xae5 SUB
0xae6 SWAP1
0xae7 SHA3
0xae8 PUSH1 0xe0
0xaea PUSH1 0x2
0xaec EXP
0xaed SWAP1
0xaee DIV
0xaef DUP3
0xaf0 PUSH1 0x40
0xaf2 MLOAD
0xaf3 PUSH1 0xe0
0xaf5 PUSH1 0x2
0xaf7 EXP
0xaf8 PUSH4 0xffffffff
0xafd DUP5
0xafe AND
0xaff MUL
0xb00 DUP2
0xb01 MSTORE
0xb02 PUSH1 0x4
0xb04 DUP2
0xb05 ADD
0xb06 SWAP2
0xb07 SWAP1
0xb08 SWAP2
0xb09 MSTORE
0xb0a PUSH1 0x24
0xb0c ADD
0xb0d PUSH1 0x0
0xb0f PUSH1 0x40
0xb11 MLOAD
0xb12 DUP1
0xb13 DUP4
0xb14 SUB
0xb15 DUP2
0xb16 PUSH1 0x0
0xb18 DUP8
0xb19 PUSH2 0x646e
0xb1c GAS
0xb1d SUB
0xb1e CALL
0xb1f POP
0xb20 POP
0xb21 POP
0xb22 POP
---
0xaac: JUMPDEST 
0xaae: V965 = 0x1
0xab0: V966 = 0xa0
0xab2: V967 = 0x2
0xab4: V968 = EXP 0x2 0xa0
0xab5: V969 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab6: V970 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0xab7: V971 = 0x40
0xab9: V972 = M[0x40]
0xaba: V973 = 0x77697468647261772875696e7432353629000000000000000000000000000000
0xadc: M[V972] = 0x77697468647261772875696e7432353629000000000000000000000000000000
0xadd: V974 = 0x11
0xadf: V975 = ADD 0x11 V972
0xae0: V976 = 0x40
0xae2: V977 = M[0x40]
0xae5: V978 = SUB V975 V977
0xae7: V979 = SHA3 V977 V978
0xae8: V980 = 0xe0
0xaea: V981 = 0x2
0xaec: V982 = EXP 0x2 0xe0
0xaee: V983 = DIV V979 0x100000000000000000000000000000000000000000000000000000000
0xaf0: V984 = 0x40
0xaf2: V985 = M[0x40]
0xaf3: V986 = 0xe0
0xaf5: V987 = 0x2
0xaf7: V988 = EXP 0x2 0xe0
0xaf8: V989 = 0xffffffff
0xafe: V990 = AND V983 0xffffffff
0xaff: V991 = MUL V990 0x100000000000000000000000000000000000000000000000000000000
0xb01: M[V985] = V991
0xb02: V992 = 0x4
0xb05: V993 = ADD V985 0x4
0xb09: M[V993] = V248
0xb0a: V994 = 0x24
0xb0c: V995 = ADD 0x24 V985
0xb0d: V996 = 0x0
0xb0f: V997 = 0x40
0xb11: V998 = M[0x40]
0xb14: V999 = SUB V995 V998
0xb16: V1000 = 0x0
0xb19: V1001 = 0x646e
0xb1c: V1002 = GAS
0xb1d: V1003 = SUB V1002 0x646e
0xb1e: V1004 = CALL V1003 V970 0x0 V998 V999 V998 0x0
---
Entry stack: [V12, 0x72, V246, V248]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x72, V246, V248]

================================

Block 0xb23
[0xb23:0xb26]
---
Predecessors: [0xaac]
Successors: [0x72]
---
0xb23 JUMPDEST
0xb24 POP
0xb25 POP
0xb26 JUMP
---
0xb23: JUMPDEST 
0xb26: JUMP 0x72
---
Entry stack: [V12, 0x72, V246, V248]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xb27
[0xb27:0xb67]
---
Predecessors: []
Successors: []
---
0xb27 STOP
0xb28 LOG1
0xb29 PUSH6 0x627a7a723058
0xb30 SHA3
0xb31 MISSING 0xd2
0xb32 MISSING 0x4e
0xb33 SELFDESTRUCT
0xb34 PUSH16 0x30d23d9c67d3d903d7af36f36290f510
0xb45 POP
0xb46 MISSING 0x23
0xb47 MISSING 0xc8
0xb48 MISSING 0xe1
0xb49 MISSING 0xc1
0xb4a MISSING 0x5f
0xb4b LT
0xb4c MISSING 0xd9
0xb4d MISSING 0xc0
0xb4e MISSING 0xee
0xb4f MISSING 0x49
0xb50 PUSH23 0x29
---
0xb27: STOP 
0xb28: LOG S0 S1 S2
0xb29: V1005 = 0x627a7a723058
0xb30: V1006 = SHA3 0x627a7a723058 S3
0xb31: MISSING 0xd2
0xb32: MISSING 0x4e
0xb33: SELFDESTRUCT S0
0xb34: V1007 = 0x30d23d9c67d3d903d7af36f36290f510
0xb46: MISSING 0x23
0xb47: MISSING 0xc8
0xb48: MISSING 0xe1
0xb49: MISSING 0xc1
0xb4a: MISSING 0x5f
0xb4b: V1008 = LT S0 S1
0xb4c: MISSING 0xd9
0xb4d: MISSING 0xc0
0xb4e: MISSING 0xee
0xb4f: MISSING 0x49
0xb50: V1009 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1006, V1008, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x76
Exit block: 0x74
Body: 0x72, 0x73, 0x74, 0x76, 0x7d, 0x81, 0x299, 0x2b0, 0x2b4, 0x2c7, 0x2cb, 0x2f5, 0x2f9, 0x2fa

Function 1:
Public function signature: 0x3bf1af13
Entry block: 0x8e
Exit block: 0x74
Body: 0x72, 0x73, 0x74, 0x8e, 0x95, 0x99, 0x2fd, 0x314, 0x318, 0x388

Function 2:
Public function signature: 0x9e281a98
Entry block: 0xb2
Exit block: 0x74
Body: 0x72, 0x73, 0x74, 0xb2, 0xb9, 0xbd, 0x388, 0x38c, 0x3a3, 0x3a7, 0x3b8, 0x3bc, 0x415, 0x419, 0x426, 0x42a, 0x43b

Function 3:
Public function signature: 0xa60c1824
Entry block: 0xd6
Exit block: 0x74
Body: 0x72, 0x73, 0x74, 0xd6, 0xdd, 0xe1, 0x444, 0x45b, 0x45f, 0x58f

Function 4:
Public function signature: 0xbf5a7f7a
Entry block: 0x12c
Exit block: 0x74
Body: 0x72, 0x73, 0x74, 0x12c, 0x133, 0x137, 0x59d, 0x5b4, 0x5b8, 0x63d

Function 5:
Public function signature: 0xf3372898
Entry block: 0x156
Exit block: 0x9dc
Body: 0x72, 0x73, 0x74, 0x156, 0x15d, 0x161, 0x642, 0x659, 0x65d, 0x6fc, 0x6fd, 0x713, 0x714, 0x72a, 0x72b, 0x741, 0x742, 0x758, 0x759, 0x76f, 0x770, 0x786, 0x787, 0x79e, 0x79f, 0x7b5, 0x7b6, 0x7cc, 0x7cd, 0x86e, 0x90c, 0x90d, 0x923, 0x924, 0x93a, 0x93b, 0x951, 0x952, 0x968, 0x969, 0x97f, 0x980, 0x996, 0x997, 0x9ae, 0x9af, 0x9c5, 0x9c6, 0x9dc, 0x9dd, 0xa79, 0xa7a

Function 6:
Public function signature: 0xf851a440
Entry block: 0x246
Exit block: 0x259
Body: 0x246, 0x24d, 0x251, 0x259, 0xa82

Function 7:
Public function signature: 0xfa03c225
Entry block: 0x275
Exit block: 0x74
Body: 0x72, 0x73, 0x74, 0x275, 0x27c, 0x280, 0xa91, 0xaa8, 0xaac, 0xb23

Function 8:
Public fallback function
Entry block: 0x72
Exit block: 0x74
Body: 0x72, 0x73, 0x74

