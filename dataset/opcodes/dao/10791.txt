Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x48
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x48
0xc: JUMPI 0x48 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x4a]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x21716c62
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x4a
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x21716c62
0x22: V15 = EQ V13 0x21716c62
0x23: V16 = 0x4a
0x26: JUMPI 0x4a V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x60]
---
0x27 DUP1
0x28 PUSH4 0x3ccfd60b
0x2d EQ
0x2e PUSH2 0x60
0x31 JUMPI
---
0x28: V17 = 0x3ccfd60b
0x2d: V18 = EQ 0x3ccfd60b V13
0x2e: V19 = 0x60
0x31: JUMPI 0x60 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x73]
---
0x32 DUP1
0x33 PUSH4 0x41c0e1b5
0x38 EQ
0x39 PUSH2 0x73
0x3c JUMPI
---
0x33: V20 = 0x41c0e1b5
0x38: V21 = EQ 0x41c0e1b5 V13
0x39: V22 = 0x73
0x3c: JUMPI 0x73 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x86]
---
0x3d DUP1
0x3e PUSH4 0xb6b55f25
0x43 EQ
0x44 PUSH2 0x86
0x47 JUMPI
---
0x3e: V23 = 0xb6b55f25
0x43: V24 = EQ 0xb6b55f25 V13
0x44: V25 = 0x86
0x47: JUMPI 0x86 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x49]
---
Predecessors: [0x0, 0x3d, 0x12c, 0x184, 0x21a]
Successors: []
---
0x48 JUMPDEST
0x49 STOP
---
0x48: JUMPDEST 
0x49: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x4a
[0x4a:0x50]
---
Predecessors: [0xd]
Successors: [0x51, 0x55]
---
0x4a JUMPDEST
0x4b CALLVALUE
0x4c ISZERO
0x4d PUSH2 0x55
0x50 JUMPI
---
0x4a: JUMPDEST 
0x4b: V26 = CALLVALUE
0x4c: V27 = ISZERO V26
0x4d: V28 = 0x55
0x50: JUMPI 0x55 V27
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x51
[0x51:0x54]
---
Predecessors: [0x4a]
Successors: []
---
0x51 PUSH1 0x0
0x53 DUP1
0x54 REVERT
---
0x51: V29 = 0x0
0x54: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x91]
---
0x55 JUMPDEST
0x56 PUSH2 0x48
0x59 PUSH1 0x4
0x5b CALLDATALOAD
0x5c PUSH2 0x91
0x5f JUMP
---
0x55: JUMPDEST 
0x56: V30 = 0x48
0x59: V31 = 0x4
0x5b: V32 = CALLDATALOAD 0x4
0x5c: V33 = 0x91
0x5f: JUMP 0x91
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x48, V32]
Exit stack: [V13, 0x48, V32]

================================

Block 0x60
[0x60:0x66]
---
Predecessors: [0x27]
Successors: [0x67, 0x6b]
---
0x60 JUMPDEST
0x61 CALLVALUE
0x62 ISZERO
0x63 PUSH2 0x6b
0x66 JUMPI
---
0x60: JUMPDEST 
0x61: V34 = CALLVALUE
0x62: V35 = ISZERO V34
0x63: V36 = 0x6b
0x66: JUMPI 0x6b V35
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x67
[0x67:0x6a]
---
Predecessors: [0x60]
Successors: []
---
0x67 PUSH1 0x0
0x69 DUP1
0x6a REVERT
---
0x67: V37 = 0x0
0x6a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6b
[0x6b:0x72]
---
Predecessors: [0x60]
Successors: [0x130]
---
0x6b JUMPDEST
0x6c PUSH2 0x48
0x6f PUSH2 0x130
0x72 JUMP
---
0x6b: JUMPDEST 
0x6c: V38 = 0x48
0x6f: V39 = 0x130
0x72: JUMP 0x130
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x48]
Exit stack: [V13, 0x48]

================================

Block 0x73
[0x73:0x79]
---
Predecessors: [0x32]
Successors: [0x7a, 0x7e]
---
0x73 JUMPDEST
0x74 CALLVALUE
0x75 ISZERO
0x76 PUSH2 0x7e
0x79 JUMPI
---
0x73: JUMPDEST 
0x74: V40 = CALLVALUE
0x75: V41 = ISZERO V40
0x76: V42 = 0x7e
0x79: JUMPI 0x7e V41
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x73]
Successors: []
---
0x7a PUSH1 0x0
0x7c DUP1
0x7d REVERT
---
0x7a: V43 = 0x0
0x7d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x7e
[0x7e:0x85]
---
Predecessors: [0x73]
Successors: [0x186]
---
0x7e JUMPDEST
0x7f PUSH2 0x48
0x82 PUSH2 0x186
0x85 JUMP
---
0x7e: JUMPDEST 
0x7f: V44 = 0x48
0x82: V45 = 0x186
0x85: JUMP 0x186
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x48]
Exit stack: [V13, 0x48]

================================

Block 0x86
[0x86:0x90]
---
Predecessors: [0x3d]
Successors: [0x1af]
---
0x86 JUMPDEST
0x87 PUSH2 0x48
0x8a PUSH1 0x4
0x8c CALLDATALOAD
0x8d PUSH2 0x1af
0x90 JUMP
---
0x86: JUMPDEST 
0x87: V46 = 0x48
0x8a: V47 = 0x4
0x8c: V48 = CALLDATALOAD 0x4
0x8d: V49 = 0x1af
0x90: JUMP 0x1af
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x48, V48]
Exit stack: [V13, 0x48, V48]

================================

Block 0x91
[0x91:0xa8]
---
Predecessors: [0x55]
Successors: [0xa9, 0xad]
---
0x91 JUMPDEST
0x92 PUSH1 0x0
0x94 DUP1
0x95 SLOAD
0x96 CALLER
0x97 PUSH1 0x1
0x99 PUSH1 0xa0
0x9b PUSH1 0x2
0x9d EXP
0x9e SUB
0x9f SWAP1
0xa0 DUP2
0xa1 AND
0xa2 SWAP2
0xa3 AND
0xa4 EQ
0xa5 PUSH2 0xad
0xa8 JUMPI
---
0x91: JUMPDEST 
0x92: V50 = 0x0
0x95: V51 = S[0x0]
0x96: V52 = CALLER
0x97: V53 = 0x1
0x99: V54 = 0xa0
0x9b: V55 = 0x2
0x9d: V56 = EXP 0x2 0xa0
0x9e: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xa3: V59 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V60 = EQ V59 V58
0xa5: V61 = 0xad
0xa8: JUMPI 0xad V60
---
Entry stack: [V13, 0x48, V32]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x48, V32, 0x0]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0x91]
Successors: []
---
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa9: V62 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V32, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V32, 0x0]

================================

Block 0xad
[0xad:0xf9]
---
Predecessors: [0x91]
Successors: [0xfa, 0xfe]
---
0xad JUMPDEST
0xae POP
0xaf PUSH1 0x2
0xb1 SLOAD
0xb2 PUSH1 0x1
0xb4 SLOAD
0xb5 PUSH1 0x1
0xb7 PUSH1 0xa0
0xb9 PUSH1 0x2
0xbb EXP
0xbc SUB
0xbd SWAP2
0xbe DUP3
0xbf AND
0xc0 BALANCE
0xc1 SWAP2
0xc2 AND
0xc3 PUSH4 0x2e1a7d4d
0xc8 DUP4
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc PUSH1 0xe0
0xce PUSH1 0x2
0xd0 EXP
0xd1 PUSH4 0xffffffff
0xd6 DUP5
0xd7 AND
0xd8 MUL
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x4
0xdd DUP2
0xde ADD
0xdf SWAP2
0xe0 SWAP1
0xe1 SWAP2
0xe2 MSTORE
0xe3 PUSH1 0x24
0xe5 ADD
0xe6 PUSH1 0x0
0xe8 PUSH1 0x40
0xea MLOAD
0xeb DUP1
0xec DUP4
0xed SUB
0xee DUP2
0xef PUSH1 0x0
0xf1 DUP8
0xf2 DUP1
0xf3 EXTCODESIZE
0xf4 ISZERO
0xf5 ISZERO
0xf6 PUSH2 0xfe
0xf9 JUMPI
---
0xad: JUMPDEST 
0xaf: V63 = 0x2
0xb1: V64 = S[0x2]
0xb2: V65 = 0x1
0xb4: V66 = S[0x1]
0xb5: V67 = 0x1
0xb7: V68 = 0xa0
0xb9: V69 = 0x2
0xbb: V70 = EXP 0x2 0xa0
0xbc: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xc0: V73 = BALANCE V72
0xc2: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0xc3: V75 = 0x2e1a7d4d
0xc9: V76 = 0x40
0xcb: V77 = M[0x40]
0xcc: V78 = 0xe0
0xce: V79 = 0x2
0xd0: V80 = EXP 0x2 0xe0
0xd1: V81 = 0xffffffff
0xd7: V82 = AND 0x2e1a7d4d 0xffffffff
0xd8: V83 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0xda: M[V77] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0xdb: V84 = 0x4
0xde: V85 = ADD V77 0x4
0xe2: M[V85] = V32
0xe3: V86 = 0x24
0xe5: V87 = ADD 0x24 V77
0xe6: V88 = 0x0
0xe8: V89 = 0x40
0xea: V90 = M[0x40]
0xed: V91 = SUB V87 V90
0xef: V92 = 0x0
0xf3: V93 = EXTCODESIZE V74
0xf4: V94 = ISZERO V93
0xf5: V95 = ISZERO V94
0xf6: V96 = 0xfe
0xf9: JUMPI 0xfe V95
---
Entry stack: [V13, 0x48, V32, 0x0]
Stack pops: 2
Stack additions: [S1, V73, V74, 0x2e1a7d4d, V87, 0x0, V90, V91, V90, 0x0, V74]
Exit stack: [V13, 0x48, V32, V73, V74, 0x2e1a7d4d, V87, 0x0, V90, V91, V90, 0x0, V74]

================================

Block 0xfa
[0xfa:0xfd]
---
Predecessors: [0xad]
Successors: []
---
0xfa PUSH1 0x0
0xfc DUP1
0xfd REVERT
---
0xfa: V97 = 0x0
0xfd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V32, V73, V74, 0x2e1a7d4d, V87, 0x0, V90, V91, V90, 0x0, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V32, V73, V74, 0x2e1a7d4d, V87, 0x0, V90, V91, V90, 0x0, V74]

================================

Block 0xfe
[0xfe:0x10a]
---
Predecessors: [0xad]
Successors: [0x10b, 0x10f]
---
0xfe JUMPDEST
0xff PUSH2 0x2c6
0x102 GAS
0x103 SUB
0x104 CALL
0x105 ISZERO
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0xfe: JUMPDEST 
0xff: V98 = 0x2c6
0x102: V99 = GAS
0x103: V100 = SUB V99 0x2c6
0x104: V101 = CALL V100 V74 0x0 V90 V91 V90 0x0
0x105: V102 = ISZERO V101
0x106: V103 = ISZERO V102
0x107: V104 = 0x10f
0x10a: JUMPI 0x10f V103
---
Entry stack: [V13, 0x48, V32, V73, V74, 0x2e1a7d4d, V87, 0x0, V90, V91, V90, 0x0, V74]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x48, V32, V73, V74, 0x2e1a7d4d, V87]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0xfe]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V105 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V32, V73, V74, 0x2e1a7d4d, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V32, V73, V74, 0x2e1a7d4d, V87]

================================

Block 0x10f
[0x10f:0x127]
---
Predecessors: [0xfe]
Successors: [0x128, 0x12c]
---
0x10f JUMPDEST
0x110 POP
0x111 POP
0x112 PUSH1 0x2
0x114 SLOAD
0x115 PUSH1 0x1
0x117 PUSH1 0xa0
0x119 PUSH1 0x2
0x11b EXP
0x11c SUB
0x11d AND
0x11e BALANCE
0x11f DUP3
0x120 SWAP1
0x121 GT
0x122 SWAP1
0x123 POP
0x124 PUSH2 0x12c
0x127 JUMPI
---
0x10f: JUMPDEST 
0x112: V106 = 0x2
0x114: V107 = S[0x2]
0x115: V108 = 0x1
0x117: V109 = 0xa0
0x119: V110 = 0x2
0x11b: V111 = EXP 0x2 0xa0
0x11c: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x11e: V114 = BALANCE V113
0x121: V115 = GT V114 V73
0x124: V116 = 0x12c
0x127: JUMPI 0x12c V115
---
Entry stack: [V13, 0x48, V32, V73, V74, 0x2e1a7d4d, V87]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V13, 0x48, V32, V73]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x10f]
Successors: []
---
0x128 PUSH1 0x0
0x12a DUP1
0x12b REVERT
---
0x128: V117 = 0x0
0x12b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V32, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V32, V73]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0x10f]
Successors: [0x48]
---
0x12c JUMPDEST
0x12d POP
0x12e POP
0x12f JUMP
---
0x12c: JUMPDEST 
0x12f: JUMP 0x48
---
Entry stack: [V13, 0x48, V32, V73]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x130
[0x130:0x146]
---
Predecessors: [0x6b]
Successors: [0x147, 0x14b]
---
0x130 JUMPDEST
0x131 PUSH1 0x0
0x133 SLOAD
0x134 CALLER
0x135 PUSH1 0x1
0x137 PUSH1 0xa0
0x139 PUSH1 0x2
0x13b EXP
0x13c SUB
0x13d SWAP1
0x13e DUP2
0x13f AND
0x140 SWAP2
0x141 AND
0x142 EQ
0x143 PUSH2 0x14b
0x146 JUMPI
---
0x130: JUMPDEST 
0x131: V118 = 0x0
0x133: V119 = S[0x0]
0x134: V120 = CALLER
0x135: V121 = 0x1
0x137: V122 = 0xa0
0x139: V123 = 0x2
0x13b: V124 = EXP 0x2 0xa0
0x13c: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x141: V127 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x142: V128 = EQ V127 V126
0x143: V129 = 0x14b
0x146: JUMPI 0x14b V128
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x147
[0x147:0x14a]
---
Predecessors: [0x130]
Successors: []
---
0x147 PUSH1 0x0
0x149 DUP1
0x14a REVERT
---
0x147: V130 = 0x0
0x14a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x14b
[0x14b:0x17f]
---
Predecessors: [0x130]
Successors: [0x180, 0x184]
---
0x14b JUMPDEST
0x14c PUSH1 0x0
0x14e SLOAD
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 SWAP1
0x158 DUP2
0x159 AND
0x15a SWAP1
0x15b ADDRESS
0x15c AND
0x15d BALANCE
0x15e DUP1
0x15f ISZERO
0x160 PUSH2 0x8fc
0x163 MUL
0x164 SWAP1
0x165 PUSH1 0x40
0x167 MLOAD
0x168 PUSH1 0x0
0x16a PUSH1 0x40
0x16c MLOAD
0x16d DUP1
0x16e DUP4
0x16f SUB
0x170 DUP2
0x171 DUP6
0x172 DUP9
0x173 DUP9
0x174 CALL
0x175 SWAP4
0x176 POP
0x177 POP
0x178 POP
0x179 POP
0x17a ISZERO
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x14b: JUMPDEST 
0x14c: V131 = 0x0
0x14e: V132 = S[0x0]
0x14f: V133 = 0x1
0x151: V134 = 0xa0
0x153: V135 = 0x2
0x155: V136 = EXP 0x2 0xa0
0x156: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x159: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x15b: V139 = ADDRESS
0x15c: V140 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V141 = BALANCE V140
0x15f: V142 = ISZERO V141
0x160: V143 = 0x8fc
0x163: V144 = MUL 0x8fc V142
0x165: V145 = 0x40
0x167: V146 = M[0x40]
0x168: V147 = 0x0
0x16a: V148 = 0x40
0x16c: V149 = M[0x40]
0x16f: V150 = SUB V146 V149
0x174: V151 = CALL V144 V138 V141 V149 V150 V149 0x0
0x17a: V152 = ISZERO V151
0x17b: V153 = ISZERO V152
0x17c: V154 = 0x184
0x17f: JUMPI 0x184 V153
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x14b]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V155 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x184
[0x184:0x185]
---
Predecessors: [0x14b]
Successors: [0x48]
---
0x184 JUMPDEST
0x185 JUMP
---
0x184: JUMPDEST 
0x185: JUMP 0x48
---
Entry stack: [V13, 0x48]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x186
[0x186:0x19c]
---
Predecessors: [0x7e]
Successors: [0x19d, 0x1a1]
---
0x186 JUMPDEST
0x187 PUSH1 0x0
0x189 SLOAD
0x18a CALLER
0x18b PUSH1 0x1
0x18d PUSH1 0xa0
0x18f PUSH1 0x2
0x191 EXP
0x192 SUB
0x193 SWAP1
0x194 DUP2
0x195 AND
0x196 SWAP2
0x197 AND
0x198 EQ
0x199 PUSH2 0x1a1
0x19c JUMPI
---
0x186: JUMPDEST 
0x187: V156 = 0x0
0x189: V157 = S[0x0]
0x18a: V158 = CALLER
0x18b: V159 = 0x1
0x18d: V160 = 0xa0
0x18f: V161 = 0x2
0x191: V162 = EXP 0x2 0xa0
0x192: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x197: V165 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x198: V166 = EQ V165 V164
0x199: V167 = 0x1a1
0x19c: JUMPI 0x1a1 V166
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x19d
[0x19d:0x1a0]
---
Predecessors: [0x186]
Successors: []
---
0x19d PUSH1 0x0
0x19f DUP1
0x1a0 REVERT
---
0x19d: V168 = 0x0
0x1a0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x1a1
[0x1a1:0x1ae]
---
Predecessors: [0x186]
Successors: []
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x0
0x1a4 SLOAD
0x1a5 PUSH1 0x1
0x1a7 PUSH1 0xa0
0x1a9 PUSH1 0x2
0x1ab EXP
0x1ac SUB
0x1ad AND
0x1ae SELFDESTRUCT
---
0x1a1: JUMPDEST 
0x1a2: V169 = 0x0
0x1a4: V170 = S[0x0]
0x1a5: V171 = 0x1
0x1a7: V172 = 0xa0
0x1a9: V173 = 0x2
0x1ab: V174 = EXP 0x2 0xa0
0x1ac: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ad: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x1ae: SELFDESTRUCT V176
---
Entry stack: [V13, 0x48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48]

================================

Block 0x1af
[0x1af:0x1c5]
---
Predecessors: [0x86]
Successors: [0x1c6, 0x1ca]
---
0x1af JUMPDEST
0x1b0 PUSH1 0x0
0x1b2 SLOAD
0x1b3 CALLER
0x1b4 PUSH1 0x1
0x1b6 PUSH1 0xa0
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb SUB
0x1bc SWAP1
0x1bd DUP2
0x1be AND
0x1bf SWAP2
0x1c0 AND
0x1c1 EQ
0x1c2 PUSH2 0x1ca
0x1c5 JUMPI
---
0x1af: JUMPDEST 
0x1b0: V177 = 0x0
0x1b2: V178 = S[0x0]
0x1b3: V179 = CALLER
0x1b4: V180 = 0x1
0x1b6: V181 = 0xa0
0x1b8: V182 = 0x2
0x1ba: V183 = EXP 0x2 0xa0
0x1bb: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1be: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x1c0: V186 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V187 = EQ V186 V185
0x1c2: V188 = 0x1ca
0x1c5: JUMPI 0x1ca V187
---
Entry stack: [V13, 0x48, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V48]

================================

Block 0x1c6
[0x1c6:0x1c9]
---
Predecessors: [0x1af]
Successors: []
---
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 REVERT
---
0x1c6: V189 = 0x0
0x1c9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V48]

================================

Block 0x1ca
[0x1ca:0x204]
---
Predecessors: [0x1af]
Successors: [0x205, 0x209]
---
0x1ca JUMPDEST
0x1cb PUSH1 0x1
0x1cd SLOAD
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 AND
0x1d7 PUSH4 0xd0e30db0
0x1dc DUP3
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 DUP3
0x1e1 PUSH4 0xffffffff
0x1e6 AND
0x1e7 PUSH1 0xe0
0x1e9 PUSH1 0x2
0x1eb EXP
0x1ec MUL
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x4
0x1f1 ADD
0x1f2 PUSH1 0x0
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 DUP1
0x1f8 DUP4
0x1f9 SUB
0x1fa DUP2
0x1fb DUP6
0x1fc DUP9
0x1fd DUP1
0x1fe EXTCODESIZE
0x1ff ISZERO
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V190 = 0x1
0x1cd: V191 = S[0x1]
0x1ce: V192 = 0x1
0x1d0: V193 = 0xa0
0x1d2: V194 = 0x2
0x1d4: V195 = EXP 0x2 0xa0
0x1d5: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d6: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x1d7: V198 = 0xd0e30db0
0x1dd: V199 = 0x40
0x1df: V200 = M[0x40]
0x1e1: V201 = 0xffffffff
0x1e6: V202 = AND 0xffffffff 0xd0e30db0
0x1e7: V203 = 0xe0
0x1e9: V204 = 0x2
0x1eb: V205 = EXP 0x2 0xe0
0x1ec: V206 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x1ee: M[V200] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x1ef: V207 = 0x4
0x1f1: V208 = ADD 0x4 V200
0x1f2: V209 = 0x0
0x1f4: V210 = 0x40
0x1f6: V211 = M[0x40]
0x1f9: V212 = SUB V208 V211
0x1fe: V213 = EXTCODESIZE V197
0x1ff: V214 = ISZERO V213
0x200: V215 = ISZERO V214
0x201: V216 = 0x209
0x204: JUMPI 0x209 V215
---
Entry stack: [V13, 0x48, V48]
Stack pops: 1
Stack additions: [S0, V197, 0xd0e30db0, S0, V208, 0x0, V211, V212, V211, S0, V197]
Exit stack: [V13, 0x48, V48, V197, 0xd0e30db0, V48, V208, 0x0, V211, V212, V211, V48, V197]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1ca]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V217 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V48, V197, 0xd0e30db0, V48, V208, 0x0, V211, V212, V211, V48, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V48, V197, 0xd0e30db0, V48, V208, 0x0, V211, V212, V211, V48, V197]

================================

Block 0x209
[0x209:0x215]
---
Predecessors: [0x1ca]
Successors: [0x216, 0x21a]
---
0x209 JUMPDEST
0x20a PUSH2 0x25ee
0x20d GAS
0x20e SUB
0x20f CALL
0x210 ISZERO
0x211 ISZERO
0x212 PUSH2 0x21a
0x215 JUMPI
---
0x209: JUMPDEST 
0x20a: V218 = 0x25ee
0x20d: V219 = GAS
0x20e: V220 = SUB V219 0x25ee
0x20f: V221 = CALL V220 V197 V48 V211 V212 V211 0x0
0x210: V222 = ISZERO V221
0x211: V223 = ISZERO V222
0x212: V224 = 0x21a
0x215: JUMPI 0x21a V223
---
Entry stack: [V13, 0x48, V48, V197, 0xd0e30db0, V48, V208, 0x0, V211, V212, V211, V48, V197]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x48, V48, V197, 0xd0e30db0, V48, V208]

================================

Block 0x216
[0x216:0x219]
---
Predecessors: [0x209]
Successors: []
---
0x216 PUSH1 0x0
0x218 DUP1
0x219 REVERT
---
0x216: V225 = 0x0
0x219: REVERT 0x0 0x0
---
Entry stack: [V13, 0x48, V48, V197, 0xd0e30db0, V48, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x48, V48, V197, 0xd0e30db0, V48, V208]

================================

Block 0x21a
[0x21a:0x220]
---
Predecessors: [0x209]
Successors: [0x48]
---
0x21a JUMPDEST
0x21b POP
0x21c POP
0x21d POP
0x21e POP
0x21f POP
0x220 JUMP
---
0x21a: JUMPDEST 
0x220: JUMP 0x48
---
Entry stack: [V13, 0x48, V48, V197, 0xd0e30db0, V48, V208]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x221
[0x221:0x24d]
---
Predecessors: []
Successors: []
---
0x221 STOP
0x222 LOG1
0x223 PUSH6 0x627a7a723058
0x22a SHA3
0x22b GASPRICE
0x22c MISSING 0xe0
0x22d EXP
0x22e LOG4
0x22f MISSING 0x2a
0x230 PUSH29 0xe8ee49bd780f9147910255ed88a52c18745858baa58c3e1f99a70029
---
0x221: STOP 
0x222: LOG S0 S1 S2
0x223: V226 = 0x627a7a723058
0x22a: V227 = SHA3 0x627a7a723058 S3
0x22b: V228 = GASPRICE
0x22c: MISSING 0xe0
0x22d: V229 = EXP S0 S1
0x22e: LOG V229 S2 S3 S4 S5 S6
0x22f: MISSING 0x2a
0x230: V230 = 0xe8ee49bd780f9147910255ed88a52c18745858baa58c3e1f99a70029
---
Entry stack: []
Stack pops: 0
Stack additions: [V228, V227, 0xe8ee49bd780f9147910255ed88a52c18745858baa58c3e1f99a70029]
Exit stack: []

================================

Function 0:
Public function signature: 0x21716c62
Entry block: 0x4a
Exit block: 0x48
Body: 0x48, 0x4a, 0x51, 0x55, 0x91, 0xa9, 0xad, 0xfa, 0xfe, 0x10b, 0x10f, 0x128, 0x12c

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x60
Exit block: 0x48
Body: 0x48, 0x60, 0x67, 0x6b, 0x130, 0x147, 0x14b, 0x180, 0x184

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0x73
Exit block: 0x19d
Body: 0x73, 0x7a, 0x7e, 0x186, 0x19d, 0x1a1

Function 3:
Public function signature: 0xb6b55f25
Entry block: 0x86
Exit block: 0x48
Body: 0x48, 0x86, 0x1af, 0x1c6, 0x1ca, 0x205, 0x209, 0x216, 0x21a

Function 4:
Public fallback function
Entry block: 0x48
Exit block: 0x48
Body: 0x48

