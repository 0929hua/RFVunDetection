Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x60]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x60
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x60
0xa: JUMPI 0x60 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x72]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x27e235e3
0x3a EQ
0x3b PUSH2 0x72
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x27e235e3
0x3a: V12 = EQ 0x27e235e3 V10
0x3b: V13 = 0x72
0x3e: JUMPI 0x72 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xb9]
---
0x3f DUP1
0x40 PUSH4 0x46d6c084
0x45 EQ
0x46 PUSH2 0xb9
0x49 JUMPI
---
0x40: V14 = 0x46d6c084
0x45: V15 = EQ 0x46d6c084 V10
0x46: V16 = 0xb9
0x49: JUMPI 0xb9 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xc3]
---
0x4a DUP1
0x4b PUSH4 0x549262ba
0x50 EQ
0x51 PUSH2 0xc3
0x54 JUMPI
---
0x4b: V17 = 0x549262ba
0x50: V18 = EQ 0x549262ba V10
0x51: V19 = 0xc3
0x54: JUMPI 0xc3 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0xcd]
---
0x55 DUP1
0x56 PUSH4 0x6d4ce63c
0x5b EQ
0x5c PUSH2 0xcd
0x5f JUMPI
---
0x56: V20 = 0x6d4ce63c
0x5b: V21 = EQ 0x6d4ce63c V10
0x5c: V22 = 0xcd
0x5f: JUMPI 0xcd V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x65]
---
Predecessors: [0x0, 0x55]
Successors: [0x66]
---
0x60 JUMPDEST
0x61 CALLVALUE
0x62 PUSH2 0x0
0x65 JUMPI
---
0x60: JUMPDEST 
0x61: V23 = CALLVALUE
0x62: V24 = 0x0
0x65: THROWI V23
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x66
[0x66:0x68]
---
Predecessors: [0x60]
Successors: [0x69]
---
0x66 PUSH2 0x70
---
0x66: V25 = 0x70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x70]
Exit stack: [V10, 0x70]

================================

Block 0x69
[0x69:0x6d]
---
Predecessors: [0x66]
Successors: []
---
0x69 JUMPDEST
0x6a PUSH2 0x0
0x6d JUMP
---
0x69: JUMPDEST 
0x6a: V26 = 0x0
0x6d: THROW 
---
Entry stack: [V10, 0x70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: []
Successors: []
---
0x6e JUMPDEST
0x6f JUMP
0x70 JUMPDEST
0x71 STOP
---
0x6e: JUMPDEST 
0x6f: JUMP S0
0x70: JUMPDEST 
0x71: STOP 
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x72
[0x72:0x77]
---
Predecessors: [0xb]
Successors: [0x78]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 PUSH2 0x0
0x77 JUMPI
---
0x72: JUMPDEST 
0x73: V27 = CALLVALUE
0x74: V28 = 0x0
0x77: THROWI V27
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x78
[0x78:0xa2]
---
Predecessors: [0x72]
Successors: [0xdc]
---
0x78 PUSH2 0xa3
0x7b PUSH1 0x4
0x7d DUP1
0x7e DUP1
0x7f CALLDATALOAD
0x80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95 AND
0x96 SWAP1
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP1
0x9b SWAP2
0x9c SWAP1
0x9d POP
0x9e POP
0x9f PUSH2 0xdc
0xa2 JUMP
---
0x78: V29 = 0xa3
0x7b: V30 = 0x4
0x7f: V31 = CALLDATALOAD 0x4
0x80: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x95: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x97: V34 = 0x20
0x99: V35 = ADD 0x20 0x4
0x9f: V36 = 0xdc
0xa2: JUMP 0xdc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V33]
Exit stack: [V10, 0xa3, V33]

================================

Block 0xa3
[0xa3:0xb8]
---
Predecessors: [0xdc]
Successors: []
---
0xa3 JUMPDEST
0xa4 PUSH1 0x40
0xa6 MLOAD
0xa7 DUP1
0xa8 DUP3
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x20
0xad ADD
0xae SWAP2
0xaf POP
0xb0 POP
0xb1 PUSH1 0x40
0xb3 MLOAD
0xb4 DUP1
0xb5 SWAP2
0xb6 SUB
0xb7 SWAP1
0xb8 RETURN
---
0xa3: JUMPDEST 
0xa4: V37 = 0x40
0xa6: V38 = M[0x40]
0xaa: M[V38] = V59
0xab: V39 = 0x20
0xad: V40 = ADD 0x20 V38
0xb1: V41 = 0x40
0xb3: V42 = M[0x40]
0xb6: V43 = SUB V40 V42
0xb8: RETURN V42 V43
---
Entry stack: [V10, 0xa3, V59]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0xb9
[0xb9:0xc0]
---
Predecessors: [0x3f]
Successors: [0xf4]
---
0xb9 JUMPDEST
0xba PUSH2 0xc1
0xbd PUSH2 0xf4
0xc0 JUMP
---
0xb9: JUMPDEST 
0xba: V44 = 0xc1
0xbd: V45 = 0xf4
0xc0: JUMP 0xf4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V10, 0xc1]

================================

Block 0xc1
[0xc1:0xc2]
---
Predecessors: [0xf5]
Successors: []
---
0xc1 JUMPDEST
0xc2 STOP
---
0xc1: JUMPDEST 
0xc2: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xca]
---
Predecessors: [0x4a]
Successors: [0xf7]
---
0xc3 JUMPDEST
0xc4 PUSH2 0xcb
0xc7 PUSH2 0xf7
0xca JUMP
---
0xc3: JUMPDEST 
0xc4: V46 = 0xcb
0xc7: V47 = 0xf7
0xca: JUMP 0xf7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcb]
Exit stack: [V10, 0xcb]

================================

Block 0xcb
[0xcb:0xcc]
---
Predecessors: [0x13c]
Successors: []
---
0xcb JUMPDEST
0xcc STOP
---
0xcb: JUMPDEST 
0xcc: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd2]
---
Predecessors: [0x55]
Successors: [0xd3]
---
0xcd JUMPDEST
0xce CALLVALUE
0xcf PUSH2 0x0
0xd2 JUMPI
---
0xcd: JUMPDEST 
0xce: V48 = CALLVALUE
0xcf: V49 = 0x0
0xd2: THROWI V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd3
[0xd3:0xd9]
---
Predecessors: [0xcd]
Successors: [0x13e]
---
0xd3 PUSH2 0xda
0xd6 PUSH2 0x13e
0xd9 JUMP
---
0xd3: V50 = 0xda
0xd6: V51 = 0x13e
0xd9: JUMP 0x13e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xda]
Exit stack: [V10, 0xda]

================================

Block 0xda
[0xda:0xdb]
---
Predecessors: [0x201]
Successors: []
---
0xda JUMPDEST
0xdb STOP
---
0xda: JUMPDEST 
0xdb: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdc
[0xdc:0xf3]
---
Predecessors: [0x78]
Successors: [0xa3]
---
0xdc JUMPDEST
0xdd PUSH1 0x0
0xdf PUSH1 0x20
0xe1 MSTORE
0xe2 DUP1
0xe3 PUSH1 0x0
0xe5 MSTORE
0xe6 PUSH1 0x40
0xe8 PUSH1 0x0
0xea SHA3
0xeb PUSH1 0x0
0xed SWAP2
0xee POP
0xef SWAP1
0xf0 POP
0xf1 SLOAD
0xf2 DUP2
0xf3 JUMP
---
0xdc: JUMPDEST 
0xdd: V52 = 0x0
0xdf: V53 = 0x20
0xe1: M[0x20] = 0x0
0xe3: V54 = 0x0
0xe5: M[0x0] = V33
0xe6: V55 = 0x40
0xe8: V56 = 0x0
0xea: V57 = SHA3 0x0 0x40
0xeb: V58 = 0x0
0xf1: V59 = S[V57]
0xf3: JUMP 0xa3
---
Entry stack: [V10, 0xa3, V33]
Stack pops: 2
Stack additions: [S1, V59]
Exit stack: [V10, 0xa3, V59]

================================

Block 0xf4
[0xf4:0xf4]
---
Predecessors: [0xb9]
Successors: [0xf5]
---
0xf4 JUMPDEST
---
0xf4: JUMPDEST 
---
Entry stack: [V10, 0xc1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc1]

================================

Block 0xf5
[0xf5:0xf6]
---
Predecessors: [0xf4]
Successors: [0xc1]
---
0xf5 JUMPDEST
0xf6 JUMP
---
0xf5: JUMPDEST 
0xf6: JUMP 0xc1
---
Entry stack: [V10, 0xc1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xf7
[0xf7:0x13b]
---
Predecessors: [0xc3]
Successors: [0x13c]
---
0xf7 JUMPDEST
0xf8 CALLVALUE
0xf9 PUSH1 0x0
0xfb PUSH1 0x0
0xfd CALLER
0xfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113 AND
0x114 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129 AND
0x12a DUP2
0x12b MSTORE
0x12c PUSH1 0x20
0x12e ADD
0x12f SWAP1
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 PUSH1 0x0
0x137 SHA3
0x138 DUP2
0x139 SWAP1
0x13a SSTORE
0x13b POP
---
0xf7: JUMPDEST 
0xf8: V60 = CALLVALUE
0xf9: V61 = 0x0
0xfb: V62 = 0x0
0xfd: V63 = CALLER
0xfe: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x113: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x114: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x129: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x12b: M[0x0] = V67
0x12c: V68 = 0x20
0x12e: V69 = ADD 0x20 0x0
0x131: M[0x20] = 0x0
0x132: V70 = 0x20
0x134: V71 = ADD 0x20 0x20
0x135: V72 = 0x0
0x137: V73 = SHA3 0x0 0x40
0x13a: S[V73] = V60
---
Entry stack: [V10, 0xcb]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcb]

================================

Block 0x13c
[0x13c:0x13d]
---
Predecessors: [0xf7]
Successors: [0xcb]
---
0x13c JUMPDEST
0x13d JUMP
---
0x13c: JUMPDEST 
0x13d: JUMP 0xcb
---
Entry stack: [V10, 0xcb]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x13e
[0x13e:0x1b6]
---
Predecessors: [0xd3]
Successors: [0x1b7, 0x1bb]
---
0x13e JUMPDEST
0x13f CALLER
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 PUSH1 0x0
0x158 PUSH1 0x0
0x15a CALLER
0x15b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x170 AND
0x171 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x186 AND
0x187 DUP2
0x188 MSTORE
0x189 PUSH1 0x20
0x18b ADD
0x18c SWAP1
0x18d DUP2
0x18e MSTORE
0x18f PUSH1 0x20
0x191 ADD
0x192 PUSH1 0x0
0x194 SHA3
0x195 SLOAD
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a SWAP1
0x19b POP
0x19c PUSH1 0x0
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 DUP4
0x1a3 SUB
0x1a4 DUP2
0x1a5 DUP6
0x1a6 DUP8
0x1a7 PUSH2 0x8502
0x1aa GAS
0x1ab SUB
0x1ac CALL
0x1ad SWAP3
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 ISZERO
0x1b2 ISZERO
0x1b3 PUSH2 0x1bb
0x1b6 JUMPI
---
0x13e: JUMPDEST 
0x13f: V74 = CALLER
0x140: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x156: V77 = 0x0
0x158: V78 = 0x0
0x15a: V79 = CALLER
0x15b: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x170: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x171: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x186: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x188: M[0x0] = V83
0x189: V84 = 0x20
0x18b: V85 = ADD 0x20 0x0
0x18e: M[0x20] = 0x0
0x18f: V86 = 0x20
0x191: V87 = ADD 0x20 0x20
0x192: V88 = 0x0
0x194: V89 = SHA3 0x0 0x40
0x195: V90 = S[V89]
0x196: V91 = 0x40
0x198: V92 = M[0x40]
0x19c: V93 = 0x0
0x19e: V94 = 0x40
0x1a0: V95 = M[0x40]
0x1a3: V96 = SUB V92 V95
0x1a7: V97 = 0x8502
0x1aa: V98 = GAS
0x1ab: V99 = SUB V98 0x8502
0x1ac: V100 = CALL V99 V76 V90 V95 V96 V95 0x0
0x1b1: V101 = ISZERO V100
0x1b2: V102 = ISZERO V101
0x1b3: V103 = 0x1bb
0x1b6: JUMPI 0x1bb V102
---
Entry stack: [V10, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xda]

================================

Block 0x1b7
[0x1b7:0x1ba]
---
Predecessors: [0x13e]
Successors: []
---
0x1b7 PUSH2 0x0
0x1ba JUMP
---
0x1b7: V104 = 0x0
0x1ba: THROW 
---
Entry stack: [V10, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xda]

================================

Block 0x1bb
[0x1bb:0x200]
---
Predecessors: [0x13e]
Successors: [0x201]
---
0x1bb JUMPDEST
0x1bc PUSH1 0x0
0x1be PUSH1 0x0
0x1c0 PUSH1 0x0
0x1c2 CALLER
0x1c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d8 AND
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee AND
0x1ef DUP2
0x1f0 MSTORE
0x1f1 PUSH1 0x20
0x1f3 ADD
0x1f4 SWAP1
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa PUSH1 0x0
0x1fc SHA3
0x1fd DUP2
0x1fe SWAP1
0x1ff SSTORE
0x200 POP
---
0x1bb: JUMPDEST 
0x1bc: V105 = 0x0
0x1be: V106 = 0x0
0x1c0: V107 = 0x0
0x1c2: V108 = CALLER
0x1c3: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1d9: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1f0: M[0x0] = V112
0x1f1: V113 = 0x20
0x1f3: V114 = ADD 0x20 0x0
0x1f6: M[0x20] = 0x0
0x1f7: V115 = 0x20
0x1f9: V116 = ADD 0x20 0x20
0x1fa: V117 = 0x0
0x1fc: V118 = SHA3 0x0 0x40
0x1ff: S[V118] = 0x0
---
Entry stack: [V10, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xda]

================================

Block 0x201
[0x201:0x202]
---
Predecessors: [0x1bb]
Successors: [0xda]
---
0x201 JUMPDEST
0x202 JUMP
---
0x201: JUMPDEST 
0x202: JUMP 0xda
---
Entry stack: [V10, 0xda]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x203
[0x203:0x20e]
---
Predecessors: []
Successors: [0x20f]
Has unresolved jump.
---
0x203 STOP
0x204 LOG1
0x205 PUSH6 0x627a7a723058
0x20c SHA3
0x20d MISSING 0xd0
0x20e JUMPI
---
0x203: STOP 
0x204: LOG S0 S1 S2
0x205: V119 = 0x627a7a723058
0x20c: V120 = SHA3 0x627a7a723058 S3
0x20d: MISSING 0xd0
0x20e: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V120]
Exit stack: []

================================

Block 0x20f
[0x20f:0x22e]
---
Predecessors: [0x203]
Successors: []
---
0x20f MISSING 0xcb
0x210 MISSING 0xc2
0x211 MISSING 0xe8
0x212 DUP13
0x213 MISSING 0xc0
0x214 MISSING 0x22
0x215 MISSING 0xa8
0x216 CALLVALUE
0x217 BALANCE
0x218 MISSING 0xa9
0x219 MISSING 0xf6
0x21a OR
0x21b MISSING 0x4f
0x21c MISSING 0xbd
0x21d MISSING 0xb4
0x21e SWAP3
0x21f MSTORE8
0x220 SMOD
0x221 SWAP3
0x222 LOG1
0x223 MISSING 0x1e
0x224 MISSING 0xb4
0x225 MISSING 0xd1
0x226 MISSING 0x1e
0x227 EXP
0x228 MISSING 0x25
0x229 MISSING 0xd7
0x22a REVERT
0x22b MISSING 0xb8
0x22c DUP1
0x22d STOP
0x22e MISSING 0x29
---
0x20f: MISSING 0xcb
0x210: MISSING 0xc2
0x211: MISSING 0xe8
0x213: MISSING 0xc0
0x214: MISSING 0x22
0x215: MISSING 0xa8
0x216: V121 = CALLVALUE
0x217: V122 = BALANCE V121
0x218: MISSING 0xa9
0x219: MISSING 0xf6
0x21a: V123 = OR S0 S1
0x21b: MISSING 0x4f
0x21c: MISSING 0xbd
0x21d: MISSING 0xb4
0x21f: M8[S3] = S1
0x220: V124 = SMOD S2 S0
0x222: LOG S6 S4 S5
0x223: MISSING 0x1e
0x224: MISSING 0xb4
0x225: MISSING 0xd1
0x226: MISSING 0x1e
0x227: V125 = EXP S0 S1
0x228: MISSING 0x25
0x229: MISSING 0xd7
0x22a: REVERT S0 S1
0x22b: MISSING 0xb8
0x22d: STOP 
0x22e: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V122, V123, V124, V125, S0, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x27e235e3
Entry block: 0x72
Exit block: 0xa3
Body: 0x72, 0x78, 0xa3, 0xdc

Function 1:
Public function signature: 0x46d6c084
Entry block: 0xb9
Exit block: 0xc1
Body: 0xb9, 0xc1, 0xf4, 0xf5

Function 2:
Public function signature: 0x549262ba
Entry block: 0xc3
Exit block: 0xcb
Body: 0xc3, 0xcb, 0xf7, 0x13c

Function 3:
Public function signature: 0x6d4ce63c
Entry block: 0xcd
Exit block: 0xda
Body: 0xcd, 0xd3, 0xda, 0x13e, 0x1b7, 0x1bb, 0x201

Function 4:
Public fallback function
Entry block: 0x60
Exit block: 0x69
Body: 0x60, 0x66, 0x69

