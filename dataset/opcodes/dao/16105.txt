Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x3c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x3c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3c
0xc: JUMPI 0x3c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x25]
---
Predecessors: [0x0]
Successors: [0x26, 0xeb]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH3 0x821de3
0x20 DUP2
0x21 EQ
0x22 PUSH2 0xeb
0x25 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x821de3
0x21: V15 = EQ V13 0x821de3
0x22: V16 = 0xeb
0x25: JUMPI 0xeb V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x26
[0x26:0x30]
---
Predecessors: [0xd]
Successors: [0x31, 0x11a]
---
0x26 DUP1
0x27 PUSH4 0x3ef13367
0x2c EQ
0x2d PUSH2 0x11a
0x30 JUMPI
---
0x27: V17 = 0x3ef13367
0x2c: V18 = EQ 0x3ef13367 V13
0x2d: V19 = 0x11a
0x30: JUMPI 0x11a V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x31
[0x31:0x3b]
---
Predecessors: [0x26]
Successors: [0x3c, 0x13b]
---
0x31 DUP1
0x32 PUSH4 0x6b9f96ea
0x37 EQ
0x38 PUSH2 0x13b
0x3b JUMPI
---
0x32: V20 = 0x6b9f96ea
0x37: V21 = EQ 0x6b9f96ea V13
0x38: V22 = 0x13b
0x3b: JUMPI 0x13b V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3c
[0x3c:0x7b]
---
Predecessors: [0x0, 0x31]
Successors: [0x7c, 0x80]
---
0x3c JUMPDEST
0x3d PUSH1 0x0
0x3f DUP1
0x40 SLOAD
0x41 PUSH1 0x1
0x43 PUSH1 0xa0
0x45 PUSH1 0x2
0x47 EXP
0x48 SUB
0x49 AND
0x4a SWAP1
0x4b CALLVALUE
0x4c SWAP1
0x4d CALLDATASIZE
0x4e PUSH1 0x40
0x50 MLOAD
0x51 DUP1
0x52 DUP4
0x53 DUP4
0x54 DUP1
0x55 DUP3
0x56 DUP5
0x57 CALLDATACOPY
0x58 DUP3
0x59 ADD
0x5a SWAP2
0x5b POP
0x5c POP
0x5d SWAP3
0x5e POP
0x5f POP
0x60 POP
0x61 PUSH1 0x0
0x63 PUSH1 0x40
0x65 MLOAD
0x66 DUP1
0x67 DUP4
0x68 SUB
0x69 DUP2
0x6a DUP6
0x6b DUP8
0x6c PUSH2 0x8796
0x6f GAS
0x70 SUB
0x71 CALL
0x72 SWAP3
0x73 POP
0x74 POP
0x75 POP
0x76 ISZERO
0x77 ISZERO
0x78 PUSH2 0x80
0x7b JUMPI
---
0x3c: JUMPDEST 
0x3d: V23 = 0x0
0x40: V24 = S[0x0]
0x41: V25 = 0x1
0x43: V26 = 0xa0
0x45: V27 = 0x2
0x47: V28 = EXP 0x2 0xa0
0x48: V29 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x4b: V31 = CALLVALUE
0x4d: V32 = CALLDATASIZE
0x4e: V33 = 0x40
0x50: V34 = M[0x40]
0x57: CALLDATACOPY V34 0x0 V32
0x59: V35 = ADD V34 V32
0x61: V36 = 0x0
0x63: V37 = 0x40
0x65: V38 = M[0x40]
0x68: V39 = SUB V35 V38
0x6c: V40 = 0x8796
0x6f: V41 = GAS
0x70: V42 = SUB V41 0x8796
0x71: V43 = CALL V42 V30 V31 V38 V39 V38 0x0
0x76: V44 = ISZERO V43
0x77: V45 = ISZERO V44
0x78: V46 = 0x80
0x7b: JUMPI 0x80 V45
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x7c
[0x7c:0x7f]
---
Predecessors: [0x3c]
Successors: []
---
0x7c PUSH1 0x0
0x7e DUP1
0x7f REVERT
---
0x7c: V47 = 0x0
0x7f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x80
[0x80:0xea]
---
Predecessors: [0x3c]
Successors: []
---
0x80 JUMPDEST
0x81 PUSH32 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xa2 CALLER
0xa3 CALLVALUE
0xa4 PUSH1 0x0
0xa6 CALLDATASIZE
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa PUSH1 0x1
0xac PUSH1 0xa0
0xae PUSH1 0x2
0xb0 EXP
0xb1 SUB
0xb2 DUP6
0xb3 AND
0xb4 DUP2
0xb5 MSTORE
0xb6 PUSH1 0x20
0xb8 DUP2
0xb9 ADD
0xba DUP5
0xbb SWAP1
0xbc MSTORE
0xbd PUSH1 0x60
0xbf PUSH1 0x40
0xc1 DUP3
0xc2 ADD
0xc3 DUP2
0xc4 DUP2
0xc5 MSTORE
0xc6 SWAP1
0xc7 DUP3
0xc8 ADD
0xc9 DUP4
0xca SWAP1
0xcb MSTORE
0xcc PUSH1 0x80
0xce DUP3
0xcf ADD
0xd0 DUP5
0xd1 DUP5
0xd2 DUP1
0xd3 DUP3
0xd4 DUP5
0xd5 CALLDATACOPY
0xd6 DUP3
0xd7 ADD
0xd8 SWAP2
0xd9 POP
0xda POP
0xdb SWAP6
0xdc POP
0xdd POP
0xde POP
0xdf POP
0xe0 POP
0xe1 POP
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 DUP1
0xe6 SWAP2
0xe7 SUB
0xe8 SWAP1
0xe9 LOG1
0xea STOP
---
0x80: JUMPDEST 
0x81: V48 = 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xa2: V49 = CALLER
0xa3: V50 = CALLVALUE
0xa4: V51 = 0x0
0xa6: V52 = CALLDATASIZE
0xa7: V53 = 0x40
0xa9: V54 = M[0x40]
0xaa: V55 = 0x1
0xac: V56 = 0xa0
0xae: V57 = 0x2
0xb0: V58 = EXP 0x2 0xa0
0xb1: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3: V60 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0xb5: M[V54] = V60
0xb6: V61 = 0x20
0xb9: V62 = ADD V54 0x20
0xbc: M[V62] = V50
0xbd: V63 = 0x60
0xbf: V64 = 0x40
0xc2: V65 = ADD V54 0x40
0xc5: M[V65] = 0x60
0xc8: V66 = ADD V54 0x60
0xcb: M[V66] = V52
0xcc: V67 = 0x80
0xcf: V68 = ADD V54 0x80
0xd5: CALLDATACOPY V68 0x0 V52
0xd7: V69 = ADD V68 V52
0xe2: V70 = 0x40
0xe4: V71 = M[0x40]
0xe7: V72 = SUB V69 V71
0xe9: LOG V71 V72 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xea: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xeb
[0xeb:0xf1]
---
Predecessors: [0xd]
Successors: [0xf2, 0xf6]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xeb: JUMPDEST 
0xec: V73 = CALLVALUE
0xed: V74 = ISZERO V73
0xee: V75 = 0xf6
0xf1: JUMPI 0xf6 V74
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xeb]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V76 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0xeb]
Successors: [0x14e]
---
0xf6 JUMPDEST
0xf7 PUSH2 0xfe
0xfa PUSH2 0x14e
0xfd JUMP
---
0xf6: JUMPDEST 
0xf7: V77 = 0xfe
0xfa: V78 = 0x14e
0xfd: JUMP 0x14e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfe]
Exit stack: [V13, 0xfe]

================================

Block 0xfe
[0xfe:0x119]
---
Predecessors: [0x14e]
Successors: []
---
0xfe JUMPDEST
0xff PUSH1 0x40
0x101 MLOAD
0x102 PUSH1 0x1
0x104 PUSH1 0xa0
0x106 PUSH1 0x2
0x108 EXP
0x109 SUB
0x10a SWAP1
0x10b SWAP2
0x10c AND
0x10d DUP2
0x10e MSTORE
0x10f PUSH1 0x20
0x111 ADD
0x112 PUSH1 0x40
0x114 MLOAD
0x115 DUP1
0x116 SWAP2
0x117 SUB
0x118 SWAP1
0x119 RETURN
---
0xfe: JUMPDEST 
0xff: V79 = 0x40
0x101: V80 = M[0x40]
0x102: V81 = 0x1
0x104: V82 = 0xa0
0x106: V83 = 0x2
0x108: V84 = EXP 0x2 0xa0
0x109: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c: V86 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x10e: M[V80] = V86
0x10f: V87 = 0x20
0x111: V88 = ADD 0x20 V80
0x112: V89 = 0x40
0x114: V90 = M[0x40]
0x117: V91 = SUB V88 V90
0x119: RETURN V90 V91
---
Entry stack: [V13, 0xfe, V119]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xfe]

================================

Block 0x11a
[0x11a:0x120]
---
Predecessors: [0x26]
Successors: [0x121, 0x125]
---
0x11a JUMPDEST
0x11b CALLVALUE
0x11c ISZERO
0x11d PUSH2 0x125
0x120 JUMPI
---
0x11a: JUMPDEST 
0x11b: V92 = CALLVALUE
0x11c: V93 = ISZERO V92
0x11d: V94 = 0x125
0x120: JUMPI 0x125 V93
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x121
[0x121:0x124]
---
Predecessors: [0x11a]
Successors: []
---
0x121 PUSH1 0x0
0x123 DUP1
0x124 REVERT
---
0x121: V95 = 0x0
0x124: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x125
[0x125:0x138]
---
Predecessors: [0x11a]
Successors: [0x15d]
---
0x125 JUMPDEST
0x126 PUSH2 0x139
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 PUSH1 0x4
0x133 CALLDATALOAD
0x134 AND
0x135 PUSH2 0x15d
0x138 JUMP
---
0x125: JUMPDEST 
0x126: V96 = 0x139
0x129: V97 = 0x1
0x12b: V98 = 0xa0
0x12d: V99 = 0x2
0x12f: V100 = EXP 0x2 0xa0
0x130: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x131: V102 = 0x4
0x133: V103 = CALLDATALOAD 0x4
0x134: V104 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x135: V105 = 0x15d
0x138: JUMP 0x15d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x139, V104]
Exit stack: [V13, 0x139, V104]

================================

Block 0x139
[0x139:0x13a]
---
Predecessors: [0x2d3, 0x30e]
Successors: []
---
0x139 JUMPDEST
0x13a STOP
---
0x139: JUMPDEST 
0x13a: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13b
[0x13b:0x141]
---
Predecessors: [0x31]
Successors: [0x142, 0x146]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x13b: JUMPDEST 
0x13c: V106 = CALLVALUE
0x13d: V107 = ISZERO V106
0x13e: V108 = 0x146
0x141: JUMPI 0x146 V107
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x13b]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V109 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x146
[0x146:0x14d]
---
Predecessors: [0x13b]
Successors: [0x2d9]
---
0x146 JUMPDEST
0x147 PUSH2 0x139
0x14a PUSH2 0x2d9
0x14d JUMP
---
0x146: JUMPDEST 
0x147: V110 = 0x139
0x14a: V111 = 0x2d9
0x14d: JUMP 0x2d9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x139]
Exit stack: [V13, 0x139]

================================

Block 0x14e
[0x14e:0x15c]
---
Predecessors: [0xf6]
Successors: [0xfe]
---
0x14e JUMPDEST
0x14f PUSH1 0x0
0x151 SLOAD
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a AND
0x15b DUP2
0x15c JUMP
---
0x14e: JUMPDEST 
0x14f: V112 = 0x0
0x151: V113 = S[0x0]
0x152: V114 = 0x1
0x154: V115 = 0xa0
0x156: V116 = 0x2
0x158: V117 = EXP 0x2 0xa0
0x159: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15a: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x15c: JUMP 0xfe
---
Entry stack: [V13, 0xfe]
Stack pops: 1
Stack additions: [S0, V119]
Exit stack: [V13, 0xfe, V119]

================================

Block 0x15d
[0x15d:0x178]
---
Predecessors: [0x125]
Successors: [0x179, 0x17d]
---
0x15d JUMPDEST
0x15e PUSH1 0x0
0x160 DUP1
0x161 SLOAD
0x162 DUP2
0x163 SWAP1
0x164 DUP2
0x165 SWAP1
0x166 CALLER
0x167 PUSH1 0x1
0x169 PUSH1 0xa0
0x16b PUSH1 0x2
0x16d EXP
0x16e SUB
0x16f SWAP1
0x170 DUP2
0x171 AND
0x172 SWAP2
0x173 AND
0x174 EQ
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x15d: JUMPDEST 
0x15e: V120 = 0x0
0x161: V121 = S[0x0]
0x166: V122 = CALLER
0x167: V123 = 0x1
0x169: V124 = 0xa0
0x16b: V125 = 0x2
0x16d: V126 = EXP 0x2 0xa0
0x16e: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x173: V129 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x174: V130 = EQ V129 V128
0x175: V131 = 0x17d
0x178: JUMPI 0x17d V130
---
Entry stack: [V13, 0x139, V104]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x139, V104, 0x0, 0x0, 0x0]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x15d]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V132 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x139, V104, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, V104, 0x0, 0x0, 0x0]

================================

Block 0x17d
[0x17d:0x1d5]
---
Predecessors: [0x15d]
Successors: [0x1d6, 0x1da]
---
0x17d JUMPDEST
0x17e DUP4
0x17f SWAP3
0x180 POP
0x181 ADDRESS
0x182 SWAP2
0x183 POP
0x184 DUP3
0x185 PUSH1 0x1
0x187 PUSH1 0xa0
0x189 PUSH1 0x2
0x18b EXP
0x18c SUB
0x18d AND
0x18e PUSH4 0x70a08231
0x193 DUP4
0x194 PUSH1 0x0
0x196 PUSH1 0x40
0x198 MLOAD
0x199 PUSH1 0x20
0x19b ADD
0x19c MSTORE
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 PUSH1 0xe0
0x1a2 PUSH1 0x2
0x1a4 EXP
0x1a5 PUSH4 0xffffffff
0x1aa DUP5
0x1ab AND
0x1ac MUL
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x1
0x1b1 PUSH1 0xa0
0x1b3 PUSH1 0x2
0x1b5 EXP
0x1b6 SUB
0x1b7 SWAP1
0x1b8 SWAP2
0x1b9 AND
0x1ba PUSH1 0x4
0x1bc DUP3
0x1bd ADD
0x1be MSTORE
0x1bf PUSH1 0x24
0x1c1 ADD
0x1c2 PUSH1 0x20
0x1c4 PUSH1 0x40
0x1c6 MLOAD
0x1c7 DUP1
0x1c8 DUP4
0x1c9 SUB
0x1ca DUP2
0x1cb PUSH1 0x0
0x1cd DUP8
0x1ce DUP1
0x1cf EXTCODESIZE
0x1d0 ISZERO
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x17d: JUMPDEST 
0x181: V133 = ADDRESS
0x185: V134 = 0x1
0x187: V135 = 0xa0
0x189: V136 = 0x2
0x18b: V137 = EXP 0x2 0xa0
0x18c: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18d: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x18e: V140 = 0x70a08231
0x194: V141 = 0x0
0x196: V142 = 0x40
0x198: V143 = M[0x40]
0x199: V144 = 0x20
0x19b: V145 = ADD 0x20 V143
0x19c: M[V145] = 0x0
0x19d: V146 = 0x40
0x19f: V147 = M[0x40]
0x1a0: V148 = 0xe0
0x1a2: V149 = 0x2
0x1a4: V150 = EXP 0x2 0xe0
0x1a5: V151 = 0xffffffff
0x1ab: V152 = AND 0x70a08231 0xffffffff
0x1ac: V153 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x1ae: M[V147] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1af: V154 = 0x1
0x1b1: V155 = 0xa0
0x1b3: V156 = 0x2
0x1b5: V157 = EXP 0x2 0xa0
0x1b6: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b9: V159 = AND V133 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V160 = 0x4
0x1bd: V161 = ADD V147 0x4
0x1be: M[V161] = V159
0x1bf: V162 = 0x24
0x1c1: V163 = ADD 0x24 V147
0x1c2: V164 = 0x20
0x1c4: V165 = 0x40
0x1c6: V166 = M[0x40]
0x1c9: V167 = SUB V163 V166
0x1cb: V168 = 0x0
0x1cf: V169 = EXTCODESIZE V139
0x1d0: V170 = ISZERO V169
0x1d1: V171 = ISZERO V170
0x1d2: V172 = 0x1da
0x1d5: JUMPI 0x1da V171
---
Entry stack: [V13, 0x139, V104, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S3, V133, S0, V139, 0x70a08231, V163, 0x20, V166, V167, V166, 0x0, V139]
Exit stack: [V13, 0x139, V104, V104, V133, 0x0, V139, 0x70a08231, V163, 0x20, V166, V167, V166, 0x0, V139]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x17d]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V173 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x139, V104, V104, V133, 0x0, V139, 0x70a08231, V163, 0x20, V166, V167, V166, 0x0, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, V104, V104, V133, 0x0, V139, 0x70a08231, V163, 0x20, V166, V167, V166, 0x0, V139]

================================

Block 0x1da
[0x1da:0x1e6]
---
Predecessors: [0x17d]
Successors: [0x1e7, 0x1eb]
---
0x1da JUMPDEST
0x1db PUSH2 0x2c6
0x1de GAS
0x1df SUB
0x1e0 CALL
0x1e1 ISZERO
0x1e2 ISZERO
0x1e3 PUSH2 0x1eb
0x1e6 JUMPI
---
0x1da: JUMPDEST 
0x1db: V174 = 0x2c6
0x1de: V175 = GAS
0x1df: V176 = SUB V175 0x2c6
0x1e0: V177 = CALL V176 V139 0x0 V166 V167 V166 0x20
0x1e1: V178 = ISZERO V177
0x1e2: V179 = ISZERO V178
0x1e3: V180 = 0x1eb
0x1e6: JUMPI 0x1eb V179
---
Entry stack: [V13, 0x139, V104, V104, V133, 0x0, V139, 0x70a08231, V163, 0x20, V166, V167, V166, 0x0, V139]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x139, V104, V104, V133, 0x0, V139, 0x70a08231, V163]

================================

Block 0x1e7
[0x1e7:0x1ea]
---
Predecessors: [0x1da]
Successors: []
---
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea REVERT
---
0x1e7: V181 = 0x0
0x1ea: REVERT 0x0 0x0
---
Entry stack: [V13, 0x139, V104, V104, V133, 0x0, V139, 0x70a08231, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, V104, V104, V133, 0x0, V139, 0x70a08231, V163]

================================

Block 0x1eb
[0x1eb:0x1fd]
---
Predecessors: [0x1da]
Successors: [0x1fe, 0x202]
---
0x1eb JUMPDEST
0x1ec POP
0x1ed POP
0x1ee POP
0x1ef PUSH1 0x40
0x1f1 MLOAD
0x1f2 DUP1
0x1f3 MLOAD
0x1f4 SWAP2
0x1f5 POP
0x1f6 POP
0x1f7 DUP1
0x1f8 ISZERO
0x1f9 ISZERO
0x1fa PUSH2 0x202
0x1fd JUMPI
---
0x1eb: JUMPDEST 
0x1ef: V182 = 0x40
0x1f1: V183 = M[0x40]
0x1f3: V184 = M[V183]
0x1f8: V185 = ISZERO V184
0x1f9: V186 = ISZERO V185
0x1fa: V187 = 0x202
0x1fd: JUMPI 0x202 V186
---
Entry stack: [V13, 0x139, V104, V104, V133, 0x0, V139, 0x70a08231, V163]
Stack pops: 4
Stack additions: [V184]
Exit stack: [V13, 0x139, V104, V104, V133, V184]

================================

Block 0x1fe
[0x1fe:0x201]
---
Predecessors: [0x1eb]
Successors: [0x2d3]
---
0x1fe PUSH2 0x2d3
0x201 JUMP
---
0x1fe: V188 = 0x2d3
0x201: JUMP 0x2d3
---
Entry stack: [V13, 0x139, V104, V104, V133, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, V104, V104, V133, V184]

================================

Block 0x202
[0x202:0x263]
---
Predecessors: [0x1eb]
Successors: [0x264, 0x268]
---
0x202 JUMPDEST
0x203 PUSH1 0x0
0x205 DUP1
0x206 SLOAD
0x207 PUSH1 0x1
0x209 PUSH1 0xa0
0x20b PUSH1 0x2
0x20d EXP
0x20e SUB
0x20f DUP1
0x210 DUP7
0x211 AND
0x212 SWAP3
0x213 PUSH4 0xa9059cbb
0x218 SWAP3
0x219 SWAP1
0x21a SWAP2
0x21b AND
0x21c SWAP1
0x21d DUP5
0x21e SWAP1
0x21f PUSH1 0x40
0x221 MLOAD
0x222 PUSH1 0x20
0x224 ADD
0x225 MSTORE
0x226 PUSH1 0x40
0x228 MLOAD
0x229 PUSH1 0xe0
0x22b PUSH1 0x2
0x22d EXP
0x22e PUSH4 0xffffffff
0x233 DUP6
0x234 AND
0x235 MUL
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x1
0x23a PUSH1 0xa0
0x23c PUSH1 0x2
0x23e EXP
0x23f SUB
0x240 SWAP1
0x241 SWAP3
0x242 AND
0x243 PUSH1 0x4
0x245 DUP4
0x246 ADD
0x247 MSTORE
0x248 PUSH1 0x24
0x24a DUP3
0x24b ADD
0x24c MSTORE
0x24d PUSH1 0x44
0x24f ADD
0x250 PUSH1 0x20
0x252 PUSH1 0x40
0x254 MLOAD
0x255 DUP1
0x256 DUP4
0x257 SUB
0x258 DUP2
0x259 PUSH1 0x0
0x25b DUP8
0x25c DUP1
0x25d EXTCODESIZE
0x25e ISZERO
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x202: JUMPDEST 
0x203: V189 = 0x0
0x206: V190 = S[0x0]
0x207: V191 = 0x1
0x209: V192 = 0xa0
0x20b: V193 = 0x2
0x20d: V194 = EXP 0x2 0xa0
0x20e: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x211: V196 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x213: V197 = 0xa9059cbb
0x21b: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x21f: V199 = 0x40
0x221: V200 = M[0x40]
0x222: V201 = 0x20
0x224: V202 = ADD 0x20 V200
0x225: M[V202] = 0x0
0x226: V203 = 0x40
0x228: V204 = M[0x40]
0x229: V205 = 0xe0
0x22b: V206 = 0x2
0x22d: V207 = EXP 0x2 0xe0
0x22e: V208 = 0xffffffff
0x234: V209 = AND 0xa9059cbb 0xffffffff
0x235: V210 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x237: M[V204] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x238: V211 = 0x1
0x23a: V212 = 0xa0
0x23c: V213 = 0x2
0x23e: V214 = EXP 0x2 0xa0
0x23f: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x242: V216 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0x243: V217 = 0x4
0x246: V218 = ADD V204 0x4
0x247: M[V218] = V216
0x248: V219 = 0x24
0x24b: V220 = ADD V204 0x24
0x24c: M[V220] = V184
0x24d: V221 = 0x44
0x24f: V222 = ADD 0x44 V204
0x250: V223 = 0x20
0x252: V224 = 0x40
0x254: V225 = M[0x40]
0x257: V226 = SUB V222 V225
0x259: V227 = 0x0
0x25d: V228 = EXTCODESIZE V196
0x25e: V229 = ISZERO V228
0x25f: V230 = ISZERO V229
0x260: V231 = 0x268
0x263: JUMPI 0x268 V230
---
Entry stack: [V13, 0x139, V104, V104, V133, V184]
Stack pops: 3
Stack additions: [S2, S1, S0, V196, 0xa9059cbb, V222, 0x20, V225, V226, V225, 0x0, V196]
Exit stack: [V13, 0x139, V104, V104, V133, V184, V196, 0xa9059cbb, V222, 0x20, V225, V226, V225, 0x0, V196]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x202]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V232 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V13, 0x139, V104, V104, V133, V184, V196, 0xa9059cbb, V222, 0x20, V225, V226, V225, 0x0, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, V104, V104, V133, V184, V196, 0xa9059cbb, V222, 0x20, V225, V226, V225, 0x0, V196]

================================

Block 0x268
[0x268:0x274]
---
Predecessors: [0x202]
Successors: [0x275, 0x279]
---
0x268 JUMPDEST
0x269 PUSH2 0x2c6
0x26c GAS
0x26d SUB
0x26e CALL
0x26f ISZERO
0x270 ISZERO
0x271 PUSH2 0x279
0x274 JUMPI
---
0x268: JUMPDEST 
0x269: V233 = 0x2c6
0x26c: V234 = GAS
0x26d: V235 = SUB V234 0x2c6
0x26e: V236 = CALL V235 V196 0x0 V225 V226 V225 0x20
0x26f: V237 = ISZERO V236
0x270: V238 = ISZERO V237
0x271: V239 = 0x279
0x274: JUMPI 0x279 V238
---
Entry stack: [V13, 0x139, V104, V104, V133, V184, V196, 0xa9059cbb, V222, 0x20, V225, V226, V225, 0x0, V196]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x139, V104, V104, V133, V184, V196, 0xa9059cbb, V222]

================================

Block 0x275
[0x275:0x278]
---
Predecessors: [0x268]
Successors: []
---
0x275 PUSH1 0x0
0x277 DUP1
0x278 REVERT
---
0x275: V240 = 0x0
0x278: REVERT 0x0 0x0
---
Entry stack: [V13, 0x139, V104, V104, V133, V184, V196, 0xa9059cbb, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, V104, V104, V133, V184, V196, 0xa9059cbb, V222]

================================

Block 0x279
[0x279:0x289]
---
Predecessors: [0x268]
Successors: [0x28a, 0x28e]
---
0x279 JUMPDEST
0x27a POP
0x27b POP
0x27c POP
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 MLOAD
0x282 SWAP1
0x283 POP
0x284 ISZERO
0x285 ISZERO
0x286 PUSH2 0x28e
0x289 JUMPI
---
0x279: JUMPDEST 
0x27d: V241 = 0x40
0x27f: V242 = M[0x40]
0x281: V243 = M[V242]
0x284: V244 = ISZERO V243
0x285: V245 = ISZERO V244
0x286: V246 = 0x28e
0x289: JUMPI 0x28e V245
---
Entry stack: [V13, 0x139, V104, V104, V133, V184, V196, 0xa9059cbb, V222]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x139, V104, V104, V133, V184]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x279]
Successors: []
---
0x28a PUSH1 0x0
0x28c DUP1
0x28d REVERT
---
0x28a: V247 = 0x0
0x28d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x139, V104, V104, V133, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139, V104, V104, V133, V184]

================================

Block 0x28e
[0x28e:0x2d2]
---
Predecessors: [0x279]
Successors: [0x2d3]
---
0x28e JUMPDEST
0x28f PUSH32 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
0x2b0 DUP5
0x2b1 DUP3
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 PUSH1 0x1
0x2b7 PUSH1 0xa0
0x2b9 PUSH1 0x2
0x2bb EXP
0x2bc SUB
0x2bd SWAP1
0x2be SWAP3
0x2bf AND
0x2c0 DUP3
0x2c1 MSTORE
0x2c2 PUSH1 0x20
0x2c4 DUP3
0x2c5 ADD
0x2c6 MSTORE
0x2c7 PUSH1 0x40
0x2c9 SWAP1
0x2ca DUP2
0x2cb ADD
0x2cc SWAP1
0x2cd MLOAD
0x2ce DUP1
0x2cf SWAP2
0x2d0 SUB
0x2d1 SWAP1
0x2d2 LOG1
---
0x28e: JUMPDEST 
0x28f: V248 = 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
0x2b2: V249 = 0x40
0x2b4: V250 = M[0x40]
0x2b5: V251 = 0x1
0x2b7: V252 = 0xa0
0x2b9: V253 = 0x2
0x2bb: V254 = EXP 0x2 0xa0
0x2bc: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bf: V256 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x2c1: M[V250] = V256
0x2c2: V257 = 0x20
0x2c5: V258 = ADD V250 0x20
0x2c6: M[V258] = V184
0x2c7: V259 = 0x40
0x2cb: V260 = ADD 0x40 V250
0x2cd: V261 = M[0x40]
0x2d0: V262 = SUB V260 V261
0x2d2: LOG V261 V262 0x9401e4e79c19cbe2bd774cb70a94ba660e6718be1bac1298ab3b07f454a60821
---
Entry stack: [V13, 0x139, V104, V104, V133, V184]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x139, V104, V104, V133, V184]

================================

Block 0x2d3
[0x2d3:0x2d8]
---
Predecessors: [0x1fe, 0x28e]
Successors: [0x139]
---
0x2d3 JUMPDEST
0x2d4 POP
0x2d5 POP
0x2d6 POP
0x2d7 POP
0x2d8 JUMP
---
0x2d3: JUMPDEST 
0x2d8: JUMP 0x139
---
Entry stack: [V13, 0x139, V104, V104, V133, V184]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x2d9
[0x2d9:0x309]
---
Predecessors: [0x146]
Successors: [0x30a, 0x30e]
---
0x2d9 JUMPDEST
0x2da PUSH1 0x0
0x2dc SLOAD
0x2dd PUSH1 0x1
0x2df PUSH1 0xa0
0x2e1 PUSH1 0x2
0x2e3 EXP
0x2e4 SUB
0x2e5 SWAP1
0x2e6 DUP2
0x2e7 AND
0x2e8 SWAP1
0x2e9 ADDRESS
0x2ea AND
0x2eb BALANCE
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef PUSH1 0x0
0x2f1 PUSH1 0x40
0x2f3 MLOAD
0x2f4 DUP1
0x2f5 DUP4
0x2f6 SUB
0x2f7 DUP2
0x2f8 DUP6
0x2f9 DUP8
0x2fa PUSH2 0x8796
0x2fd GAS
0x2fe SUB
0x2ff CALL
0x300 SWAP3
0x301 POP
0x302 POP
0x303 POP
0x304 ISZERO
0x305 ISZERO
0x306 PUSH2 0x30e
0x309 JUMPI
---
0x2d9: JUMPDEST 
0x2da: V263 = 0x0
0x2dc: V264 = S[0x0]
0x2dd: V265 = 0x1
0x2df: V266 = 0xa0
0x2e1: V267 = 0x2
0x2e3: V268 = EXP 0x2 0xa0
0x2e4: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e7: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x2e9: V271 = ADDRESS
0x2ea: V272 = AND V271 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V273 = BALANCE V272
0x2ec: V274 = 0x40
0x2ee: V275 = M[0x40]
0x2ef: V276 = 0x0
0x2f1: V277 = 0x40
0x2f3: V278 = M[0x40]
0x2f6: V279 = SUB V275 V278
0x2fa: V280 = 0x8796
0x2fd: V281 = GAS
0x2fe: V282 = SUB V281 0x8796
0x2ff: V283 = CALL V282 V270 V273 V278 V279 V278 0x0
0x304: V284 = ISZERO V283
0x305: V285 = ISZERO V284
0x306: V286 = 0x30e
0x309: JUMPI 0x30e V285
---
Entry stack: [V13, 0x139]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139]

================================

Block 0x30a
[0x30a:0x30d]
---
Predecessors: [0x2d9]
Successors: []
---
0x30a PUSH1 0x0
0x30c DUP1
0x30d REVERT
---
0x30a: V287 = 0x0
0x30d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x139]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x139]

================================

Block 0x30e
[0x30e:0x30f]
---
Predecessors: [0x2d9]
Successors: [0x139]
---
0x30e JUMPDEST
0x30f JUMP
---
0x30e: JUMPDEST 
0x30f: JUMP 0x139
---
Entry stack: [V13, 0x139]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x310
[0x310:0x33f]
---
Predecessors: []
Successors: []
---
0x310 STOP
0x311 LOG1
0x312 PUSH6 0x627a7a723058
0x319 SHA3
0x31a MISSING 0xa6
0x31b MISSING 0xb6
0x31c GT
0x31d PUSH25 0xcc9f27c0f16522b572583d67a89a7cea9f0d74293c1771a826
0x337 MISSING 0xc
0x338 CODESIZE
0x339 PUSH6 0x29
---
0x310: STOP 
0x311: LOG S0 S1 S2
0x312: V288 = 0x627a7a723058
0x319: V289 = SHA3 0x627a7a723058 S3
0x31a: MISSING 0xa6
0x31b: MISSING 0xb6
0x31c: V290 = GT S0 S1
0x31d: V291 = 0xcc9f27c0f16522b572583d67a89a7cea9f0d74293c1771a826
0x337: MISSING 0xc
0x338: V292 = CODESIZE
0x339: V293 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V289, 0xcc9f27c0f16522b572583d67a89a7cea9f0d74293c1771a826, V290, 0x29, V292]
Exit stack: []

================================

Function 0:
Public function signature: 0x821de3
Entry block: 0xeb
Exit block: 0xfe
Body: 0xeb, 0xf2, 0xf6, 0xfe, 0x14e

Function 1:
Public function signature: 0x3ef13367
Entry block: 0x11a
Exit block: 0x28a
Body: 0x11a, 0x121, 0x125, 0x139, 0x15d, 0x179, 0x17d, 0x1d6, 0x1da, 0x1e7, 0x1eb, 0x1fe, 0x202, 0x264, 0x268, 0x275, 0x279, 0x28a, 0x28e, 0x2d3

Function 2:
Public function signature: 0x6b9f96ea
Entry block: 0x13b
Exit block: 0x139
Body: 0x139, 0x13b, 0x142, 0x146, 0x2d9, 0x30a, 0x30e

Function 3:
Public fallback function
Entry block: 0x3c
Exit block: 0x80
Body: 0x3c, 0x7c, 0x80

