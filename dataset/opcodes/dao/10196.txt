Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4e2c7ca2
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4e2c7ca2
0x3c: V13 = EQ 0x4e2c7ca2 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb3]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0xb3
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0xb3
0x4b: JUMPI 0xb3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x108]
---
0x4c DUP1
0x4d PUSH4 0xbe040fb0
0x52 EQ
0x53 PUSH2 0x108
0x56 JUMPI
---
0x4d: V18 = 0xbe040fb0
0x52: V19 = EQ 0xbe040fb0 V11
0x53: V20 = 0x108
0x56: JUMPI 0x108 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x11d]
---
0x57 DUP1
0x58 PUSH4 0xd6febde8
0x5d EQ
0x5e PUSH2 0x11d
0x61 JUMPI
---
0x58: V21 = 0xd6febde8
0x5d: V22 = EQ 0xd6febde8 V11
0x5e: V23 = 0x11d
0x61: JUMPI 0x11d V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x13e]
---
0x62 DUP1
0x63 PUSH4 0xda4e481d
0x68 EQ
0x69 PUSH2 0x13e
0x6c JUMPI
---
0x63: V24 = 0xda4e481d
0x68: V25 = EQ 0xda4e481d V11
0x69: V26 = 0x13e
0x6c: JUMPI 0x13e V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x193]
---
0x6d DUP1
0x6e PUSH4 0xf2f4eb26
0x73 EQ
0x74 PUSH2 0x193
0x77 JUMPI
---
0x6e: V27 = 0xf2f4eb26
0x73: V28 = EQ 0xf2f4eb26 V11
0x74: V29 = 0x193
0x77: JUMPI 0x193 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0xb0]
---
Predecessors: [0x7a]
Successors: [0x1e8]
---
0x85 JUMPDEST
0x86 PUSH2 0xb1
0x89 PUSH1 0x4
0x8b DUP1
0x8c DUP1
0x8d CALLDATALOAD
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 SWAP1
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 SWAP1
0xa9 SWAP2
0xaa SWAP1
0xab POP
0xac POP
0xad PUSH2 0x1e8
0xb0 JUMP
---
0x85: JUMPDEST 
0x86: V34 = 0xb1
0x89: V35 = 0x4
0x8d: V36 = CALLDATALOAD 0x4
0x8e: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xa5: V39 = 0x20
0xa7: V40 = ADD 0x20 0x4
0xad: V41 = 0x1e8
0xb0: JUMP 0x1e8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb1, V38]
Exit stack: [V11, 0xb1, V38]

================================

Block 0xb1
[0xb1:0xb2]
---
Predecessors: [0x243]
Successors: []
---
0xb1 JUMPDEST
0xb2 STOP
---
0xb1: JUMPDEST 
0xb2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb3
[0xb3:0xb9]
---
Predecessors: [0x41]
Successors: [0xba, 0xbe]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb3: JUMPDEST 
0xb4: V42 = CALLVALUE
0xb5: V43 = ISZERO V42
0xb6: V44 = 0xbe
0xb9: JUMPI 0xbe V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb3]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V45 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc5]
---
Predecessors: [0xb3]
Successors: [0x2ea]
---
0xbe JUMPDEST
0xbf PUSH2 0xc6
0xc2 PUSH2 0x2ea
0xc5 JUMP
---
0xbe: JUMPDEST 
0xbf: V46 = 0xc6
0xc2: V47 = 0x2ea
0xc5: JUMP 0x2ea
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V11, 0xc6]

================================

Block 0xc6
[0xc6:0x107]
---
Predecessors: [0x2ea]
Successors: []
---
0xc6 JUMPDEST
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb DUP3
0xcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1 AND
0xe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7 AND
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP2
0xfe POP
0xff POP
0x100 PUSH1 0x40
0x102 MLOAD
0x103 DUP1
0x104 SWAP2
0x105 SUB
0x106 SWAP1
0x107 RETURN
---
0xc6: JUMPDEST 
0xc7: V48 = 0x40
0xc9: V49 = M[0x40]
0xcc: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0xe2: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xf9: M[V49] = V53
0xfa: V54 = 0x20
0xfc: V55 = ADD 0x20 V49
0x100: V56 = 0x40
0x102: V57 = M[0x40]
0x105: V58 = SUB V55 V57
0x107: RETURN V57 V58
---
Entry stack: [V11, 0xc6, V165]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc6]

================================

Block 0x108
[0x108:0x10e]
---
Predecessors: [0x4c]
Successors: [0x10f, 0x113]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0x108: JUMPDEST 
0x109: V59 = CALLVALUE
0x10a: V60 = ISZERO V59
0x10b: V61 = 0x113
0x10e: JUMPI 0x113 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0x108]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V62 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x108]
Successors: [0x30f]
---
0x113 JUMPDEST
0x114 PUSH2 0x11b
0x117 PUSH2 0x30f
0x11a JUMP
---
0x113: JUMPDEST 
0x114: V63 = 0x11b
0x117: V64 = 0x30f
0x11a: JUMP 0x30f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V11, 0x11b]

================================

Block 0x11b
[0x11b:0x11c]
---
Predecessors: [0x387]
Successors: []
---
0x11b JUMPDEST
0x11c STOP
---
0x11b: JUMPDEST 
0x11c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11d
[0x11d:0x13b]
---
Predecessors: [0x57]
Successors: [0x389]
---
0x11d JUMPDEST
0x11e PUSH2 0x13c
0x121 PUSH1 0x4
0x123 DUP1
0x124 DUP1
0x125 CALLDATALOAD
0x126 SWAP1
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP1
0x12b SWAP2
0x12c SWAP1
0x12d DUP1
0x12e CALLDATALOAD
0x12f SWAP1
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP1
0x134 SWAP2
0x135 SWAP1
0x136 POP
0x137 POP
0x138 PUSH2 0x389
0x13b JUMP
---
0x11d: JUMPDEST 
0x11e: V65 = 0x13c
0x121: V66 = 0x4
0x125: V67 = CALLDATALOAD 0x4
0x127: V68 = 0x20
0x129: V69 = ADD 0x20 0x4
0x12e: V70 = CALLDATALOAD 0x24
0x130: V71 = 0x20
0x132: V72 = ADD 0x20 0x24
0x138: V73 = 0x389
0x13b: JUMP 0x389
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x13c, V67, V70]
Exit stack: [V11, 0x13c, V67, V70]

================================

Block 0x13c
[0x13c:0x13d]
---
Predecessors: [0x773]
Successors: []
---
0x13c JUMPDEST
0x13d STOP
---
0x13c: JUMPDEST 
0x13d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x62]
Successors: [0x145, 0x149]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V74 = CALLVALUE
0x140: V75 = ISZERO V74
0x141: V76 = 0x149
0x144: JUMPI 0x149 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13e]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V77 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x149
[0x149:0x150]
---
Predecessors: [0x13e]
Successors: [0x778]
---
0x149 JUMPDEST
0x14a PUSH2 0x151
0x14d PUSH2 0x778
0x150 JUMP
---
0x149: JUMPDEST 
0x14a: V78 = 0x151
0x14d: V79 = 0x778
0x150: JUMP 0x778
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x151]
Exit stack: [V11, 0x151]

================================

Block 0x151
[0x151:0x192]
---
Predecessors: [0x778]
Successors: []
---
0x151 JUMPDEST
0x152 PUSH1 0x40
0x154 MLOAD
0x155 DUP1
0x156 DUP3
0x157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16c AND
0x16d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x182 AND
0x183 DUP2
0x184 MSTORE
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP2
0x189 POP
0x18a POP
0x18b PUSH1 0x40
0x18d MLOAD
0x18e DUP1
0x18f SWAP2
0x190 SUB
0x191 SWAP1
0x192 RETURN
---
0x151: JUMPDEST 
0x152: V80 = 0x40
0x154: V81 = M[0x40]
0x157: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x16d: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x182: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x184: M[V81] = V85
0x185: V86 = 0x20
0x187: V87 = ADD 0x20 V81
0x18b: V88 = 0x40
0x18d: V89 = M[0x40]
0x190: V90 = SUB V87 V89
0x192: RETURN V89 V90
---
Entry stack: [V11, 0x151, V435]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x151]

================================

Block 0x193
[0x193:0x199]
---
Predecessors: [0x6d]
Successors: [0x19a, 0x19e]
---
0x193 JUMPDEST
0x194 CALLVALUE
0x195 ISZERO
0x196 PUSH2 0x19e
0x199 JUMPI
---
0x193: JUMPDEST 
0x194: V91 = CALLVALUE
0x195: V92 = ISZERO V91
0x196: V93 = 0x19e
0x199: JUMPI 0x19e V92
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19a
[0x19a:0x19d]
---
Predecessors: [0x193]
Successors: []
---
0x19a PUSH1 0x0
0x19c DUP1
0x19d REVERT
---
0x19a: V94 = 0x0
0x19d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19e
[0x19e:0x1a5]
---
Predecessors: [0x193]
Successors: [0x79e]
---
0x19e JUMPDEST
0x19f PUSH2 0x1a6
0x1a2 PUSH2 0x79e
0x1a5 JUMP
---
0x19e: JUMPDEST 
0x19f: V95 = 0x1a6
0x1a2: V96 = 0x79e
0x1a5: JUMP 0x79e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1a6]
Exit stack: [V11, 0x1a6]

================================

Block 0x1a6
[0x1a6:0x1e7]
---
Predecessors: [0x79e]
Successors: []
---
0x1a6 JUMPDEST
0x1a7 PUSH1 0x40
0x1a9 MLOAD
0x1aa DUP1
0x1ab DUP3
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 AND
0x1d8 DUP2
0x1d9 MSTORE
0x1da PUSH1 0x20
0x1dc ADD
0x1dd SWAP2
0x1de POP
0x1df POP
0x1e0 PUSH1 0x40
0x1e2 MLOAD
0x1e3 DUP1
0x1e4 SWAP2
0x1e5 SUB
0x1e6 SWAP1
0x1e7 RETURN
---
0x1a6: JUMPDEST 
0x1a7: V97 = 0x40
0x1a9: V98 = M[0x40]
0x1ac: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x1c2: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1d9: M[V98] = V102
0x1da: V103 = 0x20
0x1dc: V104 = ADD 0x20 V98
0x1e0: V105 = 0x40
0x1e2: V106 = M[0x40]
0x1e5: V107 = SUB V104 V106
0x1e7: RETURN V106 V107
---
Entry stack: [V11, 0x1a6, V443]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a6]

================================

Block 0x1e8
[0x1e8:0x23e]
---
Predecessors: [0x85]
Successors: [0x23f, 0x243]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x0
0x1eb DUP1
0x1ec SWAP1
0x1ed SLOAD
0x1ee SWAP1
0x1ef PUSH2 0x100
0x1f2 EXP
0x1f3 SWAP1
0x1f4 DIV
0x1f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20a AND
0x20b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x220 AND
0x221 CALLER
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 AND
0x238 EQ
0x239 ISZERO
0x23a ISZERO
0x23b PUSH2 0x243
0x23e JUMPI
---
0x1e8: JUMPDEST 
0x1e9: V108 = 0x0
0x1ed: V109 = S[0x0]
0x1ef: V110 = 0x100
0x1f2: V111 = EXP 0x100 0x0
0x1f4: V112 = DIV V109 0x1
0x1f5: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x20b: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x220: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x221: V117 = CALLER
0x222: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x238: V120 = EQ V119 V116
0x239: V121 = ISZERO V120
0x23a: V122 = ISZERO V121
0x23b: V123 = 0x243
0x23e: JUMPI 0x243 V122
---
Entry stack: [V11, 0xb1, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb1, V38]

================================

Block 0x23f
[0x23f:0x242]
---
Predecessors: [0x1e8]
Successors: []
---
0x23f PUSH1 0x0
0x241 DUP1
0x242 REVERT
---
0x23f: V124 = 0x0
0x242: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb1, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb1, V38]

================================

Block 0x243
[0x243:0x2e9]
---
Predecessors: [0x1e8]
Successors: [0xb1]
---
0x243 JUMPDEST
0x244 DUP1
0x245 PUSH1 0x3
0x247 PUSH1 0x0
0x249 PUSH2 0x100
0x24c EXP
0x24d DUP2
0x24e SLOAD
0x24f DUP2
0x250 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x265 MUL
0x266 NOT
0x267 AND
0x268 SWAP1
0x269 DUP4
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 MUL
0x281 OR
0x282 SWAP1
0x283 SSTORE
0x284 POP
0x285 PUSH1 0x3
0x287 PUSH1 0x0
0x289 SWAP1
0x28a SLOAD
0x28b SWAP1
0x28c PUSH2 0x100
0x28f EXP
0x290 SWAP1
0x291 DIV
0x292 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a7 AND
0x2a8 PUSH1 0x4
0x2aa PUSH1 0x0
0x2ac PUSH2 0x100
0x2af EXP
0x2b0 DUP2
0x2b1 SLOAD
0x2b2 DUP2
0x2b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c8 MUL
0x2c9 NOT
0x2ca AND
0x2cb SWAP1
0x2cc DUP4
0x2cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e2 AND
0x2e3 MUL
0x2e4 OR
0x2e5 SWAP1
0x2e6 SSTORE
0x2e7 POP
0x2e8 POP
0x2e9 JUMP
---
0x243: JUMPDEST 
0x245: V125 = 0x3
0x247: V126 = 0x0
0x249: V127 = 0x100
0x24c: V128 = EXP 0x100 0x0
0x24e: V129 = S[0x3]
0x250: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x265: V131 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x266: V132 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x267: V133 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V129
0x26a: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x280: V136 = MUL V135 0x1
0x281: V137 = OR V136 V133
0x283: S[0x3] = V137
0x285: V138 = 0x3
0x287: V139 = 0x0
0x28a: V140 = S[0x3]
0x28c: V141 = 0x100
0x28f: V142 = EXP 0x100 0x0
0x291: V143 = DIV V140 0x1
0x292: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x2a8: V146 = 0x4
0x2aa: V147 = 0x0
0x2ac: V148 = 0x100
0x2af: V149 = EXP 0x100 0x0
0x2b1: V150 = S[0x4]
0x2b3: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c8: V152 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2c9: V153 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V154 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V150
0x2cd: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x2e3: V157 = MUL V156 0x1
0x2e4: V158 = OR V157 V154
0x2e6: S[0x4] = V158
0x2e9: JUMP 0xb1
---
Entry stack: [V11, 0xb1, V38]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ea
[0x2ea:0x30e]
---
Predecessors: [0xbe]
Successors: [0xc6]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee SWAP1
0x2ef SLOAD
0x2f0 SWAP1
0x2f1 PUSH2 0x100
0x2f4 EXP
0x2f5 SWAP1
0x2f6 DIV
0x2f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30c AND
0x30d DUP2
0x30e JUMP
---
0x2ea: JUMPDEST 
0x2eb: V159 = 0x0
0x2ef: V160 = S[0x0]
0x2f1: V161 = 0x100
0x2f4: V162 = EXP 0x100 0x0
0x2f6: V163 = DIV V160 0x1
0x2f7: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x30e: JUMP 0xc6
---
Entry stack: [V11, 0xc6]
Stack pops: 1
Stack additions: [S0, V165]
Exit stack: [V11, 0xc6, V165]

================================

Block 0x30f
[0x30f:0x382]
---
Predecessors: [0x113]
Successors: [0x383, 0x387]
---
0x30f JUMPDEST
0x310 PUSH1 0x0
0x312 DUP1
0x313 SWAP1
0x314 SLOAD
0x315 SWAP1
0x316 PUSH2 0x100
0x319 EXP
0x31a SWAP1
0x31b DIV
0x31c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x331 AND
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 AND
0x348 PUSH2 0x8fc
0x34b ADDRESS
0x34c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x361 AND
0x362 BALANCE
0x363 SWAP1
0x364 DUP2
0x365 ISZERO
0x366 MUL
0x367 SWAP1
0x368 PUSH1 0x40
0x36a MLOAD
0x36b PUSH1 0x0
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 DUP4
0x372 SUB
0x373 DUP2
0x374 DUP6
0x375 DUP9
0x376 DUP9
0x377 CALL
0x378 SWAP4
0x379 POP
0x37a POP
0x37b POP
0x37c POP
0x37d ISZERO
0x37e ISZERO
0x37f PUSH2 0x387
0x382 JUMPI
---
0x30f: JUMPDEST 
0x310: V166 = 0x0
0x314: V167 = S[0x0]
0x316: V168 = 0x100
0x319: V169 = EXP 0x100 0x0
0x31b: V170 = DIV V167 0x1
0x31c: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x331: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x332: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x348: V175 = 0x8fc
0x34b: V176 = ADDRESS
0x34c: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x361: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x362: V179 = BALANCE V178
0x365: V180 = ISZERO V179
0x366: V181 = MUL V180 0x8fc
0x368: V182 = 0x40
0x36a: V183 = M[0x40]
0x36b: V184 = 0x0
0x36d: V185 = 0x40
0x36f: V186 = M[0x40]
0x372: V187 = SUB V183 V186
0x377: V188 = CALL V181 V174 V179 V186 V187 V186 0x0
0x37d: V189 = ISZERO V188
0x37e: V190 = ISZERO V189
0x37f: V191 = 0x387
0x382: JUMPI 0x387 V190
---
Entry stack: [V11, 0x11b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11b]

================================

Block 0x383
[0x383:0x386]
---
Predecessors: [0x30f]
Successors: []
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
---
0x383: V192 = 0x0
0x386: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11b]

================================

Block 0x387
[0x387:0x388]
---
Predecessors: [0x30f]
Successors: [0x11b]
---
0x387 JUMPDEST
0x388 JUMP
---
0x387: JUMPDEST 
0x388: JUMP 0x11b
---
Entry stack: [V11, 0x11b]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x389
[0x389:0x40b]
---
Predecessors: [0x11d]
Successors: [0x40c, 0x410]
---
0x389 JUMPDEST
0x38a PUSH1 0x0
0x38c PUSH1 0x4
0x38e PUSH1 0x0
0x390 SWAP1
0x391 SLOAD
0x392 SWAP1
0x393 PUSH2 0x100
0x396 EXP
0x397 SWAP1
0x398 DIV
0x399 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ae AND
0x3af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c4 AND
0x3c5 PUSH4 0x8068c757
0x3ca PUSH1 0x40
0x3cc MLOAD
0x3cd DUP2
0x3ce PUSH4 0xffffffff
0x3d3 AND
0x3d4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3f2 MUL
0x3f3 DUP2
0x3f4 MSTORE
0x3f5 PUSH1 0x4
0x3f7 ADD
0x3f8 PUSH1 0x0
0x3fa PUSH1 0x40
0x3fc MLOAD
0x3fd DUP1
0x3fe DUP4
0x3ff SUB
0x400 DUP2
0x401 PUSH1 0x0
0x403 DUP8
0x404 DUP1
0x405 EXTCODESIZE
0x406 ISZERO
0x407 ISZERO
0x408 PUSH2 0x410
0x40b JUMPI
---
0x389: JUMPDEST 
0x38a: V193 = 0x0
0x38c: V194 = 0x4
0x38e: V195 = 0x0
0x391: V196 = S[0x4]
0x393: V197 = 0x100
0x396: V198 = EXP 0x100 0x0
0x398: V199 = DIV V196 0x1
0x399: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ae: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x3af: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x3c5: V204 = 0x8068c757
0x3ca: V205 = 0x40
0x3cc: V206 = M[0x40]
0x3ce: V207 = 0xffffffff
0x3d3: V208 = AND 0xffffffff 0x8068c757
0x3d4: V209 = 0x100000000000000000000000000000000000000000000000000000000
0x3f2: V210 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8068c757
0x3f4: M[V206] = 0x8068c75700000000000000000000000000000000000000000000000000000000
0x3f5: V211 = 0x4
0x3f7: V212 = ADD 0x4 V206
0x3f8: V213 = 0x0
0x3fa: V214 = 0x40
0x3fc: V215 = M[0x40]
0x3ff: V216 = SUB V212 V215
0x401: V217 = 0x0
0x405: V218 = EXTCODESIZE V203
0x406: V219 = ISZERO V218
0x407: V220 = ISZERO V219
0x408: V221 = 0x410
0x40b: JUMPI 0x410 V220
---
Entry stack: [V11, 0x13c, V67, V70]
Stack pops: 0
Stack additions: [0x0, V203, 0x8068c757, V212, 0x0, V215, V216, V215, 0x0, V203]
Exit stack: [V11, 0x13c, V67, V70, 0x0, V203, 0x8068c757, V212, 0x0, V215, V216, V215, 0x0, V203]

================================

Block 0x40c
[0x40c:0x40f]
---
Predecessors: [0x389]
Successors: []
---
0x40c PUSH1 0x0
0x40e DUP1
0x40f REVERT
---
0x40c: V222 = 0x0
0x40f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V67, V70, 0x0, V203, 0x8068c757, V212, 0x0, V215, V216, V215, 0x0, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, 0x0, V203, 0x8068c757, V212, 0x0, V215, V216, V215, 0x0, V203]

================================

Block 0x410
[0x410:0x41c]
---
Predecessors: [0x389]
Successors: [0x41d, 0x421]
---
0x410 JUMPDEST
0x411 PUSH2 0x2c6
0x414 GAS
0x415 SUB
0x416 CALL
0x417 ISZERO
0x418 ISZERO
0x419 PUSH2 0x421
0x41c JUMPI
---
0x410: JUMPDEST 
0x411: V223 = 0x2c6
0x414: V224 = GAS
0x415: V225 = SUB V224 0x2c6
0x416: V226 = CALL V225 V203 0x0 V215 V216 V215 0x0
0x417: V227 = ISZERO V226
0x418: V228 = ISZERO V227
0x419: V229 = 0x421
0x41c: JUMPI 0x421 V228
---
Entry stack: [V11, 0x13c, V67, V70, 0x0, V203, 0x8068c757, V212, 0x0, V215, V216, V215, 0x0, V203]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, 0x0, V203, 0x8068c757, V212]

================================

Block 0x41d
[0x41d:0x420]
---
Predecessors: [0x410]
Successors: []
---
0x41d PUSH1 0x0
0x41f DUP1
0x420 REVERT
---
0x41d: V230 = 0x0
0x420: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V67, V70, 0x0, V203, 0x8068c757, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, 0x0, V203, 0x8068c757, V212]

================================

Block 0x421
[0x421:0x424]
---
Predecessors: [0x410]
Successors: [0x425]
---
0x421 JUMPDEST
0x422 POP
0x423 POP
0x424 POP
---
0x421: JUMPDEST 
---
Entry stack: [V11, 0x13c, V67, V70, 0x0, V203, 0x8068c757, V212]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, 0x0]

================================

Block 0x425
[0x425:0x4d1]
---
Predecessors: [0x421, 0x6f2]
Successors: [0x4d2, 0x4d6]
---
0x425 JUMPDEST
0x426 ADDRESS
0x427 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43c AND
0x43d BALANCE
0x43e PUSH1 0x2
0x440 PUSH1 0x0
0x442 SWAP1
0x443 SLOAD
0x444 SWAP1
0x445 PUSH2 0x100
0x448 EXP
0x449 SWAP1
0x44a DIV
0x44b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x460 AND
0x461 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x476 AND
0x477 PUSH4 0xb9186d7d
0x47c DUP6
0x47d PUSH1 0x0
0x47f PUSH1 0x40
0x481 MLOAD
0x482 PUSH1 0x20
0x484 ADD
0x485 MSTORE
0x486 PUSH1 0x40
0x488 MLOAD
0x489 DUP3
0x48a PUSH4 0xffffffff
0x48f AND
0x490 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4ae MUL
0x4af DUP2
0x4b0 MSTORE
0x4b1 PUSH1 0x4
0x4b3 ADD
0x4b4 DUP1
0x4b5 DUP3
0x4b6 DUP2
0x4b7 MSTORE
0x4b8 PUSH1 0x20
0x4ba ADD
0x4bb SWAP2
0x4bc POP
0x4bd POP
0x4be PUSH1 0x20
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 DUP1
0x4c4 DUP4
0x4c5 SUB
0x4c6 DUP2
0x4c7 PUSH1 0x0
0x4c9 DUP8
0x4ca DUP1
0x4cb EXTCODESIZE
0x4cc ISZERO
0x4cd ISZERO
0x4ce PUSH2 0x4d6
0x4d1 JUMPI
---
0x425: JUMPDEST 
0x426: V231 = ADDRESS
0x427: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x43c: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x43d: V234 = BALANCE V233
0x43e: V235 = 0x2
0x440: V236 = 0x0
0x443: V237 = S[0x2]
0x445: V238 = 0x100
0x448: V239 = EXP 0x100 0x0
0x44a: V240 = DIV V237 0x1
0x44b: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x460: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x461: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x476: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x477: V245 = 0xb9186d7d
0x47d: V246 = 0x0
0x47f: V247 = 0x40
0x481: V248 = M[0x40]
0x482: V249 = 0x20
0x484: V250 = ADD 0x20 V248
0x485: M[V250] = 0x0
0x486: V251 = 0x40
0x488: V252 = M[0x40]
0x48a: V253 = 0xffffffff
0x48f: V254 = AND 0xffffffff 0xb9186d7d
0x490: V255 = 0x100000000000000000000000000000000000000000000000000000000
0x4ae: V256 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb9186d7d
0x4b0: M[V252] = 0xb9186d7d00000000000000000000000000000000000000000000000000000000
0x4b1: V257 = 0x4
0x4b3: V258 = ADD 0x4 V252
0x4b7: M[V258] = V67
0x4b8: V259 = 0x20
0x4ba: V260 = ADD 0x20 V258
0x4be: V261 = 0x20
0x4c0: V262 = 0x40
0x4c2: V263 = M[0x40]
0x4c5: V264 = SUB V260 V263
0x4c7: V265 = 0x0
0x4cb: V266 = EXTCODESIZE V244
0x4cc: V267 = ISZERO V266
0x4cd: V268 = ISZERO V267
0x4ce: V269 = 0x4d6
0x4d1: JUMPI 0x4d6 V268
---
Entry stack: [V11, 0x13c, V67, V70, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V234, V244, 0xb9186d7d, V260, 0x20, V263, V264, V263, 0x0, V244]
Exit stack: [V11, 0x13c, V67, V70, S0, V234, V244, 0xb9186d7d, V260, 0x20, V263, V264, V263, 0x0, V244]

================================

Block 0x4d2
[0x4d2:0x4d5]
---
Predecessors: [0x425]
Successors: []
---
0x4d2 PUSH1 0x0
0x4d4 DUP1
0x4d5 REVERT
---
0x4d2: V270 = 0x0
0x4d5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V67, V70, S10, V234, V244, 0xb9186d7d, V260, 0x20, V263, V264, V263, 0x0, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, S10, V234, V244, 0xb9186d7d, V260, 0x20, V263, V264, V263, 0x0, V244]

================================

Block 0x4d6
[0x4d6:0x4e2]
---
Predecessors: [0x425]
Successors: [0x4e3, 0x4e7]
---
0x4d6 JUMPDEST
0x4d7 PUSH2 0x2c6
0x4da GAS
0x4db SUB
0x4dc CALL
0x4dd ISZERO
0x4de ISZERO
0x4df PUSH2 0x4e7
0x4e2 JUMPI
---
0x4d6: JUMPDEST 
0x4d7: V271 = 0x2c6
0x4da: V272 = GAS
0x4db: V273 = SUB V272 0x2c6
0x4dc: V274 = CALL V273 V244 0x0 V263 V264 V263 0x20
0x4dd: V275 = ISZERO V274
0x4de: V276 = ISZERO V275
0x4df: V277 = 0x4e7
0x4e2: JUMPI 0x4e7 V276
---
Entry stack: [V11, 0x13c, V67, V70, S10, V234, V244, 0xb9186d7d, V260, 0x20, V263, V264, V263, 0x0, V244]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, S10, V234, V244, 0xb9186d7d, V260]

================================

Block 0x4e3
[0x4e3:0x4e6]
---
Predecessors: [0x4d6]
Successors: []
---
0x4e3 PUSH1 0x0
0x4e5 DUP1
0x4e6 REVERT
---
0x4e3: V278 = 0x0
0x4e6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V67, V70, S4, V234, V244, 0xb9186d7d, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, S4, V234, V244, 0xb9186d7d, V260]

================================

Block 0x4e7
[0x4e7:0x4fb]
---
Predecessors: [0x4d6]
Successors: [0x4fc, 0x500]
---
0x4e7 JUMPDEST
0x4e8 POP
0x4e9 POP
0x4ea POP
0x4eb PUSH1 0x40
0x4ed MLOAD
0x4ee DUP1
0x4ef MLOAD
0x4f0 SWAP1
0x4f1 POP
0x4f2 SWAP2
0x4f3 POP
0x4f4 DUP2
0x4f5 LT
0x4f6 DUP1
0x4f7 ISZERO
0x4f8 PUSH2 0x500
0x4fb JUMPI
---
0x4e7: JUMPDEST 
0x4eb: V279 = 0x40
0x4ed: V280 = M[0x40]
0x4ef: V281 = M[V280]
0x4f5: V282 = LT V281 V234
0x4f7: V283 = ISZERO V282
0x4f8: V284 = 0x500
0x4fb: JUMPI 0x500 V283
---
Entry stack: [V11, 0x13c, V67, V70, S4, V234, V244, 0xb9186d7d, V260]
Stack pops: 5
Stack additions: [V281, V282]
Exit stack: [V11, 0x13c, V67, V70, V281, V282]

================================

Block 0x4fc
[0x4fc:0x4ff]
---
Predecessors: [0x4e7]
Successors: [0x500]
---
0x4fc POP
0x4fd DUP2
0x4fe DUP2
0x4ff LT
---
0x4ff: V285 = LT V281 V70
---
Entry stack: [V11, 0x13c, V67, V70, V281, V282]
Stack pops: 3
Stack additions: [S2, S1, V285]
Exit stack: [V11, 0x13c, V67, V70, V281, V285]

================================

Block 0x500
[0x500:0x505]
---
Predecessors: [0x4e7, 0x4fc]
Successors: [0x506, 0x6fb]
---
0x500 JUMPDEST
0x501 ISZERO
0x502 PUSH2 0x6fb
0x505 JUMPI
---
0x500: JUMPDEST 
0x501: V286 = ISZERO S0
0x502: V287 = 0x6fb
0x505: JUMPI 0x6fb V286
---
Entry stack: [V11, 0x13c, V67, V70, V281, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281]

================================

Block 0x506
[0x506:0x5a7]
---
Predecessors: [0x500]
Successors: [0x5a8, 0x5ac]
---
0x506 PUSH1 0x2
0x508 PUSH1 0x0
0x50a SWAP1
0x50b SLOAD
0x50c SWAP1
0x50d PUSH2 0x100
0x510 EXP
0x511 SWAP1
0x512 DIV
0x513 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x528 AND
0x529 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53e AND
0x53f PUSH4 0xefef39a1
0x544 ADDRESS
0x545 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55a AND
0x55b BALANCE
0x55c DUP6
0x55d PUSH1 0x40
0x55f MLOAD
0x560 DUP4
0x561 PUSH4 0xffffffff
0x566 AND
0x567 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x585 MUL
0x586 DUP2
0x587 MSTORE
0x588 PUSH1 0x4
0x58a ADD
0x58b DUP1
0x58c DUP3
0x58d DUP2
0x58e MSTORE
0x58f PUSH1 0x20
0x591 ADD
0x592 SWAP2
0x593 POP
0x594 POP
0x595 PUSH1 0x0
0x597 PUSH1 0x40
0x599 MLOAD
0x59a DUP1
0x59b DUP4
0x59c SUB
0x59d DUP2
0x59e DUP6
0x59f DUP9
0x5a0 DUP1
0x5a1 EXTCODESIZE
0x5a2 ISZERO
0x5a3 ISZERO
0x5a4 PUSH2 0x5ac
0x5a7 JUMPI
---
0x506: V288 = 0x2
0x508: V289 = 0x0
0x50b: V290 = S[0x2]
0x50d: V291 = 0x100
0x510: V292 = EXP 0x100 0x0
0x512: V293 = DIV V290 0x1
0x513: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x528: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x529: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x53e: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x53f: V298 = 0xefef39a1
0x544: V299 = ADDRESS
0x545: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x55a: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x55b: V302 = BALANCE V301
0x55d: V303 = 0x40
0x55f: V304 = M[0x40]
0x561: V305 = 0xffffffff
0x566: V306 = AND 0xffffffff 0xefef39a1
0x567: V307 = 0x100000000000000000000000000000000000000000000000000000000
0x585: V308 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xefef39a1
0x587: M[V304] = 0xefef39a100000000000000000000000000000000000000000000000000000000
0x588: V309 = 0x4
0x58a: V310 = ADD 0x4 V304
0x58e: M[V310] = V67
0x58f: V311 = 0x20
0x591: V312 = ADD 0x20 V310
0x595: V313 = 0x0
0x597: V314 = 0x40
0x599: V315 = M[0x40]
0x59c: V316 = SUB V312 V315
0x5a1: V317 = EXTCODESIZE V297
0x5a2: V318 = ISZERO V317
0x5a3: V319 = ISZERO V318
0x5a4: V320 = 0x5ac
0x5a7: JUMPI 0x5ac V319
---
Entry stack: [V11, 0x13c, V67, V70, V281]
Stack pops: 3
Stack additions: [S2, S1, S0, V297, 0xefef39a1, V302, V312, 0x0, V315, V316, V315, V302, V297]
Exit stack: [V11, 0x13c, V67, V70, V281, V297, 0xefef39a1, V302, V312, 0x0, V315, V316, V315, V302, V297]

================================

Block 0x5a8
[0x5a8:0x5ab]
---
Predecessors: [0x506]
Successors: []
---
0x5a8 PUSH1 0x0
0x5aa DUP1
0x5ab REVERT
---
0x5a8: V321 = 0x0
0x5ab: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V67, V70, V281, V297, 0xefef39a1, V302, V312, 0x0, V315, V316, V315, V302, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281, V297, 0xefef39a1, V302, V312, 0x0, V315, V316, V315, V302, V297]

================================

Block 0x5ac
[0x5ac:0x5b8]
---
Predecessors: [0x506]
Successors: [0x5b9, 0x5bd]
---
0x5ac JUMPDEST
0x5ad PUSH2 0x25ee
0x5b0 GAS
0x5b1 SUB
0x5b2 CALL
0x5b3 ISZERO
0x5b4 ISZERO
0x5b5 PUSH2 0x5bd
0x5b8 JUMPI
---
0x5ac: JUMPDEST 
0x5ad: V322 = 0x25ee
0x5b0: V323 = GAS
0x5b1: V324 = SUB V323 0x25ee
0x5b2: V325 = CALL V324 V297 V302 V315 V316 V315 0x0
0x5b3: V326 = ISZERO V325
0x5b4: V327 = ISZERO V326
0x5b5: V328 = 0x5bd
0x5b8: JUMPI 0x5bd V327
---
Entry stack: [V11, 0x13c, V67, V70, V281, V297, 0xefef39a1, V302, V312, 0x0, V315, V316, V315, V302, V297]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281, V297, 0xefef39a1, V302, V312]

================================

Block 0x5b9
[0x5b9:0x5bc]
---
Predecessors: [0x5ac]
Successors: []
---
0x5b9 PUSH1 0x0
0x5bb DUP1
0x5bc REVERT
---
0x5b9: V329 = 0x0
0x5bc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V67, V70, V281, V297, 0xefef39a1, V302, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281, V297, 0xefef39a1, V302, V312]

================================

Block 0x5bd
[0x5bd:0x635]
---
Predecessors: [0x5ac]
Successors: [0x636, 0x63a]
---
0x5bd JUMPDEST
0x5be POP
0x5bf POP
0x5c0 POP
0x5c1 POP
0x5c2 PUSH1 0x3
0x5c4 PUSH1 0x0
0x5c6 SWAP1
0x5c7 SLOAD
0x5c8 SWAP1
0x5c9 PUSH2 0x100
0x5cc EXP
0x5cd SWAP1
0x5ce DIV
0x5cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e4 AND
0x5e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fa AND
0x5fb PUSH2 0x8fc
0x5fe ADDRESS
0x5ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x614 AND
0x615 BALANCE
0x616 SWAP1
0x617 DUP2
0x618 ISZERO
0x619 MUL
0x61a SWAP1
0x61b PUSH1 0x40
0x61d MLOAD
0x61e PUSH1 0x0
0x620 PUSH1 0x40
0x622 MLOAD
0x623 DUP1
0x624 DUP4
0x625 SUB
0x626 DUP2
0x627 DUP6
0x628 DUP9
0x629 DUP9
0x62a CALL
0x62b SWAP4
0x62c POP
0x62d POP
0x62e POP
0x62f POP
0x630 ISZERO
0x631 ISZERO
0x632 PUSH2 0x63a
0x635 JUMPI
---
0x5bd: JUMPDEST 
0x5c2: V330 = 0x3
0x5c4: V331 = 0x0
0x5c7: V332 = S[0x3]
0x5c9: V333 = 0x100
0x5cc: V334 = EXP 0x100 0x0
0x5ce: V335 = DIV V332 0x1
0x5cf: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e4: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x5e5: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fa: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x5fb: V340 = 0x8fc
0x5fe: V341 = ADDRESS
0x5ff: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x614: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x615: V344 = BALANCE V343
0x618: V345 = ISZERO V344
0x619: V346 = MUL V345 0x8fc
0x61b: V347 = 0x40
0x61d: V348 = M[0x40]
0x61e: V349 = 0x0
0x620: V350 = 0x40
0x622: V351 = M[0x40]
0x625: V352 = SUB V348 V351
0x62a: V353 = CALL V346 V339 V344 V351 V352 V351 0x0
0x630: V354 = ISZERO V353
0x631: V355 = ISZERO V354
0x632: V356 = 0x63a
0x635: JUMPI 0x63a V355
---
Entry stack: [V11, 0x13c, V67, V70, V281, V297, 0xefef39a1, V302, V312]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281]

================================

Block 0x636
[0x636:0x639]
---
Predecessors: [0x5bd]
Successors: []
---
0x636 PUSH1 0x0
0x638 DUP1
0x639 REVERT
---
0x636: V357 = 0x0
0x639: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V67, V70, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281]

================================

Block 0x63a
[0x63a:0x6dc]
---
Predecessors: [0x5bd]
Successors: [0x6dd, 0x6e1]
---
0x63a JUMPDEST
0x63b PUSH1 0x4
0x63d PUSH1 0x0
0x63f SWAP1
0x640 SLOAD
0x641 SWAP1
0x642 PUSH2 0x100
0x645 EXP
0x646 SWAP1
0x647 DIV
0x648 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65d AND
0x65e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x673 AND
0x674 PUSH4 0xb59a1d37
0x679 ADDRESS
0x67a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68f AND
0x690 BALANCE
0x691 DUP6
0x692 PUSH1 0x40
0x694 MLOAD
0x695 DUP4
0x696 PUSH4 0xffffffff
0x69b AND
0x69c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6ba MUL
0x6bb DUP2
0x6bc MSTORE
0x6bd PUSH1 0x4
0x6bf ADD
0x6c0 DUP1
0x6c1 DUP3
0x6c2 DUP2
0x6c3 MSTORE
0x6c4 PUSH1 0x20
0x6c6 ADD
0x6c7 SWAP2
0x6c8 POP
0x6c9 POP
0x6ca PUSH1 0x0
0x6cc PUSH1 0x40
0x6ce MLOAD
0x6cf DUP1
0x6d0 DUP4
0x6d1 SUB
0x6d2 DUP2
0x6d3 DUP6
0x6d4 DUP9
0x6d5 DUP1
0x6d6 EXTCODESIZE
0x6d7 ISZERO
0x6d8 ISZERO
0x6d9 PUSH2 0x6e1
0x6dc JUMPI
---
0x63a: JUMPDEST 
0x63b: V358 = 0x4
0x63d: V359 = 0x0
0x640: V360 = S[0x4]
0x642: V361 = 0x100
0x645: V362 = EXP 0x100 0x0
0x647: V363 = DIV V360 0x1
0x648: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x65d: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x65e: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x673: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x674: V368 = 0xb59a1d37
0x679: V369 = ADDRESS
0x67a: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x68f: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x690: V372 = BALANCE V371
0x692: V373 = 0x40
0x694: V374 = M[0x40]
0x696: V375 = 0xffffffff
0x69b: V376 = AND 0xffffffff 0xb59a1d37
0x69c: V377 = 0x100000000000000000000000000000000000000000000000000000000
0x6ba: V378 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb59a1d37
0x6bc: M[V374] = 0xb59a1d3700000000000000000000000000000000000000000000000000000000
0x6bd: V379 = 0x4
0x6bf: V380 = ADD 0x4 V374
0x6c3: M[V380] = V67
0x6c4: V381 = 0x20
0x6c6: V382 = ADD 0x20 V380
0x6ca: V383 = 0x0
0x6cc: V384 = 0x40
0x6ce: V385 = M[0x40]
0x6d1: V386 = SUB V382 V385
0x6d6: V387 = EXTCODESIZE V367
0x6d7: V388 = ISZERO V387
0x6d8: V389 = ISZERO V388
0x6d9: V390 = 0x6e1
0x6dc: JUMPI 0x6e1 V389
---
Entry stack: [V11, 0x13c, V67, V70, V281]
Stack pops: 3
Stack additions: [S2, S1, S0, V367, 0xb59a1d37, V372, V382, 0x0, V385, V386, V385, V372, V367]
Exit stack: [V11, 0x13c, V67, V70, V281, V367, 0xb59a1d37, V372, V382, 0x0, V385, V386, V385, V372, V367]

================================

Block 0x6dd
[0x6dd:0x6e0]
---
Predecessors: [0x63a]
Successors: []
---
0x6dd PUSH1 0x0
0x6df DUP1
0x6e0 REVERT
---
0x6dd: V391 = 0x0
0x6e0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V67, V70, V281, V367, 0xb59a1d37, V372, V382, 0x0, V385, V386, V385, V372, V367]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281, V367, 0xb59a1d37, V372, V382, 0x0, V385, V386, V385, V372, V367]

================================

Block 0x6e1
[0x6e1:0x6ed]
---
Predecessors: [0x63a]
Successors: [0x6ee, 0x6f2]
---
0x6e1 JUMPDEST
0x6e2 PUSH2 0x25ee
0x6e5 GAS
0x6e6 SUB
0x6e7 CALL
0x6e8 ISZERO
0x6e9 ISZERO
0x6ea PUSH2 0x6f2
0x6ed JUMPI
---
0x6e1: JUMPDEST 
0x6e2: V392 = 0x25ee
0x6e5: V393 = GAS
0x6e6: V394 = SUB V393 0x25ee
0x6e7: V395 = CALL V394 V367 V372 V385 V386 V385 0x0
0x6e8: V396 = ISZERO V395
0x6e9: V397 = ISZERO V396
0x6ea: V398 = 0x6f2
0x6ed: JUMPI 0x6f2 V397
---
Entry stack: [V11, 0x13c, V67, V70, V281, V367, 0xb59a1d37, V372, V382, 0x0, V385, V386, V385, V372, V367]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281, V367, 0xb59a1d37, V372, V382]

================================

Block 0x6ee
[0x6ee:0x6f1]
---
Predecessors: [0x6e1]
Successors: []
---
0x6ee PUSH1 0x0
0x6f0 DUP1
0x6f1 REVERT
---
0x6ee: V399 = 0x0
0x6f1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V67, V70, V281, V367, 0xb59a1d37, V372, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281, V367, 0xb59a1d37, V372, V382]

================================

Block 0x6f2
[0x6f2:0x6fa]
---
Predecessors: [0x6e1]
Successors: [0x425]
---
0x6f2 JUMPDEST
0x6f3 POP
0x6f4 POP
0x6f5 POP
0x6f6 POP
0x6f7 PUSH2 0x425
0x6fa JUMP
---
0x6f2: JUMPDEST 
0x6f7: V400 = 0x425
0x6fa: JUMP 0x425
---
Entry stack: [V11, 0x13c, V67, V70, V281, V367, 0xb59a1d37, V372, V382]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281]

================================

Block 0x6fb
[0x6fb:0x76e]
---
Predecessors: [0x500]
Successors: [0x76f, 0x773]
---
0x6fb JUMPDEST
0x6fc PUSH1 0x0
0x6fe DUP1
0x6ff SWAP1
0x700 SLOAD
0x701 SWAP1
0x702 PUSH2 0x100
0x705 EXP
0x706 SWAP1
0x707 DIV
0x708 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71d AND
0x71e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x733 AND
0x734 PUSH2 0x8fc
0x737 ADDRESS
0x738 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74d AND
0x74e BALANCE
0x74f SWAP1
0x750 DUP2
0x751 ISZERO
0x752 MUL
0x753 SWAP1
0x754 PUSH1 0x40
0x756 MLOAD
0x757 PUSH1 0x0
0x759 PUSH1 0x40
0x75b MLOAD
0x75c DUP1
0x75d DUP4
0x75e SUB
0x75f DUP2
0x760 DUP6
0x761 DUP9
0x762 DUP9
0x763 CALL
0x764 SWAP4
0x765 POP
0x766 POP
0x767 POP
0x768 POP
0x769 ISZERO
0x76a ISZERO
0x76b PUSH2 0x773
0x76e JUMPI
---
0x6fb: JUMPDEST 
0x6fc: V401 = 0x0
0x700: V402 = S[0x0]
0x702: V403 = 0x100
0x705: V404 = EXP 0x100 0x0
0x707: V405 = DIV V402 0x1
0x708: V406 = 0xffffffffffffffffffffffffffffffffffffffff
0x71d: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x71e: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x733: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x734: V410 = 0x8fc
0x737: V411 = ADDRESS
0x738: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x74d: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x74e: V414 = BALANCE V413
0x751: V415 = ISZERO V414
0x752: V416 = MUL V415 0x8fc
0x754: V417 = 0x40
0x756: V418 = M[0x40]
0x757: V419 = 0x0
0x759: V420 = 0x40
0x75b: V421 = M[0x40]
0x75e: V422 = SUB V418 V421
0x763: V423 = CALL V416 V409 V414 V421 V422 V421 0x0
0x769: V424 = ISZERO V423
0x76a: V425 = ISZERO V424
0x76b: V426 = 0x773
0x76e: JUMPI 0x773 V425
---
Entry stack: [V11, 0x13c, V67, V70, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281]

================================

Block 0x76f
[0x76f:0x772]
---
Predecessors: [0x6fb]
Successors: []
---
0x76f PUSH1 0x0
0x771 DUP1
0x772 REVERT
---
0x76f: V427 = 0x0
0x772: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V67, V70, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V67, V70, V281]

================================

Block 0x773
[0x773:0x777]
---
Predecessors: [0x6fb]
Successors: [0x13c]
---
0x773 JUMPDEST
0x774 POP
0x775 POP
0x776 POP
0x777 JUMP
---
0x773: JUMPDEST 
0x777: JUMP 0x13c
---
Entry stack: [V11, 0x13c, V67, V70, V281]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x778
[0x778:0x79d]
---
Predecessors: [0x149]
Successors: [0x151]
---
0x778 JUMPDEST
0x779 PUSH1 0x4
0x77b PUSH1 0x0
0x77d SWAP1
0x77e SLOAD
0x77f SWAP1
0x780 PUSH2 0x100
0x783 EXP
0x784 SWAP1
0x785 DIV
0x786 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79b AND
0x79c DUP2
0x79d JUMP
---
0x778: JUMPDEST 
0x779: V428 = 0x4
0x77b: V429 = 0x0
0x77e: V430 = S[0x4]
0x780: V431 = 0x100
0x783: V432 = EXP 0x100 0x0
0x785: V433 = DIV V430 0x1
0x786: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x79b: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x79d: JUMP 0x151
---
Entry stack: [V11, 0x151]
Stack pops: 1
Stack additions: [S0, V435]
Exit stack: [V11, 0x151, V435]

================================

Block 0x79e
[0x79e:0x7c3]
---
Predecessors: [0x19e]
Successors: [0x1a6]
---
0x79e JUMPDEST
0x79f PUSH1 0x2
0x7a1 PUSH1 0x0
0x7a3 SWAP1
0x7a4 SLOAD
0x7a5 SWAP1
0x7a6 PUSH2 0x100
0x7a9 EXP
0x7aa SWAP1
0x7ab DIV
0x7ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c1 AND
0x7c2 DUP2
0x7c3 JUMP
---
0x79e: JUMPDEST 
0x79f: V436 = 0x2
0x7a1: V437 = 0x0
0x7a4: V438 = S[0x2]
0x7a6: V439 = 0x100
0x7a9: V440 = EXP 0x100 0x0
0x7ab: V441 = DIV V438 0x1
0x7ac: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c1: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x7c3: JUMP 0x1a6
---
Entry stack: [V11, 0x1a6]
Stack pops: 1
Stack additions: [S0, V443]
Exit stack: [V11, 0x1a6, V443]

================================

Block 0x7c4
[0x7c4:0x7fe]
---
Predecessors: []
Successors: []
---
0x7c4 STOP
0x7c5 LOG1
0x7c6 PUSH6 0x627a7a723058
0x7cd SHA3
0x7ce MISSING 0xc2
0x7cf MISSING 0x5d
0x7d0 SWAP6
0x7d1 MISSING 0x2c
0x7d2 MISSING 0xb3
0x7d3 RETURNDATASIZE
0x7d4 MISSING 0xd6
0x7d5 MISSING 0xa7
0x7d6 PUSH11 0x333a1a6a77ff7a336de787
0x7e2 MISSING 0xa6
0x7e3 MISSING 0xba
0x7e4 MISSING 0xb3
0x7e5 PUSH25 0xdf229d21460bcac30029
---
0x7c4: STOP 
0x7c5: LOG S0 S1 S2
0x7c6: V444 = 0x627a7a723058
0x7cd: V445 = SHA3 0x627a7a723058 S3
0x7ce: MISSING 0xc2
0x7cf: MISSING 0x5d
0x7d1: MISSING 0x2c
0x7d2: MISSING 0xb3
0x7d3: V446 = RETURNDATASIZE
0x7d4: MISSING 0xd6
0x7d5: MISSING 0xa7
0x7d6: V447 = 0x333a1a6a77ff7a336de787
0x7e2: MISSING 0xa6
0x7e3: MISSING 0xba
0x7e4: MISSING 0xb3
0x7e5: V448 = 0xdf229d21460bcac30029
---
Entry stack: []
Stack pops: 0
Stack additions: [V445, S6, S1, S2, S3, S4, S5, S0, V446, 0x333a1a6a77ff7a336de787, 0xdf229d21460bcac30029]
Exit stack: []

================================

Function 0:
Public function signature: 0x4e2c7ca2
Entry block: 0x7a
Exit block: 0xb1
Body: 0x7a, 0x81, 0x85, 0xb1, 0x1e8, 0x23f, 0x243

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xb3
Exit block: 0xc6
Body: 0xb3, 0xba, 0xbe, 0xc6, 0x2ea

Function 2:
Public function signature: 0xbe040fb0
Entry block: 0x108
Exit block: 0x11b
Body: 0x108, 0x10f, 0x113, 0x11b, 0x30f, 0x383, 0x387

Function 3:
Public function signature: 0xd6febde8
Entry block: 0x11d
Exit block: 0x6ee
Body: 0x11d, 0x13c, 0x389, 0x40c, 0x410, 0x41d, 0x421, 0x425, 0x4d2, 0x4d6, 0x4e3, 0x4e7, 0x4fc, 0x500, 0x506, 0x5a8, 0x5ac, 0x5b9, 0x5bd, 0x636, 0x63a, 0x6dd, 0x6e1, 0x6ee, 0x6f2, 0x6fb, 0x76f, 0x773

Function 4:
Public function signature: 0xda4e481d
Entry block: 0x13e
Exit block: 0x151
Body: 0x13e, 0x145, 0x149, 0x151, 0x778

Function 5:
Public function signature: 0xf2f4eb26
Entry block: 0x193
Exit block: 0x1a6
Body: 0x193, 0x19a, 0x19e, 0x1a6, 0x79e

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

