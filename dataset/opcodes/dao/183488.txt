Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x53]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x53
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x53
0xc: JUMPI 0x53 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x109]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x9e69ede
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x109
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x9e69ede
0x22: V15 = EQ V13 0x9e69ede
0x23: V16 = 0x109
0x26: JUMPI 0x109 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x146]
---
0x27 DUP1
0x28 PUSH4 0x4a3b68cc
0x2d EQ
0x2e PUSH2 0x146
0x31 JUMPI
---
0x28: V17 = 0x4a3b68cc
0x2d: V18 = EQ 0x4a3b68cc V13
0x2e: V19 = 0x146
0x31: JUMPI 0x146 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x17b]
---
0x32 DUP1
0x33 PUSH4 0x8fe123d7
0x38 EQ
0x39 PUSH2 0x17b
0x3c JUMPI
---
0x33: V20 = 0x8fe123d7
0x38: V21 = EQ 0x8fe123d7 V13
0x39: V22 = 0x17b
0x3c: JUMPI 0x17b V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x19c]
---
0x3d DUP1
0x3e PUSH4 0xd35ada32
0x43 EQ
0x44 PUSH2 0x19c
0x47 JUMPI
---
0x3e: V23 = 0xd35ada32
0x43: V24 = EQ 0xd35ada32 V13
0x44: V25 = 0x19c
0x47: JUMPI 0x19c V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x1b6]
---
0x48 DUP1
0x49 PUSH4 0xfefa9bb1
0x4e EQ
0x4f PUSH2 0x1b6
0x52 JUMPI
---
0x49: V26 = 0xfefa9bb1
0x4e: V27 = EQ 0xfefa9bb1 V13
0x4f: V28 = 0x1b6
0x52: JUMPI 0x1b6 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x72]
---
Predecessors: [0x0, 0x48]
Successors: [0x73, 0x82]
---
0x53 JUMPDEST
0x54 CALLER
0x55 PUSH1 0x0
0x57 SWAP1
0x58 DUP2
0x59 MSTORE
0x5a PUSH1 0x20
0x5c DUP2
0x5d SWAP1
0x5e MSTORE
0x5f PUSH1 0x40
0x61 SWAP1
0x62 SHA3
0x63 SLOAD
0x64 PUSH1 0x1
0x66 PUSH1 0xa0
0x68 PUSH1 0x2
0x6a EXP
0x6b SUB
0x6c AND
0x6d ISZERO
0x6e ISZERO
0x6f PUSH2 0x82
0x72 JUMPI
---
0x53: JUMPDEST 
0x54: V29 = CALLER
0x55: V30 = 0x0
0x59: M[0x0] = V29
0x5a: V31 = 0x20
0x5e: M[0x20] = 0x0
0x5f: V32 = 0x40
0x62: V33 = SHA3 0x0 0x40
0x63: V34 = S[V33]
0x64: V35 = 0x1
0x66: V36 = 0xa0
0x68: V37 = 0x2
0x6a: V38 = EXP 0x2 0xa0
0x6b: V39 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x6d: V41 = ISZERO V40
0x6e: V42 = ISZERO V41
0x6f: V43 = 0x82
0x72: JUMPI 0x82 V42
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x73
[0x73:0x7c]
---
Predecessors: [0x53]
Successors: [0x1d7]
---
0x73 PUSH2 0x7d
0x76 CALLER
0x77 PUSH1 0x0
0x79 PUSH2 0x1d7
0x7c JUMP
---
0x73: V44 = 0x7d
0x76: V45 = CALLER
0x77: V46 = 0x0
0x79: V47 = 0x1d7
0x7c: JUMP 0x1d7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x7d, V45, 0x0]
Exit stack: [V13, 0x7d, V45, 0x0]

================================

Block 0x7d
[0x7d:0x81]
---
Predecessors: [0x416]
Successors: [0x107]
---
0x7d JUMPDEST
0x7e PUSH2 0x107
0x81 JUMP
---
0x7d: JUMPDEST 
0x7e: V48 = 0x107
0x81: JUMP 0x107
---
Entry stack: [V926]
Stack pops: 0
Stack additions: []
Exit stack: [V926]

================================

Block 0x82
[0x82:0x88]
---
Predecessors: [0x53]
Successors: [0x89, 0xfe]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 ISZERO
0x85 PUSH2 0xfe
0x88 JUMPI
---
0x82: JUMPDEST 
0x83: V49 = CALLVALUE
0x84: V50 = ISZERO V49
0x85: V51 = 0xfe
0x88: JUMPI 0xfe V50
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x89
[0x89:0xfd]
---
Predecessors: [0x82]
Successors: []
---
0x89 PUSH1 0x40
0x8b DUP1
0x8c MLOAD
0x8d PUSH1 0xe5
0x8f PUSH1 0x2
0x91 EXP
0x92 PUSH3 0x461bcd
0x96 MUL
0x97 DUP2
0x98 MSTORE
0x99 PUSH1 0x20
0x9b PUSH1 0x4
0x9d DUP3
0x9e ADD
0x9f MSTORE
0xa0 PUSH1 0x28
0xa2 PUSH1 0x24
0xa4 DUP3
0xa5 ADD
0xa6 MSTORE
0xa7 PUSH32 0x3020657468657220746f206d616e75616c6c79206d616b652061206461696c79
0xc8 PUSH1 0x44
0xca DUP3
0xcb ADD
0xcc MSTORE
0xcd PUSH32 0x207061796d656e74000000000000000000000000000000000000000000000000
0xee PUSH1 0x64
0xf0 DUP3
0xf1 ADD
0xf2 MSTORE
0xf3 SWAP1
0xf4 MLOAD
0xf5 SWAP1
0xf6 DUP2
0xf7 SWAP1
0xf8 SUB
0xf9 PUSH1 0x84
0xfb ADD
0xfc SWAP1
0xfd REVERT
---
0x89: V52 = 0x40
0x8c: V53 = M[0x40]
0x8d: V54 = 0xe5
0x8f: V55 = 0x2
0x91: V56 = EXP 0x2 0xe5
0x92: V57 = 0x461bcd
0x96: V58 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x98: M[V53] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x99: V59 = 0x20
0x9b: V60 = 0x4
0x9e: V61 = ADD V53 0x4
0x9f: M[V61] = 0x20
0xa0: V62 = 0x28
0xa2: V63 = 0x24
0xa5: V64 = ADD V53 0x24
0xa6: M[V64] = 0x28
0xa7: V65 = 0x3020657468657220746f206d616e75616c6c79206d616b652061206461696c79
0xc8: V66 = 0x44
0xcb: V67 = ADD V53 0x44
0xcc: M[V67] = 0x3020657468657220746f206d616e75616c6c79206d616b652061206461696c79
0xcd: V68 = 0x207061796d656e74000000000000000000000000000000000000000000000000
0xee: V69 = 0x64
0xf1: V70 = ADD V53 0x64
0xf2: M[V70] = 0x207061796d656e74000000000000000000000000000000000000000000000000
0xf4: V71 = M[0x40]
0xf8: V72 = SUB V53 V71
0xf9: V73 = 0x84
0xfb: V74 = ADD 0x84 V72
0xfd: REVERT V71 V74
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xfe
[0xfe:0x106]
---
Predecessors: [0x82]
Successors: [0x456]
---
0xfe JUMPDEST
0xff PUSH2 0x107
0x102 CALLER
0x103 PUSH2 0x456
0x106 JUMP
---
0xfe: JUMPDEST 
0xff: V75 = 0x107
0x102: V76 = CALLER
0x103: V77 = 0x456
0x106: JUMP 0x456
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x107, V76]
Exit stack: [V13, 0x107, V76]

================================

Block 0x107
[0x107:0x108]
---
Predecessors: [0x7d, 0x416, 0x5c6, 0x760]
Successors: []
---
0x107 JUMPDEST
0x108 STOP
---
0x107: JUMPDEST 
0x108: STOP 
---
Entry stack: [V926, {0x7d, 0x107}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V926, {0x7d, 0x107}, S1, S0]

================================

Block 0x109
[0x109:0x110]
---
Predecessors: [0xd]
Successors: [0x111, 0x115]
---
0x109 JUMPDEST
0x10a CALLVALUE
0x10b DUP1
0x10c ISZERO
0x10d PUSH2 0x115
0x110 JUMPI
---
0x109: JUMPDEST 
0x10a: V78 = CALLVALUE
0x10c: V79 = ISZERO V78
0x10d: V80 = 0x115
0x110: JUMPI 0x115 V79
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V13, V78]

================================

Block 0x111
[0x111:0x114]
---
Predecessors: [0x109]
Successors: []
---
0x111 PUSH1 0x0
0x113 DUP1
0x114 REVERT
---
0x111: V81 = 0x0
0x114: REVERT 0x0 0x0
---
Entry stack: [V13, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V78]

================================

Block 0x115
[0x115:0x129]
---
Predecessors: [0x109]
Successors: [0x5cb]
---
0x115 JUMPDEST
0x116 POP
0x117 PUSH2 0x12a
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 PUSH1 0x4
0x124 CALLDATALOAD
0x125 AND
0x126 PUSH2 0x5cb
0x129 JUMP
---
0x115: JUMPDEST 
0x117: V82 = 0x12a
0x11a: V83 = 0x1
0x11c: V84 = 0xa0
0x11e: V85 = 0x2
0x120: V86 = EXP 0x2 0xa0
0x121: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x122: V88 = 0x4
0x124: V89 = CALLDATALOAD 0x4
0x125: V90 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x126: V91 = 0x5cb
0x129: JUMP 0x5cb
---
Entry stack: [V13, V78]
Stack pops: 1
Stack additions: [0x12a, V90]
Exit stack: [V13, 0x12a, V90]

================================

Block 0x12a
[0x12a:0x145]
---
Predecessors: [0x5cb]
Successors: []
---
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d DUP1
0x12e MLOAD
0x12f PUSH1 0x1
0x131 PUSH1 0xa0
0x133 PUSH1 0x2
0x135 EXP
0x136 SUB
0x137 SWAP1
0x138 SWAP3
0x139 AND
0x13a DUP3
0x13b MSTORE
0x13c MLOAD
0x13d SWAP1
0x13e DUP2
0x13f SWAP1
0x140 SUB
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP1
0x145 RETURN
---
0x12a: JUMPDEST 
0x12b: V92 = 0x40
0x12e: V93 = M[0x40]
0x12f: V94 = 0x1
0x131: V95 = 0xa0
0x133: V96 = 0x2
0x135: V97 = EXP 0x2 0xa0
0x136: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V99 = AND V468 0xffffffffffffffffffffffffffffffffffffffff
0x13b: M[V93] = V99
0x13c: V100 = M[0x40]
0x140: V101 = SUB V93 V100
0x141: V102 = 0x20
0x143: V103 = ADD 0x20 V101
0x145: RETURN V100 V103
---
Entry stack: [V13, 0x12a, V468]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x12a]

================================

Block 0x146
[0x146:0x14d]
---
Predecessors: [0x27]
Successors: [0x14e, 0x152]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 DUP1
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0x146: JUMPDEST 
0x147: V104 = CALLVALUE
0x149: V105 = ISZERO V104
0x14a: V106 = 0x152
0x14d: JUMPI 0x152 V105
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V13, V104]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x146]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V107 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V13, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V104]

================================

Block 0x152
[0x152:0x166]
---
Predecessors: [0x146]
Successors: [0x5e6]
---
0x152 JUMPDEST
0x153 POP
0x154 PUSH2 0x167
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f PUSH1 0x4
0x161 CALLDATALOAD
0x162 AND
0x163 PUSH2 0x5e6
0x166 JUMP
---
0x152: JUMPDEST 
0x154: V108 = 0x167
0x157: V109 = 0x1
0x159: V110 = 0xa0
0x15b: V111 = 0x2
0x15d: V112 = EXP 0x2 0xa0
0x15e: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V114 = 0x4
0x161: V115 = CALLDATALOAD 0x4
0x162: V116 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x163: V117 = 0x5e6
0x166: JUMP 0x5e6
---
Entry stack: [V13, V104]
Stack pops: 1
Stack additions: [0x167, V116]
Exit stack: [V13, 0x167, V116]

================================

Block 0x167
[0x167:0x17a]
---
Predecessors: [0x5e6]
Successors: []
---
0x167 JUMPDEST
0x168 PUSH1 0x40
0x16a DUP1
0x16b MLOAD
0x16c SWAP2
0x16d ISZERO
0x16e ISZERO
0x16f DUP3
0x170 MSTORE
0x171 MLOAD
0x172 SWAP1
0x173 DUP2
0x174 SWAP1
0x175 SUB
0x176 PUSH1 0x20
0x178 ADD
0x179 SWAP1
0x17a RETURN
---
0x167: JUMPDEST 
0x168: V118 = 0x40
0x16b: V119 = M[0x40]
0x16d: V120 = ISZERO V476
0x16e: V121 = ISZERO V120
0x170: M[V119] = V121
0x171: V122 = M[0x40]
0x175: V123 = SUB V119 V122
0x176: V124 = 0x20
0x178: V125 = ADD 0x20 V123
0x17a: RETURN V122 V125
---
Entry stack: [V13, 0x167, V476]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x167]

================================

Block 0x17b
[0x17b:0x182]
---
Predecessors: [0x32]
Successors: [0x183, 0x187]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d DUP1
0x17e ISZERO
0x17f PUSH2 0x187
0x182 JUMPI
---
0x17b: JUMPDEST 
0x17c: V126 = CALLVALUE
0x17e: V127 = ISZERO V126
0x17f: V128 = 0x187
0x182: JUMPI 0x187 V127
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V126]
Exit stack: [V13, V126]

================================

Block 0x183
[0x183:0x186]
---
Predecessors: [0x17b]
Successors: []
---
0x183 PUSH1 0x0
0x185 DUP1
0x186 REVERT
---
0x183: V129 = 0x0
0x186: REVERT 0x0 0x0
---
Entry stack: [V13, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V126]

================================

Block 0x187
[0x187:0x19b]
---
Predecessors: [0x17b]
Successors: [0x456]
---
0x187 JUMPDEST
0x188 POP
0x189 PUSH2 0x107
0x18c PUSH1 0x1
0x18e PUSH1 0xa0
0x190 PUSH1 0x2
0x192 EXP
0x193 SUB
0x194 PUSH1 0x4
0x196 CALLDATALOAD
0x197 AND
0x198 PUSH2 0x456
0x19b JUMP
---
0x187: JUMPDEST 
0x189: V130 = 0x107
0x18c: V131 = 0x1
0x18e: V132 = 0xa0
0x190: V133 = 0x2
0x192: V134 = EXP 0x2 0xa0
0x193: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V136 = 0x4
0x196: V137 = CALLDATALOAD 0x4
0x197: V138 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x198: V139 = 0x456
0x19b: JUMP 0x456
---
Entry stack: [V13, V126]
Stack pops: 1
Stack additions: [0x107, V138]
Exit stack: [V13, 0x107, V138]

================================

Block 0x19c
[0x19c:0x1b5]
---
Predecessors: [0x3d, 0xc91]
Successors: [0x1d7]
---
0x19c JUMPDEST
0x19d PUSH2 0x107
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 PUSH1 0x4
0x1aa CALLDATALOAD
0x1ab DUP2
0x1ac AND
0x1ad SWAP1
0x1ae PUSH1 0x24
0x1b0 CALLDATALOAD
0x1b1 AND
0x1b2 PUSH2 0x1d7
0x1b5 JUMP
---
0x19c: JUMPDEST 
0x19d: V140 = 0x107
0x1a0: V141 = 0x1
0x1a2: V142 = 0xa0
0x1a4: V143 = 0x2
0x1a6: V144 = EXP 0x2 0xa0
0x1a7: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V146 = 0x4
0x1aa: V147 = CALLDATALOAD 0x4
0x1ac: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x1ae: V149 = 0x24
0x1b0: V150 = CALLDATALOAD 0x24
0x1b1: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V152 = 0x1d7
0x1b5: JUMP 0x1d7
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [0x107, V148, V151]
Exit stack: [S0, 0x107, V148, V151]

================================

Block 0x1b6
[0x1b6:0x1bd]
---
Predecessors: [0x48]
Successors: [0x1be, 0x1c2]
---
0x1b6 JUMPDEST
0x1b7 CALLVALUE
0x1b8 DUP1
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V153 = CALLVALUE
0x1b9: V154 = ISZERO V153
0x1ba: V155 = 0x1c2
0x1bd: JUMPI 0x1c2 V154
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V153]
Exit stack: [V13, V153]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b6]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V156 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V13, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V153]

================================

Block 0x1c2
[0x1c2:0x1d6]
---
Predecessors: [0x1b6]
Successors: [0x5fb]
---
0x1c2 JUMPDEST
0x1c3 POP
0x1c4 PUSH2 0x107
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf PUSH1 0x4
0x1d1 CALLDATALOAD
0x1d2 AND
0x1d3 PUSH2 0x5fb
0x1d6 JUMP
---
0x1c2: JUMPDEST 
0x1c4: V157 = 0x107
0x1c7: V158 = 0x1
0x1c9: V159 = 0xa0
0x1cb: V160 = 0x2
0x1cd: V161 = EXP 0x2 0xa0
0x1ce: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cf: V163 = 0x4
0x1d1: V164 = CALLDATALOAD 0x4
0x1d2: V165 = AND V164 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V166 = 0x5fb
0x1d6: JUMP 0x5fb
---
Entry stack: [V13, V153]
Stack pops: 1
Stack additions: [0x107, V165]
Exit stack: [V13, 0x107, V165]

================================

Block 0x1d7
[0x1d7:0x1f7]
---
Predecessors: [0x73, 0x19c]
Successors: [0x1f8, 0x26d]
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x1
0x1da PUSH1 0xa0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SUB
0x1e0 DUP3
0x1e1 DUP2
0x1e2 AND
0x1e3 PUSH1 0x0
0x1e5 SWAP1
0x1e6 DUP2
0x1e7 MSTORE
0x1e8 PUSH1 0x20
0x1ea DUP2
0x1eb SWAP1
0x1ec MSTORE
0x1ed PUSH1 0x40
0x1ef SWAP1
0x1f0 SHA3
0x1f1 SLOAD
0x1f2 AND
0x1f3 ISZERO
0x1f4 PUSH2 0x26d
0x1f7 JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V167 = 0x1
0x1da: V168 = 0xa0
0x1dc: V169 = 0x2
0x1de: V170 = EXP 0x2 0xa0
0x1df: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1e3: V173 = 0x0
0x1e7: M[0x0] = V172
0x1e8: V174 = 0x20
0x1ec: M[0x20] = 0x0
0x1ed: V175 = 0x40
0x1f0: V176 = SHA3 0x0 0x40
0x1f1: V177 = S[V176]
0x1f2: V178 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V179 = ISZERO V178
0x1f4: V180 = 0x26d
0x1f7: JUMPI 0x26d V179
---
Entry stack: [S3, {0x7d, 0x107}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S3, {0x7d, 0x107}, S1, S0]

================================

Block 0x1f8
[0x1f8:0x26c]
---
Predecessors: [0x1d7]
Successors: []
---
0x1f8 PUSH1 0x40
0x1fa DUP1
0x1fb MLOAD
0x1fc PUSH1 0xe5
0x1fe PUSH1 0x2
0x200 EXP
0x201 PUSH3 0x461bcd
0x205 MUL
0x206 DUP2
0x207 MSTORE
0x208 PUSH1 0x20
0x20a PUSH1 0x4
0x20c DUP3
0x20d ADD
0x20e MSTORE
0x20f PUSH1 0x26
0x211 PUSH1 0x24
0x213 DUP3
0x214 ADD
0x215 MSTORE
0x216 PUSH32 0x54686973207061727469636970616e7420697320616c72656164792072656769
0x237 PUSH1 0x44
0x239 DUP3
0x23a ADD
0x23b MSTORE
0x23c PUSH32 0x7374657265640000000000000000000000000000000000000000000000000000
0x25d PUSH1 0x64
0x25f DUP3
0x260 ADD
0x261 MSTORE
0x262 SWAP1
0x263 MLOAD
0x264 SWAP1
0x265 DUP2
0x266 SWAP1
0x267 SUB
0x268 PUSH1 0x84
0x26a ADD
0x26b SWAP1
0x26c REVERT
---
0x1f8: V181 = 0x40
0x1fb: V182 = M[0x40]
0x1fc: V183 = 0xe5
0x1fe: V184 = 0x2
0x200: V185 = EXP 0x2 0xe5
0x201: V186 = 0x461bcd
0x205: V187 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x207: M[V182] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x208: V188 = 0x20
0x20a: V189 = 0x4
0x20d: V190 = ADD V182 0x4
0x20e: M[V190] = 0x20
0x20f: V191 = 0x26
0x211: V192 = 0x24
0x214: V193 = ADD V182 0x24
0x215: M[V193] = 0x26
0x216: V194 = 0x54686973207061727469636970616e7420697320616c72656164792072656769
0x237: V195 = 0x44
0x23a: V196 = ADD V182 0x44
0x23b: M[V196] = 0x54686973207061727469636970616e7420697320616c72656164792072656769
0x23c: V197 = 0x7374657265640000000000000000000000000000000000000000000000000000
0x25d: V198 = 0x64
0x260: V199 = ADD V182 0x64
0x261: M[V199] = 0x7374657265640000000000000000000000000000000000000000000000000000
0x263: V200 = M[0x40]
0x267: V201 = SUB V182 V200
0x268: V202 = 0x84
0x26a: V203 = ADD 0x84 V201
0x26c: REVERT V200 V203
---
Entry stack: [S3, {0x7d, 0x107}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S3, {0x7d, 0x107}, S1, S0]

================================

Block 0x26d
[0x26d:0x27f]
---
Predecessors: [0x1d7]
Successors: [0x280, 0x28e]
---
0x26d JUMPDEST
0x26e PUSH8 0x63eb89da4ed0000
0x277 CALLVALUE
0x278 LT
0x279 ISZERO
0x27a DUP1
0x27b ISZERO
0x27c PUSH2 0x28e
0x27f JUMPI
---
0x26d: JUMPDEST 
0x26e: V204 = 0x63eb89da4ed0000
0x277: V205 = CALLVALUE
0x278: V206 = LT V205 0x63eb89da4ed0000
0x279: V207 = ISZERO V206
0x27b: V208 = ISZERO V207
0x27c: V209 = 0x28e
0x27f: JUMPI 0x28e V208
---
Entry stack: [S3, {0x7d, 0x107}, S1, S0]
Stack pops: 0
Stack additions: [V207]
Exit stack: [S3, {0x7d, 0x107}, S1, S0, V207]

================================

Block 0x280
[0x280:0x28d]
---
Predecessors: [0x26d]
Successors: [0x28e]
---
0x280 POP
0x281 PUSH9 0xc328093e61ee40000
0x28b CALLVALUE
0x28c GT
0x28d ISZERO
---
0x281: V210 = 0xc328093e61ee40000
0x28b: V211 = CALLVALUE
0x28c: V212 = GT V211 0xc328093e61ee40000
0x28d: V213 = ISZERO V212
---
Entry stack: [S4, {0x7d, 0x107}, S2, S1, V207]
Stack pops: 1
Stack additions: [V213]
Exit stack: [S4, {0x7d, 0x107}, S2, S1, V213]

================================

Block 0x28e
[0x28e:0x294]
---
Predecessors: [0x26d, 0x280]
Successors: [0x295, 0x30a]
---
0x28e JUMPDEST
0x28f ISZERO
0x290 ISZERO
0x291 PUSH2 0x30a
0x294 JUMPI
---
0x28e: JUMPDEST 
0x28f: V214 = ISZERO S0
0x290: V215 = ISZERO V214
0x291: V216 = 0x30a
0x294: JUMPI 0x30a V215
---
Entry stack: [S4, {0x7d, 0x107}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S4, {0x7d, 0x107}, S2, S1]

================================

Block 0x295
[0x295:0x309]
---
Predecessors: [0x28e]
Successors: []
---
0x295 PUSH1 0x40
0x297 DUP1
0x298 MLOAD
0x299 PUSH1 0xe5
0x29b PUSH1 0x2
0x29d EXP
0x29e PUSH3 0x461bcd
0x2a2 MUL
0x2a3 DUP2
0x2a4 MSTORE
0x2a5 PUSH1 0x20
0x2a7 PUSH1 0x4
0x2a9 DUP3
0x2aa ADD
0x2ab MSTORE
0x2ac PUSH1 0x3c
0x2ae PUSH1 0x24
0x2b0 DUP3
0x2b1 ADD
0x2b2 MSTORE
0x2b3 PUSH32 0x4465706f7369742073686f756c64206265206265747765656e20302e34352065
0x2d4 PUSH1 0x44
0x2d6 DUP3
0x2d7 ADD
0x2d8 MSTORE
0x2d9 PUSH32 0x7468657220616e64203232352065746865722028343520646179732900000000
0x2fa PUSH1 0x64
0x2fc DUP3
0x2fd ADD
0x2fe MSTORE
0x2ff SWAP1
0x300 MLOAD
0x301 SWAP1
0x302 DUP2
0x303 SWAP1
0x304 SUB
0x305 PUSH1 0x84
0x307 ADD
0x308 SWAP1
0x309 REVERT
---
0x295: V217 = 0x40
0x298: V218 = M[0x40]
0x299: V219 = 0xe5
0x29b: V220 = 0x2
0x29d: V221 = EXP 0x2 0xe5
0x29e: V222 = 0x461bcd
0x2a2: V223 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x2a4: M[V218] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2a5: V224 = 0x20
0x2a7: V225 = 0x4
0x2aa: V226 = ADD V218 0x4
0x2ab: M[V226] = 0x20
0x2ac: V227 = 0x3c
0x2ae: V228 = 0x24
0x2b1: V229 = ADD V218 0x24
0x2b2: M[V229] = 0x3c
0x2b3: V230 = 0x4465706f7369742073686f756c64206265206265747765656e20302e34352065
0x2d4: V231 = 0x44
0x2d7: V232 = ADD V218 0x44
0x2d8: M[V232] = 0x4465706f7369742073686f756c64206265206265747765656e20302e34352065
0x2d9: V233 = 0x7468657220616e64203232352065746865722028343520646179732900000000
0x2fa: V234 = 0x64
0x2fd: V235 = ADD V218 0x64
0x2fe: M[V235] = 0x7468657220616e64203232352065746865722028343520646179732900000000
0x300: V236 = M[0x40]
0x304: V237 = SUB V218 V236
0x305: V238 = 0x84
0x307: V239 = ADD 0x84 V237
0x309: REVERT V236 V239
---
Entry stack: [S3, {0x7d, 0x107}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S3, {0x7d, 0x107}, S1, S0]

================================

Block 0x30a
[0x30a:0x316]
---
Predecessors: [0x28e]
Successors: [0x7ad]
---
0x30a JUMPDEST
0x30b DUP2
0x30c PUSH1 0x2d
0x30e CALLVALUE
0x30f DIV
0x310 PUSH2 0x317
0x313 PUSH2 0x7ad
0x316 JUMP
---
0x30a: JUMPDEST 
0x30c: V240 = 0x2d
0x30e: V241 = CALLVALUE
0x30f: V242 = DIV V241 0x2d
0x310: V243 = 0x317
0x313: V244 = 0x7ad
0x316: JUMP 0x7ad
---
Entry stack: [S3, {0x7d, 0x107}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, V242, 0x317]
Exit stack: [S3, {0x7d, 0x107}, S1, S0, S1, V242, 0x317]

================================

Block 0x317
[0x317:0x33e]
---
Predecessors: [0x7ad]
Successors: [0x33f, 0x348]
---
0x317 JUMPDEST
0x318 PUSH1 0x1
0x31a PUSH1 0xa0
0x31c PUSH1 0x2
0x31e EXP
0x31f SUB
0x320 SWAP1
0x321 SWAP3
0x322 AND
0x323 DUP3
0x324 MSTORE
0x325 PUSH1 0x20
0x327 DUP3
0x328 ADD
0x329 MSTORE
0x32a PUSH1 0x40
0x32c DUP1
0x32d MLOAD
0x32e SWAP2
0x32f DUP3
0x330 SWAP1
0x331 SUB
0x332 ADD
0x333 SWAP1
0x334 PUSH1 0x0
0x336 CREATE
0x337 DUP1
0x338 ISZERO
0x339 DUP1
0x33a ISZERO
0x33b PUSH2 0x348
0x33e JUMPI
---
0x317: JUMPDEST 
0x318: V245 = 0x1
0x31a: V246 = 0xa0
0x31c: V247 = 0x2
0x31e: V248 = EXP 0x2 0xa0
0x31f: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x322: V250 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x324: M[V624] = V250
0x325: V251 = 0x20
0x328: V252 = ADD V624 0x20
0x329: M[V252] = V242
0x32a: V253 = 0x40
0x32d: V254 = M[0x40]
0x331: V255 = SUB V624 V254
0x332: V256 = ADD V255 0x40
0x334: V257 = 0x0
0x336: V258 = CREATE 0x0 V254 V256
0x338: V259 = ISZERO V258
0x33a: V260 = ISZERO V259
0x33b: V261 = 0x348
0x33e: JUMPI 0x348 V260
---
Entry stack: [S6, {0x7d, 0x107}, S4, S3, S2, V242, V624]
Stack pops: 3
Stack additions: [V258, V259]
Exit stack: [S6, {0x7d, 0x107}, S4, S3, V258, V259]

================================

Block 0x33f
[0x33f:0x347]
---
Predecessors: [0x317]
Successors: []
---
0x33f RETURNDATASIZE
0x340 PUSH1 0x0
0x342 DUP1
0x343 RETURNDATACOPY
0x344 RETURNDATASIZE
0x345 PUSH1 0x0
0x347 REVERT
---
0x33f: V262 = RETURNDATASIZE
0x340: V263 = 0x0
0x343: RETURNDATACOPY 0x0 0x0 V262
0x344: V264 = RETURNDATASIZE
0x345: V265 = 0x0
0x347: REVERT 0x0 V264
---
Entry stack: [S5, {0x7d, 0x107}, S3, S2, V258, V259]
Stack pops: 0
Stack additions: []
Exit stack: [S5, {0x7d, 0x107}, S3, S2, V258, V259]

================================

Block 0x348
[0x348:0x38d]
---
Predecessors: [0x317, 0xad1]
Successors: [0x456]
---
0x348 JUMPDEST
0x349 POP
0x34a PUSH1 0x1
0x34c PUSH1 0xa0
0x34e PUSH1 0x2
0x350 EXP
0x351 SUB
0x352 DUP4
0x353 DUP2
0x354 AND
0x355 PUSH1 0x0
0x357 SWAP1
0x358 DUP2
0x359 MSTORE
0x35a PUSH1 0x20
0x35c DUP2
0x35d SWAP1
0x35e MSTORE
0x35f PUSH1 0x40
0x361 SWAP1
0x362 SHA3
0x363 DUP1
0x364 SLOAD
0x365 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37a NOT
0x37b AND
0x37c SWAP3
0x37d SWAP1
0x37e SWAP2
0x37f AND
0x380 SWAP2
0x381 SWAP1
0x382 SWAP2
0x383 OR
0x384 SWAP1
0x385 SSTORE
0x386 PUSH2 0x38e
0x389 DUP3
0x38a PUSH2 0x456
0x38d JUMP
---
0x348: JUMPDEST 
0x34a: V266 = 0x1
0x34c: V267 = 0xa0
0x34e: V268 = 0x2
0x350: V269 = EXP 0x2 0xa0
0x351: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x354: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x355: V272 = 0x0
0x359: M[0x0] = V271
0x35a: V273 = 0x20
0x35e: M[0x20] = 0x0
0x35f: V274 = 0x40
0x362: V275 = SHA3 0x0 0x40
0x364: V276 = S[V275]
0x365: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x37a: V278 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V279 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V276
0x37f: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x383: V281 = OR V280 V279
0x385: S[V275] = V281
0x386: V282 = 0x38e
0x38a: V283 = 0x456
0x38d: JUMP 0x456
---
Entry stack: [S5, {0x7d, 0x107}, S3, S2, V258, S0]
Stack pops: 4
Stack additions: [S3, S2, 0x38e, S3]
Exit stack: [S5, {0x7d, 0x107}, S3, S2, 0x38e, S3]

================================

Block 0x38e
[0x38e:0x3cb]
---
Predecessors: [0x5c6]
Successors: [0x3cc, 0x3e9]
---
0x38e JUMPDEST
0x38f PUSH1 0x2
0x391 SLOAD
0x392 PUSH1 0x40
0x394 MLOAD
0x395 PUSH1 0x1
0x397 PUSH1 0xa0
0x399 PUSH1 0x2
0x39b EXP
0x39c SUB
0x39d SWAP1
0x39e SWAP2
0x39f AND
0x3a0 SWAP1
0x3a1 PUSH1 0x14
0x3a3 CALLVALUE
0x3a4 DIV
0x3a5 DUP1
0x3a6 ISZERO
0x3a7 PUSH2 0x8fc
0x3aa MUL
0x3ab SWAP2
0x3ac PUSH1 0x0
0x3ae DUP2
0x3af DUP2
0x3b0 DUP2
0x3b1 DUP6
0x3b2 DUP9
0x3b3 DUP9
0x3b4 CALL
0x3b5 POP
0x3b6 POP
0x3b7 POP
0x3b8 POP
0x3b9 POP
0x3ba PUSH1 0x1
0x3bc PUSH1 0xa0
0x3be PUSH1 0x2
0x3c0 EXP
0x3c1 SUB
0x3c2 DUP2
0x3c3 AND
0x3c4 ISZERO
0x3c5 DUP1
0x3c6 ISZERO
0x3c7 SWAP1
0x3c8 PUSH2 0x3e9
0x3cb JUMPI
---
0x38e: JUMPDEST 
0x38f: V284 = 0x2
0x391: V285 = S[0x2]
0x392: V286 = 0x40
0x394: V287 = M[0x40]
0x395: V288 = 0x1
0x397: V289 = 0xa0
0x399: V290 = 0x2
0x39b: V291 = EXP 0x2 0xa0
0x39c: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39f: V293 = AND V285 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V294 = 0x14
0x3a3: V295 = CALLVALUE
0x3a4: V296 = DIV V295 0x14
0x3a6: V297 = ISZERO V296
0x3a7: V298 = 0x8fc
0x3aa: V299 = MUL 0x8fc V297
0x3ac: V300 = 0x0
0x3b4: V301 = CALL V299 V293 V296 V287 0x0 V287 0x0
0x3ba: V302 = 0x1
0x3bc: V303 = 0xa0
0x3be: V304 = 0x2
0x3c0: V305 = EXP 0x2 0xa0
0x3c1: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c3: V307 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V308 = ISZERO V307
0x3c6: V309 = ISZERO V308
0x3c8: V310 = 0x3e9
0x3cb: JUMPI 0x3e9 V308
---
Entry stack: [V926, {0x7d, 0x107}, S1, S0]
Stack pops: 1
Stack additions: [S0, V309]
Exit stack: [V926, {0x7d, 0x107}, S1, S0, V309]

================================

Block 0x3cc
[0x3cc:0x3e8]
---
Predecessors: [0x38e]
Successors: [0x3e9]
---
0x3cc POP
0x3cd PUSH1 0x1
0x3cf PUSH1 0xa0
0x3d1 PUSH1 0x2
0x3d3 EXP
0x3d4 SUB
0x3d5 DUP2
0x3d6 AND
0x3d7 PUSH1 0x0
0x3d9 SWAP1
0x3da DUP2
0x3db MSTORE
0x3dc PUSH1 0x1
0x3de PUSH1 0x20
0x3e0 MSTORE
0x3e1 PUSH1 0x40
0x3e3 SWAP1
0x3e4 SHA3
0x3e5 SLOAD
0x3e6 PUSH1 0xff
0x3e8 AND
---
0x3cd: V311 = 0x1
0x3cf: V312 = 0xa0
0x3d1: V313 = 0x2
0x3d3: V314 = EXP 0x2 0xa0
0x3d4: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d6: V316 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x3d7: V317 = 0x0
0x3db: M[0x0] = V316
0x3dc: V318 = 0x1
0x3de: V319 = 0x20
0x3e0: M[0x20] = 0x1
0x3e1: V320 = 0x40
0x3e4: V321 = SHA3 0x0 0x40
0x3e5: V322 = S[V321]
0x3e6: V323 = 0xff
0x3e8: V324 = AND 0xff V322
---
Entry stack: [V926, {0x7d, 0x107}, S2, S1, V309]
Stack pops: 2
Stack additions: [S1, V324]
Exit stack: [V926, {0x7d, 0x107}, S2, S1, V324]

================================

Block 0x3e9
[0x3e9:0x3ee]
---
Predecessors: [0x38e, 0x3cc]
Successors: [0x3ef, 0x416]
---
0x3e9 JUMPDEST
0x3ea ISZERO
0x3eb PUSH2 0x416
0x3ee JUMPI
---
0x3e9: JUMPDEST 
0x3ea: V325 = ISZERO S0
0x3eb: V326 = 0x416
0x3ee: JUMPI 0x416 V325
---
Entry stack: [V926, {0x7d, 0x107}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V926, {0x7d, 0x107}, S2, S1]

================================

Block 0x3ef
[0x3ef:0x415]
---
Predecessors: [0x3e9]
Successors: [0x416]
---
0x3ef PUSH1 0x40
0x3f1 MLOAD
0x3f2 PUSH1 0x1
0x3f4 PUSH1 0xa0
0x3f6 PUSH1 0x2
0x3f8 EXP
0x3f9 SUB
0x3fa DUP3
0x3fb AND
0x3fc SWAP1
0x3fd PUSH1 0x14
0x3ff CALLVALUE
0x400 DIV
0x401 DUP1
0x402 ISZERO
0x403 PUSH2 0x8fc
0x406 MUL
0x407 SWAP2
0x408 PUSH1 0x0
0x40a DUP2
0x40b DUP2
0x40c DUP2
0x40d DUP6
0x40e DUP9
0x40f DUP9
0x410 CALL
0x411 POP
0x412 POP
0x413 POP
0x414 POP
0x415 POP
---
0x3ef: V327 = 0x40
0x3f1: V328 = M[0x40]
0x3f2: V329 = 0x1
0x3f4: V330 = 0xa0
0x3f6: V331 = 0x2
0x3f8: V332 = EXP 0x2 0xa0
0x3f9: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fb: V334 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3fd: V335 = 0x14
0x3ff: V336 = CALLVALUE
0x400: V337 = DIV V336 0x14
0x402: V338 = ISZERO V337
0x403: V339 = 0x8fc
0x406: V340 = MUL 0x8fc V338
0x408: V341 = 0x0
0x410: V342 = CALL V340 V334 V337 V328 0x0 V328 0x0
---
Entry stack: [V926, {0x7d, 0x107}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V926, {0x7d, 0x107}, S1, S0]

================================

Block 0x416
[0x416:0x455]
---
Predecessors: [0x3e9, 0x3ef]
Successors: [0x7d, 0x107]
---
0x416 JUMPDEST
0x417 PUSH1 0x40
0x419 DUP1
0x41a MLOAD
0x41b PUSH1 0x1
0x41d PUSH1 0xa0
0x41f PUSH1 0x2
0x421 EXP
0x422 SUB
0x423 DUP5
0x424 AND
0x425 DUP2
0x426 MSTORE
0x427 SWAP1
0x428 MLOAD
0x429 PUSH32 0x31d3ac54da09405b02d1de0ee0de648de637fbdc111123be0d7fc31f2a544c0b
0x44a SWAP2
0x44b DUP2
0x44c SWAP1
0x44d SUB
0x44e PUSH1 0x20
0x450 ADD
0x451 SWAP1
0x452 LOG1
0x453 POP
0x454 POP
0x455 JUMP
---
0x416: JUMPDEST 
0x417: V343 = 0x40
0x41a: V344 = M[0x40]
0x41b: V345 = 0x1
0x41d: V346 = 0xa0
0x41f: V347 = 0x2
0x421: V348 = EXP 0x2 0xa0
0x422: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x424: V350 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x426: M[V344] = V350
0x428: V351 = M[0x40]
0x429: V352 = 0x31d3ac54da09405b02d1de0ee0de648de637fbdc111123be0d7fc31f2a544c0b
0x44d: V353 = SUB V344 V351
0x44e: V354 = 0x20
0x450: V355 = ADD 0x20 V353
0x452: LOG V351 V355 0x31d3ac54da09405b02d1de0ee0de648de637fbdc111123be0d7fc31f2a544c0b
0x455: JUMP {0x7d, 0x107}
---
Entry stack: [V926, {0x7d, 0x107}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V926]

================================

Block 0x456
[0x456:0x4c4]
---
Predecessors: [0xfe, 0x187, 0x348]
Successors: [0x4c5, 0x4c9]
---
0x456 JUMPDEST
0x457 PUSH1 0x1
0x459 PUSH1 0xa0
0x45b PUSH1 0x2
0x45d EXP
0x45e SUB
0x45f DUP1
0x460 DUP3
0x461 AND
0x462 PUSH1 0x0
0x464 SWAP1
0x465 DUP2
0x466 MSTORE
0x467 PUSH1 0x20
0x469 DUP2
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x40
0x46e DUP1
0x46f DUP4
0x470 SHA3
0x471 SLOAD
0x472 DUP2
0x473 MLOAD
0x474 PUSH32 0x4528c69900000000000000000000000000000000000000000000000000000000
0x495 DUP2
0x496 MSTORE
0x497 SWAP2
0x498 MLOAD
0x499 SWAP5
0x49a AND
0x49b SWAP4
0x49c DUP5
0x49d SWAP3
0x49e PUSH4 0x22081c12
0x4a3 SWAP3
0x4a4 DUP5
0x4a5 SWAP3
0x4a6 PUSH4 0x4528c699
0x4ab SWAP3
0x4ac PUSH1 0x4
0x4ae DUP1
0x4af DUP5
0x4b0 ADD
0x4b1 SWAP4
0x4b2 SWAP2
0x4b3 SWAP3
0x4b4 SWAP2
0x4b5 DUP3
0x4b6 SWAP1
0x4b7 SUB
0x4b8 ADD
0x4b9 DUP2
0x4ba DUP10
0x4bb DUP8
0x4bc DUP1
0x4bd EXTCODESIZE
0x4be ISZERO
0x4bf DUP1
0x4c0 ISZERO
0x4c1 PUSH2 0x4c9
0x4c4 JUMPI
---
0x456: JUMPDEST 
0x457: V356 = 0x1
0x459: V357 = 0xa0
0x45b: V358 = 0x2
0x45d: V359 = EXP 0x2 0xa0
0x45e: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x461: V361 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x462: V362 = 0x0
0x466: M[0x0] = V361
0x467: V363 = 0x20
0x46b: M[0x20] = 0x0
0x46c: V364 = 0x40
0x470: V365 = SHA3 0x0 0x40
0x471: V366 = S[V365]
0x473: V367 = M[0x40]
0x474: V368 = 0x4528c69900000000000000000000000000000000000000000000000000000000
0x496: M[V367] = 0x4528c69900000000000000000000000000000000000000000000000000000000
0x498: V369 = M[0x40]
0x49a: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x49e: V371 = 0x22081c12
0x4a6: V372 = 0x4528c699
0x4ac: V373 = 0x4
0x4b0: V374 = ADD V367 0x4
0x4b7: V375 = SUB V367 V369
0x4b8: V376 = ADD V375 0x4
0x4bd: V377 = EXTCODESIZE V370
0x4be: V378 = ISZERO V377
0x4c0: V379 = ISZERO V378
0x4c1: V380 = 0x4c9
0x4c4: JUMPI 0x4c9 V379
---
Entry stack: [S5, {0x7d, 0x107}, S3, S2, {0x107, 0x38e}, S0]
Stack pops: 1
Stack additions: [S0, V370, 0x0, V370, 0x22081c12, V370, 0x4528c699, V374, 0x20, V369, V376, V369, 0x0, V370, V378]
Exit stack: [S5, {0x7d, 0x107}, S3, S2, {0x107, 0x38e}, S0, V370, 0x0, V370, 0x22081c12, V370, 0x4528c699, V374, 0x20, V369, V376, V369, 0x0, V370, V378]

================================

Block 0x4c5
[0x4c5:0x4c8]
---
Predecessors: [0x456]
Successors: []
---
0x4c5 PUSH1 0x0
0x4c7 DUP1
0x4c8 REVERT
---
0x4c5: V381 = 0x0
0x4c8: REVERT 0x0 0x0
---
Entry stack: [V926, {0x7d, 0x107}, S17, S16, {0x107, 0x38e}, S14, V370, 0x0, V370, 0x22081c12, V370, 0x4528c699, V374, 0x20, V369, V376, V369, 0x0, V370, V378]
Stack pops: 0
Stack additions: []
Exit stack: [V926, {0x7d, 0x107}, S17, S16, {0x107, 0x38e}, S14, V370, 0x0, V370, 0x22081c12, V370, 0x4528c699, V374, 0x20, V369, V376, V369, 0x0, V370, V378]

================================

Block 0x4c9
[0x4c9:0x4d3]
---
Predecessors: [0x456]
Successors: [0x4d4, 0x4dd]
---
0x4c9 JUMPDEST
0x4ca POP
0x4cb GAS
0x4cc CALL
0x4cd ISZERO
0x4ce DUP1
0x4cf ISZERO
0x4d0 PUSH2 0x4dd
0x4d3 JUMPI
---
0x4c9: JUMPDEST 
0x4cb: V382 = GAS
0x4cc: V383 = CALL V382 V370 0x0 V369 V376 V369 0x20
0x4cd: V384 = ISZERO V383
0x4cf: V385 = ISZERO V384
0x4d0: V386 = 0x4dd
0x4d3: JUMPI 0x4dd V385
---
Entry stack: [V926, {0x7d, 0x107}, S17, S16, {0x107, 0x38e}, S14, V370, 0x0, V370, 0x22081c12, V370, 0x4528c699, V374, 0x20, V369, V376, V369, 0x0, V370, V378]
Stack pops: 7
Stack additions: [V384]
Exit stack: [V926, {0x7d, 0x107}, S17, S16, {0x107, 0x38e}, S14, V370, 0x0, V370, 0x22081c12, V370, 0x4528c699, V374, V384]

================================

Block 0x4d4
[0x4d4:0x4dc]
---
Predecessors: [0x4c9]
Successors: []
---
0x4d4 RETURNDATASIZE
0x4d5 PUSH1 0x0
0x4d7 DUP1
0x4d8 RETURNDATACOPY
0x4d9 RETURNDATASIZE
0x4da PUSH1 0x0
0x4dc REVERT
---
0x4d4: V387 = RETURNDATASIZE
0x4d5: V388 = 0x0
0x4d8: RETURNDATACOPY 0x0 0x0 V387
0x4d9: V389 = RETURNDATASIZE
0x4da: V390 = 0x0
0x4dc: REVERT 0x0 V389
---
Entry stack: [V926, {0x7d, 0x107}, S11, S10, {0x107, 0x38e}, S8, S7, 0x0, S5, 0x22081c12, S3, 0x4528c699, S1, V384]
Stack pops: 0
Stack additions: []
Exit stack: [V926, {0x7d, 0x107}, S11, S10, {0x107, 0x38e}, S8, S7, 0x0, S5, 0x22081c12, S3, 0x4528c699, S1, V384]

================================

Block 0x4dd
[0x4dd:0x4ee]
---
Predecessors: [0x4c9]
Successors: [0x4ef, 0x4f3]
---
0x4dd JUMPDEST
0x4de POP
0x4df POP
0x4e0 POP
0x4e1 POP
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 RETURNDATASIZE
0x4e6 PUSH1 0x20
0x4e8 DUP2
0x4e9 LT
0x4ea ISZERO
0x4eb PUSH2 0x4f3
0x4ee JUMPI
---
0x4dd: JUMPDEST 
0x4e2: V391 = 0x40
0x4e4: V392 = M[0x40]
0x4e5: V393 = RETURNDATASIZE
0x4e6: V394 = 0x20
0x4e9: V395 = LT V393 0x20
0x4ea: V396 = ISZERO V395
0x4eb: V397 = 0x4f3
0x4ee: JUMPI 0x4f3 V396
---
Entry stack: [V926, {0x7d, 0x107}, S11, S10, {0x107, 0x38e}, S8, S7, 0x0, S5, 0x22081c12, S3, 0x4528c699, S1, V384]
Stack pops: 4
Stack additions: [V392, V393]
Exit stack: [V926, {0x7d, 0x107}, S11, S10, {0x107, 0x38e}, S8, S7, 0x0, S5, 0x22081c12, V392, V393]

================================

Block 0x4ef
[0x4ef:0x4f2]
---
Predecessors: [0x4dd]
Successors: []
---
0x4ef PUSH1 0x0
0x4f1 DUP1
0x4f2 REVERT
---
0x4ef: V398 = 0x0
0x4f2: REVERT 0x0 0x0
---
Entry stack: [V926, {0x7d, 0x107}, S9, S8, {0x107, 0x38e}, S6, S5, 0x0, S3, 0x22081c12, V392, V393]
Stack pops: 0
Stack additions: []
Exit stack: [V926, {0x7d, 0x107}, S9, S8, {0x107, 0x38e}, S6, S5, 0x0, S3, 0x22081c12, V392, V393]

================================

Block 0x4f3
[0x4f3:0x525]
---
Predecessors: [0x4dd]
Successors: [0x526, 0x52a]
---
0x4f3 JUMPDEST
0x4f4 POP
0x4f5 MLOAD
0x4f6 PUSH1 0x40
0x4f8 DUP1
0x4f9 MLOAD
0x4fa PUSH1 0xe0
0x4fc PUSH1 0x2
0x4fe EXP
0x4ff PUSH4 0xffffffff
0x504 DUP6
0x505 AND
0x506 MUL
0x507 DUP2
0x508 MSTORE
0x509 SWAP1
0x50a MLOAD
0x50b PUSH1 0x4
0x50d DUP1
0x50e DUP4
0x50f ADD
0x510 SWAP3
0x511 PUSH1 0x20
0x513 SWAP3
0x514 SWAP2
0x515 SWAP1
0x516 DUP3
0x517 SWAP1
0x518 SUB
0x519 ADD
0x51a DUP2
0x51b DUP6
0x51c DUP9
0x51d DUP1
0x51e EXTCODESIZE
0x51f ISZERO
0x520 DUP1
0x521 ISZERO
0x522 PUSH2 0x52a
0x525 JUMPI
---
0x4f3: JUMPDEST 
0x4f5: V399 = M[V392]
0x4f6: V400 = 0x40
0x4f9: V401 = M[0x40]
0x4fa: V402 = 0xe0
0x4fc: V403 = 0x2
0x4fe: V404 = EXP 0x2 0xe0
0x4ff: V405 = 0xffffffff
0x505: V406 = AND 0x22081c12 0xffffffff
0x506: V407 = MUL 0x22081c12 0x100000000000000000000000000000000000000000000000000000000
0x508: M[V401] = 0x22081c1200000000000000000000000000000000000000000000000000000000
0x50a: V408 = M[0x40]
0x50b: V409 = 0x4
0x50f: V410 = ADD V401 0x4
0x511: V411 = 0x20
0x518: V412 = SUB V401 V408
0x519: V413 = ADD V412 0x4
0x51e: V414 = EXTCODESIZE S3
0x51f: V415 = ISZERO V414
0x521: V416 = ISZERO V415
0x522: V417 = 0x52a
0x525: JUMPI 0x52a V416
---
Entry stack: [V926, {0x7d, 0x107}, S9, S8, {0x107, 0x38e}, S6, S5, 0x0, S3, 0x22081c12, V392, V393]
Stack pops: 4
Stack additions: [S3, S2, V399, V410, 0x20, V408, V413, V408, V399, S3, V415]
Exit stack: [V926, {0x7d, 0x107}, S9, S8, {0x107, 0x38e}, S6, S5, 0x0, S3, 0x22081c12, V399, V410, 0x20, V408, V413, V408, V399, S3, V415]

================================

Block 0x526
[0x526:0x529]
---
Predecessors: [0x4f3]
Successors: []
---
0x526 PUSH1 0x0
0x528 DUP1
0x529 REVERT
---
0x526: V418 = 0x0
0x529: REVERT 0x0 0x0
---
Entry stack: [V926, {0x7d, 0x107}, S16, S15, {0x107, 0x38e}, S13, S12, 0x0, S10, 0x22081c12, V399, V410, 0x20, V408, V413, V408, V399, S1, V415]
Stack pops: 0
Stack additions: []
Exit stack: [V926, {0x7d, 0x107}, S16, S15, {0x107, 0x38e}, S13, S12, 0x0, S10, 0x22081c12, V399, V410, 0x20, V408, V413, V408, V399, S1, V415]

================================

Block 0x52a
[0x52a:0x534]
---
Predecessors: [0x4f3]
Successors: [0x535, 0x53e]
---
0x52a JUMPDEST
0x52b POP
0x52c GAS
0x52d CALL
0x52e ISZERO
0x52f DUP1
0x530 ISZERO
0x531 PUSH2 0x53e
0x534 JUMPI
---
0x52a: JUMPDEST 
0x52c: V419 = GAS
0x52d: V420 = CALL V419 S1 V399 V408 V413 V408 0x20
0x52e: V421 = ISZERO V420
0x530: V422 = ISZERO V421
0x531: V423 = 0x53e
0x534: JUMPI 0x53e V422
---
Entry stack: [V926, {0x7d, 0x107}, S16, S15, {0x107, 0x38e}, S13, S12, 0x0, S10, 0x22081c12, V399, V410, 0x20, V408, V413, V408, V399, S1, V415]
Stack pops: 7
Stack additions: [V421]
Exit stack: [V926, {0x7d, 0x107}, S16, S15, {0x107, 0x38e}, S13, S12, 0x0, S10, 0x22081c12, V399, V410, V421]

================================

Block 0x535
[0x535:0x53d]
---
Predecessors: [0x52a]
Successors: []
---
0x535 RETURNDATASIZE
0x536 PUSH1 0x0
0x538 DUP1
0x539 RETURNDATACOPY
0x53a RETURNDATASIZE
0x53b PUSH1 0x0
0x53d REVERT
---
0x535: V424 = RETURNDATASIZE
0x536: V425 = 0x0
0x539: RETURNDATACOPY 0x0 0x0 V424
0x53a: V426 = RETURNDATASIZE
0x53b: V427 = 0x0
0x53d: REVERT 0x0 V426
---
Entry stack: [V926, {0x7d, 0x107}, S10, S9, {0x107, 0x38e}, S7, S6, 0x0, S4, 0x22081c12, S2, S1, V421]
Stack pops: 0
Stack additions: []
Exit stack: [V926, {0x7d, 0x107}, S10, S9, {0x107, 0x38e}, S7, S6, 0x0, S4, 0x22081c12, S2, S1, V421]

================================

Block 0x53e
[0x53e:0x550]
---
Predecessors: [0x52a]
Successors: [0x551, 0x555]
---
0x53e JUMPDEST
0x53f POP
0x540 POP
0x541 POP
0x542 POP
0x543 POP
0x544 PUSH1 0x40
0x546 MLOAD
0x547 RETURNDATASIZE
0x548 PUSH1 0x20
0x54a DUP2
0x54b LT
0x54c ISZERO
0x54d PUSH2 0x555
0x550 JUMPI
---
0x53e: JUMPDEST 
0x544: V428 = 0x40
0x546: V429 = M[0x40]
0x547: V430 = RETURNDATASIZE
0x548: V431 = 0x20
0x54b: V432 = LT V430 0x20
0x54c: V433 = ISZERO V432
0x54d: V434 = 0x555
0x550: JUMPI 0x555 V433
---
Entry stack: [V926, {0x7d, 0x107}, S10, S9, {0x107, 0x38e}, S7, S6, 0x0, S4, 0x22081c12, S2, S1, V421]
Stack pops: 5
Stack additions: [V429, V430]
Exit stack: [V926, {0x7d, 0x107}, S10, S9, {0x107, 0x38e}, S7, S6, 0x0, V429, V430]

================================

Block 0x551
[0x551:0x554]
---
Predecessors: [0x53e]
Successors: []
---
0x551 PUSH1 0x0
0x553 DUP1
0x554 REVERT
---
0x551: V435 = 0x0
0x554: REVERT 0x0 0x0
---
Entry stack: [V926, {0x7d, 0x107}, S7, S6, {0x107, 0x38e}, S4, S3, 0x0, V429, V430]
Stack pops: 0
Stack additions: []
Exit stack: [V926, {0x7d, 0x107}, S7, S6, {0x107, 0x38e}, S4, S3, 0x0, V429, V430]

================================

Block 0x555
[0x555:0x55f]
---
Predecessors: [0x53e]
Successors: [0x560, 0x5c6]
---
0x555 JUMPDEST
0x556 POP
0x557 MLOAD
0x558 SWAP1
0x559 POP
0x55a DUP1
0x55b ISZERO
0x55c PUSH2 0x5c6
0x55f JUMPI
---
0x555: JUMPDEST 
0x557: V436 = M[V429]
0x55b: V437 = ISZERO V436
0x55c: V438 = 0x5c6
0x55f: JUMPI 0x5c6 V437
---
Entry stack: [V926, {0x7d, 0x107}, S7, S6, {0x107, 0x38e}, S4, S3, 0x0, V429, V430]
Stack pops: 3
Stack additions: [V436]
Exit stack: [V926, {0x7d, 0x107}, S7, S6, {0x107, 0x38e}, S4, S3, V436]

================================

Block 0x560
[0x560:0x5c5]
---
Predecessors: [0x555]
Successors: [0x5c6]
---
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 DUP4
0x569 AND
0x56a PUSH1 0x0
0x56c DUP2
0x56d DUP2
0x56e MSTORE
0x56f PUSH1 0x20
0x571 DUP2
0x572 DUP2
0x573 MSTORE
0x574 PUSH1 0x40
0x576 SWAP2
0x577 DUP3
0x578 SWAP1
0x579 SHA3
0x57a DUP1
0x57b SLOAD
0x57c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x591 NOT
0x592 AND
0x593 SWAP1
0x594 SSTORE
0x595 DUP2
0x596 MLOAD
0x597 SWAP3
0x598 DUP4
0x599 MSTORE
0x59a SWAP1
0x59b MLOAD
0x59c PUSH32 0x1a5e355a9a34d7eac1e439a6c610ba1fa72aa45f7645724ce5187fa19c3bd3fc
0x5bd SWAP3
0x5be DUP2
0x5bf SWAP1
0x5c0 SUB
0x5c1 SWAP1
0x5c2 SWAP2
0x5c3 ADD
0x5c4 SWAP1
0x5c5 LOG1
---
0x560: V439 = 0x1
0x562: V440 = 0xa0
0x564: V441 = 0x2
0x566: V442 = EXP 0x2 0xa0
0x567: V443 = SUB 0x10000000000000000000000000000000000000000 0x1
0x569: V444 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x56a: V445 = 0x0
0x56e: M[0x0] = V444
0x56f: V446 = 0x20
0x573: M[0x20] = 0x0
0x574: V447 = 0x40
0x579: V448 = SHA3 0x0 0x40
0x57b: V449 = S[V448]
0x57c: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x591: V451 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x592: V452 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V449
0x594: S[V448] = V452
0x596: V453 = M[0x40]
0x599: M[V453] = V444
0x59b: V454 = M[0x40]
0x59c: V455 = 0x1a5e355a9a34d7eac1e439a6c610ba1fa72aa45f7645724ce5187fa19c3bd3fc
0x5c0: V456 = SUB V453 V454
0x5c3: V457 = ADD 0x20 V456
0x5c5: LOG V454 V457 0x1a5e355a9a34d7eac1e439a6c610ba1fa72aa45f7645724ce5187fa19c3bd3fc
---
Entry stack: [V926, {0x7d, 0x107}, S5, S4, {0x107, 0x38e}, S2, S1, V436]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V926, {0x7d, 0x107}, S5, S4, {0x107, 0x38e}, S2, S1, V436]

================================

Block 0x5c6
[0x5c6:0x5ca]
---
Predecessors: [0x555, 0x560]
Successors: [0x107, 0x38e]
---
0x5c6 JUMPDEST
0x5c7 POP
0x5c8 POP
0x5c9 POP
0x5ca JUMP
---
0x5c6: JUMPDEST 
0x5ca: JUMP {0x107, 0x38e}
---
Entry stack: [V926, {0x7d, 0x107}, S5, S4, {0x107, 0x38e}, S2, S1, V436]
Stack pops: 4
Stack additions: []
Exit stack: [V926, {0x7d, 0x107}, S5, S4]

================================

Block 0x5cb
[0x5cb:0x5e5]
---
Predecessors: [0x115]
Successors: [0x12a]
---
0x5cb JUMPDEST
0x5cc PUSH1 0x0
0x5ce PUSH1 0x20
0x5d0 DUP2
0x5d1 SWAP1
0x5d2 MSTORE
0x5d3 SWAP1
0x5d4 DUP2
0x5d5 MSTORE
0x5d6 PUSH1 0x40
0x5d8 SWAP1
0x5d9 SHA3
0x5da SLOAD
0x5db PUSH1 0x1
0x5dd PUSH1 0xa0
0x5df PUSH1 0x2
0x5e1 EXP
0x5e2 SUB
0x5e3 AND
0x5e4 DUP2
0x5e5 JUMP
---
0x5cb: JUMPDEST 
0x5cc: V458 = 0x0
0x5ce: V459 = 0x20
0x5d2: M[0x20] = 0x0
0x5d5: M[0x0] = V90
0x5d6: V460 = 0x40
0x5d9: V461 = SHA3 0x0 0x40
0x5da: V462 = S[V461]
0x5db: V463 = 0x1
0x5dd: V464 = 0xa0
0x5df: V465 = 0x2
0x5e1: V466 = EXP 0x2 0xa0
0x5e2: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e3: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x5e5: JUMP 0x12a
---
Entry stack: [V13, 0x12a, V90]
Stack pops: 2
Stack additions: [S1, V468]
Exit stack: [V13, 0x12a, V468]

================================

Block 0x5e6
[0x5e6:0x5fa]
---
Predecessors: [0x152]
Successors: [0x167]
---
0x5e6 JUMPDEST
0x5e7 PUSH1 0x1
0x5e9 PUSH1 0x20
0x5eb MSTORE
0x5ec PUSH1 0x0
0x5ee SWAP1
0x5ef DUP2
0x5f0 MSTORE
0x5f1 PUSH1 0x40
0x5f3 SWAP1
0x5f4 SHA3
0x5f5 SLOAD
0x5f6 PUSH1 0xff
0x5f8 AND
0x5f9 DUP2
0x5fa JUMP
---
0x5e6: JUMPDEST 
0x5e7: V469 = 0x1
0x5e9: V470 = 0x20
0x5eb: M[0x20] = 0x1
0x5ec: V471 = 0x0
0x5f0: M[0x0] = V116
0x5f1: V472 = 0x40
0x5f4: V473 = SHA3 0x0 0x40
0x5f5: V474 = S[V473]
0x5f6: V475 = 0xff
0x5f8: V476 = AND 0xff V474
0x5fa: JUMP 0x167
---
Entry stack: [V13, 0x167, V116]
Stack pops: 2
Stack additions: [S1, V476]
Exit stack: [V13, 0x167, V476]

================================

Block 0x5fb
[0x5fb:0x61c]
---
Predecessors: [0x1c2]
Successors: [0x61d, 0x692]
---
0x5fb JUMPDEST
0x5fc PUSH1 0x1
0x5fe PUSH1 0xa0
0x600 PUSH1 0x2
0x602 EXP
0x603 SUB
0x604 DUP2
0x605 AND
0x606 PUSH1 0x0
0x608 SWAP1
0x609 DUP2
0x60a MSTORE
0x60b PUSH1 0x1
0x60d PUSH1 0x20
0x60f MSTORE
0x610 PUSH1 0x40
0x612 DUP2
0x613 SHA3
0x614 SLOAD
0x615 PUSH1 0xff
0x617 AND
0x618 ISZERO
0x619 PUSH2 0x692
0x61c JUMPI
---
0x5fb: JUMPDEST 
0x5fc: V477 = 0x1
0x5fe: V478 = 0xa0
0x600: V479 = 0x2
0x602: V480 = EXP 0x2 0xa0
0x603: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x605: V482 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x606: V483 = 0x0
0x60a: M[0x0] = V482
0x60b: V484 = 0x1
0x60d: V485 = 0x20
0x60f: M[0x20] = 0x1
0x610: V486 = 0x40
0x613: V487 = SHA3 0x0 0x40
0x614: V488 = S[V487]
0x615: V489 = 0xff
0x617: V490 = AND 0xff V488
0x618: V491 = ISZERO V490
0x619: V492 = 0x692
0x61c: JUMPI 0x692 V491
---
Entry stack: [V13, 0x107, V165]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V13, 0x107, V165, 0x0]

================================

Block 0x61d
[0x61d:0x691]
---
Predecessors: [0x5fb]
Successors: []
---
0x61d PUSH1 0x40
0x61f DUP1
0x620 MLOAD
0x621 PUSH1 0xe5
0x623 PUSH1 0x2
0x625 EXP
0x626 PUSH3 0x461bcd
0x62a MUL
0x62b DUP2
0x62c MSTORE
0x62d PUSH1 0x20
0x62f PUSH1 0x4
0x631 DUP3
0x632 ADD
0x633 MSTORE
0x634 PUSH1 0x22
0x636 PUSH1 0x24
0x638 DUP3
0x639 ADD
0x63a MSTORE
0x63b PUSH32 0x54686973206164647265737320697320616c7265616479206120726566657272
0x65c PUSH1 0x44
0x65e DUP3
0x65f ADD
0x660 MSTORE
0x661 PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000
0x682 PUSH1 0x64
0x684 DUP3
0x685 ADD
0x686 MSTORE
0x687 SWAP1
0x688 MLOAD
0x689 SWAP1
0x68a DUP2
0x68b SWAP1
0x68c SUB
0x68d PUSH1 0x84
0x68f ADD
0x690 SWAP1
0x691 REVERT
---
0x61d: V493 = 0x40
0x620: V494 = M[0x40]
0x621: V495 = 0xe5
0x623: V496 = 0x2
0x625: V497 = EXP 0x2 0xe5
0x626: V498 = 0x461bcd
0x62a: V499 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x62c: M[V494] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x62d: V500 = 0x20
0x62f: V501 = 0x4
0x632: V502 = ADD V494 0x4
0x633: M[V502] = 0x20
0x634: V503 = 0x22
0x636: V504 = 0x24
0x639: V505 = ADD V494 0x24
0x63a: M[V505] = 0x22
0x63b: V506 = 0x54686973206164647265737320697320616c7265616479206120726566657272
0x65c: V507 = 0x44
0x65f: V508 = ADD V494 0x44
0x660: M[V508] = 0x54686973206164647265737320697320616c7265616479206120726566657272
0x661: V509 = 0x6572000000000000000000000000000000000000000000000000000000000000
0x682: V510 = 0x64
0x685: V511 = ADD V494 0x64
0x686: M[V511] = 0x6572000000000000000000000000000000000000000000000000000000000000
0x688: V512 = M[0x40]
0x68c: V513 = SUB V494 V512
0x68d: V514 = 0x84
0x68f: V515 = ADD 0x84 V513
0x691: REVERT V512 V515
---
Entry stack: [V13, 0x107, V165, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x107, V165, 0x0]

================================

Block 0x692
[0x692:0x6c0]
---
Predecessors: [0x5fb]
Successors: [0x7bd]
---
0x692 JUMPDEST
0x693 PUSH1 0x1
0x695 PUSH1 0xa0
0x697 PUSH1 0x2
0x699 EXP
0x69a SUB
0x69b DUP3
0x69c AND
0x69d PUSH1 0x0
0x69f SWAP1
0x6a0 DUP2
0x6a1 MSTORE
0x6a2 PUSH1 0x1
0x6a4 PUSH1 0x20
0x6a6 DUP2
0x6a7 SWAP1
0x6a8 MSTORE
0x6a9 PUSH1 0x40
0x6ab SWAP1
0x6ac SWAP2
0x6ad SHA3
0x6ae DUP1
0x6af SLOAD
0x6b0 PUSH1 0xff
0x6b2 NOT
0x6b3 AND
0x6b4 SWAP1
0x6b5 SWAP2
0x6b6 OR
0x6b7 SWAP1
0x6b8 SSTORE
0x6b9 ADDRESS
0x6ba PUSH2 0x6c1
0x6bd PUSH2 0x7bd
0x6c0 JUMP
---
0x692: JUMPDEST 
0x693: V516 = 0x1
0x695: V517 = 0xa0
0x697: V518 = 0x2
0x699: V519 = EXP 0x2 0xa0
0x69a: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69c: V521 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x69d: V522 = 0x0
0x6a1: M[0x0] = V521
0x6a2: V523 = 0x1
0x6a4: V524 = 0x20
0x6a8: M[0x20] = 0x1
0x6a9: V525 = 0x40
0x6ad: V526 = SHA3 0x0 0x40
0x6af: V527 = S[V526]
0x6b0: V528 = 0xff
0x6b2: V529 = NOT 0xff
0x6b3: V530 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V527
0x6b6: V531 = OR 0x1 V530
0x6b8: S[V526] = V531
0x6b9: V532 = ADDRESS
0x6ba: V533 = 0x6c1
0x6bd: V534 = 0x7bd
0x6c0: JUMP 0x7bd
---
Entry stack: [V13, 0x107, V165, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V532, 0x6c1]
Exit stack: [V13, 0x107, V165, 0x0, V532, 0x6c1]

================================

Block 0x6c1
[0x6c1:0x6e4]
---
Predecessors: [0x7bd]
Successors: [0x6e5, 0x6ee]
---
0x6c1 JUMPDEST
0x6c2 PUSH1 0x1
0x6c4 PUSH1 0xa0
0x6c6 PUSH1 0x2
0x6c8 EXP
0x6c9 SUB
0x6ca SWAP1
0x6cb SWAP2
0x6cc AND
0x6cd DUP2
0x6ce MSTORE
0x6cf PUSH1 0x40
0x6d1 MLOAD
0x6d2 SWAP1
0x6d3 DUP2
0x6d4 SWAP1
0x6d5 SUB
0x6d6 PUSH1 0x20
0x6d8 ADD
0x6d9 SWAP1
0x6da PUSH1 0x0
0x6dc CREATE
0x6dd DUP1
0x6de ISZERO
0x6df DUP1
0x6e0 ISZERO
0x6e1 PUSH2 0x6ee
0x6e4 JUMPI
---
0x6c1: JUMPDEST 
0x6c2: V535 = 0x1
0x6c4: V536 = 0xa0
0x6c6: V537 = 0x2
0x6c8: V538 = EXP 0x2 0xa0
0x6c9: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cc: V540 = AND V532 0xffffffffffffffffffffffffffffffffffffffff
0x6ce: M[V629] = V540
0x6cf: V541 = 0x40
0x6d1: V542 = M[0x40]
0x6d5: V543 = SUB V629 V542
0x6d6: V544 = 0x20
0x6d8: V545 = ADD 0x20 V543
0x6da: V546 = 0x0
0x6dc: V547 = CREATE 0x0 V542 V545
0x6de: V548 = ISZERO V547
0x6e0: V549 = ISZERO V548
0x6e1: V550 = 0x6ee
0x6e4: JUMPI 0x6ee V549
---
Entry stack: [V13, 0x107, V165, 0x0, V532, V629]
Stack pops: 2
Stack additions: [V547, V548]
Exit stack: [V13, 0x107, V165, 0x0, V547, V548]

================================

Block 0x6e5
[0x6e5:0x6ed]
---
Predecessors: [0x6c1]
Successors: []
---
0x6e5 RETURNDATASIZE
0x6e6 PUSH1 0x0
0x6e8 DUP1
0x6e9 RETURNDATACOPY
0x6ea RETURNDATASIZE
0x6eb PUSH1 0x0
0x6ed REVERT
---
0x6e5: V551 = RETURNDATASIZE
0x6e6: V552 = 0x0
0x6e9: RETURNDATACOPY 0x0 0x0 V551
0x6ea: V553 = RETURNDATASIZE
0x6eb: V554 = 0x0
0x6ed: REVERT 0x0 V553
---
Entry stack: [V13, 0x107, V165, 0x0, V547, V548]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x107, V165, 0x0, V547, V548]

================================

Block 0x6ee
[0x6ee:0x747]
---
Predecessors: [0x6c1]
Successors: [0x748, 0x74c]
---
0x6ee JUMPDEST
0x6ef POP
0x6f0 SWAP1
0x6f1 POP
0x6f2 DUP1
0x6f3 PUSH1 0x1
0x6f5 PUSH1 0xa0
0x6f7 PUSH1 0x2
0x6f9 EXP
0x6fa SUB
0x6fb AND
0x6fc PUSH4 0xa18a7bfc
0x701 DUP4
0x702 PUSH1 0x40
0x704 MLOAD
0x705 DUP3
0x706 PUSH4 0xffffffff
0x70b AND
0x70c PUSH1 0xe0
0x70e PUSH1 0x2
0x710 EXP
0x711 MUL
0x712 DUP2
0x713 MSTORE
0x714 PUSH1 0x4
0x716 ADD
0x717 DUP1
0x718 DUP3
0x719 PUSH1 0x1
0x71b PUSH1 0xa0
0x71d PUSH1 0x2
0x71f EXP
0x720 SUB
0x721 AND
0x722 PUSH1 0x1
0x724 PUSH1 0xa0
0x726 PUSH1 0x2
0x728 EXP
0x729 SUB
0x72a AND
0x72b DUP2
0x72c MSTORE
0x72d PUSH1 0x20
0x72f ADD
0x730 SWAP2
0x731 POP
0x732 POP
0x733 PUSH1 0x0
0x735 PUSH1 0x40
0x737 MLOAD
0x738 DUP1
0x739 DUP4
0x73a SUB
0x73b DUP2
0x73c PUSH1 0x0
0x73e DUP8
0x73f DUP1
0x740 EXTCODESIZE
0x741 ISZERO
0x742 DUP1
0x743 ISZERO
0x744 PUSH2 0x74c
0x747 JUMPI
---
0x6ee: JUMPDEST 
0x6f3: V555 = 0x1
0x6f5: V556 = 0xa0
0x6f7: V557 = 0x2
0x6f9: V558 = EXP 0x2 0xa0
0x6fa: V559 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fb: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x6fc: V561 = 0xa18a7bfc
0x702: V562 = 0x40
0x704: V563 = M[0x40]
0x706: V564 = 0xffffffff
0x70b: V565 = AND 0xffffffff 0xa18a7bfc
0x70c: V566 = 0xe0
0x70e: V567 = 0x2
0x710: V568 = EXP 0x2 0xe0
0x711: V569 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa18a7bfc
0x713: M[V563] = 0xa18a7bfc00000000000000000000000000000000000000000000000000000000
0x714: V570 = 0x4
0x716: V571 = ADD 0x4 V563
0x719: V572 = 0x1
0x71b: V573 = 0xa0
0x71d: V574 = 0x2
0x71f: V575 = EXP 0x2 0xa0
0x720: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x721: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x722: V578 = 0x1
0x724: V579 = 0xa0
0x726: V580 = 0x2
0x728: V581 = EXP 0x2 0xa0
0x729: V582 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72a: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V577
0x72c: M[V571] = V583
0x72d: V584 = 0x20
0x72f: V585 = ADD 0x20 V571
0x733: V586 = 0x0
0x735: V587 = 0x40
0x737: V588 = M[0x40]
0x73a: V589 = SUB V585 V588
0x73c: V590 = 0x0
0x740: V591 = EXTCODESIZE V560
0x741: V592 = ISZERO V591
0x743: V593 = ISZERO V592
0x744: V594 = 0x74c
0x747: JUMPI 0x74c V593
---
Entry stack: [V13, 0x107, V165, 0x0, V547, V548]
Stack pops: 4
Stack additions: [S3, S1, V560, 0xa18a7bfc, V585, 0x0, V588, V589, V588, 0x0, V560, V592]
Exit stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, 0x0, V588, V589, V588, 0x0, V560, V592]

================================

Block 0x748
[0x748:0x74b]
---
Predecessors: [0x6ee]
Successors: []
---
0x748 PUSH1 0x0
0x74a DUP1
0x74b REVERT
---
0x748: V595 = 0x0
0x74b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, 0x0, V588, V589, V588, 0x0, V560, V592]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, 0x0, V588, V589, V588, 0x0, V560, V592]

================================

Block 0x74c
[0x74c:0x756]
---
Predecessors: [0x6ee]
Successors: [0x757, 0x760]
---
0x74c JUMPDEST
0x74d POP
0x74e GAS
0x74f CALL
0x750 ISZERO
0x751 DUP1
0x752 ISZERO
0x753 PUSH2 0x760
0x756 JUMPI
---
0x74c: JUMPDEST 
0x74e: V596 = GAS
0x74f: V597 = CALL V596 V560 0x0 V588 V589 V588 0x0
0x750: V598 = ISZERO V597
0x752: V599 = ISZERO V598
0x753: V600 = 0x760
0x756: JUMPI 0x760 V599
---
Entry stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, 0x0, V588, V589, V588, 0x0, V560, V592]
Stack pops: 7
Stack additions: [V598]
Exit stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, V598]

================================

Block 0x757
[0x757:0x75f]
---
Predecessors: [0x74c]
Successors: []
---
0x757 RETURNDATASIZE
0x758 PUSH1 0x0
0x75a DUP1
0x75b RETURNDATACOPY
0x75c RETURNDATASIZE
0x75d PUSH1 0x0
0x75f REVERT
---
0x757: V601 = RETURNDATASIZE
0x758: V602 = 0x0
0x75b: RETURNDATACOPY 0x0 0x0 V601
0x75c: V603 = RETURNDATASIZE
0x75d: V604 = 0x0
0x75f: REVERT 0x0 V603
---
Entry stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, V598]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, V598]

================================

Block 0x760
[0x760:0x7ac]
---
Predecessors: [0x74c]
Successors: [0x107]
---
0x760 JUMPDEST
0x761 POP
0x762 POP
0x763 PUSH1 0x40
0x765 DUP1
0x766 MLOAD
0x767 PUSH1 0x1
0x769 PUSH1 0xa0
0x76b PUSH1 0x2
0x76d EXP
0x76e SUB
0x76f DUP1
0x770 DUP7
0x771 AND
0x772 DUP3
0x773 MSTORE
0x774 DUP7
0x775 AND
0x776 PUSH1 0x20
0x778 DUP3
0x779 ADD
0x77a MSTORE
0x77b DUP2
0x77c MLOAD
0x77d PUSH32 0xec49a3c8c4ae06c18160fe86119c381c9d213ac3e052ff35b594da8687b193c7
0x79e SWAP5
0x79f POP
0x7a0 SWAP1
0x7a1 DUP2
0x7a2 SWAP1
0x7a3 SUB
0x7a4 SWAP1
0x7a5 SWAP2
0x7a6 ADD
0x7a7 SWAP2
0x7a8 POP
0x7a9 LOG1
0x7aa POP
0x7ab POP
0x7ac JUMP
---
0x760: JUMPDEST 
0x763: V605 = 0x40
0x766: V606 = M[0x40]
0x767: V607 = 0x1
0x769: V608 = 0xa0
0x76b: V609 = 0x2
0x76d: V610 = EXP 0x2 0xa0
0x76e: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x771: V612 = AND V547 0xffffffffffffffffffffffffffffffffffffffff
0x773: M[V606] = V612
0x775: V613 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x776: V614 = 0x20
0x779: V615 = ADD V606 0x20
0x77a: M[V615] = V613
0x77c: V616 = M[0x40]
0x77d: V617 = 0xec49a3c8c4ae06c18160fe86119c381c9d213ac3e052ff35b594da8687b193c7
0x7a3: V618 = SUB V606 V616
0x7a6: V619 = ADD 0x40 V618
0x7a9: LOG V616 V619 0xec49a3c8c4ae06c18160fe86119c381c9d213ac3e052ff35b594da8687b193c7
0x7ac: JUMP 0x107
---
Entry stack: [V13, 0x107, V165, V547, V560, 0xa18a7bfc, V585, V598]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x7ad
[0x7ad:0x7bc]
---
Predecessors: [0x30a]
Successors: [0x317]
---
0x7ad JUMPDEST
0x7ae PUSH1 0x40
0x7b0 MLOAD
0x7b1 PUSH2 0x433
0x7b4 DUP1
0x7b5 PUSH2 0x7ce
0x7b8 DUP4
0x7b9 CODECOPY
0x7ba ADD
0x7bb SWAP1
0x7bc JUMP
---
0x7ad: JUMPDEST 
0x7ae: V620 = 0x40
0x7b0: V621 = M[0x40]
0x7b1: V622 = 0x433
0x7b5: V623 = 0x7ce
0x7b9: CODECOPY V621 0x7ce 0x433
0x7ba: V624 = ADD 0x433 V621
0x7bc: JUMP 0x317
---
Entry stack: [S6, {0x7d, 0x107}, S4, S3, S2, V242, 0x317]
Stack pops: 1
Stack additions: [V624]
Exit stack: [S6, {0x7d, 0x107}, S4, S3, S2, V242, V624]

================================

Block 0x7bd
[0x7bd:0x7cc]
---
Predecessors: [0x692]
Successors: [0x6c1]
---
0x7bd JUMPDEST
0x7be PUSH1 0x40
0x7c0 MLOAD
0x7c1 PUSH2 0x313
0x7c4 DUP1
0x7c5 PUSH2 0xc01
0x7c8 DUP4
0x7c9 CODECOPY
0x7ca ADD
0x7cb SWAP1
0x7cc JUMP
---
0x7bd: JUMPDEST 
0x7be: V625 = 0x40
0x7c0: V626 = M[0x40]
0x7c1: V627 = 0x313
0x7c5: V628 = 0xc01
0x7c9: CODECOPY V626 0xc01 0x313
0x7ca: V629 = ADD 0x313 V626
0x7cc: JUMP 0x6c1
---
Entry stack: [V13, 0x107, V165, 0x0, V532, 0x6c1]
Stack pops: 1
Stack additions: [V629]
Exit stack: [V13, 0x107, V165, 0x0, V532, V629]

================================

Block 0x7cd
[0x7cd:0x7d9]
---
Predecessors: []
Successors: [0x7da]
---
0x7cd STOP
0x7ce PUSH1 0x80
0x7d0 PUSH1 0x40
0x7d2 MSTORE
0x7d3 CALLVALUE
0x7d4 DUP1
0x7d5 ISZERO
0x7d6 PUSH2 0x10
0x7d9 JUMPI
---
0x7cd: STOP 
0x7ce: V630 = 0x80
0x7d0: V631 = 0x40
0x7d2: M[0x40] = 0x80
0x7d3: V632 = CALLVALUE
0x7d5: V633 = ISZERO V632
0x7d6: V634 = 0x10
0x7d9: THROWI V633
---
Entry stack: []
Stack pops: 0
Stack additions: [V632]
Exit stack: []

================================

Block 0x7da
[0x7da:0x835]
---
Predecessors: [0x7cd]
Successors: [0x836]
---
0x7da PUSH1 0x0
0x7dc DUP1
0x7dd REVERT
0x7de JUMPDEST
0x7df POP
0x7e0 PUSH1 0x40
0x7e2 MLOAD
0x7e3 PUSH1 0x40
0x7e5 DUP1
0x7e6 PUSH2 0x433
0x7e9 DUP4
0x7ea CODECOPY
0x7eb DUP2
0x7ec ADD
0x7ed PUSH1 0x40
0x7ef MSTORE
0x7f0 DUP1
0x7f1 MLOAD
0x7f2 PUSH1 0x20
0x7f4 SWAP1
0x7f5 SWAP2
0x7f6 ADD
0x7f7 MLOAD
0x7f8 PUSH1 0x0
0x7fa DUP1
0x7fb SLOAD
0x7fc PUSH1 0x1
0x7fe PUSH1 0xa0
0x800 PUSH1 0x2
0x802 EXP
0x803 SUB
0x804 NOT
0x805 AND
0x806 PUSH1 0x1
0x808 PUSH1 0xa0
0x80a PUSH1 0x2
0x80c EXP
0x80d SUB
0x80e SWAP1
0x80f SWAP4
0x810 AND
0x811 SWAP3
0x812 SWAP1
0x813 SWAP3
0x814 OR
0x815 DUP3
0x816 SSTORE
0x817 PUSH1 0x1
0x819 SSTORE
0x81a PUSH2 0x3d8
0x81d SWAP1
0x81e DUP2
0x81f SWAP1
0x820 PUSH2 0x5b
0x823 SWAP1
0x824 CODECOPY
0x825 PUSH1 0x0
0x827 RETURN
0x828 STOP
0x829 PUSH1 0x80
0x82b PUSH1 0x40
0x82d MSTORE
0x82e PUSH1 0x4
0x830 CALLDATASIZE
0x831 LT
0x832 PUSH2 0x56
0x835 JUMPI
---
0x7da: V635 = 0x0
0x7dd: REVERT 0x0 0x0
0x7de: JUMPDEST 
0x7e0: V636 = 0x40
0x7e2: V637 = M[0x40]
0x7e3: V638 = 0x40
0x7e6: V639 = 0x433
0x7ea: CODECOPY V637 0x433 0x40
0x7ec: V640 = ADD V637 0x40
0x7ed: V641 = 0x40
0x7ef: M[0x40] = V640
0x7f1: V642 = M[V637]
0x7f2: V643 = 0x20
0x7f6: V644 = ADD V637 0x20
0x7f7: V645 = M[V644]
0x7f8: V646 = 0x0
0x7fb: V647 = S[0x0]
0x7fc: V648 = 0x1
0x7fe: V649 = 0xa0
0x800: V650 = 0x2
0x802: V651 = EXP 0x2 0xa0
0x803: V652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x804: V653 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x805: V654 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V647
0x806: V655 = 0x1
0x808: V656 = 0xa0
0x80a: V657 = 0x2
0x80c: V658 = EXP 0x2 0xa0
0x80d: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x810: V660 = AND V642 0xffffffffffffffffffffffffffffffffffffffff
0x814: V661 = OR V660 V654
0x816: S[0x0] = V661
0x817: V662 = 0x1
0x819: S[0x1] = V645
0x81a: V663 = 0x3d8
0x820: V664 = 0x5b
0x824: CODECOPY 0x0 0x5b 0x3d8
0x825: V665 = 0x0
0x827: RETURN 0x0 0x3d8
0x828: STOP 
0x829: V666 = 0x80
0x82b: V667 = 0x40
0x82d: M[0x40] = 0x80
0x82e: V668 = 0x4
0x830: V669 = CALLDATASIZE
0x831: V670 = LT V669 0x4
0x832: V671 = 0x56
0x835: THROWI V670
---
Entry stack: [V632]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x836
[0x836:0x868]
---
Predecessors: [0x7da]
Successors: [0x869]
---
0x836 PUSH4 0xffffffff
0x83b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x859 PUSH1 0x0
0x85b CALLDATALOAD
0x85c DIV
0x85d AND
0x85e PUSH4 0x22081c12
0x863 DUP2
0x864 EQ
0x865 PUSH2 0x58
0x868 JUMPI
---
0x836: V672 = 0xffffffff
0x83b: V673 = 0x100000000000000000000000000000000000000000000000000000000
0x859: V674 = 0x0
0x85b: V675 = CALLDATALOAD 0x0
0x85c: V676 = DIV V675 0x100000000000000000000000000000000000000000000000000000000
0x85d: V677 = AND V676 0xffffffff
0x85e: V678 = 0x22081c12
0x864: V679 = EQ V677 0x22081c12
0x865: V680 = 0x58
0x868: THROWI V679
---
Entry stack: []
Stack pops: 0
Stack additions: [V677]
Exit stack: [V677]

================================

Block 0x869
[0x869:0x873]
---
Predecessors: [0x836]
Successors: [0x874]
---
0x869 DUP1
0x86a PUSH4 0x4528c699
0x86f EQ
0x870 PUSH2 0x74
0x873 JUMPI
---
0x86a: V681 = 0x4528c699
0x86f: V682 = EQ 0x4528c699 V677
0x870: V683 = 0x74
0x873: THROWI V682
---
Entry stack: [V677]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V677]

================================

Block 0x874
[0x874:0x87e]
---
Predecessors: [0x869]
Successors: [0x87f]
---
0x874 DUP1
0x875 PUSH4 0x8da5cb5b
0x87a EQ
0x87b PUSH2 0x9b
0x87e JUMPI
---
0x875: V684 = 0x8da5cb5b
0x87a: V685 = EQ 0x8da5cb5b V677
0x87b: V686 = 0x9b
0x87e: THROWI V685
---
Entry stack: [V677]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V677]

================================

Block 0x87f
[0x87f:0x8a4]
---
Predecessors: [0x874]
Successors: [0x8a5]
---
0x87f JUMPDEST
0x880 STOP
0x881 JUMPDEST
0x882 PUSH2 0x60
0x885 PUSH2 0xd9
0x888 JUMP
0x889 JUMPDEST
0x88a PUSH1 0x40
0x88c DUP1
0x88d MLOAD
0x88e SWAP2
0x88f ISZERO
0x890 ISZERO
0x891 DUP3
0x892 MSTORE
0x893 MLOAD
0x894 SWAP1
0x895 DUP2
0x896 SWAP1
0x897 SUB
0x898 PUSH1 0x20
0x89a ADD
0x89b SWAP1
0x89c RETURN
0x89d JUMPDEST
0x89e CALLVALUE
0x89f DUP1
0x8a0 ISZERO
0x8a1 PUSH2 0x80
0x8a4 JUMPI
---
0x87f: JUMPDEST 
0x880: STOP 
0x881: JUMPDEST 
0x882: V687 = 0x60
0x885: V688 = 0xd9
0x888: THROW 
0x889: JUMPDEST 
0x88a: V689 = 0x40
0x88d: V690 = M[0x40]
0x88f: V691 = ISZERO S0
0x890: V692 = ISZERO V691
0x892: M[V690] = V692
0x893: V693 = M[0x40]
0x897: V694 = SUB V690 V693
0x898: V695 = 0x20
0x89a: V696 = ADD 0x20 V694
0x89c: RETURN V693 V696
0x89d: JUMPDEST 
0x89e: V697 = CALLVALUE
0x8a0: V698 = ISZERO V697
0x8a1: V699 = 0x80
0x8a4: THROWI V698
---
Entry stack: [V677]
Stack pops: 0
Stack additions: [0x60, V697]
Exit stack: []

================================

Block 0x8a5
[0x8a5:0x8cb]
---
Predecessors: [0x87f]
Successors: [0x8cc]
---
0x8a5 PUSH1 0x0
0x8a7 DUP1
0x8a8 REVERT
0x8a9 JUMPDEST
0x8aa POP
0x8ab PUSH2 0x89
0x8ae PUSH2 0x38a
0x8b1 JUMP
0x8b2 JUMPDEST
0x8b3 PUSH1 0x40
0x8b5 DUP1
0x8b6 MLOAD
0x8b7 SWAP2
0x8b8 DUP3
0x8b9 MSTORE
0x8ba MLOAD
0x8bb SWAP1
0x8bc DUP2
0x8bd SWAP1
0x8be SUB
0x8bf PUSH1 0x20
0x8c1 ADD
0x8c2 SWAP1
0x8c3 RETURN
0x8c4 JUMPDEST
0x8c5 CALLVALUE
0x8c6 DUP1
0x8c7 ISZERO
0x8c8 PUSH2 0xa7
0x8cb JUMPI
---
0x8a5: V700 = 0x0
0x8a8: REVERT 0x0 0x0
0x8a9: JUMPDEST 
0x8ab: V701 = 0x89
0x8ae: V702 = 0x38a
0x8b1: THROW 
0x8b2: JUMPDEST 
0x8b3: V703 = 0x40
0x8b6: V704 = M[0x40]
0x8b9: M[V704] = S0
0x8ba: V705 = M[0x40]
0x8be: V706 = SUB V704 V705
0x8bf: V707 = 0x20
0x8c1: V708 = ADD 0x20 V706
0x8c3: RETURN V705 V708
0x8c4: JUMPDEST 
0x8c5: V709 = CALLVALUE
0x8c7: V710 = ISZERO V709
0x8c8: V711 = 0xa7
0x8cb: THROWI V710
---
Entry stack: [V697]
Stack pops: 0
Stack additions: [0x89, V709]
Exit stack: []

================================

Block 0x8cc
[0x8cc:0x912]
---
Predecessors: [0x8a5]
Successors: [0x913]
---
0x8cc PUSH1 0x0
0x8ce DUP1
0x8cf REVERT
0x8d0 JUMPDEST
0x8d1 POP
0x8d2 PUSH2 0xb0
0x8d5 PUSH2 0x390
0x8d8 JUMP
0x8d9 JUMPDEST
0x8da PUSH1 0x40
0x8dc DUP1
0x8dd MLOAD
0x8de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f3 SWAP1
0x8f4 SWAP3
0x8f5 AND
0x8f6 DUP3
0x8f7 MSTORE
0x8f8 MLOAD
0x8f9 SWAP1
0x8fa DUP2
0x8fb SWAP1
0x8fc SUB
0x8fd PUSH1 0x20
0x8ff ADD
0x900 SWAP1
0x901 RETURN
0x902 JUMPDEST
0x903 PUSH1 0x0
0x905 DUP1
0x906 PUSH1 0x0
0x908 PUSH1 0x1
0x90a SLOAD
0x90b CALLVALUE
0x90c EQ
0x90d ISZERO
0x90e ISZERO
0x90f PUSH2 0x150
0x912 JUMPI
---
0x8cc: V712 = 0x0
0x8cf: REVERT 0x0 0x0
0x8d0: JUMPDEST 
0x8d2: V713 = 0xb0
0x8d5: V714 = 0x390
0x8d8: THROW 
0x8d9: JUMPDEST 
0x8da: V715 = 0x40
0x8dd: V716 = M[0x40]
0x8de: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f5: V718 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8f7: M[V716] = V718
0x8f8: V719 = M[0x40]
0x8fc: V720 = SUB V716 V719
0x8fd: V721 = 0x20
0x8ff: V722 = ADD 0x20 V720
0x901: RETURN V719 V722
0x902: JUMPDEST 
0x903: V723 = 0x0
0x906: V724 = 0x0
0x908: V725 = 0x1
0x90a: V726 = S[0x1]
0x90b: V727 = CALLVALUE
0x90c: V728 = EQ V727 V726
0x90d: V729 = ISZERO V728
0x90e: V730 = ISZERO V729
0x90f: V731 = 0x150
0x912: THROWI V730
---
Entry stack: [V709]
Stack pops: 0
Stack additions: [0xb0, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0x913
[0x913:0x9e0]
---
Predecessors: [0x8cc]
Successors: [0x9e1]
---
0x913 PUSH1 0x40
0x915 DUP1
0x916 MLOAD
0x917 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x938 DUP2
0x939 MSTORE
0x93a PUSH1 0x20
0x93c PUSH1 0x4
0x93e DUP3
0x93f ADD
0x940 MSTORE
0x941 PUSH1 0xd
0x943 PUSH1 0x24
0x945 DUP3
0x946 ADD
0x947 MSTORE
0x948 PUSH32 0x496e76616c69642076616c756500000000000000000000000000000000000000
0x969 PUSH1 0x44
0x96b DUP3
0x96c ADD
0x96d MSTORE
0x96e SWAP1
0x96f MLOAD
0x970 SWAP1
0x971 DUP2
0x972 SWAP1
0x973 SUB
0x974 PUSH1 0x64
0x976 ADD
0x977 SWAP1
0x978 REVERT
0x979 JUMPDEST
0x97a PUSH1 0x40
0x97c DUP1
0x97d MLOAD
0x97e PUSH32 0xa87430ba00000000000000000000000000000000000000000000000000000000
0x99f DUP2
0x9a0 MSTORE
0x9a1 ADDRESS
0x9a2 PUSH1 0x4
0x9a4 DUP3
0x9a5 ADD
0x9a6 MSTORE
0x9a7 SWAP1
0x9a8 MLOAD
0x9a9 PUSH20 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23
0x9be SWAP2
0x9bf PUSH4 0xa87430ba
0x9c4 SWAP2
0x9c5 PUSH1 0x24
0x9c7 DUP1
0x9c8 DUP4
0x9c9 ADD
0x9ca SWAP3
0x9cb PUSH1 0x60
0x9cd SWAP3
0x9ce SWAP2
0x9cf SWAP1
0x9d0 DUP3
0x9d1 SWAP1
0x9d2 SUB
0x9d3 ADD
0x9d4 DUP2
0x9d5 PUSH1 0x0
0x9d7 DUP8
0x9d8 DUP1
0x9d9 EXTCODESIZE
0x9da ISZERO
0x9db DUP1
0x9dc ISZERO
0x9dd PUSH2 0x1bc
0x9e0 JUMPI
---
0x913: V732 = 0x40
0x916: V733 = M[0x40]
0x917: V734 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x939: M[V733] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x93a: V735 = 0x20
0x93c: V736 = 0x4
0x93f: V737 = ADD V733 0x4
0x940: M[V737] = 0x20
0x941: V738 = 0xd
0x943: V739 = 0x24
0x946: V740 = ADD V733 0x24
0x947: M[V740] = 0xd
0x948: V741 = 0x496e76616c69642076616c756500000000000000000000000000000000000000
0x969: V742 = 0x44
0x96c: V743 = ADD V733 0x44
0x96d: M[V743] = 0x496e76616c69642076616c756500000000000000000000000000000000000000
0x96f: V744 = M[0x40]
0x973: V745 = SUB V733 V744
0x974: V746 = 0x64
0x976: V747 = ADD 0x64 V745
0x978: REVERT V744 V747
0x979: JUMPDEST 
0x97a: V748 = 0x40
0x97d: V749 = M[0x40]
0x97e: V750 = 0xa87430ba00000000000000000000000000000000000000000000000000000000
0x9a0: M[V749] = 0xa87430ba00000000000000000000000000000000000000000000000000000000
0x9a1: V751 = ADDRESS
0x9a2: V752 = 0x4
0x9a5: V753 = ADD V749 0x4
0x9a6: M[V753] = V751
0x9a8: V754 = M[0x40]
0x9a9: V755 = 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23
0x9bf: V756 = 0xa87430ba
0x9c5: V757 = 0x24
0x9c9: V758 = ADD V749 0x24
0x9cb: V759 = 0x60
0x9d2: V760 = SUB V749 V754
0x9d3: V761 = ADD V760 0x24
0x9d5: V762 = 0x0
0x9d9: V763 = EXTCODESIZE 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23
0x9da: V764 = ISZERO V763
0x9dc: V765 = ISZERO V764
0x9dd: V766 = 0x1bc
0x9e0: THROWI V765
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V764, 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23, 0x0, V754, V761, V754, 0x60, V758, 0xa87430ba, 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23]
Exit stack: []

================================

Block 0x9e1
[0x9e1:0x9ef]
---
Predecessors: [0x913]
Successors: [0x9f0]
---
0x9e1 PUSH1 0x0
0x9e3 DUP1
0x9e4 REVERT
0x9e5 JUMPDEST
0x9e6 POP
0x9e7 GAS
0x9e8 CALL
0x9e9 ISZERO
0x9ea DUP1
0x9eb ISZERO
0x9ec PUSH2 0x1d0
0x9ef JUMPI
---
0x9e1: V767 = 0x0
0x9e4: REVERT 0x0 0x0
0x9e5: JUMPDEST 
0x9e7: V768 = GAS
0x9e8: V769 = CALL V768 S1 S2 S3 S4 S5 S6
0x9e9: V770 = ISZERO V769
0x9eb: V771 = ISZERO V770
0x9ec: V772 = 0x1d0
0x9ef: THROWI V771
---
Entry stack: [0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23, 0xa87430ba, V758, 0x60, V754, V761, V754, 0x0, 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23, V764]
Stack pops: 0
Stack additions: [V770]
Exit stack: []

================================

Block 0x9f0
[0x9f0:0xa0a]
---
Predecessors: [0x9e1]
Successors: [0xa0b]
---
0x9f0 RETURNDATASIZE
0x9f1 PUSH1 0x0
0x9f3 DUP1
0x9f4 RETURNDATACOPY
0x9f5 RETURNDATASIZE
0x9f6 PUSH1 0x0
0x9f8 REVERT
0x9f9 JUMPDEST
0x9fa POP
0x9fb POP
0x9fc POP
0x9fd POP
0x9fe PUSH1 0x40
0xa00 MLOAD
0xa01 RETURNDATASIZE
0xa02 PUSH1 0x60
0xa04 DUP2
0xa05 LT
0xa06 ISZERO
0xa07 PUSH2 0x1e6
0xa0a JUMPI
---
0x9f0: V773 = RETURNDATASIZE
0x9f1: V774 = 0x0
0x9f4: RETURNDATACOPY 0x0 0x0 V773
0x9f5: V775 = RETURNDATASIZE
0x9f6: V776 = 0x0
0x9f8: REVERT 0x0 V775
0x9f9: JUMPDEST 
0x9fe: V777 = 0x40
0xa00: V778 = M[0x40]
0xa01: V779 = RETURNDATASIZE
0xa02: V780 = 0x60
0xa05: V781 = LT V779 0x60
0xa06: V782 = ISZERO V781
0xa07: V783 = 0x1e6
0xa0a: THROWI V782
---
Entry stack: [V770]
Stack pops: 0
Stack additions: [V779, V778]
Exit stack: []

================================

Block 0xa0b
[0xa0b:0xaa6]
---
Predecessors: [0x9f0]
Successors: [0xaa7]
---
0xa0b PUSH1 0x0
0xa0d DUP1
0xa0e REVERT
0xa0f JUMPDEST
0xa10 POP
0xa11 PUSH1 0x20
0xa13 ADD
0xa14 MLOAD
0xa15 PUSH1 0x40
0xa17 MLOAD
0xa18 SWAP1
0xa19 SWAP3
0xa1a POP
0xa1b PUSH20 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23
0xa30 SWAP1
0xa31 CALLVALUE
0xa32 SWAP1
0xa33 PUSH1 0x0
0xa35 DUP2
0xa36 DUP2
0xa37 DUP2
0xa38 DUP6
0xa39 DUP8
0xa3a GAS
0xa3b CALL
0xa3c POP
0xa3d POP
0xa3e PUSH1 0x40
0xa40 DUP1
0xa41 MLOAD
0xa42 PUSH32 0xa87430ba00000000000000000000000000000000000000000000000000000000
0xa63 DUP2
0xa64 MSTORE
0xa65 ADDRESS
0xa66 PUSH1 0x4
0xa68 DUP3
0xa69 ADD
0xa6a MSTORE
0xa6b SWAP1
0xa6c MLOAD
0xa6d PUSH20 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23
0xa82 SWAP4
0xa83 POP
0xa84 PUSH4 0xa87430ba
0xa89 SWAP3
0xa8a POP
0xa8b PUSH1 0x24
0xa8d DUP1
0xa8e DUP4
0xa8f ADD
0xa90 SWAP3
0xa91 PUSH1 0x60
0xa93 SWAP3
0xa94 SWAP2
0xa95 SWAP1
0xa96 DUP3
0xa97 SWAP1
0xa98 SUB
0xa99 ADD
0xa9a DUP2
0xa9b PUSH1 0x0
0xa9d DUP8
0xa9e DUP1
0xa9f EXTCODESIZE
0xaa0 ISZERO
0xaa1 DUP1
0xaa2 ISZERO
0xaa3 PUSH2 0x282
0xaa6 JUMPI
---
0xa0b: V784 = 0x0
0xa0e: REVERT 0x0 0x0
0xa0f: JUMPDEST 
0xa11: V785 = 0x20
0xa13: V786 = ADD 0x20 S1
0xa14: V787 = M[V786]
0xa15: V788 = 0x40
0xa17: V789 = M[0x40]
0xa1b: V790 = 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23
0xa31: V791 = CALLVALUE
0xa33: V792 = 0x0
0xa3a: V793 = GAS
0xa3b: V794 = CALL V793 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23 V791 V789 0x0 V789 0x0
0xa3e: V795 = 0x40
0xa41: V796 = M[0x40]
0xa42: V797 = 0xa87430ba00000000000000000000000000000000000000000000000000000000
0xa64: M[V796] = 0xa87430ba00000000000000000000000000000000000000000000000000000000
0xa65: V798 = ADDRESS
0xa66: V799 = 0x4
0xa69: V800 = ADD V796 0x4
0xa6a: M[V800] = V798
0xa6c: V801 = M[0x40]
0xa6d: V802 = 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23
0xa84: V803 = 0xa87430ba
0xa8b: V804 = 0x24
0xa8f: V805 = ADD V796 0x24
0xa91: V806 = 0x60
0xa98: V807 = SUB V796 V801
0xa99: V808 = ADD V807 0x24
0xa9b: V809 = 0x0
0xa9f: V810 = EXTCODESIZE 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23
0xaa0: V811 = ISZERO V810
0xaa2: V812 = ISZERO V811
0xaa3: V813 = 0x282
0xaa6: THROWI V812
---
Entry stack: [V778, V779]
Stack pops: 0
Stack additions: [V811, 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23, 0x0, V801, V808, V801, 0x60, V805, 0xa87430ba, 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23, S2, V787]
Exit stack: []

================================

Block 0xaa7
[0xaa7:0xab5]
---
Predecessors: [0xa0b]
Successors: [0xab6]
---
0xaa7 PUSH1 0x0
0xaa9 DUP1
0xaaa REVERT
0xaab JUMPDEST
0xaac POP
0xaad GAS
0xaae CALL
0xaaf ISZERO
0xab0 DUP1
0xab1 ISZERO
0xab2 PUSH2 0x296
0xab5 JUMPI
---
0xaa7: V814 = 0x0
0xaaa: REVERT 0x0 0x0
0xaab: JUMPDEST 
0xaad: V815 = GAS
0xaae: V816 = CALL V815 S1 S2 S3 S4 S5 S6
0xaaf: V817 = ISZERO V816
0xab1: V818 = ISZERO V817
0xab2: V819 = 0x296
0xab5: THROWI V818
---
Entry stack: [V787, S10, 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23, 0xa87430ba, V805, 0x60, V801, V808, V801, 0x0, 0xe0ae35fe7df8b86ef08557b535b89bb6cb036c23, V811]
Stack pops: 0
Stack additions: [V817]
Exit stack: []

================================

Block 0xab6
[0xab6:0xad0]
---
Predecessors: [0xaa7]
Successors: [0xad1]
---
0xab6 RETURNDATASIZE
0xab7 PUSH1 0x0
0xab9 DUP1
0xaba RETURNDATACOPY
0xabb RETURNDATASIZE
0xabc PUSH1 0x0
0xabe REVERT
0xabf JUMPDEST
0xac0 POP
0xac1 POP
0xac2 POP
0xac3 POP
0xac4 PUSH1 0x40
0xac6 MLOAD
0xac7 RETURNDATASIZE
0xac8 PUSH1 0x60
0xaca DUP2
0xacb LT
0xacc ISZERO
0xacd PUSH2 0x2ac
0xad0 JUMPI
---
0xab6: V820 = RETURNDATASIZE
0xab7: V821 = 0x0
0xaba: RETURNDATACOPY 0x0 0x0 V820
0xabb: V822 = RETURNDATASIZE
0xabc: V823 = 0x0
0xabe: REVERT 0x0 V822
0xabf: JUMPDEST 
0xac4: V824 = 0x40
0xac6: V825 = M[0x40]
0xac7: V826 = RETURNDATASIZE
0xac8: V827 = 0x60
0xacb: V828 = LT V826 0x60
0xacc: V829 = ISZERO V828
0xacd: V830 = 0x2ac
0xad0: THROWI V829
---
Entry stack: [V817]
Stack pops: 0
Stack additions: [V826, V825]
Exit stack: []

================================

Block 0xad1
[0xad1:0xae4]
---
Predecessors: [0xab6]
Successors: [0x348, 0xae5]
---
0xad1 PUSH1 0x0
0xad3 DUP1
0xad4 REVERT
0xad5 JUMPDEST
0xad6 POP
0xad7 PUSH1 0x20
0xad9 ADD
0xada MLOAD
0xadb SWAP1
0xadc POP
0xadd DUP2
0xade DUP2
0xadf EQ
0xae0 ISZERO
0xae1 PUSH2 0x348
0xae4 JUMPI
---
0xad1: V831 = 0x0
0xad4: REVERT 0x0 0x0
0xad5: JUMPDEST 
0xad7: V832 = 0x20
0xad9: V833 = ADD 0x20 S1
0xada: V834 = M[V833]
0xadf: V835 = EQ V834 S3
0xae0: V836 = ISZERO V835
0xae1: V837 = 0x348
0xae4: JUMPI 0x348 V836
---
Entry stack: [V825, V826]
Stack pops: 0
Stack additions: [V834, S3]
Exit stack: []

================================

Block 0xae5
[0xae5:0xc0c]
---
Predecessors: [0xad1]
Successors: [0xc0d]
---
0xae5 PUSH1 0x40
0xae7 DUP1
0xae8 MLOAD
0xae9 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb0a DUP2
0xb0b MSTORE
0xb0c PUSH1 0x20
0xb0e PUSH1 0x4
0xb10 DUP3
0xb11 ADD
0xb12 MSTORE
0xb13 PUSH1 0x24
0xb15 DUP2
0xb16 ADD
0xb17 DUP3
0xb18 SWAP1
0xb19 MSTORE
0xb1a PUSH32 0x536d6172746f6c7574696f6e2072656a65637465642074686174207061796d65
0xb3b PUSH1 0x44
0xb3d DUP3
0xb3e ADD
0xb3f MSTORE
0xb40 PUSH32 0x6e742c20746f6f20736f6f6e206f72206e6f7420656e6f756768206574686572
0xb61 PUSH1 0x64
0xb63 DUP3
0xb64 ADD
0xb65 MSTORE
0xb66 SWAP1
0xb67 MLOAD
0xb68 SWAP1
0xb69 DUP2
0xb6a SWAP1
0xb6b SUB
0xb6c PUSH1 0x84
0xb6e ADD
0xb6f SWAP1
0xb70 REVERT
0xb71 JUMPDEST
0xb72 PUSH1 0x0
0xb74 DUP1
0xb75 SLOAD
0xb76 PUSH1 0x40
0xb78 MLOAD
0xb79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8e SWAP1
0xb8f SWAP2
0xb90 AND
0xb91 SWAP2
0xb92 ADDRESS
0xb93 BALANCE
0xb94 DUP1
0xb95 ISZERO
0xb96 PUSH2 0x8fc
0xb99 MUL
0xb9a SWAP3
0xb9b SWAP1
0xb9c SWAP2
0xb9d DUP2
0xb9e DUP2
0xb9f DUP2
0xba0 DUP6
0xba1 DUP9
0xba2 DUP9
0xba3 CALL
0xba4 POP
0xba5 POP
0xba6 PUSH1 0x2d
0xba8 DUP5
0xba9 EQ
0xbaa SWAP6
0xbab POP
0xbac POP
0xbad POP
0xbae POP
0xbaf POP
0xbb0 POP
0xbb1 SWAP1
0xbb2 JUMP
0xbb3 JUMPDEST
0xbb4 PUSH1 0x1
0xbb6 SLOAD
0xbb7 DUP2
0xbb8 JUMP
0xbb9 JUMPDEST
0xbba PUSH1 0x0
0xbbc SLOAD
0xbbd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd2 AND
0xbd3 DUP2
0xbd4 JUMP
0xbd5 STOP
0xbd6 LOG1
0xbd7 PUSH6 0x627a7a723058
0xbde SHA3
0xbdf ADD
0xbe0 PUSH1 0x2c
0xbe2 SWAP7
0xbe3 ORIGIN
0xbe4 PUSH26 0xcbb1c5cfbf1a56a5d6d964fe9daabac200caf63634cb851d1070
0xbff STOP
0xc00 MISSING 0x29
0xc01 PUSH1 0x80
0xc03 PUSH1 0x40
0xc05 MSTORE
0xc06 CALLVALUE
0xc07 DUP1
0xc08 ISZERO
0xc09 PUSH2 0x10
0xc0c JUMPI
---
0xae5: V838 = 0x40
0xae8: V839 = M[0x40]
0xae9: V840 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb0b: M[V839] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb0c: V841 = 0x20
0xb0e: V842 = 0x4
0xb11: V843 = ADD V839 0x4
0xb12: M[V843] = 0x20
0xb13: V844 = 0x24
0xb16: V845 = ADD V839 0x24
0xb19: M[V845] = 0x40
0xb1a: V846 = 0x536d6172746f6c7574696f6e2072656a65637465642074686174207061796d65
0xb3b: V847 = 0x44
0xb3e: V848 = ADD V839 0x44
0xb3f: M[V848] = 0x536d6172746f6c7574696f6e2072656a65637465642074686174207061796d65
0xb40: V849 = 0x6e742c20746f6f20736f6f6e206f72206e6f7420656e6f756768206574686572
0xb61: V850 = 0x64
0xb64: V851 = ADD V839 0x64
0xb65: M[V851] = 0x6e742c20746f6f20736f6f6e206f72206e6f7420656e6f756768206574686572
0xb67: V852 = M[0x40]
0xb6b: V853 = SUB V839 V852
0xb6c: V854 = 0x84
0xb6e: V855 = ADD 0x84 V853
0xb70: REVERT V852 V855
0xb71: JUMPDEST 
0xb72: V856 = 0x0
0xb75: V857 = S[0x0]
0xb76: V858 = 0x40
0xb78: V859 = M[0x40]
0xb79: V860 = 0xffffffffffffffffffffffffffffffffffffffff
0xb90: V861 = AND V857 0xffffffffffffffffffffffffffffffffffffffff
0xb92: V862 = ADDRESS
0xb93: V863 = BALANCE V862
0xb95: V864 = ISZERO V863
0xb96: V865 = 0x8fc
0xb99: V866 = MUL 0x8fc V864
0xba3: V867 = CALL V866 V861 V863 V859 0x0 V859 0x0
0xba6: V868 = 0x2d
0xba9: V869 = EQ S0 0x2d
0xbb2: JUMP S3
0xbb3: JUMPDEST 
0xbb4: V870 = 0x1
0xbb6: V871 = S[0x1]
0xbb8: JUMP S0
0xbb9: JUMPDEST 
0xbba: V872 = 0x0
0xbbc: V873 = S[0x0]
0xbbd: V874 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd2: V875 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0xbd4: JUMP S0
0xbd5: STOP 
0xbd6: LOG S0 S1 S2
0xbd7: V876 = 0x627a7a723058
0xbde: V877 = SHA3 0x627a7a723058 S3
0xbdf: V878 = ADD V877 S4
0xbe0: V879 = 0x2c
0xbe3: V880 = ORIGIN
0xbe4: V881 = 0xcbb1c5cfbf1a56a5d6d964fe9daabac200caf63634cb851d1070
0xbff: STOP 
0xc00: MISSING 0x29
0xc01: V882 = 0x80
0xc03: V883 = 0x40
0xc05: M[0x40] = 0x80
0xc06: V884 = CALLVALUE
0xc08: V885 = ISZERO V884
0xc09: V886 = 0x10
0xc0c: THROWI V885
---
Entry stack: [S1, V834]
Stack pops: 0
Stack additions: [V869, V871, S0, V875, S0, 0xcbb1c5cfbf1a56a5d6d964fe9daabac200caf63634cb851d1070, V880, S10, V878, S5, S6, S7, S8, S9, 0x2c, V884]
Exit stack: []

================================

Block 0xc0d
[0xc0d:0xc5d]
---
Predecessors: [0xae5]
Successors: [0xc5e]
---
0xc0d PUSH1 0x0
0xc0f DUP1
0xc10 REVERT
0xc11 JUMPDEST
0xc12 POP
0xc13 PUSH1 0x40
0xc15 MLOAD
0xc16 PUSH1 0x20
0xc18 DUP1
0xc19 PUSH2 0x313
0xc1c DUP4
0xc1d CODECOPY
0xc1e DUP2
0xc1f ADD
0xc20 PUSH1 0x40
0xc22 MSTORE
0xc23 MLOAD
0xc24 PUSH1 0x1
0xc26 DUP1
0xc27 SLOAD
0xc28 PUSH1 0x1
0xc2a PUSH1 0xa0
0xc2c PUSH1 0x2
0xc2e EXP
0xc2f SUB
0xc30 NOT
0xc31 AND
0xc32 PUSH1 0x1
0xc34 PUSH1 0xa0
0xc36 PUSH1 0x2
0xc38 EXP
0xc39 SUB
0xc3a SWAP1
0xc3b SWAP3
0xc3c AND
0xc3d SWAP2
0xc3e SWAP1
0xc3f SWAP2
0xc40 OR
0xc41 SWAP1
0xc42 SSTORE
0xc43 PUSH2 0x2c3
0xc46 DUP1
0xc47 PUSH2 0x50
0xc4a PUSH1 0x0
0xc4c CODECOPY
0xc4d PUSH1 0x0
0xc4f RETURN
0xc50 STOP
0xc51 PUSH1 0x80
0xc53 PUSH1 0x40
0xc55 MSTORE
0xc56 PUSH1 0x4
0xc58 CALLDATASIZE
0xc59 LT
0xc5a PUSH2 0x56
0xc5d JUMPI
---
0xc0d: V887 = 0x0
0xc10: REVERT 0x0 0x0
0xc11: JUMPDEST 
0xc13: V888 = 0x40
0xc15: V889 = M[0x40]
0xc16: V890 = 0x20
0xc19: V891 = 0x313
0xc1d: CODECOPY V889 0x313 0x20
0xc1f: V892 = ADD V889 0x20
0xc20: V893 = 0x40
0xc22: M[0x40] = V892
0xc23: V894 = M[V889]
0xc24: V895 = 0x1
0xc27: V896 = S[0x1]
0xc28: V897 = 0x1
0xc2a: V898 = 0xa0
0xc2c: V899 = 0x2
0xc2e: V900 = EXP 0x2 0xa0
0xc2f: V901 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc30: V902 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc31: V903 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V896
0xc32: V904 = 0x1
0xc34: V905 = 0xa0
0xc36: V906 = 0x2
0xc38: V907 = EXP 0x2 0xa0
0xc39: V908 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc3c: V909 = AND V894 0xffffffffffffffffffffffffffffffffffffffff
0xc40: V910 = OR V909 V903
0xc42: S[0x1] = V910
0xc43: V911 = 0x2c3
0xc47: V912 = 0x50
0xc4a: V913 = 0x0
0xc4c: CODECOPY 0x0 0x50 0x2c3
0xc4d: V914 = 0x0
0xc4f: RETURN 0x0 0x2c3
0xc50: STOP 
0xc51: V915 = 0x80
0xc53: V916 = 0x40
0xc55: M[0x40] = 0x80
0xc56: V917 = 0x4
0xc58: V918 = CALLDATASIZE
0xc59: V919 = LT V918 0x4
0xc5a: V920 = 0x56
0xc5d: THROWI V919
---
Entry stack: [V884]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc5e
[0xc5e:0xc90]
---
Predecessors: [0xc0d]
Successors: [0xc91]
---
0xc5e PUSH4 0xffffffff
0xc63 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc81 PUSH1 0x0
0xc83 CALLDATALOAD
0xc84 DIV
0xc85 AND
0xc86 PUSH4 0x2423081e
0xc8b DUP2
0xc8c EQ
0xc8d PUSH2 0x16b
0xc90 JUMPI
---
0xc5e: V921 = 0xffffffff
0xc63: V922 = 0x100000000000000000000000000000000000000000000000000000000
0xc81: V923 = 0x0
0xc83: V924 = CALLDATALOAD 0x0
0xc84: V925 = DIV V924 0x100000000000000000000000000000000000000000000000000000000
0xc85: V926 = AND V925 0xffffffff
0xc86: V927 = 0x2423081e
0xc8c: V928 = EQ V926 0x2423081e
0xc8d: V929 = 0x16b
0xc90: THROWI V928
---
Entry stack: []
Stack pops: 0
Stack additions: [V926]
Exit stack: [V926]

================================

Block 0xc91
[0xc91:0xc9b]
---
Predecessors: [0xc5e]
Successors: [0x19c, 0xc9c]
---
0xc91 DUP1
0xc92 PUSH4 0x68447c93
0xc97 EQ
0xc98 PUSH2 0x19c
0xc9b JUMPI
---
0xc92: V930 = 0x68447c93
0xc97: V931 = EQ 0x68447c93 V926
0xc98: V932 = 0x19c
0xc9b: JUMPI 0x19c V931
---
Entry stack: [V926]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V926]

================================

Block 0xc9c
[0xc9c:0xca6]
---
Predecessors: [0xc91]
Successors: [0xca7]
---
0xc9c DUP1
0xc9d PUSH4 0xa18a7bfc
0xca2 EQ
0xca3 PUSH2 0x1b1
0xca6 JUMPI
---
0xc9d: V933 = 0xa18a7bfc
0xca2: V934 = EQ 0xa18a7bfc V926
0xca3: V935 = 0x1b1
0xca6: THROWI V934
---
Entry stack: [V926]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V926]

================================

Block 0xca7
[0xca7:0xcb0]
---
Predecessors: [0xc9c]
Successors: [0xcb1]
---
0xca7 JUMPDEST
0xca8 PUSH1 0x0
0xcaa CALLVALUE
0xcab GT
0xcac ISZERO
0xcad PUSH2 0xeb
0xcb0 JUMPI
---
0xca7: JUMPDEST 
0xca8: V936 = 0x0
0xcaa: V937 = CALLVALUE
0xcab: V938 = GT V937 0x0
0xcac: V939 = ISZERO V938
0xcad: V940 = 0xeb
0xcb0: THROWI V939
---
Entry stack: [V926]
Stack pops: 0
Stack additions: []
Exit stack: [V926]

================================

Block 0xcb1
[0xcb1:0xd19]
---
Predecessors: [0xca7]
Successors: [0xd1a]
---
0xcb1 PUSH1 0x1
0xcb3 SLOAD
0xcb4 PUSH1 0x0
0xcb6 DUP1
0xcb7 SLOAD
0xcb8 PUSH1 0x40
0xcba DUP1
0xcbb MLOAD
0xcbc PUSH32 0xd35ada3200000000000000000000000000000000000000000000000000000000
0xcdd DUP2
0xcde MSTORE
0xcdf CALLER
0xce0 PUSH1 0x4
0xce2 DUP3
0xce3 ADD
0xce4 MSTORE
0xce5 PUSH1 0x1
0xce7 PUSH1 0xa0
0xce9 PUSH1 0x2
0xceb EXP
0xcec SUB
0xced SWAP3
0xcee DUP4
0xcef AND
0xcf0 PUSH1 0x24
0xcf2 DUP3
0xcf3 ADD
0xcf4 MSTORE
0xcf5 SWAP1
0xcf6 MLOAD
0xcf7 SWAP2
0xcf8 SWAP1
0xcf9 SWAP4
0xcfa AND
0xcfb SWAP3
0xcfc PUSH4 0xd35ada32
0xd01 SWAP3
0xd02 CALLVALUE
0xd03 SWAP3
0xd04 PUSH1 0x44
0xd06 DUP1
0xd07 DUP5
0xd08 ADD
0xd09 SWAP4
0xd0a DUP3
0xd0b SWAP1
0xd0c SUB
0xd0d ADD
0xd0e DUP2
0xd0f DUP6
0xd10 DUP9
0xd11 DUP1
0xd12 EXTCODESIZE
0xd13 ISZERO
0xd14 DUP1
0xd15 ISZERO
0xd16 PUSH2 0xcd
0xd19 JUMPI
---
0xcb1: V941 = 0x1
0xcb3: V942 = S[0x1]
0xcb4: V943 = 0x0
0xcb7: V944 = S[0x0]
0xcb8: V945 = 0x40
0xcbb: V946 = M[0x40]
0xcbc: V947 = 0xd35ada3200000000000000000000000000000000000000000000000000000000
0xcde: M[V946] = 0xd35ada3200000000000000000000000000000000000000000000000000000000
0xcdf: V948 = CALLER
0xce0: V949 = 0x4
0xce3: V950 = ADD V946 0x4
0xce4: M[V950] = V948
0xce5: V951 = 0x1
0xce7: V952 = 0xa0
0xce9: V953 = 0x2
0xceb: V954 = EXP 0x2 0xa0
0xcec: V955 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcef: V956 = AND 0xffffffffffffffffffffffffffffffffffffffff V944
0xcf0: V957 = 0x24
0xcf3: V958 = ADD V946 0x24
0xcf4: M[V958] = V956
0xcf6: V959 = M[0x40]
0xcfa: V960 = AND V942 0xffffffffffffffffffffffffffffffffffffffff
0xcfc: V961 = 0xd35ada32
0xd02: V962 = CALLVALUE
0xd04: V963 = 0x44
0xd08: V964 = ADD V946 0x44
0xd0c: V965 = SUB V946 V959
0xd0d: V966 = ADD V965 0x44
0xd12: V967 = EXTCODESIZE V960
0xd13: V968 = ISZERO V967
0xd15: V969 = ISZERO V968
0xd16: V970 = 0xcd
0xd19: THROWI V969
---
Entry stack: [V926]
Stack pops: 0
Stack additions: [V960, 0xd35ada32, V962, V964, 0x0, V959, V966, V959, V962, V960, V968]
Exit stack: [V926, V960, 0xd35ada32, V962, V964, 0x0, V959, V966, V959, V962, V960, V968]

================================

Block 0xd1a
[0xd1a:0xd28]
---
Predecessors: [0xcb1]
Successors: [0xd29]
---
0xd1a PUSH1 0x0
0xd1c DUP1
0xd1d REVERT
0xd1e JUMPDEST
0xd1f POP
0xd20 GAS
0xd21 CALL
0xd22 ISZERO
0xd23 DUP1
0xd24 ISZERO
0xd25 PUSH2 0xe1
0xd28 JUMPI
---
0xd1a: V971 = 0x0
0xd1d: REVERT 0x0 0x0
0xd1e: JUMPDEST 
0xd20: V972 = GAS
0xd21: V973 = CALL V972 S1 S2 S3 S4 S5 S6
0xd22: V974 = ISZERO V973
0xd24: V975 = ISZERO V974
0xd25: V976 = 0xe1
0xd28: THROWI V975
---
Entry stack: [V926, V960, 0xd35ada32, V962, V964, 0x0, V959, V966, V959, V962, V960, V968]
Stack pops: 0
Stack additions: [V974]
Exit stack: []

================================

Block 0xd29
[0xd29:0xd9c]
---
Predecessors: [0xd1a]
Successors: [0xd9d]
---
0xd29 RETURNDATASIZE
0xd2a PUSH1 0x0
0xd2c DUP1
0xd2d RETURNDATACOPY
0xd2e RETURNDATASIZE
0xd2f PUSH1 0x0
0xd31 REVERT
0xd32 JUMPDEST
0xd33 POP
0xd34 POP
0xd35 POP
0xd36 POP
0xd37 POP
0xd38 PUSH2 0x169
0xd3b JUMP
0xd3c JUMPDEST
0xd3d PUSH1 0x1
0xd3f SLOAD
0xd40 PUSH1 0x40
0xd42 DUP1
0xd43 MLOAD
0xd44 PUSH32 0x8fe123d700000000000000000000000000000000000000000000000000000000
0xd65 DUP2
0xd66 MSTORE
0xd67 CALLER
0xd68 PUSH1 0x4
0xd6a DUP3
0xd6b ADD
0xd6c MSTORE
0xd6d SWAP1
0xd6e MLOAD
0xd6f PUSH1 0x1
0xd71 PUSH1 0xa0
0xd73 PUSH1 0x2
0xd75 EXP
0xd76 SUB
0xd77 SWAP1
0xd78 SWAP3
0xd79 AND
0xd7a SWAP2
0xd7b PUSH4 0x8fe123d7
0xd80 SWAP2
0xd81 PUSH1 0x24
0xd83 DUP1
0xd84 DUP3
0xd85 ADD
0xd86 SWAP3
0xd87 PUSH1 0x0
0xd89 SWAP3
0xd8a SWAP1
0xd8b SWAP2
0xd8c SWAP1
0xd8d DUP3
0xd8e SWAP1
0xd8f SUB
0xd90 ADD
0xd91 DUP2
0xd92 DUP4
0xd93 DUP8
0xd94 DUP1
0xd95 EXTCODESIZE
0xd96 ISZERO
0xd97 DUP1
0xd98 ISZERO
0xd99 PUSH2 0x150
0xd9c JUMPI
---
0xd29: V977 = RETURNDATASIZE
0xd2a: V978 = 0x0
0xd2d: RETURNDATACOPY 0x0 0x0 V977
0xd2e: V979 = RETURNDATASIZE
0xd2f: V980 = 0x0
0xd31: REVERT 0x0 V979
0xd32: JUMPDEST 
0xd38: V981 = 0x169
0xd3b: THROW 
0xd3c: JUMPDEST 
0xd3d: V982 = 0x1
0xd3f: V983 = S[0x1]
0xd40: V984 = 0x40
0xd43: V985 = M[0x40]
0xd44: V986 = 0x8fe123d700000000000000000000000000000000000000000000000000000000
0xd66: M[V985] = 0x8fe123d700000000000000000000000000000000000000000000000000000000
0xd67: V987 = CALLER
0xd68: V988 = 0x4
0xd6b: V989 = ADD V985 0x4
0xd6c: M[V989] = V987
0xd6e: V990 = M[0x40]
0xd6f: V991 = 0x1
0xd71: V992 = 0xa0
0xd73: V993 = 0x2
0xd75: V994 = EXP 0x2 0xa0
0xd76: V995 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd79: V996 = AND V983 0xffffffffffffffffffffffffffffffffffffffff
0xd7b: V997 = 0x8fe123d7
0xd81: V998 = 0x24
0xd85: V999 = ADD V985 0x24
0xd87: V1000 = 0x0
0xd8f: V1001 = SUB V985 V990
0xd90: V1002 = ADD V1001 0x24
0xd95: V1003 = EXTCODESIZE V996
0xd96: V1004 = ISZERO V1003
0xd98: V1005 = ISZERO V1004
0xd99: V1006 = 0x150
0xd9c: THROWI V1005
---
Entry stack: [V974]
Stack pops: 0
Stack additions: [V1004, V996, 0x0, V990, V1002, V990, 0x0, V999, 0x8fe123d7, V996]
Exit stack: []

================================

Block 0xd9d
[0xd9d:0xdab]
---
Predecessors: [0xd29]
Successors: [0xdac]
---
0xd9d PUSH1 0x0
0xd9f DUP1
0xda0 REVERT
0xda1 JUMPDEST
0xda2 POP
0xda3 GAS
0xda4 CALL
0xda5 ISZERO
0xda6 DUP1
0xda7 ISZERO
0xda8 PUSH2 0x164
0xdab JUMPI
---
0xd9d: V1007 = 0x0
0xda0: REVERT 0x0 0x0
0xda1: JUMPDEST 
0xda3: V1008 = GAS
0xda4: V1009 = CALL V1008 S1 S2 S3 S4 S5 S6
0xda5: V1010 = ISZERO V1009
0xda7: V1011 = ISZERO V1010
0xda8: V1012 = 0x164
0xdab: THROWI V1011
---
Entry stack: [V996, 0x8fe123d7, V999, 0x0, V990, V1002, V990, 0x0, V996, V1004]
Stack pops: 0
Stack additions: [V1010]
Exit stack: []

================================

Block 0xdac
[0xdac:0xdb9]
---
Predecessors: [0xd9d]
Successors: [0xdba]
---
0xdac RETURNDATASIZE
0xdad PUSH1 0x0
0xdaf DUP1
0xdb0 RETURNDATACOPY
0xdb1 RETURNDATASIZE
0xdb2 PUSH1 0x0
0xdb4 REVERT
0xdb5 JUMPDEST
0xdb6 POP
0xdb7 POP
0xdb8 POP
0xdb9 POP
---
0xdac: V1013 = RETURNDATASIZE
0xdad: V1014 = 0x0
0xdb0: RETURNDATACOPY 0x0 0x0 V1013
0xdb1: V1015 = RETURNDATASIZE
0xdb2: V1016 = 0x0
0xdb4: REVERT 0x0 V1015
0xdb5: JUMPDEST 
---
Entry stack: [V1010]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdba
[0xdba:0xdc3]
---
Predecessors: [0xdac]
Successors: [0xdc4]
---
0xdba JUMPDEST
0xdbb STOP
0xdbc JUMPDEST
0xdbd CALLVALUE
0xdbe DUP1
0xdbf ISZERO
0xdc0 PUSH2 0x177
0xdc3 JUMPI
---
0xdba: JUMPDEST 
0xdbb: STOP 
0xdbc: JUMPDEST 
0xdbd: V1017 = CALLVALUE
0xdbf: V1018 = ISZERO V1017
0xdc0: V1019 = 0x177
0xdc3: THROWI V1018
---
Entry stack: []
Stack pops: 0
Stack additions: [V1017]
Exit stack: []

================================

Block 0xdc4
[0xdc4:0xdf4]
---
Predecessors: [0xdba]
Successors: [0xdf5]
---
0xdc4 PUSH1 0x0
0xdc6 DUP1
0xdc7 REVERT
0xdc8 JUMPDEST
0xdc9 POP
0xdca PUSH2 0x180
0xdcd PUSH2 0x1d2
0xdd0 JUMP
0xdd1 JUMPDEST
0xdd2 PUSH1 0x40
0xdd4 DUP1
0xdd5 MLOAD
0xdd6 PUSH1 0x1
0xdd8 PUSH1 0xa0
0xdda PUSH1 0x2
0xddc EXP
0xddd SUB
0xdde SWAP1
0xddf SWAP3
0xde0 AND
0xde1 DUP3
0xde2 MSTORE
0xde3 MLOAD
0xde4 SWAP1
0xde5 DUP2
0xde6 SWAP1
0xde7 SUB
0xde8 PUSH1 0x20
0xdea ADD
0xdeb SWAP1
0xdec RETURN
0xded JUMPDEST
0xdee CALLVALUE
0xdef DUP1
0xdf0 ISZERO
0xdf1 PUSH2 0x1a8
0xdf4 JUMPI
---
0xdc4: V1020 = 0x0
0xdc7: REVERT 0x0 0x0
0xdc8: JUMPDEST 
0xdca: V1021 = 0x180
0xdcd: V1022 = 0x1d2
0xdd0: THROW 
0xdd1: JUMPDEST 
0xdd2: V1023 = 0x40
0xdd5: V1024 = M[0x40]
0xdd6: V1025 = 0x1
0xdd8: V1026 = 0xa0
0xdda: V1027 = 0x2
0xddc: V1028 = EXP 0x2 0xa0
0xddd: V1029 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde0: V1030 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xde2: M[V1024] = V1030
0xde3: V1031 = M[0x40]
0xde7: V1032 = SUB V1024 V1031
0xde8: V1033 = 0x20
0xdea: V1034 = ADD 0x20 V1032
0xdec: RETURN V1031 V1034
0xded: JUMPDEST 
0xdee: V1035 = CALLVALUE
0xdf0: V1036 = ISZERO V1035
0xdf1: V1037 = 0x1a8
0xdf4: THROWI V1036
---
Entry stack: [V1017]
Stack pops: 0
Stack additions: [0x180, V1035]
Exit stack: []

================================

Block 0xdf5
[0xdf5:0xe09]
---
Predecessors: [0xdc4]
Successors: [0xe0a]
---
0xdf5 PUSH1 0x0
0xdf7 DUP1
0xdf8 REVERT
0xdf9 JUMPDEST
0xdfa POP
0xdfb PUSH2 0x180
0xdfe PUSH2 0x1e1
0xe01 JUMP
0xe02 JUMPDEST
0xe03 CALLVALUE
0xe04 DUP1
0xe05 ISZERO
0xe06 PUSH2 0x1bd
0xe09 JUMPI
---
0xdf5: V1038 = 0x0
0xdf8: REVERT 0x0 0x0
0xdf9: JUMPDEST 
0xdfb: V1039 = 0x180
0xdfe: V1040 = 0x1e1
0xe01: THROW 
0xe02: JUMPDEST 
0xe03: V1041 = CALLVALUE
0xe05: V1042 = ISZERO V1041
0xe06: V1043 = 0x1bd
0xe09: THROWI V1042
---
Entry stack: [V1035]
Stack pops: 0
Stack additions: [0x180, V1041]
Exit stack: []

================================

Block 0xe0a
[0xe0a:0xe52]
---
Predecessors: [0xdf5]
Successors: [0xe53]
---
0xe0a PUSH1 0x0
0xe0c DUP1
0xe0d REVERT
0xe0e JUMPDEST
0xe0f POP
0xe10 PUSH2 0x169
0xe13 PUSH1 0x1
0xe15 PUSH1 0xa0
0xe17 PUSH1 0x2
0xe19 EXP
0xe1a SUB
0xe1b PUSH1 0x4
0xe1d CALLDATALOAD
0xe1e AND
0xe1f PUSH2 0x1f0
0xe22 JUMP
0xe23 JUMPDEST
0xe24 PUSH1 0x1
0xe26 SLOAD
0xe27 PUSH1 0x1
0xe29 PUSH1 0xa0
0xe2b PUSH1 0x2
0xe2d EXP
0xe2e SUB
0xe2f AND
0xe30 DUP2
0xe31 JUMP
0xe32 JUMPDEST
0xe33 PUSH1 0x0
0xe35 SLOAD
0xe36 PUSH1 0x1
0xe38 PUSH1 0xa0
0xe3a PUSH1 0x2
0xe3c EXP
0xe3d SUB
0xe3e AND
0xe3f DUP2
0xe40 JUMP
0xe41 JUMPDEST
0xe42 PUSH1 0x0
0xe44 SLOAD
0xe45 PUSH1 0x1
0xe47 PUSH1 0xa0
0xe49 PUSH1 0x2
0xe4b EXP
0xe4c SUB
0xe4d AND
0xe4e ISZERO
0xe4f PUSH2 0x268
0xe52 JUMPI
---
0xe0a: V1044 = 0x0
0xe0d: REVERT 0x0 0x0
0xe0e: JUMPDEST 
0xe10: V1045 = 0x169
0xe13: V1046 = 0x1
0xe15: V1047 = 0xa0
0xe17: V1048 = 0x2
0xe19: V1049 = EXP 0x2 0xa0
0xe1a: V1050 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1b: V1051 = 0x4
0xe1d: V1052 = CALLDATALOAD 0x4
0xe1e: V1053 = AND V1052 0xffffffffffffffffffffffffffffffffffffffff
0xe1f: V1054 = 0x1f0
0xe22: THROW 
0xe23: JUMPDEST 
0xe24: V1055 = 0x1
0xe26: V1056 = S[0x1]
0xe27: V1057 = 0x1
0xe29: V1058 = 0xa0
0xe2b: V1059 = 0x2
0xe2d: V1060 = EXP 0x2 0xa0
0xe2e: V1061 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2f: V1062 = AND 0xffffffffffffffffffffffffffffffffffffffff V1056
0xe31: JUMP S0
0xe32: JUMPDEST 
0xe33: V1063 = 0x0
0xe35: V1064 = S[0x0]
0xe36: V1065 = 0x1
0xe38: V1066 = 0xa0
0xe3a: V1067 = 0x2
0xe3c: V1068 = EXP 0x2 0xa0
0xe3d: V1069 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3e: V1070 = AND 0xffffffffffffffffffffffffffffffffffffffff V1064
0xe40: JUMP S0
0xe41: JUMPDEST 
0xe42: V1071 = 0x0
0xe44: V1072 = S[0x0]
0xe45: V1073 = 0x1
0xe47: V1074 = 0xa0
0xe49: V1075 = 0x2
0xe4b: V1076 = EXP 0x2 0xa0
0xe4c: V1077 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe4d: V1078 = AND 0xffffffffffffffffffffffffffffffffffffffff V1072
0xe4e: V1079 = ISZERO V1078
0xe4f: V1080 = 0x268
0xe52: THROWI V1079
---
Entry stack: [V1041]
Stack pops: 0
Stack additions: [V1053, 0x169, V1062, S0, V1070, S0]
Exit stack: []

================================

Block 0xe53
[0xe53:0xf45]
---
Predecessors: [0xe0a]
Successors: []
---
0xe53 PUSH1 0x40
0xe55 DUP1
0xe56 MLOAD
0xe57 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe78 DUP2
0xe79 MSTORE
0xe7a PUSH1 0x20
0xe7c PUSH1 0x4
0xe7e DUP3
0xe7f ADD
0xe80 MSTORE
0xe81 PUSH1 0x1d
0xe83 PUSH1 0x24
0xe85 DUP3
0xe86 ADD
0xe87 MSTORE
0xe88 PUSH32 0x72656665727265722063616e206f6e6c7920626520736574206f6e6365000000
0xea9 PUSH1 0x44
0xeab DUP3
0xeac ADD
0xead MSTORE
0xeae SWAP1
0xeaf MLOAD
0xeb0 SWAP1
0xeb1 DUP2
0xeb2 SWAP1
0xeb3 SUB
0xeb4 PUSH1 0x64
0xeb6 ADD
0xeb7 SWAP1
0xeb8 REVERT
0xeb9 JUMPDEST
0xeba PUSH1 0x0
0xebc DUP1
0xebd SLOAD
0xebe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed3 NOT
0xed4 AND
0xed5 PUSH1 0x1
0xed7 PUSH1 0xa0
0xed9 PUSH1 0x2
0xedb EXP
0xedc SUB
0xedd SWAP3
0xede SWAP1
0xedf SWAP3
0xee0 AND
0xee1 SWAP2
0xee2 SWAP1
0xee3 SWAP2
0xee4 OR
0xee5 SWAP1
0xee6 SSTORE
0xee7 JUMP
0xee8 STOP
0xee9 LOG1
0xeea PUSH6 0x627a7a723058
0xef1 SHA3
0xef2 ADD
0xef3 MISSING 0xd6
0xef4 GT
0xef5 MISSING 0xe6
0xef6 MISSING 0xaf
0xef7 DELEGATECALL
0xef8 AND
0xef9 EXTCODESIZE
0xefa MISSING 0x28
0xefb LOG3
0xefc PUSH7 0x562072ac6c963d
0xf04 SWAP1
0xf05 CODECOPY
0xf06 MISSING 0xdf
0xf07 PUSH24 0x17cff8a6775c73433b8b0029a165627a7a723058205759ed
0xf20 MISSING 0x29
0xf21 PUSH20 0x4c4719f4f9703cf9df2ca2581a361be50e8d3a6
0xf36 PUSH15 0xace8b4c846f30029
---
0xe53: V1081 = 0x40
0xe56: V1082 = M[0x40]
0xe57: V1083 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe79: M[V1082] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe7a: V1084 = 0x20
0xe7c: V1085 = 0x4
0xe7f: V1086 = ADD V1082 0x4
0xe80: M[V1086] = 0x20
0xe81: V1087 = 0x1d
0xe83: V1088 = 0x24
0xe86: V1089 = ADD V1082 0x24
0xe87: M[V1089] = 0x1d
0xe88: V1090 = 0x72656665727265722063616e206f6e6c7920626520736574206f6e6365000000
0xea9: V1091 = 0x44
0xeac: V1092 = ADD V1082 0x44
0xead: M[V1092] = 0x72656665727265722063616e206f6e6c7920626520736574206f6e6365000000
0xeaf: V1093 = M[0x40]
0xeb3: V1094 = SUB V1082 V1093
0xeb4: V1095 = 0x64
0xeb6: V1096 = ADD 0x64 V1094
0xeb8: REVERT V1093 V1096
0xeb9: JUMPDEST 
0xeba: V1097 = 0x0
0xebd: V1098 = S[0x0]
0xebe: V1099 = 0xffffffffffffffffffffffffffffffffffffffff
0xed3: V1100 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xed4: V1101 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1098
0xed5: V1102 = 0x1
0xed7: V1103 = 0xa0
0xed9: V1104 = 0x2
0xedb: V1105 = EXP 0x2 0xa0
0xedc: V1106 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee0: V1107 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xee4: V1108 = OR V1107 V1101
0xee6: S[0x0] = V1108
0xee7: JUMP S1
0xee8: STOP 
0xee9: LOG S0 S1 S2
0xeea: V1109 = 0x627a7a723058
0xef1: V1110 = SHA3 0x627a7a723058 S3
0xef2: V1111 = ADD V1110 S4
0xef3: MISSING 0xd6
0xef4: V1112 = GT S0 S1
0xef5: MISSING 0xe6
0xef6: MISSING 0xaf
0xef7: V1113 = DELEGATECALL S0 S1 S2 S3 S4 S5
0xef8: V1114 = AND V1113 S6
0xef9: V1115 = EXTCODESIZE V1114
0xefa: MISSING 0x28
0xefb: LOG S0 S1 S2 S3 S4
0xefc: V1116 = 0x562072ac6c963d
0xf05: CODECOPY S5 0x562072ac6c963d S6
0xf06: MISSING 0xdf
0xf07: V1117 = 0x17cff8a6775c73433b8b0029a165627a7a723058205759ed
0xf20: MISSING 0x29
0xf21: V1118 = 0x4c4719f4f9703cf9df2ca2581a361be50e8d3a6
0xf36: V1119 = 0xace8b4c846f30029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1111, V1112, V1115, 0x17cff8a6775c73433b8b0029a165627a7a723058205759ed, 0xace8b4c846f30029, 0x4c4719f4f9703cf9df2ca2581a361be50e8d3a6]
Exit stack: []

================================

Function 0:
Public function signature: 0x9e69ede
Entry block: 0x109
Exit block: 0x12a
Body: 0x109, 0x111, 0x115, 0x12a, 0x5cb

Function 1:
Public function signature: 0x4a3b68cc
Entry block: 0x146
Exit block: 0x167
Body: 0x146, 0x14e, 0x152, 0x167, 0x5e6

Function 2:
Public function signature: 0x8fe123d7
Entry block: 0x17b
Exit block: 0x107
Body: 0x107, 0x17b, 0x183, 0x187

Function 3:
Public function signature: 0xd35ada32
Entry block: 0x19c
Exit block: 0x107
Body: 0x107, 0x19c

Function 4:
Public function signature: 0xfefa9bb1
Entry block: 0x1b6
Exit block: 0x107
Body: 0x107, 0x1b6, 0x1be, 0x1c2, 0x5fb, 0x61d, 0x692, 0x6c1, 0x6e5, 0x6ee, 0x748, 0x74c, 0x757, 0x760, 0x7bd

Function 5:
Public fallback function
Entry block: 0x53
Exit block: 0x107
Body: 0x53, 0x73, 0x7d, 0x82, 0x89, 0xfe, 0x107

Function 6:
Private function
Entry block: 0x456
Exit block: 0x5c6
Body: 0x456, 0x4c9, 0x4dd, 0x4f3, 0x52a, 0x53e, 0x555, 0x560, 0x5c6

Function 7:
Private function
Entry block: 0x1d7
Exit block: 0x416
Body: 0x1d7, 0x26d, 0x280, 0x28e, 0x30a, 0x317, 0x348, 0x38e, 0x3cc, 0x3e9, 0x3ef, 0x416, 0x7ad

