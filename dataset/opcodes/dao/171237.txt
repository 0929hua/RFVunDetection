Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0]
Successors: [0x1a, 0x74]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0x74
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0x74
0x19: JUMPI 0x74 V8
---
Entry stack: [V2]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x47]
---
Predecessors: [0x10]
Successors: [0x48, 0x79]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3b SWAP1
0x3c DIV
0x3d DUP1
0x3e PUSH4 0x454bd6c
0x43 EQ
0x44 PUSH2 0x79
0x47 JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0x100000000000000000000000000000000000000000000000000000000
0x3c: V13 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x3e: V14 = 0x454bd6c
0x43: V15 = EQ 0x454bd6c V13
0x44: V16 = 0x79
0x47: JUMPI 0x79 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x1a]
Successors: [0x53, 0xbd]
---
0x48 DUP1
0x49 PUSH4 0x2e1a7d4d
0x4e EQ
0x4f PUSH2 0xbd
0x52 JUMPI
---
0x49: V17 = 0x2e1a7d4d
0x4e: V18 = EQ 0x2e1a7d4d V13
0x4f: V19 = 0xbd
0x52: JUMPI 0xbd V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0xeb]
---
0x53 DUP1
0x54 PUSH4 0x3ccfd60b
0x59 EQ
0x5a PUSH2 0xeb
0x5d JUMPI
---
0x54: V20 = 0x3ccfd60b
0x59: V21 = EQ 0x3ccfd60b V13
0x5a: V22 = 0xeb
0x5d: JUMPI 0xeb V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0xf5]
---
0x5e DUP1
0x5f PUSH4 0x83197ef0
0x64 EQ
0x65 PUSH2 0xf5
0x68 JUMPI
---
0x5f: V23 = 0x83197ef0
0x64: V24 = EQ 0x83197ef0 V13
0x65: V25 = 0xf5
0x68: JUMPI 0xf5 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0xff]
---
0x69 DUP1
0x6a PUSH4 0x93be337a
0x6f EQ
0x70 PUSH2 0xff
0x73 JUMPI
---
0x6a: V26 = 0x93be337a
0x6f: V27 = EQ 0x93be337a V13
0x70: V28 = 0xff
0x73: JUMPI 0xff V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x78]
---
Predecessors: [0x10, 0x69]
Successors: []
---
0x74 JUMPDEST
0x75 PUSH1 0x0
0x77 DUP1
0x78 REVERT
---
0x74: JUMPDEST 
0x75: V29 = 0x0
0x78: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x79
[0x79:0x8a]
---
Predecessors: [0x1a]
Successors: [0x8b, 0x8f]
---
0x79 JUMPDEST
0x7a PUSH2 0xbb
0x7d PUSH1 0x4
0x7f DUP1
0x80 CALLDATASIZE
0x81 SUB
0x82 PUSH1 0x20
0x84 DUP2
0x85 LT
0x86 ISZERO
0x87 PUSH2 0x8f
0x8a JUMPI
---
0x79: JUMPDEST 
0x7a: V30 = 0xbb
0x7d: V31 = 0x4
0x80: V32 = CALLDATASIZE
0x81: V33 = SUB V32 0x4
0x82: V34 = 0x20
0x85: V35 = LT V33 0x20
0x86: V36 = ISZERO V35
0x87: V37 = 0x8f
0x8a: JUMPI 0x8f V36
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbb, 0x4, V33]
Exit stack: [V13, 0xbb, 0x4, V33]

================================

Block 0x8b
[0x8b:0x8e]
---
Predecessors: [0x79]
Successors: []
---
0x8b PUSH1 0x0
0x8d DUP1
0x8e REVERT
---
0x8b: V38 = 0x0
0x8e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbb, 0x4, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbb, 0x4, V33]

================================

Block 0x8f
[0x8f:0xba]
---
Predecessors: [0x79]
Successors: [0x109]
---
0x8f JUMPDEST
0x90 DUP2
0x91 ADD
0x92 SWAP1
0x93 DUP1
0x94 DUP1
0x95 CALLDATALOAD
0x96 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab AND
0xac SWAP1
0xad PUSH1 0x20
0xaf ADD
0xb0 SWAP1
0xb1 SWAP3
0xb2 SWAP2
0xb3 SWAP1
0xb4 POP
0xb5 POP
0xb6 POP
0xb7 PUSH2 0x109
0xba JUMP
---
0x8f: JUMPDEST 
0x91: V39 = ADD 0x4 V33
0x95: V40 = CALLDATALOAD 0x4
0x96: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xab: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xad: V43 = 0x20
0xaf: V44 = ADD 0x20 0x4
0xb7: V45 = 0x109
0xba: JUMP 0x109
---
Entry stack: [V13, 0xbb, 0x4, V33]
Stack pops: 2
Stack additions: [V42]
Exit stack: [V13, 0xbb, V42]

================================

Block 0xbb
[0xbb:0xbc]
---
Predecessors: [0x1a0]
Successors: []
---
0xbb JUMPDEST
0xbc STOP
---
0xbb: JUMPDEST 
0xbc: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xbd
[0xbd:0xce]
---
Predecessors: [0x48]
Successors: [0xcf, 0xd3]
---
0xbd JUMPDEST
0xbe PUSH2 0xe9
0xc1 PUSH1 0x4
0xc3 DUP1
0xc4 CALLDATASIZE
0xc5 SUB
0xc6 PUSH1 0x20
0xc8 DUP2
0xc9 LT
0xca ISZERO
0xcb PUSH2 0xd3
0xce JUMPI
---
0xbd: JUMPDEST 
0xbe: V46 = 0xe9
0xc1: V47 = 0x4
0xc4: V48 = CALLDATASIZE
0xc5: V49 = SUB V48 0x4
0xc6: V50 = 0x20
0xc9: V51 = LT V49 0x20
0xca: V52 = ISZERO V51
0xcb: V53 = 0xd3
0xce: JUMPI 0xd3 V52
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe9, 0x4, V49]
Exit stack: [V13, 0xe9, 0x4, V49]

================================

Block 0xcf
[0xcf:0xd2]
---
Predecessors: [0xbd]
Successors: []
---
0xcf PUSH1 0x0
0xd1 DUP1
0xd2 REVERT
---
0xcf: V54 = 0x0
0xd2: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe9, 0x4, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe9, 0x4, V49]

================================

Block 0xd3
[0xd3:0xe8]
---
Predecessors: [0xbd]
Successors: [0x1a3]
---
0xd3 JUMPDEST
0xd4 DUP2
0xd5 ADD
0xd6 SWAP1
0xd7 DUP1
0xd8 DUP1
0xd9 CALLDATALOAD
0xda SWAP1
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP1
0xdf SWAP3
0xe0 SWAP2
0xe1 SWAP1
0xe2 POP
0xe3 POP
0xe4 POP
0xe5 PUSH2 0x1a3
0xe8 JUMP
---
0xd3: JUMPDEST 
0xd5: V55 = ADD 0x4 V49
0xd9: V56 = CALLDATALOAD 0x4
0xdb: V57 = 0x20
0xdd: V58 = ADD 0x20 0x4
0xe5: V59 = 0x1a3
0xe8: JUMP 0x1a3
---
Entry stack: [V13, 0xe9, 0x4, V49]
Stack pops: 2
Stack additions: [V56]
Exit stack: [V13, 0xe9, V56]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: [0x28f]
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0x53]
Successors: [0x292]
---
0xeb JUMPDEST
0xec PUSH2 0xf3
0xef PUSH2 0x292
0xf2 JUMP
---
0xeb: JUMPDEST 
0xec: V60 = 0xf3
0xef: V61 = 0x292
0xf2: JUMP 0x292
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V13, 0xf3]

================================

Block 0xf3
[0xf3:0xf4]
---
Predecessors: [0x365]
Successors: []
---
0xf3 JUMPDEST
0xf4 STOP
---
0xf3: JUMPDEST 
0xf4: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0x5e]
Successors: [0x367]
---
0xf5 JUMPDEST
0xf6 PUSH2 0xfd
0xf9 PUSH2 0x367
0xfc JUMP
---
0xf5: JUMPDEST 
0xf6: V62 = 0xfd
0xf9: V63 = 0x367
0xfc: JUMP 0x367
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfd]
Exit stack: [V13, 0xfd]

================================

Block 0xfd
[0xfd:0xfe]
---
Predecessors: [0x3d5]
Successors: []
---
0xfd JUMPDEST
0xfe STOP
---
0xfd: JUMPDEST 
0xfe: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xff
[0xff:0x106]
---
Predecessors: [0x69]
Successors: [0x3d7]
---
0xff JUMPDEST
0x100 PUSH2 0x107
0x103 PUSH2 0x3d7
0x106 JUMP
---
0xff: JUMPDEST 
0x100: V64 = 0x107
0x103: V65 = 0x3d7
0x106: JUMP 0x3d7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V13, 0x107]

================================

Block 0x107
[0x107:0x108]
---
Predecessors: [0x433]
Successors: []
---
0x107 JUMPDEST
0x108 STOP
---
0x107: JUMPDEST 
0x108: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x109
[0x109:0x15e]
---
Predecessors: [0x8f]
Successors: [0x15f, 0x1a0]
---
0x109 JUMPDEST
0x10a PUSH1 0x0
0x10c DUP1
0x10d SWAP1
0x10e SLOAD
0x10f SWAP1
0x110 PUSH2 0x100
0x113 EXP
0x114 SWAP1
0x115 DIV
0x116 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12b AND
0x12c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x141 AND
0x142 CALLER
0x143 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x158 AND
0x159 EQ
0x15a ISZERO
0x15b PUSH2 0x1a0
0x15e JUMPI
---
0x109: JUMPDEST 
0x10a: V66 = 0x0
0x10e: V67 = S[0x0]
0x110: V68 = 0x100
0x113: V69 = EXP 0x100 0x0
0x115: V70 = DIV V67 0x1
0x116: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x12b: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x12c: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x141: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x142: V75 = CALLER
0x143: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x158: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x159: V78 = EQ V77 V74
0x15a: V79 = ISZERO V78
0x15b: V80 = 0x1a0
0x15e: JUMPI 0x1a0 V79
---
Entry stack: [V13, 0xbb, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbb, V42]

================================

Block 0x15f
[0x15f:0x19f]
---
Predecessors: [0x109]
Successors: [0x1a0]
---
0x15f DUP1
0x160 PUSH1 0x1
0x162 PUSH1 0x0
0x164 PUSH2 0x100
0x167 EXP
0x168 DUP2
0x169 SLOAD
0x16a DUP2
0x16b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x180 MUL
0x181 NOT
0x182 AND
0x183 SWAP1
0x184 DUP4
0x185 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19a AND
0x19b MUL
0x19c OR
0x19d SWAP1
0x19e SSTORE
0x19f POP
---
0x160: V81 = 0x1
0x162: V82 = 0x0
0x164: V83 = 0x100
0x167: V84 = EXP 0x100 0x0
0x169: V85 = S[0x1]
0x16b: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x180: V87 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x181: V88 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x182: V89 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V85
0x185: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x19b: V92 = MUL V91 0x1
0x19c: V93 = OR V92 V89
0x19e: S[0x1] = V93
---
Entry stack: [V13, 0xbb, V42]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xbb, V42]

================================

Block 0x1a0
[0x1a0:0x1a2]
---
Predecessors: [0x109, 0x15f]
Successors: [0xbb]
---
0x1a0 JUMPDEST
0x1a1 POP
0x1a2 JUMP
---
0x1a0: JUMPDEST 
0x1a2: JUMP 0xbb
---
Entry stack: [V13, 0xbb, V42]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a3
[0x1a3:0x1f8]
---
Predecessors: [0xd3]
Successors: [0x1f9, 0x28f]
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x0
0x1a6 DUP1
0x1a7 SWAP1
0x1a8 SLOAD
0x1a9 SWAP1
0x1aa PUSH2 0x100
0x1ad EXP
0x1ae SWAP1
0x1af DIV
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc CALLER
0x1dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f2 AND
0x1f3 EQ
0x1f4 ISZERO
0x1f5 PUSH2 0x28f
0x1f8 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V94 = 0x0
0x1a8: V95 = S[0x0]
0x1aa: V96 = 0x100
0x1ad: V97 = EXP 0x100 0x0
0x1af: V98 = DIV V95 0x1
0x1b0: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1c6: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1dc: V103 = CALLER
0x1dd: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1f3: V106 = EQ V105 V102
0x1f4: V107 = ISZERO V106
0x1f5: V108 = 0x28f
0x1f8: JUMPI 0x28f V107
---
Entry stack: [V13, 0xe9, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe9, V56]

================================

Block 0x1f9
[0x1f9:0x21d]
---
Predecessors: [0x1a3]
Successors: [0x21e, 0x222]
---
0x1f9 PUSH1 0x0
0x1fb ADDRESS
0x1fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x211 AND
0x212 BALANCE
0x213 SWAP1
0x214 POP
0x215 DUP1
0x216 DUP3
0x217 LT
0x218 ISZERO
0x219 ISZERO
0x21a PUSH2 0x222
0x21d JUMPI
---
0x1f9: V109 = 0x0
0x1fb: V110 = ADDRESS
0x1fc: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x211: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x212: V113 = BALANCE V112
0x217: V114 = LT V56 V113
0x218: V115 = ISZERO V114
0x219: V116 = ISZERO V115
0x21a: V117 = 0x222
0x21d: JUMPI 0x222 V116
---
Entry stack: [V13, 0xe9, V56]
Stack pops: 1
Stack additions: [S0, V113]
Exit stack: [V13, 0xe9, V56, V113]

================================

Block 0x21e
[0x21e:0x221]
---
Predecessors: [0x1f9]
Successors: []
---
0x21e PUSH1 0x0
0x220 DUP1
0x221 REVERT
---
0x21e: V118 = 0x0
0x221: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe9, V56, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe9, V56, V113]

================================

Block 0x222
[0x222:0x263]
---
Predecessors: [0x1f9]
Successors: [0x264, 0x285]
---
0x222 JUMPDEST
0x223 DUP2
0x224 DUP2
0x225 SUB
0x226 SWAP1
0x227 POP
0x228 CALLER
0x229 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23e AND
0x23f DUP2
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 PUSH1 0x0
0x246 ADD
0x247 SWAP1
0x248 POP
0x249 PUSH1 0x0
0x24b PUSH1 0x40
0x24d MLOAD
0x24e DUP1
0x24f DUP4
0x250 SUB
0x251 DUP2
0x252 DUP6
0x253 DUP8
0x254 GAS
0x255 CALL
0x256 SWAP3
0x257 POP
0x258 POP
0x259 POP
0x25a RETURNDATASIZE
0x25b DUP1
0x25c PUSH1 0x0
0x25e DUP2
0x25f EQ
0x260 PUSH2 0x285
0x263 JUMPI
---
0x222: JUMPDEST 
0x225: V119 = SUB V113 V56
0x228: V120 = CALLER
0x229: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x240: V123 = 0x40
0x242: V124 = M[0x40]
0x244: V125 = 0x0
0x246: V126 = ADD 0x0 V124
0x249: V127 = 0x0
0x24b: V128 = 0x40
0x24d: V129 = M[0x40]
0x250: V130 = SUB V126 V129
0x254: V131 = GAS
0x255: V132 = CALL V131 V122 V119 V129 V130 V129 0x0
0x25a: V133 = RETURNDATASIZE
0x25c: V134 = 0x0
0x25f: V135 = EQ V133 0x0
0x260: V136 = 0x285
0x263: JUMPI 0x285 V135
---
Entry stack: [V13, 0xe9, V56, V113]
Stack pops: 2
Stack additions: [S1, V119, V132, V133, V133]
Exit stack: [V13, 0xe9, V56, V119, V132, V133, V133]

================================

Block 0x264
[0x264:0x284]
---
Predecessors: [0x222]
Successors: [0x28a]
---
0x264 PUSH1 0x40
0x266 MLOAD
0x267 SWAP2
0x268 POP
0x269 PUSH1 0x1f
0x26b NOT
0x26c PUSH1 0x3f
0x26e RETURNDATASIZE
0x26f ADD
0x270 AND
0x271 DUP3
0x272 ADD
0x273 PUSH1 0x40
0x275 MSTORE
0x276 RETURNDATASIZE
0x277 DUP3
0x278 MSTORE
0x279 RETURNDATASIZE
0x27a PUSH1 0x0
0x27c PUSH1 0x20
0x27e DUP5
0x27f ADD
0x280 RETURNDATACOPY
0x281 PUSH2 0x28a
0x284 JUMP
---
0x264: V137 = 0x40
0x266: V138 = M[0x40]
0x269: V139 = 0x1f
0x26b: V140 = NOT 0x1f
0x26c: V141 = 0x3f
0x26e: V142 = RETURNDATASIZE
0x26f: V143 = ADD V142 0x3f
0x270: V144 = AND V143 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x272: V145 = ADD V138 V144
0x273: V146 = 0x40
0x275: M[0x40] = V145
0x276: V147 = RETURNDATASIZE
0x278: M[V138] = V147
0x279: V148 = RETURNDATASIZE
0x27a: V149 = 0x0
0x27c: V150 = 0x20
0x27f: V151 = ADD V138 0x20
0x280: RETURNDATACOPY V151 0x0 V148
0x281: V152 = 0x28a
0x284: JUMP 0x28a
---
Entry stack: [V13, 0xe9, V56, V119, V132, V133, V133]
Stack pops: 2
Stack additions: [V138, S0]
Exit stack: [V13, 0xe9, V56, V119, V132, V138, V133]

================================

Block 0x285
[0x285:0x289]
---
Predecessors: [0x222]
Successors: [0x28a]
---
0x285 JUMPDEST
0x286 PUSH1 0x60
0x288 SWAP2
0x289 POP
---
0x285: JUMPDEST 
0x286: V153 = 0x60
---
Entry stack: [V13, 0xe9, V56, V119, V132, V133, V133]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V13, 0xe9, V56, V119, V132, 0x60, V133]

================================

Block 0x28a
[0x28a:0x28e]
---
Predecessors: [0x264, 0x285]
Successors: [0x28f]
---
0x28a JUMPDEST
0x28b POP
0x28c POP
0x28d POP
0x28e POP
---
0x28a: JUMPDEST 
---
Entry stack: [V13, 0xe9, V56, V119, V132, S1, V133]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0xe9, V56]

================================

Block 0x28f
[0x28f:0x291]
---
Predecessors: [0x1a3, 0x28a]
Successors: [0xe9]
---
0x28f JUMPDEST
0x290 POP
0x291 JUMP
---
0x28f: JUMPDEST 
0x291: JUMP 0xe9
---
Entry stack: [V13, 0xe9, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x292
[0x292:0x2e7]
---
Predecessors: [0xeb]
Successors: [0x2e8, 0x365]
---
0x292 JUMPDEST
0x293 PUSH1 0x0
0x295 DUP1
0x296 SWAP1
0x297 SLOAD
0x298 SWAP1
0x299 PUSH2 0x100
0x29c EXP
0x29d SWAP1
0x29e DIV
0x29f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b4 AND
0x2b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ca AND
0x2cb CALLER
0x2cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e1 AND
0x2e2 EQ
0x2e3 ISZERO
0x2e4 PUSH2 0x365
0x2e7 JUMPI
---
0x292: JUMPDEST 
0x293: V154 = 0x0
0x297: V155 = S[0x0]
0x299: V156 = 0x100
0x29c: V157 = EXP 0x100 0x0
0x29e: V158 = DIV V155 0x1
0x29f: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b4: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x2b5: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x2cb: V163 = CALLER
0x2cc: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e1: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2e2: V166 = EQ V165 V162
0x2e3: V167 = ISZERO V166
0x2e4: V168 = 0x365
0x2e7: JUMPI 0x365 V167
---
Entry stack: [V13, 0xf3]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf3]

================================

Block 0x2e8
[0x2e8:0x33a]
---
Predecessors: [0x292]
Successors: [0x33b, 0x35c]
---
0x2e8 CALLER
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff ADDRESS
0x300 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x315 AND
0x316 BALANCE
0x317 PUSH1 0x40
0x319 MLOAD
0x31a DUP1
0x31b PUSH1 0x0
0x31d ADD
0x31e SWAP1
0x31f POP
0x320 PUSH1 0x0
0x322 PUSH1 0x40
0x324 MLOAD
0x325 DUP1
0x326 DUP4
0x327 SUB
0x328 DUP2
0x329 DUP6
0x32a DUP8
0x32b GAS
0x32c CALL
0x32d SWAP3
0x32e POP
0x32f POP
0x330 POP
0x331 RETURNDATASIZE
0x332 DUP1
0x333 PUSH1 0x0
0x335 DUP2
0x336 EQ
0x337 PUSH2 0x35c
0x33a JUMPI
---
0x2e8: V169 = CALLER
0x2e9: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2ff: V172 = ADDRESS
0x300: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x315: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x316: V175 = BALANCE V174
0x317: V176 = 0x40
0x319: V177 = M[0x40]
0x31b: V178 = 0x0
0x31d: V179 = ADD 0x0 V177
0x320: V180 = 0x0
0x322: V181 = 0x40
0x324: V182 = M[0x40]
0x327: V183 = SUB V179 V182
0x32b: V184 = GAS
0x32c: V185 = CALL V184 V171 V175 V182 V183 V182 0x0
0x331: V186 = RETURNDATASIZE
0x333: V187 = 0x0
0x336: V188 = EQ V186 0x0
0x337: V189 = 0x35c
0x33a: JUMPI 0x35c V188
---
Entry stack: [V13, 0xf3]
Stack pops: 0
Stack additions: [V185, V186, V186]
Exit stack: [V13, 0xf3, V185, V186, V186]

================================

Block 0x33b
[0x33b:0x35b]
---
Predecessors: [0x2e8]
Successors: [0x361]
---
0x33b PUSH1 0x40
0x33d MLOAD
0x33e SWAP2
0x33f POP
0x340 PUSH1 0x1f
0x342 NOT
0x343 PUSH1 0x3f
0x345 RETURNDATASIZE
0x346 ADD
0x347 AND
0x348 DUP3
0x349 ADD
0x34a PUSH1 0x40
0x34c MSTORE
0x34d RETURNDATASIZE
0x34e DUP3
0x34f MSTORE
0x350 RETURNDATASIZE
0x351 PUSH1 0x0
0x353 PUSH1 0x20
0x355 DUP5
0x356 ADD
0x357 RETURNDATACOPY
0x358 PUSH2 0x361
0x35b JUMP
---
0x33b: V190 = 0x40
0x33d: V191 = M[0x40]
0x340: V192 = 0x1f
0x342: V193 = NOT 0x1f
0x343: V194 = 0x3f
0x345: V195 = RETURNDATASIZE
0x346: V196 = ADD V195 0x3f
0x347: V197 = AND V196 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x349: V198 = ADD V191 V197
0x34a: V199 = 0x40
0x34c: M[0x40] = V198
0x34d: V200 = RETURNDATASIZE
0x34f: M[V191] = V200
0x350: V201 = RETURNDATASIZE
0x351: V202 = 0x0
0x353: V203 = 0x20
0x356: V204 = ADD V191 0x20
0x357: RETURNDATACOPY V204 0x0 V201
0x358: V205 = 0x361
0x35b: JUMP 0x361
---
Entry stack: [V13, 0xf3, V185, V186, V186]
Stack pops: 2
Stack additions: [V191, S0]
Exit stack: [V13, 0xf3, V185, V191, V186]

================================

Block 0x35c
[0x35c:0x360]
---
Predecessors: [0x2e8]
Successors: [0x361]
---
0x35c JUMPDEST
0x35d PUSH1 0x60
0x35f SWAP2
0x360 POP
---
0x35c: JUMPDEST 
0x35d: V206 = 0x60
---
Entry stack: [V13, 0xf3, V185, V186, V186]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V13, 0xf3, V185, 0x60, V186]

================================

Block 0x361
[0x361:0x364]
---
Predecessors: [0x33b, 0x35c]
Successors: [0x365]
---
0x361 JUMPDEST
0x362 POP
0x363 POP
0x364 POP
---
0x361: JUMPDEST 
---
Entry stack: [V13, 0xf3, V185, S1, V186]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xf3]

================================

Block 0x365
[0x365:0x366]
---
Predecessors: [0x292, 0x361]
Successors: [0xf3]
---
0x365 JUMPDEST
0x366 JUMP
---
0x365: JUMPDEST 
0x366: JUMP 0xf3
---
Entry stack: [V13, 0xf3]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x367
[0x367:0x3bc]
---
Predecessors: [0xf5]
Successors: [0x3bd, 0x3d5]
---
0x367 JUMPDEST
0x368 PUSH1 0x0
0x36a DUP1
0x36b SWAP1
0x36c SLOAD
0x36d SWAP1
0x36e PUSH2 0x100
0x371 EXP
0x372 SWAP1
0x373 DIV
0x374 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x389 AND
0x38a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39f AND
0x3a0 CALLER
0x3a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b6 AND
0x3b7 EQ
0x3b8 ISZERO
0x3b9 PUSH2 0x3d5
0x3bc JUMPI
---
0x367: JUMPDEST 
0x368: V207 = 0x0
0x36c: V208 = S[0x0]
0x36e: V209 = 0x100
0x371: V210 = EXP 0x100 0x0
0x373: V211 = DIV V208 0x1
0x374: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x389: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x38a: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x3a0: V216 = CALLER
0x3a1: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x3b7: V219 = EQ V218 V215
0x3b8: V220 = ISZERO V219
0x3b9: V221 = 0x3d5
0x3bc: JUMPI 0x3d5 V220
---
Entry stack: [V13, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd]

================================

Block 0x3bd
[0x3bd:0x3d4]
---
Predecessors: [0x367]
Successors: []
---
0x3bd CALLER
0x3be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d3 AND
0x3d4 SELFDESTRUCT
---
0x3bd: V222 = CALLER
0x3be: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d3: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x3d4: SELFDESTRUCT V224
---
Entry stack: [V13, 0xfd]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfd]

================================

Block 0x3d5
[0x3d5:0x3d6]
---
Predecessors: [0x367]
Successors: [0xfd]
---
0x3d5 JUMPDEST
0x3d6 JUMP
---
0x3d5: JUMPDEST 
0x3d6: JUMP 0xfd
---
Entry stack: [V13, 0xfd]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x3d7
[0x3d7:0x42e]
---
Predecessors: [0xff]
Successors: [0x42f, 0x433]
---
0x3d7 JUMPDEST
0x3d8 CALLER
0x3d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ee AND
0x3ef PUSH1 0x1
0x3f1 PUSH1 0x0
0x3f3 SWAP1
0x3f4 SLOAD
0x3f5 SWAP1
0x3f6 PUSH2 0x100
0x3f9 EXP
0x3fa SWAP1
0x3fb DIV
0x3fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x411 AND
0x412 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x427 AND
0x428 EQ
0x429 ISZERO
0x42a ISZERO
0x42b PUSH2 0x433
0x42e JUMPI
---
0x3d7: JUMPDEST 
0x3d8: V225 = CALLER
0x3d9: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ee: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x3ef: V228 = 0x1
0x3f1: V229 = 0x0
0x3f4: V230 = S[0x1]
0x3f6: V231 = 0x100
0x3f9: V232 = EXP 0x100 0x0
0x3fb: V233 = DIV V230 0x1
0x3fc: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x411: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x412: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x427: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x428: V238 = EQ V237 V227
0x429: V239 = ISZERO V238
0x42a: V240 = ISZERO V239
0x42b: V241 = 0x433
0x42e: JUMPI 0x433 V240
---
Entry stack: [V13, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x107]

================================

Block 0x42f
[0x42f:0x432]
---
Predecessors: [0x3d7]
Successors: []
---
0x42f PUSH1 0x0
0x431 DUP1
0x432 REVERT
---
0x42f: V242 = 0x0
0x432: REVERT 0x0 0x0
---
Entry stack: [V13, 0x107]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x107]

================================

Block 0x433
[0x433:0x4d8]
---
Predecessors: [0x3d7]
Successors: [0x107]
---
0x433 JUMPDEST
0x434 PUSH1 0x1
0x436 PUSH1 0x0
0x438 SWAP1
0x439 SLOAD
0x43a SWAP1
0x43b PUSH2 0x100
0x43e EXP
0x43f SWAP1
0x440 DIV
0x441 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x456 AND
0x457 PUSH1 0x0
0x459 DUP1
0x45a PUSH2 0x100
0x45d EXP
0x45e DUP2
0x45f SLOAD
0x460 DUP2
0x461 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x476 MUL
0x477 NOT
0x478 AND
0x479 SWAP1
0x47a DUP4
0x47b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x490 AND
0x491 MUL
0x492 OR
0x493 SWAP1
0x494 SSTORE
0x495 POP
0x496 PUSH1 0x0
0x498 PUSH1 0x1
0x49a PUSH1 0x0
0x49c PUSH2 0x100
0x49f EXP
0x4a0 DUP2
0x4a1 SLOAD
0x4a2 DUP2
0x4a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b8 MUL
0x4b9 NOT
0x4ba AND
0x4bb SWAP1
0x4bc DUP4
0x4bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d2 AND
0x4d3 MUL
0x4d4 OR
0x4d5 SWAP1
0x4d6 SSTORE
0x4d7 POP
0x4d8 JUMP
---
0x433: JUMPDEST 
0x434: V243 = 0x1
0x436: V244 = 0x0
0x439: V245 = S[0x1]
0x43b: V246 = 0x100
0x43e: V247 = EXP 0x100 0x0
0x440: V248 = DIV V245 0x1
0x441: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x456: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x457: V251 = 0x0
0x45a: V252 = 0x100
0x45d: V253 = EXP 0x100 0x0
0x45f: V254 = S[0x0]
0x461: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x476: V256 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x477: V257 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x478: V258 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V254
0x47b: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x490: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x491: V261 = MUL V260 0x1
0x492: V262 = OR V261 V258
0x494: S[0x0] = V262
0x496: V263 = 0x0
0x498: V264 = 0x1
0x49a: V265 = 0x0
0x49c: V266 = 0x100
0x49f: V267 = EXP 0x100 0x0
0x4a1: V268 = S[0x1]
0x4a3: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b8: V270 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4b9: V271 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4ba: V272 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V268
0x4bd: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d2: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x4d3: V275 = MUL 0x0 0x1
0x4d4: V276 = OR 0x0 V272
0x4d6: S[0x1] = V276
0x4d8: JUMP 0x107
---
Entry stack: [V13, 0x107]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x4d9
[0x4d9:0x504]
---
Predecessors: []
Successors: []
---
0x4d9 INVALID
0x4da LOG1
0x4db PUSH6 0x627a7a723058
0x4e2 SHA3
0x4e3 SHA3
0x4e4 LOG3
0x4e5 SWAP15
0x4e6 DUP9
0x4e7 GASLIMIT
0x4e8 MISSING 0xdc
0x4e9 PUSH25 0xe27d44487fc69592a14599f58a4f230680e8ac2dfb0cc4b6a5
0x503 STOP
0x504 MISSING 0x29
---
0x4d9: INVALID 
0x4da: LOG S0 S1 S2
0x4db: V277 = 0x627a7a723058
0x4e2: V278 = SHA3 0x627a7a723058 S3
0x4e3: V279 = SHA3 V278 S4
0x4e4: LOG V279 S5 S6 S7 S8
0x4e7: V280 = GASLIMIT
0x4e8: MISSING 0xdc
0x4e9: V281 = 0xe27d44487fc69592a14599f58a4f230680e8ac2dfb0cc4b6a5
0x503: STOP 
0x504: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V280, S17, S24, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S9, 0xe27d44487fc69592a14599f58a4f230680e8ac2dfb0cc4b6a5]
Exit stack: []

================================

Function 0:
Public function signature: 0x454bd6c
Entry block: 0x79
Exit block: 0xbb
Body: 0x79, 0x8b, 0x8f, 0xbb, 0x109, 0x15f, 0x1a0

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0xbd
Exit block: 0xe9
Body: 0xbd, 0xcf, 0xd3, 0xe9, 0x1a3, 0x1f9, 0x21e, 0x222, 0x264, 0x285, 0x28a, 0x28f

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0xeb
Exit block: 0xf3
Body: 0xeb, 0xf3, 0x292, 0x2e8, 0x33b, 0x35c, 0x361, 0x365

Function 3:
Public function signature: 0x83197ef0
Entry block: 0xf5
Exit block: 0xfd
Body: 0xf5, 0xfd, 0x367, 0x3bd, 0x3d5

Function 4:
Public function signature: 0x93be337a
Entry block: 0xff
Exit block: 0x107
Body: 0xff, 0x107, 0x3d7, 0x42f, 0x433

Function 5:
Public fallback function
Entry block: 0x74
Exit block: 0x74
Body: 0x74

