Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3ccfd60b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3ccfd60b
0x3b: V13 = EQ V11 0x3ccfd60b
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8e]
---
0x40 DUP1
0x41 PUSH4 0x41c0e1b5
0x46 EQ
0x47 PUSH2 0x8e
0x4a JUMPI
---
0x41: V15 = 0x41c0e1b5
0x46: V16 = EQ 0x41c0e1b5 V11
0x47: V17 = 0x8e
0x4a: JUMPI 0x8e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa3]
---
0x4b DUP1
0x4c PUSH4 0x69774c2d
0x51 EQ
0x52 PUSH2 0xa3
0x55 JUMPI
---
0x4c: V18 = 0x69774c2d
0x51: V19 = EQ 0x69774c2d V11
0x52: V20 = 0xa3
0x55: JUMPI 0xa3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xab]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0xab
0x60 JUMPI
---
0x57: V21 = 0x8da5cb5b
0x5c: V22 = EQ 0x8da5cb5b V11
0x5d: V23 = 0xab
0x60: JUMPI 0xab V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xdc]
---
0x61 DUP1
0x62 PUSH4 0xb6b55f25
0x67 EQ
0x68 PUSH2 0xdc
0x6b JUMPI
---
0x62: V24 = 0xb6b55f25
0x67: V25 = EQ 0xb6b55f25 V11
0x68: V26 = 0xdc
0x6b: JUMPI 0xdc V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0xe7]
---
0x6c DUP1
0x6d PUSH4 0xf2a75fe4
0x72 EQ
0x73 PUSH2 0xe7
0x76 JUMPI
---
0x6d: V27 = 0xf2a75fe4
0x72: V28 = EQ 0xf2a75fe4 V11
0x73: V29 = 0xe7
0x76: JUMPI 0xe7 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x17d, 0x28f, 0x3ed]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b DUP1
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x79: JUMPDEST 
0x7a: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x79]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x85
[0x85:0x8d]
---
Predecessors: [0x79]
Successors: [0xfc]
---
0x85 JUMPDEST
0x86 POP
0x87 PUSH2 0x77
0x8a PUSH2 0xfc
0x8d JUMP
---
0x85: JUMPDEST 
0x87: V34 = 0x77
0x8a: V35 = 0xfc
0x8d: JUMP 0xfc
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x8e
[0x8e:0x95]
---
Predecessors: [0x40]
Successors: [0x96, 0x9a]
---
0x8e JUMPDEST
0x8f CALLVALUE
0x90 DUP1
0x91 ISZERO
0x92 PUSH2 0x9a
0x95 JUMPI
---
0x8e: JUMPDEST 
0x8f: V36 = CALLVALUE
0x91: V37 = ISZERO V36
0x92: V38 = 0x9a
0x95: JUMPI 0x9a V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x8e]
Successors: []
---
0x96 PUSH1 0x0
0x98 DUP1
0x99 REVERT
---
0x96: V39 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x9a
[0x9a:0xa2]
---
Predecessors: [0x8e]
Successors: [0x180]
---
0x9a JUMPDEST
0x9b POP
0x9c PUSH2 0x77
0x9f PUSH2 0x180
0xa2 JUMP
---
0x9a: JUMPDEST 
0x9c: V40 = 0x77
0x9f: V41 = 0x180
0xa2: JUMP 0x180
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xa3
[0xa3:0xaa]
---
Predecessors: [0x4b]
Successors: [0x1df]
---
0xa3 JUMPDEST
0xa4 PUSH2 0x77
0xa7 PUSH2 0x1df
0xaa JUMP
---
0xa3: JUMPDEST 
0xa4: V42 = 0x77
0xa7: V43 = 0x1df
0xaa: JUMP 0x1df
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xab
[0xab:0xb2]
---
Predecessors: [0x56]
Successors: [0xb3, 0xb7]
---
0xab JUMPDEST
0xac CALLVALUE
0xad DUP1
0xae ISZERO
0xaf PUSH2 0xb7
0xb2 JUMPI
---
0xab: JUMPDEST 
0xac: V44 = CALLVALUE
0xae: V45 = ISZERO V44
0xaf: V46 = 0xb7
0xb2: JUMPI 0xb7 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V11, V44]

================================

Block 0xb3
[0xb3:0xb6]
---
Predecessors: [0xab]
Successors: []
---
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 REVERT
---
0xb3: V47 = 0x0
0xb6: REVERT 0x0 0x0
---
Entry stack: [V11, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V44]

================================

Block 0xb7
[0xb7:0xbf]
---
Predecessors: [0xab]
Successors: [0x2de]
---
0xb7 JUMPDEST
0xb8 POP
0xb9 PUSH2 0xc0
0xbc PUSH2 0x2de
0xbf JUMP
---
0xb7: JUMPDEST 
0xb9: V48 = 0xc0
0xbc: V49 = 0x2de
0xbf: JUMP 0x2de
---
Entry stack: [V11, V44]
Stack pops: 1
Stack additions: [0xc0]
Exit stack: [V11, 0xc0]

================================

Block 0xc0
[0xc0:0xdb]
---
Predecessors: [0x2de]
Successors: []
---
0xc0 JUMPDEST
0xc1 PUSH1 0x40
0xc3 DUP1
0xc4 MLOAD
0xc5 PUSH1 0x1
0xc7 PUSH1 0xa0
0xc9 PUSH1 0x2
0xcb EXP
0xcc SUB
0xcd SWAP1
0xce SWAP3
0xcf AND
0xd0 DUP3
0xd1 MSTORE
0xd2 MLOAD
0xd3 SWAP1
0xd4 DUP2
0xd5 SWAP1
0xd6 SUB
0xd7 PUSH1 0x20
0xd9 ADD
0xda SWAP1
0xdb RETURN
---
0xc0: JUMPDEST 
0xc1: V50 = 0x40
0xc4: V51 = M[0x40]
0xc5: V52 = 0x1
0xc7: V53 = 0xa0
0xc9: V54 = 0x2
0xcb: V55 = EXP 0x2 0xa0
0xcc: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf: V57 = AND V257 0xffffffffffffffffffffffffffffffffffffffff
0xd1: M[V51] = V57
0xd2: V58 = M[0x40]
0xd6: V59 = SUB V51 V58
0xd7: V60 = 0x20
0xd9: V61 = ADD 0x20 V59
0xdb: RETURN V58 V61
---
Entry stack: [V11, 0xc0, V257]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc0]

================================

Block 0xdc
[0xdc:0xe6]
---
Predecessors: [0x61]
Successors: [0x2ed]
---
0xdc JUMPDEST
0xdd PUSH2 0x77
0xe0 PUSH1 0x4
0xe2 CALLDATALOAD
0xe3 PUSH2 0x2ed
0xe6 JUMP
---
0xdc: JUMPDEST 
0xdd: V62 = 0x77
0xe0: V63 = 0x4
0xe2: V64 = CALLDATALOAD 0x4
0xe3: V65 = 0x2ed
0xe6: JUMP 0x2ed
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V64]
Exit stack: [V11, 0x77, V64]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0x6c]
Successors: [0xef, 0xf3]
---
0xe7 JUMPDEST
0xe8 CALLVALUE
0xe9 DUP1
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xe7: JUMPDEST 
0xe8: V66 = CALLVALUE
0xea: V67 = ISZERO V66
0xeb: V68 = 0xf3
0xee: JUMPI 0xf3 V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V66]
Exit stack: [V11, V66]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xe7]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V69 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V11, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V66]

================================

Block 0xf3
[0xf3:0xfb]
---
Predecessors: [0xe7]
Successors: [0x36f]
---
0xf3 JUMPDEST
0xf4 POP
0xf5 PUSH2 0x77
0xf8 PUSH2 0x36f
0xfb JUMP
---
0xf3: JUMPDEST 
0xf5: V70 = 0x77
0xf8: V71 = 0x36f
0xfb: JUMP 0x36f
---
Entry stack: [V11, V66]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xfc
[0xfc:0x10f]
---
Predecessors: [0x85]
Successors: [0x110, 0x14d]
---
0xfc JUMPDEST
0xfd PUSH1 0x1
0xff SLOAD
0x100 PUSH1 0x1
0x102 PUSH1 0xa0
0x104 PUSH1 0x2
0x106 EXP
0x107 SUB
0x108 AND
0x109 CALLER
0x10a DUP2
0x10b EQ
0x10c PUSH2 0x14d
0x10f JUMPI
---
0xfc: JUMPDEST 
0xfd: V72 = 0x1
0xff: V73 = S[0x1]
0x100: V74 = 0x1
0x102: V75 = 0xa0
0x104: V76 = 0x2
0x106: V77 = EXP 0x2 0xa0
0x107: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x109: V80 = CALLER
0x10b: V81 = EQ V79 V80
0x10c: V82 = 0x14d
0x10f: JUMPI 0x14d V81
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V11, 0x77, V79]

================================

Block 0x110
[0x110:0x14c]
---
Predecessors: [0xfc]
Successors: []
---
0x110 PUSH1 0x40
0x112 DUP1
0x113 MLOAD
0x114 PUSH1 0xe5
0x116 PUSH1 0x2
0x118 EXP
0x119 PUSH3 0x461bcd
0x11d MUL
0x11e DUP2
0x11f MSTORE
0x120 PUSH1 0x20
0x122 PUSH1 0x4
0x124 DUP3
0x125 ADD
0x126 MSTORE
0x127 PUSH1 0x16
0x129 PUSH1 0x24
0x12b DUP3
0x12c ADD
0x12d MSTORE
0x12e PUSH1 0x0
0x130 DUP1
0x131 MLOAD
0x132 PUSH1 0x20
0x134 PUSH2 0x3f2
0x137 DUP4
0x138 CODECOPY
0x139 DUP2
0x13a MLOAD
0x13b SWAP2
0x13c MSTORE
0x13d PUSH1 0x44
0x13f DUP3
0x140 ADD
0x141 MSTORE
0x142 SWAP1
0x143 MLOAD
0x144 SWAP1
0x145 DUP2
0x146 SWAP1
0x147 SUB
0x148 PUSH1 0x64
0x14a ADD
0x14b SWAP1
0x14c REVERT
---
0x110: V83 = 0x40
0x113: V84 = M[0x40]
0x114: V85 = 0xe5
0x116: V86 = 0x2
0x118: V87 = EXP 0x2 0xe5
0x119: V88 = 0x461bcd
0x11d: V89 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x11f: M[V84] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x120: V90 = 0x20
0x122: V91 = 0x4
0x125: V92 = ADD V84 0x4
0x126: M[V92] = 0x20
0x127: V93 = 0x16
0x129: V94 = 0x24
0x12c: V95 = ADD V84 0x24
0x12d: M[V95] = 0x16
0x12e: V96 = 0x0
0x131: V97 = M[0x0]
0x132: V98 = 0x20
0x134: V99 = 0x3f2
0x138: CODECOPY 0x0 0x3f2 0x20
0x13a: V100 = M[0x0]
0x13c: M[0x0] = V97
0x13d: V101 = 0x44
0x140: V102 = ADD V84 0x44
0x141: M[V102] = V100
0x143: V103 = M[0x40]
0x147: V104 = SUB V84 V103
0x148: V105 = 0x64
0x14a: V106 = ADD 0x64 V104
0x14c: REVERT V103 V106
---
Entry stack: [V11, 0x77, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V79]

================================

Block 0x14d
[0x14d:0x178]
---
Predecessors: [0xfc]
Successors: [0x179, 0x17d]
---
0x14d JUMPDEST
0x14e PUSH1 0x0
0x150 DUP1
0x151 SLOAD
0x152 PUSH1 0x40
0x154 MLOAD
0x155 PUSH1 0x1
0x157 PUSH1 0xa0
0x159 PUSH1 0x2
0x15b EXP
0x15c SUB
0x15d SWAP1
0x15e SWAP2
0x15f AND
0x160 SWAP2
0x161 PUSH3 0x11170
0x165 SWAP2
0x166 DUP2
0x167 DUP2
0x168 DUP2
0x169 DUP2
0x16a DUP2
0x16b DUP9
0x16c DUP9
0x16d CALL
0x16e SWAP4
0x16f POP
0x170 POP
0x171 POP
0x172 POP
0x173 ISZERO
0x174 ISZERO
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x14d: JUMPDEST 
0x14e: V107 = 0x0
0x151: V108 = S[0x0]
0x152: V109 = 0x40
0x154: V110 = M[0x40]
0x155: V111 = 0x1
0x157: V112 = 0xa0
0x159: V113 = 0x2
0x15b: V114 = EXP 0x2 0xa0
0x15c: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V116 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x161: V117 = 0x11170
0x16d: V118 = CALL 0x11170 V116 0x0 V110 0x0 V110 0x0
0x173: V119 = ISZERO V118
0x174: V120 = ISZERO V119
0x175: V121 = 0x17d
0x178: JUMPI 0x17d V120
---
Entry stack: [V11, 0x77, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V79]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x14d]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V122 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V79]

================================

Block 0x17d
[0x17d:0x17f]
---
Predecessors: [0x14d]
Successors: [0x77]
---
0x17d JUMPDEST
0x17e POP
0x17f JUMP
---
0x17d: JUMPDEST 
0x17f: JUMP 0x77
---
Entry stack: [V11, 0x77, V79]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x180
[0x180:0x193]
---
Predecessors: [0x9a]
Successors: [0x194, 0x1d1]
---
0x180 JUMPDEST
0x181 PUSH1 0x1
0x183 SLOAD
0x184 PUSH1 0x1
0x186 PUSH1 0xa0
0x188 PUSH1 0x2
0x18a EXP
0x18b SUB
0x18c AND
0x18d CALLER
0x18e DUP2
0x18f EQ
0x190 PUSH2 0x1d1
0x193 JUMPI
---
0x180: JUMPDEST 
0x181: V123 = 0x1
0x183: V124 = S[0x1]
0x184: V125 = 0x1
0x186: V126 = 0xa0
0x188: V127 = 0x2
0x18a: V128 = EXP 0x2 0xa0
0x18b: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18c: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x18d: V131 = CALLER
0x18f: V132 = EQ V130 V131
0x190: V133 = 0x1d1
0x193: JUMPI 0x1d1 V132
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V130]
Exit stack: [V11, 0x77, V130]

================================

Block 0x194
[0x194:0x1d0]
---
Predecessors: [0x180]
Successors: []
---
0x194 PUSH1 0x40
0x196 DUP1
0x197 MLOAD
0x198 PUSH1 0xe5
0x19a PUSH1 0x2
0x19c EXP
0x19d PUSH3 0x461bcd
0x1a1 MUL
0x1a2 DUP2
0x1a3 MSTORE
0x1a4 PUSH1 0x20
0x1a6 PUSH1 0x4
0x1a8 DUP3
0x1a9 ADD
0x1aa MSTORE
0x1ab PUSH1 0x16
0x1ad PUSH1 0x24
0x1af DUP3
0x1b0 ADD
0x1b1 MSTORE
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 MLOAD
0x1b6 PUSH1 0x20
0x1b8 PUSH2 0x3f2
0x1bb DUP4
0x1bc CODECOPY
0x1bd DUP2
0x1be MLOAD
0x1bf SWAP2
0x1c0 MSTORE
0x1c1 PUSH1 0x44
0x1c3 DUP3
0x1c4 ADD
0x1c5 MSTORE
0x1c6 SWAP1
0x1c7 MLOAD
0x1c8 SWAP1
0x1c9 DUP2
0x1ca SWAP1
0x1cb SUB
0x1cc PUSH1 0x64
0x1ce ADD
0x1cf SWAP1
0x1d0 REVERT
---
0x194: V134 = 0x40
0x197: V135 = M[0x40]
0x198: V136 = 0xe5
0x19a: V137 = 0x2
0x19c: V138 = EXP 0x2 0xe5
0x19d: V139 = 0x461bcd
0x1a1: V140 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x1a3: M[V135] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1a4: V141 = 0x20
0x1a6: V142 = 0x4
0x1a9: V143 = ADD V135 0x4
0x1aa: M[V143] = 0x20
0x1ab: V144 = 0x16
0x1ad: V145 = 0x24
0x1b0: V146 = ADD V135 0x24
0x1b1: M[V146] = 0x16
0x1b2: V147 = 0x0
0x1b5: V148 = M[0x0]
0x1b6: V149 = 0x20
0x1b8: V150 = 0x3f2
0x1bc: CODECOPY 0x0 0x3f2 0x20
0x1be: V151 = M[0x0]
0x1c0: M[0x0] = V148
0x1c1: V152 = 0x44
0x1c4: V153 = ADD V135 0x44
0x1c5: M[V153] = V151
0x1c7: V154 = M[0x40]
0x1cb: V155 = SUB V135 V154
0x1cc: V156 = 0x64
0x1ce: V157 = ADD 0x64 V155
0x1d0: REVERT V154 V157
---
Entry stack: [V11, 0x77, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V130]

================================

Block 0x1d1
[0x1d1:0x1de]
---
Predecessors: [0x180]
Successors: []
---
0x1d1 JUMPDEST
0x1d2 PUSH1 0x1
0x1d4 SLOAD
0x1d5 PUSH1 0x1
0x1d7 PUSH1 0xa0
0x1d9 PUSH1 0x2
0x1db EXP
0x1dc SUB
0x1dd AND
0x1de SELFDESTRUCT
---
0x1d1: JUMPDEST 
0x1d2: V158 = 0x1
0x1d4: V159 = S[0x1]
0x1d5: V160 = 0x1
0x1d7: V161 = 0xa0
0x1d9: V162 = 0x2
0x1db: V163 = EXP 0x2 0xa0
0x1dc: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dd: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x1de: SELFDESTRUCT V165
---
Entry stack: [V11, 0x77, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V130]

================================

Block 0x1df
[0x1df:0x1f5]
---
Predecessors: [0xa3]
Successors: [0x1f6, 0x233]
---
0x1df JUMPDEST
0x1e0 PUSH1 0x1
0x1e2 SLOAD
0x1e3 PUSH1 0x0
0x1e5 SWAP1
0x1e6 PUSH1 0x1
0x1e8 PUSH1 0xa0
0x1ea PUSH1 0x2
0x1ec EXP
0x1ed SUB
0x1ee AND
0x1ef CALLER
0x1f0 DUP2
0x1f1 EQ
0x1f2 PUSH2 0x233
0x1f5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V166 = 0x1
0x1e2: V167 = S[0x1]
0x1e3: V168 = 0x0
0x1e6: V169 = 0x1
0x1e8: V170 = 0xa0
0x1ea: V171 = 0x2
0x1ec: V172 = EXP 0x2 0xa0
0x1ed: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ee: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x1ef: V175 = CALLER
0x1f1: V176 = EQ V174 V175
0x1f2: V177 = 0x233
0x1f5: JUMPI 0x233 V176
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [0x0, V174]
Exit stack: [V11, 0x77, 0x0, V174]

================================

Block 0x1f6
[0x1f6:0x232]
---
Predecessors: [0x1df]
Successors: []
---
0x1f6 PUSH1 0x40
0x1f8 DUP1
0x1f9 MLOAD
0x1fa PUSH1 0xe5
0x1fc PUSH1 0x2
0x1fe EXP
0x1ff PUSH3 0x461bcd
0x203 MUL
0x204 DUP2
0x205 MSTORE
0x206 PUSH1 0x20
0x208 PUSH1 0x4
0x20a DUP3
0x20b ADD
0x20c MSTORE
0x20d PUSH1 0x16
0x20f PUSH1 0x24
0x211 DUP3
0x212 ADD
0x213 MSTORE
0x214 PUSH1 0x0
0x216 DUP1
0x217 MLOAD
0x218 PUSH1 0x20
0x21a PUSH2 0x3f2
0x21d DUP4
0x21e CODECOPY
0x21f DUP2
0x220 MLOAD
0x221 SWAP2
0x222 MSTORE
0x223 PUSH1 0x44
0x225 DUP3
0x226 ADD
0x227 MSTORE
0x228 SWAP1
0x229 MLOAD
0x22a SWAP1
0x22b DUP2
0x22c SWAP1
0x22d SUB
0x22e PUSH1 0x64
0x230 ADD
0x231 SWAP1
0x232 REVERT
---
0x1f6: V178 = 0x40
0x1f9: V179 = M[0x40]
0x1fa: V180 = 0xe5
0x1fc: V181 = 0x2
0x1fe: V182 = EXP 0x2 0xe5
0x1ff: V183 = 0x461bcd
0x203: V184 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x205: M[V179] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x206: V185 = 0x20
0x208: V186 = 0x4
0x20b: V187 = ADD V179 0x4
0x20c: M[V187] = 0x20
0x20d: V188 = 0x16
0x20f: V189 = 0x24
0x212: V190 = ADD V179 0x24
0x213: M[V190] = 0x16
0x214: V191 = 0x0
0x217: V192 = M[0x0]
0x218: V193 = 0x20
0x21a: V194 = 0x3f2
0x21e: CODECOPY 0x0 0x3f2 0x20
0x220: V195 = M[0x0]
0x222: M[0x0] = V192
0x223: V196 = 0x44
0x226: V197 = ADD V179 0x44
0x227: M[V197] = V195
0x229: V198 = M[0x40]
0x22d: V199 = SUB V179 V198
0x22e: V200 = 0x64
0x230: V201 = ADD 0x64 V199
0x232: REVERT V198 V201
---
Entry stack: [V11, 0x77, 0x0, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x0, V174]

================================

Block 0x233
[0x233:0x24a]
---
Predecessors: [0x1df]
Successors: [0x24b, 0x24c]
---
0x233 JUMPDEST
0x234 PUSH2 0x170c
0x237 PUSH1 0x3
0x239 SLOAD
0x23a NUMBER
0x23b SUB
0x23c PUSH1 0x64
0x23e PUSH1 0x2
0x240 SLOAD
0x241 PUSH1 0x4
0x243 MUL
0x244 DUP2
0x245 ISZERO
0x246 ISZERO
0x247 PUSH2 0x24c
0x24a JUMPI
---
0x233: JUMPDEST 
0x234: V202 = 0x170c
0x237: V203 = 0x3
0x239: V204 = S[0x3]
0x23a: V205 = NUMBER
0x23b: V206 = SUB V205 V204
0x23c: V207 = 0x64
0x23e: V208 = 0x2
0x240: V209 = S[0x2]
0x241: V210 = 0x4
0x243: V211 = MUL 0x4 V209
0x245: V212 = ISZERO 0x64
0x246: V213 = ISZERO 0x0
0x247: V214 = 0x24c
0x24a: JUMPI 0x24c 0x1
---
Entry stack: [V11, 0x77, 0x0, V174]
Stack pops: 0
Stack additions: [0x170c, V206, 0x64, V211]
Exit stack: [V11, 0x77, 0x0, V174, 0x170c, V206, 0x64, V211]

================================

Block 0x24b
[0x24b:0x24b]
---
Predecessors: [0x233]
Successors: []
---
0x24b INVALID
---
0x24b: INVALID 
---
Entry stack: [V11, 0x77, 0x0, V174, 0x170c, V206, 0x64, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x0, V174, 0x170c, V206, 0x64, V211]

================================

Block 0x24c
[0x24c:0x255]
---
Predecessors: [0x233]
Successors: [0x256, 0x257]
---
0x24c JUMPDEST
0x24d DIV
0x24e MUL
0x24f DUP2
0x250 ISZERO
0x251 ISZERO
0x252 PUSH2 0x257
0x255 JUMPI
---
0x24c: JUMPDEST 
0x24d: V215 = DIV V211 0x64
0x24e: V216 = MUL V215 V206
0x250: V217 = ISZERO 0x170c
0x251: V218 = ISZERO 0x0
0x252: V219 = 0x257
0x255: JUMPI 0x257 0x1
---
Entry stack: [V11, 0x77, 0x0, V174, 0x170c, V206, 0x64, V211]
Stack pops: 4
Stack additions: [S3, V216]
Exit stack: [V11, 0x77, 0x0, V174, 0x170c, V216]

================================

Block 0x256
[0x256:0x256]
---
Predecessors: [0x24c]
Successors: []
---
0x256 INVALID
---
0x256: INVALID 
---
Entry stack: [V11, 0x77, 0x0, V174, 0x170c, V216]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x0, V174, 0x170c, V216]

================================

Block 0x257
[0x257:0x28a]
---
Predecessors: [0x24c]
Successors: [0x28b, 0x28f]
---
0x257 JUMPDEST
0x258 PUSH1 0x0
0x25a DUP1
0x25b SLOAD
0x25c PUSH1 0x40
0x25e MLOAD
0x25f SWAP4
0x260 SWAP1
0x261 SWAP3
0x262 DIV
0x263 SWAP5
0x264 POP
0x265 PUSH1 0x1
0x267 PUSH1 0xa0
0x269 PUSH1 0x2
0x26b EXP
0x26c SUB
0x26d SWAP1
0x26e SWAP2
0x26f AND
0x270 SWAP2
0x271 PUSH3 0x11170
0x275 SWAP2
0x276 DUP6
0x277 SWAP2
0x278 SWAP1
0x279 DUP2
0x27a DUP2
0x27b DUP2
0x27c DUP6
0x27d DUP9
0x27e DUP9
0x27f CALL
0x280 SWAP4
0x281 POP
0x282 POP
0x283 POP
0x284 POP
0x285 ISZERO
0x286 ISZERO
0x287 PUSH2 0x28f
0x28a JUMPI
---
0x257: JUMPDEST 
0x258: V220 = 0x0
0x25b: V221 = S[0x0]
0x25c: V222 = 0x40
0x25e: V223 = M[0x40]
0x262: V224 = DIV V216 0x170c
0x265: V225 = 0x1
0x267: V226 = 0xa0
0x269: V227 = 0x2
0x26b: V228 = EXP 0x2 0xa0
0x26c: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26f: V230 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x271: V231 = 0x11170
0x27f: V232 = CALL 0x11170 V230 V224 V223 0x0 V223 0x0
0x285: V233 = ISZERO V232
0x286: V234 = ISZERO V233
0x287: V235 = 0x28f
0x28a: JUMPI 0x28f V234
---
Entry stack: [V11, 0x77, 0x0, V174, 0x170c, V216]
Stack pops: 4
Stack additions: [V224, S2]
Exit stack: [V11, 0x77, V224, V174]

================================

Block 0x28b
[0x28b:0x28e]
---
Predecessors: [0x257]
Successors: []
---
0x28b PUSH1 0x0
0x28d DUP1
0x28e REVERT
---
0x28b: V236 = 0x0
0x28e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V224, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V224, V174]

================================

Block 0x28f
[0x28f:0x2dd]
---
Predecessors: [0x257, 0x33e]
Successors: [0x77]
---
0x28f JUMPDEST
0x290 PUSH1 0x2
0x292 DUP1
0x293 SLOAD
0x294 DUP4
0x295 ADD
0x296 SWAP1
0x297 DUP2
0x298 SWAP1
0x299 SSTORE
0x29a NUMBER
0x29b PUSH1 0x3
0x29d DUP2
0x29e SWAP1
0x29f SSTORE
0x2a0 PUSH1 0x40
0x2a2 DUP1
0x2a3 MLOAD
0x2a4 SWAP3
0x2a5 DUP4
0x2a6 MSTORE
0x2a7 PUSH1 0x20
0x2a9 DUP4
0x2aa ADD
0x2ab SWAP2
0x2ac SWAP1
0x2ad SWAP2
0x2ae MSTORE
0x2af DUP1
0x2b0 MLOAD
0x2b1 PUSH32 0xe61a310d440795a9c86db02b7fbf22306582c310355b738547928608132d85be
0x2d2 SWAP3
0x2d3 DUP2
0x2d4 SWAP1
0x2d5 SUB
0x2d6 SWAP1
0x2d7 SWAP2
0x2d8 ADD
0x2d9 SWAP1
0x2da LOG1
0x2db POP
0x2dc POP
0x2dd JUMP
---
0x28f: JUMPDEST 
0x290: V237 = 0x2
0x293: V238 = S[0x2]
0x295: V239 = ADD S1 V238
0x299: S[0x2] = V239
0x29a: V240 = NUMBER
0x29b: V241 = 0x3
0x29f: S[0x3] = V240
0x2a0: V242 = 0x40
0x2a3: V243 = M[0x40]
0x2a6: M[V243] = V239
0x2a7: V244 = 0x20
0x2aa: V245 = ADD V243 0x20
0x2ae: M[V245] = V240
0x2b0: V246 = M[0x40]
0x2b1: V247 = 0xe61a310d440795a9c86db02b7fbf22306582c310355b738547928608132d85be
0x2d5: V248 = SUB V243 V246
0x2d8: V249 = ADD 0x40 V248
0x2da: LOG V246 V249 0xe61a310d440795a9c86db02b7fbf22306582c310355b738547928608132d85be
0x2dd: JUMP 0x77
---
Entry stack: [V11, 0x77, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2de
[0x2de:0x2ec]
---
Predecessors: [0xb7]
Successors: [0xc0]
---
0x2de JUMPDEST
0x2df PUSH1 0x1
0x2e1 SLOAD
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0xa0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 SUB
0x2ea AND
0x2eb DUP2
0x2ec JUMP
---
0x2de: JUMPDEST 
0x2df: V250 = 0x1
0x2e1: V251 = S[0x1]
0x2e2: V252 = 0x1
0x2e4: V253 = 0xa0
0x2e6: V254 = 0x2
0x2e8: V255 = EXP 0x2 0xa0
0x2e9: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x2ec: JUMP 0xc0
---
Entry stack: [V11, 0xc0]
Stack pops: 1
Stack additions: [S0, V257]
Exit stack: [V11, 0xc0, V257]

================================

Block 0x2ed
[0x2ed:0x300]
---
Predecessors: [0xdc]
Successors: [0x301, 0x33e]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x1
0x2f0 SLOAD
0x2f1 PUSH1 0x1
0x2f3 PUSH1 0xa0
0x2f5 PUSH1 0x2
0x2f7 EXP
0x2f8 SUB
0x2f9 AND
0x2fa CALLER
0x2fb DUP2
0x2fc EQ
0x2fd PUSH2 0x33e
0x300 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V258 = 0x1
0x2f0: V259 = S[0x1]
0x2f1: V260 = 0x1
0x2f3: V261 = 0xa0
0x2f5: V262 = 0x2
0x2f7: V263 = EXP 0x2 0xa0
0x2f8: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f9: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x2fa: V266 = CALLER
0x2fc: V267 = EQ V265 V266
0x2fd: V268 = 0x33e
0x300: JUMPI 0x33e V267
---
Entry stack: [V11, 0x77, V64]
Stack pops: 0
Stack additions: [V265]
Exit stack: [V11, 0x77, V64, V265]

================================

Block 0x301
[0x301:0x33d]
---
Predecessors: [0x2ed]
Successors: []
---
0x301 PUSH1 0x40
0x303 DUP1
0x304 MLOAD
0x305 PUSH1 0xe5
0x307 PUSH1 0x2
0x309 EXP
0x30a PUSH3 0x461bcd
0x30e MUL
0x30f DUP2
0x310 MSTORE
0x311 PUSH1 0x20
0x313 PUSH1 0x4
0x315 DUP3
0x316 ADD
0x317 MSTORE
0x318 PUSH1 0x16
0x31a PUSH1 0x24
0x31c DUP3
0x31d ADD
0x31e MSTORE
0x31f PUSH1 0x0
0x321 DUP1
0x322 MLOAD
0x323 PUSH1 0x20
0x325 PUSH2 0x3f2
0x328 DUP4
0x329 CODECOPY
0x32a DUP2
0x32b MLOAD
0x32c SWAP2
0x32d MSTORE
0x32e PUSH1 0x44
0x330 DUP3
0x331 ADD
0x332 MSTORE
0x333 SWAP1
0x334 MLOAD
0x335 SWAP1
0x336 DUP2
0x337 SWAP1
0x338 SUB
0x339 PUSH1 0x64
0x33b ADD
0x33c SWAP1
0x33d REVERT
---
0x301: V269 = 0x40
0x304: V270 = M[0x40]
0x305: V271 = 0xe5
0x307: V272 = 0x2
0x309: V273 = EXP 0x2 0xe5
0x30a: V274 = 0x461bcd
0x30e: V275 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x310: M[V270] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x311: V276 = 0x20
0x313: V277 = 0x4
0x316: V278 = ADD V270 0x4
0x317: M[V278] = 0x20
0x318: V279 = 0x16
0x31a: V280 = 0x24
0x31d: V281 = ADD V270 0x24
0x31e: M[V281] = 0x16
0x31f: V282 = 0x0
0x322: V283 = M[0x0]
0x323: V284 = 0x20
0x325: V285 = 0x3f2
0x329: CODECOPY 0x0 0x3f2 0x20
0x32b: V286 = M[0x0]
0x32d: M[0x0] = V283
0x32e: V287 = 0x44
0x331: V288 = ADD V270 0x44
0x332: M[V288] = V286
0x334: V289 = M[0x40]
0x338: V290 = SUB V270 V289
0x339: V291 = 0x64
0x33b: V292 = ADD 0x64 V290
0x33d: REVERT V289 V292
---
Entry stack: [V11, 0x77, V64, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V64, V265]

================================

Block 0x33e
[0x33e:0x36a]
---
Predecessors: [0x2ed]
Successors: [0x28f, 0x36b]
---
0x33e JUMPDEST
0x33f PUSH1 0x0
0x341 DUP1
0x342 SLOAD
0x343 PUSH1 0x40
0x345 MLOAD
0x346 PUSH1 0x1
0x348 PUSH1 0xa0
0x34a PUSH1 0x2
0x34c EXP
0x34d SUB
0x34e SWAP1
0x34f SWAP2
0x350 AND
0x351 SWAP2
0x352 PUSH3 0x11170
0x356 SWAP2
0x357 DUP6
0x358 SWAP2
0x359 DUP2
0x35a DUP2
0x35b DUP2
0x35c DUP6
0x35d DUP9
0x35e DUP9
0x35f CALL
0x360 SWAP4
0x361 POP
0x362 POP
0x363 POP
0x364 POP
0x365 ISZERO
0x366 ISZERO
0x367 PUSH2 0x28f
0x36a JUMPI
---
0x33e: JUMPDEST 
0x33f: V293 = 0x0
0x342: V294 = S[0x0]
0x343: V295 = 0x40
0x345: V296 = M[0x40]
0x346: V297 = 0x1
0x348: V298 = 0xa0
0x34a: V299 = 0x2
0x34c: V300 = EXP 0x2 0xa0
0x34d: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x350: V302 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x352: V303 = 0x11170
0x35f: V304 = CALL 0x11170 V302 V64 V296 0x0 V296 0x0
0x365: V305 = ISZERO V304
0x366: V306 = ISZERO V305
0x367: V307 = 0x28f
0x36a: JUMPI 0x28f V306
---
Entry stack: [V11, 0x77, V64, V265]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x77, V64, V265]

================================

Block 0x36b
[0x36b:0x36e]
---
Predecessors: [0x33e]
Successors: []
---
0x36b PUSH1 0x0
0x36d DUP1
0x36e REVERT
---
0x36b: V308 = 0x0
0x36e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V64, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V64, V265]

================================

Block 0x36f
[0x36f:0x385]
---
Predecessors: [0xf3]
Successors: [0x386, 0x3c3]
---
0x36f JUMPDEST
0x370 PUSH1 0x1
0x372 SLOAD
0x373 PUSH1 0x0
0x375 SWAP1
0x376 PUSH1 0x1
0x378 PUSH1 0xa0
0x37a PUSH1 0x2
0x37c EXP
0x37d SUB
0x37e AND
0x37f CALLER
0x380 DUP2
0x381 EQ
0x382 PUSH2 0x3c3
0x385 JUMPI
---
0x36f: JUMPDEST 
0x370: V309 = 0x1
0x372: V310 = S[0x1]
0x373: V311 = 0x0
0x376: V312 = 0x1
0x378: V313 = 0xa0
0x37a: V314 = 0x2
0x37c: V315 = EXP 0x2 0xa0
0x37d: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37e: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x37f: V318 = CALLER
0x381: V319 = EQ V317 V318
0x382: V320 = 0x3c3
0x385: JUMPI 0x3c3 V319
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [0x0, V317]
Exit stack: [V11, 0x77, 0x0, V317]

================================

Block 0x386
[0x386:0x3c2]
---
Predecessors: [0x36f]
Successors: []
---
0x386 PUSH1 0x40
0x388 DUP1
0x389 MLOAD
0x38a PUSH1 0xe5
0x38c PUSH1 0x2
0x38e EXP
0x38f PUSH3 0x461bcd
0x393 MUL
0x394 DUP2
0x395 MSTORE
0x396 PUSH1 0x20
0x398 PUSH1 0x4
0x39a DUP3
0x39b ADD
0x39c MSTORE
0x39d PUSH1 0x16
0x39f PUSH1 0x24
0x3a1 DUP3
0x3a2 ADD
0x3a3 MSTORE
0x3a4 PUSH1 0x0
0x3a6 DUP1
0x3a7 MLOAD
0x3a8 PUSH1 0x20
0x3aa PUSH2 0x3f2
0x3ad DUP4
0x3ae CODECOPY
0x3af DUP2
0x3b0 MLOAD
0x3b1 SWAP2
0x3b2 MSTORE
0x3b3 PUSH1 0x44
0x3b5 DUP3
0x3b6 ADD
0x3b7 MSTORE
0x3b8 SWAP1
0x3b9 MLOAD
0x3ba SWAP1
0x3bb DUP2
0x3bc SWAP1
0x3bd SUB
0x3be PUSH1 0x64
0x3c0 ADD
0x3c1 SWAP1
0x3c2 REVERT
---
0x386: V321 = 0x40
0x389: V322 = M[0x40]
0x38a: V323 = 0xe5
0x38c: V324 = 0x2
0x38e: V325 = EXP 0x2 0xe5
0x38f: V326 = 0x461bcd
0x393: V327 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x395: M[V322] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x396: V328 = 0x20
0x398: V329 = 0x4
0x39b: V330 = ADD V322 0x4
0x39c: M[V330] = 0x20
0x39d: V331 = 0x16
0x39f: V332 = 0x24
0x3a2: V333 = ADD V322 0x24
0x3a3: M[V333] = 0x16
0x3a4: V334 = 0x0
0x3a7: V335 = M[0x0]
0x3a8: V336 = 0x20
0x3aa: V337 = 0x3f2
0x3ae: CODECOPY 0x0 0x3f2 0x20
0x3b0: V338 = M[0x0]
0x3b2: M[0x0] = V335
0x3b3: V339 = 0x44
0x3b6: V340 = ADD V322 0x44
0x3b7: M[V340] = V338
0x3b9: V341 = M[0x40]
0x3bd: V342 = SUB V322 V341
0x3be: V343 = 0x64
0x3c0: V344 = ADD 0x64 V342
0x3c2: REVERT V341 V344
---
Entry stack: [V11, 0x77, 0x0, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, 0x0, V317]

================================

Block 0x3c3
[0x3c3:0x3e8]
---
Predecessors: [0x36f]
Successors: [0x3e9, 0x3ed]
---
0x3c3 JUMPDEST
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 CALLER
0x3c8 SWAP3
0x3c9 POP
0x3ca DUP3
0x3cb SWAP1
0x3cc ADDRESS
0x3cd BALANCE
0x3ce DUP1
0x3cf ISZERO
0x3d0 PUSH2 0x8fc
0x3d3 MUL
0x3d4 SWAP2
0x3d5 PUSH1 0x0
0x3d7 DUP2
0x3d8 DUP2
0x3d9 DUP2
0x3da DUP6
0x3db DUP9
0x3dc DUP9
0x3dd CALL
0x3de SWAP4
0x3df POP
0x3e0 POP
0x3e1 POP
0x3e2 POP
0x3e3 ISZERO
0x3e4 ISZERO
0x3e5 PUSH2 0x3ed
0x3e8 JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V345 = 0x40
0x3c6: V346 = M[0x40]
0x3c7: V347 = CALLER
0x3cc: V348 = ADDRESS
0x3cd: V349 = BALANCE V348
0x3cf: V350 = ISZERO V349
0x3d0: V351 = 0x8fc
0x3d3: V352 = MUL 0x8fc V350
0x3d5: V353 = 0x0
0x3dd: V354 = CALL V352 V347 V349 V346 0x0 V346 0x0
0x3e3: V355 = ISZERO V354
0x3e4: V356 = ISZERO V355
0x3e5: V357 = 0x3ed
0x3e8: JUMPI 0x3ed V356
---
Entry stack: [V11, 0x77, 0x0, V317]
Stack pops: 2
Stack additions: [V347, S0]
Exit stack: [V11, 0x77, V347, V317]

================================

Block 0x3e9
[0x3e9:0x3ec]
---
Predecessors: [0x3c3]
Successors: []
---
0x3e9 PUSH1 0x0
0x3eb DUP1
0x3ec REVERT
---
0x3e9: V358 = 0x0
0x3ec: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V347, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V347, V317]

================================

Block 0x3ed
[0x3ed:0x3f0]
---
Predecessors: [0x3c3]
Successors: [0x77]
---
0x3ed JUMPDEST
0x3ee POP
0x3ef POP
0x3f0 JUMP
---
0x3ed: JUMPDEST 
0x3f0: JUMP 0x77
---
Entry stack: [V11, 0x77, V347, V317]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x3f1
[0x3f1:0x43c]
---
Predecessors: []
Successors: []
---
0x3f1 STOP
0x3f2 MSTORE8
0x3f3 PUSH6 0x6e646572206e
0x3fa PUSH16 0x7420617574686f72697a65642e000000
0x40b STOP
0x40c STOP
0x40d STOP
0x40e STOP
0x40f STOP
0x410 STOP
0x411 STOP
0x412 LOG1
0x413 PUSH6 0x627a7a723058
0x41a SHA3
0x41b CALLDATACOPY
0x41c RETURNDATASIZE
0x41d DUP8
0x41e BLOCKHASH
0x41f MISSING 0xca
0x420 MISSING 0x2f
0x421 PUSH27 0x81830c777c0df9a8e20d693bcfaf33f359eb18d38956114c1f0029
---
0x3f1: STOP 
0x3f2: M8[S0] = S1
0x3f3: V359 = 0x6e646572206e
0x3fa: V360 = 0x7420617574686f72697a65642e000000
0x40b: STOP 
0x40c: STOP 
0x40d: STOP 
0x40e: STOP 
0x40f: STOP 
0x410: STOP 
0x411: STOP 
0x412: LOG S0 S1 S2
0x413: V361 = 0x627a7a723058
0x41a: V362 = SHA3 0x627a7a723058 S3
0x41b: CALLDATACOPY V362 S4 S5
0x41c: V363 = RETURNDATASIZE
0x41e: V364 = BLOCKHASH S12
0x41f: MISSING 0xca
0x420: MISSING 0x2f
0x421: V365 = 0x81830c777c0df9a8e20d693bcfaf33f359eb18d38956114c1f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x7420617574686f72697a65642e000000, 0x6e646572206e, V364, V363, S6, S7, S8, S9, S10, S11, S12, 0x81830c777c0df9a8e20d693bcfaf33f359eb18d38956114c1f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x81, 0x85, 0xfc, 0x110, 0x14d, 0x179, 0x17d

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x8e
Exit block: 0x194
Body: 0x8e, 0x96, 0x9a, 0x180, 0x194, 0x1d1

Function 2:
Public function signature: 0x69774c2d
Entry block: 0xa3
Exit block: 0x77
Body: 0x77, 0xa3, 0x1df, 0x1f6, 0x233, 0x24b, 0x24c, 0x256, 0x257, 0x28b, 0x28f

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xab
Exit block: 0xc0
Body: 0xab, 0xb3, 0xb7, 0xc0, 0x2de

Function 4:
Public function signature: 0xb6b55f25
Entry block: 0xdc
Exit block: 0x77
Body: 0x77, 0xdc, 0x28f, 0x2ed, 0x301, 0x33e, 0x36b

Function 5:
Public function signature: 0xf2a75fe4
Entry block: 0xe7
Exit block: 0x77
Body: 0x77, 0xe7, 0xef, 0xf3, 0x36f, 0x386, 0x3c3, 0x3e9, 0x3ed

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

