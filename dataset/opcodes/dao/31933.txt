Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x60]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x60
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x60
0xa: JUMPI 0x60 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xb6]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x12b58349
0x3a EQ
0x3b PUSH2 0xb6
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x12b58349
0x3a: V12 = EQ 0x12b58349 V10
0x3b: V13 = 0xb6
0x3e: JUMPI 0xb6 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xdc]
---
0x3f DUP1
0x40 PUSH4 0x27e235e3
0x45 EQ
0x46 PUSH2 0xdc
0x49 JUMPI
---
0x40: V14 = 0x27e235e3
0x45: V15 = EQ 0x27e235e3 V10
0x46: V16 = 0xdc
0x49: JUMPI 0xdc V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x126]
---
0x4a DUP1
0x4b PUSH4 0x9a166299
0x50 EQ
0x51 PUSH2 0x126
0x54 JUMPI
---
0x4b: V17 = 0x9a166299
0x50: V18 = EQ 0x9a166299 V10
0x51: V19 = 0x126
0x54: JUMPI 0x126 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x178]
---
0x55 DUP1
0x56 PUSH4 0xdb88031a
0x5b EQ
0x5c PUSH2 0x178
0x5f JUMPI
---
0x56: V20 = 0xdb88031a
0x5b: V21 = EQ 0xdb88031a V10
0x5c: V22 = 0x178
0x5f: JUMPI 0x178 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x0, 0x55]
Successors: [0x64]
---
0x60 JUMPDEST
0x61 PUSH2 0xb4
---
0x60: JUMPDEST 
0x61: V23 = 0xb4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V10, 0xb4]

================================

Block 0x64
[0x64:0xb1]
---
Predecessors: [0x60]
Successors: [0xb2]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 PUSH1 0x0
0x68 PUSH1 0x0
0x6a CALLER
0x6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80 AND
0x81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96 AND
0x97 DUP2
0x98 MSTORE
0x99 PUSH1 0x20
0x9b ADD
0x9c SWAP1
0x9d DUP2
0x9e MSTORE
0x9f PUSH1 0x20
0xa1 ADD
0xa2 PUSH1 0x0
0xa4 SHA3
0xa5 PUSH1 0x0
0xa7 DUP3
0xa8 DUP3
0xa9 SLOAD
0xaa ADD
0xab SWAP3
0xac POP
0xad POP
0xae DUP2
0xaf SWAP1
0xb0 SSTORE
0xb1 POP
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x66: V25 = 0x0
0x68: V26 = 0x0
0x6a: V27 = CALLER
0x6b: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x80: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x81: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x96: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x98: M[0x0] = V31
0x99: V32 = 0x20
0x9b: V33 = ADD 0x20 0x0
0x9e: M[0x20] = 0x0
0x9f: V34 = 0x20
0xa1: V35 = ADD 0x20 0x20
0xa2: V36 = 0x0
0xa4: V37 = SHA3 0x0 0x40
0xa5: V38 = 0x0
0xa9: V39 = S[V37]
0xaa: V40 = ADD V39 V24
0xb0: S[V37] = V40
---
Entry stack: [V10, 0xb4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb4]

================================

Block 0xb2
[0xb2:0xb3]
---
Predecessors: [0x64]
Successors: [0xb4]
---
0xb2 JUMPDEST
0xb3 JUMP
---
0xb2: JUMPDEST 
0xb3: JUMP 0xb4
---
Entry stack: [V10, 0xb4]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xb4
[0xb4:0xb5]
---
Predecessors: [0xb2]
Successors: []
---
0xb4 JUMPDEST
0xb5 STOP
---
0xb4: JUMPDEST 
0xb5: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb6
[0xb6:0xbc]
---
Predecessors: [0xb]
Successors: [0xbd, 0xbe]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 ISZERO
0xb9 PUSH2 0xbe
0xbc JUMPI
---
0xb6: JUMPDEST 
0xb7: V41 = CALLVALUE
0xb8: V42 = ISZERO V41
0xb9: V43 = 0xbe
0xbc: JUMPI 0xbe V42
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbd
[0xbd:0xbd]
---
Predecessors: [0xb6]
Successors: []
---
0xbd INVALID
---
0xbd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbe
[0xbe:0xc5]
---
Predecessors: [0xb6]
Successors: [0x18a]
---
0xbe JUMPDEST
0xbf PUSH2 0xc6
0xc2 PUSH2 0x18a
0xc5 JUMP
---
0xbe: JUMPDEST 
0xbf: V44 = 0xc6
0xc2: V45 = 0x18a
0xc5: JUMP 0x18a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V10, 0xc6]

================================

Block 0xc6
[0xc6:0xdb]
---
Predecessors: [0x1a7]
Successors: []
---
0xc6 JUMPDEST
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb DUP3
0xcc DUP2
0xcd MSTORE
0xce PUSH1 0x20
0xd0 ADD
0xd1 SWAP2
0xd2 POP
0xd3 POP
0xd4 PUSH1 0x40
0xd6 MLOAD
0xd7 DUP1
0xd8 SWAP2
0xd9 SUB
0xda SWAP1
0xdb RETURN
---
0xc6: JUMPDEST 
0xc7: V46 = 0x40
0xc9: V47 = M[0x40]
0xcd: M[V47] = V96
0xce: V48 = 0x20
0xd0: V49 = ADD 0x20 V47
0xd4: V50 = 0x40
0xd6: V51 = M[0x40]
0xd9: V52 = SUB V49 V51
0xdb: RETURN V51 V52
---
Entry stack: [V10, V96]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xdc
[0xdc:0xe2]
---
Predecessors: [0x3f]
Successors: [0xe3, 0xe4]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde ISZERO
0xdf PUSH2 0xe4
0xe2 JUMPI
---
0xdc: JUMPDEST 
0xdd: V53 = CALLVALUE
0xde: V54 = ISZERO V53
0xdf: V55 = 0xe4
0xe2: JUMPI 0xe4 V54
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xe3]
---
Predecessors: [0xdc]
Successors: []
---
0xe3 INVALID
---
0xe3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe4
[0xe4:0x10f]
---
Predecessors: [0xdc]
Successors: [0x1aa]
---
0xe4 JUMPDEST
0xe5 PUSH2 0x110
0xe8 PUSH1 0x4
0xea DUP1
0xeb DUP1
0xec CALLDATALOAD
0xed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x102 AND
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 SWAP2
0x109 SWAP1
0x10a POP
0x10b POP
0x10c PUSH2 0x1aa
0x10f JUMP
---
0xe4: JUMPDEST 
0xe5: V56 = 0x110
0xe8: V57 = 0x4
0xec: V58 = CALLDATALOAD 0x4
0xed: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x102: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x104: V61 = 0x20
0x106: V62 = ADD 0x20 0x4
0x10c: V63 = 0x1aa
0x10f: JUMP 0x1aa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x110, V60]
Exit stack: [V10, 0x110, V60]

================================

Block 0x110
[0x110:0x125]
---
Predecessors: [0x1aa]
Successors: []
---
0x110 JUMPDEST
0x111 PUSH1 0x40
0x113 MLOAD
0x114 DUP1
0x115 DUP3
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x20
0x11a ADD
0x11b SWAP2
0x11c POP
0x11d POP
0x11e PUSH1 0x40
0x120 MLOAD
0x121 DUP1
0x122 SWAP2
0x123 SUB
0x124 SWAP1
0x125 RETURN
---
0x110: JUMPDEST 
0x111: V64 = 0x40
0x113: V65 = M[0x40]
0x117: M[V65] = V104
0x118: V66 = 0x20
0x11a: V67 = ADD 0x20 V65
0x11e: V68 = 0x40
0x120: V69 = M[0x40]
0x123: V70 = SUB V67 V69
0x125: RETURN V69 V70
---
Entry stack: [V10, 0x110, V104]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x110]

================================

Block 0x126
[0x126:0x12c]
---
Predecessors: [0x4a]
Successors: [0x12d, 0x12e]
---
0x126 JUMPDEST
0x127 CALLVALUE
0x128 ISZERO
0x129 PUSH2 0x12e
0x12c JUMPI
---
0x126: JUMPDEST 
0x127: V71 = CALLVALUE
0x128: V72 = ISZERO V71
0x129: V73 = 0x12e
0x12c: JUMPI 0x12e V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12d
[0x12d:0x12d]
---
Predecessors: [0x126]
Successors: []
---
0x12d INVALID
---
0x12d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12e
[0x12e:0x135]
---
Predecessors: [0x126]
Successors: [0x1c2]
---
0x12e JUMPDEST
0x12f PUSH2 0x136
0x132 PUSH2 0x1c2
0x135 JUMP
---
0x12e: JUMPDEST 
0x12f: V74 = 0x136
0x132: V75 = 0x1c2
0x135: JUMP 0x1c2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x136]
Exit stack: [V10, 0x136]

================================

Block 0x136
[0x136:0x177]
---
Predecessors: [0x1c8]
Successors: []
---
0x136 JUMPDEST
0x137 PUSH1 0x40
0x139 MLOAD
0x13a DUP1
0x13b DUP3
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 DUP2
0x169 MSTORE
0x16a PUSH1 0x20
0x16c ADD
0x16d SWAP2
0x16e POP
0x16f POP
0x170 PUSH1 0x40
0x172 MLOAD
0x173 DUP1
0x174 SWAP2
0x175 SUB
0x176 SWAP1
0x177 RETURN
---
0x136: JUMPDEST 
0x137: V76 = 0x40
0x139: V77 = M[0x40]
0x13c: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x152: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x169: M[V77] = V81
0x16a: V82 = 0x20
0x16c: V83 = ADD 0x20 V77
0x170: V84 = 0x40
0x172: V85 = M[0x40]
0x175: V86 = SUB V83 V85
0x177: RETURN V85 V86
---
Entry stack: [V10, V106]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x178
[0x178:0x17e]
---
Predecessors: [0x55]
Successors: [0x17f, 0x180]
---
0x178 JUMPDEST
0x179 CALLVALUE
0x17a ISZERO
0x17b PUSH2 0x180
0x17e JUMPI
---
0x178: JUMPDEST 
0x179: V87 = CALLVALUE
0x17a: V88 = ISZERO V87
0x17b: V89 = 0x180
0x17e: JUMPI 0x180 V88
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17f
[0x17f:0x17f]
---
Predecessors: [0x178]
Successors: []
---
0x17f INVALID
---
0x17f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x180
[0x180:0x187]
---
Predecessors: [0x178]
Successors: [0x1cb]
---
0x180 JUMPDEST
0x181 PUSH2 0x188
0x184 PUSH2 0x1cb
0x187 JUMP
---
0x180: JUMPDEST 
0x181: V90 = 0x188
0x184: V91 = 0x1cb
0x187: JUMP 0x1cb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x188]
Exit stack: [V10, 0x188]

================================

Block 0x188
[0x188:0x189]
---
Predecessors: [0x284]
Successors: []
---
0x188 JUMPDEST
0x189 STOP
---
0x188: JUMPDEST 
0x189: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18a
[0x18a:0x1a6]
---
Predecessors: [0xbe]
Successors: [0x1a7]
---
0x18a JUMPDEST
0x18b PUSH1 0x0
0x18d ADDRESS
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 BALANCE
0x1a5 SWAP1
0x1a6 POP
---
0x18a: JUMPDEST 
0x18b: V92 = 0x0
0x18d: V93 = ADDRESS
0x18e: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1a4: V96 = BALANCE V95
---
Entry stack: [V10, 0xc6]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V10, 0xc6, V96]

================================

Block 0x1a7
[0x1a7:0x1a9]
---
Predecessors: [0x18a]
Successors: [0xc6]
---
0x1a7 JUMPDEST
0x1a8 SWAP1
0x1a9 JUMP
---
0x1a7: JUMPDEST 
0x1a9: JUMP 0xc6
---
Entry stack: [V10, 0xc6, V96]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V96]

================================

Block 0x1aa
[0x1aa:0x1c1]
---
Predecessors: [0xe4]
Successors: [0x110]
---
0x1aa JUMPDEST
0x1ab PUSH1 0x0
0x1ad PUSH1 0x20
0x1af MSTORE
0x1b0 DUP1
0x1b1 PUSH1 0x0
0x1b3 MSTORE
0x1b4 PUSH1 0x40
0x1b6 PUSH1 0x0
0x1b8 SHA3
0x1b9 PUSH1 0x0
0x1bb SWAP2
0x1bc POP
0x1bd SWAP1
0x1be POP
0x1bf SLOAD
0x1c0 DUP2
0x1c1 JUMP
---
0x1aa: JUMPDEST 
0x1ab: V97 = 0x0
0x1ad: V98 = 0x20
0x1af: M[0x20] = 0x0
0x1b1: V99 = 0x0
0x1b3: M[0x0] = V60
0x1b4: V100 = 0x40
0x1b6: V101 = 0x0
0x1b8: V102 = SHA3 0x0 0x40
0x1b9: V103 = 0x0
0x1bf: V104 = S[V102]
0x1c1: JUMP 0x110
---
Entry stack: [V10, 0x110, V60]
Stack pops: 2
Stack additions: [S1, V104]
Exit stack: [V10, 0x110, V104]

================================

Block 0x1c2
[0x1c2:0x1c7]
---
Predecessors: [0x12e]
Successors: [0x1c8]
---
0x1c2 JUMPDEST
0x1c3 PUSH1 0x0
0x1c5 CALLER
0x1c6 SWAP1
0x1c7 POP
---
0x1c2: JUMPDEST 
0x1c3: V105 = 0x0
0x1c5: V106 = CALLER
---
Entry stack: [V10, 0x136]
Stack pops: 0
Stack additions: [V106]
Exit stack: [V10, 0x136, V106]

================================

Block 0x1c8
[0x1c8:0x1ca]
---
Predecessors: [0x1c2]
Successors: [0x136]
---
0x1c8 JUMPDEST
0x1c9 SWAP1
0x1ca JUMP
---
0x1c8: JUMPDEST 
0x1ca: JUMP 0x136
---
Entry stack: [V10, 0x136, V106]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V106]

================================

Block 0x1cb
[0x1cb:0x283]
---
Predecessors: [0x180]
Successors: [0x284]
---
0x1cb JUMPDEST
0x1cc CALLER
0x1cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e2 AND
0x1e3 PUSH1 0x0
0x1e5 PUSH1 0x0
0x1e7 CALLER
0x1e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fd AND
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x20
0x218 ADD
0x219 SWAP1
0x21a DUP2
0x21b MSTORE
0x21c PUSH1 0x20
0x21e ADD
0x21f PUSH1 0x0
0x221 SHA3
0x222 SLOAD
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 SWAP1
0x228 POP
0x229 PUSH1 0x0
0x22b PUSH1 0x40
0x22d MLOAD
0x22e DUP1
0x22f DUP4
0x230 SUB
0x231 DUP2
0x232 DUP6
0x233 DUP8
0x234 PUSH2 0x8796
0x237 GAS
0x238 SUB
0x239 CALL
0x23a SWAP3
0x23b POP
0x23c POP
0x23d POP
0x23e POP
0x23f PUSH1 0x0
0x241 PUSH1 0x0
0x243 PUSH1 0x0
0x245 CALLER
0x246 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25b AND
0x25c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x271 AND
0x272 DUP2
0x273 MSTORE
0x274 PUSH1 0x20
0x276 ADD
0x277 SWAP1
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x20
0x27c ADD
0x27d PUSH1 0x0
0x27f SHA3
0x280 DUP2
0x281 SWAP1
0x282 SSTORE
0x283 POP
---
0x1cb: JUMPDEST 
0x1cc: V107 = CALLER
0x1cd: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1e3: V110 = 0x0
0x1e5: V111 = 0x0
0x1e7: V112 = CALLER
0x1e8: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1fe: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x215: M[0x0] = V116
0x216: V117 = 0x20
0x218: V118 = ADD 0x20 0x0
0x21b: M[0x20] = 0x0
0x21c: V119 = 0x20
0x21e: V120 = ADD 0x20 0x20
0x21f: V121 = 0x0
0x221: V122 = SHA3 0x0 0x40
0x222: V123 = S[V122]
0x223: V124 = 0x40
0x225: V125 = M[0x40]
0x229: V126 = 0x0
0x22b: V127 = 0x40
0x22d: V128 = M[0x40]
0x230: V129 = SUB V125 V128
0x234: V130 = 0x8796
0x237: V131 = GAS
0x238: V132 = SUB V131 0x8796
0x239: V133 = CALL V132 V109 V123 V128 V129 V128 0x0
0x23f: V134 = 0x0
0x241: V135 = 0x0
0x243: V136 = 0x0
0x245: V137 = CALLER
0x246: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x25b: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x25c: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x271: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x273: M[0x0] = V141
0x274: V142 = 0x20
0x276: V143 = ADD 0x20 0x0
0x279: M[0x20] = 0x0
0x27a: V144 = 0x20
0x27c: V145 = ADD 0x20 0x20
0x27d: V146 = 0x0
0x27f: V147 = SHA3 0x0 0x40
0x282: S[V147] = 0x0
---
Entry stack: [V10, 0x188]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x188]

================================

Block 0x284
[0x284:0x285]
---
Predecessors: [0x1cb]
Successors: [0x188]
---
0x284 JUMPDEST
0x285 JUMP
---
0x284: JUMPDEST 
0x285: JUMP 0x188
---
Entry stack: [V10, 0x188]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x286
[0x286:0x2c0]
---
Predecessors: []
Successors: []
---
0x286 STOP
0x287 LOG1
0x288 PUSH6 0x627a7a723058
0x28f SHA3
0x290 MISSING 0x4a
0x291 MISSING 0x46
0x292 PUSH16 0x7ee88cea823a8b83a2f018710d5f8e54
0x2a3 BALANCE
0x2a4 MISSING 0x5c
0x2a5 SAR
0x2a6 GASPRICE
0x2a7 NOT
0x2a8 PUSH24 0xf0f46ddbabe8120029
---
0x286: STOP 
0x287: LOG S0 S1 S2
0x288: V148 = 0x627a7a723058
0x28f: V149 = SHA3 0x627a7a723058 S3
0x290: MISSING 0x4a
0x291: MISSING 0x46
0x292: V150 = 0x7ee88cea823a8b83a2f018710d5f8e54
0x2a3: V151 = BALANCE 0x7ee88cea823a8b83a2f018710d5f8e54
0x2a4: MISSING 0x5c
0x2a5: V152 = SAR S0 S1
0x2a6: V153 = GASPRICE
0x2a7: V154 = NOT V153
0x2a8: V155 = 0xf0f46ddbabe8120029
---
Entry stack: []
Stack pops: 0
Stack additions: [V149, V151, 0xf0f46ddbabe8120029, V154, V152]
Exit stack: []

================================

Function 0:
Public function signature: 0x12b58349
Entry block: 0xb6
Exit block: 0xc6
Body: 0xb6, 0xbd, 0xbe, 0xc6, 0x18a, 0x1a7

Function 1:
Public function signature: 0x27e235e3
Entry block: 0xdc
Exit block: 0x110
Body: 0xdc, 0xe3, 0xe4, 0x110, 0x1aa

Function 2:
Public function signature: 0x9a166299
Entry block: 0x126
Exit block: 0x136
Body: 0x126, 0x12d, 0x12e, 0x136, 0x1c2, 0x1c8

Function 3:
Public function signature: 0xdb88031a
Entry block: 0x178
Exit block: 0x188
Body: 0x178, 0x17f, 0x180, 0x188, 0x1cb, 0x284

Function 4:
Public fallback function
Entry block: 0x60
Exit block: 0xb4
Body: 0x60, 0x64, 0xb2, 0xb4

