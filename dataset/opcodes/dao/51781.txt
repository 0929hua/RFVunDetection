Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa4]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa4
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa4
0xc: JUMPI 0xa4 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xa6]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x471efe66
0x3c EQ
0x3d PUSH2 0xa6
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x471efe66
0x3c: V13 = EQ 0x471efe66 V11
0x3d: V14 = 0xa6
0x40: JUMPI 0xa6 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x109]
---
0x41 DUP1
0x42 PUSH4 0x6ad1fe02
0x47 EQ
0x48 PUSH2 0x109
0x4b JUMPI
---
0x42: V15 = 0x6ad1fe02
0x47: V16 = EQ 0x6ad1fe02 V11
0x48: V17 = 0x109
0x4b: JUMPI 0x109 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x160]
---
0x4c DUP1
0x4d PUSH4 0x89476069
0x52 EQ
0x53 PUSH2 0x160
0x56 JUMPI
---
0x4d: V18 = 0x89476069
0x52: V19 = EQ 0x89476069 V11
0x53: V20 = 0x160
0x56: JUMPI 0x160 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1a3]
---
0x57 DUP1
0x58 PUSH4 0xa6f2ae3a
0x5d EQ
0x5e PUSH2 0x1a3
0x61 JUMPI
---
0x58: V21 = 0xa6f2ae3a
0x5d: V22 = EQ 0xa6f2ae3a V11
0x5e: V23 = 0x1a3
0x61: JUMPI 0x1a3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1ba]
---
0x62 DUP1
0x63 PUSH4 0xb622ab4a
0x68 EQ
0x69 PUSH2 0x1ba
0x6c JUMPI
---
0x63: V24 = 0xb622ab4a
0x68: V25 = EQ 0xb622ab4a V11
0x69: V26 = 0x1ba
0x6c: JUMPI 0x1ba V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x206]
---
0x6d DUP1
0x6e PUSH4 0xb8f3b75d
0x73 EQ
0x74 PUSH2 0x206
0x77 JUMPI
---
0x6e: V27 = 0xb8f3b75d
0x73: V28 = EQ 0xb8f3b75d V11
0x74: V29 = 0x206
0x77: JUMPI 0x206 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x249]
---
0x78 DUP1
0x79 PUSH4 0xca4b208b
0x7e EQ
0x7f PUSH2 0x249
0x82 JUMPI
---
0x79: V30 = 0xca4b208b
0x7e: V31 = EQ 0xca4b208b V11
0x7f: V32 = 0x249
0x82: JUMPI 0x249 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x2a0]
---
0x83 DUP1
0x84 PUSH4 0xe086e5ec
0x89 EQ
0x8a PUSH2 0x2a0
0x8d JUMPI
---
0x84: V33 = 0xe086e5ec
0x89: V34 = EQ 0xe086e5ec V11
0x8a: V35 = 0x2a0
0x8d: JUMPI 0x2a0 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x2b7]
---
0x8e DUP1
0x8f PUSH4 0xfae4a213
0x94 EQ
0x95 PUSH2 0x2b7
0x98 JUMPI
---
0x8f: V36 = 0xfae4a213
0x94: V37 = EQ 0xfae4a213 V11
0x95: V38 = 0x2b7
0x98: JUMPI 0x2b7 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x323]
---
0x99 DUP1
0x9a PUSH4 0xfc0c546a
0x9f EQ
0xa0 PUSH2 0x323
0xa3 JUMPI
---
0x9a: V39 = 0xfc0c546a
0x9f: V40 = EQ 0xfc0c546a V11
0xa0: V41 = 0x323
0xa3: JUMPI 0x323 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xa5]
---
Predecessors: [0x0, 0x99]
Successors: []
---
0xa4 JUMPDEST
0xa5 STOP
---
0xa4: JUMPDEST 
0xa5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa6
[0xa6:0xad]
---
Predecessors: [0xd]
Successors: [0xae, 0xb2]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 DUP1
0xa9 ISZERO
0xaa PUSH2 0xb2
0xad JUMPI
---
0xa6: JUMPDEST 
0xa7: V42 = CALLVALUE
0xa9: V43 = ISZERO V42
0xaa: V44 = 0xb2
0xad: JUMPI 0xb2 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0xae
[0xae:0xb1]
---
Predecessors: [0xa6]
Successors: []
---
0xae PUSH1 0x0
0xb0 DUP1
0xb1 REVERT
---
0xae: V45 = 0x0
0xb1: REVERT 0x0 0x0
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0xb2
[0xb2:0x106]
---
Predecessors: [0xa6]
Successors: [0x37a]
---
0xb2 JUMPDEST
0xb3 POP
0xb4 PUSH2 0x107
0xb7 PUSH1 0x4
0xb9 DUP1
0xba CALLDATASIZE
0xbb SUB
0xbc DUP2
0xbd ADD
0xbe SWAP1
0xbf DUP1
0xc0 DUP1
0xc1 CALLDATALOAD
0xc2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7 AND
0xd8 SWAP1
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP1
0xdd SWAP3
0xde SWAP2
0xdf SWAP1
0xe0 DUP1
0xe1 CALLDATALOAD
0xe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7 AND
0xf8 SWAP1
0xf9 PUSH1 0x20
0xfb ADD
0xfc SWAP1
0xfd SWAP3
0xfe SWAP2
0xff SWAP1
0x100 POP
0x101 POP
0x102 POP
0x103 PUSH2 0x37a
0x106 JUMP
---
0xb2: JUMPDEST 
0xb4: V46 = 0x107
0xb7: V47 = 0x4
0xba: V48 = CALLDATASIZE
0xbb: V49 = SUB V48 0x4
0xbd: V50 = ADD 0x4 V49
0xc1: V51 = CALLDATALOAD 0x4
0xc2: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xd9: V54 = 0x20
0xdb: V55 = ADD 0x20 0x4
0xe1: V56 = CALLDATALOAD 0x24
0xe2: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xf9: V59 = 0x20
0xfb: V60 = ADD 0x20 0x24
0x103: V61 = 0x37a
0x106: JUMP 0x37a
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: [0x107, V53, V58]
Exit stack: [V11, 0x107, V53, V58]

================================

Block 0x107
[0x107:0x108]
---
Predecessors: [0x3d5]
Successors: []
---
0x107 JUMPDEST
0x108 STOP
---
0x107: JUMPDEST 
0x108: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x109
[0x109:0x110]
---
Predecessors: [0x41]
Successors: [0x111, 0x115]
---
0x109 JUMPDEST
0x10a CALLVALUE
0x10b DUP1
0x10c ISZERO
0x10d PUSH2 0x115
0x110 JUMPI
---
0x109: JUMPDEST 
0x10a: V62 = CALLVALUE
0x10c: V63 = ISZERO V62
0x10d: V64 = 0x115
0x110: JUMPI 0x115 V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V62]
Exit stack: [V11, V62]

================================

Block 0x111
[0x111:0x114]
---
Predecessors: [0x109]
Successors: []
---
0x111 PUSH1 0x0
0x113 DUP1
0x114 REVERT
---
0x111: V65 = 0x0
0x114: REVERT 0x0 0x0
---
Entry stack: [V11, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V62]

================================

Block 0x115
[0x115:0x11d]
---
Predecessors: [0x109]
Successors: [0x45b]
---
0x115 JUMPDEST
0x116 POP
0x117 PUSH2 0x11e
0x11a PUSH2 0x45b
0x11d JUMP
---
0x115: JUMPDEST 
0x117: V66 = 0x11e
0x11a: V67 = 0x45b
0x11d: JUMP 0x45b
---
Entry stack: [V11, V62]
Stack pops: 1
Stack additions: [0x11e]
Exit stack: [V11, 0x11e]

================================

Block 0x11e
[0x11e:0x15f]
---
Predecessors: [0x45b]
Successors: []
---
0x11e JUMPDEST
0x11f PUSH1 0x40
0x121 MLOAD
0x122 DUP1
0x123 DUP3
0x124 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x139 AND
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x20
0x154 ADD
0x155 SWAP2
0x156 POP
0x157 POP
0x158 PUSH1 0x40
0x15a MLOAD
0x15b DUP1
0x15c SWAP2
0x15d SUB
0x15e SWAP1
0x15f RETURN
---
0x11e: JUMPDEST 
0x11f: V68 = 0x40
0x121: V69 = M[0x40]
0x124: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x139: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x13a: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x151: M[V69] = V73
0x152: V74 = 0x20
0x154: V75 = ADD 0x20 V69
0x158: V76 = 0x40
0x15a: V77 = M[0x40]
0x15d: V78 = SUB V75 V77
0x15f: RETURN V77 V78
---
Entry stack: [V11, 0x11e, V242]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x11e]

================================

Block 0x160
[0x160:0x167]
---
Predecessors: [0x4c]
Successors: [0x168, 0x16c]
---
0x160 JUMPDEST
0x161 CALLVALUE
0x162 DUP1
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x160: JUMPDEST 
0x161: V79 = CALLVALUE
0x163: V80 = ISZERO V79
0x164: V81 = 0x16c
0x167: JUMPI 0x16c V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V11, V79]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x160]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V82 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V11, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V79]

================================

Block 0x16c
[0x16c:0x1a0]
---
Predecessors: [0x160]
Successors: [0x481]
---
0x16c JUMPDEST
0x16d POP
0x16e PUSH2 0x1a1
0x171 PUSH1 0x4
0x173 DUP1
0x174 CALLDATASIZE
0x175 SUB
0x176 DUP2
0x177 ADD
0x178 SWAP1
0x179 DUP1
0x17a DUP1
0x17b CALLDATALOAD
0x17c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191 AND
0x192 SWAP1
0x193 PUSH1 0x20
0x195 ADD
0x196 SWAP1
0x197 SWAP3
0x198 SWAP2
0x199 SWAP1
0x19a POP
0x19b POP
0x19c POP
0x19d PUSH2 0x481
0x1a0 JUMP
---
0x16c: JUMPDEST 
0x16e: V83 = 0x1a1
0x171: V84 = 0x4
0x174: V85 = CALLDATASIZE
0x175: V86 = SUB V85 0x4
0x177: V87 = ADD 0x4 V86
0x17b: V88 = CALLDATALOAD 0x4
0x17c: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x191: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x193: V91 = 0x20
0x195: V92 = ADD 0x20 0x4
0x19d: V93 = 0x481
0x1a0: JUMP 0x481
---
Entry stack: [V11, V79]
Stack pops: 1
Stack additions: [0x1a1, V90]
Exit stack: [V11, 0x1a1, V90]

================================

Block 0x1a1
[0x1a1:0x1a2]
---
Predecessors: [0x6dd]
Successors: []
---
0x1a1 JUMPDEST
0x1a2 STOP
---
0x1a1: JUMPDEST 
0x1a2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a3
[0x1a3:0x1aa]
---
Predecessors: [0x57]
Successors: [0x1ab, 0x1af]
---
0x1a3 JUMPDEST
0x1a4 CALLVALUE
0x1a5 DUP1
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V94 = CALLVALUE
0x1a6: V95 = ISZERO V94
0x1a7: V96 = 0x1af
0x1aa: JUMPI 0x1af V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V94]
Exit stack: [V11, V94]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x1a3]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V97 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V11, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V94]

================================

Block 0x1af
[0x1af:0x1b7]
---
Predecessors: [0x1a3]
Successors: [0x6e0]
---
0x1af JUMPDEST
0x1b0 POP
0x1b1 PUSH2 0x1b8
0x1b4 PUSH2 0x6e0
0x1b7 JUMP
---
0x1af: JUMPDEST 
0x1b1: V98 = 0x1b8
0x1b4: V99 = 0x6e0
0x1b7: JUMP 0x6e0
---
Entry stack: [V11, V94]
Stack pops: 1
Stack additions: [0x1b8]
Exit stack: [V11, 0x1b8]

================================

Block 0x1b8
[0x1b8:0x1b9]
---
Predecessors: [0x798]
Successors: []
---
0x1b8 JUMPDEST
0x1b9 STOP
---
0x1b8: JUMPDEST 
0x1b9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ba
[0x1ba:0x1c1]
---
Predecessors: [0x62]
Successors: [0x1c2, 0x1c6]
---
0x1ba JUMPDEST
0x1bb CALLVALUE
0x1bc DUP1
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x1ba: JUMPDEST 
0x1bb: V100 = CALLVALUE
0x1bd: V101 = ISZERO V100
0x1be: V102 = 0x1c6
0x1c1: JUMPI 0x1c6 V101
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V100]
Exit stack: [V11, V100]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x1ba]
Successors: []
---
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c2: V103 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V11, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V100]

================================

Block 0x1c6
[0x1c6:0x203]
---
Predecessors: [0x1ba]
Successors: [0x79a]
---
0x1c6 JUMPDEST
0x1c7 POP
0x1c8 PUSH2 0x204
0x1cb PUSH1 0x4
0x1cd DUP1
0x1ce CALLDATASIZE
0x1cf SUB
0x1d0 DUP2
0x1d1 ADD
0x1d2 SWAP1
0x1d3 DUP1
0x1d4 DUP1
0x1d5 CALLDATALOAD
0x1d6 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1f3 NOT
0x1f4 AND
0x1f5 SWAP1
0x1f6 PUSH1 0x20
0x1f8 ADD
0x1f9 SWAP1
0x1fa SWAP3
0x1fb SWAP2
0x1fc SWAP1
0x1fd POP
0x1fe POP
0x1ff POP
0x200 PUSH2 0x79a
0x203 JUMP
---
0x1c6: JUMPDEST 
0x1c8: V104 = 0x204
0x1cb: V105 = 0x4
0x1ce: V106 = CALLDATASIZE
0x1cf: V107 = SUB V106 0x4
0x1d1: V108 = ADD 0x4 V107
0x1d5: V109 = CALLDATALOAD 0x4
0x1d6: V110 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1f3: V111 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1f4: V112 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V109
0x1f6: V113 = 0x20
0x1f8: V114 = ADD 0x20 0x4
0x200: V115 = 0x79a
0x203: JUMP 0x79a
---
Entry stack: [V11, V100]
Stack pops: 1
Stack additions: [0x204, V112]
Exit stack: [V11, 0x204, V112]

================================

Block 0x204
[0x204:0x205]
---
Predecessors: [0x8a0]
Successors: []
---
0x204 JUMPDEST
0x205 STOP
---
0x204: JUMPDEST 
0x205: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x206
[0x206:0x20d]
---
Predecessors: [0x6d]
Successors: [0x20e, 0x212]
---
0x206 JUMPDEST
0x207 CALLVALUE
0x208 DUP1
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x206: JUMPDEST 
0x207: V116 = CALLVALUE
0x209: V117 = ISZERO V116
0x20a: V118 = 0x212
0x20d: JUMPI 0x212 V117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V11, V116]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x206]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V119 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V11, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V116]

================================

Block 0x212
[0x212:0x246]
---
Predecessors: [0x206]
Successors: [0x8a3]
---
0x212 JUMPDEST
0x213 POP
0x214 PUSH2 0x247
0x217 PUSH1 0x4
0x219 DUP1
0x21a CALLDATASIZE
0x21b SUB
0x21c DUP2
0x21d ADD
0x21e SWAP1
0x21f DUP1
0x220 DUP1
0x221 CALLDATALOAD
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 AND
0x238 SWAP1
0x239 PUSH1 0x20
0x23b ADD
0x23c SWAP1
0x23d SWAP3
0x23e SWAP2
0x23f SWAP1
0x240 POP
0x241 POP
0x242 POP
0x243 PUSH2 0x8a3
0x246 JUMP
---
0x212: JUMPDEST 
0x214: V120 = 0x247
0x217: V121 = 0x4
0x21a: V122 = CALLDATASIZE
0x21b: V123 = SUB V122 0x4
0x21d: V124 = ADD 0x4 V123
0x221: V125 = CALLDATALOAD 0x4
0x222: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x239: V128 = 0x20
0x23b: V129 = ADD 0x20 0x4
0x243: V130 = 0x8a3
0x246: JUMP 0x8a3
---
Entry stack: [V11, V116]
Stack pops: 1
Stack additions: [0x247, V127]
Exit stack: [V11, 0x247, V127]

================================

Block 0x247
[0x247:0x248]
---
Predecessors: [0x972]
Successors: []
---
0x247 JUMPDEST
0x248 STOP
---
0x247: JUMPDEST 
0x248: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x249
[0x249:0x250]
---
Predecessors: [0x78]
Successors: [0x251, 0x255]
---
0x249 JUMPDEST
0x24a CALLVALUE
0x24b DUP1
0x24c ISZERO
0x24d PUSH2 0x255
0x250 JUMPI
---
0x249: JUMPDEST 
0x24a: V131 = CALLVALUE
0x24c: V132 = ISZERO V131
0x24d: V133 = 0x255
0x250: JUMPI 0x255 V132
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V131]
Exit stack: [V11, V131]

================================

Block 0x251
[0x251:0x254]
---
Predecessors: [0x249]
Successors: []
---
0x251 PUSH1 0x0
0x253 DUP1
0x254 REVERT
---
0x251: V134 = 0x0
0x254: REVERT 0x0 0x0
---
Entry stack: [V11, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V131]

================================

Block 0x255
[0x255:0x25d]
---
Predecessors: [0x249]
Successors: [0x975]
---
0x255 JUMPDEST
0x256 POP
0x257 PUSH2 0x25e
0x25a PUSH2 0x975
0x25d JUMP
---
0x255: JUMPDEST 
0x257: V135 = 0x25e
0x25a: V136 = 0x975
0x25d: JUMP 0x975
---
Entry stack: [V11, V131]
Stack pops: 1
Stack additions: [0x25e]
Exit stack: [V11, 0x25e]

================================

Block 0x25e
[0x25e:0x29f]
---
Predecessors: [0x975]
Successors: []
---
0x25e JUMPDEST
0x25f PUSH1 0x40
0x261 MLOAD
0x262 DUP1
0x263 DUP3
0x264 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x279 AND
0x27a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28f AND
0x290 DUP2
0x291 MSTORE
0x292 PUSH1 0x20
0x294 ADD
0x295 SWAP2
0x296 POP
0x297 POP
0x298 PUSH1 0x40
0x29a MLOAD
0x29b DUP1
0x29c SWAP2
0x29d SUB
0x29e SWAP1
0x29f RETURN
---
0x25e: JUMPDEST 
0x25f: V137 = 0x40
0x261: V138 = M[0x40]
0x264: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x279: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x27a: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x291: M[V138] = V142
0x292: V143 = 0x20
0x294: V144 = ADD 0x20 V138
0x298: V145 = 0x40
0x29a: V146 = M[0x40]
0x29d: V147 = SUB V144 V146
0x29f: RETURN V146 V147
---
Entry stack: [V11, 0x25e, V522]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x25e]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0x83]
Successors: [0x2a8, 0x2ac]
---
0x2a0 JUMPDEST
0x2a1 CALLVALUE
0x2a2 DUP1
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V148 = CALLVALUE
0x2a3: V149 = ISZERO V148
0x2a4: V150 = 0x2ac
0x2a7: JUMPI 0x2ac V149
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V148]
Exit stack: [V11, V148]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x2a0]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V151 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V11, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V148]

================================

Block 0x2ac
[0x2ac:0x2b4]
---
Predecessors: [0x2a0]
Successors: [0x99a]
---
0x2ac JUMPDEST
0x2ad POP
0x2ae PUSH2 0x2b5
0x2b1 PUSH2 0x99a
0x2b4 JUMP
---
0x2ac: JUMPDEST 
0x2ae: V152 = 0x2b5
0x2b1: V153 = 0x99a
0x2b4: JUMP 0x99a
---
Entry stack: [V11, V148]
Stack pops: 1
Stack additions: [0x2b5]
Exit stack: [V11, 0x2b5]

================================

Block 0x2b5
[0x2b5:0x2b6]
---
Predecessors: [0xa73]
Successors: []
---
0x2b5 JUMPDEST
0x2b6 STOP
---
0x2b5: JUMPDEST 
0x2b6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b7
[0x2b7:0x2be]
---
Predecessors: [0x8e]
Successors: [0x2bf, 0x2c3]
---
0x2b7 JUMPDEST
0x2b8 CALLVALUE
0x2b9 DUP1
0x2ba ISZERO
0x2bb PUSH2 0x2c3
0x2be JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V154 = CALLVALUE
0x2ba: V155 = ISZERO V154
0x2bb: V156 = 0x2c3
0x2be: JUMPI 0x2c3 V155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V11, V154]

================================

Block 0x2bf
[0x2bf:0x2c2]
---
Predecessors: [0x2b7]
Successors: []
---
0x2bf PUSH1 0x0
0x2c1 DUP1
0x2c2 REVERT
---
0x2bf: V157 = 0x0
0x2c2: REVERT 0x0 0x0
---
Entry stack: [V11, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V154]

================================

Block 0x2c3
[0x2c3:0x320]
---
Predecessors: [0x2b7]
Successors: [0xa76]
---
0x2c3 JUMPDEST
0x2c4 POP
0x2c5 PUSH2 0x321
0x2c8 PUSH1 0x4
0x2ca DUP1
0x2cb CALLDATASIZE
0x2cc SUB
0x2cd DUP2
0x2ce ADD
0x2cf SWAP1
0x2d0 DUP1
0x2d1 DUP1
0x2d2 CALLDATALOAD
0x2d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e8 AND
0x2e9 SWAP1
0x2ea PUSH1 0x20
0x2ec ADD
0x2ed SWAP1
0x2ee SWAP3
0x2ef SWAP2
0x2f0 SWAP1
0x2f1 DUP1
0x2f2 CALLDATALOAD
0x2f3 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x310 NOT
0x311 AND
0x312 SWAP1
0x313 PUSH1 0x20
0x315 ADD
0x316 SWAP1
0x317 SWAP3
0x318 SWAP2
0x319 SWAP1
0x31a POP
0x31b POP
0x31c POP
0x31d PUSH2 0xa76
0x320 JUMP
---
0x2c3: JUMPDEST 
0x2c5: V158 = 0x321
0x2c8: V159 = 0x4
0x2cb: V160 = CALLDATASIZE
0x2cc: V161 = SUB V160 0x4
0x2ce: V162 = ADD 0x4 V161
0x2d2: V163 = CALLDATALOAD 0x4
0x2d3: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e8: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2ea: V166 = 0x20
0x2ec: V167 = ADD 0x20 0x4
0x2f2: V168 = CALLDATALOAD 0x24
0x2f3: V169 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x310: V170 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x311: V171 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V168
0x313: V172 = 0x20
0x315: V173 = ADD 0x20 0x24
0x31d: V174 = 0xa76
0x320: JUMP 0xa76
---
Entry stack: [V11, V154]
Stack pops: 1
Stack additions: [0x321, V165, V171]
Exit stack: [V11, 0x321, V165, V171]

================================

Block 0x321
[0x321:0x322]
---
Predecessors: [0xb93]
Successors: []
---
0x321 JUMPDEST
0x322 STOP
---
0x321: JUMPDEST 
0x322: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x323
[0x323:0x32a]
---
Predecessors: [0x99]
Successors: [0x32b, 0x32f]
---
0x323 JUMPDEST
0x324 CALLVALUE
0x325 DUP1
0x326 ISZERO
0x327 PUSH2 0x32f
0x32a JUMPI
---
0x323: JUMPDEST 
0x324: V175 = CALLVALUE
0x326: V176 = ISZERO V175
0x327: V177 = 0x32f
0x32a: JUMPI 0x32f V176
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V175]
Exit stack: [V11, V175]

================================

Block 0x32b
[0x32b:0x32e]
---
Predecessors: [0x323]
Successors: []
---
0x32b PUSH1 0x0
0x32d DUP1
0x32e REVERT
---
0x32b: V178 = 0x0
0x32e: REVERT 0x0 0x0
---
Entry stack: [V11, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V175]

================================

Block 0x32f
[0x32f:0x337]
---
Predecessors: [0x323]
Successors: [0xb97]
---
0x32f JUMPDEST
0x330 POP
0x331 PUSH2 0x338
0x334 PUSH2 0xb97
0x337 JUMP
---
0x32f: JUMPDEST 
0x331: V179 = 0x338
0x334: V180 = 0xb97
0x337: JUMP 0xb97
---
Entry stack: [V11, V175]
Stack pops: 1
Stack additions: [0x338]
Exit stack: [V11, 0x338]

================================

Block 0x338
[0x338:0x379]
---
Predecessors: [0xb97]
Successors: []
---
0x338 JUMPDEST
0x339 PUSH1 0x40
0x33b MLOAD
0x33c DUP1
0x33d DUP3
0x33e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x353 AND
0x354 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x369 AND
0x36a DUP2
0x36b MSTORE
0x36c PUSH1 0x20
0x36e ADD
0x36f SWAP2
0x370 POP
0x371 POP
0x372 PUSH1 0x40
0x374 MLOAD
0x375 DUP1
0x376 SWAP2
0x377 SUB
0x378 SWAP1
0x379 RETURN
---
0x338: JUMPDEST 
0x339: V181 = 0x40
0x33b: V182 = M[0x40]
0x33e: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x353: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0x354: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x369: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x36b: M[V182] = V186
0x36c: V187 = 0x20
0x36e: V188 = ADD 0x20 V182
0x372: V189 = 0x40
0x374: V190 = M[0x40]
0x377: V191 = SUB V188 V190
0x379: RETURN V190 V191
---
Entry stack: [V11, 0x338, V629]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x338]

================================

Block 0x37a
[0x37a:0x3d0]
---
Predecessors: [0xb2]
Successors: [0x3d1, 0x3d5]
---
0x37a JUMPDEST
0x37b PUSH1 0x0
0x37d DUP1
0x37e SWAP1
0x37f SLOAD
0x380 SWAP1
0x381 PUSH2 0x100
0x384 EXP
0x385 SWAP1
0x386 DIV
0x387 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39c AND
0x39d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b2 AND
0x3b3 CALLER
0x3b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c9 AND
0x3ca EQ
0x3cb ISZERO
0x3cc ISZERO
0x3cd PUSH2 0x3d5
0x3d0 JUMPI
---
0x37a: JUMPDEST 
0x37b: V192 = 0x0
0x37f: V193 = S[0x0]
0x381: V194 = 0x100
0x384: V195 = EXP 0x100 0x0
0x386: V196 = DIV V193 0x1
0x387: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x39c: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x39d: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x3b3: V201 = CALLER
0x3b4: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x3ca: V204 = EQ V203 V200
0x3cb: V205 = ISZERO V204
0x3cc: V206 = ISZERO V205
0x3cd: V207 = 0x3d5
0x3d0: JUMPI 0x3d5 V206
---
Entry stack: [V11, 0x107, V53, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x107, V53, V58]

================================

Block 0x3d1
[0x3d1:0x3d4]
---
Predecessors: [0x37a]
Successors: []
---
0x3d1 PUSH1 0x0
0x3d3 DUP1
0x3d4 REVERT
---
0x3d1: V208 = 0x0
0x3d4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x107, V53, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x107, V53, V58]

================================

Block 0x3d5
[0x3d5:0x45a]
---
Predecessors: [0x37a]
Successors: [0x107]
---
0x3d5 JUMPDEST
0x3d6 DUP2
0x3d7 PUSH1 0x1
0x3d9 PUSH1 0x0
0x3db PUSH2 0x100
0x3de EXP
0x3df DUP2
0x3e0 SLOAD
0x3e1 DUP2
0x3e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f7 MUL
0x3f8 NOT
0x3f9 AND
0x3fa SWAP1
0x3fb DUP4
0x3fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x411 AND
0x412 MUL
0x413 OR
0x414 SWAP1
0x415 SSTORE
0x416 POP
0x417 DUP1
0x418 PUSH1 0x2
0x41a PUSH1 0x0
0x41c PUSH2 0x100
0x41f EXP
0x420 DUP2
0x421 SLOAD
0x422 DUP2
0x423 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x438 MUL
0x439 NOT
0x43a AND
0x43b SWAP1
0x43c DUP4
0x43d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x452 AND
0x453 MUL
0x454 OR
0x455 SWAP1
0x456 SSTORE
0x457 POP
0x458 POP
0x459 POP
0x45a JUMP
---
0x3d5: JUMPDEST 
0x3d7: V209 = 0x1
0x3d9: V210 = 0x0
0x3db: V211 = 0x100
0x3de: V212 = EXP 0x100 0x0
0x3e0: V213 = S[0x1]
0x3e2: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f7: V215 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3f8: V216 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V217 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V213
0x3fc: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x411: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x412: V220 = MUL V219 0x1
0x413: V221 = OR V220 V217
0x415: S[0x1] = V221
0x418: V222 = 0x2
0x41a: V223 = 0x0
0x41c: V224 = 0x100
0x41f: V225 = EXP 0x100 0x0
0x421: V226 = S[0x2]
0x423: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x438: V228 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x439: V229 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V230 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V226
0x43d: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x452: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x453: V233 = MUL V232 0x1
0x454: V234 = OR V233 V230
0x456: S[0x2] = V234
0x45a: JUMP 0x107
---
Entry stack: [V11, 0x107, V53, V58]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x45b
[0x45b:0x480]
---
Predecessors: [0x115]
Successors: [0x11e]
---
0x45b JUMPDEST
0x45c PUSH1 0x1
0x45e PUSH1 0x0
0x460 SWAP1
0x461 SLOAD
0x462 SWAP1
0x463 PUSH2 0x100
0x466 EXP
0x467 SWAP1
0x468 DIV
0x469 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47e AND
0x47f DUP2
0x480 JUMP
---
0x45b: JUMPDEST 
0x45c: V235 = 0x1
0x45e: V236 = 0x0
0x461: V237 = S[0x1]
0x463: V238 = 0x100
0x466: V239 = EXP 0x100 0x0
0x468: V240 = DIV V237 0x1
0x469: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x47e: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x480: JUMP 0x11e
---
Entry stack: [V11, 0x11e]
Stack pops: 1
Stack additions: [S0, V242]
Exit stack: [V11, 0x11e, V242]

================================

Block 0x481
[0x481:0x4d7]
---
Predecessors: [0x16c]
Successors: [0x4d8, 0x4dc]
---
0x481 JUMPDEST
0x482 PUSH1 0x0
0x484 DUP1
0x485 SWAP1
0x486 SLOAD
0x487 SWAP1
0x488 PUSH2 0x100
0x48b EXP
0x48c SWAP1
0x48d DIV
0x48e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a3 AND
0x4a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b9 AND
0x4ba CALLER
0x4bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d0 AND
0x4d1 EQ
0x4d2 ISZERO
0x4d3 ISZERO
0x4d4 PUSH2 0x4dc
0x4d7 JUMPI
---
0x481: JUMPDEST 
0x482: V243 = 0x0
0x486: V244 = S[0x0]
0x488: V245 = 0x100
0x48b: V246 = EXP 0x100 0x0
0x48d: V247 = DIV V244 0x1
0x48e: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a3: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x4a4: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b9: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x4ba: V252 = CALLER
0x4bb: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d0: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x4d1: V255 = EQ V254 V251
0x4d2: V256 = ISZERO V255
0x4d3: V257 = ISZERO V256
0x4d4: V258 = 0x4dc
0x4d7: JUMPI 0x4dc V257
---
Entry stack: [V11, 0x1a1, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a1, V90]

================================

Block 0x4d8
[0x4d8:0x4db]
---
Predecessors: [0x481]
Successors: []
---
0x4d8 PUSH1 0x0
0x4da DUP1
0x4db REVERT
---
0x4d8: V259 = 0x0
0x4db: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a1, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a1, V90]

================================

Block 0x4dc
[0x4dc:0x5d2]
---
Predecessors: [0x481]
Successors: [0x5d3, 0x5d7]
---
0x4dc JUMPDEST
0x4dd PUSH1 0x2
0x4df PUSH1 0x0
0x4e1 SWAP1
0x4e2 SLOAD
0x4e3 SWAP1
0x4e4 PUSH2 0x100
0x4e7 EXP
0x4e8 SWAP1
0x4e9 DIV
0x4ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ff AND
0x500 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x515 AND
0x516 PUSH4 0xa9059cbb
0x51b PUSH1 0x0
0x51d DUP1
0x51e SWAP1
0x51f SLOAD
0x520 SWAP1
0x521 PUSH2 0x100
0x524 EXP
0x525 SWAP1
0x526 DIV
0x527 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53c AND
0x53d DUP4
0x53e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x553 AND
0x554 PUSH4 0x70a08231
0x559 ADDRESS
0x55a PUSH1 0x40
0x55c MLOAD
0x55d DUP3
0x55e PUSH4 0xffffffff
0x563 AND
0x564 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x582 MUL
0x583 DUP2
0x584 MSTORE
0x585 PUSH1 0x4
0x587 ADD
0x588 DUP1
0x589 DUP3
0x58a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59f AND
0x5a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b5 AND
0x5b6 DUP2
0x5b7 MSTORE
0x5b8 PUSH1 0x20
0x5ba ADD
0x5bb SWAP2
0x5bc POP
0x5bd POP
0x5be PUSH1 0x20
0x5c0 PUSH1 0x40
0x5c2 MLOAD
0x5c3 DUP1
0x5c4 DUP4
0x5c5 SUB
0x5c6 DUP2
0x5c7 PUSH1 0x0
0x5c9 DUP8
0x5ca DUP1
0x5cb EXTCODESIZE
0x5cc ISZERO
0x5cd DUP1
0x5ce ISZERO
0x5cf PUSH2 0x5d7
0x5d2 JUMPI
---
0x4dc: JUMPDEST 
0x4dd: V260 = 0x2
0x4df: V261 = 0x0
0x4e2: V262 = S[0x2]
0x4e4: V263 = 0x100
0x4e7: V264 = EXP 0x100 0x0
0x4e9: V265 = DIV V262 0x1
0x4ea: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ff: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x500: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x515: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x516: V270 = 0xa9059cbb
0x51b: V271 = 0x0
0x51f: V272 = S[0x0]
0x521: V273 = 0x100
0x524: V274 = EXP 0x100 0x0
0x526: V275 = DIV V272 0x1
0x527: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x53c: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x53e: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x553: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x554: V280 = 0x70a08231
0x559: V281 = ADDRESS
0x55a: V282 = 0x40
0x55c: V283 = M[0x40]
0x55e: V284 = 0xffffffff
0x563: V285 = AND 0xffffffff 0x70a08231
0x564: V286 = 0x100000000000000000000000000000000000000000000000000000000
0x582: V287 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x584: M[V283] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x585: V288 = 0x4
0x587: V289 = ADD 0x4 V283
0x58a: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x59f: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x5a0: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b5: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x5b7: M[V289] = V293
0x5b8: V294 = 0x20
0x5ba: V295 = ADD 0x20 V289
0x5be: V296 = 0x20
0x5c0: V297 = 0x40
0x5c2: V298 = M[0x40]
0x5c5: V299 = SUB V295 V298
0x5c7: V300 = 0x0
0x5cb: V301 = EXTCODESIZE V279
0x5cc: V302 = ISZERO V301
0x5ce: V303 = ISZERO V302
0x5cf: V304 = 0x5d7
0x5d2: JUMPI 0x5d7 V303
---
Entry stack: [V11, 0x1a1, V90]
Stack pops: 1
Stack additions: [S0, V269, 0xa9059cbb, V277, V279, 0x70a08231, V295, 0x20, V298, V299, V298, 0x0, V279, V302]
Exit stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V279, 0x70a08231, V295, 0x20, V298, V299, V298, 0x0, V279, V302]

================================

Block 0x5d3
[0x5d3:0x5d6]
---
Predecessors: [0x4dc]
Successors: []
---
0x5d3 PUSH1 0x0
0x5d5 DUP1
0x5d6 REVERT
---
0x5d3: V305 = 0x0
0x5d6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V279, 0x70a08231, V295, 0x20, V298, V299, V298, 0x0, V279, V302]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V279, 0x70a08231, V295, 0x20, V298, V299, V298, 0x0, V279, V302]

================================

Block 0x5d7
[0x5d7:0x5e1]
---
Predecessors: [0x4dc]
Successors: [0x5e2, 0x5eb]
---
0x5d7 JUMPDEST
0x5d8 POP
0x5d9 GAS
0x5da CALL
0x5db ISZERO
0x5dc DUP1
0x5dd ISZERO
0x5de PUSH2 0x5eb
0x5e1 JUMPI
---
0x5d7: JUMPDEST 
0x5d9: V306 = GAS
0x5da: V307 = CALL V306 V279 0x0 V298 V299 V298 0x20
0x5db: V308 = ISZERO V307
0x5dd: V309 = ISZERO V308
0x5de: V310 = 0x5eb
0x5e1: JUMPI 0x5eb V309
---
Entry stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V279, 0x70a08231, V295, 0x20, V298, V299, V298, 0x0, V279, V302]
Stack pops: 7
Stack additions: [V308]
Exit stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V279, 0x70a08231, V295, V308]

================================

Block 0x5e2
[0x5e2:0x5ea]
---
Predecessors: [0x5d7]
Successors: []
---
0x5e2 RETURNDATASIZE
0x5e3 PUSH1 0x0
0x5e5 DUP1
0x5e6 RETURNDATACOPY
0x5e7 RETURNDATASIZE
0x5e8 PUSH1 0x0
0x5ea REVERT
---
0x5e2: V311 = RETURNDATASIZE
0x5e3: V312 = 0x0
0x5e6: RETURNDATACOPY 0x0 0x0 V311
0x5e7: V313 = RETURNDATASIZE
0x5e8: V314 = 0x0
0x5ea: REVERT 0x0 V313
---
Entry stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V279, 0x70a08231, V295, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V279, 0x70a08231, V295, V308]

================================

Block 0x5eb
[0x5eb:0x5fc]
---
Predecessors: [0x5d7]
Successors: [0x5fd, 0x601]
---
0x5eb JUMPDEST
0x5ec POP
0x5ed POP
0x5ee POP
0x5ef POP
0x5f0 PUSH1 0x40
0x5f2 MLOAD
0x5f3 RETURNDATASIZE
0x5f4 PUSH1 0x20
0x5f6 DUP2
0x5f7 LT
0x5f8 ISZERO
0x5f9 PUSH2 0x601
0x5fc JUMPI
---
0x5eb: JUMPDEST 
0x5f0: V315 = 0x40
0x5f2: V316 = M[0x40]
0x5f3: V317 = RETURNDATASIZE
0x5f4: V318 = 0x20
0x5f7: V319 = LT V317 0x20
0x5f8: V320 = ISZERO V319
0x5f9: V321 = 0x601
0x5fc: JUMPI 0x601 V320
---
Entry stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V279, 0x70a08231, V295, V308]
Stack pops: 4
Stack additions: [V316, V317]
Exit stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V316, V317]

================================

Block 0x5fd
[0x5fd:0x600]
---
Predecessors: [0x5eb]
Successors: []
---
0x5fd PUSH1 0x0
0x5ff DUP1
0x600 REVERT
---
0x5fd: V322 = 0x0
0x600: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V316, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V316, V317]

================================

Block 0x601
[0x601:0x692]
---
Predecessors: [0x5eb]
Successors: [0x693, 0x697]
---
0x601 JUMPDEST
0x602 DUP2
0x603 ADD
0x604 SWAP1
0x605 DUP1
0x606 DUP1
0x607 MLOAD
0x608 SWAP1
0x609 PUSH1 0x20
0x60b ADD
0x60c SWAP1
0x60d SWAP3
0x60e SWAP2
0x60f SWAP1
0x610 POP
0x611 POP
0x612 POP
0x613 PUSH1 0x40
0x615 MLOAD
0x616 DUP4
0x617 PUSH4 0xffffffff
0x61c AND
0x61d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x63b MUL
0x63c DUP2
0x63d MSTORE
0x63e PUSH1 0x4
0x640 ADD
0x641 DUP1
0x642 DUP4
0x643 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x658 AND
0x659 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66e AND
0x66f DUP2
0x670 MSTORE
0x671 PUSH1 0x20
0x673 ADD
0x674 DUP3
0x675 DUP2
0x676 MSTORE
0x677 PUSH1 0x20
0x679 ADD
0x67a SWAP3
0x67b POP
0x67c POP
0x67d POP
0x67e PUSH1 0x20
0x680 PUSH1 0x40
0x682 MLOAD
0x683 DUP1
0x684 DUP4
0x685 SUB
0x686 DUP2
0x687 PUSH1 0x0
0x689 DUP8
0x68a DUP1
0x68b EXTCODESIZE
0x68c ISZERO
0x68d DUP1
0x68e ISZERO
0x68f PUSH2 0x697
0x692 JUMPI
---
0x601: JUMPDEST 
0x603: V323 = ADD V316 V317
0x607: V324 = M[V316]
0x609: V325 = 0x20
0x60b: V326 = ADD 0x20 V316
0x613: V327 = 0x40
0x615: V328 = M[0x40]
0x617: V329 = 0xffffffff
0x61c: V330 = AND 0xffffffff 0xa9059cbb
0x61d: V331 = 0x100000000000000000000000000000000000000000000000000000000
0x63b: V332 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x63d: M[V328] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x63e: V333 = 0x4
0x640: V334 = ADD 0x4 V328
0x643: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x658: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x659: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x670: M[V334] = V338
0x671: V339 = 0x20
0x673: V340 = ADD 0x20 V334
0x676: M[V340] = V324
0x677: V341 = 0x20
0x679: V342 = ADD 0x20 V340
0x67e: V343 = 0x20
0x680: V344 = 0x40
0x682: V345 = M[0x40]
0x685: V346 = SUB V342 V345
0x687: V347 = 0x0
0x68b: V348 = EXTCODESIZE V269
0x68c: V349 = ISZERO V348
0x68e: V350 = ISZERO V349
0x68f: V351 = 0x697
0x692: JUMPI 0x697 V350
---
Entry stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V277, V316, V317]
Stack pops: 5
Stack additions: [S4, S3, V342, 0x20, V345, V346, V345, 0x0, S4, V349]
Exit stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V342, 0x20, V345, V346, V345, 0x0, V269, V349]

================================

Block 0x693
[0x693:0x696]
---
Predecessors: [0x601]
Successors: []
---
0x693 PUSH1 0x0
0x695 DUP1
0x696 REVERT
---
0x693: V352 = 0x0
0x696: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V342, 0x20, V345, V346, V345, 0x0, V269, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V342, 0x20, V345, V346, V345, 0x0, V269, V349]

================================

Block 0x697
[0x697:0x6a1]
---
Predecessors: [0x601]
Successors: [0x6a2, 0x6ab]
---
0x697 JUMPDEST
0x698 POP
0x699 GAS
0x69a CALL
0x69b ISZERO
0x69c DUP1
0x69d ISZERO
0x69e PUSH2 0x6ab
0x6a1 JUMPI
---
0x697: JUMPDEST 
0x699: V353 = GAS
0x69a: V354 = CALL V353 V269 0x0 V345 V346 V345 0x20
0x69b: V355 = ISZERO V354
0x69d: V356 = ISZERO V355
0x69e: V357 = 0x6ab
0x6a1: JUMPI 0x6ab V356
---
Entry stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V342, 0x20, V345, V346, V345, 0x0, V269, V349]
Stack pops: 7
Stack additions: [V355]
Exit stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V342, V355]

================================

Block 0x6a2
[0x6a2:0x6aa]
---
Predecessors: [0x697]
Successors: []
---
0x6a2 RETURNDATASIZE
0x6a3 PUSH1 0x0
0x6a5 DUP1
0x6a6 RETURNDATACOPY
0x6a7 RETURNDATASIZE
0x6a8 PUSH1 0x0
0x6aa REVERT
---
0x6a2: V358 = RETURNDATASIZE
0x6a3: V359 = 0x0
0x6a6: RETURNDATACOPY 0x0 0x0 V358
0x6a7: V360 = RETURNDATASIZE
0x6a8: V361 = 0x0
0x6aa: REVERT 0x0 V360
---
Entry stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V342, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V342, V355]

================================

Block 0x6ab
[0x6ab:0x6bc]
---
Predecessors: [0x697]
Successors: [0x6bd, 0x6c1]
---
0x6ab JUMPDEST
0x6ac POP
0x6ad POP
0x6ae POP
0x6af POP
0x6b0 PUSH1 0x40
0x6b2 MLOAD
0x6b3 RETURNDATASIZE
0x6b4 PUSH1 0x20
0x6b6 DUP2
0x6b7 LT
0x6b8 ISZERO
0x6b9 PUSH2 0x6c1
0x6bc JUMPI
---
0x6ab: JUMPDEST 
0x6b0: V362 = 0x40
0x6b2: V363 = M[0x40]
0x6b3: V364 = RETURNDATASIZE
0x6b4: V365 = 0x20
0x6b7: V366 = LT V364 0x20
0x6b8: V367 = ISZERO V366
0x6b9: V368 = 0x6c1
0x6bc: JUMPI 0x6c1 V367
---
Entry stack: [V11, 0x1a1, V90, V269, 0xa9059cbb, V342, V355]
Stack pops: 4
Stack additions: [V363, V364]
Exit stack: [V11, 0x1a1, V90, V363, V364]

================================

Block 0x6bd
[0x6bd:0x6c0]
---
Predecessors: [0x6ab]
Successors: []
---
0x6bd PUSH1 0x0
0x6bf DUP1
0x6c0 REVERT
---
0x6bd: V369 = 0x0
0x6c0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a1, V90, V363, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a1, V90, V363, V364]

================================

Block 0x6c1
[0x6c1:0x6d8]
---
Predecessors: [0x6ab]
Successors: [0x6d9, 0x6dd]
---
0x6c1 JUMPDEST
0x6c2 DUP2
0x6c3 ADD
0x6c4 SWAP1
0x6c5 DUP1
0x6c6 DUP1
0x6c7 MLOAD
0x6c8 SWAP1
0x6c9 PUSH1 0x20
0x6cb ADD
0x6cc SWAP1
0x6cd SWAP3
0x6ce SWAP2
0x6cf SWAP1
0x6d0 POP
0x6d1 POP
0x6d2 POP
0x6d3 ISZERO
0x6d4 ISZERO
0x6d5 PUSH2 0x6dd
0x6d8 JUMPI
---
0x6c1: JUMPDEST 
0x6c3: V370 = ADD V363 V364
0x6c7: V371 = M[V363]
0x6c9: V372 = 0x20
0x6cb: V373 = ADD 0x20 V363
0x6d3: V374 = ISZERO V371
0x6d4: V375 = ISZERO V374
0x6d5: V376 = 0x6dd
0x6d8: JUMPI 0x6dd V375
---
Entry stack: [V11, 0x1a1, V90, V363, V364]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1a1, V90]

================================

Block 0x6d9
[0x6d9:0x6dc]
---
Predecessors: [0x6c1]
Successors: []
---
0x6d9 PUSH1 0x0
0x6db DUP1
0x6dc REVERT
---
0x6d9: V377 = 0x0
0x6dc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a1, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a1, V90]

================================

Block 0x6dd
[0x6dd:0x6df]
---
Predecessors: [0x6c1]
Successors: [0x1a1]
---
0x6dd JUMPDEST
0x6de POP
0x6df JUMP
---
0x6dd: JUMPDEST 
0x6df: JUMP 0x1a1
---
Entry stack: [V11, 0x1a1, V90]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e0
[0x6e0:0x723]
---
Predecessors: [0x1af]
Successors: [0x724, 0x728]
---
0x6e0 JUMPDEST
0x6e1 PUSH1 0x0
0x6e3 PUSH1 0x1
0x6e5 PUSH1 0x0
0x6e7 SWAP1
0x6e8 SLOAD
0x6e9 SWAP1
0x6ea PUSH2 0x100
0x6ed EXP
0x6ee SWAP1
0x6ef DIV
0x6f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x705 AND
0x706 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71b AND
0x71c EQ
0x71d ISZERO
0x71e ISZERO
0x71f ISZERO
0x720 PUSH2 0x728
0x723 JUMPI
---
0x6e0: JUMPDEST 
0x6e1: V378 = 0x0
0x6e3: V379 = 0x1
0x6e5: V380 = 0x0
0x6e8: V381 = S[0x1]
0x6ea: V382 = 0x100
0x6ed: V383 = EXP 0x100 0x0
0x6ef: V384 = DIV V381 0x1
0x6f0: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x705: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x706: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x71b: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x71c: V389 = EQ V388 0x0
0x71d: V390 = ISZERO V389
0x71e: V391 = ISZERO V390
0x71f: V392 = ISZERO V391
0x720: V393 = 0x728
0x723: JUMPI 0x728 V392
---
Entry stack: [V11, 0x1b8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b8]

================================

Block 0x724
[0x724:0x727]
---
Predecessors: [0x6e0]
Successors: []
---
0x724 PUSH1 0x0
0x726 DUP1
0x727 REVERT
---
0x724: V394 = 0x0
0x727: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b8]

================================

Block 0x728
[0x728:0x793]
---
Predecessors: [0x6e0]
Successors: [0x794, 0x798]
---
0x728 JUMPDEST
0x729 PUSH1 0x1
0x72b PUSH1 0x0
0x72d SWAP1
0x72e SLOAD
0x72f SWAP1
0x730 PUSH2 0x100
0x733 EXP
0x734 SWAP1
0x735 DIV
0x736 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74b AND
0x74c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x761 AND
0x762 ADDRESS
0x763 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x778 AND
0x779 BALANCE
0x77a PUSH1 0x40
0x77c MLOAD
0x77d PUSH1 0x0
0x77f PUSH1 0x40
0x781 MLOAD
0x782 DUP1
0x783 DUP4
0x784 SUB
0x785 DUP2
0x786 DUP6
0x787 DUP8
0x788 GAS
0x789 CALL
0x78a SWAP3
0x78b POP
0x78c POP
0x78d POP
0x78e ISZERO
0x78f ISZERO
0x790 PUSH2 0x798
0x793 JUMPI
---
0x728: JUMPDEST 
0x729: V395 = 0x1
0x72b: V396 = 0x0
0x72e: V397 = S[0x1]
0x730: V398 = 0x100
0x733: V399 = EXP 0x100 0x0
0x735: V400 = DIV V397 0x1
0x736: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x74b: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x74c: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x761: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x762: V405 = ADDRESS
0x763: V406 = 0xffffffffffffffffffffffffffffffffffffffff
0x778: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x779: V408 = BALANCE V407
0x77a: V409 = 0x40
0x77c: V410 = M[0x40]
0x77d: V411 = 0x0
0x77f: V412 = 0x40
0x781: V413 = M[0x40]
0x784: V414 = SUB V410 V413
0x788: V415 = GAS
0x789: V416 = CALL V415 V404 V408 V413 V414 V413 0x0
0x78e: V417 = ISZERO V416
0x78f: V418 = ISZERO V417
0x790: V419 = 0x798
0x793: JUMPI 0x798 V418
---
Entry stack: [V11, 0x1b8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b8]

================================

Block 0x794
[0x794:0x797]
---
Predecessors: [0x728]
Successors: []
---
0x794 PUSH1 0x0
0x796 DUP1
0x797 REVERT
---
0x794: V420 = 0x0
0x797: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b8]

================================

Block 0x798
[0x798:0x799]
---
Predecessors: [0x728]
Successors: [0x1b8]
---
0x798 JUMPDEST
0x799 JUMP
---
0x798: JUMPDEST 
0x799: JUMP 0x1b8
---
Entry stack: [V11, 0x1b8]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x79a
[0x79a:0x7dd]
---
Predecessors: [0x1c6]
Successors: [0x7de, 0x7e2]
---
0x79a JUMPDEST
0x79b PUSH1 0x0
0x79d PUSH1 0x1
0x79f PUSH1 0x0
0x7a1 SWAP1
0x7a2 SLOAD
0x7a3 SWAP1
0x7a4 PUSH2 0x100
0x7a7 EXP
0x7a8 SWAP1
0x7a9 DIV
0x7aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bf AND
0x7c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d5 AND
0x7d6 EQ
0x7d7 ISZERO
0x7d8 ISZERO
0x7d9 ISZERO
0x7da PUSH2 0x7e2
0x7dd JUMPI
---
0x79a: JUMPDEST 
0x79b: V421 = 0x0
0x79d: V422 = 0x1
0x79f: V423 = 0x0
0x7a2: V424 = S[0x1]
0x7a4: V425 = 0x100
0x7a7: V426 = EXP 0x100 0x0
0x7a9: V427 = DIV V424 0x1
0x7aa: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bf: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x7c0: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d5: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x7d6: V432 = EQ V431 0x0
0x7d7: V433 = ISZERO V432
0x7d8: V434 = ISZERO V433
0x7d9: V435 = ISZERO V434
0x7da: V436 = 0x7e2
0x7dd: JUMPI 0x7e2 V435
---
Entry stack: [V11, 0x204, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x204, V112]

================================

Block 0x7de
[0x7de:0x7e1]
---
Predecessors: [0x79a]
Successors: []
---
0x7de PUSH1 0x0
0x7e0 DUP1
0x7e1 REVERT
---
0x7de: V437 = 0x0
0x7e1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x204, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x204, V112]

================================

Block 0x7e2
[0x7e2:0x89b]
---
Predecessors: [0x79a]
Successors: [0x89c, 0x8a0]
---
0x7e2 JUMPDEST
0x7e3 PUSH1 0x1
0x7e5 PUSH1 0x0
0x7e7 SWAP1
0x7e8 SLOAD
0x7e9 SWAP1
0x7ea PUSH2 0x100
0x7ed EXP
0x7ee SWAP1
0x7ef DIV
0x7f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x805 AND
0x806 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81b AND
0x81c ADDRESS
0x81d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x832 AND
0x833 BALANCE
0x834 DUP3
0x835 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x853 SWAP1
0x854 DIV
0x855 SWAP1
0x856 PUSH1 0x40
0x858 MLOAD
0x859 DUP3
0x85a PUSH4 0xffffffff
0x85f AND
0x860 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x87e MUL
0x87f DUP2
0x880 MSTORE
0x881 PUSH1 0x4
0x883 ADD
0x884 PUSH1 0x0
0x886 PUSH1 0x40
0x888 MLOAD
0x889 DUP1
0x88a DUP4
0x88b SUB
0x88c DUP2
0x88d DUP6
0x88e DUP9
0x88f GAS
0x890 CALL
0x891 SWAP4
0x892 POP
0x893 POP
0x894 POP
0x895 POP
0x896 ISZERO
0x897 ISZERO
0x898 PUSH2 0x8a0
0x89b JUMPI
---
0x7e2: JUMPDEST 
0x7e3: V438 = 0x1
0x7e5: V439 = 0x0
0x7e8: V440 = S[0x1]
0x7ea: V441 = 0x100
0x7ed: V442 = EXP 0x100 0x0
0x7ef: V443 = DIV V440 0x1
0x7f0: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x805: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x806: V446 = 0xffffffffffffffffffffffffffffffffffffffff
0x81b: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x81c: V448 = ADDRESS
0x81d: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x832: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x833: V451 = BALANCE V450
0x835: V452 = 0x100000000000000000000000000000000000000000000000000000000
0x854: V453 = DIV V112 0x100000000000000000000000000000000000000000000000000000000
0x856: V454 = 0x40
0x858: V455 = M[0x40]
0x85a: V456 = 0xffffffff
0x85f: V457 = AND 0xffffffff V453
0x860: V458 = 0x100000000000000000000000000000000000000000000000000000000
0x87e: V459 = MUL 0x100000000000000000000000000000000000000000000000000000000 V457
0x880: M[V455] = V459
0x881: V460 = 0x4
0x883: V461 = ADD 0x4 V455
0x884: V462 = 0x0
0x886: V463 = 0x40
0x888: V464 = M[0x40]
0x88b: V465 = SUB V461 V464
0x88f: V466 = GAS
0x890: V467 = CALL V466 V447 V451 V464 V465 V464 0x0
0x896: V468 = ISZERO V467
0x897: V469 = ISZERO V468
0x898: V470 = 0x8a0
0x89b: JUMPI 0x8a0 V469
---
Entry stack: [V11, 0x204, V112]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x204, V112]

================================

Block 0x89c
[0x89c:0x89f]
---
Predecessors: [0x7e2]
Successors: []
---
0x89c PUSH1 0x0
0x89e DUP1
0x89f REVERT
---
0x89c: V471 = 0x0
0x89f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x204, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x204, V112]

================================

Block 0x8a0
[0x8a0:0x8a2]
---
Predecessors: [0x7e2]
Successors: [0x204]
---
0x8a0 JUMPDEST
0x8a1 POP
0x8a2 JUMP
---
0x8a0: JUMPDEST 
0x8a2: JUMP 0x204
---
Entry stack: [V11, 0x204, V112]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x8a3
[0x8a3:0x8f9]
---
Predecessors: [0x212]
Successors: [0x8fa, 0x8fe]
---
0x8a3 JUMPDEST
0x8a4 PUSH1 0x0
0x8a6 DUP1
0x8a7 SWAP1
0x8a8 SLOAD
0x8a9 SWAP1
0x8aa PUSH2 0x100
0x8ad EXP
0x8ae SWAP1
0x8af DIV
0x8b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c5 AND
0x8c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8db AND
0x8dc CALLER
0x8dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f2 AND
0x8f3 EQ
0x8f4 ISZERO
0x8f5 ISZERO
0x8f6 PUSH2 0x8fe
0x8f9 JUMPI
---
0x8a3: JUMPDEST 
0x8a4: V472 = 0x0
0x8a8: V473 = S[0x0]
0x8aa: V474 = 0x100
0x8ad: V475 = EXP 0x100 0x0
0x8af: V476 = DIV V473 0x1
0x8b0: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c5: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x8c6: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x8db: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x8dc: V481 = CALLER
0x8dd: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f2: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x8f3: V484 = EQ V483 V480
0x8f4: V485 = ISZERO V484
0x8f5: V486 = ISZERO V485
0x8f6: V487 = 0x8fe
0x8f9: JUMPI 0x8fe V486
---
Entry stack: [V11, 0x247, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x247, V127]

================================

Block 0x8fa
[0x8fa:0x8fd]
---
Predecessors: [0x8a3]
Successors: []
---
0x8fa PUSH1 0x0
0x8fc DUP1
0x8fd REVERT
---
0x8fa: V488 = 0x0
0x8fd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x247, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x247, V127]

================================

Block 0x8fe
[0x8fe:0x91f]
---
Predecessors: [0x8a3]
Successors: [0x920, 0x924]
---
0x8fe JUMPDEST
0x8ff PUSH1 0x0
0x901 DUP2
0x902 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x917 AND
0x918 EQ
0x919 ISZERO
0x91a ISZERO
0x91b ISZERO
0x91c PUSH2 0x924
0x91f JUMPI
---
0x8fe: JUMPDEST 
0x8ff: V489 = 0x0
0x902: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x917: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x918: V492 = EQ V491 0x0
0x919: V493 = ISZERO V492
0x91a: V494 = ISZERO V493
0x91b: V495 = ISZERO V494
0x91c: V496 = 0x924
0x91f: JUMPI 0x924 V495
---
Entry stack: [V11, 0x247, V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x247, V127]

================================

Block 0x920
[0x920:0x923]
---
Predecessors: [0x8fe]
Successors: []
---
0x920 PUSH1 0x0
0x922 DUP1
0x923 REVERT
---
0x920: V497 = 0x0
0x923: REVERT 0x0 0x0
---
Entry stack: [V11, 0x247, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x247, V127]

================================

Block 0x924
[0x924:0x96d]
---
Predecessors: [0x8fe]
Successors: [0x96e, 0x972]
---
0x924 JUMPDEST
0x925 DUP1
0x926 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93b AND
0x93c ADDRESS
0x93d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x952 AND
0x953 BALANCE
0x954 PUSH1 0x40
0x956 MLOAD
0x957 PUSH1 0x0
0x959 PUSH1 0x40
0x95b MLOAD
0x95c DUP1
0x95d DUP4
0x95e SUB
0x95f DUP2
0x960 DUP6
0x961 DUP8
0x962 GAS
0x963 CALL
0x964 SWAP3
0x965 POP
0x966 POP
0x967 POP
0x968 ISZERO
0x969 ISZERO
0x96a PUSH2 0x972
0x96d JUMPI
---
0x924: JUMPDEST 
0x926: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x93b: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x93c: V500 = ADDRESS
0x93d: V501 = 0xffffffffffffffffffffffffffffffffffffffff
0x952: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x953: V503 = BALANCE V502
0x954: V504 = 0x40
0x956: V505 = M[0x40]
0x957: V506 = 0x0
0x959: V507 = 0x40
0x95b: V508 = M[0x40]
0x95e: V509 = SUB V505 V508
0x962: V510 = GAS
0x963: V511 = CALL V510 V499 V503 V508 V509 V508 0x0
0x968: V512 = ISZERO V511
0x969: V513 = ISZERO V512
0x96a: V514 = 0x972
0x96d: JUMPI 0x972 V513
---
Entry stack: [V11, 0x247, V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x247, V127]

================================

Block 0x96e
[0x96e:0x971]
---
Predecessors: [0x924]
Successors: []
---
0x96e PUSH1 0x0
0x970 DUP1
0x971 REVERT
---
0x96e: V515 = 0x0
0x971: REVERT 0x0 0x0
---
Entry stack: [V11, 0x247, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x247, V127]

================================

Block 0x972
[0x972:0x974]
---
Predecessors: [0x924]
Successors: [0x247]
---
0x972 JUMPDEST
0x973 POP
0x974 JUMP
---
0x972: JUMPDEST 
0x974: JUMP 0x247
---
Entry stack: [V11, 0x247, V127]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x975
[0x975:0x999]
---
Predecessors: [0x255]
Successors: [0x25e]
---
0x975 JUMPDEST
0x976 PUSH1 0x0
0x978 DUP1
0x979 SWAP1
0x97a SLOAD
0x97b SWAP1
0x97c PUSH2 0x100
0x97f EXP
0x980 SWAP1
0x981 DIV
0x982 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x997 AND
0x998 DUP2
0x999 JUMP
---
0x975: JUMPDEST 
0x976: V516 = 0x0
0x97a: V517 = S[0x0]
0x97c: V518 = 0x100
0x97f: V519 = EXP 0x100 0x0
0x981: V520 = DIV V517 0x1
0x982: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x997: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x999: JUMP 0x25e
---
Entry stack: [V11, 0x25e]
Stack pops: 1
Stack additions: [S0, V522]
Exit stack: [V11, 0x25e, V522]

================================

Block 0x99a
[0x99a:0x9f0]
---
Predecessors: [0x2ac]
Successors: [0x9f1, 0x9f5]
---
0x99a JUMPDEST
0x99b PUSH1 0x0
0x99d DUP1
0x99e SWAP1
0x99f SLOAD
0x9a0 SWAP1
0x9a1 PUSH2 0x100
0x9a4 EXP
0x9a5 SWAP1
0x9a6 DIV
0x9a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9bc AND
0x9bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d2 AND
0x9d3 CALLER
0x9d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e9 AND
0x9ea EQ
0x9eb ISZERO
0x9ec ISZERO
0x9ed PUSH2 0x9f5
0x9f0 JUMPI
---
0x99a: JUMPDEST 
0x99b: V523 = 0x0
0x99f: V524 = S[0x0]
0x9a1: V525 = 0x100
0x9a4: V526 = EXP 0x100 0x0
0x9a6: V527 = DIV V524 0x1
0x9a7: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x9bc: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x9bd: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d2: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0x9d3: V532 = CALLER
0x9d4: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e9: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x9ea: V535 = EQ V534 V531
0x9eb: V536 = ISZERO V535
0x9ec: V537 = ISZERO V536
0x9ed: V538 = 0x9f5
0x9f0: JUMPI 0x9f5 V537
---
Entry stack: [V11, 0x2b5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b5]

================================

Block 0x9f1
[0x9f1:0x9f4]
---
Predecessors: [0x99a]
Successors: []
---
0x9f1 PUSH1 0x0
0x9f3 DUP1
0x9f4 REVERT
---
0x9f1: V539 = 0x0
0x9f4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2b5]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b5]

================================

Block 0x9f5
[0x9f5:0xa69]
---
Predecessors: [0x99a]
Successors: [0xa6a, 0xa73]
---
0x9f5 JUMPDEST
0x9f6 PUSH1 0x0
0x9f8 DUP1
0x9f9 SWAP1
0x9fa SLOAD
0x9fb SWAP1
0x9fc PUSH2 0x100
0x9ff EXP
0xa00 SWAP1
0xa01 DIV
0xa02 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa17 AND
0xa18 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2d AND
0xa2e PUSH2 0x8fc
0xa31 ADDRESS
0xa32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa47 AND
0xa48 BALANCE
0xa49 SWAP1
0xa4a DUP2
0xa4b ISZERO
0xa4c MUL
0xa4d SWAP1
0xa4e PUSH1 0x40
0xa50 MLOAD
0xa51 PUSH1 0x0
0xa53 PUSH1 0x40
0xa55 MLOAD
0xa56 DUP1
0xa57 DUP4
0xa58 SUB
0xa59 DUP2
0xa5a DUP6
0xa5b DUP9
0xa5c DUP9
0xa5d CALL
0xa5e SWAP4
0xa5f POP
0xa60 POP
0xa61 POP
0xa62 POP
0xa63 ISZERO
0xa64 DUP1
0xa65 ISZERO
0xa66 PUSH2 0xa73
0xa69 JUMPI
---
0x9f5: JUMPDEST 
0x9f6: V540 = 0x0
0x9fa: V541 = S[0x0]
0x9fc: V542 = 0x100
0x9ff: V543 = EXP 0x100 0x0
0xa01: V544 = DIV V541 0x1
0xa02: V545 = 0xffffffffffffffffffffffffffffffffffffffff
0xa17: V546 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0xa18: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2d: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0xa2e: V549 = 0x8fc
0xa31: V550 = ADDRESS
0xa32: V551 = 0xffffffffffffffffffffffffffffffffffffffff
0xa47: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0xa48: V553 = BALANCE V552
0xa4b: V554 = ISZERO V553
0xa4c: V555 = MUL V554 0x8fc
0xa4e: V556 = 0x40
0xa50: V557 = M[0x40]
0xa51: V558 = 0x0
0xa53: V559 = 0x40
0xa55: V560 = M[0x40]
0xa58: V561 = SUB V557 V560
0xa5d: V562 = CALL V555 V548 V553 V560 V561 V560 0x0
0xa63: V563 = ISZERO V562
0xa65: V564 = ISZERO V563
0xa66: V565 = 0xa73
0xa69: JUMPI 0xa73 V564
---
Entry stack: [V11, 0x2b5]
Stack pops: 0
Stack additions: [V563]
Exit stack: [V11, 0x2b5, V563]

================================

Block 0xa6a
[0xa6a:0xa72]
---
Predecessors: [0x9f5]
Successors: []
---
0xa6a RETURNDATASIZE
0xa6b PUSH1 0x0
0xa6d DUP1
0xa6e RETURNDATACOPY
0xa6f RETURNDATASIZE
0xa70 PUSH1 0x0
0xa72 REVERT
---
0xa6a: V566 = RETURNDATASIZE
0xa6b: V567 = 0x0
0xa6e: RETURNDATACOPY 0x0 0x0 V566
0xa6f: V568 = RETURNDATASIZE
0xa70: V569 = 0x0
0xa72: REVERT 0x0 V568
---
Entry stack: [V11, 0x2b5, V563]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2b5, V563]

================================

Block 0xa73
[0xa73:0xa75]
---
Predecessors: [0x9f5]
Successors: [0x2b5]
---
0xa73 JUMPDEST
0xa74 POP
0xa75 JUMP
---
0xa73: JUMPDEST 
0xa75: JUMP 0x2b5
---
Entry stack: [V11, 0x2b5, V563]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xa76
[0xa76:0xacc]
---
Predecessors: [0x2c3]
Successors: [0xacd, 0xad1]
---
0xa76 JUMPDEST
0xa77 PUSH1 0x0
0xa79 DUP1
0xa7a SWAP1
0xa7b SLOAD
0xa7c SWAP1
0xa7d PUSH2 0x100
0xa80 EXP
0xa81 SWAP1
0xa82 DIV
0xa83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa98 AND
0xa99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaae AND
0xaaf CALLER
0xab0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac5 AND
0xac6 EQ
0xac7 ISZERO
0xac8 ISZERO
0xac9 PUSH2 0xad1
0xacc JUMPI
---
0xa76: JUMPDEST 
0xa77: V570 = 0x0
0xa7b: V571 = S[0x0]
0xa7d: V572 = 0x100
0xa80: V573 = EXP 0x100 0x0
0xa82: V574 = DIV V571 0x1
0xa83: V575 = 0xffffffffffffffffffffffffffffffffffffffff
0xa98: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0xa99: V577 = 0xffffffffffffffffffffffffffffffffffffffff
0xaae: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V576
0xaaf: V579 = CALLER
0xab0: V580 = 0xffffffffffffffffffffffffffffffffffffffff
0xac5: V581 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0xac6: V582 = EQ V581 V578
0xac7: V583 = ISZERO V582
0xac8: V584 = ISZERO V583
0xac9: V585 = 0xad1
0xacc: JUMPI 0xad1 V584
---
Entry stack: [V11, 0x321, V165, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x321, V165, V171]

================================

Block 0xacd
[0xacd:0xad0]
---
Predecessors: [0xa76]
Successors: []
---
0xacd PUSH1 0x0
0xacf DUP1
0xad0 REVERT
---
0xacd: V586 = 0x0
0xad0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x321, V165, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x321, V165, V171]

================================

Block 0xad1
[0xad1:0xaf2]
---
Predecessors: [0xa76]
Successors: [0xaf3, 0xaf7]
---
0xad1 JUMPDEST
0xad2 PUSH1 0x0
0xad4 DUP3
0xad5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaea AND
0xaeb EQ
0xaec ISZERO
0xaed ISZERO
0xaee ISZERO
0xaef PUSH2 0xaf7
0xaf2 JUMPI
---
0xad1: JUMPDEST 
0xad2: V587 = 0x0
0xad5: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0xaea: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0xaeb: V590 = EQ V589 0x0
0xaec: V591 = ISZERO V590
0xaed: V592 = ISZERO V591
0xaee: V593 = ISZERO V592
0xaef: V594 = 0xaf7
0xaf2: JUMPI 0xaf7 V593
---
Entry stack: [V11, 0x321, V165, V171]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x321, V165, V171]

================================

Block 0xaf3
[0xaf3:0xaf6]
---
Predecessors: [0xad1]
Successors: []
---
0xaf3 PUSH1 0x0
0xaf5 DUP1
0xaf6 REVERT
---
0xaf3: V595 = 0x0
0xaf6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x321, V165, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x321, V165, V171]

================================

Block 0xaf7
[0xaf7:0xb8e]
---
Predecessors: [0xad1]
Successors: [0xb8f, 0xb93]
---
0xaf7 JUMPDEST
0xaf8 DUP2
0xaf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0e AND
0xb0f ADDRESS
0xb10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb25 AND
0xb26 BALANCE
0xb27 DUP3
0xb28 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb46 SWAP1
0xb47 DIV
0xb48 SWAP1
0xb49 PUSH1 0x40
0xb4b MLOAD
0xb4c DUP3
0xb4d PUSH4 0xffffffff
0xb52 AND
0xb53 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb71 MUL
0xb72 DUP2
0xb73 MSTORE
0xb74 PUSH1 0x4
0xb76 ADD
0xb77 PUSH1 0x0
0xb79 PUSH1 0x40
0xb7b MLOAD
0xb7c DUP1
0xb7d DUP4
0xb7e SUB
0xb7f DUP2
0xb80 DUP6
0xb81 DUP9
0xb82 GAS
0xb83 CALL
0xb84 SWAP4
0xb85 POP
0xb86 POP
0xb87 POP
0xb88 POP
0xb89 ISZERO
0xb8a ISZERO
0xb8b PUSH2 0xb93
0xb8e JUMPI
---
0xaf7: JUMPDEST 
0xaf9: V596 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0e: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0xb0f: V598 = ADDRESS
0xb10: V599 = 0xffffffffffffffffffffffffffffffffffffffff
0xb25: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff V598
0xb26: V601 = BALANCE V600
0xb28: V602 = 0x100000000000000000000000000000000000000000000000000000000
0xb47: V603 = DIV V171 0x100000000000000000000000000000000000000000000000000000000
0xb49: V604 = 0x40
0xb4b: V605 = M[0x40]
0xb4d: V606 = 0xffffffff
0xb52: V607 = AND 0xffffffff V603
0xb53: V608 = 0x100000000000000000000000000000000000000000000000000000000
0xb71: V609 = MUL 0x100000000000000000000000000000000000000000000000000000000 V607
0xb73: M[V605] = V609
0xb74: V610 = 0x4
0xb76: V611 = ADD 0x4 V605
0xb77: V612 = 0x0
0xb79: V613 = 0x40
0xb7b: V614 = M[0x40]
0xb7e: V615 = SUB V611 V614
0xb82: V616 = GAS
0xb83: V617 = CALL V616 V597 V601 V614 V615 V614 0x0
0xb89: V618 = ISZERO V617
0xb8a: V619 = ISZERO V618
0xb8b: V620 = 0xb93
0xb8e: JUMPI 0xb93 V619
---
Entry stack: [V11, 0x321, V165, V171]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x321, V165, V171]

================================

Block 0xb8f
[0xb8f:0xb92]
---
Predecessors: [0xaf7]
Successors: []
---
0xb8f PUSH1 0x0
0xb91 DUP1
0xb92 REVERT
---
0xb8f: V621 = 0x0
0xb92: REVERT 0x0 0x0
---
Entry stack: [V11, 0x321, V165, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x321, V165, V171]

================================

Block 0xb93
[0xb93:0xb96]
---
Predecessors: [0xaf7]
Successors: [0x321]
---
0xb93 JUMPDEST
0xb94 POP
0xb95 POP
0xb96 JUMP
---
0xb93: JUMPDEST 
0xb96: JUMP 0x321
---
Entry stack: [V11, 0x321, V165, V171]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0xb97
[0xb97:0xbbc]
---
Predecessors: [0x32f]
Successors: [0x338]
---
0xb97 JUMPDEST
0xb98 PUSH1 0x2
0xb9a PUSH1 0x0
0xb9c SWAP1
0xb9d SLOAD
0xb9e SWAP1
0xb9f PUSH2 0x100
0xba2 EXP
0xba3 SWAP1
0xba4 DIV
0xba5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbba AND
0xbbb DUP2
0xbbc JUMP
---
0xb97: JUMPDEST 
0xb98: V622 = 0x2
0xb9a: V623 = 0x0
0xb9d: V624 = S[0x2]
0xb9f: V625 = 0x100
0xba2: V626 = EXP 0x100 0x0
0xba4: V627 = DIV V624 0x1
0xba5: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0xbba: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0xbbc: JUMP 0x338
---
Entry stack: [V11, 0x338]
Stack pops: 1
Stack additions: [S0, V629]
Exit stack: [V11, 0x338, V629]

================================

Block 0xbbd
[0xbbd:0xbef]
---
Predecessors: []
Successors: []
---
0xbbd STOP
0xbbe LOG1
0xbbf PUSH6 0x627a7a723058
0xbc6 SHA3
0xbc7 MISSING 0x1f
0xbc8 SLOAD
0xbc9 EQ
0xbca MISSING 0xc6
0xbcb MISSING 0xed
0xbcc DUP15
0xbcd SWAP3
0xbce LOG3
0xbcf CALLCODE
0xbd0 MISSING 0xe3
0xbd1 STOP
0xbd2 PUSH29 0xf024c2d8a073b6b522615e4bb644c17e9105392f0029
---
0xbbd: STOP 
0xbbe: LOG S0 S1 S2
0xbbf: V630 = 0x627a7a723058
0xbc6: V631 = SHA3 0x627a7a723058 S3
0xbc7: MISSING 0x1f
0xbc8: V632 = S[S0]
0xbc9: V633 = EQ V632 S1
0xbca: MISSING 0xc6
0xbcb: MISSING 0xed
0xbce: LOG S2 S0 S1 S14 S3
0xbcf: V634 = CALLCODE S4 S5 S6 S7 S8 S9 S10
0xbd0: MISSING 0xe3
0xbd1: STOP 
0xbd2: V635 = 0xf024c2d8a073b6b522615e4bb644c17e9105392f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V631, V633, V634, S11, S12, S13, S14, 0xf024c2d8a073b6b522615e4bb644c17e9105392f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x471efe66
Entry block: 0xa6
Exit block: 0x107
Body: 0xa6, 0xae, 0xb2, 0x107, 0x37a, 0x3d1, 0x3d5

Function 1:
Public function signature: 0x6ad1fe02
Entry block: 0x109
Exit block: 0x11e
Body: 0x109, 0x111, 0x115, 0x11e, 0x45b

Function 2:
Public function signature: 0x89476069
Entry block: 0x160
Exit block: 0x1a1
Body: 0x160, 0x168, 0x16c, 0x1a1, 0x481, 0x4d8, 0x4dc, 0x5d3, 0x5d7, 0x5e2, 0x5eb, 0x5fd, 0x601, 0x693, 0x697, 0x6a2, 0x6ab, 0x6bd, 0x6c1, 0x6d9, 0x6dd

Function 3:
Public function signature: 0xa6f2ae3a
Entry block: 0x1a3
Exit block: 0x1b8
Body: 0x1a3, 0x1ab, 0x1af, 0x1b8, 0x6e0, 0x724, 0x728, 0x794, 0x798

Function 4:
Public function signature: 0xb622ab4a
Entry block: 0x1ba
Exit block: 0x204
Body: 0x1ba, 0x1c2, 0x1c6, 0x204, 0x79a, 0x7de, 0x7e2, 0x89c, 0x8a0

Function 5:
Public function signature: 0xb8f3b75d
Entry block: 0x206
Exit block: 0x247
Body: 0x206, 0x20e, 0x212, 0x247, 0x8a3, 0x8fa, 0x8fe, 0x920, 0x924, 0x96e, 0x972

Function 6:
Public function signature: 0xca4b208b
Entry block: 0x249
Exit block: 0x25e
Body: 0x249, 0x251, 0x255, 0x25e, 0x975

Function 7:
Public function signature: 0xe086e5ec
Entry block: 0x2a0
Exit block: 0x2b5
Body: 0x2a0, 0x2a8, 0x2ac, 0x2b5, 0x99a, 0x9f1, 0x9f5, 0xa6a, 0xa73

Function 8:
Public function signature: 0xfae4a213
Entry block: 0x2b7
Exit block: 0x321
Body: 0x2b7, 0x2bf, 0x2c3, 0x321, 0xa76, 0xacd, 0xad1, 0xaf3, 0xaf7, 0xb8f, 0xb93

Function 9:
Public function signature: 0xfc0c546a
Entry block: 0x323
Exit block: 0x338
Body: 0x323, 0x32b, 0x32f, 0x338, 0xb97

Function 10:
Public fallback function
Entry block: 0xa4
Exit block: 0xa4
Body: 0xa4

