Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x86]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2cf2c0af
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x86
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2cf2c0af
0x20: V14 = EQ V12 0x2cf2c0af
0x21: V15 = 0x86
0x24: JUMPI 0x86 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x9e]
---
0x25 DUP1
0x26 PUSH4 0x2e1a7d4d
0x2b EQ
0x2c PUSH2 0x9e
0x2f JUMPI
---
0x26: V16 = 0x2e1a7d4d
0x2b: V17 = EQ 0x2e1a7d4d V12
0x2c: V18 = 0x9e
0x2f: JUMPI 0x9e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xb6]
---
0x30 DUP1
0x31 PUSH4 0x43d726d6
0x36 EQ
0x37 PUSH2 0xb6
0x3a JUMPI
---
0x31: V19 = 0x43d726d6
0x36: V20 = EQ 0x43d726d6 V12
0x37: V21 = 0xb6
0x3a: JUMPI 0xb6 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xcb]
---
0x3b DUP1
0x3c PUSH4 0x5c73dcea
0x41 EQ
0x42 PUSH2 0xcb
0x45 JUMPI
---
0x3c: V22 = 0x5c73dcea
0x41: V23 = EQ 0x5c73dcea V12
0x42: V24 = 0xcb
0x45: JUMPI 0xcb V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x12c]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x12c
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x12c
0x50: JUMPI 0x12c V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x15d]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x15d
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x15d
0x5b: JUMPI 0x15d V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x18c]
---
0x5c DUP1
0x5d PUSH4 0xd0e30db0
0x62 EQ
0x63 PUSH2 0x18c
0x66 JUMPI
---
0x5d: V31 = 0xd0e30db0
0x62: V32 = EQ 0xd0e30db0 V12
0x63: V33 = 0x18c
0x66: JUMPI 0x18c V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x196]
---
0x67 DUP1
0x68 PUSH4 0xf1b83630
0x6d EQ
0x6e PUSH2 0x196
0x71 JUMPI
---
0x68: V34 = 0xf1b83630
0x6d: V35 = EQ 0xf1b83630 V12
0x6e: V36 = 0x196
0x71: JUMPI 0x196 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1ae]
---
0x72 DUP1
0x73 PUSH4 0xfb6e155f
0x78 EQ
0x79 PUSH2 0x1ae
0x7c JUMPI
---
0x73: V37 = 0xfb6e155f
0x78: V38 = EQ 0xfb6e155f V12
0x79: V39 = 0x1ae
0x7c: JUMPI 0x1ae V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x0, 0x72]
Successors: [0x81]
---
0x7d JUMPDEST
0x7e PUSH2 0x84
---
0x7d: JUMPDEST 
0x7e: V40 = 0x84
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0x81
[0x81:0x81]
---
Predecessors: [0x7d, 0x18c]
Successors: [0x82]
---
0x81 JUMPDEST
---
0x81: JUMPDEST 
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x81]
Successors: [0x84]
---
0x82 JUMPDEST
0x83 JUMP
---
0x82: JUMPDEST 
0x83: JUMP 0x84
---
Entry stack: [V12, 0x84]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x84
[0x84:0x85]
---
Predecessors: [0x82, 0x27d, 0x2d1, 0x4fd]
Successors: []
---
0x84 JUMPDEST
0x85 STOP
---
0x84: JUMPDEST 
0x85: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x86
[0x86:0x8c]
---
Predecessors: [0xb]
Successors: [0x8d, 0x91]
---
0x86 JUMPDEST
0x87 CALLVALUE
0x88 ISZERO
0x89 PUSH2 0x91
0x8c JUMPI
---
0x86: JUMPDEST 
0x87: V41 = CALLVALUE
0x88: V42 = ISZERO V41
0x89: V43 = 0x91
0x8c: JUMPI 0x91 V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d
[0x8d:0x90]
---
Predecessors: [0x86]
Successors: []
---
0x8d PUSH1 0x0
0x8f DUP1
0x90 REVERT
---
0x8d: V44 = 0x0
0x90: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x91
[0x91:0x9b]
---
Predecessors: [0x86]
Successors: [0x209]
---
0x91 JUMPDEST
0x92 PUSH2 0x84
0x95 PUSH1 0x4
0x97 CALLDATALOAD
0x98 PUSH2 0x209
0x9b JUMP
---
0x91: JUMPDEST 
0x92: V45 = 0x84
0x95: V46 = 0x4
0x97: V47 = CALLDATALOAD 0x4
0x98: V48 = 0x209
0x9b: JUMP 0x209
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V47]
Exit stack: [V12, 0x84, V47]

================================

Block 0x9c
[0x9c:0x9d]
---
Predecessors: []
Successors: []
---
0x9c JUMPDEST
0x9d STOP
---
0x9c: JUMPDEST 
0x9d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9e
[0x9e:0xa4]
---
Predecessors: [0x25]
Successors: [0xa5, 0xa9]
---
0x9e JUMPDEST
0x9f CALLVALUE
0xa0 ISZERO
0xa1 PUSH2 0xa9
0xa4 JUMPI
---
0x9e: JUMPDEST 
0x9f: V49 = CALLVALUE
0xa0: V50 = ISZERO V49
0xa1: V51 = 0xa9
0xa4: JUMPI 0xa9 V50
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa5
[0xa5:0xa8]
---
Predecessors: [0x9e]
Successors: []
---
0xa5 PUSH1 0x0
0xa7 DUP1
0xa8 REVERT
---
0xa5: V52 = 0x0
0xa8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0x281]
---
0xa9 JUMPDEST
0xaa PUSH2 0x84
0xad PUSH1 0x4
0xaf CALLDATALOAD
0xb0 PUSH2 0x281
0xb3 JUMP
---
0xa9: JUMPDEST 
0xaa: V53 = 0x84
0xad: V54 = 0x4
0xaf: V55 = CALLDATALOAD 0x4
0xb0: V56 = 0x281
0xb3: JUMP 0x281
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V55]
Exit stack: [V12, 0x84, V55]

================================

Block 0xb4
[0xb4:0xb5]
---
Predecessors: []
Successors: []
---
0xb4 JUMPDEST
0xb5 STOP
---
0xb4: JUMPDEST 
0xb5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb6
[0xb6:0xbc]
---
Predecessors: [0x30]
Successors: [0xbd, 0xc1]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 ISZERO
0xb9 PUSH2 0xc1
0xbc JUMPI
---
0xb6: JUMPDEST 
0xb7: V57 = CALLVALUE
0xb8: V58 = ISZERO V57
0xb9: V59 = 0xc1
0xbc: JUMPI 0xc1 V58
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0xb6]
Successors: []
---
0xbd PUSH1 0x0
0xbf DUP1
0xc0 REVERT
---
0xbd: V60 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc1
[0xc1:0xc8]
---
Predecessors: [0xb6]
Successors: [0x2d4]
---
0xc1 JUMPDEST
0xc2 PUSH2 0x84
0xc5 PUSH2 0x2d4
0xc8 JUMP
---
0xc1: JUMPDEST 
0xc2: V61 = 0x84
0xc5: V62 = 0x2d4
0xc8: JUMP 0x2d4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0xc9
[0xc9:0xca]
---
Predecessors: []
Successors: []
---
0xc9 JUMPDEST
0xca STOP
---
0xc9: JUMPDEST 
0xca: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcb
[0xcb:0xd1]
---
Predecessors: [0x3b]
Successors: [0xd2, 0xd6]
---
0xcb JUMPDEST
0xcc CALLVALUE
0xcd ISZERO
0xce PUSH2 0xd6
0xd1 JUMPI
---
0xcb: JUMPDEST 
0xcc: V63 = CALLVALUE
0xcd: V64 = ISZERO V63
0xce: V65 = 0xd6
0xd1: JUMPI 0xd6 V64
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd2
[0xd2:0xd5]
---
Predecessors: [0xcb]
Successors: []
---
0xd2 PUSH1 0x0
0xd4 DUP1
0xd5 REVERT
---
0xd2: V66 = 0x0
0xd5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd6
[0xd6:0x117]
---
Predecessors: [0xcb]
Successors: [0x300]
---
0xd6 JUMPDEST
0xd7 PUSH2 0x118
0xda PUSH1 0x1
0xdc PUSH1 0xa0
0xde PUSH1 0x2
0xe0 EXP
0xe1 SUB
0xe2 PUSH1 0x4
0xe4 CALLDATALOAD
0xe5 DUP2
0xe6 AND
0xe7 SWAP1
0xe8 PUSH1 0x24
0xea CALLDATALOAD
0xeb SWAP1
0xec PUSH1 0x44
0xee CALLDATALOAD
0xef DUP2
0xf0 AND
0xf1 SWAP1
0xf2 PUSH1 0x64
0xf4 CALLDATALOAD
0xf5 SWAP1
0xf6 PUSH1 0x84
0xf8 CALLDATALOAD
0xf9 SWAP1
0xfa PUSH1 0xa4
0xfc CALLDATALOAD
0xfd SWAP1
0xfe PUSH1 0xc4
0x100 CALLDATALOAD
0x101 AND
0x102 PUSH1 0xff
0x104 PUSH1 0xe4
0x106 CALLDATALOAD
0x107 AND
0x108 PUSH2 0x104
0x10b CALLDATALOAD
0x10c PUSH2 0x124
0x10f CALLDATALOAD
0x110 PUSH2 0x144
0x113 CALLDATALOAD
0x114 PUSH2 0x300
0x117 JUMP
---
0xd6: JUMPDEST 
0xd7: V67 = 0x118
0xda: V68 = 0x1
0xdc: V69 = 0xa0
0xde: V70 = 0x2
0xe0: V71 = EXP 0x2 0xa0
0xe1: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V73 = 0x4
0xe4: V74 = CALLDATALOAD 0x4
0xe6: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xe8: V76 = 0x24
0xea: V77 = CALLDATALOAD 0x24
0xec: V78 = 0x44
0xee: V79 = CALLDATALOAD 0x44
0xf0: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0xf2: V81 = 0x64
0xf4: V82 = CALLDATALOAD 0x64
0xf6: V83 = 0x84
0xf8: V84 = CALLDATALOAD 0x84
0xfa: V85 = 0xa4
0xfc: V86 = CALLDATALOAD 0xa4
0xfe: V87 = 0xc4
0x100: V88 = CALLDATALOAD 0xc4
0x101: V89 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0x102: V90 = 0xff
0x104: V91 = 0xe4
0x106: V92 = CALLDATALOAD 0xe4
0x107: V93 = AND V92 0xff
0x108: V94 = 0x104
0x10b: V95 = CALLDATALOAD 0x104
0x10c: V96 = 0x124
0x10f: V97 = CALLDATALOAD 0x124
0x110: V98 = 0x144
0x113: V99 = CALLDATALOAD 0x144
0x114: V100 = 0x300
0x117: JUMP 0x300
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99]
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99]

================================

Block 0x118
[0x118:0x12b]
---
Predecessors: [0x3d8]
Successors: []
---
0x118 JUMPDEST
0x119 PUSH1 0x40
0x11b MLOAD
0x11c SWAP1
0x11d ISZERO
0x11e ISZERO
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 ADD
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 SWAP2
0x129 SUB
0x12a SWAP1
0x12b RETURN
---
0x118: JUMPDEST 
0x119: V101 = 0x40
0x11b: V102 = M[0x40]
0x11d: V103 = ISZERO V388
0x11e: V104 = ISZERO V103
0x120: M[V102] = V104
0x121: V105 = 0x20
0x123: V106 = ADD 0x20 V102
0x124: V107 = 0x40
0x126: V108 = M[0x40]
0x129: V109 = SUB V106 V108
0x12b: RETURN V108 V109
---
Entry stack: [V12, V388]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x12c
[0x12c:0x132]
---
Predecessors: [0x46]
Successors: [0x133, 0x137]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e ISZERO
0x12f PUSH2 0x137
0x132 JUMPI
---
0x12c: JUMPDEST 
0x12d: V110 = CALLVALUE
0x12e: V111 = ISZERO V110
0x12f: V112 = 0x137
0x132: JUMPI 0x137 V111
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x133
[0x133:0x136]
---
Predecessors: [0x12c]
Successors: []
---
0x133 PUSH1 0x0
0x135 DUP1
0x136 REVERT
---
0x133: V113 = 0x0
0x136: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x137
[0x137:0x14a]
---
Predecessors: [0x12c]
Successors: [0x3e8]
---
0x137 JUMPDEST
0x138 PUSH2 0x14b
0x13b PUSH1 0x1
0x13d PUSH1 0xa0
0x13f PUSH1 0x2
0x141 EXP
0x142 SUB
0x143 PUSH1 0x4
0x145 CALLDATALOAD
0x146 AND
0x147 PUSH2 0x3e8
0x14a JUMP
---
0x137: JUMPDEST 
0x138: V114 = 0x14b
0x13b: V115 = 0x1
0x13d: V116 = 0xa0
0x13f: V117 = 0x2
0x141: V118 = EXP 0x2 0xa0
0x142: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V120 = 0x4
0x145: V121 = CALLDATALOAD 0x4
0x146: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x147: V123 = 0x3e8
0x14a: JUMP 0x3e8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b, V122]
Exit stack: [V12, 0x14b, V122]

================================

Block 0x14b
[0x14b:0x15c]
---
Predecessors: [0x469, 0x5d0]
Successors: []
---
0x14b JUMPDEST
0x14c PUSH1 0x40
0x14e MLOAD
0x14f SWAP1
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x20
0x154 ADD
0x155 PUSH1 0x40
0x157 MLOAD
0x158 DUP1
0x159 SWAP2
0x15a SUB
0x15b SWAP1
0x15c RETURN
---
0x14b: JUMPDEST 
0x14c: V124 = 0x40
0x14e: V125 = M[0x40]
0x151: M[V125] = S0
0x152: V126 = 0x20
0x154: V127 = ADD 0x20 V125
0x155: V128 = 0x40
0x157: V129 = M[0x40]
0x15a: V130 = SUB V127 V129
0x15c: RETURN V129 V130
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x15d
[0x15d:0x163]
---
Predecessors: [0x51]
Successors: [0x164, 0x168]
---
0x15d JUMPDEST
0x15e CALLVALUE
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x15d: JUMPDEST 
0x15e: V131 = CALLVALUE
0x15f: V132 = ISZERO V131
0x160: V133 = 0x168
0x163: JUMPI 0x168 V132
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x15d]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V134 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x168
[0x168:0x16f]
---
Predecessors: [0x15d]
Successors: [0x46f]
---
0x168 JUMPDEST
0x169 PUSH2 0x170
0x16c PUSH2 0x46f
0x16f JUMP
---
0x168: JUMPDEST 
0x169: V135 = 0x170
0x16c: V136 = 0x46f
0x16f: JUMP 0x46f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x170]
Exit stack: [V12, 0x170]

================================

Block 0x170
[0x170:0x18b]
---
Predecessors: [0x46f]
Successors: []
---
0x170 JUMPDEST
0x171 PUSH1 0x40
0x173 MLOAD
0x174 PUSH1 0x1
0x176 PUSH1 0xa0
0x178 PUSH1 0x2
0x17a EXP
0x17b SUB
0x17c SWAP1
0x17d SWAP2
0x17e AND
0x17f DUP2
0x180 MSTORE
0x181 PUSH1 0x20
0x183 ADD
0x184 PUSH1 0x40
0x186 MLOAD
0x187 DUP1
0x188 SWAP2
0x189 SUB
0x18a SWAP1
0x18b RETURN
---
0x170: JUMPDEST 
0x171: V137 = 0x40
0x173: V138 = M[0x40]
0x174: V139 = 0x1
0x176: V140 = 0xa0
0x178: V141 = 0x2
0x17a: V142 = EXP 0x2 0xa0
0x17b: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17e: V144 = AND V453 0xffffffffffffffffffffffffffffffffffffffff
0x180: M[V138] = V144
0x181: V145 = 0x20
0x183: V146 = ADD 0x20 V138
0x184: V147 = 0x40
0x186: V148 = M[0x40]
0x189: V149 = SUB V146 V148
0x18b: RETURN V148 V149
---
Entry stack: [V12, 0x170, V453]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x170]

================================

Block 0x18c
[0x18c:0x193]
---
Predecessors: [0x5c]
Successors: [0x81]
---
0x18c JUMPDEST
0x18d PUSH2 0x84
0x190 PUSH2 0x81
0x193 JUMP
---
0x18c: JUMPDEST 
0x18d: V150 = 0x84
0x190: V151 = 0x81
0x193: JUMP 0x81
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V12, 0x84]

================================

Block 0x194
[0x194:0x195]
---
Predecessors: []
Successors: []
---
0x194 JUMPDEST
0x195 STOP
---
0x194: JUMPDEST 
0x195: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x196
[0x196:0x19c]
---
Predecessors: [0x67]
Successors: [0x19d, 0x1a1]
---
0x196 JUMPDEST
0x197 CALLVALUE
0x198 ISZERO
0x199 PUSH2 0x1a1
0x19c JUMPI
---
0x196: JUMPDEST 
0x197: V152 = CALLVALUE
0x198: V153 = ISZERO V152
0x199: V154 = 0x1a1
0x19c: JUMPI 0x1a1 V153
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19d
[0x19d:0x1a0]
---
Predecessors: [0x196]
Successors: []
---
0x19d PUSH1 0x0
0x19f DUP1
0x1a0 REVERT
---
0x19d: V155 = 0x0
0x1a0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a1
[0x1a1:0x1ab]
---
Predecessors: [0x196]
Successors: [0x481]
---
0x1a1 JUMPDEST
0x1a2 PUSH2 0x84
0x1a5 PUSH1 0x4
0x1a7 CALLDATALOAD
0x1a8 PUSH2 0x481
0x1ab JUMP
---
0x1a1: JUMPDEST 
0x1a2: V156 = 0x84
0x1a5: V157 = 0x4
0x1a7: V158 = CALLDATALOAD 0x4
0x1a8: V159 = 0x481
0x1ab: JUMP 0x481
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x84, V158]
Exit stack: [V12, 0x84, V158]

================================

Block 0x1ac
[0x1ac:0x1ad]
---
Predecessors: []
Successors: []
---
0x1ac JUMPDEST
0x1ad STOP
---
0x1ac: JUMPDEST 
0x1ad: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ae
[0x1ae:0x1b4]
---
Predecessors: [0x72]
Successors: [0x1b5, 0x1b9]
---
0x1ae JUMPDEST
0x1af CALLVALUE
0x1b0 ISZERO
0x1b1 PUSH2 0x1b9
0x1b4 JUMPI
---
0x1ae: JUMPDEST 
0x1af: V160 = CALLVALUE
0x1b0: V161 = ISZERO V160
0x1b1: V162 = 0x1b9
0x1b4: JUMPI 0x1b9 V161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b5
[0x1b5:0x1b8]
---
Predecessors: [0x1ae]
Successors: []
---
0x1b5 PUSH1 0x0
0x1b7 DUP1
0x1b8 REVERT
---
0x1b5: V163 = 0x0
0x1b8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b9
[0x1b9:0x1f6]
---
Predecessors: [0x1ae]
Successors: [0x501]
---
0x1b9 JUMPDEST
0x1ba PUSH2 0x14b
0x1bd PUSH1 0x1
0x1bf PUSH1 0xa0
0x1c1 PUSH1 0x2
0x1c3 EXP
0x1c4 SUB
0x1c5 PUSH1 0x4
0x1c7 CALLDATALOAD
0x1c8 DUP2
0x1c9 AND
0x1ca SWAP1
0x1cb PUSH1 0x24
0x1cd CALLDATALOAD
0x1ce SWAP1
0x1cf PUSH1 0x44
0x1d1 CALLDATALOAD
0x1d2 DUP2
0x1d3 AND
0x1d4 SWAP1
0x1d5 PUSH1 0x64
0x1d7 CALLDATALOAD
0x1d8 SWAP1
0x1d9 PUSH1 0x84
0x1db CALLDATALOAD
0x1dc SWAP1
0x1dd PUSH1 0xa4
0x1df CALLDATALOAD
0x1e0 SWAP1
0x1e1 PUSH1 0xc4
0x1e3 CALLDATALOAD
0x1e4 AND
0x1e5 PUSH1 0xff
0x1e7 PUSH1 0xe4
0x1e9 CALLDATALOAD
0x1ea AND
0x1eb PUSH2 0x104
0x1ee CALLDATALOAD
0x1ef PUSH2 0x124
0x1f2 CALLDATALOAD
0x1f3 PUSH2 0x501
0x1f6 JUMP
---
0x1b9: JUMPDEST 
0x1ba: V164 = 0x14b
0x1bd: V165 = 0x1
0x1bf: V166 = 0xa0
0x1c1: V167 = 0x2
0x1c3: V168 = EXP 0x2 0xa0
0x1c4: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c5: V170 = 0x4
0x1c7: V171 = CALLDATALOAD 0x4
0x1c9: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x1cb: V173 = 0x24
0x1cd: V174 = CALLDATALOAD 0x24
0x1cf: V175 = 0x44
0x1d1: V176 = CALLDATALOAD 0x44
0x1d3: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x1d5: V178 = 0x64
0x1d7: V179 = CALLDATALOAD 0x64
0x1d9: V180 = 0x84
0x1db: V181 = CALLDATALOAD 0x84
0x1dd: V182 = 0xa4
0x1df: V183 = CALLDATALOAD 0xa4
0x1e1: V184 = 0xc4
0x1e3: V185 = CALLDATALOAD 0xc4
0x1e4: V186 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: V187 = 0xff
0x1e7: V188 = 0xe4
0x1e9: V189 = CALLDATALOAD 0xe4
0x1ea: V190 = AND V189 0xff
0x1eb: V191 = 0x104
0x1ee: V192 = CALLDATALOAD 0x104
0x1ef: V193 = 0x124
0x1f2: V194 = CALLDATALOAD 0x124
0x1f3: V195 = 0x501
0x1f6: JUMP 0x501
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194]
Exit stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194]

================================

Block 0x1f7
[0x1f7:0x208]
---
Predecessors: []
Successors: []
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb SWAP1
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x20
0x200 ADD
0x201 PUSH1 0x40
0x203 MLOAD
0x204 DUP1
0x205 SWAP2
0x206 SUB
0x207 SWAP1
0x208 RETURN
---
0x1f7: JUMPDEST 
0x1f8: V196 = 0x40
0x1fa: V197 = M[0x40]
0x1fd: M[V197] = S0
0x1fe: V198 = 0x20
0x200: V199 = ADD 0x20 V197
0x201: V200 = 0x40
0x203: V201 = M[0x40]
0x206: V202 = SUB V199 V201
0x208: RETURN V201 V202
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x209
[0x209:0x220]
---
Predecessors: [0x91]
Successors: [0x221, 0x225]
---
0x209 JUMPDEST
0x20a PUSH1 0x0
0x20c DUP1
0x20d SLOAD
0x20e CALLER
0x20f PUSH1 0x1
0x211 PUSH1 0xa0
0x213 PUSH1 0x2
0x215 EXP
0x216 SUB
0x217 SWAP1
0x218 DUP2
0x219 AND
0x21a SWAP2
0x21b AND
0x21c EQ
0x21d PUSH2 0x225
0x220 JUMPI
---
0x209: JUMPDEST 
0x20a: V203 = 0x0
0x20d: V204 = S[0x0]
0x20e: V205 = CALLER
0x20f: V206 = 0x1
0x211: V207 = 0xa0
0x213: V208 = 0x2
0x215: V209 = EXP 0x2 0xa0
0x216: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x219: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x21b: V212 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x21c: V213 = EQ V212 V211
0x21d: V214 = 0x225
0x220: JUMPI 0x225 V213
---
Entry stack: [V12, 0x84, V47]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x84, V47, 0x0]

================================

Block 0x221
[0x221:0x224]
---
Predecessors: [0x209]
Successors: []
---
0x221 PUSH1 0x0
0x223 DUP1
0x224 REVERT
---
0x221: V215 = 0x0
0x224: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V47, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V47, 0x0]

================================

Block 0x225
[0x225:0x261]
---
Predecessors: [0x209]
Successors: [0x262, 0x266]
---
0x225 JUMPDEST
0x226 POP
0x227 PUSH1 0x1
0x229 SLOAD
0x22a PUSH1 0x1
0x22c PUSH1 0xa0
0x22e PUSH1 0x2
0x230 EXP
0x231 SUB
0x232 AND
0x233 DUP1
0x234 PUSH4 0xd0e30db0
0x239 DUP4
0x23a PUSH1 0x40
0x23c MLOAD
0x23d DUP3
0x23e PUSH4 0xffffffff
0x243 AND
0x244 PUSH1 0xe0
0x246 PUSH1 0x2
0x248 EXP
0x249 MUL
0x24a DUP2
0x24b MSTORE
0x24c PUSH1 0x4
0x24e ADD
0x24f PUSH1 0x0
0x251 PUSH1 0x40
0x253 MLOAD
0x254 DUP1
0x255 DUP4
0x256 SUB
0x257 DUP2
0x258 DUP6
0x259 DUP9
0x25a DUP1
0x25b EXTCODESIZE
0x25c ISZERO
0x25d ISZERO
0x25e PUSH2 0x266
0x261 JUMPI
---
0x225: JUMPDEST 
0x227: V216 = 0x1
0x229: V217 = S[0x1]
0x22a: V218 = 0x1
0x22c: V219 = 0xa0
0x22e: V220 = 0x2
0x230: V221 = EXP 0x2 0xa0
0x231: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x232: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x234: V224 = 0xd0e30db0
0x23a: V225 = 0x40
0x23c: V226 = M[0x40]
0x23e: V227 = 0xffffffff
0x243: V228 = AND 0xffffffff 0xd0e30db0
0x244: V229 = 0xe0
0x246: V230 = 0x2
0x248: V231 = EXP 0x2 0xe0
0x249: V232 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x24b: M[V226] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x24c: V233 = 0x4
0x24e: V234 = ADD 0x4 V226
0x24f: V235 = 0x0
0x251: V236 = 0x40
0x253: V237 = M[0x40]
0x256: V238 = SUB V234 V237
0x25b: V239 = EXTCODESIZE V223
0x25c: V240 = ISZERO V239
0x25d: V241 = ISZERO V240
0x25e: V242 = 0x266
0x261: JUMPI 0x266 V241
---
Entry stack: [V12, 0x84, V47, 0x0]
Stack pops: 2
Stack additions: [S1, V223, V223, 0xd0e30db0, S1, V234, 0x0, V237, V238, V237, S1, V223]
Exit stack: [V12, 0x84, V47, V223, V223, 0xd0e30db0, V47, V234, 0x0, V237, V238, V237, V47, V223]

================================

Block 0x262
[0x262:0x265]
---
Predecessors: [0x225]
Successors: []
---
0x262 PUSH1 0x0
0x264 DUP1
0x265 REVERT
---
0x262: V243 = 0x0
0x265: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V47, V223, V223, 0xd0e30db0, V47, V234, 0x0, V237, V238, V237, V47, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V47, V223, V223, 0xd0e30db0, V47, V234, 0x0, V237, V238, V237, V47, V223]

================================

Block 0x266
[0x266:0x272]
---
Predecessors: [0x225]
Successors: [0x273, 0x277]
---
0x266 JUMPDEST
0x267 PUSH2 0x25ee
0x26a GAS
0x26b SUB
0x26c CALL
0x26d ISZERO
0x26e ISZERO
0x26f PUSH2 0x277
0x272 JUMPI
---
0x266: JUMPDEST 
0x267: V244 = 0x25ee
0x26a: V245 = GAS
0x26b: V246 = SUB V245 0x25ee
0x26c: V247 = CALL V246 V223 V47 V237 V238 V237 0x0
0x26d: V248 = ISZERO V247
0x26e: V249 = ISZERO V248
0x26f: V250 = 0x277
0x272: JUMPI 0x277 V249
---
Entry stack: [V12, 0x84, V47, V223, V223, 0xd0e30db0, V47, V234, 0x0, V237, V238, V237, V47, V223]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x84, V47, V223, V223, 0xd0e30db0, V47, V234]

================================

Block 0x273
[0x273:0x276]
---
Predecessors: [0x266]
Successors: []
---
0x273 PUSH1 0x0
0x275 DUP1
0x276 REVERT
---
0x273: V251 = 0x0
0x276: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V47, V223, V223, 0xd0e30db0, V47, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V47, V223, V223, 0xd0e30db0, V47, V234]

================================

Block 0x277
[0x277:0x27b]
---
Predecessors: [0x266]
Successors: [0x27c]
---
0x277 JUMPDEST
0x278 POP
0x279 POP
0x27a POP
0x27b POP
---
0x277: JUMPDEST 
---
Entry stack: [V12, 0x84, V47, V223, V223, 0xd0e30db0, V47, V234]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x84, V47, V223]

================================

Block 0x27c
[0x27c:0x27c]
---
Predecessors: [0x277]
Successors: [0x27d]
---
0x27c JUMPDEST
---
0x27c: JUMPDEST 
---
Entry stack: [V12, 0x84, V47, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V47, V223]

================================

Block 0x27d
[0x27d:0x280]
---
Predecessors: [0x27c]
Successors: [0x84]
---
0x27d JUMPDEST
0x27e POP
0x27f POP
0x280 JUMP
---
0x27d: JUMPDEST 
0x280: JUMP 0x84
---
Entry stack: [V12, 0x84, V47, V223]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x281
[0x281:0x297]
---
Predecessors: [0xa9]
Successors: [0x298, 0x29c]
---
0x281 JUMPDEST
0x282 PUSH1 0x0
0x284 SLOAD
0x285 CALLER
0x286 PUSH1 0x1
0x288 PUSH1 0xa0
0x28a PUSH1 0x2
0x28c EXP
0x28d SUB
0x28e SWAP1
0x28f DUP2
0x290 AND
0x291 SWAP2
0x292 AND
0x293 EQ
0x294 PUSH2 0x29c
0x297 JUMPI
---
0x281: JUMPDEST 
0x282: V252 = 0x0
0x284: V253 = S[0x0]
0x285: V254 = CALLER
0x286: V255 = 0x1
0x288: V256 = 0xa0
0x28a: V257 = 0x2
0x28c: V258 = EXP 0x2 0xa0
0x28d: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x292: V261 = AND V253 0xffffffffffffffffffffffffffffffffffffffff
0x293: V262 = EQ V261 V260
0x294: V263 = 0x29c
0x297: JUMPI 0x29c V262
---
Entry stack: [V12, 0x84, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V55]

================================

Block 0x298
[0x298:0x29b]
---
Predecessors: [0x281]
Successors: []
---
0x298 PUSH1 0x0
0x29a DUP1
0x29b REVERT
---
0x298: V264 = 0x0
0x29b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V55]

================================

Block 0x29c
[0x29c:0x2ca]
---
Predecessors: [0x281]
Successors: [0x2cb, 0x2cf]
---
0x29c JUMPDEST
0x29d PUSH1 0x0
0x29f SLOAD
0x2a0 PUSH1 0x1
0x2a2 PUSH1 0xa0
0x2a4 PUSH1 0x2
0x2a6 EXP
0x2a7 SUB
0x2a8 AND
0x2a9 DUP2
0x2aa ISZERO
0x2ab PUSH2 0x8fc
0x2ae MUL
0x2af DUP3
0x2b0 PUSH1 0x40
0x2b2 MLOAD
0x2b3 PUSH1 0x0
0x2b5 PUSH1 0x40
0x2b7 MLOAD
0x2b8 DUP1
0x2b9 DUP4
0x2ba SUB
0x2bb DUP2
0x2bc DUP6
0x2bd DUP9
0x2be DUP9
0x2bf CALL
0x2c0 SWAP4
0x2c1 POP
0x2c2 POP
0x2c3 POP
0x2c4 POP
0x2c5 ISZERO
0x2c6 ISZERO
0x2c7 PUSH2 0x2cf
0x2ca JUMPI
---
0x29c: JUMPDEST 
0x29d: V265 = 0x0
0x29f: V266 = S[0x0]
0x2a0: V267 = 0x1
0x2a2: V268 = 0xa0
0x2a4: V269 = 0x2
0x2a6: V270 = EXP 0x2 0xa0
0x2a7: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a8: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x2aa: V273 = ISZERO V55
0x2ab: V274 = 0x8fc
0x2ae: V275 = MUL 0x8fc V273
0x2b0: V276 = 0x40
0x2b2: V277 = M[0x40]
0x2b3: V278 = 0x0
0x2b5: V279 = 0x40
0x2b7: V280 = M[0x40]
0x2ba: V281 = SUB V277 V280
0x2bf: V282 = CALL V275 V272 V55 V280 V281 V280 0x0
0x2c5: V283 = ISZERO V282
0x2c6: V284 = ISZERO V283
0x2c7: V285 = 0x2cf
0x2ca: JUMPI 0x2cf V284
---
Entry stack: [V12, 0x84, V55]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x84, V55]

================================

Block 0x2cb
[0x2cb:0x2ce]
---
Predecessors: [0x29c]
Successors: []
---
0x2cb PUSH1 0x0
0x2cd DUP1
0x2ce REVERT
---
0x2cb: V286 = 0x0
0x2ce: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V55]

================================

Block 0x2cf
[0x2cf:0x2cf]
---
Predecessors: [0x29c]
Successors: [0x2d0]
---
0x2cf JUMPDEST
---
0x2cf: JUMPDEST 
---
Entry stack: [V12, 0x84, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V55]

================================

Block 0x2d0
[0x2d0:0x2d0]
---
Predecessors: [0x2cf]
Successors: [0x2d1]
---
0x2d0 JUMPDEST
---
0x2d0: JUMPDEST 
---
Entry stack: [V12, 0x84, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V55]

================================

Block 0x2d1
[0x2d1:0x2d3]
---
Predecessors: [0x2d0]
Successors: [0x84]
---
0x2d1 JUMPDEST
0x2d2 POP
0x2d3 JUMP
---
0x2d1: JUMPDEST 
0x2d3: JUMP 0x84
---
Entry stack: [V12, 0x84, V55]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d4
[0x2d4:0x2ea]
---
Predecessors: [0xc1]
Successors: [0x2eb, 0x2ef]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x0
0x2d7 SLOAD
0x2d8 CALLER
0x2d9 PUSH1 0x1
0x2db PUSH1 0xa0
0x2dd PUSH1 0x2
0x2df EXP
0x2e0 SUB
0x2e1 SWAP1
0x2e2 DUP2
0x2e3 AND
0x2e4 SWAP2
0x2e5 AND
0x2e6 EQ
0x2e7 PUSH2 0x2ef
0x2ea JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V287 = 0x0
0x2d7: V288 = S[0x0]
0x2d8: V289 = CALLER
0x2d9: V290 = 0x1
0x2db: V291 = 0xa0
0x2dd: V292 = 0x2
0x2df: V293 = EXP 0x2 0xa0
0x2e0: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e3: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x2e5: V296 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0x2e6: V297 = EQ V296 V295
0x2e7: V298 = 0x2ef
0x2ea: JUMPI 0x2ef V297
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x2eb
[0x2eb:0x2ee]
---
Predecessors: [0x2d4]
Successors: []
---
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee REVERT
---
0x2eb: V299 = 0x0
0x2ee: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x2ef
[0x2ef:0x2fc]
---
Predecessors: [0x2d4]
Successors: []
---
0x2ef JUMPDEST
0x2f0 PUSH1 0x0
0x2f2 SLOAD
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 PUSH1 0x2
0x2f9 EXP
0x2fa SUB
0x2fb AND
0x2fc SELFDESTRUCT
---
0x2ef: JUMPDEST 
0x2f0: V300 = 0x0
0x2f2: V301 = S[0x0]
0x2f3: V302 = 0x1
0x2f5: V303 = 0xa0
0x2f7: V304 = 0x2
0x2f9: V305 = EXP 0x2 0xa0
0x2fa: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fb: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x2fc: SELFDESTRUCT V307
---
Entry stack: [V12, 0x84]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84]

================================

Block 0x2fd
[0x2fd:0x2fd]
---
Predecessors: []
Successors: [0x2fe]
---
0x2fd JUMPDEST
---
0x2fd: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2fe
[0x2fe:0x2ff]
---
Predecessors: [0x2fd]
Successors: []
Has unresolved jump.
---
0x2fe JUMPDEST
0x2ff JUMP
---
0x2fe: JUMPDEST 
0x2ff: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x300
[0x300:0x3b6]
---
Predecessors: [0xd6]
Successors: [0x3b7, 0x3bb]
---
0x300 JUMPDEST
0x301 PUSH1 0x1
0x303 SLOAD
0x304 PUSH1 0x0
0x306 SWAP1
0x307 PUSH1 0x1
0x309 PUSH1 0xa0
0x30b PUSH1 0x2
0x30d EXP
0x30e SUB
0x30f AND
0x310 DUP1
0x311 PUSH4 0x6c86888b
0x316 DUP15
0x317 DUP15
0x318 DUP15
0x319 DUP15
0x31a DUP15
0x31b DUP15
0x31c DUP15
0x31d DUP15
0x31e DUP15
0x31f DUP15
0x320 DUP15
0x321 ADDRESS
0x322 DUP16
0x323 PUSH1 0x40
0x325 MLOAD
0x326 PUSH1 0x20
0x328 ADD
0x329 MSTORE
0x32a PUSH1 0x40
0x32c MLOAD
0x32d PUSH1 0xe0
0x32f PUSH1 0x2
0x331 EXP
0x332 PUSH4 0xffffffff
0x337 DUP16
0x338 AND
0x339 MUL
0x33a DUP2
0x33b MSTORE
0x33c PUSH1 0x1
0x33e PUSH1 0xa0
0x340 PUSH1 0x2
0x342 EXP
0x343 SUB
0x344 SWAP13
0x345 DUP14
0x346 AND
0x347 PUSH1 0x4
0x349 DUP3
0x34a ADD
0x34b MSTORE
0x34c PUSH1 0x24
0x34e DUP2
0x34f ADD
0x350 SWAP12
0x351 SWAP1
0x352 SWAP12
0x353 MSTORE
0x354 SWAP9
0x355 DUP12
0x356 AND
0x357 PUSH1 0x44
0x359 DUP12
0x35a ADD
0x35b MSTORE
0x35c PUSH1 0x64
0x35e DUP11
0x35f ADD
0x360 SWAP8
0x361 SWAP1
0x362 SWAP8
0x363 MSTORE
0x364 PUSH1 0x84
0x366 DUP10
0x367 ADD
0x368 SWAP6
0x369 SWAP1
0x36a SWAP6
0x36b MSTORE
0x36c PUSH1 0xa4
0x36e DUP9
0x36f ADD
0x370 SWAP4
0x371 SWAP1
0x372 SWAP4
0x373 MSTORE
0x374 SWAP1
0x375 DUP8
0x376 AND
0x377 PUSH1 0xc4
0x379 DUP8
0x37a ADD
0x37b MSTORE
0x37c PUSH1 0xff
0x37e AND
0x37f PUSH1 0xe4
0x381 DUP7
0x382 ADD
0x383 MSTORE
0x384 PUSH2 0x104
0x387 DUP6
0x388 ADD
0x389 MSTORE
0x38a PUSH2 0x124
0x38d DUP5
0x38e ADD
0x38f MSTORE
0x390 PUSH2 0x144
0x393 DUP4
0x394 ADD
0x395 MSTORE
0x396 SWAP1
0x397 SWAP2
0x398 AND
0x399 PUSH2 0x164
0x39c DUP3
0x39d ADD
0x39e MSTORE
0x39f PUSH2 0x184
0x3a2 ADD
0x3a3 PUSH1 0x20
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 DUP1
0x3a9 DUP4
0x3aa SUB
0x3ab DUP2
0x3ac PUSH1 0x0
0x3ae DUP8
0x3af DUP1
0x3b0 EXTCODESIZE
0x3b1 ISZERO
0x3b2 ISZERO
0x3b3 PUSH2 0x3bb
0x3b6 JUMPI
---
0x300: JUMPDEST 
0x301: V308 = 0x1
0x303: V309 = S[0x1]
0x304: V310 = 0x0
0x307: V311 = 0x1
0x309: V312 = 0xa0
0x30b: V313 = 0x2
0x30d: V314 = EXP 0x2 0xa0
0x30e: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30f: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x311: V317 = 0x6c86888b
0x321: V318 = ADDRESS
0x323: V319 = 0x40
0x325: V320 = M[0x40]
0x326: V321 = 0x20
0x328: V322 = ADD 0x20 V320
0x329: M[V322] = 0x0
0x32a: V323 = 0x40
0x32c: V324 = M[0x40]
0x32d: V325 = 0xe0
0x32f: V326 = 0x2
0x331: V327 = EXP 0x2 0xe0
0x332: V328 = 0xffffffff
0x338: V329 = AND 0x6c86888b 0xffffffff
0x339: V330 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x33b: M[V324] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x33c: V331 = 0x1
0x33e: V332 = 0xa0
0x340: V333 = 0x2
0x342: V334 = EXP 0x2 0xa0
0x343: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x346: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x347: V337 = 0x4
0x34a: V338 = ADD V324 0x4
0x34b: M[V338] = V336
0x34c: V339 = 0x24
0x34f: V340 = ADD V324 0x24
0x353: M[V340] = V77
0x356: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x357: V342 = 0x44
0x35a: V343 = ADD V324 0x44
0x35b: M[V343] = V341
0x35c: V344 = 0x64
0x35f: V345 = ADD V324 0x64
0x363: M[V345] = V82
0x364: V346 = 0x84
0x367: V347 = ADD V324 0x84
0x36b: M[V347] = V84
0x36c: V348 = 0xa4
0x36f: V349 = ADD V324 0xa4
0x373: M[V349] = V86
0x376: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x377: V351 = 0xc4
0x37a: V352 = ADD V324 0xc4
0x37b: M[V352] = V350
0x37c: V353 = 0xff
0x37e: V354 = AND 0xff V93
0x37f: V355 = 0xe4
0x382: V356 = ADD V324 0xe4
0x383: M[V356] = V354
0x384: V357 = 0x104
0x388: V358 = ADD V324 0x104
0x389: M[V358] = V95
0x38a: V359 = 0x124
0x38e: V360 = ADD V324 0x124
0x38f: M[V360] = V97
0x390: V361 = 0x144
0x394: V362 = ADD V324 0x144
0x395: M[V362] = V99
0x398: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x399: V364 = 0x164
0x39d: V365 = ADD V324 0x164
0x39e: M[V365] = V363
0x39f: V366 = 0x184
0x3a2: V367 = ADD 0x184 V324
0x3a3: V368 = 0x20
0x3a5: V369 = 0x40
0x3a7: V370 = M[0x40]
0x3aa: V371 = SUB V367 V370
0x3ac: V372 = 0x0
0x3b0: V373 = EXTCODESIZE V316
0x3b1: V374 = ISZERO V373
0x3b2: V375 = ISZERO V374
0x3b3: V376 = 0x3bb
0x3b6: JUMPI 0x3bb V375
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V316, V316, 0x6c86888b, V367, 0x20, V370, V371, V370, 0x0, V316]
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V316, V316, 0x6c86888b, V367, 0x20, V370, V371, V370, 0x0, V316]

================================

Block 0x3b7
[0x3b7:0x3ba]
---
Predecessors: [0x300]
Successors: []
---
0x3b7 PUSH1 0x0
0x3b9 DUP1
0x3ba REVERT
---
0x3b7: V377 = 0x0
0x3ba: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V316, V316, 0x6c86888b, V367, 0x20, V370, V371, V370, 0x0, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V316, V316, 0x6c86888b, V367, 0x20, V370, V371, V370, 0x0, V316]

================================

Block 0x3bb
[0x3bb:0x3c7]
---
Predecessors: [0x300]
Successors: [0x3c8, 0x3cc]
---
0x3bb JUMPDEST
0x3bc PUSH2 0x2c6
0x3bf GAS
0x3c0 SUB
0x3c1 CALL
0x3c2 ISZERO
0x3c3 ISZERO
0x3c4 PUSH2 0x3cc
0x3c7 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V378 = 0x2c6
0x3bf: V379 = GAS
0x3c0: V380 = SUB V379 0x2c6
0x3c1: V381 = CALL V380 V316 0x0 V370 V371 V370 0x20
0x3c2: V382 = ISZERO V381
0x3c3: V383 = ISZERO V382
0x3c4: V384 = 0x3cc
0x3c7: JUMPI 0x3cc V383
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V316, V316, 0x6c86888b, V367, 0x20, V370, V371, V370, 0x0, V316]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V316, V316, 0x6c86888b, V367]

================================

Block 0x3c8
[0x3c8:0x3cb]
---
Predecessors: [0x3bb]
Successors: []
---
0x3c8 PUSH1 0x0
0x3ca DUP1
0x3cb REVERT
---
0x3c8: V385 = 0x0
0x3cb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V316, V316, 0x6c86888b, V367]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V316, V316, 0x6c86888b, V367]

================================

Block 0x3cc
[0x3cc:0x3d7]
---
Predecessors: [0x3bb]
Successors: [0x3d8]
---
0x3cc JUMPDEST
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 PUSH1 0x40
0x3d2 MLOAD
0x3d3 DUP1
0x3d4 MLOAD
0x3d5 SWAP3
0x3d6 POP
0x3d7 POP
---
0x3cc: JUMPDEST 
0x3d0: V386 = 0x40
0x3d2: V387 = M[0x40]
0x3d4: V388 = M[V387]
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, 0x0, V316, V316, 0x6c86888b, V367]
Stack pops: 5
Stack additions: [V388, S3]
Exit stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, V388, V316]

================================

Block 0x3d8
[0x3d8:0x3e7]
---
Predecessors: [0x3cc]
Successors: [0x118]
---
0x3d8 JUMPDEST
0x3d9 POP
0x3da SWAP12
0x3db SWAP11
0x3dc POP
0x3dd POP
0x3de POP
0x3df POP
0x3e0 POP
0x3e1 POP
0x3e2 POP
0x3e3 POP
0x3e4 POP
0x3e5 POP
0x3e6 POP
0x3e7 JUMP
---
0x3d8: JUMPDEST 
0x3e7: JUMP 0x118
---
Entry stack: [V12, 0x118, V75, V77, V80, V82, V84, V86, V89, V93, V95, V97, V99, V388, V316]
Stack pops: 14
Stack additions: [S1]
Exit stack: [V12, V388]

================================

Block 0x3e8
[0x3e8:0x447]
---
Predecessors: [0x137]
Successors: [0x448, 0x44c]
---
0x3e8 JUMPDEST
0x3e9 PUSH1 0x1
0x3eb SLOAD
0x3ec PUSH1 0x0
0x3ee SWAP1
0x3ef PUSH1 0x1
0x3f1 PUSH1 0xa0
0x3f3 PUSH1 0x2
0x3f5 EXP
0x3f6 SUB
0x3f7 AND
0x3f8 DUP1
0x3f9 PUSH4 0xf7888aec
0x3fe DUP5
0x3ff ADDRESS
0x400 DUP6
0x401 PUSH1 0x40
0x403 MLOAD
0x404 PUSH1 0x20
0x406 ADD
0x407 MSTORE
0x408 PUSH1 0x40
0x40a MLOAD
0x40b PUSH1 0xe0
0x40d PUSH1 0x2
0x40f EXP
0x410 PUSH4 0xffffffff
0x415 DUP6
0x416 AND
0x417 MUL
0x418 DUP2
0x419 MSTORE
0x41a PUSH1 0x1
0x41c PUSH1 0xa0
0x41e PUSH1 0x2
0x420 EXP
0x421 SUB
0x422 SWAP3
0x423 DUP4
0x424 AND
0x425 PUSH1 0x4
0x427 DUP3
0x428 ADD
0x429 MSTORE
0x42a SWAP2
0x42b AND
0x42c PUSH1 0x24
0x42e DUP3
0x42f ADD
0x430 MSTORE
0x431 PUSH1 0x44
0x433 ADD
0x434 PUSH1 0x20
0x436 PUSH1 0x40
0x438 MLOAD
0x439 DUP1
0x43a DUP4
0x43b SUB
0x43c DUP2
0x43d PUSH1 0x0
0x43f DUP8
0x440 DUP1
0x441 EXTCODESIZE
0x442 ISZERO
0x443 ISZERO
0x444 PUSH2 0x44c
0x447 JUMPI
---
0x3e8: JUMPDEST 
0x3e9: V389 = 0x1
0x3eb: V390 = S[0x1]
0x3ec: V391 = 0x0
0x3ef: V392 = 0x1
0x3f1: V393 = 0xa0
0x3f3: V394 = 0x2
0x3f5: V395 = EXP 0x2 0xa0
0x3f6: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f7: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x3f9: V398 = 0xf7888aec
0x3ff: V399 = ADDRESS
0x401: V400 = 0x40
0x403: V401 = M[0x40]
0x404: V402 = 0x20
0x406: V403 = ADD 0x20 V401
0x407: M[V403] = 0x0
0x408: V404 = 0x40
0x40a: V405 = M[0x40]
0x40b: V406 = 0xe0
0x40d: V407 = 0x2
0x40f: V408 = EXP 0x2 0xe0
0x410: V409 = 0xffffffff
0x416: V410 = AND 0xf7888aec 0xffffffff
0x417: V411 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x419: M[V405] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x41a: V412 = 0x1
0x41c: V413 = 0xa0
0x41e: V414 = 0x2
0x420: V415 = EXP 0x2 0xa0
0x421: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x424: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x425: V418 = 0x4
0x428: V419 = ADD V405 0x4
0x429: M[V419] = V417
0x42b: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x42c: V421 = 0x24
0x42f: V422 = ADD V405 0x24
0x430: M[V422] = V420
0x431: V423 = 0x44
0x433: V424 = ADD 0x44 V405
0x434: V425 = 0x20
0x436: V426 = 0x40
0x438: V427 = M[0x40]
0x43b: V428 = SUB V424 V427
0x43d: V429 = 0x0
0x441: V430 = EXTCODESIZE V397
0x442: V431 = ISZERO V430
0x443: V432 = ISZERO V431
0x444: V433 = 0x44c
0x447: JUMPI 0x44c V432
---
Entry stack: [V12, 0x14b, V122]
Stack pops: 1
Stack additions: [S0, 0x0, V397, V397, 0xf7888aec, V424, 0x20, V427, V428, V427, 0x0, V397]
Exit stack: [V12, 0x14b, V122, 0x0, V397, V397, 0xf7888aec, V424, 0x20, V427, V428, V427, 0x0, V397]

================================

Block 0x448
[0x448:0x44b]
---
Predecessors: [0x3e8]
Successors: []
---
0x448 PUSH1 0x0
0x44a DUP1
0x44b REVERT
---
0x448: V434 = 0x0
0x44b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V122, 0x0, V397, V397, 0xf7888aec, V424, 0x20, V427, V428, V427, 0x0, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V122, 0x0, V397, V397, 0xf7888aec, V424, 0x20, V427, V428, V427, 0x0, V397]

================================

Block 0x44c
[0x44c:0x458]
---
Predecessors: [0x3e8]
Successors: [0x459, 0x45d]
---
0x44c JUMPDEST
0x44d PUSH2 0x2c6
0x450 GAS
0x451 SUB
0x452 CALL
0x453 ISZERO
0x454 ISZERO
0x455 PUSH2 0x45d
0x458 JUMPI
---
0x44c: JUMPDEST 
0x44d: V435 = 0x2c6
0x450: V436 = GAS
0x451: V437 = SUB V436 0x2c6
0x452: V438 = CALL V437 V397 0x0 V427 V428 V427 0x20
0x453: V439 = ISZERO V438
0x454: V440 = ISZERO V439
0x455: V441 = 0x45d
0x458: JUMPI 0x45d V440
---
Entry stack: [V12, 0x14b, V122, 0x0, V397, V397, 0xf7888aec, V424, 0x20, V427, V428, V427, 0x0, V397]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x14b, V122, 0x0, V397, V397, 0xf7888aec, V424]

================================

Block 0x459
[0x459:0x45c]
---
Predecessors: [0x44c]
Successors: []
---
0x459 PUSH1 0x0
0x45b DUP1
0x45c REVERT
---
0x459: V442 = 0x0
0x45c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V122, 0x0, V397, V397, 0xf7888aec, V424]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V122, 0x0, V397, V397, 0xf7888aec, V424]

================================

Block 0x45d
[0x45d:0x468]
---
Predecessors: [0x44c]
Successors: [0x469]
---
0x45d JUMPDEST
0x45e POP
0x45f POP
0x460 POP
0x461 PUSH1 0x40
0x463 MLOAD
0x464 DUP1
0x465 MLOAD
0x466 SWAP3
0x467 POP
0x468 POP
---
0x45d: JUMPDEST 
0x461: V443 = 0x40
0x463: V444 = M[0x40]
0x465: V445 = M[V444]
---
Entry stack: [V12, 0x14b, V122, 0x0, V397, V397, 0xf7888aec, V424]
Stack pops: 5
Stack additions: [V445, S3]
Exit stack: [V12, 0x14b, V122, V445, V397]

================================

Block 0x469
[0x469:0x46e]
---
Predecessors: [0x45d]
Successors: [0x14b]
---
0x469 JUMPDEST
0x46a POP
0x46b SWAP2
0x46c SWAP1
0x46d POP
0x46e JUMP
---
0x469: JUMPDEST 
0x46e: JUMP 0x14b
---
Entry stack: [V12, 0x14b, V122, V445, V397]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V445]

================================

Block 0x46f
[0x46f:0x47d]
---
Predecessors: [0x168]
Successors: [0x170]
---
0x46f JUMPDEST
0x470 PUSH1 0x0
0x472 SLOAD
0x473 PUSH1 0x1
0x475 PUSH1 0xa0
0x477 PUSH1 0x2
0x479 EXP
0x47a SUB
0x47b AND
0x47c DUP2
0x47d JUMP
---
0x46f: JUMPDEST 
0x470: V446 = 0x0
0x472: V447 = S[0x0]
0x473: V448 = 0x1
0x475: V449 = 0xa0
0x477: V450 = 0x2
0x479: V451 = EXP 0x2 0xa0
0x47a: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47b: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x47d: JUMP 0x170
---
Entry stack: [V12, 0x170]
Stack pops: 1
Stack additions: [S0, V453]
Exit stack: [V12, 0x170, V453]

================================

Block 0x47e
[0x47e:0x47e]
---
Predecessors: []
Successors: [0x47f]
---
0x47e JUMPDEST
---
0x47e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x47f
[0x47f:0x480]
---
Predecessors: [0x47e]
Successors: []
Has unresolved jump.
---
0x47f JUMPDEST
0x480 JUMP
---
0x47f: JUMPDEST 
0x480: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x481
[0x481:0x498]
---
Predecessors: [0x1a1]
Successors: [0x499, 0x49d]
---
0x481 JUMPDEST
0x482 PUSH1 0x0
0x484 DUP1
0x485 SLOAD
0x486 CALLER
0x487 PUSH1 0x1
0x489 PUSH1 0xa0
0x48b PUSH1 0x2
0x48d EXP
0x48e SUB
0x48f SWAP1
0x490 DUP2
0x491 AND
0x492 SWAP2
0x493 AND
0x494 EQ
0x495 PUSH2 0x49d
0x498 JUMPI
---
0x481: JUMPDEST 
0x482: V454 = 0x0
0x485: V455 = S[0x0]
0x486: V456 = CALLER
0x487: V457 = 0x1
0x489: V458 = 0xa0
0x48b: V459 = 0x2
0x48d: V460 = EXP 0x2 0xa0
0x48e: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x491: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x493: V463 = AND V455 0xffffffffffffffffffffffffffffffffffffffff
0x494: V464 = EQ V463 V462
0x495: V465 = 0x49d
0x498: JUMPI 0x49d V464
---
Entry stack: [V12, 0x84, V158]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x84, V158, 0x0]

================================

Block 0x499
[0x499:0x49c]
---
Predecessors: [0x481]
Successors: []
---
0x499 PUSH1 0x0
0x49b DUP1
0x49c REVERT
---
0x499: V466 = 0x0
0x49c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V158, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V158, 0x0]

================================

Block 0x49d
[0x49d:0x4e2]
---
Predecessors: [0x481]
Successors: [0x4e3, 0x4e7]
---
0x49d JUMPDEST
0x49e POP
0x49f PUSH1 0x1
0x4a1 SLOAD
0x4a2 PUSH1 0x1
0x4a4 PUSH1 0xa0
0x4a6 PUSH1 0x2
0x4a8 EXP
0x4a9 SUB
0x4aa AND
0x4ab DUP1
0x4ac PUSH4 0x2e1a7d4d
0x4b1 DUP4
0x4b2 PUSH1 0x40
0x4b4 MLOAD
0x4b5 PUSH1 0xe0
0x4b7 PUSH1 0x2
0x4b9 EXP
0x4ba PUSH4 0xffffffff
0x4bf DUP5
0x4c0 AND
0x4c1 MUL
0x4c2 DUP2
0x4c3 MSTORE
0x4c4 PUSH1 0x4
0x4c6 DUP2
0x4c7 ADD
0x4c8 SWAP2
0x4c9 SWAP1
0x4ca SWAP2
0x4cb MSTORE
0x4cc PUSH1 0x24
0x4ce ADD
0x4cf PUSH1 0x0
0x4d1 PUSH1 0x40
0x4d3 MLOAD
0x4d4 DUP1
0x4d5 DUP4
0x4d6 SUB
0x4d7 DUP2
0x4d8 PUSH1 0x0
0x4da DUP8
0x4db DUP1
0x4dc EXTCODESIZE
0x4dd ISZERO
0x4de ISZERO
0x4df PUSH2 0x4e7
0x4e2 JUMPI
---
0x49d: JUMPDEST 
0x49f: V467 = 0x1
0x4a1: V468 = S[0x1]
0x4a2: V469 = 0x1
0x4a4: V470 = 0xa0
0x4a6: V471 = 0x2
0x4a8: V472 = EXP 0x2 0xa0
0x4a9: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4aa: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x4ac: V475 = 0x2e1a7d4d
0x4b2: V476 = 0x40
0x4b4: V477 = M[0x40]
0x4b5: V478 = 0xe0
0x4b7: V479 = 0x2
0x4b9: V480 = EXP 0x2 0xe0
0x4ba: V481 = 0xffffffff
0x4c0: V482 = AND 0x2e1a7d4d 0xffffffff
0x4c1: V483 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x4c3: M[V477] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x4c4: V484 = 0x4
0x4c7: V485 = ADD V477 0x4
0x4cb: M[V485] = V158
0x4cc: V486 = 0x24
0x4ce: V487 = ADD 0x24 V477
0x4cf: V488 = 0x0
0x4d1: V489 = 0x40
0x4d3: V490 = M[0x40]
0x4d6: V491 = SUB V487 V490
0x4d8: V492 = 0x0
0x4dc: V493 = EXTCODESIZE V474
0x4dd: V494 = ISZERO V493
0x4de: V495 = ISZERO V494
0x4df: V496 = 0x4e7
0x4e2: JUMPI 0x4e7 V495
---
Entry stack: [V12, 0x84, V158, 0x0]
Stack pops: 2
Stack additions: [S1, V474, V474, 0x2e1a7d4d, V487, 0x0, V490, V491, V490, 0x0, V474]
Exit stack: [V12, 0x84, V158, V474, V474, 0x2e1a7d4d, V487, 0x0, V490, V491, V490, 0x0, V474]

================================

Block 0x4e3
[0x4e3:0x4e6]
---
Predecessors: [0x49d]
Successors: []
---
0x4e3 PUSH1 0x0
0x4e5 DUP1
0x4e6 REVERT
---
0x4e3: V497 = 0x0
0x4e6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V158, V474, V474, 0x2e1a7d4d, V487, 0x0, V490, V491, V490, 0x0, V474]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V158, V474, V474, 0x2e1a7d4d, V487, 0x0, V490, V491, V490, 0x0, V474]

================================

Block 0x4e7
[0x4e7:0x4f3]
---
Predecessors: [0x49d]
Successors: [0x4f4, 0x4f8]
---
0x4e7 JUMPDEST
0x4e8 PUSH2 0x2c6
0x4eb GAS
0x4ec SUB
0x4ed CALL
0x4ee ISZERO
0x4ef ISZERO
0x4f0 PUSH2 0x4f8
0x4f3 JUMPI
---
0x4e7: JUMPDEST 
0x4e8: V498 = 0x2c6
0x4eb: V499 = GAS
0x4ec: V500 = SUB V499 0x2c6
0x4ed: V501 = CALL V500 V474 0x0 V490 V491 V490 0x0
0x4ee: V502 = ISZERO V501
0x4ef: V503 = ISZERO V502
0x4f0: V504 = 0x4f8
0x4f3: JUMPI 0x4f8 V503
---
Entry stack: [V12, 0x84, V158, V474, V474, 0x2e1a7d4d, V487, 0x0, V490, V491, V490, 0x0, V474]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x84, V158, V474, V474, 0x2e1a7d4d, V487]

================================

Block 0x4f4
[0x4f4:0x4f7]
---
Predecessors: [0x4e7]
Successors: []
---
0x4f4 PUSH1 0x0
0x4f6 DUP1
0x4f7 REVERT
---
0x4f4: V505 = 0x0
0x4f7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x84, V158, V474, V474, 0x2e1a7d4d, V487]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V158, V474, V474, 0x2e1a7d4d, V487]

================================

Block 0x4f8
[0x4f8:0x4fb]
---
Predecessors: [0x4e7]
Successors: [0x4fc]
---
0x4f8 JUMPDEST
0x4f9 POP
0x4fa POP
0x4fb POP
---
0x4f8: JUMPDEST 
---
Entry stack: [V12, 0x84, V158, V474, V474, 0x2e1a7d4d, V487]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x84, V158, V474]

================================

Block 0x4fc
[0x4fc:0x4fc]
---
Predecessors: [0x4f8]
Successors: [0x4fd]
---
0x4fc JUMPDEST
---
0x4fc: JUMPDEST 
---
Entry stack: [V12, 0x84, V158, V474]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x84, V158, V474]

================================

Block 0x4fd
[0x4fd:0x500]
---
Predecessors: [0x4fc]
Successors: [0x84]
---
0x4fd JUMPDEST
0x4fe POP
0x4ff POP
0x500 JUMP
---
0x4fd: JUMPDEST 
0x500: JUMP 0x84
---
Entry stack: [V12, 0x84, V158, V474]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x501
[0x501:0x5ae]
---
Predecessors: [0x1b9]
Successors: [0x5af, 0x5b3]
---
0x501 JUMPDEST
0x502 PUSH1 0x1
0x504 SLOAD
0x505 PUSH1 0x0
0x507 SWAP1
0x508 PUSH1 0x1
0x50a PUSH1 0xa0
0x50c PUSH1 0x2
0x50e EXP
0x50f SUB
0x510 AND
0x511 DUP1
0x512 PUSH4 0xfb6e155f
0x517 DUP14
0x518 DUP14
0x519 DUP14
0x51a DUP14
0x51b DUP14
0x51c DUP14
0x51d DUP14
0x51e DUP14
0x51f DUP14
0x520 DUP14
0x521 DUP14
0x522 PUSH1 0x40
0x524 MLOAD
0x525 PUSH1 0x20
0x527 ADD
0x528 MSTORE
0x529 PUSH1 0x40
0x52b MLOAD
0x52c PUSH1 0xe0
0x52e PUSH1 0x2
0x530 EXP
0x531 PUSH4 0xffffffff
0x536 DUP14
0x537 AND
0x538 MUL
0x539 DUP2
0x53a MSTORE
0x53b PUSH1 0x1
0x53d PUSH1 0xa0
0x53f PUSH1 0x2
0x541 EXP
0x542 SUB
0x543 SWAP11
0x544 DUP12
0x545 AND
0x546 PUSH1 0x4
0x548 DUP3
0x549 ADD
0x54a MSTORE
0x54b PUSH1 0x24
0x54d DUP2
0x54e ADD
0x54f SWAP10
0x550 SWAP1
0x551 SWAP10
0x552 MSTORE
0x553 SWAP7
0x554 DUP10
0x555 AND
0x556 PUSH1 0x44
0x558 DUP10
0x559 ADD
0x55a MSTORE
0x55b PUSH1 0x64
0x55d DUP9
0x55e ADD
0x55f SWAP6
0x560 SWAP1
0x561 SWAP6
0x562 MSTORE
0x563 PUSH1 0x84
0x565 DUP8
0x566 ADD
0x567 SWAP4
0x568 SWAP1
0x569 SWAP4
0x56a MSTORE
0x56b PUSH1 0xa4
0x56d DUP7
0x56e ADD
0x56f SWAP2
0x570 SWAP1
0x571 SWAP2
0x572 MSTORE
0x573 SWAP1
0x574 SWAP5
0x575 AND
0x576 PUSH1 0xc4
0x578 DUP5
0x579 ADD
0x57a MSTORE
0x57b PUSH1 0xff
0x57d SWAP1
0x57e SWAP4
0x57f AND
0x580 PUSH1 0xe4
0x582 DUP4
0x583 ADD
0x584 MSTORE
0x585 PUSH2 0x104
0x588 DUP3
0x589 ADD
0x58a SWAP3
0x58b SWAP1
0x58c SWAP3
0x58d MSTORE
0x58e PUSH2 0x124
0x591 DUP2
0x592 ADD
0x593 SWAP2
0x594 SWAP1
0x595 SWAP2
0x596 MSTORE
0x597 PUSH2 0x144
0x59a ADD
0x59b PUSH1 0x20
0x59d PUSH1 0x40
0x59f MLOAD
0x5a0 DUP1
0x5a1 DUP4
0x5a2 SUB
0x5a3 DUP2
0x5a4 PUSH1 0x0
0x5a6 DUP8
0x5a7 DUP1
0x5a8 EXTCODESIZE
0x5a9 ISZERO
0x5aa ISZERO
0x5ab PUSH2 0x5b3
0x5ae JUMPI
---
0x501: JUMPDEST 
0x502: V506 = 0x1
0x504: V507 = S[0x1]
0x505: V508 = 0x0
0x508: V509 = 0x1
0x50a: V510 = 0xa0
0x50c: V511 = 0x2
0x50e: V512 = EXP 0x2 0xa0
0x50f: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x510: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x512: V515 = 0xfb6e155f
0x522: V516 = 0x40
0x524: V517 = M[0x40]
0x525: V518 = 0x20
0x527: V519 = ADD 0x20 V517
0x528: M[V519] = 0x0
0x529: V520 = 0x40
0x52b: V521 = M[0x40]
0x52c: V522 = 0xe0
0x52e: V523 = 0x2
0x530: V524 = EXP 0x2 0xe0
0x531: V525 = 0xffffffff
0x537: V526 = AND 0xfb6e155f 0xffffffff
0x538: V527 = MUL 0xfb6e155f 0x100000000000000000000000000000000000000000000000000000000
0x53a: M[V521] = 0xfb6e155f00000000000000000000000000000000000000000000000000000000
0x53b: V528 = 0x1
0x53d: V529 = 0xa0
0x53f: V530 = 0x2
0x541: V531 = EXP 0x2 0xa0
0x542: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x545: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x546: V534 = 0x4
0x549: V535 = ADD V521 0x4
0x54a: M[V535] = V533
0x54b: V536 = 0x24
0x54e: V537 = ADD V521 0x24
0x552: M[V537] = V174
0x555: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x556: V539 = 0x44
0x559: V540 = ADD V521 0x44
0x55a: M[V540] = V538
0x55b: V541 = 0x64
0x55e: V542 = ADD V521 0x64
0x562: M[V542] = V179
0x563: V543 = 0x84
0x566: V544 = ADD V521 0x84
0x56a: M[V544] = V181
0x56b: V545 = 0xa4
0x56e: V546 = ADD V521 0xa4
0x572: M[V546] = V183
0x575: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x576: V548 = 0xc4
0x579: V549 = ADD V521 0xc4
0x57a: M[V549] = V547
0x57b: V550 = 0xff
0x57f: V551 = AND V190 0xff
0x580: V552 = 0xe4
0x583: V553 = ADD V521 0xe4
0x584: M[V553] = V551
0x585: V554 = 0x104
0x589: V555 = ADD V521 0x104
0x58d: M[V555] = V192
0x58e: V556 = 0x124
0x592: V557 = ADD V521 0x124
0x596: M[V557] = V194
0x597: V558 = 0x144
0x59a: V559 = ADD 0x144 V521
0x59b: V560 = 0x20
0x59d: V561 = 0x40
0x59f: V562 = M[0x40]
0x5a2: V563 = SUB V559 V562
0x5a4: V564 = 0x0
0x5a8: V565 = EXTCODESIZE V514
0x5a9: V566 = ISZERO V565
0x5aa: V567 = ISZERO V566
0x5ab: V568 = 0x5b3
0x5ae: JUMPI 0x5b3 V567
---
Entry stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V514, V514, 0xfb6e155f, V559, 0x20, V562, V563, V562, 0x0, V514]
Exit stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194, 0x0, V514, V514, 0xfb6e155f, V559, 0x20, V562, V563, V562, 0x0, V514]

================================

Block 0x5af
[0x5af:0x5b2]
---
Predecessors: [0x501]
Successors: []
---
0x5af PUSH1 0x0
0x5b1 DUP1
0x5b2 REVERT
---
0x5af: V569 = 0x0
0x5b2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194, 0x0, V514, V514, 0xfb6e155f, V559, 0x20, V562, V563, V562, 0x0, V514]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194, 0x0, V514, V514, 0xfb6e155f, V559, 0x20, V562, V563, V562, 0x0, V514]

================================

Block 0x5b3
[0x5b3:0x5bf]
---
Predecessors: [0x501]
Successors: [0x5c0, 0x5c4]
---
0x5b3 JUMPDEST
0x5b4 PUSH2 0x2c6
0x5b7 GAS
0x5b8 SUB
0x5b9 CALL
0x5ba ISZERO
0x5bb ISZERO
0x5bc PUSH2 0x5c4
0x5bf JUMPI
---
0x5b3: JUMPDEST 
0x5b4: V570 = 0x2c6
0x5b7: V571 = GAS
0x5b8: V572 = SUB V571 0x2c6
0x5b9: V573 = CALL V572 V514 0x0 V562 V563 V562 0x20
0x5ba: V574 = ISZERO V573
0x5bb: V575 = ISZERO V574
0x5bc: V576 = 0x5c4
0x5bf: JUMPI 0x5c4 V575
---
Entry stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194, 0x0, V514, V514, 0xfb6e155f, V559, 0x20, V562, V563, V562, 0x0, V514]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194, 0x0, V514, V514, 0xfb6e155f, V559]

================================

Block 0x5c0
[0x5c0:0x5c3]
---
Predecessors: [0x5b3]
Successors: []
---
0x5c0 PUSH1 0x0
0x5c2 DUP1
0x5c3 REVERT
---
0x5c0: V577 = 0x0
0x5c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194, 0x0, V514, V514, 0xfb6e155f, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194, 0x0, V514, V514, 0xfb6e155f, V559]

================================

Block 0x5c4
[0x5c4:0x5cf]
---
Predecessors: [0x5b3]
Successors: [0x5d0]
---
0x5c4 JUMPDEST
0x5c5 POP
0x5c6 POP
0x5c7 POP
0x5c8 PUSH1 0x40
0x5ca MLOAD
0x5cb DUP1
0x5cc MLOAD
0x5cd SWAP3
0x5ce POP
0x5cf POP
---
0x5c4: JUMPDEST 
0x5c8: V578 = 0x40
0x5ca: V579 = M[0x40]
0x5cc: V580 = M[V579]
---
Entry stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194, 0x0, V514, V514, 0xfb6e155f, V559]
Stack pops: 5
Stack additions: [V580, S3]
Exit stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194, V580, V514]

================================

Block 0x5d0
[0x5d0:0x5de]
---
Predecessors: [0x5c4]
Successors: [0x14b]
---
0x5d0 JUMPDEST
0x5d1 POP
0x5d2 SWAP11
0x5d3 SWAP10
0x5d4 POP
0x5d5 POP
0x5d6 POP
0x5d7 POP
0x5d8 POP
0x5d9 POP
0x5da POP
0x5db POP
0x5dc POP
0x5dd POP
0x5de JUMP
---
0x5d0: JUMPDEST 
0x5de: JUMP 0x14b
---
Entry stack: [V12, 0x14b, V172, V174, V177, V179, V181, V183, V186, V190, V192, V194, V580, V514]
Stack pops: 13
Stack additions: [S1]
Exit stack: [V12, V580]

================================

Block 0x5df
[0x5df:0x610]
---
Predecessors: []
Successors: []
---
0x5df STOP
0x5e0 LOG1
0x5e1 PUSH6 0x627a7a723058
0x5e8 SHA3
0x5e9 MISSING 0xc0
0x5ea MISSING 0x29
0x5eb MISSING 0xdb
0x5ec MISSING 0xe2
0x5ed MSTORE
0x5ee EXTCODECOPY
0x5ef MISSING 0x5d
0x5f0 MISSING 0xbd
0x5f1 ISZERO
0x5f2 PUSH30 0x89a188a69ecbf8f2a01f0e6f5ec5afa16fbfdcecc5620029
---
0x5df: STOP 
0x5e0: LOG S0 S1 S2
0x5e1: V581 = 0x627a7a723058
0x5e8: V582 = SHA3 0x627a7a723058 S3
0x5e9: MISSING 0xc0
0x5ea: MISSING 0x29
0x5eb: MISSING 0xdb
0x5ec: MISSING 0xe2
0x5ed: M[S0] = S1
0x5ee: EXTCODECOPY S2 S3 S4 S5
0x5ef: MISSING 0x5d
0x5f0: MISSING 0xbd
0x5f1: V583 = ISZERO S0
0x5f2: V584 = 0x89a188a69ecbf8f2a01f0e6f5ec5afa16fbfdcecc5620029
---
Entry stack: []
Stack pops: 0
Stack additions: [V582, 0x89a188a69ecbf8f2a01f0e6f5ec5afa16fbfdcecc5620029, V583]
Exit stack: []

================================

Function 0:
Public function signature: 0x2cf2c0af
Entry block: 0x86
Exit block: 0x84
Body: 0x84, 0x86, 0x8d, 0x91, 0x209, 0x221, 0x225, 0x262, 0x266, 0x273, 0x277, 0x27c, 0x27d

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x9e
Exit block: 0x84
Body: 0x84, 0x9e, 0xa5, 0xa9, 0x281, 0x298, 0x29c, 0x2cb, 0x2cf, 0x2d0, 0x2d1

Function 2:
Public function signature: 0x43d726d6
Entry block: 0xb6
Exit block: 0x2eb
Body: 0xb6, 0xbd, 0xc1, 0x2d4, 0x2eb, 0x2ef

Function 3:
Public function signature: 0x5c73dcea
Entry block: 0xcb
Exit block: 0x118
Body: 0xcb, 0xd2, 0xd6, 0x118, 0x300, 0x3b7, 0x3bb, 0x3c8, 0x3cc, 0x3d8

Function 4:
Public function signature: 0x70a08231
Entry block: 0x12c
Exit block: 0x14b
Body: 0x12c, 0x133, 0x137, 0x14b, 0x3e8, 0x448, 0x44c, 0x459, 0x45d, 0x469

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x15d
Exit block: 0x170
Body: 0x15d, 0x164, 0x168, 0x170, 0x46f

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x18c
Exit block: 0x84
Body: 0x81, 0x82, 0x84, 0x18c

Function 7:
Public function signature: 0xf1b83630
Entry block: 0x196
Exit block: 0x84
Body: 0x84, 0x196, 0x19d, 0x1a1, 0x481, 0x499, 0x49d, 0x4e3, 0x4e7, 0x4f4, 0x4f8, 0x4fc, 0x4fd

Function 8:
Public function signature: 0xfb6e155f
Entry block: 0x1ae
Exit block: 0x14b
Body: 0x14b, 0x1ae, 0x1b5, 0x1b9, 0x501, 0x5af, 0x5b3, 0x5c0, 0x5c4, 0x5d0

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x84
Body: 0x7d, 0x81, 0x82, 0x84

