Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x81]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xee11524
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x81
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xee11524
0x20: V14 = EQ V12 0xee11524
0x21: V15 = 0x81
0x24: JUMPI 0x81 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xd0]
---
0x25 DUP1
0x26 PUSH4 0x2cf2c0af
0x2b EQ
0x2c PUSH2 0xd0
0x2f JUMPI
---
0x26: V16 = 0x2cf2c0af
0x2b: V17 = EQ 0x2cf2c0af V12
0x2c: V18 = 0xd0
0x2f: JUMPI 0xd0 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xe8]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0xe8
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0xe8
0x3a: JUMPI 0xe8 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x100]
---
0x3b DUP1
0x3c PUSH4 0x43d726d6
0x41 EQ
0x42 PUSH2 0x100
0x45 JUMPI
---
0x3c: V22 = 0x43d726d6
0x41: V23 = EQ 0x43d726d6 V12
0x42: V24 = 0x100
0x45: JUMPI 0x100 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x115]
---
0x46 DUP1
0x47 PUSH4 0x5c73dcea
0x4c EQ
0x4d PUSH2 0x115
0x50 JUMPI
---
0x47: V25 = 0x5c73dcea
0x4c: V26 = EQ 0x5c73dcea V12
0x4d: V27 = 0x115
0x50: JUMPI 0x115 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x176]
---
0x51 DUP1
0x52 PUSH4 0x70a08231
0x57 EQ
0x58 PUSH2 0x176
0x5b JUMPI
---
0x52: V28 = 0x70a08231
0x57: V29 = EQ 0x70a08231 V12
0x58: V30 = 0x176
0x5b: JUMPI 0x176 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1a7]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x1a7
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x1a7
0x66: JUMPI 0x1a7 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1d6]
---
0x67 DUP1
0x68 PUSH4 0xd0e30db0
0x6d EQ
0x6e PUSH2 0x1d6
0x71 JUMPI
---
0x68: V34 = 0xd0e30db0
0x6d: V35 = EQ 0xd0e30db0 V12
0x6e: V36 = 0x1d6
0x71: JUMPI 0x1d6 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1e0]
---
0x72 DUP1
0x73 PUSH4 0xf1b83630
0x78 EQ
0x79 PUSH2 0x1e0
0x7c JUMPI
---
0x73: V37 = 0xf1b83630
0x78: V38 = EQ 0xf1b83630 V12
0x79: V39 = 0x1e0
0x7c: JUMPI 0x1e0 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x0, 0x72, 0x420, 0x4a2, 0x4f6, 0x523, 0x722]
Successors: [0x7e]
---
0x7d JUMPDEST
---
0x7d: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e
[0x7e:0x7e]
---
Predecessors: [0x7d]
Successors: [0x7f]
---
0x7e JUMPDEST
---
0x7e: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x7e]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81
[0x81:0x87]
---
Predecessors: [0xb]
Successors: [0x88, 0x8c]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 ISZERO
0x84 PUSH2 0x8c
0x87 JUMPI
---
0x81: JUMPDEST 
0x82: V40 = CALLVALUE
0x83: V41 = ISZERO V40
0x84: V42 = 0x8c
0x87: JUMPI 0x8c V41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x81]
Successors: []
---
0x88 PUSH1 0x0
0x8a DUP1
0x8b REVERT
---
0x88: V43 = 0x0
0x8b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0xcd]
---
Predecessors: [0x81]
Successors: [0x1f8]
---
0x8c JUMPDEST
0x8d PUSH2 0x7d
0x90 PUSH1 0x1
0x92 PUSH1 0xa0
0x94 PUSH1 0x2
0x96 EXP
0x97 SUB
0x98 PUSH1 0x4
0x9a CALLDATALOAD
0x9b DUP2
0x9c AND
0x9d SWAP1
0x9e PUSH1 0x24
0xa0 CALLDATALOAD
0xa1 DUP2
0xa2 AND
0xa3 SWAP1
0xa4 PUSH1 0x44
0xa6 CALLDATALOAD
0xa7 SWAP1
0xa8 PUSH1 0x64
0xaa CALLDATALOAD
0xab SWAP1
0xac PUSH1 0x84
0xae CALLDATALOAD
0xaf SWAP1
0xb0 PUSH1 0xa4
0xb2 CALLDATALOAD
0xb3 SWAP1
0xb4 PUSH1 0xc4
0xb6 CALLDATALOAD
0xb7 AND
0xb8 PUSH1 0xff
0xba PUSH1 0xe4
0xbc CALLDATALOAD
0xbd AND
0xbe PUSH2 0x104
0xc1 CALLDATALOAD
0xc2 PUSH2 0x124
0xc5 CALLDATALOAD
0xc6 PUSH2 0x144
0xc9 CALLDATALOAD
0xca PUSH2 0x1f8
0xcd JUMP
---
0x8c: JUMPDEST 
0x8d: V44 = 0x7d
0x90: V45 = 0x1
0x92: V46 = 0xa0
0x94: V47 = 0x2
0x96: V48 = EXP 0x2 0xa0
0x97: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98: V50 = 0x4
0x9a: V51 = CALLDATALOAD 0x4
0x9c: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0x9e: V53 = 0x24
0xa0: V54 = CALLDATALOAD 0x24
0xa2: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xa4: V56 = 0x44
0xa6: V57 = CALLDATALOAD 0x44
0xa8: V58 = 0x64
0xaa: V59 = CALLDATALOAD 0x64
0xac: V60 = 0x84
0xae: V61 = CALLDATALOAD 0x84
0xb0: V62 = 0xa4
0xb2: V63 = CALLDATALOAD 0xa4
0xb4: V64 = 0xc4
0xb6: V65 = CALLDATALOAD 0xc4
0xb7: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V67 = 0xff
0xba: V68 = 0xe4
0xbc: V69 = CALLDATALOAD 0xe4
0xbd: V70 = AND V69 0xff
0xbe: V71 = 0x104
0xc1: V72 = CALLDATALOAD 0x104
0xc2: V73 = 0x124
0xc5: V74 = CALLDATALOAD 0x124
0xc6: V75 = 0x144
0xc9: V76 = CALLDATALOAD 0x144
0xca: V77 = 0x1f8
0xcd: JUMP 0x1f8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76]
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76]

================================

Block 0xce
[0xce:0xcf]
---
Predecessors: []
Successors: []
---
0xce JUMPDEST
0xcf STOP
---
0xce: JUMPDEST 
0xcf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd0
[0xd0:0xd6]
---
Predecessors: [0x25]
Successors: [0xd7, 0xdb]
---
0xd0 JUMPDEST
0xd1 CALLVALUE
0xd2 ISZERO
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0xd0: JUMPDEST 
0xd1: V78 = CALLVALUE
0xd2: V79 = ISZERO V78
0xd3: V80 = 0xdb
0xd6: JUMPI 0xdb V79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0xd0]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V81 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdb
[0xdb:0xe5]
---
Predecessors: [0xd0]
Successors: [0x42e]
---
0xdb JUMPDEST
0xdc PUSH2 0x7d
0xdf PUSH1 0x4
0xe1 CALLDATALOAD
0xe2 PUSH2 0x42e
0xe5 JUMP
---
0xdb: JUMPDEST 
0xdc: V82 = 0x7d
0xdf: V83 = 0x4
0xe1: V84 = CALLDATALOAD 0x4
0xe2: V85 = 0x42e
0xe5: JUMP 0x42e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V84]
Exit stack: [V12, 0x7d, V84]

================================

Block 0xe6
[0xe6:0xe7]
---
Predecessors: []
Successors: []
---
0xe6 JUMPDEST
0xe7 STOP
---
0xe6: JUMPDEST 
0xe7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0x30]
Successors: [0xef, 0xf3]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V86 = CALLVALUE
0xea: V87 = ISZERO V86
0xeb: V88 = 0xf3
0xee: JUMPI 0xf3 V87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xe8]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V89 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf3
[0xf3:0xfd]
---
Predecessors: [0xe8]
Successors: [0x4a6]
---
0xf3 JUMPDEST
0xf4 PUSH2 0x7d
0xf7 PUSH1 0x4
0xf9 CALLDATALOAD
0xfa PUSH2 0x4a6
0xfd JUMP
---
0xf3: JUMPDEST 
0xf4: V90 = 0x7d
0xf7: V91 = 0x4
0xf9: V92 = CALLDATALOAD 0x4
0xfa: V93 = 0x4a6
0xfd: JUMP 0x4a6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V92]
Exit stack: [V12, 0x7d, V92]

================================

Block 0xfe
[0xfe:0xff]
---
Predecessors: []
Successors: []
---
0xfe JUMPDEST
0xff STOP
---
0xfe: JUMPDEST 
0xff: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x3b]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V94 = CALLVALUE
0x102: V95 = ISZERO V94
0x103: V96 = 0x10b
0x106: JUMPI 0x10b V95
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V97 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x100]
Successors: [0x4f9]
---
0x10b JUMPDEST
0x10c PUSH2 0x7d
0x10f PUSH2 0x4f9
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V98 = 0x7d
0x10f: V99 = 0x4f9
0x112: JUMP 0x4f9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0x113
[0x113:0x114]
---
Predecessors: []
Successors: []
---
0x113 JUMPDEST
0x114 STOP
---
0x113: JUMPDEST 
0x114: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x115
[0x115:0x11b]
---
Predecessors: [0x46]
Successors: [0x11c, 0x120]
---
0x115 JUMPDEST
0x116 CALLVALUE
0x117 ISZERO
0x118 PUSH2 0x120
0x11b JUMPI
---
0x115: JUMPDEST 
0x116: V100 = CALLVALUE
0x117: V101 = ISZERO V100
0x118: V102 = 0x120
0x11b: JUMPI 0x120 V101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x115]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V103 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x120
[0x120:0x161]
---
Predecessors: [0x115]
Successors: [0x525]
---
0x120 JUMPDEST
0x121 PUSH2 0x162
0x124 PUSH1 0x1
0x126 PUSH1 0xa0
0x128 PUSH1 0x2
0x12a EXP
0x12b SUB
0x12c PUSH1 0x4
0x12e CALLDATALOAD
0x12f DUP2
0x130 AND
0x131 SWAP1
0x132 PUSH1 0x24
0x134 CALLDATALOAD
0x135 SWAP1
0x136 PUSH1 0x44
0x138 CALLDATALOAD
0x139 DUP2
0x13a AND
0x13b SWAP1
0x13c PUSH1 0x64
0x13e CALLDATALOAD
0x13f SWAP1
0x140 PUSH1 0x84
0x142 CALLDATALOAD
0x143 SWAP1
0x144 PUSH1 0xa4
0x146 CALLDATALOAD
0x147 SWAP1
0x148 PUSH1 0xc4
0x14a CALLDATALOAD
0x14b AND
0x14c PUSH1 0xff
0x14e PUSH1 0xe4
0x150 CALLDATALOAD
0x151 AND
0x152 PUSH2 0x104
0x155 CALLDATALOAD
0x156 PUSH2 0x124
0x159 CALLDATALOAD
0x15a PUSH2 0x144
0x15d CALLDATALOAD
0x15e PUSH2 0x525
0x161 JUMP
---
0x120: JUMPDEST 
0x121: V104 = 0x162
0x124: V105 = 0x1
0x126: V106 = 0xa0
0x128: V107 = 0x2
0x12a: V108 = EXP 0x2 0xa0
0x12b: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12c: V110 = 0x4
0x12e: V111 = CALLDATALOAD 0x4
0x130: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x132: V113 = 0x24
0x134: V114 = CALLDATALOAD 0x24
0x136: V115 = 0x44
0x138: V116 = CALLDATALOAD 0x44
0x13a: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x13c: V118 = 0x64
0x13e: V119 = CALLDATALOAD 0x64
0x140: V120 = 0x84
0x142: V121 = CALLDATALOAD 0x84
0x144: V122 = 0xa4
0x146: V123 = CALLDATALOAD 0xa4
0x148: V124 = 0xc4
0x14a: V125 = CALLDATALOAD 0xc4
0x14b: V126 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x14c: V127 = 0xff
0x14e: V128 = 0xe4
0x150: V129 = CALLDATALOAD 0xe4
0x151: V130 = AND V129 0xff
0x152: V131 = 0x104
0x155: V132 = CALLDATALOAD 0x104
0x156: V133 = 0x124
0x159: V134 = CALLDATALOAD 0x124
0x15a: V135 = 0x144
0x15d: V136 = CALLDATALOAD 0x144
0x15e: V137 = 0x525
0x161: JUMP 0x525
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136]
Exit stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136]

================================

Block 0x162
[0x162:0x175]
---
Predecessors: [0x5fd]
Successors: []
---
0x162 JUMPDEST
0x163 PUSH1 0x40
0x165 MLOAD
0x166 SWAP1
0x167 ISZERO
0x168 ISZERO
0x169 DUP2
0x16a MSTORE
0x16b PUSH1 0x20
0x16d ADD
0x16e PUSH1 0x40
0x170 MLOAD
0x171 DUP1
0x172 SWAP2
0x173 SUB
0x174 SWAP1
0x175 RETURN
---
0x162: JUMPDEST 
0x163: V138 = 0x40
0x165: V139 = M[0x40]
0x167: V140 = ISZERO V564
0x168: V141 = ISZERO V140
0x16a: M[V139] = V141
0x16b: V142 = 0x20
0x16d: V143 = ADD 0x20 V139
0x16e: V144 = 0x40
0x170: V145 = M[0x40]
0x173: V146 = SUB V143 V145
0x175: RETURN V145 V146
---
Entry stack: [V12, V564]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x176
[0x176:0x17c]
---
Predecessors: [0x51]
Successors: [0x17d, 0x181]
---
0x176 JUMPDEST
0x177 CALLVALUE
0x178 ISZERO
0x179 PUSH2 0x181
0x17c JUMPI
---
0x176: JUMPDEST 
0x177: V147 = CALLVALUE
0x178: V148 = ISZERO V147
0x179: V149 = 0x181
0x17c: JUMPI 0x181 V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x176]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V150 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x181
[0x181:0x194]
---
Predecessors: [0x176]
Successors: [0x60d]
---
0x181 JUMPDEST
0x182 PUSH2 0x195
0x185 PUSH1 0x1
0x187 PUSH1 0xa0
0x189 PUSH1 0x2
0x18b EXP
0x18c SUB
0x18d PUSH1 0x4
0x18f CALLDATALOAD
0x190 AND
0x191 PUSH2 0x60d
0x194 JUMP
---
0x181: JUMPDEST 
0x182: V151 = 0x195
0x185: V152 = 0x1
0x187: V153 = 0xa0
0x189: V154 = 0x2
0x18b: V155 = EXP 0x2 0xa0
0x18c: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18d: V157 = 0x4
0x18f: V158 = CALLDATALOAD 0x4
0x190: V159 = AND V158 0xffffffffffffffffffffffffffffffffffffffff
0x191: V160 = 0x60d
0x194: JUMP 0x60d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x195, V159]
Exit stack: [V12, 0x195, V159]

================================

Block 0x195
[0x195:0x1a6]
---
Predecessors: [0x68e]
Successors: []
---
0x195 JUMPDEST
0x196 PUSH1 0x40
0x198 MLOAD
0x199 SWAP1
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x20
0x19e ADD
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 DUP1
0x1a3 SWAP2
0x1a4 SUB
0x1a5 SWAP1
0x1a6 RETURN
---
0x195: JUMPDEST 
0x196: V161 = 0x40
0x198: V162 = M[0x40]
0x19b: M[V162] = V621
0x19c: V163 = 0x20
0x19e: V164 = ADD 0x20 V162
0x19f: V165 = 0x40
0x1a1: V166 = M[0x40]
0x1a4: V167 = SUB V164 V166
0x1a6: RETURN V166 V167
---
Entry stack: [V12, V621]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a7
[0x1a7:0x1ad]
---
Predecessors: [0x5c]
Successors: [0x1ae, 0x1b2]
---
0x1a7 JUMPDEST
0x1a8 CALLVALUE
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V168 = CALLVALUE
0x1a9: V169 = ISZERO V168
0x1aa: V170 = 0x1b2
0x1ad: JUMPI 0x1b2 V169
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x1a7]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V171 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b2
[0x1b2:0x1b9]
---
Predecessors: [0x1a7]
Successors: [0x694]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x1ba
0x1b6 PUSH2 0x694
0x1b9 JUMP
---
0x1b2: JUMPDEST 
0x1b3: V172 = 0x1ba
0x1b6: V173 = 0x694
0x1b9: JUMP 0x694
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V12, 0x1ba]

================================

Block 0x1ba
[0x1ba:0x1d5]
---
Predecessors: [0x694]
Successors: []
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be PUSH1 0x1
0x1c0 PUSH1 0xa0
0x1c2 PUSH1 0x2
0x1c4 EXP
0x1c5 SUB
0x1c6 SWAP1
0x1c7 SWAP2
0x1c8 AND
0x1c9 DUP2
0x1ca MSTORE
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 DUP1
0x1d2 SWAP2
0x1d3 SUB
0x1d4 SWAP1
0x1d5 RETURN
---
0x1ba: JUMPDEST 
0x1bb: V174 = 0x40
0x1bd: V175 = M[0x40]
0x1be: V176 = 0x1
0x1c0: V177 = 0xa0
0x1c2: V178 = 0x2
0x1c4: V179 = EXP 0x2 0xa0
0x1c5: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V181 = AND V629 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: M[V175] = V181
0x1cb: V182 = 0x20
0x1cd: V183 = ADD 0x20 V175
0x1ce: V184 = 0x40
0x1d0: V185 = M[0x40]
0x1d3: V186 = SUB V183 V185
0x1d5: RETURN V185 V186
---
Entry stack: [V12, 0x1ba, V629]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x67]
Successors: [0x522]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x7d
0x1da PUSH2 0x522
0x1dd JUMP
---
0x1d6: JUMPDEST 
0x1d7: V187 = 0x7d
0x1da: V188 = 0x522
0x1dd: JUMP 0x522
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0x1de
[0x1de:0x1df]
---
Predecessors: []
Successors: []
---
0x1de JUMPDEST
0x1df STOP
---
0x1de: JUMPDEST 
0x1df: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e0
[0x1e0:0x1e6]
---
Predecessors: [0x72]
Successors: [0x1e7, 0x1eb]
---
0x1e0 JUMPDEST
0x1e1 CALLVALUE
0x1e2 ISZERO
0x1e3 PUSH2 0x1eb
0x1e6 JUMPI
---
0x1e0: JUMPDEST 
0x1e1: V189 = CALLVALUE
0x1e2: V190 = ISZERO V189
0x1e3: V191 = 0x1eb
0x1e6: JUMPI 0x1eb V190
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e7
[0x1e7:0x1ea]
---
Predecessors: [0x1e0]
Successors: []
---
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea REVERT
---
0x1e7: V192 = 0x0
0x1ea: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1eb
[0x1eb:0x1f5]
---
Predecessors: [0x1e0]
Successors: [0x6a6]
---
0x1eb JUMPDEST
0x1ec PUSH2 0x7d
0x1ef PUSH1 0x4
0x1f1 CALLDATALOAD
0x1f2 PUSH2 0x6a6
0x1f5 JUMP
---
0x1eb: JUMPDEST 
0x1ec: V193 = 0x7d
0x1ef: V194 = 0x4
0x1f1: V195 = CALLDATALOAD 0x4
0x1f2: V196 = 0x6a6
0x1f5: JUMP 0x6a6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V195]
Exit stack: [V12, 0x7d, V195]

================================

Block 0x1f6
[0x1f6:0x1f7]
---
Predecessors: []
Successors: []
---
0x1f6 JUMPDEST
0x1f7 STOP
---
0x1f6: JUMPDEST 
0x1f7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f8
[0x1f8:0x20f]
---
Predecessors: [0x8c]
Successors: [0x210, 0x214]
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc SLOAD
0x1fd CALLER
0x1fe PUSH1 0x1
0x200 PUSH1 0xa0
0x202 PUSH1 0x2
0x204 EXP
0x205 SUB
0x206 SWAP1
0x207 DUP2
0x208 AND
0x209 SWAP2
0x20a AND
0x20b EQ
0x20c PUSH2 0x214
0x20f JUMPI
---
0x1f8: JUMPDEST 
0x1f9: V197 = 0x0
0x1fc: V198 = S[0x0]
0x1fd: V199 = CALLER
0x1fe: V200 = 0x1
0x200: V201 = 0xa0
0x202: V202 = 0x2
0x204: V203 = EXP 0x2 0xa0
0x205: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x208: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x20a: V206 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V207 = EQ V206 V205
0x20c: V208 = 0x214
0x20f: JUMPI 0x214 V207
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, 0x0]

================================

Block 0x210
[0x210:0x213]
---
Predecessors: [0x1f8]
Successors: []
---
0x210 PUSH1 0x0
0x212 DUP1
0x213 REVERT
---
0x210: V209 = 0x0
0x213: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, 0x0]

================================

Block 0x214
[0x214:0x2c9]
---
Predecessors: [0x1f8]
Successors: [0x2ca, 0x2ce]
---
0x214 JUMPDEST
0x215 POP
0x216 PUSH1 0x1
0x218 SLOAD
0x219 PUSH1 0x1
0x21b PUSH1 0xa0
0x21d PUSH1 0x2
0x21f EXP
0x220 SUB
0x221 AND
0x222 DUP1
0x223 PUSH4 0x6c86888b
0x228 DUP13
0x229 DUP13
0x22a DUP16
0x22b DUP14
0x22c DUP13
0x22d DUP15
0x22e DUP14
0x22f DUP14
0x230 DUP13
0x231 DUP15
0x232 DUP14
0x233 ADDRESS
0x234 PUSH1 0x0
0x236 PUSH1 0x40
0x238 MLOAD
0x239 PUSH1 0x20
0x23b ADD
0x23c MSTORE
0x23d PUSH1 0x40
0x23f MLOAD
0x240 PUSH1 0xe0
0x242 PUSH1 0x2
0x244 EXP
0x245 PUSH4 0xffffffff
0x24a DUP16
0x24b AND
0x24c MUL
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 SWAP13
0x258 DUP14
0x259 AND
0x25a PUSH1 0x4
0x25c DUP3
0x25d ADD
0x25e MSTORE
0x25f PUSH1 0x24
0x261 DUP2
0x262 ADD
0x263 SWAP12
0x264 SWAP1
0x265 SWAP12
0x266 MSTORE
0x267 SWAP9
0x268 DUP12
0x269 AND
0x26a PUSH1 0x44
0x26c DUP12
0x26d ADD
0x26e MSTORE
0x26f PUSH1 0x64
0x271 DUP11
0x272 ADD
0x273 SWAP8
0x274 SWAP1
0x275 SWAP8
0x276 MSTORE
0x277 PUSH1 0x84
0x279 DUP10
0x27a ADD
0x27b SWAP6
0x27c SWAP1
0x27d SWAP6
0x27e MSTORE
0x27f PUSH1 0xa4
0x281 DUP9
0x282 ADD
0x283 SWAP4
0x284 SWAP1
0x285 SWAP4
0x286 MSTORE
0x287 SWAP1
0x288 DUP8
0x289 AND
0x28a PUSH1 0xc4
0x28c DUP8
0x28d ADD
0x28e MSTORE
0x28f PUSH1 0xff
0x291 AND
0x292 PUSH1 0xe4
0x294 DUP7
0x295 ADD
0x296 MSTORE
0x297 PUSH2 0x104
0x29a DUP6
0x29b ADD
0x29c MSTORE
0x29d PUSH2 0x124
0x2a0 DUP5
0x2a1 ADD
0x2a2 MSTORE
0x2a3 PUSH2 0x144
0x2a6 DUP4
0x2a7 ADD
0x2a8 MSTORE
0x2a9 SWAP1
0x2aa SWAP2
0x2ab AND
0x2ac PUSH2 0x164
0x2af DUP3
0x2b0 ADD
0x2b1 MSTORE
0x2b2 PUSH2 0x184
0x2b5 ADD
0x2b6 PUSH1 0x20
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb DUP1
0x2bc DUP4
0x2bd SUB
0x2be DUP2
0x2bf PUSH1 0x0
0x2c1 DUP8
0x2c2 DUP1
0x2c3 EXTCODESIZE
0x2c4 ISZERO
0x2c5 ISZERO
0x2c6 PUSH2 0x2ce
0x2c9 JUMPI
---
0x214: JUMPDEST 
0x216: V210 = 0x1
0x218: V211 = S[0x1]
0x219: V212 = 0x1
0x21b: V213 = 0xa0
0x21d: V214 = 0x2
0x21f: V215 = EXP 0x2 0xa0
0x220: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x221: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x223: V218 = 0x6c86888b
0x233: V219 = ADDRESS
0x234: V220 = 0x0
0x236: V221 = 0x40
0x238: V222 = M[0x40]
0x239: V223 = 0x20
0x23b: V224 = ADD 0x20 V222
0x23c: M[V224] = 0x0
0x23d: V225 = 0x40
0x23f: V226 = M[0x40]
0x240: V227 = 0xe0
0x242: V228 = 0x2
0x244: V229 = EXP 0x2 0xe0
0x245: V230 = 0xffffffff
0x24b: V231 = AND 0x6c86888b 0xffffffff
0x24c: V232 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x24e: M[V226] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x24f: V233 = 0x1
0x251: V234 = 0xa0
0x253: V235 = 0x2
0x255: V236 = EXP 0x2 0xa0
0x256: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x259: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x25a: V239 = 0x4
0x25d: V240 = ADD V226 0x4
0x25e: M[V240] = V238
0x25f: V241 = 0x24
0x262: V242 = ADD V226 0x24
0x266: M[V242] = V57
0x269: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x26a: V244 = 0x44
0x26d: V245 = ADD V226 0x44
0x26e: M[V245] = V243
0x26f: V246 = 0x64
0x272: V247 = ADD V226 0x64
0x276: M[V247] = V59
0x277: V248 = 0x84
0x27a: V249 = ADD V226 0x84
0x27e: M[V249] = V63
0x27f: V250 = 0xa4
0x282: V251 = ADD V226 0xa4
0x286: M[V251] = V61
0x289: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x28a: V253 = 0xc4
0x28d: V254 = ADD V226 0xc4
0x28e: M[V254] = V252
0x28f: V255 = 0xff
0x291: V256 = AND 0xff V70
0x292: V257 = 0xe4
0x295: V258 = ADD V226 0xe4
0x296: M[V258] = V256
0x297: V259 = 0x104
0x29b: V260 = ADD V226 0x104
0x29c: M[V260] = V74
0x29d: V261 = 0x124
0x2a1: V262 = ADD V226 0x124
0x2a2: M[V262] = V72
0x2a3: V263 = 0x144
0x2a7: V264 = ADD V226 0x144
0x2a8: M[V264] = V76
0x2ab: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x2ac: V266 = 0x164
0x2b0: V267 = ADD V226 0x164
0x2b1: M[V267] = V265
0x2b2: V268 = 0x184
0x2b5: V269 = ADD 0x184 V226
0x2b6: V270 = 0x20
0x2b8: V271 = 0x40
0x2ba: V272 = M[0x40]
0x2bd: V273 = SUB V269 V272
0x2bf: V274 = 0x0
0x2c3: V275 = EXTCODESIZE V217
0x2c4: V276 = ISZERO V275
0x2c5: V277 = ISZERO V276
0x2c6: V278 = 0x2ce
0x2c9: JUMPI 0x2ce V277
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V217, V217, 0x6c86888b, V269, 0x20, V272, V273, V272, 0x0, V217]
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V217, 0x6c86888b, V269, 0x20, V272, V273, V272, 0x0, V217]

================================

Block 0x2ca
[0x2ca:0x2cd]
---
Predecessors: [0x214]
Successors: []
---
0x2ca PUSH1 0x0
0x2cc DUP1
0x2cd REVERT
---
0x2ca: V279 = 0x0
0x2cd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V217, 0x6c86888b, V269, 0x20, V272, V273, V272, 0x0, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V217, 0x6c86888b, V269, 0x20, V272, V273, V272, 0x0, V217]

================================

Block 0x2ce
[0x2ce:0x2da]
---
Predecessors: [0x214]
Successors: [0x2db, 0x2df]
---
0x2ce JUMPDEST
0x2cf PUSH2 0x2c6
0x2d2 GAS
0x2d3 SUB
0x2d4 CALL
0x2d5 ISZERO
0x2d6 ISZERO
0x2d7 PUSH2 0x2df
0x2da JUMPI
---
0x2ce: JUMPDEST 
0x2cf: V280 = 0x2c6
0x2d2: V281 = GAS
0x2d3: V282 = SUB V281 0x2c6
0x2d4: V283 = CALL V282 V217 0x0 V272 V273 V272 0x20
0x2d5: V284 = ISZERO V283
0x2d6: V285 = ISZERO V284
0x2d7: V286 = 0x2df
0x2da: JUMPI 0x2df V285
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V217, 0x6c86888b, V269, 0x20, V272, V273, V272, 0x0, V217]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V217, 0x6c86888b, V269]

================================

Block 0x2db
[0x2db:0x2de]
---
Predecessors: [0x2ce]
Successors: []
---
0x2db PUSH1 0x0
0x2dd DUP1
0x2de REVERT
---
0x2db: V287 = 0x0
0x2de: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V217, 0x6c86888b, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V217, 0x6c86888b, V269]

================================

Block 0x2df
[0x2df:0x2ee]
---
Predecessors: [0x2ce]
Successors: [0x2ef, 0x3e9]
---
0x2df JUMPDEST
0x2e0 POP
0x2e1 POP
0x2e2 POP
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 DUP1
0x2e7 MLOAD
0x2e8 SWAP1
0x2e9 POP
0x2ea ISZERO
0x2eb PUSH2 0x3e9
0x2ee JUMPI
---
0x2df: JUMPDEST 
0x2e3: V288 = 0x40
0x2e5: V289 = M[0x40]
0x2e7: V290 = M[V289]
0x2ea: V291 = ISZERO V290
0x2eb: V292 = 0x3e9
0x2ee: JUMPI 0x3e9 V291
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V217, 0x6c86888b, V269]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217]

================================

Block 0x2ef
[0x2ef:0x3cb]
---
Predecessors: [0x2df]
Successors: [0x3cc, 0x3d0]
---
0x2ef PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x310 PUSH1 0x0
0x312 PUSH1 0x40
0x314 MLOAD
0x315 SWAP1
0x316 DUP2
0x317 MSTORE
0x318 PUSH1 0x20
0x31a ADD
0x31b PUSH1 0x40
0x31d MLOAD
0x31e DUP1
0x31f SWAP2
0x320 SUB
0x321 SWAP1
0x322 LOG1
0x323 DUP1
0x324 PUSH1 0x1
0x326 PUSH1 0xa0
0x328 PUSH1 0x2
0x32a EXP
0x32b SUB
0x32c AND
0x32d PUSH4 0xa19b14a
0x332 DUP13
0x333 DUP13
0x334 DUP16
0x335 DUP14
0x336 DUP13
0x337 DUP15
0x338 DUP14
0x339 DUP14
0x33a DUP13
0x33b DUP15
0x33c DUP14
0x33d PUSH1 0x40
0x33f MLOAD
0x340 PUSH1 0xe0
0x342 PUSH1 0x2
0x344 EXP
0x345 PUSH4 0xffffffff
0x34a DUP15
0x34b AND
0x34c MUL
0x34d DUP2
0x34e MSTORE
0x34f PUSH1 0x1
0x351 PUSH1 0xa0
0x353 PUSH1 0x2
0x355 EXP
0x356 SUB
0x357 SWAP12
0x358 DUP13
0x359 AND
0x35a PUSH1 0x4
0x35c DUP3
0x35d ADD
0x35e MSTORE
0x35f PUSH1 0x24
0x361 DUP2
0x362 ADD
0x363 SWAP11
0x364 SWAP1
0x365 SWAP11
0x366 MSTORE
0x367 SWAP8
0x368 DUP11
0x369 AND
0x36a PUSH1 0x44
0x36c DUP11
0x36d ADD
0x36e MSTORE
0x36f PUSH1 0x64
0x371 DUP10
0x372 ADD
0x373 SWAP7
0x374 SWAP1
0x375 SWAP7
0x376 MSTORE
0x377 PUSH1 0x84
0x379 DUP9
0x37a ADD
0x37b SWAP5
0x37c SWAP1
0x37d SWAP5
0x37e MSTORE
0x37f PUSH1 0xa4
0x381 DUP8
0x382 ADD
0x383 SWAP3
0x384 SWAP1
0x385 SWAP3
0x386 MSTORE
0x387 SWAP1
0x388 SWAP6
0x389 AND
0x38a PUSH1 0xc4
0x38c DUP6
0x38d ADD
0x38e MSTORE
0x38f PUSH1 0xff
0x391 SWAP1
0x392 SWAP5
0x393 AND
0x394 PUSH1 0xe4
0x396 DUP5
0x397 ADD
0x398 MSTORE
0x399 PUSH2 0x104
0x39c DUP4
0x39d ADD
0x39e SWAP4
0x39f SWAP1
0x3a0 SWAP4
0x3a1 MSTORE
0x3a2 PUSH2 0x124
0x3a5 DUP3
0x3a6 ADD
0x3a7 SWAP3
0x3a8 SWAP1
0x3a9 SWAP3
0x3aa MSTORE
0x3ab PUSH2 0x144
0x3ae DUP2
0x3af ADD
0x3b0 SWAP2
0x3b1 SWAP1
0x3b2 SWAP2
0x3b3 MSTORE
0x3b4 PUSH2 0x164
0x3b7 ADD
0x3b8 PUSH1 0x0
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd DUP1
0x3be DUP4
0x3bf SUB
0x3c0 DUP2
0x3c1 PUSH1 0x0
0x3c3 DUP8
0x3c4 DUP1
0x3c5 EXTCODESIZE
0x3c6 ISZERO
0x3c7 ISZERO
0x3c8 PUSH2 0x3d0
0x3cb JUMPI
---
0x2ef: V293 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x310: V294 = 0x0
0x312: V295 = 0x40
0x314: V296 = M[0x40]
0x317: M[V296] = 0x0
0x318: V297 = 0x20
0x31a: V298 = ADD 0x20 V296
0x31b: V299 = 0x40
0x31d: V300 = M[0x40]
0x320: V301 = SUB V298 V300
0x322: LOG V300 V301 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x324: V302 = 0x1
0x326: V303 = 0xa0
0x328: V304 = 0x2
0x32a: V305 = EXP 0x2 0xa0
0x32b: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32c: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x32d: V308 = 0xa19b14a
0x33d: V309 = 0x40
0x33f: V310 = M[0x40]
0x340: V311 = 0xe0
0x342: V312 = 0x2
0x344: V313 = EXP 0x2 0xe0
0x345: V314 = 0xffffffff
0x34b: V315 = AND 0xa19b14a 0xffffffff
0x34c: V316 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x34e: M[V310] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x34f: V317 = 0x1
0x351: V318 = 0xa0
0x353: V319 = 0x2
0x355: V320 = EXP 0x2 0xa0
0x356: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x359: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x35a: V323 = 0x4
0x35d: V324 = ADD V310 0x4
0x35e: M[V324] = V322
0x35f: V325 = 0x24
0x362: V326 = ADD V310 0x24
0x366: M[V326] = V57
0x369: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x36a: V328 = 0x44
0x36d: V329 = ADD V310 0x44
0x36e: M[V329] = V327
0x36f: V330 = 0x64
0x372: V331 = ADD V310 0x64
0x376: M[V331] = V59
0x377: V332 = 0x84
0x37a: V333 = ADD V310 0x84
0x37e: M[V333] = V63
0x37f: V334 = 0xa4
0x382: V335 = ADD V310 0xa4
0x386: M[V335] = V61
0x389: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x38a: V337 = 0xc4
0x38d: V338 = ADD V310 0xc4
0x38e: M[V338] = V336
0x38f: V339 = 0xff
0x393: V340 = AND V70 0xff
0x394: V341 = 0xe4
0x397: V342 = ADD V310 0xe4
0x398: M[V342] = V340
0x399: V343 = 0x104
0x39d: V344 = ADD V310 0x104
0x3a1: M[V344] = V74
0x3a2: V345 = 0x124
0x3a6: V346 = ADD V310 0x124
0x3aa: M[V346] = V72
0x3ab: V347 = 0x144
0x3af: V348 = ADD V310 0x144
0x3b3: M[V348] = V76
0x3b4: V349 = 0x164
0x3b7: V350 = ADD 0x164 V310
0x3b8: V351 = 0x0
0x3ba: V352 = 0x40
0x3bc: V353 = M[0x40]
0x3bf: V354 = SUB V350 V353
0x3c1: V355 = 0x0
0x3c5: V356 = EXTCODESIZE V307
0x3c6: V357 = ISZERO V356
0x3c7: V358 = ISZERO V357
0x3c8: V359 = 0x3d0
0x3cb: JUMPI 0x3d0 V358
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V307, 0xa19b14a, V350, 0x0, V353, V354, V353, 0x0, V307]
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V307, 0xa19b14a, V350, 0x0, V353, V354, V353, 0x0, V307]

================================

Block 0x3cc
[0x3cc:0x3cf]
---
Predecessors: [0x2ef]
Successors: []
---
0x3cc PUSH1 0x0
0x3ce DUP1
0x3cf REVERT
---
0x3cc: V360 = 0x0
0x3cf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V307, 0xa19b14a, V350, 0x0, V353, V354, V353, 0x0, V307]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V307, 0xa19b14a, V350, 0x0, V353, V354, V353, 0x0, V307]

================================

Block 0x3d0
[0x3d0:0x3dc]
---
Predecessors: [0x2ef]
Successors: [0x3dd, 0x3e1]
---
0x3d0 JUMPDEST
0x3d1 PUSH2 0x2c6
0x3d4 GAS
0x3d5 SUB
0x3d6 CALL
0x3d7 ISZERO
0x3d8 ISZERO
0x3d9 PUSH2 0x3e1
0x3dc JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V361 = 0x2c6
0x3d4: V362 = GAS
0x3d5: V363 = SUB V362 0x2c6
0x3d6: V364 = CALL V363 V307 0x0 V353 V354 V353 0x0
0x3d7: V365 = ISZERO V364
0x3d8: V366 = ISZERO V365
0x3d9: V367 = 0x3e1
0x3dc: JUMPI 0x3e1 V366
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V307, 0xa19b14a, V350, 0x0, V353, V354, V353, 0x0, V307]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V307, 0xa19b14a, V350]

================================

Block 0x3dd
[0x3dd:0x3e0]
---
Predecessors: [0x3d0]
Successors: []
---
0x3dd PUSH1 0x0
0x3df DUP1
0x3e0 REVERT
---
0x3dd: V368 = 0x0
0x3e0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V307, 0xa19b14a, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V307, 0xa19b14a, V350]

================================

Block 0x3e1
[0x3e1:0x3e8]
---
Predecessors: [0x3d0]
Successors: [0x41e]
---
0x3e1 JUMPDEST
0x3e2 POP
0x3e3 POP
0x3e4 POP
0x3e5 PUSH2 0x41e
0x3e8 JUMP
---
0x3e1: JUMPDEST 
0x3e5: V369 = 0x41e
0x3e8: JUMP 0x41e
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217, V307, 0xa19b14a, V350]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217]

================================

Block 0x3e9
[0x3e9:0x41d]
---
Predecessors: [0x2df]
Successors: [0x41e]
---
0x3e9 JUMPDEST
0x3ea PUSH32 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x40b PUSH1 0x1
0x40d PUSH1 0x40
0x40f MLOAD
0x410 SWAP1
0x411 DUP2
0x412 MSTORE
0x413 PUSH1 0x20
0x415 ADD
0x416 PUSH1 0x40
0x418 MLOAD
0x419 DUP1
0x41a SWAP2
0x41b SUB
0x41c SWAP1
0x41d LOG1
---
0x3e9: JUMPDEST 
0x3ea: V370 = 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
0x40b: V371 = 0x1
0x40d: V372 = 0x40
0x40f: V373 = M[0x40]
0x412: M[V373] = 0x1
0x413: V374 = 0x20
0x415: V375 = ADD 0x20 V373
0x416: V376 = 0x40
0x418: V377 = M[0x40]
0x41b: V378 = SUB V375 V377
0x41d: LOG V377 V378 0x34d6d9becd7a327109612b0e636ca3bea6263a273c0256df42fbdf3d92e467f9
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217]

================================

Block 0x41e
[0x41e:0x41e]
---
Predecessors: [0x3e1, 0x3e9]
Successors: [0x41f]
---
0x41e JUMPDEST
---
0x41e: JUMPDEST 
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217]

================================

Block 0x41f
[0x41f:0x41f]
---
Predecessors: [0x41e]
Successors: [0x420]
---
0x41f JUMPDEST
---
0x41f: JUMPDEST 
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217]

================================

Block 0x420
[0x420:0x42d]
---
Predecessors: [0x41f]
Successors: [0x7d]
---
0x420 JUMPDEST
0x421 POP
0x422 POP
0x423 POP
0x424 POP
0x425 POP
0x426 POP
0x427 POP
0x428 POP
0x429 POP
0x42a POP
0x42b POP
0x42c POP
0x42d JUMP
---
0x420: JUMPDEST 
0x42d: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V52, V55, V57, V59, V61, V63, V66, V70, V72, V74, V76, V217]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0x42e
[0x42e:0x445]
---
Predecessors: [0xdb]
Successors: [0x446, 0x44a]
---
0x42e JUMPDEST
0x42f PUSH1 0x0
0x431 DUP1
0x432 SLOAD
0x433 CALLER
0x434 PUSH1 0x1
0x436 PUSH1 0xa0
0x438 PUSH1 0x2
0x43a EXP
0x43b SUB
0x43c SWAP1
0x43d DUP2
0x43e AND
0x43f SWAP2
0x440 AND
0x441 EQ
0x442 PUSH2 0x44a
0x445 JUMPI
---
0x42e: JUMPDEST 
0x42f: V379 = 0x0
0x432: V380 = S[0x0]
0x433: V381 = CALLER
0x434: V382 = 0x1
0x436: V383 = 0xa0
0x438: V384 = 0x2
0x43a: V385 = EXP 0x2 0xa0
0x43b: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43e: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x440: V388 = AND V380 0xffffffffffffffffffffffffffffffffffffffff
0x441: V389 = EQ V388 V387
0x442: V390 = 0x44a
0x445: JUMPI 0x44a V389
---
Entry stack: [V12, 0x7d, V84]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V84, 0x0]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x42e]
Successors: []
---
0x446 PUSH1 0x0
0x448 DUP1
0x449 REVERT
---
0x446: V391 = 0x0
0x449: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V84, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V84, 0x0]

================================

Block 0x44a
[0x44a:0x486]
---
Predecessors: [0x42e]
Successors: [0x487, 0x48b]
---
0x44a JUMPDEST
0x44b POP
0x44c PUSH1 0x1
0x44e SLOAD
0x44f PUSH1 0x1
0x451 PUSH1 0xa0
0x453 PUSH1 0x2
0x455 EXP
0x456 SUB
0x457 AND
0x458 DUP1
0x459 PUSH4 0xd0e30db0
0x45e DUP4
0x45f PUSH1 0x40
0x461 MLOAD
0x462 DUP3
0x463 PUSH4 0xffffffff
0x468 AND
0x469 PUSH1 0xe0
0x46b PUSH1 0x2
0x46d EXP
0x46e MUL
0x46f DUP2
0x470 MSTORE
0x471 PUSH1 0x4
0x473 ADD
0x474 PUSH1 0x0
0x476 PUSH1 0x40
0x478 MLOAD
0x479 DUP1
0x47a DUP4
0x47b SUB
0x47c DUP2
0x47d DUP6
0x47e DUP9
0x47f DUP1
0x480 EXTCODESIZE
0x481 ISZERO
0x482 ISZERO
0x483 PUSH2 0x48b
0x486 JUMPI
---
0x44a: JUMPDEST 
0x44c: V392 = 0x1
0x44e: V393 = S[0x1]
0x44f: V394 = 0x1
0x451: V395 = 0xa0
0x453: V396 = 0x2
0x455: V397 = EXP 0x2 0xa0
0x456: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x457: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x459: V400 = 0xd0e30db0
0x45f: V401 = 0x40
0x461: V402 = M[0x40]
0x463: V403 = 0xffffffff
0x468: V404 = AND 0xffffffff 0xd0e30db0
0x469: V405 = 0xe0
0x46b: V406 = 0x2
0x46d: V407 = EXP 0x2 0xe0
0x46e: V408 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x470: M[V402] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x471: V409 = 0x4
0x473: V410 = ADD 0x4 V402
0x474: V411 = 0x0
0x476: V412 = 0x40
0x478: V413 = M[0x40]
0x47b: V414 = SUB V410 V413
0x480: V415 = EXTCODESIZE V399
0x481: V416 = ISZERO V415
0x482: V417 = ISZERO V416
0x483: V418 = 0x48b
0x486: JUMPI 0x48b V417
---
Entry stack: [V12, 0x7d, V84, 0x0]
Stack pops: 2
Stack additions: [S1, V399, V399, 0xd0e30db0, S1, V410, 0x0, V413, V414, V413, S1, V399]
Exit stack: [V12, 0x7d, V84, V399, V399, 0xd0e30db0, V84, V410, 0x0, V413, V414, V413, V84, V399]

================================

Block 0x487
[0x487:0x48a]
---
Predecessors: [0x44a]
Successors: []
---
0x487 PUSH1 0x0
0x489 DUP1
0x48a REVERT
---
0x487: V419 = 0x0
0x48a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V84, V399, V399, 0xd0e30db0, V84, V410, 0x0, V413, V414, V413, V84, V399]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V84, V399, V399, 0xd0e30db0, V84, V410, 0x0, V413, V414, V413, V84, V399]

================================

Block 0x48b
[0x48b:0x497]
---
Predecessors: [0x44a]
Successors: [0x498, 0x49c]
---
0x48b JUMPDEST
0x48c PUSH2 0x25ee
0x48f GAS
0x490 SUB
0x491 CALL
0x492 ISZERO
0x493 ISZERO
0x494 PUSH2 0x49c
0x497 JUMPI
---
0x48b: JUMPDEST 
0x48c: V420 = 0x25ee
0x48f: V421 = GAS
0x490: V422 = SUB V421 0x25ee
0x491: V423 = CALL V422 V399 V84 V413 V414 V413 0x0
0x492: V424 = ISZERO V423
0x493: V425 = ISZERO V424
0x494: V426 = 0x49c
0x497: JUMPI 0x49c V425
---
Entry stack: [V12, 0x7d, V84, V399, V399, 0xd0e30db0, V84, V410, 0x0, V413, V414, V413, V84, V399]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V84, V399, V399, 0xd0e30db0, V84, V410]

================================

Block 0x498
[0x498:0x49b]
---
Predecessors: [0x48b]
Successors: []
---
0x498 PUSH1 0x0
0x49a DUP1
0x49b REVERT
---
0x498: V427 = 0x0
0x49b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V84, V399, V399, 0xd0e30db0, V84, V410]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V84, V399, V399, 0xd0e30db0, V84, V410]

================================

Block 0x49c
[0x49c:0x4a0]
---
Predecessors: [0x48b]
Successors: [0x4a1]
---
0x49c JUMPDEST
0x49d POP
0x49e POP
0x49f POP
0x4a0 POP
---
0x49c: JUMPDEST 
---
Entry stack: [V12, 0x7d, V84, V399, V399, 0xd0e30db0, V84, V410]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x7d, V84, V399]

================================

Block 0x4a1
[0x4a1:0x4a1]
---
Predecessors: [0x49c]
Successors: [0x4a2]
---
0x4a1 JUMPDEST
---
0x4a1: JUMPDEST 
---
Entry stack: [V12, 0x7d, V84, V399]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V84, V399]

================================

Block 0x4a2
[0x4a2:0x4a5]
---
Predecessors: [0x4a1]
Successors: [0x7d]
---
0x4a2 JUMPDEST
0x4a3 POP
0x4a4 POP
0x4a5 JUMP
---
0x4a2: JUMPDEST 
0x4a5: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V84, V399]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a6
[0x4a6:0x4bc]
---
Predecessors: [0xf3]
Successors: [0x4bd, 0x4c1]
---
0x4a6 JUMPDEST
0x4a7 PUSH1 0x0
0x4a9 SLOAD
0x4aa CALLER
0x4ab PUSH1 0x1
0x4ad PUSH1 0xa0
0x4af PUSH1 0x2
0x4b1 EXP
0x4b2 SUB
0x4b3 SWAP1
0x4b4 DUP2
0x4b5 AND
0x4b6 SWAP2
0x4b7 AND
0x4b8 EQ
0x4b9 PUSH2 0x4c1
0x4bc JUMPI
---
0x4a6: JUMPDEST 
0x4a7: V428 = 0x0
0x4a9: V429 = S[0x0]
0x4aa: V430 = CALLER
0x4ab: V431 = 0x1
0x4ad: V432 = 0xa0
0x4af: V433 = 0x2
0x4b1: V434 = EXP 0x2 0xa0
0x4b2: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b5: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x4b7: V437 = AND V429 0xffffffffffffffffffffffffffffffffffffffff
0x4b8: V438 = EQ V437 V436
0x4b9: V439 = 0x4c1
0x4bc: JUMPI 0x4c1 V438
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V92]

================================

Block 0x4bd
[0x4bd:0x4c0]
---
Predecessors: [0x4a6]
Successors: []
---
0x4bd PUSH1 0x0
0x4bf DUP1
0x4c0 REVERT
---
0x4bd: V440 = 0x0
0x4c0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V92]

================================

Block 0x4c1
[0x4c1:0x4ef]
---
Predecessors: [0x4a6]
Successors: [0x4f0, 0x4f4]
---
0x4c1 JUMPDEST
0x4c2 PUSH1 0x0
0x4c4 SLOAD
0x4c5 PUSH1 0x1
0x4c7 PUSH1 0xa0
0x4c9 PUSH1 0x2
0x4cb EXP
0x4cc SUB
0x4cd AND
0x4ce DUP2
0x4cf ISZERO
0x4d0 PUSH2 0x8fc
0x4d3 MUL
0x4d4 DUP3
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 PUSH1 0x0
0x4da PUSH1 0x40
0x4dc MLOAD
0x4dd DUP1
0x4de DUP4
0x4df SUB
0x4e0 DUP2
0x4e1 DUP6
0x4e2 DUP9
0x4e3 DUP9
0x4e4 CALL
0x4e5 SWAP4
0x4e6 POP
0x4e7 POP
0x4e8 POP
0x4e9 POP
0x4ea ISZERO
0x4eb ISZERO
0x4ec PUSH2 0x4f4
0x4ef JUMPI
---
0x4c1: JUMPDEST 
0x4c2: V441 = 0x0
0x4c4: V442 = S[0x0]
0x4c5: V443 = 0x1
0x4c7: V444 = 0xa0
0x4c9: V445 = 0x2
0x4cb: V446 = EXP 0x2 0xa0
0x4cc: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cd: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x4cf: V449 = ISZERO V92
0x4d0: V450 = 0x8fc
0x4d3: V451 = MUL 0x8fc V449
0x4d5: V452 = 0x40
0x4d7: V453 = M[0x40]
0x4d8: V454 = 0x0
0x4da: V455 = 0x40
0x4dc: V456 = M[0x40]
0x4df: V457 = SUB V453 V456
0x4e4: V458 = CALL V451 V448 V92 V456 V457 V456 0x0
0x4ea: V459 = ISZERO V458
0x4eb: V460 = ISZERO V459
0x4ec: V461 = 0x4f4
0x4ef: JUMPI 0x4f4 V460
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7d, V92]

================================

Block 0x4f0
[0x4f0:0x4f3]
---
Predecessors: [0x4c1]
Successors: []
---
0x4f0 PUSH1 0x0
0x4f2 DUP1
0x4f3 REVERT
---
0x4f0: V462 = 0x0
0x4f3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V92]

================================

Block 0x4f4
[0x4f4:0x4f4]
---
Predecessors: [0x4c1]
Successors: [0x4f5]
---
0x4f4 JUMPDEST
---
0x4f4: JUMPDEST 
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V92]

================================

Block 0x4f5
[0x4f5:0x4f5]
---
Predecessors: [0x4f4]
Successors: [0x4f6]
---
0x4f5 JUMPDEST
---
0x4f5: JUMPDEST 
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V92]

================================

Block 0x4f6
[0x4f6:0x4f8]
---
Predecessors: [0x4f5]
Successors: [0x7d]
---
0x4f6 JUMPDEST
0x4f7 POP
0x4f8 JUMP
---
0x4f6: JUMPDEST 
0x4f8: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V92]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f9
[0x4f9:0x50f]
---
Predecessors: [0x10b]
Successors: [0x510, 0x514]
---
0x4f9 JUMPDEST
0x4fa PUSH1 0x0
0x4fc SLOAD
0x4fd CALLER
0x4fe PUSH1 0x1
0x500 PUSH1 0xa0
0x502 PUSH1 0x2
0x504 EXP
0x505 SUB
0x506 SWAP1
0x507 DUP2
0x508 AND
0x509 SWAP2
0x50a AND
0x50b EQ
0x50c PUSH2 0x514
0x50f JUMPI
---
0x4f9: JUMPDEST 
0x4fa: V463 = 0x0
0x4fc: V464 = S[0x0]
0x4fd: V465 = CALLER
0x4fe: V466 = 0x1
0x500: V467 = 0xa0
0x502: V468 = 0x2
0x504: V469 = EXP 0x2 0xa0
0x505: V470 = SUB 0x10000000000000000000000000000000000000000 0x1
0x508: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x50a: V472 = AND V464 0xffffffffffffffffffffffffffffffffffffffff
0x50b: V473 = EQ V472 V471
0x50c: V474 = 0x514
0x50f: JUMPI 0x514 V473
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x510
[0x510:0x513]
---
Predecessors: [0x4f9]
Successors: []
---
0x510 PUSH1 0x0
0x512 DUP1
0x513 REVERT
---
0x510: V475 = 0x0
0x513: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x514
[0x514:0x521]
---
Predecessors: [0x4f9]
Successors: []
---
0x514 JUMPDEST
0x515 PUSH1 0x0
0x517 SLOAD
0x518 PUSH1 0x1
0x51a PUSH1 0xa0
0x51c PUSH1 0x2
0x51e EXP
0x51f SUB
0x520 AND
0x521 SELFDESTRUCT
---
0x514: JUMPDEST 
0x515: V476 = 0x0
0x517: V477 = S[0x0]
0x518: V478 = 0x1
0x51a: V479 = 0xa0
0x51c: V480 = 0x2
0x51e: V481 = EXP 0x2 0xa0
0x51f: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x520: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x521: SELFDESTRUCT V483
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x522
[0x522:0x522]
---
Predecessors: [0x1d6]
Successors: [0x523]
---
0x522 JUMPDEST
---
0x522: JUMPDEST 
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x523
[0x523:0x524]
---
Predecessors: [0x522]
Successors: [0x7d]
---
0x523 JUMPDEST
0x524 JUMP
---
0x523: JUMPDEST 
0x524: JUMP 0x7d
---
Entry stack: [V12, 0x7d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x525
[0x525:0x5db]
---
Predecessors: [0x120]
Successors: [0x5dc, 0x5e0]
---
0x525 JUMPDEST
0x526 PUSH1 0x1
0x528 SLOAD
0x529 PUSH1 0x0
0x52b SWAP1
0x52c PUSH1 0x1
0x52e PUSH1 0xa0
0x530 PUSH1 0x2
0x532 EXP
0x533 SUB
0x534 AND
0x535 DUP1
0x536 PUSH4 0x6c86888b
0x53b DUP15
0x53c DUP15
0x53d DUP15
0x53e DUP15
0x53f DUP15
0x540 DUP15
0x541 DUP15
0x542 DUP15
0x543 DUP15
0x544 DUP15
0x545 DUP15
0x546 ADDRESS
0x547 DUP16
0x548 PUSH1 0x40
0x54a MLOAD
0x54b PUSH1 0x20
0x54d ADD
0x54e MSTORE
0x54f PUSH1 0x40
0x551 MLOAD
0x552 PUSH1 0xe0
0x554 PUSH1 0x2
0x556 EXP
0x557 PUSH4 0xffffffff
0x55c DUP16
0x55d AND
0x55e MUL
0x55f DUP2
0x560 MSTORE
0x561 PUSH1 0x1
0x563 PUSH1 0xa0
0x565 PUSH1 0x2
0x567 EXP
0x568 SUB
0x569 SWAP13
0x56a DUP14
0x56b AND
0x56c PUSH1 0x4
0x56e DUP3
0x56f ADD
0x570 MSTORE
0x571 PUSH1 0x24
0x573 DUP2
0x574 ADD
0x575 SWAP12
0x576 SWAP1
0x577 SWAP12
0x578 MSTORE
0x579 SWAP9
0x57a DUP12
0x57b AND
0x57c PUSH1 0x44
0x57e DUP12
0x57f ADD
0x580 MSTORE
0x581 PUSH1 0x64
0x583 DUP11
0x584 ADD
0x585 SWAP8
0x586 SWAP1
0x587 SWAP8
0x588 MSTORE
0x589 PUSH1 0x84
0x58b DUP10
0x58c ADD
0x58d SWAP6
0x58e SWAP1
0x58f SWAP6
0x590 MSTORE
0x591 PUSH1 0xa4
0x593 DUP9
0x594 ADD
0x595 SWAP4
0x596 SWAP1
0x597 SWAP4
0x598 MSTORE
0x599 SWAP1
0x59a DUP8
0x59b AND
0x59c PUSH1 0xc4
0x59e DUP8
0x59f ADD
0x5a0 MSTORE
0x5a1 PUSH1 0xff
0x5a3 AND
0x5a4 PUSH1 0xe4
0x5a6 DUP7
0x5a7 ADD
0x5a8 MSTORE
0x5a9 PUSH2 0x104
0x5ac DUP6
0x5ad ADD
0x5ae MSTORE
0x5af PUSH2 0x124
0x5b2 DUP5
0x5b3 ADD
0x5b4 MSTORE
0x5b5 PUSH2 0x144
0x5b8 DUP4
0x5b9 ADD
0x5ba MSTORE
0x5bb SWAP1
0x5bc SWAP2
0x5bd AND
0x5be PUSH2 0x164
0x5c1 DUP3
0x5c2 ADD
0x5c3 MSTORE
0x5c4 PUSH2 0x184
0x5c7 ADD
0x5c8 PUSH1 0x20
0x5ca PUSH1 0x40
0x5cc MLOAD
0x5cd DUP1
0x5ce DUP4
0x5cf SUB
0x5d0 DUP2
0x5d1 PUSH1 0x0
0x5d3 DUP8
0x5d4 DUP1
0x5d5 EXTCODESIZE
0x5d6 ISZERO
0x5d7 ISZERO
0x5d8 PUSH2 0x5e0
0x5db JUMPI
---
0x525: JUMPDEST 
0x526: V484 = 0x1
0x528: V485 = S[0x1]
0x529: V486 = 0x0
0x52c: V487 = 0x1
0x52e: V488 = 0xa0
0x530: V489 = 0x2
0x532: V490 = EXP 0x2 0xa0
0x533: V491 = SUB 0x10000000000000000000000000000000000000000 0x1
0x534: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x536: V493 = 0x6c86888b
0x546: V494 = ADDRESS
0x548: V495 = 0x40
0x54a: V496 = M[0x40]
0x54b: V497 = 0x20
0x54d: V498 = ADD 0x20 V496
0x54e: M[V498] = 0x0
0x54f: V499 = 0x40
0x551: V500 = M[0x40]
0x552: V501 = 0xe0
0x554: V502 = 0x2
0x556: V503 = EXP 0x2 0xe0
0x557: V504 = 0xffffffff
0x55d: V505 = AND 0x6c86888b 0xffffffff
0x55e: V506 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0x560: M[V500] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0x561: V507 = 0x1
0x563: V508 = 0xa0
0x565: V509 = 0x2
0x567: V510 = EXP 0x2 0xa0
0x568: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56b: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x56c: V513 = 0x4
0x56f: V514 = ADD V500 0x4
0x570: M[V514] = V512
0x571: V515 = 0x24
0x574: V516 = ADD V500 0x24
0x578: M[V516] = V114
0x57b: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x57c: V518 = 0x44
0x57f: V519 = ADD V500 0x44
0x580: M[V519] = V517
0x581: V520 = 0x64
0x584: V521 = ADD V500 0x64
0x588: M[V521] = V119
0x589: V522 = 0x84
0x58c: V523 = ADD V500 0x84
0x590: M[V523] = V121
0x591: V524 = 0xa4
0x594: V525 = ADD V500 0xa4
0x598: M[V525] = V123
0x59b: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x59c: V527 = 0xc4
0x59f: V528 = ADD V500 0xc4
0x5a0: M[V528] = V526
0x5a1: V529 = 0xff
0x5a3: V530 = AND 0xff V130
0x5a4: V531 = 0xe4
0x5a7: V532 = ADD V500 0xe4
0x5a8: M[V532] = V530
0x5a9: V533 = 0x104
0x5ad: V534 = ADD V500 0x104
0x5ae: M[V534] = V132
0x5af: V535 = 0x124
0x5b3: V536 = ADD V500 0x124
0x5b4: M[V536] = V134
0x5b5: V537 = 0x144
0x5b9: V538 = ADD V500 0x144
0x5ba: M[V538] = V136
0x5bd: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x5be: V540 = 0x164
0x5c2: V541 = ADD V500 0x164
0x5c3: M[V541] = V539
0x5c4: V542 = 0x184
0x5c7: V543 = ADD 0x184 V500
0x5c8: V544 = 0x20
0x5ca: V545 = 0x40
0x5cc: V546 = M[0x40]
0x5cf: V547 = SUB V543 V546
0x5d1: V548 = 0x0
0x5d5: V549 = EXTCODESIZE V492
0x5d6: V550 = ISZERO V549
0x5d7: V551 = ISZERO V550
0x5d8: V552 = 0x5e0
0x5db: JUMPI 0x5e0 V551
---
Entry stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V492, V492, 0x6c86888b, V543, 0x20, V546, V547, V546, 0x0, V492]
Exit stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543, 0x20, V546, V547, V546, 0x0, V492]

================================

Block 0x5dc
[0x5dc:0x5df]
---
Predecessors: [0x525]
Successors: []
---
0x5dc PUSH1 0x0
0x5de DUP1
0x5df REVERT
---
0x5dc: V553 = 0x0
0x5df: REVERT 0x0 0x0
---
Entry stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543, 0x20, V546, V547, V546, 0x0, V492]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543, 0x20, V546, V547, V546, 0x0, V492]

================================

Block 0x5e0
[0x5e0:0x5ec]
---
Predecessors: [0x525]
Successors: [0x5ed, 0x5f1]
---
0x5e0 JUMPDEST
0x5e1 PUSH2 0x2c6
0x5e4 GAS
0x5e5 SUB
0x5e6 CALL
0x5e7 ISZERO
0x5e8 ISZERO
0x5e9 PUSH2 0x5f1
0x5ec JUMPI
---
0x5e0: JUMPDEST 
0x5e1: V554 = 0x2c6
0x5e4: V555 = GAS
0x5e5: V556 = SUB V555 0x2c6
0x5e6: V557 = CALL V556 V492 0x0 V546 V547 V546 0x20
0x5e7: V558 = ISZERO V557
0x5e8: V559 = ISZERO V558
0x5e9: V560 = 0x5f1
0x5ec: JUMPI 0x5f1 V559
---
Entry stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543, 0x20, V546, V547, V546, 0x0, V492]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543]

================================

Block 0x5ed
[0x5ed:0x5f0]
---
Predecessors: [0x5e0]
Successors: []
---
0x5ed PUSH1 0x0
0x5ef DUP1
0x5f0 REVERT
---
0x5ed: V561 = 0x0
0x5f0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543]

================================

Block 0x5f1
[0x5f1:0x5fc]
---
Predecessors: [0x5e0]
Successors: [0x5fd]
---
0x5f1 JUMPDEST
0x5f2 POP
0x5f3 POP
0x5f4 POP
0x5f5 PUSH1 0x40
0x5f7 MLOAD
0x5f8 DUP1
0x5f9 MLOAD
0x5fa SWAP3
0x5fb POP
0x5fc POP
---
0x5f1: JUMPDEST 
0x5f5: V562 = 0x40
0x5f7: V563 = M[0x40]
0x5f9: V564 = M[V563]
---
Entry stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, 0x0, V492, V492, 0x6c86888b, V543]
Stack pops: 5
Stack additions: [V564, S3]
Exit stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V564, V492]

================================

Block 0x5fd
[0x5fd:0x60c]
---
Predecessors: [0x5f1]
Successors: [0x162]
---
0x5fd JUMPDEST
0x5fe POP
0x5ff SWAP12
0x600 SWAP11
0x601 POP
0x602 POP
0x603 POP
0x604 POP
0x605 POP
0x606 POP
0x607 POP
0x608 POP
0x609 POP
0x60a POP
0x60b POP
0x60c JUMP
---
0x5fd: JUMPDEST 
0x60c: JUMP 0x162
---
Entry stack: [V12, 0x162, V112, V114, V117, V119, V121, V123, V126, V130, V132, V134, V136, V564, V492]
Stack pops: 14
Stack additions: [S1]
Exit stack: [V12, V564]

================================

Block 0x60d
[0x60d:0x66c]
---
Predecessors: [0x181]
Successors: [0x66d, 0x671]
---
0x60d JUMPDEST
0x60e PUSH1 0x1
0x610 SLOAD
0x611 PUSH1 0x0
0x613 SWAP1
0x614 PUSH1 0x1
0x616 PUSH1 0xa0
0x618 PUSH1 0x2
0x61a EXP
0x61b SUB
0x61c AND
0x61d DUP1
0x61e PUSH4 0xf7888aec
0x623 DUP5
0x624 ADDRESS
0x625 DUP6
0x626 PUSH1 0x40
0x628 MLOAD
0x629 PUSH1 0x20
0x62b ADD
0x62c MSTORE
0x62d PUSH1 0x40
0x62f MLOAD
0x630 PUSH1 0xe0
0x632 PUSH1 0x2
0x634 EXP
0x635 PUSH4 0xffffffff
0x63a DUP6
0x63b AND
0x63c MUL
0x63d DUP2
0x63e MSTORE
0x63f PUSH1 0x1
0x641 PUSH1 0xa0
0x643 PUSH1 0x2
0x645 EXP
0x646 SUB
0x647 SWAP3
0x648 DUP4
0x649 AND
0x64a PUSH1 0x4
0x64c DUP3
0x64d ADD
0x64e MSTORE
0x64f SWAP2
0x650 AND
0x651 PUSH1 0x24
0x653 DUP3
0x654 ADD
0x655 MSTORE
0x656 PUSH1 0x44
0x658 ADD
0x659 PUSH1 0x20
0x65b PUSH1 0x40
0x65d MLOAD
0x65e DUP1
0x65f DUP4
0x660 SUB
0x661 DUP2
0x662 PUSH1 0x0
0x664 DUP8
0x665 DUP1
0x666 EXTCODESIZE
0x667 ISZERO
0x668 ISZERO
0x669 PUSH2 0x671
0x66c JUMPI
---
0x60d: JUMPDEST 
0x60e: V565 = 0x1
0x610: V566 = S[0x1]
0x611: V567 = 0x0
0x614: V568 = 0x1
0x616: V569 = 0xa0
0x618: V570 = 0x2
0x61a: V571 = EXP 0x2 0xa0
0x61b: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61c: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x61e: V574 = 0xf7888aec
0x624: V575 = ADDRESS
0x626: V576 = 0x40
0x628: V577 = M[0x40]
0x629: V578 = 0x20
0x62b: V579 = ADD 0x20 V577
0x62c: M[V579] = 0x0
0x62d: V580 = 0x40
0x62f: V581 = M[0x40]
0x630: V582 = 0xe0
0x632: V583 = 0x2
0x634: V584 = EXP 0x2 0xe0
0x635: V585 = 0xffffffff
0x63b: V586 = AND 0xf7888aec 0xffffffff
0x63c: V587 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x63e: M[V581] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x63f: V588 = 0x1
0x641: V589 = 0xa0
0x643: V590 = 0x2
0x645: V591 = EXP 0x2 0xa0
0x646: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x649: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x64a: V594 = 0x4
0x64d: V595 = ADD V581 0x4
0x64e: M[V595] = V593
0x650: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V575
0x651: V597 = 0x24
0x654: V598 = ADD V581 0x24
0x655: M[V598] = V596
0x656: V599 = 0x44
0x658: V600 = ADD 0x44 V581
0x659: V601 = 0x20
0x65b: V602 = 0x40
0x65d: V603 = M[0x40]
0x660: V604 = SUB V600 V603
0x662: V605 = 0x0
0x666: V606 = EXTCODESIZE V573
0x667: V607 = ISZERO V606
0x668: V608 = ISZERO V607
0x669: V609 = 0x671
0x66c: JUMPI 0x671 V608
---
Entry stack: [V12, 0x195, V159]
Stack pops: 1
Stack additions: [S0, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]
Exit stack: [V12, 0x195, V159, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]

================================

Block 0x66d
[0x66d:0x670]
---
Predecessors: [0x60d]
Successors: []
---
0x66d PUSH1 0x0
0x66f DUP1
0x670 REVERT
---
0x66d: V610 = 0x0
0x670: REVERT 0x0 0x0
---
Entry stack: [V12, 0x195, V159, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x195, V159, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]

================================

Block 0x671
[0x671:0x67d]
---
Predecessors: [0x60d]
Successors: [0x67e, 0x682]
---
0x671 JUMPDEST
0x672 PUSH2 0x2c6
0x675 GAS
0x676 SUB
0x677 CALL
0x678 ISZERO
0x679 ISZERO
0x67a PUSH2 0x682
0x67d JUMPI
---
0x671: JUMPDEST 
0x672: V611 = 0x2c6
0x675: V612 = GAS
0x676: V613 = SUB V612 0x2c6
0x677: V614 = CALL V613 V573 0x0 V603 V604 V603 0x20
0x678: V615 = ISZERO V614
0x679: V616 = ISZERO V615
0x67a: V617 = 0x682
0x67d: JUMPI 0x682 V616
---
Entry stack: [V12, 0x195, V159, 0x0, V573, V573, 0xf7888aec, V600, 0x20, V603, V604, V603, 0x0, V573]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x195, V159, 0x0, V573, V573, 0xf7888aec, V600]

================================

Block 0x67e
[0x67e:0x681]
---
Predecessors: [0x671]
Successors: []
---
0x67e PUSH1 0x0
0x680 DUP1
0x681 REVERT
---
0x67e: V618 = 0x0
0x681: REVERT 0x0 0x0
---
Entry stack: [V12, 0x195, V159, 0x0, V573, V573, 0xf7888aec, V600]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x195, V159, 0x0, V573, V573, 0xf7888aec, V600]

================================

Block 0x682
[0x682:0x68d]
---
Predecessors: [0x671]
Successors: [0x68e]
---
0x682 JUMPDEST
0x683 POP
0x684 POP
0x685 POP
0x686 PUSH1 0x40
0x688 MLOAD
0x689 DUP1
0x68a MLOAD
0x68b SWAP3
0x68c POP
0x68d POP
---
0x682: JUMPDEST 
0x686: V619 = 0x40
0x688: V620 = M[0x40]
0x68a: V621 = M[V620]
---
Entry stack: [V12, 0x195, V159, 0x0, V573, V573, 0xf7888aec, V600]
Stack pops: 5
Stack additions: [V621, S3]
Exit stack: [V12, 0x195, V159, V621, V573]

================================

Block 0x68e
[0x68e:0x693]
---
Predecessors: [0x682]
Successors: [0x195]
---
0x68e JUMPDEST
0x68f POP
0x690 SWAP2
0x691 SWAP1
0x692 POP
0x693 JUMP
---
0x68e: JUMPDEST 
0x693: JUMP 0x195
---
Entry stack: [V12, 0x195, V159, V621, V573]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, V621]

================================

Block 0x694
[0x694:0x6a2]
---
Predecessors: [0x1b2]
Successors: [0x1ba]
---
0x694 JUMPDEST
0x695 PUSH1 0x0
0x697 SLOAD
0x698 PUSH1 0x1
0x69a PUSH1 0xa0
0x69c PUSH1 0x2
0x69e EXP
0x69f SUB
0x6a0 AND
0x6a1 DUP2
0x6a2 JUMP
---
0x694: JUMPDEST 
0x695: V622 = 0x0
0x697: V623 = S[0x0]
0x698: V624 = 0x1
0x69a: V625 = 0xa0
0x69c: V626 = 0x2
0x69e: V627 = EXP 0x2 0xa0
0x69f: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a0: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0x6a2: JUMP 0x1ba
---
Entry stack: [V12, 0x1ba]
Stack pops: 1
Stack additions: [S0, V629]
Exit stack: [V12, 0x1ba, V629]

================================

Block 0x6a3
[0x6a3:0x6a3]
---
Predecessors: []
Successors: [0x6a4]
---
0x6a3 JUMPDEST
---
0x6a3: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6a4
[0x6a4:0x6a5]
---
Predecessors: [0x6a3]
Successors: []
Has unresolved jump.
---
0x6a4 JUMPDEST
0x6a5 JUMP
---
0x6a4: JUMPDEST 
0x6a5: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6a6
[0x6a6:0x6bd]
---
Predecessors: [0x1eb]
Successors: [0x6be, 0x6c2]
---
0x6a6 JUMPDEST
0x6a7 PUSH1 0x0
0x6a9 DUP1
0x6aa SLOAD
0x6ab CALLER
0x6ac PUSH1 0x1
0x6ae PUSH1 0xa0
0x6b0 PUSH1 0x2
0x6b2 EXP
0x6b3 SUB
0x6b4 SWAP1
0x6b5 DUP2
0x6b6 AND
0x6b7 SWAP2
0x6b8 AND
0x6b9 EQ
0x6ba PUSH2 0x6c2
0x6bd JUMPI
---
0x6a6: JUMPDEST 
0x6a7: V630 = 0x0
0x6aa: V631 = S[0x0]
0x6ab: V632 = CALLER
0x6ac: V633 = 0x1
0x6ae: V634 = 0xa0
0x6b0: V635 = 0x2
0x6b2: V636 = EXP 0x2 0xa0
0x6b3: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b6: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x6b8: V639 = AND V631 0xffffffffffffffffffffffffffffffffffffffff
0x6b9: V640 = EQ V639 V638
0x6ba: V641 = 0x6c2
0x6bd: JUMPI 0x6c2 V640
---
Entry stack: [V12, 0x7d, V195]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7d, V195, 0x0]

================================

Block 0x6be
[0x6be:0x6c1]
---
Predecessors: [0x6a6]
Successors: []
---
0x6be PUSH1 0x0
0x6c0 DUP1
0x6c1 REVERT
---
0x6be: V642 = 0x0
0x6c1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, 0x0]

================================

Block 0x6c2
[0x6c2:0x707]
---
Predecessors: [0x6a6]
Successors: [0x708, 0x70c]
---
0x6c2 JUMPDEST
0x6c3 POP
0x6c4 PUSH1 0x1
0x6c6 SLOAD
0x6c7 PUSH1 0x1
0x6c9 PUSH1 0xa0
0x6cb PUSH1 0x2
0x6cd EXP
0x6ce SUB
0x6cf AND
0x6d0 DUP1
0x6d1 PUSH4 0x2e1a7d4d
0x6d6 DUP4
0x6d7 PUSH1 0x40
0x6d9 MLOAD
0x6da PUSH1 0xe0
0x6dc PUSH1 0x2
0x6de EXP
0x6df PUSH4 0xffffffff
0x6e4 DUP5
0x6e5 AND
0x6e6 MUL
0x6e7 DUP2
0x6e8 MSTORE
0x6e9 PUSH1 0x4
0x6eb DUP2
0x6ec ADD
0x6ed SWAP2
0x6ee SWAP1
0x6ef SWAP2
0x6f0 MSTORE
0x6f1 PUSH1 0x24
0x6f3 ADD
0x6f4 PUSH1 0x0
0x6f6 PUSH1 0x40
0x6f8 MLOAD
0x6f9 DUP1
0x6fa DUP4
0x6fb SUB
0x6fc DUP2
0x6fd PUSH1 0x0
0x6ff DUP8
0x700 DUP1
0x701 EXTCODESIZE
0x702 ISZERO
0x703 ISZERO
0x704 PUSH2 0x70c
0x707 JUMPI
---
0x6c2: JUMPDEST 
0x6c4: V643 = 0x1
0x6c6: V644 = S[0x1]
0x6c7: V645 = 0x1
0x6c9: V646 = 0xa0
0x6cb: V647 = 0x2
0x6cd: V648 = EXP 0x2 0xa0
0x6ce: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cf: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x6d1: V651 = 0x2e1a7d4d
0x6d7: V652 = 0x40
0x6d9: V653 = M[0x40]
0x6da: V654 = 0xe0
0x6dc: V655 = 0x2
0x6de: V656 = EXP 0x2 0xe0
0x6df: V657 = 0xffffffff
0x6e5: V658 = AND 0x2e1a7d4d 0xffffffff
0x6e6: V659 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x6e8: M[V653] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x6e9: V660 = 0x4
0x6ec: V661 = ADD V653 0x4
0x6f0: M[V661] = V195
0x6f1: V662 = 0x24
0x6f3: V663 = ADD 0x24 V653
0x6f4: V664 = 0x0
0x6f6: V665 = 0x40
0x6f8: V666 = M[0x40]
0x6fb: V667 = SUB V663 V666
0x6fd: V668 = 0x0
0x701: V669 = EXTCODESIZE V650
0x702: V670 = ISZERO V669
0x703: V671 = ISZERO V670
0x704: V672 = 0x70c
0x707: JUMPI 0x70c V671
---
Entry stack: [V12, 0x7d, V195, 0x0]
Stack pops: 2
Stack additions: [S1, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]

================================

Block 0x708
[0x708:0x70b]
---
Predecessors: [0x6c2]
Successors: []
---
0x708 PUSH1 0x0
0x70a DUP1
0x70b REVERT
---
0x708: V673 = 0x0
0x70b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]

================================

Block 0x70c
[0x70c:0x718]
---
Predecessors: [0x6c2]
Successors: [0x719, 0x71d]
---
0x70c JUMPDEST
0x70d PUSH2 0x2c6
0x710 GAS
0x711 SUB
0x712 CALL
0x713 ISZERO
0x714 ISZERO
0x715 PUSH2 0x71d
0x718 JUMPI
---
0x70c: JUMPDEST 
0x70d: V674 = 0x2c6
0x710: V675 = GAS
0x711: V676 = SUB V675 0x2c6
0x712: V677 = CALL V676 V650 0x0 V666 V667 V666 0x0
0x713: V678 = ISZERO V677
0x714: V679 = ISZERO V678
0x715: V680 = 0x71d
0x718: JUMPI 0x71d V679
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663, 0x0, V666, V667, V666, 0x0, V650]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]

================================

Block 0x719
[0x719:0x71c]
---
Predecessors: [0x70c]
Successors: []
---
0x719 PUSH1 0x0
0x71b DUP1
0x71c REVERT
---
0x719: V681 = 0x0
0x71c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]

================================

Block 0x71d
[0x71d:0x720]
---
Predecessors: [0x70c]
Successors: [0x721]
---
0x71d JUMPDEST
0x71e POP
0x71f POP
0x720 POP
---
0x71d: JUMPDEST 
---
Entry stack: [V12, 0x7d, V195, V650, V650, 0x2e1a7d4d, V663]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650]

================================

Block 0x721
[0x721:0x721]
---
Predecessors: [0x71d]
Successors: [0x722]
---
0x721 JUMPDEST
---
0x721: JUMPDEST 
---
Entry stack: [V12, 0x7d, V195, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V195, V650]

================================

Block 0x722
[0x722:0x725]
---
Predecessors: [0x721]
Successors: [0x7d]
---
0x722 JUMPDEST
0x723 POP
0x724 POP
0x725 JUMP
---
0x722: JUMPDEST 
0x725: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V195, V650]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x726
[0x726:0x751]
---
Predecessors: []
Successors: []
---
0x726 STOP
0x727 LOG1
0x728 PUSH6 0x627a7a723058
0x72f SHA3
0x730 MISSING 0xb3
0x731 MOD
0x732 MISSING 0xee
0x733 MISSING 0x2a
0x734 MISSING 0xde
0x735 MISSING 0x2d
0x736 LOG0
0x737 MISSING 0xe2
0x738 SMOD
0x739 MISSING 0x28
0x73a SGT
0x73b PUSH17 0xd204af49f0ca3676949ca0b5609c3034ad
0x74d MISSING 0xb3
0x74e RETURN
0x74f MISSING 0xc8
0x750 STOP
0x751 MISSING 0x29
---
0x726: STOP 
0x727: LOG S0 S1 S2
0x728: V682 = 0x627a7a723058
0x72f: V683 = SHA3 0x627a7a723058 S3
0x730: MISSING 0xb3
0x731: V684 = MOD S0 S1
0x732: MISSING 0xee
0x733: MISSING 0x2a
0x734: MISSING 0xde
0x735: MISSING 0x2d
0x736: LOG S0 S1
0x737: MISSING 0xe2
0x738: V685 = SMOD S0 S1
0x739: MISSING 0x28
0x73a: V686 = SGT S0 S1
0x73b: V687 = 0xd204af49f0ca3676949ca0b5609c3034ad
0x74d: MISSING 0xb3
0x74e: RETURN S0 S1
0x74f: MISSING 0xc8
0x750: STOP 
0x751: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V683, V684, V685, 0xd204af49f0ca3676949ca0b5609c3034ad, V686]
Exit stack: []

================================

Function 0:
Public function signature: 0xee11524
Entry block: 0x81
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x81, 0x88, 0x8c, 0x1f8, 0x210, 0x214, 0x2ca, 0x2ce, 0x2db, 0x2df, 0x2ef, 0x3cc, 0x3d0, 0x3dd, 0x3e1, 0x3e9, 0x41e, 0x41f, 0x420

Function 1:
Public function signature: 0x2cf2c0af
Entry block: 0xd0
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0xd0, 0xd7, 0xdb, 0x42e, 0x446, 0x44a, 0x487, 0x48b, 0x498, 0x49c, 0x4a1, 0x4a2

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0xe8
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0xe8, 0xef, 0xf3, 0x4a6, 0x4bd, 0x4c1, 0x4f0, 0x4f4, 0x4f5, 0x4f6

Function 3:
Public function signature: 0x43d726d6
Entry block: 0x100
Exit block: 0x514
Body: 0x100, 0x107, 0x10b, 0x4f9, 0x510, 0x514

Function 4:
Public function signature: 0x5c73dcea
Entry block: 0x115
Exit block: 0x162
Body: 0x115, 0x11c, 0x120, 0x162, 0x525, 0x5dc, 0x5e0, 0x5ed, 0x5f1, 0x5fd

Function 5:
Public function signature: 0x70a08231
Entry block: 0x176
Exit block: 0x195
Body: 0x176, 0x17d, 0x181, 0x195, 0x60d, 0x66d, 0x671, 0x67e, 0x682, 0x68e

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x1a7
Exit block: 0x1ba
Body: 0x1a7, 0x1ae, 0x1b2, 0x1ba, 0x694

Function 7:
Public function signature: 0xd0e30db0
Entry block: 0x1d6
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1d6, 0x522, 0x523

Function 8:
Public function signature: 0xf1b83630
Entry block: 0x1e0
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f, 0x1e0, 0x1e7, 0x1eb, 0x6a6, 0x6be, 0x6c2, 0x708, 0x70c, 0x719, 0x71d, 0x721, 0x722

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x7f
Body: 0x7d, 0x7e, 0x7f

