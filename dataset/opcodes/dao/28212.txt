Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x7f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x300b50a
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x7f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x300b50a
0x20: V14 = EQ V12 0x300b50a
0x21: V15 = 0x7f
0x24: JUMPI 0x7f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xae]
---
0x25 DUP1
0x26 PUSH4 0x20b1bc7d
0x2b EQ
0x2c PUSH2 0xae
0x2f JUMPI
---
0x26: V16 = 0x20b1bc7d
0x2b: V17 = EQ 0x20b1bc7d V12
0x2c: V18 = 0xae
0x2f: JUMPI 0xae V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xcd]
---
0x30 DUP1
0x31 PUSH4 0x41c0e1b5
0x36 EQ
0x37 PUSH2 0xcd
0x3a JUMPI
---
0x31: V19 = 0x41c0e1b5
0x36: V20 = EQ 0x41c0e1b5 V12
0x37: V21 = 0xcd
0x3a: JUMPI 0xcd V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xe0]
---
0x3b DUP1
0x3c PUSH4 0x51cff8d9
0x41 EQ
0x42 PUSH2 0xe0
0x45 JUMPI
---
0x3c: V22 = 0x51cff8d9
0x41: V23 = EQ 0x51cff8d9 V12
0x42: V24 = 0xe0
0x45: JUMPI 0xe0 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xff]
---
0x46 DUP1
0x47 PUSH4 0xa69df4b5
0x4c EQ
0x4d PUSH2 0xff
0x50 JUMPI
---
0x47: V25 = 0xa69df4b5
0x4c: V26 = EQ 0xa69df4b5 V12
0x4d: V27 = 0xff
0x50: JUMPI 0xff V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x112]
---
0x51 DUP1
0x52 PUSH4 0xaededc1a
0x57 EQ
0x58 PUSH2 0x112
0x5b JUMPI
---
0x52: V28 = 0xaededc1a
0x57: V29 = EQ 0xaededc1a V12
0x58: V30 = 0x112
0x5b: JUMPI 0x112 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x13b]
---
0x5c DUP1
0x5d PUSH4 0xcd802002
0x62 EQ
0x63 PUSH2 0x13b
0x66 JUMPI
---
0x5d: V31 = 0xcd802002
0x62: V32 = EQ 0xcd802002 V12
0x63: V33 = 0x13b
0x66: JUMPI 0x13b V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x159]
---
0x67 DUP1
0x68 PUSH4 0xcf309012
0x6d EQ
0x6e PUSH2 0x159
0x71 JUMPI
---
0x68: V34 = 0xcf309012
0x6d: V35 = EQ 0xcf309012 V12
0x6e: V36 = 0x159
0x71: JUMPI 0x159 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x180]
---
0x72 DUP1
0x73 PUSH4 0xf83d08ba
0x78 EQ
0x79 PUSH2 0x180
0x7c JUMPI
---
0x73: V37 = 0xf83d08ba
0x78: V38 = EQ 0xf83d08ba V12
0x79: V39 = 0x180
0x7c: JUMPI 0x180 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x7e]
---
Predecessors: [0x0, 0x72, 0x1bd, 0x245, 0x295, 0x546, 0x577]
Successors: []
---
0x7d JUMPDEST
0x7e STOP
---
0x7d: JUMPDEST 
0x7e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f
[0x7f:0x85]
---
Predecessors: [0xb]
Successors: [0x86, 0x8a]
---
0x7f JUMPDEST
0x80 CALLVALUE
0x81 ISZERO
0x82 PUSH2 0x8a
0x85 JUMPI
---
0x7f: JUMPDEST 
0x80: V40 = CALLVALUE
0x81: V41 = ISZERO V40
0x82: V42 = 0x8a
0x85: JUMPI 0x8a V41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x7f]
Successors: []
---
0x86 PUSH1 0x0
0x88 DUP1
0x89 REVERT
---
0x86: V43 = 0x0
0x89: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0x7f]
Successors: [0x193]
---
0x8a JUMPDEST
0x8b PUSH2 0x92
0x8e PUSH2 0x193
0x91 JUMP
---
0x8a: JUMPDEST 
0x8b: V44 = 0x92
0x8e: V45 = 0x193
0x91: JUMP 0x193
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x92]
Exit stack: [V12, 0x92]

================================

Block 0x92
[0x92:0xad]
---
Predecessors: [0x193]
Successors: []
---
0x92 JUMPDEST
0x93 PUSH1 0x40
0x95 MLOAD
0x96 PUSH1 0x1
0x98 PUSH1 0xa0
0x9a PUSH1 0x2
0x9c EXP
0x9d SUB
0x9e SWAP1
0x9f SWAP2
0xa0 AND
0xa1 DUP2
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 DUP1
0xaa SWAP2
0xab SUB
0xac SWAP1
0xad RETURN
---
0x92: JUMPDEST 
0x93: V46 = 0x40
0x95: V47 = M[0x40]
0x96: V48 = 0x1
0x98: V49 = 0xa0
0x9a: V50 = 0x2
0x9c: V51 = EXP 0x2 0xa0
0x9d: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0: V53 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0xa2: M[V47] = V53
0xa3: V54 = 0x20
0xa5: V55 = ADD 0x20 V47
0xa6: V56 = 0x40
0xa8: V57 = M[0x40]
0xab: V58 = SUB V55 V57
0xad: RETURN V57 V58
---
Entry stack: [V12, 0x92, V161]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x92]

================================

Block 0xae
[0xae:0xb4]
---
Predecessors: [0x25]
Successors: [0xb5, 0xb9]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 ISZERO
0xb1 PUSH2 0xb9
0xb4 JUMPI
---
0xae: JUMPDEST 
0xaf: V59 = CALLVALUE
0xb0: V60 = ISZERO V59
0xb1: V61 = 0xb9
0xb4: JUMPI 0xb9 V60
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5
[0xb5:0xb8]
---
Predecessors: [0xae]
Successors: []
---
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 REVERT
---
0xb5: V62 = 0x0
0xb8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb9
[0xb9:0xcc]
---
Predecessors: [0xae]
Successors: [0x1a2]
---
0xb9 JUMPDEST
0xba PUSH2 0x7d
0xbd PUSH1 0x1
0xbf PUSH1 0xa0
0xc1 PUSH1 0x2
0xc3 EXP
0xc4 SUB
0xc5 PUSH1 0x4
0xc7 CALLDATALOAD
0xc8 AND
0xc9 PUSH2 0x1a2
0xcc JUMP
---
0xb9: JUMPDEST 
0xba: V63 = 0x7d
0xbd: V64 = 0x1
0xbf: V65 = 0xa0
0xc1: V66 = 0x2
0xc3: V67 = EXP 0x2 0xa0
0xc4: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5: V69 = 0x4
0xc7: V70 = CALLDATALOAD 0x4
0xc8: V71 = AND V70 0xffffffffffffffffffffffffffffffffffffffff
0xc9: V72 = 0x1a2
0xcc: JUMP 0x1a2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V71]
Exit stack: [V12, 0x7d, V71]

================================

Block 0xcd
[0xcd:0xd3]
---
Predecessors: [0x30]
Successors: [0xd4, 0xd8]
---
0xcd JUMPDEST
0xce CALLVALUE
0xcf ISZERO
0xd0 PUSH2 0xd8
0xd3 JUMPI
---
0xcd: JUMPDEST 
0xce: V73 = CALLVALUE
0xcf: V74 = ISZERO V73
0xd0: V75 = 0xd8
0xd3: JUMPI 0xd8 V74
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd4
[0xd4:0xd7]
---
Predecessors: [0xcd]
Successors: []
---
0xd4 PUSH1 0x0
0xd6 DUP1
0xd7 REVERT
---
0xd4: V76 = 0x0
0xd7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd8
[0xd8:0xdf]
---
Predecessors: [0xcd]
Successors: [0x1ec]
---
0xd8 JUMPDEST
0xd9 PUSH2 0x7d
0xdc PUSH2 0x1ec
0xdf JUMP
---
0xd8: JUMPDEST 
0xd9: V77 = 0x7d
0xdc: V78 = 0x1ec
0xdf: JUMP 0x1ec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0x3b]
Successors: [0xe7, 0xeb]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V79 = CALLVALUE
0xe2: V80 = ISZERO V79
0xe3: V81 = 0xeb
0xe6: JUMPI 0xeb V80
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V82 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xfe]
---
Predecessors: [0xe0]
Successors: [0x213]
---
0xeb JUMPDEST
0xec PUSH2 0x7d
0xef PUSH1 0x1
0xf1 PUSH1 0xa0
0xf3 PUSH1 0x2
0xf5 EXP
0xf6 SUB
0xf7 PUSH1 0x4
0xf9 CALLDATALOAD
0xfa AND
0xfb PUSH2 0x213
0xfe JUMP
---
0xeb: JUMPDEST 
0xec: V83 = 0x7d
0xef: V84 = 0x1
0xf1: V85 = 0xa0
0xf3: V86 = 0x2
0xf5: V87 = EXP 0x2 0xa0
0xf6: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7: V89 = 0x4
0xf9: V90 = CALLDATALOAD 0x4
0xfa: V91 = AND V90 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V92 = 0x213
0xfe: JUMP 0x213
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V91]
Exit stack: [V12, 0x7d, V91]

================================

Block 0xff
[0xff:0x105]
---
Predecessors: [0x46]
Successors: [0x106, 0x10a]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0xff: JUMPDEST 
0x100: V93 = CALLVALUE
0x101: V94 = ISZERO V93
0x102: V95 = 0x10a
0x105: JUMPI 0x10a V94
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0xff]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V96 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10a
[0x10a:0x111]
---
Predecessors: [0xff]
Successors: [0x27a]
---
0x10a JUMPDEST
0x10b PUSH2 0x7d
0x10e PUSH2 0x27a
0x111 JUMP
---
0x10a: JUMPDEST 
0x10b: V97 = 0x7d
0x10e: V98 = 0x27a
0x111: JUMP 0x27a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0x112
[0x112:0x128]
---
Predecessors: [0x51]
Successors: [0x2b5]
---
0x112 JUMPDEST
0x113 PUSH2 0x129
0x116 PUSH1 0x1
0x118 PUSH1 0xa0
0x11a PUSH1 0x2
0x11c EXP
0x11d SUB
0x11e PUSH1 0x4
0x120 CALLDATALOAD
0x121 AND
0x122 PUSH1 0x24
0x124 CALLDATALOAD
0x125 PUSH2 0x2b5
0x128 JUMP
---
0x112: JUMPDEST 
0x113: V99 = 0x129
0x116: V100 = 0x1
0x118: V101 = 0xa0
0x11a: V102 = 0x2
0x11c: V103 = EXP 0x2 0xa0
0x11d: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e: V105 = 0x4
0x120: V106 = CALLDATALOAD 0x4
0x121: V107 = AND V106 0xffffffffffffffffffffffffffffffffffffffff
0x122: V108 = 0x24
0x124: V109 = CALLDATALOAD 0x24
0x125: V110 = 0x2b5
0x128: JUMP 0x2b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x129, V107, V109]
Exit stack: [V12, 0x129, V107, V109]

================================

Block 0x129
[0x129:0x13a]
---
Predecessors: [0x4fd]
Successors: []
---
0x129 JUMPDEST
0x12a PUSH1 0x40
0x12c MLOAD
0x12d SWAP1
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x20
0x132 ADD
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 SWAP2
0x138 SUB
0x139 SWAP1
0x13a RETURN
---
0x129: JUMPDEST 
0x12a: V111 = 0x40
0x12c: V112 = M[0x40]
0x12f: M[V112] = S0
0x130: V113 = 0x20
0x132: V114 = ADD 0x20 V112
0x133: V115 = 0x40
0x135: V116 = M[0x40]
0x138: V117 = SUB V114 V116
0x13a: RETURN V116 V117
---
Entry stack: [V12, 0x7d, V126, V128, V131, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S1]

================================

Block 0x13b
[0x13b:0x158]
---
Predecessors: [0x5c]
Successors: [0x508]
---
0x13b JUMPDEST
0x13c PUSH2 0x7d
0x13f PUSH1 0x1
0x141 PUSH1 0xa0
0x143 PUSH1 0x2
0x145 EXP
0x146 SUB
0x147 PUSH1 0x4
0x149 CALLDATALOAD
0x14a DUP2
0x14b AND
0x14c SWAP1
0x14d PUSH1 0x24
0x14f CALLDATALOAD
0x150 SWAP1
0x151 PUSH1 0x44
0x153 CALLDATALOAD
0x154 AND
0x155 PUSH2 0x508
0x158 JUMP
---
0x13b: JUMPDEST 
0x13c: V118 = 0x7d
0x13f: V119 = 0x1
0x141: V120 = 0xa0
0x143: V121 = 0x2
0x145: V122 = EXP 0x2 0xa0
0x146: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V124 = 0x4
0x149: V125 = CALLDATALOAD 0x4
0x14b: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x14d: V127 = 0x24
0x14f: V128 = CALLDATALOAD 0x24
0x151: V129 = 0x44
0x153: V130 = CALLDATALOAD 0x44
0x154: V131 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x155: V132 = 0x508
0x158: JUMP 0x508
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d, V126, V128, V131]
Exit stack: [V12, 0x7d, V126, V128, V131]

================================

Block 0x159
[0x159:0x15f]
---
Predecessors: [0x67]
Successors: [0x160, 0x164]
---
0x159 JUMPDEST
0x15a CALLVALUE
0x15b ISZERO
0x15c PUSH2 0x164
0x15f JUMPI
---
0x159: JUMPDEST 
0x15a: V133 = CALLVALUE
0x15b: V134 = ISZERO V133
0x15c: V135 = 0x164
0x15f: JUMPI 0x164 V134
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x160
[0x160:0x163]
---
Predecessors: [0x159]
Successors: []
---
0x160 PUSH1 0x0
0x162 DUP1
0x163 REVERT
---
0x160: V136 = 0x0
0x163: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x164
[0x164:0x16b]
---
Predecessors: [0x159]
Successors: [0x54c]
---
0x164 JUMPDEST
0x165 PUSH2 0x16c
0x168 PUSH2 0x54c
0x16b JUMP
---
0x164: JUMPDEST 
0x165: V137 = 0x16c
0x168: V138 = 0x54c
0x16b: JUMP 0x54c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x16c]
Exit stack: [V12, 0x16c]

================================

Block 0x16c
[0x16c:0x17f]
---
Predecessors: [0x54c]
Successors: []
---
0x16c JUMPDEST
0x16d PUSH1 0x40
0x16f MLOAD
0x170 SWAP1
0x171 ISZERO
0x172 ISZERO
0x173 DUP2
0x174 MSTORE
0x175 PUSH1 0x20
0x177 ADD
0x178 PUSH1 0x40
0x17a MLOAD
0x17b DUP1
0x17c SWAP2
0x17d SUB
0x17e SWAP1
0x17f RETURN
---
0x16c: JUMPDEST 
0x16d: V139 = 0x40
0x16f: V140 = M[0x40]
0x171: V141 = ISZERO V551
0x172: V142 = ISZERO V141
0x174: M[V140] = V142
0x175: V143 = 0x20
0x177: V144 = ADD 0x20 V140
0x178: V145 = 0x40
0x17a: V146 = M[0x40]
0x17d: V147 = SUB V144 V146
0x17f: RETURN V146 V147
---
Entry stack: [V12, 0x16c, V551]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x16c]

================================

Block 0x180
[0x180:0x186]
---
Predecessors: [0x72]
Successors: [0x187, 0x18b]
---
0x180 JUMPDEST
0x181 CALLVALUE
0x182 ISZERO
0x183 PUSH2 0x18b
0x186 JUMPI
---
0x180: JUMPDEST 
0x181: V148 = CALLVALUE
0x182: V149 = ISZERO V148
0x183: V150 = 0x18b
0x186: JUMPI 0x18b V149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x187
[0x187:0x18a]
---
Predecessors: [0x180]
Successors: []
---
0x187 PUSH1 0x0
0x189 DUP1
0x18a REVERT
---
0x187: V151 = 0x0
0x18a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18b
[0x18b:0x192]
---
Predecessors: [0x180]
Successors: [0x55c]
---
0x18b JUMPDEST
0x18c PUSH2 0x7d
0x18f PUSH2 0x55c
0x192 JUMP
---
0x18b: JUMPDEST 
0x18c: V152 = 0x7d
0x18f: V153 = 0x55c
0x192: JUMP 0x55c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V12, 0x7d]

================================

Block 0x193
[0x193:0x1a1]
---
Predecessors: [0x8a]
Successors: [0x92]
---
0x193 JUMPDEST
0x194 PUSH1 0x0
0x196 SLOAD
0x197 PUSH1 0x1
0x199 PUSH1 0xa0
0x19b PUSH1 0x2
0x19d EXP
0x19e SUB
0x19f AND
0x1a0 DUP2
0x1a1 JUMP
---
0x193: JUMPDEST 
0x194: V154 = 0x0
0x196: V155 = S[0x0]
0x197: V156 = 0x1
0x199: V157 = 0xa0
0x19b: V158 = 0x2
0x19d: V159 = EXP 0x2 0xa0
0x19e: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19f: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x1a1: JUMP 0x92
---
Entry stack: [V12, 0x92]
Stack pops: 1
Stack additions: [S0, V161]
Exit stack: [V12, 0x92, V161]

================================

Block 0x1a2
[0x1a2:0x1b8]
---
Predecessors: [0xb9]
Successors: [0x1b9, 0x1bd]
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x0
0x1a5 SLOAD
0x1a6 CALLER
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af SWAP1
0x1b0 DUP2
0x1b1 AND
0x1b2 SWAP2
0x1b3 AND
0x1b4 EQ
0x1b5 PUSH2 0x1bd
0x1b8 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V162 = 0x0
0x1a5: V163 = S[0x0]
0x1a6: V164 = CALLER
0x1a7: V165 = 0x1
0x1a9: V166 = 0xa0
0x1ab: V167 = 0x2
0x1ad: V168 = EXP 0x2 0xa0
0x1ae: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1b3: V171 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V172 = EQ V171 V170
0x1b5: V173 = 0x1bd
0x1b8: JUMPI 0x1bd V172
---
Entry stack: [V12, 0x7d, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V71]

================================

Block 0x1b9
[0x1b9:0x1bc]
---
Predecessors: [0x1a2]
Successors: []
---
0x1b9 PUSH1 0x0
0x1bb DUP1
0x1bc REVERT
---
0x1b9: V174 = 0x0
0x1bc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V71]

================================

Block 0x1bd
[0x1bd:0x1eb]
---
Predecessors: [0x1a2]
Successors: [0x7d]
---
0x1bd JUMPDEST
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 SLOAD
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 NOT
0x1d8 AND
0x1d9 PUSH1 0x1
0x1db PUSH1 0xa0
0x1dd PUSH1 0x2
0x1df EXP
0x1e0 SUB
0x1e1 SWAP3
0x1e2 SWAP1
0x1e3 SWAP3
0x1e4 AND
0x1e5 SWAP2
0x1e6 SWAP1
0x1e7 SWAP2
0x1e8 OR
0x1e9 SWAP1
0x1ea SSTORE
0x1eb JUMP
---
0x1bd: JUMPDEST 
0x1be: V175 = 0x0
0x1c1: V176 = S[0x0]
0x1c2: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V178 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V179 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V176
0x1d9: V180 = 0x1
0x1db: V181 = 0xa0
0x1dd: V182 = 0x2
0x1df: V183 = EXP 0x2 0xa0
0x1e0: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e4: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x1e8: V186 = OR V185 V179
0x1ea: S[0x0] = V186
0x1eb: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V71]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ec
[0x1ec:0x202]
---
Predecessors: [0xd8]
Successors: [0x203, 0x207]
---
0x1ec JUMPDEST
0x1ed PUSH1 0x0
0x1ef SLOAD
0x1f0 CALLER
0x1f1 PUSH1 0x1
0x1f3 PUSH1 0xa0
0x1f5 PUSH1 0x2
0x1f7 EXP
0x1f8 SUB
0x1f9 SWAP1
0x1fa DUP2
0x1fb AND
0x1fc SWAP2
0x1fd AND
0x1fe EQ
0x1ff PUSH2 0x207
0x202 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V187 = 0x0
0x1ef: V188 = S[0x0]
0x1f0: V189 = CALLER
0x1f1: V190 = 0x1
0x1f3: V191 = 0xa0
0x1f5: V192 = 0x2
0x1f7: V193 = EXP 0x2 0xa0
0x1f8: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fb: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x1fd: V196 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V197 = EQ V196 V195
0x1ff: V198 = 0x207
0x202: JUMPI 0x207 V197
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x203
[0x203:0x206]
---
Predecessors: [0x1ec]
Successors: []
---
0x203 PUSH1 0x0
0x205 DUP1
0x206 REVERT
---
0x203: V199 = 0x0
0x206: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x207
[0x207:0x212]
---
Predecessors: [0x1ec]
Successors: []
---
0x207 JUMPDEST
0x208 CALLER
0x209 PUSH1 0x1
0x20b PUSH1 0xa0
0x20d PUSH1 0x2
0x20f EXP
0x210 SUB
0x211 AND
0x212 SELFDESTRUCT
---
0x207: JUMPDEST 
0x208: V200 = CALLER
0x209: V201 = 0x1
0x20b: V202 = 0xa0
0x20d: V203 = 0x2
0x20f: V204 = EXP 0x2 0xa0
0x210: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x211: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x212: SELFDESTRUCT V206
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x213
[0x213:0x229]
---
Predecessors: [0xeb]
Successors: [0x22a, 0x22e]
---
0x213 JUMPDEST
0x214 PUSH1 0x0
0x216 SLOAD
0x217 CALLER
0x218 PUSH1 0x1
0x21a PUSH1 0xa0
0x21c PUSH1 0x2
0x21e EXP
0x21f SUB
0x220 SWAP1
0x221 DUP2
0x222 AND
0x223 SWAP2
0x224 AND
0x225 EQ
0x226 PUSH2 0x22e
0x229 JUMPI
---
0x213: JUMPDEST 
0x214: V207 = 0x0
0x216: V208 = S[0x0]
0x217: V209 = CALLER
0x218: V210 = 0x1
0x21a: V211 = 0xa0
0x21c: V212 = 0x2
0x21e: V213 = EXP 0x2 0xa0
0x21f: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x222: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x224: V216 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x225: V217 = EQ V216 V215
0x226: V218 = 0x22e
0x229: JUMPI 0x22e V217
---
Entry stack: [V12, 0x7d, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V91]

================================

Block 0x22a
[0x22a:0x22d]
---
Predecessors: [0x213]
Successors: []
---
0x22a PUSH1 0x0
0x22c DUP1
0x22d REVERT
---
0x22a: V219 = 0x0
0x22d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V91]

================================

Block 0x22e
[0x22e:0x240]
---
Predecessors: [0x213]
Successors: [0x241, 0x245]
---
0x22e JUMPDEST
0x22f PUSH1 0x0
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 ADDRESS
0x23a AND
0x23b BALANCE
0x23c GT
0x23d PUSH2 0x245
0x240 JUMPI
---
0x22e: JUMPDEST 
0x22f: V220 = 0x0
0x231: V221 = 0x1
0x233: V222 = 0xa0
0x235: V223 = 0x2
0x237: V224 = EXP 0x2 0xa0
0x238: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V226 = ADDRESS
0x23a: V227 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V228 = BALANCE V227
0x23c: V229 = GT V228 0x0
0x23d: V230 = 0x245
0x240: JUMPI 0x245 V229
---
Entry stack: [V12, 0x7d, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V91]

================================

Block 0x241
[0x241:0x244]
---
Predecessors: [0x22e]
Successors: []
---
0x241 PUSH1 0x0
0x243 DUP1
0x244 REVERT
---
0x241: V231 = 0x0
0x244: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V91]

================================

Block 0x245
[0x245:0x279]
---
Predecessors: [0x22e]
Successors: [0x7d]
---
0x245 JUMPDEST
0x246 CALLER
0x247 PUSH1 0x1
0x249 PUSH1 0xa0
0x24b PUSH1 0x2
0x24d EXP
0x24e SUB
0x24f AND
0x250 PUSH2 0x8fc
0x253 ADDRESS
0x254 PUSH1 0x1
0x256 PUSH1 0xa0
0x258 PUSH1 0x2
0x25a EXP
0x25b SUB
0x25c AND
0x25d BALANCE
0x25e SWAP1
0x25f DUP2
0x260 ISZERO
0x261 MUL
0x262 SWAP1
0x263 PUSH1 0x40
0x265 MLOAD
0x266 PUSH1 0x0
0x268 PUSH1 0x40
0x26a MLOAD
0x26b DUP1
0x26c DUP4
0x26d SUB
0x26e DUP2
0x26f DUP6
0x270 DUP9
0x271 DUP9
0x272 CALL
0x273 POP
0x274 POP
0x275 POP
0x276 POP
0x277 POP
0x278 POP
0x279 JUMP
---
0x245: JUMPDEST 
0x246: V232 = CALLER
0x247: V233 = 0x1
0x249: V234 = 0xa0
0x24b: V235 = 0x2
0x24d: V236 = EXP 0x2 0xa0
0x24e: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x250: V239 = 0x8fc
0x253: V240 = ADDRESS
0x254: V241 = 0x1
0x256: V242 = 0xa0
0x258: V243 = 0x2
0x25a: V244 = EXP 0x2 0xa0
0x25b: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25c: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x25d: V247 = BALANCE V246
0x260: V248 = ISZERO V247
0x261: V249 = MUL V248 0x8fc
0x263: V250 = 0x40
0x265: V251 = M[0x40]
0x266: V252 = 0x0
0x268: V253 = 0x40
0x26a: V254 = M[0x40]
0x26d: V255 = SUB V251 V254
0x272: V256 = CALL V249 V238 V247 V254 V255 V254 0x0
0x279: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V91]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x27a
[0x27a:0x290]
---
Predecessors: [0x10a]
Successors: [0x291, 0x295]
---
0x27a JUMPDEST
0x27b PUSH1 0x0
0x27d SLOAD
0x27e CALLER
0x27f PUSH1 0x1
0x281 PUSH1 0xa0
0x283 PUSH1 0x2
0x285 EXP
0x286 SUB
0x287 SWAP1
0x288 DUP2
0x289 AND
0x28a SWAP2
0x28b AND
0x28c EQ
0x28d PUSH2 0x295
0x290 JUMPI
---
0x27a: JUMPDEST 
0x27b: V257 = 0x0
0x27d: V258 = S[0x0]
0x27e: V259 = CALLER
0x27f: V260 = 0x1
0x281: V261 = 0xa0
0x283: V262 = 0x2
0x285: V263 = EXP 0x2 0xa0
0x286: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x289: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x28b: V266 = AND V258 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V267 = EQ V266 V265
0x28d: V268 = 0x295
0x290: JUMPI 0x295 V267
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x27a]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V269 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x295
[0x295:0x2b4]
---
Predecessors: [0x27a]
Successors: [0x7d]
---
0x295 JUMPDEST
0x296 PUSH1 0x0
0x298 DUP1
0x299 SLOAD
0x29a PUSH21 0xff0000000000000000000000000000000000000000
0x2b0 NOT
0x2b1 AND
0x2b2 SWAP1
0x2b3 SSTORE
0x2b4 JUMP
---
0x295: JUMPDEST 
0x296: V270 = 0x0
0x299: V271 = S[0x0]
0x29a: V272 = 0xff0000000000000000000000000000000000000000
0x2b0: V273 = NOT 0xff0000000000000000000000000000000000000000
0x2b1: V274 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V271
0x2b3: S[0x0] = V274
0x2b4: JUMP 0x7d
---
Entry stack: [V12, 0x7d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b5
[0x2b5:0x2d1]
---
Predecessors: [0x112, 0x508]
Successors: [0x2d2, 0x2f9]
---
0x2b5 JUMPDEST
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 SLOAD
0x2ba DUP2
0x2bb SWAP1
0x2bc DUP2
0x2bd SWAP1
0x2be DUP2
0x2bf SWAP1
0x2c0 DUP2
0x2c1 SWAP1
0x2c2 PUSH1 0xa0
0x2c4 PUSH1 0x2
0x2c6 EXP
0x2c7 SWAP1
0x2c8 DIV
0x2c9 PUSH1 0xff
0x2cb AND
0x2cc ISZERO
0x2cd DUP1
0x2ce PUSH2 0x2f9
0x2d1 JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V275 = 0x0
0x2b9: V276 = S[0x0]
0x2c2: V277 = 0xa0
0x2c4: V278 = 0x2
0x2c6: V279 = EXP 0x2 0xa0
0x2c8: V280 = DIV V276 0x10000000000000000000000000000000000000000
0x2c9: V281 = 0xff
0x2cb: V282 = AND 0xff V280
0x2cc: V283 = ISZERO V282
0x2ce: V284 = 0x2f9
0x2d1: JUMPI 0x2f9 V283
---
Entry stack: [V12, 0x7d, V126, V128, V131, S3, {0x129, 0x514}, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, V283]
Exit stack: [V12, 0x7d, V126, V128, V131, S3, {0x129, 0x514}, S1, S0, 0x0, 0x0, 0x0, 0x0, 0x0, V283]

================================

Block 0x2d2
[0x2d2:0x2e5]
---
Predecessors: [0x2b5]
Successors: [0x2e6, 0x2f9]
---
0x2d2 POP
0x2d3 PUSH1 0x0
0x2d5 SLOAD
0x2d6 PUSH1 0xa0
0x2d8 PUSH1 0x2
0x2da EXP
0x2db SWAP1
0x2dc DIV
0x2dd PUSH1 0xff
0x2df AND
0x2e0 DUP1
0x2e1 ISZERO
0x2e2 PUSH2 0x2f9
0x2e5 JUMPI
---
0x2d3: V285 = 0x0
0x2d5: V286 = S[0x0]
0x2d6: V287 = 0xa0
0x2d8: V288 = 0x2
0x2da: V289 = EXP 0x2 0xa0
0x2dc: V290 = DIV V286 0x10000000000000000000000000000000000000000
0x2dd: V291 = 0xff
0x2df: V292 = AND 0xff V290
0x2e1: V293 = ISZERO V292
0x2e2: V294 = 0x2f9
0x2e5: JUMPI 0x2f9 V293
---
Entry stack: [V12, 0x7d, V126, V128, V131, S9, {0x129, 0x514}, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x0, V283]
Stack pops: 1
Stack additions: [V292]
Exit stack: [V12, 0x7d, V126, V128, V131, S9, {0x129, 0x514}, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x0, V292]

================================

Block 0x2e6
[0x2e6:0x2f8]
---
Predecessors: [0x2d2]
Successors: [0x2f9]
---
0x2e6 POP
0x2e7 PUSH1 0x0
0x2e9 SLOAD
0x2ea CALLER
0x2eb PUSH1 0x1
0x2ed PUSH1 0xa0
0x2ef PUSH1 0x2
0x2f1 EXP
0x2f2 SUB
0x2f3 SWAP1
0x2f4 DUP2
0x2f5 AND
0x2f6 SWAP2
0x2f7 AND
0x2f8 EQ
---
0x2e7: V295 = 0x0
0x2e9: V296 = S[0x0]
0x2ea: V297 = CALLER
0x2eb: V298 = 0x1
0x2ed: V299 = 0xa0
0x2ef: V300 = 0x2
0x2f1: V301 = EXP 0x2 0xa0
0x2f2: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f5: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x2f7: V304 = AND V296 0xffffffffffffffffffffffffffffffffffffffff
0x2f8: V305 = EQ V304 V303
---
Entry stack: [V12, 0x7d, V126, V128, V131, S9, {0x129, 0x514}, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x0, V292]
Stack pops: 1
Stack additions: [V305]
Exit stack: [V12, 0x7d, V126, V128, V131, S9, {0x129, 0x514}, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x0, V305]

================================

Block 0x2f9
[0x2f9:0x2fe]
---
Predecessors: [0x2b5, 0x2d2, 0x2e6]
Successors: [0x2ff, 0x4fd]
---
0x2f9 JUMPDEST
0x2fa ISZERO
0x2fb PUSH2 0x4fd
0x2fe JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V306 = ISZERO S0
0x2fb: V307 = 0x4fd
0x2fe: JUMPI 0x4fd V306
---
Entry stack: [V12, 0x7d, V126, V128, V131, S9, {0x129, 0x514}, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S9, {0x129, 0x514}, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2ff
[0x2ff:0x339]
---
Predecessors: [0x2f9]
Successors: [0x33a, 0x33e]
---
0x2ff DUP7
0x300 SWAP3
0x301 POP
0x302 DUP3
0x303 PUSH1 0x1
0x305 PUSH1 0xa0
0x307 PUSH1 0x2
0x309 EXP
0x30a SUB
0x30b AND
0x30c PUSH4 0xe1c7392a
0x311 PUSH1 0x40
0x313 MLOAD
0x314 DUP2
0x315 PUSH4 0xffffffff
0x31a AND
0x31b PUSH1 0xe0
0x31d PUSH1 0x2
0x31f EXP
0x320 MUL
0x321 DUP2
0x322 MSTORE
0x323 PUSH1 0x4
0x325 ADD
0x326 PUSH1 0x0
0x328 PUSH1 0x40
0x32a MLOAD
0x32b DUP1
0x32c DUP4
0x32d SUB
0x32e DUP2
0x32f PUSH1 0x0
0x331 DUP8
0x332 DUP1
0x333 EXTCODESIZE
0x334 ISZERO
0x335 ISZERO
0x336 PUSH2 0x33e
0x339 JUMPI
---
0x303: V308 = 0x1
0x305: V309 = 0xa0
0x307: V310 = 0x2
0x309: V311 = EXP 0x2 0xa0
0x30a: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30b: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x30c: V314 = 0xe1c7392a
0x311: V315 = 0x40
0x313: V316 = M[0x40]
0x315: V317 = 0xffffffff
0x31a: V318 = AND 0xffffffff 0xe1c7392a
0x31b: V319 = 0xe0
0x31d: V320 = 0x2
0x31f: V321 = EXP 0x2 0xe0
0x320: V322 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe1c7392a
0x322: M[V316] = 0xe1c7392a00000000000000000000000000000000000000000000000000000000
0x323: V323 = 0x4
0x325: V324 = ADD 0x4 V316
0x326: V325 = 0x0
0x328: V326 = 0x40
0x32a: V327 = M[0x40]
0x32d: V328 = SUB V324 V327
0x32f: V329 = 0x0
0x333: V330 = EXTCODESIZE V313
0x334: V331 = ISZERO V330
0x335: V332 = ISZERO V331
0x336: V333 = 0x33e
0x339: JUMPI 0x33e V332
---
Entry stack: [V12, 0x7d, V126, V128, V131, S8, {0x129, 0x514}, S6, S5, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S6, S1, S0, V313, 0xe1c7392a, V324, 0x0, V327, V328, V327, 0x0, V313]
Exit stack: [V12, 0x7d, V126, V128, V131, S8, {0x129, 0x514}, S6, S5, 0x0, 0x0, S6, 0x0, 0x0, V313, 0xe1c7392a, V324, 0x0, V327, V328, V327, 0x0, V313]

================================

Block 0x33a
[0x33a:0x33d]
---
Predecessors: [0x2ff]
Successors: []
---
0x33a PUSH1 0x0
0x33c DUP1
0x33d REVERT
---
0x33a: V334 = 0x0
0x33d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, 0x0, S11, 0x0, 0x0, V313, 0xe1c7392a, V324, 0x0, V327, V328, V327, 0x0, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, 0x0, S11, 0x0, 0x0, V313, 0xe1c7392a, V324, 0x0, V327, V328, V327, 0x0, V313]

================================

Block 0x33e
[0x33e:0x34a]
---
Predecessors: [0x2ff]
Successors: [0x34b, 0x34f]
---
0x33e JUMPDEST
0x33f PUSH2 0x2c6
0x342 GAS
0x343 SUB
0x344 CALL
0x345 ISZERO
0x346 ISZERO
0x347 PUSH2 0x34f
0x34a JUMPI
---
0x33e: JUMPDEST 
0x33f: V335 = 0x2c6
0x342: V336 = GAS
0x343: V337 = SUB V336 0x2c6
0x344: V338 = CALL V337 V313 0x0 V327 V328 V327 0x0
0x345: V339 = ISZERO V338
0x346: V340 = ISZERO V339
0x347: V341 = 0x34f
0x34a: JUMPI 0x34f V340
---
Entry stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, 0x0, S11, 0x0, 0x0, V313, 0xe1c7392a, V324, 0x0, V327, V328, V327, 0x0, V313]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, 0x0, S11, 0x0, 0x0, V313, 0xe1c7392a, V324]

================================

Block 0x34b
[0x34b:0x34e]
---
Predecessors: [0x33e]
Successors: []
---
0x34b PUSH1 0x0
0x34d DUP1
0x34e REVERT
---
0x34b: V342 = 0x0
0x34e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, 0x0, S5, 0x0, 0x0, S2, 0xe1c7392a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, 0x0, S5, 0x0, 0x0, S2, 0xe1c7392a, S0]

================================

Block 0x34f
[0x34f:0x394]
---
Predecessors: [0x33e]
Successors: [0x395, 0x399]
---
0x34f JUMPDEST
0x350 POP
0x351 POP
0x352 POP
0x353 DUP3
0x354 PUSH1 0x1
0x356 PUSH1 0xa0
0x358 PUSH1 0x2
0x35a EXP
0x35b SUB
0x35c AND
0x35d PUSH4 0xf02e9eb6
0x362 PUSH1 0x1
0x364 PUSH1 0x40
0x366 MLOAD
0x367 PUSH1 0xe0
0x369 PUSH1 0x2
0x36b EXP
0x36c PUSH4 0xffffffff
0x371 DUP5
0x372 AND
0x373 MUL
0x374 DUP2
0x375 MSTORE
0x376 PUSH1 0x4
0x378 DUP2
0x379 ADD
0x37a SWAP2
0x37b SWAP1
0x37c SWAP2
0x37d MSTORE
0x37e PUSH1 0x24
0x380 ADD
0x381 PUSH1 0x0
0x383 PUSH1 0x40
0x385 MLOAD
0x386 DUP1
0x387 DUP4
0x388 SUB
0x389 DUP2
0x38a PUSH1 0x0
0x38c DUP8
0x38d DUP1
0x38e EXTCODESIZE
0x38f ISZERO
0x390 ISZERO
0x391 PUSH2 0x399
0x394 JUMPI
---
0x34f: JUMPDEST 
0x354: V343 = 0x1
0x356: V344 = 0xa0
0x358: V345 = 0x2
0x35a: V346 = EXP 0x2 0xa0
0x35b: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35c: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x35d: V349 = 0xf02e9eb6
0x362: V350 = 0x1
0x364: V351 = 0x40
0x366: V352 = M[0x40]
0x367: V353 = 0xe0
0x369: V354 = 0x2
0x36b: V355 = EXP 0x2 0xe0
0x36c: V356 = 0xffffffff
0x372: V357 = AND 0xf02e9eb6 0xffffffff
0x373: V358 = MUL 0xf02e9eb6 0x100000000000000000000000000000000000000000000000000000000
0x375: M[V352] = 0xf02e9eb600000000000000000000000000000000000000000000000000000000
0x376: V359 = 0x4
0x379: V360 = ADD V352 0x4
0x37d: M[V360] = 0x1
0x37e: V361 = 0x24
0x380: V362 = ADD 0x24 V352
0x381: V363 = 0x0
0x383: V364 = 0x40
0x385: V365 = M[0x40]
0x388: V366 = SUB V362 V365
0x38a: V367 = 0x0
0x38e: V368 = EXTCODESIZE V348
0x38f: V369 = ISZERO V368
0x390: V370 = ISZERO V369
0x391: V371 = 0x399
0x394: JUMPI 0x399 V370
---
Entry stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, 0x0, S5, 0x0, 0x0, S2, 0xe1c7392a, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, V348, 0xf02e9eb6, V362, 0x0, V365, V366, V365, 0x0, V348]
Exit stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, 0x0, S5, 0x0, 0x0, V348, 0xf02e9eb6, V362, 0x0, V365, V366, V365, 0x0, V348]

================================

Block 0x395
[0x395:0x398]
---
Predecessors: [0x34f]
Successors: []
---
0x395 PUSH1 0x0
0x397 DUP1
0x398 REVERT
---
0x395: V372 = 0x0
0x398: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, 0x0, S11, 0x0, 0x0, V348, 0xf02e9eb6, V362, 0x0, V365, V366, V365, 0x0, V348]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, 0x0, S11, 0x0, 0x0, V348, 0xf02e9eb6, V362, 0x0, V365, V366, V365, 0x0, V348]

================================

Block 0x399
[0x399:0x3a5]
---
Predecessors: [0x34f]
Successors: [0x3a6, 0x3aa]
---
0x399 JUMPDEST
0x39a PUSH2 0x2c6
0x39d GAS
0x39e SUB
0x39f CALL
0x3a0 ISZERO
0x3a1 ISZERO
0x3a2 PUSH2 0x3aa
0x3a5 JUMPI
---
0x399: JUMPDEST 
0x39a: V373 = 0x2c6
0x39d: V374 = GAS
0x39e: V375 = SUB V374 0x2c6
0x39f: V376 = CALL V375 V348 0x0 V365 V366 V365 0x0
0x3a0: V377 = ISZERO V376
0x3a1: V378 = ISZERO V377
0x3a2: V379 = 0x3aa
0x3a5: JUMPI 0x3aa V378
---
Entry stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, 0x0, S11, 0x0, 0x0, V348, 0xf02e9eb6, V362, 0x0, V365, V366, V365, 0x0, V348]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, 0x0, S11, 0x0, 0x0, V348, 0xf02e9eb6, V362]

================================

Block 0x3a6
[0x3a6:0x3a9]
---
Predecessors: [0x399]
Successors: []
---
0x3a6 PUSH1 0x0
0x3a8 DUP1
0x3a9 REVERT
---
0x3a6: V380 = 0x0
0x3a9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, 0x0, S5, 0x0, 0x0, S2, 0xf02e9eb6, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, 0x0, S5, 0x0, 0x0, S2, 0xf02e9eb6, S0]

================================

Block 0x3aa
[0x3aa:0x3e5]
---
Predecessors: [0x399]
Successors: [0x3e6, 0x3ea]
---
0x3aa JUMPDEST
0x3ab POP
0x3ac POP
0x3ad POP
0x3ae DUP3
0x3af PUSH1 0x1
0x3b1 PUSH1 0xa0
0x3b3 PUSH1 0x2
0x3b5 EXP
0x3b6 SUB
0x3b7 AND
0x3b8 PUSH4 0xd0e30db0
0x3bd DUP8
0x3be PUSH1 0x40
0x3c0 MLOAD
0x3c1 DUP3
0x3c2 PUSH4 0xffffffff
0x3c7 AND
0x3c8 PUSH1 0xe0
0x3ca PUSH1 0x2
0x3cc EXP
0x3cd MUL
0x3ce DUP2
0x3cf MSTORE
0x3d0 PUSH1 0x4
0x3d2 ADD
0x3d3 PUSH1 0x0
0x3d5 PUSH1 0x40
0x3d7 MLOAD
0x3d8 DUP1
0x3d9 DUP4
0x3da SUB
0x3db DUP2
0x3dc DUP6
0x3dd DUP9
0x3de DUP1
0x3df EXTCODESIZE
0x3e0 ISZERO
0x3e1 ISZERO
0x3e2 PUSH2 0x3ea
0x3e5 JUMPI
---
0x3aa: JUMPDEST 
0x3af: V381 = 0x1
0x3b1: V382 = 0xa0
0x3b3: V383 = 0x2
0x3b5: V384 = EXP 0x2 0xa0
0x3b6: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b7: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x3b8: V387 = 0xd0e30db0
0x3be: V388 = 0x40
0x3c0: V389 = M[0x40]
0x3c2: V390 = 0xffffffff
0x3c7: V391 = AND 0xffffffff 0xd0e30db0
0x3c8: V392 = 0xe0
0x3ca: V393 = 0x2
0x3cc: V394 = EXP 0x2 0xe0
0x3cd: V395 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x3cf: M[V389] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x3d0: V396 = 0x4
0x3d2: V397 = ADD 0x4 V389
0x3d3: V398 = 0x0
0x3d5: V399 = 0x40
0x3d7: V400 = M[0x40]
0x3da: V401 = SUB V397 V400
0x3df: V402 = EXTCODESIZE V386
0x3e0: V403 = ISZERO V402
0x3e1: V404 = ISZERO V403
0x3e2: V405 = 0x3ea
0x3e5: JUMPI 0x3ea V404
---
Entry stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, 0x0, S5, 0x0, 0x0, S2, 0xf02e9eb6, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V386, 0xd0e30db0, S8, V397, 0x0, V400, V401, V400, S8, V386]
Exit stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, 0x0, S5, 0x0, 0x0, V386, 0xd0e30db0, S8, V397, 0x0, V400, V401, V400, S8, V386]

================================

Block 0x3e6
[0x3e6:0x3e9]
---
Predecessors: [0x3aa]
Successors: []
---
0x3e6 PUSH1 0x0
0x3e8 DUP1
0x3e9 REVERT
---
0x3e6: V406 = 0x0
0x3e9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S18, {0x129, 0x514}, S16, S15, 0x0, 0x0, S12, 0x0, 0x0, V386, 0xd0e30db0, S7, V397, 0x0, V400, V401, V400, S1, V386]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S18, {0x129, 0x514}, S16, S15, 0x0, 0x0, S12, 0x0, 0x0, V386, 0xd0e30db0, S7, V397, 0x0, V400, V401, V400, S1, V386]

================================

Block 0x3ea
[0x3ea:0x3f6]
---
Predecessors: [0x3aa]
Successors: [0x3f7, 0x3fb]
---
0x3ea JUMPDEST
0x3eb PUSH2 0x25ee
0x3ee GAS
0x3ef SUB
0x3f0 CALL
0x3f1 ISZERO
0x3f2 ISZERO
0x3f3 PUSH2 0x3fb
0x3f6 JUMPI
---
0x3ea: JUMPDEST 
0x3eb: V407 = 0x25ee
0x3ee: V408 = GAS
0x3ef: V409 = SUB V408 0x25ee
0x3f0: V410 = CALL V409 V386 S1 V400 V401 V400 0x0
0x3f1: V411 = ISZERO V410
0x3f2: V412 = ISZERO V411
0x3f3: V413 = 0x3fb
0x3f6: JUMPI 0x3fb V412
---
Entry stack: [V12, 0x7d, V126, V128, V131, S18, {0x129, 0x514}, S16, S15, 0x0, 0x0, S12, 0x0, 0x0, V386, 0xd0e30db0, S7, V397, 0x0, V400, V401, V400, S1, V386]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S18, {0x129, 0x514}, S16, S15, 0x0, 0x0, S12, 0x0, 0x0, V386, 0xd0e30db0, S7, V397]

================================

Block 0x3f7
[0x3f7:0x3fa]
---
Predecessors: [0x3ea]
Successors: []
---
0x3f7 PUSH1 0x0
0x3f9 DUP1
0x3fa REVERT
---
0x3f7: V414 = 0x0
0x3fa: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S12, {0x129, 0x514}, S10, S9, 0x0, 0x0, S6, 0x0, 0x0, S3, 0xd0e30db0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S12, {0x129, 0x514}, S10, S9, 0x0, 0x0, S6, 0x0, 0x0, S3, 0xd0e30db0, S1, S0]

================================

Block 0x3fb
[0x3fb:0x412]
---
Predecessors: [0x3ea]
Successors: [0x413, 0x414]
---
0x3fb JUMPDEST
0x3fc POP
0x3fd POP
0x3fe POP
0x3ff POP
0x400 DUP6
0x401 DUP8
0x402 PUSH1 0x1
0x404 PUSH1 0xa0
0x406 PUSH1 0x2
0x408 EXP
0x409 SUB
0x40a AND
0x40b BALANCE
0x40c DUP2
0x40d ISZERO
0x40e ISZERO
0x40f PUSH2 0x414
0x412 JUMPI
---
0x3fb: JUMPDEST 
0x402: V415 = 0x1
0x404: V416 = 0xa0
0x406: V417 = 0x2
0x408: V418 = EXP 0x2 0xa0
0x409: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40a: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0x40b: V421 = BALANCE V420
0x40d: V422 = ISZERO S9
0x40e: V423 = ISZERO V422
0x40f: V424 = 0x414
0x412: JUMPI 0x414 V423
---
Entry stack: [V12, 0x7d, V126, V128, V131, S12, {0x129, 0x514}, S10, S9, 0x0, 0x0, S6, 0x0, 0x0, S3, 0xd0e30db0, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S9, V421]
Exit stack: [V12, 0x7d, V126, V128, V131, S12, {0x129, 0x514}, S10, S9, 0x0, 0x0, S6, 0x0, 0x0, S9, V421]

================================

Block 0x413
[0x413:0x413]
---
Predecessors: [0x3fb]
Successors: []
---
0x413 INVALID
---
0x413: INVALID 
---
Entry stack: [V12, 0x7d, V126, V128, V131, S10, {0x129, 0x514}, S8, S7, 0x0, 0x0, S4, 0x0, 0x0, S1, V421]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S10, {0x129, 0x514}, S8, S7, 0x0, 0x0, S4, 0x0, 0x0, S1, V421]

================================

Block 0x414
[0x414:0x41b]
---
Predecessors: [0x3fb]
Successors: [0x41c]
---
0x414 JUMPDEST
0x415 DIV
0x416 SWAP2
0x417 POP
0x418 PUSH1 0x0
0x41a SWAP1
0x41b POP
---
0x414: JUMPDEST 
0x415: V425 = DIV V421 S1
0x418: V426 = 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S10, {0x129, 0x514}, S8, S7, 0x0, 0x0, S4, 0x0, 0x0, S1, V421]
Stack pops: 4
Stack additions: [V425, 0x0]
Exit stack: [V12, 0x7d, V126, V128, V131, S10, {0x129, 0x514}, S8, S7, 0x0, 0x0, S4, V425, 0x0]

================================

Block 0x41c
[0x41c:0x424]
---
Predecessors: [0x414, 0x47b]
Successors: [0x425, 0x48a]
---
0x41c JUMPDEST
0x41d DUP2
0x41e DUP2
0x41f LT
0x420 ISZERO
0x421 PUSH2 0x48a
0x424 JUMPI
---
0x41c: JUMPDEST 
0x41f: V427 = LT S0 S1
0x420: V428 = ISZERO V427
0x421: V429 = 0x48a
0x424: JUMPI 0x48a V428
---
Entry stack: [V12, 0x7d, V126, V128, V131, S8, {0x129, 0x514}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V126, V128, V131, S8, {0x129, 0x514}, S6, S5, 0x0, S3, S2, S1, S0]

================================

Block 0x425
[0x425:0x465]
---
Predecessors: [0x41c]
Successors: [0x466, 0x46a]
---
0x425 DUP3
0x426 PUSH1 0x1
0x428 PUSH1 0xa0
0x42a PUSH1 0x2
0x42c EXP
0x42d SUB
0x42e AND
0x42f PUSH4 0x2e1a7d4d
0x434 DUP8
0x435 PUSH1 0x40
0x437 MLOAD
0x438 PUSH1 0xe0
0x43a PUSH1 0x2
0x43c EXP
0x43d PUSH4 0xffffffff
0x442 DUP5
0x443 AND
0x444 MUL
0x445 DUP2
0x446 MSTORE
0x447 PUSH1 0x4
0x449 DUP2
0x44a ADD
0x44b SWAP2
0x44c SWAP1
0x44d SWAP2
0x44e MSTORE
0x44f PUSH1 0x24
0x451 ADD
0x452 PUSH1 0x0
0x454 PUSH1 0x40
0x456 MLOAD
0x457 DUP1
0x458 DUP4
0x459 SUB
0x45a DUP2
0x45b PUSH1 0x0
0x45d DUP8
0x45e DUP1
0x45f EXTCODESIZE
0x460 ISZERO
0x461 ISZERO
0x462 PUSH2 0x46a
0x465 JUMPI
---
0x426: V430 = 0x1
0x428: V431 = 0xa0
0x42a: V432 = 0x2
0x42c: V433 = EXP 0x2 0xa0
0x42d: V434 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42e: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x42f: V436 = 0x2e1a7d4d
0x435: V437 = 0x40
0x437: V438 = M[0x40]
0x438: V439 = 0xe0
0x43a: V440 = 0x2
0x43c: V441 = EXP 0x2 0xe0
0x43d: V442 = 0xffffffff
0x443: V443 = AND 0x2e1a7d4d 0xffffffff
0x444: V444 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x446: M[V438] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x447: V445 = 0x4
0x44a: V446 = ADD V438 0x4
0x44e: M[V446] = S5
0x44f: V447 = 0x24
0x451: V448 = ADD 0x24 V438
0x452: V449 = 0x0
0x454: V450 = 0x40
0x456: V451 = M[0x40]
0x459: V452 = SUB V448 V451
0x45b: V453 = 0x0
0x45f: V454 = EXTCODESIZE V435
0x460: V455 = ISZERO V454
0x461: V456 = ISZERO V455
0x462: V457 = 0x46a
0x465: JUMPI 0x46a V456
---
Entry stack: [V12, 0x7d, V126, V128, V131, S8, {0x129, 0x514}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V435, 0x2e1a7d4d, V448, 0x0, V451, V452, V451, 0x0, V435]
Exit stack: [V12, 0x7d, V126, V128, V131, S8, {0x129, 0x514}, S6, S5, 0x0, S3, S2, S1, S0, V435, 0x2e1a7d4d, V448, 0x0, V451, V452, V451, 0x0, V435]

================================

Block 0x466
[0x466:0x469]
---
Predecessors: [0x425]
Successors: []
---
0x466 PUSH1 0x0
0x468 DUP1
0x469 REVERT
---
0x466: V458 = 0x0
0x469: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, S12, S11, S10, S9, V435, 0x2e1a7d4d, V448, 0x0, V451, V452, V451, 0x0, V435]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, S12, S11, S10, S9, V435, 0x2e1a7d4d, V448, 0x0, V451, V452, V451, 0x0, V435]

================================

Block 0x46a
[0x46a:0x476]
---
Predecessors: [0x425]
Successors: [0x477, 0x47b]
---
0x46a JUMPDEST
0x46b PUSH2 0x2c6
0x46e GAS
0x46f SUB
0x470 CALL
0x471 ISZERO
0x472 ISZERO
0x473 PUSH2 0x47b
0x476 JUMPI
---
0x46a: JUMPDEST 
0x46b: V459 = 0x2c6
0x46e: V460 = GAS
0x46f: V461 = SUB V460 0x2c6
0x470: V462 = CALL V461 V435 0x0 V451 V452 V451 0x0
0x471: V463 = ISZERO V462
0x472: V464 = ISZERO V463
0x473: V465 = 0x47b
0x476: JUMPI 0x47b V464
---
Entry stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, S12, S11, S10, S9, V435, 0x2e1a7d4d, V448, 0x0, V451, V452, V451, 0x0, V435]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, S12, S11, S10, S9, V435, 0x2e1a7d4d, V448]

================================

Block 0x477
[0x477:0x47a]
---
Predecessors: [0x46a]
Successors: []
---
0x477 PUSH1 0x0
0x479 DUP1
0x47a REVERT
---
0x477: V466 = 0x0
0x47a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, S6, S5, S4, S3, V435, 0x2e1a7d4d, V448]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, S6, S5, S4, S3, V435, 0x2e1a7d4d, V448]

================================

Block 0x47b
[0x47b:0x489]
---
Predecessors: [0x46a]
Successors: [0x41c]
---
0x47b JUMPDEST
0x47c POP
0x47d POP
0x47e POP
0x47f SWAP3
0x480 DUP6
0x481 ADD
0x482 SWAP3
0x483 PUSH1 0x1
0x485 ADD
0x486 PUSH2 0x41c
0x489 JUMP
---
0x47b: JUMPDEST 
0x481: V467 = ADD S8 S6
0x483: V468 = 0x1
0x485: V469 = ADD 0x1 S3
0x486: V470 = 0x41c
0x489: JUMP 0x41c
---
Entry stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, S6, S5, S4, S3, V435, 0x2e1a7d4d, V448]
Stack pops: 9
Stack additions: [S8, S7, V467, S5, S4, V469]
Exit stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, V467, S5, S4, V469]

================================

Block 0x48a
[0x48a:0x49d]
---
Predecessors: [0x41c]
Successors: [0x49e, 0x4fd]
---
0x48a JUMPDEST
0x48b PUSH1 0x0
0x48d DUP4
0x48e PUSH1 0x1
0x490 PUSH1 0xa0
0x492 PUSH1 0x2
0x494 EXP
0x495 SUB
0x496 AND
0x497 BALANCE
0x498 GT
0x499 ISZERO
0x49a PUSH2 0x4fd
0x49d JUMPI
---
0x48a: JUMPDEST 
0x48b: V471 = 0x0
0x48e: V472 = 0x1
0x490: V473 = 0xa0
0x492: V474 = 0x2
0x494: V475 = EXP 0x2 0xa0
0x495: V476 = SUB 0x10000000000000000000000000000000000000000 0x1
0x496: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x497: V478 = BALANCE V477
0x498: V479 = GT V478 0x0
0x499: V480 = ISZERO V479
0x49a: V481 = 0x4fd
0x49d: JUMPI 0x4fd V480
---
Entry stack: [V12, 0x7d, V126, V128, V131, S8, {0x129, 0x514}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x7d, V126, V128, V131, S8, {0x129, 0x514}, S6, S5, 0x0, S3, S2, S1, S0]

================================

Block 0x49e
[0x49e:0x4df]
---
Predecessors: [0x48a]
Successors: [0x4e0, 0x4e4]
---
0x49e PUSH1 0x1
0x4a0 PUSH1 0xa0
0x4a2 PUSH1 0x2
0x4a4 EXP
0x4a5 SUB
0x4a6 DUP4
0x4a7 AND
0x4a8 PUSH4 0x2e1a7d4d
0x4ad DUP2
0x4ae BALANCE
0x4af PUSH1 0x40
0x4b1 MLOAD
0x4b2 PUSH1 0xe0
0x4b4 PUSH1 0x2
0x4b6 EXP
0x4b7 PUSH4 0xffffffff
0x4bc DUP5
0x4bd AND
0x4be MUL
0x4bf DUP2
0x4c0 MSTORE
0x4c1 PUSH1 0x4
0x4c3 DUP2
0x4c4 ADD
0x4c5 SWAP2
0x4c6 SWAP1
0x4c7 SWAP2
0x4c8 MSTORE
0x4c9 PUSH1 0x24
0x4cb ADD
0x4cc PUSH1 0x0
0x4ce PUSH1 0x40
0x4d0 MLOAD
0x4d1 DUP1
0x4d2 DUP4
0x4d3 SUB
0x4d4 DUP2
0x4d5 PUSH1 0x0
0x4d7 DUP8
0x4d8 DUP1
0x4d9 EXTCODESIZE
0x4da ISZERO
0x4db ISZERO
0x4dc PUSH2 0x4e4
0x4df JUMPI
---
0x49e: V482 = 0x1
0x4a0: V483 = 0xa0
0x4a2: V484 = 0x2
0x4a4: V485 = EXP 0x2 0xa0
0x4a5: V486 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a7: V487 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x4a8: V488 = 0x2e1a7d4d
0x4ae: V489 = BALANCE V487
0x4af: V490 = 0x40
0x4b1: V491 = M[0x40]
0x4b2: V492 = 0xe0
0x4b4: V493 = 0x2
0x4b6: V494 = EXP 0x2 0xe0
0x4b7: V495 = 0xffffffff
0x4bd: V496 = AND 0x2e1a7d4d 0xffffffff
0x4be: V497 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x4c0: M[V491] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x4c1: V498 = 0x4
0x4c4: V499 = ADD V491 0x4
0x4c8: M[V499] = V489
0x4c9: V500 = 0x24
0x4cb: V501 = ADD 0x24 V491
0x4cc: V502 = 0x0
0x4ce: V503 = 0x40
0x4d0: V504 = M[0x40]
0x4d3: V505 = SUB V501 V504
0x4d5: V506 = 0x0
0x4d9: V507 = EXTCODESIZE V487
0x4da: V508 = ISZERO V507
0x4db: V509 = ISZERO V508
0x4dc: V510 = 0x4e4
0x4df: JUMPI 0x4e4 V509
---
Entry stack: [V12, 0x7d, V126, V128, V131, S8, {0x129, 0x514}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V487, 0x2e1a7d4d, V501, 0x0, V504, V505, V504, 0x0, V487]
Exit stack: [V12, 0x7d, V126, V128, V131, S8, {0x129, 0x514}, S6, S5, 0x0, S3, S2, S1, S0, V487, 0x2e1a7d4d, V501, 0x0, V504, V505, V504, 0x0, V487]

================================

Block 0x4e0
[0x4e0:0x4e3]
---
Predecessors: [0x49e]
Successors: []
---
0x4e0 PUSH1 0x0
0x4e2 DUP1
0x4e3 REVERT
---
0x4e0: V511 = 0x0
0x4e3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, S12, S11, S10, S9, V487, 0x2e1a7d4d, V501, 0x0, V504, V505, V504, 0x0, V487]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, S12, S11, S10, S9, V487, 0x2e1a7d4d, V501, 0x0, V504, V505, V504, 0x0, V487]

================================

Block 0x4e4
[0x4e4:0x4f0]
---
Predecessors: [0x49e]
Successors: [0x4f1, 0x4f5]
---
0x4e4 JUMPDEST
0x4e5 PUSH2 0x2c6
0x4e8 GAS
0x4e9 SUB
0x4ea CALL
0x4eb ISZERO
0x4ec ISZERO
0x4ed PUSH2 0x4f5
0x4f0 JUMPI
---
0x4e4: JUMPDEST 
0x4e5: V512 = 0x2c6
0x4e8: V513 = GAS
0x4e9: V514 = SUB V513 0x2c6
0x4ea: V515 = CALL V514 V487 0x0 V504 V505 V504 0x0
0x4eb: V516 = ISZERO V515
0x4ec: V517 = ISZERO V516
0x4ed: V518 = 0x4f5
0x4f0: JUMPI 0x4f5 V517
---
Entry stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, S12, S11, S10, S9, V487, 0x2e1a7d4d, V501, 0x0, V504, V505, V504, 0x0, V487]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S17, {0x129, 0x514}, S15, S14, 0x0, S12, S11, S10, S9, V487, 0x2e1a7d4d, V501]

================================

Block 0x4f1
[0x4f1:0x4f4]
---
Predecessors: [0x4e4]
Successors: []
---
0x4f1 PUSH1 0x0
0x4f3 DUP1
0x4f4 REVERT
---
0x4f1: V519 = 0x0
0x4f4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, S6, S5, S4, S3, S2, 0x2e1a7d4d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, S6, S5, S4, S3, S2, 0x2e1a7d4d, S0]

================================

Block 0x4f5
[0x4f5:0x4fc]
---
Predecessors: [0x4e4]
Successors: [0x4fd]
---
0x4f5 JUMPDEST
0x4f6 POP
0x4f7 POP
0x4f8 POP
0x4f9 SWAP3
0x4fa DUP6
0x4fb ADD
0x4fc SWAP3
---
0x4f5: JUMPDEST 
0x4fb: V520 = ADD S8 S6
---
Entry stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, S6, S5, S4, S3, S2, 0x2e1a7d4d, S0]
Stack pops: 9
Stack additions: [S8, S7, V520, S5, S4, S3]
Exit stack: [V12, 0x7d, V126, V128, V131, S11, {0x129, 0x514}, S9, S8, 0x0, V520, S5, S4, S3]

================================

Block 0x4fd
[0x4fd:0x507]
---
Predecessors: [0x2f9, 0x48a, 0x4f5]
Successors: [0x129, 0x514]
---
0x4fd JUMPDEST
0x4fe POP
0x4ff SWAP2
0x500 SWAP6
0x501 SWAP5
0x502 POP
0x503 POP
0x504 POP
0x505 POP
0x506 POP
0x507 JUMP
---
0x4fd: JUMPDEST 
0x507: JUMP {0x129, 0x514}
---
Entry stack: [V12, 0x7d, V126, V128, V131, S8, {0x129, 0x514}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S3]
Exit stack: [V12, 0x7d, V126, V128, V131, S8, S3]

================================

Block 0x508
[0x508:0x513]
---
Predecessors: [0x13b]
Successors: [0x2b5]
---
0x508 JUMPDEST
0x509 PUSH1 0x0
0x50b PUSH2 0x514
0x50e DUP5
0x50f DUP5
0x510 PUSH2 0x2b5
0x513 JUMP
---
0x508: JUMPDEST 
0x509: V521 = 0x0
0x50b: V522 = 0x514
0x510: V523 = 0x2b5
0x513: JUMP 0x2b5
---
Entry stack: [V12, 0x7d, V126, V128, V131]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x514, S2, S1]
Exit stack: [V12, 0x7d, V126, V128, V131, 0x0, 0x514, V126, V128]

================================

Block 0x514
[0x514:0x51f]
---
Predecessors: [0x4fd]
Successors: [0x520, 0x546]
---
0x514 JUMPDEST
0x515 SWAP1
0x516 POP
0x517 PUSH1 0x0
0x519 DUP2
0x51a GT
0x51b ISZERO
0x51c PUSH2 0x546
0x51f JUMPI
---
0x514: JUMPDEST 
0x517: V524 = 0x0
0x51a: V525 = GT S0 0x0
0x51b: V526 = ISZERO V525
0x51c: V527 = 0x546
0x51f: JUMPI 0x546 V526
---
Entry stack: [V12, 0x7d, V126, V128, V131, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x7d, V126, V128, V131, S0]

================================

Block 0x520
[0x520:0x545]
---
Predecessors: [0x514]
Successors: [0x546]
---
0x520 PUSH1 0x1
0x522 PUSH1 0xa0
0x524 PUSH1 0x2
0x526 EXP
0x527 SUB
0x528 DUP3
0x529 AND
0x52a DUP2
0x52b ISZERO
0x52c PUSH2 0x8fc
0x52f MUL
0x530 DUP3
0x531 PUSH1 0x40
0x533 MLOAD
0x534 PUSH1 0x0
0x536 PUSH1 0x40
0x538 MLOAD
0x539 DUP1
0x53a DUP4
0x53b SUB
0x53c DUP2
0x53d DUP6
0x53e DUP9
0x53f DUP9
0x540 CALL
0x541 POP
0x542 POP
0x543 POP
0x544 POP
0x545 POP
---
0x520: V528 = 0x1
0x522: V529 = 0xa0
0x524: V530 = 0x2
0x526: V531 = EXP 0x2 0xa0
0x527: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x529: V533 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x52b: V534 = ISZERO S0
0x52c: V535 = 0x8fc
0x52f: V536 = MUL 0x8fc V534
0x531: V537 = 0x40
0x533: V538 = M[0x40]
0x534: V539 = 0x0
0x536: V540 = 0x40
0x538: V541 = M[0x40]
0x53b: V542 = SUB V538 V541
0x540: V543 = CALL V536 V533 S0 V541 V542 V541 0x0
---
Entry stack: [V12, 0x7d, V126, V128, V131, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x7d, V126, V128, V131, S0]

================================

Block 0x546
[0x546:0x54b]
---
Predecessors: [0x514, 0x520]
Successors: [0x7d]
---
0x546 JUMPDEST
0x547 POP
0x548 POP
0x549 POP
0x54a POP
0x54b JUMP
---
0x546: JUMPDEST 
0x54b: JUMP 0x7d
---
Entry stack: [V12, 0x7d, V126, V128, V131, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x54c
[0x54c:0x55b]
---
Predecessors: [0x164]
Successors: [0x16c]
---
0x54c JUMPDEST
0x54d PUSH1 0x0
0x54f SLOAD
0x550 PUSH1 0xa0
0x552 PUSH1 0x2
0x554 EXP
0x555 SWAP1
0x556 DIV
0x557 PUSH1 0xff
0x559 AND
0x55a DUP2
0x55b JUMP
---
0x54c: JUMPDEST 
0x54d: V544 = 0x0
0x54f: V545 = S[0x0]
0x550: V546 = 0xa0
0x552: V547 = 0x2
0x554: V548 = EXP 0x2 0xa0
0x556: V549 = DIV V545 0x10000000000000000000000000000000000000000
0x557: V550 = 0xff
0x559: V551 = AND 0xff V549
0x55b: JUMP 0x16c
---
Entry stack: [V12, 0x16c]
Stack pops: 1
Stack additions: [S0, V551]
Exit stack: [V12, 0x16c, V551]

================================

Block 0x55c
[0x55c:0x572]
---
Predecessors: [0x18b]
Successors: [0x573, 0x577]
---
0x55c JUMPDEST
0x55d PUSH1 0x0
0x55f SLOAD
0x560 CALLER
0x561 PUSH1 0x1
0x563 PUSH1 0xa0
0x565 PUSH1 0x2
0x567 EXP
0x568 SUB
0x569 SWAP1
0x56a DUP2
0x56b AND
0x56c SWAP2
0x56d AND
0x56e EQ
0x56f PUSH2 0x577
0x572 JUMPI
---
0x55c: JUMPDEST 
0x55d: V552 = 0x0
0x55f: V553 = S[0x0]
0x560: V554 = CALLER
0x561: V555 = 0x1
0x563: V556 = 0xa0
0x565: V557 = 0x2
0x567: V558 = EXP 0x2 0xa0
0x568: V559 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56b: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0x56d: V561 = AND V553 0xffffffffffffffffffffffffffffffffffffffff
0x56e: V562 = EQ V561 V560
0x56f: V563 = 0x577
0x572: JUMPI 0x577 V562
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x573
[0x573:0x576]
---
Predecessors: [0x55c]
Successors: []
---
0x573 PUSH1 0x0
0x575 DUP1
0x576 REVERT
---
0x573: V564 = 0x0
0x576: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7d]

================================

Block 0x577
[0x577:0x59c]
---
Predecessors: [0x55c]
Successors: [0x7d]
---
0x577 JUMPDEST
0x578 PUSH1 0x0
0x57a DUP1
0x57b SLOAD
0x57c PUSH21 0xff0000000000000000000000000000000000000000
0x592 NOT
0x593 AND
0x594 PUSH1 0xa0
0x596 PUSH1 0x2
0x598 EXP
0x599 OR
0x59a SWAP1
0x59b SSTORE
0x59c JUMP
---
0x577: JUMPDEST 
0x578: V565 = 0x0
0x57b: V566 = S[0x0]
0x57c: V567 = 0xff0000000000000000000000000000000000000000
0x592: V568 = NOT 0xff0000000000000000000000000000000000000000
0x593: V569 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V566
0x594: V570 = 0xa0
0x596: V571 = 0x2
0x598: V572 = EXP 0x2 0xa0
0x599: V573 = OR 0x10000000000000000000000000000000000000000 V569
0x59b: S[0x0] = V573
0x59c: JUMP 0x7d
---
Entry stack: [V12, 0x7d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x59d
[0x59d:0x5dd]
---
Predecessors: []
Successors: []
---
0x59d STOP
0x59e LOG1
0x59f PUSH6 0x627a7a723058
0x5a6 SHA3
0x5a7 DIV
0x5a8 DUP2
0x5a9 MISSING 0xc4
0x5aa RETURN
0x5ab SHL
0x5ac PUSH2 0xed3
0x5af DIFFICULTY
0x5b0 MISSING 0xd2
0x5b1 DUP1
0x5b2 MISSING 0xd5
0x5b3 INVALID
0x5b4 MISSING 0x49
0x5b5 PUSH8 0xfa7f05c91a4ae786
0x5be MISSING 0xc5
0x5bf MISSING 0x21
0x5c0 PUSH29 0xcca37e4dc12f0029
---
0x59d: STOP 
0x59e: LOG S0 S1 S2
0x59f: V574 = 0x627a7a723058
0x5a6: V575 = SHA3 0x627a7a723058 S3
0x5a7: V576 = DIV V575 S4
0x5a9: MISSING 0xc4
0x5aa: RETURN S0 S1
0x5ab: V577 = SHL S0 S1
0x5ac: V578 = 0xed3
0x5af: V579 = DIFFICULTY
0x5b0: MISSING 0xd2
0x5b2: MISSING 0xd5
0x5b3: INVALID 
0x5b4: MISSING 0x49
0x5b5: V580 = 0xfa7f05c91a4ae786
0x5be: MISSING 0xc5
0x5bf: MISSING 0x21
0x5c0: V581 = 0xcca37e4dc12f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S5, V576, S5, V579, 0xed3, V577, S0, S0, 0xfa7f05c91a4ae786, 0xcca37e4dc12f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x300b50a
Entry block: 0x7f
Exit block: 0x92
Body: 0x7f, 0x86, 0x8a, 0x92, 0x193

Function 1:
Public function signature: 0x20b1bc7d
Entry block: 0xae
Exit block: 0x7d
Body: 0x7d, 0xae, 0xb5, 0xb9, 0x1a2, 0x1b9, 0x1bd

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xcd
Exit block: 0x207
Body: 0xcd, 0xd4, 0xd8, 0x1ec, 0x203, 0x207

Function 3:
Public function signature: 0x51cff8d9
Entry block: 0xe0
Exit block: 0x7d
Body: 0x7d, 0xe0, 0xe7, 0xeb, 0x213, 0x22a, 0x22e, 0x241, 0x245

Function 4:
Public function signature: 0xa69df4b5
Entry block: 0xff
Exit block: 0x7d
Body: 0x7d, 0xff, 0x106, 0x10a, 0x27a, 0x291, 0x295

Function 5:
Public function signature: 0xaededc1a
Entry block: 0x112
Exit block: 0x129
Body: 0x112, 0x129

Function 6:
Public function signature: 0xcd802002
Entry block: 0x13b
Exit block: 0x7d
Body: 0x7d, 0x13b, 0x508, 0x514, 0x520, 0x546

Function 7:
Public function signature: 0xcf309012
Entry block: 0x159
Exit block: 0x16c
Body: 0x159, 0x160, 0x164, 0x16c, 0x54c

Function 8:
Public function signature: 0xf83d08ba
Entry block: 0x180
Exit block: 0x7d
Body: 0x7d, 0x180, 0x187, 0x18b, 0x55c, 0x573, 0x577

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x7d
Body: 0x7d

Function 10:
Private function
Entry block: 0x2b5
Exit block: 0x4fd
Body: 0x2b5, 0x2d2, 0x2e6, 0x2f9, 0x2ff, 0x33e, 0x34f, 0x399, 0x3aa, 0x3ea, 0x3fb, 0x414, 0x41c, 0x425, 0x46a, 0x47b, 0x48a, 0x49e, 0x4e4, 0x4f5, 0x4fd

