Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4b
0xa: JUMPI 0x4b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xac]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x3b0c03b1
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xac
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x3b0c03b1
0x1a: V12 = EQ V10 0x3b0c03b1
0x1b: V13 = 0xac
0x1e: JUMPI 0xac V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xbe]
---
0x1f DUP1
0x20 PUSH4 0x4162169f
0x25 EQ
0x26 PUSH2 0xbe
0x29 JUMPI
---
0x20: V14 = 0x4162169f
0x25: V15 = EQ 0x4162169f V10
0x26: V16 = 0xbe
0x29: JUMPI 0xbe V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xd0]
---
0x2a DUP1
0x2b PUSH4 0x42966c68
0x30 EQ
0x31 PUSH2 0xd0
0x34 JUMPI
---
0x2b: V17 = 0x42966c68
0x30: V18 = EQ 0x42966c68 V10
0x31: V19 = 0xd0
0x34: JUMPI 0xd0 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x246]
---
0x35 DUP1
0x36 PUSH4 0x913e77ad
0x3b EQ
0x3c PUSH2 0x246
0x3f JUMPI
---
0x36: V20 = 0x913e77ad
0x3b: V21 = EQ 0x913e77ad V10
0x3c: V22 = 0x246
0x3f: JUMPI 0x246 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x258]
---
0x40 DUP1
0x41 PUSH4 0xb61d27f6
0x46 EQ
0x47 PUSH2 0x258
0x4a JUMPI
---
0x41: V23 = 0xb61d27f6
0x46: V24 = EQ 0xb61d27f6 V10
0x47: V25 = 0x258
0x4a: JUMPI 0x258 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x5e]
---
Predecessors: [0x0, 0x40]
Successors: [0x5f, 0x343]
---
0x4b JUMPDEST
0x4c PUSH2 0x331
0x4f PUSH1 0x0
0x51 PUSH1 0x0
0x53 PUSH1 0x3
0x55 PUSH1 0x0
0x57 POP
0x58 SLOAD
0x59 GT
0x5a ISZERO
0x5b PUSH2 0x343
0x5e JUMPI
---
0x4b: JUMPDEST 
0x4c: V26 = 0x331
0x4f: V27 = 0x0
0x51: V28 = 0x0
0x53: V29 = 0x3
0x55: V30 = 0x0
0x58: V31 = S[0x3]
0x59: V32 = GT V31 0x0
0x5a: V33 = ISZERO V32
0x5b: V34 = 0x343
0x5e: JUMPI 0x343 V33
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x331, 0x0]
Exit stack: [V10, 0x331, 0x0]

================================

Block 0x5f
[0x5f:0xa3]
---
Predecessors: [0x4b]
Successors: [0xa4]
---
0x5f PUSH1 0x3
0x61 DUP1
0x62 SLOAD
0x63 PUSH1 0x0
0x65 NOT
0x66 ADD
0x67 SWAP1
0x68 SSTORE
0x69 PUSH1 0x1
0x6b SLOAD
0x6c PUSH1 0xe1
0x6e PUSH1 0x2
0x70 EXP
0x71 PUSH4 0x664d71fb
0x76 MUL
0x77 PUSH1 0x60
0x79 SWAP1
0x7a DUP2
0x7b MSTORE
0x7c PUSH1 0x1
0x7e PUSH1 0xa0
0x80 PUSH1 0x2
0x82 EXP
0x83 SUB
0x84 SWAP1
0x85 SWAP2
0x86 AND
0x87 SWAP1
0x88 PUSH4 0xcc9ae3f6
0x8d SWAP1
0x8e PUSH1 0x64
0x90 SWAP1
0x91 PUSH1 0x20
0x93 SWAP1
0x94 PUSH1 0x4
0x96 DUP2
0x97 DUP8
0x98 DUP8
0x99 PUSH2 0x61da
0x9c GAS
0x9d SUB
0x9e CALL
0x9f ISZERO
0xa0 PUSH2 0x2
0xa3 JUMPI
---
0x5f: V35 = 0x3
0x62: V36 = S[0x3]
0x63: V37 = 0x0
0x65: V38 = NOT 0x0
0x66: V39 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V36
0x68: S[0x3] = V39
0x69: V40 = 0x1
0x6b: V41 = S[0x1]
0x6c: V42 = 0xe1
0x6e: V43 = 0x2
0x70: V44 = EXP 0x2 0xe1
0x71: V45 = 0x664d71fb
0x76: V46 = MUL 0x664d71fb 0x200000000000000000000000000000000000000000000000000000000
0x77: V47 = 0x60
0x7b: M[0x60] = 0xcc9ae3f600000000000000000000000000000000000000000000000000000000
0x7c: V48 = 0x1
0x7e: V49 = 0xa0
0x80: V50 = 0x2
0x82: V51 = EXP 0x2 0xa0
0x83: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86: V53 = AND V41 0xffffffffffffffffffffffffffffffffffffffff
0x88: V54 = 0xcc9ae3f6
0x8e: V55 = 0x64
0x91: V56 = 0x20
0x94: V57 = 0x4
0x99: V58 = 0x61da
0x9c: V59 = GAS
0x9d: V60 = SUB V59 0x61da
0x9e: V61 = CALL V60 V53 0x0 0x60 0x4 0x60 0x20
0x9f: V62 = ISZERO V61
0xa0: V63 = 0x2
0xa3: THROWI V62
---
Entry stack: [V10, 0x331, 0x0]
Stack pops: 1
Stack additions: [S0, V53, 0xcc9ae3f6, 0x64]
Exit stack: [V10, 0x331, 0x0, V53, 0xcc9ae3f6, 0x64]

================================

Block 0xa4
[0xa4:0xab]
---
Predecessors: [0x5f]
Successors: [0x3e6]
---
0xa4 POP
0xa5 PUSH2 0x3e6
0xa8 SWAP2
0xa9 POP
0xaa POP
0xab JUMP
---
0xa5: V64 = 0x3e6
0xab: JUMP 0x3e6
---
Entry stack: [V10, 0x331, 0x0, V53, 0xcc9ae3f6, 0x64]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x331, 0x0]

================================

Block 0xac
[0xac:0xbd]
---
Predecessors: [0xb]
Successors: [0x3ec]
---
0xac JUMPDEST
0xad PUSH2 0x3ec
0xb0 PUSH1 0x0
0xb2 SLOAD
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb AND
0xbc DUP2
0xbd JUMP
---
0xac: JUMPDEST 
0xad: V65 = 0x3ec
0xb0: V66 = 0x0
0xb2: V67 = S[0x0]
0xb3: V68 = 0x1
0xb5: V69 = 0xa0
0xb7: V70 = 0x2
0xb9: V71 = EXP 0x2 0xa0
0xba: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0xbd: JUMP 0x3ec
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ec, V73]
Exit stack: [V10, 0x3ec, V73]

================================

Block 0xbe
[0xbe:0xcf]
---
Predecessors: [0x1f]
Successors: [0x3ec]
---
0xbe JUMPDEST
0xbf PUSH2 0x3ec
0xc2 PUSH1 0x1
0xc4 SLOAD
0xc5 PUSH1 0x1
0xc7 PUSH1 0xa0
0xc9 PUSH1 0x2
0xcb EXP
0xcc SUB
0xcd AND
0xce DUP2
0xcf JUMP
---
0xbe: JUMPDEST 
0xbf: V74 = 0x3ec
0xc2: V75 = 0x1
0xc4: V76 = S[0x1]
0xc5: V77 = 0x1
0xc7: V78 = 0xa0
0xc9: V79 = 0x2
0xcb: V80 = EXP 0x2 0xa0
0xcc: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0xcf: JUMP 0x3ec
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ec, V82]
Exit stack: [V10, 0x3ec, V82]

================================

Block 0xd0
[0xd0:0xed]
---
Predecessors: [0x2a]
Successors: [0xee, 0x243]
---
0xd0 JUMPDEST
0xd1 PUSH2 0x3ff
0xd4 PUSH1 0x4
0xd6 CALLDATALOAD
0xd7 PUSH1 0x0
0xd9 SLOAD
0xda CALLER
0xdb PUSH1 0x1
0xdd PUSH1 0xa0
0xdf PUSH1 0x2
0xe1 EXP
0xe2 SUB
0xe3 SWAP1
0xe4 DUP2
0xe5 AND
0xe6 SWAP2
0xe7 AND
0xe8 EQ
0xe9 ISZERO
0xea PUSH2 0x243
0xed JUMPI
---
0xd0: JUMPDEST 
0xd1: V83 = 0x3ff
0xd4: V84 = 0x4
0xd6: V85 = CALLDATALOAD 0x4
0xd7: V86 = 0x0
0xd9: V87 = S[0x0]
0xda: V88 = CALLER
0xdb: V89 = 0x1
0xdd: V90 = 0xa0
0xdf: V91 = 0x2
0xe1: V92 = EXP 0x2 0xa0
0xe2: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0xe7: V95 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0xe8: V96 = EQ V95 V94
0xe9: V97 = ISZERO V96
0xea: V98 = 0x243
0xed: JUMPI 0x243 V97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ff, V85]
Exit stack: [V10, 0x3ff, V85]

================================

Block 0xee
[0xee:0x12e]
---
Predecessors: [0xd0]
Successors: [0x12f]
---
0xee PUSH1 0x3
0xf0 DUP2
0xf1 SWAP1
0xf2 SSTORE
0xf3 PUSH1 0x1
0xf5 SLOAD
0xf6 PUSH1 0xe1
0xf8 PUSH1 0x2
0xfa EXP
0xfb PUSH4 0x664d71fb
0x100 MUL
0x101 PUSH1 0x60
0x103 SWAP1
0x104 DUP2
0x105 MSTORE
0x106 PUSH1 0x1
0x108 PUSH1 0xa0
0x10a PUSH1 0x2
0x10c EXP
0x10d SUB
0x10e SWAP1
0x10f SWAP2
0x110 AND
0x111 SWAP1
0x112 PUSH4 0xcc9ae3f6
0x117 SWAP1
0x118 PUSH1 0x64
0x11a SWAP1
0x11b PUSH1 0x20
0x11d SWAP1
0x11e PUSH1 0x4
0x120 DUP2
0x121 PUSH1 0x0
0x123 DUP8
0x124 PUSH2 0x61da
0x127 GAS
0x128 SUB
0x129 CALL
0x12a ISZERO
0x12b PUSH2 0x2
0x12e JUMPI
---
0xee: V99 = 0x3
0xf2: S[0x3] = V85
0xf3: V100 = 0x1
0xf5: V101 = S[0x1]
0xf6: V102 = 0xe1
0xf8: V103 = 0x2
0xfa: V104 = EXP 0x2 0xe1
0xfb: V105 = 0x664d71fb
0x100: V106 = MUL 0x664d71fb 0x200000000000000000000000000000000000000000000000000000000
0x101: V107 = 0x60
0x105: M[0x60] = 0xcc9ae3f600000000000000000000000000000000000000000000000000000000
0x106: V108 = 0x1
0x108: V109 = 0xa0
0x10a: V110 = 0x2
0x10c: V111 = EXP 0x2 0xa0
0x10d: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x110: V113 = AND V101 0xffffffffffffffffffffffffffffffffffffffff
0x112: V114 = 0xcc9ae3f6
0x118: V115 = 0x64
0x11b: V116 = 0x20
0x11e: V117 = 0x4
0x121: V118 = 0x0
0x124: V119 = 0x61da
0x127: V120 = GAS
0x128: V121 = SUB V120 0x61da
0x129: V122 = CALL V121 V113 0x0 0x60 0x4 0x60 0x20
0x12a: V123 = ISZERO V122
0x12b: V124 = 0x2
0x12e: THROWI V123
---
Entry stack: [V10, 0x3ff, V85]
Stack pops: 1
Stack additions: [S0, V113, 0xcc9ae3f6, 0x64]
Exit stack: [V10, 0x3ff, V85, V113, 0xcc9ae3f6, 0x64]

================================

Block 0x12f
[0x12f:0x18e]
---
Predecessors: [0xee]
Successors: [0x18f]
---
0x12f POP
0x130 POP
0x131 PUSH1 0x40
0x133 DUP1
0x134 MLOAD
0x135 PUSH1 0x1
0x137 SLOAD
0x138 PUSH1 0x2
0x13a SLOAD
0x13b PUSH1 0xe0
0x13d PUSH1 0x2
0x13f EXP
0x140 PUSH4 0x70a08231
0x145 MUL
0x146 DUP4
0x147 MSTORE
0x148 ADDRESS
0x149 PUSH1 0x1
0x14b PUSH1 0xa0
0x14d PUSH1 0x2
0x14f EXP
0x150 SUB
0x151 SWAP1
0x152 DUP2
0x153 AND
0x154 PUSH1 0x4
0x156 DUP6
0x157 ADD
0x158 MSTORE
0x159 SWAP4
0x15a MLOAD
0x15b SWAP2
0x15c DUP5
0x15d AND
0x15e SWAP5
0x15f POP
0x160 PUSH4 0xa9059cbb
0x165 SWAP4
0x166 AND
0x167 SWAP2
0x168 DUP5
0x169 SWAP2
0x16a PUSH4 0x70a08231
0x16f SWAP2
0x170 PUSH1 0x24
0x172 DUP1
0x173 DUP3
0x174 ADD
0x175 SWAP3
0x176 PUSH1 0x20
0x178 SWAP3
0x179 SWAP1
0x17a SWAP2
0x17b SWAP1
0x17c DUP3
0x17d SWAP1
0x17e SUB
0x17f ADD
0x180 DUP2
0x181 PUSH1 0x0
0x183 DUP8
0x184 PUSH2 0x61da
0x187 GAS
0x188 SUB
0x189 CALL
0x18a ISZERO
0x18b PUSH2 0x2
0x18e JUMPI
---
0x131: V125 = 0x40
0x134: V126 = M[0x40]
0x135: V127 = 0x1
0x137: V128 = S[0x1]
0x138: V129 = 0x2
0x13a: V130 = S[0x2]
0x13b: V131 = 0xe0
0x13d: V132 = 0x2
0x13f: V133 = EXP 0x2 0xe0
0x140: V134 = 0x70a08231
0x145: V135 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x147: M[V126] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x148: V136 = ADDRESS
0x149: V137 = 0x1
0x14b: V138 = 0xa0
0x14d: V139 = 0x2
0x14f: V140 = EXP 0x2 0xa0
0x150: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x153: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x154: V143 = 0x4
0x157: V144 = ADD V126 0x4
0x158: M[V144] = V142
0x15a: V145 = M[0x40]
0x15d: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x160: V147 = 0xa9059cbb
0x166: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x16a: V149 = 0x70a08231
0x170: V150 = 0x24
0x174: V151 = ADD V126 0x24
0x176: V152 = 0x20
0x17e: V153 = SUB V126 V145
0x17f: V154 = ADD V153 0x24
0x181: V155 = 0x0
0x184: V156 = 0x61da
0x187: V157 = GAS
0x188: V158 = SUB V157 0x61da
0x189: V159 = CALL V158 V146 0x0 V145 V154 V145 0x20
0x18a: V160 = ISZERO V159
0x18b: V161 = 0x2
0x18e: THROWI V160
---
Entry stack: [V10, 0x3ff, V85, V113, 0xcc9ae3f6, 0x64]
Stack pops: 3
Stack additions: [V146, 0xa9059cbb, V148, V146, 0x70a08231, V151]
Exit stack: [V10, 0x3ff, V85, V146, 0xa9059cbb, V148, V146, 0x70a08231, V151]

================================

Block 0x18f
[0x18f:0x1d1]
---
Predecessors: [0x12f]
Successors: [0x1d2]
---
0x18f POP
0x190 POP
0x191 PUSH1 0x40
0x193 DUP1
0x194 MLOAD
0x195 DUP1
0x196 MLOAD
0x197 PUSH1 0xe0
0x199 PUSH1 0x2
0x19b EXP
0x19c PUSH4 0xa9059cbb
0x1a1 MUL
0x1a2 DUP3
0x1a3 MSTORE
0x1a4 PUSH1 0x4
0x1a6 DUP3
0x1a7 ADD
0x1a8 SWAP5
0x1a9 SWAP1
0x1aa SWAP5
0x1ab MSTORE
0x1ac PUSH1 0x24
0x1ae DUP2
0x1af ADD
0x1b0 SWAP4
0x1b1 SWAP1
0x1b2 SWAP4
0x1b3 MSTORE
0x1b4 MLOAD
0x1b5 PUSH1 0x44
0x1b7 DUP4
0x1b8 DUP2
0x1b9 ADD
0x1ba SWAP4
0x1bb PUSH1 0x20
0x1bd SWAP4
0x1be POP
0x1bf DUP3
0x1c0 SWAP1
0x1c1 SUB
0x1c2 ADD
0x1c3 DUP2
0x1c4 PUSH1 0x0
0x1c6 DUP8
0x1c7 PUSH2 0x61da
0x1ca GAS
0x1cb SUB
0x1cc CALL
0x1cd ISZERO
0x1ce PUSH2 0x2
0x1d1 JUMPI
---
0x191: V162 = 0x40
0x194: V163 = M[0x40]
0x196: V164 = M[V163]
0x197: V165 = 0xe0
0x199: V166 = 0x2
0x19b: V167 = EXP 0x2 0xe0
0x19c: V168 = 0xa9059cbb
0x1a1: V169 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x1a3: M[V163] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1a4: V170 = 0x4
0x1a7: V171 = ADD V163 0x4
0x1ab: M[V171] = V148
0x1ac: V172 = 0x24
0x1af: V173 = ADD V163 0x24
0x1b3: M[V173] = V164
0x1b4: V174 = M[0x40]
0x1b5: V175 = 0x44
0x1b9: V176 = ADD 0x44 V163
0x1bb: V177 = 0x20
0x1c1: V178 = SUB V163 V174
0x1c2: V179 = ADD V178 0x44
0x1c4: V180 = 0x0
0x1c7: V181 = 0x61da
0x1ca: V182 = GAS
0x1cb: V183 = SUB V182 0x61da
0x1cc: V184 = CALL V183 V146 0x0 V174 V179 V174 0x20
0x1cd: V185 = ISZERO V184
0x1ce: V186 = 0x2
0x1d1: THROWI V185
---
Entry stack: [V10, 0x3ff, V85, V146, 0xa9059cbb, V148, V146, 0x70a08231, V151]
Stack pops: 6
Stack additions: [S5, S4, V176]
Exit stack: [V10, 0x3ff, V85, V146, 0xa9059cbb, V176]

================================

Block 0x1d2
[0x1d2:0x1e7]
---
Predecessors: [0x18f]
Successors: [0x1e8, 0x243]
---
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 PUSH1 0x0
0x1d7 ADDRESS
0x1d8 PUSH1 0x1
0x1da PUSH1 0xa0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SUB
0x1e0 AND
0x1e1 BALANCE
0x1e2 GT
0x1e3 ISZERO
0x1e4 PUSH2 0x243
0x1e7 JUMPI
---
0x1d5: V187 = 0x0
0x1d7: V188 = ADDRESS
0x1d8: V189 = 0x1
0x1da: V190 = 0xa0
0x1dc: V191 = 0x2
0x1de: V192 = EXP 0x2 0xa0
0x1df: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e0: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x1e1: V195 = BALANCE V194
0x1e2: V196 = GT V195 0x0
0x1e3: V197 = ISZERO V196
0x1e4: V198 = 0x243
0x1e7: JUMPI 0x243 V197
---
Entry stack: [V10, 0x3ff, V85, V146, 0xa9059cbb, V176]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x3ff, V85]

================================

Block 0x1e8
[0x1e8:0x23e]
---
Predecessors: [0x1d2]
Successors: [0x23f]
---
0x1e8 PUSH1 0x0
0x1ea PUSH1 0x0
0x1ec SWAP1
0x1ed SLOAD
0x1ee SWAP1
0x1ef PUSH2 0x100
0x1f2 EXP
0x1f3 SWAP1
0x1f4 DIV
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd AND
0x1fe PUSH1 0x1
0x200 PUSH1 0xa0
0x202 PUSH1 0x2
0x204 EXP
0x205 SUB
0x206 AND
0x207 PUSH4 0xe29df22
0x20c ADDRESS
0x20d PUSH1 0x1
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SUB
0x215 AND
0x216 BALANCE
0x217 PUSH1 0x40
0x219 MLOAD
0x21a DUP3
0x21b PUSH1 0xe0
0x21d PUSH1 0x2
0x21f EXP
0x220 MUL
0x221 DUP2
0x222 MSTORE
0x223 PUSH1 0x4
0x225 ADD
0x226 DUP1
0x227 SWAP1
0x228 POP
0x229 PUSH1 0x20
0x22b PUSH1 0x40
0x22d MLOAD
0x22e DUP1
0x22f DUP4
0x230 SUB
0x231 DUP2
0x232 DUP6
0x233 DUP9
0x234 PUSH2 0x8502
0x237 GAS
0x238 SUB
0x239 CALL
0x23a ISZERO
0x23b PUSH2 0x2
0x23e JUMPI
---
0x1e8: V199 = 0x0
0x1ea: V200 = 0x0
0x1ed: V201 = S[0x0]
0x1ef: V202 = 0x100
0x1f2: V203 = EXP 0x100 0x0
0x1f4: V204 = DIV V201 0x1
0x1f5: V205 = 0x1
0x1f7: V206 = 0xa0
0x1f9: V207 = 0x2
0x1fb: V208 = EXP 0x2 0xa0
0x1fc: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fd: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x1fe: V211 = 0x1
0x200: V212 = 0xa0
0x202: V213 = 0x2
0x204: V214 = EXP 0x2 0xa0
0x205: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x206: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x207: V217 = 0xe29df22
0x20c: V218 = ADDRESS
0x20d: V219 = 0x1
0x20f: V220 = 0xa0
0x211: V221 = 0x2
0x213: V222 = EXP 0x2 0xa0
0x214: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x215: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x216: V225 = BALANCE V224
0x217: V226 = 0x40
0x219: V227 = M[0x40]
0x21b: V228 = 0xe0
0x21d: V229 = 0x2
0x21f: V230 = EXP 0x2 0xe0
0x220: V231 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe29df22
0x222: M[V227] = 0xe29df2200000000000000000000000000000000000000000000000000000000
0x223: V232 = 0x4
0x225: V233 = ADD 0x4 V227
0x229: V234 = 0x20
0x22b: V235 = 0x40
0x22d: V236 = M[0x40]
0x230: V237 = SUB V233 V236
0x234: V238 = 0x8502
0x237: V239 = GAS
0x238: V240 = SUB V239 0x8502
0x239: V241 = CALL V240 V216 V225 V236 V237 V236 0x20
0x23a: V242 = ISZERO V241
0x23b: V243 = 0x2
0x23e: THROWI V242
---
Entry stack: [V10, 0x3ff, V85]
Stack pops: 0
Stack additions: [V216, 0xe29df22, V225, V233]
Exit stack: [V10, 0x3ff, V85, V216, 0xe29df22, V225, V233]

================================

Block 0x23f
[0x23f:0x242]
---
Predecessors: [0x1e8]
Successors: [0x243]
---
0x23f POP
0x240 POP
0x241 POP
0x242 POP
---
0x23f: NOP 
---
Entry stack: [V10, 0x3ff, V85, V216, 0xe29df22, V225, V233]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x3ff, V85]

================================

Block 0x243
[0x243:0x245]
---
Predecessors: [0xd0, 0x1d2, 0x23f]
Successors: [0x3ff]
---
0x243 JUMPDEST
0x244 POP
0x245 JUMP
---
0x243: JUMPDEST 
0x245: JUMP 0x3ff
---
Entry stack: [V10, 0x3ff, V85]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x246
[0x246:0x257]
---
Predecessors: [0x35]
Successors: [0x3ec]
---
0x246 JUMPDEST
0x247 PUSH2 0x3ec
0x24a PUSH1 0x2
0x24c SLOAD
0x24d PUSH1 0x1
0x24f PUSH1 0xa0
0x251 PUSH1 0x2
0x253 EXP
0x254 SUB
0x255 AND
0x256 DUP2
0x257 JUMP
---
0x246: JUMPDEST 
0x247: V244 = 0x3ec
0x24a: V245 = 0x2
0x24c: V246 = S[0x2]
0x24d: V247 = 0x1
0x24f: V248 = 0xa0
0x251: V249 = 0x2
0x253: V250 = EXP 0x2 0xa0
0x254: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x255: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x257: JUMP 0x3ec
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ec, V252]
Exit stack: [V10, 0x3ec, V252]

================================

Block 0x258
[0x258:0x2b9]
---
Predecessors: [0x40]
Successors: [0x2ba, 0x32c]
---
0x258 JUMPDEST
0x259 PUSH1 0x80
0x25b PUSH1 0x20
0x25d PUSH1 0x1f
0x25f PUSH1 0x44
0x261 CALLDATALOAD
0x262 PUSH1 0x4
0x264 DUP2
0x265 DUP2
0x266 ADD
0x267 CALLDATALOAD
0x268 SWAP3
0x269 DUP4
0x26a ADD
0x26b DUP5
0x26c SWAP1
0x26d DIV
0x26e SWAP1
0x26f SWAP4
0x270 MUL
0x271 DUP5
0x272 ADD
0x273 PUSH1 0x40
0x275 MSTORE
0x276 PUSH1 0x60
0x278 DUP3
0x279 DUP2
0x27a MSTORE
0x27b PUSH2 0x3ff
0x27e SWAP5
0x27f DUP5
0x280 CALLDATALOAD
0x281 SWAP5
0x282 PUSH1 0x24
0x284 DUP1
0x285 CALLDATALOAD
0x286 SWAP6
0x287 SWAP2
0x288 SWAP5
0x289 PUSH1 0x64
0x28b SWAP5
0x28c SWAP4
0x28d SWAP2
0x28e ADD
0x28f SWAP2
0x290 SWAP1
0x291 DUP2
0x292 SWAP1
0x293 DUP4
0x294 DUP3
0x295 DUP1
0x296 DUP3
0x297 DUP5
0x298 CALLDATACOPY
0x299 POP
0x29a SWAP5
0x29b SWAP7
0x29c POP
0x29d POP
0x29e POP
0x29f POP
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 PUSH1 0x0
0x2a5 SLOAD
0x2a6 CALLER
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af SWAP1
0x2b0 DUP2
0x2b1 AND
0x2b2 SWAP2
0x2b3 AND
0x2b4 EQ
0x2b5 ISZERO
0x2b6 PUSH2 0x32c
0x2b9 JUMPI
---
0x258: JUMPDEST 
0x259: V253 = 0x80
0x25b: V254 = 0x20
0x25d: V255 = 0x1f
0x25f: V256 = 0x44
0x261: V257 = CALLDATALOAD 0x44
0x262: V258 = 0x4
0x266: V259 = ADD 0x4 V257
0x267: V260 = CALLDATALOAD V259
0x26a: V261 = ADD V260 0x1f
0x26d: V262 = DIV V261 0x20
0x270: V263 = MUL 0x20 V262
0x272: V264 = ADD 0x80 V263
0x273: V265 = 0x40
0x275: M[0x40] = V264
0x276: V266 = 0x60
0x27a: M[0x60] = V260
0x27b: V267 = 0x3ff
0x280: V268 = CALLDATALOAD 0x4
0x282: V269 = 0x24
0x285: V270 = CALLDATALOAD 0x24
0x289: V271 = 0x64
0x28e: V272 = ADD 0x24 V257
0x298: CALLDATACOPY 0x80 V272 V260
0x2a3: V273 = 0x0
0x2a5: V274 = S[0x0]
0x2a6: V275 = CALLER
0x2a7: V276 = 0x1
0x2a9: V277 = 0xa0
0x2ab: V278 = 0x2
0x2ad: V279 = EXP 0x2 0xa0
0x2ae: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b1: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x2b3: V282 = AND V274 0xffffffffffffffffffffffffffffffffffffffff
0x2b4: V283 = EQ V282 V281
0x2b5: V284 = ISZERO V283
0x2b6: V285 = 0x32c
0x2b9: JUMPI 0x32c V284
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ff, V268, V270, 0x60]
Exit stack: [V10, 0x3ff, V268, V270, 0x60]

================================

Block 0x2ba
[0x2ba:0x2f8]
---
Predecessors: [0x258]
Successors: [0x2f9, 0x312]
---
0x2ba DUP3
0x2bb PUSH1 0x1
0x2bd PUSH1 0xa0
0x2bf PUSH1 0x2
0x2c1 EXP
0x2c2 SUB
0x2c3 AND
0x2c4 DUP3
0x2c5 DUP3
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 DUP1
0x2ca DUP3
0x2cb DUP1
0x2cc MLOAD
0x2cd SWAP1
0x2ce PUSH1 0x20
0x2d0 ADD
0x2d1 SWAP1
0x2d2 DUP1
0x2d3 DUP4
0x2d4 DUP4
0x2d5 DUP3
0x2d6 SWAP1
0x2d7 PUSH1 0x0
0x2d9 PUSH1 0x4
0x2db PUSH1 0x20
0x2dd DUP5
0x2de PUSH1 0x1f
0x2e0 ADD
0x2e1 DIV
0x2e2 PUSH1 0xf
0x2e4 MUL
0x2e5 PUSH1 0x3
0x2e7 ADD
0x2e8 CALL
0x2e9 POP
0x2ea SWAP1
0x2eb POP
0x2ec SWAP1
0x2ed DUP2
0x2ee ADD
0x2ef SWAP1
0x2f0 PUSH1 0x1f
0x2f2 AND
0x2f3 DUP1
0x2f4 ISZERO
0x2f5 PUSH2 0x312
0x2f8 JUMPI
---
0x2bb: V286 = 0x1
0x2bd: V287 = 0xa0
0x2bf: V288 = 0x2
0x2c1: V289 = EXP 0x2 0xa0
0x2c2: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c3: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x2c6: V292 = 0x40
0x2c8: V293 = M[0x40]
0x2cc: V294 = M[0x60]
0x2ce: V295 = 0x20
0x2d0: V296 = ADD 0x20 0x60
0x2d7: V297 = 0x0
0x2d9: V298 = 0x4
0x2db: V299 = 0x20
0x2de: V300 = 0x1f
0x2e0: V301 = ADD 0x1f V294
0x2e1: V302 = DIV V301 0x20
0x2e2: V303 = 0xf
0x2e4: V304 = MUL 0xf V302
0x2e5: V305 = 0x3
0x2e7: V306 = ADD 0x3 V304
0x2e8: V307 = CALL V306 0x4 0x0 0x80 V294 V293 V294
0x2ee: V308 = ADD V294 V293
0x2f0: V309 = 0x1f
0x2f2: V310 = AND 0x1f V294
0x2f4: V311 = ISZERO V310
0x2f5: V312 = 0x312
0x2f8: JUMPI 0x312 V311
---
Entry stack: [V10, 0x3ff, V268, V270, 0x60]
Stack pops: 3
Stack additions: [S2, S1, S0, V291, S1, S0, V293, V308, V310]
Exit stack: [V10, 0x3ff, V268, V270, 0x60, V291, V270, 0x60, V293, V308, V310]

================================

Block 0x2f9
[0x2f9:0x311]
---
Predecessors: [0x2ba]
Successors: [0x312]
---
0x2f9 DUP1
0x2fa DUP3
0x2fb SUB
0x2fc DUP1
0x2fd MLOAD
0x2fe PUSH1 0x1
0x300 DUP4
0x301 PUSH1 0x20
0x303 SUB
0x304 PUSH2 0x100
0x307 EXP
0x308 SUB
0x309 NOT
0x30a AND
0x30b DUP2
0x30c MSTORE
0x30d PUSH1 0x20
0x30f ADD
0x310 SWAP2
0x311 POP
---
0x2fb: V313 = SUB V308 V310
0x2fd: V314 = M[V313]
0x2fe: V315 = 0x1
0x301: V316 = 0x20
0x303: V317 = SUB 0x20 V310
0x304: V318 = 0x100
0x307: V319 = EXP 0x100 V317
0x308: V320 = SUB V319 0x1
0x309: V321 = NOT V320
0x30a: V322 = AND V321 V314
0x30c: M[V313] = V322
0x30d: V323 = 0x20
0x30f: V324 = ADD 0x20 V313
---
Entry stack: [V10, 0x3ff, V268, V270, 0x60, V291, V270, 0x60, V293, V308, V310]
Stack pops: 2
Stack additions: [V324, S0]
Exit stack: [V10, 0x3ff, V268, V270, 0x60, V291, V270, 0x60, V293, V324, V310]

================================

Block 0x312
[0x312:0x32b]
---
Predecessors: [0x2ba, 0x2f9]
Successors: [0x32c]
---
0x312 JUMPDEST
0x313 POP
0x314 SWAP2
0x315 POP
0x316 POP
0x317 PUSH1 0x0
0x319 PUSH1 0x40
0x31b MLOAD
0x31c DUP1
0x31d DUP4
0x31e SUB
0x31f DUP2
0x320 DUP6
0x321 DUP8
0x322 PUSH2 0x8502
0x325 GAS
0x326 SUB
0x327 CALL
0x328 POP
0x329 POP
0x32a POP
0x32b POP
---
0x312: JUMPDEST 
0x317: V325 = 0x0
0x319: V326 = 0x40
0x31b: V327 = M[0x40]
0x31e: V328 = SUB S1 V327
0x322: V329 = 0x8502
0x325: V330 = GAS
0x326: V331 = SUB V330 0x8502
0x327: V332 = CALL V331 V291 V270 V327 V328 V327 0x0
---
Entry stack: [V10, 0x3ff, V268, V270, 0x60, V291, V270, 0x60, V293, S1, V310]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x3ff, V268, V270, 0x60]

================================

Block 0x32c
[0x32c:0x330]
---
Predecessors: [0x258, 0x312]
Successors: [0x3ff]
---
0x32c JUMPDEST
0x32d POP
0x32e POP
0x32f POP
0x330 JUMP
---
0x32c: JUMPDEST 
0x330: JUMP 0x3ff
---
Entry stack: [V10, 0x3ff, V268, V270, 0x60]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x331
[0x331:0x342]
---
Predecessors: [0x3e6]
Successors: []
---
0x331 JUMPDEST
0x332 PUSH1 0x40
0x334 DUP1
0x335 MLOAD
0x336 SWAP2
0x337 DUP3
0x338 MSTORE
0x339 MLOAD
0x33a SWAP1
0x33b DUP2
0x33c SWAP1
0x33d SUB
0x33e PUSH1 0x20
0x340 ADD
0x341 SWAP1
0x342 RETURN
---
0x331: JUMPDEST 
0x332: V333 = 0x40
0x335: V334 = M[0x40]
0x338: M[V334] = 0x1
0x339: V335 = M[0x40]
0x33d: V336 = SUB V334 V335
0x33e: V337 = 0x20
0x340: V338 = ADD 0x20 V336
0x342: RETURN V335 V338
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x343
[0x343:0x396]
---
Predecessors: [0x4b]
Successors: [0x397]
---
0x343 JUMPDEST
0x344 PUSH1 0x1
0x346 SLOAD
0x347 DUP2
0x348 SLOAD
0x349 PUSH1 0xe0
0x34b PUSH1 0x2
0x34d EXP
0x34e PUSH4 0x70a08231
0x353 MUL
0x354 PUSH1 0x60
0x356 SWAP1
0x357 DUP2
0x358 MSTORE
0x359 ADDRESS
0x35a PUSH1 0x1
0x35c PUSH1 0xa0
0x35e PUSH1 0x2
0x360 EXP
0x361 SUB
0x362 SWAP1
0x363 DUP2
0x364 AND
0x365 PUSH1 0x64
0x367 MSTORE
0x368 SWAP3
0x369 DUP4
0x36a AND
0x36b SWAP3
0x36c PUSH4 0xa9059cbb
0x371 SWAP3
0x372 AND
0x373 SWAP1
0x374 PUSH3 0xf4240
0x378 SWAP1
0x379 DUP5
0x37a SWAP1
0x37b PUSH4 0x70a08231
0x380 SWAP1
0x381 PUSH1 0x84
0x383 SWAP1
0x384 PUSH1 0x20
0x386 SWAP1
0x387 PUSH1 0x24
0x389 DUP2
0x38a DUP12
0x38b DUP8
0x38c PUSH2 0x61da
0x38f GAS
0x390 SUB
0x391 CALL
0x392 ISZERO
0x393 PUSH2 0x2
0x396 JUMPI
---
0x343: JUMPDEST 
0x344: V339 = 0x1
0x346: V340 = S[0x1]
0x348: V341 = S[0x0]
0x349: V342 = 0xe0
0x34b: V343 = 0x2
0x34d: V344 = EXP 0x2 0xe0
0x34e: V345 = 0x70a08231
0x353: V346 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x354: V347 = 0x60
0x358: M[0x60] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x359: V348 = ADDRESS
0x35a: V349 = 0x1
0x35c: V350 = 0xa0
0x35e: V351 = 0x2
0x360: V352 = EXP 0x2 0xa0
0x361: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x364: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x365: V355 = 0x64
0x367: M[0x64] = V354
0x36a: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x36c: V357 = 0xa9059cbb
0x372: V358 = AND V341 0xffffffffffffffffffffffffffffffffffffffff
0x374: V359 = 0xf4240
0x37b: V360 = 0x70a08231
0x381: V361 = 0x84
0x384: V362 = 0x20
0x387: V363 = 0x24
0x38c: V364 = 0x61da
0x38f: V365 = GAS
0x390: V366 = SUB V365 0x61da
0x391: V367 = CALL V366 V356 0x0 0x60 0x24 0x60 0x20
0x392: V368 = ISZERO V367
0x393: V369 = 0x2
0x396: THROWI V368
---
Entry stack: [V10, 0x331, 0x0]
Stack pops: 1
Stack additions: [S0, V356, 0xa9059cbb, V358, 0xf4240, V356, 0x70a08231, 0x84]
Exit stack: [V10, 0x331, 0x0, V356, 0xa9059cbb, V358, 0xf4240, V356, 0x70a08231, 0x84]

================================

Block 0x397
[0x397:0x3e2]
---
Predecessors: [0x343]
Successors: [0x3e3]
---
0x397 POP
0x398 POP
0x399 PUSH1 0x40
0x39b DUP1
0x39c MLOAD
0x39d DUP1
0x39e MLOAD
0x39f PUSH1 0xe0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 PUSH4 0xa9059cbb
0x3a9 MUL
0x3aa DUP3
0x3ab MSTORE
0x3ac PUSH1 0x4
0x3ae DUP3
0x3af ADD
0x3b0 SWAP6
0x3b1 SWAP1
0x3b2 SWAP6
0x3b3 MSTORE
0x3b4 PUSH3 0xf423f
0x3b8 SWAP1
0x3b9 SWAP5
0x3ba MUL
0x3bb SWAP3
0x3bc SWAP1
0x3bd SWAP3
0x3be DIV
0x3bf PUSH1 0x24
0x3c1 DUP5
0x3c2 ADD
0x3c3 MSTORE
0x3c4 POP
0x3c5 MLOAD
0x3c6 PUSH1 0x44
0x3c8 DUP1
0x3c9 DUP4
0x3ca ADD
0x3cb SWAP3
0x3cc PUSH1 0x20
0x3ce SWAP3
0x3cf SWAP2
0x3d0 SWAP1
0x3d1 DUP3
0x3d2 SWAP1
0x3d3 SUB
0x3d4 ADD
0x3d5 DUP2
0x3d6 DUP8
0x3d7 DUP8
0x3d8 PUSH2 0x61da
0x3db GAS
0x3dc SUB
0x3dd CALL
0x3de ISZERO
0x3df PUSH2 0x2
0x3e2 JUMPI
---
0x399: V370 = 0x40
0x39c: V371 = M[0x40]
0x39e: V372 = M[V371]
0x39f: V373 = 0xe0
0x3a1: V374 = 0x2
0x3a3: V375 = EXP 0x2 0xe0
0x3a4: V376 = 0xa9059cbb
0x3a9: V377 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3ab: M[V371] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3ac: V378 = 0x4
0x3af: V379 = ADD V371 0x4
0x3b3: M[V379] = V358
0x3b4: V380 = 0xf423f
0x3ba: V381 = MUL V372 0xf423f
0x3be: V382 = DIV V381 0xf4240
0x3bf: V383 = 0x24
0x3c2: V384 = ADD V371 0x24
0x3c3: M[V384] = V382
0x3c5: V385 = M[0x40]
0x3c6: V386 = 0x44
0x3ca: V387 = ADD V371 0x44
0x3cc: V388 = 0x20
0x3d3: V389 = SUB V371 V385
0x3d4: V390 = ADD V389 0x44
0x3d8: V391 = 0x61da
0x3db: V392 = GAS
0x3dc: V393 = SUB V392 0x61da
0x3dd: V394 = CALL V393 V356 0x0 V385 V390 V385 0x20
0x3de: V395 = ISZERO V394
0x3df: V396 = 0x2
0x3e2: THROWI V395
---
Entry stack: [V10, 0x331, 0x0, V356, 0xa9059cbb, V358, 0xf4240, V356, 0x70a08231, 0x84]
Stack pops: 8
Stack additions: [S7, S6, S5, V387]
Exit stack: [V10, 0x331, 0x0, V356, 0xa9059cbb, V387]

================================

Block 0x3e3
[0x3e3:0x3e5]
---
Predecessors: [0x397]
Successors: [0x3e6]
---
0x3e3 POP
0x3e4 POP
0x3e5 POP
---
0x3e3: NOP 
---
Entry stack: [V10, 0x331, 0x0, V356, 0xa9059cbb, V387]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x331, 0x0]

================================

Block 0x3e6
[0x3e6:0x3eb]
---
Predecessors: [0xa4, 0x3e3]
Successors: [0x331]
---
0x3e6 JUMPDEST
0x3e7 POP
0x3e8 PUSH1 0x1
0x3ea SWAP1
0x3eb JUMP
---
0x3e6: JUMPDEST 
0x3e8: V397 = 0x1
0x3eb: JUMP 0x331
---
Entry stack: [V10, 0x331, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0x3ec
[0x3ec:0x3fe]
---
Predecessors: [0xac, 0xbe, 0x246]
Successors: []
---
0x3ec JUMPDEST
0x3ed PUSH1 0x1
0x3ef PUSH1 0xa0
0x3f1 PUSH1 0x2
0x3f3 EXP
0x3f4 SUB
0x3f5 AND
0x3f6 PUSH1 0x60
0x3f8 SWAP1
0x3f9 DUP2
0x3fa MSTORE
0x3fb PUSH1 0x20
0x3fd SWAP1
0x3fe RETURN
---
0x3ec: JUMPDEST 
0x3ed: V398 = 0x1
0x3ef: V399 = 0xa0
0x3f1: V400 = 0x2
0x3f3: V401 = EXP 0x2 0xa0
0x3f4: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3f6: V404 = 0x60
0x3fa: M[0x60] = V403
0x3fb: V405 = 0x20
0x3fe: RETURN 0x60 0x20
---
Entry stack: [V10, 0x3ec, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3ec]

================================

Block 0x3ff
[0x3ff:0x400]
---
Predecessors: [0x243, 0x32c]
Successors: []
---
0x3ff JUMPDEST
0x400 STOP
---
0x3ff: JUMPDEST 
0x400: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x3b0c03b1
Entry block: 0xac
Exit block: 0x3ec
Body: 0xac, 0x3ec

Function 1:
Public function signature: 0x4162169f
Entry block: 0xbe
Exit block: 0x3ec
Body: 0xbe, 0x3ec

Function 2:
Public function signature: 0x42966c68
Entry block: 0xd0
Exit block: 0x3ff
Body: 0xd0, 0xee, 0x12f, 0x18f, 0x1d2, 0x1e8, 0x23f, 0x243, 0x3ff

Function 3:
Public function signature: 0x913e77ad
Entry block: 0x246
Exit block: 0x3ec
Body: 0x246, 0x3ec

Function 4:
Public function signature: 0xb61d27f6
Entry block: 0x258
Exit block: 0x3ff
Body: 0x258, 0x2ba, 0x2f9, 0x312, 0x32c, 0x3ff

Function 5:
Public fallback function
Entry block: 0x4b
Exit block: 0x331
Body: 0x4b, 0x5f, 0xa4, 0x331, 0x343, 0x397, 0x3e3, 0x3e6

