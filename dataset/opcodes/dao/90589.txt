Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5f
0xa: JUMPI 0x5f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x63]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x900f010
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x63
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x900f010
0x39: V12 = EQ V10 0x900f010
0x3a: V13 = 0x63
0x3d: JUMPI 0x63 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x84]
---
0x3e DUP1
0x3f PUSH4 0x3f5a0bdd
0x44 EQ
0x45 PUSH2 0x84
0x48 JUMPI
---
0x3f: V14 = 0x3f5a0bdd
0x44: V15 = EQ 0x3f5a0bdd V10
0x45: V16 = 0x84
0x48: JUMPI 0x84 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xa5]
---
0x49 DUP1
0x4a PUSH4 0x79cb5a2f
0x4f EQ
0x50 PUSH2 0xa5
0x53 JUMPI
---
0x4a: V17 = 0x79cb5a2f
0x4f: V18 = EQ 0x79cb5a2f V10
0x50: V19 = 0xa5
0x53: JUMPI 0xa5 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xc6]
---
0x54 DUP1
0x55 PUSH4 0xa3912ec8
0x5a EQ
0x5b PUSH2 0xc6
0x5e JUMPI
---
0x55: V20 = 0xa3912ec8
0x5a: V21 = EQ 0xa3912ec8 V10
0x5b: V22 = 0xc6
0x5e: JUMPI 0xc6 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x5f]
---
Predecessors: [0x0, 0x54, 0x1d7, 0x26a, 0x2c7]
Successors: [0x60]
---
0x5f JUMPDEST
---
0x5f: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x60
[0x60:0x60]
---
Predecessors: [0x5f]
Successors: [0x61]
---
0x60 JUMPDEST
---
0x60: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x60]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x63
[0x63:0x69]
---
Predecessors: [0xb]
Successors: [0x6a, 0x6e]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 ISZERO
0x66 PUSH2 0x6e
0x69 JUMPI
---
0x63: JUMPDEST 
0x64: V23 = CALLVALUE
0x65: V24 = ISZERO V23
0x66: V25 = 0x6e
0x69: JUMPI 0x6e V24
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x6d]
---
Predecessors: [0x63]
Successors: []
---
0x6a PUSH1 0x0
0x6c DUP1
0x6d REVERT
---
0x6a: V26 = 0x0
0x6d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6e
[0x6e:0x81]
---
Predecessors: [0x63]
Successors: [0xd0]
---
0x6e JUMPDEST
0x6f PUSH2 0x5f
0x72 PUSH1 0x1
0x74 PUSH1 0xa0
0x76 PUSH1 0x2
0x78 EXP
0x79 SUB
0x7a PUSH1 0x4
0x7c CALLDATALOAD
0x7d AND
0x7e PUSH2 0xd0
0x81 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x5f
0x72: V28 = 0x1
0x74: V29 = 0xa0
0x76: V30 = 0x2
0x78: V31 = EXP 0x2 0xa0
0x79: V32 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a: V33 = 0x4
0x7c: V34 = CALLDATALOAD 0x4
0x7d: V35 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x7e: V36 = 0xd0
0x81: JUMP 0xd0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5f, V35]
Exit stack: [V10, 0x5f, V35]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: []
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x84
[0x84:0x8a]
---
Predecessors: [0x3e]
Successors: [0x8b, 0x8f]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 ISZERO
0x87 PUSH2 0x8f
0x8a JUMPI
---
0x84: JUMPDEST 
0x85: V37 = CALLVALUE
0x86: V38 = ISZERO V37
0x87: V39 = 0x8f
0x8a: JUMPI 0x8f V38
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x8e]
---
Predecessors: [0x84]
Successors: []
---
0x8b PUSH1 0x0
0x8d DUP1
0x8e REVERT
---
0x8b: V40 = 0x0
0x8e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8f
[0x8f:0xa2]
---
Predecessors: [0x84]
Successors: [0x1da]
---
0x8f JUMPDEST
0x90 PUSH2 0x5f
0x93 PUSH1 0x1
0x95 PUSH1 0xa0
0x97 PUSH1 0x2
0x99 EXP
0x9a SUB
0x9b PUSH1 0x4
0x9d CALLDATALOAD
0x9e AND
0x9f PUSH2 0x1da
0xa2 JUMP
---
0x8f: JUMPDEST 
0x90: V41 = 0x5f
0x93: V42 = 0x1
0x95: V43 = 0xa0
0x97: V44 = 0x2
0x99: V45 = EXP 0x2 0xa0
0x9a: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b: V47 = 0x4
0x9d: V48 = CALLDATALOAD 0x4
0x9e: V49 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0x9f: V50 = 0x1da
0xa2: JUMP 0x1da
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5f, V49]
Exit stack: [V10, 0x5f, V49]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: []
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa5
[0xa5:0xab]
---
Predecessors: [0x49]
Successors: [0xac, 0xb0]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa5: JUMPDEST 
0xa6: V51 = CALLVALUE
0xa7: V52 = ISZERO V51
0xa8: V53 = 0xb0
0xab: JUMPI 0xb0 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa5]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V54 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb0
[0xb0:0xc3]
---
Predecessors: [0xa5]
Successors: [0x21b]
---
0xb0 JUMPDEST
0xb1 PUSH2 0x5f
0xb4 PUSH1 0x1
0xb6 PUSH1 0xa0
0xb8 PUSH1 0x2
0xba EXP
0xbb SUB
0xbc PUSH1 0x4
0xbe CALLDATALOAD
0xbf AND
0xc0 PUSH2 0x21b
0xc3 JUMP
---
0xb0: JUMPDEST 
0xb1: V55 = 0x5f
0xb4: V56 = 0x1
0xb6: V57 = 0xa0
0xb8: V58 = 0x2
0xba: V59 = EXP 0x2 0xa0
0xbb: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc: V61 = 0x4
0xbe: V62 = CALLDATALOAD 0x4
0xbf: V63 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V64 = 0x21b
0xc3: JUMP 0x21b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5f, V63]
Exit stack: [V10, 0x5f, V63]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: []
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0x54]
Successors: [0x26d]
---
0xc6 JUMPDEST
0xc7 PUSH2 0x5f
0xca PUSH2 0x26d
0xcd JUMP
---
0xc6: JUMPDEST 
0xc7: V65 = 0x5f
0xca: V66 = 0x26d
0xcd: JUMP 0x26d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5f]
Exit stack: [V10, 0x5f]

================================

Block 0xce
[0xce:0xcf]
---
Predecessors: []
Successors: []
---
0xce JUMPDEST
0xcf STOP
---
0xce: JUMPDEST 
0xcf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd0
[0xd0:0xeb]
---
Predecessors: [0x6e]
Successors: [0xec, 0xf0]
---
0xd0 JUMPDEST
0xd1 PUSH1 0x0
0xd3 SLOAD
0xd4 CALLER
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd SWAP1
0xde DUP2
0xdf AND
0xe0 PUSH2 0x100
0xe3 SWAP1
0xe4 SWAP3
0xe5 DIV
0xe6 AND
0xe7 EQ
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xd0: JUMPDEST 
0xd1: V67 = 0x0
0xd3: V68 = S[0x0]
0xd4: V69 = CALLER
0xd5: V70 = 0x1
0xd7: V71 = 0xa0
0xd9: V72 = 0x2
0xdb: V73 = EXP 0x2 0xa0
0xdc: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0xe0: V76 = 0x100
0xe5: V77 = DIV V68 0x100
0xe6: V78 = AND V77 0xffffffffffffffffffffffffffffffffffffffff
0xe7: V79 = EQ V78 V75
0xe8: V80 = 0xf0
0xeb: JUMPI 0xf0 V79
---
Entry stack: [V10, 0x5f, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V35]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xd0]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V81 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V10, 0x5f, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V35]

================================

Block 0xf0
[0xf0:0x1bb]
---
Predecessors: [0xd0]
Successors: [0x1bc, 0x1c0]
---
0xf0 JUMPDEST
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 SLOAD
0xf5 PUSH1 0xff
0xf7 NOT
0xf8 AND
0xf9 PUSH1 0x1
0xfb OR
0xfc SWAP1
0xfd SSTORE
0xfe PUSH32 0xaab9bba4fcd15de155f5c12ace41cb1b506009169b2ca88c26fa17282a6a2866
0x11f DUP2
0x120 PUSH1 0x1
0x122 PUSH1 0xa0
0x124 PUSH1 0x2
0x126 EXP
0x127 SUB
0x128 ADDRESS
0x129 AND
0x12a BALANCE
0x12b TIMESTAMP
0x12c PUSH1 0x40
0x12e MLOAD
0x12f DUP1
0x130 DUP5
0x131 PUSH1 0x1
0x133 PUSH1 0xa0
0x135 PUSH1 0x2
0x137 EXP
0x138 SUB
0x139 AND
0x13a PUSH1 0x1
0x13c PUSH1 0xa0
0x13e PUSH1 0x2
0x140 EXP
0x141 SUB
0x142 AND
0x143 DUP2
0x144 MSTORE
0x145 PUSH1 0x20
0x147 ADD
0x148 DUP4
0x149 DUP2
0x14a MSTORE
0x14b PUSH1 0x20
0x14d ADD
0x14e DUP3
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP4
0x155 POP
0x156 POP
0x157 POP
0x158 POP
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d SWAP2
0x15e SUB
0x15f SWAP1
0x160 LOG1
0x161 DUP1
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a AND
0x16b PUSH4 0xa3912ec8
0x170 ADDRESS
0x171 PUSH1 0x1
0x173 PUSH1 0xa0
0x175 PUSH1 0x2
0x177 EXP
0x178 SUB
0x179 AND
0x17a BALANCE
0x17b PUSH1 0x40
0x17d MLOAD
0x17e DUP3
0x17f PUSH4 0xffffffff
0x184 AND
0x185 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1a3 MUL
0x1a4 DUP2
0x1a5 MSTORE
0x1a6 PUSH1 0x4
0x1a8 ADD
0x1a9 PUSH1 0x0
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae DUP1
0x1af DUP4
0x1b0 SUB
0x1b1 DUP2
0x1b2 DUP6
0x1b3 DUP9
0x1b4 DUP1
0x1b5 EXTCODESIZE
0x1b6 ISZERO
0x1b7 ISZERO
0x1b8 PUSH2 0x1c0
0x1bb JUMPI
---
0xf0: JUMPDEST 
0xf1: V82 = 0x0
0xf4: V83 = S[0x0]
0xf5: V84 = 0xff
0xf7: V85 = NOT 0xff
0xf8: V86 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V83
0xf9: V87 = 0x1
0xfb: V88 = OR 0x1 V86
0xfd: S[0x0] = V88
0xfe: V89 = 0xaab9bba4fcd15de155f5c12ace41cb1b506009169b2ca88c26fa17282a6a2866
0x120: V90 = 0x1
0x122: V91 = 0xa0
0x124: V92 = 0x2
0x126: V93 = EXP 0x2 0xa0
0x127: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x128: V95 = ADDRESS
0x129: V96 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x12a: V97 = BALANCE V96
0x12b: V98 = TIMESTAMP
0x12c: V99 = 0x40
0x12e: V100 = M[0x40]
0x131: V101 = 0x1
0x133: V102 = 0xa0
0x135: V103 = 0x2
0x137: V104 = EXP 0x2 0xa0
0x138: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x13a: V107 = 0x1
0x13c: V108 = 0xa0
0x13e: V109 = 0x2
0x140: V110 = EXP 0x2 0xa0
0x141: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x142: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x144: M[V100] = V112
0x145: V113 = 0x20
0x147: V114 = ADD 0x20 V100
0x14a: M[V114] = V97
0x14b: V115 = 0x20
0x14d: V116 = ADD 0x20 V114
0x150: M[V116] = V98
0x151: V117 = 0x20
0x153: V118 = ADD 0x20 V116
0x159: V119 = 0x40
0x15b: V120 = M[0x40]
0x15e: V121 = SUB V118 V120
0x160: LOG V120 V121 0xaab9bba4fcd15de155f5c12ace41cb1b506009169b2ca88c26fa17282a6a2866
0x162: V122 = 0x1
0x164: V123 = 0xa0
0x166: V124 = 0x2
0x168: V125 = EXP 0x2 0xa0
0x169: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16a: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x16b: V128 = 0xa3912ec8
0x170: V129 = ADDRESS
0x171: V130 = 0x1
0x173: V131 = 0xa0
0x175: V132 = 0x2
0x177: V133 = EXP 0x2 0xa0
0x178: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x179: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x17a: V136 = BALANCE V135
0x17b: V137 = 0x40
0x17d: V138 = M[0x40]
0x17f: V139 = 0xffffffff
0x184: V140 = AND 0xffffffff 0xa3912ec8
0x185: V141 = 0x100000000000000000000000000000000000000000000000000000000
0x1a3: V142 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa3912ec8
0x1a5: M[V138] = 0xa3912ec800000000000000000000000000000000000000000000000000000000
0x1a6: V143 = 0x4
0x1a8: V144 = ADD 0x4 V138
0x1a9: V145 = 0x0
0x1ab: V146 = 0x40
0x1ad: V147 = M[0x40]
0x1b0: V148 = SUB V144 V147
0x1b5: V149 = EXTCODESIZE V127
0x1b6: V150 = ISZERO V149
0x1b7: V151 = ISZERO V150
0x1b8: V152 = 0x1c0
0x1bb: JUMPI 0x1c0 V151
---
Entry stack: [V10, 0x5f, V35]
Stack pops: 1
Stack additions: [S0, V127, 0xa3912ec8, V136, V144, 0x0, V147, V148, V147, V136, V127]
Exit stack: [V10, 0x5f, V35, V127, 0xa3912ec8, V136, V144, 0x0, V147, V148, V147, V136, V127]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0xf0]
Successors: []
---
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf REVERT
---
0x1bc: V153 = 0x0
0x1bf: REVERT 0x0 0x0
---
Entry stack: [V10, 0x5f, V35, V127, 0xa3912ec8, V136, V144, 0x0, V147, V148, V147, V136, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V35, V127, 0xa3912ec8, V136, V144, 0x0, V147, V148, V147, V136, V127]

================================

Block 0x1c0
[0x1c0:0x1cc]
---
Predecessors: [0xf0]
Successors: [0x1cd, 0x1d1]
---
0x1c0 JUMPDEST
0x1c1 PUSH2 0x25ee
0x1c4 GAS
0x1c5 SUB
0x1c6 CALL
0x1c7 ISZERO
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x1c0: JUMPDEST 
0x1c1: V154 = 0x25ee
0x1c4: V155 = GAS
0x1c5: V156 = SUB V155 0x25ee
0x1c6: V157 = CALL V156 V127 V136 V147 V148 V147 0x0
0x1c7: V158 = ISZERO V157
0x1c8: V159 = ISZERO V158
0x1c9: V160 = 0x1d1
0x1cc: JUMPI 0x1d1 V159
---
Entry stack: [V10, 0x5f, V35, V127, 0xa3912ec8, V136, V144, 0x0, V147, V148, V147, V136, V127]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x5f, V35, V127, 0xa3912ec8, V136, V144]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x1c0]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V161 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x5f, V35, V127, 0xa3912ec8, V136, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V35, V127, 0xa3912ec8, V136, V144]

================================

Block 0x1d1
[0x1d1:0x1d5]
---
Predecessors: [0x1c0]
Successors: [0x1d6]
---
0x1d1 JUMPDEST
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 POP
---
0x1d1: JUMPDEST 
---
Entry stack: [V10, 0x5f, V35, V127, 0xa3912ec8, V136, V144]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x5f, V35]

================================

Block 0x1d6
[0x1d6:0x1d6]
---
Predecessors: [0x1d1]
Successors: [0x1d7]
---
0x1d6 JUMPDEST
---
0x1d6: JUMPDEST 
---
Entry stack: [V10, 0x5f, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V35]

================================

Block 0x1d7
[0x1d7:0x1d9]
---
Predecessors: [0x1d6]
Successors: [0x5f]
---
0x1d7 JUMPDEST
0x1d8 POP
0x1d9 JUMP
---
0x1d7: JUMPDEST 
0x1d9: JUMP 0x5f
---
Entry stack: [V10, 0x5f, V35]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1da
[0x1da:0x1f5]
---
Predecessors: [0x8f]
Successors: [0x1f6, 0x1fa]
---
0x1da JUMPDEST
0x1db PUSH1 0x0
0x1dd SLOAD
0x1de CALLER
0x1df PUSH1 0x1
0x1e1 PUSH1 0xa0
0x1e3 PUSH1 0x2
0x1e5 EXP
0x1e6 SUB
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 AND
0x1ea PUSH2 0x100
0x1ed SWAP1
0x1ee SWAP3
0x1ef DIV
0x1f0 AND
0x1f1 EQ
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x1da: JUMPDEST 
0x1db: V162 = 0x0
0x1dd: V163 = S[0x0]
0x1de: V164 = CALLER
0x1df: V165 = 0x1
0x1e1: V166 = 0xa0
0x1e3: V167 = 0x2
0x1e5: V168 = EXP 0x2 0xa0
0x1e6: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e9: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1ea: V171 = 0x100
0x1ef: V172 = DIV V163 0x100
0x1f0: V173 = AND V172 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V174 = EQ V173 V170
0x1f2: V175 = 0x1fa
0x1f5: JUMPI 0x1fa V174
---
Entry stack: [V10, 0x5f, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V49]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x1da]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V176 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x5f, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V49]

================================

Block 0x1fa
[0x1fa:0x206]
---
Predecessors: [0x1da]
Successors: [0x207, 0x20b]
---
0x1fa JUMPDEST
0x1fb PUSH1 0x0
0x1fd SLOAD
0x1fe PUSH1 0xff
0x200 AND
0x201 ISZERO
0x202 ISZERO
0x203 PUSH2 0x20b
0x206 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V177 = 0x0
0x1fd: V178 = S[0x0]
0x1fe: V179 = 0xff
0x200: V180 = AND 0xff V178
0x201: V181 = ISZERO V180
0x202: V182 = ISZERO V181
0x203: V183 = 0x20b
0x206: JUMPI 0x20b V182
---
Entry stack: [V10, 0x5f, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V49]

================================

Block 0x207
[0x207:0x20a]
---
Predecessors: [0x1fa]
Successors: []
---
0x207 PUSH1 0x0
0x209 DUP1
0x20a REVERT
---
0x207: V184 = 0x0
0x20a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x5f, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V49]

================================

Block 0x20b
[0x20b:0x216]
---
Predecessors: [0x1fa]
Successors: []
---
0x20b JUMPDEST
0x20c DUP1
0x20d PUSH1 0x1
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SUB
0x215 AND
0x216 SELFDESTRUCT
---
0x20b: JUMPDEST 
0x20d: V185 = 0x1
0x20f: V186 = 0xa0
0x211: V187 = 0x2
0x213: V188 = EXP 0x2 0xa0
0x214: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x215: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x216: SELFDESTRUCT V190
---
Entry stack: [V10, 0x5f, V49]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5f, V49]

================================

Block 0x217
[0x217:0x217]
---
Predecessors: []
Successors: [0x218]
---
0x217 JUMPDEST
---
0x217: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x218
[0x218:0x21a]
---
Predecessors: [0x217]
Successors: []
Has unresolved jump.
---
0x218 JUMPDEST
0x219 POP
0x21a JUMP
---
0x218: JUMPDEST 
0x21a: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x21b
[0x21b:0x236]
---
Predecessors: [0xb0]
Successors: [0x237, 0x23b]
---
0x21b JUMPDEST
0x21c PUSH1 0x0
0x21e SLOAD
0x21f CALLER
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 SWAP1
0x229 DUP2
0x22a AND
0x22b PUSH2 0x100
0x22e SWAP1
0x22f SWAP3
0x230 DIV
0x231 AND
0x232 EQ
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x21b: JUMPDEST 
0x21c: V191 = 0x0
0x21e: V192 = S[0x0]
0x21f: V193 = CALLER
0x220: V194 = 0x1
0x222: V195 = 0xa0
0x224: V196 = 0x2
0x226: V197 = EXP 0x2 0xa0
0x227: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22a: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x22b: V200 = 0x100
0x230: V201 = DIV V192 0x100
0x231: V202 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x232: V203 = EQ V202 V199
0x233: V204 = 0x23b
0x236: JUMPI 0x23b V203
---
Entry stack: [V10, 0x5f, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V63]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x21b]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V205 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x5f, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V63]

================================

Block 0x23b
[0x23b:0x268]
---
Predecessors: [0x21b]
Successors: [0x269]
---
0x23b JUMPDEST
0x23c PUSH1 0x0
0x23e DUP1
0x23f SLOAD
0x240 PUSH21 0xffffffffffffffffffffffffffffffffffffffff00
0x256 NOT
0x257 AND
0x258 PUSH2 0x100
0x25b PUSH1 0x1
0x25d PUSH1 0xa0
0x25f PUSH1 0x2
0x261 EXP
0x262 SUB
0x263 DUP5
0x264 AND
0x265 MUL
0x266 OR
0x267 SWAP1
0x268 SSTORE
---
0x23b: JUMPDEST 
0x23c: V206 = 0x0
0x23f: V207 = S[0x0]
0x240: V208 = 0xffffffffffffffffffffffffffffffffffffffff00
0x256: V209 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x257: V210 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V207
0x258: V211 = 0x100
0x25b: V212 = 0x1
0x25d: V213 = 0xa0
0x25f: V214 = 0x2
0x261: V215 = EXP 0x2 0xa0
0x262: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V217 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0x265: V218 = MUL V217 0x100
0x266: V219 = OR V218 V210
0x268: S[0x0] = V219
---
Entry stack: [V10, 0x5f, V63]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5f, V63]

================================

Block 0x269
[0x269:0x269]
---
Predecessors: [0x23b]
Successors: [0x26a]
---
0x269 JUMPDEST
---
0x269: JUMPDEST 
---
Entry stack: [V10, 0x5f, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V63]

================================

Block 0x26a
[0x26a:0x26c]
---
Predecessors: [0x269]
Successors: [0x5f]
---
0x26a JUMPDEST
0x26b POP
0x26c JUMP
---
0x26a: JUMPDEST 
0x26c: JUMP 0x5f
---
Entry stack: [V10, 0x5f, V63]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x26d
[0x26d:0x2c6]
---
Predecessors: [0xc6]
Successors: [0x2c7]
---
0x26d JUMPDEST
0x26e PUSH32 0x606bd383d36fb6a21cc52432fedf43ae990ef5625eb266d0ddf50cc9cc114c7a
0x28f CALLER
0x290 CALLVALUE
0x291 TIMESTAMP
0x292 PUSH1 0x40
0x294 MLOAD
0x295 DUP1
0x296 DUP5
0x297 PUSH1 0x1
0x299 PUSH1 0xa0
0x29b PUSH1 0x2
0x29d EXP
0x29e SUB
0x29f AND
0x2a0 PUSH1 0x1
0x2a2 PUSH1 0xa0
0x2a4 PUSH1 0x2
0x2a6 EXP
0x2a7 SUB
0x2a8 AND
0x2a9 DUP2
0x2aa MSTORE
0x2ab PUSH1 0x20
0x2ad ADD
0x2ae DUP4
0x2af DUP2
0x2b0 MSTORE
0x2b1 PUSH1 0x20
0x2b3 ADD
0x2b4 DUP3
0x2b5 DUP2
0x2b6 MSTORE
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba SWAP4
0x2bb POP
0x2bc POP
0x2bd POP
0x2be POP
0x2bf PUSH1 0x40
0x2c1 MLOAD
0x2c2 DUP1
0x2c3 SWAP2
0x2c4 SUB
0x2c5 SWAP1
0x2c6 LOG1
---
0x26d: JUMPDEST 
0x26e: V220 = 0x606bd383d36fb6a21cc52432fedf43ae990ef5625eb266d0ddf50cc9cc114c7a
0x28f: V221 = CALLER
0x290: V222 = CALLVALUE
0x291: V223 = TIMESTAMP
0x292: V224 = 0x40
0x294: V225 = M[0x40]
0x297: V226 = 0x1
0x299: V227 = 0xa0
0x29b: V228 = 0x2
0x29d: V229 = EXP 0x2 0xa0
0x29e: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29f: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x2a0: V232 = 0x1
0x2a2: V233 = 0xa0
0x2a4: V234 = 0x2
0x2a6: V235 = EXP 0x2 0xa0
0x2a7: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a8: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x2aa: M[V225] = V237
0x2ab: V238 = 0x20
0x2ad: V239 = ADD 0x20 V225
0x2b0: M[V239] = V222
0x2b1: V240 = 0x20
0x2b3: V241 = ADD 0x20 V239
0x2b6: M[V241] = V223
0x2b7: V242 = 0x20
0x2b9: V243 = ADD 0x20 V241
0x2bf: V244 = 0x40
0x2c1: V245 = M[0x40]
0x2c4: V246 = SUB V243 V245
0x2c6: LOG V245 V246 0x606bd383d36fb6a21cc52432fedf43ae990ef5625eb266d0ddf50cc9cc114c7a
---
Entry stack: [V10, 0x5f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f]

================================

Block 0x2c7
[0x2c7:0x2c8]
---
Predecessors: [0x26d]
Successors: [0x5f]
---
0x2c7 JUMPDEST
0x2c8 JUMP
---
0x2c7: JUMPDEST 
0x2c8: JUMP 0x5f
---
Entry stack: [V10, 0x5f]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c9
[0x2c9:0x2fa]
---
Predecessors: []
Successors: []
---
0x2c9 STOP
0x2ca LOG1
0x2cb PUSH6 0x627a7a723058
0x2d2 SHA3
0x2d3 SLT
0x2d4 PUSH27 0x37d27995b39262b1115ca1e776e06cf022be557625853a4a840abf
0x2f0 PUSH10 0x34e50029
---
0x2c9: STOP 
0x2ca: LOG S0 S1 S2
0x2cb: V247 = 0x627a7a723058
0x2d2: V248 = SHA3 0x627a7a723058 S3
0x2d3: V249 = SLT V248 S4
0x2d4: V250 = 0x37d27995b39262b1115ca1e776e06cf022be557625853a4a840abf
0x2f0: V251 = 0x34e50029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x34e50029, 0x37d27995b39262b1115ca1e776e06cf022be557625853a4a840abf, V249]
Exit stack: []

================================

Function 0:
Public function signature: 0x900f010
Entry block: 0x63
Exit block: 0x61
Body: 0x5f, 0x60, 0x61, 0x63, 0x6a, 0x6e, 0xd0, 0xec, 0xf0, 0x1bc, 0x1c0, 0x1cd, 0x1d1, 0x1d6, 0x1d7

Function 1:
Public function signature: 0x3f5a0bdd
Entry block: 0x84
Exit block: 0x20b
Body: 0x84, 0x8b, 0x8f, 0x1da, 0x1f6, 0x1fa, 0x207, 0x20b

Function 2:
Public function signature: 0x79cb5a2f
Entry block: 0xa5
Exit block: 0x61
Body: 0x5f, 0x60, 0x61, 0xa5, 0xac, 0xb0, 0x21b, 0x237, 0x23b, 0x269, 0x26a

Function 3:
Public function signature: 0xa3912ec8
Entry block: 0xc6
Exit block: 0x61
Body: 0x5f, 0x60, 0x61, 0xc6, 0x26d, 0x2c7

Function 4:
Public fallback function
Entry block: 0x5f
Exit block: 0x61
Body: 0x5f, 0x60, 0x61

