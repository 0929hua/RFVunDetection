Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xcb]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x7fba9334
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xcb
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x7fba9334
0x3b: V13 = EQ V11 0x7fba9334
0x3c: V14 = 0xcb
0x3f: JUMPI 0xcb V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x106]
---
0x40 DUP1
0x41 PUSH4 0xd0e30db0
0x46 EQ
0x47 PUSH2 0x106
0x4a JUMPI
---
0x41: V15 = 0xd0e30db0
0x46: V16 = EQ 0xd0e30db0 V11
0x47: V17 = 0x106
0x4a: JUMPI 0x106 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x110]
---
0x4b DUP1
0x4c PUSH4 0xdbe992af
0x51 EQ
0x52 PUSH2 0x110
0x55 JUMPI
---
0x4c: V18 = 0xdbe992af
0x51: V19 = EQ 0xdbe992af V11
0x52: V20 = 0x110
0x55: JUMPI 0x110 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x0, 0x4b]
Successors: [0x61, 0x65]
---
0x56 JUMPDEST
0x57 CALLER
0x58 PUSH1 0x0
0x5a ORIGIN
0x5b DUP3
0x5c EQ
0x5d PUSH2 0x65
0x60 JUMPI
---
0x56: JUMPDEST 
0x57: V21 = CALLER
0x58: V22 = 0x0
0x5a: V23 = ORIGIN
0x5c: V24 = EQ V21 V23
0x5d: V25 = 0x65
0x60: JUMPI 0x65 V24
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V21, 0x0]
Exit stack: [V11, V21, 0x0]

================================

Block 0x61
[0x61:0x64]
---
Predecessors: [0x56]
Successors: []
---
0x61 PUSH1 0x0
0x63 DUP1
0x64 REVERT
---
0x61: V26 = 0x0
0x64: REVERT 0x0 0x0
---
Entry stack: [V11, V21, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V21, 0x0]

================================

Block 0x65
[0x65:0x6e]
---
Predecessors: [0x56]
Successors: [0x6f, 0xbe]
---
0x65 JUMPDEST
0x66 POP
0x67 DUP1
0x68 EXTCODESIZE
0x69 DUP1
0x6a ISZERO
0x6b PUSH2 0xbe
0x6e JUMPI
---
0x65: JUMPDEST 
0x68: V27 = EXTCODESIZE V21
0x6a: V28 = ISZERO V27
0x6b: V29 = 0xbe
0x6e: JUMPI 0xbe V28
---
Entry stack: [V11, V21, 0x0]
Stack pops: 2
Stack additions: [S1, V27]
Exit stack: [V11, V21, V27]

================================

Block 0x6f
[0x6f:0xbd]
---
Predecessors: [0x65]
Successors: []
---
0x6f PUSH1 0x40
0x71 DUP1
0x72 MLOAD
0x73 PUSH1 0xe5
0x75 PUSH1 0x2
0x77 EXP
0x78 PUSH3 0x461bcd
0x7c MUL
0x7d DUP2
0x7e MSTORE
0x7f PUSH1 0x20
0x81 PUSH1 0x4
0x83 DUP3
0x84 ADD
0x85 MSTORE
0x86 PUSH1 0x11
0x88 PUSH1 0x24
0x8a DUP3
0x8b ADD
0x8c MSTORE
0x8d PUSH32 0x736f7272792068756d616e73206f6e6c79000000000000000000000000000000
0xae PUSH1 0x44
0xb0 DUP3
0xb1 ADD
0xb2 MSTORE
0xb3 SWAP1
0xb4 MLOAD
0xb5 SWAP1
0xb6 DUP2
0xb7 SWAP1
0xb8 SUB
0xb9 PUSH1 0x64
0xbb ADD
0xbc SWAP1
0xbd REVERT
---
0x6f: V30 = 0x40
0x72: V31 = M[0x40]
0x73: V32 = 0xe5
0x75: V33 = 0x2
0x77: V34 = EXP 0x2 0xe5
0x78: V35 = 0x461bcd
0x7c: V36 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x7e: M[V31] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7f: V37 = 0x20
0x81: V38 = 0x4
0x84: V39 = ADD V31 0x4
0x85: M[V39] = 0x20
0x86: V40 = 0x11
0x88: V41 = 0x24
0x8b: V42 = ADD V31 0x24
0x8c: M[V42] = 0x11
0x8d: V43 = 0x736f7272792068756d616e73206f6e6c79000000000000000000000000000000
0xae: V44 = 0x44
0xb1: V45 = ADD V31 0x44
0xb2: M[V45] = 0x736f7272792068756d616e73206f6e6c79000000000000000000000000000000
0xb4: V46 = M[0x40]
0xb8: V47 = SUB V31 V46
0xb9: V48 = 0x64
0xbb: V49 = ADD 0x64 V47
0xbd: REVERT V46 V49
---
Entry stack: [V11, V21, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V21, V27]

================================

Block 0xbe
[0xbe:0xc6]
---
Predecessors: [0x65]
Successors: [0x137]
---
0xbe JUMPDEST
0xbf PUSH2 0xc7
0xc2 CALLVALUE
0xc3 PUSH2 0x137
0xc6 JUMP
---
0xbe: JUMPDEST 
0xbf: V50 = 0xc7
0xc2: V51 = CALLVALUE
0xc3: V52 = 0x137
0xc6: JUMP 0x137
---
Entry stack: [V11, V21, V27]
Stack pops: 0
Stack additions: [0xc7, V51]
Exit stack: [V11, V21, V27, 0xc7, V51]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0x230]
Successors: []
---
0xc7 JUMPDEST
0xc8 POP
0xc9 POP
0xca STOP
---
0xc7: JUMPDEST 
0xca: STOP 
---
Entry stack: [V11, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xcb
[0xcb:0xd2]
---
Predecessors: [0xd]
Successors: [0xd3, 0xd7]
---
0xcb JUMPDEST
0xcc CALLVALUE
0xcd DUP1
0xce ISZERO
0xcf PUSH2 0xd7
0xd2 JUMPI
---
0xcb: JUMPDEST 
0xcc: V53 = CALLVALUE
0xce: V54 = ISZERO V53
0xcf: V55 = 0xd7
0xd2: JUMPI 0xd7 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V53]
Exit stack: [V11, V53]

================================

Block 0xd3
[0xd3:0xd6]
---
Predecessors: [0xcb]
Successors: []
---
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 REVERT
---
0xd3: V56 = 0x0
0xd6: REVERT 0x0 0x0
---
Entry stack: [V11, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V53]

================================

Block 0xd7
[0xd7:0xe2]
---
Predecessors: [0xcb]
Successors: [0x238]
---
0xd7 JUMPDEST
0xd8 POP
0xd9 PUSH2 0xe3
0xdc PUSH1 0x4
0xde CALLDATALOAD
0xdf PUSH2 0x238
0xe2 JUMP
---
0xd7: JUMPDEST 
0xd9: V57 = 0xe3
0xdc: V58 = 0x4
0xde: V59 = CALLDATALOAD 0x4
0xdf: V60 = 0x238
0xe2: JUMP 0x238
---
Entry stack: [V11, V53]
Stack pops: 1
Stack additions: [0xe3, V59]
Exit stack: [V11, 0xe3, V59]

================================

Block 0xe3
[0xe3:0x105]
---
Predecessors: [0x238]
Successors: []
---
0xe3 JUMPDEST
0xe4 PUSH1 0x40
0xe6 DUP1
0xe7 MLOAD
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 SWAP1
0xf1 SWAP4
0xf2 AND
0xf3 DUP4
0xf4 MSTORE
0xf5 PUSH1 0x20
0xf7 DUP4
0xf8 ADD
0xf9 SWAP2
0xfa SWAP1
0xfb SWAP2
0xfc MSTORE
0xfd DUP1
0xfe MLOAD
0xff SWAP2
0x100 DUP3
0x101 SWAP1
0x102 SUB
0x103 ADD
0x104 SWAP1
0x105 RETURN
---
0xe3: JUMPDEST 
0xe4: V61 = 0x40
0xe7: V62 = M[0x40]
0xe8: V63 = 0x1
0xea: V64 = 0xa0
0xec: V65 = 0x2
0xee: V66 = EXP 0x2 0xa0
0xef: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf2: V68 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0xf4: M[V62] = V68
0xf5: V69 = 0x20
0xf8: V70 = ADD V62 0x20
0xfc: M[V70] = V192
0xfe: V71 = M[0x40]
0x102: V72 = SUB V62 V71
0x103: V73 = ADD V72 0x40
0x105: RETURN V71 V73
---
Entry stack: [V11, 0xe3, V198, V192]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xe3]

================================

Block 0x106
[0x106:0x10d]
---
Predecessors: [0x40]
Successors: [0x25d]
---
0x106 JUMPDEST
0x107 PUSH2 0x10e
0x10a PUSH2 0x25d
0x10d JUMP
---
0x106: JUMPDEST 
0x107: V74 = 0x10e
0x10a: V75 = 0x25d
0x10d: JUMP 0x25d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V11, 0x10e]

================================

Block 0x10e
[0x10e:0x10f]
---
Predecessors: [0x266, 0x34d]
Successors: []
---
0x10e JUMPDEST
0x10f STOP
---
0x10e: JUMPDEST 
0x10f: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x110
[0x110:0x117]
---
Predecessors: [0x4b]
Successors: [0x118, 0x11c]
---
0x110 JUMPDEST
0x111 CALLVALUE
0x112 DUP1
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x110: JUMPDEST 
0x111: V76 = CALLVALUE
0x113: V77 = ISZERO V76
0x114: V78 = 0x11c
0x117: JUMPI 0x11c V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V76]
Exit stack: [V11, V76]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x110]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V79 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V11, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V76]

================================

Block 0x11c
[0x11c:0x136]
---
Predecessors: [0x110]
Successors: [0x268]
---
0x11c JUMPDEST
0x11d POP
0x11e PUSH2 0x10e
0x121 PUSH1 0x4
0x123 CALLDATALOAD
0x124 PUSH1 0x1
0x126 PUSH1 0xa0
0x128 PUSH1 0x2
0x12a EXP
0x12b SUB
0x12c PUSH1 0x24
0x12e CALLDATALOAD
0x12f AND
0x130 PUSH1 0x44
0x132 CALLDATALOAD
0x133 PUSH2 0x268
0x136 JUMP
---
0x11c: JUMPDEST 
0x11e: V80 = 0x10e
0x121: V81 = 0x4
0x123: V82 = CALLDATALOAD 0x4
0x124: V83 = 0x1
0x126: V84 = 0xa0
0x128: V85 = 0x2
0x12a: V86 = EXP 0x2 0xa0
0x12b: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12c: V88 = 0x24
0x12e: V89 = CALLDATALOAD 0x24
0x12f: V90 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x130: V91 = 0x44
0x132: V92 = CALLDATALOAD 0x44
0x133: V93 = 0x268
0x136: JUMP 0x268
---
Entry stack: [V11, V76]
Stack pops: 1
Stack additions: [0x10e, V82, V90, V92]
Exit stack: [V11, 0x10e, V82, V90, V92]

================================

Block 0x137
[0x137:0x13c]
---
Predecessors: [0xbe, 0x25d]
Successors: [0x13d]
---
0x137 JUMPDEST
0x138 DUP1
0x139 PUSH1 0x0
0x13b DUP1
0x13c DUP1
---
0x137: JUMPDEST 
0x139: V94 = 0x0
---
Entry stack: [V11, S3, S2, {0xc7, 0x266}, S0]
Stack pops: 1
Stack additions: [S0, S0, 0x0, 0x0, 0x0]
Exit stack: [V11, S3, S2, {0xc7, 0x266}, S0, S0, 0x0, 0x0, 0x0]

================================

Block 0x13d
[0x13d:0x147]
---
Predecessors: [0x137, 0x1ef]
Successors: [0x148, 0x1f7]
---
0x13d JUMPDEST
0x13e PUSH1 0x1
0x140 SLOAD
0x141 DUP2
0x142 LT
0x143 ISZERO
0x144 PUSH2 0x1f7
0x147 JUMPI
---
0x13d: JUMPDEST 
0x13e: V95 = 0x1
0x140: V96 = S[0x1]
0x142: V97 = LT S0 V96
0x143: V98 = ISZERO V97
0x144: V99 = 0x1f7
0x147: JUMPI 0x1f7 V98
---
Entry stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, S1, S0]

================================

Block 0x148
[0x148:0x167]
---
Predecessors: [0x13d]
Successors: [0x168, 0x1ea]
---
0x148 PUSH1 0x0
0x14a DUP2
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x2
0x14f PUSH1 0x20
0x151 MSTORE
0x152 PUSH1 0x40
0x154 SWAP1
0x155 SHA3
0x156 SLOAD
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f AND
0x160 SWAP2
0x161 POP
0x162 DUP2
0x163 ISZERO
0x164 PUSH2 0x1ea
0x167 JUMPI
---
0x148: V100 = 0x0
0x14c: M[0x0] = S0
0x14d: V101 = 0x2
0x14f: V102 = 0x20
0x151: M[0x20] = 0x2
0x152: V103 = 0x40
0x155: V104 = SHA3 0x0 0x40
0x156: V105 = S[V104]
0x157: V106 = 0x1
0x159: V107 = 0xa0
0x15b: V108 = 0x2
0x15d: V109 = EXP 0x2 0xa0
0x15e: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x163: V112 = ISZERO V111
0x164: V113 = 0x1ea
0x167: JUMPI 0x1ea V112
---
Entry stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V111, S0]
Exit stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, V111, S0]

================================

Block 0x168
[0x168:0x18c]
---
Predecessors: [0x148]
Successors: [0x3a4]
---
0x168 PUSH1 0x0
0x16a DUP2
0x16b DUP2
0x16c MSTORE
0x16d PUSH1 0x2
0x16f PUSH1 0x20
0x171 MSTORE
0x172 PUSH1 0x40
0x174 SWAP1
0x175 SHA3
0x176 PUSH1 0x1
0x178 ADD
0x179 SLOAD
0x17a PUSH1 0x64
0x17c SWAP1
0x17d PUSH2 0x18d
0x180 SWAP1
0x181 DUP8
0x182 SWAP1
0x183 PUSH4 0xffffffff
0x188 PUSH2 0x3a4
0x18b AND
0x18c JUMP
---
0x168: V114 = 0x0
0x16c: M[0x0] = S0
0x16d: V115 = 0x2
0x16f: V116 = 0x20
0x171: M[0x20] = 0x2
0x172: V117 = 0x40
0x175: V118 = SHA3 0x0 0x40
0x176: V119 = 0x1
0x178: V120 = ADD 0x1 V118
0x179: V121 = S[V120]
0x17a: V122 = 0x64
0x17d: V123 = 0x18d
0x183: V124 = 0xffffffff
0x188: V125 = 0x3a4
0x18b: V126 = AND 0x3a4 0xffffffff
0x18c: JUMP 0x3a4
---
Entry stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, V111, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x64, 0x18d, S4, V121]
Exit stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, V111, S0, 0x64, 0x18d, S4, V121]

================================

Block 0x18d
[0x18d:0x194]
---
Predecessors: [0x41b]
Successors: [0x195, 0x196]
---
0x18d JUMPDEST
0x18e DUP2
0x18f ISZERO
0x190 ISZERO
0x191 PUSH2 0x196
0x194 JUMPI
---
0x18d: JUMPDEST 
0x18f: V127 = ISZERO 0x64
0x190: V128 = ISZERO 0x0
0x191: V129 = 0x196
0x194: JUMPI 0x196 0x1
---
Entry stack: [V11, S9, S8, {0xc7, 0x266}, S6, S5, S4, S3, S2, 0x64, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S9, S8, {0xc7, 0x266}, S6, S5, S4, S3, S2, 0x64, S0]

================================

Block 0x195
[0x195:0x195]
---
Predecessors: [0x18d]
Successors: []
---
0x195 INVALID
---
0x195: INVALID 
---
Entry stack: [V11, S9, S8, {0xc7, 0x266}, S6, S5, S4, S3, S2, 0x64, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, {0xc7, 0x266}, S6, S5, S4, S3, S2, 0x64, S0]

================================

Block 0x196
[0x196:0x1c8]
---
Predecessors: [0x18d]
Successors: [0x1c9, 0x1d2]
---
0x196 JUMPDEST
0x197 DIV
0x198 SWAP3
0x199 POP
0x19a DUP2
0x19b PUSH1 0x1
0x19d PUSH1 0xa0
0x19f PUSH1 0x2
0x1a1 EXP
0x1a2 SUB
0x1a3 AND
0x1a4 PUSH2 0x8fc
0x1a7 DUP5
0x1a8 SWAP1
0x1a9 DUP2
0x1aa ISZERO
0x1ab MUL
0x1ac SWAP1
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 PUSH1 0x0
0x1b2 PUSH1 0x40
0x1b4 MLOAD
0x1b5 DUP1
0x1b6 DUP4
0x1b7 SUB
0x1b8 DUP2
0x1b9 DUP6
0x1ba DUP9
0x1bb DUP9
0x1bc CALL
0x1bd SWAP4
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 POP
0x1c2 ISZERO
0x1c3 DUP1
0x1c4 ISZERO
0x1c5 PUSH2 0x1d2
0x1c8 JUMPI
---
0x196: JUMPDEST 
0x197: V130 = DIV S0 0x64
0x19b: V131 = 0x1
0x19d: V132 = 0xa0
0x19f: V133 = 0x2
0x1a1: V134 = EXP 0x2 0xa0
0x1a2: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a3: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1a4: V137 = 0x8fc
0x1aa: V138 = ISZERO V130
0x1ab: V139 = MUL V138 0x8fc
0x1ad: V140 = 0x40
0x1af: V141 = M[0x40]
0x1b0: V142 = 0x0
0x1b2: V143 = 0x40
0x1b4: V144 = M[0x40]
0x1b7: V145 = SUB V141 V144
0x1bc: V146 = CALL V139 V136 V130 V144 V145 V144 0x0
0x1c2: V147 = ISZERO V146
0x1c4: V148 = ISZERO V147
0x1c5: V149 = 0x1d2
0x1c8: JUMPI 0x1d2 V148
---
Entry stack: [V11, S9, S8, {0xc7, 0x266}, S6, S5, S4, S3, S2, 0x64, S0]
Stack pops: 5
Stack additions: [V130, S3, S2, V147]
Exit stack: [V11, S9, S8, {0xc7, 0x266}, S6, S5, V130, S3, S2, V147]

================================

Block 0x1c9
[0x1c9:0x1d1]
---
Predecessors: [0x196]
Successors: []
---
0x1c9 RETURNDATASIZE
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd RETURNDATACOPY
0x1ce RETURNDATASIZE
0x1cf PUSH1 0x0
0x1d1 REVERT
---
0x1c9: V150 = RETURNDATASIZE
0x1ca: V151 = 0x0
0x1cd: RETURNDATACOPY 0x0 0x0 V150
0x1ce: V152 = RETURNDATASIZE
0x1cf: V153 = 0x0
0x1d1: REVERT 0x0 V152
---
Entry stack: [V11, S8, S7, {0xc7, 0x266}, S5, S4, V130, S2, S1, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, {0xc7, 0x266}, S5, S4, V130, S2, S1, V147]

================================

Block 0x1d2
[0x1d2:0x1e2]
---
Predecessors: [0x196]
Successors: [0x421]
---
0x1d2 JUMPDEST
0x1d3 POP
0x1d4 PUSH2 0x1e3
0x1d7 DUP5
0x1d8 DUP5
0x1d9 PUSH4 0xffffffff
0x1de PUSH2 0x421
0x1e1 AND
0x1e2 JUMP
---
0x1d2: JUMPDEST 
0x1d4: V154 = 0x1e3
0x1d9: V155 = 0xffffffff
0x1de: V156 = 0x421
0x1e1: V157 = AND 0x421 0xffffffff
0x1e2: JUMP 0x421
---
Entry stack: [V11, S8, S7, {0xc7, 0x266}, S5, S4, V130, S2, S1, V147]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x1e3, S4, S3]
Exit stack: [V11, S8, S7, {0xc7, 0x266}, S5, S4, V130, S2, S1, 0x1e3, S4, V130]

================================

Block 0x1e3
[0x1e3:0x1e9]
---
Predecessors: [0x47b]
Successors: [0x1ef]
---
0x1e3 JUMPDEST
0x1e4 SWAP4
0x1e5 POP
0x1e6 PUSH2 0x1ef
0x1e9 JUMP
---
0x1e3: JUMPDEST 
0x1e6: V158 = 0x1ef
0x1e9: JUMP 0x1ef
---
Entry stack: [V11, S8, S7, {0xc7, 0x266}, S5, S4, S3, S2, S1, V361]
Stack pops: 5
Stack additions: [S0, S3, S2, S1]
Exit stack: [V11, S8, S7, {0xc7, 0x266}, S5, V361, S3, S2, S1]

================================

Block 0x1ea
[0x1ea:0x1ee]
---
Predecessors: [0x148]
Successors: [0x1f7]
---
0x1ea JUMPDEST
0x1eb PUSH2 0x1f7
0x1ee JUMP
---
0x1ea: JUMPDEST 
0x1eb: V159 = 0x1f7
0x1ee: JUMP 0x1f7
---
Entry stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, V111, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, V111, S0]

================================

Block 0x1ef
[0x1ef:0x1f6]
---
Predecessors: [0x1e3]
Successors: [0x13d]
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x1
0x1f2 ADD
0x1f3 PUSH2 0x13d
0x1f6 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V160 = 0x1
0x1f2: V161 = ADD 0x1 S0
0x1f3: V162 = 0x13d
0x1f6: JUMP 0x13d
---
Entry stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V161]
Exit stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, S1, V161]

================================

Block 0x1f7
[0x1f7:0x226]
---
Predecessors: [0x13d, 0x1ea]
Successors: [0x227, 0x230]
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb SLOAD
0x1fc PUSH1 0x40
0x1fe MLOAD
0x1ff PUSH1 0x1
0x201 PUSH1 0xa0
0x203 PUSH1 0x2
0x205 EXP
0x206 SUB
0x207 SWAP1
0x208 SWAP2
0x209 AND
0x20a SWAP2
0x20b DUP7
0x20c ISZERO
0x20d PUSH2 0x8fc
0x210 MUL
0x211 SWAP2
0x212 DUP8
0x213 SWAP2
0x214 DUP2
0x215 DUP2
0x216 DUP2
0x217 DUP6
0x218 DUP9
0x219 DUP9
0x21a CALL
0x21b SWAP4
0x21c POP
0x21d POP
0x21e POP
0x21f POP
0x220 ISZERO
0x221 DUP1
0x222 ISZERO
0x223 PUSH2 0x230
0x226 JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V163 = 0x0
0x1fb: V164 = S[0x0]
0x1fc: V165 = 0x40
0x1fe: V166 = M[0x40]
0x1ff: V167 = 0x1
0x201: V168 = 0xa0
0x203: V169 = 0x2
0x205: V170 = EXP 0x2 0xa0
0x206: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x209: V172 = AND V164 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V173 = ISZERO S3
0x20d: V174 = 0x8fc
0x210: V175 = MUL 0x8fc V173
0x21a: V176 = CALL V175 V172 S3 V166 0x0 V166 0x0
0x220: V177 = ISZERO V176
0x222: V178 = ISZERO V177
0x223: V179 = 0x230
0x226: JUMPI 0x230 V178
---
Entry stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V177]
Exit stack: [V11, S7, S6, {0xc7, 0x266}, S4, S3, S2, S1, S0, V177]

================================

Block 0x227
[0x227:0x22f]
---
Predecessors: [0x1f7]
Successors: []
---
0x227 RETURNDATASIZE
0x228 PUSH1 0x0
0x22a DUP1
0x22b RETURNDATACOPY
0x22c RETURNDATASIZE
0x22d PUSH1 0x0
0x22f REVERT
---
0x227: V180 = RETURNDATASIZE
0x228: V181 = 0x0
0x22b: RETURNDATACOPY 0x0 0x0 V180
0x22c: V182 = RETURNDATASIZE
0x22d: V183 = 0x0
0x22f: REVERT 0x0 V182
---
Entry stack: [V11, S8, S7, {0xc7, 0x266}, S5, S4, S3, S2, S1, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, {0xc7, 0x266}, S5, S4, S3, S2, S1, V177]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x1f7]
Successors: [0xc7, 0x266]
---
0x230 JUMPDEST
0x231 POP
0x232 POP
0x233 POP
0x234 POP
0x235 POP
0x236 POP
0x237 JUMP
---
0x230: JUMPDEST 
0x237: JUMP {0xc7, 0x266}
---
Entry stack: [V11, S8, S7, {0xc7, 0x266}, S5, S4, S3, S2, S1, V177]
Stack pops: 7
Stack additions: []
Exit stack: [V11, S8, S7]

================================

Block 0x238
[0x238:0x25c]
---
Predecessors: [0xd7]
Successors: [0xe3]
---
0x238 JUMPDEST
0x239 PUSH1 0x2
0x23b PUSH1 0x20
0x23d MSTORE
0x23e PUSH1 0x0
0x240 SWAP1
0x241 DUP2
0x242 MSTORE
0x243 PUSH1 0x40
0x245 SWAP1
0x246 SHA3
0x247 DUP1
0x248 SLOAD
0x249 PUSH1 0x1
0x24b SWAP1
0x24c SWAP2
0x24d ADD
0x24e SLOAD
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 SWAP1
0x258 SWAP2
0x259 AND
0x25a SWAP1
0x25b DUP3
0x25c JUMP
---
0x238: JUMPDEST 
0x239: V184 = 0x2
0x23b: V185 = 0x20
0x23d: M[0x20] = 0x2
0x23e: V186 = 0x0
0x242: M[0x0] = V59
0x243: V187 = 0x40
0x246: V188 = SHA3 0x0 0x40
0x248: V189 = S[V188]
0x249: V190 = 0x1
0x24d: V191 = ADD V188 0x1
0x24e: V192 = S[V191]
0x24f: V193 = 0x1
0x251: V194 = 0xa0
0x253: V195 = 0x2
0x255: V196 = EXP 0x2 0xa0
0x256: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x259: V198 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x25c: JUMP 0xe3
---
Entry stack: [V11, 0xe3, V59]
Stack pops: 2
Stack additions: [S1, V198, V192]
Exit stack: [V11, 0xe3, V198, V192]

================================

Block 0x25d
[0x25d:0x265]
---
Predecessors: [0x106]
Successors: [0x137]
---
0x25d JUMPDEST
0x25e PUSH2 0x266
0x261 CALLVALUE
0x262 PUSH2 0x137
0x265 JUMP
---
0x25d: JUMPDEST 
0x25e: V199 = 0x266
0x261: V200 = CALLVALUE
0x262: V201 = 0x137
0x265: JUMP 0x137
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: [0x266, V200]
Exit stack: [V11, 0x10e, 0x266, V200]

================================

Block 0x266
[0x266:0x267]
---
Predecessors: [0x230]
Successors: [0x10e]
---
0x266 JUMPDEST
0x267 JUMP
---
0x266: JUMPDEST 
0x267: JUMP S0
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x268
[0x268:0x27d]
---
Predecessors: [0x11c]
Successors: [0x27e, 0x282]
---
0x268 JUMPDEST
0x269 PUSH1 0x0
0x26b DUP1
0x26c SLOAD
0x26d DUP2
0x26e SWAP1
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 AND
0x278 CALLER
0x279 EQ
0x27a PUSH2 0x282
0x27d JUMPI
---
0x268: JUMPDEST 
0x269: V202 = 0x0
0x26c: V203 = S[0x0]
0x26f: V204 = 0x1
0x271: V205 = 0xa0
0x273: V206 = 0x2
0x275: V207 = EXP 0x2 0xa0
0x276: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x278: V210 = CALLER
0x279: V211 = EQ V210 V209
0x27a: V212 = 0x282
0x27d: JUMPI 0x282 V211
---
Entry stack: [V11, 0x10e, V82, V90, V92]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]

================================

Block 0x27e
[0x27e:0x281]
---
Predecessors: [0x268]
Successors: []
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
---
0x27e: V213 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]

================================

Block 0x282
[0x282:0x28b]
---
Predecessors: [0x268]
Successors: [0x28c, 0x290]
---
0x282 JUMPDEST
0x283 PUSH1 0x1
0x285 SLOAD
0x286 DUP6
0x287 LT
0x288 PUSH2 0x290
0x28b JUMPI
---
0x282: JUMPDEST 
0x283: V214 = 0x1
0x285: V215 = S[0x1]
0x287: V216 = LT V82 V215
0x288: V217 = 0x290
0x28b: JUMPI 0x290 V216
---
Entry stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x282]
Successors: []
---
0x28c PUSH1 0x0
0x28e DUP1
0x28f REVERT
---
0x28c: V218 = 0x0
0x28f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]

================================

Block 0x290
[0x290:0x2a0]
---
Predecessors: [0x282]
Successors: [0x2a1, 0x2a5]
---
0x290 JUMPDEST
0x291 PUSH1 0x1
0x293 PUSH1 0xa0
0x295 PUSH1 0x2
0x297 EXP
0x298 SUB
0x299 DUP5
0x29a AND
0x29b ISZERO
0x29c ISZERO
0x29d PUSH2 0x2a5
0x2a0 JUMPI
---
0x290: JUMPDEST 
0x291: V219 = 0x1
0x293: V220 = 0xa0
0x295: V221 = 0x2
0x297: V222 = EXP 0x2 0xa0
0x298: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29a: V224 = AND V90 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V225 = ISZERO V224
0x29c: V226 = ISZERO V225
0x29d: V227 = 0x2a5
0x2a0: JUMPI 0x2a5 V226
---
Entry stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]

================================

Block 0x2a1
[0x2a1:0x2a4]
---
Predecessors: [0x290]
Successors: []
---
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
---
0x2a1: V228 = 0x0
0x2a4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]

================================

Block 0x2a5
[0x2a5:0x2ae]
---
Predecessors: [0x290]
Successors: [0x2af, 0x2b3]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x64
0x2a8 DUP4
0x2a9 GT
0x2aa ISZERO
0x2ab PUSH2 0x2b3
0x2ae JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V229 = 0x64
0x2a9: V230 = GT V92 0x64
0x2aa: V231 = ISZERO V230
0x2ab: V232 = 0x2b3
0x2ae: JUMPI 0x2b3 V231
---
Entry stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]

================================

Block 0x2af
[0x2af:0x2b2]
---
Predecessors: [0x2a5]
Successors: []
---
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 REVERT
---
0x2af: V233 = 0x0
0x2b2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]

================================

Block 0x2b3
[0x2b3:0x2b9]
---
Predecessors: [0x2a5]
Successors: [0x2ba]
---
0x2b3 JUMPDEST
0x2b4 POP
0x2b5 PUSH1 0x0
0x2b7 SWAP1
0x2b8 POP
0x2b9 DUP1
---
0x2b3: JUMPDEST 
0x2b5: V234 = 0x0
---
Entry stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x10e, V82, V90, V92, 0x0, 0x0]

================================

Block 0x2ba
[0x2ba:0x2c4]
---
Predecessors: [0x2b3, 0x345]
Successors: [0x2c5, 0x34d]
---
0x2ba JUMPDEST
0x2bb PUSH1 0x1
0x2bd SLOAD
0x2be DUP2
0x2bf LT
0x2c0 ISZERO
0x2c1 PUSH2 0x34d
0x2c4 JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V235 = 0x1
0x2bd: V236 = S[0x1]
0x2bf: V237 = LT S0 V236
0x2c0: V238 = ISZERO V237
0x2c1: V239 = 0x34d
0x2c4: JUMPI 0x34d V238
---
Entry stack: [V11, 0x10e, V82, V90, V92, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x10e, V82, V90, V92, S1, S0]

================================

Block 0x2c5
[0x2c5:0x2cb]
---
Predecessors: [0x2ba]
Successors: [0x2cc, 0x2e7]
---
0x2c5 DUP1
0x2c6 DUP6
0x2c7 EQ
0x2c8 PUSH2 0x2e7
0x2cb JUMPI
---
0x2c7: V240 = EQ V82 S0
0x2c8: V241 = 0x2e7
0x2cb: JUMPI 0x2e7 V240
---
Entry stack: [V11, 0x10e, V82, V90, V92, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x10e, V82, V90, V92, S1, S0]

================================

Block 0x2cc
[0x2cc:0x2e6]
---
Predecessors: [0x2c5]
Successors: [0x2ec]
---
0x2cc PUSH1 0x0
0x2ce DUP2
0x2cf DUP2
0x2d0 MSTORE
0x2d1 PUSH1 0x2
0x2d3 PUSH1 0x20
0x2d5 MSTORE
0x2d6 PUSH1 0x40
0x2d8 SWAP1
0x2d9 SHA3
0x2da PUSH1 0x1
0x2dc ADD
0x2dd SLOAD
0x2de SWAP2
0x2df SWAP1
0x2e0 SWAP2
0x2e1 ADD
0x2e2 SWAP1
0x2e3 PUSH2 0x2ec
0x2e6 JUMP
---
0x2cc: V242 = 0x0
0x2d0: M[0x0] = S0
0x2d1: V243 = 0x2
0x2d3: V244 = 0x20
0x2d5: M[0x20] = 0x2
0x2d6: V245 = 0x40
0x2d9: V246 = SHA3 0x0 0x40
0x2da: V247 = 0x1
0x2dc: V248 = ADD 0x1 V246
0x2dd: V249 = S[V248]
0x2e1: V250 = ADD V249 S1
0x2e3: V251 = 0x2ec
0x2e6: JUMP 0x2ec
---
Entry stack: [V11, 0x10e, V82, V90, V92, S1, S0]
Stack pops: 2
Stack additions: [V250, S0]
Exit stack: [V11, 0x10e, V82, V90, V92, V250, S0]

================================

Block 0x2e7
[0x2e7:0x2eb]
---
Predecessors: [0x2c5]
Successors: [0x2ec]
---
0x2e7 JUMPDEST
0x2e8 SWAP1
0x2e9 DUP3
0x2ea ADD
0x2eb SWAP1
---
0x2e7: JUMPDEST 
0x2ea: V252 = ADD V92 S1
---
Entry stack: [V11, 0x10e, V82, V90, V92, S1, S0]
Stack pops: 3
Stack additions: [S2, V252, S0]
Exit stack: [V11, 0x10e, V82, V90, V92, V252, S0]

================================

Block 0x2ec
[0x2ec:0x2f5]
---
Predecessors: [0x2cc, 0x2e7]
Successors: [0x2f6, 0x345]
---
0x2ec JUMPDEST
0x2ed PUSH1 0x64
0x2ef DUP3
0x2f0 GT
0x2f1 ISZERO
0x2f2 PUSH2 0x345
0x2f5 JUMPI
---
0x2ec: JUMPDEST 
0x2ed: V253 = 0x64
0x2f0: V254 = GT S1 0x64
0x2f1: V255 = ISZERO V254
0x2f2: V256 = 0x345
0x2f5: JUMPI 0x345 V255
---
Entry stack: [V11, 0x10e, V82, V90, V92, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x10e, V82, V90, V92, S1, S0]

================================

Block 0x2f6
[0x2f6:0x344]
---
Predecessors: [0x2ec]
Successors: []
---
0x2f6 PUSH1 0x40
0x2f8 DUP1
0x2f9 MLOAD
0x2fa PUSH1 0xe5
0x2fc PUSH1 0x2
0x2fe EXP
0x2ff PUSH3 0x461bcd
0x303 MUL
0x304 DUP2
0x305 MSTORE
0x306 PUSH1 0x20
0x308 PUSH1 0x4
0x30a DUP3
0x30b ADD
0x30c MSTORE
0x30d PUSH1 0x1e
0x30f PUSH1 0x24
0x311 DUP3
0x312 ADD
0x313 MSTORE
0x314 PUSH32 0x746f74616c5368617265206973206c6172676572207468616e203130302e0000
0x335 PUSH1 0x44
0x337 DUP3
0x338 ADD
0x339 MSTORE
0x33a SWAP1
0x33b MLOAD
0x33c SWAP1
0x33d DUP2
0x33e SWAP1
0x33f SUB
0x340 PUSH1 0x64
0x342 ADD
0x343 SWAP1
0x344 REVERT
---
0x2f6: V257 = 0x40
0x2f9: V258 = M[0x40]
0x2fa: V259 = 0xe5
0x2fc: V260 = 0x2
0x2fe: V261 = EXP 0x2 0xe5
0x2ff: V262 = 0x461bcd
0x303: V263 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x305: M[V258] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x306: V264 = 0x20
0x308: V265 = 0x4
0x30b: V266 = ADD V258 0x4
0x30c: M[V266] = 0x20
0x30d: V267 = 0x1e
0x30f: V268 = 0x24
0x312: V269 = ADD V258 0x24
0x313: M[V269] = 0x1e
0x314: V270 = 0x746f74616c5368617265206973206c6172676572207468616e203130302e0000
0x335: V271 = 0x44
0x338: V272 = ADD V258 0x44
0x339: M[V272] = 0x746f74616c5368617265206973206c6172676572207468616e203130302e0000
0x33b: V273 = M[0x40]
0x33f: V274 = SUB V258 V273
0x340: V275 = 0x64
0x342: V276 = ADD 0x64 V274
0x344: REVERT V273 V276
---
Entry stack: [V11, 0x10e, V82, V90, V92, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e, V82, V90, V92, S1, S0]

================================

Block 0x345
[0x345:0x34c]
---
Predecessors: [0x2ec]
Successors: [0x2ba]
---
0x345 JUMPDEST
0x346 PUSH1 0x1
0x348 ADD
0x349 PUSH2 0x2ba
0x34c JUMP
---
0x345: JUMPDEST 
0x346: V277 = 0x1
0x348: V278 = ADD 0x1 S0
0x349: V279 = 0x2ba
0x34c: JUMP 0x2ba
---
Entry stack: [V11, 0x10e, V82, V90, V92, S1, S0]
Stack pops: 1
Stack additions: [V278]
Exit stack: [V11, 0x10e, V82, V90, V92, S1, V278]

================================

Block 0x34d
[0x34d:0x3a3]
---
Predecessors: [0x2ba]
Successors: [0x10e]
---
0x34d JUMPDEST
0x34e POP
0x34f POP
0x350 PUSH1 0x40
0x352 DUP1
0x353 MLOAD
0x354 DUP1
0x355 DUP3
0x356 ADD
0x357 DUP3
0x358 MSTORE
0x359 PUSH1 0x1
0x35b PUSH1 0xa0
0x35d PUSH1 0x2
0x35f EXP
0x360 SUB
0x361 SWAP4
0x362 DUP5
0x363 AND
0x364 DUP2
0x365 MSTORE
0x366 PUSH1 0x20
0x368 DUP1
0x369 DUP3
0x36a ADD
0x36b SWAP4
0x36c DUP5
0x36d MSTORE
0x36e PUSH1 0x0
0x370 SWAP6
0x371 DUP7
0x372 MSTORE
0x373 PUSH1 0x2
0x375 SWAP1
0x376 MSTORE
0x377 SWAP4
0x378 SHA3
0x379 SWAP3
0x37a MLOAD
0x37b DUP4
0x37c SLOAD
0x37d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x392 NOT
0x393 AND
0x394 SWAP3
0x395 AND
0x396 SWAP2
0x397 SWAP1
0x398 SWAP2
0x399 OR
0x39a DUP3
0x39b SSTORE
0x39c MLOAD
0x39d PUSH1 0x1
0x39f SWAP1
0x3a0 SWAP2
0x3a1 ADD
0x3a2 SSTORE
0x3a3 JUMP
---
0x34d: JUMPDEST 
0x350: V280 = 0x40
0x353: V281 = M[0x40]
0x356: V282 = ADD 0x40 V281
0x358: M[0x40] = V282
0x359: V283 = 0x1
0x35b: V284 = 0xa0
0x35d: V285 = 0x2
0x35f: V286 = EXP 0x2 0xa0
0x360: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x363: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x365: M[V281] = V288
0x366: V289 = 0x20
0x36a: V290 = ADD V281 0x20
0x36d: M[V290] = V92
0x36e: V291 = 0x0
0x372: M[0x0] = V82
0x373: V292 = 0x2
0x376: M[0x20] = 0x2
0x378: V293 = SHA3 0x0 0x40
0x37a: V294 = M[V281]
0x37c: V295 = S[V293]
0x37d: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x392: V297 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x393: V298 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V295
0x395: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x399: V300 = OR V299 V298
0x39b: S[V293] = V300
0x39c: V301 = M[V290]
0x39d: V302 = 0x1
0x3a1: V303 = ADD V293 0x1
0x3a2: S[V303] = V301
0x3a3: JUMP 0x10e
---
Entry stack: [V11, 0x10e, V82, V90, V92, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a4
[0x3a4:0x3ad]
---
Predecessors: [0x168]
Successors: [0x3ae, 0x3b5]
---
0x3a4 JUMPDEST
0x3a5 PUSH1 0x0
0x3a7 DUP3
0x3a8 ISZERO
0x3a9 ISZERO
0x3aa PUSH2 0x3b5
0x3ad JUMPI
---
0x3a4: JUMPDEST 
0x3a5: V304 = 0x0
0x3a8: V305 = ISZERO S1
0x3a9: V306 = ISZERO V305
0x3aa: V307 = 0x3b5
0x3ad: JUMPI 0x3b5 V306
---
Entry stack: [V11, S11, S10, {0xc7, 0x266}, S8, S7, S6, V111, S4, 0x64, 0x18d, S1, V121]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S11, S10, {0xc7, 0x266}, S8, S7, S6, V111, S4, 0x64, 0x18d, S1, V121, 0x0]

================================

Block 0x3ae
[0x3ae:0x3b4]
---
Predecessors: [0x3a4]
Successors: [0x41b]
---
0x3ae POP
0x3af PUSH1 0x0
0x3b1 PUSH2 0x41b
0x3b4 JUMP
---
0x3af: V308 = 0x0
0x3b1: V309 = 0x41b
0x3b4: JUMP 0x41b
---
Entry stack: [V11, S12, S11, {0xc7, 0x266}, S9, S8, S7, V111, S5, 0x64, 0x18d, S2, V121, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, S12, S11, {0xc7, 0x266}, S9, S8, S7, V111, S5, 0x64, 0x18d, S2, V121, 0x0]

================================

Block 0x3b5
[0x3b5:0x3c3]
---
Predecessors: [0x3a4]
Successors: [0x3c4, 0x3c5]
---
0x3b5 JUMPDEST
0x3b6 POP
0x3b7 DUP2
0x3b8 DUP2
0x3b9 MUL
0x3ba DUP2
0x3bb DUP4
0x3bc DUP3
0x3bd DUP2
0x3be ISZERO
0x3bf ISZERO
0x3c0 PUSH2 0x3c5
0x3c3 JUMPI
---
0x3b5: JUMPDEST 
0x3b9: V310 = MUL V121 S2
0x3be: V311 = ISZERO S2
0x3bf: V312 = ISZERO V311
0x3c0: V313 = 0x3c5
0x3c3: JUMPI 0x3c5 V312
---
Entry stack: [V11, S12, S11, {0xc7, 0x266}, S9, S8, S7, V111, S5, 0x64, 0x18d, S2, V121, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V310, S1, S2, V310]
Exit stack: [V11, S12, S11, {0xc7, 0x266}, S9, S8, S7, V111, S5, 0x64, 0x18d, S2, V121, V310, V121, S2, V310]

================================

Block 0x3c4
[0x3c4:0x3c4]
---
Predecessors: [0x3b5]
Successors: []
---
0x3c4 INVALID
---
0x3c4: INVALID 
---
Entry stack: [V11, S15, S14, {0xc7, 0x266}, S12, S11, S10, V111, S8, 0x64, 0x18d, S5, V121, V310, V121, S1, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S15, S14, {0xc7, 0x266}, S12, S11, S10, V111, S8, 0x64, 0x18d, S5, V121, V310, V121, S1, V310]

================================

Block 0x3c5
[0x3c5:0x3cb]
---
Predecessors: [0x3b5]
Successors: [0x3cc, 0x41b]
---
0x3c5 JUMPDEST
0x3c6 DIV
0x3c7 EQ
0x3c8 PUSH2 0x41b
0x3cb JUMPI
---
0x3c5: JUMPDEST 
0x3c6: V314 = DIV V310 S1
0x3c7: V315 = EQ V314 V121
0x3c8: V316 = 0x41b
0x3cb: JUMPI 0x41b V315
---
Entry stack: [V11, S15, S14, {0xc7, 0x266}, S12, S11, S10, V111, S8, 0x64, 0x18d, S5, V121, V310, V121, S1, V310]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S15, S14, {0xc7, 0x266}, S12, S11, S10, V111, S8, 0x64, 0x18d, S5, V121, V310]

================================

Block 0x3cc
[0x3cc:0x41a]
---
Predecessors: [0x3c5]
Successors: []
---
0x3cc PUSH1 0x40
0x3ce DUP1
0x3cf MLOAD
0x3d0 PUSH1 0xe5
0x3d2 PUSH1 0x2
0x3d4 EXP
0x3d5 PUSH3 0x461bcd
0x3d9 MUL
0x3da DUP2
0x3db MSTORE
0x3dc PUSH1 0x20
0x3de PUSH1 0x4
0x3e0 DUP3
0x3e1 ADD
0x3e2 MSTORE
0x3e3 PUSH1 0x13
0x3e5 PUSH1 0x24
0x3e7 DUP3
0x3e8 ADD
0x3e9 MSTORE
0x3ea PUSH32 0x536166654d617468206d756c206661696c656400000000000000000000000000
0x40b PUSH1 0x44
0x40d DUP3
0x40e ADD
0x40f MSTORE
0x410 SWAP1
0x411 MLOAD
0x412 SWAP1
0x413 DUP2
0x414 SWAP1
0x415 SUB
0x416 PUSH1 0x64
0x418 ADD
0x419 SWAP1
0x41a REVERT
---
0x3cc: V317 = 0x40
0x3cf: V318 = M[0x40]
0x3d0: V319 = 0xe5
0x3d2: V320 = 0x2
0x3d4: V321 = EXP 0x2 0xe5
0x3d5: V322 = 0x461bcd
0x3d9: V323 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x3db: M[V318] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3dc: V324 = 0x20
0x3de: V325 = 0x4
0x3e1: V326 = ADD V318 0x4
0x3e2: M[V326] = 0x20
0x3e3: V327 = 0x13
0x3e5: V328 = 0x24
0x3e8: V329 = ADD V318 0x24
0x3e9: M[V329] = 0x13
0x3ea: V330 = 0x536166654d617468206d756c206661696c656400000000000000000000000000
0x40b: V331 = 0x44
0x40e: V332 = ADD V318 0x44
0x40f: M[V332] = 0x536166654d617468206d756c206661696c656400000000000000000000000000
0x411: V333 = M[0x40]
0x415: V334 = SUB V318 V333
0x416: V335 = 0x64
0x418: V336 = ADD 0x64 V334
0x41a: REVERT V333 V336
---
Entry stack: [V11, S12, S11, {0xc7, 0x266}, S9, S8, S7, V111, S5, 0x64, 0x18d, S2, V121, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S12, S11, {0xc7, 0x266}, S9, S8, S7, V111, S5, 0x64, 0x18d, S2, V121, V310]

================================

Block 0x41b
[0x41b:0x420]
---
Predecessors: [0x3ae, 0x3c5]
Successors: [0x18d]
---
0x41b JUMPDEST
0x41c SWAP3
0x41d SWAP2
0x41e POP
0x41f POP
0x420 JUMP
---
0x41b: JUMPDEST 
0x420: JUMP 0x18d
---
Entry stack: [V11, S12, S11, {0xc7, 0x266}, S9, S8, S7, V111, S5, 0x64, 0x18d, S2, V121, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, S12, S11, {0xc7, 0x266}, S9, S8, S7, V111, S5, 0x64, S0]

================================

Block 0x421
[0x421:0x42b]
---
Predecessors: [0x1d2]
Successors: [0x42c, 0x47b]
---
0x421 JUMPDEST
0x422 PUSH1 0x0
0x424 DUP3
0x425 DUP3
0x426 GT
0x427 ISZERO
0x428 PUSH2 0x47b
0x42b JUMPI
---
0x421: JUMPDEST 
0x422: V337 = 0x0
0x426: V338 = GT S0 S1
0x427: V339 = ISZERO V338
0x428: V340 = 0x47b
0x42b: JUMPI 0x47b V339
---
Entry stack: [V11, S10, S9, {0xc7, 0x266}, S7, S6, S5, S4, S3, 0x1e3, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S10, S9, {0xc7, 0x266}, S7, S6, S5, S4, S3, 0x1e3, S1, S0, 0x0]

================================

Block 0x42c
[0x42c:0x47a]
---
Predecessors: [0x421]
Successors: []
---
0x42c PUSH1 0x40
0x42e DUP1
0x42f MLOAD
0x430 PUSH1 0xe5
0x432 PUSH1 0x2
0x434 EXP
0x435 PUSH3 0x461bcd
0x439 MUL
0x43a DUP2
0x43b MSTORE
0x43c PUSH1 0x20
0x43e PUSH1 0x4
0x440 DUP3
0x441 ADD
0x442 MSTORE
0x443 PUSH1 0x13
0x445 PUSH1 0x24
0x447 DUP3
0x448 ADD
0x449 MSTORE
0x44a PUSH32 0x536166654d61746820737562206661696c656400000000000000000000000000
0x46b PUSH1 0x44
0x46d DUP3
0x46e ADD
0x46f MSTORE
0x470 SWAP1
0x471 MLOAD
0x472 SWAP1
0x473 DUP2
0x474 SWAP1
0x475 SUB
0x476 PUSH1 0x64
0x478 ADD
0x479 SWAP1
0x47a REVERT
---
0x42c: V341 = 0x40
0x42f: V342 = M[0x40]
0x430: V343 = 0xe5
0x432: V344 = 0x2
0x434: V345 = EXP 0x2 0xe5
0x435: V346 = 0x461bcd
0x439: V347 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x43b: M[V342] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x43c: V348 = 0x20
0x43e: V349 = 0x4
0x441: V350 = ADD V342 0x4
0x442: M[V350] = 0x20
0x443: V351 = 0x13
0x445: V352 = 0x24
0x448: V353 = ADD V342 0x24
0x449: M[V353] = 0x13
0x44a: V354 = 0x536166654d61746820737562206661696c656400000000000000000000000000
0x46b: V355 = 0x44
0x46e: V356 = ADD V342 0x44
0x46f: M[V356] = 0x536166654d61746820737562206661696c656400000000000000000000000000
0x471: V357 = M[0x40]
0x475: V358 = SUB V342 V357
0x476: V359 = 0x64
0x478: V360 = ADD 0x64 V358
0x47a: REVERT V357 V360
---
Entry stack: [V11, S11, S10, {0xc7, 0x266}, S8, S7, S6, S5, S4, 0x1e3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S11, S10, {0xc7, 0x266}, S8, S7, S6, S5, S4, 0x1e3, S2, S1, 0x0]

================================

Block 0x47b
[0x47b:0x480]
---
Predecessors: [0x421]
Successors: [0x1e3]
---
0x47b JUMPDEST
0x47c POP
0x47d SWAP1
0x47e SUB
0x47f SWAP1
0x480 JUMP
---
0x47b: JUMPDEST 
0x47e: V361 = SUB S2 S1
0x480: JUMP 0x1e3
---
Entry stack: [V11, S11, S10, {0xc7, 0x266}, S8, S7, S6, S5, S4, 0x1e3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V361]
Exit stack: [V11, S11, S10, {0xc7, 0x266}, S8, S7, S6, S5, S4, V361]

================================

Block 0x481
[0x481:0x4b6]
---
Predecessors: []
Successors: []
---
0x481 STOP
0x482 LOG1
0x483 PUSH6 0x627a7a723058
0x48a SHA3
0x48b MISSING 0x5d
0x48c MISSING 0xb7
0x48d SAR
0x48e MISSING 0x5e
0x48f MISSING 0xd6
0x490 PUSH1 0xbf
0x492 DIV
0x493 MISSING 0xd3
0x494 CODESIZE
0x495 MISSING 0xaa
0x496 MISSING 0xc9
0x497 DUP11
0x498 CALLCODE
0x499 DUP10
0x49a MISSING 0xad
0x49b DUP5
0x49c SWAP10
0x49d PUSH25 0x7e5e89148704fc6d0bd9f3d6930029
---
0x481: STOP 
0x482: LOG S0 S1 S2
0x483: V362 = 0x627a7a723058
0x48a: V363 = SHA3 0x627a7a723058 S3
0x48b: MISSING 0x5d
0x48c: MISSING 0xb7
0x48d: V364 = SAR S0 S1
0x48e: MISSING 0x5e
0x48f: MISSING 0xd6
0x490: V365 = 0xbf
0x492: V366 = DIV 0xbf S0
0x493: MISSING 0xd3
0x494: V367 = CODESIZE
0x495: MISSING 0xaa
0x496: MISSING 0xc9
0x498: V368 = CALLCODE S10 S0 S1 S2 S3 S4 S5
0x49a: MISSING 0xad
0x49d: V369 = 0x7e5e89148704fc6d0bd9f3d6930029
---
Entry stack: []
Stack pops: 0
Stack additions: [V363, V364, V366, V367, S14, V368, S6, S7, S8, S9, S10, S11, S12, S13, S14, 0x7e5e89148704fc6d0bd9f3d6930029, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S4]
Exit stack: []

================================

Function 0:
Public function signature: 0x7fba9334
Entry block: 0xcb
Exit block: 0xe3
Body: 0xcb, 0xd3, 0xd7, 0xe3, 0x238

Function 1:
Public function signature: 0xd0e30db0
Entry block: 0x106
Exit block: 0x10e
Body: 0x106, 0x10e, 0x25d, 0x266

Function 2:
Public function signature: 0xdbe992af
Entry block: 0x110
Exit block: 0x2f6
Body: 0x10e, 0x110, 0x118, 0x11c, 0x268, 0x27e, 0x282, 0x28c, 0x290, 0x2a1, 0x2a5, 0x2af, 0x2b3, 0x2ba, 0x2c5, 0x2cc, 0x2e7, 0x2ec, 0x2f6, 0x345, 0x34d

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x6f
Body: 0x56, 0x61, 0x65, 0x6f, 0xbe, 0xc7

Function 4:
Private function
Entry block: 0x137
Exit block: 0x230
Body: 0x137, 0x13d, 0x148, 0x168, 0x18d, 0x196, 0x1d2, 0x1e3, 0x1ea, 0x1ef, 0x1f7, 0x230, 0x3a4, 0x3ae, 0x3b5, 0x3c5, 0x41b, 0x421, 0x47b

