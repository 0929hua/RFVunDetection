Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x7a03cf3
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x7a03cf3
0x3c: V13 = EQ 0x7a03cf3 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x90]
---
0x41 DUP1
0x42 PUSH4 0x47fa348a
0x47 EQ
0x48 PUSH2 0x90
0x4b JUMPI
---
0x42: V15 = 0x47fa348a
0x47: V16 = EQ 0x47fa348a V11
0x48: V17 = 0x90
0x4b: JUMPI 0x90 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x8d]
---
Predecessors: [0x51]
Successors: [0xdd]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x8e
0x62 PUSH1 0x4
0x64 DUP1
0x65 CALLDATASIZE
0x66 SUB
0x67 DUP2
0x68 ADD
0x69 SWAP1
0x6a DUP1
0x6b DUP1
0x6c CALLDATALOAD
0x6d PUSH1 0x0
0x6f NOT
0x70 AND
0x71 SWAP1
0x72 PUSH1 0x20
0x74 ADD
0x75 SWAP1
0x76 SWAP3
0x77 SWAP2
0x78 SWAP1
0x79 DUP1
0x7a CALLDATALOAD
0x7b PUSH1 0x0
0x7d NOT
0x7e AND
0x7f SWAP1
0x80 PUSH1 0x20
0x82 ADD
0x83 SWAP1
0x84 SWAP3
0x85 SWAP2
0x86 SWAP1
0x87 POP
0x88 POP
0x89 POP
0x8a PUSH2 0xdd
0x8d JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x8e
0x62: V24 = 0x4
0x65: V25 = CALLDATASIZE
0x66: V26 = SUB V25 0x4
0x68: V27 = ADD 0x4 V26
0x6c: V28 = CALLDATALOAD 0x4
0x6d: V29 = 0x0
0x6f: V30 = NOT 0x0
0x70: V31 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V28
0x72: V32 = 0x20
0x74: V33 = ADD 0x20 0x4
0x7a: V34 = CALLDATALOAD 0x24
0x7b: V35 = 0x0
0x7d: V36 = NOT 0x0
0x7e: V37 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V34
0x80: V38 = 0x20
0x82: V39 = ADD 0x20 0x24
0x8a: V40 = 0xdd
0x8d: JUMP 0xdd
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x8e, V31, V37]
Exit stack: [V11, 0x8e, V31, V37]

================================

Block 0x8e
[0x8e:0x8f]
---
Predecessors: [0x110]
Successors: []
---
0x8e JUMPDEST
0x8f STOP
---
0x8e: JUMPDEST 
0x8f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x90
[0x90:0x97]
---
Predecessors: [0x41]
Successors: [0x98, 0x9c]
---
0x90 JUMPDEST
0x91 CALLVALUE
0x92 DUP1
0x93 ISZERO
0x94 PUSH2 0x9c
0x97 JUMPI
---
0x90: JUMPDEST 
0x91: V41 = CALLVALUE
0x93: V42 = ISZERO V41
0x94: V43 = 0x9c
0x97: JUMPI 0x9c V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V11, V41]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x90]
Successors: []
---
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x98: V44 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V11, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41]

================================

Block 0x9c
[0x9c:0xbe]
---
Predecessors: [0x90]
Successors: [0x13a]
---
0x9c JUMPDEST
0x9d POP
0x9e PUSH2 0xbf
0xa1 PUSH1 0x4
0xa3 DUP1
0xa4 CALLDATASIZE
0xa5 SUB
0xa6 DUP2
0xa7 ADD
0xa8 SWAP1
0xa9 DUP1
0xaa DUP1
0xab CALLDATALOAD
0xac PUSH1 0x0
0xae NOT
0xaf AND
0xb0 SWAP1
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 SWAP1
0xb5 SWAP3
0xb6 SWAP2
0xb7 SWAP1
0xb8 POP
0xb9 POP
0xba POP
0xbb PUSH2 0x13a
0xbe JUMP
---
0x9c: JUMPDEST 
0x9e: V45 = 0xbf
0xa1: V46 = 0x4
0xa4: V47 = CALLDATASIZE
0xa5: V48 = SUB V47 0x4
0xa7: V49 = ADD 0x4 V48
0xab: V50 = CALLDATALOAD 0x4
0xac: V51 = 0x0
0xae: V52 = NOT 0x0
0xaf: V53 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V50
0xb1: V54 = 0x20
0xb3: V55 = ADD 0x20 0x4
0xbb: V56 = 0x13a
0xbe: JUMP 0x13a
---
Entry stack: [V11, V41]
Stack pops: 1
Stack additions: [0xbf, V53]
Exit stack: [V11, 0xbf, V53]

================================

Block 0xbf
[0xbf:0xdc]
---
Predecessors: [0x13a]
Successors: []
---
0xbf JUMPDEST
0xc0 PUSH1 0x40
0xc2 MLOAD
0xc3 DUP1
0xc4 DUP3
0xc5 PUSH1 0x0
0xc7 NOT
0xc8 AND
0xc9 PUSH1 0x0
0xcb NOT
0xcc AND
0xcd DUP2
0xce MSTORE
0xcf PUSH1 0x20
0xd1 ADD
0xd2 SWAP2
0xd3 POP
0xd4 POP
0xd5 PUSH1 0x40
0xd7 MLOAD
0xd8 DUP1
0xd9 SWAP2
0xda SUB
0xdb SWAP1
0xdc RETURN
---
0xbf: JUMPDEST 
0xc0: V57 = 0x40
0xc2: V58 = M[0x40]
0xc5: V59 = 0x0
0xc7: V60 = NOT 0x0
0xc8: V61 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V124
0xc9: V62 = 0x0
0xcb: V63 = NOT 0x0
0xcc: V64 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V61
0xce: M[V58] = V64
0xcf: V65 = 0x20
0xd1: V66 = ADD 0x20 V58
0xd5: V67 = 0x40
0xd7: V68 = M[0x40]
0xda: V69 = SUB V66 V68
0xdc: RETURN V68 V69
---
Entry stack: [V11, 0xbf, V124]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbf]

================================

Block 0xdd
[0xdd:0x10b]
---
Predecessors: [0x5d]
Successors: [0x10c, 0x110]
---
0xdd JUMPDEST
0xde PUSH1 0x0
0xe0 PUSH1 0x1
0xe2 MUL
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 DUP5
0xe7 PUSH1 0x0
0xe9 NOT
0xea AND
0xeb PUSH1 0x0
0xed NOT
0xee AND
0xef DUP2
0xf0 MSTORE
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP1
0xf5 DUP2
0xf6 MSTORE
0xf7 PUSH1 0x20
0xf9 ADD
0xfa PUSH1 0x0
0xfc SHA3
0xfd PUSH1 0x0
0xff ADD
0x100 SLOAD
0x101 PUSH1 0x0
0x103 NOT
0x104 AND
0x105 EQ
0x106 ISZERO
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0xdd: JUMPDEST 
0xde: V70 = 0x0
0xe0: V71 = 0x1
0xe2: V72 = MUL 0x1 0x0
0xe3: V73 = 0x0
0xe7: V74 = 0x0
0xe9: V75 = NOT 0x0
0xea: V76 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V31
0xeb: V77 = 0x0
0xed: V78 = NOT 0x0
0xee: V79 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V76
0xf0: M[0x0] = V79
0xf1: V80 = 0x20
0xf3: V81 = ADD 0x20 0x0
0xf6: M[0x20] = 0x0
0xf7: V82 = 0x20
0xf9: V83 = ADD 0x20 0x20
0xfa: V84 = 0x0
0xfc: V85 = SHA3 0x0 0x40
0xfd: V86 = 0x0
0xff: V87 = ADD 0x0 V85
0x100: V88 = S[V87]
0x101: V89 = 0x0
0x103: V90 = NOT 0x0
0x104: V91 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V88
0x105: V92 = EQ V91 0x0
0x106: V93 = ISZERO V92
0x107: V94 = ISZERO V93
0x108: V95 = 0x110
0x10b: JUMPI 0x110 V94
---
Entry stack: [V11, 0x8e, V31, V37]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x8e, V31, V37]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0xdd]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V96 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8e, V31, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8e, V31, V37]

================================

Block 0x110
[0x110:0x139]
---
Predecessors: [0xdd]
Successors: [0x8e]
---
0x110 JUMPDEST
0x111 DUP1
0x112 PUSH1 0x0
0x114 DUP1
0x115 DUP5
0x116 PUSH1 0x0
0x118 NOT
0x119 AND
0x11a PUSH1 0x0
0x11c NOT
0x11d AND
0x11e DUP2
0x11f MSTORE
0x120 PUSH1 0x20
0x122 ADD
0x123 SWAP1
0x124 DUP2
0x125 MSTORE
0x126 PUSH1 0x20
0x128 ADD
0x129 PUSH1 0x0
0x12b SHA3
0x12c PUSH1 0x0
0x12e ADD
0x12f DUP2
0x130 PUSH1 0x0
0x132 NOT
0x133 AND
0x134 SWAP1
0x135 SSTORE
0x136 POP
0x137 POP
0x138 POP
0x139 JUMP
---
0x110: JUMPDEST 
0x112: V97 = 0x0
0x116: V98 = 0x0
0x118: V99 = NOT 0x0
0x119: V100 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V31
0x11a: V101 = 0x0
0x11c: V102 = NOT 0x0
0x11d: V103 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V100
0x11f: M[0x0] = V103
0x120: V104 = 0x20
0x122: V105 = ADD 0x20 0x0
0x125: M[0x20] = 0x0
0x126: V106 = 0x20
0x128: V107 = ADD 0x20 0x20
0x129: V108 = 0x0
0x12b: V109 = SHA3 0x0 0x40
0x12c: V110 = 0x0
0x12e: V111 = ADD 0x0 V109
0x130: V112 = 0x0
0x132: V113 = NOT 0x0
0x133: V114 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V37
0x135: S[V111] = V114
0x139: JUMP 0x8e
---
Entry stack: [V11, 0x8e, V31, V37]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x13a
[0x13a:0x157]
---
Predecessors: [0x9c]
Successors: [0xbf]
---
0x13a JUMPDEST
0x13b PUSH1 0x0
0x13d PUSH1 0x20
0x13f MSTORE
0x140 DUP1
0x141 PUSH1 0x0
0x143 MSTORE
0x144 PUSH1 0x40
0x146 PUSH1 0x0
0x148 SHA3
0x149 PUSH1 0x0
0x14b SWAP2
0x14c POP
0x14d SWAP1
0x14e POP
0x14f DUP1
0x150 PUSH1 0x0
0x152 ADD
0x153 SLOAD
0x154 SWAP1
0x155 POP
0x156 DUP2
0x157 JUMP
---
0x13a: JUMPDEST 
0x13b: V115 = 0x0
0x13d: V116 = 0x20
0x13f: M[0x20] = 0x0
0x141: V117 = 0x0
0x143: M[0x0] = V53
0x144: V118 = 0x40
0x146: V119 = 0x0
0x148: V120 = SHA3 0x0 0x40
0x149: V121 = 0x0
0x150: V122 = 0x0
0x152: V123 = ADD 0x0 V120
0x153: V124 = S[V123]
0x157: JUMP 0xbf
---
Entry stack: [V11, 0xbf, V53]
Stack pops: 2
Stack additions: [S1, V124]
Exit stack: [V11, 0xbf, V124]

================================

Block 0x158
[0x158:0x170]
---
Predecessors: []
Successors: [0x171]
---
0x158 STOP
0x159 LOG1
0x15a PUSH6 0x627a7a723058
0x161 SHA3
0x162 MISSING 0xf9
0x163 MISSING 0xa8
0x164 MISSING 0xd2
0x165 CALL
0x166 MISSING 0x24
0x167 MISSING 0xae
0x168 MISSING 0xd3
0x169 SHR
0x16a MISSING 0xb4
0x16b MUL
0x16c SWAP9
0x16d GAS
0x16e ORIGIN
0x16f MISSING 0xe6
0x170 EQ
---
0x158: STOP 
0x159: LOG S0 S1 S2
0x15a: V125 = 0x627a7a723058
0x161: V126 = SHA3 0x627a7a723058 S3
0x162: MISSING 0xf9
0x163: MISSING 0xa8
0x164: MISSING 0xd2
0x165: V127 = CALL S0 S1 S2 S3 S4 S5 S6
0x166: MISSING 0x24
0x167: MISSING 0xae
0x168: MISSING 0xd3
0x169: V128 = SHR S0 S1
0x16a: MISSING 0xb4
0x16b: V129 = MUL S0 S1
0x16d: V130 = GAS
0x16e: V131 = ORIGIN
0x16f: MISSING 0xe6
0x170: V132 = EQ S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V126, V127, V128, V131, V130, S10, S2, S3, S4, S5, S6, S7, S8, S9, V129, V132]
Exit stack: []

================================

Block 0x171
[0x171:0x183]
---
Predecessors: [0x158]
Successors: []
---
0x171 JUMPDEST
0x172 MSTORE
0x173 PUSH2 0x54ab
0x176 EXTCODESIZE
0x177 MISSING 0xd9
0x178 MISSING 0xa9
0x179 JUMP
0x17a MISSING 0xd9
0x17b MISSING 0xb4
0x17c JUMPDEST
0x17d DUP15
0x17e DUP7
0x17f MISSING 0x48
0x180 SWAP6
0x181 CALLCODE
0x182 STOP
0x183 MISSING 0x29
---
0x171: JUMPDEST 
0x172: M[V132] = S1
0x173: V133 = 0x54ab
0x176: V134 = EXTCODESIZE 0x54ab
0x177: MISSING 0xd9
0x178: MISSING 0xa9
0x179: JUMP S0
0x17a: MISSING 0xd9
0x17b: MISSING 0xb4
0x17c: JUMPDEST 
0x17f: MISSING 0x48
0x181: V135 = CALLCODE S6 S1 S2 S3 S4 S5 S0
0x182: STOP 
0x183: MISSING 0x29
---
Entry stack: [V132]
Stack pops: 157
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x7a03cf3
Entry block: 0x51
Exit block: 0x8e
Body: 0x51, 0x59, 0x5d, 0x8e, 0xdd, 0x10c, 0x110

Function 1:
Public function signature: 0x47fa348a
Entry block: 0x90
Exit block: 0xbf
Body: 0x90, 0x98, 0x9c, 0xbf, 0x13a

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

