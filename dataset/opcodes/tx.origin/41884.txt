Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xac298dc
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xac298dc
0x3c: V13 = EQ 0xac298dc V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xc6]
---
0x41 DUP1
0x42 PUSH4 0x2bc38531
0x47 EQ
0x48 PUSH2 0xc6
0x4b JUMPI
---
0x42: V15 = 0x2bc38531
0x47: V16 = EQ 0x2bc38531 V11
0x48: V17 = 0xc6
0x4b: JUMPI 0xc6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x12f]
---
0x4c DUP1
0x4d PUSH4 0x31fb67c2
0x52 EQ
0x53 PUSH2 0x12f
0x56 JUMPI
---
0x4d: V18 = 0x31fb67c2
0x52: V19 = EQ 0x31fb67c2 V11
0x53: V20 = 0x12f
0x56: JUMPI 0x12f V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x18b]
---
0x57 DUP1
0x58 PUSH4 0x578ff67a
0x5d EQ
0x5e PUSH2 0x18b
0x61 JUMPI
---
0x58: V21 = 0x578ff67a
0x5d: V22 = EQ 0x578ff67a V11
0x5e: V23 = 0x18b
0x61: JUMPI 0x18b V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1bc]
---
0x62 DUP1
0x63 PUSH4 0xf2a75fe4
0x68 EQ
0x69 PUSH2 0x1bc
0x6c JUMPI
---
0x63: V24 = 0xf2a75fe4
0x68: V25 = EQ 0xf2a75fe4 V11
0x69: V26 = 0x1bc
0x6c: JUMPI 0x1bc V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0xd]
Successors: [0x77, 0x7b]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 DUP1
0x72 ISZERO
0x73 PUSH2 0x7b
0x76 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x72: V28 = ISZERO V27
0x73: V29 = 0x7b
0x76: JUMPI 0x7b V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x77
[0x77:0x7a]
---
Predecessors: [0x6f]
Successors: []
---
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x77: V30 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V11, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V27]

================================

Block 0x7b
[0x7b:0x83]
---
Predecessors: [0x6f]
Successors: [0x1d3]
---
0x7b JUMPDEST
0x7c POP
0x7d PUSH2 0x84
0x80 PUSH2 0x1d3
0x83 JUMP
---
0x7b: JUMPDEST 
0x7d: V31 = 0x84
0x80: V32 = 0x1d3
0x83: JUMP 0x1d3
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [0x84]
Exit stack: [V11, 0x84]

================================

Block 0x84
[0x84:0xc5]
---
Predecessors: [0x1d3]
Successors: []
---
0x84 JUMPDEST
0x85 PUSH1 0x40
0x87 MLOAD
0x88 DUP1
0x89 DUP3
0x8a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f AND
0xa0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5 AND
0xb6 DUP2
0xb7 MSTORE
0xb8 PUSH1 0x20
0xba ADD
0xbb SWAP2
0xbc POP
0xbd POP
0xbe PUSH1 0x40
0xc0 MLOAD
0xc1 DUP1
0xc2 SWAP2
0xc3 SUB
0xc4 SWAP1
0xc5 RETURN
---
0x84: JUMPDEST 
0x85: V33 = 0x40
0x87: V34 = M[0x40]
0x8a: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0xa0: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xb7: M[V34] = V38
0xb8: V39 = 0x20
0xba: V40 = ADD 0x20 V34
0xbe: V41 = 0x40
0xc0: V42 = M[0x40]
0xc3: V43 = SUB V40 V42
0xc5: RETURN V42 V43
---
Entry stack: [V11, V132]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0x41]
Successors: [0xce, 0xd2]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 DUP1
0xc9 ISZERO
0xca PUSH2 0xd2
0xcd JUMPI
---
0xc6: JUMPDEST 
0xc7: V44 = CALLVALUE
0xc9: V45 = ISZERO V44
0xca: V46 = 0xd2
0xcd: JUMPI 0xd2 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V11, V44]

================================

Block 0xce
[0xce:0xd1]
---
Predecessors: [0xc6]
Successors: []
---
0xce PUSH1 0x0
0xd0 DUP1
0xd1 REVERT
---
0xce: V47 = 0x0
0xd1: REVERT 0x0 0x0
---
Entry stack: [V11, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V44]

================================

Block 0xd2
[0xd2:0x12c]
---
Predecessors: [0xc6]
Successors: [0x1fd]
---
0xd2 JUMPDEST
0xd3 POP
0xd4 PUSH2 0x12d
0xd7 PUSH1 0x4
0xd9 DUP1
0xda CALLDATASIZE
0xdb SUB
0xdc DUP2
0xdd ADD
0xde SWAP1
0xdf DUP1
0xe0 DUP1
0xe1 CALLDATALOAD
0xe2 SWAP1
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP1
0xe7 DUP3
0xe8 ADD
0xe9 DUP1
0xea CALLDATALOAD
0xeb SWAP1
0xec PUSH1 0x20
0xee ADD
0xef SWAP1
0xf0 DUP1
0xf1 DUP1
0xf2 PUSH1 0x1f
0xf4 ADD
0xf5 PUSH1 0x20
0xf7 DUP1
0xf8 SWAP2
0xf9 DIV
0xfa MUL
0xfb PUSH1 0x20
0xfd ADD
0xfe PUSH1 0x40
0x100 MLOAD
0x101 SWAP1
0x102 DUP2
0x103 ADD
0x104 PUSH1 0x40
0x106 MSTORE
0x107 DUP1
0x108 SWAP4
0x109 SWAP3
0x10a SWAP2
0x10b SWAP1
0x10c DUP2
0x10d DUP2
0x10e MSTORE
0x10f PUSH1 0x20
0x111 ADD
0x112 DUP4
0x113 DUP4
0x114 DUP1
0x115 DUP3
0x116 DUP5
0x117 CALLDATACOPY
0x118 DUP3
0x119 ADD
0x11a SWAP2
0x11b POP
0x11c POP
0x11d POP
0x11e POP
0x11f POP
0x120 POP
0x121 SWAP2
0x122 SWAP3
0x123 SWAP2
0x124 SWAP3
0x125 SWAP1
0x126 POP
0x127 POP
0x128 POP
0x129 PUSH2 0x1fd
0x12c JUMP
---
0xd2: JUMPDEST 
0xd4: V48 = 0x12d
0xd7: V49 = 0x4
0xda: V50 = CALLDATASIZE
0xdb: V51 = SUB V50 0x4
0xdd: V52 = ADD 0x4 V51
0xe1: V53 = CALLDATALOAD 0x4
0xe3: V54 = 0x20
0xe5: V55 = ADD 0x20 0x4
0xe8: V56 = ADD 0x4 V53
0xea: V57 = CALLDATALOAD V56
0xec: V58 = 0x20
0xee: V59 = ADD 0x20 V56
0xf2: V60 = 0x1f
0xf4: V61 = ADD 0x1f V57
0xf5: V62 = 0x20
0xf9: V63 = DIV V61 0x20
0xfa: V64 = MUL V63 0x20
0xfb: V65 = 0x20
0xfd: V66 = ADD 0x20 V64
0xfe: V67 = 0x40
0x100: V68 = M[0x40]
0x103: V69 = ADD V68 V66
0x104: V70 = 0x40
0x106: M[0x40] = V69
0x10e: M[V68] = V57
0x10f: V71 = 0x20
0x111: V72 = ADD 0x20 V68
0x117: CALLDATACOPY V72 V59 V57
0x119: V73 = ADD V72 V57
0x129: V74 = 0x1fd
0x12c: JUMP 0x1fd
---
Entry stack: [V11, V44]
Stack pops: 1
Stack additions: [0x12d, V68]
Exit stack: [V11, 0x12d, V68]

================================

Block 0x12d
[0x12d:0x12e]
---
Predecessors: [0x2e9]
Successors: []
---
0x12d JUMPDEST
0x12e STOP
---
0x12d: JUMPDEST 
0x12e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12f
[0x12f:0x188]
---
Predecessors: [0x4c]
Successors: [0x2ec]
---
0x12f JUMPDEST
0x130 PUSH2 0x189
0x133 PUSH1 0x4
0x135 DUP1
0x136 CALLDATASIZE
0x137 SUB
0x138 DUP2
0x139 ADD
0x13a SWAP1
0x13b DUP1
0x13c DUP1
0x13d CALLDATALOAD
0x13e SWAP1
0x13f PUSH1 0x20
0x141 ADD
0x142 SWAP1
0x143 DUP3
0x144 ADD
0x145 DUP1
0x146 CALLDATALOAD
0x147 SWAP1
0x148 PUSH1 0x20
0x14a ADD
0x14b SWAP1
0x14c DUP1
0x14d DUP1
0x14e PUSH1 0x1f
0x150 ADD
0x151 PUSH1 0x20
0x153 DUP1
0x154 SWAP2
0x155 DIV
0x156 MUL
0x157 PUSH1 0x20
0x159 ADD
0x15a PUSH1 0x40
0x15c MLOAD
0x15d SWAP1
0x15e DUP2
0x15f ADD
0x160 PUSH1 0x40
0x162 MSTORE
0x163 DUP1
0x164 SWAP4
0x165 SWAP3
0x166 SWAP2
0x167 SWAP1
0x168 DUP2
0x169 DUP2
0x16a MSTORE
0x16b PUSH1 0x20
0x16d ADD
0x16e DUP4
0x16f DUP4
0x170 DUP1
0x171 DUP3
0x172 DUP5
0x173 CALLDATACOPY
0x174 DUP3
0x175 ADD
0x176 SWAP2
0x177 POP
0x178 POP
0x179 POP
0x17a POP
0x17b POP
0x17c POP
0x17d SWAP2
0x17e SWAP3
0x17f SWAP2
0x180 SWAP3
0x181 SWAP1
0x182 POP
0x183 POP
0x184 POP
0x185 PUSH2 0x2ec
0x188 JUMP
---
0x12f: JUMPDEST 
0x130: V75 = 0x189
0x133: V76 = 0x4
0x136: V77 = CALLDATASIZE
0x137: V78 = SUB V77 0x4
0x139: V79 = ADD 0x4 V78
0x13d: V80 = CALLDATALOAD 0x4
0x13f: V81 = 0x20
0x141: V82 = ADD 0x20 0x4
0x144: V83 = ADD 0x4 V80
0x146: V84 = CALLDATALOAD V83
0x148: V85 = 0x20
0x14a: V86 = ADD 0x20 V83
0x14e: V87 = 0x1f
0x150: V88 = ADD 0x1f V84
0x151: V89 = 0x20
0x155: V90 = DIV V88 0x20
0x156: V91 = MUL V90 0x20
0x157: V92 = 0x20
0x159: V93 = ADD 0x20 V91
0x15a: V94 = 0x40
0x15c: V95 = M[0x40]
0x15f: V96 = ADD V95 V93
0x160: V97 = 0x40
0x162: M[0x40] = V96
0x16a: M[V95] = V84
0x16b: V98 = 0x20
0x16d: V99 = ADD 0x20 V95
0x173: CALLDATACOPY V99 V86 V84
0x175: V100 = ADD V99 V84
0x185: V101 = 0x2ec
0x188: JUMP 0x2ec
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x189, V95]
Exit stack: [V11, 0x189, V95]

================================

Block 0x189
[0x189:0x18a]
---
Predecessors: [0x476]
Successors: []
---
0x189 JUMPDEST
0x18a STOP
---
0x189: JUMPDEST 
0x18a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18b
[0x18b:0x192]
---
Predecessors: [0x57]
Successors: [0x193, 0x197]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d DUP1
0x18e ISZERO
0x18f PUSH2 0x197
0x192 JUMPI
---
0x18b: JUMPDEST 
0x18c: V102 = CALLVALUE
0x18e: V103 = ISZERO V102
0x18f: V104 = 0x197
0x192: JUMPI 0x197 V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V11, V102]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x18b]
Successors: []
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
---
0x193: V105 = 0x0
0x196: REVERT 0x0 0x0
---
Entry stack: [V11, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V102]

================================

Block 0x197
[0x197:0x1b9]
---
Predecessors: [0x18b]
Successors: [0x479]
---
0x197 JUMPDEST
0x198 POP
0x199 PUSH2 0x1ba
0x19c PUSH1 0x4
0x19e DUP1
0x19f CALLDATASIZE
0x1a0 SUB
0x1a1 DUP2
0x1a2 ADD
0x1a3 SWAP1
0x1a4 DUP1
0x1a5 DUP1
0x1a6 CALLDATALOAD
0x1a7 PUSH1 0x0
0x1a9 NOT
0x1aa AND
0x1ab SWAP1
0x1ac PUSH1 0x20
0x1ae ADD
0x1af SWAP1
0x1b0 SWAP3
0x1b1 SWAP2
0x1b2 SWAP1
0x1b3 POP
0x1b4 POP
0x1b5 POP
0x1b6 PUSH2 0x479
0x1b9 JUMP
---
0x197: JUMPDEST 
0x199: V106 = 0x1ba
0x19c: V107 = 0x4
0x19f: V108 = CALLDATASIZE
0x1a0: V109 = SUB V108 0x4
0x1a2: V110 = ADD 0x4 V109
0x1a6: V111 = CALLDATALOAD 0x4
0x1a7: V112 = 0x0
0x1a9: V113 = NOT 0x0
0x1aa: V114 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V111
0x1ac: V115 = 0x20
0x1ae: V116 = ADD 0x20 0x4
0x1b6: V117 = 0x479
0x1b9: JUMP 0x479
---
Entry stack: [V11, V102]
Stack pops: 1
Stack additions: [0x1ba, V114]
Exit stack: [V11, 0x1ba, V114]

================================

Block 0x1ba
[0x1ba:0x1bb]
---
Predecessors: [0x497]
Successors: []
---
0x1ba JUMPDEST
0x1bb STOP
---
0x1ba: JUMPDEST 
0x1bb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bc
[0x1bc:0x1c3]
---
Predecessors: [0x62]
Successors: [0x1c4, 0x1c8]
---
0x1bc JUMPDEST
0x1bd CALLVALUE
0x1be DUP1
0x1bf ISZERO
0x1c0 PUSH2 0x1c8
0x1c3 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V118 = CALLVALUE
0x1bf: V119 = ISZERO V118
0x1c0: V120 = 0x1c8
0x1c3: JUMPI 0x1c8 V119
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V11, V118]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x1bc]
Successors: []
---
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 REVERT
---
0x1c4: V121 = 0x0
0x1c7: REVERT 0x0 0x0
---
Entry stack: [V11, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V118]

================================

Block 0x1c8
[0x1c8:0x1d0]
---
Predecessors: [0x1bc]
Successors: [0x49a]
---
0x1c8 JUMPDEST
0x1c9 POP
0x1ca PUSH2 0x1d1
0x1cd PUSH2 0x49a
0x1d0 JUMP
---
0x1c8: JUMPDEST 
0x1ca: V122 = 0x1d1
0x1cd: V123 = 0x49a
0x1d0: JUMP 0x49a
---
Entry stack: [V11, V118]
Stack pops: 1
Stack additions: [0x1d1]
Exit stack: [V11, 0x1d1]

================================

Block 0x1d1
[0x1d1:0x1d2]
---
Predecessors: []
Successors: []
---
0x1d1 JUMPDEST
0x1d2 STOP
---
0x1d1: JUMPDEST 
0x1d2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d3
[0x1d3:0x1fc]
---
Predecessors: [0x7b]
Successors: [0x84]
---
0x1d3 JUMPDEST
0x1d4 PUSH1 0x0
0x1d6 PUSH1 0x1
0x1d8 PUSH1 0x0
0x1da SWAP1
0x1db SLOAD
0x1dc SWAP1
0x1dd PUSH2 0x100
0x1e0 EXP
0x1e1 SWAP1
0x1e2 DIV
0x1e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f8 AND
0x1f9 SWAP1
0x1fa POP
0x1fb SWAP1
0x1fc JUMP
---
0x1d3: JUMPDEST 
0x1d4: V124 = 0x0
0x1d6: V125 = 0x1
0x1d8: V126 = 0x0
0x1db: V127 = S[0x1]
0x1dd: V128 = 0x100
0x1e0: V129 = EXP 0x100 0x0
0x1e2: V130 = DIV V127 0x1
0x1e3: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x1fc: JUMP 0x84
---
Entry stack: [V11, 0x84]
Stack pops: 1
Stack additions: [V132]
Exit stack: [V11, V132]

================================

Block 0x1fd
[0x1fd:0x20f]
---
Predecessors: [0xd2]
Successors: [0x210, 0x2e9]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x0
0x200 PUSH1 0x1
0x202 MUL
0x203 PUSH1 0x0
0x205 SLOAD
0x206 PUSH1 0x0
0x208 NOT
0x209 AND
0x20a EQ
0x20b ISZERO
0x20c PUSH2 0x2e9
0x20f JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V133 = 0x0
0x200: V134 = 0x1
0x202: V135 = MUL 0x1 0x0
0x203: V136 = 0x0
0x205: V137 = S[0x0]
0x206: V138 = 0x0
0x208: V139 = NOT 0x0
0x209: V140 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V137
0x20a: V141 = EQ V140 0x0
0x20b: V142 = ISZERO V141
0x20c: V143 = 0x2e9
0x20f: JUMPI 0x2e9 V142
---
Entry stack: [V11, 0x12d, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12d, V68]

================================

Block 0x210
[0x210:0x222]
---
Predecessors: [0x1fd]
Successors: [0x223]
---
0x210 DUP1
0x211 PUSH1 0x40
0x213 MLOAD
0x214 PUSH1 0x20
0x216 ADD
0x217 DUP1
0x218 DUP3
0x219 DUP1
0x21a MLOAD
0x21b SWAP1
0x21c PUSH1 0x20
0x21e ADD
0x21f SWAP1
0x220 DUP1
0x221 DUP4
0x222 DUP4
---
0x211: V144 = 0x40
0x213: V145 = M[0x40]
0x214: V146 = 0x20
0x216: V147 = ADD 0x20 V145
0x21a: V148 = M[V68]
0x21c: V149 = 0x20
0x21e: V150 = ADD 0x20 V68
---
Entry stack: [V11, 0x12d, V68]
Stack pops: 1
Stack additions: [S0, S0, V147, V147, V150, V148, V148, V147, V150]
Exit stack: [V11, 0x12d, V68, V68, V147, V147, V150, V148, V148, V147, V150]

================================

Block 0x223
[0x223:0x22d]
---
Predecessors: [0x210, 0x22e]
Successors: [0x22e, 0x248]
---
0x223 JUMPDEST
0x224 PUSH1 0x20
0x226 DUP4
0x227 LT
0x228 ISZERO
0x229 ISZERO
0x22a PUSH2 0x248
0x22d JUMPI
---
0x223: JUMPDEST 
0x224: V151 = 0x20
0x227: V152 = LT S2 0x20
0x228: V153 = ISZERO V152
0x229: V154 = ISZERO V153
0x22a: V155 = 0x248
0x22d: JUMPI 0x248 V154
---
Entry stack: [V11, 0x12d, V68, V68, V147, V147, V150, V148, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x12d, V68, V68, V147, V147, V150, V148, S2, S1, S0]

================================

Block 0x22e
[0x22e:0x247]
---
Predecessors: [0x223]
Successors: [0x223]
---
0x22e DUP1
0x22f MLOAD
0x230 DUP3
0x231 MSTORE
0x232 PUSH1 0x20
0x234 DUP3
0x235 ADD
0x236 SWAP2
0x237 POP
0x238 PUSH1 0x20
0x23a DUP2
0x23b ADD
0x23c SWAP1
0x23d POP
0x23e PUSH1 0x20
0x240 DUP4
0x241 SUB
0x242 SWAP3
0x243 POP
0x244 PUSH2 0x223
0x247 JUMP
---
0x22f: V156 = M[S0]
0x231: M[S1] = V156
0x232: V157 = 0x20
0x235: V158 = ADD S1 0x20
0x238: V159 = 0x20
0x23b: V160 = ADD S0 0x20
0x23e: V161 = 0x20
0x241: V162 = SUB S2 0x20
0x244: V163 = 0x223
0x247: JUMP 0x223
---
Entry stack: [V11, 0x12d, V68, V68, V147, V147, V150, V148, S2, S1, S0]
Stack pops: 3
Stack additions: [V162, V158, V160]
Exit stack: [V11, 0x12d, V68, V68, V147, V147, V150, V148, V162, V158, V160]

================================

Block 0x248
[0x248:0x28b]
---
Predecessors: [0x223]
Successors: [0x28c]
---
0x248 JUMPDEST
0x249 PUSH1 0x1
0x24b DUP4
0x24c PUSH1 0x20
0x24e SUB
0x24f PUSH2 0x100
0x252 EXP
0x253 SUB
0x254 DUP1
0x255 NOT
0x256 DUP3
0x257 MLOAD
0x258 AND
0x259 DUP2
0x25a DUP5
0x25b MLOAD
0x25c AND
0x25d DUP1
0x25e DUP3
0x25f OR
0x260 DUP6
0x261 MSTORE
0x262 POP
0x263 POP
0x264 POP
0x265 POP
0x266 POP
0x267 POP
0x268 SWAP1
0x269 POP
0x26a ADD
0x26b SWAP2
0x26c POP
0x26d POP
0x26e PUSH1 0x40
0x270 MLOAD
0x271 PUSH1 0x20
0x273 DUP2
0x274 DUP4
0x275 SUB
0x276 SUB
0x277 DUP2
0x278 MSTORE
0x279 SWAP1
0x27a PUSH1 0x40
0x27c MSTORE
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 DUP3
0x282 DUP1
0x283 MLOAD
0x284 SWAP1
0x285 PUSH1 0x20
0x287 ADD
0x288 SWAP1
0x289 DUP1
0x28a DUP4
0x28b DUP4
---
0x248: JUMPDEST 
0x249: V164 = 0x1
0x24c: V165 = 0x20
0x24e: V166 = SUB 0x20 S2
0x24f: V167 = 0x100
0x252: V168 = EXP 0x100 V166
0x253: V169 = SUB V168 0x1
0x255: V170 = NOT V169
0x257: V171 = M[S0]
0x258: V172 = AND V171 V170
0x25b: V173 = M[S1]
0x25c: V174 = AND V173 V169
0x25f: V175 = OR V172 V174
0x261: M[S1] = V175
0x26a: V176 = ADD V148 V147
0x26e: V177 = 0x40
0x270: V178 = M[0x40]
0x271: V179 = 0x20
0x275: V180 = SUB V176 V178
0x276: V181 = SUB V180 0x20
0x278: M[V178] = V181
0x27a: V182 = 0x40
0x27c: M[0x40] = V176
0x27d: V183 = 0x40
0x27f: V184 = M[0x40]
0x283: V185 = M[V178]
0x285: V186 = 0x20
0x287: V187 = ADD 0x20 V178
---
Entry stack: [V11, 0x12d, V68, V68, V147, V147, V150, V148, S2, S1, S0]
Stack pops: 8
Stack additions: [V178, V184, V184, V187, V185, V185, V184, V187]
Exit stack: [V11, 0x12d, V68, V178, V184, V184, V187, V185, V185, V184, V187]

================================

Block 0x28c
[0x28c:0x296]
---
Predecessors: [0x248, 0x297]
Successors: [0x297, 0x2b1]
---
0x28c JUMPDEST
0x28d PUSH1 0x20
0x28f DUP4
0x290 LT
0x291 ISZERO
0x292 ISZERO
0x293 PUSH2 0x2b1
0x296 JUMPI
---
0x28c: JUMPDEST 
0x28d: V188 = 0x20
0x290: V189 = LT S2 0x20
0x291: V190 = ISZERO V189
0x292: V191 = ISZERO V190
0x293: V192 = 0x2b1
0x296: JUMPI 0x2b1 V191
---
Entry stack: [V11, 0x12d, V68, V178, V184, V184, V187, V185, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x12d, V68, V178, V184, V184, V187, V185, S2, S1, S0]

================================

Block 0x297
[0x297:0x2b0]
---
Predecessors: [0x28c]
Successors: [0x28c]
---
0x297 DUP1
0x298 MLOAD
0x299 DUP3
0x29a MSTORE
0x29b PUSH1 0x20
0x29d DUP3
0x29e ADD
0x29f SWAP2
0x2a0 POP
0x2a1 PUSH1 0x20
0x2a3 DUP2
0x2a4 ADD
0x2a5 SWAP1
0x2a6 POP
0x2a7 PUSH1 0x20
0x2a9 DUP4
0x2aa SUB
0x2ab SWAP3
0x2ac POP
0x2ad PUSH2 0x28c
0x2b0 JUMP
---
0x298: V193 = M[S0]
0x29a: M[S1] = V193
0x29b: V194 = 0x20
0x29e: V195 = ADD S1 0x20
0x2a1: V196 = 0x20
0x2a4: V197 = ADD S0 0x20
0x2a7: V198 = 0x20
0x2aa: V199 = SUB S2 0x20
0x2ad: V200 = 0x28c
0x2b0: JUMP 0x28c
---
Entry stack: [V11, 0x12d, V68, V178, V184, V184, V187, V185, S2, S1, S0]
Stack pops: 3
Stack additions: [V199, V195, V197]
Exit stack: [V11, 0x12d, V68, V178, V184, V184, V187, V185, V199, V195, V197]

================================

Block 0x2b1
[0x2b1:0x2e8]
---
Predecessors: [0x28c]
Successors: [0x2e9]
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x1
0x2b4 DUP4
0x2b5 PUSH1 0x20
0x2b7 SUB
0x2b8 PUSH2 0x100
0x2bb EXP
0x2bc SUB
0x2bd DUP1
0x2be NOT
0x2bf DUP3
0x2c0 MLOAD
0x2c1 AND
0x2c2 DUP2
0x2c3 DUP5
0x2c4 MLOAD
0x2c5 AND
0x2c6 DUP1
0x2c7 DUP3
0x2c8 OR
0x2c9 DUP6
0x2ca MSTORE
0x2cb POP
0x2cc POP
0x2cd POP
0x2ce POP
0x2cf POP
0x2d0 POP
0x2d1 SWAP1
0x2d2 POP
0x2d3 ADD
0x2d4 SWAP2
0x2d5 POP
0x2d6 POP
0x2d7 PUSH1 0x40
0x2d9 MLOAD
0x2da DUP1
0x2db SWAP2
0x2dc SUB
0x2dd SWAP1
0x2de SHA3
0x2df PUSH1 0x0
0x2e1 DUP2
0x2e2 PUSH1 0x0
0x2e4 NOT
0x2e5 AND
0x2e6 SWAP1
0x2e7 SSTORE
0x2e8 POP
---
0x2b1: JUMPDEST 
0x2b2: V201 = 0x1
0x2b5: V202 = 0x20
0x2b7: V203 = SUB 0x20 S2
0x2b8: V204 = 0x100
0x2bb: V205 = EXP 0x100 V203
0x2bc: V206 = SUB V205 0x1
0x2be: V207 = NOT V206
0x2c0: V208 = M[S0]
0x2c1: V209 = AND V208 V207
0x2c4: V210 = M[S1]
0x2c5: V211 = AND V210 V206
0x2c8: V212 = OR V209 V211
0x2ca: M[S1] = V212
0x2d3: V213 = ADD V185 V184
0x2d7: V214 = 0x40
0x2d9: V215 = M[0x40]
0x2dc: V216 = SUB V213 V215
0x2de: V217 = SHA3 V215 V216
0x2df: V218 = 0x0
0x2e2: V219 = 0x0
0x2e4: V220 = NOT 0x0
0x2e5: V221 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V217
0x2e7: S[0x0] = V221
---
Entry stack: [V11, 0x12d, V68, V178, V184, V184, V187, V185, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0x12d, V68]

================================

Block 0x2e9
[0x2e9:0x2eb]
---
Predecessors: [0x1fd, 0x2b1]
Successors: [0x12d]
---
0x2e9 JUMPDEST
0x2ea POP
0x2eb JUMP
---
0x2e9: JUMPDEST 
0x2eb: JUMP 0x12d
---
Entry stack: [V11, 0x12d, V68]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ec
[0x2ec:0x321]
---
Predecessors: [0x12f]
Successors: [0x322, 0x326]
---
0x2ec JUMPDEST
0x2ed ORIGIN
0x2ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x303 AND
0x304 CALLER
0x305 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31a AND
0x31b EQ
0x31c ISZERO
0x31d ISZERO
0x31e PUSH2 0x326
0x321 JUMPI
---
0x2ec: JUMPDEST 
0x2ed: V222 = ORIGIN
0x2ee: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x303: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x304: V225 = CALLER
0x305: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x31b: V228 = EQ V227 V224
0x31c: V229 = ISZERO V228
0x31d: V230 = ISZERO V229
0x31e: V231 = 0x326
0x321: JUMPI 0x326 V230
---
Entry stack: [V11, 0x189, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V95]

================================

Block 0x322
[0x322:0x325]
---
Predecessors: [0x2ec]
Successors: []
---
0x322 PUSH1 0x0
0x324 DUP1
0x325 REVERT
---
0x322: V232 = 0x0
0x325: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V95]

================================

Block 0x326
[0x326:0x339]
---
Predecessors: [0x2ec]
Successors: [0x33a]
---
0x326 JUMPDEST
0x327 DUP1
0x328 PUSH1 0x40
0x32a MLOAD
0x32b PUSH1 0x20
0x32d ADD
0x32e DUP1
0x32f DUP3
0x330 DUP1
0x331 MLOAD
0x332 SWAP1
0x333 PUSH1 0x20
0x335 ADD
0x336 SWAP1
0x337 DUP1
0x338 DUP4
0x339 DUP4
---
0x326: JUMPDEST 
0x328: V233 = 0x40
0x32a: V234 = M[0x40]
0x32b: V235 = 0x20
0x32d: V236 = ADD 0x20 V234
0x331: V237 = M[V95]
0x333: V238 = 0x20
0x335: V239 = ADD 0x20 V95
---
Entry stack: [V11, 0x189, V95]
Stack pops: 1
Stack additions: [S0, S0, V236, V236, V239, V237, V237, V236, V239]
Exit stack: [V11, 0x189, V95, V95, V236, V236, V239, V237, V237, V236, V239]

================================

Block 0x33a
[0x33a:0x344]
---
Predecessors: [0x326, 0x345]
Successors: [0x345, 0x35f]
---
0x33a JUMPDEST
0x33b PUSH1 0x20
0x33d DUP4
0x33e LT
0x33f ISZERO
0x340 ISZERO
0x341 PUSH2 0x35f
0x344 JUMPI
---
0x33a: JUMPDEST 
0x33b: V240 = 0x20
0x33e: V241 = LT S2 0x20
0x33f: V242 = ISZERO V241
0x340: V243 = ISZERO V242
0x341: V244 = 0x35f
0x344: JUMPI 0x35f V243
---
Entry stack: [V11, 0x189, V95, V95, V236, V236, V239, V237, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x189, V95, V95, V236, V236, V239, V237, S2, S1, S0]

================================

Block 0x345
[0x345:0x35e]
---
Predecessors: [0x33a]
Successors: [0x33a]
---
0x345 DUP1
0x346 MLOAD
0x347 DUP3
0x348 MSTORE
0x349 PUSH1 0x20
0x34b DUP3
0x34c ADD
0x34d SWAP2
0x34e POP
0x34f PUSH1 0x20
0x351 DUP2
0x352 ADD
0x353 SWAP1
0x354 POP
0x355 PUSH1 0x20
0x357 DUP4
0x358 SUB
0x359 SWAP3
0x35a POP
0x35b PUSH2 0x33a
0x35e JUMP
---
0x346: V245 = M[S0]
0x348: M[S1] = V245
0x349: V246 = 0x20
0x34c: V247 = ADD S1 0x20
0x34f: V248 = 0x20
0x352: V249 = ADD S0 0x20
0x355: V250 = 0x20
0x358: V251 = SUB S2 0x20
0x35b: V252 = 0x33a
0x35e: JUMP 0x33a
---
Entry stack: [V11, 0x189, V95, V95, V236, V236, V239, V237, S2, S1, S0]
Stack pops: 3
Stack additions: [V251, V247, V249]
Exit stack: [V11, 0x189, V95, V95, V236, V236, V239, V237, V251, V247, V249]

================================

Block 0x35f
[0x35f:0x3a2]
---
Predecessors: [0x33a]
Successors: [0x3a3]
---
0x35f JUMPDEST
0x360 PUSH1 0x1
0x362 DUP4
0x363 PUSH1 0x20
0x365 SUB
0x366 PUSH2 0x100
0x369 EXP
0x36a SUB
0x36b DUP1
0x36c NOT
0x36d DUP3
0x36e MLOAD
0x36f AND
0x370 DUP2
0x371 DUP5
0x372 MLOAD
0x373 AND
0x374 DUP1
0x375 DUP3
0x376 OR
0x377 DUP6
0x378 MSTORE
0x379 POP
0x37a POP
0x37b POP
0x37c POP
0x37d POP
0x37e POP
0x37f SWAP1
0x380 POP
0x381 ADD
0x382 SWAP2
0x383 POP
0x384 POP
0x385 PUSH1 0x40
0x387 MLOAD
0x388 PUSH1 0x20
0x38a DUP2
0x38b DUP4
0x38c SUB
0x38d SUB
0x38e DUP2
0x38f MSTORE
0x390 SWAP1
0x391 PUSH1 0x40
0x393 MSTORE
0x394 PUSH1 0x40
0x396 MLOAD
0x397 DUP1
0x398 DUP3
0x399 DUP1
0x39a MLOAD
0x39b SWAP1
0x39c PUSH1 0x20
0x39e ADD
0x39f SWAP1
0x3a0 DUP1
0x3a1 DUP4
0x3a2 DUP4
---
0x35f: JUMPDEST 
0x360: V253 = 0x1
0x363: V254 = 0x20
0x365: V255 = SUB 0x20 S2
0x366: V256 = 0x100
0x369: V257 = EXP 0x100 V255
0x36a: V258 = SUB V257 0x1
0x36c: V259 = NOT V258
0x36e: V260 = M[S0]
0x36f: V261 = AND V260 V259
0x372: V262 = M[S1]
0x373: V263 = AND V262 V258
0x376: V264 = OR V261 V263
0x378: M[S1] = V264
0x381: V265 = ADD V237 V236
0x385: V266 = 0x40
0x387: V267 = M[0x40]
0x388: V268 = 0x20
0x38c: V269 = SUB V265 V267
0x38d: V270 = SUB V269 0x20
0x38f: M[V267] = V270
0x391: V271 = 0x40
0x393: M[0x40] = V265
0x394: V272 = 0x40
0x396: V273 = M[0x40]
0x39a: V274 = M[V267]
0x39c: V275 = 0x20
0x39e: V276 = ADD 0x20 V267
---
Entry stack: [V11, 0x189, V95, V95, V236, V236, V239, V237, S2, S1, S0]
Stack pops: 8
Stack additions: [V267, V273, V273, V276, V274, V274, V273, V276]
Exit stack: [V11, 0x189, V95, V267, V273, V273, V276, V274, V274, V273, V276]

================================

Block 0x3a3
[0x3a3:0x3ad]
---
Predecessors: [0x35f, 0x3ae]
Successors: [0x3ae, 0x3c8]
---
0x3a3 JUMPDEST
0x3a4 PUSH1 0x20
0x3a6 DUP4
0x3a7 LT
0x3a8 ISZERO
0x3a9 ISZERO
0x3aa PUSH2 0x3c8
0x3ad JUMPI
---
0x3a3: JUMPDEST 
0x3a4: V277 = 0x20
0x3a7: V278 = LT S2 0x20
0x3a8: V279 = ISZERO V278
0x3a9: V280 = ISZERO V279
0x3aa: V281 = 0x3c8
0x3ad: JUMPI 0x3c8 V280
---
Entry stack: [V11, 0x189, V95, V267, V273, V273, V276, V274, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x189, V95, V267, V273, V273, V276, V274, S2, S1, S0]

================================

Block 0x3ae
[0x3ae:0x3c7]
---
Predecessors: [0x3a3]
Successors: [0x3a3]
---
0x3ae DUP1
0x3af MLOAD
0x3b0 DUP3
0x3b1 MSTORE
0x3b2 PUSH1 0x20
0x3b4 DUP3
0x3b5 ADD
0x3b6 SWAP2
0x3b7 POP
0x3b8 PUSH1 0x20
0x3ba DUP2
0x3bb ADD
0x3bc SWAP1
0x3bd POP
0x3be PUSH1 0x20
0x3c0 DUP4
0x3c1 SUB
0x3c2 SWAP3
0x3c3 POP
0x3c4 PUSH2 0x3a3
0x3c7 JUMP
---
0x3af: V282 = M[S0]
0x3b1: M[S1] = V282
0x3b2: V283 = 0x20
0x3b5: V284 = ADD S1 0x20
0x3b8: V285 = 0x20
0x3bb: V286 = ADD S0 0x20
0x3be: V287 = 0x20
0x3c1: V288 = SUB S2 0x20
0x3c4: V289 = 0x3a3
0x3c7: JUMP 0x3a3
---
Entry stack: [V11, 0x189, V95, V267, V273, V273, V276, V274, S2, S1, S0]
Stack pops: 3
Stack additions: [V288, V284, V286]
Exit stack: [V11, 0x189, V95, V267, V273, V273, V276, V274, V288, V284, V286]

================================

Block 0x3c8
[0x3c8:0x406]
---
Predecessors: [0x3a3]
Successors: [0x407, 0x476]
---
0x3c8 JUMPDEST
0x3c9 PUSH1 0x1
0x3cb DUP4
0x3cc PUSH1 0x20
0x3ce SUB
0x3cf PUSH2 0x100
0x3d2 EXP
0x3d3 SUB
0x3d4 DUP1
0x3d5 NOT
0x3d6 DUP3
0x3d7 MLOAD
0x3d8 AND
0x3d9 DUP2
0x3da DUP5
0x3db MLOAD
0x3dc AND
0x3dd DUP1
0x3de DUP3
0x3df OR
0x3e0 DUP6
0x3e1 MSTORE
0x3e2 POP
0x3e3 POP
0x3e4 POP
0x3e5 POP
0x3e6 POP
0x3e7 POP
0x3e8 SWAP1
0x3e9 POP
0x3ea ADD
0x3eb SWAP2
0x3ec POP
0x3ed POP
0x3ee PUSH1 0x40
0x3f0 MLOAD
0x3f1 DUP1
0x3f2 SWAP2
0x3f3 SUB
0x3f4 SWAP1
0x3f5 SHA3
0x3f6 PUSH1 0x0
0x3f8 NOT
0x3f9 AND
0x3fa PUSH1 0x0
0x3fc SLOAD
0x3fd PUSH1 0x0
0x3ff NOT
0x400 AND
0x401 EQ
0x402 ISZERO
0x403 PUSH2 0x476
0x406 JUMPI
---
0x3c8: JUMPDEST 
0x3c9: V290 = 0x1
0x3cc: V291 = 0x20
0x3ce: V292 = SUB 0x20 S2
0x3cf: V293 = 0x100
0x3d2: V294 = EXP 0x100 V292
0x3d3: V295 = SUB V294 0x1
0x3d5: V296 = NOT V295
0x3d7: V297 = M[S0]
0x3d8: V298 = AND V297 V296
0x3db: V299 = M[S1]
0x3dc: V300 = AND V299 V295
0x3df: V301 = OR V298 V300
0x3e1: M[S1] = V301
0x3ea: V302 = ADD V274 V273
0x3ee: V303 = 0x40
0x3f0: V304 = M[0x40]
0x3f3: V305 = SUB V302 V304
0x3f5: V306 = SHA3 V304 V305
0x3f6: V307 = 0x0
0x3f8: V308 = NOT 0x0
0x3f9: V309 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V306
0x3fa: V310 = 0x0
0x3fc: V311 = S[0x0]
0x3fd: V312 = 0x0
0x3ff: V313 = NOT 0x0
0x400: V314 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V311
0x401: V315 = EQ V314 V309
0x402: V316 = ISZERO V315
0x403: V317 = 0x476
0x406: JUMPI 0x476 V316
---
Entry stack: [V11, 0x189, V95, V267, V273, V273, V276, V274, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0x189, V95]

================================

Block 0x407
[0x407:0x416]
---
Predecessors: [0x3c8]
Successors: [0x417, 0x475]
---
0x407 PUSH8 0xde0b6b3a7640000
0x410 CALLVALUE
0x411 GT
0x412 ISZERO
0x413 PUSH2 0x475
0x416 JUMPI
---
0x407: V318 = 0xde0b6b3a7640000
0x410: V319 = CALLVALUE
0x411: V320 = GT V319 0xde0b6b3a7640000
0x412: V321 = ISZERO V320
0x413: V322 = 0x475
0x416: JUMPI 0x475 V321
---
Entry stack: [V11, 0x189, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V95]

================================

Block 0x417
[0x417:0x469]
---
Predecessors: [0x407]
Successors: [0x46a, 0x473]
---
0x417 CALLER
0x418 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42d AND
0x42e PUSH2 0x8fc
0x431 ADDRESS
0x432 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x447 AND
0x448 BALANCE
0x449 SWAP1
0x44a DUP2
0x44b ISZERO
0x44c MUL
0x44d SWAP1
0x44e PUSH1 0x40
0x450 MLOAD
0x451 PUSH1 0x0
0x453 PUSH1 0x40
0x455 MLOAD
0x456 DUP1
0x457 DUP4
0x458 SUB
0x459 DUP2
0x45a DUP6
0x45b DUP9
0x45c DUP9
0x45d CALL
0x45e SWAP4
0x45f POP
0x460 POP
0x461 POP
0x462 POP
0x463 ISZERO
0x464 DUP1
0x465 ISZERO
0x466 PUSH2 0x473
0x469 JUMPI
---
0x417: V323 = CALLER
0x418: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x42d: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x42e: V326 = 0x8fc
0x431: V327 = ADDRESS
0x432: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x447: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x448: V330 = BALANCE V329
0x44b: V331 = ISZERO V330
0x44c: V332 = MUL V331 0x8fc
0x44e: V333 = 0x40
0x450: V334 = M[0x40]
0x451: V335 = 0x0
0x453: V336 = 0x40
0x455: V337 = M[0x40]
0x458: V338 = SUB V334 V337
0x45d: V339 = CALL V332 V325 V330 V337 V338 V337 0x0
0x463: V340 = ISZERO V339
0x465: V341 = ISZERO V340
0x466: V342 = 0x473
0x469: JUMPI 0x473 V341
---
Entry stack: [V11, 0x189, V95]
Stack pops: 0
Stack additions: [V340]
Exit stack: [V11, 0x189, V95, V340]

================================

Block 0x46a
[0x46a:0x472]
---
Predecessors: [0x417]
Successors: []
---
0x46a RETURNDATASIZE
0x46b PUSH1 0x0
0x46d DUP1
0x46e RETURNDATACOPY
0x46f RETURNDATASIZE
0x470 PUSH1 0x0
0x472 REVERT
---
0x46a: V343 = RETURNDATASIZE
0x46b: V344 = 0x0
0x46e: RETURNDATACOPY 0x0 0x0 V343
0x46f: V345 = RETURNDATASIZE
0x470: V346 = 0x0
0x472: REVERT 0x0 V345
---
Entry stack: [V11, 0x189, V95, V340]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V95, V340]

================================

Block 0x473
[0x473:0x474]
---
Predecessors: [0x417]
Successors: [0x475]
---
0x473 JUMPDEST
0x474 POP
---
0x473: JUMPDEST 
---
Entry stack: [V11, 0x189, V95, V340]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x189, V95]

================================

Block 0x475
[0x475:0x475]
---
Predecessors: [0x407, 0x473]
Successors: [0x476]
---
0x475 JUMPDEST
---
0x475: JUMPDEST 
---
Entry stack: [V11, 0x189, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V95]

================================

Block 0x476
[0x476:0x478]
---
Predecessors: [0x3c8, 0x475]
Successors: [0x189]
---
0x476 JUMPDEST
0x477 POP
0x478 JUMP
---
0x476: JUMPDEST 
0x478: JUMP 0x189
---
Entry stack: [V11, 0x189, V95]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x479
[0x479:0x48b]
---
Predecessors: [0x197]
Successors: [0x48c, 0x497]
---
0x479 JUMPDEST
0x47a PUSH1 0x0
0x47c PUSH1 0x1
0x47e MUL
0x47f PUSH1 0x0
0x481 SLOAD
0x482 PUSH1 0x0
0x484 NOT
0x485 AND
0x486 EQ
0x487 ISZERO
0x488 PUSH2 0x497
0x48b JUMPI
---
0x479: JUMPDEST 
0x47a: V347 = 0x0
0x47c: V348 = 0x1
0x47e: V349 = MUL 0x1 0x0
0x47f: V350 = 0x0
0x481: V351 = S[0x0]
0x482: V352 = 0x0
0x484: V353 = NOT 0x0
0x485: V354 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V351
0x486: V355 = EQ V354 0x0
0x487: V356 = ISZERO V355
0x488: V357 = 0x497
0x48b: JUMPI 0x497 V356
---
Entry stack: [V11, 0x1ba, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ba, V114]

================================

Block 0x48c
[0x48c:0x496]
---
Predecessors: [0x479]
Successors: [0x497]
---
0x48c DUP1
0x48d PUSH1 0x0
0x48f DUP2
0x490 PUSH1 0x0
0x492 NOT
0x493 AND
0x494 SWAP1
0x495 SSTORE
0x496 POP
---
0x48d: V358 = 0x0
0x490: V359 = 0x0
0x492: V360 = NOT 0x0
0x493: V361 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V114
0x495: S[0x0] = V361
---
Entry stack: [V11, 0x1ba, V114]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1ba, V114]

================================

Block 0x497
[0x497:0x499]
---
Predecessors: [0x479, 0x48c]
Successors: [0x1ba]
---
0x497 JUMPDEST
0x498 POP
0x499 JUMP
---
0x497: JUMPDEST 
0x499: JUMP 0x1ba
---
Entry stack: [V11, 0x1ba, V114]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x49a
[0x49a:0x4f1]
---
Predecessors: [0x1c8]
Successors: [0x4f2, 0x4f6]
---
0x49a JUMPDEST
0x49b PUSH1 0x1
0x49d PUSH1 0x0
0x49f SWAP1
0x4a0 SLOAD
0x4a1 SWAP1
0x4a2 PUSH2 0x100
0x4a5 EXP
0x4a6 SWAP1
0x4a7 DIV
0x4a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bd AND
0x4be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d3 AND
0x4d4 CALLER
0x4d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ea AND
0x4eb EQ
0x4ec ISZERO
0x4ed ISZERO
0x4ee PUSH2 0x4f6
0x4f1 JUMPI
---
0x49a: JUMPDEST 
0x49b: V362 = 0x1
0x49d: V363 = 0x0
0x4a0: V364 = S[0x1]
0x4a2: V365 = 0x100
0x4a5: V366 = EXP 0x100 0x0
0x4a7: V367 = DIV V364 0x1
0x4a8: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bd: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x4be: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d3: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x4d4: V372 = CALLER
0x4d5: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ea: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x4eb: V375 = EQ V374 V371
0x4ec: V376 = ISZERO V375
0x4ed: V377 = ISZERO V376
0x4ee: V378 = 0x4f6
0x4f1: JUMPI 0x4f6 V377
---
Entry stack: [V11, 0x1d1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d1]

================================

Block 0x4f2
[0x4f2:0x4f5]
---
Predecessors: [0x49a]
Successors: []
---
0x4f2 PUSH1 0x0
0x4f4 DUP1
0x4f5 REVERT
---
0x4f2: V379 = 0x0
0x4f5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d1]

================================

Block 0x4f6
[0x4f6:0x530]
---
Predecessors: [0x49a]
Successors: []
---
0x4f6 JUMPDEST
0x4f7 PUSH1 0x1
0x4f9 PUSH1 0x0
0x4fb SWAP1
0x4fc SLOAD
0x4fd SWAP1
0x4fe PUSH2 0x100
0x501 EXP
0x502 SWAP1
0x503 DIV
0x504 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x519 AND
0x51a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52f AND
0x530 SELFDESTRUCT
---
0x4f6: JUMPDEST 
0x4f7: V380 = 0x1
0x4f9: V381 = 0x0
0x4fc: V382 = S[0x1]
0x4fe: V383 = 0x100
0x501: V384 = EXP 0x100 0x0
0x503: V385 = DIV V382 0x1
0x504: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x519: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x51a: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x52f: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x530: SELFDESTRUCT V389
---
Entry stack: [V11, 0x1d1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d1]

================================

Block 0x531
[0x531:0x562]
---
Predecessors: []
Successors: []
---
0x531 STOP
0x532 LOG1
0x533 PUSH6 0x627a7a723058
0x53a SHA3
0x53b DUP8
0x53c MISSING 0xf
0x53d MISSING 0xd3
0x53e SWAP10
0x53f PUSH2 0xb437
0x542 DUP11
0x543 STOP
0x544 MISSING 0xe5
0x545 PUSH29 0xaa5edd24cac7150fb8969d1e4d6ead9142f4b6462b0029
---
0x531: STOP 
0x532: LOG S0 S1 S2
0x533: V390 = 0x627a7a723058
0x53a: V391 = SHA3 0x627a7a723058 S3
0x53c: MISSING 0xf
0x53d: MISSING 0xd3
0x53f: V392 = 0xb437
0x543: STOP 
0x544: MISSING 0xe5
0x545: V393 = 0xaa5edd24cac7150fb8969d1e4d6ead9142f4b6462b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S10, V391, S4, S5, S6, S7, S8, S9, S10, S9, 0xb437, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, 0xaa5edd24cac7150fb8969d1e4d6ead9142f4b6462b0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xac298dc
Entry block: 0x6f
Exit block: 0x84
Body: 0x6f, 0x77, 0x7b, 0x84, 0x1d3

Function 1:
Public function signature: 0x2bc38531
Entry block: 0xc6
Exit block: 0x12d
Body: 0xc6, 0xce, 0xd2, 0x12d, 0x1fd, 0x210, 0x223, 0x22e, 0x248, 0x28c, 0x297, 0x2b1, 0x2e9

Function 2:
Public function signature: 0x31fb67c2
Entry block: 0x12f
Exit block: 0x46a
Body: 0x12f, 0x189, 0x2ec, 0x322, 0x326, 0x33a, 0x345, 0x35f, 0x3a3, 0x3ae, 0x3c8, 0x407, 0x417, 0x46a, 0x473, 0x475, 0x476

Function 3:
Public function signature: 0x578ff67a
Entry block: 0x18b
Exit block: 0x1ba
Body: 0x18b, 0x193, 0x197, 0x1ba, 0x479, 0x48c, 0x497

Function 4:
Public function signature: 0xf2a75fe4
Entry block: 0x1bc
Exit block: 0x4f6
Body: 0x1bc, 0x1c4, 0x1c8, 0x49a, 0x4f2, 0x4f6

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

