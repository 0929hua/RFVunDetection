Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2d2c44f2
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x84
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2d2c44f2
0x3b: V13 = EQ V11 0x2d2c44f2
0x3c: V14 = 0x84
0x3f: JUMPI 0x84 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8c]
---
0x40 DUP1
0x41 PUSH4 0x2e1a7d4d
0x46 EQ
0x47 PUSH2 0x8c
0x4a JUMPI
---
0x41: V15 = 0x2e1a7d4d
0x46: V16 = EQ 0x2e1a7d4d V11
0x47: V17 = 0x8c
0x4a: JUMPI 0x8c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa4]
---
0x4b DUP1
0x4c PUSH4 0x3ee2d7c2
0x51 EQ
0x52 PUSH2 0xa4
0x55 JUMPI
---
0x4c: V18 = 0x3ee2d7c2
0x51: V19 = EQ 0x3ee2d7c2 V11
0x52: V20 = 0xa4
0x55: JUMPI 0xa4 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xd7]
---
0x56 DUP1
0x57 PUSH4 0x4fb2e45d
0x5c EQ
0x5d PUSH2 0xd7
0x60 JUMPI
---
0x57: V21 = 0x4fb2e45d
0x5c: V22 = EQ 0x4fb2e45d V11
0x5d: V23 = 0xd7
0x60: JUMPI 0xd7 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xf8]
---
0x61 DUP1
0x62 PUSH4 0xb4a99a4e
0x67 EQ
0x68 PUSH2 0xf8
0x6b JUMPI
---
0x62: V24 = 0xb4a99a4e
0x67: V25 = EQ 0xb4a99a4e V11
0x68: V26 = 0xf8
0x6b: JUMPI 0xf8 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x129]
---
0x6c DUP1
0x6d PUSH4 0xbe6d055a
0x72 EQ
0x73 PUSH2 0x129
0x76 JUMPI
---
0x6d: V27 = 0xbe6d055a
0x72: V28 = EQ 0xbe6d055a V11
0x73: V29 = 0x129
0x76: JUMPI 0x129 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x183]
---
0x77 DUP1
0x78 PUSH4 0xd0e30db0
0x7d EQ
0x7e PUSH2 0x183
0x81 JUMPI
---
0x78: V30 = 0xd0e30db0
0x7d: V31 = EQ 0xd0e30db0 V11
0x7e: V32 = 0x183
0x81: JUMPI 0x183 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x0, 0x77, 0x1ba, 0x222, 0x24b, 0x2e9, 0x313]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x84
[0x84:0x8b]
---
Predecessors: [0xd]
Successors: [0x18b]
---
0x84 JUMPDEST
0x85 PUSH2 0x82
0x88 PUSH2 0x18b
0x8b JUMP
---
0x84: JUMPDEST 
0x85: V33 = 0x82
0x88: V34 = 0x18b
0x8b: JUMP 0x18b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0x8c
[0x8c:0x93]
---
Predecessors: [0x40]
Successors: [0x94, 0x98]
---
0x8c JUMPDEST
0x8d CALLVALUE
0x8e DUP1
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8c: JUMPDEST 
0x8d: V35 = CALLVALUE
0x8f: V36 = ISZERO V35
0x90: V37 = 0x98
0x93: JUMPI 0x98 V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V35]
Exit stack: [V11, V35]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8c]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V38 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V11, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V35]

================================

Block 0x98
[0x98:0xa3]
---
Predecessors: [0x8c]
Successors: [0x1bc]
---
0x98 JUMPDEST
0x99 POP
0x9a PUSH2 0x82
0x9d PUSH1 0x4
0x9f CALLDATALOAD
0xa0 PUSH2 0x1bc
0xa3 JUMP
---
0x98: JUMPDEST 
0x9a: V39 = 0x82
0x9d: V40 = 0x4
0x9f: V41 = CALLDATALOAD 0x4
0xa0: V42 = 0x1bc
0xa3: JUMP 0x1bc
---
Entry stack: [V11, V35]
Stack pops: 1
Stack additions: [0x82, V41]
Exit stack: [V11, 0x82, V41]

================================

Block 0xa4
[0xa4:0xab]
---
Predecessors: [0x4b]
Successors: [0xac, 0xb0]
---
0xa4 JUMPDEST
0xa5 CALLVALUE
0xa6 DUP1
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa4: JUMPDEST 
0xa5: V43 = CALLVALUE
0xa7: V44 = ISZERO V43
0xa8: V45 = 0xb0
0xab: JUMPI 0xb0 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa4]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V46 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0xb0
[0xb0:0xc4]
---
Predecessors: [0xa4]
Successors: [0x225]
---
0xb0 JUMPDEST
0xb1 POP
0xb2 PUSH2 0xc5
0xb5 PUSH1 0x1
0xb7 PUSH1 0xa0
0xb9 PUSH1 0x2
0xbb EXP
0xbc SUB
0xbd PUSH1 0x4
0xbf CALLDATALOAD
0xc0 AND
0xc1 PUSH2 0x225
0xc4 JUMP
---
0xb0: JUMPDEST 
0xb2: V47 = 0xc5
0xb5: V48 = 0x1
0xb7: V49 = 0xa0
0xb9: V50 = 0x2
0xbb: V51 = EXP 0x2 0xa0
0xbc: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd: V53 = 0x4
0xbf: V54 = CALLDATALOAD 0x4
0xc0: V55 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0xc1: V56 = 0x225
0xc4: JUMP 0x225
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0xc5, V55]
Exit stack: [V11, 0xc5, V55]

================================

Block 0xc5
[0xc5:0xd6]
---
Predecessors: [0x225]
Successors: []
---
0xc5 JUMPDEST
0xc6 PUSH1 0x40
0xc8 DUP1
0xc9 MLOAD
0xca SWAP2
0xcb DUP3
0xcc MSTORE
0xcd MLOAD
0xce SWAP1
0xcf DUP2
0xd0 SWAP1
0xd1 SUB
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP1
0xd6 RETURN
---
0xc5: JUMPDEST 
0xc6: V57 = 0x40
0xc9: V58 = M[0x40]
0xcc: M[V58] = V185
0xcd: V59 = M[0x40]
0xd1: V60 = SUB V58 V59
0xd2: V61 = 0x20
0xd4: V62 = ADD 0x20 V60
0xd6: RETURN V59 V62
---
Entry stack: [V11, 0xc5, V185]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc5]

================================

Block 0xd7
[0xd7:0xde]
---
Predecessors: [0x56]
Successors: [0xdf, 0xe3]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 DUP1
0xda ISZERO
0xdb PUSH2 0xe3
0xde JUMPI
---
0xd7: JUMPDEST 
0xd8: V63 = CALLVALUE
0xda: V64 = ISZERO V63
0xdb: V65 = 0xe3
0xde: JUMPI 0xe3 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0xdf
[0xdf:0xe2]
---
Predecessors: [0xd7]
Successors: []
---
0xdf PUSH1 0x0
0xe1 DUP1
0xe2 REVERT
---
0xdf: V66 = 0x0
0xe2: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0xe3
[0xe3:0xf7]
---
Predecessors: [0xd7]
Successors: [0x237]
---
0xe3 JUMPDEST
0xe4 POP
0xe5 PUSH2 0x82
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 PUSH1 0x4
0xf2 CALLDATALOAD
0xf3 AND
0xf4 PUSH2 0x237
0xf7 JUMP
---
0xe3: JUMPDEST 
0xe5: V67 = 0x82
0xe8: V68 = 0x1
0xea: V69 = 0xa0
0xec: V70 = 0x2
0xee: V71 = EXP 0x2 0xa0
0xef: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V73 = 0x4
0xf2: V74 = CALLDATALOAD 0x4
0xf3: V75 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0xf4: V76 = 0x237
0xf7: JUMP 0x237
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [0x82, V75]
Exit stack: [V11, 0x82, V75]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0x61]
Successors: [0x100, 0x104]
---
0xf8 JUMPDEST
0xf9 CALLVALUE
0xfa DUP1
0xfb ISZERO
0xfc PUSH2 0x104
0xff JUMPI
---
0xf8: JUMPDEST 
0xf9: V77 = CALLVALUE
0xfb: V78 = ISZERO V77
0xfc: V79 = 0x104
0xff: JUMPI 0x104 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x100
[0x100:0x103]
---
Predecessors: [0xf8]
Successors: []
---
0x100 PUSH1 0x0
0x102 DUP1
0x103 REVERT
---
0x100: V80 = 0x0
0x103: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x104
[0x104:0x10c]
---
Predecessors: [0xf8]
Successors: [0x277]
---
0x104 JUMPDEST
0x105 POP
0x106 PUSH2 0x10d
0x109 PUSH2 0x277
0x10c JUMP
---
0x104: JUMPDEST 
0x106: V81 = 0x10d
0x109: V82 = 0x277
0x10c: JUMP 0x277
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x10d]
Exit stack: [V11, 0x10d]

================================

Block 0x10d
[0x10d:0x128]
---
Predecessors: [0x277]
Successors: []
---
0x10d JUMPDEST
0x10e PUSH1 0x40
0x110 DUP1
0x111 MLOAD
0x112 PUSH1 0x1
0x114 PUSH1 0xa0
0x116 PUSH1 0x2
0x118 EXP
0x119 SUB
0x11a SWAP1
0x11b SWAP3
0x11c AND
0x11d DUP3
0x11e MSTORE
0x11f MLOAD
0x120 SWAP1
0x121 DUP2
0x122 SWAP1
0x123 SUB
0x124 PUSH1 0x20
0x126 ADD
0x127 SWAP1
0x128 RETURN
---
0x10d: JUMPDEST 
0x10e: V83 = 0x40
0x111: V84 = M[0x40]
0x112: V85 = 0x1
0x114: V86 = 0xa0
0x116: V87 = 0x2
0x118: V88 = EXP 0x2 0xa0
0x119: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V90 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x11e: M[V84] = V90
0x11f: V91 = M[0x40]
0x123: V92 = SUB V84 V91
0x124: V93 = 0x20
0x126: V94 = ADD 0x20 V92
0x128: RETURN V91 V94
---
Entry stack: [V11, 0x10d, V217]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x10d]

================================

Block 0x129
[0x129:0x182]
---
Predecessors: [0x6c]
Successors: [0x286]
---
0x129 JUMPDEST
0x12a PUSH1 0x40
0x12c DUP1
0x12d MLOAD
0x12e PUSH1 0x20
0x130 PUSH1 0x4
0x132 PUSH1 0x24
0x134 DUP1
0x135 CALLDATALOAD
0x136 DUP3
0x137 DUP2
0x138 ADD
0x139 CALLDATALOAD
0x13a PUSH1 0x1f
0x13c DUP2
0x13d ADD
0x13e DUP6
0x13f SWAP1
0x140 DIV
0x141 DUP6
0x142 MUL
0x143 DUP7
0x144 ADD
0x145 DUP6
0x146 ADD
0x147 SWAP1
0x148 SWAP7
0x149 MSTORE
0x14a DUP6
0x14b DUP6
0x14c MSTORE
0x14d PUSH2 0x82
0x150 SWAP6
0x151 DUP4
0x152 CALLDATALOAD
0x153 PUSH1 0x1
0x155 PUSH1 0xa0
0x157 PUSH1 0x2
0x159 EXP
0x15a SUB
0x15b AND
0x15c SWAP6
0x15d CALLDATASIZE
0x15e SWAP6
0x15f PUSH1 0x44
0x161 SWAP5
0x162 SWAP2
0x163 SWAP4
0x164 SWAP1
0x165 SWAP2
0x166 ADD
0x167 SWAP2
0x168 SWAP1
0x169 DUP2
0x16a SWAP1
0x16b DUP5
0x16c ADD
0x16d DUP4
0x16e DUP3
0x16f DUP1
0x170 DUP3
0x171 DUP5
0x172 CALLDATACOPY
0x173 POP
0x174 SWAP5
0x175 SWAP8
0x176 POP
0x177 PUSH2 0x286
0x17a SWAP7
0x17b POP
0x17c POP
0x17d POP
0x17e POP
0x17f POP
0x180 POP
0x181 POP
0x182 JUMP
---
0x129: JUMPDEST 
0x12a: V95 = 0x40
0x12d: V96 = M[0x40]
0x12e: V97 = 0x20
0x130: V98 = 0x4
0x132: V99 = 0x24
0x135: V100 = CALLDATALOAD 0x24
0x138: V101 = ADD V100 0x4
0x139: V102 = CALLDATALOAD V101
0x13a: V103 = 0x1f
0x13d: V104 = ADD V102 0x1f
0x140: V105 = DIV V104 0x20
0x142: V106 = MUL 0x20 V105
0x144: V107 = ADD V96 V106
0x146: V108 = ADD 0x20 V107
0x149: M[0x40] = V108
0x14c: M[V96] = V102
0x14d: V109 = 0x82
0x152: V110 = CALLDATALOAD 0x4
0x153: V111 = 0x1
0x155: V112 = 0xa0
0x157: V113 = 0x2
0x159: V114 = EXP 0x2 0xa0
0x15a: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15b: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x15d: V117 = CALLDATASIZE
0x15f: V118 = 0x44
0x166: V119 = ADD 0x24 V100
0x16c: V120 = ADD V96 0x20
0x172: CALLDATACOPY V120 V119 V102
0x177: V121 = 0x286
0x182: JUMP 0x286
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V116, V96]
Exit stack: [V11, 0x82, V116, V96]

================================

Block 0x183
[0x183:0x18a]
---
Predecessors: [0x77]
Successors: [0x302]
---
0x183 JUMPDEST
0x184 PUSH2 0x82
0x187 PUSH2 0x302
0x18a JUMP
---
0x183: JUMPDEST 
0x184: V122 = 0x82
0x187: V123 = 0x302
0x18a: JUMP 0x302
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0x18b
[0x18b:0x193]
---
Predecessors: [0x84]
Successors: [0x194, 0x1ba]
---
0x18b JUMPDEST
0x18c CALLER
0x18d ORIGIN
0x18e EQ
0x18f ISZERO
0x190 PUSH2 0x1ba
0x193 JUMPI
---
0x18b: JUMPDEST 
0x18c: V124 = CALLER
0x18d: V125 = ORIGIN
0x18e: V126 = EQ V125 V124
0x18f: V127 = ISZERO V126
0x190: V128 = 0x1ba
0x193: JUMPI 0x1ba V127
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x194
[0x194:0x1b9]
---
Predecessors: [0x18b]
Successors: [0x302]
---
0x194 PUSH1 0x1
0x196 DUP1
0x197 SLOAD
0x198 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ad NOT
0x1ae AND
0x1af CALLER
0x1b0 OR
0x1b1 SWAP1
0x1b2 SSTORE
0x1b3 PUSH2 0x1ba
0x1b6 PUSH2 0x302
0x1b9 JUMP
---
0x194: V129 = 0x1
0x197: V130 = S[0x1]
0x198: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V132 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V133 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V130
0x1af: V134 = CALLER
0x1b0: V135 = OR V134 V133
0x1b2: S[0x1] = V135
0x1b3: V136 = 0x1ba
0x1b6: V137 = 0x302
0x1b9: JUMP 0x302
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V11, 0x82, 0x1ba]

================================

Block 0x1ba
[0x1ba:0x1bb]
---
Predecessors: [0x18b, 0x1ba, 0x302, 0x313]
Successors: [0x82, 0x1ba]
---
0x1ba JUMPDEST
0x1bb JUMP
---
0x1ba: JUMPDEST 
0x1bb: JUMP S0
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x1bc
[0x1bc:0x1cf]
---
Predecessors: [0x98]
Successors: [0x1d0, 0x222]
---
0x1bc JUMPDEST
0x1bd PUSH1 0x0
0x1bf SLOAD
0x1c0 PUSH1 0x1
0x1c2 PUSH1 0xa0
0x1c4 PUSH1 0x2
0x1c6 EXP
0x1c7 SUB
0x1c8 AND
0x1c9 CALLER
0x1ca EQ
0x1cb ISZERO
0x1cc PUSH2 0x222
0x1cf JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V138 = 0x0
0x1bf: V139 = S[0x0]
0x1c0: V140 = 0x1
0x1c2: V141 = 0xa0
0x1c4: V142 = 0x2
0x1c6: V143 = EXP 0x2 0xa0
0x1c7: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x1c9: V146 = CALLER
0x1ca: V147 = EQ V146 V145
0x1cb: V148 = ISZERO V147
0x1cc: V149 = 0x222
0x1cf: JUMPI 0x222 V148
---
Entry stack: [V11, 0x82, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41]

================================

Block 0x1d0
[0x1d0:0x1d9]
---
Predecessors: [0x1bc]
Successors: [0x1da, 0x1ee]
---
0x1d0 PUSH1 0x0
0x1d2 DUP2
0x1d3 GT
0x1d4 DUP1
0x1d5 ISZERO
0x1d6 PUSH2 0x1ee
0x1d9 JUMPI
---
0x1d0: V150 = 0x0
0x1d3: V151 = GT V41 0x0
0x1d5: V152 = ISZERO V151
0x1d6: V153 = 0x1ee
0x1d9: JUMPI 0x1ee V152
---
Entry stack: [V11, 0x82, V41]
Stack pops: 1
Stack additions: [S0, V151]
Exit stack: [V11, 0x82, V41, V151]

================================

Block 0x1da
[0x1da:0x1ed]
---
Predecessors: [0x1d0]
Successors: [0x1ee]
---
0x1da POP
0x1db CALLER
0x1dc PUSH1 0x0
0x1de SWAP1
0x1df DUP2
0x1e0 MSTORE
0x1e1 PUSH1 0x2
0x1e3 PUSH1 0x20
0x1e5 MSTORE
0x1e6 PUSH1 0x40
0x1e8 SWAP1
0x1e9 SHA3
0x1ea SLOAD
0x1eb DUP2
0x1ec GT
0x1ed ISZERO
---
0x1db: V154 = CALLER
0x1dc: V155 = 0x0
0x1e0: M[0x0] = V154
0x1e1: V156 = 0x2
0x1e3: V157 = 0x20
0x1e5: M[0x20] = 0x2
0x1e6: V158 = 0x40
0x1e9: V159 = SHA3 0x0 0x40
0x1ea: V160 = S[V159]
0x1ec: V161 = GT V41 V160
0x1ed: V162 = ISZERO V161
---
Entry stack: [V11, 0x82, V41, V151]
Stack pops: 2
Stack additions: [S1, V162]
Exit stack: [V11, 0x82, V41, V162]

================================

Block 0x1ee
[0x1ee:0x1f3]
---
Predecessors: [0x1d0, 0x1da]
Successors: [0x1f4, 0x222]
---
0x1ee JUMPDEST
0x1ef ISZERO
0x1f0 PUSH2 0x222
0x1f3 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V163 = ISZERO S0
0x1f0: V164 = 0x222
0x1f3: JUMPI 0x222 V163
---
Entry stack: [V11, 0x82, V41, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82, V41]

================================

Block 0x1f4
[0x1f4:0x216]
---
Predecessors: [0x1ee]
Successors: [0x217, 0x220]
---
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 CALLER
0x1f8 SWAP1
0x1f9 DUP3
0x1fa ISZERO
0x1fb PUSH2 0x8fc
0x1fe MUL
0x1ff SWAP1
0x200 DUP4
0x201 SWAP1
0x202 PUSH1 0x0
0x204 DUP2
0x205 DUP2
0x206 DUP2
0x207 DUP6
0x208 DUP9
0x209 DUP9
0x20a CALL
0x20b SWAP4
0x20c POP
0x20d POP
0x20e POP
0x20f POP
0x210 ISZERO
0x211 DUP1
0x212 ISZERO
0x213 PUSH2 0x220
0x216 JUMPI
---
0x1f4: V165 = 0x40
0x1f6: V166 = M[0x40]
0x1f7: V167 = CALLER
0x1fa: V168 = ISZERO V41
0x1fb: V169 = 0x8fc
0x1fe: V170 = MUL 0x8fc V168
0x202: V171 = 0x0
0x20a: V172 = CALL V170 V167 V41 V166 0x0 V166 0x0
0x210: V173 = ISZERO V172
0x212: V174 = ISZERO V173
0x213: V175 = 0x220
0x216: JUMPI 0x220 V174
---
Entry stack: [V11, 0x82, V41]
Stack pops: 1
Stack additions: [S0, V173]
Exit stack: [V11, 0x82, V41, V173]

================================

Block 0x217
[0x217:0x21f]
---
Predecessors: [0x1f4]
Successors: []
---
0x217 RETURNDATASIZE
0x218 PUSH1 0x0
0x21a DUP1
0x21b RETURNDATACOPY
0x21c RETURNDATASIZE
0x21d PUSH1 0x0
0x21f REVERT
---
0x217: V176 = RETURNDATASIZE
0x218: V177 = 0x0
0x21b: RETURNDATACOPY 0x0 0x0 V176
0x21c: V178 = RETURNDATASIZE
0x21d: V179 = 0x0
0x21f: REVERT 0x0 V178
---
Entry stack: [V11, 0x82, V41, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, V173]

================================

Block 0x220
[0x220:0x221]
---
Predecessors: [0x1f4]
Successors: [0x222]
---
0x220 JUMPDEST
0x221 POP
---
0x220: JUMPDEST 
---
Entry stack: [V11, 0x82, V41, V173]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82, V41]

================================

Block 0x222
[0x222:0x224]
---
Predecessors: [0x1bc, 0x1ee, 0x220, 0x237]
Successors: [0x82]
---
0x222 JUMPDEST
0x223 POP
0x224 JUMP
---
0x222: JUMPDEST 
0x224: JUMP 0x82
---
Entry stack: [V11, 0x82, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x225
[0x225:0x236]
---
Predecessors: [0xb0]
Successors: [0xc5]
---
0x225 JUMPDEST
0x226 PUSH1 0x2
0x228 PUSH1 0x20
0x22a MSTORE
0x22b PUSH1 0x0
0x22d SWAP1
0x22e DUP2
0x22f MSTORE
0x230 PUSH1 0x40
0x232 SWAP1
0x233 SHA3
0x234 SLOAD
0x235 DUP2
0x236 JUMP
---
0x225: JUMPDEST 
0x226: V180 = 0x2
0x228: V181 = 0x20
0x22a: M[0x20] = 0x2
0x22b: V182 = 0x0
0x22f: M[0x0] = V55
0x230: V183 = 0x40
0x233: V184 = SHA3 0x0 0x40
0x234: V185 = S[V184]
0x236: JUMP 0xc5
---
Entry stack: [V11, 0xc5, V55]
Stack pops: 2
Stack additions: [S1, V185]
Exit stack: [V11, 0xc5, V185]

================================

Block 0x237
[0x237:0x24a]
---
Predecessors: [0xe3]
Successors: [0x222, 0x24b]
---
0x237 JUMPDEST
0x238 PUSH1 0x0
0x23a SLOAD
0x23b PUSH1 0x1
0x23d PUSH1 0xa0
0x23f PUSH1 0x2
0x241 EXP
0x242 SUB
0x243 AND
0x244 CALLER
0x245 EQ
0x246 ISZERO
0x247 PUSH2 0x222
0x24a JUMPI
---
0x237: JUMPDEST 
0x238: V186 = 0x0
0x23a: V187 = S[0x0]
0x23b: V188 = 0x1
0x23d: V189 = 0xa0
0x23f: V190 = 0x2
0x241: V191 = EXP 0x2 0xa0
0x242: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x243: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x244: V194 = CALLER
0x245: V195 = EQ V194 V193
0x246: V196 = ISZERO V195
0x247: V197 = 0x222
0x24a: JUMPI 0x222 V196
---
Entry stack: [V11, 0x82, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V75]

================================

Block 0x24b
[0x24b:0x276]
---
Predecessors: [0x237]
Successors: [0x82]
---
0x24b PUSH1 0x0
0x24d DUP1
0x24e SLOAD
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 DUP4
0x258 AND
0x259 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26e NOT
0x26f SWAP1
0x270 SWAP2
0x271 AND
0x272 OR
0x273 SWAP1
0x274 SSTORE
0x275 POP
0x276 JUMP
---
0x24b: V198 = 0x0
0x24e: V199 = S[0x0]
0x24f: V200 = 0x1
0x251: V201 = 0xa0
0x253: V202 = 0x2
0x255: V203 = EXP 0x2 0xa0
0x256: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x258: V205 = AND V75 0xffffffffffffffffffffffffffffffffffffffff
0x259: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V207 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x271: V208 = AND V199 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x272: V209 = OR V208 V205
0x274: S[0x0] = V209
0x276: JUMP 0x82
---
Entry stack: [V11, 0x82, V75]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x277
[0x277:0x285]
---
Predecessors: [0x104]
Successors: [0x10d]
---
0x277 JUMPDEST
0x278 PUSH1 0x1
0x27a SLOAD
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 AND
0x284 DUP2
0x285 JUMP
---
0x277: JUMPDEST 
0x278: V210 = 0x1
0x27a: V211 = S[0x1]
0x27b: V212 = 0x1
0x27d: V213 = 0xa0
0x27f: V214 = 0x2
0x281: V215 = EXP 0x2 0xa0
0x282: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x283: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x285: JUMP 0x10d
---
Entry stack: [V11, 0x10d]
Stack pops: 1
Stack additions: [S0, V217]
Exit stack: [V11, 0x10d, V217]

================================

Block 0x286
[0x286:0x2a3]
---
Predecessors: [0x129]
Successors: [0x2a4]
---
0x286 JUMPDEST
0x287 DUP2
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 AND
0x291 CALLVALUE
0x292 DUP3
0x293 PUSH1 0x40
0x295 MLOAD
0x296 DUP1
0x297 DUP3
0x298 DUP1
0x299 MLOAD
0x29a SWAP1
0x29b PUSH1 0x20
0x29d ADD
0x29e SWAP1
0x29f DUP1
0x2a0 DUP4
0x2a1 DUP4
0x2a2 PUSH1 0x0
---
0x286: JUMPDEST 
0x288: V218 = 0x1
0x28a: V219 = 0xa0
0x28c: V220 = 0x2
0x28e: V221 = EXP 0x2 0xa0
0x28f: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x291: V224 = CALLVALUE
0x293: V225 = 0x40
0x295: V226 = M[0x40]
0x299: V227 = M[V96]
0x29b: V228 = 0x20
0x29d: V229 = ADD 0x20 V96
0x2a2: V230 = 0x0
---
Entry stack: [V11, 0x82, V116, V96]
Stack pops: 2
Stack additions: [S1, S0, V223, V224, S0, V226, V226, V229, V227, V227, V226, V229, 0x0]
Exit stack: [V11, 0x82, V116, V96, V223, V224, V96, V226, V226, V229, V227, V227, V226, V229, 0x0]

================================

Block 0x2a4
[0x2a4:0x2ac]
---
Predecessors: [0x286, 0x2ad]
Successors: [0x2ad, 0x2bc]
---
0x2a4 JUMPDEST
0x2a5 DUP4
0x2a6 DUP2
0x2a7 LT
0x2a8 ISZERO
0x2a9 PUSH2 0x2bc
0x2ac JUMPI
---
0x2a4: JUMPDEST 
0x2a7: V231 = LT S0 V227
0x2a8: V232 = ISZERO V231
0x2a9: V233 = 0x2bc
0x2ac: JUMPI 0x2bc V232
---
Entry stack: [V11, 0x82, V116, V96, V223, V224, V96, V226, V226, V229, V227, V227, V226, V229, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x82, V116, V96, V223, V224, V96, V226, V226, V229, V227, V227, V226, V229, S0]

================================

Block 0x2ad
[0x2ad:0x2bb]
---
Predecessors: [0x2a4]
Successors: [0x2a4]
---
0x2ad DUP2
0x2ae DUP2
0x2af ADD
0x2b0 MLOAD
0x2b1 DUP4
0x2b2 DUP3
0x2b3 ADD
0x2b4 MSTORE
0x2b5 PUSH1 0x20
0x2b7 ADD
0x2b8 PUSH2 0x2a4
0x2bb JUMP
---
0x2af: V234 = ADD S0 V229
0x2b0: V235 = M[V234]
0x2b3: V236 = ADD S0 V226
0x2b4: M[V236] = V235
0x2b5: V237 = 0x20
0x2b7: V238 = ADD 0x20 S0
0x2b8: V239 = 0x2a4
0x2bb: JUMP 0x2a4
---
Entry stack: [V11, 0x82, V116, V96, V223, V224, V96, V226, V226, V229, V227, V227, V226, V229, S0]
Stack pops: 3
Stack additions: [S2, S1, V238]
Exit stack: [V11, 0x82, V116, V96, V223, V224, V96, V226, V226, V229, V227, V227, V226, V229, V238]

================================

Block 0x2bc
[0x2bc:0x2cf]
---
Predecessors: [0x2a4]
Successors: [0x2d0, 0x2e9]
---
0x2bc JUMPDEST
0x2bd POP
0x2be POP
0x2bf POP
0x2c0 POP
0x2c1 SWAP1
0x2c2 POP
0x2c3 SWAP1
0x2c4 DUP2
0x2c5 ADD
0x2c6 SWAP1
0x2c7 PUSH1 0x1f
0x2c9 AND
0x2ca DUP1
0x2cb ISZERO
0x2cc PUSH2 0x2e9
0x2cf JUMPI
---
0x2bc: JUMPDEST 
0x2c5: V240 = ADD V227 V226
0x2c7: V241 = 0x1f
0x2c9: V242 = AND 0x1f V227
0x2cb: V243 = ISZERO V242
0x2cc: V244 = 0x2e9
0x2cf: JUMPI 0x2e9 V243
---
Entry stack: [V11, 0x82, V116, V96, V223, V224, V96, V226, V226, V229, V227, V227, V226, V229, S0]
Stack pops: 7
Stack additions: [V240, V242]
Exit stack: [V11, 0x82, V116, V96, V223, V224, V96, V226, V240, V242]

================================

Block 0x2d0
[0x2d0:0x2e8]
---
Predecessors: [0x2bc]
Successors: [0x2e9]
---
0x2d0 DUP1
0x2d1 DUP3
0x2d2 SUB
0x2d3 DUP1
0x2d4 MLOAD
0x2d5 PUSH1 0x1
0x2d7 DUP4
0x2d8 PUSH1 0x20
0x2da SUB
0x2db PUSH2 0x100
0x2de EXP
0x2df SUB
0x2e0 NOT
0x2e1 AND
0x2e2 DUP2
0x2e3 MSTORE
0x2e4 PUSH1 0x20
0x2e6 ADD
0x2e7 SWAP2
0x2e8 POP
---
0x2d2: V245 = SUB V240 V242
0x2d4: V246 = M[V245]
0x2d5: V247 = 0x1
0x2d8: V248 = 0x20
0x2da: V249 = SUB 0x20 V242
0x2db: V250 = 0x100
0x2de: V251 = EXP 0x100 V249
0x2df: V252 = SUB V251 0x1
0x2e0: V253 = NOT V252
0x2e1: V254 = AND V253 V246
0x2e3: M[V245] = V254
0x2e4: V255 = 0x20
0x2e6: V256 = ADD 0x20 V245
---
Entry stack: [V11, 0x82, V116, V96, V223, V224, V96, V226, V240, V242]
Stack pops: 2
Stack additions: [V256, S0]
Exit stack: [V11, 0x82, V116, V96, V223, V224, V96, V226, V256, V242]

================================

Block 0x2e9
[0x2e9:0x301]
---
Predecessors: [0x2bc, 0x2d0]
Successors: [0x82]
---
0x2e9 JUMPDEST
0x2ea POP
0x2eb SWAP2
0x2ec POP
0x2ed POP
0x2ee PUSH1 0x0
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 DUP4
0x2f5 SUB
0x2f6 DUP2
0x2f7 DUP6
0x2f8 DUP8
0x2f9 GAS
0x2fa CALL
0x2fb POP
0x2fc POP
0x2fd POP
0x2fe POP
0x2ff POP
0x300 POP
0x301 JUMP
---
0x2e9: JUMPDEST 
0x2ee: V257 = 0x0
0x2f0: V258 = 0x40
0x2f2: V259 = M[0x40]
0x2f5: V260 = SUB S1 V259
0x2f9: V261 = GAS
0x2fa: V262 = CALL V261 V223 V224 V259 V260 V259 0x0
0x301: JUMP 0x82
---
Entry stack: [V11, 0x82, V116, V96, V223, V224, V96, V226, S1, V242]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x302
[0x302:0x312]
---
Predecessors: [0x183, 0x194]
Successors: [0x1ba, 0x313]
---
0x302 JUMPDEST
0x303 PUSH8 0x6f05b59d3b20000
0x30c CALLVALUE
0x30d GT
0x30e ISZERO
0x30f PUSH2 0x1ba
0x312 JUMPI
---
0x302: JUMPDEST 
0x303: V263 = 0x6f05b59d3b20000
0x30c: V264 = CALLVALUE
0x30d: V265 = GT V264 0x6f05b59d3b20000
0x30e: V266 = ISZERO V265
0x30f: V267 = 0x1ba
0x312: JUMPI 0x1ba V266
---
Entry stack: [V11, S1, {0x82, 0x1ba}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x82, 0x1ba}]

================================

Block 0x313
[0x313:0x328]
---
Predecessors: [0x302]
Successors: [0x82, 0x1ba]
---
0x313 CALLER
0x314 PUSH1 0x0
0x316 SWAP1
0x317 DUP2
0x318 MSTORE
0x319 PUSH1 0x2
0x31b PUSH1 0x20
0x31d MSTORE
0x31e PUSH1 0x40
0x320 SWAP1
0x321 SHA3
0x322 DUP1
0x323 SLOAD
0x324 CALLVALUE
0x325 ADD
0x326 SWAP1
0x327 SSTORE
0x328 JUMP
---
0x313: V268 = CALLER
0x314: V269 = 0x0
0x318: M[0x0] = V268
0x319: V270 = 0x2
0x31b: V271 = 0x20
0x31d: M[0x20] = 0x2
0x31e: V272 = 0x40
0x321: V273 = SHA3 0x0 0x40
0x323: V274 = S[V273]
0x324: V275 = CALLVALUE
0x325: V276 = ADD V275 V274
0x327: S[V273] = V276
0x328: JUMP {0x82, 0x1ba}
---
Entry stack: [V11, S1, {0x82, 0x1ba}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x329
[0x329:0x354]
---
Predecessors: []
Successors: []
---
0x329 STOP
0x32a LOG1
0x32b PUSH6 0x627a7a723058
0x332 SHA3
0x333 PUSH13 0xf3f7d692ed2dd99bac2a4ec285
0x341 MISSING 0xec
0x342 DUP11
0x343 SWAP9
0x344 MISSING 0xce
0x345 MISSING 0xa9
0x346 EXTCODECOPY
0x347 LOG4
0x348 SMOD
0x349 SWAP16
0x34a REVERT
0x34b MISSING 0xc5
0x34c MISSING 0xc3
0x34d MSTORE
0x34e INVALID
0x34f MISSING 0xd4
0x350 MISSING 0xd7
0x351 EQ
0x352 DUP14
0x353 STOP
0x354 MISSING 0x29
---
0x329: STOP 
0x32a: LOG S0 S1 S2
0x32b: V277 = 0x627a7a723058
0x332: V278 = SHA3 0x627a7a723058 S3
0x333: V279 = 0xf3f7d692ed2dd99bac2a4ec285
0x341: MISSING 0xec
0x344: MISSING 0xce
0x345: MISSING 0xa9
0x346: EXTCODECOPY S0 S1 S2 S3
0x347: LOG S4 S5 S6 S7 S8 S9
0x348: V280 = SMOD S10 S11
0x34a: REVERT S27 S12
0x34b: MISSING 0xc5
0x34c: MISSING 0xc3
0x34d: M[S0] = S1
0x34e: INVALID 
0x34f: MISSING 0xd4
0x350: MISSING 0xd7
0x351: V281 = EQ S0 S1
0x353: STOP 
0x354: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf3f7d692ed2dd99bac2a4ec285, V278, S8, S0, S1, S2, S3, S4, S5, S6, S7, S10, S9, S10, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, V280, S14, V281, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d2c44f2
Entry block: 0x84
Exit block: 0x82
Body: 0x82, 0x84, 0x18b, 0x194, 0x1ba

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x8c
Exit block: 0x217
Body: 0x82, 0x8c, 0x94, 0x98, 0x1bc, 0x1d0, 0x1da, 0x1ee, 0x1f4, 0x217, 0x220, 0x222

Function 2:
Public function signature: 0x3ee2d7c2
Entry block: 0xa4
Exit block: 0xc5
Body: 0xa4, 0xac, 0xb0, 0xc5, 0x225

Function 3:
Public function signature: 0x4fb2e45d
Entry block: 0xd7
Exit block: 0x82
Body: 0x82, 0xd7, 0xdf, 0xe3, 0x222, 0x237, 0x24b

Function 4:
Public function signature: 0xb4a99a4e
Entry block: 0xf8
Exit block: 0x10d
Body: 0xf8, 0x100, 0x104, 0x10d, 0x277

Function 5:
Public function signature: 0xbe6d055a
Entry block: 0x129
Exit block: 0x82
Body: 0x82, 0x129, 0x286, 0x2a4, 0x2ad, 0x2bc, 0x2d0, 0x2e9

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x183
Exit block: 0x82
Body: 0x82, 0x183

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

Function 8:
Private function
Entry block: 0x302
Exit block: 0x313
Body: 0x302, 0x313

