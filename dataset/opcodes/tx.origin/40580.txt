Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x98
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x98
0xa: JUMPI 0x98 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x9a]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x8ae4b0c
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x9a
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x8ae4b0c
0x1a: V12 = EQ V10 0x8ae4b0c
0x1b: V13 = 0x9a
0x1e: JUMPI 0x9a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xb5]
---
0x1f DUP1
0x20 PUSH4 0x13af4035
0x25 EQ
0x26 PUSH2 0xb5
0x29 JUMPI
---
0x20: V14 = 0x13af4035
0x25: V15 = EQ 0x13af4035 V10
0x26: V16 = 0xb5
0x29: JUMPI 0xb5 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x105]
---
0x2a DUP1
0x2b PUSH4 0x18def8ef
0x30 EQ
0x31 PUSH2 0x105
0x34 JUMPI
---
0x2b: V17 = 0x18def8ef
0x30: V18 = EQ 0x18def8ef V10
0x31: V19 = 0x105
0x34: JUMPI 0x105 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x11d]
---
0x35 DUP1
0x36 PUSH4 0x19179123
0x3b EQ
0x3c PUSH2 0x11d
0x3f JUMPI
---
0x36: V20 = 0x19179123
0x3b: V21 = EQ 0x19179123 V10
0x3c: V22 = 0x11d
0x3f: JUMPI 0x11d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x17d]
---
0x40 DUP1
0x41 PUSH4 0x501895ae
0x46 EQ
0x47 PUSH2 0x17d
0x4a JUMPI
---
0x41: V23 = 0x501895ae
0x46: V24 = EQ 0x501895ae V10
0x47: V25 = 0x17d
0x4a: JUMPI 0x17d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1a8]
---
0x4b DUP1
0x4c PUSH4 0x63de5323
0x51 EQ
0x52 PUSH2 0x1a8
0x55 JUMPI
---
0x4c: V26 = 0x63de5323
0x51: V27 = EQ 0x63de5323 V10
0x52: V28 = 0x1a8
0x55: JUMPI 0x1a8 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1dc]
---
0x56 DUP1
0x57 PUSH4 0x81d12c58
0x5c EQ
0x5d PUSH2 0x1dc
0x60 JUMPI
---
0x57: V29 = 0x81d12c58
0x5c: V30 = EQ 0x81d12c58 V10
0x5d: V31 = 0x1dc
0x60: JUMPI 0x1dc V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x207]
---
0x61 DUP1
0x62 PUSH4 0x8da5cb5b
0x67 EQ
0x68 PUSH2 0x207
0x6b JUMPI
---
0x62: V32 = 0x8da5cb5b
0x67: V33 = EQ 0x8da5cb5b V10
0x68: V34 = 0x207
0x6b: JUMPI 0x207 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x219]
---
0x6c DUP1
0x6d PUSH4 0xa230c524
0x72 EQ
0x73 PUSH2 0x219
0x76 JUMPI
---
0x6d: V35 = 0xa230c524
0x72: V36 = EQ 0xa230c524 V10
0x73: V37 = 0x219
0x76: JUMPI 0x219 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x241]
---
0x77 DUP1
0x78 PUSH4 0xab0da5a9
0x7d EQ
0x7e PUSH2 0x241
0x81 JUMPI
---
0x78: V38 = 0xab0da5a9
0x7d: V39 = EQ 0xab0da5a9 V10
0x7e: V40 = 0x241
0x81: JUMPI 0x241 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x2a4]
---
0x82 DUP1
0x83 PUSH4 0xca6d56dc
0x88 EQ
0x89 PUSH2 0x2a4
0x8c JUMPI
---
0x83: V41 = 0xca6d56dc
0x88: V42 = EQ 0xca6d56dc V10
0x89: V43 = 0x2a4
0x8c: JUMPI 0x2a4 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x32b]
---
0x8d DUP1
0x8e PUSH4 0xdfab9895
0x93 EQ
0x94 PUSH2 0x32b
0x97 JUMPI
---
0x8e: V44 = 0xdfab9895
0x93: V45 = EQ 0xdfab9895 V10
0x94: V46 = 0x32b
0x97: JUMPI 0x32b V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0x99]
---
Predecessors: [0x0, 0x8d]
Successors: []
---
0x98 JUMPDEST
0x99 STOP
---
0x98: JUMPDEST 
0x99: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9a
[0x9a:0xb4]
---
Predecessors: [0xb]
Successors: [0x360]
---
0x9a JUMPDEST
0x9b PUSH2 0x360
0x9e PUSH1 0x4
0xa0 CALLDATALOAD
0xa1 PUSH1 0x5
0xa3 PUSH1 0x20
0xa5 MSTORE
0xa6 PUSH1 0x0
0xa8 SWAP1
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x40
0xad SWAP1
0xae SHA3
0xaf SLOAD
0xb0 PUSH1 0xff
0xb2 AND
0xb3 DUP2
0xb4 JUMP
---
0x9a: JUMPDEST 
0x9b: V47 = 0x360
0x9e: V48 = 0x4
0xa0: V49 = CALLDATALOAD 0x4
0xa1: V50 = 0x5
0xa3: V51 = 0x20
0xa5: M[0x20] = 0x5
0xa6: V52 = 0x0
0xaa: M[0x0] = V49
0xab: V53 = 0x40
0xae: V54 = SHA3 0x0 0x40
0xaf: V55 = S[V54]
0xb0: V56 = 0xff
0xb2: V57 = AND 0xff V55
0xb4: JUMP 0x360
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360, V57]
Exit stack: [V10, 0x360, V57]

================================

Block 0xb5
[0xb5:0xd3]
---
Predecessors: [0x1f]
Successors: [0xd4, 0xe6]
---
0xb5 JUMPDEST
0xb6 PUSH2 0x360
0xb9 PUSH1 0x4
0xbb CALLDATALOAD
0xbc PUSH1 0x0
0xbe DUP1
0xbf SLOAD
0xc0 CALLER
0xc1 PUSH1 0x1
0xc3 PUSH1 0xa0
0xc5 PUSH1 0x2
0xc7 EXP
0xc8 SUB
0xc9 SWAP1
0xca DUP2
0xcb AND
0xcc SWAP2
0xcd AND
0xce EQ
0xcf DUP1
0xd0 PUSH2 0xe6
0xd3 JUMPI
---
0xb5: JUMPDEST 
0xb6: V58 = 0x360
0xb9: V59 = 0x4
0xbb: V60 = CALLDATALOAD 0x4
0xbc: V61 = 0x0
0xbf: V62 = S[0x0]
0xc0: V63 = CALLER
0xc1: V64 = 0x1
0xc3: V65 = 0xa0
0xc5: V66 = 0x2
0xc7: V67 = EXP 0x2 0xa0
0xc8: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xcd: V70 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xce: V71 = EQ V70 V69
0xd0: V72 = 0xe6
0xd3: JUMPI 0xe6 V71
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360, V60, 0x0, V71]
Exit stack: [V10, 0x360, V60, 0x0, V71]

================================

Block 0xd4
[0xd4:0xe5]
---
Predecessors: [0xb5]
Successors: [0xe6]
---
0xd4 POP
0xd5 DUP1
0xd6 SLOAD
0xd7 ORIGIN
0xd8 PUSH1 0x1
0xda PUSH1 0xa0
0xdc PUSH1 0x2
0xde EXP
0xdf SUB
0xe0 SWAP1
0xe1 DUP2
0xe2 AND
0xe3 SWAP2
0xe4 AND
0xe5 EQ
---
0xd6: V73 = S[0x0]
0xd7: V74 = ORIGIN
0xd8: V75 = 0x1
0xda: V76 = 0xa0
0xdc: V77 = 0x2
0xde: V78 = EXP 0x2 0xa0
0xdf: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xe4: V81 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V82 = EQ V81 V80
---
Entry stack: [V10, 0x360, V60, 0x0, V71]
Stack pops: 2
Stack additions: [S1, V82]
Exit stack: [V10, 0x360, V60, 0x0, V82]

================================

Block 0xe6
[0xe6:0xeb]
---
Predecessors: [0xb5, 0xd4]
Successors: [0xec, 0x23c]
---
0xe6 JUMPDEST
0xe7 ISZERO
0xe8 PUSH2 0x23c
0xeb JUMPI
---
0xe6: JUMPDEST 
0xe7: V83 = ISZERO S0
0xe8: V84 = 0x23c
0xeb: JUMPI 0x23c V83
---
Entry stack: [V10, 0x360, V60, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x360, V60, 0x0]

================================

Block 0xec
[0xec:0x104]
---
Predecessors: [0xe6]
Successors: [0x23c]
---
0xec POP
0xed PUSH1 0x0
0xef DUP1
0xf0 SLOAD
0xf1 PUSH1 0x1
0xf3 PUSH1 0xa0
0xf5 PUSH1 0x2
0xf7 EXP
0xf8 SUB
0xf9 NOT
0xfa AND
0xfb DUP3
0xfc OR
0xfd SWAP1
0xfe SSTORE
0xff PUSH1 0x1
0x101 PUSH2 0x23c
0x104 JUMP
---
0xed: V85 = 0x0
0xf0: V86 = S[0x0]
0xf1: V87 = 0x1
0xf3: V88 = 0xa0
0xf5: V89 = 0x2
0xf7: V90 = EXP 0x2 0xa0
0xf8: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9: V92 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xfa: V93 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V86
0xfc: V94 = OR V60 V93
0xfe: S[0x0] = V94
0xff: V95 = 0x1
0x101: V96 = 0x23c
0x104: JUMP 0x23c
---
Entry stack: [V10, 0x360, V60, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x360, V60, 0x1]

================================

Block 0x105
[0x105:0x11c]
---
Predecessors: [0x2a]
Successors: [0x360]
---
0x105 JUMPDEST
0x106 PUSH2 0x360
0x109 PUSH1 0x4
0x10b CALLDATALOAD
0x10c PUSH1 0x1
0x10e PUSH1 0x20
0x110 MSTORE
0x111 PUSH1 0x0
0x113 SWAP1
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x40
0x118 SWAP1
0x119 SHA3
0x11a SLOAD
0x11b DUP2
0x11c JUMP
---
0x105: JUMPDEST 
0x106: V97 = 0x360
0x109: V98 = 0x4
0x10b: V99 = CALLDATALOAD 0x4
0x10c: V100 = 0x1
0x10e: V101 = 0x20
0x110: M[0x20] = 0x1
0x111: V102 = 0x0
0x115: M[0x0] = V99
0x116: V103 = 0x40
0x119: V104 = SHA3 0x0 0x40
0x11a: V105 = S[V104]
0x11c: JUMP 0x360
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360, V105]
Exit stack: [V10, 0x360, V105]

================================

Block 0x11d
[0x11d:0x13b]
---
Predecessors: [0x35]
Successors: [0x13c, 0x14e]
---
0x11d JUMPDEST
0x11e PUSH2 0x360
0x121 PUSH1 0x4
0x123 CALLDATALOAD
0x124 PUSH1 0x0
0x126 DUP1
0x127 SLOAD
0x128 CALLER
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 SWAP1
0x132 DUP2
0x133 AND
0x134 SWAP2
0x135 AND
0x136 EQ
0x137 DUP1
0x138 PUSH2 0x14e
0x13b JUMPI
---
0x11d: JUMPDEST 
0x11e: V106 = 0x360
0x121: V107 = 0x4
0x123: V108 = CALLDATALOAD 0x4
0x124: V109 = 0x0
0x127: V110 = S[0x0]
0x128: V111 = CALLER
0x129: V112 = 0x1
0x12b: V113 = 0xa0
0x12d: V114 = 0x2
0x12f: V115 = EXP 0x2 0xa0
0x130: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x133: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x135: V118 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x136: V119 = EQ V118 V117
0x138: V120 = 0x14e
0x13b: JUMPI 0x14e V119
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360, V108, 0x0, V119]
Exit stack: [V10, 0x360, V108, 0x0, V119]

================================

Block 0x13c
[0x13c:0x14d]
---
Predecessors: [0x11d]
Successors: [0x14e]
---
0x13c POP
0x13d DUP1
0x13e SLOAD
0x13f ORIGIN
0x140 PUSH1 0x1
0x142 PUSH1 0xa0
0x144 PUSH1 0x2
0x146 EXP
0x147 SUB
0x148 SWAP1
0x149 DUP2
0x14a AND
0x14b SWAP2
0x14c AND
0x14d EQ
---
0x13e: V121 = S[0x0]
0x13f: V122 = ORIGIN
0x140: V123 = 0x1
0x142: V124 = 0xa0
0x144: V125 = 0x2
0x146: V126 = EXP 0x2 0xa0
0x147: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14a: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x14c: V129 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V130 = EQ V129 V128
---
Entry stack: [V10, 0x360, V108, 0x0, V119]
Stack pops: 2
Stack additions: [S1, V130]
Exit stack: [V10, 0x360, V108, 0x0, V130]

================================

Block 0x14e
[0x14e:0x153]
---
Predecessors: [0x11d, 0x13c]
Successors: [0x154, 0x23c]
---
0x14e JUMPDEST
0x14f ISZERO
0x150 PUSH2 0x23c
0x153 JUMPI
---
0x14e: JUMPDEST 
0x14f: V131 = ISZERO S0
0x150: V132 = 0x23c
0x153: JUMPI 0x23c V131
---
Entry stack: [V10, 0x360, V108, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x360, V108, 0x0]

================================

Block 0x154
[0x154:0x175]
---
Predecessors: [0x14e]
Successors: [0x176, 0x38f]
---
0x154 PUSH1 0x1
0x156 PUSH1 0xa0
0x158 PUSH1 0x2
0x15a EXP
0x15b SUB
0x15c DUP3
0x15d AND
0x15e PUSH1 0x0
0x160 SWAP1
0x161 DUP2
0x162 MSTORE
0x163 PUSH1 0x5
0x165 PUSH1 0x20
0x167 MSTORE
0x168 PUSH1 0x40
0x16a SWAP1
0x16b SHA3
0x16c SLOAD
0x16d PUSH1 0xff
0x16f AND
0x170 ISZERO
0x171 ISZERO
0x172 PUSH2 0x38f
0x175 JUMPI
---
0x154: V133 = 0x1
0x156: V134 = 0xa0
0x158: V135 = 0x2
0x15a: V136 = EXP 0x2 0xa0
0x15b: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15d: V138 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V139 = 0x0
0x162: M[0x0] = V138
0x163: V140 = 0x5
0x165: V141 = 0x20
0x167: M[0x20] = 0x5
0x168: V142 = 0x40
0x16b: V143 = SHA3 0x0 0x40
0x16c: V144 = S[V143]
0x16d: V145 = 0xff
0x16f: V146 = AND 0xff V144
0x170: V147 = ISZERO V146
0x171: V148 = ISZERO V147
0x172: V149 = 0x38f
0x175: JUMPI 0x38f V148
---
Entry stack: [V10, 0x360, V108, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x360, V108, 0x0]

================================

Block 0x176
[0x176:0x17c]
---
Predecessors: [0x154]
Successors: [0x23c]
---
0x176 POP
0x177 PUSH1 0x0
0x179 PUSH2 0x23c
0x17c JUMP
---
0x177: V150 = 0x0
0x179: V151 = 0x23c
0x17c: JUMP 0x23c
---
Entry stack: [V10, 0x360, V108, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x360, V108, 0x0]

================================

Block 0x17d
[0x17d:0x190]
---
Predecessors: [0x40]
Successors: [0x191]
---
0x17d JUMPDEST
0x17e PUSH2 0x360
0x181 PUSH1 0x4
0x183 CALLDATALOAD
0x184 PUSH1 0x4
0x186 DUP1
0x187 SLOAD
0x188 DUP3
0x189 SWAP1
0x18a DUP2
0x18b LT
0x18c ISZERO
0x18d PUSH2 0x2
0x190 JUMPI
---
0x17d: JUMPDEST 
0x17e: V152 = 0x360
0x181: V153 = 0x4
0x183: V154 = CALLDATALOAD 0x4
0x184: V155 = 0x4
0x187: V156 = S[0x4]
0x18b: V157 = LT V154 V156
0x18c: V158 = ISZERO V157
0x18d: V159 = 0x2
0x190: THROWI V158
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360, V154, 0x4, V154]
Exit stack: [V10, 0x360, V154, 0x4, V154]

================================

Block 0x191
[0x191:0x1a7]
---
Predecessors: [0x17d]
Successors: [0x360]
---
0x191 POP
0x192 PUSH1 0x0
0x194 MSTORE
0x195 PUSH1 0x0
0x197 DUP1
0x198 MLOAD
0x199 PUSH1 0x20
0x19b PUSH2 0x6fe
0x19e DUP4
0x19f CODECOPY
0x1a0 DUP2
0x1a1 MLOAD
0x1a2 SWAP2
0x1a3 MSTORE
0x1a4 ADD
0x1a5 SLOAD
0x1a6 DUP2
0x1a7 JUMP
---
0x192: V160 = 0x0
0x194: M[0x0] = 0x4
0x195: V161 = 0x0
0x198: V162 = M[0x0]
0x199: V163 = 0x20
0x19b: V164 = 0x6fe
0x19f: CODECOPY 0x0 0x6fe 0x20
0x1a1: V165 = M[0x0]
0x1a3: M[0x0] = V162
0x1a4: V166 = ADD V165 V154
0x1a5: V167 = S[V166]
0x1a7: JUMP 0x360
---
Entry stack: [V10, 0x360, V154, 0x4, V154]
Stack pops: 4
Stack additions: [S3, V167]
Exit stack: [V10, 0x360, V167]

================================

Block 0x1a8
[0x1a8:0x1bb]
---
Predecessors: [0x4b]
Successors: [0x1bc]
---
0x1a8 JUMPDEST
0x1a9 PUSH2 0x372
0x1ac PUSH1 0x4
0x1ae CALLDATALOAD
0x1af PUSH1 0x3
0x1b1 DUP1
0x1b2 SLOAD
0x1b3 DUP3
0x1b4 SWAP1
0x1b5 DUP2
0x1b6 LT
0x1b7 ISZERO
0x1b8 PUSH2 0x2
0x1bb JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V168 = 0x372
0x1ac: V169 = 0x4
0x1ae: V170 = CALLDATALOAD 0x4
0x1af: V171 = 0x3
0x1b2: V172 = S[0x3]
0x1b6: V173 = LT V170 V172
0x1b7: V174 = ISZERO V173
0x1b8: V175 = 0x2
0x1bb: THROWI V174
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x372, V170, 0x3, V170]
Exit stack: [V10, 0x372, V170, 0x3, V170]

================================

Block 0x1bc
[0x1bc:0x1db]
---
Predecessors: [0x1a8]
Successors: [0x372]
---
0x1bc POP
0x1bd PUSH1 0x0
0x1bf MSTORE
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 MLOAD
0x1c4 PUSH1 0x20
0x1c6 PUSH2 0x6de
0x1c9 DUP4
0x1ca CODECOPY
0x1cb DUP2
0x1cc MLOAD
0x1cd SWAP2
0x1ce MSTORE
0x1cf ADD
0x1d0 SLOAD
0x1d1 PUSH1 0x1
0x1d3 PUSH1 0xa0
0x1d5 PUSH1 0x2
0x1d7 EXP
0x1d8 SUB
0x1d9 AND
0x1da DUP2
0x1db JUMP
---
0x1bd: V176 = 0x0
0x1bf: M[0x0] = 0x3
0x1c0: V177 = 0x0
0x1c3: V178 = M[0x0]
0x1c4: V179 = 0x20
0x1c6: V180 = 0x6de
0x1ca: CODECOPY 0x0 0x6de 0x20
0x1cc: V181 = M[0x0]
0x1ce: M[0x0] = V178
0x1cf: V182 = ADD V181 V170
0x1d0: V183 = S[V182]
0x1d1: V184 = 0x1
0x1d3: V185 = 0xa0
0x1d5: V186 = 0x2
0x1d7: V187 = EXP 0x2 0xa0
0x1d8: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x1db: JUMP 0x372
---
Entry stack: [V10, 0x372, V170, 0x3, V170]
Stack pops: 4
Stack additions: [S3, V189]
Exit stack: [V10, 0x372, V189]

================================

Block 0x1dc
[0x1dc:0x1ef]
---
Predecessors: [0x56]
Successors: [0x1f0]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x360
0x1e0 PUSH1 0x4
0x1e2 CALLDATALOAD
0x1e3 PUSH1 0x2
0x1e5 DUP1
0x1e6 SLOAD
0x1e7 DUP3
0x1e8 SWAP1
0x1e9 DUP2
0x1ea LT
0x1eb ISZERO
0x1ec PUSH2 0x2
0x1ef JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V190 = 0x360
0x1e0: V191 = 0x4
0x1e2: V192 = CALLDATALOAD 0x4
0x1e3: V193 = 0x2
0x1e6: V194 = S[0x2]
0x1ea: V195 = LT V192 V194
0x1eb: V196 = ISZERO V195
0x1ec: V197 = 0x2
0x1ef: THROWI V196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360, V192, 0x2, V192]
Exit stack: [V10, 0x360, V192, 0x2, V192]

================================

Block 0x1f0
[0x1f0:0x206]
---
Predecessors: [0x1dc]
Successors: [0x360]
---
0x1f0 POP
0x1f1 PUSH1 0x0
0x1f3 MSTORE
0x1f4 PUSH1 0x0
0x1f6 DUP1
0x1f7 MLOAD
0x1f8 PUSH1 0x20
0x1fa PUSH2 0x6be
0x1fd DUP4
0x1fe CODECOPY
0x1ff DUP2
0x200 MLOAD
0x201 SWAP2
0x202 MSTORE
0x203 ADD
0x204 SLOAD
0x205 DUP2
0x206 JUMP
---
0x1f1: V198 = 0x0
0x1f3: M[0x0] = 0x2
0x1f4: V199 = 0x0
0x1f7: V200 = M[0x0]
0x1f8: V201 = 0x20
0x1fa: V202 = 0x6be
0x1fe: CODECOPY 0x0 0x6be 0x20
0x200: V203 = M[0x0]
0x202: M[0x0] = V200
0x203: V204 = ADD V203 V192
0x204: V205 = S[V204]
0x206: JUMP 0x360
---
Entry stack: [V10, 0x360, V192, 0x2, V192]
Stack pops: 4
Stack additions: [S3, V205]
Exit stack: [V10, 0x360, V205]

================================

Block 0x207
[0x207:0x218]
---
Predecessors: [0x61]
Successors: [0x372]
---
0x207 JUMPDEST
0x208 PUSH2 0x372
0x20b PUSH1 0x0
0x20d SLOAD
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 AND
0x217 DUP2
0x218 JUMP
---
0x207: JUMPDEST 
0x208: V206 = 0x372
0x20b: V207 = 0x0
0x20d: V208 = S[0x0]
0x20e: V209 = 0x1
0x210: V210 = 0xa0
0x212: V211 = 0x2
0x214: V212 = EXP 0x2 0xa0
0x215: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x218: JUMP 0x372
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x372, V214]
Exit stack: [V10, 0x372, V214]

================================

Block 0x219
[0x219:0x23b]
---
Predecessors: [0x6c]
Successors: [0x23c]
---
0x219 JUMPDEST
0x21a PUSH2 0x360
0x21d PUSH1 0x4
0x21f CALLDATALOAD
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 DUP2
0x229 AND
0x22a PUSH1 0x0
0x22c SWAP1
0x22d DUP2
0x22e MSTORE
0x22f PUSH1 0x5
0x231 PUSH1 0x20
0x233 MSTORE
0x234 PUSH1 0x40
0x236 SWAP1
0x237 SHA3
0x238 SLOAD
0x239 PUSH1 0xff
0x23b AND
---
0x219: JUMPDEST 
0x21a: V215 = 0x360
0x21d: V216 = 0x4
0x21f: V217 = CALLDATALOAD 0x4
0x220: V218 = 0x1
0x222: V219 = 0xa0
0x224: V220 = 0x2
0x226: V221 = EXP 0x2 0xa0
0x227: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x229: V223 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V224 = 0x0
0x22e: M[0x0] = V223
0x22f: V225 = 0x5
0x231: V226 = 0x20
0x233: M[0x20] = 0x5
0x234: V227 = 0x40
0x237: V228 = SHA3 0x0 0x40
0x238: V229 = S[V228]
0x239: V230 = 0xff
0x23b: V231 = AND 0xff V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360, V217, V231]
Exit stack: [V10, 0x360, V217, V231]

================================

Block 0x23c
[0x23c:0x240]
---
Predecessors: [0xe6, 0xec, 0x14e, 0x176, 0x219, 0x2d5, 0x2db, 0x38f]
Successors: [0x360]
---
0x23c JUMPDEST
0x23d SWAP2
0x23e SWAP1
0x23f POP
0x240 JUMP
---
0x23c: JUMPDEST 
0x240: JUMP 0x360
---
Entry stack: [V10, 0x360, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x241
[0x241:0x261]
---
Predecessors: [0x77]
Successors: [0x262, 0x274]
---
0x241 JUMPDEST
0x242 PUSH2 0x360
0x245 PUSH1 0x4
0x247 CALLDATALOAD
0x248 PUSH1 0x0
0x24a DUP1
0x24b SLOAD
0x24c DUP2
0x24d SWAP1
0x24e CALLER
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 SWAP1
0x258 DUP2
0x259 AND
0x25a SWAP2
0x25b AND
0x25c EQ
0x25d DUP1
0x25e PUSH2 0x274
0x261 JUMPI
---
0x241: JUMPDEST 
0x242: V232 = 0x360
0x245: V233 = 0x4
0x247: V234 = CALLDATALOAD 0x4
0x248: V235 = 0x0
0x24b: V236 = S[0x0]
0x24e: V237 = CALLER
0x24f: V238 = 0x1
0x251: V239 = 0xa0
0x253: V240 = 0x2
0x255: V241 = EXP 0x2 0xa0
0x256: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x259: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x25b: V244 = AND V236 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V245 = EQ V244 V243
0x25e: V246 = 0x274
0x261: JUMPI 0x274 V245
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360, V234, 0x0, 0x0, V245]
Exit stack: [V10, 0x360, V234, 0x0, 0x0, V245]

================================

Block 0x262
[0x262:0x273]
---
Predecessors: [0x241]
Successors: [0x274]
---
0x262 POP
0x263 DUP1
0x264 SLOAD
0x265 ORIGIN
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e SWAP1
0x26f DUP2
0x270 AND
0x271 SWAP2
0x272 AND
0x273 EQ
---
0x264: V247 = S[0x0]
0x265: V248 = ORIGIN
0x266: V249 = 0x1
0x268: V250 = 0xa0
0x26a: V251 = 0x2
0x26c: V252 = EXP 0x2 0xa0
0x26d: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x270: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x272: V255 = AND V247 0xffffffffffffffffffffffffffffffffffffffff
0x273: V256 = EQ V255 V254
---
Entry stack: [V10, 0x360, V234, 0x0, 0x0, V245]
Stack pops: 2
Stack additions: [S1, V256]
Exit stack: [V10, 0x360, V234, 0x0, 0x0, V256]

================================

Block 0x274
[0x274:0x279]
---
Predecessors: [0x241, 0x262]
Successors: [0x27a, 0x6b8]
---
0x274 JUMPDEST
0x275 ISZERO
0x276 PUSH2 0x6b8
0x279 JUMPI
---
0x274: JUMPDEST 
0x275: V257 = ISZERO S0
0x276: V258 = 0x6b8
0x279: JUMPI 0x6b8 V257
---
Entry stack: [V10, 0x360, V234, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x360, V234, 0x0, 0x0]

================================

Block 0x27a
[0x27a:0x29b]
---
Predecessors: [0x274]
Successors: [0x29c, 0x5ee]
---
0x27a POP
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 DUP3
0x284 AND
0x285 PUSH1 0x0
0x287 SWAP1
0x288 DUP2
0x289 MSTORE
0x28a PUSH1 0x1
0x28c PUSH1 0x20
0x28e MSTORE
0x28f PUSH1 0x40
0x291 DUP2
0x292 SHA3
0x293 SLOAD
0x294 SWAP1
0x295 DUP2
0x296 EQ
0x297 ISZERO
0x298 PUSH2 0x5ee
0x29b JUMPI
---
0x27b: V259 = 0x1
0x27d: V260 = 0xa0
0x27f: V261 = 0x2
0x281: V262 = EXP 0x2 0xa0
0x282: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V264 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x285: V265 = 0x0
0x289: M[0x0] = V264
0x28a: V266 = 0x1
0x28c: V267 = 0x20
0x28e: M[0x20] = 0x1
0x28f: V268 = 0x40
0x292: V269 = SHA3 0x0 0x40
0x293: V270 = S[V269]
0x296: V271 = EQ V270 0x0
0x297: V272 = ISZERO V271
0x298: V273 = 0x5ee
0x29b: JUMPI 0x5ee V272
---
Entry stack: [V10, 0x360, V234, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V270]
Exit stack: [V10, 0x360, V234, 0x0, V270]

================================

Block 0x29c
[0x29c:0x2a3]
---
Predecessors: [0x27a]
Successors: [0x6b8]
---
0x29c PUSH1 0x0
0x29e SWAP2
0x29f POP
0x2a0 PUSH2 0x6b8
0x2a3 JUMP
---
0x29c: V274 = 0x0
0x2a0: V275 = 0x6b8
0x2a3: JUMP 0x6b8
---
Entry stack: [V10, 0x360, V234, 0x0, V270]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x360, V234, 0x0, V270]

================================

Block 0x2a4
[0x2a4:0x2c2]
---
Predecessors: [0x82]
Successors: [0x2c3, 0x2d5]
---
0x2a4 JUMPDEST
0x2a5 PUSH2 0x360
0x2a8 PUSH1 0x4
0x2aa CALLDATALOAD
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae SLOAD
0x2af CALLER
0x2b0 PUSH1 0x1
0x2b2 PUSH1 0xa0
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 SUB
0x2b8 SWAP1
0x2b9 DUP2
0x2ba AND
0x2bb SWAP2
0x2bc AND
0x2bd EQ
0x2be DUP1
0x2bf PUSH2 0x2d5
0x2c2 JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V276 = 0x360
0x2a8: V277 = 0x4
0x2aa: V278 = CALLDATALOAD 0x4
0x2ab: V279 = 0x0
0x2ae: V280 = S[0x0]
0x2af: V281 = CALLER
0x2b0: V282 = 0x1
0x2b2: V283 = 0xa0
0x2b4: V284 = 0x2
0x2b6: V285 = EXP 0x2 0xa0
0x2b7: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ba: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x2bc: V288 = AND V280 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V289 = EQ V288 V287
0x2bf: V290 = 0x2d5
0x2c2: JUMPI 0x2d5 V289
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360, V278, 0x0, V289]
Exit stack: [V10, 0x360, V278, 0x0, V289]

================================

Block 0x2c3
[0x2c3:0x2d4]
---
Predecessors: [0x2a4]
Successors: [0x2d5]
---
0x2c3 POP
0x2c4 DUP1
0x2c5 SLOAD
0x2c6 ORIGIN
0x2c7 PUSH1 0x1
0x2c9 PUSH1 0xa0
0x2cb PUSH1 0x2
0x2cd EXP
0x2ce SUB
0x2cf SWAP1
0x2d0 DUP2
0x2d1 AND
0x2d2 SWAP2
0x2d3 AND
0x2d4 EQ
---
0x2c5: V291 = S[0x0]
0x2c6: V292 = ORIGIN
0x2c7: V293 = 0x1
0x2c9: V294 = 0xa0
0x2cb: V295 = 0x2
0x2cd: V296 = EXP 0x2 0xa0
0x2ce: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d1: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x2d3: V299 = AND V291 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V300 = EQ V299 V298
---
Entry stack: [V10, 0x360, V278, 0x0, V289]
Stack pops: 2
Stack additions: [S1, V300]
Exit stack: [V10, 0x360, V278, 0x0, V300]

================================

Block 0x2d5
[0x2d5:0x2da]
---
Predecessors: [0x2a4, 0x2c3]
Successors: [0x23c, 0x2db]
---
0x2d5 JUMPDEST
0x2d6 ISZERO
0x2d7 PUSH2 0x23c
0x2da JUMPI
---
0x2d5: JUMPDEST 
0x2d6: V301 = ISZERO S0
0x2d7: V302 = 0x23c
0x2da: JUMPI 0x23c V301
---
Entry stack: [V10, 0x360, V278, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x360, V278, 0x0]

================================

Block 0x2db
[0x2db:0x32a]
---
Predecessors: [0x2d5]
Successors: [0x23c]
---
0x2db PUSH1 0x1
0x2dd PUSH1 0xa0
0x2df PUSH1 0x2
0x2e1 EXP
0x2e2 SUB
0x2e3 DUP3
0x2e4 AND
0x2e5 PUSH1 0x0
0x2e7 DUP2
0x2e8 DUP2
0x2e9 MSTORE
0x2ea PUSH1 0x5
0x2ec PUSH1 0x20
0x2ee MSTORE
0x2ef PUSH1 0x40
0x2f1 DUP1
0x2f2 DUP3
0x2f3 SHA3
0x2f4 DUP1
0x2f5 SLOAD
0x2f6 PUSH1 0xff
0x2f8 NOT
0x2f9 AND
0x2fa PUSH1 0x1
0x2fc OR
0x2fd SWAP1
0x2fe SSTORE
0x2ff MLOAD
0x300 PUSH32 0x5dbe2599fd6080a6c8d91d0850baa44f165fb0c49bcfcbe85981e7ff77bdbe52
0x321 SWAP2
0x322 SWAP1
0x323 LOG2
0x324 POP
0x325 PUSH1 0x1
0x327 PUSH2 0x23c
0x32a JUMP
---
0x2db: V303 = 0x1
0x2dd: V304 = 0xa0
0x2df: V305 = 0x2
0x2e1: V306 = EXP 0x2 0xa0
0x2e2: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e4: V308 = AND V278 0xffffffffffffffffffffffffffffffffffffffff
0x2e5: V309 = 0x0
0x2e9: M[0x0] = V308
0x2ea: V310 = 0x5
0x2ec: V311 = 0x20
0x2ee: M[0x20] = 0x5
0x2ef: V312 = 0x40
0x2f3: V313 = SHA3 0x0 0x40
0x2f5: V314 = S[V313]
0x2f6: V315 = 0xff
0x2f8: V316 = NOT 0xff
0x2f9: V317 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V314
0x2fa: V318 = 0x1
0x2fc: V319 = OR 0x1 V317
0x2fe: S[V313] = V319
0x2ff: V320 = M[0x40]
0x300: V321 = 0x5dbe2599fd6080a6c8d91d0850baa44f165fb0c49bcfcbe85981e7ff77bdbe52
0x323: LOG V320 0x0 0x5dbe2599fd6080a6c8d91d0850baa44f165fb0c49bcfcbe85981e7ff77bdbe52 V308
0x325: V322 = 0x1
0x327: V323 = 0x23c
0x32a: JUMP 0x23c
---
Entry stack: [V10, 0x360, V278, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x360, V278, 0x1]

================================

Block 0x32b
[0x32b:0x35b]
---
Predecessors: [0x8d]
Successors: [0x35c, 0x4c5]
---
0x32b JUMPDEST
0x32c PUSH2 0x360
0x32f PUSH1 0x4
0x331 CALLDATALOAD
0x332 PUSH1 0x24
0x334 CALLDATALOAD
0x335 PUSH1 0x44
0x337 CALLDATALOAD
0x338 PUSH1 0x1
0x33a PUSH1 0xa0
0x33c PUSH1 0x2
0x33e EXP
0x33f SUB
0x340 DUP4
0x341 AND
0x342 PUSH1 0x0
0x344 SWAP1
0x345 DUP2
0x346 MSTORE
0x347 PUSH1 0x1
0x349 PUSH1 0x20
0x34b MSTORE
0x34c PUSH1 0x40
0x34e DUP2
0x34f SHA3
0x350 SLOAD
0x351 DUP2
0x352 SWAP1
0x353 DUP2
0x354 SWAP1
0x355 DUP2
0x356 GT
0x357 ISZERO
0x358 PUSH2 0x4c5
0x35b JUMPI
---
0x32b: JUMPDEST 
0x32c: V324 = 0x360
0x32f: V325 = 0x4
0x331: V326 = CALLDATALOAD 0x4
0x332: V327 = 0x24
0x334: V328 = CALLDATALOAD 0x24
0x335: V329 = 0x44
0x337: V330 = CALLDATALOAD 0x44
0x338: V331 = 0x1
0x33a: V332 = 0xa0
0x33c: V333 = 0x2
0x33e: V334 = EXP 0x2 0xa0
0x33f: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x341: V336 = AND V326 0xffffffffffffffffffffffffffffffffffffffff
0x342: V337 = 0x0
0x346: M[0x0] = V336
0x347: V338 = 0x1
0x349: V339 = 0x20
0x34b: M[0x20] = 0x1
0x34c: V340 = 0x40
0x34f: V341 = SHA3 0x0 0x40
0x350: V342 = S[V341]
0x356: V343 = GT 0x0 V342
0x357: V344 = ISZERO V343
0x358: V345 = 0x4c5
0x35b: JUMPI 0x4c5 V344
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x360, V326, V328, V330, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, 0x0]

================================

Block 0x35c
[0x35c:0x35f]
---
Predecessors: [0x32b]
Successors: [0x4bc]
---
0x35c PUSH2 0x4bc
0x35f JUMP
---
0x35c: V346 = 0x4bc
0x35f: JUMP 0x4bc
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, 0x0]

================================

Block 0x360
[0x360:0x371]
---
Predecessors: [0x9a, 0x105, 0x191, 0x1f0, 0x23c, 0x4bc, 0x6b8]
Successors: []
---
0x360 JUMPDEST
0x361 PUSH1 0x40
0x363 DUP1
0x364 MLOAD
0x365 SWAP2
0x366 DUP3
0x367 MSTORE
0x368 MLOAD
0x369 SWAP1
0x36a DUP2
0x36b SWAP1
0x36c SUB
0x36d PUSH1 0x20
0x36f ADD
0x370 SWAP1
0x371 RETURN
---
0x360: JUMPDEST 
0x361: V347 = 0x40
0x364: V348 = M[0x40]
0x367: M[V348] = S0
0x368: V349 = M[0x40]
0x36c: V350 = SUB V348 V349
0x36d: V351 = 0x20
0x36f: V352 = ADD 0x20 V350
0x371: RETURN V349 V352
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x372
[0x372:0x38e]
---
Predecessors: [0x1bc, 0x207]
Successors: []
---
0x372 JUMPDEST
0x373 PUSH1 0x40
0x375 DUP1
0x376 MLOAD
0x377 PUSH1 0x1
0x379 PUSH1 0xa0
0x37b PUSH1 0x2
0x37d EXP
0x37e SUB
0x37f SWAP3
0x380 SWAP1
0x381 SWAP3
0x382 AND
0x383 DUP3
0x384 MSTORE
0x385 MLOAD
0x386 SWAP1
0x387 DUP2
0x388 SWAP1
0x389 SUB
0x38a PUSH1 0x20
0x38c ADD
0x38d SWAP1
0x38e RETURN
---
0x372: JUMPDEST 
0x373: V353 = 0x40
0x376: V354 = M[0x40]
0x377: V355 = 0x1
0x379: V356 = 0xa0
0x37b: V357 = 0x2
0x37d: V358 = EXP 0x2 0xa0
0x37e: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x382: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x384: M[V354] = V360
0x385: V361 = M[0x40]
0x389: V362 = SUB V354 V361
0x38a: V363 = 0x20
0x38c: V364 = ADD 0x20 V362
0x38e: RETURN V361 V364
---
Entry stack: [V10, 0x372, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x372]

================================

Block 0x38f
[0x38f:0x3dc]
---
Predecessors: [0x154]
Successors: [0x23c]
---
0x38f JUMPDEST
0x390 PUSH1 0x1
0x392 PUSH1 0xa0
0x394 PUSH1 0x2
0x396 EXP
0x397 SUB
0x398 DUP3
0x399 AND
0x39a PUSH1 0x0
0x39c DUP2
0x39d DUP2
0x39e MSTORE
0x39f PUSH1 0x5
0x3a1 PUSH1 0x20
0x3a3 MSTORE
0x3a4 PUSH1 0x40
0x3a6 DUP1
0x3a7 DUP3
0x3a8 SHA3
0x3a9 DUP1
0x3aa SLOAD
0x3ab PUSH1 0xff
0x3ad NOT
0x3ae AND
0x3af SWAP1
0x3b0 SSTORE
0x3b1 MLOAD
0x3b2 PUSH32 0xbe7c7ac3248df4581c206a84aab3cb4e7d521b5398b42b681757f78a5a7d411e
0x3d3 SWAP2
0x3d4 SWAP1
0x3d5 LOG2
0x3d6 POP
0x3d7 PUSH1 0x1
0x3d9 PUSH2 0x23c
0x3dc JUMP
---
0x38f: JUMPDEST 
0x390: V365 = 0x1
0x392: V366 = 0xa0
0x394: V367 = 0x2
0x396: V368 = EXP 0x2 0xa0
0x397: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x399: V370 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x39a: V371 = 0x0
0x39e: M[0x0] = V370
0x39f: V372 = 0x5
0x3a1: V373 = 0x20
0x3a3: M[0x20] = 0x5
0x3a4: V374 = 0x40
0x3a8: V375 = SHA3 0x0 0x40
0x3aa: V376 = S[V375]
0x3ab: V377 = 0xff
0x3ad: V378 = NOT 0xff
0x3ae: V379 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V376
0x3b0: S[V375] = V379
0x3b1: V380 = M[0x40]
0x3b2: V381 = 0xbe7c7ac3248df4581c206a84aab3cb4e7d521b5398b42b681757f78a5a7d411e
0x3d5: LOG V380 0x0 0xbe7c7ac3248df4581c206a84aab3cb4e7d521b5398b42b681757f78a5a7d411e V370
0x3d7: V382 = 0x1
0x3d9: V383 = 0x23c
0x3dc: JUMP 0x23c
---
Entry stack: [V10, 0x360, V108, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x360, V108, 0x1]

================================

Block 0x3dd
[0x3dd:0x3e1]
---
Predecessors: [0x5aa, 0x5ae]
Successors: [0x3e2]
---
0x3dd JUMPDEST
0x3de POP
0x3df POP
0x3e0 POP
0x3e1 POP
---
0x3dd: JUMPDEST 
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S5, S4, S3, {0x2, 0x3, 0x4}, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S5, S4]

================================

Block 0x3e2
[0x3e2:0x3f2]
---
Predecessors: [0x3dd, 0x50d]
Successors: [0x3f3]
---
0x3e2 JUMPDEST
0x3e3 DUP6
0x3e4 PUSH1 0x3
0x3e6 PUSH1 0x0
0x3e8 POP
0x3e9 DUP4
0x3ea DUP2
0x3eb SLOAD
0x3ec DUP2
0x3ed LT
0x3ee ISZERO
0x3ef PUSH2 0x2
0x3f2 JUMPI
---
0x3e2: JUMPDEST 
0x3e4: V384 = 0x3
0x3e6: V385 = 0x0
0x3eb: V386 = S[0x3]
0x3ed: V387 = LT S1 V386
0x3ee: V388 = ISZERO V387
0x3ef: V389 = 0x2
0x3f2: THROWI V388
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5, 0x3, S1]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S1, S0, V326, 0x3, S1]

================================

Block 0x3f3
[0x3f3:0x429]
---
Predecessors: [0x3e2]
Successors: [0x42a]
---
0x3f3 PUSH1 0x0
0x3f5 SWAP2
0x3f6 SWAP1
0x3f7 SWAP2
0x3f8 MSTORE
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc MLOAD
0x3fd PUSH1 0x20
0x3ff PUSH2 0x6de
0x402 DUP4
0x403 CODECOPY
0x404 DUP2
0x405 MLOAD
0x406 SWAP2
0x407 MSTORE
0x408 ADD
0x409 DUP1
0x40a SLOAD
0x40b PUSH1 0x1
0x40d PUSH1 0xa0
0x40f PUSH1 0x2
0x411 EXP
0x412 SUB
0x413 NOT
0x414 AND
0x415 SWAP1
0x416 SWAP2
0x417 OR
0x418 SWAP1
0x419 SSTORE
0x41a PUSH1 0x2
0x41c DUP1
0x41d SLOAD
0x41e DUP7
0x41f SWAP2
0x420 SWAP1
0x421 DUP5
0x422 SWAP1
0x423 DUP2
0x424 LT
0x425 ISZERO
0x426 PUSH2 0x2
0x429 JUMPI
---
0x3f3: V390 = 0x0
0x3f8: M[0x0] = 0x3
0x3f9: V391 = 0x0
0x3fc: V392 = M[0x0]
0x3fd: V393 = 0x20
0x3ff: V394 = 0x6de
0x403: CODECOPY 0x0 0x6de 0x20
0x405: V395 = M[0x0]
0x407: M[0x0] = V392
0x408: V396 = ADD V395 S0
0x40a: V397 = S[V396]
0x40b: V398 = 0x1
0x40d: V399 = 0xa0
0x40f: V400 = 0x2
0x411: V401 = EXP 0x2 0xa0
0x412: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x413: V403 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x414: V404 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V397
0x417: V405 = OR V326 V404
0x419: S[V396] = V405
0x41a: V406 = 0x2
0x41d: V407 = S[0x2]
0x424: V408 = LT S4 V407
0x425: V409 = ISZERO V408
0x426: V410 = 0x2
0x429: THROWI V409
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S4, S3, V326, 0x3, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S7, 0x2, S4]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S4, S3, V328, 0x2, S4]

================================

Block 0x42a
[0x42a:0x450]
---
Predecessors: [0x3f3]
Successors: [0x451]
---
0x42a PUSH1 0x0
0x42c SWAP2
0x42d SWAP1
0x42e SWAP2
0x42f MSTORE
0x430 PUSH1 0x0
0x432 DUP1
0x433 MLOAD
0x434 PUSH1 0x20
0x436 PUSH2 0x6be
0x439 DUP4
0x43a CODECOPY
0x43b DUP2
0x43c MLOAD
0x43d SWAP2
0x43e MSTORE
0x43f ADD
0x440 SSTORE
0x441 PUSH1 0x4
0x443 DUP1
0x444 SLOAD
0x445 DUP6
0x446 SWAP2
0x447 SWAP1
0x448 DUP5
0x449 SWAP1
0x44a DUP2
0x44b LT
0x44c ISZERO
0x44d PUSH2 0x2
0x450 JUMPI
---
0x42a: V411 = 0x0
0x42f: M[0x0] = 0x2
0x430: V412 = 0x0
0x433: V413 = M[0x0]
0x434: V414 = 0x20
0x436: V415 = 0x6be
0x43a: CODECOPY 0x0 0x6be 0x20
0x43c: V416 = M[0x0]
0x43e: M[0x0] = V413
0x43f: V417 = ADD V416 S0
0x440: S[V417] = V328
0x441: V418 = 0x4
0x444: V419 = S[0x4]
0x44b: V420 = LT S4 V419
0x44c: V421 = ISZERO V420
0x44d: V422 = 0x2
0x450: THROWI V421
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S4, S3, V328, 0x2, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S6, 0x4, S4]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S4, S3, V330, 0x4, S4]

================================

Block 0x451
[0x451:0x4bb]
---
Predecessors: [0x42a]
Successors: [0x4bc]
---
0x451 PUSH1 0x0
0x453 DUP1
0x454 MLOAD
0x455 PUSH1 0x20
0x457 PUSH2 0x6fe
0x45a DUP4
0x45b CODECOPY
0x45c DUP2
0x45d MLOAD
0x45e SWAP2
0x45f MSTORE
0x460 ADD
0x461 SWAP2
0x462 SWAP1
0x463 SWAP2
0x464 SSTORE
0x465 POP
0x466 PUSH1 0x1
0x468 PUSH1 0xa0
0x46a PUSH1 0x2
0x46c EXP
0x46d SUB
0x46e DUP7
0x46f AND
0x470 PUSH1 0x0
0x472 DUP2
0x473 DUP2
0x474 MSTORE
0x475 PUSH1 0x1
0x477 PUSH1 0x20
0x479 SWAP1
0x47a DUP2
0x47b MSTORE
0x47c PUSH1 0x40
0x47e SWAP2
0x47f DUP3
0x480 SWAP1
0x481 SHA3
0x482 DUP6
0x483 SWAP1
0x484 SSTORE
0x485 DUP2
0x486 MLOAD
0x487 DUP8
0x488 DUP2
0x489 MSTORE
0x48a SWAP2
0x48b MLOAD
0x48c DUP9
0x48d SWAP4
0x48e SWAP3
0x48f PUSH32 0xc6dc6a5536f7d4c9056f1da7f7a8fb59902851e0cb7839eb15a9182e73af6bd4
0x4b0 SWAP3
0x4b1 SWAP1
0x4b2 DUP3
0x4b3 SWAP1
0x4b4 SUB
0x4b5 ADD
0x4b6 SWAP1
0x4b7 LOG3
0x4b8 PUSH1 0x1
0x4ba SWAP3
0x4bb POP
---
0x451: V423 = 0x0
0x454: V424 = M[0x0]
0x455: V425 = 0x20
0x457: V426 = 0x6fe
0x45b: CODECOPY 0x0 0x6fe 0x20
0x45d: V427 = M[0x0]
0x45f: M[0x0] = V424
0x460: V428 = ADD V427 S0
0x464: S[V428] = V330
0x466: V429 = 0x1
0x468: V430 = 0xa0
0x46a: V431 = 0x2
0x46c: V432 = EXP 0x2 0xa0
0x46d: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46f: V434 = AND V326 0xffffffffffffffffffffffffffffffffffffffff
0x470: V435 = 0x0
0x474: M[0x0] = V434
0x475: V436 = 0x1
0x477: V437 = 0x20
0x47b: M[0x20] = 0x1
0x47c: V438 = 0x40
0x481: V439 = SHA3 0x0 0x40
0x484: S[V439] = S4
0x486: V440 = M[0x40]
0x489: M[V440] = V330
0x48b: V441 = M[0x40]
0x48f: V442 = 0xc6dc6a5536f7d4c9056f1da7f7a8fb59902851e0cb7839eb15a9182e73af6bd4
0x4b4: V443 = SUB V440 V441
0x4b5: V444 = ADD V443 0x20
0x4b7: LOG V441 V444 0xc6dc6a5536f7d4c9056f1da7f7a8fb59902851e0cb7839eb15a9182e73af6bd4 V434 V328
0x4b8: V445 = 0x1
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S4, S3, V330, 0x4, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3]
Exit stack: [V10, 0x360, V326, V328, V330, 0x1, S4, S3]

================================

Block 0x4bc
[0x4bc:0x4c4]
---
Predecessors: [0x35c, 0x451]
Successors: [0x360]
---
0x4bc JUMPDEST
0x4bd POP
0x4be POP
0x4bf SWAP4
0x4c0 SWAP3
0x4c1 POP
0x4c2 POP
0x4c3 POP
0x4c4 JUMP
---
0x4bc: JUMPDEST 
0x4c4: JUMP 0x360
---
Entry stack: [V10, 0x360, V326, V328, V330, {0x0, 0x1}, S1, S0]
Stack pops: 7
Stack additions: [S2]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x4c5
[0x4c5:0x4cc]
---
Predecessors: [0x32b]
Successors: [0x4cd]
---
0x4c5 JUMPDEST
0x4c6 POP
0x4c7 PUSH1 0x0
0x4c9 SWAP1
0x4ca POP
0x4cb PUSH1 0x1
---
0x4c5: JUMPDEST 
0x4c7: V446 = 0x0
0x4cb: V447 = 0x1
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x1]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, 0x1]

================================

Block 0x4cd
[0x4cd:0x4d7]
---
Predecessors: [0x4c5, 0x561]
Successors: [0x4d8, 0x50d]
---
0x4cd JUMPDEST
0x4ce PUSH1 0x3
0x4d0 SLOAD
0x4d1 DUP2
0x4d2 LT
0x4d3 ISZERO
0x4d4 PUSH2 0x50d
0x4d7 JUMPI
---
0x4cd: JUMPDEST 
0x4ce: V448 = 0x3
0x4d0: V449 = S[0x3]
0x4d2: V450 = LT S0 V449
0x4d3: V451 = ISZERO V450
0x4d4: V452 = 0x50d
0x4d7: JUMPI 0x50d V451
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, S0]

================================

Block 0x4d8
[0x4d8:0x4e4]
---
Predecessors: [0x4cd]
Successors: [0x4e5]
---
0x4d8 PUSH1 0x3
0x4da DUP1
0x4db SLOAD
0x4dc DUP3
0x4dd SWAP1
0x4de DUP2
0x4df LT
0x4e0 ISZERO
0x4e1 PUSH2 0x2
0x4e4 JUMPI
---
0x4d8: V453 = 0x3
0x4db: V454 = S[0x3]
0x4df: V455 = LT S0 V454
0x4e0: V456 = ISZERO V455
0x4e1: V457 = 0x2
0x4e4: THROWI V456
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, S0, 0x3, S0]

================================

Block 0x4e5
[0x4e5:0x509]
---
Predecessors: [0x4d8]
Successors: [0x50a, 0x561]
---
0x4e5 PUSH1 0x0
0x4e7 SWAP2
0x4e8 DUP3
0x4e9 MSTORE
0x4ea PUSH1 0x0
0x4ec DUP1
0x4ed MLOAD
0x4ee PUSH1 0x20
0x4f0 PUSH2 0x6de
0x4f3 DUP4
0x4f4 CODECOPY
0x4f5 DUP2
0x4f6 MLOAD
0x4f7 SWAP2
0x4f8 MSTORE
0x4f9 ADD
0x4fa SLOAD
0x4fb PUSH1 0x1
0x4fd PUSH1 0xa0
0x4ff PUSH1 0x2
0x501 EXP
0x502 SUB
0x503 AND
0x504 EQ
0x505 ISZERO
0x506 PUSH2 0x561
0x509 JUMPI
---
0x4e5: V458 = 0x0
0x4e9: M[0x0] = 0x3
0x4ea: V459 = 0x0
0x4ed: V460 = M[0x0]
0x4ee: V461 = 0x20
0x4f0: V462 = 0x6de
0x4f4: CODECOPY 0x0 0x6de 0x20
0x4f6: V463 = M[0x0]
0x4f8: M[0x0] = V460
0x4f9: V464 = ADD V463 S0
0x4fa: V465 = S[V464]
0x4fb: V466 = 0x1
0x4fd: V467 = 0xa0
0x4ff: V468 = 0x2
0x501: V469 = EXP 0x2 0xa0
0x502: V470 = SUB 0x10000000000000000000000000000000000000000 0x1
0x503: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x504: V472 = EQ V471 0x0
0x505: V473 = ISZERO V472
0x506: V474 = 0x561
0x509: JUMPI 0x561 V473
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, S2, 0x3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, S2]

================================

Block 0x50a
[0x50a:0x50c]
---
Predecessors: [0x4e5]
Successors: [0x50d]
---
0x50a SWAP1
0x50b POP
0x50c DUP1
---
0x50a: NOP 
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S0, S0]

================================

Block 0x50d
[0x50d:0x516]
---
Predecessors: [0x4cd, 0x50a]
Successors: [0x3e2, 0x517]
---
0x50d JUMPDEST
0x50e DUP2
0x50f PUSH1 0x0
0x511 EQ
0x512 ISZERO
0x513 PUSH2 0x3e2
0x516 JUMPI
---
0x50d: JUMPDEST 
0x50f: V475 = 0x0
0x511: V476 = EQ 0x0 S1
0x512: V477 = ISZERO V476
0x513: V478 = 0x3e2
0x516: JUMPI 0x3e2 V477
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S1, S0]

================================

Block 0x517
[0x517:0x52e]
---
Predecessors: [0x50d]
Successors: [0x52f, 0x569]
---
0x517 PUSH1 0x3
0x519 DUP1
0x51a SLOAD
0x51b PUSH1 0x1
0x51d DUP2
0x51e ADD
0x51f DUP1
0x520 DUP4
0x521 SSTORE
0x522 SWAP1
0x523 SWAP2
0x524 SWAP1
0x525 DUP3
0x526 DUP1
0x527 ISZERO
0x528 DUP3
0x529 SWAP1
0x52a GT
0x52b PUSH2 0x569
0x52e JUMPI
---
0x517: V479 = 0x3
0x51a: V480 = S[0x3]
0x51b: V481 = 0x1
0x51e: V482 = ADD V480 0x1
0x521: S[0x3] = V482
0x527: V483 = ISZERO V480
0x52a: V484 = GT V483 V482
0x52b: V485 = 0x569
0x52e: JUMPI 0x569 V484
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V480, 0x3, V482, V480]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S1, S0, V480, 0x3, V482, V480]

================================

Block 0x52f
[0x52f:0x54c]
---
Predecessors: [0x517]
Successors: [0x54d]
---
0x52f PUSH1 0x0
0x531 DUP4
0x532 SWAP1
0x533 MSTORE
0x534 PUSH2 0x569
0x537 SWAP1
0x538 PUSH1 0x0
0x53a DUP1
0x53b MLOAD
0x53c PUSH1 0x20
0x53e PUSH2 0x6de
0x541 DUP4
0x542 CODECOPY
0x543 DUP2
0x544 MLOAD
0x545 SWAP2
0x546 MSTORE
0x547 SWAP1
0x548 DUP2
0x549 ADD
0x54a SWAP1
0x54b DUP4
0x54c ADD
---
0x52f: V486 = 0x0
0x533: M[0x0] = 0x3
0x534: V487 = 0x569
0x538: V488 = 0x0
0x53b: V489 = M[0x0]
0x53c: V490 = 0x20
0x53e: V491 = 0x6de
0x542: CODECOPY 0x0 0x6de 0x20
0x544: V492 = M[0x0]
0x546: M[0x0] = V489
0x549: V493 = ADD V492 V480
0x54c: V494 = ADD V482 V492
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S5, S4, V480, 0x3, V482, V480]
Stack pops: 3
Stack additions: [S2, S1, 0x569, V493, V494]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S5, S4, V480, 0x3, V482, 0x569, V493, V494]

================================

Block 0x54d
[0x54d:0x555]
---
Predecessors: [0x52f, 0x556, 0x588, 0x5cc]
Successors: [0x556, 0x5aa]
---
0x54d JUMPDEST
0x54e DUP1
0x54f DUP3
0x550 GT
0x551 ISZERO
0x552 PUSH2 0x5aa
0x555 JUMPI
---
0x54d: JUMPDEST 
0x550: V495 = GT S1 S0
0x551: V496 = ISZERO V495
0x552: V497 = 0x5aa
0x555: JUMPI 0x5aa V496
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, {0x3dd, 0x569, 0x5ae}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, {0x3dd, 0x569, 0x5ae}, S1, S0]

================================

Block 0x556
[0x556:0x560]
---
Predecessors: [0x54d]
Successors: [0x54d]
---
0x556 PUSH1 0x0
0x558 DUP2
0x559 SSTORE
0x55a PUSH1 0x1
0x55c ADD
0x55d PUSH2 0x54d
0x560 JUMP
---
0x556: V498 = 0x0
0x559: S[S0] = 0x0
0x55a: V499 = 0x1
0x55c: V500 = ADD 0x1 S0
0x55d: V501 = 0x54d
0x560: JUMP 0x54d
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, {0x3dd, 0x569, 0x5ae}, S1, S0]
Stack pops: 1
Stack additions: [V500]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, {0x3dd, 0x569, 0x5ae}, S1, V500]

================================

Block 0x561
[0x561:0x568]
---
Predecessors: [0x4e5]
Successors: [0x4cd]
---
0x561 JUMPDEST
0x562 PUSH1 0x1
0x564 ADD
0x565 PUSH2 0x4cd
0x568 JUMP
---
0x561: JUMPDEST 
0x562: V502 = 0x1
0x564: V503 = ADD 0x1 S0
0x565: V504 = 0x4cd
0x568: JUMP 0x4cd
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V503]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, 0x0, V503]

================================

Block 0x569
[0x569:0x587]
---
Predecessors: [0x517, 0x5aa]
Successors: [0x588, 0x5ae]
---
0x569 JUMPDEST
0x56a POP
0x56b POP
0x56c PUSH1 0x2
0x56e DUP1
0x56f SLOAD
0x570 PUSH1 0x1
0x572 DUP2
0x573 ADD
0x574 DUP1
0x575 DUP4
0x576 SSTORE
0x577 SWAP4
0x578 SWAP6
0x579 POP
0x57a SWAP3
0x57b SWAP1
0x57c SWAP2
0x57d POP
0x57e DUP3
0x57f DUP1
0x580 ISZERO
0x581 DUP3
0x582 SWAP1
0x583 GT
0x584 PUSH2 0x5ae
0x587 JUMPI
---
0x569: JUMPDEST 
0x56c: V505 = 0x2
0x56f: V506 = S[0x2]
0x570: V507 = 0x1
0x573: V508 = ADD V506 0x1
0x576: S[0x2] = V508
0x580: V509 = ISZERO V506
0x583: V510 = GT V509 V508
0x584: V511 = 0x5ae
0x587: JUMPI 0x5ae V510
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S5, S4, S3, {0x2, 0x3, 0x4}, S1, S0]
Stack pops: 6
Stack additions: [S3, S4, V506, 0x2, V508, V506]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S3, S4, V506, 0x2, V508, V506]

================================

Block 0x588
[0x588:0x5a9]
---
Predecessors: [0x569]
Successors: [0x54d]
---
0x588 PUSH1 0x0
0x58a DUP4
0x58b SWAP1
0x58c MSTORE
0x58d PUSH2 0x5ae
0x590 SWAP1
0x591 PUSH1 0x0
0x593 DUP1
0x594 MLOAD
0x595 PUSH1 0x20
0x597 PUSH2 0x6be
0x59a DUP4
0x59b CODECOPY
0x59c DUP2
0x59d MLOAD
0x59e SWAP2
0x59f MSTORE
0x5a0 SWAP1
0x5a1 DUP2
0x5a2 ADD
0x5a3 SWAP1
0x5a4 DUP4
0x5a5 ADD
0x5a6 PUSH2 0x54d
0x5a9 JUMP
---
0x588: V512 = 0x0
0x58c: M[0x0] = 0x2
0x58d: V513 = 0x5ae
0x591: V514 = 0x0
0x594: V515 = M[0x0]
0x595: V516 = 0x20
0x597: V517 = 0x6be
0x59b: CODECOPY 0x0 0x6be 0x20
0x59d: V518 = M[0x0]
0x59f: M[0x0] = V515
0x5a2: V519 = ADD V518 V506
0x5a5: V520 = ADD V508 V518
0x5a6: V521 = 0x54d
0x5a9: JUMP 0x54d
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S5, S4, V506, 0x2, V508, V506]
Stack pops: 3
Stack additions: [S2, S1, 0x5ae, V519, V520]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S5, S4, V506, 0x2, V508, 0x5ae, V519, V520]

================================

Block 0x5aa
[0x5aa:0x5ad]
---
Predecessors: [0x54d]
Successors: [0x3dd, 0x569, 0x5ae]
---
0x5aa JUMPDEST
0x5ab POP
0x5ac SWAP1
0x5ad JUMP
---
0x5aa: JUMPDEST 
0x5ad: JUMP {0x3dd, 0x569, 0x5ae}
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, {0x3dd, 0x569, 0x5ae}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, S1]

================================

Block 0x5ae
[0x5ae:0x5cb]
---
Predecessors: [0x569, 0x5aa]
Successors: [0x3dd, 0x5cc]
---
0x5ae JUMPDEST
0x5af POP
0x5b0 POP
0x5b1 PUSH1 0x4
0x5b3 DUP1
0x5b4 SLOAD
0x5b5 PUSH1 0x1
0x5b7 DUP2
0x5b8 ADD
0x5b9 DUP1
0x5ba DUP4
0x5bb SSTORE
0x5bc SWAP1
0x5bd SWAP4
0x5be POP
0x5bf SWAP1
0x5c0 SWAP2
0x5c1 POP
0x5c2 DUP3
0x5c3 DUP1
0x5c4 ISZERO
0x5c5 DUP3
0x5c6 SWAP1
0x5c7 GT
0x5c8 PUSH2 0x3dd
0x5cb JUMPI
---
0x5ae: JUMPDEST 
0x5b1: V522 = 0x4
0x5b4: V523 = S[0x4]
0x5b5: V524 = 0x1
0x5b8: V525 = ADD V523 0x1
0x5bb: S[0x4] = V525
0x5c4: V526 = ISZERO V523
0x5c7: V527 = GT V526 V525
0x5c8: V528 = 0x3dd
0x5cb: JUMPI 0x3dd V527
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S5, S4, S3, {0x2, 0x3, 0x4}, S1, S0]
Stack pops: 4
Stack additions: [V523, 0x4, V525, V523]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S5, S4, V523, 0x4, V525, V523]

================================

Block 0x5cc
[0x5cc:0x5ed]
---
Predecessors: [0x5ae]
Successors: [0x54d]
---
0x5cc PUSH1 0x0
0x5ce DUP4
0x5cf SWAP1
0x5d0 MSTORE
0x5d1 PUSH2 0x3dd
0x5d4 SWAP1
0x5d5 PUSH1 0x0
0x5d7 DUP1
0x5d8 MLOAD
0x5d9 PUSH1 0x20
0x5db PUSH2 0x6fe
0x5de DUP4
0x5df CODECOPY
0x5e0 DUP2
0x5e1 MLOAD
0x5e2 SWAP2
0x5e3 MSTORE
0x5e4 SWAP1
0x5e5 DUP2
0x5e6 ADD
0x5e7 SWAP1
0x5e8 DUP4
0x5e9 ADD
0x5ea PUSH2 0x54d
0x5ed JUMP
---
0x5cc: V529 = 0x0
0x5d0: M[0x0] = 0x4
0x5d1: V530 = 0x3dd
0x5d5: V531 = 0x0
0x5d8: V532 = M[0x0]
0x5d9: V533 = 0x20
0x5db: V534 = 0x6fe
0x5df: CODECOPY 0x0 0x6fe 0x20
0x5e1: V535 = M[0x0]
0x5e3: M[0x0] = V532
0x5e6: V536 = ADD V535 V523
0x5e9: V537 = ADD V525 V535
0x5ea: V538 = 0x54d
0x5ed: JUMP 0x54d
---
Entry stack: [V10, 0x360, V326, V328, V330, 0x0, S5, S4, V523, 0x4, V525, V523]
Stack pops: 3
Stack additions: [S2, S1, 0x3dd, V536, V537]
Exit stack: [V10, 0x360, V326, V328, V330, 0x0, S5, S4, V523, 0x4, V525, 0x3dd, V536, V537]

================================

Block 0x5ee
[0x5ee:0x616]
---
Predecessors: [0x27a]
Successors: [0x617]
---
0x5ee JUMPDEST
0x5ef PUSH1 0x1
0x5f1 PUSH1 0xa0
0x5f3 PUSH1 0x2
0x5f5 EXP
0x5f6 SUB
0x5f7 DUP4
0x5f8 AND
0x5f9 PUSH1 0x0
0x5fb SWAP1
0x5fc DUP2
0x5fd MSTORE
0x5fe PUSH1 0x1
0x600 PUSH1 0x20
0x602 MSTORE
0x603 PUSH1 0x40
0x605 DUP2
0x606 SHA3
0x607 DUP2
0x608 SWAP1
0x609 SSTORE
0x60a PUSH1 0x3
0x60c DUP1
0x60d SLOAD
0x60e DUP4
0x60f SWAP1
0x610 DUP2
0x611 LT
0x612 ISZERO
0x613 PUSH2 0x2
0x616 JUMPI
---
0x5ee: JUMPDEST 
0x5ef: V539 = 0x1
0x5f1: V540 = 0xa0
0x5f3: V541 = 0x2
0x5f5: V542 = EXP 0x2 0xa0
0x5f6: V543 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f8: V544 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x5f9: V545 = 0x0
0x5fd: M[0x0] = V544
0x5fe: V546 = 0x1
0x600: V547 = 0x20
0x602: M[0x20] = 0x1
0x603: V548 = 0x40
0x606: V549 = SHA3 0x0 0x40
0x609: S[V549] = 0x0
0x60a: V550 = 0x3
0x60d: V551 = S[0x3]
0x611: V552 = LT V270 V551
0x612: V553 = ISZERO V552
0x613: V554 = 0x2
0x616: THROWI V553
---
Entry stack: [V10, 0x360, V234, 0x0, V270]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x3, S0]
Exit stack: [V10, 0x360, V234, 0x0, V270, 0x0, 0x3, V270]

================================

Block 0x617
[0x617:0x646]
---
Predecessors: [0x5ee]
Successors: [0x647]
---
0x617 SWAP1
0x618 DUP3
0x619 MSTORE
0x61a POP
0x61b PUSH1 0x0
0x61d DUP1
0x61e MLOAD
0x61f PUSH1 0x20
0x621 PUSH2 0x6de
0x624 DUP4
0x625 CODECOPY
0x626 DUP2
0x627 MLOAD
0x628 SWAP2
0x629 MSTORE
0x62a DUP3
0x62b ADD
0x62c DUP1
0x62d SLOAD
0x62e PUSH1 0x1
0x630 PUSH1 0xa0
0x632 PUSH1 0x2
0x634 EXP
0x635 SUB
0x636 NOT
0x637 AND
0x638 SWAP1
0x639 SSTORE
0x63a PUSH1 0x2
0x63c DUP1
0x63d SLOAD
0x63e DUP4
0x63f SWAP1
0x640 DUP2
0x641 LT
0x642 ISZERO
0x643 PUSH2 0x2
0x646 JUMPI
---
0x619: M[0x0] = 0x3
0x61b: V555 = 0x0
0x61e: V556 = M[0x0]
0x61f: V557 = 0x20
0x621: V558 = 0x6de
0x625: CODECOPY 0x0 0x6de 0x20
0x627: V559 = M[0x0]
0x629: M[0x0] = V556
0x62b: V560 = ADD V270 V559
0x62d: V561 = S[V560]
0x62e: V562 = 0x1
0x630: V563 = 0xa0
0x632: V564 = 0x2
0x634: V565 = EXP 0x2 0xa0
0x635: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x636: V567 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x637: V568 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V561
0x639: S[V560] = V568
0x63a: V569 = 0x2
0x63d: V570 = S[0x2]
0x641: V571 = LT V270 V570
0x642: V572 = ISZERO V571
0x643: V573 = 0x2
0x646: THROWI V572
---
Entry stack: [V10, 0x360, V234, 0x0, V270, 0x0, 0x3, V270]
Stack pops: 4
Stack additions: [S3, S2, 0x2, S3]
Exit stack: [V10, 0x360, V234, 0x0, V270, 0x0, 0x2, V270]

================================

Block 0x647
[0x647:0x66b]
---
Predecessors: [0x617]
Successors: [0x66c]
---
0x647 SWAP1
0x648 DUP3
0x649 MSTORE
0x64a POP
0x64b PUSH1 0x0
0x64d DUP1
0x64e MLOAD
0x64f PUSH1 0x20
0x651 PUSH2 0x6be
0x654 DUP4
0x655 CODECOPY
0x656 DUP2
0x657 MLOAD
0x658 SWAP2
0x659 MSTORE
0x65a DUP3
0x65b ADD
0x65c DUP2
0x65d SWAP1
0x65e SSTORE
0x65f PUSH1 0x4
0x661 DUP1
0x662 SLOAD
0x663 DUP4
0x664 SWAP1
0x665 DUP2
0x666 LT
0x667 ISZERO
0x668 PUSH2 0x2
0x66b JUMPI
---
0x649: M[0x0] = 0x2
0x64b: V574 = 0x0
0x64e: V575 = M[0x0]
0x64f: V576 = 0x20
0x651: V577 = 0x6be
0x655: CODECOPY 0x0 0x6be 0x20
0x657: V578 = M[0x0]
0x659: M[0x0] = V575
0x65b: V579 = ADD V270 V578
0x65e: S[V579] = 0x0
0x65f: V580 = 0x4
0x662: V581 = S[0x4]
0x666: V582 = LT V270 V581
0x667: V583 = ISZERO V582
0x668: V584 = 0x2
0x66b: THROWI V583
---
Entry stack: [V10, 0x360, V234, 0x0, V270, 0x0, 0x2, V270]
Stack pops: 4
Stack additions: [S3, S2, 0x4, S3]
Exit stack: [V10, 0x360, V234, 0x0, V270, 0x0, 0x4, V270]

================================

Block 0x66c
[0x66c:0x6b7]
---
Predecessors: [0x647]
Successors: [0x6b8]
---
0x66c POP
0x66d DUP2
0x66e MSTORE
0x66f PUSH1 0x0
0x671 DUP1
0x672 MLOAD
0x673 PUSH1 0x20
0x675 PUSH2 0x6fe
0x678 DUP4
0x679 CODECOPY
0x67a DUP2
0x67b MLOAD
0x67c SWAP2
0x67d MSTORE
0x67e DUP3
0x67f ADD
0x680 DUP2
0x681 SWAP1
0x682 SSTORE
0x683 PUSH1 0x40
0x685 MLOAD
0x686 PUSH1 0x1
0x688 PUSH1 0xa0
0x68a PUSH1 0x2
0x68c EXP
0x68d SUB
0x68e DUP6
0x68f AND
0x690 SWAP2
0x691 PUSH32 0xe87a127e630432a36e6ce7e0bcd8342ad7957812ec5c3220489f036e5e84c276
0x6b2 SWAP2
0x6b3 LOG2
0x6b4 PUSH1 0x1
0x6b6 SWAP2
0x6b7 POP
---
0x66e: M[0x0] = 0x4
0x66f: V585 = 0x0
0x672: V586 = M[0x0]
0x673: V587 = 0x20
0x675: V588 = 0x6fe
0x679: CODECOPY 0x0 0x6fe 0x20
0x67b: V589 = M[0x0]
0x67d: M[0x0] = V586
0x67f: V590 = ADD V270 V589
0x682: S[V590] = 0x0
0x683: V591 = 0x40
0x685: V592 = M[0x40]
0x686: V593 = 0x1
0x688: V594 = 0xa0
0x68a: V595 = 0x2
0x68c: V596 = EXP 0x2 0xa0
0x68d: V597 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68f: V598 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x691: V599 = 0xe87a127e630432a36e6ce7e0bcd8342ad7957812ec5c3220489f036e5e84c276
0x6b3: LOG V592 0x0 0xe87a127e630432a36e6ce7e0bcd8342ad7957812ec5c3220489f036e5e84c276 V598
0x6b4: V600 = 0x1
---
Entry stack: [V10, 0x360, V234, 0x0, V270, 0x0, 0x4, V270]
Stack pops: 6
Stack additions: [S5, 0x1, S3]
Exit stack: [V10, 0x360, V234, 0x1, V270]

================================

Block 0x6b8
[0x6b8:0x6bd]
---
Predecessors: [0x274, 0x29c, 0x66c]
Successors: [0x360]
---
0x6b8 JUMPDEST
0x6b9 POP
0x6ba SWAP2
0x6bb SWAP1
0x6bc POP
0x6bd JUMP
---
0x6b8: JUMPDEST 
0x6bd: JUMP 0x360
---
Entry stack: [V10, 0x360, V234, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x6be
[0x6be:0x6bf]
---
Predecessors: []
Successors: [0x6c0]
Has unresolved jump.
---
0x6be BLOCKHASH
0x6bf JUMPI
---
0x6be: V601 = BLOCKHASH S0
0x6bf: JUMPI V601 S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x6c0
[0x6c0:0x727]
---
Predecessors: [0x6be]
Successors: []
---
0x6c0 DUP8
0x6c1 STATICCALL
0x6c2 SLT
0x6c3 MISSING 0xa8
0x6c4 MISSING 0x23
0x6c5 MISSING 0xe0
0x6c6 CALLCODE
0x6c7 MISSING 0xb7
0x6c8 PUSH4 0x1cc41b3b
0x6cd MISSING 0xa8
0x6ce DUP3
0x6cf DUP12
0x6d0 CALLER
0x6d1 MISSING 0x21
0x6d2 MISSING 0xca
0x6d3 DUP2
0x6d4 GT
0x6d5 GT
0x6d6 STATICCALL
0x6d7 PUSH22 0xcd3aa3bb5acec2575a0e9e593c00f959f8c92f12db28
0x6ee PUSH10 0xc3395a3b0502d05e2516
0x6f9 DIFFICULTY
0x6fa PUSH16 0x71f85b8a35acfbc15ff81a39ae7d344f
0x70b MISSING 0xd7
0x70c MULMOD
0x70d CALLCODE
0x70e DUP15
0x70f DUP7
0x710 STOP
0x711 MISSING 0xb4
0x712 MISSING 0xaa
0x713 DUP13
0x714 PUSH6 0xc6b64bfe7fe3
0x71b PUSH12 0xd19b
---
0x6c1: V602 = STATICCALL S7 S0 S1 S2 S3 S4
0x6c2: V603 = SLT V602 S5
0x6c3: MISSING 0xa8
0x6c4: MISSING 0x23
0x6c5: MISSING 0xe0
0x6c6: V604 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x6c7: MISSING 0xb7
0x6c8: V605 = 0x1cc41b3b
0x6cd: MISSING 0xa8
0x6d0: V606 = CALLER
0x6d1: MISSING 0x21
0x6d2: MISSING 0xca
0x6d4: V607 = GT S1 S0
0x6d5: V608 = GT V607 S1
0x6d6: V609 = STATICCALL V608 S2 S3 S4 S5 S6
0x6d7: V610 = 0xcd3aa3bb5acec2575a0e9e593c00f959f8c92f12db28
0x6ee: V611 = 0xc3395a3b0502d05e2516
0x6f9: V612 = DIFFICULTY
0x6fa: V613 = 0x71f85b8a35acfbc15ff81a39ae7d344f
0x70b: MISSING 0xd7
0x70c: V614 = MULMOD S0 S1 S2
0x70d: V615 = CALLCODE V614 S3 S4 S5 S6 S7 S8
0x710: STOP 
0x711: MISSING 0xb4
0x712: MISSING 0xaa
0x714: V616 = 0xc6b64bfe7fe3
0x71b: V617 = 0xd19b
---
Entry stack: []
Stack pops: 12564
Stack additions: [0xd19b, 0xc6b64bfe7fe3, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12]
Exit stack: []

================================

Function 0:
Public function signature: 0x8ae4b0c
Entry block: 0x9a
Exit block: 0x360
Body: 0x9a, 0x360

Function 1:
Public function signature: 0x13af4035
Entry block: 0xb5
Exit block: 0x360
Body: 0xb5, 0xd4, 0xe6, 0xec, 0x23c, 0x360

Function 2:
Public function signature: 0x18def8ef
Entry block: 0x105
Exit block: 0x360
Body: 0x105, 0x360

Function 3:
Public function signature: 0x19179123
Entry block: 0x11d
Exit block: 0x360
Body: 0x11d, 0x13c, 0x14e, 0x154, 0x176, 0x23c, 0x360, 0x38f

Function 4:
Public function signature: 0x501895ae
Entry block: 0x17d
Exit block: 0x360
Body: 0x17d, 0x191, 0x360

Function 5:
Public function signature: 0x63de5323
Entry block: 0x1a8
Exit block: 0x372
Body: 0x1a8, 0x1bc, 0x372

Function 6:
Public function signature: 0x81d12c58
Entry block: 0x1dc
Exit block: 0x360
Body: 0x1dc, 0x1f0, 0x360

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x207
Exit block: 0x372
Body: 0x207, 0x372

Function 8:
Public function signature: 0xa230c524
Entry block: 0x219
Exit block: 0x360
Body: 0x219, 0x23c, 0x360

Function 9:
Public function signature: 0xab0da5a9
Entry block: 0x241
Exit block: 0x360
Body: 0x241, 0x262, 0x274, 0x27a, 0x29c, 0x360, 0x5ee, 0x617, 0x647, 0x66c, 0x6b8

Function 10:
Public function signature: 0xca6d56dc
Entry block: 0x2a4
Exit block: 0x360
Body: 0x23c, 0x2a4, 0x2c3, 0x2d5, 0x2db, 0x360

Function 11:
Public function signature: 0xdfab9895
Entry block: 0x32b
Exit block: 0x360
Body: 0x32b, 0x35c, 0x360, 0x3dd, 0x3e2, 0x3f3, 0x42a, 0x451, 0x4bc, 0x4c5, 0x4cd, 0x4d8, 0x4e5, 0x50a, 0x50d, 0x517, 0x52f, 0x561, 0x569, 0x588, 0x5ae, 0x5cc

Function 12:
Public fallback function
Entry block: 0x98
Exit block: 0x98
Body: 0x98

Function 13:
Private function
Entry block: 0x54d
Exit block: 0x5aa
Body: 0x54d, 0x556, 0x5aa

