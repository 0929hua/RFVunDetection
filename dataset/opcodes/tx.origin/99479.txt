Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xbf]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xbf
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xbf
0xc: JUMPI 0xbf V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3a]
---
Predecessors: [0x0]
Successors: [0x3b, 0xc1]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0xc1
0x3a JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x31: V10 = 0x2e1a7d4d
0x36: V11 = EQ 0x2e1a7d4d V9
0x37: V12 = 0xc1
0x3a: JUMPI 0xc1 V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0xd]
Successors: [0x46, 0xfc]
---
0x3b DUP1
0x3c PUSH4 0x3ccfd60b
0x41 EQ
0x42 PUSH2 0xfc
0x45 JUMPI
---
0x3c: V13 = 0x3ccfd60b
0x41: V14 = EQ 0x3ccfd60b V9
0x42: V15 = 0xfc
0x45: JUMPI 0xfc V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x113]
---
0x46 DUP1
0x47 PUSH4 0x46a9dc7e
0x4c EQ
0x4d PUSH2 0x113
0x50 JUMPI
---
0x47: V16 = 0x46a9dc7e
0x4c: V17 = EQ 0x46a9dc7e V9
0x4d: V18 = 0x113
0x50: JUMPI 0x113 V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x164]
---
0x51 DUP1
0x52 PUSH4 0x4aa8732c
0x57 EQ
0x58 PUSH2 0x164
0x5b JUMPI
---
0x52: V19 = 0x4aa8732c
0x57: V20 = EQ 0x4aa8732c V9
0x58: V21 = 0x164
0x5b: JUMPI 0x164 V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x19f]
---
0x5c DUP1
0x5d PUSH4 0x83197ef0
0x62 EQ
0x63 PUSH2 0x19f
0x66 JUMPI
---
0x5d: V22 = 0x83197ef0
0x62: V23 = EQ 0x83197ef0 V9
0x63: V24 = 0x19f
0x66: JUMPI 0x19f V23
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1b6]
---
0x67 DUP1
0x68 PUSH4 0x8a054ac2
0x6d EQ
0x6e PUSH2 0x1b6
0x71 JUMPI
---
0x68: V25 = 0x8a054ac2
0x6d: V26 = EQ 0x8a054ac2 V9
0x6e: V27 = 0x1b6
0x71: JUMPI 0x1b6 V26
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1cd]
---
0x72 DUP1
0x73 PUSH4 0xaddb7a8e
0x78 EQ
0x79 PUSH2 0x1cd
0x7c JUMPI
---
0x73: V28 = 0xaddb7a8e
0x78: V29 = EQ 0xaddb7a8e V9
0x79: V30 = 0x1cd
0x7c: JUMPI 0x1cd V29
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x208]
---
0x7d DUP1
0x7e PUSH4 0xcd580ff3
0x83 EQ
0x84 PUSH2 0x208
0x87 JUMPI
---
0x7e: V31 = 0xcd580ff3
0x83: V32 = EQ 0xcd580ff3 V9
0x84: V33 = 0x208
0x87: JUMPI 0x208 V32
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x243]
---
0x88 DUP1
0x89 PUSH4 0xd0e30db0
0x8e EQ
0x8f PUSH2 0x243
0x92 JUMPI
---
0x89: V34 = 0xd0e30db0
0x8e: V35 = EQ 0xd0e30db0 V9
0x8f: V36 = 0x243
0x92: JUMPI 0x243 V35
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x24d]
---
0x93 DUP1
0x94 PUSH4 0xd4b83992
0x99 EQ
0x9a PUSH2 0x24d
0x9d JUMPI
---
0x94: V37 = 0xd4b83992
0x99: V38 = EQ 0xd4b83992 V9
0x9a: V39 = 0x24d
0x9d: JUMPI 0x24d V38
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2a4]
---
0x9e DUP1
0x9f PUSH4 0xd755ad13
0xa4 EQ
0xa5 PUSH2 0x2a4
0xa8 JUMPI
---
0x9f: V40 = 0xd755ad13
0xa4: V41 = EQ 0xd755ad13 V9
0xa5: V42 = 0x2a4
0xa8: JUMPI 0x2a4 V41
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2df]
---
0xa9 DUP1
0xaa PUSH4 0xe5aa3d58
0xaf EQ
0xb0 PUSH2 0x2df
0xb3 JUMPI
---
0xaa: V43 = 0xe5aa3d58
0xaf: V44 = EQ 0xe5aa3d58 V9
0xb0: V45 = 0x2df
0xb3: JUMPI 0x2df V44
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x2f6]
---
0xb4 DUP1
0xb5 PUSH4 0xfb1e4cff
0xba EQ
0xbb PUSH2 0x2f6
0xbe JUMPI
---
0xb5: V46 = 0xfb1e4cff
0xba: V47 = EQ 0xfb1e4cff V9
0xbb: V48 = 0x2f6
0xbe: JUMPI 0x2f6 V47
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xbf
[0xbf:0xc0]
---
Predecessors: [0x0, 0xb4]
Successors: []
---
0xbf JUMPDEST
0xc0 STOP
---
0xbf: JUMPDEST 
0xc0: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0xc1
[0xc1:0xc8]
---
Predecessors: [0xd]
Successors: [0xc9, 0xcd]
---
0xc1 JUMPDEST
0xc2 CALLVALUE
0xc3 DUP1
0xc4 ISZERO
0xc5 PUSH2 0xcd
0xc8 JUMPI
---
0xc1: JUMPDEST 
0xc2: V49 = CALLVALUE
0xc4: V50 = ISZERO V49
0xc5: V51 = 0xcd
0xc8: JUMPI 0xcd V50
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V9, V49]

================================

Block 0xc9
[0xc9:0xcc]
---
Predecessors: [0xc1]
Successors: []
---
0xc9 PUSH1 0x0
0xcb DUP1
0xcc REVERT
---
0xc9: V52 = 0x0
0xcc: REVERT 0x0 0x0
---
Entry stack: [V9, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V49]

================================

Block 0xcd
[0xcd:0xdf]
---
Predecessors: [0xc1]
Successors: [0xe0, 0xe4]
---
0xcd JUMPDEST
0xce POP
0xcf PUSH2 0xfa
0xd2 PUSH1 0x4
0xd4 DUP1
0xd5 CALLDATASIZE
0xd6 SUB
0xd7 PUSH1 0x20
0xd9 DUP2
0xda LT
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0xcd: JUMPDEST 
0xcf: V53 = 0xfa
0xd2: V54 = 0x4
0xd5: V55 = CALLDATASIZE
0xd6: V56 = SUB V55 0x4
0xd7: V57 = 0x20
0xda: V58 = LT V56 0x20
0xdb: V59 = ISZERO V58
0xdc: V60 = 0xe4
0xdf: JUMPI 0xe4 V59
---
Entry stack: [V9, V49]
Stack pops: 1
Stack additions: [0xfa, 0x4, V56]
Exit stack: [V9, 0xfa, 0x4, V56]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0xcd]
Successors: []
---
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 REVERT
---
0xe0: V61 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V9, 0xfa, 0x4, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfa, 0x4, V56]

================================

Block 0xe4
[0xe4:0xf9]
---
Predecessors: [0xcd]
Successors: [0x34d]
---
0xe4 JUMPDEST
0xe5 DUP2
0xe6 ADD
0xe7 SWAP1
0xe8 DUP1
0xe9 DUP1
0xea CALLDATALOAD
0xeb SWAP1
0xec PUSH1 0x20
0xee ADD
0xef SWAP1
0xf0 SWAP3
0xf1 SWAP2
0xf2 SWAP1
0xf3 POP
0xf4 POP
0xf5 POP
0xf6 PUSH2 0x34d
0xf9 JUMP
---
0xe4: JUMPDEST 
0xe6: V62 = ADD 0x4 V56
0xea: V63 = CALLDATALOAD 0x4
0xec: V64 = 0x20
0xee: V65 = ADD 0x20 0x4
0xf6: V66 = 0x34d
0xf9: JUMP 0x34d
---
Entry stack: [V9, 0xfa, 0x4, V56]
Stack pops: 2
Stack additions: [V63]
Exit stack: [V9, 0xfa, V63]

================================

Block 0xfa
[0xfa:0xfb]
---
Predecessors: [0x436]
Successors: []
---
0xfa JUMPDEST
0xfb STOP
---
0xfa: JUMPDEST 
0xfb: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0x3b]
Successors: [0x104, 0x108]
---
0xfc JUMPDEST
0xfd CALLVALUE
0xfe DUP1
0xff ISZERO
0x100 PUSH2 0x108
0x103 JUMPI
---
0xfc: JUMPDEST 
0xfd: V67 = CALLVALUE
0xff: V68 = ISZERO V67
0x100: V69 = 0x108
0x103: JUMPI 0x108 V68
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V9, V67]

================================

Block 0x104
[0x104:0x107]
---
Predecessors: [0xfc]
Successors: []
---
0x104 PUSH1 0x0
0x106 DUP1
0x107 REVERT
---
0x104: V70 = 0x0
0x107: REVERT 0x0 0x0
---
Entry stack: [V9, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V67]

================================

Block 0x108
[0x108:0x110]
---
Predecessors: [0xfc]
Successors: [0x439]
---
0x108 JUMPDEST
0x109 POP
0x10a PUSH2 0x111
0x10d PUSH2 0x439
0x110 JUMP
---
0x108: JUMPDEST 
0x10a: V71 = 0x111
0x10d: V72 = 0x439
0x110: JUMP 0x439
---
Entry stack: [V9, V67]
Stack pops: 1
Stack additions: [0x111]
Exit stack: [V9, 0x111]

================================

Block 0x111
[0x111:0x112]
---
Predecessors: [0x50c]
Successors: []
---
0x111 JUMPDEST
0x112 STOP
---
0x111: JUMPDEST 
0x112: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x46]
Successors: [0x11b, 0x11f]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 DUP1
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x113: JUMPDEST 
0x114: V73 = CALLVALUE
0x116: V74 = ISZERO V73
0x117: V75 = 0x11f
0x11a: JUMPI 0x11f V74
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V9, V73]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x113]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V76 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V9, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V73]

================================

Block 0x11f
[0x11f:0x131]
---
Predecessors: [0x113]
Successors: [0x132, 0x136]
---
0x11f JUMPDEST
0x120 POP
0x121 PUSH2 0x162
0x124 PUSH1 0x4
0x126 DUP1
0x127 CALLDATASIZE
0x128 SUB
0x129 PUSH1 0x20
0x12b DUP2
0x12c LT
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0x11f: JUMPDEST 
0x121: V77 = 0x162
0x124: V78 = 0x4
0x127: V79 = CALLDATASIZE
0x128: V80 = SUB V79 0x4
0x129: V81 = 0x20
0x12c: V82 = LT V80 0x20
0x12d: V83 = ISZERO V82
0x12e: V84 = 0x136
0x131: JUMPI 0x136 V83
---
Entry stack: [V9, V73]
Stack pops: 1
Stack additions: [0x162, 0x4, V80]
Exit stack: [V9, 0x162, 0x4, V80]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x11f]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V85 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V9, 0x162, 0x4, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x162, 0x4, V80]

================================

Block 0x136
[0x136:0x161]
---
Predecessors: [0x11f]
Successors: [0x50e]
---
0x136 JUMPDEST
0x137 DUP2
0x138 ADD
0x139 SWAP1
0x13a DUP1
0x13b DUP1
0x13c CALLDATALOAD
0x13d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x152 AND
0x153 SWAP1
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP1
0x158 SWAP3
0x159 SWAP2
0x15a SWAP1
0x15b POP
0x15c POP
0x15d POP
0x15e PUSH2 0x50e
0x161 JUMP
---
0x136: JUMPDEST 
0x138: V86 = ADD 0x4 V80
0x13c: V87 = CALLDATALOAD 0x4
0x13d: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x152: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x154: V90 = 0x20
0x156: V91 = ADD 0x20 0x4
0x15e: V92 = 0x50e
0x161: JUMP 0x50e
---
Entry stack: [V9, 0x162, 0x4, V80]
Stack pops: 2
Stack additions: [V89]
Exit stack: [V9, 0x162, V89]

================================

Block 0x162
[0x162:0x163]
---
Predecessors: [0x5a4]
Successors: []
---
0x162 JUMPDEST
0x163 STOP
---
0x162: JUMPDEST 
0x163: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x164
[0x164:0x16b]
---
Predecessors: [0x51]
Successors: [0x16c, 0x170]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 DUP1
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x164: JUMPDEST 
0x165: V93 = CALLVALUE
0x167: V94 = ISZERO V93
0x168: V95 = 0x170
0x16b: JUMPI 0x170 V94
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V93]
Exit stack: [V9, V93]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x164]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V96 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V9, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V93]

================================

Block 0x170
[0x170:0x182]
---
Predecessors: [0x164]
Successors: [0x183, 0x187]
---
0x170 JUMPDEST
0x171 POP
0x172 PUSH2 0x19d
0x175 PUSH1 0x4
0x177 DUP1
0x178 CALLDATASIZE
0x179 SUB
0x17a PUSH1 0x20
0x17c DUP2
0x17d LT
0x17e ISZERO
0x17f PUSH2 0x187
0x182 JUMPI
---
0x170: JUMPDEST 
0x172: V97 = 0x19d
0x175: V98 = 0x4
0x178: V99 = CALLDATASIZE
0x179: V100 = SUB V99 0x4
0x17a: V101 = 0x20
0x17d: V102 = LT V100 0x20
0x17e: V103 = ISZERO V102
0x17f: V104 = 0x187
0x182: JUMPI 0x187 V103
---
Entry stack: [V9, V93]
Stack pops: 1
Stack additions: [0x19d, 0x4, V100]
Exit stack: [V9, 0x19d, 0x4, V100]

================================

Block 0x183
[0x183:0x186]
---
Predecessors: [0x170]
Successors: []
---
0x183 PUSH1 0x0
0x185 DUP1
0x186 REVERT
---
0x183: V105 = 0x0
0x186: REVERT 0x0 0x0
---
Entry stack: [V9, 0x19d, 0x4, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x19d, 0x4, V100]

================================

Block 0x187
[0x187:0x19c]
---
Predecessors: [0x170]
Successors: [0x5a7]
---
0x187 JUMPDEST
0x188 DUP2
0x189 ADD
0x18a SWAP1
0x18b DUP1
0x18c DUP1
0x18d CALLDATALOAD
0x18e SWAP1
0x18f PUSH1 0x20
0x191 ADD
0x192 SWAP1
0x193 SWAP3
0x194 SWAP2
0x195 SWAP1
0x196 POP
0x197 POP
0x198 POP
0x199 PUSH2 0x5a7
0x19c JUMP
---
0x187: JUMPDEST 
0x189: V106 = ADD 0x4 V100
0x18d: V107 = CALLDATALOAD 0x4
0x18f: V108 = 0x20
0x191: V109 = ADD 0x20 0x4
0x199: V110 = 0x5a7
0x19c: JUMP 0x5a7
---
Entry stack: [V9, 0x19d, 0x4, V100]
Stack pops: 2
Stack additions: [V107]
Exit stack: [V9, 0x19d, V107]

================================

Block 0x19d
[0x19d:0x19e]
---
Predecessors: [0x60e, 0x91c, 0xbe9]
Successors: []
---
0x19d JUMPDEST
0x19e STOP
---
0x19d: JUMPDEST 
0x19e: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x19f
[0x19f:0x1a6]
---
Predecessors: [0x5c]
Successors: [0x1a7, 0x1ab]
---
0x19f JUMPDEST
0x1a0 CALLVALUE
0x1a1 DUP1
0x1a2 ISZERO
0x1a3 PUSH2 0x1ab
0x1a6 JUMPI
---
0x19f: JUMPDEST 
0x1a0: V111 = CALLVALUE
0x1a2: V112 = ISZERO V111
0x1a3: V113 = 0x1ab
0x1a6: JUMPI 0x1ab V112
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V111]
Exit stack: [V9, V111]

================================

Block 0x1a7
[0x1a7:0x1aa]
---
Predecessors: [0x19f]
Successors: []
---
0x1a7 PUSH1 0x0
0x1a9 DUP1
0x1aa REVERT
---
0x1a7: V114 = 0x0
0x1aa: REVERT 0x0 0x0
---
Entry stack: [V9, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V111]

================================

Block 0x1ab
[0x1ab:0x1b3]
---
Predecessors: [0x19f]
Successors: [0x611]
---
0x1ab JUMPDEST
0x1ac POP
0x1ad PUSH2 0x1b4
0x1b0 PUSH2 0x611
0x1b3 JUMP
---
0x1ab: JUMPDEST 
0x1ad: V115 = 0x1b4
0x1b0: V116 = 0x611
0x1b3: JUMP 0x611
---
Entry stack: [V9, V111]
Stack pops: 1
Stack additions: [0x1b4]
Exit stack: [V9, 0x1b4]

================================

Block 0x1b4
[0x1b4:0x1b5]
---
Predecessors: [0x67f]
Successors: []
---
0x1b4 JUMPDEST
0x1b5 STOP
---
0x1b4: JUMPDEST 
0x1b5: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x1b6
[0x1b6:0x1bd]
---
Predecessors: [0x67]
Successors: [0x1be, 0x1c2]
---
0x1b6 JUMPDEST
0x1b7 CALLVALUE
0x1b8 DUP1
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V117 = CALLVALUE
0x1b9: V118 = ISZERO V117
0x1ba: V119 = 0x1c2
0x1bd: JUMPI 0x1c2 V118
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V117]
Exit stack: [V9, V117]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b6]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V120 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V9, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V117]

================================

Block 0x1c2
[0x1c2:0x1ca]
---
Predecessors: [0x1b6]
Successors: [0x681]
---
0x1c2 JUMPDEST
0x1c3 POP
0x1c4 PUSH2 0x1cb
0x1c7 PUSH2 0x681
0x1ca JUMP
---
0x1c2: JUMPDEST 
0x1c4: V121 = 0x1cb
0x1c7: V122 = 0x681
0x1ca: JUMP 0x681
---
Entry stack: [V9, V117]
Stack pops: 1
Stack additions: [0x1cb]
Exit stack: [V9, 0x1cb]

================================

Block 0x1cb
[0x1cb:0x1cc]
---
Predecessors: [0x8ab]
Successors: []
---
0x1cb JUMPDEST
0x1cc STOP
---
0x1cb: JUMPDEST 
0x1cc: STOP 
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S0]

================================

Block 0x1cd
[0x1cd:0x1d4]
---
Predecessors: [0x72]
Successors: [0x1d5, 0x1d9]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf DUP1
0x1d0 ISZERO
0x1d1 PUSH2 0x1d9
0x1d4 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V123 = CALLVALUE
0x1d0: V124 = ISZERO V123
0x1d1: V125 = 0x1d9
0x1d4: JUMPI 0x1d9 V124
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V123]
Exit stack: [V9, V123]

================================

Block 0x1d5
[0x1d5:0x1d8]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 REVERT
---
0x1d5: V126 = 0x0
0x1d8: REVERT 0x0 0x0
---
Entry stack: [V9, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V123]

================================

Block 0x1d9
[0x1d9:0x1eb]
---
Predecessors: [0x1cd]
Successors: [0x1ec, 0x1f0]
---
0x1d9 JUMPDEST
0x1da POP
0x1db PUSH2 0x206
0x1de PUSH1 0x4
0x1e0 DUP1
0x1e1 CALLDATASIZE
0x1e2 SUB
0x1e3 PUSH1 0x20
0x1e5 DUP2
0x1e6 LT
0x1e7 ISZERO
0x1e8 PUSH2 0x1f0
0x1eb JUMPI
---
0x1d9: JUMPDEST 
0x1db: V127 = 0x206
0x1de: V128 = 0x4
0x1e1: V129 = CALLDATASIZE
0x1e2: V130 = SUB V129 0x4
0x1e3: V131 = 0x20
0x1e6: V132 = LT V130 0x20
0x1e7: V133 = ISZERO V132
0x1e8: V134 = 0x1f0
0x1eb: JUMPI 0x1f0 V133
---
Entry stack: [V9, V123]
Stack pops: 1
Stack additions: [0x206, 0x4, V130]
Exit stack: [V9, 0x206, 0x4, V130]

================================

Block 0x1ec
[0x1ec:0x1ef]
---
Predecessors: [0x1d9]
Successors: []
---
0x1ec PUSH1 0x0
0x1ee DUP1
0x1ef REVERT
---
0x1ec: V135 = 0x0
0x1ef: REVERT 0x0 0x0
---
Entry stack: [V9, 0x206, 0x4, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x206, 0x4, V130]

================================

Block 0x1f0
[0x1f0:0x205]
---
Predecessors: [0x1d9]
Successors: [0x8ad]
---
0x1f0 JUMPDEST
0x1f1 DUP2
0x1f2 ADD
0x1f3 SWAP1
0x1f4 DUP1
0x1f5 DUP1
0x1f6 CALLDATALOAD
0x1f7 SWAP1
0x1f8 PUSH1 0x20
0x1fa ADD
0x1fb SWAP1
0x1fc SWAP3
0x1fd SWAP2
0x1fe SWAP1
0x1ff POP
0x200 POP
0x201 POP
0x202 PUSH2 0x8ad
0x205 JUMP
---
0x1f0: JUMPDEST 
0x1f2: V136 = ADD 0x4 V130
0x1f6: V137 = CALLDATALOAD 0x4
0x1f8: V138 = 0x20
0x1fa: V139 = ADD 0x20 0x4
0x202: V140 = 0x8ad
0x205: JUMP 0x8ad
---
Entry stack: [V9, 0x206, 0x4, V130]
Stack pops: 2
Stack additions: [V137]
Exit stack: [V9, 0x206, V137]

================================

Block 0x206
[0x206:0x207]
---
Predecessors: [0x60e, 0x91c, 0xbe9]
Successors: []
---
0x206 JUMPDEST
0x207 STOP
---
0x206: JUMPDEST 
0x207: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x208
[0x208:0x20f]
---
Predecessors: [0x7d]
Successors: [0x210, 0x214]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a DUP1
0x20b ISZERO
0x20c PUSH2 0x214
0x20f JUMPI
---
0x208: JUMPDEST 
0x209: V141 = CALLVALUE
0x20b: V142 = ISZERO V141
0x20c: V143 = 0x214
0x20f: JUMPI 0x214 V142
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V141]
Exit stack: [V9, V141]

================================

Block 0x210
[0x210:0x213]
---
Predecessors: [0x208]
Successors: []
---
0x210 PUSH1 0x0
0x212 DUP1
0x213 REVERT
---
0x210: V144 = 0x0
0x213: REVERT 0x0 0x0
---
Entry stack: [V9, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V141]

================================

Block 0x214
[0x214:0x226]
---
Predecessors: [0x208]
Successors: [0x227, 0x22b]
---
0x214 JUMPDEST
0x215 POP
0x216 PUSH2 0x241
0x219 PUSH1 0x4
0x21b DUP1
0x21c CALLDATASIZE
0x21d SUB
0x21e PUSH1 0x20
0x220 DUP2
0x221 LT
0x222 ISZERO
0x223 PUSH2 0x22b
0x226 JUMPI
---
0x214: JUMPDEST 
0x216: V145 = 0x241
0x219: V146 = 0x4
0x21c: V147 = CALLDATASIZE
0x21d: V148 = SUB V147 0x4
0x21e: V149 = 0x20
0x221: V150 = LT V148 0x20
0x222: V151 = ISZERO V150
0x223: V152 = 0x22b
0x226: JUMPI 0x22b V151
---
Entry stack: [V9, V141]
Stack pops: 1
Stack additions: [0x241, 0x4, V148]
Exit stack: [V9, 0x241, 0x4, V148]

================================

Block 0x227
[0x227:0x22a]
---
Predecessors: [0x214]
Successors: []
---
0x227 PUSH1 0x0
0x229 DUP1
0x22a REVERT
---
0x227: V153 = 0x0
0x22a: REVERT 0x0 0x0
---
Entry stack: [V9, 0x241, 0x4, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x241, 0x4, V148]

================================

Block 0x22b
[0x22b:0x240]
---
Predecessors: [0x214]
Successors: [0x91f]
---
0x22b JUMPDEST
0x22c DUP2
0x22d ADD
0x22e SWAP1
0x22f DUP1
0x230 DUP1
0x231 CALLDATALOAD
0x232 SWAP1
0x233 PUSH1 0x20
0x235 ADD
0x236 SWAP1
0x237 SWAP3
0x238 SWAP2
0x239 SWAP1
0x23a POP
0x23b POP
0x23c POP
0x23d PUSH2 0x91f
0x240 JUMP
---
0x22b: JUMPDEST 
0x22d: V154 = ADD 0x4 V148
0x231: V155 = CALLDATALOAD 0x4
0x233: V156 = 0x20
0x235: V157 = ADD 0x20 0x4
0x23d: V158 = 0x91f
0x240: JUMP 0x91f
---
Entry stack: [V9, 0x241, 0x4, V148]
Stack pops: 2
Stack additions: [V155]
Exit stack: [V9, 0x241, V155]

================================

Block 0x241
[0x241:0x242]
---
Predecessors: [0xb4a]
Successors: []
---
0x241 JUMPDEST
0x242 STOP
---
0x241: JUMPDEST 
0x242: STOP 
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S0]

================================

Block 0x243
[0x243:0x24a]
---
Predecessors: [0x88]
Successors: [0xb4d]
---
0x243 JUMPDEST
0x244 PUSH2 0x24b
0x247 PUSH2 0xb4d
0x24a JUMP
---
0x243: JUMPDEST 
0x244: V159 = 0x24b
0x247: V160 = 0xb4d
0x24a: JUMP 0xb4d
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x24b]
Exit stack: [V9, 0x24b]

================================

Block 0x24b
[0x24b:0x24c]
---
Predecessors: [0xb4d]
Successors: []
---
0x24b JUMPDEST
0x24c STOP
---
0x24b: JUMPDEST 
0x24c: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x24d
[0x24d:0x254]
---
Predecessors: [0x93]
Successors: [0x255, 0x259]
---
0x24d JUMPDEST
0x24e CALLVALUE
0x24f DUP1
0x250 ISZERO
0x251 PUSH2 0x259
0x254 JUMPI
---
0x24d: JUMPDEST 
0x24e: V161 = CALLVALUE
0x250: V162 = ISZERO V161
0x251: V163 = 0x259
0x254: JUMPI 0x259 V162
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V161]
Exit stack: [V9, V161]

================================

Block 0x255
[0x255:0x258]
---
Predecessors: [0x24d]
Successors: []
---
0x255 PUSH1 0x0
0x257 DUP1
0x258 REVERT
---
0x255: V164 = 0x0
0x258: REVERT 0x0 0x0
---
Entry stack: [V9, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V161]

================================

Block 0x259
[0x259:0x261]
---
Predecessors: [0x24d]
Successors: [0xb5c]
---
0x259 JUMPDEST
0x25a POP
0x25b PUSH2 0x262
0x25e PUSH2 0xb5c
0x261 JUMP
---
0x259: JUMPDEST 
0x25b: V165 = 0x262
0x25e: V166 = 0xb5c
0x261: JUMP 0xb5c
---
Entry stack: [V9, V161]
Stack pops: 1
Stack additions: [0x262]
Exit stack: [V9, 0x262]

================================

Block 0x262
[0x262:0x2a3]
---
Predecessors: [0xb5c]
Successors: []
---
0x262 JUMPDEST
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 DUP3
0x268 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27d AND
0x27e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x293 AND
0x294 DUP2
0x295 MSTORE
0x296 PUSH1 0x20
0x298 ADD
0x299 SWAP2
0x29a POP
0x29b POP
0x29c PUSH1 0x40
0x29e MLOAD
0x29f DUP1
0x2a0 SWAP2
0x2a1 SUB
0x2a2 SWAP1
0x2a3 RETURN
---
0x262: JUMPDEST 
0x263: V167 = 0x40
0x265: V168 = M[0x40]
0x268: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0x27e: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x293: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x295: M[V168] = V172
0x296: V173 = 0x20
0x298: V174 = ADD 0x20 V168
0x29c: V175 = 0x40
0x29e: V176 = M[0x40]
0x2a1: V177 = SUB V174 V176
0x2a3: RETURN V176 V177
---
Entry stack: [V9, 0x262, V677]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x262]

================================

Block 0x2a4
[0x2a4:0x2ab]
---
Predecessors: [0x9e]
Successors: [0x2ac, 0x2b0]
---
0x2a4 JUMPDEST
0x2a5 CALLVALUE
0x2a6 DUP1
0x2a7 ISZERO
0x2a8 PUSH2 0x2b0
0x2ab JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V178 = CALLVALUE
0x2a7: V179 = ISZERO V178
0x2a8: V180 = 0x2b0
0x2ab: JUMPI 0x2b0 V179
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V178]
Exit stack: [V9, V178]

================================

Block 0x2ac
[0x2ac:0x2af]
---
Predecessors: [0x2a4]
Successors: []
---
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af REVERT
---
0x2ac: V181 = 0x0
0x2af: REVERT 0x0 0x0
---
Entry stack: [V9, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V178]

================================

Block 0x2b0
[0x2b0:0x2c2]
---
Predecessors: [0x2a4]
Successors: [0x2c3, 0x2c7]
---
0x2b0 JUMPDEST
0x2b1 POP
0x2b2 PUSH2 0x2dd
0x2b5 PUSH1 0x4
0x2b7 DUP1
0x2b8 CALLDATASIZE
0x2b9 SUB
0x2ba PUSH1 0x20
0x2bc DUP2
0x2bd LT
0x2be ISZERO
0x2bf PUSH2 0x2c7
0x2c2 JUMPI
---
0x2b0: JUMPDEST 
0x2b2: V182 = 0x2dd
0x2b5: V183 = 0x4
0x2b8: V184 = CALLDATASIZE
0x2b9: V185 = SUB V184 0x4
0x2ba: V186 = 0x20
0x2bd: V187 = LT V185 0x20
0x2be: V188 = ISZERO V187
0x2bf: V189 = 0x2c7
0x2c2: JUMPI 0x2c7 V188
---
Entry stack: [V9, V178]
Stack pops: 1
Stack additions: [0x2dd, 0x4, V185]
Exit stack: [V9, 0x2dd, 0x4, V185]

================================

Block 0x2c3
[0x2c3:0x2c6]
---
Predecessors: [0x2b0]
Successors: []
---
0x2c3 PUSH1 0x0
0x2c5 DUP1
0x2c6 REVERT
---
0x2c3: V190 = 0x0
0x2c6: REVERT 0x0 0x0
---
Entry stack: [V9, 0x2dd, 0x4, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x2dd, 0x4, V185]

================================

Block 0x2c7
[0x2c7:0x2dc]
---
Predecessors: [0x2b0]
Successors: [0xb82]
---
0x2c7 JUMPDEST
0x2c8 DUP2
0x2c9 ADD
0x2ca SWAP1
0x2cb DUP1
0x2cc DUP1
0x2cd CALLDATALOAD
0x2ce SWAP1
0x2cf PUSH1 0x20
0x2d1 ADD
0x2d2 SWAP1
0x2d3 SWAP3
0x2d4 SWAP2
0x2d5 SWAP1
0x2d6 POP
0x2d7 POP
0x2d8 POP
0x2d9 PUSH2 0xb82
0x2dc JUMP
---
0x2c7: JUMPDEST 
0x2c9: V191 = ADD 0x4 V185
0x2cd: V192 = CALLDATALOAD 0x4
0x2cf: V193 = 0x20
0x2d1: V194 = ADD 0x20 0x4
0x2d9: V195 = 0xb82
0x2dc: JUMP 0xb82
---
Entry stack: [V9, 0x2dd, 0x4, V185]
Stack pops: 2
Stack additions: [V192]
Exit stack: [V9, 0x2dd, V192]

================================

Block 0x2dd
[0x2dd:0x2de]
---
Predecessors: [0x60e, 0x91c, 0xbe9]
Successors: []
---
0x2dd JUMPDEST
0x2de STOP
---
0x2dd: JUMPDEST 
0x2de: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x2df
[0x2df:0x2e6]
---
Predecessors: [0xa9]
Successors: [0x2e7, 0x2eb]
---
0x2df JUMPDEST
0x2e0 CALLVALUE
0x2e1 DUP1
0x2e2 ISZERO
0x2e3 PUSH2 0x2eb
0x2e6 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V196 = CALLVALUE
0x2e2: V197 = ISZERO V196
0x2e3: V198 = 0x2eb
0x2e6: JUMPI 0x2eb V197
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V196]
Exit stack: [V9, V196]

================================

Block 0x2e7
[0x2e7:0x2ea]
---
Predecessors: [0x2df]
Successors: []
---
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea REVERT
---
0x2e7: V199 = 0x0
0x2ea: REVERT 0x0 0x0
---
Entry stack: [V9, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V196]

================================

Block 0x2eb
[0x2eb:0x2f3]
---
Predecessors: [0x2df]
Successors: [0xbec]
---
0x2eb JUMPDEST
0x2ec POP
0x2ed PUSH2 0x2f4
0x2f0 PUSH2 0xbec
0x2f3 JUMP
---
0x2eb: JUMPDEST 
0x2ed: V200 = 0x2f4
0x2f0: V201 = 0xbec
0x2f3: JUMP 0xbec
---
Entry stack: [V9, V196]
Stack pops: 1
Stack additions: [0x2f4]
Exit stack: [V9, 0x2f4]

================================

Block 0x2f4
[0x2f4:0x2f5]
---
Predecessors: [0xe19]
Successors: []
---
0x2f4 JUMPDEST
0x2f5 STOP
---
0x2f4: JUMPDEST 
0x2f5: STOP 
---
Entry stack: [V9, {0x206, 0x2dd}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x206, 0x2dd}, S0]

================================

Block 0x2f6
[0x2f6:0x2fd]
---
Predecessors: [0xb4]
Successors: [0x2fe, 0x302]
---
0x2f6 JUMPDEST
0x2f7 CALLVALUE
0x2f8 DUP1
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2f6: JUMPDEST 
0x2f7: V202 = CALLVALUE
0x2f9: V203 = ISZERO V202
0x2fa: V204 = 0x302
0x2fd: JUMPI 0x302 V203
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V202]
Exit stack: [V9, V202]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2f6]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V205 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V9, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V202]

================================

Block 0x302
[0x302:0x30a]
---
Predecessors: [0x2f6]
Successors: [0xe1b]
---
0x302 JUMPDEST
0x303 POP
0x304 PUSH2 0x30b
0x307 PUSH2 0xe1b
0x30a JUMP
---
0x302: JUMPDEST 
0x304: V206 = 0x30b
0x307: V207 = 0xe1b
0x30a: JUMP 0xe1b
---
Entry stack: [V9, V202]
Stack pops: 1
Stack additions: [0x30b]
Exit stack: [V9, 0x30b]

================================

Block 0x30b
[0x30b:0x34c]
---
Predecessors: [0xe1b]
Successors: []
---
0x30b JUMPDEST
0x30c PUSH1 0x40
0x30e MLOAD
0x30f DUP1
0x310 DUP3
0x311 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x326 AND
0x327 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33c AND
0x33d DUP2
0x33e MSTORE
0x33f PUSH1 0x20
0x341 ADD
0x342 SWAP2
0x343 POP
0x344 POP
0x345 PUSH1 0x40
0x347 MLOAD
0x348 DUP1
0x349 SWAP2
0x34a SUB
0x34b SWAP1
0x34c RETURN
---
0x30b: JUMPDEST 
0x30c: V208 = 0x40
0x30e: V209 = M[0x40]
0x311: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x326: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V828
0x327: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x33e: M[V209] = V213
0x33f: V214 = 0x20
0x341: V215 = ADD 0x20 V209
0x345: V216 = 0x40
0x347: V217 = M[0x40]
0x34a: V218 = SUB V215 V217
0x34c: RETURN V217 V218
---
Entry stack: [V9, 0x30b, V828]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x30b]

================================

Block 0x34d
[0x34d:0x3a2]
---
Predecessors: [0xe4]
Successors: [0x3a3, 0x436]
---
0x34d JUMPDEST
0x34e PUSH1 0x0
0x350 DUP1
0x351 SWAP1
0x352 SLOAD
0x353 SWAP1
0x354 PUSH2 0x100
0x357 EXP
0x358 SWAP1
0x359 DIV
0x35a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36f AND
0x370 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x385 AND
0x386 ORIGIN
0x387 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39c AND
0x39d EQ
0x39e ISZERO
0x39f PUSH2 0x436
0x3a2 JUMPI
---
0x34d: JUMPDEST 
0x34e: V219 = 0x0
0x352: V220 = S[0x0]
0x354: V221 = 0x100
0x357: V222 = EXP 0x100 0x0
0x359: V223 = DIV V220 0x1
0x35a: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x370: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x385: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x386: V228 = ORIGIN
0x387: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x39c: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x39d: V231 = EQ V230 V227
0x39e: V232 = ISZERO V231
0x39f: V233 = 0x436
0x3a2: JUMPI 0x436 V232
---
Entry stack: [V9, 0xfa, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfa, V63]

================================

Block 0x3a3
[0x3a3:0x3c7]
---
Predecessors: [0x34d]
Successors: [0x3c8, 0x3cc]
---
0x3a3 PUSH1 0x0
0x3a5 ADDRESS
0x3a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bb AND
0x3bc BALANCE
0x3bd SWAP1
0x3be POP
0x3bf DUP1
0x3c0 DUP3
0x3c1 LT
0x3c2 ISZERO
0x3c3 ISZERO
0x3c4 PUSH2 0x3cc
0x3c7 JUMPI
---
0x3a3: V234 = 0x0
0x3a5: V235 = ADDRESS
0x3a6: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bb: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x3bc: V238 = BALANCE V237
0x3c1: V239 = LT V63 V238
0x3c2: V240 = ISZERO V239
0x3c3: V241 = ISZERO V240
0x3c4: V242 = 0x3cc
0x3c7: JUMPI 0x3cc V241
---
Entry stack: [V9, 0xfa, V63]
Stack pops: 1
Stack additions: [S0, V238]
Exit stack: [V9, 0xfa, V63, V238]

================================

Block 0x3c8
[0x3c8:0x3cb]
---
Predecessors: [0x3a3]
Successors: []
---
0x3c8 PUSH1 0x0
0x3ca DUP1
0x3cb REVERT
---
0x3c8: V243 = 0x0
0x3cb: REVERT 0x0 0x0
---
Entry stack: [V9, 0xfa, V63, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfa, V63, V238]

================================

Block 0x3cc
[0x3cc:0x40a]
---
Predecessors: [0x3a3]
Successors: [0x40b, 0x42c]
---
0x3cc JUMPDEST
0x3cd CALLER
0x3ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e3 AND
0x3e4 DUP3
0x3e5 DUP3
0x3e6 SUB
0x3e7 PUSH1 0x40
0x3e9 MLOAD
0x3ea DUP1
0x3eb PUSH1 0x0
0x3ed ADD
0x3ee SWAP1
0x3ef POP
0x3f0 PUSH1 0x0
0x3f2 PUSH1 0x40
0x3f4 MLOAD
0x3f5 DUP1
0x3f6 DUP4
0x3f7 SUB
0x3f8 DUP2
0x3f9 DUP6
0x3fa DUP8
0x3fb GAS
0x3fc CALL
0x3fd SWAP3
0x3fe POP
0x3ff POP
0x400 POP
0x401 RETURNDATASIZE
0x402 DUP1
0x403 PUSH1 0x0
0x405 DUP2
0x406 EQ
0x407 PUSH2 0x42c
0x40a JUMPI
---
0x3cc: JUMPDEST 
0x3cd: V244 = CALLER
0x3ce: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e3: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x3e6: V247 = SUB V238 V63
0x3e7: V248 = 0x40
0x3e9: V249 = M[0x40]
0x3eb: V250 = 0x0
0x3ed: V251 = ADD 0x0 V249
0x3f0: V252 = 0x0
0x3f2: V253 = 0x40
0x3f4: V254 = M[0x40]
0x3f7: V255 = SUB V251 V254
0x3fb: V256 = GAS
0x3fc: V257 = CALL V256 V246 V247 V254 V255 V254 0x0
0x401: V258 = RETURNDATASIZE
0x403: V259 = 0x0
0x406: V260 = EQ V258 0x0
0x407: V261 = 0x42c
0x40a: JUMPI 0x42c V260
---
Entry stack: [V9, 0xfa, V63, V238]
Stack pops: 2
Stack additions: [S1, S0, V257, V258, V258]
Exit stack: [V9, 0xfa, V63, V238, V257, V258, V258]

================================

Block 0x40b
[0x40b:0x42b]
---
Predecessors: [0x3cc]
Successors: [0x431]
---
0x40b PUSH1 0x40
0x40d MLOAD
0x40e SWAP2
0x40f POP
0x410 PUSH1 0x1f
0x412 NOT
0x413 PUSH1 0x3f
0x415 RETURNDATASIZE
0x416 ADD
0x417 AND
0x418 DUP3
0x419 ADD
0x41a PUSH1 0x40
0x41c MSTORE
0x41d RETURNDATASIZE
0x41e DUP3
0x41f MSTORE
0x420 RETURNDATASIZE
0x421 PUSH1 0x0
0x423 PUSH1 0x20
0x425 DUP5
0x426 ADD
0x427 RETURNDATACOPY
0x428 PUSH2 0x431
0x42b JUMP
---
0x40b: V262 = 0x40
0x40d: V263 = M[0x40]
0x410: V264 = 0x1f
0x412: V265 = NOT 0x1f
0x413: V266 = 0x3f
0x415: V267 = RETURNDATASIZE
0x416: V268 = ADD V267 0x3f
0x417: V269 = AND V268 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x419: V270 = ADD V263 V269
0x41a: V271 = 0x40
0x41c: M[0x40] = V270
0x41d: V272 = RETURNDATASIZE
0x41f: M[V263] = V272
0x420: V273 = RETURNDATASIZE
0x421: V274 = 0x0
0x423: V275 = 0x20
0x426: V276 = ADD V263 0x20
0x427: RETURNDATACOPY V276 0x0 V273
0x428: V277 = 0x431
0x42b: JUMP 0x431
---
Entry stack: [V9, 0xfa, V63, V238, V257, V258, V258]
Stack pops: 2
Stack additions: [V263, S0]
Exit stack: [V9, 0xfa, V63, V238, V257, V263, V258]

================================

Block 0x42c
[0x42c:0x430]
---
Predecessors: [0x3cc]
Successors: [0x431]
---
0x42c JUMPDEST
0x42d PUSH1 0x60
0x42f SWAP2
0x430 POP
---
0x42c: JUMPDEST 
0x42d: V278 = 0x60
---
Entry stack: [V9, 0xfa, V63, V238, V257, V258, V258]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, 0xfa, V63, V238, V257, 0x60, V258]

================================

Block 0x431
[0x431:0x435]
---
Predecessors: [0x40b, 0x42c]
Successors: [0x436]
---
0x431 JUMPDEST
0x432 POP
0x433 POP
0x434 POP
0x435 POP
---
0x431: JUMPDEST 
---
Entry stack: [V9, 0xfa, V63, V238, V257, S1, V258]
Stack pops: 4
Stack additions: []
Exit stack: [V9, 0xfa, V63]

================================

Block 0x436
[0x436:0x438]
---
Predecessors: [0x34d, 0x431]
Successors: [0xfa]
---
0x436 JUMPDEST
0x437 POP
0x438 JUMP
---
0x436: JUMPDEST 
0x438: JUMP 0xfa
---
Entry stack: [V9, 0xfa, V63]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x439
[0x439:0x48e]
---
Predecessors: [0x108]
Successors: [0x48f, 0x50c]
---
0x439 JUMPDEST
0x43a PUSH1 0x0
0x43c DUP1
0x43d SWAP1
0x43e SLOAD
0x43f SWAP1
0x440 PUSH2 0x100
0x443 EXP
0x444 SWAP1
0x445 DIV
0x446 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45b AND
0x45c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x471 AND
0x472 ORIGIN
0x473 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x488 AND
0x489 EQ
0x48a ISZERO
0x48b PUSH2 0x50c
0x48e JUMPI
---
0x439: JUMPDEST 
0x43a: V279 = 0x0
0x43e: V280 = S[0x0]
0x440: V281 = 0x100
0x443: V282 = EXP 0x100 0x0
0x445: V283 = DIV V280 0x1
0x446: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x45c: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x471: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x472: V288 = ORIGIN
0x473: V289 = 0xffffffffffffffffffffffffffffffffffffffff
0x488: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x489: V291 = EQ V290 V287
0x48a: V292 = ISZERO V291
0x48b: V293 = 0x50c
0x48e: JUMPI 0x50c V292
---
Entry stack: [V9, 0x111]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x111]

================================

Block 0x48f
[0x48f:0x4e1]
---
Predecessors: [0x439]
Successors: [0x4e2, 0x503]
---
0x48f CALLER
0x490 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a5 AND
0x4a6 ADDRESS
0x4a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bc AND
0x4bd BALANCE
0x4be PUSH1 0x40
0x4c0 MLOAD
0x4c1 DUP1
0x4c2 PUSH1 0x0
0x4c4 ADD
0x4c5 SWAP1
0x4c6 POP
0x4c7 PUSH1 0x0
0x4c9 PUSH1 0x40
0x4cb MLOAD
0x4cc DUP1
0x4cd DUP4
0x4ce SUB
0x4cf DUP2
0x4d0 DUP6
0x4d1 DUP8
0x4d2 GAS
0x4d3 CALL
0x4d4 SWAP3
0x4d5 POP
0x4d6 POP
0x4d7 POP
0x4d8 RETURNDATASIZE
0x4d9 DUP1
0x4da PUSH1 0x0
0x4dc DUP2
0x4dd EQ
0x4de PUSH2 0x503
0x4e1 JUMPI
---
0x48f: V294 = CALLER
0x490: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a5: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x4a6: V297 = ADDRESS
0x4a7: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bc: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x4bd: V300 = BALANCE V299
0x4be: V301 = 0x40
0x4c0: V302 = M[0x40]
0x4c2: V303 = 0x0
0x4c4: V304 = ADD 0x0 V302
0x4c7: V305 = 0x0
0x4c9: V306 = 0x40
0x4cb: V307 = M[0x40]
0x4ce: V308 = SUB V304 V307
0x4d2: V309 = GAS
0x4d3: V310 = CALL V309 V296 V300 V307 V308 V307 0x0
0x4d8: V311 = RETURNDATASIZE
0x4da: V312 = 0x0
0x4dd: V313 = EQ V311 0x0
0x4de: V314 = 0x503
0x4e1: JUMPI 0x503 V313
---
Entry stack: [V9, 0x111]
Stack pops: 0
Stack additions: [V310, V311, V311]
Exit stack: [V9, 0x111, V310, V311, V311]

================================

Block 0x4e2
[0x4e2:0x502]
---
Predecessors: [0x48f]
Successors: [0x508]
---
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 SWAP2
0x4e6 POP
0x4e7 PUSH1 0x1f
0x4e9 NOT
0x4ea PUSH1 0x3f
0x4ec RETURNDATASIZE
0x4ed ADD
0x4ee AND
0x4ef DUP3
0x4f0 ADD
0x4f1 PUSH1 0x40
0x4f3 MSTORE
0x4f4 RETURNDATASIZE
0x4f5 DUP3
0x4f6 MSTORE
0x4f7 RETURNDATASIZE
0x4f8 PUSH1 0x0
0x4fa PUSH1 0x20
0x4fc DUP5
0x4fd ADD
0x4fe RETURNDATACOPY
0x4ff PUSH2 0x508
0x502 JUMP
---
0x4e2: V315 = 0x40
0x4e4: V316 = M[0x40]
0x4e7: V317 = 0x1f
0x4e9: V318 = NOT 0x1f
0x4ea: V319 = 0x3f
0x4ec: V320 = RETURNDATASIZE
0x4ed: V321 = ADD V320 0x3f
0x4ee: V322 = AND V321 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4f0: V323 = ADD V316 V322
0x4f1: V324 = 0x40
0x4f3: M[0x40] = V323
0x4f4: V325 = RETURNDATASIZE
0x4f6: M[V316] = V325
0x4f7: V326 = RETURNDATASIZE
0x4f8: V327 = 0x0
0x4fa: V328 = 0x20
0x4fd: V329 = ADD V316 0x20
0x4fe: RETURNDATACOPY V329 0x0 V326
0x4ff: V330 = 0x508
0x502: JUMP 0x508
---
Entry stack: [V9, 0x111, V310, V311, V311]
Stack pops: 2
Stack additions: [V316, S0]
Exit stack: [V9, 0x111, V310, V316, V311]

================================

Block 0x503
[0x503:0x507]
---
Predecessors: [0x48f]
Successors: [0x508]
---
0x503 JUMPDEST
0x504 PUSH1 0x60
0x506 SWAP2
0x507 POP
---
0x503: JUMPDEST 
0x504: V331 = 0x60
---
Entry stack: [V9, 0x111, V310, V311, V311]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, 0x111, V310, 0x60, V311]

================================

Block 0x508
[0x508:0x50b]
---
Predecessors: [0x4e2, 0x503]
Successors: [0x50c]
---
0x508 JUMPDEST
0x509 POP
0x50a POP
0x50b POP
---
0x508: JUMPDEST 
---
Entry stack: [V9, 0x111, V310, S1, V311]
Stack pops: 3
Stack additions: []
Exit stack: [V9, 0x111]

================================

Block 0x50c
[0x50c:0x50d]
---
Predecessors: [0x439, 0x508]
Successors: [0x111]
---
0x50c JUMPDEST
0x50d JUMP
---
0x50c: JUMPDEST 
0x50d: JUMP 0x111
---
Entry stack: [V9, 0x111]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x50e
[0x50e:0x563]
---
Predecessors: [0x136]
Successors: [0x564, 0x5a4]
---
0x50e JUMPDEST
0x50f PUSH1 0x0
0x511 DUP1
0x512 SWAP1
0x513 SLOAD
0x514 SWAP1
0x515 PUSH2 0x100
0x518 EXP
0x519 SWAP1
0x51a DIV
0x51b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x530 AND
0x531 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x546 AND
0x547 ORIGIN
0x548 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55d AND
0x55e EQ
0x55f ISZERO
0x560 PUSH2 0x5a4
0x563 JUMPI
---
0x50e: JUMPDEST 
0x50f: V332 = 0x0
0x513: V333 = S[0x0]
0x515: V334 = 0x100
0x518: V335 = EXP 0x100 0x0
0x51a: V336 = DIV V333 0x1
0x51b: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x530: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x531: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x546: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x547: V341 = ORIGIN
0x548: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x55d: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x55e: V344 = EQ V343 V340
0x55f: V345 = ISZERO V344
0x560: V346 = 0x5a4
0x563: JUMPI 0x5a4 V345
---
Entry stack: [V9, 0x162, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x162, V89]

================================

Block 0x564
[0x564:0x5a3]
---
Predecessors: [0x50e]
Successors: [0x5a4]
---
0x564 DUP1
0x565 PUSH1 0x0
0x567 DUP1
0x568 PUSH2 0x100
0x56b EXP
0x56c DUP2
0x56d SLOAD
0x56e DUP2
0x56f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x584 MUL
0x585 NOT
0x586 AND
0x587 SWAP1
0x588 DUP4
0x589 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59e AND
0x59f MUL
0x5a0 OR
0x5a1 SWAP1
0x5a2 SSTORE
0x5a3 POP
---
0x565: V347 = 0x0
0x568: V348 = 0x100
0x56b: V349 = EXP 0x100 0x0
0x56d: V350 = S[0x0]
0x56f: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x584: V352 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x585: V353 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x586: V354 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V350
0x589: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x59f: V357 = MUL V356 0x1
0x5a0: V358 = OR V357 V354
0x5a2: S[0x0] = V358
---
Entry stack: [V9, 0x162, V89]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, 0x162, V89]

================================

Block 0x5a4
[0x5a4:0x5a6]
---
Predecessors: [0x50e, 0x564]
Successors: [0x162]
---
0x5a4 JUMPDEST
0x5a5 POP
0x5a6 JUMP
---
0x5a4: JUMPDEST 
0x5a6: JUMP 0x162
---
Entry stack: [V9, 0x162, V89]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x5a7
[0x5a7:0x5fc]
---
Predecessors: [0x187]
Successors: [0x5fd, 0x60e]
---
0x5a7 JUMPDEST
0x5a8 PUSH1 0x0
0x5aa DUP1
0x5ab SWAP1
0x5ac SLOAD
0x5ad SWAP1
0x5ae PUSH2 0x100
0x5b1 EXP
0x5b2 SWAP1
0x5b3 DIV
0x5b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c9 AND
0x5ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5df AND
0x5e0 ORIGIN
0x5e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f6 AND
0x5f7 EQ
0x5f8 ISZERO
0x5f9 PUSH2 0x60e
0x5fc JUMPI
---
0x5a7: JUMPDEST 
0x5a8: V359 = 0x0
0x5ac: V360 = S[0x0]
0x5ae: V361 = 0x100
0x5b1: V362 = EXP 0x100 0x0
0x5b3: V363 = DIV V360 0x1
0x5b4: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c9: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x5ca: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x5df: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x5e0: V368 = ORIGIN
0x5e1: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f6: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x5f7: V371 = EQ V370 V367
0x5f8: V372 = ISZERO V371
0x5f9: V373 = 0x60e
0x5fc: JUMPI 0x60e V372
---
Entry stack: [V9, 0x19d, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x19d, V107]

================================

Block 0x5fd
[0x5fd:0x604]
---
Predecessors: [0x5a7]
Successors: [0x91f]
---
0x5fd PUSH2 0x605
0x600 DUP2
0x601 PUSH2 0x91f
0x604 JUMP
---
0x5fd: V374 = 0x605
0x601: V375 = 0x91f
0x604: JUMP 0x91f
---
Entry stack: [V9, 0x19d, V107]
Stack pops: 1
Stack additions: [S0, 0x605, S0]
Exit stack: [V9, 0x19d, V107, 0x605, V107]

================================

Block 0x605
[0x605:0x60c]
---
Predecessors: [0xb4a]
Successors: [0x681]
---
0x605 JUMPDEST
0x606 PUSH2 0x60d
0x609 PUSH2 0x681
0x60c JUMP
---
0x605: JUMPDEST 
0x606: V376 = 0x60d
0x609: V377 = 0x681
0x60c: JUMP 0x681
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S0]
Stack pops: 0
Stack additions: [0x60d]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S0, 0x60d]

================================

Block 0x60d
[0x60d:0x60d]
---
Predecessors: [0x8ab]
Successors: [0x60e]
---
0x60d JUMPDEST
---
0x60d: JUMPDEST 
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S0]

================================

Block 0x60e
[0x60e:0x610]
---
Predecessors: [0x5a7, 0x60d]
Successors: [0x19d, 0x206, 0x2dd]
---
0x60e JUMPDEST
0x60f POP
0x610 JUMP
---
0x60e: JUMPDEST 
0x610: JUMP {0x19d, 0x206, 0x2dd}
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x611
[0x611:0x666]
---
Predecessors: [0x1ab]
Successors: [0x667, 0x67f]
---
0x611 JUMPDEST
0x612 PUSH1 0x0
0x614 DUP1
0x615 SWAP1
0x616 SLOAD
0x617 SWAP1
0x618 PUSH2 0x100
0x61b EXP
0x61c SWAP1
0x61d DIV
0x61e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x633 AND
0x634 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x649 AND
0x64a ORIGIN
0x64b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x660 AND
0x661 EQ
0x662 ISZERO
0x663 PUSH2 0x67f
0x666 JUMPI
---
0x611: JUMPDEST 
0x612: V378 = 0x0
0x616: V379 = S[0x0]
0x618: V380 = 0x100
0x61b: V381 = EXP 0x100 0x0
0x61d: V382 = DIV V379 0x1
0x61e: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x633: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x634: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x649: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x64a: V387 = ORIGIN
0x64b: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x660: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x661: V390 = EQ V389 V386
0x662: V391 = ISZERO V390
0x663: V392 = 0x67f
0x666: JUMPI 0x67f V391
---
Entry stack: [V9, 0x1b4]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1b4]

================================

Block 0x667
[0x667:0x67e]
---
Predecessors: [0x611]
Successors: []
---
0x667 CALLER
0x668 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67d AND
0x67e SELFDESTRUCT
---
0x667: V393 = CALLER
0x668: V394 = 0xffffffffffffffffffffffffffffffffffffffff
0x67d: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x67e: SELFDESTRUCT V395
---
Entry stack: [V9, 0x1b4]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1b4]

================================

Block 0x67f
[0x67f:0x680]
---
Predecessors: [0x611]
Successors: [0x1b4]
---
0x67f JUMPDEST
0x680 JUMP
---
0x67f: JUMPDEST 
0x680: JUMP 0x1b4
---
Entry stack: [V9, 0x1b4]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x681
[0x681:0x6d6]
---
Predecessors: [0x1c2, 0x605, 0x913]
Successors: [0x6d7, 0x8ab]
---
0x681 JUMPDEST
0x682 PUSH1 0x0
0x684 DUP1
0x685 SWAP1
0x686 SLOAD
0x687 SWAP1
0x688 PUSH2 0x100
0x68b EXP
0x68c SWAP1
0x68d DIV
0x68e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a3 AND
0x6a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b9 AND
0x6ba ORIGIN
0x6bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d0 AND
0x6d1 EQ
0x6d2 ISZERO
0x6d3 PUSH2 0x8ab
0x6d6 JUMPI
---
0x681: JUMPDEST 
0x682: V396 = 0x0
0x686: V397 = S[0x0]
0x688: V398 = 0x100
0x68b: V399 = EXP 0x100 0x0
0x68d: V400 = DIV V397 0x1
0x68e: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a3: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x6a4: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b9: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x6ba: V405 = ORIGIN
0x6bb: V406 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d0: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x6d1: V408 = EQ V407 V404
0x6d2: V409 = ISZERO V408
0x6d3: V410 = 0x8ab
0x6d6: JUMPI 0x8ab V409
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S1, {0x1cb, 0x60d, 0x91b}]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S1, {0x1cb, 0x60d, 0x91b}]

================================

Block 0x6d7
[0x6d7:0x7a3]
---
Predecessors: [0x681]
Successors: [0x7a4]
---
0x6d7 PUSH1 0x0
0x6d9 PUSH1 0x1
0x6db PUSH1 0x0
0x6dd SWAP1
0x6de SLOAD
0x6df SWAP1
0x6e0 PUSH2 0x100
0x6e3 EXP
0x6e4 SWAP1
0x6e5 DIV
0x6e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fb AND
0x6fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x711 AND
0x712 PUSH1 0x40
0x714 MLOAD
0x715 PUSH1 0x24
0x717 ADD
0x718 PUSH1 0x40
0x71a MLOAD
0x71b PUSH1 0x20
0x71d DUP2
0x71e DUP4
0x71f SUB
0x720 SUB
0x721 DUP2
0x722 MSTORE
0x723 SWAP1
0x724 PUSH1 0x40
0x726 MSTORE
0x727 PUSH32 0x58aace100000000000000000000000000000000000000000000000000000000
0x748 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x765 NOT
0x766 AND
0x767 PUSH1 0x20
0x769 DUP3
0x76a ADD
0x76b DUP1
0x76c MLOAD
0x76d PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x78a DUP4
0x78b DUP2
0x78c DUP4
0x78d AND
0x78e OR
0x78f DUP4
0x790 MSTORE
0x791 POP
0x792 POP
0x793 POP
0x794 POP
0x795 PUSH1 0x40
0x797 MLOAD
0x798 DUP1
0x799 DUP3
0x79a DUP1
0x79b MLOAD
0x79c SWAP1
0x79d PUSH1 0x20
0x79f ADD
0x7a0 SWAP1
0x7a1 DUP1
0x7a2 DUP4
0x7a3 DUP4
---
0x6d7: V411 = 0x0
0x6d9: V412 = 0x1
0x6db: V413 = 0x0
0x6de: V414 = S[0x1]
0x6e0: V415 = 0x100
0x6e3: V416 = EXP 0x100 0x0
0x6e5: V417 = DIV V414 0x1
0x6e6: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fb: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x6fc: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x711: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x712: V422 = 0x40
0x714: V423 = M[0x40]
0x715: V424 = 0x24
0x717: V425 = ADD 0x24 V423
0x718: V426 = 0x40
0x71a: V427 = M[0x40]
0x71b: V428 = 0x20
0x71f: V429 = SUB V425 V427
0x720: V430 = SUB V429 0x20
0x722: M[V427] = V430
0x724: V431 = 0x40
0x726: M[0x40] = V425
0x727: V432 = 0x58aace100000000000000000000000000000000000000000000000000000000
0x748: V433 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x765: V434 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x766: V435 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0x58aace100000000000000000000000000000000000000000000000000000000
0x767: V436 = 0x20
0x76a: V437 = ADD V427 0x20
0x76c: V438 = M[V437]
0x76d: V439 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x78d: V440 = AND V438 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x78e: V441 = OR V440 0x58aace100000000000000000000000000000000000000000000000000000000
0x790: M[V437] = V441
0x795: V442 = 0x40
0x797: V443 = M[0x40]
0x79b: V444 = M[V427]
0x79d: V445 = 0x20
0x79f: V446 = ADD 0x20 V427
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S1, {0x1cb, 0x60d, 0x91b}]
Stack pops: 0
Stack additions: [0x0, V421, V427, V443, V443, V446, V444, V444, V443, V446]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S1, {0x1cb, 0x60d, 0x91b}, 0x0, V421, V427, V443, V443, V446, V444, V444, V443, V446]

================================

Block 0x7a4
[0x7a4:0x7ae]
---
Predecessors: [0x6d7, 0x7af]
Successors: [0x7af, 0x7c9]
---
0x7a4 JUMPDEST
0x7a5 PUSH1 0x20
0x7a7 DUP4
0x7a8 LT
0x7a9 ISZERO
0x7aa ISZERO
0x7ab PUSH2 0x7c9
0x7ae JUMPI
---
0x7a4: JUMPDEST 
0x7a5: V447 = 0x20
0x7a8: V448 = LT S2 0x20
0x7a9: V449 = ISZERO V448
0x7aa: V450 = ISZERO V449
0x7ab: V451 = 0x7c9
0x7ae: JUMPI 0x7c9 V450
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S11, {0x1cb, 0x60d, 0x91b}, 0x0, V421, V427, V443, V443, V446, V444, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S11, {0x1cb, 0x60d, 0x91b}, 0x0, V421, V427, V443, V443, V446, V444, S2, S1, S0]

================================

Block 0x7af
[0x7af:0x7c8]
---
Predecessors: [0x7a4]
Successors: [0x7a4]
---
0x7af DUP1
0x7b0 MLOAD
0x7b1 DUP3
0x7b2 MSTORE
0x7b3 PUSH1 0x20
0x7b5 DUP3
0x7b6 ADD
0x7b7 SWAP2
0x7b8 POP
0x7b9 PUSH1 0x20
0x7bb DUP2
0x7bc ADD
0x7bd SWAP1
0x7be POP
0x7bf PUSH1 0x20
0x7c1 DUP4
0x7c2 SUB
0x7c3 SWAP3
0x7c4 POP
0x7c5 PUSH2 0x7a4
0x7c8 JUMP
---
0x7b0: V452 = M[S0]
0x7b2: M[S1] = V452
0x7b3: V453 = 0x20
0x7b6: V454 = ADD S1 0x20
0x7b9: V455 = 0x20
0x7bc: V456 = ADD S0 0x20
0x7bf: V457 = 0x20
0x7c2: V458 = SUB S2 0x20
0x7c5: V459 = 0x7a4
0x7c8: JUMP 0x7a4
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S11, {0x1cb, 0x60d, 0x91b}, 0x0, V421, V427, V443, V443, V446, V444, S2, S1, S0]
Stack pops: 3
Stack additions: [V458, V454, V456]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S11, {0x1cb, 0x60d, 0x91b}, 0x0, V421, V427, V443, V443, V446, V444, V458, V454, V456]

================================

Block 0x7c9
[0x7c9:0x809]
---
Predecessors: [0x7a4]
Successors: [0x80a, 0x82b]
---
0x7c9 JUMPDEST
0x7ca PUSH1 0x1
0x7cc DUP4
0x7cd PUSH1 0x20
0x7cf SUB
0x7d0 PUSH2 0x100
0x7d3 EXP
0x7d4 SUB
0x7d5 DUP1
0x7d6 NOT
0x7d7 DUP3
0x7d8 MLOAD
0x7d9 AND
0x7da DUP2
0x7db DUP5
0x7dc MLOAD
0x7dd AND
0x7de DUP1
0x7df DUP3
0x7e0 OR
0x7e1 DUP6
0x7e2 MSTORE
0x7e3 POP
0x7e4 POP
0x7e5 POP
0x7e6 POP
0x7e7 POP
0x7e8 POP
0x7e9 SWAP1
0x7ea POP
0x7eb ADD
0x7ec SWAP2
0x7ed POP
0x7ee POP
0x7ef PUSH1 0x0
0x7f1 PUSH1 0x40
0x7f3 MLOAD
0x7f4 DUP1
0x7f5 DUP4
0x7f6 SUB
0x7f7 DUP2
0x7f8 PUSH1 0x0
0x7fa DUP7
0x7fb GAS
0x7fc CALL
0x7fd SWAP2
0x7fe POP
0x7ff POP
0x800 RETURNDATASIZE
0x801 DUP1
0x802 PUSH1 0x0
0x804 DUP2
0x805 EQ
0x806 PUSH2 0x82b
0x809 JUMPI
---
0x7c9: JUMPDEST 
0x7ca: V460 = 0x1
0x7cd: V461 = 0x20
0x7cf: V462 = SUB 0x20 S2
0x7d0: V463 = 0x100
0x7d3: V464 = EXP 0x100 V462
0x7d4: V465 = SUB V464 0x1
0x7d6: V466 = NOT V465
0x7d8: V467 = M[S0]
0x7d9: V468 = AND V467 V466
0x7dc: V469 = M[S1]
0x7dd: V470 = AND V469 V465
0x7e0: V471 = OR V468 V470
0x7e2: M[S1] = V471
0x7eb: V472 = ADD V444 V443
0x7ef: V473 = 0x0
0x7f1: V474 = 0x40
0x7f3: V475 = M[0x40]
0x7f6: V476 = SUB V472 V475
0x7f8: V477 = 0x0
0x7fb: V478 = GAS
0x7fc: V479 = CALL V478 V421 0x0 V475 V476 V475 0x0
0x800: V480 = RETURNDATASIZE
0x802: V481 = 0x0
0x805: V482 = EQ V480 0x0
0x806: V483 = 0x82b
0x809: JUMPI 0x82b V482
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S11, {0x1cb, 0x60d, 0x91b}, 0x0, V421, V427, V443, V443, V446, V444, S2, S1, S0]
Stack pops: 9
Stack additions: [V479, V480, V480]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S11, {0x1cb, 0x60d, 0x91b}, 0x0, V479, V480, V480]

================================

Block 0x80a
[0x80a:0x82a]
---
Predecessors: [0x7c9]
Successors: [0x830]
---
0x80a PUSH1 0x40
0x80c MLOAD
0x80d SWAP2
0x80e POP
0x80f PUSH1 0x1f
0x811 NOT
0x812 PUSH1 0x3f
0x814 RETURNDATASIZE
0x815 ADD
0x816 AND
0x817 DUP3
0x818 ADD
0x819 PUSH1 0x40
0x81b MSTORE
0x81c RETURNDATASIZE
0x81d DUP3
0x81e MSTORE
0x81f RETURNDATASIZE
0x820 PUSH1 0x0
0x822 PUSH1 0x20
0x824 DUP5
0x825 ADD
0x826 RETURNDATACOPY
0x827 PUSH2 0x830
0x82a JUMP
---
0x80a: V484 = 0x40
0x80c: V485 = M[0x40]
0x80f: V486 = 0x1f
0x811: V487 = NOT 0x1f
0x812: V488 = 0x3f
0x814: V489 = RETURNDATASIZE
0x815: V490 = ADD V489 0x3f
0x816: V491 = AND V490 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x818: V492 = ADD V485 V491
0x819: V493 = 0x40
0x81b: M[0x40] = V492
0x81c: V494 = RETURNDATASIZE
0x81e: M[V485] = V494
0x81f: V495 = RETURNDATASIZE
0x820: V496 = 0x0
0x822: V497 = 0x20
0x825: V498 = ADD V485 0x20
0x826: RETURNDATACOPY V498 0x0 V495
0x827: V499 = 0x830
0x82a: JUMP 0x830
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S5, {0x1cb, 0x60d, 0x91b}, 0x0, V479, V480, V480]
Stack pops: 2
Stack additions: [V485, S0]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S5, {0x1cb, 0x60d, 0x91b}, 0x0, V479, V485, V480]

================================

Block 0x82b
[0x82b:0x82f]
---
Predecessors: [0x7c9]
Successors: [0x830]
---
0x82b JUMPDEST
0x82c PUSH1 0x60
0x82e SWAP2
0x82f POP
---
0x82b: JUMPDEST 
0x82c: V500 = 0x60
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S5, {0x1cb, 0x60d, 0x91b}, 0x0, V479, V480, V480]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S5, {0x1cb, 0x60d, 0x91b}, 0x0, V479, 0x60, V480]

================================

Block 0x830
[0x830:0x83b]
---
Predecessors: [0x80a, 0x82b]
Successors: [0x83c, 0x8a9]
---
0x830 JUMPDEST
0x831 POP
0x832 POP
0x833 SWAP1
0x834 POP
0x835 DUP1
0x836 ISZERO
0x837 ISZERO
0x838 PUSH2 0x8a9
0x83b JUMPI
---
0x830: JUMPDEST 
0x836: V501 = ISZERO S2
0x837: V502 = ISZERO V501
0x838: V503 = 0x8a9
0x83b: JUMPI 0x8a9 V502
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S5, {0x1cb, 0x60d, 0x91b}, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S5, {0x1cb, 0x60d, 0x91b}, S2]

================================

Block 0x83c
[0x83c:0x8a8]
---
Predecessors: [0x830]
Successors: []
---
0x83c PUSH1 0x40
0x83e MLOAD
0x83f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x860 DUP2
0x861 MSTORE
0x862 PUSH1 0x4
0x864 ADD
0x865 DUP1
0x866 DUP1
0x867 PUSH1 0x20
0x869 ADD
0x86a DUP3
0x86b DUP2
0x86c SUB
0x86d DUP3
0x86e MSTORE
0x86f PUSH1 0x2
0x871 DUP2
0x872 MSTORE
0x873 PUSH1 0x20
0x875 ADD
0x876 DUP1
0x877 PUSH32 0x642d000000000000000000000000000000000000000000000000000000000000
0x898 DUP2
0x899 MSTORE
0x89a POP
0x89b PUSH1 0x20
0x89d ADD
0x89e SWAP2
0x89f POP
0x8a0 POP
0x8a1 PUSH1 0x40
0x8a3 MLOAD
0x8a4 DUP1
0x8a5 SWAP2
0x8a6 SUB
0x8a7 SWAP1
0x8a8 REVERT
---
0x83c: V504 = 0x40
0x83e: V505 = M[0x40]
0x83f: V506 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x861: M[V505] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x862: V507 = 0x4
0x864: V508 = ADD 0x4 V505
0x867: V509 = 0x20
0x869: V510 = ADD 0x20 V508
0x86c: V511 = SUB V510 V508
0x86e: M[V508] = V511
0x86f: V512 = 0x2
0x872: M[V510] = 0x2
0x873: V513 = 0x20
0x875: V514 = ADD 0x20 V510
0x877: V515 = 0x642d000000000000000000000000000000000000000000000000000000000000
0x899: M[V514] = 0x642d000000000000000000000000000000000000000000000000000000000000
0x89b: V516 = 0x20
0x89d: V517 = ADD 0x20 V514
0x8a1: V518 = 0x40
0x8a3: V519 = M[0x40]
0x8a6: V520 = SUB V517 V519
0x8a8: REVERT V519 V520
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S2, {0x1cb, 0x60d, 0x91b}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S2, {0x1cb, 0x60d, 0x91b}, S0]

================================

Block 0x8a9
[0x8a9:0x8aa]
---
Predecessors: [0x830]
Successors: [0x8ab]
---
0x8a9 JUMPDEST
0x8aa POP
---
0x8a9: JUMPDEST 
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S2, {0x1cb, 0x60d, 0x91b}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S2, {0x1cb, 0x60d, 0x91b}]

================================

Block 0x8ab
[0x8ab:0x8ac]
---
Predecessors: [0x681, 0x8a9]
Successors: [0x1cb, 0x60d, 0x91b]
---
0x8ab JUMPDEST
0x8ac JUMP
---
0x8ab: JUMPDEST 
0x8ac: JUMP {0x1cb, 0x60d, 0x91b}
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S1, {0x1cb, 0x60d, 0x91b}]
Stack pops: 1
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S1]

================================

Block 0x8ad
[0x8ad:0x902]
---
Predecessors: [0x1f0]
Successors: [0x903, 0x91c]
---
0x8ad JUMPDEST
0x8ae PUSH1 0x0
0x8b0 DUP1
0x8b1 SWAP1
0x8b2 SLOAD
0x8b3 SWAP1
0x8b4 PUSH2 0x100
0x8b7 EXP
0x8b8 SWAP1
0x8b9 DIV
0x8ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8cf AND
0x8d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e5 AND
0x8e6 ORIGIN
0x8e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8fc AND
0x8fd EQ
0x8fe ISZERO
0x8ff PUSH2 0x91c
0x902 JUMPI
---
0x8ad: JUMPDEST 
0x8ae: V521 = 0x0
0x8b2: V522 = S[0x0]
0x8b4: V523 = 0x100
0x8b7: V524 = EXP 0x100 0x0
0x8b9: V525 = DIV V522 0x1
0x8ba: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x8cf: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x8d0: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e5: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x8e6: V530 = ORIGIN
0x8e7: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x8fc: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x8fd: V533 = EQ V532 V529
0x8fe: V534 = ISZERO V533
0x8ff: V535 = 0x91c
0x902: JUMPI 0x91c V534
---
Entry stack: [V9, 0x206, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x206, V137]

================================

Block 0x903
[0x903:0x909]
---
Predecessors: [0x8ad]
Successors: [0xbec]
---
0x903 PUSH2 0x90a
0x906 PUSH2 0xbec
0x909 JUMP
---
0x903: V536 = 0x90a
0x906: V537 = 0xbec
0x909: JUMP 0xbec
---
Entry stack: [V9, 0x206, V137]
Stack pops: 0
Stack additions: [0x90a]
Exit stack: [V9, 0x206, V137, 0x90a]

================================

Block 0x90a
[0x90a:0x912]
---
Predecessors: [0xe19]
Successors: [0x91f]
---
0x90a JUMPDEST
0x90b PUSH2 0x913
0x90e DUP2
0x90f PUSH2 0x91f
0x912 JUMP
---
0x90a: JUMPDEST 
0x90b: V538 = 0x913
0x90f: V539 = 0x91f
0x912: JUMP 0x91f
---
Entry stack: [V9, {0x206, 0x2dd}, S0]
Stack pops: 1
Stack additions: [S0, 0x913, S0]
Exit stack: [V9, {0x206, 0x2dd}, S0, 0x913, S0]

================================

Block 0x913
[0x913:0x91a]
---
Predecessors: [0xb4a]
Successors: [0x681]
---
0x913 JUMPDEST
0x914 PUSH2 0x91b
0x917 PUSH2 0x681
0x91a JUMP
---
0x913: JUMPDEST 
0x914: V540 = 0x91b
0x917: V541 = 0x681
0x91a: JUMP 0x681
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S0]
Stack pops: 0
Stack additions: [0x91b]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S0, 0x91b]

================================

Block 0x91b
[0x91b:0x91b]
---
Predecessors: [0x8ab]
Successors: [0x91c]
---
0x91b JUMPDEST
---
0x91b: JUMPDEST 
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S0]

================================

Block 0x91c
[0x91c:0x91e]
---
Predecessors: [0x8ad, 0x91b]
Successors: [0x19d, 0x206, 0x2dd]
---
0x91c JUMPDEST
0x91d POP
0x91e JUMP
---
0x91c: JUMPDEST 
0x91e: JUMP {0x19d, 0x206, 0x2dd}
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x91f
[0x91f:0x974]
---
Predecessors: [0x22b, 0x5fd, 0x90a, 0xbdf]
Successors: [0x975, 0xb4a]
---
0x91f JUMPDEST
0x920 PUSH1 0x0
0x922 DUP1
0x923 SWAP1
0x924 SLOAD
0x925 SWAP1
0x926 PUSH2 0x100
0x929 EXP
0x92a SWAP1
0x92b DIV
0x92c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x941 AND
0x942 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x957 AND
0x958 ORIGIN
0x959 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96e AND
0x96f EQ
0x970 ISZERO
0x971 PUSH2 0xb4a
0x974 JUMPI
---
0x91f: JUMPDEST 
0x920: V542 = 0x0
0x924: V543 = S[0x0]
0x926: V544 = 0x100
0x929: V545 = EXP 0x100 0x0
0x92b: V546 = DIV V543 0x1
0x92c: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0x941: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x942: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x957: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x958: V551 = ORIGIN
0x959: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x96e: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x96f: V554 = EQ V553 V550
0x970: V555 = ISZERO V554
0x971: V556 = 0xb4a
0x974: JUMPI 0xb4a V555
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S2, {0x241, 0x605, 0x913, 0xbe8}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S2, {0x241, 0x605, 0x913, 0xbe8}, S0]

================================

Block 0x975
[0x975:0xa42]
---
Predecessors: [0x91f]
Successors: [0xa43]
---
0x975 PUSH1 0x0
0x977 PUSH1 0x1
0x979 PUSH1 0x0
0x97b SWAP1
0x97c SLOAD
0x97d SWAP1
0x97e PUSH2 0x100
0x981 EXP
0x982 SWAP1
0x983 DIV
0x984 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x999 AND
0x99a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9af AND
0x9b0 DUP3
0x9b1 PUSH1 0x40
0x9b3 MLOAD
0x9b4 PUSH1 0x24
0x9b6 ADD
0x9b7 PUSH1 0x40
0x9b9 MLOAD
0x9ba PUSH1 0x20
0x9bc DUP2
0x9bd DUP4
0x9be SUB
0x9bf SUB
0x9c0 DUP2
0x9c1 MSTORE
0x9c2 SWAP1
0x9c3 PUSH1 0x40
0x9c5 MSTORE
0x9c6 PUSH32 0x11610c2500000000000000000000000000000000000000000000000000000000
0x9e7 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa04 NOT
0xa05 AND
0xa06 PUSH1 0x20
0xa08 DUP3
0xa09 ADD
0xa0a DUP1
0xa0b MLOAD
0xa0c PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa29 DUP4
0xa2a DUP2
0xa2b DUP4
0xa2c AND
0xa2d OR
0xa2e DUP4
0xa2f MSTORE
0xa30 POP
0xa31 POP
0xa32 POP
0xa33 POP
0xa34 PUSH1 0x40
0xa36 MLOAD
0xa37 DUP1
0xa38 DUP3
0xa39 DUP1
0xa3a MLOAD
0xa3b SWAP1
0xa3c PUSH1 0x20
0xa3e ADD
0xa3f SWAP1
0xa40 DUP1
0xa41 DUP4
0xa42 DUP4
---
0x975: V557 = 0x0
0x977: V558 = 0x1
0x979: V559 = 0x0
0x97c: V560 = S[0x1]
0x97e: V561 = 0x100
0x981: V562 = EXP 0x100 0x0
0x983: V563 = DIV V560 0x1
0x984: V564 = 0xffffffffffffffffffffffffffffffffffffffff
0x999: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V563
0x99a: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0x9af: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x9b1: V568 = 0x40
0x9b3: V569 = M[0x40]
0x9b4: V570 = 0x24
0x9b6: V571 = ADD 0x24 V569
0x9b7: V572 = 0x40
0x9b9: V573 = M[0x40]
0x9ba: V574 = 0x20
0x9be: V575 = SUB V571 V573
0x9bf: V576 = SUB V575 0x20
0x9c1: M[V573] = V576
0x9c3: V577 = 0x40
0x9c5: M[0x40] = V571
0x9c6: V578 = 0x11610c2500000000000000000000000000000000000000000000000000000000
0x9e7: V579 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa04: V580 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa05: V581 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0x11610c2500000000000000000000000000000000000000000000000000000000
0xa06: V582 = 0x20
0xa09: V583 = ADD V573 0x20
0xa0b: V584 = M[V583]
0xa0c: V585 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa2c: V586 = AND V584 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa2d: V587 = OR V586 0x11610c2500000000000000000000000000000000000000000000000000000000
0xa2f: M[V583] = V587
0xa34: V588 = 0x40
0xa36: V589 = M[0x40]
0xa3a: V590 = M[V573]
0xa3c: V591 = 0x20
0xa3e: V592 = ADD 0x20 V573
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S2, {0x241, 0x605, 0x913, 0xbe8}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V567, S0, V573, V589, V589, V592, V590, V590, V589, V592]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S2, {0x241, 0x605, 0x913, 0xbe8}, S0, 0x0, V567, S0, V573, V589, V589, V592, V590, V590, V589, V592]

================================

Block 0xa43
[0xa43:0xa4d]
---
Predecessors: [0x975, 0xa4e]
Successors: [0xa4e, 0xa68]
---
0xa43 JUMPDEST
0xa44 PUSH1 0x20
0xa46 DUP4
0xa47 LT
0xa48 ISZERO
0xa49 ISZERO
0xa4a PUSH2 0xa68
0xa4d JUMPI
---
0xa43: JUMPDEST 
0xa44: V593 = 0x20
0xa47: V594 = LT S2 0x20
0xa48: V595 = ISZERO V594
0xa49: V596 = ISZERO V595
0xa4a: V597 = 0xa68
0xa4d: JUMPI 0xa68 V596
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S13, {0x241, 0x605, 0x913, 0xbe8}, S11, 0x0, V567, S8, V573, V589, V589, V592, V590, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S13, {0x241, 0x605, 0x913, 0xbe8}, S11, 0x0, V567, S8, V573, V589, V589, V592, V590, S2, S1, S0]

================================

Block 0xa4e
[0xa4e:0xa67]
---
Predecessors: [0xa43]
Successors: [0xa43]
---
0xa4e DUP1
0xa4f MLOAD
0xa50 DUP3
0xa51 MSTORE
0xa52 PUSH1 0x20
0xa54 DUP3
0xa55 ADD
0xa56 SWAP2
0xa57 POP
0xa58 PUSH1 0x20
0xa5a DUP2
0xa5b ADD
0xa5c SWAP1
0xa5d POP
0xa5e PUSH1 0x20
0xa60 DUP4
0xa61 SUB
0xa62 SWAP3
0xa63 POP
0xa64 PUSH2 0xa43
0xa67 JUMP
---
0xa4f: V598 = M[S0]
0xa51: M[S1] = V598
0xa52: V599 = 0x20
0xa55: V600 = ADD S1 0x20
0xa58: V601 = 0x20
0xa5b: V602 = ADD S0 0x20
0xa5e: V603 = 0x20
0xa61: V604 = SUB S2 0x20
0xa64: V605 = 0xa43
0xa67: JUMP 0xa43
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S13, {0x241, 0x605, 0x913, 0xbe8}, S11, 0x0, V567, S8, V573, V589, V589, V592, V590, S2, S1, S0]
Stack pops: 3
Stack additions: [V604, V600, V602]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S13, {0x241, 0x605, 0x913, 0xbe8}, S11, 0x0, V567, S8, V573, V589, V589, V592, V590, V604, V600, V602]

================================

Block 0xa68
[0xa68:0xaa8]
---
Predecessors: [0xa43]
Successors: [0xaa9, 0xaca]
---
0xa68 JUMPDEST
0xa69 PUSH1 0x1
0xa6b DUP4
0xa6c PUSH1 0x20
0xa6e SUB
0xa6f PUSH2 0x100
0xa72 EXP
0xa73 SUB
0xa74 DUP1
0xa75 NOT
0xa76 DUP3
0xa77 MLOAD
0xa78 AND
0xa79 DUP2
0xa7a DUP5
0xa7b MLOAD
0xa7c AND
0xa7d DUP1
0xa7e DUP3
0xa7f OR
0xa80 DUP6
0xa81 MSTORE
0xa82 POP
0xa83 POP
0xa84 POP
0xa85 POP
0xa86 POP
0xa87 POP
0xa88 SWAP1
0xa89 POP
0xa8a ADD
0xa8b SWAP2
0xa8c POP
0xa8d POP
0xa8e PUSH1 0x0
0xa90 PUSH1 0x40
0xa92 MLOAD
0xa93 DUP1
0xa94 DUP4
0xa95 SUB
0xa96 DUP2
0xa97 DUP6
0xa98 DUP8
0xa99 GAS
0xa9a CALL
0xa9b SWAP3
0xa9c POP
0xa9d POP
0xa9e POP
0xa9f RETURNDATASIZE
0xaa0 DUP1
0xaa1 PUSH1 0x0
0xaa3 DUP2
0xaa4 EQ
0xaa5 PUSH2 0xaca
0xaa8 JUMPI
---
0xa68: JUMPDEST 
0xa69: V606 = 0x1
0xa6c: V607 = 0x20
0xa6e: V608 = SUB 0x20 S2
0xa6f: V609 = 0x100
0xa72: V610 = EXP 0x100 V608
0xa73: V611 = SUB V610 0x1
0xa75: V612 = NOT V611
0xa77: V613 = M[S0]
0xa78: V614 = AND V613 V612
0xa7b: V615 = M[S1]
0xa7c: V616 = AND V615 V611
0xa7f: V617 = OR V614 V616
0xa81: M[S1] = V617
0xa8a: V618 = ADD V590 V589
0xa8e: V619 = 0x0
0xa90: V620 = 0x40
0xa92: V621 = M[0x40]
0xa95: V622 = SUB V618 V621
0xa99: V623 = GAS
0xa9a: V624 = CALL V623 V567 S8 V621 V622 V621 0x0
0xa9f: V625 = RETURNDATASIZE
0xaa1: V626 = 0x0
0xaa4: V627 = EQ V625 0x0
0xaa5: V628 = 0xaca
0xaa8: JUMPI 0xaca V627
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S13, {0x241, 0x605, 0x913, 0xbe8}, S11, 0x0, V567, S8, V573, V589, V589, V592, V590, S2, S1, S0]
Stack pops: 10
Stack additions: [V624, V625, V625]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S13, {0x241, 0x605, 0x913, 0xbe8}, S11, 0x0, V624, V625, V625]

================================

Block 0xaa9
[0xaa9:0xac9]
---
Predecessors: [0xa68]
Successors: [0xacf]
---
0xaa9 PUSH1 0x40
0xaab MLOAD
0xaac SWAP2
0xaad POP
0xaae PUSH1 0x1f
0xab0 NOT
0xab1 PUSH1 0x3f
0xab3 RETURNDATASIZE
0xab4 ADD
0xab5 AND
0xab6 DUP3
0xab7 ADD
0xab8 PUSH1 0x40
0xaba MSTORE
0xabb RETURNDATASIZE
0xabc DUP3
0xabd MSTORE
0xabe RETURNDATASIZE
0xabf PUSH1 0x0
0xac1 PUSH1 0x20
0xac3 DUP5
0xac4 ADD
0xac5 RETURNDATACOPY
0xac6 PUSH2 0xacf
0xac9 JUMP
---
0xaa9: V629 = 0x40
0xaab: V630 = M[0x40]
0xaae: V631 = 0x1f
0xab0: V632 = NOT 0x1f
0xab1: V633 = 0x3f
0xab3: V634 = RETURNDATASIZE
0xab4: V635 = ADD V634 0x3f
0xab5: V636 = AND V635 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xab7: V637 = ADD V630 V636
0xab8: V638 = 0x40
0xaba: M[0x40] = V637
0xabb: V639 = RETURNDATASIZE
0xabd: M[V630] = V639
0xabe: V640 = RETURNDATASIZE
0xabf: V641 = 0x0
0xac1: V642 = 0x20
0xac4: V643 = ADD V630 0x20
0xac5: RETURNDATACOPY V643 0x0 V640
0xac6: V644 = 0xacf
0xac9: JUMP 0xacf
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S6, {0x241, 0x605, 0x913, 0xbe8}, S4, 0x0, V624, V625, V625]
Stack pops: 2
Stack additions: [V630, S0]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S6, {0x241, 0x605, 0x913, 0xbe8}, S4, 0x0, V624, V630, V625]

================================

Block 0xaca
[0xaca:0xace]
---
Predecessors: [0xa68]
Successors: [0xacf]
---
0xaca JUMPDEST
0xacb PUSH1 0x60
0xacd SWAP2
0xace POP
---
0xaca: JUMPDEST 
0xacb: V645 = 0x60
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S6, {0x241, 0x605, 0x913, 0xbe8}, S4, 0x0, V624, V625, V625]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S6, {0x241, 0x605, 0x913, 0xbe8}, S4, 0x0, V624, 0x60, V625]

================================

Block 0xacf
[0xacf:0xada]
---
Predecessors: [0xaa9, 0xaca]
Successors: [0xadb, 0xb48]
---
0xacf JUMPDEST
0xad0 POP
0xad1 POP
0xad2 SWAP1
0xad3 POP
0xad4 DUP1
0xad5 ISZERO
0xad6 ISZERO
0xad7 PUSH2 0xb48
0xada JUMPI
---
0xacf: JUMPDEST 
0xad5: V646 = ISZERO S2
0xad6: V647 = ISZERO V646
0xad7: V648 = 0xb48
0xada: JUMPI 0xb48 V647
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S6, {0x241, 0x605, 0x913, 0xbe8}, S4, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S6, {0x241, 0x605, 0x913, 0xbe8}, S4, S2]

================================

Block 0xadb
[0xadb:0xb47]
---
Predecessors: [0xacf]
Successors: []
---
0xadb PUSH1 0x40
0xadd MLOAD
0xade PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xaff DUP2
0xb00 MSTORE
0xb01 PUSH1 0x4
0xb03 ADD
0xb04 DUP1
0xb05 DUP1
0xb06 PUSH1 0x20
0xb08 ADD
0xb09 DUP3
0xb0a DUP2
0xb0b SUB
0xb0c DUP3
0xb0d MSTORE
0xb0e PUSH1 0x2
0xb10 DUP2
0xb11 MSTORE
0xb12 PUSH1 0x20
0xb14 ADD
0xb15 DUP1
0xb16 PUSH32 0x622d000000000000000000000000000000000000000000000000000000000000
0xb37 DUP2
0xb38 MSTORE
0xb39 POP
0xb3a PUSH1 0x20
0xb3c ADD
0xb3d SWAP2
0xb3e POP
0xb3f POP
0xb40 PUSH1 0x40
0xb42 MLOAD
0xb43 DUP1
0xb44 SWAP2
0xb45 SUB
0xb46 SWAP1
0xb47 REVERT
---
0xadb: V649 = 0x40
0xadd: V650 = M[0x40]
0xade: V651 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb00: M[V650] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb01: V652 = 0x4
0xb03: V653 = ADD 0x4 V650
0xb06: V654 = 0x20
0xb08: V655 = ADD 0x20 V653
0xb0b: V656 = SUB V655 V653
0xb0d: M[V653] = V656
0xb0e: V657 = 0x2
0xb11: M[V655] = 0x2
0xb12: V658 = 0x20
0xb14: V659 = ADD 0x20 V655
0xb16: V660 = 0x622d000000000000000000000000000000000000000000000000000000000000
0xb38: M[V659] = 0x622d000000000000000000000000000000000000000000000000000000000000
0xb3a: V661 = 0x20
0xb3c: V662 = ADD 0x20 V659
0xb40: V663 = 0x40
0xb42: V664 = M[0x40]
0xb45: V665 = SUB V662 V664
0xb47: REVERT V664 V665
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S3, {0x241, 0x605, 0x913, 0xbe8}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S3, {0x241, 0x605, 0x913, 0xbe8}, S1, S0]

================================

Block 0xb48
[0xb48:0xb49]
---
Predecessors: [0xacf]
Successors: [0xb4a]
---
0xb48 JUMPDEST
0xb49 POP
---
0xb48: JUMPDEST 
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S3, {0x241, 0x605, 0x913, 0xbe8}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S3, {0x241, 0x605, 0x913, 0xbe8}, S1]

================================

Block 0xb4a
[0xb4a:0xb4c]
---
Predecessors: [0x91f, 0xb48]
Successors: [0x241, 0x605, 0x913, 0xbe8]
---
0xb4a JUMPDEST
0xb4b POP
0xb4c JUMP
---
0xb4a: JUMPDEST 
0xb4c: JUMP {0x241, 0x605, 0x913, 0xbe8}
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S2, {0x241, 0x605, 0x913, 0xbe8}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S2]

================================

Block 0xb4d
[0xb4d:0xb5b]
---
Predecessors: [0x243]
Successors: [0x24b]
---
0xb4d JUMPDEST
0xb4e PUSH1 0x0
0xb50 DUP1
0xb51 SWAP1
0xb52 SLOAD
0xb53 SWAP1
0xb54 PUSH2 0x100
0xb57 EXP
0xb58 SWAP1
0xb59 POP
0xb5a POP
0xb5b JUMP
---
0xb4d: JUMPDEST 
0xb4e: V666 = 0x0
0xb52: V667 = S[0x0]
0xb54: V668 = 0x100
0xb57: V669 = EXP 0x100 0x0
0xb5b: JUMP 0x24b
---
Entry stack: [V9, 0x24b]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0xb5c
[0xb5c:0xb81]
---
Predecessors: [0x259]
Successors: [0x262]
---
0xb5c JUMPDEST
0xb5d PUSH1 0x1
0xb5f PUSH1 0x0
0xb61 SWAP1
0xb62 SLOAD
0xb63 SWAP1
0xb64 PUSH2 0x100
0xb67 EXP
0xb68 SWAP1
0xb69 DIV
0xb6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7f AND
0xb80 DUP2
0xb81 JUMP
---
0xb5c: JUMPDEST 
0xb5d: V670 = 0x1
0xb5f: V671 = 0x0
0xb62: V672 = S[0x1]
0xb64: V673 = 0x100
0xb67: V674 = EXP 0x100 0x0
0xb69: V675 = DIV V672 0x1
0xb6a: V676 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7f: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0xb81: JUMP 0x262
---
Entry stack: [V9, 0x262]
Stack pops: 1
Stack additions: [S0, V677]
Exit stack: [V9, 0x262, V677]

================================

Block 0xb82
[0xb82:0xbd7]
---
Predecessors: [0x2c7]
Successors: [0xbd8, 0xbe9]
---
0xb82 JUMPDEST
0xb83 PUSH1 0x0
0xb85 DUP1
0xb86 SWAP1
0xb87 SLOAD
0xb88 SWAP1
0xb89 PUSH2 0x100
0xb8c EXP
0xb8d SWAP1
0xb8e DIV
0xb8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba4 AND
0xba5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbba AND
0xbbb ORIGIN
0xbbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd1 AND
0xbd2 EQ
0xbd3 ISZERO
0xbd4 PUSH2 0xbe9
0xbd7 JUMPI
---
0xb82: JUMPDEST 
0xb83: V678 = 0x0
0xb87: V679 = S[0x0]
0xb89: V680 = 0x100
0xb8c: V681 = EXP 0x100 0x0
0xb8e: V682 = DIV V679 0x1
0xb8f: V683 = 0xffffffffffffffffffffffffffffffffffffffff
0xba4: V684 = AND 0xffffffffffffffffffffffffffffffffffffffff V682
0xba5: V685 = 0xffffffffffffffffffffffffffffffffffffffff
0xbba: V686 = AND 0xffffffffffffffffffffffffffffffffffffffff V684
0xbbb: V687 = ORIGIN
0xbbc: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd1: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V687
0xbd2: V690 = EQ V689 V686
0xbd3: V691 = ISZERO V690
0xbd4: V692 = 0xbe9
0xbd7: JUMPI 0xbe9 V691
---
Entry stack: [V9, 0x2dd, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x2dd, V192]

================================

Block 0xbd8
[0xbd8:0xbde]
---
Predecessors: [0xb82]
Successors: [0xbec]
---
0xbd8 PUSH2 0xbdf
0xbdb PUSH2 0xbec
0xbde JUMP
---
0xbd8: V693 = 0xbdf
0xbdb: V694 = 0xbec
0xbde: JUMP 0xbec
---
Entry stack: [V9, 0x2dd, V192]
Stack pops: 0
Stack additions: [0xbdf]
Exit stack: [V9, 0x2dd, V192, 0xbdf]

================================

Block 0xbdf
[0xbdf:0xbe7]
---
Predecessors: [0xe19]
Successors: [0x91f]
---
0xbdf JUMPDEST
0xbe0 PUSH2 0xbe8
0xbe3 DUP2
0xbe4 PUSH2 0x91f
0xbe7 JUMP
---
0xbdf: JUMPDEST 
0xbe0: V695 = 0xbe8
0xbe4: V696 = 0x91f
0xbe7: JUMP 0x91f
---
Entry stack: [V9, {0x206, 0x2dd}, S0]
Stack pops: 1
Stack additions: [S0, 0xbe8, S0]
Exit stack: [V9, {0x206, 0x2dd}, S0, 0xbe8, S0]

================================

Block 0xbe8
[0xbe8:0xbe8]
---
Predecessors: [0xb4a]
Successors: [0xbe9]
---
0xbe8 JUMPDEST
---
0xbe8: JUMPDEST 
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x19d, 0x206, 0x2dd}, S0]

================================

Block 0xbe9
[0xbe9:0xbeb]
---
Predecessors: [0xb82, 0xbe8]
Successors: [0x19d, 0x206, 0x2dd]
---
0xbe9 JUMPDEST
0xbea POP
0xbeb JUMP
---
0xbe9: JUMPDEST 
0xbeb: JUMP {0x19d, 0x206, 0x2dd}
---
Entry stack: [V9, {0x19d, 0x206, 0x2dd}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0xbec
[0xbec:0xc41]
---
Predecessors: [0x2eb, 0x903, 0xbd8]
Successors: [0xc42, 0xe19]
---
0xbec JUMPDEST
0xbed PUSH1 0x0
0xbef DUP1
0xbf0 SWAP1
0xbf1 SLOAD
0xbf2 SWAP1
0xbf3 PUSH2 0x100
0xbf6 EXP
0xbf7 SWAP1
0xbf8 DIV
0xbf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0e AND
0xc0f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc24 AND
0xc25 ORIGIN
0xc26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3b AND
0xc3c EQ
0xc3d ISZERO
0xc3e PUSH2 0xe19
0xc41 JUMPI
---
0xbec: JUMPDEST 
0xbed: V697 = 0x0
0xbf1: V698 = S[0x0]
0xbf3: V699 = 0x100
0xbf6: V700 = EXP 0x100 0x0
0xbf8: V701 = DIV V698 0x1
0xbf9: V702 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0e: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff V701
0xc0f: V704 = 0xffffffffffffffffffffffffffffffffffffffff
0xc24: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0xc25: V706 = ORIGIN
0xc26: V707 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3b: V708 = AND 0xffffffffffffffffffffffffffffffffffffffff V706
0xc3c: V709 = EQ V708 V705
0xc3d: V710 = ISZERO V709
0xc3e: V711 = 0xe19
0xc41: JUMPI 0xe19 V710
---
Entry stack: [V9, {0x206, 0x2dd}, S1, {0x2f4, 0x90a, 0xbdf}]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x206, 0x2dd}, S1, {0x2f4, 0x90a, 0xbdf}]

================================

Block 0xc42
[0xc42:0xd11]
---
Predecessors: [0xbec]
Successors: [0xd12]
---
0xc42 PUSH1 0x0
0xc44 PUSH1 0x1
0xc46 PUSH1 0x0
0xc48 SWAP1
0xc49 SLOAD
0xc4a SWAP1
0xc4b PUSH2 0x100
0xc4e EXP
0xc4f SWAP1
0xc50 DIV
0xc51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc66 AND
0xc67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7c AND
0xc7d PUSH2 0x3e8
0xc80 PUSH1 0x40
0xc82 MLOAD
0xc83 PUSH1 0x24
0xc85 ADD
0xc86 PUSH1 0x40
0xc88 MLOAD
0xc89 PUSH1 0x20
0xc8b DUP2
0xc8c DUP4
0xc8d SUB
0xc8e SUB
0xc8f DUP2
0xc90 MSTORE
0xc91 SWAP1
0xc92 PUSH1 0x40
0xc94 MSTORE
0xc95 PUSH32 0xfb099c8400000000000000000000000000000000000000000000000000000000
0xcb6 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xcd3 NOT
0xcd4 AND
0xcd5 PUSH1 0x20
0xcd7 DUP3
0xcd8 ADD
0xcd9 DUP1
0xcda MLOAD
0xcdb PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xcf8 DUP4
0xcf9 DUP2
0xcfa DUP4
0xcfb AND
0xcfc OR
0xcfd DUP4
0xcfe MSTORE
0xcff POP
0xd00 POP
0xd01 POP
0xd02 POP
0xd03 PUSH1 0x40
0xd05 MLOAD
0xd06 DUP1
0xd07 DUP3
0xd08 DUP1
0xd09 MLOAD
0xd0a SWAP1
0xd0b PUSH1 0x20
0xd0d ADD
0xd0e SWAP1
0xd0f DUP1
0xd10 DUP4
0xd11 DUP4
---
0xc42: V712 = 0x0
0xc44: V713 = 0x1
0xc46: V714 = 0x0
0xc49: V715 = S[0x1]
0xc4b: V716 = 0x100
0xc4e: V717 = EXP 0x100 0x0
0xc50: V718 = DIV V715 0x1
0xc51: V719 = 0xffffffffffffffffffffffffffffffffffffffff
0xc66: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V718
0xc67: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7c: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0xc7d: V723 = 0x3e8
0xc80: V724 = 0x40
0xc82: V725 = M[0x40]
0xc83: V726 = 0x24
0xc85: V727 = ADD 0x24 V725
0xc86: V728 = 0x40
0xc88: V729 = M[0x40]
0xc89: V730 = 0x20
0xc8d: V731 = SUB V727 V729
0xc8e: V732 = SUB V731 0x20
0xc90: M[V729] = V732
0xc92: V733 = 0x40
0xc94: M[0x40] = V727
0xc95: V734 = 0xfb099c8400000000000000000000000000000000000000000000000000000000
0xcb6: V735 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xcd3: V736 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xcd4: V737 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0xfb099c8400000000000000000000000000000000000000000000000000000000
0xcd5: V738 = 0x20
0xcd8: V739 = ADD V729 0x20
0xcda: V740 = M[V739]
0xcdb: V741 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xcfb: V742 = AND V740 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xcfc: V743 = OR V742 0xfb099c8400000000000000000000000000000000000000000000000000000000
0xcfe: M[V739] = V743
0xd03: V744 = 0x40
0xd05: V745 = M[0x40]
0xd09: V746 = M[V729]
0xd0b: V747 = 0x20
0xd0d: V748 = ADD 0x20 V729
---
Entry stack: [V9, {0x206, 0x2dd}, S1, {0x2f4, 0x90a, 0xbdf}]
Stack pops: 0
Stack additions: [0x0, V722, 0x3e8, V729, V745, V745, V748, V746, V746, V745, V748]
Exit stack: [V9, {0x206, 0x2dd}, S1, {0x2f4, 0x90a, 0xbdf}, 0x0, V722, 0x3e8, V729, V745, V745, V748, V746, V746, V745, V748]

================================

Block 0xd12
[0xd12:0xd1c]
---
Predecessors: [0xc42, 0xd1d]
Successors: [0xd1d, 0xd37]
---
0xd12 JUMPDEST
0xd13 PUSH1 0x20
0xd15 DUP4
0xd16 LT
0xd17 ISZERO
0xd18 ISZERO
0xd19 PUSH2 0xd37
0xd1c JUMPI
---
0xd12: JUMPDEST 
0xd13: V749 = 0x20
0xd16: V750 = LT S2 0x20
0xd17: V751 = ISZERO V750
0xd18: V752 = ISZERO V751
0xd19: V753 = 0xd37
0xd1c: JUMPI 0xd37 V752
---
Entry stack: [V9, {0x206, 0x2dd}, S12, {0x2f4, 0x90a, 0xbdf}, 0x0, V722, 0x3e8, V729, V745, V745, V748, V746, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V9, {0x206, 0x2dd}, S12, {0x2f4, 0x90a, 0xbdf}, 0x0, V722, 0x3e8, V729, V745, V745, V748, V746, S2, S1, S0]

================================

Block 0xd1d
[0xd1d:0xd36]
---
Predecessors: [0xd12]
Successors: [0xd12]
---
0xd1d DUP1
0xd1e MLOAD
0xd1f DUP3
0xd20 MSTORE
0xd21 PUSH1 0x20
0xd23 DUP3
0xd24 ADD
0xd25 SWAP2
0xd26 POP
0xd27 PUSH1 0x20
0xd29 DUP2
0xd2a ADD
0xd2b SWAP1
0xd2c POP
0xd2d PUSH1 0x20
0xd2f DUP4
0xd30 SUB
0xd31 SWAP3
0xd32 POP
0xd33 PUSH2 0xd12
0xd36 JUMP
---
0xd1e: V754 = M[S0]
0xd20: M[S1] = V754
0xd21: V755 = 0x20
0xd24: V756 = ADD S1 0x20
0xd27: V757 = 0x20
0xd2a: V758 = ADD S0 0x20
0xd2d: V759 = 0x20
0xd30: V760 = SUB S2 0x20
0xd33: V761 = 0xd12
0xd36: JUMP 0xd12
---
Entry stack: [V9, {0x206, 0x2dd}, S12, {0x2f4, 0x90a, 0xbdf}, 0x0, V722, 0x3e8, V729, V745, V745, V748, V746, S2, S1, S0]
Stack pops: 3
Stack additions: [V760, V756, V758]
Exit stack: [V9, {0x206, 0x2dd}, S12, {0x2f4, 0x90a, 0xbdf}, 0x0, V722, 0x3e8, V729, V745, V745, V748, V746, V760, V756, V758]

================================

Block 0xd37
[0xd37:0xd77]
---
Predecessors: [0xd12]
Successors: [0xd78, 0xd99]
---
0xd37 JUMPDEST
0xd38 PUSH1 0x1
0xd3a DUP4
0xd3b PUSH1 0x20
0xd3d SUB
0xd3e PUSH2 0x100
0xd41 EXP
0xd42 SUB
0xd43 DUP1
0xd44 NOT
0xd45 DUP3
0xd46 MLOAD
0xd47 AND
0xd48 DUP2
0xd49 DUP5
0xd4a MLOAD
0xd4b AND
0xd4c DUP1
0xd4d DUP3
0xd4e OR
0xd4f DUP6
0xd50 MSTORE
0xd51 POP
0xd52 POP
0xd53 POP
0xd54 POP
0xd55 POP
0xd56 POP
0xd57 SWAP1
0xd58 POP
0xd59 ADD
0xd5a SWAP2
0xd5b POP
0xd5c POP
0xd5d PUSH1 0x0
0xd5f PUSH1 0x40
0xd61 MLOAD
0xd62 DUP1
0xd63 DUP4
0xd64 SUB
0xd65 DUP2
0xd66 DUP6
0xd67 DUP8
0xd68 GAS
0xd69 CALL
0xd6a SWAP3
0xd6b POP
0xd6c POP
0xd6d POP
0xd6e RETURNDATASIZE
0xd6f DUP1
0xd70 PUSH1 0x0
0xd72 DUP2
0xd73 EQ
0xd74 PUSH2 0xd99
0xd77 JUMPI
---
0xd37: JUMPDEST 
0xd38: V762 = 0x1
0xd3b: V763 = 0x20
0xd3d: V764 = SUB 0x20 S2
0xd3e: V765 = 0x100
0xd41: V766 = EXP 0x100 V764
0xd42: V767 = SUB V766 0x1
0xd44: V768 = NOT V767
0xd46: V769 = M[S0]
0xd47: V770 = AND V769 V768
0xd4a: V771 = M[S1]
0xd4b: V772 = AND V771 V767
0xd4e: V773 = OR V770 V772
0xd50: M[S1] = V773
0xd59: V774 = ADD V746 V745
0xd5d: V775 = 0x0
0xd5f: V776 = 0x40
0xd61: V777 = M[0x40]
0xd64: V778 = SUB V774 V777
0xd68: V779 = GAS
0xd69: V780 = CALL V779 V722 0x3e8 V777 V778 V777 0x0
0xd6e: V781 = RETURNDATASIZE
0xd70: V782 = 0x0
0xd73: V783 = EQ V781 0x0
0xd74: V784 = 0xd99
0xd77: JUMPI 0xd99 V783
---
Entry stack: [V9, {0x206, 0x2dd}, S12, {0x2f4, 0x90a, 0xbdf}, 0x0, V722, 0x3e8, V729, V745, V745, V748, V746, S2, S1, S0]
Stack pops: 10
Stack additions: [V780, V781, V781]
Exit stack: [V9, {0x206, 0x2dd}, S12, {0x2f4, 0x90a, 0xbdf}, 0x0, V780, V781, V781]

================================

Block 0xd78
[0xd78:0xd98]
---
Predecessors: [0xd37]
Successors: [0xd9e]
---
0xd78 PUSH1 0x40
0xd7a MLOAD
0xd7b SWAP2
0xd7c POP
0xd7d PUSH1 0x1f
0xd7f NOT
0xd80 PUSH1 0x3f
0xd82 RETURNDATASIZE
0xd83 ADD
0xd84 AND
0xd85 DUP3
0xd86 ADD
0xd87 PUSH1 0x40
0xd89 MSTORE
0xd8a RETURNDATASIZE
0xd8b DUP3
0xd8c MSTORE
0xd8d RETURNDATASIZE
0xd8e PUSH1 0x0
0xd90 PUSH1 0x20
0xd92 DUP5
0xd93 ADD
0xd94 RETURNDATACOPY
0xd95 PUSH2 0xd9e
0xd98 JUMP
---
0xd78: V785 = 0x40
0xd7a: V786 = M[0x40]
0xd7d: V787 = 0x1f
0xd7f: V788 = NOT 0x1f
0xd80: V789 = 0x3f
0xd82: V790 = RETURNDATASIZE
0xd83: V791 = ADD V790 0x3f
0xd84: V792 = AND V791 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xd86: V793 = ADD V786 V792
0xd87: V794 = 0x40
0xd89: M[0x40] = V793
0xd8a: V795 = RETURNDATASIZE
0xd8c: M[V786] = V795
0xd8d: V796 = RETURNDATASIZE
0xd8e: V797 = 0x0
0xd90: V798 = 0x20
0xd93: V799 = ADD V786 0x20
0xd94: RETURNDATACOPY V799 0x0 V796
0xd95: V800 = 0xd9e
0xd98: JUMP 0xd9e
---
Entry stack: [V9, {0x206, 0x2dd}, S5, {0x2f4, 0x90a, 0xbdf}, 0x0, V780, V781, V781]
Stack pops: 2
Stack additions: [V786, S0]
Exit stack: [V9, {0x206, 0x2dd}, S5, {0x2f4, 0x90a, 0xbdf}, 0x0, V780, V786, V781]

================================

Block 0xd99
[0xd99:0xd9d]
---
Predecessors: [0xd37]
Successors: [0xd9e]
---
0xd99 JUMPDEST
0xd9a PUSH1 0x60
0xd9c SWAP2
0xd9d POP
---
0xd99: JUMPDEST 
0xd9a: V801 = 0x60
---
Entry stack: [V9, {0x206, 0x2dd}, S5, {0x2f4, 0x90a, 0xbdf}, 0x0, V780, V781, V781]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, {0x206, 0x2dd}, S5, {0x2f4, 0x90a, 0xbdf}, 0x0, V780, 0x60, V781]

================================

Block 0xd9e
[0xd9e:0xda9]
---
Predecessors: [0xd78, 0xd99]
Successors: [0xdaa, 0xe17]
---
0xd9e JUMPDEST
0xd9f POP
0xda0 POP
0xda1 SWAP1
0xda2 POP
0xda3 DUP1
0xda4 ISZERO
0xda5 ISZERO
0xda6 PUSH2 0xe17
0xda9 JUMPI
---
0xd9e: JUMPDEST 
0xda4: V802 = ISZERO S2
0xda5: V803 = ISZERO V802
0xda6: V804 = 0xe17
0xda9: JUMPI 0xe17 V803
---
Entry stack: [V9, {0x206, 0x2dd}, S5, {0x2f4, 0x90a, 0xbdf}, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V9, {0x206, 0x2dd}, S5, {0x2f4, 0x90a, 0xbdf}, S2]

================================

Block 0xdaa
[0xdaa:0xe16]
---
Predecessors: [0xd9e]
Successors: []
---
0xdaa PUSH1 0x40
0xdac MLOAD
0xdad PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xdce DUP2
0xdcf MSTORE
0xdd0 PUSH1 0x4
0xdd2 ADD
0xdd3 DUP1
0xdd4 DUP1
0xdd5 PUSH1 0x20
0xdd7 ADD
0xdd8 DUP3
0xdd9 DUP2
0xdda SUB
0xddb DUP3
0xddc MSTORE
0xddd PUSH1 0x2
0xddf DUP2
0xde0 MSTORE
0xde1 PUSH1 0x20
0xde3 ADD
0xde4 DUP1
0xde5 PUSH32 0x692d000000000000000000000000000000000000000000000000000000000000
0xe06 DUP2
0xe07 MSTORE
0xe08 POP
0xe09 PUSH1 0x20
0xe0b ADD
0xe0c SWAP2
0xe0d POP
0xe0e POP
0xe0f PUSH1 0x40
0xe11 MLOAD
0xe12 DUP1
0xe13 SWAP2
0xe14 SUB
0xe15 SWAP1
0xe16 REVERT
---
0xdaa: V805 = 0x40
0xdac: V806 = M[0x40]
0xdad: V807 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xdcf: M[V806] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xdd0: V808 = 0x4
0xdd2: V809 = ADD 0x4 V806
0xdd5: V810 = 0x20
0xdd7: V811 = ADD 0x20 V809
0xdda: V812 = SUB V811 V809
0xddc: M[V809] = V812
0xddd: V813 = 0x2
0xde0: M[V811] = 0x2
0xde1: V814 = 0x20
0xde3: V815 = ADD 0x20 V811
0xde5: V816 = 0x692d000000000000000000000000000000000000000000000000000000000000
0xe07: M[V815] = 0x692d000000000000000000000000000000000000000000000000000000000000
0xe09: V817 = 0x20
0xe0b: V818 = ADD 0x20 V815
0xe0f: V819 = 0x40
0xe11: V820 = M[0x40]
0xe14: V821 = SUB V818 V820
0xe16: REVERT V820 V821
---
Entry stack: [V9, {0x206, 0x2dd}, S2, {0x2f4, 0x90a, 0xbdf}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, {0x206, 0x2dd}, S2, {0x2f4, 0x90a, 0xbdf}, S0]

================================

Block 0xe17
[0xe17:0xe18]
---
Predecessors: [0xd9e]
Successors: [0xe19]
---
0xe17 JUMPDEST
0xe18 POP
---
0xe17: JUMPDEST 
---
Entry stack: [V9, {0x206, 0x2dd}, S2, {0x2f4, 0x90a, 0xbdf}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, {0x206, 0x2dd}, S2, {0x2f4, 0x90a, 0xbdf}]

================================

Block 0xe19
[0xe19:0xe1a]
---
Predecessors: [0xbec, 0xe17]
Successors: [0x2f4, 0x90a, 0xbdf]
---
0xe19 JUMPDEST
0xe1a JUMP
---
0xe19: JUMPDEST 
0xe1a: JUMP {0x2f4, 0x90a, 0xbdf}
---
Entry stack: [V9, {0x206, 0x2dd}, S1, {0x2f4, 0x90a, 0xbdf}]
Stack pops: 1
Stack additions: []
Exit stack: [V9, {0x206, 0x2dd}, S1]

================================

Block 0xe1b
[0xe1b:0xe3f]
---
Predecessors: [0x302]
Successors: [0x30b]
---
0xe1b JUMPDEST
0xe1c PUSH1 0x0
0xe1e DUP1
0xe1f SWAP1
0xe20 SLOAD
0xe21 SWAP1
0xe22 PUSH2 0x100
0xe25 EXP
0xe26 SWAP1
0xe27 DIV
0xe28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3d AND
0xe3e DUP2
0xe3f JUMP
---
0xe1b: JUMPDEST 
0xe1c: V822 = 0x0
0xe20: V823 = S[0x0]
0xe22: V824 = 0x100
0xe25: V825 = EXP 0x100 0x0
0xe27: V826 = DIV V823 0x1
0xe28: V827 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3d: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V826
0xe3f: JUMP 0x30b
---
Entry stack: [V9, 0x30b]
Stack pops: 1
Stack additions: [S0, V828]
Exit stack: [V9, 0x30b, V828]

================================

Block 0xe40
[0xe40:0xe6b]
---
Predecessors: []
Successors: []
---
0xe40 INVALID
0xe41 LOG1
0xe42 PUSH6 0x627a7a723058
0xe49 SHA3
0xe4a PUSH6 0x230938e10e6c
0xe51 MISSING 0xf8
0xe52 SWAP5
0xe53 DIFFICULTY
0xe54 SWAP3
0xe55 DUP15
0xe56 MISSING 0xd3
0xe57 MISSING 0xb5
0xe58 MISSING 0x5c
0xe59 DIV
0xe5a MISSING 0xd6
0xe5b MISSING 0xe9
0xe5c MISSING 0xd2
0xe5d SWAP7
0xe5e STOP
0xe5f SWAP2
0xe60 DIV
0xe61 MISSING 0xc1
0xe62 SSTORE
0xe63 MISSING 0xe3
0xe64 MISSING 0xc
0xe65 MLOAD
0xe66 EQ
0xe67 MISSING 0xe5
0xe68 AND
0xe69 CODESIZE
0xe6a STOP
0xe6b MISSING 0x29
---
0xe40: INVALID 
0xe41: LOG S0 S1 S2
0xe42: V829 = 0x627a7a723058
0xe49: V830 = SHA3 0x627a7a723058 S3
0xe4a: V831 = 0x230938e10e6c
0xe51: MISSING 0xf8
0xe53: V832 = DIFFICULTY
0xe56: MISSING 0xd3
0xe57: MISSING 0xb5
0xe58: MISSING 0x5c
0xe59: V833 = DIV S0 S1
0xe5a: MISSING 0xd6
0xe5b: MISSING 0xe9
0xe5c: MISSING 0xd2
0xe5e: STOP 
0xe60: V834 = DIV S2 S1
0xe61: MISSING 0xc1
0xe62: S[S0] = S1
0xe63: MISSING 0xe3
0xe64: MISSING 0xc
0xe65: V835 = M[S0]
0xe66: V836 = EQ V835 S1
0xe67: MISSING 0xe5
0xe68: V837 = AND S0 S1
0xe69: V838 = CODESIZE
0xe6a: STOP 
0xe6b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x230938e10e6c, V830, S13, S2, S5, S1, V832, S3, S4, S0, S6, S7, S8, S9, S10, S11, S12, S13, V833, S7, S1, S2, S3, S4, S5, S6, S0, V834, S0, V836, V838, V837]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0xc1
Exit block: 0x3c8
Body: 0xc1, 0xc9, 0xcd, 0xe0, 0xe4, 0xfa, 0x34d, 0x3a3, 0x3c8, 0x3cc, 0x40b, 0x42c, 0x431, 0x436

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xfc
Exit block: 0x111
Body: 0xfc, 0x104, 0x108, 0x111, 0x439, 0x48f, 0x4e2, 0x503, 0x508, 0x50c

Function 2:
Public function signature: 0x46a9dc7e
Entry block: 0x113
Exit block: 0x162
Body: 0x113, 0x11b, 0x11f, 0x132, 0x136, 0x162, 0x50e, 0x564, 0x5a4

Function 3:
Public function signature: 0x4aa8732c
Entry block: 0x164
Exit block: 0x2dd
Body: 0x164, 0x16c, 0x170, 0x183, 0x187, 0x19d, 0x206, 0x2dd, 0x5a7, 0x5fd, 0x605, 0x60e

Function 4:
Public function signature: 0x83197ef0
Entry block: 0x19f
Exit block: 0x1b4
Body: 0x19f, 0x1a7, 0x1ab, 0x1b4, 0x611, 0x667, 0x67f

Function 5:
Public function signature: 0x8a054ac2
Entry block: 0x1b6
Exit block: 0x1be
Body: 0x1b6, 0x1be, 0x1c2, 0x1cb

Function 6:
Public function signature: 0xaddb7a8e
Entry block: 0x1cd
Exit block: 0x2dd
Body: 0x19d, 0x1cd, 0x1d5, 0x1d9, 0x1ec, 0x1f0, 0x206, 0x2dd, 0x8ad, 0x903, 0x90a, 0x91c

Function 7:
Public function signature: 0xcd580ff3
Entry block: 0x208
Exit block: 0x2dd
Body: 0x208, 0x210, 0x214, 0x227, 0x22b, 0x2dd

Function 8:
Public function signature: 0xd0e30db0
Entry block: 0x243
Exit block: 0x24b
Body: 0x243, 0x24b, 0xb4d

Function 9:
Public function signature: 0xd4b83992
Entry block: 0x24d
Exit block: 0x262
Body: 0x24d, 0x255, 0x259, 0x262, 0xb5c

Function 10:
Public function signature: 0xd755ad13
Entry block: 0x2a4
Exit block: 0x2dd
Body: 0x19d, 0x206, 0x2a4, 0x2ac, 0x2b0, 0x2c3, 0x2c7, 0x2dd, 0xb82, 0xbd8, 0xbdf, 0xbe9

Function 11:
Public function signature: 0xe5aa3d58
Entry block: 0x2df
Exit block: 0x2f4
Body: 0x2df, 0x2e7, 0x2eb, 0x2f4

Function 12:
Public function signature: 0xfb1e4cff
Entry block: 0x2f6
Exit block: 0x30b
Body: 0x2f6, 0x2fe, 0x302, 0x30b, 0xe1b

Function 13:
Public fallback function
Entry block: 0xbf
Exit block: 0xbf
Body: 0xbf

Function 14:
Private function
Entry block: 0xbec
Exit block: 0xe19
Body: 0xbec, 0xc42, 0xd12, 0xd1d, 0xd37, 0xd78, 0xd99, 0xd9e, 0xe17, 0xe19

Function 15:
Private function
Entry block: 0x91f
Exit block: 0xb4a
Body: 0x91f, 0x975, 0xa43, 0xa4e, 0xa68, 0xaa9, 0xaca, 0xacf, 0xb48, 0xb4a

Function 16:
Private function
Entry block: 0x681
Exit block: 0x8ab
Body: 0x681, 0x6d7, 0x7a4, 0x7af, 0x7c9, 0x80a, 0x82b, 0x830, 0x8a9, 0x8ab

