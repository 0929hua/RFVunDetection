Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3853682c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3853682c
0x3b: V13 = EQ V11 0x3853682c
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8c]
---
0x40 DUP1
0x41 PUSH4 0x3e3ee859
0x46 EQ
0x47 PUSH2 0x8c
0x4a JUMPI
---
0x41: V15 = 0x3e3ee859
0x46: V16 = EQ 0x3e3ee859 V11
0x47: V17 = 0x8c
0x4a: JUMPI 0x8c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xda]
---
0x4b DUP1
0x4c PUSH4 0x3fad9ae0
0x51 EQ
0x52 PUSH2 0xda
0x55 JUMPI
---
0x4c: V18 = 0x3fad9ae0
0x51: V19 = EQ 0x3fad9ae0 V11
0x52: V20 = 0xda
0x55: JUMPI 0xda V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x164]
---
0x56 DUP1
0x57 PUSH4 0x59988dce
0x5c EQ
0x5d PUSH2 0x164
0x60 JUMPI
---
0x57: V21 = 0x59988dce
0x5c: V22 = EQ 0x59988dce V11
0x5d: V23 = 0x164
0x60: JUMPI 0x164 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x192]
---
0x61 DUP1
0x62 PUSH4 0xb96d64fb
0x67 EQ
0x68 PUSH2 0x192
0x6b JUMPI
---
0x62: V24 = 0xb96d64fb
0x67: V25 = EQ 0xb96d64fb V11
0x68: V26 = 0x192
0x6b: JUMPI 0x192 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x21c]
---
0x6c DUP1
0x6d PUSH4 0xf50ab247
0x72 EQ
0x73 PUSH2 0x21c
0x76 JUMPI
---
0x6d: V27 = 0xf50ab247
0x72: V28 = EQ 0xf50ab247 V11
0x73: V29 = 0x21c
0x76: JUMPI 0x21c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x2f8, 0x333, 0x3eb, 0x504, 0x596, 0x613]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]

================================

Block 0x79
[0x79:0x8b]
---
Predecessors: [0xd]
Successors: [0x224]
---
0x79 JUMPDEST
0x7a PUSH2 0x77
0x7d PUSH1 0x4
0x7f DUP1
0x80 CALLDATALOAD
0x81 PUSH1 0x24
0x83 DUP2
0x84 ADD
0x85 SWAP2
0x86 ADD
0x87 CALLDATALOAD
0x88 PUSH2 0x224
0x8b JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x77
0x7d: V31 = 0x4
0x80: V32 = CALLDATALOAD 0x4
0x81: V33 = 0x24
0x84: V34 = ADD V32 0x24
0x86: V35 = ADD 0x4 V32
0x87: V36 = CALLDATALOAD V35
0x88: V37 = 0x224
0x8b: JUMP 0x224
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V34, V36]
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x8c
[0x8c:0xd9]
---
Predecessors: [0x40]
Successors: [0x2fc]
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f DUP1
0x90 MLOAD
0x91 PUSH1 0x20
0x93 PUSH1 0x4
0x95 DUP1
0x96 CALLDATALOAD
0x97 DUP1
0x98 DUP3
0x99 ADD
0x9a CALLDATALOAD
0x9b PUSH1 0x1f
0x9d DUP2
0x9e ADD
0x9f DUP5
0xa0 SWAP1
0xa1 DIV
0xa2 DUP5
0xa3 MUL
0xa4 DUP6
0xa5 ADD
0xa6 DUP5
0xa7 ADD
0xa8 SWAP1
0xa9 SWAP6
0xaa MSTORE
0xab DUP5
0xac DUP5
0xad MSTORE
0xae PUSH2 0x77
0xb1 SWAP5
0xb2 CALLDATASIZE
0xb3 SWAP5
0xb4 SWAP3
0xb5 SWAP4
0xb6 PUSH1 0x24
0xb8 SWAP4
0xb9 SWAP3
0xba DUP5
0xbb ADD
0xbc SWAP2
0xbd SWAP1
0xbe DUP2
0xbf SWAP1
0xc0 DUP5
0xc1 ADD
0xc2 DUP4
0xc3 DUP3
0xc4 DUP1
0xc5 DUP3
0xc6 DUP5
0xc7 CALLDATACOPY
0xc8 POP
0xc9 SWAP5
0xca SWAP8
0xcb POP
0xcc POP
0xcd SWAP4
0xce CALLDATALOAD
0xcf SWAP5
0xd0 POP
0xd1 PUSH2 0x2fc
0xd4 SWAP4
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 POP
0xd9 JUMP
---
0x8c: JUMPDEST 
0x8d: V38 = 0x40
0x90: V39 = M[0x40]
0x91: V40 = 0x20
0x93: V41 = 0x4
0x96: V42 = CALLDATALOAD 0x4
0x99: V43 = ADD 0x4 V42
0x9a: V44 = CALLDATALOAD V43
0x9b: V45 = 0x1f
0x9e: V46 = ADD V44 0x1f
0xa1: V47 = DIV V46 0x20
0xa3: V48 = MUL 0x20 V47
0xa5: V49 = ADD V39 V48
0xa7: V50 = ADD 0x20 V49
0xaa: M[0x40] = V50
0xad: M[V39] = V44
0xae: V51 = 0x77
0xb2: V52 = CALLDATASIZE
0xb6: V53 = 0x24
0xbb: V54 = ADD 0x24 V42
0xc1: V55 = ADD V39 0x20
0xc7: CALLDATACOPY V55 V54 V44
0xce: V56 = CALLDATALOAD 0x24
0xd1: V57 = 0x2fc
0xd9: JUMP 0x2fc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V39, V56]
Exit stack: [V11, 0x77, V39, V56]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0x4b]
Successors: [0xe2, 0xe6]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc DUP1
0xdd ISZERO
0xde PUSH2 0xe6
0xe1 JUMPI
---
0xda: JUMPDEST 
0xdb: V58 = CALLVALUE
0xdd: V59 = ISZERO V58
0xde: V60 = 0xe6
0xe1: JUMPI 0xe6 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xe2
[0xe2:0xe5]
---
Predecessors: [0xda]
Successors: []
---
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe2: V61 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xe6
[0xe6:0xee]
---
Predecessors: [0xda]
Successors: [0x33a]
---
0xe6 JUMPDEST
0xe7 POP
0xe8 PUSH2 0xef
0xeb PUSH2 0x33a
0xee JUMP
---
0xe6: JUMPDEST 
0xe8: V62 = 0xef
0xeb: V63 = 0x33a
0xee: JUMP 0x33a
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xef]
Exit stack: [V11, 0xef]

================================

Block 0xef
[0xef:0x110]
---
Predecessors: [0x3bf]
Successors: [0x111]
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 DUP1
0xf3 MLOAD
0xf4 PUSH1 0x20
0xf6 DUP1
0xf7 DUP3
0xf8 MSTORE
0xf9 DUP4
0xfa MLOAD
0xfb DUP2
0xfc DUP4
0xfd ADD
0xfe MSTORE
0xff DUP4
0x100 MLOAD
0x101 SWAP2
0x102 SWAP3
0x103 DUP4
0x104 SWAP3
0x105 SWAP1
0x106 DUP4
0x107 ADD
0x108 SWAP2
0x109 DUP6
0x10a ADD
0x10b SWAP1
0x10c DUP1
0x10d DUP4
0x10e DUP4
0x10f PUSH1 0x0
---
0xef: JUMPDEST 
0xf0: V64 = 0x40
0xf3: V65 = M[0x40]
0xf4: V66 = 0x20
0xf8: M[V65] = 0x20
0xfa: V67 = M[V244]
0xfd: V68 = ADD V65 0x20
0xfe: M[V68] = V67
0x100: V69 = M[V244]
0x107: V70 = ADD V65 0x40
0x10a: V71 = ADD V244 0x20
0x10f: V72 = 0x0
---
Entry stack: [V11, 0xef, V244]
Stack pops: 1
Stack additions: [S0, V65, V65, V70, V71, V69, V69, V70, V71, 0x0]
Exit stack: [V11, 0xef, V244, V65, V65, V70, V71, V69, V69, V70, V71, 0x0]

================================

Block 0x111
[0x111:0x119]
---
Predecessors: [0xef, 0x11a]
Successors: [0x11a, 0x129]
---
0x111 JUMPDEST
0x112 DUP4
0x113 DUP2
0x114 LT
0x115 ISZERO
0x116 PUSH2 0x129
0x119 JUMPI
---
0x111: JUMPDEST 
0x114: V73 = LT S0 V69
0x115: V74 = ISZERO V73
0x116: V75 = 0x129
0x119: JUMPI 0x129 V74
---
Entry stack: [V11, 0xef, V244, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xef, V244, V65, V65, V70, V71, V69, V69, V70, V71, S0]

================================

Block 0x11a
[0x11a:0x128]
---
Predecessors: [0x111]
Successors: [0x111]
---
0x11a DUP2
0x11b DUP2
0x11c ADD
0x11d MLOAD
0x11e DUP4
0x11f DUP3
0x120 ADD
0x121 MSTORE
0x122 PUSH1 0x20
0x124 ADD
0x125 PUSH2 0x111
0x128 JUMP
---
0x11c: V76 = ADD S0 V71
0x11d: V77 = M[V76]
0x120: V78 = ADD S0 V70
0x121: M[V78] = V77
0x122: V79 = 0x20
0x124: V80 = ADD 0x20 S0
0x125: V81 = 0x111
0x128: JUMP 0x111
---
Entry stack: [V11, 0xef, V244, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 3
Stack additions: [S2, S1, V80]
Exit stack: [V11, 0xef, V244, V65, V65, V70, V71, V69, V69, V70, V71, V80]

================================

Block 0x129
[0x129:0x13c]
---
Predecessors: [0x111]
Successors: [0x13d, 0x156]
---
0x129 JUMPDEST
0x12a POP
0x12b POP
0x12c POP
0x12d POP
0x12e SWAP1
0x12f POP
0x130 SWAP1
0x131 DUP2
0x132 ADD
0x133 SWAP1
0x134 PUSH1 0x1f
0x136 AND
0x137 DUP1
0x138 ISZERO
0x139 PUSH2 0x156
0x13c JUMPI
---
0x129: JUMPDEST 
0x132: V82 = ADD V69 V70
0x134: V83 = 0x1f
0x136: V84 = AND 0x1f V69
0x138: V85 = ISZERO V84
0x139: V86 = 0x156
0x13c: JUMPI 0x156 V85
---
Entry stack: [V11, 0xef, V244, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 7
Stack additions: [V82, V84]
Exit stack: [V11, 0xef, V244, V65, V65, V82, V84]

================================

Block 0x13d
[0x13d:0x155]
---
Predecessors: [0x129]
Successors: [0x156]
---
0x13d DUP1
0x13e DUP3
0x13f SUB
0x140 DUP1
0x141 MLOAD
0x142 PUSH1 0x1
0x144 DUP4
0x145 PUSH1 0x20
0x147 SUB
0x148 PUSH2 0x100
0x14b EXP
0x14c SUB
0x14d NOT
0x14e AND
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP2
0x155 POP
---
0x13f: V87 = SUB V82 V84
0x141: V88 = M[V87]
0x142: V89 = 0x1
0x145: V90 = 0x20
0x147: V91 = SUB 0x20 V84
0x148: V92 = 0x100
0x14b: V93 = EXP 0x100 V91
0x14c: V94 = SUB V93 0x1
0x14d: V95 = NOT V94
0x14e: V96 = AND V95 V88
0x150: M[V87] = V96
0x151: V97 = 0x20
0x153: V98 = ADD 0x20 V87
---
Entry stack: [V11, 0xef, V244, V65, V65, V82, V84]
Stack pops: 2
Stack additions: [V98, S0]
Exit stack: [V11, 0xef, V244, V65, V65, V98, V84]

================================

Block 0x156
[0x156:0x163]
---
Predecessors: [0x129, 0x13d]
Successors: []
---
0x156 JUMPDEST
0x157 POP
0x158 SWAP3
0x159 POP
0x15a POP
0x15b POP
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 SWAP2
0x161 SUB
0x162 SWAP1
0x163 RETURN
---
0x156: JUMPDEST 
0x15c: V99 = 0x40
0x15e: V100 = M[0x40]
0x161: V101 = SUB S1 V100
0x163: RETURN V100 V101
---
Entry stack: [V11, 0xef, V244, V65, V65, S1, V84]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xef]

================================

Block 0x164
[0x164:0x16b]
---
Predecessors: [0x56]
Successors: [0x16c, 0x170]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 DUP1
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x164: JUMPDEST 
0x165: V102 = CALLVALUE
0x167: V103 = ISZERO V102
0x168: V104 = 0x170
0x16b: JUMPI 0x170 V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V11, V102]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x164]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V105 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V11, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V102]

================================

Block 0x170
[0x170:0x191]
---
Predecessors: [0x164]
Successors: [0x3c7]
---
0x170 JUMPDEST
0x171 POP
0x172 PUSH2 0x77
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a PUSH1 0x4
0x18c CALLDATALOAD
0x18d AND
0x18e PUSH2 0x3c7
0x191 JUMP
---
0x170: JUMPDEST 
0x172: V106 = 0x77
0x175: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V108 = 0x4
0x18c: V109 = CALLDATALOAD 0x4
0x18d: V110 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V111 = 0x3c7
0x191: JUMP 0x3c7
---
Entry stack: [V11, V102]
Stack pops: 1
Stack additions: [0x77, V110]
Exit stack: [V11, 0x77, V110]

================================

Block 0x192
[0x192:0x21b]
---
Predecessors: [0x61]
Successors: [0x427]
---
0x192 JUMPDEST
0x193 PUSH1 0x40
0x195 DUP1
0x196 MLOAD
0x197 PUSH1 0x20
0x199 PUSH1 0x4
0x19b DUP1
0x19c CALLDATALOAD
0x19d DUP1
0x19e DUP3
0x19f ADD
0x1a0 CALLDATALOAD
0x1a1 PUSH1 0x1f
0x1a3 DUP2
0x1a4 ADD
0x1a5 DUP5
0x1a6 SWAP1
0x1a7 DIV
0x1a8 DUP5
0x1a9 MUL
0x1aa DUP6
0x1ab ADD
0x1ac DUP5
0x1ad ADD
0x1ae SWAP1
0x1af SWAP6
0x1b0 MSTORE
0x1b1 DUP5
0x1b2 DUP5
0x1b3 MSTORE
0x1b4 PUSH2 0x77
0x1b7 SWAP5
0x1b8 CALLDATASIZE
0x1b9 SWAP5
0x1ba SWAP3
0x1bb SWAP4
0x1bc PUSH1 0x24
0x1be SWAP4
0x1bf SWAP3
0x1c0 DUP5
0x1c1 ADD
0x1c2 SWAP2
0x1c3 SWAP1
0x1c4 DUP2
0x1c5 SWAP1
0x1c6 DUP5
0x1c7 ADD
0x1c8 DUP4
0x1c9 DUP3
0x1ca DUP1
0x1cb DUP3
0x1cc DUP5
0x1cd CALLDATACOPY
0x1ce POP
0x1cf POP
0x1d0 PUSH1 0x40
0x1d2 DUP1
0x1d3 MLOAD
0x1d4 PUSH1 0x20
0x1d6 PUSH1 0x1f
0x1d8 DUP10
0x1d9 CALLDATALOAD
0x1da DUP12
0x1db ADD
0x1dc DUP1
0x1dd CALLDATALOAD
0x1de SWAP2
0x1df DUP3
0x1e0 ADD
0x1e1 DUP4
0x1e2 SWAP1
0x1e3 DIV
0x1e4 DUP4
0x1e5 MUL
0x1e6 DUP5
0x1e7 ADD
0x1e8 DUP4
0x1e9 ADD
0x1ea SWAP1
0x1eb SWAP5
0x1ec MSTORE
0x1ed DUP1
0x1ee DUP4
0x1ef MSTORE
0x1f0 SWAP8
0x1f1 SWAP11
0x1f2 SWAP10
0x1f3 SWAP9
0x1f4 DUP2
0x1f5 ADD
0x1f6 SWAP8
0x1f7 SWAP2
0x1f8 SWAP7
0x1f9 POP
0x1fa SWAP2
0x1fb DUP3
0x1fc ADD
0x1fd SWAP5
0x1fe POP
0x1ff SWAP3
0x200 POP
0x201 DUP3
0x202 SWAP2
0x203 POP
0x204 DUP5
0x205 ADD
0x206 DUP4
0x207 DUP3
0x208 DUP1
0x209 DUP3
0x20a DUP5
0x20b CALLDATACOPY
0x20c POP
0x20d SWAP5
0x20e SWAP8
0x20f POP
0x210 PUSH2 0x427
0x213 SWAP7
0x214 POP
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 POP
0x21a POP
0x21b JUMP
---
0x192: JUMPDEST 
0x193: V112 = 0x40
0x196: V113 = M[0x40]
0x197: V114 = 0x20
0x199: V115 = 0x4
0x19c: V116 = CALLDATALOAD 0x4
0x19f: V117 = ADD 0x4 V116
0x1a0: V118 = CALLDATALOAD V117
0x1a1: V119 = 0x1f
0x1a4: V120 = ADD V118 0x1f
0x1a7: V121 = DIV V120 0x20
0x1a9: V122 = MUL 0x20 V121
0x1ab: V123 = ADD V113 V122
0x1ad: V124 = ADD 0x20 V123
0x1b0: M[0x40] = V124
0x1b3: M[V113] = V118
0x1b4: V125 = 0x77
0x1b8: V126 = CALLDATASIZE
0x1bc: V127 = 0x24
0x1c1: V128 = ADD 0x24 V116
0x1c7: V129 = ADD V113 0x20
0x1cd: CALLDATACOPY V129 V128 V118
0x1d0: V130 = 0x40
0x1d3: V131 = M[0x40]
0x1d4: V132 = 0x20
0x1d6: V133 = 0x1f
0x1d9: V134 = CALLDATALOAD 0x24
0x1db: V135 = ADD 0x4 V134
0x1dd: V136 = CALLDATALOAD V135
0x1e0: V137 = ADD V136 0x1f
0x1e3: V138 = DIV V137 0x20
0x1e5: V139 = MUL 0x20 V138
0x1e7: V140 = ADD V131 V139
0x1e9: V141 = ADD 0x20 V140
0x1ec: M[0x40] = V141
0x1ef: M[V131] = V136
0x1f5: V142 = ADD 0x20 0x24
0x1fc: V143 = ADD 0x20 V135
0x205: V144 = ADD V131 0x20
0x20b: CALLDATACOPY V144 V143 V136
0x210: V145 = 0x427
0x21b: JUMP 0x427
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V113, V131]
Exit stack: [V11, 0x77, V113, V131]

================================

Block 0x21c
[0x21c:0x223]
---
Predecessors: [0x6c]
Successors: [0x545]
---
0x21c JUMPDEST
0x21d PUSH2 0x77
0x220 PUSH2 0x545
0x223 JUMP
---
0x21c: JUMPDEST 
0x21d: V146 = 0x77
0x220: V147 = 0x545
0x223: JUMP 0x545
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x224
[0x224:0x22b]
---
Predecessors: [0x79]
Successors: [0x22c, 0x230]
---
0x224 JUMPDEST
0x225 CALLER
0x226 ORIGIN
0x227 EQ
0x228 PUSH2 0x230
0x22b JUMPI
---
0x224: JUMPDEST 
0x225: V148 = CALLER
0x226: V149 = ORIGIN
0x227: V150 = EQ V149 V148
0x228: V151 = 0x230
0x22b: JUMPI 0x230 V150
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x224]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V152 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x230
[0x230:0x266]
---
Predecessors: [0x224]
Successors: [0x267]
---
0x230 JUMPDEST
0x231 DUP2
0x232 DUP2
0x233 PUSH1 0x40
0x235 MLOAD
0x236 PUSH1 0x20
0x238 ADD
0x239 DUP1
0x23a DUP4
0x23b DUP4
0x23c DUP1
0x23d DUP3
0x23e DUP5
0x23f CALLDATACOPY
0x240 DUP3
0x241 ADD
0x242 SWAP2
0x243 POP
0x244 POP
0x245 SWAP3
0x246 POP
0x247 POP
0x248 POP
0x249 PUSH1 0x40
0x24b MLOAD
0x24c PUSH1 0x20
0x24e DUP2
0x24f DUP4
0x250 SUB
0x251 SUB
0x252 DUP2
0x253 MSTORE
0x254 SWAP1
0x255 PUSH1 0x40
0x257 MSTORE
0x258 PUSH1 0x40
0x25a MLOAD
0x25b DUP1
0x25c DUP3
0x25d DUP1
0x25e MLOAD
0x25f SWAP1
0x260 PUSH1 0x20
0x262 ADD
0x263 SWAP1
0x264 DUP1
0x265 DUP4
0x266 DUP4
---
0x230: JUMPDEST 
0x233: V153 = 0x40
0x235: V154 = M[0x40]
0x236: V155 = 0x20
0x238: V156 = ADD 0x20 V154
0x23f: CALLDATACOPY V156 V34 V36
0x241: V157 = ADD V156 V36
0x249: V158 = 0x40
0x24b: V159 = M[0x40]
0x24c: V160 = 0x20
0x250: V161 = SUB V157 V159
0x251: V162 = SUB V161 0x20
0x253: M[V159] = V162
0x255: V163 = 0x40
0x257: M[0x40] = V157
0x258: V164 = 0x40
0x25a: V165 = M[0x40]
0x25e: V166 = M[V159]
0x260: V167 = 0x20
0x262: V168 = ADD 0x20 V159
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 2
Stack additions: [S1, S0, V159, V165, V165, V168, V166, V166, V165, V168]
Exit stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, V166, V165, V168]

================================

Block 0x267
[0x267:0x26f]
---
Predecessors: [0x230, 0x270]
Successors: [0x270, 0x286]
---
0x267 JUMPDEST
0x268 PUSH1 0x20
0x26a DUP4
0x26b LT
0x26c PUSH2 0x286
0x26f JUMPI
---
0x267: JUMPDEST 
0x268: V169 = 0x20
0x26b: V170 = LT S2 0x20
0x26c: V171 = 0x286
0x26f: JUMPI 0x286 V170
---
Entry stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, S2, S1, S0]

================================

Block 0x270
[0x270:0x285]
---
Predecessors: [0x267]
Successors: [0x267]
---
0x270 DUP1
0x271 MLOAD
0x272 DUP3
0x273 MSTORE
0x274 PUSH1 0x1f
0x276 NOT
0x277 SWAP1
0x278 SWAP3
0x279 ADD
0x27a SWAP2
0x27b PUSH1 0x20
0x27d SWAP2
0x27e DUP3
0x27f ADD
0x280 SWAP2
0x281 ADD
0x282 PUSH2 0x267
0x285 JUMP
---
0x271: V172 = M[S0]
0x273: M[S1] = V172
0x274: V173 = 0x1f
0x276: V174 = NOT 0x1f
0x279: V175 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x27b: V176 = 0x20
0x27f: V177 = ADD 0x20 S1
0x281: V178 = ADD 0x20 S0
0x282: V179 = 0x267
0x285: JUMP 0x267
---
Entry stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, S2, S1, S0]
Stack pops: 3
Stack additions: [V175, V177, V178]
Exit stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, V175, V177, V178]

================================

Block 0x286
[0x286:0x2be]
---
Predecessors: [0x267]
Successors: [0x2bf, 0x2c4]
---
0x286 JUMPDEST
0x287 MLOAD
0x288 DUP2
0x289 MLOAD
0x28a PUSH1 0x20
0x28c SWAP4
0x28d SWAP1
0x28e SWAP4
0x28f SUB
0x290 PUSH2 0x100
0x293 EXP
0x294 PUSH1 0x0
0x296 NOT
0x297 ADD
0x298 DUP1
0x299 NOT
0x29a SWAP1
0x29b SWAP2
0x29c AND
0x29d SWAP3
0x29e AND
0x29f SWAP2
0x2a0 SWAP1
0x2a1 SWAP2
0x2a2 OR
0x2a3 SWAP1
0x2a4 MSTORE
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 SWAP3
0x2a9 ADD
0x2aa DUP3
0x2ab SWAP1
0x2ac SUB
0x2ad SWAP1
0x2ae SWAP2
0x2af SHA3
0x2b0 PUSH1 0x3
0x2b2 SLOAD
0x2b3 EQ
0x2b4 SWAP3
0x2b5 POP
0x2b6 POP
0x2b7 DUP2
0x2b8 ISZERO
0x2b9 SWAP1
0x2ba POP
0x2bb PUSH2 0x2c4
0x2be JUMPI
---
0x286: JUMPDEST 
0x287: V180 = M[S0]
0x289: V181 = M[S1]
0x28a: V182 = 0x20
0x28f: V183 = SUB 0x20 S2
0x290: V184 = 0x100
0x293: V185 = EXP 0x100 V183
0x294: V186 = 0x0
0x296: V187 = NOT 0x0
0x297: V188 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V185
0x299: V189 = NOT V188
0x29c: V190 = AND V180 V189
0x29e: V191 = AND V181 V188
0x2a2: V192 = OR V191 V190
0x2a4: M[S1] = V192
0x2a5: V193 = 0x40
0x2a7: V194 = M[0x40]
0x2a9: V195 = ADD V165 V166
0x2ac: V196 = SUB V195 V194
0x2af: V197 = SHA3 V194 V196
0x2b0: V198 = 0x3
0x2b2: V199 = S[0x3]
0x2b3: V200 = EQ V199 V197
0x2b8: V201 = ISZERO V200
0x2bb: V202 = 0x2c4
0x2be: JUMPI 0x2c4 V201
---
Entry stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, S2, S1, S0]
Stack pops: 8
Stack additions: [V200]
Exit stack: [V11, 0x77, V34, V36, V200]

================================

Block 0x2bf
[0x2bf:0x2c3]
---
Predecessors: [0x286]
Successors: [0x2c4]
---
0x2bf POP
0x2c0 ADDRESS
0x2c1 BALANCE
0x2c2 CALLVALUE
0x2c3 GT
---
0x2c0: V203 = ADDRESS
0x2c1: V204 = BALANCE V203
0x2c2: V205 = CALLVALUE
0x2c3: V206 = GT V205 V204
---
Entry stack: [V11, 0x77, V34, V36, V200]
Stack pops: 1
Stack additions: [V206]
Exit stack: [V11, 0x77, V34, V36, V206]

================================

Block 0x2c4
[0x2c4:0x2c9]
---
Predecessors: [0x286, 0x2bf]
Successors: [0x2ca, 0x2f8]
---
0x2c4 JUMPDEST
0x2c5 ISZERO
0x2c6 PUSH2 0x2f8
0x2c9 JUMPI
---
0x2c4: JUMPDEST 
0x2c5: V207 = ISZERO S0
0x2c6: V208 = 0x2f8
0x2c9: JUMPI 0x2f8 V207
---
Entry stack: [V11, 0x77, V34, V36, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x2ca
[0x2ca:0x2ec]
---
Predecessors: [0x2c4]
Successors: [0x2ed, 0x2f6]
---
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd CALLER
0x2ce SWAP1
0x2cf ADDRESS
0x2d0 BALANCE
0x2d1 DUP1
0x2d2 ISZERO
0x2d3 PUSH2 0x8fc
0x2d6 MUL
0x2d7 SWAP2
0x2d8 PUSH1 0x0
0x2da DUP2
0x2db DUP2
0x2dc DUP2
0x2dd DUP6
0x2de DUP9
0x2df DUP9
0x2e0 CALL
0x2e1 SWAP4
0x2e2 POP
0x2e3 POP
0x2e4 POP
0x2e5 POP
0x2e6 ISZERO
0x2e7 DUP1
0x2e8 ISZERO
0x2e9 PUSH2 0x2f6
0x2ec JUMPI
---
0x2ca: V209 = 0x40
0x2cc: V210 = M[0x40]
0x2cd: V211 = CALLER
0x2cf: V212 = ADDRESS
0x2d0: V213 = BALANCE V212
0x2d2: V214 = ISZERO V213
0x2d3: V215 = 0x8fc
0x2d6: V216 = MUL 0x8fc V214
0x2d8: V217 = 0x0
0x2e0: V218 = CALL V216 V211 V213 V210 0x0 V210 0x0
0x2e6: V219 = ISZERO V218
0x2e8: V220 = ISZERO V219
0x2e9: V221 = 0x2f6
0x2ec: JUMPI 0x2f6 V220
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: [V219]
Exit stack: [V11, 0x77, V34, V36, V219]

================================

Block 0x2ed
[0x2ed:0x2f5]
---
Predecessors: [0x2ca]
Successors: []
---
0x2ed RETURNDATASIZE
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 RETURNDATACOPY
0x2f2 RETURNDATASIZE
0x2f3 PUSH1 0x0
0x2f5 REVERT
---
0x2ed: V222 = RETURNDATASIZE
0x2ee: V223 = 0x0
0x2f1: RETURNDATACOPY 0x0 0x0 V222
0x2f2: V224 = RETURNDATASIZE
0x2f3: V225 = 0x0
0x2f5: REVERT 0x0 V224
---
Entry stack: [V11, 0x77, V34, V36, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36, V219]

================================

Block 0x2f6
[0x2f6:0x2f7]
---
Predecessors: [0x2ca]
Successors: [0x2f8]
---
0x2f6 JUMPDEST
0x2f7 POP
---
0x2f6: JUMPDEST 
---
Entry stack: [V11, 0x77, V34, V36, V219]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x2f8
[0x2f8:0x2fb]
---
Predecessors: [0x2c4, 0x2f6, 0x427]
Successors: [0x77]
---
0x2f8 JUMPDEST
0x2f9 POP
0x2fa POP
0x2fb JUMP
---
0x2f8: JUMPDEST 
0x2fb: JUMP 0x77
---
Entry stack: [V11, 0x77, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fc
[0x2fc:0x31b]
---
Predecessors: [0x8c]
Successors: [0x31c, 0x320]
---
0x2fc JUMPDEST
0x2fd PUSH1 0x2
0x2ff SLOAD
0x300 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x315 AND
0x316 CALLER
0x317 EQ
0x318 PUSH2 0x320
0x31b JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V226 = 0x2
0x2ff: V227 = S[0x2]
0x300: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x315: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x316: V230 = CALLER
0x317: V231 = EQ V230 V229
0x318: V232 = 0x320
0x31b: JUMPI 0x320 V231
---
Entry stack: [V11, 0x77, V39, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V39, V56]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x2fc]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V233 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V39, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V39, V56]

================================

Block 0x320
[0x320:0x332]
---
Predecessors: [0x2fc]
Successors: [0x599]
---
0x320 JUMPDEST
0x321 DUP2
0x322 MLOAD
0x323 PUSH2 0x333
0x326 SWAP1
0x327 PUSH1 0x1
0x329 SWAP1
0x32a PUSH1 0x20
0x32c DUP6
0x32d ADD
0x32e SWAP1
0x32f PUSH2 0x599
0x332 JUMP
---
0x320: JUMPDEST 
0x322: V234 = M[V39]
0x323: V235 = 0x333
0x327: V236 = 0x1
0x32a: V237 = 0x20
0x32d: V238 = ADD V39 0x20
0x32f: V239 = 0x599
0x332: JUMP 0x599
---
Entry stack: [V11, 0x77, V39, V56]
Stack pops: 2
Stack additions: [S1, S0, 0x333, 0x1, V238, V234]
Exit stack: [V11, 0x77, V39, V56, 0x333, 0x1, V238, V234]

================================

Block 0x333
[0x333:0x339]
---
Predecessors: [0x333, 0x504, 0x613]
Successors: [0x77, 0x333, 0x504]
---
0x333 JUMPDEST
0x334 POP
0x335 PUSH1 0x3
0x337 SSTORE
0x338 POP
0x339 JUMP
---
0x333: JUMPDEST 
0x335: V240 = 0x3
0x337: S[0x3] = S1
0x339: JUMP S3
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, S5, S4]

================================

Block 0x33a
[0x33a:0x378]
---
Predecessors: [0xe6]
Successors: [0x379, 0x3bf]
---
0x33a JUMPDEST
0x33b PUSH1 0x1
0x33d DUP1
0x33e SLOAD
0x33f PUSH1 0x40
0x341 DUP1
0x342 MLOAD
0x343 PUSH1 0x20
0x345 PUSH1 0x2
0x347 DUP5
0x348 DUP7
0x349 AND
0x34a ISZERO
0x34b PUSH2 0x100
0x34e MUL
0x34f PUSH1 0x0
0x351 NOT
0x352 ADD
0x353 SWAP1
0x354 SWAP5
0x355 AND
0x356 SWAP4
0x357 SWAP1
0x358 SWAP4
0x359 DIV
0x35a PUSH1 0x1f
0x35c DUP2
0x35d ADD
0x35e DUP5
0x35f SWAP1
0x360 DIV
0x361 DUP5
0x362 MUL
0x363 DUP3
0x364 ADD
0x365 DUP5
0x366 ADD
0x367 SWAP1
0x368 SWAP3
0x369 MSTORE
0x36a DUP2
0x36b DUP2
0x36c MSTORE
0x36d SWAP3
0x36e SWAP2
0x36f DUP4
0x370 ADD
0x371 DUP3
0x372 DUP3
0x373 DUP1
0x374 ISZERO
0x375 PUSH2 0x3bf
0x378 JUMPI
---
0x33a: JUMPDEST 
0x33b: V241 = 0x1
0x33e: V242 = S[0x1]
0x33f: V243 = 0x40
0x342: V244 = M[0x40]
0x343: V245 = 0x20
0x345: V246 = 0x2
0x349: V247 = AND 0x1 V242
0x34a: V248 = ISZERO V247
0x34b: V249 = 0x100
0x34e: V250 = MUL 0x100 V248
0x34f: V251 = 0x0
0x351: V252 = NOT 0x0
0x352: V253 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V250
0x355: V254 = AND V242 V253
0x359: V255 = DIV V254 0x2
0x35a: V256 = 0x1f
0x35d: V257 = ADD V255 0x1f
0x360: V258 = DIV V257 0x20
0x362: V259 = MUL 0x20 V258
0x364: V260 = ADD V244 V259
0x366: V261 = ADD 0x20 V260
0x369: M[0x40] = V261
0x36c: M[V244] = V255
0x370: V262 = ADD V244 0x20
0x374: V263 = ISZERO V255
0x375: V264 = 0x3bf
0x378: JUMPI 0x3bf V263
---
Entry stack: [V11, 0xef]
Stack pops: 0
Stack additions: [V244, 0x1, V255, V262, 0x1, V255]
Exit stack: [V11, 0xef, V244, 0x1, V255, V262, 0x1, V255]

================================

Block 0x379
[0x379:0x380]
---
Predecessors: [0x33a]
Successors: [0x381, 0x394]
---
0x379 DUP1
0x37a PUSH1 0x1f
0x37c LT
0x37d PUSH2 0x394
0x380 JUMPI
---
0x37a: V265 = 0x1f
0x37c: V266 = LT 0x1f V255
0x37d: V267 = 0x394
0x380: JUMPI 0x394 V266
---
Entry stack: [V11, 0xef, V244, 0x1, V255, V262, 0x1, V255]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xef, V244, 0x1, V255, V262, 0x1, V255]

================================

Block 0x381
[0x381:0x393]
---
Predecessors: [0x379]
Successors: [0x3bf]
---
0x381 PUSH2 0x100
0x384 DUP1
0x385 DUP4
0x386 SLOAD
0x387 DIV
0x388 MUL
0x389 DUP4
0x38a MSTORE
0x38b SWAP2
0x38c PUSH1 0x20
0x38e ADD
0x38f SWAP2
0x390 PUSH2 0x3bf
0x393 JUMP
---
0x381: V268 = 0x100
0x386: V269 = S[0x1]
0x387: V270 = DIV V269 0x100
0x388: V271 = MUL V270 0x100
0x38a: M[V262] = V271
0x38c: V272 = 0x20
0x38e: V273 = ADD 0x20 V262
0x390: V274 = 0x3bf
0x393: JUMP 0x3bf
---
Entry stack: [V11, 0xef, V244, 0x1, V255, V262, 0x1, V255]
Stack pops: 3
Stack additions: [V273, S1, S0]
Exit stack: [V11, 0xef, V244, 0x1, V255, V273, 0x1, V255]

================================

Block 0x394
[0x394:0x3a1]
---
Predecessors: [0x379]
Successors: [0x3a2]
---
0x394 JUMPDEST
0x395 DUP3
0x396 ADD
0x397 SWAP2
0x398 SWAP1
0x399 PUSH1 0x0
0x39b MSTORE
0x39c PUSH1 0x20
0x39e PUSH1 0x0
0x3a0 SHA3
0x3a1 SWAP1
---
0x394: JUMPDEST 
0x396: V275 = ADD V262 V255
0x399: V276 = 0x0
0x39b: M[0x0] = 0x1
0x39c: V277 = 0x20
0x39e: V278 = 0x0
0x3a0: V279 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xef, V244, 0x1, V255, V262, 0x1, V255]
Stack pops: 3
Stack additions: [V275, V279, S2]
Exit stack: [V11, 0xef, V244, 0x1, V255, V275, V279, V262]

================================

Block 0x3a2
[0x3a2:0x3b5]
---
Predecessors: [0x394, 0x3a2]
Successors: [0x3a2, 0x3b6]
---
0x3a2 JUMPDEST
0x3a3 DUP2
0x3a4 SLOAD
0x3a5 DUP2
0x3a6 MSTORE
0x3a7 SWAP1
0x3a8 PUSH1 0x1
0x3aa ADD
0x3ab SWAP1
0x3ac PUSH1 0x20
0x3ae ADD
0x3af DUP1
0x3b0 DUP4
0x3b1 GT
0x3b2 PUSH2 0x3a2
0x3b5 JUMPI
---
0x3a2: JUMPDEST 
0x3a4: V280 = S[S1]
0x3a6: M[S0] = V280
0x3a8: V281 = 0x1
0x3aa: V282 = ADD 0x1 S1
0x3ac: V283 = 0x20
0x3ae: V284 = ADD 0x20 S0
0x3b1: V285 = GT V275 V284
0x3b2: V286 = 0x3a2
0x3b5: JUMPI 0x3a2 V285
---
Entry stack: [V11, 0xef, V244, 0x1, V255, V275, S1, S0]
Stack pops: 3
Stack additions: [S2, V282, V284]
Exit stack: [V11, 0xef, V244, 0x1, V255, V275, V282, V284]

================================

Block 0x3b6
[0x3b6:0x3be]
---
Predecessors: [0x3a2]
Successors: [0x3bf]
---
0x3b6 DUP3
0x3b7 SWAP1
0x3b8 SUB
0x3b9 PUSH1 0x1f
0x3bb AND
0x3bc DUP3
0x3bd ADD
0x3be SWAP2
---
0x3b8: V287 = SUB V284 V275
0x3b9: V288 = 0x1f
0x3bb: V289 = AND 0x1f V287
0x3bd: V290 = ADD V275 V289
---
Entry stack: [V11, 0xef, V244, 0x1, V255, V275, V282, V284]
Stack pops: 3
Stack additions: [V290, S1, S2]
Exit stack: [V11, 0xef, V244, 0x1, V255, V290, V282, V275]

================================

Block 0x3bf
[0x3bf:0x3c6]
---
Predecessors: [0x33a, 0x381, 0x3b6]
Successors: [0xef]
---
0x3bf JUMPDEST
0x3c0 POP
0x3c1 POP
0x3c2 POP
0x3c3 POP
0x3c4 POP
0x3c5 DUP2
0x3c6 JUMP
---
0x3bf: JUMPDEST 
0x3c6: JUMP 0xef
---
Entry stack: [V11, 0xef, V244, 0x1, V255, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xef, V244]

================================

Block 0x3c7
[0x3c7:0x3e6]
---
Predecessors: [0x170]
Successors: [0x3e7, 0x3eb]
---
0x3c7 JUMPDEST
0x3c8 PUSH1 0x2
0x3ca SLOAD
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 CALLER
0x3e2 EQ
0x3e3 PUSH2 0x3eb
0x3e6 JUMPI
---
0x3c7: JUMPDEST 
0x3c8: V291 = 0x2
0x3ca: V292 = S[0x2]
0x3cb: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x3e1: V295 = CALLER
0x3e2: V296 = EQ V295 V294
0x3e3: V297 = 0x3eb
0x3e6: JUMPI 0x3eb V296
---
Entry stack: [V11, 0x77, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V110]

================================

Block 0x3e7
[0x3e7:0x3ea]
---
Predecessors: [0x3c7]
Successors: []
---
0x3e7 PUSH1 0x0
0x3e9 DUP1
0x3ea REVERT
---
0x3e7: V298 = 0x0
0x3ea: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V110]

================================

Block 0x3eb
[0x3eb:0x426]
---
Predecessors: [0x3c7]
Successors: [0x77]
---
0x3eb JUMPDEST
0x3ec PUSH1 0x2
0x3ee DUP1
0x3ef SLOAD
0x3f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x405 NOT
0x406 AND
0x407 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41c SWAP3
0x41d SWAP1
0x41e SWAP3
0x41f AND
0x420 SWAP2
0x421 SWAP1
0x422 SWAP2
0x423 OR
0x424 SWAP1
0x425 SSTORE
0x426 JUMP
---
0x3eb: JUMPDEST 
0x3ec: V299 = 0x2
0x3ef: V300 = S[0x2]
0x3f0: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x405: V302 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x406: V303 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V300
0x407: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x41f: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x423: V306 = OR V305 V303
0x425: S[0x2] = V306
0x426: JUMP 0x77
---
Entry stack: [V11, 0x77, V110]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x427
[0x427:0x430]
---
Predecessors: [0x192]
Successors: [0x2f8, 0x431]
---
0x427 JUMPDEST
0x428 PUSH1 0x3
0x42a SLOAD
0x42b ISZERO
0x42c ISZERO
0x42d PUSH2 0x2f8
0x430 JUMPI
---
0x427: JUMPDEST 
0x428: V307 = 0x3
0x42a: V308 = S[0x3]
0x42b: V309 = ISZERO V308
0x42c: V310 = ISZERO V309
0x42d: V311 = 0x2f8
0x430: JUMPI 0x2f8 V310
---
Entry stack: [V11, 0x77, V113, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V113, V131]

================================

Block 0x431
[0x431:0x443]
---
Predecessors: [0x427]
Successors: [0x444]
---
0x431 DUP1
0x432 PUSH1 0x40
0x434 MLOAD
0x435 PUSH1 0x20
0x437 ADD
0x438 DUP1
0x439 DUP3
0x43a DUP1
0x43b MLOAD
0x43c SWAP1
0x43d PUSH1 0x20
0x43f ADD
0x440 SWAP1
0x441 DUP1
0x442 DUP4
0x443 DUP4
---
0x432: V312 = 0x40
0x434: V313 = M[0x40]
0x435: V314 = 0x20
0x437: V315 = ADD 0x20 V313
0x43b: V316 = M[V131]
0x43d: V317 = 0x20
0x43f: V318 = ADD 0x20 V131
---
Entry stack: [V11, 0x77, V113, V131]
Stack pops: 1
Stack additions: [S0, S0, V315, V315, V318, V316, V316, V315, V318]
Exit stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, V316, V315, V318]

================================

Block 0x444
[0x444:0x44c]
---
Predecessors: [0x431, 0x44d]
Successors: [0x44d, 0x463]
---
0x444 JUMPDEST
0x445 PUSH1 0x20
0x447 DUP4
0x448 LT
0x449 PUSH2 0x463
0x44c JUMPI
---
0x444: JUMPDEST 
0x445: V319 = 0x20
0x448: V320 = LT S2 0x20
0x449: V321 = 0x463
0x44c: JUMPI 0x463 V320
---
Entry stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, S2, S1, S0]

================================

Block 0x44d
[0x44d:0x462]
---
Predecessors: [0x444]
Successors: [0x444]
---
0x44d DUP1
0x44e MLOAD
0x44f DUP3
0x450 MSTORE
0x451 PUSH1 0x1f
0x453 NOT
0x454 SWAP1
0x455 SWAP3
0x456 ADD
0x457 SWAP2
0x458 PUSH1 0x20
0x45a SWAP2
0x45b DUP3
0x45c ADD
0x45d SWAP2
0x45e ADD
0x45f PUSH2 0x444
0x462 JUMP
---
0x44e: V322 = M[S0]
0x450: M[S1] = V322
0x451: V323 = 0x1f
0x453: V324 = NOT 0x1f
0x456: V325 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x458: V326 = 0x20
0x45c: V327 = ADD 0x20 S1
0x45e: V328 = ADD 0x20 S0
0x45f: V329 = 0x444
0x462: JUMP 0x444
---
Entry stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, S2, S1, S0]
Stack pops: 3
Stack additions: [V325, V327, V328]
Exit stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, V325, V327, V328]

================================

Block 0x463
[0x463:0x4a6]
---
Predecessors: [0x444]
Successors: [0x4a7]
---
0x463 JUMPDEST
0x464 PUSH1 0x1
0x466 DUP4
0x467 PUSH1 0x20
0x469 SUB
0x46a PUSH2 0x100
0x46d EXP
0x46e SUB
0x46f DUP1
0x470 NOT
0x471 DUP3
0x472 MLOAD
0x473 AND
0x474 DUP2
0x475 DUP5
0x476 MLOAD
0x477 AND
0x478 DUP1
0x479 DUP3
0x47a OR
0x47b DUP6
0x47c MSTORE
0x47d POP
0x47e POP
0x47f POP
0x480 POP
0x481 POP
0x482 POP
0x483 SWAP1
0x484 POP
0x485 ADD
0x486 SWAP2
0x487 POP
0x488 POP
0x489 PUSH1 0x40
0x48b MLOAD
0x48c PUSH1 0x20
0x48e DUP2
0x48f DUP4
0x490 SUB
0x491 SUB
0x492 DUP2
0x493 MSTORE
0x494 SWAP1
0x495 PUSH1 0x40
0x497 MSTORE
0x498 PUSH1 0x40
0x49a MLOAD
0x49b DUP1
0x49c DUP3
0x49d DUP1
0x49e MLOAD
0x49f SWAP1
0x4a0 PUSH1 0x20
0x4a2 ADD
0x4a3 SWAP1
0x4a4 DUP1
0x4a5 DUP4
0x4a6 DUP4
---
0x463: JUMPDEST 
0x464: V330 = 0x1
0x467: V331 = 0x20
0x469: V332 = SUB 0x20 S2
0x46a: V333 = 0x100
0x46d: V334 = EXP 0x100 V332
0x46e: V335 = SUB V334 0x1
0x470: V336 = NOT V335
0x472: V337 = M[S0]
0x473: V338 = AND V337 V336
0x476: V339 = M[S1]
0x477: V340 = AND V339 V335
0x47a: V341 = OR V338 V340
0x47c: M[S1] = V341
0x485: V342 = ADD V316 V315
0x489: V343 = 0x40
0x48b: V344 = M[0x40]
0x48c: V345 = 0x20
0x490: V346 = SUB V342 V344
0x491: V347 = SUB V346 0x20
0x493: M[V344] = V347
0x495: V348 = 0x40
0x497: M[0x40] = V342
0x498: V349 = 0x40
0x49a: V350 = M[0x40]
0x49e: V351 = M[V344]
0x4a0: V352 = 0x20
0x4a2: V353 = ADD 0x20 V344
---
Entry stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, S2, S1, S0]
Stack pops: 8
Stack additions: [V344, V350, V350, V353, V351, V351, V350, V353]
Exit stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, V351, V350, V353]

================================

Block 0x4a7
[0x4a7:0x4af]
---
Predecessors: [0x463, 0x4b0]
Successors: [0x4b0, 0x4c6]
---
0x4a7 JUMPDEST
0x4a8 PUSH1 0x20
0x4aa DUP4
0x4ab LT
0x4ac PUSH2 0x4c6
0x4af JUMPI
---
0x4a7: JUMPDEST 
0x4a8: V354 = 0x20
0x4ab: V355 = LT S2 0x20
0x4ac: V356 = 0x4c6
0x4af: JUMPI 0x4c6 V355
---
Entry stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, S2, S1, S0]

================================

Block 0x4b0
[0x4b0:0x4c5]
---
Predecessors: [0x4a7]
Successors: [0x4a7]
---
0x4b0 DUP1
0x4b1 MLOAD
0x4b2 DUP3
0x4b3 MSTORE
0x4b4 PUSH1 0x1f
0x4b6 NOT
0x4b7 SWAP1
0x4b8 SWAP3
0x4b9 ADD
0x4ba SWAP2
0x4bb PUSH1 0x20
0x4bd SWAP2
0x4be DUP3
0x4bf ADD
0x4c0 SWAP2
0x4c1 ADD
0x4c2 PUSH2 0x4a7
0x4c5 JUMP
---
0x4b1: V357 = M[S0]
0x4b3: M[S1] = V357
0x4b4: V358 = 0x1f
0x4b6: V359 = NOT 0x1f
0x4b9: V360 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4bb: V361 = 0x20
0x4bf: V362 = ADD 0x20 S1
0x4c1: V363 = ADD 0x20 S0
0x4c2: V364 = 0x4a7
0x4c5: JUMP 0x4a7
---
Entry stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, S2, S1, S0]
Stack pops: 3
Stack additions: [V360, V362, V363]
Exit stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, V360, V362, V363]

================================

Block 0x4c6
[0x4c6:0x503]
---
Predecessors: [0x4a7]
Successors: [0x599]
---
0x4c6 JUMPDEST
0x4c7 MLOAD
0x4c8 DUP2
0x4c9 MLOAD
0x4ca PUSH1 0x20
0x4cc SWAP4
0x4cd DUP5
0x4ce SUB
0x4cf PUSH2 0x100
0x4d2 EXP
0x4d3 PUSH1 0x0
0x4d5 NOT
0x4d6 ADD
0x4d7 DUP1
0x4d8 NOT
0x4d9 SWAP1
0x4da SWAP3
0x4db AND
0x4dc SWAP2
0x4dd AND
0x4de OR
0x4df SWAP1
0x4e0 MSTORE
0x4e1 PUSH1 0x40
0x4e3 MLOAD
0x4e4 SWAP2
0x4e5 SWAP1
0x4e6 SWAP4
0x4e7 ADD
0x4e8 DUP2
0x4e9 SWAP1
0x4ea SUB
0x4eb SWAP1
0x4ec SHA3
0x4ed PUSH1 0x3
0x4ef SSTORE
0x4f0 POP
0x4f1 DUP5
0x4f2 MLOAD
0x4f3 PUSH2 0x504
0x4f6 SWAP4
0x4f7 POP
0x4f8 PUSH1 0x1
0x4fa SWAP3
0x4fb POP
0x4fc SWAP1
0x4fd DUP6
0x4fe ADD
0x4ff SWAP1
0x500 PUSH2 0x599
0x503 JUMP
---
0x4c6: JUMPDEST 
0x4c7: V365 = M[S0]
0x4c9: V366 = M[S1]
0x4ca: V367 = 0x20
0x4ce: V368 = SUB 0x20 S2
0x4cf: V369 = 0x100
0x4d2: V370 = EXP 0x100 V368
0x4d3: V371 = 0x0
0x4d5: V372 = NOT 0x0
0x4d6: V373 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V370
0x4d8: V374 = NOT V373
0x4db: V375 = AND V365 V374
0x4dd: V376 = AND V373 V366
0x4de: V377 = OR V376 V375
0x4e0: M[S1] = V377
0x4e1: V378 = 0x40
0x4e3: V379 = M[0x40]
0x4e7: V380 = ADD V350 V351
0x4ea: V381 = SUB V380 V379
0x4ec: V382 = SHA3 V379 V381
0x4ed: V383 = 0x3
0x4ef: S[0x3] = V382
0x4f2: V384 = M[V113]
0x4f3: V385 = 0x504
0x4f8: V386 = 0x1
0x4fe: V387 = ADD V113 0x20
0x500: V388 = 0x599
0x503: JUMP 0x599
---
Entry stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x504, 0x1, V387, V384]
Exit stack: [V11, 0x77, V113, V131, 0x504, 0x1, V387, V384]

================================

Block 0x504
[0x504:0x544]
---
Predecessors: [0x333, 0x504, 0x613]
Successors: [0x77, 0x333, 0x504]
---
0x504 JUMPDEST
0x505 POP
0x506 PUSH1 0x0
0x508 SLOAD
0x509 PUSH1 0x2
0x50b DUP1
0x50c SLOAD
0x50d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x522 NOT
0x523 AND
0x524 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x539 SWAP1
0x53a SWAP3
0x53b AND
0x53c SWAP2
0x53d SWAP1
0x53e SWAP2
0x53f OR
0x540 SWAP1
0x541 SSTORE
0x542 POP
0x543 POP
0x544 JUMP
---
0x504: JUMPDEST 
0x506: V389 = 0x0
0x508: V390 = S[0x0]
0x509: V391 = 0x2
0x50c: V392 = S[0x2]
0x50d: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x522: V394 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x523: V395 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V392
0x524: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x53b: V397 = AND V390 0xffffffffffffffffffffffffffffffffffffffff
0x53f: V398 = OR V397 V395
0x541: S[0x2] = V398
0x544: JUMP S3
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, S5, S4]

================================

Block 0x545
[0x545:0x564]
---
Predecessors: [0x21c]
Successors: [0x565, 0x569]
---
0x545 JUMPDEST
0x546 PUSH1 0x2
0x548 SLOAD
0x549 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55e AND
0x55f CALLER
0x560 EQ
0x561 PUSH2 0x569
0x564 JUMPI
---
0x545: JUMPDEST 
0x546: V399 = 0x2
0x548: V400 = S[0x2]
0x549: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x55e: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x55f: V403 = CALLER
0x560: V404 = EQ V403 V402
0x561: V405 = 0x569
0x564: JUMPI 0x569 V404
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x565
[0x565:0x568]
---
Predecessors: [0x545]
Successors: []
---
0x565 PUSH1 0x0
0x567 DUP1
0x568 REVERT
---
0x565: V406 = 0x0
0x568: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x569
[0x569:0x58c]
---
Predecessors: [0x545]
Successors: [0x58d, 0x596]
---
0x569 JUMPDEST
0x56a PUSH1 0x40
0x56c MLOAD
0x56d CALLER
0x56e SWAP1
0x56f ADDRESS
0x570 BALANCE
0x571 DUP1
0x572 ISZERO
0x573 PUSH2 0x8fc
0x576 MUL
0x577 SWAP2
0x578 PUSH1 0x0
0x57a DUP2
0x57b DUP2
0x57c DUP2
0x57d DUP6
0x57e DUP9
0x57f DUP9
0x580 CALL
0x581 SWAP4
0x582 POP
0x583 POP
0x584 POP
0x585 POP
0x586 ISZERO
0x587 DUP1
0x588 ISZERO
0x589 PUSH2 0x596
0x58c JUMPI
---
0x569: JUMPDEST 
0x56a: V407 = 0x40
0x56c: V408 = M[0x40]
0x56d: V409 = CALLER
0x56f: V410 = ADDRESS
0x570: V411 = BALANCE V410
0x572: V412 = ISZERO V411
0x573: V413 = 0x8fc
0x576: V414 = MUL 0x8fc V412
0x578: V415 = 0x0
0x580: V416 = CALL V414 V409 V411 V408 0x0 V408 0x0
0x586: V417 = ISZERO V416
0x588: V418 = ISZERO V417
0x589: V419 = 0x596
0x58c: JUMPI 0x596 V418
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V417]
Exit stack: [V11, 0x77, V417]

================================

Block 0x58d
[0x58d:0x595]
---
Predecessors: [0x569]
Successors: []
---
0x58d RETURNDATASIZE
0x58e PUSH1 0x0
0x590 DUP1
0x591 RETURNDATACOPY
0x592 RETURNDATASIZE
0x593 PUSH1 0x0
0x595 REVERT
---
0x58d: V420 = RETURNDATASIZE
0x58e: V421 = 0x0
0x591: RETURNDATACOPY 0x0 0x0 V420
0x592: V422 = RETURNDATASIZE
0x593: V423 = 0x0
0x595: REVERT 0x0 V422
---
Entry stack: [V11, 0x77, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V417]

================================

Block 0x596
[0x596:0x598]
---
Predecessors: [0x569]
Successors: [0x77]
---
0x596 JUMPDEST
0x597 POP
0x598 JUMP
---
0x596: JUMPDEST 
0x598: JUMP 0x77
---
Entry stack: [V11, 0x77, V417]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x599
[0x599:0x5c9]
---
Predecessors: [0x320, 0x4c6]
Successors: [0x5ca, 0x5da]
---
0x599 JUMPDEST
0x59a DUP3
0x59b DUP1
0x59c SLOAD
0x59d PUSH1 0x1
0x59f DUP2
0x5a0 PUSH1 0x1
0x5a2 AND
0x5a3 ISZERO
0x5a4 PUSH2 0x100
0x5a7 MUL
0x5a8 SUB
0x5a9 AND
0x5aa PUSH1 0x2
0x5ac SWAP1
0x5ad DIV
0x5ae SWAP1
0x5af PUSH1 0x0
0x5b1 MSTORE
0x5b2 PUSH1 0x20
0x5b4 PUSH1 0x0
0x5b6 SHA3
0x5b7 SWAP1
0x5b8 PUSH1 0x1f
0x5ba ADD
0x5bb PUSH1 0x20
0x5bd SWAP1
0x5be DIV
0x5bf DUP2
0x5c0 ADD
0x5c1 SWAP3
0x5c2 DUP3
0x5c3 PUSH1 0x1f
0x5c5 LT
0x5c6 PUSH2 0x5da
0x5c9 JUMPI
---
0x599: JUMPDEST 
0x59c: V424 = S[0x1]
0x59d: V425 = 0x1
0x5a0: V426 = 0x1
0x5a2: V427 = AND 0x1 V424
0x5a3: V428 = ISZERO V427
0x5a4: V429 = 0x100
0x5a7: V430 = MUL 0x100 V428
0x5a8: V431 = SUB V430 0x1
0x5a9: V432 = AND V431 V424
0x5aa: V433 = 0x2
0x5ad: V434 = DIV V432 0x2
0x5af: V435 = 0x0
0x5b1: M[0x0] = 0x1
0x5b2: V436 = 0x20
0x5b4: V437 = 0x0
0x5b6: V438 = SHA3 0x0 0x20
0x5b8: V439 = 0x1f
0x5ba: V440 = ADD 0x1f V434
0x5bb: V441 = 0x20
0x5be: V442 = DIV V440 0x20
0x5c0: V443 = ADD V438 V442
0x5c3: V444 = 0x1f
0x5c5: V445 = LT 0x1f S0
0x5c6: V446 = 0x5da
0x5c9: JUMPI 0x5da V445
---
Entry stack: [V11, 0x77, S5, S4, {0x333, 0x504}, 0x1, S1, S0]
Stack pops: 3
Stack additions: [S2, V443, S0, V438, S1]
Exit stack: [V11, 0x77, S5, S4, {0x333, 0x504}, 0x1, V443, S0, V438, S1]

================================

Block 0x5ca
[0x5ca:0x5d9]
---
Predecessors: [0x599]
Successors: [0x607]
---
0x5ca DUP1
0x5cb MLOAD
0x5cc PUSH1 0xff
0x5ce NOT
0x5cf AND
0x5d0 DUP4
0x5d1 DUP1
0x5d2 ADD
0x5d3 OR
0x5d4 DUP6
0x5d5 SSTORE
0x5d6 PUSH2 0x607
0x5d9 JUMP
---
0x5cb: V447 = M[S0]
0x5cc: V448 = 0xff
0x5ce: V449 = NOT 0xff
0x5cf: V450 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V447
0x5d2: V451 = ADD S2 S2
0x5d3: V452 = OR V451 V450
0x5d5: S[0x1] = V452
0x5d6: V453 = 0x607
0x5d9: JUMP 0x607
---
Entry stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, V443, S2, V438, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, V443, S2, V438, S0]

================================

Block 0x5da
[0x5da:0x5e8]
---
Predecessors: [0x599]
Successors: [0x5e9, 0x607]
---
0x5da JUMPDEST
0x5db DUP3
0x5dc DUP1
0x5dd ADD
0x5de PUSH1 0x1
0x5e0 ADD
0x5e1 DUP6
0x5e2 SSTORE
0x5e3 DUP3
0x5e4 ISZERO
0x5e5 PUSH2 0x607
0x5e8 JUMPI
---
0x5da: JUMPDEST 
0x5dd: V454 = ADD S2 S2
0x5de: V455 = 0x1
0x5e0: V456 = ADD 0x1 V454
0x5e2: S[0x1] = V456
0x5e4: V457 = ISZERO S2
0x5e5: V458 = 0x607
0x5e8: JUMPI 0x607 V457
---
Entry stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, V443, S2, V438, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, V443, S2, V438, S0]

================================

Block 0x5e9
[0x5e9:0x5eb]
---
Predecessors: [0x5da]
Successors: [0x5ec]
---
0x5e9 SWAP2
0x5ea DUP3
0x5eb ADD
---
0x5eb: V459 = ADD S0 S2
---
Entry stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, V443, S2, V438, S0]
Stack pops: 3
Stack additions: [S0, S1, V459]
Exit stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, V443, S0, V438, V459]

================================

Block 0x5ec
[0x5ec:0x5f4]
---
Predecessors: [0x5e9, 0x5f5]
Successors: [0x5f5, 0x607]
---
0x5ec JUMPDEST
0x5ed DUP3
0x5ee DUP2
0x5ef GT
0x5f0 ISZERO
0x5f1 PUSH2 0x607
0x5f4 JUMPI
---
0x5ec: JUMPDEST 
0x5ef: V460 = GT V459 S2
0x5f0: V461 = ISZERO V460
0x5f1: V462 = 0x607
0x5f4: JUMPI 0x607 V461
---
Entry stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, V443, S2, S1, V459]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, V443, S2, S1, V459]

================================

Block 0x5f5
[0x5f5:0x606]
---
Predecessors: [0x5ec]
Successors: [0x5ec]
---
0x5f5 DUP3
0x5f6 MLOAD
0x5f7 DUP3
0x5f8 SSTORE
0x5f9 SWAP2
0x5fa PUSH1 0x20
0x5fc ADD
0x5fd SWAP2
0x5fe SWAP1
0x5ff PUSH1 0x1
0x601 ADD
0x602 SWAP1
0x603 PUSH2 0x5ec
0x606 JUMP
---
0x5f6: V463 = M[S2]
0x5f8: S[S1] = V463
0x5fa: V464 = 0x20
0x5fc: V465 = ADD 0x20 S2
0x5ff: V466 = 0x1
0x601: V467 = ADD 0x1 S1
0x603: V468 = 0x5ec
0x606: JUMP 0x5ec
---
Entry stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, V443, S2, S1, V459]
Stack pops: 3
Stack additions: [V465, V467, S0]
Exit stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, V443, V465, V467, V459]

================================

Block 0x607
[0x607:0x612]
---
Predecessors: [0x5ca, 0x5da, 0x5ec]
Successors: [0x617]
---
0x607 JUMPDEST
0x608 POP
0x609 PUSH2 0x613
0x60c SWAP3
0x60d SWAP2
0x60e POP
0x60f PUSH2 0x617
0x612 JUMP
---
0x607: JUMPDEST 
0x609: V469 = 0x613
0x60f: V470 = 0x617
0x612: JUMP 0x617
---
Entry stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, V443, S2, S1, S0]
Stack pops: 4
Stack additions: [0x613, S3, S1]
Exit stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, 0x613, V443, S1]

================================

Block 0x613
[0x613:0x616]
---
Predecessors: [0x61d, 0x631]
Successors: [0x77, 0x333, 0x504, 0x631]
---
0x613 JUMPDEST
0x614 POP
0x615 SWAP1
0x616 JUMP
---
0x613: JUMPDEST 
0x616: JUMP {0x77, 0x333, 0x504, 0x631}
---
Entry stack: [V11, 0x77, S7, S6, {0x77, 0x333, 0x504}, S4, S3, {0x77, 0x333, 0x504, 0x631}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x77, S7, S6, {0x77, 0x333, 0x504}, S4, S3, S1]

================================

Block 0x617
[0x617:0x61c]
---
Predecessors: [0x607]
Successors: [0x61d]
---
0x617 JUMPDEST
0x618 PUSH2 0x631
0x61b SWAP2
0x61c SWAP1
---
0x617: JUMPDEST 
0x618: V471 = 0x631
---
Entry stack: [V11, 0x77, S6, S5, {0x333, 0x504}, 0x1, 0x613, V443, S0]
Stack pops: 2
Stack additions: [0x631, S1, S0]
Exit stack: [V11, 0x77, S6, S5, {0x333, 0x504}, 0x1, 0x613, 0x631, V443, S0]

================================

Block 0x61d
[0x61d:0x625]
---
Predecessors: [0x617, 0x626]
Successors: [0x613, 0x626]
---
0x61d JUMPDEST
0x61e DUP1
0x61f DUP3
0x620 GT
0x621 ISZERO
0x622 PUSH2 0x613
0x625 JUMPI
---
0x61d: JUMPDEST 
0x620: V472 = GT V443 S0
0x621: V473 = ISZERO V472
0x622: V474 = 0x613
0x625: JUMPI 0x613 V473
---
Entry stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, 0x613, 0x631, V443, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, 0x613, 0x631, V443, S0]

================================

Block 0x626
[0x626:0x630]
---
Predecessors: [0x61d]
Successors: [0x61d]
---
0x626 PUSH1 0x0
0x628 DUP2
0x629 SSTORE
0x62a PUSH1 0x1
0x62c ADD
0x62d PUSH2 0x61d
0x630 JUMP
---
0x626: V475 = 0x0
0x629: S[S0] = 0x0
0x62a: V476 = 0x1
0x62c: V477 = ADD 0x1 S0
0x62d: V478 = 0x61d
0x630: JUMP 0x61d
---
Entry stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, 0x613, 0x631, V443, S0]
Stack pops: 1
Stack additions: [V477]
Exit stack: [V11, 0x77, S7, S6, {0x333, 0x504}, 0x1, 0x613, 0x631, V443, V477]

================================

Block 0x631
[0x631:0x633]
---
Predecessors: [0x613]
Successors: [0x613]
---
0x631 JUMPDEST
0x632 SWAP1
0x633 JUMP
---
0x631: JUMPDEST 
0x633: JUMP S1
---
Entry stack: [V11, 0x77, S5, S4, {0x77, 0x333, 0x504}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x77, S5, S4, {0x77, 0x333, 0x504}, S2, S0]

================================

Block 0x634
[0x634:0x65f]
---
Predecessors: []
Successors: []
---
0x634 STOP
0x635 LOG1
0x636 PUSH6 0x627a7a723058
0x63d SHA3
0x63e MISSING 0xbe
0x63f MISSING 0xeb
0x640 DUP6
0x641 MISSING 0xf8
0x642 DUP8
0x643 SWAP8
0x644 PUSH15 0x3c70e297b6f048ea23f7de809d697e
0x654 SWAP5
0x655 NOT
0x656 MISSING 0x24
0x657 CALLCODE
0x658 MISSING 0xcd
0x659 MLOAD
0x65a ADDRESS
0x65b ADD
0x65c SHL
0x65d MISSING 0xd0
0x65e STOP
0x65f MISSING 0x29
---
0x634: STOP 
0x635: LOG S0 S1 S2
0x636: V479 = 0x627a7a723058
0x63d: V480 = SHA3 0x627a7a723058 S3
0x63e: MISSING 0xbe
0x63f: MISSING 0xeb
0x641: MISSING 0xf8
0x644: V481 = 0x3c70e297b6f048ea23f7de809d697e
0x655: V482 = NOT S3
0x656: MISSING 0x24
0x657: V483 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x658: MISSING 0xcd
0x659: V484 = M[S0]
0x65a: V485 = ADDRESS
0x65b: V486 = ADD V485 V484
0x65c: V487 = SHL V486 S1
0x65d: MISSING 0xd0
0x65e: STOP 
0x65f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V480, S5, S0, S1, S2, S3, S4, S5, V482, S7, S0, S1, S2, 0x3c70e297b6f048ea23f7de809d697e, S4, S5, S6, S7, V483, V487]
Exit stack: []

================================

Function 0:
Public function signature: 0x3853682c
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x224, 0x22c, 0x230, 0x267, 0x270, 0x286, 0x2bf, 0x2c4, 0x2ca, 0x2ed, 0x2f6, 0x2f8

Function 1:
Public function signature: 0x3e3ee859
Entry block: 0x8c
Exit block: 0x77
Body: 0x77, 0x8c, 0x2fc, 0x31c, 0x320, 0x333, 0x504

Function 2:
Public function signature: 0x3fad9ae0
Entry block: 0xda
Exit block: 0x156
Body: 0xda, 0xe2, 0xe6, 0xef, 0x111, 0x11a, 0x129, 0x13d, 0x156, 0x33a, 0x379, 0x381, 0x394, 0x3a2, 0x3b6, 0x3bf

Function 3:
Public function signature: 0x59988dce
Entry block: 0x164
Exit block: 0x77
Body: 0x77, 0x164, 0x16c, 0x170, 0x3c7, 0x3e7, 0x3eb

Function 4:
Public function signature: 0xb96d64fb
Entry block: 0x192
Exit block: 0x77
Body: 0x77, 0x192, 0x2f8, 0x333, 0x427, 0x431, 0x444, 0x44d, 0x463, 0x4a7, 0x4b0, 0x4c6, 0x504

Function 5:
Public function signature: 0xf50ab247
Entry block: 0x21c
Exit block: 0x77
Body: 0x77, 0x21c, 0x545, 0x565, 0x569, 0x58d, 0x596

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x599
Exit block: 0x613
Body: 0x599, 0x5ca, 0x5da, 0x5e9, 0x5ec, 0x5f5, 0x607, 0x613, 0x617, 0x61d, 0x626, 0x631

