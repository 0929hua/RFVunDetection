Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3e8c9176
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3e8c9176
0x3b: V13 = EQ V11 0x3e8c9176
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8c]
---
0x40 DUP1
0x41 PUSH4 0x47247fb2
0x46 EQ
0x47 PUSH2 0x8c
0x4a JUMPI
---
0x41: V15 = 0x47247fb2
0x46: V16 = EQ 0x47247fb2 V11
0x47: V17 = 0x8c
0x4a: JUMPI 0x8c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x116]
---
0x4b DUP1
0x4c PUSH4 0x50d17565
0x51 EQ
0x52 PUSH2 0x116
0x55 JUMPI
---
0x4c: V18 = 0x50d17565
0x51: V19 = EQ 0x50d17565 V11
0x52: V20 = 0x116
0x55: JUMPI 0x116 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1a0]
---
0x56 DUP1
0x57 PUSH4 0x79524f76
0x5c EQ
0x5d PUSH2 0x1a0
0x60 JUMPI
---
0x57: V21 = 0x79524f76
0x5c: V22 = EQ 0x79524f76 V11
0x5d: V23 = 0x1a0
0x60: JUMPI 0x1a0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1ce]
---
0x61 DUP1
0x62 PUSH4 0x823ded43
0x67 EQ
0x68 PUSH2 0x1ce
0x6b JUMPI
---
0x62: V24 = 0x823ded43
0x67: V25 = EQ 0x823ded43 V11
0x68: V26 = 0x1ce
0x6b: JUMPI 0x1ce V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x21c]
---
0x6c DUP1
0x6d PUSH4 0xd378e45c
0x72 EQ
0x73 PUSH2 0x21c
0x76 JUMPI
---
0x6d: V27 = 0xd378e45c
0x72: V28 = EQ 0xd378e45c V11
0x73: V29 = 0x21c
0x76: JUMPI 0x21c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x299, 0x3a2, 0x41c, 0x452, 0x524]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]

================================

Block 0x79
[0x79:0x8b]
---
Predecessors: [0xd]
Successors: [0x224]
---
0x79 JUMPDEST
0x7a PUSH2 0x77
0x7d PUSH1 0x4
0x7f DUP1
0x80 CALLDATALOAD
0x81 PUSH1 0x24
0x83 DUP2
0x84 ADD
0x85 SWAP2
0x86 ADD
0x87 CALLDATALOAD
0x88 PUSH2 0x224
0x8b JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x77
0x7d: V31 = 0x4
0x80: V32 = CALLDATALOAD 0x4
0x81: V33 = 0x24
0x84: V34 = ADD V32 0x24
0x86: V35 = ADD 0x4 V32
0x87: V36 = CALLDATALOAD V35
0x88: V37 = 0x224
0x8b: JUMP 0x224
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V34, V36]
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x8c
[0x8c:0x93]
---
Predecessors: [0x40]
Successors: [0x94, 0x98]
---
0x8c JUMPDEST
0x8d CALLVALUE
0x8e DUP1
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8c: JUMPDEST 
0x8d: V38 = CALLVALUE
0x8f: V39 = ISZERO V38
0x90: V40 = 0x98
0x93: JUMPI 0x98 V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V38]
Exit stack: [V11, V38]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8c]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V41 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V11, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V38]

================================

Block 0x98
[0x98:0xa0]
---
Predecessors: [0x8c]
Successors: [0x29d]
---
0x98 JUMPDEST
0x99 POP
0x9a PUSH2 0xa1
0x9d PUSH2 0x29d
0xa0 JUMP
---
0x98: JUMPDEST 
0x9a: V42 = 0xa1
0x9d: V43 = 0x29d
0xa0: JUMP 0x29d
---
Entry stack: [V11, V38]
Stack pops: 1
Stack additions: [0xa1]
Exit stack: [V11, 0xa1]

================================

Block 0xa1
[0xa1:0xc2]
---
Predecessors: [0x323]
Successors: [0xc3]
---
0xa1 JUMPDEST
0xa2 PUSH1 0x40
0xa4 DUP1
0xa5 MLOAD
0xa6 PUSH1 0x20
0xa8 DUP1
0xa9 DUP3
0xaa MSTORE
0xab DUP4
0xac MLOAD
0xad DUP2
0xae DUP4
0xaf ADD
0xb0 MSTORE
0xb1 DUP4
0xb2 MLOAD
0xb3 SWAP2
0xb4 SWAP3
0xb5 DUP4
0xb6 SWAP3
0xb7 SWAP1
0xb8 DUP4
0xb9 ADD
0xba SWAP2
0xbb DUP6
0xbc ADD
0xbd SWAP1
0xbe DUP1
0xbf DUP4
0xc0 DUP4
0xc1 PUSH1 0x0
---
0xa1: JUMPDEST 
0xa2: V44 = 0x40
0xa5: V45 = M[0x40]
0xa6: V46 = 0x20
0xaa: M[V45] = 0x20
0xac: V47 = M[V190]
0xaf: V48 = ADD V45 0x20
0xb0: M[V48] = V47
0xb2: V49 = M[V190]
0xb9: V50 = ADD V45 0x40
0xbc: V51 = ADD V190 0x20
0xc1: V52 = 0x0
---
Entry stack: [V11, 0xa1, V190]
Stack pops: 1
Stack additions: [S0, V45, V45, V50, V51, V49, V49, V50, V51, 0x0]
Exit stack: [V11, 0xa1, V190, V45, V45, V50, V51, V49, V49, V50, V51, 0x0]

================================

Block 0xc3
[0xc3:0xcb]
---
Predecessors: [0xa1, 0xcc]
Successors: [0xcc, 0xdb]
---
0xc3 JUMPDEST
0xc4 DUP4
0xc5 DUP2
0xc6 LT
0xc7 ISZERO
0xc8 PUSH2 0xdb
0xcb JUMPI
---
0xc3: JUMPDEST 
0xc6: V53 = LT S0 V49
0xc7: V54 = ISZERO V53
0xc8: V55 = 0xdb
0xcb: JUMPI 0xdb V54
---
Entry stack: [V11, 0xa1, V190, V45, V45, V50, V51, V49, V49, V50, V51, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xa1, V190, V45, V45, V50, V51, V49, V49, V50, V51, S0]

================================

Block 0xcc
[0xcc:0xda]
---
Predecessors: [0xc3]
Successors: [0xc3]
---
0xcc DUP2
0xcd DUP2
0xce ADD
0xcf MLOAD
0xd0 DUP4
0xd1 DUP3
0xd2 ADD
0xd3 MSTORE
0xd4 PUSH1 0x20
0xd6 ADD
0xd7 PUSH2 0xc3
0xda JUMP
---
0xce: V56 = ADD S0 V51
0xcf: V57 = M[V56]
0xd2: V58 = ADD S0 V50
0xd3: M[V58] = V57
0xd4: V59 = 0x20
0xd6: V60 = ADD 0x20 S0
0xd7: V61 = 0xc3
0xda: JUMP 0xc3
---
Entry stack: [V11, 0xa1, V190, V45, V45, V50, V51, V49, V49, V50, V51, S0]
Stack pops: 3
Stack additions: [S2, S1, V60]
Exit stack: [V11, 0xa1, V190, V45, V45, V50, V51, V49, V49, V50, V51, V60]

================================

Block 0xdb
[0xdb:0xee]
---
Predecessors: [0xc3]
Successors: [0xef, 0x108]
---
0xdb JUMPDEST
0xdc POP
0xdd POP
0xde POP
0xdf POP
0xe0 SWAP1
0xe1 POP
0xe2 SWAP1
0xe3 DUP2
0xe4 ADD
0xe5 SWAP1
0xe6 PUSH1 0x1f
0xe8 AND
0xe9 DUP1
0xea ISZERO
0xeb PUSH2 0x108
0xee JUMPI
---
0xdb: JUMPDEST 
0xe4: V62 = ADD V49 V50
0xe6: V63 = 0x1f
0xe8: V64 = AND 0x1f V49
0xea: V65 = ISZERO V64
0xeb: V66 = 0x108
0xee: JUMPI 0x108 V65
---
Entry stack: [V11, 0xa1, V190, V45, V45, V50, V51, V49, V49, V50, V51, S0]
Stack pops: 7
Stack additions: [V62, V64]
Exit stack: [V11, 0xa1, V190, V45, V45, V62, V64]

================================

Block 0xef
[0xef:0x107]
---
Predecessors: [0xdb]
Successors: [0x108]
---
0xef DUP1
0xf0 DUP3
0xf1 SUB
0xf2 DUP1
0xf3 MLOAD
0xf4 PUSH1 0x1
0xf6 DUP4
0xf7 PUSH1 0x20
0xf9 SUB
0xfa PUSH2 0x100
0xfd EXP
0xfe SUB
0xff NOT
0x100 AND
0x101 DUP2
0x102 MSTORE
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP2
0x107 POP
---
0xf1: V67 = SUB V62 V64
0xf3: V68 = M[V67]
0xf4: V69 = 0x1
0xf7: V70 = 0x20
0xf9: V71 = SUB 0x20 V64
0xfa: V72 = 0x100
0xfd: V73 = EXP 0x100 V71
0xfe: V74 = SUB V73 0x1
0xff: V75 = NOT V74
0x100: V76 = AND V75 V68
0x102: M[V67] = V76
0x103: V77 = 0x20
0x105: V78 = ADD 0x20 V67
---
Entry stack: [V11, 0xa1, V190, V45, V45, V62, V64]
Stack pops: 2
Stack additions: [V78, S0]
Exit stack: [V11, 0xa1, V190, V45, V45, V78, V64]

================================

Block 0x108
[0x108:0x115]
---
Predecessors: [0xdb, 0xef]
Successors: []
---
0x108 JUMPDEST
0x109 POP
0x10a SWAP3
0x10b POP
0x10c POP
0x10d POP
0x10e PUSH1 0x40
0x110 MLOAD
0x111 DUP1
0x112 SWAP2
0x113 SUB
0x114 SWAP1
0x115 RETURN
---
0x108: JUMPDEST 
0x10e: V79 = 0x40
0x110: V80 = M[0x40]
0x113: V81 = SUB S1 V80
0x115: RETURN V80 V81
---
Entry stack: [V11, 0xa1, V190, V45, V45, S1, V64]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xa1]

================================

Block 0x116
[0x116:0x19f]
---
Predecessors: [0x4b]
Successors: [0x32b]
---
0x116 JUMPDEST
0x117 PUSH1 0x40
0x119 DUP1
0x11a MLOAD
0x11b PUSH1 0x20
0x11d PUSH1 0x4
0x11f DUP1
0x120 CALLDATALOAD
0x121 DUP1
0x122 DUP3
0x123 ADD
0x124 CALLDATALOAD
0x125 PUSH1 0x1f
0x127 DUP2
0x128 ADD
0x129 DUP5
0x12a SWAP1
0x12b DIV
0x12c DUP5
0x12d MUL
0x12e DUP6
0x12f ADD
0x130 DUP5
0x131 ADD
0x132 SWAP1
0x133 SWAP6
0x134 MSTORE
0x135 DUP5
0x136 DUP5
0x137 MSTORE
0x138 PUSH2 0x77
0x13b SWAP5
0x13c CALLDATASIZE
0x13d SWAP5
0x13e SWAP3
0x13f SWAP4
0x140 PUSH1 0x24
0x142 SWAP4
0x143 SWAP3
0x144 DUP5
0x145 ADD
0x146 SWAP2
0x147 SWAP1
0x148 DUP2
0x149 SWAP1
0x14a DUP5
0x14b ADD
0x14c DUP4
0x14d DUP3
0x14e DUP1
0x14f DUP3
0x150 DUP5
0x151 CALLDATACOPY
0x152 POP
0x153 POP
0x154 PUSH1 0x40
0x156 DUP1
0x157 MLOAD
0x158 PUSH1 0x20
0x15a PUSH1 0x1f
0x15c DUP10
0x15d CALLDATALOAD
0x15e DUP12
0x15f ADD
0x160 DUP1
0x161 CALLDATALOAD
0x162 SWAP2
0x163 DUP3
0x164 ADD
0x165 DUP4
0x166 SWAP1
0x167 DIV
0x168 DUP4
0x169 MUL
0x16a DUP5
0x16b ADD
0x16c DUP4
0x16d ADD
0x16e SWAP1
0x16f SWAP5
0x170 MSTORE
0x171 DUP1
0x172 DUP4
0x173 MSTORE
0x174 SWAP8
0x175 SWAP11
0x176 SWAP10
0x177 SWAP9
0x178 DUP2
0x179 ADD
0x17a SWAP8
0x17b SWAP2
0x17c SWAP7
0x17d POP
0x17e SWAP2
0x17f DUP3
0x180 ADD
0x181 SWAP5
0x182 POP
0x183 SWAP3
0x184 POP
0x185 DUP3
0x186 SWAP2
0x187 POP
0x188 DUP5
0x189 ADD
0x18a DUP4
0x18b DUP3
0x18c DUP1
0x18d DUP3
0x18e DUP5
0x18f CALLDATACOPY
0x190 POP
0x191 SWAP5
0x192 SWAP8
0x193 POP
0x194 PUSH2 0x32b
0x197 SWAP7
0x198 POP
0x199 POP
0x19a POP
0x19b POP
0x19c POP
0x19d POP
0x19e POP
0x19f JUMP
---
0x116: JUMPDEST 
0x117: V82 = 0x40
0x11a: V83 = M[0x40]
0x11b: V84 = 0x20
0x11d: V85 = 0x4
0x120: V86 = CALLDATALOAD 0x4
0x123: V87 = ADD 0x4 V86
0x124: V88 = CALLDATALOAD V87
0x125: V89 = 0x1f
0x128: V90 = ADD V88 0x1f
0x12b: V91 = DIV V90 0x20
0x12d: V92 = MUL 0x20 V91
0x12f: V93 = ADD V83 V92
0x131: V94 = ADD 0x20 V93
0x134: M[0x40] = V94
0x137: M[V83] = V88
0x138: V95 = 0x77
0x13c: V96 = CALLDATASIZE
0x140: V97 = 0x24
0x145: V98 = ADD 0x24 V86
0x14b: V99 = ADD V83 0x20
0x151: CALLDATACOPY V99 V98 V88
0x154: V100 = 0x40
0x157: V101 = M[0x40]
0x158: V102 = 0x20
0x15a: V103 = 0x1f
0x15d: V104 = CALLDATALOAD 0x24
0x15f: V105 = ADD 0x4 V104
0x161: V106 = CALLDATALOAD V105
0x164: V107 = ADD V106 0x1f
0x167: V108 = DIV V107 0x20
0x169: V109 = MUL 0x20 V108
0x16b: V110 = ADD V101 V109
0x16d: V111 = ADD 0x20 V110
0x170: M[0x40] = V111
0x173: M[V101] = V106
0x179: V112 = ADD 0x20 0x24
0x180: V113 = ADD 0x20 V105
0x189: V114 = ADD V101 0x20
0x18f: CALLDATACOPY V114 V113 V106
0x194: V115 = 0x32b
0x19f: JUMP 0x32b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V83, V101]
Exit stack: [V11, 0x77, V83, V101]

================================

Block 0x1a0
[0x1a0:0x1a7]
---
Predecessors: [0x56]
Successors: [0x1a8, 0x1ac]
---
0x1a0 JUMPDEST
0x1a1 CALLVALUE
0x1a2 DUP1
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V116 = CALLVALUE
0x1a3: V117 = ISZERO V116
0x1a4: V118 = 0x1ac
0x1a7: JUMPI 0x1ac V117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V11, V116]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x1a0]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V119 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V11, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V116]

================================

Block 0x1ac
[0x1ac:0x1cd]
---
Predecessors: [0x1a0]
Successors: [0x3c6]
---
0x1ac JUMPDEST
0x1ad POP
0x1ae PUSH2 0x77
0x1b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c6 PUSH1 0x4
0x1c8 CALLDATALOAD
0x1c9 AND
0x1ca PUSH2 0x3c6
0x1cd JUMP
---
0x1ac: JUMPDEST 
0x1ae: V120 = 0x77
0x1b1: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V122 = 0x4
0x1c8: V123 = CALLDATALOAD 0x4
0x1c9: V124 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V125 = 0x3c6
0x1cd: JUMP 0x3c6
---
Entry stack: [V11, V116]
Stack pops: 1
Stack additions: [0x77, V124]
Exit stack: [V11, 0x77, V124]

================================

Block 0x1ce
[0x1ce:0x21b]
---
Predecessors: [0x61]
Successors: [0x41f]
---
0x1ce JUMPDEST
0x1cf PUSH1 0x40
0x1d1 DUP1
0x1d2 MLOAD
0x1d3 PUSH1 0x20
0x1d5 PUSH1 0x4
0x1d7 DUP1
0x1d8 CALLDATALOAD
0x1d9 DUP1
0x1da DUP3
0x1db ADD
0x1dc CALLDATALOAD
0x1dd PUSH1 0x1f
0x1df DUP2
0x1e0 ADD
0x1e1 DUP5
0x1e2 SWAP1
0x1e3 DIV
0x1e4 DUP5
0x1e5 MUL
0x1e6 DUP6
0x1e7 ADD
0x1e8 DUP5
0x1e9 ADD
0x1ea SWAP1
0x1eb SWAP6
0x1ec MSTORE
0x1ed DUP5
0x1ee DUP5
0x1ef MSTORE
0x1f0 PUSH2 0x77
0x1f3 SWAP5
0x1f4 CALLDATASIZE
0x1f5 SWAP5
0x1f6 SWAP3
0x1f7 SWAP4
0x1f8 PUSH1 0x24
0x1fa SWAP4
0x1fb SWAP3
0x1fc DUP5
0x1fd ADD
0x1fe SWAP2
0x1ff SWAP1
0x200 DUP2
0x201 SWAP1
0x202 DUP5
0x203 ADD
0x204 DUP4
0x205 DUP3
0x206 DUP1
0x207 DUP3
0x208 DUP5
0x209 CALLDATACOPY
0x20a POP
0x20b SWAP5
0x20c SWAP8
0x20d POP
0x20e POP
0x20f SWAP4
0x210 CALLDATALOAD
0x211 SWAP5
0x212 POP
0x213 PUSH2 0x41f
0x216 SWAP4
0x217 POP
0x218 POP
0x219 POP
0x21a POP
0x21b JUMP
---
0x1ce: JUMPDEST 
0x1cf: V126 = 0x40
0x1d2: V127 = M[0x40]
0x1d3: V128 = 0x20
0x1d5: V129 = 0x4
0x1d8: V130 = CALLDATALOAD 0x4
0x1db: V131 = ADD 0x4 V130
0x1dc: V132 = CALLDATALOAD V131
0x1dd: V133 = 0x1f
0x1e0: V134 = ADD V132 0x1f
0x1e3: V135 = DIV V134 0x20
0x1e5: V136 = MUL 0x20 V135
0x1e7: V137 = ADD V127 V136
0x1e9: V138 = ADD 0x20 V137
0x1ec: M[0x40] = V138
0x1ef: M[V127] = V132
0x1f0: V139 = 0x77
0x1f4: V140 = CALLDATASIZE
0x1f8: V141 = 0x24
0x1fd: V142 = ADD 0x24 V130
0x203: V143 = ADD V127 0x20
0x209: CALLDATACOPY V143 V142 V132
0x210: V144 = CALLDATALOAD 0x24
0x213: V145 = 0x41f
0x21b: JUMP 0x41f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V127, V144]
Exit stack: [V11, 0x77, V127, V144]

================================

Block 0x21c
[0x21c:0x223]
---
Predecessors: [0x6c]
Successors: [0x459]
---
0x21c JUMPDEST
0x21d PUSH2 0x77
0x220 PUSH2 0x459
0x223 JUMP
---
0x21c: JUMPDEST 
0x21d: V146 = 0x77
0x220: V147 = 0x459
0x223: JUMP 0x459
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x224
[0x224:0x22b]
---
Predecessors: [0x79]
Successors: [0x22c, 0x230]
---
0x224 JUMPDEST
0x225 CALLER
0x226 ORIGIN
0x227 EQ
0x228 PUSH2 0x230
0x22b JUMPI
---
0x224: JUMPDEST 
0x225: V148 = CALLER
0x226: V149 = ORIGIN
0x227: V150 = EQ V149 V148
0x228: V151 = 0x230
0x22b: JUMPI 0x230 V150
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x224]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V152 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x230
[0x230:0x258]
---
Predecessors: [0x224]
Successors: [0x259, 0x265]
---
0x230 JUMPDEST
0x231 DUP2
0x232 DUP2
0x233 PUSH1 0x40
0x235 MLOAD
0x236 DUP1
0x237 DUP4
0x238 DUP4
0x239 DUP1
0x23a DUP3
0x23b DUP5
0x23c CALLDATACOPY
0x23d PUSH1 0x40
0x23f MLOAD
0x240 SWAP3
0x241 ADD
0x242 DUP3
0x243 SWAP1
0x244 SUB
0x245 SWAP1
0x246 SWAP2
0x247 SHA3
0x248 PUSH1 0x2
0x24a SLOAD
0x24b EQ
0x24c SWAP4
0x24d POP
0x24e POP
0x24f DUP3
0x250 ISZERO
0x251 SWAP2
0x252 POP
0x253 PUSH2 0x265
0x256 SWAP1
0x257 POP
0x258 JUMPI
---
0x230: JUMPDEST 
0x233: V153 = 0x40
0x235: V154 = M[0x40]
0x23c: CALLDATACOPY V154 V34 V36
0x23d: V155 = 0x40
0x23f: V156 = M[0x40]
0x241: V157 = ADD V154 V36
0x244: V158 = SUB V157 V156
0x247: V159 = SHA3 V156 V158
0x248: V160 = 0x2
0x24a: V161 = S[0x2]
0x24b: V162 = EQ V161 V159
0x250: V163 = ISZERO V162
0x253: V164 = 0x265
0x258: JUMPI 0x265 V163
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 2
Stack additions: [S1, S0, V162]
Exit stack: [V11, 0x77, V34, V36, V162]

================================

Block 0x259
[0x259:0x264]
---
Predecessors: [0x230]
Successors: [0x265]
---
0x259 POP
0x25a PUSH8 0x29a2241af62c0000
0x263 CALLVALUE
0x264 GT
---
0x25a: V165 = 0x29a2241af62c0000
0x263: V166 = CALLVALUE
0x264: V167 = GT V166 0x29a2241af62c0000
---
Entry stack: [V11, 0x77, V34, V36, V162]
Stack pops: 1
Stack additions: [V167]
Exit stack: [V11, 0x77, V34, V36, V167]

================================

Block 0x265
[0x265:0x26a]
---
Predecessors: [0x230, 0x259]
Successors: [0x26b, 0x299]
---
0x265 JUMPDEST
0x266 ISZERO
0x267 PUSH2 0x299
0x26a JUMPI
---
0x265: JUMPDEST 
0x266: V168 = ISZERO S0
0x267: V169 = 0x299
0x26a: JUMPI 0x299 V168
---
Entry stack: [V11, 0x77, V34, V36, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x26b
[0x26b:0x28d]
---
Predecessors: [0x265]
Successors: [0x28e, 0x297]
---
0x26b PUSH1 0x40
0x26d MLOAD
0x26e CALLER
0x26f SWAP1
0x270 ADDRESS
0x271 BALANCE
0x272 DUP1
0x273 ISZERO
0x274 PUSH2 0x8fc
0x277 MUL
0x278 SWAP2
0x279 PUSH1 0x0
0x27b DUP2
0x27c DUP2
0x27d DUP2
0x27e DUP6
0x27f DUP9
0x280 DUP9
0x281 CALL
0x282 SWAP4
0x283 POP
0x284 POP
0x285 POP
0x286 POP
0x287 ISZERO
0x288 DUP1
0x289 ISZERO
0x28a PUSH2 0x297
0x28d JUMPI
---
0x26b: V170 = 0x40
0x26d: V171 = M[0x40]
0x26e: V172 = CALLER
0x270: V173 = ADDRESS
0x271: V174 = BALANCE V173
0x273: V175 = ISZERO V174
0x274: V176 = 0x8fc
0x277: V177 = MUL 0x8fc V175
0x279: V178 = 0x0
0x281: V179 = CALL V177 V172 V174 V171 0x0 V171 0x0
0x287: V180 = ISZERO V179
0x289: V181 = ISZERO V180
0x28a: V182 = 0x297
0x28d: JUMPI 0x297 V181
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: [V180]
Exit stack: [V11, 0x77, V34, V36, V180]

================================

Block 0x28e
[0x28e:0x296]
---
Predecessors: [0x26b]
Successors: []
---
0x28e RETURNDATASIZE
0x28f PUSH1 0x0
0x291 DUP1
0x292 RETURNDATACOPY
0x293 RETURNDATASIZE
0x294 PUSH1 0x0
0x296 REVERT
---
0x28e: V183 = RETURNDATASIZE
0x28f: V184 = 0x0
0x292: RETURNDATACOPY 0x0 0x0 V183
0x293: V185 = RETURNDATASIZE
0x294: V186 = 0x0
0x296: REVERT 0x0 V185
---
Entry stack: [V11, 0x77, V34, V36, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36, V180]

================================

Block 0x297
[0x297:0x298]
---
Predecessors: [0x26b]
Successors: [0x299]
---
0x297 JUMPDEST
0x298 POP
---
0x297: JUMPDEST 
---
Entry stack: [V11, 0x77, V34, V36, V180]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x299
[0x299:0x29c]
---
Predecessors: [0x265, 0x297, 0x32b, 0x41f]
Successors: [0x77]
---
0x299 JUMPDEST
0x29a POP
0x29b POP
0x29c JUMP
---
0x299: JUMPDEST 
0x29c: JUMP 0x77
---
Entry stack: [V11, 0x77, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x29d
[0x29d:0x2dc]
---
Predecessors: [0x98]
Successors: [0x2dd, 0x323]
---
0x29d JUMPDEST
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 SLOAD
0x2a2 PUSH1 0x40
0x2a4 DUP1
0x2a5 MLOAD
0x2a6 PUSH1 0x20
0x2a8 PUSH1 0x2
0x2aa PUSH1 0x1
0x2ac DUP6
0x2ad AND
0x2ae ISZERO
0x2af PUSH2 0x100
0x2b2 MUL
0x2b3 PUSH1 0x0
0x2b5 NOT
0x2b6 ADD
0x2b7 SWAP1
0x2b8 SWAP5
0x2b9 AND
0x2ba SWAP4
0x2bb SWAP1
0x2bc SWAP4
0x2bd DIV
0x2be PUSH1 0x1f
0x2c0 DUP2
0x2c1 ADD
0x2c2 DUP5
0x2c3 SWAP1
0x2c4 DIV
0x2c5 DUP5
0x2c6 MUL
0x2c7 DUP3
0x2c8 ADD
0x2c9 DUP5
0x2ca ADD
0x2cb SWAP1
0x2cc SWAP3
0x2cd MSTORE
0x2ce DUP2
0x2cf DUP2
0x2d0 MSTORE
0x2d1 SWAP3
0x2d2 SWAP2
0x2d3 DUP4
0x2d4 ADD
0x2d5 DUP3
0x2d6 DUP3
0x2d7 DUP1
0x2d8 ISZERO
0x2d9 PUSH2 0x323
0x2dc JUMPI
---
0x29d: JUMPDEST 
0x29e: V187 = 0x0
0x2a1: V188 = S[0x0]
0x2a2: V189 = 0x40
0x2a5: V190 = M[0x40]
0x2a6: V191 = 0x20
0x2a8: V192 = 0x2
0x2aa: V193 = 0x1
0x2ad: V194 = AND V188 0x1
0x2ae: V195 = ISZERO V194
0x2af: V196 = 0x100
0x2b2: V197 = MUL 0x100 V195
0x2b3: V198 = 0x0
0x2b5: V199 = NOT 0x0
0x2b6: V200 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V197
0x2b9: V201 = AND V188 V200
0x2bd: V202 = DIV V201 0x2
0x2be: V203 = 0x1f
0x2c1: V204 = ADD V202 0x1f
0x2c4: V205 = DIV V204 0x20
0x2c6: V206 = MUL 0x20 V205
0x2c8: V207 = ADD V190 V206
0x2ca: V208 = ADD 0x20 V207
0x2cd: M[0x40] = V208
0x2d0: M[V190] = V202
0x2d4: V209 = ADD V190 0x20
0x2d8: V210 = ISZERO V202
0x2d9: V211 = 0x323
0x2dc: JUMPI 0x323 V210
---
Entry stack: [V11, 0xa1]
Stack pops: 0
Stack additions: [V190, 0x0, V202, V209, 0x0, V202]
Exit stack: [V11, 0xa1, V190, 0x0, V202, V209, 0x0, V202]

================================

Block 0x2dd
[0x2dd:0x2e4]
---
Predecessors: [0x29d]
Successors: [0x2e5, 0x2f8]
---
0x2dd DUP1
0x2de PUSH1 0x1f
0x2e0 LT
0x2e1 PUSH2 0x2f8
0x2e4 JUMPI
---
0x2de: V212 = 0x1f
0x2e0: V213 = LT 0x1f V202
0x2e1: V214 = 0x2f8
0x2e4: JUMPI 0x2f8 V213
---
Entry stack: [V11, 0xa1, V190, 0x0, V202, V209, 0x0, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa1, V190, 0x0, V202, V209, 0x0, V202]

================================

Block 0x2e5
[0x2e5:0x2f7]
---
Predecessors: [0x2dd]
Successors: [0x323]
---
0x2e5 PUSH2 0x100
0x2e8 DUP1
0x2e9 DUP4
0x2ea SLOAD
0x2eb DIV
0x2ec MUL
0x2ed DUP4
0x2ee MSTORE
0x2ef SWAP2
0x2f0 PUSH1 0x20
0x2f2 ADD
0x2f3 SWAP2
0x2f4 PUSH2 0x323
0x2f7 JUMP
---
0x2e5: V215 = 0x100
0x2ea: V216 = S[0x0]
0x2eb: V217 = DIV V216 0x100
0x2ec: V218 = MUL V217 0x100
0x2ee: M[V209] = V218
0x2f0: V219 = 0x20
0x2f2: V220 = ADD 0x20 V209
0x2f4: V221 = 0x323
0x2f7: JUMP 0x323
---
Entry stack: [V11, 0xa1, V190, 0x0, V202, V209, 0x0, V202]
Stack pops: 3
Stack additions: [V220, S1, S0]
Exit stack: [V11, 0xa1, V190, 0x0, V202, V220, 0x0, V202]

================================

Block 0x2f8
[0x2f8:0x305]
---
Predecessors: [0x2dd]
Successors: [0x306]
---
0x2f8 JUMPDEST
0x2f9 DUP3
0x2fa ADD
0x2fb SWAP2
0x2fc SWAP1
0x2fd PUSH1 0x0
0x2ff MSTORE
0x300 PUSH1 0x20
0x302 PUSH1 0x0
0x304 SHA3
0x305 SWAP1
---
0x2f8: JUMPDEST 
0x2fa: V222 = ADD V209 V202
0x2fd: V223 = 0x0
0x2ff: M[0x0] = 0x0
0x300: V224 = 0x20
0x302: V225 = 0x0
0x304: V226 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xa1, V190, 0x0, V202, V209, 0x0, V202]
Stack pops: 3
Stack additions: [V222, V226, S2]
Exit stack: [V11, 0xa1, V190, 0x0, V202, V222, V226, V209]

================================

Block 0x306
[0x306:0x319]
---
Predecessors: [0x2f8, 0x306]
Successors: [0x306, 0x31a]
---
0x306 JUMPDEST
0x307 DUP2
0x308 SLOAD
0x309 DUP2
0x30a MSTORE
0x30b SWAP1
0x30c PUSH1 0x1
0x30e ADD
0x30f SWAP1
0x310 PUSH1 0x20
0x312 ADD
0x313 DUP1
0x314 DUP4
0x315 GT
0x316 PUSH2 0x306
0x319 JUMPI
---
0x306: JUMPDEST 
0x308: V227 = S[S1]
0x30a: M[S0] = V227
0x30c: V228 = 0x1
0x30e: V229 = ADD 0x1 S1
0x310: V230 = 0x20
0x312: V231 = ADD 0x20 S0
0x315: V232 = GT V222 V231
0x316: V233 = 0x306
0x319: JUMPI 0x306 V232
---
Entry stack: [V11, 0xa1, V190, 0x0, V202, V222, S1, S0]
Stack pops: 3
Stack additions: [S2, V229, V231]
Exit stack: [V11, 0xa1, V190, 0x0, V202, V222, V229, V231]

================================

Block 0x31a
[0x31a:0x322]
---
Predecessors: [0x306]
Successors: [0x323]
---
0x31a DUP3
0x31b SWAP1
0x31c SUB
0x31d PUSH1 0x1f
0x31f AND
0x320 DUP3
0x321 ADD
0x322 SWAP2
---
0x31c: V234 = SUB V231 V222
0x31d: V235 = 0x1f
0x31f: V236 = AND 0x1f V234
0x321: V237 = ADD V222 V236
---
Entry stack: [V11, 0xa1, V190, 0x0, V202, V222, V229, V231]
Stack pops: 3
Stack additions: [V237, S1, S2]
Exit stack: [V11, 0xa1, V190, 0x0, V202, V237, V229, V222]

================================

Block 0x323
[0x323:0x32a]
---
Predecessors: [0x29d, 0x2e5, 0x31a]
Successors: [0xa1]
---
0x323 JUMPDEST
0x324 POP
0x325 POP
0x326 POP
0x327 POP
0x328 POP
0x329 DUP2
0x32a JUMP
---
0x323: JUMPDEST 
0x32a: JUMP 0xa1
---
Entry stack: [V11, 0xa1, V190, 0x0, V202, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xa1, V190]

================================

Block 0x32b
[0x32b:0x334]
---
Predecessors: [0x116]
Successors: [0x299, 0x335]
---
0x32b JUMPDEST
0x32c PUSH1 0x2
0x32e SLOAD
0x32f ISZERO
0x330 ISZERO
0x331 PUSH2 0x299
0x334 JUMPI
---
0x32b: JUMPDEST 
0x32c: V238 = 0x2
0x32e: V239 = S[0x2]
0x32f: V240 = ISZERO V239
0x330: V241 = ISZERO V240
0x331: V242 = 0x299
0x334: JUMPI 0x299 V241
---
Entry stack: [V11, 0x77, V83, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V83, V101]

================================

Block 0x335
[0x335:0x344]
---
Predecessors: [0x32b]
Successors: [0x345]
---
0x335 DUP1
0x336 PUSH1 0x40
0x338 MLOAD
0x339 DUP1
0x33a DUP3
0x33b DUP1
0x33c MLOAD
0x33d SWAP1
0x33e PUSH1 0x20
0x340 ADD
0x341 SWAP1
0x342 DUP1
0x343 DUP4
0x344 DUP4
---
0x336: V243 = 0x40
0x338: V244 = M[0x40]
0x33c: V245 = M[V101]
0x33e: V246 = 0x20
0x340: V247 = ADD 0x20 V101
---
Entry stack: [V11, 0x77, V83, V101]
Stack pops: 1
Stack additions: [S0, S0, V244, V244, V247, V245, V245, V244, V247]
Exit stack: [V11, 0x77, V83, V101, V101, V244, V244, V247, V245, V245, V244, V247]

================================

Block 0x345
[0x345:0x34d]
---
Predecessors: [0x335, 0x34e]
Successors: [0x34e, 0x364]
---
0x345 JUMPDEST
0x346 PUSH1 0x20
0x348 DUP4
0x349 LT
0x34a PUSH2 0x364
0x34d JUMPI
---
0x345: JUMPDEST 
0x346: V248 = 0x20
0x349: V249 = LT S2 0x20
0x34a: V250 = 0x364
0x34d: JUMPI 0x364 V249
---
Entry stack: [V11, 0x77, V83, V101, V101, V244, V244, V247, V245, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V83, V101, V101, V244, V244, V247, V245, S2, S1, S0]

================================

Block 0x34e
[0x34e:0x363]
---
Predecessors: [0x345]
Successors: [0x345]
---
0x34e DUP1
0x34f MLOAD
0x350 DUP3
0x351 MSTORE
0x352 PUSH1 0x1f
0x354 NOT
0x355 SWAP1
0x356 SWAP3
0x357 ADD
0x358 SWAP2
0x359 PUSH1 0x20
0x35b SWAP2
0x35c DUP3
0x35d ADD
0x35e SWAP2
0x35f ADD
0x360 PUSH2 0x345
0x363 JUMP
---
0x34f: V251 = M[S0]
0x351: M[S1] = V251
0x352: V252 = 0x1f
0x354: V253 = NOT 0x1f
0x357: V254 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x359: V255 = 0x20
0x35d: V256 = ADD 0x20 S1
0x35f: V257 = ADD 0x20 S0
0x360: V258 = 0x345
0x363: JUMP 0x345
---
Entry stack: [V11, 0x77, V83, V101, V101, V244, V244, V247, V245, S2, S1, S0]
Stack pops: 3
Stack additions: [V254, V256, V257]
Exit stack: [V11, 0x77, V83, V101, V101, V244, V244, V247, V245, V254, V256, V257]

================================

Block 0x364
[0x364:0x3a1]
---
Predecessors: [0x345]
Successors: [0x4aa]
---
0x364 JUMPDEST
0x365 MLOAD
0x366 DUP2
0x367 MLOAD
0x368 PUSH1 0x20
0x36a SWAP4
0x36b DUP5
0x36c SUB
0x36d PUSH2 0x100
0x370 EXP
0x371 PUSH1 0x0
0x373 NOT
0x374 ADD
0x375 DUP1
0x376 NOT
0x377 SWAP1
0x378 SWAP3
0x379 AND
0x37a SWAP2
0x37b AND
0x37c OR
0x37d SWAP1
0x37e MSTORE
0x37f PUSH1 0x40
0x381 MLOAD
0x382 SWAP2
0x383 SWAP1
0x384 SWAP4
0x385 ADD
0x386 DUP2
0x387 SWAP1
0x388 SUB
0x389 SWAP1
0x38a SHA3
0x38b PUSH1 0x2
0x38d SSTORE
0x38e POP
0x38f DUP5
0x390 MLOAD
0x391 PUSH2 0x3a2
0x394 SWAP4
0x395 POP
0x396 PUSH1 0x0
0x398 SWAP3
0x399 POP
0x39a SWAP1
0x39b DUP6
0x39c ADD
0x39d SWAP1
0x39e PUSH2 0x4aa
0x3a1 JUMP
---
0x364: JUMPDEST 
0x365: V259 = M[S0]
0x367: V260 = M[S1]
0x368: V261 = 0x20
0x36c: V262 = SUB 0x20 S2
0x36d: V263 = 0x100
0x370: V264 = EXP 0x100 V262
0x371: V265 = 0x0
0x373: V266 = NOT 0x0
0x374: V267 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V264
0x376: V268 = NOT V267
0x379: V269 = AND V259 V268
0x37b: V270 = AND V267 V260
0x37c: V271 = OR V270 V269
0x37e: M[S1] = V271
0x37f: V272 = 0x40
0x381: V273 = M[0x40]
0x385: V274 = ADD V244 V245
0x388: V275 = SUB V274 V273
0x38a: V276 = SHA3 V273 V275
0x38b: V277 = 0x2
0x38d: S[0x2] = V276
0x390: V278 = M[V83]
0x391: V279 = 0x3a2
0x396: V280 = 0x0
0x39c: V281 = ADD V83 0x20
0x39e: V282 = 0x4aa
0x3a1: JUMP 0x4aa
---
Entry stack: [V11, 0x77, V83, V101, V101, V244, V244, V247, V245, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x3a2, 0x0, V281, V278]
Exit stack: [V11, 0x77, V83, V101, 0x3a2, 0x0, V281, V278]

================================

Block 0x3a2
[0x3a2:0x3c5]
---
Predecessors: [0x3a2, 0x452, 0x524]
Successors: [0x77, 0x3a2, 0x452]
---
0x3a2 JUMPDEST
0x3a3 POP
0x3a4 PUSH1 0x1
0x3a6 DUP1
0x3a7 SLOAD
0x3a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bd NOT
0x3be AND
0x3bf CALLER
0x3c0 OR
0x3c1 SWAP1
0x3c2 SSTORE
0x3c3 POP
0x3c4 POP
0x3c5 JUMP
---
0x3a2: JUMPDEST 
0x3a4: V283 = 0x1
0x3a7: V284 = S[0x1]
0x3a8: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V286 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3be: V287 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V284
0x3bf: V288 = CALLER
0x3c0: V289 = OR V288 V287
0x3c2: S[0x1] = V289
0x3c5: JUMP S3
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, S5, S4]

================================

Block 0x3c6
[0x3c6:0x3e6]
---
Predecessors: [0x1ac]
Successors: [0x3e7, 0x41c]
---
0x3c6 JUMPDEST
0x3c7 PUSH1 0x1
0x3c9 SLOAD
0x3ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3df AND
0x3e0 CALLER
0x3e1 EQ
0x3e2 ISZERO
0x3e3 PUSH2 0x41c
0x3e6 JUMPI
---
0x3c6: JUMPDEST 
0x3c7: V290 = 0x1
0x3c9: V291 = S[0x1]
0x3ca: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x3df: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x3e0: V294 = CALLER
0x3e1: V295 = EQ V294 V293
0x3e2: V296 = ISZERO V295
0x3e3: V297 = 0x41c
0x3e6: JUMPI 0x41c V296
---
Entry stack: [V11, 0x77, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V124]

================================

Block 0x3e7
[0x3e7:0x41b]
---
Predecessors: [0x3c6]
Successors: [0x41c]
---
0x3e7 PUSH1 0x1
0x3e9 DUP1
0x3ea SLOAD
0x3eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x400 NOT
0x401 AND
0x402 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x417 DUP4
0x418 AND
0x419 OR
0x41a SWAP1
0x41b SSTORE
---
0x3e7: V298 = 0x1
0x3ea: V299 = S[0x1]
0x3eb: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x400: V301 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x401: V302 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V299
0x402: V303 = 0xffffffffffffffffffffffffffffffffffffffff
0x418: V304 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x419: V305 = OR V304 V302
0x41b: S[0x1] = V305
---
Entry stack: [V11, 0x77, V124]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V124]

================================

Block 0x41c
[0x41c:0x41e]
---
Predecessors: [0x3c6, 0x3e7, 0x47d]
Successors: [0x77]
---
0x41c JUMPDEST
0x41d POP
0x41e JUMP
---
0x41c: JUMPDEST 
0x41e: JUMP 0x77
---
Entry stack: [V11, 0x77, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x41f
[0x41f:0x43f]
---
Predecessors: [0x1ce]
Successors: [0x299, 0x440]
---
0x41f JUMPDEST
0x420 PUSH1 0x1
0x422 SLOAD
0x423 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x438 AND
0x439 CALLER
0x43a EQ
0x43b ISZERO
0x43c PUSH2 0x299
0x43f JUMPI
---
0x41f: JUMPDEST 
0x420: V306 = 0x1
0x422: V307 = S[0x1]
0x423: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x438: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x439: V310 = CALLER
0x43a: V311 = EQ V310 V309
0x43b: V312 = ISZERO V311
0x43c: V313 = 0x299
0x43f: JUMPI 0x299 V312
---
Entry stack: [V11, 0x77, V127, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V127, V144]

================================

Block 0x440
[0x440:0x451]
---
Predecessors: [0x41f]
Successors: [0x4aa]
---
0x440 DUP2
0x441 MLOAD
0x442 PUSH2 0x452
0x445 SWAP1
0x446 PUSH1 0x0
0x448 SWAP1
0x449 PUSH1 0x20
0x44b DUP6
0x44c ADD
0x44d SWAP1
0x44e PUSH2 0x4aa
0x451 JUMP
---
0x441: V314 = M[V127]
0x442: V315 = 0x452
0x446: V316 = 0x0
0x449: V317 = 0x20
0x44c: V318 = ADD V127 0x20
0x44e: V319 = 0x4aa
0x451: JUMP 0x4aa
---
Entry stack: [V11, 0x77, V127, V144]
Stack pops: 2
Stack additions: [S1, S0, 0x452, 0x0, V318, V314]
Exit stack: [V11, 0x77, V127, V144, 0x452, 0x0, V318, V314]

================================

Block 0x452
[0x452:0x458]
---
Predecessors: [0x3a2, 0x452, 0x524]
Successors: [0x77, 0x3a2, 0x452]
---
0x452 JUMPDEST
0x453 POP
0x454 PUSH1 0x2
0x456 SSTORE
0x457 POP
0x458 JUMP
---
0x452: JUMPDEST 
0x454: V320 = 0x2
0x456: S[0x2] = S1
0x458: JUMP S3
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, S5, S4]

================================

Block 0x459
[0x459:0x478]
---
Predecessors: [0x21c]
Successors: [0x479, 0x47d]
---
0x459 JUMPDEST
0x45a PUSH1 0x1
0x45c SLOAD
0x45d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x472 AND
0x473 CALLER
0x474 EQ
0x475 PUSH2 0x47d
0x478 JUMPI
---
0x459: JUMPDEST 
0x45a: V321 = 0x1
0x45c: V322 = S[0x1]
0x45d: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x472: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x473: V325 = CALLER
0x474: V326 = EQ V325 V324
0x475: V327 = 0x47d
0x478: JUMPI 0x47d V326
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x479
[0x479:0x47c]
---
Predecessors: [0x459]
Successors: []
---
0x479 PUSH1 0x0
0x47b DUP1
0x47c REVERT
---
0x479: V328 = 0x0
0x47c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x47d
[0x47d:0x4a0]
---
Predecessors: [0x459]
Successors: [0x41c, 0x4a1]
---
0x47d JUMPDEST
0x47e PUSH1 0x40
0x480 MLOAD
0x481 CALLER
0x482 SWAP1
0x483 ADDRESS
0x484 BALANCE
0x485 DUP1
0x486 ISZERO
0x487 PUSH2 0x8fc
0x48a MUL
0x48b SWAP2
0x48c PUSH1 0x0
0x48e DUP2
0x48f DUP2
0x490 DUP2
0x491 DUP6
0x492 DUP9
0x493 DUP9
0x494 CALL
0x495 SWAP4
0x496 POP
0x497 POP
0x498 POP
0x499 POP
0x49a ISZERO
0x49b DUP1
0x49c ISZERO
0x49d PUSH2 0x41c
0x4a0 JUMPI
---
0x47d: JUMPDEST 
0x47e: V329 = 0x40
0x480: V330 = M[0x40]
0x481: V331 = CALLER
0x483: V332 = ADDRESS
0x484: V333 = BALANCE V332
0x486: V334 = ISZERO V333
0x487: V335 = 0x8fc
0x48a: V336 = MUL 0x8fc V334
0x48c: V337 = 0x0
0x494: V338 = CALL V336 V331 V333 V330 0x0 V330 0x0
0x49a: V339 = ISZERO V338
0x49c: V340 = ISZERO V339
0x49d: V341 = 0x41c
0x4a0: JUMPI 0x41c V340
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V339]
Exit stack: [V11, 0x77, V339]

================================

Block 0x4a1
[0x4a1:0x4a9]
---
Predecessors: [0x47d]
Successors: []
---
0x4a1 RETURNDATASIZE
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 RETURNDATACOPY
0x4a6 RETURNDATASIZE
0x4a7 PUSH1 0x0
0x4a9 REVERT
---
0x4a1: V342 = RETURNDATASIZE
0x4a2: V343 = 0x0
0x4a5: RETURNDATACOPY 0x0 0x0 V342
0x4a6: V344 = RETURNDATASIZE
0x4a7: V345 = 0x0
0x4a9: REVERT 0x0 V344
---
Entry stack: [V11, 0x77, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V339]

================================

Block 0x4aa
[0x4aa:0x4da]
---
Predecessors: [0x364, 0x440]
Successors: [0x4db, 0x4eb]
---
0x4aa JUMPDEST
0x4ab DUP3
0x4ac DUP1
0x4ad SLOAD
0x4ae PUSH1 0x1
0x4b0 DUP2
0x4b1 PUSH1 0x1
0x4b3 AND
0x4b4 ISZERO
0x4b5 PUSH2 0x100
0x4b8 MUL
0x4b9 SUB
0x4ba AND
0x4bb PUSH1 0x2
0x4bd SWAP1
0x4be DIV
0x4bf SWAP1
0x4c0 PUSH1 0x0
0x4c2 MSTORE
0x4c3 PUSH1 0x20
0x4c5 PUSH1 0x0
0x4c7 SHA3
0x4c8 SWAP1
0x4c9 PUSH1 0x1f
0x4cb ADD
0x4cc PUSH1 0x20
0x4ce SWAP1
0x4cf DIV
0x4d0 DUP2
0x4d1 ADD
0x4d2 SWAP3
0x4d3 DUP3
0x4d4 PUSH1 0x1f
0x4d6 LT
0x4d7 PUSH2 0x4eb
0x4da JUMPI
---
0x4aa: JUMPDEST 
0x4ad: V346 = S[0x0]
0x4ae: V347 = 0x1
0x4b1: V348 = 0x1
0x4b3: V349 = AND 0x1 V346
0x4b4: V350 = ISZERO V349
0x4b5: V351 = 0x100
0x4b8: V352 = MUL 0x100 V350
0x4b9: V353 = SUB V352 0x1
0x4ba: V354 = AND V353 V346
0x4bb: V355 = 0x2
0x4be: V356 = DIV V354 0x2
0x4c0: V357 = 0x0
0x4c2: M[0x0] = 0x0
0x4c3: V358 = 0x20
0x4c5: V359 = 0x0
0x4c7: V360 = SHA3 0x0 0x20
0x4c9: V361 = 0x1f
0x4cb: V362 = ADD 0x1f V356
0x4cc: V363 = 0x20
0x4cf: V364 = DIV V362 0x20
0x4d1: V365 = ADD V360 V364
0x4d4: V366 = 0x1f
0x4d6: V367 = LT 0x1f S0
0x4d7: V368 = 0x4eb
0x4da: JUMPI 0x4eb V367
---
Entry stack: [V11, 0x77, S5, S4, {0x3a2, 0x452}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V365, S0, V360, S1]
Exit stack: [V11, 0x77, S5, S4, {0x3a2, 0x452}, 0x0, V365, S0, V360, S1]

================================

Block 0x4db
[0x4db:0x4ea]
---
Predecessors: [0x4aa]
Successors: [0x518]
---
0x4db DUP1
0x4dc MLOAD
0x4dd PUSH1 0xff
0x4df NOT
0x4e0 AND
0x4e1 DUP4
0x4e2 DUP1
0x4e3 ADD
0x4e4 OR
0x4e5 DUP6
0x4e6 SSTORE
0x4e7 PUSH2 0x518
0x4ea JUMP
---
0x4dc: V369 = M[S0]
0x4dd: V370 = 0xff
0x4df: V371 = NOT 0xff
0x4e0: V372 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V369
0x4e3: V373 = ADD S2 S2
0x4e4: V374 = OR V373 V372
0x4e6: S[0x0] = V374
0x4e7: V375 = 0x518
0x4ea: JUMP 0x518
---
Entry stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, V365, S2, V360, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, V365, S2, V360, S0]

================================

Block 0x4eb
[0x4eb:0x4f9]
---
Predecessors: [0x4aa]
Successors: [0x4fa, 0x518]
---
0x4eb JUMPDEST
0x4ec DUP3
0x4ed DUP1
0x4ee ADD
0x4ef PUSH1 0x1
0x4f1 ADD
0x4f2 DUP6
0x4f3 SSTORE
0x4f4 DUP3
0x4f5 ISZERO
0x4f6 PUSH2 0x518
0x4f9 JUMPI
---
0x4eb: JUMPDEST 
0x4ee: V376 = ADD S2 S2
0x4ef: V377 = 0x1
0x4f1: V378 = ADD 0x1 V376
0x4f3: S[0x0] = V378
0x4f5: V379 = ISZERO S2
0x4f6: V380 = 0x518
0x4f9: JUMPI 0x518 V379
---
Entry stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, V365, S2, V360, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, V365, S2, V360, S0]

================================

Block 0x4fa
[0x4fa:0x4fc]
---
Predecessors: [0x4eb]
Successors: [0x4fd]
---
0x4fa SWAP2
0x4fb DUP3
0x4fc ADD
---
0x4fc: V381 = ADD S0 S2
---
Entry stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, V365, S2, V360, S0]
Stack pops: 3
Stack additions: [S0, S1, V381]
Exit stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, V365, S0, V360, V381]

================================

Block 0x4fd
[0x4fd:0x505]
---
Predecessors: [0x4fa, 0x506]
Successors: [0x506, 0x518]
---
0x4fd JUMPDEST
0x4fe DUP3
0x4ff DUP2
0x500 GT
0x501 ISZERO
0x502 PUSH2 0x518
0x505 JUMPI
---
0x4fd: JUMPDEST 
0x500: V382 = GT V381 S2
0x501: V383 = ISZERO V382
0x502: V384 = 0x518
0x505: JUMPI 0x518 V383
---
Entry stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, V365, S2, S1, V381]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, V365, S2, S1, V381]

================================

Block 0x506
[0x506:0x517]
---
Predecessors: [0x4fd]
Successors: [0x4fd]
---
0x506 DUP3
0x507 MLOAD
0x508 DUP3
0x509 SSTORE
0x50a SWAP2
0x50b PUSH1 0x20
0x50d ADD
0x50e SWAP2
0x50f SWAP1
0x510 PUSH1 0x1
0x512 ADD
0x513 SWAP1
0x514 PUSH2 0x4fd
0x517 JUMP
---
0x507: V385 = M[S2]
0x509: S[S1] = V385
0x50b: V386 = 0x20
0x50d: V387 = ADD 0x20 S2
0x510: V388 = 0x1
0x512: V389 = ADD 0x1 S1
0x514: V390 = 0x4fd
0x517: JUMP 0x4fd
---
Entry stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, V365, S2, S1, V381]
Stack pops: 3
Stack additions: [V387, V389, S0]
Exit stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, V365, V387, V389, V381]

================================

Block 0x518
[0x518:0x523]
---
Predecessors: [0x4db, 0x4eb, 0x4fd]
Successors: [0x528]
---
0x518 JUMPDEST
0x519 POP
0x51a PUSH2 0x524
0x51d SWAP3
0x51e SWAP2
0x51f POP
0x520 PUSH2 0x528
0x523 JUMP
---
0x518: JUMPDEST 
0x51a: V391 = 0x524
0x520: V392 = 0x528
0x523: JUMP 0x528
---
Entry stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, V365, S2, S1, S0]
Stack pops: 4
Stack additions: [0x524, S3, S1]
Exit stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, 0x524, V365, S1]

================================

Block 0x524
[0x524:0x527]
---
Predecessors: [0x52e, 0x542]
Successors: [0x77, 0x3a2, 0x452, 0x542]
---
0x524 JUMPDEST
0x525 POP
0x526 SWAP1
0x527 JUMP
---
0x524: JUMPDEST 
0x527: JUMP {0x77, 0x3a2, 0x452, 0x542}
---
Entry stack: [V11, 0x77, S7, S6, {0x77, 0x3a2, 0x452}, S4, S3, {0x77, 0x3a2, 0x452, 0x542}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x77, S7, S6, {0x77, 0x3a2, 0x452}, S4, S3, S1]

================================

Block 0x528
[0x528:0x52d]
---
Predecessors: [0x518]
Successors: [0x52e]
---
0x528 JUMPDEST
0x529 PUSH2 0x542
0x52c SWAP2
0x52d SWAP1
---
0x528: JUMPDEST 
0x529: V393 = 0x542
---
Entry stack: [V11, 0x77, S6, S5, {0x3a2, 0x452}, 0x0, 0x524, V365, S0]
Stack pops: 2
Stack additions: [0x542, S1, S0]
Exit stack: [V11, 0x77, S6, S5, {0x3a2, 0x452}, 0x0, 0x524, 0x542, V365, S0]

================================

Block 0x52e
[0x52e:0x536]
---
Predecessors: [0x528, 0x537]
Successors: [0x524, 0x537]
---
0x52e JUMPDEST
0x52f DUP1
0x530 DUP3
0x531 GT
0x532 ISZERO
0x533 PUSH2 0x524
0x536 JUMPI
---
0x52e: JUMPDEST 
0x531: V394 = GT V365 S0
0x532: V395 = ISZERO V394
0x533: V396 = 0x524
0x536: JUMPI 0x524 V395
---
Entry stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, 0x524, 0x542, V365, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, 0x524, 0x542, V365, S0]

================================

Block 0x537
[0x537:0x541]
---
Predecessors: [0x52e]
Successors: [0x52e]
---
0x537 PUSH1 0x0
0x539 DUP2
0x53a SSTORE
0x53b PUSH1 0x1
0x53d ADD
0x53e PUSH2 0x52e
0x541 JUMP
---
0x537: V397 = 0x0
0x53a: S[S0] = 0x0
0x53b: V398 = 0x1
0x53d: V399 = ADD 0x1 S0
0x53e: V400 = 0x52e
0x541: JUMP 0x52e
---
Entry stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, 0x524, 0x542, V365, S0]
Stack pops: 1
Stack additions: [V399]
Exit stack: [V11, 0x77, S7, S6, {0x3a2, 0x452}, 0x0, 0x524, 0x542, V365, V399]

================================

Block 0x542
[0x542:0x544]
---
Predecessors: [0x524]
Successors: [0x524]
---
0x542 JUMPDEST
0x543 SWAP1
0x544 JUMP
---
0x542: JUMPDEST 
0x544: JUMP S1
---
Entry stack: [V11, 0x77, S5, S4, {0x77, 0x3a2, 0x452}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x77, S5, S4, {0x77, 0x3a2, 0x452}, S2, S0]

================================

Block 0x545
[0x545:0x570]
---
Predecessors: []
Successors: []
---
0x545 STOP
0x546 LOG1
0x547 PUSH6 0x627a7a723058
0x54e SHA3
0x54f PUSH7 0x5fb35f1edf46e7
0x557 PUSH20 0x3f8c5e04bcb84693454fc68f8d219ea02028a455
0x56c DUP6
0x56d MISSING 0x25
0x56e MISSING 0x4d
0x56f STOP
0x570 MISSING 0x29
---
0x545: STOP 
0x546: LOG S0 S1 S2
0x547: V401 = 0x627a7a723058
0x54e: V402 = SHA3 0x627a7a723058 S3
0x54f: V403 = 0x5fb35f1edf46e7
0x557: V404 = 0x3f8c5e04bcb84693454fc68f8d219ea02028a455
0x56d: MISSING 0x25
0x56e: MISSING 0x4d
0x56f: STOP 
0x570: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, 0x3f8c5e04bcb84693454fc68f8d219ea02028a455, 0x5fb35f1edf46e7, V402, S4, S5, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0x3e8c9176
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x224, 0x22c, 0x230, 0x259, 0x265, 0x26b, 0x28e, 0x297, 0x299

Function 1:
Public function signature: 0x47247fb2
Entry block: 0x8c
Exit block: 0x108
Body: 0x8c, 0x94, 0x98, 0xa1, 0xc3, 0xcc, 0xdb, 0xef, 0x108, 0x29d, 0x2dd, 0x2e5, 0x2f8, 0x306, 0x31a, 0x323

Function 2:
Public function signature: 0x50d17565
Entry block: 0x116
Exit block: 0x77
Body: 0x77, 0x116, 0x299, 0x32b, 0x335, 0x345, 0x34e, 0x364, 0x3a2, 0x452

Function 3:
Public function signature: 0x79524f76
Entry block: 0x1a0
Exit block: 0x77
Body: 0x77, 0x1a0, 0x1a8, 0x1ac, 0x3c6, 0x3e7, 0x41c

Function 4:
Public function signature: 0x823ded43
Entry block: 0x1ce
Exit block: 0x77
Body: 0x77, 0x1ce, 0x299, 0x3a2, 0x41f, 0x440, 0x452

Function 5:
Public function signature: 0xd378e45c
Entry block: 0x21c
Exit block: 0x77
Body: 0x77, 0x21c, 0x41c, 0x459, 0x479, 0x47d, 0x4a1

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x4aa
Exit block: 0x524
Body: 0x4aa, 0x4db, 0x4eb, 0x4fa, 0x4fd, 0x506, 0x518, 0x524, 0x528, 0x52e, 0x537, 0x542

