Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0]
Successors: [0x1a, 0xcf]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0xcf
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0xcf
0x19: JUMPI 0xcf V8
---
Entry stack: [V2]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x2a]
---
Predecessors: [0x10]
Successors: [0x2b, 0x8c]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH1 0xe0
0x1f SHR
0x20 DUP1
0x21 PUSH4 0x313ce567
0x26 GT
0x27 PUSH2 0x8c
0x2a JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0xe0
0x1f: V13 = SHR 0xe0 V11
0x21: V14 = 0x313ce567
0x26: V15 = GT 0x313ce567 V13
0x27: V16 = 0x8c
0x2a: JUMPI 0x8c V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x2b
[0x2b:0x35]
---
Predecessors: [0x1a]
Successors: [0x36, 0x66]
---
0x2b DUP1
0x2c PUSH4 0x95d89b41
0x31 GT
0x32 PUSH2 0x66
0x35 JUMPI
---
0x2c: V17 = 0x95d89b41
0x31: V18 = GT 0x95d89b41 V13
0x32: V19 = 0x66
0x35: JUMPI 0x66 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x36
[0x36:0x40]
---
Predecessors: [0x2b]
Successors: [0x41, 0x385]
---
0x36 DUP1
0x37 PUSH4 0x95d89b41
0x3c EQ
0x3d PUSH2 0x385
0x40 JUMPI
---
0x37: V20 = 0x95d89b41
0x3c: V21 = EQ 0x95d89b41 V13
0x3d: V22 = 0x385
0x40: JUMPI 0x385 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0x36]
Successors: [0x4c, 0x408]
---
0x41 DUP1
0x42 PUSH4 0xa457c2d7
0x47 EQ
0x48 PUSH2 0x408
0x4b JUMPI
---
0x42: V23 = 0xa457c2d7
0x47: V24 = EQ 0xa457c2d7 V13
0x48: V25 = 0x408
0x4b: JUMPI 0x408 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x46e]
---
0x4c DUP1
0x4d PUSH4 0xa9059cbb
0x52 EQ
0x53 PUSH2 0x46e
0x56 JUMPI
---
0x4d: V26 = 0xa9059cbb
0x52: V27 = EQ 0xa9059cbb V13
0x53: V28 = 0x46e
0x56: JUMPI 0x46e V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x4d4]
---
0x57 DUP1
0x58 PUSH4 0xdd62ed3e
0x5d EQ
0x5e PUSH2 0x4d4
0x61 JUMPI
---
0x58: V29 = 0xdd62ed3e
0x5d: V30 = EQ 0xdd62ed3e V13
0x5e: V31 = 0x4d4
0x61: JUMPI 0x4d4 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x62
[0x62:0x65]
---
Predecessors: [0x57]
Successors: [0xcf]
---
0x62 PUSH2 0xcf
0x65 JUMP
---
0x62: V32 = 0xcf
0x65: JUMP 0xcf
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x66
[0x66:0x71]
---
Predecessors: [0x2b]
Successors: [0x72, 0x2a3]
---
0x66 JUMPDEST
0x67 DUP1
0x68 PUSH4 0x313ce567
0x6d EQ
0x6e PUSH2 0x2a3
0x71 JUMPI
---
0x66: JUMPDEST 
0x68: V33 = 0x313ce567
0x6d: V34 = EQ 0x313ce567 V13
0x6e: V35 = 0x2a3
0x71: JUMPI 0x2a3 V34
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x66]
Successors: [0x7d, 0x2c7]
---
0x72 DUP1
0x73 PUSH4 0x39509351
0x78 EQ
0x79 PUSH2 0x2c7
0x7c JUMPI
---
0x73: V36 = 0x39509351
0x78: V37 = EQ 0x39509351 V13
0x79: V38 = 0x2c7
0x7c: JUMPI 0x2c7 V37
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x32d]
---
0x7d DUP1
0x7e PUSH4 0x70a08231
0x83 EQ
0x84 PUSH2 0x32d
0x87 JUMPI
---
0x7e: V39 = 0x70a08231
0x83: V40 = EQ 0x70a08231 V13
0x84: V41 = 0x32d
0x87: JUMPI 0x32d V40
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x7d]
Successors: [0xcf]
---
0x88 PUSH2 0xcf
0x8b JUMP
---
0x88: V42 = 0xcf
0x8b: JUMP 0xcf
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x8c
[0x8c:0x97]
---
Predecessors: [0x1a]
Successors: [0x98, 0xd4]
---
0x8c JUMPDEST
0x8d DUP1
0x8e PUSH4 0x6fdde03
0x93 EQ
0x94 PUSH2 0xd4
0x97 JUMPI
---
0x8c: JUMPDEST 
0x8e: V43 = 0x6fdde03
0x93: V44 = EQ 0x6fdde03 V13
0x94: V45 = 0xd4
0x97: JUMPI 0xd4 V44
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8c]
Successors: [0xa3, 0x157]
---
0x98 DUP1
0x99 PUSH4 0x95ea7b3
0x9e EQ
0x9f PUSH2 0x157
0xa2 JUMPI
---
0x99: V46 = 0x95ea7b3
0x9e: V47 = EQ 0x95ea7b3 V13
0x9f: V48 = 0x157
0xa2: JUMPI 0x157 V47
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x1bd]
---
0xa3 DUP1
0xa4 PUSH4 0x18160ddd
0xa9 EQ
0xaa PUSH2 0x1bd
0xad JUMPI
---
0xa4: V49 = 0x18160ddd
0xa9: V50 = EQ 0x18160ddd V13
0xaa: V51 = 0x1bd
0xad: JUMPI 0x1bd V50
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x1db]
---
0xae DUP1
0xaf PUSH4 0x23b872dd
0xb4 EQ
0xb5 PUSH2 0x1db
0xb8 JUMPI
---
0xaf: V52 = 0x23b872dd
0xb4: V53 = EQ 0x23b872dd V13
0xb5: V54 = 0x1db
0xb8: JUMPI 0x1db V53
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x261]
---
0xb9 DUP1
0xba PUSH4 0x2e0f2625
0xbf EQ
0xc0 PUSH2 0x261
0xc3 JUMPI
---
0xba: V55 = 0x2e0f2625
0xbf: V56 = EQ 0x2e0f2625 V13
0xc0: V57 = 0x261
0xc3: JUMPI 0x261 V56
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x285]
---
0xc4 DUP1
0xc5 PUSH4 0x2ff2e9dc
0xca EQ
0xcb PUSH2 0x285
0xce JUMPI
---
0xc5: V58 = 0x2ff2e9dc
0xca: V59 = EQ 0x2ff2e9dc V13
0xcb: V60 = 0x285
0xce: JUMPI 0x285 V59
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcf
[0xcf:0xd3]
---
Predecessors: [0x10, 0x62, 0x88, 0xc4]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xcf: JUMPDEST 
0xd0: V61 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd4
[0xd4:0xdb]
---
Predecessors: [0x8c]
Successors: [0x54c]
---
0xd4 JUMPDEST
0xd5 PUSH2 0xdc
0xd8 PUSH2 0x54c
0xdb JUMP
---
0xd4: JUMPDEST 
0xd5: V62 = 0xdc
0xd8: V63 = 0x54c
0xdb: JUMP 0x54c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xdc]
Exit stack: [V13, 0xdc]

================================

Block 0xdc
[0xdc:0x100]
---
Predecessors: [0x5e4]
Successors: [0x101]
---
0xdc JUMPDEST
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 DUP1
0xe1 DUP1
0xe2 PUSH1 0x20
0xe4 ADD
0xe5 DUP3
0xe6 DUP2
0xe7 SUB
0xe8 DUP3
0xe9 MSTORE
0xea DUP4
0xeb DUP2
0xec DUP2
0xed MLOAD
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP2
0xf4 POP
0xf5 DUP1
0xf6 MLOAD
0xf7 SWAP1
0xf8 PUSH1 0x20
0xfa ADD
0xfb SWAP1
0xfc DUP1
0xfd DUP4
0xfe DUP4
0xff PUSH1 0x0
---
0xdc: JUMPDEST 
0xdd: V64 = 0x40
0xdf: V65 = M[0x40]
0xe2: V66 = 0x20
0xe4: V67 = ADD 0x20 V65
0xe7: V68 = SUB V67 V65
0xe9: M[V65] = V68
0xed: V69 = M[V419]
0xef: M[V67] = V69
0xf0: V70 = 0x20
0xf2: V71 = ADD 0x20 V67
0xf6: V72 = M[V419]
0xf8: V73 = 0x20
0xfa: V74 = ADD 0x20 V419
0xff: V75 = 0x0
---
Entry stack: [V13, V419]
Stack pops: 1
Stack additions: [S0, V65, V65, V71, V74, V72, V72, V71, V74, 0x0]
Exit stack: [V13, V419, V65, V65, V71, V74, V72, V72, V71, V74, 0x0]

================================

Block 0x101
[0x101:0x109]
---
Predecessors: [0xdc, 0x10a]
Successors: [0x10a, 0x11c]
---
0x101 JUMPDEST
0x102 DUP4
0x103 DUP2
0x104 LT
0x105 ISZERO
0x106 PUSH2 0x11c
0x109 JUMPI
---
0x101: JUMPDEST 
0x104: V76 = LT S0 V72
0x105: V77 = ISZERO V76
0x106: V78 = 0x11c
0x109: JUMPI 0x11c V77
---
Entry stack: [V13, V419, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, V419, V65, V65, V71, V74, V72, V72, V71, V74, S0]

================================

Block 0x10a
[0x10a:0x11b]
---
Predecessors: [0x101]
Successors: [0x101]
---
0x10a DUP1
0x10b DUP3
0x10c ADD
0x10d MLOAD
0x10e DUP2
0x10f DUP5
0x110 ADD
0x111 MSTORE
0x112 PUSH1 0x20
0x114 DUP2
0x115 ADD
0x116 SWAP1
0x117 POP
0x118 PUSH2 0x101
0x11b JUMP
---
0x10c: V79 = ADD V74 S0
0x10d: V80 = M[V79]
0x110: V81 = ADD V71 S0
0x111: M[V81] = V80
0x112: V82 = 0x20
0x115: V83 = ADD S0 0x20
0x118: V84 = 0x101
0x11b: JUMP 0x101
---
Entry stack: [V13, V419, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 3
Stack additions: [S2, S1, V83]
Exit stack: [V13, V419, V65, V65, V71, V74, V72, V72, V71, V74, V83]

================================

Block 0x11c
[0x11c:0x12f]
---
Predecessors: [0x101]
Successors: [0x130, 0x149]
---
0x11c JUMPDEST
0x11d POP
0x11e POP
0x11f POP
0x120 POP
0x121 SWAP1
0x122 POP
0x123 SWAP1
0x124 DUP2
0x125 ADD
0x126 SWAP1
0x127 PUSH1 0x1f
0x129 AND
0x12a DUP1
0x12b ISZERO
0x12c PUSH2 0x149
0x12f JUMPI
---
0x11c: JUMPDEST 
0x125: V85 = ADD V72 V71
0x127: V86 = 0x1f
0x129: V87 = AND 0x1f V72
0x12b: V88 = ISZERO V87
0x12c: V89 = 0x149
0x12f: JUMPI 0x149 V88
---
Entry stack: [V13, V419, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 7
Stack additions: [V85, V87]
Exit stack: [V13, V419, V65, V65, V85, V87]

================================

Block 0x130
[0x130:0x148]
---
Predecessors: [0x11c]
Successors: [0x149]
---
0x130 DUP1
0x131 DUP3
0x132 SUB
0x133 DUP1
0x134 MLOAD
0x135 PUSH1 0x1
0x137 DUP4
0x138 PUSH1 0x20
0x13a SUB
0x13b PUSH2 0x100
0x13e EXP
0x13f SUB
0x140 NOT
0x141 AND
0x142 DUP2
0x143 MSTORE
0x144 PUSH1 0x20
0x146 ADD
0x147 SWAP2
0x148 POP
---
0x132: V90 = SUB V85 V87
0x134: V91 = M[V90]
0x135: V92 = 0x1
0x138: V93 = 0x20
0x13a: V94 = SUB 0x20 V87
0x13b: V95 = 0x100
0x13e: V96 = EXP 0x100 V94
0x13f: V97 = SUB V96 0x1
0x140: V98 = NOT V97
0x141: V99 = AND V98 V91
0x143: M[V90] = V99
0x144: V100 = 0x20
0x146: V101 = ADD 0x20 V90
---
Entry stack: [V13, V419, V65, V65, V85, V87]
Stack pops: 2
Stack additions: [V101, S0]
Exit stack: [V13, V419, V65, V65, V101, V87]

================================

Block 0x149
[0x149:0x156]
---
Predecessors: [0x11c, 0x130]
Successors: []
---
0x149 JUMPDEST
0x14a POP
0x14b SWAP3
0x14c POP
0x14d POP
0x14e POP
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 SWAP2
0x154 SUB
0x155 SWAP1
0x156 RETURN
---
0x149: JUMPDEST 
0x14f: V102 = 0x40
0x151: V103 = M[0x40]
0x154: V104 = SUB S1 V103
0x156: RETURN V103 V104
---
Entry stack: [V13, V419, V65, V65, S1, V87]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x157
[0x157:0x168]
---
Predecessors: [0x98]
Successors: [0x169, 0x16d]
---
0x157 JUMPDEST
0x158 PUSH2 0x1a3
0x15b PUSH1 0x4
0x15d DUP1
0x15e CALLDATASIZE
0x15f SUB
0x160 PUSH1 0x40
0x162 DUP2
0x163 LT
0x164 ISZERO
0x165 PUSH2 0x16d
0x168 JUMPI
---
0x157: JUMPDEST 
0x158: V105 = 0x1a3
0x15b: V106 = 0x4
0x15e: V107 = CALLDATASIZE
0x15f: V108 = SUB V107 0x4
0x160: V109 = 0x40
0x163: V110 = LT V108 0x40
0x164: V111 = ISZERO V110
0x165: V112 = 0x16d
0x168: JUMPI 0x16d V111
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a3, 0x4, V108]
Exit stack: [V13, 0x1a3, 0x4, V108]

================================

Block 0x169
[0x169:0x16c]
---
Predecessors: [0x157]
Successors: []
---
0x169 PUSH1 0x0
0x16b DUP1
0x16c REVERT
---
0x169: V113 = 0x0
0x16c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a3, 0x4, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a3, 0x4, V108]

================================

Block 0x16d
[0x16d:0x1a2]
---
Predecessors: [0x157]
Successors: [0x5ee]
---
0x16d JUMPDEST
0x16e DUP2
0x16f ADD
0x170 SWAP1
0x171 DUP1
0x172 DUP1
0x173 CALLDATALOAD
0x174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x189 AND
0x18a SWAP1
0x18b PUSH1 0x20
0x18d ADD
0x18e SWAP1
0x18f SWAP3
0x190 SWAP2
0x191 SWAP1
0x192 DUP1
0x193 CALLDATALOAD
0x194 SWAP1
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP1
0x199 SWAP3
0x19a SWAP2
0x19b SWAP1
0x19c POP
0x19d POP
0x19e POP
0x19f PUSH2 0x5ee
0x1a2 JUMP
---
0x16d: JUMPDEST 
0x16f: V114 = ADD 0x4 V108
0x173: V115 = CALLDATALOAD 0x4
0x174: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x189: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x18b: V118 = 0x20
0x18d: V119 = ADD 0x20 0x4
0x193: V120 = CALLDATALOAD 0x24
0x195: V121 = 0x20
0x197: V122 = ADD 0x20 0x24
0x19f: V123 = 0x5ee
0x1a2: JUMP 0x5ee
---
Entry stack: [V13, 0x1a3, 0x4, V108]
Stack pops: 2
Stack additions: [V117, V120]
Exit stack: [V13, 0x1a3, V117, V120]

================================

Block 0x1a3
[0x1a3:0x1bc]
---
Predecessors: [0x5fb, 0x789, 0x918]
Successors: []
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 DUP1
0x1a8 DUP3
0x1a9 ISZERO
0x1aa ISZERO
0x1ab ISZERO
0x1ac ISZERO
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP2
0x1b3 POP
0x1b4 POP
0x1b5 PUSH1 0x40
0x1b7 MLOAD
0x1b8 DUP1
0x1b9 SWAP2
0x1ba SUB
0x1bb SWAP1
0x1bc RETURN
---
0x1a3: JUMPDEST 
0x1a4: V124 = 0x40
0x1a6: V125 = M[0x40]
0x1a9: V126 = ISZERO 0x1
0x1aa: V127 = ISZERO 0x0
0x1ab: V128 = ISZERO 0x1
0x1ac: V129 = ISZERO 0x0
0x1ae: M[V125] = 0x1
0x1af: V130 = 0x20
0x1b1: V131 = ADD 0x20 V125
0x1b5: V132 = 0x40
0x1b7: V133 = M[0x40]
0x1ba: V134 = SUB V131 V133
0x1bc: RETURN V133 V134
---
Entry stack: [V13, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x1bd
[0x1bd:0x1c4]
---
Predecessors: [0xa3]
Successors: [0x605]
---
0x1bd JUMPDEST
0x1be PUSH2 0x1c5
0x1c1 PUSH2 0x605
0x1c4 JUMP
---
0x1bd: JUMPDEST 
0x1be: V135 = 0x1c5
0x1c1: V136 = 0x605
0x1c4: JUMP 0x605
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1c5]
Exit stack: [V13, 0x1c5]

================================

Block 0x1c5
[0x1c5:0x1da]
---
Predecessors: [0x605]
Successors: []
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x40
0x1c8 MLOAD
0x1c9 DUP1
0x1ca DUP3
0x1cb DUP2
0x1cc MSTORE
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 SWAP2
0x1d1 POP
0x1d2 POP
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 DUP1
0x1d7 SWAP2
0x1d8 SUB
0x1d9 SWAP1
0x1da RETURN
---
0x1c5: JUMPDEST 
0x1c6: V137 = 0x40
0x1c8: V138 = M[0x40]
0x1cc: M[V138] = V470
0x1cd: V139 = 0x20
0x1cf: V140 = ADD 0x20 V138
0x1d3: V141 = 0x40
0x1d5: V142 = M[0x40]
0x1d8: V143 = SUB V140 V142
0x1da: RETURN V142 V143
---
Entry stack: [V13, V470]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1db
[0x1db:0x1ec]
---
Predecessors: [0xae]
Successors: [0x1ed, 0x1f1]
---
0x1db JUMPDEST
0x1dc PUSH2 0x247
0x1df PUSH1 0x4
0x1e1 DUP1
0x1e2 CALLDATASIZE
0x1e3 SUB
0x1e4 PUSH1 0x60
0x1e6 DUP2
0x1e7 LT
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1db: JUMPDEST 
0x1dc: V144 = 0x247
0x1df: V145 = 0x4
0x1e2: V146 = CALLDATASIZE
0x1e3: V147 = SUB V146 0x4
0x1e4: V148 = 0x60
0x1e7: V149 = LT V147 0x60
0x1e8: V150 = ISZERO V149
0x1e9: V151 = 0x1f1
0x1ec: JUMPI 0x1f1 V150
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x247, 0x4, V147]
Exit stack: [V13, 0x247, 0x4, V147]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1db]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V152 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x247, 0x4, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x247, 0x4, V147]

================================

Block 0x1f1
[0x1f1:0x246]
---
Predecessors: [0x1db]
Successors: [0x60f]
---
0x1f1 JUMPDEST
0x1f2 DUP2
0x1f3 ADD
0x1f4 SWAP1
0x1f5 DUP1
0x1f6 DUP1
0x1f7 CALLDATALOAD
0x1f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20d AND
0x20e SWAP1
0x20f PUSH1 0x20
0x211 ADD
0x212 SWAP1
0x213 SWAP3
0x214 SWAP2
0x215 SWAP1
0x216 DUP1
0x217 CALLDATALOAD
0x218 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22d AND
0x22e SWAP1
0x22f PUSH1 0x20
0x231 ADD
0x232 SWAP1
0x233 SWAP3
0x234 SWAP2
0x235 SWAP1
0x236 DUP1
0x237 CALLDATALOAD
0x238 SWAP1
0x239 PUSH1 0x20
0x23b ADD
0x23c SWAP1
0x23d SWAP3
0x23e SWAP2
0x23f SWAP1
0x240 POP
0x241 POP
0x242 POP
0x243 PUSH2 0x60f
0x246 JUMP
---
0x1f1: JUMPDEST 
0x1f3: V153 = ADD 0x4 V147
0x1f7: V154 = CALLDATALOAD 0x4
0x1f8: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x20f: V157 = 0x20
0x211: V158 = ADD 0x20 0x4
0x217: V159 = CALLDATALOAD 0x24
0x218: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x22f: V162 = 0x20
0x231: V163 = ADD 0x20 0x24
0x237: V164 = CALLDATALOAD 0x44
0x239: V165 = 0x20
0x23b: V166 = ADD 0x20 0x44
0x243: V167 = 0x60f
0x246: JUMP 0x60f
---
Entry stack: [V13, 0x247, 0x4, V147]
Stack pops: 2
Stack additions: [V156, V161, V164]
Exit stack: [V13, 0x247, V156, V161, V164]

================================

Block 0x247
[0x247:0x260]
---
Predecessors: [0x6b5]
Successors: []
---
0x247 JUMPDEST
0x248 PUSH1 0x40
0x24a MLOAD
0x24b DUP1
0x24c DUP3
0x24d ISZERO
0x24e ISZERO
0x24f ISZERO
0x250 ISZERO
0x251 DUP2
0x252 MSTORE
0x253 PUSH1 0x20
0x255 ADD
0x256 SWAP2
0x257 POP
0x258 POP
0x259 PUSH1 0x40
0x25b MLOAD
0x25c DUP1
0x25d SWAP2
0x25e SUB
0x25f SWAP1
0x260 RETURN
---
0x247: JUMPDEST 
0x248: V168 = 0x40
0x24a: V169 = M[0x40]
0x24d: V170 = ISZERO 0x1
0x24e: V171 = ISZERO 0x0
0x24f: V172 = ISZERO 0x1
0x250: V173 = ISZERO 0x0
0x252: M[V169] = 0x1
0x253: V174 = 0x20
0x255: V175 = ADD 0x20 V169
0x259: V176 = 0x40
0x25b: V177 = M[0x40]
0x25e: V178 = SUB V175 V177
0x260: RETURN V177 V178
---
Entry stack: [V13, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x261
[0x261:0x268]
---
Predecessors: [0xb9]
Successors: [0x6c0]
---
0x261 JUMPDEST
0x262 PUSH2 0x269
0x265 PUSH2 0x6c0
0x268 JUMP
---
0x261: JUMPDEST 
0x262: V179 = 0x269
0x265: V180 = 0x6c0
0x268: JUMP 0x6c0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x269]
Exit stack: [V13, 0x269]

================================

Block 0x269
[0x269:0x284]
---
Predecessors: [0x6c0]
Successors: []
---
0x269 JUMPDEST
0x26a PUSH1 0x40
0x26c MLOAD
0x26d DUP1
0x26e DUP3
0x26f PUSH1 0xff
0x271 AND
0x272 PUSH1 0xff
0x274 AND
0x275 DUP2
0x276 MSTORE
0x277 PUSH1 0x20
0x279 ADD
0x27a SWAP2
0x27b POP
0x27c POP
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 SWAP2
0x282 SUB
0x283 SWAP1
0x284 RETURN
---
0x269: JUMPDEST 
0x26a: V181 = 0x40
0x26c: V182 = M[0x40]
0x26f: V183 = 0xff
0x271: V184 = AND 0xff 0x12
0x272: V185 = 0xff
0x274: V186 = AND 0xff 0x12
0x276: M[V182] = 0x12
0x277: V187 = 0x20
0x279: V188 = ADD 0x20 V182
0x27d: V189 = 0x40
0x27f: V190 = M[0x40]
0x282: V191 = SUB V188 V190
0x284: RETURN V190 V191
---
Entry stack: [V13, 0x269, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x269]

================================

Block 0x285
[0x285:0x28c]
---
Predecessors: [0xc4]
Successors: [0x6c5]
---
0x285 JUMPDEST
0x286 PUSH2 0x28d
0x289 PUSH2 0x6c5
0x28c JUMP
---
0x285: JUMPDEST 
0x286: V192 = 0x28d
0x289: V193 = 0x6c5
0x28c: JUMP 0x6c5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x28d]
Exit stack: [V13, 0x28d]

================================

Block 0x28d
[0x28d:0x2a2]
---
Predecessors: [0x6c5]
Successors: []
---
0x28d JUMPDEST
0x28e PUSH1 0x40
0x290 MLOAD
0x291 DUP1
0x292 DUP3
0x293 DUP2
0x294 MSTORE
0x295 PUSH1 0x20
0x297 ADD
0x298 SWAP2
0x299 POP
0x29a POP
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f SWAP2
0x2a0 SUB
0x2a1 SWAP1
0x2a2 RETURN
---
0x28d: JUMPDEST 
0x28e: V194 = 0x40
0x290: V195 = M[0x40]
0x294: M[V195] = 0x2a68bedbb190931f650000000
0x295: V196 = 0x20
0x297: V197 = ADD 0x20 V195
0x29b: V198 = 0x40
0x29d: V199 = M[0x40]
0x2a0: V200 = SUB V197 V199
0x2a2: RETURN V199 V200
---
Entry stack: [V13, 0x28d, 0x2a68bedbb190931f650000000]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x28d]

================================

Block 0x2a3
[0x2a3:0x2aa]
---
Predecessors: [0x66]
Successors: [0x6d7]
---
0x2a3 JUMPDEST
0x2a4 PUSH2 0x2ab
0x2a7 PUSH2 0x6d7
0x2aa JUMP
---
0x2a3: JUMPDEST 
0x2a4: V201 = 0x2ab
0x2a7: V202 = 0x6d7
0x2aa: JUMP 0x6d7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2ab]
Exit stack: [V13, 0x2ab]

================================

Block 0x2ab
[0x2ab:0x2c6]
---
Predecessors: [0x6d7]
Successors: []
---
0x2ab JUMPDEST
0x2ac PUSH1 0x40
0x2ae MLOAD
0x2af DUP1
0x2b0 DUP3
0x2b1 PUSH1 0xff
0x2b3 AND
0x2b4 PUSH1 0xff
0x2b6 AND
0x2b7 DUP2
0x2b8 MSTORE
0x2b9 PUSH1 0x20
0x2bb ADD
0x2bc SWAP2
0x2bd POP
0x2be POP
0x2bf PUSH1 0x40
0x2c1 MLOAD
0x2c2 DUP1
0x2c3 SWAP2
0x2c4 SUB
0x2c5 SWAP1
0x2c6 RETURN
---
0x2ab: JUMPDEST 
0x2ac: V203 = 0x40
0x2ae: V204 = M[0x40]
0x2b1: V205 = 0xff
0x2b3: V206 = AND 0xff V523
0x2b4: V207 = 0xff
0x2b6: V208 = AND 0xff V206
0x2b8: M[V204] = V208
0x2b9: V209 = 0x20
0x2bb: V210 = ADD 0x20 V204
0x2bf: V211 = 0x40
0x2c1: V212 = M[0x40]
0x2c4: V213 = SUB V210 V212
0x2c6: RETURN V212 V213
---
Entry stack: [V13, V523]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x2c7
[0x2c7:0x2d8]
---
Predecessors: [0x72]
Successors: [0x2d9, 0x2dd]
---
0x2c7 JUMPDEST
0x2c8 PUSH2 0x313
0x2cb PUSH1 0x4
0x2cd DUP1
0x2ce CALLDATASIZE
0x2cf SUB
0x2d0 PUSH1 0x40
0x2d2 DUP2
0x2d3 LT
0x2d4 ISZERO
0x2d5 PUSH2 0x2dd
0x2d8 JUMPI
---
0x2c7: JUMPDEST 
0x2c8: V214 = 0x313
0x2cb: V215 = 0x4
0x2ce: V216 = CALLDATASIZE
0x2cf: V217 = SUB V216 0x4
0x2d0: V218 = 0x40
0x2d3: V219 = LT V217 0x40
0x2d4: V220 = ISZERO V219
0x2d5: V221 = 0x2dd
0x2d8: JUMPI 0x2dd V220
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x313, 0x4, V217]
Exit stack: [V13, 0x313, 0x4, V217]

================================

Block 0x2d9
[0x2d9:0x2dc]
---
Predecessors: [0x2c7]
Successors: []
---
0x2d9 PUSH1 0x0
0x2db DUP1
0x2dc REVERT
---
0x2d9: V222 = 0x0
0x2dc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x313, 0x4, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x313, 0x4, V217]

================================

Block 0x2dd
[0x2dd:0x312]
---
Predecessors: [0x2c7]
Successors: [0x6ee]
---
0x2dd JUMPDEST
0x2de DUP2
0x2df ADD
0x2e0 SWAP1
0x2e1 DUP1
0x2e2 DUP1
0x2e3 CALLDATALOAD
0x2e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f9 AND
0x2fa SWAP1
0x2fb PUSH1 0x20
0x2fd ADD
0x2fe SWAP1
0x2ff SWAP3
0x300 SWAP2
0x301 SWAP1
0x302 DUP1
0x303 CALLDATALOAD
0x304 SWAP1
0x305 PUSH1 0x20
0x307 ADD
0x308 SWAP1
0x309 SWAP3
0x30a SWAP2
0x30b SWAP1
0x30c POP
0x30d POP
0x30e POP
0x30f PUSH2 0x6ee
0x312 JUMP
---
0x2dd: JUMPDEST 
0x2df: V223 = ADD 0x4 V217
0x2e3: V224 = CALLDATALOAD 0x4
0x2e4: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x2fb: V227 = 0x20
0x2fd: V228 = ADD 0x20 0x4
0x303: V229 = CALLDATALOAD 0x24
0x305: V230 = 0x20
0x307: V231 = ADD 0x20 0x24
0x30f: V232 = 0x6ee
0x312: JUMP 0x6ee
---
Entry stack: [V13, 0x313, 0x4, V217]
Stack pops: 2
Stack additions: [V226, V229]
Exit stack: [V13, 0x313, V226, V229]

================================

Block 0x313
[0x313:0x32c]
---
Predecessors: [0x5fb, 0x789, 0x918]
Successors: []
---
0x313 JUMPDEST
0x314 PUSH1 0x40
0x316 MLOAD
0x317 DUP1
0x318 DUP3
0x319 ISZERO
0x31a ISZERO
0x31b ISZERO
0x31c ISZERO
0x31d DUP2
0x31e MSTORE
0x31f PUSH1 0x20
0x321 ADD
0x322 SWAP2
0x323 POP
0x324 POP
0x325 PUSH1 0x40
0x327 MLOAD
0x328 DUP1
0x329 SWAP2
0x32a SUB
0x32b SWAP1
0x32c RETURN
---
0x313: JUMPDEST 
0x314: V233 = 0x40
0x316: V234 = M[0x40]
0x319: V235 = ISZERO 0x1
0x31a: V236 = ISZERO 0x0
0x31b: V237 = ISZERO 0x1
0x31c: V238 = ISZERO 0x0
0x31e: M[V234] = 0x1
0x31f: V239 = 0x20
0x321: V240 = ADD 0x20 V234
0x325: V241 = 0x40
0x327: V242 = M[0x40]
0x32a: V243 = SUB V240 V242
0x32c: RETURN V242 V243
---
Entry stack: [V13, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x32d
[0x32d:0x33e]
---
Predecessors: [0x7d]
Successors: [0x33f, 0x343]
---
0x32d JUMPDEST
0x32e PUSH2 0x36f
0x331 PUSH1 0x4
0x333 DUP1
0x334 CALLDATASIZE
0x335 SUB
0x336 PUSH1 0x20
0x338 DUP2
0x339 LT
0x33a ISZERO
0x33b PUSH2 0x343
0x33e JUMPI
---
0x32d: JUMPDEST 
0x32e: V244 = 0x36f
0x331: V245 = 0x4
0x334: V246 = CALLDATASIZE
0x335: V247 = SUB V246 0x4
0x336: V248 = 0x20
0x339: V249 = LT V247 0x20
0x33a: V250 = ISZERO V249
0x33b: V251 = 0x343
0x33e: JUMPI 0x343 V250
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x36f, 0x4, V247]
Exit stack: [V13, 0x36f, 0x4, V247]

================================

Block 0x33f
[0x33f:0x342]
---
Predecessors: [0x32d]
Successors: []
---
0x33f PUSH1 0x0
0x341 DUP1
0x342 REVERT
---
0x33f: V252 = 0x0
0x342: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36f, 0x4, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36f, 0x4, V247]

================================

Block 0x343
[0x343:0x36e]
---
Predecessors: [0x32d]
Successors: [0x793]
---
0x343 JUMPDEST
0x344 DUP2
0x345 ADD
0x346 SWAP1
0x347 DUP1
0x348 DUP1
0x349 CALLDATALOAD
0x34a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35f AND
0x360 SWAP1
0x361 PUSH1 0x20
0x363 ADD
0x364 SWAP1
0x365 SWAP3
0x366 SWAP2
0x367 SWAP1
0x368 POP
0x369 POP
0x36a POP
0x36b PUSH2 0x793
0x36e JUMP
---
0x343: JUMPDEST 
0x345: V253 = ADD 0x4 V247
0x349: V254 = CALLDATALOAD 0x4
0x34a: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x35f: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x361: V257 = 0x20
0x363: V258 = ADD 0x20 0x4
0x36b: V259 = 0x793
0x36e: JUMP 0x793
---
Entry stack: [V13, 0x36f, 0x4, V247]
Stack pops: 2
Stack additions: [V256]
Exit stack: [V13, 0x36f, V256]

================================

Block 0x36f
[0x36f:0x384]
---
Predecessors: [0x793]
Successors: []
---
0x36f JUMPDEST
0x370 PUSH1 0x40
0x372 MLOAD
0x373 DUP1
0x374 DUP3
0x375 DUP2
0x376 MSTORE
0x377 PUSH1 0x20
0x379 ADD
0x37a SWAP2
0x37b POP
0x37c POP
0x37d PUSH1 0x40
0x37f MLOAD
0x380 DUP1
0x381 SWAP2
0x382 SUB
0x383 SWAP1
0x384 RETURN
---
0x36f: JUMPDEST 
0x370: V260 = 0x40
0x372: V261 = M[0x40]
0x376: M[V261] = V570
0x377: V262 = 0x20
0x379: V263 = ADD 0x20 V261
0x37d: V264 = 0x40
0x37f: V265 = M[0x40]
0x382: V266 = SUB V263 V265
0x384: RETURN V265 V266
---
Entry stack: [V13, V570]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x385
[0x385:0x38c]
---
Predecessors: [0x36]
Successors: [0x7db]
---
0x385 JUMPDEST
0x386 PUSH2 0x38d
0x389 PUSH2 0x7db
0x38c JUMP
---
0x385: JUMPDEST 
0x386: V267 = 0x38d
0x389: V268 = 0x7db
0x38c: JUMP 0x7db
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x38d]
Exit stack: [V13, 0x38d]

================================

Block 0x38d
[0x38d:0x3b1]
---
Predecessors: [0x873]
Successors: [0x3b2]
---
0x38d JUMPDEST
0x38e PUSH1 0x40
0x390 MLOAD
0x391 DUP1
0x392 DUP1
0x393 PUSH1 0x20
0x395 ADD
0x396 DUP3
0x397 DUP2
0x398 SUB
0x399 DUP3
0x39a MSTORE
0x39b DUP4
0x39c DUP2
0x39d DUP2
0x39e MLOAD
0x39f DUP2
0x3a0 MSTORE
0x3a1 PUSH1 0x20
0x3a3 ADD
0x3a4 SWAP2
0x3a5 POP
0x3a6 DUP1
0x3a7 MLOAD
0x3a8 SWAP1
0x3a9 PUSH1 0x20
0x3ab ADD
0x3ac SWAP1
0x3ad DUP1
0x3ae DUP4
0x3af DUP4
0x3b0 PUSH1 0x0
---
0x38d: JUMPDEST 
0x38e: V269 = 0x40
0x390: V270 = M[0x40]
0x393: V271 = 0x20
0x395: V272 = ADD 0x20 V270
0x398: V273 = SUB V272 V270
0x39a: M[V270] = V273
0x39e: V274 = M[V592]
0x3a0: M[V272] = V274
0x3a1: V275 = 0x20
0x3a3: V276 = ADD 0x20 V272
0x3a7: V277 = M[V592]
0x3a9: V278 = 0x20
0x3ab: V279 = ADD 0x20 V592
0x3b0: V280 = 0x0
---
Entry stack: [V13, V592]
Stack pops: 1
Stack additions: [S0, V270, V270, V276, V279, V277, V277, V276, V279, 0x0]
Exit stack: [V13, V592, V270, V270, V276, V279, V277, V277, V276, V279, 0x0]

================================

Block 0x3b2
[0x3b2:0x3ba]
---
Predecessors: [0x38d, 0x3bb]
Successors: [0x3bb, 0x3cd]
---
0x3b2 JUMPDEST
0x3b3 DUP4
0x3b4 DUP2
0x3b5 LT
0x3b6 ISZERO
0x3b7 PUSH2 0x3cd
0x3ba JUMPI
---
0x3b2: JUMPDEST 
0x3b5: V281 = LT S0 V277
0x3b6: V282 = ISZERO V281
0x3b7: V283 = 0x3cd
0x3ba: JUMPI 0x3cd V282
---
Entry stack: [V13, V592, V270, V270, V276, V279, V277, V277, V276, V279, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, V592, V270, V270, V276, V279, V277, V277, V276, V279, S0]

================================

Block 0x3bb
[0x3bb:0x3cc]
---
Predecessors: [0x3b2]
Successors: [0x3b2]
---
0x3bb DUP1
0x3bc DUP3
0x3bd ADD
0x3be MLOAD
0x3bf DUP2
0x3c0 DUP5
0x3c1 ADD
0x3c2 MSTORE
0x3c3 PUSH1 0x20
0x3c5 DUP2
0x3c6 ADD
0x3c7 SWAP1
0x3c8 POP
0x3c9 PUSH2 0x3b2
0x3cc JUMP
---
0x3bd: V284 = ADD V279 S0
0x3be: V285 = M[V284]
0x3c1: V286 = ADD V276 S0
0x3c2: M[V286] = V285
0x3c3: V287 = 0x20
0x3c6: V288 = ADD S0 0x20
0x3c9: V289 = 0x3b2
0x3cc: JUMP 0x3b2
---
Entry stack: [V13, V592, V270, V270, V276, V279, V277, V277, V276, V279, S0]
Stack pops: 3
Stack additions: [S2, S1, V288]
Exit stack: [V13, V592, V270, V270, V276, V279, V277, V277, V276, V279, V288]

================================

Block 0x3cd
[0x3cd:0x3e0]
---
Predecessors: [0x3b2]
Successors: [0x3e1, 0x3fa]
---
0x3cd JUMPDEST
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 SWAP1
0x3d3 POP
0x3d4 SWAP1
0x3d5 DUP2
0x3d6 ADD
0x3d7 SWAP1
0x3d8 PUSH1 0x1f
0x3da AND
0x3db DUP1
0x3dc ISZERO
0x3dd PUSH2 0x3fa
0x3e0 JUMPI
---
0x3cd: JUMPDEST 
0x3d6: V290 = ADD V277 V276
0x3d8: V291 = 0x1f
0x3da: V292 = AND 0x1f V277
0x3dc: V293 = ISZERO V292
0x3dd: V294 = 0x3fa
0x3e0: JUMPI 0x3fa V293
---
Entry stack: [V13, V592, V270, V270, V276, V279, V277, V277, V276, V279, S0]
Stack pops: 7
Stack additions: [V290, V292]
Exit stack: [V13, V592, V270, V270, V290, V292]

================================

Block 0x3e1
[0x3e1:0x3f9]
---
Predecessors: [0x3cd]
Successors: [0x3fa]
---
0x3e1 DUP1
0x3e2 DUP3
0x3e3 SUB
0x3e4 DUP1
0x3e5 MLOAD
0x3e6 PUSH1 0x1
0x3e8 DUP4
0x3e9 PUSH1 0x20
0x3eb SUB
0x3ec PUSH2 0x100
0x3ef EXP
0x3f0 SUB
0x3f1 NOT
0x3f2 AND
0x3f3 DUP2
0x3f4 MSTORE
0x3f5 PUSH1 0x20
0x3f7 ADD
0x3f8 SWAP2
0x3f9 POP
---
0x3e3: V295 = SUB V290 V292
0x3e5: V296 = M[V295]
0x3e6: V297 = 0x1
0x3e9: V298 = 0x20
0x3eb: V299 = SUB 0x20 V292
0x3ec: V300 = 0x100
0x3ef: V301 = EXP 0x100 V299
0x3f0: V302 = SUB V301 0x1
0x3f1: V303 = NOT V302
0x3f2: V304 = AND V303 V296
0x3f4: M[V295] = V304
0x3f5: V305 = 0x20
0x3f7: V306 = ADD 0x20 V295
---
Entry stack: [V13, V592, V270, V270, V290, V292]
Stack pops: 2
Stack additions: [V306, S0]
Exit stack: [V13, V592, V270, V270, V306, V292]

================================

Block 0x3fa
[0x3fa:0x407]
---
Predecessors: [0x3cd, 0x3e1]
Successors: []
---
0x3fa JUMPDEST
0x3fb POP
0x3fc SWAP3
0x3fd POP
0x3fe POP
0x3ff POP
0x400 PUSH1 0x40
0x402 MLOAD
0x403 DUP1
0x404 SWAP2
0x405 SUB
0x406 SWAP1
0x407 RETURN
---
0x3fa: JUMPDEST 
0x400: V307 = 0x40
0x402: V308 = M[0x40]
0x405: V309 = SUB S1 V308
0x407: RETURN V308 V309
---
Entry stack: [V13, V592, V270, V270, S1, V292]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x408
[0x408:0x419]
---
Predecessors: [0x41]
Successors: [0x41a, 0x41e]
---
0x408 JUMPDEST
0x409 PUSH2 0x454
0x40c PUSH1 0x4
0x40e DUP1
0x40f CALLDATASIZE
0x410 SUB
0x411 PUSH1 0x40
0x413 DUP2
0x414 LT
0x415 ISZERO
0x416 PUSH2 0x41e
0x419 JUMPI
---
0x408: JUMPDEST 
0x409: V310 = 0x454
0x40c: V311 = 0x4
0x40f: V312 = CALLDATASIZE
0x410: V313 = SUB V312 0x4
0x411: V314 = 0x40
0x414: V315 = LT V313 0x40
0x415: V316 = ISZERO V315
0x416: V317 = 0x41e
0x419: JUMPI 0x41e V316
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x454, 0x4, V313]
Exit stack: [V13, 0x454, 0x4, V313]

================================

Block 0x41a
[0x41a:0x41d]
---
Predecessors: [0x408]
Successors: []
---
0x41a PUSH1 0x0
0x41c DUP1
0x41d REVERT
---
0x41a: V318 = 0x0
0x41d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x454, 0x4, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x454, 0x4, V313]

================================

Block 0x41e
[0x41e:0x453]
---
Predecessors: [0x408]
Successors: [0x87d]
---
0x41e JUMPDEST
0x41f DUP2
0x420 ADD
0x421 SWAP1
0x422 DUP1
0x423 DUP1
0x424 CALLDATALOAD
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a AND
0x43b SWAP1
0x43c PUSH1 0x20
0x43e ADD
0x43f SWAP1
0x440 SWAP3
0x441 SWAP2
0x442 SWAP1
0x443 DUP1
0x444 CALLDATALOAD
0x445 SWAP1
0x446 PUSH1 0x20
0x448 ADD
0x449 SWAP1
0x44a SWAP3
0x44b SWAP2
0x44c SWAP1
0x44d POP
0x44e POP
0x44f POP
0x450 PUSH2 0x87d
0x453 JUMP
---
0x41e: JUMPDEST 
0x420: V319 = ADD 0x4 V313
0x424: V320 = CALLDATALOAD 0x4
0x425: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x43c: V323 = 0x20
0x43e: V324 = ADD 0x20 0x4
0x444: V325 = CALLDATALOAD 0x24
0x446: V326 = 0x20
0x448: V327 = ADD 0x20 0x24
0x450: V328 = 0x87d
0x453: JUMP 0x87d
---
Entry stack: [V13, 0x454, 0x4, V313]
Stack pops: 2
Stack additions: [V322, V325]
Exit stack: [V13, 0x454, V322, V325]

================================

Block 0x454
[0x454:0x46d]
---
Predecessors: [0x5fb, 0x789, 0x918]
Successors: []
---
0x454 JUMPDEST
0x455 PUSH1 0x40
0x457 MLOAD
0x458 DUP1
0x459 DUP3
0x45a ISZERO
0x45b ISZERO
0x45c ISZERO
0x45d ISZERO
0x45e DUP2
0x45f MSTORE
0x460 PUSH1 0x20
0x462 ADD
0x463 SWAP2
0x464 POP
0x465 POP
0x466 PUSH1 0x40
0x468 MLOAD
0x469 DUP1
0x46a SWAP2
0x46b SUB
0x46c SWAP1
0x46d RETURN
---
0x454: JUMPDEST 
0x455: V329 = 0x40
0x457: V330 = M[0x40]
0x45a: V331 = ISZERO 0x1
0x45b: V332 = ISZERO 0x0
0x45c: V333 = ISZERO 0x1
0x45d: V334 = ISZERO 0x0
0x45f: M[V330] = 0x1
0x460: V335 = 0x20
0x462: V336 = ADD 0x20 V330
0x466: V337 = 0x40
0x468: V338 = M[0x40]
0x46b: V339 = SUB V336 V338
0x46d: RETURN V338 V339
---
Entry stack: [V13, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x46e
[0x46e:0x47f]
---
Predecessors: [0x4c]
Successors: [0x480, 0x484]
---
0x46e JUMPDEST
0x46f PUSH2 0x4ba
0x472 PUSH1 0x4
0x474 DUP1
0x475 CALLDATASIZE
0x476 SUB
0x477 PUSH1 0x40
0x479 DUP2
0x47a LT
0x47b ISZERO
0x47c PUSH2 0x484
0x47f JUMPI
---
0x46e: JUMPDEST 
0x46f: V340 = 0x4ba
0x472: V341 = 0x4
0x475: V342 = CALLDATASIZE
0x476: V343 = SUB V342 0x4
0x477: V344 = 0x40
0x47a: V345 = LT V343 0x40
0x47b: V346 = ISZERO V345
0x47c: V347 = 0x484
0x47f: JUMPI 0x484 V346
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x4ba, 0x4, V343]
Exit stack: [V13, 0x4ba, 0x4, V343]

================================

Block 0x480
[0x480:0x483]
---
Predecessors: [0x46e]
Successors: []
---
0x480 PUSH1 0x0
0x482 DUP1
0x483 REVERT
---
0x480: V348 = 0x0
0x483: REVERT 0x0 0x0
---
Entry stack: [V13, 0x4ba, 0x4, V343]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x4ba, 0x4, V343]

================================

Block 0x484
[0x484:0x4b9]
---
Predecessors: [0x46e]
Successors: [0x922]
---
0x484 JUMPDEST
0x485 DUP2
0x486 ADD
0x487 SWAP1
0x488 DUP1
0x489 DUP1
0x48a CALLDATALOAD
0x48b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a0 AND
0x4a1 SWAP1
0x4a2 PUSH1 0x20
0x4a4 ADD
0x4a5 SWAP1
0x4a6 SWAP3
0x4a7 SWAP2
0x4a8 SWAP1
0x4a9 DUP1
0x4aa CALLDATALOAD
0x4ab SWAP1
0x4ac PUSH1 0x20
0x4ae ADD
0x4af SWAP1
0x4b0 SWAP3
0x4b1 SWAP2
0x4b2 SWAP1
0x4b3 POP
0x4b4 POP
0x4b5 POP
0x4b6 PUSH2 0x922
0x4b9 JUMP
---
0x484: JUMPDEST 
0x486: V349 = ADD 0x4 V343
0x48a: V350 = CALLDATALOAD 0x4
0x48b: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a0: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x4a2: V353 = 0x20
0x4a4: V354 = ADD 0x20 0x4
0x4aa: V355 = CALLDATALOAD 0x24
0x4ac: V356 = 0x20
0x4ae: V357 = ADD 0x20 0x24
0x4b6: V358 = 0x922
0x4b9: JUMP 0x922
---
Entry stack: [V13, 0x4ba, 0x4, V343]
Stack pops: 2
Stack additions: [V352, V355]
Exit stack: [V13, 0x4ba, V352, V355]

================================

Block 0x4ba
[0x4ba:0x4d3]
---
Predecessors: [0x5fb, 0x789, 0x918, 0x92f]
Successors: []
---
0x4ba JUMPDEST
0x4bb PUSH1 0x40
0x4bd MLOAD
0x4be DUP1
0x4bf DUP3
0x4c0 ISZERO
0x4c1 ISZERO
0x4c2 ISZERO
0x4c3 ISZERO
0x4c4 DUP2
0x4c5 MSTORE
0x4c6 PUSH1 0x20
0x4c8 ADD
0x4c9 SWAP2
0x4ca POP
0x4cb POP
0x4cc PUSH1 0x40
0x4ce MLOAD
0x4cf DUP1
0x4d0 SWAP2
0x4d1 SUB
0x4d2 SWAP1
0x4d3 RETURN
---
0x4ba: JUMPDEST 
0x4bb: V359 = 0x40
0x4bd: V360 = M[0x40]
0x4c0: V361 = ISZERO 0x1
0x4c1: V362 = ISZERO 0x0
0x4c2: V363 = ISZERO 0x1
0x4c3: V364 = ISZERO 0x0
0x4c5: M[V360] = 0x1
0x4c6: V365 = 0x20
0x4c8: V366 = ADD 0x20 V360
0x4cc: V367 = 0x40
0x4ce: V368 = M[0x40]
0x4d1: V369 = SUB V366 V368
0x4d3: RETURN V368 V369
---
Entry stack: [V13, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x4d4
[0x4d4:0x4e5]
---
Predecessors: [0x57]
Successors: [0x4e6, 0x4ea]
---
0x4d4 JUMPDEST
0x4d5 PUSH2 0x536
0x4d8 PUSH1 0x4
0x4da DUP1
0x4db CALLDATASIZE
0x4dc SUB
0x4dd PUSH1 0x40
0x4df DUP2
0x4e0 LT
0x4e1 ISZERO
0x4e2 PUSH2 0x4ea
0x4e5 JUMPI
---
0x4d4: JUMPDEST 
0x4d5: V370 = 0x536
0x4d8: V371 = 0x4
0x4db: V372 = CALLDATASIZE
0x4dc: V373 = SUB V372 0x4
0x4dd: V374 = 0x40
0x4e0: V375 = LT V373 0x40
0x4e1: V376 = ISZERO V375
0x4e2: V377 = 0x4ea
0x4e5: JUMPI 0x4ea V376
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x536, 0x4, V373]
Exit stack: [V13, 0x536, 0x4, V373]

================================

Block 0x4e6
[0x4e6:0x4e9]
---
Predecessors: [0x4d4]
Successors: []
---
0x4e6 PUSH1 0x0
0x4e8 DUP1
0x4e9 REVERT
---
0x4e6: V378 = 0x0
0x4e9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x536, 0x4, V373]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x536, 0x4, V373]

================================

Block 0x4ea
[0x4ea:0x535]
---
Predecessors: [0x4d4]
Successors: [0x939]
---
0x4ea JUMPDEST
0x4eb DUP2
0x4ec ADD
0x4ed SWAP1
0x4ee DUP1
0x4ef DUP1
0x4f0 CALLDATALOAD
0x4f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x506 AND
0x507 SWAP1
0x508 PUSH1 0x20
0x50a ADD
0x50b SWAP1
0x50c SWAP3
0x50d SWAP2
0x50e SWAP1
0x50f DUP1
0x510 CALLDATALOAD
0x511 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x526 AND
0x527 SWAP1
0x528 PUSH1 0x20
0x52a ADD
0x52b SWAP1
0x52c SWAP3
0x52d SWAP2
0x52e SWAP1
0x52f POP
0x530 POP
0x531 POP
0x532 PUSH2 0x939
0x535 JUMP
---
0x4ea: JUMPDEST 
0x4ec: V379 = ADD 0x4 V373
0x4f0: V380 = CALLDATALOAD 0x4
0x4f1: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x506: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x508: V383 = 0x20
0x50a: V384 = ADD 0x20 0x4
0x510: V385 = CALLDATALOAD 0x24
0x511: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x526: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x528: V388 = 0x20
0x52a: V389 = ADD 0x20 0x24
0x532: V390 = 0x939
0x535: JUMP 0x939
---
Entry stack: [V13, 0x536, 0x4, V373]
Stack pops: 2
Stack additions: [V382, V387]
Exit stack: [V13, 0x536, V382, V387]

================================

Block 0x536
[0x536:0x54b]
---
Predecessors: [0x939]
Successors: []
---
0x536 JUMPDEST
0x537 PUSH1 0x40
0x539 MLOAD
0x53a DUP1
0x53b DUP3
0x53c DUP2
0x53d MSTORE
0x53e PUSH1 0x20
0x540 ADD
0x541 SWAP2
0x542 POP
0x543 POP
0x544 PUSH1 0x40
0x546 MLOAD
0x547 DUP1
0x548 SWAP2
0x549 SUB
0x54a SWAP1
0x54b RETURN
---
0x536: JUMPDEST 
0x537: V391 = 0x40
0x539: V392 = M[0x40]
0x53d: M[V392] = V699
0x53e: V393 = 0x20
0x540: V394 = ADD 0x20 V392
0x544: V395 = 0x40
0x546: V396 = M[0x40]
0x549: V397 = SUB V394 V396
0x54b: RETURN V396 V397
---
Entry stack: [V13, V699]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x54c
[0x54c:0x59d]
---
Predecessors: [0xd4]
Successors: [0x59e, 0x5e4]
---
0x54c JUMPDEST
0x54d PUSH1 0x60
0x54f PUSH1 0x3
0x551 DUP1
0x552 SLOAD
0x553 PUSH1 0x1
0x555 DUP2
0x556 PUSH1 0x1
0x558 AND
0x559 ISZERO
0x55a PUSH2 0x100
0x55d MUL
0x55e SUB
0x55f AND
0x560 PUSH1 0x2
0x562 SWAP1
0x563 DIV
0x564 DUP1
0x565 PUSH1 0x1f
0x567 ADD
0x568 PUSH1 0x20
0x56a DUP1
0x56b SWAP2
0x56c DIV
0x56d MUL
0x56e PUSH1 0x20
0x570 ADD
0x571 PUSH1 0x40
0x573 MLOAD
0x574 SWAP1
0x575 DUP2
0x576 ADD
0x577 PUSH1 0x40
0x579 MSTORE
0x57a DUP1
0x57b SWAP3
0x57c SWAP2
0x57d SWAP1
0x57e DUP2
0x57f DUP2
0x580 MSTORE
0x581 PUSH1 0x20
0x583 ADD
0x584 DUP3
0x585 DUP1
0x586 SLOAD
0x587 PUSH1 0x1
0x589 DUP2
0x58a PUSH1 0x1
0x58c AND
0x58d ISZERO
0x58e PUSH2 0x100
0x591 MUL
0x592 SUB
0x593 AND
0x594 PUSH1 0x2
0x596 SWAP1
0x597 DIV
0x598 DUP1
0x599 ISZERO
0x59a PUSH2 0x5e4
0x59d JUMPI
---
0x54c: JUMPDEST 
0x54d: V398 = 0x60
0x54f: V399 = 0x3
0x552: V400 = S[0x3]
0x553: V401 = 0x1
0x556: V402 = 0x1
0x558: V403 = AND 0x1 V400
0x559: V404 = ISZERO V403
0x55a: V405 = 0x100
0x55d: V406 = MUL 0x100 V404
0x55e: V407 = SUB V406 0x1
0x55f: V408 = AND V407 V400
0x560: V409 = 0x2
0x563: V410 = DIV V408 0x2
0x565: V411 = 0x1f
0x567: V412 = ADD 0x1f V410
0x568: V413 = 0x20
0x56c: V414 = DIV V412 0x20
0x56d: V415 = MUL V414 0x20
0x56e: V416 = 0x20
0x570: V417 = ADD 0x20 V415
0x571: V418 = 0x40
0x573: V419 = M[0x40]
0x576: V420 = ADD V419 V417
0x577: V421 = 0x40
0x579: M[0x40] = V420
0x580: M[V419] = V410
0x581: V422 = 0x20
0x583: V423 = ADD 0x20 V419
0x586: V424 = S[0x3]
0x587: V425 = 0x1
0x58a: V426 = 0x1
0x58c: V427 = AND 0x1 V424
0x58d: V428 = ISZERO V427
0x58e: V429 = 0x100
0x591: V430 = MUL 0x100 V428
0x592: V431 = SUB V430 0x1
0x593: V432 = AND V431 V424
0x594: V433 = 0x2
0x597: V434 = DIV V432 0x2
0x599: V435 = ISZERO V434
0x59a: V436 = 0x5e4
0x59d: JUMPI 0x5e4 V435
---
Entry stack: [V13, 0xdc]
Stack pops: 0
Stack additions: [0x60, V419, 0x3, V410, V423, 0x3, V434]
Exit stack: [V13, 0xdc, 0x60, V419, 0x3, V410, V423, 0x3, V434]

================================

Block 0x59e
[0x59e:0x5a5]
---
Predecessors: [0x54c]
Successors: [0x5a6, 0x5b9]
---
0x59e DUP1
0x59f PUSH1 0x1f
0x5a1 LT
0x5a2 PUSH2 0x5b9
0x5a5 JUMPI
---
0x59f: V437 = 0x1f
0x5a1: V438 = LT 0x1f V434
0x5a2: V439 = 0x5b9
0x5a5: JUMPI 0x5b9 V438
---
Entry stack: [V13, 0xdc, 0x60, V419, 0x3, V410, V423, 0x3, V434]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xdc, 0x60, V419, 0x3, V410, V423, 0x3, V434]

================================

Block 0x5a6
[0x5a6:0x5b8]
---
Predecessors: [0x59e]
Successors: [0x5e4]
---
0x5a6 PUSH2 0x100
0x5a9 DUP1
0x5aa DUP4
0x5ab SLOAD
0x5ac DIV
0x5ad MUL
0x5ae DUP4
0x5af MSTORE
0x5b0 SWAP2
0x5b1 PUSH1 0x20
0x5b3 ADD
0x5b4 SWAP2
0x5b5 PUSH2 0x5e4
0x5b8 JUMP
---
0x5a6: V440 = 0x100
0x5ab: V441 = S[0x3]
0x5ac: V442 = DIV V441 0x100
0x5ad: V443 = MUL V442 0x100
0x5af: M[V423] = V443
0x5b1: V444 = 0x20
0x5b3: V445 = ADD 0x20 V423
0x5b5: V446 = 0x5e4
0x5b8: JUMP 0x5e4
---
Entry stack: [V13, 0xdc, 0x60, V419, 0x3, V410, V423, 0x3, V434]
Stack pops: 3
Stack additions: [V445, S1, S0]
Exit stack: [V13, 0xdc, 0x60, V419, 0x3, V410, V445, 0x3, V434]

================================

Block 0x5b9
[0x5b9:0x5c6]
---
Predecessors: [0x59e]
Successors: [0x5c7]
---
0x5b9 JUMPDEST
0x5ba DUP3
0x5bb ADD
0x5bc SWAP2
0x5bd SWAP1
0x5be PUSH1 0x0
0x5c0 MSTORE
0x5c1 PUSH1 0x20
0x5c3 PUSH1 0x0
0x5c5 SHA3
0x5c6 SWAP1
---
0x5b9: JUMPDEST 
0x5bb: V447 = ADD V423 V434
0x5be: V448 = 0x0
0x5c0: M[0x0] = 0x3
0x5c1: V449 = 0x20
0x5c3: V450 = 0x0
0x5c5: V451 = SHA3 0x0 0x20
---
Entry stack: [V13, 0xdc, 0x60, V419, 0x3, V410, V423, 0x3, V434]
Stack pops: 3
Stack additions: [V447, V451, S2]
Exit stack: [V13, 0xdc, 0x60, V419, 0x3, V410, V447, V451, V423]

================================

Block 0x5c7
[0x5c7:0x5da]
---
Predecessors: [0x5b9, 0x5c7]
Successors: [0x5c7, 0x5db]
---
0x5c7 JUMPDEST
0x5c8 DUP2
0x5c9 SLOAD
0x5ca DUP2
0x5cb MSTORE
0x5cc SWAP1
0x5cd PUSH1 0x1
0x5cf ADD
0x5d0 SWAP1
0x5d1 PUSH1 0x20
0x5d3 ADD
0x5d4 DUP1
0x5d5 DUP4
0x5d6 GT
0x5d7 PUSH2 0x5c7
0x5da JUMPI
---
0x5c7: JUMPDEST 
0x5c9: V452 = S[S1]
0x5cb: M[S0] = V452
0x5cd: V453 = 0x1
0x5cf: V454 = ADD 0x1 S1
0x5d1: V455 = 0x20
0x5d3: V456 = ADD 0x20 S0
0x5d6: V457 = GT V447 V456
0x5d7: V458 = 0x5c7
0x5da: JUMPI 0x5c7 V457
---
Entry stack: [V13, 0xdc, 0x60, V419, 0x3, V410, V447, S1, S0]
Stack pops: 3
Stack additions: [S2, V454, V456]
Exit stack: [V13, 0xdc, 0x60, V419, 0x3, V410, V447, V454, V456]

================================

Block 0x5db
[0x5db:0x5e3]
---
Predecessors: [0x5c7]
Successors: [0x5e4]
---
0x5db DUP3
0x5dc SWAP1
0x5dd SUB
0x5de PUSH1 0x1f
0x5e0 AND
0x5e1 DUP3
0x5e2 ADD
0x5e3 SWAP2
---
0x5dd: V459 = SUB V456 V447
0x5de: V460 = 0x1f
0x5e0: V461 = AND 0x1f V459
0x5e2: V462 = ADD V447 V461
---
Entry stack: [V13, 0xdc, 0x60, V419, 0x3, V410, V447, V454, V456]
Stack pops: 3
Stack additions: [V462, S1, S2]
Exit stack: [V13, 0xdc, 0x60, V419, 0x3, V410, V462, V454, V447]

================================

Block 0x5e4
[0x5e4:0x5ed]
---
Predecessors: [0x54c, 0x5a6, 0x5db]
Successors: [0xdc]
---
0x5e4 JUMPDEST
0x5e5 POP
0x5e6 POP
0x5e7 POP
0x5e8 POP
0x5e9 POP
0x5ea SWAP1
0x5eb POP
0x5ec SWAP1
0x5ed JUMP
---
0x5e4: JUMPDEST 
0x5ed: JUMP 0xdc
---
Entry stack: [V13, 0xdc, 0x60, V419, 0x3, V410, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V13, V419]

================================

Block 0x5ee
[0x5ee:0x5fa]
---
Predecessors: [0x16d]
Successors: [0x9c0]
---
0x5ee JUMPDEST
0x5ef PUSH1 0x0
0x5f1 PUSH2 0x5fb
0x5f4 CALLER
0x5f5 DUP5
0x5f6 DUP5
0x5f7 PUSH2 0x9c0
0x5fa JUMP
---
0x5ee: JUMPDEST 
0x5ef: V463 = 0x0
0x5f1: V464 = 0x5fb
0x5f4: V465 = CALLER
0x5f7: V466 = 0x9c0
0x5fa: JUMP 0x9c0
---
Entry stack: [V13, 0x1a3, V117, V120]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x5fb, V465, S1, S0]
Exit stack: [V13, 0x1a3, V117, V120, 0x0, 0x5fb, V465, V117, V120]

================================

Block 0x5fb
[0x5fb:0x604]
---
Predecessors: [0xacc]
Successors: [0x1a3, 0x313, 0x454, 0x4ba]
---
0x5fb JUMPDEST
0x5fc PUSH1 0x1
0x5fe SWAP1
0x5ff POP
0x600 SWAP3
0x601 SWAP2
0x602 POP
0x603 POP
0x604 JUMP
---
0x5fb: JUMPDEST 
0x5fc: V467 = 0x1
0x604: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, S4, 0x1]

================================

Block 0x605
[0x605:0x60e]
---
Predecessors: [0x1bd]
Successors: [0x1c5]
---
0x605 JUMPDEST
0x606 PUSH1 0x0
0x608 PUSH1 0x2
0x60a SLOAD
0x60b SWAP1
0x60c POP
0x60d SWAP1
0x60e JUMP
---
0x605: JUMPDEST 
0x606: V468 = 0x0
0x608: V469 = 0x2
0x60a: V470 = S[0x2]
0x60e: JUMP 0x1c5
---
Entry stack: [V13, 0x1c5]
Stack pops: 1
Stack additions: [V470]
Exit stack: [V13, V470]

================================

Block 0x60f
[0x60f:0x61b]
---
Predecessors: [0x1f1]
Successors: [0xbb7]
---
0x60f JUMPDEST
0x610 PUSH1 0x0
0x612 PUSH2 0x61c
0x615 DUP5
0x616 DUP5
0x617 DUP5
0x618 PUSH2 0xbb7
0x61b JUMP
---
0x60f: JUMPDEST 
0x610: V471 = 0x0
0x612: V472 = 0x61c
0x618: V473 = 0xbb7
0x61b: JUMP 0xbb7
---
Entry stack: [V13, 0x247, V156, V161, V164]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x61c, S2, S1, S0]
Exit stack: [V13, 0x247, V156, V161, V164, 0x0, 0x61c, V156, V161, V164]

================================

Block 0x61c
[0x61c:0x6af]
---
Predecessors: [0xd21]
Successors: [0xdcd]
---
0x61c JUMPDEST
0x61d PUSH2 0x6b5
0x620 DUP5
0x621 CALLER
0x622 PUSH2 0x6b0
0x625 DUP6
0x626 PUSH1 0x1
0x628 PUSH1 0x0
0x62a DUP11
0x62b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x640 AND
0x641 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x656 AND
0x657 DUP2
0x658 MSTORE
0x659 PUSH1 0x20
0x65b ADD
0x65c SWAP1
0x65d DUP2
0x65e MSTORE
0x65f PUSH1 0x20
0x661 ADD
0x662 PUSH1 0x0
0x664 SHA3
0x665 PUSH1 0x0
0x667 CALLER
0x668 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67d AND
0x67e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x693 AND
0x694 DUP2
0x695 MSTORE
0x696 PUSH1 0x20
0x698 ADD
0x699 SWAP1
0x69a DUP2
0x69b MSTORE
0x69c PUSH1 0x20
0x69e ADD
0x69f PUSH1 0x0
0x6a1 SHA3
0x6a2 SLOAD
0x6a3 PUSH2 0xdcd
0x6a6 SWAP1
0x6a7 SWAP2
0x6a8 SWAP1
0x6a9 PUSH4 0xffffffff
0x6ae AND
0x6af JUMP
---
0x61c: JUMPDEST 
0x61d: V474 = 0x6b5
0x621: V475 = CALLER
0x622: V476 = 0x6b0
0x626: V477 = 0x1
0x628: V478 = 0x0
0x62b: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x640: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x641: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x656: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x658: M[0x0] = V482
0x659: V483 = 0x20
0x65b: V484 = ADD 0x20 0x0
0x65e: M[0x20] = 0x1
0x65f: V485 = 0x20
0x661: V486 = ADD 0x20 0x20
0x662: V487 = 0x0
0x664: V488 = SHA3 0x0 0x40
0x665: V489 = 0x0
0x667: V490 = CALLER
0x668: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x67d: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x67e: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x693: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x695: M[0x0] = V494
0x696: V495 = 0x20
0x698: V496 = ADD 0x20 0x0
0x69b: M[0x20] = V488
0x69c: V497 = 0x20
0x69e: V498 = ADD 0x20 0x20
0x69f: V499 = 0x0
0x6a1: V500 = SHA3 0x0 0x40
0x6a2: V501 = S[V500]
0x6a3: V502 = 0xdcd
0x6a9: V503 = 0xffffffff
0x6ae: V504 = AND 0xffffffff 0xdcd
0x6af: JUMP 0xdcd
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x6b5, S3, V475, 0x6b0, V501, S1]
Exit stack: [V13, S4, S3, S2, S1, S0, 0x6b5, S3, V475, 0x6b0, V501, S1]

================================

Block 0x6b0
[0x6b0:0x6b4]
---
Predecessors: [0xe45]
Successors: [0x9c0]
---
0x6b0 JUMPDEST
0x6b1 PUSH2 0x9c0
0x6b4 JUMP
---
0x6b0: JUMPDEST 
0x6b1: V505 = 0x9c0
0x6b4: JUMP 0x9c0
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, V901]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, V901]

================================

Block 0x6b5
[0x6b5:0x6bf]
---
Predecessors: [0xacc]
Successors: [0x247]
---
0x6b5 JUMPDEST
0x6b6 PUSH1 0x1
0x6b8 SWAP1
0x6b9 POP
0x6ba SWAP4
0x6bb SWAP3
0x6bc POP
0x6bd POP
0x6be POP
0x6bf JUMP
---
0x6b5: JUMPDEST 
0x6b6: V506 = 0x1
0x6bf: JUMP S4
---
Entry stack: [V13, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x6c0
[0x6c0:0x6c4]
---
Predecessors: [0x261]
Successors: [0x269]
---
0x6c0 JUMPDEST
0x6c1 PUSH1 0x12
0x6c3 DUP2
0x6c4 JUMP
---
0x6c0: JUMPDEST 
0x6c1: V507 = 0x12
0x6c4: JUMP 0x269
---
Entry stack: [V13, 0x269]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V13, 0x269, 0x12]

================================

Block 0x6c5
[0x6c5:0x6d6]
---
Predecessors: [0x285]
Successors: [0x28d]
---
0x6c5 JUMPDEST
0x6c6 PUSH1 0x12
0x6c8 PUSH1 0xff
0x6ca AND
0x6cb PUSH1 0xa
0x6cd EXP
0x6ce PUSH5 0x30e4f9b400
0x6d4 MUL
0x6d5 DUP2
0x6d6 JUMP
---
0x6c5: JUMPDEST 
0x6c6: V508 = 0x12
0x6c8: V509 = 0xff
0x6ca: V510 = AND 0xff 0x12
0x6cb: V511 = 0xa
0x6cd: V512 = EXP 0xa 0x12
0x6ce: V513 = 0x30e4f9b400
0x6d4: V514 = MUL 0x30e4f9b400 0xde0b6b3a7640000
0x6d6: JUMP 0x28d
---
Entry stack: [V13, 0x28d]
Stack pops: 1
Stack additions: [S0, 0x2a68bedbb190931f650000000]
Exit stack: [V13, 0x28d, 0x2a68bedbb190931f650000000]

================================

Block 0x6d7
[0x6d7:0x6ed]
---
Predecessors: [0x2a3]
Successors: [0x2ab]
---
0x6d7 JUMPDEST
0x6d8 PUSH1 0x0
0x6da PUSH1 0x5
0x6dc PUSH1 0x0
0x6de SWAP1
0x6df SLOAD
0x6e0 SWAP1
0x6e1 PUSH2 0x100
0x6e4 EXP
0x6e5 SWAP1
0x6e6 DIV
0x6e7 PUSH1 0xff
0x6e9 AND
0x6ea SWAP1
0x6eb POP
0x6ec SWAP1
0x6ed JUMP
---
0x6d7: JUMPDEST 
0x6d8: V515 = 0x0
0x6da: V516 = 0x5
0x6dc: V517 = 0x0
0x6df: V518 = S[0x5]
0x6e1: V519 = 0x100
0x6e4: V520 = EXP 0x100 0x0
0x6e6: V521 = DIV V518 0x1
0x6e7: V522 = 0xff
0x6e9: V523 = AND 0xff V521
0x6ed: JUMP 0x2ab
---
Entry stack: [V13, 0x2ab]
Stack pops: 1
Stack additions: [V523]
Exit stack: [V13, V523]

================================

Block 0x6ee
[0x6ee:0x783]
---
Predecessors: [0x2dd]
Successors: [0xe56]
---
0x6ee JUMPDEST
0x6ef PUSH1 0x0
0x6f1 PUSH2 0x789
0x6f4 CALLER
0x6f5 DUP5
0x6f6 PUSH2 0x784
0x6f9 DUP6
0x6fa PUSH1 0x1
0x6fc PUSH1 0x0
0x6fe CALLER
0x6ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x714 AND
0x715 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72a AND
0x72b DUP2
0x72c MSTORE
0x72d PUSH1 0x20
0x72f ADD
0x730 SWAP1
0x731 DUP2
0x732 MSTORE
0x733 PUSH1 0x20
0x735 ADD
0x736 PUSH1 0x0
0x738 SHA3
0x739 PUSH1 0x0
0x73b DUP10
0x73c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x751 AND
0x752 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x767 AND
0x768 DUP2
0x769 MSTORE
0x76a PUSH1 0x20
0x76c ADD
0x76d SWAP1
0x76e DUP2
0x76f MSTORE
0x770 PUSH1 0x20
0x772 ADD
0x773 PUSH1 0x0
0x775 SHA3
0x776 SLOAD
0x777 PUSH2 0xe56
0x77a SWAP1
0x77b SWAP2
0x77c SWAP1
0x77d PUSH4 0xffffffff
0x782 AND
0x783 JUMP
---
0x6ee: JUMPDEST 
0x6ef: V524 = 0x0
0x6f1: V525 = 0x789
0x6f4: V526 = CALLER
0x6f6: V527 = 0x784
0x6fa: V528 = 0x1
0x6fc: V529 = 0x0
0x6fe: V530 = CALLER
0x6ff: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x714: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x715: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x72a: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x72c: M[0x0] = V534
0x72d: V535 = 0x20
0x72f: V536 = ADD 0x20 0x0
0x732: M[0x20] = 0x1
0x733: V537 = 0x20
0x735: V538 = ADD 0x20 0x20
0x736: V539 = 0x0
0x738: V540 = SHA3 0x0 0x40
0x739: V541 = 0x0
0x73c: V542 = 0xffffffffffffffffffffffffffffffffffffffff
0x751: V543 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x752: V544 = 0xffffffffffffffffffffffffffffffffffffffff
0x767: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff V543
0x769: M[0x0] = V545
0x76a: V546 = 0x20
0x76c: V547 = ADD 0x20 0x0
0x76f: M[0x20] = V540
0x770: V548 = 0x20
0x772: V549 = ADD 0x20 0x20
0x773: V550 = 0x0
0x775: V551 = SHA3 0x0 0x40
0x776: V552 = S[V551]
0x777: V553 = 0xe56
0x77d: V554 = 0xffffffff
0x782: V555 = AND 0xffffffff 0xe56
0x783: JUMP 0xe56
---
Entry stack: [V13, 0x313, V226, V229]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x789, V526, S1, 0x784, V552, S0]
Exit stack: [V13, 0x313, V226, V229, 0x0, 0x789, V526, V226, 0x784, V552, V229]

================================

Block 0x784
[0x784:0x788]
---
Predecessors: [0xed4]
Successors: [0x9c0]
---
0x784 JUMPDEST
0x785 PUSH2 0x9c0
0x788 JUMP
---
0x784: JUMPDEST 
0x785: V556 = 0x9c0
0x788: JUMP 0x9c0
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, S0]

================================

Block 0x789
[0x789:0x792]
---
Predecessors: [0xacc]
Successors: [0x1a3, 0x313, 0x454, 0x4ba]
---
0x789 JUMPDEST
0x78a PUSH1 0x1
0x78c SWAP1
0x78d POP
0x78e SWAP3
0x78f SWAP2
0x790 POP
0x791 POP
0x792 JUMP
---
0x789: JUMPDEST 
0x78a: V557 = 0x1
0x792: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, S4, 0x1]

================================

Block 0x793
[0x793:0x7da]
---
Predecessors: [0x343]
Successors: [0x36f]
---
0x793 JUMPDEST
0x794 PUSH1 0x0
0x796 DUP1
0x797 PUSH1 0x0
0x799 DUP4
0x79a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7af AND
0x7b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c5 AND
0x7c6 DUP2
0x7c7 MSTORE
0x7c8 PUSH1 0x20
0x7ca ADD
0x7cb SWAP1
0x7cc DUP2
0x7cd MSTORE
0x7ce PUSH1 0x20
0x7d0 ADD
0x7d1 PUSH1 0x0
0x7d3 SHA3
0x7d4 SLOAD
0x7d5 SWAP1
0x7d6 POP
0x7d7 SWAP2
0x7d8 SWAP1
0x7d9 POP
0x7da JUMP
---
0x793: JUMPDEST 
0x794: V558 = 0x0
0x797: V559 = 0x0
0x79a: V560 = 0xffffffffffffffffffffffffffffffffffffffff
0x7af: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x7b0: V562 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c5: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff V561
0x7c7: M[0x0] = V563
0x7c8: V564 = 0x20
0x7ca: V565 = ADD 0x20 0x0
0x7cd: M[0x20] = 0x0
0x7ce: V566 = 0x20
0x7d0: V567 = ADD 0x20 0x20
0x7d1: V568 = 0x0
0x7d3: V569 = SHA3 0x0 0x40
0x7d4: V570 = S[V569]
0x7da: JUMP 0x36f
---
Entry stack: [V13, 0x36f, V256]
Stack pops: 2
Stack additions: [V570]
Exit stack: [V13, V570]

================================

Block 0x7db
[0x7db:0x82c]
---
Predecessors: [0x385]
Successors: [0x82d, 0x873]
---
0x7db JUMPDEST
0x7dc PUSH1 0x60
0x7de PUSH1 0x4
0x7e0 DUP1
0x7e1 SLOAD
0x7e2 PUSH1 0x1
0x7e4 DUP2
0x7e5 PUSH1 0x1
0x7e7 AND
0x7e8 ISZERO
0x7e9 PUSH2 0x100
0x7ec MUL
0x7ed SUB
0x7ee AND
0x7ef PUSH1 0x2
0x7f1 SWAP1
0x7f2 DIV
0x7f3 DUP1
0x7f4 PUSH1 0x1f
0x7f6 ADD
0x7f7 PUSH1 0x20
0x7f9 DUP1
0x7fa SWAP2
0x7fb DIV
0x7fc MUL
0x7fd PUSH1 0x20
0x7ff ADD
0x800 PUSH1 0x40
0x802 MLOAD
0x803 SWAP1
0x804 DUP2
0x805 ADD
0x806 PUSH1 0x40
0x808 MSTORE
0x809 DUP1
0x80a SWAP3
0x80b SWAP2
0x80c SWAP1
0x80d DUP2
0x80e DUP2
0x80f MSTORE
0x810 PUSH1 0x20
0x812 ADD
0x813 DUP3
0x814 DUP1
0x815 SLOAD
0x816 PUSH1 0x1
0x818 DUP2
0x819 PUSH1 0x1
0x81b AND
0x81c ISZERO
0x81d PUSH2 0x100
0x820 MUL
0x821 SUB
0x822 AND
0x823 PUSH1 0x2
0x825 SWAP1
0x826 DIV
0x827 DUP1
0x828 ISZERO
0x829 PUSH2 0x873
0x82c JUMPI
---
0x7db: JUMPDEST 
0x7dc: V571 = 0x60
0x7de: V572 = 0x4
0x7e1: V573 = S[0x4]
0x7e2: V574 = 0x1
0x7e5: V575 = 0x1
0x7e7: V576 = AND 0x1 V573
0x7e8: V577 = ISZERO V576
0x7e9: V578 = 0x100
0x7ec: V579 = MUL 0x100 V577
0x7ed: V580 = SUB V579 0x1
0x7ee: V581 = AND V580 V573
0x7ef: V582 = 0x2
0x7f2: V583 = DIV V581 0x2
0x7f4: V584 = 0x1f
0x7f6: V585 = ADD 0x1f V583
0x7f7: V586 = 0x20
0x7fb: V587 = DIV V585 0x20
0x7fc: V588 = MUL V587 0x20
0x7fd: V589 = 0x20
0x7ff: V590 = ADD 0x20 V588
0x800: V591 = 0x40
0x802: V592 = M[0x40]
0x805: V593 = ADD V592 V590
0x806: V594 = 0x40
0x808: M[0x40] = V593
0x80f: M[V592] = V583
0x810: V595 = 0x20
0x812: V596 = ADD 0x20 V592
0x815: V597 = S[0x4]
0x816: V598 = 0x1
0x819: V599 = 0x1
0x81b: V600 = AND 0x1 V597
0x81c: V601 = ISZERO V600
0x81d: V602 = 0x100
0x820: V603 = MUL 0x100 V601
0x821: V604 = SUB V603 0x1
0x822: V605 = AND V604 V597
0x823: V606 = 0x2
0x826: V607 = DIV V605 0x2
0x828: V608 = ISZERO V607
0x829: V609 = 0x873
0x82c: JUMPI 0x873 V608
---
Entry stack: [V13, 0x38d]
Stack pops: 0
Stack additions: [0x60, V592, 0x4, V583, V596, 0x4, V607]
Exit stack: [V13, 0x38d, 0x60, V592, 0x4, V583, V596, 0x4, V607]

================================

Block 0x82d
[0x82d:0x834]
---
Predecessors: [0x7db]
Successors: [0x835, 0x848]
---
0x82d DUP1
0x82e PUSH1 0x1f
0x830 LT
0x831 PUSH2 0x848
0x834 JUMPI
---
0x82e: V610 = 0x1f
0x830: V611 = LT 0x1f V607
0x831: V612 = 0x848
0x834: JUMPI 0x848 V611
---
Entry stack: [V13, 0x38d, 0x60, V592, 0x4, V583, V596, 0x4, V607]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x38d, 0x60, V592, 0x4, V583, V596, 0x4, V607]

================================

Block 0x835
[0x835:0x847]
---
Predecessors: [0x82d]
Successors: [0x873]
---
0x835 PUSH2 0x100
0x838 DUP1
0x839 DUP4
0x83a SLOAD
0x83b DIV
0x83c MUL
0x83d DUP4
0x83e MSTORE
0x83f SWAP2
0x840 PUSH1 0x20
0x842 ADD
0x843 SWAP2
0x844 PUSH2 0x873
0x847 JUMP
---
0x835: V613 = 0x100
0x83a: V614 = S[0x4]
0x83b: V615 = DIV V614 0x100
0x83c: V616 = MUL V615 0x100
0x83e: M[V596] = V616
0x840: V617 = 0x20
0x842: V618 = ADD 0x20 V596
0x844: V619 = 0x873
0x847: JUMP 0x873
---
Entry stack: [V13, 0x38d, 0x60, V592, 0x4, V583, V596, 0x4, V607]
Stack pops: 3
Stack additions: [V618, S1, S0]
Exit stack: [V13, 0x38d, 0x60, V592, 0x4, V583, V618, 0x4, V607]

================================

Block 0x848
[0x848:0x855]
---
Predecessors: [0x82d]
Successors: [0x856]
---
0x848 JUMPDEST
0x849 DUP3
0x84a ADD
0x84b SWAP2
0x84c SWAP1
0x84d PUSH1 0x0
0x84f MSTORE
0x850 PUSH1 0x20
0x852 PUSH1 0x0
0x854 SHA3
0x855 SWAP1
---
0x848: JUMPDEST 
0x84a: V620 = ADD V596 V607
0x84d: V621 = 0x0
0x84f: M[0x0] = 0x4
0x850: V622 = 0x20
0x852: V623 = 0x0
0x854: V624 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x38d, 0x60, V592, 0x4, V583, V596, 0x4, V607]
Stack pops: 3
Stack additions: [V620, V624, S2]
Exit stack: [V13, 0x38d, 0x60, V592, 0x4, V583, V620, V624, V596]

================================

Block 0x856
[0x856:0x869]
---
Predecessors: [0x848, 0x856]
Successors: [0x856, 0x86a]
---
0x856 JUMPDEST
0x857 DUP2
0x858 SLOAD
0x859 DUP2
0x85a MSTORE
0x85b SWAP1
0x85c PUSH1 0x1
0x85e ADD
0x85f SWAP1
0x860 PUSH1 0x20
0x862 ADD
0x863 DUP1
0x864 DUP4
0x865 GT
0x866 PUSH2 0x856
0x869 JUMPI
---
0x856: JUMPDEST 
0x858: V625 = S[S1]
0x85a: M[S0] = V625
0x85c: V626 = 0x1
0x85e: V627 = ADD 0x1 S1
0x860: V628 = 0x20
0x862: V629 = ADD 0x20 S0
0x865: V630 = GT V620 V629
0x866: V631 = 0x856
0x869: JUMPI 0x856 V630
---
Entry stack: [V13, 0x38d, 0x60, V592, 0x4, V583, V620, S1, S0]
Stack pops: 3
Stack additions: [S2, V627, V629]
Exit stack: [V13, 0x38d, 0x60, V592, 0x4, V583, V620, V627, V629]

================================

Block 0x86a
[0x86a:0x872]
---
Predecessors: [0x856]
Successors: [0x873]
---
0x86a DUP3
0x86b SWAP1
0x86c SUB
0x86d PUSH1 0x1f
0x86f AND
0x870 DUP3
0x871 ADD
0x872 SWAP2
---
0x86c: V632 = SUB V629 V620
0x86d: V633 = 0x1f
0x86f: V634 = AND 0x1f V632
0x871: V635 = ADD V620 V634
---
Entry stack: [V13, 0x38d, 0x60, V592, 0x4, V583, V620, V627, V629]
Stack pops: 3
Stack additions: [V635, S1, S2]
Exit stack: [V13, 0x38d, 0x60, V592, 0x4, V583, V635, V627, V620]

================================

Block 0x873
[0x873:0x87c]
---
Predecessors: [0x7db, 0x835, 0x86a]
Successors: [0x38d]
---
0x873 JUMPDEST
0x874 POP
0x875 POP
0x876 POP
0x877 POP
0x878 POP
0x879 SWAP1
0x87a POP
0x87b SWAP1
0x87c JUMP
---
0x873: JUMPDEST 
0x87c: JUMP 0x38d
---
Entry stack: [V13, 0x38d, 0x60, V592, 0x4, V583, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V13, V592]

================================

Block 0x87d
[0x87d:0x912]
---
Predecessors: [0x41e]
Successors: [0xdcd]
---
0x87d JUMPDEST
0x87e PUSH1 0x0
0x880 PUSH2 0x918
0x883 CALLER
0x884 DUP5
0x885 PUSH2 0x913
0x888 DUP6
0x889 PUSH1 0x1
0x88b PUSH1 0x0
0x88d CALLER
0x88e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a3 AND
0x8a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b9 AND
0x8ba DUP2
0x8bb MSTORE
0x8bc PUSH1 0x20
0x8be ADD
0x8bf SWAP1
0x8c0 DUP2
0x8c1 MSTORE
0x8c2 PUSH1 0x20
0x8c4 ADD
0x8c5 PUSH1 0x0
0x8c7 SHA3
0x8c8 PUSH1 0x0
0x8ca DUP10
0x8cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e0 AND
0x8e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f6 AND
0x8f7 DUP2
0x8f8 MSTORE
0x8f9 PUSH1 0x20
0x8fb ADD
0x8fc SWAP1
0x8fd DUP2
0x8fe MSTORE
0x8ff PUSH1 0x20
0x901 ADD
0x902 PUSH1 0x0
0x904 SHA3
0x905 SLOAD
0x906 PUSH2 0xdcd
0x909 SWAP1
0x90a SWAP2
0x90b SWAP1
0x90c PUSH4 0xffffffff
0x911 AND
0x912 JUMP
---
0x87d: JUMPDEST 
0x87e: V636 = 0x0
0x880: V637 = 0x918
0x883: V638 = CALLER
0x885: V639 = 0x913
0x889: V640 = 0x1
0x88b: V641 = 0x0
0x88d: V642 = CALLER
0x88e: V643 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a3: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff V642
0x8a4: V645 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b9: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x8bb: M[0x0] = V646
0x8bc: V647 = 0x20
0x8be: V648 = ADD 0x20 0x0
0x8c1: M[0x20] = 0x1
0x8c2: V649 = 0x20
0x8c4: V650 = ADD 0x20 0x20
0x8c5: V651 = 0x0
0x8c7: V652 = SHA3 0x0 0x40
0x8c8: V653 = 0x0
0x8cb: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e0: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x8e1: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f6: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0x8f8: M[0x0] = V657
0x8f9: V658 = 0x20
0x8fb: V659 = ADD 0x20 0x0
0x8fe: M[0x20] = V652
0x8ff: V660 = 0x20
0x901: V661 = ADD 0x20 0x20
0x902: V662 = 0x0
0x904: V663 = SHA3 0x0 0x40
0x905: V664 = S[V663]
0x906: V665 = 0xdcd
0x90c: V666 = 0xffffffff
0x911: V667 = AND 0xffffffff 0xdcd
0x912: JUMP 0xdcd
---
Entry stack: [V13, 0x454, V322, V325]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x918, V638, S1, 0x913, V664, S0]
Exit stack: [V13, 0x454, V322, V325, 0x0, 0x918, V638, V322, 0x913, V664, V325]

================================

Block 0x913
[0x913:0x917]
---
Predecessors: [0xe45]
Successors: [0x9c0]
---
0x913 JUMPDEST
0x914 PUSH2 0x9c0
0x917 JUMP
---
0x913: JUMPDEST 
0x914: V668 = 0x9c0
0x917: JUMP 0x9c0
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, V901]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, V901]

================================

Block 0x918
[0x918:0x921]
---
Predecessors: [0xacc]
Successors: [0x1a3, 0x313, 0x454, 0x4ba]
---
0x918 JUMPDEST
0x919 PUSH1 0x1
0x91b SWAP1
0x91c POP
0x91d SWAP3
0x91e SWAP2
0x91f POP
0x920 POP
0x921 JUMP
---
0x918: JUMPDEST 
0x919: V669 = 0x1
0x921: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, S4, 0x1]

================================

Block 0x922
[0x922:0x92e]
---
Predecessors: [0x484]
Successors: [0xbb7]
---
0x922 JUMPDEST
0x923 PUSH1 0x0
0x925 PUSH2 0x92f
0x928 CALLER
0x929 DUP5
0x92a DUP5
0x92b PUSH2 0xbb7
0x92e JUMP
---
0x922: JUMPDEST 
0x923: V670 = 0x0
0x925: V671 = 0x92f
0x928: V672 = CALLER
0x92b: V673 = 0xbb7
0x92e: JUMP 0xbb7
---
Entry stack: [V13, 0x4ba, V352, V355]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x92f, V672, S1, S0]
Exit stack: [V13, 0x4ba, V352, V355, 0x0, 0x92f, V672, V352, V355]

================================

Block 0x92f
[0x92f:0x938]
---
Predecessors: [0xd21]
Successors: [0x4ba]
---
0x92f JUMPDEST
0x930 PUSH1 0x1
0x932 SWAP1
0x933 POP
0x934 SWAP3
0x935 SWAP2
0x936 POP
0x937 POP
0x938 JUMP
---
0x92f: JUMPDEST 
0x930: V674 = 0x1
0x938: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, S4, 0x1]

================================

Block 0x939
[0x939:0x9bf]
---
Predecessors: [0x4ea]
Successors: [0x536]
---
0x939 JUMPDEST
0x93a PUSH1 0x0
0x93c PUSH1 0x1
0x93e PUSH1 0x0
0x940 DUP5
0x941 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x956 AND
0x957 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96c AND
0x96d DUP2
0x96e MSTORE
0x96f PUSH1 0x20
0x971 ADD
0x972 SWAP1
0x973 DUP2
0x974 MSTORE
0x975 PUSH1 0x20
0x977 ADD
0x978 PUSH1 0x0
0x97a SHA3
0x97b PUSH1 0x0
0x97d DUP4
0x97e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x993 AND
0x994 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a9 AND
0x9aa DUP2
0x9ab MSTORE
0x9ac PUSH1 0x20
0x9ae ADD
0x9af SWAP1
0x9b0 DUP2
0x9b1 MSTORE
0x9b2 PUSH1 0x20
0x9b4 ADD
0x9b5 PUSH1 0x0
0x9b7 SHA3
0x9b8 SLOAD
0x9b9 SWAP1
0x9ba POP
0x9bb SWAP3
0x9bc SWAP2
0x9bd POP
0x9be POP
0x9bf JUMP
---
0x939: JUMPDEST 
0x93a: V675 = 0x0
0x93c: V676 = 0x1
0x93e: V677 = 0x0
0x941: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0x956: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x957: V680 = 0xffffffffffffffffffffffffffffffffffffffff
0x96c: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0x96e: M[0x0] = V681
0x96f: V682 = 0x20
0x971: V683 = ADD 0x20 0x0
0x974: M[0x20] = 0x1
0x975: V684 = 0x20
0x977: V685 = ADD 0x20 0x20
0x978: V686 = 0x0
0x97a: V687 = SHA3 0x0 0x40
0x97b: V688 = 0x0
0x97e: V689 = 0xffffffffffffffffffffffffffffffffffffffff
0x993: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x994: V691 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a9: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0x9ab: M[0x0] = V692
0x9ac: V693 = 0x20
0x9ae: V694 = ADD 0x20 0x0
0x9b1: M[0x20] = V687
0x9b2: V695 = 0x20
0x9b4: V696 = ADD 0x20 0x20
0x9b5: V697 = 0x0
0x9b7: V698 = SHA3 0x0 0x40
0x9b8: V699 = S[V698]
0x9bf: JUMP 0x536
---
Entry stack: [V13, 0x536, V382, V387]
Stack pops: 3
Stack additions: [V699]
Exit stack: [V13, V699]

================================

Block 0x9c0
[0x9c0:0x9f5]
---
Predecessors: [0x5ee, 0x6b0, 0x784, 0x913]
Successors: [0x9f6, 0xa46]
---
0x9c0 JUMPDEST
0x9c1 PUSH1 0x0
0x9c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d8 AND
0x9d9 DUP4
0x9da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ef AND
0x9f0 EQ
0x9f1 ISZERO
0x9f2 PUSH2 0xa46
0x9f5 JUMPI
---
0x9c0: JUMPDEST 
0x9c1: V700 = 0x0
0x9c3: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d8: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x9da: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ef: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x9f0: V705 = EQ V704 0x0
0x9f1: V706 = ISZERO V705
0x9f2: V707 = 0xa46
0x9f5: JUMPI 0xa46 V706
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, S0]

================================

Block 0x9f6
[0x9f6:0xa45]
---
Predecessors: [0x9c0]
Successors: []
---
0x9f6 PUSH1 0x40
0x9f8 MLOAD
0x9f9 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa1a DUP2
0xa1b MSTORE
0xa1c PUSH1 0x4
0xa1e ADD
0xa1f DUP1
0xa20 DUP1
0xa21 PUSH1 0x20
0xa23 ADD
0xa24 DUP3
0xa25 DUP2
0xa26 SUB
0xa27 DUP3
0xa28 MSTORE
0xa29 PUSH1 0x24
0xa2b DUP2
0xa2c MSTORE
0xa2d PUSH1 0x20
0xa2f ADD
0xa30 DUP1
0xa31 PUSH2 0xf24
0xa34 PUSH1 0x24
0xa36 SWAP2
0xa37 CODECOPY
0xa38 PUSH1 0x40
0xa3a ADD
0xa3b SWAP2
0xa3c POP
0xa3d POP
0xa3e PUSH1 0x40
0xa40 MLOAD
0xa41 DUP1
0xa42 SWAP2
0xa43 SUB
0xa44 SWAP1
0xa45 REVERT
---
0x9f6: V708 = 0x40
0x9f8: V709 = M[0x40]
0x9f9: V710 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa1b: M[V709] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa1c: V711 = 0x4
0xa1e: V712 = ADD 0x4 V709
0xa21: V713 = 0x20
0xa23: V714 = ADD 0x20 V712
0xa26: V715 = SUB V714 V712
0xa28: M[V712] = V715
0xa29: V716 = 0x24
0xa2c: M[V714] = 0x24
0xa2d: V717 = 0x20
0xa2f: V718 = ADD 0x20 V714
0xa31: V719 = 0xf24
0xa34: V720 = 0x24
0xa37: CODECOPY V718 0xf24 0x24
0xa38: V721 = 0x40
0xa3a: V722 = ADD 0x40 V718
0xa3e: V723 = 0x40
0xa40: V724 = M[0x40]
0xa43: V725 = SUB V722 V724
0xa45: REVERT V724 V725
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, S0]

================================

Block 0xa46
[0xa46:0xa7b]
---
Predecessors: [0x9c0]
Successors: [0xa7c, 0xacc]
---
0xa46 JUMPDEST
0xa47 PUSH1 0x0
0xa49 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5e AND
0xa5f DUP3
0xa60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa75 AND
0xa76 EQ
0xa77 ISZERO
0xa78 PUSH2 0xacc
0xa7b JUMPI
---
0xa46: JUMPDEST 
0xa47: V726 = 0x0
0xa49: V727 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5e: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xa60: V729 = 0xffffffffffffffffffffffffffffffffffffffff
0xa75: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xa76: V731 = EQ V730 0x0
0xa77: V732 = ISZERO V731
0xa78: V733 = 0xacc
0xa7b: JUMPI 0xacc V732
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, S0]

================================

Block 0xa7c
[0xa7c:0xacb]
---
Predecessors: [0xa46]
Successors: []
---
0xa7c PUSH1 0x40
0xa7e MLOAD
0xa7f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xaa0 DUP2
0xaa1 MSTORE
0xaa2 PUSH1 0x4
0xaa4 ADD
0xaa5 DUP1
0xaa6 DUP1
0xaa7 PUSH1 0x20
0xaa9 ADD
0xaaa DUP3
0xaab DUP2
0xaac SUB
0xaad DUP3
0xaae MSTORE
0xaaf PUSH1 0x22
0xab1 DUP2
0xab2 MSTORE
0xab3 PUSH1 0x20
0xab5 ADD
0xab6 DUP1
0xab7 PUSH2 0xf02
0xaba PUSH1 0x22
0xabc SWAP2
0xabd CODECOPY
0xabe PUSH1 0x40
0xac0 ADD
0xac1 SWAP2
0xac2 POP
0xac3 POP
0xac4 PUSH1 0x40
0xac6 MLOAD
0xac7 DUP1
0xac8 SWAP2
0xac9 SUB
0xaca SWAP1
0xacb REVERT
---
0xa7c: V734 = 0x40
0xa7e: V735 = M[0x40]
0xa7f: V736 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xaa1: M[V735] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xaa2: V737 = 0x4
0xaa4: V738 = ADD 0x4 V735
0xaa7: V739 = 0x20
0xaa9: V740 = ADD 0x20 V738
0xaac: V741 = SUB V740 V738
0xaae: M[V738] = V741
0xaaf: V742 = 0x22
0xab2: M[V740] = 0x22
0xab3: V743 = 0x20
0xab5: V744 = ADD 0x20 V740
0xab7: V745 = 0xf02
0xaba: V746 = 0x22
0xabd: CODECOPY V744 0xf02 0x22
0xabe: V747 = 0x40
0xac0: V748 = ADD 0x40 V744
0xac4: V749 = 0x40
0xac6: V750 = M[0x40]
0xac9: V751 = SUB V748 V750
0xacb: REVERT V750 V751
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x5fb, 0x6b5, 0x789, 0x918}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, 0x0, {0x5fb, 0x6b5, 0x789, 0x918}, S2, S1, S0]

================================

Block 0xacc
[0xacc:0xbb6]
---
Predecessors: [0xa46]
Successors: [0x5fb, 0x6b5, 0x789, 0x918]
---
0xacc JUMPDEST
0xacd DUP1
0xace PUSH1 0x1
0xad0 PUSH1 0x0
0xad2 DUP6
0xad3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae8 AND
0xae9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xafe AND
0xaff DUP2
0xb00 MSTORE
0xb01 PUSH1 0x20
0xb03 ADD
0xb04 SWAP1
0xb05 DUP2
0xb06 MSTORE
0xb07 PUSH1 0x20
0xb09 ADD
0xb0a PUSH1 0x0
0xb0c SHA3
0xb0d PUSH1 0x0
0xb0f DUP5
0xb10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb25 AND
0xb26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3b AND
0xb3c DUP2
0xb3d MSTORE
0xb3e PUSH1 0x20
0xb40 ADD
0xb41 SWAP1
0xb42 DUP2
0xb43 MSTORE
0xb44 PUSH1 0x20
0xb46 ADD
0xb47 PUSH1 0x0
0xb49 SHA3
0xb4a DUP2
0xb4b SWAP1
0xb4c SSTORE
0xb4d POP
0xb4e DUP2
0xb4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb64 AND
0xb65 DUP4
0xb66 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7b AND
0xb7c PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xb9d DUP4
0xb9e PUSH1 0x40
0xba0 MLOAD
0xba1 DUP1
0xba2 DUP3
0xba3 DUP2
0xba4 MSTORE
0xba5 PUSH1 0x20
0xba7 ADD
0xba8 SWAP2
0xba9 POP
0xbaa POP
0xbab PUSH1 0x40
0xbad MLOAD
0xbae DUP1
0xbaf SWAP2
0xbb0 SUB
0xbb1 SWAP1
0xbb2 LOG3
0xbb3 POP
0xbb4 POP
0xbb5 POP
0xbb6 JUMP
---
0xacc: JUMPDEST 
0xace: V752 = 0x1
0xad0: V753 = 0x0
0xad3: V754 = 0xffffffffffffffffffffffffffffffffffffffff
0xae8: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xae9: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0xafe: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0xb00: M[0x0] = V757
0xb01: V758 = 0x20
0xb03: V759 = ADD 0x20 0x0
0xb06: M[0x20] = 0x1
0xb07: V760 = 0x20
0xb09: V761 = ADD 0x20 0x20
0xb0a: V762 = 0x0
0xb0c: V763 = SHA3 0x0 0x40
0xb0d: V764 = 0x0
0xb10: V765 = 0xffffffffffffffffffffffffffffffffffffffff
0xb25: V766 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xb26: V767 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3b: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff V766
0xb3d: M[0x0] = V768
0xb3e: V769 = 0x20
0xb40: V770 = ADD 0x20 0x0
0xb43: M[0x20] = V763
0xb44: V771 = 0x20
0xb46: V772 = ADD 0x20 0x20
0xb47: V773 = 0x0
0xb49: V774 = SHA3 0x0 0x40
0xb4c: S[V774] = S0
0xb4f: V775 = 0xffffffffffffffffffffffffffffffffffffffff
0xb64: V776 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xb66: V777 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7b: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xb7c: V779 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xb9e: V780 = 0x40
0xba0: V781 = M[0x40]
0xba4: M[V781] = S0
0xba5: V782 = 0x20
0xba7: V783 = ADD 0x20 V781
0xbab: V784 = 0x40
0xbad: V785 = M[0x40]
0xbb0: V786 = SUB V783 V785
0xbb2: LOG V785 V786 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V778 V776
0xbb6: JUMP {0x5fb, 0x6b5, 0x789, 0x918}
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x5fb, 0x6b5, 0x789, 0x918}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, 0x0]

================================

Block 0xbb7
[0xbb7:0xbec]
---
Predecessors: [0x60f, 0x922]
Successors: [0xbed, 0xc3d]
---
0xbb7 JUMPDEST
0xbb8 PUSH1 0x0
0xbba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbcf AND
0xbd0 DUP3
0xbd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe6 AND
0xbe7 EQ
0xbe8 ISZERO
0xbe9 PUSH2 0xc3d
0xbec JUMPI
---
0xbb7: JUMPDEST 
0xbb8: V787 = 0x0
0xbba: V788 = 0xffffffffffffffffffffffffffffffffffffffff
0xbcf: V789 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xbd1: V790 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe6: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xbe7: V792 = EQ V791 0x0
0xbe8: V793 = ISZERO V792
0xbe9: V794 = 0xc3d
0xbec: JUMPI 0xc3d V793
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x61c, 0x92f}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S8, S7, S6, S5, 0x0, {0x61c, 0x92f}, S2, S1, S0]

================================

Block 0xbed
[0xbed:0xc3c]
---
Predecessors: [0xbb7]
Successors: []
---
0xbed PUSH1 0x40
0xbef MLOAD
0xbf0 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc11 DUP2
0xc12 MSTORE
0xc13 PUSH1 0x4
0xc15 ADD
0xc16 DUP1
0xc17 DUP1
0xc18 PUSH1 0x20
0xc1a ADD
0xc1b DUP3
0xc1c DUP2
0xc1d SUB
0xc1e DUP3
0xc1f MSTORE
0xc20 PUSH1 0x23
0xc22 DUP2
0xc23 MSTORE
0xc24 PUSH1 0x20
0xc26 ADD
0xc27 DUP1
0xc28 PUSH2 0xedf
0xc2b PUSH1 0x23
0xc2d SWAP2
0xc2e CODECOPY
0xc2f PUSH1 0x40
0xc31 ADD
0xc32 SWAP2
0xc33 POP
0xc34 POP
0xc35 PUSH1 0x40
0xc37 MLOAD
0xc38 DUP1
0xc39 SWAP2
0xc3a SUB
0xc3b SWAP1
0xc3c REVERT
---
0xbed: V795 = 0x40
0xbef: V796 = M[0x40]
0xbf0: V797 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc12: M[V796] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc13: V798 = 0x4
0xc15: V799 = ADD 0x4 V796
0xc18: V800 = 0x20
0xc1a: V801 = ADD 0x20 V799
0xc1d: V802 = SUB V801 V799
0xc1f: M[V799] = V802
0xc20: V803 = 0x23
0xc23: M[V801] = 0x23
0xc24: V804 = 0x20
0xc26: V805 = ADD 0x20 V801
0xc28: V806 = 0xedf
0xc2b: V807 = 0x23
0xc2e: CODECOPY V805 0xedf 0x23
0xc2f: V808 = 0x40
0xc31: V809 = ADD 0x40 V805
0xc35: V810 = 0x40
0xc37: V811 = M[0x40]
0xc3a: V812 = SUB V809 V811
0xc3c: REVERT V811 V812
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x61c, 0x92f}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, 0x0, {0x61c, 0x92f}, S2, S1, S0]

================================

Block 0xc3d
[0xc3d:0xc8d]
---
Predecessors: [0xbb7]
Successors: [0xdcd]
---
0xc3d JUMPDEST
0xc3e PUSH2 0xc8e
0xc41 DUP2
0xc42 PUSH1 0x0
0xc44 DUP1
0xc45 DUP7
0xc46 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5b AND
0xc5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc71 AND
0xc72 DUP2
0xc73 MSTORE
0xc74 PUSH1 0x20
0xc76 ADD
0xc77 SWAP1
0xc78 DUP2
0xc79 MSTORE
0xc7a PUSH1 0x20
0xc7c ADD
0xc7d PUSH1 0x0
0xc7f SHA3
0xc80 SLOAD
0xc81 PUSH2 0xdcd
0xc84 SWAP1
0xc85 SWAP2
0xc86 SWAP1
0xc87 PUSH4 0xffffffff
0xc8c AND
0xc8d JUMP
---
0xc3d: JUMPDEST 
0xc3e: V813 = 0xc8e
0xc42: V814 = 0x0
0xc46: V815 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5b: V816 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xc5c: V817 = 0xffffffffffffffffffffffffffffffffffffffff
0xc71: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0xc73: M[0x0] = V818
0xc74: V819 = 0x20
0xc76: V820 = ADD 0x20 0x0
0xc79: M[0x20] = 0x0
0xc7a: V821 = 0x20
0xc7c: V822 = ADD 0x20 0x20
0xc7d: V823 = 0x0
0xc7f: V824 = SHA3 0x0 0x40
0xc80: V825 = S[V824]
0xc81: V826 = 0xdcd
0xc87: V827 = 0xffffffff
0xc8c: V828 = AND 0xffffffff 0xdcd
0xc8d: JUMP 0xdcd
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x61c, 0x92f}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xc8e, V825, S0]
Exit stack: [V13, S8, S7, S6, S5, 0x0, {0x61c, 0x92f}, S2, S1, S0, 0xc8e, V825, S0]

================================

Block 0xc8e
[0xc8e:0xd20]
---
Predecessors: [0xe45]
Successors: [0xe56]
---
0xc8e JUMPDEST
0xc8f PUSH1 0x0
0xc91 DUP1
0xc92 DUP6
0xc93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca8 AND
0xca9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcbe AND
0xcbf DUP2
0xcc0 MSTORE
0xcc1 PUSH1 0x20
0xcc3 ADD
0xcc4 SWAP1
0xcc5 DUP2
0xcc6 MSTORE
0xcc7 PUSH1 0x20
0xcc9 ADD
0xcca PUSH1 0x0
0xccc SHA3
0xccd DUP2
0xcce SWAP1
0xccf SSTORE
0xcd0 POP
0xcd1 PUSH2 0xd21
0xcd4 DUP2
0xcd5 PUSH1 0x0
0xcd7 DUP1
0xcd8 DUP6
0xcd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcee AND
0xcef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd04 AND
0xd05 DUP2
0xd06 MSTORE
0xd07 PUSH1 0x20
0xd09 ADD
0xd0a SWAP1
0xd0b DUP2
0xd0c MSTORE
0xd0d PUSH1 0x20
0xd0f ADD
0xd10 PUSH1 0x0
0xd12 SHA3
0xd13 SLOAD
0xd14 PUSH2 0xe56
0xd17 SWAP1
0xd18 SWAP2
0xd19 SWAP1
0xd1a PUSH4 0xffffffff
0xd1f AND
0xd20 JUMP
---
0xc8e: JUMPDEST 
0xc8f: V829 = 0x0
0xc93: V830 = 0xffffffffffffffffffffffffffffffffffffffff
0xca8: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xca9: V832 = 0xffffffffffffffffffffffffffffffffffffffff
0xcbe: V833 = AND 0xffffffffffffffffffffffffffffffffffffffff V831
0xcc0: M[0x0] = V833
0xcc1: V834 = 0x20
0xcc3: V835 = ADD 0x20 0x0
0xcc6: M[0x20] = 0x0
0xcc7: V836 = 0x20
0xcc9: V837 = ADD 0x20 0x20
0xcca: V838 = 0x0
0xccc: V839 = SHA3 0x0 0x40
0xccf: S[V839] = V901
0xcd1: V840 = 0xd21
0xcd5: V841 = 0x0
0xcd9: V842 = 0xffffffffffffffffffffffffffffffffffffffff
0xcee: V843 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xcef: V844 = 0xffffffffffffffffffffffffffffffffffffffff
0xd04: V845 = AND 0xffffffffffffffffffffffffffffffffffffffff V843
0xd06: M[0x0] = V845
0xd07: V846 = 0x20
0xd09: V847 = ADD 0x20 0x0
0xd0c: M[0x20] = 0x0
0xd0d: V848 = 0x20
0xd0f: V849 = ADD 0x20 0x20
0xd10: V850 = 0x0
0xd12: V851 = SHA3 0x0 0x40
0xd13: V852 = S[V851]
0xd14: V853 = 0xe56
0xd1a: V854 = 0xffffffff
0xd1f: V855 = AND 0xffffffff 0xe56
0xd20: JUMP 0xe56
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, V901]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xd21, V852, S1]
Exit stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, 0xd21, V852, S1]

================================

Block 0xd21
[0xd21:0xdcc]
---
Predecessors: [0xed4]
Successors: [0x61c, 0x92f]
---
0xd21 JUMPDEST
0xd22 PUSH1 0x0
0xd24 DUP1
0xd25 DUP5
0xd26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3b AND
0xd3c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd51 AND
0xd52 DUP2
0xd53 MSTORE
0xd54 PUSH1 0x20
0xd56 ADD
0xd57 SWAP1
0xd58 DUP2
0xd59 MSTORE
0xd5a PUSH1 0x20
0xd5c ADD
0xd5d PUSH1 0x0
0xd5f SHA3
0xd60 DUP2
0xd61 SWAP1
0xd62 SSTORE
0xd63 POP
0xd64 DUP2
0xd65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7a AND
0xd7b DUP4
0xd7c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd91 AND
0xd92 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xdb3 DUP4
0xdb4 PUSH1 0x40
0xdb6 MLOAD
0xdb7 DUP1
0xdb8 DUP3
0xdb9 DUP2
0xdba MSTORE
0xdbb PUSH1 0x20
0xdbd ADD
0xdbe SWAP2
0xdbf POP
0xdc0 POP
0xdc1 PUSH1 0x40
0xdc3 MLOAD
0xdc4 DUP1
0xdc5 SWAP2
0xdc6 SUB
0xdc7 SWAP1
0xdc8 LOG3
0xdc9 POP
0xdca POP
0xdcb POP
0xdcc JUMP
---
0xd21: JUMPDEST 
0xd22: V856 = 0x0
0xd26: V857 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3b: V858 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd3c: V859 = 0xffffffffffffffffffffffffffffffffffffffff
0xd51: V860 = AND 0xffffffffffffffffffffffffffffffffffffffff V858
0xd53: M[0x0] = V860
0xd54: V861 = 0x20
0xd56: V862 = ADD 0x20 0x0
0xd59: M[0x20] = 0x0
0xd5a: V863 = 0x20
0xd5c: V864 = ADD 0x20 0x20
0xd5d: V865 = 0x0
0xd5f: V866 = SHA3 0x0 0x40
0xd62: S[V866] = S0
0xd65: V867 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7a: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd7c: V869 = 0xffffffffffffffffffffffffffffffffffffffff
0xd91: V870 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd92: V871 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xdb4: V872 = 0x40
0xdb6: V873 = M[0x40]
0xdba: M[V873] = S1
0xdbb: V874 = 0x20
0xdbd: V875 = ADD 0x20 V873
0xdc1: V876 = 0x40
0xdc3: V877 = M[0x40]
0xdc6: V878 = SUB V875 V877
0xdc8: LOG V877 V878 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V870 V868
0xdcc: THROW 
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x61c, 0x92f}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5]

================================

Block 0xdcd
[0xdcd:0xdd7]
---
Predecessors: [0x61c, 0x87d, 0xc3d]
Successors: [0xdd8, 0xe45]
---
0xdcd JUMPDEST
0xdce PUSH1 0x0
0xdd0 DUP3
0xdd1 DUP3
0xdd2 GT
0xdd3 ISZERO
0xdd4 PUSH2 0xe45
0xdd7 JUMPI
---
0xdcd: JUMPDEST 
0xdce: V879 = 0x0
0xdd2: V880 = GT S0 S1
0xdd3: V881 = ISZERO V880
0xdd4: V882 = 0xe45
0xdd7: JUMPI 0xe45 V881
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x6b0, 0x913, 0xc8e}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x6b0, 0x913, 0xc8e}, S1, S0, 0x0]

================================

Block 0xdd8
[0xdd8:0xe44]
---
Predecessors: [0xdcd]
Successors: []
---
0xdd8 PUSH1 0x40
0xdda MLOAD
0xddb PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xdfc DUP2
0xdfd MSTORE
0xdfe PUSH1 0x4
0xe00 ADD
0xe01 DUP1
0xe02 DUP1
0xe03 PUSH1 0x20
0xe05 ADD
0xe06 DUP3
0xe07 DUP2
0xe08 SUB
0xe09 DUP3
0xe0a MSTORE
0xe0b PUSH1 0x1e
0xe0d DUP2
0xe0e MSTORE
0xe0f PUSH1 0x20
0xe11 ADD
0xe12 DUP1
0xe13 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000
0xe34 DUP2
0xe35 MSTORE
0xe36 POP
0xe37 PUSH1 0x20
0xe39 ADD
0xe3a SWAP2
0xe3b POP
0xe3c POP
0xe3d PUSH1 0x40
0xe3f MLOAD
0xe40 DUP1
0xe41 SWAP2
0xe42 SUB
0xe43 SWAP1
0xe44 REVERT
---
0xdd8: V883 = 0x40
0xdda: V884 = M[0x40]
0xddb: V885 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xdfd: M[V884] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xdfe: V886 = 0x4
0xe00: V887 = ADD 0x4 V884
0xe03: V888 = 0x20
0xe05: V889 = ADD 0x20 V887
0xe08: V890 = SUB V889 V887
0xe0a: M[V887] = V890
0xe0b: V891 = 0x1e
0xe0e: M[V889] = 0x1e
0xe0f: V892 = 0x20
0xe11: V893 = ADD 0x20 V889
0xe13: V894 = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000
0xe35: M[V893] = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000
0xe37: V895 = 0x20
0xe39: V896 = ADD 0x20 V893
0xe3d: V897 = 0x40
0xe3f: V898 = M[0x40]
0xe42: V899 = SUB V896 V898
0xe44: REVERT V898 V899
---
Entry stack: [V13, S12, S11, S10, S9, S8, {0x0, 0x61c, 0x92f}, S6, S5, S4, {0x6b0, 0x913, 0xc8e}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, {0x0, 0x61c, 0x92f}, S6, S5, S4, {0x6b0, 0x913, 0xc8e}, S2, S1, 0x0]

================================

Block 0xe45
[0xe45:0xe55]
---
Predecessors: [0xdcd]
Successors: [0x6b0, 0x913, 0xc8e]
---
0xe45 JUMPDEST
0xe46 PUSH1 0x0
0xe48 DUP3
0xe49 DUP5
0xe4a SUB
0xe4b SWAP1
0xe4c POP
0xe4d DUP1
0xe4e SWAP2
0xe4f POP
0xe50 POP
0xe51 SWAP3
0xe52 SWAP2
0xe53 POP
0xe54 POP
0xe55 JUMP
---
0xe45: JUMPDEST 
0xe46: V900 = 0x0
0xe4a: V901 = SUB S2 S1
0xe55: JUMP {0x6b0, 0x913, 0xc8e}
---
Entry stack: [V13, S12, S11, S10, S9, S8, {0x0, 0x61c, 0x92f}, S6, S5, S4, {0x6b0, 0x913, 0xc8e}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V901]
Exit stack: [V13, S12, S11, S10, S9, S8, {0x0, 0x61c, 0x92f}, S6, S5, S4, V901]

================================

Block 0xe56
[0xe56:0xe66]
---
Predecessors: [0x6ee, 0xc8e]
Successors: [0xe67, 0xed4]
---
0xe56 JUMPDEST
0xe57 PUSH1 0x0
0xe59 DUP1
0xe5a DUP3
0xe5b DUP5
0xe5c ADD
0xe5d SWAP1
0xe5e POP
0xe5f DUP4
0xe60 DUP2
0xe61 LT
0xe62 ISZERO
0xe63 PUSH2 0xed4
0xe66 JUMPI
---
0xe56: JUMPDEST 
0xe57: V902 = 0x0
0xe5c: V903 = ADD S1 S0
0xe61: V904 = LT V903 S1
0xe62: V905 = ISZERO V904
0xe63: V906 = 0xed4
0xe66: JUMPI 0xed4 V905
---
Entry stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x61c, 0x92f}, S5, S4, S3, {0x784, 0xd21}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V903]
Exit stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x61c, 0x92f}, S5, S4, S3, {0x784, 0xd21}, S1, S0, 0x0, V903]

================================

Block 0xe67
[0xe67:0xed3]
---
Predecessors: [0xe56]
Successors: []
---
0xe67 PUSH1 0x40
0xe69 MLOAD
0xe6a PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe8b DUP2
0xe8c MSTORE
0xe8d PUSH1 0x4
0xe8f ADD
0xe90 DUP1
0xe91 DUP1
0xe92 PUSH1 0x20
0xe94 ADD
0xe95 DUP3
0xe96 DUP2
0xe97 SUB
0xe98 DUP3
0xe99 MSTORE
0xe9a PUSH1 0x1b
0xe9c DUP2
0xe9d MSTORE
0xe9e PUSH1 0x20
0xea0 ADD
0xea1 DUP1
0xea2 PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xec3 DUP2
0xec4 MSTORE
0xec5 POP
0xec6 PUSH1 0x20
0xec8 ADD
0xec9 SWAP2
0xeca POP
0xecb POP
0xecc PUSH1 0x40
0xece MLOAD
0xecf DUP1
0xed0 SWAP2
0xed1 SUB
0xed2 SWAP1
0xed3 REVERT
---
0xe67: V907 = 0x40
0xe69: V908 = M[0x40]
0xe6a: V909 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe8c: M[V908] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe8d: V910 = 0x4
0xe8f: V911 = ADD 0x4 V908
0xe92: V912 = 0x20
0xe94: V913 = ADD 0x20 V911
0xe97: V914 = SUB V913 V911
0xe99: M[V911] = V914
0xe9a: V915 = 0x1b
0xe9d: M[V913] = 0x1b
0xe9e: V916 = 0x20
0xea0: V917 = ADD 0x20 V913
0xea2: V918 = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xec4: M[V917] = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xec6: V919 = 0x20
0xec8: V920 = ADD 0x20 V917
0xecc: V921 = 0x40
0xece: V922 = M[0x40]
0xed1: V923 = SUB V920 V922
0xed3: REVERT V922 V923
---
Entry stack: [V13, S13, S12, S11, S10, S9, {0x0, 0x61c, 0x92f}, S7, S6, S5, {0x784, 0xd21}, S3, S2, 0x0, V903]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, {0x0, 0x61c, 0x92f}, S7, S6, S5, {0x784, 0xd21}, S3, S2, 0x0, V903]

================================

Block 0xed4
[0xed4:0xedd]
---
Predecessors: [0xe56]
Successors: [0x784, 0xd21]
---
0xed4 JUMPDEST
0xed5 DUP1
0xed6 SWAP2
0xed7 POP
0xed8 POP
0xed9 SWAP3
0xeda SWAP2
0xedb POP
0xedc POP
0xedd JUMP
---
0xed4: JUMPDEST 
0xedd: JUMP {0x784, 0xd21}
---
Entry stack: [V13, S13, S12, S11, S10, S9, {0x0, 0x61c, 0x92f}, S7, S6, S5, {0x784, 0xd21}, S3, S2, 0x0, V903]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S13, S12, S11, S10, S9, {0x0, 0x61c, 0x92f}, S7, S6, S5, V903]

================================

Block 0xede
[0xede:0xf72]
---
Predecessors: []
Successors: []
---
0xede INVALID
0xedf GASLIMIT
0xee0 MSTORE
0xee1 NUMBER
0xee2 ORIGIN
0xee3 ADDRESS
0xee4 GASPRICE
0xee5 SHA3
0xee6 PUSH21 0x72616e7366657220746f20746865207a65726f2061
0xefc PUSH5 0x6472657373
0xf02 GASLIMIT
0xf03 MSTORE
0xf04 NUMBER
0xf05 ORIGIN
0xf06 ADDRESS
0xf07 GASPRICE
0xf08 SHA3
0xf09 PUSH2 0x7070
0xf0c PUSH19 0x6f766520746f20746865207a65726f20616464
0xf20 PUSH19 0x65737345524332303a20617070726f76652066
0xf34 PUSH19 0x6f6d20746865207a65726f2061646472657373
0xf48 LOG1
0xf49 PUSH6 0x627a7a723058
0xf50 SHA3
0xf51 MISSING 0x49
0xf52 PUSH18 0xaf0ae2f5f98d4030cc49b0708ceb6e6ed8ac
0xf65 EQ
0xf66 CALLDATALOAD
0xf67 SWAP11
0xf68 MISSING 0xd7
0xf69 MISSING 0xd3
0xf6a SWAP6
0xf6b MISSING 0xb2
0xf6c DUP1
0xf6d SAR
0xf6e MISSING 0x4e
0xf6f RETURNDATASIZE
0xf70 CODECOPY
0xf71 STOP
0xf72 MISSING 0x29
---
0xede: INVALID 
0xedf: V924 = GASLIMIT
0xee0: M[V924] = S0
0xee1: V925 = NUMBER
0xee2: V926 = ORIGIN
0xee3: V927 = ADDRESS
0xee4: V928 = GASPRICE
0xee5: V929 = SHA3 V928 V927
0xee6: V930 = 0x72616e7366657220746f20746865207a65726f2061
0xefc: V931 = 0x6472657373
0xf02: V932 = GASLIMIT
0xf03: M[V932] = 0x6472657373
0xf04: V933 = NUMBER
0xf05: V934 = ORIGIN
0xf06: V935 = ADDRESS
0xf07: V936 = GASPRICE
0xf08: V937 = SHA3 V936 V935
0xf09: V938 = 0x7070
0xf0c: V939 = 0x6f766520746f20746865207a65726f20616464
0xf20: V940 = 0x65737345524332303a20617070726f76652066
0xf34: V941 = 0x6f6d20746865207a65726f2061646472657373
0xf48: LOG 0x6f6d20746865207a65726f2061646472657373 0x65737345524332303a20617070726f76652066 0x6f766520746f20746865207a65726f20616464
0xf49: V942 = 0x627a7a723058
0xf50: V943 = SHA3 0x627a7a723058 0x7070
0xf51: MISSING 0x49
0xf52: V944 = 0xaf0ae2f5f98d4030cc49b0708ceb6e6ed8ac
0xf65: V945 = EQ 0xaf0ae2f5f98d4030cc49b0708ceb6e6ed8ac S0
0xf66: V946 = CALLDATALOAD V945
0xf68: MISSING 0xd7
0xf69: MISSING 0xd3
0xf6b: MISSING 0xb2
0xf6d: V947 = SAR S0 S0
0xf6e: MISSING 0x4e
0xf6f: V948 = RETURNDATASIZE
0xf70: CODECOPY V948 S0 S1
0xf71: STOP 
0xf72: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V943, V937, V934, V933, 0x72616e7366657220746f20746865207a65726f2061, V929, V926, V925, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V946, S6, S1, S2, S3, S4, S5, S0, V947]
Exit stack: []

================================

Function 0:
Private function
Entry block: 0xbb7
Exit block: 0xd21
Body: 0xbb7, 0xc3d, 0xc8e, 0xd21

Function 1:
Private function
Entry block: 0xdcd
Exit block: 0xe45
Body: 0xdcd, 0xe45

Function 2:
Private function
Entry block: 0xe56
Exit block: 0xed4
Body: 0xe56, 0xed4

