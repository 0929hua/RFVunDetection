Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xba]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xba
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xba
0xc: JUMPI 0xba V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xbf]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0xbf
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0xbf
0x40: JUMPI 0xbf V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x14f]
---
0x41 DUP1
0x42 PUSH4 0x95ea7b3
0x47 EQ
0x48 PUSH2 0x14f
0x4b JUMPI
---
0x42: V15 = 0x95ea7b3
0x47: V16 = EQ 0x95ea7b3 V11
0x48: V17 = 0x14f
0x4b: JUMPI 0x14f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x1b4]
---
0x4c DUP1
0x4d PUSH4 0x18160ddd
0x52 EQ
0x53 PUSH2 0x1b4
0x56 JUMPI
---
0x4d: V18 = 0x18160ddd
0x52: V19 = EQ 0x18160ddd V11
0x53: V20 = 0x1b4
0x56: JUMPI 0x1b4 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1df]
---
0x57 DUP1
0x58 PUSH4 0x23b872dd
0x5d EQ
0x5e PUSH2 0x1df
0x61 JUMPI
---
0x58: V21 = 0x23b872dd
0x5d: V22 = EQ 0x23b872dd V11
0x5e: V23 = 0x1df
0x61: JUMPI 0x1df V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x264]
---
0x62 DUP1
0x63 PUSH4 0x30e0789e
0x68 EQ
0x69 PUSH2 0x264
0x6c JUMPI
---
0x63: V24 = 0x30e0789e
0x68: V25 = EQ 0x30e0789e V11
0x69: V26 = 0x264
0x6c: JUMPI 0x264 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x2d1]
---
0x6d DUP1
0x6e PUSH4 0x313ce567
0x73 EQ
0x74 PUSH2 0x2d1
0x77 JUMPI
---
0x6e: V27 = 0x313ce567
0x73: V28 = EQ 0x313ce567 V11
0x74: V29 = 0x2d1
0x77: JUMPI 0x2d1 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2fc]
---
0x78 DUP1
0x79 PUSH4 0x39509351
0x7e EQ
0x7f PUSH2 0x2fc
0x82 JUMPI
---
0x79: V30 = 0x39509351
0x7e: V31 = EQ 0x39509351 V11
0x7f: V32 = 0x2fc
0x82: JUMPI 0x2fc V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x361]
---
0x83 DUP1
0x84 PUSH4 0x70a08231
0x89 EQ
0x8a PUSH2 0x361
0x8d JUMPI
---
0x84: V33 = 0x70a08231
0x89: V34 = EQ 0x70a08231 V11
0x8a: V35 = 0x361
0x8d: JUMPI 0x361 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x3b8]
---
0x8e DUP1
0x8f PUSH4 0x95d89b41
0x94 EQ
0x95 PUSH2 0x3b8
0x98 JUMPI
---
0x8f: V36 = 0x95d89b41
0x94: V37 = EQ 0x95d89b41 V11
0x95: V38 = 0x3b8
0x98: JUMPI 0x3b8 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x448]
---
0x99 DUP1
0x9a PUSH4 0xa457c2d7
0x9f EQ
0xa0 PUSH2 0x448
0xa3 JUMPI
---
0x9a: V39 = 0xa457c2d7
0x9f: V40 = EQ 0xa457c2d7 V11
0xa0: V41 = 0x448
0xa3: JUMPI 0x448 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x4ad]
---
0xa4 DUP1
0xa5 PUSH4 0xa9059cbb
0xaa EQ
0xab PUSH2 0x4ad
0xae JUMPI
---
0xa5: V42 = 0xa9059cbb
0xaa: V43 = EQ 0xa9059cbb V11
0xab: V44 = 0x4ad
0xae: JUMPI 0x4ad V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x512]
---
0xaf DUP1
0xb0 PUSH4 0xdd62ed3e
0xb5 EQ
0xb6 PUSH2 0x512
0xb9 JUMPI
---
0xb0: V45 = 0xdd62ed3e
0xb5: V46 = EQ 0xdd62ed3e V11
0xb6: V47 = 0x512
0xb9: JUMPI 0x512 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xbe]
---
Predecessors: [0x0, 0xaf]
Successors: []
---
0xba JUMPDEST
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xba: JUMPDEST 
0xbb: V48 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbf
[0xbf:0xc6]
---
Predecessors: [0xd]
Successors: [0xc7, 0xcb]
---
0xbf JUMPDEST
0xc0 CALLVALUE
0xc1 DUP1
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xbf: JUMPDEST 
0xc0: V49 = CALLVALUE
0xc2: V50 = ISZERO V49
0xc3: V51 = 0xcb
0xc6: JUMPI 0xcb V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V11, V49]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xbf]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V52 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V11, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49]

================================

Block 0xcb
[0xcb:0xd3]
---
Predecessors: [0xbf]
Successors: [0x589]
---
0xcb JUMPDEST
0xcc POP
0xcd PUSH2 0xd4
0xd0 PUSH2 0x589
0xd3 JUMP
---
0xcb: JUMPDEST 
0xcd: V53 = 0xd4
0xd0: V54 = 0x589
0xd3: JUMP 0x589
---
Entry stack: [V11, V49]
Stack pops: 1
Stack additions: [0xd4]
Exit stack: [V11, 0xd4]

================================

Block 0xd4
[0xd4:0xf8]
---
Predecessors: [0x61f]
Successors: [0xf9]
---
0xd4 JUMPDEST
0xd5 PUSH1 0x40
0xd7 MLOAD
0xd8 DUP1
0xd9 DUP1
0xda PUSH1 0x20
0xdc ADD
0xdd DUP3
0xde DUP2
0xdf SUB
0xe0 DUP3
0xe1 MSTORE
0xe2 DUP4
0xe3 DUP2
0xe4 DUP2
0xe5 MLOAD
0xe6 DUP2
0xe7 MSTORE
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP2
0xec POP
0xed DUP1
0xee MLOAD
0xef SWAP1
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP1
0xf4 DUP1
0xf5 DUP4
0xf6 DUP4
0xf7 PUSH1 0x0
---
0xd4: JUMPDEST 
0xd5: V55 = 0x40
0xd7: V56 = M[0x40]
0xda: V57 = 0x20
0xdc: V58 = ADD 0x20 V56
0xdf: V59 = SUB V58 V56
0xe1: M[V56] = V59
0xe5: V60 = M[V411]
0xe7: M[V58] = V60
0xe8: V61 = 0x20
0xea: V62 = ADD 0x20 V58
0xee: V63 = M[V411]
0xf0: V64 = 0x20
0xf2: V65 = ADD 0x20 V411
0xf7: V66 = 0x0
---
Entry stack: [V11, 0xd4, V411]
Stack pops: 1
Stack additions: [S0, V56, V56, V62, V65, V63, V63, V62, V65, 0x0]
Exit stack: [V11, 0xd4, V411, V56, V56, V62, V65, V63, V63, V62, V65, 0x0]

================================

Block 0xf9
[0xf9:0x101]
---
Predecessors: [0xd4, 0x102]
Successors: [0x102, 0x114]
---
0xf9 JUMPDEST
0xfa DUP4
0xfb DUP2
0xfc LT
0xfd ISZERO
0xfe PUSH2 0x114
0x101 JUMPI
---
0xf9: JUMPDEST 
0xfc: V67 = LT S0 V63
0xfd: V68 = ISZERO V67
0xfe: V69 = 0x114
0x101: JUMPI 0x114 V68
---
Entry stack: [V11, 0xd4, V411, V56, V56, V62, V65, V63, V63, V62, V65, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xd4, V411, V56, V56, V62, V65, V63, V63, V62, V65, S0]

================================

Block 0x102
[0x102:0x113]
---
Predecessors: [0xf9]
Successors: [0xf9]
---
0x102 DUP1
0x103 DUP3
0x104 ADD
0x105 MLOAD
0x106 DUP2
0x107 DUP5
0x108 ADD
0x109 MSTORE
0x10a PUSH1 0x20
0x10c DUP2
0x10d ADD
0x10e SWAP1
0x10f POP
0x110 PUSH2 0xf9
0x113 JUMP
---
0x104: V70 = ADD V65 S0
0x105: V71 = M[V70]
0x108: V72 = ADD V62 S0
0x109: M[V72] = V71
0x10a: V73 = 0x20
0x10d: V74 = ADD S0 0x20
0x110: V75 = 0xf9
0x113: JUMP 0xf9
---
Entry stack: [V11, 0xd4, V411, V56, V56, V62, V65, V63, V63, V62, V65, S0]
Stack pops: 3
Stack additions: [S2, S1, V74]
Exit stack: [V11, 0xd4, V411, V56, V56, V62, V65, V63, V63, V62, V65, V74]

================================

Block 0x114
[0x114:0x127]
---
Predecessors: [0xf9]
Successors: [0x128, 0x141]
---
0x114 JUMPDEST
0x115 POP
0x116 POP
0x117 POP
0x118 POP
0x119 SWAP1
0x11a POP
0x11b SWAP1
0x11c DUP2
0x11d ADD
0x11e SWAP1
0x11f PUSH1 0x1f
0x121 AND
0x122 DUP1
0x123 ISZERO
0x124 PUSH2 0x141
0x127 JUMPI
---
0x114: JUMPDEST 
0x11d: V76 = ADD V63 V62
0x11f: V77 = 0x1f
0x121: V78 = AND 0x1f V63
0x123: V79 = ISZERO V78
0x124: V80 = 0x141
0x127: JUMPI 0x141 V79
---
Entry stack: [V11, 0xd4, V411, V56, V56, V62, V65, V63, V63, V62, V65, S0]
Stack pops: 7
Stack additions: [V76, V78]
Exit stack: [V11, 0xd4, V411, V56, V56, V76, V78]

================================

Block 0x128
[0x128:0x140]
---
Predecessors: [0x114]
Successors: [0x141]
---
0x128 DUP1
0x129 DUP3
0x12a SUB
0x12b DUP1
0x12c MLOAD
0x12d PUSH1 0x1
0x12f DUP4
0x130 PUSH1 0x20
0x132 SUB
0x133 PUSH2 0x100
0x136 EXP
0x137 SUB
0x138 NOT
0x139 AND
0x13a DUP2
0x13b MSTORE
0x13c PUSH1 0x20
0x13e ADD
0x13f SWAP2
0x140 POP
---
0x12a: V81 = SUB V76 V78
0x12c: V82 = M[V81]
0x12d: V83 = 0x1
0x130: V84 = 0x20
0x132: V85 = SUB 0x20 V78
0x133: V86 = 0x100
0x136: V87 = EXP 0x100 V85
0x137: V88 = SUB V87 0x1
0x138: V89 = NOT V88
0x139: V90 = AND V89 V82
0x13b: M[V81] = V90
0x13c: V91 = 0x20
0x13e: V92 = ADD 0x20 V81
---
Entry stack: [V11, 0xd4, V411, V56, V56, V76, V78]
Stack pops: 2
Stack additions: [V92, S0]
Exit stack: [V11, 0xd4, V411, V56, V56, V92, V78]

================================

Block 0x141
[0x141:0x14e]
---
Predecessors: [0x114, 0x128]
Successors: []
---
0x141 JUMPDEST
0x142 POP
0x143 SWAP3
0x144 POP
0x145 POP
0x146 POP
0x147 PUSH1 0x40
0x149 MLOAD
0x14a DUP1
0x14b SWAP2
0x14c SUB
0x14d SWAP1
0x14e RETURN
---
0x141: JUMPDEST 
0x147: V93 = 0x40
0x149: V94 = M[0x40]
0x14c: V95 = SUB S1 V94
0x14e: RETURN V94 V95
---
Entry stack: [V11, 0xd4, V411, V56, V56, S1, V78]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xd4]

================================

Block 0x14f
[0x14f:0x156]
---
Predecessors: [0x41]
Successors: [0x157, 0x15b]
---
0x14f JUMPDEST
0x150 CALLVALUE
0x151 DUP1
0x152 ISZERO
0x153 PUSH2 0x15b
0x156 JUMPI
---
0x14f: JUMPDEST 
0x150: V96 = CALLVALUE
0x152: V97 = ISZERO V96
0x153: V98 = 0x15b
0x156: JUMPI 0x15b V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V11, V96]

================================

Block 0x157
[0x157:0x15a]
---
Predecessors: [0x14f]
Successors: []
---
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
---
0x157: V99 = 0x0
0x15a: REVERT 0x0 0x0
---
Entry stack: [V11, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96]

================================

Block 0x15b
[0x15b:0x199]
---
Predecessors: [0x14f]
Successors: [0x627]
---
0x15b JUMPDEST
0x15c POP
0x15d PUSH2 0x19a
0x160 PUSH1 0x4
0x162 DUP1
0x163 CALLDATASIZE
0x164 SUB
0x165 DUP2
0x166 ADD
0x167 SWAP1
0x168 DUP1
0x169 DUP1
0x16a CALLDATALOAD
0x16b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x180 AND
0x181 SWAP1
0x182 PUSH1 0x20
0x184 ADD
0x185 SWAP1
0x186 SWAP3
0x187 SWAP2
0x188 SWAP1
0x189 DUP1
0x18a CALLDATALOAD
0x18b SWAP1
0x18c PUSH1 0x20
0x18e ADD
0x18f SWAP1
0x190 SWAP3
0x191 SWAP2
0x192 SWAP1
0x193 POP
0x194 POP
0x195 POP
0x196 PUSH2 0x627
0x199 JUMP
---
0x15b: JUMPDEST 
0x15d: V100 = 0x19a
0x160: V101 = 0x4
0x163: V102 = CALLDATASIZE
0x164: V103 = SUB V102 0x4
0x166: V104 = ADD 0x4 V103
0x16a: V105 = CALLDATALOAD 0x4
0x16b: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x180: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x182: V108 = 0x20
0x184: V109 = ADD 0x20 0x4
0x18a: V110 = CALLDATALOAD 0x24
0x18c: V111 = 0x20
0x18e: V112 = ADD 0x20 0x24
0x196: V113 = 0x627
0x199: JUMP 0x627
---
Entry stack: [V11, V96]
Stack pops: 1
Stack additions: [0x19a, V107, V110]
Exit stack: [V11, 0x19a, V107, V110]

================================

Block 0x19a
[0x19a:0x1b3]
---
Predecessors: [0x664]
Successors: []
---
0x19a JUMPDEST
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f DUP3
0x1a0 ISZERO
0x1a1 ISZERO
0x1a2 ISZERO
0x1a3 ISZERO
0x1a4 DUP2
0x1a5 MSTORE
0x1a6 PUSH1 0x20
0x1a8 ADD
0x1a9 SWAP2
0x1aa POP
0x1ab POP
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af DUP1
0x1b0 SWAP2
0x1b1 SUB
0x1b2 SWAP1
0x1b3 RETURN
---
0x19a: JUMPDEST 
0x19b: V114 = 0x40
0x19d: V115 = M[0x40]
0x1a0: V116 = ISZERO 0x1
0x1a1: V117 = ISZERO 0x0
0x1a2: V118 = ISZERO 0x1
0x1a3: V119 = ISZERO 0x0
0x1a5: M[V115] = 0x1
0x1a6: V120 = 0x20
0x1a8: V121 = ADD 0x20 V115
0x1ac: V122 = 0x40
0x1ae: V123 = M[0x40]
0x1b1: V124 = SUB V121 V123
0x1b3: RETURN V123 V124
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b4
[0x1b4:0x1bb]
---
Predecessors: [0x4c]
Successors: [0x1bc, 0x1c0]
---
0x1b4 JUMPDEST
0x1b5 CALLVALUE
0x1b6 DUP1
0x1b7 ISZERO
0x1b8 PUSH2 0x1c0
0x1bb JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V125 = CALLVALUE
0x1b7: V126 = ISZERO V125
0x1b8: V127 = 0x1c0
0x1bb: JUMPI 0x1c0 V126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V11, V125]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0x1b4]
Successors: []
---
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf REVERT
---
0x1bc: V128 = 0x0
0x1bf: REVERT 0x0 0x0
---
Entry stack: [V11, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V125]

================================

Block 0x1c0
[0x1c0:0x1c8]
---
Predecessors: [0x1b4]
Successors: [0x754]
---
0x1c0 JUMPDEST
0x1c1 POP
0x1c2 PUSH2 0x1c9
0x1c5 PUSH2 0x754
0x1c8 JUMP
---
0x1c0: JUMPDEST 
0x1c2: V129 = 0x1c9
0x1c5: V130 = 0x754
0x1c8: JUMP 0x754
---
Entry stack: [V11, V125]
Stack pops: 1
Stack additions: [0x1c9]
Exit stack: [V11, 0x1c9]

================================

Block 0x1c9
[0x1c9:0x1de]
---
Predecessors: [0x754]
Successors: []
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd DUP1
0x1ce DUP3
0x1cf DUP2
0x1d0 MSTORE
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 SWAP2
0x1d5 POP
0x1d6 POP
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da DUP1
0x1db SWAP2
0x1dc SUB
0x1dd SWAP1
0x1de RETURN
---
0x1c9: JUMPDEST 
0x1ca: V131 = 0x40
0x1cc: V132 = M[0x40]
0x1d0: M[V132] = V506
0x1d1: V133 = 0x20
0x1d3: V134 = ADD 0x20 V132
0x1d7: V135 = 0x40
0x1d9: V136 = M[0x40]
0x1dc: V137 = SUB V134 V136
0x1de: RETURN V136 V137
---
Entry stack: [V11, V506]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1df
[0x1df:0x1e6]
---
Predecessors: [0x57]
Successors: [0x1e7, 0x1eb]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 DUP1
0x1e2 ISZERO
0x1e3 PUSH2 0x1eb
0x1e6 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V138 = CALLVALUE
0x1e2: V139 = ISZERO V138
0x1e3: V140 = 0x1eb
0x1e6: JUMPI 0x1eb V139
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V138]
Exit stack: [V11, V138]

================================

Block 0x1e7
[0x1e7:0x1ea]
---
Predecessors: [0x1df]
Successors: []
---
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea REVERT
---
0x1e7: V141 = 0x0
0x1ea: REVERT 0x0 0x0
---
Entry stack: [V11, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V138]

================================

Block 0x1eb
[0x1eb:0x249]
---
Predecessors: [0x1df]
Successors: [0x75e]
---
0x1eb JUMPDEST
0x1ec POP
0x1ed PUSH2 0x24a
0x1f0 PUSH1 0x4
0x1f2 DUP1
0x1f3 CALLDATASIZE
0x1f4 SUB
0x1f5 DUP2
0x1f6 ADD
0x1f7 SWAP1
0x1f8 DUP1
0x1f9 DUP1
0x1fa CALLDATALOAD
0x1fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x210 AND
0x211 SWAP1
0x212 PUSH1 0x20
0x214 ADD
0x215 SWAP1
0x216 SWAP3
0x217 SWAP2
0x218 SWAP1
0x219 DUP1
0x21a CALLDATALOAD
0x21b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x230 AND
0x231 SWAP1
0x232 PUSH1 0x20
0x234 ADD
0x235 SWAP1
0x236 SWAP3
0x237 SWAP2
0x238 SWAP1
0x239 DUP1
0x23a CALLDATALOAD
0x23b SWAP1
0x23c PUSH1 0x20
0x23e ADD
0x23f SWAP1
0x240 SWAP3
0x241 SWAP2
0x242 SWAP1
0x243 POP
0x244 POP
0x245 POP
0x246 PUSH2 0x75e
0x249 JUMP
---
0x1eb: JUMPDEST 
0x1ed: V142 = 0x24a
0x1f0: V143 = 0x4
0x1f3: V144 = CALLDATASIZE
0x1f4: V145 = SUB V144 0x4
0x1f6: V146 = ADD 0x4 V145
0x1fa: V147 = CALLDATALOAD 0x4
0x1fb: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x210: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x212: V150 = 0x20
0x214: V151 = ADD 0x20 0x4
0x21a: V152 = CALLDATALOAD 0x24
0x21b: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x230: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x232: V155 = 0x20
0x234: V156 = ADD 0x20 0x24
0x23a: V157 = CALLDATALOAD 0x44
0x23c: V158 = 0x20
0x23e: V159 = ADD 0x20 0x44
0x246: V160 = 0x75e
0x249: JUMP 0x75e
---
Entry stack: [V11, V138]
Stack pops: 1
Stack additions: [0x24a, V149, V154, V157]
Exit stack: [V11, 0x24a, V149, V154, V157]

================================

Block 0x24a
[0x24a:0x263]
---
Predecessors: [0x905]
Successors: []
---
0x24a JUMPDEST
0x24b PUSH1 0x40
0x24d MLOAD
0x24e DUP1
0x24f DUP3
0x250 ISZERO
0x251 ISZERO
0x252 ISZERO
0x253 ISZERO
0x254 DUP2
0x255 MSTORE
0x256 PUSH1 0x20
0x258 ADD
0x259 SWAP2
0x25a POP
0x25b POP
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 SWAP2
0x261 SUB
0x262 SWAP1
0x263 RETURN
---
0x24a: JUMPDEST 
0x24b: V161 = 0x40
0x24d: V162 = M[0x40]
0x250: V163 = ISZERO 0x1
0x251: V164 = ISZERO 0x0
0x252: V165 = ISZERO 0x1
0x253: V166 = ISZERO 0x0
0x255: M[V162] = 0x1
0x256: V167 = 0x20
0x258: V168 = ADD 0x20 V162
0x25c: V169 = 0x40
0x25e: V170 = M[0x40]
0x261: V171 = SUB V168 V170
0x263: RETURN V170 V171
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x264
[0x264:0x26b]
---
Predecessors: [0x62]
Successors: [0x26c, 0x270]
---
0x264 JUMPDEST
0x265 CALLVALUE
0x266 DUP1
0x267 ISZERO
0x268 PUSH2 0x270
0x26b JUMPI
---
0x264: JUMPDEST 
0x265: V172 = CALLVALUE
0x267: V173 = ISZERO V172
0x268: V174 = 0x270
0x26b: JUMPI 0x270 V173
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V172]
Exit stack: [V11, V172]

================================

Block 0x26c
[0x26c:0x26f]
---
Predecessors: [0x264]
Successors: []
---
0x26c PUSH1 0x0
0x26e DUP1
0x26f REVERT
---
0x26c: V175 = 0x0
0x26f: REVERT 0x0 0x0
---
Entry stack: [V11, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V172]

================================

Block 0x270
[0x270:0x2ce]
---
Predecessors: [0x264]
Successors: [0x910]
---
0x270 JUMPDEST
0x271 POP
0x272 PUSH2 0x2cf
0x275 PUSH1 0x4
0x277 DUP1
0x278 CALLDATASIZE
0x279 SUB
0x27a DUP2
0x27b ADD
0x27c SWAP1
0x27d DUP1
0x27e DUP1
0x27f CALLDATALOAD
0x280 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x295 AND
0x296 SWAP1
0x297 PUSH1 0x20
0x299 ADD
0x29a SWAP1
0x29b SWAP3
0x29c SWAP2
0x29d SWAP1
0x29e DUP1
0x29f CALLDATALOAD
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 SWAP1
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba SWAP1
0x2bb SWAP3
0x2bc SWAP2
0x2bd SWAP1
0x2be DUP1
0x2bf CALLDATALOAD
0x2c0 SWAP1
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 SWAP1
0x2c5 SWAP3
0x2c6 SWAP2
0x2c7 SWAP1
0x2c8 POP
0x2c9 POP
0x2ca POP
0x2cb PUSH2 0x910
0x2ce JUMP
---
0x270: JUMPDEST 
0x272: V176 = 0x2cf
0x275: V177 = 0x4
0x278: V178 = CALLDATASIZE
0x279: V179 = SUB V178 0x4
0x27b: V180 = ADD 0x4 V179
0x27f: V181 = CALLDATALOAD 0x4
0x280: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x295: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x297: V184 = 0x20
0x299: V185 = ADD 0x20 0x4
0x29f: V186 = CALLDATALOAD 0x24
0x2a0: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x2b7: V189 = 0x20
0x2b9: V190 = ADD 0x20 0x24
0x2bf: V191 = CALLDATALOAD 0x44
0x2c1: V192 = 0x20
0x2c3: V193 = ADD 0x20 0x44
0x2cb: V194 = 0x910
0x2ce: JUMP 0x910
---
Entry stack: [V11, V172]
Stack pops: 1
Stack additions: [0x2cf, V183, V188, V191]
Exit stack: [V11, 0x2cf, V183, V188, V191]

================================

Block 0x2cf
[0x2cf:0x2d0]
---
Predecessors: [0xa59]
Successors: []
---
0x2cf JUMPDEST
0x2d0 STOP
---
0x2cf: JUMPDEST 
0x2d0: STOP 
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0x2d1
[0x2d1:0x2d8]
---
Predecessors: [0x6d]
Successors: [0x2d9, 0x2dd]
---
0x2d1 JUMPDEST
0x2d2 CALLVALUE
0x2d3 DUP1
0x2d4 ISZERO
0x2d5 PUSH2 0x2dd
0x2d8 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V195 = CALLVALUE
0x2d4: V196 = ISZERO V195
0x2d5: V197 = 0x2dd
0x2d8: JUMPI 0x2dd V196
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V195]
Exit stack: [V11, V195]

================================

Block 0x2d9
[0x2d9:0x2dc]
---
Predecessors: [0x2d1]
Successors: []
---
0x2d9 PUSH1 0x0
0x2db DUP1
0x2dc REVERT
---
0x2d9: V198 = 0x0
0x2dc: REVERT 0x0 0x0
---
Entry stack: [V11, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V195]

================================

Block 0x2dd
[0x2dd:0x2e5]
---
Predecessors: [0x2d1]
Successors: [0xb07]
---
0x2dd JUMPDEST
0x2de POP
0x2df PUSH2 0x2e6
0x2e2 PUSH2 0xb07
0x2e5 JUMP
---
0x2dd: JUMPDEST 
0x2df: V199 = 0x2e6
0x2e2: V200 = 0xb07
0x2e5: JUMP 0xb07
---
Entry stack: [V11, V195]
Stack pops: 1
Stack additions: [0x2e6]
Exit stack: [V11, 0x2e6]

================================

Block 0x2e6
[0x2e6:0x2fb]
---
Predecessors: [0xb07]
Successors: []
---
0x2e6 JUMPDEST
0x2e7 PUSH1 0x40
0x2e9 MLOAD
0x2ea DUP1
0x2eb DUP3
0x2ec DUP2
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 ADD
0x2f1 SWAP2
0x2f2 POP
0x2f3 POP
0x2f4 PUSH1 0x40
0x2f6 MLOAD
0x2f7 DUP1
0x2f8 SWAP2
0x2f9 SUB
0x2fa SWAP1
0x2fb RETURN
---
0x2e6: JUMPDEST 
0x2e7: V201 = 0x40
0x2e9: V202 = M[0x40]
0x2ed: M[V202] = V675
0x2ee: V203 = 0x20
0x2f0: V204 = ADD 0x20 V202
0x2f4: V205 = 0x40
0x2f6: V206 = M[0x40]
0x2f9: V207 = SUB V204 V206
0x2fb: RETURN V206 V207
---
Entry stack: [V11, 0x2e6, V675]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2e6]

================================

Block 0x2fc
[0x2fc:0x303]
---
Predecessors: [0x78]
Successors: [0x304, 0x308]
---
0x2fc JUMPDEST
0x2fd CALLVALUE
0x2fe DUP1
0x2ff ISZERO
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V208 = CALLVALUE
0x2ff: V209 = ISZERO V208
0x300: V210 = 0x308
0x303: JUMPI 0x308 V209
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V208]
Exit stack: [V11, V208]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2fc]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V211 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V11, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V208]

================================

Block 0x308
[0x308:0x346]
---
Predecessors: [0x2fc]
Successors: [0xb0d]
---
0x308 JUMPDEST
0x309 POP
0x30a PUSH2 0x347
0x30d PUSH1 0x4
0x30f DUP1
0x310 CALLDATASIZE
0x311 SUB
0x312 DUP2
0x313 ADD
0x314 SWAP1
0x315 DUP1
0x316 DUP1
0x317 CALLDATALOAD
0x318 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32d AND
0x32e SWAP1
0x32f PUSH1 0x20
0x331 ADD
0x332 SWAP1
0x333 SWAP3
0x334 SWAP2
0x335 SWAP1
0x336 DUP1
0x337 CALLDATALOAD
0x338 SWAP1
0x339 PUSH1 0x20
0x33b ADD
0x33c SWAP1
0x33d SWAP3
0x33e SWAP2
0x33f SWAP1
0x340 POP
0x341 POP
0x342 POP
0x343 PUSH2 0xb0d
0x346 JUMP
---
0x308: JUMPDEST 
0x30a: V212 = 0x347
0x30d: V213 = 0x4
0x310: V214 = CALLDATASIZE
0x311: V215 = SUB V214 0x4
0x313: V216 = ADD 0x4 V215
0x317: V217 = CALLDATALOAD 0x4
0x318: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x32f: V220 = 0x20
0x331: V221 = ADD 0x20 0x4
0x337: V222 = CALLDATALOAD 0x24
0x339: V223 = 0x20
0x33b: V224 = ADD 0x20 0x24
0x343: V225 = 0xb0d
0x346: JUMP 0xb0d
---
Entry stack: [V11, V208]
Stack pops: 1
Stack additions: [0x347, V219, V222]
Exit stack: [V11, 0x347, V219, V222]

================================

Block 0x347
[0x347:0x360]
---
Predecessors: [0xbd9]
Successors: []
---
0x347 JUMPDEST
0x348 PUSH1 0x40
0x34a MLOAD
0x34b DUP1
0x34c DUP3
0x34d ISZERO
0x34e ISZERO
0x34f ISZERO
0x350 ISZERO
0x351 DUP2
0x352 MSTORE
0x353 PUSH1 0x20
0x355 ADD
0x356 SWAP2
0x357 POP
0x358 POP
0x359 PUSH1 0x40
0x35b MLOAD
0x35c DUP1
0x35d SWAP2
0x35e SUB
0x35f SWAP1
0x360 RETURN
---
0x347: JUMPDEST 
0x348: V226 = 0x40
0x34a: V227 = M[0x40]
0x34d: V228 = ISZERO 0x1
0x34e: V229 = ISZERO 0x0
0x34f: V230 = ISZERO 0x1
0x350: V231 = ISZERO 0x0
0x352: M[V227] = 0x1
0x353: V232 = 0x20
0x355: V233 = ADD 0x20 V227
0x359: V234 = 0x40
0x35b: V235 = M[0x40]
0x35e: V236 = SUB V233 V235
0x360: RETURN V235 V236
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S6, S5, S4, S3, S2, S1]

================================

Block 0x361
[0x361:0x368]
---
Predecessors: [0x83]
Successors: [0x369, 0x36d]
---
0x361 JUMPDEST
0x362 CALLVALUE
0x363 DUP1
0x364 ISZERO
0x365 PUSH2 0x36d
0x368 JUMPI
---
0x361: JUMPDEST 
0x362: V237 = CALLVALUE
0x364: V238 = ISZERO V237
0x365: V239 = 0x36d
0x368: JUMPI 0x36d V238
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V237]
Exit stack: [V11, V237]

================================

Block 0x369
[0x369:0x36c]
---
Predecessors: [0x361]
Successors: []
---
0x369 PUSH1 0x0
0x36b DUP1
0x36c REVERT
---
0x369: V240 = 0x0
0x36c: REVERT 0x0 0x0
---
Entry stack: [V11, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V237]

================================

Block 0x36d
[0x36d:0x3a1]
---
Predecessors: [0x361]
Successors: [0xd44]
---
0x36d JUMPDEST
0x36e POP
0x36f PUSH2 0x3a2
0x372 PUSH1 0x4
0x374 DUP1
0x375 CALLDATASIZE
0x376 SUB
0x377 DUP2
0x378 ADD
0x379 SWAP1
0x37a DUP1
0x37b DUP1
0x37c CALLDATALOAD
0x37d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x392 AND
0x393 SWAP1
0x394 PUSH1 0x20
0x396 ADD
0x397 SWAP1
0x398 SWAP3
0x399 SWAP2
0x39a SWAP1
0x39b POP
0x39c POP
0x39d POP
0x39e PUSH2 0xd44
0x3a1 JUMP
---
0x36d: JUMPDEST 
0x36f: V241 = 0x3a2
0x372: V242 = 0x4
0x375: V243 = CALLDATASIZE
0x376: V244 = SUB V243 0x4
0x378: V245 = ADD 0x4 V244
0x37c: V246 = CALLDATALOAD 0x4
0x37d: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x392: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x394: V249 = 0x20
0x396: V250 = ADD 0x20 0x4
0x39e: V251 = 0xd44
0x3a1: JUMP 0xd44
---
Entry stack: [V11, V237]
Stack pops: 1
Stack additions: [0x3a2, V248]
Exit stack: [V11, 0x3a2, V248]

================================

Block 0x3a2
[0x3a2:0x3b7]
---
Predecessors: [0xd44]
Successors: []
---
0x3a2 JUMPDEST
0x3a3 PUSH1 0x40
0x3a5 MLOAD
0x3a6 DUP1
0x3a7 DUP3
0x3a8 DUP2
0x3a9 MSTORE
0x3aa PUSH1 0x20
0x3ac ADD
0x3ad SWAP2
0x3ae POP
0x3af POP
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 DUP1
0x3b4 SWAP2
0x3b5 SUB
0x3b6 SWAP1
0x3b7 RETURN
---
0x3a2: JUMPDEST 
0x3a3: V252 = 0x40
0x3a5: V253 = M[0x40]
0x3a9: M[V253] = V792
0x3aa: V254 = 0x20
0x3ac: V255 = ADD 0x20 V253
0x3b0: V256 = 0x40
0x3b2: V257 = M[0x40]
0x3b5: V258 = SUB V255 V257
0x3b7: RETURN V257 V258
---
Entry stack: [V11, V792]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b8
[0x3b8:0x3bf]
---
Predecessors: [0x8e]
Successors: [0x3c0, 0x3c4]
---
0x3b8 JUMPDEST
0x3b9 CALLVALUE
0x3ba DUP1
0x3bb ISZERO
0x3bc PUSH2 0x3c4
0x3bf JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V259 = CALLVALUE
0x3bb: V260 = ISZERO V259
0x3bc: V261 = 0x3c4
0x3bf: JUMPI 0x3c4 V260
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V259]
Exit stack: [V11, V259]

================================

Block 0x3c0
[0x3c0:0x3c3]
---
Predecessors: [0x3b8]
Successors: []
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
---
0x3c0: V262 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V11, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V259]

================================

Block 0x3c4
[0x3c4:0x3cc]
---
Predecessors: [0x3b8]
Successors: [0xd8d]
---
0x3c4 JUMPDEST
0x3c5 POP
0x3c6 PUSH2 0x3cd
0x3c9 PUSH2 0xd8d
0x3cc JUMP
---
0x3c4: JUMPDEST 
0x3c6: V263 = 0x3cd
0x3c9: V264 = 0xd8d
0x3cc: JUMP 0xd8d
---
Entry stack: [V11, V259]
Stack pops: 1
Stack additions: [0x3cd]
Exit stack: [V11, 0x3cd]

================================

Block 0x3cd
[0x3cd:0x3f1]
---
Predecessors: [0xe23]
Successors: [0x3f2]
---
0x3cd JUMPDEST
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 DUP1
0x3d2 DUP1
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 DUP3
0x3d7 DUP2
0x3d8 SUB
0x3d9 DUP3
0x3da MSTORE
0x3db DUP4
0x3dc DUP2
0x3dd DUP2
0x3de MLOAD
0x3df DUP2
0x3e0 MSTORE
0x3e1 PUSH1 0x20
0x3e3 ADD
0x3e4 SWAP2
0x3e5 POP
0x3e6 DUP1
0x3e7 MLOAD
0x3e8 SWAP1
0x3e9 PUSH1 0x20
0x3eb ADD
0x3ec SWAP1
0x3ed DUP1
0x3ee DUP4
0x3ef DUP4
0x3f0 PUSH1 0x0
---
0x3cd: JUMPDEST 
0x3ce: V265 = 0x40
0x3d0: V266 = M[0x40]
0x3d3: V267 = 0x20
0x3d5: V268 = ADD 0x20 V266
0x3d8: V269 = SUB V268 V266
0x3da: M[V266] = V269
0x3de: V270 = M[V813]
0x3e0: M[V268] = V270
0x3e1: V271 = 0x20
0x3e3: V272 = ADD 0x20 V268
0x3e7: V273 = M[V813]
0x3e9: V274 = 0x20
0x3eb: V275 = ADD 0x20 V813
0x3f0: V276 = 0x0
---
Entry stack: [V11, 0x3cd, V813]
Stack pops: 1
Stack additions: [S0, V266, V266, V272, V275, V273, V273, V272, V275, 0x0]
Exit stack: [V11, 0x3cd, V813, V266, V266, V272, V275, V273, V273, V272, V275, 0x0]

================================

Block 0x3f2
[0x3f2:0x3fa]
---
Predecessors: [0x3cd, 0x3fb]
Successors: [0x3fb, 0x40d]
---
0x3f2 JUMPDEST
0x3f3 DUP4
0x3f4 DUP2
0x3f5 LT
0x3f6 ISZERO
0x3f7 PUSH2 0x40d
0x3fa JUMPI
---
0x3f2: JUMPDEST 
0x3f5: V277 = LT S0 V273
0x3f6: V278 = ISZERO V277
0x3f7: V279 = 0x40d
0x3fa: JUMPI 0x40d V278
---
Entry stack: [V11, 0x3cd, V813, V266, V266, V272, V275, V273, V273, V272, V275, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x3cd, V813, V266, V266, V272, V275, V273, V273, V272, V275, S0]

================================

Block 0x3fb
[0x3fb:0x40c]
---
Predecessors: [0x3f2]
Successors: [0x3f2]
---
0x3fb DUP1
0x3fc DUP3
0x3fd ADD
0x3fe MLOAD
0x3ff DUP2
0x400 DUP5
0x401 ADD
0x402 MSTORE
0x403 PUSH1 0x20
0x405 DUP2
0x406 ADD
0x407 SWAP1
0x408 POP
0x409 PUSH2 0x3f2
0x40c JUMP
---
0x3fd: V280 = ADD V275 S0
0x3fe: V281 = M[V280]
0x401: V282 = ADD V272 S0
0x402: M[V282] = V281
0x403: V283 = 0x20
0x406: V284 = ADD S0 0x20
0x409: V285 = 0x3f2
0x40c: JUMP 0x3f2
---
Entry stack: [V11, 0x3cd, V813, V266, V266, V272, V275, V273, V273, V272, V275, S0]
Stack pops: 3
Stack additions: [S2, S1, V284]
Exit stack: [V11, 0x3cd, V813, V266, V266, V272, V275, V273, V273, V272, V275, V284]

================================

Block 0x40d
[0x40d:0x420]
---
Predecessors: [0x3f2]
Successors: [0x421, 0x43a]
---
0x40d JUMPDEST
0x40e POP
0x40f POP
0x410 POP
0x411 POP
0x412 SWAP1
0x413 POP
0x414 SWAP1
0x415 DUP2
0x416 ADD
0x417 SWAP1
0x418 PUSH1 0x1f
0x41a AND
0x41b DUP1
0x41c ISZERO
0x41d PUSH2 0x43a
0x420 JUMPI
---
0x40d: JUMPDEST 
0x416: V286 = ADD V273 V272
0x418: V287 = 0x1f
0x41a: V288 = AND 0x1f V273
0x41c: V289 = ISZERO V288
0x41d: V290 = 0x43a
0x420: JUMPI 0x43a V289
---
Entry stack: [V11, 0x3cd, V813, V266, V266, V272, V275, V273, V273, V272, V275, S0]
Stack pops: 7
Stack additions: [V286, V288]
Exit stack: [V11, 0x3cd, V813, V266, V266, V286, V288]

================================

Block 0x421
[0x421:0x439]
---
Predecessors: [0x40d]
Successors: [0x43a]
---
0x421 DUP1
0x422 DUP3
0x423 SUB
0x424 DUP1
0x425 MLOAD
0x426 PUSH1 0x1
0x428 DUP4
0x429 PUSH1 0x20
0x42b SUB
0x42c PUSH2 0x100
0x42f EXP
0x430 SUB
0x431 NOT
0x432 AND
0x433 DUP2
0x434 MSTORE
0x435 PUSH1 0x20
0x437 ADD
0x438 SWAP2
0x439 POP
---
0x423: V291 = SUB V286 V288
0x425: V292 = M[V291]
0x426: V293 = 0x1
0x429: V294 = 0x20
0x42b: V295 = SUB 0x20 V288
0x42c: V296 = 0x100
0x42f: V297 = EXP 0x100 V295
0x430: V298 = SUB V297 0x1
0x431: V299 = NOT V298
0x432: V300 = AND V299 V292
0x434: M[V291] = V300
0x435: V301 = 0x20
0x437: V302 = ADD 0x20 V291
---
Entry stack: [V11, 0x3cd, V813, V266, V266, V286, V288]
Stack pops: 2
Stack additions: [V302, S0]
Exit stack: [V11, 0x3cd, V813, V266, V266, V302, V288]

================================

Block 0x43a
[0x43a:0x447]
---
Predecessors: [0x40d, 0x421]
Successors: []
---
0x43a JUMPDEST
0x43b POP
0x43c SWAP3
0x43d POP
0x43e POP
0x43f POP
0x440 PUSH1 0x40
0x442 MLOAD
0x443 DUP1
0x444 SWAP2
0x445 SUB
0x446 SWAP1
0x447 RETURN
---
0x43a: JUMPDEST 
0x440: V303 = 0x40
0x442: V304 = M[0x40]
0x445: V305 = SUB S1 V304
0x447: RETURN V304 V305
---
Entry stack: [V11, 0x3cd, V813, V266, V266, S1, V288]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x3cd]

================================

Block 0x448
[0x448:0x44f]
---
Predecessors: [0x99]
Successors: [0x450, 0x454]
---
0x448 JUMPDEST
0x449 CALLVALUE
0x44a DUP1
0x44b ISZERO
0x44c PUSH2 0x454
0x44f JUMPI
---
0x448: JUMPDEST 
0x449: V306 = CALLVALUE
0x44b: V307 = ISZERO V306
0x44c: V308 = 0x454
0x44f: JUMPI 0x454 V307
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V306]
Exit stack: [V11, V306]

================================

Block 0x450
[0x450:0x453]
---
Predecessors: [0x448]
Successors: []
---
0x450 PUSH1 0x0
0x452 DUP1
0x453 REVERT
---
0x450: V309 = 0x0
0x453: REVERT 0x0 0x0
---
Entry stack: [V11, V306]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V306]

================================

Block 0x454
[0x454:0x492]
---
Predecessors: [0x448]
Successors: [0xe2b]
---
0x454 JUMPDEST
0x455 POP
0x456 PUSH2 0x493
0x459 PUSH1 0x4
0x45b DUP1
0x45c CALLDATASIZE
0x45d SUB
0x45e DUP2
0x45f ADD
0x460 SWAP1
0x461 DUP1
0x462 DUP1
0x463 CALLDATALOAD
0x464 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x479 AND
0x47a SWAP1
0x47b PUSH1 0x20
0x47d ADD
0x47e SWAP1
0x47f SWAP3
0x480 SWAP2
0x481 SWAP1
0x482 DUP1
0x483 CALLDATALOAD
0x484 SWAP1
0x485 PUSH1 0x20
0x487 ADD
0x488 SWAP1
0x489 SWAP3
0x48a SWAP2
0x48b SWAP1
0x48c POP
0x48d POP
0x48e POP
0x48f PUSH2 0xe2b
0x492 JUMP
---
0x454: JUMPDEST 
0x456: V310 = 0x493
0x459: V311 = 0x4
0x45c: V312 = CALLDATASIZE
0x45d: V313 = SUB V312 0x4
0x45f: V314 = ADD 0x4 V313
0x463: V315 = CALLDATALOAD 0x4
0x464: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x479: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x47b: V318 = 0x20
0x47d: V319 = ADD 0x20 0x4
0x483: V320 = CALLDATALOAD 0x24
0x485: V321 = 0x20
0x487: V322 = ADD 0x20 0x24
0x48f: V323 = 0xe2b
0x492: JUMP 0xe2b
---
Entry stack: [V11, V306]
Stack pops: 1
Stack additions: [0x493, V317, V320]
Exit stack: [V11, 0x493, V317, V320]

================================

Block 0x493
[0x493:0x4ac]
---
Predecessors: [0xef7]
Successors: []
---
0x493 JUMPDEST
0x494 PUSH1 0x40
0x496 MLOAD
0x497 DUP1
0x498 DUP3
0x499 ISZERO
0x49a ISZERO
0x49b ISZERO
0x49c ISZERO
0x49d DUP2
0x49e MSTORE
0x49f PUSH1 0x20
0x4a1 ADD
0x4a2 SWAP2
0x4a3 POP
0x4a4 POP
0x4a5 PUSH1 0x40
0x4a7 MLOAD
0x4a8 DUP1
0x4a9 SWAP2
0x4aa SUB
0x4ab SWAP1
0x4ac RETURN
---
0x493: JUMPDEST 
0x494: V324 = 0x40
0x496: V325 = M[0x40]
0x499: V326 = ISZERO 0x1
0x49a: V327 = ISZERO 0x0
0x49b: V328 = ISZERO 0x1
0x49c: V329 = ISZERO 0x0
0x49e: M[V325] = 0x1
0x49f: V330 = 0x20
0x4a1: V331 = ADD 0x20 V325
0x4a5: V332 = 0x40
0x4a7: V333 = M[0x40]
0x4aa: V334 = SUB V331 V333
0x4ac: RETURN V333 V334
---
Entry stack: [V11, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x4ad
[0x4ad:0x4b4]
---
Predecessors: [0xa4]
Successors: [0x4b5, 0x4b9]
---
0x4ad JUMPDEST
0x4ae CALLVALUE
0x4af DUP1
0x4b0 ISZERO
0x4b1 PUSH2 0x4b9
0x4b4 JUMPI
---
0x4ad: JUMPDEST 
0x4ae: V335 = CALLVALUE
0x4b0: V336 = ISZERO V335
0x4b1: V337 = 0x4b9
0x4b4: JUMPI 0x4b9 V336
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V335]
Exit stack: [V11, V335]

================================

Block 0x4b5
[0x4b5:0x4b8]
---
Predecessors: [0x4ad]
Successors: []
---
0x4b5 PUSH1 0x0
0x4b7 DUP1
0x4b8 REVERT
---
0x4b5: V338 = 0x0
0x4b8: REVERT 0x0 0x0
---
Entry stack: [V11, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V335]

================================

Block 0x4b9
[0x4b9:0x4f7]
---
Predecessors: [0x4ad]
Successors: [0x1062]
---
0x4b9 JUMPDEST
0x4ba POP
0x4bb PUSH2 0x4f8
0x4be PUSH1 0x4
0x4c0 DUP1
0x4c1 CALLDATASIZE
0x4c2 SUB
0x4c3 DUP2
0x4c4 ADD
0x4c5 SWAP1
0x4c6 DUP1
0x4c7 DUP1
0x4c8 CALLDATALOAD
0x4c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4de AND
0x4df SWAP1
0x4e0 PUSH1 0x20
0x4e2 ADD
0x4e3 SWAP1
0x4e4 SWAP3
0x4e5 SWAP2
0x4e6 SWAP1
0x4e7 DUP1
0x4e8 CALLDATALOAD
0x4e9 SWAP1
0x4ea PUSH1 0x20
0x4ec ADD
0x4ed SWAP1
0x4ee SWAP3
0x4ef SWAP2
0x4f0 SWAP1
0x4f1 POP
0x4f2 POP
0x4f3 POP
0x4f4 PUSH2 0x1062
0x4f7 JUMP
---
0x4b9: JUMPDEST 
0x4bb: V339 = 0x4f8
0x4be: V340 = 0x4
0x4c1: V341 = CALLDATASIZE
0x4c2: V342 = SUB V341 0x4
0x4c4: V343 = ADD 0x4 V342
0x4c8: V344 = CALLDATALOAD 0x4
0x4c9: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x4e0: V347 = 0x20
0x4e2: V348 = ADD 0x20 0x4
0x4e8: V349 = CALLDATALOAD 0x24
0x4ea: V350 = 0x20
0x4ec: V351 = ADD 0x20 0x24
0x4f4: V352 = 0x1062
0x4f7: JUMP 0x1062
---
Entry stack: [V11, V335]
Stack pops: 1
Stack additions: [0x4f8, V346, V349]
Exit stack: [V11, 0x4f8, V346, V349]

================================

Block 0x4f8
[0x4f8:0x511]
---
Predecessors: [0x106f]
Successors: []
---
0x4f8 JUMPDEST
0x4f9 PUSH1 0x40
0x4fb MLOAD
0x4fc DUP1
0x4fd DUP3
0x4fe ISZERO
0x4ff ISZERO
0x500 ISZERO
0x501 ISZERO
0x502 DUP2
0x503 MSTORE
0x504 PUSH1 0x20
0x506 ADD
0x507 SWAP2
0x508 POP
0x509 POP
0x50a PUSH1 0x40
0x50c MLOAD
0x50d DUP1
0x50e SWAP2
0x50f SUB
0x510 SWAP1
0x511 RETURN
---
0x4f8: JUMPDEST 
0x4f9: V353 = 0x40
0x4fb: V354 = M[0x40]
0x4fe: V355 = ISZERO 0x1
0x4ff: V356 = ISZERO 0x0
0x500: V357 = ISZERO 0x1
0x501: V358 = ISZERO 0x0
0x503: M[V354] = 0x1
0x504: V359 = 0x20
0x506: V360 = ADD 0x20 V354
0x50a: V361 = 0x40
0x50c: V362 = M[0x40]
0x50f: V363 = SUB V360 V362
0x511: RETURN V362 V363
---
Entry stack: [V11, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x512
[0x512:0x519]
---
Predecessors: [0xaf]
Successors: [0x51a, 0x51e]
---
0x512 JUMPDEST
0x513 CALLVALUE
0x514 DUP1
0x515 ISZERO
0x516 PUSH2 0x51e
0x519 JUMPI
---
0x512: JUMPDEST 
0x513: V364 = CALLVALUE
0x515: V365 = ISZERO V364
0x516: V366 = 0x51e
0x519: JUMPI 0x51e V365
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V364]
Exit stack: [V11, V364]

================================

Block 0x51a
[0x51a:0x51d]
---
Predecessors: [0x512]
Successors: []
---
0x51a PUSH1 0x0
0x51c DUP1
0x51d REVERT
---
0x51a: V367 = 0x0
0x51d: REVERT 0x0 0x0
---
Entry stack: [V11, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V364]

================================

Block 0x51e
[0x51e:0x572]
---
Predecessors: [0x512]
Successors: [0x1079]
---
0x51e JUMPDEST
0x51f POP
0x520 PUSH2 0x573
0x523 PUSH1 0x4
0x525 DUP1
0x526 CALLDATASIZE
0x527 SUB
0x528 DUP2
0x529 ADD
0x52a SWAP1
0x52b DUP1
0x52c DUP1
0x52d CALLDATALOAD
0x52e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x543 AND
0x544 SWAP1
0x545 PUSH1 0x20
0x547 ADD
0x548 SWAP1
0x549 SWAP3
0x54a SWAP2
0x54b SWAP1
0x54c DUP1
0x54d CALLDATALOAD
0x54e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x563 AND
0x564 SWAP1
0x565 PUSH1 0x20
0x567 ADD
0x568 SWAP1
0x569 SWAP3
0x56a SWAP2
0x56b SWAP1
0x56c POP
0x56d POP
0x56e POP
0x56f PUSH2 0x1079
0x572 JUMP
---
0x51e: JUMPDEST 
0x520: V368 = 0x573
0x523: V369 = 0x4
0x526: V370 = CALLDATASIZE
0x527: V371 = SUB V370 0x4
0x529: V372 = ADD 0x4 V371
0x52d: V373 = CALLDATALOAD 0x4
0x52e: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x543: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x545: V376 = 0x20
0x547: V377 = ADD 0x20 0x4
0x54d: V378 = CALLDATALOAD 0x24
0x54e: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x563: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x565: V381 = 0x20
0x567: V382 = ADD 0x20 0x24
0x56f: V383 = 0x1079
0x572: JUMP 0x1079
---
Entry stack: [V11, V364]
Stack pops: 1
Stack additions: [0x573, V375, V380]
Exit stack: [V11, 0x573, V375, V380]

================================

Block 0x573
[0x573:0x588]
---
Predecessors: [0x1079]
Successors: []
---
0x573 JUMPDEST
0x574 PUSH1 0x40
0x576 MLOAD
0x577 DUP1
0x578 DUP3
0x579 DUP2
0x57a MSTORE
0x57b PUSH1 0x20
0x57d ADD
0x57e SWAP2
0x57f POP
0x580 POP
0x581 PUSH1 0x40
0x583 MLOAD
0x584 DUP1
0x585 SWAP2
0x586 SUB
0x587 SWAP1
0x588 RETURN
---
0x573: JUMPDEST 
0x574: V384 = 0x40
0x576: V385 = M[0x40]
0x57a: M[V385] = V989
0x57b: V386 = 0x20
0x57d: V387 = ADD 0x20 V385
0x581: V388 = 0x40
0x583: V389 = M[0x40]
0x586: V390 = SUB V387 V389
0x588: RETURN V389 V390
---
Entry stack: [V11, V989]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x589
[0x589:0x5d8]
---
Predecessors: [0xcb]
Successors: [0x5d9, 0x61f]
---
0x589 JUMPDEST
0x58a PUSH1 0x0
0x58c DUP1
0x58d SLOAD
0x58e PUSH1 0x1
0x590 DUP2
0x591 PUSH1 0x1
0x593 AND
0x594 ISZERO
0x595 PUSH2 0x100
0x598 MUL
0x599 SUB
0x59a AND
0x59b PUSH1 0x2
0x59d SWAP1
0x59e DIV
0x59f DUP1
0x5a0 PUSH1 0x1f
0x5a2 ADD
0x5a3 PUSH1 0x20
0x5a5 DUP1
0x5a6 SWAP2
0x5a7 DIV
0x5a8 MUL
0x5a9 PUSH1 0x20
0x5ab ADD
0x5ac PUSH1 0x40
0x5ae MLOAD
0x5af SWAP1
0x5b0 DUP2
0x5b1 ADD
0x5b2 PUSH1 0x40
0x5b4 MSTORE
0x5b5 DUP1
0x5b6 SWAP3
0x5b7 SWAP2
0x5b8 SWAP1
0x5b9 DUP2
0x5ba DUP2
0x5bb MSTORE
0x5bc PUSH1 0x20
0x5be ADD
0x5bf DUP3
0x5c0 DUP1
0x5c1 SLOAD
0x5c2 PUSH1 0x1
0x5c4 DUP2
0x5c5 PUSH1 0x1
0x5c7 AND
0x5c8 ISZERO
0x5c9 PUSH2 0x100
0x5cc MUL
0x5cd SUB
0x5ce AND
0x5cf PUSH1 0x2
0x5d1 SWAP1
0x5d2 DIV
0x5d3 DUP1
0x5d4 ISZERO
0x5d5 PUSH2 0x61f
0x5d8 JUMPI
---
0x589: JUMPDEST 
0x58a: V391 = 0x0
0x58d: V392 = S[0x0]
0x58e: V393 = 0x1
0x591: V394 = 0x1
0x593: V395 = AND 0x1 V392
0x594: V396 = ISZERO V395
0x595: V397 = 0x100
0x598: V398 = MUL 0x100 V396
0x599: V399 = SUB V398 0x1
0x59a: V400 = AND V399 V392
0x59b: V401 = 0x2
0x59e: V402 = DIV V400 0x2
0x5a0: V403 = 0x1f
0x5a2: V404 = ADD 0x1f V402
0x5a3: V405 = 0x20
0x5a7: V406 = DIV V404 0x20
0x5a8: V407 = MUL V406 0x20
0x5a9: V408 = 0x20
0x5ab: V409 = ADD 0x20 V407
0x5ac: V410 = 0x40
0x5ae: V411 = M[0x40]
0x5b1: V412 = ADD V411 V409
0x5b2: V413 = 0x40
0x5b4: M[0x40] = V412
0x5bb: M[V411] = V402
0x5bc: V414 = 0x20
0x5be: V415 = ADD 0x20 V411
0x5c1: V416 = S[0x0]
0x5c2: V417 = 0x1
0x5c5: V418 = 0x1
0x5c7: V419 = AND 0x1 V416
0x5c8: V420 = ISZERO V419
0x5c9: V421 = 0x100
0x5cc: V422 = MUL 0x100 V420
0x5cd: V423 = SUB V422 0x1
0x5ce: V424 = AND V423 V416
0x5cf: V425 = 0x2
0x5d2: V426 = DIV V424 0x2
0x5d4: V427 = ISZERO V426
0x5d5: V428 = 0x61f
0x5d8: JUMPI 0x61f V427
---
Entry stack: [V11, 0xd4]
Stack pops: 0
Stack additions: [V411, 0x0, V402, V415, 0x0, V426]
Exit stack: [V11, 0xd4, V411, 0x0, V402, V415, 0x0, V426]

================================

Block 0x5d9
[0x5d9:0x5e0]
---
Predecessors: [0x589]
Successors: [0x5e1, 0x5f4]
---
0x5d9 DUP1
0x5da PUSH1 0x1f
0x5dc LT
0x5dd PUSH2 0x5f4
0x5e0 JUMPI
---
0x5da: V429 = 0x1f
0x5dc: V430 = LT 0x1f V426
0x5dd: V431 = 0x5f4
0x5e0: JUMPI 0x5f4 V430
---
Entry stack: [V11, 0xd4, V411, 0x0, V402, V415, 0x0, V426]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xd4, V411, 0x0, V402, V415, 0x0, V426]

================================

Block 0x5e1
[0x5e1:0x5f3]
---
Predecessors: [0x5d9]
Successors: [0x61f]
---
0x5e1 PUSH2 0x100
0x5e4 DUP1
0x5e5 DUP4
0x5e6 SLOAD
0x5e7 DIV
0x5e8 MUL
0x5e9 DUP4
0x5ea MSTORE
0x5eb SWAP2
0x5ec PUSH1 0x20
0x5ee ADD
0x5ef SWAP2
0x5f0 PUSH2 0x61f
0x5f3 JUMP
---
0x5e1: V432 = 0x100
0x5e6: V433 = S[0x0]
0x5e7: V434 = DIV V433 0x100
0x5e8: V435 = MUL V434 0x100
0x5ea: M[V415] = V435
0x5ec: V436 = 0x20
0x5ee: V437 = ADD 0x20 V415
0x5f0: V438 = 0x61f
0x5f3: JUMP 0x61f
---
Entry stack: [V11, 0xd4, V411, 0x0, V402, V415, 0x0, V426]
Stack pops: 3
Stack additions: [V437, S1, S0]
Exit stack: [V11, 0xd4, V411, 0x0, V402, V437, 0x0, V426]

================================

Block 0x5f4
[0x5f4:0x601]
---
Predecessors: [0x5d9]
Successors: [0x602]
---
0x5f4 JUMPDEST
0x5f5 DUP3
0x5f6 ADD
0x5f7 SWAP2
0x5f8 SWAP1
0x5f9 PUSH1 0x0
0x5fb MSTORE
0x5fc PUSH1 0x20
0x5fe PUSH1 0x0
0x600 SHA3
0x601 SWAP1
---
0x5f4: JUMPDEST 
0x5f6: V439 = ADD V415 V426
0x5f9: V440 = 0x0
0x5fb: M[0x0] = 0x0
0x5fc: V441 = 0x20
0x5fe: V442 = 0x0
0x600: V443 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xd4, V411, 0x0, V402, V415, 0x0, V426]
Stack pops: 3
Stack additions: [V439, V443, S2]
Exit stack: [V11, 0xd4, V411, 0x0, V402, V439, V443, V415]

================================

Block 0x602
[0x602:0x615]
---
Predecessors: [0x5f4, 0x602]
Successors: [0x602, 0x616]
---
0x602 JUMPDEST
0x603 DUP2
0x604 SLOAD
0x605 DUP2
0x606 MSTORE
0x607 SWAP1
0x608 PUSH1 0x1
0x60a ADD
0x60b SWAP1
0x60c PUSH1 0x20
0x60e ADD
0x60f DUP1
0x610 DUP4
0x611 GT
0x612 PUSH2 0x602
0x615 JUMPI
---
0x602: JUMPDEST 
0x604: V444 = S[S1]
0x606: M[S0] = V444
0x608: V445 = 0x1
0x60a: V446 = ADD 0x1 S1
0x60c: V447 = 0x20
0x60e: V448 = ADD 0x20 S0
0x611: V449 = GT V439 V448
0x612: V450 = 0x602
0x615: JUMPI 0x602 V449
---
Entry stack: [V11, 0xd4, V411, 0x0, V402, V439, S1, S0]
Stack pops: 3
Stack additions: [S2, V446, V448]
Exit stack: [V11, 0xd4, V411, 0x0, V402, V439, V446, V448]

================================

Block 0x616
[0x616:0x61e]
---
Predecessors: [0x602]
Successors: [0x61f]
---
0x616 DUP3
0x617 SWAP1
0x618 SUB
0x619 PUSH1 0x1f
0x61b AND
0x61c DUP3
0x61d ADD
0x61e SWAP2
---
0x618: V451 = SUB V448 V439
0x619: V452 = 0x1f
0x61b: V453 = AND 0x1f V451
0x61d: V454 = ADD V439 V453
---
Entry stack: [V11, 0xd4, V411, 0x0, V402, V439, V446, V448]
Stack pops: 3
Stack additions: [V454, S1, S2]
Exit stack: [V11, 0xd4, V411, 0x0, V402, V454, V446, V439]

================================

Block 0x61f
[0x61f:0x626]
---
Predecessors: [0x589, 0x5e1, 0x616]
Successors: [0xd4]
---
0x61f JUMPDEST
0x620 POP
0x621 POP
0x622 POP
0x623 POP
0x624 POP
0x625 DUP2
0x626 JUMP
---
0x61f: JUMPDEST 
0x626: JUMP 0xd4
---
Entry stack: [V11, 0xd4, V411, 0x0, V402, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xd4, V411]

================================

Block 0x627
[0x627:0x65f]
---
Predecessors: [0x15b]
Successors: [0x660, 0x664]
---
0x627 JUMPDEST
0x628 PUSH1 0x0
0x62a DUP1
0x62b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x640 AND
0x641 DUP4
0x642 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x657 AND
0x658 EQ
0x659 ISZERO
0x65a ISZERO
0x65b ISZERO
0x65c PUSH2 0x664
0x65f JUMPI
---
0x627: JUMPDEST 
0x628: V455 = 0x0
0x62b: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x640: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x642: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x657: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x658: V460 = EQ V459 0x0
0x659: V461 = ISZERO V460
0x65a: V462 = ISZERO V461
0x65b: V463 = ISZERO V462
0x65c: V464 = 0x664
0x65f: JUMPI 0x664 V463
---
Entry stack: [V11, 0x19a, V107, V110]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x19a, V107, V110, 0x0]

================================

Block 0x660
[0x660:0x663]
---
Predecessors: [0x627]
Successors: []
---
0x660 PUSH1 0x0
0x662 DUP1
0x663 REVERT
---
0x660: V465 = 0x0
0x663: REVERT 0x0 0x0
---
Entry stack: [V11, 0x19a, V107, V110, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x19a, V107, V110, 0x0]

================================

Block 0x664
[0x664:0x753]
---
Predecessors: [0x627]
Successors: [0x19a]
---
0x664 JUMPDEST
0x665 DUP2
0x666 PUSH1 0x4
0x668 PUSH1 0x0
0x66a CALLER
0x66b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x680 AND
0x681 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x696 AND
0x697 DUP2
0x698 MSTORE
0x699 PUSH1 0x20
0x69b ADD
0x69c SWAP1
0x69d DUP2
0x69e MSTORE
0x69f PUSH1 0x20
0x6a1 ADD
0x6a2 PUSH1 0x0
0x6a4 SHA3
0x6a5 PUSH1 0x0
0x6a7 DUP6
0x6a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bd AND
0x6be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d3 AND
0x6d4 DUP2
0x6d5 MSTORE
0x6d6 PUSH1 0x20
0x6d8 ADD
0x6d9 SWAP1
0x6da DUP2
0x6db MSTORE
0x6dc PUSH1 0x20
0x6de ADD
0x6df PUSH1 0x0
0x6e1 SHA3
0x6e2 DUP2
0x6e3 SWAP1
0x6e4 SSTORE
0x6e5 POP
0x6e6 DUP3
0x6e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fc AND
0x6fd CALLER
0x6fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x713 AND
0x714 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x735 DUP5
0x736 PUSH1 0x40
0x738 MLOAD
0x739 DUP1
0x73a DUP3
0x73b DUP2
0x73c MSTORE
0x73d PUSH1 0x20
0x73f ADD
0x740 SWAP2
0x741 POP
0x742 POP
0x743 PUSH1 0x40
0x745 MLOAD
0x746 DUP1
0x747 SWAP2
0x748 SUB
0x749 SWAP1
0x74a LOG3
0x74b PUSH1 0x1
0x74d SWAP1
0x74e POP
0x74f SWAP3
0x750 SWAP2
0x751 POP
0x752 POP
0x753 JUMP
---
0x664: JUMPDEST 
0x666: V466 = 0x4
0x668: V467 = 0x0
0x66a: V468 = CALLER
0x66b: V469 = 0xffffffffffffffffffffffffffffffffffffffff
0x680: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x681: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x696: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x698: M[0x0] = V472
0x699: V473 = 0x20
0x69b: V474 = ADD 0x20 0x0
0x69e: M[0x20] = 0x4
0x69f: V475 = 0x20
0x6a1: V476 = ADD 0x20 0x20
0x6a2: V477 = 0x0
0x6a4: V478 = SHA3 0x0 0x40
0x6a5: V479 = 0x0
0x6a8: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bd: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x6be: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d3: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x6d5: M[0x0] = V483
0x6d6: V484 = 0x20
0x6d8: V485 = ADD 0x20 0x0
0x6db: M[0x20] = V478
0x6dc: V486 = 0x20
0x6de: V487 = ADD 0x20 0x20
0x6df: V488 = 0x0
0x6e1: V489 = SHA3 0x0 0x40
0x6e4: S[V489] = V110
0x6e7: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fc: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x6fd: V492 = CALLER
0x6fe: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x713: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x714: V495 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x736: V496 = 0x40
0x738: V497 = M[0x40]
0x73c: M[V497] = V110
0x73d: V498 = 0x20
0x73f: V499 = ADD 0x20 V497
0x743: V500 = 0x40
0x745: V501 = M[0x40]
0x748: V502 = SUB V499 V501
0x74a: LOG V501 V502 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V494 V491
0x74b: V503 = 0x1
0x753: JUMP 0x19a
---
Entry stack: [V11, 0x19a, V107, V110, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x754
[0x754:0x75d]
---
Predecessors: [0x1c0]
Successors: [0x1c9]
---
0x754 JUMPDEST
0x755 PUSH1 0x0
0x757 PUSH1 0x5
0x759 SLOAD
0x75a SWAP1
0x75b POP
0x75c SWAP1
0x75d JUMP
---
0x754: JUMPDEST 
0x755: V504 = 0x0
0x757: V505 = 0x5
0x759: V506 = S[0x5]
0x75d: JUMP 0x1c9
---
Entry stack: [V11, 0x1c9]
Stack pops: 1
Stack additions: [V506]
Exit stack: [V11, V506]

================================

Block 0x75e
[0x75e:0x7e6]
---
Predecessors: [0x1eb]
Successors: [0x7e7, 0x7eb]
---
0x75e JUMPDEST
0x75f PUSH1 0x0
0x761 PUSH1 0x4
0x763 PUSH1 0x0
0x765 DUP6
0x766 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77b AND
0x77c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x791 AND
0x792 DUP2
0x793 MSTORE
0x794 PUSH1 0x20
0x796 ADD
0x797 SWAP1
0x798 DUP2
0x799 MSTORE
0x79a PUSH1 0x20
0x79c ADD
0x79d PUSH1 0x0
0x79f SHA3
0x7a0 PUSH1 0x0
0x7a2 CALLER
0x7a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b8 AND
0x7b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ce AND
0x7cf DUP2
0x7d0 MSTORE
0x7d1 PUSH1 0x20
0x7d3 ADD
0x7d4 SWAP1
0x7d5 DUP2
0x7d6 MSTORE
0x7d7 PUSH1 0x20
0x7d9 ADD
0x7da PUSH1 0x0
0x7dc SHA3
0x7dd SLOAD
0x7de DUP3
0x7df GT
0x7e0 ISZERO
0x7e1 ISZERO
0x7e2 ISZERO
0x7e3 PUSH2 0x7eb
0x7e6 JUMPI
---
0x75e: JUMPDEST 
0x75f: V507 = 0x0
0x761: V508 = 0x4
0x763: V509 = 0x0
0x766: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x77b: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x77c: V512 = 0xffffffffffffffffffffffffffffffffffffffff
0x791: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x793: M[0x0] = V513
0x794: V514 = 0x20
0x796: V515 = ADD 0x20 0x0
0x799: M[0x20] = 0x4
0x79a: V516 = 0x20
0x79c: V517 = ADD 0x20 0x20
0x79d: V518 = 0x0
0x79f: V519 = SHA3 0x0 0x40
0x7a0: V520 = 0x0
0x7a2: V521 = CALLER
0x7a3: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b8: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x7b9: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ce: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x7d0: M[0x0] = V525
0x7d1: V526 = 0x20
0x7d3: V527 = ADD 0x20 0x0
0x7d6: M[0x20] = V519
0x7d7: V528 = 0x20
0x7d9: V529 = ADD 0x20 0x20
0x7da: V530 = 0x0
0x7dc: V531 = SHA3 0x0 0x40
0x7dd: V532 = S[V531]
0x7df: V533 = GT V157 V532
0x7e0: V534 = ISZERO V533
0x7e1: V535 = ISZERO V534
0x7e2: V536 = ISZERO V535
0x7e3: V537 = 0x7eb
0x7e6: JUMPI 0x7eb V536
---
Entry stack: [V11, 0x24a, V149, V154, V157]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V11, 0x24a, V149, V154, V157, 0x0]

================================

Block 0x7e7
[0x7e7:0x7ea]
---
Predecessors: [0x75e]
Successors: []
---
0x7e7 PUSH1 0x0
0x7e9 DUP1
0x7ea REVERT
---
0x7e7: V538 = 0x0
0x7ea: REVERT 0x0 0x0
---
Entry stack: [V11, 0x24a, V149, V154, V157, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x24a, V149, V154, V157, 0x0]

================================

Block 0x7eb
[0x7eb:0x879]
---
Predecessors: [0x75e]
Successors: [0x1100]
---
0x7eb JUMPDEST
0x7ec PUSH2 0x87a
0x7ef DUP3
0x7f0 PUSH1 0x4
0x7f2 PUSH1 0x0
0x7f4 DUP8
0x7f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80a AND
0x80b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x820 AND
0x821 DUP2
0x822 MSTORE
0x823 PUSH1 0x20
0x825 ADD
0x826 SWAP1
0x827 DUP2
0x828 MSTORE
0x829 PUSH1 0x20
0x82b ADD
0x82c PUSH1 0x0
0x82e SHA3
0x82f PUSH1 0x0
0x831 CALLER
0x832 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x847 AND
0x848 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85d AND
0x85e DUP2
0x85f MSTORE
0x860 PUSH1 0x20
0x862 ADD
0x863 SWAP1
0x864 DUP2
0x865 MSTORE
0x866 PUSH1 0x20
0x868 ADD
0x869 PUSH1 0x0
0x86b SHA3
0x86c SLOAD
0x86d PUSH2 0x1100
0x870 SWAP1
0x871 SWAP2
0x872 SWAP1
0x873 PUSH4 0xffffffff
0x878 AND
0x879 JUMP
---
0x7eb: JUMPDEST 
0x7ec: V539 = 0x87a
0x7f0: V540 = 0x4
0x7f2: V541 = 0x0
0x7f5: V542 = 0xffffffffffffffffffffffffffffffffffffffff
0x80a: V543 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x80b: V544 = 0xffffffffffffffffffffffffffffffffffffffff
0x820: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff V543
0x822: M[0x0] = V545
0x823: V546 = 0x20
0x825: V547 = ADD 0x20 0x0
0x828: M[0x20] = 0x4
0x829: V548 = 0x20
0x82b: V549 = ADD 0x20 0x20
0x82c: V550 = 0x0
0x82e: V551 = SHA3 0x0 0x40
0x82f: V552 = 0x0
0x831: V553 = CALLER
0x832: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x847: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x848: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x85d: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x85f: M[0x0] = V557
0x860: V558 = 0x20
0x862: V559 = ADD 0x20 0x0
0x865: M[0x20] = V551
0x866: V560 = 0x20
0x868: V561 = ADD 0x20 0x20
0x869: V562 = 0x0
0x86b: V563 = SHA3 0x0 0x40
0x86c: V564 = S[V563]
0x86d: V565 = 0x1100
0x873: V566 = 0xffffffff
0x878: V567 = AND 0xffffffff 0x1100
0x879: JUMP 0x1100
---
Entry stack: [V11, 0x24a, V149, V154, V157, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x87a, V564, S1]
Exit stack: [V11, 0x24a, V149, V154, V157, 0x0, 0x87a, V564, V157]

================================

Block 0x87a
[0x87a:0x904]
---
Predecessors: [0x1112]
Successors: [0x910]
---
0x87a JUMPDEST
0x87b PUSH1 0x4
0x87d PUSH1 0x0
0x87f DUP7
0x880 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x895 AND
0x896 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ab AND
0x8ac DUP2
0x8ad MSTORE
0x8ae PUSH1 0x20
0x8b0 ADD
0x8b1 SWAP1
0x8b2 DUP2
0x8b3 MSTORE
0x8b4 PUSH1 0x20
0x8b6 ADD
0x8b7 PUSH1 0x0
0x8b9 SHA3
0x8ba PUSH1 0x0
0x8bc CALLER
0x8bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d2 AND
0x8d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e8 AND
0x8e9 DUP2
0x8ea MSTORE
0x8eb PUSH1 0x20
0x8ed ADD
0x8ee SWAP1
0x8ef DUP2
0x8f0 MSTORE
0x8f1 PUSH1 0x20
0x8f3 ADD
0x8f4 PUSH1 0x0
0x8f6 SHA3
0x8f7 DUP2
0x8f8 SWAP1
0x8f9 SSTORE
0x8fa POP
0x8fb PUSH2 0x905
0x8fe DUP5
0x8ff DUP5
0x900 DUP5
0x901 PUSH2 0x910
0x904 JUMP
---
0x87a: JUMPDEST 
0x87b: V568 = 0x4
0x87d: V569 = 0x0
0x880: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0x895: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x896: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ab: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x8ad: M[0x0] = V573
0x8ae: V574 = 0x20
0x8b0: V575 = ADD 0x20 0x0
0x8b3: M[0x20] = 0x4
0x8b4: V576 = 0x20
0x8b6: V577 = ADD 0x20 0x20
0x8b7: V578 = 0x0
0x8b9: V579 = SHA3 0x0 0x40
0x8ba: V580 = 0x0
0x8bc: V581 = CALLER
0x8bd: V582 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d2: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x8d3: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e8: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x8ea: M[0x0] = V585
0x8eb: V586 = 0x20
0x8ed: V587 = ADD 0x20 0x0
0x8f0: M[0x20] = V579
0x8f1: V588 = 0x20
0x8f3: V589 = ADD 0x20 0x20
0x8f4: V590 = 0x0
0x8f6: V591 = SHA3 0x0 0x40
0x8f9: S[V591] = V997
0x8fb: V592 = 0x905
0x901: V593 = 0x910
0x904: JUMP 0x910
---
Entry stack: [V11, S5, S4, S3, S2, 0x0, V997]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x905, S4, S3, S2]
Exit stack: [V11, S5, S4, S3, S2, 0x0, 0x905, S4, S3, S2]

================================

Block 0x905
[0x905:0x90f]
---
Predecessors: [0xa59]
Successors: [0x24a]
---
0x905 JUMPDEST
0x906 PUSH1 0x1
0x908 SWAP1
0x909 POP
0x90a SWAP4
0x90b SWAP3
0x90c POP
0x90d POP
0x90e POP
0x90f JUMP
---
0x905: JUMPDEST 
0x906: V594 = 0x1
0x90f: JUMP S4
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x910
[0x910:0x948]
---
Predecessors: [0x270, 0x87a, 0x1062]
Successors: [0x949, 0x94d]
---
0x910 JUMPDEST
0x911 PUSH1 0x0
0x913 DUP1
0x914 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x929 AND
0x92a DUP4
0x92b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x940 AND
0x941 EQ
0x942 ISZERO
0x943 ISZERO
0x944 ISZERO
0x945 PUSH2 0x94d
0x948 JUMPI
---
0x910: JUMPDEST 
0x911: V595 = 0x0
0x914: V596 = 0xffffffffffffffffffffffffffffffffffffffff
0x929: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x92b: V598 = 0xffffffffffffffffffffffffffffffffffffffff
0x940: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x941: V600 = EQ V599 0x0
0x942: V601 = ISZERO V600
0x943: V602 = ISZERO V601
0x944: V603 = ISZERO V602
0x945: V604 = 0x94d
0x948: JUMPI 0x94d V603
---
Entry stack: [V11, S8, S7, S6, S5, S4, {0x2cf, 0x905, 0x106f}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S8, S7, S6, S5, S4, {0x2cf, 0x905, 0x106f}, S2, S1, S0, 0x0]

================================

Block 0x949
[0x949:0x94c]
---
Predecessors: [0x910]
Successors: []
---
0x949 PUSH1 0x0
0x94b DUP1
0x94c REVERT
---
0x949: V605 = 0x0
0x94c: REVERT 0x0 0x0
---
Entry stack: [V11, S9, S8, S7, S6, S5, {0x2cf, 0x905, 0x106f}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, {0x2cf, 0x905, 0x106f}, S3, S2, S1, 0x0]

================================

Block 0x94d
[0x94d:0x999]
---
Predecessors: [0x910]
Successors: [0x99a, 0xa07]
---
0x94d JUMPDEST
0x94e PUSH20 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e
0x963 SWAP1
0x964 POP
0x965 DUP1
0x966 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97b AND
0x97c ORIGIN
0x97d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x992 AND
0x993 EQ
0x994 ISZERO
0x995 ISZERO
0x996 PUSH2 0xa07
0x999 JUMPI
---
0x94d: JUMPDEST 
0x94e: V606 = 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e
0x966: V607 = 0xffffffffffffffffffffffffffffffffffffffff
0x97b: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e
0x97c: V609 = ORIGIN
0x97d: V610 = 0xffffffffffffffffffffffffffffffffffffffff
0x992: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V609
0x993: V612 = EQ V611 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e
0x994: V613 = ISZERO V612
0x995: V614 = ISZERO V613
0x996: V615 = 0xa07
0x999: JUMPI 0xa07 V614
---
Entry stack: [V11, S9, S8, S7, S6, S5, {0x2cf, 0x905, 0x106f}, S3, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x454cef7863bfd0756b5e1ff19f48ff8362900a8e]
Exit stack: [V11, S9, S8, S7, S6, S5, {0x2cf, 0x905, 0x106f}, S3, S2, S1, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e]

================================

Block 0x99a
[0x99a:0xa06]
---
Predecessors: [0x94d]
Successors: []
---
0x99a PUSH1 0x40
0x99c MLOAD
0x99d PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x9be DUP2
0x9bf MSTORE
0x9c0 PUSH1 0x4
0x9c2 ADD
0x9c3 DUP1
0x9c4 DUP1
0x9c5 PUSH1 0x20
0x9c7 ADD
0x9c8 DUP3
0x9c9 DUP2
0x9ca SUB
0x9cb DUP3
0x9cc MSTORE
0x9cd PUSH1 0x5
0x9cf DUP2
0x9d0 MSTORE
0x9d1 PUSH1 0x20
0x9d3 ADD
0x9d4 DUP1
0x9d5 PUSH32 0x6572726f72000000000000000000000000000000000000000000000000000000
0x9f6 DUP2
0x9f7 MSTORE
0x9f8 POP
0x9f9 PUSH1 0x20
0x9fb ADD
0x9fc SWAP2
0x9fd POP
0x9fe POP
0x9ff PUSH1 0x40
0xa01 MLOAD
0xa02 DUP1
0xa03 SWAP2
0xa04 SUB
0xa05 SWAP1
0xa06 REVERT
---
0x99a: V616 = 0x40
0x99c: V617 = M[0x40]
0x99d: V618 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x9bf: M[V617] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x9c0: V619 = 0x4
0x9c2: V620 = ADD 0x4 V617
0x9c5: V621 = 0x20
0x9c7: V622 = ADD 0x20 V620
0x9ca: V623 = SUB V622 V620
0x9cc: M[V620] = V623
0x9cd: V624 = 0x5
0x9d0: M[V622] = 0x5
0x9d1: V625 = 0x20
0x9d3: V626 = ADD 0x20 V622
0x9d5: V627 = 0x6572726f72000000000000000000000000000000000000000000000000000000
0x9f7: M[V626] = 0x6572726f72000000000000000000000000000000000000000000000000000000
0x9f9: V628 = 0x20
0x9fb: V629 = ADD 0x20 V626
0x9ff: V630 = 0x40
0xa01: V631 = M[0x40]
0xa04: V632 = SUB V629 V631
0xa06: REVERT V631 V632
---
Entry stack: [V11, S9, S8, S7, S6, S5, {0x2cf, 0x905, 0x106f}, S3, S2, S1, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, {0x2cf, 0x905, 0x106f}, S3, S2, S1, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e]

================================

Block 0xa07
[0xa07:0xa58]
---
Predecessors: [0x94d]
Successors: [0x1121]
---
0xa07 JUMPDEST
0xa08 PUSH2 0xa59
0xa0b DUP3
0xa0c PUSH1 0x3
0xa0e PUSH1 0x0
0xa10 DUP7
0xa11 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa26 AND
0xa27 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3c AND
0xa3d DUP2
0xa3e MSTORE
0xa3f PUSH1 0x20
0xa41 ADD
0xa42 SWAP1
0xa43 DUP2
0xa44 MSTORE
0xa45 PUSH1 0x20
0xa47 ADD
0xa48 PUSH1 0x0
0xa4a SHA3
0xa4b SLOAD
0xa4c PUSH2 0x1121
0xa4f SWAP1
0xa50 SWAP2
0xa51 SWAP1
0xa52 PUSH4 0xffffffff
0xa57 AND
0xa58 JUMP
---
0xa07: JUMPDEST 
0xa08: V633 = 0xa59
0xa0c: V634 = 0x3
0xa0e: V635 = 0x0
0xa11: V636 = 0xffffffffffffffffffffffffffffffffffffffff
0xa26: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa27: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3c: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0xa3e: M[0x0] = V639
0xa3f: V640 = 0x20
0xa41: V641 = ADD 0x20 0x0
0xa44: M[0x20] = 0x3
0xa45: V642 = 0x20
0xa47: V643 = ADD 0x20 0x20
0xa48: V644 = 0x0
0xa4a: V645 = SHA3 0x0 0x40
0xa4b: V646 = S[V645]
0xa4c: V647 = 0x1121
0xa52: V648 = 0xffffffff
0xa57: V649 = AND 0xffffffff 0x1121
0xa58: JUMP 0x1121
---
Entry stack: [V11, S9, S8, S7, S6, S5, {0x2cf, 0x905, 0x106f}, S3, S2, S1, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xa59, V646, S1]
Exit stack: [V11, S9, S8, S7, S6, S5, {0x2cf, 0x905, 0x106f}, S3, S2, S1, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e, 0xa59, V646, S1]

================================

Block 0xa59
[0xa59:0xb06]
---
Predecessors: [0x1138]
Successors: [0x2cf, 0x905, 0x106f]
---
0xa59 JUMPDEST
0xa5a PUSH1 0x3
0xa5c PUSH1 0x0
0xa5e DUP6
0xa5f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa74 AND
0xa75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8a AND
0xa8b DUP2
0xa8c MSTORE
0xa8d PUSH1 0x20
0xa8f ADD
0xa90 SWAP1
0xa91 DUP2
0xa92 MSTORE
0xa93 PUSH1 0x20
0xa95 ADD
0xa96 PUSH1 0x0
0xa98 SHA3
0xa99 DUP2
0xa9a SWAP1
0xa9b SSTORE
0xa9c POP
0xa9d DUP3
0xa9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab3 AND
0xab4 DUP5
0xab5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaca AND
0xacb PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xaec DUP5
0xaed PUSH1 0x40
0xaef MLOAD
0xaf0 DUP1
0xaf1 DUP3
0xaf2 DUP2
0xaf3 MSTORE
0xaf4 PUSH1 0x20
0xaf6 ADD
0xaf7 SWAP2
0xaf8 POP
0xaf9 POP
0xafa PUSH1 0x40
0xafc MLOAD
0xafd DUP1
0xafe SWAP2
0xaff SUB
0xb00 SWAP1
0xb01 LOG3
0xb02 POP
0xb03 POP
0xb04 POP
0xb05 POP
0xb06 JUMP
---
0xa59: JUMPDEST 
0xa5a: V650 = 0x3
0xa5c: V651 = 0x0
0xa5f: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0xa74: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa75: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8a: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0xa8c: M[0x0] = V655
0xa8d: V656 = 0x20
0xa8f: V657 = ADD 0x20 0x0
0xa92: M[0x20] = 0x3
0xa93: V658 = 0x20
0xa95: V659 = ADD 0x20 0x20
0xa96: V660 = 0x0
0xa98: V661 = SHA3 0x0 0x40
0xa9b: S[V661] = S0
0xa9e: V662 = 0xffffffffffffffffffffffffffffffffffffffff
0xab3: V663 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xab5: V664 = 0xffffffffffffffffffffffffffffffffffffffff
0xaca: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xacb: V666 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xaed: V667 = 0x40
0xaef: V668 = M[0x40]
0xaf3: M[V668] = S2
0xaf4: V669 = 0x20
0xaf6: V670 = ADD 0x20 V668
0xafa: V671 = 0x40
0xafc: V672 = M[0x40]
0xaff: V673 = SUB V670 V672
0xb01: LOG V672 V673 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V665 V663
0xb06: JUMP S5
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e}, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6]

================================

Block 0xb07
[0xb07:0xb0c]
---
Predecessors: [0x2dd]
Successors: [0x2e6]
---
0xb07 JUMPDEST
0xb08 PUSH1 0x2
0xb0a SLOAD
0xb0b DUP2
0xb0c JUMP
---
0xb07: JUMPDEST 
0xb08: V674 = 0x2
0xb0a: V675 = S[0x2]
0xb0c: JUMP 0x2e6
---
Entry stack: [V11, 0x2e6]
Stack pops: 1
Stack additions: [S0, V675]
Exit stack: [V11, 0x2e6, V675]

================================

Block 0xb0d
[0xb0d:0xb45]
---
Predecessors: [0x308]
Successors: [0xb46, 0xb4a]
---
0xb0d JUMPDEST
0xb0e PUSH1 0x0
0xb10 DUP1
0xb11 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb26 AND
0xb27 DUP4
0xb28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3d AND
0xb3e EQ
0xb3f ISZERO
0xb40 ISZERO
0xb41 ISZERO
0xb42 PUSH2 0xb4a
0xb45 JUMPI
---
0xb0d: JUMPDEST 
0xb0e: V676 = 0x0
0xb11: V677 = 0xffffffffffffffffffffffffffffffffffffffff
0xb26: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xb28: V679 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3d: V680 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0xb3e: V681 = EQ V680 0x0
0xb3f: V682 = ISZERO V681
0xb40: V683 = ISZERO V682
0xb41: V684 = ISZERO V683
0xb42: V685 = 0xb4a
0xb45: JUMPI 0xb4a V684
---
Entry stack: [V11, 0x347, V219, V222]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x347, V219, V222, 0x0]

================================

Block 0xb46
[0xb46:0xb49]
---
Predecessors: [0xb0d]
Successors: []
---
0xb46 PUSH1 0x0
0xb48 DUP1
0xb49 REVERT
---
0xb46: V686 = 0x0
0xb49: REVERT 0x0 0x0
---
Entry stack: [V11, 0x347, V219, V222, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x347, V219, V222, 0x0]

================================

Block 0xb4a
[0xb4a:0xbd8]
---
Predecessors: [0xb0d]
Successors: [0x1121]
---
0xb4a JUMPDEST
0xb4b PUSH2 0xbd9
0xb4e DUP3
0xb4f PUSH1 0x4
0xb51 PUSH1 0x0
0xb53 CALLER
0xb54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb69 AND
0xb6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7f AND
0xb80 DUP2
0xb81 MSTORE
0xb82 PUSH1 0x20
0xb84 ADD
0xb85 SWAP1
0xb86 DUP2
0xb87 MSTORE
0xb88 PUSH1 0x20
0xb8a ADD
0xb8b PUSH1 0x0
0xb8d SHA3
0xb8e PUSH1 0x0
0xb90 DUP7
0xb91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba6 AND
0xba7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbc AND
0xbbd DUP2
0xbbe MSTORE
0xbbf PUSH1 0x20
0xbc1 ADD
0xbc2 SWAP1
0xbc3 DUP2
0xbc4 MSTORE
0xbc5 PUSH1 0x20
0xbc7 ADD
0xbc8 PUSH1 0x0
0xbca SHA3
0xbcb SLOAD
0xbcc PUSH2 0x1121
0xbcf SWAP1
0xbd0 SWAP2
0xbd1 SWAP1
0xbd2 PUSH4 0xffffffff
0xbd7 AND
0xbd8 JUMP
---
0xb4a: JUMPDEST 
0xb4b: V687 = 0xbd9
0xb4f: V688 = 0x4
0xb51: V689 = 0x0
0xb53: V690 = CALLER
0xb54: V691 = 0xffffffffffffffffffffffffffffffffffffffff
0xb69: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0xb6a: V693 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7f: V694 = AND 0xffffffffffffffffffffffffffffffffffffffff V692
0xb81: M[0x0] = V694
0xb82: V695 = 0x20
0xb84: V696 = ADD 0x20 0x0
0xb87: M[0x20] = 0x4
0xb88: V697 = 0x20
0xb8a: V698 = ADD 0x20 0x20
0xb8b: V699 = 0x0
0xb8d: V700 = SHA3 0x0 0x40
0xb8e: V701 = 0x0
0xb91: V702 = 0xffffffffffffffffffffffffffffffffffffffff
0xba6: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0xba7: V704 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbc: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0xbbe: M[0x0] = V705
0xbbf: V706 = 0x20
0xbc1: V707 = ADD 0x20 0x0
0xbc4: M[0x20] = V700
0xbc5: V708 = 0x20
0xbc7: V709 = ADD 0x20 0x20
0xbc8: V710 = 0x0
0xbca: V711 = SHA3 0x0 0x40
0xbcb: V712 = S[V711]
0xbcc: V713 = 0x1121
0xbd2: V714 = 0xffffffff
0xbd7: V715 = AND 0xffffffff 0x1121
0xbd8: JUMP 0x1121
---
Entry stack: [V11, 0x347, V219, V222, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xbd9, V712, S1]
Exit stack: [V11, 0x347, V219, V222, 0x0, 0xbd9, V712, V222]

================================

Block 0xbd9
[0xbd9:0xd43]
---
Predecessors: [0x1138]
Successors: [0x347]
---
0xbd9 JUMPDEST
0xbda PUSH1 0x4
0xbdc PUSH1 0x0
0xbde CALLER
0xbdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf4 AND
0xbf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0a AND
0xc0b DUP2
0xc0c MSTORE
0xc0d PUSH1 0x20
0xc0f ADD
0xc10 SWAP1
0xc11 DUP2
0xc12 MSTORE
0xc13 PUSH1 0x20
0xc15 ADD
0xc16 PUSH1 0x0
0xc18 SHA3
0xc19 PUSH1 0x0
0xc1b DUP6
0xc1c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc31 AND
0xc32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc47 AND
0xc48 DUP2
0xc49 MSTORE
0xc4a PUSH1 0x20
0xc4c ADD
0xc4d SWAP1
0xc4e DUP2
0xc4f MSTORE
0xc50 PUSH1 0x20
0xc52 ADD
0xc53 PUSH1 0x0
0xc55 SHA3
0xc56 DUP2
0xc57 SWAP1
0xc58 SSTORE
0xc59 POP
0xc5a DUP3
0xc5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc70 AND
0xc71 CALLER
0xc72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc87 AND
0xc88 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xca9 PUSH1 0x4
0xcab PUSH1 0x0
0xcad CALLER
0xcae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc3 AND
0xcc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd9 AND
0xcda DUP2
0xcdb MSTORE
0xcdc PUSH1 0x20
0xcde ADD
0xcdf SWAP1
0xce0 DUP2
0xce1 MSTORE
0xce2 PUSH1 0x20
0xce4 ADD
0xce5 PUSH1 0x0
0xce7 SHA3
0xce8 PUSH1 0x0
0xcea DUP8
0xceb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd00 AND
0xd01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd16 AND
0xd17 DUP2
0xd18 MSTORE
0xd19 PUSH1 0x20
0xd1b ADD
0xd1c SWAP1
0xd1d DUP2
0xd1e MSTORE
0xd1f PUSH1 0x20
0xd21 ADD
0xd22 PUSH1 0x0
0xd24 SHA3
0xd25 SLOAD
0xd26 PUSH1 0x40
0xd28 MLOAD
0xd29 DUP1
0xd2a DUP3
0xd2b DUP2
0xd2c MSTORE
0xd2d PUSH1 0x20
0xd2f ADD
0xd30 SWAP2
0xd31 POP
0xd32 POP
0xd33 PUSH1 0x40
0xd35 MLOAD
0xd36 DUP1
0xd37 SWAP2
0xd38 SUB
0xd39 SWAP1
0xd3a LOG3
0xd3b PUSH1 0x1
0xd3d SWAP1
0xd3e POP
0xd3f SWAP3
0xd40 SWAP2
0xd41 POP
0xd42 POP
0xd43 JUMP
---
0xbd9: JUMPDEST 
0xbda: V716 = 0x4
0xbdc: V717 = 0x0
0xbde: V718 = CALLER
0xbdf: V719 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf4: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V718
0xbf5: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0a: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0xc0c: M[0x0] = V722
0xc0d: V723 = 0x20
0xc0f: V724 = ADD 0x20 0x0
0xc12: M[0x20] = 0x4
0xc13: V725 = 0x20
0xc15: V726 = ADD 0x20 0x20
0xc16: V727 = 0x0
0xc18: V728 = SHA3 0x0 0x40
0xc19: V729 = 0x0
0xc1c: V730 = 0xffffffffffffffffffffffffffffffffffffffff
0xc31: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc32: V732 = 0xffffffffffffffffffffffffffffffffffffffff
0xc47: V733 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0xc49: M[0x0] = V733
0xc4a: V734 = 0x20
0xc4c: V735 = ADD 0x20 0x0
0xc4f: M[0x20] = V728
0xc50: V736 = 0x20
0xc52: V737 = ADD 0x20 0x20
0xc53: V738 = 0x0
0xc55: V739 = SHA3 0x0 0x40
0xc58: S[V739] = S0
0xc5b: V740 = 0xffffffffffffffffffffffffffffffffffffffff
0xc70: V741 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc71: V742 = CALLER
0xc72: V743 = 0xffffffffffffffffffffffffffffffffffffffff
0xc87: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V742
0xc88: V745 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xca9: V746 = 0x4
0xcab: V747 = 0x0
0xcad: V748 = CALLER
0xcae: V749 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc3: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V748
0xcc4: V751 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd9: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0xcdb: M[0x0] = V752
0xcdc: V753 = 0x20
0xcde: V754 = ADD 0x20 0x0
0xce1: M[0x20] = 0x4
0xce2: V755 = 0x20
0xce4: V756 = ADD 0x20 0x20
0xce5: V757 = 0x0
0xce7: V758 = SHA3 0x0 0x40
0xce8: V759 = 0x0
0xceb: V760 = 0xffffffffffffffffffffffffffffffffffffffff
0xd00: V761 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd01: V762 = 0xffffffffffffffffffffffffffffffffffffffff
0xd16: V763 = AND 0xffffffffffffffffffffffffffffffffffffffff V761
0xd18: M[0x0] = V763
0xd19: V764 = 0x20
0xd1b: V765 = ADD 0x20 0x0
0xd1e: M[0x20] = V758
0xd1f: V766 = 0x20
0xd21: V767 = ADD 0x20 0x20
0xd22: V768 = 0x0
0xd24: V769 = SHA3 0x0 0x40
0xd25: V770 = S[V769]
0xd26: V771 = 0x40
0xd28: V772 = M[0x40]
0xd2c: M[V772] = V770
0xd2d: V773 = 0x20
0xd2f: V774 = ADD 0x20 V772
0xd33: V775 = 0x40
0xd35: V776 = M[0x40]
0xd38: V777 = SUB V774 V776
0xd3a: LOG V776 V777 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V744 V741
0xd3b: V778 = 0x1
0xd43: JUMP S4
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e}, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, S10, S9, S8, S7, S6, S5, 0x1]

================================

Block 0xd44
[0xd44:0xd8c]
---
Predecessors: [0x36d]
Successors: [0x3a2]
---
0xd44 JUMPDEST
0xd45 PUSH1 0x0
0xd47 PUSH1 0x3
0xd49 PUSH1 0x0
0xd4b DUP4
0xd4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd61 AND
0xd62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd77 AND
0xd78 DUP2
0xd79 MSTORE
0xd7a PUSH1 0x20
0xd7c ADD
0xd7d SWAP1
0xd7e DUP2
0xd7f MSTORE
0xd80 PUSH1 0x20
0xd82 ADD
0xd83 PUSH1 0x0
0xd85 SHA3
0xd86 SLOAD
0xd87 SWAP1
0xd88 POP
0xd89 SWAP2
0xd8a SWAP1
0xd8b POP
0xd8c JUMP
---
0xd44: JUMPDEST 
0xd45: V779 = 0x0
0xd47: V780 = 0x3
0xd49: V781 = 0x0
0xd4c: V782 = 0xffffffffffffffffffffffffffffffffffffffff
0xd61: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0xd62: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xd77: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V783
0xd79: M[0x0] = V785
0xd7a: V786 = 0x20
0xd7c: V787 = ADD 0x20 0x0
0xd7f: M[0x20] = 0x3
0xd80: V788 = 0x20
0xd82: V789 = ADD 0x20 0x20
0xd83: V790 = 0x0
0xd85: V791 = SHA3 0x0 0x40
0xd86: V792 = S[V791]
0xd8c: JUMP 0x3a2
---
Entry stack: [V11, 0x3a2, V248]
Stack pops: 2
Stack additions: [V792]
Exit stack: [V11, V792]

================================

Block 0xd8d
[0xd8d:0xddc]
---
Predecessors: [0x3c4]
Successors: [0xddd, 0xe23]
---
0xd8d JUMPDEST
0xd8e PUSH1 0x1
0xd90 DUP1
0xd91 SLOAD
0xd92 PUSH1 0x1
0xd94 DUP2
0xd95 PUSH1 0x1
0xd97 AND
0xd98 ISZERO
0xd99 PUSH2 0x100
0xd9c MUL
0xd9d SUB
0xd9e AND
0xd9f PUSH1 0x2
0xda1 SWAP1
0xda2 DIV
0xda3 DUP1
0xda4 PUSH1 0x1f
0xda6 ADD
0xda7 PUSH1 0x20
0xda9 DUP1
0xdaa SWAP2
0xdab DIV
0xdac MUL
0xdad PUSH1 0x20
0xdaf ADD
0xdb0 PUSH1 0x40
0xdb2 MLOAD
0xdb3 SWAP1
0xdb4 DUP2
0xdb5 ADD
0xdb6 PUSH1 0x40
0xdb8 MSTORE
0xdb9 DUP1
0xdba SWAP3
0xdbb SWAP2
0xdbc SWAP1
0xdbd DUP2
0xdbe DUP2
0xdbf MSTORE
0xdc0 PUSH1 0x20
0xdc2 ADD
0xdc3 DUP3
0xdc4 DUP1
0xdc5 SLOAD
0xdc6 PUSH1 0x1
0xdc8 DUP2
0xdc9 PUSH1 0x1
0xdcb AND
0xdcc ISZERO
0xdcd PUSH2 0x100
0xdd0 MUL
0xdd1 SUB
0xdd2 AND
0xdd3 PUSH1 0x2
0xdd5 SWAP1
0xdd6 DIV
0xdd7 DUP1
0xdd8 ISZERO
0xdd9 PUSH2 0xe23
0xddc JUMPI
---
0xd8d: JUMPDEST 
0xd8e: V793 = 0x1
0xd91: V794 = S[0x1]
0xd92: V795 = 0x1
0xd95: V796 = 0x1
0xd97: V797 = AND 0x1 V794
0xd98: V798 = ISZERO V797
0xd99: V799 = 0x100
0xd9c: V800 = MUL 0x100 V798
0xd9d: V801 = SUB V800 0x1
0xd9e: V802 = AND V801 V794
0xd9f: V803 = 0x2
0xda2: V804 = DIV V802 0x2
0xda4: V805 = 0x1f
0xda6: V806 = ADD 0x1f V804
0xda7: V807 = 0x20
0xdab: V808 = DIV V806 0x20
0xdac: V809 = MUL V808 0x20
0xdad: V810 = 0x20
0xdaf: V811 = ADD 0x20 V809
0xdb0: V812 = 0x40
0xdb2: V813 = M[0x40]
0xdb5: V814 = ADD V813 V811
0xdb6: V815 = 0x40
0xdb8: M[0x40] = V814
0xdbf: M[V813] = V804
0xdc0: V816 = 0x20
0xdc2: V817 = ADD 0x20 V813
0xdc5: V818 = S[0x1]
0xdc6: V819 = 0x1
0xdc9: V820 = 0x1
0xdcb: V821 = AND 0x1 V818
0xdcc: V822 = ISZERO V821
0xdcd: V823 = 0x100
0xdd0: V824 = MUL 0x100 V822
0xdd1: V825 = SUB V824 0x1
0xdd2: V826 = AND V825 V818
0xdd3: V827 = 0x2
0xdd6: V828 = DIV V826 0x2
0xdd8: V829 = ISZERO V828
0xdd9: V830 = 0xe23
0xddc: JUMPI 0xe23 V829
---
Entry stack: [V11, 0x3cd]
Stack pops: 0
Stack additions: [V813, 0x1, V804, V817, 0x1, V828]
Exit stack: [V11, 0x3cd, V813, 0x1, V804, V817, 0x1, V828]

================================

Block 0xddd
[0xddd:0xde4]
---
Predecessors: [0xd8d]
Successors: [0xde5, 0xdf8]
---
0xddd DUP1
0xdde PUSH1 0x1f
0xde0 LT
0xde1 PUSH2 0xdf8
0xde4 JUMPI
---
0xdde: V831 = 0x1f
0xde0: V832 = LT 0x1f V828
0xde1: V833 = 0xdf8
0xde4: JUMPI 0xdf8 V832
---
Entry stack: [V11, 0x3cd, V813, 0x1, V804, V817, 0x1, V828]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x3cd, V813, 0x1, V804, V817, 0x1, V828]

================================

Block 0xde5
[0xde5:0xdf7]
---
Predecessors: [0xddd]
Successors: [0xe23]
---
0xde5 PUSH2 0x100
0xde8 DUP1
0xde9 DUP4
0xdea SLOAD
0xdeb DIV
0xdec MUL
0xded DUP4
0xdee MSTORE
0xdef SWAP2
0xdf0 PUSH1 0x20
0xdf2 ADD
0xdf3 SWAP2
0xdf4 PUSH2 0xe23
0xdf7 JUMP
---
0xde5: V834 = 0x100
0xdea: V835 = S[0x1]
0xdeb: V836 = DIV V835 0x100
0xdec: V837 = MUL V836 0x100
0xdee: M[V817] = V837
0xdf0: V838 = 0x20
0xdf2: V839 = ADD 0x20 V817
0xdf4: V840 = 0xe23
0xdf7: JUMP 0xe23
---
Entry stack: [V11, 0x3cd, V813, 0x1, V804, V817, 0x1, V828]
Stack pops: 3
Stack additions: [V839, S1, S0]
Exit stack: [V11, 0x3cd, V813, 0x1, V804, V839, 0x1, V828]

================================

Block 0xdf8
[0xdf8:0xe05]
---
Predecessors: [0xddd]
Successors: [0xe06]
---
0xdf8 JUMPDEST
0xdf9 DUP3
0xdfa ADD
0xdfb SWAP2
0xdfc SWAP1
0xdfd PUSH1 0x0
0xdff MSTORE
0xe00 PUSH1 0x20
0xe02 PUSH1 0x0
0xe04 SHA3
0xe05 SWAP1
---
0xdf8: JUMPDEST 
0xdfa: V841 = ADD V817 V828
0xdfd: V842 = 0x0
0xdff: M[0x0] = 0x1
0xe00: V843 = 0x20
0xe02: V844 = 0x0
0xe04: V845 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x3cd, V813, 0x1, V804, V817, 0x1, V828]
Stack pops: 3
Stack additions: [V841, V845, S2]
Exit stack: [V11, 0x3cd, V813, 0x1, V804, V841, V845, V817]

================================

Block 0xe06
[0xe06:0xe19]
---
Predecessors: [0xdf8, 0xe06]
Successors: [0xe06, 0xe1a]
---
0xe06 JUMPDEST
0xe07 DUP2
0xe08 SLOAD
0xe09 DUP2
0xe0a MSTORE
0xe0b SWAP1
0xe0c PUSH1 0x1
0xe0e ADD
0xe0f SWAP1
0xe10 PUSH1 0x20
0xe12 ADD
0xe13 DUP1
0xe14 DUP4
0xe15 GT
0xe16 PUSH2 0xe06
0xe19 JUMPI
---
0xe06: JUMPDEST 
0xe08: V846 = S[S1]
0xe0a: M[S0] = V846
0xe0c: V847 = 0x1
0xe0e: V848 = ADD 0x1 S1
0xe10: V849 = 0x20
0xe12: V850 = ADD 0x20 S0
0xe15: V851 = GT V841 V850
0xe16: V852 = 0xe06
0xe19: JUMPI 0xe06 V851
---
Entry stack: [V11, 0x3cd, V813, 0x1, V804, V841, S1, S0]
Stack pops: 3
Stack additions: [S2, V848, V850]
Exit stack: [V11, 0x3cd, V813, 0x1, V804, V841, V848, V850]

================================

Block 0xe1a
[0xe1a:0xe22]
---
Predecessors: [0xe06]
Successors: [0xe23]
---
0xe1a DUP3
0xe1b SWAP1
0xe1c SUB
0xe1d PUSH1 0x1f
0xe1f AND
0xe20 DUP3
0xe21 ADD
0xe22 SWAP2
---
0xe1c: V853 = SUB V850 V841
0xe1d: V854 = 0x1f
0xe1f: V855 = AND 0x1f V853
0xe21: V856 = ADD V841 V855
---
Entry stack: [V11, 0x3cd, V813, 0x1, V804, V841, V848, V850]
Stack pops: 3
Stack additions: [V856, S1, S2]
Exit stack: [V11, 0x3cd, V813, 0x1, V804, V856, V848, V841]

================================

Block 0xe23
[0xe23:0xe2a]
---
Predecessors: [0xd8d, 0xde5, 0xe1a]
Successors: [0x3cd]
---
0xe23 JUMPDEST
0xe24 POP
0xe25 POP
0xe26 POP
0xe27 POP
0xe28 POP
0xe29 DUP2
0xe2a JUMP
---
0xe23: JUMPDEST 
0xe2a: JUMP 0x3cd
---
Entry stack: [V11, 0x3cd, V813, 0x1, V804, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x3cd, V813]

================================

Block 0xe2b
[0xe2b:0xe63]
---
Predecessors: [0x454]
Successors: [0xe64, 0xe68]
---
0xe2b JUMPDEST
0xe2c PUSH1 0x0
0xe2e DUP1
0xe2f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe44 AND
0xe45 DUP4
0xe46 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5b AND
0xe5c EQ
0xe5d ISZERO
0xe5e ISZERO
0xe5f ISZERO
0xe60 PUSH2 0xe68
0xe63 JUMPI
---
0xe2b: JUMPDEST 
0xe2c: V857 = 0x0
0xe2f: V858 = 0xffffffffffffffffffffffffffffffffffffffff
0xe44: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xe46: V860 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5b: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0xe5c: V862 = EQ V861 0x0
0xe5d: V863 = ISZERO V862
0xe5e: V864 = ISZERO V863
0xe5f: V865 = ISZERO V864
0xe60: V866 = 0xe68
0xe63: JUMPI 0xe68 V865
---
Entry stack: [V11, 0x493, V317, V320]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x493, V317, V320, 0x0]

================================

Block 0xe64
[0xe64:0xe67]
---
Predecessors: [0xe2b]
Successors: []
---
0xe64 PUSH1 0x0
0xe66 DUP1
0xe67 REVERT
---
0xe64: V867 = 0x0
0xe67: REVERT 0x0 0x0
---
Entry stack: [V11, 0x493, V317, V320, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x493, V317, V320, 0x0]

================================

Block 0xe68
[0xe68:0xef6]
---
Predecessors: [0xe2b]
Successors: [0x1100]
---
0xe68 JUMPDEST
0xe69 PUSH2 0xef7
0xe6c DUP3
0xe6d PUSH1 0x4
0xe6f PUSH1 0x0
0xe71 CALLER
0xe72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe87 AND
0xe88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9d AND
0xe9e DUP2
0xe9f MSTORE
0xea0 PUSH1 0x20
0xea2 ADD
0xea3 SWAP1
0xea4 DUP2
0xea5 MSTORE
0xea6 PUSH1 0x20
0xea8 ADD
0xea9 PUSH1 0x0
0xeab SHA3
0xeac PUSH1 0x0
0xeae DUP7
0xeaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec4 AND
0xec5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeda AND
0xedb DUP2
0xedc MSTORE
0xedd PUSH1 0x20
0xedf ADD
0xee0 SWAP1
0xee1 DUP2
0xee2 MSTORE
0xee3 PUSH1 0x20
0xee5 ADD
0xee6 PUSH1 0x0
0xee8 SHA3
0xee9 SLOAD
0xeea PUSH2 0x1100
0xeed SWAP1
0xeee SWAP2
0xeef SWAP1
0xef0 PUSH4 0xffffffff
0xef5 AND
0xef6 JUMP
---
0xe68: JUMPDEST 
0xe69: V868 = 0xef7
0xe6d: V869 = 0x4
0xe6f: V870 = 0x0
0xe71: V871 = CALLER
0xe72: V872 = 0xffffffffffffffffffffffffffffffffffffffff
0xe87: V873 = AND 0xffffffffffffffffffffffffffffffffffffffff V871
0xe88: V874 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9d: V875 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0xe9f: M[0x0] = V875
0xea0: V876 = 0x20
0xea2: V877 = ADD 0x20 0x0
0xea5: M[0x20] = 0x4
0xea6: V878 = 0x20
0xea8: V879 = ADD 0x20 0x20
0xea9: V880 = 0x0
0xeab: V881 = SHA3 0x0 0x40
0xeac: V882 = 0x0
0xeaf: V883 = 0xffffffffffffffffffffffffffffffffffffffff
0xec4: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0xec5: V885 = 0xffffffffffffffffffffffffffffffffffffffff
0xeda: V886 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0xedc: M[0x0] = V886
0xedd: V887 = 0x20
0xedf: V888 = ADD 0x20 0x0
0xee2: M[0x20] = V881
0xee3: V889 = 0x20
0xee5: V890 = ADD 0x20 0x20
0xee6: V891 = 0x0
0xee8: V892 = SHA3 0x0 0x40
0xee9: V893 = S[V892]
0xeea: V894 = 0x1100
0xef0: V895 = 0xffffffff
0xef5: V896 = AND 0xffffffff 0x1100
0xef6: JUMP 0x1100
---
Entry stack: [V11, 0x493, V317, V320, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xef7, V893, S1]
Exit stack: [V11, 0x493, V317, V320, 0x0, 0xef7, V893, V320]

================================

Block 0xef7
[0xef7:0x1061]
---
Predecessors: [0x1112]
Successors: [0x493]
---
0xef7 JUMPDEST
0xef8 PUSH1 0x4
0xefa PUSH1 0x0
0xefc CALLER
0xefd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf12 AND
0xf13 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf28 AND
0xf29 DUP2
0xf2a MSTORE
0xf2b PUSH1 0x20
0xf2d ADD
0xf2e SWAP1
0xf2f DUP2
0xf30 MSTORE
0xf31 PUSH1 0x20
0xf33 ADD
0xf34 PUSH1 0x0
0xf36 SHA3
0xf37 PUSH1 0x0
0xf39 DUP6
0xf3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4f AND
0xf50 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf65 AND
0xf66 DUP2
0xf67 MSTORE
0xf68 PUSH1 0x20
0xf6a ADD
0xf6b SWAP1
0xf6c DUP2
0xf6d MSTORE
0xf6e PUSH1 0x20
0xf70 ADD
0xf71 PUSH1 0x0
0xf73 SHA3
0xf74 DUP2
0xf75 SWAP1
0xf76 SSTORE
0xf77 POP
0xf78 DUP3
0xf79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8e AND
0xf8f CALLER
0xf90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa5 AND
0xfa6 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xfc7 PUSH1 0x4
0xfc9 PUSH1 0x0
0xfcb CALLER
0xfcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe1 AND
0xfe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff7 AND
0xff8 DUP2
0xff9 MSTORE
0xffa PUSH1 0x20
0xffc ADD
0xffd SWAP1
0xffe DUP2
0xfff MSTORE
0x1000 PUSH1 0x20
0x1002 ADD
0x1003 PUSH1 0x0
0x1005 SHA3
0x1006 PUSH1 0x0
0x1008 DUP8
0x1009 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101e AND
0x101f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1034 AND
0x1035 DUP2
0x1036 MSTORE
0x1037 PUSH1 0x20
0x1039 ADD
0x103a SWAP1
0x103b DUP2
0x103c MSTORE
0x103d PUSH1 0x20
0x103f ADD
0x1040 PUSH1 0x0
0x1042 SHA3
0x1043 SLOAD
0x1044 PUSH1 0x40
0x1046 MLOAD
0x1047 DUP1
0x1048 DUP3
0x1049 DUP2
0x104a MSTORE
0x104b PUSH1 0x20
0x104d ADD
0x104e SWAP2
0x104f POP
0x1050 POP
0x1051 PUSH1 0x40
0x1053 MLOAD
0x1054 DUP1
0x1055 SWAP2
0x1056 SUB
0x1057 SWAP1
0x1058 LOG3
0x1059 PUSH1 0x1
0x105b SWAP1
0x105c POP
0x105d SWAP3
0x105e SWAP2
0x105f POP
0x1060 POP
0x1061 JUMP
---
0xef7: JUMPDEST 
0xef8: V897 = 0x4
0xefa: V898 = 0x0
0xefc: V899 = CALLER
0xefd: V900 = 0xffffffffffffffffffffffffffffffffffffffff
0xf12: V901 = AND 0xffffffffffffffffffffffffffffffffffffffff V899
0xf13: V902 = 0xffffffffffffffffffffffffffffffffffffffff
0xf28: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff V901
0xf2a: M[0x0] = V903
0xf2b: V904 = 0x20
0xf2d: V905 = ADD 0x20 0x0
0xf30: M[0x20] = 0x4
0xf31: V906 = 0x20
0xf33: V907 = ADD 0x20 0x20
0xf34: V908 = 0x0
0xf36: V909 = SHA3 0x0 0x40
0xf37: V910 = 0x0
0xf3a: V911 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4f: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf50: V913 = 0xffffffffffffffffffffffffffffffffffffffff
0xf65: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V912
0xf67: M[0x0] = V914
0xf68: V915 = 0x20
0xf6a: V916 = ADD 0x20 0x0
0xf6d: M[0x20] = V909
0xf6e: V917 = 0x20
0xf70: V918 = ADD 0x20 0x20
0xf71: V919 = 0x0
0xf73: V920 = SHA3 0x0 0x40
0xf76: S[V920] = V997
0xf79: V921 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8e: V922 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf8f: V923 = CALLER
0xf90: V924 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa5: V925 = AND 0xffffffffffffffffffffffffffffffffffffffff V923
0xfa6: V926 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xfc7: V927 = 0x4
0xfc9: V928 = 0x0
0xfcb: V929 = CALLER
0xfcc: V930 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe1: V931 = AND 0xffffffffffffffffffffffffffffffffffffffff V929
0xfe2: V932 = 0xffffffffffffffffffffffffffffffffffffffff
0xff7: V933 = AND 0xffffffffffffffffffffffffffffffffffffffff V931
0xff9: M[0x0] = V933
0xffa: V934 = 0x20
0xffc: V935 = ADD 0x20 0x0
0xfff: M[0x20] = 0x4
0x1000: V936 = 0x20
0x1002: V937 = ADD 0x20 0x20
0x1003: V938 = 0x0
0x1005: V939 = SHA3 0x0 0x40
0x1006: V940 = 0x0
0x1009: V941 = 0xffffffffffffffffffffffffffffffffffffffff
0x101e: V942 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x101f: V943 = 0xffffffffffffffffffffffffffffffffffffffff
0x1034: V944 = AND 0xffffffffffffffffffffffffffffffffffffffff V942
0x1036: M[0x0] = V944
0x1037: V945 = 0x20
0x1039: V946 = ADD 0x20 0x0
0x103c: M[0x20] = V939
0x103d: V947 = 0x20
0x103f: V948 = ADD 0x20 0x20
0x1040: V949 = 0x0
0x1042: V950 = SHA3 0x0 0x40
0x1043: V951 = S[V950]
0x1044: V952 = 0x40
0x1046: V953 = M[0x40]
0x104a: M[V953] = V951
0x104b: V954 = 0x20
0x104d: V955 = ADD 0x20 V953
0x1051: V956 = 0x40
0x1053: V957 = M[0x40]
0x1056: V958 = SUB V955 V957
0x1058: LOG V957 V958 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V925 V922
0x1059: V959 = 0x1
0x1061: JUMP S4
---
Entry stack: [V11, S5, S4, S3, S2, 0x0, V997]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, S5, 0x1]

================================

Block 0x1062
[0x1062:0x106e]
---
Predecessors: [0x4b9]
Successors: [0x910]
---
0x1062 JUMPDEST
0x1063 PUSH1 0x0
0x1065 PUSH2 0x106f
0x1068 CALLER
0x1069 DUP5
0x106a DUP5
0x106b PUSH2 0x910
0x106e JUMP
---
0x1062: JUMPDEST 
0x1063: V960 = 0x0
0x1065: V961 = 0x106f
0x1068: V962 = CALLER
0x106b: V963 = 0x910
0x106e: JUMP 0x910
---
Entry stack: [V11, 0x4f8, V346, V349]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x106f, V962, S1, S0]
Exit stack: [V11, 0x4f8, V346, V349, 0x0, 0x106f, V962, V346, V349]

================================

Block 0x106f
[0x106f:0x1078]
---
Predecessors: [0xa59]
Successors: [0x4f8]
---
0x106f JUMPDEST
0x1070 PUSH1 0x1
0x1072 SWAP1
0x1073 POP
0x1074 SWAP3
0x1075 SWAP2
0x1076 POP
0x1077 POP
0x1078 JUMP
---
0x106f: JUMPDEST 
0x1070: V964 = 0x1
0x1078: JUMP S3
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, S4, 0x1]

================================

Block 0x1079
[0x1079:0x10ff]
---
Predecessors: [0x51e]
Successors: [0x573]
---
0x1079 JUMPDEST
0x107a PUSH1 0x0
0x107c PUSH1 0x4
0x107e PUSH1 0x0
0x1080 DUP5
0x1081 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1096 AND
0x1097 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ac AND
0x10ad DUP2
0x10ae MSTORE
0x10af PUSH1 0x20
0x10b1 ADD
0x10b2 SWAP1
0x10b3 DUP2
0x10b4 MSTORE
0x10b5 PUSH1 0x20
0x10b7 ADD
0x10b8 PUSH1 0x0
0x10ba SHA3
0x10bb PUSH1 0x0
0x10bd DUP4
0x10be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d3 AND
0x10d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e9 AND
0x10ea DUP2
0x10eb MSTORE
0x10ec PUSH1 0x20
0x10ee ADD
0x10ef SWAP1
0x10f0 DUP2
0x10f1 MSTORE
0x10f2 PUSH1 0x20
0x10f4 ADD
0x10f5 PUSH1 0x0
0x10f7 SHA3
0x10f8 SLOAD
0x10f9 SWAP1
0x10fa POP
0x10fb SWAP3
0x10fc SWAP2
0x10fd POP
0x10fe POP
0x10ff JUMP
---
0x1079: JUMPDEST 
0x107a: V965 = 0x0
0x107c: V966 = 0x4
0x107e: V967 = 0x0
0x1081: V968 = 0xffffffffffffffffffffffffffffffffffffffff
0x1096: V969 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x1097: V970 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ac: V971 = AND 0xffffffffffffffffffffffffffffffffffffffff V969
0x10ae: M[0x0] = V971
0x10af: V972 = 0x20
0x10b1: V973 = ADD 0x20 0x0
0x10b4: M[0x20] = 0x4
0x10b5: V974 = 0x20
0x10b7: V975 = ADD 0x20 0x20
0x10b8: V976 = 0x0
0x10ba: V977 = SHA3 0x0 0x40
0x10bb: V978 = 0x0
0x10be: V979 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d3: V980 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x10d4: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e9: V982 = AND 0xffffffffffffffffffffffffffffffffffffffff V980
0x10eb: M[0x0] = V982
0x10ec: V983 = 0x20
0x10ee: V984 = ADD 0x20 0x0
0x10f1: M[0x20] = V977
0x10f2: V985 = 0x20
0x10f4: V986 = ADD 0x20 0x20
0x10f5: V987 = 0x0
0x10f7: V988 = SHA3 0x0 0x40
0x10f8: V989 = S[V988]
0x10ff: JUMP 0x573
---
Entry stack: [V11, 0x573, V375, V380]
Stack pops: 3
Stack additions: [V989]
Exit stack: [V11, V989]

================================

Block 0x1100
[0x1100:0x110d]
---
Predecessors: [0x7eb, 0xe68]
Successors: [0x110e, 0x1112]
---
0x1100 JUMPDEST
0x1101 PUSH1 0x0
0x1103 DUP1
0x1104 DUP4
0x1105 DUP4
0x1106 GT
0x1107 ISZERO
0x1108 ISZERO
0x1109 ISZERO
0x110a PUSH2 0x1112
0x110d JUMPI
---
0x1100: JUMPDEST 
0x1101: V990 = 0x0
0x1106: V991 = GT S0 S1
0x1107: V992 = ISZERO V991
0x1108: V993 = ISZERO V992
0x1109: V994 = ISZERO V993
0x110a: V995 = 0x1112
0x110d: JUMPI 0x1112 V994
---
Entry stack: [V11, S7, S6, S5, S4, 0x0, {0x87a, 0xef7}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, S7, S6, S5, S4, 0x0, {0x87a, 0xef7}, S1, S0, 0x0, 0x0]

================================

Block 0x110e
[0x110e:0x1111]
---
Predecessors: [0x1100]
Successors: []
---
0x110e PUSH1 0x0
0x1110 DUP1
0x1111 REVERT
---
0x110e: V996 = 0x0
0x1111: REVERT 0x0 0x0
---
Entry stack: [V11, S9, S8, S7, S6, 0x0, {0x87a, 0xef7}, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, 0x0, {0x87a, 0xef7}, S3, S2, 0x0, 0x0]

================================

Block 0x1112
[0x1112:0x1120]
---
Predecessors: [0x1100]
Successors: [0x87a, 0xef7]
---
0x1112 JUMPDEST
0x1113 DUP3
0x1114 DUP5
0x1115 SUB
0x1116 SWAP1
0x1117 POP
0x1118 DUP1
0x1119 SWAP2
0x111a POP
0x111b POP
0x111c SWAP3
0x111d SWAP2
0x111e POP
0x111f POP
0x1120 JUMP
---
0x1112: JUMPDEST 
0x1115: V997 = SUB S3 S2
0x1120: JUMP {0x87a, 0xef7}
---
Entry stack: [V11, S9, S8, S7, S6, 0x0, {0x87a, 0xef7}, S3, S2, 0x0, 0x0]
Stack pops: 5
Stack additions: [V997]
Exit stack: [V11, S9, S8, S7, S6, 0x0, V997]

================================

Block 0x1121
[0x1121:0x1133]
---
Predecessors: [0xa07, 0xb4a]
Successors: [0x1134, 0x1138]
---
0x1121 JUMPDEST
0x1122 PUSH1 0x0
0x1124 DUP1
0x1125 DUP3
0x1126 DUP5
0x1127 ADD
0x1128 SWAP1
0x1129 POP
0x112a DUP4
0x112b DUP2
0x112c LT
0x112d ISZERO
0x112e ISZERO
0x112f ISZERO
0x1130 PUSH2 0x1138
0x1133 JUMPI
---
0x1121: JUMPDEST 
0x1122: V998 = 0x0
0x1127: V999 = ADD S1 S0
0x112c: V1000 = LT V999 S1
0x112d: V1001 = ISZERO V1000
0x112e: V1002 = ISZERO V1001
0x112f: V1003 = ISZERO V1002
0x1130: V1004 = 0x1138
0x1133: JUMPI 0x1138 V1003
---
Entry stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e}, {0xa59, 0xbd9}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V999]
Exit stack: [V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e}, {0xa59, 0xbd9}, S1, S0, 0x0, V999]

================================

Block 0x1134
[0x1134:0x1137]
---
Predecessors: [0x1121]
Successors: []
---
0x1134 PUSH1 0x0
0x1136 DUP1
0x1137 REVERT
---
0x1134: V1005 = 0x0
0x1137: REVERT 0x0 0x0
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e}, {0xa59, 0xbd9}, S3, S2, 0x0, V999]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e}, {0xa59, 0xbd9}, S3, S2, 0x0, V999]

================================

Block 0x1138
[0x1138:0x1141]
---
Predecessors: [0x1121]
Successors: [0xa59, 0xbd9]
---
0x1138 JUMPDEST
0x1139 DUP1
0x113a SWAP2
0x113b POP
0x113c POP
0x113d SWAP3
0x113e SWAP2
0x113f POP
0x1140 POP
0x1141 JUMP
---
0x1138: JUMPDEST 
0x1141: JUMP {0xa59, 0xbd9}
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e}, {0xa59, 0xbd9}, S3, S2, 0x0, V999]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x454cef7863bfd0756b5e1ff19f48ff8362900a8e}, V999]

================================

Block 0x1142
[0x1142:0x1178]
---
Predecessors: []
Successors: []
---
0x1142 STOP
0x1143 LOG1
0x1144 PUSH6 0x627a7a723058
0x114b SHA3
0x114c PUSH11 0xdc8ee8c62332cc7d806a38
0x1158 SWAP14
0x1159 MISSING 0xe6
0x115a SGT
0x115b CALLVALUE
0x115c MISSING 0xc8
0x115d ISZERO
0x115e MISSING 0xd8
0x115f SHR
0x1160 ORIGIN
0x1161 REVERT
0x1162 DUP12
0x1163 MISSING 0xf8
0x1164 PUSH20 0xf522630215acc50029
---
0x1142: STOP 
0x1143: LOG S0 S1 S2
0x1144: V1006 = 0x627a7a723058
0x114b: V1007 = SHA3 0x627a7a723058 S3
0x114c: V1008 = 0xdc8ee8c62332cc7d806a38
0x1159: MISSING 0xe6
0x115a: V1009 = SGT S0 S1
0x115b: V1010 = CALLVALUE
0x115c: MISSING 0xc8
0x115d: V1011 = ISZERO S0
0x115e: MISSING 0xd8
0x115f: V1012 = SHR S0 S1
0x1160: V1013 = ORIGIN
0x1161: REVERT V1013 V1012
0x1163: MISSING 0xf8
0x1164: V1014 = 0xf522630215acc50029
---
Entry stack: []
Stack pops: 0
Stack additions: [S16, V1007, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0xdc8ee8c62332cc7d806a38, V1010, V1009, V1011, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0xf522630215acc50029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xbf
Exit block: 0x141
Body: 0xbf, 0xc7, 0xcb, 0xd4, 0xf9, 0x102, 0x114, 0x128, 0x141, 0x589, 0x5d9, 0x5e1, 0x5f4, 0x602, 0x616, 0x61f

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x14f
Exit block: 0x19a
Body: 0x14f, 0x157, 0x15b, 0x19a, 0x627, 0x660, 0x664

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1b4
Exit block: 0x1c9
Body: 0x1b4, 0x1bc, 0x1c0, 0x1c9, 0x754

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1df
Exit block: 0x347
Body: 0x1df, 0x1e7, 0x1eb, 0x347, 0x75e, 0x7e7, 0x7eb, 0x87a

Function 4:
Public function signature: 0x30e0789e
Entry block: 0x264
Exit block: 0x26c
Body: 0x264, 0x26c, 0x270, 0x2cf

Function 5:
Public function signature: 0x313ce567
Entry block: 0x2d1
Exit block: 0x2e6
Body: 0x2d1, 0x2d9, 0x2dd, 0x2e6, 0xb07

Function 6:
Public function signature: 0x39509351
Entry block: 0x2fc
Exit block: 0x347
Body: 0x2fc, 0x304, 0x308, 0x347, 0xb0d, 0xb46, 0xb4a, 0xbd9

Function 7:
Public function signature: 0x70a08231
Entry block: 0x361
Exit block: 0x3a2
Body: 0x361, 0x369, 0x36d, 0x3a2, 0xd44

Function 8:
Public function signature: 0x95d89b41
Entry block: 0x3b8
Exit block: 0x43a
Body: 0x3b8, 0x3c0, 0x3c4, 0x3cd, 0x3f2, 0x3fb, 0x40d, 0x421, 0x43a, 0xd8d, 0xddd, 0xde5, 0xdf8, 0xe06, 0xe1a, 0xe23

Function 9:
Public function signature: 0xa457c2d7
Entry block: 0x448
Exit block: 0x493
Body: 0x448, 0x450, 0x454, 0x493, 0xe2b, 0xe64, 0xe68, 0xef7

Function 10:
Public function signature: 0xa9059cbb
Entry block: 0x4ad
Exit block: 0x4f8
Body: 0x4ad, 0x4b5, 0x4b9, 0x4f8, 0x1062, 0x106f

Function 11:
Public function signature: 0xdd62ed3e
Entry block: 0x512
Exit block: 0x573
Body: 0x512, 0x51a, 0x51e, 0x573, 0x1079

Function 12:
Public fallback function
Entry block: 0xba
Exit block: 0xba
Body: 0xba

Function 13:
Private function
Entry block: 0x910
Exit block: 0xa59
Body: 0x910, 0x94d, 0xa07, 0xa59

Function 14:
Private function
Entry block: 0x1100
Exit block: 0x1112
Body: 0x1100, 0x1112

Function 15:
Private function
Entry block: 0x1121
Exit block: 0x1138
Body: 0x1121, 0x1138

