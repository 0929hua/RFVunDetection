Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4c2f04a4
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4c2f04a4
0x3c: V13 = EQ 0x4c2f04a4 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd6]
---
0x41 DUP1
0x42 PUSH4 0xa21f0368
0x47 EQ
0x48 PUSH2 0xd6
0x4b JUMPI
---
0x42: V15 = 0xa21f0368
0x47: V16 = EQ 0xa21f0368 V11
0x48: V17 = 0xd6
0x4b: JUMPI 0xd6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0xd3]
---
Predecessors: [0x51]
Successors: [0x1d0]
---
0x5c JUMPDEST
0x5d PUSH2 0xd4
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a AND
0x7b SWAP1
0x7c PUSH1 0x20
0x7e ADD
0x7f SWAP1
0x80 SWAP2
0x81 SWAP1
0x82 DUP1
0x83 CALLDATALOAD
0x84 SWAP1
0x85 PUSH1 0x20
0x87 ADD
0x88 SWAP1
0x89 SWAP2
0x8a SWAP1
0x8b DUP1
0x8c CALLDATALOAD
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 DUP3
0x93 ADD
0x94 DUP1
0x95 CALLDATALOAD
0x96 SWAP1
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP1
0x9b DUP1
0x9c DUP1
0x9d PUSH1 0x1f
0x9f ADD
0xa0 PUSH1 0x20
0xa2 DUP1
0xa3 SWAP2
0xa4 DIV
0xa5 MUL
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 PUSH1 0x40
0xab MLOAD
0xac SWAP1
0xad DUP2
0xae ADD
0xaf PUSH1 0x40
0xb1 MSTORE
0xb2 DUP1
0xb3 SWAP4
0xb4 SWAP3
0xb5 SWAP2
0xb6 SWAP1
0xb7 DUP2
0xb8 DUP2
0xb9 MSTORE
0xba PUSH1 0x20
0xbc ADD
0xbd DUP4
0xbe DUP4
0xbf DUP1
0xc0 DUP3
0xc1 DUP5
0xc2 CALLDATACOPY
0xc3 DUP3
0xc4 ADD
0xc5 SWAP2
0xc6 POP
0xc7 POP
0xc8 POP
0xc9 POP
0xca POP
0xcb POP
0xcc SWAP2
0xcd SWAP1
0xce POP
0xcf POP
0xd0 PUSH2 0x1d0
0xd3 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0xd4
0x60: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x65: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x7c: V28 = 0x20
0x7e: V29 = ADD 0x20 0x4
0x83: V30 = CALLDATALOAD 0x24
0x85: V31 = 0x20
0x87: V32 = ADD 0x20 0x24
0x8c: V33 = CALLDATALOAD 0x44
0x8e: V34 = 0x20
0x90: V35 = ADD 0x20 0x44
0x93: V36 = ADD 0x4 V33
0x95: V37 = CALLDATALOAD V36
0x97: V38 = 0x20
0x99: V39 = ADD 0x20 V36
0x9d: V40 = 0x1f
0x9f: V41 = ADD 0x1f V37
0xa0: V42 = 0x20
0xa4: V43 = DIV V41 0x20
0xa5: V44 = MUL V43 0x20
0xa6: V45 = 0x20
0xa8: V46 = ADD 0x20 V44
0xa9: V47 = 0x40
0xab: V48 = M[0x40]
0xae: V49 = ADD V48 V46
0xaf: V50 = 0x40
0xb1: M[0x40] = V49
0xb9: M[V48] = V37
0xba: V51 = 0x20
0xbc: V52 = ADD 0x20 V48
0xc2: CALLDATACOPY V52 V39 V37
0xc4: V53 = ADD V52 V37
0xd0: V54 = 0x1d0
0xd3: JUMP 0x1d0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd4, V27, V30, V48]
Exit stack: [V11, 0xd4, V27, V30, V48]

================================

Block 0xd4
[0xd4:0xd5]
---
Predecessors: [0x2d5]
Successors: []
---
0xd4 JUMPDEST
0xd5 STOP
---
0xd4: JUMPDEST 
0xd5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0x41]
Successors: [0xdd, 0xe1]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd6: JUMPDEST 
0xd7: V55 = CALLVALUE
0xd8: V56 = ISZERO V55
0xd9: V57 = 0xe1
0xdc: JUMPI 0xe1 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd6]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V58 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe1
[0xe1:0xf6]
---
Predecessors: [0xd6]
Successors: [0x2da]
---
0xe1 JUMPDEST
0xe2 PUSH2 0xf7
0xe5 PUSH1 0x4
0xe7 DUP1
0xe8 DUP1
0xe9 CALLDATALOAD
0xea SWAP1
0xeb PUSH1 0x20
0xed ADD
0xee SWAP1
0xef SWAP2
0xf0 SWAP1
0xf1 POP
0xf2 POP
0xf3 PUSH2 0x2da
0xf6 JUMP
---
0xe1: JUMPDEST 
0xe2: V59 = 0xf7
0xe5: V60 = 0x4
0xe9: V61 = CALLDATALOAD 0x4
0xeb: V62 = 0x20
0xed: V63 = ADD 0x20 0x4
0xf3: V64 = 0x2da
0xf6: JUMP 0x2da
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf7, V61]
Exit stack: [V11, 0xf7, V61]

================================

Block 0xf7
[0xf7:0x177]
---
Predecessors: [0x2e9]
Successors: [0x178, 0x1be]
---
0xf7 JUMPDEST
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP1
0xfc DUP6
0xfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112 AND
0x113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128 AND
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d ADD
0x12e DUP1
0x12f PUSH1 0x20
0x131 ADD
0x132 DUP5
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x20
0x137 ADD
0x138 DUP4
0x139 DUP2
0x13a MSTORE
0x13b PUSH1 0x20
0x13d ADD
0x13e DUP3
0x13f DUP2
0x140 SUB
0x141 DUP3
0x142 MSTORE
0x143 DUP6
0x144 DUP2
0x145 DUP2
0x146 SLOAD
0x147 PUSH1 0x1
0x149 DUP2
0x14a PUSH1 0x1
0x14c AND
0x14d ISZERO
0x14e PUSH2 0x100
0x151 MUL
0x152 SUB
0x153 AND
0x154 PUSH1 0x2
0x156 SWAP1
0x157 DIV
0x158 DUP2
0x159 MSTORE
0x15a PUSH1 0x20
0x15c ADD
0x15d SWAP2
0x15e POP
0x15f DUP1
0x160 SLOAD
0x161 PUSH1 0x1
0x163 DUP2
0x164 PUSH1 0x1
0x166 AND
0x167 ISZERO
0x168 PUSH2 0x100
0x16b MUL
0x16c SUB
0x16d AND
0x16e PUSH1 0x2
0x170 SWAP1
0x171 DIV
0x172 DUP1
0x173 ISZERO
0x174 PUSH2 0x1be
0x177 JUMPI
---
0xf7: JUMPDEST 
0xf8: V65 = 0x40
0xfa: V66 = M[0x40]
0xfd: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x112: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x113: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x128: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x12a: M[V66] = V70
0x12b: V71 = 0x20
0x12d: V72 = ADD 0x20 V66
0x12f: V73 = 0x20
0x131: V74 = ADD 0x20 V72
0x134: M[V74] = V232
0x135: V75 = 0x20
0x137: V76 = ADD 0x20 V74
0x13a: M[V76] = V235
0x13b: V77 = 0x20
0x13d: V78 = ADD 0x20 V76
0x140: V79 = SUB V78 V66
0x142: M[V72] = V79
0x146: V80 = S[V229]
0x147: V81 = 0x1
0x14a: V82 = 0x1
0x14c: V83 = AND 0x1 V80
0x14d: V84 = ISZERO V83
0x14e: V85 = 0x100
0x151: V86 = MUL 0x100 V84
0x152: V87 = SUB V86 0x1
0x153: V88 = AND V87 V80
0x154: V89 = 0x2
0x157: V90 = DIV V88 0x2
0x159: M[V78] = V90
0x15a: V91 = 0x20
0x15c: V92 = ADD 0x20 V78
0x160: V93 = S[V229]
0x161: V94 = 0x1
0x164: V95 = 0x1
0x166: V96 = AND 0x1 V93
0x167: V97 = ISZERO V96
0x168: V98 = 0x100
0x16b: V99 = MUL 0x100 V97
0x16c: V100 = SUB V99 0x1
0x16d: V101 = AND V100 V93
0x16e: V102 = 0x2
0x171: V103 = DIV V101 0x2
0x173: V104 = ISZERO V103
0x174: V105 = 0x1be
0x177: JUMPI 0x1be V104
---
Entry stack: [V11, 0xf7, V227, V229, V232, V235]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V66, V72, V92, S2, V103]
Exit stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, V92, V229, V103]

================================

Block 0x178
[0x178:0x17f]
---
Predecessors: [0xf7]
Successors: [0x180, 0x193]
---
0x178 DUP1
0x179 PUSH1 0x1f
0x17b LT
0x17c PUSH2 0x193
0x17f JUMPI
---
0x179: V106 = 0x1f
0x17b: V107 = LT 0x1f V103
0x17c: V108 = 0x193
0x17f: JUMPI 0x193 V107
---
Entry stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, V92, V229, V103]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, V92, V229, V103]

================================

Block 0x180
[0x180:0x192]
---
Predecessors: [0x178]
Successors: [0x1be]
---
0x180 PUSH2 0x100
0x183 DUP1
0x184 DUP4
0x185 SLOAD
0x186 DIV
0x187 MUL
0x188 DUP4
0x189 MSTORE
0x18a SWAP2
0x18b PUSH1 0x20
0x18d ADD
0x18e SWAP2
0x18f PUSH2 0x1be
0x192 JUMP
---
0x180: V109 = 0x100
0x185: V110 = S[V229]
0x186: V111 = DIV V110 0x100
0x187: V112 = MUL V111 0x100
0x189: M[V92] = V112
0x18b: V113 = 0x20
0x18d: V114 = ADD 0x20 V92
0x18f: V115 = 0x1be
0x192: JUMP 0x1be
---
Entry stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, V92, V229, V103]
Stack pops: 3
Stack additions: [V114, S1, S0]
Exit stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, V114, V229, V103]

================================

Block 0x193
[0x193:0x1a0]
---
Predecessors: [0x178]
Successors: [0x1a1]
---
0x193 JUMPDEST
0x194 DUP3
0x195 ADD
0x196 SWAP2
0x197 SWAP1
0x198 PUSH1 0x0
0x19a MSTORE
0x19b PUSH1 0x20
0x19d PUSH1 0x0
0x19f SHA3
0x1a0 SWAP1
---
0x193: JUMPDEST 
0x195: V116 = ADD V92 V103
0x198: V117 = 0x0
0x19a: M[0x0] = V229
0x19b: V118 = 0x20
0x19d: V119 = 0x0
0x19f: V120 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, V92, V229, V103]
Stack pops: 3
Stack additions: [V116, V120, S2]
Exit stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, V116, V120, V92]

================================

Block 0x1a1
[0x1a1:0x1b4]
---
Predecessors: [0x193, 0x1a1]
Successors: [0x1a1, 0x1b5]
---
0x1a1 JUMPDEST
0x1a2 DUP2
0x1a3 SLOAD
0x1a4 DUP2
0x1a5 MSTORE
0x1a6 SWAP1
0x1a7 PUSH1 0x1
0x1a9 ADD
0x1aa SWAP1
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae DUP1
0x1af DUP4
0x1b0 GT
0x1b1 PUSH2 0x1a1
0x1b4 JUMPI
---
0x1a1: JUMPDEST 
0x1a3: V121 = S[S1]
0x1a5: M[S0] = V121
0x1a7: V122 = 0x1
0x1a9: V123 = ADD 0x1 S1
0x1ab: V124 = 0x20
0x1ad: V125 = ADD 0x20 S0
0x1b0: V126 = GT V116 V125
0x1b1: V127 = 0x1a1
0x1b4: JUMPI 0x1a1 V126
---
Entry stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, V116, S1, S0]
Stack pops: 3
Stack additions: [S2, V123, V125]
Exit stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, V116, V123, V125]

================================

Block 0x1b5
[0x1b5:0x1bd]
---
Predecessors: [0x1a1]
Successors: [0x1be]
---
0x1b5 DUP3
0x1b6 SWAP1
0x1b7 SUB
0x1b8 PUSH1 0x1f
0x1ba AND
0x1bb DUP3
0x1bc ADD
0x1bd SWAP2
---
0x1b7: V128 = SUB V125 V116
0x1b8: V129 = 0x1f
0x1ba: V130 = AND 0x1f V128
0x1bc: V131 = ADD V116 V130
---
Entry stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, V116, V123, V125]
Stack pops: 3
Stack additions: [V131, S1, S2]
Exit stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, V131, V123, V116]

================================

Block 0x1be
[0x1be:0x1cf]
---
Predecessors: [0xf7, 0x180, 0x1b5]
Successors: []
---
0x1be JUMPDEST
0x1bf POP
0x1c0 POP
0x1c1 SWAP6
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 POP
0x1c7 POP
0x1c8 PUSH1 0x40
0x1ca MLOAD
0x1cb DUP1
0x1cc SWAP2
0x1cd SUB
0x1ce SWAP1
0x1cf RETURN
---
0x1be: JUMPDEST 
0x1c8: V132 = 0x40
0x1ca: V133 = M[0x40]
0x1cd: V134 = SUB S2 V133
0x1cf: RETURN V133 V134
---
Entry stack: [V11, 0xf7, V227, V229, V232, V235, V66, V72, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V11, 0xf7]

================================

Block 0x1d0
[0x1d0:0x227]
---
Predecessors: [0x5c]
Successors: [0x228, 0x2cb]
---
0x1d0 JUMPDEST
0x1d1 PUSH1 0x0
0x1d3 DUP1
0x1d4 SWAP1
0x1d5 SLOAD
0x1d6 SWAP1
0x1d7 PUSH2 0x100
0x1da EXP
0x1db SWAP1
0x1dc DIV
0x1dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f2 AND
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 ORIGIN
0x20a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21f AND
0x220 EQ
0x221 ISZERO
0x222 DUP1
0x223 ISZERO
0x224 PUSH2 0x2cb
0x227 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V135 = 0x0
0x1d5: V136 = S[0x0]
0x1d7: V137 = 0x100
0x1da: V138 = EXP 0x100 0x0
0x1dc: V139 = DIV V136 0x1
0x1dd: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x1f3: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x209: V144 = ORIGIN
0x20a: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x21f: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x220: V147 = EQ V146 V143
0x221: V148 = ISZERO V147
0x223: V149 = ISZERO V148
0x224: V150 = 0x2cb
0x227: JUMPI 0x2cb V149
---
Entry stack: [V11, 0xd4, V27, V30, V48]
Stack pops: 0
Stack additions: [V148]
Exit stack: [V11, 0xd4, V27, V30, V48, V148]

================================

Block 0x228
[0x228:0x272]
---
Predecessors: [0x1d0]
Successors: [0x273]
---
0x228 POP
0x229 PUSH1 0x40
0x22b MLOAD
0x22c DUP1
0x22d DUP1
0x22e PUSH32 0x436173684f757400000000000000000000000000000000000000000000000000
0x24f DUP2
0x250 MSTORE
0x251 POP
0x252 PUSH1 0x7
0x254 ADD
0x255 SWAP1
0x256 POP
0x257 PUSH1 0x40
0x259 MLOAD
0x25a DUP1
0x25b SWAP2
0x25c SUB
0x25d SWAP1
0x25e SHA3
0x25f PUSH1 0x0
0x261 NOT
0x262 AND
0x263 DUP2
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP1
0x268 DUP3
0x269 DUP1
0x26a MLOAD
0x26b SWAP1
0x26c PUSH1 0x20
0x26e ADD
0x26f SWAP1
0x270 DUP1
0x271 DUP4
0x272 DUP4
---
0x229: V151 = 0x40
0x22b: V152 = M[0x40]
0x22e: V153 = 0x436173684f757400000000000000000000000000000000000000000000000000
0x250: M[V152] = 0x436173684f757400000000000000000000000000000000000000000000000000
0x252: V154 = 0x7
0x254: V155 = ADD 0x7 V152
0x257: V156 = 0x40
0x259: V157 = M[0x40]
0x25c: V158 = SUB V155 V157
0x25e: V159 = SHA3 V157 V158
0x25f: V160 = 0x0
0x261: V161 = NOT 0x0
0x262: V162 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V159
0x264: V163 = 0x40
0x266: V164 = M[0x40]
0x26a: V165 = M[V48]
0x26c: V166 = 0x20
0x26e: V167 = ADD 0x20 V48
---
Entry stack: [V11, 0xd4, V27, V30, V48, V148]
Stack pops: 2
Stack additions: [S1, V162, S1, V164, V164, V167, V165, V165, V164, V167]
Exit stack: [V11, 0xd4, V27, V30, V48, V162, V48, V164, V164, V167, V165, V165, V164, V167]

================================

Block 0x273
[0x273:0x27d]
---
Predecessors: [0x228, 0x27e]
Successors: [0x27e, 0x298]
---
0x273 JUMPDEST
0x274 PUSH1 0x20
0x276 DUP4
0x277 LT
0x278 ISZERO
0x279 ISZERO
0x27a PUSH2 0x298
0x27d JUMPI
---
0x273: JUMPDEST 
0x274: V168 = 0x20
0x277: V169 = LT S2 0x20
0x278: V170 = ISZERO V169
0x279: V171 = ISZERO V170
0x27a: V172 = 0x298
0x27d: JUMPI 0x298 V171
---
Entry stack: [V11, 0xd4, V27, V30, V48, V162, V48, V164, V164, V167, V165, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xd4, V27, V30, V48, V162, V48, V164, V164, V167, V165, S2, S1, S0]

================================

Block 0x27e
[0x27e:0x297]
---
Predecessors: [0x273]
Successors: [0x273]
---
0x27e DUP1
0x27f MLOAD
0x280 DUP3
0x281 MSTORE
0x282 PUSH1 0x20
0x284 DUP3
0x285 ADD
0x286 SWAP2
0x287 POP
0x288 PUSH1 0x20
0x28a DUP2
0x28b ADD
0x28c SWAP1
0x28d POP
0x28e PUSH1 0x20
0x290 DUP4
0x291 SUB
0x292 SWAP3
0x293 POP
0x294 PUSH2 0x273
0x297 JUMP
---
0x27f: V173 = M[S0]
0x281: M[S1] = V173
0x282: V174 = 0x20
0x285: V175 = ADD S1 0x20
0x288: V176 = 0x20
0x28b: V177 = ADD S0 0x20
0x28e: V178 = 0x20
0x291: V179 = SUB S2 0x20
0x294: V180 = 0x273
0x297: JUMP 0x273
---
Entry stack: [V11, 0xd4, V27, V30, V48, V162, V48, V164, V164, V167, V165, S2, S1, S0]
Stack pops: 3
Stack additions: [V179, V175, V177]
Exit stack: [V11, 0xd4, V27, V30, V48, V162, V48, V164, V164, V167, V165, V179, V175, V177]

================================

Block 0x298
[0x298:0x2ca]
---
Predecessors: [0x273]
Successors: [0x2cb]
---
0x298 JUMPDEST
0x299 PUSH1 0x1
0x29b DUP4
0x29c PUSH1 0x20
0x29e SUB
0x29f PUSH2 0x100
0x2a2 EXP
0x2a3 SUB
0x2a4 DUP1
0x2a5 NOT
0x2a6 DUP3
0x2a7 MLOAD
0x2a8 AND
0x2a9 DUP2
0x2aa DUP5
0x2ab MLOAD
0x2ac AND
0x2ad DUP1
0x2ae DUP3
0x2af OR
0x2b0 DUP6
0x2b1 MSTORE
0x2b2 POP
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 POP
0x2b8 SWAP1
0x2b9 POP
0x2ba ADD
0x2bb SWAP2
0x2bc POP
0x2bd POP
0x2be PUSH1 0x40
0x2c0 MLOAD
0x2c1 DUP1
0x2c2 SWAP2
0x2c3 SUB
0x2c4 SWAP1
0x2c5 SHA3
0x2c6 PUSH1 0x0
0x2c8 NOT
0x2c9 AND
0x2ca EQ
---
0x298: JUMPDEST 
0x299: V181 = 0x1
0x29c: V182 = 0x20
0x29e: V183 = SUB 0x20 S2
0x29f: V184 = 0x100
0x2a2: V185 = EXP 0x100 V183
0x2a3: V186 = SUB V185 0x1
0x2a5: V187 = NOT V186
0x2a7: V188 = M[S0]
0x2a8: V189 = AND V188 V187
0x2ab: V190 = M[S1]
0x2ac: V191 = AND V190 V186
0x2af: V192 = OR V189 V191
0x2b1: M[S1] = V192
0x2ba: V193 = ADD V165 V164
0x2be: V194 = 0x40
0x2c0: V195 = M[0x40]
0x2c3: V196 = SUB V193 V195
0x2c5: V197 = SHA3 V195 V196
0x2c6: V198 = 0x0
0x2c8: V199 = NOT 0x0
0x2c9: V200 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V197
0x2ca: V201 = EQ V200 V162
---
Entry stack: [V11, 0xd4, V27, V30, V48, V162, V48, V164, V164, V167, V165, S2, S1, S0]
Stack pops: 9
Stack additions: [V201]
Exit stack: [V11, 0xd4, V27, V30, V48, V201]

================================

Block 0x2cb
[0x2cb:0x2d0]
---
Predecessors: [0x1d0, 0x298]
Successors: [0x2d1, 0x2d5]
---
0x2cb JUMPDEST
0x2cc ISZERO
0x2cd PUSH2 0x2d5
0x2d0 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V202 = ISZERO S0
0x2cd: V203 = 0x2d5
0x2d0: JUMPI 0x2d5 V202
---
Entry stack: [V11, 0xd4, V27, V30, V48, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd4, V27, V30, V48]

================================

Block 0x2d1
[0x2d1:0x2d4]
---
Predecessors: [0x2cb]
Successors: []
---
0x2d1 PUSH1 0x0
0x2d3 DUP1
0x2d4 REVERT
---
0x2d1: V204 = 0x0
0x2d4: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd4, V27, V30, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd4, V27, V30, V48]

================================

Block 0x2d5
[0x2d5:0x2d9]
---
Predecessors: [0x2cb]
Successors: [0xd4]
---
0x2d5 JUMPDEST
0x2d6 POP
0x2d7 POP
0x2d8 POP
0x2d9 JUMP
---
0x2d5: JUMPDEST 
0x2d9: JUMP 0xd4
---
Entry stack: [V11, 0xd4, V27, V30, V48]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x2da
[0x2da:0x2e7]
---
Predecessors: [0xe1]
Successors: [0x2e8, 0x2e9]
---
0x2da JUMPDEST
0x2db PUSH1 0x1
0x2dd DUP2
0x2de DUP2
0x2df SLOAD
0x2e0 DUP2
0x2e1 LT
0x2e2 ISZERO
0x2e3 ISZERO
0x2e4 PUSH2 0x2e9
0x2e7 JUMPI
---
0x2da: JUMPDEST 
0x2db: V205 = 0x1
0x2df: V206 = S[0x1]
0x2e1: V207 = LT V61 V206
0x2e2: V208 = ISZERO V207
0x2e3: V209 = ISZERO V208
0x2e4: V210 = 0x2e9
0x2e7: JUMPI 0x2e9 V209
---
Entry stack: [V11, 0xf7, V61]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0xf7, V61, 0x1, V61]

================================

Block 0x2e8
[0x2e8:0x2e8]
---
Predecessors: [0x2da]
Successors: []
---
0x2e8 INVALID
---
0x2e8: INVALID 
---
Entry stack: [V11, 0xf7, V61, 0x1, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf7, V61, 0x1, V61]

================================

Block 0x2e9
[0x2e9:0x337]
---
Predecessors: [0x2da]
Successors: [0xf7]
---
0x2e9 JUMPDEST
0x2ea SWAP1
0x2eb PUSH1 0x0
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 PUSH1 0x0
0x2f2 SHA3
0x2f3 SWAP1
0x2f4 PUSH1 0x4
0x2f6 MUL
0x2f7 ADD
0x2f8 PUSH1 0x0
0x2fa SWAP2
0x2fb POP
0x2fc SWAP1
0x2fd POP
0x2fe DUP1
0x2ff PUSH1 0x0
0x301 ADD
0x302 PUSH1 0x0
0x304 SWAP1
0x305 SLOAD
0x306 SWAP1
0x307 PUSH2 0x100
0x30a EXP
0x30b SWAP1
0x30c DIV
0x30d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x322 AND
0x323 SWAP1
0x324 DUP1
0x325 PUSH1 0x1
0x327 ADD
0x328 SWAP1
0x329 DUP1
0x32a PUSH1 0x2
0x32c ADD
0x32d SLOAD
0x32e SWAP1
0x32f DUP1
0x330 PUSH1 0x3
0x332 ADD
0x333 SLOAD
0x334 SWAP1
0x335 POP
0x336 DUP5
0x337 JUMP
---
0x2e9: JUMPDEST 
0x2eb: V211 = 0x0
0x2ed: M[0x0] = 0x1
0x2ee: V212 = 0x20
0x2f0: V213 = 0x0
0x2f2: V214 = SHA3 0x0 0x20
0x2f4: V215 = 0x4
0x2f6: V216 = MUL 0x4 V61
0x2f7: V217 = ADD V216 V214
0x2f8: V218 = 0x0
0x2ff: V219 = 0x0
0x301: V220 = ADD 0x0 V217
0x302: V221 = 0x0
0x305: V222 = S[V220]
0x307: V223 = 0x100
0x30a: V224 = EXP 0x100 0x0
0x30c: V225 = DIV V222 0x1
0x30d: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x322: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x325: V228 = 0x1
0x327: V229 = ADD 0x1 V217
0x32a: V230 = 0x2
0x32c: V231 = ADD 0x2 V217
0x32d: V232 = S[V231]
0x330: V233 = 0x3
0x332: V234 = ADD 0x3 V217
0x333: V235 = S[V234]
0x337: JUMP 0xf7
---
Entry stack: [V11, 0xf7, V61, 0x1, V61]
Stack pops: 4
Stack additions: [S3, V227, V229, V232, V235]
Exit stack: [V11, 0xf7, V227, V229, V232, V235]

================================

Block 0x338
[0x338:0x345]
---
Predecessors: []
Successors: [0x346]
---
0x338 STOP
0x339 LOG1
0x33a PUSH6 0x627a7a723058
0x341 SHA3
0x342 MISSING 0xc3
0x343 MSTORE8
0x344 GASPRICE
0x345 MSIZE
---
0x338: STOP 
0x339: LOG S0 S1 S2
0x33a: V236 = 0x627a7a723058
0x341: V237 = SHA3 0x627a7a723058 S3
0x342: MISSING 0xc3
0x343: M8[S0] = S1
0x344: V238 = GASPRICE
0x345: V239 = MSIZE
---
Entry stack: []
Stack pops: 0
Stack additions: [V237, V239, V238]
Exit stack: []

================================

Block 0x346
[0x346:0x363]
---
Predecessors: [0x338]
Successors: []
---
0x346 JUMPDEST
0x347 MISSING 0xb4
0x348 MISSING 0xd4
0x349 ADDRESS
0x34a CALLER
0x34b MISSING 0xed
0x34c MISSING 0xfb
0x34d CALLDATASIZE
0x34e SIGNEXTEND
0x34f PUSH1 0x8d
0x351 SWAP6
0x352 MISSING 0x4c
0x353 DUP2
0x354 CALL
0x355 MISSING 0x22
0x356 PUSH13 0x7e4b45808e218958f1f0c20029
---
0x346: JUMPDEST 
0x347: MISSING 0xb4
0x348: MISSING 0xd4
0x349: V240 = ADDRESS
0x34a: V241 = CALLER
0x34b: MISSING 0xed
0x34c: MISSING 0xfb
0x34d: V242 = CALLDATASIZE
0x34e: V243 = SIGNEXTEND V242 S0
0x34f: V244 = 0x8d
0x352: MISSING 0x4c
0x354: V245 = CALL S1 S0 S1 S2 S3 S4 S5
0x355: MISSING 0x22
0x356: V246 = 0x7e4b45808e218958f1f0c20029
---
Entry stack: [V238, V239]
Stack pops: 0
Stack additions: [V241, V240, S5, V243, S1, S2, S3, S4, 0x8d, V245, 0x7e4b45808e218958f1f0c20029]
Exit stack: []

================================

Function 0:
Public function signature: 0x4c2f04a4
Entry block: 0x51
Exit block: 0xd4
Body: 0x51, 0x58, 0x5c, 0xd4, 0x1d0, 0x228, 0x273, 0x27e, 0x298, 0x2cb, 0x2d1, 0x2d5

Function 1:
Public function signature: 0xa21f0368
Entry block: 0xd6
Exit block: 0x1be
Body: 0xd6, 0xdd, 0xe1, 0xf7, 0x178, 0x180, 0x193, 0x1a1, 0x1b5, 0x1be, 0x2da, 0x2e8, 0x2e9

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

