Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x65372147
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x65372147
0x3c: V13 = EQ 0x65372147 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x95]
---
0x41 DUP1
0x42 PUSH4 0xab5783c4
0x47 EQ
0x48 PUSH2 0x95
0x4b JUMPI
---
0x42: V15 = 0xab5783c4
0x47: V16 = EQ 0xab5783c4 V11
0x48: V17 = 0x95
0x4b: JUMPI 0x95 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb8]
---
0x4c DUP1
0x4d PUSH4 0xb2c3609b
0x52 EQ
0x53 PUSH2 0xb8
0x56 JUMPI
---
0x4d: V18 = 0xb2c3609b
0x52: V19 = EQ 0xb2c3609b V11
0x53: V20 = 0xb8
0x56: JUMPI 0xb8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xdb]
---
0x57 DUP1
0x58 PUSH4 0xf1b6315e
0x5d EQ
0x5e PUSH2 0xdb
0x61 JUMPI
---
0x58: V21 = 0xf1b6315e
0x5d: V22 = EQ 0xf1b6315e V11
0x5e: V23 = 0xdb
0x61: JUMPI 0xdb V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0xd]
Successors: [0x6c, 0x70]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 DUP1
0x67 ISZERO
0x68 PUSH2 0x70
0x6b JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x67: V25 = ISZERO V24
0x68: V26 = 0x70
0x6b: JUMPI 0x70 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6c
[0x6c:0x6f]
---
Predecessors: [0x64]
Successors: []
---
0x6c PUSH1 0x0
0x6e DUP1
0x6f REVERT
---
0x6c: V27 = 0x0
0x6f: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x70
[0x70:0x78]
---
Predecessors: [0x64]
Successors: [0xfe]
---
0x70 JUMPDEST
0x71 POP
0x72 PUSH2 0x79
0x75 PUSH2 0xfe
0x78 JUMP
---
0x70: JUMPDEST 
0x72: V28 = 0x79
0x75: V29 = 0xfe
0x78: JUMP 0xfe
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x79]
Exit stack: [V11, 0x79]

================================

Block 0x79
[0x79:0x94]
---
Predecessors: [0xfe]
Successors: []
---
0x79 JUMPDEST
0x7a PUSH1 0x40
0x7c MLOAD
0x7d DUP1
0x7e DUP3
0x7f PUSH1 0xff
0x81 AND
0x82 PUSH1 0xff
0x84 AND
0x85 DUP2
0x86 MSTORE
0x87 PUSH1 0x20
0x89 ADD
0x8a SWAP2
0x8b POP
0x8c POP
0x8d PUSH1 0x40
0x8f MLOAD
0x90 DUP1
0x91 SWAP2
0x92 SUB
0x93 SWAP1
0x94 RETURN
---
0x79: JUMPDEST 
0x7a: V30 = 0x40
0x7c: V31 = M[0x40]
0x7f: V32 = 0xff
0x81: V33 = AND 0xff V80
0x82: V34 = 0xff
0x84: V35 = AND 0xff V33
0x86: M[V31] = V35
0x87: V36 = 0x20
0x89: V37 = ADD 0x20 V31
0x8d: V38 = 0x40
0x8f: V39 = M[0x40]
0x92: V40 = SUB V37 V39
0x94: RETURN V39 V40
---
Entry stack: [V11, 0x79, V80]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x79]

================================

Block 0x95
[0x95:0xb5]
---
Predecessors: [0x41]
Successors: [0x110]
---
0x95 JUMPDEST
0x96 PUSH2 0xb6
0x99 PUSH1 0x4
0x9b DUP1
0x9c CALLDATASIZE
0x9d SUB
0x9e DUP2
0x9f ADD
0xa0 SWAP1
0xa1 DUP1
0xa2 DUP1
0xa3 CALLDATALOAD
0xa4 PUSH1 0xff
0xa6 AND
0xa7 SWAP1
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac SWAP3
0xad SWAP2
0xae SWAP1
0xaf POP
0xb0 POP
0xb1 POP
0xb2 PUSH2 0x110
0xb5 JUMP
---
0x95: JUMPDEST 
0x96: V41 = 0xb6
0x99: V42 = 0x4
0x9c: V43 = CALLDATASIZE
0x9d: V44 = SUB V43 0x4
0x9f: V45 = ADD 0x4 V44
0xa3: V46 = CALLDATALOAD 0x4
0xa4: V47 = 0xff
0xa6: V48 = AND 0xff V46
0xa8: V49 = 0x20
0xaa: V50 = ADD 0x20 0x4
0xb2: V51 = 0x110
0xb5: JUMP 0x110
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb6, V48]
Exit stack: [V11, 0xb6, V48]

================================

Block 0xb6
[0xb6:0xb7]
---
Predecessors: [0x1d9, 0x2c5]
Successors: []
---
0xb6 JUMPDEST
0xb7 STOP
---
0xb6: JUMPDEST 
0xb7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xd8]
---
Predecessors: [0x4c]
Successors: [0x1dc]
---
0xb8 JUMPDEST
0xb9 PUSH2 0xd9
0xbc PUSH1 0x4
0xbe DUP1
0xbf CALLDATASIZE
0xc0 SUB
0xc1 DUP2
0xc2 ADD
0xc3 SWAP1
0xc4 DUP1
0xc5 DUP1
0xc6 CALLDATALOAD
0xc7 PUSH1 0xff
0xc9 AND
0xca SWAP1
0xcb PUSH1 0x20
0xcd ADD
0xce SWAP1
0xcf SWAP3
0xd0 SWAP2
0xd1 SWAP1
0xd2 POP
0xd3 POP
0xd4 POP
0xd5 PUSH2 0x1dc
0xd8 JUMP
---
0xb8: JUMPDEST 
0xb9: V52 = 0xd9
0xbc: V53 = 0x4
0xbf: V54 = CALLDATASIZE
0xc0: V55 = SUB V54 0x4
0xc2: V56 = ADD 0x4 V55
0xc6: V57 = CALLDATALOAD 0x4
0xc7: V58 = 0xff
0xc9: V59 = AND 0xff V57
0xcb: V60 = 0x20
0xcd: V61 = ADD 0x20 0x4
0xd5: V62 = 0x1dc
0xd8: JUMP 0x1dc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd9, V59]
Exit stack: [V11, 0xd9, V59]

================================

Block 0xd9
[0xd9:0xda]
---
Predecessors: [0x1d9, 0x2c5]
Successors: []
---
0xd9 JUMPDEST
0xda STOP
---
0xd9: JUMPDEST 
0xda: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdb
[0xdb:0xfb]
---
Predecessors: [0x57]
Successors: [0x2c8]
---
0xdb JUMPDEST
0xdc PUSH2 0xfc
0xdf PUSH1 0x4
0xe1 DUP1
0xe2 CALLDATASIZE
0xe3 SUB
0xe4 DUP2
0xe5 ADD
0xe6 SWAP1
0xe7 DUP1
0xe8 DUP1
0xe9 CALLDATALOAD
0xea PUSH1 0xff
0xec AND
0xed SWAP1
0xee PUSH1 0x20
0xf0 ADD
0xf1 SWAP1
0xf2 SWAP3
0xf3 SWAP2
0xf4 SWAP1
0xf5 POP
0xf6 POP
0xf7 POP
0xf8 PUSH2 0x2c8
0xfb JUMP
---
0xdb: JUMPDEST 
0xdc: V63 = 0xfc
0xdf: V64 = 0x4
0xe2: V65 = CALLDATASIZE
0xe3: V66 = SUB V65 0x4
0xe5: V67 = ADD 0x4 V66
0xe9: V68 = CALLDATALOAD 0x4
0xea: V69 = 0xff
0xec: V70 = AND 0xff V68
0xee: V71 = 0x20
0xf0: V72 = ADD 0x20 0x4
0xf8: V73 = 0x2c8
0xfb: JUMP 0x2c8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfc, V70]
Exit stack: [V11, 0xfc, V70]

================================

Block 0xfc
[0xfc:0xfd]
---
Predecessors: [0x33e]
Successors: []
---
0xfc JUMPDEST
0xfd STOP
---
0xfc: JUMPDEST 
0xfd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfe
[0xfe:0x10f]
---
Predecessors: [0x70]
Successors: [0x79]
---
0xfe JUMPDEST
0xff PUSH1 0x0
0x101 DUP1
0x102 SWAP1
0x103 SLOAD
0x104 SWAP1
0x105 PUSH2 0x100
0x108 EXP
0x109 SWAP1
0x10a DIV
0x10b PUSH1 0xff
0x10d AND
0x10e DUP2
0x10f JUMP
---
0xfe: JUMPDEST 
0xff: V74 = 0x0
0x103: V75 = S[0x0]
0x105: V76 = 0x100
0x108: V77 = EXP 0x100 0x0
0x10a: V78 = DIV V75 0x1
0x10b: V79 = 0xff
0x10d: V80 = AND 0xff V78
0x10f: JUMP 0x79
---
Entry stack: [V11, 0x79]
Stack pops: 1
Stack additions: [S0, V80]
Exit stack: [V11, 0x79, V80]

================================

Block 0x110
[0x110:0x167]
---
Predecessors: [0x95]
Successors: [0x168, 0x16c]
---
0x110 JUMPDEST
0x111 PUSH1 0x0
0x113 PUSH1 0x2
0x115 SWAP1
0x116 SLOAD
0x117 SWAP1
0x118 PUSH2 0x100
0x11b EXP
0x11c SWAP1
0x11d DIV
0x11e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x133 AND
0x134 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x149 AND
0x14a CALLER
0x14b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x160 AND
0x161 EQ
0x162 ISZERO
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x110: JUMPDEST 
0x111: V81 = 0x0
0x113: V82 = 0x2
0x116: V83 = S[0x0]
0x118: V84 = 0x100
0x11b: V85 = EXP 0x100 0x2
0x11d: V86 = DIV V83 0x10000
0x11e: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x133: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x134: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x149: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x14a: V91 = CALLER
0x14b: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x160: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x161: V94 = EQ V93 V90
0x162: V95 = ISZERO V94
0x163: V96 = ISZERO V95
0x164: V97 = 0x16c
0x167: JUMPI 0x16c V96
---
Entry stack: [V11, 0xb6, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V48]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x110]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V98 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb6, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V48]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x110]
Successors: [0x341]
---
0x16c JUMPDEST
0x16d PUSH2 0x174
0x170 PUSH2 0x341
0x173 JUMP
---
0x16c: JUMPDEST 
0x16d: V99 = 0x174
0x170: V100 = 0x341
0x173: JUMP 0x341
---
Entry stack: [V11, 0xb6, V48]
Stack pops: 0
Stack additions: [0x174]
Exit stack: [V11, 0xb6, V48, 0x174]

================================

Block 0x174
[0x174:0x19e]
---
Predecessors: [0x341]
Successors: [0x19f, 0x1d9]
---
0x174 JUMPDEST
0x175 DUP1
0x176 PUSH1 0x0
0x178 DUP1
0x179 PUSH2 0x100
0x17c EXP
0x17d DUP2
0x17e SLOAD
0x17f DUP2
0x180 PUSH1 0xff
0x182 MUL
0x183 NOT
0x184 AND
0x185 SWAP1
0x186 DUP4
0x187 PUSH1 0xff
0x189 AND
0x18a MUL
0x18b OR
0x18c SWAP1
0x18d SSTORE
0x18e POP
0x18f PUSH8 0x11c37937e080000
0x198 CALLVALUE
0x199 GT
0x19a ISZERO
0x19b PUSH2 0x1d9
0x19e JUMPI
---
0x174: JUMPDEST 
0x176: V101 = 0x0
0x179: V102 = 0x100
0x17c: V103 = EXP 0x100 0x0
0x17e: V104 = S[0x0]
0x180: V105 = 0xff
0x182: V106 = MUL 0xff 0x1
0x183: V107 = NOT 0xff
0x184: V108 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V104
0x187: V109 = 0xff
0x189: V110 = AND 0xff S0
0x18a: V111 = MUL V110 0x1
0x18b: V112 = OR V111 V108
0x18d: S[0x0] = V112
0x18f: V113 = 0x11c37937e080000
0x198: V114 = CALLVALUE
0x199: V115 = GT V114 0x11c37937e080000
0x19a: V116 = ISZERO V115
0x19b: V117 = 0x1d9
0x19e: JUMPI 0x1d9 V116
---
Entry stack: [V11, {0xb6, 0xd9}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0xb6, 0xd9}, S0]

================================

Block 0x19f
[0x19f:0x1d8]
---
Predecessors: [0x174]
Successors: []
---
0x19f PUSH1 0x0
0x1a1 PUSH1 0x2
0x1a3 SWAP1
0x1a4 SLOAD
0x1a5 SWAP1
0x1a6 PUSH2 0x100
0x1a9 EXP
0x1aa SWAP1
0x1ab DIV
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 AND
0x1d8 SELFDESTRUCT
---
0x19f: V118 = 0x0
0x1a1: V119 = 0x2
0x1a4: V120 = S[0x0]
0x1a6: V121 = 0x100
0x1a9: V122 = EXP 0x100 0x2
0x1ab: V123 = DIV V120 0x10000
0x1ac: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x1c2: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x1d8: SELFDESTRUCT V127
---
Entry stack: [V11, {0xb6, 0xd9}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xb6, 0xd9}, S0]

================================

Block 0x1d9
[0x1d9:0x1db]
---
Predecessors: [0x174]
Successors: [0xb6, 0xd9]
---
0x1d9 JUMPDEST
0x1da POP
0x1db JUMP
---
0x1d9: JUMPDEST 
0x1db: JUMP {0xb6, 0xd9}
---
Entry stack: [V11, {0xb6, 0xd9}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1dc
[0x1dc:0x211]
---
Predecessors: [0xb8]
Successors: [0x212, 0x216]
---
0x1dc JUMPDEST
0x1dd ORIGIN
0x1de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f3 AND
0x1f4 CALLER
0x1f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20a AND
0x20b EQ
0x20c ISZERO
0x20d ISZERO
0x20e PUSH2 0x216
0x211 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V128 = ORIGIN
0x1de: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1f4: V131 = CALLER
0x1f5: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x20b: V134 = EQ V133 V130
0x20c: V135 = ISZERO V134
0x20d: V136 = ISZERO V135
0x20e: V137 = 0x216
0x211: JUMPI 0x216 V136
---
Entry stack: [V11, 0xd9, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd9, V59]

================================

Block 0x212
[0x212:0x215]
---
Predecessors: [0x1dc]
Successors: []
---
0x212 PUSH1 0x0
0x214 DUP1
0x215 REVERT
---
0x212: V138 = 0x0
0x215: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd9, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd9, V59]

================================

Block 0x216
[0x216:0x233]
---
Predecessors: [0x1dc]
Successors: [0x234, 0x240]
---
0x216 JUMPDEST
0x217 DUP1
0x218 PUSH1 0xff
0x21a AND
0x21b PUSH1 0x0
0x21d DUP1
0x21e SWAP1
0x21f SLOAD
0x220 SWAP1
0x221 PUSH2 0x100
0x224 EXP
0x225 SWAP1
0x226 DIV
0x227 PUSH1 0xff
0x229 AND
0x22a PUSH1 0xff
0x22c AND
0x22d EQ
0x22e DUP1
0x22f ISZERO
0x230 PUSH2 0x240
0x233 JUMPI
---
0x216: JUMPDEST 
0x218: V139 = 0xff
0x21a: V140 = AND 0xff V59
0x21b: V141 = 0x0
0x21f: V142 = S[0x0]
0x221: V143 = 0x100
0x224: V144 = EXP 0x100 0x0
0x226: V145 = DIV V142 0x1
0x227: V146 = 0xff
0x229: V147 = AND 0xff V145
0x22a: V148 = 0xff
0x22c: V149 = AND 0xff V147
0x22d: V150 = EQ V149 V140
0x22f: V151 = ISZERO V150
0x230: V152 = 0x240
0x233: JUMPI 0x240 V151
---
Entry stack: [V11, 0xd9, V59]
Stack pops: 1
Stack additions: [S0, V150]
Exit stack: [V11, 0xd9, V59, V150]

================================

Block 0x234
[0x234:0x23f]
---
Predecessors: [0x216]
Successors: [0x240]
---
0x234 POP
0x235 PUSH8 0x16345785d8a0000
0x23e CALLVALUE
0x23f GT
---
0x235: V153 = 0x16345785d8a0000
0x23e: V154 = CALLVALUE
0x23f: V155 = GT V154 0x16345785d8a0000
---
Entry stack: [V11, 0xd9, V59, V150]
Stack pops: 1
Stack additions: [V155]
Exit stack: [V11, 0xd9, V59, V155]

================================

Block 0x240
[0x240:0x246]
---
Predecessors: [0x216, 0x234]
Successors: [0x247, 0x259]
---
0x240 JUMPDEST
0x241 DUP1
0x242 ISZERO
0x243 PUSH2 0x259
0x246 JUMPI
---
0x240: JUMPDEST 
0x242: V156 = ISZERO S0
0x243: V157 = 0x259
0x246: JUMPI 0x259 V156
---
Entry stack: [V11, 0xd9, V59, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xd9, V59, S0]

================================

Block 0x247
[0x247:0x258]
---
Predecessors: [0x240]
Successors: [0x259]
---
0x247 POP
0x248 PUSH1 0x0
0x24a PUSH1 0x1
0x24c SWAP1
0x24d SLOAD
0x24e SWAP1
0x24f PUSH2 0x100
0x252 EXP
0x253 SWAP1
0x254 DIV
0x255 PUSH1 0xff
0x257 AND
0x258 ISZERO
---
0x248: V158 = 0x0
0x24a: V159 = 0x1
0x24d: V160 = S[0x0]
0x24f: V161 = 0x100
0x252: V162 = EXP 0x100 0x1
0x254: V163 = DIV V160 0x100
0x255: V164 = 0xff
0x257: V165 = AND 0xff V163
0x258: V166 = ISZERO V165
---
Entry stack: [V11, 0xd9, V59, S0]
Stack pops: 1
Stack additions: [V166]
Exit stack: [V11, 0xd9, V59, V166]

================================

Block 0x259
[0x259:0x25e]
---
Predecessors: [0x240, 0x247]
Successors: [0x25f, 0x2c5]
---
0x259 JUMPDEST
0x25a ISZERO
0x25b PUSH2 0x2c5
0x25e JUMPI
---
0x259: JUMPDEST 
0x25a: V167 = ISZERO S0
0x25b: V168 = 0x2c5
0x25e: JUMPI 0x2c5 V167
---
Entry stack: [V11, 0xd9, V59, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd9, V59]

================================

Block 0x25f
[0x25f:0x2b1]
---
Predecessors: [0x259]
Successors: [0x2b2, 0x2bb]
---
0x25f CALLER
0x260 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x275 AND
0x276 PUSH2 0x8fc
0x279 ADDRESS
0x27a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28f AND
0x290 BALANCE
0x291 SWAP1
0x292 DUP2
0x293 ISZERO
0x294 MUL
0x295 SWAP1
0x296 PUSH1 0x40
0x298 MLOAD
0x299 PUSH1 0x0
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f DUP4
0x2a0 SUB
0x2a1 DUP2
0x2a2 DUP6
0x2a3 DUP9
0x2a4 DUP9
0x2a5 CALL
0x2a6 SWAP4
0x2a7 POP
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab ISZERO
0x2ac DUP1
0x2ad ISZERO
0x2ae PUSH2 0x2bb
0x2b1 JUMPI
---
0x25f: V169 = CALLER
0x260: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x275: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x276: V172 = 0x8fc
0x279: V173 = ADDRESS
0x27a: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x290: V176 = BALANCE V175
0x293: V177 = ISZERO V176
0x294: V178 = MUL V177 0x8fc
0x296: V179 = 0x40
0x298: V180 = M[0x40]
0x299: V181 = 0x0
0x29b: V182 = 0x40
0x29d: V183 = M[0x40]
0x2a0: V184 = SUB V180 V183
0x2a5: V185 = CALL V178 V171 V176 V183 V184 V183 0x0
0x2ab: V186 = ISZERO V185
0x2ad: V187 = ISZERO V186
0x2ae: V188 = 0x2bb
0x2b1: JUMPI 0x2bb V187
---
Entry stack: [V11, 0xd9, V59]
Stack pops: 0
Stack additions: [V186]
Exit stack: [V11, 0xd9, V59, V186]

================================

Block 0x2b2
[0x2b2:0x2ba]
---
Predecessors: [0x25f]
Successors: []
---
0x2b2 RETURNDATASIZE
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 RETURNDATACOPY
0x2b7 RETURNDATASIZE
0x2b8 PUSH1 0x0
0x2ba REVERT
---
0x2b2: V189 = RETURNDATASIZE
0x2b3: V190 = 0x0
0x2b6: RETURNDATACOPY 0x0 0x0 V189
0x2b7: V191 = RETURNDATASIZE
0x2b8: V192 = 0x0
0x2ba: REVERT 0x0 V191
---
Entry stack: [V11, 0xd9, V59, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd9, V59, V186]

================================

Block 0x2bb
[0x2bb:0x2c3]
---
Predecessors: [0x25f]
Successors: [0x341]
---
0x2bb JUMPDEST
0x2bc POP
0x2bd PUSH2 0x2c4
0x2c0 PUSH2 0x341
0x2c3 JUMP
---
0x2bb: JUMPDEST 
0x2bd: V193 = 0x2c4
0x2c0: V194 = 0x341
0x2c3: JUMP 0x341
---
Entry stack: [V11, 0xd9, V59, V186]
Stack pops: 1
Stack additions: [0x2c4]
Exit stack: [V11, 0xd9, V59, 0x2c4]

================================

Block 0x2c4
[0x2c4:0x2c4]
---
Predecessors: [0x341]
Successors: [0x2c5]
---
0x2c4 JUMPDEST
---
0x2c4: JUMPDEST 
---
Entry stack: [V11, {0xb6, 0xd9}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xb6, 0xd9}, S0]

================================

Block 0x2c5
[0x2c5:0x2c7]
---
Predecessors: [0x259, 0x2c4]
Successors: [0xb6, 0xd9]
---
0x2c5 JUMPDEST
0x2c6 POP
0x2c7 JUMP
---
0x2c5: JUMPDEST 
0x2c7: JUMP {0xb6, 0xd9}
---
Entry stack: [V11, {0xb6, 0xd9}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c8
[0x2c8:0x2e2]
---
Predecessors: [0xdb]
Successors: [0x2e3, 0x33e]
---
0x2c8 JUMPDEST
0x2c9 PUSH1 0x0
0x2cb DUP1
0x2cc PUSH1 0x0
0x2ce SWAP1
0x2cf SLOAD
0x2d0 SWAP1
0x2d1 PUSH2 0x100
0x2d4 EXP
0x2d5 SWAP1
0x2d6 DIV
0x2d7 PUSH1 0xff
0x2d9 AND
0x2da PUSH1 0xff
0x2dc AND
0x2dd EQ
0x2de ISZERO
0x2df PUSH2 0x33e
0x2e2 JUMPI
---
0x2c8: JUMPDEST 
0x2c9: V195 = 0x0
0x2cc: V196 = 0x0
0x2cf: V197 = S[0x0]
0x2d1: V198 = 0x100
0x2d4: V199 = EXP 0x100 0x0
0x2d6: V200 = DIV V197 0x1
0x2d7: V201 = 0xff
0x2d9: V202 = AND 0xff V200
0x2da: V203 = 0xff
0x2dc: V204 = AND 0xff V202
0x2dd: V205 = EQ V204 0x0
0x2de: V206 = ISZERO V205
0x2df: V207 = 0x33e
0x2e2: JUMPI 0x33e V206
---
Entry stack: [V11, 0xfc, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfc, V70]

================================

Block 0x2e3
[0x2e3:0x33d]
---
Predecessors: [0x2c8]
Successors: [0x33e]
---
0x2e3 DUP1
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 PUSH2 0x100
0x2ea EXP
0x2eb DUP2
0x2ec SLOAD
0x2ed DUP2
0x2ee PUSH1 0xff
0x2f0 MUL
0x2f1 NOT
0x2f2 AND
0x2f3 SWAP1
0x2f4 DUP4
0x2f5 PUSH1 0xff
0x2f7 AND
0x2f8 MUL
0x2f9 OR
0x2fa SWAP1
0x2fb SSTORE
0x2fc POP
0x2fd CALLER
0x2fe PUSH1 0x0
0x300 PUSH1 0x2
0x302 PUSH2 0x100
0x305 EXP
0x306 DUP2
0x307 SLOAD
0x308 DUP2
0x309 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31e MUL
0x31f NOT
0x320 AND
0x321 SWAP1
0x322 DUP4
0x323 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x338 AND
0x339 MUL
0x33a OR
0x33b SWAP1
0x33c SSTORE
0x33d POP
---
0x2e4: V208 = 0x0
0x2e7: V209 = 0x100
0x2ea: V210 = EXP 0x100 0x0
0x2ec: V211 = S[0x0]
0x2ee: V212 = 0xff
0x2f0: V213 = MUL 0xff 0x1
0x2f1: V214 = NOT 0xff
0x2f2: V215 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V211
0x2f5: V216 = 0xff
0x2f7: V217 = AND 0xff V70
0x2f8: V218 = MUL V217 0x1
0x2f9: V219 = OR V218 V215
0x2fb: S[0x0] = V219
0x2fd: V220 = CALLER
0x2fe: V221 = 0x0
0x300: V222 = 0x2
0x302: V223 = 0x100
0x305: V224 = EXP 0x100 0x2
0x307: V225 = S[0x0]
0x309: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x31e: V227 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x10000
0x31f: V228 = NOT 0xffffffffffffffffffffffffffffffffffffffff0000
0x320: V229 = AND 0xffffffffffffffffffff0000000000000000000000000000000000000000ffff V225
0x323: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x338: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x339: V232 = MUL V231 0x10000
0x33a: V233 = OR V232 V229
0x33c: S[0x0] = V233
---
Entry stack: [V11, 0xfc, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xfc, V70]

================================

Block 0x33e
[0x33e:0x340]
---
Predecessors: [0x2c8, 0x2e3]
Successors: [0xfc]
---
0x33e JUMPDEST
0x33f POP
0x340 JUMP
---
0x33e: JUMPDEST 
0x340: JUMP 0xfc
---
Entry stack: [V11, 0xfc, V70]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x341
[0x341:0x35d]
---
Predecessors: [0x16c, 0x2bb]
Successors: [0x174, 0x2c4]
---
0x341 JUMPDEST
0x342 PUSH1 0x1
0x344 PUSH1 0x0
0x346 PUSH1 0x1
0x348 PUSH2 0x100
0x34b EXP
0x34c DUP2
0x34d SLOAD
0x34e DUP2
0x34f PUSH1 0xff
0x351 MUL
0x352 NOT
0x353 AND
0x354 SWAP1
0x355 DUP4
0x356 ISZERO
0x357 ISZERO
0x358 MUL
0x359 OR
0x35a SWAP1
0x35b SSTORE
0x35c POP
0x35d JUMP
---
0x341: JUMPDEST 
0x342: V234 = 0x1
0x344: V235 = 0x0
0x346: V236 = 0x1
0x348: V237 = 0x100
0x34b: V238 = EXP 0x100 0x1
0x34d: V239 = S[0x0]
0x34f: V240 = 0xff
0x351: V241 = MUL 0xff 0x100
0x352: V242 = NOT 0xff00
0x353: V243 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V239
0x356: V244 = ISZERO 0x1
0x357: V245 = ISZERO 0x0
0x358: V246 = MUL 0x1 0x100
0x359: V247 = OR 0x100 V243
0x35b: S[0x0] = V247
0x35d: JUMP {0x174, 0x2c4}
---
Entry stack: [V11, {0xb6, 0xd9}, S1, {0x174, 0x2c4}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0xb6, 0xd9}, S1]

================================

Block 0x35e
[0x35e:0x389]
---
Predecessors: []
Successors: []
---
0x35e STOP
0x35f LOG1
0x360 PUSH6 0x627a7a723058
0x367 SHA3
0x368 SWAP1
0x369 CALLCODE
0x36a MISSING 0x5d
0x36b MISSING 0xd9
0x36c MISSING 0x4b
0x36d MULMOD
0x36e DUP8
0x36f MISSING 0xe
0x370 MISSING 0xdd
0x371 GT
0x372 MISSING 0xe7
0x373 MISSING 0x2d
0x374 MISSING 0xc6
0x375 MISSING 0xe6
0x376 MISSING 0x47
0x377 DELEGATECALL
0x378 BALANCE
0x379 ADDMOD
0x37a PUSH13 0xe571e04dd0071fc577f2c7f0d9
0x388 STOP
0x389 MISSING 0x29
---
0x35e: STOP 
0x35f: LOG S0 S1 S2
0x360: V248 = 0x627a7a723058
0x367: V249 = SHA3 0x627a7a723058 S3
0x369: V250 = CALLCODE S4 V249 S5 S6 S7 S8 S9
0x36a: MISSING 0x5d
0x36b: MISSING 0xd9
0x36c: MISSING 0x4b
0x36d: V251 = MULMOD S0 S1 S2
0x36f: MISSING 0xe
0x370: MISSING 0xdd
0x371: V252 = GT S0 S1
0x372: MISSING 0xe7
0x373: MISSING 0x2d
0x374: MISSING 0xc6
0x375: MISSING 0xe6
0x376: MISSING 0x47
0x377: V253 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x378: V254 = BALANCE V253
0x379: V255 = ADDMOD V254 S6 S7
0x37a: V256 = 0xe571e04dd0071fc577f2c7f0d9
0x388: STOP 
0x389: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V250, S9, V251, S3, S4, S5, S6, S7, S8, S9, V252, 0xe571e04dd0071fc577f2c7f0d9, V255]
Exit stack: []

================================

Function 0:
Public function signature: 0x65372147
Entry block: 0x64
Exit block: 0x79
Body: 0x64, 0x6c, 0x70, 0x79, 0xfe

Function 1:
Public function signature: 0xab5783c4
Entry block: 0x95
Exit block: 0xd9
Body: 0x95, 0xb6, 0xd9, 0x110, 0x168, 0x16c, 0x174, 0x19f, 0x1d9

Function 2:
Public function signature: 0xb2c3609b
Entry block: 0xb8
Exit block: 0xd9
Body: 0xb6, 0xb8, 0xd9, 0x1dc, 0x212, 0x216, 0x234, 0x240, 0x247, 0x259, 0x25f, 0x2b2, 0x2bb, 0x2c4, 0x2c5

Function 3:
Public function signature: 0xf1b6315e
Entry block: 0xdb
Exit block: 0xfc
Body: 0xdb, 0xfc, 0x2c8, 0x2e3, 0x33e

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

