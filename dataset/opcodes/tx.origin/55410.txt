Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0]
Successors: [0x1a, 0x62]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0x62
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0x62
0x19: JUMPI 0x62 V8
---
Entry stack: [V2]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x2a]
---
Predecessors: [0x10]
Successors: [0x2b, 0x6c]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH1 0xe0
0x1f SHR
0x20 DUP1
0x21 PUSH4 0xfcafefe
0x26 EQ
0x27 PUSH2 0x6c
0x2a JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0xe0
0x1f: V13 = SHR 0xe0 V11
0x21: V14 = 0xfcafefe
0x26: V15 = EQ 0xfcafefe V13
0x27: V16 = 0x6c
0x2a: JUMPI 0x6c V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x2b
[0x2b:0x35]
---
Predecessors: [0x1a]
Successors: [0x36, 0x8a]
---
0x2b DUP1
0x2c PUSH4 0x1fcb4ee4
0x31 EQ
0x32 PUSH2 0x8a
0x35 JUMPI
---
0x2c: V17 = 0x1fcb4ee4
0x31: V18 = EQ 0x1fcb4ee4 V13
0x32: V19 = 0x8a
0x35: JUMPI 0x8a V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x36
[0x36:0x40]
---
Predecessors: [0x2b]
Successors: [0x41, 0xac]
---
0x36 DUP1
0x37 PUSH4 0x51d5d80d
0x3c EQ
0x3d PUSH2 0xac
0x40 JUMPI
---
0x37: V20 = 0x51d5d80d
0x3c: V21 = EQ 0x51d5d80d V13
0x3d: V22 = 0xac
0x40: JUMPI 0xac V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0x36]
Successors: [0x4c, 0x10b]
---
0x41 DUP1
0x42 PUSH4 0x8f449a05
0x47 EQ
0x48 PUSH2 0x10b
0x4b JUMPI
---
0x42: V23 = 0x8f449a05
0x47: V24 = EQ 0x8f449a05 V13
0x48: V25 = 0x10b
0x4b: JUMPI 0x10b V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x115]
---
0x4c DUP1
0x4d PUSH4 0xc4804ef0
0x52 EQ
0x53 PUSH2 0x115
0x56 JUMPI
---
0x4d: V26 = 0xc4804ef0
0x52: V27 = EQ 0xc4804ef0 V13
0x53: V28 = 0x115
0x56: JUMPI 0x115 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x171]
---
0x57 DUP1
0x58 PUSH4 0xfcae4484
0x5d EQ
0x5e PUSH2 0x171
0x61 JUMPI
---
0x58: V29 = 0xfcae4484
0x5d: V30 = EQ 0xfcae4484 V13
0x5e: V31 = 0x171
0x61: JUMPI 0x171 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x62
[0x62:0x69]
---
Predecessors: [0x10, 0x57]
Successors: [0x17b]
---
0x62 JUMPDEST
0x63 PUSH2 0x6a
0x66 PUSH2 0x17b
0x69 JUMP
---
0x62: JUMPDEST 
0x63: V32 = 0x6a
0x66: V33 = 0x17b
0x69: JUMP 0x17b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x6a]
Exit stack: [V13, 0x6a]

================================

Block 0x6a
[0x6a:0x6b]
---
Predecessors: [0x281, 0x41f, 0x6e0]
Successors: []
---
0x6a JUMPDEST
0x6b STOP
---
0x6a: JUMPDEST 
0x6b: STOP 
---
Entry stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]

================================

Block 0x6c
[0x6c:0x73]
---
Predecessors: [0x1a]
Successors: [0x391]
---
0x6c JUMPDEST
0x6d PUSH2 0x74
0x70 PUSH2 0x391
0x73 JUMP
---
0x6c: JUMPDEST 
0x6d: V34 = 0x74
0x70: V35 = 0x391
0x73: JUMP 0x391
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x74]
Exit stack: [V13, 0x74]

================================

Block 0x74
[0x74:0x89]
---
Predecessors: [0x40c]
Successors: []
---
0x74 JUMPDEST
0x75 PUSH1 0x40
0x77 MLOAD
0x78 DUP1
0x79 DUP3
0x7a DUP2
0x7b MSTORE
0x7c PUSH1 0x20
0x7e ADD
0x7f SWAP2
0x80 POP
0x81 POP
0x82 PUSH1 0x40
0x84 MLOAD
0x85 DUP1
0x86 SWAP2
0x87 SUB
0x88 SWAP1
0x89 RETURN
---
0x74: JUMPDEST 
0x75: V36 = 0x40
0x77: V37 = M[0x40]
0x7b: M[V37] = S0
0x7c: V38 = 0x20
0x7e: V39 = ADD 0x20 V37
0x82: V40 = 0x40
0x84: V41 = M[0x40]
0x87: V42 = SUB V39 V41
0x89: RETURN V41 V42
---
Entry stack: [V13, 0xb4, 0x60, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xb4, 0x60, S1]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0x2b]
Successors: [0x414]
---
0x8a JUMPDEST
0x8b PUSH2 0x92
0x8e PUSH2 0x414
0x91 JUMP
---
0x8a: JUMPDEST 
0x8b: V43 = 0x92
0x8e: V44 = 0x414
0x91: JUMP 0x414
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x92]
Exit stack: [V13, 0x92]

================================

Block 0x92
[0x92:0xab]
---
Predecessors: [0x281, 0x41f, 0x6e0]
Successors: []
---
0x92 JUMPDEST
0x93 PUSH1 0x40
0x95 MLOAD
0x96 DUP1
0x97 DUP3
0x98 ISZERO
0x99 ISZERO
0x9a ISZERO
0x9b ISZERO
0x9c DUP2
0x9d MSTORE
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP2
0xa2 POP
0xa3 POP
0xa4 PUSH1 0x40
0xa6 MLOAD
0xa7 DUP1
0xa8 SWAP2
0xa9 SUB
0xaa SWAP1
0xab RETURN
---
0x92: JUMPDEST 
0x93: V45 = 0x40
0x95: V46 = M[0x40]
0x98: V47 = ISZERO S0
0x99: V48 = ISZERO V47
0x9a: V49 = ISZERO V48
0x9b: V50 = ISZERO V49
0x9d: M[V46] = V50
0x9e: V51 = 0x20
0xa0: V52 = ADD 0x20 V46
0xa4: V53 = 0x40
0xa6: V54 = M[0x40]
0xa9: V55 = SUB V52 V54
0xab: RETURN V54 V55
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xac
[0xac:0xb3]
---
Predecessors: [0x36]
Successors: [0x424]
---
0xac JUMPDEST
0xad PUSH2 0xb4
0xb0 PUSH2 0x424
0xb3 JUMP
---
0xac: JUMPDEST 
0xad: V56 = 0xb4
0xb0: V57 = 0x424
0xb3: JUMP 0x424
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V13, 0xb4]

================================

Block 0xb4
[0xb4:0xdb]
---
Predecessors: [0x526]
Successors: [0xdc]
---
0xb4 JUMPDEST
0xb5 PUSH1 0x40
0xb7 MLOAD
0xb8 DUP1
0xb9 DUP1
0xba PUSH1 0x20
0xbc ADD
0xbd DUP3
0xbe DUP2
0xbf SUB
0xc0 DUP3
0xc1 MSTORE
0xc2 DUP4
0xc3 DUP2
0xc4 DUP2
0xc5 MLOAD
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca ADD
0xcb SWAP2
0xcc POP
0xcd DUP1
0xce MLOAD
0xcf SWAP1
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP1
0xd4 PUSH1 0x20
0xd6 MUL
0xd7 DUP1
0xd8 DUP4
0xd9 DUP4
0xda PUSH1 0x0
---
0xb4: JUMPDEST 
0xb5: V58 = 0x40
0xb7: V59 = M[0x40]
0xba: V60 = 0x20
0xbc: V61 = ADD 0x20 V59
0xbf: V62 = SUB V61 V59
0xc1: M[V59] = V62
0xc5: V63 = M[V273]
0xc7: M[V61] = V63
0xc8: V64 = 0x20
0xca: V65 = ADD 0x20 V61
0xce: V66 = M[V273]
0xd0: V67 = 0x20
0xd2: V68 = ADD 0x20 V273
0xd4: V69 = 0x20
0xd6: V70 = MUL 0x20 V66
0xda: V71 = 0x0
---
Entry stack: [V13, V273]
Stack pops: 1
Stack additions: [S0, V59, V59, V65, V68, V70, V70, V65, V68, 0x0]
Exit stack: [V13, V273, V59, V59, V65, V68, V70, V70, V65, V68, 0x0]

================================

Block 0xdc
[0xdc:0xe4]
---
Predecessors: [0xb4, 0xe5]
Successors: [0xe5, 0xf7]
---
0xdc JUMPDEST
0xdd DUP4
0xde DUP2
0xdf LT
0xe0 ISZERO
0xe1 PUSH2 0xf7
0xe4 JUMPI
---
0xdc: JUMPDEST 
0xdf: V72 = LT S0 V70
0xe0: V73 = ISZERO V72
0xe1: V74 = 0xf7
0xe4: JUMPI 0xf7 V73
---
Entry stack: [V13, V273, V59, V59, V65, V68, V70, V70, V65, V68, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, V273, V59, V59, V65, V68, V70, V70, V65, V68, S0]

================================

Block 0xe5
[0xe5:0xf6]
---
Predecessors: [0xdc]
Successors: [0xdc]
---
0xe5 DUP1
0xe6 DUP3
0xe7 ADD
0xe8 MLOAD
0xe9 DUP2
0xea DUP5
0xeb ADD
0xec MSTORE
0xed PUSH1 0x20
0xef DUP2
0xf0 ADD
0xf1 SWAP1
0xf2 POP
0xf3 PUSH2 0xdc
0xf6 JUMP
---
0xe7: V75 = ADD V68 S0
0xe8: V76 = M[V75]
0xeb: V77 = ADD V65 S0
0xec: M[V77] = V76
0xed: V78 = 0x20
0xf0: V79 = ADD S0 0x20
0xf3: V80 = 0xdc
0xf6: JUMP 0xdc
---
Entry stack: [V13, V273, V59, V59, V65, V68, V70, V70, V65, V68, S0]
Stack pops: 3
Stack additions: [S2, S1, V79]
Exit stack: [V13, V273, V59, V59, V65, V68, V70, V70, V65, V68, V79]

================================

Block 0xf7
[0xf7:0x10a]
---
Predecessors: [0xdc]
Successors: []
---
0xf7 JUMPDEST
0xf8 POP
0xf9 POP
0xfa POP
0xfb POP
0xfc SWAP1
0xfd POP
0xfe ADD
0xff SWAP3
0x100 POP
0x101 POP
0x102 POP
0x103 PUSH1 0x40
0x105 MLOAD
0x106 DUP1
0x107 SWAP2
0x108 SUB
0x109 SWAP1
0x10a RETURN
---
0xf7: JUMPDEST 
0xfe: V81 = ADD V70 V65
0x103: V82 = 0x40
0x105: V83 = M[0x40]
0x108: V84 = SUB V81 V83
0x10a: RETURN V83 V84
---
Entry stack: [V13, V273, V59, V59, V65, V68, V70, V70, V65, V68, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V13]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x41]
Successors: [0x17b]
---
0x10b JUMPDEST
0x10c PUSH2 0x113
0x10f PUSH2 0x17b
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V85 = 0x113
0x10f: V86 = 0x17b
0x112: JUMP 0x17b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V13, 0x113]

================================

Block 0x113
[0x113:0x114]
---
Predecessors: [0x281, 0x41f, 0x6e0]
Successors: []
---
0x113 JUMPDEST
0x114 STOP
---
0x113: JUMPDEST 
0x114: STOP 
---
Entry stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]

================================

Block 0x115
[0x115:0x126]
---
Predecessors: [0x4c]
Successors: [0x127, 0x12b]
---
0x115 JUMPDEST
0x116 PUSH2 0x157
0x119 PUSH1 0x4
0x11b DUP1
0x11c CALLDATASIZE
0x11d SUB
0x11e PUSH1 0x20
0x120 DUP2
0x121 LT
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x115: JUMPDEST 
0x116: V87 = 0x157
0x119: V88 = 0x4
0x11c: V89 = CALLDATASIZE
0x11d: V90 = SUB V89 0x4
0x11e: V91 = 0x20
0x121: V92 = LT V90 0x20
0x122: V93 = ISZERO V92
0x123: V94 = 0x12b
0x126: JUMPI 0x12b V93
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x157, 0x4, V90]
Exit stack: [V13, 0x157, 0x4, V90]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x115]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V95 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x157, 0x4, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x157, 0x4, V90]

================================

Block 0x12b
[0x12b:0x156]
---
Predecessors: [0x115]
Successors: [0x530]
---
0x12b JUMPDEST
0x12c DUP2
0x12d ADD
0x12e SWAP1
0x12f DUP1
0x130 DUP1
0x131 CALLDATALOAD
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 AND
0x148 SWAP1
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP1
0x14d SWAP3
0x14e SWAP2
0x14f SWAP1
0x150 POP
0x151 POP
0x152 POP
0x153 PUSH2 0x530
0x156 JUMP
---
0x12b: JUMPDEST 
0x12d: V96 = ADD 0x4 V90
0x131: V97 = CALLDATALOAD 0x4
0x132: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x147: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x149: V100 = 0x20
0x14b: V101 = ADD 0x20 0x4
0x153: V102 = 0x530
0x156: JUMP 0x530
---
Entry stack: [V13, 0x157, 0x4, V90]
Stack pops: 2
Stack additions: [V99]
Exit stack: [V13, 0x157, V99]

================================

Block 0x157
[0x157:0x170]
---
Predecessors: [0x530]
Successors: []
---
0x157 JUMPDEST
0x158 PUSH1 0x40
0x15a MLOAD
0x15b DUP1
0x15c DUP3
0x15d ISZERO
0x15e ISZERO
0x15f ISZERO
0x160 ISZERO
0x161 DUP2
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 SWAP2
0x167 POP
0x168 POP
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d SWAP2
0x16e SUB
0x16f SWAP1
0x170 RETURN
---
0x157: JUMPDEST 
0x158: V103 = 0x40
0x15a: V104 = M[0x40]
0x15d: V105 = ISZERO V371
0x15e: V106 = ISZERO V105
0x15f: V107 = ISZERO V106
0x160: V108 = ISZERO V107
0x162: M[V104] = V108
0x163: V109 = 0x20
0x165: V110 = ADD 0x20 V104
0x169: V111 = 0x40
0x16b: V112 = M[0x40]
0x16e: V113 = SUB V110 V112
0x170: RETURN V112 V113
---
Entry stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, S2, S1, V371]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x171
[0x171:0x178]
---
Predecessors: [0x57]
Successors: [0x5da]
---
0x171 JUMPDEST
0x172 PUSH2 0x179
0x175 PUSH2 0x5da
0x178 JUMP
---
0x171: JUMPDEST 
0x172: V114 = 0x179
0x175: V115 = 0x5da
0x178: JUMP 0x5da
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x179]
Exit stack: [V13, 0x179]

================================

Block 0x179
[0x179:0x17a]
---
Predecessors: [0x281, 0x41f, 0x6e0]
Successors: []
---
0x179 JUMPDEST
0x17a STOP
---
0x179: JUMPDEST 
0x17a: STOP 
---
Entry stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]

================================

Block 0x17b
[0x17b:0x1ae]
---
Predecessors: [0x62, 0x10b]
Successors: [0x1af, 0x1ff]
---
0x17b JUMPDEST
0x17c ORIGIN
0x17d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x192 AND
0x193 CALLER
0x194 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a9 AND
0x1aa EQ
0x1ab PUSH2 0x1ff
0x1ae JUMPI
---
0x17b: JUMPDEST 
0x17c: V116 = ORIGIN
0x17d: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x192: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x193: V119 = CALLER
0x194: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x1aa: V122 = EQ V121 V118
0x1ab: V123 = 0x1ff
0x1ae: JUMPI 0x1ff V122
---
Entry stack: [V13, {0x6a, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, {0x6a, 0x113}]

================================

Block 0x1af
[0x1af:0x1fe]
---
Predecessors: [0x17b]
Successors: []
---
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1d3 DUP2
0x1d4 MSTORE
0x1d5 PUSH1 0x4
0x1d7 ADD
0x1d8 DUP1
0x1d9 DUP1
0x1da PUSH1 0x20
0x1dc ADD
0x1dd DUP3
0x1de DUP2
0x1df SUB
0x1e0 DUP3
0x1e1 MSTORE
0x1e2 PUSH1 0x26
0x1e4 DUP2
0x1e5 MSTORE
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 DUP1
0x1ea PUSH2 0x7c0
0x1ed PUSH1 0x26
0x1ef SWAP2
0x1f0 CODECOPY
0x1f1 PUSH1 0x40
0x1f3 ADD
0x1f4 SWAP2
0x1f5 POP
0x1f6 POP
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa DUP1
0x1fb SWAP2
0x1fc SUB
0x1fd SWAP1
0x1fe REVERT
---
0x1af: V124 = 0x40
0x1b1: V125 = M[0x40]
0x1b2: V126 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1d4: M[V125] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1d5: V127 = 0x4
0x1d7: V128 = ADD 0x4 V125
0x1da: V129 = 0x20
0x1dc: V130 = ADD 0x20 V128
0x1df: V131 = SUB V130 V128
0x1e1: M[V128] = V131
0x1e2: V132 = 0x26
0x1e5: M[V130] = 0x26
0x1e6: V133 = 0x20
0x1e8: V134 = ADD 0x20 V130
0x1ea: V135 = 0x7c0
0x1ed: V136 = 0x26
0x1f0: CODECOPY V134 0x7c0 0x26
0x1f1: V137 = 0x40
0x1f3: V138 = ADD 0x40 V134
0x1f7: V139 = 0x40
0x1f9: V140 = M[0x40]
0x1fc: V141 = SUB V138 V140
0x1fe: REVERT V140 V141
---
Entry stack: [V13, {0x6a, 0x113}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, {0x6a, 0x113}]

================================

Block 0x1ff
[0x1ff:0x20b]
---
Predecessors: [0x17b]
Successors: [0x530]
---
0x1ff JUMPDEST
0x200 PUSH1 0x0
0x202 ISZERO
0x203 ISZERO
0x204 PUSH2 0x20c
0x207 CALLER
0x208 PUSH2 0x530
0x20b JUMP
---
0x1ff: JUMPDEST 
0x200: V142 = 0x0
0x202: V143 = ISZERO 0x0
0x203: V144 = ISZERO 0x1
0x204: V145 = 0x20c
0x207: V146 = CALLER
0x208: V147 = 0x530
0x20b: JUMP 0x530
---
Entry stack: [V13, {0x6a, 0x113}]
Stack pops: 0
Stack additions: [0x0, 0x20c, V146]
Exit stack: [V13, {0x6a, 0x113}, 0x0, 0x20c, V146]

================================

Block 0x20c
[0x20c:0x213]
---
Predecessors: [0x530]
Successors: [0x214, 0x281]
---
0x20c JUMPDEST
0x20d ISZERO
0x20e ISZERO
0x20f EQ
0x210 PUSH2 0x281
0x213 JUMPI
---
0x20c: JUMPDEST 
0x20d: V148 = ISZERO V371
0x20e: V149 = ISZERO V148
0x20f: V150 = EQ V149 S1
0x210: V151 = 0x281
0x213: JUMPI 0x281 V150
---
Entry stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, S2, S1, V371]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, S2]

================================

Block 0x214
[0x214:0x280]
---
Predecessors: [0x20c]
Successors: []
---
0x214 PUSH1 0x40
0x216 MLOAD
0x217 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x238 DUP2
0x239 MSTORE
0x23a PUSH1 0x4
0x23c ADD
0x23d DUP1
0x23e DUP1
0x23f PUSH1 0x20
0x241 ADD
0x242 DUP3
0x243 DUP2
0x244 SUB
0x245 DUP3
0x246 MSTORE
0x247 PUSH1 0x17
0x249 DUP2
0x24a MSTORE
0x24b PUSH1 0x20
0x24d ADD
0x24e DUP1
0x24f PUSH32 0x596f7520616c726561647920737562736372696265642e000000000000000000
0x270 DUP2
0x271 MSTORE
0x272 POP
0x273 PUSH1 0x20
0x275 ADD
0x276 SWAP2
0x277 POP
0x278 POP
0x279 PUSH1 0x40
0x27b MLOAD
0x27c DUP1
0x27d SWAP2
0x27e SUB
0x27f SWAP1
0x280 REVERT
---
0x214: V152 = 0x40
0x216: V153 = M[0x40]
0x217: V154 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x239: M[V153] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x23a: V155 = 0x4
0x23c: V156 = ADD 0x4 V153
0x23f: V157 = 0x20
0x241: V158 = ADD 0x20 V156
0x244: V159 = SUB V158 V156
0x246: M[V156] = V159
0x247: V160 = 0x17
0x24a: M[V158] = 0x17
0x24b: V161 = 0x20
0x24d: V162 = ADD 0x20 V158
0x24f: V163 = 0x596f7520616c726561647920737562736372696265642e000000000000000000
0x271: M[V162] = 0x596f7520616c726561647920737562736372696265642e000000000000000000
0x273: V164 = 0x20
0x275: V165 = ADD 0x20 V162
0x279: V166 = 0x40
0x27b: V167 = M[0x40]
0x27e: V168 = SUB V165 V167
0x280: REVERT V167 V168
---
Entry stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1, S0]

================================

Block 0x281
[0x281:0x390]
---
Predecessors: [0x20c]
Successors: [0x6a, 0x92, 0x113, 0x179]
---
0x281 JUMPDEST
0x282 PUSH1 0x2
0x284 SLOAD
0x285 PUSH1 0x1
0x287 PUSH1 0x0
0x289 CALLER
0x28a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29f AND
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 DUP2
0x2b7 MSTORE
0x2b8 PUSH1 0x20
0x2ba ADD
0x2bb SWAP1
0x2bc DUP2
0x2bd MSTORE
0x2be PUSH1 0x20
0x2c0 ADD
0x2c1 PUSH1 0x0
0x2c3 SHA3
0x2c4 DUP2
0x2c5 SWAP1
0x2c6 SSTORE
0x2c7 POP
0x2c8 CALLER
0x2c9 PUSH1 0x0
0x2cb DUP1
0x2cc PUSH1 0x2
0x2ce SLOAD
0x2cf DUP2
0x2d0 MSTORE
0x2d1 PUSH1 0x20
0x2d3 ADD
0x2d4 SWAP1
0x2d5 DUP2
0x2d6 MSTORE
0x2d7 PUSH1 0x20
0x2d9 ADD
0x2da PUSH1 0x0
0x2dc SHA3
0x2dd PUSH1 0x0
0x2df PUSH2 0x100
0x2e2 EXP
0x2e3 DUP2
0x2e4 SLOAD
0x2e5 DUP2
0x2e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fb MUL
0x2fc NOT
0x2fd AND
0x2fe SWAP1
0x2ff DUP4
0x300 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x315 AND
0x316 MUL
0x317 OR
0x318 SWAP1
0x319 SSTORE
0x31a POP
0x31b PUSH1 0x2
0x31d PUSH1 0x0
0x31f DUP2
0x320 SLOAD
0x321 DUP1
0x322 SWAP3
0x323 SWAP2
0x324 SWAP1
0x325 PUSH1 0x1
0x327 ADD
0x328 SWAP2
0x329 SWAP1
0x32a POP
0x32b SSTORE
0x32c POP
0x32d PUSH32 0xea9dde00ed9f1133889d723ccfcd41c6d6cc3120be2c167eae94d8b65b463f01
0x34e CALLER
0x34f PUSH1 0x40
0x351 MLOAD
0x352 DUP1
0x353 DUP3
0x354 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x369 AND
0x36a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37f AND
0x380 DUP2
0x381 MSTORE
0x382 PUSH1 0x20
0x384 ADD
0x385 SWAP2
0x386 POP
0x387 POP
0x388 PUSH1 0x40
0x38a MLOAD
0x38b DUP1
0x38c SWAP2
0x38d SUB
0x38e SWAP1
0x38f LOG1
0x390 JUMP
---
0x281: JUMPDEST 
0x282: V169 = 0x2
0x284: V170 = S[0x2]
0x285: V171 = 0x1
0x287: V172 = 0x0
0x289: V173 = CALLER
0x28a: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x2a0: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x2b7: M[0x0] = V177
0x2b8: V178 = 0x20
0x2ba: V179 = ADD 0x20 0x0
0x2bd: M[0x20] = 0x1
0x2be: V180 = 0x20
0x2c0: V181 = ADD 0x20 0x20
0x2c1: V182 = 0x0
0x2c3: V183 = SHA3 0x0 0x40
0x2c6: S[V183] = V170
0x2c8: V184 = CALLER
0x2c9: V185 = 0x0
0x2cc: V186 = 0x2
0x2ce: V187 = S[0x2]
0x2d0: M[0x0] = V187
0x2d1: V188 = 0x20
0x2d3: V189 = ADD 0x20 0x0
0x2d6: M[0x20] = 0x0
0x2d7: V190 = 0x20
0x2d9: V191 = ADD 0x20 0x20
0x2da: V192 = 0x0
0x2dc: V193 = SHA3 0x0 0x40
0x2dd: V194 = 0x0
0x2df: V195 = 0x100
0x2e2: V196 = EXP 0x100 0x0
0x2e4: V197 = S[V193]
0x2e6: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V199 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2fc: V200 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2fd: V201 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V197
0x300: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x315: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x316: V204 = MUL V203 0x1
0x317: V205 = OR V204 V201
0x319: S[V193] = V205
0x31b: V206 = 0x2
0x31d: V207 = 0x0
0x320: V208 = S[0x2]
0x325: V209 = 0x1
0x327: V210 = ADD 0x1 V208
0x32b: S[0x2] = V210
0x32d: V211 = 0xea9dde00ed9f1133889d723ccfcd41c6d6cc3120be2c167eae94d8b65b463f01
0x34e: V212 = CALLER
0x34f: V213 = 0x40
0x351: V214 = M[0x40]
0x354: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x369: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x36a: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x381: M[V214] = V218
0x382: V219 = 0x20
0x384: V220 = ADD 0x20 V214
0x388: V221 = 0x40
0x38a: V222 = M[0x40]
0x38d: V223 = SUB V220 V222
0x38f: LOG V222 V223 0xea9dde00ed9f1133889d723ccfcd41c6d6cc3120be2c167eae94d8b65b463f01
0x390: JUMP S0
---
Entry stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1]

================================

Block 0x391
[0x391:0x39e]
---
Predecessors: [0x6c, 0x424]
Successors: [0x39f]
---
0x391 JUMPDEST
0x392 PUSH1 0x0
0x394 DUP1
0x395 PUSH1 0x0
0x397 SWAP1
0x398 POP
0x399 PUSH1 0x0
0x39b PUSH1 0x1
0x39d SWAP1
0x39e POP
---
0x391: JUMPDEST 
0x392: V224 = 0x0
0x395: V225 = 0x0
0x399: V226 = 0x0
0x39b: V227 = 0x1
---
Entry stack: [V13, 0xb4, 0x60, S1, {0x74, 0x430}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x1]
Exit stack: [V13, 0xb4, 0x60, S1, {0x74, 0x430}, 0x0, 0x0, 0x1]

================================

Block 0x39f
[0x39f:0x3a9]
---
Predecessors: [0x391, 0x3fe]
Successors: [0x3aa, 0x40c]
---
0x39f JUMPDEST
0x3a0 PUSH1 0x2
0x3a2 SLOAD
0x3a3 DUP2
0x3a4 LT
0x3a5 ISZERO
0x3a6 PUSH2 0x40c
0x3a9 JUMPI
---
0x39f: JUMPDEST 
0x3a0: V228 = 0x2
0x3a2: V229 = S[0x2]
0x3a4: V230 = LT S0 V229
0x3a5: V231 = ISZERO V230
0x3a6: V232 = 0x40c
0x3a9: JUMPI 0x40c V231
---
Entry stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]

================================

Block 0x3aa
[0x3aa:0x3ec]
---
Predecessors: [0x39f]
Successors: [0x530]
---
0x3aa PUSH1 0x0
0x3ac DUP1
0x3ad PUSH1 0x0
0x3af DUP4
0x3b0 DUP2
0x3b1 MSTORE
0x3b2 PUSH1 0x20
0x3b4 ADD
0x3b5 SWAP1
0x3b6 DUP2
0x3b7 MSTORE
0x3b8 PUSH1 0x20
0x3ba ADD
0x3bb PUSH1 0x0
0x3bd SHA3
0x3be PUSH1 0x0
0x3c0 SWAP1
0x3c1 SLOAD
0x3c2 SWAP1
0x3c3 PUSH2 0x100
0x3c6 EXP
0x3c7 SWAP1
0x3c8 DIV
0x3c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3de AND
0x3df SWAP1
0x3e0 POP
0x3e1 PUSH1 0x1
0x3e3 ISZERO
0x3e4 ISZERO
0x3e5 PUSH2 0x3ed
0x3e8 DUP3
0x3e9 PUSH2 0x530
0x3ec JUMP
---
0x3aa: V233 = 0x0
0x3ad: V234 = 0x0
0x3b1: M[0x0] = S0
0x3b2: V235 = 0x20
0x3b4: V236 = ADD 0x20 0x0
0x3b7: M[0x20] = 0x0
0x3b8: V237 = 0x20
0x3ba: V238 = ADD 0x20 0x20
0x3bb: V239 = 0x0
0x3bd: V240 = SHA3 0x0 0x40
0x3be: V241 = 0x0
0x3c1: V242 = S[V240]
0x3c3: V243 = 0x100
0x3c6: V244 = EXP 0x100 0x0
0x3c8: V245 = DIV V242 0x1
0x3c9: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x3de: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x3e1: V248 = 0x1
0x3e3: V249 = ISZERO 0x1
0x3e4: V250 = ISZERO 0x0
0x3e5: V251 = 0x3ed
0x3e9: V252 = 0x530
0x3ec: JUMP 0x530
---
Entry stack: [V13, 0xb4, 0x60, S4, {0x74, 0x430}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V247, 0x1, 0x3ed, V247]
Exit stack: [V13, 0xb4, 0x60, S4, {0x74, 0x430}, 0x0, S1, S0, V247, 0x1, 0x3ed, V247]

================================

Block 0x3ed
[0x3ed:0x3f5]
---
Predecessors: [0x530]
Successors: [0x3f6, 0x3fe]
---
0x3ed JUMPDEST
0x3ee ISZERO
0x3ef ISZERO
0x3f0 EQ
0x3f1 ISZERO
0x3f2 PUSH2 0x3fe
0x3f5 JUMPI
---
0x3ed: JUMPDEST 
0x3ee: V253 = ISZERO V371
0x3ef: V254 = ISZERO V253
0x3f0: V255 = EQ V254 S1
0x3f1: V256 = ISZERO V255
0x3f2: V257 = 0x3fe
0x3f5: JUMPI 0x3fe V256
---
Entry stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, S2, S1, V371]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, S2]

================================

Block 0x3f6
[0x3f6:0x3fd]
---
Predecessors: [0x3ed]
Successors: [0x3fe]
---
0x3f6 DUP3
0x3f7 DUP1
0x3f8 PUSH1 0x1
0x3fa ADD
0x3fb SWAP4
0x3fc POP
0x3fd POP
---
0x3f8: V258 = 0x1
0x3fa: V259 = ADD 0x1 S2
---
Entry stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V259, S1, S0]
Exit stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, V259, S1, S0]

================================

Block 0x3fe
[0x3fe:0x40b]
---
Predecessors: [0x3ed, 0x3f6]
Successors: [0x39f]
---
0x3fe JUMPDEST
0x3ff POP
0x400 DUP1
0x401 DUP1
0x402 PUSH1 0x1
0x404 ADD
0x405 SWAP2
0x406 POP
0x407 POP
0x408 PUSH2 0x39f
0x40b JUMP
---
0x3fe: JUMPDEST 
0x402: V260 = 0x1
0x404: V261 = ADD 0x1 S1
0x408: V262 = 0x39f
0x40b: JUMP 0x39f
---
Entry stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V261]
Exit stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, V261]

================================

Block 0x40c
[0x40c:0x413]
---
Predecessors: [0x39f]
Successors: [0x74, 0x430]
---
0x40c JUMPDEST
0x40d POP
0x40e DUP1
0x40f SWAP2
0x410 POP
0x411 POP
0x412 SWAP1
0x413 JUMP
---
0x40c: JUMPDEST 
0x413: JUMP {0x74, 0x430}
---
Entry stack: [V13, 0xb4, 0x60, S4, {0x74, 0x430}, 0x0, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V13, 0xb4, 0x60, S4, S1]

================================

Block 0x414
[0x414:0x41e]
---
Predecessors: [0x8a]
Successors: [0x530]
---
0x414 JUMPDEST
0x415 PUSH1 0x0
0x417 PUSH2 0x41f
0x41a ORIGIN
0x41b PUSH2 0x530
0x41e JUMP
---
0x414: JUMPDEST 
0x415: V263 = 0x0
0x417: V264 = 0x41f
0x41a: V265 = ORIGIN
0x41b: V266 = 0x530
0x41e: JUMP 0x530
---
Entry stack: [V13, 0x92]
Stack pops: 0
Stack additions: [0x0, 0x41f, V265]
Exit stack: [V13, 0x92, 0x0, 0x41f, V265]

================================

Block 0x41f
[0x41f:0x423]
---
Predecessors: [0x530]
Successors: [0x6a, 0x92, 0x113, 0x179]
---
0x41f JUMPDEST
0x420 SWAP1
0x421 POP
0x422 SWAP1
0x423 JUMP
---
0x41f: JUMPDEST 
0x423: JUMP S2
---
Entry stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, S2, S1, V371]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, V371]

================================

Block 0x424
[0x424:0x42f]
---
Predecessors: [0xac]
Successors: [0x391]
---
0x424 JUMPDEST
0x425 PUSH1 0x60
0x427 PUSH1 0x0
0x429 PUSH2 0x430
0x42c PUSH2 0x391
0x42f JUMP
---
0x424: JUMPDEST 
0x425: V267 = 0x60
0x427: V268 = 0x0
0x429: V269 = 0x430
0x42c: V270 = 0x391
0x42f: JUMP 0x391
---
Entry stack: [V13, 0xb4]
Stack pops: 0
Stack additions: [0x60, 0x0, 0x430]
Exit stack: [V13, 0xb4, 0x60, 0x0, 0x430]

================================

Block 0x430
[0x430:0x44e]
---
Predecessors: [0x40c]
Successors: [0x44f, 0x463]
---
0x430 JUMPDEST
0x431 SWAP1
0x432 POP
0x433 PUSH1 0x60
0x435 DUP2
0x436 PUSH1 0x40
0x438 MLOAD
0x439 SWAP1
0x43a DUP1
0x43b DUP3
0x43c MSTORE
0x43d DUP1
0x43e PUSH1 0x20
0x440 MUL
0x441 PUSH1 0x20
0x443 ADD
0x444 DUP3
0x445 ADD
0x446 PUSH1 0x40
0x448 MSTORE
0x449 DUP1
0x44a ISZERO
0x44b PUSH2 0x463
0x44e JUMPI
---
0x430: JUMPDEST 
0x433: V271 = 0x60
0x436: V272 = 0x40
0x438: V273 = M[0x40]
0x43c: M[V273] = S0
0x43e: V274 = 0x20
0x440: V275 = MUL 0x20 S0
0x441: V276 = 0x20
0x443: V277 = ADD 0x20 V275
0x445: V278 = ADD V273 V277
0x446: V279 = 0x40
0x448: M[0x40] = V278
0x44a: V280 = ISZERO S0
0x44b: V281 = 0x463
0x44e: JUMPI 0x463 V280
---
Entry stack: [V13, 0xb4, 0x60, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x60, V273, S0]
Exit stack: [V13, 0xb4, 0x60, S0, 0x60, V273, S0]

================================

Block 0x44f
[0x44f:0x462]
---
Predecessors: [0x430]
Successors: [0x463]
---
0x44f DUP2
0x450 PUSH1 0x20
0x452 ADD
0x453 PUSH1 0x20
0x455 DUP3
0x456 MUL
0x457 DUP1
0x458 CODESIZE
0x459 DUP4
0x45a CODECOPY
0x45b DUP1
0x45c DUP3
0x45d ADD
0x45e SWAP2
0x45f POP
0x460 POP
0x461 SWAP1
0x462 POP
---
0x450: V282 = 0x20
0x452: V283 = ADD 0x20 V273
0x453: V284 = 0x20
0x456: V285 = MUL S0 0x20
0x458: V286 = CODESIZE
0x45a: CODECOPY V283 V286 V285
0x45d: V287 = ADD V283 V285
---
Entry stack: [V13, 0xb4, 0x60, S3, 0x60, V273, S0]
Stack pops: 2
Stack additions: [S1, V287]
Exit stack: [V13, 0xb4, 0x60, S3, 0x60, V273, V287]

================================

Block 0x463
[0x463:0x471]
---
Predecessors: [0x430, 0x44f]
Successors: [0x472]
---
0x463 JUMPDEST
0x464 POP
0x465 SWAP1
0x466 POP
0x467 PUSH1 0x0
0x469 DUP1
0x46a SWAP1
0x46b POP
0x46c PUSH1 0x0
0x46e PUSH1 0x1
0x470 SWAP1
0x471 POP
---
0x463: JUMPDEST 
0x467: V288 = 0x0
0x46c: V289 = 0x0
0x46e: V290 = 0x1
---
Entry stack: [V13, 0xb4, 0x60, S3, 0x60, V273, S0]
Stack pops: 3
Stack additions: [S1, 0x0, 0x1]
Exit stack: [V13, 0xb4, 0x60, S3, V273, 0x0, 0x1]

================================

Block 0x472
[0x472:0x47c]
---
Predecessors: [0x463, 0x518]
Successors: [0x47d, 0x526]
---
0x472 JUMPDEST
0x473 PUSH1 0x2
0x475 SLOAD
0x476 DUP2
0x477 LT
0x478 ISZERO
0x479 PUSH2 0x526
0x47c JUMPI
---
0x472: JUMPDEST 
0x473: V291 = 0x2
0x475: V292 = S[0x2]
0x477: V293 = LT S0 V292
0x478: V294 = ISZERO V293
0x479: V295 = 0x526
0x47c: JUMPI 0x526 V294
---
Entry stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]

================================

Block 0x47d
[0x47d:0x4bf]
---
Predecessors: [0x472]
Successors: [0x530]
---
0x47d PUSH1 0x0
0x47f DUP1
0x480 PUSH1 0x0
0x482 DUP4
0x483 DUP2
0x484 MSTORE
0x485 PUSH1 0x20
0x487 ADD
0x488 SWAP1
0x489 DUP2
0x48a MSTORE
0x48b PUSH1 0x20
0x48d ADD
0x48e PUSH1 0x0
0x490 SHA3
0x491 PUSH1 0x0
0x493 SWAP1
0x494 SLOAD
0x495 SWAP1
0x496 PUSH2 0x100
0x499 EXP
0x49a SWAP1
0x49b DIV
0x49c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b1 AND
0x4b2 SWAP1
0x4b3 POP
0x4b4 PUSH1 0x1
0x4b6 ISZERO
0x4b7 ISZERO
0x4b8 PUSH2 0x4c0
0x4bb DUP3
0x4bc PUSH2 0x530
0x4bf JUMP
---
0x47d: V296 = 0x0
0x480: V297 = 0x0
0x484: M[0x0] = S0
0x485: V298 = 0x20
0x487: V299 = ADD 0x20 0x0
0x48a: M[0x20] = 0x0
0x48b: V300 = 0x20
0x48d: V301 = ADD 0x20 0x20
0x48e: V302 = 0x0
0x490: V303 = SHA3 0x0 0x40
0x491: V304 = 0x0
0x494: V305 = S[V303]
0x496: V306 = 0x100
0x499: V307 = EXP 0x100 0x0
0x49b: V308 = DIV V305 0x1
0x49c: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b1: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x4b4: V311 = 0x1
0x4b6: V312 = ISZERO 0x1
0x4b7: V313 = ISZERO 0x0
0x4b8: V314 = 0x4c0
0x4bc: V315 = 0x530
0x4bf: JUMP 0x530
---
Entry stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V310, 0x1, 0x4c0, V310]
Exit stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0, V310, 0x1, 0x4c0, V310]

================================

Block 0x4c0
[0x4c0:0x4c8]
---
Predecessors: [0x530]
Successors: [0x4c9, 0x518]
---
0x4c0 JUMPDEST
0x4c1 ISZERO
0x4c2 ISZERO
0x4c3 EQ
0x4c4 ISZERO
0x4c5 PUSH2 0x518
0x4c8 JUMPI
---
0x4c0: JUMPDEST 
0x4c1: V316 = ISZERO V371
0x4c2: V317 = ISZERO V316
0x4c3: V318 = EQ V317 S1
0x4c4: V319 = ISZERO V318
0x4c5: V320 = 0x518
0x4c8: JUMPI 0x518 V319
---
Entry stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, S2, S1, V371]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, S2]

================================

Block 0x4c9
[0x4c9:0x4d3]
---
Predecessors: [0x4c0]
Successors: [0x4d4, 0x4d5]
---
0x4c9 DUP1
0x4ca DUP5
0x4cb DUP5
0x4cc DUP2
0x4cd MLOAD
0x4ce DUP2
0x4cf LT
0x4d0 PUSH2 0x4d5
0x4d3 JUMPI
---
0x4cd: V321 = M[S3]
0x4cf: V322 = LT S2 V321
0x4d0: V323 = 0x4d5
0x4d3: JUMPI 0x4d5 V322
---
Entry stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S0, S3, S2]
Exit stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1, S0, S0, S3, S2]

================================

Block 0x4d4
[0x4d4:0x4d4]
---
Predecessors: [0x4c9]
Successors: []
---
0x4d4 INVALID
---
0x4d4: INVALID 
---
Entry stack: [V13, S10, {0x60, 0xb4}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, {0x60, 0xb4}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4d5
[0x4d5:0x517]
---
Predecessors: [0x4c9]
Successors: [0x518]
---
0x4d5 JUMPDEST
0x4d6 PUSH1 0x20
0x4d8 MUL
0x4d9 PUSH1 0x20
0x4db ADD
0x4dc ADD
0x4dd SWAP1
0x4de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f3 AND
0x4f4 SWAP1
0x4f5 DUP2
0x4f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50b AND
0x50c DUP2
0x50d MSTORE
0x50e POP
0x50f POP
0x510 DUP3
0x511 DUP1
0x512 PUSH1 0x1
0x514 ADD
0x515 SWAP4
0x516 POP
0x517 POP
---
0x4d5: JUMPDEST 
0x4d6: V324 = 0x20
0x4d8: V325 = MUL 0x20 S0
0x4d9: V326 = 0x20
0x4db: V327 = ADD 0x20 V325
0x4dc: V328 = ADD V327 S1
0x4de: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f3: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x4f6: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x50b: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x50d: M[V328] = V332
0x512: V333 = 0x1
0x514: V334 = ADD 0x1 S5
---
Entry stack: [V13, S10, {0x60, 0xb4}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V334, S4, S3]
Exit stack: [V13, S10, {0x60, 0xb4}, S8, S7, S6, V334, S4, S3]

================================

Block 0x518
[0x518:0x525]
---
Predecessors: [0x4c0, 0x4d5]
Successors: [0x472]
---
0x518 JUMPDEST
0x519 POP
0x51a DUP1
0x51b DUP1
0x51c PUSH1 0x1
0x51e ADD
0x51f SWAP2
0x520 POP
0x521 POP
0x522 PUSH2 0x472
0x525 JUMP
---
0x518: JUMPDEST 
0x51c: V335 = 0x1
0x51e: V336 = ADD 0x1 S1
0x522: V337 = 0x472
0x525: JUMP 0x472
---
Entry stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V336]
Exit stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, V336]

================================

Block 0x526
[0x526:0x52f]
---
Predecessors: [0x472]
Successors: [0xb4]
---
0x526 JUMPDEST
0x527 POP
0x528 DUP2
0x529 SWAP4
0x52a POP
0x52b POP
0x52c POP
0x52d POP
0x52e SWAP1
0x52f JUMP
---
0x526: JUMPDEST 
0x52f: JUMP {0x60, 0xb4}
---
Entry stack: [V13, S6, {0x60, 0xb4}, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S2]
Exit stack: [V13, S6, S2]

================================

Block 0x530
[0x530:0x5d9]
---
Predecessors: [0x12b, 0x1ff, 0x3aa, 0x414, 0x47d, 0x65e]
Successors: [0x157, 0x20c, 0x3ed, 0x41f, 0x4c0, 0x66b]
---
0x530 JUMPDEST
0x531 PUSH1 0x0
0x533 DUP1
0x534 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x549 AND
0x54a PUSH1 0x0
0x54c DUP1
0x54d PUSH1 0x1
0x54f PUSH1 0x0
0x551 DUP7
0x552 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x567 AND
0x568 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57d AND
0x57e DUP2
0x57f MSTORE
0x580 PUSH1 0x20
0x582 ADD
0x583 SWAP1
0x584 DUP2
0x585 MSTORE
0x586 PUSH1 0x20
0x588 ADD
0x589 PUSH1 0x0
0x58b SHA3
0x58c SLOAD
0x58d DUP2
0x58e MSTORE
0x58f PUSH1 0x20
0x591 ADD
0x592 SWAP1
0x593 DUP2
0x594 MSTORE
0x595 PUSH1 0x20
0x597 ADD
0x598 PUSH1 0x0
0x59a SHA3
0x59b PUSH1 0x0
0x59d SWAP1
0x59e SLOAD
0x59f SWAP1
0x5a0 PUSH2 0x100
0x5a3 EXP
0x5a4 SWAP1
0x5a5 DIV
0x5a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bb AND
0x5bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d1 AND
0x5d2 EQ
0x5d3 ISZERO
0x5d4 SWAP1
0x5d5 POP
0x5d6 SWAP2
0x5d7 SWAP1
0x5d8 POP
0x5d9 JUMP
---
0x530: JUMPDEST 
0x531: V338 = 0x0
0x534: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x549: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x54a: V341 = 0x0
0x54d: V342 = 0x1
0x54f: V343 = 0x0
0x552: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x567: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x568: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x57d: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x57f: M[0x0] = V347
0x580: V348 = 0x20
0x582: V349 = ADD 0x20 0x0
0x585: M[0x20] = 0x1
0x586: V350 = 0x20
0x588: V351 = ADD 0x20 0x20
0x589: V352 = 0x0
0x58b: V353 = SHA3 0x0 0x40
0x58c: V354 = S[V353]
0x58e: M[0x0] = V354
0x58f: V355 = 0x20
0x591: V356 = ADD 0x20 0x0
0x594: M[0x20] = 0x0
0x595: V357 = 0x20
0x597: V358 = ADD 0x20 0x20
0x598: V359 = 0x0
0x59a: V360 = SHA3 0x0 0x40
0x59b: V361 = 0x0
0x59e: V362 = S[V360]
0x5a0: V363 = 0x100
0x5a3: V364 = EXP 0x100 0x0
0x5a5: V365 = DIV V362 0x1
0x5a6: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bb: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x5bc: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d1: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x5d2: V370 = EQ V369 0x0
0x5d3: V371 = ISZERO V370
0x5d9: JUMP {0x157, 0x20c, 0x3ed, 0x41f, 0x4c0, 0x66b}
---
Entry stack: [V13, S10, {0x60, 0xb4}, S8, S7, S6, S5, S4, S3, S2, {0x157, 0x20c, 0x3ed, 0x41f, 0x4c0, 0x66b}, S0]
Stack pops: 2
Stack additions: [V371]
Exit stack: [V13, S10, {0x60, 0xb4}, S8, S7, S6, S5, S4, S3, S2, V371]

================================

Block 0x5da
[0x5da:0x60d]
---
Predecessors: [0x171]
Successors: [0x60e, 0x65e]
---
0x5da JUMPDEST
0x5db ORIGIN
0x5dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f1 AND
0x5f2 CALLER
0x5f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x608 AND
0x609 EQ
0x60a PUSH2 0x65e
0x60d JUMPI
---
0x5da: JUMPDEST 
0x5db: V372 = ORIGIN
0x5dc: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f1: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x5f2: V375 = CALLER
0x5f3: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x608: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x609: V378 = EQ V377 V374
0x60a: V379 = 0x65e
0x60d: JUMPI 0x65e V378
---
Entry stack: [V13, 0x179]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x179]

================================

Block 0x60e
[0x60e:0x65d]
---
Predecessors: [0x5da]
Successors: []
---
0x60e PUSH1 0x40
0x610 MLOAD
0x611 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x632 DUP2
0x633 MSTORE
0x634 PUSH1 0x4
0x636 ADD
0x637 DUP1
0x638 DUP1
0x639 PUSH1 0x20
0x63b ADD
0x63c DUP3
0x63d DUP2
0x63e SUB
0x63f DUP3
0x640 MSTORE
0x641 PUSH1 0x26
0x643 DUP2
0x644 MSTORE
0x645 PUSH1 0x20
0x647 ADD
0x648 DUP1
0x649 PUSH2 0x7c0
0x64c PUSH1 0x26
0x64e SWAP2
0x64f CODECOPY
0x650 PUSH1 0x40
0x652 ADD
0x653 SWAP2
0x654 POP
0x655 POP
0x656 PUSH1 0x40
0x658 MLOAD
0x659 DUP1
0x65a SWAP2
0x65b SUB
0x65c SWAP1
0x65d REVERT
---
0x60e: V380 = 0x40
0x610: V381 = M[0x40]
0x611: V382 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x633: M[V381] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x634: V383 = 0x4
0x636: V384 = ADD 0x4 V381
0x639: V385 = 0x20
0x63b: V386 = ADD 0x20 V384
0x63e: V387 = SUB V386 V384
0x640: M[V384] = V387
0x641: V388 = 0x26
0x644: M[V386] = 0x26
0x645: V389 = 0x20
0x647: V390 = ADD 0x20 V386
0x649: V391 = 0x7c0
0x64c: V392 = 0x26
0x64f: CODECOPY V390 0x7c0 0x26
0x650: V393 = 0x40
0x652: V394 = ADD 0x40 V390
0x656: V395 = 0x40
0x658: V396 = M[0x40]
0x65b: V397 = SUB V394 V396
0x65d: REVERT V396 V397
---
Entry stack: [V13, 0x179]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x179]

================================

Block 0x65e
[0x65e:0x66a]
---
Predecessors: [0x5da]
Successors: [0x530]
---
0x65e JUMPDEST
0x65f PUSH1 0x1
0x661 ISZERO
0x662 ISZERO
0x663 PUSH2 0x66b
0x666 CALLER
0x667 PUSH2 0x530
0x66a JUMP
---
0x65e: JUMPDEST 
0x65f: V398 = 0x1
0x661: V399 = ISZERO 0x1
0x662: V400 = ISZERO 0x0
0x663: V401 = 0x66b
0x666: V402 = CALLER
0x667: V403 = 0x530
0x66a: JUMP 0x530
---
Entry stack: [V13, 0x179]
Stack pops: 0
Stack additions: [0x1, 0x66b, V402]
Exit stack: [V13, 0x179, 0x1, 0x66b, V402]

================================

Block 0x66b
[0x66b:0x672]
---
Predecessors: [0x530]
Successors: [0x673, 0x6e0]
---
0x66b JUMPDEST
0x66c ISZERO
0x66d ISZERO
0x66e EQ
0x66f PUSH2 0x6e0
0x672 JUMPI
---
0x66b: JUMPDEST 
0x66c: V404 = ISZERO V371
0x66d: V405 = ISZERO V404
0x66e: V406 = EQ V405 S1
0x66f: V407 = 0x6e0
0x672: JUMPI 0x6e0 V406
---
Entry stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, S2, S1, V371]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S9, {0x60, 0xb4}, S7, S6, S5, S4, S3, S2]

================================

Block 0x673
[0x673:0x6df]
---
Predecessors: [0x66b]
Successors: []
---
0x673 PUSH1 0x40
0x675 MLOAD
0x676 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x697 DUP2
0x698 MSTORE
0x699 PUSH1 0x4
0x69b ADD
0x69c DUP1
0x69d DUP1
0x69e PUSH1 0x20
0x6a0 ADD
0x6a1 DUP3
0x6a2 DUP2
0x6a3 SUB
0x6a4 DUP3
0x6a5 MSTORE
0x6a6 PUSH1 0x1c
0x6a8 DUP2
0x6a9 MSTORE
0x6aa PUSH1 0x20
0x6ac ADD
0x6ad DUP1
0x6ae PUSH32 0x596f752068617665206e6f742073756273637269626564207965742e00000000
0x6cf DUP2
0x6d0 MSTORE
0x6d1 POP
0x6d2 PUSH1 0x20
0x6d4 ADD
0x6d5 SWAP2
0x6d6 POP
0x6d7 POP
0x6d8 PUSH1 0x40
0x6da MLOAD
0x6db DUP1
0x6dc SWAP2
0x6dd SUB
0x6de SWAP1
0x6df REVERT
---
0x673: V408 = 0x40
0x675: V409 = M[0x40]
0x676: V410 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x698: M[V409] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x699: V411 = 0x4
0x69b: V412 = ADD 0x4 V409
0x69e: V413 = 0x20
0x6a0: V414 = ADD 0x20 V412
0x6a3: V415 = SUB V414 V412
0x6a5: M[V412] = V415
0x6a6: V416 = 0x1c
0x6a9: M[V414] = 0x1c
0x6aa: V417 = 0x20
0x6ac: V418 = ADD 0x20 V414
0x6ae: V419 = 0x596f752068617665206e6f742073756273637269626564207965742e00000000
0x6d0: M[V418] = 0x596f752068617665206e6f742073756273637269626564207965742e00000000
0x6d2: V420 = 0x20
0x6d4: V421 = ADD 0x20 V418
0x6d8: V422 = 0x40
0x6da: V423 = M[0x40]
0x6dd: V424 = SUB V421 V423
0x6df: REVERT V423 V424
---
Entry stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e0
[0x6e0:0x7be]
---
Predecessors: [0x66b]
Successors: [0x6a, 0x92, 0x113, 0x179]
---
0x6e0 JUMPDEST
0x6e1 PUSH1 0x0
0x6e3 PUSH1 0x1
0x6e5 PUSH1 0x0
0x6e7 CALLER
0x6e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fd AND
0x6fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x713 AND
0x714 DUP2
0x715 MSTORE
0x716 PUSH1 0x20
0x718 ADD
0x719 SWAP1
0x71a DUP2
0x71b MSTORE
0x71c PUSH1 0x20
0x71e ADD
0x71f PUSH1 0x0
0x721 SHA3
0x722 SLOAD
0x723 SWAP1
0x724 POP
0x725 PUSH1 0x0
0x727 DUP1
0x728 DUP3
0x729 DUP2
0x72a MSTORE
0x72b PUSH1 0x20
0x72d ADD
0x72e SWAP1
0x72f DUP2
0x730 MSTORE
0x731 PUSH1 0x20
0x733 ADD
0x734 PUSH1 0x0
0x736 SHA3
0x737 PUSH1 0x0
0x739 PUSH2 0x100
0x73c EXP
0x73d DUP2
0x73e SLOAD
0x73f SWAP1
0x740 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x755 MUL
0x756 NOT
0x757 AND
0x758 SWAP1
0x759 SSTORE
0x75a PUSH32 0x8d2aae3bd92acf221b185992d11dffa4ff32f3b5f8d9a474d3b7a6ccf067a321
0x77b CALLER
0x77c PUSH1 0x40
0x77e MLOAD
0x77f DUP1
0x780 DUP3
0x781 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x796 AND
0x797 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ac AND
0x7ad DUP2
0x7ae MSTORE
0x7af PUSH1 0x20
0x7b1 ADD
0x7b2 SWAP2
0x7b3 POP
0x7b4 POP
0x7b5 PUSH1 0x40
0x7b7 MLOAD
0x7b8 DUP1
0x7b9 SWAP2
0x7ba SUB
0x7bb SWAP1
0x7bc LOG1
0x7bd POP
0x7be JUMP
---
0x6e0: JUMPDEST 
0x6e1: V425 = 0x0
0x6e3: V426 = 0x1
0x6e5: V427 = 0x0
0x6e7: V428 = CALLER
0x6e8: V429 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fd: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x6fe: V431 = 0xffffffffffffffffffffffffffffffffffffffff
0x713: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x715: M[0x0] = V432
0x716: V433 = 0x20
0x718: V434 = ADD 0x20 0x0
0x71b: M[0x20] = 0x1
0x71c: V435 = 0x20
0x71e: V436 = ADD 0x20 0x20
0x71f: V437 = 0x0
0x721: V438 = SHA3 0x0 0x40
0x722: V439 = S[V438]
0x725: V440 = 0x0
0x72a: M[0x0] = V439
0x72b: V441 = 0x20
0x72d: V442 = ADD 0x20 0x0
0x730: M[0x20] = 0x0
0x731: V443 = 0x20
0x733: V444 = ADD 0x20 0x20
0x734: V445 = 0x0
0x736: V446 = SHA3 0x0 0x40
0x737: V447 = 0x0
0x739: V448 = 0x100
0x73c: V449 = EXP 0x100 0x0
0x73e: V450 = S[V446]
0x740: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x755: V452 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x756: V453 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x757: V454 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V450
0x759: S[V446] = V454
0x75a: V455 = 0x8d2aae3bd92acf221b185992d11dffa4ff32f3b5f8d9a474d3b7a6ccf067a321
0x77b: V456 = CALLER
0x77c: V457 = 0x40
0x77e: V458 = M[0x40]
0x781: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x796: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x797: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ac: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x7ae: M[V458] = V462
0x7af: V463 = 0x20
0x7b1: V464 = ADD 0x20 V458
0x7b5: V465 = 0x40
0x7b7: V466 = M[0x40]
0x7ba: V467 = SUB V464 V466
0x7bc: LOG V466 V467 0x8d2aae3bd92acf221b185992d11dffa4ff32f3b5f8d9a474d3b7a6ccf067a321
0x7be: JUMP S0
---
Entry stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, {0x60, 0xb4}, S5, S4, S3, S2, S1]

================================

Block 0x7bf
[0x7bf:0x810]
---
Predecessors: []
Successors: []
---
0x7bf INVALID
0x7c0 NUMBER
0x7c1 PUSH16 0x6e74726163747320617265206e6f7420
0x7d2 PUSH2 0x6c6c
0x7d5 PUSH16 0x77656420746f20696e7465726163742e
0x7e6 LOG1
0x7e7 PUSH6 0x627a7a723058
0x7ee SHA3
0x7ef ADDRESS
0x7f0 COINBASE
0x7f1 MISSING 0xe3
0x7f2 MISSING 0xc2
0x7f3 SWAP14
0x7f4 MISSING 0xab
0x7f5 MISSING 0xd5
0x7f6 MISSING 0xcb
0x7f7 MISSING 0x28
0x7f8 PUSH8 0xa06109783ea68e82
0x801 MSIZE
0x802 DUP4
0x803 AND
0x804 SWAP16
0x805 SWAP2
0x806 MISSING 0xb1
0x807 MULMOD
0x808 DIV
0x809 PUSH5 0x7ef4330653
0x80f STOP
0x810 MISSING 0x29
---
0x7bf: INVALID 
0x7c0: V468 = NUMBER
0x7c1: V469 = 0x6e74726163747320617265206e6f7420
0x7d2: V470 = 0x6c6c
0x7d5: V471 = 0x77656420746f20696e7465726163742e
0x7e6: LOG 0x77656420746f20696e7465726163742e 0x6c6c 0x6e74726163747320617265206e6f7420
0x7e7: V472 = 0x627a7a723058
0x7ee: V473 = SHA3 0x627a7a723058 V468
0x7ef: V474 = ADDRESS
0x7f0: V475 = COINBASE
0x7f1: MISSING 0xe3
0x7f2: MISSING 0xc2
0x7f4: MISSING 0xab
0x7f5: MISSING 0xd5
0x7f6: MISSING 0xcb
0x7f7: MISSING 0x28
0x7f8: V476 = 0xa06109783ea68e82
0x801: V477 = MSIZE
0x803: V478 = AND S1 V477
0x806: MISSING 0xb1
0x807: V479 = MULMOD S0 S1 S2
0x808: V480 = DIV V479 S3
0x809: V481 = 0x7ef4330653
0x80f: STOP 
0x810: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V475, V474, V473, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, S0, 0xa06109783ea68e82, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V478, 0x7ef4330653, V480]
Exit stack: []

================================

Function 0:
Public function signature: 0xfcafefe
Entry block: 0x6c
Exit block: 0x74
Body: 0x6c, 0x74

Function 1:
Public function signature: 0x1fcb4ee4
Entry block: 0x8a
Exit block: 0x113
Body: 0x6a, 0x8a, 0x92, 0x113, 0x179, 0x414, 0x41f

Function 2:
Public function signature: 0x51d5d80d
Entry block: 0xac
Exit block: 0xf7
Body: 0xac, 0xb4, 0xdc, 0xe5, 0xf7, 0x424, 0x430, 0x44f, 0x463, 0x472, 0x47d, 0x4c0, 0x4c9, 0x4d4, 0x4d5, 0x518, 0x526

Function 3:
Public function signature: 0x8f449a05
Entry block: 0x10b
Exit block: 0x113
Body: 0x10b, 0x113

Function 4:
Public function signature: 0xc4804ef0
Entry block: 0x115
Exit block: 0xf7
Body: 0x6a, 0x92, 0xb4, 0xdc, 0xe5, 0xf7, 0x113, 0x115, 0x127, 0x12b, 0x157, 0x179, 0x41f, 0x472, 0x47d, 0x4c0, 0x4c9, 0x4d4, 0x4d5, 0x518, 0x526, 0x530, 0x66b, 0x673, 0x6e0

Function 5:
Public function signature: 0xfcae4484
Entry block: 0x171
Exit block: 0x92
Body: 0x6a, 0x92, 0x113, 0x171, 0x179, 0x5da, 0x60e, 0x65e, 0x66b, 0x673, 0x6e0

Function 6:
Public fallback function
Entry block: 0x62
Exit block: 0x6a
Body: 0x62, 0x6a

Function 7:
Private function
Entry block: 0x391
Exit block: 0x40c
Body: 0x391, 0x39f, 0x3aa, 0x3ed, 0x3f6, 0x3fe, 0x40c

Function 8:
Private function
Entry block: 0x17b
Exit block: 0x6e0
Body: 0x17b, 0x1ff, 0x20c, 0x281

