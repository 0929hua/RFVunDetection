Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x69]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x69
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x69
0xc: JUMPI 0x69 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x6e]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x3ccfd60b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x6e
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x3ccfd60b
0x22: V15 = EQ V13 0x3ccfd60b
0x23: V16 = 0x6e
0x26: JUMPI 0x6e V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x85]
---
0x27 DUP1
0x28 PUSH4 0x3d8bf7d3
0x2d EQ
0x2e PUSH2 0x85
0x31 JUMPI
---
0x28: V17 = 0x3d8bf7d3
0x2d: V18 = EQ 0x3d8bf7d3 V13
0x2e: V19 = 0x85
0x31: JUMPI 0x85 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x9d]
---
0x32 DUP1
0x33 PUSH4 0x70480275
0x38 EQ
0x39 PUSH2 0x9d
0x3c JUMPI
---
0x33: V20 = 0x70480275
0x38: V21 = EQ 0x70480275 V13
0x39: V22 = 0x9d
0x3c: JUMPI 0x9d V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xbe]
---
0x3d DUP1
0x3e PUSH4 0x8c9d105d
0x43 EQ
0x44 PUSH2 0xbe
0x47 JUMPI
---
0x3e: V23 = 0x8c9d105d
0x43: V24 = EQ 0x8c9d105d V13
0x44: V25 = 0xbe
0x47: JUMPI 0xbe V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xf3]
---
0x48 DUP1
0x49 PUSH4 0xabfdfa19
0x4e EQ
0x4f PUSH2 0xf3
0x52 JUMPI
---
0x49: V26 = 0xabfdfa19
0x4e: V27 = EQ 0xabfdfa19 V13
0x4f: V28 = 0xf3
0x52: JUMPI 0xf3 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x11a]
---
0x53 DUP1
0x54 PUSH4 0xde4d82a4
0x59 EQ
0x5a PUSH2 0x11a
0x5d JUMPI
---
0x54: V29 = 0xde4d82a4
0x59: V30 = EQ 0xde4d82a4 V13
0x5a: V31 = 0x11a
0x5d: JUMPI 0x11a V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x14e]
---
0x5e DUP1
0x5f PUSH4 0xe88c25e7
0x64 EQ
0x65 PUSH2 0x14e
0x68 JUMPI
---
0x5f: V32 = 0xe88c25e7
0x64: V33 = EQ 0xe88c25e7 V13
0x65: V34 = 0x14e
0x68: JUMPI 0x14e V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x6d]
---
Predecessors: [0x0, 0x5e]
Successors: []
---
0x69 JUMPDEST
0x6a PUSH1 0x0
0x6c DUP1
0x6d REVERT
---
0x69: JUMPDEST 
0x6a: V35 = 0x0
0x6d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6e
[0x6e:0x75]
---
Predecessors: [0xd]
Successors: [0x76, 0x7a]
---
0x6e JUMPDEST
0x6f CALLVALUE
0x70 DUP1
0x71 ISZERO
0x72 PUSH2 0x7a
0x75 JUMPI
---
0x6e: JUMPDEST 
0x6f: V36 = CALLVALUE
0x71: V37 = ISZERO V36
0x72: V38 = 0x7a
0x75: JUMPI 0x7a V37
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V13, V36]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x6e]
Successors: []
---
0x76 PUSH1 0x0
0x78 DUP1
0x79 REVERT
---
0x76: V39 = 0x0
0x79: REVERT 0x0 0x0
---
Entry stack: [V13, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V36]

================================

Block 0x7a
[0x7a:0x82]
---
Predecessors: [0x6e]
Successors: [0x162]
---
0x7a JUMPDEST
0x7b POP
0x7c PUSH2 0x83
0x7f PUSH2 0x162
0x82 JUMP
---
0x7a: JUMPDEST 
0x7c: V40 = 0x83
0x7f: V41 = 0x162
0x82: JUMP 0x162
---
Entry stack: [V13, V36]
Stack pops: 1
Stack additions: [0x83]
Exit stack: [V13, 0x83]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x1e6, 0x2b8, 0x38c]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0x27]
Successors: [0x8d, 0x91]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 DUP1
0x88 ISZERO
0x89 PUSH2 0x91
0x8c JUMPI
---
0x85: JUMPDEST 
0x86: V42 = CALLVALUE
0x88: V43 = ISZERO V42
0x89: V44 = 0x91
0x8c: JUMPI 0x91 V43
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V13, V42]

================================

Block 0x8d
[0x8d:0x90]
---
Predecessors: [0x85]
Successors: []
---
0x8d PUSH1 0x0
0x8f DUP1
0x90 REVERT
---
0x8d: V45 = 0x0
0x90: REVERT 0x0 0x0
---
Entry stack: [V13, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V42]

================================

Block 0x91
[0x91:0x9c]
---
Predecessors: [0x85]
Successors: [0x1e9]
---
0x91 JUMPDEST
0x92 POP
0x93 PUSH2 0x83
0x96 PUSH1 0x4
0x98 CALLDATALOAD
0x99 PUSH2 0x1e9
0x9c JUMP
---
0x91: JUMPDEST 
0x93: V46 = 0x83
0x96: V47 = 0x4
0x98: V48 = CALLDATALOAD 0x4
0x99: V49 = 0x1e9
0x9c: JUMP 0x1e9
---
Entry stack: [V13, V42]
Stack pops: 1
Stack additions: [0x83, V48]
Exit stack: [V13, 0x83, V48]

================================

Block 0x9d
[0x9d:0xa4]
---
Predecessors: [0x32]
Successors: [0xa5, 0xa9]
---
0x9d JUMPDEST
0x9e CALLVALUE
0x9f DUP1
0xa0 ISZERO
0xa1 PUSH2 0xa9
0xa4 JUMPI
---
0x9d: JUMPDEST 
0x9e: V50 = CALLVALUE
0xa0: V51 = ISZERO V50
0xa1: V52 = 0xa9
0xa4: JUMPI 0xa9 V51
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V13, V50]

================================

Block 0xa5
[0xa5:0xa8]
---
Predecessors: [0x9d]
Successors: []
---
0xa5 PUSH1 0x0
0xa7 DUP1
0xa8 REVERT
---
0xa5: V53 = 0x0
0xa8: REVERT 0x0 0x0
---
Entry stack: [V13, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50]

================================

Block 0xa9
[0xa9:0xbd]
---
Predecessors: [0x9d]
Successors: [0x2c4]
---
0xa9 JUMPDEST
0xaa POP
0xab PUSH2 0x83
0xae PUSH1 0x1
0xb0 PUSH1 0xa0
0xb2 PUSH1 0x2
0xb4 EXP
0xb5 SUB
0xb6 PUSH1 0x4
0xb8 CALLDATALOAD
0xb9 AND
0xba PUSH2 0x2c4
0xbd JUMP
---
0xa9: JUMPDEST 
0xab: V54 = 0x83
0xae: V55 = 0x1
0xb0: V56 = 0xa0
0xb2: V57 = 0x2
0xb4: V58 = EXP 0x2 0xa0
0xb5: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6: V60 = 0x4
0xb8: V61 = CALLDATALOAD 0x4
0xb9: V62 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xba: V63 = 0x2c4
0xbd: JUMP 0x2c4
---
Entry stack: [V13, V50]
Stack pops: 1
Stack additions: [0x83, V62]
Exit stack: [V13, 0x83, V62]

================================

Block 0xbe
[0xbe:0xc5]
---
Predecessors: [0x3d]
Successors: [0xc6, 0xca]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 DUP1
0xc1 ISZERO
0xc2 PUSH2 0xca
0xc5 JUMPI
---
0xbe: JUMPDEST 
0xbf: V64 = CALLVALUE
0xc1: V65 = ISZERO V64
0xc2: V66 = 0xca
0xc5: JUMPI 0xca V65
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V13, V64]

================================

Block 0xc6
[0xc6:0xc9]
---
Predecessors: [0xbe]
Successors: []
---
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 REVERT
---
0xc6: V67 = 0x0
0xc9: REVERT 0x0 0x0
---
Entry stack: [V13, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V64]

================================

Block 0xca
[0xca:0xde]
---
Predecessors: [0xbe]
Successors: [0x3b3]
---
0xca JUMPDEST
0xcb POP
0xcc PUSH2 0xdf
0xcf PUSH1 0x1
0xd1 PUSH1 0xa0
0xd3 PUSH1 0x2
0xd5 EXP
0xd6 SUB
0xd7 PUSH1 0x4
0xd9 CALLDATALOAD
0xda AND
0xdb PUSH2 0x3b3
0xde JUMP
---
0xca: JUMPDEST 
0xcc: V68 = 0xdf
0xcf: V69 = 0x1
0xd1: V70 = 0xa0
0xd3: V71 = 0x2
0xd5: V72 = EXP 0x2 0xa0
0xd6: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V74 = 0x4
0xd9: V75 = CALLDATALOAD 0x4
0xda: V76 = AND V75 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V77 = 0x3b3
0xde: JUMP 0x3b3
---
Entry stack: [V13, V64]
Stack pops: 1
Stack additions: [0xdf, V76]
Exit stack: [V13, 0xdf, V76]

================================

Block 0xdf
[0xdf:0xf2]
---
Predecessors: [0x3b3, 0x696]
Successors: []
---
0xdf JUMPDEST
0xe0 PUSH1 0x40
0xe2 DUP1
0xe3 MLOAD
0xe4 SWAP2
0xe5 ISZERO
0xe6 ISZERO
0xe7 DUP3
0xe8 MSTORE
0xe9 MLOAD
0xea SWAP1
0xeb DUP2
0xec SWAP1
0xed SUB
0xee PUSH1 0x20
0xf0 ADD
0xf1 SWAP1
0xf2 RETURN
---
0xdf: JUMPDEST 
0xe0: V78 = 0x40
0xe3: V79 = M[0x40]
0xe5: V80 = ISZERO S0
0xe6: V81 = ISZERO V80
0xe8: M[V79] = V81
0xe9: V82 = M[0x40]
0xed: V83 = SUB V79 V82
0xee: V84 = 0x20
0xf0: V85 = ADD 0x20 V83
0xf2: RETURN V82 V85
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0x48]
Successors: [0xfb, 0xff]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 DUP1
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xf3: JUMPDEST 
0xf4: V86 = CALLVALUE
0xf6: V87 = ISZERO V86
0xf7: V88 = 0xff
0xfa: JUMPI 0xff V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V13, V86]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xf3]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V89 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V13, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V86]

================================

Block 0xff
[0xff:0x107]
---
Predecessors: [0xf3]
Successors: [0x3c8]
---
0xff JUMPDEST
0x100 POP
0x101 PUSH2 0x108
0x104 PUSH2 0x3c8
0x107 JUMP
---
0xff: JUMPDEST 
0x101: V90 = 0x108
0x104: V91 = 0x3c8
0x107: JUMP 0x3c8
---
Entry stack: [V13, V86]
Stack pops: 1
Stack additions: [0x108]
Exit stack: [V13, 0x108]

================================

Block 0x108
[0x108:0x119]
---
Predecessors: [0x3c8]
Successors: []
---
0x108 JUMPDEST
0x109 PUSH1 0x40
0x10b DUP1
0x10c MLOAD
0x10d SWAP2
0x10e DUP3
0x10f MSTORE
0x110 MLOAD
0x111 SWAP1
0x112 DUP2
0x113 SWAP1
0x114 SUB
0x115 PUSH1 0x20
0x117 ADD
0x118 SWAP1
0x119 RETURN
---
0x108: JUMPDEST 
0x109: V92 = 0x40
0x10c: V93 = M[0x40]
0x10f: M[V93] = V356
0x110: V94 = M[0x40]
0x114: V95 = SUB V93 V94
0x115: V96 = 0x20
0x117: V97 = ADD 0x20 V95
0x119: RETURN V94 V97
---
Entry stack: [V13, 0x108, V356]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x108]

================================

Block 0x11a
[0x11a:0x121]
---
Predecessors: [0x53]
Successors: [0x122, 0x126]
---
0x11a JUMPDEST
0x11b CALLVALUE
0x11c DUP1
0x11d ISZERO
0x11e PUSH2 0x126
0x121 JUMPI
---
0x11a: JUMPDEST 
0x11b: V98 = CALLVALUE
0x11d: V99 = ISZERO V98
0x11e: V100 = 0x126
0x121: JUMPI 0x126 V99
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V13, V98]

================================

Block 0x122
[0x122:0x125]
---
Predecessors: [0x11a]
Successors: []
---
0x122 PUSH1 0x0
0x124 DUP1
0x125 REVERT
---
0x122: V101 = 0x0
0x125: REVERT 0x0 0x0
---
Entry stack: [V13, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V98]

================================

Block 0x126
[0x126:0x131]
---
Predecessors: [0x11a]
Successors: [0x3ce]
---
0x126 JUMPDEST
0x127 POP
0x128 PUSH2 0x132
0x12b PUSH1 0x4
0x12d CALLDATALOAD
0x12e PUSH2 0x3ce
0x131 JUMP
---
0x126: JUMPDEST 
0x128: V102 = 0x132
0x12b: V103 = 0x4
0x12d: V104 = CALLDATALOAD 0x4
0x12e: V105 = 0x3ce
0x131: JUMP 0x3ce
---
Entry stack: [V13, V98]
Stack pops: 1
Stack additions: [0x132, V104]
Exit stack: [V13, 0x132, V104]

================================

Block 0x132
[0x132:0x14d]
---
Predecessors: [0x3dc]
Successors: []
---
0x132 JUMPDEST
0x133 PUSH1 0x40
0x135 DUP1
0x136 MLOAD
0x137 PUSH1 0x1
0x139 PUSH1 0xa0
0x13b PUSH1 0x2
0x13d EXP
0x13e SUB
0x13f SWAP1
0x140 SWAP3
0x141 AND
0x142 DUP3
0x143 MSTORE
0x144 MLOAD
0x145 SWAP1
0x146 DUP2
0x147 SWAP1
0x148 SUB
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP1
0x14d RETURN
---
0x132: JUMPDEST 
0x133: V106 = 0x40
0x136: V107 = M[0x40]
0x137: V108 = 0x1
0x139: V109 = 0xa0
0x13b: V110 = 0x2
0x13d: V111 = EXP 0x2 0xa0
0x13e: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x141: V113 = AND V371 0xffffffffffffffffffffffffffffffffffffffff
0x143: M[V107] = V113
0x144: V114 = M[0x40]
0x148: V115 = SUB V107 V114
0x149: V116 = 0x20
0x14b: V117 = ADD 0x20 V115
0x14d: RETURN V114 V117
---
Entry stack: [V13, 0x132, V371]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x132]

================================

Block 0x14e
[0x14e:0x161]
---
Predecessors: [0x5e]
Successors: [0x3f6]
---
0x14e JUMPDEST
0x14f PUSH2 0xdf
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a PUSH1 0x4
0x15c CALLDATALOAD
0x15d AND
0x15e PUSH2 0x3f6
0x161 JUMP
---
0x14e: JUMPDEST 
0x14f: V118 = 0xdf
0x152: V119 = 0x1
0x154: V120 = 0xa0
0x156: V121 = 0x2
0x158: V122 = EXP 0x2 0xa0
0x159: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15a: V124 = 0x4
0x15c: V125 = CALLDATALOAD 0x4
0x15d: V126 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V127 = 0x3f6
0x161: JUMP 0x3f6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xdf, V126]
Exit stack: [V13, 0xdf, V126]

================================

Block 0x162
[0x162:0x17b]
---
Predecessors: [0x7a]
Successors: [0x17c, 0x1b9]
---
0x162 JUMPDEST
0x163 CALLER
0x164 PUSH1 0x0
0x166 SWAP1
0x167 DUP2
0x168 MSTORE
0x169 PUSH1 0x1
0x16b PUSH1 0x20
0x16d MSTORE
0x16e PUSH1 0x40
0x170 SWAP1
0x171 SHA3
0x172 SLOAD
0x173 PUSH1 0xff
0x175 AND
0x176 ISZERO
0x177 ISZERO
0x178 PUSH2 0x1b9
0x17b JUMPI
---
0x162: JUMPDEST 
0x163: V128 = CALLER
0x164: V129 = 0x0
0x168: M[0x0] = V128
0x169: V130 = 0x1
0x16b: V131 = 0x20
0x16d: M[0x20] = 0x1
0x16e: V132 = 0x40
0x171: V133 = SHA3 0x0 0x40
0x172: V134 = S[V133]
0x173: V135 = 0xff
0x175: V136 = AND 0xff V134
0x176: V137 = ISZERO V136
0x177: V138 = ISZERO V137
0x178: V139 = 0x1b9
0x17b: JUMPI 0x1b9 V138
---
Entry stack: [V13, 0x83]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x83]

================================

Block 0x17c
[0x17c:0x1b8]
---
Predecessors: [0x162]
Successors: []
---
0x17c PUSH1 0x40
0x17e DUP1
0x17f MLOAD
0x180 PUSH1 0xe5
0x182 PUSH1 0x2
0x184 EXP
0x185 PUSH3 0x461bcd
0x189 MUL
0x18a DUP2
0x18b MSTORE
0x18c PUSH1 0x20
0x18e PUSH1 0x4
0x190 DUP3
0x191 ADD
0x192 MSTORE
0x193 PUSH1 0xb
0x195 PUSH1 0x24
0x197 DUP3
0x198 ADD
0x199 MSTORE
0x19a PUSH1 0x0
0x19c DUP1
0x19d MLOAD
0x19e PUSH1 0x20
0x1a0 PUSH2 0xa4b
0x1a3 DUP4
0x1a4 CODECOPY
0x1a5 DUP2
0x1a6 MLOAD
0x1a7 SWAP2
0x1a8 MSTORE
0x1a9 PUSH1 0x44
0x1ab DUP3
0x1ac ADD
0x1ad MSTORE
0x1ae SWAP1
0x1af MLOAD
0x1b0 SWAP1
0x1b1 DUP2
0x1b2 SWAP1
0x1b3 SUB
0x1b4 PUSH1 0x64
0x1b6 ADD
0x1b7 SWAP1
0x1b8 REVERT
---
0x17c: V140 = 0x40
0x17f: V141 = M[0x40]
0x180: V142 = 0xe5
0x182: V143 = 0x2
0x184: V144 = EXP 0x2 0xe5
0x185: V145 = 0x461bcd
0x189: V146 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x18b: M[V141] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x18c: V147 = 0x20
0x18e: V148 = 0x4
0x191: V149 = ADD V141 0x4
0x192: M[V149] = 0x20
0x193: V150 = 0xb
0x195: V151 = 0x24
0x198: V152 = ADD V141 0x24
0x199: M[V152] = 0xb
0x19a: V153 = 0x0
0x19d: V154 = M[0x0]
0x19e: V155 = 0x20
0x1a0: V156 = 0xa4b
0x1a4: CODECOPY 0x0 0xa4b 0x20
0x1a6: V157 = M[0x0]
0x1a8: M[0x0] = V154
0x1a9: V158 = 0x44
0x1ac: V159 = ADD V141 0x44
0x1ad: M[V159] = V157
0x1af: V160 = M[0x40]
0x1b3: V161 = SUB V141 V160
0x1b4: V162 = 0x64
0x1b6: V163 = ADD 0x64 V161
0x1b8: REVERT V160 V163
---
Entry stack: [V13, 0x83]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x83]

================================

Block 0x1b9
[0x1b9:0x1dc]
---
Predecessors: [0x162]
Successors: [0x1dd, 0x1e6]
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd CALLER
0x1be SWAP1
0x1bf ADDRESS
0x1c0 BALANCE
0x1c1 DUP1
0x1c2 ISZERO
0x1c3 PUSH2 0x8fc
0x1c6 MUL
0x1c7 SWAP2
0x1c8 PUSH1 0x0
0x1ca DUP2
0x1cb DUP2
0x1cc DUP2
0x1cd DUP6
0x1ce DUP9
0x1cf DUP9
0x1d0 CALL
0x1d1 SWAP4
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 POP
0x1d6 ISZERO
0x1d7 DUP1
0x1d8 ISZERO
0x1d9 PUSH2 0x1e6
0x1dc JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V164 = 0x40
0x1bc: V165 = M[0x40]
0x1bd: V166 = CALLER
0x1bf: V167 = ADDRESS
0x1c0: V168 = BALANCE V167
0x1c2: V169 = ISZERO V168
0x1c3: V170 = 0x8fc
0x1c6: V171 = MUL 0x8fc V169
0x1c8: V172 = 0x0
0x1d0: V173 = CALL V171 V166 V168 V165 0x0 V165 0x0
0x1d6: V174 = ISZERO V173
0x1d8: V175 = ISZERO V174
0x1d9: V176 = 0x1e6
0x1dc: JUMPI 0x1e6 V175
---
Entry stack: [V13, 0x83]
Stack pops: 0
Stack additions: [V174]
Exit stack: [V13, 0x83, V174]

================================

Block 0x1dd
[0x1dd:0x1e5]
---
Predecessors: [0x1b9]
Successors: []
---
0x1dd RETURNDATASIZE
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 RETURNDATACOPY
0x1e2 RETURNDATASIZE
0x1e3 PUSH1 0x0
0x1e5 REVERT
---
0x1dd: V177 = RETURNDATASIZE
0x1de: V178 = 0x0
0x1e1: RETURNDATACOPY 0x0 0x0 V177
0x1e2: V179 = RETURNDATASIZE
0x1e3: V180 = 0x0
0x1e5: REVERT 0x0 V179
---
Entry stack: [V13, 0x83, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x83, V174]

================================

Block 0x1e6
[0x1e6:0x1e8]
---
Predecessors: [0x1b9]
Successors: [0x83]
---
0x1e6 JUMPDEST
0x1e7 POP
0x1e8 JUMP
---
0x1e6: JUMPDEST 
0x1e8: JUMP 0x83
---
Entry stack: [V13, 0x83, V174]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e9
[0x1e9:0x202]
---
Predecessors: [0x91]
Successors: [0x203, 0x240]
---
0x1e9 JUMPDEST
0x1ea CALLER
0x1eb PUSH1 0x0
0x1ed SWAP1
0x1ee DUP2
0x1ef MSTORE
0x1f0 PUSH1 0x1
0x1f2 PUSH1 0x20
0x1f4 MSTORE
0x1f5 PUSH1 0x40
0x1f7 DUP2
0x1f8 SHA3
0x1f9 SLOAD
0x1fa PUSH1 0xff
0x1fc AND
0x1fd ISZERO
0x1fe ISZERO
0x1ff PUSH2 0x240
0x202 JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V181 = CALLER
0x1eb: V182 = 0x0
0x1ef: M[0x0] = V181
0x1f0: V183 = 0x1
0x1f2: V184 = 0x20
0x1f4: M[0x20] = 0x1
0x1f5: V185 = 0x40
0x1f8: V186 = SHA3 0x0 0x40
0x1f9: V187 = S[V186]
0x1fa: V188 = 0xff
0x1fc: V189 = AND 0xff V187
0x1fd: V190 = ISZERO V189
0x1fe: V191 = ISZERO V190
0x1ff: V192 = 0x240
0x202: JUMPI 0x240 V191
---
Entry stack: [V13, 0x83, V48]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x83, V48, 0x0]

================================

Block 0x203
[0x203:0x23f]
---
Predecessors: [0x1e9]
Successors: []
---
0x203 PUSH1 0x40
0x205 DUP1
0x206 MLOAD
0x207 PUSH1 0xe5
0x209 PUSH1 0x2
0x20b EXP
0x20c PUSH3 0x461bcd
0x210 MUL
0x211 DUP2
0x212 MSTORE
0x213 PUSH1 0x20
0x215 PUSH1 0x4
0x217 DUP3
0x218 ADD
0x219 MSTORE
0x21a PUSH1 0xb
0x21c PUSH1 0x24
0x21e DUP3
0x21f ADD
0x220 MSTORE
0x221 PUSH1 0x0
0x223 DUP1
0x224 MLOAD
0x225 PUSH1 0x20
0x227 PUSH2 0xa4b
0x22a DUP4
0x22b CODECOPY
0x22c DUP2
0x22d MLOAD
0x22e SWAP2
0x22f MSTORE
0x230 PUSH1 0x44
0x232 DUP3
0x233 ADD
0x234 MSTORE
0x235 SWAP1
0x236 MLOAD
0x237 SWAP1
0x238 DUP2
0x239 SWAP1
0x23a SUB
0x23b PUSH1 0x64
0x23d ADD
0x23e SWAP1
0x23f REVERT
---
0x203: V193 = 0x40
0x206: V194 = M[0x40]
0x207: V195 = 0xe5
0x209: V196 = 0x2
0x20b: V197 = EXP 0x2 0xe5
0x20c: V198 = 0x461bcd
0x210: V199 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x212: M[V194] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x213: V200 = 0x20
0x215: V201 = 0x4
0x218: V202 = ADD V194 0x4
0x219: M[V202] = 0x20
0x21a: V203 = 0xb
0x21c: V204 = 0x24
0x21f: V205 = ADD V194 0x24
0x220: M[V205] = 0xb
0x221: V206 = 0x0
0x224: V207 = M[0x0]
0x225: V208 = 0x20
0x227: V209 = 0xa4b
0x22b: CODECOPY 0x0 0xa4b 0x20
0x22d: V210 = M[0x0]
0x22f: M[0x0] = V207
0x230: V211 = 0x44
0x233: V212 = ADD V194 0x44
0x234: M[V212] = V210
0x236: V213 = M[0x40]
0x23a: V214 = SUB V194 V213
0x23b: V215 = 0x64
0x23d: V216 = ADD 0x64 V214
0x23f: REVERT V213 V216
---
Entry stack: [V13, 0x83, V48, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x83, V48, 0x0]

================================

Block 0x240
[0x240:0x243]
---
Predecessors: [0x1e9]
Successors: [0x244]
---
0x240 JUMPDEST
0x241 POP
0x242 PUSH1 0x0
---
0x240: JUMPDEST 
0x242: V217 = 0x0
---
Entry stack: [V13, 0x83, V48, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0x83, V48, 0x0]

================================

Block 0x244
[0x244:0x24c]
---
Predecessors: [0x240, 0x272]
Successors: [0x24d, 0x2b8]
---
0x244 JUMPDEST
0x245 DUP2
0x246 DUP2
0x247 LT
0x248 ISZERO
0x249 PUSH2 0x2b8
0x24c JUMPI
---
0x244: JUMPDEST 
0x247: V218 = LT S0 V48
0x248: V219 = ISZERO V218
0x249: V220 = 0x2b8
0x24c: JUMPI 0x2b8 V219
---
Entry stack: [V13, 0x83, V48, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x83, V48, S0]

================================

Block 0x24d
[0x24d:0x255]
---
Predecessors: [0x244]
Successors: [0x69f]
---
0x24d PUSH1 0x0
0x24f PUSH2 0x256
0x252 PUSH2 0x69f
0x255 JUMP
---
0x24d: V221 = 0x0
0x24f: V222 = 0x256
0x252: V223 = 0x69f
0x255: JUMP 0x69f
---
Entry stack: [V13, 0x83, V48, S0]
Stack pops: 0
Stack additions: [0x0, 0x256]
Exit stack: [V13, 0x83, V48, S0, 0x0, 0x256]

================================

Block 0x256
[0x256:0x268]
---
Predecessors: [0x69f]
Successors: [0x269, 0x272]
---
0x256 JUMPDEST
0x257 PUSH1 0x40
0x259 MLOAD
0x25a DUP1
0x25b SWAP2
0x25c SUB
0x25d SWAP1
0x25e PUSH1 0x0
0x260 CREATE
0x261 DUP1
0x262 ISZERO
0x263 DUP1
0x264 ISZERO
0x265 PUSH2 0x272
0x268 JUMPI
---
0x256: JUMPDEST 
0x257: V224 = 0x40
0x259: V225 = M[0x40]
0x25c: V226 = SUB V630 V225
0x25e: V227 = 0x0
0x260: V228 = CREATE 0x0 V225 V226
0x262: V229 = ISZERO V228
0x264: V230 = ISZERO V229
0x265: V231 = 0x272
0x268: JUMPI 0x272 V230
---
Entry stack: [V13, 0x83, V48, S2, 0x0, V630]
Stack pops: 1
Stack additions: [V228, V229]
Exit stack: [V13, 0x83, V48, S2, 0x0, V228, V229]

================================

Block 0x269
[0x269:0x271]
---
Predecessors: [0x256]
Successors: []
---
0x269 RETURNDATASIZE
0x26a PUSH1 0x0
0x26c DUP1
0x26d RETURNDATACOPY
0x26e RETURNDATASIZE
0x26f PUSH1 0x0
0x271 REVERT
---
0x269: V232 = RETURNDATASIZE
0x26a: V233 = 0x0
0x26d: RETURNDATACOPY 0x0 0x0 V232
0x26e: V234 = RETURNDATASIZE
0x26f: V235 = 0x0
0x271: REVERT 0x0 V234
---
Entry stack: [V13, 0x83, V48, S3, 0x0, V228, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x83, V48, S3, 0x0, V228, V229]

================================

Block 0x272
[0x272:0x2b7]
---
Predecessors: [0x256]
Successors: [0x244]
---
0x272 JUMPDEST
0x273 POP
0x274 DUP2
0x275 SLOAD
0x276 PUSH1 0x1
0x278 DUP1
0x279 DUP3
0x27a ADD
0x27b DUP5
0x27c SSTORE
0x27d PUSH1 0x0
0x27f SWAP4
0x280 DUP5
0x281 MSTORE
0x282 PUSH1 0x20
0x284 SWAP1
0x285 SWAP4
0x286 SHA3
0x287 ADD
0x288 DUP1
0x289 SLOAD
0x28a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29f NOT
0x2a0 AND
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0xa0
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 SUB
0x2a9 SWAP3
0x2aa SWAP1
0x2ab SWAP3
0x2ac AND
0x2ad SWAP2
0x2ae SWAP1
0x2af SWAP2
0x2b0 OR
0x2b1 SWAP1
0x2b2 SSTORE
0x2b3 ADD
0x2b4 PUSH2 0x244
0x2b7 JUMP
---
0x272: JUMPDEST 
0x275: V236 = S[0x0]
0x276: V237 = 0x1
0x27a: V238 = ADD V236 0x1
0x27c: S[0x0] = V238
0x27d: V239 = 0x0
0x281: M[0x0] = 0x0
0x282: V240 = 0x20
0x286: V241 = SHA3 0x0 0x20
0x287: V242 = ADD V241 V236
0x289: V243 = S[V242]
0x28a: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V245 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V246 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V243
0x2a1: V247 = 0x1
0x2a3: V248 = 0xa0
0x2a5: V249 = 0x2
0x2a7: V250 = EXP 0x2 0xa0
0x2a8: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ac: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x2b0: V253 = OR V252 V246
0x2b2: S[V242] = V253
0x2b3: V254 = ADD 0x1 S3
0x2b4: V255 = 0x244
0x2b7: JUMP 0x244
---
Entry stack: [V13, 0x83, V48, S3, 0x0, V228, V229]
Stack pops: 4
Stack additions: [V254]
Exit stack: [V13, 0x83, V48, V254]

================================

Block 0x2b8
[0x2b8:0x2c3]
---
Predecessors: [0x244]
Successors: [0x83]
---
0x2b8 JUMPDEST
0x2b9 POP
0x2ba PUSH1 0x2
0x2bc DUP1
0x2bd SLOAD
0x2be SWAP1
0x2bf SWAP2
0x2c0 ADD
0x2c1 SWAP1
0x2c2 SSTORE
0x2c3 JUMP
---
0x2b8: JUMPDEST 
0x2ba: V256 = 0x2
0x2bd: V257 = S[0x2]
0x2c0: V258 = ADD V48 V257
0x2c2: S[0x2] = V258
0x2c3: JUMP 0x83
---
Entry stack: [V13, 0x83, V48, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x2c4
[0x2c4:0x2dd]
---
Predecessors: [0xa9]
Successors: [0x2de, 0x31b]
---
0x2c4 JUMPDEST
0x2c5 CALLER
0x2c6 PUSH1 0x0
0x2c8 SWAP1
0x2c9 DUP2
0x2ca MSTORE
0x2cb PUSH1 0x1
0x2cd PUSH1 0x20
0x2cf MSTORE
0x2d0 PUSH1 0x40
0x2d2 SWAP1
0x2d3 SHA3
0x2d4 SLOAD
0x2d5 PUSH1 0xff
0x2d7 AND
0x2d8 ISZERO
0x2d9 ISZERO
0x2da PUSH2 0x31b
0x2dd JUMPI
---
0x2c4: JUMPDEST 
0x2c5: V259 = CALLER
0x2c6: V260 = 0x0
0x2ca: M[0x0] = V259
0x2cb: V261 = 0x1
0x2cd: V262 = 0x20
0x2cf: M[0x20] = 0x1
0x2d0: V263 = 0x40
0x2d3: V264 = SHA3 0x0 0x40
0x2d4: V265 = S[V264]
0x2d5: V266 = 0xff
0x2d7: V267 = AND 0xff V265
0x2d8: V268 = ISZERO V267
0x2d9: V269 = ISZERO V268
0x2da: V270 = 0x31b
0x2dd: JUMPI 0x31b V269
---
Entry stack: [V13, 0x83, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x83, V62]

================================

Block 0x2de
[0x2de:0x31a]
---
Predecessors: [0x2c4]
Successors: []
---
0x2de PUSH1 0x40
0x2e0 DUP1
0x2e1 MLOAD
0x2e2 PUSH1 0xe5
0x2e4 PUSH1 0x2
0x2e6 EXP
0x2e7 PUSH3 0x461bcd
0x2eb MUL
0x2ec DUP2
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 PUSH1 0x4
0x2f2 DUP3
0x2f3 ADD
0x2f4 MSTORE
0x2f5 PUSH1 0xb
0x2f7 PUSH1 0x24
0x2f9 DUP3
0x2fa ADD
0x2fb MSTORE
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff MLOAD
0x300 PUSH1 0x20
0x302 PUSH2 0xa4b
0x305 DUP4
0x306 CODECOPY
0x307 DUP2
0x308 MLOAD
0x309 SWAP2
0x30a MSTORE
0x30b PUSH1 0x44
0x30d DUP3
0x30e ADD
0x30f MSTORE
0x310 SWAP1
0x311 MLOAD
0x312 SWAP1
0x313 DUP2
0x314 SWAP1
0x315 SUB
0x316 PUSH1 0x64
0x318 ADD
0x319 SWAP1
0x31a REVERT
---
0x2de: V271 = 0x40
0x2e1: V272 = M[0x40]
0x2e2: V273 = 0xe5
0x2e4: V274 = 0x2
0x2e6: V275 = EXP 0x2 0xe5
0x2e7: V276 = 0x461bcd
0x2eb: V277 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x2ed: M[V272] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2ee: V278 = 0x20
0x2f0: V279 = 0x4
0x2f3: V280 = ADD V272 0x4
0x2f4: M[V280] = 0x20
0x2f5: V281 = 0xb
0x2f7: V282 = 0x24
0x2fa: V283 = ADD V272 0x24
0x2fb: M[V283] = 0xb
0x2fc: V284 = 0x0
0x2ff: V285 = M[0x0]
0x300: V286 = 0x20
0x302: V287 = 0xa4b
0x306: CODECOPY 0x0 0xa4b 0x20
0x308: V288 = M[0x0]
0x30a: M[0x0] = V285
0x30b: V289 = 0x44
0x30e: V290 = ADD V272 0x44
0x30f: M[V290] = V288
0x311: V291 = M[0x40]
0x315: V292 = SUB V272 V291
0x316: V293 = 0x64
0x318: V294 = ADD 0x64 V292
0x31a: REVERT V291 V294
---
Entry stack: [V13, 0x83, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x83, V62]

================================

Block 0x31b
[0x31b:0x33c]
---
Predecessors: [0x2c4]
Successors: [0x33d, 0x38c]
---
0x31b JUMPDEST
0x31c PUSH1 0x1
0x31e PUSH1 0xa0
0x320 PUSH1 0x2
0x322 EXP
0x323 SUB
0x324 DUP2
0x325 AND
0x326 PUSH1 0x0
0x328 SWAP1
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x1
0x32d PUSH1 0x20
0x32f MSTORE
0x330 PUSH1 0x40
0x332 SWAP1
0x333 SHA3
0x334 SLOAD
0x335 PUSH1 0xff
0x337 AND
0x338 ISZERO
0x339 PUSH2 0x38c
0x33c JUMPI
---
0x31b: JUMPDEST 
0x31c: V295 = 0x1
0x31e: V296 = 0xa0
0x320: V297 = 0x2
0x322: V298 = EXP 0x2 0xa0
0x323: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x325: V300 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0x326: V301 = 0x0
0x32a: M[0x0] = V300
0x32b: V302 = 0x1
0x32d: V303 = 0x20
0x32f: M[0x20] = 0x1
0x330: V304 = 0x40
0x333: V305 = SHA3 0x0 0x40
0x334: V306 = S[V305]
0x335: V307 = 0xff
0x337: V308 = AND 0xff V306
0x338: V309 = ISZERO V308
0x339: V310 = 0x38c
0x33c: JUMPI 0x38c V309
---
Entry stack: [V13, 0x83, V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x83, V62]

================================

Block 0x33d
[0x33d:0x38b]
---
Predecessors: [0x31b]
Successors: []
---
0x33d PUSH1 0x40
0x33f DUP1
0x340 MLOAD
0x341 PUSH1 0xe5
0x343 PUSH1 0x2
0x345 EXP
0x346 PUSH3 0x461bcd
0x34a MUL
0x34b DUP2
0x34c MSTORE
0x34d PUSH1 0x20
0x34f PUSH1 0x4
0x351 DUP3
0x352 ADD
0x353 MSTORE
0x354 PUSH1 0xb
0x356 PUSH1 0x24
0x358 DUP3
0x359 ADD
0x35a MSTORE
0x35b PUSH32 0x61646d696e206578697374000000000000000000000000000000000000000000
0x37c PUSH1 0x44
0x37e DUP3
0x37f ADD
0x380 MSTORE
0x381 SWAP1
0x382 MLOAD
0x383 SWAP1
0x384 DUP2
0x385 SWAP1
0x386 SUB
0x387 PUSH1 0x64
0x389 ADD
0x38a SWAP1
0x38b REVERT
---
0x33d: V311 = 0x40
0x340: V312 = M[0x40]
0x341: V313 = 0xe5
0x343: V314 = 0x2
0x345: V315 = EXP 0x2 0xe5
0x346: V316 = 0x461bcd
0x34a: V317 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x34c: M[V312] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x34d: V318 = 0x20
0x34f: V319 = 0x4
0x352: V320 = ADD V312 0x4
0x353: M[V320] = 0x20
0x354: V321 = 0xb
0x356: V322 = 0x24
0x359: V323 = ADD V312 0x24
0x35a: M[V323] = 0xb
0x35b: V324 = 0x61646d696e206578697374000000000000000000000000000000000000000000
0x37c: V325 = 0x44
0x37f: V326 = ADD V312 0x44
0x380: M[V326] = 0x61646d696e206578697374000000000000000000000000000000000000000000
0x382: V327 = M[0x40]
0x386: V328 = SUB V312 V327
0x387: V329 = 0x64
0x389: V330 = ADD 0x64 V328
0x38b: REVERT V327 V330
---
Entry stack: [V13, 0x83, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x83, V62]

================================

Block 0x38c
[0x38c:0x3b2]
---
Predecessors: [0x31b]
Successors: [0x83]
---
0x38c JUMPDEST
0x38d PUSH1 0x1
0x38f PUSH1 0xa0
0x391 PUSH1 0x2
0x393 EXP
0x394 SUB
0x395 AND
0x396 PUSH1 0x0
0x398 SWAP1
0x399 DUP2
0x39a MSTORE
0x39b PUSH1 0x1
0x39d PUSH1 0x20
0x39f DUP2
0x3a0 SWAP1
0x3a1 MSTORE
0x3a2 PUSH1 0x40
0x3a4 SWAP1
0x3a5 SWAP2
0x3a6 SHA3
0x3a7 DUP1
0x3a8 SLOAD
0x3a9 PUSH1 0xff
0x3ab NOT
0x3ac AND
0x3ad SWAP1
0x3ae SWAP2
0x3af OR
0x3b0 SWAP1
0x3b1 SSTORE
0x3b2 JUMP
---
0x38c: JUMPDEST 
0x38d: V331 = 0x1
0x38f: V332 = 0xa0
0x391: V333 = 0x2
0x393: V334 = EXP 0x2 0xa0
0x394: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x395: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x396: V337 = 0x0
0x39a: M[0x0] = V336
0x39b: V338 = 0x1
0x39d: V339 = 0x20
0x3a1: M[0x20] = 0x1
0x3a2: V340 = 0x40
0x3a6: V341 = SHA3 0x0 0x40
0x3a8: V342 = S[V341]
0x3a9: V343 = 0xff
0x3ab: V344 = NOT 0xff
0x3ac: V345 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V342
0x3af: V346 = OR 0x1 V345
0x3b1: S[V341] = V346
0x3b2: JUMP 0x83
---
Entry stack: [V13, 0x83, V62]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x3b3
[0x3b3:0x3c7]
---
Predecessors: [0xca]
Successors: [0xdf]
---
0x3b3 JUMPDEST
0x3b4 PUSH1 0x1
0x3b6 PUSH1 0x20
0x3b8 MSTORE
0x3b9 PUSH1 0x0
0x3bb SWAP1
0x3bc DUP2
0x3bd MSTORE
0x3be PUSH1 0x40
0x3c0 SWAP1
0x3c1 SHA3
0x3c2 SLOAD
0x3c3 PUSH1 0xff
0x3c5 AND
0x3c6 DUP2
0x3c7 JUMP
---
0x3b3: JUMPDEST 
0x3b4: V347 = 0x1
0x3b6: V348 = 0x20
0x3b8: M[0x20] = 0x1
0x3b9: V349 = 0x0
0x3bd: M[0x0] = V76
0x3be: V350 = 0x40
0x3c1: V351 = SHA3 0x0 0x40
0x3c2: V352 = S[V351]
0x3c3: V353 = 0xff
0x3c5: V354 = AND 0xff V352
0x3c7: JUMP 0xdf
---
Entry stack: [V13, 0xdf, V76]
Stack pops: 2
Stack additions: [S1, V354]
Exit stack: [V13, 0xdf, V354]

================================

Block 0x3c8
[0x3c8:0x3cd]
---
Predecessors: [0xff]
Successors: [0x108]
---
0x3c8 JUMPDEST
0x3c9 PUSH1 0x2
0x3cb SLOAD
0x3cc DUP2
0x3cd JUMP
---
0x3c8: JUMPDEST 
0x3c9: V355 = 0x2
0x3cb: V356 = S[0x2]
0x3cd: JUMP 0x108
---
Entry stack: [V13, 0x108]
Stack pops: 1
Stack additions: [S0, V356]
Exit stack: [V13, 0x108, V356]

================================

Block 0x3ce
[0x3ce:0x3da]
---
Predecessors: [0x126]
Successors: [0x3db, 0x3dc]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x0
0x3d1 DUP1
0x3d2 SLOAD
0x3d3 DUP3
0x3d4 SWAP1
0x3d5 DUP2
0x3d6 LT
0x3d7 PUSH2 0x3dc
0x3da JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V357 = 0x0
0x3d2: V358 = S[0x0]
0x3d6: V359 = LT V104 V358
0x3d7: V360 = 0x3dc
0x3da: JUMPI 0x3dc V359
---
Entry stack: [V13, 0x132, V104]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V13, 0x132, V104, 0x0, V104]

================================

Block 0x3db
[0x3db:0x3db]
---
Predecessors: [0x3ce]
Successors: []
---
0x3db INVALID
---
0x3db: INVALID 
---
Entry stack: [V13, 0x132, V104, 0x0, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x132, V104, 0x0, V104]

================================

Block 0x3dc
[0x3dc:0x3f5]
---
Predecessors: [0x3ce]
Successors: [0x132]
---
0x3dc JUMPDEST
0x3dd PUSH1 0x0
0x3df SWAP2
0x3e0 DUP3
0x3e1 MSTORE
0x3e2 PUSH1 0x20
0x3e4 SWAP1
0x3e5 SWAP2
0x3e6 SHA3
0x3e7 ADD
0x3e8 SLOAD
0x3e9 PUSH1 0x1
0x3eb PUSH1 0xa0
0x3ed PUSH1 0x2
0x3ef EXP
0x3f0 SUB
0x3f1 AND
0x3f2 SWAP1
0x3f3 POP
0x3f4 DUP2
0x3f5 JUMP
---
0x3dc: JUMPDEST 
0x3dd: V361 = 0x0
0x3e1: M[0x0] = 0x0
0x3e2: V362 = 0x20
0x3e6: V363 = SHA3 0x0 0x20
0x3e7: V364 = ADD V363 V104
0x3e8: V365 = S[V364]
0x3e9: V366 = 0x1
0x3eb: V367 = 0xa0
0x3ed: V368 = 0x2
0x3ef: V369 = EXP 0x2 0xa0
0x3f0: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f1: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x3f5: JUMP 0x132
---
Entry stack: [V13, 0x132, V104, 0x0, V104]
Stack pops: 4
Stack additions: [S3, V371]
Exit stack: [V13, 0x132, V371]

================================

Block 0x3f6
[0x3f6:0x417]
---
Predecessors: [0x14e]
Successors: [0x418, 0x455]
---
0x3f6 JUMPDEST
0x3f7 CALLER
0x3f8 PUSH1 0x0
0x3fa SWAP1
0x3fb DUP2
0x3fc MSTORE
0x3fd PUSH1 0x1
0x3ff PUSH1 0x20
0x401 MSTORE
0x402 PUSH1 0x40
0x404 DUP2
0x405 SHA3
0x406 SLOAD
0x407 DUP2
0x408 SWAP1
0x409 DUP2
0x40a SWAP1
0x40b DUP2
0x40c SWAP1
0x40d DUP2
0x40e SWAP1
0x40f PUSH1 0xff
0x411 AND
0x412 ISZERO
0x413 ISZERO
0x414 PUSH2 0x455
0x417 JUMPI
---
0x3f6: JUMPDEST 
0x3f7: V372 = CALLER
0x3f8: V373 = 0x0
0x3fc: M[0x0] = V372
0x3fd: V374 = 0x1
0x3ff: V375 = 0x20
0x401: M[0x20] = 0x1
0x402: V376 = 0x40
0x405: V377 = SHA3 0x0 0x40
0x406: V378 = S[V377]
0x40f: V379 = 0xff
0x411: V380 = AND 0xff V378
0x412: V381 = ISZERO V380
0x413: V382 = ISZERO V381
0x414: V383 = 0x455
0x417: JUMPI 0x455 V382
---
Entry stack: [V13, 0xdf, V126]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0xdf, V126, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x418
[0x418:0x454]
---
Predecessors: [0x3f6]
Successors: []
---
0x418 PUSH1 0x40
0x41a DUP1
0x41b MLOAD
0x41c PUSH1 0xe5
0x41e PUSH1 0x2
0x420 EXP
0x421 PUSH3 0x461bcd
0x425 MUL
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x20
0x42a PUSH1 0x4
0x42c DUP3
0x42d ADD
0x42e MSTORE
0x42f PUSH1 0xb
0x431 PUSH1 0x24
0x433 DUP3
0x434 ADD
0x435 MSTORE
0x436 PUSH1 0x0
0x438 DUP1
0x439 MLOAD
0x43a PUSH1 0x20
0x43c PUSH2 0xa4b
0x43f DUP4
0x440 CODECOPY
0x441 DUP2
0x442 MLOAD
0x443 SWAP2
0x444 MSTORE
0x445 PUSH1 0x44
0x447 DUP3
0x448 ADD
0x449 MSTORE
0x44a SWAP1
0x44b MLOAD
0x44c SWAP1
0x44d DUP2
0x44e SWAP1
0x44f SUB
0x450 PUSH1 0x64
0x452 ADD
0x453 SWAP1
0x454 REVERT
---
0x418: V384 = 0x40
0x41b: V385 = M[0x40]
0x41c: V386 = 0xe5
0x41e: V387 = 0x2
0x420: V388 = EXP 0x2 0xe5
0x421: V389 = 0x461bcd
0x425: V390 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x427: M[V385] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x428: V391 = 0x20
0x42a: V392 = 0x4
0x42d: V393 = ADD V385 0x4
0x42e: M[V393] = 0x20
0x42f: V394 = 0xb
0x431: V395 = 0x24
0x434: V396 = ADD V385 0x24
0x435: M[V396] = 0xb
0x436: V397 = 0x0
0x439: V398 = M[0x0]
0x43a: V399 = 0x20
0x43c: V400 = 0xa4b
0x440: CODECOPY 0x0 0xa4b 0x20
0x442: V401 = M[0x0]
0x444: M[0x0] = V398
0x445: V402 = 0x44
0x448: V403 = ADD V385 0x44
0x449: M[V403] = V401
0x44b: V404 = M[0x40]
0x44f: V405 = SUB V385 V404
0x450: V406 = 0x64
0x452: V407 = ADD 0x64 V405
0x454: REVERT V404 V407
---
Entry stack: [V13, 0xdf, V126, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x455
[0x455:0x465]
---
Predecessors: [0x3f6]
Successors: [0x466, 0x4b5]
---
0x455 JUMPDEST
0x456 PUSH8 0x16345785d8a0000
0x45f CALLVALUE
0x460 LT
0x461 ISZERO
0x462 PUSH2 0x4b5
0x465 JUMPI
---
0x455: JUMPDEST 
0x456: V408 = 0x16345785d8a0000
0x45f: V409 = CALLVALUE
0x460: V410 = LT V409 0x16345785d8a0000
0x461: V411 = ISZERO V410
0x462: V412 = 0x4b5
0x465: JUMPI 0x4b5 V411
---
Entry stack: [V13, 0xdf, V126, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x466
[0x466:0x4b4]
---
Predecessors: [0x455]
Successors: []
---
0x466 PUSH1 0x40
0x468 DUP1
0x469 MLOAD
0x46a PUSH1 0xe5
0x46c PUSH1 0x2
0x46e EXP
0x46f PUSH3 0x461bcd
0x473 MUL
0x474 DUP2
0x475 MSTORE
0x476 PUSH1 0x20
0x478 PUSH1 0x4
0x47a DUP3
0x47b ADD
0x47c MSTORE
0x47d PUSH1 0xe
0x47f PUSH1 0x24
0x481 DUP3
0x482 ADD
0x483 MSTORE
0x484 PUSH32 0x657468206e6f7420656e6f756768000000000000000000000000000000000000
0x4a5 PUSH1 0x44
0x4a7 DUP3
0x4a8 ADD
0x4a9 MSTORE
0x4aa SWAP1
0x4ab MLOAD
0x4ac SWAP1
0x4ad DUP2
0x4ae SWAP1
0x4af SUB
0x4b0 PUSH1 0x64
0x4b2 ADD
0x4b3 SWAP1
0x4b4 REVERT
---
0x466: V413 = 0x40
0x469: V414 = M[0x40]
0x46a: V415 = 0xe5
0x46c: V416 = 0x2
0x46e: V417 = EXP 0x2 0xe5
0x46f: V418 = 0x461bcd
0x473: V419 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x475: M[V414] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x476: V420 = 0x20
0x478: V421 = 0x4
0x47b: V422 = ADD V414 0x4
0x47c: M[V422] = 0x20
0x47d: V423 = 0xe
0x47f: V424 = 0x24
0x482: V425 = ADD V414 0x24
0x483: M[V425] = 0xe
0x484: V426 = 0x657468206e6f7420656e6f756768000000000000000000000000000000000000
0x4a5: V427 = 0x44
0x4a8: V428 = ADD V414 0x44
0x4a9: M[V428] = 0x657468206e6f7420656e6f756768000000000000000000000000000000000000
0x4ab: V429 = M[0x40]
0x4af: V430 = SUB V414 V429
0x4b0: V431 = 0x64
0x4b2: V432 = ADD 0x64 V430
0x4b4: REVERT V429 V432
---
Entry stack: [V13, 0xdf, V126, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4b5
[0x4b5:0x4f1]
---
Predecessors: [0x455]
Successors: [0x4f2, 0x4f6]
---
0x4b5 JUMPDEST
0x4b6 DUP6
0x4b7 SWAP4
0x4b8 POP
0x4b9 DUP4
0x4ba PUSH1 0x1
0x4bc PUSH1 0xa0
0x4be PUSH1 0x2
0x4c0 EXP
0x4c1 SUB
0x4c2 AND
0x4c3 PUSH4 0x11a09ae7
0x4c8 PUSH1 0x40
0x4ca MLOAD
0x4cb DUP2
0x4cc PUSH4 0xffffffff
0x4d1 AND
0x4d2 PUSH1 0xe0
0x4d4 PUSH1 0x2
0x4d6 EXP
0x4d7 MUL
0x4d8 DUP2
0x4d9 MSTORE
0x4da PUSH1 0x4
0x4dc ADD
0x4dd PUSH1 0x20
0x4df PUSH1 0x40
0x4e1 MLOAD
0x4e2 DUP1
0x4e3 DUP4
0x4e4 SUB
0x4e5 DUP2
0x4e6 PUSH1 0x0
0x4e8 DUP8
0x4e9 DUP1
0x4ea EXTCODESIZE
0x4eb ISZERO
0x4ec DUP1
0x4ed ISZERO
0x4ee PUSH2 0x4f6
0x4f1 JUMPI
---
0x4b5: JUMPDEST 
0x4ba: V433 = 0x1
0x4bc: V434 = 0xa0
0x4be: V435 = 0x2
0x4c0: V436 = EXP 0x2 0xa0
0x4c1: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c2: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x4c3: V439 = 0x11a09ae7
0x4c8: V440 = 0x40
0x4ca: V441 = M[0x40]
0x4cc: V442 = 0xffffffff
0x4d1: V443 = AND 0xffffffff 0x11a09ae7
0x4d2: V444 = 0xe0
0x4d4: V445 = 0x2
0x4d6: V446 = EXP 0x2 0xe0
0x4d7: V447 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x4d9: M[V441] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x4da: V448 = 0x4
0x4dc: V449 = ADD 0x4 V441
0x4dd: V450 = 0x20
0x4df: V451 = 0x40
0x4e1: V452 = M[0x40]
0x4e4: V453 = SUB V449 V452
0x4e6: V454 = 0x0
0x4ea: V455 = EXTCODESIZE V438
0x4eb: V456 = ISZERO V455
0x4ed: V457 = ISZERO V456
0x4ee: V458 = 0x4f6
0x4f1: JUMPI 0x4f6 V457
---
Entry stack: [V13, 0xdf, V126, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S5, S2, S1, S0, V438, 0x11a09ae7, V449, 0x20, V452, V453, V452, 0x0, V438, V456]
Exit stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V438, 0x11a09ae7, V449, 0x20, V452, V453, V452, 0x0, V438, V456]

================================

Block 0x4f2
[0x4f2:0x4f5]
---
Predecessors: [0x4b5]
Successors: []
---
0x4f2 PUSH1 0x0
0x4f4 DUP1
0x4f5 REVERT
---
0x4f2: V459 = 0x0
0x4f5: REVERT 0x0 0x0
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V438, 0x11a09ae7, V449, 0x20, V452, V453, V452, 0x0, V438, V456]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V438, 0x11a09ae7, V449, 0x20, V452, V453, V452, 0x0, V438, V456]

================================

Block 0x4f6
[0x4f6:0x500]
---
Predecessors: [0x4b5]
Successors: [0x501, 0x50a]
---
0x4f6 JUMPDEST
0x4f7 POP
0x4f8 GAS
0x4f9 CALL
0x4fa ISZERO
0x4fb DUP1
0x4fc ISZERO
0x4fd PUSH2 0x50a
0x500 JUMPI
---
0x4f6: JUMPDEST 
0x4f8: V460 = GAS
0x4f9: V461 = CALL V460 V438 0x0 V452 V453 V452 0x20
0x4fa: V462 = ISZERO V461
0x4fc: V463 = ISZERO V462
0x4fd: V464 = 0x50a
0x500: JUMPI 0x50a V463
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V438, 0x11a09ae7, V449, 0x20, V452, V453, V452, 0x0, V438, V456]
Stack pops: 7
Stack additions: [V462]
Exit stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V438, 0x11a09ae7, V449, V462]

================================

Block 0x501
[0x501:0x509]
---
Predecessors: [0x4f6]
Successors: []
---
0x501 RETURNDATASIZE
0x502 PUSH1 0x0
0x504 DUP1
0x505 RETURNDATACOPY
0x506 RETURNDATASIZE
0x507 PUSH1 0x0
0x509 REVERT
---
0x501: V465 = RETURNDATASIZE
0x502: V466 = 0x0
0x505: RETURNDATACOPY 0x0 0x0 V465
0x506: V467 = RETURNDATASIZE
0x507: V468 = 0x0
0x509: REVERT 0x0 V467
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V438, 0x11a09ae7, V449, V462]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V438, 0x11a09ae7, V449, V462]

================================

Block 0x50a
[0x50a:0x51b]
---
Predecessors: [0x4f6]
Successors: [0x51c, 0x520]
---
0x50a JUMPDEST
0x50b POP
0x50c POP
0x50d POP
0x50e POP
0x50f PUSH1 0x40
0x511 MLOAD
0x512 RETURNDATASIZE
0x513 PUSH1 0x20
0x515 DUP2
0x516 LT
0x517 ISZERO
0x518 PUSH2 0x520
0x51b JUMPI
---
0x50a: JUMPDEST 
0x50f: V469 = 0x40
0x511: V470 = M[0x40]
0x512: V471 = RETURNDATASIZE
0x513: V472 = 0x20
0x516: V473 = LT V471 0x20
0x517: V474 = ISZERO V473
0x518: V475 = 0x520
0x51b: JUMPI 0x520 V474
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V438, 0x11a09ae7, V449, V462]
Stack pops: 4
Stack additions: [V470, V471]
Exit stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V470, V471]

================================

Block 0x51c
[0x51c:0x51f]
---
Predecessors: [0x50a]
Successors: []
---
0x51c PUSH1 0x0
0x51e DUP1
0x51f REVERT
---
0x51c: V476 = 0x0
0x51f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V470, V471]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V470, V471]

================================

Block 0x520
[0x520:0x528]
---
Predecessors: [0x50a]
Successors: [0x529]
---
0x520 JUMPDEST
0x521 POP
0x522 MLOAD
0x523 SWAP3
0x524 POP
0x525 PUSH1 0x0
0x527 SWAP2
0x528 POP
---
0x520: JUMPDEST 
0x522: V477 = M[V470]
0x525: V478 = 0x0
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, 0x0, 0x0, 0x0, V470, V471]
Stack pops: 5
Stack additions: [V477, 0x0, S2]
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, 0x0, 0x0]

================================

Block 0x529
[0x529:0x533]
---
Predecessors: [0x520, 0x658]
Successors: [0x534, 0x663]
---
0x529 JUMPDEST
0x52a PUSH1 0x2
0x52c SLOAD
0x52d DUP3
0x52e LT
0x52f ISZERO
0x530 PUSH2 0x663
0x533 JUMPI
---
0x529: JUMPDEST 
0x52a: V479 = 0x2
0x52c: V480 = S[0x2]
0x52e: V481 = LT S1 V480
0x52f: V482 = ISZERO V481
0x530: V483 = 0x663
0x533: JUMPI 0x663 V482
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S1, S0]

================================

Block 0x534
[0x534:0x53f]
---
Predecessors: [0x529]
Successors: [0x540, 0x541]
---
0x534 PUSH1 0x0
0x536 DUP1
0x537 SLOAD
0x538 DUP4
0x539 SWAP1
0x53a DUP2
0x53b LT
0x53c PUSH2 0x541
0x53f JUMPI
---
0x534: V484 = 0x0
0x537: V485 = S[0x0]
0x53b: V486 = LT S1 V485
0x53c: V487 = 0x541
0x53f: JUMPI 0x541 V486
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1]
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S1, S0, 0x0, S1]

================================

Block 0x540
[0x540:0x540]
---
Predecessors: [0x534]
Successors: []
---
0x540 INVALID
---
0x540: INVALID 
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S3, S2, 0x0, S0]

================================

Block 0x541
[0x541:0x5a5]
---
Predecessors: [0x534]
Successors: [0x5a6, 0x5aa]
---
0x541 JUMPDEST
0x542 SWAP1
0x543 PUSH1 0x0
0x545 MSTORE
0x546 PUSH1 0x20
0x548 PUSH1 0x0
0x54a SHA3
0x54b ADD
0x54c PUSH1 0x0
0x54e SWAP1
0x54f SLOAD
0x550 SWAP1
0x551 PUSH2 0x100
0x554 EXP
0x555 SWAP1
0x556 DIV
0x557 PUSH1 0x1
0x559 PUSH1 0xa0
0x55b PUSH1 0x2
0x55d EXP
0x55e SUB
0x55f AND
0x560 SWAP1
0x561 POP
0x562 DUP1
0x563 PUSH1 0x1
0x565 PUSH1 0xa0
0x567 PUSH1 0x2
0x569 EXP
0x56a SUB
0x56b AND
0x56c PUSH4 0x5f72f450
0x571 DUP5
0x572 PUSH1 0x40
0x574 MLOAD
0x575 DUP3
0x576 PUSH4 0xffffffff
0x57b AND
0x57c PUSH1 0xe0
0x57e PUSH1 0x2
0x580 EXP
0x581 MUL
0x582 DUP2
0x583 MSTORE
0x584 PUSH1 0x4
0x586 ADD
0x587 DUP1
0x588 DUP3
0x589 DUP2
0x58a MSTORE
0x58b PUSH1 0x20
0x58d ADD
0x58e SWAP2
0x58f POP
0x590 POP
0x591 PUSH1 0x20
0x593 PUSH1 0x40
0x595 MLOAD
0x596 DUP1
0x597 DUP4
0x598 SUB
0x599 DUP2
0x59a PUSH1 0x0
0x59c DUP8
0x59d DUP1
0x59e EXTCODESIZE
0x59f ISZERO
0x5a0 DUP1
0x5a1 ISZERO
0x5a2 PUSH2 0x5aa
0x5a5 JUMPI
---
0x541: JUMPDEST 
0x543: V488 = 0x0
0x545: M[0x0] = 0x0
0x546: V489 = 0x20
0x548: V490 = 0x0
0x54a: V491 = SHA3 0x0 0x20
0x54b: V492 = ADD V491 S0
0x54c: V493 = 0x0
0x54f: V494 = S[V492]
0x551: V495 = 0x100
0x554: V496 = EXP 0x100 0x0
0x556: V497 = DIV V494 0x1
0x557: V498 = 0x1
0x559: V499 = 0xa0
0x55b: V500 = 0x2
0x55d: V501 = EXP 0x2 0xa0
0x55e: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55f: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x563: V504 = 0x1
0x565: V505 = 0xa0
0x567: V506 = 0x2
0x569: V507 = EXP 0x2 0xa0
0x56a: V508 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56b: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x56c: V510 = 0x5f72f450
0x572: V511 = 0x40
0x574: V512 = M[0x40]
0x576: V513 = 0xffffffff
0x57b: V514 = AND 0xffffffff 0x5f72f450
0x57c: V515 = 0xe0
0x57e: V516 = 0x2
0x580: V517 = EXP 0x2 0xe0
0x581: V518 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x5f72f450
0x583: M[V512] = 0x5f72f45000000000000000000000000000000000000000000000000000000000
0x584: V519 = 0x4
0x586: V520 = ADD 0x4 V512
0x58a: M[V520] = V477
0x58b: V521 = 0x20
0x58d: V522 = ADD 0x20 V520
0x591: V523 = 0x20
0x593: V524 = 0x40
0x595: V525 = M[0x40]
0x598: V526 = SUB V522 V525
0x59a: V527 = 0x0
0x59e: V528 = EXTCODESIZE V509
0x59f: V529 = ISZERO V528
0x5a1: V530 = ISZERO V529
0x5a2: V531 = 0x5aa
0x5a5: JUMPI 0x5aa V530
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, V503, V509, 0x5f72f450, V522, 0x20, V525, V526, V525, 0x0, V509, V529]
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S3, V503, V509, 0x5f72f450, V522, 0x20, V525, V526, V525, 0x0, V509, V529]

================================

Block 0x5a6
[0x5a6:0x5a9]
---
Predecessors: [0x541]
Successors: []
---
0x5a6 PUSH1 0x0
0x5a8 DUP1
0x5a9 REVERT
---
0x5a6: V532 = 0x0
0x5a9: REVERT 0x0 0x0
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S11, V503, V509, 0x5f72f450, V522, 0x20, V525, V526, V525, 0x0, V509, V529]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S11, V503, V509, 0x5f72f450, V522, 0x20, V525, V526, V525, 0x0, V509, V529]

================================

Block 0x5aa
[0x5aa:0x5b4]
---
Predecessors: [0x541]
Successors: [0x5b5, 0x5be]
---
0x5aa JUMPDEST
0x5ab POP
0x5ac GAS
0x5ad CALL
0x5ae ISZERO
0x5af DUP1
0x5b0 ISZERO
0x5b1 PUSH2 0x5be
0x5b4 JUMPI
---
0x5aa: JUMPDEST 
0x5ac: V533 = GAS
0x5ad: V534 = CALL V533 V509 0x0 V525 V526 V525 0x20
0x5ae: V535 = ISZERO V534
0x5b0: V536 = ISZERO V535
0x5b1: V537 = 0x5be
0x5b4: JUMPI 0x5be V536
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S11, V503, V509, 0x5f72f450, V522, 0x20, V525, V526, V525, 0x0, V509, V529]
Stack pops: 7
Stack additions: [V535]
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S11, V503, V509, 0x5f72f450, V522, V535]

================================

Block 0x5b5
[0x5b5:0x5bd]
---
Predecessors: [0x5aa]
Successors: []
---
0x5b5 RETURNDATASIZE
0x5b6 PUSH1 0x0
0x5b8 DUP1
0x5b9 RETURNDATACOPY
0x5ba RETURNDATASIZE
0x5bb PUSH1 0x0
0x5bd REVERT
---
0x5b5: V538 = RETURNDATASIZE
0x5b6: V539 = 0x0
0x5b9: RETURNDATACOPY 0x0 0x0 V538
0x5ba: V540 = RETURNDATASIZE
0x5bb: V541 = 0x0
0x5bd: REVERT 0x0 V540
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S5, V503, V509, 0x5f72f450, V522, V535]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S5, V503, V509, 0x5f72f450, V522, V535]

================================

Block 0x5be
[0x5be:0x5cf]
---
Predecessors: [0x5aa]
Successors: [0x5d0, 0x5d4]
---
0x5be JUMPDEST
0x5bf POP
0x5c0 POP
0x5c1 POP
0x5c2 POP
0x5c3 PUSH1 0x40
0x5c5 MLOAD
0x5c6 RETURNDATASIZE
0x5c7 PUSH1 0x20
0x5c9 DUP2
0x5ca LT
0x5cb ISZERO
0x5cc PUSH2 0x5d4
0x5cf JUMPI
---
0x5be: JUMPDEST 
0x5c3: V542 = 0x40
0x5c5: V543 = M[0x40]
0x5c6: V544 = RETURNDATASIZE
0x5c7: V545 = 0x20
0x5ca: V546 = LT V544 0x20
0x5cb: V547 = ISZERO V546
0x5cc: V548 = 0x5d4
0x5cf: JUMPI 0x5d4 V547
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S5, V503, V509, 0x5f72f450, V522, V535]
Stack pops: 4
Stack additions: [V543, V544]
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S5, V503, V543, V544]

================================

Block 0x5d0
[0x5d0:0x5d3]
---
Predecessors: [0x5be]
Successors: []
---
0x5d0 PUSH1 0x0
0x5d2 DUP1
0x5d3 REVERT
---
0x5d0: V549 = 0x0
0x5d3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S3, V503, V543, V544]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S3, V503, V543, V544]

================================

Block 0x5d4
[0x5d4:0x5db]
---
Predecessors: [0x5be]
Successors: [0x5dc, 0x658]
---
0x5d4 JUMPDEST
0x5d5 POP
0x5d6 MLOAD
0x5d7 ISZERO
0x5d8 PUSH2 0x658
0x5db JUMPI
---
0x5d4: JUMPDEST 
0x5d6: V550 = M[V543]
0x5d7: V551 = ISZERO V550
0x5d8: V552 = 0x658
0x5db: JUMPI 0x658 V551
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S3, V503, V543, V544]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S3, V503]

================================

Block 0x5dc
[0x5dc:0x631]
---
Predecessors: [0x5d4]
Successors: [0x632, 0x636]
---
0x5dc DUP1
0x5dd PUSH1 0x1
0x5df PUSH1 0xa0
0x5e1 PUSH1 0x2
0x5e3 EXP
0x5e4 SUB
0x5e5 AND
0x5e6 PUSH4 0xd018db3e
0x5eb CALLVALUE
0x5ec DUP9
0x5ed PUSH1 0x40
0x5ef MLOAD
0x5f0 DUP4
0x5f1 PUSH4 0xffffffff
0x5f6 AND
0x5f7 PUSH1 0xe0
0x5f9 PUSH1 0x2
0x5fb EXP
0x5fc MUL
0x5fd DUP2
0x5fe MSTORE
0x5ff PUSH1 0x4
0x601 ADD
0x602 DUP1
0x603 DUP3
0x604 PUSH1 0x1
0x606 PUSH1 0xa0
0x608 PUSH1 0x2
0x60a EXP
0x60b SUB
0x60c AND
0x60d PUSH1 0x1
0x60f PUSH1 0xa0
0x611 PUSH1 0x2
0x613 EXP
0x614 SUB
0x615 AND
0x616 DUP2
0x617 MSTORE
0x618 PUSH1 0x20
0x61a ADD
0x61b SWAP2
0x61c POP
0x61d POP
0x61e PUSH1 0x0
0x620 PUSH1 0x40
0x622 MLOAD
0x623 DUP1
0x624 DUP4
0x625 SUB
0x626 DUP2
0x627 DUP6
0x628 DUP9
0x629 DUP1
0x62a EXTCODESIZE
0x62b ISZERO
0x62c DUP1
0x62d ISZERO
0x62e PUSH2 0x636
0x631 JUMPI
---
0x5dd: V553 = 0x1
0x5df: V554 = 0xa0
0x5e1: V555 = 0x2
0x5e3: V556 = EXP 0x2 0xa0
0x5e4: V557 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e5: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x5e6: V559 = 0xd018db3e
0x5eb: V560 = CALLVALUE
0x5ed: V561 = 0x40
0x5ef: V562 = M[0x40]
0x5f1: V563 = 0xffffffff
0x5f6: V564 = AND 0xffffffff 0xd018db3e
0x5f7: V565 = 0xe0
0x5f9: V566 = 0x2
0x5fb: V567 = EXP 0x2 0xe0
0x5fc: V568 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd018db3e
0x5fe: M[V562] = 0xd018db3e00000000000000000000000000000000000000000000000000000000
0x5ff: V569 = 0x4
0x601: V570 = ADD 0x4 V562
0x604: V571 = 0x1
0x606: V572 = 0xa0
0x608: V573 = 0x2
0x60a: V574 = EXP 0x2 0xa0
0x60b: V575 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60c: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x60d: V577 = 0x1
0x60f: V578 = 0xa0
0x611: V579 = 0x2
0x613: V580 = EXP 0x2 0xa0
0x614: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x615: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V576
0x617: M[V570] = V582
0x618: V583 = 0x20
0x61a: V584 = ADD 0x20 V570
0x61e: V585 = 0x0
0x620: V586 = 0x40
0x622: V587 = M[0x40]
0x625: V588 = SUB V584 V587
0x62a: V589 = EXTCODESIZE V558
0x62b: V590 = ISZERO V589
0x62d: V591 = ISZERO V590
0x62e: V592 = 0x636
0x631: JUMPI 0x636 V591
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S1, V503]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V558, 0xd018db3e, V560, V584, 0x0, V587, V588, V587, V560, V558, V590]
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S1, V503, V558, 0xd018db3e, V560, V584, 0x0, V587, V588, V587, V560, V558, V590]

================================

Block 0x632
[0x632:0x635]
---
Predecessors: [0x5dc]
Successors: []
---
0x632 PUSH1 0x0
0x634 DUP1
0x635 REVERT
---
0x632: V593 = 0x0
0x635: REVERT 0x0 0x0
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S12, V503, V558, 0xd018db3e, V560, V584, 0x0, V587, V588, V587, V560, V558, V590]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S12, V503, V558, 0xd018db3e, V560, V584, 0x0, V587, V588, V587, V560, V558, V590]

================================

Block 0x636
[0x636:0x640]
---
Predecessors: [0x5dc]
Successors: [0x641, 0x64a]
---
0x636 JUMPDEST
0x637 POP
0x638 GAS
0x639 CALL
0x63a ISZERO
0x63b DUP1
0x63c ISZERO
0x63d PUSH2 0x64a
0x640 JUMPI
---
0x636: JUMPDEST 
0x638: V594 = GAS
0x639: V595 = CALL V594 V558 V560 V587 V588 V587 0x0
0x63a: V596 = ISZERO V595
0x63c: V597 = ISZERO V596
0x63d: V598 = 0x64a
0x640: JUMPI 0x64a V597
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S12, V503, V558, 0xd018db3e, V560, V584, 0x0, V587, V588, V587, V560, V558, V590]
Stack pops: 7
Stack additions: [V596]
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S12, V503, V558, 0xd018db3e, V560, V584, V596]

================================

Block 0x641
[0x641:0x649]
---
Predecessors: [0x636]
Successors: []
---
0x641 RETURNDATASIZE
0x642 PUSH1 0x0
0x644 DUP1
0x645 RETURNDATACOPY
0x646 RETURNDATASIZE
0x647 PUSH1 0x0
0x649 REVERT
---
0x641: V599 = RETURNDATASIZE
0x642: V600 = 0x0
0x645: RETURNDATACOPY 0x0 0x0 V599
0x646: V601 = RETURNDATASIZE
0x647: V602 = 0x0
0x649: REVERT 0x0 V601
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S6, V503, V558, 0xd018db3e, V560, V584, V596]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S6, V503, V558, 0xd018db3e, V560, V584, V596]

================================

Block 0x64a
[0x64a:0x657]
---
Predecessors: [0x636]
Successors: [0x696]
---
0x64a JUMPDEST
0x64b POP
0x64c POP
0x64d POP
0x64e POP
0x64f POP
0x650 PUSH1 0x1
0x652 SWAP5
0x653 POP
0x654 PUSH2 0x696
0x657 JUMP
---
0x64a: JUMPDEST 
0x650: V603 = 0x1
0x654: V604 = 0x696
0x657: JUMP 0x696
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S6, V503, V558, 0xd018db3e, V560, V584, V596]
Stack pops: 10
Stack additions: [0x1, S8, S7, S6, S5]
Exit stack: [V13, 0xdf, V126, 0x1, V126, V477, S6, V503]

================================

Block 0x658
[0x658:0x662]
---
Predecessors: [0x5d4]
Successors: [0x529]
---
0x658 JUMPDEST
0x659 PUSH1 0x1
0x65b SWAP1
0x65c SWAP2
0x65d ADD
0x65e SWAP1
0x65f PUSH2 0x529
0x662 JUMP
---
0x658: JUMPDEST 
0x659: V605 = 0x1
0x65d: V606 = ADD S1 0x1
0x65f: V607 = 0x529
0x662: JUMP 0x529
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S1, V503]
Stack pops: 2
Stack additions: [V606, S0]
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, V606, V503]

================================

Block 0x663
[0x663:0x686]
---
Predecessors: [0x529]
Successors: [0x687, 0x690]
---
0x663 JUMPDEST
0x664 PUSH1 0x40
0x666 MLOAD
0x667 CALLER
0x668 SWAP1
0x669 ADDRESS
0x66a BALANCE
0x66b DUP1
0x66c ISZERO
0x66d PUSH2 0x8fc
0x670 MUL
0x671 SWAP2
0x672 PUSH1 0x0
0x674 DUP2
0x675 DUP2
0x676 DUP2
0x677 DUP6
0x678 DUP9
0x679 DUP9
0x67a CALL
0x67b SWAP4
0x67c POP
0x67d POP
0x67e POP
0x67f POP
0x680 ISZERO
0x681 DUP1
0x682 ISZERO
0x683 PUSH2 0x690
0x686 JUMPI
---
0x663: JUMPDEST 
0x664: V608 = 0x40
0x666: V609 = M[0x40]
0x667: V610 = CALLER
0x669: V611 = ADDRESS
0x66a: V612 = BALANCE V611
0x66c: V613 = ISZERO V612
0x66d: V614 = 0x8fc
0x670: V615 = MUL 0x8fc V613
0x672: V616 = 0x0
0x67a: V617 = CALL V615 V610 V612 V609 0x0 V609 0x0
0x680: V618 = ISZERO V617
0x682: V619 = ISZERO V618
0x683: V620 = 0x690
0x686: JUMPI 0x690 V619
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S1, S0]
Stack pops: 0
Stack additions: [V618]
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S1, S0, V618]

================================

Block 0x687
[0x687:0x68f]
---
Predecessors: [0x663]
Successors: []
---
0x687 RETURNDATASIZE
0x688 PUSH1 0x0
0x68a DUP1
0x68b RETURNDATACOPY
0x68c RETURNDATASIZE
0x68d PUSH1 0x0
0x68f REVERT
---
0x687: V621 = RETURNDATASIZE
0x688: V622 = 0x0
0x68b: RETURNDATACOPY 0x0 0x0 V621
0x68c: V623 = RETURNDATASIZE
0x68d: V624 = 0x0
0x68f: REVERT 0x0 V623
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S2, S1, V618]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S2, S1, V618]

================================

Block 0x690
[0x690:0x695]
---
Predecessors: [0x663]
Successors: [0x696]
---
0x690 JUMPDEST
0x691 POP
0x692 PUSH1 0x0
0x694 SWAP5
0x695 POP
---
0x690: JUMPDEST 
0x692: V625 = 0x0
---
Entry stack: [V13, 0xdf, V126, 0x0, V126, V477, S2, S1, V618]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1]
Exit stack: [V13, 0xdf, V126, 0x0, V126, V477, S2, S1]

================================

Block 0x696
[0x696:0x69e]
---
Predecessors: [0x64a, 0x690]
Successors: [0xdf]
---
0x696 JUMPDEST
0x697 POP
0x698 POP
0x699 POP
0x69a POP
0x69b SWAP2
0x69c SWAP1
0x69d POP
0x69e JUMP
---
0x696: JUMPDEST 
0x69e: JUMP 0xdf
---
Entry stack: [V13, 0xdf, V126, {0x0, 0x1}, V126, V477, S1, S0]
Stack pops: 7
Stack additions: [S4]
Exit stack: [V13, {0x0, 0x1}]

================================

Block 0x69f
[0x69f:0x6ae]
---
Predecessors: [0x24d]
Successors: [0x256]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x40
0x6a2 MLOAD
0x6a3 PUSH2 0x39b
0x6a6 DUP1
0x6a7 PUSH2 0x6b0
0x6aa DUP4
0x6ab CODECOPY
0x6ac ADD
0x6ad SWAP1
0x6ae JUMP
---
0x69f: JUMPDEST 
0x6a0: V626 = 0x40
0x6a2: V627 = M[0x40]
0x6a3: V628 = 0x39b
0x6a7: V629 = 0x6b0
0x6ab: CODECOPY V627 0x6b0 0x39b
0x6ac: V630 = ADD 0x39b V627
0x6ae: JUMP 0x256
---
Entry stack: [V13, 0x83, V48, S2, 0x0, 0x256]
Stack pops: 1
Stack additions: [V630]
Exit stack: [V13, 0x83, V48, S2, 0x0, V630]

================================

Block 0x6af
[0x6af:0x6c0]
---
Predecessors: []
Successors: [0x6c1]
---
0x6af STOP
0x6b0 PUSH1 0x80
0x6b2 PUSH1 0x40
0x6b4 MSTORE
0x6b5 PUSH1 0x1
0x6b7 PUSH1 0x0
0x6b9 SSTORE
0x6ba CALLVALUE
0x6bb DUP1
0x6bc ISZERO
0x6bd PUSH2 0x15
0x6c0 JUMPI
---
0x6af: STOP 
0x6b0: V631 = 0x80
0x6b2: V632 = 0x40
0x6b4: M[0x40] = 0x80
0x6b5: V633 = 0x1
0x6b7: V634 = 0x0
0x6b9: S[0x0] = 0x1
0x6ba: V635 = CALLVALUE
0x6bc: V636 = ISZERO V635
0x6bd: V637 = 0x15
0x6c0: THROWI V636
---
Entry stack: []
Stack pops: 0
Stack additions: [V635]
Exit stack: []

================================

Block 0x6c1
[0x6c1:0x6e1]
---
Predecessors: [0x6af]
Successors: [0x6e2]
---
0x6c1 PUSH1 0x0
0x6c3 DUP1
0x6c4 REVERT
0x6c5 JUMPDEST
0x6c6 POP
0x6c7 PUSH2 0x376
0x6ca DUP1
0x6cb PUSH2 0x25
0x6ce PUSH1 0x0
0x6d0 CODECOPY
0x6d1 PUSH1 0x0
0x6d3 RETURN
0x6d4 STOP
0x6d5 PUSH1 0x80
0x6d7 PUSH1 0x40
0x6d9 MSTORE
0x6da PUSH1 0x4
0x6dc CALLDATASIZE
0x6dd LT
0x6de PUSH2 0x56
0x6e1 JUMPI
---
0x6c1: V638 = 0x0
0x6c4: REVERT 0x0 0x0
0x6c5: JUMPDEST 
0x6c7: V639 = 0x376
0x6cb: V640 = 0x25
0x6ce: V641 = 0x0
0x6d0: CODECOPY 0x0 0x25 0x376
0x6d1: V642 = 0x0
0x6d3: RETURN 0x0 0x376
0x6d4: STOP 
0x6d5: V643 = 0x80
0x6d7: V644 = 0x40
0x6d9: M[0x40] = 0x80
0x6da: V645 = 0x4
0x6dc: V646 = CALLDATASIZE
0x6dd: V647 = LT V646 0x4
0x6de: V648 = 0x56
0x6e1: THROWI V647
---
Entry stack: [V635]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6e2
[0x6e2:0x714]
---
Predecessors: [0x6c1]
Successors: [0x715]
---
0x6e2 PUSH4 0xffffffff
0x6e7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x705 PUSH1 0x0
0x707 CALLDATALOAD
0x708 DIV
0x709 AND
0x70a PUSH4 0x5f72f450
0x70f DUP2
0x710 EQ
0x711 PUSH2 0x5b
0x714 JUMPI
---
0x6e2: V649 = 0xffffffff
0x6e7: V650 = 0x100000000000000000000000000000000000000000000000000000000
0x705: V651 = 0x0
0x707: V652 = CALLDATALOAD 0x0
0x708: V653 = DIV V652 0x100000000000000000000000000000000000000000000000000000000
0x709: V654 = AND V653 0xffffffff
0x70a: V655 = 0x5f72f450
0x710: V656 = EQ V654 0x5f72f450
0x711: V657 = 0x5b
0x714: THROWI V656
---
Entry stack: []
Stack pops: 0
Stack additions: [V654]
Exit stack: [V654]

================================

Block 0x715
[0x715:0x71f]
---
Predecessors: [0x6e2]
Successors: [0x720]
---
0x715 DUP1
0x716 PUSH4 0xd018db3e
0x71b EQ
0x71c PUSH2 0x87
0x71f JUMPI
---
0x716: V658 = 0xd018db3e
0x71b: V659 = EQ 0xd018db3e V654
0x71c: V660 = 0x87
0x71f: THROWI V659
---
Entry stack: [V654]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V654]

================================

Block 0x720
[0x720:0x72a]
---
Predecessors: [0x715]
Successors: [0x72b]
---
0x720 DUP1
0x721 PUSH4 0xd8d38586
0x726 EQ
0x727 PUSH2 0xaa
0x72a JUMPI
---
0x721: V661 = 0xd8d38586
0x726: V662 = EQ 0xd8d38586 V654
0x727: V663 = 0xaa
0x72a: THROWI V662
---
Entry stack: [V654]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V654]

================================

Block 0x72b
[0x72b:0x737]
---
Predecessors: [0x720]
Successors: [0x738]
---
0x72b JUMPDEST
0x72c PUSH1 0x0
0x72e DUP1
0x72f REVERT
0x730 JUMPDEST
0x731 CALLVALUE
0x732 DUP1
0x733 ISZERO
0x734 PUSH2 0x67
0x737 JUMPI
---
0x72b: JUMPDEST 
0x72c: V664 = 0x0
0x72f: REVERT 0x0 0x0
0x730: JUMPDEST 
0x731: V665 = CALLVALUE
0x733: V666 = ISZERO V665
0x734: V667 = 0x67
0x737: THROWI V666
---
Entry stack: [V654]
Stack pops: 0
Stack additions: [V665]
Exit stack: []

================================

Block 0x738
[0x738:0x786]
---
Predecessors: [0x72b]
Successors: [0x787]
---
0x738 PUSH1 0x0
0x73a DUP1
0x73b REVERT
0x73c JUMPDEST
0x73d POP
0x73e PUSH2 0x73
0x741 PUSH1 0x4
0x743 CALLDATALOAD
0x744 PUSH2 0xd1
0x747 JUMP
0x748 JUMPDEST
0x749 PUSH1 0x40
0x74b DUP1
0x74c MLOAD
0x74d SWAP2
0x74e ISZERO
0x74f ISZERO
0x750 DUP3
0x751 MSTORE
0x752 MLOAD
0x753 SWAP1
0x754 DUP2
0x755 SWAP1
0x756 SUB
0x757 PUSH1 0x20
0x759 ADD
0x75a SWAP1
0x75b RETURN
0x75c JUMPDEST
0x75d PUSH2 0xa8
0x760 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x775 PUSH1 0x4
0x777 CALLDATALOAD
0x778 AND
0x779 PUSH2 0x233
0x77c JUMP
0x77d JUMPDEST
0x77e STOP
0x77f JUMPDEST
0x780 CALLVALUE
0x781 DUP1
0x782 ISZERO
0x783 PUSH2 0xb6
0x786 JUMPI
---
0x738: V668 = 0x0
0x73b: REVERT 0x0 0x0
0x73c: JUMPDEST 
0x73e: V669 = 0x73
0x741: V670 = 0x4
0x743: V671 = CALLDATALOAD 0x4
0x744: V672 = 0xd1
0x747: THROW 
0x748: JUMPDEST 
0x749: V673 = 0x40
0x74c: V674 = M[0x40]
0x74e: V675 = ISZERO S0
0x74f: V676 = ISZERO V675
0x751: M[V674] = V676
0x752: V677 = M[0x40]
0x756: V678 = SUB V674 V677
0x757: V679 = 0x20
0x759: V680 = ADD 0x20 V678
0x75b: RETURN V677 V680
0x75c: JUMPDEST 
0x75d: V681 = 0xa8
0x760: V682 = 0xffffffffffffffffffffffffffffffffffffffff
0x775: V683 = 0x4
0x777: V684 = CALLDATALOAD 0x4
0x778: V685 = AND V684 0xffffffffffffffffffffffffffffffffffffffff
0x779: V686 = 0x233
0x77c: THROW 
0x77d: JUMPDEST 
0x77e: STOP 
0x77f: JUMPDEST 
0x780: V687 = CALLVALUE
0x782: V688 = ISZERO V687
0x783: V689 = 0xb6
0x786: THROWI V688
---
Entry stack: [V665]
Stack pops: 0
Stack additions: [V671, 0x73, V685, 0xa8, V687]
Exit stack: []

================================

Block 0x787
[0x787:0x819]
---
Predecessors: [0x738]
Successors: [0x81a]
---
0x787 PUSH1 0x0
0x789 DUP1
0x78a REVERT
0x78b JUMPDEST
0x78c POP
0x78d PUSH2 0xbf
0x790 PUSH2 0x285
0x793 JUMP
0x794 JUMPDEST
0x795 PUSH1 0x40
0x797 DUP1
0x798 MLOAD
0x799 SWAP2
0x79a DUP3
0x79b MSTORE
0x79c MLOAD
0x79d SWAP1
0x79e DUP2
0x79f SWAP1
0x7a0 SUB
0x7a1 PUSH1 0x20
0x7a3 ADD
0x7a4 SWAP1
0x7a5 RETURN
0x7a6 JUMPDEST
0x7a7 PUSH1 0x0
0x7a9 DUP1
0x7aa SLOAD
0x7ab PUSH1 0x40
0x7ad DUP1
0x7ae MLOAD
0x7af PUSH32 0x994e550400000000000000000000000000000000000000000000000000000000
0x7d0 DUP2
0x7d1 MSTORE
0x7d2 ADDRESS
0x7d3 PUSH1 0x4
0x7d5 DUP3
0x7d6 ADD
0x7d7 MSTORE
0x7d8 PUSH1 0x24
0x7da DUP2
0x7db ADD
0x7dc SWAP3
0x7dd SWAP1
0x7de SWAP3
0x7df MSTORE
0x7e0 MLOAD
0x7e1 DUP3
0x7e2 SWAP2
0x7e3 PUSH20 0x9f6ff55f350b5350eac0d497f5fbc9b8c4eac020
0x7f8 SWAP2
0x7f9 PUSH4 0x994e5504
0x7fe SWAP2
0x7ff PUSH1 0x44
0x801 DUP1
0x802 DUP3
0x803 ADD
0x804 SWAP3
0x805 PUSH1 0x20
0x807 SWAP3
0x808 SWAP1
0x809 SWAP2
0x80a SWAP1
0x80b DUP3
0x80c SWAP1
0x80d SUB
0x80e ADD
0x80f DUP2
0x810 DUP7
0x811 DUP1
0x812 EXTCODESIZE
0x813 ISZERO
0x814 DUP1
0x815 ISZERO
0x816 PUSH2 0x149
0x819 JUMPI
---
0x787: V690 = 0x0
0x78a: REVERT 0x0 0x0
0x78b: JUMPDEST 
0x78d: V691 = 0xbf
0x790: V692 = 0x285
0x793: THROW 
0x794: JUMPDEST 
0x795: V693 = 0x40
0x798: V694 = M[0x40]
0x79b: M[V694] = S0
0x79c: V695 = M[0x40]
0x7a0: V696 = SUB V694 V695
0x7a1: V697 = 0x20
0x7a3: V698 = ADD 0x20 V696
0x7a5: RETURN V695 V698
0x7a6: JUMPDEST 
0x7a7: V699 = 0x0
0x7aa: V700 = S[0x0]
0x7ab: V701 = 0x40
0x7ae: V702 = M[0x40]
0x7af: V703 = 0x994e550400000000000000000000000000000000000000000000000000000000
0x7d1: M[V702] = 0x994e550400000000000000000000000000000000000000000000000000000000
0x7d2: V704 = ADDRESS
0x7d3: V705 = 0x4
0x7d6: V706 = ADD V702 0x4
0x7d7: M[V706] = V704
0x7d8: V707 = 0x24
0x7db: V708 = ADD V702 0x24
0x7df: M[V708] = V700
0x7e0: V709 = M[0x40]
0x7e3: V710 = 0x9f6ff55f350b5350eac0d497f5fbc9b8c4eac020
0x7f9: V711 = 0x994e5504
0x7ff: V712 = 0x44
0x803: V713 = ADD V702 0x44
0x805: V714 = 0x20
0x80d: V715 = SUB V702 V709
0x80e: V716 = ADD V715 0x44
0x812: V717 = EXTCODESIZE 0x9f6ff55f350b5350eac0d497f5fbc9b8c4eac020
0x813: V718 = ISZERO V717
0x815: V719 = ISZERO V718
0x816: V720 = 0x149
0x819: THROWI V719
---
Entry stack: [V687]
Stack pops: 0
Stack additions: [0xbf, V718, 0x9f6ff55f350b5350eac0d497f5fbc9b8c4eac020, V709, V716, V709, 0x20, V713, 0x994e5504, 0x9f6ff55f350b5350eac0d497f5fbc9b8c4eac020, 0x0, 0x0]
Exit stack: []

================================

Block 0x81a
[0x81a:0x828]
---
Predecessors: [0x787]
Successors: [0x829]
---
0x81a PUSH1 0x0
0x81c DUP1
0x81d REVERT
0x81e JUMPDEST
0x81f POP
0x820 GAS
0x821 DELEGATECALL
0x822 ISZERO
0x823 DUP1
0x824 ISZERO
0x825 PUSH2 0x15d
0x828 JUMPI
---
0x81a: V721 = 0x0
0x81d: REVERT 0x0 0x0
0x81e: JUMPDEST 
0x820: V722 = GAS
0x821: V723 = DELEGATECALL V722 S1 S2 S3 S4 S5
0x822: V724 = ISZERO V723
0x824: V725 = ISZERO V724
0x825: V726 = 0x15d
0x828: THROWI V725
---
Entry stack: [0x0, 0x0, 0x9f6ff55f350b5350eac0d497f5fbc9b8c4eac020, 0x994e5504, V713, 0x20, V709, V716, V709, 0x9f6ff55f350b5350eac0d497f5fbc9b8c4eac020, V718]
Stack pops: 0
Stack additions: [V724]
Exit stack: []

================================

Block 0x829
[0x829:0x843]
---
Predecessors: [0x81a]
Successors: [0x844]
---
0x829 RETURNDATASIZE
0x82a PUSH1 0x0
0x82c DUP1
0x82d RETURNDATACOPY
0x82e RETURNDATASIZE
0x82f PUSH1 0x0
0x831 REVERT
0x832 JUMPDEST
0x833 POP
0x834 POP
0x835 POP
0x836 POP
0x837 PUSH1 0x40
0x839 MLOAD
0x83a RETURNDATASIZE
0x83b PUSH1 0x20
0x83d DUP2
0x83e LT
0x83f ISZERO
0x840 PUSH2 0x173
0x843 JUMPI
---
0x829: V727 = RETURNDATASIZE
0x82a: V728 = 0x0
0x82d: RETURNDATACOPY 0x0 0x0 V727
0x82e: V729 = RETURNDATASIZE
0x82f: V730 = 0x0
0x831: REVERT 0x0 V729
0x832: JUMPDEST 
0x837: V731 = 0x40
0x839: V732 = M[0x40]
0x83a: V733 = RETURNDATASIZE
0x83b: V734 = 0x20
0x83e: V735 = LT V733 0x20
0x83f: V736 = ISZERO V735
0x840: V737 = 0x173
0x843: THROWI V736
---
Entry stack: [V724]
Stack pops: 0
Stack additions: [V733, V732]
Exit stack: []

================================

Block 0x844
[0x844:0x8d0]
---
Predecessors: [0x829]
Successors: [0x8d1]
---
0x844 PUSH1 0x0
0x846 DUP1
0x847 REVERT
0x848 JUMPDEST
0x849 POP
0x84a MLOAD
0x84b PUSH1 0x40
0x84d DUP1
0x84e MLOAD
0x84f PUSH32 0x8ba4cc3c00000000000000000000000000000000000000000000000000000000
0x870 DUP2
0x871 MSTORE
0x872 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x887 DUP4
0x888 AND
0x889 PUSH1 0x4
0x88b DUP3
0x88c ADD
0x88d MSTORE
0x88e PUSH1 0x24
0x890 DUP2
0x891 ADD
0x892 DUP7
0x893 SWAP1
0x894 MSTORE
0x895 SWAP1
0x896 MLOAD
0x897 SWAP2
0x898 SWAP3
0x899 POP
0x89a PUSH20 0xc5cacc26692873b19fba41b6682899e268a145d0
0x8af SWAP2
0x8b0 PUSH4 0x8ba4cc3c
0x8b5 SWAP2
0x8b6 PUSH1 0x44
0x8b8 DUP1
0x8b9 DUP3
0x8ba ADD
0x8bb SWAP3
0x8bc PUSH1 0x20
0x8be SWAP3
0x8bf SWAP1
0x8c0 SWAP2
0x8c1 SWAP1
0x8c2 DUP3
0x8c3 SWAP1
0x8c4 SUB
0x8c5 ADD
0x8c6 DUP2
0x8c7 DUP7
0x8c8 DUP1
0x8c9 EXTCODESIZE
0x8ca ISZERO
0x8cb DUP1
0x8cc ISZERO
0x8cd PUSH2 0x200
0x8d0 JUMPI
---
0x844: V738 = 0x0
0x847: REVERT 0x0 0x0
0x848: JUMPDEST 
0x84a: V739 = M[S1]
0x84b: V740 = 0x40
0x84e: V741 = M[0x40]
0x84f: V742 = 0x8ba4cc3c00000000000000000000000000000000000000000000000000000000
0x871: M[V741] = 0x8ba4cc3c00000000000000000000000000000000000000000000000000000000
0x872: V743 = 0xffffffffffffffffffffffffffffffffffffffff
0x888: V744 = AND V739 0xffffffffffffffffffffffffffffffffffffffff
0x889: V745 = 0x4
0x88c: V746 = ADD V741 0x4
0x88d: M[V746] = V744
0x88e: V747 = 0x24
0x891: V748 = ADD V741 0x24
0x894: M[V748] = S4
0x896: V749 = M[0x40]
0x89a: V750 = 0xc5cacc26692873b19fba41b6682899e268a145d0
0x8b0: V751 = 0x8ba4cc3c
0x8b6: V752 = 0x44
0x8ba: V753 = ADD V741 0x44
0x8bc: V754 = 0x20
0x8c4: V755 = SUB V741 V749
0x8c5: V756 = ADD V755 0x44
0x8c9: V757 = EXTCODESIZE 0xc5cacc26692873b19fba41b6682899e268a145d0
0x8ca: V758 = ISZERO V757
0x8cc: V759 = ISZERO V758
0x8cd: V760 = 0x200
0x8d0: THROWI V759
---
Entry stack: [V732, V733]
Stack pops: 0
Stack additions: [V758, 0xc5cacc26692873b19fba41b6682899e268a145d0, V749, V756, V749, 0x20, V753, 0x8ba4cc3c, 0xc5cacc26692873b19fba41b6682899e268a145d0, V739, S3, S4]
Exit stack: []

================================

Block 0x8d1
[0x8d1:0x8df]
---
Predecessors: [0x844]
Successors: [0x8e0]
---
0x8d1 PUSH1 0x0
0x8d3 DUP1
0x8d4 REVERT
0x8d5 JUMPDEST
0x8d6 POP
0x8d7 GAS
0x8d8 DELEGATECALL
0x8d9 ISZERO
0x8da DUP1
0x8db ISZERO
0x8dc PUSH2 0x214
0x8df JUMPI
---
0x8d1: V761 = 0x0
0x8d4: REVERT 0x0 0x0
0x8d5: JUMPDEST 
0x8d7: V762 = GAS
0x8d8: V763 = DELEGATECALL V762 S1 S2 S3 S4 S5
0x8d9: V764 = ISZERO V763
0x8db: V765 = ISZERO V764
0x8dc: V766 = 0x214
0x8df: THROWI V765
---
Entry stack: [S11, S10, V739, 0xc5cacc26692873b19fba41b6682899e268a145d0, 0x8ba4cc3c, V753, 0x20, V749, V756, V749, 0xc5cacc26692873b19fba41b6682899e268a145d0, V758]
Stack pops: 0
Stack additions: [V764]
Exit stack: []

================================

Block 0x8e0
[0x8e0:0x8fa]
---
Predecessors: [0x8d1]
Successors: [0x8fb]
---
0x8e0 RETURNDATASIZE
0x8e1 PUSH1 0x0
0x8e3 DUP1
0x8e4 RETURNDATACOPY
0x8e5 RETURNDATASIZE
0x8e6 PUSH1 0x0
0x8e8 REVERT
0x8e9 JUMPDEST
0x8ea POP
0x8eb POP
0x8ec POP
0x8ed POP
0x8ee PUSH1 0x40
0x8f0 MLOAD
0x8f1 RETURNDATASIZE
0x8f2 PUSH1 0x20
0x8f4 DUP2
0x8f5 LT
0x8f6 ISZERO
0x8f7 PUSH2 0x22a
0x8fa JUMPI
---
0x8e0: V767 = RETURNDATASIZE
0x8e1: V768 = 0x0
0x8e4: RETURNDATACOPY 0x0 0x0 V767
0x8e5: V769 = RETURNDATASIZE
0x8e6: V770 = 0x0
0x8e8: REVERT 0x0 V769
0x8e9: JUMPDEST 
0x8ee: V771 = 0x40
0x8f0: V772 = M[0x40]
0x8f1: V773 = RETURNDATASIZE
0x8f2: V774 = 0x20
0x8f5: V775 = LT V773 0x20
0x8f6: V776 = ISZERO V775
0x8f7: V777 = 0x22a
0x8fa: THROWI V776
---
Entry stack: [V764]
Stack pops: 0
Stack additions: [V773, V772]
Exit stack: []

================================

Block 0x8fb
[0x8fb:0x941]
---
Predecessors: [0x8e0]
Successors: [0x942]
---
0x8fb PUSH1 0x0
0x8fd DUP1
0x8fe REVERT
0x8ff JUMPDEST
0x900 POP
0x901 MLOAD
0x902 SWAP4
0x903 SWAP3
0x904 POP
0x905 POP
0x906 POP
0x907 JUMP
0x908 JUMPDEST
0x909 CALLVALUE
0x90a DUP2
0x90b PUSH2 0x23d
0x90e PUSH2 0x28b
0x911 JUMP
0x912 JUMPDEST
0x913 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x928 SWAP1
0x929 SWAP2
0x92a AND
0x92b DUP2
0x92c MSTORE
0x92d PUSH1 0x40
0x92f MLOAD
0x930 SWAP1
0x931 DUP2
0x932 SWAP1
0x933 SUB
0x934 PUSH1 0x20
0x936 ADD
0x937 SWAP1
0x938 DUP3
0x939 CREATE
0x93a DUP1
0x93b ISZERO
0x93c DUP1
0x93d ISZERO
0x93e PUSH2 0x276
0x941 JUMPI
---
0x8fb: V778 = 0x0
0x8fe: REVERT 0x0 0x0
0x8ff: JUMPDEST 
0x901: V779 = M[S1]
0x907: JUMP S5
0x908: JUMPDEST 
0x909: V780 = CALLVALUE
0x90b: V781 = 0x23d
0x90e: V782 = 0x28b
0x911: THROW 
0x912: JUMPDEST 
0x913: V783 = 0xffffffffffffffffffffffffffffffffffffffff
0x92a: V784 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x92c: M[S0] = V784
0x92d: V785 = 0x40
0x92f: V786 = M[0x40]
0x933: V787 = SUB S0 V786
0x934: V788 = 0x20
0x936: V789 = ADD 0x20 V787
0x939: V790 = CREATE S2 V786 V789
0x93b: V791 = ISZERO V790
0x93d: V792 = ISZERO V791
0x93e: V793 = 0x276
0x941: THROWI V792
---
Entry stack: [V772, V773]
Stack pops: 0
Stack additions: [V779, 0x23d, S0, V780, S0, V791, V790, S2]
Exit stack: []

================================

Block 0x942
[0x942:0x9a9]
---
Predecessors: [0x8fb]
Successors: [0x9aa]
---
0x942 RETURNDATASIZE
0x943 PUSH1 0x0
0x945 DUP1
0x946 RETURNDATACOPY
0x947 RETURNDATASIZE
0x948 PUSH1 0x0
0x94a REVERT
0x94b JUMPDEST
0x94c POP
0x94d POP
0x94e PUSH1 0x0
0x950 DUP1
0x951 SLOAD
0x952 PUSH1 0x1
0x954 ADD
0x955 SWAP1
0x956 SSTORE
0x957 POP
0x958 POP
0x959 JUMP
0x95a JUMPDEST
0x95b PUSH1 0x0
0x95d SLOAD
0x95e DUP2
0x95f JUMP
0x960 JUMPDEST
0x961 PUSH1 0x40
0x963 MLOAD
0x964 PUSH1 0xb0
0x966 DUP1
0x967 PUSH2 0x29b
0x96a DUP4
0x96b CODECOPY
0x96c ADD
0x96d SWAP1
0x96e JUMP
0x96f STOP
0x970 PUSH1 0x80
0x972 PUSH1 0x40
0x974 MSTORE
0x975 PUSH1 0x40
0x977 MLOAD
0x978 PUSH1 0x20
0x97a DUP1
0x97b PUSH1 0xb0
0x97d DUP4
0x97e CODECOPY
0x97f DUP2
0x980 ADD
0x981 PUSH1 0x40
0x983 DUP2
0x984 SWAP1
0x985 MSTORE
0x986 SWAP1
0x987 MLOAD
0x988 SWAP1
0x989 DUP2
0x98a SWAP1
0x98b PUSH1 0x1
0x98d PUSH1 0xa0
0x98f PUSH1 0x2
0x991 EXP
0x992 SUB
0x993 DUP3
0x994 AND
0x995 SWAP1
0x996 CALLVALUE
0x997 SWAP1
0x998 PUSH1 0x0
0x99a DUP2
0x99b DUP2
0x99c DUP2
0x99d DUP6
0x99e DUP8
0x99f GAS
0x9a0 CALL
0x9a1 SWAP3
0x9a2 POP
0x9a3 POP
0x9a4 POP
0x9a5 ISZERO
0x9a6 ISZERO
0x9a7 PUSH1 0x3e
0x9a9 JUMPI
---
0x942: V794 = RETURNDATASIZE
0x943: V795 = 0x0
0x946: RETURNDATACOPY 0x0 0x0 V794
0x947: V796 = RETURNDATASIZE
0x948: V797 = 0x0
0x94a: REVERT 0x0 V796
0x94b: JUMPDEST 
0x94e: V798 = 0x0
0x951: V799 = S[0x0]
0x952: V800 = 0x1
0x954: V801 = ADD 0x1 V799
0x956: S[0x0] = V801
0x959: JUMP S4
0x95a: JUMPDEST 
0x95b: V802 = 0x0
0x95d: V803 = S[0x0]
0x95f: JUMP S0
0x960: JUMPDEST 
0x961: V804 = 0x40
0x963: V805 = M[0x40]
0x964: V806 = 0xb0
0x967: V807 = 0x29b
0x96b: CODECOPY V805 0x29b 0xb0
0x96c: V808 = ADD 0xb0 V805
0x96e: JUMP S0
0x96f: STOP 
0x970: V809 = 0x80
0x972: V810 = 0x40
0x974: M[0x40] = 0x80
0x975: V811 = 0x40
0x977: V812 = M[0x40]
0x978: V813 = 0x20
0x97b: V814 = 0xb0
0x97e: CODECOPY V812 0xb0 0x20
0x980: V815 = ADD V812 0x20
0x981: V816 = 0x40
0x985: M[0x40] = V815
0x987: V817 = M[V812]
0x98b: V818 = 0x1
0x98d: V819 = 0xa0
0x98f: V820 = 0x2
0x991: V821 = EXP 0x2 0xa0
0x992: V822 = SUB 0x10000000000000000000000000000000000000000 0x1
0x994: V823 = AND V817 0xffffffffffffffffffffffffffffffffffffffff
0x996: V824 = CALLVALUE
0x998: V825 = 0x0
0x99f: V826 = GAS
0x9a0: V827 = CALL V826 V823 V824 V815 0x0 V815 0x0
0x9a5: V828 = ISZERO V827
0x9a6: V829 = ISZERO V828
0x9a7: V830 = 0x3e
0x9a9: THROWI V829
---
Entry stack: [S2, V790, V791]
Stack pops: 0
Stack additions: [V803, S0, V808, V817, V817]
Exit stack: []

================================

Block 0x9aa
[0x9aa:0x9ff]
---
Predecessors: [0x942]
Successors: [0xa00]
---
0x9aa PUSH1 0x0
0x9ac DUP1
0x9ad REVERT
0x9ae JUMPDEST
0x9af DUP1
0x9b0 PUSH1 0x1
0x9b2 PUSH1 0xa0
0x9b4 PUSH1 0x2
0x9b6 EXP
0x9b7 SUB
0x9b8 AND
0x9b9 PUSH4 0x3ccfd60b
0x9be PUSH1 0x40
0x9c0 MLOAD
0x9c1 DUP2
0x9c2 PUSH4 0xffffffff
0x9c7 AND
0x9c8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9e6 MUL
0x9e7 DUP2
0x9e8 MSTORE
0x9e9 PUSH1 0x4
0x9eb ADD
0x9ec PUSH1 0x0
0x9ee PUSH1 0x40
0x9f0 MLOAD
0x9f1 DUP1
0x9f2 DUP4
0x9f3 SUB
0x9f4 DUP2
0x9f5 PUSH1 0x0
0x9f7 DUP8
0x9f8 DUP1
0x9f9 EXTCODESIZE
0x9fa ISZERO
0x9fb DUP1
0x9fc ISZERO
0x9fd PUSH1 0x94
0x9ff JUMPI
---
0x9aa: V831 = 0x0
0x9ad: REVERT 0x0 0x0
0x9ae: JUMPDEST 
0x9b0: V832 = 0x1
0x9b2: V833 = 0xa0
0x9b4: V834 = 0x2
0x9b6: V835 = EXP 0x2 0xa0
0x9b7: V836 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b8: V837 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x9b9: V838 = 0x3ccfd60b
0x9be: V839 = 0x40
0x9c0: V840 = M[0x40]
0x9c2: V841 = 0xffffffff
0x9c7: V842 = AND 0xffffffff 0x3ccfd60b
0x9c8: V843 = 0x100000000000000000000000000000000000000000000000000000000
0x9e6: V844 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x9e8: M[V840] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x9e9: V845 = 0x4
0x9eb: V846 = ADD 0x4 V840
0x9ec: V847 = 0x0
0x9ee: V848 = 0x40
0x9f0: V849 = M[0x40]
0x9f3: V850 = SUB V846 V849
0x9f5: V851 = 0x0
0x9f9: V852 = EXTCODESIZE V837
0x9fa: V853 = ISZERO V852
0x9fc: V854 = ISZERO V853
0x9fd: V855 = 0x94
0x9ff: THROWI V854
---
Entry stack: [V817, V817]
Stack pops: 0
Stack additions: [V853, V837, 0x0, V849, V850, V849, 0x0, V846, 0x3ccfd60b, V837, S0]
Exit stack: []

================================

Block 0xa00
[0xa00:0xa0d]
---
Predecessors: [0x9aa]
Successors: [0xa0e]
---
0xa00 PUSH1 0x0
0xa02 DUP1
0xa03 REVERT
0xa04 JUMPDEST
0xa05 POP
0xa06 GAS
0xa07 CALL
0xa08 ISZERO
0xa09 DUP1
0xa0a ISZERO
0xa0b PUSH1 0xa7
0xa0d JUMPI
---
0xa00: V856 = 0x0
0xa03: REVERT 0x0 0x0
0xa04: JUMPDEST 
0xa06: V857 = GAS
0xa07: V858 = CALL V857 S1 S2 S3 S4 S5 S6
0xa08: V859 = ISZERO V858
0xa0a: V860 = ISZERO V859
0xa0b: V861 = 0xa7
0xa0d: THROWI V860
---
Entry stack: [S10, V837, 0x3ccfd60b, V846, 0x0, V849, V850, V849, 0x0, V837, V853]
Stack pops: 0
Stack additions: [V859]
Exit stack: []

================================

Block 0xa0e
[0xa0e:0xaa4]
---
Predecessors: [0xa00]
Successors: []
---
0xa0e RETURNDATASIZE
0xa0f PUSH1 0x0
0xa11 DUP1
0xa12 RETURNDATACOPY
0xa13 RETURNDATASIZE
0xa14 PUSH1 0x0
0xa16 REVERT
0xa17 JUMPDEST
0xa18 POP
0xa19 ORIGIN
0xa1a SWAP3
0xa1b POP
0xa1c POP
0xa1d POP
0xa1e SELFDESTRUCT
0xa1f STOP
0xa20 LOG1
0xa21 PUSH6 0x627a7a723058
0xa28 SHA3
0xa29 MISSING 0xc
0xa2a DIV
0xa2b MISSING 0xc
0xa2c MISSING 0xb7
0xa2d SWAP11
0xa2e BALANCE
0xa2f MISSING 0xac
0xa30 MISSING 0xf8
0xa31 EXTCODEHASH
0xa32 MISSING 0x2d
0xa33 MISSING 0xad
0xa34 MISSING 0x1e
0xa35 MISSING 0x2f
0xa36 CALL
0xa37 GASLIMIT
0xa38 MISSING 0xd8
0xa39 MISSING 0xd2
0xa3a DIFFICULTY
0xa3b MISSING 0xe3
0xa3c MISSING 0xc4
0xa3d EQ
0xa3e MISSING 0xf9
0xa3f MISSING 0xd0
0xa40 CALLVALUE
0xa41 MISSING 0xc0
0xa42 MISSING 0xd9
0xa43 PUSH15 0xfa6b44dad2002961646d696e73206f
0xa53 PUSH15 0x6c7900000000000000000000000000
0xa63 STOP
0xa64 STOP
0xa65 STOP
0xa66 STOP
0xa67 STOP
0xa68 STOP
0xa69 STOP
0xa6a STOP
0xa6b LOG1
0xa6c PUSH6 0x627a7a723058
0xa73 SHA3
0xa74 MISSING 0xc
0xa75 MISSING 0xbe
0xa76 MISSING 0xad
0xa77 MISSING 0xef
0xa78 MISSING 0xbe
0xa79 PUSH21 0x465684182109f9a06dc6dd70cefe76a892b2b4f1ac
0xa8f EXTCODECOPY
0xa90 CALLER
0xa91 MISSING 0x22
0xa92 MISSING 0xc0
0xa93 PUSH17 0x29
---
0xa0e: V862 = RETURNDATASIZE
0xa0f: V863 = 0x0
0xa12: RETURNDATACOPY 0x0 0x0 V862
0xa13: V864 = RETURNDATASIZE
0xa14: V865 = 0x0
0xa16: REVERT 0x0 V864
0xa17: JUMPDEST 
0xa19: V866 = ORIGIN
0xa1e: SELFDESTRUCT V866
0xa1f: STOP 
0xa20: LOG S0 S1 S2
0xa21: V867 = 0x627a7a723058
0xa28: V868 = SHA3 0x627a7a723058 S3
0xa29: MISSING 0xc
0xa2a: V869 = DIV S0 S1
0xa2b: MISSING 0xc
0xa2c: MISSING 0xb7
0xa2e: V870 = BALANCE S11
0xa2f: MISSING 0xac
0xa30: MISSING 0xf8
0xa31: V871 = EXTCODEHASH S0
0xa32: MISSING 0x2d
0xa33: MISSING 0xad
0xa34: MISSING 0x1e
0xa35: MISSING 0x2f
0xa36: V872 = CALL S0 S1 S2 S3 S4 S5 S6
0xa37: V873 = GASLIMIT
0xa38: MISSING 0xd8
0xa39: MISSING 0xd2
0xa3a: V874 = DIFFICULTY
0xa3b: MISSING 0xe3
0xa3c: MISSING 0xc4
0xa3d: V875 = EQ S0 S1
0xa3e: MISSING 0xf9
0xa3f: MISSING 0xd0
0xa40: V876 = CALLVALUE
0xa41: MISSING 0xc0
0xa42: MISSING 0xd9
0xa43: V877 = 0xfa6b44dad2002961646d696e73206f
0xa53: V878 = 0x6c7900000000000000000000000000
0xa63: STOP 
0xa64: STOP 
0xa65: STOP 
0xa66: STOP 
0xa67: STOP 
0xa68: STOP 
0xa69: STOP 
0xa6a: STOP 
0xa6b: LOG S0 S1 S2
0xa6c: V879 = 0x627a7a723058
0xa73: V880 = SHA3 0x627a7a723058 S3
0xa74: MISSING 0xc
0xa75: MISSING 0xbe
0xa76: MISSING 0xad
0xa77: MISSING 0xef
0xa78: MISSING 0xbe
0xa79: V881 = 0x465684182109f9a06dc6dd70cefe76a892b2b4f1ac
0xa8f: EXTCODECOPY 0x465684182109f9a06dc6dd70cefe76a892b2b4f1ac S0 S1 S2
0xa90: V882 = CALLER
0xa91: MISSING 0x22
0xa92: MISSING 0xc0
0xa93: V883 = 0x29
---
Entry stack: [V859]
Stack pops: 0
Stack additions: [V868, V869, V870, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V871, V873, V872, V874, V875, V876, 0x6c7900000000000000000000000000, 0xfa6b44dad2002961646d696e73206f, V880, V882, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x6e
Exit block: 0x83
Body: 0x6e, 0x76, 0x7a, 0x83, 0x162, 0x17c, 0x1b9, 0x1dd, 0x1e6

Function 1:
Public function signature: 0x3d8bf7d3
Entry block: 0x85
Exit block: 0x269
Body: 0x83, 0x85, 0x8d, 0x91, 0x1e9, 0x203, 0x240, 0x244, 0x24d, 0x256, 0x269, 0x272, 0x2b8, 0x69f

Function 2:
Public function signature: 0x70480275
Entry block: 0x9d
Exit block: 0x83
Body: 0x83, 0x9d, 0xa5, 0xa9, 0x2c4, 0x2de, 0x31b, 0x33d, 0x38c

Function 3:
Public function signature: 0x8c9d105d
Entry block: 0xbe
Exit block: 0xdf
Body: 0xbe, 0xc6, 0xca, 0xdf, 0x3b3

Function 4:
Public function signature: 0xabfdfa19
Entry block: 0xf3
Exit block: 0x108
Body: 0xf3, 0xfb, 0xff, 0x108, 0x3c8

Function 5:
Public function signature: 0xde4d82a4
Entry block: 0x11a
Exit block: 0x132
Body: 0x11a, 0x122, 0x126, 0x132, 0x3ce, 0x3db, 0x3dc

Function 6:
Public function signature: 0xe88c25e7
Entry block: 0x14e
Exit block: 0x641
Body: 0xdf, 0x14e, 0x3f6, 0x418, 0x455, 0x466, 0x4b5, 0x4f2, 0x4f6, 0x501, 0x50a, 0x51c, 0x520, 0x529, 0x534, 0x540, 0x541, 0x5a6, 0x5aa, 0x5b5, 0x5be, 0x5d0, 0x5d4, 0x5dc, 0x632, 0x636, 0x641, 0x64a, 0x658, 0x663, 0x687, 0x690, 0x696

Function 7:
Public fallback function
Entry block: 0x69
Exit block: 0x69
Body: 0x69

