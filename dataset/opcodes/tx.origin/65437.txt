Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x61
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x61
0xa: JUMPI 0x61 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x63]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1f7b6d32
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x63
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1f7b6d32
0x1a: V12 = EQ V10 0x1f7b6d32
0x1b: V13 = 0x63
0x1e: JUMPI 0x63 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x79]
---
0x1f DUP1
0x20 PUSH4 0x303eaeed
0x25 EQ
0x26 PUSH2 0x79
0x29 JUMPI
---
0x20: V14 = 0x303eaeed
0x25: V15 = EQ 0x303eaeed V10
0x26: V16 = 0x79
0x29: JUMPI 0x79 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xef]
---
0x2a DUP1
0x2b PUSH4 0x36555b85
0x30 EQ
0x31 PUSH2 0xef
0x34 JUMPI
---
0x2b: V17 = 0x36555b85
0x30: V18 = EQ 0x36555b85 V10
0x31: V19 = 0xef
0x34: JUMPI 0xef V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x164]
---
0x35 DUP1
0x36 PUSH4 0x4cc82215
0x3b EQ
0x3c PUSH2 0x164
0x3f JUMPI
---
0x36: V20 = 0x4cc82215
0x3b: V21 = EQ 0x4cc82215 V10
0x3c: V22 = 0x164
0x3f: JUMPI 0x164 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x216]
---
0x40 DUP1
0x41 PUSH4 0x588ee29b
0x46 EQ
0x47 PUSH2 0x216
0x4a JUMPI
---
0x41: V23 = 0x588ee29b
0x46: V24 = EQ 0x588ee29b V10
0x47: V25 = 0x216
0x4a: JUMPI 0x216 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x247]
---
0x4b DUP1
0x4c PUSH4 0x7cd9ffe3
0x51 EQ
0x52 PUSH2 0x247
0x55 JUMPI
---
0x4c: V26 = 0x7cd9ffe3
0x51: V27 = EQ 0x7cd9ffe3 V10
0x52: V28 = 0x247
0x55: JUMPI 0x247 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x26f]
---
0x56 DUP1
0x57 PUSH4 0x961be391
0x5c EQ
0x5d PUSH2 0x26f
0x60 JUMPI
---
0x57: V29 = 0x961be391
0x5c: V30 = EQ 0x961be391 V10
0x5d: V31 = 0x26f
0x60: JUMPI 0x26f V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x2b2, 0x4c3]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V10, 0x67, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x67, S0]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0xb]
Successors: [0x67]
---
0x63 JUMPDEST
0x64 PUSH1 0x1
0x66 SLOAD
---
0x63: JUMPDEST 
0x64: V32 = 0x1
0x66: V33 = S[0x1]
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V33]
Exit stack: [V10, V33]

================================

Block 0x67
[0x67:0x78]
---
Predecessors: [0x63, 0x3f3]
Successors: []
---
0x67 JUMPDEST
0x68 PUSH1 0x40
0x6a DUP1
0x6b MLOAD
0x6c SWAP2
0x6d DUP3
0x6e MSTORE
0x6f MLOAD
0x70 SWAP1
0x71 DUP2
0x72 SWAP1
0x73 SUB
0x74 PUSH1 0x20
0x76 ADD
0x77 SWAP1
0x78 RETURN
---
0x67: JUMPDEST 
0x68: V34 = 0x40
0x6b: V35 = M[0x40]
0x6e: M[V35] = S0
0x6f: V36 = M[0x40]
0x73: V37 = SUB V35 V36
0x74: V38 = 0x20
0x76: V39 = ADD 0x20 V37
0x78: RETURN V36 V39
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x79
[0x79:0xd3]
---
Predecessors: [0x1f]
Successors: [0xd4, 0x458]
---
0x79 JUMPDEST
0x7a PUSH1 0x40
0x7c DUP1
0x7d MLOAD
0x7e PUSH1 0x20
0x80 DUP2
0x81 DUP2
0x82 ADD
0x83 DUP4
0x84 MSTORE
0x85 PUSH1 0x0
0x87 DUP1
0x88 DUP4
0x89 MSTORE
0x8a PUSH1 0x4
0x8c CALLDATALOAD
0x8d DUP1
0x8e DUP3
0x8f MSTORE
0x90 DUP2
0x91 DUP4
0x92 MSTORE
0x93 DUP5
0x94 MLOAD
0x95 DUP6
0x96 DUP4
0x97 SHA3
0x98 DUP1
0x99 SLOAD
0x9a PUSH1 0x2
0x9c PUSH1 0x1
0x9e DUP3
0x9f AND
0xa0 ISZERO
0xa1 PUSH2 0x100
0xa4 MUL
0xa5 PUSH1 0x0
0xa7 NOT
0xa8 ADD
0xa9 SWAP1
0xaa SWAP2
0xab AND
0xac DIV
0xad PUSH1 0x1f
0xaf DUP2
0xb0 ADD
0xb1 DUP7
0xb2 SWAP1
0xb3 DIV
0xb4 DUP7
0xb5 MUL
0xb6 DUP4
0xb7 ADD
0xb8 DUP7
0xb9 ADD
0xba SWAP1
0xbb SWAP8
0xbc MSTORE
0xbd DUP7
0xbe DUP3
0xbf MSTORE
0xc0 PUSH2 0x2b4
0xc3 SWAP7
0xc4 SWAP3
0xc5 SWAP6
0xc6 SWAP5
0xc7 DUP5
0xc8 SWAP4
0xc9 SWAP1
0xca DUP4
0xcb ADD
0xcc DUP3
0xcd DUP3
0xce DUP1
0xcf ISZERO
0xd0 PUSH2 0x458
0xd3 JUMPI
---
0x79: JUMPDEST 
0x7a: V40 = 0x40
0x7d: V41 = M[0x40]
0x7e: V42 = 0x20
0x82: V43 = ADD 0x20 V41
0x84: M[0x40] = V43
0x85: V44 = 0x0
0x89: M[V41] = 0x0
0x8a: V45 = 0x4
0x8c: V46 = CALLDATALOAD 0x4
0x8f: M[0x0] = V46
0x92: M[0x20] = 0x0
0x94: V47 = M[0x40]
0x97: V48 = SHA3 0x0 0x40
0x99: V49 = S[V48]
0x9a: V50 = 0x2
0x9c: V51 = 0x1
0x9f: V52 = AND V49 0x1
0xa0: V53 = ISZERO V52
0xa1: V54 = 0x100
0xa4: V55 = MUL 0x100 V53
0xa5: V56 = 0x0
0xa7: V57 = NOT 0x0
0xa8: V58 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V55
0xab: V59 = AND V49 V58
0xac: V60 = DIV V59 0x2
0xad: V61 = 0x1f
0xb0: V62 = ADD V60 0x1f
0xb3: V63 = DIV V62 0x20
0xb5: V64 = MUL 0x20 V63
0xb7: V65 = ADD V47 V64
0xb9: V66 = ADD 0x20 V65
0xbc: M[0x40] = V66
0xbf: M[V47] = V60
0xc0: V67 = 0x2b4
0xcb: V68 = ADD V47 0x20
0xcf: V69 = ISZERO V60
0xd0: V70 = 0x458
0xd3: JUMPI 0x458 V69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V68, V48, V60]
Exit stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V68, V48, V60]

================================

Block 0xd4
[0xd4:0xdb]
---
Predecessors: [0x79]
Successors: [0xdc, 0x42d]
---
0xd4 DUP1
0xd5 PUSH1 0x1f
0xd7 LT
0xd8 PUSH2 0x42d
0xdb JUMPI
---
0xd5: V71 = 0x1f
0xd7: V72 = LT 0x1f V60
0xd8: V73 = 0x42d
0xdb: JUMPI 0x42d V72
---
Entry stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V68, V48, V60]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V68, V48, V60]

================================

Block 0xdc
[0xdc:0xee]
---
Predecessors: [0xd4]
Successors: [0x458]
---
0xdc PUSH2 0x100
0xdf DUP1
0xe0 DUP4
0xe1 SLOAD
0xe2 DIV
0xe3 MUL
0xe4 DUP4
0xe5 MSTORE
0xe6 SWAP2
0xe7 PUSH1 0x20
0xe9 ADD
0xea SWAP2
0xeb PUSH2 0x458
0xee JUMP
---
0xdc: V74 = 0x100
0xe1: V75 = S[V48]
0xe2: V76 = DIV V75 0x100
0xe3: V77 = MUL V76 0x100
0xe5: M[V68] = V77
0xe7: V78 = 0x20
0xe9: V79 = ADD 0x20 V68
0xeb: V80 = 0x458
0xee: JUMP 0x458
---
Entry stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V68, V48, V60]
Stack pops: 3
Stack additions: [V79, S1, S0]
Exit stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V79, V48, V60]

================================

Block 0xef
[0xef:0x151]
---
Predecessors: [0x2a]
Successors: [0x152, 0x3f3]
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 DUP1
0xf3 MLOAD
0xf4 PUSH1 0x20
0xf6 PUSH1 0x4
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa DUP1
0xfb DUP3
0xfc ADD
0xfd CALLDATALOAD
0xfe PUSH1 0x1f
0x100 DUP2
0x101 ADD
0x102 DUP5
0x103 SWAP1
0x104 DIV
0x105 DUP5
0x106 MUL
0x107 DUP6
0x108 ADD
0x109 DUP5
0x10a ADD
0x10b SWAP1
0x10c SWAP6
0x10d MSTORE
0x10e DUP5
0x10f DUP5
0x110 MSTORE
0x111 PUSH2 0x67
0x114 SWAP5
0x115 SWAP2
0x116 SWAP4
0x117 PUSH1 0x24
0x119 SWAP4
0x11a SWAP1
0x11b SWAP3
0x11c SWAP2
0x11d DUP5
0x11e ADD
0x11f SWAP2
0x120 SWAP1
0x121 DUP2
0x122 SWAP1
0x123 DUP5
0x124 ADD
0x125 DUP4
0x126 DUP3
0x127 DUP1
0x128 DUP3
0x129 DUP5
0x12a CALLDATACOPY
0x12b POP
0x12c SWAP5
0x12d SWAP7
0x12e POP
0x12f POP
0x130 SWAP4
0x131 CALLDATALOAD
0x132 SWAP4
0x133 POP
0x134 POP
0x135 POP
0x136 POP
0x137 PUSH1 0x2
0x139 SLOAD
0x13a PUSH1 0x0
0x13c SWAP1
0x13d PUSH1 0x1
0x13f PUSH1 0xa0
0x141 PUSH1 0x2
0x143 EXP
0x144 SUB
0x145 SWAP1
0x146 DUP2
0x147 AND
0x148 CALLER
0x149 SWAP1
0x14a SWAP2
0x14b AND
0x14c EQ
0x14d ISZERO
0x14e PUSH2 0x3f3
0x151 JUMPI
---
0xef: JUMPDEST 
0xf0: V81 = 0x40
0xf3: V82 = M[0x40]
0xf4: V83 = 0x20
0xf6: V84 = 0x4
0xf9: V85 = CALLDATALOAD 0x4
0xfc: V86 = ADD 0x4 V85
0xfd: V87 = CALLDATALOAD V86
0xfe: V88 = 0x1f
0x101: V89 = ADD V87 0x1f
0x104: V90 = DIV V89 0x20
0x106: V91 = MUL 0x20 V90
0x108: V92 = ADD V82 V91
0x10a: V93 = ADD 0x20 V92
0x10d: M[0x40] = V93
0x110: M[V82] = V87
0x111: V94 = 0x67
0x117: V95 = 0x24
0x11e: V96 = ADD 0x24 V85
0x124: V97 = ADD V82 0x20
0x12a: CALLDATACOPY V97 V96 V87
0x131: V98 = CALLDATALOAD 0x24
0x137: V99 = 0x2
0x139: V100 = S[0x2]
0x13a: V101 = 0x0
0x13d: V102 = 0x1
0x13f: V103 = 0xa0
0x141: V104 = 0x2
0x143: V105 = EXP 0x2 0xa0
0x144: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x148: V108 = CALLER
0x14b: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x14c: V110 = EQ V109 V107
0x14d: V111 = ISZERO V110
0x14e: V112 = 0x3f3
0x151: JUMPI 0x3f3 V111
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x67, V82, V98, 0x0]
Exit stack: [V10, 0x67, V82, V98, 0x0]

================================

Block 0x152
[0x152:0x15b]
---
Predecessors: [0xef]
Successors: [0x15c, 0x339]
---
0x152 PUSH1 0xfa
0x154 DUP4
0x155 MLOAD
0x156 GT
0x157 ISZERO
0x158 PUSH2 0x339
0x15b JUMPI
---
0x152: V113 = 0xfa
0x155: V114 = M[V82]
0x156: V115 = GT V114 0xfa
0x157: V116 = ISZERO V115
0x158: V117 = 0x339
0x15b: JUMPI 0x339 V116
---
Entry stack: [V10, 0x67, V82, V98, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x67, V82, V98, 0x0]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x152]
Successors: [0x3f3]
---
0x15c POP
0x15d PUSH1 0x0
0x15f NOT
0x160 PUSH2 0x3f3
0x163 JUMP
---
0x15d: V118 = 0x0
0x15f: V119 = NOT 0x0
0x160: V120 = 0x3f3
0x163: JUMP 0x3f3
---
Entry stack: [V10, 0x67, V82, V98, 0x0]
Stack pops: 1
Stack additions: [0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]
Exit stack: [V10, 0x67, V82, V98, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]

================================

Block 0x164
[0x164:0x191]
---
Predecessors: [0x35]
Successors: [0x192, 0x1a6]
---
0x164 JUMPDEST
0x165 PUSH2 0x61
0x168 PUSH1 0x4
0x16a CALLDATALOAD
0x16b PUSH1 0x0
0x16d DUP2
0x16e DUP2
0x16f MSTORE
0x170 PUSH1 0x20
0x172 DUP2
0x173 SWAP1
0x174 MSTORE
0x175 PUSH1 0x40
0x177 SWAP1
0x178 SHA3
0x179 PUSH1 0x2
0x17b ADD
0x17c SLOAD
0x17d PUSH1 0x1
0x17f PUSH1 0xa0
0x181 PUSH1 0x2
0x183 EXP
0x184 SUB
0x185 SWAP1
0x186 DUP2
0x187 AND
0x188 ORIGIN
0x189 SWAP1
0x18a SWAP2
0x18b AND
0x18c EQ
0x18d DUP1
0x18e PUSH2 0x1a6
0x191 JUMPI
---
0x164: JUMPDEST 
0x165: V121 = 0x61
0x168: V122 = 0x4
0x16a: V123 = CALLDATALOAD 0x4
0x16b: V124 = 0x0
0x16f: M[0x0] = V123
0x170: V125 = 0x20
0x174: M[0x20] = 0x0
0x175: V126 = 0x40
0x178: V127 = SHA3 0x0 0x40
0x179: V128 = 0x2
0x17b: V129 = ADD 0x2 V127
0x17c: V130 = S[V129]
0x17d: V131 = 0x1
0x17f: V132 = 0xa0
0x181: V133 = 0x2
0x183: V134 = EXP 0x2 0xa0
0x184: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x187: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x188: V137 = ORIGIN
0x18b: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x18c: V139 = EQ V138 V136
0x18e: V140 = 0x1a6
0x191: JUMPI 0x1a6 V139
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x61, V123, V139]
Exit stack: [V10, 0x61, V123, V139]

================================

Block 0x192
[0x192:0x1a5]
---
Predecessors: [0x164]
Successors: [0x1a6]
---
0x192 POP
0x193 PUSH1 0x2
0x195 SLOAD
0x196 PUSH1 0x1
0x198 PUSH1 0xa0
0x19a PUSH1 0x2
0x19c EXP
0x19d SUB
0x19e SWAP1
0x19f DUP2
0x1a0 AND
0x1a1 CALLER
0x1a2 SWAP1
0x1a3 SWAP2
0x1a4 AND
0x1a5 EQ
---
0x193: V141 = 0x2
0x195: V142 = S[0x2]
0x196: V143 = 0x1
0x198: V144 = 0xa0
0x19a: V145 = 0x2
0x19c: V146 = EXP 0x2 0xa0
0x19d: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a0: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x1a1: V149 = CALLER
0x1a4: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x1a5: V151 = EQ V150 V148
---
Entry stack: [V10, 0x61, V123, V139]
Stack pops: 1
Stack additions: [V151]
Exit stack: [V10, 0x61, V123, V151]

================================

Block 0x1a6
[0x1a6:0x1ab]
---
Predecessors: [0x164, 0x192]
Successors: [0x1ac, 0x4c3]
---
0x1a6 JUMPDEST
0x1a7 ISZERO
0x1a8 PUSH2 0x4c3
0x1ab JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V152 = ISZERO S0
0x1a8: V153 = 0x4c3
0x1ab: JUMPI 0x4c3 V152
---
Entry stack: [V10, 0x61, V123, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x61, V123]

================================

Block 0x1ac
[0x1ac:0x1fd]
---
Predecessors: [0x1a6]
Successors: [0x1fe, 0x4c6]
---
0x1ac PUSH1 0x40
0x1ae DUP1
0x1af MLOAD
0x1b0 PUSH1 0x20
0x1b2 DUP2
0x1b3 DUP2
0x1b4 ADD
0x1b5 DUP1
0x1b6 DUP5
0x1b7 MSTORE
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb DUP5
0x1bc MSTORE
0x1bd DUP6
0x1be DUP2
0x1bf MSTORE
0x1c0 DUP1
0x1c1 DUP4
0x1c2 MSTORE
0x1c3 SWAP4
0x1c4 DUP5
0x1c5 SHA3
0x1c6 SWAP3
0x1c7 MLOAD
0x1c8 DUP4
0x1c9 SLOAD
0x1ca DUP5
0x1cb DUP7
0x1cc MSTORE
0x1cd SWAP5
0x1ce DUP4
0x1cf SWAP1
0x1d0 SHA3
0x1d1 SWAP4
0x1d2 SWAP5
0x1d3 PUSH1 0x2
0x1d5 PUSH1 0x1
0x1d7 DUP3
0x1d8 AND
0x1d9 ISZERO
0x1da PUSH2 0x100
0x1dd MUL
0x1de PUSH1 0x0
0x1e0 NOT
0x1e1 ADD
0x1e2 SWAP1
0x1e3 SWAP2
0x1e4 AND
0x1e5 DIV
0x1e6 PUSH1 0x1f
0x1e8 SWAP1
0x1e9 DUP2
0x1ea ADD
0x1eb SWAP4
0x1ec SWAP1
0x1ed SWAP4
0x1ee DIV
0x1ef DUP5
0x1f0 ADD
0x1f1 SWAP4
0x1f2 SWAP1
0x1f3 SWAP3
0x1f4 SWAP1
0x1f5 SWAP2
0x1f6 SWAP1
0x1f7 DUP4
0x1f8 SWAP1
0x1f9 LT
0x1fa PUSH2 0x4c6
0x1fd JUMPI
---
0x1ac: V154 = 0x40
0x1af: V155 = M[0x40]
0x1b0: V156 = 0x20
0x1b4: V157 = ADD 0x20 V155
0x1b7: M[0x40] = V157
0x1b8: V158 = 0x0
0x1bc: M[V155] = 0x0
0x1bf: M[0x0] = V123
0x1c2: M[0x20] = 0x0
0x1c5: V159 = SHA3 0x0 0x40
0x1c7: V160 = M[V155]
0x1c9: V161 = S[V159]
0x1cc: M[0x0] = V159
0x1d0: V162 = SHA3 0x0 0x20
0x1d3: V163 = 0x2
0x1d5: V164 = 0x1
0x1d8: V165 = AND V161 0x1
0x1d9: V166 = ISZERO V165
0x1da: V167 = 0x100
0x1dd: V168 = MUL 0x100 V166
0x1de: V169 = 0x0
0x1e0: V170 = NOT 0x0
0x1e1: V171 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V168
0x1e4: V172 = AND V161 V171
0x1e5: V173 = DIV V172 0x2
0x1e6: V174 = 0x1f
0x1ea: V175 = ADD 0x1f V173
0x1ee: V176 = DIV V175 0x20
0x1f0: V177 = ADD V162 V176
0x1f9: V178 = LT 0x1f V160
0x1fa: V179 = 0x4c6
0x1fd: JUMPI 0x4c6 V178
---
Entry stack: [V10, 0x61, V123]
Stack pops: 1
Stack additions: [S0, V159, V177, V160, V162, V157]
Exit stack: [V10, 0x61, V123, V159, V177, V160, V162, V157]

================================

Block 0x1fe
[0x1fe:0x209]
---
Predecessors: [0x1ac]
Successors: [0x20a]
---
0x1fe DUP1
0x1ff MLOAD
0x200 PUSH1 0xff
0x202 NOT
0x203 AND
0x204 DUP4
0x205 DUP1
0x206 ADD
0x207 OR
0x208 DUP6
0x209 SSTORE
---
0x1ff: V180 = M[V157]
0x200: V181 = 0xff
0x202: V182 = NOT 0xff
0x203: V183 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V180
0x206: V184 = ADD V160 V160
0x207: V185 = OR V184 V183
0x209: S[V159] = V185
---
Entry stack: [V10, 0x61, V123, V159, V177, V160, V162, V157]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x61, V123, V159, V177, V160, V162, V157]

================================

Block 0x20a
[0x20a:0x215]
---
Predecessors: [0x1fe, 0x4c6, 0x4d8]
Successors: [0x395]
---
0x20a JUMPDEST
0x20b POP
0x20c PUSH2 0x48c
0x20f SWAP3
0x210 SWAP2
0x211 POP
0x212 PUSH2 0x395
0x215 JUMP
---
0x20a: JUMPDEST 
0x20c: V186 = 0x48c
0x212: V187 = 0x395
0x215: JUMP 0x395
---
Entry stack: [V10, 0x61, V123, V159, V177, S2, S1, S0]
Stack pops: 4
Stack additions: [0x48c, S3, S1]
Exit stack: [V10, 0x61, V123, V159, 0x48c, V177, S1]

================================

Block 0x216
[0x216:0x246]
---
Predecessors: [0x40]
Successors: []
---
0x216 JUMPDEST
0x217 PUSH1 0x2
0x219 SLOAD
0x21a PUSH1 0x40
0x21c DUP1
0x21d MLOAD
0x21e ORIGIN
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 SWAP1
0x228 DUP2
0x229 AND
0x22a DUP3
0x22b MSTORE
0x22c SWAP3
0x22d DUP4
0x22e AND
0x22f PUSH1 0x20
0x231 DUP3
0x232 ADD
0x233 MSTORE
0x234 CALLER
0x235 SWAP3
0x236 SWAP1
0x237 SWAP3
0x238 AND
0x239 DUP3
0x23a DUP3
0x23b ADD
0x23c MSTORE
0x23d MLOAD
0x23e SWAP1
0x23f DUP2
0x240 SWAP1
0x241 SUB
0x242 PUSH1 0x60
0x244 ADD
0x245 SWAP1
0x246 RETURN
---
0x216: JUMPDEST 
0x217: V188 = 0x2
0x219: V189 = S[0x2]
0x21a: V190 = 0x40
0x21d: V191 = M[0x40]
0x21e: V192 = ORIGIN
0x21f: V193 = 0x1
0x221: V194 = 0xa0
0x223: V195 = 0x2
0x225: V196 = EXP 0x2 0xa0
0x226: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x229: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x22b: M[V191] = V198
0x22e: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x22f: V200 = 0x20
0x232: V201 = ADD V191 0x20
0x233: M[V201] = V199
0x234: V202 = CALLER
0x238: V203 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V204 = ADD 0x40 V191
0x23c: M[V204] = V203
0x23d: V205 = M[0x40]
0x241: V206 = SUB V191 V205
0x242: V207 = 0x60
0x244: V208 = ADD 0x60 V206
0x246: RETURN V205 V208
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x247
[0x247:0x261]
---
Predecessors: [0x4b]
Successors: [0x262, 0x2b2]
---
0x247 JUMPDEST
0x248 PUSH2 0x61
0x24b PUSH1 0x2
0x24d SLOAD
0x24e CALLER
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 SWAP1
0x258 DUP2
0x259 AND
0x25a SWAP2
0x25b AND
0x25c EQ
0x25d ISZERO
0x25e PUSH2 0x2b2
0x261 JUMPI
---
0x247: JUMPDEST 
0x248: V209 = 0x61
0x24b: V210 = 0x2
0x24d: V211 = S[0x2]
0x24e: V212 = CALLER
0x24f: V213 = 0x1
0x251: V214 = 0xa0
0x253: V215 = 0x2
0x255: V216 = EXP 0x2 0xa0
0x256: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x259: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x25b: V219 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V220 = EQ V219 V218
0x25d: V221 = ISZERO V220
0x25e: V222 = 0x2b2
0x261: JUMPI 0x2b2 V221
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V10, 0x61]

================================

Block 0x262
[0x262:0x26e]
---
Predecessors: [0x247]
Successors: []
---
0x262 PUSH1 0x2
0x264 SLOAD
0x265 PUSH1 0x1
0x267 PUSH1 0xa0
0x269 PUSH1 0x2
0x26b EXP
0x26c SUB
0x26d AND
0x26e SELFDESTRUCT
---
0x262: V223 = 0x2
0x264: V224 = S[0x2]
0x265: V225 = 0x1
0x267: V226 = 0xa0
0x269: V227 = 0x2
0x26b: V228 = EXP 0x2 0xa0
0x26c: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26d: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x26e: SELFDESTRUCT V230
---
Entry stack: [V10, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x61]

================================

Block 0x26f
[0x26f:0x289]
---
Predecessors: [0x56]
Successors: [0x28a, 0x2b2]
---
0x26f JUMPDEST
0x270 PUSH2 0x61
0x273 PUSH1 0x2
0x275 SLOAD
0x276 CALLER
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f SWAP1
0x280 DUP2
0x281 AND
0x282 SWAP2
0x283 AND
0x284 EQ
0x285 ISZERO
0x286 PUSH2 0x2b2
0x289 JUMPI
---
0x26f: JUMPDEST 
0x270: V231 = 0x61
0x273: V232 = 0x2
0x275: V233 = S[0x2]
0x276: V234 = CALLER
0x277: V235 = 0x1
0x279: V236 = 0xa0
0x27b: V237 = 0x2
0x27d: V238 = EXP 0x2 0xa0
0x27e: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x283: V241 = AND V233 0xffffffffffffffffffffffffffffffffffffffff
0x284: V242 = EQ V241 V240
0x285: V243 = ISZERO V242
0x286: V244 = 0x2b2
0x289: JUMPI 0x2b2 V243
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V10, 0x61]

================================

Block 0x28a
[0x28a:0x2b1]
---
Predecessors: [0x26f]
Successors: [0x2b2]
---
0x28a PUSH1 0x2
0x28c SLOAD
0x28d PUSH1 0x40
0x28f MLOAD
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 SWAP2
0x299 DUP3
0x29a AND
0x29b SWAP2
0x29c PUSH1 0x0
0x29e SWAP2
0x29f ADDRESS
0x2a0 SWAP1
0x2a1 SWAP2
0x2a2 AND
0x2a3 BALANCE
0x2a4 SWAP1
0x2a5 DUP3
0x2a6 DUP2
0x2a7 DUP2
0x2a8 DUP2
0x2a9 DUP6
0x2aa DUP9
0x2ab DUP4
0x2ac CALL
0x2ad POP
0x2ae POP
0x2af POP
0x2b0 POP
0x2b1 POP
---
0x28a: V245 = 0x2
0x28c: V246 = S[0x2]
0x28d: V247 = 0x40
0x28f: V248 = M[0x40]
0x290: V249 = 0x1
0x292: V250 = 0xa0
0x294: V251 = 0x2
0x296: V252 = EXP 0x2 0xa0
0x297: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29a: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x29c: V255 = 0x0
0x29f: V256 = ADDRESS
0x2a2: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x2a3: V258 = BALANCE V257
0x2ac: V259 = CALL 0x0 V254 V258 V248 0x0 V248 0x0
---
Entry stack: [V10, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x61]

================================

Block 0x2b2
[0x2b2:0x2b3]
---
Predecessors: [0x247, 0x26f, 0x28a]
Successors: [0x61]
---
0x2b2 JUMPDEST
0x2b3 JUMP
---
0x2b2: JUMPDEST 
0x2b3: JUMP 0x61
---
Entry stack: [V10, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b4
[0x2b4:0x30f]
---
Predecessors: [0x458]
Successors: [0x310, 0x329]
---
0x2b4 JUMPDEST
0x2b5 PUSH1 0x40
0x2b7 MLOAD
0x2b8 DUP1
0x2b9 DUP1
0x2ba PUSH1 0x20
0x2bc ADD
0x2bd DUP5
0x2be DUP2
0x2bf MSTORE
0x2c0 PUSH1 0x20
0x2c2 ADD
0x2c3 DUP4
0x2c4 PUSH1 0x1
0x2c6 PUSH1 0xa0
0x2c8 PUSH1 0x2
0x2ca EXP
0x2cb SUB
0x2cc AND
0x2cd DUP2
0x2ce MSTORE
0x2cf PUSH1 0x20
0x2d1 ADD
0x2d2 DUP3
0x2d3 DUP2
0x2d4 SUB
0x2d5 DUP3
0x2d6 MSTORE
0x2d7 DUP6
0x2d8 DUP2
0x2d9 DUP2
0x2da MLOAD
0x2db DUP2
0x2dc MSTORE
0x2dd PUSH1 0x20
0x2df ADD
0x2e0 SWAP2
0x2e1 POP
0x2e2 DUP1
0x2e3 MLOAD
0x2e4 SWAP1
0x2e5 PUSH1 0x20
0x2e7 ADD
0x2e8 SWAP1
0x2e9 DUP1
0x2ea DUP4
0x2eb DUP4
0x2ec DUP3
0x2ed SWAP1
0x2ee PUSH1 0x0
0x2f0 PUSH1 0x4
0x2f2 PUSH1 0x20
0x2f4 DUP5
0x2f5 PUSH1 0x1f
0x2f7 ADD
0x2f8 DIV
0x2f9 PUSH1 0xf
0x2fb MUL
0x2fc PUSH1 0x3
0x2fe ADD
0x2ff CALL
0x300 POP
0x301 SWAP1
0x302 POP
0x303 SWAP1
0x304 DUP2
0x305 ADD
0x306 SWAP1
0x307 PUSH1 0x1f
0x309 AND
0x30a DUP1
0x30b ISZERO
0x30c PUSH2 0x329
0x30f JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V260 = 0x40
0x2b7: V261 = M[0x40]
0x2ba: V262 = 0x20
0x2bc: V263 = ADD 0x20 V261
0x2bf: M[V263] = V412
0x2c0: V264 = 0x20
0x2c2: V265 = ADD 0x20 V263
0x2c4: V266 = 0x1
0x2c6: V267 = 0xa0
0x2c8: V268 = 0x2
0x2ca: V269 = EXP 0x2 0xa0
0x2cb: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cc: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x2ce: M[V265] = V271
0x2cf: V272 = 0x20
0x2d1: V273 = ADD 0x20 V265
0x2d4: V274 = SUB V273 V261
0x2d6: M[V261] = V274
0x2da: V275 = M[V47]
0x2dc: M[V273] = V275
0x2dd: V276 = 0x20
0x2df: V277 = ADD 0x20 V273
0x2e3: V278 = M[V47]
0x2e5: V279 = 0x20
0x2e7: V280 = ADD 0x20 V47
0x2ee: V281 = 0x0
0x2f0: V282 = 0x4
0x2f2: V283 = 0x20
0x2f5: V284 = 0x1f
0x2f7: V285 = ADD 0x1f V278
0x2f8: V286 = DIV V285 0x20
0x2f9: V287 = 0xf
0x2fb: V288 = MUL 0xf V286
0x2fc: V289 = 0x3
0x2fe: V290 = ADD 0x3 V288
0x2ff: V291 = CALL V290 0x4 0x0 V280 V278 V277 V278
0x305: V292 = ADD V278 V277
0x307: V293 = 0x1f
0x309: V294 = AND 0x1f V278
0x30b: V295 = ISZERO V294
0x30c: V296 = 0x329
0x30f: JUMPI 0x329 V295
---
Entry stack: [V10, V47, V412, V418]
Stack pops: 3
Stack additions: [S2, S1, S0, V261, V261, V292, V294]
Exit stack: [V10, V47, V412, V418, V261, V261, V292, V294]

================================

Block 0x310
[0x310:0x328]
---
Predecessors: [0x2b4]
Successors: [0x329]
---
0x310 DUP1
0x311 DUP3
0x312 SUB
0x313 DUP1
0x314 MLOAD
0x315 PUSH1 0x1
0x317 DUP4
0x318 PUSH1 0x20
0x31a SUB
0x31b PUSH2 0x100
0x31e EXP
0x31f SUB
0x320 NOT
0x321 AND
0x322 DUP2
0x323 MSTORE
0x324 PUSH1 0x20
0x326 ADD
0x327 SWAP2
0x328 POP
---
0x312: V297 = SUB V292 V294
0x314: V298 = M[V297]
0x315: V299 = 0x1
0x318: V300 = 0x20
0x31a: V301 = SUB 0x20 V294
0x31b: V302 = 0x100
0x31e: V303 = EXP 0x100 V301
0x31f: V304 = SUB V303 0x1
0x320: V305 = NOT V304
0x321: V306 = AND V305 V298
0x323: M[V297] = V306
0x324: V307 = 0x20
0x326: V308 = ADD 0x20 V297
---
Entry stack: [V10, V47, V412, V418, V261, V261, V292, V294]
Stack pops: 2
Stack additions: [V308, S0]
Exit stack: [V10, V47, V412, V418, V261, V261, V308, V294]

================================

Block 0x329
[0x329:0x338]
---
Predecessors: [0x2b4, 0x310]
Successors: []
---
0x329 JUMPDEST
0x32a POP
0x32b SWAP5
0x32c POP
0x32d POP
0x32e POP
0x32f POP
0x330 POP
0x331 PUSH1 0x40
0x333 MLOAD
0x334 DUP1
0x335 SWAP2
0x336 SUB
0x337 SWAP1
0x338 RETURN
---
0x329: JUMPDEST 
0x331: V309 = 0x40
0x333: V310 = M[0x40]
0x336: V311 = SUB S1 V310
0x338: RETURN V310 V311
---
Entry stack: [V10, V47, V412, V418, V261, V261, S1, V294]
Stack pops: 7
Stack additions: []
Exit stack: [V10]

================================

Block 0x339
[0x339:0x380]
---
Predecessors: [0x152]
Successors: [0x381, 0x3f9]
---
0x339 JUMPDEST
0x33a PUSH1 0x1
0x33c DUP1
0x33d SLOAD
0x33e PUSH1 0x0
0x340 SWAP1
0x341 DUP2
0x342 MSTORE
0x343 PUSH1 0x20
0x345 DUP2
0x346 DUP2
0x347 MSTORE
0x348 PUSH1 0x40
0x34a DUP3
0x34b SHA3
0x34c DUP1
0x34d SLOAD
0x34e DUP8
0x34f MLOAD
0x350 DUP3
0x351 DUP6
0x352 MSTORE
0x353 SWAP4
0x354 DUP4
0x355 SWAP1
0x356 SHA3
0x357 SWAP2
0x358 SWAP5
0x359 PUSH1 0x2
0x35b SWAP1
0x35c DUP3
0x35d AND
0x35e ISZERO
0x35f PUSH2 0x100
0x362 MUL
0x363 PUSH1 0x0
0x365 NOT
0x366 ADD
0x367 SWAP1
0x368 SWAP2
0x369 AND
0x36a DIV
0x36b PUSH1 0x1f
0x36d SWAP1
0x36e DUP2
0x36f ADD
0x370 DUP4
0x371 SWAP1
0x372 DIV
0x373 DUP3
0x374 ADD
0x375 SWAP4
0x376 SWAP3
0x377 DUP9
0x378 ADD
0x379 SWAP1
0x37a DUP4
0x37b SWAP1
0x37c LT
0x37d PUSH2 0x3f9
0x380 JUMPI
---
0x339: JUMPDEST 
0x33a: V312 = 0x1
0x33d: V313 = S[0x1]
0x33e: V314 = 0x0
0x342: M[0x0] = V313
0x343: V315 = 0x20
0x347: M[0x20] = 0x0
0x348: V316 = 0x40
0x34b: V317 = SHA3 0x0 0x40
0x34d: V318 = S[V317]
0x34f: V319 = M[V82]
0x352: M[0x0] = V317
0x356: V320 = SHA3 0x0 0x20
0x359: V321 = 0x2
0x35d: V322 = AND V318 0x1
0x35e: V323 = ISZERO V322
0x35f: V324 = 0x100
0x362: V325 = MUL 0x100 V323
0x363: V326 = 0x0
0x365: V327 = NOT 0x0
0x366: V328 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V325
0x369: V329 = AND V318 V328
0x36a: V330 = DIV V329 0x2
0x36b: V331 = 0x1f
0x36f: V332 = ADD 0x1f V330
0x372: V333 = DIV V332 0x20
0x374: V334 = ADD V320 V333
0x378: V335 = ADD V82 0x20
0x37c: V336 = LT 0x1f V319
0x37d: V337 = 0x3f9
0x380: JUMPI 0x3f9 V336
---
Entry stack: [V10, 0x67, V82, V98, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V317, V334, V319, V320, V335]
Exit stack: [V10, 0x67, V82, V98, 0x0, V317, V334, V319, V320, V335]

================================

Block 0x381
[0x381:0x38c]
---
Predecessors: [0x339]
Successors: [0x38d]
---
0x381 DUP1
0x382 MLOAD
0x383 PUSH1 0xff
0x385 NOT
0x386 AND
0x387 DUP4
0x388 DUP1
0x389 ADD
0x38a OR
0x38b DUP6
0x38c SSTORE
---
0x382: V338 = M[V335]
0x383: V339 = 0xff
0x385: V340 = NOT 0xff
0x386: V341 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V338
0x389: V342 = ADD V319 V319
0x38a: V343 = OR V342 V341
0x38c: S[V317] = V343
---
Entry stack: [V10, 0x67, V82, V98, 0x0, V317, V334, V319, V320, V335]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x67, V82, V98, 0x0, V317, V334, V319, V320, V335]

================================

Block 0x38d
[0x38d:0x394]
---
Predecessors: [0x381, 0x3f9, 0x40b]
Successors: [0x395]
---
0x38d JUMPDEST
0x38e POP
0x38f PUSH2 0x3a9
0x392 SWAP3
0x393 SWAP2
0x394 POP
---
0x38d: JUMPDEST 
0x38f: V344 = 0x3a9
---
Entry stack: [V10, 0x67, V82, V98, 0x0, V317, V334, S2, S1, S0]
Stack pops: 4
Stack additions: [0x3a9, S3, S1]
Exit stack: [V10, 0x67, V82, V98, 0x0, V317, 0x3a9, V334, S1]

================================

Block 0x395
[0x395:0x39d]
---
Predecessors: [0x20a, 0x38d, 0x39e]
Successors: [0x39e, 0x429]
---
0x395 JUMPDEST
0x396 DUP1
0x397 DUP3
0x398 GT
0x399 ISZERO
0x39a PUSH2 0x429
0x39d JUMPI
---
0x395: JUMPDEST 
0x398: V345 = GT S1 S0
0x399: V346 = ISZERO V345
0x39a: V347 = 0x429
0x39d: JUMPI 0x429 V346
---
Entry stack: [V10, 0x67, S6, S5, S4, S3, {0x3a9, 0x48c}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x67, S6, S5, S4, S3, {0x3a9, 0x48c}, S1, S0]

================================

Block 0x39e
[0x39e:0x3a8]
---
Predecessors: [0x395]
Successors: [0x395]
---
0x39e PUSH1 0x0
0x3a0 DUP2
0x3a1 SSTORE
0x3a2 PUSH1 0x1
0x3a4 ADD
0x3a5 PUSH2 0x395
0x3a8 JUMP
---
0x39e: V348 = 0x0
0x3a1: S[S0] = 0x0
0x3a2: V349 = 0x1
0x3a4: V350 = ADD 0x1 S0
0x3a5: V351 = 0x395
0x3a8: JUMP 0x395
---
Entry stack: [V10, 0x67, S6, S5, S4, S3, {0x3a9, 0x48c}, S1, S0]
Stack pops: 1
Stack additions: [V350]
Exit stack: [V10, 0x67, S6, S5, S4, S3, {0x3a9, 0x48c}, S1, V350]

================================

Block 0x3a9
[0x3a9:0x3f2]
---
Predecessors: [0x429]
Successors: [0x3f3]
---
0x3a9 JUMPDEST
0x3aa POP
0x3ab POP
0x3ac PUSH1 0x1
0x3ae DUP1
0x3af SLOAD
0x3b0 PUSH1 0x0
0x3b2 SWAP1
0x3b3 DUP2
0x3b4 MSTORE
0x3b5 PUSH1 0x20
0x3b7 DUP2
0x3b8 SWAP1
0x3b9 MSTORE
0x3ba PUSH1 0x40
0x3bc DUP1
0x3bd DUP3
0x3be SHA3
0x3bf DUP4
0x3c0 ADD
0x3c1 DUP6
0x3c2 SWAP1
0x3c3 SSTORE
0x3c4 DUP3
0x3c5 SLOAD
0x3c6 DUP3
0x3c7 MSTORE
0x3c8 DUP2
0x3c9 SHA3
0x3ca PUSH1 0x2
0x3cc ADD
0x3cd DUP1
0x3ce SLOAD
0x3cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e4 NOT
0x3e5 AND
0x3e6 ORIGIN
0x3e7 OR
0x3e8 SWAP1
0x3e9 SSTORE
0x3ea DUP2
0x3eb SLOAD
0x3ec DUP3
0x3ed ADD
0x3ee SWAP1
0x3ef SWAP2
0x3f0 SSTORE
0x3f1 SWAP1
0x3f2 POP
---
0x3a9: JUMPDEST 
0x3ac: V352 = 0x1
0x3af: V353 = S[0x1]
0x3b0: V354 = 0x0
0x3b4: M[0x0] = V353
0x3b5: V355 = 0x20
0x3b9: M[0x20] = 0x0
0x3ba: V356 = 0x40
0x3be: V357 = SHA3 0x0 0x40
0x3c0: V358 = ADD 0x1 V357
0x3c3: S[V358] = S3
0x3c5: V359 = S[0x1]
0x3c7: M[0x0] = V359
0x3c9: V360 = SHA3 0x0 0x40
0x3ca: V361 = 0x2
0x3cc: V362 = ADD 0x2 V360
0x3ce: V363 = S[V362]
0x3cf: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e4: V365 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3e5: V366 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V363
0x3e6: V367 = ORIGIN
0x3e7: V368 = OR V367 V366
0x3e9: S[V362] = V368
0x3eb: V369 = S[0x1]
0x3ed: V370 = ADD 0x1 V369
0x3f0: S[0x1] = V370
---
Entry stack: [V10, 0x67, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, 0x0]
Exit stack: [V10, 0x67, S4, S3, 0x0]

================================

Block 0x3f3
[0x3f3:0x3f8]
---
Predecessors: [0xef, 0x15c, 0x3a9]
Successors: [0x67]
---
0x3f3 JUMPDEST
0x3f4 SWAP3
0x3f5 SWAP2
0x3f6 POP
0x3f7 POP
0x3f8 JUMP
---
0x3f3: JUMPDEST 
0x3f8: JUMP 0x67
---
Entry stack: [V10, 0x67, S2, S1, {0x0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff}]

================================

Block 0x3f9
[0x3f9:0x407]
---
Predecessors: [0x339]
Successors: [0x38d, 0x408]
---
0x3f9 JUMPDEST
0x3fa DUP3
0x3fb DUP1
0x3fc ADD
0x3fd PUSH1 0x1
0x3ff ADD
0x400 DUP6
0x401 SSTORE
0x402 DUP3
0x403 ISZERO
0x404 PUSH2 0x38d
0x407 JUMPI
---
0x3f9: JUMPDEST 
0x3fc: V371 = ADD V319 V319
0x3fd: V372 = 0x1
0x3ff: V373 = ADD 0x1 V371
0x401: S[V317] = V373
0x403: V374 = ISZERO V319
0x404: V375 = 0x38d
0x407: JUMPI 0x38d V374
---
Entry stack: [V10, 0x67, V82, V98, 0x0, V317, V334, V319, V320, V335]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x67, V82, V98, 0x0, V317, V334, V319, V320, V335]

================================

Block 0x408
[0x408:0x40a]
---
Predecessors: [0x3f9]
Successors: [0x40b]
---
0x408 SWAP2
0x409 DUP3
0x40a ADD
---
0x40a: V376 = ADD V335 V319
---
Entry stack: [V10, 0x67, V82, V98, 0x0, V317, V334, V319, V320, V335]
Stack pops: 3
Stack additions: [S0, S1, V376]
Exit stack: [V10, 0x67, V82, V98, 0x0, V317, V334, V335, V320, V376]

================================

Block 0x40b
[0x40b:0x413]
---
Predecessors: [0x408, 0x414]
Successors: [0x38d, 0x414]
---
0x40b JUMPDEST
0x40c DUP3
0x40d DUP2
0x40e GT
0x40f ISZERO
0x410 PUSH2 0x38d
0x413 JUMPI
---
0x40b: JUMPDEST 
0x40e: V377 = GT V376 S2
0x40f: V378 = ISZERO V377
0x410: V379 = 0x38d
0x413: JUMPI 0x38d V378
---
Entry stack: [V10, 0x67, V82, V98, 0x0, V317, V334, S2, S1, V376]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x67, V82, V98, 0x0, V317, V334, S2, S1, V376]

================================

Block 0x414
[0x414:0x428]
---
Predecessors: [0x40b]
Successors: [0x40b]
---
0x414 DUP3
0x415 MLOAD
0x416 DUP3
0x417 PUSH1 0x0
0x419 POP
0x41a SSTORE
0x41b SWAP2
0x41c PUSH1 0x20
0x41e ADD
0x41f SWAP2
0x420 SWAP1
0x421 PUSH1 0x1
0x423 ADD
0x424 SWAP1
0x425 PUSH2 0x40b
0x428 JUMP
---
0x415: V380 = M[S2]
0x417: V381 = 0x0
0x41a: S[S1] = V380
0x41c: V382 = 0x20
0x41e: V383 = ADD 0x20 S2
0x421: V384 = 0x1
0x423: V385 = ADD 0x1 S1
0x425: V386 = 0x40b
0x428: JUMP 0x40b
---
Entry stack: [V10, 0x67, V82, V98, 0x0, V317, V334, S2, S1, V376]
Stack pops: 3
Stack additions: [V383, V385, S0]
Exit stack: [V10, 0x67, V82, V98, 0x0, V317, V334, V383, V385, V376]

================================

Block 0x429
[0x429:0x42c]
---
Predecessors: [0x395]
Successors: [0x3a9, 0x48c]
---
0x429 JUMPDEST
0x42a POP
0x42b SWAP1
0x42c JUMP
---
0x429: JUMPDEST 
0x42c: JUMP {0x3a9, 0x48c}
---
Entry stack: [V10, 0x67, S6, S5, S4, S3, {0x3a9, 0x48c}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x67, S6, S5, S4, S3, S1]

================================

Block 0x42d
[0x42d:0x43a]
---
Predecessors: [0xd4]
Successors: [0x43b]
---
0x42d JUMPDEST
0x42e DUP3
0x42f ADD
0x430 SWAP2
0x431 SWAP1
0x432 PUSH1 0x0
0x434 MSTORE
0x435 PUSH1 0x20
0x437 PUSH1 0x0
0x439 SHA3
0x43a SWAP1
---
0x42d: JUMPDEST 
0x42f: V387 = ADD V68 V60
0x432: V388 = 0x0
0x434: M[0x0] = V48
0x435: V389 = 0x20
0x437: V390 = 0x0
0x439: V391 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V68, V48, V60]
Stack pops: 3
Stack additions: [V387, V391, S2]
Exit stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V387, V391, V68]

================================

Block 0x43b
[0x43b:0x44e]
---
Predecessors: [0x42d, 0x43b]
Successors: [0x43b, 0x44f]
---
0x43b JUMPDEST
0x43c DUP2
0x43d SLOAD
0x43e DUP2
0x43f MSTORE
0x440 SWAP1
0x441 PUSH1 0x1
0x443 ADD
0x444 SWAP1
0x445 PUSH1 0x20
0x447 ADD
0x448 DUP1
0x449 DUP4
0x44a GT
0x44b PUSH2 0x43b
0x44e JUMPI
---
0x43b: JUMPDEST 
0x43d: V392 = S[S1]
0x43f: M[S0] = V392
0x441: V393 = 0x1
0x443: V394 = ADD 0x1 S1
0x445: V395 = 0x20
0x447: V396 = ADD 0x20 S0
0x44a: V397 = GT V387 V396
0x44b: V398 = 0x43b
0x44e: JUMPI 0x43b V397
---
Entry stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V387, S1, S0]
Stack pops: 3
Stack additions: [S2, V394, V396]
Exit stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V387, V394, V396]

================================

Block 0x44f
[0x44f:0x457]
---
Predecessors: [0x43b]
Successors: [0x458]
---
0x44f DUP3
0x450 SWAP1
0x451 SUB
0x452 PUSH1 0x1f
0x454 AND
0x455 DUP3
0x456 ADD
0x457 SWAP2
---
0x451: V399 = SUB V396 V387
0x452: V400 = 0x1f
0x454: V401 = AND 0x1f V399
0x456: V402 = ADD V387 V401
---
Entry stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V387, V394, V396]
Stack pops: 3
Stack additions: [V402, S1, S2]
Exit stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, V402, V394, V387]

================================

Block 0x458
[0x458:0x48b]
---
Predecessors: [0x79, 0xdc, 0x44f]
Successors: [0x2b4]
---
0x458 JUMPDEST
0x459 POP
0x45a POP
0x45b POP
0x45c PUSH1 0x0
0x45e SWAP7
0x45f DUP8
0x460 MSTORE
0x461 POP
0x462 POP
0x463 PUSH1 0x20
0x465 DUP6
0x466 SWAP1
0x467 MSTORE
0x468 PUSH1 0x40
0x46a SWAP1
0x46b SWAP5
0x46c SHA3
0x46d PUSH1 0x2
0x46f DUP2
0x470 ADD
0x471 SLOAD
0x472 PUSH1 0x1
0x474 SWAP1
0x475 SWAP2
0x476 ADD
0x477 SLOAD
0x478 SWAP5
0x479 SWAP6
0x47a PUSH1 0x1
0x47c PUSH1 0xa0
0x47e PUSH1 0x2
0x480 EXP
0x481 SUB
0x482 SWAP2
0x483 SWAP1
0x484 SWAP2
0x485 AND
0x486 SWAP4
0x487 POP
0x488 SWAP2
0x489 POP
0x48a POP
0x48b JUMP
---
0x458: JUMPDEST 
0x45c: V403 = 0x0
0x460: M[0x0] = V46
0x463: V404 = 0x20
0x467: M[0x20] = 0x0
0x468: V405 = 0x40
0x46c: V406 = SHA3 0x0 0x40
0x46d: V407 = 0x2
0x470: V408 = ADD V406 0x2
0x471: V409 = S[V408]
0x472: V410 = 0x1
0x476: V411 = ADD V406 0x1
0x477: V412 = S[V411]
0x47a: V413 = 0x1
0x47c: V414 = 0xa0
0x47e: V415 = 0x2
0x480: V416 = EXP 0x2 0xa0
0x481: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x485: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x48b: JUMP 0x2b4
---
Entry stack: [V10, 0x2b4, V46, V41, 0x0, 0x0, V47, V48, V60, S2, S1, S0]
Stack pops: 11
Stack additions: [S5, V412, V418]
Exit stack: [V10, V47, V412, V418]

================================

Block 0x48c
[0x48c:0x4c2]
---
Predecessors: [0x429]
Successors: [0x4c3]
---
0x48c JUMPDEST
0x48d POP
0x48e POP
0x48f PUSH1 0x0
0x491 DUP2
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x20
0x496 DUP2
0x497 SWAP1
0x498 MSTORE
0x499 PUSH1 0x40
0x49b DUP2
0x49c SHA3
0x49d PUSH1 0x1
0x49f DUP2
0x4a0 ADD
0x4a1 SWAP2
0x4a2 SWAP1
0x4a3 SWAP2
0x4a4 SSTORE
0x4a5 PUSH1 0x2
0x4a7 ADD
0x4a8 DUP1
0x4a9 SLOAD
0x4aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bf NOT
0x4c0 AND
0x4c1 SWAP1
0x4c2 SSTORE
---
0x48c: JUMPDEST 
0x48f: V419 = 0x0
0x493: M[0x0] = S2
0x494: V420 = 0x20
0x498: M[0x20] = 0x0
0x499: V421 = 0x40
0x49c: V422 = SHA3 0x0 0x40
0x49d: V423 = 0x1
0x4a0: V424 = ADD V422 0x1
0x4a4: S[V424] = 0x0
0x4a5: V425 = 0x2
0x4a7: V426 = ADD 0x2 V422
0x4a9: V427 = S[V426]
0x4aa: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bf: V429 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4c0: V430 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V427
0x4c2: S[V426] = V430
---
Entry stack: [V10, 0x67, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V10, 0x67, S4, S3, S2]

================================

Block 0x4c3
[0x4c3:0x4c5]
---
Predecessors: [0x1a6, 0x48c]
Successors: [0x61]
---
0x4c3 JUMPDEST
0x4c4 POP
0x4c5 JUMP
---
0x4c3: JUMPDEST 
0x4c5: JUMP S1
---
Entry stack: [V10, 0x67, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x67, S2]

================================

Block 0x4c6
[0x4c6:0x4d4]
---
Predecessors: [0x1ac]
Successors: [0x20a, 0x4d5]
---
0x4c6 JUMPDEST
0x4c7 DUP3
0x4c8 DUP1
0x4c9 ADD
0x4ca PUSH1 0x1
0x4cc ADD
0x4cd DUP6
0x4ce SSTORE
0x4cf DUP3
0x4d0 ISZERO
0x4d1 PUSH2 0x20a
0x4d4 JUMPI
---
0x4c6: JUMPDEST 
0x4c9: V431 = ADD V160 V160
0x4ca: V432 = 0x1
0x4cc: V433 = ADD 0x1 V431
0x4ce: S[V159] = V433
0x4d0: V434 = ISZERO V160
0x4d1: V435 = 0x20a
0x4d4: JUMPI 0x20a V434
---
Entry stack: [V10, 0x61, V123, V159, V177, V160, V162, V157]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x61, V123, V159, V177, V160, V162, V157]

================================

Block 0x4d5
[0x4d5:0x4d7]
---
Predecessors: [0x4c6]
Successors: [0x4d8]
---
0x4d5 SWAP2
0x4d6 DUP3
0x4d7 ADD
---
0x4d7: V436 = ADD V157 V160
---
Entry stack: [V10, 0x61, V123, V159, V177, V160, V162, V157]
Stack pops: 3
Stack additions: [S0, S1, V436]
Exit stack: [V10, 0x61, V123, V159, V177, V157, V162, V436]

================================

Block 0x4d8
[0x4d8:0x4e0]
---
Predecessors: [0x4d5, 0x4e1]
Successors: [0x20a, 0x4e1]
---
0x4d8 JUMPDEST
0x4d9 DUP3
0x4da DUP2
0x4db GT
0x4dc ISZERO
0x4dd PUSH2 0x20a
0x4e0 JUMPI
---
0x4d8: JUMPDEST 
0x4db: V437 = GT V436 S2
0x4dc: V438 = ISZERO V437
0x4dd: V439 = 0x20a
0x4e0: JUMPI 0x20a V438
---
Entry stack: [V10, 0x61, V123, V159, V177, S2, S1, V436]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x61, V123, V159, V177, S2, S1, V436]

================================

Block 0x4e1
[0x4e1:0x4f5]
---
Predecessors: [0x4d8]
Successors: [0x4d8]
---
0x4e1 DUP3
0x4e2 MLOAD
0x4e3 DUP3
0x4e4 PUSH1 0x0
0x4e6 POP
0x4e7 SSTORE
0x4e8 SWAP2
0x4e9 PUSH1 0x20
0x4eb ADD
0x4ec SWAP2
0x4ed SWAP1
0x4ee PUSH1 0x1
0x4f0 ADD
0x4f1 SWAP1
0x4f2 PUSH2 0x4d8
0x4f5 JUMP
---
0x4e2: V440 = M[S2]
0x4e4: V441 = 0x0
0x4e7: S[S1] = V440
0x4e9: V442 = 0x20
0x4eb: V443 = ADD 0x20 S2
0x4ee: V444 = 0x1
0x4f0: V445 = ADD 0x1 S1
0x4f2: V446 = 0x4d8
0x4f5: JUMP 0x4d8
---
Entry stack: [V10, 0x61, V123, V159, V177, S2, S1, V436]
Stack pops: 3
Stack additions: [V443, V445, S0]
Exit stack: [V10, 0x61, V123, V159, V177, V443, V445, V436]

================================

Function 0:
Public function signature: 0x1f7b6d32
Entry block: 0x63
Exit block: 0x67
Body: 0x63, 0x67

Function 1:
Public function signature: 0x303eaeed
Entry block: 0x79
Exit block: 0x329
Body: 0x79, 0xd4, 0xdc, 0x2b4, 0x310, 0x329, 0x42d, 0x43b, 0x44f, 0x458

Function 2:
Public function signature: 0x36555b85
Entry block: 0xef
Exit block: 0x61
Body: 0x61, 0x67, 0xef, 0x152, 0x15c, 0x339, 0x381, 0x38d, 0x395, 0x39e, 0x3a9, 0x3f3, 0x3f9, 0x408, 0x40b, 0x414, 0x429, 0x48c, 0x4c3

Function 3:
Public function signature: 0x4cc82215
Entry block: 0x164
Exit block: 0x67
Body: 0x61, 0x67, 0x164, 0x192, 0x1a6, 0x1ac, 0x1fe, 0x20a, 0x395, 0x39e, 0x3a9, 0x3f3, 0x429, 0x48c, 0x4c3, 0x4c6, 0x4d5, 0x4d8, 0x4e1

Function 4:
Public function signature: 0x588ee29b
Entry block: 0x216
Exit block: 0x216
Body: 0x216

Function 5:
Public function signature: 0x7cd9ffe3
Entry block: 0x247
Exit block: 0x61
Body: 0x61, 0x247, 0x262, 0x2b2

Function 6:
Public function signature: 0x961be391
Entry block: 0x26f
Exit block: 0x61
Body: 0x61, 0x26f, 0x28a, 0x2b2

Function 7:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

