Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x77
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x77
0xa: JUMPI 0x77 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x79]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x19990092
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x79
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x19990092
0x1a: V12 = EQ V10 0x19990092
0x1b: V13 = 0x79
0x1e: JUMPI 0x79 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xa1]
---
0x1f DUP1
0x20 PUSH4 0x3a1d49c1
0x25 EQ
0x26 PUSH2 0xa1
0x29 JUMPI
---
0x20: V14 = 0x3a1d49c1
0x25: V15 = EQ 0x3a1d49c1 V10
0x26: V16 = 0xa1
0x29: JUMPI 0xa1 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xe5]
---
0x2a DUP1
0x2b PUSH4 0x3cc86b80
0x30 EQ
0x31 PUSH2 0xe5
0x34 JUMPI
---
0x2b: V17 = 0x3cc86b80
0x30: V18 = EQ 0x3cc86b80 V10
0x31: V19 = 0xe5
0x34: JUMPI 0xe5 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x12a]
---
0x35 DUP1
0x36 PUSH4 0x6de00927
0x3b EQ
0x3c PUSH2 0x12a
0x3f JUMPI
---
0x36: V20 = 0x6de00927
0x3b: V21 = EQ 0x6de00927 V10
0x3c: V22 = 0x12a
0x3f: JUMPI 0x12a V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x175]
---
0x40 DUP1
0x41 PUSH4 0x71256345
0x46 EQ
0x47 PUSH2 0x175
0x4a JUMPI
---
0x41: V23 = 0x71256345
0x46: V24 = EQ 0x71256345 V10
0x47: V25 = 0x175
0x4a: JUMPI 0x175 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x19e]
---
0x4b DUP1
0x4c PUSH4 0x797fdd7b
0x51 EQ
0x52 PUSH2 0x19e
0x55 JUMPI
---
0x4c: V26 = 0x797fdd7b
0x51: V27 = EQ 0x797fdd7b V10
0x52: V28 = 0x19e
0x55: JUMPI 0x19e V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1c8]
---
0x56 DUP1
0x57 PUSH4 0x8a4c4527
0x5c EQ
0x5d PUSH2 0x1c8
0x60 JUMPI
---
0x57: V29 = 0x8a4c4527
0x5c: V30 = EQ 0x8a4c4527 V10
0x5d: V31 = 0x1c8
0x60: JUMPI 0x1c8 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x211]
---
0x61 DUP1
0x62 PUSH4 0x97dd6d3b
0x67 EQ
0x68 PUSH2 0x211
0x6b JUMPI
---
0x62: V32 = 0x97dd6d3b
0x67: V33 = EQ 0x97dd6d3b V10
0x68: V34 = 0x211
0x6b: JUMPI 0x211 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x27f]
---
0x6c DUP1
0x6d PUSH4 0xe91f2ac1
0x72 EQ
0x73 PUSH2 0x27f
0x76 JUMPI
---
0x6d: V35 = 0xe91f2ac1
0x72: V36 = EQ 0xe91f2ac1 V10
0x73: V37 = 0x27f
0x76: JUMPI 0x27f V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x107, 0x27b, 0x330, 0x46e]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V10, 0x77, V162, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x77, V162, S0]

================================

Block 0x79
[0x79:0x9b]
---
Predecessors: [0xb]
Successors: [0x9c]
---
0x79 JUMPDEST
0x7a PUSH2 0x2a1
0x7d PUSH1 0x4
0x7f CALLDATALOAD
0x80 PUSH1 0x1
0x82 PUSH1 0xa0
0x84 PUSH1 0x2
0x86 EXP
0x87 SUB
0x88 DUP2
0x89 AND
0x8a PUSH1 0x0
0x8c SWAP1
0x8d DUP2
0x8e MSTORE
0x8f PUSH1 0x2
0x91 PUSH1 0x20
0x93 MSTORE
0x94 PUSH1 0x40
0x96 SWAP1
0x97 SHA3
0x98 SLOAD
0x99 PUSH1 0xff
0x9b AND
---
0x79: JUMPDEST 
0x7a: V38 = 0x2a1
0x7d: V39 = 0x4
0x7f: V40 = CALLDATALOAD 0x4
0x80: V41 = 0x1
0x82: V42 = 0xa0
0x84: V43 = 0x2
0x86: V44 = EXP 0x2 0xa0
0x87: V45 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89: V46 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V47 = 0x0
0x8e: M[0x0] = V46
0x8f: V48 = 0x2
0x91: V49 = 0x20
0x93: M[0x20] = 0x2
0x94: V50 = 0x40
0x97: V51 = SHA3 0x0 0x40
0x98: V52 = S[V51]
0x99: V53 = 0xff
0x9b: V54 = AND 0xff V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a1, V40, V54]
Exit stack: [V10, 0x2a1, V40, V54]

================================

Block 0x9c
[0x9c:0xa0]
---
Predecessors: [0x79, 0x27f]
Successors: [0x2a1]
---
0x9c JUMPDEST
0x9d SWAP2
0x9e SWAP1
0x9f POP
0xa0 JUMP
---
0x9c: JUMPDEST 
0xa0: JUMP 0x2a1
---
Entry stack: [V10, 0x2a1, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0xa1
[0xa1:0xa7]
---
Predecessors: [0x1f]
Successors: [0xa8]
---
0xa1 JUMPDEST
0xa2 PUSH2 0x2b3
0xa5 PUSH1 0x4
0xa7 CALLDATALOAD
---
0xa1: JUMPDEST 
0xa2: V55 = 0x2b3
0xa5: V56 = 0x4
0xa7: V57 = CALLDATALOAD 0x4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b3, V57]
Exit stack: [V10, 0x2b3, V57]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0xa1, 0x195, 0x474]
Successors: [0xac]
---
0xa8 JUMPDEST
0xa9 PUSH1 0x0
0xab DUP1
---
0xa8: JUMPDEST 
0xa9: V58 = 0x0
---
Entry stack: [V10, 0x77, V162, S4, {0x0, 0x77}, S2, {0x2b3, 0x2dd, 0x4b2}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x77, V162, S4, {0x0, 0x77}, S2, {0x2b3, 0x2dd, 0x4b2}, S0, 0x0, 0x0]

================================

Block 0xac
[0xac:0xbd]
---
Predecessors: [0xa8, 0x2d5]
Successors: [0xbe, 0x2ca]
---
0xac JUMPDEST
0xad PUSH1 0x0
0xaf SLOAD
0xb0 PUSH1 0xff
0xb2 SWAP1
0xb3 DUP2
0xb4 AND
0xb5 SWAP1
0xb6 DUP3
0xb7 AND
0xb8 LT
0xb9 ISZERO
0xba PUSH2 0x2ca
0xbd JUMPI
---
0xac: JUMPDEST 
0xad: V59 = 0x0
0xaf: V60 = S[0x0]
0xb0: V61 = 0xff
0xb4: V62 = AND 0xff V60
0xb7: V63 = AND S0 0xff
0xb8: V64 = LT V63 V62
0xb9: V65 = ISZERO V64
0xba: V66 = 0x2ca
0xbd: JUMPI 0x2ca V65
---
Entry stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, {0x2b3, 0x2dd, 0x4b2}, S2, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, {0x2b3, 0x2dd, 0x4b2}, S2, 0x0, S0]

================================

Block 0xbe
[0xbe:0xdd]
---
Predecessors: [0xac]
Successors: [0xde, 0x2d5]
---
0xbe PUSH1 0xff
0xc0 DUP2
0xc1 AND
0xc2 PUSH1 0x0
0xc4 SWAP1
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0x1
0xc9 PUSH1 0x20
0xcb MSTORE
0xcc PUSH1 0x40
0xce SWAP1
0xcf SHA3
0xd0 SLOAD
0xd1 PUSH1 0xe0
0xd3 PUSH1 0x2
0xd5 EXP
0xd6 MUL
0xd7 DUP4
0xd8 EQ
0xd9 ISZERO
0xda PUSH2 0x2d5
0xdd JUMPI
---
0xbe: V67 = 0xff
0xc1: V68 = AND S0 0xff
0xc2: V69 = 0x0
0xc6: M[0x0] = V68
0xc7: V70 = 0x1
0xc9: V71 = 0x20
0xcb: M[0x20] = 0x1
0xcc: V72 = 0x40
0xcf: V73 = SHA3 0x0 0x40
0xd0: V74 = S[V73]
0xd1: V75 = 0xe0
0xd3: V76 = 0x2
0xd5: V77 = EXP 0x2 0xe0
0xd6: V78 = MUL 0x100000000000000000000000000000000000000000000000000000000 V74
0xd8: V79 = EQ S2 V78
0xd9: V80 = ISZERO V79
0xda: V81 = 0x2d5
0xdd: JUMPI 0x2d5 V80
---
Entry stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, {0x2b3, 0x2dd, 0x4b2}, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, {0x2b3, 0x2dd, 0x4b2}, S2, 0x0, S0]

================================

Block 0xde
[0xde:0xe4]
---
Predecessors: [0xbe]
Successors: [0x2cf]
---
0xde DUP1
0xdf SWAP2
0xe0 POP
0xe1 PUSH2 0x2cf
0xe4 JUMP
---
0xe1: V82 = 0x2cf
0xe4: JUMP 0x2cf
---
Entry stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, {0x2b3, 0x2dd, 0x4b2}, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, {0x2b3, 0x2dd, 0x4b2}, S2, S0, S0]

================================

Block 0xe5
[0xe5:0x106]
---
Predecessors: [0x2a]
Successors: [0x107, 0x27b]
---
0xe5 JUMPDEST
0xe6 PUSH2 0x77
0xe9 PUSH1 0x4
0xeb CALLDATALOAD
0xec PUSH1 0x24
0xee CALLDATALOAD
0xef PUSH1 0x3
0xf1 SLOAD
0xf2 PUSH1 0x1
0xf4 PUSH1 0xa0
0xf6 PUSH1 0x2
0xf8 EXP
0xf9 SUB
0xfa SWAP1
0xfb DUP2
0xfc AND
0xfd CALLER
0xfe SWAP1
0xff SWAP2
0x100 AND
0x101 EQ
0x102 ISZERO
0x103 PUSH2 0x27b
0x106 JUMPI
---
0xe5: JUMPDEST 
0xe6: V83 = 0x77
0xe9: V84 = 0x4
0xeb: V85 = CALLDATALOAD 0x4
0xec: V86 = 0x24
0xee: V87 = CALLDATALOAD 0x24
0xef: V88 = 0x3
0xf1: V89 = S[0x3]
0xf2: V90 = 0x1
0xf4: V91 = 0xa0
0xf6: V92 = 0x2
0xf8: V93 = EXP 0x2 0xa0
0xf9: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfc: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0xfd: V96 = CALLER
0x100: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x101: V98 = EQ V97 V95
0x102: V99 = ISZERO V98
0x103: V100 = 0x27b
0x106: JUMPI 0x27b V99
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x77, V85, V87]
Exit stack: [V10, 0x77, V85, V87]

================================

Block 0x107
[0x107:0x129]
---
Predecessors: [0xe5]
Successors: [0x77]
---
0x107 PUSH1 0x40
0x109 MLOAD
0x10a PUSH1 0x1
0x10c PUSH1 0xa0
0x10e PUSH1 0x2
0x110 EXP
0x111 SUB
0x112 DUP3
0x113 AND
0x114 SWAP1
0x115 PUSH1 0x0
0x117 SWAP1
0x118 DUP5
0x119 SWAP1
0x11a DUP3
0x11b DUP2
0x11c DUP2
0x11d DUP2
0x11e DUP6
0x11f DUP9
0x120 DUP4
0x121 CALL
0x122 POP
0x123 POP
0x124 POP
0x125 POP
0x126 POP
0x127 POP
0x128 POP
0x129 JUMP
---
0x107: V101 = 0x40
0x109: V102 = M[0x40]
0x10a: V103 = 0x1
0x10c: V104 = 0xa0
0x10e: V105 = 0x2
0x110: V106 = EXP 0x2 0xa0
0x111: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x113: V108 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0x115: V109 = 0x0
0x121: V110 = CALL 0x0 V108 V85 V102 0x0 V102 0x0
0x129: JUMP 0x77
---
Entry stack: [V10, 0x77, V85, V87]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x12a
[0x12a:0x15c]
---
Predecessors: [0x35]
Successors: [0x15d]
---
0x12a JUMPDEST
0x12b PUSH1 0xff
0x12d PUSH1 0x4
0x12f CALLDATALOAD
0x130 AND
0x131 PUSH1 0x0
0x133 SWAP1
0x134 DUP2
0x135 MSTORE
0x136 PUSH1 0x1
0x138 PUSH1 0x20
0x13a SWAP1
0x13b DUP2
0x13c MSTORE
0x13d PUSH1 0x40
0x13f DUP1
0x140 DUP4
0x141 SHA3
0x142 PUSH1 0x1
0x144 PUSH1 0xa0
0x146 PUSH1 0x2
0x148 EXP
0x149 SUB
0x14a PUSH1 0x24
0x14c CALLDATALOAD
0x14d AND
0x14e DUP5
0x14f MSTORE
0x150 PUSH1 0x2
0x152 ADD
0x153 SWAP1
0x154 SWAP2
0x155 MSTORE
0x156 SWAP1
0x157 SHA3
0x158 SLOAD
0x159 PUSH2 0xffff
0x15c AND
---
0x12a: JUMPDEST 
0x12b: V111 = 0xff
0x12d: V112 = 0x4
0x12f: V113 = CALLDATALOAD 0x4
0x130: V114 = AND V113 0xff
0x131: V115 = 0x0
0x135: M[0x0] = V114
0x136: V116 = 0x1
0x138: V117 = 0x20
0x13c: M[0x20] = 0x1
0x13d: V118 = 0x40
0x141: V119 = SHA3 0x0 0x40
0x142: V120 = 0x1
0x144: V121 = 0xa0
0x146: V122 = 0x2
0x148: V123 = EXP 0x2 0xa0
0x149: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14a: V125 = 0x24
0x14c: V126 = CALLDATALOAD 0x24
0x14d: V127 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x14f: M[0x0] = V127
0x150: V128 = 0x2
0x152: V129 = ADD 0x2 V119
0x155: M[0x20] = V129
0x157: V130 = SHA3 0x0 0x40
0x158: V131 = S[V130]
0x159: V132 = 0xffff
0x15c: V133 = AND 0xffff V131
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V133]
Exit stack: [V10, V133]

================================

Block 0x15d
[0x15d:0x174]
---
Predecessors: [0x12a, 0x1c8]
Successors: []
---
0x15d JUMPDEST
0x15e PUSH1 0x40
0x160 DUP1
0x161 MLOAD
0x162 PUSH2 0xffff
0x165 SWAP3
0x166 SWAP1
0x167 SWAP3
0x168 AND
0x169 DUP3
0x16a MSTORE
0x16b MLOAD
0x16c SWAP1
0x16d DUP2
0x16e SWAP1
0x16f SUB
0x170 PUSH1 0x20
0x172 ADD
0x173 SWAP1
0x174 RETURN
---
0x15d: JUMPDEST 
0x15e: V134 = 0x40
0x161: V135 = M[0x40]
0x162: V136 = 0xffff
0x168: V137 = AND 0xffff S0
0x16a: M[V135] = V137
0x16b: V138 = M[0x40]
0x16f: V139 = SUB V135 V138
0x170: V140 = 0x20
0x172: V141 = ADD 0x20 V139
0x174: RETURN V138 V141
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x175
[0x175:0x194]
---
Predecessors: [0x40]
Successors: [0x195, 0x2e4]
---
0x175 JUMPDEST
0x176 PUSH2 0x77
0x179 PUSH1 0x4
0x17b CALLDATALOAD
0x17c PUSH1 0x3
0x17e SLOAD
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 SWAP1
0x188 DUP2
0x189 AND
0x18a CALLER
0x18b SWAP1
0x18c SWAP2
0x18d AND
0x18e EQ
0x18f DUP1
0x190 ISZERO
0x191 PUSH2 0x2e4
0x194 JUMPI
---
0x175: JUMPDEST 
0x176: V142 = 0x77
0x179: V143 = 0x4
0x17b: V144 = CALLDATALOAD 0x4
0x17c: V145 = 0x3
0x17e: V146 = S[0x3]
0x17f: V147 = 0x1
0x181: V148 = 0xa0
0x183: V149 = 0x2
0x185: V150 = EXP 0x2 0xa0
0x186: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x189: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x18a: V153 = CALLER
0x18d: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x18e: V155 = EQ V154 V152
0x190: V156 = ISZERO V155
0x191: V157 = 0x2e4
0x194: JUMPI 0x2e4 V156
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x77, V144, V155]
Exit stack: [V10, 0x77, V144, V155]

================================

Block 0x195
[0x195:0x19d]
---
Predecessors: [0x175]
Successors: [0xa8]
---
0x195 POP
0x196 PUSH2 0x2dd
0x199 DUP2
0x19a PUSH2 0xa8
0x19d JUMP
---
0x196: V158 = 0x2dd
0x19a: V159 = 0xa8
0x19d: JUMP 0xa8
---
Entry stack: [V10, 0x77, V144, V155]
Stack pops: 2
Stack additions: [S1, 0x2dd, S1]
Exit stack: [V10, 0x77, V144, 0x2dd, V144]

================================

Block 0x19e
[0x19e:0x1c3]
---
Predecessors: [0x4b]
Successors: [0x1c4, 0x474]
---
0x19e JUMPDEST
0x19f PUSH2 0x77
0x1a2 PUSH1 0x4
0x1a4 CALLDATALOAD
0x1a5 PUSH1 0x24
0x1a7 CALLDATALOAD
0x1a8 PUSH1 0x3
0x1aa SLOAD
0x1ab PUSH1 0x0
0x1ad SWAP1
0x1ae DUP2
0x1af SWAP1
0x1b0 PUSH1 0x1
0x1b2 PUSH1 0xa0
0x1b4 PUSH1 0x2
0x1b6 EXP
0x1b7 SUB
0x1b8 SWAP1
0x1b9 DUP2
0x1ba AND
0x1bb ORIGIN
0x1bc SWAP1
0x1bd SWAP2
0x1be AND
0x1bf EQ
0x1c0 PUSH2 0x474
0x1c3 JUMPI
---
0x19e: JUMPDEST 
0x19f: V160 = 0x77
0x1a2: V161 = 0x4
0x1a4: V162 = CALLDATALOAD 0x4
0x1a5: V163 = 0x24
0x1a7: V164 = CALLDATALOAD 0x24
0x1a8: V165 = 0x3
0x1aa: V166 = S[0x3]
0x1ab: V167 = 0x0
0x1b0: V168 = 0x1
0x1b2: V169 = 0xa0
0x1b4: V170 = 0x2
0x1b6: V171 = EXP 0x2 0xa0
0x1b7: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ba: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x1bb: V174 = ORIGIN
0x1be: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x1bf: V176 = EQ V175 V173
0x1c0: V177 = 0x474
0x1c3: JUMPI 0x474 V176
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x77, V162, V164, 0x0, 0x0]
Exit stack: [V10, 0x77, V162, V164, 0x0, 0x0]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x19e]
Successors: [0x46e]
---
0x1c4 PUSH2 0x46e
0x1c7 JUMP
---
0x1c4: V178 = 0x46e
0x1c7: JUMP 0x46e
---
Entry stack: [V10, 0x77, V162, V164, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x77, V162, V164, 0x0, 0x0]

================================

Block 0x1c8
[0x1c8:0x210]
---
Predecessors: [0x56]
Successors: [0x15d]
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x44
0x1cb CALLDATALOAD
0x1cc PUSH1 0xff
0x1ce AND
0x1cf PUSH1 0x0
0x1d1 SWAP1
0x1d2 DUP2
0x1d3 MSTORE
0x1d4 PUSH1 0x1
0x1d6 PUSH1 0x20
0x1d8 SWAP1
0x1d9 DUP2
0x1da MSTORE
0x1db PUSH1 0x40
0x1dd DUP1
0x1de DUP4
0x1df SHA3
0x1e0 PUSH1 0x1
0x1e2 PUSH1 0xa0
0x1e4 PUSH1 0x2
0x1e6 EXP
0x1e7 SUB
0x1e8 PUSH1 0x4
0x1ea CALLDATALOAD
0x1eb DUP2
0x1ec AND
0x1ed DUP6
0x1ee MSTORE
0x1ef PUSH1 0x3
0x1f1 SWAP2
0x1f2 SWAP1
0x1f3 SWAP2
0x1f4 ADD
0x1f5 DUP4
0x1f6 MSTORE
0x1f7 DUP2
0x1f8 DUP5
0x1f9 SHA3
0x1fa PUSH1 0x24
0x1fc CALLDATALOAD
0x1fd SWAP2
0x1fe SWAP1
0x1ff SWAP2
0x200 AND
0x201 DUP5
0x202 MSTORE
0x203 SWAP1
0x204 SWAP2
0x205 MSTORE
0x206 SWAP1
0x207 SHA3
0x208 SLOAD
0x209 PUSH2 0xffff
0x20c AND
0x20d PUSH2 0x15d
0x210 JUMP
---
0x1c8: JUMPDEST 
0x1c9: V179 = 0x44
0x1cb: V180 = CALLDATALOAD 0x44
0x1cc: V181 = 0xff
0x1ce: V182 = AND 0xff V180
0x1cf: V183 = 0x0
0x1d3: M[0x0] = V182
0x1d4: V184 = 0x1
0x1d6: V185 = 0x20
0x1da: M[0x20] = 0x1
0x1db: V186 = 0x40
0x1df: V187 = SHA3 0x0 0x40
0x1e0: V188 = 0x1
0x1e2: V189 = 0xa0
0x1e4: V190 = 0x2
0x1e6: V191 = EXP 0x2 0xa0
0x1e7: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e8: V193 = 0x4
0x1ea: V194 = CALLDATALOAD 0x4
0x1ec: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x1ee: M[0x0] = V195
0x1ef: V196 = 0x3
0x1f4: V197 = ADD 0x3 V187
0x1f6: M[0x20] = V197
0x1f9: V198 = SHA3 0x0 0x40
0x1fa: V199 = 0x24
0x1fc: V200 = CALLDATALOAD 0x24
0x200: V201 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x202: M[0x0] = V201
0x205: M[0x20] = V198
0x207: V202 = SHA3 0x0 0x40
0x208: V203 = S[V202]
0x209: V204 = 0xffff
0x20c: V205 = AND 0xffff V203
0x20d: V206 = 0x15d
0x210: JUMP 0x15d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V205]
Exit stack: [V10, V205]

================================

Block 0x211
[0x211:0x233]
---
Predecessors: [0x61]
Successors: [0x234, 0x252]
---
0x211 JUMPDEST
0x212 PUSH2 0x77
0x215 PUSH1 0x4
0x217 CALLDATALOAD
0x218 PUSH1 0x24
0x21a CALLDATALOAD
0x21b PUSH1 0x3
0x21d SLOAD
0x21e PUSH1 0x1
0x220 PUSH1 0xa0
0x222 PUSH1 0x2
0x224 EXP
0x225 SUB
0x226 SWAP1
0x227 DUP2
0x228 AND
0x229 CALLER
0x22a SWAP1
0x22b SWAP2
0x22c AND
0x22d EQ
0x22e DUP1
0x22f ISZERO
0x230 PUSH2 0x252
0x233 JUMPI
---
0x211: JUMPDEST 
0x212: V207 = 0x77
0x215: V208 = 0x4
0x217: V209 = CALLDATALOAD 0x4
0x218: V210 = 0x24
0x21a: V211 = CALLDATALOAD 0x24
0x21b: V212 = 0x3
0x21d: V213 = S[0x3]
0x21e: V214 = 0x1
0x220: V215 = 0xa0
0x222: V216 = 0x2
0x224: V217 = EXP 0x2 0xa0
0x225: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x229: V220 = CALLER
0x22c: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x22d: V222 = EQ V221 V219
0x22f: V223 = ISZERO V222
0x230: V224 = 0x252
0x233: JUMPI 0x252 V223
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x77, V209, V211, V222]
Exit stack: [V10, 0x77, V209, V211, V222]

================================

Block 0x234
[0x234:0x251]
---
Predecessors: [0x211]
Successors: [0x252]
---
0x234 POP
0x235 PUSH1 0x1
0x237 PUSH1 0xa0
0x239 PUSH1 0x2
0x23b EXP
0x23c SUB
0x23d DUP3
0x23e AND
0x23f PUSH1 0x0
0x241 SWAP1
0x242 DUP2
0x243 MSTORE
0x244 PUSH1 0x2
0x246 PUSH1 0x20
0x248 MSTORE
0x249 PUSH1 0x40
0x24b SWAP1
0x24c SHA3
0x24d SLOAD
0x24e PUSH1 0xff
0x250 AND
0x251 ISZERO
---
0x235: V225 = 0x1
0x237: V226 = 0xa0
0x239: V227 = 0x2
0x23b: V228 = EXP 0x2 0xa0
0x23c: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23e: V230 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V231 = 0x0
0x243: M[0x0] = V230
0x244: V232 = 0x2
0x246: V233 = 0x20
0x248: M[0x20] = 0x2
0x249: V234 = 0x40
0x24c: V235 = SHA3 0x0 0x40
0x24d: V236 = S[V235]
0x24e: V237 = 0xff
0x250: V238 = AND 0xff V236
0x251: V239 = ISZERO V238
---
Entry stack: [V10, 0x77, V209, V211, V222]
Stack pops: 3
Stack additions: [S2, S1, V239]
Exit stack: [V10, 0x77, V209, V211, V239]

================================

Block 0x252
[0x252:0x257]
---
Predecessors: [0x211, 0x234]
Successors: [0x258, 0x27b]
---
0x252 JUMPDEST
0x253 ISZERO
0x254 PUSH2 0x27b
0x257 JUMPI
---
0x252: JUMPDEST 
0x253: V240 = ISZERO S0
0x254: V241 = 0x27b
0x257: JUMPI 0x27b V240
---
Entry stack: [V10, 0x77, V209, V211, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x77, V209, V211]

================================

Block 0x258
[0x258:0x27a]
---
Predecessors: [0x252]
Successors: [0x27b]
---
0x258 PUSH1 0x1
0x25a PUSH1 0xa0
0x25c PUSH1 0x2
0x25e EXP
0x25f SUB
0x260 DUP3
0x261 AND
0x262 PUSH1 0x0
0x264 SWAP1
0x265 DUP2
0x266 MSTORE
0x267 PUSH1 0x2
0x269 PUSH1 0x20
0x26b MSTORE
0x26c PUSH1 0x40
0x26e SWAP1
0x26f SHA3
0x270 DUP1
0x271 SLOAD
0x272 PUSH1 0xff
0x274 NOT
0x275 AND
0x276 PUSH1 0x1
0x278 OR
0x279 SWAP1
0x27a SSTORE
---
0x258: V242 = 0x1
0x25a: V243 = 0xa0
0x25c: V244 = 0x2
0x25e: V245 = EXP 0x2 0xa0
0x25f: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x261: V247 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x262: V248 = 0x0
0x266: M[0x0] = V247
0x267: V249 = 0x2
0x269: V250 = 0x20
0x26b: M[0x20] = 0x2
0x26c: V251 = 0x40
0x26f: V252 = SHA3 0x0 0x40
0x271: V253 = S[V252]
0x272: V254 = 0xff
0x274: V255 = NOT 0xff
0x275: V256 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V253
0x276: V257 = 0x1
0x278: V258 = OR 0x1 V256
0x27a: S[V252] = V258
---
Entry stack: [V10, 0x77, V209, V211]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x77, V209, V211]

================================

Block 0x27b
[0x27b:0x27e]
---
Predecessors: [0xe5, 0x252, 0x258]
Successors: [0x77]
---
0x27b JUMPDEST
0x27c POP
0x27d POP
0x27e JUMP
---
0x27b: JUMPDEST 
0x27e: JUMP 0x77
---
Entry stack: [V10, 0x77, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x27f
[0x27f:0x2a0]
---
Predecessors: [0x6c]
Successors: [0x9c]
---
0x27f JUMPDEST
0x280 PUSH2 0x2a1
0x283 PUSH1 0x4
0x285 CALLDATALOAD
0x286 PUSH1 0xff
0x288 DUP2
0x289 AND
0x28a PUSH1 0x0
0x28c SWAP1
0x28d DUP2
0x28e MSTORE
0x28f PUSH1 0x1
0x291 PUSH1 0x20
0x293 DUP2
0x294 SWAP1
0x295 MSTORE
0x296 PUSH1 0x40
0x298 SWAP1
0x299 SWAP2
0x29a SHA3
0x29b ADD
0x29c SLOAD
0x29d PUSH2 0x9c
0x2a0 JUMP
---
0x27f: JUMPDEST 
0x280: V259 = 0x2a1
0x283: V260 = 0x4
0x285: V261 = CALLDATALOAD 0x4
0x286: V262 = 0xff
0x289: V263 = AND V261 0xff
0x28a: V264 = 0x0
0x28e: M[0x0] = V263
0x28f: V265 = 0x1
0x291: V266 = 0x20
0x295: M[0x20] = 0x1
0x296: V267 = 0x40
0x29a: V268 = SHA3 0x0 0x40
0x29b: V269 = ADD V268 0x1
0x29c: V270 = S[V269]
0x29d: V271 = 0x9c
0x2a0: JUMP 0x9c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a1, V261, V270]
Exit stack: [V10, 0x2a1, V261, V270]

================================

Block 0x2a1
[0x2a1:0x2b2]
---
Predecessors: [0x9c]
Successors: []
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x40
0x2a4 DUP1
0x2a5 MLOAD
0x2a6 SWAP2
0x2a7 DUP3
0x2a8 MSTORE
0x2a9 MLOAD
0x2aa SWAP1
0x2ab DUP2
0x2ac SWAP1
0x2ad SUB
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 SWAP1
0x2b2 RETURN
---
0x2a1: JUMPDEST 
0x2a2: V272 = 0x40
0x2a5: V273 = M[0x40]
0x2a8: M[V273] = S0
0x2a9: V274 = M[0x40]
0x2ad: V275 = SUB V273 V274
0x2ae: V276 = 0x20
0x2b0: V277 = ADD 0x20 V275
0x2b2: RETURN V274 V277
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b3
[0x2b3:0x2c9]
---
Predecessors: [0x2cf]
Successors: []
---
0x2b3 JUMPDEST
0x2b4 PUSH1 0x40
0x2b6 DUP1
0x2b7 MLOAD
0x2b8 PUSH1 0xff
0x2ba SWAP3
0x2bb SWAP1
0x2bc SWAP3
0x2bd AND
0x2be DUP3
0x2bf MSTORE
0x2c0 MLOAD
0x2c1 SWAP1
0x2c2 DUP2
0x2c3 SWAP1
0x2c4 SUB
0x2c5 PUSH1 0x20
0x2c7 ADD
0x2c8 SWAP1
0x2c9 RETURN
---
0x2b3: JUMPDEST 
0x2b4: V278 = 0x40
0x2b7: V279 = M[0x40]
0x2b8: V280 = 0xff
0x2bd: V281 = AND 0xff S0
0x2bf: M[V279] = V281
0x2c0: V282 = M[0x40]
0x2c4: V283 = SUB V279 V282
0x2c5: V284 = 0x20
0x2c7: V285 = ADD 0x20 V283
0x2c9: RETURN V282 V285
---
Entry stack: [V10, 0x77, V162, S3, {0x0, 0x77}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x77, V162, S3, {0x0, 0x77}, S1]

================================

Block 0x2ca
[0x2ca:0x2ce]
---
Predecessors: [0xac]
Successors: [0x2cf]
---
0x2ca JUMPDEST
0x2cb PUSH1 0xff
0x2cd SWAP2
0x2ce POP
---
0x2ca: JUMPDEST 
0x2cb: V286 = 0xff
---
Entry stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, {0x2b3, 0x2dd, 0x4b2}, S2, 0x0, S0]
Stack pops: 2
Stack additions: [0xff, S0]
Exit stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, {0x2b3, 0x2dd, 0x4b2}, S2, 0xff, S0]

================================

Block 0x2cf
[0x2cf:0x2d4]
---
Predecessors: [0xde, 0x2ca]
Successors: [0x2b3, 0x2dd, 0x4b2]
---
0x2cf JUMPDEST
0x2d0 POP
0x2d1 SWAP2
0x2d2 SWAP1
0x2d3 POP
0x2d4 JUMP
---
0x2cf: JUMPDEST 
0x2d4: JUMP {0x2b3, 0x2dd, 0x4b2}
---
Entry stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, {0x2b3, 0x2dd, 0x4b2}, S2, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, S1]

================================

Block 0x2d5
[0x2d5:0x2dc]
---
Predecessors: [0xbe]
Successors: [0xac]
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x1
0x2d8 ADD
0x2d9 PUSH2 0xac
0x2dc JUMP
---
0x2d5: JUMPDEST 
0x2d6: V287 = 0x1
0x2d8: V288 = ADD 0x1 S0
0x2d9: V289 = 0xac
0x2dc: JUMP 0xac
---
Entry stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, {0x2b3, 0x2dd, 0x4b2}, S2, 0x0, S0]
Stack pops: 1
Stack additions: [V288]
Exit stack: [V10, 0x77, V162, S6, {0x0, 0x77}, S4, {0x2b3, 0x2dd, 0x4b2}, S2, 0x0, V288]

================================

Block 0x2dd
[0x2dd:0x2e3]
---
Predecessors: [0x2cf]
Successors: [0x2e4]
---
0x2dd JUMPDEST
0x2de PUSH1 0xff
0x2e0 AND
0x2e1 PUSH1 0xff
0x2e3 EQ
---
0x2dd: JUMPDEST 
0x2de: V290 = 0xff
0x2e0: V291 = AND 0xff S0
0x2e1: V292 = 0xff
0x2e3: V293 = EQ 0xff V291
---
Entry stack: [V10, 0x77, V162, S3, {0x0, 0x77}, S1, S0]
Stack pops: 1
Stack additions: [V293]
Exit stack: [V10, 0x77, V162, S3, {0x0, 0x77}, S1, V293]

================================

Block 0x2e4
[0x2e4:0x2e9]
---
Predecessors: [0x175, 0x2dd]
Successors: [0x2ea, 0x330]
---
0x2e4 JUMPDEST
0x2e5 ISZERO
0x2e6 PUSH2 0x330
0x2e9 JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V294 = ISZERO S0
0x2e6: V295 = 0x330
0x2e9: JUMPI 0x330 V294
---
Entry stack: [V10, 0x77, V162, S3, {0x0, 0x77}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x77, V162, S3, {0x0, 0x77}, S1]

================================

Block 0x2ea
[0x2ea:0x32f]
---
Predecessors: [0x2e4]
Successors: [0x330]
---
0x2ea PUSH1 0x0
0x2ec DUP1
0x2ed SLOAD
0x2ee PUSH1 0xff
0x2f0 SWAP1
0x2f1 DUP2
0x2f2 AND
0x2f3 DUP3
0x2f4 MSTORE
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0x20
0x2f9 DUP2
0x2fa SWAP1
0x2fb MSTORE
0x2fc PUSH1 0x40
0x2fe DUP1
0x2ff DUP5
0x300 SHA3
0x301 DUP1
0x302 SLOAD
0x303 PUSH1 0xe0
0x305 PUSH1 0x2
0x307 EXP
0x308 DUP8
0x309 DIV
0x30a PUSH4 0xffffffff
0x30f NOT
0x310 SWAP1
0x311 SWAP2
0x312 AND
0x313 OR
0x314 SWAP1
0x315 SSTORE
0x316 DUP4
0x317 SLOAD
0x318 DUP4
0x319 AND
0x31a DUP5
0x31b MSTORE
0x31c DUP4
0x31d SHA3
0x31e DUP2
0x31f ADD
0x320 DUP4
0x321 SWAP1
0x322 SSTORE
0x323 DUP3
0x324 SLOAD
0x325 PUSH1 0xff
0x327 NOT
0x328 DUP2
0x329 AND
0x32a SWAP3
0x32b AND
0x32c ADD
0x32d OR
0x32e SWAP1
0x32f SSTORE
---
0x2ea: V296 = 0x0
0x2ed: V297 = S[0x0]
0x2ee: V298 = 0xff
0x2f2: V299 = AND 0xff V297
0x2f4: M[0x0] = V299
0x2f5: V300 = 0x1
0x2f7: V301 = 0x20
0x2fb: M[0x20] = 0x1
0x2fc: V302 = 0x40
0x300: V303 = SHA3 0x0 0x40
0x302: V304 = S[V303]
0x303: V305 = 0xe0
0x305: V306 = 0x2
0x307: V307 = EXP 0x2 0xe0
0x309: V308 = DIV S0 0x100000000000000000000000000000000000000000000000000000000
0x30a: V309 = 0xffffffff
0x30f: V310 = NOT 0xffffffff
0x312: V311 = AND V304 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000
0x313: V312 = OR V311 V308
0x315: S[V303] = V312
0x317: V313 = S[0x0]
0x319: V314 = AND 0xff V313
0x31b: M[0x0] = V314
0x31d: V315 = SHA3 0x0 0x40
0x31f: V316 = ADD 0x1 V315
0x322: S[V316] = 0x0
0x324: V317 = S[0x0]
0x325: V318 = 0xff
0x327: V319 = NOT 0xff
0x329: V320 = AND V317 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x32b: V321 = AND 0xff V317
0x32c: V322 = ADD V321 0x1
0x32d: V323 = OR V322 V320
0x32f: S[0x0] = V323
---
Entry stack: [V10, 0x77, V162, S2, {0x0, 0x77}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x77, V162, S2, {0x0, 0x77}, S0]

================================

Block 0x330
[0x330:0x332]
---
Predecessors: [0x2e4, 0x2ea]
Successors: [0x77]
---
0x330 JUMPDEST
0x331 POP
0x332 JUMP
---
0x330: JUMPDEST 
0x332: JUMP {0x0, 0x77}
---
Entry stack: [V10, 0x77, V162, S2, {0x0, 0x77}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x77, V162, S2]

================================

Block 0x333
[0x333:0x3c8]
---
Predecessors: [0x503]
Successors: [0x3c9, 0x3e2]
---
0x333 JUMPDEST
0x334 POP
0x335 PUSH1 0x3
0x337 DUP1
0x338 SLOAD
0x339 PUSH1 0xff
0x33b DUP4
0x33c AND
0x33d PUSH1 0x0
0x33f SWAP1
0x340 DUP2
0x341 MSTORE
0x342 PUSH1 0x1
0x344 PUSH1 0x20
0x346 DUP2
0x347 DUP2
0x348 MSTORE
0x349 PUSH1 0x40
0x34b DUP1
0x34c DUP5
0x34d SHA3
0x34e PUSH21 0xff0000000000000000000000000000000000000000
0x364 NOT
0x365 SWAP6
0x366 DUP7
0x367 AND
0x368 PUSH21 0x20000000000000000000000000000000000000000
0x37e OR
0x37f SWAP1
0x380 SWAP6
0x381 AND
0x382 PUSH21 0x30000000000000000000000000000000000000000
0x398 OR
0x399 SWAP1
0x39a SWAP6
0x39b SSTORE
0x39c SWAP1
0x39d DUP4
0x39e ADD
0x39f DUP1
0x3a0 SLOAD
0x3a1 CALLVALUE
0x3a2 ADD
0x3a3 SWAP1
0x3a4 SSTORE
0x3a5 CALLER
0x3a6 PUSH1 0x1
0x3a8 PUSH1 0xa0
0x3aa PUSH1 0x2
0x3ac EXP
0x3ad SUB
0x3ae AND
0x3af DUP3
0x3b0 MSTORE
0x3b1 PUSH1 0x2
0x3b3 DUP4
0x3b4 ADD
0x3b5 SWAP1
0x3b6 MSTORE
0x3b7 SWAP2
0x3b8 DUP3
0x3b9 SHA3
0x3ba SLOAD
0x3bb SWAP1
0x3bc SWAP2
0x3bd PUSH2 0xffff
0x3c0 SWAP1
0x3c1 SWAP2
0x3c2 AND
0x3c3 EQ
0x3c4 ISZERO
0x3c5 PUSH2 0x3e2
0x3c8 JUMPI
---
0x333: JUMPDEST 
0x335: V324 = 0x3
0x338: V325 = S[0x3]
0x339: V326 = 0xff
0x33c: V327 = AND S1 0xff
0x33d: V328 = 0x0
0x341: M[0x0] = V327
0x342: V329 = 0x1
0x344: V330 = 0x20
0x348: M[0x20] = 0x1
0x349: V331 = 0x40
0x34d: V332 = SHA3 0x0 0x40
0x34e: V333 = 0xff0000000000000000000000000000000000000000
0x364: V334 = NOT 0xff0000000000000000000000000000000000000000
0x367: V335 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V325
0x368: V336 = 0x20000000000000000000000000000000000000000
0x37e: V337 = OR 0x20000000000000000000000000000000000000000 V335
0x381: V338 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V337
0x382: V339 = 0x30000000000000000000000000000000000000000
0x398: V340 = OR 0x30000000000000000000000000000000000000000 V338
0x39b: S[0x3] = V340
0x39e: V341 = ADD V332 0x1
0x3a0: V342 = S[V341]
0x3a1: V343 = CALLVALUE
0x3a2: V344 = ADD V343 V342
0x3a4: S[V341] = V344
0x3a5: V345 = CALLER
0x3a6: V346 = 0x1
0x3a8: V347 = 0xa0
0x3aa: V348 = 0x2
0x3ac: V349 = EXP 0x2 0xa0
0x3ad: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ae: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x3b0: M[0x0] = V351
0x3b1: V352 = 0x2
0x3b4: V353 = ADD V332 0x2
0x3b6: M[0x20] = V353
0x3b9: V354 = SHA3 0x0 0x40
0x3ba: V355 = S[V354]
0x3bd: V356 = 0xffff
0x3c2: V357 = AND V355 0xffff
0x3c3: V358 = EQ V357 0x0
0x3c4: V359 = ISZERO V358
0x3c5: V360 = 0x3e2
0x3c8: JUMPI 0x3e2 V359
---
Entry stack: [V10, 0x77, V162, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V332]
Exit stack: [V10, 0x77, V162, S2, S1, V332]

================================

Block 0x3c9
[0x3c9:0x3e1]
---
Predecessors: [0x333]
Successors: [0x3e2]
---
0x3c9 PUSH1 0x2
0x3cb DUP2
0x3cc ADD
0x3cd PUSH1 0x20
0x3cf MSTORE
0x3d0 PUSH1 0x40
0x3d2 PUSH1 0x0
0x3d4 SHA3
0x3d5 DUP1
0x3d6 SLOAD
0x3d7 PUSH2 0xffff
0x3da NOT
0x3db AND
0x3dc PUSH2 0x3e8
0x3df OR
0x3e0 SWAP1
0x3e1 SSTORE
---
0x3c9: V361 = 0x2
0x3cc: V362 = ADD V332 0x2
0x3cd: V363 = 0x20
0x3cf: M[0x20] = V362
0x3d0: V364 = 0x40
0x3d2: V365 = 0x0
0x3d4: V366 = SHA3 0x0 0x40
0x3d6: V367 = S[V366]
0x3d7: V368 = 0xffff
0x3da: V369 = NOT 0xffff
0x3db: V370 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 V367
0x3dc: V371 = 0x3e8
0x3df: V372 = OR 0x3e8 V370
0x3e1: S[V366] = V372
---
Entry stack: [V10, 0x77, V162, S2, S1, V332]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x77, V162, S2, S1, V332]

================================

Block 0x3e2
[0x3e2:0x407]
---
Predecessors: [0x333, 0x3c9]
Successors: [0x408, 0x430]
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb DUP5
0x3ec AND
0x3ed PUSH1 0x0
0x3ef SWAP1
0x3f0 DUP2
0x3f1 MSTORE
0x3f2 PUSH1 0x2
0x3f4 DUP3
0x3f5 ADD
0x3f6 PUSH1 0x20
0x3f8 MSTORE
0x3f9 PUSH1 0x40
0x3fb DUP2
0x3fc SHA3
0x3fd SLOAD
0x3fe PUSH2 0xffff
0x401 AND
0x402 EQ
0x403 ISZERO
0x404 PUSH2 0x430
0x407 JUMPI
---
0x3e2: JUMPDEST 
0x3e3: V373 = 0x1
0x3e5: V374 = 0xa0
0x3e7: V375 = 0x2
0x3e9: V376 = EXP 0x2 0xa0
0x3ea: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ec: V378 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V379 = 0x0
0x3f1: M[0x0] = V378
0x3f2: V380 = 0x2
0x3f5: V381 = ADD V332 0x2
0x3f6: V382 = 0x20
0x3f8: M[0x20] = V381
0x3f9: V383 = 0x40
0x3fc: V384 = SHA3 0x0 0x40
0x3fd: V385 = S[V384]
0x3fe: V386 = 0xffff
0x401: V387 = AND 0xffff V385
0x402: V388 = EQ V387 0x0
0x403: V389 = ISZERO V388
0x404: V390 = 0x430
0x407: JUMPI 0x430 V389
---
Entry stack: [V10, 0x77, V162, S2, S1, V332]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x77, V162, S2, S1, V332]

================================

Block 0x408
[0x408:0x42f]
---
Predecessors: [0x3e2]
Successors: [0x430]
---
0x408 PUSH1 0x40
0x40a PUSH1 0x0
0x40c SWAP1
0x40d DUP2
0x40e SHA3
0x40f PUSH1 0x1
0x411 PUSH1 0xa0
0x413 PUSH1 0x2
0x415 EXP
0x416 SUB
0x417 DUP7
0x418 AND
0x419 SWAP1
0x41a SWAP2
0x41b MSTORE
0x41c PUSH1 0x2
0x41e DUP3
0x41f ADD
0x420 PUSH1 0x20
0x422 MSTORE
0x423 DUP1
0x424 SLOAD
0x425 PUSH2 0xffff
0x428 NOT
0x429 AND
0x42a PUSH2 0x3e8
0x42d OR
0x42e SWAP1
0x42f SSTORE
---
0x408: V391 = 0x40
0x40a: V392 = 0x0
0x40e: V393 = SHA3 0x0 0x40
0x40f: V394 = 0x1
0x411: V395 = 0xa0
0x413: V396 = 0x2
0x415: V397 = EXP 0x2 0xa0
0x416: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x418: V399 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x41b: M[0x0] = V399
0x41c: V400 = 0x2
0x41f: V401 = ADD V332 0x2
0x420: V402 = 0x20
0x422: M[0x20] = V401
0x424: V403 = S[V393]
0x425: V404 = 0xffff
0x428: V405 = NOT 0xffff
0x429: V406 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 V403
0x42a: V407 = 0x3e8
0x42d: V408 = OR 0x3e8 V406
0x42f: S[V393] = V408
---
Entry stack: [V10, 0x77, V162, S2, S1, V332]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x77, V162, S2, S1, V332]

================================

Block 0x430
[0x430:0x46d]
---
Predecessors: [0x3e2, 0x408]
Successors: [0x46e]
---
0x430 JUMPDEST
0x431 PUSH1 0x1
0x433 PUSH1 0xa0
0x435 PUSH1 0x2
0x437 EXP
0x438 SUB
0x439 DUP5
0x43a DUP2
0x43b AND
0x43c PUSH1 0x0
0x43e SWAP1
0x43f DUP2
0x440 MSTORE
0x441 PUSH1 0x3
0x443 DUP4
0x444 ADD
0x445 PUSH1 0x20
0x447 SWAP1
0x448 DUP2
0x449 MSTORE
0x44a PUSH1 0x40
0x44c DUP1
0x44d DUP4
0x44e SHA3
0x44f CALLER
0x450 SWAP1
0x451 SWAP5
0x452 AND
0x453 DUP4
0x454 MSTORE
0x455 SWAP3
0x456 SWAP1
0x457 MSTORE
0x458 SHA3
0x459 DUP1
0x45a SLOAD
0x45b PUSH2 0xffff
0x45e NOT
0x45f DUP2
0x460 AND
0x461 PUSH2 0xffff
0x464 SWAP2
0x465 SWAP1
0x466 SWAP2
0x467 AND
0x468 PUSH1 0x1
0x46a ADD
0x46b OR
0x46c SWAP1
0x46d SSTORE
---
0x430: JUMPDEST 
0x431: V409 = 0x1
0x433: V410 = 0xa0
0x435: V411 = 0x2
0x437: V412 = EXP 0x2 0xa0
0x438: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43b: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x43c: V415 = 0x0
0x440: M[0x0] = V414
0x441: V416 = 0x3
0x444: V417 = ADD V332 0x3
0x445: V418 = 0x20
0x449: M[0x20] = V417
0x44a: V419 = 0x40
0x44e: V420 = SHA3 0x0 0x40
0x44f: V421 = CALLER
0x452: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x454: M[0x0] = V422
0x457: M[0x20] = V420
0x458: V423 = SHA3 0x0 0x40
0x45a: V424 = S[V423]
0x45b: V425 = 0xffff
0x45e: V426 = NOT 0xffff
0x460: V427 = AND V424 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000
0x461: V428 = 0xffff
0x467: V429 = AND 0xffff V424
0x468: V430 = 0x1
0x46a: V431 = ADD 0x1 V429
0x46b: V432 = OR V431 V427
0x46d: S[V423] = V432
---
Entry stack: [V10, 0x77, V162, S2, S1, V332]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x77, V162, S2, S1, V332]

================================

Block 0x46e
[0x46e:0x473]
---
Predecessors: [0x1c4, 0x430, 0x509]
Successors: [0x77]
---
0x46e JUMPDEST
0x46f POP
0x470 POP
0x471 POP
0x472 POP
0x473 JUMP
---
0x46e: JUMPDEST 
0x473: JUMP 0x77
---
Entry stack: [V10, 0x77, V162, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x474
[0x474:0x4b1]
---
Predecessors: [0x19e]
Successors: [0xa8]
---
0x474 JUMPDEST
0x475 PUSH1 0x3
0x477 DUP1
0x478 SLOAD
0x479 PUSH21 0xff0000000000000000000000000000000000000000
0x48f NOT
0x490 AND
0x491 PUSH21 0x10000000000000000000000000000000000000000
0x4a7 OR
0x4a8 SWAP1
0x4a9 SSTORE
0x4aa PUSH2 0x4b2
0x4ad DUP4
0x4ae PUSH2 0xa8
0x4b1 JUMP
---
0x474: JUMPDEST 
0x475: V433 = 0x3
0x478: V434 = S[0x3]
0x479: V435 = 0xff0000000000000000000000000000000000000000
0x48f: V436 = NOT 0xff0000000000000000000000000000000000000000
0x490: V437 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V434
0x491: V438 = 0x10000000000000000000000000000000000000000
0x4a7: V439 = OR 0x10000000000000000000000000000000000000000 V437
0x4a9: S[0x3] = V439
0x4aa: V440 = 0x4b2
0x4ae: V441 = 0xa8
0x4b1: JUMP 0xa8
---
Entry stack: [V10, 0x77, V162, V164, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x4b2, S2]
Exit stack: [V10, 0x77, V162, V164, 0x0, 0x0, 0x4b2, V164]

================================

Block 0x4b2
[0x4b2:0x4c0]
---
Predecessors: [0x2cf]
Successors: [0x4c1, 0x4df]
---
0x4b2 JUMPDEST
0x4b3 SWAP2
0x4b4 POP
0x4b5 DUP2
0x4b6 PUSH1 0xff
0x4b8 AND
0x4b9 PUSH1 0xff
0x4bb EQ
0x4bc DUP1
0x4bd PUSH2 0x4df
0x4c0 JUMPI
---
0x4b2: JUMPDEST 
0x4b6: V442 = 0xff
0x4b8: V443 = AND 0xff S0
0x4b9: V444 = 0xff
0x4bb: V445 = EQ 0xff V443
0x4bd: V446 = 0x4df
0x4c0: JUMPI 0x4df V445
---
Entry stack: [V10, 0x77, V162, S3, {0x0, 0x77}, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, V445]
Exit stack: [V10, 0x77, V162, S3, S0, S1, V445]

================================

Block 0x4c1
[0x4c1:0x4de]
---
Predecessors: [0x4b2]
Successors: [0x4df]
---
0x4c1 POP
0x4c2 CALLER
0x4c3 PUSH1 0x1
0x4c5 PUSH1 0xa0
0x4c7 PUSH1 0x2
0x4c9 EXP
0x4ca SUB
0x4cb AND
0x4cc PUSH1 0x0
0x4ce SWAP1
0x4cf DUP2
0x4d0 MSTORE
0x4d1 PUSH1 0x2
0x4d3 PUSH1 0x20
0x4d5 MSTORE
0x4d6 PUSH1 0x40
0x4d8 SWAP1
0x4d9 SHA3
0x4da SLOAD
0x4db PUSH1 0xff
0x4dd AND
0x4de ISZERO
---
0x4c2: V447 = CALLER
0x4c3: V448 = 0x1
0x4c5: V449 = 0xa0
0x4c7: V450 = 0x2
0x4c9: V451 = EXP 0x2 0xa0
0x4ca: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cb: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x4cc: V454 = 0x0
0x4d0: M[0x0] = V453
0x4d1: V455 = 0x2
0x4d3: V456 = 0x20
0x4d5: M[0x20] = 0x2
0x4d6: V457 = 0x40
0x4d9: V458 = SHA3 0x0 0x40
0x4da: V459 = S[V458]
0x4db: V460 = 0xff
0x4dd: V461 = AND 0xff V459
0x4de: V462 = ISZERO V461
---
Entry stack: [V10, 0x77, V162, S3, S2, S1, V445]
Stack pops: 1
Stack additions: [V462]
Exit stack: [V10, 0x77, V162, S3, S2, S1, V462]

================================

Block 0x4df
[0x4df:0x4e4]
---
Predecessors: [0x4b2, 0x4c1]
Successors: [0x4e5, 0x503]
---
0x4df JUMPDEST
0x4e0 DUP1
0x4e1 PUSH2 0x503
0x4e4 JUMPI
---
0x4df: JUMPDEST 
0x4e1: V463 = 0x503
0x4e4: JUMPI 0x503 S0
---
Entry stack: [V10, 0x77, V162, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x77, V162, S3, S2, S1, S0]

================================

Block 0x4e5
[0x4e5:0x502]
---
Predecessors: [0x4df]
Successors: [0x503]
---
0x4e5 POP
0x4e6 PUSH1 0x1
0x4e8 PUSH1 0xa0
0x4ea PUSH1 0x2
0x4ec EXP
0x4ed SUB
0x4ee DUP5
0x4ef AND
0x4f0 PUSH1 0x0
0x4f2 SWAP1
0x4f3 DUP2
0x4f4 MSTORE
0x4f5 PUSH1 0x2
0x4f7 PUSH1 0x20
0x4f9 MSTORE
0x4fa PUSH1 0x40
0x4fc SWAP1
0x4fd SHA3
0x4fe SLOAD
0x4ff PUSH1 0xff
0x501 AND
0x502 ISZERO
---
0x4e6: V464 = 0x1
0x4e8: V465 = 0xa0
0x4ea: V466 = 0x2
0x4ec: V467 = EXP 0x2 0xa0
0x4ed: V468 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ef: V469 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x4f0: V470 = 0x0
0x4f4: M[0x0] = V469
0x4f5: V471 = 0x2
0x4f7: V472 = 0x20
0x4f9: M[0x20] = 0x2
0x4fa: V473 = 0x40
0x4fd: V474 = SHA3 0x0 0x40
0x4fe: V475 = S[V474]
0x4ff: V476 = 0xff
0x501: V477 = AND 0xff V475
0x502: V478 = ISZERO V477
---
Entry stack: [V10, 0x77, V162, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V478]
Exit stack: [V10, 0x77, V162, S3, S2, S1, V478]

================================

Block 0x503
[0x503:0x508]
---
Predecessors: [0x4df, 0x4e5]
Successors: [0x333, 0x509]
---
0x503 JUMPDEST
0x504 ISZERO
0x505 PUSH2 0x333
0x508 JUMPI
---
0x503: JUMPDEST 
0x504: V479 = ISZERO S0
0x505: V480 = 0x333
0x508: JUMPI 0x333 V479
---
Entry stack: [V10, 0x77, V162, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x77, V162, S3, S2, S1]

================================

Block 0x509
[0x509:0x50c]
---
Predecessors: [0x503]
Successors: [0x46e]
---
0x509 PUSH2 0x46e
0x50c JUMP
---
0x509: V481 = 0x46e
0x50c: JUMP 0x46e
---
Entry stack: [V10, 0x77, V162, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x77, V162, S2, S1, S0]

================================

Function 0:
Public function signature: 0x19990092
Entry block: 0x79
Exit block: 0x2a1
Body: 0x79, 0x2a1

Function 1:
Public function signature: 0x3a1d49c1
Entry block: 0xa1
Exit block: 0x2b3
Body: 0xa1, 0x2b3

Function 2:
Public function signature: 0x3cc86b80
Entry block: 0xe5
Exit block: 0x77
Body: 0x77, 0xe5, 0x107, 0x27b

Function 3:
Public function signature: 0x6de00927
Entry block: 0x12a
Exit block: 0x15d
Body: 0x12a, 0x15d

Function 4:
Public function signature: 0x71256345
Entry block: 0x175
Exit block: 0x77
Body: 0x77, 0x175, 0x195, 0x2dd, 0x2e4, 0x2ea, 0x330

Function 5:
Public function signature: 0x797fdd7b
Entry block: 0x19e
Exit block: 0x77
Body: 0x77, 0x19e, 0x1c4, 0x333, 0x3c9, 0x3e2, 0x408, 0x430, 0x46e, 0x474, 0x4b2, 0x4c1, 0x4df, 0x4e5, 0x503, 0x509

Function 6:
Public function signature: 0x8a4c4527
Entry block: 0x1c8
Exit block: 0x15d
Body: 0x15d, 0x1c8

Function 7:
Public function signature: 0x97dd6d3b
Entry block: 0x211
Exit block: 0x77
Body: 0x77, 0x211, 0x234, 0x252, 0x258, 0x27b

Function 8:
Public function signature: 0xe91f2ac1
Entry block: 0x27f
Exit block: 0x2a1
Body: 0x27f, 0x2a1

Function 9:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 10:
Private function
Entry block: 0xa8
Exit block: 0x2cf
Body: 0xa8, 0xac, 0xbe, 0xde, 0x2ca, 0x2cf, 0x2d5

