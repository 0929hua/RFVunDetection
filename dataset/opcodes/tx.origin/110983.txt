Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x8f]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x141a468c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x8f
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x141a468c
0x3b: V13 = EQ V11 0x141a468c
0x3c: V14 = 0x8f
0x3f: JUMPI 0x8f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xb9]
---
0x40 DUP1
0x41 PUSH4 0x30676ad8
0x46 EQ
0x47 PUSH2 0xb9
0x4a JUMPI
---
0x41: V15 = 0x30676ad8
0x46: V16 = EQ 0x30676ad8 V11
0x47: V17 = 0xb9
0x4a: JUMPI 0xb9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xcd]
---
0x4b DUP1
0x4c PUSH4 0x6a11455a
0x51 EQ
0x52 PUSH2 0xcd
0x55 JUMPI
---
0x4c: V18 = 0x6a11455a
0x51: V19 = EQ 0x6a11455a V11
0x52: V20 = 0xcd
0x55: JUMPI 0xcd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x101]
---
0x56 DUP1
0x57 PUSH4 0x6d4ce63c
0x5c EQ
0x5d PUSH2 0x101
0x60 JUMPI
---
0x57: V21 = 0x6d4ce63c
0x5c: V22 = EQ 0x6d4ce63c V11
0x5d: V23 = 0x101
0x60: JUMPI 0x101 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x116]
---
0x61 DUP1
0x62 PUSH4 0x806b984f
0x67 EQ
0x68 PUSH2 0x116
0x6b JUMPI
---
0x62: V24 = 0x806b984f
0x67: V25 = EQ 0x806b984f V11
0x68: V26 = 0x116
0x6b: JUMPI 0x116 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x12b]
---
0x6c DUP1
0x6d PUSH4 0x8da5cb5b
0x72 EQ
0x73 PUSH2 0x12b
0x76 JUMPI
---
0x6d: V27 = 0x8da5cb5b
0x72: V28 = EQ 0x8da5cb5b V11
0x73: V29 = 0x12b
0x76: JUMPI 0x12b V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x140]
---
0x77 DUP1
0x78 PUSH4 0x98e76e06
0x7d EQ
0x7e PUSH2 0x140
0x81 JUMPI
---
0x78: V30 = 0x98e76e06
0x7d: V31 = EQ 0x98e76e06 V11
0x7e: V32 = 0x140
0x81: JUMPI 0x140 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x155]
---
0x82 DUP1
0x83 PUSH4 0xc5263b25
0x88 EQ
0x89 PUSH2 0x155
0x8c JUMPI
---
0x83: V33 = 0xc5263b25
0x88: V34 = EQ 0xc5263b25 V11
0x89: V35 = 0x155
0x8c: JUMPI 0x155 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x0, 0x82, 0x637, 0x6c9, 0x88f]
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: [V679, V682, V684, V679, 0x0, V696, 0xcd133c8f, 0x5af3107a4000, V700, 0x0, V689, V702, V689, 0x5af3107a4000, V696, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V679, V682, V684, V679, 0x0, V696, 0xcd133c8f, 0x5af3107a4000, V700, 0x0, V689, V702, V689, 0x5af3107a4000, V696, S0]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0xd]
Successors: [0x97, 0x9b]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 DUP1
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x8f: JUMPDEST 
0x90: V36 = CALLVALUE
0x92: V37 = ISZERO V36
0x93: V38 = 0x9b
0x96: JUMPI 0x9b V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x8f]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V39 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x9b
[0x9b:0xa6]
---
Predecessors: [0x8f]
Successors: [0x16a]
---
0x9b JUMPDEST
0x9c POP
0x9d PUSH2 0xa7
0xa0 PUSH1 0x4
0xa2 CALLDATALOAD
0xa3 PUSH2 0x16a
0xa6 JUMP
---
0x9b: JUMPDEST 
0x9d: V40 = 0xa7
0xa0: V41 = 0x4
0xa2: V42 = CALLDATALOAD 0x4
0xa3: V43 = 0x16a
0xa6: JUMP 0x16a
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0xa7, V42]
Exit stack: [V11, 0xa7, V42]

================================

Block 0xa7
[0xa7:0xb8]
---
Predecessors: [0x178, 0x6cc, 0x6ea]
Successors: []
---
0xa7 JUMPDEST
0xa8 PUSH1 0x40
0xaa DUP1
0xab MLOAD
0xac SWAP2
0xad DUP3
0xae MSTORE
0xaf MLOAD
0xb0 SWAP1
0xb1 DUP2
0xb2 SWAP1
0xb3 SUB
0xb4 PUSH1 0x20
0xb6 ADD
0xb7 SWAP1
0xb8 RETURN
---
0xa7: JUMPDEST 
0xa8: V44 = 0x40
0xab: V45 = M[0x40]
0xae: M[V45] = S0
0xaf: V46 = M[0x40]
0xb3: V47 = SUB V45 V46
0xb4: V48 = 0x20
0xb6: V49 = ADD 0x20 V47
0xb8: RETURN V46 V49
---
Entry stack: [V11, 0xa7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa7]

================================

Block 0xb9
[0xb9:0xcc]
---
Predecessors: [0x40]
Successors: [0x189]
---
0xb9 JUMPDEST
0xba PUSH2 0x8d
0xbd PUSH1 0x1
0xbf PUSH1 0xa0
0xc1 PUSH1 0x2
0xc3 EXP
0xc4 SUB
0xc5 PUSH1 0x4
0xc7 CALLDATALOAD
0xc8 AND
0xc9 PUSH2 0x189
0xcc JUMP
---
0xb9: JUMPDEST 
0xba: V50 = 0x8d
0xbd: V51 = 0x1
0xbf: V52 = 0xa0
0xc1: V53 = 0x2
0xc3: V54 = EXP 0x2 0xa0
0xc4: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5: V56 = 0x4
0xc7: V57 = CALLDATALOAD 0x4
0xc8: V58 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xc9: V59 = 0x189
0xcc: JUMP 0x189
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d, V58]
Exit stack: [V11, 0x8d, V58]

================================

Block 0xcd
[0xcd:0xd4]
---
Predecessors: [0x4b]
Successors: [0xd5, 0xd9]
---
0xcd JUMPDEST
0xce CALLVALUE
0xcf DUP1
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xcd: JUMPDEST 
0xce: V60 = CALLVALUE
0xd0: V61 = ISZERO V60
0xd1: V62 = 0xd9
0xd4: JUMPI 0xd9 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V60]
Exit stack: [V11, V60]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xcd]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V63 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V60]

================================

Block 0xd9
[0xd9:0xe4]
---
Predecessors: [0xcd]
Successors: [0x640]
---
0xd9 JUMPDEST
0xda POP
0xdb PUSH2 0xe5
0xde PUSH1 0x4
0xe0 CALLDATALOAD
0xe1 PUSH2 0x640
0xe4 JUMP
---
0xd9: JUMPDEST 
0xdb: V64 = 0xe5
0xde: V65 = 0x4
0xe0: V66 = CALLDATALOAD 0x4
0xe1: V67 = 0x640
0xe4: JUMP 0x640
---
Entry stack: [V11, V60]
Stack pops: 1
Stack additions: [0xe5, V66]
Exit stack: [V11, 0xe5, V66]

================================

Block 0xe5
[0xe5:0x100]
---
Predecessors: [0x64e, 0x6d2]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 DUP1
0xe9 MLOAD
0xea PUSH1 0x1
0xec PUSH1 0xa0
0xee PUSH1 0x2
0xf0 EXP
0xf1 SUB
0xf2 SWAP1
0xf3 SWAP3
0xf4 AND
0xf5 DUP3
0xf6 MSTORE
0xf7 MLOAD
0xf8 SWAP1
0xf9 DUP2
0xfa SWAP1
0xfb SUB
0xfc PUSH1 0x20
0xfe ADD
0xff SWAP1
0x100 RETURN
---
0xe5: JUMPDEST 
0xe6: V68 = 0x40
0xe9: V69 = M[0x40]
0xea: V70 = 0x1
0xec: V71 = 0xa0
0xee: V72 = 0x2
0xf0: V73 = EXP 0x2 0xa0
0xf1: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4: V75 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xf6: M[V69] = V75
0xf7: V76 = M[0x40]
0xfb: V77 = SUB V69 V76
0xfc: V78 = 0x20
0xfe: V79 = ADD 0x20 V77
0x100: RETURN V76 V79
---
Entry stack: [V11, 0xe5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe5]

================================

Block 0x101
[0x101:0x108]
---
Predecessors: [0x56]
Successors: [0x109, 0x10d]
---
0x101 JUMPDEST
0x102 CALLVALUE
0x103 DUP1
0x104 ISZERO
0x105 PUSH2 0x10d
0x108 JUMPI
---
0x101: JUMPDEST 
0x102: V80 = CALLVALUE
0x104: V81 = ISZERO V80
0x105: V82 = 0x10d
0x108: JUMPI 0x10d V81
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V80]
Exit stack: [V11, V80]

================================

Block 0x109
[0x109:0x10c]
---
Predecessors: [0x101]
Successors: []
---
0x109 PUSH1 0x0
0x10b DUP1
0x10c REVERT
---
0x109: V83 = 0x0
0x10c: REVERT 0x0 0x0
---
Entry stack: [V11, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V80]

================================

Block 0x10d
[0x10d:0x115]
---
Predecessors: [0x101]
Successors: [0x668]
---
0x10d JUMPDEST
0x10e POP
0x10f PUSH2 0x8d
0x112 PUSH2 0x668
0x115 JUMP
---
0x10d: JUMPDEST 
0x10f: V84 = 0x8d
0x112: V85 = 0x668
0x115: JUMP 0x668
---
Entry stack: [V11, V80]
Stack pops: 1
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x116
[0x116:0x11d]
---
Predecessors: [0x61]
Successors: [0x11e, 0x122]
---
0x116 JUMPDEST
0x117 CALLVALUE
0x118 DUP1
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x116: JUMPDEST 
0x117: V86 = CALLVALUE
0x119: V87 = ISZERO V86
0x11a: V88 = 0x122
0x11d: JUMPI 0x122 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V11, V86]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x116]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V89 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V11, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V86]

================================

Block 0x122
[0x122:0x12a]
---
Predecessors: [0x116]
Successors: [0x6cc]
---
0x122 JUMPDEST
0x123 POP
0x124 PUSH2 0xa7
0x127 PUSH2 0x6cc
0x12a JUMP
---
0x122: JUMPDEST 
0x124: V90 = 0xa7
0x127: V91 = 0x6cc
0x12a: JUMP 0x6cc
---
Entry stack: [V11, V86]
Stack pops: 1
Stack additions: [0xa7]
Exit stack: [V11, 0xa7]

================================

Block 0x12b
[0x12b:0x132]
---
Predecessors: [0x6c]
Successors: [0x133, 0x137]
---
0x12b JUMPDEST
0x12c CALLVALUE
0x12d DUP1
0x12e ISZERO
0x12f PUSH2 0x137
0x132 JUMPI
---
0x12b: JUMPDEST 
0x12c: V92 = CALLVALUE
0x12e: V93 = ISZERO V92
0x12f: V94 = 0x137
0x132: JUMPI 0x137 V93
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V92]
Exit stack: [V11, V92]

================================

Block 0x133
[0x133:0x136]
---
Predecessors: [0x12b]
Successors: []
---
0x133 PUSH1 0x0
0x135 DUP1
0x136 REVERT
---
0x133: V95 = 0x0
0x136: REVERT 0x0 0x0
---
Entry stack: [V11, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V92]

================================

Block 0x137
[0x137:0x13f]
---
Predecessors: [0x12b]
Successors: [0x6d2]
---
0x137 JUMPDEST
0x138 POP
0x139 PUSH2 0xe5
0x13c PUSH2 0x6d2
0x13f JUMP
---
0x137: JUMPDEST 
0x139: V96 = 0xe5
0x13c: V97 = 0x6d2
0x13f: JUMP 0x6d2
---
Entry stack: [V11, V92]
Stack pops: 1
Stack additions: [0xe5]
Exit stack: [V11, 0xe5]

================================

Block 0x140
[0x140:0x147]
---
Predecessors: [0x77]
Successors: [0x148, 0x14c]
---
0x140 JUMPDEST
0x141 CALLVALUE
0x142 DUP1
0x143 ISZERO
0x144 PUSH2 0x14c
0x147 JUMPI
---
0x140: JUMPDEST 
0x141: V98 = CALLVALUE
0x143: V99 = ISZERO V98
0x144: V100 = 0x14c
0x147: JUMPI 0x14c V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V11, V98]

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0x140]
Successors: []
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
---
0x148: V101 = 0x0
0x14b: REVERT 0x0 0x0
---
Entry stack: [V11, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V98]

================================

Block 0x14c
[0x14c:0x154]
---
Predecessors: [0x140]
Successors: [0x6ea]
---
0x14c JUMPDEST
0x14d POP
0x14e PUSH2 0xa7
0x151 PUSH2 0x6ea
0x154 JUMP
---
0x14c: JUMPDEST 
0x14e: V102 = 0xa7
0x151: V103 = 0x6ea
0x154: JUMP 0x6ea
---
Entry stack: [V11, V98]
Stack pops: 1
Stack additions: [0xa7]
Exit stack: [V11, 0xa7]

================================

Block 0x155
[0x155:0x15c]
---
Predecessors: [0x82]
Successors: [0x15d, 0x161]
---
0x155 JUMPDEST
0x156 CALLVALUE
0x157 DUP1
0x158 ISZERO
0x159 PUSH2 0x161
0x15c JUMPI
---
0x155: JUMPDEST 
0x156: V104 = CALLVALUE
0x158: V105 = ISZERO V104
0x159: V106 = 0x161
0x15c: JUMPI 0x161 V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V11, V104]

================================

Block 0x15d
[0x15d:0x160]
---
Predecessors: [0x155]
Successors: []
---
0x15d PUSH1 0x0
0x15f DUP1
0x160 REVERT
---
0x15d: V107 = 0x0
0x160: REVERT 0x0 0x0
---
Entry stack: [V11, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V104]

================================

Block 0x161
[0x161:0x169]
---
Predecessors: [0x155]
Successors: [0x6f4]
---
0x161 JUMPDEST
0x162 POP
0x163 PUSH2 0x8d
0x166 PUSH2 0x6f4
0x169 JUMP
---
0x161: JUMPDEST 
0x163: V108 = 0x8d
0x166: V109 = 0x6f4
0x169: JUMP 0x6f4
---
Entry stack: [V11, V104]
Stack pops: 1
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x16a
[0x16a:0x176]
---
Predecessors: [0x9b]
Successors: [0x177, 0x178]
---
0x16a JUMPDEST
0x16b PUSH1 0x1
0x16d DUP1
0x16e SLOAD
0x16f DUP3
0x170 SWAP1
0x171 DUP2
0x172 LT
0x173 PUSH2 0x178
0x176 JUMPI
---
0x16a: JUMPDEST 
0x16b: V110 = 0x1
0x16e: V111 = S[0x1]
0x172: V112 = LT V42 V111
0x173: V113 = 0x178
0x176: JUMPI 0x178 V112
---
Entry stack: [V11, 0xa7, V42]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0xa7, V42, 0x1, V42]

================================

Block 0x177
[0x177:0x177]
---
Predecessors: [0x16a]
Successors: []
---
0x177 INVALID
---
0x177: INVALID 
---
Entry stack: [V11, 0xa7, V42, 0x1, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa7, V42, 0x1, V42]

================================

Block 0x178
[0x178:0x188]
---
Predecessors: [0x16a]
Successors: [0xa7]
---
0x178 JUMPDEST
0x179 PUSH1 0x0
0x17b SWAP2
0x17c DUP3
0x17d MSTORE
0x17e PUSH1 0x20
0x180 SWAP1
0x181 SWAP2
0x182 SHA3
0x183 ADD
0x184 SLOAD
0x185 SWAP1
0x186 POP
0x187 DUP2
0x188 JUMP
---
0x178: JUMPDEST 
0x179: V114 = 0x0
0x17d: M[0x0] = 0x1
0x17e: V115 = 0x20
0x182: V116 = SHA3 0x0 0x20
0x183: V117 = ADD V116 V42
0x184: V118 = S[V117]
0x188: JUMP 0xa7
---
Entry stack: [V11, 0xa7, V42, 0x1, V42]
Stack pops: 4
Stack additions: [S3, V118]
Exit stack: [V11, 0xa7, V118]

================================

Block 0x189
[0x189:0x19d]
---
Predecessors: [0xb9]
Successors: [0x19e, 0x1a2]
---
0x189 JUMPDEST
0x18a PUSH1 0x0
0x18c DUP1
0x18d PUSH1 0x0
0x18f DUP1
0x190 PUSH1 0x0
0x192 DUP1
0x193 PUSH1 0x2
0x195 SLOAD
0x196 NUMBER
0x197 GT
0x198 ISZERO
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x189: JUMPDEST 
0x18a: V119 = 0x0
0x18d: V120 = 0x0
0x190: V121 = 0x0
0x193: V122 = 0x2
0x195: V123 = S[0x2]
0x196: V124 = NUMBER
0x197: V125 = GT V124 V123
0x198: V126 = ISZERO V125
0x199: V127 = ISZERO V126
0x19a: V128 = 0x1a2
0x19d: JUMPI 0x1a2 V127
---
Entry stack: [V11, 0x8d, V58]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x8d, V58, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x189]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V129 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V58, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x1a2
[0x1a2:0x1fe]
---
Predecessors: [0x189]
Successors: [0x1ff, 0x203]
---
0x1a2 JUMPDEST
0x1a3 NUMBER
0x1a4 PUSH1 0x2
0x1a6 DUP2
0x1a7 SWAP1
0x1a8 SSTORE
0x1a9 POP
0x1aa DUP7
0x1ab SWAP6
0x1ac POP
0x1ad DUP6
0x1ae PUSH1 0x1
0x1b0 PUSH1 0xa0
0x1b2 PUSH1 0x2
0x1b4 EXP
0x1b5 SUB
0x1b6 AND
0x1b7 PUSH4 0x913fc3a
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP2
0x1c0 PUSH4 0xffffffff
0x1c5 AND
0x1c6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1e4 MUL
0x1e5 DUP2
0x1e6 MSTORE
0x1e7 PUSH1 0x4
0x1e9 ADD
0x1ea PUSH1 0x20
0x1ec PUSH1 0x40
0x1ee MLOAD
0x1ef DUP1
0x1f0 DUP4
0x1f1 SUB
0x1f2 DUP2
0x1f3 PUSH1 0x0
0x1f5 DUP8
0x1f6 DUP1
0x1f7 EXTCODESIZE
0x1f8 ISZERO
0x1f9 DUP1
0x1fa ISZERO
0x1fb PUSH2 0x203
0x1fe JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V130 = NUMBER
0x1a4: V131 = 0x2
0x1a8: S[0x2] = V130
0x1ae: V132 = 0x1
0x1b0: V133 = 0xa0
0x1b2: V134 = 0x2
0x1b4: V135 = EXP 0x2 0xa0
0x1b5: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b6: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x1b7: V138 = 0x913fc3a
0x1bc: V139 = 0x40
0x1be: V140 = M[0x40]
0x1c0: V141 = 0xffffffff
0x1c5: V142 = AND 0xffffffff 0x913fc3a
0x1c6: V143 = 0x100000000000000000000000000000000000000000000000000000000
0x1e4: V144 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x913fc3a
0x1e6: M[V140] = 0x913fc3a00000000000000000000000000000000000000000000000000000000
0x1e7: V145 = 0x4
0x1e9: V146 = ADD 0x4 V140
0x1ea: V147 = 0x20
0x1ec: V148 = 0x40
0x1ee: V149 = M[0x40]
0x1f1: V150 = SUB V146 V149
0x1f3: V151 = 0x0
0x1f7: V152 = EXTCODESIZE V137
0x1f8: V153 = ISZERO V152
0x1fa: V154 = ISZERO V153
0x1fb: V155 = 0x203
0x1fe: JUMPI 0x203 V154
---
Entry stack: [V11, 0x8d, V58, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S6, S4, S3, S2, S1, S0, V137, 0x913fc3a, V146, 0x20, V149, V150, V149, 0x0, V137, V153]
Exit stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V137, 0x913fc3a, V146, 0x20, V149, V150, V149, 0x0, V137, V153]

================================

Block 0x1ff
[0x1ff:0x202]
---
Predecessors: [0x1a2]
Successors: []
---
0x1ff PUSH1 0x0
0x201 DUP1
0x202 REVERT
---
0x1ff: V156 = 0x0
0x202: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V137, 0x913fc3a, V146, 0x20, V149, V150, V149, 0x0, V137, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V137, 0x913fc3a, V146, 0x20, V149, V150, V149, 0x0, V137, V153]

================================

Block 0x203
[0x203:0x20d]
---
Predecessors: [0x1a2]
Successors: [0x20e, 0x217]
---
0x203 JUMPDEST
0x204 POP
0x205 GAS
0x206 CALL
0x207 ISZERO
0x208 DUP1
0x209 ISZERO
0x20a PUSH2 0x217
0x20d JUMPI
---
0x203: JUMPDEST 
0x205: V157 = GAS
0x206: V158 = CALL V157 V137 0x0 V149 V150 V149 0x20
0x207: V159 = ISZERO V158
0x209: V160 = ISZERO V159
0x20a: V161 = 0x217
0x20d: JUMPI 0x217 V160
---
Entry stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V137, 0x913fc3a, V146, 0x20, V149, V150, V149, 0x0, V137, V153]
Stack pops: 7
Stack additions: [V159]
Exit stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V137, 0x913fc3a, V146, V159]

================================

Block 0x20e
[0x20e:0x216]
---
Predecessors: [0x203]
Successors: []
---
0x20e RETURNDATASIZE
0x20f PUSH1 0x0
0x211 DUP1
0x212 RETURNDATACOPY
0x213 RETURNDATASIZE
0x214 PUSH1 0x0
0x216 REVERT
---
0x20e: V162 = RETURNDATASIZE
0x20f: V163 = 0x0
0x212: RETURNDATACOPY 0x0 0x0 V162
0x213: V164 = RETURNDATASIZE
0x214: V165 = 0x0
0x216: REVERT 0x0 V164
---
Entry stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V137, 0x913fc3a, V146, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V137, 0x913fc3a, V146, V159]

================================

Block 0x217
[0x217:0x228]
---
Predecessors: [0x203]
Successors: [0x229, 0x22d]
---
0x217 JUMPDEST
0x218 POP
0x219 POP
0x21a POP
0x21b POP
0x21c PUSH1 0x40
0x21e MLOAD
0x21f RETURNDATASIZE
0x220 PUSH1 0x20
0x222 DUP2
0x223 LT
0x224 ISZERO
0x225 PUSH2 0x22d
0x228 JUMPI
---
0x217: JUMPDEST 
0x21c: V166 = 0x40
0x21e: V167 = M[0x40]
0x21f: V168 = RETURNDATASIZE
0x220: V169 = 0x20
0x223: V170 = LT V168 0x20
0x224: V171 = ISZERO V170
0x225: V172 = 0x22d
0x228: JUMPI 0x22d V171
---
Entry stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V137, 0x913fc3a, V146, V159]
Stack pops: 4
Stack additions: [V167, V168]
Exit stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V167, V168]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x217]
Successors: []
---
0x229 PUSH1 0x0
0x22b DUP1
0x22c REVERT
---
0x229: V173 = 0x0
0x22c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V167, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V167, V168]

================================

Block 0x22d
[0x22d:0x289]
---
Predecessors: [0x217]
Successors: [0x28a, 0x28e]
---
0x22d JUMPDEST
0x22e POP
0x22f MLOAD
0x230 PUSH1 0x40
0x232 DUP1
0x233 MLOAD
0x234 PUSH32 0x9df9456000000000000000000000000000000000000000000000000000000000
0x255 DUP2
0x256 MSTORE
0x257 SWAP1
0x258 MLOAD
0x259 SWAP2
0x25a SWAP7
0x25b POP
0x25c PUSH1 0x1
0x25e PUSH1 0xa0
0x260 PUSH1 0x2
0x262 EXP
0x263 SUB
0x264 DUP9
0x265 AND
0x266 SWAP2
0x267 PUSH4 0x9df94560
0x26c SWAP2
0x26d PUSH1 0x4
0x26f DUP1
0x270 DUP3
0x271 ADD
0x272 SWAP3
0x273 PUSH1 0x20
0x275 SWAP3
0x276 SWAP1
0x277 SWAP2
0x278 SWAP1
0x279 DUP3
0x27a SWAP1
0x27b SUB
0x27c ADD
0x27d DUP2
0x27e PUSH1 0x0
0x280 DUP8
0x281 DUP1
0x282 EXTCODESIZE
0x283 ISZERO
0x284 DUP1
0x285 ISZERO
0x286 PUSH2 0x28e
0x289 JUMPI
---
0x22d: JUMPDEST 
0x22f: V174 = M[V167]
0x230: V175 = 0x40
0x233: V176 = M[0x40]
0x234: V177 = 0x9df9456000000000000000000000000000000000000000000000000000000000
0x256: M[V176] = 0x9df9456000000000000000000000000000000000000000000000000000000000
0x258: V178 = M[0x40]
0x25c: V179 = 0x1
0x25e: V180 = 0xa0
0x260: V181 = 0x2
0x262: V182 = EXP 0x2 0xa0
0x263: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x265: V184 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0x267: V185 = 0x9df94560
0x26d: V186 = 0x4
0x271: V187 = ADD V176 0x4
0x273: V188 = 0x20
0x27b: V189 = SUB V176 V178
0x27c: V190 = ADD V189 0x4
0x27e: V191 = 0x0
0x282: V192 = EXTCODESIZE V184
0x283: V193 = ISZERO V192
0x285: V194 = ISZERO V193
0x286: V195 = 0x28e
0x289: JUMPI 0x28e V194
---
Entry stack: [V11, 0x8d, V58, V58, 0x0, 0x0, 0x0, 0x0, 0x0, V167, V168]
Stack pops: 8
Stack additions: [S7, V174, S5, S4, S3, S2, V184, 0x9df94560, V187, 0x20, V178, V190, V178, 0x0, V184, V193]
Exit stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V184, 0x9df94560, V187, 0x20, V178, V190, V178, 0x0, V184, V193]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x22d]
Successors: []
---
0x28a PUSH1 0x0
0x28c DUP1
0x28d REVERT
---
0x28a: V196 = 0x0
0x28d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V184, 0x9df94560, V187, 0x20, V178, V190, V178, 0x0, V184, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V184, 0x9df94560, V187, 0x20, V178, V190, V178, 0x0, V184, V193]

================================

Block 0x28e
[0x28e:0x298]
---
Predecessors: [0x22d]
Successors: [0x299, 0x2a2]
---
0x28e JUMPDEST
0x28f POP
0x290 GAS
0x291 CALL
0x292 ISZERO
0x293 DUP1
0x294 ISZERO
0x295 PUSH2 0x2a2
0x298 JUMPI
---
0x28e: JUMPDEST 
0x290: V197 = GAS
0x291: V198 = CALL V197 V184 0x0 V178 V190 V178 0x20
0x292: V199 = ISZERO V198
0x294: V200 = ISZERO V199
0x295: V201 = 0x2a2
0x298: JUMPI 0x2a2 V200
---
Entry stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V184, 0x9df94560, V187, 0x20, V178, V190, V178, 0x0, V184, V193]
Stack pops: 7
Stack additions: [V199]
Exit stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V184, 0x9df94560, V187, V199]

================================

Block 0x299
[0x299:0x2a1]
---
Predecessors: [0x28e]
Successors: []
---
0x299 RETURNDATASIZE
0x29a PUSH1 0x0
0x29c DUP1
0x29d RETURNDATACOPY
0x29e RETURNDATASIZE
0x29f PUSH1 0x0
0x2a1 REVERT
---
0x299: V202 = RETURNDATASIZE
0x29a: V203 = 0x0
0x29d: RETURNDATACOPY 0x0 0x0 V202
0x29e: V204 = RETURNDATASIZE
0x29f: V205 = 0x0
0x2a1: REVERT 0x0 V204
---
Entry stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V184, 0x9df94560, V187, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V184, 0x9df94560, V187, V199]

================================

Block 0x2a2
[0x2a2:0x2b3]
---
Predecessors: [0x28e]
Successors: [0x2b4, 0x2b8]
---
0x2a2 JUMPDEST
0x2a3 POP
0x2a4 POP
0x2a5 POP
0x2a6 POP
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa RETURNDATASIZE
0x2ab PUSH1 0x20
0x2ad DUP2
0x2ae LT
0x2af ISZERO
0x2b0 PUSH2 0x2b8
0x2b3 JUMPI
---
0x2a2: JUMPDEST 
0x2a7: V206 = 0x40
0x2a9: V207 = M[0x40]
0x2aa: V208 = RETURNDATASIZE
0x2ab: V209 = 0x20
0x2ae: V210 = LT V208 0x20
0x2af: V211 = ISZERO V210
0x2b0: V212 = 0x2b8
0x2b3: JUMPI 0x2b8 V211
---
Entry stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V184, 0x9df94560, V187, V199]
Stack pops: 4
Stack additions: [V207, V208]
Exit stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V207, V208]

================================

Block 0x2b4
[0x2b4:0x2b7]
---
Predecessors: [0x2a2]
Successors: []
---
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 REVERT
---
0x2b4: V213 = 0x0
0x2b7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V207, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V207, V208]

================================

Block 0x2b8
[0x2b8:0x2cc]
---
Predecessors: [0x2a2]
Successors: [0x2cd, 0x2d1]
---
0x2b8 JUMPDEST
0x2b9 POP
0x2ba MLOAD
0x2bb SWAP4
0x2bc POP
0x2bd PUSH8 0xde0b6b3a7640000
0x2c6 DUP6
0x2c7 LT
0x2c8 ISZERO
0x2c9 PUSH2 0x2d1
0x2cc JUMPI
---
0x2b8: JUMPDEST 
0x2ba: V214 = M[V207]
0x2bd: V215 = 0xde0b6b3a7640000
0x2c7: V216 = LT V174 0xde0b6b3a7640000
0x2c8: V217 = ISZERO V216
0x2c9: V218 = 0x2d1
0x2cc: JUMPI 0x2d1 V217
---
Entry stack: [V11, 0x8d, V58, V58, V174, 0x0, 0x0, 0x0, 0x0, V207, V208]
Stack pops: 7
Stack additions: [S6, V214, S4, S3, S2]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, 0x0, 0x0, 0x0]

================================

Block 0x2cd
[0x2cd:0x2d0]
---
Predecessors: [0x2b8]
Successors: []
---
0x2cd PUSH1 0x0
0x2cf DUP1
0x2d0 REVERT
---
0x2cd: V219 = 0x0
0x2d0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, 0x0, 0x0, 0x0]

================================

Block 0x2d1
[0x2d1:0x32c]
---
Predecessors: [0x2b8]
Successors: [0x32d]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 SLOAD
0x2d6 SWAP1
0x2d7 POP
0x2d8 SWAP3
0x2d9 POP
0x2da NUMBER
0x2db GASLIMIT
0x2dc TIMESTAMP
0x2dd COINBASE
0x2de PUSH1 0x40
0x2e0 MLOAD
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 DUP1
0x2e5 DUP3
0x2e6 PUSH1 0x1
0x2e8 PUSH1 0xa0
0x2ea PUSH1 0x2
0x2ec EXP
0x2ed SUB
0x2ee AND
0x2ef PUSH1 0x1
0x2f1 PUSH1 0xa0
0x2f3 PUSH1 0x2
0x2f5 EXP
0x2f6 SUB
0x2f7 AND
0x2f8 PUSH13 0x1000000000000000000000000
0x306 MUL
0x307 DUP2
0x308 MSTORE
0x309 PUSH1 0x14
0x30b ADD
0x30c SWAP2
0x30d POP
0x30e POP
0x30f PUSH1 0x40
0x311 MLOAD
0x312 PUSH1 0x20
0x314 DUP2
0x315 DUP4
0x316 SUB
0x317 SUB
0x318 DUP2
0x319 MSTORE
0x31a SWAP1
0x31b PUSH1 0x40
0x31d MSTORE
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP1
0x322 DUP3
0x323 DUP1
0x324 MLOAD
0x325 SWAP1
0x326 PUSH1 0x20
0x328 ADD
0x329 SWAP1
0x32a DUP1
0x32b DUP4
0x32c DUP4
---
0x2d1: JUMPDEST 
0x2d2: V220 = 0x0
0x2d5: V221 = S[0x0]
0x2da: V222 = NUMBER
0x2db: V223 = GASLIMIT
0x2dc: V224 = TIMESTAMP
0x2dd: V225 = COINBASE
0x2de: V226 = 0x40
0x2e0: V227 = M[0x40]
0x2e1: V228 = 0x20
0x2e3: V229 = ADD 0x20 V227
0x2e6: V230 = 0x1
0x2e8: V231 = 0xa0
0x2ea: V232 = 0x2
0x2ec: V233 = EXP 0x2 0xa0
0x2ed: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ee: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x2ef: V236 = 0x1
0x2f1: V237 = 0xa0
0x2f3: V238 = 0x2
0x2f5: V239 = EXP 0x2 0xa0
0x2f6: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f7: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x2f8: V242 = 0x1000000000000000000000000
0x306: V243 = MUL 0x1000000000000000000000000 V241
0x308: M[V229] = V243
0x309: V244 = 0x14
0x30b: V245 = ADD 0x14 V229
0x30f: V246 = 0x40
0x311: V247 = M[0x40]
0x312: V248 = 0x20
0x316: V249 = SUB V245 V247
0x317: V250 = SUB V249 0x20
0x319: M[V247] = V250
0x31b: V251 = 0x40
0x31d: M[0x40] = V245
0x31e: V252 = 0x40
0x320: V253 = M[0x40]
0x324: V254 = M[V247]
0x326: V255 = 0x20
0x328: V256 = ADD 0x20 V247
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V221, S1, S0, V222, V223, V224, V247, V253, V253, V256, V254, V254, V253, V256]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, 0x0, 0x0, V222, V223, V224, V247, V253, V253, V256, V254, V254, V253, V256]

================================

Block 0x32d
[0x32d:0x335]
---
Predecessors: [0x2d1, 0x336]
Successors: [0x336, 0x34c]
---
0x32d JUMPDEST
0x32e PUSH1 0x20
0x330 DUP4
0x331 LT
0x332 PUSH2 0x34c
0x335 JUMPI
---
0x32d: JUMPDEST 
0x32e: V257 = 0x20
0x331: V258 = LT S2 0x20
0x332: V259 = 0x34c
0x335: JUMPI 0x34c V258
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, 0x0, 0x0, V222, V223, V224, V247, V253, V253, V256, V254, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, 0x0, 0x0, V222, V223, V224, V247, V253, V253, V256, V254, S2, S1, S0]

================================

Block 0x336
[0x336:0x34b]
---
Predecessors: [0x32d]
Successors: [0x32d]
---
0x336 DUP1
0x337 MLOAD
0x338 DUP3
0x339 MSTORE
0x33a PUSH1 0x1f
0x33c NOT
0x33d SWAP1
0x33e SWAP3
0x33f ADD
0x340 SWAP2
0x341 PUSH1 0x20
0x343 SWAP2
0x344 DUP3
0x345 ADD
0x346 SWAP2
0x347 ADD
0x348 PUSH2 0x32d
0x34b JUMP
---
0x337: V260 = M[S0]
0x339: M[S1] = V260
0x33a: V261 = 0x1f
0x33c: V262 = NOT 0x1f
0x33f: V263 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x341: V264 = 0x20
0x345: V265 = ADD 0x20 S1
0x347: V266 = ADD 0x20 S0
0x348: V267 = 0x32d
0x34b: JUMP 0x32d
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, 0x0, 0x0, V222, V223, V224, V247, V253, V253, V256, V254, S2, S1, S0]
Stack pops: 3
Stack additions: [V263, V265, V266]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, 0x0, 0x0, V222, V223, V224, V247, V253, V253, V256, V254, V263, V265, V266]

================================

Block 0x34c
[0x34c:0x380]
---
Predecessors: [0x32d]
Successors: [0x381, 0x382]
---
0x34c JUMPDEST
0x34d MLOAD
0x34e DUP2
0x34f MLOAD
0x350 PUSH1 0x20
0x352 SWAP4
0x353 SWAP1
0x354 SWAP4
0x355 SUB
0x356 PUSH2 0x100
0x359 EXP
0x35a PUSH1 0x0
0x35c NOT
0x35d ADD
0x35e DUP1
0x35f NOT
0x360 SWAP1
0x361 SWAP2
0x362 AND
0x363 SWAP3
0x364 AND
0x365 SWAP2
0x366 SWAP1
0x367 SWAP2
0x368 OR
0x369 SWAP1
0x36a MSTORE
0x36b PUSH1 0x40
0x36d MLOAD
0x36e SWAP3
0x36f ADD
0x370 DUP3
0x371 SWAP1
0x372 SUB
0x373 SWAP1
0x374 SWAP2
0x375 SHA3
0x376 SWAP3
0x377 POP
0x378 POP
0x379 POP
0x37a DUP2
0x37b ISZERO
0x37c ISZERO
0x37d PUSH2 0x382
0x380 JUMPI
---
0x34c: JUMPDEST 
0x34d: V268 = M[S0]
0x34f: V269 = M[S1]
0x350: V270 = 0x20
0x355: V271 = SUB 0x20 S2
0x356: V272 = 0x100
0x359: V273 = EXP 0x100 V271
0x35a: V274 = 0x0
0x35c: V275 = NOT 0x0
0x35d: V276 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V273
0x35f: V277 = NOT V276
0x362: V278 = AND V268 V277
0x364: V279 = AND V269 V276
0x368: V280 = OR V279 V278
0x36a: M[S1] = V280
0x36b: V281 = 0x40
0x36d: V282 = M[0x40]
0x36f: V283 = ADD V253 V254
0x372: V284 = SUB V283 V282
0x375: V285 = SHA3 V282 V284
0x37b: V286 = ISZERO V224
0x37c: V287 = ISZERO V286
0x37d: V288 = 0x382
0x380: JUMPI 0x382 V287
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, 0x0, 0x0, V222, V223, V224, V247, V253, V253, V256, V254, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V285]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, 0x0, 0x0, V222, V223, V224, V285]

================================

Block 0x381
[0x381:0x381]
---
Predecessors: [0x34c]
Successors: []
---
0x381 INVALID
---
0x381: INVALID 
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, 0x0, 0x0, V222, V223, V224, V285]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, 0x0, 0x0, V222, V223, V224, V285]

================================

Block 0x382
[0x382:0x38f]
---
Predecessors: [0x34c]
Successors: [0x390]
---
0x382 JUMPDEST
0x383 DIV
0x384 DIFFICULTY
0x385 TIMESTAMP
0x386 ADD
0x387 ADD
0x388 ADD
0x389 ADD
0x38a SWAP2
0x38b POP
0x38c PUSH1 0x0
0x38e SWAP1
0x38f POP
---
0x382: JUMPDEST 
0x383: V289 = DIV V285 V224
0x384: V290 = DIFFICULTY
0x385: V291 = TIMESTAMP
0x386: V292 = ADD V291 V290
0x387: V293 = ADD V292 V289
0x388: V294 = ADD V293 V223
0x389: V295 = ADD V294 V222
0x38c: V296 = 0x0
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, 0x0, 0x0, V222, V223, V224, V285]
Stack pops: 6
Stack additions: [V295, 0x0]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, 0x0]

================================

Block 0x390
[0x390:0x398]
---
Predecessors: [0x382, 0x62f]
Successors: [0x399, 0x637]
---
0x390 JUMPDEST
0x391 DUP3
0x392 DUP2
0x393 LT
0x394 ISZERO
0x395 PUSH2 0x637
0x398 JUMPI
---
0x390: JUMPDEST 
0x393: V297 = LT S0 V221
0x394: V298 = ISZERO V297
0x395: V299 = 0x637
0x398: JUMPI 0x637 V298
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S0]

================================

Block 0x399
[0x399:0x3ae]
---
Predecessors: [0x390]
Successors: [0x3af, 0x3b0]
---
0x399 DUP4
0x39a PUSH2 0x3e8
0x39d TIMESTAMP
0x39e PUSH1 0xd6
0x3a0 PUSH1 0x94
0x3a2 PUSH1 0x0
0x3a4 DUP7
0x3a5 DUP2
0x3a6 SLOAD
0x3a7 DUP2
0x3a8 LT
0x3a9 ISZERO
0x3aa ISZERO
0x3ab PUSH2 0x3b0
0x3ae JUMPI
---
0x39a: V300 = 0x3e8
0x39d: V301 = TIMESTAMP
0x39e: V302 = 0xd6
0x3a0: V303 = 0x94
0x3a2: V304 = 0x0
0x3a6: V305 = S[0x0]
0x3a8: V306 = LT S0 V305
0x3a9: V307 = ISZERO V306
0x3aa: V308 = ISZERO V307
0x3ab: V309 = 0x3b0
0x3ae: JUMPI 0x3b0 V308
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x3e8, V301, 0xd6, 0x94, 0x0, S0]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S0, V214, 0x3e8, V301, 0xd6, 0x94, 0x0, S0]

================================

Block 0x3af
[0x3af:0x3af]
---
Predecessors: [0x399]
Successors: []
---
0x3af INVALID
---
0x3af: INVALID 
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S7, V214, 0x3e8, V301, 0xd6, 0x94, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S7, V214, 0x3e8, V301, 0xd6, 0x94, 0x0, S0]

================================

Block 0x3b0
[0x3b0:0x3d4]
---
Predecessors: [0x399]
Successors: [0x3d5, 0x3d6]
---
0x3b0 JUMPDEST
0x3b1 PUSH1 0x0
0x3b3 SWAP2
0x3b4 DUP3
0x3b5 MSTORE
0x3b6 PUSH1 0x20
0x3b8 SWAP1
0x3b9 SWAP2
0x3ba SHA3
0x3bb ADD
0x3bc SLOAD
0x3bd PUSH1 0x1
0x3bf DUP1
0x3c0 SLOAD
0x3c1 PUSH1 0x1
0x3c3 PUSH1 0xa0
0x3c5 PUSH1 0x2
0x3c7 EXP
0x3c8 SUB
0x3c9 SWAP1
0x3ca SWAP3
0x3cb AND
0x3cc SWAP2
0x3cd DUP9
0x3ce SWAP1
0x3cf DUP2
0x3d0 LT
0x3d1 PUSH2 0x3d6
0x3d4 JUMPI
---
0x3b0: JUMPDEST 
0x3b1: V310 = 0x0
0x3b5: M[0x0] = 0x0
0x3b6: V311 = 0x20
0x3ba: V312 = SHA3 0x0 0x20
0x3bb: V313 = ADD V312 S0
0x3bc: V314 = S[V313]
0x3bd: V315 = 0x1
0x3c0: V316 = S[0x1]
0x3c1: V317 = 0x1
0x3c3: V318 = 0xa0
0x3c5: V319 = 0x2
0x3c7: V320 = EXP 0x2 0xa0
0x3c8: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cb: V322 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V323 = LT S7 V316
0x3d1: V324 = 0x3d6
0x3d4: JUMPI 0x3d6 V323
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S7, V214, 0x3e8, V301, 0xd6, 0x94, 0x0, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V322, 0x1, S7]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S7, V214, 0x3e8, V301, 0xd6, 0x94, V322, 0x1, S7]

================================

Block 0x3d5
[0x3d5:0x3d5]
---
Predecessors: [0x3b0]
Successors: []
---
0x3d5 INVALID
---
0x3d5: INVALID 
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S8, V214, 0x3e8, V301, 0xd6, 0x94, V322, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S8, V214, 0x3e8, V301, 0xd6, 0x94, V322, 0x1, S0]

================================

Block 0x3d6
[0x3d6:0x47c]
---
Predecessors: [0x3b0]
Successors: [0x47d]
---
0x3d6 JUMPDEST
0x3d7 PUSH1 0x0
0x3d9 SWAP2
0x3da DUP3
0x3db MSTORE
0x3dc PUSH1 0x20
0x3de SWAP2
0x3df DUP3
0x3e0 SWAP1
0x3e1 SHA3
0x3e2 ADD
0x3e3 SLOAD
0x3e4 PUSH1 0x40
0x3e6 DUP1
0x3e7 MLOAD
0x3e8 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x409 PUSH1 0xff
0x40b SWAP8
0x40c DUP9
0x40d AND
0x40e DUP2
0x40f MUL
0x410 DUP3
0x411 MSTORE
0x412 SWAP6
0x413 DUP8
0x414 AND
0x415 DUP7
0x416 MUL
0x417 PUSH1 0x1
0x419 DUP3
0x41a ADD
0x41b MSTORE
0x41c PUSH13 0x1000000000000000000000000
0x42a PUSH1 0x1
0x42c PUSH1 0xa0
0x42e PUSH1 0x2
0x430 EXP
0x431 SUB
0x432 SWAP6
0x433 DUP7
0x434 AND
0x435 DUP2
0x436 MUL
0x437 PUSH1 0x2
0x439 DUP4
0x43a ADD
0x43b MSTORE
0x43c SWAP7
0x43d SWAP1
0x43e SWAP3
0x43f AND
0x440 SWAP1
0x441 SWAP5
0x442 MUL
0x443 PUSH1 0x16
0x445 DUP3
0x446 ADD
0x447 MSTORE
0x448 DUP4
0x449 MLOAD
0x44a SWAP1
0x44b DUP2
0x44c SWAP1
0x44d SUB
0x44e PUSH1 0x17
0x450 ADD
0x451 DUP2
0x452 SHA3
0x453 SWAP1
0x454 SWAP3
0x455 AND
0x456 SWAP1
0x457 SWAP4
0x458 MUL
0x459 DUP2
0x45a DUP5
0x45b ADD
0x45c MSTORE
0x45d DUP2
0x45e MLOAD
0x45f DUP1
0x460 DUP3
0x461 SUB
0x462 PUSH1 0x14
0x464 ADD
0x465 DUP2
0x466 MSTORE
0x467 PUSH1 0x34
0x469 SWAP1
0x46a SWAP2
0x46b ADD
0x46c SWAP2
0x46d DUP3
0x46e SWAP1
0x46f MSTORE
0x470 DUP1
0x471 MLOAD
0x472 SWAP1
0x473 SWAP3
0x474 DUP3
0x475 SWAP2
0x476 SWAP1
0x477 DUP5
0x478 ADD
0x479 SWAP1
0x47a DUP1
0x47b DUP4
0x47c DUP4
---
0x3d6: JUMPDEST 
0x3d7: V325 = 0x0
0x3db: M[0x0] = 0x1
0x3dc: V326 = 0x20
0x3e1: V327 = SHA3 0x0 0x20
0x3e2: V328 = ADD V327 S0
0x3e3: V329 = S[V328]
0x3e4: V330 = 0x40
0x3e7: V331 = M[0x40]
0x3e8: V332 = 0x100000000000000000000000000000000000000000000000000000000000000
0x409: V333 = 0xff
0x40d: V334 = AND 0xff 0xd6
0x40f: V335 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xd6
0x411: M[V331] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x414: V336 = AND 0xff 0x94
0x416: V337 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0x417: V338 = 0x1
0x41a: V339 = ADD V331 0x1
0x41b: M[V339] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x41c: V340 = 0x1000000000000000000000000
0x42a: V341 = 0x1
0x42c: V342 = 0xa0
0x42e: V343 = 0x2
0x430: V344 = EXP 0x2 0xa0
0x431: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x434: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x436: V347 = MUL 0x1000000000000000000000000 V346
0x437: V348 = 0x2
0x43a: V349 = ADD V331 0x2
0x43b: M[V349] = V347
0x43f: V350 = AND V329 0xff
0x442: V351 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V350
0x443: V352 = 0x16
0x446: V353 = ADD V331 0x16
0x447: M[V353] = V351
0x449: V354 = M[0x40]
0x44d: V355 = SUB V331 V354
0x44e: V356 = 0x17
0x450: V357 = ADD 0x17 V355
0x452: V358 = SHA3 V354 V357
0x455: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x458: V360 = MUL 0x1000000000000000000000000 V359
0x45b: V361 = ADD 0x20 V354
0x45c: M[V361] = V360
0x45e: V362 = M[0x40]
0x461: V363 = SUB V354 V362
0x462: V364 = 0x14
0x464: V365 = ADD 0x14 V363
0x466: M[V362] = V365
0x467: V366 = 0x34
0x46b: V367 = ADD V354 0x34
0x46f: M[0x40] = V367
0x471: V368 = M[V362]
0x478: V369 = ADD V362 0x20
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S8, V214, 0x3e8, V301, 0xd6, 0x94, V322, 0x1, S0]
Stack pops: 5
Stack additions: [V362, V367, V367, V369, V368, V368, V367, V369]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S8, V214, 0x3e8, V301, V362, V367, V367, V369, V368, V368, V367, V369]

================================

Block 0x47d
[0x47d:0x485]
---
Predecessors: [0x3d6, 0x486]
Successors: [0x486, 0x49c]
---
0x47d JUMPDEST
0x47e PUSH1 0x20
0x480 DUP4
0x481 LT
0x482 PUSH2 0x49c
0x485 JUMPI
---
0x47d: JUMPDEST 
0x47e: V370 = 0x20
0x481: V371 = LT S2 0x20
0x482: V372 = 0x49c
0x485: JUMPI 0x49c V371
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S11, V214, 0x3e8, V301, V362, V367, V367, V369, V368, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S11, V214, 0x3e8, V301, V362, V367, V367, V369, V368, S2, S1, S0]

================================

Block 0x486
[0x486:0x49b]
---
Predecessors: [0x47d]
Successors: [0x47d]
---
0x486 DUP1
0x487 MLOAD
0x488 DUP3
0x489 MSTORE
0x48a PUSH1 0x1f
0x48c NOT
0x48d SWAP1
0x48e SWAP3
0x48f ADD
0x490 SWAP2
0x491 PUSH1 0x20
0x493 SWAP2
0x494 DUP3
0x495 ADD
0x496 SWAP2
0x497 ADD
0x498 PUSH2 0x47d
0x49b JUMP
---
0x487: V373 = M[S0]
0x489: M[S1] = V373
0x48a: V374 = 0x1f
0x48c: V375 = NOT 0x1f
0x48f: V376 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x491: V377 = 0x20
0x495: V378 = ADD 0x20 S1
0x497: V379 = ADD 0x20 S0
0x498: V380 = 0x47d
0x49b: JUMP 0x47d
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S11, V214, 0x3e8, V301, V362, V367, V367, V369, V368, S2, S1, S0]
Stack pops: 3
Stack additions: [V376, V378, V379]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S11, V214, 0x3e8, V301, V362, V367, V367, V369, V368, V376, V378, V379]

================================

Block 0x49c
[0x49c:0x4d0]
---
Predecessors: [0x47d]
Successors: [0x4d1, 0x4d2]
---
0x49c JUMPDEST
0x49d MLOAD
0x49e DUP2
0x49f MLOAD
0x4a0 PUSH1 0x20
0x4a2 SWAP4
0x4a3 SWAP1
0x4a4 SWAP4
0x4a5 SUB
0x4a6 PUSH2 0x100
0x4a9 EXP
0x4aa PUSH1 0x0
0x4ac NOT
0x4ad ADD
0x4ae DUP1
0x4af NOT
0x4b0 SWAP1
0x4b1 SWAP2
0x4b2 AND
0x4b3 SWAP3
0x4b4 AND
0x4b5 SWAP2
0x4b6 SWAP1
0x4b7 SWAP2
0x4b8 OR
0x4b9 SWAP1
0x4ba MSTORE
0x4bb PUSH1 0x40
0x4bd MLOAD
0x4be SWAP3
0x4bf ADD
0x4c0 DUP3
0x4c1 SWAP1
0x4c2 SUB
0x4c3 SWAP1
0x4c4 SWAP2
0x4c5 SHA3
0x4c6 SWAP3
0x4c7 POP
0x4c8 POP
0x4c9 POP
0x4ca DUP2
0x4cb ISZERO
0x4cc ISZERO
0x4cd PUSH2 0x4d2
0x4d0 JUMPI
---
0x49c: JUMPDEST 
0x49d: V381 = M[S0]
0x49f: V382 = M[S1]
0x4a0: V383 = 0x20
0x4a5: V384 = SUB 0x20 S2
0x4a6: V385 = 0x100
0x4a9: V386 = EXP 0x100 V384
0x4aa: V387 = 0x0
0x4ac: V388 = NOT 0x0
0x4ad: V389 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V386
0x4af: V390 = NOT V389
0x4b2: V391 = AND V381 V390
0x4b4: V392 = AND V382 V389
0x4b8: V393 = OR V392 V391
0x4ba: M[S1] = V393
0x4bb: V394 = 0x40
0x4bd: V395 = M[0x40]
0x4bf: V396 = ADD V367 V368
0x4c2: V397 = SUB V396 V395
0x4c5: V398 = SHA3 V395 V397
0x4cb: V399 = ISZERO V301
0x4cc: V400 = ISZERO V399
0x4cd: V401 = 0x4d2
0x4d0: JUMPI 0x4d2 V400
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S11, V214, 0x3e8, V301, V362, V367, V367, V369, V368, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V398]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S11, V214, 0x3e8, V301, V398]

================================

Block 0x4d1
[0x4d1:0x4d1]
---
Predecessors: [0x49c]
Successors: []
---
0x4d1 INVALID
---
0x4d1: INVALID 
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S4, V214, 0x3e8, V301, V398]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S4, V214, 0x3e8, V301, V398]

================================

Block 0x4d2
[0x4d2:0x503]
---
Predecessors: [0x49c]
Successors: [0x504]
---
0x4d2 JUMPDEST
0x4d3 DIV
0x4d4 DUP5
0x4d5 ADD
0x4d6 PUSH1 0x40
0x4d8 MLOAD
0x4d9 PUSH1 0x20
0x4db ADD
0x4dc DUP1
0x4dd DUP3
0x4de DUP2
0x4df MSTORE
0x4e0 PUSH1 0x20
0x4e2 ADD
0x4e3 SWAP2
0x4e4 POP
0x4e5 POP
0x4e6 PUSH1 0x40
0x4e8 MLOAD
0x4e9 PUSH1 0x20
0x4eb DUP2
0x4ec DUP4
0x4ed SUB
0x4ee SUB
0x4ef DUP2
0x4f0 MSTORE
0x4f1 SWAP1
0x4f2 PUSH1 0x40
0x4f4 MSTORE
0x4f5 PUSH1 0x40
0x4f7 MLOAD
0x4f8 DUP1
0x4f9 DUP3
0x4fa DUP1
0x4fb MLOAD
0x4fc SWAP1
0x4fd PUSH1 0x20
0x4ff ADD
0x500 SWAP1
0x501 DUP1
0x502 DUP4
0x503 DUP4
---
0x4d2: JUMPDEST 
0x4d3: V402 = DIV V398 V301
0x4d5: V403 = ADD V295 V402
0x4d6: V404 = 0x40
0x4d8: V405 = M[0x40]
0x4d9: V406 = 0x20
0x4db: V407 = ADD 0x20 V405
0x4df: M[V407] = V403
0x4e0: V408 = 0x20
0x4e2: V409 = ADD 0x20 V407
0x4e6: V410 = 0x40
0x4e8: V411 = M[0x40]
0x4e9: V412 = 0x20
0x4ed: V413 = SUB V409 V411
0x4ee: V414 = SUB V413 0x20
0x4f0: M[V411] = V414
0x4f2: V415 = 0x40
0x4f4: M[0x40] = V409
0x4f5: V416 = 0x40
0x4f7: V417 = M[0x40]
0x4fb: V418 = M[V411]
0x4fd: V419 = 0x20
0x4ff: V420 = ADD 0x20 V411
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S4, V214, 0x3e8, V301, V398]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V411, V417, V417, V420, V418, V418, V417, V420]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S4, V214, 0x3e8, V411, V417, V417, V420, V418, V418, V417, V420]

================================

Block 0x504
[0x504:0x50c]
---
Predecessors: [0x4d2, 0x50d]
Successors: [0x50d, 0x523]
---
0x504 JUMPDEST
0x505 PUSH1 0x20
0x507 DUP4
0x508 LT
0x509 PUSH2 0x523
0x50c JUMPI
---
0x504: JUMPDEST 
0x505: V421 = 0x20
0x508: V422 = LT S2 0x20
0x509: V423 = 0x523
0x50c: JUMPI 0x523 V422
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S10, V214, 0x3e8, V411, V417, V417, V420, V418, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S10, V214, 0x3e8, V411, V417, V417, V420, V418, S2, S1, S0]

================================

Block 0x50d
[0x50d:0x522]
---
Predecessors: [0x504]
Successors: [0x504]
---
0x50d DUP1
0x50e MLOAD
0x50f DUP3
0x510 MSTORE
0x511 PUSH1 0x1f
0x513 NOT
0x514 SWAP1
0x515 SWAP3
0x516 ADD
0x517 SWAP2
0x518 PUSH1 0x20
0x51a SWAP2
0x51b DUP3
0x51c ADD
0x51d SWAP2
0x51e ADD
0x51f PUSH2 0x504
0x522 JUMP
---
0x50e: V424 = M[S0]
0x510: M[S1] = V424
0x511: V425 = 0x1f
0x513: V426 = NOT 0x1f
0x516: V427 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x518: V428 = 0x20
0x51c: V429 = ADD 0x20 S1
0x51e: V430 = ADD 0x20 S0
0x51f: V431 = 0x504
0x522: JUMP 0x504
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S10, V214, 0x3e8, V411, V417, V417, V420, V418, S2, S1, S0]
Stack pops: 3
Stack additions: [V427, V429, V430]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S10, V214, 0x3e8, V411, V417, V417, V420, V418, V427, V429, V430]

================================

Block 0x523
[0x523:0x557]
---
Predecessors: [0x504]
Successors: [0x558, 0x559]
---
0x523 JUMPDEST
0x524 MLOAD
0x525 DUP2
0x526 MLOAD
0x527 PUSH1 0x20
0x529 SWAP4
0x52a SWAP1
0x52b SWAP4
0x52c SUB
0x52d PUSH2 0x100
0x530 EXP
0x531 PUSH1 0x0
0x533 NOT
0x534 ADD
0x535 DUP1
0x536 NOT
0x537 SWAP1
0x538 SWAP2
0x539 AND
0x53a SWAP3
0x53b AND
0x53c SWAP2
0x53d SWAP1
0x53e SWAP2
0x53f OR
0x540 SWAP1
0x541 MSTORE
0x542 PUSH1 0x40
0x544 MLOAD
0x545 SWAP3
0x546 ADD
0x547 DUP3
0x548 SWAP1
0x549 SUB
0x54a SWAP1
0x54b SWAP2
0x54c SHA3
0x54d SWAP3
0x54e POP
0x54f POP
0x550 POP
0x551 DUP2
0x552 ISZERO
0x553 ISZERO
0x554 PUSH2 0x559
0x557 JUMPI
---
0x523: JUMPDEST 
0x524: V432 = M[S0]
0x526: V433 = M[S1]
0x527: V434 = 0x20
0x52c: V435 = SUB 0x20 S2
0x52d: V436 = 0x100
0x530: V437 = EXP 0x100 V435
0x531: V438 = 0x0
0x533: V439 = NOT 0x0
0x534: V440 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V437
0x536: V441 = NOT V440
0x539: V442 = AND V432 V441
0x53b: V443 = AND V433 V440
0x53f: V444 = OR V443 V442
0x541: M[S1] = V444
0x542: V445 = 0x40
0x544: V446 = M[0x40]
0x546: V447 = ADD V417 V418
0x549: V448 = SUB V447 V446
0x54c: V449 = SHA3 V446 V448
0x552: V450 = ISZERO 0x3e8
0x553: V451 = ISZERO 0x0
0x554: V452 = 0x559
0x557: JUMPI 0x559 0x1
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S10, V214, 0x3e8, V411, V417, V417, V420, V418, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V449]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S10, V214, 0x3e8, V449]

================================

Block 0x558
[0x558:0x558]
---
Predecessors: [0x523]
Successors: []
---
0x558 INVALID
---
0x558: INVALID 
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S3, V214, 0x3e8, V449]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S3, V214, 0x3e8, V449]

================================

Block 0x559
[0x559:0x55f]
---
Predecessors: [0x523]
Successors: [0x560, 0x62f]
---
0x559 JUMPDEST
0x55a MOD
0x55b GT
0x55c PUSH2 0x62f
0x55f JUMPI
---
0x559: JUMPDEST 
0x55a: V453 = MOD V449 0x3e8
0x55b: V454 = GT V453 V214
0x55c: V455 = 0x62f
0x55f: JUMPI 0x62f V454
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S3, V214, 0x3e8, V449]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S3]

================================

Block 0x560
[0x560:0x56b]
---
Predecessors: [0x559]
Successors: [0x56c, 0x56d]
---
0x560 PUSH1 0x0
0x562 DUP1
0x563 SLOAD
0x564 DUP3
0x565 SWAP1
0x566 DUP2
0x567 LT
0x568 PUSH2 0x56d
0x56b JUMPI
---
0x560: V456 = 0x0
0x563: V457 = S[0x0]
0x567: V458 = LT S0 V457
0x568: V459 = 0x56d
0x56b: JUMPI 0x56d V458
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S0]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S0, 0x0, S0]

================================

Block 0x56c
[0x56c:0x56c]
---
Predecessors: [0x560]
Successors: []
---
0x56c INVALID
---
0x56c: INVALID 
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S2, 0x0, S0]

================================

Block 0x56d
[0x56d:0x5eb]
---
Predecessors: [0x560]
Successors: [0x5ec, 0x5f0]
---
0x56d JUMPDEST
0x56e PUSH1 0x0
0x570 SWAP2
0x571 DUP3
0x572 MSTORE
0x573 PUSH1 0x20
0x575 DUP3
0x576 SHA3
0x577 ADD
0x578 SLOAD
0x579 PUSH1 0x40
0x57b DUP1
0x57c MLOAD
0x57d PUSH32 0x56f18d2900000000000000000000000000000000000000000000000000000000
0x59e DUP2
0x59f MSTORE
0x5a0 PUSH1 0x1
0x5a2 PUSH1 0xa0
0x5a4 PUSH1 0x2
0x5a6 EXP
0x5a7 SUB
0x5a8 DUP12
0x5a9 DUP2
0x5aa AND
0x5ab PUSH1 0x4
0x5ad DUP4
0x5ae ADD
0x5af MSTORE
0x5b0 PUSH8 0xde0b6b3a7640000
0x5b9 DUP11
0x5ba DIV
0x5bb PUSH1 0x24
0x5bd DUP4
0x5be ADD
0x5bf MSTORE
0x5c0 SWAP2
0x5c1 MLOAD
0x5c2 SWAP2
0x5c3 SWAP1
0x5c4 SWAP3
0x5c5 AND
0x5c6 SWAP3
0x5c7 PUSH4 0x56f18d29
0x5cc SWAP3
0x5cd PUSH6 0x5af3107a4000
0x5d4 SWAP3
0x5d5 PUSH1 0x44
0x5d7 DUP1
0x5d8 DUP4
0x5d9 ADD
0x5da SWAP4
0x5db SWAP3
0x5dc DUP3
0x5dd SWAP1
0x5de SUB
0x5df ADD
0x5e0 DUP2
0x5e1 DUP6
0x5e2 DUP9
0x5e3 DUP1
0x5e4 EXTCODESIZE
0x5e5 ISZERO
0x5e6 DUP1
0x5e7 ISZERO
0x5e8 PUSH2 0x5f0
0x5eb JUMPI
---
0x56d: JUMPDEST 
0x56e: V460 = 0x0
0x572: M[0x0] = 0x0
0x573: V461 = 0x20
0x576: V462 = SHA3 0x0 0x20
0x577: V463 = ADD V462 S0
0x578: V464 = S[V463]
0x579: V465 = 0x40
0x57c: V466 = M[0x40]
0x57d: V467 = 0x56f18d2900000000000000000000000000000000000000000000000000000000
0x59f: M[V466] = 0x56f18d2900000000000000000000000000000000000000000000000000000000
0x5a0: V468 = 0x1
0x5a2: V469 = 0xa0
0x5a4: V470 = 0x2
0x5a6: V471 = EXP 0x2 0xa0
0x5a7: V472 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5aa: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x5ab: V474 = 0x4
0x5ae: V475 = ADD V466 0x4
0x5af: M[V475] = V473
0x5b0: V476 = 0xde0b6b3a7640000
0x5ba: V477 = DIV V174 0xde0b6b3a7640000
0x5bb: V478 = 0x24
0x5be: V479 = ADD V466 0x24
0x5bf: M[V479] = V477
0x5c1: V480 = M[0x40]
0x5c5: V481 = AND V464 0xffffffffffffffffffffffffffffffffffffffff
0x5c7: V482 = 0x56f18d29
0x5cd: V483 = 0x5af3107a4000
0x5d5: V484 = 0x44
0x5d9: V485 = ADD V466 0x44
0x5de: V486 = SUB V466 V480
0x5df: V487 = ADD V486 0x44
0x5e4: V488 = EXTCODESIZE V481
0x5e5: V489 = ISZERO V488
0x5e7: V490 = ISZERO V489
0x5e8: V491 = 0x5f0
0x5eb: JUMPI 0x5f0 V490
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S2, 0x0, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V481, 0x56f18d29, 0x5af3107a4000, V485, 0x0, V480, V487, V480, 0x5af3107a4000, V481, V489]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S2, V481, 0x56f18d29, 0x5af3107a4000, V485, 0x0, V480, V487, V480, 0x5af3107a4000, V481, V489]

================================

Block 0x5ec
[0x5ec:0x5ef]
---
Predecessors: [0x56d]
Successors: []
---
0x5ec PUSH1 0x0
0x5ee DUP1
0x5ef REVERT
---
0x5ec: V492 = 0x0
0x5ef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S11, V481, 0x56f18d29, 0x5af3107a4000, V485, 0x0, V480, V487, V480, 0x5af3107a4000, V481, V489]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S11, V481, 0x56f18d29, 0x5af3107a4000, V485, 0x0, V480, V487, V480, 0x5af3107a4000, V481, V489]

================================

Block 0x5f0
[0x5f0:0x5fa]
---
Predecessors: [0x56d]
Successors: [0x5fb, 0x604]
---
0x5f0 JUMPDEST
0x5f1 POP
0x5f2 GAS
0x5f3 CALL
0x5f4 ISZERO
0x5f5 DUP1
0x5f6 ISZERO
0x5f7 PUSH2 0x604
0x5fa JUMPI
---
0x5f0: JUMPDEST 
0x5f2: V493 = GAS
0x5f3: V494 = CALL V493 V481 0x5af3107a4000 V480 V487 V480 0x0
0x5f4: V495 = ISZERO V494
0x5f6: V496 = ISZERO V495
0x5f7: V497 = 0x604
0x5fa: JUMPI 0x604 V496
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S11, V481, 0x56f18d29, 0x5af3107a4000, V485, 0x0, V480, V487, V480, 0x5af3107a4000, V481, V489]
Stack pops: 7
Stack additions: [V495]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S11, V481, 0x56f18d29, 0x5af3107a4000, V485, V495]

================================

Block 0x5fb
[0x5fb:0x603]
---
Predecessors: [0x5f0]
Successors: []
---
0x5fb RETURNDATASIZE
0x5fc PUSH1 0x0
0x5fe DUP1
0x5ff RETURNDATACOPY
0x600 RETURNDATASIZE
0x601 PUSH1 0x0
0x603 REVERT
---
0x5fb: V498 = RETURNDATASIZE
0x5fc: V499 = 0x0
0x5ff: RETURNDATACOPY 0x0 0x0 V498
0x600: V500 = RETURNDATASIZE
0x601: V501 = 0x0
0x603: REVERT 0x0 V500
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S5, V481, 0x56f18d29, 0x5af3107a4000, V485, V495]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S5, V481, 0x56f18d29, 0x5af3107a4000, V485, V495]

================================

Block 0x604
[0x604:0x616]
---
Predecessors: [0x5f0]
Successors: [0x617, 0x618]
---
0x604 JUMPDEST
0x605 POP
0x606 POP
0x607 POP
0x608 POP
0x609 POP
0x60a PUSH1 0x1
0x60c DUP2
0x60d DUP2
0x60e SLOAD
0x60f DUP2
0x610 LT
0x611 ISZERO
0x612 ISZERO
0x613 PUSH2 0x618
0x616 JUMPI
---
0x604: JUMPDEST 
0x60a: V502 = 0x1
0x60e: V503 = S[0x1]
0x610: V504 = LT S5 V503
0x611: V505 = ISZERO V504
0x612: V506 = ISZERO V505
0x613: V507 = 0x618
0x616: JUMPI 0x618 V506
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S5, V481, 0x56f18d29, 0x5af3107a4000, V485, V495]
Stack pops: 6
Stack additions: [S5, 0x1, S5]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S5, 0x1, S5]

================================

Block 0x617
[0x617:0x617]
---
Predecessors: [0x604]
Successors: []
---
0x617 INVALID
---
0x617: INVALID 
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S2, 0x1, S0]

================================

Block 0x618
[0x618:0x62e]
---
Predecessors: [0x604]
Successors: [0x637]
---
0x618 JUMPDEST
0x619 PUSH1 0x0
0x61b SWAP2
0x61c DUP3
0x61d MSTORE
0x61e PUSH1 0x20
0x620 SWAP1
0x621 SWAP2
0x622 SHA3
0x623 ADD
0x624 DUP1
0x625 SLOAD
0x626 PUSH1 0x1
0x628 ADD
0x629 SWAP1
0x62a SSTORE
0x62b PUSH2 0x637
0x62e JUMP
---
0x618: JUMPDEST 
0x619: V508 = 0x0
0x61d: M[0x0] = 0x1
0x61e: V509 = 0x20
0x622: V510 = SHA3 0x0 0x20
0x623: V511 = ADD V510 S0
0x625: V512 = S[V511]
0x626: V513 = 0x1
0x628: V514 = ADD 0x1 V512
0x62a: S[V511] = V514
0x62b: V515 = 0x637
0x62e: JUMP 0x637
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S2, 0x1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S2]

================================

Block 0x62f
[0x62f:0x636]
---
Predecessors: [0x559]
Successors: [0x390]
---
0x62f JUMPDEST
0x630 PUSH1 0x1
0x632 ADD
0x633 PUSH2 0x390
0x636 JUMP
---
0x62f: JUMPDEST 
0x630: V516 = 0x1
0x632: V517 = ADD 0x1 S0
0x633: V518 = 0x390
0x636: JUMP 0x390
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S0]
Stack pops: 1
Stack additions: [V517]
Exit stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, V517]

================================

Block 0x637
[0x637:0x63f]
---
Predecessors: [0x390, 0x618]
Successors: [0x8d]
---
0x637 JUMPDEST
0x638 POP
0x639 POP
0x63a POP
0x63b POP
0x63c POP
0x63d POP
0x63e POP
0x63f JUMP
---
0x637: JUMPDEST 
0x63f: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V58, V58, V174, V214, V221, V295, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x640
[0x640:0x64c]
---
Predecessors: [0xd9]
Successors: [0x64d, 0x64e]
---
0x640 JUMPDEST
0x641 PUSH1 0x0
0x643 DUP1
0x644 SLOAD
0x645 DUP3
0x646 SWAP1
0x647 DUP2
0x648 LT
0x649 PUSH2 0x64e
0x64c JUMPI
---
0x640: JUMPDEST 
0x641: V519 = 0x0
0x644: V520 = S[0x0]
0x648: V521 = LT V66 V520
0x649: V522 = 0x64e
0x64c: JUMPI 0x64e V521
---
Entry stack: [V11, 0xe5, V66]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V11, 0xe5, V66, 0x0, V66]

================================

Block 0x64d
[0x64d:0x64d]
---
Predecessors: [0x640]
Successors: []
---
0x64d INVALID
---
0x64d: INVALID 
---
Entry stack: [V11, 0xe5, V66, 0x0, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe5, V66, 0x0, V66]

================================

Block 0x64e
[0x64e:0x667]
---
Predecessors: [0x640]
Successors: [0xe5]
---
0x64e JUMPDEST
0x64f PUSH1 0x0
0x651 SWAP2
0x652 DUP3
0x653 MSTORE
0x654 PUSH1 0x20
0x656 SWAP1
0x657 SWAP2
0x658 SHA3
0x659 ADD
0x65a SLOAD
0x65b PUSH1 0x1
0x65d PUSH1 0xa0
0x65f PUSH1 0x2
0x661 EXP
0x662 SUB
0x663 AND
0x664 SWAP1
0x665 POP
0x666 DUP2
0x667 JUMP
---
0x64e: JUMPDEST 
0x64f: V523 = 0x0
0x653: M[0x0] = 0x0
0x654: V524 = 0x20
0x658: V525 = SHA3 0x0 0x20
0x659: V526 = ADD V525 V66
0x65a: V527 = S[V526]
0x65b: V528 = 0x1
0x65d: V529 = 0xa0
0x65f: V530 = 0x2
0x661: V531 = EXP 0x2 0xa0
0x662: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x663: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x667: JUMP 0xe5
---
Entry stack: [V11, 0xe5, V66, 0x0, V66]
Stack pops: 4
Stack additions: [S3, V533]
Exit stack: [V11, 0xe5, V533]

================================

Block 0x668
[0x668:0x683]
---
Predecessors: [0x10d]
Successors: [0x684, 0x688]
---
0x668 JUMPDEST
0x669 CALLER
0x66a PUSH20 0xc1a065a2d29995692735c82d228b63df1732030e
0x67f EQ
0x680 PUSH2 0x688
0x683 JUMPI
---
0x668: JUMPDEST 
0x669: V534 = CALLER
0x66a: V535 = 0xc1a065a2d29995692735c82d228b63df1732030e
0x67f: V536 = EQ 0xc1a065a2d29995692735c82d228b63df1732030e V534
0x680: V537 = 0x688
0x683: JUMPI 0x688 V536
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x684
[0x684:0x687]
---
Predecessors: [0x668]
Successors: []
---
0x684 PUSH1 0x0
0x686 DUP1
0x687 REVERT
---
0x684: V538 = 0x0
0x687: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x688
[0x688:0x6bf]
---
Predecessors: [0x668]
Successors: [0x6c0, 0x6c9]
---
0x688 JUMPDEST
0x689 PUSH1 0x40
0x68b MLOAD
0x68c PUSH20 0xc1a065a2d29995692735c82d228b63df1732030e
0x6a1 SWAP1
0x6a2 ADDRESS
0x6a3 BALANCE
0x6a4 DUP1
0x6a5 ISZERO
0x6a6 PUSH2 0x8fc
0x6a9 MUL
0x6aa SWAP2
0x6ab PUSH1 0x0
0x6ad DUP2
0x6ae DUP2
0x6af DUP2
0x6b0 DUP6
0x6b1 DUP9
0x6b2 DUP9
0x6b3 CALL
0x6b4 SWAP4
0x6b5 POP
0x6b6 POP
0x6b7 POP
0x6b8 POP
0x6b9 ISZERO
0x6ba DUP1
0x6bb ISZERO
0x6bc PUSH2 0x6c9
0x6bf JUMPI
---
0x688: JUMPDEST 
0x689: V539 = 0x40
0x68b: V540 = M[0x40]
0x68c: V541 = 0xc1a065a2d29995692735c82d228b63df1732030e
0x6a2: V542 = ADDRESS
0x6a3: V543 = BALANCE V542
0x6a5: V544 = ISZERO V543
0x6a6: V545 = 0x8fc
0x6a9: V546 = MUL 0x8fc V544
0x6ab: V547 = 0x0
0x6b3: V548 = CALL V546 0xc1a065a2d29995692735c82d228b63df1732030e V543 V540 0x0 V540 0x0
0x6b9: V549 = ISZERO V548
0x6bb: V550 = ISZERO V549
0x6bc: V551 = 0x6c9
0x6bf: JUMPI 0x6c9 V550
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [V549]
Exit stack: [V11, 0x8d, V549]

================================

Block 0x6c0
[0x6c0:0x6c8]
---
Predecessors: [0x688]
Successors: []
---
0x6c0 RETURNDATASIZE
0x6c1 PUSH1 0x0
0x6c3 DUP1
0x6c4 RETURNDATACOPY
0x6c5 RETURNDATASIZE
0x6c6 PUSH1 0x0
0x6c8 REVERT
---
0x6c0: V552 = RETURNDATASIZE
0x6c1: V553 = 0x0
0x6c4: RETURNDATACOPY 0x0 0x0 V552
0x6c5: V554 = RETURNDATASIZE
0x6c6: V555 = 0x0
0x6c8: REVERT 0x0 V554
---
Entry stack: [V11, 0x8d, V549]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V549]

================================

Block 0x6c9
[0x6c9:0x6cb]
---
Predecessors: [0x688, 0x6f7]
Successors: [0x8d]
---
0x6c9 JUMPDEST
0x6ca POP
0x6cb JUMP
---
0x6c9: JUMPDEST 
0x6cb: JUMP 0x8d
---
Entry stack: [V11, 0x8d, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x6cc
[0x6cc:0x6d1]
---
Predecessors: [0x122]
Successors: [0xa7]
---
0x6cc JUMPDEST
0x6cd PUSH1 0x2
0x6cf SLOAD
0x6d0 DUP2
0x6d1 JUMP
---
0x6cc: JUMPDEST 
0x6cd: V556 = 0x2
0x6cf: V557 = S[0x2]
0x6d1: JUMP 0xa7
---
Entry stack: [V11, 0xa7]
Stack pops: 1
Stack additions: [S0, V557]
Exit stack: [V11, 0xa7, V557]

================================

Block 0x6d2
[0x6d2:0x6e9]
---
Predecessors: [0x137]
Successors: [0xe5]
---
0x6d2 JUMPDEST
0x6d3 PUSH20 0xc1a065a2d29995692735c82d228b63df1732030e
0x6e8 DUP2
0x6e9 JUMP
---
0x6d2: JUMPDEST 
0x6d3: V558 = 0xc1a065a2d29995692735c82d228b63df1732030e
0x6e9: JUMP 0xe5
---
Entry stack: [V11, 0xe5]
Stack pops: 1
Stack additions: [S0, 0xc1a065a2d29995692735c82d228b63df1732030e]
Exit stack: [V11, 0xe5, 0xc1a065a2d29995692735c82d228b63df1732030e]

================================

Block 0x6ea
[0x6ea:0x6f3]
---
Predecessors: [0x14c]
Successors: [0xa7]
---
0x6ea JUMPDEST
0x6eb PUSH6 0x5af3107a4000
0x6f2 DUP2
0x6f3 JUMP
---
0x6ea: JUMPDEST 
0x6eb: V559 = 0x5af3107a4000
0x6f3: JUMP 0xa7
---
Entry stack: [V11, 0xa7]
Stack pops: 1
Stack additions: [S0, 0x5af3107a4000]
Exit stack: [V11, 0xa7, 0x5af3107a4000]

================================

Block 0x6f4
[0x6f4:0x6f6]
---
Predecessors: [0x161]
Successors: [0x6f7]
---
0x6f4 JUMPDEST
0x6f5 PUSH1 0x0
---
0x6f4: JUMPDEST 
0x6f5: V560 = 0x0
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x8d, 0x0]

================================

Block 0x6f7
[0x6f7:0x700]
---
Predecessors: [0x6f4, 0x726]
Successors: [0x6c9, 0x701]
---
0x6f7 JUMPDEST
0x6f8 PUSH1 0x14
0x6fa DUP2
0x6fb LT
0x6fc ISZERO
0x6fd PUSH2 0x6c9
0x700 JUMPI
---
0x6f7: JUMPDEST 
0x6f8: V561 = 0x14
0x6fb: V562 = LT S0 0x14
0x6fc: V563 = ISZERO V562
0x6fd: V564 = 0x6c9
0x700: JUMPI 0x6c9 V563
---
Entry stack: [V11, 0x8d, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x8d, S0]

================================

Block 0x701
[0x701:0x709]
---
Predecessors: [0x6f7]
Successors: [0x7a0]
---
0x701 PUSH1 0x0
0x703 PUSH2 0x70a
0x706 PUSH2 0x7a0
0x709 JUMP
---
0x701: V565 = 0x0
0x703: V566 = 0x70a
0x706: V567 = 0x7a0
0x709: JUMP 0x7a0
---
Entry stack: [V11, 0x8d, S0]
Stack pops: 0
Stack additions: [0x0, 0x70a]
Exit stack: [V11, 0x8d, S0, 0x0, 0x70a]

================================

Block 0x70a
[0x70a:0x71c]
---
Predecessors: [0x7a0]
Successors: [0x71d, 0x726]
---
0x70a JUMPDEST
0x70b PUSH1 0x40
0x70d MLOAD
0x70e DUP1
0x70f SWAP2
0x710 SUB
0x711 SWAP1
0x712 PUSH1 0x0
0x714 CREATE
0x715 DUP1
0x716 ISZERO
0x717 DUP1
0x718 ISZERO
0x719 PUSH2 0x726
0x71c JUMPI
---
0x70a: JUMPDEST 
0x70b: V568 = 0x40
0x70d: V569 = M[0x40]
0x710: V570 = SUB V608 V569
0x712: V571 = 0x0
0x714: V572 = CREATE 0x0 V569 V570
0x716: V573 = ISZERO V572
0x718: V574 = ISZERO V573
0x719: V575 = 0x726
0x71c: JUMPI 0x726 V574
---
Entry stack: [V11, 0x8d, S2, 0x0, V608]
Stack pops: 1
Stack additions: [V572, V573]
Exit stack: [V11, 0x8d, S2, 0x0, V572, V573]

================================

Block 0x71d
[0x71d:0x725]
---
Predecessors: [0x70a]
Successors: []
---
0x71d RETURNDATASIZE
0x71e PUSH1 0x0
0x720 DUP1
0x721 RETURNDATACOPY
0x722 RETURNDATASIZE
0x723 PUSH1 0x0
0x725 REVERT
---
0x71d: V576 = RETURNDATASIZE
0x71e: V577 = 0x0
0x721: RETURNDATACOPY 0x0 0x0 V576
0x722: V578 = RETURNDATASIZE
0x723: V579 = 0x0
0x725: REVERT 0x0 V578
---
Entry stack: [V11, 0x8d, S3, 0x0, V572, V573]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, S3, 0x0, V572, V573]

================================

Block 0x726
[0x726:0x79f]
---
Predecessors: [0x70a]
Successors: [0x6f7]
---
0x726 JUMPDEST
0x727 POP
0x728 DUP2
0x729 SLOAD
0x72a PUSH1 0x1
0x72c DUP1
0x72d DUP3
0x72e ADD
0x72f DUP5
0x730 SSTORE
0x731 PUSH1 0x0
0x733 SWAP4
0x734 DUP5
0x735 MSTORE
0x736 PUSH1 0x20
0x738 DUP5
0x739 SHA3
0x73a SWAP1
0x73b SWAP2
0x73c ADD
0x73d DUP1
0x73e SLOAD
0x73f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x754 NOT
0x755 AND
0x756 PUSH1 0x1
0x758 PUSH1 0xa0
0x75a PUSH1 0x2
0x75c EXP
0x75d SUB
0x75e SWAP4
0x75f SWAP1
0x760 SWAP4
0x761 AND
0x762 SWAP3
0x763 SWAP1
0x764 SWAP3
0x765 OR
0x766 SWAP1
0x767 SWAP2
0x768 SSTORE
0x769 DUP1
0x76a SLOAD
0x76b DUP1
0x76c DUP3
0x76d ADD
0x76e DUP3
0x76f SSTORE
0x770 SWAP2
0x771 DUP2
0x772 SWAP1
0x773 MSTORE
0x774 PUSH32 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
0x795 SWAP1
0x796 SWAP2
0x797 ADD
0x798 DUP2
0x799 SWAP1
0x79a SSTORE
0x79b ADD
0x79c PUSH2 0x6f7
0x79f JUMP
---
0x726: JUMPDEST 
0x729: V580 = S[0x0]
0x72a: V581 = 0x1
0x72e: V582 = ADD V580 0x1
0x730: S[0x0] = V582
0x731: V583 = 0x0
0x735: M[0x0] = 0x0
0x736: V584 = 0x20
0x739: V585 = SHA3 0x0 0x20
0x73c: V586 = ADD V580 V585
0x73e: V587 = S[V586]
0x73f: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0x754: V589 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x755: V590 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V587
0x756: V591 = 0x1
0x758: V592 = 0xa0
0x75a: V593 = 0x2
0x75c: V594 = EXP 0x2 0xa0
0x75d: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x761: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0x765: V597 = OR V596 V590
0x768: S[V586] = V597
0x76a: V598 = S[0x1]
0x76d: V599 = ADD 0x1 V598
0x76f: S[0x1] = V599
0x773: M[0x0] = 0x1
0x774: V600 = 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
0x797: V601 = ADD V598 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
0x79a: S[V601] = 0x1
0x79b: V602 = ADD 0x1 S3
0x79c: V603 = 0x6f7
0x79f: JUMP 0x6f7
---
Entry stack: [V11, 0x8d, S3, 0x0, V572, V573]
Stack pops: 4
Stack additions: [V602]
Exit stack: [V11, 0x8d, V602]

================================

Block 0x7a0
[0x7a0:0x7af]
---
Predecessors: [0x701]
Successors: [0x70a]
---
0x7a0 JUMPDEST
0x7a1 PUSH1 0x40
0x7a3 MLOAD
0x7a4 PUSH2 0x2d4
0x7a7 DUP1
0x7a8 PUSH2 0x7b1
0x7ab DUP4
0x7ac CODECOPY
0x7ad ADD
0x7ae SWAP1
0x7af JUMP
---
0x7a0: JUMPDEST 
0x7a1: V604 = 0x40
0x7a3: V605 = M[0x40]
0x7a4: V606 = 0x2d4
0x7a8: V607 = 0x7b1
0x7ac: CODECOPY V605 0x7b1 0x2d4
0x7ad: V608 = ADD 0x2d4 V605
0x7af: JUMP 0x70a
---
Entry stack: [V11, 0x8d, S2, 0x0, 0x70a]
Stack pops: 1
Stack additions: [V608]
Exit stack: [V11, 0x8d, S2, 0x0, V608]

================================

Block 0x7b0
[0x7b0:0x7bc]
---
Predecessors: []
Successors: [0x7bd]
---
0x7b0 STOP
0x7b1 PUSH1 0x80
0x7b3 PUSH1 0x40
0x7b5 MSTORE
0x7b6 CALLVALUE
0x7b7 DUP1
0x7b8 ISZERO
0x7b9 PUSH2 0x10
0x7bc JUMPI
---
0x7b0: STOP 
0x7b1: V609 = 0x80
0x7b3: V610 = 0x40
0x7b5: M[0x40] = 0x80
0x7b6: V611 = CALLVALUE
0x7b8: V612 = ISZERO V611
0x7b9: V613 = 0x10
0x7bc: THROWI V612
---
Entry stack: []
Stack pops: 0
Stack additions: [V611]
Exit stack: []

================================

Block 0x7bd
[0x7bd:0x7dd]
---
Predecessors: [0x7b0]
Successors: [0x7de]
---
0x7bd PUSH1 0x0
0x7bf DUP1
0x7c0 REVERT
0x7c1 JUMPDEST
0x7c2 POP
0x7c3 PUSH2 0x2b4
0x7c6 DUP1
0x7c7 PUSH2 0x20
0x7ca PUSH1 0x0
0x7cc CODECOPY
0x7cd PUSH1 0x0
0x7cf RETURN
0x7d0 STOP
0x7d1 PUSH1 0x80
0x7d3 PUSH1 0x40
0x7d5 MSTORE
0x7d6 PUSH1 0x4
0x7d8 CALLDATASIZE
0x7d9 LT
0x7da PUSH2 0x40
0x7dd JUMPI
---
0x7bd: V614 = 0x0
0x7c0: REVERT 0x0 0x0
0x7c1: JUMPDEST 
0x7c3: V615 = 0x2b4
0x7c7: V616 = 0x20
0x7ca: V617 = 0x0
0x7cc: CODECOPY 0x0 0x20 0x2b4
0x7cd: V618 = 0x0
0x7cf: RETURN 0x0 0x2b4
0x7d0: STOP 
0x7d1: V619 = 0x80
0x7d3: V620 = 0x40
0x7d5: M[0x40] = 0x80
0x7d6: V621 = 0x4
0x7d8: V622 = CALLDATASIZE
0x7d9: V623 = LT V622 0x4
0x7da: V624 = 0x40
0x7dd: THROWI V623
---
Entry stack: [V611]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7de
[0x7de:0x810]
---
Predecessors: [0x7bd]
Successors: [0x811]
---
0x7de PUSH4 0xffffffff
0x7e3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x801 PUSH1 0x0
0x803 CALLDATALOAD
0x804 DIV
0x805 AND
0x806 PUSH4 0x56f18d29
0x80b DUP2
0x80c EQ
0x80d PUSH2 0x45
0x810 JUMPI
---
0x7de: V625 = 0xffffffff
0x7e3: V626 = 0x100000000000000000000000000000000000000000000000000000000
0x801: V627 = 0x0
0x803: V628 = CALLDATALOAD 0x0
0x804: V629 = DIV V628 0x100000000000000000000000000000000000000000000000000000000
0x805: V630 = AND V629 0xffffffff
0x806: V631 = 0x56f18d29
0x80c: V632 = EQ V630 0x56f18d29
0x80d: V633 = 0x45
0x810: THROWI V632
---
Entry stack: []
Stack pops: 0
Stack additions: [V630]
Exit stack: [V630]

================================

Block 0x811
[0x811:0x88e]
---
Predecessors: [0x7de]
Successors: [0x88f]
---
0x811 JUMPDEST
0x812 PUSH1 0x0
0x814 DUP1
0x815 REVERT
0x816 JUMPDEST
0x817 PUSH2 0x69
0x81a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82f PUSH1 0x4
0x831 CALLDATALOAD
0x832 AND
0x833 PUSH1 0x24
0x835 CALLDATALOAD
0x836 PUSH2 0x6b
0x839 JUMP
0x83a JUMPDEST
0x83b STOP
0x83c JUMPDEST
0x83d PUSH6 0x5af3107a4000
0x844 DUP3
0x845 CALLER
0x846 DUP4
0x847 PUSH2 0x7d
0x84a PUSH2 0xce
0x84d JUMP
0x84e JUMPDEST
0x84f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x864 SWAP4
0x865 DUP5
0x866 AND
0x867 DUP2
0x868 MSTORE
0x869 SWAP2
0x86a SWAP1
0x86b SWAP3
0x86c AND
0x86d PUSH1 0x20
0x86f DUP3
0x870 ADD
0x871 MSTORE
0x872 PUSH1 0x40
0x874 DUP1
0x875 DUP3
0x876 ADD
0x877 SWAP3
0x878 SWAP1
0x879 SWAP3
0x87a MSTORE
0x87b SWAP1
0x87c MLOAD
0x87d SWAP1
0x87e DUP2
0x87f SWAP1
0x880 SUB
0x881 PUSH1 0x60
0x883 ADD
0x884 SWAP1
0x885 DUP3
0x886 CREATE
0x887 DUP1
0x888 ISZERO
0x889 DUP1
0x88a ISZERO
0x88b PUSH2 0xc7
0x88e JUMPI
---
0x811: JUMPDEST 
0x812: V634 = 0x0
0x815: REVERT 0x0 0x0
0x816: JUMPDEST 
0x817: V635 = 0x69
0x81a: V636 = 0xffffffffffffffffffffffffffffffffffffffff
0x82f: V637 = 0x4
0x831: V638 = CALLDATALOAD 0x4
0x832: V639 = AND V638 0xffffffffffffffffffffffffffffffffffffffff
0x833: V640 = 0x24
0x835: V641 = CALLDATALOAD 0x24
0x836: V642 = 0x6b
0x839: THROW 
0x83a: JUMPDEST 
0x83b: STOP 
0x83c: JUMPDEST 
0x83d: V643 = 0x5af3107a4000
0x845: V644 = CALLER
0x847: V645 = 0x7d
0x84a: V646 = 0xce
0x84d: THROW 
0x84e: JUMPDEST 
0x84f: V647 = 0xffffffffffffffffffffffffffffffffffffffff
0x866: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x868: M[S0] = V648
0x86c: V649 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x86d: V650 = 0x20
0x870: V651 = ADD S0 0x20
0x871: M[V651] = V649
0x872: V652 = 0x40
0x876: V653 = ADD S0 0x40
0x87a: M[V653] = S1
0x87c: V654 = M[0x40]
0x880: V655 = SUB S0 V654
0x881: V656 = 0x60
0x883: V657 = ADD 0x60 V655
0x886: V658 = CREATE S4 V654 V657
0x888: V659 = ISZERO V658
0x88a: V660 = ISZERO V659
0x88b: V661 = 0xc7
0x88e: THROWI V660
---
Entry stack: [V630]
Stack pops: 0
Stack additions: [V641, V639, 0x69, 0x7d, S0, V644, S1, 0x5af3107a4000, S0, S1, V659, V658, S4]
Exit stack: []

================================

Block 0x88f
[0x88f:0x938]
---
Predecessors: [0x811]
Successors: [0x8d, 0x939]
---
0x88f RETURNDATASIZE
0x890 PUSH1 0x0
0x892 DUP1
0x893 RETURNDATACOPY
0x894 RETURNDATASIZE
0x895 PUSH1 0x0
0x897 REVERT
0x898 JUMPDEST
0x899 POP
0x89a POP
0x89b POP
0x89c POP
0x89d POP
0x89e JUMP
0x89f JUMPDEST
0x8a0 PUSH1 0x40
0x8a2 MLOAD
0x8a3 PUSH2 0x1aa
0x8a6 DUP1
0x8a7 PUSH2 0xdf
0x8aa DUP4
0x8ab CODECOPY
0x8ac ADD
0x8ad SWAP1
0x8ae JUMP
0x8af STOP
0x8b0 PUSH1 0x80
0x8b2 PUSH1 0x40
0x8b4 MSTORE
0x8b5 PUSH1 0x40
0x8b7 MLOAD
0x8b8 PUSH1 0x60
0x8ba DUP1
0x8bb PUSH2 0x1aa
0x8be DUP4
0x8bf CODECOPY
0x8c0 DUP2
0x8c1 ADD
0x8c2 PUSH1 0x40
0x8c4 DUP2
0x8c5 DUP2
0x8c6 MSTORE
0x8c7 DUP3
0x8c8 MLOAD
0x8c9 PUSH1 0x20
0x8cb DUP5
0x8cc ADD
0x8cd MLOAD
0x8ce SWAP4
0x8cf DUP3
0x8d0 ADD
0x8d1 MLOAD
0x8d2 PUSH32 0xcd133c8f00000000000000000000000000000000000000000000000000000000
0x8f3 DUP5
0x8f4 MSTORE
0x8f5 PUSH1 0x3
0x8f7 PUSH1 0x4
0x8f9 DUP6
0x8fa ADD
0x8fb MSTORE
0x8fc SWAP2
0x8fd MLOAD
0x8fe SWAP1
0x8ff SWAP4
0x900 SWAP3
0x901 DUP5
0x902 SWAP2
0x903 PUSH1 0x0
0x905 SWAP2
0x906 PUSH1 0x1
0x908 PUSH1 0xa0
0x90a PUSH1 0x2
0x90c EXP
0x90d SUB
0x90e DUP5
0x90f AND
0x910 SWAP2
0x911 PUSH4 0xcd133c8f
0x916 SWAP2
0x917 PUSH6 0x5af3107a4000
0x91e SWAP2
0x91f PUSH1 0x24
0x921 DUP1
0x922 DUP4
0x923 ADD
0x924 SWAP3
0x925 DUP8
0x926 SWAP3
0x927 SWAP2
0x928 SWAP1
0x929 DUP3
0x92a SWAP1
0x92b SUB
0x92c ADD
0x92d DUP2
0x92e DUP6
0x92f DUP9
0x930 DUP1
0x931 EXTCODESIZE
0x932 ISZERO
0x933 DUP1
0x934 ISZERO
0x935 PUSH2 0x8d
0x938 JUMPI
---
0x88f: V662 = RETURNDATASIZE
0x890: V663 = 0x0
0x893: RETURNDATACOPY 0x0 0x0 V662
0x894: V664 = RETURNDATASIZE
0x895: V665 = 0x0
0x897: REVERT 0x0 V664
0x898: JUMPDEST 
0x89e: JUMP S5
0x89f: JUMPDEST 
0x8a0: V666 = 0x40
0x8a2: V667 = M[0x40]
0x8a3: V668 = 0x1aa
0x8a7: V669 = 0xdf
0x8ab: CODECOPY V667 0xdf 0x1aa
0x8ac: V670 = ADD 0x1aa V667
0x8ae: JUMP S0
0x8af: STOP 
0x8b0: V671 = 0x80
0x8b2: V672 = 0x40
0x8b4: M[0x40] = 0x80
0x8b5: V673 = 0x40
0x8b7: V674 = M[0x40]
0x8b8: V675 = 0x60
0x8bb: V676 = 0x1aa
0x8bf: CODECOPY V674 0x1aa 0x60
0x8c1: V677 = ADD V674 0x60
0x8c2: V678 = 0x40
0x8c6: M[0x40] = V677
0x8c8: V679 = M[V674]
0x8c9: V680 = 0x20
0x8cc: V681 = ADD V674 0x20
0x8cd: V682 = M[V681]
0x8d0: V683 = ADD 0x40 V674
0x8d1: V684 = M[V683]
0x8d2: V685 = 0xcd133c8f00000000000000000000000000000000000000000000000000000000
0x8f4: M[V677] = 0xcd133c8f00000000000000000000000000000000000000000000000000000000
0x8f5: V686 = 0x3
0x8f7: V687 = 0x4
0x8fa: V688 = ADD V677 0x4
0x8fb: M[V688] = 0x3
0x8fd: V689 = M[0x40]
0x903: V690 = 0x0
0x906: V691 = 0x1
0x908: V692 = 0xa0
0x90a: V693 = 0x2
0x90c: V694 = EXP 0x2 0xa0
0x90d: V695 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90f: V696 = AND V679 0xffffffffffffffffffffffffffffffffffffffff
0x911: V697 = 0xcd133c8f
0x917: V698 = 0x5af3107a4000
0x91f: V699 = 0x24
0x923: V700 = ADD V677 0x24
0x92b: V701 = SUB V677 V689
0x92c: V702 = ADD V701 0x24
0x931: V703 = EXTCODESIZE V696
0x932: V704 = ISZERO V703
0x934: V705 = ISZERO V704
0x935: V706 = 0x8d
0x938: JUMPI 0x8d V705
---
Entry stack: [S2, V658, V659]
Stack pops: 0
Stack additions: [V670, V704, V696, 0x5af3107a4000, V689, V702, V689, 0x0, V700, 0x5af3107a4000, 0xcd133c8f, V696, 0x0, V679, V684, V682, V679]
Exit stack: []

================================

Block 0x939
[0x939:0x947]
---
Predecessors: [0x88f]
Successors: [0x948]
---
0x939 PUSH1 0x0
0x93b DUP1
0x93c REVERT
0x93d JUMPDEST
0x93e POP
0x93f GAS
0x940 CALL
0x941 ISZERO
0x942 DUP1
0x943 ISZERO
0x944 PUSH2 0xa1
0x947 JUMPI
---
0x939: V707 = 0x0
0x93c: REVERT 0x0 0x0
0x93d: JUMPDEST 
0x93f: V708 = GAS
0x940: V709 = CALL V708 S1 S2 S3 S4 S5 S6
0x941: V710 = ISZERO V709
0x943: V711 = ISZERO V710
0x944: V712 = 0xa1
0x947: THROWI V711
---
Entry stack: [V679, V682, V684, V679, 0x0, V696, 0xcd133c8f, 0x5af3107a4000, V700, 0x0, V689, V702, V689, 0x5af3107a4000, V696, V704]
Stack pops: 0
Stack additions: [V710]
Exit stack: []

================================

Block 0x948
[0x948:0x95a]
---
Predecessors: [0x939]
Successors: [0x95b]
---
0x948 RETURNDATASIZE
0x949 PUSH1 0x0
0x94b DUP1
0x94c RETURNDATACOPY
0x94d RETURNDATASIZE
0x94e PUSH1 0x0
0x950 REVERT
0x951 JUMPDEST
0x952 POP
0x953 POP
0x954 POP
0x955 POP
0x956 POP
0x957 PUSH1 0x0
0x959 SWAP1
0x95a POP
---
0x948: V713 = RETURNDATASIZE
0x949: V714 = 0x0
0x94c: RETURNDATACOPY 0x0 0x0 V713
0x94d: V715 = RETURNDATASIZE
0x94e: V716 = 0x0
0x950: REVERT 0x0 V715
0x951: JUMPDEST 
0x957: V717 = 0x0
---
Entry stack: [V710]
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0x95b
[0x95b:0x963]
---
Predecessors: [0x948]
Successors: [0x964]
---
0x95b JUMPDEST
0x95c DUP3
0x95d DUP2
0x95e LT
0x95f ISZERO
0x960 PUSH2 0x12e
0x963 JUMPI
---
0x95b: JUMPDEST 
0x95e: V718 = LT 0x0 S2
0x95f: V719 = ISZERO V718
0x960: V720 = 0x12e
0x963: THROWI V719
---
Entry stack: [0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S1, S0, 0x0]

================================

Block 0x964
[0x964:0x9b5]
---
Predecessors: [0x95b]
Successors: [0x9b6]
---
0x964 DUP2
0x965 PUSH1 0x1
0x967 PUSH1 0xa0
0x969 PUSH1 0x2
0x96b EXP
0x96c SUB
0x96d AND
0x96e PUSH4 0x753117ff
0x973 PUSH1 0x40
0x975 MLOAD
0x976 DUP2
0x977 PUSH4 0xffffffff
0x97c AND
0x97d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x99b MUL
0x99c DUP2
0x99d MSTORE
0x99e PUSH1 0x4
0x9a0 ADD
0x9a1 PUSH1 0x0
0x9a3 PUSH1 0x40
0x9a5 MLOAD
0x9a6 DUP1
0x9a7 DUP4
0x9a8 SUB
0x9a9 DUP2
0x9aa PUSH1 0x0
0x9ac DUP8
0x9ad DUP1
0x9ae EXTCODESIZE
0x9af ISZERO
0x9b0 DUP1
0x9b1 ISZERO
0x9b2 PUSH2 0x10a
0x9b5 JUMPI
---
0x965: V721 = 0x1
0x967: V722 = 0xa0
0x969: V723 = 0x2
0x96b: V724 = EXP 0x2 0xa0
0x96c: V725 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96d: V726 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x96e: V727 = 0x753117ff
0x973: V728 = 0x40
0x975: V729 = M[0x40]
0x977: V730 = 0xffffffff
0x97c: V731 = AND 0xffffffff 0x753117ff
0x97d: V732 = 0x100000000000000000000000000000000000000000000000000000000
0x99b: V733 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x753117ff
0x99d: M[V729] = 0x753117ff00000000000000000000000000000000000000000000000000000000
0x99e: V734 = 0x4
0x9a0: V735 = ADD 0x4 V729
0x9a1: V736 = 0x0
0x9a3: V737 = 0x40
0x9a5: V738 = M[0x40]
0x9a8: V739 = SUB V735 V738
0x9aa: V740 = 0x0
0x9ae: V741 = EXTCODESIZE V726
0x9af: V742 = ISZERO V741
0x9b1: V743 = ISZERO V742
0x9b2: V744 = 0x10a
0x9b5: THROWI V743
---
Entry stack: [S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V726, 0x753117ff, V735, 0x0, V738, V739, V738, 0x0, V726, V742]
Exit stack: [S2, S1, 0x0, V726, 0x753117ff, V735, 0x0, V738, V739, V738, 0x0, V726, V742]

================================

Block 0x9b6
[0x9b6:0x9c4]
---
Predecessors: [0x964]
Successors: [0x9c5]
---
0x9b6 PUSH1 0x0
0x9b8 DUP1
0x9b9 REVERT
0x9ba JUMPDEST
0x9bb POP
0x9bc GAS
0x9bd CALL
0x9be ISZERO
0x9bf DUP1
0x9c0 ISZERO
0x9c1 PUSH2 0x11e
0x9c4 JUMPI
---
0x9b6: V745 = 0x0
0x9b9: REVERT 0x0 0x0
0x9ba: JUMPDEST 
0x9bc: V746 = GAS
0x9bd: V747 = CALL V746 S1 S2 S3 S4 S5 S6
0x9be: V748 = ISZERO V747
0x9c0: V749 = ISZERO V748
0x9c1: V750 = 0x11e
0x9c4: THROWI V749
---
Entry stack: [S12, S11, 0x0, V726, 0x753117ff, V735, 0x0, V738, V739, V738, 0x0, V726, V742]
Stack pops: 0
Stack additions: [V748]
Exit stack: []

================================

Block 0x9c5
[0x9c5:0xa30]
---
Predecessors: [0x9b6]
Successors: [0xa31]
---
0x9c5 RETURNDATASIZE
0x9c6 PUSH1 0x0
0x9c8 DUP1
0x9c9 RETURNDATACOPY
0x9ca RETURNDATASIZE
0x9cb PUSH1 0x0
0x9cd REVERT
0x9ce JUMPDEST
0x9cf POP
0x9d0 POP
0x9d1 PUSH1 0x1
0x9d3 SWAP1
0x9d4 SWAP3
0x9d5 ADD
0x9d6 SWAP2
0x9d7 POP
0x9d8 PUSH2 0xab
0x9db SWAP1
0x9dc POP
0x9dd JUMP
0x9de JUMPDEST
0x9df DUP2
0x9e0 PUSH1 0x1
0x9e2 PUSH1 0xa0
0x9e4 PUSH1 0x2
0x9e6 EXP
0x9e7 SUB
0x9e8 AND
0x9e9 PUSH4 0x3ccfd60b
0x9ee PUSH1 0x40
0x9f0 MLOAD
0x9f1 DUP2
0x9f2 PUSH4 0xffffffff
0x9f7 AND
0x9f8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa16 MUL
0xa17 DUP2
0xa18 MSTORE
0xa19 PUSH1 0x4
0xa1b ADD
0xa1c PUSH1 0x0
0xa1e PUSH1 0x40
0xa20 MLOAD
0xa21 DUP1
0xa22 DUP4
0xa23 SUB
0xa24 DUP2
0xa25 PUSH1 0x0
0xa27 DUP8
0xa28 DUP1
0xa29 EXTCODESIZE
0xa2a ISZERO
0xa2b DUP1
0xa2c ISZERO
0xa2d PUSH2 0x185
0xa30 JUMPI
---
0x9c5: V751 = RETURNDATASIZE
0x9c6: V752 = 0x0
0x9c9: RETURNDATACOPY 0x0 0x0 V751
0x9ca: V753 = RETURNDATASIZE
0x9cb: V754 = 0x0
0x9cd: REVERT 0x0 V753
0x9ce: JUMPDEST 
0x9d1: V755 = 0x1
0x9d5: V756 = ADD S4 0x1
0x9d8: V757 = 0xab
0x9dd: THROW 
0x9de: JUMPDEST 
0x9e0: V758 = 0x1
0x9e2: V759 = 0xa0
0x9e4: V760 = 0x2
0x9e6: V761 = EXP 0x2 0xa0
0x9e7: V762 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e8: V763 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x9e9: V764 = 0x3ccfd60b
0x9ee: V765 = 0x40
0x9f0: V766 = M[0x40]
0x9f2: V767 = 0xffffffff
0x9f7: V768 = AND 0xffffffff 0x3ccfd60b
0x9f8: V769 = 0x100000000000000000000000000000000000000000000000000000000
0xa16: V770 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0xa18: M[V766] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0xa19: V771 = 0x4
0xa1b: V772 = ADD 0x4 V766
0xa1c: V773 = 0x0
0xa1e: V774 = 0x40
0xa20: V775 = M[0x40]
0xa23: V776 = SUB V772 V775
0xa25: V777 = 0x0
0xa29: V778 = EXTCODESIZE V763
0xa2a: V779 = ISZERO V778
0xa2c: V780 = ISZERO V779
0xa2d: V781 = 0x185
0xa30: THROWI V780
---
Entry stack: [V748]
Stack pops: 0
Stack additions: [V756, V779, V763, 0x0, V775, V776, V775, 0x0, V772, 0x3ccfd60b, V763, S0, S1]
Exit stack: []

================================

Block 0xa31
[0xa31:0xa3f]
---
Predecessors: [0x9c5]
Successors: [0xa40]
---
0xa31 PUSH1 0x0
0xa33 DUP1
0xa34 REVERT
0xa35 JUMPDEST
0xa36 POP
0xa37 GAS
0xa38 CALL
0xa39 ISZERO
0xa3a DUP1
0xa3b ISZERO
0xa3c PUSH2 0x199
0xa3f JUMPI
---
0xa31: V782 = 0x0
0xa34: REVERT 0x0 0x0
0xa35: JUMPDEST 
0xa37: V783 = GAS
0xa38: V784 = CALL V783 S1 S2 S3 S4 S5 S6
0xa39: V785 = ISZERO V784
0xa3b: V786 = ISZERO V785
0xa3c: V787 = 0x199
0xa3f: THROWI V786
---
Entry stack: [S11, S10, V763, 0x3ccfd60b, V772, 0x0, V775, V776, V775, 0x0, V763, V779]
Stack pops: 0
Stack additions: [V785]
Exit stack: []

================================

Block 0xa40
[0xa40:0xa70]
---
Predecessors: [0xa31]
Successors: [0xa71]
Has unresolved jump.
---
0xa40 RETURNDATASIZE
0xa41 PUSH1 0x0
0xa43 DUP1
0xa44 RETURNDATACOPY
0xa45 RETURNDATASIZE
0xa46 PUSH1 0x0
0xa48 REVERT
0xa49 JUMPDEST
0xa4a POP
0xa4b POP
0xa4c POP
0xa4d POP
0xa4e DUP4
0xa4f PUSH1 0x1
0xa51 PUSH1 0xa0
0xa53 PUSH1 0x2
0xa55 EXP
0xa56 SUB
0xa57 AND
0xa58 SELFDESTRUCT
0xa59 STOP
0xa5a LOG1
0xa5b PUSH6 0x627a7a723058
0xa62 SHA3
0xa63 MISSING 0xc0
0xa64 MISSING 0xde
0xa65 PUSH9 0xc0c7f0f579af7decf
0xa6f CALLDATACOPY
0xa70 JUMPI
---
0xa40: V788 = RETURNDATASIZE
0xa41: V789 = 0x0
0xa44: RETURNDATACOPY 0x0 0x0 V788
0xa45: V790 = RETURNDATASIZE
0xa46: V791 = 0x0
0xa48: REVERT 0x0 V790
0xa49: JUMPDEST 
0xa4f: V792 = 0x1
0xa51: V793 = 0xa0
0xa53: V794 = 0x2
0xa55: V795 = EXP 0x2 0xa0
0xa56: V796 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa57: V797 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0xa58: SELFDESTRUCT V797
0xa59: STOP 
0xa5a: LOG S0 S1 S2
0xa5b: V798 = 0x627a7a723058
0xa62: V799 = SHA3 0x627a7a723058 S3
0xa63: MISSING 0xc0
0xa64: MISSING 0xde
0xa65: V800 = 0xc0c7f0f579af7decf
0xa6f: CALLDATACOPY 0xc0c7f0f579af7decf S0 S1
0xa70: JUMPI S2 S3
---
Entry stack: [V785]
Stack pops: 0
Stack additions: [S4, S5, S6, S7, V799]
Exit stack: []

================================

Block 0xa71
[0xa71:0xaaf]
---
Predecessors: [0xa40]
Successors: []
---
0xa71 SHR
0xa72 MISSING 0x1f
0xa73 JUMPDEST
0xa74 MISSING 0x26
0xa75 SWAP7
0xa76 MISSING 0x46
0xa77 MISSING 0xe1
0xa78 EXTCODESIZE
0xa79 MISSING 0xf9
0xa7a MISSING 0xdc
0xa7b MULMOD
0xa7c MISSING 0xc8
0xa7d MISSING 0xaf
0xa7e PUSH7 0x7a8f15ac0029a1
0xa86 PUSH6 0x627a7a723058
0xa8d SHA3
0xa8e ORIGIN
0xa8f PUSH14 0x3702f44ece146ea71bb8abbf51b2
0xa9e MISSING 0x2d
0xa9f MISSING 0xc1
0xaa0 SWAP7
0xaa1 PUSH7 0x344127cc4e8c8c
0xaa9 EQ
0xaaa MISSING 0xe4
0xaab ADDMOD
0xaac MISSING 0x5f
0xaad MISSING 0xad
0xaae STOP
0xaaf MISSING 0x29
---
0xa71: V801 = SHR S0 S1
0xa72: MISSING 0x1f
0xa73: JUMPDEST 
0xa74: MISSING 0x26
0xa76: MISSING 0x46
0xa77: MISSING 0xe1
0xa78: V802 = EXTCODESIZE S0
0xa79: MISSING 0xf9
0xa7a: MISSING 0xdc
0xa7b: V803 = MULMOD S0 S1 S2
0xa7c: MISSING 0xc8
0xa7d: MISSING 0xaf
0xa7e: V804 = 0x7a8f15ac0029a1
0xa86: V805 = 0x627a7a723058
0xa8d: V806 = SHA3 0x627a7a723058 0x7a8f15ac0029a1
0xa8e: V807 = ORIGIN
0xa8f: V808 = 0x3702f44ece146ea71bb8abbf51b2
0xa9e: MISSING 0x2d
0xa9f: MISSING 0xc1
0xaa1: V809 = 0x344127cc4e8c8c
0xaa9: V810 = EQ 0x344127cc4e8c8c S7
0xaaa: MISSING 0xe4
0xaab: V811 = ADDMOD S0 S1 S2
0xaac: MISSING 0x5f
0xaad: MISSING 0xad
0xaae: STOP 
0xaaf: MISSING 0x29
---
Entry stack: []
Stack pops: 9436
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x141a468c
Entry block: 0x8f
Exit block: 0xa7
Body: 0x8f, 0x97, 0x9b, 0xa7, 0x16a, 0x177, 0x178

Function 1:
Public function signature: 0x30676ad8
Entry block: 0xb9
Exit block: 0x617
Body: 0x8d, 0xb9, 0x189, 0x19e, 0x1a2, 0x1ff, 0x203, 0x20e, 0x217, 0x229, 0x22d, 0x28a, 0x28e, 0x299, 0x2a2, 0x2b4, 0x2b8, 0x2cd, 0x2d1, 0x32d, 0x336, 0x34c, 0x381, 0x382, 0x390, 0x399, 0x3af, 0x3b0, 0x3d5, 0x3d6, 0x47d, 0x486, 0x49c, 0x4d1, 0x4d2, 0x504, 0x50d, 0x523, 0x558, 0x559, 0x560, 0x56c, 0x56d, 0x5ec, 0x5f0, 0x5fb, 0x604, 0x617, 0x618, 0x62f, 0x637

Function 2:
Public function signature: 0x6a11455a
Entry block: 0xcd
Exit block: 0xe5
Body: 0xcd, 0xd5, 0xd9, 0xe5, 0x640, 0x64d, 0x64e

Function 3:
Public function signature: 0x6d4ce63c
Entry block: 0x101
Exit block: 0x8d
Body: 0x8d, 0x101, 0x109, 0x10d, 0x668, 0x684, 0x688, 0x6c0, 0x6c9

Function 4:
Public function signature: 0x806b984f
Entry block: 0x116
Exit block: 0xa7
Body: 0xa7, 0x116, 0x11e, 0x122, 0x6cc

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x12b
Exit block: 0xe5
Body: 0xe5, 0x12b, 0x133, 0x137, 0x6d2

Function 6:
Public function signature: 0x98e76e06
Entry block: 0x140
Exit block: 0xa7
Body: 0xa7, 0x140, 0x148, 0x14c, 0x6ea

Function 7:
Public function signature: 0xc5263b25
Entry block: 0x155
Exit block: 0x71d
Body: 0x8d, 0x155, 0x15d, 0x161, 0x6c9, 0x6f4, 0x6f7, 0x701, 0x70a, 0x71d, 0x726, 0x7a0

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x8d
Body: 0x8d

