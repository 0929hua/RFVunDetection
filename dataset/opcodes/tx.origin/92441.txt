Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x56
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x56
0xa: JUMPI 0x56 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x58]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x6fdde03
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x58
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x6fdde03
0x1a: V12 = EQ V10 0x6fdde03
0x1b: V13 = 0x58
0x1e: JUMPI 0x58 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xb5]
---
0x1f DUP1
0x20 PUSH4 0x38178fbe
0x25 EQ
0x26 PUSH2 0xb5
0x29 JUMPI
---
0x20: V14 = 0x38178fbe
0x25: V15 = EQ 0x38178fbe V10
0x26: V16 = 0xb5
0x29: JUMPI 0xb5 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x1f8]
---
0x2a DUP1
0x2b PUSH4 0x5353a2d8
0x30 EQ
0x31 PUSH2 0x1f8
0x34 JUMPI
---
0x2b: V17 = 0x5353a2d8
0x30: V18 = EQ 0x5353a2d8 V10
0x31: V19 = 0x1f8
0x34: JUMPI 0x1f8 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x2b1]
---
0x35 DUP1
0x36 PUSH4 0x83197ef0
0x3b EQ
0x3c PUSH2 0x2b1
0x3f JUMPI
---
0x36: V20 = 0x83197ef0
0x3b: V21 = EQ 0x83197ef0 V10
0x3c: V22 = 0x2b1
0x3f: JUMPI 0x2b1 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x2d9]
---
0x40 DUP1
0x41 PUSH4 0x8da5cb5b
0x46 EQ
0x47 PUSH2 0x2d9
0x4a JUMPI
---
0x41: V23 = 0x8da5cb5b
0x46: V24 = EQ 0x8da5cb5b V10
0x47: V25 = 0x2d9
0x4a: JUMPI 0x2d9 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x2eb]
---
0x4b DUP1
0x4c PUSH4 0xa6f9dae1
0x51 EQ
0x52 PUSH2 0x2eb
0x55 JUMPI
---
0x4c: V26 = 0xa6f9dae1
0x51: V27 = EQ 0xa6f9dae1 V10
0x52: V28 = 0x2eb
0x55: JUMPI 0x2eb V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x0, 0x4b, 0x309, 0x3eb, 0x426, 0x459]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x58
[0x58:0x99]
---
Predecessors: [0xb]
Successors: [0x9a, 0x3e0]
---
0x58 JUMPDEST
0x59 PUSH1 0x40
0x5b DUP1
0x5c MLOAD
0x5d PUSH1 0x1
0x5f DUP1
0x60 SLOAD
0x61 PUSH1 0x20
0x63 PUSH1 0x2
0x65 DUP3
0x66 DUP5
0x67 AND
0x68 ISZERO
0x69 PUSH2 0x100
0x6c MUL
0x6d PUSH1 0x0
0x6f NOT
0x70 ADD
0x71 SWAP1
0x72 SWAP3
0x73 AND
0x74 SWAP2
0x75 SWAP1
0x76 SWAP2
0x77 DIV
0x78 PUSH1 0x1f
0x7a DUP2
0x7b ADD
0x7c DUP3
0x7d SWAP1
0x7e DIV
0x7f DUP3
0x80 MUL
0x81 DUP5
0x82 ADD
0x83 DUP3
0x84 ADD
0x85 SWAP1
0x86 SWAP5
0x87 MSTORE
0x88 DUP4
0x89 DUP4
0x8a MSTORE
0x8b PUSH2 0x32a
0x8e SWAP4
0x8f SWAP1
0x90 DUP4
0x91 ADD
0x92 DUP3
0x93 DUP3
0x94 DUP1
0x95 ISZERO
0x96 PUSH2 0x3e0
0x99 JUMPI
---
0x58: JUMPDEST 
0x59: V29 = 0x40
0x5c: V30 = M[0x40]
0x5d: V31 = 0x1
0x60: V32 = S[0x1]
0x61: V33 = 0x20
0x63: V34 = 0x2
0x67: V35 = AND 0x1 V32
0x68: V36 = ISZERO V35
0x69: V37 = 0x100
0x6c: V38 = MUL 0x100 V36
0x6d: V39 = 0x0
0x6f: V40 = NOT 0x0
0x70: V41 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V38
0x73: V42 = AND V32 V41
0x77: V43 = DIV V42 0x2
0x78: V44 = 0x1f
0x7b: V45 = ADD V43 0x1f
0x7e: V46 = DIV V45 0x20
0x80: V47 = MUL 0x20 V46
0x82: V48 = ADD V30 V47
0x84: V49 = ADD 0x20 V48
0x87: M[0x40] = V49
0x8a: M[V30] = V43
0x8b: V50 = 0x32a
0x91: V51 = ADD V30 0x20
0x95: V52 = ISZERO V43
0x96: V53 = 0x3e0
0x99: JUMPI 0x3e0 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x32a, V30, 0x1, V43, V51, 0x1, V43]
Exit stack: [V10, 0x32a, V30, 0x1, V43, V51, 0x1, V43]

================================

Block 0x9a
[0x9a:0xa1]
---
Predecessors: [0x58]
Successors: [0xa2, 0x3b5]
---
0x9a DUP1
0x9b PUSH1 0x1f
0x9d LT
0x9e PUSH2 0x3b5
0xa1 JUMPI
---
0x9b: V54 = 0x1f
0x9d: V55 = LT 0x1f V43
0x9e: V56 = 0x3b5
0xa1: JUMPI 0x3b5 V55
---
Entry stack: [V10, 0x32a, V30, 0x1, V43, V51, 0x1, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x32a, V30, 0x1, V43, V51, 0x1, V43]

================================

Block 0xa2
[0xa2:0xb4]
---
Predecessors: [0x9a]
Successors: [0x3e0]
---
0xa2 PUSH2 0x100
0xa5 DUP1
0xa6 DUP4
0xa7 SLOAD
0xa8 DIV
0xa9 MUL
0xaa DUP4
0xab MSTORE
0xac SWAP2
0xad PUSH1 0x20
0xaf ADD
0xb0 SWAP2
0xb1 PUSH2 0x3e0
0xb4 JUMP
---
0xa2: V57 = 0x100
0xa7: V58 = S[0x1]
0xa8: V59 = DIV V58 0x100
0xa9: V60 = MUL V59 0x100
0xab: M[V51] = V60
0xad: V61 = 0x20
0xaf: V62 = ADD 0x20 V51
0xb1: V63 = 0x3e0
0xb4: JUMP 0x3e0
---
Entry stack: [V10, 0x32a, V30, 0x1, V43, V51, 0x1, V43]
Stack pops: 3
Stack additions: [V62, S1, S0]
Exit stack: [V10, 0x32a, V30, 0x1, V43, V62, 0x1, V43]

================================

Block 0xb5
[0xb5:0x155]
---
Predecessors: [0x1f]
Successors: [0x156, 0x3eb]
---
0xb5 JUMPDEST
0xb6 PUSH2 0x56
0xb9 PUSH1 0x4
0xbb DUP1
0xbc DUP1
0xbd CALLDATALOAD
0xbe SWAP1
0xbf PUSH1 0x20
0xc1 ADD
0xc2 SWAP1
0xc3 DUP3
0xc4 ADD
0xc5 DUP1
0xc6 CALLDATALOAD
0xc7 SWAP1
0xc8 PUSH1 0x20
0xca ADD
0xcb SWAP2
0xcc SWAP2
0xcd SWAP1
0xce DUP1
0xcf DUP1
0xd0 PUSH1 0x1f
0xd2 ADD
0xd3 PUSH1 0x20
0xd5 DUP1
0xd6 SWAP2
0xd7 DIV
0xd8 MUL
0xd9 PUSH1 0x20
0xdb ADD
0xdc PUSH1 0x40
0xde MLOAD
0xdf SWAP1
0xe0 DUP2
0xe1 ADD
0xe2 PUSH1 0x40
0xe4 MSTORE
0xe5 DUP1
0xe6 SWAP4
0xe7 SWAP3
0xe8 SWAP2
0xe9 SWAP1
0xea DUP2
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x20
0xef ADD
0xf0 DUP4
0xf1 DUP4
0xf2 DUP1
0xf3 DUP3
0xf4 DUP5
0xf5 CALLDATACOPY
0xf6 POP
0xf7 POP
0xf8 PUSH1 0x40
0xfa DUP1
0xfb MLOAD
0xfc PUSH1 0x20
0xfe DUP9
0xff CALLDATALOAD
0x100 DUP1
0x101 DUP12
0x102 ADD
0x103 CALLDATALOAD
0x104 PUSH1 0x1f
0x106 DUP2
0x107 ADD
0x108 DUP4
0x109 SWAP1
0x10a DIV
0x10b DUP4
0x10c MUL
0x10d DUP5
0x10e ADD
0x10f DUP4
0x110 ADD
0x111 SWAP1
0x112 SWAP5
0x113 MSTORE
0x114 DUP4
0x115 DUP4
0x116 MSTORE
0x117 SWAP8
0x118 SWAP10
0x119 SWAP9
0x11a PUSH1 0x44
0x11c SWAP9
0x11d SWAP3
0x11e SWAP8
0x11f POP
0x120 SWAP2
0x121 SWAP1
0x122 SWAP2
0x123 ADD
0x124 SWAP5
0x125 POP
0x126 SWAP1
0x127 SWAP3
0x128 POP
0x129 DUP3
0x12a SWAP2
0x12b POP
0x12c DUP5
0x12d ADD
0x12e DUP4
0x12f DUP3
0x130 DUP1
0x131 DUP3
0x132 DUP5
0x133 CALLDATACOPY
0x134 POP
0x135 SWAP5
0x136 SWAP7
0x137 POP
0x138 POP
0x139 POP
0x13a POP
0x13b POP
0x13c POP
0x13d POP
0x13e PUSH1 0x0
0x140 SLOAD
0x141 PUSH1 0x1
0x143 PUSH1 0xa0
0x145 PUSH1 0x2
0x147 EXP
0x148 SUB
0x149 SWAP1
0x14a DUP2
0x14b AND
0x14c ORIGIN
0x14d SWAP1
0x14e SWAP2
0x14f AND
0x150 EQ
0x151 ISZERO
0x152 PUSH2 0x3eb
0x155 JUMPI
---
0xb5: JUMPDEST 
0xb6: V64 = 0x56
0xb9: V65 = 0x4
0xbd: V66 = CALLDATALOAD 0x4
0xbf: V67 = 0x20
0xc1: V68 = ADD 0x20 0x4
0xc4: V69 = ADD 0x4 V66
0xc6: V70 = CALLDATALOAD V69
0xc8: V71 = 0x20
0xca: V72 = ADD 0x20 V69
0xd0: V73 = 0x1f
0xd2: V74 = ADD 0x1f V70
0xd3: V75 = 0x20
0xd7: V76 = DIV V74 0x20
0xd8: V77 = MUL V76 0x20
0xd9: V78 = 0x20
0xdb: V79 = ADD 0x20 V77
0xdc: V80 = 0x40
0xde: V81 = M[0x40]
0xe1: V82 = ADD V81 V79
0xe2: V83 = 0x40
0xe4: M[0x40] = V82
0xec: M[V81] = V70
0xed: V84 = 0x20
0xef: V85 = ADD 0x20 V81
0xf5: CALLDATACOPY V85 V72 V70
0xf8: V86 = 0x40
0xfb: V87 = M[0x40]
0xfc: V88 = 0x20
0xff: V89 = CALLDATALOAD 0x24
0x102: V90 = ADD 0x4 V89
0x103: V91 = CALLDATALOAD V90
0x104: V92 = 0x1f
0x107: V93 = ADD V91 0x1f
0x10a: V94 = DIV V93 0x20
0x10c: V95 = MUL 0x20 V94
0x10e: V96 = ADD V87 V95
0x110: V97 = ADD 0x20 V96
0x113: M[0x40] = V97
0x116: M[V87] = V91
0x11a: V98 = 0x44
0x123: V99 = ADD 0x24 V89
0x12d: V100 = ADD V87 0x20
0x133: CALLDATACOPY V100 V99 V91
0x13e: V101 = 0x0
0x140: V102 = S[0x0]
0x141: V103 = 0x1
0x143: V104 = 0xa0
0x145: V105 = 0x2
0x147: V106 = EXP 0x2 0xa0
0x148: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14b: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x14c: V109 = ORIGIN
0x14f: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x150: V111 = EQ V110 V108
0x151: V112 = ISZERO V111
0x152: V113 = 0x3eb
0x155: JUMPI 0x3eb V112
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x56, V81, V87]
Exit stack: [V10, 0x56, V81, V87]

================================

Block 0x156
[0x156:0x1cf]
---
Predecessors: [0xb5]
Successors: [0x1d0, 0x3ef]
---
0x156 DUP1
0x157 PUSH1 0x2
0x159 PUSH1 0x0
0x15b POP
0x15c DUP4
0x15d PUSH1 0x40
0x15f MLOAD
0x160 DUP1
0x161 DUP3
0x162 DUP1
0x163 MLOAD
0x164 SWAP1
0x165 PUSH1 0x20
0x167 ADD
0x168 SWAP1
0x169 DUP1
0x16a DUP4
0x16b DUP4
0x16c DUP3
0x16d SWAP1
0x16e PUSH1 0x0
0x170 PUSH1 0x4
0x172 PUSH1 0x20
0x174 DUP5
0x175 PUSH1 0x1f
0x177 ADD
0x178 DIV
0x179 PUSH1 0xf
0x17b MUL
0x17c PUSH1 0x3
0x17e ADD
0x17f CALL
0x180 POP
0x181 SWAP1
0x182 POP
0x183 ADD
0x184 SWAP2
0x185 POP
0x186 POP
0x187 SWAP1
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c ADD
0x18d PUSH1 0x40
0x18f MLOAD
0x190 DUP1
0x191 SWAP2
0x192 SUB
0x193 SWAP1
0x194 SHA3
0x195 PUSH1 0x0
0x197 POP
0x198 SWAP1
0x199 DUP1
0x19a MLOAD
0x19b SWAP1
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP1
0x1a0 DUP3
0x1a1 DUP1
0x1a2 SLOAD
0x1a3 PUSH1 0x1
0x1a5 DUP2
0x1a6 PUSH1 0x1
0x1a8 AND
0x1a9 ISZERO
0x1aa PUSH2 0x100
0x1ad MUL
0x1ae SUB
0x1af AND
0x1b0 PUSH1 0x2
0x1b2 SWAP1
0x1b3 DIV
0x1b4 SWAP1
0x1b5 PUSH1 0x0
0x1b7 MSTORE
0x1b8 PUSH1 0x20
0x1ba PUSH1 0x0
0x1bc SHA3
0x1bd SWAP1
0x1be PUSH1 0x1f
0x1c0 ADD
0x1c1 PUSH1 0x20
0x1c3 SWAP1
0x1c4 DIV
0x1c5 DUP2
0x1c6 ADD
0x1c7 SWAP3
0x1c8 DUP3
0x1c9 PUSH1 0x1f
0x1cb LT
0x1cc PUSH2 0x3ef
0x1cf JUMPI
---
0x157: V114 = 0x2
0x159: V115 = 0x0
0x15d: V116 = 0x40
0x15f: V117 = M[0x40]
0x163: V118 = M[V81]
0x165: V119 = 0x20
0x167: V120 = ADD 0x20 V81
0x16e: V121 = 0x0
0x170: V122 = 0x4
0x172: V123 = 0x20
0x175: V124 = 0x1f
0x177: V125 = ADD 0x1f V118
0x178: V126 = DIV V125 0x20
0x179: V127 = 0xf
0x17b: V128 = MUL 0xf V126
0x17c: V129 = 0x3
0x17e: V130 = ADD 0x3 V128
0x17f: V131 = CALL V130 0x4 0x0 V120 V118 V117 V118
0x183: V132 = ADD V118 V117
0x189: M[V132] = 0x2
0x18a: V133 = 0x20
0x18c: V134 = ADD 0x20 V132
0x18d: V135 = 0x40
0x18f: V136 = M[0x40]
0x192: V137 = SUB V134 V136
0x194: V138 = SHA3 V136 V137
0x195: V139 = 0x0
0x19a: V140 = M[V87]
0x19c: V141 = 0x20
0x19e: V142 = ADD 0x20 V87
0x1a2: V143 = S[V138]
0x1a3: V144 = 0x1
0x1a6: V145 = 0x1
0x1a8: V146 = AND 0x1 V143
0x1a9: V147 = ISZERO V146
0x1aa: V148 = 0x100
0x1ad: V149 = MUL 0x100 V147
0x1ae: V150 = SUB V149 0x1
0x1af: V151 = AND V150 V143
0x1b0: V152 = 0x2
0x1b3: V153 = DIV V151 0x2
0x1b5: V154 = 0x0
0x1b7: M[0x0] = V138
0x1b8: V155 = 0x20
0x1ba: V156 = 0x0
0x1bc: V157 = SHA3 0x0 0x20
0x1be: V158 = 0x1f
0x1c0: V159 = ADD 0x1f V153
0x1c1: V160 = 0x20
0x1c4: V161 = DIV V159 0x20
0x1c6: V162 = ADD V157 V161
0x1c9: V163 = 0x1f
0x1cb: V164 = LT 0x1f V140
0x1cc: V165 = 0x3ef
0x1cf: JUMPI 0x3ef V164
---
Entry stack: [V10, 0x56, V81, V87]
Stack pops: 2
Stack additions: [S1, S0, V138, V162, V140, V157, V142]
Exit stack: [V10, 0x56, V81, V87, V138, V162, V140, V157, V142]

================================

Block 0x1d0
[0x1d0:0x1db]
---
Predecessors: [0x156]
Successors: [0x1dc]
---
0x1d0 DUP1
0x1d1 MLOAD
0x1d2 PUSH1 0xff
0x1d4 NOT
0x1d5 AND
0x1d6 DUP4
0x1d7 DUP1
0x1d8 ADD
0x1d9 OR
0x1da DUP6
0x1db SSTORE
---
0x1d1: V166 = M[V142]
0x1d2: V167 = 0xff
0x1d4: V168 = NOT 0xff
0x1d5: V169 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V166
0x1d8: V170 = ADD V140 V140
0x1d9: V171 = OR V170 V169
0x1db: S[V138] = V171
---
Entry stack: [V10, 0x56, V81, V87, V138, V162, V140, V157, V142]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x56, V81, V87, V138, V162, V140, V157, V142]

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x1d0, 0x3ef, 0x401]
Successors: [0x1e4]
---
0x1dc JUMPDEST
0x1dd POP
0x1de PUSH2 0x3e8
0x1e1 SWAP3
0x1e2 SWAP2
0x1e3 POP
---
0x1dc: JUMPDEST 
0x1de: V172 = 0x3e8
---
Entry stack: [V10, 0x56, V81, V87, V138, V162, S2, S1, S0]
Stack pops: 4
Stack additions: [0x3e8, S3, S1]
Exit stack: [V10, 0x56, V81, V87, V138, 0x3e8, V162, S1]

================================

Block 0x1e4
[0x1e4:0x1ec]
---
Predecessors: [0x1dc, 0x1ed, 0x2a5]
Successors: [0x1ed, 0x41f]
---
0x1e4 JUMPDEST
0x1e5 DUP1
0x1e6 DUP3
0x1e7 GT
0x1e8 ISZERO
0x1e9 PUSH2 0x41f
0x1ec JUMPI
---
0x1e4: JUMPDEST 
0x1e7: V173 = GT S1 S0
0x1e8: V174 = ISZERO V173
0x1e9: V175 = 0x41f
0x1ec: JUMPI 0x41f V174
---
Entry stack: [V10, S6, S5, S4, S3, {0x3e8, 0x423}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S6, S5, S4, S3, {0x3e8, 0x423}, S1, S0]

================================

Block 0x1ed
[0x1ed:0x1f7]
---
Predecessors: [0x1e4]
Successors: [0x1e4]
---
0x1ed PUSH1 0x0
0x1ef DUP2
0x1f0 SSTORE
0x1f1 PUSH1 0x1
0x1f3 ADD
0x1f4 PUSH2 0x1e4
0x1f7 JUMP
---
0x1ed: V176 = 0x0
0x1f0: S[S0] = 0x0
0x1f1: V177 = 0x1
0x1f3: V178 = ADD 0x1 S0
0x1f4: V179 = 0x1e4
0x1f7: JUMP 0x1e4
---
Entry stack: [V10, S6, S5, S4, S3, {0x3e8, 0x423}, S1, S0]
Stack pops: 1
Stack additions: [V178]
Exit stack: [V10, S6, S5, S4, S3, {0x3e8, 0x423}, S1, V178]

================================

Block 0x1f8
[0x1f8:0x25a]
---
Predecessors: [0x2a]
Successors: [0x25b, 0x426]
---
0x1f8 JUMPDEST
0x1f9 PUSH2 0x56
0x1fc PUSH1 0x4
0x1fe DUP1
0x1ff DUP1
0x200 CALLDATALOAD
0x201 SWAP1
0x202 PUSH1 0x20
0x204 ADD
0x205 SWAP1
0x206 DUP3
0x207 ADD
0x208 DUP1
0x209 CALLDATALOAD
0x20a SWAP1
0x20b PUSH1 0x20
0x20d ADD
0x20e SWAP2
0x20f SWAP2
0x210 SWAP1
0x211 DUP1
0x212 DUP1
0x213 PUSH1 0x1f
0x215 ADD
0x216 PUSH1 0x20
0x218 DUP1
0x219 SWAP2
0x21a DIV
0x21b MUL
0x21c PUSH1 0x20
0x21e ADD
0x21f PUSH1 0x40
0x221 MLOAD
0x222 SWAP1
0x223 DUP2
0x224 ADD
0x225 PUSH1 0x40
0x227 MSTORE
0x228 DUP1
0x229 SWAP4
0x22a SWAP3
0x22b SWAP2
0x22c SWAP1
0x22d DUP2
0x22e DUP2
0x22f MSTORE
0x230 PUSH1 0x20
0x232 ADD
0x233 DUP4
0x234 DUP4
0x235 DUP1
0x236 DUP3
0x237 DUP5
0x238 CALLDATACOPY
0x239 POP
0x23a SWAP5
0x23b SWAP7
0x23c POP
0x23d POP
0x23e POP
0x23f POP
0x240 POP
0x241 POP
0x242 POP
0x243 PUSH1 0x0
0x245 SLOAD
0x246 PUSH1 0x1
0x248 PUSH1 0xa0
0x24a PUSH1 0x2
0x24c EXP
0x24d SUB
0x24e SWAP1
0x24f DUP2
0x250 AND
0x251 ORIGIN
0x252 SWAP1
0x253 SWAP2
0x254 AND
0x255 EQ
0x256 ISZERO
0x257 PUSH2 0x426
0x25a JUMPI
---
0x1f8: JUMPDEST 
0x1f9: V180 = 0x56
0x1fc: V181 = 0x4
0x200: V182 = CALLDATALOAD 0x4
0x202: V183 = 0x20
0x204: V184 = ADD 0x20 0x4
0x207: V185 = ADD 0x4 V182
0x209: V186 = CALLDATALOAD V185
0x20b: V187 = 0x20
0x20d: V188 = ADD 0x20 V185
0x213: V189 = 0x1f
0x215: V190 = ADD 0x1f V186
0x216: V191 = 0x20
0x21a: V192 = DIV V190 0x20
0x21b: V193 = MUL V192 0x20
0x21c: V194 = 0x20
0x21e: V195 = ADD 0x20 V193
0x21f: V196 = 0x40
0x221: V197 = M[0x40]
0x224: V198 = ADD V197 V195
0x225: V199 = 0x40
0x227: M[0x40] = V198
0x22f: M[V197] = V186
0x230: V200 = 0x20
0x232: V201 = ADD 0x20 V197
0x238: CALLDATACOPY V201 V188 V186
0x243: V202 = 0x0
0x245: V203 = S[0x0]
0x246: V204 = 0x1
0x248: V205 = 0xa0
0x24a: V206 = 0x2
0x24c: V207 = EXP 0x2 0xa0
0x24d: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x250: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x251: V210 = ORIGIN
0x254: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x255: V212 = EQ V211 V209
0x256: V213 = ISZERO V212
0x257: V214 = 0x426
0x25a: JUMPI 0x426 V213
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x56, V197]
Exit stack: [V10, 0x56, V197]

================================

Block 0x25b
[0x25b:0x298]
---
Predecessors: [0x1f8]
Successors: [0x299, 0x429]
---
0x25b DUP1
0x25c PUSH1 0x1
0x25e PUSH1 0x0
0x260 POP
0x261 SWAP1
0x262 DUP1
0x263 MLOAD
0x264 SWAP1
0x265 PUSH1 0x20
0x267 ADD
0x268 SWAP1
0x269 DUP3
0x26a DUP1
0x26b SLOAD
0x26c PUSH1 0x1
0x26e DUP2
0x26f PUSH1 0x1
0x271 AND
0x272 ISZERO
0x273 PUSH2 0x100
0x276 MUL
0x277 SUB
0x278 AND
0x279 PUSH1 0x2
0x27b SWAP1
0x27c DIV
0x27d SWAP1
0x27e PUSH1 0x0
0x280 MSTORE
0x281 PUSH1 0x20
0x283 PUSH1 0x0
0x285 SHA3
0x286 SWAP1
0x287 PUSH1 0x1f
0x289 ADD
0x28a PUSH1 0x20
0x28c SWAP1
0x28d DIV
0x28e DUP2
0x28f ADD
0x290 SWAP3
0x291 DUP3
0x292 PUSH1 0x1f
0x294 LT
0x295 PUSH2 0x429
0x298 JUMPI
---
0x25c: V215 = 0x1
0x25e: V216 = 0x0
0x263: V217 = M[V197]
0x265: V218 = 0x20
0x267: V219 = ADD 0x20 V197
0x26b: V220 = S[0x1]
0x26c: V221 = 0x1
0x26f: V222 = 0x1
0x271: V223 = AND 0x1 V220
0x272: V224 = ISZERO V223
0x273: V225 = 0x100
0x276: V226 = MUL 0x100 V224
0x277: V227 = SUB V226 0x1
0x278: V228 = AND V227 V220
0x279: V229 = 0x2
0x27c: V230 = DIV V228 0x2
0x27e: V231 = 0x0
0x280: M[0x0] = 0x1
0x281: V232 = 0x20
0x283: V233 = 0x0
0x285: V234 = SHA3 0x0 0x20
0x287: V235 = 0x1f
0x289: V236 = ADD 0x1f V230
0x28a: V237 = 0x20
0x28d: V238 = DIV V236 0x20
0x28f: V239 = ADD V234 V238
0x292: V240 = 0x1f
0x294: V241 = LT 0x1f V217
0x295: V242 = 0x429
0x298: JUMPI 0x429 V241
---
Entry stack: [V10, 0x56, V197]
Stack pops: 1
Stack additions: [S0, 0x1, V239, V217, V234, V219]
Exit stack: [V10, 0x56, V197, 0x1, V239, V217, V234, V219]

================================

Block 0x299
[0x299:0x2a4]
---
Predecessors: [0x25b]
Successors: [0x2a5]
---
0x299 DUP1
0x29a MLOAD
0x29b PUSH1 0xff
0x29d NOT
0x29e AND
0x29f DUP4
0x2a0 DUP1
0x2a1 ADD
0x2a2 OR
0x2a3 DUP6
0x2a4 SSTORE
---
0x29a: V243 = M[V219]
0x29b: V244 = 0xff
0x29d: V245 = NOT 0xff
0x29e: V246 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V243
0x2a1: V247 = ADD V217 V217
0x2a2: V248 = OR V247 V246
0x2a4: S[0x1] = V248
---
Entry stack: [V10, 0x56, V197, 0x1, V239, V217, V234, V219]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x56, V197, 0x1, V239, V217, V234, V219]

================================

Block 0x2a5
[0x2a5:0x2b0]
---
Predecessors: [0x299, 0x429, 0x43b]
Successors: [0x1e4]
---
0x2a5 JUMPDEST
0x2a6 POP
0x2a7 PUSH2 0x423
0x2aa SWAP3
0x2ab SWAP2
0x2ac POP
0x2ad PUSH2 0x1e4
0x2b0 JUMP
---
0x2a5: JUMPDEST 
0x2a7: V249 = 0x423
0x2ad: V250 = 0x1e4
0x2b0: JUMP 0x1e4
---
Entry stack: [V10, 0x56, V197, 0x1, V239, S2, S1, S0]
Stack pops: 4
Stack additions: [0x423, S3, S1]
Exit stack: [V10, 0x56, V197, 0x1, 0x423, V239, S1]

================================

Block 0x2b1
[0x2b1:0x2cb]
---
Predecessors: [0x35]
Successors: [0x2cc, 0x459]
---
0x2b1 JUMPDEST
0x2b2 PUSH2 0x56
0x2b5 PUSH1 0x0
0x2b7 SLOAD
0x2b8 ORIGIN
0x2b9 PUSH1 0x1
0x2bb PUSH1 0xa0
0x2bd PUSH1 0x2
0x2bf EXP
0x2c0 SUB
0x2c1 SWAP1
0x2c2 DUP2
0x2c3 AND
0x2c4 SWAP2
0x2c5 AND
0x2c6 EQ
0x2c7 ISZERO
0x2c8 PUSH2 0x459
0x2cb JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V251 = 0x56
0x2b5: V252 = 0x0
0x2b7: V253 = S[0x0]
0x2b8: V254 = ORIGIN
0x2b9: V255 = 0x1
0x2bb: V256 = 0xa0
0x2bd: V257 = 0x2
0x2bf: V258 = EXP 0x2 0xa0
0x2c0: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c3: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x2c5: V261 = AND V253 0xffffffffffffffffffffffffffffffffffffffff
0x2c6: V262 = EQ V261 V260
0x2c7: V263 = ISZERO V262
0x2c8: V264 = 0x459
0x2cb: JUMPI 0x459 V263
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V10, 0x56]

================================

Block 0x2cc
[0x2cc:0x2d8]
---
Predecessors: [0x2b1]
Successors: []
---
0x2cc PUSH1 0x0
0x2ce SLOAD
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 AND
0x2d8 SELFDESTRUCT
---
0x2cc: V265 = 0x0
0x2ce: V266 = S[0x0]
0x2cf: V267 = 0x1
0x2d1: V268 = 0xa0
0x2d3: V269 = 0x2
0x2d5: V270 = EXP 0x2 0xa0
0x2d6: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d7: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x2d8: SELFDESTRUCT V272
---
Entry stack: [V10, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x56]

================================

Block 0x2d9
[0x2d9:0x2ea]
---
Predecessors: [0x40]
Successors: [0x398]
---
0x2d9 JUMPDEST
0x2da PUSH2 0x398
0x2dd PUSH1 0x0
0x2df SLOAD
0x2e0 PUSH1 0x1
0x2e2 PUSH1 0xa0
0x2e4 PUSH1 0x2
0x2e6 EXP
0x2e7 SUB
0x2e8 AND
0x2e9 DUP2
0x2ea JUMP
---
0x2d9: JUMPDEST 
0x2da: V273 = 0x398
0x2dd: V274 = 0x0
0x2df: V275 = S[0x0]
0x2e0: V276 = 0x1
0x2e2: V277 = 0xa0
0x2e4: V278 = 0x2
0x2e6: V279 = EXP 0x2 0xa0
0x2e7: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e8: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x2ea: JUMP 0x398
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x398, V281]
Exit stack: [V10, 0x398, V281]

================================

Block 0x2eb
[0x2eb:0x308]
---
Predecessors: [0x4b]
Successors: [0x309, 0x426]
---
0x2eb JUMPDEST
0x2ec PUSH2 0x56
0x2ef PUSH1 0x4
0x2f1 CALLDATALOAD
0x2f2 PUSH1 0x0
0x2f4 SLOAD
0x2f5 ORIGIN
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0xa0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd SUB
0x2fe SWAP1
0x2ff DUP2
0x300 AND
0x301 SWAP2
0x302 AND
0x303 EQ
0x304 ISZERO
0x305 PUSH2 0x426
0x308 JUMPI
---
0x2eb: JUMPDEST 
0x2ec: V282 = 0x56
0x2ef: V283 = 0x4
0x2f1: V284 = CALLDATALOAD 0x4
0x2f2: V285 = 0x0
0x2f4: V286 = S[0x0]
0x2f5: V287 = ORIGIN
0x2f6: V288 = 0x1
0x2f8: V289 = 0xa0
0x2fa: V290 = 0x2
0x2fc: V291 = EXP 0x2 0xa0
0x2fd: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x300: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x302: V294 = AND V286 0xffffffffffffffffffffffffffffffffffffffff
0x303: V295 = EQ V294 V293
0x304: V296 = ISZERO V295
0x305: V297 = 0x426
0x308: JUMPI 0x426 V296
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x56, V284]
Exit stack: [V10, 0x56, V284]

================================

Block 0x309
[0x309:0x329]
---
Predecessors: [0x2eb]
Successors: [0x56]
---
0x309 PUSH1 0x0
0x30b DUP1
0x30c SLOAD
0x30d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x322 NOT
0x323 AND
0x324 DUP3
0x325 OR
0x326 SWAP1
0x327 SSTORE
0x328 POP
0x329 JUMP
---
0x309: V298 = 0x0
0x30c: V299 = S[0x0]
0x30d: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x322: V301 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x323: V302 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V299
0x325: V303 = OR V284 V302
0x327: S[0x0] = V303
0x329: JUMP 0x56
---
Entry stack: [V10, 0x56, V284]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x32a
[0x32a:0x370]
---
Predecessors: [0x3e0]
Successors: [0x371, 0x38a]
---
0x32a JUMPDEST
0x32b PUSH1 0x40
0x32d MLOAD
0x32e DUP1
0x32f DUP1
0x330 PUSH1 0x20
0x332 ADD
0x333 DUP3
0x334 DUP2
0x335 SUB
0x336 DUP3
0x337 MSTORE
0x338 DUP4
0x339 DUP2
0x33a DUP2
0x33b MLOAD
0x33c DUP2
0x33d MSTORE
0x33e PUSH1 0x20
0x340 ADD
0x341 SWAP2
0x342 POP
0x343 DUP1
0x344 MLOAD
0x345 SWAP1
0x346 PUSH1 0x20
0x348 ADD
0x349 SWAP1
0x34a DUP1
0x34b DUP4
0x34c DUP4
0x34d DUP3
0x34e SWAP1
0x34f PUSH1 0x0
0x351 PUSH1 0x4
0x353 PUSH1 0x20
0x355 DUP5
0x356 PUSH1 0x1f
0x358 ADD
0x359 DIV
0x35a PUSH1 0xf
0x35c MUL
0x35d PUSH1 0x3
0x35f ADD
0x360 CALL
0x361 POP
0x362 SWAP1
0x363 POP
0x364 SWAP1
0x365 DUP2
0x366 ADD
0x367 SWAP1
0x368 PUSH1 0x1f
0x36a AND
0x36b DUP1
0x36c ISZERO
0x36d PUSH2 0x38a
0x370 JUMPI
---
0x32a: JUMPDEST 
0x32b: V304 = 0x40
0x32d: V305 = M[0x40]
0x330: V306 = 0x20
0x332: V307 = ADD 0x20 V305
0x335: V308 = SUB V307 V305
0x337: M[V305] = V308
0x33b: V309 = M[V30]
0x33d: M[V307] = V309
0x33e: V310 = 0x20
0x340: V311 = ADD 0x20 V307
0x344: V312 = M[V30]
0x346: V313 = 0x20
0x348: V314 = ADD 0x20 V30
0x34f: V315 = 0x0
0x351: V316 = 0x4
0x353: V317 = 0x20
0x356: V318 = 0x1f
0x358: V319 = ADD 0x1f V312
0x359: V320 = DIV V319 0x20
0x35a: V321 = 0xf
0x35c: V322 = MUL 0xf V320
0x35d: V323 = 0x3
0x35f: V324 = ADD 0x3 V322
0x360: V325 = CALL V324 0x4 0x0 V314 V312 V311 V312
0x366: V326 = ADD V312 V311
0x368: V327 = 0x1f
0x36a: V328 = AND 0x1f V312
0x36c: V329 = ISZERO V328
0x36d: V330 = 0x38a
0x370: JUMPI 0x38a V329
---
Entry stack: [V10, 0x32a, V30]
Stack pops: 1
Stack additions: [S0, V305, V305, V326, V328]
Exit stack: [V10, 0x32a, V30, V305, V305, V326, V328]

================================

Block 0x371
[0x371:0x389]
---
Predecessors: [0x32a]
Successors: [0x38a]
---
0x371 DUP1
0x372 DUP3
0x373 SUB
0x374 DUP1
0x375 MLOAD
0x376 PUSH1 0x1
0x378 DUP4
0x379 PUSH1 0x20
0x37b SUB
0x37c PUSH2 0x100
0x37f EXP
0x380 SUB
0x381 NOT
0x382 AND
0x383 DUP2
0x384 MSTORE
0x385 PUSH1 0x20
0x387 ADD
0x388 SWAP2
0x389 POP
---
0x373: V331 = SUB V326 V328
0x375: V332 = M[V331]
0x376: V333 = 0x1
0x379: V334 = 0x20
0x37b: V335 = SUB 0x20 V328
0x37c: V336 = 0x100
0x37f: V337 = EXP 0x100 V335
0x380: V338 = SUB V337 0x1
0x381: V339 = NOT V338
0x382: V340 = AND V339 V332
0x384: M[V331] = V340
0x385: V341 = 0x20
0x387: V342 = ADD 0x20 V331
---
Entry stack: [V10, 0x32a, V30, V305, V305, V326, V328]
Stack pops: 2
Stack additions: [V342, S0]
Exit stack: [V10, 0x32a, V30, V305, V305, V342, V328]

================================

Block 0x38a
[0x38a:0x397]
---
Predecessors: [0x32a, 0x371]
Successors: []
---
0x38a JUMPDEST
0x38b POP
0x38c SWAP3
0x38d POP
0x38e POP
0x38f POP
0x390 PUSH1 0x40
0x392 MLOAD
0x393 DUP1
0x394 SWAP2
0x395 SUB
0x396 SWAP1
0x397 RETURN
---
0x38a: JUMPDEST 
0x390: V343 = 0x40
0x392: V344 = M[0x40]
0x395: V345 = SUB S1 V344
0x397: RETURN V344 V345
---
Entry stack: [V10, 0x32a, V30, V305, V305, S1, V328]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x32a]

================================

Block 0x398
[0x398:0x3b4]
---
Predecessors: [0x2d9]
Successors: []
---
0x398 JUMPDEST
0x399 PUSH1 0x40
0x39b DUP1
0x39c MLOAD
0x39d PUSH1 0x1
0x39f PUSH1 0xa0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 SUB
0x3a5 SWAP3
0x3a6 SWAP1
0x3a7 SWAP3
0x3a8 AND
0x3a9 DUP3
0x3aa MSTORE
0x3ab MLOAD
0x3ac SWAP1
0x3ad DUP2
0x3ae SWAP1
0x3af SUB
0x3b0 PUSH1 0x20
0x3b2 ADD
0x3b3 SWAP1
0x3b4 RETURN
---
0x398: JUMPDEST 
0x399: V346 = 0x40
0x39c: V347 = M[0x40]
0x39d: V348 = 0x1
0x39f: V349 = 0xa0
0x3a1: V350 = 0x2
0x3a3: V351 = EXP 0x2 0xa0
0x3a4: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a8: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x3aa: M[V347] = V353
0x3ab: V354 = M[0x40]
0x3af: V355 = SUB V347 V354
0x3b0: V356 = 0x20
0x3b2: V357 = ADD 0x20 V355
0x3b4: RETURN V354 V357
---
Entry stack: [V10, 0x398, V281]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x398]

================================

Block 0x3b5
[0x3b5:0x3c2]
---
Predecessors: [0x9a]
Successors: [0x3c3]
---
0x3b5 JUMPDEST
0x3b6 DUP3
0x3b7 ADD
0x3b8 SWAP2
0x3b9 SWAP1
0x3ba PUSH1 0x0
0x3bc MSTORE
0x3bd PUSH1 0x20
0x3bf PUSH1 0x0
0x3c1 SHA3
0x3c2 SWAP1
---
0x3b5: JUMPDEST 
0x3b7: V358 = ADD V51 V43
0x3ba: V359 = 0x0
0x3bc: M[0x0] = 0x1
0x3bd: V360 = 0x20
0x3bf: V361 = 0x0
0x3c1: V362 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x32a, V30, 0x1, V43, V51, 0x1, V43]
Stack pops: 3
Stack additions: [V358, V362, S2]
Exit stack: [V10, 0x32a, V30, 0x1, V43, V358, V362, V51]

================================

Block 0x3c3
[0x3c3:0x3d6]
---
Predecessors: [0x3b5, 0x3c3]
Successors: [0x3c3, 0x3d7]
---
0x3c3 JUMPDEST
0x3c4 DUP2
0x3c5 SLOAD
0x3c6 DUP2
0x3c7 MSTORE
0x3c8 SWAP1
0x3c9 PUSH1 0x1
0x3cb ADD
0x3cc SWAP1
0x3cd PUSH1 0x20
0x3cf ADD
0x3d0 DUP1
0x3d1 DUP4
0x3d2 GT
0x3d3 PUSH2 0x3c3
0x3d6 JUMPI
---
0x3c3: JUMPDEST 
0x3c5: V363 = S[S1]
0x3c7: M[S0] = V363
0x3c9: V364 = 0x1
0x3cb: V365 = ADD 0x1 S1
0x3cd: V366 = 0x20
0x3cf: V367 = ADD 0x20 S0
0x3d2: V368 = GT V358 V367
0x3d3: V369 = 0x3c3
0x3d6: JUMPI 0x3c3 V368
---
Entry stack: [V10, 0x32a, V30, 0x1, V43, V358, S1, S0]
Stack pops: 3
Stack additions: [S2, V365, V367]
Exit stack: [V10, 0x32a, V30, 0x1, V43, V358, V365, V367]

================================

Block 0x3d7
[0x3d7:0x3df]
---
Predecessors: [0x3c3]
Successors: [0x3e0]
---
0x3d7 DUP3
0x3d8 SWAP1
0x3d9 SUB
0x3da PUSH1 0x1f
0x3dc AND
0x3dd DUP3
0x3de ADD
0x3df SWAP2
---
0x3d9: V370 = SUB V367 V358
0x3da: V371 = 0x1f
0x3dc: V372 = AND 0x1f V370
0x3de: V373 = ADD V358 V372
---
Entry stack: [V10, 0x32a, V30, 0x1, V43, V358, V365, V367]
Stack pops: 3
Stack additions: [V373, S1, S2]
Exit stack: [V10, 0x32a, V30, 0x1, V43, V373, V365, V358]

================================

Block 0x3e0
[0x3e0:0x3e7]
---
Predecessors: [0x58, 0xa2, 0x3d7]
Successors: [0x32a]
---
0x3e0 JUMPDEST
0x3e1 POP
0x3e2 POP
0x3e3 POP
0x3e4 POP
0x3e5 POP
0x3e6 DUP2
0x3e7 JUMP
---
0x3e0: JUMPDEST 
0x3e7: JUMP 0x32a
---
Entry stack: [V10, 0x32a, V30, 0x1, V43, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x32a, V30]

================================

Block 0x3e8
[0x3e8:0x3ea]
---
Predecessors: [0x41f]
Successors: [0x3eb]
---
0x3e8 JUMPDEST
0x3e9 POP
0x3ea POP
---
0x3e8: JUMPDEST 
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S4, S3, S2]

================================

Block 0x3eb
[0x3eb:0x3ee]
---
Predecessors: [0xb5, 0x3e8]
Successors: [0x56]
---
0x3eb JUMPDEST
0x3ec POP
0x3ed POP
0x3ee JUMP
---
0x3eb: JUMPDEST 
0x3ee: JUMP S2
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ef
[0x3ef:0x3fd]
---
Predecessors: [0x156]
Successors: [0x1dc, 0x3fe]
---
0x3ef JUMPDEST
0x3f0 DUP3
0x3f1 DUP1
0x3f2 ADD
0x3f3 PUSH1 0x1
0x3f5 ADD
0x3f6 DUP6
0x3f7 SSTORE
0x3f8 DUP3
0x3f9 ISZERO
0x3fa PUSH2 0x1dc
0x3fd JUMPI
---
0x3ef: JUMPDEST 
0x3f2: V374 = ADD V140 V140
0x3f3: V375 = 0x1
0x3f5: V376 = ADD 0x1 V374
0x3f7: S[V138] = V376
0x3f9: V377 = ISZERO V140
0x3fa: V378 = 0x1dc
0x3fd: JUMPI 0x1dc V377
---
Entry stack: [V10, 0x56, V81, V87, V138, V162, V140, V157, V142]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x56, V81, V87, V138, V162, V140, V157, V142]

================================

Block 0x3fe
[0x3fe:0x400]
---
Predecessors: [0x3ef]
Successors: [0x401]
---
0x3fe SWAP2
0x3ff DUP3
0x400 ADD
---
0x400: V379 = ADD V142 V140
---
Entry stack: [V10, 0x56, V81, V87, V138, V162, V140, V157, V142]
Stack pops: 3
Stack additions: [S0, S1, V379]
Exit stack: [V10, 0x56, V81, V87, V138, V162, V142, V157, V379]

================================

Block 0x401
[0x401:0x409]
---
Predecessors: [0x3fe, 0x40a]
Successors: [0x1dc, 0x40a]
---
0x401 JUMPDEST
0x402 DUP3
0x403 DUP2
0x404 GT
0x405 ISZERO
0x406 PUSH2 0x1dc
0x409 JUMPI
---
0x401: JUMPDEST 
0x404: V380 = GT V379 S2
0x405: V381 = ISZERO V380
0x406: V382 = 0x1dc
0x409: JUMPI 0x1dc V381
---
Entry stack: [V10, 0x56, V81, V87, V138, V162, S2, S1, V379]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x56, V81, V87, V138, V162, S2, S1, V379]

================================

Block 0x40a
[0x40a:0x41e]
---
Predecessors: [0x401]
Successors: [0x401]
---
0x40a DUP3
0x40b MLOAD
0x40c DUP3
0x40d PUSH1 0x0
0x40f POP
0x410 SSTORE
0x411 SWAP2
0x412 PUSH1 0x20
0x414 ADD
0x415 SWAP2
0x416 SWAP1
0x417 PUSH1 0x1
0x419 ADD
0x41a SWAP1
0x41b PUSH2 0x401
0x41e JUMP
---
0x40b: V383 = M[S2]
0x40d: V384 = 0x0
0x410: S[S1] = V383
0x412: V385 = 0x20
0x414: V386 = ADD 0x20 S2
0x417: V387 = 0x1
0x419: V388 = ADD 0x1 S1
0x41b: V389 = 0x401
0x41e: JUMP 0x401
---
Entry stack: [V10, 0x56, V81, V87, V138, V162, S2, S1, V379]
Stack pops: 3
Stack additions: [V386, V388, S0]
Exit stack: [V10, 0x56, V81, V87, V138, V162, V386, V388, V379]

================================

Block 0x41f
[0x41f:0x422]
---
Predecessors: [0x1e4]
Successors: [0x3e8, 0x423]
---
0x41f JUMPDEST
0x420 POP
0x421 SWAP1
0x422 JUMP
---
0x41f: JUMPDEST 
0x422: JUMP {0x3e8, 0x423}
---
Entry stack: [V10, S6, S5, S4, S3, {0x3e8, 0x423}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S6, S5, S4, S3, S1]

================================

Block 0x423
[0x423:0x425]
---
Predecessors: [0x41f]
Successors: [0x426]
---
0x423 JUMPDEST
0x424 POP
0x425 POP
---
0x423: JUMPDEST 
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S4, S3, S2]

================================

Block 0x426
[0x426:0x428]
---
Predecessors: [0x1f8, 0x2eb, 0x423]
Successors: [0x56]
---
0x426 JUMPDEST
0x427 POP
0x428 JUMP
---
0x426: JUMPDEST 
0x428: JUMP S1
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S2]

================================

Block 0x429
[0x429:0x437]
---
Predecessors: [0x25b]
Successors: [0x2a5, 0x438]
---
0x429 JUMPDEST
0x42a DUP3
0x42b DUP1
0x42c ADD
0x42d PUSH1 0x1
0x42f ADD
0x430 DUP6
0x431 SSTORE
0x432 DUP3
0x433 ISZERO
0x434 PUSH2 0x2a5
0x437 JUMPI
---
0x429: JUMPDEST 
0x42c: V390 = ADD V217 V217
0x42d: V391 = 0x1
0x42f: V392 = ADD 0x1 V390
0x431: S[0x1] = V392
0x433: V393 = ISZERO V217
0x434: V394 = 0x2a5
0x437: JUMPI 0x2a5 V393
---
Entry stack: [V10, 0x56, V197, 0x1, V239, V217, V234, V219]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x56, V197, 0x1, V239, V217, V234, V219]

================================

Block 0x438
[0x438:0x43a]
---
Predecessors: [0x429]
Successors: [0x43b]
---
0x438 SWAP2
0x439 DUP3
0x43a ADD
---
0x43a: V395 = ADD V219 V217
---
Entry stack: [V10, 0x56, V197, 0x1, V239, V217, V234, V219]
Stack pops: 3
Stack additions: [S0, S1, V395]
Exit stack: [V10, 0x56, V197, 0x1, V239, V219, V234, V395]

================================

Block 0x43b
[0x43b:0x443]
---
Predecessors: [0x438, 0x444]
Successors: [0x2a5, 0x444]
---
0x43b JUMPDEST
0x43c DUP3
0x43d DUP2
0x43e GT
0x43f ISZERO
0x440 PUSH2 0x2a5
0x443 JUMPI
---
0x43b: JUMPDEST 
0x43e: V396 = GT V395 S2
0x43f: V397 = ISZERO V396
0x440: V398 = 0x2a5
0x443: JUMPI 0x2a5 V397
---
Entry stack: [V10, 0x56, V197, 0x1, V239, S2, S1, V395]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x56, V197, 0x1, V239, S2, S1, V395]

================================

Block 0x444
[0x444:0x458]
---
Predecessors: [0x43b]
Successors: [0x43b]
---
0x444 DUP3
0x445 MLOAD
0x446 DUP3
0x447 PUSH1 0x0
0x449 POP
0x44a SSTORE
0x44b SWAP2
0x44c PUSH1 0x20
0x44e ADD
0x44f SWAP2
0x450 SWAP1
0x451 PUSH1 0x1
0x453 ADD
0x454 SWAP1
0x455 PUSH2 0x43b
0x458 JUMP
---
0x445: V399 = M[S2]
0x447: V400 = 0x0
0x44a: S[S1] = V399
0x44c: V401 = 0x20
0x44e: V402 = ADD 0x20 S2
0x451: V403 = 0x1
0x453: V404 = ADD 0x1 S1
0x455: V405 = 0x43b
0x458: JUMP 0x43b
---
Entry stack: [V10, 0x56, V197, 0x1, V239, S2, S1, V395]
Stack pops: 3
Stack additions: [V402, V404, S0]
Exit stack: [V10, 0x56, V197, 0x1, V239, V402, V404, V395]

================================

Block 0x459
[0x459:0x45a]
---
Predecessors: [0x2b1]
Successors: [0x56]
---
0x459 JUMPDEST
0x45a JUMP
---
0x459: JUMPDEST 
0x45a: JUMP 0x56
---
Entry stack: [V10, 0x56]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x58
Exit block: 0x38a
Body: 0x58, 0x9a, 0xa2, 0x32a, 0x371, 0x38a, 0x3b5, 0x3c3, 0x3d7, 0x3e0

Function 1:
Public function signature: 0x38178fbe
Entry block: 0xb5
Exit block: 0x56
Body: 0x56, 0xb5, 0x156, 0x1d0, 0x1dc, 0x1e4, 0x1ed, 0x3e8, 0x3eb, 0x3ef, 0x3fe, 0x401, 0x40a, 0x41f, 0x423, 0x426

Function 2:
Public function signature: 0x5353a2d8
Entry block: 0x1f8
Exit block: 0x56
Body: 0x56, 0x1e4, 0x1ed, 0x1f8, 0x25b, 0x299, 0x2a5, 0x3e8, 0x3eb, 0x41f, 0x423, 0x426, 0x429, 0x438, 0x43b, 0x444

Function 3:
Public function signature: 0x83197ef0
Entry block: 0x2b1
Exit block: 0x56
Body: 0x56, 0x2b1, 0x2cc, 0x459

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x2d9
Exit block: 0x398
Body: 0x2d9, 0x398

Function 5:
Public function signature: 0xa6f9dae1
Entry block: 0x2eb
Exit block: 0x56
Body: 0x56, 0x2eb, 0x309, 0x426

Function 6:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

