Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x98
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x98
0xa: JUMPI 0x98 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x9a]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x8ae4b0c
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x9a
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x8ae4b0c
0x1a: V12 = EQ V10 0x8ae4b0c
0x1b: V13 = 0x9a
0x1e: JUMPI 0x9a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xb5]
---
0x1f DUP1
0x20 PUSH4 0x13af4035
0x25 EQ
0x26 PUSH2 0xb5
0x29 JUMPI
---
0x20: V14 = 0x13af4035
0x25: V15 = EQ 0x13af4035 V10
0x26: V16 = 0xb5
0x29: JUMPI 0xb5 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x105]
---
0x2a DUP1
0x2b PUSH4 0x18def8ef
0x30 EQ
0x31 PUSH2 0x105
0x34 JUMPI
---
0x2b: V17 = 0x18def8ef
0x30: V18 = EQ 0x18def8ef V10
0x31: V19 = 0x105
0x34: JUMPI 0x105 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x11d]
---
0x35 DUP1
0x36 PUSH4 0x19179123
0x3b EQ
0x3c PUSH2 0x11d
0x3f JUMPI
---
0x36: V20 = 0x19179123
0x3b: V21 = EQ 0x19179123 V10
0x3c: V22 = 0x11d
0x3f: JUMPI 0x11d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x17d]
---
0x40 DUP1
0x41 PUSH4 0x501895ae
0x46 EQ
0x47 PUSH2 0x17d
0x4a JUMPI
---
0x41: V23 = 0x501895ae
0x46: V24 = EQ 0x501895ae V10
0x47: V25 = 0x17d
0x4a: JUMPI 0x17d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1a8]
---
0x4b DUP1
0x4c PUSH4 0x63de5323
0x51 EQ
0x52 PUSH2 0x1a8
0x55 JUMPI
---
0x4c: V26 = 0x63de5323
0x51: V27 = EQ 0x63de5323 V10
0x52: V28 = 0x1a8
0x55: JUMPI 0x1a8 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1dc]
---
0x56 DUP1
0x57 PUSH4 0x81d12c58
0x5c EQ
0x5d PUSH2 0x1dc
0x60 JUMPI
---
0x57: V29 = 0x81d12c58
0x5c: V30 = EQ 0x81d12c58 V10
0x5d: V31 = 0x1dc
0x60: JUMPI 0x1dc V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x207]
---
0x61 DUP1
0x62 PUSH4 0x8da5cb5b
0x67 EQ
0x68 PUSH2 0x207
0x6b JUMPI
---
0x62: V32 = 0x8da5cb5b
0x67: V33 = EQ 0x8da5cb5b V10
0x68: V34 = 0x207
0x6b: JUMPI 0x207 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x219]
---
0x6c DUP1
0x6d PUSH4 0xa230c524
0x72 EQ
0x73 PUSH2 0x219
0x76 JUMPI
---
0x6d: V35 = 0xa230c524
0x72: V36 = EQ 0xa230c524 V10
0x73: V37 = 0x219
0x76: JUMPI 0x219 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x241]
---
0x77 DUP1
0x78 PUSH4 0xab0da5a9
0x7d EQ
0x7e PUSH2 0x241
0x81 JUMPI
---
0x78: V38 = 0xab0da5a9
0x7d: V39 = EQ 0xab0da5a9 V10
0x7e: V40 = 0x241
0x81: JUMPI 0x241 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x2a4]
---
0x82 DUP1
0x83 PUSH4 0xca6d56dc
0x88 EQ
0x89 PUSH2 0x2a4
0x8c JUMPI
---
0x83: V41 = 0xca6d56dc
0x88: V42 = EQ 0xca6d56dc V10
0x89: V43 = 0x2a4
0x8c: JUMPI 0x2a4 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x307]
---
0x8d DUP1
0x8e PUSH4 0xdfab9895
0x93 EQ
0x94 PUSH2 0x307
0x97 JUMPI
---
0x8e: V44 = 0xdfab9895
0x93: V45 = EQ 0xdfab9895 V10
0x94: V46 = 0x307
0x97: JUMPI 0x307 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0x99]
---
Predecessors: [0x0, 0x8d]
Successors: []
---
0x98 JUMPDEST
0x99 STOP
---
0x98: JUMPDEST 
0x99: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9a
[0x9a:0xb4]
---
Predecessors: [0xb]
Successors: [0x33c]
---
0x9a JUMPDEST
0x9b PUSH2 0x33c
0x9e PUSH1 0x4
0xa0 CALLDATALOAD
0xa1 PUSH1 0x5
0xa3 PUSH1 0x20
0xa5 MSTORE
0xa6 PUSH1 0x0
0xa8 SWAP1
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x40
0xad SWAP1
0xae SHA3
0xaf SLOAD
0xb0 PUSH1 0xff
0xb2 AND
0xb3 DUP2
0xb4 JUMP
---
0x9a: JUMPDEST 
0x9b: V47 = 0x33c
0x9e: V48 = 0x4
0xa0: V49 = CALLDATALOAD 0x4
0xa1: V50 = 0x5
0xa3: V51 = 0x20
0xa5: M[0x20] = 0x5
0xa6: V52 = 0x0
0xaa: M[0x0] = V49
0xab: V53 = 0x40
0xae: V54 = SHA3 0x0 0x40
0xaf: V55 = S[V54]
0xb0: V56 = 0xff
0xb2: V57 = AND 0xff V55
0xb4: JUMP 0x33c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33c, V57]
Exit stack: [V10, 0x33c, V57]

================================

Block 0xb5
[0xb5:0xd3]
---
Predecessors: [0x1f]
Successors: [0xd4, 0xe6]
---
0xb5 JUMPDEST
0xb6 PUSH2 0x33c
0xb9 PUSH1 0x4
0xbb CALLDATALOAD
0xbc PUSH1 0x0
0xbe DUP1
0xbf SLOAD
0xc0 CALLER
0xc1 PUSH1 0x1
0xc3 PUSH1 0xa0
0xc5 PUSH1 0x2
0xc7 EXP
0xc8 SUB
0xc9 SWAP1
0xca DUP2
0xcb AND
0xcc SWAP2
0xcd AND
0xce EQ
0xcf DUP1
0xd0 PUSH2 0xe6
0xd3 JUMPI
---
0xb5: JUMPDEST 
0xb6: V58 = 0x33c
0xb9: V59 = 0x4
0xbb: V60 = CALLDATALOAD 0x4
0xbc: V61 = 0x0
0xbf: V62 = S[0x0]
0xc0: V63 = CALLER
0xc1: V64 = 0x1
0xc3: V65 = 0xa0
0xc5: V66 = 0x2
0xc7: V67 = EXP 0x2 0xa0
0xc8: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xcd: V70 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xce: V71 = EQ V70 V69
0xd0: V72 = 0xe6
0xd3: JUMPI 0xe6 V71
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33c, V60, 0x0, V71]
Exit stack: [V10, 0x33c, V60, 0x0, V71]

================================

Block 0xd4
[0xd4:0xe5]
---
Predecessors: [0xb5]
Successors: [0xe6]
---
0xd4 POP
0xd5 DUP1
0xd6 SLOAD
0xd7 ORIGIN
0xd8 PUSH1 0x1
0xda PUSH1 0xa0
0xdc PUSH1 0x2
0xde EXP
0xdf SUB
0xe0 SWAP1
0xe1 DUP2
0xe2 AND
0xe3 SWAP2
0xe4 AND
0xe5 EQ
---
0xd6: V73 = S[0x0]
0xd7: V74 = ORIGIN
0xd8: V75 = 0x1
0xda: V76 = 0xa0
0xdc: V77 = 0x2
0xde: V78 = EXP 0x2 0xa0
0xdf: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xe4: V81 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V82 = EQ V81 V80
---
Entry stack: [V10, 0x33c, V60, 0x0, V71]
Stack pops: 2
Stack additions: [S1, V82]
Exit stack: [V10, 0x33c, V60, 0x0, V82]

================================

Block 0xe6
[0xe6:0xeb]
---
Predecessors: [0xb5, 0xd4]
Successors: [0xec, 0x23c]
---
0xe6 JUMPDEST
0xe7 ISZERO
0xe8 PUSH2 0x23c
0xeb JUMPI
---
0xe6: JUMPDEST 
0xe7: V83 = ISZERO S0
0xe8: V84 = 0x23c
0xeb: JUMPI 0x23c V83
---
Entry stack: [V10, 0x33c, V60, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x33c, V60, 0x0]

================================

Block 0xec
[0xec:0x104]
---
Predecessors: [0xe6]
Successors: [0x23c]
---
0xec POP
0xed PUSH1 0x0
0xef DUP1
0xf0 SLOAD
0xf1 PUSH1 0x1
0xf3 PUSH1 0xa0
0xf5 PUSH1 0x2
0xf7 EXP
0xf8 SUB
0xf9 NOT
0xfa AND
0xfb DUP3
0xfc OR
0xfd SWAP1
0xfe SSTORE
0xff PUSH1 0x1
0x101 PUSH2 0x23c
0x104 JUMP
---
0xed: V85 = 0x0
0xf0: V86 = S[0x0]
0xf1: V87 = 0x1
0xf3: V88 = 0xa0
0xf5: V89 = 0x2
0xf7: V90 = EXP 0x2 0xa0
0xf8: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9: V92 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xfa: V93 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V86
0xfc: V94 = OR V60 V93
0xfe: S[0x0] = V94
0xff: V95 = 0x1
0x101: V96 = 0x23c
0x104: JUMP 0x23c
---
Entry stack: [V10, 0x33c, V60, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x33c, V60, 0x1]

================================

Block 0x105
[0x105:0x11c]
---
Predecessors: [0x2a]
Successors: [0x33c]
---
0x105 JUMPDEST
0x106 PUSH2 0x33c
0x109 PUSH1 0x4
0x10b CALLDATALOAD
0x10c PUSH1 0x1
0x10e PUSH1 0x20
0x110 MSTORE
0x111 PUSH1 0x0
0x113 SWAP1
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x40
0x118 SWAP1
0x119 SHA3
0x11a SLOAD
0x11b DUP2
0x11c JUMP
---
0x105: JUMPDEST 
0x106: V97 = 0x33c
0x109: V98 = 0x4
0x10b: V99 = CALLDATALOAD 0x4
0x10c: V100 = 0x1
0x10e: V101 = 0x20
0x110: M[0x20] = 0x1
0x111: V102 = 0x0
0x115: M[0x0] = V99
0x116: V103 = 0x40
0x119: V104 = SHA3 0x0 0x40
0x11a: V105 = S[V104]
0x11c: JUMP 0x33c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33c, V105]
Exit stack: [V10, 0x33c, V105]

================================

Block 0x11d
[0x11d:0x13b]
---
Predecessors: [0x35]
Successors: [0x13c, 0x14e]
---
0x11d JUMPDEST
0x11e PUSH2 0x33c
0x121 PUSH1 0x4
0x123 CALLDATALOAD
0x124 PUSH1 0x0
0x126 DUP1
0x127 SLOAD
0x128 CALLER
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 SWAP1
0x132 DUP2
0x133 AND
0x134 SWAP2
0x135 AND
0x136 EQ
0x137 DUP1
0x138 PUSH2 0x14e
0x13b JUMPI
---
0x11d: JUMPDEST 
0x11e: V106 = 0x33c
0x121: V107 = 0x4
0x123: V108 = CALLDATALOAD 0x4
0x124: V109 = 0x0
0x127: V110 = S[0x0]
0x128: V111 = CALLER
0x129: V112 = 0x1
0x12b: V113 = 0xa0
0x12d: V114 = 0x2
0x12f: V115 = EXP 0x2 0xa0
0x130: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x133: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x135: V118 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x136: V119 = EQ V118 V117
0x138: V120 = 0x14e
0x13b: JUMPI 0x14e V119
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33c, V108, 0x0, V119]
Exit stack: [V10, 0x33c, V108, 0x0, V119]

================================

Block 0x13c
[0x13c:0x14d]
---
Predecessors: [0x11d]
Successors: [0x14e]
---
0x13c POP
0x13d DUP1
0x13e SLOAD
0x13f ORIGIN
0x140 PUSH1 0x1
0x142 PUSH1 0xa0
0x144 PUSH1 0x2
0x146 EXP
0x147 SUB
0x148 SWAP1
0x149 DUP2
0x14a AND
0x14b SWAP2
0x14c AND
0x14d EQ
---
0x13e: V121 = S[0x0]
0x13f: V122 = ORIGIN
0x140: V123 = 0x1
0x142: V124 = 0xa0
0x144: V125 = 0x2
0x146: V126 = EXP 0x2 0xa0
0x147: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14a: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x14c: V129 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V130 = EQ V129 V128
---
Entry stack: [V10, 0x33c, V108, 0x0, V119]
Stack pops: 2
Stack additions: [S1, V130]
Exit stack: [V10, 0x33c, V108, 0x0, V130]

================================

Block 0x14e
[0x14e:0x153]
---
Predecessors: [0x11d, 0x13c]
Successors: [0x154, 0x23c]
---
0x14e JUMPDEST
0x14f ISZERO
0x150 PUSH2 0x23c
0x153 JUMPI
---
0x14e: JUMPDEST 
0x14f: V131 = ISZERO S0
0x150: V132 = 0x23c
0x153: JUMPI 0x23c V131
---
Entry stack: [V10, 0x33c, V108, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x33c, V108, 0x0]

================================

Block 0x154
[0x154:0x175]
---
Predecessors: [0x14e]
Successors: [0x176, 0x451]
---
0x154 PUSH1 0x1
0x156 PUSH1 0xa0
0x158 PUSH1 0x2
0x15a EXP
0x15b SUB
0x15c DUP3
0x15d AND
0x15e PUSH1 0x0
0x160 SWAP1
0x161 DUP2
0x162 MSTORE
0x163 PUSH1 0x5
0x165 PUSH1 0x20
0x167 MSTORE
0x168 PUSH1 0x40
0x16a SWAP1
0x16b SHA3
0x16c SLOAD
0x16d PUSH1 0xff
0x16f AND
0x170 ISZERO
0x171 ISZERO
0x172 PUSH2 0x451
0x175 JUMPI
---
0x154: V133 = 0x1
0x156: V134 = 0xa0
0x158: V135 = 0x2
0x15a: V136 = EXP 0x2 0xa0
0x15b: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15d: V138 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V139 = 0x0
0x162: M[0x0] = V138
0x163: V140 = 0x5
0x165: V141 = 0x20
0x167: M[0x20] = 0x5
0x168: V142 = 0x40
0x16b: V143 = SHA3 0x0 0x40
0x16c: V144 = S[V143]
0x16d: V145 = 0xff
0x16f: V146 = AND 0xff V144
0x170: V147 = ISZERO V146
0x171: V148 = ISZERO V147
0x172: V149 = 0x451
0x175: JUMPI 0x451 V148
---
Entry stack: [V10, 0x33c, V108, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x33c, V108, 0x0]

================================

Block 0x176
[0x176:0x17c]
---
Predecessors: [0x154]
Successors: [0x23c]
---
0x176 POP
0x177 PUSH1 0x0
0x179 PUSH2 0x23c
0x17c JUMP
---
0x177: V150 = 0x0
0x179: V151 = 0x23c
0x17c: JUMP 0x23c
---
Entry stack: [V10, 0x33c, V108, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x33c, V108, 0x0]

================================

Block 0x17d
[0x17d:0x190]
---
Predecessors: [0x40]
Successors: [0x191]
---
0x17d JUMPDEST
0x17e PUSH2 0x33c
0x181 PUSH1 0x4
0x183 CALLDATALOAD
0x184 PUSH1 0x4
0x186 DUP1
0x187 SLOAD
0x188 DUP3
0x189 SWAP1
0x18a DUP2
0x18b LT
0x18c ISZERO
0x18d PUSH2 0x2
0x190 JUMPI
---
0x17d: JUMPDEST 
0x17e: V152 = 0x33c
0x181: V153 = 0x4
0x183: V154 = CALLDATALOAD 0x4
0x184: V155 = 0x4
0x187: V156 = S[0x4]
0x18b: V157 = LT V154 V156
0x18c: V158 = ISZERO V157
0x18d: V159 = 0x2
0x190: THROWI V158
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33c, V154, 0x4, V154]
Exit stack: [V10, 0x33c, V154, 0x4, V154]

================================

Block 0x191
[0x191:0x1a7]
---
Predecessors: [0x17d]
Successors: [0x33c]
---
0x191 POP
0x192 PUSH1 0x0
0x194 MSTORE
0x195 PUSH1 0x0
0x197 DUP1
0x198 MLOAD
0x199 PUSH1 0x20
0x19b PUSH2 0x7be
0x19e DUP4
0x19f CODECOPY
0x1a0 DUP2
0x1a1 MLOAD
0x1a2 SWAP2
0x1a3 MSTORE
0x1a4 ADD
0x1a5 SLOAD
0x1a6 DUP2
0x1a7 JUMP
---
0x192: V160 = 0x0
0x194: M[0x0] = 0x4
0x195: V161 = 0x0
0x198: V162 = M[0x0]
0x199: V163 = 0x20
0x19b: V164 = 0x7be
0x19f: CODECOPY 0x0 0x7be 0x20
0x1a1: V165 = M[0x0]
0x1a3: M[0x0] = V162
0x1a4: V166 = ADD V165 V154
0x1a5: V167 = S[V166]
0x1a7: JUMP 0x33c
---
Entry stack: [V10, 0x33c, V154, 0x4, V154]
Stack pops: 4
Stack additions: [S3, V167]
Exit stack: [V10, 0x33c, V167]

================================

Block 0x1a8
[0x1a8:0x1bb]
---
Predecessors: [0x4b]
Successors: [0x1bc]
---
0x1a8 JUMPDEST
0x1a9 PUSH2 0x34e
0x1ac PUSH1 0x4
0x1ae CALLDATALOAD
0x1af PUSH1 0x3
0x1b1 DUP1
0x1b2 SLOAD
0x1b3 DUP3
0x1b4 SWAP1
0x1b5 DUP2
0x1b6 LT
0x1b7 ISZERO
0x1b8 PUSH2 0x2
0x1bb JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V168 = 0x34e
0x1ac: V169 = 0x4
0x1ae: V170 = CALLDATALOAD 0x4
0x1af: V171 = 0x3
0x1b2: V172 = S[0x3]
0x1b6: V173 = LT V170 V172
0x1b7: V174 = ISZERO V173
0x1b8: V175 = 0x2
0x1bb: THROWI V174
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x34e, V170, 0x3, V170]
Exit stack: [V10, 0x34e, V170, 0x3, V170]

================================

Block 0x1bc
[0x1bc:0x1db]
---
Predecessors: [0x1a8]
Successors: [0x34e]
---
0x1bc POP
0x1bd PUSH1 0x0
0x1bf MSTORE
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 MLOAD
0x1c4 PUSH1 0x20
0x1c6 PUSH2 0x79e
0x1c9 DUP4
0x1ca CODECOPY
0x1cb DUP2
0x1cc MLOAD
0x1cd SWAP2
0x1ce MSTORE
0x1cf ADD
0x1d0 SLOAD
0x1d1 PUSH1 0x1
0x1d3 PUSH1 0xa0
0x1d5 PUSH1 0x2
0x1d7 EXP
0x1d8 SUB
0x1d9 AND
0x1da DUP2
0x1db JUMP
---
0x1bd: V176 = 0x0
0x1bf: M[0x0] = 0x3
0x1c0: V177 = 0x0
0x1c3: V178 = M[0x0]
0x1c4: V179 = 0x20
0x1c6: V180 = 0x79e
0x1ca: CODECOPY 0x0 0x79e 0x20
0x1cc: V181 = M[0x0]
0x1ce: M[0x0] = V178
0x1cf: V182 = ADD V181 V170
0x1d0: V183 = S[V182]
0x1d1: V184 = 0x1
0x1d3: V185 = 0xa0
0x1d5: V186 = 0x2
0x1d7: V187 = EXP 0x2 0xa0
0x1d8: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x1db: JUMP 0x34e
---
Entry stack: [V10, 0x34e, V170, 0x3, V170]
Stack pops: 4
Stack additions: [S3, V189]
Exit stack: [V10, 0x34e, V189]

================================

Block 0x1dc
[0x1dc:0x1ef]
---
Predecessors: [0x56]
Successors: [0x1f0]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x33c
0x1e0 PUSH1 0x4
0x1e2 CALLDATALOAD
0x1e3 PUSH1 0x2
0x1e5 DUP1
0x1e6 SLOAD
0x1e7 DUP3
0x1e8 SWAP1
0x1e9 DUP2
0x1ea LT
0x1eb ISZERO
0x1ec PUSH2 0x2
0x1ef JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V190 = 0x33c
0x1e0: V191 = 0x4
0x1e2: V192 = CALLDATALOAD 0x4
0x1e3: V193 = 0x2
0x1e6: V194 = S[0x2]
0x1ea: V195 = LT V192 V194
0x1eb: V196 = ISZERO V195
0x1ec: V197 = 0x2
0x1ef: THROWI V196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33c, V192, 0x2, V192]
Exit stack: [V10, 0x33c, V192, 0x2, V192]

================================

Block 0x1f0
[0x1f0:0x206]
---
Predecessors: [0x1dc]
Successors: [0x33c]
---
0x1f0 POP
0x1f1 PUSH1 0x0
0x1f3 MSTORE
0x1f4 PUSH1 0x0
0x1f6 DUP1
0x1f7 MLOAD
0x1f8 PUSH1 0x20
0x1fa PUSH2 0x77e
0x1fd DUP4
0x1fe CODECOPY
0x1ff DUP2
0x200 MLOAD
0x201 SWAP2
0x202 MSTORE
0x203 ADD
0x204 SLOAD
0x205 DUP2
0x206 JUMP
---
0x1f1: V198 = 0x0
0x1f3: M[0x0] = 0x2
0x1f4: V199 = 0x0
0x1f7: V200 = M[0x0]
0x1f8: V201 = 0x20
0x1fa: V202 = 0x77e
0x1fe: CODECOPY 0x0 0x77e 0x20
0x200: V203 = M[0x0]
0x202: M[0x0] = V200
0x203: V204 = ADD V203 V192
0x204: V205 = S[V204]
0x206: JUMP 0x33c
---
Entry stack: [V10, 0x33c, V192, 0x2, V192]
Stack pops: 4
Stack additions: [S3, V205]
Exit stack: [V10, 0x33c, V205]

================================

Block 0x207
[0x207:0x218]
---
Predecessors: [0x61]
Successors: [0x34e]
---
0x207 JUMPDEST
0x208 PUSH2 0x34e
0x20b PUSH1 0x0
0x20d SLOAD
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 AND
0x217 DUP2
0x218 JUMP
---
0x207: JUMPDEST 
0x208: V206 = 0x34e
0x20b: V207 = 0x0
0x20d: V208 = S[0x0]
0x20e: V209 = 0x1
0x210: V210 = 0xa0
0x212: V211 = 0x2
0x214: V212 = EXP 0x2 0xa0
0x215: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x218: JUMP 0x34e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x34e, V214]
Exit stack: [V10, 0x34e, V214]

================================

Block 0x219
[0x219:0x23b]
---
Predecessors: [0x6c]
Successors: [0x23c]
---
0x219 JUMPDEST
0x21a PUSH2 0x33c
0x21d PUSH1 0x4
0x21f CALLDATALOAD
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 DUP2
0x229 AND
0x22a PUSH1 0x0
0x22c SWAP1
0x22d DUP2
0x22e MSTORE
0x22f PUSH1 0x5
0x231 PUSH1 0x20
0x233 MSTORE
0x234 PUSH1 0x40
0x236 SWAP1
0x237 SHA3
0x238 SLOAD
0x239 PUSH1 0xff
0x23b AND
---
0x219: JUMPDEST 
0x21a: V215 = 0x33c
0x21d: V216 = 0x4
0x21f: V217 = CALLDATALOAD 0x4
0x220: V218 = 0x1
0x222: V219 = 0xa0
0x224: V220 = 0x2
0x226: V221 = EXP 0x2 0xa0
0x227: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x229: V223 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V224 = 0x0
0x22e: M[0x0] = V223
0x22f: V225 = 0x5
0x231: V226 = 0x20
0x233: M[0x20] = 0x5
0x234: V227 = 0x40
0x237: V228 = SHA3 0x0 0x40
0x238: V229 = S[V228]
0x239: V230 = 0xff
0x23b: V231 = AND 0xff V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33c, V217, V231]
Exit stack: [V10, 0x33c, V217, V231]

================================

Block 0x23c
[0x23c:0x240]
---
Predecessors: [0xe6, 0xec, 0x14e, 0x176, 0x219, 0x451]
Successors: [0x33c]
---
0x23c JUMPDEST
0x23d SWAP2
0x23e SWAP1
0x23f POP
0x240 JUMP
---
0x23c: JUMPDEST 
0x240: JUMP 0x33c
---
Entry stack: [V10, 0x33c, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x241
[0x241:0x261]
---
Predecessors: [0x77]
Successors: [0x262, 0x274]
---
0x241 JUMPDEST
0x242 PUSH2 0x33c
0x245 PUSH1 0x4
0x247 CALLDATALOAD
0x248 PUSH1 0x0
0x24a DUP1
0x24b SLOAD
0x24c DUP2
0x24d SWAP1
0x24e CALLER
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 SWAP1
0x258 DUP2
0x259 AND
0x25a SWAP2
0x25b AND
0x25c EQ
0x25d DUP1
0x25e PUSH2 0x274
0x261 JUMPI
---
0x241: JUMPDEST 
0x242: V232 = 0x33c
0x245: V233 = 0x4
0x247: V234 = CALLDATALOAD 0x4
0x248: V235 = 0x0
0x24b: V236 = S[0x0]
0x24e: V237 = CALLER
0x24f: V238 = 0x1
0x251: V239 = 0xa0
0x253: V240 = 0x2
0x255: V241 = EXP 0x2 0xa0
0x256: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x259: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x25b: V244 = AND V236 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V245 = EQ V244 V243
0x25e: V246 = 0x274
0x261: JUMPI 0x274 V245
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33c, V234, 0x0, 0x0, V245]
Exit stack: [V10, 0x33c, V234, 0x0, 0x0, V245]

================================

Block 0x262
[0x262:0x273]
---
Predecessors: [0x241]
Successors: [0x274]
---
0x262 POP
0x263 DUP1
0x264 SLOAD
0x265 ORIGIN
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e SWAP1
0x26f DUP2
0x270 AND
0x271 SWAP2
0x272 AND
0x273 EQ
---
0x264: V247 = S[0x0]
0x265: V248 = ORIGIN
0x266: V249 = 0x1
0x268: V250 = 0xa0
0x26a: V251 = 0x2
0x26c: V252 = EXP 0x2 0xa0
0x26d: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x270: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x272: V255 = AND V247 0xffffffffffffffffffffffffffffffffffffffff
0x273: V256 = EQ V255 V254
---
Entry stack: [V10, 0x33c, V234, 0x0, 0x0, V245]
Stack pops: 2
Stack additions: [S1, V256]
Exit stack: [V10, 0x33c, V234, 0x0, 0x0, V256]

================================

Block 0x274
[0x274:0x279]
---
Predecessors: [0x241, 0x262]
Successors: [0x27a, 0x44b]
---
0x274 JUMPDEST
0x275 ISZERO
0x276 PUSH2 0x44b
0x279 JUMPI
---
0x274: JUMPDEST 
0x275: V257 = ISZERO S0
0x276: V258 = 0x44b
0x279: JUMPI 0x44b V257
---
Entry stack: [V10, 0x33c, V234, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x33c, V234, 0x0, 0x0]

================================

Block 0x27a
[0x27a:0x29b]
---
Predecessors: [0x274]
Successors: [0x29c, 0x6b0]
---
0x27a POP
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 DUP3
0x284 AND
0x285 PUSH1 0x0
0x287 SWAP1
0x288 DUP2
0x289 MSTORE
0x28a PUSH1 0x1
0x28c PUSH1 0x20
0x28e MSTORE
0x28f PUSH1 0x40
0x291 DUP2
0x292 SHA3
0x293 SLOAD
0x294 SWAP1
0x295 DUP2
0x296 EQ
0x297 ISZERO
0x298 PUSH2 0x6b0
0x29b JUMPI
---
0x27b: V259 = 0x1
0x27d: V260 = 0xa0
0x27f: V261 = 0x2
0x281: V262 = EXP 0x2 0xa0
0x282: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V264 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x285: V265 = 0x0
0x289: M[0x0] = V264
0x28a: V266 = 0x1
0x28c: V267 = 0x20
0x28e: M[0x20] = 0x1
0x28f: V268 = 0x40
0x292: V269 = SHA3 0x0 0x40
0x293: V270 = S[V269]
0x296: V271 = EQ V270 0x0
0x297: V272 = ISZERO V271
0x298: V273 = 0x6b0
0x29b: JUMPI 0x6b0 V272
---
Entry stack: [V10, 0x33c, V234, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V270]
Exit stack: [V10, 0x33c, V234, 0x0, V270]

================================

Block 0x29c
[0x29c:0x2a3]
---
Predecessors: [0x27a]
Successors: [0x44b]
---
0x29c PUSH1 0x0
0x29e SWAP2
0x29f POP
0x2a0 PUSH2 0x44b
0x2a3 JUMP
---
0x29c: V274 = 0x0
0x2a0: V275 = 0x44b
0x2a3: JUMP 0x44b
---
Entry stack: [V10, 0x33c, V234, 0x0, V270]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x33c, V234, 0x0, V270]

================================

Block 0x2a4
[0x2a4:0x2c4]
---
Predecessors: [0x82]
Successors: [0x2c5, 0x2d7]
---
0x2a4 JUMPDEST
0x2a5 PUSH2 0x33c
0x2a8 PUSH1 0x4
0x2aa CALLDATALOAD
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae SLOAD
0x2af DUP2
0x2b0 SWAP1
0x2b1 CALLER
0x2b2 PUSH1 0x1
0x2b4 PUSH1 0xa0
0x2b6 PUSH1 0x2
0x2b8 EXP
0x2b9 SUB
0x2ba SWAP1
0x2bb DUP2
0x2bc AND
0x2bd SWAP2
0x2be AND
0x2bf EQ
0x2c0 DUP1
0x2c1 PUSH2 0x2d7
0x2c4 JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V276 = 0x33c
0x2a8: V277 = 0x4
0x2aa: V278 = CALLDATALOAD 0x4
0x2ab: V279 = 0x0
0x2ae: V280 = S[0x0]
0x2b1: V281 = CALLER
0x2b2: V282 = 0x1
0x2b4: V283 = 0xa0
0x2b6: V284 = 0x2
0x2b8: V285 = EXP 0x2 0xa0
0x2b9: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bc: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x2be: V288 = AND V280 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V289 = EQ V288 V287
0x2c1: V290 = 0x2d7
0x2c4: JUMPI 0x2d7 V289
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33c, V278, 0x0, 0x0, V289]
Exit stack: [V10, 0x33c, V278, 0x0, 0x0, V289]

================================

Block 0x2c5
[0x2c5:0x2d6]
---
Predecessors: [0x2a4]
Successors: [0x2d7]
---
0x2c5 POP
0x2c6 DUP1
0x2c7 SLOAD
0x2c8 ORIGIN
0x2c9 PUSH1 0x1
0x2cb PUSH1 0xa0
0x2cd PUSH1 0x2
0x2cf EXP
0x2d0 SUB
0x2d1 SWAP1
0x2d2 DUP2
0x2d3 AND
0x2d4 SWAP2
0x2d5 AND
0x2d6 EQ
---
0x2c7: V291 = S[0x0]
0x2c8: V292 = ORIGIN
0x2c9: V293 = 0x1
0x2cb: V294 = 0xa0
0x2cd: V295 = 0x2
0x2cf: V296 = EXP 0x2 0xa0
0x2d0: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d3: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x2d5: V299 = AND V291 0xffffffffffffffffffffffffffffffffffffffff
0x2d6: V300 = EQ V299 V298
---
Entry stack: [V10, 0x33c, V278, 0x0, 0x0, V289]
Stack pops: 2
Stack additions: [S1, V300]
Exit stack: [V10, 0x33c, V278, 0x0, 0x0, V300]

================================

Block 0x2d7
[0x2d7:0x2dc]
---
Predecessors: [0x2a4, 0x2c5]
Successors: [0x2dd, 0x44b]
---
0x2d7 JUMPDEST
0x2d8 ISZERO
0x2d9 PUSH2 0x44b
0x2dc JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V301 = ISZERO S0
0x2d9: V302 = 0x44b
0x2dc: JUMPI 0x44b V301
---
Entry stack: [V10, 0x33c, V278, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x33c, V278, 0x0, 0x0]

================================

Block 0x2dd
[0x2dd:0x2fe]
---
Predecessors: [0x2d7]
Successors: [0x2ff, 0x36b]
---
0x2dd POP
0x2de PUSH1 0x1
0x2e0 PUSH1 0xa0
0x2e2 PUSH1 0x2
0x2e4 EXP
0x2e5 SUB
0x2e6 DUP3
0x2e7 AND
0x2e8 PUSH1 0x0
0x2ea SWAP1
0x2eb DUP2
0x2ec MSTORE
0x2ed PUSH1 0x1
0x2ef PUSH1 0x20
0x2f1 MSTORE
0x2f2 PUSH1 0x40
0x2f4 DUP2
0x2f5 SHA3
0x2f6 SLOAD
0x2f7 SWAP1
0x2f8 DUP2
0x2f9 EQ
0x2fa ISZERO
0x2fb PUSH2 0x36b
0x2fe JUMPI
---
0x2de: V303 = 0x1
0x2e0: V304 = 0xa0
0x2e2: V305 = 0x2
0x2e4: V306 = EXP 0x2 0xa0
0x2e5: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e7: V308 = AND V278 0xffffffffffffffffffffffffffffffffffffffff
0x2e8: V309 = 0x0
0x2ec: M[0x0] = V308
0x2ed: V310 = 0x1
0x2ef: V311 = 0x20
0x2f1: M[0x20] = 0x1
0x2f2: V312 = 0x40
0x2f5: V313 = SHA3 0x0 0x40
0x2f6: V314 = S[V313]
0x2f9: V315 = EQ V314 0x0
0x2fa: V316 = ISZERO V315
0x2fb: V317 = 0x36b
0x2fe: JUMPI 0x36b V316
---
Entry stack: [V10, 0x33c, V278, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V314]
Exit stack: [V10, 0x33c, V278, 0x0, V314]

================================

Block 0x2ff
[0x2ff:0x306]
---
Predecessors: [0x2dd]
Successors: [0x44b]
---
0x2ff PUSH1 0x0
0x301 SWAP2
0x302 POP
0x303 PUSH2 0x44b
0x306 JUMP
---
0x2ff: V318 = 0x0
0x303: V319 = 0x44b
0x306: JUMP 0x44b
---
Entry stack: [V10, 0x33c, V278, 0x0, V314]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x33c, V278, 0x0, V314]

================================

Block 0x307
[0x307:0x337]
---
Predecessors: [0x8d]
Successors: [0x338, 0x587]
---
0x307 JUMPDEST
0x308 PUSH2 0x33c
0x30b PUSH1 0x4
0x30d CALLDATALOAD
0x30e PUSH1 0x24
0x310 CALLDATALOAD
0x311 PUSH1 0x44
0x313 CALLDATALOAD
0x314 PUSH1 0x1
0x316 PUSH1 0xa0
0x318 PUSH1 0x2
0x31a EXP
0x31b SUB
0x31c DUP4
0x31d AND
0x31e PUSH1 0x0
0x320 SWAP1
0x321 DUP2
0x322 MSTORE
0x323 PUSH1 0x1
0x325 PUSH1 0x20
0x327 MSTORE
0x328 PUSH1 0x40
0x32a DUP2
0x32b SHA3
0x32c SLOAD
0x32d DUP2
0x32e SWAP1
0x32f DUP2
0x330 SWAP1
0x331 DUP2
0x332 GT
0x333 ISZERO
0x334 PUSH2 0x587
0x337 JUMPI
---
0x307: JUMPDEST 
0x308: V320 = 0x33c
0x30b: V321 = 0x4
0x30d: V322 = CALLDATALOAD 0x4
0x30e: V323 = 0x24
0x310: V324 = CALLDATALOAD 0x24
0x311: V325 = 0x44
0x313: V326 = CALLDATALOAD 0x44
0x314: V327 = 0x1
0x316: V328 = 0xa0
0x318: V329 = 0x2
0x31a: V330 = EXP 0x2 0xa0
0x31b: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31d: V332 = AND V322 0xffffffffffffffffffffffffffffffffffffffff
0x31e: V333 = 0x0
0x322: M[0x0] = V332
0x323: V334 = 0x1
0x325: V335 = 0x20
0x327: M[0x20] = 0x1
0x328: V336 = 0x40
0x32b: V337 = SHA3 0x0 0x40
0x32c: V338 = S[V337]
0x332: V339 = GT 0x0 V338
0x333: V340 = ISZERO V339
0x334: V341 = 0x587
0x337: JUMPI 0x587 V340
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33c, V322, V324, V326, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, 0x0]

================================

Block 0x338
[0x338:0x33b]
---
Predecessors: [0x307]
Successors: [0x57e]
---
0x338 PUSH2 0x57e
0x33b JUMP
---
0x338: V342 = 0x57e
0x33b: JUMP 0x57e
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, 0x0]

================================

Block 0x33c
[0x33c:0x34d]
---
Predecessors: [0x9a, 0x105, 0x191, 0x1f0, 0x23c, 0x44b, 0x57e]
Successors: []
---
0x33c JUMPDEST
0x33d PUSH1 0x40
0x33f DUP1
0x340 MLOAD
0x341 SWAP2
0x342 DUP3
0x343 MSTORE
0x344 MLOAD
0x345 SWAP1
0x346 DUP2
0x347 SWAP1
0x348 SUB
0x349 PUSH1 0x20
0x34b ADD
0x34c SWAP1
0x34d RETURN
---
0x33c: JUMPDEST 
0x33d: V343 = 0x40
0x340: V344 = M[0x40]
0x343: M[V344] = S0
0x344: V345 = M[0x40]
0x348: V346 = SUB V344 V345
0x349: V347 = 0x20
0x34b: V348 = ADD 0x20 V346
0x34d: RETURN V345 V348
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x34e
[0x34e:0x36a]
---
Predecessors: [0x1bc, 0x207]
Successors: []
---
0x34e JUMPDEST
0x34f PUSH1 0x40
0x351 DUP1
0x352 MLOAD
0x353 PUSH1 0x1
0x355 PUSH1 0xa0
0x357 PUSH1 0x2
0x359 EXP
0x35a SUB
0x35b SWAP3
0x35c SWAP1
0x35d SWAP3
0x35e AND
0x35f DUP3
0x360 MSTORE
0x361 MLOAD
0x362 SWAP1
0x363 DUP2
0x364 SWAP1
0x365 SUB
0x366 PUSH1 0x20
0x368 ADD
0x369 SWAP1
0x36a RETURN
---
0x34e: JUMPDEST 
0x34f: V349 = 0x40
0x352: V350 = M[0x40]
0x353: V351 = 0x1
0x355: V352 = 0xa0
0x357: V353 = 0x2
0x359: V354 = EXP 0x2 0xa0
0x35a: V355 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35e: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x360: M[V350] = V356
0x361: V357 = M[0x40]
0x365: V358 = SUB V350 V357
0x366: V359 = 0x20
0x368: V360 = ADD 0x20 V358
0x36a: RETURN V357 V360
---
Entry stack: [V10, 0x34e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x34e]

================================

Block 0x36b
[0x36b:0x393]
---
Predecessors: [0x2dd]
Successors: [0x394]
---
0x36b JUMPDEST
0x36c PUSH1 0x1
0x36e PUSH1 0xa0
0x370 PUSH1 0x2
0x372 EXP
0x373 SUB
0x374 DUP4
0x375 AND
0x376 PUSH1 0x0
0x378 SWAP1
0x379 DUP2
0x37a MSTORE
0x37b PUSH1 0x1
0x37d PUSH1 0x20
0x37f MSTORE
0x380 PUSH1 0x40
0x382 DUP2
0x383 SHA3
0x384 DUP2
0x385 SWAP1
0x386 SSTORE
0x387 PUSH1 0x3
0x389 DUP1
0x38a SLOAD
0x38b DUP4
0x38c SWAP1
0x38d DUP2
0x38e LT
0x38f ISZERO
0x390 PUSH2 0x2
0x393 JUMPI
---
0x36b: JUMPDEST 
0x36c: V361 = 0x1
0x36e: V362 = 0xa0
0x370: V363 = 0x2
0x372: V364 = EXP 0x2 0xa0
0x373: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x375: V366 = AND V278 0xffffffffffffffffffffffffffffffffffffffff
0x376: V367 = 0x0
0x37a: M[0x0] = V366
0x37b: V368 = 0x1
0x37d: V369 = 0x20
0x37f: M[0x20] = 0x1
0x380: V370 = 0x40
0x383: V371 = SHA3 0x0 0x40
0x386: S[V371] = 0x0
0x387: V372 = 0x3
0x38a: V373 = S[0x3]
0x38e: V374 = LT V314 V373
0x38f: V375 = ISZERO V374
0x390: V376 = 0x2
0x393: THROWI V375
---
Entry stack: [V10, 0x33c, V278, 0x0, V314]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x3, S0]
Exit stack: [V10, 0x33c, V278, 0x0, V314, 0x0, 0x3, V314]

================================

Block 0x394
[0x394:0x3c3]
---
Predecessors: [0x36b]
Successors: [0x3c4]
---
0x394 SWAP1
0x395 DUP3
0x396 MSTORE
0x397 POP
0x398 PUSH1 0x0
0x39a DUP1
0x39b MLOAD
0x39c PUSH1 0x20
0x39e PUSH2 0x79e
0x3a1 DUP4
0x3a2 CODECOPY
0x3a3 DUP2
0x3a4 MLOAD
0x3a5 SWAP2
0x3a6 MSTORE
0x3a7 DUP3
0x3a8 ADD
0x3a9 DUP1
0x3aa SLOAD
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 NOT
0x3b4 AND
0x3b5 SWAP1
0x3b6 SSTORE
0x3b7 PUSH1 0x2
0x3b9 DUP1
0x3ba SLOAD
0x3bb DUP4
0x3bc SWAP1
0x3bd DUP2
0x3be LT
0x3bf ISZERO
0x3c0 PUSH2 0x2
0x3c3 JUMPI
---
0x396: M[0x0] = 0x3
0x398: V377 = 0x0
0x39b: V378 = M[0x0]
0x39c: V379 = 0x20
0x39e: V380 = 0x79e
0x3a2: CODECOPY 0x0 0x79e 0x20
0x3a4: V381 = M[0x0]
0x3a6: M[0x0] = V378
0x3a8: V382 = ADD V314 V381
0x3aa: V383 = S[V382]
0x3ab: V384 = 0x1
0x3ad: V385 = 0xa0
0x3af: V386 = 0x2
0x3b1: V387 = EXP 0x2 0xa0
0x3b2: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b3: V389 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3b4: V390 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V383
0x3b6: S[V382] = V390
0x3b7: V391 = 0x2
0x3ba: V392 = S[0x2]
0x3be: V393 = LT V314 V392
0x3bf: V394 = ISZERO V393
0x3c0: V395 = 0x2
0x3c3: THROWI V394
---
Entry stack: [V10, 0x33c, V278, 0x0, V314, 0x0, 0x3, V314]
Stack pops: 4
Stack additions: [S3, S2, 0x2, S3]
Exit stack: [V10, 0x33c, V278, 0x0, V314, 0x0, 0x2, V314]

================================

Block 0x3c4
[0x3c4:0x3e8]
---
Predecessors: [0x394]
Successors: [0x3e9]
---
0x3c4 SWAP1
0x3c5 DUP3
0x3c6 MSTORE
0x3c7 POP
0x3c8 PUSH1 0x0
0x3ca DUP1
0x3cb MLOAD
0x3cc PUSH1 0x20
0x3ce PUSH2 0x77e
0x3d1 DUP4
0x3d2 CODECOPY
0x3d3 DUP2
0x3d4 MLOAD
0x3d5 SWAP2
0x3d6 MSTORE
0x3d7 DUP3
0x3d8 ADD
0x3d9 DUP2
0x3da SWAP1
0x3db SSTORE
0x3dc PUSH1 0x4
0x3de DUP1
0x3df SLOAD
0x3e0 DUP4
0x3e1 SWAP1
0x3e2 DUP2
0x3e3 LT
0x3e4 ISZERO
0x3e5 PUSH2 0x2
0x3e8 JUMPI
---
0x3c6: M[0x0] = 0x2
0x3c8: V396 = 0x0
0x3cb: V397 = M[0x0]
0x3cc: V398 = 0x20
0x3ce: V399 = 0x77e
0x3d2: CODECOPY 0x0 0x77e 0x20
0x3d4: V400 = M[0x0]
0x3d6: M[0x0] = V397
0x3d8: V401 = ADD V314 V400
0x3db: S[V401] = 0x0
0x3dc: V402 = 0x4
0x3df: V403 = S[0x4]
0x3e3: V404 = LT V314 V403
0x3e4: V405 = ISZERO V404
0x3e5: V406 = 0x2
0x3e8: THROWI V405
---
Entry stack: [V10, 0x33c, V278, 0x0, V314, 0x0, 0x2, V314]
Stack pops: 4
Stack additions: [S3, S2, 0x4, S3]
Exit stack: [V10, 0x33c, V278, 0x0, V314, 0x0, 0x4, V314]

================================

Block 0x3e9
[0x3e9:0x44a]
---
Predecessors: [0x3c4]
Successors: [0x44b]
---
0x3e9 POP
0x3ea POP
0x3eb PUSH1 0x0
0x3ed DUP1
0x3ee MLOAD
0x3ef PUSH1 0x20
0x3f1 PUSH2 0x7be
0x3f4 DUP4
0x3f5 CODECOPY
0x3f6 DUP2
0x3f7 MLOAD
0x3f8 SWAP2
0x3f9 MSTORE
0x3fa DUP3
0x3fb ADD
0x3fc DUP2
0x3fd SWAP1
0x3fe SSTORE
0x3ff PUSH1 0x1
0x401 PUSH1 0xa0
0x403 PUSH1 0x2
0x405 EXP
0x406 SUB
0x407 DUP5
0x408 AND
0x409 DUP1
0x40a DUP3
0x40b MSTORE
0x40c PUSH1 0x5
0x40e PUSH1 0x20
0x410 MSTORE
0x411 PUSH1 0x40
0x413 DUP1
0x414 DUP4
0x415 SHA3
0x416 DUP1
0x417 SLOAD
0x418 PUSH1 0xff
0x41a NOT
0x41b AND
0x41c PUSH1 0x1
0x41e OR
0x41f SWAP1
0x420 SSTORE
0x421 MLOAD
0x422 SWAP1
0x423 SWAP2
0x424 PUSH32 0x5dbe2599fd6080a6c8d91d0850baa44f165fb0c49bcfcbe85981e7ff77bdbe52
0x445 SWAP2
0x446 LOG2
0x447 PUSH1 0x1
0x449 SWAP2
0x44a POP
---
0x3eb: V407 = 0x0
0x3ee: V408 = M[0x0]
0x3ef: V409 = 0x20
0x3f1: V410 = 0x7be
0x3f5: CODECOPY 0x0 0x7be 0x20
0x3f7: V411 = M[0x0]
0x3f9: M[0x0] = V408
0x3fb: V412 = ADD V314 V411
0x3fe: S[V412] = 0x0
0x3ff: V413 = 0x1
0x401: V414 = 0xa0
0x403: V415 = 0x2
0x405: V416 = EXP 0x2 0xa0
0x406: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x408: V418 = AND V278 0xffffffffffffffffffffffffffffffffffffffff
0x40b: M[0x0] = V418
0x40c: V419 = 0x5
0x40e: V420 = 0x20
0x410: M[0x20] = 0x5
0x411: V421 = 0x40
0x415: V422 = SHA3 0x0 0x40
0x417: V423 = S[V422]
0x418: V424 = 0xff
0x41a: V425 = NOT 0xff
0x41b: V426 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V423
0x41c: V427 = 0x1
0x41e: V428 = OR 0x1 V426
0x420: S[V422] = V428
0x421: V429 = M[0x40]
0x424: V430 = 0x5dbe2599fd6080a6c8d91d0850baa44f165fb0c49bcfcbe85981e7ff77bdbe52
0x446: LOG V429 0x0 0x5dbe2599fd6080a6c8d91d0850baa44f165fb0c49bcfcbe85981e7ff77bdbe52 V418
0x447: V431 = 0x1
---
Entry stack: [V10, 0x33c, V278, 0x0, V314, 0x0, 0x4, V314]
Stack pops: 6
Stack additions: [S5, 0x1, S3]
Exit stack: [V10, 0x33c, V278, 0x1, V314]

================================

Block 0x44b
[0x44b:0x450]
---
Predecessors: [0x274, 0x29c, 0x2d7, 0x2ff, 0x3e9, 0x72e]
Successors: [0x33c]
---
0x44b JUMPDEST
0x44c POP
0x44d SWAP2
0x44e SWAP1
0x44f POP
0x450 JUMP
---
0x44b: JUMPDEST 
0x450: JUMP 0x33c
---
Entry stack: [V10, 0x33c, S2, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x451
[0x451:0x49e]
---
Predecessors: [0x154]
Successors: [0x23c]
---
0x451 JUMPDEST
0x452 PUSH1 0x1
0x454 PUSH1 0xa0
0x456 PUSH1 0x2
0x458 EXP
0x459 SUB
0x45a DUP3
0x45b AND
0x45c PUSH1 0x0
0x45e DUP2
0x45f DUP2
0x460 MSTORE
0x461 PUSH1 0x5
0x463 PUSH1 0x20
0x465 MSTORE
0x466 PUSH1 0x40
0x468 DUP1
0x469 DUP3
0x46a SHA3
0x46b DUP1
0x46c SLOAD
0x46d PUSH1 0xff
0x46f NOT
0x470 AND
0x471 SWAP1
0x472 SSTORE
0x473 MLOAD
0x474 PUSH32 0xbe7c7ac3248df4581c206a84aab3cb4e7d521b5398b42b681757f78a5a7d411e
0x495 SWAP2
0x496 SWAP1
0x497 LOG2
0x498 POP
0x499 PUSH1 0x1
0x49b PUSH2 0x23c
0x49e JUMP
---
0x451: JUMPDEST 
0x452: V432 = 0x1
0x454: V433 = 0xa0
0x456: V434 = 0x2
0x458: V435 = EXP 0x2 0xa0
0x459: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45b: V437 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x45c: V438 = 0x0
0x460: M[0x0] = V437
0x461: V439 = 0x5
0x463: V440 = 0x20
0x465: M[0x20] = 0x5
0x466: V441 = 0x40
0x46a: V442 = SHA3 0x0 0x40
0x46c: V443 = S[V442]
0x46d: V444 = 0xff
0x46f: V445 = NOT 0xff
0x470: V446 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V443
0x472: S[V442] = V446
0x473: V447 = M[0x40]
0x474: V448 = 0xbe7c7ac3248df4581c206a84aab3cb4e7d521b5398b42b681757f78a5a7d411e
0x497: LOG V447 0x0 0xbe7c7ac3248df4581c206a84aab3cb4e7d521b5398b42b681757f78a5a7d411e V437
0x499: V449 = 0x1
0x49b: V450 = 0x23c
0x49e: JUMP 0x23c
---
Entry stack: [V10, 0x33c, V108, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x33c, V108, 0x1]

================================

Block 0x49f
[0x49f:0x4a3]
---
Predecessors: [0x66c, 0x670]
Successors: [0x4a4]
---
0x49f JUMPDEST
0x4a0 POP
0x4a1 POP
0x4a2 POP
0x4a3 POP
---
0x49f: JUMPDEST 
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S5, S4, S3, {0x2, 0x3, 0x4}, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S5, S4]

================================

Block 0x4a4
[0x4a4:0x4b4]
---
Predecessors: [0x49f, 0x5cf]
Successors: [0x4b5]
---
0x4a4 JUMPDEST
0x4a5 DUP6
0x4a6 PUSH1 0x3
0x4a8 PUSH1 0x0
0x4aa POP
0x4ab DUP4
0x4ac DUP2
0x4ad SLOAD
0x4ae DUP2
0x4af LT
0x4b0 ISZERO
0x4b1 PUSH2 0x2
0x4b4 JUMPI
---
0x4a4: JUMPDEST 
0x4a6: V451 = 0x3
0x4a8: V452 = 0x0
0x4ad: V453 = S[0x3]
0x4af: V454 = LT S1 V453
0x4b0: V455 = ISZERO V454
0x4b1: V456 = 0x2
0x4b4: THROWI V455
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5, 0x3, S1]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S1, S0, V322, 0x3, S1]

================================

Block 0x4b5
[0x4b5:0x4eb]
---
Predecessors: [0x4a4]
Successors: [0x4ec]
---
0x4b5 PUSH1 0x0
0x4b7 SWAP2
0x4b8 SWAP1
0x4b9 SWAP2
0x4ba MSTORE
0x4bb PUSH1 0x0
0x4bd DUP1
0x4be MLOAD
0x4bf PUSH1 0x20
0x4c1 PUSH2 0x79e
0x4c4 DUP4
0x4c5 CODECOPY
0x4c6 DUP2
0x4c7 MLOAD
0x4c8 SWAP2
0x4c9 MSTORE
0x4ca ADD
0x4cb DUP1
0x4cc SLOAD
0x4cd PUSH1 0x1
0x4cf PUSH1 0xa0
0x4d1 PUSH1 0x2
0x4d3 EXP
0x4d4 SUB
0x4d5 NOT
0x4d6 AND
0x4d7 SWAP1
0x4d8 SWAP2
0x4d9 OR
0x4da SWAP1
0x4db SSTORE
0x4dc PUSH1 0x2
0x4de DUP1
0x4df SLOAD
0x4e0 DUP7
0x4e1 SWAP2
0x4e2 SWAP1
0x4e3 DUP5
0x4e4 SWAP1
0x4e5 DUP2
0x4e6 LT
0x4e7 ISZERO
0x4e8 PUSH2 0x2
0x4eb JUMPI
---
0x4b5: V457 = 0x0
0x4ba: M[0x0] = 0x3
0x4bb: V458 = 0x0
0x4be: V459 = M[0x0]
0x4bf: V460 = 0x20
0x4c1: V461 = 0x79e
0x4c5: CODECOPY 0x0 0x79e 0x20
0x4c7: V462 = M[0x0]
0x4c9: M[0x0] = V459
0x4ca: V463 = ADD V462 S0
0x4cc: V464 = S[V463]
0x4cd: V465 = 0x1
0x4cf: V466 = 0xa0
0x4d1: V467 = 0x2
0x4d3: V468 = EXP 0x2 0xa0
0x4d4: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d5: V470 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4d6: V471 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V464
0x4d9: V472 = OR V322 V471
0x4db: S[V463] = V472
0x4dc: V473 = 0x2
0x4df: V474 = S[0x2]
0x4e6: V475 = LT S4 V474
0x4e7: V476 = ISZERO V475
0x4e8: V477 = 0x2
0x4eb: THROWI V476
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S4, S3, V322, 0x3, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S7, 0x2, S4]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S4, S3, V324, 0x2, S4]

================================

Block 0x4ec
[0x4ec:0x512]
---
Predecessors: [0x4b5]
Successors: [0x513]
---
0x4ec PUSH1 0x0
0x4ee SWAP2
0x4ef SWAP1
0x4f0 SWAP2
0x4f1 MSTORE
0x4f2 PUSH1 0x0
0x4f4 DUP1
0x4f5 MLOAD
0x4f6 PUSH1 0x20
0x4f8 PUSH2 0x77e
0x4fb DUP4
0x4fc CODECOPY
0x4fd DUP2
0x4fe MLOAD
0x4ff SWAP2
0x500 MSTORE
0x501 ADD
0x502 SSTORE
0x503 PUSH1 0x4
0x505 DUP1
0x506 SLOAD
0x507 DUP6
0x508 SWAP2
0x509 SWAP1
0x50a DUP5
0x50b SWAP1
0x50c DUP2
0x50d LT
0x50e ISZERO
0x50f PUSH2 0x2
0x512 JUMPI
---
0x4ec: V478 = 0x0
0x4f1: M[0x0] = 0x2
0x4f2: V479 = 0x0
0x4f5: V480 = M[0x0]
0x4f6: V481 = 0x20
0x4f8: V482 = 0x77e
0x4fc: CODECOPY 0x0 0x77e 0x20
0x4fe: V483 = M[0x0]
0x500: M[0x0] = V480
0x501: V484 = ADD V483 S0
0x502: S[V484] = V324
0x503: V485 = 0x4
0x506: V486 = S[0x4]
0x50d: V487 = LT S4 V486
0x50e: V488 = ISZERO V487
0x50f: V489 = 0x2
0x512: THROWI V488
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S4, S3, V324, 0x2, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S6, 0x4, S4]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S4, S3, V326, 0x4, S4]

================================

Block 0x513
[0x513:0x57d]
---
Predecessors: [0x4ec]
Successors: [0x57e]
---
0x513 PUSH1 0x0
0x515 DUP1
0x516 MLOAD
0x517 PUSH1 0x20
0x519 PUSH2 0x7be
0x51c DUP4
0x51d CODECOPY
0x51e DUP2
0x51f MLOAD
0x520 SWAP2
0x521 MSTORE
0x522 ADD
0x523 SWAP2
0x524 SWAP1
0x525 SWAP2
0x526 SSTORE
0x527 POP
0x528 PUSH1 0x1
0x52a PUSH1 0xa0
0x52c PUSH1 0x2
0x52e EXP
0x52f SUB
0x530 DUP7
0x531 AND
0x532 PUSH1 0x0
0x534 DUP2
0x535 DUP2
0x536 MSTORE
0x537 PUSH1 0x1
0x539 PUSH1 0x20
0x53b SWAP1
0x53c DUP2
0x53d MSTORE
0x53e PUSH1 0x40
0x540 SWAP2
0x541 DUP3
0x542 SWAP1
0x543 SHA3
0x544 DUP6
0x545 SWAP1
0x546 SSTORE
0x547 DUP2
0x548 MLOAD
0x549 DUP8
0x54a DUP2
0x54b MSTORE
0x54c SWAP2
0x54d MLOAD
0x54e DUP9
0x54f SWAP4
0x550 SWAP3
0x551 PUSH32 0xc6dc6a5536f7d4c9056f1da7f7a8fb59902851e0cb7839eb15a9182e73af6bd4
0x572 SWAP3
0x573 SWAP1
0x574 DUP3
0x575 SWAP1
0x576 SUB
0x577 ADD
0x578 SWAP1
0x579 LOG3
0x57a PUSH1 0x1
0x57c SWAP3
0x57d POP
---
0x513: V490 = 0x0
0x516: V491 = M[0x0]
0x517: V492 = 0x20
0x519: V493 = 0x7be
0x51d: CODECOPY 0x0 0x7be 0x20
0x51f: V494 = M[0x0]
0x521: M[0x0] = V491
0x522: V495 = ADD V494 S0
0x526: S[V495] = V326
0x528: V496 = 0x1
0x52a: V497 = 0xa0
0x52c: V498 = 0x2
0x52e: V499 = EXP 0x2 0xa0
0x52f: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x531: V501 = AND V322 0xffffffffffffffffffffffffffffffffffffffff
0x532: V502 = 0x0
0x536: M[0x0] = V501
0x537: V503 = 0x1
0x539: V504 = 0x20
0x53d: M[0x20] = 0x1
0x53e: V505 = 0x40
0x543: V506 = SHA3 0x0 0x40
0x546: S[V506] = S4
0x548: V507 = M[0x40]
0x54b: M[V507] = V326
0x54d: V508 = M[0x40]
0x551: V509 = 0xc6dc6a5536f7d4c9056f1da7f7a8fb59902851e0cb7839eb15a9182e73af6bd4
0x576: V510 = SUB V507 V508
0x577: V511 = ADD V510 0x20
0x579: LOG V508 V511 0xc6dc6a5536f7d4c9056f1da7f7a8fb59902851e0cb7839eb15a9182e73af6bd4 V501 V324
0x57a: V512 = 0x1
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S4, S3, V326, 0x4, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x1, S4, S3]

================================

Block 0x57e
[0x57e:0x586]
---
Predecessors: [0x338, 0x513]
Successors: [0x33c]
---
0x57e JUMPDEST
0x57f POP
0x580 POP
0x581 SWAP4
0x582 SWAP3
0x583 POP
0x584 POP
0x585 POP
0x586 JUMP
---
0x57e: JUMPDEST 
0x586: JUMP 0x33c
---
Entry stack: [V10, 0x33c, V322, V324, V326, {0x0, 0x1}, S1, S0]
Stack pops: 7
Stack additions: [S2]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x587
[0x587:0x58e]
---
Predecessors: [0x307]
Successors: [0x58f]
---
0x587 JUMPDEST
0x588 POP
0x589 PUSH1 0x0
0x58b SWAP1
0x58c POP
0x58d PUSH1 0x1
---
0x587: JUMPDEST 
0x589: V513 = 0x0
0x58d: V514 = 0x1
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x1]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, 0x1]

================================

Block 0x58f
[0x58f:0x599]
---
Predecessors: [0x587, 0x623]
Successors: [0x59a, 0x5cf]
---
0x58f JUMPDEST
0x590 PUSH1 0x3
0x592 SLOAD
0x593 DUP2
0x594 LT
0x595 ISZERO
0x596 PUSH2 0x5cf
0x599 JUMPI
---
0x58f: JUMPDEST 
0x590: V515 = 0x3
0x592: V516 = S[0x3]
0x594: V517 = LT S0 V516
0x595: V518 = ISZERO V517
0x596: V519 = 0x5cf
0x599: JUMPI 0x5cf V518
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, S0]

================================

Block 0x59a
[0x59a:0x5a6]
---
Predecessors: [0x58f]
Successors: [0x5a7]
---
0x59a PUSH1 0x3
0x59c DUP1
0x59d SLOAD
0x59e DUP3
0x59f SWAP1
0x5a0 DUP2
0x5a1 LT
0x5a2 ISZERO
0x5a3 PUSH2 0x2
0x5a6 JUMPI
---
0x59a: V520 = 0x3
0x59d: V521 = S[0x3]
0x5a1: V522 = LT S0 V521
0x5a2: V523 = ISZERO V522
0x5a3: V524 = 0x2
0x5a6: THROWI V523
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, S0, 0x3, S0]

================================

Block 0x5a7
[0x5a7:0x5cb]
---
Predecessors: [0x59a]
Successors: [0x5cc, 0x623]
---
0x5a7 PUSH1 0x0
0x5a9 SWAP2
0x5aa DUP3
0x5ab MSTORE
0x5ac PUSH1 0x0
0x5ae DUP1
0x5af MLOAD
0x5b0 PUSH1 0x20
0x5b2 PUSH2 0x79e
0x5b5 DUP4
0x5b6 CODECOPY
0x5b7 DUP2
0x5b8 MLOAD
0x5b9 SWAP2
0x5ba MSTORE
0x5bb ADD
0x5bc SLOAD
0x5bd PUSH1 0x1
0x5bf PUSH1 0xa0
0x5c1 PUSH1 0x2
0x5c3 EXP
0x5c4 SUB
0x5c5 AND
0x5c6 EQ
0x5c7 ISZERO
0x5c8 PUSH2 0x623
0x5cb JUMPI
---
0x5a7: V525 = 0x0
0x5ab: M[0x0] = 0x3
0x5ac: V526 = 0x0
0x5af: V527 = M[0x0]
0x5b0: V528 = 0x20
0x5b2: V529 = 0x79e
0x5b6: CODECOPY 0x0 0x79e 0x20
0x5b8: V530 = M[0x0]
0x5ba: M[0x0] = V527
0x5bb: V531 = ADD V530 S0
0x5bc: V532 = S[V531]
0x5bd: V533 = 0x1
0x5bf: V534 = 0xa0
0x5c1: V535 = 0x2
0x5c3: V536 = EXP 0x2 0xa0
0x5c4: V537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c5: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x5c6: V539 = EQ V538 0x0
0x5c7: V540 = ISZERO V539
0x5c8: V541 = 0x623
0x5cb: JUMPI 0x623 V540
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, S2, 0x3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, S2]

================================

Block 0x5cc
[0x5cc:0x5ce]
---
Predecessors: [0x5a7]
Successors: [0x5cf]
---
0x5cc SWAP1
0x5cd POP
0x5ce DUP1
---
0x5cc: NOP 
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S0, S0]

================================

Block 0x5cf
[0x5cf:0x5d8]
---
Predecessors: [0x58f, 0x5cc]
Successors: [0x4a4, 0x5d9]
---
0x5cf JUMPDEST
0x5d0 DUP2
0x5d1 PUSH1 0x0
0x5d3 EQ
0x5d4 ISZERO
0x5d5 PUSH2 0x4a4
0x5d8 JUMPI
---
0x5cf: JUMPDEST 
0x5d1: V542 = 0x0
0x5d3: V543 = EQ 0x0 S1
0x5d4: V544 = ISZERO V543
0x5d5: V545 = 0x4a4
0x5d8: JUMPI 0x4a4 V544
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S1, S0]

================================

Block 0x5d9
[0x5d9:0x5f0]
---
Predecessors: [0x5cf]
Successors: [0x5f1, 0x62b]
---
0x5d9 PUSH1 0x3
0x5db DUP1
0x5dc SLOAD
0x5dd PUSH1 0x1
0x5df DUP2
0x5e0 ADD
0x5e1 DUP1
0x5e2 DUP4
0x5e3 SSTORE
0x5e4 SWAP1
0x5e5 SWAP2
0x5e6 SWAP1
0x5e7 DUP3
0x5e8 DUP1
0x5e9 ISZERO
0x5ea DUP3
0x5eb SWAP1
0x5ec GT
0x5ed PUSH2 0x62b
0x5f0 JUMPI
---
0x5d9: V546 = 0x3
0x5dc: V547 = S[0x3]
0x5dd: V548 = 0x1
0x5e0: V549 = ADD V547 0x1
0x5e3: S[0x3] = V549
0x5e9: V550 = ISZERO V547
0x5ec: V551 = GT V550 V549
0x5ed: V552 = 0x62b
0x5f0: JUMPI 0x62b V551
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V547, 0x3, V549, V547]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S1, S0, V547, 0x3, V549, V547]

================================

Block 0x5f1
[0x5f1:0x60e]
---
Predecessors: [0x5d9]
Successors: [0x60f]
---
0x5f1 PUSH1 0x0
0x5f3 DUP4
0x5f4 SWAP1
0x5f5 MSTORE
0x5f6 PUSH2 0x62b
0x5f9 SWAP1
0x5fa PUSH1 0x0
0x5fc DUP1
0x5fd MLOAD
0x5fe PUSH1 0x20
0x600 PUSH2 0x79e
0x603 DUP4
0x604 CODECOPY
0x605 DUP2
0x606 MLOAD
0x607 SWAP2
0x608 MSTORE
0x609 SWAP1
0x60a DUP2
0x60b ADD
0x60c SWAP1
0x60d DUP4
0x60e ADD
---
0x5f1: V553 = 0x0
0x5f5: M[0x0] = 0x3
0x5f6: V554 = 0x62b
0x5fa: V555 = 0x0
0x5fd: V556 = M[0x0]
0x5fe: V557 = 0x20
0x600: V558 = 0x79e
0x604: CODECOPY 0x0 0x79e 0x20
0x606: V559 = M[0x0]
0x608: M[0x0] = V556
0x60b: V560 = ADD V559 V547
0x60e: V561 = ADD V549 V559
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S5, S4, V547, 0x3, V549, V547]
Stack pops: 3
Stack additions: [S2, S1, 0x62b, V560, V561]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S5, S4, V547, 0x3, V549, 0x62b, V560, V561]

================================

Block 0x60f
[0x60f:0x617]
---
Predecessors: [0x5f1, 0x618, 0x64a, 0x68e]
Successors: [0x618, 0x66c]
---
0x60f JUMPDEST
0x610 DUP1
0x611 DUP3
0x612 GT
0x613 ISZERO
0x614 PUSH2 0x66c
0x617 JUMPI
---
0x60f: JUMPDEST 
0x612: V562 = GT S1 S0
0x613: V563 = ISZERO V562
0x614: V564 = 0x66c
0x617: JUMPI 0x66c V563
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, {0x49f, 0x62b, 0x670}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, {0x49f, 0x62b, 0x670}, S1, S0]

================================

Block 0x618
[0x618:0x622]
---
Predecessors: [0x60f]
Successors: [0x60f]
---
0x618 PUSH1 0x0
0x61a DUP2
0x61b SSTORE
0x61c PUSH1 0x1
0x61e ADD
0x61f PUSH2 0x60f
0x622 JUMP
---
0x618: V565 = 0x0
0x61b: S[S0] = 0x0
0x61c: V566 = 0x1
0x61e: V567 = ADD 0x1 S0
0x61f: V568 = 0x60f
0x622: JUMP 0x60f
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, {0x49f, 0x62b, 0x670}, S1, S0]
Stack pops: 1
Stack additions: [V567]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, {0x49f, 0x62b, 0x670}, S1, V567]

================================

Block 0x623
[0x623:0x62a]
---
Predecessors: [0x5a7]
Successors: [0x58f]
---
0x623 JUMPDEST
0x624 PUSH1 0x1
0x626 ADD
0x627 PUSH2 0x58f
0x62a JUMP
---
0x623: JUMPDEST 
0x624: V569 = 0x1
0x626: V570 = ADD 0x1 S0
0x627: V571 = 0x58f
0x62a: JUMP 0x58f
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V570]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, 0x0, V570]

================================

Block 0x62b
[0x62b:0x649]
---
Predecessors: [0x5d9, 0x66c]
Successors: [0x64a, 0x670]
---
0x62b JUMPDEST
0x62c POP
0x62d POP
0x62e PUSH1 0x2
0x630 DUP1
0x631 SLOAD
0x632 PUSH1 0x1
0x634 DUP2
0x635 ADD
0x636 DUP1
0x637 DUP4
0x638 SSTORE
0x639 SWAP4
0x63a SWAP6
0x63b POP
0x63c SWAP3
0x63d SWAP1
0x63e SWAP2
0x63f POP
0x640 DUP3
0x641 DUP1
0x642 ISZERO
0x643 DUP3
0x644 SWAP1
0x645 GT
0x646 PUSH2 0x670
0x649 JUMPI
---
0x62b: JUMPDEST 
0x62e: V572 = 0x2
0x631: V573 = S[0x2]
0x632: V574 = 0x1
0x635: V575 = ADD V573 0x1
0x638: S[0x2] = V575
0x642: V576 = ISZERO V573
0x645: V577 = GT V576 V575
0x646: V578 = 0x670
0x649: JUMPI 0x670 V577
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S5, S4, S3, {0x2, 0x3, 0x4}, S1, S0]
Stack pops: 6
Stack additions: [S3, S4, V573, 0x2, V575, V573]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S3, S4, V573, 0x2, V575, V573]

================================

Block 0x64a
[0x64a:0x66b]
---
Predecessors: [0x62b]
Successors: [0x60f]
---
0x64a PUSH1 0x0
0x64c DUP4
0x64d SWAP1
0x64e MSTORE
0x64f PUSH2 0x670
0x652 SWAP1
0x653 PUSH1 0x0
0x655 DUP1
0x656 MLOAD
0x657 PUSH1 0x20
0x659 PUSH2 0x77e
0x65c DUP4
0x65d CODECOPY
0x65e DUP2
0x65f MLOAD
0x660 SWAP2
0x661 MSTORE
0x662 SWAP1
0x663 DUP2
0x664 ADD
0x665 SWAP1
0x666 DUP4
0x667 ADD
0x668 PUSH2 0x60f
0x66b JUMP
---
0x64a: V579 = 0x0
0x64e: M[0x0] = 0x2
0x64f: V580 = 0x670
0x653: V581 = 0x0
0x656: V582 = M[0x0]
0x657: V583 = 0x20
0x659: V584 = 0x77e
0x65d: CODECOPY 0x0 0x77e 0x20
0x65f: V585 = M[0x0]
0x661: M[0x0] = V582
0x664: V586 = ADD V585 V573
0x667: V587 = ADD V575 V585
0x668: V588 = 0x60f
0x66b: JUMP 0x60f
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S5, S4, V573, 0x2, V575, V573]
Stack pops: 3
Stack additions: [S2, S1, 0x670, V586, V587]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S5, S4, V573, 0x2, V575, 0x670, V586, V587]

================================

Block 0x66c
[0x66c:0x66f]
---
Predecessors: [0x60f]
Successors: [0x49f, 0x62b, 0x670]
---
0x66c JUMPDEST
0x66d POP
0x66e SWAP1
0x66f JUMP
---
0x66c: JUMPDEST 
0x66f: JUMP {0x49f, 0x62b, 0x670}
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, {0x49f, 0x62b, 0x670}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S7, S6, S5, {0x2, 0x3, 0x4}, S3, S1]

================================

Block 0x670
[0x670:0x68d]
---
Predecessors: [0x62b, 0x66c]
Successors: [0x49f, 0x68e]
---
0x670 JUMPDEST
0x671 POP
0x672 POP
0x673 PUSH1 0x4
0x675 DUP1
0x676 SLOAD
0x677 PUSH1 0x1
0x679 DUP2
0x67a ADD
0x67b DUP1
0x67c DUP4
0x67d SSTORE
0x67e SWAP1
0x67f SWAP4
0x680 POP
0x681 SWAP1
0x682 SWAP2
0x683 POP
0x684 DUP3
0x685 DUP1
0x686 ISZERO
0x687 DUP3
0x688 SWAP1
0x689 GT
0x68a PUSH2 0x49f
0x68d JUMPI
---
0x670: JUMPDEST 
0x673: V589 = 0x4
0x676: V590 = S[0x4]
0x677: V591 = 0x1
0x67a: V592 = ADD V590 0x1
0x67d: S[0x4] = V592
0x686: V593 = ISZERO V590
0x689: V594 = GT V593 V592
0x68a: V595 = 0x49f
0x68d: JUMPI 0x49f V594
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S5, S4, S3, {0x2, 0x3, 0x4}, S1, S0]
Stack pops: 4
Stack additions: [V590, 0x4, V592, V590]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S5, S4, V590, 0x4, V592, V590]

================================

Block 0x68e
[0x68e:0x6af]
---
Predecessors: [0x670]
Successors: [0x60f]
---
0x68e PUSH1 0x0
0x690 DUP4
0x691 SWAP1
0x692 MSTORE
0x693 PUSH2 0x49f
0x696 SWAP1
0x697 PUSH1 0x0
0x699 DUP1
0x69a MLOAD
0x69b PUSH1 0x20
0x69d PUSH2 0x7be
0x6a0 DUP4
0x6a1 CODECOPY
0x6a2 DUP2
0x6a3 MLOAD
0x6a4 SWAP2
0x6a5 MSTORE
0x6a6 SWAP1
0x6a7 DUP2
0x6a8 ADD
0x6a9 SWAP1
0x6aa DUP4
0x6ab ADD
0x6ac PUSH2 0x60f
0x6af JUMP
---
0x68e: V596 = 0x0
0x692: M[0x0] = 0x4
0x693: V597 = 0x49f
0x697: V598 = 0x0
0x69a: V599 = M[0x0]
0x69b: V600 = 0x20
0x69d: V601 = 0x7be
0x6a1: CODECOPY 0x0 0x7be 0x20
0x6a3: V602 = M[0x0]
0x6a5: M[0x0] = V599
0x6a8: V603 = ADD V602 V590
0x6ab: V604 = ADD V592 V602
0x6ac: V605 = 0x60f
0x6af: JUMP 0x60f
---
Entry stack: [V10, 0x33c, V322, V324, V326, 0x0, S5, S4, V590, 0x4, V592, V590]
Stack pops: 3
Stack additions: [S2, S1, 0x49f, V603, V604]
Exit stack: [V10, 0x33c, V322, V324, V326, 0x0, S5, S4, V590, 0x4, V592, 0x49f, V603, V604]

================================

Block 0x6b0
[0x6b0:0x6d8]
---
Predecessors: [0x27a]
Successors: [0x6d9]
---
0x6b0 JUMPDEST
0x6b1 PUSH1 0x1
0x6b3 PUSH1 0xa0
0x6b5 PUSH1 0x2
0x6b7 EXP
0x6b8 SUB
0x6b9 DUP4
0x6ba AND
0x6bb PUSH1 0x0
0x6bd SWAP1
0x6be DUP2
0x6bf MSTORE
0x6c0 PUSH1 0x1
0x6c2 PUSH1 0x20
0x6c4 MSTORE
0x6c5 PUSH1 0x40
0x6c7 DUP2
0x6c8 SHA3
0x6c9 DUP2
0x6ca SWAP1
0x6cb SSTORE
0x6cc PUSH1 0x3
0x6ce DUP1
0x6cf SLOAD
0x6d0 DUP4
0x6d1 SWAP1
0x6d2 DUP2
0x6d3 LT
0x6d4 ISZERO
0x6d5 PUSH2 0x2
0x6d8 JUMPI
---
0x6b0: JUMPDEST 
0x6b1: V606 = 0x1
0x6b3: V607 = 0xa0
0x6b5: V608 = 0x2
0x6b7: V609 = EXP 0x2 0xa0
0x6b8: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ba: V611 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x6bb: V612 = 0x0
0x6bf: M[0x0] = V611
0x6c0: V613 = 0x1
0x6c2: V614 = 0x20
0x6c4: M[0x20] = 0x1
0x6c5: V615 = 0x40
0x6c8: V616 = SHA3 0x0 0x40
0x6cb: S[V616] = 0x0
0x6cc: V617 = 0x3
0x6cf: V618 = S[0x3]
0x6d3: V619 = LT V270 V618
0x6d4: V620 = ISZERO V619
0x6d5: V621 = 0x2
0x6d8: THROWI V620
---
Entry stack: [V10, 0x33c, V234, 0x0, V270]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x3, S0]
Exit stack: [V10, 0x33c, V234, 0x0, V270, 0x0, 0x3, V270]

================================

Block 0x6d9
[0x6d9:0x708]
---
Predecessors: [0x6b0]
Successors: [0x709]
---
0x6d9 SWAP1
0x6da DUP3
0x6db MSTORE
0x6dc POP
0x6dd PUSH1 0x0
0x6df DUP1
0x6e0 MLOAD
0x6e1 PUSH1 0x20
0x6e3 PUSH2 0x79e
0x6e6 DUP4
0x6e7 CODECOPY
0x6e8 DUP2
0x6e9 MLOAD
0x6ea SWAP2
0x6eb MSTORE
0x6ec DUP3
0x6ed ADD
0x6ee DUP1
0x6ef SLOAD
0x6f0 PUSH1 0x1
0x6f2 PUSH1 0xa0
0x6f4 PUSH1 0x2
0x6f6 EXP
0x6f7 SUB
0x6f8 NOT
0x6f9 AND
0x6fa SWAP1
0x6fb SSTORE
0x6fc PUSH1 0x2
0x6fe DUP1
0x6ff SLOAD
0x700 DUP4
0x701 SWAP1
0x702 DUP2
0x703 LT
0x704 ISZERO
0x705 PUSH2 0x2
0x708 JUMPI
---
0x6db: M[0x0] = 0x3
0x6dd: V622 = 0x0
0x6e0: V623 = M[0x0]
0x6e1: V624 = 0x20
0x6e3: V625 = 0x79e
0x6e7: CODECOPY 0x0 0x79e 0x20
0x6e9: V626 = M[0x0]
0x6eb: M[0x0] = V623
0x6ed: V627 = ADD V270 V626
0x6ef: V628 = S[V627]
0x6f0: V629 = 0x1
0x6f2: V630 = 0xa0
0x6f4: V631 = 0x2
0x6f6: V632 = EXP 0x2 0xa0
0x6f7: V633 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f8: V634 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6f9: V635 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V628
0x6fb: S[V627] = V635
0x6fc: V636 = 0x2
0x6ff: V637 = S[0x2]
0x703: V638 = LT V270 V637
0x704: V639 = ISZERO V638
0x705: V640 = 0x2
0x708: THROWI V639
---
Entry stack: [V10, 0x33c, V234, 0x0, V270, 0x0, 0x3, V270]
Stack pops: 4
Stack additions: [S3, S2, 0x2, S3]
Exit stack: [V10, 0x33c, V234, 0x0, V270, 0x0, 0x2, V270]

================================

Block 0x709
[0x709:0x72d]
---
Predecessors: [0x6d9]
Successors: [0x72e]
---
0x709 SWAP1
0x70a DUP3
0x70b MSTORE
0x70c POP
0x70d PUSH1 0x0
0x70f DUP1
0x710 MLOAD
0x711 PUSH1 0x20
0x713 PUSH2 0x77e
0x716 DUP4
0x717 CODECOPY
0x718 DUP2
0x719 MLOAD
0x71a SWAP2
0x71b MSTORE
0x71c DUP3
0x71d ADD
0x71e DUP2
0x71f SWAP1
0x720 SSTORE
0x721 PUSH1 0x4
0x723 DUP1
0x724 SLOAD
0x725 DUP4
0x726 SWAP1
0x727 DUP2
0x728 LT
0x729 ISZERO
0x72a PUSH2 0x2
0x72d JUMPI
---
0x70b: M[0x0] = 0x2
0x70d: V641 = 0x0
0x710: V642 = M[0x0]
0x711: V643 = 0x20
0x713: V644 = 0x77e
0x717: CODECOPY 0x0 0x77e 0x20
0x719: V645 = M[0x0]
0x71b: M[0x0] = V642
0x71d: V646 = ADD V270 V645
0x720: S[V646] = 0x0
0x721: V647 = 0x4
0x724: V648 = S[0x4]
0x728: V649 = LT V270 V648
0x729: V650 = ISZERO V649
0x72a: V651 = 0x2
0x72d: THROWI V650
---
Entry stack: [V10, 0x33c, V234, 0x0, V270, 0x0, 0x2, V270]
Stack pops: 4
Stack additions: [S3, S2, 0x4, S3]
Exit stack: [V10, 0x33c, V234, 0x0, V270, 0x0, 0x4, V270]

================================

Block 0x72e
[0x72e:0x77d]
---
Predecessors: [0x709]
Successors: [0x44b]
---
0x72e POP
0x72f DUP2
0x730 MSTORE
0x731 PUSH1 0x0
0x733 DUP1
0x734 MLOAD
0x735 PUSH1 0x20
0x737 PUSH2 0x7be
0x73a DUP4
0x73b CODECOPY
0x73c DUP2
0x73d MLOAD
0x73e SWAP2
0x73f MSTORE
0x740 DUP3
0x741 ADD
0x742 DUP2
0x743 SWAP1
0x744 SSTORE
0x745 PUSH1 0x40
0x747 MLOAD
0x748 PUSH1 0x1
0x74a PUSH1 0xa0
0x74c PUSH1 0x2
0x74e EXP
0x74f SUB
0x750 DUP6
0x751 AND
0x752 SWAP2
0x753 PUSH32 0xe87a127e630432a36e6ce7e0bcd8342ad7957812ec5c3220489f036e5e84c276
0x774 SWAP2
0x775 LOG2
0x776 PUSH1 0x1
0x778 SWAP2
0x779 POP
0x77a PUSH2 0x44b
0x77d JUMP
---
0x730: M[0x0] = 0x4
0x731: V652 = 0x0
0x734: V653 = M[0x0]
0x735: V654 = 0x20
0x737: V655 = 0x7be
0x73b: CODECOPY 0x0 0x7be 0x20
0x73d: V656 = M[0x0]
0x73f: M[0x0] = V653
0x741: V657 = ADD V270 V656
0x744: S[V657] = 0x0
0x745: V658 = 0x40
0x747: V659 = M[0x40]
0x748: V660 = 0x1
0x74a: V661 = 0xa0
0x74c: V662 = 0x2
0x74e: V663 = EXP 0x2 0xa0
0x74f: V664 = SUB 0x10000000000000000000000000000000000000000 0x1
0x751: V665 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x753: V666 = 0xe87a127e630432a36e6ce7e0bcd8342ad7957812ec5c3220489f036e5e84c276
0x775: LOG V659 0x0 0xe87a127e630432a36e6ce7e0bcd8342ad7957812ec5c3220489f036e5e84c276 V665
0x776: V667 = 0x1
0x77a: V668 = 0x44b
0x77d: JUMP 0x44b
---
Entry stack: [V10, 0x33c, V234, 0x0, V270, 0x0, 0x4, V270]
Stack pops: 6
Stack additions: [S5, 0x1, S3]
Exit stack: [V10, 0x33c, V234, 0x1, V270]

================================

Block 0x77e
[0x77e:0x77f]
---
Predecessors: []
Successors: [0x780]
Has unresolved jump.
---
0x77e BLOCKHASH
0x77f JUMPI
---
0x77e: V669 = BLOCKHASH S0
0x77f: JUMPI V669 S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x780
[0x780:0x7e7]
---
Predecessors: [0x77e]
Successors: []
---
0x780 DUP8
0x781 STATICCALL
0x782 SLT
0x783 MISSING 0xa8
0x784 MISSING 0x23
0x785 MISSING 0xe0
0x786 CALLCODE
0x787 MISSING 0xb7
0x788 PUSH4 0x1cc41b3b
0x78d MISSING 0xa8
0x78e DUP3
0x78f DUP12
0x790 CALLER
0x791 MISSING 0x21
0x792 MISSING 0xca
0x793 DUP2
0x794 GT
0x795 GT
0x796 STATICCALL
0x797 PUSH22 0xcd3aa3bb5acec2575a0e9e593c00f959f8c92f12db28
0x7ae PUSH10 0xc3395a3b0502d05e2516
0x7b9 DIFFICULTY
0x7ba PUSH16 0x71f85b8a35acfbc15ff81a39ae7d344f
0x7cb MISSING 0xd7
0x7cc MULMOD
0x7cd CALLCODE
0x7ce DUP15
0x7cf DUP7
0x7d0 STOP
0x7d1 MISSING 0xb4
0x7d2 MISSING 0xaa
0x7d3 DUP13
0x7d4 PUSH6 0xc6b64bfe7fe3
0x7db PUSH12 0xd19b
---
0x781: V670 = STATICCALL S7 S0 S1 S2 S3 S4
0x782: V671 = SLT V670 S5
0x783: MISSING 0xa8
0x784: MISSING 0x23
0x785: MISSING 0xe0
0x786: V672 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x787: MISSING 0xb7
0x788: V673 = 0x1cc41b3b
0x78d: MISSING 0xa8
0x790: V674 = CALLER
0x791: MISSING 0x21
0x792: MISSING 0xca
0x794: V675 = GT S1 S0
0x795: V676 = GT V675 S1
0x796: V677 = STATICCALL V676 S2 S3 S4 S5 S6
0x797: V678 = 0xcd3aa3bb5acec2575a0e9e593c00f959f8c92f12db28
0x7ae: V679 = 0xc3395a3b0502d05e2516
0x7b9: V680 = DIFFICULTY
0x7ba: V681 = 0x71f85b8a35acfbc15ff81a39ae7d344f
0x7cb: MISSING 0xd7
0x7cc: V682 = MULMOD S0 S1 S2
0x7cd: V683 = CALLCODE V682 S3 S4 S5 S6 S7 S8
0x7d0: STOP 
0x7d1: MISSING 0xb4
0x7d2: MISSING 0xaa
0x7d4: V684 = 0xc6b64bfe7fe3
0x7db: V685 = 0xd19b
---
Entry stack: []
Stack pops: 12564
Stack additions: [0xd19b, 0xc6b64bfe7fe3, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12]
Exit stack: []

================================

Function 0:
Public function signature: 0x8ae4b0c
Entry block: 0x9a
Exit block: 0x33c
Body: 0x9a, 0x33c

Function 1:
Public function signature: 0x13af4035
Entry block: 0xb5
Exit block: 0x33c
Body: 0xb5, 0xd4, 0xe6, 0xec, 0x23c, 0x33c

Function 2:
Public function signature: 0x18def8ef
Entry block: 0x105
Exit block: 0x33c
Body: 0x105, 0x33c

Function 3:
Public function signature: 0x19179123
Entry block: 0x11d
Exit block: 0x33c
Body: 0x11d, 0x13c, 0x14e, 0x154, 0x176, 0x23c, 0x33c, 0x451

Function 4:
Public function signature: 0x501895ae
Entry block: 0x17d
Exit block: 0x33c
Body: 0x17d, 0x191, 0x33c

Function 5:
Public function signature: 0x63de5323
Entry block: 0x1a8
Exit block: 0x34e
Body: 0x1a8, 0x1bc, 0x34e

Function 6:
Public function signature: 0x81d12c58
Entry block: 0x1dc
Exit block: 0x33c
Body: 0x1dc, 0x1f0, 0x33c

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x207
Exit block: 0x34e
Body: 0x207, 0x34e

Function 8:
Public function signature: 0xa230c524
Entry block: 0x219
Exit block: 0x33c
Body: 0x219, 0x23c, 0x33c

Function 9:
Public function signature: 0xab0da5a9
Entry block: 0x241
Exit block: 0x33c
Body: 0x241, 0x262, 0x274, 0x27a, 0x29c, 0x33c, 0x44b, 0x6b0, 0x6d9, 0x709, 0x72e

Function 10:
Public function signature: 0xca6d56dc
Entry block: 0x2a4
Exit block: 0x33c
Body: 0x2a4, 0x2c5, 0x2d7, 0x2dd, 0x2ff, 0x33c, 0x36b, 0x394, 0x3c4, 0x3e9, 0x44b

Function 11:
Public function signature: 0xdfab9895
Entry block: 0x307
Exit block: 0x33c
Body: 0x307, 0x338, 0x33c, 0x49f, 0x4a4, 0x4b5, 0x4ec, 0x513, 0x57e, 0x587, 0x58f, 0x59a, 0x5a7, 0x5cc, 0x5cf, 0x5d9, 0x5f1, 0x623, 0x62b, 0x64a, 0x670, 0x68e

Function 12:
Public fallback function
Entry block: 0x98
Exit block: 0x98
Body: 0x98

Function 13:
Private function
Entry block: 0x60f
Exit block: 0x66c
Body: 0x60f, 0x618, 0x66c

