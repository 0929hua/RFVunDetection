Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3853682c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x84
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3853682c
0x3b: V13 = EQ V11 0x3853682c
0x3c: V14 = 0x84
0x3f: JUMPI 0x84 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x97]
---
0x40 DUP1
0x41 PUSH4 0x3e3ee859
0x46 EQ
0x47 PUSH2 0x97
0x4a JUMPI
---
0x41: V15 = 0x3e3ee859
0x46: V16 = EQ 0x3e3ee859 V11
0x47: V17 = 0x97
0x4a: JUMPI 0x97 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xe5]
---
0x4b DUP1
0x4c PUSH4 0x3fad9ae0
0x51 EQ
0x52 PUSH2 0xe5
0x55 JUMPI
---
0x4c: V18 = 0x3fad9ae0
0x51: V19 = EQ 0x3fad9ae0 V11
0x52: V20 = 0xe5
0x55: JUMPI 0xe5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x16f]
---
0x56 DUP1
0x57 PUSH4 0x59988dce
0x5c EQ
0x5d PUSH2 0x16f
0x60 JUMPI
---
0x57: V21 = 0x59988dce
0x5c: V22 = EQ 0x59988dce V11
0x5d: V23 = 0x16f
0x60: JUMPI 0x16f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x19d]
---
0x61 DUP1
0x62 PUSH4 0xb96d64fb
0x67 EQ
0x68 PUSH2 0x19d
0x6b JUMPI
---
0x62: V24 = 0xb96d64fb
0x67: V25 = EQ 0xb96d64fb V11
0x68: V26 = 0x19d
0x6b: JUMPI 0x19d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x227]
---
0x6c DUP1
0x6d PUSH4 0xe2ba5573
0x72 EQ
0x73 PUSH2 0x227
0x76 JUMPI
---
0x6d: V27 = 0xe2ba5573
0x72: V28 = EQ 0xe2ba5573 V11
0x73: V29 = 0x227
0x76: JUMPI 0x227 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x24e]
---
0x77 DUP1
0x78 PUSH4 0xf50ab247
0x7d EQ
0x7e PUSH2 0x24e
0x81 JUMPI
---
0x78: V30 = 0xf50ab247
0x7d: V31 = EQ 0xf50ab247 V11
0x7e: V32 = 0x24e
0x81: JUMPI 0x24e V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x0, 0x77, 0x32b, 0x366, 0x41c, 0x53c, 0x5c6, 0x643]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V11, 0x82, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, S5, S4, S3, S2, S1, S0]

================================

Block 0x84
[0x84:0x96]
---
Predecessors: [0xd]
Successors: [0x256]
---
0x84 JUMPDEST
0x85 PUSH2 0x82
0x88 PUSH1 0x4
0x8a DUP1
0x8b CALLDATALOAD
0x8c PUSH1 0x24
0x8e DUP2
0x8f ADD
0x90 SWAP2
0x91 ADD
0x92 CALLDATALOAD
0x93 PUSH2 0x256
0x96 JUMP
---
0x84: JUMPDEST 
0x85: V33 = 0x82
0x88: V34 = 0x4
0x8b: V35 = CALLDATALOAD 0x4
0x8c: V36 = 0x24
0x8f: V37 = ADD V35 0x24
0x91: V38 = ADD 0x4 V35
0x92: V39 = CALLDATALOAD V38
0x93: V40 = 0x256
0x96: JUMP 0x256
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V37, V39]
Exit stack: [V11, 0x82, V37, V39]

================================

Block 0x97
[0x97:0xe4]
---
Predecessors: [0x40]
Successors: [0x32f]
---
0x97 JUMPDEST
0x98 PUSH1 0x40
0x9a DUP1
0x9b MLOAD
0x9c PUSH1 0x20
0x9e PUSH1 0x4
0xa0 DUP1
0xa1 CALLDATALOAD
0xa2 DUP1
0xa3 DUP3
0xa4 ADD
0xa5 CALLDATALOAD
0xa6 PUSH1 0x1f
0xa8 DUP2
0xa9 ADD
0xaa DUP5
0xab SWAP1
0xac DIV
0xad DUP5
0xae MUL
0xaf DUP6
0xb0 ADD
0xb1 DUP5
0xb2 ADD
0xb3 SWAP1
0xb4 SWAP6
0xb5 MSTORE
0xb6 DUP5
0xb7 DUP5
0xb8 MSTORE
0xb9 PUSH2 0x82
0xbc SWAP5
0xbd CALLDATASIZE
0xbe SWAP5
0xbf SWAP3
0xc0 SWAP4
0xc1 PUSH1 0x24
0xc3 SWAP4
0xc4 SWAP3
0xc5 DUP5
0xc6 ADD
0xc7 SWAP2
0xc8 SWAP1
0xc9 DUP2
0xca SWAP1
0xcb DUP5
0xcc ADD
0xcd DUP4
0xce DUP3
0xcf DUP1
0xd0 DUP3
0xd1 DUP5
0xd2 CALLDATACOPY
0xd3 POP
0xd4 SWAP5
0xd5 SWAP8
0xd6 POP
0xd7 POP
0xd8 SWAP4
0xd9 CALLDATALOAD
0xda SWAP5
0xdb POP
0xdc PUSH2 0x32f
0xdf SWAP4
0xe0 POP
0xe1 POP
0xe2 POP
0xe3 POP
0xe4 JUMP
---
0x97: JUMPDEST 
0x98: V41 = 0x40
0x9b: V42 = M[0x40]
0x9c: V43 = 0x20
0x9e: V44 = 0x4
0xa1: V45 = CALLDATALOAD 0x4
0xa4: V46 = ADD 0x4 V45
0xa5: V47 = CALLDATALOAD V46
0xa6: V48 = 0x1f
0xa9: V49 = ADD V47 0x1f
0xac: V50 = DIV V49 0x20
0xae: V51 = MUL 0x20 V50
0xb0: V52 = ADD V42 V51
0xb2: V53 = ADD 0x20 V52
0xb5: M[0x40] = V53
0xb8: M[V42] = V47
0xb9: V54 = 0x82
0xbd: V55 = CALLDATASIZE
0xc1: V56 = 0x24
0xc6: V57 = ADD 0x24 V45
0xcc: V58 = ADD V42 0x20
0xd2: CALLDATACOPY V58 V57 V47
0xd9: V59 = CALLDATALOAD 0x24
0xdc: V60 = 0x32f
0xe4: JUMP 0x32f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V42, V59]
Exit stack: [V11, 0x82, V42, V59]

================================

Block 0xe5
[0xe5:0xec]
---
Predecessors: [0x4b]
Successors: [0xed, 0xf1]
---
0xe5 JUMPDEST
0xe6 CALLVALUE
0xe7 DUP1
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe5: JUMPDEST 
0xe6: V61 = CALLVALUE
0xe8: V62 = ISZERO V61
0xe9: V63 = 0xf1
0xec: JUMPI 0xf1 V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe5]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V64 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V11, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61]

================================

Block 0xf1
[0xf1:0xf9]
---
Predecessors: [0xe5]
Successors: [0x36d]
---
0xf1 JUMPDEST
0xf2 POP
0xf3 PUSH2 0xfa
0xf6 PUSH2 0x36d
0xf9 JUMP
---
0xf1: JUMPDEST 
0xf3: V65 = 0xfa
0xf6: V66 = 0x36d
0xf9: JUMP 0x36d
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: [0xfa]
Exit stack: [V11, 0xfa]

================================

Block 0xfa
[0xfa:0x11b]
---
Predecessors: [0x3f0]
Successors: [0x11c]
---
0xfa JUMPDEST
0xfb PUSH1 0x40
0xfd DUP1
0xfe MLOAD
0xff PUSH1 0x20
0x101 DUP1
0x102 DUP3
0x103 MSTORE
0x104 DUP4
0x105 MLOAD
0x106 DUP2
0x107 DUP4
0x108 ADD
0x109 MSTORE
0x10a DUP4
0x10b MLOAD
0x10c SWAP2
0x10d SWAP3
0x10e DUP4
0x10f SWAP3
0x110 SWAP1
0x111 DUP4
0x112 ADD
0x113 SWAP2
0x114 DUP6
0x115 ADD
0x116 SWAP1
0x117 DUP1
0x118 DUP4
0x119 DUP4
0x11a PUSH1 0x0
---
0xfa: JUMPDEST 
0xfb: V67 = 0x40
0xfe: V68 = M[0x40]
0xff: V69 = 0x20
0x103: M[V68] = 0x20
0x105: V70 = M[V259]
0x108: V71 = ADD V68 0x20
0x109: M[V71] = V70
0x10b: V72 = M[V259]
0x112: V73 = ADD V68 0x40
0x115: V74 = ADD V259 0x20
0x11a: V75 = 0x0
---
Entry stack: [V11, 0xfa, V259]
Stack pops: 1
Stack additions: [S0, V68, V68, V73, V74, V72, V72, V73, V74, 0x0]
Exit stack: [V11, 0xfa, V259, V68, V68, V73, V74, V72, V72, V73, V74, 0x0]

================================

Block 0x11c
[0x11c:0x124]
---
Predecessors: [0xfa, 0x125]
Successors: [0x125, 0x134]
---
0x11c JUMPDEST
0x11d DUP4
0x11e DUP2
0x11f LT
0x120 ISZERO
0x121 PUSH2 0x134
0x124 JUMPI
---
0x11c: JUMPDEST 
0x11f: V76 = LT S0 V72
0x120: V77 = ISZERO V76
0x121: V78 = 0x134
0x124: JUMPI 0x134 V77
---
Entry stack: [V11, 0xfa, V259, V68, V68, V73, V74, V72, V72, V73, V74, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xfa, V259, V68, V68, V73, V74, V72, V72, V73, V74, S0]

================================

Block 0x125
[0x125:0x133]
---
Predecessors: [0x11c]
Successors: [0x11c]
---
0x125 DUP2
0x126 DUP2
0x127 ADD
0x128 MLOAD
0x129 DUP4
0x12a DUP3
0x12b ADD
0x12c MSTORE
0x12d PUSH1 0x20
0x12f ADD
0x130 PUSH2 0x11c
0x133 JUMP
---
0x127: V79 = ADD S0 V74
0x128: V80 = M[V79]
0x12b: V81 = ADD S0 V73
0x12c: M[V81] = V80
0x12d: V82 = 0x20
0x12f: V83 = ADD 0x20 S0
0x130: V84 = 0x11c
0x133: JUMP 0x11c
---
Entry stack: [V11, 0xfa, V259, V68, V68, V73, V74, V72, V72, V73, V74, S0]
Stack pops: 3
Stack additions: [S2, S1, V83]
Exit stack: [V11, 0xfa, V259, V68, V68, V73, V74, V72, V72, V73, V74, V83]

================================

Block 0x134
[0x134:0x147]
---
Predecessors: [0x11c]
Successors: [0x148, 0x161]
---
0x134 JUMPDEST
0x135 POP
0x136 POP
0x137 POP
0x138 POP
0x139 SWAP1
0x13a POP
0x13b SWAP1
0x13c DUP2
0x13d ADD
0x13e SWAP1
0x13f PUSH1 0x1f
0x141 AND
0x142 DUP1
0x143 ISZERO
0x144 PUSH2 0x161
0x147 JUMPI
---
0x134: JUMPDEST 
0x13d: V85 = ADD V72 V73
0x13f: V86 = 0x1f
0x141: V87 = AND 0x1f V72
0x143: V88 = ISZERO V87
0x144: V89 = 0x161
0x147: JUMPI 0x161 V88
---
Entry stack: [V11, 0xfa, V259, V68, V68, V73, V74, V72, V72, V73, V74, S0]
Stack pops: 7
Stack additions: [V85, V87]
Exit stack: [V11, 0xfa, V259, V68, V68, V85, V87]

================================

Block 0x148
[0x148:0x160]
---
Predecessors: [0x134]
Successors: [0x161]
---
0x148 DUP1
0x149 DUP3
0x14a SUB
0x14b DUP1
0x14c MLOAD
0x14d PUSH1 0x1
0x14f DUP4
0x150 PUSH1 0x20
0x152 SUB
0x153 PUSH2 0x100
0x156 EXP
0x157 SUB
0x158 NOT
0x159 AND
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP2
0x160 POP
---
0x14a: V90 = SUB V85 V87
0x14c: V91 = M[V90]
0x14d: V92 = 0x1
0x150: V93 = 0x20
0x152: V94 = SUB 0x20 V87
0x153: V95 = 0x100
0x156: V96 = EXP 0x100 V94
0x157: V97 = SUB V96 0x1
0x158: V98 = NOT V97
0x159: V99 = AND V98 V91
0x15b: M[V90] = V99
0x15c: V100 = 0x20
0x15e: V101 = ADD 0x20 V90
---
Entry stack: [V11, 0xfa, V259, V68, V68, V85, V87]
Stack pops: 2
Stack additions: [V101, S0]
Exit stack: [V11, 0xfa, V259, V68, V68, V101, V87]

================================

Block 0x161
[0x161:0x16e]
---
Predecessors: [0x134, 0x148]
Successors: []
---
0x161 JUMPDEST
0x162 POP
0x163 SWAP3
0x164 POP
0x165 POP
0x166 POP
0x167 PUSH1 0x40
0x169 MLOAD
0x16a DUP1
0x16b SWAP2
0x16c SUB
0x16d SWAP1
0x16e RETURN
---
0x161: JUMPDEST 
0x167: V102 = 0x40
0x169: V103 = M[0x40]
0x16c: V104 = SUB S1 V103
0x16e: RETURN V103 V104
---
Entry stack: [V11, 0xfa, V259, V68, V68, S1, V87]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xfa]

================================

Block 0x16f
[0x16f:0x176]
---
Predecessors: [0x56]
Successors: [0x177, 0x17b]
---
0x16f JUMPDEST
0x170 CALLVALUE
0x171 DUP1
0x172 ISZERO
0x173 PUSH2 0x17b
0x176 JUMPI
---
0x16f: JUMPDEST 
0x170: V105 = CALLVALUE
0x172: V106 = ISZERO V105
0x173: V107 = 0x17b
0x176: JUMPI 0x17b V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V105]
Exit stack: [V11, V105]

================================

Block 0x177
[0x177:0x17a]
---
Predecessors: [0x16f]
Successors: []
---
0x177 PUSH1 0x0
0x179 DUP1
0x17a REVERT
---
0x177: V108 = 0x0
0x17a: REVERT 0x0 0x0
---
Entry stack: [V11, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V105]

================================

Block 0x17b
[0x17b:0x19c]
---
Predecessors: [0x16f]
Successors: [0x3f8]
---
0x17b JUMPDEST
0x17c POP
0x17d PUSH2 0x82
0x180 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x195 PUSH1 0x4
0x197 CALLDATALOAD
0x198 AND
0x199 PUSH2 0x3f8
0x19c JUMP
---
0x17b: JUMPDEST 
0x17d: V109 = 0x82
0x180: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x195: V111 = 0x4
0x197: V112 = CALLDATALOAD 0x4
0x198: V113 = AND V112 0xffffffffffffffffffffffffffffffffffffffff
0x199: V114 = 0x3f8
0x19c: JUMP 0x3f8
---
Entry stack: [V11, V105]
Stack pops: 1
Stack additions: [0x82, V113]
Exit stack: [V11, 0x82, V113]

================================

Block 0x19d
[0x19d:0x226]
---
Predecessors: [0x61]
Successors: [0x458]
---
0x19d JUMPDEST
0x19e PUSH1 0x40
0x1a0 DUP1
0x1a1 MLOAD
0x1a2 PUSH1 0x20
0x1a4 PUSH1 0x4
0x1a6 DUP1
0x1a7 CALLDATALOAD
0x1a8 DUP1
0x1a9 DUP3
0x1aa ADD
0x1ab CALLDATALOAD
0x1ac PUSH1 0x1f
0x1ae DUP2
0x1af ADD
0x1b0 DUP5
0x1b1 SWAP1
0x1b2 DIV
0x1b3 DUP5
0x1b4 MUL
0x1b5 DUP6
0x1b6 ADD
0x1b7 DUP5
0x1b8 ADD
0x1b9 SWAP1
0x1ba SWAP6
0x1bb MSTORE
0x1bc DUP5
0x1bd DUP5
0x1be MSTORE
0x1bf PUSH2 0x82
0x1c2 SWAP5
0x1c3 CALLDATASIZE
0x1c4 SWAP5
0x1c5 SWAP3
0x1c6 SWAP4
0x1c7 PUSH1 0x24
0x1c9 SWAP4
0x1ca SWAP3
0x1cb DUP5
0x1cc ADD
0x1cd SWAP2
0x1ce SWAP1
0x1cf DUP2
0x1d0 SWAP1
0x1d1 DUP5
0x1d2 ADD
0x1d3 DUP4
0x1d4 DUP3
0x1d5 DUP1
0x1d6 DUP3
0x1d7 DUP5
0x1d8 CALLDATACOPY
0x1d9 POP
0x1da POP
0x1db PUSH1 0x40
0x1dd DUP1
0x1de MLOAD
0x1df PUSH1 0x20
0x1e1 PUSH1 0x1f
0x1e3 DUP10
0x1e4 CALLDATALOAD
0x1e5 DUP12
0x1e6 ADD
0x1e7 DUP1
0x1e8 CALLDATALOAD
0x1e9 SWAP2
0x1ea DUP3
0x1eb ADD
0x1ec DUP4
0x1ed SWAP1
0x1ee DIV
0x1ef DUP4
0x1f0 MUL
0x1f1 DUP5
0x1f2 ADD
0x1f3 DUP4
0x1f4 ADD
0x1f5 SWAP1
0x1f6 SWAP5
0x1f7 MSTORE
0x1f8 DUP1
0x1f9 DUP4
0x1fa MSTORE
0x1fb SWAP8
0x1fc SWAP11
0x1fd SWAP10
0x1fe SWAP9
0x1ff DUP2
0x200 ADD
0x201 SWAP8
0x202 SWAP2
0x203 SWAP7
0x204 POP
0x205 SWAP2
0x206 DUP3
0x207 ADD
0x208 SWAP5
0x209 POP
0x20a SWAP3
0x20b POP
0x20c DUP3
0x20d SWAP2
0x20e POP
0x20f DUP5
0x210 ADD
0x211 DUP4
0x212 DUP3
0x213 DUP1
0x214 DUP3
0x215 DUP5
0x216 CALLDATACOPY
0x217 POP
0x218 SWAP5
0x219 SWAP8
0x21a POP
0x21b PUSH2 0x458
0x21e SWAP7
0x21f POP
0x220 POP
0x221 POP
0x222 POP
0x223 POP
0x224 POP
0x225 POP
0x226 JUMP
---
0x19d: JUMPDEST 
0x19e: V115 = 0x40
0x1a1: V116 = M[0x40]
0x1a2: V117 = 0x20
0x1a4: V118 = 0x4
0x1a7: V119 = CALLDATALOAD 0x4
0x1aa: V120 = ADD 0x4 V119
0x1ab: V121 = CALLDATALOAD V120
0x1ac: V122 = 0x1f
0x1af: V123 = ADD V121 0x1f
0x1b2: V124 = DIV V123 0x20
0x1b4: V125 = MUL 0x20 V124
0x1b6: V126 = ADD V116 V125
0x1b8: V127 = ADD 0x20 V126
0x1bb: M[0x40] = V127
0x1be: M[V116] = V121
0x1bf: V128 = 0x82
0x1c3: V129 = CALLDATASIZE
0x1c7: V130 = 0x24
0x1cc: V131 = ADD 0x24 V119
0x1d2: V132 = ADD V116 0x20
0x1d8: CALLDATACOPY V132 V131 V121
0x1db: V133 = 0x40
0x1de: V134 = M[0x40]
0x1df: V135 = 0x20
0x1e1: V136 = 0x1f
0x1e4: V137 = CALLDATALOAD 0x24
0x1e6: V138 = ADD 0x4 V137
0x1e8: V139 = CALLDATALOAD V138
0x1eb: V140 = ADD V139 0x1f
0x1ee: V141 = DIV V140 0x20
0x1f0: V142 = MUL 0x20 V141
0x1f2: V143 = ADD V134 V142
0x1f4: V144 = ADD 0x20 V143
0x1f7: M[0x40] = V144
0x1fa: M[V134] = V139
0x200: V145 = ADD 0x20 0x24
0x207: V146 = ADD 0x20 V138
0x210: V147 = ADD V134 0x20
0x216: CALLDATACOPY V147 V146 V139
0x21b: V148 = 0x458
0x226: JUMP 0x458
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V116, V134]
Exit stack: [V11, 0x82, V116, V134]

================================

Block 0x227
[0x227:0x22e]
---
Predecessors: [0x6c]
Successors: [0x22f, 0x233]
---
0x227 JUMPDEST
0x228 CALLVALUE
0x229 DUP1
0x22a ISZERO
0x22b PUSH2 0x233
0x22e JUMPI
---
0x227: JUMPDEST 
0x228: V149 = CALLVALUE
0x22a: V150 = ISZERO V149
0x22b: V151 = 0x233
0x22e: JUMPI 0x233 V150
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V149]
Exit stack: [V11, V149]

================================

Block 0x22f
[0x22f:0x232]
---
Predecessors: [0x227]
Successors: []
---
0x22f PUSH1 0x0
0x231 DUP1
0x232 REVERT
---
0x22f: V152 = 0x0
0x232: REVERT 0x0 0x0
---
Entry stack: [V11, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V149]

================================

Block 0x233
[0x233:0x23b]
---
Predecessors: [0x227]
Successors: [0x56f]
---
0x233 JUMPDEST
0x234 POP
0x235 PUSH2 0x23c
0x238 PUSH2 0x56f
0x23b JUMP
---
0x233: JUMPDEST 
0x235: V153 = 0x23c
0x238: V154 = 0x56f
0x23b: JUMP 0x56f
---
Entry stack: [V11, V149]
Stack pops: 1
Stack additions: [0x23c]
Exit stack: [V11, 0x23c]

================================

Block 0x23c
[0x23c:0x24d]
---
Predecessors: [0x56f]
Successors: []
---
0x23c JUMPDEST
0x23d PUSH1 0x40
0x23f DUP1
0x240 MLOAD
0x241 SWAP2
0x242 DUP3
0x243 MSTORE
0x244 MLOAD
0x245 SWAP1
0x246 DUP2
0x247 SWAP1
0x248 SUB
0x249 PUSH1 0x20
0x24b ADD
0x24c SWAP1
0x24d RETURN
---
0x23c: JUMPDEST 
0x23d: V155 = 0x40
0x240: V156 = M[0x40]
0x243: M[V156] = V419
0x244: V157 = M[0x40]
0x248: V158 = SUB V156 V157
0x249: V159 = 0x20
0x24b: V160 = ADD 0x20 V158
0x24d: RETURN V157 V160
---
Entry stack: [V11, 0x23c, V419]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x23c]

================================

Block 0x24e
[0x24e:0x255]
---
Predecessors: [0x77]
Successors: [0x575]
---
0x24e JUMPDEST
0x24f PUSH2 0x82
0x252 PUSH2 0x575
0x255 JUMP
---
0x24e: JUMPDEST 
0x24f: V161 = 0x82
0x252: V162 = 0x575
0x255: JUMP 0x575
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0x256
[0x256:0x25d]
---
Predecessors: [0x84]
Successors: [0x25e, 0x262]
---
0x256 JUMPDEST
0x257 CALLER
0x258 ORIGIN
0x259 EQ
0x25a PUSH2 0x262
0x25d JUMPI
---
0x256: JUMPDEST 
0x257: V163 = CALLER
0x258: V164 = ORIGIN
0x259: V165 = EQ V164 V163
0x25a: V166 = 0x262
0x25d: JUMPI 0x262 V165
---
Entry stack: [V11, 0x82, V37, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V37, V39]

================================

Block 0x25e
[0x25e:0x261]
---
Predecessors: [0x256]
Successors: []
---
0x25e PUSH1 0x0
0x260 DUP1
0x261 REVERT
---
0x25e: V167 = 0x0
0x261: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V37, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V37, V39]

================================

Block 0x262
[0x262:0x298]
---
Predecessors: [0x256]
Successors: [0x299]
---
0x262 JUMPDEST
0x263 DUP2
0x264 DUP2
0x265 PUSH1 0x40
0x267 MLOAD
0x268 PUSH1 0x20
0x26a ADD
0x26b DUP1
0x26c DUP4
0x26d DUP4
0x26e DUP1
0x26f DUP3
0x270 DUP5
0x271 CALLDATACOPY
0x272 DUP3
0x273 ADD
0x274 SWAP2
0x275 POP
0x276 POP
0x277 SWAP3
0x278 POP
0x279 POP
0x27a POP
0x27b PUSH1 0x40
0x27d MLOAD
0x27e PUSH1 0x20
0x280 DUP2
0x281 DUP4
0x282 SUB
0x283 SUB
0x284 DUP2
0x285 MSTORE
0x286 SWAP1
0x287 PUSH1 0x40
0x289 MSTORE
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP1
0x28e DUP3
0x28f DUP1
0x290 MLOAD
0x291 SWAP1
0x292 PUSH1 0x20
0x294 ADD
0x295 SWAP1
0x296 DUP1
0x297 DUP4
0x298 DUP4
---
0x262: JUMPDEST 
0x265: V168 = 0x40
0x267: V169 = M[0x40]
0x268: V170 = 0x20
0x26a: V171 = ADD 0x20 V169
0x271: CALLDATACOPY V171 V37 V39
0x273: V172 = ADD V171 V39
0x27b: V173 = 0x40
0x27d: V174 = M[0x40]
0x27e: V175 = 0x20
0x282: V176 = SUB V172 V174
0x283: V177 = SUB V176 0x20
0x285: M[V174] = V177
0x287: V178 = 0x40
0x289: M[0x40] = V172
0x28a: V179 = 0x40
0x28c: V180 = M[0x40]
0x290: V181 = M[V174]
0x292: V182 = 0x20
0x294: V183 = ADD 0x20 V174
---
Entry stack: [V11, 0x82, V37, V39]
Stack pops: 2
Stack additions: [S1, S0, V174, V180, V180, V183, V181, V181, V180, V183]
Exit stack: [V11, 0x82, V37, V39, V174, V180, V180, V183, V181, V181, V180, V183]

================================

Block 0x299
[0x299:0x2a1]
---
Predecessors: [0x262, 0x2a2]
Successors: [0x2a2, 0x2b8]
---
0x299 JUMPDEST
0x29a PUSH1 0x20
0x29c DUP4
0x29d LT
0x29e PUSH2 0x2b8
0x2a1 JUMPI
---
0x299: JUMPDEST 
0x29a: V184 = 0x20
0x29d: V185 = LT S2 0x20
0x29e: V186 = 0x2b8
0x2a1: JUMPI 0x2b8 V185
---
Entry stack: [V11, 0x82, V37, V39, V174, V180, V180, V183, V181, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x82, V37, V39, V174, V180, V180, V183, V181, S2, S1, S0]

================================

Block 0x2a2
[0x2a2:0x2b7]
---
Predecessors: [0x299]
Successors: [0x299]
---
0x2a2 DUP1
0x2a3 MLOAD
0x2a4 DUP3
0x2a5 MSTORE
0x2a6 PUSH1 0x1f
0x2a8 NOT
0x2a9 SWAP1
0x2aa SWAP3
0x2ab ADD
0x2ac SWAP2
0x2ad PUSH1 0x20
0x2af SWAP2
0x2b0 DUP3
0x2b1 ADD
0x2b2 SWAP2
0x2b3 ADD
0x2b4 PUSH2 0x299
0x2b7 JUMP
---
0x2a3: V187 = M[S0]
0x2a5: M[S1] = V187
0x2a6: V188 = 0x1f
0x2a8: V189 = NOT 0x1f
0x2ab: V190 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2ad: V191 = 0x20
0x2b1: V192 = ADD 0x20 S1
0x2b3: V193 = ADD 0x20 S0
0x2b4: V194 = 0x299
0x2b7: JUMP 0x299
---
Entry stack: [V11, 0x82, V37, V39, V174, V180, V180, V183, V181, S2, S1, S0]
Stack pops: 3
Stack additions: [V190, V192, V193]
Exit stack: [V11, 0x82, V37, V39, V174, V180, V180, V183, V181, V190, V192, V193]

================================

Block 0x2b8
[0x2b8:0x2f0]
---
Predecessors: [0x299]
Successors: [0x2f1, 0x2f7]
---
0x2b8 JUMPDEST
0x2b9 MLOAD
0x2ba DUP2
0x2bb MLOAD
0x2bc PUSH1 0x20
0x2be SWAP4
0x2bf SWAP1
0x2c0 SWAP4
0x2c1 SUB
0x2c2 PUSH2 0x100
0x2c5 EXP
0x2c6 PUSH1 0x0
0x2c8 NOT
0x2c9 ADD
0x2ca DUP1
0x2cb NOT
0x2cc SWAP1
0x2cd SWAP2
0x2ce AND
0x2cf SWAP3
0x2d0 AND
0x2d1 SWAP2
0x2d2 SWAP1
0x2d3 SWAP2
0x2d4 OR
0x2d5 SWAP1
0x2d6 MSTORE
0x2d7 PUSH1 0x40
0x2d9 MLOAD
0x2da SWAP3
0x2db ADD
0x2dc DUP3
0x2dd SWAP1
0x2de SUB
0x2df SWAP1
0x2e0 SWAP2
0x2e1 SHA3
0x2e2 PUSH1 0x4
0x2e4 SLOAD
0x2e5 EQ
0x2e6 SWAP3
0x2e7 POP
0x2e8 POP
0x2e9 DUP2
0x2ea ISZERO
0x2eb SWAP1
0x2ec POP
0x2ed PUSH2 0x2f7
0x2f0 JUMPI
---
0x2b8: JUMPDEST 
0x2b9: V195 = M[S0]
0x2bb: V196 = M[S1]
0x2bc: V197 = 0x20
0x2c1: V198 = SUB 0x20 S2
0x2c2: V199 = 0x100
0x2c5: V200 = EXP 0x100 V198
0x2c6: V201 = 0x0
0x2c8: V202 = NOT 0x0
0x2c9: V203 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V200
0x2cb: V204 = NOT V203
0x2ce: V205 = AND V195 V204
0x2d0: V206 = AND V196 V203
0x2d4: V207 = OR V206 V205
0x2d6: M[S1] = V207
0x2d7: V208 = 0x40
0x2d9: V209 = M[0x40]
0x2db: V210 = ADD V180 V181
0x2de: V211 = SUB V210 V209
0x2e1: V212 = SHA3 V209 V211
0x2e2: V213 = 0x4
0x2e4: V214 = S[0x4]
0x2e5: V215 = EQ V214 V212
0x2ea: V216 = ISZERO V215
0x2ed: V217 = 0x2f7
0x2f0: JUMPI 0x2f7 V216
---
Entry stack: [V11, 0x82, V37, V39, V174, V180, V180, V183, V181, S2, S1, S0]
Stack pops: 8
Stack additions: [V215]
Exit stack: [V11, 0x82, V37, V39, V215]

================================

Block 0x2f1
[0x2f1:0x2f6]
---
Predecessors: [0x2b8]
Successors: [0x2f7]
---
0x2f1 POP
0x2f2 PUSH1 0x0
0x2f4 SLOAD
0x2f5 CALLVALUE
0x2f6 GT
---
0x2f2: V218 = 0x0
0x2f4: V219 = S[0x0]
0x2f5: V220 = CALLVALUE
0x2f6: V221 = GT V220 V219
---
Entry stack: [V11, 0x82, V37, V39, V215]
Stack pops: 1
Stack additions: [V221]
Exit stack: [V11, 0x82, V37, V39, V221]

================================

Block 0x2f7
[0x2f7:0x2fc]
---
Predecessors: [0x2b8, 0x2f1]
Successors: [0x2fd, 0x32b]
---
0x2f7 JUMPDEST
0x2f8 ISZERO
0x2f9 PUSH2 0x32b
0x2fc JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V222 = ISZERO S0
0x2f9: V223 = 0x32b
0x2fc: JUMPI 0x32b V222
---
Entry stack: [V11, 0x82, V37, V39, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82, V37, V39]

================================

Block 0x2fd
[0x2fd:0x31f]
---
Predecessors: [0x2f7]
Successors: [0x320, 0x329]
---
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 CALLER
0x301 SWAP1
0x302 ADDRESS
0x303 BALANCE
0x304 DUP1
0x305 ISZERO
0x306 PUSH2 0x8fc
0x309 MUL
0x30a SWAP2
0x30b PUSH1 0x0
0x30d DUP2
0x30e DUP2
0x30f DUP2
0x310 DUP6
0x311 DUP9
0x312 DUP9
0x313 CALL
0x314 SWAP4
0x315 POP
0x316 POP
0x317 POP
0x318 POP
0x319 ISZERO
0x31a DUP1
0x31b ISZERO
0x31c PUSH2 0x329
0x31f JUMPI
---
0x2fd: V224 = 0x40
0x2ff: V225 = M[0x40]
0x300: V226 = CALLER
0x302: V227 = ADDRESS
0x303: V228 = BALANCE V227
0x305: V229 = ISZERO V228
0x306: V230 = 0x8fc
0x309: V231 = MUL 0x8fc V229
0x30b: V232 = 0x0
0x313: V233 = CALL V231 V226 V228 V225 0x0 V225 0x0
0x319: V234 = ISZERO V233
0x31b: V235 = ISZERO V234
0x31c: V236 = 0x329
0x31f: JUMPI 0x329 V235
---
Entry stack: [V11, 0x82, V37, V39]
Stack pops: 0
Stack additions: [V234]
Exit stack: [V11, 0x82, V37, V39, V234]

================================

Block 0x320
[0x320:0x328]
---
Predecessors: [0x2fd]
Successors: []
---
0x320 RETURNDATASIZE
0x321 PUSH1 0x0
0x323 DUP1
0x324 RETURNDATACOPY
0x325 RETURNDATASIZE
0x326 PUSH1 0x0
0x328 REVERT
---
0x320: V237 = RETURNDATASIZE
0x321: V238 = 0x0
0x324: RETURNDATACOPY 0x0 0x0 V237
0x325: V239 = RETURNDATASIZE
0x326: V240 = 0x0
0x328: REVERT 0x0 V239
---
Entry stack: [V11, 0x82, V37, V39, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V37, V39, V234]

================================

Block 0x329
[0x329:0x32a]
---
Predecessors: [0x2fd]
Successors: [0x32b]
---
0x329 JUMPDEST
0x32a POP
---
0x329: JUMPDEST 
---
Entry stack: [V11, 0x82, V37, V39, V234]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82, V37, V39]

================================

Block 0x32b
[0x32b:0x32e]
---
Predecessors: [0x2f7, 0x329]
Successors: [0x82]
---
0x32b JUMPDEST
0x32c POP
0x32d POP
0x32e JUMP
---
0x32b: JUMPDEST 
0x32e: JUMP 0x82
---
Entry stack: [V11, 0x82, V37, V39]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x32f
[0x32f:0x34e]
---
Predecessors: [0x97]
Successors: [0x34f, 0x353]
---
0x32f JUMPDEST
0x330 PUSH1 0x3
0x332 SLOAD
0x333 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x348 AND
0x349 CALLER
0x34a EQ
0x34b PUSH2 0x353
0x34e JUMPI
---
0x32f: JUMPDEST 
0x330: V241 = 0x3
0x332: V242 = S[0x3]
0x333: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x348: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x349: V245 = CALLER
0x34a: V246 = EQ V245 V244
0x34b: V247 = 0x353
0x34e: JUMPI 0x353 V246
---
Entry stack: [V11, 0x82, V42, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V42, V59]

================================

Block 0x34f
[0x34f:0x352]
---
Predecessors: [0x32f]
Successors: []
---
0x34f PUSH1 0x0
0x351 DUP1
0x352 REVERT
---
0x34f: V248 = 0x0
0x352: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V42, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V42, V59]

================================

Block 0x353
[0x353:0x365]
---
Predecessors: [0x32f]
Successors: [0x5c9]
---
0x353 JUMPDEST
0x354 DUP2
0x355 MLOAD
0x356 PUSH2 0x366
0x359 SWAP1
0x35a PUSH1 0x2
0x35c SWAP1
0x35d PUSH1 0x20
0x35f DUP6
0x360 ADD
0x361 SWAP1
0x362 PUSH2 0x5c9
0x365 JUMP
---
0x353: JUMPDEST 
0x355: V249 = M[V42]
0x356: V250 = 0x366
0x35a: V251 = 0x2
0x35d: V252 = 0x20
0x360: V253 = ADD V42 0x20
0x362: V254 = 0x5c9
0x365: JUMP 0x5c9
---
Entry stack: [V11, 0x82, V42, V59]
Stack pops: 2
Stack additions: [S1, S0, 0x366, 0x2, V253, V249]
Exit stack: [V11, 0x82, V42, V59, 0x366, 0x2, V253, V249]

================================

Block 0x366
[0x366:0x36c]
---
Predecessors: [0x366, 0x53c, 0x643]
Successors: [0x82, 0x366, 0x478]
---
0x366 JUMPDEST
0x367 POP
0x368 PUSH1 0x4
0x36a SSTORE
0x36b POP
0x36c JUMP
---
0x366: JUMPDEST 
0x368: V255 = 0x4
0x36a: S[0x4] = S1
0x36c: JUMP S3
---
Entry stack: [V11, 0x82, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x82, S5, S4]

================================

Block 0x36d
[0x36d:0x3a9]
---
Predecessors: [0xf1]
Successors: [0x3aa, 0x3f0]
---
0x36d JUMPDEST
0x36e PUSH1 0x2
0x370 DUP1
0x371 SLOAD
0x372 PUSH1 0x40
0x374 DUP1
0x375 MLOAD
0x376 PUSH1 0x20
0x378 PUSH1 0x1
0x37a DUP5
0x37b AND
0x37c ISZERO
0x37d PUSH2 0x100
0x380 MUL
0x381 PUSH1 0x0
0x383 NOT
0x384 ADD
0x385 SWAP1
0x386 SWAP4
0x387 AND
0x388 DUP5
0x389 SWAP1
0x38a DIV
0x38b PUSH1 0x1f
0x38d DUP2
0x38e ADD
0x38f DUP5
0x390 SWAP1
0x391 DIV
0x392 DUP5
0x393 MUL
0x394 DUP3
0x395 ADD
0x396 DUP5
0x397 ADD
0x398 SWAP1
0x399 SWAP3
0x39a MSTORE
0x39b DUP2
0x39c DUP2
0x39d MSTORE
0x39e SWAP3
0x39f SWAP2
0x3a0 DUP4
0x3a1 ADD
0x3a2 DUP3
0x3a3 DUP3
0x3a4 DUP1
0x3a5 ISZERO
0x3a6 PUSH2 0x3f0
0x3a9 JUMPI
---
0x36d: JUMPDEST 
0x36e: V256 = 0x2
0x371: V257 = S[0x2]
0x372: V258 = 0x40
0x375: V259 = M[0x40]
0x376: V260 = 0x20
0x378: V261 = 0x1
0x37b: V262 = AND V257 0x1
0x37c: V263 = ISZERO V262
0x37d: V264 = 0x100
0x380: V265 = MUL 0x100 V263
0x381: V266 = 0x0
0x383: V267 = NOT 0x0
0x384: V268 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V265
0x387: V269 = AND V257 V268
0x38a: V270 = DIV V269 0x2
0x38b: V271 = 0x1f
0x38e: V272 = ADD V270 0x1f
0x391: V273 = DIV V272 0x20
0x393: V274 = MUL 0x20 V273
0x395: V275 = ADD V259 V274
0x397: V276 = ADD 0x20 V275
0x39a: M[0x40] = V276
0x39d: M[V259] = V270
0x3a1: V277 = ADD V259 0x20
0x3a5: V278 = ISZERO V270
0x3a6: V279 = 0x3f0
0x3a9: JUMPI 0x3f0 V278
---
Entry stack: [V11, 0xfa]
Stack pops: 0
Stack additions: [V259, 0x2, V270, V277, 0x2, V270]
Exit stack: [V11, 0xfa, V259, 0x2, V270, V277, 0x2, V270]

================================

Block 0x3aa
[0x3aa:0x3b1]
---
Predecessors: [0x36d]
Successors: [0x3b2, 0x3c5]
---
0x3aa DUP1
0x3ab PUSH1 0x1f
0x3ad LT
0x3ae PUSH2 0x3c5
0x3b1 JUMPI
---
0x3ab: V280 = 0x1f
0x3ad: V281 = LT 0x1f V270
0x3ae: V282 = 0x3c5
0x3b1: JUMPI 0x3c5 V281
---
Entry stack: [V11, 0xfa, V259, 0x2, V270, V277, 0x2, V270]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xfa, V259, 0x2, V270, V277, 0x2, V270]

================================

Block 0x3b2
[0x3b2:0x3c4]
---
Predecessors: [0x3aa]
Successors: [0x3f0]
---
0x3b2 PUSH2 0x100
0x3b5 DUP1
0x3b6 DUP4
0x3b7 SLOAD
0x3b8 DIV
0x3b9 MUL
0x3ba DUP4
0x3bb MSTORE
0x3bc SWAP2
0x3bd PUSH1 0x20
0x3bf ADD
0x3c0 SWAP2
0x3c1 PUSH2 0x3f0
0x3c4 JUMP
---
0x3b2: V283 = 0x100
0x3b7: V284 = S[0x2]
0x3b8: V285 = DIV V284 0x100
0x3b9: V286 = MUL V285 0x100
0x3bb: M[V277] = V286
0x3bd: V287 = 0x20
0x3bf: V288 = ADD 0x20 V277
0x3c1: V289 = 0x3f0
0x3c4: JUMP 0x3f0
---
Entry stack: [V11, 0xfa, V259, 0x2, V270, V277, 0x2, V270]
Stack pops: 3
Stack additions: [V288, S1, S0]
Exit stack: [V11, 0xfa, V259, 0x2, V270, V288, 0x2, V270]

================================

Block 0x3c5
[0x3c5:0x3d2]
---
Predecessors: [0x3aa]
Successors: [0x3d3]
---
0x3c5 JUMPDEST
0x3c6 DUP3
0x3c7 ADD
0x3c8 SWAP2
0x3c9 SWAP1
0x3ca PUSH1 0x0
0x3cc MSTORE
0x3cd PUSH1 0x20
0x3cf PUSH1 0x0
0x3d1 SHA3
0x3d2 SWAP1
---
0x3c5: JUMPDEST 
0x3c7: V290 = ADD V277 V270
0x3ca: V291 = 0x0
0x3cc: M[0x0] = 0x2
0x3cd: V292 = 0x20
0x3cf: V293 = 0x0
0x3d1: V294 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xfa, V259, 0x2, V270, V277, 0x2, V270]
Stack pops: 3
Stack additions: [V290, V294, S2]
Exit stack: [V11, 0xfa, V259, 0x2, V270, V290, V294, V277]

================================

Block 0x3d3
[0x3d3:0x3e6]
---
Predecessors: [0x3c5, 0x3d3]
Successors: [0x3d3, 0x3e7]
---
0x3d3 JUMPDEST
0x3d4 DUP2
0x3d5 SLOAD
0x3d6 DUP2
0x3d7 MSTORE
0x3d8 SWAP1
0x3d9 PUSH1 0x1
0x3db ADD
0x3dc SWAP1
0x3dd PUSH1 0x20
0x3df ADD
0x3e0 DUP1
0x3e1 DUP4
0x3e2 GT
0x3e3 PUSH2 0x3d3
0x3e6 JUMPI
---
0x3d3: JUMPDEST 
0x3d5: V295 = S[S1]
0x3d7: M[S0] = V295
0x3d9: V296 = 0x1
0x3db: V297 = ADD 0x1 S1
0x3dd: V298 = 0x20
0x3df: V299 = ADD 0x20 S0
0x3e2: V300 = GT V290 V299
0x3e3: V301 = 0x3d3
0x3e6: JUMPI 0x3d3 V300
---
Entry stack: [V11, 0xfa, V259, 0x2, V270, V290, S1, S0]
Stack pops: 3
Stack additions: [S2, V297, V299]
Exit stack: [V11, 0xfa, V259, 0x2, V270, V290, V297, V299]

================================

Block 0x3e7
[0x3e7:0x3ef]
---
Predecessors: [0x3d3]
Successors: [0x3f0]
---
0x3e7 DUP3
0x3e8 SWAP1
0x3e9 SUB
0x3ea PUSH1 0x1f
0x3ec AND
0x3ed DUP3
0x3ee ADD
0x3ef SWAP2
---
0x3e9: V302 = SUB V299 V290
0x3ea: V303 = 0x1f
0x3ec: V304 = AND 0x1f V302
0x3ee: V305 = ADD V290 V304
---
Entry stack: [V11, 0xfa, V259, 0x2, V270, V290, V297, V299]
Stack pops: 3
Stack additions: [V305, S1, S2]
Exit stack: [V11, 0xfa, V259, 0x2, V270, V305, V297, V290]

================================

Block 0x3f0
[0x3f0:0x3f7]
---
Predecessors: [0x36d, 0x3b2, 0x3e7]
Successors: [0xfa]
---
0x3f0 JUMPDEST
0x3f1 POP
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 POP
0x3f6 DUP2
0x3f7 JUMP
---
0x3f0: JUMPDEST 
0x3f7: JUMP 0xfa
---
Entry stack: [V11, 0xfa, V259, 0x2, V270, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xfa, V259]

================================

Block 0x3f8
[0x3f8:0x417]
---
Predecessors: [0x17b]
Successors: [0x418, 0x41c]
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x3
0x3fb SLOAD
0x3fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x411 AND
0x412 CALLER
0x413 EQ
0x414 PUSH2 0x41c
0x417 JUMPI
---
0x3f8: JUMPDEST 
0x3f9: V306 = 0x3
0x3fb: V307 = S[0x3]
0x3fc: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x411: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x412: V310 = CALLER
0x413: V311 = EQ V310 V309
0x414: V312 = 0x41c
0x417: JUMPI 0x41c V311
---
Entry stack: [V11, 0x82, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V113]

================================

Block 0x418
[0x418:0x41b]
---
Predecessors: [0x3f8]
Successors: []
---
0x418 PUSH1 0x0
0x41a DUP1
0x41b REVERT
---
0x418: V313 = 0x0
0x41b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V113]

================================

Block 0x41c
[0x41c:0x457]
---
Predecessors: [0x3f8]
Successors: [0x82]
---
0x41c JUMPDEST
0x41d PUSH1 0x3
0x41f DUP1
0x420 SLOAD
0x421 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x436 NOT
0x437 AND
0x438 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44d SWAP3
0x44e SWAP1
0x44f SWAP3
0x450 AND
0x451 SWAP2
0x452 SWAP1
0x453 SWAP2
0x454 OR
0x455 SWAP1
0x456 SSTORE
0x457 JUMP
---
0x41c: JUMPDEST 
0x41d: V314 = 0x3
0x420: V315 = S[0x3]
0x421: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x436: V317 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x437: V318 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V315
0x438: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x454: V321 = OR V320 V318
0x456: S[0x3] = V321
0x457: JUMP 0x82
---
Entry stack: [V11, 0x82, V113]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x458
[0x458:0x460]
---
Predecessors: [0x19d]
Successors: [0x461, 0x465]
---
0x458 JUMPDEST
0x459 PUSH1 0x4
0x45b SLOAD
0x45c ISZERO
0x45d PUSH2 0x465
0x460 JUMPI
---
0x458: JUMPDEST 
0x459: V322 = 0x4
0x45b: V323 = S[0x4]
0x45c: V324 = ISZERO V323
0x45d: V325 = 0x465
0x460: JUMPI 0x465 V324
---
Entry stack: [V11, 0x82, V116, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V116, V134]

================================

Block 0x461
[0x461:0x464]
---
Predecessors: [0x458]
Successors: []
---
0x461 PUSH1 0x0
0x463 DUP1
0x464 REVERT
---
0x461: V326 = 0x0
0x464: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V116, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V116, V134]

================================

Block 0x465
[0x465:0x477]
---
Predecessors: [0x458]
Successors: [0x5c9]
---
0x465 JUMPDEST
0x466 DUP2
0x467 MLOAD
0x468 PUSH2 0x478
0x46b SWAP1
0x46c PUSH1 0x2
0x46e SWAP1
0x46f PUSH1 0x20
0x471 DUP6
0x472 ADD
0x473 SWAP1
0x474 PUSH2 0x5c9
0x477 JUMP
---
0x465: JUMPDEST 
0x467: V327 = M[V116]
0x468: V328 = 0x478
0x46c: V329 = 0x2
0x46f: V330 = 0x20
0x472: V331 = ADD V116 0x20
0x474: V332 = 0x5c9
0x477: JUMP 0x5c9
---
Entry stack: [V11, 0x82, V116, V134]
Stack pops: 2
Stack additions: [S1, S0, 0x478, 0x2, V331, V327]
Exit stack: [V11, 0x82, V116, V134, 0x478, 0x2, V331, V327]

================================

Block 0x478
[0x478:0x4a1]
---
Predecessors: [0x366, 0x53c, 0x643]
Successors: [0x4a2, 0x4a6]
---
0x478 JUMPDEST
0x479 POP
0x47a PUSH1 0x3
0x47c DUP1
0x47d SLOAD
0x47e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x493 NOT
0x494 AND
0x495 CALLER
0x496 OR
0x497 SWAP1
0x498 SSTORE
0x499 PUSH1 0x1
0x49b SLOAD
0x49c TIMESTAMP
0x49d GT
0x49e PUSH2 0x4a6
0x4a1 JUMPI
---
0x478: JUMPDEST 
0x47a: V333 = 0x3
0x47d: V334 = S[0x3]
0x47e: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x493: V336 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x494: V337 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V334
0x495: V338 = CALLER
0x496: V339 = OR V338 V337
0x498: S[0x3] = V339
0x499: V340 = 0x1
0x49b: V341 = S[0x1]
0x49c: V342 = TIMESTAMP
0x49d: V343 = GT V342 V341
0x49e: V344 = 0x4a6
0x4a1: JUMPI 0x4a6 V343
---
Entry stack: [V11, 0x82, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82, S5, S4, S3, S2, S1]

================================

Block 0x4a2
[0x4a2:0x4a5]
---
Predecessors: [0x478]
Successors: []
---
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 REVERT
---
0x4a2: V345 = 0x0
0x4a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, S4, S3, S2, S1, S0]

================================

Block 0x4a6
[0x4a6:0x4b9]
---
Predecessors: [0x478]
Successors: [0x4ba]
---
0x4a6 JUMPDEST
0x4a7 DUP1
0x4a8 PUSH1 0x40
0x4aa MLOAD
0x4ab PUSH1 0x20
0x4ad ADD
0x4ae DUP1
0x4af DUP3
0x4b0 DUP1
0x4b1 MLOAD
0x4b2 SWAP1
0x4b3 PUSH1 0x20
0x4b5 ADD
0x4b6 SWAP1
0x4b7 DUP1
0x4b8 DUP4
0x4b9 DUP4
---
0x4a6: JUMPDEST 
0x4a8: V346 = 0x40
0x4aa: V347 = M[0x40]
0x4ab: V348 = 0x20
0x4ad: V349 = ADD 0x20 V347
0x4b1: V350 = M[S0]
0x4b3: V351 = 0x20
0x4b5: V352 = ADD 0x20 S0
---
Entry stack: [V11, 0x82, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, S0, V349, V349, V352, V350, V350, V349, V352]
Exit stack: [V11, 0x82, S4, S3, S2, S1, S0, S0, V349, V349, V352, V350, V350, V349, V352]

================================

Block 0x4ba
[0x4ba:0x4c2]
---
Predecessors: [0x4a6, 0x4c3]
Successors: [0x4c3, 0x4d9]
---
0x4ba JUMPDEST
0x4bb PUSH1 0x20
0x4bd DUP4
0x4be LT
0x4bf PUSH2 0x4d9
0x4c2 JUMPI
---
0x4ba: JUMPDEST 
0x4bb: V353 = 0x20
0x4be: V354 = LT S2 0x20
0x4bf: V355 = 0x4d9
0x4c2: JUMPI 0x4d9 V354
---
Entry stack: [V11, 0x82, S12, S11, S10, S9, S8, S7, V349, V349, V352, V350, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x82, S12, S11, S10, S9, S8, S7, V349, V349, V352, V350, S2, S1, S0]

================================

Block 0x4c3
[0x4c3:0x4d8]
---
Predecessors: [0x4ba]
Successors: [0x4ba]
---
0x4c3 DUP1
0x4c4 MLOAD
0x4c5 DUP3
0x4c6 MSTORE
0x4c7 PUSH1 0x1f
0x4c9 NOT
0x4ca SWAP1
0x4cb SWAP3
0x4cc ADD
0x4cd SWAP2
0x4ce PUSH1 0x20
0x4d0 SWAP2
0x4d1 DUP3
0x4d2 ADD
0x4d3 SWAP2
0x4d4 ADD
0x4d5 PUSH2 0x4ba
0x4d8 JUMP
---
0x4c4: V356 = M[S0]
0x4c6: M[S1] = V356
0x4c7: V357 = 0x1f
0x4c9: V358 = NOT 0x1f
0x4cc: V359 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4ce: V360 = 0x20
0x4d2: V361 = ADD 0x20 S1
0x4d4: V362 = ADD 0x20 S0
0x4d5: V363 = 0x4ba
0x4d8: JUMP 0x4ba
---
Entry stack: [V11, 0x82, S12, S11, S10, S9, S8, S7, V349, V349, V352, V350, S2, S1, S0]
Stack pops: 3
Stack additions: [V359, V361, V362]
Exit stack: [V11, 0x82, S12, S11, S10, S9, S8, S7, V349, V349, V352, V350, V359, V361, V362]

================================

Block 0x4d9
[0x4d9:0x51c]
---
Predecessors: [0x4ba]
Successors: [0x51d]
---
0x4d9 JUMPDEST
0x4da PUSH1 0x1
0x4dc DUP4
0x4dd PUSH1 0x20
0x4df SUB
0x4e0 PUSH2 0x100
0x4e3 EXP
0x4e4 SUB
0x4e5 DUP1
0x4e6 NOT
0x4e7 DUP3
0x4e8 MLOAD
0x4e9 AND
0x4ea DUP2
0x4eb DUP5
0x4ec MLOAD
0x4ed AND
0x4ee DUP1
0x4ef DUP3
0x4f0 OR
0x4f1 DUP6
0x4f2 MSTORE
0x4f3 POP
0x4f4 POP
0x4f5 POP
0x4f6 POP
0x4f7 POP
0x4f8 POP
0x4f9 SWAP1
0x4fa POP
0x4fb ADD
0x4fc SWAP2
0x4fd POP
0x4fe POP
0x4ff PUSH1 0x40
0x501 MLOAD
0x502 PUSH1 0x20
0x504 DUP2
0x505 DUP4
0x506 SUB
0x507 SUB
0x508 DUP2
0x509 MSTORE
0x50a SWAP1
0x50b PUSH1 0x40
0x50d MSTORE
0x50e PUSH1 0x40
0x510 MLOAD
0x511 DUP1
0x512 DUP3
0x513 DUP1
0x514 MLOAD
0x515 SWAP1
0x516 PUSH1 0x20
0x518 ADD
0x519 SWAP1
0x51a DUP1
0x51b DUP4
0x51c DUP4
---
0x4d9: JUMPDEST 
0x4da: V364 = 0x1
0x4dd: V365 = 0x20
0x4df: V366 = SUB 0x20 S2
0x4e0: V367 = 0x100
0x4e3: V368 = EXP 0x100 V366
0x4e4: V369 = SUB V368 0x1
0x4e6: V370 = NOT V369
0x4e8: V371 = M[S0]
0x4e9: V372 = AND V371 V370
0x4ec: V373 = M[S1]
0x4ed: V374 = AND V373 V369
0x4f0: V375 = OR V372 V374
0x4f2: M[S1] = V375
0x4fb: V376 = ADD V350 V349
0x4ff: V377 = 0x40
0x501: V378 = M[0x40]
0x502: V379 = 0x20
0x506: V380 = SUB V376 V378
0x507: V381 = SUB V380 0x20
0x509: M[V378] = V381
0x50b: V382 = 0x40
0x50d: M[0x40] = V376
0x50e: V383 = 0x40
0x510: V384 = M[0x40]
0x514: V385 = M[V378]
0x516: V386 = 0x20
0x518: V387 = ADD 0x20 V378
---
Entry stack: [V11, 0x82, S12, S11, S10, S9, S8, S7, V349, V349, V352, V350, S2, S1, S0]
Stack pops: 8
Stack additions: [V378, V384, V384, V387, V385, V385, V384, V387]
Exit stack: [V11, 0x82, S12, S11, S10, S9, S8, V378, V384, V384, V387, V385, V385, V384, V387]

================================

Block 0x51d
[0x51d:0x525]
---
Predecessors: [0x4d9, 0x526]
Successors: [0x526, 0x53c]
---
0x51d JUMPDEST
0x51e PUSH1 0x20
0x520 DUP4
0x521 LT
0x522 PUSH2 0x53c
0x525 JUMPI
---
0x51d: JUMPDEST 
0x51e: V388 = 0x20
0x521: V389 = LT S2 0x20
0x522: V390 = 0x53c
0x525: JUMPI 0x53c V389
---
Entry stack: [V11, 0x82, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x82, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x526
[0x526:0x53b]
---
Predecessors: [0x51d]
Successors: [0x51d]
---
0x526 DUP1
0x527 MLOAD
0x528 DUP3
0x529 MSTORE
0x52a PUSH1 0x1f
0x52c NOT
0x52d SWAP1
0x52e SWAP3
0x52f ADD
0x530 SWAP2
0x531 PUSH1 0x20
0x533 SWAP2
0x534 DUP3
0x535 ADD
0x536 SWAP2
0x537 ADD
0x538 PUSH2 0x51d
0x53b JUMP
---
0x527: V391 = M[S0]
0x529: M[S1] = V391
0x52a: V392 = 0x1f
0x52c: V393 = NOT 0x1f
0x52f: V394 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x531: V395 = 0x20
0x535: V396 = ADD 0x20 S1
0x537: V397 = ADD 0x20 S0
0x538: V398 = 0x51d
0x53b: JUMP 0x51d
---
Entry stack: [V11, 0x82, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V394, V396, V397]
Exit stack: [V11, 0x82, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V394, V396, V397]

================================

Block 0x53c
[0x53c:0x56e]
---
Predecessors: [0x51d]
Successors: [0x82, 0x366, 0x478]
---
0x53c JUMPDEST
0x53d MLOAD
0x53e DUP2
0x53f MLOAD
0x540 PUSH1 0x20
0x542 SWAP4
0x543 SWAP1
0x544 SWAP4
0x545 SUB
0x546 PUSH2 0x100
0x549 EXP
0x54a PUSH1 0x0
0x54c NOT
0x54d ADD
0x54e DUP1
0x54f NOT
0x550 SWAP1
0x551 SWAP2
0x552 AND
0x553 SWAP3
0x554 AND
0x555 SWAP2
0x556 SWAP1
0x557 SWAP2
0x558 OR
0x559 SWAP1
0x55a MSTORE
0x55b PUSH1 0x40
0x55d MLOAD
0x55e SWAP3
0x55f ADD
0x560 DUP3
0x561 SWAP1
0x562 SUB
0x563 SWAP1
0x564 SWAP2
0x565 SHA3
0x566 PUSH1 0x4
0x568 SSTORE
0x569 POP
0x56a POP
0x56b POP
0x56c POP
0x56d POP
0x56e JUMP
---
0x53c: JUMPDEST 
0x53d: V399 = M[S0]
0x53f: V400 = M[S1]
0x540: V401 = 0x20
0x545: V402 = SUB 0x20 S2
0x546: V403 = 0x100
0x549: V404 = EXP 0x100 V402
0x54a: V405 = 0x0
0x54c: V406 = NOT 0x0
0x54d: V407 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V404
0x54f: V408 = NOT V407
0x552: V409 = AND V399 V408
0x554: V410 = AND V400 V407
0x558: V411 = OR V410 V409
0x55a: M[S1] = V411
0x55b: V412 = 0x40
0x55d: V413 = M[0x40]
0x55f: V414 = ADD S5 S3
0x562: V415 = SUB V414 V413
0x565: V416 = SHA3 V413 V415
0x566: V417 = 0x4
0x568: S[0x4] = V416
0x56e: JUMP S10
---
Entry stack: [V11, 0x82, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: []
Exit stack: [V11, 0x82, S12, S11]

================================

Block 0x56f
[0x56f:0x574]
---
Predecessors: [0x233]
Successors: [0x23c]
---
0x56f JUMPDEST
0x570 PUSH1 0x0
0x572 SLOAD
0x573 DUP2
0x574 JUMP
---
0x56f: JUMPDEST 
0x570: V418 = 0x0
0x572: V419 = S[0x0]
0x574: JUMP 0x23c
---
Entry stack: [V11, 0x23c]
Stack pops: 1
Stack additions: [S0, V419]
Exit stack: [V11, 0x23c, V419]

================================

Block 0x575
[0x575:0x594]
---
Predecessors: [0x24e]
Successors: [0x595, 0x599]
---
0x575 JUMPDEST
0x576 PUSH1 0x3
0x578 SLOAD
0x579 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58e AND
0x58f CALLER
0x590 EQ
0x591 PUSH2 0x599
0x594 JUMPI
---
0x575: JUMPDEST 
0x576: V420 = 0x3
0x578: V421 = S[0x3]
0x579: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x58e: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x58f: V424 = CALLER
0x590: V425 = EQ V424 V423
0x591: V426 = 0x599
0x594: JUMPI 0x599 V425
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x595
[0x595:0x598]
---
Predecessors: [0x575]
Successors: []
---
0x595 PUSH1 0x0
0x597 DUP1
0x598 REVERT
---
0x595: V427 = 0x0
0x598: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x599
[0x599:0x5bc]
---
Predecessors: [0x575]
Successors: [0x5bd, 0x5c6]
---
0x599 JUMPDEST
0x59a PUSH1 0x40
0x59c MLOAD
0x59d CALLER
0x59e SWAP1
0x59f ADDRESS
0x5a0 BALANCE
0x5a1 DUP1
0x5a2 ISZERO
0x5a3 PUSH2 0x8fc
0x5a6 MUL
0x5a7 SWAP2
0x5a8 PUSH1 0x0
0x5aa DUP2
0x5ab DUP2
0x5ac DUP2
0x5ad DUP6
0x5ae DUP9
0x5af DUP9
0x5b0 CALL
0x5b1 SWAP4
0x5b2 POP
0x5b3 POP
0x5b4 POP
0x5b5 POP
0x5b6 ISZERO
0x5b7 DUP1
0x5b8 ISZERO
0x5b9 PUSH2 0x5c6
0x5bc JUMPI
---
0x599: JUMPDEST 
0x59a: V428 = 0x40
0x59c: V429 = M[0x40]
0x59d: V430 = CALLER
0x59f: V431 = ADDRESS
0x5a0: V432 = BALANCE V431
0x5a2: V433 = ISZERO V432
0x5a3: V434 = 0x8fc
0x5a6: V435 = MUL 0x8fc V433
0x5a8: V436 = 0x0
0x5b0: V437 = CALL V435 V430 V432 V429 0x0 V429 0x0
0x5b6: V438 = ISZERO V437
0x5b8: V439 = ISZERO V438
0x5b9: V440 = 0x5c6
0x5bc: JUMPI 0x5c6 V439
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: [V438]
Exit stack: [V11, 0x82, V438]

================================

Block 0x5bd
[0x5bd:0x5c5]
---
Predecessors: [0x599]
Successors: []
---
0x5bd RETURNDATASIZE
0x5be PUSH1 0x0
0x5c0 DUP1
0x5c1 RETURNDATACOPY
0x5c2 RETURNDATASIZE
0x5c3 PUSH1 0x0
0x5c5 REVERT
---
0x5bd: V441 = RETURNDATASIZE
0x5be: V442 = 0x0
0x5c1: RETURNDATACOPY 0x0 0x0 V441
0x5c2: V443 = RETURNDATASIZE
0x5c3: V444 = 0x0
0x5c5: REVERT 0x0 V443
---
Entry stack: [V11, 0x82, V438]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V438]

================================

Block 0x5c6
[0x5c6:0x5c8]
---
Predecessors: [0x599]
Successors: [0x82]
---
0x5c6 JUMPDEST
0x5c7 POP
0x5c8 JUMP
---
0x5c6: JUMPDEST 
0x5c8: JUMP 0x82
---
Entry stack: [V11, 0x82, V438]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c9
[0x5c9:0x5f9]
---
Predecessors: [0x353, 0x465]
Successors: [0x5fa, 0x60a]
---
0x5c9 JUMPDEST
0x5ca DUP3
0x5cb DUP1
0x5cc SLOAD
0x5cd PUSH1 0x1
0x5cf DUP2
0x5d0 PUSH1 0x1
0x5d2 AND
0x5d3 ISZERO
0x5d4 PUSH2 0x100
0x5d7 MUL
0x5d8 SUB
0x5d9 AND
0x5da PUSH1 0x2
0x5dc SWAP1
0x5dd DIV
0x5de SWAP1
0x5df PUSH1 0x0
0x5e1 MSTORE
0x5e2 PUSH1 0x20
0x5e4 PUSH1 0x0
0x5e6 SHA3
0x5e7 SWAP1
0x5e8 PUSH1 0x1f
0x5ea ADD
0x5eb PUSH1 0x20
0x5ed SWAP1
0x5ee DIV
0x5ef DUP2
0x5f0 ADD
0x5f1 SWAP3
0x5f2 DUP3
0x5f3 PUSH1 0x1f
0x5f5 LT
0x5f6 PUSH2 0x60a
0x5f9 JUMPI
---
0x5c9: JUMPDEST 
0x5cc: V445 = S[0x2]
0x5cd: V446 = 0x1
0x5d0: V447 = 0x1
0x5d2: V448 = AND 0x1 V445
0x5d3: V449 = ISZERO V448
0x5d4: V450 = 0x100
0x5d7: V451 = MUL 0x100 V449
0x5d8: V452 = SUB V451 0x1
0x5d9: V453 = AND V452 V445
0x5da: V454 = 0x2
0x5dd: V455 = DIV V453 0x2
0x5df: V456 = 0x0
0x5e1: M[0x0] = 0x2
0x5e2: V457 = 0x20
0x5e4: V458 = 0x0
0x5e6: V459 = SHA3 0x0 0x20
0x5e8: V460 = 0x1f
0x5ea: V461 = ADD 0x1f V455
0x5eb: V462 = 0x20
0x5ee: V463 = DIV V461 0x20
0x5f0: V464 = ADD V459 V463
0x5f3: V465 = 0x1f
0x5f5: V466 = LT 0x1f S0
0x5f6: V467 = 0x60a
0x5f9: JUMPI 0x60a V466
---
Entry stack: [V11, 0x82, S5, S4, {0x366, 0x478}, 0x2, S1, S0]
Stack pops: 3
Stack additions: [S2, V464, S0, V459, S1]
Exit stack: [V11, 0x82, S5, S4, {0x366, 0x478}, 0x2, V464, S0, V459, S1]

================================

Block 0x5fa
[0x5fa:0x609]
---
Predecessors: [0x5c9]
Successors: [0x637]
---
0x5fa DUP1
0x5fb MLOAD
0x5fc PUSH1 0xff
0x5fe NOT
0x5ff AND
0x600 DUP4
0x601 DUP1
0x602 ADD
0x603 OR
0x604 DUP6
0x605 SSTORE
0x606 PUSH2 0x637
0x609 JUMP
---
0x5fb: V468 = M[S0]
0x5fc: V469 = 0xff
0x5fe: V470 = NOT 0xff
0x5ff: V471 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V468
0x602: V472 = ADD S2 S2
0x603: V473 = OR V472 V471
0x605: S[0x2] = V473
0x606: V474 = 0x637
0x609: JUMP 0x637
---
Entry stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, V464, S2, V459, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, V464, S2, V459, S0]

================================

Block 0x60a
[0x60a:0x618]
---
Predecessors: [0x5c9]
Successors: [0x619, 0x637]
---
0x60a JUMPDEST
0x60b DUP3
0x60c DUP1
0x60d ADD
0x60e PUSH1 0x1
0x610 ADD
0x611 DUP6
0x612 SSTORE
0x613 DUP3
0x614 ISZERO
0x615 PUSH2 0x637
0x618 JUMPI
---
0x60a: JUMPDEST 
0x60d: V475 = ADD S2 S2
0x60e: V476 = 0x1
0x610: V477 = ADD 0x1 V475
0x612: S[0x2] = V477
0x614: V478 = ISZERO S2
0x615: V479 = 0x637
0x618: JUMPI 0x637 V478
---
Entry stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, V464, S2, V459, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, V464, S2, V459, S0]

================================

Block 0x619
[0x619:0x61b]
---
Predecessors: [0x60a]
Successors: [0x61c]
---
0x619 SWAP2
0x61a DUP3
0x61b ADD
---
0x61b: V480 = ADD S0 S2
---
Entry stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, V464, S2, V459, S0]
Stack pops: 3
Stack additions: [S0, S1, V480]
Exit stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, V464, S0, V459, V480]

================================

Block 0x61c
[0x61c:0x624]
---
Predecessors: [0x619, 0x625]
Successors: [0x625, 0x637]
---
0x61c JUMPDEST
0x61d DUP3
0x61e DUP2
0x61f GT
0x620 ISZERO
0x621 PUSH2 0x637
0x624 JUMPI
---
0x61c: JUMPDEST 
0x61f: V481 = GT V480 S2
0x620: V482 = ISZERO V481
0x621: V483 = 0x637
0x624: JUMPI 0x637 V482
---
Entry stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, V464, S2, S1, V480]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, V464, S2, S1, V480]

================================

Block 0x625
[0x625:0x636]
---
Predecessors: [0x61c]
Successors: [0x61c]
---
0x625 DUP3
0x626 MLOAD
0x627 DUP3
0x628 SSTORE
0x629 SWAP2
0x62a PUSH1 0x20
0x62c ADD
0x62d SWAP2
0x62e SWAP1
0x62f PUSH1 0x1
0x631 ADD
0x632 SWAP1
0x633 PUSH2 0x61c
0x636 JUMP
---
0x626: V484 = M[S2]
0x628: S[S1] = V484
0x62a: V485 = 0x20
0x62c: V486 = ADD 0x20 S2
0x62f: V487 = 0x1
0x631: V488 = ADD 0x1 S1
0x633: V489 = 0x61c
0x636: JUMP 0x61c
---
Entry stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, V464, S2, S1, V480]
Stack pops: 3
Stack additions: [V486, V488, S0]
Exit stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, V464, V486, V488, V480]

================================

Block 0x637
[0x637:0x642]
---
Predecessors: [0x5fa, 0x60a, 0x61c]
Successors: [0x647]
---
0x637 JUMPDEST
0x638 POP
0x639 PUSH2 0x643
0x63c SWAP3
0x63d SWAP2
0x63e POP
0x63f PUSH2 0x647
0x642 JUMP
---
0x637: JUMPDEST 
0x639: V490 = 0x643
0x63f: V491 = 0x647
0x642: JUMP 0x647
---
Entry stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, V464, S2, S1, S0]
Stack pops: 4
Stack additions: [0x643, S3, S1]
Exit stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, 0x643, V464, S1]

================================

Block 0x643
[0x643:0x646]
---
Predecessors: [0x64d, 0x661]
Successors: [0x82, 0x366, 0x478, 0x661]
---
0x643 JUMPDEST
0x644 POP
0x645 SWAP1
0x646 JUMP
---
0x643: JUMPDEST 
0x646: JUMP {0x82, 0x366, 0x478, 0x661}
---
Entry stack: [V11, 0x82, S7, S6, {0x82, 0x366, 0x478}, S4, S3, {0x82, 0x366, 0x478, 0x661}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x82, S7, S6, {0x82, 0x366, 0x478}, S4, S3, S1]

================================

Block 0x647
[0x647:0x64c]
---
Predecessors: [0x637]
Successors: [0x64d]
---
0x647 JUMPDEST
0x648 PUSH2 0x661
0x64b SWAP2
0x64c SWAP1
---
0x647: JUMPDEST 
0x648: V492 = 0x661
---
Entry stack: [V11, 0x82, S6, S5, {0x366, 0x478}, 0x2, 0x643, V464, S0]
Stack pops: 2
Stack additions: [0x661, S1, S0]
Exit stack: [V11, 0x82, S6, S5, {0x366, 0x478}, 0x2, 0x643, 0x661, V464, S0]

================================

Block 0x64d
[0x64d:0x655]
---
Predecessors: [0x647, 0x656]
Successors: [0x643, 0x656]
---
0x64d JUMPDEST
0x64e DUP1
0x64f DUP3
0x650 GT
0x651 ISZERO
0x652 PUSH2 0x643
0x655 JUMPI
---
0x64d: JUMPDEST 
0x650: V493 = GT V464 S0
0x651: V494 = ISZERO V493
0x652: V495 = 0x643
0x655: JUMPI 0x643 V494
---
Entry stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, 0x643, 0x661, V464, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, 0x643, 0x661, V464, S0]

================================

Block 0x656
[0x656:0x660]
---
Predecessors: [0x64d]
Successors: [0x64d]
---
0x656 PUSH1 0x0
0x658 DUP2
0x659 SSTORE
0x65a PUSH1 0x1
0x65c ADD
0x65d PUSH2 0x64d
0x660 JUMP
---
0x656: V496 = 0x0
0x659: S[S0] = 0x0
0x65a: V497 = 0x1
0x65c: V498 = ADD 0x1 S0
0x65d: V499 = 0x64d
0x660: JUMP 0x64d
---
Entry stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, 0x643, 0x661, V464, S0]
Stack pops: 1
Stack additions: [V498]
Exit stack: [V11, 0x82, S7, S6, {0x366, 0x478}, 0x2, 0x643, 0x661, V464, V498]

================================

Block 0x661
[0x661:0x663]
---
Predecessors: [0x643]
Successors: [0x643]
---
0x661 JUMPDEST
0x662 SWAP1
0x663 JUMP
---
0x661: JUMPDEST 
0x663: JUMP S1
---
Entry stack: [V11, 0x82, S5, S4, {0x82, 0x366, 0x478}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x82, S5, S4, {0x82, 0x366, 0x478}, S2, S0]

================================

Block 0x664
[0x664:0x68f]
---
Predecessors: []
Successors: []
---
0x664 STOP
0x665 LOG1
0x666 PUSH6 0x627a7a723058
0x66d SHA3
0x66e PUSH8 0x979a4aa6c0e92a51
0x677 BALANCE
0x678 MISSING 0xae
0x679 MISSING 0xef
0x67a PUSH17 0xd46f75a4a2b91a000884adfb46f38e052a
0x68c CREATE2
0x68d SUB
0x68e STOP
0x68f MISSING 0x29
---
0x664: STOP 
0x665: LOG S0 S1 S2
0x666: V500 = 0x627a7a723058
0x66d: V501 = SHA3 0x627a7a723058 S3
0x66e: V502 = 0x979a4aa6c0e92a51
0x677: V503 = BALANCE 0x979a4aa6c0e92a51
0x678: MISSING 0xae
0x679: MISSING 0xef
0x67a: V504 = 0xd46f75a4a2b91a000884adfb46f38e052a
0x68c: V505 = CREATE2 0xd46f75a4a2b91a000884adfb46f38e052a S0 S1 S2
0x68d: V506 = SUB V505 S3
0x68e: STOP 
0x68f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V503, V501, V506]
Exit stack: []

================================

Function 0:
Public function signature: 0x3853682c
Entry block: 0x84
Exit block: 0x320
Body: 0x82, 0x84, 0x256, 0x25e, 0x262, 0x299, 0x2a2, 0x2b8, 0x2f1, 0x2f7, 0x2fd, 0x320, 0x329, 0x32b

Function 1:
Public function signature: 0x3e3ee859
Entry block: 0x97
Exit block: 0x82
Body: 0x82, 0x97, 0x32f, 0x34f, 0x353, 0x366, 0x478, 0x4a2, 0x4a6, 0x4ba, 0x4c3, 0x4d9, 0x51d, 0x526, 0x53c

Function 2:
Public function signature: 0x3fad9ae0
Entry block: 0xe5
Exit block: 0x161
Body: 0xe5, 0xed, 0xf1, 0xfa, 0x11c, 0x125, 0x134, 0x148, 0x161, 0x36d, 0x3aa, 0x3b2, 0x3c5, 0x3d3, 0x3e7, 0x3f0

Function 3:
Public function signature: 0x59988dce
Entry block: 0x16f
Exit block: 0x82
Body: 0x82, 0x16f, 0x177, 0x17b, 0x3f8, 0x418, 0x41c

Function 4:
Public function signature: 0xb96d64fb
Entry block: 0x19d
Exit block: 0x82
Body: 0x82, 0x19d, 0x366, 0x458, 0x461, 0x465, 0x478, 0x4a2, 0x4a6, 0x4ba, 0x4c3, 0x4d9, 0x51d, 0x526, 0x53c

Function 5:
Public function signature: 0xe2ba5573
Entry block: 0x227
Exit block: 0x23c
Body: 0x227, 0x22f, 0x233, 0x23c, 0x56f

Function 6:
Public function signature: 0xf50ab247
Entry block: 0x24e
Exit block: 0x82
Body: 0x82, 0x24e, 0x575, 0x595, 0x599, 0x5bd, 0x5c6

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

Function 8:
Private function
Entry block: 0x5c9
Exit block: 0x643
Body: 0x5c9, 0x5fa, 0x60a, 0x619, 0x61c, 0x625, 0x637, 0x643, 0x647, 0x64d, 0x656, 0x661

