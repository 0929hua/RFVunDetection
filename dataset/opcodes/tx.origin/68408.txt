Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x9d]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x144fa6d7
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x9d
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x144fa6d7
0x3b: V13 = EQ V11 0x144fa6d7
0x3c: V14 = 0x9d
0x3f: JUMPI 0x9d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xbe]
---
0x40 DUP1
0x41 PUSH4 0x6af1fdf7
0x46 EQ
0x47 PUSH2 0xbe
0x4a JUMPI
---
0x41: V15 = 0x6af1fdf7
0x46: V16 = EQ 0x6af1fdf7 V11
0x47: V17 = 0xbe
0x4a: JUMPI 0xbe V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xee]
---
0x4b DUP1
0x4c PUSH4 0x85aa92a7
0x51 EQ
0x52 PUSH2 0xee
0x55 JUMPI
---
0x4c: V18 = 0x85aa92a7
0x51: V19 = EQ 0x85aa92a7 V11
0x52: V20 = 0xee
0x55: JUMPI 0xee V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x11d]
---
0x56 DUP1
0x57 PUSH4 0x8d859f3e
0x5c EQ
0x5d PUSH2 0x11d
0x60 JUMPI
---
0x57: V21 = 0x8d859f3e
0x5c: V22 = EQ 0x8d859f3e V11
0x5d: V23 = 0x11d
0x60: JUMPI 0x11d V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x14b]
---
0x61 DUP1
0x62 PUSH4 0xa69df4b5
0x67 EQ
0x68 PUSH2 0x14b
0x6b JUMPI
---
0x62: V24 = 0xa69df4b5
0x67: V25 = EQ 0xa69df4b5 V11
0x68: V26 = 0x14b
0x6b: JUMPI 0x14b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x15e]
---
0x6c DUP1
0x6d PUSH4 0xcf309012
0x72 EQ
0x73 PUSH2 0x15e
0x76 JUMPI
---
0x6d: V27 = 0xcf309012
0x72: V28 = EQ 0xcf309012 V11
0x73: V29 = 0x15e
0x76: JUMPI 0x15e V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x185]
---
0x77 DUP1
0x78 PUSH4 0xf53d0a8e
0x7d EQ
0x7e PUSH2 0x185
0x81 JUMPI
---
0x78: V30 = 0xf53d0a8e
0x7d: V31 = EQ 0xf53d0a8e V11
0x7e: V32 = 0x185
0x81: JUMPI 0x185 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x198]
---
0x82 DUP1
0x83 PUSH4 0xf83d08ba
0x88 EQ
0x89 PUSH2 0x198
0x8c JUMPI
---
0x83: V33 = 0xf83d08ba
0x88: V34 = EQ 0xf83d08ba V11
0x89: V35 = 0x198
0x8c: JUMPI 0x198 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1ab]
---
0x8d DUP1
0x8e PUSH4 0xfc0c546a
0x93 EQ
0x94 PUSH2 0x1ab
0x97 JUMPI
---
0x8e: V36 = 0xfc0c546a
0x93: V37 = EQ 0xfc0c546a V11
0x94: V38 = 0x1ab
0x97: JUMPI 0x1ab V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9c]
---
Predecessors: [0x0, 0x8d]
Successors: []
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x98: JUMPDEST 
0x99: V39 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa3]
---
Predecessors: [0xd]
Successors: [0xa4, 0xa8]
---
0x9d JUMPDEST
0x9e CALLVALUE
0x9f ISZERO
0xa0 PUSH2 0xa8
0xa3 JUMPI
---
0x9d: JUMPDEST 
0x9e: V40 = CALLVALUE
0x9f: V41 = ISZERO V40
0xa0: V42 = 0xa8
0xa3: JUMPI 0xa8 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xa7]
---
Predecessors: [0x9d]
Successors: []
---
0xa4 PUSH1 0x0
0xa6 DUP1
0xa7 REVERT
---
0xa4: V43 = 0x0
0xa7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xbb]
---
Predecessors: [0x9d]
Successors: [0x1be]
---
0xa8 JUMPDEST
0xa9 PUSH2 0xbc
0xac PUSH1 0x1
0xae PUSH1 0xa0
0xb0 PUSH1 0x2
0xb2 EXP
0xb3 SUB
0xb4 PUSH1 0x4
0xb6 CALLDATALOAD
0xb7 AND
0xb8 PUSH2 0x1be
0xbb JUMP
---
0xa8: JUMPDEST 
0xa9: V44 = 0xbc
0xac: V45 = 0x1
0xae: V46 = 0xa0
0xb0: V47 = 0x2
0xb2: V48 = EXP 0x2 0xa0
0xb3: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4: V50 = 0x4
0xb6: V51 = CALLDATALOAD 0x4
0xb7: V52 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V53 = 0x1be
0xbb: JUMP 0x1be
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbc, V52]
Exit stack: [V11, 0xbc, V52]

================================

Block 0xbc
[0xbc:0xbd]
---
Predecessors: [0x1d9, 0x375, 0x3ad, 0x418]
Successors: []
---
0xbc JUMPDEST
0xbd STOP
---
0xbc: JUMPDEST 
0xbd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc4]
---
Predecessors: [0x40]
Successors: [0xc5, 0xc9]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 ISZERO
0xc1 PUSH2 0xc9
0xc4 JUMPI
---
0xbe: JUMPDEST 
0xbf: V54 = CALLVALUE
0xc0: V55 = ISZERO V54
0xc1: V56 = 0xc9
0xc4: JUMPI 0xc9 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xc8]
---
Predecessors: [0xbe]
Successors: []
---
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 REVERT
---
0xc5: V57 = 0x0
0xc8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc9
[0xc9:0xed]
---
Predecessors: [0xbe]
Successors: [0x208]
---
0xc9 JUMPDEST
0xca PUSH2 0xbc
0xcd PUSH1 0x1
0xcf PUSH1 0xa0
0xd1 PUSH1 0x2
0xd3 EXP
0xd4 SUB
0xd5 PUSH1 0x4
0xd7 CALLDATALOAD
0xd8 AND
0xd9 PUSH12 0xffffffffffffffffffffffff
0xe6 PUSH1 0x24
0xe8 CALLDATALOAD
0xe9 AND
0xea PUSH2 0x208
0xed JUMP
---
0xc9: JUMPDEST 
0xca: V58 = 0xbc
0xcd: V59 = 0x1
0xcf: V60 = 0xa0
0xd1: V61 = 0x2
0xd3: V62 = EXP 0x2 0xa0
0xd4: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd5: V64 = 0x4
0xd7: V65 = CALLDATALOAD 0x4
0xd8: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V67 = 0xffffffffffffffffffffffff
0xe6: V68 = 0x24
0xe8: V69 = CALLDATALOAD 0x24
0xe9: V70 = AND V69 0xffffffffffffffffffffffff
0xea: V71 = 0x208
0xed: JUMP 0x208
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbc, V66, V70]
Exit stack: [V11, 0xbc, V66, V70]

================================

Block 0xee
[0xee:0xf4]
---
Predecessors: [0x4b]
Successors: [0xf5, 0xf9]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xee: JUMPDEST 
0xef: V72 = CALLVALUE
0xf0: V73 = ISZERO V72
0xf1: V74 = 0xf9
0xf4: JUMPI 0xf9 V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xee]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V75 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0xee]
Successors: [0x379]
---
0xf9 JUMPDEST
0xfa PUSH2 0x101
0xfd PUSH2 0x379
0x100 JUMP
---
0xf9: JUMPDEST 
0xfa: V76 = 0x101
0xfd: V77 = 0x379
0x100: JUMP 0x379
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V11, 0x101]

================================

Block 0x101
[0x101:0x11c]
---
Predecessors: [0x379, 0x3ee, 0x44f]
Successors: []
---
0x101 JUMPDEST
0x102 PUSH1 0x40
0x104 MLOAD
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d SWAP1
0x10e SWAP2
0x10f AND
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x20
0x114 ADD
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP1
0x119 SWAP2
0x11a SUB
0x11b SWAP1
0x11c RETURN
---
0x101: JUMPDEST 
0x102: V78 = 0x40
0x104: V79 = M[0x40]
0x105: V80 = 0x1
0x107: V81 = 0xa0
0x109: V82 = 0x2
0x10b: V83 = EXP 0x2 0xa0
0x10c: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V85 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x111: M[V79] = V85
0x112: V86 = 0x20
0x114: V87 = ADD 0x20 V79
0x115: V88 = 0x40
0x117: V89 = M[0x40]
0x11a: V90 = SUB V87 V89
0x11c: RETURN V89 V90
---
Entry stack: [V11, 0x101, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x101]

================================

Block 0x11d
[0x11d:0x123]
---
Predecessors: [0x56]
Successors: [0x124, 0x128]
---
0x11d JUMPDEST
0x11e CALLVALUE
0x11f ISZERO
0x120 PUSH2 0x128
0x123 JUMPI
---
0x11d: JUMPDEST 
0x11e: V91 = CALLVALUE
0x11f: V92 = ISZERO V91
0x120: V93 = 0x128
0x123: JUMPI 0x128 V92
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0x11d]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V94 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x128
[0x128:0x12f]
---
Predecessors: [0x11d]
Successors: [0x388]
---
0x128 JUMPDEST
0x129 PUSH2 0x130
0x12c PUSH2 0x388
0x12f JUMP
---
0x128: JUMPDEST 
0x129: V95 = 0x130
0x12c: V96 = 0x388
0x12f: JUMP 0x388
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x130]
Exit stack: [V11, 0x130]

================================

Block 0x130
[0x130:0x14a]
---
Predecessors: [0x388]
Successors: []
---
0x130 JUMPDEST
0x131 PUSH1 0x40
0x133 MLOAD
0x134 PUSH6 0xffffffffffff
0x13b SWAP1
0x13c SWAP2
0x13d AND
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 PUSH1 0x40
0x145 MLOAD
0x146 DUP1
0x147 SWAP2
0x148 SUB
0x149 SWAP1
0x14a RETURN
---
0x130: JUMPDEST 
0x131: V97 = 0x40
0x133: V98 = M[0x40]
0x134: V99 = 0xffffffffffff
0x13d: V100 = AND 0x47d99eeff000 0xffffffffffff
0x13f: M[V98] = 0x47d99eeff000
0x140: V101 = 0x20
0x142: V102 = ADD 0x20 V98
0x143: V103 = 0x40
0x145: V104 = M[0x40]
0x148: V105 = SUB V102 V104
0x14a: RETURN V104 V105
---
Entry stack: [V11, 0x130, 0x47d99eeff000]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x130]

================================

Block 0x14b
[0x14b:0x151]
---
Predecessors: [0x61]
Successors: [0x152, 0x156]
---
0x14b JUMPDEST
0x14c CALLVALUE
0x14d ISZERO
0x14e PUSH2 0x156
0x151 JUMPI
---
0x14b: JUMPDEST 
0x14c: V106 = CALLVALUE
0x14d: V107 = ISZERO V106
0x14e: V108 = 0x156
0x151: JUMPI 0x156 V107
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x152
[0x152:0x155]
---
Predecessors: [0x14b]
Successors: []
---
0x152 PUSH1 0x0
0x154 DUP1
0x155 REVERT
---
0x152: V109 = 0x0
0x155: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x156
[0x156:0x15d]
---
Predecessors: [0x14b]
Successors: [0x392]
---
0x156 JUMPDEST
0x157 PUSH2 0xbc
0x15a PUSH2 0x392
0x15d JUMP
---
0x156: JUMPDEST 
0x157: V110 = 0xbc
0x15a: V111 = 0x392
0x15d: JUMP 0x392
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbc]
Exit stack: [V11, 0xbc]

================================

Block 0x15e
[0x15e:0x164]
---
Predecessors: [0x6c]
Successors: [0x165, 0x169]
---
0x15e JUMPDEST
0x15f CALLVALUE
0x160 ISZERO
0x161 PUSH2 0x169
0x164 JUMPI
---
0x15e: JUMPDEST 
0x15f: V112 = CALLVALUE
0x160: V113 = ISZERO V112
0x161: V114 = 0x169
0x164: JUMPI 0x169 V113
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x165
[0x165:0x168]
---
Predecessors: [0x15e]
Successors: []
---
0x165 PUSH1 0x0
0x167 DUP1
0x168 REVERT
---
0x165: V115 = 0x0
0x168: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x169
[0x169:0x170]
---
Predecessors: [0x15e]
Successors: [0x3cd]
---
0x169 JUMPDEST
0x16a PUSH2 0x171
0x16d PUSH2 0x3cd
0x170 JUMP
---
0x169: JUMPDEST 
0x16a: V116 = 0x171
0x16d: V117 = 0x3cd
0x170: JUMP 0x3cd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x171]
Exit stack: [V11, 0x171]

================================

Block 0x171
[0x171:0x184]
---
Predecessors: [0x3cd]
Successors: []
---
0x171 JUMPDEST
0x172 PUSH1 0x40
0x174 MLOAD
0x175 SWAP1
0x176 ISZERO
0x177 ISZERO
0x178 DUP2
0x179 MSTORE
0x17a PUSH1 0x20
0x17c ADD
0x17d PUSH1 0x40
0x17f MLOAD
0x180 DUP1
0x181 SWAP2
0x182 SUB
0x183 SWAP1
0x184 RETURN
---
0x171: JUMPDEST 
0x172: V118 = 0x40
0x174: V119 = M[0x40]
0x176: V120 = ISZERO V316
0x177: V121 = ISZERO V120
0x179: M[V119] = V121
0x17a: V122 = 0x20
0x17c: V123 = ADD 0x20 V119
0x17d: V124 = 0x40
0x17f: V125 = M[0x40]
0x182: V126 = SUB V123 V125
0x184: RETURN V125 V126
---
Entry stack: [V11, 0x171, V316]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x171]

================================

Block 0x185
[0x185:0x18b]
---
Predecessors: [0x77]
Successors: [0x18c, 0x190]
---
0x185 JUMPDEST
0x186 CALLVALUE
0x187 ISZERO
0x188 PUSH2 0x190
0x18b JUMPI
---
0x185: JUMPDEST 
0x186: V127 = CALLVALUE
0x187: V128 = ISZERO V127
0x188: V129 = 0x190
0x18b: JUMPI 0x190 V128
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18c
[0x18c:0x18f]
---
Predecessors: [0x185]
Successors: []
---
0x18c PUSH1 0x0
0x18e DUP1
0x18f REVERT
---
0x18c: V130 = 0x0
0x18f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x190
[0x190:0x197]
---
Predecessors: [0x185]
Successors: [0x3ee]
---
0x190 JUMPDEST
0x191 PUSH2 0x101
0x194 PUSH2 0x3ee
0x197 JUMP
---
0x190: JUMPDEST 
0x191: V131 = 0x101
0x194: V132 = 0x3ee
0x197: JUMP 0x3ee
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V11, 0x101]

================================

Block 0x198
[0x198:0x19e]
---
Predecessors: [0x82]
Successors: [0x19f, 0x1a3]
---
0x198 JUMPDEST
0x199 CALLVALUE
0x19a ISZERO
0x19b PUSH2 0x1a3
0x19e JUMPI
---
0x198: JUMPDEST 
0x199: V133 = CALLVALUE
0x19a: V134 = ISZERO V133
0x19b: V135 = 0x1a3
0x19e: JUMPI 0x1a3 V134
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19f
[0x19f:0x1a2]
---
Predecessors: [0x198]
Successors: []
---
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 REVERT
---
0x19f: V136 = 0x0
0x1a2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a3
[0x1a3:0x1aa]
---
Predecessors: [0x198]
Successors: [0x3fd]
---
0x1a3 JUMPDEST
0x1a4 PUSH2 0xbc
0x1a7 PUSH2 0x3fd
0x1aa JUMP
---
0x1a3: JUMPDEST 
0x1a4: V137 = 0xbc
0x1a7: V138 = 0x3fd
0x1aa: JUMP 0x3fd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbc]
Exit stack: [V11, 0xbc]

================================

Block 0x1ab
[0x1ab:0x1b1]
---
Predecessors: [0x8d]
Successors: [0x1b2, 0x1b6]
---
0x1ab JUMPDEST
0x1ac CALLVALUE
0x1ad ISZERO
0x1ae PUSH2 0x1b6
0x1b1 JUMPI
---
0x1ab: JUMPDEST 
0x1ac: V139 = CALLVALUE
0x1ad: V140 = ISZERO V139
0x1ae: V141 = 0x1b6
0x1b1: JUMPI 0x1b6 V140
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x1ab]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V142 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b6
[0x1b6:0x1bd]
---
Predecessors: [0x1ab]
Successors: [0x44f]
---
0x1b6 JUMPDEST
0x1b7 PUSH2 0x101
0x1ba PUSH2 0x44f
0x1bd JUMP
---
0x1b6: JUMPDEST 
0x1b7: V143 = 0x101
0x1ba: V144 = 0x44f
0x1bd: JUMP 0x44f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V11, 0x101]

================================

Block 0x1be
[0x1be:0x1d4]
---
Predecessors: [0xa8]
Successors: [0x1d5, 0x1d9]
---
0x1be JUMPDEST
0x1bf PUSH1 0x0
0x1c1 SLOAD
0x1c2 ORIGIN
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb SWAP1
0x1cc DUP2
0x1cd AND
0x1ce SWAP2
0x1cf AND
0x1d0 EQ
0x1d1 PUSH2 0x1d9
0x1d4 JUMPI
---
0x1be: JUMPDEST 
0x1bf: V145 = 0x0
0x1c1: V146 = S[0x0]
0x1c2: V147 = ORIGIN
0x1c3: V148 = 0x1
0x1c5: V149 = 0xa0
0x1c7: V150 = 0x2
0x1c9: V151 = EXP 0x2 0xa0
0x1ca: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cd: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x1cf: V154 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V155 = EQ V154 V153
0x1d1: V156 = 0x1d9
0x1d4: JUMPI 0x1d9 V155
---
Entry stack: [V11, 0xbc, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V52]

================================

Block 0x1d5
[0x1d5:0x1d8]
---
Predecessors: [0x1be]
Successors: []
---
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 REVERT
---
0x1d5: V157 = 0x0
0x1d8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V52]

================================

Block 0x1d9
[0x1d9:0x207]
---
Predecessors: [0x1be]
Successors: [0xbc]
---
0x1d9 JUMPDEST
0x1da PUSH1 0x1
0x1dc DUP1
0x1dd SLOAD
0x1de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f3 NOT
0x1f4 AND
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd SWAP3
0x1fe SWAP1
0x1ff SWAP3
0x200 AND
0x201 SWAP2
0x202 SWAP1
0x203 SWAP2
0x204 OR
0x205 SWAP1
0x206 SSTORE
0x207 JUMP
---
0x1d9: JUMPDEST 
0x1da: V158 = 0x1
0x1dd: V159 = S[0x1]
0x1de: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V161 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V162 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V159
0x1f5: V163 = 0x1
0x1f7: V164 = 0xa0
0x1f9: V165 = 0x2
0x1fb: V166 = EXP 0x2 0xa0
0x1fc: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x200: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x204: V169 = OR V168 V162
0x206: S[0x1] = V169
0x207: JUMP 0xbc
---
Entry stack: [V11, 0xbc, V52]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x208
[0x208:0x21e]
---
Predecessors: [0xc9]
Successors: [0x21f, 0x223]
---
0x208 JUMPDEST
0x209 PUSH1 0x0
0x20b SLOAD
0x20c ORIGIN
0x20d PUSH1 0x1
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SUB
0x215 SWAP1
0x216 DUP2
0x217 AND
0x218 SWAP2
0x219 AND
0x21a EQ
0x21b PUSH2 0x223
0x21e JUMPI
---
0x208: JUMPDEST 
0x209: V170 = 0x0
0x20b: V171 = S[0x0]
0x20c: V172 = ORIGIN
0x20d: V173 = 0x1
0x20f: V174 = 0xa0
0x211: V175 = 0x2
0x213: V176 = EXP 0x2 0xa0
0x214: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x217: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x219: V179 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V180 = EQ V179 V178
0x21b: V181 = 0x223
0x21e: JUMPI 0x223 V180
---
Entry stack: [V11, 0xbc, V66, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V66, V70]

================================

Block 0x21f
[0x21f:0x222]
---
Predecessors: [0x208]
Successors: []
---
0x21f PUSH1 0x0
0x221 DUP1
0x222 REVERT
---
0x21f: V182 = 0x0
0x222: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V66, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V66, V70]

================================

Block 0x223
[0x223:0x246]
---
Predecessors: [0x208]
Successors: [0x247, 0x24b]
---
0x223 JUMPDEST
0x224 PUSH1 0x1
0x226 SLOAD
0x227 PUSH21 0x10000000000000000000000000000000000000000
0x23d SWAP1
0x23e DIV
0x23f PUSH1 0xff
0x241 AND
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x223: JUMPDEST 
0x224: V183 = 0x1
0x226: V184 = S[0x1]
0x227: V185 = 0x10000000000000000000000000000000000000000
0x23e: V186 = DIV V184 0x10000000000000000000000000000000000000000
0x23f: V187 = 0xff
0x241: V188 = AND 0xff V186
0x242: V189 = ISZERO V188
0x243: V190 = 0x24b
0x246: JUMPI 0x24b V189
---
Entry stack: [V11, 0xbc, V66, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V66, V70]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x223]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V191 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V66, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V66, V70]

================================

Block 0x24b
[0x24b:0x323]
---
Predecessors: [0x223]
Successors: [0x324, 0x328]
---
0x24b JUMPDEST
0x24c DUP2
0x24d PUSH1 0x1
0x24f PUSH1 0xa0
0x251 PUSH1 0x2
0x253 EXP
0x254 SUB
0x255 AND
0x256 PUSH32 0x344ee6c5fe6c842eaf3ef066d7c0e9a96c80ef54f2a138593c1f655a1f85c973
0x277 PUSH1 0x0
0x279 DUP1
0x27a DUP5
0x27b PUSH1 0x40
0x27d MLOAD
0x27e SWAP3
0x27f DUP4
0x280 MSTORE
0x281 PUSH1 0x20
0x283 DUP4
0x284 ADD
0x285 SWAP2
0x286 SWAP1
0x287 SWAP2
0x288 MSTORE
0x289 PUSH12 0xffffffffffffffffffffffff
0x296 AND
0x297 PUSH1 0x40
0x299 DUP1
0x29a DUP4
0x29b ADD
0x29c SWAP2
0x29d SWAP1
0x29e SWAP2
0x29f MSTORE
0x2a0 PUSH1 0x60
0x2a2 SWAP1
0x2a3 SWAP2
0x2a4 ADD
0x2a5 SWAP1
0x2a6 MLOAD
0x2a7 DUP1
0x2a8 SWAP2
0x2a9 SUB
0x2aa SWAP1
0x2ab LOG2
0x2ac PUSH1 0x1
0x2ae SLOAD
0x2af PUSH1 0x1
0x2b1 PUSH1 0xa0
0x2b3 PUSH1 0x2
0x2b5 EXP
0x2b6 SUB
0x2b7 AND
0x2b8 PUSH4 0x6af1fdf7
0x2bd DUP4
0x2be DUP4
0x2bf PUSH1 0x40
0x2c1 MLOAD
0x2c2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e0 PUSH4 0xffffffff
0x2e5 DUP6
0x2e6 AND
0x2e7 MUL
0x2e8 DUP2
0x2e9 MSTORE
0x2ea PUSH1 0x1
0x2ec PUSH1 0xa0
0x2ee PUSH1 0x2
0x2f0 EXP
0x2f1 SUB
0x2f2 SWAP1
0x2f3 SWAP3
0x2f4 AND
0x2f5 PUSH1 0x4
0x2f7 DUP4
0x2f8 ADD
0x2f9 MSTORE
0x2fa PUSH12 0xffffffffffffffffffffffff
0x307 AND
0x308 PUSH1 0x24
0x30a DUP3
0x30b ADD
0x30c MSTORE
0x30d PUSH1 0x44
0x30f ADD
0x310 PUSH1 0x0
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 DUP4
0x317 SUB
0x318 DUP2
0x319 PUSH1 0x0
0x31b DUP8
0x31c DUP1
0x31d EXTCODESIZE
0x31e ISZERO
0x31f ISZERO
0x320 PUSH2 0x328
0x323 JUMPI
---
0x24b: JUMPDEST 
0x24d: V192 = 0x1
0x24f: V193 = 0xa0
0x251: V194 = 0x2
0x253: V195 = EXP 0x2 0xa0
0x254: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x255: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x256: V198 = 0x344ee6c5fe6c842eaf3ef066d7c0e9a96c80ef54f2a138593c1f655a1f85c973
0x277: V199 = 0x0
0x27b: V200 = 0x40
0x27d: V201 = M[0x40]
0x280: M[V201] = 0x0
0x281: V202 = 0x20
0x284: V203 = ADD V201 0x20
0x288: M[V203] = 0x0
0x289: V204 = 0xffffffffffffffffffffffff
0x296: V205 = AND 0xffffffffffffffffffffffff V70
0x297: V206 = 0x40
0x29b: V207 = ADD V201 0x40
0x29f: M[V207] = V205
0x2a0: V208 = 0x60
0x2a4: V209 = ADD V201 0x60
0x2a6: V210 = M[0x40]
0x2a9: V211 = SUB V209 V210
0x2ab: LOG V210 V211 0x344ee6c5fe6c842eaf3ef066d7c0e9a96c80ef54f2a138593c1f655a1f85c973 V197
0x2ac: V212 = 0x1
0x2ae: V213 = S[0x1]
0x2af: V214 = 0x1
0x2b1: V215 = 0xa0
0x2b3: V216 = 0x2
0x2b5: V217 = EXP 0x2 0xa0
0x2b6: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b7: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x2b8: V220 = 0x6af1fdf7
0x2bf: V221 = 0x40
0x2c1: V222 = M[0x40]
0x2c2: V223 = 0x100000000000000000000000000000000000000000000000000000000
0x2e0: V224 = 0xffffffff
0x2e6: V225 = AND 0x6af1fdf7 0xffffffff
0x2e7: V226 = MUL 0x6af1fdf7 0x100000000000000000000000000000000000000000000000000000000
0x2e9: M[V222] = 0x6af1fdf700000000000000000000000000000000000000000000000000000000
0x2ea: V227 = 0x1
0x2ec: V228 = 0xa0
0x2ee: V229 = 0x2
0x2f0: V230 = EXP 0x2 0xa0
0x2f1: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f4: V232 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V233 = 0x4
0x2f8: V234 = ADD V222 0x4
0x2f9: M[V234] = V232
0x2fa: V235 = 0xffffffffffffffffffffffff
0x307: V236 = AND 0xffffffffffffffffffffffff V70
0x308: V237 = 0x24
0x30b: V238 = ADD V222 0x24
0x30c: M[V238] = V236
0x30d: V239 = 0x44
0x30f: V240 = ADD 0x44 V222
0x310: V241 = 0x0
0x312: V242 = 0x40
0x314: V243 = M[0x40]
0x317: V244 = SUB V240 V243
0x319: V245 = 0x0
0x31d: V246 = EXTCODESIZE V219
0x31e: V247 = ISZERO V246
0x31f: V248 = ISZERO V247
0x320: V249 = 0x328
0x323: JUMPI 0x328 V248
---
Entry stack: [V11, 0xbc, V66, V70]
Stack pops: 2
Stack additions: [S1, S0, V219, 0x6af1fdf7, V240, 0x0, V243, V244, V243, 0x0, V219]
Exit stack: [V11, 0xbc, V66, V70, V219, 0x6af1fdf7, V240, 0x0, V243, V244, V243, 0x0, V219]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x24b]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V250 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V66, V70, V219, 0x6af1fdf7, V240, 0x0, V243, V244, V243, 0x0, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V66, V70, V219, 0x6af1fdf7, V240, 0x0, V243, V244, V243, 0x0, V219]

================================

Block 0x328
[0x328:0x334]
---
Predecessors: [0x24b]
Successors: [0x335, 0x339]
---
0x328 JUMPDEST
0x329 PUSH2 0x2c6
0x32c GAS
0x32d SUB
0x32e CALL
0x32f ISZERO
0x330 ISZERO
0x331 PUSH2 0x339
0x334 JUMPI
---
0x328: JUMPDEST 
0x329: V251 = 0x2c6
0x32c: V252 = GAS
0x32d: V253 = SUB V252 0x2c6
0x32e: V254 = CALL V253 V219 0x0 V243 V244 V243 0x0
0x32f: V255 = ISZERO V254
0x330: V256 = ISZERO V255
0x331: V257 = 0x339
0x334: JUMPI 0x339 V256
---
Entry stack: [V11, 0xbc, V66, V70, V219, 0x6af1fdf7, V240, 0x0, V243, V244, V243, 0x0, V219]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xbc, V66, V70, V219, 0x6af1fdf7, V240]

================================

Block 0x335
[0x335:0x338]
---
Predecessors: [0x328]
Successors: []
---
0x335 PUSH1 0x0
0x337 DUP1
0x338 REVERT
---
0x335: V258 = 0x0
0x338: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V66, V70, V219, 0x6af1fdf7, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V66, V70, V219, 0x6af1fdf7, V240]

================================

Block 0x339
[0x339:0x370]
---
Predecessors: [0x328]
Successors: [0x371, 0x375]
---
0x339 JUMPDEST
0x33a POP
0x33b POP
0x33c PUSH1 0x2
0x33e SLOAD
0x33f PUSH1 0x1
0x341 PUSH1 0xa0
0x343 PUSH1 0x2
0x345 EXP
0x346 SUB
0x347 SWAP1
0x348 DUP2
0x349 AND
0x34a SWAP2
0x34b POP
0x34c ADDRESS
0x34d AND
0x34e BALANCE
0x34f DUP1
0x350 ISZERO
0x351 PUSH2 0x8fc
0x354 MUL
0x355 SWAP1
0x356 PUSH1 0x40
0x358 MLOAD
0x359 PUSH1 0x0
0x35b PUSH1 0x40
0x35d MLOAD
0x35e DUP1
0x35f DUP4
0x360 SUB
0x361 DUP2
0x362 DUP6
0x363 DUP9
0x364 DUP9
0x365 CALL
0x366 SWAP4
0x367 POP
0x368 POP
0x369 POP
0x36a POP
0x36b ISZERO
0x36c ISZERO
0x36d PUSH2 0x375
0x370 JUMPI
---
0x339: JUMPDEST 
0x33c: V259 = 0x2
0x33e: V260 = S[0x2]
0x33f: V261 = 0x1
0x341: V262 = 0xa0
0x343: V263 = 0x2
0x345: V264 = EXP 0x2 0xa0
0x346: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x349: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x34c: V267 = ADDRESS
0x34d: V268 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V269 = BALANCE V268
0x350: V270 = ISZERO V269
0x351: V271 = 0x8fc
0x354: V272 = MUL 0x8fc V270
0x356: V273 = 0x40
0x358: V274 = M[0x40]
0x359: V275 = 0x0
0x35b: V276 = 0x40
0x35d: V277 = M[0x40]
0x360: V278 = SUB V274 V277
0x365: V279 = CALL V272 V266 V269 V277 V278 V277 0x0
0x36b: V280 = ISZERO V279
0x36c: V281 = ISZERO V280
0x36d: V282 = 0x375
0x370: JUMPI 0x375 V281
---
Entry stack: [V11, 0xbc, V66, V70, V219, 0x6af1fdf7, V240]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xbc, V66, V70]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x339]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V283 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V66, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V66, V70]

================================

Block 0x375
[0x375:0x378]
---
Predecessors: [0x339]
Successors: [0xbc]
---
0x375 JUMPDEST
0x376 POP
0x377 POP
0x378 JUMP
---
0x375: JUMPDEST 
0x378: JUMP 0xbc
---
Entry stack: [V11, 0xbc, V66, V70]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x379
[0x379:0x387]
---
Predecessors: [0xf9]
Successors: [0x101]
---
0x379 JUMPDEST
0x37a PUSH1 0x2
0x37c SLOAD
0x37d PUSH1 0x1
0x37f PUSH1 0xa0
0x381 PUSH1 0x2
0x383 EXP
0x384 SUB
0x385 AND
0x386 DUP2
0x387 JUMP
---
0x379: JUMPDEST 
0x37a: V284 = 0x2
0x37c: V285 = S[0x2]
0x37d: V286 = 0x1
0x37f: V287 = 0xa0
0x381: V288 = 0x2
0x383: V289 = EXP 0x2 0xa0
0x384: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x385: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x387: JUMP 0x101
---
Entry stack: [V11, 0x101]
Stack pops: 1
Stack additions: [S0, V291]
Exit stack: [V11, 0x101, V291]

================================

Block 0x388
[0x388:0x391]
---
Predecessors: [0x128]
Successors: [0x130]
---
0x388 JUMPDEST
0x389 PUSH6 0x47d99eeff000
0x390 DUP2
0x391 JUMP
---
0x388: JUMPDEST 
0x389: V292 = 0x47d99eeff000
0x391: JUMP 0x130
---
Entry stack: [V11, 0x130]
Stack pops: 1
Stack additions: [S0, 0x47d99eeff000]
Exit stack: [V11, 0x130, 0x47d99eeff000]

================================

Block 0x392
[0x392:0x3a8]
---
Predecessors: [0x156]
Successors: [0x3a9, 0x3ad]
---
0x392 JUMPDEST
0x393 PUSH1 0x0
0x395 SLOAD
0x396 ORIGIN
0x397 PUSH1 0x1
0x399 PUSH1 0xa0
0x39b PUSH1 0x2
0x39d EXP
0x39e SUB
0x39f SWAP1
0x3a0 DUP2
0x3a1 AND
0x3a2 SWAP2
0x3a3 AND
0x3a4 EQ
0x3a5 PUSH2 0x3ad
0x3a8 JUMPI
---
0x392: JUMPDEST 
0x393: V293 = 0x0
0x395: V294 = S[0x0]
0x396: V295 = ORIGIN
0x397: V296 = 0x1
0x399: V297 = 0xa0
0x39b: V298 = 0x2
0x39d: V299 = EXP 0x2 0xa0
0x39e: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a1: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x3a3: V302 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V303 = EQ V302 V301
0x3a5: V304 = 0x3ad
0x3a8: JUMPI 0x3ad V303
---
Entry stack: [V11, 0xbc]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc]

================================

Block 0x3a9
[0x3a9:0x3ac]
---
Predecessors: [0x392]
Successors: []
---
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac REVERT
---
0x3a9: V305 = 0x0
0x3ac: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc]

================================

Block 0x3ad
[0x3ad:0x3cc]
---
Predecessors: [0x392]
Successors: [0xbc]
---
0x3ad JUMPDEST
0x3ae PUSH1 0x1
0x3b0 DUP1
0x3b1 SLOAD
0x3b2 PUSH21 0xff0000000000000000000000000000000000000000
0x3c8 NOT
0x3c9 AND
0x3ca SWAP1
0x3cb SSTORE
0x3cc JUMP
---
0x3ad: JUMPDEST 
0x3ae: V306 = 0x1
0x3b1: V307 = S[0x1]
0x3b2: V308 = 0xff0000000000000000000000000000000000000000
0x3c8: V309 = NOT 0xff0000000000000000000000000000000000000000
0x3c9: V310 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V307
0x3cb: S[0x1] = V310
0x3cc: JUMP 0xbc
---
Entry stack: [V11, 0xbc]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3cd
[0x3cd:0x3ed]
---
Predecessors: [0x169]
Successors: [0x171]
---
0x3cd JUMPDEST
0x3ce PUSH1 0x1
0x3d0 SLOAD
0x3d1 PUSH21 0x10000000000000000000000000000000000000000
0x3e7 SWAP1
0x3e8 DIV
0x3e9 PUSH1 0xff
0x3eb AND
0x3ec DUP2
0x3ed JUMP
---
0x3cd: JUMPDEST 
0x3ce: V311 = 0x1
0x3d0: V312 = S[0x1]
0x3d1: V313 = 0x10000000000000000000000000000000000000000
0x3e8: V314 = DIV V312 0x10000000000000000000000000000000000000000
0x3e9: V315 = 0xff
0x3eb: V316 = AND 0xff V314
0x3ed: JUMP 0x171
---
Entry stack: [V11, 0x171]
Stack pops: 1
Stack additions: [S0, V316]
Exit stack: [V11, 0x171, V316]

================================

Block 0x3ee
[0x3ee:0x3fc]
---
Predecessors: [0x190]
Successors: [0x101]
---
0x3ee JUMPDEST
0x3ef PUSH1 0x0
0x3f1 SLOAD
0x3f2 PUSH1 0x1
0x3f4 PUSH1 0xa0
0x3f6 PUSH1 0x2
0x3f8 EXP
0x3f9 SUB
0x3fa AND
0x3fb DUP2
0x3fc JUMP
---
0x3ee: JUMPDEST 
0x3ef: V317 = 0x0
0x3f1: V318 = S[0x0]
0x3f2: V319 = 0x1
0x3f4: V320 = 0xa0
0x3f6: V321 = 0x2
0x3f8: V322 = EXP 0x2 0xa0
0x3f9: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fa: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x3fc: JUMP 0x101
---
Entry stack: [V11, 0x101]
Stack pops: 1
Stack additions: [S0, V324]
Exit stack: [V11, 0x101, V324]

================================

Block 0x3fd
[0x3fd:0x413]
---
Predecessors: [0x1a3]
Successors: [0x414, 0x418]
---
0x3fd JUMPDEST
0x3fe PUSH1 0x0
0x400 SLOAD
0x401 ORIGIN
0x402 PUSH1 0x1
0x404 PUSH1 0xa0
0x406 PUSH1 0x2
0x408 EXP
0x409 SUB
0x40a SWAP1
0x40b DUP2
0x40c AND
0x40d SWAP2
0x40e AND
0x40f EQ
0x410 PUSH2 0x418
0x413 JUMPI
---
0x3fd: JUMPDEST 
0x3fe: V325 = 0x0
0x400: V326 = S[0x0]
0x401: V327 = ORIGIN
0x402: V328 = 0x1
0x404: V329 = 0xa0
0x406: V330 = 0x2
0x408: V331 = EXP 0x2 0xa0
0x409: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40c: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x40e: V334 = AND V326 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V335 = EQ V334 V333
0x410: V336 = 0x418
0x413: JUMPI 0x418 V335
---
Entry stack: [V11, 0xbc]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc]

================================

Block 0x414
[0x414:0x417]
---
Predecessors: [0x3fd]
Successors: []
---
0x414 PUSH1 0x0
0x416 DUP1
0x417 REVERT
---
0x414: V337 = 0x0
0x417: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc]

================================

Block 0x418
[0x418:0x44e]
---
Predecessors: [0x3fd]
Successors: [0xbc]
---
0x418 JUMPDEST
0x419 PUSH1 0x1
0x41b DUP1
0x41c SLOAD
0x41d PUSH21 0xff0000000000000000000000000000000000000000
0x433 NOT
0x434 AND
0x435 PUSH21 0x10000000000000000000000000000000000000000
0x44b OR
0x44c SWAP1
0x44d SSTORE
0x44e JUMP
---
0x418: JUMPDEST 
0x419: V338 = 0x1
0x41c: V339 = S[0x1]
0x41d: V340 = 0xff0000000000000000000000000000000000000000
0x433: V341 = NOT 0xff0000000000000000000000000000000000000000
0x434: V342 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V339
0x435: V343 = 0x10000000000000000000000000000000000000000
0x44b: V344 = OR 0x10000000000000000000000000000000000000000 V342
0x44d: S[0x1] = V344
0x44e: JUMP 0xbc
---
Entry stack: [V11, 0xbc]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x44f
[0x44f:0x45d]
---
Predecessors: [0x1b6]
Successors: [0x101]
---
0x44f JUMPDEST
0x450 PUSH1 0x1
0x452 SLOAD
0x453 PUSH1 0x1
0x455 PUSH1 0xa0
0x457 PUSH1 0x2
0x459 EXP
0x45a SUB
0x45b AND
0x45c DUP2
0x45d JUMP
---
0x44f: JUMPDEST 
0x450: V345 = 0x1
0x452: V346 = S[0x1]
0x453: V347 = 0x1
0x455: V348 = 0xa0
0x457: V349 = 0x2
0x459: V350 = EXP 0x2 0xa0
0x45a: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45b: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x45d: JUMP 0x101
---
Entry stack: [V11, 0x101]
Stack pops: 1
Stack additions: [S0, V352]
Exit stack: [V11, 0x101, V352]

================================

Block 0x45e
[0x45e:0x4bf]
---
Predecessors: []
Successors: []
---
0x45e JUMPDEST
0x45f PUSH1 0x0
0x461 DUP1
0x462 SLOAD
0x463 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x478 NOT
0x479 AND
0x47a PUSH1 0x1
0x47c PUSH1 0xa0
0x47e PUSH1 0x2
0x480 EXP
0x481 SUB
0x482 SWAP3
0x483 SWAP1
0x484 SWAP3
0x485 AND
0x486 SWAP2
0x487 SWAP1
0x488 SWAP2
0x489 OR
0x48a SWAP1
0x48b SSTORE
0x48c JUMP
0x48d STOP
0x48e LOG1
0x48f PUSH6 0x627a7a723058
0x496 SHA3
0x497 SWAP10
0x498 DUP7
0x499 MISSING 0xe
0x49a LOG4
0x49b MISSING 0xa9
0x49c MISSING 0x5f
0x49d DUP2
0x49e SAR
0x49f SLT
0x4a0 LT
0x4a1 GASPRICE
0x4a2 MISSING 0xd0
0x4a3 PUSH28 0x59886246c08d4badf6a31b34096d4b5554d2290029
---
0x45e: JUMPDEST 
0x45f: V353 = 0x0
0x462: V354 = S[0x0]
0x463: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x478: V356 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x479: V357 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V354
0x47a: V358 = 0x1
0x47c: V359 = 0xa0
0x47e: V360 = 0x2
0x480: V361 = EXP 0x2 0xa0
0x481: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x485: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x489: V364 = OR V363 V357
0x48b: S[0x0] = V364
0x48c: JUMP S1
0x48d: STOP 
0x48e: LOG S0 S1 S2
0x48f: V365 = 0x627a7a723058
0x496: V366 = SHA3 0x627a7a723058 S3
0x499: MISSING 0xe
0x49a: LOG S0 S1 S2 S3 S4 S5
0x49b: MISSING 0xa9
0x49c: MISSING 0x5f
0x49e: V367 = SAR S1 S0
0x49f: V368 = SLT V367 S1
0x4a0: V369 = LT V368 S2
0x4a1: V370 = GASPRICE
0x4a2: MISSING 0xd0
0x4a3: V371 = 0x59886246c08d4badf6a31b34096d4b5554d2290029
---
Entry stack: []
Stack pops: 46
Stack additions: [0x59886246c08d4badf6a31b34096d4b5554d2290029]
Exit stack: []

================================

Function 0:
Public function signature: 0x144fa6d7
Entry block: 0x9d
Exit block: 0xbc
Body: 0x9d, 0xa4, 0xa8, 0xbc, 0x1be, 0x1d5, 0x1d9

Function 1:
Public function signature: 0x6af1fdf7
Entry block: 0xbe
Exit block: 0xbc
Body: 0xbc, 0xbe, 0xc5, 0xc9, 0x208, 0x21f, 0x223, 0x247, 0x24b, 0x324, 0x328, 0x335, 0x339, 0x371, 0x375

Function 2:
Public function signature: 0x85aa92a7
Entry block: 0xee
Exit block: 0x101
Body: 0xee, 0xf5, 0xf9, 0x101, 0x379

Function 3:
Public function signature: 0x8d859f3e
Entry block: 0x11d
Exit block: 0x130
Body: 0x11d, 0x124, 0x128, 0x130, 0x388

Function 4:
Public function signature: 0xa69df4b5
Entry block: 0x14b
Exit block: 0xbc
Body: 0xbc, 0x14b, 0x152, 0x156, 0x392, 0x3a9, 0x3ad

Function 5:
Public function signature: 0xcf309012
Entry block: 0x15e
Exit block: 0x171
Body: 0x15e, 0x165, 0x169, 0x171, 0x3cd

Function 6:
Public function signature: 0xf53d0a8e
Entry block: 0x185
Exit block: 0x101
Body: 0x101, 0x185, 0x18c, 0x190, 0x3ee

Function 7:
Public function signature: 0xf83d08ba
Entry block: 0x198
Exit block: 0xbc
Body: 0xbc, 0x198, 0x19f, 0x1a3, 0x3fd, 0x414, 0x418

Function 8:
Public function signature: 0xfc0c546a
Entry block: 0x1ab
Exit block: 0x101
Body: 0x101, 0x1ab, 0x1b2, 0x1b6, 0x44f

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0x98
Body: 0x98

