Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x9d]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xa3b0a4f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x9d
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xa3b0a4f
0x3b: V13 = EQ V11 0xa3b0a4f
0x3c: V14 = 0x9d
0x3f: JUMPI 0x9d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xbe]
---
0x40 DUP1
0x41 PUSH4 0x29092d0e
0x46 EQ
0x47 PUSH2 0xbe
0x4a JUMPI
---
0x41: V15 = 0x29092d0e
0x46: V16 = EQ 0x29092d0e V11
0x47: V17 = 0xbe
0x4a: JUMPI 0xbe V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xdd]
---
0x4b DUP1
0x4c PUSH4 0x3804e84e
0x51 EQ
0x52 PUSH2 0xdd
0x55 JUMPI
---
0x4c: V18 = 0x3804e84e
0x51: V19 = EQ 0x3804e84e V11
0x52: V20 = 0xdd
0x55: JUMPI 0xdd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x113]
---
0x56 DUP1
0x57 PUSH4 0x53ed5143
0x5c EQ
0x5d PUSH2 0x113
0x60 JUMPI
---
0x57: V21 = 0x53ed5143
0x5c: V22 = EQ 0x53ed5143 V11
0x5d: V23 = 0x113
0x60: JUMPI 0x113 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x179]
---
0x61 DUP1
0x62 PUSH4 0x74fd6176
0x67 EQ
0x68 PUSH2 0x179
0x6b JUMPI
---
0x62: V24 = 0x74fd6176
0x67: V25 = EQ 0x74fd6176 V11
0x68: V26 = 0x179
0x6b: JUMPI 0x179 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1c8]
---
0x6c DUP1
0x6d PUSH4 0x7ebd1b30
0x72 EQ
0x73 PUSH2 0x1c8
0x76 JUMPI
---
0x6d: V27 = 0x7ebd1b30
0x72: V28 = EQ 0x7ebd1b30 V11
0x73: V29 = 0x1c8
0x76: JUMPI 0x1c8 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1fa]
---
0x77 DUP1
0x78 PUSH4 0xf53d0a8e
0x7d EQ
0x7e PUSH2 0x1fa
0x81 JUMPI
---
0x78: V30 = 0xf53d0a8e
0x7d: V31 = EQ 0xf53d0a8e V11
0x7e: V32 = 0x1fa
0x81: JUMPI 0x1fa V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x20d]
---
0x82 DUP1
0x83 PUSH4 0xfa33bcf3
0x88 EQ
0x89 PUSH2 0x20d
0x8c JUMPI
---
0x83: V33 = 0xfa33bcf3
0x88: V34 = EQ 0xfa33bcf3 V11
0x89: V35 = 0x20d
0x8c: JUMPI 0x20d V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x240]
---
0x8d DUP1
0x8e PUSH4 0xfd413596
0x93 EQ
0x94 PUSH2 0x240
0x97 JUMPI
---
0x8e: V36 = 0xfd413596
0x93: V37 = EQ 0xfd413596 V11
0x94: V38 = 0x240
0x97: JUMPI 0x240 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9c]
---
Predecessors: [0x0, 0x8d]
Successors: []
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x98: JUMPDEST 
0x99: V39 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa3]
---
Predecessors: [0xd]
Successors: [0xa4, 0xa8]
---
0x9d JUMPDEST
0x9e CALLVALUE
0x9f ISZERO
0xa0 PUSH2 0xa8
0xa3 JUMPI
---
0x9d: JUMPDEST 
0x9e: V40 = CALLVALUE
0x9f: V41 = ISZERO V40
0xa0: V42 = 0xa8
0xa3: JUMPI 0xa8 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xa7]
---
Predecessors: [0x9d]
Successors: []
---
0xa4 PUSH1 0x0
0xa6 DUP1
0xa7 REVERT
---
0xa4: V43 = 0x0
0xa7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xbb]
---
Predecessors: [0x9d]
Successors: [0x28f]
---
0xa8 JUMPDEST
0xa9 PUSH2 0xbc
0xac PUSH1 0x1
0xae PUSH1 0xa0
0xb0 PUSH1 0x2
0xb2 EXP
0xb3 SUB
0xb4 PUSH1 0x4
0xb6 CALLDATALOAD
0xb7 AND
0xb8 PUSH2 0x28f
0xbb JUMP
---
0xa8: JUMPDEST 
0xa9: V44 = 0xbc
0xac: V45 = 0x1
0xae: V46 = 0xa0
0xb0: V47 = 0x2
0xb2: V48 = EXP 0x2 0xa0
0xb3: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4: V50 = 0x4
0xb6: V51 = CALLDATALOAD 0x4
0xb7: V52 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V53 = 0x28f
0xbb: JUMP 0x28f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbc, V52]
Exit stack: [V11, 0xbc, V52]

================================

Block 0xbc
[0xbc:0xbd]
---
Predecessors: [0x32a, 0x45f, 0x548]
Successors: []
---
0xbc JUMPDEST
0xbd STOP
---
0xbc: JUMPDEST 
0xbd: STOP 
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xbe
[0xbe:0xc4]
---
Predecessors: [0x40]
Successors: [0xc5, 0xc9]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 ISZERO
0xc1 PUSH2 0xc9
0xc4 JUMPI
---
0xbe: JUMPDEST 
0xbf: V54 = CALLVALUE
0xc0: V55 = ISZERO V54
0xc1: V56 = 0xc9
0xc4: JUMPI 0xc9 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xc8]
---
Predecessors: [0xbe]
Successors: []
---
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 REVERT
---
0xc5: V57 = 0x0
0xc8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc9
[0xc9:0xdc]
---
Predecessors: [0xbe]
Successors: [0x32d]
---
0xc9 JUMPDEST
0xca PUSH2 0xbc
0xcd PUSH1 0x1
0xcf PUSH1 0xa0
0xd1 PUSH1 0x2
0xd3 EXP
0xd4 SUB
0xd5 PUSH1 0x4
0xd7 CALLDATALOAD
0xd8 AND
0xd9 PUSH2 0x32d
0xdc JUMP
---
0xc9: JUMPDEST 
0xca: V58 = 0xbc
0xcd: V59 = 0x1
0xcf: V60 = 0xa0
0xd1: V61 = 0x2
0xd3: V62 = EXP 0x2 0xa0
0xd4: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd5: V64 = 0x4
0xd7: V65 = CALLDATALOAD 0x4
0xd8: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V67 = 0x32d
0xdc: JUMP 0x32d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbc, V66]
Exit stack: [V11, 0xbc, V66]

================================

Block 0xdd
[0xdd:0xe3]
---
Predecessors: [0x4b]
Successors: [0xe4, 0xe8]
---
0xdd JUMPDEST
0xde CALLVALUE
0xdf ISZERO
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xdd: JUMPDEST 
0xde: V68 = CALLVALUE
0xdf: V69 = ISZERO V68
0xe0: V70 = 0xe8
0xe3: JUMPI 0xe8 V69
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xdd]
Successors: []
---
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 REVERT
---
0xe4: V71 = 0x0
0xe7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe8
[0xe8:0xfb]
---
Predecessors: [0xdd]
Successors: [0x464]
---
0xe8 JUMPDEST
0xe9 PUSH2 0xfc
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 PUSH1 0x4
0xf6 CALLDATALOAD
0xf7 AND
0xf8 PUSH2 0x464
0xfb JUMP
---
0xe8: JUMPDEST 
0xe9: V72 = 0xfc
0xec: V73 = 0x1
0xee: V74 = 0xa0
0xf0: V75 = 0x2
0xf2: V76 = EXP 0x2 0xa0
0xf3: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4: V78 = 0x4
0xf6: V79 = CALLDATALOAD 0x4
0xf7: V80 = AND V79 0xffffffffffffffffffffffffffffffffffffffff
0xf8: V81 = 0x464
0xfb: JUMP 0x464
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfc, V80]
Exit stack: [V11, 0xfc, V80]

================================

Block 0xfc
[0xfc:0x112]
---
Predecessors: [0x464]
Successors: []
---
0xfc JUMPDEST
0xfd PUSH1 0x40
0xff MLOAD
0x100 PUSH2 0xffff
0x103 SWAP1
0x104 SWAP2
0x105 AND
0x106 DUP2
0x107 MSTORE
0x108 PUSH1 0x20
0x10a ADD
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f SWAP2
0x110 SUB
0x111 SWAP1
0x112 RETURN
---
0xfc: JUMPDEST 
0xfd: V82 = 0x40
0xff: V83 = M[0x40]
0x100: V84 = 0xffff
0x105: V85 = AND V391 0xffff
0x107: M[V83] = V85
0x108: V86 = 0x20
0x10a: V87 = ADD 0x20 V83
0x10b: V88 = 0x40
0x10d: V89 = M[0x40]
0x110: V90 = SUB V87 V89
0x112: RETURN V89 V90
---
Entry stack: [V11, 0xfc, V391]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xfc]

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0x56]
Successors: [0x11a, 0x11e]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x113: JUMPDEST 
0x114: V91 = CALLVALUE
0x115: V92 = ISZERO V91
0x116: V93 = 0x11e
0x119: JUMPI 0x11e V92
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x113]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V94 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11e
[0x11e:0x125]
---
Predecessors: [0x113]
Successors: [0x47a]
---
0x11e JUMPDEST
0x11f PUSH2 0x126
0x122 PUSH2 0x47a
0x125 JUMP
---
0x11e: JUMPDEST 
0x11f: V95 = 0x126
0x122: V96 = 0x47a
0x125: JUMP 0x47a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x126
[0x126:0x14c]
---
Predecessors: [0x4e0]
Successors: [0x14d]
---
0x126 JUMPDEST
0x127 PUSH1 0x40
0x129 MLOAD
0x12a PUSH1 0x20
0x12c DUP1
0x12d DUP3
0x12e MSTORE
0x12f DUP2
0x130 SWAP1
0x131 DUP2
0x132 ADD
0x133 DUP4
0x134 DUP2
0x135 DUP2
0x136 MLOAD
0x137 DUP2
0x138 MSTORE
0x139 PUSH1 0x20
0x13b ADD
0x13c SWAP2
0x13d POP
0x13e DUP1
0x13f MLOAD
0x140 SWAP1
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP1
0x145 PUSH1 0x20
0x147 MUL
0x148 DUP1
0x149 DUP4
0x14a DUP4
0x14b PUSH1 0x0
---
0x126: JUMPDEST 
0x127: V97 = 0x40
0x129: V98 = M[0x40]
0x12a: V99 = 0x20
0x12e: M[V98] = 0x20
0x132: V100 = ADD V98 0x20
0x136: V101 = M[S0]
0x138: M[V100] = V101
0x139: V102 = 0x20
0x13b: V103 = ADD 0x20 V100
0x13f: V104 = M[S0]
0x141: V105 = 0x20
0x143: V106 = ADD 0x20 S0
0x145: V107 = 0x20
0x147: V108 = MUL 0x20 V104
0x14b: V109 = 0x0
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2f7, 0x45d}, 0x1, S1, S0]
Stack pops: 1
Stack additions: [S0, V98, V98, V103, V106, V108, V108, V103, V106, 0x0]
Exit stack: [S1, S0, V98, V98, V103, V106, V108, V108, V103, V106, 0x0]

================================

Block 0x14d
[0x14d:0x155]
---
Predecessors: [0x126, 0x156]
Successors: [0x156, 0x165]
---
0x14d JUMPDEST
0x14e DUP4
0x14f DUP2
0x150 LT
0x151 ISZERO
0x152 PUSH2 0x165
0x155 JUMPI
---
0x14d: JUMPDEST 
0x150: V110 = LT S0 V108
0x151: V111 = ISZERO V110
0x152: V112 = 0x165
0x155: JUMPI 0x165 V111
---
Entry stack: [V11, V401, V98, V98, V103, V106, V108, V108, V103, V106, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V401, V98, V98, V103, V106, V108, V108, V103, V106, S0]

================================

Block 0x156
[0x156:0x164]
---
Predecessors: [0x14d]
Successors: [0x14d]
---
0x156 DUP1
0x157 DUP3
0x158 ADD
0x159 MLOAD
0x15a DUP4
0x15b DUP3
0x15c ADD
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 PUSH2 0x14d
0x164 JUMP
---
0x158: V113 = ADD V106 S0
0x159: V114 = M[V113]
0x15c: V115 = ADD S0 V103
0x15d: M[V115] = V114
0x15e: V116 = 0x20
0x160: V117 = ADD 0x20 S0
0x161: V118 = 0x14d
0x164: JUMP 0x14d
---
Entry stack: [V11, V401, V98, V98, V103, V106, V108, V108, V103, V106, S0]
Stack pops: 3
Stack additions: [S2, S1, V117]
Exit stack: [V11, V401, V98, V98, V103, V106, V108, V108, V103, V106, V117]

================================

Block 0x165
[0x165:0x178]
---
Predecessors: [0x14d]
Successors: []
---
0x165 JUMPDEST
0x166 POP
0x167 POP
0x168 POP
0x169 POP
0x16a SWAP1
0x16b POP
0x16c ADD
0x16d SWAP3
0x16e POP
0x16f POP
0x170 POP
0x171 PUSH1 0x40
0x173 MLOAD
0x174 DUP1
0x175 SWAP2
0x176 SUB
0x177 SWAP1
0x178 RETURN
---
0x165: JUMPDEST 
0x16c: V119 = ADD V108 V103
0x171: V120 = 0x40
0x173: V121 = M[0x40]
0x176: V122 = SUB V119 V121
0x178: RETURN V121 V122
---
Entry stack: [V11, V401, V98, V98, V103, V106, V108, V108, V103, V106, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x179
[0x179:0x17f]
---
Predecessors: [0x61]
Successors: [0x180, 0x184]
---
0x179 JUMPDEST
0x17a CALLVALUE
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x179: JUMPDEST 
0x17a: V123 = CALLVALUE
0x17b: V124 = ISZERO V123
0x17c: V125 = 0x184
0x17f: JUMPI 0x184 V124
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x179]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V126 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x184
[0x184:0x1c7]
---
Predecessors: [0x179]
Successors: [0x4e3]
---
0x184 JUMPDEST
0x185 PUSH2 0xbc
0x188 PUSH1 0x4
0x18a PUSH1 0x24
0x18c DUP2
0x18d CALLDATALOAD
0x18e DUP2
0x18f DUP2
0x190 ADD
0x191 SWAP1
0x192 DUP4
0x193 ADD
0x194 CALLDATALOAD
0x195 DUP1
0x196 PUSH1 0x20
0x198 DUP2
0x199 DUP2
0x19a MUL
0x19b ADD
0x19c PUSH1 0x40
0x19e MLOAD
0x19f SWAP1
0x1a0 DUP2
0x1a1 ADD
0x1a2 PUSH1 0x40
0x1a4 MSTORE
0x1a5 DUP1
0x1a6 SWAP4
0x1a7 SWAP3
0x1a8 SWAP2
0x1a9 SWAP1
0x1aa DUP2
0x1ab DUP2
0x1ac MSTORE
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 DUP4
0x1b1 DUP4
0x1b2 PUSH1 0x20
0x1b4 MUL
0x1b5 DUP1
0x1b6 DUP3
0x1b7 DUP5
0x1b8 CALLDATACOPY
0x1b9 POP
0x1ba SWAP5
0x1bb SWAP7
0x1bc POP
0x1bd PUSH2 0x4e3
0x1c0 SWAP6
0x1c1 POP
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 POP
0x1c7 JUMP
---
0x184: JUMPDEST 
0x185: V127 = 0xbc
0x188: V128 = 0x4
0x18a: V129 = 0x24
0x18d: V130 = CALLDATALOAD 0x4
0x190: V131 = ADD V130 0x24
0x193: V132 = ADD 0x4 V130
0x194: V133 = CALLDATALOAD V132
0x196: V134 = 0x20
0x19a: V135 = MUL 0x20 V133
0x19b: V136 = ADD V135 0x20
0x19c: V137 = 0x40
0x19e: V138 = M[0x40]
0x1a1: V139 = ADD V138 V136
0x1a2: V140 = 0x40
0x1a4: M[0x40] = V139
0x1ac: M[V138] = V133
0x1ad: V141 = 0x20
0x1af: V142 = ADD 0x20 V138
0x1b2: V143 = 0x20
0x1b4: V144 = MUL 0x20 V133
0x1b8: CALLDATACOPY V142 V131 V144
0x1bd: V145 = 0x4e3
0x1c7: JUMP 0x4e3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbc, V138]
Exit stack: [V11, 0xbc, V138]

================================

Block 0x1c8
[0x1c8:0x1ce]
---
Predecessors: [0x6c]
Successors: [0x1cf, 0x1d3]
---
0x1c8 JUMPDEST
0x1c9 CALLVALUE
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V146 = CALLVALUE
0x1ca: V147 = ISZERO V146
0x1cb: V148 = 0x1d3
0x1ce: JUMPI 0x1d3 V147
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1c8]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V149 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d3
[0x1d3:0x1dd]
---
Predecessors: [0x1c8]
Successors: [0x54c]
---
0x1d3 JUMPDEST
0x1d4 PUSH2 0x1de
0x1d7 PUSH1 0x4
0x1d9 CALLDATALOAD
0x1da PUSH2 0x54c
0x1dd JUMP
---
0x1d3: JUMPDEST 
0x1d4: V150 = 0x1de
0x1d7: V151 = 0x4
0x1d9: V152 = CALLDATALOAD 0x4
0x1da: V153 = 0x54c
0x1dd: JUMP 0x54c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1de, V152]
Exit stack: [V11, 0x1de, V152]

================================

Block 0x1de
[0x1de:0x1f9]
---
Predecessors: [0x55a, 0x574]
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea SWAP1
0x1eb SWAP2
0x1ec AND
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x20
0x1f1 ADD
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 DUP1
0x1f6 SWAP2
0x1f7 SUB
0x1f8 SWAP1
0x1f9 RETURN
---
0x1de: JUMPDEST 
0x1df: V154 = 0x40
0x1e1: V155 = M[0x40]
0x1e2: V156 = 0x1
0x1e4: V157 = 0xa0
0x1e6: V158 = 0x2
0x1e8: V159 = EXP 0x2 0xa0
0x1e9: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ec: V161 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: M[V155] = V161
0x1ef: V162 = 0x20
0x1f1: V163 = ADD 0x20 V155
0x1f2: V164 = 0x40
0x1f4: V165 = M[0x40]
0x1f7: V166 = SUB V163 V165
0x1f9: RETURN V165 V166
---
Entry stack: [V11, 0x1de, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1de]

================================

Block 0x1fa
[0x1fa:0x200]
---
Predecessors: [0x77]
Successors: [0x201, 0x205]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc ISZERO
0x1fd PUSH2 0x205
0x200 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V167 = CALLVALUE
0x1fc: V168 = ISZERO V167
0x1fd: V169 = 0x205
0x200: JUMPI 0x205 V168
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x201
[0x201:0x204]
---
Predecessors: [0x1fa]
Successors: []
---
0x201 PUSH1 0x0
0x203 DUP1
0x204 REVERT
---
0x201: V170 = 0x0
0x204: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x205
[0x205:0x20c]
---
Predecessors: [0x1fa]
Successors: [0x574]
---
0x205 JUMPDEST
0x206 PUSH2 0x1de
0x209 PUSH2 0x574
0x20c JUMP
---
0x205: JUMPDEST 
0x206: V171 = 0x1de
0x209: V172 = 0x574
0x20c: JUMP 0x574
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V11, 0x1de]

================================

Block 0x20d
[0x20d:0x213]
---
Predecessors: [0x82]
Successors: [0x214, 0x218]
---
0x20d JUMPDEST
0x20e CALLVALUE
0x20f ISZERO
0x210 PUSH2 0x218
0x213 JUMPI
---
0x20d: JUMPDEST 
0x20e: V173 = CALLVALUE
0x20f: V174 = ISZERO V173
0x210: V175 = 0x218
0x213: JUMPI 0x218 V174
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x214
[0x214:0x217]
---
Predecessors: [0x20d]
Successors: []
---
0x214 PUSH1 0x0
0x216 DUP1
0x217 REVERT
---
0x214: V176 = 0x0
0x217: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x218
[0x218:0x22b]
---
Predecessors: [0x20d]
Successors: [0x583]
---
0x218 JUMPDEST
0x219 PUSH2 0x22c
0x21c PUSH1 0x1
0x21e PUSH1 0xa0
0x220 PUSH1 0x2
0x222 EXP
0x223 SUB
0x224 PUSH1 0x4
0x226 CALLDATALOAD
0x227 AND
0x228 PUSH2 0x583
0x22b JUMP
---
0x218: JUMPDEST 
0x219: V177 = 0x22c
0x21c: V178 = 0x1
0x21e: V179 = 0xa0
0x220: V180 = 0x2
0x222: V181 = EXP 0x2 0xa0
0x223: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x224: V183 = 0x4
0x226: V184 = CALLDATALOAD 0x4
0x227: V185 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x228: V186 = 0x583
0x22b: JUMP 0x583
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x22c, V185]
Exit stack: [V11, 0x22c, V185]

================================

Block 0x22c
[0x22c:0x23f]
---
Predecessors: [0x5fa]
Successors: []
---
0x22c JUMPDEST
0x22d PUSH1 0x40
0x22f MLOAD
0x230 SWAP1
0x231 ISZERO
0x232 ISZERO
0x233 DUP2
0x234 MSTORE
0x235 PUSH1 0x20
0x237 ADD
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c SWAP2
0x23d SUB
0x23e SWAP1
0x23f RETURN
---
0x22c: JUMPDEST 
0x22d: V187 = 0x40
0x22f: V188 = M[0x40]
0x231: V189 = ISZERO S0
0x232: V190 = ISZERO V189
0x234: M[V188] = V190
0x235: V191 = 0x20
0x237: V192 = ADD 0x20 V188
0x238: V193 = 0x40
0x23a: V194 = M[0x40]
0x23d: V195 = SUB V192 V194
0x23f: RETURN V194 V195
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xbc, 0x65d}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xbc, 0x65d}, S1]

================================

Block 0x240
[0x240:0x246]
---
Predecessors: [0x8d]
Successors: [0x247, 0x24b]
---
0x240 JUMPDEST
0x241 CALLVALUE
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x240: JUMPDEST 
0x241: V196 = CALLVALUE
0x242: V197 = ISZERO V196
0x243: V198 = 0x24b
0x246: JUMPI 0x24b V197
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x240]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V199 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x24b
[0x24b:0x28e]
---
Predecessors: [0x240]
Successors: [0x600]
---
0x24b JUMPDEST
0x24c PUSH2 0xbc
0x24f PUSH1 0x4
0x251 PUSH1 0x24
0x253 DUP2
0x254 CALLDATALOAD
0x255 DUP2
0x256 DUP2
0x257 ADD
0x258 SWAP1
0x259 DUP4
0x25a ADD
0x25b CALLDATALOAD
0x25c DUP1
0x25d PUSH1 0x20
0x25f DUP2
0x260 DUP2
0x261 MUL
0x262 ADD
0x263 PUSH1 0x40
0x265 MLOAD
0x266 SWAP1
0x267 DUP2
0x268 ADD
0x269 PUSH1 0x40
0x26b MSTORE
0x26c DUP1
0x26d SWAP4
0x26e SWAP3
0x26f SWAP2
0x270 SWAP1
0x271 DUP2
0x272 DUP2
0x273 MSTORE
0x274 PUSH1 0x20
0x276 ADD
0x277 DUP4
0x278 DUP4
0x279 PUSH1 0x20
0x27b MUL
0x27c DUP1
0x27d DUP3
0x27e DUP5
0x27f CALLDATACOPY
0x280 POP
0x281 SWAP5
0x282 SWAP7
0x283 POP
0x284 PUSH2 0x600
0x287 SWAP6
0x288 POP
0x289 POP
0x28a POP
0x28b POP
0x28c POP
0x28d POP
0x28e JUMP
---
0x24b: JUMPDEST 
0x24c: V200 = 0xbc
0x24f: V201 = 0x4
0x251: V202 = 0x24
0x254: V203 = CALLDATALOAD 0x4
0x257: V204 = ADD V203 0x24
0x25a: V205 = ADD 0x4 V203
0x25b: V206 = CALLDATALOAD V205
0x25d: V207 = 0x20
0x261: V208 = MUL 0x20 V206
0x262: V209 = ADD V208 0x20
0x263: V210 = 0x40
0x265: V211 = M[0x40]
0x268: V212 = ADD V211 V209
0x269: V213 = 0x40
0x26b: M[0x40] = V212
0x273: M[V211] = V206
0x274: V214 = 0x20
0x276: V215 = ADD 0x20 V211
0x279: V216 = 0x20
0x27b: V217 = MUL 0x20 V206
0x27f: CALLDATACOPY V215 V204 V217
0x284: V218 = 0x600
0x28e: JUMP 0x600
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbc, V211]
Exit stack: [V11, 0xbc, V211]

================================

Block 0x28f
[0x28f:0x2a5]
---
Predecessors: [0xa8, 0x64e]
Successors: [0x2a6, 0x2aa]
---
0x28f JUMPDEST
0x290 PUSH1 0x0
0x292 SLOAD
0x293 ORIGIN
0x294 PUSH1 0x1
0x296 PUSH1 0xa0
0x298 PUSH1 0x2
0x29a EXP
0x29b SUB
0x29c SWAP1
0x29d DUP2
0x29e AND
0x29f SWAP2
0x2a0 AND
0x2a1 EQ
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x28f: JUMPDEST 
0x290: V219 = 0x0
0x292: V220 = S[0x0]
0x293: V221 = ORIGIN
0x294: V222 = 0x1
0x296: V223 = 0xa0
0x298: V224 = 0x2
0x29a: V225 = EXP 0x2 0xa0
0x29b: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29e: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x2a0: V228 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x2a1: V229 = EQ V228 V227
0x2a2: V230 = 0x2aa
0x2a5: JUMPI 0x2aa V229
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc, 0x65d}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc, 0x65d}, S0]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x28f]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V231 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc, 0x65d}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc, 0x65d}, S0]

================================

Block 0x2aa
[0x2aa:0x2b2]
---
Predecessors: [0x28f]
Successors: [0x583]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x2b3
0x2ae DUP2
0x2af PUSH2 0x583
0x2b2 JUMP
---
0x2aa: JUMPDEST 
0x2ab: V232 = 0x2b3
0x2af: V233 = 0x583
0x2b2: JUMP 0x583
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc, 0x65d}, S0]
Stack pops: 1
Stack additions: [S0, 0x2b3, S0]
Exit stack: [V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc, 0x65d}, S0, 0x2b3, S0]

================================

Block 0x2b3
[0x2b3:0x2b9]
---
Predecessors: [0x5fa]
Successors: [0x2ba, 0x32a]
---
0x2b3 JUMPDEST
0x2b4 ISZERO
0x2b5 ISZERO
0x2b6 PUSH2 0x32a
0x2b9 JUMPI
---
0x2b3: JUMPDEST 
0x2b4: V234 = ISZERO S0
0x2b5: V235 = ISZERO V234
0x2b6: V236 = 0x32a
0x2b9: JUMPI 0x32a V235
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xbc, 0x65d}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xbc, 0x65d}, S1]

================================

Block 0x2ba
[0x2ba:0x2f6]
---
Predecessors: [0x2b3]
Successors: [0x665]
---
0x2ba PUSH1 0x1
0x2bc DUP1
0x2bd SLOAD
0x2be PUSH1 0x1
0x2c0 PUSH1 0xa0
0x2c2 PUSH1 0x2
0x2c4 EXP
0x2c5 SUB
0x2c6 DUP4
0x2c7 AND
0x2c8 PUSH1 0x0
0x2ca SWAP1
0x2cb DUP2
0x2cc MSTORE
0x2cd PUSH1 0x2
0x2cf PUSH1 0x20
0x2d1 MSTORE
0x2d2 PUSH1 0x40
0x2d4 SWAP1
0x2d5 SHA3
0x2d6 DUP1
0x2d7 SLOAD
0x2d8 PUSH2 0xffff
0x2db NOT
0x2dc AND
0x2dd PUSH2 0xffff
0x2e0 SWAP1
0x2e1 SWAP3
0x2e2 AND
0x2e3 SWAP2
0x2e4 SWAP1
0x2e5 SWAP2
0x2e6 OR
0x2e7 SWAP1
0x2e8 SSTORE
0x2e9 DUP1
0x2ea SLOAD
0x2eb DUP1
0x2ec DUP3
0x2ed ADD
0x2ee PUSH2 0x2f7
0x2f1 DUP4
0x2f2 DUP3
0x2f3 PUSH2 0x665
0x2f6 JUMP
---
0x2ba: V237 = 0x1
0x2bd: V238 = S[0x1]
0x2be: V239 = 0x1
0x2c0: V240 = 0xa0
0x2c2: V241 = 0x2
0x2c4: V242 = EXP 0x2 0xa0
0x2c5: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c7: V244 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2c8: V245 = 0x0
0x2cc: M[0x0] = V244
0x2cd: V246 = 0x2
0x2cf: V247 = 0x20
0x2d1: M[0x20] = 0x2
0x2d2: V248 = 0x40
0x2d5: V249 = SHA3 0x0 0x40
0x2d7: V250 = S[V249]
0x2d8: V251 = 0xffff
0x2db: V252 = NOT 0xffff
0x2dc: V253 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 V250
0x2dd: V254 = 0xffff
0x2e2: V255 = AND V238 0xffff
0x2e6: V256 = OR V255 V253
0x2e8: S[V249] = V256
0x2ea: V257 = S[0x1]
0x2ed: V258 = ADD 0x1 V257
0x2ee: V259 = 0x2f7
0x2f3: V260 = 0x665
0x2f6: JUMP 0x665
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xbc, 0x65d}, S0]
Stack pops: 1
Stack additions: [S0, 0x1, V257, V258, 0x2f7, 0x1, V258]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xbc, 0x65d}, S0, 0x1, V257, V258, 0x2f7, 0x1, V258]

================================

Block 0x2f7
[0x2f7:0x329]
---
Predecessors: [0x45f]
Successors: [0x32a]
---
0x2f7 JUMPDEST
0x2f8 POP
0x2f9 PUSH1 0x0
0x2fb SWAP2
0x2fc DUP3
0x2fd MSTORE
0x2fe PUSH1 0x20
0x300 SWAP1
0x301 SWAP2
0x302 SHA3
0x303 ADD
0x304 DUP1
0x305 SLOAD
0x306 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31b NOT
0x31c AND
0x31d PUSH1 0x1
0x31f PUSH1 0xa0
0x321 PUSH1 0x2
0x323 EXP
0x324 SUB
0x325 DUP4
0x326 AND
0x327 OR
0x328 SWAP1
0x329 SSTORE
---
0x2f7: JUMPDEST 
0x2f9: V261 = 0x0
0x2fd: M[0x0] = S2
0x2fe: V262 = 0x20
0x302: V263 = SHA3 0x0 0x20
0x303: V264 = ADD V263 S1
0x305: V265 = S[V264]
0x306: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V267 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V268 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V265
0x31d: V269 = 0x1
0x31f: V270 = 0xa0
0x321: V271 = 0x2
0x323: V272 = EXP 0x2 0xa0
0x324: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x326: V274 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x327: V275 = OR V274 V268
0x329: S[V264] = V275
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x32a
[0x32a:0x32c]
---
Predecessors: [0x2b3, 0x2f7]
Successors: [0xbc, 0x540, 0x65d]
---
0x32a JUMPDEST
0x32b POP
0x32c JUMP
---
0x32a: JUMPDEST 
0x32c: JUMP S1
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x32d
[0x32d:0x346]
---
Predecessors: [0xc9, 0x531]
Successors: [0x347, 0x34b]
---
0x32d JUMPDEST
0x32e PUSH1 0x0
0x330 DUP1
0x331 SLOAD
0x332 DUP2
0x333 SWAP1
0x334 ORIGIN
0x335 PUSH1 0x1
0x337 PUSH1 0xa0
0x339 PUSH1 0x2
0x33b EXP
0x33c SUB
0x33d SWAP1
0x33e DUP2
0x33f AND
0x340 SWAP2
0x341 AND
0x342 EQ
0x343 PUSH2 0x34b
0x346 JUMPI
---
0x32d: JUMPDEST 
0x32e: V276 = 0x0
0x331: V277 = S[0x0]
0x334: V278 = ORIGIN
0x335: V279 = 0x1
0x337: V280 = 0xa0
0x339: V281 = 0x2
0x33b: V282 = EXP 0x2 0xa0
0x33c: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33f: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x341: V285 = AND V277 0xffffffffffffffffffffffffffffffffffffffff
0x342: V286 = EQ V285 V284
0x343: V287 = 0x34b
0x346: JUMPI 0x34b V286
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc, 0x540}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc, 0x540}, S0, 0x0, 0x0]

================================

Block 0x347
[0x347:0x34a]
---
Predecessors: [0x32d]
Successors: []
---
0x347 PUSH1 0x0
0x349 DUP1
0x34a REVERT
---
0x347: V288 = 0x0
0x34a: REVERT 0x0 0x0
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0xbc, 0x540}, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0xbc, 0x540}, S2, 0x0, 0x0]

================================

Block 0x34b
[0x34b:0x353]
---
Predecessors: [0x32d]
Successors: [0x583]
---
0x34b JUMPDEST
0x34c PUSH2 0x354
0x34f DUP4
0x350 PUSH2 0x583
0x353 JUMP
---
0x34b: JUMPDEST 
0x34c: V289 = 0x354
0x350: V290 = 0x583
0x353: JUMP 0x583
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0xbc, 0x540}, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x354, S2]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0xbc, 0x540}, S2, 0x0, 0x0, 0x354, S2]

================================

Block 0x354
[0x354:0x359]
---
Predecessors: [0x5fa]
Successors: [0x35a, 0x45f]
---
0x354 JUMPDEST
0x355 ISZERO
0x356 PUSH2 0x45f
0x359 JUMPI
---
0x354: JUMPDEST 
0x355: V291 = ISZERO S0
0x356: V292 = 0x45f
0x359: JUMPI 0x45f V291
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xbc, 0x65d}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0xbc, 0x65d}, S1]

================================

Block 0x35a
[0x35a:0x383]
---
Predecessors: [0x354]
Successors: [0x384]
---
0x35a POP
0x35b POP
0x35c PUSH1 0x1
0x35e PUSH1 0xa0
0x360 PUSH1 0x2
0x362 EXP
0x363 SUB
0x364 DUP2
0x365 AND
0x366 PUSH1 0x0
0x368 SWAP1
0x369 DUP2
0x36a MSTORE
0x36b PUSH1 0x2
0x36d PUSH1 0x20
0x36f MSTORE
0x370 PUSH1 0x40
0x372 SWAP1
0x373 SHA3
0x374 DUP1
0x375 SLOAD
0x376 PUSH2 0xffff
0x379 NOT
0x37a DUP2
0x37b AND
0x37c SWAP1
0x37d SWAP2
0x37e SSTORE
0x37f PUSH2 0xffff
0x382 AND
0x383 DUP1
---
0x35c: V293 = 0x1
0x35e: V294 = 0xa0
0x360: V295 = 0x2
0x362: V296 = EXP 0x2 0xa0
0x363: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x365: V298 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x366: V299 = 0x0
0x36a: M[0x0] = V298
0x36b: V300 = 0x2
0x36d: V301 = 0x20
0x36f: M[0x20] = 0x2
0x370: V302 = 0x40
0x373: V303 = SHA3 0x0 0x40
0x375: V304 = S[V303]
0x376: V305 = 0xffff
0x379: V306 = NOT 0xffff
0x37b: V307 = AND V304 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000
0x37e: S[V303] = V307
0x37f: V308 = 0xffff
0x382: V309 = AND 0xffff V304
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0xbc, 0x65d}, S0]
Stack pops: 3
Stack additions: [S2, V309, V309]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V309, V309]

================================

Block 0x384
[0x384:0x396]
---
Predecessors: [0x35a, 0x3d4]
Successors: [0x397, 0x412]
---
0x384 JUMPDEST
0x385 PUSH1 0x1
0x387 SLOAD
0x388 PUSH1 0x0
0x38a NOT
0x38b ADD
0x38c PUSH2 0xffff
0x38f DUP3
0x390 AND
0x391 LT
0x392 ISZERO
0x393 PUSH2 0x412
0x396 JUMPI
---
0x384: JUMPDEST 
0x385: V310 = 0x1
0x387: V311 = S[0x1]
0x388: V312 = 0x0
0x38a: V313 = NOT 0x0
0x38b: V314 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V311
0x38c: V315 = 0xffff
0x390: V316 = AND S0 0xffff
0x391: V317 = LT V316 V314
0x392: V318 = ISZERO V317
0x393: V319 = 0x412
0x396: JUMPI 0x412 V318
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V309, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V309, S0]

================================

Block 0x397
[0x397:0x3a8]
---
Predecessors: [0x384]
Successors: [0x3a9, 0x3aa]
---
0x397 PUSH1 0x1
0x399 DUP1
0x39a SLOAD
0x39b PUSH2 0xffff
0x39e DUP4
0x39f DUP4
0x3a0 ADD
0x3a1 AND
0x3a2 SWAP1
0x3a3 DUP2
0x3a4 LT
0x3a5 PUSH2 0x3aa
0x3a8 JUMPI
---
0x397: V320 = 0x1
0x39a: V321 = S[0x1]
0x39b: V322 = 0xffff
0x3a0: V323 = ADD 0x1 S0
0x3a1: V324 = AND V323 0xffff
0x3a4: V325 = LT V324 V321
0x3a5: V326 = 0x3aa
0x3a8: JUMPI 0x3aa V325
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V309, S0]
Stack pops: 1
Stack additions: [S0, 0x1, V324]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V309, S0, 0x1, V324]

================================

Block 0x3a9
[0x3a9:0x3a9]
---
Predecessors: [0x397]
Successors: []
---
0x3a9 INVALID
---
0x3a9: INVALID 
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V309, S2, 0x1, V324]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V309, S2, 0x1, V324]

================================

Block 0x3aa
[0x3aa:0x3d2]
---
Predecessors: [0x397]
Successors: [0x3d3, 0x3d4]
---
0x3aa JUMPDEST
0x3ab PUSH1 0x0
0x3ad SWAP2
0x3ae DUP3
0x3af MSTORE
0x3b0 PUSH1 0x20
0x3b2 SWAP1
0x3b3 SWAP2
0x3b4 SHA3
0x3b5 ADD
0x3b6 SLOAD
0x3b7 PUSH1 0x1
0x3b9 DUP1
0x3ba SLOAD
0x3bb PUSH1 0x1
0x3bd PUSH1 0xa0
0x3bf PUSH1 0x2
0x3c1 EXP
0x3c2 SUB
0x3c3 SWAP1
0x3c4 SWAP3
0x3c5 AND
0x3c6 SWAP2
0x3c7 PUSH2 0xffff
0x3ca DUP5
0x3cb AND
0x3cc SWAP1
0x3cd DUP2
0x3ce LT
0x3cf PUSH2 0x3d4
0x3d2 JUMPI
---
0x3aa: JUMPDEST 
0x3ab: V327 = 0x0
0x3af: M[0x0] = 0x1
0x3b0: V328 = 0x20
0x3b4: V329 = SHA3 0x0 0x20
0x3b5: V330 = ADD V329 V324
0x3b6: V331 = S[V330]
0x3b7: V332 = 0x1
0x3ba: V333 = S[0x1]
0x3bb: V334 = 0x1
0x3bd: V335 = 0xa0
0x3bf: V336 = 0x2
0x3c1: V337 = EXP 0x2 0xa0
0x3c2: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c5: V339 = AND V331 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: V340 = 0xffff
0x3cb: V341 = AND S2 0xffff
0x3ce: V342 = LT V341 V333
0x3cf: V343 = 0x3d4
0x3d2: JUMPI 0x3d4 V342
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V309, S2, 0x1, V324]
Stack pops: 3
Stack additions: [S2, V339, 0x1, V341]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V309, S2, V339, 0x1, V341]

================================

Block 0x3d3
[0x3d3:0x3d3]
---
Predecessors: [0x3aa]
Successors: []
---
0x3d3 INVALID
---
0x3d3: INVALID 
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V309, S3, V339, 0x1, V341]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V309, S3, V339, 0x1, V341]

================================

Block 0x3d4
[0x3d4:0x411]
---
Predecessors: [0x3aa]
Successors: [0x384]
---
0x3d4 JUMPDEST
0x3d5 PUSH1 0x0
0x3d7 SWAP2
0x3d8 DUP3
0x3d9 MSTORE
0x3da PUSH1 0x20
0x3dc SWAP1
0x3dd SWAP2
0x3de SHA3
0x3df ADD
0x3e0 DUP1
0x3e1 SLOAD
0x3e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f7 NOT
0x3f8 AND
0x3f9 PUSH1 0x1
0x3fb PUSH1 0xa0
0x3fd PUSH1 0x2
0x3ff EXP
0x400 SUB
0x401 SWAP3
0x402 SWAP1
0x403 SWAP3
0x404 AND
0x405 SWAP2
0x406 SWAP1
0x407 SWAP2
0x408 OR
0x409 SWAP1
0x40a SSTORE
0x40b PUSH1 0x1
0x40d ADD
0x40e PUSH2 0x384
0x411 JUMP
---
0x3d4: JUMPDEST 
0x3d5: V344 = 0x0
0x3d9: M[0x0] = 0x1
0x3da: V345 = 0x20
0x3de: V346 = SHA3 0x0 0x20
0x3df: V347 = ADD V346 V341
0x3e1: V348 = S[V347]
0x3e2: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f7: V350 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V351 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V348
0x3f9: V352 = 0x1
0x3fb: V353 = 0xa0
0x3fd: V354 = 0x2
0x3ff: V355 = EXP 0x2 0xa0
0x400: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x404: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x408: V358 = OR V357 V351
0x40a: S[V347] = V358
0x40b: V359 = 0x1
0x40d: V360 = ADD 0x1 S3
0x40e: V361 = 0x384
0x411: JUMP 0x384
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V309, S3, V339, 0x1, V341]
Stack pops: 4
Stack additions: [V360]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V309, V360]

================================

Block 0x412
[0x412:0x422]
---
Predecessors: [0x384]
Successors: [0x423, 0x424]
---
0x412 JUMPDEST
0x413 PUSH1 0x1
0x415 DUP1
0x416 SLOAD
0x417 PUSH1 0x0
0x419 NOT
0x41a DUP2
0x41b ADD
0x41c SWAP1
0x41d DUP2
0x41e LT
0x41f PUSH2 0x424
0x422 JUMPI
---
0x412: JUMPDEST 
0x413: V362 = 0x1
0x416: V363 = S[0x1]
0x417: V364 = 0x0
0x419: V365 = NOT 0x0
0x41b: V366 = ADD V363 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x41e: V367 = LT V366 V363
0x41f: V368 = 0x424
0x422: JUMPI 0x424 V367
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V309, S0]
Stack pops: 0
Stack additions: [0x1, V366]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V309, S0, 0x1, V366]

================================

Block 0x423
[0x423:0x423]
---
Predecessors: [0x412]
Successors: []
---
0x423 INVALID
---
0x423: INVALID 
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V309, S2, 0x1, V366]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V309, S2, 0x1, V366]

================================

Block 0x424
[0x424:0x45c]
---
Predecessors: [0x412]
Successors: [0x665]
---
0x424 JUMPDEST
0x425 PUSH1 0x0
0x427 SWAP2
0x428 DUP3
0x429 MSTORE
0x42a PUSH1 0x20
0x42c SWAP1
0x42d SWAP2
0x42e SHA3
0x42f ADD
0x430 DUP1
0x431 SLOAD
0x432 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x447 NOT
0x448 AND
0x449 SWAP1
0x44a SSTORE
0x44b PUSH1 0x1
0x44d DUP1
0x44e SLOAD
0x44f SWAP1
0x450 PUSH2 0x45d
0x453 SWAP1
0x454 PUSH1 0x0
0x456 NOT
0x457 DUP4
0x458 ADD
0x459 PUSH2 0x665
0x45c JUMP
---
0x424: JUMPDEST 
0x425: V369 = 0x0
0x429: M[0x0] = 0x1
0x42a: V370 = 0x20
0x42e: V371 = SHA3 0x0 0x20
0x42f: V372 = ADD V371 V366
0x431: V373 = S[V372]
0x432: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x447: V375 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x448: V376 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V373
0x44a: S[V372] = V376
0x44b: V377 = 0x1
0x44e: V378 = S[0x1]
0x450: V379 = 0x45d
0x454: V380 = 0x0
0x456: V381 = NOT 0x0
0x458: V382 = ADD V378 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x459: V383 = 0x665
0x45c: JUMP 0x665
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V309, S2, 0x1, V366]
Stack pops: 2
Stack additions: [V378, 0x45d, 0x1, V382]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V309, S2, V378, 0x45d, 0x1, V382]

================================

Block 0x45d
[0x45d:0x45e]
---
Predecessors: [0x45f]
Successors: [0x45f]
---
0x45d JUMPDEST
0x45e POP
---
0x45d: JUMPDEST 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x45f
[0x45f:0x463]
---
Predecessors: [0x354, 0x45d, 0x4e0, 0x665]
Successors: [0xbc, 0x2f7, 0x45d, 0x540, 0x65d]
---
0x45f JUMPDEST
0x460 POP
0x461 POP
0x462 POP
0x463 JUMP
---
0x45f: JUMPDEST 
0x463: JUMP S3
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x464
[0x464:0x479]
---
Predecessors: [0xe8]
Successors: [0xfc]
---
0x464 JUMPDEST
0x465 PUSH1 0x2
0x467 PUSH1 0x20
0x469 MSTORE
0x46a PUSH1 0x0
0x46c SWAP1
0x46d DUP2
0x46e MSTORE
0x46f PUSH1 0x40
0x471 SWAP1
0x472 SHA3
0x473 SLOAD
0x474 PUSH2 0xffff
0x477 AND
0x478 DUP2
0x479 JUMP
---
0x464: JUMPDEST 
0x465: V384 = 0x2
0x467: V385 = 0x20
0x469: M[0x20] = 0x2
0x46a: V386 = 0x0
0x46e: M[0x0] = V80
0x46f: V387 = 0x40
0x472: V388 = SHA3 0x0 0x40
0x473: V389 = S[V388]
0x474: V390 = 0xffff
0x477: V391 = AND 0xffff V389
0x479: JUMP 0xfc
---
Entry stack: [V11, 0xfc, V80]
Stack pops: 2
Stack additions: [S1, V391]
Exit stack: [V11, 0xfc, V391]

================================

Block 0x47a
[0x47a:0x481]
---
Predecessors: [0x11e]
Successors: [0x689]
---
0x47a JUMPDEST
0x47b PUSH2 0x482
0x47e PUSH2 0x689
0x481 JUMP
---
0x47a: JUMPDEST 
0x47b: V392 = 0x482
0x47e: V393 = 0x689
0x481: JUMP 0x689
---
Entry stack: [V11, 0x126]
Stack pops: 0
Stack additions: [0x482]
Exit stack: [V11, 0x126, 0x482]

================================

Block 0x482
[0x482:0x4a9]
---
Predecessors: [0x689]
Successors: [0x4aa, 0x4d8]
---
0x482 JUMPDEST
0x483 PUSH1 0x1
0x485 DUP1
0x486 SLOAD
0x487 DUP1
0x488 PUSH1 0x20
0x48a MUL
0x48b PUSH1 0x20
0x48d ADD
0x48e PUSH1 0x40
0x490 MLOAD
0x491 SWAP1
0x492 DUP2
0x493 ADD
0x494 PUSH1 0x40
0x496 MSTORE
0x497 DUP1
0x498 SWAP3
0x499 SWAP2
0x49a SWAP1
0x49b DUP2
0x49c DUP2
0x49d MSTORE
0x49e PUSH1 0x20
0x4a0 ADD
0x4a1 DUP3
0x4a2 DUP1
0x4a3 SLOAD
0x4a4 DUP1
0x4a5 ISZERO
0x4a6 PUSH2 0x4d8
0x4a9 JUMPI
---
0x482: JUMPDEST 
0x483: V394 = 0x1
0x486: V395 = S[0x1]
0x488: V396 = 0x20
0x48a: V397 = MUL 0x20 V395
0x48b: V398 = 0x20
0x48d: V399 = ADD 0x20 V397
0x48e: V400 = 0x40
0x490: V401 = M[0x40]
0x493: V402 = ADD V401 V399
0x494: V403 = 0x40
0x496: M[0x40] = V402
0x49d: M[V401] = V395
0x49e: V404 = 0x20
0x4a0: V405 = ADD 0x20 V401
0x4a3: V406 = S[0x1]
0x4a5: V407 = ISZERO V406
0x4a6: V408 = 0x4d8
0x4a9: JUMPI 0x4d8 V407
---
Entry stack: [V11, 0x126, V601]
Stack pops: 0
Stack additions: [V401, 0x1, V395, V405, 0x1, V406]
Exit stack: [V11, 0x126, V601, V401, 0x1, V395, V405, 0x1, V406]

================================

Block 0x4aa
[0x4aa:0x4b9]
---
Predecessors: [0x482]
Successors: [0x4ba]
---
0x4aa PUSH1 0x20
0x4ac MUL
0x4ad DUP3
0x4ae ADD
0x4af SWAP2
0x4b0 SWAP1
0x4b1 PUSH1 0x0
0x4b3 MSTORE
0x4b4 PUSH1 0x20
0x4b6 PUSH1 0x0
0x4b8 SHA3
0x4b9 SWAP1
---
0x4aa: V409 = 0x20
0x4ac: V410 = MUL 0x20 V406
0x4ae: V411 = ADD V405 V410
0x4b1: V412 = 0x0
0x4b3: M[0x0] = 0x1
0x4b4: V413 = 0x20
0x4b6: V414 = 0x0
0x4b8: V415 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x126, V601, V401, 0x1, V395, V405, 0x1, V406]
Stack pops: 3
Stack additions: [V411, V415, S2]
Exit stack: [V11, 0x126, V601, V401, 0x1, V395, V411, V415, V405]

================================

Block 0x4ba
[0x4ba:0x4d7]
---
Predecessors: [0x4aa, 0x4ba]
Successors: [0x4ba, 0x4d8]
---
0x4ba JUMPDEST
0x4bb DUP2
0x4bc SLOAD
0x4bd PUSH1 0x1
0x4bf PUSH1 0xa0
0x4c1 PUSH1 0x2
0x4c3 EXP
0x4c4 SUB
0x4c5 AND
0x4c6 DUP2
0x4c7 MSTORE
0x4c8 PUSH1 0x1
0x4ca SWAP1
0x4cb SWAP2
0x4cc ADD
0x4cd SWAP1
0x4ce PUSH1 0x20
0x4d0 ADD
0x4d1 DUP1
0x4d2 DUP4
0x4d3 GT
0x4d4 PUSH2 0x4ba
0x4d7 JUMPI
---
0x4ba: JUMPDEST 
0x4bc: V416 = S[S1]
0x4bd: V417 = 0x1
0x4bf: V418 = 0xa0
0x4c1: V419 = 0x2
0x4c3: V420 = EXP 0x2 0xa0
0x4c4: V421 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c5: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x4c7: M[S0] = V422
0x4c8: V423 = 0x1
0x4cc: V424 = ADD S1 0x1
0x4ce: V425 = 0x20
0x4d0: V426 = ADD 0x20 S0
0x4d3: V427 = GT V411 V426
0x4d4: V428 = 0x4ba
0x4d7: JUMPI 0x4ba V427
---
Entry stack: [V11, 0x126, V601, V401, 0x1, V395, V411, S1, S0]
Stack pops: 3
Stack additions: [S2, V424, V426]
Exit stack: [V11, 0x126, V601, V401, 0x1, V395, V411, V424, V426]

================================

Block 0x4d8
[0x4d8:0x4df]
---
Predecessors: [0x482, 0x4ba]
Successors: [0x4e0]
---
0x4d8 JUMPDEST
0x4d9 POP
0x4da POP
0x4db POP
0x4dc POP
0x4dd POP
0x4de SWAP1
0x4df POP
---
0x4d8: JUMPDEST 
---
Entry stack: [V11, 0x126, V601, V401, 0x1, V395, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V11, 0x126, V401]

================================

Block 0x4e0
[0x4e0:0x4e2]
---
Predecessors: [0x4d8, 0x6b5]
Successors: [0x126, 0x45f]
---
0x4e0 JUMPDEST
0x4e1 SWAP1
0x4e2 JUMP
---
0x4e0: JUMPDEST 
0x4e2: JUMP {0x126, 0x45f}
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x2f7, 0x45d}, 0x1, S2, {0x126, 0x45f}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x2f7, 0x45d}, 0x1, S2, S0]

================================

Block 0x4e3
[0x4e3:0x4fa]
---
Predecessors: [0x184]
Successors: [0x4fb, 0x4ff]
---
0x4e3 JUMPDEST
0x4e4 PUSH1 0x0
0x4e6 DUP1
0x4e7 SLOAD
0x4e8 ORIGIN
0x4e9 PUSH1 0x1
0x4eb PUSH1 0xa0
0x4ed PUSH1 0x2
0x4ef EXP
0x4f0 SUB
0x4f1 SWAP1
0x4f2 DUP2
0x4f3 AND
0x4f4 SWAP2
0x4f5 AND
0x4f6 EQ
0x4f7 PUSH2 0x4ff
0x4fa JUMPI
---
0x4e3: JUMPDEST 
0x4e4: V429 = 0x0
0x4e7: V430 = S[0x0]
0x4e8: V431 = ORIGIN
0x4e9: V432 = 0x1
0x4eb: V433 = 0xa0
0x4ed: V434 = 0x2
0x4ef: V435 = EXP 0x2 0xa0
0x4f0: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f3: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x4f5: V438 = AND V430 0xffffffffffffffffffffffffffffffffffffffff
0x4f6: V439 = EQ V438 V437
0x4f7: V440 = 0x4ff
0x4fa: JUMPI 0x4ff V439
---
Entry stack: [V11, 0xbc, V138]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xbc, V138, 0x0]

================================

Block 0x4fb
[0x4fb:0x4fe]
---
Predecessors: [0x4e3]
Successors: []
---
0x4fb PUSH1 0x0
0x4fd DUP1
0x4fe REVERT
---
0x4fb: V441 = 0x0
0x4fe: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V138, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V138, 0x0]

================================

Block 0x4ff
[0x4ff:0x50a]
---
Predecessors: [0x4e3]
Successors: [0x50b, 0x50f]
---
0x4ff JUMPDEST
0x500 PUSH2 0x100
0x503 DUP3
0x504 MLOAD
0x505 GT
0x506 ISZERO
0x507 PUSH2 0x50f
0x50a JUMPI
---
0x4ff: JUMPDEST 
0x500: V442 = 0x100
0x504: V443 = M[V138]
0x505: V444 = GT V443 0x100
0x506: V445 = ISZERO V444
0x507: V446 = 0x50f
0x50a: JUMPI 0x50f V445
---
Entry stack: [V11, 0xbc, V138, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xbc, V138, 0x0]

================================

Block 0x50b
[0x50b:0x50e]
---
Predecessors: [0x4ff]
Successors: []
---
0x50b PUSH1 0x0
0x50d DUP1
0x50e REVERT
---
0x50b: V447 = 0x0
0x50e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V138, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V138, 0x0]

================================

Block 0x50f
[0x50f:0x512]
---
Predecessors: [0x4ff]
Successors: [0x513]
---
0x50f JUMPDEST
0x510 POP
0x511 PUSH1 0x0
---
0x50f: JUMPDEST 
0x511: V448 = 0x0
---
Entry stack: [V11, 0xbc, V138, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0xbc, V138, 0x0]

================================

Block 0x513
[0x513:0x51f]
---
Predecessors: [0x50f, 0x540]
Successors: [0x520, 0x548]
---
0x513 JUMPDEST
0x514 DUP2
0x515 MLOAD
0x516 DUP2
0x517 PUSH1 0xff
0x519 AND
0x51a LT
0x51b ISZERO
0x51c PUSH2 0x548
0x51f JUMPI
---
0x513: JUMPDEST 
0x515: V449 = M[S1]
0x517: V450 = 0xff
0x519: V451 = AND 0xff S0
0x51a: V452 = LT V451 V449
0x51b: V453 = ISZERO V452
0x51c: V454 = 0x548
0x51f: JUMPI 0x548 V453
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x520
[0x520:0x52f]
---
Predecessors: [0x513]
Successors: [0x530, 0x531]
---
0x520 PUSH2 0x540
0x523 DUP3
0x524 DUP3
0x525 PUSH1 0xff
0x527 AND
0x528 DUP2
0x529 MLOAD
0x52a DUP2
0x52b LT
0x52c PUSH2 0x531
0x52f JUMPI
---
0x520: V455 = 0x540
0x525: V456 = 0xff
0x527: V457 = AND 0xff S0
0x529: V458 = M[S1]
0x52b: V459 = LT V457 V458
0x52c: V460 = 0x531
0x52f: JUMPI 0x531 V459
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x540, S1, V457]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x540, S1, V457]

================================

Block 0x530
[0x530:0x530]
---
Predecessors: [0x520]
Successors: []
---
0x530 INVALID
---
0x530: INVALID 
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x540, S1, V457]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x540, S1, V457]

================================

Block 0x531
[0x531:0x53f]
---
Predecessors: [0x520]
Successors: [0x32d]
---
0x531 JUMPDEST
0x532 SWAP1
0x533 PUSH1 0x20
0x535 ADD
0x536 SWAP1
0x537 PUSH1 0x20
0x539 MUL
0x53a ADD
0x53b MLOAD
0x53c PUSH2 0x32d
0x53f JUMP
---
0x531: JUMPDEST 
0x533: V461 = 0x20
0x535: V462 = ADD 0x20 S1
0x537: V463 = 0x20
0x539: V464 = MUL 0x20 V457
0x53a: V465 = ADD V464 V462
0x53b: V466 = M[V465]
0x53c: V467 = 0x32d
0x53f: JUMP 0x32d
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x540, S1, V457]
Stack pops: 2
Stack additions: [V466]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x540, V466]

================================

Block 0x540
[0x540:0x547]
---
Predecessors: [0x32a, 0x45f, 0x548]
Successors: [0x513]
---
0x540 JUMPDEST
0x541 PUSH1 0x1
0x543 ADD
0x544 PUSH2 0x513
0x547 JUMP
---
0x540: JUMPDEST 
0x541: V468 = 0x1
0x543: V469 = ADD 0x1 S0
0x544: V470 = 0x513
0x547: JUMP 0x513
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V469]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V469]

================================

Block 0x548
[0x548:0x54b]
---
Predecessors: [0x513, 0x630]
Successors: [0xbc, 0x540, 0x65d]
---
0x548 JUMPDEST
0x549 POP
0x54a POP
0x54b JUMP
---
0x548: JUMPDEST 
0x54b: JUMP S2
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x54c
[0x54c:0x558]
---
Predecessors: [0x1d3]
Successors: [0x559, 0x55a]
---
0x54c JUMPDEST
0x54d PUSH1 0x1
0x54f DUP1
0x550 SLOAD
0x551 DUP3
0x552 SWAP1
0x553 DUP2
0x554 LT
0x555 PUSH2 0x55a
0x558 JUMPI
---
0x54c: JUMPDEST 
0x54d: V471 = 0x1
0x550: V472 = S[0x1]
0x554: V473 = LT V152 V472
0x555: V474 = 0x55a
0x558: JUMPI 0x55a V473
---
Entry stack: [V11, 0x1de, V152]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0x1de, V152, 0x1, V152]

================================

Block 0x559
[0x559:0x559]
---
Predecessors: [0x54c]
Successors: []
---
0x559 INVALID
---
0x559: INVALID 
---
Entry stack: [V11, 0x1de, V152, 0x1, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1de, V152, 0x1, V152]

================================

Block 0x55a
[0x55a:0x573]
---
Predecessors: [0x54c]
Successors: [0x1de]
---
0x55a JUMPDEST
0x55b PUSH1 0x0
0x55d SWAP2
0x55e DUP3
0x55f MSTORE
0x560 PUSH1 0x20
0x562 SWAP1
0x563 SWAP2
0x564 SHA3
0x565 ADD
0x566 SLOAD
0x567 PUSH1 0x1
0x569 PUSH1 0xa0
0x56b PUSH1 0x2
0x56d EXP
0x56e SUB
0x56f AND
0x570 SWAP1
0x571 POP
0x572 DUP2
0x573 JUMP
---
0x55a: JUMPDEST 
0x55b: V475 = 0x0
0x55f: M[0x0] = 0x1
0x560: V476 = 0x20
0x564: V477 = SHA3 0x0 0x20
0x565: V478 = ADD V477 V152
0x566: V479 = S[V478]
0x567: V480 = 0x1
0x569: V481 = 0xa0
0x56b: V482 = 0x2
0x56d: V483 = EXP 0x2 0xa0
0x56e: V484 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56f: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x573: JUMP 0x1de
---
Entry stack: [V11, 0x1de, V152, 0x1, V152]
Stack pops: 4
Stack additions: [S3, V485]
Exit stack: [V11, 0x1de, V485]

================================

Block 0x574
[0x574:0x582]
---
Predecessors: [0x205]
Successors: [0x1de]
---
0x574 JUMPDEST
0x575 PUSH1 0x0
0x577 SLOAD
0x578 PUSH1 0x1
0x57a PUSH1 0xa0
0x57c PUSH1 0x2
0x57e EXP
0x57f SUB
0x580 AND
0x581 DUP2
0x582 JUMP
---
0x574: JUMPDEST 
0x575: V486 = 0x0
0x577: V487 = S[0x0]
0x578: V488 = 0x1
0x57a: V489 = 0xa0
0x57c: V490 = 0x2
0x57e: V491 = EXP 0x2 0xa0
0x57f: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x580: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x582: JUMP 0x1de
---
Entry stack: [V11, 0x1de]
Stack pops: 1
Stack additions: [S0, V493]
Exit stack: [V11, 0x1de, V493]

================================

Block 0x583
[0x583:0x592]
---
Predecessors: [0x218, 0x2aa, 0x34b]
Successors: [0x593, 0x5fa]
---
0x583 JUMPDEST
0x584 PUSH1 0x1
0x586 SLOAD
0x587 PUSH1 0x0
0x589 SWAP1
0x58a DUP2
0x58b SWAP1
0x58c GT
0x58d DUP1
0x58e ISZERO
0x58f PUSH2 0x5fa
0x592 JUMPI
---
0x583: JUMPDEST 
0x584: V494 = 0x1
0x586: V495 = S[0x1]
0x587: V496 = 0x0
0x58c: V497 = GT V495 0x0
0x58e: V498 = ISZERO V497
0x58f: V499 = 0x5fa
0x592: JUMPI 0x5fa V498
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0xbc, 0x65d}, S2, {0x22c, 0x2b3, 0x354}, S0]
Stack pops: 0
Stack additions: [0x0, V497]
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0xbc, 0x65d}, S2, {0x22c, 0x2b3, 0x354}, S0, 0x0, V497]

================================

Block 0x593
[0x593:0x5b6]
---
Predecessors: [0x583]
Successors: [0x5b7, 0x5fa]
---
0x593 POP
0x594 PUSH1 0x1
0x596 PUSH1 0xa0
0x598 PUSH1 0x2
0x59a EXP
0x59b SUB
0x59c DUP3
0x59d AND
0x59e PUSH1 0x0
0x5a0 SWAP1
0x5a1 DUP2
0x5a2 MSTORE
0x5a3 PUSH1 0x2
0x5a5 PUSH1 0x20
0x5a7 MSTORE
0x5a8 PUSH1 0x40
0x5aa DUP2
0x5ab SHA3
0x5ac SLOAD
0x5ad PUSH2 0xffff
0x5b0 AND
0x5b1 GT
0x5b2 DUP1
0x5b3 PUSH2 0x5fa
0x5b6 JUMPI
---
0x594: V500 = 0x1
0x596: V501 = 0xa0
0x598: V502 = 0x2
0x59a: V503 = EXP 0x2 0xa0
0x59b: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59d: V505 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V506 = 0x0
0x5a2: M[0x0] = V505
0x5a3: V507 = 0x2
0x5a5: V508 = 0x20
0x5a7: M[0x20] = 0x2
0x5a8: V509 = 0x40
0x5ab: V510 = SHA3 0x0 0x40
0x5ac: V511 = S[V510]
0x5ad: V512 = 0xffff
0x5b0: V513 = AND 0xffff V511
0x5b1: V514 = GT V513 0x0
0x5b3: V515 = 0x5fa
0x5b6: JUMPI 0x5fa V514
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0xbc, 0x65d}, S4, {0x22c, 0x2b3, 0x354}, S2, 0x0, V497]
Stack pops: 3
Stack additions: [S2, S1, V514]
Exit stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0xbc, 0x65d}, S4, {0x22c, 0x2b3, 0x354}, S2, 0x0, V514]

================================

Block 0x5b7
[0x5b7:0x5e1]
---
Predecessors: [0x593]
Successors: [0x5e2, 0x5e3]
---
0x5b7 POP
0x5b8 PUSH1 0x1
0x5ba PUSH1 0xa0
0x5bc PUSH1 0x2
0x5be EXP
0x5bf SUB
0x5c0 DUP3
0x5c1 AND
0x5c2 PUSH1 0x0
0x5c4 DUP2
0x5c5 DUP2
0x5c6 MSTORE
0x5c7 PUSH1 0x2
0x5c9 PUSH1 0x20
0x5cb MSTORE
0x5cc PUSH1 0x40
0x5ce SWAP1
0x5cf SHA3
0x5d0 SLOAD
0x5d1 PUSH1 0x1
0x5d3 DUP1
0x5d4 SLOAD
0x5d5 SWAP1
0x5d6 SWAP2
0x5d7 PUSH2 0xffff
0x5da AND
0x5db SWAP1
0x5dc DUP2
0x5dd LT
0x5de PUSH2 0x5e3
0x5e1 JUMPI
---
0x5b8: V516 = 0x1
0x5ba: V517 = 0xa0
0x5bc: V518 = 0x2
0x5be: V519 = EXP 0x2 0xa0
0x5bf: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c1: V521 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x5c2: V522 = 0x0
0x5c6: M[0x0] = V521
0x5c7: V523 = 0x2
0x5c9: V524 = 0x20
0x5cb: M[0x20] = 0x2
0x5cc: V525 = 0x40
0x5cf: V526 = SHA3 0x0 0x40
0x5d0: V527 = S[V526]
0x5d1: V528 = 0x1
0x5d4: V529 = S[0x1]
0x5d7: V530 = 0xffff
0x5da: V531 = AND 0xffff V527
0x5dd: V532 = LT V531 V529
0x5de: V533 = 0x5e3
0x5e1: JUMPI 0x5e3 V532
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0xbc, 0x65d}, S4, {0x22c, 0x2b3, 0x354}, S2, 0x0, V514]
Stack pops: 3
Stack additions: [S2, S1, V521, 0x1, V531]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0xbc, 0x65d}, S4, {0x22c, 0x2b3, 0x354}, S2, 0x0, V521, 0x1, V531]

================================

Block 0x5e2
[0x5e2:0x5e2]
---
Predecessors: [0x5b7]
Successors: []
---
0x5e2 INVALID
---
0x5e2: INVALID 
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0xbc, 0x65d}, S6, {0x22c, 0x2b3, 0x354}, S4, 0x0, V521, 0x1, V531]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0xbc, 0x65d}, S6, {0x22c, 0x2b3, 0x354}, S4, 0x0, V521, 0x1, V531]

================================

Block 0x5e3
[0x5e3:0x5f9]
---
Predecessors: [0x5b7]
Successors: [0x5fa]
---
0x5e3 JUMPDEST
0x5e4 PUSH1 0x0
0x5e6 SWAP2
0x5e7 DUP3
0x5e8 MSTORE
0x5e9 PUSH1 0x20
0x5eb SWAP1
0x5ec SWAP2
0x5ed SHA3
0x5ee ADD
0x5ef SLOAD
0x5f0 PUSH1 0x1
0x5f2 PUSH1 0xa0
0x5f4 PUSH1 0x2
0x5f6 EXP
0x5f7 SUB
0x5f8 AND
0x5f9 EQ
---
0x5e3: JUMPDEST 
0x5e4: V534 = 0x0
0x5e8: M[0x0] = 0x1
0x5e9: V535 = 0x20
0x5ed: V536 = SHA3 0x0 0x20
0x5ee: V537 = ADD V536 V531
0x5ef: V538 = S[V537]
0x5f0: V539 = 0x1
0x5f2: V540 = 0xa0
0x5f4: V541 = 0x2
0x5f6: V542 = EXP 0x2 0xa0
0x5f7: V543 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f8: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x5f9: V545 = EQ V544 V521
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0xbc, 0x65d}, S6, {0x22c, 0x2b3, 0x354}, S4, 0x0, V521, 0x1, V531]
Stack pops: 3
Stack additions: [V545]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0xbc, 0x65d}, S6, {0x22c, 0x2b3, 0x354}, S4, 0x0, V545]

================================

Block 0x5fa
[0x5fa:0x5ff]
---
Predecessors: [0x583, 0x593, 0x5e3]
Successors: [0x22c, 0x2b3, 0x354]
---
0x5fa JUMPDEST
0x5fb SWAP3
0x5fc SWAP2
0x5fd POP
0x5fe POP
0x5ff JUMP
---
0x5fa: JUMPDEST 
0x5ff: JUMP {0x22c, 0x2b3, 0x354}
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0xbc, 0x65d}, S4, {0x22c, 0x2b3, 0x354}, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0xbc, 0x65d}, S4, S0]

================================

Block 0x600
[0x600:0x617]
---
Predecessors: [0x24b]
Successors: [0x618, 0x61c]
---
0x600 JUMPDEST
0x601 PUSH1 0x0
0x603 DUP1
0x604 SLOAD
0x605 ORIGIN
0x606 PUSH1 0x1
0x608 PUSH1 0xa0
0x60a PUSH1 0x2
0x60c EXP
0x60d SUB
0x60e SWAP1
0x60f DUP2
0x610 AND
0x611 SWAP2
0x612 AND
0x613 EQ
0x614 PUSH2 0x61c
0x617 JUMPI
---
0x600: JUMPDEST 
0x601: V546 = 0x0
0x604: V547 = S[0x0]
0x605: V548 = ORIGIN
0x606: V549 = 0x1
0x608: V550 = 0xa0
0x60a: V551 = 0x2
0x60c: V552 = EXP 0x2 0xa0
0x60d: V553 = SUB 0x10000000000000000000000000000000000000000 0x1
0x610: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x612: V555 = AND V547 0xffffffffffffffffffffffffffffffffffffffff
0x613: V556 = EQ V555 V554
0x614: V557 = 0x61c
0x617: JUMPI 0x61c V556
---
Entry stack: [V11, 0xbc, V211]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xbc, V211, 0x0]

================================

Block 0x618
[0x618:0x61b]
---
Predecessors: [0x600]
Successors: []
---
0x618 PUSH1 0x0
0x61a DUP1
0x61b REVERT
---
0x618: V558 = 0x0
0x61b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V211, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V211, 0x0]

================================

Block 0x61c
[0x61c:0x627]
---
Predecessors: [0x600]
Successors: [0x628, 0x62c]
---
0x61c JUMPDEST
0x61d PUSH2 0x100
0x620 DUP3
0x621 MLOAD
0x622 GT
0x623 ISZERO
0x624 PUSH2 0x62c
0x627 JUMPI
---
0x61c: JUMPDEST 
0x61d: V559 = 0x100
0x621: V560 = M[V211]
0x622: V561 = GT V560 0x100
0x623: V562 = ISZERO V561
0x624: V563 = 0x62c
0x627: JUMPI 0x62c V562
---
Entry stack: [V11, 0xbc, V211, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xbc, V211, 0x0]

================================

Block 0x628
[0x628:0x62b]
---
Predecessors: [0x61c]
Successors: []
---
0x628 PUSH1 0x0
0x62a DUP1
0x62b REVERT
---
0x628: V564 = 0x0
0x62b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbc, V211, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbc, V211, 0x0]

================================

Block 0x62c
[0x62c:0x62f]
---
Predecessors: [0x61c]
Successors: [0x630]
---
0x62c JUMPDEST
0x62d POP
0x62e PUSH1 0x0
---
0x62c: JUMPDEST 
0x62e: V565 = 0x0
---
Entry stack: [V11, 0xbc, V211, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0xbc, V211, 0x0]

================================

Block 0x630
[0x630:0x63c]
---
Predecessors: [0x62c, 0x65d]
Successors: [0x548, 0x63d]
---
0x630 JUMPDEST
0x631 DUP2
0x632 MLOAD
0x633 DUP2
0x634 PUSH1 0xff
0x636 AND
0x637 LT
0x638 ISZERO
0x639 PUSH2 0x548
0x63c JUMPI
---
0x630: JUMPDEST 
0x632: V566 = M[S1]
0x634: V567 = 0xff
0x636: V568 = AND 0xff S0
0x637: V569 = LT V568 V566
0x638: V570 = ISZERO V569
0x639: V571 = 0x548
0x63c: JUMPI 0x548 V570
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x63d
[0x63d:0x64c]
---
Predecessors: [0x630]
Successors: [0x64d, 0x64e]
---
0x63d PUSH2 0x65d
0x640 DUP3
0x641 DUP3
0x642 PUSH1 0xff
0x644 AND
0x645 DUP2
0x646 MLOAD
0x647 DUP2
0x648 LT
0x649 PUSH2 0x64e
0x64c JUMPI
---
0x63d: V572 = 0x65d
0x642: V573 = 0xff
0x644: V574 = AND 0xff S0
0x646: V575 = M[S1]
0x648: V576 = LT V574 V575
0x649: V577 = 0x64e
0x64c: JUMPI 0x64e V576
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x65d, S1, V574]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x65d, S1, V574]

================================

Block 0x64d
[0x64d:0x64d]
---
Predecessors: [0x63d]
Successors: []
---
0x64d INVALID
---
0x64d: INVALID 
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x65d, S1, V574]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x65d, S1, V574]

================================

Block 0x64e
[0x64e:0x65c]
---
Predecessors: [0x63d]
Successors: [0x28f]
---
0x64e JUMPDEST
0x64f SWAP1
0x650 PUSH1 0x20
0x652 ADD
0x653 SWAP1
0x654 PUSH1 0x20
0x656 MUL
0x657 ADD
0x658 MLOAD
0x659 PUSH2 0x28f
0x65c JUMP
---
0x64e: JUMPDEST 
0x650: V578 = 0x20
0x652: V579 = ADD 0x20 S1
0x654: V580 = 0x20
0x656: V581 = MUL 0x20 V574
0x657: V582 = ADD V581 V579
0x658: V583 = M[V582]
0x659: V584 = 0x28f
0x65c: JUMP 0x28f
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x65d, S1, V574]
Stack pops: 2
Stack additions: [V583]
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x65d, V583]

================================

Block 0x65d
[0x65d:0x664]
---
Predecessors: [0x32a, 0x45f, 0x548]
Successors: [0x630]
---
0x65d JUMPDEST
0x65e PUSH1 0x1
0x660 ADD
0x661 PUSH2 0x630
0x664 JUMP
---
0x65d: JUMPDEST 
0x65e: V585 = 0x1
0x660: V586 = ADD 0x1 S0
0x661: V587 = 0x630
0x664: JUMP 0x630
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V586]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V586]

================================

Block 0x665
[0x665:0x672]
---
Predecessors: [0x2ba, 0x424]
Successors: [0x45f, 0x673]
---
0x665 JUMPDEST
0x666 DUP2
0x667 SLOAD
0x668 DUP2
0x669 DUP4
0x66a SSTORE
0x66b DUP2
0x66c DUP2
0x66d ISZERO
0x66e GT
0x66f PUSH2 0x45f
0x672 JUMPI
---
0x665: JUMPDEST 
0x667: V588 = S[0x1]
0x66a: S[0x1] = S0
0x66d: V589 = ISZERO V588
0x66e: V590 = GT V589 S0
0x66f: V591 = 0x45f
0x672: JUMPI 0x45f V590
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x2f7, 0x45d}, 0x1, S0]
Stack pops: 2
Stack additions: [S1, S0, V588]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x2f7, 0x45d}, 0x1, S0, V588]

================================

Block 0x673
[0x673:0x688]
---
Predecessors: [0x665]
Successors: [0x69b]
---
0x673 PUSH1 0x0
0x675 DUP4
0x676 DUP2
0x677 MSTORE
0x678 PUSH1 0x20
0x67a SWAP1
0x67b SHA3
0x67c PUSH2 0x45f
0x67f SWAP2
0x680 DUP2
0x681 ADD
0x682 SWAP1
0x683 DUP4
0x684 ADD
0x685 PUSH2 0x69b
0x688 JUMP
---
0x673: V592 = 0x0
0x677: M[0x0] = 0x1
0x678: V593 = 0x20
0x67b: V594 = SHA3 0x0 0x20
0x67c: V595 = 0x45f
0x681: V596 = ADD V594 V588
0x684: V597 = ADD S1 V594
0x685: V598 = 0x69b
0x688: JUMP 0x69b
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2f7, 0x45d}, 0x1, S1, V588]
Stack pops: 3
Stack additions: [S2, S1, 0x45f, V596, V597]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2f7, 0x45d}, 0x1, S1, 0x45f, V596, V597]

================================

Block 0x689
[0x689:0x69a]
---
Predecessors: [0x47a]
Successors: [0x482]
---
0x689 JUMPDEST
0x68a PUSH1 0x20
0x68c PUSH1 0x40
0x68e MLOAD
0x68f SWAP1
0x690 DUP2
0x691 ADD
0x692 PUSH1 0x40
0x694 MSTORE
0x695 PUSH1 0x0
0x697 DUP2
0x698 MSTORE
0x699 SWAP1
0x69a JUMP
---
0x689: JUMPDEST 
0x68a: V599 = 0x20
0x68c: V600 = 0x40
0x68e: V601 = M[0x40]
0x691: V602 = ADD V601 0x20
0x692: V603 = 0x40
0x694: M[0x40] = V602
0x695: V604 = 0x0
0x698: M[V601] = 0x0
0x69a: JUMP 0x482
---
Entry stack: [V11, 0x126, 0x482]
Stack pops: 1
Stack additions: [V601]
Exit stack: [V11, 0x126, V601]

================================

Block 0x69b
[0x69b:0x6a0]
---
Predecessors: [0x673]
Successors: [0x6a1]
---
0x69b JUMPDEST
0x69c PUSH2 0x4e0
0x69f SWAP2
0x6a0 SWAP1
---
0x69b: JUMPDEST 
0x69c: V605 = 0x4e0
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x2f7, 0x45d}, 0x1, S3, 0x45f, V596, V597]
Stack pops: 2
Stack additions: [0x4e0, S1, S0]
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x2f7, 0x45d}, 0x1, S3, 0x45f, 0x4e0, V596, V597]

================================

Block 0x6a1
[0x6a1:0x6a9]
---
Predecessors: [0x69b, 0x6aa]
Successors: [0x6aa, 0x6b5]
---
0x6a1 JUMPDEST
0x6a2 DUP1
0x6a3 DUP3
0x6a4 GT
0x6a5 ISZERO
0x6a6 PUSH2 0x6b5
0x6a9 JUMPI
---
0x6a1: JUMPDEST 
0x6a4: V606 = GT S1 S0
0x6a5: V607 = ISZERO V606
0x6a6: V608 = 0x6b5
0x6a9: JUMPI 0x6b5 V607
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x2f7, 0x45d}, 0x1, S4, 0x45f, 0x4e0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x2f7, 0x45d}, 0x1, S4, 0x45f, 0x4e0, S1, S0]

================================

Block 0x6aa
[0x6aa:0x6b4]
---
Predecessors: [0x6a1]
Successors: [0x6a1]
---
0x6aa PUSH1 0x0
0x6ac DUP2
0x6ad SSTORE
0x6ae PUSH1 0x1
0x6b0 ADD
0x6b1 PUSH2 0x6a1
0x6b4 JUMP
---
0x6aa: V609 = 0x0
0x6ad: S[S0] = 0x0
0x6ae: V610 = 0x1
0x6b0: V611 = ADD 0x1 S0
0x6b1: V612 = 0x6a1
0x6b4: JUMP 0x6a1
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x2f7, 0x45d}, 0x1, S4, 0x45f, 0x4e0, S1, S0]
Stack pops: 1
Stack additions: [V611]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x2f7, 0x45d}, 0x1, S4, 0x45f, 0x4e0, S1, V611]

================================

Block 0x6b5
[0x6b5:0x6b8]
---
Predecessors: [0x6a1]
Successors: [0x4e0]
---
0x6b5 JUMPDEST
0x6b6 POP
0x6b7 SWAP1
0x6b8 JUMP
---
0x6b5: JUMPDEST 
0x6b8: JUMP 0x4e0
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x2f7, 0x45d}, 0x1, S4, 0x45f, 0x4e0, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x2f7, 0x45d}, 0x1, S4, 0x45f, S1]

================================

Block 0x6b9
[0x6b9:0x720]
---
Predecessors: []
Successors: []
---
0x6b9 JUMPDEST
0x6ba PUSH1 0x0
0x6bc DUP1
0x6bd SLOAD
0x6be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d3 NOT
0x6d4 AND
0x6d5 PUSH1 0x1
0x6d7 PUSH1 0xa0
0x6d9 PUSH1 0x2
0x6db EXP
0x6dc SUB
0x6dd SWAP3
0x6de SWAP1
0x6df SWAP3
0x6e0 AND
0x6e1 SWAP2
0x6e2 SWAP1
0x6e3 SWAP2
0x6e4 OR
0x6e5 SWAP1
0x6e6 SSTORE
0x6e7 JUMP
0x6e8 STOP
0x6e9 LOG1
0x6ea PUSH6 0x627a7a723058
0x6f1 SHA3
0x6f2 SWAP7
0x6f3 POP
0x6f4 MISSING 0x5e
0x6f5 PUSH16 0x1b2ac7d201246d4437f8af06aacc2262
0x706 MISSING 0x48
0x707 MISSING 0xd2
0x708 PUSH24 0xe34d3f1cf095cd70530029
---
0x6b9: JUMPDEST 
0x6ba: V613 = 0x0
0x6bd: V614 = S[0x0]
0x6be: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d3: V616 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6d4: V617 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V614
0x6d5: V618 = 0x1
0x6d7: V619 = 0xa0
0x6d9: V620 = 0x2
0x6db: V621 = EXP 0x2 0xa0
0x6dc: V622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e0: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6e4: V624 = OR V623 V617
0x6e6: S[0x0] = V624
0x6e7: JUMP S1
0x6e8: STOP 
0x6e9: LOG S0 S1 S2
0x6ea: V625 = 0x627a7a723058
0x6f1: V626 = SHA3 0x627a7a723058 S3
0x6f4: MISSING 0x5e
0x6f5: V627 = 0x1b2ac7d201246d4437f8af06aacc2262
0x706: MISSING 0x48
0x707: MISSING 0xd2
0x708: V628 = 0xe34d3f1cf095cd70530029
---
Entry stack: []
Stack pops: 34
Stack additions: [0xe34d3f1cf095cd70530029]
Exit stack: []

================================

Function 0:
Public function signature: 0xa3b0a4f
Entry block: 0x9d
Exit block: 0x64d
Body: 0x9d, 0xa4, 0xa8, 0x64d

Function 1:
Public function signature: 0x29092d0e
Entry block: 0xbe
Exit block: 0x2a6
Body: 0xbe, 0xc5, 0xc9, 0x2a6

Function 2:
Public function signature: 0x3804e84e
Entry block: 0xdd
Exit block: 0xfc
Body: 0xdd, 0xe4, 0xe8, 0xfc, 0x464

Function 3:
Public function signature: 0x53ed5143
Entry block: 0x113
Exit block: 0x423
Body: 0x113, 0x11a, 0x11e, 0x423, 0x47a, 0x482, 0x4aa, 0x4ba, 0x4d8, 0x689

Function 4:
Public function signature: 0x74fd6176
Entry block: 0x179
Exit block: 0xbc
Body: 0xbc, 0x179, 0x180, 0x184, 0x4e3, 0x4fb, 0x4ff, 0x50b, 0x50f

Function 5:
Public function signature: 0x7ebd1b30
Entry block: 0x1c8
Exit block: 0x1de
Body: 0x1c8, 0x1cf, 0x1d3, 0x1de, 0x54c, 0x559, 0x55a

Function 6:
Public function signature: 0xf53d0a8e
Entry block: 0x1fa
Exit block: 0x1de
Body: 0x1de, 0x1fa, 0x201, 0x205, 0x574

Function 7:
Public function signature: 0xfa33bcf3
Entry block: 0x20d
Exit block: 0x214
Body: 0x20d, 0x214, 0x218, 0x22c

Function 8:
Public function signature: 0xfd413596
Entry block: 0x240
Exit block: 0xbc
Body: 0xbc, 0x240, 0x247, 0x24b, 0x600, 0x618, 0x61c, 0x628, 0x62c

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0x98
Body: 0x98

Function 10:
Private function
Entry block: 0x665
Exit block: 0x45f
Body: 0x28f, 0x2aa, 0x2b3, 0x2ba, 0x2f7, 0x32a, 0x32d, 0x34b, 0x354, 0x35a, 0x384, 0x397, 0x3aa, 0x3d4, 0x412, 0x424, 0x45d, 0x45f, 0x4e0, 0x513, 0x520, 0x531, 0x540, 0x548, 0x630, 0x63d, 0x64e, 0x65d, 0x665, 0x673, 0x69b, 0x6a1, 0x6aa, 0x6b5

Function 11:
Private function
Entry block: 0x583
Exit block: 0x5fa
Body: 0x583, 0x593, 0x5b7, 0x5e3, 0x5fa

