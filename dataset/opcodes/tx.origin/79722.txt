Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xfb]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xfb
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xfb
0xc: JUMPI 0xfb V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x100]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xfb5a6b4
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x100
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xfb5a6b4
0x3b: V13 = EQ V11 0xfb5a6b4
0x3c: V14 = 0x100
0x3f: JUMPI 0x100 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x127]
---
0x40 DUP1
0x41 PUSH4 0x13d033c0
0x46 EQ
0x47 PUSH2 0x127
0x4a JUMPI
---
0x41: V15 = 0x13d033c0
0x46: V16 = EQ 0x13d033c0 V11
0x47: V17 = 0x127
0x4a: JUMPI 0x127 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x13c]
---
0x4b DUP1
0x4c PUSH4 0x302df083
0x51 EQ
0x52 PUSH2 0x13c
0x55 JUMPI
---
0x4c: V18 = 0x302df083
0x51: V19 = EQ 0x302df083 V11
0x52: V20 = 0x13c
0x55: JUMPI 0x13c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x170]
---
0x56 DUP1
0x57 PUSH4 0x36751366
0x5c EQ
0x5d PUSH2 0x170
0x60 JUMPI
---
0x57: V21 = 0x36751366
0x5c: V22 = EQ 0x36751366 V11
0x5d: V23 = 0x170
0x60: JUMPI 0x170 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x193]
---
0x61 DUP1
0x62 PUSH4 0x44b1231f
0x67 EQ
0x68 PUSH2 0x193
0x6b JUMPI
---
0x62: V24 = 0x44b1231f
0x67: V25 = EQ 0x44b1231f V11
0x68: V26 = 0x193
0x6b: JUMPI 0x193 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1a8]
---
0x6c DUP1
0x6d PUSH4 0x44fdbf5b
0x72 EQ
0x73 PUSH2 0x1a8
0x76 JUMPI
---
0x6d: V27 = 0x44fdbf5b
0x72: V28 = EQ 0x44fdbf5b V11
0x73: V29 = 0x1a8
0x76: JUMPI 0x1a8 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1bd]
---
0x77 DUP1
0x78 PUSH4 0x5b940081
0x7d EQ
0x7e PUSH2 0x1bd
0x81 JUMPI
---
0x78: V30 = 0x5b940081
0x7d: V31 = EQ 0x5b940081 V11
0x7e: V32 = 0x1bd
0x81: JUMPI 0x1bd V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1d2]
---
0x82 DUP1
0x83 PUSH4 0x715018a6
0x88 EQ
0x89 PUSH2 0x1d2
0x8c JUMPI
---
0x83: V33 = 0x715018a6
0x88: V34 = EQ 0x715018a6 V11
0x89: V35 = 0x1d2
0x8c: JUMPI 0x1d2 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1e7]
---
0x8d DUP1
0x8e PUSH4 0x74a8f103
0x93 EQ
0x94 PUSH2 0x1e7
0x97 JUMPI
---
0x8e: V36 = 0x74a8f103
0x93: V37 = EQ 0x74a8f103 V11
0x94: V38 = 0x1e7
0x97: JUMPI 0x1e7 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x208]
---
0x98 DUP1
0x99 PUSH4 0x872a7810
0x9e EQ
0x9f PUSH2 0x208
0xa2 JUMPI
---
0x99: V39 = 0x872a7810
0x9e: V40 = EQ 0x872a7810 V11
0x9f: V41 = 0x208
0xa2: JUMPI 0x208 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x231]
---
0xa3 DUP1
0xa4 PUSH4 0x8da5cb5b
0xa9 EQ
0xaa PUSH2 0x231
0xad JUMPI
---
0xa4: V42 = 0x8da5cb5b
0xa9: V43 = EQ 0x8da5cb5b V11
0xaa: V44 = 0x231
0xad: JUMPI 0x231 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x246]
---
0xae DUP1
0xaf PUSH4 0xbe9a6555
0xb4 EQ
0xb5 PUSH2 0x246
0xb8 JUMPI
---
0xaf: V45 = 0xbe9a6555
0xb4: V46 = EQ 0xbe9a6555 V11
0xb5: V47 = 0x246
0xb8: JUMPI 0x246 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x25b]
---
0xb9 DUP1
0xba PUSH4 0xce7c2ac2
0xbf EQ
0xc0 PUSH2 0x25b
0xc3 JUMPI
---
0xba: V48 = 0xce7c2ac2
0xbf: V49 = EQ 0xce7c2ac2 V11
0xc0: V50 = 0x25b
0xc3: JUMPI 0x25b V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x27c]
---
0xc4 DUP1
0xc5 PUSH4 0xefeb5e58
0xca EQ
0xcb PUSH2 0x27c
0xce JUMPI
---
0xc5: V51 = 0xefeb5e58
0xca: V52 = EQ 0xefeb5e58 V11
0xcb: V53 = 0x27c
0xce: JUMPI 0x27c V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x294]
---
0xcf DUP1
0xd0 PUSH4 0xf2fde38b
0xd5 EQ
0xd6 PUSH2 0x294
0xd9 JUMPI
---
0xd0: V54 = 0xf2fde38b
0xd5: V55 = EQ 0xf2fde38b V11
0xd6: V56 = 0x294
0xd9: JUMPI 0x294 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x2b5]
---
0xda DUP1
0xdb PUSH4 0xf851a440
0xe0 EQ
0xe1 PUSH2 0x2b5
0xe4 JUMPI
---
0xdb: V57 = 0xf851a440
0xe0: V58 = EQ 0xf851a440 V11
0xe1: V59 = 0x2b5
0xe4: JUMPI 0x2b5 V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0, 0x2ca]
---
0xe5 DUP1
0xe6 PUSH4 0xfa01dc06
0xeb EQ
0xec PUSH2 0x2ca
0xef JUMPI
---
0xe6: V60 = 0xfa01dc06
0xeb: V61 = EQ 0xfa01dc06 V11
0xec: V62 = 0x2ca
0xef: JUMPI 0x2ca V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb, 0x2eb]
---
0xf0 DUP1
0xf1 PUSH4 0xfc0c546a
0xf6 EQ
0xf7 PUSH2 0x2eb
0xfa JUMPI
---
0xf1: V63 = 0xfc0c546a
0xf6: V64 = EQ 0xfc0c546a V11
0xf7: V65 = 0x2eb
0xfa: JUMPI 0x2eb V64
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0xff]
---
Predecessors: [0x0, 0xf0]
Successors: []
---
0xfb JUMPDEST
0xfc PUSH1 0x0
0xfe DUP1
0xff REVERT
---
0xfb: JUMPDEST 
0xfc: V66 = 0x0
0xff: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x100
[0x100:0x107]
---
Predecessors: [0xd]
Successors: [0x108, 0x10c]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 DUP1
0x103 ISZERO
0x104 PUSH2 0x10c
0x107 JUMPI
---
0x100: JUMPDEST 
0x101: V67 = CALLVALUE
0x103: V68 = ISZERO V67
0x104: V69 = 0x10c
0x107: JUMPI 0x10c V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0x108
[0x108:0x10b]
---
Predecessors: [0x100]
Successors: []
---
0x108 PUSH1 0x0
0x10a DUP1
0x10b REVERT
---
0x108: V70 = 0x0
0x10b: REVERT 0x0 0x0
---
Entry stack: [V11, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0x10c
[0x10c:0x114]
---
Predecessors: [0x100]
Successors: [0x300]
---
0x10c JUMPDEST
0x10d POP
0x10e PUSH2 0x115
0x111 PUSH2 0x300
0x114 JUMP
---
0x10c: JUMPDEST 
0x10e: V71 = 0x115
0x111: V72 = 0x300
0x114: JUMP 0x300
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x115
[0x115:0x126]
---
Predecessors: [0x300, 0x306, 0x52d, 0x663, 0x685, 0x8ee, 0x94f, 0x955, 0x9f2]
Successors: []
---
0x115 JUMPDEST
0x116 PUSH1 0x40
0x118 DUP1
0x119 MLOAD
0x11a SWAP2
0x11b DUP3
0x11c MSTORE
0x11d MLOAD
0x11e SWAP1
0x11f DUP2
0x120 SWAP1
0x121 SUB
0x122 PUSH1 0x20
0x124 ADD
0x125 SWAP1
0x126 RETURN
---
0x115: JUMPDEST 
0x116: V73 = 0x40
0x119: V74 = M[0x40]
0x11c: M[V74] = S0
0x11d: V75 = M[0x40]
0x121: V76 = SUB V74 V75
0x122: V77 = 0x20
0x124: V78 = ADD 0x20 V76
0x126: RETURN V75 V78
---
Entry stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x127
[0x127:0x12e]
---
Predecessors: [0x40]
Successors: [0x12f, 0x133]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 DUP1
0x12a ISZERO
0x12b PUSH2 0x133
0x12e JUMPI
---
0x127: JUMPDEST 
0x128: V79 = CALLVALUE
0x12a: V80 = ISZERO V79
0x12b: V81 = 0x133
0x12e: JUMPI 0x133 V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V11, V79]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x127]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V82 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V11, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V79]

================================

Block 0x133
[0x133:0x13b]
---
Predecessors: [0x127]
Successors: [0x306]
---
0x133 JUMPDEST
0x134 POP
0x135 PUSH2 0x115
0x138 PUSH2 0x306
0x13b JUMP
---
0x133: JUMPDEST 
0x135: V83 = 0x115
0x138: V84 = 0x306
0x13b: JUMP 0x306
---
Entry stack: [V11, V79]
Stack pops: 1
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x13c
[0x13c:0x143]
---
Predecessors: [0x4b]
Successors: [0x144, 0x148]
---
0x13c JUMPDEST
0x13d CALLVALUE
0x13e DUP1
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13c: JUMPDEST 
0x13d: V85 = CALLVALUE
0x13f: V86 = ISZERO V85
0x140: V87 = 0x148
0x143: JUMPI 0x148 V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V11, V85]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13c]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V88 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V11, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V85]

================================

Block 0x148
[0x148:0x153]
---
Predecessors: [0x13c]
Successors: [0x30c]
---
0x148 JUMPDEST
0x149 POP
0x14a PUSH2 0x154
0x14d PUSH1 0x4
0x14f CALLDATALOAD
0x150 PUSH2 0x30c
0x153 JUMP
---
0x148: JUMPDEST 
0x14a: V89 = 0x154
0x14d: V90 = 0x4
0x14f: V91 = CALLDATALOAD 0x4
0x150: V92 = 0x30c
0x153: JUMP 0x30c
---
Entry stack: [V11, V85]
Stack pops: 1
Stack additions: [0x154, V91]
Exit stack: [V11, 0x154, V91]

================================

Block 0x154
[0x154:0x16f]
---
Predecessors: [0x31d, 0x940, 0x975, 0x9b2, 0x9d6]
Successors: []
---
0x154 JUMPDEST
0x155 PUSH1 0x40
0x157 DUP1
0x158 MLOAD
0x159 PUSH1 0x1
0x15b PUSH1 0xa0
0x15d PUSH1 0x2
0x15f EXP
0x160 SUB
0x161 SWAP1
0x162 SWAP3
0x163 AND
0x164 DUP3
0x165 MSTORE
0x166 MLOAD
0x167 SWAP1
0x168 DUP2
0x169 SWAP1
0x16a SUB
0x16b PUSH1 0x20
0x16d ADD
0x16e SWAP1
0x16f RETURN
---
0x154: JUMPDEST 
0x155: V93 = 0x40
0x158: V94 = M[0x40]
0x159: V95 = 0x1
0x15b: V96 = 0xa0
0x15d: V97 = 0x2
0x15f: V98 = EXP 0x2 0xa0
0x160: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x163: V100 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x165: M[V94] = V100
0x166: V101 = M[0x40]
0x16a: V102 = SUB V94 V101
0x16b: V103 = 0x20
0x16d: V104 = ADD 0x20 V102
0x16f: RETURN V101 V104
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x170
[0x170:0x177]
---
Predecessors: [0x56]
Successors: [0x178, 0x17c]
---
0x170 JUMPDEST
0x171 CALLVALUE
0x172 DUP1
0x173 ISZERO
0x174 PUSH2 0x17c
0x177 JUMPI
---
0x170: JUMPDEST 
0x171: V105 = CALLVALUE
0x173: V106 = ISZERO V105
0x174: V107 = 0x17c
0x177: JUMPI 0x17c V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V105]
Exit stack: [V11, V105]

================================

Block 0x178
[0x178:0x17b]
---
Predecessors: [0x170]
Successors: []
---
0x178 PUSH1 0x0
0x17a DUP1
0x17b REVERT
---
0x178: V108 = 0x0
0x17b: REVERT 0x0 0x0
---
Entry stack: [V11, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V105]

================================

Block 0x17c
[0x17c:0x190]
---
Predecessors: [0x170]
Successors: [0x338]
---
0x17c JUMPDEST
0x17d POP
0x17e PUSH2 0x191
0x181 PUSH1 0x1
0x183 PUSH1 0xa0
0x185 PUSH1 0x2
0x187 EXP
0x188 SUB
0x189 PUSH1 0x4
0x18b CALLDATALOAD
0x18c AND
0x18d PUSH2 0x338
0x190 JUMP
---
0x17c: JUMPDEST 
0x17e: V109 = 0x191
0x181: V110 = 0x1
0x183: V111 = 0xa0
0x185: V112 = 0x2
0x187: V113 = EXP 0x2 0xa0
0x188: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x189: V115 = 0x4
0x18b: V116 = CALLDATALOAD 0x4
0x18c: V117 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V118 = 0x338
0x190: JUMP 0x338
---
Entry stack: [V11, V105]
Stack pops: 1
Stack additions: [0x191, V117]
Exit stack: [V11, 0x191, V117]

================================

Block 0x191
[0x191:0x192]
---
Predecessors: [0x3f0, 0x52d, 0x663, 0x6a1, 0x8ee, 0x9af, 0xa04]
Successors: []
---
0x191 JUMPDEST
0x192 STOP
---
0x191: JUMPDEST 
0x192: STOP 
---
Entry stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x193
[0x193:0x19a]
---
Predecessors: [0x61]
Successors: [0x19b, 0x19f]
---
0x193 JUMPDEST
0x194 CALLVALUE
0x195 DUP1
0x196 ISZERO
0x197 PUSH2 0x19f
0x19a JUMPI
---
0x193: JUMPDEST 
0x194: V119 = CALLVALUE
0x196: V120 = ISZERO V119
0x197: V121 = 0x19f
0x19a: JUMPI 0x19f V120
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V11, V119]

================================

Block 0x19b
[0x19b:0x19e]
---
Predecessors: [0x193]
Successors: []
---
0x19b PUSH1 0x0
0x19d DUP1
0x19e REVERT
---
0x19b: V122 = 0x0
0x19e: REVERT 0x0 0x0
---
Entry stack: [V11, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V119]

================================

Block 0x19f
[0x19f:0x1a7]
---
Predecessors: [0x193]
Successors: [0x40c]
---
0x19f JUMPDEST
0x1a0 POP
0x1a1 PUSH2 0x115
0x1a4 PUSH2 0x40c
0x1a7 JUMP
---
0x19f: JUMPDEST 
0x1a1: V123 = 0x115
0x1a4: V124 = 0x40c
0x1a7: JUMP 0x40c
---
Entry stack: [V11, V119]
Stack pops: 1
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x1a8
[0x1a8:0x1af]
---
Predecessors: [0x6c]
Successors: [0x1b0, 0x1b4]
---
0x1a8 JUMPDEST
0x1a9 CALLVALUE
0x1aa DUP1
0x1ab ISZERO
0x1ac PUSH2 0x1b4
0x1af JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V125 = CALLVALUE
0x1ab: V126 = ISZERO V125
0x1ac: V127 = 0x1b4
0x1af: JUMPI 0x1b4 V126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V11, V125]

================================

Block 0x1b0
[0x1b0:0x1b3]
---
Predecessors: [0x1a8]
Successors: []
---
0x1b0 PUSH1 0x0
0x1b2 DUP1
0x1b3 REVERT
---
0x1b0: V128 = 0x0
0x1b3: REVERT 0x0 0x0
---
Entry stack: [V11, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V125]

================================

Block 0x1b4
[0x1b4:0x1bc]
---
Predecessors: [0x1a8]
Successors: [0x532]
---
0x1b4 JUMPDEST
0x1b5 POP
0x1b6 PUSH2 0x191
0x1b9 PUSH2 0x532
0x1bc JUMP
---
0x1b4: JUMPDEST 
0x1b6: V129 = 0x191
0x1b9: V130 = 0x532
0x1bc: JUMP 0x532
---
Entry stack: [V11, V125]
Stack pops: 1
Stack additions: [0x191]
Exit stack: [V11, 0x191]

================================

Block 0x1bd
[0x1bd:0x1c4]
---
Predecessors: [0x77]
Successors: [0x1c5, 0x1c9]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf DUP1
0x1c0 ISZERO
0x1c1 PUSH2 0x1c9
0x1c4 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V131 = CALLVALUE
0x1c0: V132 = ISZERO V131
0x1c1: V133 = 0x1c9
0x1c4: JUMPI 0x1c9 V132
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V131]
Exit stack: [V11, V131]

================================

Block 0x1c5
[0x1c5:0x1c8]
---
Predecessors: [0x1bd]
Successors: []
---
0x1c5 PUSH1 0x0
0x1c7 DUP1
0x1c8 REVERT
---
0x1c5: V134 = 0x0
0x1c8: REVERT 0x0 0x0
---
Entry stack: [V11, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V131]

================================

Block 0x1c9
[0x1c9:0x1d1]
---
Predecessors: [0x1bd]
Successors: [0x669]
---
0x1c9 JUMPDEST
0x1ca POP
0x1cb PUSH2 0x115
0x1ce PUSH2 0x669
0x1d1 JUMP
---
0x1c9: JUMPDEST 
0x1cb: V135 = 0x115
0x1ce: V136 = 0x669
0x1d1: JUMP 0x669
---
Entry stack: [V11, V131]
Stack pops: 1
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x1d2
[0x1d2:0x1d9]
---
Predecessors: [0x82]
Successors: [0x1da, 0x1de]
---
0x1d2 JUMPDEST
0x1d3 CALLVALUE
0x1d4 DUP1
0x1d5 ISZERO
0x1d6 PUSH2 0x1de
0x1d9 JUMPI
---
0x1d2: JUMPDEST 
0x1d3: V137 = CALLVALUE
0x1d5: V138 = ISZERO V137
0x1d6: V139 = 0x1de
0x1d9: JUMPI 0x1de V138
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V137]
Exit stack: [V11, V137]

================================

Block 0x1da
[0x1da:0x1dd]
---
Predecessors: [0x1d2]
Successors: []
---
0x1da PUSH1 0x0
0x1dc DUP1
0x1dd REVERT
---
0x1da: V140 = 0x0
0x1dd: REVERT 0x0 0x0
---
Entry stack: [V11, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V137]

================================

Block 0x1de
[0x1de:0x1e6]
---
Predecessors: [0x1d2]
Successors: [0x68a]
---
0x1de JUMPDEST
0x1df POP
0x1e0 PUSH2 0x191
0x1e3 PUSH2 0x68a
0x1e6 JUMP
---
0x1de: JUMPDEST 
0x1e0: V141 = 0x191
0x1e3: V142 = 0x68a
0x1e6: JUMP 0x68a
---
Entry stack: [V11, V137]
Stack pops: 1
Stack additions: [0x191]
Exit stack: [V11, 0x191]

================================

Block 0x1e7
[0x1e7:0x1ee]
---
Predecessors: [0x8d]
Successors: [0x1ef, 0x1f3]
---
0x1e7 JUMPDEST
0x1e8 CALLVALUE
0x1e9 DUP1
0x1ea ISZERO
0x1eb PUSH2 0x1f3
0x1ee JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V143 = CALLVALUE
0x1ea: V144 = ISZERO V143
0x1eb: V145 = 0x1f3
0x1ee: JUMPI 0x1f3 V144
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V143]
Exit stack: [V11, V143]

================================

Block 0x1ef
[0x1ef:0x1f2]
---
Predecessors: [0x1e7]
Successors: []
---
0x1ef PUSH1 0x0
0x1f1 DUP1
0x1f2 REVERT
---
0x1ef: V146 = 0x0
0x1f2: REVERT 0x0 0x0
---
Entry stack: [V11, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V143]

================================

Block 0x1f3
[0x1f3:0x207]
---
Predecessors: [0x1e7]
Successors: [0x6f6]
---
0x1f3 JUMPDEST
0x1f4 POP
0x1f5 PUSH2 0x191
0x1f8 PUSH1 0x1
0x1fa PUSH1 0xa0
0x1fc PUSH1 0x2
0x1fe EXP
0x1ff SUB
0x200 PUSH1 0x4
0x202 CALLDATALOAD
0x203 AND
0x204 PUSH2 0x6f6
0x207 JUMP
---
0x1f3: JUMPDEST 
0x1f5: V147 = 0x191
0x1f8: V148 = 0x1
0x1fa: V149 = 0xa0
0x1fc: V150 = 0x2
0x1fe: V151 = EXP 0x2 0xa0
0x1ff: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x200: V153 = 0x4
0x202: V154 = CALLDATALOAD 0x4
0x203: V155 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x204: V156 = 0x6f6
0x207: JUMP 0x6f6
---
Entry stack: [V11, V143]
Stack pops: 1
Stack additions: [0x191, V155]
Exit stack: [V11, 0x191, V155]

================================

Block 0x208
[0x208:0x20f]
---
Predecessors: [0x98]
Successors: [0x210, 0x214]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a DUP1
0x20b ISZERO
0x20c PUSH2 0x214
0x20f JUMPI
---
0x208: JUMPDEST 
0x209: V157 = CALLVALUE
0x20b: V158 = ISZERO V157
0x20c: V159 = 0x214
0x20f: JUMPI 0x214 V158
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V157]
Exit stack: [V11, V157]

================================

Block 0x210
[0x210:0x213]
---
Predecessors: [0x208]
Successors: []
---
0x210 PUSH1 0x0
0x212 DUP1
0x213 REVERT
---
0x210: V160 = 0x0
0x213: REVERT 0x0 0x0
---
Entry stack: [V11, V157]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V157]

================================

Block 0x214
[0x214:0x21c]
---
Predecessors: [0x208]
Successors: [0x91f]
---
0x214 JUMPDEST
0x215 POP
0x216 PUSH2 0x21d
0x219 PUSH2 0x91f
0x21c JUMP
---
0x214: JUMPDEST 
0x216: V161 = 0x21d
0x219: V162 = 0x91f
0x21c: JUMP 0x91f
---
Entry stack: [V11, V157]
Stack pops: 1
Stack additions: [0x21d]
Exit stack: [V11, 0x21d]

================================

Block 0x21d
[0x21d:0x230]
---
Predecessors: [0x91f, 0x9c1]
Successors: []
---
0x21d JUMPDEST
0x21e PUSH1 0x40
0x220 DUP1
0x221 MLOAD
0x222 SWAP2
0x223 ISZERO
0x224 ISZERO
0x225 DUP3
0x226 MSTORE
0x227 MLOAD
0x228 SWAP1
0x229 DUP2
0x22a SWAP1
0x22b SUB
0x22c PUSH1 0x20
0x22e ADD
0x22f SWAP1
0x230 RETURN
---
0x21d: JUMPDEST 
0x21e: V163 = 0x40
0x221: V164 = M[0x40]
0x223: V165 = ISZERO S0
0x224: V166 = ISZERO V165
0x226: M[V164] = V166
0x227: V167 = M[0x40]
0x22b: V168 = SUB V164 V167
0x22c: V169 = 0x20
0x22e: V170 = ADD 0x20 V168
0x230: RETURN V167 V170
---
Entry stack: [V11, 0x21d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x21d]

================================

Block 0x231
[0x231:0x238]
---
Predecessors: [0xa3]
Successors: [0x239, 0x23d]
---
0x231 JUMPDEST
0x232 CALLVALUE
0x233 DUP1
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x231: JUMPDEST 
0x232: V171 = CALLVALUE
0x234: V172 = ISZERO V171
0x235: V173 = 0x23d
0x238: JUMPI 0x23d V172
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V171]
Exit stack: [V11, V171]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x231]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V174 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V11, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V171]

================================

Block 0x23d
[0x23d:0x245]
---
Predecessors: [0x231]
Successors: [0x940]
---
0x23d JUMPDEST
0x23e POP
0x23f PUSH2 0x154
0x242 PUSH2 0x940
0x245 JUMP
---
0x23d: JUMPDEST 
0x23f: V175 = 0x154
0x242: V176 = 0x940
0x245: JUMP 0x940
---
Entry stack: [V11, V171]
Stack pops: 1
Stack additions: [0x154]
Exit stack: [V11, 0x154]

================================

Block 0x246
[0x246:0x24d]
---
Predecessors: [0xae]
Successors: [0x24e, 0x252]
---
0x246 JUMPDEST
0x247 CALLVALUE
0x248 DUP1
0x249 ISZERO
0x24a PUSH2 0x252
0x24d JUMPI
---
0x246: JUMPDEST 
0x247: V177 = CALLVALUE
0x249: V178 = ISZERO V177
0x24a: V179 = 0x252
0x24d: JUMPI 0x252 V178
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V177]
Exit stack: [V11, V177]

================================

Block 0x24e
[0x24e:0x251]
---
Predecessors: [0x246]
Successors: []
---
0x24e PUSH1 0x0
0x250 DUP1
0x251 REVERT
---
0x24e: V180 = 0x0
0x251: REVERT 0x0 0x0
---
Entry stack: [V11, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V177]

================================

Block 0x252
[0x252:0x25a]
---
Predecessors: [0x246]
Successors: [0x94f]
---
0x252 JUMPDEST
0x253 POP
0x254 PUSH2 0x115
0x257 PUSH2 0x94f
0x25a JUMP
---
0x252: JUMPDEST 
0x254: V181 = 0x115
0x257: V182 = 0x94f
0x25a: JUMP 0x94f
---
Entry stack: [V11, V177]
Stack pops: 1
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x25b
[0x25b:0x262]
---
Predecessors: [0xb9]
Successors: [0x263, 0x267]
---
0x25b JUMPDEST
0x25c CALLVALUE
0x25d DUP1
0x25e ISZERO
0x25f PUSH2 0x267
0x262 JUMPI
---
0x25b: JUMPDEST 
0x25c: V183 = CALLVALUE
0x25e: V184 = ISZERO V183
0x25f: V185 = 0x267
0x262: JUMPI 0x267 V184
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V183]
Exit stack: [V11, V183]

================================

Block 0x263
[0x263:0x266]
---
Predecessors: [0x25b]
Successors: []
---
0x263 PUSH1 0x0
0x265 DUP1
0x266 REVERT
---
0x263: V186 = 0x0
0x266: REVERT 0x0 0x0
---
Entry stack: [V11, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V183]

================================

Block 0x267
[0x267:0x27b]
---
Predecessors: [0x25b]
Successors: [0x955]
---
0x267 JUMPDEST
0x268 POP
0x269 PUSH2 0x115
0x26c PUSH1 0x1
0x26e PUSH1 0xa0
0x270 PUSH1 0x2
0x272 EXP
0x273 SUB
0x274 PUSH1 0x4
0x276 CALLDATALOAD
0x277 AND
0x278 PUSH2 0x955
0x27b JUMP
---
0x267: JUMPDEST 
0x269: V187 = 0x115
0x26c: V188 = 0x1
0x26e: V189 = 0xa0
0x270: V190 = 0x2
0x272: V191 = EXP 0x2 0xa0
0x273: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x274: V193 = 0x4
0x276: V194 = CALLDATALOAD 0x4
0x277: V195 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x278: V196 = 0x955
0x27b: JUMP 0x955
---
Entry stack: [V11, V183]
Stack pops: 1
Stack additions: [0x115, V195]
Exit stack: [V11, 0x115, V195]

================================

Block 0x27c
[0x27c:0x283]
---
Predecessors: [0xc4]
Successors: [0x284, 0x288]
---
0x27c JUMPDEST
0x27d CALLVALUE
0x27e DUP1
0x27f ISZERO
0x280 PUSH2 0x288
0x283 JUMPI
---
0x27c: JUMPDEST 
0x27d: V197 = CALLVALUE
0x27f: V198 = ISZERO V197
0x280: V199 = 0x288
0x283: JUMPI 0x288 V198
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V197]
Exit stack: [V11, V197]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x27c]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V200 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V11, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V197]

================================

Block 0x288
[0x288:0x293]
---
Predecessors: [0x27c]
Successors: [0x967]
---
0x288 JUMPDEST
0x289 POP
0x28a PUSH2 0x154
0x28d PUSH1 0x4
0x28f CALLDATALOAD
0x290 PUSH2 0x967
0x293 JUMP
---
0x288: JUMPDEST 
0x28a: V201 = 0x154
0x28d: V202 = 0x4
0x28f: V203 = CALLDATALOAD 0x4
0x290: V204 = 0x967
0x293: JUMP 0x967
---
Entry stack: [V11, V197]
Stack pops: 1
Stack additions: [0x154, V203]
Exit stack: [V11, 0x154, V203]

================================

Block 0x294
[0x294:0x29b]
---
Predecessors: [0xcf]
Successors: [0x29c, 0x2a0]
---
0x294 JUMPDEST
0x295 CALLVALUE
0x296 DUP1
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x294: JUMPDEST 
0x295: V205 = CALLVALUE
0x297: V206 = ISZERO V205
0x298: V207 = 0x2a0
0x29b: JUMPI 0x2a0 V206
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V205]
Exit stack: [V11, V205]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x294]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V208 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V11, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V205]

================================

Block 0x2a0
[0x2a0:0x2b4]
---
Predecessors: [0x294]
Successors: [0x98f]
---
0x2a0 JUMPDEST
0x2a1 POP
0x2a2 PUSH2 0x191
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad PUSH1 0x4
0x2af CALLDATALOAD
0x2b0 AND
0x2b1 PUSH2 0x98f
0x2b4 JUMP
---
0x2a0: JUMPDEST 
0x2a2: V209 = 0x191
0x2a5: V210 = 0x1
0x2a7: V211 = 0xa0
0x2a9: V212 = 0x2
0x2ab: V213 = EXP 0x2 0xa0
0x2ac: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ad: V215 = 0x4
0x2af: V216 = CALLDATALOAD 0x4
0x2b0: V217 = AND V216 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V218 = 0x98f
0x2b4: JUMP 0x98f
---
Entry stack: [V11, V205]
Stack pops: 1
Stack additions: [0x191, V217]
Exit stack: [V11, 0x191, V217]

================================

Block 0x2b5
[0x2b5:0x2bc]
---
Predecessors: [0xda]
Successors: [0x2bd, 0x2c1]
---
0x2b5 JUMPDEST
0x2b6 CALLVALUE
0x2b7 DUP1
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V219 = CALLVALUE
0x2b8: V220 = ISZERO V219
0x2b9: V221 = 0x2c1
0x2bc: JUMPI 0x2c1 V220
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V219]
Exit stack: [V11, V219]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x2b5]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V222 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V11, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V219]

================================

Block 0x2c1
[0x2c1:0x2c9]
---
Predecessors: [0x2b5]
Successors: [0x9b2]
---
0x2c1 JUMPDEST
0x2c2 POP
0x2c3 PUSH2 0x154
0x2c6 PUSH2 0x9b2
0x2c9 JUMP
---
0x2c1: JUMPDEST 
0x2c3: V223 = 0x154
0x2c6: V224 = 0x9b2
0x2c9: JUMP 0x9b2
---
Entry stack: [V11, V219]
Stack pops: 1
Stack additions: [0x154]
Exit stack: [V11, 0x154]

================================

Block 0x2ca
[0x2ca:0x2d1]
---
Predecessors: [0xe5]
Successors: [0x2d2, 0x2d6]
---
0x2ca JUMPDEST
0x2cb CALLVALUE
0x2cc DUP1
0x2cd ISZERO
0x2ce PUSH2 0x2d6
0x2d1 JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V225 = CALLVALUE
0x2cd: V226 = ISZERO V225
0x2ce: V227 = 0x2d6
0x2d1: JUMPI 0x2d6 V226
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V225]
Exit stack: [V11, V225]

================================

Block 0x2d2
[0x2d2:0x2d5]
---
Predecessors: [0x2ca]
Successors: []
---
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 REVERT
---
0x2d2: V228 = 0x0
0x2d5: REVERT 0x0 0x0
---
Entry stack: [V11, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V225]

================================

Block 0x2d6
[0x2d6:0x2ea]
---
Predecessors: [0x2ca]
Successors: [0x9c1]
---
0x2d6 JUMPDEST
0x2d7 POP
0x2d8 PUSH2 0x21d
0x2db PUSH1 0x1
0x2dd PUSH1 0xa0
0x2df PUSH1 0x2
0x2e1 EXP
0x2e2 SUB
0x2e3 PUSH1 0x4
0x2e5 CALLDATALOAD
0x2e6 AND
0x2e7 PUSH2 0x9c1
0x2ea JUMP
---
0x2d6: JUMPDEST 
0x2d8: V229 = 0x21d
0x2db: V230 = 0x1
0x2dd: V231 = 0xa0
0x2df: V232 = 0x2
0x2e1: V233 = EXP 0x2 0xa0
0x2e2: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e3: V235 = 0x4
0x2e5: V236 = CALLDATALOAD 0x4
0x2e6: V237 = AND V236 0xffffffffffffffffffffffffffffffffffffffff
0x2e7: V238 = 0x9c1
0x2ea: JUMP 0x9c1
---
Entry stack: [V11, V225]
Stack pops: 1
Stack additions: [0x21d, V237]
Exit stack: [V11, 0x21d, V237]

================================

Block 0x2eb
[0x2eb:0x2f2]
---
Predecessors: [0xf0]
Successors: [0x2f3, 0x2f7]
---
0x2eb JUMPDEST
0x2ec CALLVALUE
0x2ed DUP1
0x2ee ISZERO
0x2ef PUSH2 0x2f7
0x2f2 JUMPI
---
0x2eb: JUMPDEST 
0x2ec: V239 = CALLVALUE
0x2ee: V240 = ISZERO V239
0x2ef: V241 = 0x2f7
0x2f2: JUMPI 0x2f7 V240
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V239]
Exit stack: [V11, V239]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x2eb]
Successors: []
---
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 REVERT
---
0x2f3: V242 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V11, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V239]

================================

Block 0x2f7
[0x2f7:0x2ff]
---
Predecessors: [0x2eb]
Successors: [0x9d6]
---
0x2f7 JUMPDEST
0x2f8 POP
0x2f9 PUSH2 0x154
0x2fc PUSH2 0x9d6
0x2ff JUMP
---
0x2f7: JUMPDEST 
0x2f9: V243 = 0x154
0x2fc: V244 = 0x9d6
0x2ff: JUMP 0x9d6
---
Entry stack: [V11, V239]
Stack pops: 1
Stack additions: [0x154]
Exit stack: [V11, 0x154]

================================

Block 0x300
[0x300:0x305]
---
Predecessors: [0x10c]
Successors: [0x115]
---
0x300 JUMPDEST
0x301 PUSH1 0x5
0x303 SLOAD
0x304 DUP2
0x305 JUMP
---
0x300: JUMPDEST 
0x301: V245 = 0x5
0x303: V246 = S[0x5]
0x305: JUMP 0x115
---
Entry stack: [V11, 0x115]
Stack pops: 1
Stack additions: [S0, V246]
Exit stack: [V11, 0x115, V246]

================================

Block 0x306
[0x306:0x30b]
---
Predecessors: [0x133]
Successors: [0x115]
---
0x306 JUMPDEST
0x307 PUSH1 0x3
0x309 SLOAD
0x30a DUP2
0x30b JUMP
---
0x306: JUMPDEST 
0x307: V247 = 0x3
0x309: V248 = S[0x3]
0x30b: JUMP 0x115
---
Entry stack: [V11, 0x115]
Stack pops: 1
Stack additions: [S0, V248]
Exit stack: [V11, 0x115, V248]

================================

Block 0x30c
[0x30c:0x31b]
---
Predecessors: [0x148]
Successors: [0x31c, 0x31d]
---
0x30c JUMPDEST
0x30d PUSH1 0x0
0x30f PUSH1 0x1
0x311 DUP3
0x312 DUP2
0x313 SLOAD
0x314 DUP2
0x315 LT
0x316 ISZERO
0x317 ISZERO
0x318 PUSH2 0x31d
0x31b JUMPI
---
0x30c: JUMPDEST 
0x30d: V249 = 0x0
0x30f: V250 = 0x1
0x313: V251 = S[0x1]
0x315: V252 = LT V91 V251
0x316: V253 = ISZERO V252
0x317: V254 = ISZERO V253
0x318: V255 = 0x31d
0x31b: JUMPI 0x31d V254
---
Entry stack: [V11, 0x154, V91]
Stack pops: 1
Stack additions: [S0, 0x0, 0x1, S0]
Exit stack: [V11, 0x154, V91, 0x0, 0x1, V91]

================================

Block 0x31c
[0x31c:0x31c]
---
Predecessors: [0x30c]
Successors: []
---
0x31c INVALID
---
0x31c: INVALID 
---
Entry stack: [V11, 0x154, V91, 0x0, 0x1, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x154, V91, 0x0, 0x1, V91]

================================

Block 0x31d
[0x31d:0x337]
---
Predecessors: [0x30c]
Successors: [0x154]
---
0x31d JUMPDEST
0x31e PUSH1 0x0
0x320 SWAP2
0x321 DUP3
0x322 MSTORE
0x323 PUSH1 0x20
0x325 SWAP1
0x326 SWAP2
0x327 SHA3
0x328 ADD
0x329 SLOAD
0x32a PUSH1 0x1
0x32c PUSH1 0xa0
0x32e PUSH1 0x2
0x330 EXP
0x331 SUB
0x332 AND
0x333 SWAP3
0x334 SWAP2
0x335 POP
0x336 POP
0x337 JUMP
---
0x31d: JUMPDEST 
0x31e: V256 = 0x0
0x322: M[0x0] = 0x1
0x323: V257 = 0x20
0x327: V258 = SHA3 0x0 0x20
0x328: V259 = ADD V258 V91
0x329: V260 = S[V259]
0x32a: V261 = 0x1
0x32c: V262 = 0xa0
0x32e: V263 = 0x2
0x330: V264 = EXP 0x2 0xa0
0x331: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x332: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x337: JUMP 0x154
---
Entry stack: [V11, 0x154, V91, 0x0, 0x1, V91]
Stack pops: 5
Stack additions: [V266]
Exit stack: [V11, V266]

================================

Block 0x338
[0x338:0x34a]
---
Predecessors: [0x17c]
Successors: [0x34b, 0x34f]
---
0x338 JUMPDEST
0x339 PUSH1 0x6
0x33b SLOAD
0x33c PUSH1 0x1
0x33e PUSH1 0xa0
0x340 PUSH1 0x2
0x342 EXP
0x343 SUB
0x344 AND
0x345 ORIGIN
0x346 EQ
0x347 PUSH2 0x34f
0x34a JUMPI
---
0x338: JUMPDEST 
0x339: V267 = 0x6
0x33b: V268 = S[0x6]
0x33c: V269 = 0x1
0x33e: V270 = 0xa0
0x340: V271 = 0x2
0x342: V272 = EXP 0x2 0xa0
0x343: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x344: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x345: V275 = ORIGIN
0x346: V276 = EQ V275 V274
0x347: V277 = 0x34f
0x34a: JUMPI 0x34f V276
---
Entry stack: [V11, 0x191, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V117]

================================

Block 0x34b
[0x34b:0x34e]
---
Predecessors: [0x338]
Successors: []
---
0x34b PUSH1 0x0
0x34d DUP1
0x34e REVERT
---
0x34b: V278 = 0x0
0x34e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V117]

================================

Block 0x34f
[0x34f:0x36e]
---
Predecessors: [0x338]
Successors: [0x36f, 0x3c6]
---
0x34f JUMPDEST
0x350 PUSH1 0x1
0x352 PUSH1 0xa0
0x354 PUSH1 0x2
0x356 EXP
0x357 SUB
0x358 DUP2
0x359 AND
0x35a PUSH1 0x0
0x35c SWAP1
0x35d DUP2
0x35e MSTORE
0x35f PUSH1 0x7
0x361 PUSH1 0x20
0x363 MSTORE
0x364 PUSH1 0x40
0x366 SWAP1
0x367 SHA3
0x368 SLOAD
0x369 ISZERO
0x36a ISZERO
0x36b PUSH2 0x3c6
0x36e JUMPI
---
0x34f: JUMPDEST 
0x350: V279 = 0x1
0x352: V280 = 0xa0
0x354: V281 = 0x2
0x356: V282 = EXP 0x2 0xa0
0x357: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x359: V284 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x35a: V285 = 0x0
0x35e: M[0x0] = V284
0x35f: V286 = 0x7
0x361: V287 = 0x20
0x363: M[0x20] = 0x7
0x364: V288 = 0x40
0x367: V289 = SHA3 0x0 0x40
0x368: V290 = S[V289]
0x369: V291 = ISZERO V290
0x36a: V292 = ISZERO V291
0x36b: V293 = 0x3c6
0x36e: JUMPI 0x3c6 V292
---
Entry stack: [V11, 0x191, V117]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x191, V117]

================================

Block 0x36f
[0x36f:0x3c5]
---
Predecessors: [0x34f]
Successors: [0x3c6]
---
0x36f PUSH1 0x1
0x371 DUP1
0x372 SLOAD
0x373 DUP1
0x374 DUP3
0x375 ADD
0x376 DUP3
0x377 SSTORE
0x378 PUSH1 0x0
0x37a SWAP2
0x37b SWAP1
0x37c SWAP2
0x37d MSTORE
0x37e PUSH32 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
0x39f ADD
0x3a0 DUP1
0x3a1 SLOAD
0x3a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b7 NOT
0x3b8 AND
0x3b9 PUSH1 0x1
0x3bb PUSH1 0xa0
0x3bd PUSH1 0x2
0x3bf EXP
0x3c0 SUB
0x3c1 DUP4
0x3c2 AND
0x3c3 OR
0x3c4 SWAP1
0x3c5 SSTORE
---
0x36f: V294 = 0x1
0x372: V295 = S[0x1]
0x375: V296 = ADD 0x1 V295
0x377: S[0x1] = V296
0x378: V297 = 0x0
0x37d: M[0x0] = 0x1
0x37e: V298 = 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
0x39f: V299 = ADD 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6 V295
0x3a1: V300 = S[V299]
0x3a2: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V302 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3b8: V303 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V300
0x3b9: V304 = 0x1
0x3bb: V305 = 0xa0
0x3bd: V306 = 0x2
0x3bf: V307 = EXP 0x2 0xa0
0x3c0: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c2: V309 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x3c3: V310 = OR V309 V303
0x3c5: S[V299] = V310
---
Entry stack: [V11, 0x191, V117]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x191, V117]

================================

Block 0x3c6
[0x3c6:0x3ef]
---
Predecessors: [0x34f, 0x36f]
Successors: [0x9e5]
---
0x3c6 JUMPDEST
0x3c7 PUSH1 0x1
0x3c9 PUSH1 0xa0
0x3cb PUSH1 0x2
0x3cd EXP
0x3ce SUB
0x3cf DUP2
0x3d0 AND
0x3d1 PUSH1 0x0
0x3d3 SWAP1
0x3d4 DUP2
0x3d5 MSTORE
0x3d6 PUSH1 0x7
0x3d8 PUSH1 0x20
0x3da MSTORE
0x3db PUSH1 0x40
0x3dd SWAP1
0x3de SHA3
0x3df SLOAD
0x3e0 PUSH2 0x3f0
0x3e3 SWAP1
0x3e4 PUSH1 0x1
0x3e6 PUSH4 0xffffffff
0x3eb PUSH2 0x9e5
0x3ee AND
0x3ef JUMP
---
0x3c6: JUMPDEST 
0x3c7: V311 = 0x1
0x3c9: V312 = 0xa0
0x3cb: V313 = 0x2
0x3cd: V314 = EXP 0x2 0xa0
0x3ce: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d0: V316 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x3d1: V317 = 0x0
0x3d5: M[0x0] = V316
0x3d6: V318 = 0x7
0x3d8: V319 = 0x20
0x3da: M[0x20] = 0x7
0x3db: V320 = 0x40
0x3de: V321 = SHA3 0x0 0x40
0x3df: V322 = S[V321]
0x3e0: V323 = 0x3f0
0x3e4: V324 = 0x1
0x3e6: V325 = 0xffffffff
0x3eb: V326 = 0x9e5
0x3ee: V327 = AND 0x9e5 0xffffffff
0x3ef: JUMP 0x9e5
---
Entry stack: [V11, 0x191, V117]
Stack pops: 1
Stack additions: [S0, 0x3f0, V322, 0x1]
Exit stack: [V11, 0x191, V117, 0x3f0, V322, 0x1]

================================

Block 0x3f0
[0x3f0:0x40b]
---
Predecessors: [0x9f2]
Successors: [0x191, 0x52a]
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x1
0x3f3 PUSH1 0xa0
0x3f5 PUSH1 0x2
0x3f7 EXP
0x3f8 SUB
0x3f9 SWAP1
0x3fa SWAP2
0x3fb AND
0x3fc PUSH1 0x0
0x3fe SWAP1
0x3ff DUP2
0x400 MSTORE
0x401 PUSH1 0x7
0x403 PUSH1 0x20
0x405 MSTORE
0x406 PUSH1 0x40
0x408 SWAP1
0x409 SHA3
0x40a SSTORE
0x40b JUMP
---
0x3f0: JUMPDEST 
0x3f1: V328 = 0x1
0x3f3: V329 = 0xa0
0x3f5: V330 = 0x2
0x3f7: V331 = EXP 0x2 0xa0
0x3f8: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fb: V333 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V334 = 0x0
0x400: M[0x0] = V333
0x401: V335 = 0x7
0x403: V336 = 0x20
0x405: M[0x20] = 0x7
0x406: V337 = 0x40
0x409: V338 = SHA3 0x0 0x40
0x40a: S[V338] = S0
0x40b: JUMP S2
---
Entry stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x40c
[0x40c:0x473]
---
Predecessors: [0x19f, 0x669]
Successors: [0x474, 0x478]
---
0x40c JUMPDEST
0x40d PUSH1 0x2
0x40f SLOAD
0x410 PUSH1 0x40
0x412 DUP1
0x413 MLOAD
0x414 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x435 DUP2
0x436 MSTORE
0x437 ADDRESS
0x438 PUSH1 0x4
0x43a DUP3
0x43b ADD
0x43c MSTORE
0x43d SWAP1
0x43e MLOAD
0x43f PUSH1 0x0
0x441 SWAP3
0x442 DUP4
0x443 SWAP3
0x444 DUP4
0x445 SWAP3
0x446 PUSH1 0x1
0x448 PUSH1 0xa0
0x44a PUSH1 0x2
0x44c EXP
0x44d SUB
0x44e SWAP1
0x44f SWAP3
0x450 AND
0x451 SWAP2
0x452 PUSH4 0x70a08231
0x457 SWAP2
0x458 PUSH1 0x24
0x45a DUP1
0x45b DUP3
0x45c ADD
0x45d SWAP3
0x45e PUSH1 0x20
0x460 SWAP3
0x461 SWAP1
0x462 SWAP2
0x463 SWAP1
0x464 DUP3
0x465 SWAP1
0x466 SUB
0x467 ADD
0x468 DUP2
0x469 DUP8
0x46a DUP8
0x46b DUP1
0x46c EXTCODESIZE
0x46d ISZERO
0x46e DUP1
0x46f ISZERO
0x470 PUSH2 0x478
0x473 JUMPI
---
0x40c: JUMPDEST 
0x40d: V339 = 0x2
0x40f: V340 = S[0x2]
0x410: V341 = 0x40
0x413: V342 = M[0x40]
0x414: V343 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x436: M[V342] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x437: V344 = ADDRESS
0x438: V345 = 0x4
0x43b: V346 = ADD V342 0x4
0x43c: M[V346] = V344
0x43e: V347 = M[0x40]
0x43f: V348 = 0x0
0x446: V349 = 0x1
0x448: V350 = 0xa0
0x44a: V351 = 0x2
0x44c: V352 = EXP 0x2 0xa0
0x44d: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x450: V354 = AND V340 0xffffffffffffffffffffffffffffffffffffffff
0x452: V355 = 0x70a08231
0x458: V356 = 0x24
0x45c: V357 = ADD V342 0x24
0x45e: V358 = 0x20
0x466: V359 = SUB V342 V347
0x467: V360 = ADD V359 0x24
0x46c: V361 = EXTCODESIZE V354
0x46d: V362 = ISZERO V361
0x46f: V363 = ISZERO V362
0x470: V364 = 0x478
0x473: JUMPI 0x478 V363
---
Entry stack: [V11, 0x191, S10, S9, 0x0, 0x0, 0x0, S5, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S1, {0x115, 0x679}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V354, 0x70a08231, V357, 0x20, V347, V360, V347, 0x0, V354, V362]
Exit stack: [V11, 0x191, S10, S9, 0x0, 0x0, 0x0, S5, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S1, {0x115, 0x679}, 0x0, 0x0, 0x0, V354, 0x70a08231, V357, 0x20, V347, V360, V347, 0x0, V354, V362]

================================

Block 0x474
[0x474:0x477]
---
Predecessors: [0x40c]
Successors: []
---
0x474 PUSH1 0x0
0x476 DUP1
0x477 REVERT
---
0x474: V365 = 0x0
0x477: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, S23, S22, 0x0, 0x0, 0x0, S18, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S14, {0x115, 0x679}, 0x0, 0x0, 0x0, V354, 0x70a08231, V357, 0x20, V347, V360, V347, 0x0, V354, V362]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, S23, S22, 0x0, 0x0, 0x0, S18, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S14, {0x115, 0x679}, 0x0, 0x0, 0x0, V354, 0x70a08231, V357, 0x20, V347, V360, V347, 0x0, V354, V362]

================================

Block 0x478
[0x478:0x482]
---
Predecessors: [0x40c]
Successors: [0x483, 0x48c]
---
0x478 JUMPDEST
0x479 POP
0x47a GAS
0x47b CALL
0x47c ISZERO
0x47d DUP1
0x47e ISZERO
0x47f PUSH2 0x48c
0x482 JUMPI
---
0x478: JUMPDEST 
0x47a: V366 = GAS
0x47b: V367 = CALL V366 V354 0x0 V347 V360 V347 0x20
0x47c: V368 = ISZERO V367
0x47e: V369 = ISZERO V368
0x47f: V370 = 0x48c
0x482: JUMPI 0x48c V369
---
Entry stack: [V11, 0x191, S23, S22, 0x0, 0x0, 0x0, S18, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S14, {0x115, 0x679}, 0x0, 0x0, 0x0, V354, 0x70a08231, V357, 0x20, V347, V360, V347, 0x0, V354, V362]
Stack pops: 7
Stack additions: [V368]
Exit stack: [V11, 0x191, S23, S22, 0x0, 0x0, 0x0, S18, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S14, {0x115, 0x679}, 0x0, 0x0, 0x0, V354, 0x70a08231, V357, V368]

================================

Block 0x483
[0x483:0x48b]
---
Predecessors: [0x478]
Successors: []
---
0x483 RETURNDATASIZE
0x484 PUSH1 0x0
0x486 DUP1
0x487 RETURNDATACOPY
0x488 RETURNDATASIZE
0x489 PUSH1 0x0
0x48b REVERT
---
0x483: V371 = RETURNDATASIZE
0x484: V372 = 0x0
0x487: RETURNDATACOPY 0x0 0x0 V371
0x488: V373 = RETURNDATASIZE
0x489: V374 = 0x0
0x48b: REVERT 0x0 V373
---
Entry stack: [V11, 0x191, S17, S16, 0x0, 0x0, 0x0, S12, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S8, {0x115, 0x679}, 0x0, 0x0, 0x0, S3, 0x70a08231, S1, V368]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, S17, S16, 0x0, 0x0, 0x0, S12, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S8, {0x115, 0x679}, 0x0, 0x0, 0x0, S3, 0x70a08231, S1, V368]

================================

Block 0x48c
[0x48c:0x49d]
---
Predecessors: [0x478]
Successors: [0x49e, 0x4a2]
---
0x48c JUMPDEST
0x48d POP
0x48e POP
0x48f POP
0x490 POP
0x491 PUSH1 0x40
0x493 MLOAD
0x494 RETURNDATASIZE
0x495 PUSH1 0x20
0x497 DUP2
0x498 LT
0x499 ISZERO
0x49a PUSH2 0x4a2
0x49d JUMPI
---
0x48c: JUMPDEST 
0x491: V375 = 0x40
0x493: V376 = M[0x40]
0x494: V377 = RETURNDATASIZE
0x495: V378 = 0x20
0x498: V379 = LT V377 0x20
0x499: V380 = ISZERO V379
0x49a: V381 = 0x4a2
0x49d: JUMPI 0x4a2 V380
---
Entry stack: [V11, 0x191, S17, S16, 0x0, 0x0, 0x0, S12, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S8, {0x115, 0x679}, 0x0, 0x0, 0x0, S3, 0x70a08231, S1, V368]
Stack pops: 4
Stack additions: [V376, V377]
Exit stack: [V11, 0x191, S17, S16, 0x0, 0x0, 0x0, S12, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S8, {0x115, 0x679}, 0x0, 0x0, 0x0, V376, V377]

================================

Block 0x49e
[0x49e:0x4a1]
---
Predecessors: [0x48c]
Successors: []
---
0x49e PUSH1 0x0
0x4a0 DUP1
0x4a1 REVERT
---
0x49e: V382 = 0x0
0x4a1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, S15, S14, 0x0, 0x0, 0x0, S10, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S6, {0x115, 0x679}, 0x0, 0x0, 0x0, V376, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, S15, S14, 0x0, 0x0, 0x0, S10, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S6, {0x115, 0x679}, 0x0, 0x0, 0x0, V376, V377]

================================

Block 0x4a2
[0x4a2:0x4ba]
---
Predecessors: [0x48c]
Successors: [0x9e5]
---
0x4a2 JUMPDEST
0x4a3 POP
0x4a4 MLOAD
0x4a5 PUSH1 0x9
0x4a7 SLOAD
0x4a8 SWAP1
0x4a9 SWAP3
0x4aa POP
0x4ab PUSH2 0x4bb
0x4ae SWAP1
0x4af DUP4
0x4b0 SWAP1
0x4b1 PUSH4 0xffffffff
0x4b6 PUSH2 0x9e5
0x4b9 AND
0x4ba JUMP
---
0x4a2: JUMPDEST 
0x4a4: V383 = M[V376]
0x4a5: V384 = 0x9
0x4a7: V385 = S[0x9]
0x4ab: V386 = 0x4bb
0x4b1: V387 = 0xffffffff
0x4b6: V388 = 0x9e5
0x4b9: V389 = AND 0x9e5 0xffffffff
0x4ba: JUMP 0x9e5
---
Entry stack: [V11, 0x191, S15, S14, 0x0, 0x0, 0x0, S10, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S6, {0x115, 0x679}, 0x0, 0x0, 0x0, V376, V377]
Stack pops: 4
Stack additions: [V383, S2, 0x4bb, V383, V385]
Exit stack: [V11, 0x191, S15, S14, 0x0, 0x0, 0x0, S10, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S6, {0x115, 0x679}, 0x0, V383, 0x0, 0x4bb, V383, V385]

================================

Block 0x4bb
[0x4bb:0x4c7]
---
Predecessors: [0x9f2]
Successors: [0x4c8, 0x4d0]
---
0x4bb JUMPDEST
0x4bc SWAP1
0x4bd POP
0x4be PUSH1 0x3
0x4c0 SLOAD
0x4c1 TIMESTAMP
0x4c2 LT
0x4c3 ISZERO
0x4c4 PUSH2 0x4d0
0x4c7 JUMPI
---
0x4bb: JUMPDEST 
0x4be: V390 = 0x3
0x4c0: V391 = S[0x3]
0x4c1: V392 = TIMESTAMP
0x4c2: V393 = LT V392 V391
0x4c3: V394 = ISZERO V393
0x4c4: V395 = 0x4d0
0x4c7: JUMPI 0x4d0 V394
---
Entry stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x4c8
[0x4c8:0x4cf]
---
Predecessors: [0x4bb]
Successors: [0x52d]
---
0x4c8 PUSH1 0x0
0x4ca SWAP3
0x4cb POP
0x4cc PUSH2 0x52d
0x4cf JUMP
---
0x4c8: V396 = 0x0
0x4cc: V397 = 0x52d
0x4cf: JUMP 0x52d
---
Entry stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, S0]

================================

Block 0x4d0
[0x4d0:0x4e4]
---
Predecessors: [0x4bb]
Successors: [0x9e5]
---
0x4d0 JUMPDEST
0x4d1 PUSH1 0x5
0x4d3 SLOAD
0x4d4 PUSH1 0x4
0x4d6 SLOAD
0x4d7 PUSH2 0x4e5
0x4da SWAP2
0x4db PUSH4 0xffffffff
0x4e0 PUSH2 0x9e5
0x4e3 AND
0x4e4 JUMP
---
0x4d0: JUMPDEST 
0x4d1: V398 = 0x5
0x4d3: V399 = S[0x5]
0x4d4: V400 = 0x4
0x4d6: V401 = S[0x4]
0x4d7: V402 = 0x4e5
0x4db: V403 = 0xffffffff
0x4e0: V404 = 0x9e5
0x4e3: V405 = AND 0x9e5 0xffffffff
0x4e4: JUMP 0x9e5
---
Entry stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x4e5, V401, V399]
Exit stack: [S15, 0x191, S13, S12, 0x0, 0x0, 0x0, S8, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S4, {0x115, 0x679}, 0x0, S1, S0, 0x4e5, V401, V399]

================================

Block 0x4e5
[0x4e5:0x4eb]
---
Predecessors: [0x9f2]
Successors: [0x4ec, 0x4f3]
---
0x4e5 JUMPDEST
0x4e6 TIMESTAMP
0x4e7 LT
0x4e8 PUSH2 0x4f3
0x4eb JUMPI
---
0x4e5: JUMPDEST 
0x4e6: V406 = TIMESTAMP
0x4e7: V407 = LT V406 S0
0x4e8: V408 = 0x4f3
0x4eb: JUMPI 0x4f3 V407
---
Entry stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x4ec
[0x4ec:0x4f2]
---
Predecessors: [0x4e5]
Successors: [0x52d]
---
0x4ec DUP1
0x4ed SWAP3
0x4ee POP
0x4ef PUSH2 0x52d
0x4f2 JUMP
---
0x4ef: V409 = 0x52d
0x4f2: JUMP 0x52d
---
Entry stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, S0]
Exit stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, S0]

================================

Block 0x4f3
[0x4f3:0x510]
---
Predecessors: [0x4e5]
Successors: [0x9f8]
---
0x4f3 JUMPDEST
0x4f4 PUSH2 0x52a
0x4f7 PUSH1 0x5
0x4f9 SLOAD
0x4fa PUSH2 0x51e
0x4fd PUSH2 0x511
0x500 PUSH1 0x4
0x502 SLOAD
0x503 TIMESTAMP
0x504 PUSH2 0x9f8
0x507 SWAP1
0x508 SWAP2
0x509 SWAP1
0x50a PUSH4 0xffffffff
0x50f AND
0x510 JUMP
---
0x4f3: JUMPDEST 
0x4f4: V410 = 0x52a
0x4f7: V411 = 0x5
0x4f9: V412 = S[0x5]
0x4fa: V413 = 0x51e
0x4fd: V414 = 0x511
0x500: V415 = 0x4
0x502: V416 = S[0x4]
0x503: V417 = TIMESTAMP
0x504: V418 = 0x9f8
0x50a: V419 = 0xffffffff
0x50f: V420 = AND 0xffffffff 0x9f8
0x510: JUMP 0x9f8
---
Entry stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x52a, V412, 0x51e, 0x511, V417, V416]
Exit stack: [S15, 0x191, S13, S12, 0x0, 0x0, 0x0, S8, {0x115, 0x5e9, 0x803}, 0x0, 0x685, S4, {0x115, 0x679}, 0x0, S1, S0, 0x52a, V412, 0x51e, 0x511, V417, V416]

================================

Block 0x511
[0x511:0x51d]
---
Predecessors: [0xa04]
Successors: [0xa0a]
---
0x511 JUMPDEST
0x512 DUP5
0x513 SWAP1
0x514 PUSH4 0xffffffff
0x519 PUSH2 0xa0a
0x51c AND
0x51d JUMP
---
0x511: JUMPDEST 
0x514: V421 = 0xffffffff
0x519: V422 = 0xa0a
0x51c: V423 = AND 0xa0a 0xffffffff
0x51d: JUMP 0xa0a
---
Entry stack: [V11, S18, S17, S16, S15, 0x0, 0x0, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V803]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, S0]
Exit stack: [V11, S18, S17, S16, S15, 0x0, 0x0, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S4, V803]

================================

Block 0x51e
[0x51e:0x529]
---
Predecessors: [0x9f2]
Successors: [0xa33]
---
0x51e JUMPDEST
0x51f SWAP1
0x520 PUSH4 0xffffffff
0x525 PUSH2 0xa33
0x528 AND
0x529 JUMP
---
0x51e: JUMPDEST 
0x520: V424 = 0xffffffff
0x525: V425 = 0xa33
0x528: V426 = AND 0xa33 0xffffffff
0x529: JUMP 0xa33
---
Entry stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x52a
[0x52a:0x52c]
---
Predecessors: [0x3f0, 0xa40]
Successors: [0x52d]
---
0x52a JUMPDEST
0x52b SWAP3
0x52c POP
---
0x52a: JUMPDEST 
---
Entry stack: [V11, 0x191, S16, S15, S14, S13, 0x0, S11, {0x0, 0x115, 0x5e9, 0x803}, S9, S8, S7, S6, S5, S4, S3, S2, S1, V821]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V11, 0x191, S16, S15, S14, S13, 0x0, S11, {0x0, 0x115, 0x5e9, 0x803}, S9, S8, S7, S6, S5, S4, V821, S2, S1]

================================

Block 0x52d
[0x52d:0x531]
---
Predecessors: [0x4c8, 0x4ec, 0x52a]
Successors: [0x115, 0x191, 0x679]
---
0x52d JUMPDEST
0x52e POP
0x52f POP
0x530 SWAP1
0x531 JUMP
---
0x52d: JUMPDEST 
0x531: JUMP S3
---
Entry stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S2]

================================

Block 0x532
[0x532:0x54c]
---
Predecessors: [0x1b4]
Successors: [0x54d, 0x55f]
---
0x532 JUMPDEST
0x533 PUSH1 0x0
0x535 DUP1
0x536 SLOAD
0x537 DUP2
0x538 SWAP1
0x539 DUP2
0x53a SWAP1
0x53b DUP2
0x53c SWAP1
0x53d PUSH1 0x1
0x53f PUSH1 0xa0
0x541 PUSH1 0x2
0x543 EXP
0x544 SUB
0x545 AND
0x546 CALLER
0x547 EQ
0x548 DUP1
0x549 PUSH2 0x55f
0x54c JUMPI
---
0x532: JUMPDEST 
0x533: V427 = 0x0
0x536: V428 = S[0x0]
0x53d: V429 = 0x1
0x53f: V430 = 0xa0
0x541: V431 = 0x2
0x543: V432 = EXP 0x2 0xa0
0x544: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x545: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x546: V435 = CALLER
0x547: V436 = EQ V435 V434
0x549: V437 = 0x55f
0x54c: JUMPI 0x55f V436
---
Entry stack: [V11, 0x191]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, V436]
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0, V436]

================================

Block 0x54d
[0x54d:0x55e]
---
Predecessors: [0x532]
Successors: [0x55f]
---
0x54d POP
0x54e CALLER
0x54f PUSH1 0x0
0x551 SWAP1
0x552 DUP2
0x553 MSTORE
0x554 PUSH1 0x7
0x556 PUSH1 0x20
0x558 MSTORE
0x559 PUSH1 0x40
0x55b DUP2
0x55c SHA3
0x55d SLOAD
0x55e GT
---
0x54e: V438 = CALLER
0x54f: V439 = 0x0
0x553: M[0x0] = V438
0x554: V440 = 0x7
0x556: V441 = 0x20
0x558: M[0x20] = 0x7
0x559: V442 = 0x40
0x55c: V443 = SHA3 0x0 0x40
0x55d: V444 = S[V443]
0x55e: V445 = GT V444 0x0
---
Entry stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0, V436]
Stack pops: 1
Stack additions: [V445]
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0, V445]

================================

Block 0x55f
[0x55f:0x564]
---
Predecessors: [0x532, 0x54d]
Successors: [0x565, 0x574]
---
0x55f JUMPDEST
0x560 DUP1
0x561 PUSH2 0x574
0x564 JUMPI
---
0x55f: JUMPDEST 
0x561: V446 = 0x574
0x564: JUMPI 0x574 S0
---
Entry stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0, S0]

================================

Block 0x565
[0x565:0x573]
---
Predecessors: [0x55f]
Successors: [0x574]
---
0x565 POP
0x566 PUSH1 0x6
0x568 SLOAD
0x569 PUSH1 0x1
0x56b PUSH1 0xa0
0x56d PUSH1 0x2
0x56f EXP
0x570 SUB
0x571 AND
0x572 CALLER
0x573 EQ
---
0x566: V447 = 0x6
0x568: V448 = S[0x6]
0x569: V449 = 0x1
0x56b: V450 = 0xa0
0x56d: V451 = 0x2
0x56f: V452 = EXP 0x2 0xa0
0x570: V453 = SUB 0x10000000000000000000000000000000000000000 0x1
0x571: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x572: V455 = CALLER
0x573: V456 = EQ V455 V454
---
Entry stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V456]
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0, V456]

================================

Block 0x574
[0x574:0x57a]
---
Predecessors: [0x55f, 0x565]
Successors: [0x57b, 0x5e1]
---
0x574 JUMPDEST
0x575 ISZERO
0x576 ISZERO
0x577 PUSH2 0x5e1
0x57a JUMPI
---
0x574: JUMPDEST 
0x575: V457 = ISZERO S0
0x576: V458 = ISZERO V457
0x577: V459 = 0x5e1
0x57a: JUMPI 0x5e1 V458
---
Entry stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x57b
[0x57b:0x5e0]
---
Predecessors: [0x574]
Successors: []
---
0x57b PUSH1 0x40
0x57d DUP1
0x57e MLOAD
0x57f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5a0 DUP2
0x5a1 MSTORE
0x5a2 PUSH1 0x20
0x5a4 PUSH1 0x4
0x5a6 DUP3
0x5a7 ADD
0x5a8 MSTORE
0x5a9 PUSH1 0x1a
0x5ab PUSH1 0x24
0x5ad DUP3
0x5ae ADD
0x5af MSTORE
0x5b0 PUSH32 0x596f752063616e6e6f742072656c6561736520746f6b656e7321000000000000
0x5d1 PUSH1 0x44
0x5d3 DUP3
0x5d4 ADD
0x5d5 MSTORE
0x5d6 SWAP1
0x5d7 MLOAD
0x5d8 SWAP1
0x5d9 DUP2
0x5da SWAP1
0x5db SUB
0x5dc PUSH1 0x64
0x5de ADD
0x5df SWAP1
0x5e0 REVERT
---
0x57b: V460 = 0x40
0x57e: V461 = M[0x40]
0x57f: V462 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5a1: M[V461] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5a2: V463 = 0x20
0x5a4: V464 = 0x4
0x5a7: V465 = ADD V461 0x4
0x5a8: M[V465] = 0x20
0x5a9: V466 = 0x1a
0x5ab: V467 = 0x24
0x5ae: V468 = ADD V461 0x24
0x5af: M[V468] = 0x1a
0x5b0: V469 = 0x596f752063616e6e6f742072656c6561736520746f6b656e7321000000000000
0x5d1: V470 = 0x44
0x5d4: V471 = ADD V461 0x44
0x5d5: M[V471] = 0x596f752063616e6e6f742072656c6561736520746f6b656e7321000000000000
0x5d7: V472 = M[0x40]
0x5db: V473 = SUB V461 V472
0x5dc: V474 = 0x64
0x5de: V475 = ADD 0x64 V473
0x5e0: REVERT V472 V475
---
Entry stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5e1
[0x5e1:0x5e8]
---
Predecessors: [0x574]
Successors: [0x669]
---
0x5e1 JUMPDEST
0x5e2 PUSH2 0x5e9
0x5e5 PUSH2 0x669
0x5e8 JUMP
---
0x5e1: JUMPDEST 
0x5e2: V476 = 0x5e9
0x5e5: V477 = 0x669
0x5e8: JUMP 0x669
---
Entry stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x5e9]
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, 0x0, 0x5e9]

================================

Block 0x5e9
[0x5e9:0x5f4]
---
Predecessors: [0x685, 0x9f2]
Successors: [0x5f5, 0x663]
---
0x5e9 JUMPDEST
0x5ea SWAP4
0x5eb POP
0x5ec PUSH1 0x0
0x5ee DUP5
0x5ef GT
0x5f0 ISZERO
0x5f1 PUSH2 0x663
0x5f4 JUMPI
---
0x5e9: JUMPDEST 
0x5ec: V478 = 0x0
0x5ef: V479 = GT S0 0x0
0x5f0: V480 = ISZERO V479
0x5f1: V481 = 0x663
0x5f4: JUMPI 0x663 V480
---
Entry stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0, S3, S2, S1]
Exit stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S0, S3, S2, S1]

================================

Block 0x5f5
[0x5f5:0x608]
---
Predecessors: [0x5e9]
Successors: [0xa33]
---
0x5f5 PUSH1 0x1
0x5f7 SLOAD
0x5f8 SWAP3
0x5f9 POP
0x5fa PUSH2 0x609
0x5fd DUP5
0x5fe DUP5
0x5ff PUSH4 0xffffffff
0x604 PUSH2 0xa33
0x607 AND
0x608 JUMP
---
0x5f5: V482 = 0x1
0x5f7: V483 = S[0x1]
0x5fa: V484 = 0x609
0x5ff: V485 = 0xffffffff
0x604: V486 = 0xa33
0x607: V487 = AND 0xa33 0xffffffff
0x608: JUMP 0xa33
---
Entry stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, V483, S1, S0, 0x609, S3, V483]
Exit stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, V483, S1, S0, 0x609, S3, V483]

================================

Block 0x609
[0x609:0x61e]
---
Predecessors: [0xa40]
Successors: [0x9e5]
---
0x609 JUMPDEST
0x60a PUSH1 0x9
0x60c SLOAD
0x60d SWAP1
0x60e SWAP3
0x60f POP
0x610 PUSH2 0x61f
0x613 SWAP1
0x614 DUP6
0x615 PUSH4 0xffffffff
0x61a PUSH2 0x9e5
0x61d AND
0x61e JUMP
---
0x609: JUMPDEST 
0x60a: V488 = 0x9
0x60c: V489 = S[0x9]
0x610: V490 = 0x61f
0x615: V491 = 0xffffffff
0x61a: V492 = 0x9e5
0x61d: V493 = AND 0x9e5 0xffffffff
0x61e: JUMP 0x9e5
---
Entry stack: [V11, 0x191, S16, S15, S14, S13, 0x0, S11, {0x0, 0x115, 0x5e9, 0x803}, S9, S8, S7, S6, S5, S4, S3, S2, S1, V821]
Stack pops: 5
Stack additions: [S4, S3, S0, S1, 0x61f, V489, S4]
Exit stack: [V11, 0x191, S16, S15, S14, S13, 0x0, S11, {0x0, 0x115, 0x5e9, 0x803}, S9, S8, S7, S6, S5, S4, S3, V821, S1, 0x61f, V489, S4]

================================

Block 0x61f
[0x61f:0x625]
---
Predecessors: [0x9f2]
Successors: [0x626]
---
0x61f JUMPDEST
0x620 PUSH1 0x9
0x622 SSTORE
0x623 POP
0x624 PUSH1 0x0
---
0x61f: JUMPDEST 
0x620: V494 = 0x9
0x622: S[0x9] = S0
0x624: V495 = 0x0
---
Entry stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [0x0]
Exit stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0]

================================

Block 0x626
[0x626:0x62e]
---
Predecessors: [0x61f, 0x65b]
Successors: [0x62f, 0x663]
---
0x626 JUMPDEST
0x627 DUP3
0x628 DUP2
0x629 LT
0x62a ISZERO
0x62b PUSH2 0x663
0x62e JUMPI
---
0x626: JUMPDEST 
0x629: V496 = LT S0 S2
0x62a: V497 = ISZERO V496
0x62b: V498 = 0x663
0x62e: JUMPI 0x663 V497
---
Entry stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x62f
[0x62f:0x63e]
---
Predecessors: [0x626]
Successors: [0x63f, 0x640]
---
0x62f PUSH2 0x65b
0x632 PUSH1 0x1
0x634 DUP3
0x635 DUP2
0x636 SLOAD
0x637 DUP2
0x638 LT
0x639 ISZERO
0x63a ISZERO
0x63b PUSH2 0x640
0x63e JUMPI
---
0x62f: V499 = 0x65b
0x632: V500 = 0x1
0x636: V501 = S[0x1]
0x638: V502 = LT S0 V501
0x639: V503 = ISZERO V502
0x63a: V504 = ISZERO V503
0x63b: V505 = 0x640
0x63e: JUMPI 0x640 V504
---
Entry stack: [V11, 0x191, S15, S14, 0x0, 0x0, 0x0, S10, {0x115, 0x5e9, 0x803}, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x65b, 0x1, S0]
Exit stack: [V11, 0x191, S15, S14, 0x0, 0x0, 0x0, S10, {0x115, 0x5e9, 0x803}, 0x0, S7, S6, S5, S4, S3, S2, S1, S0, 0x65b, 0x1, S0]

================================

Block 0x63f
[0x63f:0x63f]
---
Predecessors: [0x62f]
Successors: []
---
0x63f INVALID
---
0x63f: INVALID 
---
Entry stack: [0x191, S18, S17, 0x0, 0x0, 0x0, S13, {0x115, 0x5e9, 0x803}, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, 0x65b, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x191, S18, S17, 0x0, 0x0, 0x0, S13, {0x115, 0x5e9, 0x803}, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, 0x65b, 0x1, S0]

================================

Block 0x640
[0x640:0x65a]
---
Predecessors: [0x62f]
Successors: [0xa48]
---
0x640 JUMPDEST
0x641 PUSH1 0x0
0x643 SWAP2
0x644 DUP3
0x645 MSTORE
0x646 PUSH1 0x20
0x648 SWAP1
0x649 SWAP2
0x64a SHA3
0x64b ADD
0x64c SLOAD
0x64d PUSH1 0x1
0x64f PUSH1 0xa0
0x651 PUSH1 0x2
0x653 EXP
0x654 SUB
0x655 AND
0x656 DUP4
0x657 PUSH2 0xa48
0x65a JUMP
---
0x640: JUMPDEST 
0x641: V506 = 0x0
0x645: M[0x0] = 0x1
0x646: V507 = 0x20
0x64a: V508 = SHA3 0x0 0x20
0x64b: V509 = ADD V508 S0
0x64c: V510 = S[V509]
0x64d: V511 = 0x1
0x64f: V512 = 0xa0
0x651: V513 = 0x2
0x653: V514 = EXP 0x2 0xa0
0x654: V515 = SUB 0x10000000000000000000000000000000000000000 0x1
0x655: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x657: V517 = 0xa48
0x65a: JUMP 0xa48
---
Entry stack: [0x191, S18, S17, 0x0, 0x0, 0x0, S13, {0x115, 0x5e9, 0x803}, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, 0x65b, 0x1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, V516, S4]
Exit stack: [0x191, S18, S17, 0x0, 0x0, 0x0, S13, {0x115, 0x5e9, 0x803}, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, 0x65b, V516, S4]

================================

Block 0x65b
[0x65b:0x662]
---
Predecessors: [0xae1]
Successors: [0x626]
---
0x65b JUMPDEST
0x65c PUSH1 0x1
0x65e ADD
0x65f PUSH2 0x626
0x662 JUMP
---
0x65b: JUMPDEST 
0x65c: V518 = 0x1
0x65e: V519 = ADD 0x1 {0x0, 0x1}
0x65f: V520 = 0x626
0x662: JUMP 0x626
---
Entry stack: [0x191, 0x0, 0x0, 0x0, S10, {0x115, 0x5e9}, 0x0, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: [V519]
Exit stack: [0x191, 0x0, 0x0, 0x0, S10, {0x115, 0x5e9}, 0x0, S7, S6, S5, S4, S3, S2, S1, V519]

================================

Block 0x663
[0x663:0x668]
---
Predecessors: [0x5e9, 0x626]
Successors: [0x115, 0x191, 0x679]
---
0x663 JUMPDEST
0x664 POP
0x665 POP
0x666 POP
0x667 POP
0x668 JUMP
---
0x663: JUMPDEST 
0x668: JUMP S4
---
Entry stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11, S16, S15, S14, S13, S12, 0x0, S10, S9, S8, S7, S6, S5]

================================

Block 0x669
[0x669:0x678]
---
Predecessors: [0x1c9, 0x5e1, 0x7f7]
Successors: [0x40c]
---
0x669 JUMPDEST
0x66a PUSH1 0x0
0x66c PUSH2 0x685
0x66f PUSH1 0x9
0x671 SLOAD
0x672 PUSH2 0x679
0x675 PUSH2 0x40c
0x678 JUMP
---
0x669: JUMPDEST 
0x66a: V521 = 0x0
0x66c: V522 = 0x685
0x66f: V523 = 0x9
0x671: V524 = S[0x9]
0x672: V525 = 0x679
0x675: V526 = 0x40c
0x678: JUMP 0x40c
---
Entry stack: [V11, 0x191, S6, S5, 0x0, 0x0, 0x0, S1, {0x115, 0x5e9, 0x803}]
Stack pops: 0
Stack additions: [0x0, 0x685, V524, 0x679]
Exit stack: [V11, 0x191, S6, S5, 0x0, 0x0, 0x0, S1, {0x115, 0x5e9, 0x803}, 0x0, 0x685, V524, 0x679]

================================

Block 0x679
[0x679:0x684]
---
Predecessors: [0x52d, 0x663, 0x8ee]
Successors: [0x9f8]
---
0x679 JUMPDEST
0x67a SWAP1
0x67b PUSH4 0xffffffff
0x680 PUSH2 0x9f8
0x683 AND
0x684 JUMP
---
0x679: JUMPDEST 
0x67b: V527 = 0xffffffff
0x680: V528 = 0x9f8
0x683: V529 = AND 0x9f8 0xffffffff
0x684: JUMP 0x9f8
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x685
[0x685:0x689]
---
Predecessors: [0xa04]
Successors: [0x115, 0x5e9, 0x803]
---
0x685 JUMPDEST
0x686 SWAP1
0x687 POP
0x688 SWAP1
0x689 JUMP
---
0x685: JUMPDEST 
0x689: JUMP S2
---
Entry stack: [V11, S18, S17, S16, S15, 0x0, 0x0, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V803]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S18, S17, S16, S15, 0x0, 0x0, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V803]

================================

Block 0x68a
[0x68a:0x69c]
---
Predecessors: [0x1de]
Successors: [0x69d, 0x6a1]
---
0x68a JUMPDEST
0x68b PUSH1 0x0
0x68d SLOAD
0x68e PUSH1 0x1
0x690 PUSH1 0xa0
0x692 PUSH1 0x2
0x694 EXP
0x695 SUB
0x696 AND
0x697 CALLER
0x698 EQ
0x699 PUSH2 0x6a1
0x69c JUMPI
---
0x68a: JUMPDEST 
0x68b: V530 = 0x0
0x68d: V531 = S[0x0]
0x68e: V532 = 0x1
0x690: V533 = 0xa0
0x692: V534 = 0x2
0x694: V535 = EXP 0x2 0xa0
0x695: V536 = SUB 0x10000000000000000000000000000000000000000 0x1
0x696: V537 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x697: V538 = CALLER
0x698: V539 = EQ V538 V537
0x699: V540 = 0x6a1
0x69c: JUMPI 0x6a1 V539
---
Entry stack: [V11, 0x191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191]

================================

Block 0x69d
[0x69d:0x6a0]
---
Predecessors: [0x68a]
Successors: []
---
0x69d PUSH1 0x0
0x69f DUP1
0x6a0 REVERT
---
0x69d: V541 = 0x0
0x6a0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191]

================================

Block 0x6a1
[0x6a1:0x6f5]
---
Predecessors: [0x68a]
Successors: [0x191]
---
0x6a1 JUMPDEST
0x6a2 PUSH1 0x0
0x6a4 DUP1
0x6a5 SLOAD
0x6a6 PUSH1 0x40
0x6a8 MLOAD
0x6a9 PUSH1 0x1
0x6ab PUSH1 0xa0
0x6ad PUSH1 0x2
0x6af EXP
0x6b0 SUB
0x6b1 SWAP1
0x6b2 SWAP2
0x6b3 AND
0x6b4 SWAP2
0x6b5 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x6d6 SWAP2
0x6d7 LOG2
0x6d8 PUSH1 0x0
0x6da DUP1
0x6db SLOAD
0x6dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f1 NOT
0x6f2 AND
0x6f3 SWAP1
0x6f4 SSTORE
0x6f5 JUMP
---
0x6a1: JUMPDEST 
0x6a2: V542 = 0x0
0x6a5: V543 = S[0x0]
0x6a6: V544 = 0x40
0x6a8: V545 = M[0x40]
0x6a9: V546 = 0x1
0x6ab: V547 = 0xa0
0x6ad: V548 = 0x2
0x6af: V549 = EXP 0x2 0xa0
0x6b0: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b3: V551 = AND V543 0xffffffffffffffffffffffffffffffffffffffff
0x6b5: V552 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x6d7: LOG V545 0x0 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V551
0x6d8: V553 = 0x0
0x6db: V554 = S[0x0]
0x6dc: V555 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f1: V556 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6f2: V557 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V554
0x6f4: S[0x0] = V557
0x6f5: JUMP 0x191
---
Entry stack: [V11, 0x191]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f6
[0x6f6:0x713]
---
Predecessors: [0x1f3]
Successors: [0x714, 0x718]
---
0x6f6 JUMPDEST
0x6f7 PUSH1 0x6
0x6f9 SLOAD
0x6fa PUSH1 0x0
0x6fc SWAP1
0x6fd DUP2
0x6fe SWAP1
0x6ff DUP2
0x700 SWAP1
0x701 DUP2
0x702 SWAP1
0x703 DUP2
0x704 SWAP1
0x705 PUSH1 0x1
0x707 PUSH1 0xa0
0x709 PUSH1 0x2
0x70b EXP
0x70c SUB
0x70d AND
0x70e ORIGIN
0x70f EQ
0x710 PUSH2 0x718
0x713 JUMPI
---
0x6f6: JUMPDEST 
0x6f7: V558 = 0x6
0x6f9: V559 = S[0x6]
0x6fa: V560 = 0x0
0x705: V561 = 0x1
0x707: V562 = 0xa0
0x709: V563 = 0x2
0x70b: V564 = EXP 0x2 0xa0
0x70c: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70d: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x70e: V567 = ORIGIN
0x70f: V568 = EQ V567 V566
0x710: V569 = 0x718
0x713: JUMPI 0x718 V568
---
Entry stack: [V11, 0x191, V155]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x714
[0x714:0x717]
---
Predecessors: [0x6f6]
Successors: []
---
0x714 PUSH1 0x0
0x716 DUP1
0x717 REVERT
---
0x714: V570 = 0x0
0x717: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x718
[0x718:0x73c]
---
Predecessors: [0x6f6]
Successors: [0x73d, 0x741]
---
0x718 JUMPDEST
0x719 PUSH1 0x6
0x71b SLOAD
0x71c PUSH21 0x10000000000000000000000000000000000000000
0x732 SWAP1
0x733 DIV
0x734 PUSH1 0xff
0x736 AND
0x737 ISZERO
0x738 ISZERO
0x739 PUSH2 0x741
0x73c JUMPI
---
0x718: JUMPDEST 
0x719: V571 = 0x6
0x71b: V572 = S[0x6]
0x71c: V573 = 0x10000000000000000000000000000000000000000
0x733: V574 = DIV V572 0x10000000000000000000000000000000000000000
0x734: V575 = 0xff
0x736: V576 = AND 0xff V574
0x737: V577 = ISZERO V576
0x738: V578 = ISZERO V577
0x739: V579 = 0x741
0x73c: JUMPI 0x741 V578
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x73d
[0x73d:0x740]
---
Predecessors: [0x718]
Successors: []
---
0x73d PUSH1 0x0
0x73f DUP1
0x740 REVERT
---
0x73d: V580 = 0x0
0x740: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x741
[0x741:0x762]
---
Predecessors: [0x718]
Successors: [0x763, 0x767]
---
0x741 JUMPDEST
0x742 PUSH1 0x1
0x744 PUSH1 0xa0
0x746 PUSH1 0x2
0x748 EXP
0x749 SUB
0x74a DUP7
0x74b AND
0x74c PUSH1 0x0
0x74e SWAP1
0x74f DUP2
0x750 MSTORE
0x751 PUSH1 0x8
0x753 PUSH1 0x20
0x755 MSTORE
0x756 PUSH1 0x40
0x758 SWAP1
0x759 SHA3
0x75a SLOAD
0x75b PUSH1 0xff
0x75d AND
0x75e ISZERO
0x75f PUSH2 0x767
0x762 JUMPI
---
0x741: JUMPDEST 
0x742: V581 = 0x1
0x744: V582 = 0xa0
0x746: V583 = 0x2
0x748: V584 = EXP 0x2 0xa0
0x749: V585 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74b: V586 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x74c: V587 = 0x0
0x750: M[0x0] = V586
0x751: V588 = 0x8
0x753: V589 = 0x20
0x755: M[0x20] = 0x8
0x756: V590 = 0x40
0x759: V591 = SHA3 0x0 0x40
0x75a: V592 = S[V591]
0x75b: V593 = 0xff
0x75d: V594 = AND 0xff V592
0x75e: V595 = ISZERO V594
0x75f: V596 = 0x767
0x762: JUMPI 0x767 V595
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x763
[0x763:0x766]
---
Predecessors: [0x741]
Successors: []
---
0x763 PUSH1 0x0
0x765 DUP1
0x766 REVERT
---
0x763: V597 = 0x0
0x766: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x767
[0x767:0x7c8]
---
Predecessors: [0x741]
Successors: [0x7c9, 0x7cd]
---
0x767 JUMPDEST
0x768 PUSH1 0x2
0x76a SLOAD
0x76b PUSH1 0x40
0x76d DUP1
0x76e MLOAD
0x76f PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x790 DUP2
0x791 MSTORE
0x792 ADDRESS
0x793 PUSH1 0x4
0x795 DUP3
0x796 ADD
0x797 MSTORE
0x798 SWAP1
0x799 MLOAD
0x79a PUSH1 0x1
0x79c PUSH1 0xa0
0x79e PUSH1 0x2
0x7a0 EXP
0x7a1 SUB
0x7a2 SWAP1
0x7a3 SWAP3
0x7a4 AND
0x7a5 SWAP2
0x7a6 PUSH4 0x70a08231
0x7ab SWAP2
0x7ac PUSH1 0x24
0x7ae DUP1
0x7af DUP3
0x7b0 ADD
0x7b1 SWAP3
0x7b2 PUSH1 0x20
0x7b4 SWAP3
0x7b5 SWAP1
0x7b6 SWAP2
0x7b7 SWAP1
0x7b8 DUP3
0x7b9 SWAP1
0x7ba SUB
0x7bb ADD
0x7bc DUP2
0x7bd PUSH1 0x0
0x7bf DUP8
0x7c0 DUP1
0x7c1 EXTCODESIZE
0x7c2 ISZERO
0x7c3 DUP1
0x7c4 ISZERO
0x7c5 PUSH2 0x7cd
0x7c8 JUMPI
---
0x767: JUMPDEST 
0x768: V598 = 0x2
0x76a: V599 = S[0x2]
0x76b: V600 = 0x40
0x76e: V601 = M[0x40]
0x76f: V602 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x791: M[V601] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x792: V603 = ADDRESS
0x793: V604 = 0x4
0x796: V605 = ADD V601 0x4
0x797: M[V605] = V603
0x799: V606 = M[0x40]
0x79a: V607 = 0x1
0x79c: V608 = 0xa0
0x79e: V609 = 0x2
0x7a0: V610 = EXP 0x2 0xa0
0x7a1: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a4: V612 = AND V599 0xffffffffffffffffffffffffffffffffffffffff
0x7a6: V613 = 0x70a08231
0x7ac: V614 = 0x24
0x7b0: V615 = ADD V601 0x24
0x7b2: V616 = 0x20
0x7ba: V617 = SUB V601 V606
0x7bb: V618 = ADD V617 0x24
0x7bd: V619 = 0x0
0x7c1: V620 = EXTCODESIZE V612
0x7c2: V621 = ISZERO V620
0x7c4: V622 = ISZERO V621
0x7c5: V623 = 0x7cd
0x7c8: JUMPI 0x7cd V622
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V612, 0x70a08231, V615, 0x20, V606, V618, V606, 0x0, V612, V621]
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V612, 0x70a08231, V615, 0x20, V606, V618, V606, 0x0, V612, V621]

================================

Block 0x7c9
[0x7c9:0x7cc]
---
Predecessors: [0x767]
Successors: []
---
0x7c9 PUSH1 0x0
0x7cb DUP1
0x7cc REVERT
---
0x7c9: V624 = 0x0
0x7cc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V612, 0x70a08231, V615, 0x20, V606, V618, V606, 0x0, V612, V621]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V612, 0x70a08231, V615, 0x20, V606, V618, V606, 0x0, V612, V621]

================================

Block 0x7cd
[0x7cd:0x7d7]
---
Predecessors: [0x767]
Successors: [0x7d8, 0x7e1]
---
0x7cd JUMPDEST
0x7ce POP
0x7cf GAS
0x7d0 CALL
0x7d1 ISZERO
0x7d2 DUP1
0x7d3 ISZERO
0x7d4 PUSH2 0x7e1
0x7d7 JUMPI
---
0x7cd: JUMPDEST 
0x7cf: V625 = GAS
0x7d0: V626 = CALL V625 V612 0x0 V606 V618 V606 0x20
0x7d1: V627 = ISZERO V626
0x7d3: V628 = ISZERO V627
0x7d4: V629 = 0x7e1
0x7d7: JUMPI 0x7e1 V628
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V612, 0x70a08231, V615, 0x20, V606, V618, V606, 0x0, V612, V621]
Stack pops: 7
Stack additions: [V627]
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V612, 0x70a08231, V615, V627]

================================

Block 0x7d8
[0x7d8:0x7e0]
---
Predecessors: [0x7cd]
Successors: []
---
0x7d8 RETURNDATASIZE
0x7d9 PUSH1 0x0
0x7db DUP1
0x7dc RETURNDATACOPY
0x7dd RETURNDATASIZE
0x7de PUSH1 0x0
0x7e0 REVERT
---
0x7d8: V630 = RETURNDATASIZE
0x7d9: V631 = 0x0
0x7dc: RETURNDATACOPY 0x0 0x0 V630
0x7dd: V632 = RETURNDATASIZE
0x7de: V633 = 0x0
0x7e0: REVERT 0x0 V632
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V612, 0x70a08231, V615, V627]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V612, 0x70a08231, V615, V627]

================================

Block 0x7e1
[0x7e1:0x7f2]
---
Predecessors: [0x7cd]
Successors: [0x7f3, 0x7f7]
---
0x7e1 JUMPDEST
0x7e2 POP
0x7e3 POP
0x7e4 POP
0x7e5 POP
0x7e6 PUSH1 0x40
0x7e8 MLOAD
0x7e9 RETURNDATASIZE
0x7ea PUSH1 0x20
0x7ec DUP2
0x7ed LT
0x7ee ISZERO
0x7ef PUSH2 0x7f7
0x7f2 JUMPI
---
0x7e1: JUMPDEST 
0x7e6: V634 = 0x40
0x7e8: V635 = M[0x40]
0x7e9: V636 = RETURNDATASIZE
0x7ea: V637 = 0x20
0x7ed: V638 = LT V636 0x20
0x7ee: V639 = ISZERO V638
0x7ef: V640 = 0x7f7
0x7f2: JUMPI 0x7f7 V639
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V612, 0x70a08231, V615, V627]
Stack pops: 4
Stack additions: [V635, V636]
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V635, V636]

================================

Block 0x7f3
[0x7f3:0x7f6]
---
Predecessors: [0x7e1]
Successors: []
---
0x7f3 PUSH1 0x0
0x7f5 DUP1
0x7f6 REVERT
---
0x7f3: V641 = 0x0
0x7f6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V635, V636]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V635, V636]

================================

Block 0x7f7
[0x7f7:0x802]
---
Predecessors: [0x7e1]
Successors: [0x669]
---
0x7f7 JUMPDEST
0x7f8 POP
0x7f9 MLOAD
0x7fa SWAP5
0x7fb POP
0x7fc PUSH2 0x803
0x7ff PUSH2 0x669
0x802 JUMP
---
0x7f7: JUMPDEST 
0x7f9: V642 = M[V635]
0x7fc: V643 = 0x803
0x7ff: V644 = 0x669
0x802: JUMP 0x669
---
Entry stack: [V11, 0x191, V155, 0x0, 0x0, 0x0, 0x0, 0x0, V635, V636]
Stack pops: 7
Stack additions: [V642, S5, S4, S3, S2, 0x803]
Exit stack: [V11, 0x191, V155, V642, 0x0, 0x0, 0x0, 0x0, 0x803]

================================

Block 0x803
[0x803:0x81a]
---
Predecessors: [0x685, 0x9f2]
Successors: [0xa33]
---
0x803 JUMPDEST
0x804 PUSH1 0x1
0x806 SLOAD
0x807 SWAP1
0x808 SWAP5
0x809 POP
0x80a SWAP3
0x80b POP
0x80c PUSH2 0x81b
0x80f DUP5
0x810 DUP5
0x811 PUSH4 0xffffffff
0x816 PUSH2 0xa33
0x819 AND
0x81a JUMP
---
0x803: JUMPDEST 
0x804: V645 = 0x1
0x806: V646 = S[0x1]
0x80c: V647 = 0x81b
0x811: V648 = 0xffffffff
0x816: V649 = 0xa33
0x819: V650 = AND 0xa33 0xffffffff
0x81a: JUMP 0xa33
---
Entry stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0, V646, S2, S1, 0x81b, S0, V646]
Exit stack: [V11, S17, S16, S15, S14, S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S0, V646, S2, S1, 0x81b, S0, V646]

================================

Block 0x81b
[0x81b:0x82c]
---
Predecessors: [0xa40]
Successors: [0x9f8]
---
0x81b JUMPDEST
0x81c SWAP2
0x81d POP
0x81e PUSH2 0x82d
0x821 DUP6
0x822 DUP4
0x823 PUSH4 0xffffffff
0x828 PUSH2 0x9f8
0x82b AND
0x82c JUMP
---
0x81b: JUMPDEST 
0x81e: V651 = 0x82d
0x823: V652 = 0xffffffff
0x828: V653 = 0x9f8
0x82b: V654 = AND 0x9f8 0xffffffff
0x82c: JUMP 0x9f8
---
Entry stack: [V11, 0x191, S16, S15, S14, S13, 0x0, S11, {0x0, 0x115, 0x5e9, 0x803}, S9, S8, S7, S6, S5, S4, S3, S2, S1, V821]
Stack pops: 6
Stack additions: [S5, S4, S3, S0, S1, 0x82d, S5, S0]
Exit stack: [V11, 0x191, S16, S15, S14, S13, 0x0, S11, {0x0, 0x115, 0x5e9, 0x803}, S9, S8, S7, S6, S5, S4, S3, V821, S1, 0x82d, S5, V821]

================================

Block 0x82d
[0x82d:0x8b5]
---
Predecessors: [0xa04]
Successors: [0x8b6, 0x8ba]
---
0x82d JUMPDEST
0x82e PUSH1 0x1
0x830 PUSH1 0xa0
0x832 PUSH1 0x2
0x834 EXP
0x835 SUB
0x836 DUP1
0x837 DUP9
0x838 AND
0x839 PUSH1 0x0
0x83b SWAP1
0x83c DUP2
0x83d MSTORE
0x83e PUSH1 0x8
0x840 PUSH1 0x20
0x842 SWAP1
0x843 DUP2
0x844 MSTORE
0x845 PUSH1 0x40
0x847 DUP1
0x848 DUP4
0x849 SHA3
0x84a DUP1
0x84b SLOAD
0x84c PUSH1 0xff
0x84e NOT
0x84f AND
0x850 PUSH1 0x1
0x852 OR
0x853 SWAP1
0x854 SSTORE
0x855 PUSH1 0x2
0x857 SLOAD
0x858 PUSH1 0x6
0x85a SLOAD
0x85b DUP3
0x85c MLOAD
0x85d PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x87e DUP2
0x87f MSTORE
0x880 SWAP1
0x881 DUP7
0x882 AND
0x883 PUSH1 0x4
0x885 DUP3
0x886 ADD
0x887 MSTORE
0x888 PUSH1 0x24
0x88a DUP2
0x88b ADD
0x88c DUP8
0x88d SWAP1
0x88e MSTORE
0x88f SWAP2
0x890 MLOAD
0x891 SWAP6
0x892 SWAP7
0x893 POP
0x894 SWAP1
0x895 SWAP4
0x896 AND
0x897 SWAP4
0x898 PUSH4 0xa9059cbb
0x89d SWAP4
0x89e PUSH1 0x44
0x8a0 DUP1
0x8a1 DUP3
0x8a2 ADD
0x8a3 SWAP5
0x8a4 SWAP2
0x8a5 DUP4
0x8a6 SWAP1
0x8a7 SUB
0x8a8 ADD
0x8a9 SWAP1
0x8aa DUP3
0x8ab SWAP1
0x8ac DUP8
0x8ad DUP1
0x8ae EXTCODESIZE
0x8af ISZERO
0x8b0 DUP1
0x8b1 ISZERO
0x8b2 PUSH2 0x8ba
0x8b5 JUMPI
---
0x82d: JUMPDEST 
0x82e: V655 = 0x1
0x830: V656 = 0xa0
0x832: V657 = 0x2
0x834: V658 = EXP 0x2 0xa0
0x835: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x838: V660 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x839: V661 = 0x0
0x83d: M[0x0] = V660
0x83e: V662 = 0x8
0x840: V663 = 0x20
0x844: M[0x20] = 0x8
0x845: V664 = 0x40
0x849: V665 = SHA3 0x0 0x40
0x84b: V666 = S[V665]
0x84c: V667 = 0xff
0x84e: V668 = NOT 0xff
0x84f: V669 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V666
0x850: V670 = 0x1
0x852: V671 = OR 0x1 V669
0x854: S[V665] = V671
0x855: V672 = 0x2
0x857: V673 = S[0x2]
0x858: V674 = 0x6
0x85a: V675 = S[0x6]
0x85c: V676 = M[0x40]
0x85d: V677 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x87f: M[V676] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x882: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0x883: V679 = 0x4
0x886: V680 = ADD V676 0x4
0x887: M[V680] = V678
0x888: V681 = 0x24
0x88b: V682 = ADD V676 0x24
0x88e: M[V682] = V803
0x890: V683 = M[0x40]
0x896: V684 = AND 0xffffffffffffffffffffffffffffffffffffffff V673
0x898: V685 = 0xa9059cbb
0x89e: V686 = 0x44
0x8a2: V687 = ADD V676 0x44
0x8a7: V688 = SUB V676 V683
0x8a8: V689 = ADD V688 0x44
0x8ae: V690 = EXTCODESIZE V684
0x8af: V691 = ISZERO V690
0x8b1: V692 = ISZERO V691
0x8b2: V693 = 0x8ba
0x8b5: JUMPI 0x8ba V692
---
Entry stack: [V11, S18, S17, S16, S15, 0x0, 0x0, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V803]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S0, V684, 0xa9059cbb, V687, 0x20, V683, V689, V683, 0x0, V684, V691]
Exit stack: [V11, S18, S17, S16, S15, 0x0, 0x0, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V803, V684, 0xa9059cbb, V687, 0x20, V683, V689, V683, 0x0, V684, V691]

================================

Block 0x8b6
[0x8b6:0x8b9]
---
Predecessors: [0x82d]
Successors: []
---
0x8b6 PUSH1 0x0
0x8b8 DUP1
0x8b9 REVERT
---
0x8b6: V694 = 0x0
0x8b9: REVERT 0x0 0x0
---
Entry stack: [V11, S27, S26, S25, S24, 0x0, 0x0, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V684, 0xa9059cbb, V687, 0x20, V683, V689, V683, 0x0, V684, V691]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S27, S26, S25, S24, 0x0, 0x0, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V684, 0xa9059cbb, V687, 0x20, V683, V689, V683, 0x0, V684, V691]

================================

Block 0x8ba
[0x8ba:0x8c4]
---
Predecessors: [0x82d]
Successors: [0x8c5, 0x8ce]
---
0x8ba JUMPDEST
0x8bb POP
0x8bc GAS
0x8bd CALL
0x8be ISZERO
0x8bf DUP1
0x8c0 ISZERO
0x8c1 PUSH2 0x8ce
0x8c4 JUMPI
---
0x8ba: JUMPDEST 
0x8bc: V695 = GAS
0x8bd: V696 = CALL V695 V684 0x0 V683 V689 V683 0x20
0x8be: V697 = ISZERO V696
0x8c0: V698 = ISZERO V697
0x8c1: V699 = 0x8ce
0x8c4: JUMPI 0x8ce V698
---
Entry stack: [V11, S27, S26, S25, S24, 0x0, 0x0, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V684, 0xa9059cbb, V687, 0x20, V683, V689, V683, 0x0, V684, V691]
Stack pops: 7
Stack additions: [V697]
Exit stack: [V11, S27, S26, S25, S24, 0x0, 0x0, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V684, 0xa9059cbb, V687, V697]

================================

Block 0x8c5
[0x8c5:0x8cd]
---
Predecessors: [0x8ba]
Successors: []
---
0x8c5 RETURNDATASIZE
0x8c6 PUSH1 0x0
0x8c8 DUP1
0x8c9 RETURNDATACOPY
0x8ca RETURNDATASIZE
0x8cb PUSH1 0x0
0x8cd REVERT
---
0x8c5: V700 = RETURNDATASIZE
0x8c6: V701 = 0x0
0x8c9: RETURNDATACOPY 0x0 0x0 V700
0x8ca: V702 = RETURNDATASIZE
0x8cb: V703 = 0x0
0x8cd: REVERT 0x0 V702
---
Entry stack: [V11, S21, S20, S19, S18, 0x0, 0x0, S15, S14, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V697]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S21, S20, S19, S18, 0x0, 0x0, S15, S14, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V697]

================================

Block 0x8ce
[0x8ce:0x8df]
---
Predecessors: [0x8ba]
Successors: [0x8e0, 0x8e4]
---
0x8ce JUMPDEST
0x8cf POP
0x8d0 POP
0x8d1 POP
0x8d2 POP
0x8d3 PUSH1 0x40
0x8d5 MLOAD
0x8d6 RETURNDATASIZE
0x8d7 PUSH1 0x20
0x8d9 DUP2
0x8da LT
0x8db ISZERO
0x8dc PUSH2 0x8e4
0x8df JUMPI
---
0x8ce: JUMPDEST 
0x8d3: V704 = 0x40
0x8d5: V705 = M[0x40]
0x8d6: V706 = RETURNDATASIZE
0x8d7: V707 = 0x20
0x8da: V708 = LT V706 0x20
0x8db: V709 = ISZERO V708
0x8dc: V710 = 0x8e4
0x8df: JUMPI 0x8e4 V709
---
Entry stack: [V11, S21, S20, S19, S18, 0x0, 0x0, S15, S14, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V697]
Stack pops: 4
Stack additions: [V705, V706]
Exit stack: [V11, S21, S20, S19, S18, 0x0, 0x0, S15, S14, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S11, S10, S9, S8, S7, S6, S5, S4, V705, V706]

================================

Block 0x8e0
[0x8e0:0x8e3]
---
Predecessors: [0x8ce]
Successors: []
---
0x8e0 PUSH1 0x0
0x8e2 DUP1
0x8e3 REVERT
---
0x8e0: V711 = 0x0
0x8e3: REVERT 0x0 0x0
---
Entry stack: [V11, S19, S18, S17, S16, 0x0, 0x0, S13, S12, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S9, S8, S7, S6, S5, S4, S3, S2, V705, V706]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S19, S18, S17, S16, 0x0, 0x0, S13, S12, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S9, S8, S7, S6, S5, S4, S3, S2, V705, V706]

================================

Block 0x8e4
[0x8e4:0x8ec]
---
Predecessors: [0x8ce]
Successors: [0x8ed, 0x8ee]
---
0x8e4 JUMPDEST
0x8e5 POP
0x8e6 MLOAD
0x8e7 ISZERO
0x8e8 ISZERO
0x8e9 PUSH2 0x8ee
0x8ec JUMPI
---
0x8e4: JUMPDEST 
0x8e6: V712 = M[V705]
0x8e7: V713 = ISZERO V712
0x8e8: V714 = ISZERO V713
0x8e9: V715 = 0x8ee
0x8ec: JUMPI 0x8ee V714
---
Entry stack: [V11, S19, S18, S17, S16, 0x0, 0x0, S13, S12, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S9, S8, S7, S6, S5, S4, S3, S2, V705, V706]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S19, S18, S17, S16, 0x0, 0x0, S13, S12, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x8ed
[0x8ed:0x8ed]
---
Predecessors: [0x8e4]
Successors: []
---
0x8ed INVALID
---
0x8ed: INVALID 
---
Entry stack: [V11, S17, S16, S15, S14, 0x0, 0x0, S11, S10, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S17, S16, S15, S14, 0x0, 0x0, S11, S10, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8ee
[0x8ee:0x91e]
---
Predecessors: [0x8e4]
Successors: [0x115, 0x191, 0x679]
---
0x8ee JUMPDEST
0x8ef PUSH1 0x40
0x8f1 MLOAD
0x8f2 PUSH32 0x44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6
0x913 SWAP1
0x914 PUSH1 0x0
0x916 SWAP1
0x917 LOG1
0x918 POP
0x919 POP
0x91a POP
0x91b POP
0x91c POP
0x91d POP
0x91e JUMP
---
0x8ee: JUMPDEST 
0x8ef: V716 = 0x40
0x8f1: V717 = M[0x40]
0x8f2: V718 = 0x44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6
0x914: V719 = 0x0
0x917: LOG V717 0x0 0x44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6
0x91e: JUMP S6
---
Entry stack: [V11, S17, S16, S15, S14, 0x0, 0x0, S11, S10, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V11, S17, S16, S15, S14, 0x0, 0x0, S11, S10, {0x0, 0x115, 0x5e9, 0x803}, {0x0, 0x685}, S7]

================================

Block 0x91f
[0x91f:0x93f]
---
Predecessors: [0x214]
Successors: [0x21d]
---
0x91f JUMPDEST
0x920 PUSH1 0x6
0x922 SLOAD
0x923 PUSH21 0x10000000000000000000000000000000000000000
0x939 SWAP1
0x93a DIV
0x93b PUSH1 0xff
0x93d AND
0x93e DUP2
0x93f JUMP
---
0x91f: JUMPDEST 
0x920: V720 = 0x6
0x922: V721 = S[0x6]
0x923: V722 = 0x10000000000000000000000000000000000000000
0x93a: V723 = DIV V721 0x10000000000000000000000000000000000000000
0x93b: V724 = 0xff
0x93d: V725 = AND 0xff V723
0x93f: JUMP 0x21d
---
Entry stack: [V11, 0x21d]
Stack pops: 1
Stack additions: [S0, V725]
Exit stack: [V11, 0x21d, V725]

================================

Block 0x940
[0x940:0x94e]
---
Predecessors: [0x23d]
Successors: [0x154]
---
0x940 JUMPDEST
0x941 PUSH1 0x0
0x943 SLOAD
0x944 PUSH1 0x1
0x946 PUSH1 0xa0
0x948 PUSH1 0x2
0x94a EXP
0x94b SUB
0x94c AND
0x94d DUP2
0x94e JUMP
---
0x940: JUMPDEST 
0x941: V726 = 0x0
0x943: V727 = S[0x0]
0x944: V728 = 0x1
0x946: V729 = 0xa0
0x948: V730 = 0x2
0x94a: V731 = EXP 0x2 0xa0
0x94b: V732 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94c: V733 = AND 0xffffffffffffffffffffffffffffffffffffffff V727
0x94e: JUMP 0x154
---
Entry stack: [V11, 0x154]
Stack pops: 1
Stack additions: [S0, V733]
Exit stack: [V11, 0x154, V733]

================================

Block 0x94f
[0x94f:0x954]
---
Predecessors: [0x252]
Successors: [0x115]
---
0x94f JUMPDEST
0x950 PUSH1 0x4
0x952 SLOAD
0x953 DUP2
0x954 JUMP
---
0x94f: JUMPDEST 
0x950: V734 = 0x4
0x952: V735 = S[0x4]
0x954: JUMP 0x115
---
Entry stack: [V11, 0x115]
Stack pops: 1
Stack additions: [S0, V735]
Exit stack: [V11, 0x115, V735]

================================

Block 0x955
[0x955:0x966]
---
Predecessors: [0x267]
Successors: [0x115]
---
0x955 JUMPDEST
0x956 PUSH1 0x7
0x958 PUSH1 0x20
0x95a MSTORE
0x95b PUSH1 0x0
0x95d SWAP1
0x95e DUP2
0x95f MSTORE
0x960 PUSH1 0x40
0x962 SWAP1
0x963 SHA3
0x964 SLOAD
0x965 DUP2
0x966 JUMP
---
0x955: JUMPDEST 
0x956: V736 = 0x7
0x958: V737 = 0x20
0x95a: M[0x20] = 0x7
0x95b: V738 = 0x0
0x95f: M[0x0] = V195
0x960: V739 = 0x40
0x963: V740 = SHA3 0x0 0x40
0x964: V741 = S[V740]
0x966: JUMP 0x115
---
Entry stack: [V11, 0x115, V195]
Stack pops: 2
Stack additions: [S1, V741]
Exit stack: [V11, 0x115, V741]

================================

Block 0x967
[0x967:0x973]
---
Predecessors: [0x288]
Successors: [0x974, 0x975]
---
0x967 JUMPDEST
0x968 PUSH1 0x1
0x96a DUP1
0x96b SLOAD
0x96c DUP3
0x96d SWAP1
0x96e DUP2
0x96f LT
0x970 PUSH2 0x975
0x973 JUMPI
---
0x967: JUMPDEST 
0x968: V742 = 0x1
0x96b: V743 = S[0x1]
0x96f: V744 = LT V203 V743
0x970: V745 = 0x975
0x973: JUMPI 0x975 V744
---
Entry stack: [V11, 0x154, V203]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0x154, V203, 0x1, V203]

================================

Block 0x974
[0x974:0x974]
---
Predecessors: [0x967]
Successors: []
---
0x974 INVALID
---
0x974: INVALID 
---
Entry stack: [V11, 0x154, V203, 0x1, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x154, V203, 0x1, V203]

================================

Block 0x975
[0x975:0x98e]
---
Predecessors: [0x967]
Successors: [0x154]
---
0x975 JUMPDEST
0x976 PUSH1 0x0
0x978 SWAP2
0x979 DUP3
0x97a MSTORE
0x97b PUSH1 0x20
0x97d SWAP1
0x97e SWAP2
0x97f SHA3
0x980 ADD
0x981 SLOAD
0x982 PUSH1 0x1
0x984 PUSH1 0xa0
0x986 PUSH1 0x2
0x988 EXP
0x989 SUB
0x98a AND
0x98b SWAP1
0x98c POP
0x98d DUP2
0x98e JUMP
---
0x975: JUMPDEST 
0x976: V746 = 0x0
0x97a: M[0x0] = 0x1
0x97b: V747 = 0x20
0x97f: V748 = SHA3 0x0 0x20
0x980: V749 = ADD V748 V203
0x981: V750 = S[V749]
0x982: V751 = 0x1
0x984: V752 = 0xa0
0x986: V753 = 0x2
0x988: V754 = EXP 0x2 0xa0
0x989: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98a: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0x98e: JUMP 0x154
---
Entry stack: [V11, 0x154, V203, 0x1, V203]
Stack pops: 4
Stack additions: [S3, V756]
Exit stack: [V11, 0x154, V756]

================================

Block 0x98f
[0x98f:0x9a1]
---
Predecessors: [0x2a0]
Successors: [0x9a2, 0x9a6]
---
0x98f JUMPDEST
0x990 PUSH1 0x0
0x992 SLOAD
0x993 PUSH1 0x1
0x995 PUSH1 0xa0
0x997 PUSH1 0x2
0x999 EXP
0x99a SUB
0x99b AND
0x99c CALLER
0x99d EQ
0x99e PUSH2 0x9a6
0x9a1 JUMPI
---
0x98f: JUMPDEST 
0x990: V757 = 0x0
0x992: V758 = S[0x0]
0x993: V759 = 0x1
0x995: V760 = 0xa0
0x997: V761 = 0x2
0x999: V762 = EXP 0x2 0xa0
0x99a: V763 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99b: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V758
0x99c: V765 = CALLER
0x99d: V766 = EQ V765 V764
0x99e: V767 = 0x9a6
0x9a1: JUMPI 0x9a6 V766
---
Entry stack: [V11, 0x191, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V217]

================================

Block 0x9a2
[0x9a2:0x9a5]
---
Predecessors: [0x98f]
Successors: []
---
0x9a2 PUSH1 0x0
0x9a4 DUP1
0x9a5 REVERT
---
0x9a2: V768 = 0x0
0x9a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V217]

================================

Block 0x9a6
[0x9a6:0x9ae]
---
Predecessors: [0x98f]
Successors: [0xb2b]
---
0x9a6 JUMPDEST
0x9a7 PUSH2 0x9af
0x9aa DUP2
0x9ab PUSH2 0xb2b
0x9ae JUMP
---
0x9a6: JUMPDEST 
0x9a7: V769 = 0x9af
0x9ab: V770 = 0xb2b
0x9ae: JUMP 0xb2b
---
Entry stack: [V11, 0x191, V217]
Stack pops: 1
Stack additions: [S0, 0x9af, S0]
Exit stack: [V11, 0x191, V217, 0x9af, V217]

================================

Block 0x9af
[0x9af:0x9b1]
---
Predecessors: [0xb40]
Successors: [0x191]
---
0x9af JUMPDEST
0x9b0 POP
0x9b1 JUMP
---
0x9af: JUMPDEST 
0x9b1: JUMP 0x191
---
Entry stack: [V11, 0x191, V217]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x9b2
[0x9b2:0x9c0]
---
Predecessors: [0x2c1]
Successors: [0x154]
---
0x9b2 JUMPDEST
0x9b3 PUSH1 0x6
0x9b5 SLOAD
0x9b6 PUSH1 0x1
0x9b8 PUSH1 0xa0
0x9ba PUSH1 0x2
0x9bc EXP
0x9bd SUB
0x9be AND
0x9bf DUP2
0x9c0 JUMP
---
0x9b2: JUMPDEST 
0x9b3: V771 = 0x6
0x9b5: V772 = S[0x6]
0x9b6: V773 = 0x1
0x9b8: V774 = 0xa0
0x9ba: V775 = 0x2
0x9bc: V776 = EXP 0x2 0xa0
0x9bd: V777 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9be: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V772
0x9c0: JUMP 0x154
---
Entry stack: [V11, 0x154]
Stack pops: 1
Stack additions: [S0, V778]
Exit stack: [V11, 0x154, V778]

================================

Block 0x9c1
[0x9c1:0x9d5]
---
Predecessors: [0x2d6]
Successors: [0x21d]
---
0x9c1 JUMPDEST
0x9c2 PUSH1 0x8
0x9c4 PUSH1 0x20
0x9c6 MSTORE
0x9c7 PUSH1 0x0
0x9c9 SWAP1
0x9ca DUP2
0x9cb MSTORE
0x9cc PUSH1 0x40
0x9ce SWAP1
0x9cf SHA3
0x9d0 SLOAD
0x9d1 PUSH1 0xff
0x9d3 AND
0x9d4 DUP2
0x9d5 JUMP
---
0x9c1: JUMPDEST 
0x9c2: V779 = 0x8
0x9c4: V780 = 0x20
0x9c6: M[0x20] = 0x8
0x9c7: V781 = 0x0
0x9cb: M[0x0] = V237
0x9cc: V782 = 0x40
0x9cf: V783 = SHA3 0x0 0x40
0x9d0: V784 = S[V783]
0x9d1: V785 = 0xff
0x9d3: V786 = AND 0xff V784
0x9d5: JUMP 0x21d
---
Entry stack: [V11, 0x21d, V237]
Stack pops: 2
Stack additions: [S1, V786]
Exit stack: [V11, 0x21d, V786]

================================

Block 0x9d6
[0x9d6:0x9e4]
---
Predecessors: [0x2f7]
Successors: [0x154]
---
0x9d6 JUMPDEST
0x9d7 PUSH1 0x2
0x9d9 SLOAD
0x9da PUSH1 0x1
0x9dc PUSH1 0xa0
0x9de PUSH1 0x2
0x9e0 EXP
0x9e1 SUB
0x9e2 AND
0x9e3 DUP2
0x9e4 JUMP
---
0x9d6: JUMPDEST 
0x9d7: V787 = 0x2
0x9d9: V788 = S[0x2]
0x9da: V789 = 0x1
0x9dc: V790 = 0xa0
0x9de: V791 = 0x2
0x9e0: V792 = EXP 0x2 0xa0
0x9e1: V793 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e2: V794 = AND 0xffffffffffffffffffffffffffffffffffffffff V788
0x9e4: JUMP 0x154
---
Entry stack: [V11, 0x154]
Stack pops: 1
Stack additions: [S0, V794]
Exit stack: [V11, 0x154, V794]

================================

Block 0x9e5
[0x9e5:0x9f0]
---
Predecessors: [0x3c6, 0x4a2, 0x4d0, 0x609]
Successors: [0x9f1, 0x9f2]
---
0x9e5 JUMPDEST
0x9e6 DUP2
0x9e7 DUP2
0x9e8 ADD
0x9e9 DUP3
0x9ea DUP2
0x9eb LT
0x9ec ISZERO
0x9ed PUSH2 0x9f2
0x9f0 JUMPI
---
0x9e5: JUMPDEST 
0x9e8: V795 = ADD S0 S1
0x9eb: V796 = LT V795 S1
0x9ec: V797 = ISZERO V796
0x9ed: V798 = 0x9f2
0x9f0: JUMPI 0x9f2 V797
---
Entry stack: [V11, 0x191, S18, S17, S16, S15, 0x0, S13, {0x0, 0x115, 0x5e9, 0x803}, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f0, 0x4bb, 0x4e5, 0x61f}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V795]
Exit stack: [V11, 0x191, S18, S17, S16, S15, 0x0, S13, {0x0, 0x115, 0x5e9, 0x803}, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f0, 0x4bb, 0x4e5, 0x61f}, S1, S0, V795]

================================

Block 0x9f1
[0x9f1:0x9f1]
---
Predecessors: [0x9e5]
Successors: []
---
0x9f1 INVALID
---
0x9f1: INVALID 
---
Entry stack: [V11, 0x191, S19, S18, S17, S16, 0x0, S14, {0x0, 0x115, 0x5e9, 0x803}, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x3f0, 0x4bb, 0x4e5, 0x61f}, S2, S1, V795]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, S19, S18, S17, S16, 0x0, S14, {0x0, 0x115, 0x5e9, 0x803}, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x3f0, 0x4bb, 0x4e5, 0x61f}, S2, S1, V795]

================================

Block 0x9f2
[0x9f2:0x9f7]
---
Predecessors: [0x9e5, 0xa14, 0xa2b]
Successors: [0x115, 0x3f0, 0x4bb, 0x4e5, 0x51e, 0x5e9, 0x61f, 0x803]
---
0x9f2 JUMPDEST
0x9f3 SWAP3
0x9f4 SWAP2
0x9f5 POP
0x9f6 POP
0x9f7 JUMP
---
0x9f2: JUMPDEST 
0x9f7: JUMP S3
---
Entry stack: [V11, S20, S19, S18, S17, S16, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, S20, S19, S18, S17, S16, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0]

================================

Block 0x9f8
[0x9f8:0xa02]
---
Predecessors: [0x4f3, 0x679, 0x81b]
Successors: [0xa03, 0xa04]
---
0x9f8 JUMPDEST
0x9f9 PUSH1 0x0
0x9fb DUP3
0x9fc DUP3
0x9fd GT
0x9fe ISZERO
0x9ff PUSH2 0xa04
0xa02 JUMPI
---
0x9f8: JUMPDEST 
0x9f9: V799 = 0x0
0x9fd: V800 = GT S0 S1
0x9fe: V801 = ISZERO V800
0x9ff: V802 = 0xa04
0xa02: JUMPI 0xa04 V801
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0xa03
[0xa03:0xa03]
---
Predecessors: [0x9f8]
Successors: []
---
0xa03 INVALID
---
0xa03: INVALID 
---
Entry stack: [V11, S21, S20, S19, S18, 0x0, 0x0, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x511, 0x685, 0x82d}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S21, S20, S19, S18, 0x0, 0x0, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x511, 0x685, 0x82d}, S2, S1, 0x0]

================================

Block 0xa04
[0xa04:0xa09]
---
Predecessors: [0x9f8]
Successors: [0x191, 0x511, 0x685, 0x82d]
---
0xa04 JUMPDEST
0xa05 POP
0xa06 SWAP1
0xa07 SUB
0xa08 SWAP1
0xa09 JUMP
---
0xa04: JUMPDEST 
0xa07: V803 = SUB S2 S1
0xa09: JUMP {0x0, 0x511, 0x685, 0x82d}
---
Entry stack: [V11, S21, S20, S19, S18, 0x0, 0x0, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x511, 0x685, 0x82d}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V803]
Exit stack: [V11, S21, S20, S19, S18, 0x0, 0x0, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V803]

================================

Block 0xa0a
[0xa0a:0xa13]
---
Predecessors: [0x511]
Successors: [0xa14, 0xa1b]
---
0xa0a JUMPDEST
0xa0b PUSH1 0x0
0xa0d DUP3
0xa0e ISZERO
0xa0f ISZERO
0xa10 PUSH2 0xa1b
0xa13 JUMPI
---
0xa0a: JUMPDEST 
0xa0b: V804 = 0x0
0xa0e: V805 = ISZERO S1
0xa0f: V806 = ISZERO V805
0xa10: V807 = 0xa1b
0xa13: JUMPI 0xa1b V806
---
Entry stack: [V11, S19, S18, S17, S16, 0x0, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V803]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S19, S18, S17, S16, 0x0, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V803, 0x0]

================================

Block 0xa14
[0xa14:0xa1a]
---
Predecessors: [0xa0a]
Successors: [0x9f2]
---
0xa14 POP
0xa15 PUSH1 0x0
0xa17 PUSH2 0x9f2
0xa1a JUMP
---
0xa15: V808 = 0x0
0xa17: V809 = 0x9f2
0xa1a: JUMP 0x9f2
---
Entry stack: [V11, S20, S19, S18, S17, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V803, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, S20, S19, S18, S17, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V803, 0x0]

================================

Block 0xa1b
[0xa1b:0xa29]
---
Predecessors: [0xa0a]
Successors: [0xa2a, 0xa2b]
---
0xa1b JUMPDEST
0xa1c POP
0xa1d DUP2
0xa1e DUP2
0xa1f MUL
0xa20 DUP2
0xa21 DUP4
0xa22 DUP3
0xa23 DUP2
0xa24 ISZERO
0xa25 ISZERO
0xa26 PUSH2 0xa2b
0xa29 JUMPI
---
0xa1b: JUMPDEST 
0xa1f: V810 = MUL V803 S2
0xa24: V811 = ISZERO S2
0xa25: V812 = ISZERO V811
0xa26: V813 = 0xa2b
0xa29: JUMPI 0xa2b V812
---
Entry stack: [V11, S20, S19, S18, S17, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V803, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V810, S1, S2, V810]
Exit stack: [V11, S20, S19, S18, S17, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V803, V810, V803, S2, V810]

================================

Block 0xa2a
[0xa2a:0xa2a]
---
Predecessors: [0xa1b]
Successors: []
---
0xa2a INVALID
---
0xa2a: INVALID 
---
Entry stack: [V11, S23, S22, S21, S20, 0x0, 0x0, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V803, V810, V803, S1, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S23, S22, S21, S20, 0x0, 0x0, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V803, V810, V803, S1, V810]

================================

Block 0xa2b
[0xa2b:0xa31]
---
Predecessors: [0xa1b]
Successors: [0x9f2, 0xa32]
---
0xa2b JUMPDEST
0xa2c DIV
0xa2d EQ
0xa2e PUSH2 0x9f2
0xa31 JUMPI
---
0xa2b: JUMPDEST 
0xa2c: V814 = DIV V810 S1
0xa2d: V815 = EQ V814 V803
0xa2e: V816 = 0x9f2
0xa31: JUMPI 0x9f2 V815
---
Entry stack: [V11, S23, S22, S21, S20, 0x0, 0x0, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V803, V810, V803, S1, V810]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S23, S22, S21, S20, 0x0, 0x0, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V803, V810]

================================

Block 0xa32
[0xa32:0xa32]
---
Predecessors: [0xa2b]
Successors: []
---
0xa32 INVALID
---
0xa32: INVALID 
---
Entry stack: [V11, S20, S19, S18, S17, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V803, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S20, S19, S18, S17, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V803, V810]

================================

Block 0xa33
[0xa33:0xa3e]
---
Predecessors: [0x51e, 0x5f5, 0x803]
Successors: [0xa3f, 0xa40]
---
0xa33 JUMPDEST
0xa34 PUSH1 0x0
0xa36 DUP2
0xa37 DUP4
0xa38 DUP2
0xa39 ISZERO
0xa3a ISZERO
0xa3b PUSH2 0xa40
0xa3e JUMPI
---
0xa33: JUMPDEST 
0xa34: V817 = 0x0
0xa39: V818 = ISZERO S0
0xa3a: V819 = ISZERO V818
0xa3b: V820 = 0xa40
0xa3e: JUMPI 0xa40 V819
---
Entry stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S0, S1]
Exit stack: [V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, S0, S1]

================================

Block 0xa3f
[0xa3f:0xa3f]
---
Predecessors: [0xa33]
Successors: []
---
0xa3f INVALID
---
0xa3f: INVALID 
---
Entry stack: [V11, 0x191, S21, S20, S19, S18, 0x0, S16, {0x0, 0x115, 0x5e9, 0x803}, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x52a, 0x609, 0x81b}, S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, S21, S20, S19, S18, 0x0, S16, {0x0, 0x115, 0x5e9, 0x803}, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x52a, 0x609, 0x81b}, S4, S3, 0x0, S1, S0]

================================

Block 0xa40
[0xa40:0xa47]
---
Predecessors: [0xa33]
Successors: [0x52a, 0x609, 0x81b]
---
0xa40 JUMPDEST
0xa41 DIV
0xa42 SWAP4
0xa43 SWAP3
0xa44 POP
0xa45 POP
0xa46 POP
0xa47 JUMP
---
0xa40: JUMPDEST 
0xa41: V821 = DIV S0 S1
0xa47: JUMP {0x52a, 0x609, 0x81b}
---
Entry stack: [V11, 0x191, S21, S20, S19, S18, 0x0, S16, {0x0, 0x115, 0x5e9, 0x803}, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x52a, 0x609, 0x81b}, S4, S3, 0x0, S1, S0]
Stack pops: 6
Stack additions: [V821]
Exit stack: [V11, 0x191, S21, S20, S19, S18, 0x0, S16, {0x0, 0x115, 0x5e9, 0x803}, S14, S13, S12, S11, S10, S9, S8, S7, S6, V821]

================================

Block 0xa48
[0xa48:0xab2]
---
Predecessors: [0x640]
Successors: [0xab3, 0xab7]
---
0xa48 JUMPDEST
0xa49 PUSH1 0x2
0xa4b SLOAD
0xa4c PUSH1 0x40
0xa4e DUP1
0xa4f MLOAD
0xa50 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa71 DUP2
0xa72 MSTORE
0xa73 PUSH1 0x1
0xa75 PUSH1 0xa0
0xa77 PUSH1 0x2
0xa79 EXP
0xa7a SUB
0xa7b DUP6
0xa7c DUP2
0xa7d AND
0xa7e PUSH1 0x4
0xa80 DUP4
0xa81 ADD
0xa82 MSTORE
0xa83 PUSH1 0x24
0xa85 DUP3
0xa86 ADD
0xa87 DUP6
0xa88 SWAP1
0xa89 MSTORE
0xa8a SWAP2
0xa8b MLOAD
0xa8c SWAP2
0xa8d SWAP1
0xa8e SWAP3
0xa8f AND
0xa90 SWAP2
0xa91 PUSH4 0xa9059cbb
0xa96 SWAP2
0xa97 PUSH1 0x44
0xa99 DUP1
0xa9a DUP4
0xa9b ADD
0xa9c SWAP3
0xa9d PUSH1 0x20
0xa9f SWAP3
0xaa0 SWAP2
0xaa1 SWAP1
0xaa2 DUP3
0xaa3 SWAP1
0xaa4 SUB
0xaa5 ADD
0xaa6 DUP2
0xaa7 PUSH1 0x0
0xaa9 DUP8
0xaaa DUP1
0xaab EXTCODESIZE
0xaac ISZERO
0xaad DUP1
0xaae ISZERO
0xaaf PUSH2 0xab7
0xab2 JUMPI
---
0xa48: JUMPDEST 
0xa49: V822 = 0x2
0xa4b: V823 = S[0x2]
0xa4c: V824 = 0x40
0xa4f: V825 = M[0x40]
0xa50: V826 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa72: M[V825] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa73: V827 = 0x1
0xa75: V828 = 0xa0
0xa77: V829 = 0x2
0xa79: V830 = EXP 0x2 0xa0
0xa7a: V831 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7d: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0xa7e: V833 = 0x4
0xa81: V834 = ADD V825 0x4
0xa82: M[V834] = V832
0xa83: V835 = 0x24
0xa86: V836 = ADD V825 0x24
0xa89: M[V836] = S0
0xa8b: V837 = M[0x40]
0xa8f: V838 = AND V823 0xffffffffffffffffffffffffffffffffffffffff
0xa91: V839 = 0xa9059cbb
0xa97: V840 = 0x44
0xa9b: V841 = ADD V825 0x44
0xa9d: V842 = 0x20
0xaa4: V843 = SUB V825 V837
0xaa5: V844 = ADD V843 0x44
0xaa7: V845 = 0x0
0xaab: V846 = EXTCODESIZE V838
0xaac: V847 = ISZERO V846
0xaae: V848 = ISZERO V847
0xaaf: V849 = 0xab7
0xab2: JUMPI 0xab7 V848
---
Entry stack: [0x191, S18, S17, 0x0, 0x0, 0x0, S13, {0x115, 0x5e9, 0x803}, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, 0x65b, V516, S0]
Stack pops: 2
Stack additions: [S1, S0, V838, 0xa9059cbb, V841, 0x20, V837, V844, V837, 0x0, V838, V847]
Exit stack: [S18, 0x191, 0x0, 0x0, 0x0, S13, {0x115, 0x5e9}, 0x0, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x1}, 0x65b, S1, S0, V838, 0xa9059cbb, V841, 0x20, V837, V844, V837, 0x0, V838, V847]

================================

Block 0xab3
[0xab3:0xab6]
---
Predecessors: [0xa48]
Successors: []
---
0xab3 PUSH1 0x0
0xab5 DUP1
0xab6 REVERT
---
0xab3: V850 = 0x0
0xab6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, 0x0, 0x0, 0x0, S23, {0x115, 0x5e9}, 0x0, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, 0x65b, V516, S10, V838, 0xa9059cbb, V841, 0x20, V837, V844, V837, 0x0, V838, V847]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, S23, {0x115, 0x5e9}, 0x0, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, 0x65b, V516, S10, V838, 0xa9059cbb, V841, 0x20, V837, V844, V837, 0x0, V838, V847]

================================

Block 0xab7
[0xab7:0xac1]
---
Predecessors: [0xa48]
Successors: [0xac2, 0xacb]
---
0xab7 JUMPDEST
0xab8 POP
0xab9 GAS
0xaba CALL
0xabb ISZERO
0xabc DUP1
0xabd ISZERO
0xabe PUSH2 0xacb
0xac1 JUMPI
---
0xab7: JUMPDEST 
0xab9: V851 = GAS
0xaba: V852 = CALL V851 V838 0x0 V837 V844 V837 0x20
0xabb: V853 = ISZERO V852
0xabd: V854 = ISZERO V853
0xabe: V855 = 0xacb
0xac1: JUMPI 0xacb V854
---
Entry stack: [V11, 0x191, 0x0, 0x0, 0x0, S23, {0x115, 0x5e9}, 0x0, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, 0x65b, V516, S10, V838, 0xa9059cbb, V841, 0x20, V837, V844, V837, 0x0, V838, V847]
Stack pops: 7
Stack additions: [V853]
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, S23, {0x115, 0x5e9}, 0x0, S20, S19, S18, S17, S16, S15, S14, {0x0, 0x1}, 0x65b, V516, S10, V838, 0xa9059cbb, V841, V853]

================================

Block 0xac2
[0xac2:0xaca]
---
Predecessors: [0xab7]
Successors: []
---
0xac2 RETURNDATASIZE
0xac3 PUSH1 0x0
0xac5 DUP1
0xac6 RETURNDATACOPY
0xac7 RETURNDATASIZE
0xac8 PUSH1 0x0
0xaca REVERT
---
0xac2: V856 = RETURNDATASIZE
0xac3: V857 = 0x0
0xac6: RETURNDATACOPY 0x0 0x0 V856
0xac7: V858 = RETURNDATASIZE
0xac8: V859 = 0x0
0xaca: REVERT 0x0 V858
---
Entry stack: [V11, 0x191, 0x0, 0x0, 0x0, S17, {0x115, 0x5e9}, 0x0, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, 0x65b, V516, S4, V838, 0xa9059cbb, V841, V853]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, S17, {0x115, 0x5e9}, 0x0, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, 0x65b, V516, S4, V838, 0xa9059cbb, V841, V853]

================================

Block 0xacb
[0xacb:0xadc]
---
Predecessors: [0xab7]
Successors: [0xadd, 0xae1]
---
0xacb JUMPDEST
0xacc POP
0xacd POP
0xace POP
0xacf POP
0xad0 PUSH1 0x40
0xad2 MLOAD
0xad3 RETURNDATASIZE
0xad4 PUSH1 0x20
0xad6 DUP2
0xad7 LT
0xad8 ISZERO
0xad9 PUSH2 0xae1
0xadc JUMPI
---
0xacb: JUMPDEST 
0xad0: V860 = 0x40
0xad2: V861 = M[0x40]
0xad3: V862 = RETURNDATASIZE
0xad4: V863 = 0x20
0xad7: V864 = LT V862 0x20
0xad8: V865 = ISZERO V864
0xad9: V866 = 0xae1
0xadc: JUMPI 0xae1 V865
---
Entry stack: [V11, 0x191, 0x0, 0x0, 0x0, S17, {0x115, 0x5e9}, 0x0, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, 0x65b, V516, S4, V838, 0xa9059cbb, V841, V853]
Stack pops: 4
Stack additions: [V861, V862]
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, S17, {0x115, 0x5e9}, 0x0, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x1}, 0x65b, V516, S4, V861, V862]

================================

Block 0xadd
[0xadd:0xae0]
---
Predecessors: [0xacb]
Successors: []
---
0xadd PUSH1 0x0
0xadf DUP1
0xae0 REVERT
---
0xadd: V867 = 0x0
0xae0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, 0x0, 0x0, 0x0, S15, {0x115, 0x5e9}, 0x0, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x1}, 0x65b, V516, S2, V861, V862]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, 0x0, 0x0, 0x0, S15, {0x115, 0x5e9}, 0x0, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x1}, 0x65b, V516, S2, V861, V862]

================================

Block 0xae1
[0xae1:0xb2a]
---
Predecessors: [0xacb]
Successors: [0x65b]
---
0xae1 JUMPDEST
0xae2 POP
0xae3 POP
0xae4 PUSH1 0x40
0xae6 DUP1
0xae7 MLOAD
0xae8 PUSH1 0x1
0xaea PUSH1 0xa0
0xaec PUSH1 0x2
0xaee EXP
0xaef SUB
0xaf0 DUP5
0xaf1 AND
0xaf2 DUP2
0xaf3 MSTORE
0xaf4 PUSH1 0x20
0xaf6 DUP2
0xaf7 ADD
0xaf8 DUP4
0xaf9 SWAP1
0xafa MSTORE
0xafb DUP2
0xafc MLOAD
0xafd PUSH32 0xb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e
0xb1e SWAP3
0xb1f SWAP2
0xb20 DUP2
0xb21 SWAP1
0xb22 SUB
0xb23 SWAP1
0xb24 SWAP2
0xb25 ADD
0xb26 SWAP1
0xb27 LOG1
0xb28 POP
0xb29 POP
0xb2a JUMP
---
0xae1: JUMPDEST 
0xae4: V868 = 0x40
0xae7: V869 = M[0x40]
0xae8: V870 = 0x1
0xaea: V871 = 0xa0
0xaec: V872 = 0x2
0xaee: V873 = EXP 0x2 0xa0
0xaef: V874 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf1: V875 = AND V516 0xffffffffffffffffffffffffffffffffffffffff
0xaf3: M[V869] = V875
0xaf4: V876 = 0x20
0xaf7: V877 = ADD V869 0x20
0xafa: M[V877] = S2
0xafc: V878 = M[0x40]
0xafd: V879 = 0xb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e
0xb22: V880 = SUB V869 V878
0xb25: V881 = ADD 0x40 V880
0xb27: LOG V878 V881 0xb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e
0xb2a: JUMP 0x65b
---
Entry stack: [0x191, 0x0, 0x0, 0x0, S15, {0x115, 0x5e9}, 0x0, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x1}, 0x65b, V516, S2, V861, V862]
Stack pops: 5
Stack additions: []
Exit stack: [0x191, 0x0, 0x0, 0x0, S15, {0x115, 0x5e9}, 0x0, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x1}]

================================

Block 0xb2b
[0xb2b:0xb3b]
---
Predecessors: [0x9a6]
Successors: [0xb3c, 0xb40]
---
0xb2b JUMPDEST
0xb2c PUSH1 0x1
0xb2e PUSH1 0xa0
0xb30 PUSH1 0x2
0xb32 EXP
0xb33 SUB
0xb34 DUP2
0xb35 AND
0xb36 ISZERO
0xb37 ISZERO
0xb38 PUSH2 0xb40
0xb3b JUMPI
---
0xb2b: JUMPDEST 
0xb2c: V882 = 0x1
0xb2e: V883 = 0xa0
0xb30: V884 = 0x2
0xb32: V885 = EXP 0x2 0xa0
0xb33: V886 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb35: V887 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0xb36: V888 = ISZERO V887
0xb37: V889 = ISZERO V888
0xb38: V890 = 0xb40
0xb3b: JUMPI 0xb40 V889
---
Entry stack: [V11, 0x191, V217, 0x9af, V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x191, V217, 0x9af, V217]

================================

Block 0xb3c
[0xb3c:0xb3f]
---
Predecessors: [0xb2b]
Successors: []
---
0xb3c PUSH1 0x0
0xb3e DUP1
0xb3f REVERT
---
0xb3c: V891 = 0x0
0xb3f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x191, V217, 0x9af, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x191, V217, 0x9af, V217]

================================

Block 0xb40
[0xb40:0xba7]
---
Predecessors: [0xb2b]
Successors: [0x9af]
---
0xb40 JUMPDEST
0xb41 PUSH1 0x0
0xb43 DUP1
0xb44 SLOAD
0xb45 PUSH1 0x40
0xb47 MLOAD
0xb48 PUSH1 0x1
0xb4a PUSH1 0xa0
0xb4c PUSH1 0x2
0xb4e EXP
0xb4f SUB
0xb50 DUP1
0xb51 DUP6
0xb52 AND
0xb53 SWAP4
0xb54 SWAP3
0xb55 AND
0xb56 SWAP2
0xb57 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xb78 SWAP2
0xb79 LOG3
0xb7a PUSH1 0x0
0xb7c DUP1
0xb7d SLOAD
0xb7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb93 NOT
0xb94 AND
0xb95 PUSH1 0x1
0xb97 PUSH1 0xa0
0xb99 PUSH1 0x2
0xb9b EXP
0xb9c SUB
0xb9d SWAP3
0xb9e SWAP1
0xb9f SWAP3
0xba0 AND
0xba1 SWAP2
0xba2 SWAP1
0xba3 SWAP2
0xba4 OR
0xba5 SWAP1
0xba6 SSTORE
0xba7 JUMP
---
0xb40: JUMPDEST 
0xb41: V892 = 0x0
0xb44: V893 = S[0x0]
0xb45: V894 = 0x40
0xb47: V895 = M[0x40]
0xb48: V896 = 0x1
0xb4a: V897 = 0xa0
0xb4c: V898 = 0x2
0xb4e: V899 = EXP 0x2 0xa0
0xb4f: V900 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb52: V901 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0xb55: V902 = AND V893 0xffffffffffffffffffffffffffffffffffffffff
0xb57: V903 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xb79: LOG V895 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V902 V901
0xb7a: V904 = 0x0
0xb7d: V905 = S[0x0]
0xb7e: V906 = 0xffffffffffffffffffffffffffffffffffffffff
0xb93: V907 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb94: V908 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V905
0xb95: V909 = 0x1
0xb97: V910 = 0xa0
0xb99: V911 = 0x2
0xb9b: V912 = EXP 0x2 0xa0
0xb9c: V913 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba0: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0xba4: V915 = OR V914 V908
0xba6: S[0x0] = V915
0xba7: JUMP 0x9af
---
Entry stack: [V11, 0x191, V217, 0x9af, V217]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x191, V217]

================================

Block 0xba8
[0xba8:0xbe8]
---
Predecessors: []
Successors: []
---
0xba8 STOP
0xba9 LOG1
0xbaa PUSH6 0x627a7a723058
0xbb1 SHA3
0xbb2 MISSING 0x5e
0xbb3 SWAP13
0xbb4 MISSING 0xbd
0xbb5 DIV
0xbb6 GAS
0xbb7 GASLIMIT
0xbb8 LOG4
0xbb9 MISSING 0xa8
0xbba MISSING 0xeb
0xbbb MISSING 0xd4
0xbbc MISSING 0xe8
0xbbd SWAP13
0xbbe MISSING 0xe5
0xbbf SWAP10
0xbc0 SMOD
0xbc1 REVERT
0xbc2 GT
0xbc3 MISSING 0x2b
0xbc4 MISSING 0xc0
0xbc5 MISSING 0xb3
0xbc6 MISSING 0xbb
0xbc7 MISSING 0xe5
0xbc8 MISSING 0xea
0xbc9 POP
0xbca MISSING 0xc
0xbcb PUSH29 0x3dd5cdf0f4ed0029
---
0xba8: STOP 
0xba9: LOG S0 S1 S2
0xbaa: V916 = 0x627a7a723058
0xbb1: V917 = SHA3 0x627a7a723058 S3
0xbb2: MISSING 0x5e
0xbb4: MISSING 0xbd
0xbb5: V918 = DIV S0 S1
0xbb6: V919 = GAS
0xbb7: V920 = GASLIMIT
0xbb8: LOG V920 V919 V918 S2 S3 S4
0xbb9: MISSING 0xa8
0xbba: MISSING 0xeb
0xbbb: MISSING 0xd4
0xbbc: MISSING 0xe8
0xbbe: MISSING 0xe5
0xbc0: V921 = SMOD S10 S1
0xbc1: REVERT V921 S2
0xbc2: V922 = GT S0 S1
0xbc3: MISSING 0x2b
0xbc4: MISSING 0xc0
0xbc5: MISSING 0xb3
0xbc6: MISSING 0xbb
0xbc7: MISSING 0xe5
0xbc8: MISSING 0xea
0xbca: MISSING 0xc
0xbcb: V923 = 0x3dd5cdf0f4ed0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V917, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, S3, S4, S5, S6, S7, S8, S9, S0, V922, 0x3dd5cdf0f4ed0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xfb5a6b4
Entry block: 0x100
Exit block: 0x115
Body: 0x100, 0x108, 0x10c, 0x115, 0x300

Function 1:
Public function signature: 0x13d033c0
Entry block: 0x127
Exit block: 0x115
Body: 0x115, 0x127, 0x12f, 0x133, 0x306

Function 2:
Public function signature: 0x302df083
Entry block: 0x13c
Exit block: 0x154
Body: 0x13c, 0x144, 0x148, 0x154, 0x30c, 0x31c, 0x31d

Function 3:
Public function signature: 0x36751366
Entry block: 0x170
Exit block: 0x115
Body: 0x115, 0x170, 0x178, 0x17c, 0x191, 0x338, 0x34b, 0x34f, 0x36f, 0x3c6, 0x3f0

Function 4:
Public function signature: 0x44b1231f
Entry block: 0x193
Exit block: 0x115
Body: 0x115, 0x193, 0x19b, 0x19f

Function 5:
Public function signature: 0x44fdbf5b
Entry block: 0x1a8
Exit block: 0x115
Body: 0x115, 0x1a8, 0x1b0, 0x1b4, 0x532, 0x54d, 0x55f, 0x565, 0x574, 0x57b, 0x5e1, 0x5e9

Function 6:
Public function signature: 0x5b940081
Entry block: 0x1bd
Exit block: 0x1c5
Body: 0x115, 0x1bd, 0x1c5, 0x1c9

Function 7:
Public function signature: 0x715018a6
Entry block: 0x1d2
Exit block: 0x191
Body: 0x191, 0x1d2, 0x1da, 0x1de, 0x68a, 0x69d, 0x6a1

Function 8:
Public function signature: 0x74a8f103
Entry block: 0x1e7
Exit block: 0x115
Body: 0x115, 0x1e7, 0x1ef, 0x1f3, 0x6f6, 0x714, 0x718, 0x73d, 0x741, 0x763, 0x767, 0x7c9, 0x7cd, 0x7d8, 0x7e1, 0x7f3, 0x7f7, 0x803

Function 9:
Public function signature: 0x872a7810
Entry block: 0x208
Exit block: 0x21d
Body: 0x208, 0x210, 0x214, 0x21d, 0x91f

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x231
Exit block: 0x154
Body: 0x154, 0x231, 0x239, 0x23d, 0x940

Function 11:
Public function signature: 0xbe9a6555
Entry block: 0x246
Exit block: 0x115
Body: 0x115, 0x246, 0x24e, 0x252, 0x94f

Function 12:
Public function signature: 0xce7c2ac2
Entry block: 0x25b
Exit block: 0x115
Body: 0x115, 0x25b, 0x263, 0x267, 0x955

Function 13:
Public function signature: 0xefeb5e58
Entry block: 0x27c
Exit block: 0x154
Body: 0x154, 0x27c, 0x284, 0x288, 0x967, 0x974, 0x975

Function 14:
Public function signature: 0xf2fde38b
Entry block: 0x294
Exit block: 0x191
Body: 0x191, 0x294, 0x29c, 0x2a0, 0x98f, 0x9a2, 0x9a6, 0x9af, 0xb2b, 0xb3c, 0xb40

Function 15:
Public function signature: 0xf851a440
Entry block: 0x2b5
Exit block: 0x154
Body: 0x154, 0x2b5, 0x2bd, 0x2c1, 0x9b2

Function 16:
Public function signature: 0xfa01dc06
Entry block: 0x2ca
Exit block: 0x21d
Body: 0x21d, 0x2ca, 0x2d2, 0x2d6, 0x9c1

Function 17:
Public function signature: 0xfc0c546a
Entry block: 0x2eb
Exit block: 0x154
Body: 0x154, 0x2eb, 0x2f3, 0x2f7, 0x9d6

Function 18:
Public fallback function
Entry block: 0xfb
Exit block: 0xfb
Body: 0xfb

Function 19:
Private function
Entry block: 0x40c
Exit block: 0x8ee
Body: 0x3f0, 0x40c, 0x478, 0x48c, 0x4a2, 0x4bb, 0x4c8, 0x4d0, 0x4e5, 0x4ec, 0x4f3, 0x511, 0x51e, 0x52a, 0x52d, 0x5e9, 0x5f5, 0x609, 0x609, 0x61f, 0x626, 0x62f, 0x640, 0x65b, 0x663, 0x803, 0x81b, 0x81b, 0x82d, 0x8ba, 0x8ce, 0x8e4, 0x8ee, 0x9f2, 0xa0a, 0xa14, 0xa1b, 0xa2b, 0xa33, 0xa40, 0xa48, 0xab7, 0xacb, 0xae1

Function 20:
Private function
Entry block: 0xa33
Exit block: 0xa40
Body: 0x3f0, 0x4bb, 0x4c8, 0x4d0, 0x4e5, 0x4ec, 0x4f3, 0x511, 0x51e, 0x52a, 0x52d, 0x5e9, 0x5f5, 0x609, 0x61f, 0x626, 0x62f, 0x640, 0x65b, 0x663, 0x679, 0x685, 0x803, 0x803, 0x81b, 0x81b, 0x82d, 0x8ba, 0x8ce, 0x8e4, 0x8ee, 0x9f2, 0x9f8, 0xa04, 0xa0a, 0xa14, 0xa1b, 0xa2b, 0xa33, 0xa40, 0xa48, 0xab7, 0xacb, 0xae1

Function 21:
Private function
Entry block: 0x9e5
Exit block: 0x9f2
Body: 0x511, 0x51e, 0x52a, 0x52d, 0x5e9, 0x5f5, 0x609, 0x609, 0x61f, 0x626, 0x62f, 0x640, 0x65b, 0x663, 0x679, 0x685, 0x803, 0x803, 0x81b, 0x81b, 0x81b, 0x82d, 0x8ba, 0x8ce, 0x8e4, 0x8ee, 0x9e5, 0x9f2, 0x9f8, 0xa04, 0xa0a, 0xa14, 0xa1b, 0xa2b, 0xa33, 0xa40, 0xa48, 0xab7, 0xacb, 0xae1

Function 22:
Private function
Entry block: 0x9f8
Exit block: 0xa04
Body: 0x5e9, 0x5f5, 0x609, 0x61f, 0x626, 0x62f, 0x640, 0x65b, 0x663, 0x679, 0x685, 0x803, 0x81b, 0x82d, 0x8ba, 0x8ce, 0x8e4, 0x8ee, 0x9f8, 0xa04, 0xa48, 0xab7, 0xacb, 0xae1

Function 23:
Private function
Entry block: 0x669
Exit block: 0x9f2
Body: 0x3f0, 0x4bb, 0x4c8, 0x4d0, 0x4e5, 0x4ec, 0x4f3, 0x511, 0x51e, 0x52a, 0x52d, 0x609, 0x61f, 0x626, 0x62f, 0x640, 0x65b, 0x663, 0x669, 0x679, 0x685, 0x81b, 0x82d, 0x8ba, 0x8ce, 0x8e4, 0x8ee, 0x9f2, 0x9f8, 0xa04, 0xa0a, 0xa14, 0xa1b, 0xa2b, 0xa33, 0xa40, 0xa48, 0xab7, 0xacb, 0xae1

