Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x6e]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x31fb67c2
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x6e
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x31fb67c2
0x3b: V13 = EQ V11 0x31fb67c2
0x3c: V14 = 0x6e
0x3f: JUMPI 0x6e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xba]
---
0x40 DUP1
0x41 PUSH4 0x52efea6e
0x46 EQ
0x47 PUSH2 0xba
0x4a JUMPI
---
0x41: V15 = 0x52efea6e
0x46: V16 = EQ 0x52efea6e V11
0x47: V17 = 0xba
0x4a: JUMPI 0xba V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xcf]
---
0x4b DUP1
0x4c PUSH4 0x595497f5
0x51 EQ
0x52 PUSH2 0xcf
0x55 JUMPI
---
0x4c: V18 = 0x595497f5
0x51: V19 = EQ 0x595497f5 V11
0x52: V20 = 0xcf
0x55: JUMPI 0xcf V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xe7]
---
0x56 DUP1
0x57 PUSH4 0x7ccb13c4
0x5c EQ
0x5d PUSH2 0xe7
0x60 JUMPI
---
0x57: V21 = 0x7ccb13c4
0x5c: V22 = EQ 0x7ccb13c4 V11
0x5d: V23 = 0xe7
0x60: JUMPI 0xe7 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x140]
---
0x61 DUP1
0x62 PUSH4 0xf43fa805
0x67 EQ
0x68 PUSH2 0x140
0x6b JUMPI
---
0x62: V24 = 0xf43fa805
0x67: V25 = EQ 0xf43fa805 V11
0x68: V26 = 0x140
0x6b: JUMPI 0x140 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x0, 0x61, 0x27f, 0x2cb, 0x36e]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0xb9]
---
Predecessors: [0xd]
Successors: [0x167]
---
0x6e JUMPDEST
0x6f PUSH1 0x40
0x71 DUP1
0x72 MLOAD
0x73 PUSH1 0x20
0x75 PUSH1 0x4
0x77 DUP1
0x78 CALLDATALOAD
0x79 DUP1
0x7a DUP3
0x7b ADD
0x7c CALLDATALOAD
0x7d PUSH1 0x1f
0x7f DUP2
0x80 ADD
0x81 DUP5
0x82 SWAP1
0x83 DIV
0x84 DUP5
0x85 MUL
0x86 DUP6
0x87 ADD
0x88 DUP5
0x89 ADD
0x8a SWAP1
0x8b SWAP6
0x8c MSTORE
0x8d DUP5
0x8e DUP5
0x8f MSTORE
0x90 PUSH2 0x6c
0x93 SWAP5
0x94 CALLDATASIZE
0x95 SWAP5
0x96 SWAP3
0x97 SWAP4
0x98 PUSH1 0x24
0x9a SWAP4
0x9b SWAP3
0x9c DUP5
0x9d ADD
0x9e SWAP2
0x9f SWAP1
0xa0 DUP2
0xa1 SWAP1
0xa2 DUP5
0xa3 ADD
0xa4 DUP4
0xa5 DUP3
0xa6 DUP1
0xa7 DUP3
0xa8 DUP5
0xa9 CALLDATACOPY
0xaa POP
0xab SWAP5
0xac SWAP8
0xad POP
0xae PUSH2 0x167
0xb1 SWAP7
0xb2 POP
0xb3 POP
0xb4 POP
0xb5 POP
0xb6 POP
0xb7 POP
0xb8 POP
0xb9 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x40
0x72: V28 = M[0x40]
0x73: V29 = 0x20
0x75: V30 = 0x4
0x78: V31 = CALLDATALOAD 0x4
0x7b: V32 = ADD 0x4 V31
0x7c: V33 = CALLDATALOAD V32
0x7d: V34 = 0x1f
0x80: V35 = ADD V33 0x1f
0x83: V36 = DIV V35 0x20
0x85: V37 = MUL 0x20 V36
0x87: V38 = ADD V28 V37
0x89: V39 = ADD 0x20 V38
0x8c: M[0x40] = V39
0x8f: M[V28] = V33
0x90: V40 = 0x6c
0x94: V41 = CALLDATASIZE
0x98: V42 = 0x24
0x9d: V43 = ADD 0x24 V31
0xa3: V44 = ADD V28 0x20
0xa9: CALLDATACOPY V44 V43 V33
0xae: V45 = 0x167
0xb9: JUMP 0x167
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V28]
Exit stack: [V11, 0x6c, V28]

================================

Block 0xba
[0xba:0xc1]
---
Predecessors: [0x40]
Successors: [0xc2, 0xc6]
---
0xba JUMPDEST
0xbb CALLVALUE
0xbc DUP1
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xba: JUMPDEST 
0xbb: V46 = CALLVALUE
0xbd: V47 = ISZERO V46
0xbe: V48 = 0xc6
0xc1: JUMPI 0xc6 V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V46]
Exit stack: [V11, V46]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xba]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V49 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V11, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V46]

================================

Block 0xc6
[0xc6:0xce]
---
Predecessors: [0xba]
Successors: [0x282]
---
0xc6 JUMPDEST
0xc7 POP
0xc8 PUSH2 0x6c
0xcb PUSH2 0x282
0xce JUMP
---
0xc6: JUMPDEST 
0xc8: V50 = 0x6c
0xcb: V51 = 0x282
0xce: JUMP 0x282
---
Entry stack: [V11, V46]
Stack pops: 1
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0xcf
[0xcf:0xd6]
---
Predecessors: [0x4b]
Successors: [0xd7, 0xdb]
---
0xcf JUMPDEST
0xd0 CALLVALUE
0xd1 DUP1
0xd2 ISZERO
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0xcf: JUMPDEST 
0xd0: V52 = CALLVALUE
0xd2: V53 = ISZERO V52
0xd3: V54 = 0xdb
0xd6: JUMPI 0xdb V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V52]
Exit stack: [V11, V52]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0xcf]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V55 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V11, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V52]

================================

Block 0xdb
[0xdb:0xe6]
---
Predecessors: [0xcf]
Successors: [0x2c1]
---
0xdb JUMPDEST
0xdc POP
0xdd PUSH2 0x6c
0xe0 PUSH1 0x4
0xe2 CALLDATALOAD
0xe3 PUSH2 0x2c1
0xe6 JUMP
---
0xdb: JUMPDEST 
0xdd: V56 = 0x6c
0xe0: V57 = 0x4
0xe2: V58 = CALLDATALOAD 0x4
0xe3: V59 = 0x2c1
0xe6: JUMP 0x2c1
---
Entry stack: [V11, V52]
Stack pops: 1
Stack additions: [0x6c, V58]
Exit stack: [V11, 0x6c, V58]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0x56]
Successors: [0xef, 0xf3]
---
0xe7 JUMPDEST
0xe8 CALLVALUE
0xe9 DUP1
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xe7: JUMPDEST 
0xe8: V60 = CALLVALUE
0xea: V61 = ISZERO V60
0xeb: V62 = 0xf3
0xee: JUMPI 0xf3 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V60]
Exit stack: [V11, V60]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xe7]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V63 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V11, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V60]

================================

Block 0xf3
[0xf3:0x13f]
---
Predecessors: [0xe7]
Successors: [0x2cf]
---
0xf3 JUMPDEST
0xf4 POP
0xf5 PUSH1 0x40
0xf7 DUP1
0xf8 MLOAD
0xf9 PUSH1 0x20
0xfb PUSH1 0x4
0xfd DUP1
0xfe CALLDATALOAD
0xff DUP1
0x100 DUP3
0x101 ADD
0x102 CALLDATALOAD
0x103 PUSH1 0x1f
0x105 DUP2
0x106 ADD
0x107 DUP5
0x108 SWAP1
0x109 DIV
0x10a DUP5
0x10b MUL
0x10c DUP6
0x10d ADD
0x10e DUP5
0x10f ADD
0x110 SWAP1
0x111 SWAP6
0x112 MSTORE
0x113 DUP5
0x114 DUP5
0x115 MSTORE
0x116 PUSH2 0x6c
0x119 SWAP5
0x11a CALLDATASIZE
0x11b SWAP5
0x11c SWAP3
0x11d SWAP4
0x11e PUSH1 0x24
0x120 SWAP4
0x121 SWAP3
0x122 DUP5
0x123 ADD
0x124 SWAP2
0x125 SWAP1
0x126 DUP2
0x127 SWAP1
0x128 DUP5
0x129 ADD
0x12a DUP4
0x12b DUP3
0x12c DUP1
0x12d DUP3
0x12e DUP5
0x12f CALLDATACOPY
0x130 POP
0x131 SWAP5
0x132 SWAP8
0x133 POP
0x134 PUSH2 0x2cf
0x137 SWAP7
0x138 POP
0x139 POP
0x13a POP
0x13b POP
0x13c POP
0x13d POP
0x13e POP
0x13f JUMP
---
0xf3: JUMPDEST 
0xf5: V64 = 0x40
0xf8: V65 = M[0x40]
0xf9: V66 = 0x20
0xfb: V67 = 0x4
0xfe: V68 = CALLDATALOAD 0x4
0x101: V69 = ADD 0x4 V68
0x102: V70 = CALLDATALOAD V69
0x103: V71 = 0x1f
0x106: V72 = ADD V70 0x1f
0x109: V73 = DIV V72 0x20
0x10b: V74 = MUL 0x20 V73
0x10d: V75 = ADD V65 V74
0x10f: V76 = ADD 0x20 V75
0x112: M[0x40] = V76
0x115: M[V65] = V70
0x116: V77 = 0x6c
0x11a: V78 = CALLDATASIZE
0x11e: V79 = 0x24
0x123: V80 = ADD 0x24 V68
0x129: V81 = ADD V65 0x20
0x12f: CALLDATACOPY V81 V80 V70
0x134: V82 = 0x2cf
0x13f: JUMP 0x2cf
---
Entry stack: [V11, V60]
Stack pops: 1
Stack additions: [0x6c, V65]
Exit stack: [V11, 0x6c, V65]

================================

Block 0x140
[0x140:0x147]
---
Predecessors: [0x61]
Successors: [0x148, 0x14c]
---
0x140 JUMPDEST
0x141 CALLVALUE
0x142 DUP1
0x143 ISZERO
0x144 PUSH2 0x14c
0x147 JUMPI
---
0x140: JUMPDEST 
0x141: V83 = CALLVALUE
0x143: V84 = ISZERO V83
0x144: V85 = 0x14c
0x147: JUMPI 0x14c V84
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V83]
Exit stack: [V11, V83]

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0x140]
Successors: []
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
---
0x148: V86 = 0x0
0x14b: REVERT 0x0 0x0
---
Entry stack: [V11, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V83]

================================

Block 0x14c
[0x14c:0x154]
---
Predecessors: [0x140]
Successors: [0x3a0]
---
0x14c JUMPDEST
0x14d POP
0x14e PUSH2 0x155
0x151 PUSH2 0x3a0
0x154 JUMP
---
0x14c: JUMPDEST 
0x14e: V87 = 0x155
0x151: V88 = 0x3a0
0x154: JUMP 0x3a0
---
Entry stack: [V11, V83]
Stack pops: 1
Stack additions: [0x155]
Exit stack: [V11, 0x155]

================================

Block 0x155
[0x155:0x166]
---
Predecessors: [0x3a0]
Successors: []
---
0x155 JUMPDEST
0x156 PUSH1 0x40
0x158 DUP1
0x159 MLOAD
0x15a SWAP2
0x15b DUP3
0x15c MSTORE
0x15d MLOAD
0x15e SWAP1
0x15f DUP2
0x160 SWAP1
0x161 SUB
0x162 PUSH1 0x20
0x164 ADD
0x165 SWAP1
0x166 RETURN
---
0x155: JUMPDEST 
0x156: V89 = 0x40
0x159: V90 = M[0x40]
0x15c: M[V90] = V294
0x15d: V91 = M[0x40]
0x161: V92 = SUB V90 V91
0x162: V93 = 0x20
0x164: V94 = ADD 0x20 V92
0x166: RETURN V91 V94
---
Entry stack: [V11, V294]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x167
[0x167:0x16e]
---
Predecessors: [0x6e]
Successors: [0x16f, 0x173]
---
0x167 JUMPDEST
0x168 CALLER
0x169 ORIGIN
0x16a EQ
0x16b PUSH2 0x173
0x16e JUMPI
---
0x167: JUMPDEST 
0x168: V95 = CALLER
0x169: V96 = ORIGIN
0x16a: V97 = EQ V96 V95
0x16b: V98 = 0x173
0x16e: JUMPI 0x173 V97
---
Entry stack: [V11, 0x6c, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V28]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x167]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V99 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V28]

================================

Block 0x173
[0x173:0x186]
---
Predecessors: [0x167]
Successors: [0x187]
---
0x173 JUMPDEST
0x174 DUP1
0x175 PUSH1 0x40
0x177 MLOAD
0x178 PUSH1 0x20
0x17a ADD
0x17b DUP1
0x17c DUP3
0x17d DUP1
0x17e MLOAD
0x17f SWAP1
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP1
0x184 DUP1
0x185 DUP4
0x186 DUP4
---
0x173: JUMPDEST 
0x175: V100 = 0x40
0x177: V101 = M[0x40]
0x178: V102 = 0x20
0x17a: V103 = ADD 0x20 V101
0x17e: V104 = M[V28]
0x180: V105 = 0x20
0x182: V106 = ADD 0x20 V28
---
Entry stack: [V11, 0x6c, V28]
Stack pops: 1
Stack additions: [S0, S0, V103, V103, V106, V104, V104, V103, V106]
Exit stack: [V11, 0x6c, V28, V28, V103, V103, V106, V104, V104, V103, V106]

================================

Block 0x187
[0x187:0x18f]
---
Predecessors: [0x173, 0x190]
Successors: [0x190, 0x1a6]
---
0x187 JUMPDEST
0x188 PUSH1 0x20
0x18a DUP4
0x18b LT
0x18c PUSH2 0x1a6
0x18f JUMPI
---
0x187: JUMPDEST 
0x188: V107 = 0x20
0x18b: V108 = LT S2 0x20
0x18c: V109 = 0x1a6
0x18f: JUMPI 0x1a6 V108
---
Entry stack: [V11, 0x6c, V28, V28, V103, V103, V106, V104, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V28, V28, V103, V103, V106, V104, S2, S1, S0]

================================

Block 0x190
[0x190:0x1a5]
---
Predecessors: [0x187]
Successors: [0x187]
---
0x190 DUP1
0x191 MLOAD
0x192 DUP3
0x193 MSTORE
0x194 PUSH1 0x1f
0x196 NOT
0x197 SWAP1
0x198 SWAP3
0x199 ADD
0x19a SWAP2
0x19b PUSH1 0x20
0x19d SWAP2
0x19e DUP3
0x19f ADD
0x1a0 SWAP2
0x1a1 ADD
0x1a2 PUSH2 0x187
0x1a5 JUMP
---
0x191: V110 = M[S0]
0x193: M[S1] = V110
0x194: V111 = 0x1f
0x196: V112 = NOT 0x1f
0x199: V113 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x19b: V114 = 0x20
0x19f: V115 = ADD 0x20 S1
0x1a1: V116 = ADD 0x20 S0
0x1a2: V117 = 0x187
0x1a5: JUMP 0x187
---
Entry stack: [V11, 0x6c, V28, V28, V103, V103, V106, V104, S2, S1, S0]
Stack pops: 3
Stack additions: [V113, V115, V116]
Exit stack: [V11, 0x6c, V28, V28, V103, V103, V106, V104, V113, V115, V116]

================================

Block 0x1a6
[0x1a6:0x1e9]
---
Predecessors: [0x187]
Successors: [0x1ea]
---
0x1a6 JUMPDEST
0x1a7 PUSH1 0x1
0x1a9 DUP4
0x1aa PUSH1 0x20
0x1ac SUB
0x1ad PUSH2 0x100
0x1b0 EXP
0x1b1 SUB
0x1b2 DUP1
0x1b3 NOT
0x1b4 DUP3
0x1b5 MLOAD
0x1b6 AND
0x1b7 DUP2
0x1b8 DUP5
0x1b9 MLOAD
0x1ba AND
0x1bb DUP1
0x1bc DUP3
0x1bd OR
0x1be DUP6
0x1bf MSTORE
0x1c0 POP
0x1c1 POP
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 SWAP1
0x1c7 POP
0x1c8 ADD
0x1c9 SWAP2
0x1ca POP
0x1cb POP
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf PUSH1 0x20
0x1d1 DUP2
0x1d2 DUP4
0x1d3 SUB
0x1d4 SUB
0x1d5 DUP2
0x1d6 MSTORE
0x1d7 SWAP1
0x1d8 PUSH1 0x40
0x1da MSTORE
0x1db PUSH1 0x40
0x1dd MLOAD
0x1de DUP1
0x1df DUP3
0x1e0 DUP1
0x1e1 MLOAD
0x1e2 SWAP1
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP1
0x1e7 DUP1
0x1e8 DUP4
0x1e9 DUP4
---
0x1a6: JUMPDEST 
0x1a7: V118 = 0x1
0x1aa: V119 = 0x20
0x1ac: V120 = SUB 0x20 S2
0x1ad: V121 = 0x100
0x1b0: V122 = EXP 0x100 V120
0x1b1: V123 = SUB V122 0x1
0x1b3: V124 = NOT V123
0x1b5: V125 = M[S0]
0x1b6: V126 = AND V125 V124
0x1b9: V127 = M[S1]
0x1ba: V128 = AND V127 V123
0x1bd: V129 = OR V126 V128
0x1bf: M[S1] = V129
0x1c8: V130 = ADD V104 V103
0x1cc: V131 = 0x40
0x1ce: V132 = M[0x40]
0x1cf: V133 = 0x20
0x1d3: V134 = SUB V130 V132
0x1d4: V135 = SUB V134 0x20
0x1d6: M[V132] = V135
0x1d8: V136 = 0x40
0x1da: M[0x40] = V130
0x1db: V137 = 0x40
0x1dd: V138 = M[0x40]
0x1e1: V139 = M[V132]
0x1e3: V140 = 0x20
0x1e5: V141 = ADD 0x20 V132
---
Entry stack: [V11, 0x6c, V28, V28, V103, V103, V106, V104, S2, S1, S0]
Stack pops: 8
Stack additions: [V132, V138, V138, V141, V139, V139, V138, V141]
Exit stack: [V11, 0x6c, V28, V132, V138, V138, V141, V139, V139, V138, V141]

================================

Block 0x1ea
[0x1ea:0x1f2]
---
Predecessors: [0x1a6, 0x1f3]
Successors: [0x1f3, 0x209]
---
0x1ea JUMPDEST
0x1eb PUSH1 0x20
0x1ed DUP4
0x1ee LT
0x1ef PUSH2 0x209
0x1f2 JUMPI
---
0x1ea: JUMPDEST 
0x1eb: V142 = 0x20
0x1ee: V143 = LT S2 0x20
0x1ef: V144 = 0x209
0x1f2: JUMPI 0x209 V143
---
Entry stack: [V11, 0x6c, V28, V132, V138, V138, V141, V139, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V28, V132, V138, V138, V141, V139, S2, S1, S0]

================================

Block 0x1f3
[0x1f3:0x208]
---
Predecessors: [0x1ea]
Successors: [0x1ea]
---
0x1f3 DUP1
0x1f4 MLOAD
0x1f5 DUP3
0x1f6 MSTORE
0x1f7 PUSH1 0x1f
0x1f9 NOT
0x1fa SWAP1
0x1fb SWAP3
0x1fc ADD
0x1fd SWAP2
0x1fe PUSH1 0x20
0x200 SWAP2
0x201 DUP3
0x202 ADD
0x203 SWAP2
0x204 ADD
0x205 PUSH2 0x1ea
0x208 JUMP
---
0x1f4: V145 = M[S0]
0x1f6: M[S1] = V145
0x1f7: V146 = 0x1f
0x1f9: V147 = NOT 0x1f
0x1fc: V148 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1fe: V149 = 0x20
0x202: V150 = ADD 0x20 S1
0x204: V151 = ADD 0x20 S0
0x205: V152 = 0x1ea
0x208: JUMP 0x1ea
---
Entry stack: [V11, 0x6c, V28, V132, V138, V138, V141, V139, S2, S1, S0]
Stack pops: 3
Stack additions: [V148, V150, V151]
Exit stack: [V11, 0x6c, V28, V132, V138, V138, V141, V139, V148, V150, V151]

================================

Block 0x209
[0x209:0x240]
---
Predecessors: [0x1ea]
Successors: [0x241, 0x27f]
---
0x209 JUMPDEST
0x20a MLOAD
0x20b DUP2
0x20c MLOAD
0x20d PUSH1 0x20
0x20f SWAP4
0x210 SWAP1
0x211 SWAP4
0x212 SUB
0x213 PUSH2 0x100
0x216 EXP
0x217 PUSH1 0x0
0x219 NOT
0x21a ADD
0x21b DUP1
0x21c NOT
0x21d SWAP1
0x21e SWAP2
0x21f AND
0x220 SWAP3
0x221 AND
0x222 SWAP2
0x223 SWAP1
0x224 SWAP2
0x225 OR
0x226 SWAP1
0x227 MSTORE
0x228 PUSH1 0x40
0x22a MLOAD
0x22b SWAP3
0x22c ADD
0x22d DUP3
0x22e SWAP1
0x22f SUB
0x230 SWAP1
0x231 SWAP2
0x232 SHA3
0x233 PUSH1 0x0
0x235 SLOAD
0x236 EQ
0x237 ISZERO
0x238 SWAP3
0x239 POP
0x23a PUSH2 0x27f
0x23d SWAP2
0x23e POP
0x23f POP
0x240 JUMPI
---
0x209: JUMPDEST 
0x20a: V153 = M[S0]
0x20c: V154 = M[S1]
0x20d: V155 = 0x20
0x212: V156 = SUB 0x20 S2
0x213: V157 = 0x100
0x216: V158 = EXP 0x100 V156
0x217: V159 = 0x0
0x219: V160 = NOT 0x0
0x21a: V161 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V158
0x21c: V162 = NOT V161
0x21f: V163 = AND V153 V162
0x221: V164 = AND V154 V161
0x225: V165 = OR V164 V163
0x227: M[S1] = V165
0x228: V166 = 0x40
0x22a: V167 = M[0x40]
0x22c: V168 = ADD V138 V139
0x22f: V169 = SUB V168 V167
0x232: V170 = SHA3 V167 V169
0x233: V171 = 0x0
0x235: V172 = S[0x0]
0x236: V173 = EQ V172 V170
0x237: V174 = ISZERO V173
0x23a: V175 = 0x27f
0x240: JUMPI 0x27f V174
---
Entry stack: [V11, 0x6c, V28, V132, V138, V138, V141, V139, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0x6c, V28]

================================

Block 0x241
[0x241:0x250]
---
Predecessors: [0x209]
Successors: [0x251, 0x27f]
---
0x241 PUSH8 0x58d15e176280000
0x24a CALLVALUE
0x24b GT
0x24c ISZERO
0x24d PUSH2 0x27f
0x250 JUMPI
---
0x241: V176 = 0x58d15e176280000
0x24a: V177 = CALLVALUE
0x24b: V178 = GT V177 0x58d15e176280000
0x24c: V179 = ISZERO V178
0x24d: V180 = 0x27f
0x250: JUMPI 0x27f V179
---
Entry stack: [V11, 0x6c, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V28]

================================

Block 0x251
[0x251:0x273]
---
Predecessors: [0x241]
Successors: [0x274, 0x27d]
---
0x251 PUSH1 0x40
0x253 MLOAD
0x254 CALLER
0x255 SWAP1
0x256 ADDRESS
0x257 BALANCE
0x258 DUP1
0x259 ISZERO
0x25a PUSH2 0x8fc
0x25d MUL
0x25e SWAP2
0x25f PUSH1 0x0
0x261 DUP2
0x262 DUP2
0x263 DUP2
0x264 DUP6
0x265 DUP9
0x266 DUP9
0x267 CALL
0x268 SWAP4
0x269 POP
0x26a POP
0x26b POP
0x26c POP
0x26d ISZERO
0x26e DUP1
0x26f ISZERO
0x270 PUSH2 0x27d
0x273 JUMPI
---
0x251: V181 = 0x40
0x253: V182 = M[0x40]
0x254: V183 = CALLER
0x256: V184 = ADDRESS
0x257: V185 = BALANCE V184
0x259: V186 = ISZERO V185
0x25a: V187 = 0x8fc
0x25d: V188 = MUL 0x8fc V186
0x25f: V189 = 0x0
0x267: V190 = CALL V188 V183 V185 V182 0x0 V182 0x0
0x26d: V191 = ISZERO V190
0x26f: V192 = ISZERO V191
0x270: V193 = 0x27d
0x273: JUMPI 0x27d V192
---
Entry stack: [V11, 0x6c, V28]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V11, 0x6c, V28, V191]

================================

Block 0x274
[0x274:0x27c]
---
Predecessors: [0x251]
Successors: []
---
0x274 RETURNDATASIZE
0x275 PUSH1 0x0
0x277 DUP1
0x278 RETURNDATACOPY
0x279 RETURNDATASIZE
0x27a PUSH1 0x0
0x27c REVERT
---
0x274: V194 = RETURNDATASIZE
0x275: V195 = 0x0
0x278: RETURNDATACOPY 0x0 0x0 V194
0x279: V196 = RETURNDATASIZE
0x27a: V197 = 0x0
0x27c: REVERT 0x0 V196
---
Entry stack: [V11, 0x6c, V28, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V28, V191]

================================

Block 0x27d
[0x27d:0x27e]
---
Predecessors: [0x251]
Successors: [0x27f]
---
0x27d JUMPDEST
0x27e POP
---
0x27d: JUMPDEST 
---
Entry stack: [V11, 0x6c, V28, V191]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, V28]

================================

Block 0x27f
[0x27f:0x281]
---
Predecessors: [0x209, 0x241, 0x27d, 0x2c1, 0x2cf]
Successors: [0x6c]
---
0x27f JUMPDEST
0x280 POP
0x281 JUMP
---
0x27f: JUMPDEST 
0x281: JUMP 0x6c
---
Entry stack: [V11, 0x6c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x282
[0x282:0x2a1]
---
Predecessors: [0xc6]
Successors: [0x2a2, 0x2a6]
---
0x282 JUMPDEST
0x283 PUSH1 0x1
0x285 SLOAD
0x286 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29b AND
0x29c CALLER
0x29d EQ
0x29e PUSH2 0x2a6
0x2a1 JUMPI
---
0x282: JUMPDEST 
0x283: V198 = 0x1
0x285: V199 = S[0x1]
0x286: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x29c: V202 = CALLER
0x29d: V203 = EQ V202 V201
0x29e: V204 = 0x2a6
0x2a1: JUMPI 0x2a6 V203
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x2a2
[0x2a2:0x2a5]
---
Predecessors: [0x282]
Successors: []
---
0x2a2 PUSH1 0x0
0x2a4 DUP1
0x2a5 REVERT
---
0x2a2: V205 = 0x0
0x2a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x2a6
[0x2a6:0x2c0]
---
Predecessors: [0x282]
Successors: []
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x1
0x2a9 SLOAD
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 SELFDESTRUCT
---
0x2a6: JUMPDEST 
0x2a7: V206 = 0x1
0x2a9: V207 = S[0x1]
0x2aa: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x2c0: SELFDESTRUCT V209
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x2c1
[0x2c1:0x2ca]
---
Predecessors: [0xdb]
Successors: [0x27f, 0x2cb]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x0
0x2c4 SLOAD
0x2c5 ISZERO
0x2c6 ISZERO
0x2c7 PUSH2 0x27f
0x2ca JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V210 = 0x0
0x2c4: V211 = S[0x0]
0x2c5: V212 = ISZERO V211
0x2c6: V213 = ISZERO V212
0x2c7: V214 = 0x27f
0x2ca: JUMPI 0x27f V213
---
Entry stack: [V11, 0x6c, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V58]

================================

Block 0x2cb
[0x2cb:0x2ce]
---
Predecessors: [0x2c1]
Successors: [0x6c]
---
0x2cb PUSH1 0x0
0x2cd SSTORE
0x2ce JUMP
---
0x2cb: V215 = 0x0
0x2cd: S[0x0] = V58
0x2ce: JUMP 0x6c
---
Entry stack: [V11, 0x6c, V58]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2cf
[0x2cf:0x2d8]
---
Predecessors: [0xf3]
Successors: [0x27f, 0x2d9]
---
0x2cf JUMPDEST
0x2d0 PUSH1 0x0
0x2d2 SLOAD
0x2d3 ISZERO
0x2d4 ISZERO
0x2d5 PUSH2 0x27f
0x2d8 JUMPI
---
0x2cf: JUMPDEST 
0x2d0: V216 = 0x0
0x2d2: V217 = S[0x0]
0x2d3: V218 = ISZERO V217
0x2d4: V219 = ISZERO V218
0x2d5: V220 = 0x27f
0x2d8: JUMPI 0x27f V219
---
Entry stack: [V11, 0x6c, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V65]

================================

Block 0x2d9
[0x2d9:0x2eb]
---
Predecessors: [0x2cf]
Successors: [0x2ec]
---
0x2d9 DUP1
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd PUSH1 0x20
0x2df ADD
0x2e0 DUP1
0x2e1 DUP3
0x2e2 DUP1
0x2e3 MLOAD
0x2e4 SWAP1
0x2e5 PUSH1 0x20
0x2e7 ADD
0x2e8 SWAP1
0x2e9 DUP1
0x2ea DUP4
0x2eb DUP4
---
0x2da: V221 = 0x40
0x2dc: V222 = M[0x40]
0x2dd: V223 = 0x20
0x2df: V224 = ADD 0x20 V222
0x2e3: V225 = M[V65]
0x2e5: V226 = 0x20
0x2e7: V227 = ADD 0x20 V65
---
Entry stack: [V11, 0x6c, V65]
Stack pops: 1
Stack additions: [S0, S0, V224, V224, V227, V225, V225, V224, V227]
Exit stack: [V11, 0x6c, V65, V65, V224, V224, V227, V225, V225, V224, V227]

================================

Block 0x2ec
[0x2ec:0x2f4]
---
Predecessors: [0x2d9, 0x2f5]
Successors: [0x2f5, 0x30b]
---
0x2ec JUMPDEST
0x2ed PUSH1 0x20
0x2ef DUP4
0x2f0 LT
0x2f1 PUSH2 0x30b
0x2f4 JUMPI
---
0x2ec: JUMPDEST 
0x2ed: V228 = 0x20
0x2f0: V229 = LT S2 0x20
0x2f1: V230 = 0x30b
0x2f4: JUMPI 0x30b V229
---
Entry stack: [V11, 0x6c, V65, V65, V224, V224, V227, V225, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V65, V65, V224, V224, V227, V225, S2, S1, S0]

================================

Block 0x2f5
[0x2f5:0x30a]
---
Predecessors: [0x2ec]
Successors: [0x2ec]
---
0x2f5 DUP1
0x2f6 MLOAD
0x2f7 DUP3
0x2f8 MSTORE
0x2f9 PUSH1 0x1f
0x2fb NOT
0x2fc SWAP1
0x2fd SWAP3
0x2fe ADD
0x2ff SWAP2
0x300 PUSH1 0x20
0x302 SWAP2
0x303 DUP3
0x304 ADD
0x305 SWAP2
0x306 ADD
0x307 PUSH2 0x2ec
0x30a JUMP
---
0x2f6: V231 = M[S0]
0x2f8: M[S1] = V231
0x2f9: V232 = 0x1f
0x2fb: V233 = NOT 0x1f
0x2fe: V234 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x300: V235 = 0x20
0x304: V236 = ADD 0x20 S1
0x306: V237 = ADD 0x20 S0
0x307: V238 = 0x2ec
0x30a: JUMP 0x2ec
---
Entry stack: [V11, 0x6c, V65, V65, V224, V224, V227, V225, S2, S1, S0]
Stack pops: 3
Stack additions: [V234, V236, V237]
Exit stack: [V11, 0x6c, V65, V65, V224, V224, V227, V225, V234, V236, V237]

================================

Block 0x30b
[0x30b:0x34e]
---
Predecessors: [0x2ec]
Successors: [0x34f]
---
0x30b JUMPDEST
0x30c PUSH1 0x1
0x30e DUP4
0x30f PUSH1 0x20
0x311 SUB
0x312 PUSH2 0x100
0x315 EXP
0x316 SUB
0x317 DUP1
0x318 NOT
0x319 DUP3
0x31a MLOAD
0x31b AND
0x31c DUP2
0x31d DUP5
0x31e MLOAD
0x31f AND
0x320 DUP1
0x321 DUP3
0x322 OR
0x323 DUP6
0x324 MSTORE
0x325 POP
0x326 POP
0x327 POP
0x328 POP
0x329 POP
0x32a POP
0x32b SWAP1
0x32c POP
0x32d ADD
0x32e SWAP2
0x32f POP
0x330 POP
0x331 PUSH1 0x40
0x333 MLOAD
0x334 PUSH1 0x20
0x336 DUP2
0x337 DUP4
0x338 SUB
0x339 SUB
0x33a DUP2
0x33b MSTORE
0x33c SWAP1
0x33d PUSH1 0x40
0x33f MSTORE
0x340 PUSH1 0x40
0x342 MLOAD
0x343 DUP1
0x344 DUP3
0x345 DUP1
0x346 MLOAD
0x347 SWAP1
0x348 PUSH1 0x20
0x34a ADD
0x34b SWAP1
0x34c DUP1
0x34d DUP4
0x34e DUP4
---
0x30b: JUMPDEST 
0x30c: V239 = 0x1
0x30f: V240 = 0x20
0x311: V241 = SUB 0x20 S2
0x312: V242 = 0x100
0x315: V243 = EXP 0x100 V241
0x316: V244 = SUB V243 0x1
0x318: V245 = NOT V244
0x31a: V246 = M[S0]
0x31b: V247 = AND V246 V245
0x31e: V248 = M[S1]
0x31f: V249 = AND V248 V244
0x322: V250 = OR V247 V249
0x324: M[S1] = V250
0x32d: V251 = ADD V225 V224
0x331: V252 = 0x40
0x333: V253 = M[0x40]
0x334: V254 = 0x20
0x338: V255 = SUB V251 V253
0x339: V256 = SUB V255 0x20
0x33b: M[V253] = V256
0x33d: V257 = 0x40
0x33f: M[0x40] = V251
0x340: V258 = 0x40
0x342: V259 = M[0x40]
0x346: V260 = M[V253]
0x348: V261 = 0x20
0x34a: V262 = ADD 0x20 V253
---
Entry stack: [V11, 0x6c, V65, V65, V224, V224, V227, V225, S2, S1, S0]
Stack pops: 8
Stack additions: [V253, V259, V259, V262, V260, V260, V259, V262]
Exit stack: [V11, 0x6c, V65, V253, V259, V259, V262, V260, V260, V259, V262]

================================

Block 0x34f
[0x34f:0x357]
---
Predecessors: [0x30b, 0x358]
Successors: [0x358, 0x36e]
---
0x34f JUMPDEST
0x350 PUSH1 0x20
0x352 DUP4
0x353 LT
0x354 PUSH2 0x36e
0x357 JUMPI
---
0x34f: JUMPDEST 
0x350: V263 = 0x20
0x353: V264 = LT S2 0x20
0x354: V265 = 0x36e
0x357: JUMPI 0x36e V264
---
Entry stack: [V11, 0x6c, V65, V253, V259, V259, V262, V260, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V65, V253, V259, V259, V262, V260, S2, S1, S0]

================================

Block 0x358
[0x358:0x36d]
---
Predecessors: [0x34f]
Successors: [0x34f]
---
0x358 DUP1
0x359 MLOAD
0x35a DUP3
0x35b MSTORE
0x35c PUSH1 0x1f
0x35e NOT
0x35f SWAP1
0x360 SWAP3
0x361 ADD
0x362 SWAP2
0x363 PUSH1 0x20
0x365 SWAP2
0x366 DUP3
0x367 ADD
0x368 SWAP2
0x369 ADD
0x36a PUSH2 0x34f
0x36d JUMP
---
0x359: V266 = M[S0]
0x35b: M[S1] = V266
0x35c: V267 = 0x1f
0x35e: V268 = NOT 0x1f
0x361: V269 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x363: V270 = 0x20
0x367: V271 = ADD 0x20 S1
0x369: V272 = ADD 0x20 S0
0x36a: V273 = 0x34f
0x36d: JUMP 0x34f
---
Entry stack: [V11, 0x6c, V65, V253, V259, V259, V262, V260, S2, S1, S0]
Stack pops: 3
Stack additions: [V269, V271, V272]
Exit stack: [V11, 0x6c, V65, V253, V259, V259, V262, V260, V269, V271, V272]

================================

Block 0x36e
[0x36e:0x39f]
---
Predecessors: [0x34f]
Successors: [0x6c]
---
0x36e JUMPDEST
0x36f MLOAD
0x370 DUP2
0x371 MLOAD
0x372 PUSH1 0x20
0x374 SWAP4
0x375 SWAP1
0x376 SWAP4
0x377 SUB
0x378 PUSH2 0x100
0x37b EXP
0x37c PUSH1 0x0
0x37e NOT
0x37f ADD
0x380 DUP1
0x381 NOT
0x382 SWAP1
0x383 SWAP2
0x384 AND
0x385 SWAP3
0x386 AND
0x387 SWAP2
0x388 SWAP1
0x389 SWAP2
0x38a OR
0x38b SWAP1
0x38c MSTORE
0x38d PUSH1 0x40
0x38f MLOAD
0x390 SWAP3
0x391 ADD
0x392 DUP3
0x393 SWAP1
0x394 SUB
0x395 SWAP1
0x396 SWAP2
0x397 SHA3
0x398 PUSH1 0x0
0x39a SSTORE
0x39b POP
0x39c POP
0x39d POP
0x39e POP
0x39f JUMP
---
0x36e: JUMPDEST 
0x36f: V274 = M[S0]
0x371: V275 = M[S1]
0x372: V276 = 0x20
0x377: V277 = SUB 0x20 S2
0x378: V278 = 0x100
0x37b: V279 = EXP 0x100 V277
0x37c: V280 = 0x0
0x37e: V281 = NOT 0x0
0x37f: V282 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V279
0x381: V283 = NOT V282
0x384: V284 = AND V274 V283
0x386: V285 = AND V275 V282
0x38a: V286 = OR V285 V284
0x38c: M[S1] = V286
0x38d: V287 = 0x40
0x38f: V288 = M[0x40]
0x391: V289 = ADD V259 V260
0x394: V290 = SUB V289 V288
0x397: V291 = SHA3 V288 V290
0x398: V292 = 0x0
0x39a: S[0x0] = V291
0x39f: JUMP 0x6c
---
Entry stack: [V11, 0x6c, V65, V253, V259, V259, V262, V260, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a0
[0x3a0:0x3a5]
---
Predecessors: [0x14c]
Successors: [0x155]
---
0x3a0 JUMPDEST
0x3a1 PUSH1 0x2
0x3a3 SLOAD
0x3a4 SWAP1
0x3a5 JUMP
---
0x3a0: JUMPDEST 
0x3a1: V293 = 0x2
0x3a3: V294 = S[0x2]
0x3a5: JUMP 0x155
---
Entry stack: [V11, 0x155]
Stack pops: 1
Stack additions: [V294]
Exit stack: [V11, V294]

================================

Block 0x3a6
[0x3a6:0x3c6]
---
Predecessors: []
Successors: [0x3c7]
Has unresolved jump.
---
0x3a6 STOP
0x3a7 LOG1
0x3a8 PUSH6 0x627a7a723058
0x3af SHA3
0x3b0 MISSING 0xf
0x3b1 SWAP13
0x3b2 CODESIZE
0x3b3 MISSING 0xcb
0x3b4 SWAP11
0x3b5 MISSING 0xe4
0x3b6 DUP9
0x3b7 OR
0x3b8 COINBASE
0x3b9 MISSING 0x27
0x3ba MISSING 0xdb
0x3bb CALLVALUE
0x3bc MISSING 0xe5
0x3bd CALLVALUE
0x3be SWAP13
0x3bf MISSING 0xca
0x3c0 MISSING 0xe7
0x3c1 MISSING 0xad
0x3c2 SWAP2
0x3c3 BALANCE
0x3c4 DUP14
0x3c5 DUP3
0x3c6 JUMPI
---
0x3a6: STOP 
0x3a7: LOG S0 S1 S2
0x3a8: V295 = 0x627a7a723058
0x3af: V296 = SHA3 0x627a7a723058 S3
0x3b0: MISSING 0xf
0x3b2: V297 = CODESIZE
0x3b3: MISSING 0xcb
0x3b5: MISSING 0xe4
0x3b7: V298 = OR S8 S0
0x3b8: V299 = COINBASE
0x3b9: MISSING 0x27
0x3ba: MISSING 0xdb
0x3bb: V300 = CALLVALUE
0x3bc: MISSING 0xe5
0x3bd: V301 = CALLVALUE
0x3bf: MISSING 0xca
0x3c0: MISSING 0xe7
0x3c1: MISSING 0xad
0x3c3: V302 = BALANCE S2
0x3c6: JUMPI S1 S13
---
Entry stack: []
Stack pops: 0
Stack additions: [V296, V297, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V299, V298, S1, S2, S3, S4, S5, S6, S7, S8, V300, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V301, V302, S1, S0, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13]
Exit stack: []

================================

Block 0x3c7
[0x3c7:0x3d1]
---
Predecessors: [0x3a6]
Successors: []
---
0x3c7 PC
0x3c8 CALLDATASIZE
0x3c9 MISSING 0x1f
0x3ca MISSING 0xac
0x3cb DUP6
0x3cc MISSING 0xc7
0x3cd MISSING 0xbd
0x3ce CREATE2
0x3cf POP
0x3d0 STOP
0x3d1 MISSING 0x29
---
0x3c7: V303 = PC
0x3c8: V304 = CALLDATASIZE
0x3c9: MISSING 0x1f
0x3ca: MISSING 0xac
0x3cc: MISSING 0xc7
0x3cd: MISSING 0xbd
0x3ce: V305 = CREATE2 S0 S1 S2 S3
0x3d0: STOP 
0x3d1: MISSING 0x29
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V302]
Stack pops: 0
Stack additions: [V303, V304, S5, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x31fb67c2
Entry block: 0x6e
Exit block: 0x274
Body: 0x6c, 0x6e, 0x167, 0x16f, 0x173, 0x187, 0x190, 0x1a6, 0x1ea, 0x1f3, 0x209, 0x241, 0x251, 0x274, 0x27d, 0x27f

Function 1:
Public function signature: 0x52efea6e
Entry block: 0xba
Exit block: 0x2a6
Body: 0xba, 0xc2, 0xc6, 0x282, 0x2a2, 0x2a6

Function 2:
Public function signature: 0x595497f5
Entry block: 0xcf
Exit block: 0x6c
Body: 0x6c, 0xcf, 0xd7, 0xdb, 0x27f, 0x2c1, 0x2cb

Function 3:
Public function signature: 0x7ccb13c4
Entry block: 0xe7
Exit block: 0x6c
Body: 0x6c, 0xe7, 0xef, 0xf3, 0x27f, 0x2cf, 0x2d9, 0x2ec, 0x2f5, 0x30b, 0x34f, 0x358, 0x36e

Function 4:
Public function signature: 0xf43fa805
Entry block: 0x140
Exit block: 0x155
Body: 0x140, 0x148, 0x14c, 0x155, 0x3a0

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

