Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x31fb67c2
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x31fb67c2
0x3c: V13 = EQ 0x31fb67c2 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd6]
---
0x41 DUP1
0x42 PUSH4 0x52efea6e
0x47 EQ
0x48 PUSH2 0xd6
0x4b JUMPI
---
0x42: V15 = 0x52efea6e
0x47: V16 = EQ 0x52efea6e V11
0x48: V17 = 0xd6
0x4b: JUMPI 0xd6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xed]
---
0x4c DUP1
0x4d PUSH4 0x61728f39
0x52 EQ
0x53 PUSH2 0xed
0x56 JUMPI
---
0x4d: V18 = 0x61728f39
0x52: V19 = EQ 0x61728f39 V11
0x53: V20 = 0xed
0x56: JUMPI 0xed V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x120]
---
0x57 DUP1
0x58 PUSH4 0x7ccb13c4
0x5d EQ
0x5e PUSH2 0x120
0x61 JUMPI
---
0x58: V21 = 0x7ccb13c4
0x5d: V22 = EQ 0x7ccb13c4 V11
0x5e: V23 = 0x120
0x61: JUMPI 0x120 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x189]
---
0x62 DUP1
0x63 PUSH4 0xf43fa805
0x68 EQ
0x69 PUSH2 0x189
0x6c JUMPI
---
0x63: V24 = 0xf43fa805
0x68: V25 = EQ 0xf43fa805 V11
0x69: V26 = 0x189
0x6c: JUMPI 0x189 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1bc]
---
0x6d DUP1
0x6e PUSH4 0xf4dafe71
0x73 EQ
0x74 PUSH2 0x1bc
0x77 JUMPI
---
0x6e: V27 = 0xf4dafe71
0x73: V28 = EQ 0xf4dafe71 V11
0x74: V29 = 0x1bc
0x77: JUMPI 0x1bc V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0xd3]
---
Predecessors: [0xd]
Successors: [0x1ed]
---
0x7a JUMPDEST
0x7b PUSH2 0xd4
0x7e PUSH1 0x4
0x80 DUP1
0x81 CALLDATASIZE
0x82 SUB
0x83 DUP2
0x84 ADD
0x85 SWAP1
0x86 DUP1
0x87 DUP1
0x88 CALLDATALOAD
0x89 SWAP1
0x8a PUSH1 0x20
0x8c ADD
0x8d SWAP1
0x8e DUP3
0x8f ADD
0x90 DUP1
0x91 CALLDATALOAD
0x92 SWAP1
0x93 PUSH1 0x20
0x95 ADD
0x96 SWAP1
0x97 DUP1
0x98 DUP1
0x99 PUSH1 0x1f
0x9b ADD
0x9c PUSH1 0x20
0x9e DUP1
0x9f SWAP2
0xa0 DIV
0xa1 MUL
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 SWAP1
0xa9 DUP2
0xaa ADD
0xab PUSH1 0x40
0xad MSTORE
0xae DUP1
0xaf SWAP4
0xb0 SWAP3
0xb1 SWAP2
0xb2 SWAP1
0xb3 DUP2
0xb4 DUP2
0xb5 MSTORE
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 DUP4
0xba DUP4
0xbb DUP1
0xbc DUP3
0xbd DUP5
0xbe CALLDATACOPY
0xbf DUP3
0xc0 ADD
0xc1 SWAP2
0xc2 POP
0xc3 POP
0xc4 POP
0xc5 POP
0xc6 POP
0xc7 POP
0xc8 SWAP2
0xc9 SWAP3
0xca SWAP2
0xcb SWAP3
0xcc SWAP1
0xcd POP
0xce POP
0xcf POP
0xd0 PUSH2 0x1ed
0xd3 JUMP
---
0x7a: JUMPDEST 
0x7b: V30 = 0xd4
0x7e: V31 = 0x4
0x81: V32 = CALLDATASIZE
0x82: V33 = SUB V32 0x4
0x84: V34 = ADD 0x4 V33
0x88: V35 = CALLDATALOAD 0x4
0x8a: V36 = 0x20
0x8c: V37 = ADD 0x20 0x4
0x8f: V38 = ADD 0x4 V35
0x91: V39 = CALLDATALOAD V38
0x93: V40 = 0x20
0x95: V41 = ADD 0x20 V38
0x99: V42 = 0x1f
0x9b: V43 = ADD 0x1f V39
0x9c: V44 = 0x20
0xa0: V45 = DIV V43 0x20
0xa1: V46 = MUL V45 0x20
0xa2: V47 = 0x20
0xa4: V48 = ADD 0x20 V46
0xa5: V49 = 0x40
0xa7: V50 = M[0x40]
0xaa: V51 = ADD V50 V48
0xab: V52 = 0x40
0xad: M[0x40] = V51
0xb5: M[V50] = V39
0xb6: V53 = 0x20
0xb8: V54 = ADD 0x20 V50
0xbe: CALLDATACOPY V54 V41 V39
0xc0: V55 = ADD V54 V39
0xd0: V56 = 0x1ed
0xd3: JUMP 0x1ed
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd4, V50]
Exit stack: [V11, 0xd4, V50]

================================

Block 0xd4
[0xd4:0xd5]
---
Predecessors: [0x377]
Successors: []
---
0xd4 JUMPDEST
0xd5 STOP
---
0xd4: JUMPDEST 
0xd5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xdd]
---
Predecessors: [0x41]
Successors: [0xde, 0xe2]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 DUP1
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd6: JUMPDEST 
0xd7: V57 = CALLVALUE
0xd9: V58 = ISZERO V57
0xda: V59 = 0xe2
0xdd: JUMPI 0xe2 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd6]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V60 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0xe2
[0xe2:0xea]
---
Predecessors: [0xd6]
Successors: [0x37a]
---
0xe2 JUMPDEST
0xe3 POP
0xe4 PUSH2 0xeb
0xe7 PUSH2 0x37a
0xea JUMP
---
0xe2: JUMPDEST 
0xe4: V61 = 0xeb
0xe7: V62 = 0x37a
0xea: JUMP 0x37a
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0xeb]
Exit stack: [V11, 0xeb]

================================

Block 0xeb
[0xeb:0xec]
---
Predecessors: []
Successors: []
---
0xeb JUMPDEST
0xec STOP
---
0xeb: JUMPDEST 
0xec: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xed
[0xed:0xf4]
---
Predecessors: [0x4c]
Successors: [0xf5, 0xf9]
---
0xed JUMPDEST
0xee CALLVALUE
0xef DUP1
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xed: JUMPDEST 
0xee: V63 = CALLVALUE
0xf0: V64 = ISZERO V63
0xf1: V65 = 0xf9
0xf4: JUMPI 0xf9 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xed]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V66 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0xf9
[0xf9:0x101]
---
Predecessors: [0xed]
Successors: [0x411]
---
0xf9 JUMPDEST
0xfa POP
0xfb PUSH2 0x102
0xfe PUSH2 0x411
0x101 JUMP
---
0xf9: JUMPDEST 
0xfb: V67 = 0x102
0xfe: V68 = 0x411
0x101: JUMP 0x411
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [0x102]
Exit stack: [V11, 0x102]

================================

Block 0x102
[0x102:0x11f]
---
Predecessors: [0x411]
Successors: []
---
0x102 JUMPDEST
0x103 PUSH1 0x40
0x105 MLOAD
0x106 DUP1
0x107 DUP3
0x108 PUSH1 0x0
0x10a NOT
0x10b AND
0x10c PUSH1 0x0
0x10e NOT
0x10f AND
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x20
0x114 ADD
0x115 SWAP2
0x116 POP
0x117 POP
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c SWAP2
0x11d SUB
0x11e SWAP1
0x11f RETURN
---
0x102: JUMPDEST 
0x103: V69 = 0x40
0x105: V70 = M[0x40]
0x108: V71 = 0x0
0x10a: V72 = NOT 0x0
0x10b: V73 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V302
0x10c: V74 = 0x0
0x10e: V75 = NOT 0x0
0x10f: V76 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V73
0x111: M[V70] = V76
0x112: V77 = 0x20
0x114: V78 = ADD 0x20 V70
0x118: V79 = 0x40
0x11a: V80 = M[0x40]
0x11d: V81 = SUB V78 V80
0x11f: RETURN V80 V81
---
Entry stack: [V11, 0x102, V302]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x102]

================================

Block 0x120
[0x120:0x127]
---
Predecessors: [0x57]
Successors: [0x128, 0x12c]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 DUP1
0x123 ISZERO
0x124 PUSH2 0x12c
0x127 JUMPI
---
0x120: JUMPDEST 
0x121: V82 = CALLVALUE
0x123: V83 = ISZERO V82
0x124: V84 = 0x12c
0x127: JUMPI 0x12c V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V11, V82]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x120]
Successors: []
---
0x128 PUSH1 0x0
0x12a DUP1
0x12b REVERT
---
0x128: V85 = 0x0
0x12b: REVERT 0x0 0x0
---
Entry stack: [V11, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V82]

================================

Block 0x12c
[0x12c:0x186]
---
Predecessors: [0x120]
Successors: [0x417]
---
0x12c JUMPDEST
0x12d POP
0x12e PUSH2 0x187
0x131 PUSH1 0x4
0x133 DUP1
0x134 CALLDATASIZE
0x135 SUB
0x136 DUP2
0x137 ADD
0x138 SWAP1
0x139 DUP1
0x13a DUP1
0x13b CALLDATALOAD
0x13c SWAP1
0x13d PUSH1 0x20
0x13f ADD
0x140 SWAP1
0x141 DUP3
0x142 ADD
0x143 DUP1
0x144 CALLDATALOAD
0x145 SWAP1
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP1
0x14a DUP1
0x14b DUP1
0x14c PUSH1 0x1f
0x14e ADD
0x14f PUSH1 0x20
0x151 DUP1
0x152 SWAP2
0x153 DIV
0x154 MUL
0x155 PUSH1 0x20
0x157 ADD
0x158 PUSH1 0x40
0x15a MLOAD
0x15b SWAP1
0x15c DUP2
0x15d ADD
0x15e PUSH1 0x40
0x160 MSTORE
0x161 DUP1
0x162 SWAP4
0x163 SWAP3
0x164 SWAP2
0x165 SWAP1
0x166 DUP2
0x167 DUP2
0x168 MSTORE
0x169 PUSH1 0x20
0x16b ADD
0x16c DUP4
0x16d DUP4
0x16e DUP1
0x16f DUP3
0x170 DUP5
0x171 CALLDATACOPY
0x172 DUP3
0x173 ADD
0x174 SWAP2
0x175 POP
0x176 POP
0x177 POP
0x178 POP
0x179 POP
0x17a POP
0x17b SWAP2
0x17c SWAP3
0x17d SWAP2
0x17e SWAP3
0x17f SWAP1
0x180 POP
0x181 POP
0x182 POP
0x183 PUSH2 0x417
0x186 JUMP
---
0x12c: JUMPDEST 
0x12e: V86 = 0x187
0x131: V87 = 0x4
0x134: V88 = CALLDATASIZE
0x135: V89 = SUB V88 0x4
0x137: V90 = ADD 0x4 V89
0x13b: V91 = CALLDATALOAD 0x4
0x13d: V92 = 0x20
0x13f: V93 = ADD 0x20 0x4
0x142: V94 = ADD 0x4 V91
0x144: V95 = CALLDATALOAD V94
0x146: V96 = 0x20
0x148: V97 = ADD 0x20 V94
0x14c: V98 = 0x1f
0x14e: V99 = ADD 0x1f V95
0x14f: V100 = 0x20
0x153: V101 = DIV V99 0x20
0x154: V102 = MUL V101 0x20
0x155: V103 = 0x20
0x157: V104 = ADD 0x20 V102
0x158: V105 = 0x40
0x15a: V106 = M[0x40]
0x15d: V107 = ADD V106 V104
0x15e: V108 = 0x40
0x160: M[0x40] = V107
0x168: M[V106] = V95
0x169: V109 = 0x20
0x16b: V110 = ADD 0x20 V106
0x171: CALLDATACOPY V110 V97 V95
0x173: V111 = ADD V110 V95
0x183: V112 = 0x417
0x186: JUMP 0x417
---
Entry stack: [V11, V82]
Stack pops: 1
Stack additions: [0x187, V106]
Exit stack: [V11, 0x187, V106]

================================

Block 0x187
[0x187:0x188]
---
Predecessors: [0x503]
Successors: []
---
0x187 JUMPDEST
0x188 STOP
---
0x187: JUMPDEST 
0x188: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x189
[0x189:0x190]
---
Predecessors: [0x62]
Successors: [0x191, 0x195]
---
0x189 JUMPDEST
0x18a CALLVALUE
0x18b DUP1
0x18c ISZERO
0x18d PUSH2 0x195
0x190 JUMPI
---
0x189: JUMPDEST 
0x18a: V113 = CALLVALUE
0x18c: V114 = ISZERO V113
0x18d: V115 = 0x195
0x190: JUMPI 0x195 V114
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V113]
Exit stack: [V11, V113]

================================

Block 0x191
[0x191:0x194]
---
Predecessors: [0x189]
Successors: []
---
0x191 PUSH1 0x0
0x193 DUP1
0x194 REVERT
---
0x191: V116 = 0x0
0x194: REVERT 0x0 0x0
---
Entry stack: [V11, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V113]

================================

Block 0x195
[0x195:0x19d]
---
Predecessors: [0x189]
Successors: [0x506]
---
0x195 JUMPDEST
0x196 POP
0x197 PUSH2 0x19e
0x19a PUSH2 0x506
0x19d JUMP
---
0x195: JUMPDEST 
0x197: V117 = 0x19e
0x19a: V118 = 0x506
0x19d: JUMP 0x506
---
Entry stack: [V11, V113]
Stack pops: 1
Stack additions: [0x19e]
Exit stack: [V11, 0x19e]

================================

Block 0x19e
[0x19e:0x1bb]
---
Predecessors: [0x506]
Successors: []
---
0x19e JUMPDEST
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 DUP1
0x1a3 DUP3
0x1a4 PUSH1 0x0
0x1a6 NOT
0x1a7 AND
0x1a8 PUSH1 0x0
0x1aa NOT
0x1ab AND
0x1ac DUP2
0x1ad MSTORE
0x1ae PUSH1 0x20
0x1b0 ADD
0x1b1 SWAP2
0x1b2 POP
0x1b3 POP
0x1b4 PUSH1 0x40
0x1b6 MLOAD
0x1b7 DUP1
0x1b8 SWAP2
0x1b9 SUB
0x1ba SWAP1
0x1bb RETURN
---
0x19e: JUMPDEST 
0x19f: V119 = 0x40
0x1a1: V120 = M[0x40]
0x1a4: V121 = 0x0
0x1a6: V122 = NOT 0x0
0x1a7: V123 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V394
0x1a8: V124 = 0x0
0x1aa: V125 = NOT 0x0
0x1ab: V126 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V123
0x1ad: M[V120] = V126
0x1ae: V127 = 0x20
0x1b0: V128 = ADD 0x20 V120
0x1b4: V129 = 0x40
0x1b6: V130 = M[0x40]
0x1b9: V131 = SUB V128 V130
0x1bb: RETURN V130 V131
---
Entry stack: [V11, V394]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bc
[0x1bc:0x1c3]
---
Predecessors: [0x6d]
Successors: [0x1c4, 0x1c8]
---
0x1bc JUMPDEST
0x1bd CALLVALUE
0x1be DUP1
0x1bf ISZERO
0x1c0 PUSH2 0x1c8
0x1c3 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V132 = CALLVALUE
0x1bf: V133 = ISZERO V132
0x1c0: V134 = 0x1c8
0x1c3: JUMPI 0x1c8 V133
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V132]
Exit stack: [V11, V132]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x1bc]
Successors: []
---
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 REVERT
---
0x1c4: V135 = 0x0
0x1c7: REVERT 0x0 0x0
---
Entry stack: [V11, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V132]

================================

Block 0x1c8
[0x1c8:0x1ea]
---
Predecessors: [0x1bc]
Successors: [0x510]
---
0x1c8 JUMPDEST
0x1c9 POP
0x1ca PUSH2 0x1eb
0x1cd PUSH1 0x4
0x1cf DUP1
0x1d0 CALLDATASIZE
0x1d1 SUB
0x1d2 DUP2
0x1d3 ADD
0x1d4 SWAP1
0x1d5 DUP1
0x1d6 DUP1
0x1d7 CALLDATALOAD
0x1d8 PUSH1 0x0
0x1da NOT
0x1db AND
0x1dc SWAP1
0x1dd PUSH1 0x20
0x1df ADD
0x1e0 SWAP1
0x1e1 SWAP3
0x1e2 SWAP2
0x1e3 SWAP1
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 PUSH2 0x510
0x1ea JUMP
---
0x1c8: JUMPDEST 
0x1ca: V136 = 0x1eb
0x1cd: V137 = 0x4
0x1d0: V138 = CALLDATASIZE
0x1d1: V139 = SUB V138 0x4
0x1d3: V140 = ADD 0x4 V139
0x1d7: V141 = CALLDATALOAD 0x4
0x1d8: V142 = 0x0
0x1da: V143 = NOT 0x0
0x1db: V144 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V141
0x1dd: V145 = 0x20
0x1df: V146 = ADD 0x20 0x4
0x1e7: V147 = 0x510
0x1ea: JUMP 0x510
---
Entry stack: [V11, V132]
Stack pops: 1
Stack additions: [0x1eb, V144]
Exit stack: [V11, 0x1eb, V144]

================================

Block 0x1eb
[0x1eb:0x1ec]
---
Predecessors: [0x52e]
Successors: []
---
0x1eb JUMPDEST
0x1ec STOP
---
0x1eb: JUMPDEST 
0x1ec: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ed
[0x1ed:0x222]
---
Predecessors: [0x7a]
Successors: [0x223, 0x227]
---
0x1ed JUMPDEST
0x1ee ORIGIN
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 CALLER
0x206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21b AND
0x21c EQ
0x21d ISZERO
0x21e ISZERO
0x21f PUSH2 0x227
0x222 JUMPI
---
0x1ed: JUMPDEST 
0x1ee: V148 = ORIGIN
0x1ef: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x205: V151 = CALLER
0x206: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x21c: V154 = EQ V153 V150
0x21d: V155 = ISZERO V154
0x21e: V156 = ISZERO V155
0x21f: V157 = 0x227
0x222: JUMPI 0x227 V156
---
Entry stack: [V11, 0xd4, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd4, V50]

================================

Block 0x223
[0x223:0x226]
---
Predecessors: [0x1ed]
Successors: []
---
0x223 PUSH1 0x0
0x225 DUP1
0x226 REVERT
---
0x223: V158 = 0x0
0x226: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd4, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd4, V50]

================================

Block 0x227
[0x227:0x23a]
---
Predecessors: [0x1ed]
Successors: [0x23b]
---
0x227 JUMPDEST
0x228 DUP1
0x229 PUSH1 0x40
0x22b MLOAD
0x22c PUSH1 0x20
0x22e ADD
0x22f DUP1
0x230 DUP3
0x231 DUP1
0x232 MLOAD
0x233 SWAP1
0x234 PUSH1 0x20
0x236 ADD
0x237 SWAP1
0x238 DUP1
0x239 DUP4
0x23a DUP4
---
0x227: JUMPDEST 
0x229: V159 = 0x40
0x22b: V160 = M[0x40]
0x22c: V161 = 0x20
0x22e: V162 = ADD 0x20 V160
0x232: V163 = M[V50]
0x234: V164 = 0x20
0x236: V165 = ADD 0x20 V50
---
Entry stack: [V11, 0xd4, V50]
Stack pops: 1
Stack additions: [S0, S0, V162, V162, V165, V163, V163, V162, V165]
Exit stack: [V11, 0xd4, V50, V50, V162, V162, V165, V163, V163, V162, V165]

================================

Block 0x23b
[0x23b:0x245]
---
Predecessors: [0x227, 0x246]
Successors: [0x246, 0x260]
---
0x23b JUMPDEST
0x23c PUSH1 0x20
0x23e DUP4
0x23f LT
0x240 ISZERO
0x241 ISZERO
0x242 PUSH2 0x260
0x245 JUMPI
---
0x23b: JUMPDEST 
0x23c: V166 = 0x20
0x23f: V167 = LT S2 0x20
0x240: V168 = ISZERO V167
0x241: V169 = ISZERO V168
0x242: V170 = 0x260
0x245: JUMPI 0x260 V169
---
Entry stack: [V11, 0xd4, V50, V50, V162, V162, V165, V163, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xd4, V50, V50, V162, V162, V165, V163, S2, S1, S0]

================================

Block 0x246
[0x246:0x25f]
---
Predecessors: [0x23b]
Successors: [0x23b]
---
0x246 DUP1
0x247 MLOAD
0x248 DUP3
0x249 MSTORE
0x24a PUSH1 0x20
0x24c DUP3
0x24d ADD
0x24e SWAP2
0x24f POP
0x250 PUSH1 0x20
0x252 DUP2
0x253 ADD
0x254 SWAP1
0x255 POP
0x256 PUSH1 0x20
0x258 DUP4
0x259 SUB
0x25a SWAP3
0x25b POP
0x25c PUSH2 0x23b
0x25f JUMP
---
0x247: V171 = M[S0]
0x249: M[S1] = V171
0x24a: V172 = 0x20
0x24d: V173 = ADD S1 0x20
0x250: V174 = 0x20
0x253: V175 = ADD S0 0x20
0x256: V176 = 0x20
0x259: V177 = SUB S2 0x20
0x25c: V178 = 0x23b
0x25f: JUMP 0x23b
---
Entry stack: [V11, 0xd4, V50, V50, V162, V162, V165, V163, S2, S1, S0]
Stack pops: 3
Stack additions: [V177, V173, V175]
Exit stack: [V11, 0xd4, V50, V50, V162, V162, V165, V163, V177, V173, V175]

================================

Block 0x260
[0x260:0x2a3]
---
Predecessors: [0x23b]
Successors: [0x2a4]
---
0x260 JUMPDEST
0x261 PUSH1 0x1
0x263 DUP4
0x264 PUSH1 0x20
0x266 SUB
0x267 PUSH2 0x100
0x26a EXP
0x26b SUB
0x26c DUP1
0x26d NOT
0x26e DUP3
0x26f MLOAD
0x270 AND
0x271 DUP2
0x272 DUP5
0x273 MLOAD
0x274 AND
0x275 DUP1
0x276 DUP3
0x277 OR
0x278 DUP6
0x279 MSTORE
0x27a POP
0x27b POP
0x27c POP
0x27d POP
0x27e POP
0x27f POP
0x280 SWAP1
0x281 POP
0x282 ADD
0x283 SWAP2
0x284 POP
0x285 POP
0x286 PUSH1 0x40
0x288 MLOAD
0x289 PUSH1 0x20
0x28b DUP2
0x28c DUP4
0x28d SUB
0x28e SUB
0x28f DUP2
0x290 MSTORE
0x291 SWAP1
0x292 PUSH1 0x40
0x294 MSTORE
0x295 PUSH1 0x40
0x297 MLOAD
0x298 DUP1
0x299 DUP3
0x29a DUP1
0x29b MLOAD
0x29c SWAP1
0x29d PUSH1 0x20
0x29f ADD
0x2a0 SWAP1
0x2a1 DUP1
0x2a2 DUP4
0x2a3 DUP4
---
0x260: JUMPDEST 
0x261: V179 = 0x1
0x264: V180 = 0x20
0x266: V181 = SUB 0x20 S2
0x267: V182 = 0x100
0x26a: V183 = EXP 0x100 V181
0x26b: V184 = SUB V183 0x1
0x26d: V185 = NOT V184
0x26f: V186 = M[S0]
0x270: V187 = AND V186 V185
0x273: V188 = M[S1]
0x274: V189 = AND V188 V184
0x277: V190 = OR V187 V189
0x279: M[S1] = V190
0x282: V191 = ADD V163 V162
0x286: V192 = 0x40
0x288: V193 = M[0x40]
0x289: V194 = 0x20
0x28d: V195 = SUB V191 V193
0x28e: V196 = SUB V195 0x20
0x290: M[V193] = V196
0x292: V197 = 0x40
0x294: M[0x40] = V191
0x295: V198 = 0x40
0x297: V199 = M[0x40]
0x29b: V200 = M[V193]
0x29d: V201 = 0x20
0x29f: V202 = ADD 0x20 V193
---
Entry stack: [V11, 0xd4, V50, V50, V162, V162, V165, V163, S2, S1, S0]
Stack pops: 8
Stack additions: [V193, V199, V199, V202, V200, V200, V199, V202]
Exit stack: [V11, 0xd4, V50, V193, V199, V199, V202, V200, V200, V199, V202]

================================

Block 0x2a4
[0x2a4:0x2ae]
---
Predecessors: [0x260, 0x2af]
Successors: [0x2af, 0x2c9]
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x20
0x2a7 DUP4
0x2a8 LT
0x2a9 ISZERO
0x2aa ISZERO
0x2ab PUSH2 0x2c9
0x2ae JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V203 = 0x20
0x2a8: V204 = LT S2 0x20
0x2a9: V205 = ISZERO V204
0x2aa: V206 = ISZERO V205
0x2ab: V207 = 0x2c9
0x2ae: JUMPI 0x2c9 V206
---
Entry stack: [V11, 0xd4, V50, V193, V199, V199, V202, V200, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xd4, V50, V193, V199, V199, V202, V200, S2, S1, S0]

================================

Block 0x2af
[0x2af:0x2c8]
---
Predecessors: [0x2a4]
Successors: [0x2a4]
---
0x2af DUP1
0x2b0 MLOAD
0x2b1 DUP3
0x2b2 MSTORE
0x2b3 PUSH1 0x20
0x2b5 DUP3
0x2b6 ADD
0x2b7 SWAP2
0x2b8 POP
0x2b9 PUSH1 0x20
0x2bb DUP2
0x2bc ADD
0x2bd SWAP1
0x2be POP
0x2bf PUSH1 0x20
0x2c1 DUP4
0x2c2 SUB
0x2c3 SWAP3
0x2c4 POP
0x2c5 PUSH2 0x2a4
0x2c8 JUMP
---
0x2b0: V208 = M[S0]
0x2b2: M[S1] = V208
0x2b3: V209 = 0x20
0x2b6: V210 = ADD S1 0x20
0x2b9: V211 = 0x20
0x2bc: V212 = ADD S0 0x20
0x2bf: V213 = 0x20
0x2c2: V214 = SUB S2 0x20
0x2c5: V215 = 0x2a4
0x2c8: JUMP 0x2a4
---
Entry stack: [V11, 0xd4, V50, V193, V199, V199, V202, V200, S2, S1, S0]
Stack pops: 3
Stack additions: [V214, V210, V212]
Exit stack: [V11, 0xd4, V50, V193, V199, V199, V202, V200, V214, V210, V212]

================================

Block 0x2c9
[0x2c9:0x307]
---
Predecessors: [0x2a4]
Successors: [0x308, 0x377]
---
0x2c9 JUMPDEST
0x2ca PUSH1 0x1
0x2cc DUP4
0x2cd PUSH1 0x20
0x2cf SUB
0x2d0 PUSH2 0x100
0x2d3 EXP
0x2d4 SUB
0x2d5 DUP1
0x2d6 NOT
0x2d7 DUP3
0x2d8 MLOAD
0x2d9 AND
0x2da DUP2
0x2db DUP5
0x2dc MLOAD
0x2dd AND
0x2de DUP1
0x2df DUP3
0x2e0 OR
0x2e1 DUP6
0x2e2 MSTORE
0x2e3 POP
0x2e4 POP
0x2e5 POP
0x2e6 POP
0x2e7 POP
0x2e8 POP
0x2e9 SWAP1
0x2ea POP
0x2eb ADD
0x2ec SWAP2
0x2ed POP
0x2ee POP
0x2ef PUSH1 0x40
0x2f1 MLOAD
0x2f2 DUP1
0x2f3 SWAP2
0x2f4 SUB
0x2f5 SWAP1
0x2f6 SHA3
0x2f7 PUSH1 0x0
0x2f9 NOT
0x2fa AND
0x2fb PUSH1 0x0
0x2fd SLOAD
0x2fe PUSH1 0x0
0x300 NOT
0x301 AND
0x302 EQ
0x303 ISZERO
0x304 PUSH2 0x377
0x307 JUMPI
---
0x2c9: JUMPDEST 
0x2ca: V216 = 0x1
0x2cd: V217 = 0x20
0x2cf: V218 = SUB 0x20 S2
0x2d0: V219 = 0x100
0x2d3: V220 = EXP 0x100 V218
0x2d4: V221 = SUB V220 0x1
0x2d6: V222 = NOT V221
0x2d8: V223 = M[S0]
0x2d9: V224 = AND V223 V222
0x2dc: V225 = M[S1]
0x2dd: V226 = AND V225 V221
0x2e0: V227 = OR V224 V226
0x2e2: M[S1] = V227
0x2eb: V228 = ADD V200 V199
0x2ef: V229 = 0x40
0x2f1: V230 = M[0x40]
0x2f4: V231 = SUB V228 V230
0x2f6: V232 = SHA3 V230 V231
0x2f7: V233 = 0x0
0x2f9: V234 = NOT 0x0
0x2fa: V235 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V232
0x2fb: V236 = 0x0
0x2fd: V237 = S[0x0]
0x2fe: V238 = 0x0
0x300: V239 = NOT 0x0
0x301: V240 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V237
0x302: V241 = EQ V240 V235
0x303: V242 = ISZERO V241
0x304: V243 = 0x377
0x307: JUMPI 0x377 V242
---
Entry stack: [V11, 0xd4, V50, V193, V199, V199, V202, V200, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0xd4, V50]

================================

Block 0x308
[0x308:0x317]
---
Predecessors: [0x2c9]
Successors: [0x318, 0x376]
---
0x308 PUSH8 0xde0b6b3a7640000
0x311 CALLVALUE
0x312 GT
0x313 ISZERO
0x314 PUSH2 0x376
0x317 JUMPI
---
0x308: V244 = 0xde0b6b3a7640000
0x311: V245 = CALLVALUE
0x312: V246 = GT V245 0xde0b6b3a7640000
0x313: V247 = ISZERO V246
0x314: V248 = 0x376
0x317: JUMPI 0x376 V247
---
Entry stack: [V11, 0xd4, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd4, V50]

================================

Block 0x318
[0x318:0x36a]
---
Predecessors: [0x308]
Successors: [0x36b, 0x374]
---
0x318 CALLER
0x319 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32e AND
0x32f PUSH2 0x8fc
0x332 ADDRESS
0x333 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x348 AND
0x349 BALANCE
0x34a SWAP1
0x34b DUP2
0x34c ISZERO
0x34d MUL
0x34e SWAP1
0x34f PUSH1 0x40
0x351 MLOAD
0x352 PUSH1 0x0
0x354 PUSH1 0x40
0x356 MLOAD
0x357 DUP1
0x358 DUP4
0x359 SUB
0x35a DUP2
0x35b DUP6
0x35c DUP9
0x35d DUP9
0x35e CALL
0x35f SWAP4
0x360 POP
0x361 POP
0x362 POP
0x363 POP
0x364 ISZERO
0x365 DUP1
0x366 ISZERO
0x367 PUSH2 0x374
0x36a JUMPI
---
0x318: V249 = CALLER
0x319: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x32f: V252 = 0x8fc
0x332: V253 = ADDRESS
0x333: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x348: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x349: V256 = BALANCE V255
0x34c: V257 = ISZERO V256
0x34d: V258 = MUL V257 0x8fc
0x34f: V259 = 0x40
0x351: V260 = M[0x40]
0x352: V261 = 0x0
0x354: V262 = 0x40
0x356: V263 = M[0x40]
0x359: V264 = SUB V260 V263
0x35e: V265 = CALL V258 V251 V256 V263 V264 V263 0x0
0x364: V266 = ISZERO V265
0x366: V267 = ISZERO V266
0x367: V268 = 0x374
0x36a: JUMPI 0x374 V267
---
Entry stack: [V11, 0xd4, V50]
Stack pops: 0
Stack additions: [V266]
Exit stack: [V11, 0xd4, V50, V266]

================================

Block 0x36b
[0x36b:0x373]
---
Predecessors: [0x318]
Successors: []
---
0x36b RETURNDATASIZE
0x36c PUSH1 0x0
0x36e DUP1
0x36f RETURNDATACOPY
0x370 RETURNDATASIZE
0x371 PUSH1 0x0
0x373 REVERT
---
0x36b: V269 = RETURNDATASIZE
0x36c: V270 = 0x0
0x36f: RETURNDATACOPY 0x0 0x0 V269
0x370: V271 = RETURNDATASIZE
0x371: V272 = 0x0
0x373: REVERT 0x0 V271
---
Entry stack: [V11, 0xd4, V50, V266]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd4, V50, V266]

================================

Block 0x374
[0x374:0x375]
---
Predecessors: [0x318]
Successors: [0x376]
---
0x374 JUMPDEST
0x375 POP
---
0x374: JUMPDEST 
---
Entry stack: [V11, 0xd4, V50, V266]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd4, V50]

================================

Block 0x376
[0x376:0x376]
---
Predecessors: [0x308, 0x374]
Successors: [0x377]
---
0x376 JUMPDEST
---
0x376: JUMPDEST 
---
Entry stack: [V11, 0xd4, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd4, V50]

================================

Block 0x377
[0x377:0x379]
---
Predecessors: [0x2c9, 0x376]
Successors: [0xd4]
---
0x377 JUMPDEST
0x378 POP
0x379 JUMP
---
0x377: JUMPDEST 
0x379: JUMP 0xd4
---
Entry stack: [V11, 0xd4, V50]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x37a
[0x37a:0x3d1]
---
Predecessors: [0xe2]
Successors: [0x3d2, 0x3d6]
---
0x37a JUMPDEST
0x37b PUSH1 0x1
0x37d PUSH1 0x0
0x37f SWAP1
0x380 SLOAD
0x381 SWAP1
0x382 PUSH2 0x100
0x385 EXP
0x386 SWAP1
0x387 DIV
0x388 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39d AND
0x39e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b3 AND
0x3b4 CALLER
0x3b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ca AND
0x3cb EQ
0x3cc ISZERO
0x3cd ISZERO
0x3ce PUSH2 0x3d6
0x3d1 JUMPI
---
0x37a: JUMPDEST 
0x37b: V273 = 0x1
0x37d: V274 = 0x0
0x380: V275 = S[0x1]
0x382: V276 = 0x100
0x385: V277 = EXP 0x100 0x0
0x387: V278 = DIV V275 0x1
0x388: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x39d: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x39e: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b3: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x3b4: V283 = CALLER
0x3b5: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ca: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x3cb: V286 = EQ V285 V282
0x3cc: V287 = ISZERO V286
0x3cd: V288 = ISZERO V287
0x3ce: V289 = 0x3d6
0x3d1: JUMPI 0x3d6 V288
---
Entry stack: [V11, 0xeb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xeb]

================================

Block 0x3d2
[0x3d2:0x3d5]
---
Predecessors: [0x37a]
Successors: []
---
0x3d2 PUSH1 0x0
0x3d4 DUP1
0x3d5 REVERT
---
0x3d2: V290 = 0x0
0x3d5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xeb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xeb]

================================

Block 0x3d6
[0x3d6:0x410]
---
Predecessors: [0x37a]
Successors: []
---
0x3d6 JUMPDEST
0x3d7 PUSH1 0x1
0x3d9 PUSH1 0x0
0x3db SWAP1
0x3dc SLOAD
0x3dd SWAP1
0x3de PUSH2 0x100
0x3e1 EXP
0x3e2 SWAP1
0x3e3 DIV
0x3e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f9 AND
0x3fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40f AND
0x410 SELFDESTRUCT
---
0x3d6: JUMPDEST 
0x3d7: V291 = 0x1
0x3d9: V292 = 0x0
0x3dc: V293 = S[0x1]
0x3de: V294 = 0x100
0x3e1: V295 = EXP 0x100 0x0
0x3e3: V296 = DIV V293 0x1
0x3e4: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x3fa: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x410: SELFDESTRUCT V300
---
Entry stack: [V11, 0xeb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xeb]

================================

Block 0x411
[0x411:0x416]
---
Predecessors: [0xf9]
Successors: [0x102]
---
0x411 JUMPDEST
0x412 PUSH1 0x0
0x414 SLOAD
0x415 DUP2
0x416 JUMP
---
0x411: JUMPDEST 
0x412: V301 = 0x0
0x414: V302 = S[0x0]
0x416: JUMP 0x102
---
Entry stack: [V11, 0x102]
Stack pops: 1
Stack additions: [S0, V302]
Exit stack: [V11, 0x102, V302]

================================

Block 0x417
[0x417:0x429]
---
Predecessors: [0x12c]
Successors: [0x42a, 0x503]
---
0x417 JUMPDEST
0x418 PUSH1 0x0
0x41a PUSH1 0x1
0x41c MUL
0x41d PUSH1 0x0
0x41f SLOAD
0x420 PUSH1 0x0
0x422 NOT
0x423 AND
0x424 EQ
0x425 ISZERO
0x426 PUSH2 0x503
0x429 JUMPI
---
0x417: JUMPDEST 
0x418: V303 = 0x0
0x41a: V304 = 0x1
0x41c: V305 = MUL 0x1 0x0
0x41d: V306 = 0x0
0x41f: V307 = S[0x0]
0x420: V308 = 0x0
0x422: V309 = NOT 0x0
0x423: V310 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V307
0x424: V311 = EQ V310 0x0
0x425: V312 = ISZERO V311
0x426: V313 = 0x503
0x429: JUMPI 0x503 V312
---
Entry stack: [V11, 0x187, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x187, V106]

================================

Block 0x42a
[0x42a:0x43c]
---
Predecessors: [0x417]
Successors: [0x43d]
---
0x42a DUP1
0x42b PUSH1 0x40
0x42d MLOAD
0x42e PUSH1 0x20
0x430 ADD
0x431 DUP1
0x432 DUP3
0x433 DUP1
0x434 MLOAD
0x435 SWAP1
0x436 PUSH1 0x20
0x438 ADD
0x439 SWAP1
0x43a DUP1
0x43b DUP4
0x43c DUP4
---
0x42b: V314 = 0x40
0x42d: V315 = M[0x40]
0x42e: V316 = 0x20
0x430: V317 = ADD 0x20 V315
0x434: V318 = M[V106]
0x436: V319 = 0x20
0x438: V320 = ADD 0x20 V106
---
Entry stack: [V11, 0x187, V106]
Stack pops: 1
Stack additions: [S0, S0, V317, V317, V320, V318, V318, V317, V320]
Exit stack: [V11, 0x187, V106, V106, V317, V317, V320, V318, V318, V317, V320]

================================

Block 0x43d
[0x43d:0x447]
---
Predecessors: [0x42a, 0x448]
Successors: [0x448, 0x462]
---
0x43d JUMPDEST
0x43e PUSH1 0x20
0x440 DUP4
0x441 LT
0x442 ISZERO
0x443 ISZERO
0x444 PUSH2 0x462
0x447 JUMPI
---
0x43d: JUMPDEST 
0x43e: V321 = 0x20
0x441: V322 = LT S2 0x20
0x442: V323 = ISZERO V322
0x443: V324 = ISZERO V323
0x444: V325 = 0x462
0x447: JUMPI 0x462 V324
---
Entry stack: [V11, 0x187, V106, V106, V317, V317, V320, V318, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x187, V106, V106, V317, V317, V320, V318, S2, S1, S0]

================================

Block 0x448
[0x448:0x461]
---
Predecessors: [0x43d]
Successors: [0x43d]
---
0x448 DUP1
0x449 MLOAD
0x44a DUP3
0x44b MSTORE
0x44c PUSH1 0x20
0x44e DUP3
0x44f ADD
0x450 SWAP2
0x451 POP
0x452 PUSH1 0x20
0x454 DUP2
0x455 ADD
0x456 SWAP1
0x457 POP
0x458 PUSH1 0x20
0x45a DUP4
0x45b SUB
0x45c SWAP3
0x45d POP
0x45e PUSH2 0x43d
0x461 JUMP
---
0x449: V326 = M[S0]
0x44b: M[S1] = V326
0x44c: V327 = 0x20
0x44f: V328 = ADD S1 0x20
0x452: V329 = 0x20
0x455: V330 = ADD S0 0x20
0x458: V331 = 0x20
0x45b: V332 = SUB S2 0x20
0x45e: V333 = 0x43d
0x461: JUMP 0x43d
---
Entry stack: [V11, 0x187, V106, V106, V317, V317, V320, V318, S2, S1, S0]
Stack pops: 3
Stack additions: [V332, V328, V330]
Exit stack: [V11, 0x187, V106, V106, V317, V317, V320, V318, V332, V328, V330]

================================

Block 0x462
[0x462:0x4a5]
---
Predecessors: [0x43d]
Successors: [0x4a6]
---
0x462 JUMPDEST
0x463 PUSH1 0x1
0x465 DUP4
0x466 PUSH1 0x20
0x468 SUB
0x469 PUSH2 0x100
0x46c EXP
0x46d SUB
0x46e DUP1
0x46f NOT
0x470 DUP3
0x471 MLOAD
0x472 AND
0x473 DUP2
0x474 DUP5
0x475 MLOAD
0x476 AND
0x477 DUP1
0x478 DUP3
0x479 OR
0x47a DUP6
0x47b MSTORE
0x47c POP
0x47d POP
0x47e POP
0x47f POP
0x480 POP
0x481 POP
0x482 SWAP1
0x483 POP
0x484 ADD
0x485 SWAP2
0x486 POP
0x487 POP
0x488 PUSH1 0x40
0x48a MLOAD
0x48b PUSH1 0x20
0x48d DUP2
0x48e DUP4
0x48f SUB
0x490 SUB
0x491 DUP2
0x492 MSTORE
0x493 SWAP1
0x494 PUSH1 0x40
0x496 MSTORE
0x497 PUSH1 0x40
0x499 MLOAD
0x49a DUP1
0x49b DUP3
0x49c DUP1
0x49d MLOAD
0x49e SWAP1
0x49f PUSH1 0x20
0x4a1 ADD
0x4a2 SWAP1
0x4a3 DUP1
0x4a4 DUP4
0x4a5 DUP4
---
0x462: JUMPDEST 
0x463: V334 = 0x1
0x466: V335 = 0x20
0x468: V336 = SUB 0x20 S2
0x469: V337 = 0x100
0x46c: V338 = EXP 0x100 V336
0x46d: V339 = SUB V338 0x1
0x46f: V340 = NOT V339
0x471: V341 = M[S0]
0x472: V342 = AND V341 V340
0x475: V343 = M[S1]
0x476: V344 = AND V343 V339
0x479: V345 = OR V342 V344
0x47b: M[S1] = V345
0x484: V346 = ADD V318 V317
0x488: V347 = 0x40
0x48a: V348 = M[0x40]
0x48b: V349 = 0x20
0x48f: V350 = SUB V346 V348
0x490: V351 = SUB V350 0x20
0x492: M[V348] = V351
0x494: V352 = 0x40
0x496: M[0x40] = V346
0x497: V353 = 0x40
0x499: V354 = M[0x40]
0x49d: V355 = M[V348]
0x49f: V356 = 0x20
0x4a1: V357 = ADD 0x20 V348
---
Entry stack: [V11, 0x187, V106, V106, V317, V317, V320, V318, S2, S1, S0]
Stack pops: 8
Stack additions: [V348, V354, V354, V357, V355, V355, V354, V357]
Exit stack: [V11, 0x187, V106, V348, V354, V354, V357, V355, V355, V354, V357]

================================

Block 0x4a6
[0x4a6:0x4b0]
---
Predecessors: [0x462, 0x4b1]
Successors: [0x4b1, 0x4cb]
---
0x4a6 JUMPDEST
0x4a7 PUSH1 0x20
0x4a9 DUP4
0x4aa LT
0x4ab ISZERO
0x4ac ISZERO
0x4ad PUSH2 0x4cb
0x4b0 JUMPI
---
0x4a6: JUMPDEST 
0x4a7: V358 = 0x20
0x4aa: V359 = LT S2 0x20
0x4ab: V360 = ISZERO V359
0x4ac: V361 = ISZERO V360
0x4ad: V362 = 0x4cb
0x4b0: JUMPI 0x4cb V361
---
Entry stack: [V11, 0x187, V106, V348, V354, V354, V357, V355, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x187, V106, V348, V354, V354, V357, V355, S2, S1, S0]

================================

Block 0x4b1
[0x4b1:0x4ca]
---
Predecessors: [0x4a6]
Successors: [0x4a6]
---
0x4b1 DUP1
0x4b2 MLOAD
0x4b3 DUP3
0x4b4 MSTORE
0x4b5 PUSH1 0x20
0x4b7 DUP3
0x4b8 ADD
0x4b9 SWAP2
0x4ba POP
0x4bb PUSH1 0x20
0x4bd DUP2
0x4be ADD
0x4bf SWAP1
0x4c0 POP
0x4c1 PUSH1 0x20
0x4c3 DUP4
0x4c4 SUB
0x4c5 SWAP3
0x4c6 POP
0x4c7 PUSH2 0x4a6
0x4ca JUMP
---
0x4b2: V363 = M[S0]
0x4b4: M[S1] = V363
0x4b5: V364 = 0x20
0x4b8: V365 = ADD S1 0x20
0x4bb: V366 = 0x20
0x4be: V367 = ADD S0 0x20
0x4c1: V368 = 0x20
0x4c4: V369 = SUB S2 0x20
0x4c7: V370 = 0x4a6
0x4ca: JUMP 0x4a6
---
Entry stack: [V11, 0x187, V106, V348, V354, V354, V357, V355, S2, S1, S0]
Stack pops: 3
Stack additions: [V369, V365, V367]
Exit stack: [V11, 0x187, V106, V348, V354, V354, V357, V355, V369, V365, V367]

================================

Block 0x4cb
[0x4cb:0x502]
---
Predecessors: [0x4a6]
Successors: [0x503]
---
0x4cb JUMPDEST
0x4cc PUSH1 0x1
0x4ce DUP4
0x4cf PUSH1 0x20
0x4d1 SUB
0x4d2 PUSH2 0x100
0x4d5 EXP
0x4d6 SUB
0x4d7 DUP1
0x4d8 NOT
0x4d9 DUP3
0x4da MLOAD
0x4db AND
0x4dc DUP2
0x4dd DUP5
0x4de MLOAD
0x4df AND
0x4e0 DUP1
0x4e1 DUP3
0x4e2 OR
0x4e3 DUP6
0x4e4 MSTORE
0x4e5 POP
0x4e6 POP
0x4e7 POP
0x4e8 POP
0x4e9 POP
0x4ea POP
0x4eb SWAP1
0x4ec POP
0x4ed ADD
0x4ee SWAP2
0x4ef POP
0x4f0 POP
0x4f1 PUSH1 0x40
0x4f3 MLOAD
0x4f4 DUP1
0x4f5 SWAP2
0x4f6 SUB
0x4f7 SWAP1
0x4f8 SHA3
0x4f9 PUSH1 0x0
0x4fb DUP2
0x4fc PUSH1 0x0
0x4fe NOT
0x4ff AND
0x500 SWAP1
0x501 SSTORE
0x502 POP
---
0x4cb: JUMPDEST 
0x4cc: V371 = 0x1
0x4cf: V372 = 0x20
0x4d1: V373 = SUB 0x20 S2
0x4d2: V374 = 0x100
0x4d5: V375 = EXP 0x100 V373
0x4d6: V376 = SUB V375 0x1
0x4d8: V377 = NOT V376
0x4da: V378 = M[S0]
0x4db: V379 = AND V378 V377
0x4de: V380 = M[S1]
0x4df: V381 = AND V380 V376
0x4e2: V382 = OR V379 V381
0x4e4: M[S1] = V382
0x4ed: V383 = ADD V355 V354
0x4f1: V384 = 0x40
0x4f3: V385 = M[0x40]
0x4f6: V386 = SUB V383 V385
0x4f8: V387 = SHA3 V385 V386
0x4f9: V388 = 0x0
0x4fc: V389 = 0x0
0x4fe: V390 = NOT 0x0
0x4ff: V391 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V387
0x501: S[0x0] = V391
---
Entry stack: [V11, 0x187, V106, V348, V354, V354, V357, V355, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0x187, V106]

================================

Block 0x503
[0x503:0x505]
---
Predecessors: [0x417, 0x4cb]
Successors: [0x187]
---
0x503 JUMPDEST
0x504 POP
0x505 JUMP
---
0x503: JUMPDEST 
0x505: JUMP 0x187
---
Entry stack: [V11, 0x187, V106]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x506
[0x506:0x50f]
---
Predecessors: [0x195]
Successors: [0x19e]
---
0x506 JUMPDEST
0x507 PUSH1 0x0
0x509 PUSH1 0x2
0x50b SLOAD
0x50c SWAP1
0x50d POP
0x50e SWAP1
0x50f JUMP
---
0x506: JUMPDEST 
0x507: V392 = 0x0
0x509: V393 = 0x2
0x50b: V394 = S[0x2]
0x50f: JUMP 0x19e
---
Entry stack: [V11, 0x19e]
Stack pops: 1
Stack additions: [V394]
Exit stack: [V11, V394]

================================

Block 0x510
[0x510:0x522]
---
Predecessors: [0x1c8]
Successors: [0x523, 0x52e]
---
0x510 JUMPDEST
0x511 PUSH1 0x0
0x513 PUSH1 0x1
0x515 MUL
0x516 PUSH1 0x0
0x518 SLOAD
0x519 PUSH1 0x0
0x51b NOT
0x51c AND
0x51d EQ
0x51e ISZERO
0x51f PUSH2 0x52e
0x522 JUMPI
---
0x510: JUMPDEST 
0x511: V395 = 0x0
0x513: V396 = 0x1
0x515: V397 = MUL 0x1 0x0
0x516: V398 = 0x0
0x518: V399 = S[0x0]
0x519: V400 = 0x0
0x51b: V401 = NOT 0x0
0x51c: V402 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V399
0x51d: V403 = EQ V402 0x0
0x51e: V404 = ISZERO V403
0x51f: V405 = 0x52e
0x522: JUMPI 0x52e V404
---
Entry stack: [V11, 0x1eb, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1eb, V144]

================================

Block 0x523
[0x523:0x52d]
---
Predecessors: [0x510]
Successors: [0x52e]
---
0x523 DUP1
0x524 PUSH1 0x0
0x526 DUP2
0x527 PUSH1 0x0
0x529 NOT
0x52a AND
0x52b SWAP1
0x52c SSTORE
0x52d POP
---
0x524: V406 = 0x0
0x527: V407 = 0x0
0x529: V408 = NOT 0x0
0x52a: V409 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V144
0x52c: S[0x0] = V409
---
Entry stack: [V11, 0x1eb, V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1eb, V144]

================================

Block 0x52e
[0x52e:0x530]
---
Predecessors: [0x510, 0x523]
Successors: [0x1eb]
---
0x52e JUMPDEST
0x52f POP
0x530 JUMP
---
0x52e: JUMPDEST 
0x530: JUMP 0x1eb
---
Entry stack: [V11, 0x1eb, V144]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x531
[0x531:0x55c]
---
Predecessors: []
Successors: []
---
0x531 STOP
0x532 LOG1
0x533 PUSH6 0x627a7a723058
0x53a SHA3
0x53b SWAP10
0x53c MSTORE8
0x53d MISSING 0x5c
0x53e MISSING 0xb8
0x53f EXTCODECOPY
0x540 MISSING 0xf7
0x541 LOG0
0x542 MISSING 0x2b
0x543 PUSH23 0xd71642ab800aa51e05735db66bf93d0fe24c5bb3734c02
0x55b STOP
0x55c MISSING 0x29
---
0x531: STOP 
0x532: LOG S0 S1 S2
0x533: V410 = 0x627a7a723058
0x53a: V411 = SHA3 0x627a7a723058 S3
0x53c: M8[S13] = S4
0x53d: MISSING 0x5c
0x53e: MISSING 0xb8
0x53f: EXTCODECOPY S0 S1 S2 S3
0x540: MISSING 0xf7
0x541: LOG S0 S1
0x542: MISSING 0x2b
0x543: V412 = 0xd71642ab800aa51e05735db66bf93d0fe24c5bb3734c02
0x55b: STOP 
0x55c: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S5, S6, S7, S8, S9, S10, S11, S12, V411, 0xd71642ab800aa51e05735db66bf93d0fe24c5bb3734c02]
Exit stack: []

================================

Function 0:
Public function signature: 0x31fb67c2
Entry block: 0x7a
Exit block: 0x36b
Body: 0x7a, 0xd4, 0x1ed, 0x223, 0x227, 0x23b, 0x246, 0x260, 0x2a4, 0x2af, 0x2c9, 0x308, 0x318, 0x36b, 0x374, 0x376, 0x377

Function 1:
Public function signature: 0x52efea6e
Entry block: 0xd6
Exit block: 0x3d2
Body: 0xd6, 0xde, 0xe2, 0x37a, 0x3d2, 0x3d6

Function 2:
Public function signature: 0x61728f39
Entry block: 0xed
Exit block: 0x102
Body: 0xed, 0xf5, 0xf9, 0x102, 0x411

Function 3:
Public function signature: 0x7ccb13c4
Entry block: 0x120
Exit block: 0x187
Body: 0x120, 0x128, 0x12c, 0x187, 0x417, 0x42a, 0x43d, 0x448, 0x462, 0x4a6, 0x4b1, 0x4cb, 0x503

Function 4:
Public function signature: 0xf43fa805
Entry block: 0x189
Exit block: 0x19e
Body: 0x189, 0x191, 0x195, 0x19e, 0x506

Function 5:
Public function signature: 0xf4dafe71
Entry block: 0x1bc
Exit block: 0x1eb
Body: 0x1bc, 0x1c4, 0x1c8, 0x1eb, 0x510, 0x523, 0x52e

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

