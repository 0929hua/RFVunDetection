Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x6e]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3853682c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x6e
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3853682c
0x3b: V13 = EQ V11 0x3853682c
0x3c: V14 = 0x6e
0x3f: JUMPI 0x6e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x81]
---
0x40 DUP1
0x41 PUSH4 0x3fad9ae0
0x46 EQ
0x47 PUSH2 0x81
0x4a JUMPI
---
0x41: V15 = 0x3fad9ae0
0x46: V16 = EQ 0x3fad9ae0 V11
0x47: V17 = 0x81
0x4a: JUMPI 0x81 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x10b]
---
0x4b DUP1
0x4c PUSH4 0xbedf0f4a
0x51 EQ
0x52 PUSH2 0x10b
0x55 JUMPI
---
0x4c: V18 = 0xbedf0f4a
0x51: V19 = EQ 0xbedf0f4a V11
0x52: V20 = 0x10b
0x55: JUMPI 0x10b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x113]
---
0x56 DUP1
0x57 PUSH4 0xc76de3e9
0x5c EQ
0x5d PUSH2 0x113
0x60 JUMPI
---
0x57: V21 = 0xc76de3e9
0x5c: V22 = EQ 0xc76de3e9 V11
0x5d: V23 = 0x113
0x60: JUMPI 0x113 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x19d]
---
0x61 DUP1
0x62 PUSH4 0xed8df164
0x67 EQ
0x68 PUSH2 0x19d
0x6b JUMPI
---
0x62: V24 = 0xed8df164
0x67: V25 = EQ 0xed8df164 V11
0x68: V26 = 0x19d
0x6b: JUMPI 0x19d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x0, 0x61, 0x260, 0x35a, 0x45d, 0x4de]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e
[0x6e:0x80]
---
Predecessors: [0xd]
Successors: [0x1eb]
---
0x6e JUMPDEST
0x6f PUSH2 0x6c
0x72 PUSH1 0x4
0x74 DUP1
0x75 CALLDATALOAD
0x76 PUSH1 0x24
0x78 DUP2
0x79 ADD
0x7a SWAP2
0x7b ADD
0x7c CALLDATALOAD
0x7d PUSH2 0x1eb
0x80 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x6c
0x72: V28 = 0x4
0x75: V29 = CALLDATALOAD 0x4
0x76: V30 = 0x24
0x79: V31 = ADD V29 0x24
0x7b: V32 = ADD 0x4 V29
0x7c: V33 = CALLDATALOAD V32
0x7d: V34 = 0x1eb
0x80: JUMP 0x1eb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V31, V33]
Exit stack: [V11, 0x6c, V31, V33]

================================

Block 0x81
[0x81:0x88]
---
Predecessors: [0x40]
Successors: [0x89, 0x8d]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 DUP1
0x84 ISZERO
0x85 PUSH2 0x8d
0x88 JUMPI
---
0x81: JUMPDEST 
0x82: V35 = CALLVALUE
0x84: V36 = ISZERO V35
0x85: V37 = 0x8d
0x88: JUMPI 0x8d V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V35]
Exit stack: [V11, V35]

================================

Block 0x89
[0x89:0x8c]
---
Predecessors: [0x81]
Successors: []
---
0x89 PUSH1 0x0
0x8b DUP1
0x8c REVERT
---
0x89: V38 = 0x0
0x8c: REVERT 0x0 0x0
---
Entry stack: [V11, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V35]

================================

Block 0x8d
[0x8d:0x95]
---
Predecessors: [0x81]
Successors: [0x264]
---
0x8d JUMPDEST
0x8e POP
0x8f PUSH2 0x96
0x92 PUSH2 0x264
0x95 JUMP
---
0x8d: JUMPDEST 
0x8f: V39 = 0x96
0x92: V40 = 0x264
0x95: JUMP 0x264
---
Entry stack: [V11, V35]
Stack pops: 1
Stack additions: [0x96]
Exit stack: [V11, 0x96]

================================

Block 0x96
[0x96:0xb7]
---
Predecessors: [0x2ea]
Successors: [0xb8]
---
0x96 JUMPDEST
0x97 PUSH1 0x40
0x99 DUP1
0x9a MLOAD
0x9b PUSH1 0x20
0x9d DUP1
0x9e DUP3
0x9f MSTORE
0xa0 DUP4
0xa1 MLOAD
0xa2 DUP2
0xa3 DUP4
0xa4 ADD
0xa5 MSTORE
0xa6 DUP4
0xa7 MLOAD
0xa8 SWAP2
0xa9 SWAP3
0xaa DUP4
0xab SWAP3
0xac SWAP1
0xad DUP4
0xae ADD
0xaf SWAP2
0xb0 DUP6
0xb1 ADD
0xb2 SWAP1
0xb3 DUP1
0xb4 DUP4
0xb5 DUP4
0xb6 PUSH1 0x0
---
0x96: JUMPDEST 
0x97: V41 = 0x40
0x9a: V42 = M[0x40]
0x9b: V43 = 0x20
0x9f: M[V42] = 0x20
0xa1: V44 = M[V177]
0xa4: V45 = ADD V42 0x20
0xa5: M[V45] = V44
0xa7: V46 = M[V177]
0xae: V47 = ADD V42 0x40
0xb1: V48 = ADD V177 0x20
0xb6: V49 = 0x0
---
Entry stack: [V11, 0x96, V177]
Stack pops: 1
Stack additions: [S0, V42, V42, V47, V48, V46, V46, V47, V48, 0x0]
Exit stack: [V11, 0x96, V177, V42, V42, V47, V48, V46, V46, V47, V48, 0x0]

================================

Block 0xb8
[0xb8:0xc0]
---
Predecessors: [0x96, 0xc1]
Successors: [0xc1, 0xd0]
---
0xb8 JUMPDEST
0xb9 DUP4
0xba DUP2
0xbb LT
0xbc ISZERO
0xbd PUSH2 0xd0
0xc0 JUMPI
---
0xb8: JUMPDEST 
0xbb: V50 = LT S0 V46
0xbc: V51 = ISZERO V50
0xbd: V52 = 0xd0
0xc0: JUMPI 0xd0 V51
---
Entry stack: [V11, 0x96, V177, V42, V42, V47, V48, V46, V46, V47, V48, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x96, V177, V42, V42, V47, V48, V46, V46, V47, V48, S0]

================================

Block 0xc1
[0xc1:0xcf]
---
Predecessors: [0xb8]
Successors: [0xb8]
---
0xc1 DUP2
0xc2 DUP2
0xc3 ADD
0xc4 MLOAD
0xc5 DUP4
0xc6 DUP3
0xc7 ADD
0xc8 MSTORE
0xc9 PUSH1 0x20
0xcb ADD
0xcc PUSH2 0xb8
0xcf JUMP
---
0xc3: V53 = ADD S0 V48
0xc4: V54 = M[V53]
0xc7: V55 = ADD S0 V47
0xc8: M[V55] = V54
0xc9: V56 = 0x20
0xcb: V57 = ADD 0x20 S0
0xcc: V58 = 0xb8
0xcf: JUMP 0xb8
---
Entry stack: [V11, 0x96, V177, V42, V42, V47, V48, V46, V46, V47, V48, S0]
Stack pops: 3
Stack additions: [S2, S1, V57]
Exit stack: [V11, 0x96, V177, V42, V42, V47, V48, V46, V46, V47, V48, V57]

================================

Block 0xd0
[0xd0:0xe3]
---
Predecessors: [0xb8]
Successors: [0xe4, 0xfd]
---
0xd0 JUMPDEST
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 POP
0xd5 SWAP1
0xd6 POP
0xd7 SWAP1
0xd8 DUP2
0xd9 ADD
0xda SWAP1
0xdb PUSH1 0x1f
0xdd AND
0xde DUP1
0xdf ISZERO
0xe0 PUSH2 0xfd
0xe3 JUMPI
---
0xd0: JUMPDEST 
0xd9: V59 = ADD V46 V47
0xdb: V60 = 0x1f
0xdd: V61 = AND 0x1f V46
0xdf: V62 = ISZERO V61
0xe0: V63 = 0xfd
0xe3: JUMPI 0xfd V62
---
Entry stack: [V11, 0x96, V177, V42, V42, V47, V48, V46, V46, V47, V48, S0]
Stack pops: 7
Stack additions: [V59, V61]
Exit stack: [V11, 0x96, V177, V42, V42, V59, V61]

================================

Block 0xe4
[0xe4:0xfc]
---
Predecessors: [0xd0]
Successors: [0xfd]
---
0xe4 DUP1
0xe5 DUP3
0xe6 SUB
0xe7 DUP1
0xe8 MLOAD
0xe9 PUSH1 0x1
0xeb DUP4
0xec PUSH1 0x20
0xee SUB
0xef PUSH2 0x100
0xf2 EXP
0xf3 SUB
0xf4 NOT
0xf5 AND
0xf6 DUP2
0xf7 MSTORE
0xf8 PUSH1 0x20
0xfa ADD
0xfb SWAP2
0xfc POP
---
0xe6: V64 = SUB V59 V61
0xe8: V65 = M[V64]
0xe9: V66 = 0x1
0xec: V67 = 0x20
0xee: V68 = SUB 0x20 V61
0xef: V69 = 0x100
0xf2: V70 = EXP 0x100 V68
0xf3: V71 = SUB V70 0x1
0xf4: V72 = NOT V71
0xf5: V73 = AND V72 V65
0xf7: M[V64] = V73
0xf8: V74 = 0x20
0xfa: V75 = ADD 0x20 V64
---
Entry stack: [V11, 0x96, V177, V42, V42, V59, V61]
Stack pops: 2
Stack additions: [V75, S0]
Exit stack: [V11, 0x96, V177, V42, V42, V75, V61]

================================

Block 0xfd
[0xfd:0x10a]
---
Predecessors: [0xd0, 0xe4]
Successors: []
---
0xfd JUMPDEST
0xfe POP
0xff SWAP3
0x100 POP
0x101 POP
0x102 POP
0x103 PUSH1 0x40
0x105 MLOAD
0x106 DUP1
0x107 SWAP2
0x108 SUB
0x109 SWAP1
0x10a RETURN
---
0xfd: JUMPDEST 
0x103: V76 = 0x40
0x105: V77 = M[0x40]
0x108: V78 = SUB S1 V77
0x10a: RETURN V77 V78
---
Entry stack: [V11, 0x96, V177, V42, V42, S1, V61]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x96]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x4b]
Successors: [0x2f2]
---
0x10b JUMPDEST
0x10c PUSH2 0x6c
0x10f PUSH2 0x2f2
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V79 = 0x6c
0x10f: V80 = 0x2f2
0x112: JUMP 0x2f2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x113
[0x113:0x19c]
---
Predecessors: [0x56]
Successors: [0x35d]
---
0x113 JUMPDEST
0x114 PUSH1 0x40
0x116 DUP1
0x117 MLOAD
0x118 PUSH1 0x20
0x11a PUSH1 0x4
0x11c DUP1
0x11d CALLDATALOAD
0x11e DUP1
0x11f DUP3
0x120 ADD
0x121 CALLDATALOAD
0x122 PUSH1 0x1f
0x124 DUP2
0x125 ADD
0x126 DUP5
0x127 SWAP1
0x128 DIV
0x129 DUP5
0x12a MUL
0x12b DUP6
0x12c ADD
0x12d DUP5
0x12e ADD
0x12f SWAP1
0x130 SWAP6
0x131 MSTORE
0x132 DUP5
0x133 DUP5
0x134 MSTORE
0x135 PUSH2 0x6c
0x138 SWAP5
0x139 CALLDATASIZE
0x13a SWAP5
0x13b SWAP3
0x13c SWAP4
0x13d PUSH1 0x24
0x13f SWAP4
0x140 SWAP3
0x141 DUP5
0x142 ADD
0x143 SWAP2
0x144 SWAP1
0x145 DUP2
0x146 SWAP1
0x147 DUP5
0x148 ADD
0x149 DUP4
0x14a DUP3
0x14b DUP1
0x14c DUP3
0x14d DUP5
0x14e CALLDATACOPY
0x14f POP
0x150 POP
0x151 PUSH1 0x40
0x153 DUP1
0x154 MLOAD
0x155 PUSH1 0x20
0x157 PUSH1 0x1f
0x159 DUP10
0x15a CALLDATALOAD
0x15b DUP12
0x15c ADD
0x15d DUP1
0x15e CALLDATALOAD
0x15f SWAP2
0x160 DUP3
0x161 ADD
0x162 DUP4
0x163 SWAP1
0x164 DIV
0x165 DUP4
0x166 MUL
0x167 DUP5
0x168 ADD
0x169 DUP4
0x16a ADD
0x16b SWAP1
0x16c SWAP5
0x16d MSTORE
0x16e DUP1
0x16f DUP4
0x170 MSTORE
0x171 SWAP8
0x172 SWAP11
0x173 SWAP10
0x174 SWAP9
0x175 DUP2
0x176 ADD
0x177 SWAP8
0x178 SWAP2
0x179 SWAP7
0x17a POP
0x17b SWAP2
0x17c DUP3
0x17d ADD
0x17e SWAP5
0x17f POP
0x180 SWAP3
0x181 POP
0x182 DUP3
0x183 SWAP2
0x184 POP
0x185 DUP5
0x186 ADD
0x187 DUP4
0x188 DUP3
0x189 DUP1
0x18a DUP3
0x18b DUP5
0x18c CALLDATACOPY
0x18d POP
0x18e SWAP5
0x18f SWAP8
0x190 POP
0x191 PUSH2 0x35d
0x194 SWAP7
0x195 POP
0x196 POP
0x197 POP
0x198 POP
0x199 POP
0x19a POP
0x19b POP
0x19c JUMP
---
0x113: JUMPDEST 
0x114: V81 = 0x40
0x117: V82 = M[0x40]
0x118: V83 = 0x20
0x11a: V84 = 0x4
0x11d: V85 = CALLDATALOAD 0x4
0x120: V86 = ADD 0x4 V85
0x121: V87 = CALLDATALOAD V86
0x122: V88 = 0x1f
0x125: V89 = ADD V87 0x1f
0x128: V90 = DIV V89 0x20
0x12a: V91 = MUL 0x20 V90
0x12c: V92 = ADD V82 V91
0x12e: V93 = ADD 0x20 V92
0x131: M[0x40] = V93
0x134: M[V82] = V87
0x135: V94 = 0x6c
0x139: V95 = CALLDATASIZE
0x13d: V96 = 0x24
0x142: V97 = ADD 0x24 V85
0x148: V98 = ADD V82 0x20
0x14e: CALLDATACOPY V98 V97 V87
0x151: V99 = 0x40
0x154: V100 = M[0x40]
0x155: V101 = 0x20
0x157: V102 = 0x1f
0x15a: V103 = CALLDATALOAD 0x24
0x15c: V104 = ADD 0x4 V103
0x15e: V105 = CALLDATALOAD V104
0x161: V106 = ADD V105 0x1f
0x164: V107 = DIV V106 0x20
0x166: V108 = MUL 0x20 V107
0x168: V109 = ADD V100 V108
0x16a: V110 = ADD 0x20 V109
0x16d: M[0x40] = V110
0x170: M[V100] = V105
0x176: V111 = ADD 0x20 0x24
0x17d: V112 = ADD 0x20 V104
0x186: V113 = ADD V100 0x20
0x18c: CALLDATACOPY V113 V112 V105
0x191: V114 = 0x35d
0x19c: JUMP 0x35d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V82, V100]
Exit stack: [V11, 0x6c, V82, V100]

================================

Block 0x19d
[0x19d:0x1ea]
---
Predecessors: [0x61]
Successors: [0x40f]
---
0x19d JUMPDEST
0x19e PUSH1 0x40
0x1a0 DUP1
0x1a1 MLOAD
0x1a2 PUSH1 0x20
0x1a4 PUSH1 0x4
0x1a6 DUP1
0x1a7 CALLDATALOAD
0x1a8 DUP1
0x1a9 DUP3
0x1aa ADD
0x1ab CALLDATALOAD
0x1ac PUSH1 0x1f
0x1ae DUP2
0x1af ADD
0x1b0 DUP5
0x1b1 SWAP1
0x1b2 DIV
0x1b3 DUP5
0x1b4 MUL
0x1b5 DUP6
0x1b6 ADD
0x1b7 DUP5
0x1b8 ADD
0x1b9 SWAP1
0x1ba SWAP6
0x1bb MSTORE
0x1bc DUP5
0x1bd DUP5
0x1be MSTORE
0x1bf PUSH2 0x6c
0x1c2 SWAP5
0x1c3 CALLDATASIZE
0x1c4 SWAP5
0x1c5 SWAP3
0x1c6 SWAP4
0x1c7 PUSH1 0x24
0x1c9 SWAP4
0x1ca SWAP3
0x1cb DUP5
0x1cc ADD
0x1cd SWAP2
0x1ce SWAP1
0x1cf DUP2
0x1d0 SWAP1
0x1d1 DUP5
0x1d2 ADD
0x1d3 DUP4
0x1d4 DUP3
0x1d5 DUP1
0x1d6 DUP3
0x1d7 DUP5
0x1d8 CALLDATACOPY
0x1d9 POP
0x1da SWAP5
0x1db SWAP8
0x1dc POP
0x1dd POP
0x1de SWAP4
0x1df CALLDATALOAD
0x1e0 SWAP5
0x1e1 POP
0x1e2 PUSH2 0x40f
0x1e5 SWAP4
0x1e6 POP
0x1e7 POP
0x1e8 POP
0x1e9 POP
0x1ea JUMP
---
0x19d: JUMPDEST 
0x19e: V115 = 0x40
0x1a1: V116 = M[0x40]
0x1a2: V117 = 0x20
0x1a4: V118 = 0x4
0x1a7: V119 = CALLDATALOAD 0x4
0x1aa: V120 = ADD 0x4 V119
0x1ab: V121 = CALLDATALOAD V120
0x1ac: V122 = 0x1f
0x1af: V123 = ADD V121 0x1f
0x1b2: V124 = DIV V123 0x20
0x1b4: V125 = MUL 0x20 V124
0x1b6: V126 = ADD V116 V125
0x1b8: V127 = ADD 0x20 V126
0x1bb: M[0x40] = V127
0x1be: M[V116] = V121
0x1bf: V128 = 0x6c
0x1c3: V129 = CALLDATASIZE
0x1c7: V130 = 0x24
0x1cc: V131 = ADD 0x24 V119
0x1d2: V132 = ADD V116 0x20
0x1d8: CALLDATACOPY V132 V131 V121
0x1df: V133 = CALLDATALOAD 0x24
0x1e2: V134 = 0x40f
0x1ea: JUMP 0x40f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V116, V133]
Exit stack: [V11, 0x6c, V116, V133]

================================

Block 0x1eb
[0x1eb:0x1f2]
---
Predecessors: [0x6e]
Successors: [0x1f3, 0x1f7]
---
0x1eb JUMPDEST
0x1ec CALLER
0x1ed ORIGIN
0x1ee EQ
0x1ef PUSH2 0x1f7
0x1f2 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V135 = CALLER
0x1ed: V136 = ORIGIN
0x1ee: V137 = EQ V136 V135
0x1ef: V138 = 0x1f7
0x1f2: JUMPI 0x1f7 V137
---
Entry stack: [V11, 0x6c, V31, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V31, V33]

================================

Block 0x1f3
[0x1f3:0x1f6]
---
Predecessors: [0x1eb]
Successors: []
---
0x1f3 PUSH1 0x0
0x1f5 DUP1
0x1f6 REVERT
---
0x1f3: V139 = 0x0
0x1f6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V31, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V31, V33]

================================

Block 0x1f7
[0x1f7:0x21f]
---
Predecessors: [0x1eb]
Successors: [0x220, 0x22c]
---
0x1f7 JUMPDEST
0x1f8 DUP2
0x1f9 DUP2
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd DUP1
0x1fe DUP4
0x1ff DUP4
0x200 DUP1
0x201 DUP3
0x202 DUP5
0x203 CALLDATACOPY
0x204 PUSH1 0x40
0x206 MLOAD
0x207 SWAP3
0x208 ADD
0x209 DUP3
0x20a SWAP1
0x20b SUB
0x20c SWAP1
0x20d SWAP2
0x20e SHA3
0x20f PUSH1 0x1
0x211 SLOAD
0x212 EQ
0x213 SWAP4
0x214 POP
0x215 POP
0x216 DUP3
0x217 ISZERO
0x218 SWAP2
0x219 POP
0x21a PUSH2 0x22c
0x21d SWAP1
0x21e POP
0x21f JUMPI
---
0x1f7: JUMPDEST 
0x1fa: V140 = 0x40
0x1fc: V141 = M[0x40]
0x203: CALLDATACOPY V141 V31 V33
0x204: V142 = 0x40
0x206: V143 = M[0x40]
0x208: V144 = ADD V141 V33
0x20b: V145 = SUB V144 V143
0x20e: V146 = SHA3 V143 V145
0x20f: V147 = 0x1
0x211: V148 = S[0x1]
0x212: V149 = EQ V148 V146
0x217: V150 = ISZERO V149
0x21a: V151 = 0x22c
0x21f: JUMPI 0x22c V150
---
Entry stack: [V11, 0x6c, V31, V33]
Stack pops: 2
Stack additions: [S1, S0, V149]
Exit stack: [V11, 0x6c, V31, V33, V149]

================================

Block 0x220
[0x220:0x22b]
---
Predecessors: [0x1f7]
Successors: [0x22c]
---
0x220 POP
0x221 PUSH8 0x58d15e176280000
0x22a CALLVALUE
0x22b GT
---
0x221: V152 = 0x58d15e176280000
0x22a: V153 = CALLVALUE
0x22b: V154 = GT V153 0x58d15e176280000
---
Entry stack: [V11, 0x6c, V31, V33, V149]
Stack pops: 1
Stack additions: [V154]
Exit stack: [V11, 0x6c, V31, V33, V154]

================================

Block 0x22c
[0x22c:0x231]
---
Predecessors: [0x1f7, 0x220]
Successors: [0x232, 0x260]
---
0x22c JUMPDEST
0x22d ISZERO
0x22e PUSH2 0x260
0x231 JUMPI
---
0x22c: JUMPDEST 
0x22d: V155 = ISZERO S0
0x22e: V156 = 0x260
0x231: JUMPI 0x260 V155
---
Entry stack: [V11, 0x6c, V31, V33, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, V31, V33]

================================

Block 0x232
[0x232:0x254]
---
Predecessors: [0x22c]
Successors: [0x255, 0x25e]
---
0x232 PUSH1 0x40
0x234 MLOAD
0x235 CALLER
0x236 SWAP1
0x237 ADDRESS
0x238 BALANCE
0x239 DUP1
0x23a ISZERO
0x23b PUSH2 0x8fc
0x23e MUL
0x23f SWAP2
0x240 PUSH1 0x0
0x242 DUP2
0x243 DUP2
0x244 DUP2
0x245 DUP6
0x246 DUP9
0x247 DUP9
0x248 CALL
0x249 SWAP4
0x24a POP
0x24b POP
0x24c POP
0x24d POP
0x24e ISZERO
0x24f DUP1
0x250 ISZERO
0x251 PUSH2 0x25e
0x254 JUMPI
---
0x232: V157 = 0x40
0x234: V158 = M[0x40]
0x235: V159 = CALLER
0x237: V160 = ADDRESS
0x238: V161 = BALANCE V160
0x23a: V162 = ISZERO V161
0x23b: V163 = 0x8fc
0x23e: V164 = MUL 0x8fc V162
0x240: V165 = 0x0
0x248: V166 = CALL V164 V159 V161 V158 0x0 V158 0x0
0x24e: V167 = ISZERO V166
0x250: V168 = ISZERO V167
0x251: V169 = 0x25e
0x254: JUMPI 0x25e V168
---
Entry stack: [V11, 0x6c, V31, V33]
Stack pops: 0
Stack additions: [V167]
Exit stack: [V11, 0x6c, V31, V33, V167]

================================

Block 0x255
[0x255:0x25d]
---
Predecessors: [0x232]
Successors: []
---
0x255 RETURNDATASIZE
0x256 PUSH1 0x0
0x258 DUP1
0x259 RETURNDATACOPY
0x25a RETURNDATASIZE
0x25b PUSH1 0x0
0x25d REVERT
---
0x255: V170 = RETURNDATASIZE
0x256: V171 = 0x0
0x259: RETURNDATACOPY 0x0 0x0 V170
0x25a: V172 = RETURNDATASIZE
0x25b: V173 = 0x0
0x25d: REVERT 0x0 V172
---
Entry stack: [V11, 0x6c, V31, V33, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V31, V33, V167]

================================

Block 0x25e
[0x25e:0x25f]
---
Predecessors: [0x232, 0x260, 0x45d, 0x4de]
Successors: [0x260]
---
0x25e JUMPDEST
0x25f POP
---
0x25e: JUMPDEST 
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x22c, 0x25e, 0x398]
Successors: [0x6c, 0x25e, 0x45d]
---
0x260 JUMPDEST
0x261 POP
0x262 POP
0x263 JUMP
---
0x260: JUMPDEST 
0x263: JUMP S2
---
Entry stack: [V11, 0x6c, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x6c, S4, S3]

================================

Block 0x264
[0x264:0x2a3]
---
Predecessors: [0x8d]
Successors: [0x2a4, 0x2ea]
---
0x264 JUMPDEST
0x265 PUSH1 0x0
0x267 DUP1
0x268 SLOAD
0x269 PUSH1 0x40
0x26b DUP1
0x26c MLOAD
0x26d PUSH1 0x20
0x26f PUSH1 0x2
0x271 PUSH1 0x1
0x273 DUP6
0x274 AND
0x275 ISZERO
0x276 PUSH2 0x100
0x279 MUL
0x27a PUSH1 0x0
0x27c NOT
0x27d ADD
0x27e SWAP1
0x27f SWAP5
0x280 AND
0x281 SWAP4
0x282 SWAP1
0x283 SWAP4
0x284 DIV
0x285 PUSH1 0x1f
0x287 DUP2
0x288 ADD
0x289 DUP5
0x28a SWAP1
0x28b DIV
0x28c DUP5
0x28d MUL
0x28e DUP3
0x28f ADD
0x290 DUP5
0x291 ADD
0x292 SWAP1
0x293 SWAP3
0x294 MSTORE
0x295 DUP2
0x296 DUP2
0x297 MSTORE
0x298 SWAP3
0x299 SWAP2
0x29a DUP4
0x29b ADD
0x29c DUP3
0x29d DUP3
0x29e DUP1
0x29f ISZERO
0x2a0 PUSH2 0x2ea
0x2a3 JUMPI
---
0x264: JUMPDEST 
0x265: V174 = 0x0
0x268: V175 = S[0x0]
0x269: V176 = 0x40
0x26c: V177 = M[0x40]
0x26d: V178 = 0x20
0x26f: V179 = 0x2
0x271: V180 = 0x1
0x274: V181 = AND V175 0x1
0x275: V182 = ISZERO V181
0x276: V183 = 0x100
0x279: V184 = MUL 0x100 V182
0x27a: V185 = 0x0
0x27c: V186 = NOT 0x0
0x27d: V187 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V184
0x280: V188 = AND V175 V187
0x284: V189 = DIV V188 0x2
0x285: V190 = 0x1f
0x288: V191 = ADD V189 0x1f
0x28b: V192 = DIV V191 0x20
0x28d: V193 = MUL 0x20 V192
0x28f: V194 = ADD V177 V193
0x291: V195 = ADD 0x20 V194
0x294: M[0x40] = V195
0x297: M[V177] = V189
0x29b: V196 = ADD V177 0x20
0x29f: V197 = ISZERO V189
0x2a0: V198 = 0x2ea
0x2a3: JUMPI 0x2ea V197
---
Entry stack: [V11, 0x96]
Stack pops: 0
Stack additions: [V177, 0x0, V189, V196, 0x0, V189]
Exit stack: [V11, 0x96, V177, 0x0, V189, V196, 0x0, V189]

================================

Block 0x2a4
[0x2a4:0x2ab]
---
Predecessors: [0x264]
Successors: [0x2ac, 0x2bf]
---
0x2a4 DUP1
0x2a5 PUSH1 0x1f
0x2a7 LT
0x2a8 PUSH2 0x2bf
0x2ab JUMPI
---
0x2a5: V199 = 0x1f
0x2a7: V200 = LT 0x1f V189
0x2a8: V201 = 0x2bf
0x2ab: JUMPI 0x2bf V200
---
Entry stack: [V11, 0x96, V177, 0x0, V189, V196, 0x0, V189]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x96, V177, 0x0, V189, V196, 0x0, V189]

================================

Block 0x2ac
[0x2ac:0x2be]
---
Predecessors: [0x2a4]
Successors: [0x2ea]
---
0x2ac PUSH2 0x100
0x2af DUP1
0x2b0 DUP4
0x2b1 SLOAD
0x2b2 DIV
0x2b3 MUL
0x2b4 DUP4
0x2b5 MSTORE
0x2b6 SWAP2
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba SWAP2
0x2bb PUSH2 0x2ea
0x2be JUMP
---
0x2ac: V202 = 0x100
0x2b1: V203 = S[0x0]
0x2b2: V204 = DIV V203 0x100
0x2b3: V205 = MUL V204 0x100
0x2b5: M[V196] = V205
0x2b7: V206 = 0x20
0x2b9: V207 = ADD 0x20 V196
0x2bb: V208 = 0x2ea
0x2be: JUMP 0x2ea
---
Entry stack: [V11, 0x96, V177, 0x0, V189, V196, 0x0, V189]
Stack pops: 3
Stack additions: [V207, S1, S0]
Exit stack: [V11, 0x96, V177, 0x0, V189, V207, 0x0, V189]

================================

Block 0x2bf
[0x2bf:0x2cc]
---
Predecessors: [0x2a4]
Successors: [0x2cd]
---
0x2bf JUMPDEST
0x2c0 DUP3
0x2c1 ADD
0x2c2 SWAP2
0x2c3 SWAP1
0x2c4 PUSH1 0x0
0x2c6 MSTORE
0x2c7 PUSH1 0x20
0x2c9 PUSH1 0x0
0x2cb SHA3
0x2cc SWAP1
---
0x2bf: JUMPDEST 
0x2c1: V209 = ADD V196 V189
0x2c4: V210 = 0x0
0x2c6: M[0x0] = 0x0
0x2c7: V211 = 0x20
0x2c9: V212 = 0x0
0x2cb: V213 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x96, V177, 0x0, V189, V196, 0x0, V189]
Stack pops: 3
Stack additions: [V209, V213, S2]
Exit stack: [V11, 0x96, V177, 0x0, V189, V209, V213, V196]

================================

Block 0x2cd
[0x2cd:0x2e0]
---
Predecessors: [0x2bf, 0x2cd]
Successors: [0x2cd, 0x2e1]
---
0x2cd JUMPDEST
0x2ce DUP2
0x2cf SLOAD
0x2d0 DUP2
0x2d1 MSTORE
0x2d2 SWAP1
0x2d3 PUSH1 0x1
0x2d5 ADD
0x2d6 SWAP1
0x2d7 PUSH1 0x20
0x2d9 ADD
0x2da DUP1
0x2db DUP4
0x2dc GT
0x2dd PUSH2 0x2cd
0x2e0 JUMPI
---
0x2cd: JUMPDEST 
0x2cf: V214 = S[S1]
0x2d1: M[S0] = V214
0x2d3: V215 = 0x1
0x2d5: V216 = ADD 0x1 S1
0x2d7: V217 = 0x20
0x2d9: V218 = ADD 0x20 S0
0x2dc: V219 = GT V209 V218
0x2dd: V220 = 0x2cd
0x2e0: JUMPI 0x2cd V219
---
Entry stack: [V11, 0x96, V177, 0x0, V189, V209, S1, S0]
Stack pops: 3
Stack additions: [S2, V216, V218]
Exit stack: [V11, 0x96, V177, 0x0, V189, V209, V216, V218]

================================

Block 0x2e1
[0x2e1:0x2e9]
---
Predecessors: [0x2cd]
Successors: [0x2ea]
---
0x2e1 DUP3
0x2e2 SWAP1
0x2e3 SUB
0x2e4 PUSH1 0x1f
0x2e6 AND
0x2e7 DUP3
0x2e8 ADD
0x2e9 SWAP2
---
0x2e3: V221 = SUB V218 V209
0x2e4: V222 = 0x1f
0x2e6: V223 = AND 0x1f V221
0x2e8: V224 = ADD V209 V223
---
Entry stack: [V11, 0x96, V177, 0x0, V189, V209, V216, V218]
Stack pops: 3
Stack additions: [V224, S1, S2]
Exit stack: [V11, 0x96, V177, 0x0, V189, V224, V216, V209]

================================

Block 0x2ea
[0x2ea:0x2f1]
---
Predecessors: [0x264, 0x2ac, 0x2e1]
Successors: [0x96]
---
0x2ea JUMPDEST
0x2eb POP
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 DUP2
0x2f1 JUMP
---
0x2ea: JUMPDEST 
0x2f1: JUMP 0x96
---
Entry stack: [V11, 0x96, V177, 0x0, V189, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x96, V177]

================================

Block 0x2f2
[0x2f2:0x328]
---
Predecessors: [0x10b]
Successors: [0x329, 0x32d]
---
0x2f2 JUMPDEST
0x2f3 PUSH1 0x40
0x2f5 DUP1
0x2f6 MLOAD
0x2f7 PUSH13 0x1000000000000000000000000
0x305 CALLER
0x306 MUL
0x307 DUP2
0x308 MSTORE
0x309 DUP2
0x30a MLOAD
0x30b SWAP1
0x30c DUP2
0x30d SWAP1
0x30e SUB
0x30f PUSH1 0x14
0x311 ADD
0x312 SWAP1
0x313 SHA3
0x314 PUSH1 0x0
0x316 SWAP1
0x317 DUP2
0x318 MSTORE
0x319 PUSH1 0x2
0x31b PUSH1 0x20
0x31d MSTORE
0x31e SHA3
0x31f SLOAD
0x320 PUSH1 0xff
0x322 AND
0x323 ISZERO
0x324 ISZERO
0x325 PUSH2 0x32d
0x328 JUMPI
---
0x2f2: JUMPDEST 
0x2f3: V225 = 0x40
0x2f6: V226 = M[0x40]
0x2f7: V227 = 0x1000000000000000000000000
0x305: V228 = CALLER
0x306: V229 = MUL V228 0x1000000000000000000000000
0x308: M[V226] = V229
0x30a: V230 = M[0x40]
0x30e: V231 = SUB V226 V230
0x30f: V232 = 0x14
0x311: V233 = ADD 0x14 V231
0x313: V234 = SHA3 V230 V233
0x314: V235 = 0x0
0x318: M[0x0] = V234
0x319: V236 = 0x2
0x31b: V237 = 0x20
0x31d: M[0x20] = 0x2
0x31e: V238 = SHA3 0x0 0x40
0x31f: V239 = S[V238]
0x320: V240 = 0xff
0x322: V241 = AND 0xff V239
0x323: V242 = ISZERO V241
0x324: V243 = ISZERO V242
0x325: V244 = 0x32d
0x328: JUMPI 0x32d V243
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x329
[0x329:0x32c]
---
Predecessors: [0x2f2]
Successors: []
---
0x329 PUSH1 0x0
0x32b DUP1
0x32c REVERT
---
0x329: V245 = 0x0
0x32c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x32d
[0x32d:0x350]
---
Predecessors: [0x2f2]
Successors: [0x351, 0x35a]
---
0x32d JUMPDEST
0x32e PUSH1 0x40
0x330 MLOAD
0x331 CALLER
0x332 SWAP1
0x333 ADDRESS
0x334 BALANCE
0x335 DUP1
0x336 ISZERO
0x337 PUSH2 0x8fc
0x33a MUL
0x33b SWAP2
0x33c PUSH1 0x0
0x33e DUP2
0x33f DUP2
0x340 DUP2
0x341 DUP6
0x342 DUP9
0x343 DUP9
0x344 CALL
0x345 SWAP4
0x346 POP
0x347 POP
0x348 POP
0x349 POP
0x34a ISZERO
0x34b DUP1
0x34c ISZERO
0x34d PUSH2 0x35a
0x350 JUMPI
---
0x32d: JUMPDEST 
0x32e: V246 = 0x40
0x330: V247 = M[0x40]
0x331: V248 = CALLER
0x333: V249 = ADDRESS
0x334: V250 = BALANCE V249
0x336: V251 = ISZERO V250
0x337: V252 = 0x8fc
0x33a: V253 = MUL 0x8fc V251
0x33c: V254 = 0x0
0x344: V255 = CALL V253 V248 V250 V247 0x0 V247 0x0
0x34a: V256 = ISZERO V255
0x34c: V257 = ISZERO V256
0x34d: V258 = 0x35a
0x350: JUMPI 0x35a V257
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: [V256]
Exit stack: [V11, 0x6c, V256]

================================

Block 0x351
[0x351:0x359]
---
Predecessors: [0x32d]
Successors: []
---
0x351 RETURNDATASIZE
0x352 PUSH1 0x0
0x354 DUP1
0x355 RETURNDATACOPY
0x356 RETURNDATASIZE
0x357 PUSH1 0x0
0x359 REVERT
---
0x351: V259 = RETURNDATASIZE
0x352: V260 = 0x0
0x355: RETURNDATACOPY 0x0 0x0 V259
0x356: V261 = RETURNDATASIZE
0x357: V262 = 0x0
0x359: REVERT 0x0 V261
---
Entry stack: [V11, 0x6c, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V256]

================================

Block 0x35a
[0x35a:0x35c]
---
Predecessors: [0x32d]
Successors: [0x6c]
---
0x35a JUMPDEST
0x35b POP
0x35c JUMP
---
0x35a: JUMPDEST 
0x35c: JUMP 0x6c
---
Entry stack: [V11, 0x6c, V256]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x35d
[0x35d:0x393]
---
Predecessors: [0x113]
Successors: [0x394, 0x398]
---
0x35d JUMPDEST
0x35e PUSH1 0x40
0x360 DUP1
0x361 MLOAD
0x362 PUSH13 0x1000000000000000000000000
0x370 CALLER
0x371 MUL
0x372 DUP2
0x373 MSTORE
0x374 DUP2
0x375 MLOAD
0x376 SWAP1
0x377 DUP2
0x378 SWAP1
0x379 SUB
0x37a PUSH1 0x14
0x37c ADD
0x37d SWAP1
0x37e SHA3
0x37f PUSH1 0x0
0x381 SWAP1
0x382 DUP2
0x383 MSTORE
0x384 PUSH1 0x2
0x386 PUSH1 0x20
0x388 MSTORE
0x389 SHA3
0x38a SLOAD
0x38b PUSH1 0xff
0x38d AND
0x38e ISZERO
0x38f ISZERO
0x390 PUSH2 0x398
0x393 JUMPI
---
0x35d: JUMPDEST 
0x35e: V263 = 0x40
0x361: V264 = M[0x40]
0x362: V265 = 0x1000000000000000000000000
0x370: V266 = CALLER
0x371: V267 = MUL V266 0x1000000000000000000000000
0x373: M[V264] = V267
0x375: V268 = M[0x40]
0x379: V269 = SUB V264 V268
0x37a: V270 = 0x14
0x37c: V271 = ADD 0x14 V269
0x37e: V272 = SHA3 V268 V271
0x37f: V273 = 0x0
0x383: M[0x0] = V272
0x384: V274 = 0x2
0x386: V275 = 0x20
0x388: M[0x20] = 0x2
0x389: V276 = SHA3 0x0 0x40
0x38a: V277 = S[V276]
0x38b: V278 = 0xff
0x38d: V279 = AND 0xff V277
0x38e: V280 = ISZERO V279
0x38f: V281 = ISZERO V280
0x390: V282 = 0x398
0x393: JUMPI 0x398 V281
---
Entry stack: [V11, 0x6c, V82, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V82, V100]

================================

Block 0x394
[0x394:0x397]
---
Predecessors: [0x35d]
Successors: []
---
0x394 PUSH1 0x0
0x396 DUP1
0x397 REVERT
---
0x394: V283 = 0x0
0x397: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V82, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V82, V100]

================================

Block 0x398
[0x398:0x3a1]
---
Predecessors: [0x35d]
Successors: [0x260, 0x3a2]
---
0x398 JUMPDEST
0x399 PUSH1 0x1
0x39b SLOAD
0x39c ISZERO
0x39d ISZERO
0x39e PUSH2 0x260
0x3a1 JUMPI
---
0x398: JUMPDEST 
0x399: V284 = 0x1
0x39b: V285 = S[0x1]
0x39c: V286 = ISZERO V285
0x39d: V287 = ISZERO V286
0x39e: V288 = 0x260
0x3a1: JUMPI 0x260 V287
---
Entry stack: [V11, 0x6c, V82, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V82, V100]

================================

Block 0x3a2
[0x3a2:0x3b1]
---
Predecessors: [0x398]
Successors: [0x3b2]
---
0x3a2 DUP1
0x3a3 PUSH1 0x40
0x3a5 MLOAD
0x3a6 DUP1
0x3a7 DUP3
0x3a8 DUP1
0x3a9 MLOAD
0x3aa SWAP1
0x3ab PUSH1 0x20
0x3ad ADD
0x3ae SWAP1
0x3af DUP1
0x3b0 DUP4
0x3b1 DUP4
---
0x3a3: V289 = 0x40
0x3a5: V290 = M[0x40]
0x3a9: V291 = M[V100]
0x3ab: V292 = 0x20
0x3ad: V293 = ADD 0x20 V100
---
Entry stack: [V11, 0x6c, V82, V100]
Stack pops: 1
Stack additions: [S0, S0, V290, V290, V293, V291, V291, V290, V293]
Exit stack: [V11, 0x6c, V82, V100, V100, V290, V290, V293, V291, V291, V290, V293]

================================

Block 0x3b2
[0x3b2:0x3ba]
---
Predecessors: [0x3a2, 0x3bb]
Successors: [0x3bb, 0x3d1]
---
0x3b2 JUMPDEST
0x3b3 PUSH1 0x20
0x3b5 DUP4
0x3b6 LT
0x3b7 PUSH2 0x3d1
0x3ba JUMPI
---
0x3b2: JUMPDEST 
0x3b3: V294 = 0x20
0x3b6: V295 = LT S2 0x20
0x3b7: V296 = 0x3d1
0x3ba: JUMPI 0x3d1 V295
---
Entry stack: [V11, 0x6c, V82, V100, V100, V290, V290, V293, V291, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V82, V100, V100, V290, V290, V293, V291, S2, S1, S0]

================================

Block 0x3bb
[0x3bb:0x3d0]
---
Predecessors: [0x3b2]
Successors: [0x3b2]
---
0x3bb DUP1
0x3bc MLOAD
0x3bd DUP3
0x3be MSTORE
0x3bf PUSH1 0x1f
0x3c1 NOT
0x3c2 SWAP1
0x3c3 SWAP3
0x3c4 ADD
0x3c5 SWAP2
0x3c6 PUSH1 0x20
0x3c8 SWAP2
0x3c9 DUP3
0x3ca ADD
0x3cb SWAP2
0x3cc ADD
0x3cd PUSH2 0x3b2
0x3d0 JUMP
---
0x3bc: V297 = M[S0]
0x3be: M[S1] = V297
0x3bf: V298 = 0x1f
0x3c1: V299 = NOT 0x1f
0x3c4: V300 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3c6: V301 = 0x20
0x3ca: V302 = ADD 0x20 S1
0x3cc: V303 = ADD 0x20 S0
0x3cd: V304 = 0x3b2
0x3d0: JUMP 0x3b2
---
Entry stack: [V11, 0x6c, V82, V100, V100, V290, V290, V293, V291, S2, S1, S0]
Stack pops: 3
Stack additions: [V300, V302, V303]
Exit stack: [V11, 0x6c, V82, V100, V100, V290, V290, V293, V291, V300, V302, V303]

================================

Block 0x3d1
[0x3d1:0x40e]
---
Predecessors: [0x3b2]
Successors: [0x464]
---
0x3d1 JUMPDEST
0x3d2 MLOAD
0x3d3 DUP2
0x3d4 MLOAD
0x3d5 PUSH1 0x20
0x3d7 SWAP4
0x3d8 DUP5
0x3d9 SUB
0x3da PUSH2 0x100
0x3dd EXP
0x3de PUSH1 0x0
0x3e0 NOT
0x3e1 ADD
0x3e2 DUP1
0x3e3 NOT
0x3e4 SWAP1
0x3e5 SWAP3
0x3e6 AND
0x3e7 SWAP2
0x3e8 AND
0x3e9 OR
0x3ea SWAP1
0x3eb MSTORE
0x3ec PUSH1 0x40
0x3ee MLOAD
0x3ef SWAP2
0x3f0 SWAP1
0x3f1 SWAP4
0x3f2 ADD
0x3f3 DUP2
0x3f4 SWAP1
0x3f5 SUB
0x3f6 SWAP1
0x3f7 SHA3
0x3f8 PUSH1 0x1
0x3fa SSTORE
0x3fb POP
0x3fc DUP5
0x3fd MLOAD
0x3fe PUSH2 0x25e
0x401 SWAP4
0x402 POP
0x403 PUSH1 0x0
0x405 SWAP3
0x406 POP
0x407 SWAP1
0x408 DUP6
0x409 ADD
0x40a SWAP1
0x40b PUSH2 0x464
0x40e JUMP
---
0x3d1: JUMPDEST 
0x3d2: V305 = M[S0]
0x3d4: V306 = M[S1]
0x3d5: V307 = 0x20
0x3d9: V308 = SUB 0x20 S2
0x3da: V309 = 0x100
0x3dd: V310 = EXP 0x100 V308
0x3de: V311 = 0x0
0x3e0: V312 = NOT 0x0
0x3e1: V313 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V310
0x3e3: V314 = NOT V313
0x3e6: V315 = AND V305 V314
0x3e8: V316 = AND V313 V306
0x3e9: V317 = OR V316 V315
0x3eb: M[S1] = V317
0x3ec: V318 = 0x40
0x3ee: V319 = M[0x40]
0x3f2: V320 = ADD V290 V291
0x3f5: V321 = SUB V320 V319
0x3f7: V322 = SHA3 V319 V321
0x3f8: V323 = 0x1
0x3fa: S[0x1] = V322
0x3fd: V324 = M[V82]
0x3fe: V325 = 0x25e
0x403: V326 = 0x0
0x409: V327 = ADD V82 0x20
0x40b: V328 = 0x464
0x40e: JUMP 0x464
---
Entry stack: [V11, 0x6c, V82, V100, V100, V290, V290, V293, V291, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x25e, 0x0, V327, V324]
Exit stack: [V11, 0x6c, V82, V100, 0x25e, 0x0, V327, V324]

================================

Block 0x40f
[0x40f:0x445]
---
Predecessors: [0x19d]
Successors: [0x446, 0x44a]
---
0x40f JUMPDEST
0x410 PUSH1 0x40
0x412 DUP1
0x413 MLOAD
0x414 PUSH13 0x1000000000000000000000000
0x422 CALLER
0x423 MUL
0x424 DUP2
0x425 MSTORE
0x426 DUP2
0x427 MLOAD
0x428 SWAP1
0x429 DUP2
0x42a SWAP1
0x42b SUB
0x42c PUSH1 0x14
0x42e ADD
0x42f SWAP1
0x430 SHA3
0x431 PUSH1 0x0
0x433 SWAP1
0x434 DUP2
0x435 MSTORE
0x436 PUSH1 0x2
0x438 PUSH1 0x20
0x43a MSTORE
0x43b SHA3
0x43c SLOAD
0x43d PUSH1 0xff
0x43f AND
0x440 ISZERO
0x441 ISZERO
0x442 PUSH2 0x44a
0x445 JUMPI
---
0x40f: JUMPDEST 
0x410: V329 = 0x40
0x413: V330 = M[0x40]
0x414: V331 = 0x1000000000000000000000000
0x422: V332 = CALLER
0x423: V333 = MUL V332 0x1000000000000000000000000
0x425: M[V330] = V333
0x427: V334 = M[0x40]
0x42b: V335 = SUB V330 V334
0x42c: V336 = 0x14
0x42e: V337 = ADD 0x14 V335
0x430: V338 = SHA3 V334 V337
0x431: V339 = 0x0
0x435: M[0x0] = V338
0x436: V340 = 0x2
0x438: V341 = 0x20
0x43a: M[0x20] = 0x2
0x43b: V342 = SHA3 0x0 0x40
0x43c: V343 = S[V342]
0x43d: V344 = 0xff
0x43f: V345 = AND 0xff V343
0x440: V346 = ISZERO V345
0x441: V347 = ISZERO V346
0x442: V348 = 0x44a
0x445: JUMPI 0x44a V347
---
Entry stack: [V11, 0x6c, V116, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V116, V133]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x40f]
Successors: []
---
0x446 PUSH1 0x0
0x448 DUP1
0x449 REVERT
---
0x446: V349 = 0x0
0x449: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V116, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V116, V133]

================================

Block 0x44a
[0x44a:0x45c]
---
Predecessors: [0x40f]
Successors: [0x464]
---
0x44a JUMPDEST
0x44b DUP2
0x44c MLOAD
0x44d PUSH2 0x45d
0x450 SWAP1
0x451 PUSH1 0x0
0x453 SWAP1
0x454 PUSH1 0x20
0x456 DUP6
0x457 ADD
0x458 SWAP1
0x459 PUSH2 0x464
0x45c JUMP
---
0x44a: JUMPDEST 
0x44c: V350 = M[V116]
0x44d: V351 = 0x45d
0x451: V352 = 0x0
0x454: V353 = 0x20
0x457: V354 = ADD V116 0x20
0x459: V355 = 0x464
0x45c: JUMP 0x464
---
Entry stack: [V11, 0x6c, V116, V133]
Stack pops: 2
Stack additions: [S1, S0, 0x45d, 0x0, V354, V350]
Exit stack: [V11, 0x6c, V116, V133, 0x45d, 0x0, V354, V350]

================================

Block 0x45d
[0x45d:0x463]
---
Predecessors: [0x260, 0x45d, 0x4de]
Successors: [0x6c, 0x25e, 0x45d]
---
0x45d JUMPDEST
0x45e POP
0x45f PUSH1 0x1
0x461 SSTORE
0x462 POP
0x463 JUMP
---
0x45d: JUMPDEST 
0x45f: V356 = 0x1
0x461: S[0x1] = S1
0x463: JUMP S3
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4]

================================

Block 0x464
[0x464:0x494]
---
Predecessors: [0x3d1, 0x44a]
Successors: [0x495, 0x4a5]
---
0x464 JUMPDEST
0x465 DUP3
0x466 DUP1
0x467 SLOAD
0x468 PUSH1 0x1
0x46a DUP2
0x46b PUSH1 0x1
0x46d AND
0x46e ISZERO
0x46f PUSH2 0x100
0x472 MUL
0x473 SUB
0x474 AND
0x475 PUSH1 0x2
0x477 SWAP1
0x478 DIV
0x479 SWAP1
0x47a PUSH1 0x0
0x47c MSTORE
0x47d PUSH1 0x20
0x47f PUSH1 0x0
0x481 SHA3
0x482 SWAP1
0x483 PUSH1 0x1f
0x485 ADD
0x486 PUSH1 0x20
0x488 SWAP1
0x489 DIV
0x48a DUP2
0x48b ADD
0x48c SWAP3
0x48d DUP3
0x48e PUSH1 0x1f
0x490 LT
0x491 PUSH2 0x4a5
0x494 JUMPI
---
0x464: JUMPDEST 
0x467: V357 = S[0x0]
0x468: V358 = 0x1
0x46b: V359 = 0x1
0x46d: V360 = AND 0x1 V357
0x46e: V361 = ISZERO V360
0x46f: V362 = 0x100
0x472: V363 = MUL 0x100 V361
0x473: V364 = SUB V363 0x1
0x474: V365 = AND V364 V357
0x475: V366 = 0x2
0x478: V367 = DIV V365 0x2
0x47a: V368 = 0x0
0x47c: M[0x0] = 0x0
0x47d: V369 = 0x20
0x47f: V370 = 0x0
0x481: V371 = SHA3 0x0 0x20
0x483: V372 = 0x1f
0x485: V373 = ADD 0x1f V367
0x486: V374 = 0x20
0x489: V375 = DIV V373 0x20
0x48b: V376 = ADD V371 V375
0x48e: V377 = 0x1f
0x490: V378 = LT 0x1f S0
0x491: V379 = 0x4a5
0x494: JUMPI 0x4a5 V378
---
Entry stack: [V11, 0x6c, S5, S4, {0x25e, 0x45d}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V376, S0, V371, S1]
Exit stack: [V11, 0x6c, S5, S4, {0x25e, 0x45d}, 0x0, V376, S0, V371, S1]

================================

Block 0x495
[0x495:0x4a4]
---
Predecessors: [0x464]
Successors: [0x4d2]
---
0x495 DUP1
0x496 MLOAD
0x497 PUSH1 0xff
0x499 NOT
0x49a AND
0x49b DUP4
0x49c DUP1
0x49d ADD
0x49e OR
0x49f DUP6
0x4a0 SSTORE
0x4a1 PUSH2 0x4d2
0x4a4 JUMP
---
0x496: V380 = M[S0]
0x497: V381 = 0xff
0x499: V382 = NOT 0xff
0x49a: V383 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V380
0x49d: V384 = ADD S2 S2
0x49e: V385 = OR V384 V383
0x4a0: S[0x0] = V385
0x4a1: V386 = 0x4d2
0x4a4: JUMP 0x4d2
---
Entry stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, V376, S2, V371, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, V376, S2, V371, S0]

================================

Block 0x4a5
[0x4a5:0x4b3]
---
Predecessors: [0x464]
Successors: [0x4b4, 0x4d2]
---
0x4a5 JUMPDEST
0x4a6 DUP3
0x4a7 DUP1
0x4a8 ADD
0x4a9 PUSH1 0x1
0x4ab ADD
0x4ac DUP6
0x4ad SSTORE
0x4ae DUP3
0x4af ISZERO
0x4b0 PUSH2 0x4d2
0x4b3 JUMPI
---
0x4a5: JUMPDEST 
0x4a8: V387 = ADD S2 S2
0x4a9: V388 = 0x1
0x4ab: V389 = ADD 0x1 V387
0x4ad: S[0x0] = V389
0x4af: V390 = ISZERO S2
0x4b0: V391 = 0x4d2
0x4b3: JUMPI 0x4d2 V390
---
Entry stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, V376, S2, V371, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, V376, S2, V371, S0]

================================

Block 0x4b4
[0x4b4:0x4b6]
---
Predecessors: [0x4a5]
Successors: [0x4b7]
---
0x4b4 SWAP2
0x4b5 DUP3
0x4b6 ADD
---
0x4b6: V392 = ADD S0 S2
---
Entry stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, V376, S2, V371, S0]
Stack pops: 3
Stack additions: [S0, S1, V392]
Exit stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, V376, S0, V371, V392]

================================

Block 0x4b7
[0x4b7:0x4bf]
---
Predecessors: [0x4b4, 0x4c0]
Successors: [0x4c0, 0x4d2]
---
0x4b7 JUMPDEST
0x4b8 DUP3
0x4b9 DUP2
0x4ba GT
0x4bb ISZERO
0x4bc PUSH2 0x4d2
0x4bf JUMPI
---
0x4b7: JUMPDEST 
0x4ba: V393 = GT V392 S2
0x4bb: V394 = ISZERO V393
0x4bc: V395 = 0x4d2
0x4bf: JUMPI 0x4d2 V394
---
Entry stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, V376, S2, S1, V392]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, V376, S2, S1, V392]

================================

Block 0x4c0
[0x4c0:0x4d1]
---
Predecessors: [0x4b7]
Successors: [0x4b7]
---
0x4c0 DUP3
0x4c1 MLOAD
0x4c2 DUP3
0x4c3 SSTORE
0x4c4 SWAP2
0x4c5 PUSH1 0x20
0x4c7 ADD
0x4c8 SWAP2
0x4c9 SWAP1
0x4ca PUSH1 0x1
0x4cc ADD
0x4cd SWAP1
0x4ce PUSH2 0x4b7
0x4d1 JUMP
---
0x4c1: V396 = M[S2]
0x4c3: S[S1] = V396
0x4c5: V397 = 0x20
0x4c7: V398 = ADD 0x20 S2
0x4ca: V399 = 0x1
0x4cc: V400 = ADD 0x1 S1
0x4ce: V401 = 0x4b7
0x4d1: JUMP 0x4b7
---
Entry stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, V376, S2, S1, V392]
Stack pops: 3
Stack additions: [V398, V400, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, V376, V398, V400, V392]

================================

Block 0x4d2
[0x4d2:0x4dd]
---
Predecessors: [0x495, 0x4a5, 0x4b7]
Successors: [0x4e2]
---
0x4d2 JUMPDEST
0x4d3 POP
0x4d4 PUSH2 0x4de
0x4d7 SWAP3
0x4d8 SWAP2
0x4d9 POP
0x4da PUSH2 0x4e2
0x4dd JUMP
---
0x4d2: JUMPDEST 
0x4d4: V402 = 0x4de
0x4da: V403 = 0x4e2
0x4dd: JUMP 0x4e2
---
Entry stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, V376, S2, S1, S0]
Stack pops: 4
Stack additions: [0x4de, S3, S1]
Exit stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, 0x4de, V376, S1]

================================

Block 0x4de
[0x4de:0x4e1]
---
Predecessors: [0x4e8, 0x4fc]
Successors: [0x6c, 0x25e, 0x45d, 0x4fc]
---
0x4de JUMPDEST
0x4df POP
0x4e0 SWAP1
0x4e1 JUMP
---
0x4de: JUMPDEST 
0x4e1: JUMP {0x6c, 0x25e, 0x45d, 0x4fc}
---
Entry stack: [V11, 0x6c, S7, S6, {0x6c, 0x25e, 0x45d}, S4, S3, {0x6c, 0x25e, 0x45d, 0x4fc}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x6c, S7, S6, {0x6c, 0x25e, 0x45d}, S4, S3, S1]

================================

Block 0x4e2
[0x4e2:0x4e7]
---
Predecessors: [0x4d2]
Successors: [0x4e8]
---
0x4e2 JUMPDEST
0x4e3 PUSH2 0x4fc
0x4e6 SWAP2
0x4e7 SWAP1
---
0x4e2: JUMPDEST 
0x4e3: V404 = 0x4fc
---
Entry stack: [V11, 0x6c, S6, S5, {0x25e, 0x45d}, 0x0, 0x4de, V376, S0]
Stack pops: 2
Stack additions: [0x4fc, S1, S0]
Exit stack: [V11, 0x6c, S6, S5, {0x25e, 0x45d}, 0x0, 0x4de, 0x4fc, V376, S0]

================================

Block 0x4e8
[0x4e8:0x4f0]
---
Predecessors: [0x4e2, 0x4f1]
Successors: [0x4de, 0x4f1]
---
0x4e8 JUMPDEST
0x4e9 DUP1
0x4ea DUP3
0x4eb GT
0x4ec ISZERO
0x4ed PUSH2 0x4de
0x4f0 JUMPI
---
0x4e8: JUMPDEST 
0x4eb: V405 = GT V376 S0
0x4ec: V406 = ISZERO V405
0x4ed: V407 = 0x4de
0x4f0: JUMPI 0x4de V406
---
Entry stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, 0x4de, 0x4fc, V376, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, 0x4de, 0x4fc, V376, S0]

================================

Block 0x4f1
[0x4f1:0x4fb]
---
Predecessors: [0x4e8]
Successors: [0x4e8]
---
0x4f1 PUSH1 0x0
0x4f3 DUP2
0x4f4 SSTORE
0x4f5 PUSH1 0x1
0x4f7 ADD
0x4f8 PUSH2 0x4e8
0x4fb JUMP
---
0x4f1: V408 = 0x0
0x4f4: S[S0] = 0x0
0x4f5: V409 = 0x1
0x4f7: V410 = ADD 0x1 S0
0x4f8: V411 = 0x4e8
0x4fb: JUMP 0x4e8
---
Entry stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, 0x4de, 0x4fc, V376, S0]
Stack pops: 1
Stack additions: [V410]
Exit stack: [V11, 0x6c, S7, S6, {0x25e, 0x45d}, 0x0, 0x4de, 0x4fc, V376, V410]

================================

Block 0x4fc
[0x4fc:0x4fe]
---
Predecessors: [0x4de]
Successors: [0x4de]
---
0x4fc JUMPDEST
0x4fd SWAP1
0x4fe JUMP
---
0x4fc: JUMPDEST 
0x4fe: JUMP S1
---
Entry stack: [V11, 0x6c, S5, S4, {0x6c, 0x25e, 0x45d}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x6c, S5, S4, {0x6c, 0x25e, 0x45d}, S2, S0]

================================

Block 0x4ff
[0x4ff:0x539]
---
Predecessors: []
Successors: []
---
0x4ff STOP
0x500 LOG1
0x501 PUSH6 0x627a7a723058
0x508 SHA3
0x509 XOR
0x50a MISSING 0x22
0x50b MISSING 0x1f
0x50c MISSING 0xdb
0x50d PUSH10 0x3053a190b6c928971eee
0x518 DUP3
0x519 DUP11
0x51a BALANCE
0x51b MISSING 0xf
0x51c MISSING 0xeb
0x51d MISSING 0xd2
0x51e PUSH27 0xa58fe4c36d1c38217ecb0029
---
0x4ff: STOP 
0x500: LOG S0 S1 S2
0x501: V412 = 0x627a7a723058
0x508: V413 = SHA3 0x627a7a723058 S3
0x509: V414 = XOR V413 S4
0x50a: MISSING 0x22
0x50b: MISSING 0x1f
0x50c: MISSING 0xdb
0x50d: V415 = 0x3053a190b6c928971eee
0x51a: V416 = BALANCE S8
0x51b: MISSING 0xf
0x51c: MISSING 0xeb
0x51d: MISSING 0xd2
0x51e: V417 = 0xa58fe4c36d1c38217ecb0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V414, V416, S1, 0x3053a190b6c928971eee, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0xa58fe4c36d1c38217ecb0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3853682c
Entry block: 0x6e
Exit block: 0x6c
Body: 0x6c, 0x6e, 0x1eb, 0x1f3, 0x1f7, 0x220, 0x22c, 0x232, 0x255, 0x25e, 0x260, 0x45d

Function 1:
Public function signature: 0x3fad9ae0
Entry block: 0x81
Exit block: 0xfd
Body: 0x81, 0x89, 0x8d, 0x96, 0xb8, 0xc1, 0xd0, 0xe4, 0xfd, 0x264, 0x2a4, 0x2ac, 0x2bf, 0x2cd, 0x2e1, 0x2ea

Function 2:
Public function signature: 0xbedf0f4a
Entry block: 0x10b
Exit block: 0x6c
Body: 0x6c, 0x10b, 0x2f2, 0x329, 0x32d, 0x351, 0x35a

Function 3:
Public function signature: 0xc76de3e9
Entry block: 0x113
Exit block: 0x6c
Body: 0x6c, 0x113, 0x25e, 0x260, 0x35d, 0x394, 0x398, 0x3a2, 0x3b2, 0x3bb, 0x3d1, 0x45d

Function 4:
Public function signature: 0xed8df164
Entry block: 0x19d
Exit block: 0x6c
Body: 0x6c, 0x19d, 0x25e, 0x260, 0x40f, 0x446, 0x44a, 0x45d

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

Function 6:
Private function
Entry block: 0x464
Exit block: 0x4de
Body: 0x464, 0x495, 0x4a5, 0x4b4, 0x4b7, 0x4c0, 0x4d2, 0x4de, 0x4e2, 0x4e8, 0x4f1, 0x4fc

