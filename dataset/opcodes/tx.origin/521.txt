Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4b]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xd493b9ac
0x3c EQ
0x3d PUSH2 0x4b
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xd493b9ac
0x3c: V13 = EQ 0xd493b9ac V11
0x3d: V14 = 0x4b
0x40: JUMPI 0x4b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x48]
---
Predecessors: [0x0, 0xd]
Successors: [0xd0]
---
0x41 JUMPDEST
0x42 PUSH2 0x49
0x45 PUSH2 0xd0
0x48 JUMP
---
0x41: JUMPDEST 
0x42: V15 = 0x49
0x45: V16 = 0xd0
0x48: JUMP 0xd0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x49]
Exit stack: [V11, 0x49]

================================

Block 0x49
[0x49:0x4a]
---
Predecessors: [0x2ef]
Successors: []
---
0x49 JUMPDEST
0x4a STOP
---
0x49: JUMPDEST 
0x4a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x52]
---
Predecessors: [0xd]
Successors: [0x53, 0x57]
---
0x4b JUMPDEST
0x4c CALLVALUE
0x4d DUP1
0x4e ISZERO
0x4f PUSH2 0x57
0x52 JUMPI
---
0x4b: JUMPDEST 
0x4c: V17 = CALLVALUE
0x4e: V18 = ISZERO V17
0x4f: V19 = 0x57
0x52: JUMPI 0x57 V18
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V17]
Exit stack: [V11, V17]

================================

Block 0x53
[0x53:0x56]
---
Predecessors: [0x4b]
Successors: []
---
0x53 PUSH1 0x0
0x55 DUP1
0x56 REVERT
---
0x53: V20 = 0x0
0x56: REVERT 0x0 0x0
---
Entry stack: [V11, V17]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V17]

================================

Block 0x57
[0x57:0xb5]
---
Predecessors: [0x4b]
Successors: [0x2f3]
---
0x57 JUMPDEST
0x58 POP
0x59 PUSH2 0xb6
0x5c PUSH1 0x4
0x5e DUP1
0x5f CALLDATASIZE
0x60 SUB
0x61 DUP2
0x62 ADD
0x63 SWAP1
0x64 DUP1
0x65 DUP1
0x66 CALLDATALOAD
0x67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c AND
0x7d SWAP1
0x7e PUSH1 0x20
0x80 ADD
0x81 SWAP1
0x82 SWAP3
0x83 SWAP2
0x84 SWAP1
0x85 DUP1
0x86 CALLDATALOAD
0x87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c AND
0x9d SWAP1
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP1
0xa2 SWAP3
0xa3 SWAP2
0xa4 SWAP1
0xa5 DUP1
0xa6 CALLDATALOAD
0xa7 SWAP1
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac SWAP3
0xad SWAP2
0xae SWAP1
0xaf POP
0xb0 POP
0xb1 POP
0xb2 PUSH2 0x2f3
0xb5 JUMP
---
0x57: JUMPDEST 
0x59: V21 = 0xb6
0x5c: V22 = 0x4
0x5f: V23 = CALLDATASIZE
0x60: V24 = SUB V23 0x4
0x62: V25 = ADD 0x4 V24
0x66: V26 = CALLDATALOAD 0x4
0x67: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x7e: V29 = 0x20
0x80: V30 = ADD 0x20 0x4
0x86: V31 = CALLDATALOAD 0x24
0x87: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x9e: V34 = 0x20
0xa0: V35 = ADD 0x20 0x24
0xa6: V36 = CALLDATALOAD 0x44
0xa8: V37 = 0x20
0xaa: V38 = ADD 0x20 0x44
0xb2: V39 = 0x2f3
0xb5: JUMP 0x2f3
---
Entry stack: [V11, V17]
Stack pops: 1
Stack additions: [0xb6, V28, V33, V36]
Exit stack: [V11, 0xb6, V28, V33, V36]

================================

Block 0xb6
[0xb6:0xcf]
---
Predecessors: [0x457]
Successors: []
---
0xb6 JUMPDEST
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba DUP1
0xbb DUP3
0xbc ISZERO
0xbd ISZERO
0xbe ISZERO
0xbf ISZERO
0xc0 DUP2
0xc1 MSTORE
0xc2 PUSH1 0x20
0xc4 ADD
0xc5 SWAP2
0xc6 POP
0xc7 POP
0xc8 PUSH1 0x40
0xca MLOAD
0xcb DUP1
0xcc SWAP2
0xcd SUB
0xce SWAP1
0xcf RETURN
---
0xb6: JUMPDEST 
0xb7: V40 = 0x40
0xb9: V41 = M[0x40]
0xbc: V42 = ISZERO V264
0xbd: V43 = ISZERO V42
0xbe: V44 = ISZERO V43
0xbf: V45 = ISZERO V44
0xc1: M[V41] = V45
0xc2: V46 = 0x20
0xc4: V47 = ADD 0x20 V41
0xc8: V48 = 0x40
0xca: V49 = M[0x40]
0xcd: V50 = SUB V47 V49
0xcf: RETURN V49 V50
---
Entry stack: [V11, V264]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xfa]
---
Predecessors: [0x41]
Successors: [0xfb, 0x2ef]
---
0xd0 JUMPDEST
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 PUSH8 0xde0b6b3a7640000
0xdd ADDRESS
0xde PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3 AND
0xf4 BALANCE
0xf5 GT
0xf6 ISZERO
0xf7 PUSH2 0x2ef
0xfa JUMPI
---
0xd0: JUMPDEST 
0xd1: V51 = 0x0
0xd4: V52 = 0xde0b6b3a7640000
0xdd: V53 = ADDRESS
0xde: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xf4: V56 = BALANCE V55
0xf5: V57 = GT V56 0xde0b6b3a7640000
0xf6: V58 = ISZERO V57
0xf7: V59 = 0x2ef
0xfa: JUMPI 0x2ef V58
---
Entry stack: [V11, 0x49]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x49, 0x0, 0x0]

================================

Block 0xfb
[0xfb:0x11b]
---
Predecessors: [0xd0]
Successors: [0x11c, 0x11d]
---
0xfb PUSH1 0xa
0xfd ADDRESS
0xfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113 AND
0x114 BALANCE
0x115 DUP2
0x116 ISZERO
0x117 ISZERO
0x118 PUSH2 0x11d
0x11b JUMPI
---
0xfb: V60 = 0xa
0xfd: V61 = ADDRESS
0xfe: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x113: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x114: V64 = BALANCE V63
0x116: V65 = ISZERO 0xa
0x117: V66 = ISZERO 0x0
0x118: V67 = 0x11d
0x11b: JUMPI 0x11d 0x1
---
Entry stack: [V11, 0x49, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xa, V64]
Exit stack: [V11, 0x49, 0x0, 0x0, 0xa, V64]

================================

Block 0x11c
[0x11c:0x11c]
---
Predecessors: [0xfb]
Successors: []
---
0x11c INVALID
---
0x11c: INVALID 
---
Entry stack: [V11, 0x49, 0x0, 0x0, 0xa, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49, 0x0, 0x0, 0xa, V64]

================================

Block 0x11d
[0x11d:0x12a]
---
Predecessors: [0xfb]
Successors: [0x12b, 0x12c]
---
0x11d JUMPDEST
0x11e DIV
0x11f SWAP2
0x120 POP
0x121 PUSH1 0x2
0x123 DUP3
0x124 DUP2
0x125 ISZERO
0x126 ISZERO
0x127 PUSH2 0x12c
0x12a JUMPI
---
0x11d: JUMPDEST 
0x11e: V68 = DIV V64 0xa
0x121: V69 = 0x2
0x125: V70 = ISZERO 0x2
0x126: V71 = ISZERO 0x0
0x127: V72 = 0x12c
0x12a: JUMPI 0x12c 0x1
---
Entry stack: [V11, 0x49, 0x0, 0x0, 0xa, V64]
Stack pops: 4
Stack additions: [V68, S2, 0x2, V68]
Exit stack: [V11, 0x49, V68, 0x0, 0x2, V68]

================================

Block 0x12b
[0x12b:0x12b]
---
Predecessors: [0x11d]
Successors: []
---
0x12b INVALID
---
0x12b: INVALID 
---
Entry stack: [V11, 0x49, V68, 0x0, 0x2, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49, V68, 0x0, 0x2, V68]

================================

Block 0x12c
[0x12c:0x192]
---
Predecessors: [0x11d]
Successors: [0x193, 0x19c]
---
0x12c JUMPDEST
0x12d DIV
0x12e PUSH1 0x4
0x130 DUP4
0x131 MUL
0x132 ADD
0x133 SWAP1
0x134 POP
0x135 PUSH1 0x3
0x137 PUSH1 0x0
0x139 SWAP1
0x13a SLOAD
0x13b SWAP1
0x13c PUSH2 0x100
0x13f EXP
0x140 SWAP1
0x141 DIV
0x142 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x157 AND
0x158 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16d AND
0x16e PUSH2 0x8fc
0x171 DUP4
0x172 SWAP1
0x173 DUP2
0x174 ISZERO
0x175 MUL
0x176 SWAP1
0x177 PUSH1 0x40
0x179 MLOAD
0x17a PUSH1 0x0
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 DUP4
0x181 SUB
0x182 DUP2
0x183 DUP6
0x184 DUP9
0x185 DUP9
0x186 CALL
0x187 SWAP4
0x188 POP
0x189 POP
0x18a POP
0x18b POP
0x18c ISZERO
0x18d DUP1
0x18e ISZERO
0x18f PUSH2 0x19c
0x192 JUMPI
---
0x12c: JUMPDEST 
0x12d: V73 = DIV V68 0x2
0x12e: V74 = 0x4
0x131: V75 = MUL V68 0x4
0x132: V76 = ADD V75 V73
0x135: V77 = 0x3
0x137: V78 = 0x0
0x13a: V79 = S[0x3]
0x13c: V80 = 0x100
0x13f: V81 = EXP 0x100 0x0
0x141: V82 = DIV V79 0x1
0x142: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x157: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x158: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x16e: V87 = 0x8fc
0x174: V88 = ISZERO V68
0x175: V89 = MUL V88 0x8fc
0x177: V90 = 0x40
0x179: V91 = M[0x40]
0x17a: V92 = 0x0
0x17c: V93 = 0x40
0x17e: V94 = M[0x40]
0x181: V95 = SUB V91 V94
0x186: V96 = CALL V89 V86 V68 V94 V95 V94 0x0
0x18c: V97 = ISZERO V96
0x18e: V98 = ISZERO V97
0x18f: V99 = 0x19c
0x192: JUMPI 0x19c V98
---
Entry stack: [V11, 0x49, V68, 0x0, 0x2, V68]
Stack pops: 4
Stack additions: [S3, V76, V97]
Exit stack: [V11, 0x49, V68, V76, V97]

================================

Block 0x193
[0x193:0x19b]
---
Predecessors: [0x12c]
Successors: []
---
0x193 RETURNDATASIZE
0x194 PUSH1 0x0
0x196 DUP1
0x197 RETURNDATACOPY
0x198 RETURNDATASIZE
0x199 PUSH1 0x0
0x19b REVERT
---
0x193: V100 = RETURNDATASIZE
0x194: V101 = 0x0
0x197: RETURNDATACOPY 0x0 0x0 V100
0x198: V102 = RETURNDATASIZE
0x199: V103 = 0x0
0x19b: REVERT 0x0 V102
---
Entry stack: [V11, 0x49, V68, V76, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49, V68, V76, V97]

================================

Block 0x19c
[0x19c:0x1fb]
---
Predecessors: [0x12c]
Successors: [0x1fc, 0x205]
---
0x19c JUMPDEST
0x19d POP
0x19e PUSH1 0x2
0x1a0 PUSH1 0x0
0x1a2 SWAP1
0x1a3 SLOAD
0x1a4 SWAP1
0x1a5 PUSH2 0x100
0x1a8 EXP
0x1a9 SWAP1
0x1aa DIV
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 AND
0x1d7 PUSH2 0x8fc
0x1da DUP4
0x1db SWAP1
0x1dc DUP2
0x1dd ISZERO
0x1de MUL
0x1df SWAP1
0x1e0 PUSH1 0x40
0x1e2 MLOAD
0x1e3 PUSH1 0x0
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 DUP1
0x1e9 DUP4
0x1ea SUB
0x1eb DUP2
0x1ec DUP6
0x1ed DUP9
0x1ee DUP9
0x1ef CALL
0x1f0 SWAP4
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 ISZERO
0x1f6 DUP1
0x1f7 ISZERO
0x1f8 PUSH2 0x205
0x1fb JUMPI
---
0x19c: JUMPDEST 
0x19e: V104 = 0x2
0x1a0: V105 = 0x0
0x1a3: V106 = S[0x2]
0x1a5: V107 = 0x100
0x1a8: V108 = EXP 0x100 0x0
0x1aa: V109 = DIV V106 0x1
0x1ab: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1c1: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1d7: V114 = 0x8fc
0x1dd: V115 = ISZERO V68
0x1de: V116 = MUL V115 0x8fc
0x1e0: V117 = 0x40
0x1e2: V118 = M[0x40]
0x1e3: V119 = 0x0
0x1e5: V120 = 0x40
0x1e7: V121 = M[0x40]
0x1ea: V122 = SUB V118 V121
0x1ef: V123 = CALL V116 V113 V68 V121 V122 V121 0x0
0x1f5: V124 = ISZERO V123
0x1f7: V125 = ISZERO V124
0x1f8: V126 = 0x205
0x1fb: JUMPI 0x205 V125
---
Entry stack: [V11, 0x49, V68, V76, V97]
Stack pops: 3
Stack additions: [S2, S1, V124]
Exit stack: [V11, 0x49, V68, V76, V124]

================================

Block 0x1fc
[0x1fc:0x204]
---
Predecessors: [0x19c]
Successors: []
---
0x1fc RETURNDATASIZE
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 RETURNDATACOPY
0x201 RETURNDATASIZE
0x202 PUSH1 0x0
0x204 REVERT
---
0x1fc: V127 = RETURNDATASIZE
0x1fd: V128 = 0x0
0x200: RETURNDATACOPY 0x0 0x0 V127
0x201: V129 = RETURNDATASIZE
0x202: V130 = 0x0
0x204: REVERT 0x0 V129
---
Entry stack: [V11, 0x49, V68, V76, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49, V68, V76, V124]

================================

Block 0x205
[0x205:0x264]
---
Predecessors: [0x19c]
Successors: [0x265, 0x26e]
---
0x205 JUMPDEST
0x206 POP
0x207 PUSH1 0x1
0x209 PUSH1 0x0
0x20b SWAP1
0x20c SLOAD
0x20d SWAP1
0x20e PUSH2 0x100
0x211 EXP
0x212 SWAP1
0x213 DIV
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23f AND
0x240 PUSH2 0x8fc
0x243 DUP3
0x244 SWAP1
0x245 DUP2
0x246 ISZERO
0x247 MUL
0x248 SWAP1
0x249 PUSH1 0x40
0x24b MLOAD
0x24c PUSH1 0x0
0x24e PUSH1 0x40
0x250 MLOAD
0x251 DUP1
0x252 DUP4
0x253 SUB
0x254 DUP2
0x255 DUP6
0x256 DUP9
0x257 DUP9
0x258 CALL
0x259 SWAP4
0x25a POP
0x25b POP
0x25c POP
0x25d POP
0x25e ISZERO
0x25f DUP1
0x260 ISZERO
0x261 PUSH2 0x26e
0x264 JUMPI
---
0x205: JUMPDEST 
0x207: V131 = 0x1
0x209: V132 = 0x0
0x20c: V133 = S[0x1]
0x20e: V134 = 0x100
0x211: V135 = EXP 0x100 0x0
0x213: V136 = DIV V133 0x1
0x214: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x22a: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x240: V141 = 0x8fc
0x246: V142 = ISZERO V76
0x247: V143 = MUL V142 0x8fc
0x249: V144 = 0x40
0x24b: V145 = M[0x40]
0x24c: V146 = 0x0
0x24e: V147 = 0x40
0x250: V148 = M[0x40]
0x253: V149 = SUB V145 V148
0x258: V150 = CALL V143 V140 V76 V148 V149 V148 0x0
0x25e: V151 = ISZERO V150
0x260: V152 = ISZERO V151
0x261: V153 = 0x26e
0x264: JUMPI 0x26e V152
---
Entry stack: [V11, 0x49, V68, V76, V124]
Stack pops: 2
Stack additions: [S1, V151]
Exit stack: [V11, 0x49, V68, V76, V151]

================================

Block 0x265
[0x265:0x26d]
---
Predecessors: [0x205]
Successors: []
---
0x265 RETURNDATASIZE
0x266 PUSH1 0x0
0x268 DUP1
0x269 RETURNDATACOPY
0x26a RETURNDATASIZE
0x26b PUSH1 0x0
0x26d REVERT
---
0x265: V154 = RETURNDATASIZE
0x266: V155 = 0x0
0x269: RETURNDATACOPY 0x0 0x0 V154
0x26a: V156 = RETURNDATASIZE
0x26b: V157 = 0x0
0x26d: REVERT 0x0 V156
---
Entry stack: [V11, 0x49, V68, V76, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49, V68, V76, V151]

================================

Block 0x26e
[0x26e:0x2e3]
---
Predecessors: [0x205]
Successors: [0x2e4, 0x2ed]
---
0x26e JUMPDEST
0x26f POP
0x270 PUSH1 0x0
0x272 DUP1
0x273 SWAP1
0x274 SLOAD
0x275 SWAP1
0x276 PUSH2 0x100
0x279 EXP
0x27a SWAP1
0x27b DIV
0x27c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x291 AND
0x292 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a7 AND
0x2a8 PUSH2 0x8fc
0x2ab ADDRESS
0x2ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c1 AND
0x2c2 BALANCE
0x2c3 SWAP1
0x2c4 DUP2
0x2c5 ISZERO
0x2c6 MUL
0x2c7 SWAP1
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb PUSH1 0x0
0x2cd PUSH1 0x40
0x2cf MLOAD
0x2d0 DUP1
0x2d1 DUP4
0x2d2 SUB
0x2d3 DUP2
0x2d4 DUP6
0x2d5 DUP9
0x2d6 DUP9
0x2d7 CALL
0x2d8 SWAP4
0x2d9 POP
0x2da POP
0x2db POP
0x2dc POP
0x2dd ISZERO
0x2de DUP1
0x2df ISZERO
0x2e0 PUSH2 0x2ed
0x2e3 JUMPI
---
0x26e: JUMPDEST 
0x270: V158 = 0x0
0x274: V159 = S[0x0]
0x276: V160 = 0x100
0x279: V161 = EXP 0x100 0x0
0x27b: V162 = DIV V159 0x1
0x27c: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x291: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x292: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2a8: V167 = 0x8fc
0x2ab: V168 = ADDRESS
0x2ac: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c1: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2c2: V171 = BALANCE V170
0x2c5: V172 = ISZERO V171
0x2c6: V173 = MUL V172 0x8fc
0x2c8: V174 = 0x40
0x2ca: V175 = M[0x40]
0x2cb: V176 = 0x0
0x2cd: V177 = 0x40
0x2cf: V178 = M[0x40]
0x2d2: V179 = SUB V175 V178
0x2d7: V180 = CALL V173 V166 V171 V178 V179 V178 0x0
0x2dd: V181 = ISZERO V180
0x2df: V182 = ISZERO V181
0x2e0: V183 = 0x2ed
0x2e3: JUMPI 0x2ed V182
---
Entry stack: [V11, 0x49, V68, V76, V151]
Stack pops: 1
Stack additions: [V181]
Exit stack: [V11, 0x49, V68, V76, V181]

================================

Block 0x2e4
[0x2e4:0x2ec]
---
Predecessors: [0x26e]
Successors: []
---
0x2e4 RETURNDATASIZE
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 RETURNDATACOPY
0x2e9 RETURNDATASIZE
0x2ea PUSH1 0x0
0x2ec REVERT
---
0x2e4: V184 = RETURNDATASIZE
0x2e5: V185 = 0x0
0x2e8: RETURNDATACOPY 0x0 0x0 V184
0x2e9: V186 = RETURNDATASIZE
0x2ea: V187 = 0x0
0x2ec: REVERT 0x0 V186
---
Entry stack: [V11, 0x49, V68, V76, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49, V68, V76, V181]

================================

Block 0x2ed
[0x2ed:0x2ee]
---
Predecessors: [0x26e]
Successors: [0x2ef]
---
0x2ed JUMPDEST
0x2ee POP
---
0x2ed: JUMPDEST 
---
Entry stack: [V11, 0x49, V68, V76, V181]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x49, V68, V76]

================================

Block 0x2ef
[0x2ef:0x2f2]
---
Predecessors: [0xd0, 0x2ed]
Successors: [0x49]
---
0x2ef JUMPDEST
0x2f0 POP
0x2f1 POP
0x2f2 JUMP
---
0x2ef: JUMPDEST 
0x2f2: JUMP 0x49
---
Entry stack: [V11, 0x49, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f3
[0x2f3:0x34b]
---
Predecessors: [0x57]
Successors: [0x34c, 0x350]
---
0x2f3 JUMPDEST
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 PUSH1 0x0
0x2f9 SWAP1
0x2fa SLOAD
0x2fb SWAP1
0x2fc PUSH2 0x100
0x2ff EXP
0x300 SWAP1
0x301 DIV
0x302 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x317 AND
0x318 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32d AND
0x32e CALLER
0x32f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x344 AND
0x345 EQ
0x346 ISZERO
0x347 ISZERO
0x348 PUSH2 0x350
0x34b JUMPI
---
0x2f3: JUMPDEST 
0x2f4: V188 = 0x0
0x2f7: V189 = 0x0
0x2fa: V190 = S[0x0]
0x2fc: V191 = 0x100
0x2ff: V192 = EXP 0x100 0x0
0x301: V193 = DIV V190 0x1
0x302: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x317: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x318: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x32e: V198 = CALLER
0x32f: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x344: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x345: V201 = EQ V200 V197
0x346: V202 = ISZERO V201
0x347: V203 = ISZERO V202
0x348: V204 = 0x350
0x34b: JUMPI 0x350 V203
---
Entry stack: [V11, 0xb6, V28, V33, V36]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0]

================================

Block 0x34c
[0x34c:0x34f]
---
Predecessors: [0x2f3]
Successors: []
---
0x34c PUSH1 0x0
0x34e DUP1
0x34f REVERT
---
0x34c: V205 = 0x0
0x34f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0]

================================

Block 0x350
[0x350:0x385]
---
Predecessors: [0x2f3]
Successors: [0x386, 0x38a]
---
0x350 JUMPDEST
0x351 ORIGIN
0x352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x367 AND
0x368 CALLER
0x369 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37e AND
0x37f EQ
0x380 ISZERO
0x381 ISZERO
0x382 PUSH2 0x38a
0x385 JUMPI
---
0x350: JUMPDEST 
0x351: V206 = ORIGIN
0x352: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x367: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x368: V209 = CALLER
0x369: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x37f: V212 = EQ V211 V208
0x380: V213 = ISZERO V212
0x381: V214 = ISZERO V213
0x382: V215 = 0x38a
0x385: JUMPI 0x38a V214
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0]

================================

Block 0x386
[0x386:0x389]
---
Predecessors: [0x350]
Successors: []
---
0x386 PUSH1 0x0
0x388 DUP1
0x389 REVERT
---
0x386: V216 = 0x0
0x389: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0]

================================

Block 0x38a
[0x38a:0x428]
---
Predecessors: [0x350]
Successors: [0x429, 0x42d]
---
0x38a JUMPDEST
0x38b DUP4
0x38c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a1 AND
0x3a2 PUSH4 0xa9059cbb
0x3a7 DUP5
0x3a8 DUP5
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac DUP4
0x3ad PUSH4 0xffffffff
0x3b2 AND
0x3b3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3d1 MUL
0x3d2 DUP2
0x3d3 MSTORE
0x3d4 PUSH1 0x4
0x3d6 ADD
0x3d7 DUP1
0x3d8 DUP4
0x3d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ee AND
0x3ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x404 AND
0x405 DUP2
0x406 MSTORE
0x407 PUSH1 0x20
0x409 ADD
0x40a DUP3
0x40b DUP2
0x40c MSTORE
0x40d PUSH1 0x20
0x40f ADD
0x410 SWAP3
0x411 POP
0x412 POP
0x413 POP
0x414 PUSH1 0x20
0x416 PUSH1 0x40
0x418 MLOAD
0x419 DUP1
0x41a DUP4
0x41b SUB
0x41c DUP2
0x41d PUSH1 0x0
0x41f DUP8
0x420 DUP1
0x421 EXTCODESIZE
0x422 ISZERO
0x423 DUP1
0x424 ISZERO
0x425 PUSH2 0x42d
0x428 JUMPI
---
0x38a: JUMPDEST 
0x38c: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x3a2: V219 = 0xa9059cbb
0x3a9: V220 = 0x40
0x3ab: V221 = M[0x40]
0x3ad: V222 = 0xffffffff
0x3b2: V223 = AND 0xffffffff 0xa9059cbb
0x3b3: V224 = 0x100000000000000000000000000000000000000000000000000000000
0x3d1: V225 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x3d3: M[V221] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3d4: V226 = 0x4
0x3d6: V227 = ADD 0x4 V221
0x3d9: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ee: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x3ef: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x404: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x406: M[V227] = V231
0x407: V232 = 0x20
0x409: V233 = ADD 0x20 V227
0x40c: M[V233] = V36
0x40d: V234 = 0x20
0x40f: V235 = ADD 0x20 V233
0x414: V236 = 0x20
0x416: V237 = 0x40
0x418: V238 = M[0x40]
0x41b: V239 = SUB V235 V238
0x41d: V240 = 0x0
0x421: V241 = EXTCODESIZE V218
0x422: V242 = ISZERO V241
0x424: V243 = ISZERO V242
0x425: V244 = 0x42d
0x428: JUMPI 0x42d V243
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V218, 0xa9059cbb, V235, 0x20, V238, V239, V238, 0x0, V218, V242]
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V218, 0xa9059cbb, V235, 0x20, V238, V239, V238, 0x0, V218, V242]

================================

Block 0x429
[0x429:0x42c]
---
Predecessors: [0x38a]
Successors: []
---
0x429 PUSH1 0x0
0x42b DUP1
0x42c REVERT
---
0x429: V245 = 0x0
0x42c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V218, 0xa9059cbb, V235, 0x20, V238, V239, V238, 0x0, V218, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V218, 0xa9059cbb, V235, 0x20, V238, V239, V238, 0x0, V218, V242]

================================

Block 0x42d
[0x42d:0x437]
---
Predecessors: [0x38a]
Successors: [0x438, 0x441]
---
0x42d JUMPDEST
0x42e POP
0x42f GAS
0x430 CALL
0x431 ISZERO
0x432 DUP1
0x433 ISZERO
0x434 PUSH2 0x441
0x437 JUMPI
---
0x42d: JUMPDEST 
0x42f: V246 = GAS
0x430: V247 = CALL V246 V218 0x0 V238 V239 V238 0x20
0x431: V248 = ISZERO V247
0x433: V249 = ISZERO V248
0x434: V250 = 0x441
0x437: JUMPI 0x441 V249
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V218, 0xa9059cbb, V235, 0x20, V238, V239, V238, 0x0, V218, V242]
Stack pops: 7
Stack additions: [V248]
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V218, 0xa9059cbb, V235, V248]

================================

Block 0x438
[0x438:0x440]
---
Predecessors: [0x42d]
Successors: []
---
0x438 RETURNDATASIZE
0x439 PUSH1 0x0
0x43b DUP1
0x43c RETURNDATACOPY
0x43d RETURNDATASIZE
0x43e PUSH1 0x0
0x440 REVERT
---
0x438: V251 = RETURNDATASIZE
0x439: V252 = 0x0
0x43c: RETURNDATACOPY 0x0 0x0 V251
0x43d: V253 = RETURNDATASIZE
0x43e: V254 = 0x0
0x440: REVERT 0x0 V253
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V218, 0xa9059cbb, V235, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V218, 0xa9059cbb, V235, V248]

================================

Block 0x441
[0x441:0x452]
---
Predecessors: [0x42d]
Successors: [0x453, 0x457]
---
0x441 JUMPDEST
0x442 POP
0x443 POP
0x444 POP
0x445 POP
0x446 PUSH1 0x40
0x448 MLOAD
0x449 RETURNDATASIZE
0x44a PUSH1 0x20
0x44c DUP2
0x44d LT
0x44e ISZERO
0x44f PUSH2 0x457
0x452 JUMPI
---
0x441: JUMPDEST 
0x446: V255 = 0x40
0x448: V256 = M[0x40]
0x449: V257 = RETURNDATASIZE
0x44a: V258 = 0x20
0x44d: V259 = LT V257 0x20
0x44e: V260 = ISZERO V259
0x44f: V261 = 0x457
0x452: JUMPI 0x457 V260
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V218, 0xa9059cbb, V235, V248]
Stack pops: 4
Stack additions: [V256, V257]
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V256, V257]

================================

Block 0x453
[0x453:0x456]
---
Predecessors: [0x441]
Successors: []
---
0x453 PUSH1 0x0
0x455 DUP1
0x456 REVERT
---
0x453: V262 = 0x0
0x456: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V256, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V256, V257]

================================

Block 0x457
[0x457:0x470]
---
Predecessors: [0x441]
Successors: [0xb6]
---
0x457 JUMPDEST
0x458 DUP2
0x459 ADD
0x45a SWAP1
0x45b DUP1
0x45c DUP1
0x45d MLOAD
0x45e SWAP1
0x45f PUSH1 0x20
0x461 ADD
0x462 SWAP1
0x463 SWAP3
0x464 SWAP2
0x465 SWAP1
0x466 POP
0x467 POP
0x468 POP
0x469 SWAP1
0x46a POP
0x46b SWAP4
0x46c SWAP3
0x46d POP
0x46e POP
0x46f POP
0x470 JUMP
---
0x457: JUMPDEST 
0x459: V263 = ADD V256 V257
0x45d: V264 = M[V256]
0x45f: V265 = 0x20
0x461: V266 = ADD 0x20 V256
0x470: JUMP 0xb6
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V256, V257]
Stack pops: 7
Stack additions: [V264]
Exit stack: [V11, V264]

================================

Block 0x471
[0x471:0x49f]
---
Predecessors: []
Successors: []
---
0x471 STOP
0x472 LOG1
0x473 PUSH6 0x627a7a723058
0x47a SHA3
0x47b MISSING 0x2d
0x47c MISSING 0x21
0x47d MISSING 0xb0
0x47e MISSING 0x2e
0x47f PUSH32 0x565770605009594cabd01592cedc174d937e603dd663b7a2fc87ef0029
---
0x471: STOP 
0x472: LOG S0 S1 S2
0x473: V267 = 0x627a7a723058
0x47a: V268 = SHA3 0x627a7a723058 S3
0x47b: MISSING 0x2d
0x47c: MISSING 0x21
0x47d: MISSING 0xb0
0x47e: MISSING 0x2e
0x47f: V269 = 0x565770605009594cabd01592cedc174d937e603dd663b7a2fc87ef0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V268, 0x565770605009594cabd01592cedc174d937e603dd663b7a2fc87ef0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xd493b9ac
Entry block: 0x4b
Exit block: 0xb6
Body: 0x4b, 0x53, 0x57, 0xb6, 0x2f3, 0x34c, 0x350, 0x386, 0x38a, 0x429, 0x42d, 0x438, 0x441, 0x453, 0x457

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x2e4
Body: 0x41, 0x49, 0xd0, 0xfb, 0x11c, 0x11d, 0x12b, 0x12c, 0x193, 0x19c, 0x1fc, 0x205, 0x265, 0x26e, 0x2e4, 0x2ed, 0x2ef

