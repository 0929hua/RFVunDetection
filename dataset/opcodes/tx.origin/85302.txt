Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x77
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x77
0xa: JUMPI 0x77 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x79]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x19990092
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x79
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x19990092
0x1a: V12 = EQ V10 0x19990092
0x1b: V13 = 0x79
0x1e: JUMPI 0x79 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xa1]
---
0x1f DUP1
0x20 PUSH4 0x3cc86b80
0x25 EQ
0x26 PUSH2 0xa1
0x29 JUMPI
---
0x20: V14 = 0x3cc86b80
0x25: V15 = EQ 0x3cc86b80 V10
0x26: V16 = 0xa1
0x29: JUMPI 0xa1 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xe7]
---
0x2a DUP1
0x2b PUSH4 0x6de00927
0x30 EQ
0x31 PUSH2 0xe7
0x34 JUMPI
---
0x2b: V17 = 0x6de00927
0x30: V18 = EQ 0x6de00927 V10
0x31: V19 = 0xe7
0x34: JUMPI 0xe7 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x132]
---
0x35 DUP1
0x36 PUSH4 0x7281854d
0x3b EQ
0x3c PUSH2 0x132
0x3f JUMPI
---
0x36: V20 = 0x7281854d
0x3b: V21 = EQ 0x7281854d V10
0x3c: V22 = 0x132
0x3f: JUMPI 0x132 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x154]
---
0x40 DUP1
0x41 PUSH4 0x755f99c2
0x46 EQ
0x47 PUSH2 0x154
0x4a JUMPI
---
0x41: V23 = 0x755f99c2
0x46: V24 = EQ 0x755f99c2 V10
0x47: V25 = 0x154
0x4a: JUMPI 0x154 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1be]
---
0x4b DUP1
0x4c PUSH4 0x769dc523
0x51 EQ
0x52 PUSH2 0x1be
0x55 JUMPI
---
0x4c: V26 = 0x769dc523
0x51: V27 = EQ 0x769dc523 V10
0x52: V28 = 0x1be
0x55: JUMPI 0x1be V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x202]
---
0x56 DUP1
0x57 PUSH4 0x797fdd7b
0x5c EQ
0x5d PUSH2 0x202
0x60 JUMPI
---
0x57: V29 = 0x797fdd7b
0x5c: V30 = EQ 0x797fdd7b V10
0x5d: V31 = 0x202
0x60: JUMPI 0x202 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x25c]
---
0x61 DUP1
0x62 PUSH4 0x85a1c950
0x67 EQ
0x68 PUSH2 0x25c
0x6b JUMPI
---
0x62: V32 = 0x85a1c950
0x67: V33 = EQ 0x85a1c950 V10
0x68: V34 = 0x25c
0x6b: JUMPI 0x25c V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x285]
---
0x6c DUP1
0x6d PUSH4 0x8a4c4527
0x72 EQ
0x73 PUSH2 0x285
0x76 JUMPI
---
0x6d: V35 = 0x8a4c4527
0x72: V36 = EQ 0x8a4c4527 V10
0x73: V37 = 0x285
0x76: JUMPI 0x285 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0xe3, 0x1bb, 0x317, 0x431]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V10, 0x77, V207, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x77, V207, S0]

================================

Block 0x79
[0x79:0x9b]
---
Predecessors: [0xb]
Successors: [0x9c]
---
0x79 JUMPDEST
0x7a PUSH2 0x2ce
0x7d PUSH1 0x4
0x7f CALLDATALOAD
0x80 PUSH1 0x1
0x82 PUSH1 0xa0
0x84 PUSH1 0x2
0x86 EXP
0x87 SUB
0x88 DUP2
0x89 AND
0x8a PUSH1 0x0
0x8c SWAP1
0x8d DUP2
0x8e MSTORE
0x8f PUSH1 0x2
0x91 PUSH1 0x20
0x93 MSTORE
0x94 PUSH1 0x40
0x96 SWAP1
0x97 SHA3
0x98 SLOAD
0x99 PUSH1 0xff
0x9b AND
---
0x79: JUMPDEST 
0x7a: V38 = 0x2ce
0x7d: V39 = 0x4
0x7f: V40 = CALLDATALOAD 0x4
0x80: V41 = 0x1
0x82: V42 = 0xa0
0x84: V43 = 0x2
0x86: V44 = EXP 0x2 0xa0
0x87: V45 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89: V46 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V47 = 0x0
0x8e: M[0x0] = V46
0x8f: V48 = 0x2
0x91: V49 = 0x20
0x93: M[0x20] = 0x2
0x94: V50 = 0x40
0x97: V51 = SHA3 0x0 0x40
0x98: V52 = S[V51]
0x99: V53 = 0xff
0x9b: V54 = AND 0xff V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2ce, V40, V54]
Exit stack: [V10, 0x2ce, V40, V54]

================================

Block 0x9c
[0x9c:0xa0]
---
Predecessors: [0x79, 0x132]
Successors: [0x2ce]
---
0x9c JUMPDEST
0x9d SWAP2
0x9e SWAP1
0x9f POP
0xa0 JUMP
---
0x9c: JUMPDEST 
0xa0: JUMP 0x2ce
---
Entry stack: [V10, 0x2ce, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0xa1
[0xa1:0xc2]
---
Predecessors: [0x1f]
Successors: [0xc3, 0xe3]
---
0xa1 JUMPDEST
0xa2 PUSH2 0x77
0xa5 PUSH1 0x4
0xa7 CALLDATALOAD
0xa8 PUSH1 0x24
0xaa CALLDATALOAD
0xab PUSH1 0x3
0xad SLOAD
0xae PUSH1 0x1
0xb0 PUSH1 0xa0
0xb2 PUSH1 0x2
0xb4 EXP
0xb5 SUB
0xb6 SWAP1
0xb7 DUP2
0xb8 AND
0xb9 CALLER
0xba SWAP1
0xbb SWAP2
0xbc AND
0xbd EQ
0xbe ISZERO
0xbf PUSH2 0xe3
0xc2 JUMPI
---
0xa1: JUMPDEST 
0xa2: V55 = 0x77
0xa5: V56 = 0x4
0xa7: V57 = CALLDATALOAD 0x4
0xa8: V58 = 0x24
0xaa: V59 = CALLDATALOAD 0x24
0xab: V60 = 0x3
0xad: V61 = S[0x3]
0xae: V62 = 0x1
0xb0: V63 = 0xa0
0xb2: V64 = 0x2
0xb4: V65 = EXP 0x2 0xa0
0xb5: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb8: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xb9: V68 = CALLER
0xbc: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0xbd: V70 = EQ V69 V67
0xbe: V71 = ISZERO V70
0xbf: V72 = 0xe3
0xc2: JUMPI 0xe3 V71
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x77, V57, V59]
Exit stack: [V10, 0x77, V57, V59]

================================

Block 0xc3
[0xc3:0xe2]
---
Predecessors: [0xa1]
Successors: [0xe3]
---
0xc3 PUSH1 0x40
0xc5 MLOAD
0xc6 PUSH1 0x1
0xc8 PUSH1 0xa0
0xca PUSH1 0x2
0xcc EXP
0xcd SUB
0xce DUP3
0xcf AND
0xd0 SWAP1
0xd1 PUSH1 0x0
0xd3 SWAP1
0xd4 DUP5
0xd5 SWAP1
0xd6 DUP3
0xd7 DUP2
0xd8 DUP2
0xd9 DUP2
0xda DUP6
0xdb DUP9
0xdc DUP4
0xdd CALL
0xde POP
0xdf POP
0xe0 POP
0xe1 POP
0xe2 POP
---
0xc3: V73 = 0x40
0xc5: V74 = M[0x40]
0xc6: V75 = 0x1
0xc8: V76 = 0xa0
0xca: V77 = 0x2
0xcc: V78 = EXP 0x2 0xa0
0xcd: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf: V80 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0xd1: V81 = 0x0
0xdd: V82 = CALL 0x0 V80 V57 V74 0x0 V74 0x0
---
Entry stack: [V10, 0x77, V57, V59]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x77, V57, V59]

================================

Block 0xe3
[0xe3:0xe6]
---
Predecessors: [0xa1, 0xc3]
Successors: [0x77]
---
0xe3 JUMPDEST
0xe4 POP
0xe5 POP
0xe6 JUMP
---
0xe3: JUMPDEST 
0xe6: JUMP 0x77
---
Entry stack: [V10, 0x77, V57, V59]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0xe7
[0xe7:0x119]
---
Predecessors: [0x2a]
Successors: [0x11a]
---
0xe7 JUMPDEST
0xe8 PUSH1 0xff
0xea PUSH1 0x4
0xec CALLDATALOAD
0xed AND
0xee PUSH1 0x0
0xf0 SWAP1
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x1
0xf5 PUSH1 0x20
0xf7 SWAP1
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x40
0xfc DUP1
0xfd DUP4
0xfe SHA3
0xff PUSH1 0x1
0x101 PUSH1 0xa0
0x103 PUSH1 0x2
0x105 EXP
0x106 SUB
0x107 PUSH1 0x24
0x109 CALLDATALOAD
0x10a AND
0x10b DUP5
0x10c MSTORE
0x10d PUSH1 0x2
0x10f ADD
0x110 SWAP1
0x111 SWAP2
0x112 MSTORE
0x113 SWAP1
0x114 SHA3
0x115 SLOAD
0x116 PUSH2 0xffff
0x119 AND
---
0xe7: JUMPDEST 
0xe8: V83 = 0xff
0xea: V84 = 0x4
0xec: V85 = CALLDATALOAD 0x4
0xed: V86 = AND V85 0xff
0xee: V87 = 0x0
0xf2: M[0x0] = V86
0xf3: V88 = 0x1
0xf5: V89 = 0x20
0xf9: M[0x20] = 0x1
0xfa: V90 = 0x40
0xfe: V91 = SHA3 0x0 0x40
0xff: V92 = 0x1
0x101: V93 = 0xa0
0x103: V94 = 0x2
0x105: V95 = EXP 0x2 0xa0
0x106: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x107: V97 = 0x24
0x109: V98 = CALLDATALOAD 0x24
0x10a: V99 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x10c: M[0x0] = V99
0x10d: V100 = 0x2
0x10f: V101 = ADD 0x2 V91
0x112: M[0x20] = V101
0x114: V102 = SHA3 0x0 0x40
0x115: V103 = S[V102]
0x116: V104 = 0xffff
0x119: V105 = AND 0xffff V103
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V105]
Exit stack: [V10, V105]

================================

Block 0x11a
[0x11a:0x131]
---
Predecessors: [0xe7, 0x285]
Successors: []
---
0x11a JUMPDEST
0x11b PUSH1 0x40
0x11d DUP1
0x11e MLOAD
0x11f PUSH2 0xffff
0x122 SWAP3
0x123 SWAP1
0x124 SWAP3
0x125 AND
0x126 DUP3
0x127 MSTORE
0x128 MLOAD
0x129 SWAP1
0x12a DUP2
0x12b SWAP1
0x12c SUB
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP1
0x131 RETURN
---
0x11a: JUMPDEST 
0x11b: V106 = 0x40
0x11e: V107 = M[0x40]
0x11f: V108 = 0xffff
0x125: V109 = AND 0xffff S0
0x127: M[V107] = V109
0x128: V110 = M[0x40]
0x12c: V111 = SUB V107 V110
0x12d: V112 = 0x20
0x12f: V113 = ADD 0x20 V111
0x131: RETURN V110 V113
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x132
[0x132:0x153]
---
Predecessors: [0x35]
Successors: [0x9c]
---
0x132 JUMPDEST
0x133 PUSH2 0x2ce
0x136 PUSH1 0x4
0x138 CALLDATALOAD
0x139 PUSH1 0xff
0x13b DUP2
0x13c AND
0x13d PUSH1 0x0
0x13f SWAP1
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x1
0x144 PUSH1 0x20
0x146 DUP2
0x147 SWAP1
0x148 MSTORE
0x149 PUSH1 0x40
0x14b SWAP1
0x14c SWAP2
0x14d SHA3
0x14e ADD
0x14f SLOAD
0x150 PUSH2 0x9c
0x153 JUMP
---
0x132: JUMPDEST 
0x133: V114 = 0x2ce
0x136: V115 = 0x4
0x138: V116 = CALLDATALOAD 0x4
0x139: V117 = 0xff
0x13c: V118 = AND V116 0xff
0x13d: V119 = 0x0
0x141: M[0x0] = V118
0x142: V120 = 0x1
0x144: V121 = 0x20
0x148: M[0x20] = 0x1
0x149: V122 = 0x40
0x14d: V123 = SHA3 0x0 0x40
0x14e: V124 = ADD V123 0x1
0x14f: V125 = S[V124]
0x150: V126 = 0x9c
0x153: JUMP 0x9c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2ce, V116, V125]
Exit stack: [V10, 0x2ce, V116, V125]

================================

Block 0x154
[0x154:0x173]
---
Predecessors: [0x40]
Successors: [0x174, 0x192]
---
0x154 JUMPDEST
0x155 PUSH2 0x77
0x158 PUSH1 0x4
0x15a CALLDATALOAD
0x15b PUSH1 0x3
0x15d SLOAD
0x15e PUSH1 0x1
0x160 PUSH1 0xa0
0x162 PUSH1 0x2
0x164 EXP
0x165 SUB
0x166 SWAP1
0x167 DUP2
0x168 AND
0x169 CALLER
0x16a SWAP1
0x16b SWAP2
0x16c AND
0x16d EQ
0x16e DUP1
0x16f ISZERO
0x170 PUSH2 0x192
0x173 JUMPI
---
0x154: JUMPDEST 
0x155: V127 = 0x77
0x158: V128 = 0x4
0x15a: V129 = CALLDATALOAD 0x4
0x15b: V130 = 0x3
0x15d: V131 = S[0x3]
0x15e: V132 = 0x1
0x160: V133 = 0xa0
0x162: V134 = 0x2
0x164: V135 = EXP 0x2 0xa0
0x165: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x168: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x169: V138 = CALLER
0x16c: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x16d: V140 = EQ V139 V137
0x16f: V141 = ISZERO V140
0x170: V142 = 0x192
0x173: JUMPI 0x192 V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x77, V129, V140]
Exit stack: [V10, 0x77, V129, V140]

================================

Block 0x174
[0x174:0x191]
---
Predecessors: [0x154]
Successors: [0x192]
---
0x174 POP
0x175 PUSH1 0x1
0x177 PUSH1 0xa0
0x179 PUSH1 0x2
0x17b EXP
0x17c SUB
0x17d DUP2
0x17e AND
0x17f PUSH1 0x0
0x181 SWAP1
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x2
0x186 PUSH1 0x20
0x188 MSTORE
0x189 PUSH1 0x40
0x18b SWAP1
0x18c SHA3
0x18d SLOAD
0x18e PUSH1 0xff
0x190 AND
0x191 ISZERO
---
0x175: V143 = 0x1
0x177: V144 = 0xa0
0x179: V145 = 0x2
0x17b: V146 = EXP 0x2 0xa0
0x17c: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17e: V148 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V149 = 0x0
0x183: M[0x0] = V148
0x184: V150 = 0x2
0x186: V151 = 0x20
0x188: M[0x20] = 0x2
0x189: V152 = 0x40
0x18c: V153 = SHA3 0x0 0x40
0x18d: V154 = S[V153]
0x18e: V155 = 0xff
0x190: V156 = AND 0xff V154
0x191: V157 = ISZERO V156
---
Entry stack: [V10, 0x77, V129, V140]
Stack pops: 2
Stack additions: [S1, V157]
Exit stack: [V10, 0x77, V129, V157]

================================

Block 0x192
[0x192:0x197]
---
Predecessors: [0x154, 0x174]
Successors: [0x198, 0x1bb]
---
0x192 JUMPDEST
0x193 ISZERO
0x194 PUSH2 0x1bb
0x197 JUMPI
---
0x192: JUMPDEST 
0x193: V158 = ISZERO S0
0x194: V159 = 0x1bb
0x197: JUMPI 0x1bb V158
---
Entry stack: [V10, 0x77, V129, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x77, V129]

================================

Block 0x198
[0x198:0x1ba]
---
Predecessors: [0x192]
Successors: [0x1bb]
---
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 DUP2
0x1a1 AND
0x1a2 PUSH1 0x0
0x1a4 SWAP1
0x1a5 DUP2
0x1a6 MSTORE
0x1a7 PUSH1 0x2
0x1a9 PUSH1 0x20
0x1ab MSTORE
0x1ac PUSH1 0x40
0x1ae SWAP1
0x1af SHA3
0x1b0 DUP1
0x1b1 SLOAD
0x1b2 PUSH1 0xff
0x1b4 NOT
0x1b5 AND
0x1b6 PUSH1 0x1
0x1b8 OR
0x1b9 SWAP1
0x1ba SSTORE
---
0x198: V160 = 0x1
0x19a: V161 = 0xa0
0x19c: V162 = 0x2
0x19e: V163 = EXP 0x2 0xa0
0x19f: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a1: V165 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x1a2: V166 = 0x0
0x1a6: M[0x0] = V165
0x1a7: V167 = 0x2
0x1a9: V168 = 0x20
0x1ab: M[0x20] = 0x2
0x1ac: V169 = 0x40
0x1af: V170 = SHA3 0x0 0x40
0x1b1: V171 = S[V170]
0x1b2: V172 = 0xff
0x1b4: V173 = NOT 0xff
0x1b5: V174 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V171
0x1b6: V175 = 0x1
0x1b8: V176 = OR 0x1 V174
0x1ba: S[V170] = V176
---
Entry stack: [V10, 0x77, V129]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x77, V129]

================================

Block 0x1bb
[0x1bb:0x1bd]
---
Predecessors: [0x192, 0x198, 0x311]
Successors: [0x77]
---
0x1bb JUMPDEST
0x1bc POP
0x1bd JUMP
---
0x1bb: JUMPDEST 
0x1bd: JUMP {0x0, 0x77}
---
Entry stack: [V10, 0x77, V207, S2, {0x0, 0x77}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x77, V207, S2]

================================

Block 0x1be
[0x1be:0x1c4]
---
Predecessors: [0x4b]
Successors: [0x1c5]
---
0x1be JUMPDEST
0x1bf PUSH2 0x2e0
0x1c2 PUSH1 0x4
0x1c4 CALLDATALOAD
---
0x1be: JUMPDEST 
0x1bf: V177 = 0x2e0
0x1c2: V178 = 0x4
0x1c4: V179 = CALLDATALOAD 0x4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2e0, V179]
Exit stack: [V10, 0x2e0, V179]

================================

Block 0x1c5
[0x1c5:0x1c8]
---
Predecessors: [0x1be, 0x27c, 0x437]
Successors: [0x1c9]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x0
0x1c8 DUP1
---
0x1c5: JUMPDEST 
0x1c6: V180 = 0x0
---
Entry stack: [V10, 0x77, V207, S4, {0x0, 0x77}, S2, {0x2e0, 0x30a, 0x444}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x77, V207, S4, {0x0, 0x77}, S2, {0x2e0, 0x30a, 0x444}, S0, 0x0, 0x0]

================================

Block 0x1c9
[0x1c9:0x1da]
---
Predecessors: [0x1c5, 0x302]
Successors: [0x1db, 0x2f7]
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x0
0x1cc SLOAD
0x1cd PUSH1 0xff
0x1cf SWAP1
0x1d0 DUP2
0x1d1 AND
0x1d2 SWAP1
0x1d3 DUP3
0x1d4 AND
0x1d5 LT
0x1d6 ISZERO
0x1d7 PUSH2 0x2f7
0x1da JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V181 = 0x0
0x1cc: V182 = S[0x0]
0x1cd: V183 = 0xff
0x1d1: V184 = AND 0xff V182
0x1d4: V185 = AND S0 0xff
0x1d5: V186 = LT V185 V184
0x1d6: V187 = ISZERO V186
0x1d7: V188 = 0x2f7
0x1da: JUMPI 0x2f7 V187
---
Entry stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, {0x2e0, 0x30a, 0x444}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, {0x2e0, 0x30a, 0x444}, S2, S1, S0]

================================

Block 0x1db
[0x1db:0x1fa]
---
Predecessors: [0x1c9]
Successors: [0x1fb, 0x302]
---
0x1db PUSH1 0xff
0x1dd DUP2
0x1de AND
0x1df PUSH1 0x0
0x1e1 SWAP1
0x1e2 DUP2
0x1e3 MSTORE
0x1e4 PUSH1 0x1
0x1e6 PUSH1 0x20
0x1e8 MSTORE
0x1e9 PUSH1 0x40
0x1eb SWAP1
0x1ec SHA3
0x1ed SLOAD
0x1ee PUSH1 0xe0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 MUL
0x1f4 DUP4
0x1f5 EQ
0x1f6 ISZERO
0x1f7 PUSH2 0x302
0x1fa JUMPI
---
0x1db: V189 = 0xff
0x1de: V190 = AND S0 0xff
0x1df: V191 = 0x0
0x1e3: M[0x0] = V190
0x1e4: V192 = 0x1
0x1e6: V193 = 0x20
0x1e8: M[0x20] = 0x1
0x1e9: V194 = 0x40
0x1ec: V195 = SHA3 0x0 0x40
0x1ed: V196 = S[V195]
0x1ee: V197 = 0xe0
0x1f0: V198 = 0x2
0x1f2: V199 = EXP 0x2 0xe0
0x1f3: V200 = MUL 0x100000000000000000000000000000000000000000000000000000000 V196
0x1f5: V201 = EQ S2 V200
0x1f6: V202 = ISZERO V201
0x1f7: V203 = 0x302
0x1fa: JUMPI 0x302 V202
---
Entry stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, {0x2e0, 0x30a, 0x444}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, {0x2e0, 0x30a, 0x444}, S2, S1, S0]

================================

Block 0x1fb
[0x1fb:0x201]
---
Predecessors: [0x1db]
Successors: [0x2fc]
---
0x1fb DUP1
0x1fc SWAP2
0x1fd POP
0x1fe PUSH2 0x2fc
0x201 JUMP
---
0x1fe: V204 = 0x2fc
0x201: JUMP 0x2fc
---
Entry stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, {0x2e0, 0x30a, 0x444}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, {0x2e0, 0x30a, 0x444}, S2, S0, S0]

================================

Block 0x202
[0x202:0x257]
---
Predecessors: [0x56]
Successors: [0x258, 0x437]
---
0x202 JUMPDEST
0x203 PUSH2 0x77
0x206 PUSH1 0x4
0x208 CALLDATALOAD
0x209 PUSH1 0x24
0x20b CALLDATALOAD
0x20c PUSH1 0x4
0x20e DUP1
0x20f SLOAD
0x210 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x225 NOT
0x226 SWAP1
0x227 DUP2
0x228 AND
0x229 ORIGIN
0x22a SWAP1
0x22b DUP2
0x22c OR
0x22d SWAP1
0x22e SWAP3
0x22f SSTORE
0x230 PUSH1 0x5
0x232 DUP1
0x233 SLOAD
0x234 SWAP1
0x235 SWAP2
0x236 AND
0x237 CALLER
0x238 OR
0x239 DUP2
0x23a SSTORE
0x23b PUSH1 0x6
0x23d SSTORE
0x23e PUSH1 0x3
0x240 SLOAD
0x241 PUSH1 0x0
0x243 SWAP2
0x244 DUP3
0x245 SWAP2
0x246 PUSH1 0x1
0x248 PUSH1 0xa0
0x24a PUSH1 0x2
0x24c EXP
0x24d SUB
0x24e SWAP1
0x24f DUP2
0x250 AND
0x251 SWAP2
0x252 AND
0x253 EQ
0x254 PUSH2 0x437
0x257 JUMPI
---
0x202: JUMPDEST 
0x203: V205 = 0x77
0x206: V206 = 0x4
0x208: V207 = CALLDATALOAD 0x4
0x209: V208 = 0x24
0x20b: V209 = CALLDATALOAD 0x24
0x20c: V210 = 0x4
0x20f: V211 = S[0x4]
0x210: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x225: V213 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x228: V214 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V211
0x229: V215 = ORIGIN
0x22c: V216 = OR V215 V214
0x22f: S[0x4] = V216
0x230: V217 = 0x5
0x233: V218 = S[0x5]
0x236: V219 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V218
0x237: V220 = CALLER
0x238: V221 = OR V220 V219
0x23a: S[0x5] = V221
0x23b: V222 = 0x6
0x23d: S[0x6] = 0x5
0x23e: V223 = 0x3
0x240: V224 = S[0x3]
0x241: V225 = 0x0
0x246: V226 = 0x1
0x248: V227 = 0xa0
0x24a: V228 = 0x2
0x24c: V229 = EXP 0x2 0xa0
0x24d: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x250: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x252: V232 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x253: V233 = EQ V232 V231
0x254: V234 = 0x437
0x257: JUMPI 0x437 V233
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x77, V207, V209, 0x0, 0x0]
Exit stack: [V10, 0x77, V207, V209, 0x0, 0x0]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x202]
Successors: [0x431]
---
0x258 PUSH2 0x431
0x25b JUMP
---
0x258: V235 = 0x431
0x25b: JUMP 0x431
---
Entry stack: [V10, 0x77, V207, V209, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x77, V207, V209, 0x0, 0x0]

================================

Block 0x25c
[0x25c:0x27b]
---
Predecessors: [0x61]
Successors: [0x27c, 0x311]
---
0x25c JUMPDEST
0x25d PUSH2 0x77
0x260 PUSH1 0x4
0x262 CALLDATALOAD
0x263 PUSH1 0x3
0x265 SLOAD
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e SWAP1
0x26f DUP2
0x270 AND
0x271 CALLER
0x272 SWAP1
0x273 SWAP2
0x274 AND
0x275 EQ
0x276 DUP1
0x277 ISZERO
0x278 PUSH2 0x311
0x27b JUMPI
---
0x25c: JUMPDEST 
0x25d: V236 = 0x77
0x260: V237 = 0x4
0x262: V238 = CALLDATALOAD 0x4
0x263: V239 = 0x3
0x265: V240 = S[0x3]
0x266: V241 = 0x1
0x268: V242 = 0xa0
0x26a: V243 = 0x2
0x26c: V244 = EXP 0x2 0xa0
0x26d: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x270: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x271: V247 = CALLER
0x274: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x275: V249 = EQ V248 V246
0x277: V250 = ISZERO V249
0x278: V251 = 0x311
0x27b: JUMPI 0x311 V250
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x77, V238, V249]
Exit stack: [V10, 0x77, V238, V249]

================================

Block 0x27c
[0x27c:0x284]
---
Predecessors: [0x25c]
Successors: [0x1c5]
---
0x27c POP
0x27d PUSH2 0x30a
0x280 DUP2
0x281 PUSH2 0x1c5
0x284 JUMP
---
0x27d: V252 = 0x30a
0x281: V253 = 0x1c5
0x284: JUMP 0x1c5
---
Entry stack: [V10, 0x77, V238, V249]
Stack pops: 2
Stack additions: [S1, 0x30a, S1]
Exit stack: [V10, 0x77, V238, 0x30a, V238]

================================

Block 0x285
[0x285:0x2cd]
---
Predecessors: [0x6c]
Successors: [0x11a]
---
0x285 JUMPDEST
0x286 PUSH1 0xff
0x288 PUSH1 0x44
0x28a CALLDATALOAD
0x28b AND
0x28c PUSH1 0x0
0x28e SWAP1
0x28f DUP2
0x290 MSTORE
0x291 PUSH1 0x1
0x293 PUSH1 0x20
0x295 SWAP1
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x40
0x29a DUP1
0x29b DUP4
0x29c SHA3
0x29d PUSH1 0x1
0x29f PUSH1 0xa0
0x2a1 PUSH1 0x2
0x2a3 EXP
0x2a4 SUB
0x2a5 PUSH1 0x4
0x2a7 CALLDATALOAD
0x2a8 DUP2
0x2a9 AND
0x2aa DUP6
0x2ab MSTORE
0x2ac PUSH1 0x3
0x2ae SWAP2
0x2af SWAP1
0x2b0 SWAP2
0x2b1 ADD
0x2b2 DUP4
0x2b3 MSTORE
0x2b4 DUP2
0x2b5 DUP5
0x2b6 SHA3
0x2b7 PUSH1 0x24
0x2b9 CALLDATALOAD
0x2ba SWAP2
0x2bb SWAP1
0x2bc SWAP2
0x2bd AND
0x2be DUP5
0x2bf MSTORE
0x2c0 SWAP1
0x2c1 SWAP2
0x2c2 MSTORE
0x2c3 SWAP1
0x2c4 SHA3
0x2c5 SLOAD
0x2c6 PUSH2 0xffff
0x2c9 AND
0x2ca PUSH2 0x11a
0x2cd JUMP
---
0x285: JUMPDEST 
0x286: V254 = 0xff
0x288: V255 = 0x44
0x28a: V256 = CALLDATALOAD 0x44
0x28b: V257 = AND V256 0xff
0x28c: V258 = 0x0
0x290: M[0x0] = V257
0x291: V259 = 0x1
0x293: V260 = 0x20
0x297: M[0x20] = 0x1
0x298: V261 = 0x40
0x29c: V262 = SHA3 0x0 0x40
0x29d: V263 = 0x1
0x29f: V264 = 0xa0
0x2a1: V265 = 0x2
0x2a3: V266 = EXP 0x2 0xa0
0x2a4: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a5: V268 = 0x4
0x2a7: V269 = CALLDATALOAD 0x4
0x2a9: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x2ab: M[0x0] = V270
0x2ac: V271 = 0x3
0x2b1: V272 = ADD 0x3 V262
0x2b3: M[0x20] = V272
0x2b6: V273 = SHA3 0x0 0x40
0x2b7: V274 = 0x24
0x2b9: V275 = CALLDATALOAD 0x24
0x2bd: V276 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: M[0x0] = V276
0x2c2: M[0x20] = V273
0x2c4: V277 = SHA3 0x0 0x40
0x2c5: V278 = S[V277]
0x2c6: V279 = 0xffff
0x2c9: V280 = AND 0xffff V278
0x2ca: V281 = 0x11a
0x2cd: JUMP 0x11a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V280]
Exit stack: [V10, V280]

================================

Block 0x2ce
[0x2ce:0x2df]
---
Predecessors: [0x9c]
Successors: []
---
0x2ce JUMPDEST
0x2cf PUSH1 0x40
0x2d1 DUP1
0x2d2 MLOAD
0x2d3 SWAP2
0x2d4 DUP3
0x2d5 MSTORE
0x2d6 MLOAD
0x2d7 SWAP1
0x2d8 DUP2
0x2d9 SWAP1
0x2da SUB
0x2db PUSH1 0x20
0x2dd ADD
0x2de SWAP1
0x2df RETURN
---
0x2ce: JUMPDEST 
0x2cf: V282 = 0x40
0x2d2: V283 = M[0x40]
0x2d5: M[V283] = S0
0x2d6: V284 = M[0x40]
0x2da: V285 = SUB V283 V284
0x2db: V286 = 0x20
0x2dd: V287 = ADD 0x20 V285
0x2df: RETURN V284 V287
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e0
[0x2e0:0x2f6]
---
Predecessors: [0x2fc]
Successors: []
---
0x2e0 JUMPDEST
0x2e1 PUSH1 0x40
0x2e3 DUP1
0x2e4 MLOAD
0x2e5 PUSH1 0xff
0x2e7 SWAP3
0x2e8 SWAP1
0x2e9 SWAP3
0x2ea AND
0x2eb DUP3
0x2ec MSTORE
0x2ed MLOAD
0x2ee SWAP1
0x2ef DUP2
0x2f0 SWAP1
0x2f1 SUB
0x2f2 PUSH1 0x20
0x2f4 ADD
0x2f5 SWAP1
0x2f6 RETURN
---
0x2e0: JUMPDEST 
0x2e1: V288 = 0x40
0x2e4: V289 = M[0x40]
0x2e5: V290 = 0xff
0x2ea: V291 = AND 0xff S0
0x2ec: M[V289] = V291
0x2ed: V292 = M[0x40]
0x2f1: V293 = SUB V289 V292
0x2f2: V294 = 0x20
0x2f4: V295 = ADD 0x20 V293
0x2f6: RETURN V292 V295
---
Entry stack: [V10, 0x77, V207, S3, {0x0, 0x77}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x77, V207, S3, {0x0, 0x77}, S1]

================================

Block 0x2f7
[0x2f7:0x2fb]
---
Predecessors: [0x1c9]
Successors: [0x2fc]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0xff
0x2fa SWAP2
0x2fb POP
---
0x2f7: JUMPDEST 
0x2f8: V296 = 0xff
---
Entry stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, {0x2e0, 0x30a, 0x444}, S2, S1, S0]
Stack pops: 2
Stack additions: [0xff, S0]
Exit stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, {0x2e0, 0x30a, 0x444}, S2, 0xff, S0]

================================

Block 0x2fc
[0x2fc:0x301]
---
Predecessors: [0x1fb, 0x2f7]
Successors: [0x2e0, 0x30a, 0x444]
---
0x2fc JUMPDEST
0x2fd POP
0x2fe SWAP2
0x2ff SWAP1
0x300 POP
0x301 JUMP
---
0x2fc: JUMPDEST 
0x301: JUMP {0x2e0, 0x30a, 0x444}
---
Entry stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, {0x2e0, 0x30a, 0x444}, S2, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, S1]

================================

Block 0x302
[0x302:0x309]
---
Predecessors: [0x1db]
Successors: [0x1c9]
---
0x302 JUMPDEST
0x303 PUSH1 0x1
0x305 ADD
0x306 PUSH2 0x1c9
0x309 JUMP
---
0x302: JUMPDEST 
0x303: V297 = 0x1
0x305: V298 = ADD 0x1 S0
0x306: V299 = 0x1c9
0x309: JUMP 0x1c9
---
Entry stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, {0x2e0, 0x30a, 0x444}, S2, S1, S0]
Stack pops: 1
Stack additions: [V298]
Exit stack: [V10, 0x77, V207, S6, {0x0, 0x77}, S4, {0x2e0, 0x30a, 0x444}, S2, S1, V298]

================================

Block 0x30a
[0x30a:0x310]
---
Predecessors: [0x2fc]
Successors: [0x311]
---
0x30a JUMPDEST
0x30b PUSH1 0xff
0x30d AND
0x30e PUSH1 0xff
0x310 EQ
---
0x30a: JUMPDEST 
0x30b: V300 = 0xff
0x30d: V301 = AND 0xff S0
0x30e: V302 = 0xff
0x310: V303 = EQ 0xff V301
---
Entry stack: [V10, 0x77, V207, S3, {0x0, 0x77}, S1, S0]
Stack pops: 1
Stack additions: [V303]
Exit stack: [V10, 0x77, V207, S3, {0x0, 0x77}, S1, V303]

================================

Block 0x311
[0x311:0x316]
---
Predecessors: [0x25c, 0x30a]
Successors: [0x1bb, 0x317]
---
0x311 JUMPDEST
0x312 ISZERO
0x313 PUSH2 0x1bb
0x316 JUMPI
---
0x311: JUMPDEST 
0x312: V304 = ISZERO S0
0x313: V305 = 0x1bb
0x316: JUMPI 0x1bb V304
---
Entry stack: [V10, 0x77, V207, S3, {0x0, 0x77}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x77, V207, S3, {0x0, 0x77}, S1]

================================

Block 0x317
[0x317:0x35f]
---
Predecessors: [0x311]
Successors: [0x77]
---
0x317 PUSH1 0x0
0x319 DUP1
0x31a SLOAD
0x31b PUSH1 0xff
0x31d SWAP1
0x31e DUP2
0x31f AND
0x320 DUP3
0x321 MSTORE
0x322 PUSH1 0x1
0x324 PUSH1 0x20
0x326 DUP2
0x327 SWAP1
0x328 MSTORE
0x329 PUSH1 0x40
0x32b DUP1
0x32c DUP5
0x32d SHA3
0x32e DUP1
0x32f SLOAD
0x330 PUSH1 0xe0
0x332 PUSH1 0x2
0x334 EXP
0x335 DUP8
0x336 DIV
0x337 PUSH4 0xffffffff
0x33c NOT
0x33d SWAP2
0x33e SWAP1
0x33f SWAP2
0x340 AND
0x341 OR
0x342 SWAP1
0x343 SSTORE
0x344 DUP4
0x345 SLOAD
0x346 DUP4
0x347 AND
0x348 DUP5
0x349 MSTORE
0x34a DUP4
0x34b SHA3
0x34c DUP2
0x34d ADD
0x34e DUP4
0x34f SWAP1
0x350 SSTORE
0x351 DUP3
0x352 SLOAD
0x353 PUSH1 0xff
0x355 NOT
0x356 DUP2
0x357 AND
0x358 SWAP3
0x359 AND
0x35a ADD
0x35b OR
0x35c SWAP1
0x35d SSTORE
0x35e POP
0x35f JUMP
---
0x317: V306 = 0x0
0x31a: V307 = S[0x0]
0x31b: V308 = 0xff
0x31f: V309 = AND 0xff V307
0x321: M[0x0] = V309
0x322: V310 = 0x1
0x324: V311 = 0x20
0x328: M[0x20] = 0x1
0x329: V312 = 0x40
0x32d: V313 = SHA3 0x0 0x40
0x32f: V314 = S[V313]
0x330: V315 = 0xe0
0x332: V316 = 0x2
0x334: V317 = EXP 0x2 0xe0
0x336: V318 = DIV S0 0x100000000000000000000000000000000000000000000000000000000
0x337: V319 = 0xffffffff
0x33c: V320 = NOT 0xffffffff
0x340: V321 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000 V314
0x341: V322 = OR V321 V318
0x343: S[V313] = V322
0x345: V323 = S[0x0]
0x347: V324 = AND 0xff V323
0x349: M[0x0] = V324
0x34b: V325 = SHA3 0x0 0x40
0x34d: V326 = ADD 0x1 V325
0x350: S[V326] = 0x0
0x352: V327 = S[0x0]
0x353: V328 = 0xff
0x355: V329 = NOT 0xff
0x357: V330 = AND V327 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x359: V331 = AND 0xff V327
0x35a: V332 = ADD V331 0x1
0x35b: V333 = OR V332 V330
0x35d: S[0x0] = V333
0x35f: JUMP {0x0, 0x77}
---
Entry stack: [V10, 0x77, V207, S2, {0x0, 0x77}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x77, V207, S2]

================================

Block 0x360
[0x360:0x3a9]
---
Predecessors: [0x49a]
Successors: [0x3aa, 0x3bc]
---
0x360 JUMPDEST
0x361 POP
0x362 PUSH1 0x7
0x364 PUSH1 0x6
0x366 SSTORE
0x367 PUSH1 0xff
0x369 DUP2
0x36a AND
0x36b PUSH1 0x0
0x36d SWAP1
0x36e DUP2
0x36f MSTORE
0x370 PUSH1 0x1
0x372 PUSH1 0x20
0x374 DUP2
0x375 DUP2
0x376 MSTORE
0x377 PUSH1 0x40
0x379 DUP1
0x37a DUP5
0x37b SHA3
0x37c SWAP3
0x37d DUP4
0x37e ADD
0x37f DUP1
0x380 SLOAD
0x381 CALLVALUE
0x382 ADD
0x383 SWAP1
0x384 SSTORE
0x385 CALLER
0x386 PUSH1 0x1
0x388 PUSH1 0xa0
0x38a PUSH1 0x2
0x38c EXP
0x38d SUB
0x38e AND
0x38f DUP5
0x390 MSTORE
0x391 PUSH1 0x2
0x393 DUP4
0x394 ADD
0x395 SWAP1
0x396 SWAP2
0x397 MSTORE
0x398 DUP3
0x399 SHA3
0x39a SLOAD
0x39b SWAP1
0x39c SWAP2
0x39d PUSH2 0xffff
0x3a0 SWAP2
0x3a1 SWAP1
0x3a2 SWAP2
0x3a3 AND
0x3a4 EQ
0x3a5 ISZERO
0x3a6 PUSH2 0x3bc
0x3a9 JUMPI
---
0x360: JUMPDEST 
0x362: V334 = 0x7
0x364: V335 = 0x6
0x366: S[0x6] = 0x7
0x367: V336 = 0xff
0x36a: V337 = AND S1 0xff
0x36b: V338 = 0x0
0x36f: M[0x0] = V337
0x370: V339 = 0x1
0x372: V340 = 0x20
0x376: M[0x20] = 0x1
0x377: V341 = 0x40
0x37b: V342 = SHA3 0x0 0x40
0x37e: V343 = ADD V342 0x1
0x380: V344 = S[V343]
0x381: V345 = CALLVALUE
0x382: V346 = ADD V345 V344
0x384: S[V343] = V346
0x385: V347 = CALLER
0x386: V348 = 0x1
0x388: V349 = 0xa0
0x38a: V350 = 0x2
0x38c: V351 = EXP 0x2 0xa0
0x38d: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38e: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x390: M[0x0] = V353
0x391: V354 = 0x2
0x394: V355 = ADD V342 0x2
0x397: M[0x20] = V355
0x399: V356 = SHA3 0x0 0x40
0x39a: V357 = S[V356]
0x39d: V358 = 0xffff
0x3a3: V359 = AND 0xffff V357
0x3a4: V360 = EQ V359 0x0
0x3a5: V361 = ISZERO V360
0x3a6: V362 = 0x3bc
0x3a9: JUMPI 0x3bc V361
---
Entry stack: [V10, 0x77, V207, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V342]
Exit stack: [V10, 0x77, V207, S2, S1, V342]

================================

Block 0x3aa
[0x3aa:0x3bb]
---
Predecessors: [0x360]
Successors: [0x3bc]
---
0x3aa PUSH1 0x40
0x3ac PUSH1 0x0
0x3ae SHA3
0x3af DUP1
0x3b0 SLOAD
0x3b1 PUSH2 0xffff
0x3b4 NOT
0x3b5 AND
0x3b6 PUSH2 0x3e8
0x3b9 OR
0x3ba SWAP1
0x3bb SSTORE
---
0x3aa: V363 = 0x40
0x3ac: V364 = 0x0
0x3ae: V365 = SHA3 0x0 0x40
0x3b0: V366 = S[V365]
0x3b1: V367 = 0xffff
0x3b4: V368 = NOT 0xffff
0x3b5: V369 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 V366
0x3b6: V370 = 0x3e8
0x3b9: V371 = OR 0x3e8 V369
0x3bb: S[V365] = V371
---
Entry stack: [V10, 0x77, V207, S2, S1, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x77, V207, S2, S1, V342]

================================

Block 0x3bc
[0x3bc:0x3e1]
---
Predecessors: [0x360, 0x3aa]
Successors: [0x3e2, 0x3f4]
---
0x3bc JUMPDEST
0x3bd PUSH1 0x1
0x3bf PUSH1 0xa0
0x3c1 PUSH1 0x2
0x3c3 EXP
0x3c4 SUB
0x3c5 DUP5
0x3c6 AND
0x3c7 PUSH1 0x0
0x3c9 SWAP1
0x3ca DUP2
0x3cb MSTORE
0x3cc PUSH1 0x2
0x3ce DUP3
0x3cf ADD
0x3d0 PUSH1 0x20
0x3d2 MSTORE
0x3d3 PUSH1 0x40
0x3d5 DUP2
0x3d6 SHA3
0x3d7 SLOAD
0x3d8 PUSH2 0xffff
0x3db AND
0x3dc EQ
0x3dd ISZERO
0x3de PUSH2 0x3f4
0x3e1 JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V372 = 0x1
0x3bf: V373 = 0xa0
0x3c1: V374 = 0x2
0x3c3: V375 = EXP 0x2 0xa0
0x3c4: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c6: V377 = AND V207 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: V378 = 0x0
0x3cb: M[0x0] = V377
0x3cc: V379 = 0x2
0x3cf: V380 = ADD V342 0x2
0x3d0: V381 = 0x20
0x3d2: M[0x20] = V380
0x3d3: V382 = 0x40
0x3d6: V383 = SHA3 0x0 0x40
0x3d7: V384 = S[V383]
0x3d8: V385 = 0xffff
0x3db: V386 = AND 0xffff V384
0x3dc: V387 = EQ V386 0x0
0x3dd: V388 = ISZERO V387
0x3de: V389 = 0x3f4
0x3e1: JUMPI 0x3f4 V388
---
Entry stack: [V10, 0x77, V207, S2, S1, V342]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x77, V207, S2, S1, V342]

================================

Block 0x3e2
[0x3e2:0x3f3]
---
Predecessors: [0x3bc]
Successors: [0x3f4]
---
0x3e2 PUSH1 0x40
0x3e4 PUSH1 0x0
0x3e6 SHA3
0x3e7 DUP1
0x3e8 SLOAD
0x3e9 PUSH2 0xffff
0x3ec NOT
0x3ed AND
0x3ee PUSH2 0x3e8
0x3f1 OR
0x3f2 SWAP1
0x3f3 SSTORE
---
0x3e2: V390 = 0x40
0x3e4: V391 = 0x0
0x3e6: V392 = SHA3 0x0 0x40
0x3e8: V393 = S[V392]
0x3e9: V394 = 0xffff
0x3ec: V395 = NOT 0xffff
0x3ed: V396 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 V393
0x3ee: V397 = 0x3e8
0x3f1: V398 = OR 0x3e8 V396
0x3f3: S[V392] = V398
---
Entry stack: [V10, 0x77, V207, S2, S1, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x77, V207, S2, S1, V342]

================================

Block 0x3f4
[0x3f4:0x430]
---
Predecessors: [0x3bc, 0x3e2]
Successors: [0x431]
---
0x3f4 JUMPDEST
0x3f5 PUSH1 0x1
0x3f7 PUSH1 0xa0
0x3f9 PUSH1 0x2
0x3fb EXP
0x3fc SUB
0x3fd DUP5
0x3fe DUP2
0x3ff AND
0x400 PUSH1 0x0
0x402 SWAP1
0x403 DUP2
0x404 MSTORE
0x405 PUSH1 0x3
0x407 DUP4
0x408 ADD
0x409 PUSH1 0x20
0x40b SWAP1
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x40
0x410 DUP1
0x411 DUP4
0x412 SHA3
0x413 CALLER
0x414 SWAP1
0x415 SWAP5
0x416 AND
0x417 DUP4
0x418 MSTORE
0x419 SWAP3
0x41a SWAP1
0x41b MSTORE
0x41c SHA3
0x41d DUP1
0x41e SLOAD
0x41f PUSH2 0xffff
0x422 DUP2
0x423 AND
0x424 PUSH1 0x1
0x426 ADD
0x427 PUSH2 0xffff
0x42a NOT
0x42b SWAP1
0x42c SWAP2
0x42d AND
0x42e OR
0x42f SWAP1
0x430 SSTORE
---
0x3f4: JUMPDEST 
0x3f5: V399 = 0x1
0x3f7: V400 = 0xa0
0x3f9: V401 = 0x2
0x3fb: V402 = EXP 0x2 0xa0
0x3fc: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ff: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x400: V405 = 0x0
0x404: M[0x0] = V404
0x405: V406 = 0x3
0x408: V407 = ADD V342 0x3
0x409: V408 = 0x20
0x40d: M[0x20] = V407
0x40e: V409 = 0x40
0x412: V410 = SHA3 0x0 0x40
0x413: V411 = CALLER
0x416: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x418: M[0x0] = V412
0x41b: M[0x20] = V410
0x41c: V413 = SHA3 0x0 0x40
0x41e: V414 = S[V413]
0x41f: V415 = 0xffff
0x423: V416 = AND V414 0xffff
0x424: V417 = 0x1
0x426: V418 = ADD 0x1 V416
0x427: V419 = 0xffff
0x42a: V420 = NOT 0xffff
0x42d: V421 = AND V414 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000
0x42e: V422 = OR V421 V418
0x430: S[V413] = V422
---
Entry stack: [V10, 0x77, V207, S2, S1, V342]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x77, V207, S2, S1, V342]

================================

Block 0x431
[0x431:0x436]
---
Predecessors: [0x258, 0x3f4, 0x4a0]
Successors: [0x77]
---
0x431 JUMPDEST
0x432 POP
0x433 POP
0x434 POP
0x435 POP
0x436 JUMP
---
0x431: JUMPDEST 
0x436: JUMP 0x77
---
Entry stack: [V10, 0x77, V207, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x437
[0x437:0x443]
---
Predecessors: [0x202]
Successors: [0x1c5]
---
0x437 JUMPDEST
0x438 PUSH1 0x6
0x43a DUP1
0x43b SSTORE
0x43c PUSH2 0x444
0x43f DUP4
0x440 PUSH2 0x1c5
0x443 JUMP
---
0x437: JUMPDEST 
0x438: V423 = 0x6
0x43b: S[0x6] = 0x6
0x43c: V424 = 0x444
0x440: V425 = 0x1c5
0x443: JUMP 0x1c5
---
Entry stack: [V10, 0x77, V207, V209, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x444, S2]
Exit stack: [V10, 0x77, V207, V209, 0x0, 0x0, 0x444, V209]

================================

Block 0x444
[0x444:0x457]
---
Predecessors: [0x2fc]
Successors: [0x458, 0x476]
---
0x444 JUMPDEST
0x445 PUSH1 0xff
0x447 DUP2
0x448 DUP2
0x449 AND
0x44a PUSH1 0x6
0x44c DUP2
0x44d SWAP1
0x44e SSTORE
0x44f SWAP2
0x450 SWAP4
0x451 POP
0x452 EQ
0x453 DUP1
0x454 PUSH2 0x476
0x457 JUMPI
---
0x444: JUMPDEST 
0x445: V426 = 0xff
0x449: V427 = AND 0xff S0
0x44a: V428 = 0x6
0x44e: S[0x6] = V427
0x452: V429 = EQ 0xff V427
0x454: V430 = 0x476
0x457: JUMPI 0x476 V429
---
Entry stack: [V10, 0x77, V207, S3, {0x0, 0x77}, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, V429]
Exit stack: [V10, 0x77, V207, S3, S0, S1, V429]

================================

Block 0x458
[0x458:0x475]
---
Predecessors: [0x444]
Successors: [0x476]
---
0x458 POP
0x459 CALLER
0x45a PUSH1 0x1
0x45c PUSH1 0xa0
0x45e PUSH1 0x2
0x460 EXP
0x461 SUB
0x462 AND
0x463 PUSH1 0x0
0x465 SWAP1
0x466 DUP2
0x467 MSTORE
0x468 PUSH1 0x2
0x46a PUSH1 0x20
0x46c MSTORE
0x46d PUSH1 0x40
0x46f SWAP1
0x470 SHA3
0x471 SLOAD
0x472 PUSH1 0xff
0x474 AND
0x475 ISZERO
---
0x459: V431 = CALLER
0x45a: V432 = 0x1
0x45c: V433 = 0xa0
0x45e: V434 = 0x2
0x460: V435 = EXP 0x2 0xa0
0x461: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x462: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x463: V438 = 0x0
0x467: M[0x0] = V437
0x468: V439 = 0x2
0x46a: V440 = 0x20
0x46c: M[0x20] = 0x2
0x46d: V441 = 0x40
0x470: V442 = SHA3 0x0 0x40
0x471: V443 = S[V442]
0x472: V444 = 0xff
0x474: V445 = AND 0xff V443
0x475: V446 = ISZERO V445
---
Entry stack: [V10, 0x77, V207, S3, S2, S1, V429]
Stack pops: 1
Stack additions: [V446]
Exit stack: [V10, 0x77, V207, S3, S2, S1, V446]

================================

Block 0x476
[0x476:0x47b]
---
Predecessors: [0x444, 0x458]
Successors: [0x47c, 0x49a]
---
0x476 JUMPDEST
0x477 DUP1
0x478 PUSH2 0x49a
0x47b JUMPI
---
0x476: JUMPDEST 
0x478: V447 = 0x49a
0x47b: JUMPI 0x49a S0
---
Entry stack: [V10, 0x77, V207, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x77, V207, S3, S2, S1, S0]

================================

Block 0x47c
[0x47c:0x499]
---
Predecessors: [0x476]
Successors: [0x49a]
---
0x47c POP
0x47d PUSH1 0x1
0x47f PUSH1 0xa0
0x481 PUSH1 0x2
0x483 EXP
0x484 SUB
0x485 DUP5
0x486 AND
0x487 PUSH1 0x0
0x489 SWAP1
0x48a DUP2
0x48b MSTORE
0x48c PUSH1 0x2
0x48e PUSH1 0x20
0x490 MSTORE
0x491 PUSH1 0x40
0x493 SWAP1
0x494 SHA3
0x495 SLOAD
0x496 PUSH1 0xff
0x498 AND
0x499 ISZERO
---
0x47d: V448 = 0x1
0x47f: V449 = 0xa0
0x481: V450 = 0x2
0x483: V451 = EXP 0x2 0xa0
0x484: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x486: V453 = AND V207 0xffffffffffffffffffffffffffffffffffffffff
0x487: V454 = 0x0
0x48b: M[0x0] = V453
0x48c: V455 = 0x2
0x48e: V456 = 0x20
0x490: M[0x20] = 0x2
0x491: V457 = 0x40
0x494: V458 = SHA3 0x0 0x40
0x495: V459 = S[V458]
0x496: V460 = 0xff
0x498: V461 = AND 0xff V459
0x499: V462 = ISZERO V461
---
Entry stack: [V10, 0x77, V207, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V462]
Exit stack: [V10, 0x77, V207, S3, S2, S1, V462]

================================

Block 0x49a
[0x49a:0x49f]
---
Predecessors: [0x476, 0x47c]
Successors: [0x360, 0x4a0]
---
0x49a JUMPDEST
0x49b ISZERO
0x49c PUSH2 0x360
0x49f JUMPI
---
0x49a: JUMPDEST 
0x49b: V463 = ISZERO S0
0x49c: V464 = 0x360
0x49f: JUMPI 0x360 V463
---
Entry stack: [V10, 0x77, V207, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x77, V207, S3, S2, S1]

================================

Block 0x4a0
[0x4a0:0x4a3]
---
Predecessors: [0x49a]
Successors: [0x431]
---
0x4a0 PUSH2 0x431
0x4a3 JUMP
---
0x4a0: V465 = 0x431
0x4a3: JUMP 0x431
---
Entry stack: [V10, 0x77, V207, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x77, V207, S2, S1, S0]

================================

Function 0:
Public function signature: 0x19990092
Entry block: 0x79
Exit block: 0x2ce
Body: 0x79, 0x2ce

Function 1:
Public function signature: 0x3cc86b80
Entry block: 0xa1
Exit block: 0x77
Body: 0x77, 0xa1, 0xc3, 0xe3

Function 2:
Public function signature: 0x6de00927
Entry block: 0xe7
Exit block: 0x11a
Body: 0xe7, 0x11a

Function 3:
Public function signature: 0x7281854d
Entry block: 0x132
Exit block: 0x2ce
Body: 0x132, 0x2ce

Function 4:
Public function signature: 0x755f99c2
Entry block: 0x154
Exit block: 0x77
Body: 0x77, 0x154, 0x174, 0x192, 0x198, 0x1bb

Function 5:
Public function signature: 0x769dc523
Entry block: 0x1be
Exit block: 0x2e0
Body: 0x1be, 0x2e0

Function 6:
Public function signature: 0x797fdd7b
Entry block: 0x202
Exit block: 0x77
Body: 0x77, 0x202, 0x258, 0x360, 0x3aa, 0x3bc, 0x3e2, 0x3f4, 0x431, 0x437, 0x444, 0x458, 0x476, 0x47c, 0x49a, 0x4a0

Function 7:
Public function signature: 0x85a1c950
Entry block: 0x25c
Exit block: 0x77
Body: 0x77, 0x1bb, 0x25c, 0x27c, 0x30a, 0x311, 0x317

Function 8:
Public function signature: 0x8a4c4527
Entry block: 0x285
Exit block: 0x11a
Body: 0x11a, 0x285

Function 9:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 10:
Private function
Entry block: 0x1c5
Exit block: 0x2fc
Body: 0x1c5, 0x1c9, 0x1db, 0x1fb, 0x2f7, 0x2fc, 0x302

