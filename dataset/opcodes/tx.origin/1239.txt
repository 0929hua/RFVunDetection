Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4b]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xd493b9ac
0x3c EQ
0x3d PUSH2 0x4b
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xd493b9ac
0x3c: V13 = EQ 0xd493b9ac V11
0x3d: V14 = 0x4b
0x40: JUMPI 0x4b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x48]
---
Predecessors: [0x0, 0xd]
Successors: [0xd0]
---
0x41 JUMPDEST
0x42 PUSH2 0x49
0x45 PUSH2 0xd0
0x48 JUMP
---
0x41: JUMPDEST 
0x42: V15 = 0x49
0x45: V16 = 0xd0
0x48: JUMP 0xd0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x49]
Exit stack: [V11, 0x49]

================================

Block 0x49
[0x49:0x4a]
---
Predecessors: [0x208]
Successors: []
---
0x49 JUMPDEST
0x4a STOP
---
0x49: JUMPDEST 
0x4a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x52]
---
Predecessors: [0xd]
Successors: [0x53, 0x57]
---
0x4b JUMPDEST
0x4c CALLVALUE
0x4d DUP1
0x4e ISZERO
0x4f PUSH2 0x57
0x52 JUMPI
---
0x4b: JUMPDEST 
0x4c: V17 = CALLVALUE
0x4e: V18 = ISZERO V17
0x4f: V19 = 0x57
0x52: JUMPI 0x57 V18
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V17]
Exit stack: [V11, V17]

================================

Block 0x53
[0x53:0x56]
---
Predecessors: [0x4b]
Successors: []
---
0x53 PUSH1 0x0
0x55 DUP1
0x56 REVERT
---
0x53: V20 = 0x0
0x56: REVERT 0x0 0x0
---
Entry stack: [V11, V17]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V17]

================================

Block 0x57
[0x57:0xb5]
---
Predecessors: [0x4b]
Successors: [0x20b]
---
0x57 JUMPDEST
0x58 POP
0x59 PUSH2 0xb6
0x5c PUSH1 0x4
0x5e DUP1
0x5f CALLDATASIZE
0x60 SUB
0x61 DUP2
0x62 ADD
0x63 SWAP1
0x64 DUP1
0x65 DUP1
0x66 CALLDATALOAD
0x67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c AND
0x7d SWAP1
0x7e PUSH1 0x20
0x80 ADD
0x81 SWAP1
0x82 SWAP3
0x83 SWAP2
0x84 SWAP1
0x85 DUP1
0x86 CALLDATALOAD
0x87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c AND
0x9d SWAP1
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP1
0xa2 SWAP3
0xa3 SWAP2
0xa4 SWAP1
0xa5 DUP1
0xa6 CALLDATALOAD
0xa7 SWAP1
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac SWAP3
0xad SWAP2
0xae SWAP1
0xaf POP
0xb0 POP
0xb1 POP
0xb2 PUSH2 0x20b
0xb5 JUMP
---
0x57: JUMPDEST 
0x59: V21 = 0xb6
0x5c: V22 = 0x4
0x5f: V23 = CALLDATASIZE
0x60: V24 = SUB V23 0x4
0x62: V25 = ADD 0x4 V24
0x66: V26 = CALLDATALOAD 0x4
0x67: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x7e: V29 = 0x20
0x80: V30 = ADD 0x20 0x4
0x86: V31 = CALLDATALOAD 0x24
0x87: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x9e: V34 = 0x20
0xa0: V35 = ADD 0x20 0x24
0xa6: V36 = CALLDATALOAD 0x44
0xa8: V37 = 0x20
0xaa: V38 = ADD 0x20 0x44
0xb2: V39 = 0x20b
0xb5: JUMP 0x20b
---
Entry stack: [V11, V17]
Stack pops: 1
Stack additions: [0xb6, V28, V33, V36]
Exit stack: [V11, 0xb6, V28, V33, V36]

================================

Block 0xb6
[0xb6:0xcf]
---
Predecessors: [0x36f]
Successors: []
---
0xb6 JUMPDEST
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba DUP1
0xbb DUP3
0xbc ISZERO
0xbd ISZERO
0xbe ISZERO
0xbf ISZERO
0xc0 DUP2
0xc1 MSTORE
0xc2 PUSH1 0x20
0xc4 ADD
0xc5 SWAP2
0xc6 POP
0xc7 POP
0xc8 PUSH1 0x40
0xca MLOAD
0xcb DUP1
0xcc SWAP2
0xcd SUB
0xce SWAP1
0xcf RETURN
---
0xb6: JUMPDEST 
0xb7: V40 = 0x40
0xb9: V41 = M[0x40]
0xbc: V42 = ISZERO V202
0xbd: V43 = ISZERO V42
0xbe: V44 = ISZERO V43
0xbf: V45 = ISZERO V44
0xc1: M[V41] = V45
0xc2: V46 = 0x20
0xc4: V47 = ADD 0x20 V41
0xc8: V48 = 0x40
0xca: V49 = M[0x40]
0xcd: V50 = SUB V47 V49
0xcf: RETURN V49 V50
---
Entry stack: [V11, V202]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xf9]
---
Predecessors: [0x41]
Successors: [0xfa, 0x208]
---
0xd0 JUMPDEST
0xd1 PUSH1 0x0
0xd3 PUSH8 0xde0b6b3a7640000
0xdc ADDRESS
0xdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2 AND
0xf3 BALANCE
0xf4 GT
0xf5 ISZERO
0xf6 PUSH2 0x208
0xf9 JUMPI
---
0xd0: JUMPDEST 
0xd1: V51 = 0x0
0xd3: V52 = 0xde0b6b3a7640000
0xdc: V53 = ADDRESS
0xdd: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xf3: V56 = BALANCE V55
0xf4: V57 = GT V56 0xde0b6b3a7640000
0xf5: V58 = ISZERO V57
0xf6: V59 = 0x208
0xf9: JUMPI 0x208 V58
---
Entry stack: [V11, 0x49]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x49, 0x0]

================================

Block 0xfa
[0xfa:0x11a]
---
Predecessors: [0xd0]
Successors: [0x11b, 0x11c]
---
0xfa PUSH1 0x2
0xfc ADDRESS
0xfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112 AND
0x113 BALANCE
0x114 DUP2
0x115 ISZERO
0x116 ISZERO
0x117 PUSH2 0x11c
0x11a JUMPI
---
0xfa: V60 = 0x2
0xfc: V61 = ADDRESS
0xfd: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x112: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x113: V64 = BALANCE V63
0x115: V65 = ISZERO 0x2
0x116: V66 = ISZERO 0x0
0x117: V67 = 0x11c
0x11a: JUMPI 0x11c 0x1
---
Entry stack: [V11, 0x49, 0x0]
Stack pops: 0
Stack additions: [0x2, V64]
Exit stack: [V11, 0x49, 0x0, 0x2, V64]

================================

Block 0x11b
[0x11b:0x11b]
---
Predecessors: [0xfa]
Successors: []
---
0x11b INVALID
---
0x11b: INVALID 
---
Entry stack: [V11, 0x49, 0x0, 0x2, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49, 0x0, 0x2, V64]

================================

Block 0x11c
[0x11c:0x17c]
---
Predecessors: [0xfa]
Successors: [0x17d, 0x186]
---
0x11c JUMPDEST
0x11d DIV
0x11e SWAP1
0x11f POP
0x120 PUSH1 0x0
0x122 DUP1
0x123 SWAP1
0x124 SLOAD
0x125 SWAP1
0x126 PUSH2 0x100
0x129 EXP
0x12a SWAP1
0x12b DIV
0x12c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x141 AND
0x142 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x157 AND
0x158 PUSH2 0x8fc
0x15b DUP3
0x15c SWAP1
0x15d DUP2
0x15e ISZERO
0x15f MUL
0x160 SWAP1
0x161 PUSH1 0x40
0x163 MLOAD
0x164 PUSH1 0x0
0x166 PUSH1 0x40
0x168 MLOAD
0x169 DUP1
0x16a DUP4
0x16b SUB
0x16c DUP2
0x16d DUP6
0x16e DUP9
0x16f DUP9
0x170 CALL
0x171 SWAP4
0x172 POP
0x173 POP
0x174 POP
0x175 POP
0x176 ISZERO
0x177 DUP1
0x178 ISZERO
0x179 PUSH2 0x186
0x17c JUMPI
---
0x11c: JUMPDEST 
0x11d: V68 = DIV V64 0x2
0x120: V69 = 0x0
0x124: V70 = S[0x0]
0x126: V71 = 0x100
0x129: V72 = EXP 0x100 0x0
0x12b: V73 = DIV V70 0x1
0x12c: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x141: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x142: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x157: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x158: V78 = 0x8fc
0x15e: V79 = ISZERO V68
0x15f: V80 = MUL V79 0x8fc
0x161: V81 = 0x40
0x163: V82 = M[0x40]
0x164: V83 = 0x0
0x166: V84 = 0x40
0x168: V85 = M[0x40]
0x16b: V86 = SUB V82 V85
0x170: V87 = CALL V80 V77 V68 V85 V86 V85 0x0
0x176: V88 = ISZERO V87
0x178: V89 = ISZERO V88
0x179: V90 = 0x186
0x17c: JUMPI 0x186 V89
---
Entry stack: [V11, 0x49, 0x0, 0x2, V64]
Stack pops: 3
Stack additions: [V68, V88]
Exit stack: [V11, 0x49, V68, V88]

================================

Block 0x17d
[0x17d:0x185]
---
Predecessors: [0x11c]
Successors: []
---
0x17d RETURNDATASIZE
0x17e PUSH1 0x0
0x180 DUP1
0x181 RETURNDATACOPY
0x182 RETURNDATASIZE
0x183 PUSH1 0x0
0x185 REVERT
---
0x17d: V91 = RETURNDATASIZE
0x17e: V92 = 0x0
0x181: RETURNDATACOPY 0x0 0x0 V91
0x182: V93 = RETURNDATASIZE
0x183: V94 = 0x0
0x185: REVERT 0x0 V93
---
Entry stack: [V11, 0x49, V68, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49, V68, V88]

================================

Block 0x186
[0x186:0x1fc]
---
Predecessors: [0x11c]
Successors: [0x1fd, 0x206]
---
0x186 JUMPDEST
0x187 POP
0x188 PUSH1 0x1
0x18a PUSH1 0x0
0x18c SWAP1
0x18d SLOAD
0x18e SWAP1
0x18f PUSH2 0x100
0x192 EXP
0x193 SWAP1
0x194 DIV
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 PUSH2 0x8fc
0x1c4 ADDRESS
0x1c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1da AND
0x1db BALANCE
0x1dc SWAP1
0x1dd DUP2
0x1de ISZERO
0x1df MUL
0x1e0 SWAP1
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 PUSH1 0x0
0x1e6 PUSH1 0x40
0x1e8 MLOAD
0x1e9 DUP1
0x1ea DUP4
0x1eb SUB
0x1ec DUP2
0x1ed DUP6
0x1ee DUP9
0x1ef DUP9
0x1f0 CALL
0x1f1 SWAP4
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 ISZERO
0x1f7 DUP1
0x1f8 ISZERO
0x1f9 PUSH2 0x206
0x1fc JUMPI
---
0x186: JUMPDEST 
0x188: V95 = 0x1
0x18a: V96 = 0x0
0x18d: V97 = S[0x1]
0x18f: V98 = 0x100
0x192: V99 = EXP 0x100 0x0
0x194: V100 = DIV V97 0x1
0x195: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1ab: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1c1: V105 = 0x8fc
0x1c4: V106 = ADDRESS
0x1c5: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1db: V109 = BALANCE V108
0x1de: V110 = ISZERO V109
0x1df: V111 = MUL V110 0x8fc
0x1e1: V112 = 0x40
0x1e3: V113 = M[0x40]
0x1e4: V114 = 0x0
0x1e6: V115 = 0x40
0x1e8: V116 = M[0x40]
0x1eb: V117 = SUB V113 V116
0x1f0: V118 = CALL V111 V104 V109 V116 V117 V116 0x0
0x1f6: V119 = ISZERO V118
0x1f8: V120 = ISZERO V119
0x1f9: V121 = 0x206
0x1fc: JUMPI 0x206 V120
---
Entry stack: [V11, 0x49, V68, V88]
Stack pops: 1
Stack additions: [V119]
Exit stack: [V11, 0x49, V68, V119]

================================

Block 0x1fd
[0x1fd:0x205]
---
Predecessors: [0x186]
Successors: []
---
0x1fd RETURNDATASIZE
0x1fe PUSH1 0x0
0x200 DUP1
0x201 RETURNDATACOPY
0x202 RETURNDATASIZE
0x203 PUSH1 0x0
0x205 REVERT
---
0x1fd: V122 = RETURNDATASIZE
0x1fe: V123 = 0x0
0x201: RETURNDATACOPY 0x0 0x0 V122
0x202: V124 = RETURNDATASIZE
0x203: V125 = 0x0
0x205: REVERT 0x0 V124
---
Entry stack: [V11, 0x49, V68, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49, V68, V119]

================================

Block 0x206
[0x206:0x207]
---
Predecessors: [0x186]
Successors: [0x208]
---
0x206 JUMPDEST
0x207 POP
---
0x206: JUMPDEST 
---
Entry stack: [V11, 0x49, V68, V119]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x49, V68]

================================

Block 0x208
[0x208:0x20a]
---
Predecessors: [0xd0, 0x206]
Successors: [0x49]
---
0x208 JUMPDEST
0x209 POP
0x20a JUMP
---
0x208: JUMPDEST 
0x20a: JUMP 0x49
---
Entry stack: [V11, 0x49, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x20b
[0x20b:0x263]
---
Predecessors: [0x57]
Successors: [0x264, 0x268]
---
0x20b JUMPDEST
0x20c PUSH1 0x0
0x20e DUP1
0x20f PUSH1 0x0
0x211 SWAP1
0x212 SLOAD
0x213 SWAP1
0x214 PUSH2 0x100
0x217 EXP
0x218 SWAP1
0x219 DIV
0x21a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22f AND
0x230 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x245 AND
0x246 CALLER
0x247 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25c AND
0x25d EQ
0x25e ISZERO
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x20b: JUMPDEST 
0x20c: V126 = 0x0
0x20f: V127 = 0x0
0x212: V128 = S[0x0]
0x214: V129 = 0x100
0x217: V130 = EXP 0x100 0x0
0x219: V131 = DIV V128 0x1
0x21a: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x230: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x245: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x246: V136 = CALLER
0x247: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x25d: V139 = EQ V138 V135
0x25e: V140 = ISZERO V139
0x25f: V141 = ISZERO V140
0x260: V142 = 0x268
0x263: JUMPI 0x268 V141
---
Entry stack: [V11, 0xb6, V28, V33, V36]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x20b]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V143 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0]

================================

Block 0x268
[0x268:0x29d]
---
Predecessors: [0x20b]
Successors: [0x29e, 0x2a2]
---
0x268 JUMPDEST
0x269 ORIGIN
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 CALLER
0x281 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x296 AND
0x297 EQ
0x298 ISZERO
0x299 ISZERO
0x29a PUSH2 0x2a2
0x29d JUMPI
---
0x268: JUMPDEST 
0x269: V144 = ORIGIN
0x26a: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x280: V147 = CALLER
0x281: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x296: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x297: V150 = EQ V149 V146
0x298: V151 = ISZERO V150
0x299: V152 = ISZERO V151
0x29a: V153 = 0x2a2
0x29d: JUMPI 0x2a2 V152
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0]

================================

Block 0x29e
[0x29e:0x2a1]
---
Predecessors: [0x268]
Successors: []
---
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 REVERT
---
0x29e: V154 = 0x0
0x2a1: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0]

================================

Block 0x2a2
[0x2a2:0x340]
---
Predecessors: [0x268]
Successors: [0x341, 0x345]
---
0x2a2 JUMPDEST
0x2a3 DUP4
0x2a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b9 AND
0x2ba PUSH4 0xa9059cbb
0x2bf DUP5
0x2c0 DUP5
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 DUP4
0x2c5 PUSH4 0xffffffff
0x2ca AND
0x2cb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e9 MUL
0x2ea DUP2
0x2eb MSTORE
0x2ec PUSH1 0x4
0x2ee ADD
0x2ef DUP1
0x2f0 DUP4
0x2f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x306 AND
0x307 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31c AND
0x31d DUP2
0x31e MSTORE
0x31f PUSH1 0x20
0x321 ADD
0x322 DUP3
0x323 DUP2
0x324 MSTORE
0x325 PUSH1 0x20
0x327 ADD
0x328 SWAP3
0x329 POP
0x32a POP
0x32b POP
0x32c PUSH1 0x20
0x32e PUSH1 0x40
0x330 MLOAD
0x331 DUP1
0x332 DUP4
0x333 SUB
0x334 DUP2
0x335 PUSH1 0x0
0x337 DUP8
0x338 DUP1
0x339 EXTCODESIZE
0x33a ISZERO
0x33b DUP1
0x33c ISZERO
0x33d PUSH2 0x345
0x340 JUMPI
---
0x2a2: JUMPDEST 
0x2a4: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x2ba: V157 = 0xa9059cbb
0x2c1: V158 = 0x40
0x2c3: V159 = M[0x40]
0x2c5: V160 = 0xffffffff
0x2ca: V161 = AND 0xffffffff 0xa9059cbb
0x2cb: V162 = 0x100000000000000000000000000000000000000000000000000000000
0x2e9: V163 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2eb: M[V159] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2ec: V164 = 0x4
0x2ee: V165 = ADD 0x4 V159
0x2f1: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x306: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x307: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x31e: M[V165] = V169
0x31f: V170 = 0x20
0x321: V171 = ADD 0x20 V165
0x324: M[V171] = V36
0x325: V172 = 0x20
0x327: V173 = ADD 0x20 V171
0x32c: V174 = 0x20
0x32e: V175 = 0x40
0x330: V176 = M[0x40]
0x333: V177 = SUB V173 V176
0x335: V178 = 0x0
0x339: V179 = EXTCODESIZE V156
0x33a: V180 = ISZERO V179
0x33c: V181 = ISZERO V180
0x33d: V182 = 0x345
0x340: JUMPI 0x345 V181
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V156, 0xa9059cbb, V173, 0x20, V176, V177, V176, 0x0, V156, V180]
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V156, 0xa9059cbb, V173, 0x20, V176, V177, V176, 0x0, V156, V180]

================================

Block 0x341
[0x341:0x344]
---
Predecessors: [0x2a2]
Successors: []
---
0x341 PUSH1 0x0
0x343 DUP1
0x344 REVERT
---
0x341: V183 = 0x0
0x344: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V156, 0xa9059cbb, V173, 0x20, V176, V177, V176, 0x0, V156, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V156, 0xa9059cbb, V173, 0x20, V176, V177, V176, 0x0, V156, V180]

================================

Block 0x345
[0x345:0x34f]
---
Predecessors: [0x2a2]
Successors: [0x350, 0x359]
---
0x345 JUMPDEST
0x346 POP
0x347 GAS
0x348 CALL
0x349 ISZERO
0x34a DUP1
0x34b ISZERO
0x34c PUSH2 0x359
0x34f JUMPI
---
0x345: JUMPDEST 
0x347: V184 = GAS
0x348: V185 = CALL V184 V156 0x0 V176 V177 V176 0x20
0x349: V186 = ISZERO V185
0x34b: V187 = ISZERO V186
0x34c: V188 = 0x359
0x34f: JUMPI 0x359 V187
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V156, 0xa9059cbb, V173, 0x20, V176, V177, V176, 0x0, V156, V180]
Stack pops: 7
Stack additions: [V186]
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V156, 0xa9059cbb, V173, V186]

================================

Block 0x350
[0x350:0x358]
---
Predecessors: [0x345]
Successors: []
---
0x350 RETURNDATASIZE
0x351 PUSH1 0x0
0x353 DUP1
0x354 RETURNDATACOPY
0x355 RETURNDATASIZE
0x356 PUSH1 0x0
0x358 REVERT
---
0x350: V189 = RETURNDATASIZE
0x351: V190 = 0x0
0x354: RETURNDATACOPY 0x0 0x0 V189
0x355: V191 = RETURNDATASIZE
0x356: V192 = 0x0
0x358: REVERT 0x0 V191
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V156, 0xa9059cbb, V173, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V156, 0xa9059cbb, V173, V186]

================================

Block 0x359
[0x359:0x36a]
---
Predecessors: [0x345]
Successors: [0x36b, 0x36f]
---
0x359 JUMPDEST
0x35a POP
0x35b POP
0x35c POP
0x35d POP
0x35e PUSH1 0x40
0x360 MLOAD
0x361 RETURNDATASIZE
0x362 PUSH1 0x20
0x364 DUP2
0x365 LT
0x366 ISZERO
0x367 PUSH2 0x36f
0x36a JUMPI
---
0x359: JUMPDEST 
0x35e: V193 = 0x40
0x360: V194 = M[0x40]
0x361: V195 = RETURNDATASIZE
0x362: V196 = 0x20
0x365: V197 = LT V195 0x20
0x366: V198 = ISZERO V197
0x367: V199 = 0x36f
0x36a: JUMPI 0x36f V198
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V156, 0xa9059cbb, V173, V186]
Stack pops: 4
Stack additions: [V194, V195]
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V194, V195]

================================

Block 0x36b
[0x36b:0x36e]
---
Predecessors: [0x359]
Successors: []
---
0x36b PUSH1 0x0
0x36d DUP1
0x36e REVERT
---
0x36b: V200 = 0x0
0x36e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V194, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V28, V33, V36, 0x0, V194, V195]

================================

Block 0x36f
[0x36f:0x388]
---
Predecessors: [0x359]
Successors: [0xb6]
---
0x36f JUMPDEST
0x370 DUP2
0x371 ADD
0x372 SWAP1
0x373 DUP1
0x374 DUP1
0x375 MLOAD
0x376 SWAP1
0x377 PUSH1 0x20
0x379 ADD
0x37a SWAP1
0x37b SWAP3
0x37c SWAP2
0x37d SWAP1
0x37e POP
0x37f POP
0x380 POP
0x381 SWAP1
0x382 POP
0x383 SWAP4
0x384 SWAP3
0x385 POP
0x386 POP
0x387 POP
0x388 JUMP
---
0x36f: JUMPDEST 
0x371: V201 = ADD V194 V195
0x375: V202 = M[V194]
0x377: V203 = 0x20
0x379: V204 = ADD 0x20 V194
0x388: JUMP 0xb6
---
Entry stack: [V11, 0xb6, V28, V33, V36, 0x0, V194, V195]
Stack pops: 7
Stack additions: [V202]
Exit stack: [V11, V202]

================================

Block 0x389
[0x389:0x3b4]
---
Predecessors: []
Successors: []
---
0x389 STOP
0x38a LOG1
0x38b PUSH6 0x627a7a723058
0x392 SHA3
0x393 DUP13
0x394 DUP16
0x395 MISSING 0xdd
0x396 STOP
0x397 MISSING 0xe
0x398 NOT
0x399 PUSH22 0x3870e49de4f617936056a186c4d0aa7df670708b5505
0x3b0 MISSING 0xbe
0x3b1 RETURNDATASIZE
0x3b2 BLOCKHASH
0x3b3 STOP
0x3b4 MISSING 0x29
---
0x389: STOP 
0x38a: LOG S0 S1 S2
0x38b: V205 = 0x627a7a723058
0x392: V206 = SHA3 0x627a7a723058 S3
0x395: MISSING 0xdd
0x396: STOP 
0x397: MISSING 0xe
0x398: V207 = NOT S0
0x399: V208 = 0x3870e49de4f617936056a186c4d0aa7df670708b5505
0x3b0: MISSING 0xbe
0x3b1: V209 = RETURNDATASIZE
0x3b2: V210 = BLOCKHASH V209
0x3b3: STOP 
0x3b4: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, S15, V206, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, 0x3870e49de4f617936056a186c4d0aa7df670708b5505, V207, V210]
Exit stack: []

================================

Function 0:
Public function signature: 0xd493b9ac
Entry block: 0x4b
Exit block: 0xb6
Body: 0x4b, 0x53, 0x57, 0xb6, 0x20b, 0x264, 0x268, 0x29e, 0x2a2, 0x341, 0x345, 0x350, 0x359, 0x36b, 0x36f

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x1fd
Body: 0x41, 0x49, 0xd0, 0xfa, 0x11b, 0x11c, 0x17d, 0x186, 0x1fd, 0x206, 0x208

