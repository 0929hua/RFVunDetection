Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x166eb4cb
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x166eb4cb
0x3c: V13 = EQ 0x166eb4cb V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x94]
---
0x41 DUP1
0x42 PUSH4 0x251c1aa3
0x47 EQ
0x48 PUSH2 0x94
0x4b JUMPI
---
0x42: V15 = 0x251c1aa3
0x47: V16 = EQ 0x251c1aa3 V11
0x48: V17 = 0x94
0x4b: JUMPI 0x94 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xbd]
---
0x4c DUP1
0x4d PUSH4 0x81777b78
0x52 EQ
0x53 PUSH2 0xbd
0x56 JUMPI
---
0x4d: V18 = 0x81777b78
0x52: V19 = EQ 0x81777b78 V11
0x53: V20 = 0xbd
0x56: JUMPI 0xbd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe0]
---
0x57 DUP1
0x58 PUSH4 0x87f24484
0x5d EQ
0x5e PUSH2 0xe0
0x61 JUMPI
---
0x58: V21 = 0x87f24484
0x5d: V22 = EQ 0x87f24484 V11
0x5e: V23 = 0xe0
0x61: JUMPI 0xe0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x111]
---
0x62 DUP1
0x63 PUSH4 0xb456ecc5
0x68 EQ
0x69 PUSH2 0x111
0x6c JUMPI
---
0x63: V24 = 0xb456ecc5
0x68: V25 = EQ 0xb456ecc5 V11
0x69: V26 = 0x111
0x6c: JUMPI 0x111 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x91]
---
Predecessors: [0xd]
Successors: [0x18a]
---
0x6f JUMPDEST
0x70 PUSH2 0x92
0x73 PUSH1 0x4
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 PUSH1 0x0
0x7a NOT
0x7b AND
0x7c SWAP1
0x7d PUSH1 0x20
0x7f ADD
0x80 SWAP1
0x81 SWAP2
0x82 SWAP1
0x83 DUP1
0x84 CALLDATALOAD
0x85 SWAP1
0x86 PUSH1 0x20
0x88 ADD
0x89 SWAP1
0x8a SWAP2
0x8b SWAP1
0x8c POP
0x8d POP
0x8e PUSH2 0x18a
0x91 JUMP
---
0x6f: JUMPDEST 
0x70: V27 = 0x92
0x73: V28 = 0x4
0x77: V29 = CALLDATALOAD 0x4
0x78: V30 = 0x0
0x7a: V31 = NOT 0x0
0x7b: V32 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V29
0x7d: V33 = 0x20
0x7f: V34 = ADD 0x20 0x4
0x84: V35 = CALLDATALOAD 0x24
0x86: V36 = 0x20
0x88: V37 = ADD 0x20 0x24
0x8e: V38 = 0x18a
0x91: JUMP 0x18a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x92, V32, V35]
Exit stack: [V11, 0x92, V32, V35]

================================

Block 0x92
[0x92:0x93]
---
Predecessors: [0x1d1]
Successors: []
---
0x92 JUMPDEST
0x93 STOP
---
0x92: JUMPDEST 
0x93: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x94
[0x94:0x9a]
---
Predecessors: [0x41]
Successors: [0x9b, 0x9f]
---
0x94 JUMPDEST
0x95 CALLVALUE
0x96 ISZERO
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x94: JUMPDEST 
0x95: V39 = CALLVALUE
0x96: V40 = ISZERO V39
0x97: V41 = 0x9f
0x9a: JUMPI 0x9f V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x94]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V42 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9f
[0x9f:0xa6]
---
Predecessors: [0x94]
Successors: [0x1d5]
---
0x9f JUMPDEST
0xa0 PUSH2 0xa7
0xa3 PUSH2 0x1d5
0xa6 JUMP
---
0x9f: JUMPDEST 
0xa0: V43 = 0xa7
0xa3: V44 = 0x1d5
0xa6: JUMP 0x1d5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa7]
Exit stack: [V11, 0xa7]

================================

Block 0xa7
[0xa7:0xbc]
---
Predecessors: [0x1d5]
Successors: []
---
0xa7 JUMPDEST
0xa8 PUSH1 0x40
0xaa MLOAD
0xab DUP1
0xac DUP3
0xad DUP2
0xae MSTORE
0xaf PUSH1 0x20
0xb1 ADD
0xb2 SWAP2
0xb3 POP
0xb4 POP
0xb5 PUSH1 0x40
0xb7 MLOAD
0xb8 DUP1
0xb9 SWAP2
0xba SUB
0xbb SWAP1
0xbc RETURN
---
0xa7: JUMPDEST 
0xa8: V45 = 0x40
0xaa: V46 = M[0x40]
0xae: M[V46] = V142
0xaf: V47 = 0x20
0xb1: V48 = ADD 0x20 V46
0xb5: V49 = 0x40
0xb7: V50 = M[0x40]
0xba: V51 = SUB V48 V50
0xbc: RETURN V50 V51
---
Entry stack: [V11, 0xa7, V142]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa7]

================================

Block 0xbd
[0xbd:0xdd]
---
Predecessors: [0x4c]
Successors: [0x1db]
---
0xbd JUMPDEST
0xbe PUSH2 0xde
0xc1 PUSH1 0x4
0xc3 DUP1
0xc4 DUP1
0xc5 CALLDATALOAD
0xc6 SWAP1
0xc7 PUSH1 0x20
0xc9 ADD
0xca SWAP1
0xcb DUP3
0xcc ADD
0xcd DUP1
0xce CALLDATALOAD
0xcf SWAP1
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP2
0xd4 SWAP1
0xd5 SWAP2
0xd6 SWAP3
0xd7 SWAP1
0xd8 POP
0xd9 POP
0xda PUSH2 0x1db
0xdd JUMP
---
0xbd: JUMPDEST 
0xbe: V52 = 0xde
0xc1: V53 = 0x4
0xc5: V54 = CALLDATALOAD 0x4
0xc7: V55 = 0x20
0xc9: V56 = ADD 0x20 0x4
0xcc: V57 = ADD 0x4 V54
0xce: V58 = CALLDATALOAD V57
0xd0: V59 = 0x20
0xd2: V60 = ADD 0x20 V57
0xda: V61 = 0x1db
0xdd: JUMP 0x1db
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xde, V60, V58]
Exit stack: [V11, 0xde, V60, V58]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: [0x2a5]
Successors: []
---
0xde JUMPDEST
0xdf STOP
---
0xde: JUMPDEST 
0xdf: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0x57]
Successors: [0xe7, 0xeb]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V62 = CALLVALUE
0xe2: V63 = ISZERO V62
0xe3: V64 = 0xeb
0xe6: JUMPI 0xeb V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V65 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0xe0]
Successors: [0x2a9]
---
0xeb JUMPDEST
0xec PUSH2 0xf3
0xef PUSH2 0x2a9
0xf2 JUMP
---
0xeb: JUMPDEST 
0xec: V66 = 0xf3
0xef: V67 = 0x2a9
0xf2: JUMP 0x2a9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V11, 0xf3]

================================

Block 0xf3
[0xf3:0x110]
---
Predecessors: [0x2a9]
Successors: []
---
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 DUP3
0xf9 PUSH1 0x0
0xfb NOT
0xfc AND
0xfd PUSH1 0x0
0xff NOT
0x100 AND
0x101 DUP2
0x102 MSTORE
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP2
0x107 POP
0x108 POP
0x109 PUSH1 0x40
0x10b MLOAD
0x10c DUP1
0x10d SWAP2
0x10e SUB
0x10f SWAP1
0x110 RETURN
---
0xf3: JUMPDEST 
0xf4: V68 = 0x40
0xf6: V69 = M[0x40]
0xf9: V70 = 0x0
0xfb: V71 = NOT 0x0
0xfc: V72 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V198
0xfd: V73 = 0x0
0xff: V74 = NOT 0x0
0x100: V75 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V72
0x102: M[V69] = V75
0x103: V76 = 0x20
0x105: V77 = ADD 0x20 V69
0x109: V78 = 0x40
0x10b: V79 = M[0x40]
0x10e: V80 = SUB V77 V79
0x110: RETURN V79 V80
---
Entry stack: [V11, 0xf3, V198]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf3]

================================

Block 0x111
[0x111:0x117]
---
Predecessors: [0x62]
Successors: [0x118, 0x11c]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x111: JUMPDEST 
0x112: V81 = CALLVALUE
0x113: V82 = ISZERO V81
0x114: V83 = 0x11c
0x117: JUMPI 0x11c V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x111]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V84 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11c
[0x11c:0x16b]
---
Predecessors: [0x111]
Successors: [0x2af]
---
0x11c JUMPDEST
0x11d PUSH2 0x16c
0x120 PUSH1 0x4
0x122 DUP1
0x123 DUP1
0x124 CALLDATALOAD
0x125 SWAP1
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP1
0x12a DUP3
0x12b ADD
0x12c DUP1
0x12d CALLDATALOAD
0x12e SWAP1
0x12f PUSH1 0x20
0x131 ADD
0x132 SWAP1
0x133 DUP1
0x134 DUP1
0x135 PUSH1 0x1f
0x137 ADD
0x138 PUSH1 0x20
0x13a DUP1
0x13b SWAP2
0x13c DIV
0x13d MUL
0x13e PUSH1 0x20
0x140 ADD
0x141 PUSH1 0x40
0x143 MLOAD
0x144 SWAP1
0x145 DUP2
0x146 ADD
0x147 PUSH1 0x40
0x149 MSTORE
0x14a DUP1
0x14b SWAP4
0x14c SWAP3
0x14d SWAP2
0x14e SWAP1
0x14f DUP2
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x20
0x154 ADD
0x155 DUP4
0x156 DUP4
0x157 DUP1
0x158 DUP3
0x159 DUP5
0x15a CALLDATACOPY
0x15b DUP3
0x15c ADD
0x15d SWAP2
0x15e POP
0x15f POP
0x160 POP
0x161 POP
0x162 POP
0x163 POP
0x164 SWAP2
0x165 SWAP1
0x166 POP
0x167 POP
0x168 PUSH2 0x2af
0x16b JUMP
---
0x11c: JUMPDEST 
0x11d: V85 = 0x16c
0x120: V86 = 0x4
0x124: V87 = CALLDATALOAD 0x4
0x126: V88 = 0x20
0x128: V89 = ADD 0x20 0x4
0x12b: V90 = ADD 0x4 V87
0x12d: V91 = CALLDATALOAD V90
0x12f: V92 = 0x20
0x131: V93 = ADD 0x20 V90
0x135: V94 = 0x1f
0x137: V95 = ADD 0x1f V91
0x138: V96 = 0x20
0x13c: V97 = DIV V95 0x20
0x13d: V98 = MUL V97 0x20
0x13e: V99 = 0x20
0x140: V100 = ADD 0x20 V98
0x141: V101 = 0x40
0x143: V102 = M[0x40]
0x146: V103 = ADD V102 V100
0x147: V104 = 0x40
0x149: M[0x40] = V103
0x151: M[V102] = V91
0x152: V105 = 0x20
0x154: V106 = ADD 0x20 V102
0x15a: CALLDATACOPY V106 V93 V91
0x15c: V107 = ADD V106 V91
0x168: V108 = 0x2af
0x16b: JUMP 0x2af
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16c, V102]
Exit stack: [V11, 0x16c, V102]

================================

Block 0x16c
[0x16c:0x189]
---
Predecessors: [0x2e7]
Successors: []
---
0x16c JUMPDEST
0x16d PUSH1 0x40
0x16f MLOAD
0x170 DUP1
0x171 DUP3
0x172 PUSH1 0x0
0x174 NOT
0x175 AND
0x176 PUSH1 0x0
0x178 NOT
0x179 AND
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e ADD
0x17f SWAP2
0x180 POP
0x181 POP
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 SWAP2
0x187 SUB
0x188 SWAP1
0x189 RETURN
---
0x16c: JUMPDEST 
0x16d: V109 = 0x40
0x16f: V110 = M[0x40]
0x172: V111 = 0x0
0x174: V112 = NOT 0x0
0x175: V113 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V234
0x176: V114 = 0x0
0x178: V115 = NOT 0x0
0x179: V116 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V113
0x17b: M[V110] = V116
0x17c: V117 = 0x20
0x17e: V118 = ADD 0x20 V110
0x182: V119 = 0x40
0x184: V120 = M[0x40]
0x187: V121 = SUB V118 V120
0x189: RETURN V120 V121
---
Entry stack: [V11, V234]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x18a
[0x18a:0x1aa]
---
Predecessors: [0x6f]
Successors: [0x1ab, 0x1b7]
---
0x18a JUMPDEST
0x18b PUSH1 0x0
0x18d ADDRESS
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 BALANCE
0x1a5 EQ
0x1a6 DUP1
0x1a7 PUSH2 0x1b7
0x1aa JUMPI
---
0x18a: JUMPDEST 
0x18b: V122 = 0x0
0x18d: V123 = ADDRESS
0x18e: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x1a4: V126 = BALANCE V125
0x1a5: V127 = EQ V126 0x0
0x1a7: V128 = 0x1b7
0x1aa: JUMPI 0x1b7 V127
---
Entry stack: [V11, 0x92, V32, V35]
Stack pops: 0
Stack additions: [V127]
Exit stack: [V11, 0x92, V32, V35, V127]

================================

Block 0x1ab
[0x1ab:0x1b6]
---
Predecessors: [0x18a]
Successors: [0x1b7]
---
0x1ab POP
0x1ac PUSH8 0xde0b6b3a7640000
0x1b5 CALLVALUE
0x1b6 GT
---
0x1ac: V129 = 0xde0b6b3a7640000
0x1b5: V130 = CALLVALUE
0x1b6: V131 = GT V130 0xde0b6b3a7640000
---
Entry stack: [V11, 0x92, V32, V35, V127]
Stack pops: 1
Stack additions: [V131]
Exit stack: [V11, 0x92, V32, V35, V131]

================================

Block 0x1b7
[0x1b7:0x1bc]
---
Predecessors: [0x18a, 0x1ab]
Successors: [0x1bd, 0x1d1]
---
0x1b7 JUMPDEST
0x1b8 ISZERO
0x1b9 PUSH2 0x1d1
0x1bc JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V132 = ISZERO S0
0x1b9: V133 = 0x1d1
0x1bc: JUMPI 0x1d1 V132
---
Entry stack: [V11, 0x92, V32, V35, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x92, V32, V35]

================================

Block 0x1bd
[0x1bd:0x1d0]
---
Predecessors: [0x1b7]
Successors: [0x1d1]
---
0x1bd DUP1
0x1be TIMESTAMP
0x1bf ADD
0x1c0 PUSH1 0x1
0x1c2 DUP2
0x1c3 SWAP1
0x1c4 SSTORE
0x1c5 POP
0x1c6 DUP2
0x1c7 PUSH1 0x0
0x1c9 DUP2
0x1ca PUSH1 0x0
0x1cc NOT
0x1cd AND
0x1ce SWAP1
0x1cf SSTORE
0x1d0 POP
---
0x1be: V134 = TIMESTAMP
0x1bf: V135 = ADD V134 V35
0x1c0: V136 = 0x1
0x1c4: S[0x1] = V135
0x1c7: V137 = 0x0
0x1ca: V138 = 0x0
0x1cc: V139 = NOT 0x0
0x1cd: V140 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V32
0x1cf: S[0x0] = V140
---
Entry stack: [V11, 0x92, V32, V35]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x92, V32, V35]

================================

Block 0x1d1
[0x1d1:0x1d4]
---
Predecessors: [0x1b7, 0x1bd]
Successors: [0x92]
---
0x1d1 JUMPDEST
0x1d2 POP
0x1d3 POP
0x1d4 JUMP
---
0x1d1: JUMPDEST 
0x1d4: JUMP 0x92
---
Entry stack: [V11, 0x92, V32, V35]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d5
[0x1d5:0x1da]
---
Predecessors: [0x9f]
Successors: [0xa7]
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x1
0x1d8 SLOAD
0x1d9 DUP2
0x1da JUMP
---
0x1d5: JUMPDEST 
0x1d6: V141 = 0x1
0x1d8: V142 = S[0x1]
0x1da: JUMP 0xa7
---
Entry stack: [V11, 0xa7]
Stack pops: 1
Stack additions: [S0, V142]
Exit stack: [V11, 0xa7, V142]

================================

Block 0x1db
[0x1db:0x20a]
---
Predecessors: [0xbd]
Successors: [0x20b, 0x211]
---
0x1db JUMPDEST
0x1dc DUP2
0x1dd DUP2
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 DUP1
0x1e2 DUP4
0x1e3 DUP4
0x1e4 DUP1
0x1e5 DUP3
0x1e6 DUP5
0x1e7 CALLDATACOPY
0x1e8 DUP3
0x1e9 ADD
0x1ea SWAP2
0x1eb POP
0x1ec POP
0x1ed SWAP3
0x1ee POP
0x1ef POP
0x1f0 POP
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 SWAP2
0x1f6 SUB
0x1f7 SWAP1
0x1f8 SHA3
0x1f9 PUSH1 0x0
0x1fb NOT
0x1fc AND
0x1fd PUSH1 0x0
0x1ff SLOAD
0x200 PUSH1 0x0
0x202 NOT
0x203 AND
0x204 EQ
0x205 DUP1
0x206 ISZERO
0x207 PUSH2 0x211
0x20a JUMPI
---
0x1db: JUMPDEST 
0x1de: V143 = 0x40
0x1e0: V144 = M[0x40]
0x1e7: CALLDATACOPY V144 V60 V58
0x1e9: V145 = ADD V144 V58
0x1f1: V146 = 0x40
0x1f3: V147 = M[0x40]
0x1f6: V148 = SUB V145 V147
0x1f8: V149 = SHA3 V147 V148
0x1f9: V150 = 0x0
0x1fb: V151 = NOT 0x0
0x1fc: V152 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V149
0x1fd: V153 = 0x0
0x1ff: V154 = S[0x0]
0x200: V155 = 0x0
0x202: V156 = NOT 0x0
0x203: V157 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V154
0x204: V158 = EQ V157 V152
0x206: V159 = ISZERO V158
0x207: V160 = 0x211
0x20a: JUMPI 0x211 V159
---
Entry stack: [V11, 0xde, V60, V58]
Stack pops: 2
Stack additions: [S1, S0, V158]
Exit stack: [V11, 0xde, V60, V58, V158]

================================

Block 0x20b
[0x20b:0x210]
---
Predecessors: [0x1db]
Successors: [0x211]
---
0x20b POP
0x20c PUSH1 0x1
0x20e SLOAD
0x20f TIMESTAMP
0x210 GT
---
0x20c: V161 = 0x1
0x20e: V162 = S[0x1]
0x20f: V163 = TIMESTAMP
0x210: V164 = GT V163 V162
---
Entry stack: [V11, 0xde, V60, V58, V158]
Stack pops: 1
Stack additions: [V164]
Exit stack: [V11, 0xde, V60, V58, V164]

================================

Block 0x211
[0x211:0x217]
---
Predecessors: [0x1db, 0x20b]
Successors: [0x218, 0x248]
---
0x211 JUMPDEST
0x212 DUP1
0x213 ISZERO
0x214 PUSH2 0x248
0x217 JUMPI
---
0x211: JUMPDEST 
0x213: V165 = ISZERO S0
0x214: V166 = 0x248
0x217: JUMPI 0x248 V165
---
Entry stack: [V11, 0xde, V60, V58, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xde, V60, V58, S0]

================================

Block 0x218
[0x218:0x247]
---
Predecessors: [0x211]
Successors: [0x248]
---
0x218 POP
0x219 ORIGIN
0x21a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22f AND
0x230 CALLER
0x231 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x246 AND
0x247 EQ
---
0x219: V167 = ORIGIN
0x21a: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x230: V170 = CALLER
0x231: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x246: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x247: V173 = EQ V172 V169
---
Entry stack: [V11, 0xde, V60, V58, S0]
Stack pops: 1
Stack additions: [V173]
Exit stack: [V11, 0xde, V60, V58, V173]

================================

Block 0x248
[0x248:0x24d]
---
Predecessors: [0x211, 0x218]
Successors: [0x24e, 0x2a5]
---
0x248 JUMPDEST
0x249 ISZERO
0x24a PUSH2 0x2a5
0x24d JUMPI
---
0x248: JUMPDEST 
0x249: V174 = ISZERO S0
0x24a: V175 = 0x2a5
0x24d: JUMPI 0x2a5 V174
---
Entry stack: [V11, 0xde, V60, V58, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xde, V60, V58]

================================

Block 0x24e
[0x24e:0x29f]
---
Predecessors: [0x248]
Successors: [0x2a0, 0x2a4]
---
0x24e CALLER
0x24f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x264 AND
0x265 PUSH2 0x8fc
0x268 ADDRESS
0x269 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27e AND
0x27f BALANCE
0x280 SWAP1
0x281 DUP2
0x282 ISZERO
0x283 MUL
0x284 SWAP1
0x285 PUSH1 0x40
0x287 MLOAD
0x288 PUSH1 0x0
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP1
0x28e DUP4
0x28f SUB
0x290 DUP2
0x291 DUP6
0x292 DUP9
0x293 DUP9
0x294 CALL
0x295 SWAP4
0x296 POP
0x297 POP
0x298 POP
0x299 POP
0x29a ISZERO
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x24e: V176 = CALLER
0x24f: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x264: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x265: V179 = 0x8fc
0x268: V180 = ADDRESS
0x269: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x27e: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x27f: V183 = BALANCE V182
0x282: V184 = ISZERO V183
0x283: V185 = MUL V184 0x8fc
0x285: V186 = 0x40
0x287: V187 = M[0x40]
0x288: V188 = 0x0
0x28a: V189 = 0x40
0x28c: V190 = M[0x40]
0x28f: V191 = SUB V187 V190
0x294: V192 = CALL V185 V178 V183 V190 V191 V190 0x0
0x29a: V193 = ISZERO V192
0x29b: V194 = ISZERO V193
0x29c: V195 = 0x2a4
0x29f: JUMPI 0x2a4 V194
---
Entry stack: [V11, 0xde, V60, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde, V60, V58]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x24e]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V196 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0xde, V60, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde, V60, V58]

================================

Block 0x2a4
[0x2a4:0x2a4]
---
Predecessors: [0x24e]
Successors: [0x2a5]
---
0x2a4 JUMPDEST
---
0x2a4: JUMPDEST 
---
Entry stack: [V11, 0xde, V60, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde, V60, V58]

================================

Block 0x2a5
[0x2a5:0x2a8]
---
Predecessors: [0x248, 0x2a4]
Successors: [0xde]
---
0x2a5 JUMPDEST
0x2a6 POP
0x2a7 POP
0x2a8 JUMP
---
0x2a5: JUMPDEST 
0x2a8: JUMP 0xde
---
Entry stack: [V11, 0xde, V60, V58]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a9
[0x2a9:0x2ae]
---
Predecessors: [0xeb]
Successors: [0xf3]
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x0
0x2ac SLOAD
0x2ad DUP2
0x2ae JUMP
---
0x2a9: JUMPDEST 
0x2aa: V197 = 0x0
0x2ac: V198 = S[0x0]
0x2ae: JUMP 0xf3
---
Entry stack: [V11, 0xf3]
Stack pops: 1
Stack additions: [S0, V198]
Exit stack: [V11, 0xf3, V198]

================================

Block 0x2af
[0x2af:0x2c1]
---
Predecessors: [0x11c]
Successors: [0x2c2]
---
0x2af JUMPDEST
0x2b0 PUSH1 0x0
0x2b2 DUP2
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 DUP3
0x2b8 DUP1
0x2b9 MLOAD
0x2ba SWAP1
0x2bb PUSH1 0x20
0x2bd ADD
0x2be SWAP1
0x2bf DUP1
0x2c0 DUP4
0x2c1 DUP4
---
0x2af: JUMPDEST 
0x2b0: V199 = 0x0
0x2b3: V200 = 0x40
0x2b5: V201 = M[0x40]
0x2b9: V202 = M[V102]
0x2bb: V203 = 0x20
0x2bd: V204 = ADD 0x20 V102
---
Entry stack: [V11, 0x16c, V102]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V201, V201, V204, V202, V202, V201, V204]
Exit stack: [V11, 0x16c, V102, 0x0, V102, V201, V201, V204, V202, V202, V201, V204]

================================

Block 0x2c2
[0x2c2:0x2cc]
---
Predecessors: [0x2af, 0x2cd]
Successors: [0x2cd, 0x2e7]
---
0x2c2 JUMPDEST
0x2c3 PUSH1 0x20
0x2c5 DUP4
0x2c6 LT
0x2c7 ISZERO
0x2c8 ISZERO
0x2c9 PUSH2 0x2e7
0x2cc JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V205 = 0x20
0x2c6: V206 = LT S2 0x20
0x2c7: V207 = ISZERO V206
0x2c8: V208 = ISZERO V207
0x2c9: V209 = 0x2e7
0x2cc: JUMPI 0x2e7 V208
---
Entry stack: [V11, 0x16c, V102, 0x0, V102, V201, V201, V204, V202, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x16c, V102, 0x0, V102, V201, V201, V204, V202, S2, S1, S0]

================================

Block 0x2cd
[0x2cd:0x2e6]
---
Predecessors: [0x2c2]
Successors: [0x2c2]
---
0x2cd DUP1
0x2ce MLOAD
0x2cf DUP3
0x2d0 MSTORE
0x2d1 PUSH1 0x20
0x2d3 DUP3
0x2d4 ADD
0x2d5 SWAP2
0x2d6 POP
0x2d7 PUSH1 0x20
0x2d9 DUP2
0x2da ADD
0x2db SWAP1
0x2dc POP
0x2dd PUSH1 0x20
0x2df DUP4
0x2e0 SUB
0x2e1 SWAP3
0x2e2 POP
0x2e3 PUSH2 0x2c2
0x2e6 JUMP
---
0x2ce: V210 = M[S0]
0x2d0: M[S1] = V210
0x2d1: V211 = 0x20
0x2d4: V212 = ADD S1 0x20
0x2d7: V213 = 0x20
0x2da: V214 = ADD S0 0x20
0x2dd: V215 = 0x20
0x2e0: V216 = SUB S2 0x20
0x2e3: V217 = 0x2c2
0x2e6: JUMP 0x2c2
---
Entry stack: [V11, 0x16c, V102, 0x0, V102, V201, V201, V204, V202, S2, S1, S0]
Stack pops: 3
Stack additions: [V216, V212, V214]
Exit stack: [V11, 0x16c, V102, 0x0, V102, V201, V201, V204, V202, V216, V212, V214]

================================

Block 0x2e7
[0x2e7:0x31a]
---
Predecessors: [0x2c2]
Successors: [0x16c]
---
0x2e7 JUMPDEST
0x2e8 PUSH1 0x1
0x2ea DUP4
0x2eb PUSH1 0x20
0x2ed SUB
0x2ee PUSH2 0x100
0x2f1 EXP
0x2f2 SUB
0x2f3 DUP1
0x2f4 NOT
0x2f5 DUP3
0x2f6 MLOAD
0x2f7 AND
0x2f8 DUP2
0x2f9 DUP5
0x2fa MLOAD
0x2fb AND
0x2fc DUP1
0x2fd DUP3
0x2fe OR
0x2ff DUP6
0x300 MSTORE
0x301 POP
0x302 POP
0x303 POP
0x304 POP
0x305 POP
0x306 POP
0x307 SWAP1
0x308 POP
0x309 ADD
0x30a SWAP2
0x30b POP
0x30c POP
0x30d PUSH1 0x40
0x30f MLOAD
0x310 DUP1
0x311 SWAP2
0x312 SUB
0x313 SWAP1
0x314 SHA3
0x315 SWAP1
0x316 POP
0x317 SWAP2
0x318 SWAP1
0x319 POP
0x31a JUMP
---
0x2e7: JUMPDEST 
0x2e8: V218 = 0x1
0x2eb: V219 = 0x20
0x2ed: V220 = SUB 0x20 S2
0x2ee: V221 = 0x100
0x2f1: V222 = EXP 0x100 V220
0x2f2: V223 = SUB V222 0x1
0x2f4: V224 = NOT V223
0x2f6: V225 = M[S0]
0x2f7: V226 = AND V225 V224
0x2fa: V227 = M[S1]
0x2fb: V228 = AND V227 V223
0x2fe: V229 = OR V226 V228
0x300: M[S1] = V229
0x309: V230 = ADD V202 V201
0x30d: V231 = 0x40
0x30f: V232 = M[0x40]
0x312: V233 = SUB V230 V232
0x314: V234 = SHA3 V232 V233
0x31a: JUMP 0x16c
---
Entry stack: [V11, 0x16c, V102, 0x0, V102, V201, V201, V204, V202, S2, S1, S0]
Stack pops: 11
Stack additions: [V234]
Exit stack: [V11, V234]

================================

Block 0x31b
[0x31b:0x346]
---
Predecessors: []
Successors: []
---
0x31b STOP
0x31c LOG1
0x31d PUSH6 0x627a7a723058
0x324 SHA3
0x325 MISSING 0xda
0x326 PUSH21 0x89671f81446b5de4ad28cc90d53192300f80008043
0x33c LOG3
0x33d CALLDATACOPY
0x33e MISSING 0xda
0x33f MISSING 0xae
0x340 MISSING 0x4f
0x341 DUP3
0x342 SWAP8
0x343 SWAP15
0x344 MISSING 0xc0
0x345 STOP
0x346 MISSING 0x29
---
0x31b: STOP 
0x31c: LOG S0 S1 S2
0x31d: V235 = 0x627a7a723058
0x324: V236 = SHA3 0x627a7a723058 S3
0x325: MISSING 0xda
0x326: V237 = 0x89671f81446b5de4ad28cc90d53192300f80008043
0x33c: LOG 0x89671f81446b5de4ad28cc90d53192300f80008043 S0 S1 S2 S3
0x33d: CALLDATACOPY S4 S5 S6
0x33e: MISSING 0xda
0x33f: MISSING 0xae
0x340: MISSING 0x4f
0x344: MISSING 0xc0
0x345: STOP 
0x346: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V236, S14, S0, S1, S2, S3, S4, S5, S6, S2, S8, S9, S10, S11, S12, S13, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0x166eb4cb
Entry block: 0x6f
Exit block: 0x92
Body: 0x6f, 0x92, 0x18a, 0x1ab, 0x1b7, 0x1bd, 0x1d1

Function 1:
Public function signature: 0x251c1aa3
Entry block: 0x94
Exit block: 0xa7
Body: 0x94, 0x9b, 0x9f, 0xa7, 0x1d5

Function 2:
Public function signature: 0x81777b78
Entry block: 0xbd
Exit block: 0xde
Body: 0xbd, 0xde, 0x1db, 0x20b, 0x211, 0x218, 0x248, 0x24e, 0x2a0, 0x2a4, 0x2a5

Function 3:
Public function signature: 0x87f24484
Entry block: 0xe0
Exit block: 0xf3
Body: 0xe0, 0xe7, 0xeb, 0xf3, 0x2a9

Function 4:
Public function signature: 0xb456ecc5
Entry block: 0x111
Exit block: 0x16c
Body: 0x111, 0x118, 0x11c, 0x16c, 0x2af, 0x2c2, 0x2cd, 0x2e7

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

