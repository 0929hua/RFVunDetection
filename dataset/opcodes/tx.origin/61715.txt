Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x81]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x81
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x81
0xa: JUMPI 0x81 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x86]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x95ea7b3
0x3a EQ
0x3b PUSH2 0x86
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x95ea7b3
0x3a: V12 = EQ 0x95ea7b3 V10
0x3b: V13 = 0x86
0x3e: JUMPI 0x86 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xe0]
---
0x3f DUP1
0x40 PUSH4 0x18160ddd
0x45 EQ
0x46 PUSH2 0xe0
0x49 JUMPI
---
0x40: V14 = 0x18160ddd
0x45: V15 = EQ 0x18160ddd V10
0x46: V16 = 0xe0
0x49: JUMPI 0xe0 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x109]
---
0x4a DUP1
0x4b PUSH4 0x23b872dd
0x50 EQ
0x51 PUSH2 0x109
0x54 JUMPI
---
0x4b: V17 = 0x23b872dd
0x50: V18 = EQ 0x23b872dd V10
0x51: V19 = 0x109
0x54: JUMPI 0x109 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x182]
---
0x55 DUP1
0x56 PUSH4 0x70a08231
0x5b EQ
0x5c PUSH2 0x182
0x5f JUMPI
---
0x56: V20 = 0x70a08231
0x5b: V21 = EQ 0x70a08231 V10
0x5c: V22 = 0x182
0x5f: JUMPI 0x182 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1cf]
---
0x60 DUP1
0x61 PUSH4 0xa9059cbb
0x66 EQ
0x67 PUSH2 0x1cf
0x6a JUMPI
---
0x61: V23 = 0xa9059cbb
0x66: V24 = EQ 0xa9059cbb V10
0x67: V25 = 0x1cf
0x6a: JUMPI 0x1cf V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x229]
---
0x6b DUP1
0x6c PUSH4 0xdd62ed3e
0x71 EQ
0x72 PUSH2 0x229
0x75 JUMPI
---
0x6c: V26 = 0xdd62ed3e
0x71: V27 = EQ 0xdd62ed3e V10
0x72: V28 = 0x229
0x75: JUMPI 0x229 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x295]
---
0x76 DUP1
0x77 PUSH4 0xeefa597b
0x7c EQ
0x7d PUSH2 0x295
0x80 JUMPI
---
0x77: V29 = 0xeefa597b
0x7c: V30 = EQ 0xeefa597b V10
0x7d: V31 = 0x295
0x80: JUMPI 0x295 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x85]
---
Predecessors: [0x0, 0x76]
Successors: []
---
0x81 JUMPDEST
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x81: JUMPDEST 
0x82: V32 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x86
[0x86:0x8c]
---
Predecessors: [0xb]
Successors: [0x8d, 0x91]
---
0x86 JUMPDEST
0x87 CALLVALUE
0x88 ISZERO
0x89 PUSH2 0x91
0x8c JUMPI
---
0x86: JUMPDEST 
0x87: V33 = CALLVALUE
0x88: V34 = ISZERO V33
0x89: V35 = 0x91
0x8c: JUMPI 0x91 V34
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x90]
---
Predecessors: [0x86]
Successors: []
---
0x8d PUSH1 0x0
0x8f DUP1
0x90 REVERT
---
0x8d: V36 = 0x0
0x90: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x91
[0x91:0xc5]
---
Predecessors: [0x86]
Successors: [0x2c2]
---
0x91 JUMPDEST
0x92 PUSH2 0xc6
0x95 PUSH1 0x4
0x97 DUP1
0x98 DUP1
0x99 CALLDATALOAD
0x9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf AND
0xb0 SWAP1
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 SWAP1
0xb5 SWAP2
0xb6 SWAP1
0xb7 DUP1
0xb8 CALLDATALOAD
0xb9 SWAP1
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP1
0xbe SWAP2
0xbf SWAP1
0xc0 POP
0xc1 POP
0xc2 PUSH2 0x2c2
0xc5 JUMP
---
0x91: JUMPDEST 
0x92: V37 = 0xc6
0x95: V38 = 0x4
0x99: V39 = CALLDATALOAD 0x4
0x9a: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xb1: V42 = 0x20
0xb3: V43 = ADD 0x20 0x4
0xb8: V44 = CALLDATALOAD 0x24
0xba: V45 = 0x20
0xbc: V46 = ADD 0x20 0x24
0xc2: V47 = 0x2c2
0xc5: JUMP 0x2c2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc6, V41, V44]
Exit stack: [V10, 0xc6, V41, V44]

================================

Block 0xc6
[0xc6:0xdf]
---
Predecessors: [0x444]
Successors: []
---
0xc6 JUMPDEST
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb DUP3
0xcc ISZERO
0xcd ISZERO
0xce ISZERO
0xcf ISZERO
0xd0 DUP2
0xd1 MSTORE
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP2
0xd6 POP
0xd7 POP
0xd8 PUSH1 0x40
0xda MLOAD
0xdb DUP1
0xdc SWAP2
0xdd SUB
0xde SWAP1
0xdf RETURN
---
0xc6: JUMPDEST 
0xc7: V48 = 0x40
0xc9: V49 = M[0x40]
0xcc: V50 = ISZERO 0x1
0xcd: V51 = ISZERO 0x0
0xce: V52 = ISZERO 0x1
0xcf: V53 = ISZERO 0x0
0xd1: M[V49] = 0x1
0xd2: V54 = 0x20
0xd4: V55 = ADD 0x20 V49
0xd8: V56 = 0x40
0xda: V57 = M[0x40]
0xdd: V58 = SUB V55 V57
0xdf: RETURN V57 V58
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0x3f]
Successors: [0xe7, 0xeb]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V59 = CALLVALUE
0xe2: V60 = ISZERO V59
0xe3: V61 = 0xeb
0xe6: JUMPI 0xeb V60
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V62 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0xe0]
Successors: [0x44a]
---
0xeb JUMPDEST
0xec PUSH2 0xf3
0xef PUSH2 0x44a
0xf2 JUMP
---
0xeb: JUMPDEST 
0xec: V63 = 0xf3
0xef: V64 = 0x44a
0xf2: JUMP 0x44a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V10, 0xf3]

================================

Block 0xf3
[0xf3:0x108]
---
Predecessors: [0x44a]
Successors: []
---
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 DUP3
0xf9 DUP2
0xfa MSTORE
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP2
0xff POP
0x100 POP
0x101 PUSH1 0x40
0x103 MLOAD
0x104 DUP1
0x105 SWAP2
0x106 SUB
0x107 SWAP1
0x108 RETURN
---
0xf3: JUMPDEST 
0xf4: V65 = 0x40
0xf6: V66 = M[0x40]
0xfa: M[V66] = V262
0xfb: V67 = 0x20
0xfd: V68 = ADD 0x20 V66
0x101: V69 = 0x40
0x103: V70 = M[0x40]
0x106: V71 = SUB V68 V70
0x108: RETURN V70 V71
---
Entry stack: [V10, 0xf3, V262]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf3]

================================

Block 0x109
[0x109:0x10f]
---
Predecessors: [0x4a]
Successors: [0x110, 0x114]
---
0x109 JUMPDEST
0x10a CALLVALUE
0x10b ISZERO
0x10c PUSH2 0x114
0x10f JUMPI
---
0x109: JUMPDEST 
0x10a: V72 = CALLVALUE
0x10b: V73 = ISZERO V72
0x10c: V74 = 0x114
0x10f: JUMPI 0x114 V73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0x109]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V75 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x114
[0x114:0x167]
---
Predecessors: [0x109]
Successors: [0x450]
---
0x114 JUMPDEST
0x115 PUSH2 0x168
0x118 PUSH1 0x4
0x11a DUP1
0x11b DUP1
0x11c CALLDATALOAD
0x11d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132 AND
0x133 SWAP1
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP1
0x138 SWAP2
0x139 SWAP1
0x13a DUP1
0x13b CALLDATALOAD
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 SWAP1
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP1
0x157 SWAP2
0x158 SWAP1
0x159 DUP1
0x15a CALLDATALOAD
0x15b SWAP1
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP1
0x160 SWAP2
0x161 SWAP1
0x162 POP
0x163 POP
0x164 PUSH2 0x450
0x167 JUMP
---
0x114: JUMPDEST 
0x115: V76 = 0x168
0x118: V77 = 0x4
0x11c: V78 = CALLDATALOAD 0x4
0x11d: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x132: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x134: V81 = 0x20
0x136: V82 = ADD 0x20 0x4
0x13b: V83 = CALLDATALOAD 0x24
0x13c: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x153: V86 = 0x20
0x155: V87 = ADD 0x20 0x24
0x15a: V88 = CALLDATALOAD 0x44
0x15c: V89 = 0x20
0x15e: V90 = ADD 0x20 0x44
0x164: V91 = 0x450
0x167: JUMP 0x450
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x168, V80, V85, V88]
Exit stack: [V10, 0x168, V80, V85, V88]

================================

Block 0x168
[0x168:0x181]
---
Predecessors: [0x6de]
Successors: []
---
0x168 JUMPDEST
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d DUP3
0x16e ISZERO
0x16f ISZERO
0x170 ISZERO
0x171 ISZERO
0x172 DUP2
0x173 MSTORE
0x174 PUSH1 0x20
0x176 ADD
0x177 SWAP2
0x178 POP
0x179 POP
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP1
0x17e SWAP2
0x17f SUB
0x180 SWAP1
0x181 RETURN
---
0x168: JUMPDEST 
0x169: V92 = 0x40
0x16b: V93 = M[0x40]
0x16e: V94 = ISZERO 0x1
0x16f: V95 = ISZERO 0x0
0x170: V96 = ISZERO 0x1
0x171: V97 = ISZERO 0x0
0x173: M[V93] = 0x1
0x174: V98 = 0x20
0x176: V99 = ADD 0x20 V93
0x17a: V100 = 0x40
0x17c: V101 = M[0x40]
0x17f: V102 = SUB V99 V101
0x181: RETURN V101 V102
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x182
[0x182:0x188]
---
Predecessors: [0x55]
Successors: [0x189, 0x18d]
---
0x182 JUMPDEST
0x183 CALLVALUE
0x184 ISZERO
0x185 PUSH2 0x18d
0x188 JUMPI
---
0x182: JUMPDEST 
0x183: V103 = CALLVALUE
0x184: V104 = ISZERO V103
0x185: V105 = 0x18d
0x188: JUMPI 0x18d V104
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x189
[0x189:0x18c]
---
Predecessors: [0x182]
Successors: []
---
0x189 PUSH1 0x0
0x18b DUP1
0x18c REVERT
---
0x189: V106 = 0x0
0x18c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18d
[0x18d:0x1b8]
---
Predecessors: [0x182]
Successors: [0x6e6]
---
0x18d JUMPDEST
0x18e PUSH2 0x1b9
0x191 PUSH1 0x4
0x193 DUP1
0x194 DUP1
0x195 CALLDATALOAD
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac SWAP1
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 SWAP1
0x1b1 SWAP2
0x1b2 SWAP1
0x1b3 POP
0x1b4 POP
0x1b5 PUSH2 0x6e6
0x1b8 JUMP
---
0x18d: JUMPDEST 
0x18e: V107 = 0x1b9
0x191: V108 = 0x4
0x195: V109 = CALLDATALOAD 0x4
0x196: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1ad: V112 = 0x20
0x1af: V113 = ADD 0x20 0x4
0x1b5: V114 = 0x6e6
0x1b8: JUMP 0x6e6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9, V111]
Exit stack: [V10, 0x1b9, V111]

================================

Block 0x1b9
[0x1b9:0x1ce]
---
Predecessors: [0x72b]
Successors: []
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be DUP3
0x1bf DUP2
0x1c0 MSTORE
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 SWAP2
0x1c5 POP
0x1c6 POP
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca DUP1
0x1cb SWAP2
0x1cc SUB
0x1cd SWAP1
0x1ce RETURN
---
0x1b9: JUMPDEST 
0x1ba: V115 = 0x40
0x1bc: V116 = M[0x40]
0x1c0: M[V116] = V395
0x1c1: V117 = 0x20
0x1c3: V118 = ADD 0x20 V116
0x1c7: V119 = 0x40
0x1c9: V120 = M[0x40]
0x1cc: V121 = SUB V118 V120
0x1ce: RETURN V120 V121
---
Entry stack: [V10, V395]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cf
[0x1cf:0x1d5]
---
Predecessors: [0x60]
Successors: [0x1d6, 0x1da]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V122 = CALLVALUE
0x1d1: V123 = ISZERO V122
0x1d2: V124 = 0x1da
0x1d5: JUMPI 0x1da V123
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V125 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1da
[0x1da:0x20e]
---
Predecessors: [0x1cf]
Successors: [0x730]
---
0x1da JUMPDEST
0x1db PUSH2 0x20f
0x1de PUSH1 0x4
0x1e0 DUP1
0x1e1 DUP1
0x1e2 CALLDATALOAD
0x1e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f8 AND
0x1f9 SWAP1
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd SWAP1
0x1fe SWAP2
0x1ff SWAP1
0x200 DUP1
0x201 CALLDATALOAD
0x202 SWAP1
0x203 PUSH1 0x20
0x205 ADD
0x206 SWAP1
0x207 SWAP2
0x208 SWAP1
0x209 POP
0x20a POP
0x20b PUSH2 0x730
0x20e JUMP
---
0x1da: JUMPDEST 
0x1db: V126 = 0x20f
0x1de: V127 = 0x4
0x1e2: V128 = CALLDATALOAD 0x4
0x1e3: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1fa: V131 = 0x20
0x1fc: V132 = ADD 0x20 0x4
0x201: V133 = CALLDATALOAD 0x24
0x203: V134 = 0x20
0x205: V135 = ADD 0x20 0x24
0x20b: V136 = 0x730
0x20e: JUMP 0x730
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x20f, V130, V133]
Exit stack: [V10, 0x20f, V130, V133]

================================

Block 0x20f
[0x20f:0x228]
---
Predecessors: [0x8b4]
Successors: []
---
0x20f JUMPDEST
0x210 PUSH1 0x40
0x212 MLOAD
0x213 DUP1
0x214 DUP3
0x215 ISZERO
0x216 ISZERO
0x217 ISZERO
0x218 ISZERO
0x219 DUP2
0x21a MSTORE
0x21b PUSH1 0x20
0x21d ADD
0x21e SWAP2
0x21f POP
0x220 POP
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 SWAP2
0x226 SUB
0x227 SWAP1
0x228 RETURN
---
0x20f: JUMPDEST 
0x210: V137 = 0x40
0x212: V138 = M[0x40]
0x215: V139 = ISZERO 0x1
0x216: V140 = ISZERO 0x0
0x217: V141 = ISZERO 0x1
0x218: V142 = ISZERO 0x0
0x21a: M[V138] = 0x1
0x21b: V143 = 0x20
0x21d: V144 = ADD 0x20 V138
0x221: V145 = 0x40
0x223: V146 = M[0x40]
0x226: V147 = SUB V144 V146
0x228: RETURN V146 V147
---
Entry stack: [V10, 0x168, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x168, S1]

================================

Block 0x229
[0x229:0x22f]
---
Predecessors: [0x6b]
Successors: [0x230, 0x234]
---
0x229 JUMPDEST
0x22a CALLVALUE
0x22b ISZERO
0x22c PUSH2 0x234
0x22f JUMPI
---
0x229: JUMPDEST 
0x22a: V148 = CALLVALUE
0x22b: V149 = ISZERO V148
0x22c: V150 = 0x234
0x22f: JUMPI 0x234 V149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x230
[0x230:0x233]
---
Predecessors: [0x229]
Successors: []
---
0x230 PUSH1 0x0
0x232 DUP1
0x233 REVERT
---
0x230: V151 = 0x0
0x233: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x234
[0x234:0x27e]
---
Predecessors: [0x229]
Successors: [0x8ba]
---
0x234 JUMPDEST
0x235 PUSH2 0x27f
0x238 PUSH1 0x4
0x23a DUP1
0x23b DUP1
0x23c CALLDATALOAD
0x23d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x252 AND
0x253 SWAP1
0x254 PUSH1 0x20
0x256 ADD
0x257 SWAP1
0x258 SWAP2
0x259 SWAP1
0x25a DUP1
0x25b CALLDATALOAD
0x25c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x271 AND
0x272 SWAP1
0x273 PUSH1 0x20
0x275 ADD
0x276 SWAP1
0x277 SWAP2
0x278 SWAP1
0x279 POP
0x27a POP
0x27b PUSH2 0x8ba
0x27e JUMP
---
0x234: JUMPDEST 
0x235: V152 = 0x27f
0x238: V153 = 0x4
0x23c: V154 = CALLDATALOAD 0x4
0x23d: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x252: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x254: V157 = 0x20
0x256: V158 = ADD 0x20 0x4
0x25b: V159 = CALLDATALOAD 0x24
0x25c: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x271: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x273: V162 = 0x20
0x275: V163 = ADD 0x20 0x24
0x27b: V164 = 0x8ba
0x27e: JUMP 0x8ba
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x27f, V156, V161]
Exit stack: [V10, 0x27f, V156, V161]

================================

Block 0x27f
[0x27f:0x294]
---
Predecessors: [0x93c]
Successors: []
---
0x27f JUMPDEST
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP1
0x284 DUP3
0x285 DUP2
0x286 MSTORE
0x287 PUSH1 0x20
0x289 ADD
0x28a SWAP2
0x28b POP
0x28c POP
0x28d PUSH1 0x40
0x28f MLOAD
0x290 DUP1
0x291 SWAP2
0x292 SUB
0x293 SWAP1
0x294 RETURN
---
0x27f: JUMPDEST 
0x280: V165 = 0x40
0x282: V166 = M[0x40]
0x286: M[V166] = V491
0x287: V167 = 0x20
0x289: V168 = ADD 0x20 V166
0x28d: V169 = 0x40
0x28f: V170 = M[0x40]
0x292: V171 = SUB V168 V170
0x294: RETURN V170 V171
---
Entry stack: [V10, V491]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x295
[0x295:0x29b]
---
Predecessors: [0x76]
Successors: [0x29c, 0x2a0]
---
0x295 JUMPDEST
0x296 CALLVALUE
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x295: JUMPDEST 
0x296: V172 = CALLVALUE
0x297: V173 = ISZERO V172
0x298: V174 = 0x2a0
0x29b: JUMPI 0x2a0 V173
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x295]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V175 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0x295]
Successors: [0x942]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x2a8
0x2a4 PUSH2 0x942
0x2a7 JUMP
---
0x2a0: JUMPDEST 
0x2a1: V176 = 0x2a8
0x2a4: V177 = 0x942
0x2a7: JUMP 0x942
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a8]
Exit stack: [V10, 0x2a8]

================================

Block 0x2a8
[0x2a8:0x2c1]
---
Predecessors: [0x949]
Successors: []
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac DUP1
0x2ad DUP3
0x2ae ISZERO
0x2af ISZERO
0x2b0 ISZERO
0x2b1 ISZERO
0x2b2 DUP2
0x2b3 MSTORE
0x2b4 PUSH1 0x20
0x2b6 ADD
0x2b7 SWAP2
0x2b8 POP
0x2b9 POP
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be SWAP2
0x2bf SUB
0x2c0 SWAP1
0x2c1 RETURN
---
0x2a8: JUMPDEST 
0x2a9: V178 = 0x40
0x2ab: V179 = M[0x40]
0x2ae: V180 = ISZERO 0x1
0x2af: V181 = ISZERO 0x0
0x2b0: V182 = ISZERO 0x1
0x2b1: V183 = ISZERO 0x0
0x2b3: M[V179] = 0x1
0x2b4: V184 = 0x20
0x2b6: V185 = ADD 0x20 V179
0x2ba: V186 = 0x40
0x2bc: V187 = M[0x40]
0x2bf: V188 = SUB V185 V187
0x2c1: RETURN V187 V188
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c2
[0x2c2:0x2cc]
---
Predecessors: [0x91]
Successors: [0x2cd, 0x34e]
---
0x2c2 JUMPDEST
0x2c3 PUSH1 0x0
0x2c5 DUP1
0x2c6 DUP3
0x2c7 EQ
0x2c8 DUP1
0x2c9 PUSH2 0x34e
0x2cc JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V189 = 0x0
0x2c7: V190 = EQ V44 0x0
0x2c9: V191 = 0x34e
0x2cc: JUMPI 0x34e V190
---
Entry stack: [V10, 0xc6, V41, V44]
Stack pops: 1
Stack additions: [S0, 0x0, V190]
Exit stack: [V10, 0xc6, V41, V44, 0x0, V190]

================================

Block 0x2cd
[0x2cd:0x34d]
---
Predecessors: [0x2c2]
Successors: [0x34e]
---
0x2cd POP
0x2ce PUSH1 0x0
0x2d0 PUSH1 0x2
0x2d2 PUSH1 0x0
0x2d4 CALLER
0x2d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ea AND
0x2eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x300 AND
0x301 DUP2
0x302 MSTORE
0x303 PUSH1 0x20
0x305 ADD
0x306 SWAP1
0x307 DUP2
0x308 MSTORE
0x309 PUSH1 0x20
0x30b ADD
0x30c PUSH1 0x0
0x30e SHA3
0x30f PUSH1 0x0
0x311 DUP6
0x312 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x327 AND
0x328 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33d AND
0x33e DUP2
0x33f MSTORE
0x340 PUSH1 0x20
0x342 ADD
0x343 SWAP1
0x344 DUP2
0x345 MSTORE
0x346 PUSH1 0x20
0x348 ADD
0x349 PUSH1 0x0
0x34b SHA3
0x34c SLOAD
0x34d EQ
---
0x2ce: V192 = 0x0
0x2d0: V193 = 0x2
0x2d2: V194 = 0x0
0x2d4: V195 = CALLER
0x2d5: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x2eb: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x300: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x302: M[0x0] = V199
0x303: V200 = 0x20
0x305: V201 = ADD 0x20 0x0
0x308: M[0x20] = 0x2
0x309: V202 = 0x20
0x30b: V203 = ADD 0x20 0x20
0x30c: V204 = 0x0
0x30e: V205 = SHA3 0x0 0x40
0x30f: V206 = 0x0
0x312: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x327: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x328: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x33d: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x33f: M[0x0] = V210
0x340: V211 = 0x20
0x342: V212 = ADD 0x20 0x0
0x345: M[0x20] = V205
0x346: V213 = 0x20
0x348: V214 = ADD 0x20 0x20
0x349: V215 = 0x0
0x34b: V216 = SHA3 0x0 0x40
0x34c: V217 = S[V216]
0x34d: V218 = EQ V217 0x0
---
Entry stack: [V10, 0xc6, V41, V44, 0x0, V190]
Stack pops: 4
Stack additions: [S3, S2, S1, V218]
Exit stack: [V10, 0xc6, V41, V44, 0x0, V218]

================================

Block 0x34e
[0x34e:0x354]
---
Predecessors: [0x2c2, 0x2cd]
Successors: [0x355, 0x359]
---
0x34e JUMPDEST
0x34f ISZERO
0x350 ISZERO
0x351 PUSH2 0x359
0x354 JUMPI
---
0x34e: JUMPDEST 
0x34f: V219 = ISZERO S0
0x350: V220 = ISZERO V219
0x351: V221 = 0x359
0x354: JUMPI 0x359 V220
---
Entry stack: [V10, 0xc6, V41, V44, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xc6, V41, V44, 0x0]

================================

Block 0x355
[0x355:0x358]
---
Predecessors: [0x34e]
Successors: []
---
0x355 PUSH1 0x0
0x357 DUP1
0x358 REVERT
---
0x355: V222 = 0x0
0x358: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc6, V41, V44, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc6, V41, V44, 0x0]

================================

Block 0x359
[0x359:0x443]
---
Predecessors: [0x34e]
Successors: [0x444]
---
0x359 JUMPDEST
0x35a DUP2
0x35b PUSH1 0x2
0x35d PUSH1 0x0
0x35f CALLER
0x360 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x375 AND
0x376 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38b AND
0x38c DUP2
0x38d MSTORE
0x38e PUSH1 0x20
0x390 ADD
0x391 SWAP1
0x392 DUP2
0x393 MSTORE
0x394 PUSH1 0x20
0x396 ADD
0x397 PUSH1 0x0
0x399 SHA3
0x39a PUSH1 0x0
0x39c DUP6
0x39d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b2 AND
0x3b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c8 AND
0x3c9 DUP2
0x3ca MSTORE
0x3cb PUSH1 0x20
0x3cd ADD
0x3ce SWAP1
0x3cf DUP2
0x3d0 MSTORE
0x3d1 PUSH1 0x20
0x3d3 ADD
0x3d4 PUSH1 0x0
0x3d6 SHA3
0x3d7 DUP2
0x3d8 SWAP1
0x3d9 SSTORE
0x3da POP
0x3db DUP3
0x3dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f1 AND
0x3f2 CALLER
0x3f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x408 AND
0x409 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x42a DUP5
0x42b PUSH1 0x40
0x42d MLOAD
0x42e DUP1
0x42f DUP3
0x430 DUP2
0x431 MSTORE
0x432 PUSH1 0x20
0x434 ADD
0x435 SWAP2
0x436 POP
0x437 POP
0x438 PUSH1 0x40
0x43a MLOAD
0x43b DUP1
0x43c SWAP2
0x43d SUB
0x43e SWAP1
0x43f LOG3
0x440 PUSH1 0x1
0x442 SWAP1
0x443 POP
---
0x359: JUMPDEST 
0x35b: V223 = 0x2
0x35d: V224 = 0x0
0x35f: V225 = CALLER
0x360: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x375: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x376: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x38b: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x38d: M[0x0] = V229
0x38e: V230 = 0x20
0x390: V231 = ADD 0x20 0x0
0x393: M[0x20] = 0x2
0x394: V232 = 0x20
0x396: V233 = ADD 0x20 0x20
0x397: V234 = 0x0
0x399: V235 = SHA3 0x0 0x40
0x39a: V236 = 0x0
0x39d: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x3b3: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c8: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x3ca: M[0x0] = V240
0x3cb: V241 = 0x20
0x3cd: V242 = ADD 0x20 0x0
0x3d0: M[0x20] = V235
0x3d1: V243 = 0x20
0x3d3: V244 = ADD 0x20 0x20
0x3d4: V245 = 0x0
0x3d6: V246 = SHA3 0x0 0x40
0x3d9: S[V246] = V44
0x3dc: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x3f2: V249 = CALLER
0x3f3: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x408: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x409: V252 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x42b: V253 = 0x40
0x42d: V254 = M[0x40]
0x431: M[V254] = V44
0x432: V255 = 0x20
0x434: V256 = ADD 0x20 V254
0x438: V257 = 0x40
0x43a: V258 = M[0x40]
0x43d: V259 = SUB V256 V258
0x43f: LOG V258 V259 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V251 V248
0x440: V260 = 0x1
---
Entry stack: [V10, 0xc6, V41, V44, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0xc6, V41, V44, 0x1]

================================

Block 0x444
[0x444:0x449]
---
Predecessors: [0x359]
Successors: [0xc6]
---
0x444 JUMPDEST
0x445 SWAP3
0x446 SWAP2
0x447 POP
0x448 POP
0x449 JUMP
---
0x444: JUMPDEST 
0x449: JUMP 0xc6
---
Entry stack: [V10, 0xc6, V41, V44, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x44a
[0x44a:0x44f]
---
Predecessors: [0xeb]
Successors: [0xf3]
---
0x44a JUMPDEST
0x44b PUSH1 0x0
0x44d SLOAD
0x44e DUP2
0x44f JUMP
---
0x44a: JUMPDEST 
0x44b: V261 = 0x0
0x44d: V262 = S[0x0]
0x44f: JUMP 0xf3
---
Entry stack: [V10, 0xf3]
Stack pops: 1
Stack additions: [S0, V262]
Exit stack: [V10, 0xf3, V262]

================================

Block 0x450
[0x450:0x51a]
---
Predecessors: [0x114]
Successors: [0x94c]
---
0x450 JUMPDEST
0x451 PUSH1 0x0
0x453 DUP1
0x454 PUSH1 0x2
0x456 PUSH1 0x0
0x458 DUP7
0x459 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46e AND
0x46f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x484 AND
0x485 DUP2
0x486 MSTORE
0x487 PUSH1 0x20
0x489 ADD
0x48a SWAP1
0x48b DUP2
0x48c MSTORE
0x48d PUSH1 0x20
0x48f ADD
0x490 PUSH1 0x0
0x492 SHA3
0x493 PUSH1 0x0
0x495 CALLER
0x496 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ab AND
0x4ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c1 AND
0x4c2 DUP2
0x4c3 MSTORE
0x4c4 PUSH1 0x20
0x4c6 ADD
0x4c7 SWAP1
0x4c8 DUP2
0x4c9 MSTORE
0x4ca PUSH1 0x20
0x4cc ADD
0x4cd PUSH1 0x0
0x4cf SHA3
0x4d0 SLOAD
0x4d1 SWAP1
0x4d2 POP
0x4d3 PUSH2 0x51b
0x4d6 PUSH1 0x1
0x4d8 PUSH1 0x0
0x4da DUP7
0x4db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f0 AND
0x4f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x506 AND
0x507 DUP2
0x508 MSTORE
0x509 PUSH1 0x20
0x50b ADD
0x50c SWAP1
0x50d DUP2
0x50e MSTORE
0x50f PUSH1 0x20
0x511 ADD
0x512 PUSH1 0x0
0x514 SHA3
0x515 SLOAD
0x516 DUP5
0x517 PUSH2 0x94c
0x51a JUMP
---
0x450: JUMPDEST 
0x451: V263 = 0x0
0x454: V264 = 0x2
0x456: V265 = 0x0
0x459: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x46e: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x46f: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x484: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x486: M[0x0] = V269
0x487: V270 = 0x20
0x489: V271 = ADD 0x20 0x0
0x48c: M[0x20] = 0x2
0x48d: V272 = 0x20
0x48f: V273 = ADD 0x20 0x20
0x490: V274 = 0x0
0x492: V275 = SHA3 0x0 0x40
0x493: V276 = 0x0
0x495: V277 = CALLER
0x496: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ab: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x4ac: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c1: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x4c3: M[0x0] = V281
0x4c4: V282 = 0x20
0x4c6: V283 = ADD 0x20 0x0
0x4c9: M[0x20] = V275
0x4ca: V284 = 0x20
0x4cc: V285 = ADD 0x20 0x20
0x4cd: V286 = 0x0
0x4cf: V287 = SHA3 0x0 0x40
0x4d0: V288 = S[V287]
0x4d3: V289 = 0x51b
0x4d6: V290 = 0x1
0x4d8: V291 = 0x0
0x4db: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f0: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x4f1: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x506: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x508: M[0x0] = V295
0x509: V296 = 0x20
0x50b: V297 = ADD 0x20 0x0
0x50e: M[0x20] = 0x1
0x50f: V298 = 0x20
0x511: V299 = ADD 0x20 0x20
0x512: V300 = 0x0
0x514: V301 = SHA3 0x0 0x40
0x515: V302 = S[V301]
0x517: V303 = 0x94c
0x51a: JUMP 0x94c
---
Entry stack: [V10, 0x168, V80, V85, V88]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V288, 0x51b, V302, S0]
Exit stack: [V10, 0x168, V80, V85, V88, 0x0, V288, 0x51b, V302, V88]

================================

Block 0x51b
[0x51b:0x5a6]
---
Predecessors: [0x970]
Successors: [0x977]
---
0x51b JUMPDEST
0x51c PUSH1 0x1
0x51e PUSH1 0x0
0x520 DUP7
0x521 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x536 AND
0x537 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54c AND
0x54d DUP2
0x54e MSTORE
0x54f PUSH1 0x20
0x551 ADD
0x552 SWAP1
0x553 DUP2
0x554 MSTORE
0x555 PUSH1 0x20
0x557 ADD
0x558 PUSH1 0x0
0x55a SHA3
0x55b DUP2
0x55c SWAP1
0x55d SSTORE
0x55e POP
0x55f PUSH2 0x5a7
0x562 PUSH1 0x1
0x564 PUSH1 0x0
0x566 DUP8
0x567 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57c AND
0x57d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x592 AND
0x593 DUP2
0x594 MSTORE
0x595 PUSH1 0x20
0x597 ADD
0x598 SWAP1
0x599 DUP2
0x59a MSTORE
0x59b PUSH1 0x20
0x59d ADD
0x59e PUSH1 0x0
0x5a0 SHA3
0x5a1 SLOAD
0x5a2 DUP5
0x5a3 PUSH2 0x977
0x5a6 JUMP
---
0x51b: JUMPDEST 
0x51c: V304 = 0x1
0x51e: V305 = 0x0
0x521: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x536: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x537: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x54c: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x54e: M[0x0] = V309
0x54f: V310 = 0x20
0x551: V311 = ADD 0x20 0x0
0x554: M[0x20] = 0x1
0x555: V312 = 0x20
0x557: V313 = ADD 0x20 0x20
0x558: V314 = 0x0
0x55a: V315 = SHA3 0x0 0x40
0x55d: S[V315] = S0
0x55f: V316 = 0x5a7
0x562: V317 = 0x1
0x564: V318 = 0x0
0x567: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x57c: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x57d: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x592: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x594: M[0x0] = V322
0x595: V323 = 0x20
0x597: V324 = ADD 0x20 0x0
0x59a: M[0x20] = 0x1
0x59b: V325 = 0x20
0x59d: V326 = ADD 0x20 0x20
0x59e: V327 = 0x0
0x5a0: V328 = SHA3 0x0 0x40
0x5a1: V329 = S[V328]
0x5a3: V330 = 0x977
0x5a6: JUMP 0x977
---
Entry stack: [V10, 0x168, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x5a7, V329, S3]
Exit stack: [V10, 0x168, S5, S4, S3, S2, S1, 0x5a7, V329, S3]

================================

Block 0x5a7
[0x5a7:0x5f3]
---
Predecessors: [0x98b]
Successors: [0x977]
---
0x5a7 JUMPDEST
0x5a8 PUSH1 0x1
0x5aa PUSH1 0x0
0x5ac DUP8
0x5ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c2 AND
0x5c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d8 AND
0x5d9 DUP2
0x5da MSTORE
0x5db PUSH1 0x20
0x5dd ADD
0x5de SWAP1
0x5df DUP2
0x5e0 MSTORE
0x5e1 PUSH1 0x20
0x5e3 ADD
0x5e4 PUSH1 0x0
0x5e6 SHA3
0x5e7 DUP2
0x5e8 SWAP1
0x5e9 SSTORE
0x5ea POP
0x5eb PUSH2 0x5f4
0x5ee DUP2
0x5ef DUP5
0x5f0 PUSH2 0x977
0x5f3 JUMP
---
0x5a7: JUMPDEST 
0x5a8: V331 = 0x1
0x5aa: V332 = 0x0
0x5ad: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c2: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x5c3: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d8: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x5da: M[0x0] = V336
0x5db: V337 = 0x20
0x5dd: V338 = ADD 0x20 0x0
0x5e0: M[0x20] = 0x1
0x5e1: V339 = 0x20
0x5e3: V340 = ADD 0x20 0x20
0x5e4: V341 = 0x0
0x5e6: V342 = SHA3 0x0 0x40
0x5e9: S[V342] = S0
0x5eb: V343 = 0x5f4
0x5f0: V344 = 0x977
0x5f3: JUMP 0x977
---
Entry stack: [V10, 0x168, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x5f4, S1, S3]
Exit stack: [V10, 0x168, S5, S4, S3, S2, S1, 0x5f4, S1, S3]

================================

Block 0x5f4
[0x5f4:0x6dd]
---
Predecessors: [0x98b]
Successors: [0x6de]
---
0x5f4 JUMPDEST
0x5f5 PUSH1 0x2
0x5f7 PUSH1 0x0
0x5f9 DUP8
0x5fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60f AND
0x610 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x625 AND
0x626 DUP2
0x627 MSTORE
0x628 PUSH1 0x20
0x62a ADD
0x62b SWAP1
0x62c DUP2
0x62d MSTORE
0x62e PUSH1 0x20
0x630 ADD
0x631 PUSH1 0x0
0x633 SHA3
0x634 PUSH1 0x0
0x636 CALLER
0x637 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64c AND
0x64d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x662 AND
0x663 DUP2
0x664 MSTORE
0x665 PUSH1 0x20
0x667 ADD
0x668 SWAP1
0x669 DUP2
0x66a MSTORE
0x66b PUSH1 0x20
0x66d ADD
0x66e PUSH1 0x0
0x670 SHA3
0x671 DUP2
0x672 SWAP1
0x673 SSTORE
0x674 POP
0x675 DUP4
0x676 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68b AND
0x68c DUP6
0x68d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a2 AND
0x6a3 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x6c4 DUP6
0x6c5 PUSH1 0x40
0x6c7 MLOAD
0x6c8 DUP1
0x6c9 DUP3
0x6ca DUP2
0x6cb MSTORE
0x6cc PUSH1 0x20
0x6ce ADD
0x6cf SWAP2
0x6d0 POP
0x6d1 POP
0x6d2 PUSH1 0x40
0x6d4 MLOAD
0x6d5 DUP1
0x6d6 SWAP2
0x6d7 SUB
0x6d8 SWAP1
0x6d9 LOG3
0x6da PUSH1 0x1
0x6dc SWAP2
0x6dd POP
---
0x5f4: JUMPDEST 
0x5f5: V345 = 0x2
0x5f7: V346 = 0x0
0x5fa: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x60f: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x610: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x625: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x627: M[0x0] = V350
0x628: V351 = 0x20
0x62a: V352 = ADD 0x20 0x0
0x62d: M[0x20] = 0x2
0x62e: V353 = 0x20
0x630: V354 = ADD 0x20 0x20
0x631: V355 = 0x0
0x633: V356 = SHA3 0x0 0x40
0x634: V357 = 0x0
0x636: V358 = CALLER
0x637: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x64c: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x64d: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x662: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x664: M[0x0] = V362
0x665: V363 = 0x20
0x667: V364 = ADD 0x20 0x0
0x66a: M[0x20] = V356
0x66b: V365 = 0x20
0x66d: V366 = ADD 0x20 0x20
0x66e: V367 = 0x0
0x670: V368 = SHA3 0x0 0x40
0x673: S[V368] = S0
0x676: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x68b: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x68d: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a2: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x6a3: V373 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x6c5: V374 = 0x40
0x6c7: V375 = M[0x40]
0x6cb: M[V375] = S3
0x6cc: V376 = 0x20
0x6ce: V377 = ADD 0x20 V375
0x6d2: V378 = 0x40
0x6d4: V379 = M[0x40]
0x6d7: V380 = SUB V377 V379
0x6d9: LOG V379 V380 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V372 V370
0x6da: V381 = 0x1
---
Entry stack: [V10, 0x168, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, 0x1, S1]
Exit stack: [V10, 0x168, S5, S4, S3, 0x1, S1]

================================

Block 0x6de
[0x6de:0x6e5]
---
Predecessors: [0x5f4]
Successors: [0x168]
---
0x6de JUMPDEST
0x6df POP
0x6e0 SWAP4
0x6e1 SWAP3
0x6e2 POP
0x6e3 POP
0x6e4 POP
0x6e5 JUMP
---
0x6de: JUMPDEST 
0x6e5: JUMP 0x168
---
Entry stack: [V10, 0x168, S4, S3, S2, 0x1, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V10, 0x1]

================================

Block 0x6e6
[0x6e6:0x72a]
---
Predecessors: [0x18d]
Successors: [0x72b]
---
0x6e6 JUMPDEST
0x6e7 PUSH1 0x0
0x6e9 PUSH1 0x1
0x6eb PUSH1 0x0
0x6ed DUP4
0x6ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x703 AND
0x704 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x719 AND
0x71a DUP2
0x71b MSTORE
0x71c PUSH1 0x20
0x71e ADD
0x71f SWAP1
0x720 DUP2
0x721 MSTORE
0x722 PUSH1 0x20
0x724 ADD
0x725 PUSH1 0x0
0x727 SHA3
0x728 SLOAD
0x729 SWAP1
0x72a POP
---
0x6e6: JUMPDEST 
0x6e7: V382 = 0x0
0x6e9: V383 = 0x1
0x6eb: V384 = 0x0
0x6ee: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x703: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x704: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x719: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x71b: M[0x0] = V388
0x71c: V389 = 0x20
0x71e: V390 = ADD 0x20 0x0
0x721: M[0x20] = 0x1
0x722: V391 = 0x20
0x724: V392 = ADD 0x20 0x20
0x725: V393 = 0x0
0x727: V394 = SHA3 0x0 0x40
0x728: V395 = S[V394]
---
Entry stack: [V10, 0x1b9, V111]
Stack pops: 1
Stack additions: [S0, V395]
Exit stack: [V10, 0x1b9, V111, V395]

================================

Block 0x72b
[0x72b:0x72f]
---
Predecessors: [0x6e6]
Successors: [0x1b9]
---
0x72b JUMPDEST
0x72c SWAP2
0x72d SWAP1
0x72e POP
0x72f JUMP
---
0x72b: JUMPDEST 
0x72f: JUMP 0x1b9
---
Entry stack: [V10, 0x1b9, V111, V395]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V395]

================================

Block 0x730
[0x730:0x77a]
---
Predecessors: [0x1da]
Successors: [0x977]
---
0x730 JUMPDEST
0x731 PUSH1 0x0
0x733 PUSH2 0x77b
0x736 PUSH1 0x1
0x738 PUSH1 0x0
0x73a CALLER
0x73b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x750 AND
0x751 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x766 AND
0x767 DUP2
0x768 MSTORE
0x769 PUSH1 0x20
0x76b ADD
0x76c SWAP1
0x76d DUP2
0x76e MSTORE
0x76f PUSH1 0x20
0x771 ADD
0x772 PUSH1 0x0
0x774 SHA3
0x775 SLOAD
0x776 DUP4
0x777 PUSH2 0x977
0x77a JUMP
---
0x730: JUMPDEST 
0x731: V396 = 0x0
0x733: V397 = 0x77b
0x736: V398 = 0x1
0x738: V399 = 0x0
0x73a: V400 = CALLER
0x73b: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x750: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x751: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x766: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x768: M[0x0] = V404
0x769: V405 = 0x20
0x76b: V406 = ADD 0x20 0x0
0x76e: M[0x20] = 0x1
0x76f: V407 = 0x20
0x771: V408 = ADD 0x20 0x20
0x772: V409 = 0x0
0x774: V410 = SHA3 0x0 0x40
0x775: V411 = S[V410]
0x777: V412 = 0x977
0x77a: JUMP 0x977
---
Entry stack: [V10, 0x20f, V130, V133]
Stack pops: 1
Stack additions: [S0, 0x0, 0x77b, V411, S0]
Exit stack: [V10, 0x20f, V130, V133, 0x0, 0x77b, V411, V133]

================================

Block 0x77b
[0x77b:0x806]
---
Predecessors: [0x98b]
Successors: [0x94c]
---
0x77b JUMPDEST
0x77c PUSH1 0x1
0x77e PUSH1 0x0
0x780 CALLER
0x781 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x796 AND
0x797 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ac AND
0x7ad DUP2
0x7ae MSTORE
0x7af PUSH1 0x20
0x7b1 ADD
0x7b2 SWAP1
0x7b3 DUP2
0x7b4 MSTORE
0x7b5 PUSH1 0x20
0x7b7 ADD
0x7b8 PUSH1 0x0
0x7ba SHA3
0x7bb DUP2
0x7bc SWAP1
0x7bd SSTORE
0x7be POP
0x7bf PUSH2 0x807
0x7c2 PUSH1 0x1
0x7c4 PUSH1 0x0
0x7c6 DUP6
0x7c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7dc AND
0x7dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f2 AND
0x7f3 DUP2
0x7f4 MSTORE
0x7f5 PUSH1 0x20
0x7f7 ADD
0x7f8 SWAP1
0x7f9 DUP2
0x7fa MSTORE
0x7fb PUSH1 0x20
0x7fd ADD
0x7fe PUSH1 0x0
0x800 SHA3
0x801 SLOAD
0x802 DUP4
0x803 PUSH2 0x94c
0x806 JUMP
---
0x77b: JUMPDEST 
0x77c: V413 = 0x1
0x77e: V414 = 0x0
0x780: V415 = CALLER
0x781: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x796: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x797: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ac: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x7ae: M[0x0] = V419
0x7af: V420 = 0x20
0x7b1: V421 = ADD 0x20 0x0
0x7b4: M[0x20] = 0x1
0x7b5: V422 = 0x20
0x7b7: V423 = ADD 0x20 0x20
0x7b8: V424 = 0x0
0x7ba: V425 = SHA3 0x0 0x40
0x7bd: S[V425] = S0
0x7bf: V426 = 0x807
0x7c2: V427 = 0x1
0x7c4: V428 = 0x0
0x7c7: V429 = 0xffffffffffffffffffffffffffffffffffffffff
0x7dc: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x7dd: V431 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f2: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x7f4: M[0x0] = V432
0x7f5: V433 = 0x20
0x7f7: V434 = ADD 0x20 0x0
0x7fa: M[0x20] = 0x1
0x7fb: V435 = 0x20
0x7fd: V436 = ADD 0x20 0x20
0x7fe: V437 = 0x0
0x800: V438 = SHA3 0x0 0x40
0x801: V439 = S[V438]
0x803: V440 = 0x94c
0x806: JUMP 0x94c
---
Entry stack: [V10, 0x168, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x807, V439, S2]
Exit stack: [V10, 0x168, S5, S4, S3, S2, S1, 0x807, V439, S2]

================================

Block 0x807
[0x807:0x8b3]
---
Predecessors: [0x970]
Successors: [0x8b4]
---
0x807 JUMPDEST
0x808 PUSH1 0x1
0x80a PUSH1 0x0
0x80c DUP6
0x80d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x822 AND
0x823 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x838 AND
0x839 DUP2
0x83a MSTORE
0x83b PUSH1 0x20
0x83d ADD
0x83e SWAP1
0x83f DUP2
0x840 MSTORE
0x841 PUSH1 0x20
0x843 ADD
0x844 PUSH1 0x0
0x846 SHA3
0x847 DUP2
0x848 SWAP1
0x849 SSTORE
0x84a POP
0x84b DUP3
0x84c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x861 AND
0x862 CALLER
0x863 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x878 AND
0x879 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x89a DUP5
0x89b PUSH1 0x40
0x89d MLOAD
0x89e DUP1
0x89f DUP3
0x8a0 DUP2
0x8a1 MSTORE
0x8a2 PUSH1 0x20
0x8a4 ADD
0x8a5 SWAP2
0x8a6 POP
0x8a7 POP
0x8a8 PUSH1 0x40
0x8aa MLOAD
0x8ab DUP1
0x8ac SWAP2
0x8ad SUB
0x8ae SWAP1
0x8af LOG3
0x8b0 PUSH1 0x1
0x8b2 SWAP1
0x8b3 POP
---
0x807: JUMPDEST 
0x808: V441 = 0x1
0x80a: V442 = 0x0
0x80d: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x822: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x823: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x838: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x83a: M[0x0] = V446
0x83b: V447 = 0x20
0x83d: V448 = ADD 0x20 0x0
0x840: M[0x20] = 0x1
0x841: V449 = 0x20
0x843: V450 = ADD 0x20 0x20
0x844: V451 = 0x0
0x846: V452 = SHA3 0x0 0x40
0x849: S[V452] = S0
0x84c: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x861: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x862: V455 = CALLER
0x863: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x878: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x879: V458 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x89b: V459 = 0x40
0x89d: V460 = M[0x40]
0x8a1: M[V460] = S2
0x8a2: V461 = 0x20
0x8a4: V462 = ADD 0x20 V460
0x8a8: V463 = 0x40
0x8aa: V464 = M[0x40]
0x8ad: V465 = SUB V462 V464
0x8af: LOG V464 V465 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V457 V454
0x8b0: V466 = 0x1
---
Entry stack: [V10, 0x168, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, 0x1]
Exit stack: [V10, 0x168, S5, S4, S3, S2, 0x1]

================================

Block 0x8b4
[0x8b4:0x8b9]
---
Predecessors: [0x807]
Successors: [0x20f]
---
0x8b4 JUMPDEST
0x8b5 SWAP3
0x8b6 SWAP2
0x8b7 POP
0x8b8 POP
0x8b9 JUMP
---
0x8b4: JUMPDEST 
0x8b9: JUMP S3
---
Entry stack: [V10, 0x168, S4, S3, S2, S1, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x168, S4, 0x1]

================================

Block 0x8ba
[0x8ba:0x93b]
---
Predecessors: [0x234]
Successors: [0x93c]
---
0x8ba JUMPDEST
0x8bb PUSH1 0x0
0x8bd PUSH1 0x2
0x8bf PUSH1 0x0
0x8c1 DUP5
0x8c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d7 AND
0x8d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ed AND
0x8ee DUP2
0x8ef MSTORE
0x8f0 PUSH1 0x20
0x8f2 ADD
0x8f3 SWAP1
0x8f4 DUP2
0x8f5 MSTORE
0x8f6 PUSH1 0x20
0x8f8 ADD
0x8f9 PUSH1 0x0
0x8fb SHA3
0x8fc PUSH1 0x0
0x8fe DUP4
0x8ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x914 AND
0x915 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92a AND
0x92b DUP2
0x92c MSTORE
0x92d PUSH1 0x20
0x92f ADD
0x930 SWAP1
0x931 DUP2
0x932 MSTORE
0x933 PUSH1 0x20
0x935 ADD
0x936 PUSH1 0x0
0x938 SHA3
0x939 SLOAD
0x93a SWAP1
0x93b POP
---
0x8ba: JUMPDEST 
0x8bb: V467 = 0x0
0x8bd: V468 = 0x2
0x8bf: V469 = 0x0
0x8c2: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d7: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x8d8: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ed: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x8ef: M[0x0] = V473
0x8f0: V474 = 0x20
0x8f2: V475 = ADD 0x20 0x0
0x8f5: M[0x20] = 0x2
0x8f6: V476 = 0x20
0x8f8: V477 = ADD 0x20 0x20
0x8f9: V478 = 0x0
0x8fb: V479 = SHA3 0x0 0x40
0x8fc: V480 = 0x0
0x8ff: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x914: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x915: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x92a: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x92c: M[0x0] = V484
0x92d: V485 = 0x20
0x92f: V486 = ADD 0x20 0x0
0x932: M[0x20] = V479
0x933: V487 = 0x20
0x935: V488 = ADD 0x20 0x20
0x936: V489 = 0x0
0x938: V490 = SHA3 0x0 0x40
0x939: V491 = S[V490]
---
Entry stack: [V10, 0x27f, V156, V161]
Stack pops: 2
Stack additions: [S1, S0, V491]
Exit stack: [V10, 0x27f, V156, V161, V491]

================================

Block 0x93c
[0x93c:0x941]
---
Predecessors: [0x8ba]
Successors: [0x27f]
---
0x93c JUMPDEST
0x93d SWAP3
0x93e SWAP2
0x93f POP
0x940 POP
0x941 JUMP
---
0x93c: JUMPDEST 
0x941: JUMP 0x27f
---
Entry stack: [V10, 0x27f, V156, V161, V491]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V491]

================================

Block 0x942
[0x942:0x948]
---
Predecessors: [0x2a0]
Successors: [0x949]
---
0x942 JUMPDEST
0x943 PUSH1 0x0
0x945 PUSH1 0x1
0x947 SWAP1
0x948 POP
---
0x942: JUMPDEST 
0x943: V492 = 0x0
0x945: V493 = 0x1
---
Entry stack: [V10, 0x2a8]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0x2a8, 0x1]

================================

Block 0x949
[0x949:0x94b]
---
Predecessors: [0x942]
Successors: [0x2a8]
---
0x949 JUMPDEST
0x94a SWAP1
0x94b JUMP
---
0x949: JUMPDEST 
0x94b: JUMP 0x2a8
---
Entry stack: [V10, 0x2a8, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x94c
[0x94c:0x95e]
---
Predecessors: [0x450, 0x77b]
Successors: [0x95f, 0x964]
---
0x94c JUMPDEST
0x94d PUSH1 0x0
0x94f DUP1
0x950 DUP3
0x951 DUP5
0x952 ADD
0x953 SWAP1
0x954 POP
0x955 DUP4
0x956 DUP2
0x957 LT
0x958 ISZERO
0x959 DUP1
0x95a ISZERO
0x95b PUSH2 0x964
0x95e JUMPI
---
0x94c: JUMPDEST 
0x94d: V494 = 0x0
0x952: V495 = ADD S1 S0
0x957: V496 = LT V495 S1
0x958: V497 = ISZERO V496
0x95a: V498 = ISZERO V497
0x95b: V499 = 0x964
0x95e: JUMPI 0x964 V498
---
Entry stack: [V10, 0x168, S7, S6, S5, S4, S3, {0x51b, 0x807}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V495, V497]
Exit stack: [V10, 0x168, S7, S6, S5, S4, S3, {0x51b, 0x807}, S1, S0, 0x0, V495, V497]

================================

Block 0x95f
[0x95f:0x963]
---
Predecessors: [0x94c]
Successors: [0x964]
---
0x95f POP
0x960 DUP3
0x961 DUP2
0x962 LT
0x963 ISZERO
---
0x962: V500 = LT V495 S3
0x963: V501 = ISZERO V500
---
Entry stack: [V10, 0x168, S10, S9, S8, S7, S6, {0x51b, 0x807}, S4, S3, 0x0, V495, V497]
Stack pops: 4
Stack additions: [S3, S2, S1, V501]
Exit stack: [V10, 0x168, S10, S9, S8, S7, S6, {0x51b, 0x807}, S4, S3, 0x0, V495, V501]

================================

Block 0x964
[0x964:0x96a]
---
Predecessors: [0x94c, 0x95f]
Successors: [0x96b, 0x96c]
---
0x964 JUMPDEST
0x965 ISZERO
0x966 ISZERO
0x967 PUSH2 0x96c
0x96a JUMPI
---
0x964: JUMPDEST 
0x965: V502 = ISZERO S0
0x966: V503 = ISZERO V502
0x967: V504 = 0x96c
0x96a: JUMPI 0x96c V503
---
Entry stack: [V10, 0x168, S10, S9, S8, S7, S6, {0x51b, 0x807}, S4, S3, 0x0, V495, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x168, S10, S9, S8, S7, S6, {0x51b, 0x807}, S4, S3, 0x0, V495]

================================

Block 0x96b
[0x96b:0x96b]
---
Predecessors: [0x964]
Successors: []
---
0x96b INVALID
---
0x96b: INVALID 
---
Entry stack: [V10, 0x168, S9, S8, S7, S6, S5, {0x51b, 0x807}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x168, S9, S8, S7, S6, S5, {0x51b, 0x807}, S3, S2, 0x0, S0]

================================

Block 0x96c
[0x96c:0x96f]
---
Predecessors: [0x964]
Successors: [0x970]
---
0x96c JUMPDEST
0x96d DUP1
0x96e SWAP2
0x96f POP
---
0x96c: JUMPDEST 
---
Entry stack: [V10, 0x168, S9, S8, S7, S6, S5, {0x51b, 0x807}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x168, S9, S8, S7, S6, S5, {0x51b, 0x807}, S3, S2, S0, S0]

================================

Block 0x970
[0x970:0x976]
---
Predecessors: [0x96c]
Successors: [0x51b, 0x807]
---
0x970 JUMPDEST
0x971 POP
0x972 SWAP3
0x973 SWAP2
0x974 POP
0x975 POP
0x976 JUMP
---
0x970: JUMPDEST 
0x976: JUMP {0x51b, 0x807}
---
Entry stack: [V10, 0x168, S9, S8, S7, S6, S5, {0x51b, 0x807}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x168, S9, S8, S7, S6, S5, S1]

================================

Block 0x977
[0x977:0x983]
---
Predecessors: [0x51b, 0x5a7, 0x730]
Successors: [0x984, 0x985]
---
0x977 JUMPDEST
0x978 PUSH1 0x0
0x97a DUP3
0x97b DUP3
0x97c GT
0x97d ISZERO
0x97e ISZERO
0x97f ISZERO
0x980 PUSH2 0x985
0x983 JUMPI
---
0x977: JUMPDEST 
0x978: V505 = 0x0
0x97c: V506 = GT S0 S1
0x97d: V507 = ISZERO V506
0x97e: V508 = ISZERO V507
0x97f: V509 = ISZERO V508
0x980: V510 = 0x985
0x983: JUMPI 0x985 V509
---
Entry stack: [V10, 0x168, S7, S6, S5, S4, S3, {0x5a7, 0x5f4, 0x77b}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x168, S7, S6, S5, S4, S3, {0x5a7, 0x5f4, 0x77b}, S1, S0, 0x0]

================================

Block 0x984
[0x984:0x984]
---
Predecessors: [0x977]
Successors: []
---
0x984 INVALID
---
0x984: INVALID 
---
Entry stack: [V10, 0x168, S8, S7, S6, S5, S4, {0x5a7, 0x5f4, 0x77b}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x168, S8, S7, S6, S5, S4, {0x5a7, 0x5f4, 0x77b}, S2, S1, 0x0]

================================

Block 0x985
[0x985:0x98a]
---
Predecessors: [0x977]
Successors: [0x98b]
---
0x985 JUMPDEST
0x986 DUP2
0x987 DUP4
0x988 SUB
0x989 SWAP1
0x98a POP
---
0x985: JUMPDEST 
0x988: V511 = SUB S2 S1
---
Entry stack: [V10, 0x168, S8, S7, S6, S5, S4, {0x5a7, 0x5f4, 0x77b}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V511]
Exit stack: [V10, 0x168, S8, S7, S6, S5, S4, {0x5a7, 0x5f4, 0x77b}, S2, S1, V511]

================================

Block 0x98b
[0x98b:0x990]
---
Predecessors: [0x985]
Successors: [0x5a7, 0x5f4, 0x77b]
---
0x98b JUMPDEST
0x98c SWAP3
0x98d SWAP2
0x98e POP
0x98f POP
0x990 JUMP
---
0x98b: JUMPDEST 
0x990: JUMP {0x5a7, 0x5f4, 0x77b}
---
Entry stack: [V10, 0x168, S8, S7, S6, S5, S4, {0x5a7, 0x5f4, 0x77b}, S2, S1, V511]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x168, S8, S7, S6, S5, S4, V511]

================================

Block 0x991
[0x991:0x9d6]
---
Predecessors: []
Successors: []
---
0x991 STOP
0x992 LOG1
0x993 PUSH6 0x627a7a723058
0x99a SHA3
0x99b MISSING 0xdf
0x99c MISSING 0xce
0x99d CREATE
0x99e MISSING 0xa7
0x99f DUP14
0x9a0 ORIGIN
0x9a1 SWAP10
0x9a2 MISSING 0x4d
0x9a3 LOG0
0x9a4 PUSH9 0xd5aa5be18d5e57e2e3
0x9ae MISSING 0xa7
0x9af MISSING 0x4a
0x9b0 DUP7
0x9b1 MISSING 0xe3
0x9b2 LT
0x9b3 MISSING 0xeb
0x9b4 EQ
0x9b5 MISSING 0xc9
0x9b6 MLOAD
0x9b7 MISSING 0x2b
0x9b8 MISSING 0xd5
0x9b9 PUSH29 0xef0029
---
0x991: STOP 
0x992: LOG S0 S1 S2
0x993: V512 = 0x627a7a723058
0x99a: V513 = SHA3 0x627a7a723058 S3
0x99b: MISSING 0xdf
0x99c: MISSING 0xce
0x99d: V514 = CREATE S0 S1 S2
0x99e: MISSING 0xa7
0x9a0: V515 = ORIGIN
0x9a2: MISSING 0x4d
0x9a3: LOG S0 S1
0x9a4: V516 = 0xd5aa5be18d5e57e2e3
0x9ae: MISSING 0xa7
0x9af: MISSING 0x4a
0x9b1: MISSING 0xe3
0x9b2: V517 = LT S0 S1
0x9b3: MISSING 0xeb
0x9b4: V518 = EQ S0 S1
0x9b5: MISSING 0xc9
0x9b6: V519 = M[S0]
0x9b7: MISSING 0x2b
0x9b8: MISSING 0xd5
0x9b9: V520 = 0xef0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V513, V514, S8, S13, S0, S1, S2, S3, S4, S5, S6, S7, V515, S9, S10, S11, S12, S13, 0xd5aa5be18d5e57e2e3, S6, S0, S1, S2, S3, S4, S5, S6, V517, V518, V519, 0xef0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x95ea7b3
Entry block: 0x86
Exit block: 0xc6
Body: 0x86, 0x8d, 0x91, 0xc6, 0x2c2, 0x2cd, 0x34e, 0x355, 0x359, 0x444

Function 1:
Public function signature: 0x18160ddd
Entry block: 0xe0
Exit block: 0xf3
Body: 0xe0, 0xe7, 0xeb, 0xf3, 0x44a

Function 2:
Public function signature: 0x23b872dd
Entry block: 0x109
Exit block: 0x20f
Body: 0x109, 0x110, 0x114, 0x20f, 0x450, 0x51b

Function 3:
Public function signature: 0x70a08231
Entry block: 0x182
Exit block: 0x1b9
Body: 0x182, 0x189, 0x18d, 0x1b9, 0x6e6, 0x72b

Function 4:
Public function signature: 0xa9059cbb
Entry block: 0x1cf
Exit block: 0x20f
Body: 0x1cf, 0x1d6, 0x1da, 0x20f, 0x730, 0x77b

Function 5:
Public function signature: 0xdd62ed3e
Entry block: 0x229
Exit block: 0x27f
Body: 0x229, 0x230, 0x234, 0x27f, 0x8ba, 0x93c

Function 6:
Public function signature: 0xeefa597b
Entry block: 0x295
Exit block: 0x2a8
Body: 0x295, 0x29c, 0x2a0, 0x2a8, 0x942, 0x949

Function 7:
Public fallback function
Entry block: 0x81
Exit block: 0x81
Body: 0x81

Function 8:
Private function
Entry block: 0x94c
Exit block: 0x970
Body: 0x94c, 0x95f, 0x964, 0x96c, 0x970

Function 9:
Private function
Entry block: 0x977
Exit block: 0x98b
Body: 0x977, 0x985, 0x98b

