Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0]
Successors: [0x1a, 0x53]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0x53
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0x53
0x19: JUMPI 0x53 V8
---
Entry stack: [V2]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x47]
---
Predecessors: [0x10]
Successors: [0x48, 0x58]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3b SWAP1
0x3c DIV
0x3d DUP1
0x3e PUSH4 0x1e36d755
0x43 EQ
0x44 PUSH2 0x58
0x47 JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0x100000000000000000000000000000000000000000000000000000000
0x3c: V13 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x3e: V14 = 0x1e36d755
0x43: V15 = EQ 0x1e36d755 V13
0x44: V16 = 0x58
0x47: JUMPI 0x58 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x1a]
Successors: [0x53, 0x7a]
---
0x48 DUP1
0x49 PUSH4 0xb8972db5
0x4e EQ
0x4f PUSH2 0x7a
0x52 JUMPI
---
0x49: V17 = 0xb8972db5
0x4e: V18 = EQ 0xb8972db5 V13
0x4f: V19 = 0x7a
0x52: JUMPI 0x7a V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x57]
---
Predecessors: [0x10, 0x48]
Successors: []
---
0x53 JUMPDEST
0x54 PUSH1 0x0
0x56 DUP1
0x57 REVERT
---
0x53: JUMPDEST 
0x54: V20 = 0x0
0x57: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x58
[0x58:0x5f]
---
Predecessors: [0x1a]
Successors: [0x9c]
---
0x58 JUMPDEST
0x59 PUSH2 0x60
0x5c PUSH2 0x9c
0x5f JUMP
---
0x58: JUMPDEST 
0x59: V21 = 0x60
0x5c: V22 = 0x9c
0x5f: JUMP 0x9c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V13, 0x60]

================================

Block 0x60
[0x60:0x79]
---
Predecessors: [0x325]
Successors: []
---
0x60 JUMPDEST
0x61 PUSH1 0x40
0x63 MLOAD
0x64 DUP1
0x65 DUP3
0x66 ISZERO
0x67 ISZERO
0x68 ISZERO
0x69 ISZERO
0x6a DUP2
0x6b MSTORE
0x6c PUSH1 0x20
0x6e ADD
0x6f SWAP2
0x70 POP
0x71 POP
0x72 PUSH1 0x40
0x74 MLOAD
0x75 DUP1
0x76 SWAP2
0x77 SUB
0x78 SWAP1
0x79 RETURN
---
0x60: JUMPDEST 
0x61: V23 = 0x40
0x63: V24 = M[0x40]
0x66: V25 = ISZERO S0
0x67: V26 = ISZERO V25
0x68: V27 = ISZERO V26
0x69: V28 = ISZERO V27
0x6b: M[V24] = V28
0x6c: V29 = 0x20
0x6e: V30 = ADD 0x20 V24
0x72: V31 = 0x40
0x74: V32 = M[0x40]
0x77: V33 = SUB V30 V32
0x79: RETURN V32 V33
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x7a
[0x7a:0x81]
---
Predecessors: [0x48]
Successors: [0x328]
---
0x7a JUMPDEST
0x7b PUSH2 0x82
0x7e PUSH2 0x328
0x81 JUMP
---
0x7a: JUMPDEST 
0x7b: V34 = 0x82
0x7e: V35 = 0x328
0x81: JUMP 0x328
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V13, 0x82]

================================

Block 0x82
[0x82:0x9b]
---
Predecessors: [0x683]
Successors: []
---
0x82 JUMPDEST
0x83 PUSH1 0x40
0x85 MLOAD
0x86 DUP1
0x87 DUP3
0x88 ISZERO
0x89 ISZERO
0x8a ISZERO
0x8b ISZERO
0x8c DUP2
0x8d MSTORE
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP2
0x92 POP
0x93 POP
0x94 PUSH1 0x40
0x96 MLOAD
0x97 DUP1
0x98 SWAP2
0x99 SUB
0x9a SWAP1
0x9b RETURN
---
0x82: JUMPDEST 
0x83: V36 = 0x40
0x85: V37 = M[0x40]
0x88: V38 = ISZERO S0
0x89: V39 = ISZERO V38
0x8a: V40 = ISZERO V39
0x8b: V41 = ISZERO V40
0x8d: M[V37] = V41
0x8e: V42 = 0x20
0x90: V43 = ADD 0x20 V37
0x94: V44 = 0x40
0x96: V45 = M[0x40]
0x99: V46 = SUB V43 V45
0x9b: RETURN V45 V46
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x9c
[0x9c:0xf4]
---
Predecessors: [0x58]
Successors: [0xf5, 0xf9]
---
0x9c JUMPDEST
0x9d PUSH1 0x0
0x9f DUP1
0xa0 PUSH1 0x0
0xa2 SWAP1
0xa3 SLOAD
0xa4 SWAP1
0xa5 PUSH2 0x100
0xa8 EXP
0xa9 SWAP1
0xaa DIV
0xab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0 AND
0xc1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6 AND
0xd7 CALLER
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed AND
0xee EQ
0xef ISZERO
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0x9c: JUMPDEST 
0x9d: V47 = 0x0
0xa0: V48 = 0x0
0xa3: V49 = S[0x0]
0xa5: V50 = 0x100
0xa8: V51 = EXP 0x100 0x0
0xaa: V52 = DIV V49 0x1
0xab: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xc1: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xd7: V57 = CALLER
0xd8: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xee: V60 = EQ V59 V56
0xef: V61 = ISZERO V60
0xf0: V62 = ISZERO V61
0xf1: V63 = 0xf9
0xf4: JUMPI 0xf9 V62
---
Entry stack: [V13, 0x60]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x60, 0x0]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0x9c]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V64 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x60, 0x0]

================================

Block 0xf9
[0xf9:0x106]
---
Predecessors: [0x9c]
Successors: [0x107, 0x324]
---
0xf9 JUMPDEST
0xfa PUSH4 0x5cae8380
0xff TIMESTAMP
0x100 LT
0x101 ISZERO
0x102 ISZERO
0x103 PUSH2 0x324
0x106 JUMPI
---
0xf9: JUMPDEST 
0xfa: V65 = 0x5cae8380
0xff: V66 = TIMESTAMP
0x100: V67 = LT V66 0x5cae8380
0x101: V68 = ISZERO V67
0x102: V69 = ISZERO V68
0x103: V70 = 0x324
0x106: JUMPI 0x324 V69
---
Entry stack: [V13, 0x60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x60, 0x0]

================================

Block 0x107
[0x107:0x21d]
---
Predecessors: [0xf9]
Successors: [0x21e, 0x222]
---
0x107 PUSH1 0x3
0x109 PUSH1 0x0
0x10b SWAP1
0x10c SLOAD
0x10d SWAP1
0x10e PUSH2 0x100
0x111 EXP
0x112 SWAP1
0x113 DIV
0x114 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129 AND
0x12a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13f AND
0x140 PUSH4 0xa9059cbb
0x145 PUSH1 0x1
0x147 PUSH1 0x0
0x149 SWAP1
0x14a SLOAD
0x14b SWAP1
0x14c PUSH2 0x100
0x14f EXP
0x150 SWAP1
0x151 DIV
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 PUSH1 0x3
0x16a PUSH1 0x0
0x16c SWAP1
0x16d SLOAD
0x16e SWAP1
0x16f PUSH2 0x100
0x172 EXP
0x173 SWAP1
0x174 DIV
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 AND
0x1a1 PUSH4 0x73e1c5c9
0x1a6 ADDRESS
0x1a7 PUSH1 0x40
0x1a9 MLOAD
0x1aa DUP3
0x1ab PUSH4 0xffffffff
0x1b0 AND
0x1b1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1cf MUL
0x1d0 DUP2
0x1d1 MSTORE
0x1d2 PUSH1 0x4
0x1d4 ADD
0x1d5 DUP1
0x1d6 DUP3
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x202 AND
0x203 DUP2
0x204 MSTORE
0x205 PUSH1 0x20
0x207 ADD
0x208 SWAP2
0x209 POP
0x20a POP
0x20b PUSH1 0x20
0x20d PUSH1 0x40
0x20f MLOAD
0x210 DUP1
0x211 DUP4
0x212 SUB
0x213 DUP2
0x214 DUP7
0x215 DUP1
0x216 EXTCODESIZE
0x217 ISZERO
0x218 DUP1
0x219 ISZERO
0x21a PUSH2 0x222
0x21d JUMPI
---
0x107: V71 = 0x3
0x109: V72 = 0x0
0x10c: V73 = S[0x3]
0x10e: V74 = 0x100
0x111: V75 = EXP 0x100 0x0
0x113: V76 = DIV V73 0x1
0x114: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x129: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x12a: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x140: V81 = 0xa9059cbb
0x145: V82 = 0x1
0x147: V83 = 0x0
0x14a: V84 = S[0x1]
0x14c: V85 = 0x100
0x14f: V86 = EXP 0x100 0x0
0x151: V87 = DIV V84 0x1
0x152: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x168: V90 = 0x3
0x16a: V91 = 0x0
0x16d: V92 = S[0x3]
0x16f: V93 = 0x100
0x172: V94 = EXP 0x100 0x0
0x174: V95 = DIV V92 0x1
0x175: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x18b: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1a1: V100 = 0x73e1c5c9
0x1a6: V101 = ADDRESS
0x1a7: V102 = 0x40
0x1a9: V103 = M[0x40]
0x1ab: V104 = 0xffffffff
0x1b0: V105 = AND 0xffffffff 0x73e1c5c9
0x1b1: V106 = 0x100000000000000000000000000000000000000000000000000000000
0x1cf: V107 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x73e1c5c9
0x1d1: M[V103] = 0x73e1c5c900000000000000000000000000000000000000000000000000000000
0x1d2: V108 = 0x4
0x1d4: V109 = ADD 0x4 V103
0x1d7: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1ed: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x202: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x204: M[V109] = V113
0x205: V114 = 0x20
0x207: V115 = ADD 0x20 V109
0x20b: V116 = 0x20
0x20d: V117 = 0x40
0x20f: V118 = M[0x40]
0x212: V119 = SUB V115 V118
0x216: V120 = EXTCODESIZE V99
0x217: V121 = ISZERO V120
0x219: V122 = ISZERO V121
0x21a: V123 = 0x222
0x21d: JUMPI 0x222 V122
---
Entry stack: [V13, 0x60, 0x0]
Stack pops: 0
Stack additions: [V80, 0xa9059cbb, V89, V99, 0x73e1c5c9, V115, 0x20, V118, V119, V118, V99, V121]
Exit stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V99, 0x73e1c5c9, V115, 0x20, V118, V119, V118, V99, V121]

================================

Block 0x21e
[0x21e:0x221]
---
Predecessors: [0x107]
Successors: []
---
0x21e PUSH1 0x0
0x220 DUP1
0x221 REVERT
---
0x21e: V124 = 0x0
0x221: REVERT 0x0 0x0
---
Entry stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V99, 0x73e1c5c9, V115, 0x20, V118, V119, V118, V99, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V99, 0x73e1c5c9, V115, 0x20, V118, V119, V118, V99, V121]

================================

Block 0x222
[0x222:0x22c]
---
Predecessors: [0x107]
Successors: [0x22d, 0x236]
---
0x222 JUMPDEST
0x223 POP
0x224 GAS
0x225 STATICCALL
0x226 ISZERO
0x227 DUP1
0x228 ISZERO
0x229 PUSH2 0x236
0x22c JUMPI
---
0x222: JUMPDEST 
0x224: V125 = GAS
0x225: V126 = STATICCALL V125 V99 V118 V119 V118 0x20
0x226: V127 = ISZERO V126
0x228: V128 = ISZERO V127
0x229: V129 = 0x236
0x22c: JUMPI 0x236 V128
---
Entry stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V99, 0x73e1c5c9, V115, 0x20, V118, V119, V118, V99, V121]
Stack pops: 6
Stack additions: [V127]
Exit stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V99, 0x73e1c5c9, V115, V127]

================================

Block 0x22d
[0x22d:0x235]
---
Predecessors: [0x222]
Successors: []
---
0x22d RETURNDATASIZE
0x22e PUSH1 0x0
0x230 DUP1
0x231 RETURNDATACOPY
0x232 RETURNDATASIZE
0x233 PUSH1 0x0
0x235 REVERT
---
0x22d: V130 = RETURNDATASIZE
0x22e: V131 = 0x0
0x231: RETURNDATACOPY 0x0 0x0 V130
0x232: V132 = RETURNDATASIZE
0x233: V133 = 0x0
0x235: REVERT 0x0 V132
---
Entry stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V99, 0x73e1c5c9, V115, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V99, 0x73e1c5c9, V115, V127]

================================

Block 0x236
[0x236:0x247]
---
Predecessors: [0x222]
Successors: [0x248, 0x24c]
---
0x236 JUMPDEST
0x237 POP
0x238 POP
0x239 POP
0x23a POP
0x23b PUSH1 0x40
0x23d MLOAD
0x23e RETURNDATASIZE
0x23f PUSH1 0x20
0x241 DUP2
0x242 LT
0x243 ISZERO
0x244 PUSH2 0x24c
0x247 JUMPI
---
0x236: JUMPDEST 
0x23b: V134 = 0x40
0x23d: V135 = M[0x40]
0x23e: V136 = RETURNDATASIZE
0x23f: V137 = 0x20
0x242: V138 = LT V136 0x20
0x243: V139 = ISZERO V138
0x244: V140 = 0x24c
0x247: JUMPI 0x24c V139
---
Entry stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V99, 0x73e1c5c9, V115, V127]
Stack pops: 4
Stack additions: [V135, V136]
Exit stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V135, V136]

================================

Block 0x248
[0x248:0x24b]
---
Predecessors: [0x236]
Successors: []
---
0x248 PUSH1 0x0
0x24a DUP1
0x24b REVERT
---
0x248: V141 = 0x0
0x24b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V135, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V135, V136]

================================

Block 0x24c
[0x24c:0x2dd]
---
Predecessors: [0x236]
Successors: [0x2de, 0x2e2]
---
0x24c JUMPDEST
0x24d DUP2
0x24e ADD
0x24f SWAP1
0x250 DUP1
0x251 DUP1
0x252 MLOAD
0x253 SWAP1
0x254 PUSH1 0x20
0x256 ADD
0x257 SWAP1
0x258 SWAP3
0x259 SWAP2
0x25a SWAP1
0x25b POP
0x25c POP
0x25d POP
0x25e PUSH1 0x40
0x260 MLOAD
0x261 DUP4
0x262 PUSH4 0xffffffff
0x267 AND
0x268 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x286 MUL
0x287 DUP2
0x288 MSTORE
0x289 PUSH1 0x4
0x28b ADD
0x28c DUP1
0x28d DUP4
0x28e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a3 AND
0x2a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b9 AND
0x2ba DUP2
0x2bb MSTORE
0x2bc PUSH1 0x20
0x2be ADD
0x2bf DUP3
0x2c0 DUP2
0x2c1 MSTORE
0x2c2 PUSH1 0x20
0x2c4 ADD
0x2c5 SWAP3
0x2c6 POP
0x2c7 POP
0x2c8 POP
0x2c9 PUSH1 0x20
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce DUP1
0x2cf DUP4
0x2d0 SUB
0x2d1 DUP2
0x2d2 PUSH1 0x0
0x2d4 DUP8
0x2d5 DUP1
0x2d6 EXTCODESIZE
0x2d7 ISZERO
0x2d8 DUP1
0x2d9 ISZERO
0x2da PUSH2 0x2e2
0x2dd JUMPI
---
0x24c: JUMPDEST 
0x24e: V142 = ADD V135 V136
0x252: V143 = M[V135]
0x254: V144 = 0x20
0x256: V145 = ADD 0x20 V135
0x25e: V146 = 0x40
0x260: V147 = M[0x40]
0x262: V148 = 0xffffffff
0x267: V149 = AND 0xffffffff 0xa9059cbb
0x268: V150 = 0x100000000000000000000000000000000000000000000000000000000
0x286: V151 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x288: M[V147] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x289: V152 = 0x4
0x28b: V153 = ADD 0x4 V147
0x28e: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x2a4: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2bb: M[V153] = V157
0x2bc: V158 = 0x20
0x2be: V159 = ADD 0x20 V153
0x2c1: M[V159] = V143
0x2c2: V160 = 0x20
0x2c4: V161 = ADD 0x20 V159
0x2c9: V162 = 0x20
0x2cb: V163 = 0x40
0x2cd: V164 = M[0x40]
0x2d0: V165 = SUB V161 V164
0x2d2: V166 = 0x0
0x2d6: V167 = EXTCODESIZE V80
0x2d7: V168 = ISZERO V167
0x2d9: V169 = ISZERO V168
0x2da: V170 = 0x2e2
0x2dd: JUMPI 0x2e2 V169
---
Entry stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V89, V135, V136]
Stack pops: 5
Stack additions: [S4, S3, V161, 0x20, V164, V165, V164, 0x0, S4, V168]
Exit stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V161, 0x20, V164, V165, V164, 0x0, V80, V168]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x24c]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V171 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V161, 0x20, V164, V165, V164, 0x0, V80, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V161, 0x20, V164, V165, V164, 0x0, V80, V168]

================================

Block 0x2e2
[0x2e2:0x2ec]
---
Predecessors: [0x24c]
Successors: [0x2ed, 0x2f6]
---
0x2e2 JUMPDEST
0x2e3 POP
0x2e4 GAS
0x2e5 CALL
0x2e6 ISZERO
0x2e7 DUP1
0x2e8 ISZERO
0x2e9 PUSH2 0x2f6
0x2ec JUMPI
---
0x2e2: JUMPDEST 
0x2e4: V172 = GAS
0x2e5: V173 = CALL V172 V80 0x0 V164 V165 V164 0x20
0x2e6: V174 = ISZERO V173
0x2e8: V175 = ISZERO V174
0x2e9: V176 = 0x2f6
0x2ec: JUMPI 0x2f6 V175
---
Entry stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V161, 0x20, V164, V165, V164, 0x0, V80, V168]
Stack pops: 7
Stack additions: [V174]
Exit stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V161, V174]

================================

Block 0x2ed
[0x2ed:0x2f5]
---
Predecessors: [0x2e2]
Successors: []
---
0x2ed RETURNDATASIZE
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 RETURNDATACOPY
0x2f2 RETURNDATASIZE
0x2f3 PUSH1 0x0
0x2f5 REVERT
---
0x2ed: V177 = RETURNDATASIZE
0x2ee: V178 = 0x0
0x2f1: RETURNDATACOPY 0x0 0x0 V177
0x2f2: V179 = RETURNDATASIZE
0x2f3: V180 = 0x0
0x2f5: REVERT 0x0 V179
---
Entry stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V161, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V161, V174]

================================

Block 0x2f6
[0x2f6:0x307]
---
Predecessors: [0x2e2]
Successors: [0x308, 0x30c]
---
0x2f6 JUMPDEST
0x2f7 POP
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb PUSH1 0x40
0x2fd MLOAD
0x2fe RETURNDATASIZE
0x2ff PUSH1 0x20
0x301 DUP2
0x302 LT
0x303 ISZERO
0x304 PUSH2 0x30c
0x307 JUMPI
---
0x2f6: JUMPDEST 
0x2fb: V181 = 0x40
0x2fd: V182 = M[0x40]
0x2fe: V183 = RETURNDATASIZE
0x2ff: V184 = 0x20
0x302: V185 = LT V183 0x20
0x303: V186 = ISZERO V185
0x304: V187 = 0x30c
0x307: JUMPI 0x30c V186
---
Entry stack: [V13, 0x60, 0x0, V80, 0xa9059cbb, V161, V174]
Stack pops: 4
Stack additions: [V182, V183]
Exit stack: [V13, 0x60, 0x0, V182, V183]

================================

Block 0x308
[0x308:0x30b]
---
Predecessors: [0x2f6]
Successors: []
---
0x308 PUSH1 0x0
0x30a DUP1
0x30b REVERT
---
0x308: V188 = 0x0
0x30b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x60, 0x0, V182, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x60, 0x0, V182, V183]

================================

Block 0x30c
[0x30c:0x323]
---
Predecessors: [0x2f6]
Successors: [0x325]
---
0x30c JUMPDEST
0x30d DUP2
0x30e ADD
0x30f SWAP1
0x310 DUP1
0x311 DUP1
0x312 MLOAD
0x313 SWAP1
0x314 PUSH1 0x20
0x316 ADD
0x317 SWAP1
0x318 SWAP3
0x319 SWAP2
0x31a SWAP1
0x31b POP
0x31c POP
0x31d POP
0x31e SWAP1
0x31f POP
0x320 PUSH2 0x325
0x323 JUMP
---
0x30c: JUMPDEST 
0x30e: V189 = ADD V182 V183
0x312: V190 = M[V182]
0x314: V191 = 0x20
0x316: V192 = ADD 0x20 V182
0x320: V193 = 0x325
0x323: JUMP 0x325
---
Entry stack: [V13, 0x60, 0x0, V182, V183]
Stack pops: 3
Stack additions: [V190]
Exit stack: [V13, 0x60, V190]

================================

Block 0x324
[0x324:0x324]
---
Predecessors: [0xf9]
Successors: [0x325]
---
0x324 JUMPDEST
---
0x324: JUMPDEST 
---
Entry stack: [V13, 0x60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x60, 0x0]

================================

Block 0x325
[0x325:0x327]
---
Predecessors: [0x30c, 0x324]
Successors: [0x60]
---
0x325 JUMPDEST
0x326 SWAP1
0x327 JUMP
---
0x325: JUMPDEST 
0x327: JUMP 0x60
---
Entry stack: [V13, 0x60, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, S0]

================================

Block 0x328
[0x328:0x381]
---
Predecessors: [0x7a]
Successors: [0x382, 0x386]
---
0x328 JUMPDEST
0x329 PUSH1 0x0
0x32b PUSH1 0x2
0x32d PUSH1 0x0
0x32f SWAP1
0x330 SLOAD
0x331 SWAP1
0x332 PUSH2 0x100
0x335 EXP
0x336 SWAP1
0x337 DIV
0x338 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34d AND
0x34e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x363 AND
0x364 CALLER
0x365 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37a AND
0x37b EQ
0x37c ISZERO
0x37d ISZERO
0x37e PUSH2 0x386
0x381 JUMPI
---
0x328: JUMPDEST 
0x329: V194 = 0x0
0x32b: V195 = 0x2
0x32d: V196 = 0x0
0x330: V197 = S[0x2]
0x332: V198 = 0x100
0x335: V199 = EXP 0x100 0x0
0x337: V200 = DIV V197 0x1
0x338: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x34d: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x34e: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x363: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x364: V205 = CALLER
0x365: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x37a: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x37b: V208 = EQ V207 V204
0x37c: V209 = ISZERO V208
0x37d: V210 = ISZERO V209
0x37e: V211 = 0x386
0x381: JUMPI 0x386 V210
---
Entry stack: [V13, 0x82]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x82, 0x0]

================================

Block 0x382
[0x382:0x385]
---
Predecessors: [0x328]
Successors: []
---
0x382 PUSH1 0x0
0x384 DUP1
0x385 REVERT
---
0x382: V212 = 0x0
0x385: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, 0x0]

================================

Block 0x386
[0x386:0x409]
---
Predecessors: [0x328]
Successors: [0x40a, 0x40e]
---
0x386 JUMPDEST
0x387 PUSH3 0x7a120
0x38b PUSH1 0x3
0x38d PUSH1 0x0
0x38f SWAP1
0x390 SLOAD
0x391 SWAP1
0x392 PUSH2 0x100
0x395 EXP
0x396 SWAP1
0x397 DIV
0x398 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ad AND
0x3ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c3 AND
0x3c4 PUSH4 0x6dfa8d99
0x3c9 PUSH1 0x40
0x3cb MLOAD
0x3cc DUP2
0x3cd PUSH4 0xffffffff
0x3d2 AND
0x3d3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3f1 MUL
0x3f2 DUP2
0x3f3 MSTORE
0x3f4 PUSH1 0x4
0x3f6 ADD
0x3f7 PUSH1 0x20
0x3f9 PUSH1 0x40
0x3fb MLOAD
0x3fc DUP1
0x3fd DUP4
0x3fe SUB
0x3ff DUP2
0x400 DUP7
0x401 DUP1
0x402 EXTCODESIZE
0x403 ISZERO
0x404 DUP1
0x405 ISZERO
0x406 PUSH2 0x40e
0x409 JUMPI
---
0x386: JUMPDEST 
0x387: V213 = 0x7a120
0x38b: V214 = 0x3
0x38d: V215 = 0x0
0x390: V216 = S[0x3]
0x392: V217 = 0x100
0x395: V218 = EXP 0x100 0x0
0x397: V219 = DIV V216 0x1
0x398: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ad: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x3ae: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c3: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x3c4: V224 = 0x6dfa8d99
0x3c9: V225 = 0x40
0x3cb: V226 = M[0x40]
0x3cd: V227 = 0xffffffff
0x3d2: V228 = AND 0xffffffff 0x6dfa8d99
0x3d3: V229 = 0x100000000000000000000000000000000000000000000000000000000
0x3f1: V230 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x6dfa8d99
0x3f3: M[V226] = 0x6dfa8d9900000000000000000000000000000000000000000000000000000000
0x3f4: V231 = 0x4
0x3f6: V232 = ADD 0x4 V226
0x3f7: V233 = 0x20
0x3f9: V234 = 0x40
0x3fb: V235 = M[0x40]
0x3fe: V236 = SUB V232 V235
0x402: V237 = EXTCODESIZE V223
0x403: V238 = ISZERO V237
0x405: V239 = ISZERO V238
0x406: V240 = 0x40e
0x409: JUMPI 0x40e V239
---
Entry stack: [V13, 0x82, 0x0]
Stack pops: 0
Stack additions: [0x7a120, V223, 0x6dfa8d99, V232, 0x20, V235, V236, V235, V223, V238]
Exit stack: [V13, 0x82, 0x0, 0x7a120, V223, 0x6dfa8d99, V232, 0x20, V235, V236, V235, V223, V238]

================================

Block 0x40a
[0x40a:0x40d]
---
Predecessors: [0x386]
Successors: []
---
0x40a PUSH1 0x0
0x40c DUP1
0x40d REVERT
---
0x40a: V241 = 0x0
0x40d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, 0x0, 0x7a120, V223, 0x6dfa8d99, V232, 0x20, V235, V236, V235, V223, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, 0x0, 0x7a120, V223, 0x6dfa8d99, V232, 0x20, V235, V236, V235, V223, V238]

================================

Block 0x40e
[0x40e:0x418]
---
Predecessors: [0x386]
Successors: [0x419, 0x422]
---
0x40e JUMPDEST
0x40f POP
0x410 GAS
0x411 STATICCALL
0x412 ISZERO
0x413 DUP1
0x414 ISZERO
0x415 PUSH2 0x422
0x418 JUMPI
---
0x40e: JUMPDEST 
0x410: V242 = GAS
0x411: V243 = STATICCALL V242 V223 V235 V236 V235 0x20
0x412: V244 = ISZERO V243
0x414: V245 = ISZERO V244
0x415: V246 = 0x422
0x418: JUMPI 0x422 V245
---
Entry stack: [V13, 0x82, 0x0, 0x7a120, V223, 0x6dfa8d99, V232, 0x20, V235, V236, V235, V223, V238]
Stack pops: 6
Stack additions: [V244]
Exit stack: [V13, 0x82, 0x0, 0x7a120, V223, 0x6dfa8d99, V232, V244]

================================

Block 0x419
[0x419:0x421]
---
Predecessors: [0x40e]
Successors: []
---
0x419 RETURNDATASIZE
0x41a PUSH1 0x0
0x41c DUP1
0x41d RETURNDATACOPY
0x41e RETURNDATASIZE
0x41f PUSH1 0x0
0x421 REVERT
---
0x419: V247 = RETURNDATASIZE
0x41a: V248 = 0x0
0x41d: RETURNDATACOPY 0x0 0x0 V247
0x41e: V249 = RETURNDATASIZE
0x41f: V250 = 0x0
0x421: REVERT 0x0 V249
---
Entry stack: [V13, 0x82, 0x0, 0x7a120, V223, 0x6dfa8d99, V232, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, 0x0, 0x7a120, V223, 0x6dfa8d99, V232, V244]

================================

Block 0x422
[0x422:0x433]
---
Predecessors: [0x40e]
Successors: [0x434, 0x438]
---
0x422 JUMPDEST
0x423 POP
0x424 POP
0x425 POP
0x426 POP
0x427 PUSH1 0x40
0x429 MLOAD
0x42a RETURNDATASIZE
0x42b PUSH1 0x20
0x42d DUP2
0x42e LT
0x42f ISZERO
0x430 PUSH2 0x438
0x433 JUMPI
---
0x422: JUMPDEST 
0x427: V251 = 0x40
0x429: V252 = M[0x40]
0x42a: V253 = RETURNDATASIZE
0x42b: V254 = 0x20
0x42e: V255 = LT V253 0x20
0x42f: V256 = ISZERO V255
0x430: V257 = 0x438
0x433: JUMPI 0x438 V256
---
Entry stack: [V13, 0x82, 0x0, 0x7a120, V223, 0x6dfa8d99, V232, V244]
Stack pops: 4
Stack additions: [V252, V253]
Exit stack: [V13, 0x82, 0x0, 0x7a120, V252, V253]

================================

Block 0x434
[0x434:0x437]
---
Predecessors: [0x422]
Successors: []
---
0x434 PUSH1 0x0
0x436 DUP1
0x437 REVERT
---
0x434: V258 = 0x0
0x437: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, 0x0, 0x7a120, V252, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, 0x0, 0x7a120, V252, V253]

================================

Block 0x438
[0x438:0x451]
---
Predecessors: [0x422]
Successors: [0x452, 0x45b]
---
0x438 JUMPDEST
0x439 DUP2
0x43a ADD
0x43b SWAP1
0x43c DUP1
0x43d DUP1
0x43e MLOAD
0x43f SWAP1
0x440 PUSH1 0x20
0x442 ADD
0x443 SWAP1
0x444 SWAP3
0x445 SWAP2
0x446 SWAP1
0x447 POP
0x448 POP
0x449 POP
0x44a LT
0x44b ISZERO
0x44c DUP1
0x44d ISZERO
0x44e PUSH2 0x45b
0x451 JUMPI
---
0x438: JUMPDEST 
0x43a: V259 = ADD V252 V253
0x43e: V260 = M[V252]
0x440: V261 = 0x20
0x442: V262 = ADD 0x20 V252
0x44a: V263 = LT V260 0x7a120
0x44b: V264 = ISZERO V263
0x44d: V265 = ISZERO V264
0x44e: V266 = 0x45b
0x451: JUMPI 0x45b V265
---
Entry stack: [V13, 0x82, 0x0, 0x7a120, V252, V253]
Stack pops: 3
Stack additions: [V264]
Exit stack: [V13, 0x82, 0x0, V264]

================================

Block 0x452
[0x452:0x45a]
---
Predecessors: [0x438]
Successors: [0x45b]
---
0x452 POP
0x453 PUSH4 0x5ca54900
0x458 TIMESTAMP
0x459 LT
0x45a ISZERO
---
0x453: V267 = 0x5ca54900
0x458: V268 = TIMESTAMP
0x459: V269 = LT V268 0x5ca54900
0x45a: V270 = ISZERO V269
---
Entry stack: [V13, 0x82, 0x0, V264]
Stack pops: 1
Stack additions: [V270]
Exit stack: [V13, 0x82, 0x0, V270]

================================

Block 0x45b
[0x45b:0x460]
---
Predecessors: [0x438, 0x452]
Successors: [0x461, 0x67e]
---
0x45b JUMPDEST
0x45c ISZERO
0x45d PUSH2 0x67e
0x460 JUMPI
---
0x45b: JUMPDEST 
0x45c: V271 = ISZERO S0
0x45d: V272 = 0x67e
0x460: JUMPI 0x67e V271
---
Entry stack: [V13, 0x82, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x82, 0x0]

================================

Block 0x461
[0x461:0x577]
---
Predecessors: [0x45b]
Successors: [0x578, 0x57c]
---
0x461 PUSH1 0x3
0x463 PUSH1 0x0
0x465 SWAP1
0x466 SLOAD
0x467 SWAP1
0x468 PUSH2 0x100
0x46b EXP
0x46c SWAP1
0x46d DIV
0x46e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x483 AND
0x484 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x499 AND
0x49a PUSH4 0xa9059cbb
0x49f PUSH1 0x2
0x4a1 PUSH1 0x0
0x4a3 SWAP1
0x4a4 SLOAD
0x4a5 SWAP1
0x4a6 PUSH2 0x100
0x4a9 EXP
0x4aa SWAP1
0x4ab DIV
0x4ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c1 AND
0x4c2 PUSH1 0x3
0x4c4 PUSH1 0x0
0x4c6 SWAP1
0x4c7 SLOAD
0x4c8 SWAP1
0x4c9 PUSH2 0x100
0x4cc EXP
0x4cd SWAP1
0x4ce DIV
0x4cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e4 AND
0x4e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fa AND
0x4fb PUSH4 0x73e1c5c9
0x500 ADDRESS
0x501 PUSH1 0x40
0x503 MLOAD
0x504 DUP3
0x505 PUSH4 0xffffffff
0x50a AND
0x50b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x529 MUL
0x52a DUP2
0x52b MSTORE
0x52c PUSH1 0x4
0x52e ADD
0x52f DUP1
0x530 DUP3
0x531 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x546 AND
0x547 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55c AND
0x55d DUP2
0x55e MSTORE
0x55f PUSH1 0x20
0x561 ADD
0x562 SWAP2
0x563 POP
0x564 POP
0x565 PUSH1 0x20
0x567 PUSH1 0x40
0x569 MLOAD
0x56a DUP1
0x56b DUP4
0x56c SUB
0x56d DUP2
0x56e DUP7
0x56f DUP1
0x570 EXTCODESIZE
0x571 ISZERO
0x572 DUP1
0x573 ISZERO
0x574 PUSH2 0x57c
0x577 JUMPI
---
0x461: V273 = 0x3
0x463: V274 = 0x0
0x466: V275 = S[0x3]
0x468: V276 = 0x100
0x46b: V277 = EXP 0x100 0x0
0x46d: V278 = DIV V275 0x1
0x46e: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x483: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x484: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x499: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x49a: V283 = 0xa9059cbb
0x49f: V284 = 0x2
0x4a1: V285 = 0x0
0x4a4: V286 = S[0x2]
0x4a6: V287 = 0x100
0x4a9: V288 = EXP 0x100 0x0
0x4ab: V289 = DIV V286 0x1
0x4ac: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c1: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x4c2: V292 = 0x3
0x4c4: V293 = 0x0
0x4c7: V294 = S[0x3]
0x4c9: V295 = 0x100
0x4cc: V296 = EXP 0x100 0x0
0x4ce: V297 = DIV V294 0x1
0x4cf: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e4: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x4e5: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x4fb: V302 = 0x73e1c5c9
0x500: V303 = ADDRESS
0x501: V304 = 0x40
0x503: V305 = M[0x40]
0x505: V306 = 0xffffffff
0x50a: V307 = AND 0xffffffff 0x73e1c5c9
0x50b: V308 = 0x100000000000000000000000000000000000000000000000000000000
0x529: V309 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x73e1c5c9
0x52b: M[V305] = 0x73e1c5c900000000000000000000000000000000000000000000000000000000
0x52c: V310 = 0x4
0x52e: V311 = ADD 0x4 V305
0x531: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x546: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x547: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x55c: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x55e: M[V311] = V315
0x55f: V316 = 0x20
0x561: V317 = ADD 0x20 V311
0x565: V318 = 0x20
0x567: V319 = 0x40
0x569: V320 = M[0x40]
0x56c: V321 = SUB V317 V320
0x570: V322 = EXTCODESIZE V301
0x571: V323 = ISZERO V322
0x573: V324 = ISZERO V323
0x574: V325 = 0x57c
0x577: JUMPI 0x57c V324
---
Entry stack: [V13, 0x82, 0x0]
Stack pops: 0
Stack additions: [V282, 0xa9059cbb, V291, V301, 0x73e1c5c9, V317, 0x20, V320, V321, V320, V301, V323]
Exit stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V301, 0x73e1c5c9, V317, 0x20, V320, V321, V320, V301, V323]

================================

Block 0x578
[0x578:0x57b]
---
Predecessors: [0x461]
Successors: []
---
0x578 PUSH1 0x0
0x57a DUP1
0x57b REVERT
---
0x578: V326 = 0x0
0x57b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V301, 0x73e1c5c9, V317, 0x20, V320, V321, V320, V301, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V301, 0x73e1c5c9, V317, 0x20, V320, V321, V320, V301, V323]

================================

Block 0x57c
[0x57c:0x586]
---
Predecessors: [0x461]
Successors: [0x587, 0x590]
---
0x57c JUMPDEST
0x57d POP
0x57e GAS
0x57f STATICCALL
0x580 ISZERO
0x581 DUP1
0x582 ISZERO
0x583 PUSH2 0x590
0x586 JUMPI
---
0x57c: JUMPDEST 
0x57e: V327 = GAS
0x57f: V328 = STATICCALL V327 V301 V320 V321 V320 0x20
0x580: V329 = ISZERO V328
0x582: V330 = ISZERO V329
0x583: V331 = 0x590
0x586: JUMPI 0x590 V330
---
Entry stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V301, 0x73e1c5c9, V317, 0x20, V320, V321, V320, V301, V323]
Stack pops: 6
Stack additions: [V329]
Exit stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V301, 0x73e1c5c9, V317, V329]

================================

Block 0x587
[0x587:0x58f]
---
Predecessors: [0x57c]
Successors: []
---
0x587 RETURNDATASIZE
0x588 PUSH1 0x0
0x58a DUP1
0x58b RETURNDATACOPY
0x58c RETURNDATASIZE
0x58d PUSH1 0x0
0x58f REVERT
---
0x587: V332 = RETURNDATASIZE
0x588: V333 = 0x0
0x58b: RETURNDATACOPY 0x0 0x0 V332
0x58c: V334 = RETURNDATASIZE
0x58d: V335 = 0x0
0x58f: REVERT 0x0 V334
---
Entry stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V301, 0x73e1c5c9, V317, V329]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V301, 0x73e1c5c9, V317, V329]

================================

Block 0x590
[0x590:0x5a1]
---
Predecessors: [0x57c]
Successors: [0x5a2, 0x5a6]
---
0x590 JUMPDEST
0x591 POP
0x592 POP
0x593 POP
0x594 POP
0x595 PUSH1 0x40
0x597 MLOAD
0x598 RETURNDATASIZE
0x599 PUSH1 0x20
0x59b DUP2
0x59c LT
0x59d ISZERO
0x59e PUSH2 0x5a6
0x5a1 JUMPI
---
0x590: JUMPDEST 
0x595: V336 = 0x40
0x597: V337 = M[0x40]
0x598: V338 = RETURNDATASIZE
0x599: V339 = 0x20
0x59c: V340 = LT V338 0x20
0x59d: V341 = ISZERO V340
0x59e: V342 = 0x5a6
0x5a1: JUMPI 0x5a6 V341
---
Entry stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V301, 0x73e1c5c9, V317, V329]
Stack pops: 4
Stack additions: [V337, V338]
Exit stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V337, V338]

================================

Block 0x5a2
[0x5a2:0x5a5]
---
Predecessors: [0x590]
Successors: []
---
0x5a2 PUSH1 0x0
0x5a4 DUP1
0x5a5 REVERT
---
0x5a2: V343 = 0x0
0x5a5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V337, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V337, V338]

================================

Block 0x5a6
[0x5a6:0x637]
---
Predecessors: [0x590]
Successors: [0x638, 0x63c]
---
0x5a6 JUMPDEST
0x5a7 DUP2
0x5a8 ADD
0x5a9 SWAP1
0x5aa DUP1
0x5ab DUP1
0x5ac MLOAD
0x5ad SWAP1
0x5ae PUSH1 0x20
0x5b0 ADD
0x5b1 SWAP1
0x5b2 SWAP3
0x5b3 SWAP2
0x5b4 SWAP1
0x5b5 POP
0x5b6 POP
0x5b7 POP
0x5b8 PUSH1 0x40
0x5ba MLOAD
0x5bb DUP4
0x5bc PUSH4 0xffffffff
0x5c1 AND
0x5c2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5e0 MUL
0x5e1 DUP2
0x5e2 MSTORE
0x5e3 PUSH1 0x4
0x5e5 ADD
0x5e6 DUP1
0x5e7 DUP4
0x5e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fd AND
0x5fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x613 AND
0x614 DUP2
0x615 MSTORE
0x616 PUSH1 0x20
0x618 ADD
0x619 DUP3
0x61a DUP2
0x61b MSTORE
0x61c PUSH1 0x20
0x61e ADD
0x61f SWAP3
0x620 POP
0x621 POP
0x622 POP
0x623 PUSH1 0x20
0x625 PUSH1 0x40
0x627 MLOAD
0x628 DUP1
0x629 DUP4
0x62a SUB
0x62b DUP2
0x62c PUSH1 0x0
0x62e DUP8
0x62f DUP1
0x630 EXTCODESIZE
0x631 ISZERO
0x632 DUP1
0x633 ISZERO
0x634 PUSH2 0x63c
0x637 JUMPI
---
0x5a6: JUMPDEST 
0x5a8: V344 = ADD V337 V338
0x5ac: V345 = M[V337]
0x5ae: V346 = 0x20
0x5b0: V347 = ADD 0x20 V337
0x5b8: V348 = 0x40
0x5ba: V349 = M[0x40]
0x5bc: V350 = 0xffffffff
0x5c1: V351 = AND 0xffffffff 0xa9059cbb
0x5c2: V352 = 0x100000000000000000000000000000000000000000000000000000000
0x5e0: V353 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x5e2: M[V349] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5e3: V354 = 0x4
0x5e5: V355 = ADD 0x4 V349
0x5e8: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fd: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x5fe: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x613: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x615: M[V355] = V359
0x616: V360 = 0x20
0x618: V361 = ADD 0x20 V355
0x61b: M[V361] = V345
0x61c: V362 = 0x20
0x61e: V363 = ADD 0x20 V361
0x623: V364 = 0x20
0x625: V365 = 0x40
0x627: V366 = M[0x40]
0x62a: V367 = SUB V363 V366
0x62c: V368 = 0x0
0x630: V369 = EXTCODESIZE V282
0x631: V370 = ISZERO V369
0x633: V371 = ISZERO V370
0x634: V372 = 0x63c
0x637: JUMPI 0x63c V371
---
Entry stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V291, V337, V338]
Stack pops: 5
Stack additions: [S4, S3, V363, 0x20, V366, V367, V366, 0x0, S4, V370]
Exit stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V363, 0x20, V366, V367, V366, 0x0, V282, V370]

================================

Block 0x638
[0x638:0x63b]
---
Predecessors: [0x5a6]
Successors: []
---
0x638 PUSH1 0x0
0x63a DUP1
0x63b REVERT
---
0x638: V373 = 0x0
0x63b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V363, 0x20, V366, V367, V366, 0x0, V282, V370]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V363, 0x20, V366, V367, V366, 0x0, V282, V370]

================================

Block 0x63c
[0x63c:0x646]
---
Predecessors: [0x5a6]
Successors: [0x647, 0x650]
---
0x63c JUMPDEST
0x63d POP
0x63e GAS
0x63f CALL
0x640 ISZERO
0x641 DUP1
0x642 ISZERO
0x643 PUSH2 0x650
0x646 JUMPI
---
0x63c: JUMPDEST 
0x63e: V374 = GAS
0x63f: V375 = CALL V374 V282 0x0 V366 V367 V366 0x20
0x640: V376 = ISZERO V375
0x642: V377 = ISZERO V376
0x643: V378 = 0x650
0x646: JUMPI 0x650 V377
---
Entry stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V363, 0x20, V366, V367, V366, 0x0, V282, V370]
Stack pops: 7
Stack additions: [V376]
Exit stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V363, V376]

================================

Block 0x647
[0x647:0x64f]
---
Predecessors: [0x63c]
Successors: []
---
0x647 RETURNDATASIZE
0x648 PUSH1 0x0
0x64a DUP1
0x64b RETURNDATACOPY
0x64c RETURNDATASIZE
0x64d PUSH1 0x0
0x64f REVERT
---
0x647: V379 = RETURNDATASIZE
0x648: V380 = 0x0
0x64b: RETURNDATACOPY 0x0 0x0 V379
0x64c: V381 = RETURNDATASIZE
0x64d: V382 = 0x0
0x64f: REVERT 0x0 V381
---
Entry stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V363, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V363, V376]

================================

Block 0x650
[0x650:0x661]
---
Predecessors: [0x63c]
Successors: [0x662, 0x666]
---
0x650 JUMPDEST
0x651 POP
0x652 POP
0x653 POP
0x654 POP
0x655 PUSH1 0x40
0x657 MLOAD
0x658 RETURNDATASIZE
0x659 PUSH1 0x20
0x65b DUP2
0x65c LT
0x65d ISZERO
0x65e PUSH2 0x666
0x661 JUMPI
---
0x650: JUMPDEST 
0x655: V383 = 0x40
0x657: V384 = M[0x40]
0x658: V385 = RETURNDATASIZE
0x659: V386 = 0x20
0x65c: V387 = LT V385 0x20
0x65d: V388 = ISZERO V387
0x65e: V389 = 0x666
0x661: JUMPI 0x666 V388
---
Entry stack: [V13, 0x82, 0x0, V282, 0xa9059cbb, V363, V376]
Stack pops: 4
Stack additions: [V384, V385]
Exit stack: [V13, 0x82, 0x0, V384, V385]

================================

Block 0x662
[0x662:0x665]
---
Predecessors: [0x650]
Successors: []
---
0x662 PUSH1 0x0
0x664 DUP1
0x665 REVERT
---
0x662: V390 = 0x0
0x665: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, 0x0, V384, V385]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, 0x0, V384, V385]

================================

Block 0x666
[0x666:0x67d]
---
Predecessors: [0x650]
Successors: [0x683]
---
0x666 JUMPDEST
0x667 DUP2
0x668 ADD
0x669 SWAP1
0x66a DUP1
0x66b DUP1
0x66c MLOAD
0x66d SWAP1
0x66e PUSH1 0x20
0x670 ADD
0x671 SWAP1
0x672 SWAP3
0x673 SWAP2
0x674 SWAP1
0x675 POP
0x676 POP
0x677 POP
0x678 SWAP1
0x679 POP
0x67a PUSH2 0x683
0x67d JUMP
---
0x666: JUMPDEST 
0x668: V391 = ADD V384 V385
0x66c: V392 = M[V384]
0x66e: V393 = 0x20
0x670: V394 = ADD 0x20 V384
0x67a: V395 = 0x683
0x67d: JUMP 0x683
---
Entry stack: [V13, 0x82, 0x0, V384, V385]
Stack pops: 3
Stack additions: [V392]
Exit stack: [V13, 0x82, V392]

================================

Block 0x67e
[0x67e:0x682]
---
Predecessors: [0x45b]
Successors: [0x683]
---
0x67e JUMPDEST
0x67f PUSH1 0x0
0x681 SWAP1
0x682 POP
---
0x67e: JUMPDEST 
0x67f: V396 = 0x0
---
Entry stack: [V13, 0x82, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0x82, 0x0]

================================

Block 0x683
[0x683:0x685]
---
Predecessors: [0x666, 0x67e]
Successors: [0x82]
---
0x683 JUMPDEST
0x684 SWAP1
0x685 JUMP
---
0x683: JUMPDEST 
0x685: JUMP 0x82
---
Entry stack: [V13, 0x82, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, S0]

================================

Block 0x686
[0x686:0x6ca]
---
Predecessors: []
Successors: []
---
0x686 INVALID
0x687 LOG1
0x688 PUSH6 0x627a7a723058
0x68f SHA3
0x690 PUSH22 0x1818dc4d69aa76e4a4885882064ee0d424a24378f0af
0x6a7 EQ
0x6a8 MISSING 0x46
0x6a9 MISSING 0xe8
0x6aa ORIGIN
0x6ab PUSH31 0x19e9bc590029
---
0x686: INVALID 
0x687: LOG S0 S1 S2
0x688: V397 = 0x627a7a723058
0x68f: V398 = SHA3 0x627a7a723058 S3
0x690: V399 = 0x1818dc4d69aa76e4a4885882064ee0d424a24378f0af
0x6a7: V400 = EQ 0x1818dc4d69aa76e4a4885882064ee0d424a24378f0af V398
0x6a8: MISSING 0x46
0x6a9: MISSING 0xe8
0x6aa: V401 = ORIGIN
0x6ab: V402 = 0x19e9bc590029
---
Entry stack: []
Stack pops: 0
Stack additions: [V400, 0x19e9bc590029, V401]
Exit stack: []

================================

Function 0:
Public function signature: 0x1e36d755
Entry block: 0x58
Exit block: 0x308
Body: 0x58, 0x60, 0x9c, 0xf5, 0xf9, 0x107, 0x21e, 0x222, 0x22d, 0x236, 0x248, 0x24c, 0x2de, 0x2e2, 0x2ed, 0x2f6, 0x308, 0x30c, 0x324, 0x325

Function 1:
Public function signature: 0xb8972db5
Entry block: 0x7a
Exit block: 0x662
Body: 0x7a, 0x82, 0x328, 0x382, 0x386, 0x40a, 0x40e, 0x419, 0x422, 0x434, 0x438, 0x452, 0x45b, 0x461, 0x578, 0x57c, 0x587, 0x590, 0x5a2, 0x5a6, 0x638, 0x63c, 0x647, 0x650, 0x662, 0x666, 0x67e, 0x683

Function 2:
Public fallback function
Entry block: 0x53
Exit block: 0x53
Body: 0x53

