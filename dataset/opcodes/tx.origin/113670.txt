Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa3]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa3
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa3
0xc: JUMPI 0xa3 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xb2]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3586bdd
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xb2
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3586bdd
0x3b: V13 = EQ V11 0x3586bdd
0x3c: V14 = 0xb2
0x3f: JUMPI 0xb2 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xeb]
---
0x40 DUP1
0x41 PUSH4 0x1dbc85a9
0x46 EQ
0x47 PUSH2 0xeb
0x4a JUMPI
---
0x41: V15 = 0x1dbc85a9
0x46: V16 = EQ 0x1dbc85a9 V11
0x47: V17 = 0xeb
0x4a: JUMPI 0xeb V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x10c]
---
0x4b DUP1
0x4c PUSH4 0x5377c857
0x51 EQ
0x52 PUSH2 0x10c
0x55 JUMPI
---
0x4c: V18 = 0x5377c857
0x51: V19 = EQ 0x5377c857 V11
0x52: V20 = 0x10c
0x55: JUMPI 0x10c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x133]
---
0x56 DUP1
0x57 PUSH4 0x5ed89d59
0x5c EQ
0x5d PUSH2 0x133
0x60 JUMPI
---
0x57: V21 = 0x5ed89d59
0x5c: V22 = EQ 0x5ed89d59 V11
0x5d: V23 = 0x133
0x60: JUMPI 0x133 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x147]
---
0x61 DUP1
0x62 PUSH4 0x5fba3dec
0x67 EQ
0x68 PUSH2 0x147
0x6b JUMPI
---
0x62: V24 = 0x5fba3dec
0x67: V25 = EQ 0x5fba3dec V11
0x68: V26 = 0x147
0x6b: JUMPI 0x147 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x168]
---
0x6c DUP1
0x6d PUSH4 0x7acb20f4
0x72 EQ
0x73 PUSH2 0x168
0x76 JUMPI
---
0x6d: V27 = 0x7acb20f4
0x72: V28 = EQ 0x7acb20f4 V11
0x73: V29 = 0x168
0x76: JUMPI 0x168 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x189]
---
0x77 DUP1
0x78 PUSH4 0xb42652e9
0x7d EQ
0x7e PUSH2 0x189
0x81 JUMPI
---
0x78: V30 = 0xb42652e9
0x7d: V31 = EQ 0xb42652e9 V11
0x7e: V32 = 0x189
0x81: JUMPI 0x189 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1aa]
---
0x82 DUP1
0x83 PUSH4 0xc2bc2efc
0x88 EQ
0x89 PUSH2 0x1aa
0x8c JUMPI
---
0x83: V33 = 0xc2bc2efc
0x88: V34 = EQ 0xc2bc2efc V11
0x89: V35 = 0x1aa
0x8c: JUMPI 0x1aa V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1cb]
---
0x8d DUP1
0x8e PUSH4 0xc6c416ec
0x93 EQ
0x94 PUSH2 0x1cb
0x97 JUMPI
---
0x8e: V36 = 0xc6c416ec
0x93: V37 = EQ 0xc6c416ec V11
0x94: V38 = 0x1cb
0x97: JUMPI 0x1cb V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x1ef]
---
0x98 DUP1
0x99 PUSH4 0xc7af3456
0x9e EQ
0x9f PUSH2 0x1ef
0xa2 JUMPI
---
0x99: V39 = 0xc7af3456
0x9e: V40 = EQ 0xc7af3456 V11
0x9f: V41 = 0x1ef
0xa2: JUMPI 0x1ef V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xab]
---
Predecessors: [0x0, 0x98]
Successors: [0xac, 0xb0]
---
0xa3 JUMPDEST
0xa4 CALLER
0xa5 ORIGIN
0xa6 EQ
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa3: JUMPDEST 
0xa4: V42 = CALLER
0xa5: V43 = ORIGIN
0xa6: V44 = EQ V43 V42
0xa7: V45 = ISZERO V44
0xa8: V46 = 0xb0
0xab: JUMPI 0xb0 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa3]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V47 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: [0xa3, 0x25c, 0x35f, 0x412, 0x50b, 0x513, 0x629]
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb2
[0xb2:0xb9]
---
Predecessors: [0xd]
Successors: [0xba, 0xbe]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 DUP1
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb2: JUMPDEST 
0xb3: V48 = CALLVALUE
0xb5: V49 = ISZERO V48
0xb6: V50 = 0xbe
0xb9: JUMPI 0xbe V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb2]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V51 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xbe
[0xbe:0xd8]
---
Predecessors: [0xb2]
Successors: [0x210]
---
0xbe JUMPDEST
0xbf POP
0xc0 PUSH2 0xd9
0xc3 PUSH1 0x1
0xc5 PUSH1 0xa0
0xc7 PUSH1 0x2
0xc9 EXP
0xca SUB
0xcb PUSH1 0x4
0xcd CALLDATALOAD
0xce DUP2
0xcf AND
0xd0 SWAP1
0xd1 PUSH1 0x24
0xd3 CALLDATALOAD
0xd4 AND
0xd5 PUSH2 0x210
0xd8 JUMP
---
0xbe: JUMPDEST 
0xc0: V52 = 0xd9
0xc3: V53 = 0x1
0xc5: V54 = 0xa0
0xc7: V55 = 0x2
0xc9: V56 = EXP 0x2 0xa0
0xca: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb: V58 = 0x4
0xcd: V59 = CALLDATALOAD 0x4
0xcf: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xd1: V61 = 0x24
0xd3: V62 = CALLDATALOAD 0x24
0xd4: V63 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V64 = 0x210
0xd8: JUMP 0x210
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0xd9, V60, V63]
Exit stack: [V11, 0xd9, V60, V63]

================================

Block 0xd9
[0xd9:0xea]
---
Predecessors: [0x210, 0x22d, 0x23f, 0x299]
Successors: []
---
0xd9 JUMPDEST
0xda PUSH1 0x40
0xdc DUP1
0xdd MLOAD
0xde SWAP2
0xdf DUP3
0xe0 MSTORE
0xe1 MLOAD
0xe2 SWAP1
0xe3 DUP2
0xe4 SWAP1
0xe5 SUB
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 SWAP1
0xea RETURN
---
0xd9: JUMPDEST 
0xda: V65 = 0x40
0xdd: V66 = M[0x40]
0xe0: M[V66] = S0
0xe1: V67 = M[0x40]
0xe5: V68 = SUB V66 V67
0xe6: V69 = 0x20
0xe8: V70 = ADD 0x20 V68
0xea: RETURN V67 V70
---
Entry stack: [V11, 0xd9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd9]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0x40]
Successors: [0xf3, 0xf7]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed DUP1
0xee ISZERO
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xeb: JUMPDEST 
0xec: V71 = CALLVALUE
0xee: V72 = ISZERO V71
0xef: V73 = 0xf7
0xf2: JUMPI 0xf7 V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V71]
Exit stack: [V11, V71]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xeb]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V74 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V11, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V71]

================================

Block 0xf7
[0xf7:0x10b]
---
Predecessors: [0xeb]
Successors: [0x22d]
---
0xf7 JUMPDEST
0xf8 POP
0xf9 PUSH2 0xd9
0xfc PUSH1 0x1
0xfe PUSH1 0xa0
0x100 PUSH1 0x2
0x102 EXP
0x103 SUB
0x104 PUSH1 0x4
0x106 CALLDATALOAD
0x107 AND
0x108 PUSH2 0x22d
0x10b JUMP
---
0xf7: JUMPDEST 
0xf9: V75 = 0xd9
0xfc: V76 = 0x1
0xfe: V77 = 0xa0
0x100: V78 = 0x2
0x102: V79 = EXP 0x2 0xa0
0x103: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104: V81 = 0x4
0x106: V82 = CALLDATALOAD 0x4
0x107: V83 = AND V82 0xffffffffffffffffffffffffffffffffffffffff
0x108: V84 = 0x22d
0x10b: JUMP 0x22d
---
Entry stack: [V11, V71]
Stack pops: 1
Stack additions: [0xd9, V83]
Exit stack: [V11, 0xd9, V83]

================================

Block 0x10c
[0x10c:0x113]
---
Predecessors: [0x4b]
Successors: [0x114, 0x118]
---
0x10c JUMPDEST
0x10d CALLVALUE
0x10e DUP1
0x10f ISZERO
0x110 PUSH2 0x118
0x113 JUMPI
---
0x10c: JUMPDEST 
0x10d: V85 = CALLVALUE
0x10f: V86 = ISZERO V85
0x110: V87 = 0x118
0x113: JUMPI 0x118 V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V11, V85]

================================

Block 0x114
[0x114:0x117]
---
Predecessors: [0x10c]
Successors: []
---
0x114 PUSH1 0x0
0x116 DUP1
0x117 REVERT
---
0x114: V88 = 0x0
0x117: REVERT 0x0 0x0
---
Entry stack: [V11, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V85]

================================

Block 0x118
[0x118:0x132]
---
Predecessors: [0x10c]
Successors: [0x23f]
---
0x118 JUMPDEST
0x119 POP
0x11a PUSH2 0xd9
0x11d PUSH1 0x1
0x11f PUSH1 0xa0
0x121 PUSH1 0x2
0x123 EXP
0x124 SUB
0x125 PUSH1 0x4
0x127 CALLDATALOAD
0x128 DUP2
0x129 AND
0x12a SWAP1
0x12b PUSH1 0x24
0x12d CALLDATALOAD
0x12e AND
0x12f PUSH2 0x23f
0x132 JUMP
---
0x118: JUMPDEST 
0x11a: V89 = 0xd9
0x11d: V90 = 0x1
0x11f: V91 = 0xa0
0x121: V92 = 0x2
0x123: V93 = EXP 0x2 0xa0
0x124: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x125: V95 = 0x4
0x127: V96 = CALLDATALOAD 0x4
0x129: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x12b: V98 = 0x24
0x12d: V99 = CALLDATALOAD 0x24
0x12e: V100 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V101 = 0x23f
0x132: JUMP 0x23f
---
Entry stack: [V11, V85]
Stack pops: 1
Stack additions: [0xd9, V97, V100]
Exit stack: [V11, 0xd9, V97, V100]

================================

Block 0x133
[0x133:0x146]
---
Predecessors: [0x56]
Successors: [0x25c]
---
0x133 JUMPDEST
0x134 PUSH2 0xb0
0x137 PUSH1 0x1
0x139 PUSH1 0xa0
0x13b PUSH1 0x2
0x13d EXP
0x13e SUB
0x13f PUSH1 0x4
0x141 CALLDATALOAD
0x142 AND
0x143 PUSH2 0x25c
0x146 JUMP
---
0x133: JUMPDEST 
0x134: V102 = 0xb0
0x137: V103 = 0x1
0x139: V104 = 0xa0
0x13b: V105 = 0x2
0x13d: V106 = EXP 0x2 0xa0
0x13e: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V108 = 0x4
0x141: V109 = CALLDATALOAD 0x4
0x142: V110 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x143: V111 = 0x25c
0x146: JUMP 0x25c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb0, V110]
Exit stack: [V11, 0xb0, V110]

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x61]
Successors: [0x14f, 0x153]
---
0x147 JUMPDEST
0x148 CALLVALUE
0x149 DUP1
0x14a ISZERO
0x14b PUSH2 0x153
0x14e JUMPI
---
0x147: JUMPDEST 
0x148: V112 = CALLVALUE
0x14a: V113 = ISZERO V112
0x14b: V114 = 0x153
0x14e: JUMPI 0x153 V113
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V112]
Exit stack: [V11, V112]

================================

Block 0x14f
[0x14f:0x152]
---
Predecessors: [0x147]
Successors: []
---
0x14f PUSH1 0x0
0x151 DUP1
0x152 REVERT
---
0x14f: V115 = 0x0
0x152: REVERT 0x0 0x0
---
Entry stack: [V11, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V112]

================================

Block 0x153
[0x153:0x167]
---
Predecessors: [0x147]
Successors: [0x299]
---
0x153 JUMPDEST
0x154 POP
0x155 PUSH2 0xd9
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 PUSH1 0x4
0x162 CALLDATALOAD
0x163 AND
0x164 PUSH2 0x299
0x167 JUMP
---
0x153: JUMPDEST 
0x155: V116 = 0xd9
0x158: V117 = 0x1
0x15a: V118 = 0xa0
0x15c: V119 = 0x2
0x15e: V120 = EXP 0x2 0xa0
0x15f: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V122 = 0x4
0x162: V123 = CALLDATALOAD 0x4
0x163: V124 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x164: V125 = 0x299
0x167: JUMP 0x299
---
Entry stack: [V11, V112]
Stack pops: 1
Stack additions: [0xd9, V124]
Exit stack: [V11, 0xd9, V124]

================================

Block 0x168
[0x168:0x16f]
---
Predecessors: [0x6c]
Successors: [0x170, 0x174]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a DUP1
0x16b ISZERO
0x16c PUSH2 0x174
0x16f JUMPI
---
0x168: JUMPDEST 
0x169: V126 = CALLVALUE
0x16b: V127 = ISZERO V126
0x16c: V128 = 0x174
0x16f: JUMPI 0x174 V127
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V126]
Exit stack: [V11, V126]

================================

Block 0x170
[0x170:0x173]
---
Predecessors: [0x168]
Successors: []
---
0x170 PUSH1 0x0
0x172 DUP1
0x173 REVERT
---
0x170: V129 = 0x0
0x173: REVERT 0x0 0x0
---
Entry stack: [V11, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V126]

================================

Block 0x174
[0x174:0x188]
---
Predecessors: [0x168]
Successors: [0x2ab]
---
0x174 JUMPDEST
0x175 POP
0x176 PUSH2 0xb0
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 PUSH1 0x4
0x183 CALLDATALOAD
0x184 AND
0x185 PUSH2 0x2ab
0x188 JUMP
---
0x174: JUMPDEST 
0x176: V130 = 0xb0
0x179: V131 = 0x1
0x17b: V132 = 0xa0
0x17d: V133 = 0x2
0x17f: V134 = EXP 0x2 0xa0
0x180: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V136 = 0x4
0x183: V137 = CALLDATALOAD 0x4
0x184: V138 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x185: V139 = 0x2ab
0x188: JUMP 0x2ab
---
Entry stack: [V11, V126]
Stack pops: 1
Stack additions: [0xb0, V138]
Exit stack: [V11, 0xb0, V138]

================================

Block 0x189
[0x189:0x190]
---
Predecessors: [0x77]
Successors: [0x191, 0x195]
---
0x189 JUMPDEST
0x18a CALLVALUE
0x18b DUP1
0x18c ISZERO
0x18d PUSH2 0x195
0x190 JUMPI
---
0x189: JUMPDEST 
0x18a: V140 = CALLVALUE
0x18c: V141 = ISZERO V140
0x18d: V142 = 0x195
0x190: JUMPI 0x195 V141
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V140]
Exit stack: [V11, V140]

================================

Block 0x191
[0x191:0x194]
---
Predecessors: [0x189]
Successors: []
---
0x191 PUSH1 0x0
0x193 DUP1
0x194 REVERT
---
0x191: V143 = 0x0
0x194: REVERT 0x0 0x0
---
Entry stack: [V11, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V140]

================================

Block 0x195
[0x195:0x1a9]
---
Predecessors: [0x189]
Successors: [0x364]
---
0x195 JUMPDEST
0x196 POP
0x197 PUSH2 0xb0
0x19a PUSH1 0x1
0x19c PUSH1 0xa0
0x19e PUSH1 0x2
0x1a0 EXP
0x1a1 SUB
0x1a2 PUSH1 0x4
0x1a4 CALLDATALOAD
0x1a5 AND
0x1a6 PUSH2 0x364
0x1a9 JUMP
---
0x195: JUMPDEST 
0x197: V144 = 0xb0
0x19a: V145 = 0x1
0x19c: V146 = 0xa0
0x19e: V147 = 0x2
0x1a0: V148 = EXP 0x2 0xa0
0x1a1: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a2: V150 = 0x4
0x1a4: V151 = CALLDATALOAD 0x4
0x1a5: V152 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V153 = 0x364
0x1a9: JUMP 0x364
---
Entry stack: [V11, V140]
Stack pops: 1
Stack additions: [0xb0, V152]
Exit stack: [V11, 0xb0, V152]

================================

Block 0x1aa
[0x1aa:0x1b1]
---
Predecessors: [0x82]
Successors: [0x1b2, 0x1b6]
---
0x1aa JUMPDEST
0x1ab CALLVALUE
0x1ac DUP1
0x1ad ISZERO
0x1ae PUSH2 0x1b6
0x1b1 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V154 = CALLVALUE
0x1ad: V155 = ISZERO V154
0x1ae: V156 = 0x1b6
0x1b1: JUMPI 0x1b6 V155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V11, V154]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V157 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V11, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V154]

================================

Block 0x1b6
[0x1b6:0x1ca]
---
Predecessors: [0x1aa]
Successors: [0x43c]
---
0x1b6 JUMPDEST
0x1b7 POP
0x1b8 PUSH2 0xb0
0x1bb PUSH1 0x1
0x1bd PUSH1 0xa0
0x1bf PUSH1 0x2
0x1c1 EXP
0x1c2 SUB
0x1c3 PUSH1 0x4
0x1c5 CALLDATALOAD
0x1c6 AND
0x1c7 PUSH2 0x43c
0x1ca JUMP
---
0x1b6: JUMPDEST 
0x1b8: V158 = 0xb0
0x1bb: V159 = 0x1
0x1bd: V160 = 0xa0
0x1bf: V161 = 0x2
0x1c1: V162 = EXP 0x2 0xa0
0x1c2: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c3: V164 = 0x4
0x1c5: V165 = CALLDATALOAD 0x4
0x1c6: V166 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V167 = 0x43c
0x1ca: JUMP 0x43c
---
Entry stack: [V11, V154]
Stack pops: 1
Stack additions: [0xb0, V166]
Exit stack: [V11, 0xb0, V166]

================================

Block 0x1cb
[0x1cb:0x1d2]
---
Predecessors: [0x8d]
Successors: [0x1d3, 0x1d7]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd DUP1
0x1ce ISZERO
0x1cf PUSH2 0x1d7
0x1d2 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V168 = CALLVALUE
0x1ce: V169 = ISZERO V168
0x1cf: V170 = 0x1d7
0x1d2: JUMPI 0x1d7 V169
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V168]
Exit stack: [V11, V168]

================================

Block 0x1d3
[0x1d3:0x1d6]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 REVERT
---
0x1d3: V171 = 0x0
0x1d6: REVERT 0x0 0x0
---
Entry stack: [V11, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V168]

================================

Block 0x1d7
[0x1d7:0x1ee]
---
Predecessors: [0x1cb]
Successors: [0x513]
---
0x1d7 JUMPDEST
0x1d8 POP
0x1d9 PUSH2 0xb0
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 PUSH1 0x4
0x1e6 CALLDATALOAD
0x1e7 AND
0x1e8 PUSH1 0x24
0x1ea CALLDATALOAD
0x1eb PUSH2 0x513
0x1ee JUMP
---
0x1d7: JUMPDEST 
0x1d9: V172 = 0xb0
0x1dc: V173 = 0x1
0x1de: V174 = 0xa0
0x1e0: V175 = 0x2
0x1e2: V176 = EXP 0x2 0xa0
0x1e3: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e4: V178 = 0x4
0x1e6: V179 = CALLDATALOAD 0x4
0x1e7: V180 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V181 = 0x24
0x1ea: V182 = CALLDATALOAD 0x24
0x1eb: V183 = 0x513
0x1ee: JUMP 0x513
---
Entry stack: [V11, V168]
Stack pops: 1
Stack additions: [0xb0, V180, V182]
Exit stack: [V11, 0xb0, V180, V182]

================================

Block 0x1ef
[0x1ef:0x1f6]
---
Predecessors: [0x98]
Successors: [0x1f7, 0x1fb]
---
0x1ef JUMPDEST
0x1f0 CALLVALUE
0x1f1 DUP1
0x1f2 ISZERO
0x1f3 PUSH2 0x1fb
0x1f6 JUMPI
---
0x1ef: JUMPDEST 
0x1f0: V184 = CALLVALUE
0x1f2: V185 = ISZERO V184
0x1f3: V186 = 0x1fb
0x1f6: JUMPI 0x1fb V185
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V184]
Exit stack: [V11, V184]

================================

Block 0x1f7
[0x1f7:0x1fa]
---
Predecessors: [0x1ef]
Successors: []
---
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa REVERT
---
0x1f7: V187 = 0x0
0x1fa: REVERT 0x0 0x0
---
Entry stack: [V11, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V184]

================================

Block 0x1fb
[0x1fb:0x20f]
---
Predecessors: [0x1ef]
Successors: [0x53a]
---
0x1fb JUMPDEST
0x1fc POP
0x1fd PUSH2 0xb0
0x200 PUSH1 0x1
0x202 PUSH1 0xa0
0x204 PUSH1 0x2
0x206 EXP
0x207 SUB
0x208 PUSH1 0x4
0x20a CALLDATALOAD
0x20b AND
0x20c PUSH2 0x53a
0x20f JUMP
---
0x1fb: JUMPDEST 
0x1fd: V188 = 0xb0
0x200: V189 = 0x1
0x202: V190 = 0xa0
0x204: V191 = 0x2
0x206: V192 = EXP 0x2 0xa0
0x207: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x208: V194 = 0x4
0x20a: V195 = CALLDATALOAD 0x4
0x20b: V196 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V197 = 0x53a
0x20f: JUMP 0x53a
---
Entry stack: [V11, V184]
Stack pops: 1
Stack additions: [0xb0, V196]
Exit stack: [V11, 0xb0, V196]

================================

Block 0x210
[0x210:0x22c]
---
Predecessors: [0xbe]
Successors: [0xd9]
---
0x210 JUMPDEST
0x211 PUSH1 0x2
0x213 PUSH1 0x20
0x215 SWAP1
0x216 DUP2
0x217 MSTORE
0x218 PUSH1 0x0
0x21a SWAP3
0x21b DUP4
0x21c MSTORE
0x21d PUSH1 0x40
0x21f DUP1
0x220 DUP5
0x221 SHA3
0x222 SWAP1
0x223 SWAP2
0x224 MSTORE
0x225 SWAP1
0x226 DUP3
0x227 MSTORE
0x228 SWAP1
0x229 SHA3
0x22a SLOAD
0x22b DUP2
0x22c JUMP
---
0x210: JUMPDEST 
0x211: V198 = 0x2
0x213: V199 = 0x20
0x217: M[0x20] = 0x2
0x218: V200 = 0x0
0x21c: M[0x0] = V60
0x21d: V201 = 0x40
0x221: V202 = SHA3 0x0 0x40
0x224: M[0x20] = V202
0x227: M[0x0] = V63
0x229: V203 = SHA3 0x0 0x40
0x22a: V204 = S[V203]
0x22c: JUMP 0xd9
---
Entry stack: [V11, 0xd9, V60, V63]
Stack pops: 3
Stack additions: [S2, V204]
Exit stack: [V11, 0xd9, V204]

================================

Block 0x22d
[0x22d:0x23e]
---
Predecessors: [0xf7]
Successors: [0xd9]
---
0x22d JUMPDEST
0x22e PUSH1 0x1
0x230 PUSH1 0x20
0x232 MSTORE
0x233 PUSH1 0x0
0x235 SWAP1
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x40
0x23a SWAP1
0x23b SHA3
0x23c SLOAD
0x23d DUP2
0x23e JUMP
---
0x22d: JUMPDEST 
0x22e: V205 = 0x1
0x230: V206 = 0x20
0x232: M[0x20] = 0x1
0x233: V207 = 0x0
0x237: M[0x0] = V83
0x238: V208 = 0x40
0x23b: V209 = SHA3 0x0 0x40
0x23c: V210 = S[V209]
0x23e: JUMP 0xd9
---
Entry stack: [V11, 0xd9, V83]
Stack pops: 2
Stack additions: [S1, V210]
Exit stack: [V11, 0xd9, V210]

================================

Block 0x23f
[0x23f:0x25b]
---
Predecessors: [0x118]
Successors: [0xd9]
---
0x23f JUMPDEST
0x240 PUSH1 0x3
0x242 PUSH1 0x20
0x244 SWAP1
0x245 DUP2
0x246 MSTORE
0x247 PUSH1 0x0
0x249 SWAP3
0x24a DUP4
0x24b MSTORE
0x24c PUSH1 0x40
0x24e DUP1
0x24f DUP5
0x250 SHA3
0x251 SWAP1
0x252 SWAP2
0x253 MSTORE
0x254 SWAP1
0x255 DUP3
0x256 MSTORE
0x257 SWAP1
0x258 SHA3
0x259 SLOAD
0x25a DUP2
0x25b JUMP
---
0x23f: JUMPDEST 
0x240: V211 = 0x3
0x242: V212 = 0x20
0x246: M[0x20] = 0x3
0x247: V213 = 0x0
0x24b: M[0x0] = V97
0x24c: V214 = 0x40
0x250: V215 = SHA3 0x0 0x40
0x253: M[0x20] = V215
0x256: M[0x0] = V100
0x258: V216 = SHA3 0x0 0x40
0x259: V217 = S[V216]
0x25b: JUMP 0xd9
---
Entry stack: [V11, 0xd9, V97, V100]
Stack pops: 3
Stack additions: [S2, V217]
Exit stack: [V11, 0xd9, V217]

================================

Block 0x25c
[0x25c:0x298]
---
Predecessors: [0x133]
Successors: [0xb0]
---
0x25c JUMPDEST
0x25d PUSH1 0x1
0x25f PUSH1 0xa0
0x261 PUSH1 0x2
0x263 EXP
0x264 SUB
0x265 AND
0x266 PUSH1 0x0
0x268 DUP2
0x269 DUP2
0x26a MSTORE
0x26b PUSH1 0x2
0x26d PUSH1 0x20
0x26f SWAP1
0x270 DUP2
0x271 MSTORE
0x272 PUSH1 0x40
0x274 DUP1
0x275 DUP4
0x276 SHA3
0x277 CALLER
0x278 DUP5
0x279 MSTORE
0x27a DUP3
0x27b MSTORE
0x27c DUP1
0x27d DUP4
0x27e SHA3
0x27f DUP1
0x280 SLOAD
0x281 CALLVALUE
0x282 SWAP1
0x283 DUP2
0x284 ADD
0x285 SWAP1
0x286 SWAP2
0x287 SSTORE
0x288 SWAP4
0x289 DUP4
0x28a MSTORE
0x28b SWAP1
0x28c DUP3
0x28d SWAP1
0x28e MSTORE
0x28f SWAP1
0x290 SHA3
0x291 DUP1
0x292 SLOAD
0x293 SWAP1
0x294 SWAP2
0x295 ADD
0x296 SWAP1
0x297 SSTORE
0x298 JUMP
---
0x25c: JUMPDEST 
0x25d: V218 = 0x1
0x25f: V219 = 0xa0
0x261: V220 = 0x2
0x263: V221 = EXP 0x2 0xa0
0x264: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x265: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x266: V224 = 0x0
0x26a: M[0x0] = V223
0x26b: V225 = 0x2
0x26d: V226 = 0x20
0x271: M[0x20] = 0x2
0x272: V227 = 0x40
0x276: V228 = SHA3 0x0 0x40
0x277: V229 = CALLER
0x279: M[0x0] = V229
0x27b: M[0x20] = V228
0x27e: V230 = SHA3 0x0 0x40
0x280: V231 = S[V230]
0x281: V232 = CALLVALUE
0x284: V233 = ADD V232 V231
0x287: S[V230] = V233
0x28a: M[0x0] = V223
0x28e: M[0x20] = 0x0
0x290: V234 = SHA3 0x0 0x40
0x292: V235 = S[V234]
0x295: V236 = ADD V232 V235
0x297: S[V234] = V236
0x298: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V110]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x299
[0x299:0x2aa]
---
Predecessors: [0x153]
Successors: [0xd9]
---
0x299 JUMPDEST
0x29a PUSH1 0x0
0x29c PUSH1 0x20
0x29e DUP2
0x29f SWAP1
0x2a0 MSTORE
0x2a1 SWAP1
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 PUSH1 0x40
0x2a6 SWAP1
0x2a7 SHA3
0x2a8 SLOAD
0x2a9 DUP2
0x2aa JUMP
---
0x299: JUMPDEST 
0x29a: V237 = 0x0
0x29c: V238 = 0x20
0x2a0: M[0x20] = 0x0
0x2a3: M[0x0] = V124
0x2a4: V239 = 0x40
0x2a7: V240 = SHA3 0x0 0x40
0x2a8: V241 = S[V240]
0x2aa: JUMP 0xd9
---
Entry stack: [V11, 0xd9, V124]
Stack pops: 2
Stack additions: [S1, V241]
Exit stack: [V11, 0xd9, V241]

================================

Block 0x2ab
[0x2ab:0x2d5]
---
Predecessors: [0x174]
Successors: [0x2d6, 0x2da]
---
0x2ab JUMPDEST
0x2ac PUSH1 0x1
0x2ae PUSH1 0xa0
0x2b0 PUSH1 0x2
0x2b2 EXP
0x2b3 SUB
0x2b4 DUP2
0x2b5 AND
0x2b6 PUSH1 0x0
0x2b8 SWAP1
0x2b9 DUP2
0x2ba MSTORE
0x2bb PUSH1 0x2
0x2bd PUSH1 0x20
0x2bf SWAP1
0x2c0 DUP2
0x2c1 MSTORE
0x2c2 PUSH1 0x40
0x2c4 DUP1
0x2c5 DUP4
0x2c6 SHA3
0x2c7 CALLER
0x2c8 DUP5
0x2c9 MSTORE
0x2ca SWAP1
0x2cb SWAP2
0x2cc MSTORE
0x2cd DUP2
0x2ce SHA3
0x2cf SLOAD
0x2d0 DUP2
0x2d1 LT
0x2d2 PUSH2 0x2da
0x2d5 JUMPI
---
0x2ab: JUMPDEST 
0x2ac: V242 = 0x1
0x2ae: V243 = 0xa0
0x2b0: V244 = 0x2
0x2b2: V245 = EXP 0x2 0xa0
0x2b3: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V247 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: V248 = 0x0
0x2ba: M[0x0] = V247
0x2bb: V249 = 0x2
0x2bd: V250 = 0x20
0x2c1: M[0x20] = 0x2
0x2c2: V251 = 0x40
0x2c6: V252 = SHA3 0x0 0x40
0x2c7: V253 = CALLER
0x2c9: M[0x0] = V253
0x2cc: M[0x20] = V252
0x2ce: V254 = SHA3 0x0 0x40
0x2cf: V255 = S[V254]
0x2d1: V256 = LT 0x0 V255
0x2d2: V257 = 0x2da
0x2d5: JUMPI 0x2da V256
---
Entry stack: [V11, 0xb0, V138]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, 0xb0, V138, 0x0]

================================

Block 0x2d6
[0x2d6:0x2d9]
---
Predecessors: [0x2ab]
Successors: []
---
0x2d6 PUSH1 0x0
0x2d8 DUP1
0x2d9 REVERT
---
0x2d6: V258 = 0x0
0x2d9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V138, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V138, 0x0]

================================

Block 0x2da
[0x2da:0x317]
---
Predecessors: [0x2ab]
Successors: [0x649]
---
0x2da JUMPDEST
0x2db POP
0x2dc PUSH1 0x1
0x2de PUSH1 0xa0
0x2e0 PUSH1 0x2
0x2e2 EXP
0x2e3 SUB
0x2e4 DUP2
0x2e5 AND
0x2e6 PUSH1 0x0
0x2e8 DUP2
0x2e9 DUP2
0x2ea MSTORE
0x2eb PUSH1 0x2
0x2ed PUSH1 0x20
0x2ef SWAP1
0x2f0 DUP2
0x2f1 MSTORE
0x2f2 PUSH1 0x40
0x2f4 DUP1
0x2f5 DUP4
0x2f6 SHA3
0x2f7 CALLER
0x2f8 DUP5
0x2f9 MSTORE
0x2fa DUP3
0x2fb MSTORE
0x2fc DUP1
0x2fd DUP4
0x2fe SHA3
0x2ff DUP1
0x300 SLOAD
0x301 SWAP1
0x302 DUP5
0x303 SWAP1
0x304 SSTORE
0x305 SWAP4
0x306 DUP4
0x307 MSTORE
0x308 SWAP1
0x309 DUP3
0x30a SWAP1
0x30b MSTORE
0x30c SWAP1
0x30d SHA3
0x30e SLOAD
0x30f PUSH2 0x318
0x312 SWAP1
0x313 DUP3
0x314 PUSH2 0x649
0x317 JUMP
---
0x2da: JUMPDEST 
0x2dc: V259 = 0x1
0x2de: V260 = 0xa0
0x2e0: V261 = 0x2
0x2e2: V262 = EXP 0x2 0xa0
0x2e3: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e5: V264 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x2e6: V265 = 0x0
0x2ea: M[0x0] = V264
0x2eb: V266 = 0x2
0x2ed: V267 = 0x20
0x2f1: M[0x20] = 0x2
0x2f2: V268 = 0x40
0x2f6: V269 = SHA3 0x0 0x40
0x2f7: V270 = CALLER
0x2f9: M[0x0] = V270
0x2fb: M[0x20] = V269
0x2fe: V271 = SHA3 0x0 0x40
0x300: V272 = S[V271]
0x304: S[V271] = 0x0
0x307: M[0x0] = V264
0x30b: M[0x20] = 0x0
0x30d: V273 = SHA3 0x0 0x40
0x30e: V274 = S[V273]
0x30f: V275 = 0x318
0x314: V276 = 0x649
0x317: JUMP 0x649
---
Entry stack: [V11, 0xb0, V138, 0x0]
Stack pops: 2
Stack additions: [S1, V272, 0x318, V274, V272]
Exit stack: [V11, 0xb0, V138, V272, 0x318, V274, V272]

================================

Block 0x318
[0x318:0x355]
---
Predecessors: [0x655]
Successors: [0x356, 0x35f]
---
0x318 JUMPDEST
0x319 PUSH1 0x1
0x31b PUSH1 0xa0
0x31d PUSH1 0x2
0x31f EXP
0x320 SUB
0x321 DUP4
0x322 AND
0x323 PUSH1 0x0
0x325 SWAP1
0x326 DUP2
0x327 MSTORE
0x328 PUSH1 0x20
0x32a DUP2
0x32b SWAP1
0x32c MSTORE
0x32d PUSH1 0x40
0x32f DUP1
0x330 DUP3
0x331 SHA3
0x332 SWAP3
0x333 SWAP1
0x334 SWAP3
0x335 SSTORE
0x336 SWAP1
0x337 MLOAD
0x338 CALLER
0x339 SWAP2
0x33a DUP4
0x33b ISZERO
0x33c PUSH2 0x8fc
0x33f MUL
0x340 SWAP2
0x341 DUP5
0x342 SWAP2
0x343 DUP2
0x344 DUP2
0x345 DUP2
0x346 DUP6
0x347 DUP9
0x348 DUP9
0x349 CALL
0x34a SWAP4
0x34b POP
0x34c POP
0x34d POP
0x34e POP
0x34f ISZERO
0x350 DUP1
0x351 ISZERO
0x352 PUSH2 0x35f
0x355 JUMPI
---
0x318: JUMPDEST 
0x319: V277 = 0x1
0x31b: V278 = 0xa0
0x31d: V279 = 0x2
0x31f: V280 = EXP 0x2 0xa0
0x320: V281 = SUB 0x10000000000000000000000000000000000000000 0x1
0x322: V282 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x323: V283 = 0x0
0x327: M[0x0] = V282
0x328: V284 = 0x20
0x32c: M[0x20] = 0x0
0x32d: V285 = 0x40
0x331: V286 = SHA3 0x0 0x40
0x335: S[V286] = V546
0x337: V287 = M[0x40]
0x338: V288 = CALLER
0x33b: V289 = ISZERO V272
0x33c: V290 = 0x8fc
0x33f: V291 = MUL 0x8fc V289
0x349: V292 = CALL V291 V288 V272 V287 0x0 V287 0x0
0x34f: V293 = ISZERO V292
0x351: V294 = ISZERO V293
0x352: V295 = 0x35f
0x355: JUMPI 0x35f V294
---
Entry stack: [V11, 0xb0, V138, V272, V546]
Stack pops: 3
Stack additions: [S2, S1, V293]
Exit stack: [V11, 0xb0, V138, V272, V293]

================================

Block 0x356
[0x356:0x35e]
---
Predecessors: [0x318]
Successors: []
---
0x356 RETURNDATASIZE
0x357 PUSH1 0x0
0x359 DUP1
0x35a RETURNDATACOPY
0x35b RETURNDATASIZE
0x35c PUSH1 0x0
0x35e REVERT
---
0x356: V296 = RETURNDATASIZE
0x357: V297 = 0x0
0x35a: RETURNDATACOPY 0x0 0x0 V296
0x35b: V298 = RETURNDATASIZE
0x35c: V299 = 0x0
0x35e: REVERT 0x0 V298
---
Entry stack: [V11, 0xb0, V138, V272, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V138, V272, V293]

================================

Block 0x35f
[0x35f:0x363]
---
Predecessors: [0x318]
Successors: [0xb0]
---
0x35f JUMPDEST
0x360 POP
0x361 POP
0x362 POP
0x363 JUMP
---
0x35f: JUMPDEST 
0x363: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V138, V272, V293]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x364
[0x364:0x392]
---
Predecessors: [0x195]
Successors: [0x393, 0x397]
---
0x364 JUMPDEST
0x365 PUSH1 0x1
0x367 PUSH1 0xa0
0x369 PUSH1 0x2
0x36b EXP
0x36c SUB
0x36d DUP2
0x36e AND
0x36f PUSH1 0x0
0x371 SWAP1
0x372 DUP2
0x373 MSTORE
0x374 PUSH1 0x2
0x376 PUSH1 0x20
0x378 SWAP1
0x379 DUP2
0x37a MSTORE
0x37b PUSH1 0x40
0x37d DUP1
0x37e DUP4
0x37f SHA3
0x380 CALLER
0x381 DUP5
0x382 MSTORE
0x383 SWAP1
0x384 SWAP2
0x385 MSTORE
0x386 DUP2
0x387 SHA3
0x388 SLOAD
0x389 DUP2
0x38a SWAP1
0x38b DUP2
0x38c SWAP1
0x38d DUP2
0x38e LT
0x38f PUSH2 0x397
0x392 JUMPI
---
0x364: JUMPDEST 
0x365: V300 = 0x1
0x367: V301 = 0xa0
0x369: V302 = 0x2
0x36b: V303 = EXP 0x2 0xa0
0x36c: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36e: V305 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V306 = 0x0
0x373: M[0x0] = V305
0x374: V307 = 0x2
0x376: V308 = 0x20
0x37a: M[0x20] = 0x2
0x37b: V309 = 0x40
0x37f: V310 = SHA3 0x0 0x40
0x380: V311 = CALLER
0x382: M[0x0] = V311
0x385: M[0x20] = V310
0x387: V312 = SHA3 0x0 0x40
0x388: V313 = S[V312]
0x38e: V314 = LT 0x0 V313
0x38f: V315 = 0x397
0x392: JUMPI 0x397 V314
---
Entry stack: [V11, 0xb0, V152]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xb0, V152, 0x0, 0x0, 0x0]

================================

Block 0x393
[0x393:0x396]
---
Predecessors: [0x364]
Successors: []
---
0x393 PUSH1 0x0
0x395 DUP1
0x396 REVERT
---
0x393: V316 = 0x0
0x396: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V152, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V152, 0x0, 0x0, 0x0]

================================

Block 0x397
[0x397:0x3f9]
---
Predecessors: [0x364]
Successors: [0x3fa, 0x3fe]
---
0x397 JUMPDEST
0x398 DUP4
0x399 SWAP3
0x39a POP
0x39b ADDRESS
0x39c PUSH1 0x1
0x39e PUSH1 0xa0
0x3a0 PUSH1 0x2
0x3a2 EXP
0x3a3 SUB
0x3a4 AND
0x3a5 BALANCE
0x3a6 SWAP2
0x3a7 POP
0x3a8 DUP3
0x3a9 PUSH1 0x1
0x3ab PUSH1 0xa0
0x3ad PUSH1 0x2
0x3af EXP
0x3b0 SUB
0x3b1 AND
0x3b2 PUSH4 0xe9fad8ee
0x3b7 PUSH1 0x40
0x3b9 MLOAD
0x3ba DUP2
0x3bb PUSH4 0xffffffff
0x3c0 AND
0x3c1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3df MUL
0x3e0 DUP2
0x3e1 MSTORE
0x3e2 PUSH1 0x4
0x3e4 ADD
0x3e5 PUSH1 0x0
0x3e7 PUSH1 0x40
0x3e9 MLOAD
0x3ea DUP1
0x3eb DUP4
0x3ec SUB
0x3ed DUP2
0x3ee PUSH1 0x0
0x3f0 DUP8
0x3f1 DUP1
0x3f2 EXTCODESIZE
0x3f3 ISZERO
0x3f4 DUP1
0x3f5 ISZERO
0x3f6 PUSH2 0x3fe
0x3f9 JUMPI
---
0x397: JUMPDEST 
0x39b: V317 = ADDRESS
0x39c: V318 = 0x1
0x39e: V319 = 0xa0
0x3a0: V320 = 0x2
0x3a2: V321 = EXP 0x2 0xa0
0x3a3: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a4: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x3a5: V324 = BALANCE V323
0x3a9: V325 = 0x1
0x3ab: V326 = 0xa0
0x3ad: V327 = 0x2
0x3af: V328 = EXP 0x2 0xa0
0x3b0: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b1: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x3b2: V331 = 0xe9fad8ee
0x3b7: V332 = 0x40
0x3b9: V333 = M[0x40]
0x3bb: V334 = 0xffffffff
0x3c0: V335 = AND 0xffffffff 0xe9fad8ee
0x3c1: V336 = 0x100000000000000000000000000000000000000000000000000000000
0x3df: V337 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe9fad8ee
0x3e1: M[V333] = 0xe9fad8ee00000000000000000000000000000000000000000000000000000000
0x3e2: V338 = 0x4
0x3e4: V339 = ADD 0x4 V333
0x3e5: V340 = 0x0
0x3e7: V341 = 0x40
0x3e9: V342 = M[0x40]
0x3ec: V343 = SUB V339 V342
0x3ee: V344 = 0x0
0x3f2: V345 = EXTCODESIZE V330
0x3f3: V346 = ISZERO V345
0x3f5: V347 = ISZERO V346
0x3f6: V348 = 0x3fe
0x3f9: JUMPI 0x3fe V347
---
Entry stack: [V11, 0xb0, V152, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S3, V324, S0, V330, 0xe9fad8ee, V339, 0x0, V342, V343, V342, 0x0, V330, V346]
Exit stack: [V11, 0xb0, V152, V152, V324, 0x0, V330, 0xe9fad8ee, V339, 0x0, V342, V343, V342, 0x0, V330, V346]

================================

Block 0x3fa
[0x3fa:0x3fd]
---
Predecessors: [0x397]
Successors: []
---
0x3fa PUSH1 0x0
0x3fc DUP1
0x3fd REVERT
---
0x3fa: V349 = 0x0
0x3fd: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V152, V152, V324, 0x0, V330, 0xe9fad8ee, V339, 0x0, V342, V343, V342, 0x0, V330, V346]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V152, V152, V324, 0x0, V330, 0xe9fad8ee, V339, 0x0, V342, V343, V342, 0x0, V330, V346]

================================

Block 0x3fe
[0x3fe:0x408]
---
Predecessors: [0x397]
Successors: [0x409, 0x412]
---
0x3fe JUMPDEST
0x3ff POP
0x400 GAS
0x401 CALL
0x402 ISZERO
0x403 DUP1
0x404 ISZERO
0x405 PUSH2 0x412
0x408 JUMPI
---
0x3fe: JUMPDEST 
0x400: V350 = GAS
0x401: V351 = CALL V350 V330 0x0 V342 V343 V342 0x0
0x402: V352 = ISZERO V351
0x404: V353 = ISZERO V352
0x405: V354 = 0x412
0x408: JUMPI 0x412 V353
---
Entry stack: [V11, 0xb0, V152, V152, V324, 0x0, V330, 0xe9fad8ee, V339, 0x0, V342, V343, V342, 0x0, V330, V346]
Stack pops: 7
Stack additions: [V352]
Exit stack: [V11, 0xb0, V152, V152, V324, 0x0, V330, 0xe9fad8ee, V339, V352]

================================

Block 0x409
[0x409:0x411]
---
Predecessors: [0x3fe]
Successors: []
---
0x409 RETURNDATASIZE
0x40a PUSH1 0x0
0x40c DUP1
0x40d RETURNDATACOPY
0x40e RETURNDATASIZE
0x40f PUSH1 0x0
0x411 REVERT
---
0x409: V355 = RETURNDATASIZE
0x40a: V356 = 0x0
0x40d: RETURNDATACOPY 0x0 0x0 V355
0x40e: V357 = RETURNDATASIZE
0x40f: V358 = 0x0
0x411: REVERT 0x0 V357
---
Entry stack: [V11, 0xb0, V152, V152, V324, 0x0, V330, 0xe9fad8ee, V339, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V152, V152, V324, 0x0, V330, 0xe9fad8ee, V339, V352]

================================

Block 0x412
[0x412:0x43b]
---
Predecessors: [0x3fe]
Successors: [0xb0]
---
0x412 JUMPDEST
0x413 POP
0x414 POP
0x415 POP
0x416 POP
0x417 PUSH1 0x1
0x419 PUSH1 0xa0
0x41b PUSH1 0x2
0x41d EXP
0x41e SUB
0x41f SWAP4
0x420 SWAP1
0x421 SWAP4
0x422 AND
0x423 PUSH1 0x0
0x425 SWAP1
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x1
0x42a PUSH1 0x20
0x42c MSTORE
0x42d PUSH1 0x40
0x42f SWAP1
0x430 SHA3
0x431 ADDRESS
0x432 BALANCE
0x433 SWAP2
0x434 SWAP1
0x435 SWAP2
0x436 SUB
0x437 SWAP1
0x438 SSTORE
0x439 POP
0x43a POP
0x43b JUMP
---
0x412: JUMPDEST 
0x417: V359 = 0x1
0x419: V360 = 0xa0
0x41b: V361 = 0x2
0x41d: V362 = EXP 0x2 0xa0
0x41e: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x422: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x423: V365 = 0x0
0x427: M[0x0] = V364
0x428: V366 = 0x1
0x42a: V367 = 0x20
0x42c: M[0x20] = 0x1
0x42d: V368 = 0x40
0x430: V369 = SHA3 0x0 0x40
0x431: V370 = ADDRESS
0x432: V371 = BALANCE V370
0x436: V372 = SUB V371 V324
0x438: S[V369] = V372
0x43b: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V152, V152, V324, 0x0, V330, 0xe9fad8ee, V339, V352]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x43c
[0x43c:0x463]
---
Predecessors: [0x1b6]
Successors: [0x464, 0x468]
---
0x43c JUMPDEST
0x43d PUSH1 0x1
0x43f PUSH1 0xa0
0x441 PUSH1 0x2
0x443 EXP
0x444 SUB
0x445 DUP2
0x446 AND
0x447 PUSH1 0x0
0x449 SWAP1
0x44a DUP2
0x44b MSTORE
0x44c PUSH1 0x1
0x44e PUSH1 0x20
0x450 DUP2
0x451 SWAP1
0x452 MSTORE
0x453 PUSH1 0x40
0x455 DUP3
0x456 SHA3
0x457 SLOAD
0x458 DUP3
0x459 SWAP2
0x45a DUP3
0x45b SWAP2
0x45c DUP3
0x45d SWAP2
0x45e EQ
0x45f ISZERO
0x460 PUSH2 0x468
0x463 JUMPI
---
0x43c: JUMPDEST 
0x43d: V373 = 0x1
0x43f: V374 = 0xa0
0x441: V375 = 0x2
0x443: V376 = EXP 0x2 0xa0
0x444: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x446: V378 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x447: V379 = 0x0
0x44b: M[0x0] = V378
0x44c: V380 = 0x1
0x44e: V381 = 0x20
0x452: M[0x20] = 0x1
0x453: V382 = 0x40
0x456: V383 = SHA3 0x0 0x40
0x457: V384 = S[V383]
0x45e: V385 = EQ 0x1 V384
0x45f: V386 = ISZERO V385
0x460: V387 = 0x468
0x463: JUMPI 0x468 V386
---
Entry stack: [V11, 0xb0, V166]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xb0, V166, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x464
[0x464:0x467]
---
Predecessors: [0x43c]
Successors: []
---
0x464 PUSH1 0x0
0x466 DUP1
0x467 REVERT
---
0x464: V388 = 0x0
0x467: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V166, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V166, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x468
[0x468:0x4ac]
---
Predecessors: [0x43c]
Successors: [0x4ad, 0x4ae]
---
0x468 JUMPDEST
0x469 PUSH1 0x1
0x46b PUSH1 0xa0
0x46d PUSH1 0x2
0x46f EXP
0x470 SUB
0x471 DUP6
0x472 AND
0x473 PUSH1 0x0
0x475 SWAP1
0x476 DUP2
0x477 MSTORE
0x478 PUSH1 0x20
0x47a DUP2
0x47b DUP2
0x47c MSTORE
0x47d PUSH1 0x40
0x47f DUP1
0x480 DUP4
0x481 SHA3
0x482 SLOAD
0x483 PUSH1 0x2
0x485 DUP4
0x486 MSTORE
0x487 DUP2
0x488 DUP5
0x489 SHA3
0x48a CALLER
0x48b DUP6
0x48c MSTORE
0x48d SWAP1
0x48e SWAP3
0x48f MSTORE
0x490 SWAP1
0x491 SWAP2
0x492 SHA3
0x493 SLOAD
0x494 SWAP1
0x495 SWAP5
0x496 POP
0x497 SWAP3
0x498 POP
0x499 DUP4
0x49a PUSH9 0x10000000000000000
0x4a4 DUP5
0x4a5 MUL
0x4a6 DUP2
0x4a7 ISZERO
0x4a8 ISZERO
0x4a9 PUSH2 0x4ae
0x4ac JUMPI
---
0x468: JUMPDEST 
0x469: V389 = 0x1
0x46b: V390 = 0xa0
0x46d: V391 = 0x2
0x46f: V392 = EXP 0x2 0xa0
0x470: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x472: V394 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x473: V395 = 0x0
0x477: M[0x0] = V394
0x478: V396 = 0x20
0x47c: M[0x20] = 0x0
0x47d: V397 = 0x40
0x481: V398 = SHA3 0x0 0x40
0x482: V399 = S[V398]
0x483: V400 = 0x2
0x486: M[0x20] = 0x2
0x489: V401 = SHA3 0x0 0x40
0x48a: V402 = CALLER
0x48c: M[0x0] = V402
0x48f: M[0x20] = V401
0x492: V403 = SHA3 0x0 0x40
0x493: V404 = S[V403]
0x49a: V405 = 0x10000000000000000
0x4a5: V406 = MUL V404 0x10000000000000000
0x4a7: V407 = ISZERO V399
0x4a8: V408 = ISZERO V407
0x4a9: V409 = 0x4ae
0x4ac: JUMPI 0x4ae V408
---
Entry stack: [V11, 0xb0, V166, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, V399, V404, S1, S0, V399, V406]
Exit stack: [V11, 0xb0, V166, V399, V404, 0x0, 0x0, V399, V406]

================================

Block 0x4ad
[0x4ad:0x4ad]
---
Predecessors: [0x468]
Successors: []
---
0x4ad INVALID
---
0x4ad: INVALID 
---
Entry stack: [V11, 0xb0, V166, V399, V404, 0x0, 0x0, V399, V406]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V166, V399, V404, 0x0, 0x0, V399, V406]

================================

Block 0x4ae
[0x4ae:0x501]
---
Predecessors: [0x468]
Successors: [0x502, 0x50b]
---
0x4ae JUMPDEST
0x4af PUSH1 0x1
0x4b1 PUSH1 0xa0
0x4b3 PUSH1 0x2
0x4b5 EXP
0x4b6 SUB
0x4b7 DUP8
0x4b8 AND
0x4b9 PUSH1 0x0
0x4bb SWAP1
0x4bc DUP2
0x4bd MSTORE
0x4be PUSH1 0x1
0x4c0 PUSH1 0x20
0x4c2 MSTORE
0x4c3 PUSH1 0x40
0x4c5 SWAP1
0x4c6 SHA3
0x4c7 SLOAD
0x4c8 SWAP2
0x4c9 SWAP1
0x4ca DIV
0x4cb SWAP3
0x4cc POP
0x4cd PUSH9 0x10000000000000000
0x4d7 SWAP1
0x4d8 DUP4
0x4d9 MUL
0x4da PUSH1 0x40
0x4dc MLOAD
0x4dd SWAP2
0x4de SWAP1
0x4df DIV
0x4e0 SWAP2
0x4e1 POP
0x4e2 CALLER
0x4e3 SWAP1
0x4e4 DUP3
0x4e5 ISZERO
0x4e6 PUSH2 0x8fc
0x4e9 MUL
0x4ea SWAP1
0x4eb DUP4
0x4ec SWAP1
0x4ed PUSH1 0x0
0x4ef DUP2
0x4f0 DUP2
0x4f1 DUP2
0x4f2 DUP6
0x4f3 DUP9
0x4f4 DUP9
0x4f5 CALL
0x4f6 SWAP4
0x4f7 POP
0x4f8 POP
0x4f9 POP
0x4fa POP
0x4fb ISZERO
0x4fc DUP1
0x4fd ISZERO
0x4fe PUSH2 0x50b
0x501 JUMPI
---
0x4ae: JUMPDEST 
0x4af: V410 = 0x1
0x4b1: V411 = 0xa0
0x4b3: V412 = 0x2
0x4b5: V413 = EXP 0x2 0xa0
0x4b6: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b8: V415 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x4b9: V416 = 0x0
0x4bd: M[0x0] = V415
0x4be: V417 = 0x1
0x4c0: V418 = 0x20
0x4c2: M[0x20] = 0x1
0x4c3: V419 = 0x40
0x4c6: V420 = SHA3 0x0 0x40
0x4c7: V421 = S[V420]
0x4ca: V422 = DIV V406 V399
0x4cd: V423 = 0x10000000000000000
0x4d9: V424 = MUL V422 V421
0x4da: V425 = 0x40
0x4dc: V426 = M[0x40]
0x4df: V427 = DIV V424 0x10000000000000000
0x4e2: V428 = CALLER
0x4e5: V429 = ISZERO V427
0x4e6: V430 = 0x8fc
0x4e9: V431 = MUL 0x8fc V429
0x4ed: V432 = 0x0
0x4f5: V433 = CALL V431 V428 V427 V426 0x0 V426 0x0
0x4fb: V434 = ISZERO V433
0x4fd: V435 = ISZERO V434
0x4fe: V436 = 0x50b
0x501: JUMPI 0x50b V435
---
Entry stack: [V11, 0xb0, V166, V399, V404, 0x0, 0x0, V399, V406]
Stack pops: 7
Stack additions: [S6, S5, S4, V422, V427, V434]
Exit stack: [V11, 0xb0, V166, V399, V404, V422, V427, V434]

================================

Block 0x502
[0x502:0x50a]
---
Predecessors: [0x4ae]
Successors: []
---
0x502 RETURNDATASIZE
0x503 PUSH1 0x0
0x505 DUP1
0x506 RETURNDATACOPY
0x507 RETURNDATASIZE
0x508 PUSH1 0x0
0x50a REVERT
---
0x502: V437 = RETURNDATASIZE
0x503: V438 = 0x0
0x506: RETURNDATACOPY 0x0 0x0 V437
0x507: V439 = RETURNDATASIZE
0x508: V440 = 0x0
0x50a: REVERT 0x0 V439
---
Entry stack: [V11, 0xb0, V166, V399, V404, V422, V427, V434]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V166, V399, V404, V422, V427, V434]

================================

Block 0x50b
[0x50b:0x512]
---
Predecessors: [0x4ae]
Successors: [0xb0]
---
0x50b JUMPDEST
0x50c POP
0x50d POP
0x50e POP
0x50f POP
0x510 POP
0x511 POP
0x512 JUMP
---
0x50b: JUMPDEST 
0x512: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V166, V399, V404, V422, V427, V434]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x513
[0x513:0x539]
---
Predecessors: [0x1d7]
Successors: [0xb0]
---
0x513 JUMPDEST
0x514 PUSH1 0x1
0x516 PUSH1 0xa0
0x518 PUSH1 0x2
0x51a EXP
0x51b SUB
0x51c SWAP1
0x51d SWAP2
0x51e AND
0x51f PUSH1 0x0
0x521 SWAP1
0x522 DUP2
0x523 MSTORE
0x524 PUSH1 0x3
0x526 PUSH1 0x20
0x528 SWAP1
0x529 DUP2
0x52a MSTORE
0x52b PUSH1 0x40
0x52d DUP1
0x52e DUP4
0x52f SHA3
0x530 CALLER
0x531 DUP5
0x532 MSTORE
0x533 SWAP1
0x534 SWAP2
0x535 MSTORE
0x536 SWAP1
0x537 SHA3
0x538 SSTORE
0x539 JUMP
---
0x513: JUMPDEST 
0x514: V441 = 0x1
0x516: V442 = 0xa0
0x518: V443 = 0x2
0x51a: V444 = EXP 0x2 0xa0
0x51b: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51e: V446 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V447 = 0x0
0x523: M[0x0] = V446
0x524: V448 = 0x3
0x526: V449 = 0x20
0x52a: M[0x20] = 0x3
0x52b: V450 = 0x40
0x52f: V451 = SHA3 0x0 0x40
0x530: V452 = CALLER
0x532: M[0x0] = V452
0x535: M[0x20] = V451
0x537: V453 = SHA3 0x0 0x40
0x538: S[V453] = V182
0x539: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V180, V182]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x53a
[0x53a:0x558]
---
Predecessors: [0x1fb]
Successors: [0x559, 0x55d]
---
0x53a JUMPDEST
0x53b PUSH1 0x1
0x53d PUSH1 0xa0
0x53f PUSH1 0x2
0x541 EXP
0x542 SUB
0x543 DUP2
0x544 AND
0x545 PUSH1 0x0
0x547 SWAP1
0x548 DUP2
0x549 MSTORE
0x54a PUSH1 0x1
0x54c PUSH1 0x20
0x54e MSTORE
0x54f PUSH1 0x40
0x551 DUP2
0x552 SHA3
0x553 SLOAD
0x554 ISZERO
0x555 PUSH2 0x55d
0x558 JUMPI
---
0x53a: JUMPDEST 
0x53b: V454 = 0x1
0x53d: V455 = 0xa0
0x53f: V456 = 0x2
0x541: V457 = EXP 0x2 0xa0
0x542: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x544: V459 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x545: V460 = 0x0
0x549: M[0x0] = V459
0x54a: V461 = 0x1
0x54c: V462 = 0x20
0x54e: M[0x20] = 0x1
0x54f: V463 = 0x40
0x552: V464 = SHA3 0x0 0x40
0x553: V465 = S[V464]
0x554: V466 = ISZERO V465
0x555: V467 = 0x55d
0x558: JUMPI 0x55d V466
---
Entry stack: [V11, 0xb0, V196]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, 0xb0, V196, 0x0]

================================

Block 0x559
[0x559:0x55c]
---
Predecessors: [0x53a]
Successors: []
---
0x559 PUSH1 0x0
0x55b DUP1
0x55c REVERT
---
0x559: V468 = 0x0
0x55c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V196, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V196, 0x0]

================================

Block 0x55d
[0x55d:0x589]
---
Predecessors: [0x53a]
Successors: [0x58a, 0x58e]
---
0x55d JUMPDEST
0x55e PUSH1 0x1
0x560 PUSH1 0xa0
0x562 PUSH1 0x2
0x564 EXP
0x565 SUB
0x566 DUP3
0x567 AND
0x568 PUSH1 0x0
0x56a DUP2
0x56b DUP2
0x56c MSTORE
0x56d PUSH1 0x3
0x56f PUSH1 0x20
0x571 SWAP1
0x572 DUP2
0x573 MSTORE
0x574 PUSH1 0x40
0x576 DUP1
0x577 DUP4
0x578 SHA3
0x579 CALLER
0x57a DUP5
0x57b MSTORE
0x57c SWAP1
0x57d SWAP2
0x57e MSTORE
0x57f SWAP1
0x580 SHA3
0x581 SLOAD
0x582 SWAP1
0x583 BALANCE
0x584 GT
0x585 ISZERO
0x586 PUSH2 0x58e
0x589 JUMPI
---
0x55d: JUMPDEST 
0x55e: V469 = 0x1
0x560: V470 = 0xa0
0x562: V471 = 0x2
0x564: V472 = EXP 0x2 0xa0
0x565: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x567: V474 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x568: V475 = 0x0
0x56c: M[0x0] = V474
0x56d: V476 = 0x3
0x56f: V477 = 0x20
0x573: M[0x20] = 0x3
0x574: V478 = 0x40
0x578: V479 = SHA3 0x0 0x40
0x579: V480 = CALLER
0x57b: M[0x0] = V480
0x57e: M[0x20] = V479
0x580: V481 = SHA3 0x0 0x40
0x581: V482 = S[V481]
0x583: V483 = BALANCE V474
0x584: V484 = GT V483 V482
0x585: V485 = ISZERO V484
0x586: V486 = 0x58e
0x589: JUMPI 0x58e V485
---
Entry stack: [V11, 0xb0, V196, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xb0, V196, 0x0]

================================

Block 0x58a
[0x58a:0x58d]
---
Predecessors: [0x55d]
Successors: []
---
0x58a PUSH1 0x0
0x58c DUP1
0x58d REVERT
---
0x58a: V487 = 0x0
0x58d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V196, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V196, 0x0]

================================

Block 0x58e
[0x58e:0x5f9]
---
Predecessors: [0x55d]
Successors: [0x5fa, 0x5fe]
---
0x58e JUMPDEST
0x58f POP
0x590 PUSH1 0x1
0x592 PUSH1 0xa0
0x594 PUSH1 0x2
0x596 EXP
0x597 SUB
0x598 DUP2
0x599 AND
0x59a PUSH1 0x0
0x59c DUP2
0x59d DUP2
0x59e MSTORE
0x59f PUSH1 0x20
0x5a1 DUP2
0x5a2 DUP2
0x5a3 MSTORE
0x5a4 PUSH1 0x40
0x5a6 DUP1
0x5a7 DUP4
0x5a8 SHA3
0x5a9 SLOAD
0x5aa DUP2
0x5ab MLOAD
0x5ac PUSH32 0xf088d54700000000000000000000000000000000000000000000000000000000
0x5cd DUP2
0x5ce MSTORE
0x5cf PUSH1 0x4
0x5d1 DUP2
0x5d2 ADD
0x5d3 SWAP5
0x5d4 SWAP1
0x5d5 SWAP5
0x5d6 MSTORE
0x5d7 SWAP1
0x5d8 MLOAD
0x5d9 DUP6
0x5da SWAP5
0x5db SWAP4
0x5dc PUSH4 0xf088d547
0x5e1 SWAP4
0x5e2 PUSH1 0x24
0x5e4 DUP1
0x5e5 DUP4
0x5e6 ADD
0x5e7 SWAP4
0x5e8 SWAP2
0x5e9 SWAP3
0x5ea DUP3
0x5eb SWAP1
0x5ec SUB
0x5ed ADD
0x5ee DUP2
0x5ef DUP6
0x5f0 DUP9
0x5f1 DUP1
0x5f2 EXTCODESIZE
0x5f3 ISZERO
0x5f4 DUP1
0x5f5 ISZERO
0x5f6 PUSH2 0x5fe
0x5f9 JUMPI
---
0x58e: JUMPDEST 
0x590: V488 = 0x1
0x592: V489 = 0xa0
0x594: V490 = 0x2
0x596: V491 = EXP 0x2 0xa0
0x597: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x599: V493 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x59a: V494 = 0x0
0x59e: M[0x0] = V493
0x59f: V495 = 0x20
0x5a3: M[0x20] = 0x0
0x5a4: V496 = 0x40
0x5a8: V497 = SHA3 0x0 0x40
0x5a9: V498 = S[V497]
0x5ab: V499 = M[0x40]
0x5ac: V500 = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x5ce: M[V499] = 0xf088d54700000000000000000000000000000000000000000000000000000000
0x5cf: V501 = 0x4
0x5d2: V502 = ADD V499 0x4
0x5d6: M[V502] = 0x0
0x5d8: V503 = M[0x40]
0x5dc: V504 = 0xf088d547
0x5e2: V505 = 0x24
0x5e6: V506 = ADD V499 0x24
0x5ec: V507 = SUB V499 V503
0x5ed: V508 = ADD V507 0x24
0x5f2: V509 = EXTCODESIZE V493
0x5f3: V510 = ISZERO V509
0x5f5: V511 = ISZERO V510
0x5f6: V512 = 0x5fe
0x5f9: JUMPI 0x5fe V511
---
Entry stack: [V11, 0xb0, V196, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V493, 0xf088d547, V498, V506, 0x20, V503, V508, V503, V498, V493, V510]
Exit stack: [V11, 0xb0, V196, V196, V493, 0xf088d547, V498, V506, 0x20, V503, V508, V503, V498, V493, V510]

================================

Block 0x5fa
[0x5fa:0x5fd]
---
Predecessors: [0x58e]
Successors: []
---
0x5fa PUSH1 0x0
0x5fc DUP1
0x5fd REVERT
---
0x5fa: V513 = 0x0
0x5fd: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V196, V196, V493, 0xf088d547, V498, V506, 0x20, V503, V508, V503, V498, V493, V510]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V196, V196, V493, 0xf088d547, V498, V506, 0x20, V503, V508, V503, V498, V493, V510]

================================

Block 0x5fe
[0x5fe:0x608]
---
Predecessors: [0x58e]
Successors: [0x609, 0x612]
---
0x5fe JUMPDEST
0x5ff POP
0x600 GAS
0x601 CALL
0x602 ISZERO
0x603 DUP1
0x604 ISZERO
0x605 PUSH2 0x612
0x608 JUMPI
---
0x5fe: JUMPDEST 
0x600: V514 = GAS
0x601: V515 = CALL V514 V493 V498 V503 V508 V503 0x20
0x602: V516 = ISZERO V515
0x604: V517 = ISZERO V516
0x605: V518 = 0x612
0x608: JUMPI 0x612 V517
---
Entry stack: [V11, 0xb0, V196, V196, V493, 0xf088d547, V498, V506, 0x20, V503, V508, V503, V498, V493, V510]
Stack pops: 7
Stack additions: [V516]
Exit stack: [V11, 0xb0, V196, V196, V493, 0xf088d547, V498, V506, V516]

================================

Block 0x609
[0x609:0x611]
---
Predecessors: [0x5fe]
Successors: []
---
0x609 RETURNDATASIZE
0x60a PUSH1 0x0
0x60c DUP1
0x60d RETURNDATACOPY
0x60e RETURNDATASIZE
0x60f PUSH1 0x0
0x611 REVERT
---
0x609: V519 = RETURNDATASIZE
0x60a: V520 = 0x0
0x60d: RETURNDATACOPY 0x0 0x0 V519
0x60e: V521 = RETURNDATASIZE
0x60f: V522 = 0x0
0x611: REVERT 0x0 V521
---
Entry stack: [V11, 0xb0, V196, V196, V493, 0xf088d547, V498, V506, V516]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V196, V196, V493, 0xf088d547, V498, V506, V516]

================================

Block 0x612
[0x612:0x624]
---
Predecessors: [0x5fe]
Successors: [0x625, 0x629]
---
0x612 JUMPDEST
0x613 POP
0x614 POP
0x615 POP
0x616 POP
0x617 POP
0x618 PUSH1 0x40
0x61a MLOAD
0x61b RETURNDATASIZE
0x61c PUSH1 0x20
0x61e DUP2
0x61f LT
0x620 ISZERO
0x621 PUSH2 0x629
0x624 JUMPI
---
0x612: JUMPDEST 
0x618: V523 = 0x40
0x61a: V524 = M[0x40]
0x61b: V525 = RETURNDATASIZE
0x61c: V526 = 0x20
0x61f: V527 = LT V525 0x20
0x620: V528 = ISZERO V527
0x621: V529 = 0x629
0x624: JUMPI 0x629 V528
---
Entry stack: [V11, 0xb0, V196, V196, V493, 0xf088d547, V498, V506, V516]
Stack pops: 5
Stack additions: [V524, V525]
Exit stack: [V11, 0xb0, V196, V196, V524, V525]

================================

Block 0x625
[0x625:0x628]
---
Predecessors: [0x612]
Successors: []
---
0x625 PUSH1 0x0
0x627 DUP1
0x628 REVERT
---
0x625: V530 = 0x0
0x628: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V196, V196, V524, V525]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V196, V196, V524, V525]

================================

Block 0x629
[0x629:0x648]
---
Predecessors: [0x612]
Successors: [0xb0]
---
0x629 JUMPDEST
0x62a POP
0x62b POP
0x62c POP
0x62d PUSH1 0x1
0x62f PUSH1 0xa0
0x631 PUSH1 0x2
0x633 EXP
0x634 SUB
0x635 AND
0x636 PUSH1 0x0
0x638 SWAP1
0x639 DUP2
0x63a MSTORE
0x63b PUSH1 0x1
0x63d PUSH1 0x20
0x63f DUP2
0x640 SWAP1
0x641 MSTORE
0x642 PUSH1 0x40
0x644 SWAP1
0x645 SWAP2
0x646 SHA3
0x647 SSTORE
0x648 JUMP
---
0x629: JUMPDEST 
0x62d: V531 = 0x1
0x62f: V532 = 0xa0
0x631: V533 = 0x2
0x633: V534 = EXP 0x2 0xa0
0x634: V535 = SUB 0x10000000000000000000000000000000000000000 0x1
0x635: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x636: V537 = 0x0
0x63a: M[0x0] = V536
0x63b: V538 = 0x1
0x63d: V539 = 0x20
0x641: M[0x20] = 0x1
0x642: V540 = 0x40
0x646: V541 = SHA3 0x0 0x40
0x647: S[V541] = 0x1
0x648: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V196, V196, V524, V525]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x649
[0x649:0x653]
---
Predecessors: [0x2da]
Successors: [0x654, 0x655]
---
0x649 JUMPDEST
0x64a PUSH1 0x0
0x64c DUP3
0x64d DUP3
0x64e GT
0x64f ISZERO
0x650 PUSH2 0x655
0x653 JUMPI
---
0x649: JUMPDEST 
0x64a: V542 = 0x0
0x64e: V543 = GT V272 V274
0x64f: V544 = ISZERO V543
0x650: V545 = 0x655
0x653: JUMPI 0x655 V544
---
Entry stack: [V11, 0xb0, V138, V272, 0x318, V274, V272]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0xb0, V138, V272, 0x318, V274, V272, 0x0]

================================

Block 0x654
[0x654:0x654]
---
Predecessors: [0x649]
Successors: []
---
0x654 INVALID
---
0x654: INVALID 
---
Entry stack: [V11, 0xb0, V138, V272, 0x318, V274, V272, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V138, V272, 0x318, V274, V272, 0x0]

================================

Block 0x655
[0x655:0x65a]
---
Predecessors: [0x649]
Successors: [0x318]
---
0x655 JUMPDEST
0x656 POP
0x657 SWAP1
0x658 SUB
0x659 SWAP1
0x65a JUMP
---
0x655: JUMPDEST 
0x658: V546 = SUB V274 V272
0x65a: JUMP 0x318
---
Entry stack: [V11, 0xb0, V138, V272, 0x318, V274, V272, 0x0]
Stack pops: 4
Stack additions: [V546]
Exit stack: [V11, 0xb0, V138, V272, V546]

================================

Block 0x65b
[0x65b:0x686]
---
Predecessors: []
Successors: []
---
0x65b STOP
0x65c LOG1
0x65d PUSH6 0x627a7a723058
0x664 SHA3
0x665 MISSING 0x5f
0x666 MISSING 0xe9
0x667 CODESIZE
0x668 MULMOD
0x669 MISSING 0xe8
0x66a MOD
0x66b PUSH19 0xe1797fec6484566f7442cf722781f11d0caa96
0x67f CALLER
0x680 SWAP5
0x681 RETURNDATASIZE
0x682 MISSING 0x29
0x683 MSIZE
0x684 MISSING 0x4c
0x685 STOP
0x686 MISSING 0x29
---
0x65b: STOP 
0x65c: LOG S0 S1 S2
0x65d: V547 = 0x627a7a723058
0x664: V548 = SHA3 0x627a7a723058 S3
0x665: MISSING 0x5f
0x666: MISSING 0xe9
0x667: V549 = CODESIZE
0x668: V550 = MULMOD V549 S0 S1
0x669: MISSING 0xe8
0x66a: V551 = MOD S0 S1
0x66b: V552 = 0xe1797fec6484566f7442cf722781f11d0caa96
0x67f: V553 = CALLER
0x681: V554 = RETURNDATASIZE
0x682: MISSING 0x29
0x683: V555 = MSIZE
0x684: MISSING 0x4c
0x685: STOP 
0x686: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V548, V550, V554, S4, 0xe1797fec6484566f7442cf722781f11d0caa96, V551, S2, S3, V553, V555]
Exit stack: []

================================

Function 0:
Public function signature: 0x3586bdd
Entry block: 0xb2
Exit block: 0xd9
Body: 0xb2, 0xba, 0xbe, 0xd9, 0x210

Function 1:
Public function signature: 0x1dbc85a9
Entry block: 0xeb
Exit block: 0xd9
Body: 0xd9, 0xeb, 0xf3, 0xf7, 0x22d

Function 2:
Public function signature: 0x5377c857
Entry block: 0x10c
Exit block: 0xd9
Body: 0xd9, 0x10c, 0x114, 0x118, 0x23f

Function 3:
Public function signature: 0x5ed89d59
Entry block: 0x133
Exit block: 0xb0
Body: 0xb0, 0x133, 0x25c

Function 4:
Public function signature: 0x5fba3dec
Entry block: 0x147
Exit block: 0xd9
Body: 0xd9, 0x147, 0x14f, 0x153, 0x299

Function 5:
Public function signature: 0x7acb20f4
Entry block: 0x168
Exit block: 0xb0
Body: 0xb0, 0x168, 0x170, 0x174, 0x2ab, 0x2d6, 0x2da, 0x318, 0x356, 0x35f, 0x649, 0x654, 0x655

Function 6:
Public function signature: 0xb42652e9
Entry block: 0x189
Exit block: 0xb0
Body: 0xb0, 0x189, 0x191, 0x195, 0x364, 0x393, 0x397, 0x3fa, 0x3fe, 0x409, 0x412

Function 7:
Public function signature: 0xc2bc2efc
Entry block: 0x1aa
Exit block: 0xb0
Body: 0xb0, 0x1aa, 0x1b2, 0x1b6, 0x43c, 0x464, 0x468, 0x4ad, 0x4ae, 0x502, 0x50b

Function 8:
Public function signature: 0xc6c416ec
Entry block: 0x1cb
Exit block: 0xb0
Body: 0xb0, 0x1cb, 0x1d3, 0x1d7, 0x513

Function 9:
Public function signature: 0xc7af3456
Entry block: 0x1ef
Exit block: 0xb0
Body: 0xb0, 0x1ef, 0x1f7, 0x1fb, 0x53a, 0x559, 0x55d, 0x58a, 0x58e, 0x5fa, 0x5fe, 0x609, 0x612, 0x625, 0x629

Function 10:
Public fallback function
Entry block: 0xa3
Exit block: 0xac
Body: 0xa3, 0xac, 0xb0

