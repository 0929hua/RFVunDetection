Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5f
0xa: JUMPI 0x5f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x63]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x278ecde1
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x63
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x278ecde1
0x39: V12 = EQ V10 0x278ecde1
0x3a: V13 = 0x63
0x3d: JUMPI 0x63 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x7b]
---
0x3e DUP1
0x3f PUSH4 0x43d726d6
0x44 EQ
0x45 PUSH2 0x7b
0x48 JUMPI
---
0x3f: V14 = 0x43d726d6
0x44: V15 = EQ 0x43d726d6 V10
0x45: V16 = 0x7b
0x48: JUMPI 0x7b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x90]
---
0x49 DUP1
0x4a PUSH4 0xb7b0422d
0x4f EQ
0x50 PUSH2 0x90
0x53 JUMPI
---
0x4a: V17 = 0xb7b0422d
0x4f: V18 = EQ 0xb7b0422d V10
0x50: V19 = 0x90
0x53: JUMPI 0x90 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xa8]
---
0x54 DUP1
0x55 PUSH4 0xd0e30db0
0x5a EQ
0x5b PUSH2 0xa8
0x5e JUMPI
---
0x55: V20 = 0xd0e30db0
0x5a: V21 = EQ 0xd0e30db0 V10
0x5b: V22 = 0xa8
0x5e: JUMPI 0xa8 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x5f]
---
Predecessors: [0x0, 0x54, 0x12b, 0x181, 0x189, 0x27d]
Successors: [0x60]
---
0x5f JUMPDEST
---
0x5f: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x60
[0x60:0x60]
---
Predecessors: [0x5f]
Successors: [0x61]
---
0x60 JUMPDEST
---
0x60: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x60]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x63
[0x63:0x69]
---
Predecessors: [0xb]
Successors: [0x6a, 0x6e]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 ISZERO
0x66 PUSH2 0x6e
0x69 JUMPI
---
0x63: JUMPDEST 
0x64: V23 = CALLVALUE
0x65: V24 = ISZERO V23
0x66: V25 = 0x6e
0x69: JUMPI 0x6e V24
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x6d]
---
Predecessors: [0x63]
Successors: []
---
0x6a PUSH1 0x0
0x6c DUP1
0x6d REVERT
---
0x6a: V26 = 0x0
0x6d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6e
[0x6e:0x78]
---
Predecessors: [0x63]
Successors: [0xb2]
---
0x6e JUMPDEST
0x6f PUSH2 0x5f
0x72 PUSH1 0x4
0x74 CALLDATALOAD
0x75 PUSH2 0xb2
0x78 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x5f
0x72: V28 = 0x4
0x74: V29 = CALLDATALOAD 0x4
0x75: V30 = 0xb2
0x78: JUMP 0xb2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5f, V29]
Exit stack: [V10, 0x5f, V29]

================================

Block 0x79
[0x79:0x7a]
---
Predecessors: []
Successors: []
---
0x79 JUMPDEST
0x7a STOP
---
0x79: JUMPDEST 
0x7a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7b
[0x7b:0x81]
---
Predecessors: [0x3e]
Successors: [0x82, 0x86]
---
0x7b JUMPDEST
0x7c CALLVALUE
0x7d ISZERO
0x7e PUSH2 0x86
0x81 JUMPI
---
0x7b: JUMPDEST 
0x7c: V31 = CALLVALUE
0x7d: V32 = ISZERO V31
0x7e: V33 = 0x86
0x81: JUMPI 0x86 V32
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x7b]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V34 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x86
[0x86:0x8d]
---
Predecessors: [0x7b]
Successors: [0x12e]
---
0x86 JUMPDEST
0x87 PUSH2 0x5f
0x8a PUSH2 0x12e
0x8d JUMP
---
0x86: JUMPDEST 
0x87: V35 = 0x5f
0x8a: V36 = 0x12e
0x8d: JUMP 0x12e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5f]
Exit stack: [V10, 0x5f]

================================

Block 0x8e
[0x8e:0x8f]
---
Predecessors: []
Successors: []
---
0x8e JUMPDEST
0x8f STOP
---
0x8e: JUMPDEST 
0x8f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x90
[0x90:0x96]
---
Predecessors: [0x49]
Successors: [0x97, 0x9b]
---
0x90 JUMPDEST
0x91 CALLVALUE
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x90: JUMPDEST 
0x91: V37 = CALLVALUE
0x92: V38 = ISZERO V37
0x93: V39 = 0x9b
0x96: JUMPI 0x9b V38
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x90]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V40 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9b
[0x9b:0xa5]
---
Predecessors: [0x90]
Successors: [0x183]
---
0x9b JUMPDEST
0x9c PUSH2 0x5f
0x9f PUSH1 0x4
0xa1 CALLDATALOAD
0xa2 PUSH2 0x183
0xa5 JUMP
---
0x9b: JUMPDEST 
0x9c: V41 = 0x5f
0x9f: V42 = 0x4
0xa1: V43 = CALLDATALOAD 0x4
0xa2: V44 = 0x183
0xa5: JUMP 0x183
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5f, V43]
Exit stack: [V10, 0x5f, V43]

================================

Block 0xa6
[0xa6:0xa7]
---
Predecessors: []
Successors: []
---
0xa6 JUMPDEST
0xa7 STOP
---
0xa6: JUMPDEST 
0xa7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x54]
Successors: [0x18c]
---
0xa8 JUMPDEST
0xa9 PUSH2 0x5f
0xac PUSH2 0x18c
0xaf JUMP
---
0xa8: JUMPDEST 
0xa9: V45 = 0x5f
0xac: V46 = 0x18c
0xaf: JUMP 0x18c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5f]
Exit stack: [V10, 0x5f]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: []
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb2
[0xb2:0xd5]
---
Predecessors: [0x6e]
Successors: [0xd6, 0xdb]
---
0xb2 JUMPDEST
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb CALLER
0xbc AND
0xbd PUSH1 0x0
0xbf SWAP1
0xc0 DUP2
0xc1 MSTORE
0xc2 PUSH1 0x4
0xc4 PUSH1 0x20
0xc6 MSTORE
0xc7 PUSH1 0x40
0xc9 SWAP1
0xca SHA3
0xcb SLOAD
0xcc DUP2
0xcd SWAP1
0xce LT
0xcf DUP1
0xd0 ISZERO
0xd1 SWAP1
0xd2 PUSH2 0xdb
0xd5 JUMPI
---
0xb2: JUMPDEST 
0xb3: V47 = 0x1
0xb5: V48 = 0xa0
0xb7: V49 = 0x2
0xb9: V50 = EXP 0x2 0xa0
0xba: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V52 = CALLER
0xbc: V53 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0xbd: V54 = 0x0
0xc1: M[0x0] = V53
0xc2: V55 = 0x4
0xc4: V56 = 0x20
0xc6: M[0x20] = 0x4
0xc7: V57 = 0x40
0xca: V58 = SHA3 0x0 0x40
0xcb: V59 = S[V58]
0xce: V60 = LT V59 V29
0xd0: V61 = ISZERO V60
0xd2: V62 = 0xdb
0xd5: JUMPI 0xdb V60
---
Entry stack: [V10, 0x5f, V29]
Stack pops: 1
Stack additions: [S0, V61]
Exit stack: [V10, 0x5f, V29, V61]

================================

Block 0xd6
[0xd6:0xda]
---
Predecessors: [0xb2]
Successors: [0xdb]
---
0xd6 POP
0xd7 PUSH1 0x0
0xd9 DUP2
0xda GT
---
0xd7: V63 = 0x0
0xda: V64 = GT V29 0x0
---
Entry stack: [V10, 0x5f, V29, V61]
Stack pops: 2
Stack additions: [S1, V64]
Exit stack: [V10, 0x5f, V29, V64]

================================

Block 0xdb
[0xdb:0xe0]
---
Predecessors: [0xb2, 0xd6]
Successors: [0xe1, 0x128]
---
0xdb JUMPDEST
0xdc ISZERO
0xdd PUSH2 0x128
0xe0 JUMPI
---
0xdb: JUMPDEST 
0xdc: V65 = ISZERO S0
0xdd: V66 = 0x128
0xe0: JUMPI 0x128 V65
---
Entry stack: [V10, 0x5f, V29, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x5f, V29]

================================

Block 0xe1
[0xe1:0xec]
---
Predecessors: [0xdb]
Successors: [0xed, 0xf2]
---
0xe1 PUSH1 0x1
0xe3 SLOAD
0xe4 TIMESTAMP
0xe5 LT
0xe6 ISZERO
0xe7 DUP1
0xe8 ISZERO
0xe9 PUSH2 0xf2
0xec JUMPI
---
0xe1: V67 = 0x1
0xe3: V68 = S[0x1]
0xe4: V69 = TIMESTAMP
0xe5: V70 = LT V69 V68
0xe6: V71 = ISZERO V70
0xe8: V72 = ISZERO V71
0xe9: V73 = 0xf2
0xec: JUMPI 0xf2 V72
---
Entry stack: [V10, 0x5f, V29]
Stack pops: 0
Stack additions: [V71]
Exit stack: [V10, 0x5f, V29, V71]

================================

Block 0xed
[0xed:0xf1]
---
Predecessors: [0xe1]
Successors: [0xf2]
---
0xed POP
0xee PUSH1 0x0
0xf0 SLOAD
0xf1 ISZERO
---
0xee: V74 = 0x0
0xf0: V75 = S[0x0]
0xf1: V76 = ISZERO V75
---
Entry stack: [V10, 0x5f, V29, V71]
Stack pops: 1
Stack additions: [V76]
Exit stack: [V10, 0x5f, V29, V76]

================================

Block 0xf2
[0xf2:0xf7]
---
Predecessors: [0xe1, 0xed]
Successors: [0xf8, 0x128]
---
0xf2 JUMPDEST
0xf3 ISZERO
0xf4 PUSH2 0x128
0xf7 JUMPI
---
0xf2: JUMPDEST 
0xf3: V77 = ISZERO S0
0xf4: V78 = 0x128
0xf7: JUMPI 0x128 V77
---
Entry stack: [V10, 0x5f, V29, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x5f, V29]

================================

Block 0xf8
[0xf8:0x123]
---
Predecessors: [0xf2]
Successors: [0x124, 0x128]
---
0xf8 PUSH1 0x1
0xfa PUSH1 0xa0
0xfc PUSH1 0x2
0xfe EXP
0xff SUB
0x100 CALLER
0x101 AND
0x102 DUP2
0x103 ISZERO
0x104 PUSH2 0x8fc
0x107 MUL
0x108 DUP3
0x109 PUSH1 0x40
0x10b MLOAD
0x10c PUSH1 0x0
0x10e PUSH1 0x40
0x110 MLOAD
0x111 DUP1
0x112 DUP4
0x113 SUB
0x114 DUP2
0x115 DUP6
0x116 DUP9
0x117 DUP9
0x118 CALL
0x119 SWAP4
0x11a POP
0x11b POP
0x11c POP
0x11d POP
0x11e ISZERO
0x11f ISZERO
0x120 PUSH2 0x128
0x123 JUMPI
---
0xf8: V79 = 0x1
0xfa: V80 = 0xa0
0xfc: V81 = 0x2
0xfe: V82 = EXP 0x2 0xa0
0xff: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0x100: V84 = CALLER
0x101: V85 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x103: V86 = ISZERO V29
0x104: V87 = 0x8fc
0x107: V88 = MUL 0x8fc V86
0x109: V89 = 0x40
0x10b: V90 = M[0x40]
0x10c: V91 = 0x0
0x10e: V92 = 0x40
0x110: V93 = M[0x40]
0x113: V94 = SUB V90 V93
0x118: V95 = CALL V88 V85 V29 V93 V94 V93 0x0
0x11e: V96 = ISZERO V95
0x11f: V97 = ISZERO V96
0x120: V98 = 0x128
0x123: JUMPI 0x128 V97
---
Entry stack: [V10, 0x5f, V29]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5f, V29]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0xf8]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V99 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V10, 0x5f, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, V29]

================================

Block 0x128
[0x128:0x128]
---
Predecessors: [0xdb, 0xf2, 0xf8, 0x25d]
Successors: [0x129]
---
0x128 JUMPDEST
---
0x128: JUMPDEST 
---
Entry stack: [V10, 0x5f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, S0]

================================

Block 0x129
[0x129:0x129]
---
Predecessors: [0x128]
Successors: [0x12a]
---
0x129 JUMPDEST
---
0x129: JUMPDEST 
---
Entry stack: [V10, 0x5f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, S0]

================================

Block 0x12a
[0x12a:0x12a]
---
Predecessors: [0x129]
Successors: [0x12b]
---
0x12a JUMPDEST
---
0x12a: JUMPDEST 
---
Entry stack: [V10, 0x5f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, S0]

================================

Block 0x12b
[0x12b:0x12d]
---
Predecessors: [0x12a]
Successors: [0x5f]
---
0x12b JUMPDEST
0x12c POP
0x12d JUMP
---
0x12b: JUMPDEST 
0x12d: JUMP 0x5f
---
Entry stack: [V10, 0x5f, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x12e
[0x12e:0x145]
---
Predecessors: [0x86]
Successors: [0x146, 0x17f]
---
0x12e JUMPDEST
0x12f PUSH1 0x2
0x131 SLOAD
0x132 CALLER
0x133 PUSH1 0x1
0x135 PUSH1 0xa0
0x137 PUSH1 0x2
0x139 EXP
0x13a SUB
0x13b SWAP1
0x13c DUP2
0x13d AND
0x13e SWAP2
0x13f AND
0x140 EQ
0x141 ISZERO
0x142 PUSH2 0x17f
0x145 JUMPI
---
0x12e: JUMPDEST 
0x12f: V100 = 0x2
0x131: V101 = S[0x2]
0x132: V102 = CALLER
0x133: V103 = 0x1
0x135: V104 = 0xa0
0x137: V105 = 0x2
0x139: V106 = EXP 0x2 0xa0
0x13a: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13d: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x13f: V109 = AND V101 0xffffffffffffffffffffffffffffffffffffffff
0x140: V110 = EQ V109 V108
0x141: V111 = ISZERO V110
0x142: V112 = 0x17f
0x145: JUMPI 0x17f V111
---
Entry stack: [V10, 0x5f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f]

================================

Block 0x146
[0x146:0x17a]
---
Predecessors: [0x12e]
Successors: [0x17b, 0x17f]
---
0x146 TIMESTAMP
0x147 PUSH1 0x0
0x149 SSTORE
0x14a PUSH1 0x1
0x14c PUSH1 0xa0
0x14e PUSH1 0x2
0x150 EXP
0x151 SUB
0x152 CALLER
0x153 DUP2
0x154 AND
0x155 SWAP1
0x156 ADDRESS
0x157 AND
0x158 BALANCE
0x159 DUP1
0x15a ISZERO
0x15b PUSH2 0x8fc
0x15e MUL
0x15f SWAP1
0x160 PUSH1 0x40
0x162 MLOAD
0x163 PUSH1 0x0
0x165 PUSH1 0x40
0x167 MLOAD
0x168 DUP1
0x169 DUP4
0x16a SUB
0x16b DUP2
0x16c DUP6
0x16d DUP9
0x16e DUP9
0x16f CALL
0x170 SWAP4
0x171 POP
0x172 POP
0x173 POP
0x174 POP
0x175 ISZERO
0x176 ISZERO
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x146: V113 = TIMESTAMP
0x147: V114 = 0x0
0x149: S[0x0] = V113
0x14a: V115 = 0x1
0x14c: V116 = 0xa0
0x14e: V117 = 0x2
0x150: V118 = EXP 0x2 0xa0
0x151: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x152: V120 = CALLER
0x154: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x156: V122 = ADDRESS
0x157: V123 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x158: V124 = BALANCE V123
0x15a: V125 = ISZERO V124
0x15b: V126 = 0x8fc
0x15e: V127 = MUL 0x8fc V125
0x160: V128 = 0x40
0x162: V129 = M[0x40]
0x163: V130 = 0x0
0x165: V131 = 0x40
0x167: V132 = M[0x40]
0x16a: V133 = SUB V129 V132
0x16f: V134 = CALL V127 V121 V124 V132 V133 V132 0x0
0x175: V135 = ISZERO V134
0x176: V136 = ISZERO V135
0x177: V137 = 0x17f
0x17a: JUMPI 0x17f V136
---
Entry stack: [V10, 0x5f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x146]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V138 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V10, 0x5f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f]

================================

Block 0x17f
[0x17f:0x17f]
---
Predecessors: [0x12e, 0x146]
Successors: [0x180]
---
0x17f JUMPDEST
---
0x17f: JUMPDEST 
---
Entry stack: [V10, 0x5f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f]

================================

Block 0x180
[0x180:0x180]
---
Predecessors: [0x17f]
Successors: [0x181]
---
0x180 JUMPDEST
---
0x180: JUMPDEST 
---
Entry stack: [V10, 0x5f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f]

================================

Block 0x181
[0x181:0x182]
---
Predecessors: [0x180]
Successors: [0x5f]
---
0x181 JUMPDEST
0x182 JUMP
---
0x181: JUMPDEST 
0x182: JUMP 0x5f
---
Entry stack: [V10, 0x5f]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x183
[0x183:0x188]
---
Predecessors: [0x9b]
Successors: [0x189]
---
0x183 JUMPDEST
0x184 PUSH1 0x1
0x186 DUP2
0x187 SWAP1
0x188 SSTORE
---
0x183: JUMPDEST 
0x184: V139 = 0x1
0x188: S[0x1] = V43
---
Entry stack: [V10, 0x5f, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5f, V43]

================================

Block 0x189
[0x189:0x18b]
---
Predecessors: [0x183]
Successors: [0x5f]
---
0x189 JUMPDEST
0x18a POP
0x18b JUMP
---
0x189: JUMPDEST 
0x18b: JUMP 0x5f
---
Entry stack: [V10, 0x5f, V43]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x18c
[0x18c:0x1a0]
---
Predecessors: [0xa8]
Successors: [0x1a1, 0x1b7]
---
0x18c JUMPDEST
0x18d PUSH1 0x0
0x18f PUSH8 0x6f05b59d3b20000
0x198 CALLVALUE
0x199 LT
0x19a ISZERO
0x19b DUP1
0x19c ISZERO
0x19d PUSH2 0x1b7
0x1a0 JUMPI
---
0x18c: JUMPDEST 
0x18d: V140 = 0x0
0x18f: V141 = 0x6f05b59d3b20000
0x198: V142 = CALLVALUE
0x199: V143 = LT V142 0x6f05b59d3b20000
0x19a: V144 = ISZERO V143
0x19c: V145 = ISZERO V144
0x19d: V146 = 0x1b7
0x1a0: JUMPI 0x1b7 V145
---
Entry stack: [V10, 0x5f]
Stack pops: 0
Stack additions: [0x0, V144]
Exit stack: [V10, 0x5f, 0x0, V144]

================================

Block 0x1a1
[0x1a1:0x1b6]
---
Predecessors: [0x18c]
Successors: [0x1b7]
---
0x1a1 POP
0x1a2 ORIGIN
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab AND
0x1ac CALLER
0x1ad PUSH1 0x1
0x1af PUSH1 0xa0
0x1b1 PUSH1 0x2
0x1b3 EXP
0x1b4 SUB
0x1b5 AND
0x1b6 EQ
---
0x1a2: V147 = ORIGIN
0x1a3: V148 = 0x1
0x1a5: V149 = 0xa0
0x1a7: V150 = 0x2
0x1a9: V151 = EXP 0x2 0xa0
0x1aa: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ab: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x1ac: V154 = CALLER
0x1ad: V155 = 0x1
0x1af: V156 = 0xa0
0x1b1: V157 = 0x2
0x1b3: V158 = EXP 0x2 0xa0
0x1b4: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b5: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x1b6: V161 = EQ V160 V153
---
Entry stack: [V10, 0x5f, 0x0, V144]
Stack pops: 1
Stack additions: [V161]
Exit stack: [V10, 0x5f, 0x0, V161]

================================

Block 0x1b7
[0x1b7:0x1bc]
---
Predecessors: [0x18c, 0x1a1]
Successors: [0x1bd, 0x25d]
---
0x1b7 JUMPDEST
0x1b8 ISZERO
0x1b9 PUSH2 0x25d
0x1bc JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V162 = ISZERO S0
0x1b9: V163 = 0x25d
0x1bc: JUMPI 0x25d V162
---
Entry stack: [V10, 0x5f, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x5f, 0x0]

================================

Block 0x1bd
[0x1bd:0x1fd]
---
Predecessors: [0x1b7]
Successors: [0x280]
---
0x1bd DUP1
0x1be SLOAD
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 NOT
0x1d5 AND
0x1d6 CALLER
0x1d7 PUSH1 0x1
0x1d9 PUSH1 0xa0
0x1db PUSH1 0x2
0x1dd EXP
0x1de SUB
0x1df AND
0x1e0 OR
0x1e1 DUP2
0x1e2 SSTORE
0x1e3 CALLVALUE
0x1e4 PUSH1 0x1
0x1e6 DUP1
0x1e7 DUP4
0x1e8 ADD
0x1e9 SWAP2
0x1ea SWAP1
0x1eb SWAP2
0x1ec SSTORE
0x1ed PUSH1 0x3
0x1ef DUP1
0x1f0 SLOAD
0x1f1 SWAP1
0x1f2 SWAP2
0x1f3 DUP2
0x1f4 ADD
0x1f5 PUSH2 0x1fe
0x1f8 DUP4
0x1f9 DUP3
0x1fa PUSH2 0x280
0x1fd JUMP
---
0x1be: V164 = S[0x0]
0x1bf: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V166 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V167 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V164
0x1d6: V168 = CALLER
0x1d7: V169 = 0x1
0x1d9: V170 = 0xa0
0x1db: V171 = 0x2
0x1dd: V172 = EXP 0x2 0xa0
0x1de: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1df: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x1e0: V175 = OR V174 V167
0x1e2: S[0x0] = V175
0x1e3: V176 = CALLVALUE
0x1e4: V177 = 0x1
0x1e8: V178 = ADD 0x0 0x1
0x1ec: S[0x1] = V176
0x1ed: V179 = 0x3
0x1f0: V180 = S[0x3]
0x1f4: V181 = ADD V180 0x1
0x1f5: V182 = 0x1fe
0x1fa: V183 = 0x280
0x1fd: JUMP 0x280
---
Entry stack: [V10, 0x5f, 0x0]
Stack pops: 1
Stack additions: [S0, 0x3, V180, V181, 0x1fe, 0x3, V181]
Exit stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181]

================================

Block 0x1fe
[0x1fe:0x20e]
---
Predecessors: [0x2ad]
Successors: [0x20f]
---
0x1fe JUMPDEST
0x1ff SWAP2
0x200 PUSH1 0x0
0x202 MSTORE
0x203 PUSH1 0x20
0x205 PUSH1 0x0
0x207 SHA3
0x208 SWAP1
0x209 PUSH1 0x2
0x20b MUL
0x20c ADD
0x20d PUSH1 0x0
---
0x1fe: JUMPDEST 
0x200: V184 = 0x0
0x202: M[0x0] = 0x3
0x203: V185 = 0x20
0x205: V186 = 0x0
0x207: V187 = SHA3 0x0 0x20
0x209: V188 = 0x2
0x20b: V189 = MUL 0x2 V180
0x20c: V190 = ADD V189 V187
0x20d: V191 = 0x0
---
Entry stack: [V10, 0x5f, 0x0, 0x3, V180, V181]
Stack pops: 3
Stack additions: [S0, V190, 0x0]
Exit stack: [V10, 0x5f, 0x0, V181, V190, 0x0]

================================

Block 0x20f
[0x20f:0x25c]
---
Predecessors: [0x1fe]
Successors: [0x25d]
---
0x20f JUMPDEST
0x210 POP
0x211 DUP3
0x212 SLOAD
0x213 DUP2
0x214 SLOAD
0x215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22a NOT
0x22b AND
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 SWAP2
0x235 DUP3
0x236 AND
0x237 OR
0x238 DUP3
0x239 SSTORE
0x23a PUSH1 0x1
0x23c DUP1
0x23d DUP6
0x23e ADD
0x23f SLOAD
0x240 SWAP3
0x241 ADD
0x242 SWAP2
0x243 SWAP1
0x244 SWAP2
0x245 SSTORE
0x246 CALLER
0x247 AND
0x248 PUSH1 0x0
0x24a SWAP1
0x24b DUP2
0x24c MSTORE
0x24d PUSH1 0x4
0x24f PUSH1 0x20
0x251 MSTORE
0x252 PUSH1 0x40
0x254 SWAP1
0x255 SHA3
0x256 DUP1
0x257 SLOAD
0x258 CALLVALUE
0x259 ADD
0x25a SWAP1
0x25b SSTORE
0x25c POP
---
0x20f: JUMPDEST 
0x212: V192 = S[0x0]
0x214: V193 = S[V190]
0x215: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V195 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V196 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V193
0x22c: V197 = 0x1
0x22e: V198 = 0xa0
0x230: V199 = 0x2
0x232: V200 = EXP 0x2 0xa0
0x233: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x237: V203 = OR V202 V196
0x239: S[V190] = V203
0x23a: V204 = 0x1
0x23e: V205 = ADD 0x0 0x1
0x23f: V206 = S[0x1]
0x241: V207 = ADD V190 0x1
0x245: S[V207] = V206
0x246: V208 = CALLER
0x247: V209 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x248: V210 = 0x0
0x24c: M[0x0] = V209
0x24d: V211 = 0x4
0x24f: V212 = 0x20
0x251: M[0x20] = 0x4
0x252: V213 = 0x40
0x255: V214 = SHA3 0x0 0x40
0x257: V215 = S[V214]
0x258: V216 = CALLVALUE
0x259: V217 = ADD V216 V215
0x25b: S[V214] = V217
---
Entry stack: [V10, 0x5f, 0x0, V181, V190, 0x0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x5f, 0x0]

================================

Block 0x25d
[0x25d:0x277]
---
Predecessors: [0x1b7, 0x20f]
Successors: [0x128, 0x278]
---
0x25d JUMPDEST
0x25e PUSH9 0x2b5e3af16b1880000
0x268 PUSH1 0x1
0x26a PUSH1 0xa0
0x26c PUSH1 0x2
0x26e EXP
0x26f SUB
0x270 ADDRESS
0x271 AND
0x272 BALANCE
0x273 LT
0x274 PUSH2 0x128
0x277 JUMPI
---
0x25d: JUMPDEST 
0x25e: V218 = 0x2b5e3af16b1880000
0x268: V219 = 0x1
0x26a: V220 = 0xa0
0x26c: V221 = 0x2
0x26e: V222 = EXP 0x2 0xa0
0x26f: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x270: V224 = ADDRESS
0x271: V225 = AND V224 0xffffffffffffffffffffffffffffffffffffffff
0x272: V226 = BALANCE V225
0x273: V227 = LT V226 0x2b5e3af16b1880000
0x274: V228 = 0x128
0x277: JUMPI 0x128 V227
---
Entry stack: [V10, 0x5f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, 0x0]

================================

Block 0x278
[0x278:0x27b]
---
Predecessors: [0x25d]
Successors: [0x27c]
---
0x278 TIMESTAMP
0x279 PUSH1 0x0
0x27b SSTORE
---
0x278: V229 = TIMESTAMP
0x279: V230 = 0x0
0x27b: S[0x0] = V229
---
Entry stack: [V10, 0x5f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, 0x0]

================================

Block 0x27c
[0x27c:0x27c]
---
Predecessors: [0x278]
Successors: [0x27d]
---
0x27c JUMPDEST
---
0x27c: JUMPDEST 
---
Entry stack: [V10, 0x5f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, 0x0]

================================

Block 0x27d
[0x27d:0x27f]
---
Predecessors: [0x27c]
Successors: [0x5f]
---
0x27d JUMPDEST
0x27e POP
0x27f JUMP
---
0x27d: JUMPDEST 
0x27f: JUMP 0x5f
---
Entry stack: [V10, 0x5f, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x280
[0x280:0x28d]
---
Predecessors: [0x1bd]
Successors: [0x28e, 0x2ac]
---
0x280 JUMPDEST
0x281 DUP2
0x282 SLOAD
0x283 DUP2
0x284 DUP4
0x285 SSTORE
0x286 DUP2
0x287 DUP2
0x288 ISZERO
0x289 GT
0x28a PUSH2 0x2ac
0x28d JUMPI
---
0x280: JUMPDEST 
0x282: V231 = S[0x3]
0x285: S[0x3] = V181
0x288: V232 = ISZERO V231
0x289: V233 = GT V232 V181
0x28a: V234 = 0x2ac
0x28d: JUMPI 0x2ac V233
---
Entry stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181]
Stack pops: 2
Stack additions: [S1, S0, V231]
Exit stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, V231]

================================

Block 0x28e
[0x28e:0x2ab]
---
Predecessors: [0x280]
Successors: [0x2b2]
---
0x28e PUSH1 0x2
0x290 MUL
0x291 DUP2
0x292 PUSH1 0x2
0x294 MUL
0x295 DUP4
0x296 PUSH1 0x0
0x298 MSTORE
0x299 PUSH1 0x20
0x29b PUSH1 0x0
0x29d SHA3
0x29e SWAP2
0x29f DUP3
0x2a0 ADD
0x2a1 SWAP2
0x2a2 ADD
0x2a3 PUSH2 0x2ac
0x2a6 SWAP2
0x2a7 SWAP1
0x2a8 PUSH2 0x2b2
0x2ab JUMP
---
0x28e: V235 = 0x2
0x290: V236 = MUL 0x2 V231
0x292: V237 = 0x2
0x294: V238 = MUL 0x2 V181
0x296: V239 = 0x0
0x298: M[0x0] = 0x3
0x299: V240 = 0x20
0x29b: V241 = 0x0
0x29d: V242 = SHA3 0x0 0x20
0x2a0: V243 = ADD V242 V236
0x2a2: V244 = ADD V242 V238
0x2a3: V245 = 0x2ac
0x2a8: V246 = 0x2b2
0x2ab: JUMP 0x2b2
---
Entry stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, V231]
Stack pops: 3
Stack additions: [S2, S1, 0x2ac, V243, V244]
Exit stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, 0x2ac, V243, V244]

================================

Block 0x2ac
[0x2ac:0x2ac]
---
Predecessors: [0x280, 0x2ee]
Successors: [0x2ad]
---
0x2ac JUMPDEST
---
0x2ac: JUMPDEST 
---
Entry stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, S0]

================================

Block 0x2ad
[0x2ad:0x2b1]
---
Predecessors: [0x2ac]
Successors: [0x1fe]
---
0x2ad JUMPDEST
0x2ae POP
0x2af POP
0x2b0 POP
0x2b1 JUMP
---
0x2ad: JUMPDEST 
0x2b1: JUMP 0x1fe
---
Entry stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x5f, 0x0, 0x3, V180, V181]

================================

Block 0x2b2
[0x2b2:0x2b7]
---
Predecessors: [0x28e]
Successors: [0x2b8]
---
0x2b2 JUMPDEST
0x2b3 PUSH2 0x2ee
0x2b6 SWAP2
0x2b7 SWAP1
---
0x2b2: JUMPDEST 
0x2b3: V247 = 0x2ee
---
Entry stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, 0x2ac, V243, V244]
Stack pops: 2
Stack additions: [0x2ee, S1, S0]
Exit stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, 0x2ac, 0x2ee, V243, V244]

================================

Block 0x2b8
[0x2b8:0x2c0]
---
Predecessors: [0x2b2, 0x2c1]
Successors: [0x2c1, 0x2ea]
---
0x2b8 JUMPDEST
0x2b9 DUP1
0x2ba DUP3
0x2bb GT
0x2bc ISZERO
0x2bd PUSH2 0x2ea
0x2c0 JUMPI
---
0x2b8: JUMPDEST 
0x2bb: V248 = GT V243 S0
0x2bc: V249 = ISZERO V248
0x2bd: V250 = 0x2ea
0x2c0: JUMPI 0x2ea V249
---
Entry stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, 0x2ac, 0x2ee, V243, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, 0x2ac, 0x2ee, V243, S0]

================================

Block 0x2c1
[0x2c1:0x2e9]
---
Predecessors: [0x2b8]
Successors: [0x2b8]
---
0x2c1 DUP1
0x2c2 SLOAD
0x2c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d8 NOT
0x2d9 AND
0x2da DUP2
0x2db SSTORE
0x2dc PUSH1 0x0
0x2de PUSH1 0x1
0x2e0 DUP3
0x2e1 ADD
0x2e2 SSTORE
0x2e3 PUSH1 0x2
0x2e5 ADD
0x2e6 PUSH2 0x2b8
0x2e9 JUMP
---
0x2c2: V251 = S[S0]
0x2c3: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d8: V253 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V254 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V251
0x2db: S[S0] = V254
0x2dc: V255 = 0x0
0x2de: V256 = 0x1
0x2e1: V257 = ADD S0 0x1
0x2e2: S[V257] = 0x0
0x2e3: V258 = 0x2
0x2e5: V259 = ADD 0x2 S0
0x2e6: V260 = 0x2b8
0x2e9: JUMP 0x2b8
---
Entry stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, 0x2ac, 0x2ee, V243, S0]
Stack pops: 1
Stack additions: [V259]
Exit stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, 0x2ac, 0x2ee, V243, V259]

================================

Block 0x2ea
[0x2ea:0x2ed]
---
Predecessors: [0x2b8]
Successors: [0x2ee]
---
0x2ea JUMPDEST
0x2eb POP
0x2ec SWAP1
0x2ed JUMP
---
0x2ea: JUMPDEST 
0x2ed: JUMP 0x2ee
---
Entry stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, 0x2ac, 0x2ee, V243, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, 0x2ac, V243]

================================

Block 0x2ee
[0x2ee:0x2f0]
---
Predecessors: [0x2ea]
Successors: [0x2ac]
---
0x2ee JUMPDEST
0x2ef SWAP1
0x2f0 JUMP
---
0x2ee: JUMPDEST 
0x2f0: JUMP 0x2ac
---
Entry stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, 0x2ac, V243]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x5f, 0x0, 0x3, V180, V181, 0x1fe, 0x3, V181, V243]

================================

Block 0x2f1
[0x2f1:0x31c]
---
Predecessors: []
Successors: []
---
0x2f1 STOP
0x2f2 LOG1
0x2f3 PUSH6 0x627a7a723058
0x2fa SHA3
0x2fb MISSING 0x48
0x2fc CALLCODE
0x2fd MLOAD
0x2fe MISSING 0xea
0x2ff CALLCODE
0x300 MISSING 0x28
0x301 SUB
0x302 PC
0x303 PUSH23 0x6e8141c96580a15e9141ad8d49b5e73c2f9504e15e74df
0x31b STOP
0x31c MISSING 0x29
---
0x2f1: STOP 
0x2f2: LOG S0 S1 S2
0x2f3: V261 = 0x627a7a723058
0x2fa: V262 = SHA3 0x627a7a723058 S3
0x2fb: MISSING 0x48
0x2fc: V263 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x2fd: V264 = M[V263]
0x2fe: MISSING 0xea
0x2ff: V265 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x300: MISSING 0x28
0x301: V266 = SUB S0 S1
0x302: V267 = PC
0x303: V268 = 0x6e8141c96580a15e9141ad8d49b5e73c2f9504e15e74df
0x31b: STOP 
0x31c: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V262, V264, V265, 0x6e8141c96580a15e9141ad8d49b5e73c2f9504e15e74df, V267, V266]
Exit stack: []

================================

Function 0:
Public function signature: 0x278ecde1
Entry block: 0x63
Exit block: 0x61
Body: 0x5f, 0x60, 0x61, 0x63, 0x6a, 0x6e, 0xb2, 0xd6, 0xdb, 0xe1, 0xed, 0xf2, 0xf8, 0x124, 0x128, 0x129, 0x12a, 0x12b

Function 1:
Public function signature: 0x43d726d6
Entry block: 0x7b
Exit block: 0x61
Body: 0x5f, 0x60, 0x61, 0x7b, 0x82, 0x86, 0x12e, 0x146, 0x17b, 0x17f, 0x180, 0x181

Function 2:
Public function signature: 0xb7b0422d
Entry block: 0x90
Exit block: 0x61
Body: 0x5f, 0x60, 0x61, 0x90, 0x97, 0x9b, 0x183, 0x189

Function 3:
Public function signature: 0xd0e30db0
Entry block: 0xa8
Exit block: 0x61
Body: 0x5f, 0x60, 0x61, 0xa8, 0x128, 0x129, 0x12a, 0x12b, 0x18c, 0x1a1, 0x1b7, 0x1bd, 0x1fe, 0x20f, 0x25d, 0x278, 0x27c, 0x27d, 0x280, 0x28e, 0x2ac, 0x2ad, 0x2b2, 0x2b8, 0x2c1, 0x2ea, 0x2ee

Function 4:
Public fallback function
Entry block: 0x5f
Exit block: 0x61
Body: 0x5f, 0x60, 0x61

