Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x53]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x53
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x53
0xc: JUMPI 0x53 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x55]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x41c0e1b5
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x55
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x41c0e1b5
0x22: V15 = EQ V13 0x41c0e1b5
0x23: V16 = 0x55
0x26: JUMPI 0x55 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x68]
---
0x27 DUP1
0x28 PUSH4 0x9062117f
0x2d EQ
0x2e PUSH2 0x68
0x31 JUMPI
---
0x28: V17 = 0x9062117f
0x2d: V18 = EQ 0x9062117f V13
0x2e: V19 = 0x68
0x31: JUMPI 0x68 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xc9]
---
0x32 DUP1
0x33 PUSH4 0x9278a35a
0x38 EQ
0x39 PUSH2 0xc9
0x3c JUMPI
---
0x33: V20 = 0x9278a35a
0x38: V21 = EQ 0x9278a35a V13
0x39: V22 = 0xc9
0x3c: JUMPI 0xc9 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xed]
---
0x3d DUP1
0x3e PUSH4 0xb1d131bf
0x43 EQ
0x44 PUSH2 0xed
0x47 JUMPI
---
0x3e: V23 = 0xb1d131bf
0x43: V24 = EQ 0xb1d131bf V13
0x44: V25 = 0xed
0x47: JUMPI 0xed V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x11c]
---
0x48 DUP1
0x49 PUSH4 0xe3112254
0x4e EQ
0x4f PUSH2 0x11c
0x52 JUMPI
---
0x49: V26 = 0xe3112254
0x4e: V27 = EQ 0xe3112254 V13
0x4f: V28 = 0x11c
0x52: JUMPI 0x11c V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x54]
---
Predecessors: [0x0, 0x48, 0x339, 0x39c]
Successors: []
---
0x53 JUMPDEST
0x54 STOP
---
0x53: JUMPDEST 
0x54: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x55
[0x55:0x5b]
---
Predecessors: [0xd]
Successors: [0x5c, 0x60]
---
0x55 JUMPDEST
0x56 CALLVALUE
0x57 ISZERO
0x58 PUSH2 0x60
0x5b JUMPI
---
0x55: JUMPDEST 
0x56: V29 = CALLVALUE
0x57: V30 = ISZERO V29
0x58: V31 = 0x60
0x5b: JUMPI 0x60 V30
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x5c
[0x5c:0x5f]
---
Predecessors: [0x55]
Successors: []
---
0x5c PUSH1 0x0
0x5e DUP1
0x5f REVERT
---
0x5c: V32 = 0x0
0x5f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x60
[0x60:0x67]
---
Predecessors: [0x55]
Successors: [0x13b]
---
0x60 JUMPDEST
0x61 PUSH2 0x53
0x64 PUSH2 0x13b
0x67 JUMP
---
0x60: JUMPDEST 
0x61: V33 = 0x53
0x64: V34 = 0x13b
0x67: JUMP 0x13b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x53]
Exit stack: [V13, 0x53]

================================

Block 0x68
[0x68:0x6e]
---
Predecessors: [0x27]
Successors: [0x6f, 0x73]
---
0x68 JUMPDEST
0x69 CALLVALUE
0x6a ISZERO
0x6b PUSH2 0x73
0x6e JUMPI
---
0x68: JUMPDEST 
0x69: V35 = CALLVALUE
0x6a: V36 = ISZERO V35
0x6b: V37 = 0x73
0x6e: JUMPI 0x73 V36
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6f
[0x6f:0x72]
---
Predecessors: [0x68]
Successors: []
---
0x6f PUSH1 0x0
0x71 DUP1
0x72 REVERT
---
0x6f: V38 = 0x0
0x72: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x73
[0x73:0xc8]
---
Predecessors: [0x68]
Successors: [0x164]
---
0x73 JUMPDEST
0x74 PUSH2 0x53
0x77 PUSH1 0x4
0x79 DUP1
0x7a CALLDATALOAD
0x7b PUSH1 0x1
0x7d PUSH1 0xa0
0x7f PUSH1 0x2
0x81 EXP
0x82 SUB
0x83 AND
0x84 SWAP1
0x85 PUSH1 0x44
0x87 PUSH1 0x24
0x89 DUP1
0x8a CALLDATALOAD
0x8b SWAP1
0x8c DUP2
0x8d ADD
0x8e SWAP1
0x8f DUP4
0x90 ADD
0x91 CALLDATALOAD
0x92 DUP1
0x93 PUSH1 0x20
0x95 PUSH1 0x1f
0x97 DUP3
0x98 ADD
0x99 DUP2
0x9a SWAP1
0x9b DIV
0x9c DUP2
0x9d MUL
0x9e ADD
0x9f PUSH1 0x40
0xa1 MLOAD
0xa2 SWAP1
0xa3 DUP2
0xa4 ADD
0xa5 PUSH1 0x40
0xa7 MSTORE
0xa8 DUP2
0xa9 DUP2
0xaa MSTORE
0xab SWAP3
0xac SWAP2
0xad SWAP1
0xae PUSH1 0x20
0xb0 DUP5
0xb1 ADD
0xb2 DUP4
0xb3 DUP4
0xb4 DUP1
0xb5 DUP3
0xb6 DUP5
0xb7 CALLDATACOPY
0xb8 POP
0xb9 SWAP5
0xba SWAP7
0xbb POP
0xbc POP
0xbd SWAP4
0xbe CALLDATALOAD
0xbf SWAP4
0xc0 POP
0xc1 PUSH2 0x164
0xc4 SWAP3
0xc5 POP
0xc6 POP
0xc7 POP
0xc8 JUMP
---
0x73: JUMPDEST 
0x74: V39 = 0x53
0x77: V40 = 0x4
0x7a: V41 = CALLDATALOAD 0x4
0x7b: V42 = 0x1
0x7d: V43 = 0xa0
0x7f: V44 = 0x2
0x81: V45 = EXP 0x2 0xa0
0x82: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x85: V48 = 0x44
0x87: V49 = 0x24
0x8a: V50 = CALLDATALOAD 0x24
0x8d: V51 = ADD V50 0x24
0x90: V52 = ADD 0x4 V50
0x91: V53 = CALLDATALOAD V52
0x93: V54 = 0x20
0x95: V55 = 0x1f
0x98: V56 = ADD V53 0x1f
0x9b: V57 = DIV V56 0x20
0x9d: V58 = MUL 0x20 V57
0x9e: V59 = ADD V58 0x20
0x9f: V60 = 0x40
0xa1: V61 = M[0x40]
0xa4: V62 = ADD V61 V59
0xa5: V63 = 0x40
0xa7: M[0x40] = V62
0xaa: M[V61] = V53
0xae: V64 = 0x20
0xb1: V65 = ADD V61 0x20
0xb7: CALLDATACOPY V65 V51 V53
0xbe: V66 = CALLDATALOAD 0x44
0xc1: V67 = 0x164
0xc8: JUMP 0x164
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x53, V47, V61, V66]
Exit stack: [V13, 0x53, V47, V61, V66]

================================

Block 0xc9
[0xc9:0xec]
---
Predecessors: [0x32]
Successors: [0x341]
---
0xc9 JUMPDEST
0xca PUSH2 0x53
0xcd PUSH1 0x4
0xcf DUP1
0xd0 CALLDATALOAD
0xd1 PUSH1 0x1
0xd3 PUSH1 0xa0
0xd5 PUSH1 0x2
0xd7 EXP
0xd8 SUB
0xd9 AND
0xda SWAP1
0xdb PUSH1 0x24
0xdd DUP1
0xde CALLDATALOAD
0xdf SWAP2
0xe0 PUSH1 0x44
0xe2 CALLDATALOAD
0xe3 SWAP2
0xe4 DUP3
0xe5 ADD
0xe6 SWAP2
0xe7 ADD
0xe8 CALLDATALOAD
0xe9 PUSH2 0x341
0xec JUMP
---
0xc9: JUMPDEST 
0xca: V68 = 0x53
0xcd: V69 = 0x4
0xd0: V70 = CALLDATALOAD 0x4
0xd1: V71 = 0x1
0xd3: V72 = 0xa0
0xd5: V73 = 0x2
0xd7: V74 = EXP 0x2 0xa0
0xd8: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0xdb: V77 = 0x24
0xde: V78 = CALLDATALOAD 0x24
0xe0: V79 = 0x44
0xe2: V80 = CALLDATALOAD 0x44
0xe5: V81 = ADD V80 0x24
0xe7: V82 = ADD V80 0x4
0xe8: V83 = CALLDATALOAD V82
0xe9: V84 = 0x341
0xec: JUMP 0x341
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x53, V76, V78, V81, V83]
Exit stack: [V13, 0x53, V76, V78, V81, V83]

================================

Block 0xed
[0xed:0xf3]
---
Predecessors: [0x3d]
Successors: [0xf4, 0xf8]
---
0xed JUMPDEST
0xee CALLVALUE
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xed: JUMPDEST 
0xee: V85 = CALLVALUE
0xef: V86 = ISZERO V85
0xf0: V87 = 0xf8
0xf3: JUMPI 0xf8 V86
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xed]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V88 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xed]
Successors: [0x3a2]
---
0xf8 JUMPDEST
0xf9 PUSH2 0x100
0xfc PUSH2 0x3a2
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V89 = 0x100
0xfc: V90 = 0x3a2
0xff: JUMP 0x3a2
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V13, 0x100]

================================

Block 0x100
[0x100:0x11b]
---
Predecessors: [0x3a2]
Successors: []
---
0x100 JUMPDEST
0x101 PUSH1 0x40
0x103 MLOAD
0x104 PUSH1 0x1
0x106 PUSH1 0xa0
0x108 PUSH1 0x2
0x10a EXP
0x10b SUB
0x10c SWAP1
0x10d SWAP2
0x10e AND
0x10f DUP2
0x110 MSTORE
0x111 PUSH1 0x20
0x113 ADD
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 SWAP2
0x119 SUB
0x11a SWAP1
0x11b RETURN
---
0x100: JUMPDEST 
0x101: V91 = 0x40
0x103: V92 = M[0x40]
0x104: V93 = 0x1
0x106: V94 = 0xa0
0x108: V95 = 0x2
0x10a: V96 = EXP 0x2 0xa0
0x10b: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e: V98 = AND V345 0xffffffffffffffffffffffffffffffffffffffff
0x110: M[V92] = V98
0x111: V99 = 0x20
0x113: V100 = ADD 0x20 V92
0x114: V101 = 0x40
0x116: V102 = M[0x40]
0x119: V103 = SUB V100 V102
0x11b: RETURN V102 V103
---
Entry stack: [V13, 0x100, V345]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x100]

================================

Block 0x11c
[0x11c:0x122]
---
Predecessors: [0x48]
Successors: [0x123, 0x127]
---
0x11c JUMPDEST
0x11d CALLVALUE
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11c: JUMPDEST 
0x11d: V104 = CALLVALUE
0x11e: V105 = ISZERO V104
0x11f: V106 = 0x127
0x122: JUMPI 0x127 V105
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11c]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V107 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x127
[0x127:0x13a]
---
Predecessors: [0x11c]
Successors: [0x3b1]
---
0x127 JUMPDEST
0x128 PUSH2 0x53
0x12b PUSH1 0x1
0x12d PUSH1 0xa0
0x12f PUSH1 0x2
0x131 EXP
0x132 SUB
0x133 PUSH1 0x4
0x135 CALLDATALOAD
0x136 AND
0x137 PUSH2 0x3b1
0x13a JUMP
---
0x127: JUMPDEST 
0x128: V108 = 0x53
0x12b: V109 = 0x1
0x12d: V110 = 0xa0
0x12f: V111 = 0x2
0x131: V112 = EXP 0x2 0xa0
0x132: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x133: V114 = 0x4
0x135: V115 = CALLDATALOAD 0x4
0x136: V116 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x137: V117 = 0x3b1
0x13a: JUMP 0x3b1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x53, V116]
Exit stack: [V13, 0x53, V116]

================================

Block 0x13b
[0x13b:0x151]
---
Predecessors: [0x60]
Successors: [0x152, 0x156]
---
0x13b JUMPDEST
0x13c PUSH1 0x0
0x13e SLOAD
0x13f CALLER
0x140 PUSH1 0x1
0x142 PUSH1 0xa0
0x144 PUSH1 0x2
0x146 EXP
0x147 SUB
0x148 SWAP1
0x149 DUP2
0x14a AND
0x14b SWAP2
0x14c AND
0x14d EQ
0x14e PUSH2 0x156
0x151 JUMPI
---
0x13b: JUMPDEST 
0x13c: V118 = 0x0
0x13e: V119 = S[0x0]
0x13f: V120 = CALLER
0x140: V121 = 0x1
0x142: V122 = 0xa0
0x144: V123 = 0x2
0x146: V124 = EXP 0x2 0xa0
0x147: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14a: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x14c: V127 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V128 = EQ V127 V126
0x14e: V129 = 0x156
0x151: JUMPI 0x156 V128
---
Entry stack: [V13, 0x53]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53]

================================

Block 0x152
[0x152:0x155]
---
Predecessors: [0x13b]
Successors: []
---
0x152 PUSH1 0x0
0x154 DUP1
0x155 REVERT
---
0x152: V130 = 0x0
0x155: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53]

================================

Block 0x156
[0x156:0x163]
---
Predecessors: [0x13b]
Successors: []
---
0x156 JUMPDEST
0x157 PUSH1 0x0
0x159 SLOAD
0x15a PUSH1 0x1
0x15c PUSH1 0xa0
0x15e PUSH1 0x2
0x160 EXP
0x161 SUB
0x162 AND
0x163 SELFDESTRUCT
---
0x156: JUMPDEST 
0x157: V131 = 0x0
0x159: V132 = S[0x0]
0x15a: V133 = 0x1
0x15c: V134 = 0xa0
0x15e: V135 = 0x2
0x160: V136 = EXP 0x2 0xa0
0x161: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x162: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x163: SELFDESTRUCT V138
---
Entry stack: [V13, 0x53]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53]

================================

Block 0x164
[0x164:0x17a]
---
Predecessors: [0x73]
Successors: [0x17b, 0x17f]
---
0x164 JUMPDEST
0x165 PUSH1 0x0
0x167 SLOAD
0x168 CALLER
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 SWAP1
0x172 DUP2
0x173 AND
0x174 SWAP2
0x175 AND
0x176 EQ
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x164: JUMPDEST 
0x165: V139 = 0x0
0x167: V140 = S[0x0]
0x168: V141 = CALLER
0x169: V142 = 0x1
0x16b: V143 = 0xa0
0x16d: V144 = 0x2
0x16f: V145 = EXP 0x2 0xa0
0x170: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x173: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x175: V148 = AND V140 0xffffffffffffffffffffffffffffffffffffffff
0x176: V149 = EQ V148 V147
0x177: V150 = 0x17f
0x17a: JUMPI 0x17f V149
---
Entry stack: [V13, 0x53, V47, V61, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V47, V61, V66]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x164]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V151 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V47, V61, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V47, V61, V66]

================================

Block 0x17f
[0x17f:0x1c9]
---
Predecessors: [0x164]
Successors: [0x1ca]
---
0x17f JUMPDEST
0x180 DUP3
0x181 PUSH1 0x1
0x183 PUSH1 0xa0
0x185 PUSH1 0x2
0x187 EXP
0x188 SUB
0x189 AND
0x18a PUSH4 0x1f1c827f
0x18f DUP4
0x190 PUSH1 0x40
0x192 MLOAD
0x193 DUP3
0x194 PUSH4 0xffffffff
0x199 AND
0x19a PUSH1 0xe0
0x19c PUSH1 0x2
0x19e EXP
0x19f MUL
0x1a0 DUP2
0x1a1 MSTORE
0x1a2 PUSH1 0x4
0x1a4 ADD
0x1a5 DUP1
0x1a6 DUP1
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa DUP1
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae DUP4
0x1af DUP2
0x1b0 SUB
0x1b1 DUP4
0x1b2 MSTORE
0x1b3 DUP5
0x1b4 DUP2
0x1b5 DUP2
0x1b6 MLOAD
0x1b7 DUP2
0x1b8 MSTORE
0x1b9 PUSH1 0x20
0x1bb ADD
0x1bc SWAP2
0x1bd POP
0x1be DUP1
0x1bf MLOAD
0x1c0 SWAP1
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 SWAP1
0x1c5 DUP1
0x1c6 DUP4
0x1c7 DUP4
0x1c8 PUSH1 0x0
---
0x17f: JUMPDEST 
0x181: V152 = 0x1
0x183: V153 = 0xa0
0x185: V154 = 0x2
0x187: V155 = EXP 0x2 0xa0
0x188: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x189: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x18a: V158 = 0x1f1c827f
0x190: V159 = 0x40
0x192: V160 = M[0x40]
0x194: V161 = 0xffffffff
0x199: V162 = AND 0xffffffff 0x1f1c827f
0x19a: V163 = 0xe0
0x19c: V164 = 0x2
0x19e: V165 = EXP 0x2 0xe0
0x19f: V166 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1f1c827f
0x1a1: M[V160] = 0x1f1c827f00000000000000000000000000000000000000000000000000000000
0x1a2: V167 = 0x4
0x1a4: V168 = ADD 0x4 V160
0x1a7: V169 = 0x20
0x1a9: V170 = ADD 0x20 V168
0x1ab: V171 = 0x20
0x1ad: V172 = ADD 0x20 V170
0x1b0: V173 = SUB V172 V168
0x1b2: M[V168] = V173
0x1b6: V174 = M[V61]
0x1b8: M[V172] = V174
0x1b9: V175 = 0x20
0x1bb: V176 = ADD 0x20 V172
0x1bf: V177 = M[V61]
0x1c1: V178 = 0x20
0x1c3: V179 = ADD 0x20 V61
0x1c8: V180 = 0x0
---
Entry stack: [V13, 0x53, V47, V61, V66]
Stack pops: 3
Stack additions: [S2, S1, S0, V157, 0x1f1c827f, S1, V168, V168, V170, V176, V179, V177, V177, V176, V179, 0x0]
Exit stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V61, V168, V168, V170, V176, V179, V177, V177, V176, V179, 0x0]

================================

Block 0x1ca
[0x1ca:0x1d2]
---
Predecessors: [0x17f, 0x1d3]
Successors: [0x1d3, 0x1e2]
---
0x1ca JUMPDEST
0x1cb DUP4
0x1cc DUP2
0x1cd LT
0x1ce ISZERO
0x1cf PUSH2 0x1e2
0x1d2 JUMPI
---
0x1ca: JUMPDEST 
0x1cd: V181 = LT S0 V177
0x1ce: V182 = ISZERO V181
0x1cf: V183 = 0x1e2
0x1d2: JUMPI 0x1e2 V182
---
Entry stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V61, V168, V168, V170, V176, V179, V177, V177, V176, V179, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V61, V168, V168, V170, V176, V179, V177, V177, V176, V179, S0]

================================

Block 0x1d3
[0x1d3:0x1e1]
---
Predecessors: [0x1ca]
Successors: [0x1ca]
---
0x1d3 DUP1
0x1d4 DUP3
0x1d5 ADD
0x1d6 MLOAD
0x1d7 DUP4
0x1d8 DUP3
0x1d9 ADD
0x1da MSTORE
0x1db PUSH1 0x20
0x1dd ADD
0x1de PUSH2 0x1ca
0x1e1 JUMP
---
0x1d5: V184 = ADD V179 S0
0x1d6: V185 = M[V184]
0x1d9: V186 = ADD S0 V176
0x1da: M[V186] = V185
0x1db: V187 = 0x20
0x1dd: V188 = ADD 0x20 S0
0x1de: V189 = 0x1ca
0x1e1: JUMP 0x1ca
---
Entry stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V61, V168, V168, V170, V176, V179, V177, V177, V176, V179, S0]
Stack pops: 3
Stack additions: [S2, S1, V188]
Exit stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V61, V168, V168, V170, V176, V179, V177, V177, V176, V179, V188]

================================

Block 0x1e2
[0x1e2:0x1f5]
---
Predecessors: [0x1ca]
Successors: [0x1f6, 0x20f]
---
0x1e2 JUMPDEST
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 SWAP1
0x1e8 POP
0x1e9 SWAP1
0x1ea DUP2
0x1eb ADD
0x1ec SWAP1
0x1ed PUSH1 0x1f
0x1ef AND
0x1f0 DUP1
0x1f1 ISZERO
0x1f2 PUSH2 0x20f
0x1f5 JUMPI
---
0x1e2: JUMPDEST 
0x1eb: V190 = ADD V177 V176
0x1ed: V191 = 0x1f
0x1ef: V192 = AND 0x1f V177
0x1f1: V193 = ISZERO V192
0x1f2: V194 = 0x20f
0x1f5: JUMPI 0x20f V193
---
Entry stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V61, V168, V168, V170, V176, V179, V177, V177, V176, V179, S0]
Stack pops: 7
Stack additions: [V190, V192]
Exit stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V61, V168, V168, V170, V190, V192]

================================

Block 0x1f6
[0x1f6:0x20e]
---
Predecessors: [0x1e2]
Successors: [0x20f]
---
0x1f6 DUP1
0x1f7 DUP3
0x1f8 SUB
0x1f9 DUP1
0x1fa MLOAD
0x1fb PUSH1 0x1
0x1fd DUP4
0x1fe PUSH1 0x20
0x200 SUB
0x201 PUSH2 0x100
0x204 EXP
0x205 SUB
0x206 NOT
0x207 AND
0x208 DUP2
0x209 MSTORE
0x20a PUSH1 0x20
0x20c ADD
0x20d SWAP2
0x20e POP
---
0x1f8: V195 = SUB V190 V192
0x1fa: V196 = M[V195]
0x1fb: V197 = 0x1
0x1fe: V198 = 0x20
0x200: V199 = SUB 0x20 V192
0x201: V200 = 0x100
0x204: V201 = EXP 0x100 V199
0x205: V202 = SUB V201 0x1
0x206: V203 = NOT V202
0x207: V204 = AND V203 V196
0x209: M[V195] = V204
0x20a: V205 = 0x20
0x20c: V206 = ADD 0x20 V195
---
Entry stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V61, V168, V168, V170, V190, V192]
Stack pops: 2
Stack additions: [V206, S0]
Exit stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V61, V168, V168, V170, V206, V192]

================================

Block 0x20f
[0x20f:0x25a]
---
Predecessors: [0x1e2, 0x1f6]
Successors: [0x25b, 0x25f]
---
0x20f JUMPDEST
0x210 POP
0x211 SWAP3
0x212 DUP4
0x213 SUB
0x214 SWAP1
0x215 MSTORE
0x216 POP
0x217 PUSH1 0x3
0x219 DUP2
0x21a MSTORE
0x21b PUSH32 0x735a730000000000000000000000000000000000000000000000000000000000
0x23c PUSH1 0x20
0x23e DUP3
0x23f ADD
0x240 MSTORE
0x241 PUSH1 0x40
0x243 SWAP1
0x244 DUP2
0x245 ADD
0x246 SWAP2
0x247 POP
0x248 PUSH1 0x0
0x24a SWAP1
0x24b MLOAD
0x24c DUP1
0x24d DUP4
0x24e SUB
0x24f DUP2
0x250 PUSH1 0x0
0x252 DUP8
0x253 DUP1
0x254 EXTCODESIZE
0x255 ISZERO
0x256 ISZERO
0x257 PUSH2 0x25f
0x25a JUMPI
---
0x20f: JUMPDEST 
0x213: V207 = SUB S1 V168
0x215: M[V170] = V207
0x217: V208 = 0x3
0x21a: M[S1] = 0x3
0x21b: V209 = 0x735a730000000000000000000000000000000000000000000000000000000000
0x23c: V210 = 0x20
0x23f: V211 = ADD S1 0x20
0x240: M[V211] = 0x735a730000000000000000000000000000000000000000000000000000000000
0x241: V212 = 0x40
0x245: V213 = ADD 0x40 S1
0x248: V214 = 0x0
0x24b: V215 = M[0x40]
0x24e: V216 = SUB V213 V215
0x250: V217 = 0x0
0x254: V218 = EXTCODESIZE V157
0x255: V219 = ISZERO V218
0x256: V220 = ISZERO V219
0x257: V221 = 0x25f
0x25a: JUMPI 0x25f V220
---
Entry stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V61, V168, V168, V170, S1, V192]
Stack pops: 8
Stack additions: [S7, S6, V213, 0x0, V215, V216, V215, 0x0, S7]
Exit stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V213, 0x0, V215, V216, V215, 0x0, V157]

================================

Block 0x25b
[0x25b:0x25e]
---
Predecessors: [0x20f]
Successors: []
---
0x25b PUSH1 0x0
0x25d DUP1
0x25e REVERT
---
0x25b: V222 = 0x0
0x25e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V213, 0x0, V215, V216, V215, 0x0, V157]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V213, 0x0, V215, V216, V215, 0x0, V157]

================================

Block 0x25f
[0x25f:0x26b]
---
Predecessors: [0x20f]
Successors: [0x26c, 0x270]
---
0x25f JUMPDEST
0x260 PUSH2 0x2c6
0x263 GAS
0x264 SUB
0x265 CALL
0x266 ISZERO
0x267 ISZERO
0x268 PUSH2 0x270
0x26b JUMPI
---
0x25f: JUMPDEST 
0x260: V223 = 0x2c6
0x263: V224 = GAS
0x264: V225 = SUB V224 0x2c6
0x265: V226 = CALL V225 V157 0x0 V215 V216 V215 0x0
0x266: V227 = ISZERO V226
0x267: V228 = ISZERO V227
0x268: V229 = 0x270
0x26b: JUMPI 0x270 V228
---
Entry stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V213, 0x0, V215, V216, V215, 0x0, V157]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V213]

================================

Block 0x26c
[0x26c:0x26f]
---
Predecessors: [0x25f]
Successors: []
---
0x26c PUSH1 0x0
0x26e DUP1
0x26f REVERT
---
0x26c: V230 = 0x0
0x26f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V213]

================================

Block 0x270
[0x270:0x2c3]
---
Predecessors: [0x25f]
Successors: [0x2c4]
---
0x270 JUMPDEST
0x271 POP
0x272 POP
0x273 POP
0x274 DUP3
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d AND
0x27e PUSH4 0x3e3ee859
0x283 DUP4
0x284 DUP4
0x285 PUSH1 0x40
0x287 MLOAD
0x288 PUSH1 0xe0
0x28a PUSH1 0x2
0x28c EXP
0x28d PUSH4 0xffffffff
0x292 DUP6
0x293 AND
0x294 MUL
0x295 DUP2
0x296 MSTORE
0x297 PUSH1 0x24
0x299 DUP2
0x29a ADD
0x29b DUP3
0x29c SWAP1
0x29d MSTORE
0x29e PUSH1 0x40
0x2a0 PUSH1 0x4
0x2a2 DUP3
0x2a3 ADD
0x2a4 SWAP1
0x2a5 DUP2
0x2a6 MSTORE
0x2a7 SWAP1
0x2a8 DUP2
0x2a9 SWAP1
0x2aa PUSH1 0x44
0x2ac ADD
0x2ad DUP5
0x2ae DUP2
0x2af DUP2
0x2b0 MLOAD
0x2b1 DUP2
0x2b2 MSTORE
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 SWAP2
0x2b7 POP
0x2b8 DUP1
0x2b9 MLOAD
0x2ba SWAP1
0x2bb PUSH1 0x20
0x2bd ADD
0x2be SWAP1
0x2bf DUP1
0x2c0 DUP4
0x2c1 DUP4
0x2c2 PUSH1 0x0
---
0x270: JUMPDEST 
0x275: V231 = 0x1
0x277: V232 = 0xa0
0x279: V233 = 0x2
0x27b: V234 = EXP 0x2 0xa0
0x27c: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27d: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x27e: V237 = 0x3e3ee859
0x285: V238 = 0x40
0x287: V239 = M[0x40]
0x288: V240 = 0xe0
0x28a: V241 = 0x2
0x28c: V242 = EXP 0x2 0xe0
0x28d: V243 = 0xffffffff
0x293: V244 = AND 0x3e3ee859 0xffffffff
0x294: V245 = MUL 0x3e3ee859 0x100000000000000000000000000000000000000000000000000000000
0x296: M[V239] = 0x3e3ee85900000000000000000000000000000000000000000000000000000000
0x297: V246 = 0x24
0x29a: V247 = ADD V239 0x24
0x29d: M[V247] = V66
0x29e: V248 = 0x40
0x2a0: V249 = 0x4
0x2a3: V250 = ADD V239 0x4
0x2a6: M[V250] = 0x40
0x2aa: V251 = 0x44
0x2ac: V252 = ADD 0x44 V239
0x2b0: V253 = M[V61]
0x2b2: M[V252] = V253
0x2b3: V254 = 0x20
0x2b5: V255 = ADD 0x20 V252
0x2b9: V256 = M[V61]
0x2bb: V257 = 0x20
0x2bd: V258 = ADD 0x20 V61
0x2c2: V259 = 0x0
---
Entry stack: [V13, 0x53, V47, V61, V66, V157, 0x1f1c827f, V213]
Stack pops: 6
Stack additions: [S5, S4, S3, V236, 0x3e3ee859, S4, S3, V250, V250, V255, V258, V256, V256, V255, V258, 0x0]
Exit stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, V61, V66, V250, V250, V255, V258, V256, V256, V255, V258, 0x0]

================================

Block 0x2c4
[0x2c4:0x2cc]
---
Predecessors: [0x270, 0x2cd]
Successors: [0x2cd, 0x2dc]
---
0x2c4 JUMPDEST
0x2c5 DUP4
0x2c6 DUP2
0x2c7 LT
0x2c8 ISZERO
0x2c9 PUSH2 0x2dc
0x2cc JUMPI
---
0x2c4: JUMPDEST 
0x2c7: V260 = LT S0 V256
0x2c8: V261 = ISZERO V260
0x2c9: V262 = 0x2dc
0x2cc: JUMPI 0x2dc V261
---
Entry stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, V61, V66, V250, V250, V255, V258, V256, V256, V255, V258, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, V61, V66, V250, V250, V255, V258, V256, V256, V255, V258, S0]

================================

Block 0x2cd
[0x2cd:0x2db]
---
Predecessors: [0x2c4]
Successors: [0x2c4]
---
0x2cd DUP1
0x2ce DUP3
0x2cf ADD
0x2d0 MLOAD
0x2d1 DUP4
0x2d2 DUP3
0x2d3 ADD
0x2d4 MSTORE
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 PUSH2 0x2c4
0x2db JUMP
---
0x2cf: V263 = ADD V258 S0
0x2d0: V264 = M[V263]
0x2d3: V265 = ADD S0 V255
0x2d4: M[V265] = V264
0x2d5: V266 = 0x20
0x2d7: V267 = ADD 0x20 S0
0x2d8: V268 = 0x2c4
0x2db: JUMP 0x2c4
---
Entry stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, V61, V66, V250, V250, V255, V258, V256, V256, V255, V258, S0]
Stack pops: 3
Stack additions: [S2, S1, V267]
Exit stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, V61, V66, V250, V250, V255, V258, V256, V256, V255, V258, V267]

================================

Block 0x2dc
[0x2dc:0x2ef]
---
Predecessors: [0x2c4]
Successors: [0x2f0, 0x309]
---
0x2dc JUMPDEST
0x2dd POP
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 SWAP1
0x2e2 POP
0x2e3 SWAP1
0x2e4 DUP2
0x2e5 ADD
0x2e6 SWAP1
0x2e7 PUSH1 0x1f
0x2e9 AND
0x2ea DUP1
0x2eb ISZERO
0x2ec PUSH2 0x309
0x2ef JUMPI
---
0x2dc: JUMPDEST 
0x2e5: V269 = ADD V256 V255
0x2e7: V270 = 0x1f
0x2e9: V271 = AND 0x1f V256
0x2eb: V272 = ISZERO V271
0x2ec: V273 = 0x309
0x2ef: JUMPI 0x309 V272
---
Entry stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, V61, V66, V250, V250, V255, V258, V256, V256, V255, V258, S0]
Stack pops: 7
Stack additions: [V269, V271]
Exit stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, V61, V66, V250, V250, V269, V271]

================================

Block 0x2f0
[0x2f0:0x308]
---
Predecessors: [0x2dc]
Successors: [0x309]
---
0x2f0 DUP1
0x2f1 DUP3
0x2f2 SUB
0x2f3 DUP1
0x2f4 MLOAD
0x2f5 PUSH1 0x1
0x2f7 DUP4
0x2f8 PUSH1 0x20
0x2fa SUB
0x2fb PUSH2 0x100
0x2fe EXP
0x2ff SUB
0x300 NOT
0x301 AND
0x302 DUP2
0x303 MSTORE
0x304 PUSH1 0x20
0x306 ADD
0x307 SWAP2
0x308 POP
---
0x2f2: V274 = SUB V269 V271
0x2f4: V275 = M[V274]
0x2f5: V276 = 0x1
0x2f8: V277 = 0x20
0x2fa: V278 = SUB 0x20 V271
0x2fb: V279 = 0x100
0x2fe: V280 = EXP 0x100 V278
0x2ff: V281 = SUB V280 0x1
0x300: V282 = NOT V281
0x301: V283 = AND V282 V275
0x303: M[V274] = V283
0x304: V284 = 0x20
0x306: V285 = ADD 0x20 V274
---
Entry stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, V61, V66, V250, V250, V269, V271]
Stack pops: 2
Stack additions: [V285, S0]
Exit stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, V61, V66, V250, V250, V285, V271]

================================

Block 0x309
[0x309:0x323]
---
Predecessors: [0x2dc, 0x2f0]
Successors: [0x324, 0x328]
---
0x309 JUMPDEST
0x30a POP
0x30b SWAP4
0x30c POP
0x30d POP
0x30e POP
0x30f POP
0x310 PUSH1 0x0
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 DUP4
0x317 SUB
0x318 DUP2
0x319 PUSH1 0x0
0x31b DUP8
0x31c DUP1
0x31d EXTCODESIZE
0x31e ISZERO
0x31f ISZERO
0x320 PUSH2 0x328
0x323 JUMPI
---
0x309: JUMPDEST 
0x310: V286 = 0x0
0x312: V287 = 0x40
0x314: V288 = M[0x40]
0x317: V289 = SUB S1 V288
0x319: V290 = 0x0
0x31d: V291 = EXTCODESIZE V236
0x31e: V292 = ISZERO V291
0x31f: V293 = ISZERO V292
0x320: V294 = 0x328
0x323: JUMPI 0x328 V293
---
Entry stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, V61, V66, V250, V250, S1, V271]
Stack pops: 8
Stack additions: [S7, S6, S1, 0x0, V288, V289, V288, 0x0, S7]
Exit stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, S1, 0x0, V288, V289, V288, 0x0, V236]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x309]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V295 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, S6, 0x0, V288, V289, V288, 0x0, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, S6, 0x0, V288, V289, V288, 0x0, V236]

================================

Block 0x328
[0x328:0x334]
---
Predecessors: [0x309]
Successors: [0x335, 0x339]
---
0x328 JUMPDEST
0x329 PUSH2 0x2c6
0x32c GAS
0x32d SUB
0x32e CALL
0x32f ISZERO
0x330 ISZERO
0x331 PUSH2 0x339
0x334 JUMPI
---
0x328: JUMPDEST 
0x329: V296 = 0x2c6
0x32c: V297 = GAS
0x32d: V298 = SUB V297 0x2c6
0x32e: V299 = CALL V298 V236 0x0 V288 V289 V288 0x0
0x32f: V300 = ISZERO V299
0x330: V301 = ISZERO V300
0x331: V302 = 0x339
0x334: JUMPI 0x339 V301
---
Entry stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, S6, 0x0, V288, V289, V288, 0x0, V236]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, S6]

================================

Block 0x335
[0x335:0x338]
---
Predecessors: [0x328]
Successors: []
---
0x335 PUSH1 0x0
0x337 DUP1
0x338 REVERT
---
0x335: V303 = 0x0
0x338: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, S0]

================================

Block 0x339
[0x339:0x340]
---
Predecessors: [0x328]
Successors: [0x53]
---
0x339 JUMPDEST
0x33a POP
0x33b POP
0x33c POP
0x33d POP
0x33e POP
0x33f POP
0x340 JUMP
---
0x339: JUMPDEST 
0x340: JUMP 0x53
---
Entry stack: [V13, 0x53, V47, V61, V66, V236, 0x3e3ee859, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x341
[0x341:0x357]
---
Predecessors: [0xc9]
Successors: [0x358, 0x35c]
---
0x341 JUMPDEST
0x342 PUSH1 0x0
0x344 SLOAD
0x345 CALLER
0x346 PUSH1 0x1
0x348 PUSH1 0xa0
0x34a PUSH1 0x2
0x34c EXP
0x34d SUB
0x34e SWAP1
0x34f DUP2
0x350 AND
0x351 SWAP2
0x352 AND
0x353 EQ
0x354 PUSH2 0x35c
0x357 JUMPI
---
0x341: JUMPDEST 
0x342: V304 = 0x0
0x344: V305 = S[0x0]
0x345: V306 = CALLER
0x346: V307 = 0x1
0x348: V308 = 0xa0
0x34a: V309 = 0x2
0x34c: V310 = EXP 0x2 0xa0
0x34d: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x350: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x352: V313 = AND V305 0xffffffffffffffffffffffffffffffffffffffff
0x353: V314 = EQ V313 V312
0x354: V315 = 0x35c
0x357: JUMPI 0x35c V314
---
Entry stack: [V13, 0x53, V76, V78, V81, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V76, V78, V81, V83]

================================

Block 0x358
[0x358:0x35b]
---
Predecessors: [0x341]
Successors: []
---
0x358 PUSH1 0x0
0x35a DUP1
0x35b REVERT
---
0x358: V316 = 0x0
0x35b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V76, V78, V81, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V76, V78, V81, V83]

================================

Block 0x35c
[0x35c:0x397]
---
Predecessors: [0x341]
Successors: [0x398, 0x39c]
---
0x35c JUMPDEST
0x35d DUP4
0x35e PUSH1 0x1
0x360 PUSH1 0xa0
0x362 PUSH1 0x2
0x364 EXP
0x365 SUB
0x366 AND
0x367 DUP4
0x368 DUP4
0x369 DUP4
0x36a PUSH1 0x40
0x36c MLOAD
0x36d DUP1
0x36e DUP4
0x36f DUP4
0x370 DUP1
0x371 DUP3
0x372 DUP5
0x373 CALLDATACOPY
0x374 DUP3
0x375 ADD
0x376 SWAP2
0x377 POP
0x378 POP
0x379 SWAP3
0x37a POP
0x37b POP
0x37c POP
0x37d PUSH1 0x0
0x37f PUSH1 0x40
0x381 MLOAD
0x382 DUP1
0x383 DUP4
0x384 SUB
0x385 DUP2
0x386 DUP6
0x387 DUP8
0x388 PUSH2 0x8796
0x38b GAS
0x38c SUB
0x38d CALL
0x38e SWAP3
0x38f POP
0x390 POP
0x391 POP
0x392 ISZERO
0x393 ISZERO
0x394 PUSH2 0x39c
0x397 JUMPI
---
0x35c: JUMPDEST 
0x35e: V317 = 0x1
0x360: V318 = 0xa0
0x362: V319 = 0x2
0x364: V320 = EXP 0x2 0xa0
0x365: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x366: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x36a: V323 = 0x40
0x36c: V324 = M[0x40]
0x373: CALLDATACOPY V324 V81 V83
0x375: V325 = ADD V324 V83
0x37d: V326 = 0x0
0x37f: V327 = 0x40
0x381: V328 = M[0x40]
0x384: V329 = SUB V325 V328
0x388: V330 = 0x8796
0x38b: V331 = GAS
0x38c: V332 = SUB V331 0x8796
0x38d: V333 = CALL V332 V322 V78 V328 V329 V328 0x0
0x392: V334 = ISZERO V333
0x393: V335 = ISZERO V334
0x394: V336 = 0x39c
0x397: JUMPI 0x39c V335
---
Entry stack: [V13, 0x53, V76, V78, V81, V83]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x53, V76, V78, V81, V83]

================================

Block 0x398
[0x398:0x39b]
---
Predecessors: [0x35c]
Successors: []
---
0x398 PUSH1 0x0
0x39a DUP1
0x39b REVERT
---
0x398: V337 = 0x0
0x39b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V76, V78, V81, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V76, V78, V81, V83]

================================

Block 0x39c
[0x39c:0x3a1]
---
Predecessors: [0x35c, 0x409]
Successors: [0x53]
---
0x39c JUMPDEST
0x39d POP
0x39e POP
0x39f POP
0x3a0 POP
0x3a1 JUMP
---
0x39c: JUMPDEST 
0x3a1: JUMP 0x53
---
Entry stack: [V13, 0x53, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x3a2
[0x3a2:0x3b0]
---
Predecessors: [0xf8]
Successors: [0x100]
---
0x3a2 JUMPDEST
0x3a3 PUSH1 0x0
0x3a5 SLOAD
0x3a6 PUSH1 0x1
0x3a8 PUSH1 0xa0
0x3aa PUSH1 0x2
0x3ac EXP
0x3ad SUB
0x3ae AND
0x3af DUP2
0x3b0 JUMP
---
0x3a2: JUMPDEST 
0x3a3: V338 = 0x0
0x3a5: V339 = S[0x0]
0x3a6: V340 = 0x1
0x3a8: V341 = 0xa0
0x3aa: V342 = 0x2
0x3ac: V343 = EXP 0x2 0xa0
0x3ad: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ae: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x3b0: JUMP 0x100
---
Entry stack: [V13, 0x100]
Stack pops: 1
Stack additions: [S0, V345]
Exit stack: [V13, 0x100, V345]

================================

Block 0x3b1
[0x3b1:0x3c7]
---
Predecessors: [0x127]
Successors: [0x3c8, 0x3cc]
---
0x3b1 JUMPDEST
0x3b2 PUSH1 0x0
0x3b4 SLOAD
0x3b5 CALLER
0x3b6 PUSH1 0x1
0x3b8 PUSH1 0xa0
0x3ba PUSH1 0x2
0x3bc EXP
0x3bd SUB
0x3be SWAP1
0x3bf DUP2
0x3c0 AND
0x3c1 SWAP2
0x3c2 AND
0x3c3 EQ
0x3c4 PUSH2 0x3cc
0x3c7 JUMPI
---
0x3b1: JUMPDEST 
0x3b2: V346 = 0x0
0x3b4: V347 = S[0x0]
0x3b5: V348 = CALLER
0x3b6: V349 = 0x1
0x3b8: V350 = 0xa0
0x3ba: V351 = 0x2
0x3bc: V352 = EXP 0x2 0xa0
0x3bd: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c0: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x3c2: V355 = AND V347 0xffffffffffffffffffffffffffffffffffffffff
0x3c3: V356 = EQ V355 V354
0x3c4: V357 = 0x3cc
0x3c7: JUMPI 0x3cc V356
---
Entry stack: [V13, 0x53, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V116]

================================

Block 0x3c8
[0x3c8:0x3cb]
---
Predecessors: [0x3b1]
Successors: []
---
0x3c8 PUSH1 0x0
0x3ca DUP1
0x3cb REVERT
---
0x3c8: V358 = 0x0
0x3cb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V116]

================================

Block 0x3cc
[0x3cc:0x404]
---
Predecessors: [0x3b1]
Successors: [0x405, 0x409]
---
0x3cc JUMPDEST
0x3cd DUP1
0x3ce PUSH1 0x1
0x3d0 PUSH1 0xa0
0x3d2 PUSH1 0x2
0x3d4 EXP
0x3d5 SUB
0x3d6 AND
0x3d7 PUSH4 0xf50ab247
0x3dc PUSH1 0x40
0x3de MLOAD
0x3df DUP2
0x3e0 PUSH4 0xffffffff
0x3e5 AND
0x3e6 PUSH1 0xe0
0x3e8 PUSH1 0x2
0x3ea EXP
0x3eb MUL
0x3ec DUP2
0x3ed MSTORE
0x3ee PUSH1 0x4
0x3f0 ADD
0x3f1 PUSH1 0x0
0x3f3 PUSH1 0x40
0x3f5 MLOAD
0x3f6 DUP1
0x3f7 DUP4
0x3f8 SUB
0x3f9 DUP2
0x3fa PUSH1 0x0
0x3fc DUP8
0x3fd DUP1
0x3fe EXTCODESIZE
0x3ff ISZERO
0x400 ISZERO
0x401 PUSH2 0x409
0x404 JUMPI
---
0x3cc: JUMPDEST 
0x3ce: V359 = 0x1
0x3d0: V360 = 0xa0
0x3d2: V361 = 0x2
0x3d4: V362 = EXP 0x2 0xa0
0x3d5: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d6: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x3d7: V365 = 0xf50ab247
0x3dc: V366 = 0x40
0x3de: V367 = M[0x40]
0x3e0: V368 = 0xffffffff
0x3e5: V369 = AND 0xffffffff 0xf50ab247
0x3e6: V370 = 0xe0
0x3e8: V371 = 0x2
0x3ea: V372 = EXP 0x2 0xe0
0x3eb: V373 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf50ab247
0x3ed: M[V367] = 0xf50ab24700000000000000000000000000000000000000000000000000000000
0x3ee: V374 = 0x4
0x3f0: V375 = ADD 0x4 V367
0x3f1: V376 = 0x0
0x3f3: V377 = 0x40
0x3f5: V378 = M[0x40]
0x3f8: V379 = SUB V375 V378
0x3fa: V380 = 0x0
0x3fe: V381 = EXTCODESIZE V364
0x3ff: V382 = ISZERO V381
0x400: V383 = ISZERO V382
0x401: V384 = 0x409
0x404: JUMPI 0x409 V383
---
Entry stack: [V13, 0x53, V116]
Stack pops: 1
Stack additions: [S0, V364, 0xf50ab247, V375, 0x0, V378, V379, V378, 0x0, V364]
Exit stack: [V13, 0x53, V116, V364, 0xf50ab247, V375, 0x0, V378, V379, V378, 0x0, V364]

================================

Block 0x405
[0x405:0x408]
---
Predecessors: [0x3cc]
Successors: []
---
0x405 PUSH1 0x0
0x407 DUP1
0x408 REVERT
---
0x405: V385 = 0x0
0x408: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V116, V364, 0xf50ab247, V375, 0x0, V378, V379, V378, 0x0, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V116, V364, 0xf50ab247, V375, 0x0, V378, V379, V378, 0x0, V364]

================================

Block 0x409
[0x409:0x415]
---
Predecessors: [0x3cc]
Successors: [0x39c, 0x416]
---
0x409 JUMPDEST
0x40a PUSH2 0x2c6
0x40d GAS
0x40e SUB
0x40f CALL
0x410 ISZERO
0x411 ISZERO
0x412 PUSH2 0x39c
0x415 JUMPI
---
0x409: JUMPDEST 
0x40a: V386 = 0x2c6
0x40d: V387 = GAS
0x40e: V388 = SUB V387 0x2c6
0x40f: V389 = CALL V388 V364 0x0 V378 V379 V378 0x0
0x410: V390 = ISZERO V389
0x411: V391 = ISZERO V390
0x412: V392 = 0x39c
0x415: JUMPI 0x39c V391
---
Entry stack: [V13, 0x53, V116, V364, 0xf50ab247, V375, 0x0, V378, V379, V378, 0x0, V364]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x53, V116, V364, 0xf50ab247, V375]

================================

Block 0x416
[0x416:0x419]
---
Predecessors: [0x409]
Successors: []
---
0x416 PUSH1 0x0
0x418 DUP1
0x419 REVERT
---
0x416: V393 = 0x0
0x419: REVERT 0x0 0x0
---
Entry stack: [V13, 0x53, V116, V364, 0xf50ab247, V375]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x53, V116, V364, 0xf50ab247, V375]

================================

Block 0x41a
[0x41a:0x445]
---
Predecessors: []
Successors: []
---
0x41a STOP
0x41b LOG1
0x41c PUSH6 0x627a7a723058
0x423 SHA3
0x424 PC
0x425 CALLER
0x426 ORIGIN
0x427 SWAP4
0x428 GT
0x429 MISSING 0x2c
0x42a EQ
0x42b SWAP14
0x42c MISSING 0xfb
0x42d PUSH5 0xae96c2bbda
0x433 DUP8
0x434 MISSING 0xce
0x435 MISSING 0xe0
0x436 GAS
0x437 OR
0x438 PUSH10 0x24d3761431f5088bbd8e
0x443 SWAP12
0x444 STOP
0x445 MISSING 0x29
---
0x41a: STOP 
0x41b: LOG S0 S1 S2
0x41c: V394 = 0x627a7a723058
0x423: V395 = SHA3 0x627a7a723058 S3
0x424: V396 = PC
0x425: V397 = CALLER
0x426: V398 = ORIGIN
0x428: V399 = GT S4 V397
0x429: MISSING 0x2c
0x42a: V400 = EQ S0 S1
0x42c: MISSING 0xfb
0x42d: V401 = 0xae96c2bbda
0x434: MISSING 0xce
0x435: MISSING 0xe0
0x436: V402 = GAS
0x437: V403 = OR V402 S0
0x438: V404 = 0x24d3761431f5088bbd8e
0x444: STOP 
0x445: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V399, V396, V395, V398, S15, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V400, S6, 0xae96c2bbda, S0, S1, S2, S3, S4, S5, S6, S11, V403, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0x24d3761431f5088bbd8e]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x55
Exit block: 0x152
Body: 0x55, 0x5c, 0x60, 0x13b, 0x152, 0x156

Function 1:
Public function signature: 0x9062117f
Entry block: 0x68
Exit block: 0x53
Body: 0x53, 0x68, 0x6f, 0x73, 0x164, 0x17b, 0x17f, 0x1ca, 0x1d3, 0x1e2, 0x1f6, 0x20f, 0x25b, 0x25f, 0x26c, 0x270, 0x2c4, 0x2cd, 0x2dc, 0x2f0, 0x309, 0x324, 0x328, 0x335, 0x339

Function 2:
Public function signature: 0x9278a35a
Entry block: 0xc9
Exit block: 0x53
Body: 0x53, 0xc9, 0x341, 0x358, 0x35c, 0x398, 0x39c

Function 3:
Public function signature: 0xb1d131bf
Entry block: 0xed
Exit block: 0x100
Body: 0xed, 0xf4, 0xf8, 0x100, 0x3a2

Function 4:
Public function signature: 0xe3112254
Entry block: 0x11c
Exit block: 0x53
Body: 0x53, 0x11c, 0x123, 0x127, 0x39c, 0x3b1, 0x3c8, 0x3cc, 0x405, 0x409, 0x416

Function 5:
Public fallback function
Entry block: 0x53
Exit block: 0x53
Body: 0x53

