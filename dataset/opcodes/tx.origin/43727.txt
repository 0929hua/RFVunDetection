Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3853682c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3853682c
0x3b: V13 = EQ V11 0x3853682c
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8c]
---
0x40 DUP1
0x41 PUSH4 0x3e3ee859
0x46 EQ
0x47 PUSH2 0x8c
0x4a JUMPI
---
0x41: V15 = 0x3e3ee859
0x46: V16 = EQ 0x3e3ee859 V11
0x47: V17 = 0x8c
0x4a: JUMPI 0x8c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xda]
---
0x4b DUP1
0x4c PUSH4 0x47247fb2
0x51 EQ
0x52 PUSH2 0xda
0x55 JUMPI
---
0x4c: V18 = 0x47247fb2
0x51: V19 = EQ 0x47247fb2 V11
0x52: V20 = 0xda
0x55: JUMPI 0xda V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x164]
---
0x56 DUP1
0x57 PUSH4 0x50d17565
0x5c EQ
0x5d PUSH2 0x164
0x60 JUMPI
---
0x57: V21 = 0x50d17565
0x5c: V22 = EQ 0x50d17565 V11
0x5d: V23 = 0x164
0x60: JUMPI 0x164 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1ee]
---
0x61 DUP1
0x62 PUSH4 0x59988dce
0x67 EQ
0x68 PUSH2 0x1ee
0x6b JUMPI
---
0x62: V24 = 0x59988dce
0x67: V25 = EQ 0x59988dce V11
0x68: V26 = 0x1ee
0x6b: JUMPI 0x1ee V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x21c]
---
0x6c DUP1
0x6d PUSH4 0xf50ab247
0x72 EQ
0x73 PUSH2 0x21c
0x76 JUMPI
---
0x6d: V27 = 0xf50ab247
0x72: V28 = EQ 0xf50ab247 V11
0x73: V29 = 0x21c
0x76: JUMPI 0x21c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x299, 0x2d0, 0x3dc, 0x456, 0x524]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]

================================

Block 0x79
[0x79:0x8b]
---
Predecessors: [0xd]
Successors: [0x224]
---
0x79 JUMPDEST
0x7a PUSH2 0x77
0x7d PUSH1 0x4
0x7f DUP1
0x80 CALLDATALOAD
0x81 PUSH1 0x24
0x83 DUP2
0x84 ADD
0x85 SWAP2
0x86 ADD
0x87 CALLDATALOAD
0x88 PUSH2 0x224
0x8b JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x77
0x7d: V31 = 0x4
0x80: V32 = CALLDATALOAD 0x4
0x81: V33 = 0x24
0x84: V34 = ADD V32 0x24
0x86: V35 = ADD 0x4 V32
0x87: V36 = CALLDATALOAD V35
0x88: V37 = 0x224
0x8b: JUMP 0x224
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V34, V36]
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x8c
[0x8c:0xd9]
---
Predecessors: [0x40]
Successors: [0x29d]
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f DUP1
0x90 MLOAD
0x91 PUSH1 0x20
0x93 PUSH1 0x4
0x95 DUP1
0x96 CALLDATALOAD
0x97 DUP1
0x98 DUP3
0x99 ADD
0x9a CALLDATALOAD
0x9b PUSH1 0x1f
0x9d DUP2
0x9e ADD
0x9f DUP5
0xa0 SWAP1
0xa1 DIV
0xa2 DUP5
0xa3 MUL
0xa4 DUP6
0xa5 ADD
0xa6 DUP5
0xa7 ADD
0xa8 SWAP1
0xa9 SWAP6
0xaa MSTORE
0xab DUP5
0xac DUP5
0xad MSTORE
0xae PUSH2 0x77
0xb1 SWAP5
0xb2 CALLDATASIZE
0xb3 SWAP5
0xb4 SWAP3
0xb5 SWAP4
0xb6 PUSH1 0x24
0xb8 SWAP4
0xb9 SWAP3
0xba DUP5
0xbb ADD
0xbc SWAP2
0xbd SWAP1
0xbe DUP2
0xbf SWAP1
0xc0 DUP5
0xc1 ADD
0xc2 DUP4
0xc3 DUP3
0xc4 DUP1
0xc5 DUP3
0xc6 DUP5
0xc7 CALLDATACOPY
0xc8 POP
0xc9 SWAP5
0xca SWAP8
0xcb POP
0xcc POP
0xcd SWAP4
0xce CALLDATALOAD
0xcf SWAP5
0xd0 POP
0xd1 PUSH2 0x29d
0xd4 SWAP4
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 POP
0xd9 JUMP
---
0x8c: JUMPDEST 
0x8d: V38 = 0x40
0x90: V39 = M[0x40]
0x91: V40 = 0x20
0x93: V41 = 0x4
0x96: V42 = CALLDATALOAD 0x4
0x99: V43 = ADD 0x4 V42
0x9a: V44 = CALLDATALOAD V43
0x9b: V45 = 0x1f
0x9e: V46 = ADD V44 0x1f
0xa1: V47 = DIV V46 0x20
0xa3: V48 = MUL 0x20 V47
0xa5: V49 = ADD V39 V48
0xa7: V50 = ADD 0x20 V49
0xaa: M[0x40] = V50
0xad: M[V39] = V44
0xae: V51 = 0x77
0xb2: V52 = CALLDATASIZE
0xb6: V53 = 0x24
0xbb: V54 = ADD 0x24 V42
0xc1: V55 = ADD V39 0x20
0xc7: CALLDATACOPY V55 V54 V44
0xce: V56 = CALLDATALOAD 0x24
0xd1: V57 = 0x29d
0xd9: JUMP 0x29d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V39, V56]
Exit stack: [V11, 0x77, V39, V56]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0x4b]
Successors: [0xe2, 0xe6]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc DUP1
0xdd ISZERO
0xde PUSH2 0xe6
0xe1 JUMPI
---
0xda: JUMPDEST 
0xdb: V58 = CALLVALUE
0xdd: V59 = ISZERO V58
0xde: V60 = 0xe6
0xe1: JUMPI 0xe6 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xe2
[0xe2:0xe5]
---
Predecessors: [0xda]
Successors: []
---
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe2: V61 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xe6
[0xe6:0xee]
---
Predecessors: [0xda]
Successors: [0x2d7]
---
0xe6 JUMPDEST
0xe7 POP
0xe8 PUSH2 0xef
0xeb PUSH2 0x2d7
0xee JUMP
---
0xe6: JUMPDEST 
0xe8: V62 = 0xef
0xeb: V63 = 0x2d7
0xee: JUMP 0x2d7
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xef]
Exit stack: [V11, 0xef]

================================

Block 0xef
[0xef:0x110]
---
Predecessors: [0x35d]
Successors: [0x111]
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 DUP1
0xf3 MLOAD
0xf4 PUSH1 0x20
0xf6 DUP1
0xf7 DUP3
0xf8 MSTORE
0xf9 DUP4
0xfa MLOAD
0xfb DUP2
0xfc DUP4
0xfd ADD
0xfe MSTORE
0xff DUP4
0x100 MLOAD
0x101 SWAP2
0x102 SWAP3
0x103 DUP4
0x104 SWAP3
0x105 SWAP1
0x106 DUP4
0x107 ADD
0x108 SWAP2
0x109 DUP6
0x10a ADD
0x10b SWAP1
0x10c DUP1
0x10d DUP4
0x10e DUP4
0x10f PUSH1 0x0
---
0xef: JUMPDEST 
0xf0: V64 = 0x40
0xf3: V65 = M[0x40]
0xf4: V66 = 0x20
0xf8: M[V65] = 0x20
0xfa: V67 = M[V205]
0xfd: V68 = ADD V65 0x20
0xfe: M[V68] = V67
0x100: V69 = M[V205]
0x107: V70 = ADD V65 0x40
0x10a: V71 = ADD V205 0x20
0x10f: V72 = 0x0
---
Entry stack: [V11, 0xef, V205]
Stack pops: 1
Stack additions: [S0, V65, V65, V70, V71, V69, V69, V70, V71, 0x0]
Exit stack: [V11, 0xef, V205, V65, V65, V70, V71, V69, V69, V70, V71, 0x0]

================================

Block 0x111
[0x111:0x119]
---
Predecessors: [0xef, 0x11a]
Successors: [0x11a, 0x129]
---
0x111 JUMPDEST
0x112 DUP4
0x113 DUP2
0x114 LT
0x115 ISZERO
0x116 PUSH2 0x129
0x119 JUMPI
---
0x111: JUMPDEST 
0x114: V73 = LT S0 V69
0x115: V74 = ISZERO V73
0x116: V75 = 0x129
0x119: JUMPI 0x129 V74
---
Entry stack: [V11, 0xef, V205, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xef, V205, V65, V65, V70, V71, V69, V69, V70, V71, S0]

================================

Block 0x11a
[0x11a:0x128]
---
Predecessors: [0x111]
Successors: [0x111]
---
0x11a DUP2
0x11b DUP2
0x11c ADD
0x11d MLOAD
0x11e DUP4
0x11f DUP3
0x120 ADD
0x121 MSTORE
0x122 PUSH1 0x20
0x124 ADD
0x125 PUSH2 0x111
0x128 JUMP
---
0x11c: V76 = ADD S0 V71
0x11d: V77 = M[V76]
0x120: V78 = ADD S0 V70
0x121: M[V78] = V77
0x122: V79 = 0x20
0x124: V80 = ADD 0x20 S0
0x125: V81 = 0x111
0x128: JUMP 0x111
---
Entry stack: [V11, 0xef, V205, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 3
Stack additions: [S2, S1, V80]
Exit stack: [V11, 0xef, V205, V65, V65, V70, V71, V69, V69, V70, V71, V80]

================================

Block 0x129
[0x129:0x13c]
---
Predecessors: [0x111]
Successors: [0x13d, 0x156]
---
0x129 JUMPDEST
0x12a POP
0x12b POP
0x12c POP
0x12d POP
0x12e SWAP1
0x12f POP
0x130 SWAP1
0x131 DUP2
0x132 ADD
0x133 SWAP1
0x134 PUSH1 0x1f
0x136 AND
0x137 DUP1
0x138 ISZERO
0x139 PUSH2 0x156
0x13c JUMPI
---
0x129: JUMPDEST 
0x132: V82 = ADD V69 V70
0x134: V83 = 0x1f
0x136: V84 = AND 0x1f V69
0x138: V85 = ISZERO V84
0x139: V86 = 0x156
0x13c: JUMPI 0x156 V85
---
Entry stack: [V11, 0xef, V205, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 7
Stack additions: [V82, V84]
Exit stack: [V11, 0xef, V205, V65, V65, V82, V84]

================================

Block 0x13d
[0x13d:0x155]
---
Predecessors: [0x129]
Successors: [0x156]
---
0x13d DUP1
0x13e DUP3
0x13f SUB
0x140 DUP1
0x141 MLOAD
0x142 PUSH1 0x1
0x144 DUP4
0x145 PUSH1 0x20
0x147 SUB
0x148 PUSH2 0x100
0x14b EXP
0x14c SUB
0x14d NOT
0x14e AND
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP2
0x155 POP
---
0x13f: V87 = SUB V82 V84
0x141: V88 = M[V87]
0x142: V89 = 0x1
0x145: V90 = 0x20
0x147: V91 = SUB 0x20 V84
0x148: V92 = 0x100
0x14b: V93 = EXP 0x100 V91
0x14c: V94 = SUB V93 0x1
0x14d: V95 = NOT V94
0x14e: V96 = AND V95 V88
0x150: M[V87] = V96
0x151: V97 = 0x20
0x153: V98 = ADD 0x20 V87
---
Entry stack: [V11, 0xef, V205, V65, V65, V82, V84]
Stack pops: 2
Stack additions: [V98, S0]
Exit stack: [V11, 0xef, V205, V65, V65, V98, V84]

================================

Block 0x156
[0x156:0x163]
---
Predecessors: [0x129, 0x13d]
Successors: []
---
0x156 JUMPDEST
0x157 POP
0x158 SWAP3
0x159 POP
0x15a POP
0x15b POP
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 SWAP2
0x161 SUB
0x162 SWAP1
0x163 RETURN
---
0x156: JUMPDEST 
0x15c: V99 = 0x40
0x15e: V100 = M[0x40]
0x161: V101 = SUB S1 V100
0x163: RETURN V100 V101
---
Entry stack: [V11, 0xef, V205, V65, V65, S1, V84]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xef]

================================

Block 0x164
[0x164:0x1ed]
---
Predecessors: [0x56]
Successors: [0x365]
---
0x164 JUMPDEST
0x165 PUSH1 0x40
0x167 DUP1
0x168 MLOAD
0x169 PUSH1 0x20
0x16b PUSH1 0x4
0x16d DUP1
0x16e CALLDATALOAD
0x16f DUP1
0x170 DUP3
0x171 ADD
0x172 CALLDATALOAD
0x173 PUSH1 0x1f
0x175 DUP2
0x176 ADD
0x177 DUP5
0x178 SWAP1
0x179 DIV
0x17a DUP5
0x17b MUL
0x17c DUP6
0x17d ADD
0x17e DUP5
0x17f ADD
0x180 SWAP1
0x181 SWAP6
0x182 MSTORE
0x183 DUP5
0x184 DUP5
0x185 MSTORE
0x186 PUSH2 0x77
0x189 SWAP5
0x18a CALLDATASIZE
0x18b SWAP5
0x18c SWAP3
0x18d SWAP4
0x18e PUSH1 0x24
0x190 SWAP4
0x191 SWAP3
0x192 DUP5
0x193 ADD
0x194 SWAP2
0x195 SWAP1
0x196 DUP2
0x197 SWAP1
0x198 DUP5
0x199 ADD
0x19a DUP4
0x19b DUP3
0x19c DUP1
0x19d DUP3
0x19e DUP5
0x19f CALLDATACOPY
0x1a0 POP
0x1a1 POP
0x1a2 PUSH1 0x40
0x1a4 DUP1
0x1a5 MLOAD
0x1a6 PUSH1 0x20
0x1a8 PUSH1 0x1f
0x1aa DUP10
0x1ab CALLDATALOAD
0x1ac DUP12
0x1ad ADD
0x1ae DUP1
0x1af CALLDATALOAD
0x1b0 SWAP2
0x1b1 DUP3
0x1b2 ADD
0x1b3 DUP4
0x1b4 SWAP1
0x1b5 DIV
0x1b6 DUP4
0x1b7 MUL
0x1b8 DUP5
0x1b9 ADD
0x1ba DUP4
0x1bb ADD
0x1bc SWAP1
0x1bd SWAP5
0x1be MSTORE
0x1bf DUP1
0x1c0 DUP4
0x1c1 MSTORE
0x1c2 SWAP8
0x1c3 SWAP11
0x1c4 SWAP10
0x1c5 SWAP9
0x1c6 DUP2
0x1c7 ADD
0x1c8 SWAP8
0x1c9 SWAP2
0x1ca SWAP7
0x1cb POP
0x1cc SWAP2
0x1cd DUP3
0x1ce ADD
0x1cf SWAP5
0x1d0 POP
0x1d1 SWAP3
0x1d2 POP
0x1d3 DUP3
0x1d4 SWAP2
0x1d5 POP
0x1d6 DUP5
0x1d7 ADD
0x1d8 DUP4
0x1d9 DUP3
0x1da DUP1
0x1db DUP3
0x1dc DUP5
0x1dd CALLDATACOPY
0x1de POP
0x1df SWAP5
0x1e0 SWAP8
0x1e1 POP
0x1e2 PUSH2 0x365
0x1e5 SWAP7
0x1e6 POP
0x1e7 POP
0x1e8 POP
0x1e9 POP
0x1ea POP
0x1eb POP
0x1ec POP
0x1ed JUMP
---
0x164: JUMPDEST 
0x165: V102 = 0x40
0x168: V103 = M[0x40]
0x169: V104 = 0x20
0x16b: V105 = 0x4
0x16e: V106 = CALLDATALOAD 0x4
0x171: V107 = ADD 0x4 V106
0x172: V108 = CALLDATALOAD V107
0x173: V109 = 0x1f
0x176: V110 = ADD V108 0x1f
0x179: V111 = DIV V110 0x20
0x17b: V112 = MUL 0x20 V111
0x17d: V113 = ADD V103 V112
0x17f: V114 = ADD 0x20 V113
0x182: M[0x40] = V114
0x185: M[V103] = V108
0x186: V115 = 0x77
0x18a: V116 = CALLDATASIZE
0x18e: V117 = 0x24
0x193: V118 = ADD 0x24 V106
0x199: V119 = ADD V103 0x20
0x19f: CALLDATACOPY V119 V118 V108
0x1a2: V120 = 0x40
0x1a5: V121 = M[0x40]
0x1a6: V122 = 0x20
0x1a8: V123 = 0x1f
0x1ab: V124 = CALLDATALOAD 0x24
0x1ad: V125 = ADD 0x4 V124
0x1af: V126 = CALLDATALOAD V125
0x1b2: V127 = ADD V126 0x1f
0x1b5: V128 = DIV V127 0x20
0x1b7: V129 = MUL 0x20 V128
0x1b9: V130 = ADD V121 V129
0x1bb: V131 = ADD 0x20 V130
0x1be: M[0x40] = V131
0x1c1: M[V121] = V126
0x1c7: V132 = ADD 0x20 0x24
0x1ce: V133 = ADD 0x20 V125
0x1d7: V134 = ADD V121 0x20
0x1dd: CALLDATACOPY V134 V133 V126
0x1e2: V135 = 0x365
0x1ed: JUMP 0x365
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V103, V121]
Exit stack: [V11, 0x77, V103, V121]

================================

Block 0x1ee
[0x1ee:0x1f5]
---
Predecessors: [0x61]
Successors: [0x1f6, 0x1fa]
---
0x1ee JUMPDEST
0x1ef CALLVALUE
0x1f0 DUP1
0x1f1 ISZERO
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V136 = CALLVALUE
0x1f1: V137 = ISZERO V136
0x1f2: V138 = 0x1fa
0x1f5: JUMPI 0x1fa V137
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V136]
Exit stack: [V11, V136]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x1ee]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V139 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V11, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V136]

================================

Block 0x1fa
[0x1fa:0x21b]
---
Predecessors: [0x1ee]
Successors: [0x400]
---
0x1fa JUMPDEST
0x1fb POP
0x1fc PUSH2 0x77
0x1ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x214 PUSH1 0x4
0x216 CALLDATALOAD
0x217 AND
0x218 PUSH2 0x400
0x21b JUMP
---
0x1fa: JUMPDEST 
0x1fc: V140 = 0x77
0x1ff: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x214: V142 = 0x4
0x216: V143 = CALLDATALOAD 0x4
0x217: V144 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x218: V145 = 0x400
0x21b: JUMP 0x400
---
Entry stack: [V11, V136]
Stack pops: 1
Stack additions: [0x77, V144]
Exit stack: [V11, 0x77, V144]

================================

Block 0x21c
[0x21c:0x223]
---
Predecessors: [0x6c]
Successors: [0x459]
---
0x21c JUMPDEST
0x21d PUSH2 0x77
0x220 PUSH2 0x459
0x223 JUMP
---
0x21c: JUMPDEST 
0x21d: V146 = 0x77
0x220: V147 = 0x459
0x223: JUMP 0x459
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x224
[0x224:0x22b]
---
Predecessors: [0x79]
Successors: [0x22c, 0x230]
---
0x224 JUMPDEST
0x225 CALLER
0x226 ORIGIN
0x227 EQ
0x228 PUSH2 0x230
0x22b JUMPI
---
0x224: JUMPDEST 
0x225: V148 = CALLER
0x226: V149 = ORIGIN
0x227: V150 = EQ V149 V148
0x228: V151 = 0x230
0x22b: JUMPI 0x230 V150
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x224]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V152 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x230
[0x230:0x258]
---
Predecessors: [0x224]
Successors: [0x259, 0x265]
---
0x230 JUMPDEST
0x231 DUP2
0x232 DUP2
0x233 PUSH1 0x40
0x235 MLOAD
0x236 DUP1
0x237 DUP4
0x238 DUP4
0x239 DUP1
0x23a DUP3
0x23b DUP5
0x23c CALLDATACOPY
0x23d PUSH1 0x40
0x23f MLOAD
0x240 SWAP3
0x241 ADD
0x242 DUP3
0x243 SWAP1
0x244 SUB
0x245 SWAP1
0x246 SWAP2
0x247 SHA3
0x248 PUSH1 0x2
0x24a SLOAD
0x24b EQ
0x24c SWAP4
0x24d POP
0x24e POP
0x24f DUP3
0x250 ISZERO
0x251 SWAP2
0x252 POP
0x253 PUSH2 0x265
0x256 SWAP1
0x257 POP
0x258 JUMPI
---
0x230: JUMPDEST 
0x233: V153 = 0x40
0x235: V154 = M[0x40]
0x23c: CALLDATACOPY V154 V34 V36
0x23d: V155 = 0x40
0x23f: V156 = M[0x40]
0x241: V157 = ADD V154 V36
0x244: V158 = SUB V157 V156
0x247: V159 = SHA3 V156 V158
0x248: V160 = 0x2
0x24a: V161 = S[0x2]
0x24b: V162 = EQ V161 V159
0x250: V163 = ISZERO V162
0x253: V164 = 0x265
0x258: JUMPI 0x265 V163
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 2
Stack additions: [S1, S0, V162]
Exit stack: [V11, 0x77, V34, V36, V162]

================================

Block 0x259
[0x259:0x264]
---
Predecessors: [0x230]
Successors: [0x265]
---
0x259 POP
0x25a PUSH8 0x29a2241af62c0000
0x263 CALLVALUE
0x264 GT
---
0x25a: V165 = 0x29a2241af62c0000
0x263: V166 = CALLVALUE
0x264: V167 = GT V166 0x29a2241af62c0000
---
Entry stack: [V11, 0x77, V34, V36, V162]
Stack pops: 1
Stack additions: [V167]
Exit stack: [V11, 0x77, V34, V36, V167]

================================

Block 0x265
[0x265:0x26a]
---
Predecessors: [0x230, 0x259]
Successors: [0x26b, 0x299]
---
0x265 JUMPDEST
0x266 ISZERO
0x267 PUSH2 0x299
0x26a JUMPI
---
0x265: JUMPDEST 
0x266: V168 = ISZERO S0
0x267: V169 = 0x299
0x26a: JUMPI 0x299 V168
---
Entry stack: [V11, 0x77, V34, V36, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x26b
[0x26b:0x28d]
---
Predecessors: [0x265]
Successors: [0x28e, 0x297]
---
0x26b PUSH1 0x40
0x26d MLOAD
0x26e CALLER
0x26f SWAP1
0x270 ADDRESS
0x271 BALANCE
0x272 DUP1
0x273 ISZERO
0x274 PUSH2 0x8fc
0x277 MUL
0x278 SWAP2
0x279 PUSH1 0x0
0x27b DUP2
0x27c DUP2
0x27d DUP2
0x27e DUP6
0x27f DUP9
0x280 DUP9
0x281 CALL
0x282 SWAP4
0x283 POP
0x284 POP
0x285 POP
0x286 POP
0x287 ISZERO
0x288 DUP1
0x289 ISZERO
0x28a PUSH2 0x297
0x28d JUMPI
---
0x26b: V170 = 0x40
0x26d: V171 = M[0x40]
0x26e: V172 = CALLER
0x270: V173 = ADDRESS
0x271: V174 = BALANCE V173
0x273: V175 = ISZERO V174
0x274: V176 = 0x8fc
0x277: V177 = MUL 0x8fc V175
0x279: V178 = 0x0
0x281: V179 = CALL V177 V172 V174 V171 0x0 V171 0x0
0x287: V180 = ISZERO V179
0x289: V181 = ISZERO V180
0x28a: V182 = 0x297
0x28d: JUMPI 0x297 V181
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: [V180]
Exit stack: [V11, 0x77, V34, V36, V180]

================================

Block 0x28e
[0x28e:0x296]
---
Predecessors: [0x26b]
Successors: []
---
0x28e RETURNDATASIZE
0x28f PUSH1 0x0
0x291 DUP1
0x292 RETURNDATACOPY
0x293 RETURNDATASIZE
0x294 PUSH1 0x0
0x296 REVERT
---
0x28e: V183 = RETURNDATASIZE
0x28f: V184 = 0x0
0x292: RETURNDATACOPY 0x0 0x0 V183
0x293: V185 = RETURNDATASIZE
0x294: V186 = 0x0
0x296: REVERT 0x0 V185
---
Entry stack: [V11, 0x77, V34, V36, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36, V180]

================================

Block 0x297
[0x297:0x298]
---
Predecessors: [0x26b]
Successors: [0x299]
---
0x297 JUMPDEST
0x298 POP
---
0x297: JUMPDEST 
---
Entry stack: [V11, 0x77, V34, V36, V180]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x299
[0x299:0x29c]
---
Predecessors: [0x265, 0x297, 0x29d, 0x365]
Successors: [0x77]
---
0x299 JUMPDEST
0x29a POP
0x29b POP
0x29c JUMP
---
0x299: JUMPDEST 
0x29c: JUMP 0x77
---
Entry stack: [V11, 0x77, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x29d
[0x29d:0x2bd]
---
Predecessors: [0x8c]
Successors: [0x299, 0x2be]
---
0x29d JUMPDEST
0x29e PUSH1 0x1
0x2a0 SLOAD
0x2a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b6 AND
0x2b7 CALLER
0x2b8 EQ
0x2b9 ISZERO
0x2ba PUSH2 0x299
0x2bd JUMPI
---
0x29d: JUMPDEST 
0x29e: V187 = 0x1
0x2a0: V188 = S[0x1]
0x2a1: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x2b7: V191 = CALLER
0x2b8: V192 = EQ V191 V190
0x2b9: V193 = ISZERO V192
0x2ba: V194 = 0x299
0x2bd: JUMPI 0x299 V193
---
Entry stack: [V11, 0x77, V39, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V39, V56]

================================

Block 0x2be
[0x2be:0x2cf]
---
Predecessors: [0x29d]
Successors: [0x4aa]
---
0x2be DUP2
0x2bf MLOAD
0x2c0 PUSH2 0x2d0
0x2c3 SWAP1
0x2c4 PUSH1 0x0
0x2c6 SWAP1
0x2c7 PUSH1 0x20
0x2c9 DUP6
0x2ca ADD
0x2cb SWAP1
0x2cc PUSH2 0x4aa
0x2cf JUMP
---
0x2bf: V195 = M[V39]
0x2c0: V196 = 0x2d0
0x2c4: V197 = 0x0
0x2c7: V198 = 0x20
0x2ca: V199 = ADD V39 0x20
0x2cc: V200 = 0x4aa
0x2cf: JUMP 0x4aa
---
Entry stack: [V11, 0x77, V39, V56]
Stack pops: 2
Stack additions: [S1, S0, 0x2d0, 0x0, V199, V195]
Exit stack: [V11, 0x77, V39, V56, 0x2d0, 0x0, V199, V195]

================================

Block 0x2d0
[0x2d0:0x2d6]
---
Predecessors: [0x2d0, 0x3dc, 0x524]
Successors: [0x77, 0x2d0, 0x3dc]
---
0x2d0 JUMPDEST
0x2d1 POP
0x2d2 PUSH1 0x2
0x2d4 SSTORE
0x2d5 POP
0x2d6 JUMP
---
0x2d0: JUMPDEST 
0x2d2: V201 = 0x2
0x2d4: S[0x2] = S1
0x2d6: JUMP S3
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, S5, S4]

================================

Block 0x2d7
[0x2d7:0x316]
---
Predecessors: [0xe6]
Successors: [0x317, 0x35d]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db SLOAD
0x2dc PUSH1 0x40
0x2de DUP1
0x2df MLOAD
0x2e0 PUSH1 0x20
0x2e2 PUSH1 0x2
0x2e4 PUSH1 0x1
0x2e6 DUP6
0x2e7 AND
0x2e8 ISZERO
0x2e9 PUSH2 0x100
0x2ec MUL
0x2ed PUSH1 0x0
0x2ef NOT
0x2f0 ADD
0x2f1 SWAP1
0x2f2 SWAP5
0x2f3 AND
0x2f4 SWAP4
0x2f5 SWAP1
0x2f6 SWAP4
0x2f7 DIV
0x2f8 PUSH1 0x1f
0x2fa DUP2
0x2fb ADD
0x2fc DUP5
0x2fd SWAP1
0x2fe DIV
0x2ff DUP5
0x300 MUL
0x301 DUP3
0x302 ADD
0x303 DUP5
0x304 ADD
0x305 SWAP1
0x306 SWAP3
0x307 MSTORE
0x308 DUP2
0x309 DUP2
0x30a MSTORE
0x30b SWAP3
0x30c SWAP2
0x30d DUP4
0x30e ADD
0x30f DUP3
0x310 DUP3
0x311 DUP1
0x312 ISZERO
0x313 PUSH2 0x35d
0x316 JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V202 = 0x0
0x2db: V203 = S[0x0]
0x2dc: V204 = 0x40
0x2df: V205 = M[0x40]
0x2e0: V206 = 0x20
0x2e2: V207 = 0x2
0x2e4: V208 = 0x1
0x2e7: V209 = AND V203 0x1
0x2e8: V210 = ISZERO V209
0x2e9: V211 = 0x100
0x2ec: V212 = MUL 0x100 V210
0x2ed: V213 = 0x0
0x2ef: V214 = NOT 0x0
0x2f0: V215 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V212
0x2f3: V216 = AND V203 V215
0x2f7: V217 = DIV V216 0x2
0x2f8: V218 = 0x1f
0x2fb: V219 = ADD V217 0x1f
0x2fe: V220 = DIV V219 0x20
0x300: V221 = MUL 0x20 V220
0x302: V222 = ADD V205 V221
0x304: V223 = ADD 0x20 V222
0x307: M[0x40] = V223
0x30a: M[V205] = V217
0x30e: V224 = ADD V205 0x20
0x312: V225 = ISZERO V217
0x313: V226 = 0x35d
0x316: JUMPI 0x35d V225
---
Entry stack: [V11, 0xef]
Stack pops: 0
Stack additions: [V205, 0x0, V217, V224, 0x0, V217]
Exit stack: [V11, 0xef, V205, 0x0, V217, V224, 0x0, V217]

================================

Block 0x317
[0x317:0x31e]
---
Predecessors: [0x2d7]
Successors: [0x31f, 0x332]
---
0x317 DUP1
0x318 PUSH1 0x1f
0x31a LT
0x31b PUSH2 0x332
0x31e JUMPI
---
0x318: V227 = 0x1f
0x31a: V228 = LT 0x1f V217
0x31b: V229 = 0x332
0x31e: JUMPI 0x332 V228
---
Entry stack: [V11, 0xef, V205, 0x0, V217, V224, 0x0, V217]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xef, V205, 0x0, V217, V224, 0x0, V217]

================================

Block 0x31f
[0x31f:0x331]
---
Predecessors: [0x317]
Successors: [0x35d]
---
0x31f PUSH2 0x100
0x322 DUP1
0x323 DUP4
0x324 SLOAD
0x325 DIV
0x326 MUL
0x327 DUP4
0x328 MSTORE
0x329 SWAP2
0x32a PUSH1 0x20
0x32c ADD
0x32d SWAP2
0x32e PUSH2 0x35d
0x331 JUMP
---
0x31f: V230 = 0x100
0x324: V231 = S[0x0]
0x325: V232 = DIV V231 0x100
0x326: V233 = MUL V232 0x100
0x328: M[V224] = V233
0x32a: V234 = 0x20
0x32c: V235 = ADD 0x20 V224
0x32e: V236 = 0x35d
0x331: JUMP 0x35d
---
Entry stack: [V11, 0xef, V205, 0x0, V217, V224, 0x0, V217]
Stack pops: 3
Stack additions: [V235, S1, S0]
Exit stack: [V11, 0xef, V205, 0x0, V217, V235, 0x0, V217]

================================

Block 0x332
[0x332:0x33f]
---
Predecessors: [0x317]
Successors: [0x340]
---
0x332 JUMPDEST
0x333 DUP3
0x334 ADD
0x335 SWAP2
0x336 SWAP1
0x337 PUSH1 0x0
0x339 MSTORE
0x33a PUSH1 0x20
0x33c PUSH1 0x0
0x33e SHA3
0x33f SWAP1
---
0x332: JUMPDEST 
0x334: V237 = ADD V224 V217
0x337: V238 = 0x0
0x339: M[0x0] = 0x0
0x33a: V239 = 0x20
0x33c: V240 = 0x0
0x33e: V241 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xef, V205, 0x0, V217, V224, 0x0, V217]
Stack pops: 3
Stack additions: [V237, V241, S2]
Exit stack: [V11, 0xef, V205, 0x0, V217, V237, V241, V224]

================================

Block 0x340
[0x340:0x353]
---
Predecessors: [0x332, 0x340]
Successors: [0x340, 0x354]
---
0x340 JUMPDEST
0x341 DUP2
0x342 SLOAD
0x343 DUP2
0x344 MSTORE
0x345 SWAP1
0x346 PUSH1 0x1
0x348 ADD
0x349 SWAP1
0x34a PUSH1 0x20
0x34c ADD
0x34d DUP1
0x34e DUP4
0x34f GT
0x350 PUSH2 0x340
0x353 JUMPI
---
0x340: JUMPDEST 
0x342: V242 = S[S1]
0x344: M[S0] = V242
0x346: V243 = 0x1
0x348: V244 = ADD 0x1 S1
0x34a: V245 = 0x20
0x34c: V246 = ADD 0x20 S0
0x34f: V247 = GT V237 V246
0x350: V248 = 0x340
0x353: JUMPI 0x340 V247
---
Entry stack: [V11, 0xef, V205, 0x0, V217, V237, S1, S0]
Stack pops: 3
Stack additions: [S2, V244, V246]
Exit stack: [V11, 0xef, V205, 0x0, V217, V237, V244, V246]

================================

Block 0x354
[0x354:0x35c]
---
Predecessors: [0x340]
Successors: [0x35d]
---
0x354 DUP3
0x355 SWAP1
0x356 SUB
0x357 PUSH1 0x1f
0x359 AND
0x35a DUP3
0x35b ADD
0x35c SWAP2
---
0x356: V249 = SUB V246 V237
0x357: V250 = 0x1f
0x359: V251 = AND 0x1f V249
0x35b: V252 = ADD V237 V251
---
Entry stack: [V11, 0xef, V205, 0x0, V217, V237, V244, V246]
Stack pops: 3
Stack additions: [V252, S1, S2]
Exit stack: [V11, 0xef, V205, 0x0, V217, V252, V244, V237]

================================

Block 0x35d
[0x35d:0x364]
---
Predecessors: [0x2d7, 0x31f, 0x354]
Successors: [0xef]
---
0x35d JUMPDEST
0x35e POP
0x35f POP
0x360 POP
0x361 POP
0x362 POP
0x363 DUP2
0x364 JUMP
---
0x35d: JUMPDEST 
0x364: JUMP 0xef
---
Entry stack: [V11, 0xef, V205, 0x0, V217, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xef, V205]

================================

Block 0x365
[0x365:0x36e]
---
Predecessors: [0x164]
Successors: [0x299, 0x36f]
---
0x365 JUMPDEST
0x366 PUSH1 0x2
0x368 SLOAD
0x369 ISZERO
0x36a ISZERO
0x36b PUSH2 0x299
0x36e JUMPI
---
0x365: JUMPDEST 
0x366: V253 = 0x2
0x368: V254 = S[0x2]
0x369: V255 = ISZERO V254
0x36a: V256 = ISZERO V255
0x36b: V257 = 0x299
0x36e: JUMPI 0x299 V256
---
Entry stack: [V11, 0x77, V103, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V103, V121]

================================

Block 0x36f
[0x36f:0x37e]
---
Predecessors: [0x365]
Successors: [0x37f]
---
0x36f DUP1
0x370 PUSH1 0x40
0x372 MLOAD
0x373 DUP1
0x374 DUP3
0x375 DUP1
0x376 MLOAD
0x377 SWAP1
0x378 PUSH1 0x20
0x37a ADD
0x37b SWAP1
0x37c DUP1
0x37d DUP4
0x37e DUP4
---
0x370: V258 = 0x40
0x372: V259 = M[0x40]
0x376: V260 = M[V121]
0x378: V261 = 0x20
0x37a: V262 = ADD 0x20 V121
---
Entry stack: [V11, 0x77, V103, V121]
Stack pops: 1
Stack additions: [S0, S0, V259, V259, V262, V260, V260, V259, V262]
Exit stack: [V11, 0x77, V103, V121, V121, V259, V259, V262, V260, V260, V259, V262]

================================

Block 0x37f
[0x37f:0x387]
---
Predecessors: [0x36f, 0x388]
Successors: [0x388, 0x39e]
---
0x37f JUMPDEST
0x380 PUSH1 0x20
0x382 DUP4
0x383 LT
0x384 PUSH2 0x39e
0x387 JUMPI
---
0x37f: JUMPDEST 
0x380: V263 = 0x20
0x383: V264 = LT S2 0x20
0x384: V265 = 0x39e
0x387: JUMPI 0x39e V264
---
Entry stack: [V11, 0x77, V103, V121, V121, V259, V259, V262, V260, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V103, V121, V121, V259, V259, V262, V260, S2, S1, S0]

================================

Block 0x388
[0x388:0x39d]
---
Predecessors: [0x37f]
Successors: [0x37f]
---
0x388 DUP1
0x389 MLOAD
0x38a DUP3
0x38b MSTORE
0x38c PUSH1 0x1f
0x38e NOT
0x38f SWAP1
0x390 SWAP3
0x391 ADD
0x392 SWAP2
0x393 PUSH1 0x20
0x395 SWAP2
0x396 DUP3
0x397 ADD
0x398 SWAP2
0x399 ADD
0x39a PUSH2 0x37f
0x39d JUMP
---
0x389: V266 = M[S0]
0x38b: M[S1] = V266
0x38c: V267 = 0x1f
0x38e: V268 = NOT 0x1f
0x391: V269 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x393: V270 = 0x20
0x397: V271 = ADD 0x20 S1
0x399: V272 = ADD 0x20 S0
0x39a: V273 = 0x37f
0x39d: JUMP 0x37f
---
Entry stack: [V11, 0x77, V103, V121, V121, V259, V259, V262, V260, S2, S1, S0]
Stack pops: 3
Stack additions: [V269, V271, V272]
Exit stack: [V11, 0x77, V103, V121, V121, V259, V259, V262, V260, V269, V271, V272]

================================

Block 0x39e
[0x39e:0x3db]
---
Predecessors: [0x37f]
Successors: [0x4aa]
---
0x39e JUMPDEST
0x39f MLOAD
0x3a0 DUP2
0x3a1 MLOAD
0x3a2 PUSH1 0x20
0x3a4 SWAP4
0x3a5 DUP5
0x3a6 SUB
0x3a7 PUSH2 0x100
0x3aa EXP
0x3ab PUSH1 0x0
0x3ad NOT
0x3ae ADD
0x3af DUP1
0x3b0 NOT
0x3b1 SWAP1
0x3b2 SWAP3
0x3b3 AND
0x3b4 SWAP2
0x3b5 AND
0x3b6 OR
0x3b7 SWAP1
0x3b8 MSTORE
0x3b9 PUSH1 0x40
0x3bb MLOAD
0x3bc SWAP2
0x3bd SWAP1
0x3be SWAP4
0x3bf ADD
0x3c0 DUP2
0x3c1 SWAP1
0x3c2 SUB
0x3c3 SWAP1
0x3c4 SHA3
0x3c5 PUSH1 0x2
0x3c7 SSTORE
0x3c8 POP
0x3c9 DUP5
0x3ca MLOAD
0x3cb PUSH2 0x3dc
0x3ce SWAP4
0x3cf POP
0x3d0 PUSH1 0x0
0x3d2 SWAP3
0x3d3 POP
0x3d4 SWAP1
0x3d5 DUP6
0x3d6 ADD
0x3d7 SWAP1
0x3d8 PUSH2 0x4aa
0x3db JUMP
---
0x39e: JUMPDEST 
0x39f: V274 = M[S0]
0x3a1: V275 = M[S1]
0x3a2: V276 = 0x20
0x3a6: V277 = SUB 0x20 S2
0x3a7: V278 = 0x100
0x3aa: V279 = EXP 0x100 V277
0x3ab: V280 = 0x0
0x3ad: V281 = NOT 0x0
0x3ae: V282 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V279
0x3b0: V283 = NOT V282
0x3b3: V284 = AND V274 V283
0x3b5: V285 = AND V282 V275
0x3b6: V286 = OR V285 V284
0x3b8: M[S1] = V286
0x3b9: V287 = 0x40
0x3bb: V288 = M[0x40]
0x3bf: V289 = ADD V259 V260
0x3c2: V290 = SUB V289 V288
0x3c4: V291 = SHA3 V288 V290
0x3c5: V292 = 0x2
0x3c7: S[0x2] = V291
0x3ca: V293 = M[V103]
0x3cb: V294 = 0x3dc
0x3d0: V295 = 0x0
0x3d6: V296 = ADD V103 0x20
0x3d8: V297 = 0x4aa
0x3db: JUMP 0x4aa
---
Entry stack: [V11, 0x77, V103, V121, V121, V259, V259, V262, V260, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x3dc, 0x0, V296, V293]
Exit stack: [V11, 0x77, V103, V121, 0x3dc, 0x0, V296, V293]

================================

Block 0x3dc
[0x3dc:0x3ff]
---
Predecessors: [0x2d0, 0x3dc, 0x524]
Successors: [0x77, 0x2d0, 0x3dc]
---
0x3dc JUMPDEST
0x3dd POP
0x3de PUSH1 0x1
0x3e0 DUP1
0x3e1 SLOAD
0x3e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f7 NOT
0x3f8 AND
0x3f9 CALLER
0x3fa OR
0x3fb SWAP1
0x3fc SSTORE
0x3fd POP
0x3fe POP
0x3ff JUMP
---
0x3dc: JUMPDEST 
0x3de: V298 = 0x1
0x3e1: V299 = S[0x1]
0x3e2: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f7: V301 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V302 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V299
0x3f9: V303 = CALLER
0x3fa: V304 = OR V303 V302
0x3fc: S[0x1] = V304
0x3ff: JUMP S3
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, S5, S4]

================================

Block 0x400
[0x400:0x420]
---
Predecessors: [0x1fa]
Successors: [0x421, 0x456]
---
0x400 JUMPDEST
0x401 PUSH1 0x1
0x403 SLOAD
0x404 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x419 AND
0x41a CALLER
0x41b EQ
0x41c ISZERO
0x41d PUSH2 0x456
0x420 JUMPI
---
0x400: JUMPDEST 
0x401: V305 = 0x1
0x403: V306 = S[0x1]
0x404: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x419: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x41a: V309 = CALLER
0x41b: V310 = EQ V309 V308
0x41c: V311 = ISZERO V310
0x41d: V312 = 0x456
0x420: JUMPI 0x456 V311
---
Entry stack: [V11, 0x77, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V144]

================================

Block 0x421
[0x421:0x455]
---
Predecessors: [0x400]
Successors: [0x456]
---
0x421 PUSH1 0x1
0x423 DUP1
0x424 SLOAD
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a NOT
0x43b AND
0x43c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x451 DUP4
0x452 AND
0x453 OR
0x454 SWAP1
0x455 SSTORE
---
0x421: V313 = 0x1
0x424: V314 = S[0x1]
0x425: V315 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V316 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x43b: V317 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V314
0x43c: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x452: V319 = AND V144 0xffffffffffffffffffffffffffffffffffffffff
0x453: V320 = OR V319 V317
0x455: S[0x1] = V320
---
Entry stack: [V11, 0x77, V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V144]

================================

Block 0x456
[0x456:0x458]
---
Predecessors: [0x400, 0x421, 0x47d]
Successors: [0x77]
---
0x456 JUMPDEST
0x457 POP
0x458 JUMP
---
0x456: JUMPDEST 
0x458: JUMP 0x77
---
Entry stack: [V11, 0x77, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x459
[0x459:0x478]
---
Predecessors: [0x21c]
Successors: [0x479, 0x47d]
---
0x459 JUMPDEST
0x45a PUSH1 0x1
0x45c SLOAD
0x45d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x472 AND
0x473 CALLER
0x474 EQ
0x475 PUSH2 0x47d
0x478 JUMPI
---
0x459: JUMPDEST 
0x45a: V321 = 0x1
0x45c: V322 = S[0x1]
0x45d: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x472: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x473: V325 = CALLER
0x474: V326 = EQ V325 V324
0x475: V327 = 0x47d
0x478: JUMPI 0x47d V326
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x479
[0x479:0x47c]
---
Predecessors: [0x459]
Successors: []
---
0x479 PUSH1 0x0
0x47b DUP1
0x47c REVERT
---
0x479: V328 = 0x0
0x47c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x47d
[0x47d:0x4a0]
---
Predecessors: [0x459]
Successors: [0x456, 0x4a1]
---
0x47d JUMPDEST
0x47e PUSH1 0x40
0x480 MLOAD
0x481 CALLER
0x482 SWAP1
0x483 ADDRESS
0x484 BALANCE
0x485 DUP1
0x486 ISZERO
0x487 PUSH2 0x8fc
0x48a MUL
0x48b SWAP2
0x48c PUSH1 0x0
0x48e DUP2
0x48f DUP2
0x490 DUP2
0x491 DUP6
0x492 DUP9
0x493 DUP9
0x494 CALL
0x495 SWAP4
0x496 POP
0x497 POP
0x498 POP
0x499 POP
0x49a ISZERO
0x49b DUP1
0x49c ISZERO
0x49d PUSH2 0x456
0x4a0 JUMPI
---
0x47d: JUMPDEST 
0x47e: V329 = 0x40
0x480: V330 = M[0x40]
0x481: V331 = CALLER
0x483: V332 = ADDRESS
0x484: V333 = BALANCE V332
0x486: V334 = ISZERO V333
0x487: V335 = 0x8fc
0x48a: V336 = MUL 0x8fc V334
0x48c: V337 = 0x0
0x494: V338 = CALL V336 V331 V333 V330 0x0 V330 0x0
0x49a: V339 = ISZERO V338
0x49c: V340 = ISZERO V339
0x49d: V341 = 0x456
0x4a0: JUMPI 0x456 V340
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V339]
Exit stack: [V11, 0x77, V339]

================================

Block 0x4a1
[0x4a1:0x4a9]
---
Predecessors: [0x47d]
Successors: []
---
0x4a1 RETURNDATASIZE
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 RETURNDATACOPY
0x4a6 RETURNDATASIZE
0x4a7 PUSH1 0x0
0x4a9 REVERT
---
0x4a1: V342 = RETURNDATASIZE
0x4a2: V343 = 0x0
0x4a5: RETURNDATACOPY 0x0 0x0 V342
0x4a6: V344 = RETURNDATASIZE
0x4a7: V345 = 0x0
0x4a9: REVERT 0x0 V344
---
Entry stack: [V11, 0x77, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V339]

================================

Block 0x4aa
[0x4aa:0x4da]
---
Predecessors: [0x2be, 0x39e]
Successors: [0x4db, 0x4eb]
---
0x4aa JUMPDEST
0x4ab DUP3
0x4ac DUP1
0x4ad SLOAD
0x4ae PUSH1 0x1
0x4b0 DUP2
0x4b1 PUSH1 0x1
0x4b3 AND
0x4b4 ISZERO
0x4b5 PUSH2 0x100
0x4b8 MUL
0x4b9 SUB
0x4ba AND
0x4bb PUSH1 0x2
0x4bd SWAP1
0x4be DIV
0x4bf SWAP1
0x4c0 PUSH1 0x0
0x4c2 MSTORE
0x4c3 PUSH1 0x20
0x4c5 PUSH1 0x0
0x4c7 SHA3
0x4c8 SWAP1
0x4c9 PUSH1 0x1f
0x4cb ADD
0x4cc PUSH1 0x20
0x4ce SWAP1
0x4cf DIV
0x4d0 DUP2
0x4d1 ADD
0x4d2 SWAP3
0x4d3 DUP3
0x4d4 PUSH1 0x1f
0x4d6 LT
0x4d7 PUSH2 0x4eb
0x4da JUMPI
---
0x4aa: JUMPDEST 
0x4ad: V346 = S[0x0]
0x4ae: V347 = 0x1
0x4b1: V348 = 0x1
0x4b3: V349 = AND 0x1 V346
0x4b4: V350 = ISZERO V349
0x4b5: V351 = 0x100
0x4b8: V352 = MUL 0x100 V350
0x4b9: V353 = SUB V352 0x1
0x4ba: V354 = AND V353 V346
0x4bb: V355 = 0x2
0x4be: V356 = DIV V354 0x2
0x4c0: V357 = 0x0
0x4c2: M[0x0] = 0x0
0x4c3: V358 = 0x20
0x4c5: V359 = 0x0
0x4c7: V360 = SHA3 0x0 0x20
0x4c9: V361 = 0x1f
0x4cb: V362 = ADD 0x1f V356
0x4cc: V363 = 0x20
0x4cf: V364 = DIV V362 0x20
0x4d1: V365 = ADD V360 V364
0x4d4: V366 = 0x1f
0x4d6: V367 = LT 0x1f S0
0x4d7: V368 = 0x4eb
0x4da: JUMPI 0x4eb V367
---
Entry stack: [V11, 0x77, S5, S4, {0x2d0, 0x3dc}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V365, S0, V360, S1]
Exit stack: [V11, 0x77, S5, S4, {0x2d0, 0x3dc}, 0x0, V365, S0, V360, S1]

================================

Block 0x4db
[0x4db:0x4ea]
---
Predecessors: [0x4aa]
Successors: [0x518]
---
0x4db DUP1
0x4dc MLOAD
0x4dd PUSH1 0xff
0x4df NOT
0x4e0 AND
0x4e1 DUP4
0x4e2 DUP1
0x4e3 ADD
0x4e4 OR
0x4e5 DUP6
0x4e6 SSTORE
0x4e7 PUSH2 0x518
0x4ea JUMP
---
0x4dc: V369 = M[S0]
0x4dd: V370 = 0xff
0x4df: V371 = NOT 0xff
0x4e0: V372 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V369
0x4e3: V373 = ADD S2 S2
0x4e4: V374 = OR V373 V372
0x4e6: S[0x0] = V374
0x4e7: V375 = 0x518
0x4ea: JUMP 0x518
---
Entry stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, V365, S2, V360, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, V365, S2, V360, S0]

================================

Block 0x4eb
[0x4eb:0x4f9]
---
Predecessors: [0x4aa]
Successors: [0x4fa, 0x518]
---
0x4eb JUMPDEST
0x4ec DUP3
0x4ed DUP1
0x4ee ADD
0x4ef PUSH1 0x1
0x4f1 ADD
0x4f2 DUP6
0x4f3 SSTORE
0x4f4 DUP3
0x4f5 ISZERO
0x4f6 PUSH2 0x518
0x4f9 JUMPI
---
0x4eb: JUMPDEST 
0x4ee: V376 = ADD S2 S2
0x4ef: V377 = 0x1
0x4f1: V378 = ADD 0x1 V376
0x4f3: S[0x0] = V378
0x4f5: V379 = ISZERO S2
0x4f6: V380 = 0x518
0x4f9: JUMPI 0x518 V379
---
Entry stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, V365, S2, V360, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, V365, S2, V360, S0]

================================

Block 0x4fa
[0x4fa:0x4fc]
---
Predecessors: [0x4eb]
Successors: [0x4fd]
---
0x4fa SWAP2
0x4fb DUP3
0x4fc ADD
---
0x4fc: V381 = ADD S0 S2
---
Entry stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, V365, S2, V360, S0]
Stack pops: 3
Stack additions: [S0, S1, V381]
Exit stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, V365, S0, V360, V381]

================================

Block 0x4fd
[0x4fd:0x505]
---
Predecessors: [0x4fa, 0x506]
Successors: [0x506, 0x518]
---
0x4fd JUMPDEST
0x4fe DUP3
0x4ff DUP2
0x500 GT
0x501 ISZERO
0x502 PUSH2 0x518
0x505 JUMPI
---
0x4fd: JUMPDEST 
0x500: V382 = GT V381 S2
0x501: V383 = ISZERO V382
0x502: V384 = 0x518
0x505: JUMPI 0x518 V383
---
Entry stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, V365, S2, S1, V381]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, V365, S2, S1, V381]

================================

Block 0x506
[0x506:0x517]
---
Predecessors: [0x4fd]
Successors: [0x4fd]
---
0x506 DUP3
0x507 MLOAD
0x508 DUP3
0x509 SSTORE
0x50a SWAP2
0x50b PUSH1 0x20
0x50d ADD
0x50e SWAP2
0x50f SWAP1
0x510 PUSH1 0x1
0x512 ADD
0x513 SWAP1
0x514 PUSH2 0x4fd
0x517 JUMP
---
0x507: V385 = M[S2]
0x509: S[S1] = V385
0x50b: V386 = 0x20
0x50d: V387 = ADD 0x20 S2
0x510: V388 = 0x1
0x512: V389 = ADD 0x1 S1
0x514: V390 = 0x4fd
0x517: JUMP 0x4fd
---
Entry stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, V365, S2, S1, V381]
Stack pops: 3
Stack additions: [V387, V389, S0]
Exit stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, V365, V387, V389, V381]

================================

Block 0x518
[0x518:0x523]
---
Predecessors: [0x4db, 0x4eb, 0x4fd]
Successors: [0x528]
---
0x518 JUMPDEST
0x519 POP
0x51a PUSH2 0x524
0x51d SWAP3
0x51e SWAP2
0x51f POP
0x520 PUSH2 0x528
0x523 JUMP
---
0x518: JUMPDEST 
0x51a: V391 = 0x524
0x520: V392 = 0x528
0x523: JUMP 0x528
---
Entry stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, V365, S2, S1, S0]
Stack pops: 4
Stack additions: [0x524, S3, S1]
Exit stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, 0x524, V365, S1]

================================

Block 0x524
[0x524:0x527]
---
Predecessors: [0x52e, 0x542]
Successors: [0x77, 0x2d0, 0x3dc, 0x542]
---
0x524 JUMPDEST
0x525 POP
0x526 SWAP1
0x527 JUMP
---
0x524: JUMPDEST 
0x527: JUMP {0x77, 0x2d0, 0x3dc, 0x542}
---
Entry stack: [V11, 0x77, S7, S6, {0x77, 0x2d0, 0x3dc}, S4, S3, {0x77, 0x2d0, 0x3dc, 0x542}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x77, S7, S6, {0x77, 0x2d0, 0x3dc}, S4, S3, S1]

================================

Block 0x528
[0x528:0x52d]
---
Predecessors: [0x518]
Successors: [0x52e]
---
0x528 JUMPDEST
0x529 PUSH2 0x542
0x52c SWAP2
0x52d SWAP1
---
0x528: JUMPDEST 
0x529: V393 = 0x542
---
Entry stack: [V11, 0x77, S6, S5, {0x2d0, 0x3dc}, 0x0, 0x524, V365, S0]
Stack pops: 2
Stack additions: [0x542, S1, S0]
Exit stack: [V11, 0x77, S6, S5, {0x2d0, 0x3dc}, 0x0, 0x524, 0x542, V365, S0]

================================

Block 0x52e
[0x52e:0x536]
---
Predecessors: [0x528, 0x537]
Successors: [0x524, 0x537]
---
0x52e JUMPDEST
0x52f DUP1
0x530 DUP3
0x531 GT
0x532 ISZERO
0x533 PUSH2 0x524
0x536 JUMPI
---
0x52e: JUMPDEST 
0x531: V394 = GT V365 S0
0x532: V395 = ISZERO V394
0x533: V396 = 0x524
0x536: JUMPI 0x524 V395
---
Entry stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, 0x524, 0x542, V365, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, 0x524, 0x542, V365, S0]

================================

Block 0x537
[0x537:0x541]
---
Predecessors: [0x52e]
Successors: [0x52e]
---
0x537 PUSH1 0x0
0x539 DUP2
0x53a SSTORE
0x53b PUSH1 0x1
0x53d ADD
0x53e PUSH2 0x52e
0x541 JUMP
---
0x537: V397 = 0x0
0x53a: S[S0] = 0x0
0x53b: V398 = 0x1
0x53d: V399 = ADD 0x1 S0
0x53e: V400 = 0x52e
0x541: JUMP 0x52e
---
Entry stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, 0x524, 0x542, V365, S0]
Stack pops: 1
Stack additions: [V399]
Exit stack: [V11, 0x77, S7, S6, {0x2d0, 0x3dc}, 0x0, 0x524, 0x542, V365, V399]

================================

Block 0x542
[0x542:0x544]
---
Predecessors: [0x524]
Successors: [0x524]
---
0x542 JUMPDEST
0x543 SWAP1
0x544 JUMP
---
0x542: JUMPDEST 
0x544: JUMP S1
---
Entry stack: [V11, 0x77, S5, S4, {0x77, 0x2d0, 0x3dc}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x77, S5, S4, {0x77, 0x2d0, 0x3dc}, S2, S0]

================================

Block 0x545
[0x545:0x583]
---
Predecessors: []
Successors: []
---
0x545 STOP
0x546 LOG1
0x547 PUSH6 0x627a7a723058
0x54e SHA3
0x54f XOR
0x550 PUSH21 0x1c4ba4a073b22eb184e515bbf40ec9f513fb7f2e9e
0x566 MISSING 0xeb
0x567 MISSING 0x48
0x568 MISSING 0xee
0x569 DUP6
0x56a SWAP8
0x56b PUSH24 0xcd472a0029
---
0x545: STOP 
0x546: LOG S0 S1 S2
0x547: V401 = 0x627a7a723058
0x54e: V402 = SHA3 0x627a7a723058 S3
0x54f: V403 = XOR V402 S4
0x550: V404 = 0x1c4ba4a073b22eb184e515bbf40ec9f513fb7f2e9e
0x566: MISSING 0xeb
0x567: MISSING 0x48
0x568: MISSING 0xee
0x56b: V405 = 0xcd472a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1c4ba4a073b22eb184e515bbf40ec9f513fb7f2e9e, V403, 0xcd472a0029, S7, S0, S1, S2, S3, S4, S5, S6, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x3853682c
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x224, 0x22c, 0x230, 0x259, 0x265, 0x26b, 0x28e, 0x297, 0x299

Function 1:
Public function signature: 0x3e3ee859
Entry block: 0x8c
Exit block: 0x77
Body: 0x77, 0x8c, 0x299, 0x29d, 0x2be, 0x2d0, 0x3dc

Function 2:
Public function signature: 0x47247fb2
Entry block: 0xda
Exit block: 0x156
Body: 0xda, 0xe2, 0xe6, 0xef, 0x111, 0x11a, 0x129, 0x13d, 0x156, 0x2d7, 0x317, 0x31f, 0x332, 0x340, 0x354, 0x35d

Function 3:
Public function signature: 0x50d17565
Entry block: 0x164
Exit block: 0x77
Body: 0x77, 0x164, 0x299, 0x2d0, 0x365, 0x36f, 0x37f, 0x388, 0x39e, 0x3dc

Function 4:
Public function signature: 0x59988dce
Entry block: 0x1ee
Exit block: 0x77
Body: 0x77, 0x1ee, 0x1f6, 0x1fa, 0x400, 0x421, 0x456

Function 5:
Public function signature: 0xf50ab247
Entry block: 0x21c
Exit block: 0x77
Body: 0x77, 0x21c, 0x456, 0x459, 0x479, 0x47d, 0x4a1

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x4aa
Exit block: 0x524
Body: 0x4aa, 0x4db, 0x4eb, 0x4fa, 0x4fd, 0x506, 0x518, 0x524, 0x528, 0x52e, 0x537, 0x542

