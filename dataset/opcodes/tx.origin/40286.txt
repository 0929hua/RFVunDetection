Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3defb962
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3defb962
0x3c: V13 = EQ 0x3defb962 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x68]
---
0x41 DUP1
0x42 PUSH4 0xbd66528a
0x47 EQ
0x48 PUSH2 0x68
0x4b JUMPI
---
0x42: V15 = 0xbd66528a
0x47: V16 = EQ 0xbd66528a V11
0x48: V17 = 0x68
0x4b: JUMPI 0x68 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x65]
---
Predecessors: [0x51]
Successors: [0x99]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x66
0x62 PUSH2 0x99
0x65 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x66
0x62: V24 = 0x99
0x65: JUMP 0x99
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x66]
Exit stack: [V11, 0x66]

================================

Block 0x66
[0x66:0x67]
---
Predecessors: [0x132]
Successors: []
---
0x66 JUMPDEST
0x67 STOP
---
0x66: JUMPDEST 
0x67: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x68
[0x68:0x6f]
---
Predecessors: [0x41]
Successors: [0x70, 0x74]
---
0x68 JUMPDEST
0x69 CALLVALUE
0x6a DUP1
0x6b ISZERO
0x6c PUSH2 0x74
0x6f JUMPI
---
0x68: JUMPDEST 
0x69: V25 = CALLVALUE
0x6b: V26 = ISZERO V25
0x6c: V27 = 0x74
0x6f: JUMPI 0x74 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x70
[0x70:0x73]
---
Predecessors: [0x68]
Successors: []
---
0x70 PUSH1 0x0
0x72 DUP1
0x73 REVERT
---
0x70: V28 = 0x0
0x73: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x74
[0x74:0x96]
---
Predecessors: [0x68]
Successors: [0x138]
---
0x74 JUMPDEST
0x75 POP
0x76 PUSH2 0x97
0x79 PUSH1 0x4
0x7b DUP1
0x7c CALLDATASIZE
0x7d SUB
0x7e DUP2
0x7f ADD
0x80 SWAP1
0x81 DUP1
0x82 DUP1
0x83 CALLDATALOAD
0x84 PUSH1 0x0
0x86 NOT
0x87 AND
0x88 SWAP1
0x89 PUSH1 0x20
0x8b ADD
0x8c SWAP1
0x8d SWAP3
0x8e SWAP2
0x8f SWAP1
0x90 POP
0x91 POP
0x92 POP
0x93 PUSH2 0x138
0x96 JUMP
---
0x74: JUMPDEST 
0x76: V29 = 0x97
0x79: V30 = 0x4
0x7c: V31 = CALLDATASIZE
0x7d: V32 = SUB V31 0x4
0x7f: V33 = ADD 0x4 V32
0x83: V34 = CALLDATALOAD 0x4
0x84: V35 = 0x0
0x86: V36 = NOT 0x0
0x87: V37 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V34
0x89: V38 = 0x20
0x8b: V39 = ADD 0x20 0x4
0x93: V40 = 0x138
0x96: JUMP 0x138
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0x97, V37]
Exit stack: [V11, 0x97, V37]

================================

Block 0x97
[0x97:0x98]
---
Predecessors: []
Successors: []
---
0x97 JUMPDEST
0x98 STOP
---
0x97: JUMPDEST 
0x98: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x99
[0x99:0x119]
---
Predecessors: [0x5d]
Successors: [0x11a, 0x11e]
---
0x99 JUMPDEST
0x9a PUSH1 0x0
0x9c DUP1
0x9d SWAP1
0x9e SLOAD
0x9f SWAP1
0xa0 PUSH2 0x100
0xa3 EXP
0xa4 SWAP1
0xa5 DIV
0xa6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb AND
0xbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1 AND
0xd2 PUSH4 0x3defb962
0xd7 PUSH1 0x40
0xd9 MLOAD
0xda DUP2
0xdb PUSH4 0xffffffff
0xe0 AND
0xe1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xff MUL
0x100 DUP2
0x101 MSTORE
0x102 PUSH1 0x4
0x104 ADD
0x105 PUSH1 0x0
0x107 PUSH1 0x40
0x109 MLOAD
0x10a DUP1
0x10b DUP4
0x10c SUB
0x10d DUP2
0x10e PUSH1 0x0
0x110 DUP8
0x111 DUP1
0x112 EXTCODESIZE
0x113 ISZERO
0x114 DUP1
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x99: JUMPDEST 
0x9a: V41 = 0x0
0x9e: V42 = S[0x0]
0xa0: V43 = 0x100
0xa3: V44 = EXP 0x100 0x0
0xa5: V45 = DIV V42 0x1
0xa6: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xbc: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xd2: V50 = 0x3defb962
0xd7: V51 = 0x40
0xd9: V52 = M[0x40]
0xdb: V53 = 0xffffffff
0xe0: V54 = AND 0xffffffff 0x3defb962
0xe1: V55 = 0x100000000000000000000000000000000000000000000000000000000
0xff: V56 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3defb962
0x101: M[V52] = 0x3defb96200000000000000000000000000000000000000000000000000000000
0x102: V57 = 0x4
0x104: V58 = ADD 0x4 V52
0x105: V59 = 0x0
0x107: V60 = 0x40
0x109: V61 = M[0x40]
0x10c: V62 = SUB V58 V61
0x10e: V63 = 0x0
0x112: V64 = EXTCODESIZE V49
0x113: V65 = ISZERO V64
0x115: V66 = ISZERO V65
0x116: V67 = 0x11e
0x119: JUMPI 0x11e V66
---
Entry stack: [V11, 0x66]
Stack pops: 0
Stack additions: [V49, 0x3defb962, V58, 0x0, V61, V62, V61, 0x0, V49, V65]
Exit stack: [V11, 0x66, V49, 0x3defb962, V58, 0x0, V61, V62, V61, 0x0, V49, V65]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x99]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V68 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x66, V49, 0x3defb962, V58, 0x0, V61, V62, V61, 0x0, V49, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66, V49, 0x3defb962, V58, 0x0, V61, V62, V61, 0x0, V49, V65]

================================

Block 0x11e
[0x11e:0x128]
---
Predecessors: [0x99]
Successors: [0x129, 0x132]
---
0x11e JUMPDEST
0x11f POP
0x120 GAS
0x121 CALL
0x122 ISZERO
0x123 DUP1
0x124 ISZERO
0x125 PUSH2 0x132
0x128 JUMPI
---
0x11e: JUMPDEST 
0x120: V69 = GAS
0x121: V70 = CALL V69 V49 0x0 V61 V62 V61 0x0
0x122: V71 = ISZERO V70
0x124: V72 = ISZERO V71
0x125: V73 = 0x132
0x128: JUMPI 0x132 V72
---
Entry stack: [V11, 0x66, V49, 0x3defb962, V58, 0x0, V61, V62, V61, 0x0, V49, V65]
Stack pops: 7
Stack additions: [V71]
Exit stack: [V11, 0x66, V49, 0x3defb962, V58, V71]

================================

Block 0x129
[0x129:0x131]
---
Predecessors: [0x11e]
Successors: []
---
0x129 RETURNDATASIZE
0x12a PUSH1 0x0
0x12c DUP1
0x12d RETURNDATACOPY
0x12e RETURNDATASIZE
0x12f PUSH1 0x0
0x131 REVERT
---
0x129: V74 = RETURNDATASIZE
0x12a: V75 = 0x0
0x12d: RETURNDATACOPY 0x0 0x0 V74
0x12e: V76 = RETURNDATASIZE
0x12f: V77 = 0x0
0x131: REVERT 0x0 V76
---
Entry stack: [V11, 0x66, V49, 0x3defb962, V58, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66, V49, 0x3defb962, V58, V71]

================================

Block 0x132
[0x132:0x137]
---
Predecessors: [0x11e]
Successors: [0x66]
---
0x132 JUMPDEST
0x133 POP
0x134 POP
0x135 POP
0x136 POP
0x137 JUMP
---
0x132: JUMPDEST 
0x137: JUMP 0x66
---
Entry stack: [V11, 0x66, V49, 0x3defb962, V58, V71]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x138
[0x138:0x16d]
---
Predecessors: [0x74]
Successors: [0x16e, 0x172]
---
0x138 JUMPDEST
0x139 ORIGIN
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 CALLER
0x151 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x166 AND
0x167 EQ
0x168 ISZERO
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0x138: JUMPDEST 
0x139: V78 = ORIGIN
0x13a: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x150: V81 = CALLER
0x151: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x166: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x167: V84 = EQ V83 V80
0x168: V85 = ISZERO V84
0x169: V86 = ISZERO V85
0x16a: V87 = 0x172
0x16d: JUMPI 0x172 V86
---
Entry stack: [V11, 0x97, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x97, V37]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x138]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V88 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V11, 0x97, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x97, V37]

================================

Block 0x172
[0x172:0x1a5]
---
Predecessors: [0x138]
Successors: [0x1a6, 0x1aa]
---
0x172 JUMPDEST
0x173 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x194 PUSH3 0xffffff
0x198 AND
0x199 CALLER
0x19a PUSH3 0xffffff
0x19e AND
0x19f EQ
0x1a0 ISZERO
0x1a1 ISZERO
0x1a2 PUSH2 0x1aa
0x1a5 JUMPI
---
0x172: JUMPDEST 
0x173: V89 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x194: V90 = 0xffffff
0x198: V91 = AND 0xffffff 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x199: V92 = CALLER
0x19a: V93 = 0xffffff
0x19e: V94 = AND 0xffffff V92
0x19f: V95 = EQ V94 0xffffff
0x1a0: V96 = ISZERO V95
0x1a1: V97 = ISZERO V96
0x1a2: V98 = 0x1aa
0x1a5: JUMPI 0x1aa V97
---
Entry stack: [V11, 0x97, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x97, V37]

================================

Block 0x1a6
[0x1a6:0x1a9]
---
Predecessors: [0x172]
Successors: []
---
0x1a6 PUSH1 0x0
0x1a8 DUP1
0x1a9 REVERT
---
0x1a6: V99 = 0x0
0x1a9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x97, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x97, V37]

================================

Block 0x1aa
[0x1aa:0x1b2]
---
Predecessors: [0x172]
Successors: [0x1b3]
---
0x1aa JUMPDEST
0x1ab DUP1
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af PUSH1 0x0
0x1b1 SWAP1
0x1b2 POP
---
0x1aa: JUMPDEST 
0x1ac: V100 = 0x0
0x1af: V101 = 0x0
---
Entry stack: [V11, 0x97, V37]
Stack pops: 1
Stack additions: [S0, S0, 0x0, 0x0]
Exit stack: [V11, 0x97, V37, V37, 0x0, 0x0]

================================

Block 0x1b3
[0x1b3:0x1d6]
---
Predecessors: [0x1aa, 0x1e7]
Successors: [0x1d7, 0x1d8]
---
0x1b3 JUMPDEST
0x1b4 PUSH4 0x1000000
0x1b9 CALLER
0x1ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cf AND
0x1d0 DUP2
0x1d1 ISZERO
0x1d2 ISZERO
0x1d3 PUSH2 0x1d8
0x1d6 JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V102 = 0x1000000
0x1b9: V103 = CALLER
0x1ba: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cf: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1d1: V106 = ISZERO 0x1000000
0x1d2: V107 = ISZERO 0x0
0x1d3: V108 = 0x1d8
0x1d6: JUMPI 0x1d8 0x1
---
Entry stack: [V11, 0x97, V37, V37, S1, S0]
Stack pops: 0
Stack additions: [0x1000000, V105]
Exit stack: [V11, 0x97, V37, V37, S1, S0, 0x1000000, V105]

================================

Block 0x1d7
[0x1d7:0x1d7]
---
Predecessors: [0x1b3]
Successors: []
---
0x1d7 INVALID
---
0x1d7: INVALID 
---
Entry stack: [V11, 0x97, V37, V37, S3, S2, 0x1000000, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x97, V37, V37, S3, S2, 0x1000000, V105]

================================

Block 0x1d8
[0x1d8:0x1e6]
---
Predecessors: [0x1b3]
Successors: [0x1e7, 0x1f6]
---
0x1d8 JUMPDEST
0x1d9 DIV
0x1da PUSH1 0xff
0x1dc AND
0x1dd DUP2
0x1de PUSH1 0xff
0x1e0 AND
0x1e1 LT
0x1e2 ISZERO
0x1e3 PUSH2 0x1f6
0x1e6 JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V109 = DIV V105 0x1000000
0x1da: V110 = 0xff
0x1dc: V111 = AND 0xff V109
0x1de: V112 = 0xff
0x1e0: V113 = AND 0xff S2
0x1e1: V114 = LT V113 V111
0x1e2: V115 = ISZERO V114
0x1e3: V116 = 0x1f6
0x1e6: JUMPI 0x1f6 V115
---
Entry stack: [V11, 0x97, V37, V37, S3, S2, 0x1000000, V105]
Stack pops: 3
Stack additions: [S2]
Exit stack: [V11, 0x97, V37, V37, S3, S2]

================================

Block 0x1e7
[0x1e7:0x1f5]
---
Predecessors: [0x1d8]
Successors: [0x1b3]
---
0x1e7 DUP1
0x1e8 SWAP2
0x1e9 POP
0x1ea DUP1
0x1eb DUP1
0x1ec PUSH1 0x1
0x1ee ADD
0x1ef SWAP2
0x1f0 POP
0x1f1 POP
0x1f2 PUSH2 0x1b3
0x1f5 JUMP
---
0x1ec: V117 = 0x1
0x1ee: V118 = ADD 0x1 S0
0x1f2: V119 = 0x1b3
0x1f5: JUMP 0x1b3
---
Entry stack: [V11, 0x97, V37, V37, S1, S0]
Stack pops: 2
Stack additions: [S0, V118]
Exit stack: [V11, 0x97, V37, V37, S0, V118]

================================

Block 0x1f6
[0x1f6:0x25f]
---
Predecessors: [0x1d8]
Successors: [0x260, 0x264]
---
0x1f6 JUMPDEST
0x1f7 CALLER
0x1f8 GAS
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc DUP1
0x1fd DUP4
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a PUSH13 0x1000000000000000000000000
0x238 MUL
0x239 DUP2
0x23a MSTORE
0x23b PUSH1 0x14
0x23d ADD
0x23e DUP3
0x23f DUP2
0x240 MSTORE
0x241 PUSH1 0x20
0x243 ADD
0x244 SWAP3
0x245 POP
0x246 POP
0x247 POP
0x248 PUSH1 0x40
0x24a MLOAD
0x24b DUP1
0x24c SWAP2
0x24d SUB
0x24e SWAP1
0x24f SHA3
0x250 PUSH1 0x0
0x252 NOT
0x253 AND
0x254 DUP4
0x255 PUSH1 0x0
0x257 NOT
0x258 AND
0x259 EQ
0x25a ISZERO
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V120 = CALLER
0x1f8: V121 = GAS
0x1f9: V122 = 0x40
0x1fb: V123 = M[0x40]
0x1fe: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x214: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x22a: V128 = 0x1000000000000000000000000
0x238: V129 = MUL 0x1000000000000000000000000 V127
0x23a: M[V123] = V129
0x23b: V130 = 0x14
0x23d: V131 = ADD 0x14 V123
0x240: M[V131] = V121
0x241: V132 = 0x20
0x243: V133 = ADD 0x20 V131
0x248: V134 = 0x40
0x24a: V135 = M[0x40]
0x24d: V136 = SUB V133 V135
0x24f: V137 = SHA3 V135 V136
0x250: V138 = 0x0
0x252: V139 = NOT 0x0
0x253: V140 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V137
0x255: V141 = 0x0
0x257: V142 = NOT 0x0
0x258: V143 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V37
0x259: V144 = EQ V143 V140
0x25a: V145 = ISZERO V144
0x25b: V146 = ISZERO V145
0x25c: V147 = 0x264
0x25f: JUMPI 0x264 V146
---
Entry stack: [V11, 0x97, V37, V37, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x97, V37, V37, S1, S0]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x1f6]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V148 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V11, 0x97, V37, V37, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x97, V37, V37, S1, S0]

================================

Block 0x264
[0x264:0x31b]
---
Predecessors: [0x1f6]
Successors: [0x31c, 0x320]
---
0x264 JUMPDEST
0x265 PUSH1 0x0
0x267 DUP1
0x268 SWAP1
0x269 SLOAD
0x26a SWAP1
0x26b PUSH2 0x100
0x26e EXP
0x26f SWAP1
0x270 DIV
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 AND
0x287 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29c AND
0x29d PUSH4 0x861080ae
0x2a2 CALLER
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 DUP3
0x2a7 PUSH4 0xffffffff
0x2ac AND
0x2ad PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2cb MUL
0x2cc DUP2
0x2cd MSTORE
0x2ce PUSH1 0x4
0x2d0 ADD
0x2d1 DUP1
0x2d2 DUP3
0x2d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e8 AND
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff DUP2
0x300 MSTORE
0x301 PUSH1 0x20
0x303 ADD
0x304 SWAP2
0x305 POP
0x306 POP
0x307 PUSH1 0x0
0x309 PUSH1 0x40
0x30b MLOAD
0x30c DUP1
0x30d DUP4
0x30e SUB
0x30f DUP2
0x310 PUSH1 0x0
0x312 DUP8
0x313 DUP1
0x314 EXTCODESIZE
0x315 ISZERO
0x316 DUP1
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x264: JUMPDEST 
0x265: V149 = 0x0
0x269: V150 = S[0x0]
0x26b: V151 = 0x100
0x26e: V152 = EXP 0x100 0x0
0x270: V153 = DIV V150 0x1
0x271: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x287: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x29c: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x29d: V158 = 0x861080ae
0x2a2: V159 = CALLER
0x2a3: V160 = 0x40
0x2a5: V161 = M[0x40]
0x2a7: V162 = 0xffffffff
0x2ac: V163 = AND 0xffffffff 0x861080ae
0x2ad: V164 = 0x100000000000000000000000000000000000000000000000000000000
0x2cb: V165 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x861080ae
0x2cd: M[V161] = 0x861080ae00000000000000000000000000000000000000000000000000000000
0x2ce: V166 = 0x4
0x2d0: V167 = ADD 0x4 V161
0x2d3: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e8: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x2e9: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x300: M[V167] = V171
0x301: V172 = 0x20
0x303: V173 = ADD 0x20 V167
0x307: V174 = 0x0
0x309: V175 = 0x40
0x30b: V176 = M[0x40]
0x30e: V177 = SUB V173 V176
0x310: V178 = 0x0
0x314: V179 = EXTCODESIZE V157
0x315: V180 = ISZERO V179
0x317: V181 = ISZERO V180
0x318: V182 = 0x320
0x31b: JUMPI 0x320 V181
---
Entry stack: [V11, 0x97, V37, V37, S1, S0]
Stack pops: 0
Stack additions: [V157, 0x861080ae, V173, 0x0, V176, V177, V176, 0x0, V157, V180]
Exit stack: [V11, 0x97, V37, V37, S1, S0, V157, 0x861080ae, V173, 0x0, V176, V177, V176, 0x0, V157, V180]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x264]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V183 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x97, V37, V37, S11, S10, V157, 0x861080ae, V173, 0x0, V176, V177, V176, 0x0, V157, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x97, V37, V37, S11, S10, V157, 0x861080ae, V173, 0x0, V176, V177, V176, 0x0, V157, V180]

================================

Block 0x320
[0x320:0x32a]
---
Predecessors: [0x264]
Successors: [0x32b, 0x334]
---
0x320 JUMPDEST
0x321 POP
0x322 GAS
0x323 CALL
0x324 ISZERO
0x325 DUP1
0x326 ISZERO
0x327 PUSH2 0x334
0x32a JUMPI
---
0x320: JUMPDEST 
0x322: V184 = GAS
0x323: V185 = CALL V184 V157 0x0 V176 V177 V176 0x0
0x324: V186 = ISZERO V185
0x326: V187 = ISZERO V186
0x327: V188 = 0x334
0x32a: JUMPI 0x334 V187
---
Entry stack: [V11, 0x97, V37, V37, S11, S10, V157, 0x861080ae, V173, 0x0, V176, V177, V176, 0x0, V157, V180]
Stack pops: 7
Stack additions: [V186]
Exit stack: [V11, 0x97, V37, V37, S11, S10, V157, 0x861080ae, V173, V186]

================================

Block 0x32b
[0x32b:0x333]
---
Predecessors: [0x320]
Successors: []
---
0x32b RETURNDATASIZE
0x32c PUSH1 0x0
0x32e DUP1
0x32f RETURNDATACOPY
0x330 RETURNDATASIZE
0x331 PUSH1 0x0
0x333 REVERT
---
0x32b: V189 = RETURNDATASIZE
0x32c: V190 = 0x0
0x32f: RETURNDATACOPY 0x0 0x0 V189
0x330: V191 = RETURNDATASIZE
0x331: V192 = 0x0
0x333: REVERT 0x0 V191
---
Entry stack: [V11, 0x97, V37, V37, S5, S4, V157, 0x861080ae, V173, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x97, V37, V37, S5, S4, V157, 0x861080ae, V173, V186]

================================

Block 0x334
[0x334:0x350]
---
Predecessors: [0x320]
Successors: []
---
0x334 JUMPDEST
0x335 POP
0x336 POP
0x337 POP
0x338 POP
0x339 CALLER
0x33a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34f AND
0x350 SELFDESTRUCT
---
0x334: JUMPDEST 
0x339: V193 = CALLER
0x33a: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x350: SELFDESTRUCT V195
---
Entry stack: [V11, 0x97, V37, V37, S5, S4, V157, 0x861080ae, V173, V186]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x97, V37, V37, S5, S4]

================================

Block 0x351
[0x351:0x386]
---
Predecessors: []
Successors: []
---
0x351 STOP
0x352 LOG1
0x353 PUSH6 0x627a7a723058
0x35a SHA3
0x35b MISSING 0xa6
0x35c MISSING 0x2f
0x35d SWAP6
0x35e MISSING 0x1f
0x35f MISSING 0x2d
0x360 GT
0x361 SELFDESTRUCT
0x362 MISSING 0xd1
0x363 PUSH4 0xb2091bf8
0x368 SHA3
0x369 DUP1
0x36a MISSING 0xa7
0x36b PUSH27 0xeda8769fccf33267cb648e132e94560029
---
0x351: STOP 
0x352: LOG S0 S1 S2
0x353: V196 = 0x627a7a723058
0x35a: V197 = SHA3 0x627a7a723058 S3
0x35b: MISSING 0xa6
0x35c: MISSING 0x2f
0x35e: MISSING 0x1f
0x35f: MISSING 0x2d
0x360: V198 = GT S0 S1
0x361: SELFDESTRUCT V198
0x362: MISSING 0xd1
0x363: V199 = 0xb2091bf8
0x368: V200 = SHA3 0xb2091bf8 S0
0x36a: MISSING 0xa7
0x36b: V201 = 0xeda8769fccf33267cb648e132e94560029
---
Entry stack: []
Stack pops: 0
Stack additions: [V197, S6, S1, S2, S3, S4, S5, S0, V200, V200, 0xeda8769fccf33267cb648e132e94560029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3defb962
Entry block: 0x51
Exit block: 0x66
Body: 0x51, 0x59, 0x5d, 0x66, 0x99, 0x11a, 0x11e, 0x129, 0x132

Function 1:
Public function signature: 0xbd66528a
Entry block: 0x68
Exit block: 0x32b
Body: 0x68, 0x70, 0x74, 0x138, 0x16e, 0x172, 0x1a6, 0x1aa, 0x1b3, 0x1d7, 0x1d8, 0x1e7, 0x1f6, 0x260, 0x264, 0x31c, 0x320, 0x32b, 0x334

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

