Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x6e]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x37354a68
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x6e
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x37354a68
0x3b: V13 = EQ V11 0x37354a68
0x3c: V14 = 0x6e
0x3f: JUMPI 0x6e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x9f]
---
0x40 DUP1
0x41 PUSH4 0x41c0e1b5
0x46 EQ
0x47 PUSH2 0x9f
0x4a JUMPI
---
0x41: V15 = 0x41c0e1b5
0x46: V16 = EQ 0x41c0e1b5 V11
0x47: V17 = 0x9f
0x4a: JUMPI 0x9f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xb2]
---
0x4b DUP1
0x4c PUSH4 0x45e29057
0x51 EQ
0x52 PUSH2 0xb2
0x55 JUMPI
---
0x4c: V18 = 0x45e29057
0x51: V19 = EQ 0x45e29057 V11
0x52: V20 = 0xb2
0x55: JUMPI 0xb2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xc5]
---
0x56 DUP1
0x57 PUSH4 0x80ca7aec
0x5c EQ
0x5d PUSH2 0xc5
0x60 JUMPI
---
0x57: V21 = 0x80ca7aec
0x5c: V22 = EQ 0x80ca7aec V11
0x5d: V23 = 0xc5
0x60: JUMPI 0xc5 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xd8]
---
0x61 DUP1
0x62 PUSH4 0xd11711a2
0x67 EQ
0x68 PUSH2 0xd8
0x6b JUMPI
---
0x62: V24 = 0xd11711a2
0x67: V25 = EQ 0xd11711a2 V11
0x68: V26 = 0xd8
0x6b: JUMPI 0xd8 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x0, 0x61, 0x195, 0x218, 0x2d4]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x6e
[0x6e:0x74]
---
Predecessors: [0xd]
Successors: [0x75, 0x79]
---
0x6e JUMPDEST
0x6f CALLVALUE
0x70 ISZERO
0x71 PUSH2 0x79
0x74 JUMPI
---
0x6e: JUMPDEST 
0x6f: V27 = CALLVALUE
0x70: V28 = ISZERO V27
0x71: V29 = 0x79
0x74: JUMPI 0x79 V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x75
[0x75:0x78]
---
Predecessors: [0x6e]
Successors: []
---
0x75 PUSH1 0x0
0x77 DUP1
0x78 REVERT
---
0x75: V30 = 0x0
0x78: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x8c]
---
Predecessors: [0x6e]
Successors: [0xe0]
---
0x79 JUMPDEST
0x7a PUSH2 0x8d
0x7d PUSH1 0x1
0x7f PUSH1 0xa0
0x81 PUSH1 0x2
0x83 EXP
0x84 SUB
0x85 PUSH1 0x4
0x87 CALLDATALOAD
0x88 AND
0x89 PUSH2 0xe0
0x8c JUMP
---
0x79: JUMPDEST 
0x7a: V31 = 0x8d
0x7d: V32 = 0x1
0x7f: V33 = 0xa0
0x81: V34 = 0x2
0x83: V35 = EXP 0x2 0xa0
0x84: V36 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85: V37 = 0x4
0x87: V38 = CALLDATALOAD 0x4
0x88: V39 = AND V38 0xffffffffffffffffffffffffffffffffffffffff
0x89: V40 = 0xe0
0x8c: JUMP 0xe0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d, V39]
Exit stack: [V11, 0x8d, V39]

================================

Block 0x8d
[0x8d:0x9e]
---
Predecessors: [0x15a, 0x195, 0x2d4]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x40
0x90 MLOAD
0x91 SWAP1
0x92 DUP2
0x93 MSTORE
0x94 PUSH1 0x20
0x96 ADD
0x97 PUSH1 0x40
0x99 MLOAD
0x9a DUP1
0x9b SWAP2
0x9c SUB
0x9d SWAP1
0x9e RETURN
---
0x8d: JUMPDEST 
0x8e: V41 = 0x40
0x90: V42 = M[0x40]
0x93: M[V42] = S0
0x94: V43 = 0x20
0x96: V44 = ADD 0x20 V42
0x97: V45 = 0x40
0x99: V46 = M[0x40]
0x9c: V47 = SUB V44 V46
0x9e: RETURN V46 V47
---
Entry stack: [V11, {0x6c, 0x8d}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0x6c, 0x8d}, S1]

================================

Block 0x9f
[0x9f:0xa5]
---
Predecessors: [0x40]
Successors: [0xa6, 0xaa]
---
0x9f JUMPDEST
0xa0 CALLVALUE
0xa1 ISZERO
0xa2 PUSH2 0xaa
0xa5 JUMPI
---
0x9f: JUMPDEST 
0xa0: V48 = CALLVALUE
0xa1: V49 = ISZERO V48
0xa2: V50 = 0xaa
0xa5: JUMPI 0xaa V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa6
[0xa6:0xa9]
---
Predecessors: [0x9f]
Successors: []
---
0xa6 PUSH1 0x0
0xa8 DUP1
0xa9 REVERT
---
0xa6: V51 = 0x0
0xa9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaa
[0xaa:0xb1]
---
Predecessors: [0x9f]
Successors: [0x161]
---
0xaa JUMPDEST
0xab PUSH2 0x6c
0xae PUSH2 0x161
0xb1 JUMP
---
0xaa: JUMPDEST 
0xab: V52 = 0x6c
0xae: V53 = 0x161
0xb1: JUMP 0x161
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0xb2
[0xb2:0xb8]
---
Predecessors: [0x4b]
Successors: [0xb9, 0xbd]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xb2: JUMPDEST 
0xb3: V54 = CALLVALUE
0xb4: V55 = ISZERO V54
0xb5: V56 = 0xbd
0xb8: JUMPI 0xbd V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xb2]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V57 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbd
[0xbd:0xc4]
---
Predecessors: [0xb2]
Successors: [0x18a]
---
0xbd JUMPDEST
0xbe PUSH2 0x8d
0xc1 PUSH2 0x18a
0xc4 JUMP
---
0xbd: JUMPDEST 
0xbe: V58 = 0x8d
0xc1: V59 = 0x18a
0xc4: JUMP 0x18a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0xc5
[0xc5:0xcb]
---
Predecessors: [0x56]
Successors: [0xcc, 0xd0]
---
0xc5 JUMPDEST
0xc6 CALLVALUE
0xc7 ISZERO
0xc8 PUSH2 0xd0
0xcb JUMPI
---
0xc5: JUMPDEST 
0xc6: V60 = CALLVALUE
0xc7: V61 = ISZERO V60
0xc8: V62 = 0xd0
0xcb: JUMPI 0xd0 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcc
[0xcc:0xcf]
---
Predecessors: [0xc5]
Successors: []
---
0xcc PUSH1 0x0
0xce DUP1
0xcf REVERT
---
0xcc: V63 = 0x0
0xcf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xd7]
---
Predecessors: [0xc5]
Successors: [0x19a]
---
0xd0 JUMPDEST
0xd1 PUSH2 0x6c
0xd4 PUSH2 0x19a
0xd7 JUMP
---
0xd0: JUMPDEST 
0xd1: V64 = 0x6c
0xd4: V65 = 0x19a
0xd7: JUMP 0x19a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0xd8
[0xd8:0xdf]
---
Predecessors: [0x61]
Successors: [0x21b]
---
0xd8 JUMPDEST
0xd9 PUSH2 0x6c
0xdc PUSH2 0x21b
0xdf JUMP
---
0xd8: JUMPDEST 
0xd9: V66 = 0x6c
0xdc: V67 = 0x21b
0xdf: JUMP 0x21b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0xe0
[0xe0:0x158]
---
Predecessors: [0x79, 0x18a, 0x275]
Successors: [0x159, 0x15a]
---
0xe0 JUMPDEST
0xe1 PUSH1 0x0
0xe3 PUSH1 0x8
0xe5 DUP3
0xe6 PUSH1 0x1
0xe8 PUSH1 0xa0
0xea PUSH1 0x2
0xec EXP
0xed SUB
0xee AND
0xef PUSH1 0x1
0xf1 SLOAD
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 SWAP2
0xf6 DUP3
0xf7 MSTORE
0xf8 PUSH1 0x20
0xfa DUP3
0xfb ADD
0xfc MSTORE
0xfd PUSH1 0x40
0xff SWAP1
0x100 DUP2
0x101 ADD
0x102 SWAP1
0x103 MLOAD
0x104 SWAP1
0x105 DUP2
0x106 SWAP1
0x107 SUB
0x108 SWAP1
0x109 SHA3
0x10a PUSH1 0x0
0x10c BYTE
0x10d PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x12e MUL
0x12f PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x150 SWAP1
0x151 DIV
0x152 DUP2
0x153 ISZERO
0x154 ISZERO
0x155 PUSH2 0x15a
0x158 JUMPI
---
0xe0: JUMPDEST 
0xe1: V68 = 0x0
0xe3: V69 = 0x8
0xe6: V70 = 0x1
0xe8: V71 = 0xa0
0xea: V72 = 0x2
0xec: V73 = EXP 0x2 0xa0
0xed: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xef: V76 = 0x1
0xf1: V77 = S[0x1]
0xf2: V78 = 0x40
0xf4: V79 = M[0x40]
0xf7: M[V79] = V75
0xf8: V80 = 0x20
0xfb: V81 = ADD V79 0x20
0xfc: M[V81] = V77
0xfd: V82 = 0x40
0x101: V83 = ADD 0x40 V79
0x103: V84 = M[0x40]
0x107: V85 = SUB V83 V84
0x109: V86 = SHA3 V84 V85
0x10a: V87 = 0x0
0x10c: V88 = BYTE 0x0 V86
0x10d: V89 = 0x100000000000000000000000000000000000000000000000000000000000000
0x12e: V90 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V88
0x12f: V91 = 0x100000000000000000000000000000000000000000000000000000000000000
0x151: V92 = DIV V90 0x100000000000000000000000000000000000000000000000000000000000000
0x153: V93 = ISZERO 0x8
0x154: V94 = ISZERO 0x0
0x155: V95 = 0x15a
0x158: JUMPI 0x15a 0x1
---
Entry stack: [V11, {0x6c, 0x8d}, S2, {0x8d, 0x195, 0x281}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x8, V92]
Exit stack: [V11, {0x6c, 0x8d}, S2, {0x8d, 0x195, 0x281}, S0, 0x0, 0x8, V92]

================================

Block 0x159
[0x159:0x159]
---
Predecessors: [0xe0]
Successors: []
---
0x159 INVALID
---
0x159: INVALID 
---
Entry stack: [V11, {0x6c, 0x8d}, S5, {0x8d, 0x195, 0x281}, S3, 0x0, 0x8, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6c, 0x8d}, S5, {0x8d, 0x195, 0x281}, S3, 0x0, 0x8, V92]

================================

Block 0x15a
[0x15a:0x160]
---
Predecessors: [0xe0]
Successors: [0x8d, 0x195, 0x281]
---
0x15a JUMPDEST
0x15b MOD
0x15c SWAP3
0x15d SWAP2
0x15e POP
0x15f POP
0x160 JUMP
---
0x15a: JUMPDEST 
0x15b: V96 = MOD V92 0x8
0x160: JUMP {0x8d, 0x195, 0x281}
---
Entry stack: [V11, {0x6c, 0x8d}, S5, {0x8d, 0x195, 0x281}, S3, 0x0, 0x8, V92]
Stack pops: 5
Stack additions: [V96]
Exit stack: [V11, {0x6c, 0x8d}, S5, V96]

================================

Block 0x161
[0x161:0x177]
---
Predecessors: [0xaa]
Successors: [0x178, 0x17c]
---
0x161 JUMPDEST
0x162 PUSH1 0x0
0x164 SLOAD
0x165 CALLER
0x166 PUSH1 0x1
0x168 PUSH1 0xa0
0x16a PUSH1 0x2
0x16c EXP
0x16d SUB
0x16e SWAP1
0x16f DUP2
0x170 AND
0x171 SWAP2
0x172 AND
0x173 EQ
0x174 PUSH2 0x17c
0x177 JUMPI
---
0x161: JUMPDEST 
0x162: V97 = 0x0
0x164: V98 = S[0x0]
0x165: V99 = CALLER
0x166: V100 = 0x1
0x168: V101 = 0xa0
0x16a: V102 = 0x2
0x16c: V103 = EXP 0x2 0xa0
0x16d: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x170: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x172: V106 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x173: V107 = EQ V106 V105
0x174: V108 = 0x17c
0x177: JUMPI 0x17c V107
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x178
[0x178:0x17b]
---
Predecessors: [0x161]
Successors: []
---
0x178 PUSH1 0x0
0x17a DUP1
0x17b REVERT
---
0x178: V109 = 0x0
0x17b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x17c
[0x17c:0x189]
---
Predecessors: [0x161]
Successors: []
---
0x17c JUMPDEST
0x17d PUSH1 0x0
0x17f SLOAD
0x180 PUSH1 0x1
0x182 PUSH1 0xa0
0x184 PUSH1 0x2
0x186 EXP
0x187 SUB
0x188 AND
0x189 SELFDESTRUCT
---
0x17c: JUMPDEST 
0x17d: V110 = 0x0
0x17f: V111 = S[0x0]
0x180: V112 = 0x1
0x182: V113 = 0xa0
0x184: V114 = 0x2
0x186: V115 = EXP 0x2 0xa0
0x187: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x188: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x189: SELFDESTRUCT V117
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x18a
[0x18a:0x194]
---
Predecessors: [0xbd]
Successors: [0xe0]
---
0x18a JUMPDEST
0x18b PUSH1 0x0
0x18d PUSH2 0x195
0x190 CALLER
0x191 PUSH2 0xe0
0x194 JUMP
---
0x18a: JUMPDEST 
0x18b: V118 = 0x0
0x18d: V119 = 0x195
0x190: V120 = CALLER
0x191: V121 = 0xe0
0x194: JUMP 0xe0
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [0x0, 0x195, V120]
Exit stack: [V11, 0x8d, 0x0, 0x195, V120]

================================

Block 0x195
[0x195:0x199]
---
Predecessors: [0x15a]
Successors: [0x6c, 0x8d]
---
0x195 JUMPDEST
0x196 SWAP1
0x197 POP
0x198 SWAP1
0x199 JUMP
---
0x195: JUMPDEST 
0x199: JUMP {0x6c, 0x8d}
---
Entry stack: [V11, {0x6c, 0x8d}, S1, V96]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, V96]

================================

Block 0x19a
[0x19a:0x1b1]
---
Predecessors: [0xd0]
Successors: [0x1b2, 0x1b6]
---
0x19a JUMPDEST
0x19b PUSH1 0x0
0x19d DUP1
0x19e SLOAD
0x19f CALLER
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 SWAP1
0x1a9 DUP2
0x1aa AND
0x1ab SWAP2
0x1ac AND
0x1ad EQ
0x1ae PUSH2 0x1b6
0x1b1 JUMPI
---
0x19a: JUMPDEST 
0x19b: V122 = 0x0
0x19e: V123 = S[0x0]
0x19f: V124 = CALLER
0x1a0: V125 = 0x1
0x1a2: V126 = 0xa0
0x1a4: V127 = 0x2
0x1a6: V128 = EXP 0x2 0xa0
0x1a7: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1aa: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x1ac: V131 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V132 = EQ V131 V130
0x1ae: V133 = 0x1b6
0x1b1: JUMPI 0x1b6 V132
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x6c, 0x0]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x19a]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V134 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, 0x0]

================================

Block 0x1b6
[0x1b6:0x217]
---
Predecessors: [0x19a]
Successors: [0x2d6]
---
0x1b6 JUMPDEST
0x1b7 CALLER
0x1b8 PUSH1 0x1
0x1ba PUSH1 0xa0
0x1bc PUSH1 0x2
0x1be EXP
0x1bf SUB
0x1c0 AND
0x1c1 DUP2
0x1c2 SSTORE
0x1c3 NUMBER
0x1c4 PUSH1 0x0
0x1c6 NOT
0x1c7 DUP2
0x1c8 ADD
0x1c9 BLOCKHASH
0x1ca PUSH1 0x1
0x1cc DUP4
0x1cd ADD
0x1ce SSTORE
0x1cf PUSH2 0x539
0x1d2 MUL
0x1d3 PUSH1 0x2
0x1d5 DUP3
0x1d6 ADD
0x1d7 SSTORE
0x1d8 GASPRICE
0x1d9 PUSH1 0x7
0x1db MUL
0x1dc PUSH1 0x3
0x1de DUP3
0x1df ADD
0x1e0 SSTORE
0x1e1 PUSH2 0x218
0x1e4 DUP2
0x1e5 PUSH1 0x80
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea SWAP1
0x1eb DUP2
0x1ec ADD
0x1ed PUSH1 0x40
0x1ef SWAP1
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 DUP3
0x1f3 SLOAD
0x1f4 DUP3
0x1f5 MSTORE
0x1f6 PUSH1 0x1
0x1f8 DUP4
0x1f9 ADD
0x1fa SLOAD
0x1fb PUSH1 0x20
0x1fd DUP4
0x1fe ADD
0x1ff MSTORE
0x200 PUSH1 0x2
0x202 DUP4
0x203 ADD
0x204 SLOAD
0x205 SWAP1
0x206 DUP3
0x207 ADD
0x208 MSTORE
0x209 PUSH1 0x3
0x20b SWAP1
0x20c SWAP2
0x20d ADD
0x20e SLOAD
0x20f PUSH1 0x60
0x211 DUP3
0x212 ADD
0x213 MSTORE
0x214 PUSH2 0x2d6
0x217 JUMP
---
0x1b6: JUMPDEST 
0x1b7: V135 = CALLER
0x1b8: V136 = 0x1
0x1ba: V137 = 0xa0
0x1bc: V138 = 0x2
0x1be: V139 = EXP 0x2 0xa0
0x1bf: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c0: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x1c2: S[0x0] = V141
0x1c3: V142 = NUMBER
0x1c4: V143 = 0x0
0x1c6: V144 = NOT 0x0
0x1c8: V145 = ADD V142 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1c9: V146 = BLOCKHASH V145
0x1ca: V147 = 0x1
0x1cd: V148 = ADD 0x0 0x1
0x1ce: S[0x1] = V146
0x1cf: V149 = 0x539
0x1d2: V150 = MUL 0x539 V142
0x1d3: V151 = 0x2
0x1d6: V152 = ADD 0x0 0x2
0x1d7: S[0x2] = V150
0x1d8: V153 = GASPRICE
0x1d9: V154 = 0x7
0x1db: V155 = MUL 0x7 V153
0x1dc: V156 = 0x3
0x1df: V157 = ADD 0x0 0x3
0x1e0: S[0x3] = V155
0x1e1: V158 = 0x218
0x1e5: V159 = 0x80
0x1e7: V160 = 0x40
0x1e9: V161 = M[0x40]
0x1ec: V162 = ADD V161 0x80
0x1ed: V163 = 0x40
0x1f1: M[0x40] = V162
0x1f3: V164 = S[0x0]
0x1f5: M[V161] = V164
0x1f6: V165 = 0x1
0x1f9: V166 = ADD 0x0 0x1
0x1fa: V167 = S[0x1]
0x1fb: V168 = 0x20
0x1fe: V169 = ADD V161 0x20
0x1ff: M[V169] = V167
0x200: V170 = 0x2
0x203: V171 = ADD 0x0 0x2
0x204: V172 = S[0x2]
0x207: V173 = ADD V161 0x40
0x208: M[V173] = V172
0x209: V174 = 0x3
0x20d: V175 = ADD 0x0 0x3
0x20e: V176 = S[0x3]
0x20f: V177 = 0x60
0x212: V178 = ADD V161 0x60
0x213: M[V178] = V176
0x214: V179 = 0x2d6
0x217: JUMP 0x2d6
---
Entry stack: [V11, 0x6c, 0x0]
Stack pops: 1
Stack additions: [S0, 0x218, V161]
Exit stack: [V11, 0x6c, 0x0, 0x218, V161]

================================

Block 0x218
[0x218:0x21a]
---
Predecessors: [0x2d6]
Successors: [0x6c]
---
0x218 JUMPDEST
0x219 POP
0x21a JUMP
---
0x218: JUMPDEST 
0x21a: JUMP 0x6c
---
Entry stack: [V11, 0x6c, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x21b
[0x21b:0x236]
---
Predecessors: [0xd8]
Successors: [0x237, 0x23b]
---
0x21b JUMPDEST
0x21c ORIGIN
0x21d PUSH1 0x1
0x21f PUSH1 0xa0
0x221 PUSH1 0x2
0x223 EXP
0x224 SUB
0x225 AND
0x226 CALLER
0x227 PUSH1 0x1
0x229 PUSH1 0xa0
0x22b PUSH1 0x2
0x22d EXP
0x22e SUB
0x22f AND
0x230 EQ
0x231 ISZERO
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x21b: JUMPDEST 
0x21c: V180 = ORIGIN
0x21d: V181 = 0x1
0x21f: V182 = 0xa0
0x221: V183 = 0x2
0x223: V184 = EXP 0x2 0xa0
0x224: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x225: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x226: V187 = CALLER
0x227: V188 = 0x1
0x229: V189 = 0xa0
0x22b: V190 = 0x2
0x22d: V191 = EXP 0x2 0xa0
0x22e: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22f: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x230: V194 = EQ V193 V186
0x231: V195 = ISZERO V194
0x232: V196 = ISZERO V195
0x233: V197 = 0x23b
0x236: JUMPI 0x23b V196
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x21b]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V198 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x23b
[0x23b:0x24a]
---
Predecessors: [0x21b]
Successors: [0x24b, 0x24f]
---
0x23b JUMPDEST
0x23c PUSH8 0x16345785d8a0000
0x245 CALLVALUE
0x246 EQ
0x247 PUSH2 0x24f
0x24a JUMPI
---
0x23b: JUMPDEST 
0x23c: V199 = 0x16345785d8a0000
0x245: V200 = CALLVALUE
0x246: V201 = EQ V200 0x16345785d8a0000
0x247: V202 = 0x24f
0x24a: JUMPI 0x24f V201
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x24b
[0x24b:0x24e]
---
Predecessors: [0x23b]
Successors: []
---
0x24b PUSH1 0x0
0x24d DUP1
0x24e REVERT
---
0x24b: V203 = 0x0
0x24e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x24f
[0x24f:0x270]
---
Predecessors: [0x23b]
Successors: [0x271, 0x275]
---
0x24f JUMPDEST
0x250 PUSH1 0x1
0x252 PUSH1 0xa0
0x254 PUSH1 0x2
0x256 EXP
0x257 SUB
0x258 CALLER
0x259 AND
0x25a PUSH1 0x0
0x25c SWAP1
0x25d DUP2
0x25e MSTORE
0x25f PUSH1 0x4
0x261 PUSH1 0x20
0x263 MSTORE
0x264 PUSH1 0x40
0x266 SWAP1
0x267 SHA3
0x268 SLOAD
0x269 PUSH1 0xff
0x26b AND
0x26c ISZERO
0x26d PUSH2 0x275
0x270 JUMPI
---
0x24f: JUMPDEST 
0x250: V204 = 0x1
0x252: V205 = 0xa0
0x254: V206 = 0x2
0x256: V207 = EXP 0x2 0xa0
0x257: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x258: V209 = CALLER
0x259: V210 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V211 = 0x0
0x25e: M[0x0] = V210
0x25f: V212 = 0x4
0x261: V213 = 0x20
0x263: M[0x20] = 0x4
0x264: V214 = 0x40
0x267: V215 = SHA3 0x0 0x40
0x268: V216 = S[V215]
0x269: V217 = 0xff
0x26b: V218 = AND 0xff V216
0x26c: V219 = ISZERO V218
0x26d: V220 = 0x275
0x270: JUMPI 0x275 V219
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x271
[0x271:0x274]
---
Predecessors: [0x24f]
Successors: []
---
0x271 PUSH1 0x0
0x273 DUP1
0x274 REVERT
---
0x271: V221 = 0x0
0x274: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x275
[0x275:0x280]
---
Predecessors: [0x24f]
Successors: [0xe0]
---
0x275 JUMPDEST
0x276 PUSH1 0x3
0x278 SLOAD
0x279 PUSH2 0x281
0x27c CALLER
0x27d PUSH2 0xe0
0x280 JUMP
---
0x275: JUMPDEST 
0x276: V222 = 0x3
0x278: V223 = S[0x3]
0x279: V224 = 0x281
0x27c: V225 = CALLER
0x27d: V226 = 0xe0
0x280: JUMP 0xe0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: [V223, 0x281, V225]
Exit stack: [V11, 0x6c, V223, 0x281, V225]

================================

Block 0x281
[0x281:0x287]
---
Predecessors: [0x15a]
Successors: [0x288, 0x2d4]
---
0x281 JUMPDEST
0x282 EQ
0x283 ISZERO
0x284 PUSH2 0x2d4
0x287 JUMPI
---
0x281: JUMPDEST 
0x282: V227 = EQ V96 S1
0x283: V228 = ISZERO V227
0x284: V229 = 0x2d4
0x287: JUMPI 0x2d4 V228
---
Entry stack: [V11, {0x6c, 0x8d}, S1, V96]
Stack pops: 2
Stack additions: []
Exit stack: [V11, {0x6c, 0x8d}]

================================

Block 0x288
[0x288:0x2cf]
---
Predecessors: [0x281]
Successors: [0x2d0, 0x2d4]
---
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 CALLER
0x291 DUP2
0x292 AND
0x293 PUSH1 0x0
0x295 DUP2
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x4
0x29a PUSH1 0x20
0x29c MSTORE
0x29d PUSH1 0x40
0x29f SWAP1
0x2a0 DUP2
0x2a1 SWAP1
0x2a2 SHA3
0x2a3 DUP1
0x2a4 SLOAD
0x2a5 PUSH1 0xff
0x2a7 NOT
0x2a8 AND
0x2a9 PUSH1 0x1
0x2ab OR
0x2ac SWAP1
0x2ad SSTORE
0x2ae SWAP1
0x2af SWAP2
0x2b0 ADDRESS
0x2b1 AND
0x2b2 BALANCE
0x2b3 SWAP1
0x2b4 MLOAD
0x2b5 PUSH1 0x0
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba DUP1
0x2bb DUP4
0x2bc SUB
0x2bd DUP2
0x2be DUP6
0x2bf DUP8
0x2c0 PUSH2 0x8796
0x2c3 GAS
0x2c4 SUB
0x2c5 CALL
0x2c6 SWAP3
0x2c7 POP
0x2c8 POP
0x2c9 POP
0x2ca ISZERO
0x2cb ISZERO
0x2cc PUSH2 0x2d4
0x2cf JUMPI
---
0x288: V230 = 0x1
0x28a: V231 = 0xa0
0x28c: V232 = 0x2
0x28e: V233 = EXP 0x2 0xa0
0x28f: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V235 = CALLER
0x292: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x293: V237 = 0x0
0x297: M[0x0] = V236
0x298: V238 = 0x4
0x29a: V239 = 0x20
0x29c: M[0x20] = 0x4
0x29d: V240 = 0x40
0x2a2: V241 = SHA3 0x0 0x40
0x2a4: V242 = S[V241]
0x2a5: V243 = 0xff
0x2a7: V244 = NOT 0xff
0x2a8: V245 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V242
0x2a9: V246 = 0x1
0x2ab: V247 = OR 0x1 V245
0x2ad: S[V241] = V247
0x2b0: V248 = ADDRESS
0x2b1: V249 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x2b2: V250 = BALANCE V249
0x2b4: V251 = M[0x40]
0x2b5: V252 = 0x0
0x2b7: V253 = 0x40
0x2b9: V254 = M[0x40]
0x2bc: V255 = SUB V251 V254
0x2c0: V256 = 0x8796
0x2c3: V257 = GAS
0x2c4: V258 = SUB V257 0x8796
0x2c5: V259 = CALL V258 V236 V250 V254 V255 V254 0x0
0x2ca: V260 = ISZERO V259
0x2cb: V261 = ISZERO V260
0x2cc: V262 = 0x2d4
0x2cf: JUMPI 0x2d4 V261
---
Entry stack: [V11, {0x6c, 0x8d}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6c, 0x8d}]

================================

Block 0x2d0
[0x2d0:0x2d3]
---
Predecessors: [0x288]
Successors: []
---
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 REVERT
---
0x2d0: V263 = 0x0
0x2d3: REVERT 0x0 0x0
---
Entry stack: [V11, {0x6c, 0x8d}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6c, 0x8d}]

================================

Block 0x2d4
[0x2d4:0x2d5]
---
Predecessors: [0x281, 0x288]
Successors: [0x6c, 0x8d]
---
0x2d4 JUMPDEST
0x2d5 JUMP
---
0x2d4: JUMPDEST 
0x2d5: JUMP {0x6c, 0x8d}
---
Entry stack: [V11, {0x6c, 0x8d}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d6
[0x2d6:0x31b]
---
Predecessors: [0x1b6]
Successors: [0x218]
---
0x2d6 JUMPDEST
0x2d7 DUP1
0x2d8 MLOAD
0x2d9 DUP2
0x2da PUSH1 0x20
0x2dc ADD
0x2dd MLOAD
0x2de DUP3
0x2df PUSH1 0x40
0x2e1 ADD
0x2e2 MLOAD
0x2e3 DUP4
0x2e4 PUSH1 0x60
0x2e6 ADD
0x2e7 MLOAD
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec DUP6
0x2ed DUP2
0x2ee MSTORE
0x2ef PUSH1 0x20
0x2f1 ADD
0x2f2 DUP5
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 DUP4
0x2f9 DUP2
0x2fa MSTORE
0x2fb PUSH1 0x20
0x2fd ADD
0x2fe DUP3
0x2ff DUP2
0x300 MSTORE
0x301 PUSH1 0x20
0x303 ADD
0x304 SWAP5
0x305 POP
0x306 POP
0x307 POP
0x308 POP
0x309 POP
0x30a PUSH1 0x40
0x30c MLOAD
0x30d SWAP1
0x30e DUP2
0x30f SWAP1
0x310 SUB
0x311 SWAP1
0x312 SHA3
0x313 PUSH1 0x1
0x315 SSTORE
0x316 POP
0x317 NUMBER
0x318 PUSH1 0x2
0x31a SSTORE
0x31b JUMP
---
0x2d6: JUMPDEST 
0x2d8: V264 = M[V161]
0x2da: V265 = 0x20
0x2dc: V266 = ADD 0x20 V161
0x2dd: V267 = M[V266]
0x2df: V268 = 0x40
0x2e1: V269 = ADD 0x40 V161
0x2e2: V270 = M[V269]
0x2e4: V271 = 0x60
0x2e6: V272 = ADD 0x60 V161
0x2e7: V273 = M[V272]
0x2e8: V274 = 0x40
0x2ea: V275 = M[0x40]
0x2ee: M[V275] = V264
0x2ef: V276 = 0x20
0x2f1: V277 = ADD 0x20 V275
0x2f4: M[V277] = V267
0x2f5: V278 = 0x20
0x2f7: V279 = ADD 0x20 V277
0x2fa: M[V279] = V270
0x2fb: V280 = 0x20
0x2fd: V281 = ADD 0x20 V279
0x300: M[V281] = V273
0x301: V282 = 0x20
0x303: V283 = ADD 0x20 V281
0x30a: V284 = 0x40
0x30c: V285 = M[0x40]
0x310: V286 = SUB V283 V285
0x312: V287 = SHA3 V285 V286
0x313: V288 = 0x1
0x315: S[0x1] = V287
0x317: V289 = NUMBER
0x318: V290 = 0x2
0x31a: S[0x2] = V289
0x31b: JUMP 0x218
---
Entry stack: [V11, 0x6c, 0x0, 0x218, V161]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x6c, 0x0]

================================

Block 0x31c
[0x31c:0x348]
---
Predecessors: []
Successors: []
---
0x31c STOP
0x31d LOG1
0x31e PUSH6 0x627a7a723058
0x325 SHA3
0x326 MISSING 0xcc
0x327 SWAP10
0x328 MISSING 0xec
0x329 MISSING 0xc2
0x32a PUSH30 0xdf9ab6f3de49cdab76d7854405f2feacfa778e65b61cba854232f80029
---
0x31c: STOP 
0x31d: LOG S0 S1 S2
0x31e: V291 = 0x627a7a723058
0x325: V292 = SHA3 0x627a7a723058 S3
0x326: MISSING 0xcc
0x328: MISSING 0xec
0x329: MISSING 0xc2
0x32a: V293 = 0xdf9ab6f3de49cdab76d7854405f2feacfa778e65b61cba854232f80029
---
Entry stack: []
Stack pops: 0
Stack additions: [V292, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, 0xdf9ab6f3de49cdab76d7854405f2feacfa778e65b61cba854232f80029]
Exit stack: []

================================

Function 0:
Public function signature: 0x37354a68
Entry block: 0x6e
Exit block: 0x8d
Body: 0x6e, 0x75, 0x79, 0x8d

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x9f
Exit block: 0x17c
Body: 0x9f, 0xa6, 0xaa, 0x161, 0x178, 0x17c

Function 2:
Public function signature: 0x45e29057
Entry block: 0xb2
Exit block: 0x6c
Body: 0x6c, 0x8d, 0xb2, 0xb9, 0xbd, 0x18a, 0x195

Function 3:
Public function signature: 0x80ca7aec
Entry block: 0xc5
Exit block: 0x6c
Body: 0x6c, 0xc5, 0xcc, 0xd0, 0x19a, 0x1b2, 0x1b6, 0x218, 0x2d6

Function 4:
Public function signature: 0xd11711a2
Entry block: 0xd8
Exit block: 0x8d
Body: 0x6c, 0x8d, 0xd8, 0x21b, 0x237, 0x23b, 0x24b, 0x24f, 0x271, 0x275, 0x281, 0x288, 0x2d0, 0x2d4

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

Function 6:
Private function
Entry block: 0xe0
Exit block: 0x15a
Body: 0xe0, 0x15a

