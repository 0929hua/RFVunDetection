Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb9]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb9
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb9
0xc: JUMPI 0xb9 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x69d]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1ef771fb
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x69d
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1ef771fb
0x3b: V13 = EQ V11 0x1ef771fb
0x3c: V14 = 0x69d
0x3f: JUMPI 0x69d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6d0]
---
0x40 DUP1
0x41 PUSH4 0x51d962e1
0x46 EQ
0x47 PUSH2 0x6d0
0x4a JUMPI
---
0x41: V15 = 0x51d962e1
0x46: V16 = EQ 0x51d962e1 V11
0x47: V17 = 0x6d0
0x4a: JUMPI 0x6d0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x6e5]
---
0x4b DUP1
0x4c PUSH4 0x5e35359e
0x51 EQ
0x52 PUSH2 0x6e5
0x55 JUMPI
---
0x4c: V18 = 0x5e35359e
0x51: V19 = EQ 0x5e35359e V11
0x52: V20 = 0x6e5
0x55: JUMPI 0x6e5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x723]
---
0x56 DUP1
0x57 PUSH4 0x6c56a3f1
0x5c EQ
0x5d PUSH2 0x723
0x60 JUMPI
---
0x57: V21 = 0x6c56a3f1
0x5c: V22 = EQ 0x6c56a3f1 V11
0x5d: V23 = 0x723
0x60: JUMPI 0x723 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x738]
---
0x61 DUP1
0x62 PUSH4 0x7974f8fe
0x67 EQ
0x68 PUSH2 0x738
0x6b JUMPI
---
0x62: V24 = 0x7974f8fe
0x67: V25 = EQ 0x7974f8fe V11
0x68: V26 = 0x738
0x6b: JUMPI 0x738 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x752]
---
0x6c DUP1
0x6d PUSH4 0x79ba5097
0x72 EQ
0x73 PUSH2 0x752
0x76 JUMPI
---
0x6d: V27 = 0x79ba5097
0x72: V28 = EQ 0x79ba5097 V11
0x73: V29 = 0x752
0x76: JUMPI 0x752 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x767]
---
0x77 DUP1
0x78 PUSH4 0x8bc008e6
0x7d EQ
0x7e PUSH2 0x767
0x81 JUMPI
---
0x78: V30 = 0x8bc008e6
0x7d: V31 = EQ 0x8bc008e6 V11
0x7e: V32 = 0x767
0x81: JUMPI 0x767 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x798]
---
0x82 DUP1
0x83 PUSH4 0x8da5cb5b
0x88 EQ
0x89 PUSH2 0x798
0x8c JUMPI
---
0x83: V33 = 0x8da5cb5b
0x88: V34 = EQ 0x8da5cb5b V11
0x89: V35 = 0x798
0x8c: JUMPI 0x798 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x7ad]
---
0x8d DUP1
0x8e PUSH4 0xd4ee1d90
0x93 EQ
0x94 PUSH2 0x7ad
0x97 JUMPI
---
0x8e: V36 = 0xd4ee1d90
0x93: V37 = EQ 0xd4ee1d90 V11
0x94: V38 = 0x7ad
0x97: JUMPI 0x7ad V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x7c2]
---
0x98 DUP1
0x99 PUSH4 0xdf49804a
0x9e EQ
0x9f PUSH2 0x7c2
0xa2 JUMPI
---
0x99: V39 = 0xdf49804a
0x9e: V40 = EQ 0xdf49804a V11
0x9f: V41 = 0x7c2
0xa2: JUMPI 0x7c2 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x7d7]
---
0xa3 DUP1
0xa4 PUSH4 0xee71f3f5
0xa9 EQ
0xaa PUSH2 0x7d7
0xad JUMPI
---
0xa4: V42 = 0xee71f3f5
0xa9: V43 = EQ 0xee71f3f5 V11
0xaa: V44 = 0x7d7
0xad: JUMPI 0x7d7 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x7f8]
---
0xae DUP1
0xaf PUSH4 0xf2fde38b
0xb4 EQ
0xb5 PUSH2 0x7f8
0xb8 JUMPI
---
0xaf: V45 = 0xf2fde38b
0xb4: V46 = EQ 0xf2fde38b V11
0xb5: V47 = 0x7f8
0xb8: JUMPI 0x7f8 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc0]
---
Predecessors: [0x0, 0xae]
Successors: [0xc1, 0xc5]
---
0xb9 JUMPDEST
0xba CALLVALUE
0xbb DUP1
0xbc ISZERO
0xbd PUSH2 0xc5
0xc0 JUMPI
---
0xb9: JUMPDEST 
0xba: V48 = CALLVALUE
0xbc: V49 = ISZERO V48
0xbd: V50 = 0xc5
0xc0: JUMPI 0xc5 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xc1
[0xc1:0xc4]
---
Predecessors: [0xb9]
Successors: []
---
0xc1 PUSH1 0x0
0xc3 DUP1
0xc4 REVERT
---
0xc1: V51 = 0x0
0xc4: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xc5
[0xc5:0xd5]
---
Predecessors: [0xb9]
Successors: [0xd6, 0x125]
---
0xc5 JUMPDEST
0xc6 POP
0xc7 PUSH1 0x0
0xc9 DUP1
0xca DUP1
0xcb DUP1
0xcc DUP1
0xcd DUP1
0xce DUP1
0xcf CALLER
0xd0 ORIGIN
0xd1 EQ
0xd2 PUSH2 0x125
0xd5 JUMPI
---
0xc5: JUMPDEST 
0xc7: V52 = 0x0
0xcf: V53 = CALLER
0xd0: V54 = ORIGIN
0xd1: V55 = EQ V54 V53
0xd2: V56 = 0x125
0xd5: JUMPI 0x125 V55
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd6
[0xd6:0x124]
---
Predecessors: [0xc5]
Successors: []
---
0xd6 PUSH1 0x40
0xd8 DUP1
0xd9 MLOAD
0xda PUSH1 0xe5
0xdc PUSH1 0x2
0xde EXP
0xdf PUSH3 0x461bcd
0xe3 MUL
0xe4 DUP2
0xe5 MSTORE
0xe6 PUSH1 0x20
0xe8 PUSH1 0x4
0xea DUP3
0xeb ADD
0xec MSTORE
0xed PUSH1 0x16
0xef PUSH1 0x24
0xf1 DUP3
0xf2 ADD
0xf3 MSTORE
0xf4 PUSH32 0x6d73672e73656e646572203d3d2074782e6f7267696e00000000000000000000
0x115 PUSH1 0x44
0x117 DUP3
0x118 ADD
0x119 MSTORE
0x11a SWAP1
0x11b MLOAD
0x11c SWAP1
0x11d DUP2
0x11e SWAP1
0x11f SUB
0x120 PUSH1 0x64
0x122 ADD
0x123 SWAP1
0x124 REVERT
---
0xd6: V57 = 0x40
0xd9: V58 = M[0x40]
0xda: V59 = 0xe5
0xdc: V60 = 0x2
0xde: V61 = EXP 0x2 0xe5
0xdf: V62 = 0x461bcd
0xe3: V63 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xe5: M[V58] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe6: V64 = 0x20
0xe8: V65 = 0x4
0xeb: V66 = ADD V58 0x4
0xec: M[V66] = 0x20
0xed: V67 = 0x16
0xef: V68 = 0x24
0xf2: V69 = ADD V58 0x24
0xf3: M[V69] = 0x16
0xf4: V70 = 0x6d73672e73656e646572203d3d2074782e6f7267696e00000000000000000000
0x115: V71 = 0x44
0x118: V72 = ADD V58 0x44
0x119: M[V72] = 0x6d73672e73656e646572203d3d2074782e6f7267696e00000000000000000000
0x11b: V73 = M[0x40]
0x11f: V74 = SUB V58 V73
0x120: V75 = 0x64
0x122: V76 = ADD 0x64 V74
0x124: REVERT V73 V76
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x125
[0x125:0x13a]
---
Predecessors: [0xc5]
Successors: [0x819]
---
0x125 JUMPDEST
0x126 PUSH1 0x4
0x128 SLOAD
0x129 PUSH2 0x13b
0x12c SWAP1
0x12d PUSH3 0x15180
0x131 PUSH4 0xffffffff
0x136 PUSH2 0x819
0x139 AND
0x13a JUMP
---
0x125: JUMPDEST 
0x126: V77 = 0x4
0x128: V78 = S[0x4]
0x129: V79 = 0x13b
0x12d: V80 = 0x15180
0x131: V81 = 0xffffffff
0x136: V82 = 0x819
0x139: V83 = AND 0x819 0xffffffff
0x13a: JUMP 0x819
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x13b, V78, 0x15180]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x13b, V78, 0x15180]

================================

Block 0x13b
[0x13b:0x141]
---
Predecessors: [0x82a]
Successors: [0x142, 0x146]
---
0x13b JUMPDEST
0x13c TIMESTAMP
0x13d GT
0x13e PUSH2 0x146
0x141 JUMPI
---
0x13b: JUMPDEST 
0x13c: V84 = TIMESTAMP
0x13d: V85 = GT V84 S0
0x13e: V86 = 0x146
0x141: JUMPI 0x146 V85
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x13b]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V87 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x146
[0x146:0x1a7]
---
Predecessors: [0x13b]
Successors: [0x1a8, 0x1ac]
---
0x146 JUMPDEST
0x147 PUSH1 0x2
0x149 SLOAD
0x14a PUSH1 0x40
0x14c DUP1
0x14d MLOAD
0x14e PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x16f DUP2
0x170 MSTORE
0x171 CALLER
0x172 PUSH1 0x4
0x174 DUP3
0x175 ADD
0x176 MSTORE
0x177 SWAP1
0x178 MLOAD
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 SWAP1
0x182 SWAP3
0x183 AND
0x184 SWAP2
0x185 PUSH4 0x70a08231
0x18a SWAP2
0x18b PUSH1 0x24
0x18d DUP1
0x18e DUP3
0x18f ADD
0x190 SWAP3
0x191 PUSH1 0x20
0x193 SWAP3
0x194 SWAP1
0x195 SWAP2
0x196 SWAP1
0x197 DUP3
0x198 SWAP1
0x199 SUB
0x19a ADD
0x19b DUP2
0x19c PUSH1 0x0
0x19e DUP8
0x19f DUP1
0x1a0 EXTCODESIZE
0x1a1 ISZERO
0x1a2 DUP1
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x146: JUMPDEST 
0x147: V88 = 0x2
0x149: V89 = S[0x2]
0x14a: V90 = 0x40
0x14d: V91 = M[0x40]
0x14e: V92 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x170: M[V91] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x171: V93 = CALLER
0x172: V94 = 0x4
0x175: V95 = ADD V91 0x4
0x176: M[V95] = V93
0x178: V96 = M[0x40]
0x179: V97 = 0x1
0x17b: V98 = 0xa0
0x17d: V99 = 0x2
0x17f: V100 = EXP 0x2 0xa0
0x180: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V102 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x185: V103 = 0x70a08231
0x18b: V104 = 0x24
0x18f: V105 = ADD V91 0x24
0x191: V106 = 0x20
0x199: V107 = SUB V91 V96
0x19a: V108 = ADD V107 0x24
0x19c: V109 = 0x0
0x1a0: V110 = EXTCODESIZE V102
0x1a1: V111 = ISZERO V110
0x1a3: V112 = ISZERO V111
0x1a4: V113 = 0x1ac
0x1a7: JUMPI 0x1ac V112
---
Entry stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V102, 0x70a08231, V105, 0x20, V96, V108, V96, 0x0, V102, V111]
Exit stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V102, 0x70a08231, V105, 0x20, V96, V108, V96, 0x0, V102, V111]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x146]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V114 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V102, 0x70a08231, V105, 0x20, V96, V108, V96, 0x0, V102, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V102, 0x70a08231, V105, 0x20, V96, V108, V96, 0x0, V102, V111]

================================

Block 0x1ac
[0x1ac:0x1b6]
---
Predecessors: [0x146]
Successors: [0x1b7, 0x1c0]
---
0x1ac JUMPDEST
0x1ad POP
0x1ae GAS
0x1af CALL
0x1b0 ISZERO
0x1b1 DUP1
0x1b2 ISZERO
0x1b3 PUSH2 0x1c0
0x1b6 JUMPI
---
0x1ac: JUMPDEST 
0x1ae: V115 = GAS
0x1af: V116 = CALL V115 V102 0x0 V96 V108 V96 0x20
0x1b0: V117 = ISZERO V116
0x1b2: V118 = ISZERO V117
0x1b3: V119 = 0x1c0
0x1b6: JUMPI 0x1c0 V118
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V102, 0x70a08231, V105, 0x20, V96, V108, V96, 0x0, V102, V111]
Stack pops: 7
Stack additions: [V117]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V102, 0x70a08231, V105, V117]

================================

Block 0x1b7
[0x1b7:0x1bf]
---
Predecessors: [0x1ac]
Successors: []
---
0x1b7 RETURNDATASIZE
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb RETURNDATACOPY
0x1bc RETURNDATASIZE
0x1bd PUSH1 0x0
0x1bf REVERT
---
0x1b7: V120 = RETURNDATASIZE
0x1b8: V121 = 0x0
0x1bb: RETURNDATACOPY 0x0 0x0 V120
0x1bc: V122 = RETURNDATASIZE
0x1bd: V123 = 0x0
0x1bf: REVERT 0x0 V122
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x70a08231, S1, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x70a08231, S1, V117]

================================

Block 0x1c0
[0x1c0:0x1d1]
---
Predecessors: [0x1ac]
Successors: [0x1d2, 0x1d6]
---
0x1c0 JUMPDEST
0x1c1 POP
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 RETURNDATASIZE
0x1c9 PUSH1 0x20
0x1cb DUP2
0x1cc LT
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1c0: JUMPDEST 
0x1c5: V124 = 0x40
0x1c7: V125 = M[0x40]
0x1c8: V126 = RETURNDATASIZE
0x1c9: V127 = 0x20
0x1cc: V128 = LT V126 0x20
0x1cd: V129 = ISZERO V128
0x1ce: V130 = 0x1d6
0x1d1: JUMPI 0x1d6 V129
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x70a08231, S1, V117]
Stack pops: 4
Stack additions: [V125, V126]
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V125, V126]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1c0]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V131 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V125, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V125, V126]

================================

Block 0x1d6
[0x1d6:0x1e3]
---
Predecessors: [0x1c0]
Successors: [0x1e4, 0x3e2]
---
0x1d6 JUMPDEST
0x1d7 POP
0x1d8 MLOAD
0x1d9 SWAP7
0x1da POP
0x1db PUSH1 0x0
0x1dd DUP8
0x1de GT
0x1df ISZERO
0x1e0 PUSH2 0x3e2
0x1e3 JUMPI
---
0x1d6: JUMPDEST 
0x1d8: V132 = M[V125]
0x1db: V133 = 0x0
0x1de: V134 = GT V132 0x0
0x1df: V135 = ISZERO V134
0x1e0: V136 = 0x3e2
0x1e3: JUMPI 0x3e2 V135
---
Entry stack: [V11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V125, V126]
Stack pops: 9
Stack additions: [V132, S7, S6, S5, S4, S3, S2]
Exit stack: [V11, V132, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x1e4
[0x1e4:0x25f]
---
Predecessors: [0x1d6]
Successors: [0x260, 0x264]
---
0x1e4 PUSH1 0x2
0x1e6 SLOAD
0x1e7 PUSH1 0x40
0x1e9 DUP1
0x1ea MLOAD
0x1eb PUSH32 0x1d32ab9900000000000000000000000000000000000000000000000000000000
0x20c DUP2
0x20d MSTORE
0x20e PUSH20 0xdead0dead0dead0dead0dead0dead0dead0dead
0x223 PUSH1 0x4
0x225 DUP3
0x226 ADD
0x227 MSTORE
0x228 PUSH1 0x24
0x22a DUP2
0x22b ADD
0x22c DUP11
0x22d SWAP1
0x22e MSTORE
0x22f SWAP1
0x230 MLOAD
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 SWAP1
0x23a SWAP3
0x23b AND
0x23c SWAP2
0x23d PUSH4 0x1d32ab99
0x242 SWAP2
0x243 PUSH1 0x44
0x245 DUP1
0x246 DUP3
0x247 ADD
0x248 SWAP3
0x249 PUSH1 0x20
0x24b SWAP3
0x24c SWAP1
0x24d SWAP2
0x24e SWAP1
0x24f DUP3
0x250 SWAP1
0x251 SUB
0x252 ADD
0x253 DUP2
0x254 PUSH1 0x0
0x256 DUP8
0x257 DUP1
0x258 EXTCODESIZE
0x259 ISZERO
0x25a DUP1
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x1e4: V137 = 0x2
0x1e6: V138 = S[0x2]
0x1e7: V139 = 0x40
0x1ea: V140 = M[0x40]
0x1eb: V141 = 0x1d32ab9900000000000000000000000000000000000000000000000000000000
0x20d: M[V140] = 0x1d32ab9900000000000000000000000000000000000000000000000000000000
0x20e: V142 = 0xdead0dead0dead0dead0dead0dead0dead0dead
0x223: V143 = 0x4
0x226: V144 = ADD V140 0x4
0x227: M[V144] = 0xdead0dead0dead0dead0dead0dead0dead0dead
0x228: V145 = 0x24
0x22b: V146 = ADD V140 0x24
0x22e: M[V146] = V132
0x230: V147 = M[0x40]
0x231: V148 = 0x1
0x233: V149 = 0xa0
0x235: V150 = 0x2
0x237: V151 = EXP 0x2 0xa0
0x238: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23b: V153 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V154 = 0x1d32ab99
0x243: V155 = 0x44
0x247: V156 = ADD V140 0x44
0x249: V157 = 0x20
0x251: V158 = SUB V140 V147
0x252: V159 = ADD V158 0x44
0x254: V160 = 0x0
0x258: V161 = EXTCODESIZE V153
0x259: V162 = ISZERO V161
0x25b: V163 = ISZERO V162
0x25c: V164 = 0x264
0x25f: JUMPI 0x264 V163
---
Entry stack: [V11, V132, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V153, 0x1d32ab99, V156, 0x20, V147, V159, V147, 0x0, V153, V162]
Exit stack: [V11, V132, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V153, 0x1d32ab99, V156, 0x20, V147, V159, V147, 0x0, V153, V162]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x1e4]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V165 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V11, S16, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V153, 0x1d32ab99, V156, 0x20, V147, V159, V147, 0x0, V153, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S16, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V153, 0x1d32ab99, V156, 0x20, V147, V159, V147, 0x0, V153, V162]

================================

Block 0x264
[0x264:0x26e]
---
Predecessors: [0x1e4]
Successors: [0x26f, 0x278]
---
0x264 JUMPDEST
0x265 POP
0x266 GAS
0x267 CALL
0x268 ISZERO
0x269 DUP1
0x26a ISZERO
0x26b PUSH2 0x278
0x26e JUMPI
---
0x264: JUMPDEST 
0x266: V166 = GAS
0x267: V167 = CALL V166 V153 0x0 V147 V159 V147 0x20
0x268: V168 = ISZERO V167
0x26a: V169 = ISZERO V168
0x26b: V170 = 0x278
0x26e: JUMPI 0x278 V169
---
Entry stack: [V11, S16, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V153, 0x1d32ab99, V156, 0x20, V147, V159, V147, 0x0, V153, V162]
Stack pops: 7
Stack additions: [V168]
Exit stack: [V11, S16, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V153, 0x1d32ab99, V156, V168]

================================

Block 0x26f
[0x26f:0x277]
---
Predecessors: [0x264]
Successors: []
---
0x26f RETURNDATASIZE
0x270 PUSH1 0x0
0x272 DUP1
0x273 RETURNDATACOPY
0x274 RETURNDATASIZE
0x275 PUSH1 0x0
0x277 REVERT
---
0x26f: V171 = RETURNDATASIZE
0x270: V172 = 0x0
0x273: RETURNDATACOPY 0x0 0x0 V171
0x274: V173 = RETURNDATASIZE
0x275: V174 = 0x0
0x277: REVERT 0x0 V173
---
Entry stack: [V11, S10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x1d32ab99, S1, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x1d32ab99, S1, V168]

================================

Block 0x278
[0x278:0x289]
---
Predecessors: [0x264]
Successors: [0x28a, 0x28e]
---
0x278 JUMPDEST
0x279 POP
0x27a POP
0x27b POP
0x27c POP
0x27d PUSH1 0x40
0x27f MLOAD
0x280 RETURNDATASIZE
0x281 PUSH1 0x20
0x283 DUP2
0x284 LT
0x285 ISZERO
0x286 PUSH2 0x28e
0x289 JUMPI
---
0x278: JUMPDEST 
0x27d: V175 = 0x40
0x27f: V176 = M[0x40]
0x280: V177 = RETURNDATASIZE
0x281: V178 = 0x20
0x284: V179 = LT V177 0x20
0x285: V180 = ISZERO V179
0x286: V181 = 0x28e
0x289: JUMPI 0x28e V180
---
Entry stack: [V11, S10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x1d32ab99, S1, V168]
Stack pops: 4
Stack additions: [V176, V177]
Exit stack: [V11, S10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V176, V177]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x278]
Successors: []
---
0x28a PUSH1 0x0
0x28c DUP1
0x28d REVERT
---
0x28a: V182 = 0x0
0x28d: REVERT 0x0 0x0
---
Entry stack: [V11, S8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V176, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V176, V177]

================================

Block 0x28e
[0x28e:0x2a4]
---
Predecessors: [0x278]
Successors: [0x830]
---
0x28e JUMPDEST
0x28f POP
0x290 PUSH2 0x2c1
0x293 SWAP1
0x294 POP
0x295 PUSH2 0x2a5
0x298 DUP9
0x299 PUSH1 0x5
0x29b PUSH4 0xffffffff
0x2a0 PUSH2 0x830
0x2a3 AND
0x2a4 JUMP
---
0x28e: JUMPDEST 
0x290: V183 = 0x2c1
0x295: V184 = 0x2a5
0x299: V185 = 0x5
0x29b: V186 = 0xffffffff
0x2a0: V187 = 0x830
0x2a3: V188 = AND 0x830 0xffffffff
0x2a4: JUMP 0x830
---
Entry stack: [V11, S8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V176, V177]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, 0x2c1, 0x2a5, S8, 0x5]
Exit stack: [V11, S8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2c1, 0x2a5, S8, 0x5]

================================

Block 0x2a5
[0x2a5:0x2c0]
---
Predecessors: [0x82a]
Successors: [0x859]
---
0x2a5 JUMPDEST
0x2a6 CALLER
0x2a7 PUSH1 0x0
0x2a9 SWAP1
0x2aa DUP2
0x2ab MSTORE
0x2ac PUSH1 0x6
0x2ae PUSH1 0x20
0x2b0 MSTORE
0x2b1 PUSH1 0x40
0x2b3 SWAP1
0x2b4 SHA3
0x2b5 SLOAD
0x2b6 SWAP1
0x2b7 PUSH4 0xffffffff
0x2bc PUSH2 0x859
0x2bf AND
0x2c0 JUMP
---
0x2a5: JUMPDEST 
0x2a6: V189 = CALLER
0x2a7: V190 = 0x0
0x2ab: M[0x0] = V189
0x2ac: V191 = 0x6
0x2ae: V192 = 0x20
0x2b0: M[0x20] = 0x6
0x2b1: V193 = 0x40
0x2b4: V194 = SHA3 0x0 0x40
0x2b5: V195 = S[V194]
0x2b7: V196 = 0xffffffff
0x2bc: V197 = 0x859
0x2bf: V198 = AND 0x859 0xffffffff
0x2c0: JUMP 0x859
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V195, S0]
Exit stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V195, S0]

================================

Block 0x2c1
[0x2c1:0x2fb]
---
Predecessors: [0x82a]
Successors: [0x830]
---
0x2c1 JUMPDEST
0x2c2 CALLER
0x2c3 PUSH1 0x0
0x2c5 SWAP1
0x2c6 DUP2
0x2c7 MSTORE
0x2c8 PUSH1 0x6
0x2ca PUSH1 0x20
0x2cc DUP2
0x2cd DUP2
0x2ce MSTORE
0x2cf PUSH1 0x40
0x2d1 DUP1
0x2d2 DUP5
0x2d3 SHA3
0x2d4 DUP6
0x2d5 SWAP1
0x2d6 SSTORE
0x2d7 PUSH1 0x7
0x2d9 DUP3
0x2da MSTORE
0x2db SWAP1
0x2dc SWAP3
0x2dd SHA3
0x2de SLOAD
0x2df SWAP2
0x2e0 MSTORE
0x2e1 PUSH2 0x314
0x2e4 SWAP2
0x2e5 PUSH2 0x308
0x2e8 SWAP1
0x2e9 PUSH1 0x64
0x2eb SWAP1
0x2ec PUSH2 0x2fc
0x2ef SWAP1
0x2f0 PUSH1 0x1e
0x2f2 PUSH4 0xffffffff
0x2f7 PUSH2 0x830
0x2fa AND
0x2fb JUMP
---
0x2c1: JUMPDEST 
0x2c2: V199 = CALLER
0x2c3: V200 = 0x0
0x2c7: M[0x0] = V199
0x2c8: V201 = 0x6
0x2ca: V202 = 0x20
0x2ce: M[0x20] = 0x6
0x2cf: V203 = 0x40
0x2d3: V204 = SHA3 0x0 0x40
0x2d6: S[V204] = S0
0x2d7: V205 = 0x7
0x2da: M[0x20] = 0x7
0x2dd: V206 = SHA3 0x0 0x40
0x2de: V207 = S[V206]
0x2e0: M[0x20] = 0x6
0x2e1: V208 = 0x314
0x2e5: V209 = 0x308
0x2e9: V210 = 0x64
0x2ec: V211 = 0x2fc
0x2f0: V212 = 0x1e
0x2f2: V213 = 0xffffffff
0x2f7: V214 = 0x830
0x2fa: V215 = AND 0x830 0xffffffff
0x2fb: JUMP 0x830
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x314, V207, 0x308, 0x64, 0x2fc, S0, 0x1e]
Exit stack: [S13, 0x0, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, 0x314, V207, 0x308, 0x64, 0x2fc, S0, 0x1e]

================================

Block 0x2fc
[0x2fc:0x307]
---
Predecessors: [0x82a]
Successors: [0x866]
---
0x2fc JUMPDEST
0x2fd SWAP1
0x2fe PUSH4 0xffffffff
0x303 PUSH2 0x866
0x306 AND
0x307 JUMP
---
0x2fc: JUMPDEST 
0x2fe: V216 = 0xffffffff
0x303: V217 = 0x866
0x306: V218 = AND 0x866 0xffffffff
0x307: JUMP 0x866
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x308
[0x308:0x313]
---
Predecessors: [0x82a, 0x873, 0xa27]
Successors: [0x819]
---
0x308 JUMPDEST
0x309 SWAP1
0x30a PUSH4 0xffffffff
0x30f PUSH2 0x819
0x312 AND
0x313 JUMP
---
0x308: JUMPDEST 
0x30a: V219 = 0xffffffff
0x30f: V220 = 0x819
0x312: V221 = AND 0x819 0xffffffff
0x313: JUMP 0x819
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x314
[0x314:0x336]
---
Predecessors: [0x82a, 0xa27]
Successors: [0x859]
---
0x314 JUMPDEST
0x315 CALLER
0x316 PUSH1 0x0
0x318 SWAP1
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x7
0x31d PUSH1 0x20
0x31f MSTORE
0x320 PUSH1 0x40
0x322 SWAP1
0x323 SHA3
0x324 SLOAD
0x325 SWAP1
0x326 SWAP7
0x327 POP
0x328 PUSH2 0x337
0x32b SWAP1
0x32c DUP8
0x32d PUSH4 0xffffffff
0x332 PUSH2 0x859
0x335 AND
0x336 JUMP
---
0x314: JUMPDEST 
0x315: V222 = CALLER
0x316: V223 = 0x0
0x31a: M[0x0] = V222
0x31b: V224 = 0x7
0x31d: V225 = 0x20
0x31f: M[0x20] = 0x7
0x320: V226 = 0x40
0x323: V227 = SHA3 0x0 0x40
0x324: V228 = S[V227]
0x328: V229 = 0x337
0x32d: V230 = 0xffffffff
0x332: V231 = 0x859
0x335: V232 = AND 0x859 0xffffffff
0x336: JUMP 0x859
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S0, S5, S4, S3, S2, S1, 0x337, V228, S0]
Exit stack: [V132, S13, S12, S11, S10, S9, S8, S7, S0, S5, S4, S3, S2, S1, 0x337, V228, S0]

================================

Block 0x337
[0x337:0x3b0]
---
Predecessors: [0x82a]
Successors: [0x3b1, 0x3b5]
---
0x337 JUMPDEST
0x338 CALLER
0x339 PUSH1 0x0
0x33b DUP2
0x33c DUP2
0x33d MSTORE
0x33e PUSH1 0x7
0x340 PUSH1 0x20
0x342 SWAP1
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x40
0x347 DUP1
0x348 DUP4
0x349 SHA3
0x34a SWAP5
0x34b SWAP1
0x34c SWAP5
0x34d SSTORE
0x34e PUSH1 0x3
0x350 SLOAD
0x351 DUP5
0x352 MLOAD
0x353 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x374 DUP2
0x375 MSTORE
0x376 PUSH1 0x4
0x378 DUP2
0x379 ADD
0x37a SWAP5
0x37b SWAP1
0x37c SWAP5
0x37d MSTORE
0x37e PUSH1 0x24
0x380 DUP5
0x381 ADD
0x382 DUP12
0x383 SWAP1
0x384 MSTORE
0x385 SWAP4
0x386 MLOAD
0x387 PUSH1 0x1
0x389 PUSH1 0xa0
0x38b PUSH1 0x2
0x38d EXP
0x38e SUB
0x38f SWAP1
0x390 SWAP5
0x391 AND
0x392 SWAP4
0x393 PUSH4 0xa9059cbb
0x398 SWAP4
0x399 PUSH1 0x44
0x39b DUP1
0x39c DUP3
0x39d ADD
0x39e SWAP5
0x39f SWAP2
0x3a0 DUP4
0x3a1 SWAP1
0x3a2 SUB
0x3a3 ADD
0x3a4 SWAP1
0x3a5 DUP3
0x3a6 SWAP1
0x3a7 DUP8
0x3a8 DUP1
0x3a9 EXTCODESIZE
0x3aa ISZERO
0x3ab DUP1
0x3ac ISZERO
0x3ad PUSH2 0x3b5
0x3b0 JUMPI
---
0x337: JUMPDEST 
0x338: V233 = CALLER
0x339: V234 = 0x0
0x33d: M[0x0] = V233
0x33e: V235 = 0x7
0x340: V236 = 0x20
0x344: M[0x20] = 0x7
0x345: V237 = 0x40
0x349: V238 = SHA3 0x0 0x40
0x34d: S[V238] = S0
0x34e: V239 = 0x3
0x350: V240 = S[0x3]
0x352: V241 = M[0x40]
0x353: V242 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x375: M[V241] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x376: V243 = 0x4
0x379: V244 = ADD V241 0x4
0x37d: M[V244] = V233
0x37e: V245 = 0x24
0x381: V246 = ADD V241 0x24
0x384: M[V246] = S6
0x386: V247 = M[0x40]
0x387: V248 = 0x1
0x389: V249 = 0xa0
0x38b: V250 = 0x2
0x38d: V251 = EXP 0x2 0xa0
0x38e: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x391: V253 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x393: V254 = 0xa9059cbb
0x399: V255 = 0x44
0x39d: V256 = ADD V241 0x44
0x3a2: V257 = SUB V241 V247
0x3a3: V258 = ADD V257 0x44
0x3a9: V259 = EXTCODESIZE V253
0x3aa: V260 = ISZERO V259
0x3ac: V261 = ISZERO V260
0x3ad: V262 = 0x3b5
0x3b0: JUMPI 0x3b5 V261
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V253, 0xa9059cbb, V256, 0x20, V247, V258, V247, 0x0, V253, V260]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V253, 0xa9059cbb, V256, 0x20, V247, V258, V247, 0x0, V253, V260]

================================

Block 0x3b1
[0x3b1:0x3b4]
---
Predecessors: [0x337]
Successors: []
---
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 REVERT
---
0x3b1: V263 = 0x0
0x3b4: REVERT 0x0 0x0
---
Entry stack: [V132, S18, S17, S16, S15, S14, S13, S12, S11, S10, V253, 0xa9059cbb, V256, 0x20, V247, V258, V247, 0x0, V253, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V132, S18, S17, S16, S15, S14, S13, S12, S11, S10, V253, 0xa9059cbb, V256, 0x20, V247, V258, V247, 0x0, V253, V260]

================================

Block 0x3b5
[0x3b5:0x3bf]
---
Predecessors: [0x337]
Successors: [0x3c0, 0x3c9]
---
0x3b5 JUMPDEST
0x3b6 POP
0x3b7 GAS
0x3b8 CALL
0x3b9 ISZERO
0x3ba DUP1
0x3bb ISZERO
0x3bc PUSH2 0x3c9
0x3bf JUMPI
---
0x3b5: JUMPDEST 
0x3b7: V264 = GAS
0x3b8: V265 = CALL V264 V253 0x0 V247 V258 V247 0x20
0x3b9: V266 = ISZERO V265
0x3bb: V267 = ISZERO V266
0x3bc: V268 = 0x3c9
0x3bf: JUMPI 0x3c9 V267
---
Entry stack: [V132, S18, S17, S16, S15, S14, S13, S12, S11, S10, V253, 0xa9059cbb, V256, 0x20, V247, V258, V247, 0x0, V253, V260]
Stack pops: 7
Stack additions: [V266]
Exit stack: [V132, S18, S17, S16, S15, S14, S13, S12, S11, S10, V253, 0xa9059cbb, V256, V266]

================================

Block 0x3c0
[0x3c0:0x3c8]
---
Predecessors: [0x3b5]
Successors: []
---
0x3c0 RETURNDATASIZE
0x3c1 PUSH1 0x0
0x3c3 DUP1
0x3c4 RETURNDATACOPY
0x3c5 RETURNDATASIZE
0x3c6 PUSH1 0x0
0x3c8 REVERT
---
0x3c0: V269 = RETURNDATASIZE
0x3c1: V270 = 0x0
0x3c4: RETURNDATACOPY 0x0 0x0 V269
0x3c5: V271 = RETURNDATASIZE
0x3c6: V272 = 0x0
0x3c8: REVERT 0x0 V271
---
Entry stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, V253, 0xa9059cbb, V256, V266]
Stack pops: 0
Stack additions: []
Exit stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, V253, 0xa9059cbb, V256, V266]

================================

Block 0x3c9
[0x3c9:0x3da]
---
Predecessors: [0x3b5]
Successors: [0x3db, 0x3df]
---
0x3c9 JUMPDEST
0x3ca POP
0x3cb POP
0x3cc POP
0x3cd POP
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 RETURNDATASIZE
0x3d2 PUSH1 0x20
0x3d4 DUP2
0x3d5 LT
0x3d6 ISZERO
0x3d7 PUSH2 0x3df
0x3da JUMPI
---
0x3c9: JUMPDEST 
0x3ce: V273 = 0x40
0x3d0: V274 = M[0x40]
0x3d1: V275 = RETURNDATASIZE
0x3d2: V276 = 0x20
0x3d5: V277 = LT V275 0x20
0x3d6: V278 = ISZERO V277
0x3d7: V279 = 0x3df
0x3da: JUMPI 0x3df V278
---
Entry stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, V253, 0xa9059cbb, V256, V266]
Stack pops: 4
Stack additions: [V274, V275]
Exit stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, V274, V275]

================================

Block 0x3db
[0x3db:0x3de]
---
Predecessors: [0x3c9]
Successors: []
---
0x3db PUSH1 0x0
0x3dd DUP1
0x3de REVERT
---
0x3db: V280 = 0x0
0x3de: REVERT 0x0 0x0
---
Entry stack: [V132, S10, S9, S8, S7, S6, S5, S4, S3, S2, V274, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V132, S10, S9, S8, S7, S6, S5, S4, S3, S2, V274, V275]

================================

Block 0x3df
[0x3df:0x3e1]
---
Predecessors: [0x3c9]
Successors: [0x3e2]
---
0x3df JUMPDEST
0x3e0 POP
0x3e1 POP
---
0x3df: JUMPDEST 
---
Entry stack: [V132, S10, S9, S8, S7, S6, S5, S4, S3, S2, V274, V275]
Stack pops: 2
Stack additions: []
Exit stack: [V132, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x3e2
[0x3e2:0x3f7]
---
Predecessors: [0x1d6, 0x3df]
Successors: [0x3f8, 0x447]
---
0x3e2 JUMPDEST
0x3e3 CALLER
0x3e4 PUSH1 0x0
0x3e6 SWAP1
0x3e7 DUP2
0x3e8 MSTORE
0x3e9 PUSH1 0x6
0x3eb PUSH1 0x20
0x3ed MSTORE
0x3ee PUSH1 0x40
0x3f0 DUP2
0x3f1 SHA3
0x3f2 SLOAD
0x3f3 GT
0x3f4 PUSH2 0x447
0x3f7 JUMPI
---
0x3e2: JUMPDEST 
0x3e3: V281 = CALLER
0x3e4: V282 = 0x0
0x3e8: M[0x0] = V281
0x3e9: V283 = 0x6
0x3eb: V284 = 0x20
0x3ed: M[0x20] = 0x6
0x3ee: V285 = 0x40
0x3f1: V286 = SHA3 0x0 0x40
0x3f2: V287 = S[V286]
0x3f3: V288 = GT V287 0x0
0x3f4: V289 = 0x447
0x3f7: JUMPI 0x447 V288
---
Entry stack: [V132, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V132, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3f8
[0x3f8:0x446]
---
Predecessors: [0x3e2]
Successors: []
---
0x3f8 PUSH1 0x40
0x3fa DUP1
0x3fb MLOAD
0x3fc PUSH1 0xe5
0x3fe PUSH1 0x2
0x400 EXP
0x401 PUSH3 0x461bcd
0x405 MUL
0x406 DUP2
0x407 MSTORE
0x408 PUSH1 0x20
0x40a PUSH1 0x4
0x40c DUP3
0x40d ADD
0x40e MSTORE
0x40f PUSH1 0x1a
0x411 PUSH1 0x24
0x413 DUP3
0x414 ADD
0x415 MSTORE
0x416 PUSH32 0x7872615f616d6f756e745b6d73672e73656e6465725d203e2030000000000000
0x437 PUSH1 0x44
0x439 DUP3
0x43a ADD
0x43b MSTORE
0x43c SWAP1
0x43d MLOAD
0x43e SWAP1
0x43f DUP2
0x440 SWAP1
0x441 SUB
0x442 PUSH1 0x64
0x444 ADD
0x445 SWAP1
0x446 REVERT
---
0x3f8: V290 = 0x40
0x3fb: V291 = M[0x40]
0x3fc: V292 = 0xe5
0x3fe: V293 = 0x2
0x400: V294 = EXP 0x2 0xe5
0x401: V295 = 0x461bcd
0x405: V296 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x407: M[V291] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x408: V297 = 0x20
0x40a: V298 = 0x4
0x40d: V299 = ADD V291 0x4
0x40e: M[V299] = 0x20
0x40f: V300 = 0x1a
0x411: V301 = 0x24
0x414: V302 = ADD V291 0x24
0x415: M[V302] = 0x1a
0x416: V303 = 0x7872615f616d6f756e745b6d73672e73656e6465725d203e2030000000000000
0x437: V304 = 0x44
0x43a: V305 = ADD V291 0x44
0x43b: M[V305] = 0x7872615f616d6f756e745b6d73672e73656e6465725d203e2030000000000000
0x43d: V306 = M[0x40]
0x441: V307 = SUB V291 V306
0x442: V308 = 0x64
0x444: V309 = ADD 0x64 V307
0x446: REVERT V306 V309
---
Entry stack: [V132, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V132, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x447
[0x447:0x451]
---
Predecessors: [0x3e2]
Successors: [0x452, 0x694]
---
0x447 JUMPDEST
0x448 PUSH1 0x4
0x44a SLOAD
0x44b TIMESTAMP
0x44c GT
0x44d ISZERO
0x44e PUSH2 0x694
0x451 JUMPI
---
0x447: JUMPDEST 
0x448: V310 = 0x4
0x44a: V311 = S[0x4]
0x44b: V312 = TIMESTAMP
0x44c: V313 = GT V312 V311
0x44d: V314 = ISZERO V313
0x44e: V315 = 0x694
0x451: JUMPI 0x694 V314
---
Entry stack: [V132, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V132, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x452
[0x452:0x465]
---
Predecessors: [0x447]
Successors: [0x819]
---
0x452 PUSH1 0x4
0x454 SLOAD
0x455 PUSH1 0x5
0x457 SLOAD
0x458 PUSH2 0x466
0x45b SWAP2
0x45c PUSH4 0xffffffff
0x461 PUSH2 0x819
0x464 AND
0x465 JUMP
---
0x452: V316 = 0x4
0x454: V317 = S[0x4]
0x455: V318 = 0x5
0x457: V319 = S[0x5]
0x458: V320 = 0x466
0x45c: V321 = 0xffffffff
0x461: V322 = 0x819
0x464: V323 = AND 0x819 0xffffffff
0x465: JUMP 0x819
---
Entry stack: [V132, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x466, V319, V317]
Exit stack: [V132, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x466, V319, V317]

================================

Block 0x466
[0x466:0x47c]
---
Predecessors: [0x82a]
Successors: [0x819]
---
0x466 JUMPDEST
0x467 SWAP5
0x468 POP
0x469 PUSH2 0x47d
0x46c PUSH1 0x4
0x46e SLOAD
0x46f TIMESTAMP
0x470 PUSH2 0x819
0x473 SWAP1
0x474 SWAP2
0x475 SWAP1
0x476 PUSH4 0xffffffff
0x47b AND
0x47c JUMP
---
0x466: JUMPDEST 
0x469: V324 = 0x47d
0x46c: V325 = 0x4
0x46e: V326 = S[0x4]
0x46f: V327 = TIMESTAMP
0x470: V328 = 0x819
0x476: V329 = 0xffffffff
0x47b: V330 = AND 0xffffffff 0x819
0x47c: JUMP 0x819
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S0, S4, S3, S2, S1, 0x47d, V327, V326]
Exit stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S0, S4, S3, S2, S1, 0x47d, V327, V326]

================================

Block 0x47d
[0x47d:0x48d]
---
Predecessors: [0x82a]
Successors: [0x48e, 0x49d]
---
0x47d JUMPDEST
0x47e SWAP4
0x47f POP
0x480 PUSH1 0x0
0x482 SWAP3
0x483 POP
0x484 PUSH1 0x5
0x486 SLOAD
0x487 TIMESTAMP
0x488 GT
0x489 ISZERO
0x48a PUSH2 0x49d
0x48d JUMPI
---
0x47d: JUMPDEST 
0x480: V331 = 0x0
0x484: V332 = 0x5
0x486: V333 = S[0x5]
0x487: V334 = TIMESTAMP
0x488: V335 = GT V334 V333
0x489: V336 = ISZERO V335
0x48a: V337 = 0x49d
0x48d: JUMPI 0x49d V336
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0, 0x0, S2, S1]
Exit stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S0, 0x0, S2, S1]

================================

Block 0x48e
[0x48e:0x49c]
---
Predecessors: [0x47d]
Successors: [0x4bc]
---
0x48e PUSH8 0xde0b6b3a7640000
0x497 SWAP3
0x498 POP
0x499 PUSH2 0x4bc
0x49c JUMP
---
0x48e: V338 = 0xde0b6b3a7640000
0x499: V339 = 0x4bc
0x49c: JUMP 0x4bc
---
Entry stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, S0]
Stack pops: 3
Stack additions: [0xde0b6b3a7640000, S1, S0]
Exit stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xde0b6b3a7640000, S1, S0]

================================

Block 0x49d
[0x49d:0x4b8]
---
Predecessors: [0x47d]
Successors: [0x830]
---
0x49d JUMPDEST
0x49e PUSH2 0x4b9
0x4a1 DUP6
0x4a2 PUSH2 0x2fc
0x4a5 DUP7
0x4a6 PUSH8 0xde0b6b3a7640000
0x4af PUSH4 0xffffffff
0x4b4 PUSH2 0x830
0x4b7 AND
0x4b8 JUMP
---
0x49d: JUMPDEST 
0x49e: V340 = 0x4b9
0x4a2: V341 = 0x2fc
0x4a6: V342 = 0xde0b6b3a7640000
0x4af: V343 = 0xffffffff
0x4b4: V344 = 0x830
0x4b7: V345 = AND 0x830 0xffffffff
0x4b8: JUMP 0x830
---
Entry stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x4b9, S4, 0x2fc, S3, 0xde0b6b3a7640000]
Exit stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, S0, 0x4b9, S4, 0x2fc, S3, 0xde0b6b3a7640000]

================================

Block 0x4b9
[0x4b9:0x4bb]
---
Predecessors: [0x873, 0xa27]
Successors: [0x4bc]
---
0x4b9 JUMPDEST
0x4ba SWAP3
0x4bb POP
---
0x4b9: JUMPDEST 
---
Entry stack: [V132, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V640]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V132, 0x0, S10, S9, S8, S7, S6, S5, S4, V640, S2, S1]

================================

Block 0x4bc
[0x4bc:0x4f1]
---
Predecessors: [0x48e, 0x4b9]
Successors: [0x830]
---
0x4bc JUMPDEST
0x4bd CALLER
0x4be PUSH1 0x0
0x4c0 SWAP1
0x4c1 DUP2
0x4c2 MSTORE
0x4c3 PUSH1 0x6
0x4c5 PUSH1 0x20
0x4c7 MSTORE
0x4c8 PUSH1 0x40
0x4ca SWAP1
0x4cb SHA3
0x4cc SLOAD
0x4cd PUSH2 0x4f2
0x4d0 SWAP1
0x4d1 PUSH8 0xde0b6b3a7640000
0x4da SWAP1
0x4db PUSH2 0x2fc
0x4de SWAP1
0x4df PUSH8 0x429d069189e0000
0x4e8 PUSH4 0xffffffff
0x4ed PUSH2 0x830
0x4f0 AND
0x4f1 JUMP
---
0x4bc: JUMPDEST 
0x4bd: V346 = CALLER
0x4be: V347 = 0x0
0x4c2: M[0x0] = V346
0x4c3: V348 = 0x6
0x4c5: V349 = 0x20
0x4c7: M[0x20] = 0x6
0x4c8: V350 = 0x40
0x4cb: V351 = SHA3 0x0 0x40
0x4cc: V352 = S[V351]
0x4cd: V353 = 0x4f2
0x4d1: V354 = 0xde0b6b3a7640000
0x4db: V355 = 0x2fc
0x4df: V356 = 0x429d069189e0000
0x4e8: V357 = 0xffffffff
0x4ed: V358 = 0x830
0x4f0: V359 = AND 0x830 0xffffffff
0x4f1: JUMP 0x830
---
Entry stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x4f2, 0xde0b6b3a7640000, 0x2fc, V352, 0x429d069189e0000]
Exit stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x4f2, 0xde0b6b3a7640000, 0x2fc, V352, 0x429d069189e0000]

================================

Block 0x4f2
[0x4f2:0x52a]
---
Predecessors: [0x873, 0xa27]
Successors: [0x830]
---
0x4f2 JUMPDEST
0x4f3 CALLER
0x4f4 PUSH1 0x0
0x4f6 SWAP1
0x4f7 DUP2
0x4f8 MSTORE
0x4f9 PUSH1 0x6
0x4fb PUSH1 0x20
0x4fd MSTORE
0x4fe PUSH1 0x40
0x500 SWAP1
0x501 SHA3
0x502 SLOAD
0x503 SWAP1
0x504 SWAP3
0x505 POP
0x506 PUSH2 0x52b
0x509 SWAP1
0x50a PUSH8 0xde0b6b3a7640000
0x513 SWAP1
0x514 PUSH2 0x2fc
0x517 SWAP1
0x518 PUSH8 0x9b6e64a8ec60000
0x521 PUSH4 0xffffffff
0x526 PUSH2 0x830
0x529 AND
0x52a JUMP
---
0x4f2: JUMPDEST 
0x4f3: V360 = CALLER
0x4f4: V361 = 0x0
0x4f8: M[0x0] = V360
0x4f9: V362 = 0x6
0x4fb: V363 = 0x20
0x4fd: M[0x20] = 0x6
0x4fe: V364 = 0x40
0x501: V365 = SHA3 0x0 0x40
0x502: V366 = S[V365]
0x506: V367 = 0x52b
0x50a: V368 = 0xde0b6b3a7640000
0x514: V369 = 0x2fc
0x518: V370 = 0x9b6e64a8ec60000
0x521: V371 = 0xffffffff
0x526: V372 = 0x830
0x529: V373 = AND 0x830 0xffffffff
0x52a: JUMP 0x830
---
Entry stack: [V132, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V640]
Stack pops: 3
Stack additions: [S0, S1, 0x52b, 0xde0b6b3a7640000, 0x2fc, V366, 0x9b6e64a8ec60000]
Exit stack: [V132, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, V640, S1, 0x52b, 0xde0b6b3a7640000, 0x2fc, V366, 0x9b6e64a8ec60000]

================================

Block 0x52b
[0x52b:0x560]
---
Predecessors: [0x873, 0xa27]
Successors: [0x830]
---
0x52b JUMPDEST
0x52c CALLER
0x52d PUSH1 0x0
0x52f SWAP1
0x530 DUP2
0x531 MSTORE
0x532 PUSH1 0x7
0x534 PUSH1 0x20
0x536 MSTORE
0x537 PUSH1 0x40
0x539 SWAP1
0x53a SHA3
0x53b SLOAD
0x53c SWAP1
0x53d SWAP2
0x53e POP
0x53f PUSH2 0x56e
0x542 SWAP1
0x543 PUSH2 0x308
0x546 PUSH2 0x561
0x549 PUSH8 0xde0b6b3a7640000
0x552 PUSH2 0x2fc
0x555 DUP7
0x556 DUP10
0x557 PUSH4 0xffffffff
0x55c PUSH2 0x830
0x55f AND
0x560 JUMP
---
0x52b: JUMPDEST 
0x52c: V374 = CALLER
0x52d: V375 = 0x0
0x531: M[0x0] = V374
0x532: V376 = 0x7
0x534: V377 = 0x20
0x536: M[0x20] = 0x7
0x537: V378 = 0x40
0x53a: V379 = SHA3 0x0 0x40
0x53b: V380 = S[V379]
0x53f: V381 = 0x56e
0x543: V382 = 0x308
0x546: V383 = 0x561
0x549: V384 = 0xde0b6b3a7640000
0x552: V385 = 0x2fc
0x557: V386 = 0xffffffff
0x55c: V387 = 0x830
0x55f: V388 = AND 0x830 0xffffffff
0x560: JUMP 0x830
---
Entry stack: [V132, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V640]
Stack pops: 4
Stack additions: [S3, S2, S0, 0x56e, V380, 0x308, 0x561, 0xde0b6b3a7640000, 0x2fc, S0, S3]
Exit stack: [V132, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, V640, 0x56e, V380, 0x308, 0x561, 0xde0b6b3a7640000, 0x2fc, V640, S3]

================================

Block 0x561
[0x561:0x56d]
---
Predecessors: [0x873, 0xa27]
Successors: [0x859]
---
0x561 JUMPDEST
0x562 DUP6
0x563 SWAP1
0x564 PUSH4 0xffffffff
0x569 PUSH2 0x859
0x56c AND
0x56d JUMP
---
0x561: JUMPDEST 
0x564: V389 = 0xffffffff
0x569: V390 = 0x859
0x56c: V391 = AND 0x859 0xffffffff
0x56d: JUMP 0x859
---
Entry stack: [V132, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V640]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S5, S0]
Exit stack: [V132, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S5, V640]

================================

Block 0x56e
[0x56e:0x590]
---
Predecessors: [0x82a, 0xa27]
Successors: [0x859]
---
0x56e JUMPDEST
0x56f CALLER
0x570 PUSH1 0x0
0x572 SWAP1
0x573 DUP2
0x574 MSTORE
0x575 PUSH1 0x7
0x577 PUSH1 0x20
0x579 MSTORE
0x57a PUSH1 0x40
0x57c SWAP1
0x57d SHA3
0x57e SLOAD
0x57f SWAP1
0x580 SWAP7
0x581 POP
0x582 PUSH2 0x591
0x585 SWAP1
0x586 DUP8
0x587 PUSH4 0xffffffff
0x58c PUSH2 0x859
0x58f AND
0x590 JUMP
---
0x56e: JUMPDEST 
0x56f: V392 = CALLER
0x570: V393 = 0x0
0x574: M[0x0] = V392
0x575: V394 = 0x7
0x577: V395 = 0x20
0x579: M[0x20] = 0x7
0x57a: V396 = 0x40
0x57d: V397 = SHA3 0x0 0x40
0x57e: V398 = S[V397]
0x582: V399 = 0x591
0x587: V400 = 0xffffffff
0x58c: V401 = 0x859
0x58f: V402 = AND 0x859 0xffffffff
0x590: JUMP 0x859
---
Entry stack: []
Stack pops: 7
Stack additions: [S0, S5, S4, S3, S2, S1, 0x591, V398, S0]
Exit stack: [S0, S5, S4, S3, S2, S1, 0x591, V398, S0]

================================

Block 0x591
[0x591:0x5aa]
---
Predecessors: [0x82a]
Successors: [0x5ab, 0x5fa]
---
0x591 JUMPDEST
0x592 CALLER
0x593 PUSH1 0x0
0x595 SWAP1
0x596 DUP2
0x597 MSTORE
0x598 PUSH1 0x7
0x59a PUSH1 0x20
0x59c MSTORE
0x59d PUSH1 0x40
0x59f DUP2
0x5a0 SHA3
0x5a1 SWAP2
0x5a2 SWAP1
0x5a3 SWAP2
0x5a4 SSTORE
0x5a5 DUP7
0x5a6 GT
0x5a7 PUSH2 0x5fa
0x5aa JUMPI
---
0x591: JUMPDEST 
0x592: V403 = CALLER
0x593: V404 = 0x0
0x597: M[0x0] = V403
0x598: V405 = 0x7
0x59a: V406 = 0x20
0x59c: M[0x20] = 0x7
0x59d: V407 = 0x40
0x5a0: V408 = SHA3 0x0 0x40
0x5a4: S[V408] = S0
0x5a6: V409 = GT S6 0x0
0x5a7: V410 = 0x5fa
0x5aa: JUMPI 0x5fa V409
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1]
Exit stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x5ab
[0x5ab:0x5f9]
---
Predecessors: [0x591]
Successors: []
---
0x5ab PUSH1 0x40
0x5ad DUP1
0x5ae MLOAD
0x5af PUSH1 0xe5
0x5b1 PUSH1 0x2
0x5b3 EXP
0x5b4 PUSH3 0x461bcd
0x5b8 MUL
0x5b9 DUP2
0x5ba MSTORE
0x5bb PUSH1 0x20
0x5bd PUSH1 0x4
0x5bf DUP3
0x5c0 ADD
0x5c1 MSTORE
0x5c2 PUSH1 0xd
0x5c4 PUSH1 0x24
0x5c6 DUP3
0x5c7 ADD
0x5c8 MSTORE
0x5c9 PUSH32 0x746b6e546f53656e64203e203000000000000000000000000000000000000000
0x5ea PUSH1 0x44
0x5ec DUP3
0x5ed ADD
0x5ee MSTORE
0x5ef SWAP1
0x5f0 MLOAD
0x5f1 SWAP1
0x5f2 DUP2
0x5f3 SWAP1
0x5f4 SUB
0x5f5 PUSH1 0x64
0x5f7 ADD
0x5f8 SWAP1
0x5f9 REVERT
---
0x5ab: V411 = 0x40
0x5ae: V412 = M[0x40]
0x5af: V413 = 0xe5
0x5b1: V414 = 0x2
0x5b3: V415 = EXP 0x2 0xe5
0x5b4: V416 = 0x461bcd
0x5b8: V417 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x5ba: M[V412] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5bb: V418 = 0x20
0x5bd: V419 = 0x4
0x5c0: V420 = ADD V412 0x4
0x5c1: M[V420] = 0x20
0x5c2: V421 = 0xd
0x5c4: V422 = 0x24
0x5c7: V423 = ADD V412 0x24
0x5c8: M[V423] = 0xd
0x5c9: V424 = 0x746b6e546f53656e64203e203000000000000000000000000000000000000000
0x5ea: V425 = 0x44
0x5ed: V426 = ADD V412 0x44
0x5ee: M[V426] = 0x746b6e546f53656e64203e203000000000000000000000000000000000000000
0x5f0: V427 = M[0x40]
0x5f4: V428 = SUB V412 V427
0x5f5: V429 = 0x64
0x5f7: V430 = ADD 0x64 V428
0x5f9: REVERT V427 V430
---
Entry stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5fa
[0x5fa:0x662]
---
Predecessors: [0x591]
Successors: [0x663, 0x667]
---
0x5fa JUMPDEST
0x5fb PUSH1 0x3
0x5fd SLOAD
0x5fe PUSH1 0x40
0x600 DUP1
0x601 MLOAD
0x602 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x623 DUP2
0x624 MSTORE
0x625 CALLER
0x626 PUSH1 0x4
0x628 DUP3
0x629 ADD
0x62a MSTORE
0x62b PUSH1 0x24
0x62d DUP2
0x62e ADD
0x62f DUP10
0x630 SWAP1
0x631 MSTORE
0x632 SWAP1
0x633 MLOAD
0x634 PUSH1 0x1
0x636 PUSH1 0xa0
0x638 PUSH1 0x2
0x63a EXP
0x63b SUB
0x63c SWAP1
0x63d SWAP3
0x63e AND
0x63f SWAP2
0x640 PUSH4 0xa9059cbb
0x645 SWAP2
0x646 PUSH1 0x44
0x648 DUP1
0x649 DUP3
0x64a ADD
0x64b SWAP3
0x64c PUSH1 0x20
0x64e SWAP3
0x64f SWAP1
0x650 SWAP2
0x651 SWAP1
0x652 DUP3
0x653 SWAP1
0x654 SUB
0x655 ADD
0x656 DUP2
0x657 PUSH1 0x0
0x659 DUP8
0x65a DUP1
0x65b EXTCODESIZE
0x65c ISZERO
0x65d DUP1
0x65e ISZERO
0x65f PUSH2 0x667
0x662 JUMPI
---
0x5fa: JUMPDEST 
0x5fb: V431 = 0x3
0x5fd: V432 = S[0x3]
0x5fe: V433 = 0x40
0x601: V434 = M[0x40]
0x602: V435 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x624: M[V434] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x625: V436 = CALLER
0x626: V437 = 0x4
0x629: V438 = ADD V434 0x4
0x62a: M[V438] = V436
0x62b: V439 = 0x24
0x62e: V440 = ADD V434 0x24
0x631: M[V440] = S5
0x633: V441 = M[0x40]
0x634: V442 = 0x1
0x636: V443 = 0xa0
0x638: V444 = 0x2
0x63a: V445 = EXP 0x2 0xa0
0x63b: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63e: V447 = AND V432 0xffffffffffffffffffffffffffffffffffffffff
0x640: V448 = 0xa9059cbb
0x646: V449 = 0x44
0x64a: V450 = ADD V434 0x44
0x64c: V451 = 0x20
0x654: V452 = SUB V434 V441
0x655: V453 = ADD V452 0x44
0x657: V454 = 0x0
0x65b: V455 = EXTCODESIZE V447
0x65c: V456 = ISZERO V455
0x65e: V457 = ISZERO V456
0x65f: V458 = 0x667
0x662: JUMPI 0x667 V457
---
Entry stack: [V132, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V447, 0xa9059cbb, V450, 0x20, V441, V453, V441, 0x0, V447, V456]
Exit stack: [S5, S4, S3, S2, S1, S0, V447, 0xa9059cbb, V450, 0x20, V441, V453, V441, 0x0, V447, V456]

================================

Block 0x663
[0x663:0x666]
---
Predecessors: [0x5fa]
Successors: []
---
0x663 PUSH1 0x0
0x665 DUP1
0x666 REVERT
---
0x663: V459 = 0x0
0x666: REVERT 0x0 0x0
---
Entry stack: [S15, S14, S13, S12, S11, S10, V447, 0xa9059cbb, V450, 0x20, V441, V453, V441, 0x0, V447, V456]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, V447, 0xa9059cbb, V450, 0x20, V441, V453, V441, 0x0, V447, V456]

================================

Block 0x667
[0x667:0x671]
---
Predecessors: [0x5fa]
Successors: [0x672, 0x67b]
---
0x667 JUMPDEST
0x668 POP
0x669 GAS
0x66a CALL
0x66b ISZERO
0x66c DUP1
0x66d ISZERO
0x66e PUSH2 0x67b
0x671 JUMPI
---
0x667: JUMPDEST 
0x669: V460 = GAS
0x66a: V461 = CALL V460 V447 0x0 V441 V453 V441 0x20
0x66b: V462 = ISZERO V461
0x66d: V463 = ISZERO V462
0x66e: V464 = 0x67b
0x671: JUMPI 0x67b V463
---
Entry stack: [S15, S14, S13, S12, S11, S10, V447, 0xa9059cbb, V450, 0x20, V441, V453, V441, 0x0, V447, V456]
Stack pops: 7
Stack additions: [V462]
Exit stack: [S15, S14, S13, S12, S11, S10, V447, 0xa9059cbb, V450, V462]

================================

Block 0x672
[0x672:0x67a]
---
Predecessors: [0x667]
Successors: []
---
0x672 RETURNDATASIZE
0x673 PUSH1 0x0
0x675 DUP1
0x676 RETURNDATACOPY
0x677 RETURNDATASIZE
0x678 PUSH1 0x0
0x67a REVERT
---
0x672: V465 = RETURNDATASIZE
0x673: V466 = 0x0
0x676: RETURNDATACOPY 0x0 0x0 V465
0x677: V467 = RETURNDATASIZE
0x678: V468 = 0x0
0x67a: REVERT 0x0 V467
---
Entry stack: [S9, S8, S7, S6, S5, S4, V447, 0xa9059cbb, V450, V462]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, V447, 0xa9059cbb, V450, V462]

================================

Block 0x67b
[0x67b:0x68c]
---
Predecessors: [0x667]
Successors: [0x68d, 0x691]
---
0x67b JUMPDEST
0x67c POP
0x67d POP
0x67e POP
0x67f POP
0x680 PUSH1 0x40
0x682 MLOAD
0x683 RETURNDATASIZE
0x684 PUSH1 0x20
0x686 DUP2
0x687 LT
0x688 ISZERO
0x689 PUSH2 0x691
0x68c JUMPI
---
0x67b: JUMPDEST 
0x680: V469 = 0x40
0x682: V470 = M[0x40]
0x683: V471 = RETURNDATASIZE
0x684: V472 = 0x20
0x687: V473 = LT V471 0x20
0x688: V474 = ISZERO V473
0x689: V475 = 0x691
0x68c: JUMPI 0x691 V474
---
Entry stack: [S9, S8, S7, S6, S5, S4, V447, 0xa9059cbb, V450, V462]
Stack pops: 4
Stack additions: [V470, V471]
Exit stack: [S9, S8, S7, S6, S5, S4, V470, V471]

================================

Block 0x68d
[0x68d:0x690]
---
Predecessors: [0x67b]
Successors: []
---
0x68d PUSH1 0x0
0x68f DUP1
0x690 REVERT
---
0x68d: V476 = 0x0
0x690: REVERT 0x0 0x0
---
Entry stack: [S7, S6, S5, S4, S3, S2, V470, V471]
Stack pops: 0
Stack additions: []
Exit stack: [S7, S6, S5, S4, S3, S2, V470, V471]

================================

Block 0x691
[0x691:0x693]
---
Predecessors: [0x67b]
Successors: [0x694]
---
0x691 JUMPDEST
0x692 POP
0x693 POP
---
0x691: JUMPDEST 
---
Entry stack: [S7, S6, S5, S4, S3, S2, V470, V471]
Stack pops: 2
Stack additions: []
Exit stack: [S7, S6, S5, S4, S3, S2]

================================

Block 0x694
[0x694:0x69c]
---
Predecessors: [0x447, 0x691]
Successors: []
---
0x694 JUMPDEST
0x695 POP
0x696 POP
0x697 POP
0x698 POP
0x699 POP
0x69a POP
0x69b POP
0x69c STOP
---
0x694: JUMPDEST 
0x69c: STOP 
---
Entry stack: [V132, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V132, S8, S7]

================================

Block 0x69d
[0x69d:0x6a4]
---
Predecessors: [0xd]
Successors: [0x6a5, 0x6a9]
---
0x69d JUMPDEST
0x69e CALLVALUE
0x69f DUP1
0x6a0 ISZERO
0x6a1 PUSH2 0x6a9
0x6a4 JUMPI
---
0x69d: JUMPDEST 
0x69e: V477 = CALLVALUE
0x6a0: V478 = ISZERO V477
0x6a1: V479 = 0x6a9
0x6a4: JUMPI 0x6a9 V478
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V477]
Exit stack: [V11, V477]

================================

Block 0x6a5
[0x6a5:0x6a8]
---
Predecessors: [0x69d]
Successors: []
---
0x6a5 PUSH1 0x0
0x6a7 DUP1
0x6a8 REVERT
---
0x6a5: V480 = 0x0
0x6a8: REVERT 0x0 0x0
---
Entry stack: [V11, V477]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V477]

================================

Block 0x6a9
[0x6a9:0x6bd]
---
Predecessors: [0x69d]
Successors: [0x87b]
---
0x6a9 JUMPDEST
0x6aa POP
0x6ab PUSH2 0x6be
0x6ae PUSH1 0x1
0x6b0 PUSH1 0xa0
0x6b2 PUSH1 0x2
0x6b4 EXP
0x6b5 SUB
0x6b6 PUSH1 0x4
0x6b8 CALLDATALOAD
0x6b9 AND
0x6ba PUSH2 0x87b
0x6bd JUMP
---
0x6a9: JUMPDEST 
0x6ab: V481 = 0x6be
0x6ae: V482 = 0x1
0x6b0: V483 = 0xa0
0x6b2: V484 = 0x2
0x6b4: V485 = EXP 0x2 0xa0
0x6b5: V486 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b6: V487 = 0x4
0x6b8: V488 = CALLDATALOAD 0x4
0x6b9: V489 = AND V488 0xffffffffffffffffffffffffffffffffffffffff
0x6ba: V490 = 0x87b
0x6bd: JUMP 0x87b
---
Entry stack: [V11, V477]
Stack pops: 1
Stack additions: [0x6be, V489]
Exit stack: [V11, 0x6be, V489]

================================

Block 0x6be
[0x6be:0x6cf]
---
Predecessors: [0x87b, 0x88d, 0x9a6, 0xb30]
Successors: []
---
0x6be JUMPDEST
0x6bf PUSH1 0x40
0x6c1 DUP1
0x6c2 MLOAD
0x6c3 SWAP2
0x6c4 DUP3
0x6c5 MSTORE
0x6c6 MLOAD
0x6c7 SWAP1
0x6c8 DUP2
0x6c9 SWAP1
0x6ca SUB
0x6cb PUSH1 0x20
0x6cd ADD
0x6ce SWAP1
0x6cf RETURN
---
0x6be: JUMPDEST 
0x6bf: V491 = 0x40
0x6c2: V492 = M[0x40]
0x6c5: M[V492] = S0
0x6c6: V493 = M[0x40]
0x6ca: V494 = SUB V492 V493
0x6cb: V495 = 0x20
0x6cd: V496 = ADD 0x20 V494
0x6cf: RETURN V493 V496
---
Entry stack: [V11, 0x6be, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6be]

================================

Block 0x6d0
[0x6d0:0x6d7]
---
Predecessors: [0x40]
Successors: [0x6d8, 0x6dc]
---
0x6d0 JUMPDEST
0x6d1 CALLVALUE
0x6d2 DUP1
0x6d3 ISZERO
0x6d4 PUSH2 0x6dc
0x6d7 JUMPI
---
0x6d0: JUMPDEST 
0x6d1: V497 = CALLVALUE
0x6d3: V498 = ISZERO V497
0x6d4: V499 = 0x6dc
0x6d7: JUMPI 0x6dc V498
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V497]
Exit stack: [V11, V497]

================================

Block 0x6d8
[0x6d8:0x6db]
---
Predecessors: [0x6d0]
Successors: []
---
0x6d8 PUSH1 0x0
0x6da DUP1
0x6db REVERT
---
0x6d8: V500 = 0x0
0x6db: REVERT 0x0 0x0
---
Entry stack: [V11, V497]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V497]

================================

Block 0x6dc
[0x6dc:0x6e4]
---
Predecessors: [0x6d0]
Successors: [0x88d]
---
0x6dc JUMPDEST
0x6dd POP
0x6de PUSH2 0x6be
0x6e1 PUSH2 0x88d
0x6e4 JUMP
---
0x6dc: JUMPDEST 
0x6de: V501 = 0x6be
0x6e1: V502 = 0x88d
0x6e4: JUMP 0x88d
---
Entry stack: [V11, V497]
Stack pops: 1
Stack additions: [0x6be]
Exit stack: [V11, 0x6be]

================================

Block 0x6e5
[0x6e5:0x6ec]
---
Predecessors: [0x4b]
Successors: [0x6ed, 0x6f1]
---
0x6e5 JUMPDEST
0x6e6 CALLVALUE
0x6e7 DUP1
0x6e8 ISZERO
0x6e9 PUSH2 0x6f1
0x6ec JUMPI
---
0x6e5: JUMPDEST 
0x6e6: V503 = CALLVALUE
0x6e8: V504 = ISZERO V503
0x6e9: V505 = 0x6f1
0x6ec: JUMPI 0x6f1 V504
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V503]
Exit stack: [V11, V503]

================================

Block 0x6ed
[0x6ed:0x6f0]
---
Predecessors: [0x6e5]
Successors: []
---
0x6ed PUSH1 0x0
0x6ef DUP1
0x6f0 REVERT
---
0x6ed: V506 = 0x0
0x6f0: REVERT 0x0 0x0
---
Entry stack: [V11, V503]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V503]

================================

Block 0x6f1
[0x6f1:0x70e]
---
Predecessors: [0x6e5]
Successors: [0x893]
---
0x6f1 JUMPDEST
0x6f2 POP
0x6f3 PUSH2 0x70f
0x6f6 PUSH1 0x1
0x6f8 PUSH1 0xa0
0x6fa PUSH1 0x2
0x6fc EXP
0x6fd SUB
0x6fe PUSH1 0x4
0x700 CALLDATALOAD
0x701 DUP2
0x702 AND
0x703 SWAP1
0x704 PUSH1 0x24
0x706 CALLDATALOAD
0x707 AND
0x708 PUSH1 0x44
0x70a CALLDATALOAD
0x70b PUSH2 0x893
0x70e JUMP
---
0x6f1: JUMPDEST 
0x6f3: V507 = 0x70f
0x6f6: V508 = 0x1
0x6f8: V509 = 0xa0
0x6fa: V510 = 0x2
0x6fc: V511 = EXP 0x2 0xa0
0x6fd: V512 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fe: V513 = 0x4
0x700: V514 = CALLDATALOAD 0x4
0x702: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x704: V516 = 0x24
0x706: V517 = CALLDATALOAD 0x24
0x707: V518 = AND V517 0xffffffffffffffffffffffffffffffffffffffff
0x708: V519 = 0x44
0x70a: V520 = CALLDATALOAD 0x44
0x70b: V521 = 0x893
0x70e: JUMP 0x893
---
Entry stack: [V11, V503]
Stack pops: 1
Stack additions: [0x70f, V515, V518, V520]
Exit stack: [V11, 0x70f, V515, V518, V520]

================================

Block 0x70f
[0x70f:0x722]
---
Predecessors: [0x99c]
Successors: []
---
0x70f JUMPDEST
0x710 PUSH1 0x40
0x712 DUP1
0x713 MLOAD
0x714 SWAP2
0x715 ISZERO
0x716 ISZERO
0x717 DUP3
0x718 MSTORE
0x719 MLOAD
0x71a SWAP1
0x71b DUP2
0x71c SWAP1
0x71d SUB
0x71e PUSH1 0x20
0x720 ADD
0x721 SWAP1
0x722 RETURN
---
0x70f: JUMPDEST 
0x710: V522 = 0x40
0x713: V523 = M[0x40]
0x715: V524 = ISZERO V738
0x716: V525 = ISZERO V524
0x718: M[V523] = V525
0x719: V526 = M[0x40]
0x71d: V527 = SUB V523 V526
0x71e: V528 = 0x20
0x720: V529 = ADD 0x20 V527
0x722: RETURN V526 V529
---
Entry stack: [V11, V738]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x723
[0x723:0x72a]
---
Predecessors: [0x56]
Successors: [0x72b, 0x72f]
---
0x723 JUMPDEST
0x724 CALLVALUE
0x725 DUP1
0x726 ISZERO
0x727 PUSH2 0x72f
0x72a JUMPI
---
0x723: JUMPDEST 
0x724: V530 = CALLVALUE
0x726: V531 = ISZERO V530
0x727: V532 = 0x72f
0x72a: JUMPI 0x72f V531
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V530]
Exit stack: [V11, V530]

================================

Block 0x72b
[0x72b:0x72e]
---
Predecessors: [0x723]
Successors: []
---
0x72b PUSH1 0x0
0x72d DUP1
0x72e REVERT
---
0x72b: V533 = 0x0
0x72e: REVERT 0x0 0x0
---
Entry stack: [V11, V530]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V530]

================================

Block 0x72f
[0x72f:0x737]
---
Predecessors: [0x723]
Successors: [0x9a6]
---
0x72f JUMPDEST
0x730 POP
0x731 PUSH2 0x6be
0x734 PUSH2 0x9a6
0x737 JUMP
---
0x72f: JUMPDEST 
0x731: V534 = 0x6be
0x734: V535 = 0x9a6
0x737: JUMP 0x9a6
---
Entry stack: [V11, V530]
Stack pops: 1
Stack additions: [0x6be]
Exit stack: [V11, 0x6be]

================================

Block 0x738
[0x738:0x73f]
---
Predecessors: [0x61]
Successors: [0x740, 0x744]
---
0x738 JUMPDEST
0x739 CALLVALUE
0x73a DUP1
0x73b ISZERO
0x73c PUSH2 0x744
0x73f JUMPI
---
0x738: JUMPDEST 
0x739: V536 = CALLVALUE
0x73b: V537 = ISZERO V536
0x73c: V538 = 0x744
0x73f: JUMPI 0x744 V537
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V536]
Exit stack: [V11, V536]

================================

Block 0x740
[0x740:0x743]
---
Predecessors: [0x738]
Successors: []
---
0x740 PUSH1 0x0
0x742 DUP1
0x743 REVERT
---
0x740: V539 = 0x0
0x743: REVERT 0x0 0x0
---
Entry stack: [V11, V536]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V536]

================================

Block 0x744
[0x744:0x74f]
---
Predecessors: [0x738]
Successors: [0x9ac]
---
0x744 JUMPDEST
0x745 POP
0x746 PUSH2 0x750
0x749 PUSH1 0x4
0x74b CALLDATALOAD
0x74c PUSH2 0x9ac
0x74f JUMP
---
0x744: JUMPDEST 
0x746: V540 = 0x750
0x749: V541 = 0x4
0x74b: V542 = CALLDATALOAD 0x4
0x74c: V543 = 0x9ac
0x74f: JUMP 0x9ac
---
Entry stack: [V11, V536]
Stack pops: 1
Stack additions: [0x750, V542]
Exit stack: [V11, 0x750, V542]

================================

Block 0x750
[0x750:0x751]
---
Predecessors: [0xa27, 0xa8f, 0xc04]
Successors: []
---
0x750 JUMPDEST
0x751 STOP
---
0x750: JUMPDEST 
0x751: STOP 
---
Entry stack: [V132, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V132, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x752
[0x752:0x759]
---
Predecessors: [0x6c]
Successors: [0x75a, 0x75e]
---
0x752 JUMPDEST
0x753 CALLVALUE
0x754 DUP1
0x755 ISZERO
0x756 PUSH2 0x75e
0x759 JUMPI
---
0x752: JUMPDEST 
0x753: V544 = CALLVALUE
0x755: V545 = ISZERO V544
0x756: V546 = 0x75e
0x759: JUMPI 0x75e V545
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V544]
Exit stack: [V11, V544]

================================

Block 0x75a
[0x75a:0x75d]
---
Predecessors: [0x752]
Successors: []
---
0x75a PUSH1 0x0
0x75c DUP1
0x75d REVERT
---
0x75a: V547 = 0x0
0x75d: REVERT 0x0 0x0
---
Entry stack: [V11, V544]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V544]

================================

Block 0x75e
[0x75e:0x766]
---
Predecessors: [0x752]
Successors: [0xa2d]
---
0x75e JUMPDEST
0x75f POP
0x760 PUSH2 0x750
0x763 PUSH2 0xa2d
0x766 JUMP
---
0x75e: JUMPDEST 
0x760: V548 = 0x750
0x763: V549 = 0xa2d
0x766: JUMP 0xa2d
---
Entry stack: [V11, V544]
Stack pops: 1
Stack additions: [0x750]
Exit stack: [V11, 0x750]

================================

Block 0x767
[0x767:0x76e]
---
Predecessors: [0x77]
Successors: [0x76f, 0x773]
---
0x767 JUMPDEST
0x768 CALLVALUE
0x769 DUP1
0x76a ISZERO
0x76b PUSH2 0x773
0x76e JUMPI
---
0x767: JUMPDEST 
0x768: V550 = CALLVALUE
0x76a: V551 = ISZERO V550
0x76b: V552 = 0x773
0x76e: JUMPI 0x773 V551
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V550]
Exit stack: [V11, V550]

================================

Block 0x76f
[0x76f:0x772]
---
Predecessors: [0x767]
Successors: []
---
0x76f PUSH1 0x0
0x771 DUP1
0x772 REVERT
---
0x76f: V553 = 0x0
0x772: REVERT 0x0 0x0
---
Entry stack: [V11, V550]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V550]

================================

Block 0x773
[0x773:0x77b]
---
Predecessors: [0x767]
Successors: [0xaf4]
---
0x773 JUMPDEST
0x774 POP
0x775 PUSH2 0x77c
0x778 PUSH2 0xaf4
0x77b JUMP
---
0x773: JUMPDEST 
0x775: V554 = 0x77c
0x778: V555 = 0xaf4
0x77b: JUMP 0xaf4
---
Entry stack: [V11, V550]
Stack pops: 1
Stack additions: [0x77c]
Exit stack: [V11, 0x77c]

================================

Block 0x77c
[0x77c:0x797]
---
Predecessors: [0xaf4, 0xb03, 0xb12, 0xb21]
Successors: []
---
0x77c JUMPDEST
0x77d PUSH1 0x40
0x77f DUP1
0x780 MLOAD
0x781 PUSH1 0x1
0x783 PUSH1 0xa0
0x785 PUSH1 0x2
0x787 EXP
0x788 SUB
0x789 SWAP1
0x78a SWAP3
0x78b AND
0x78c DUP3
0x78d MSTORE
0x78e MLOAD
0x78f SWAP1
0x790 DUP2
0x791 SWAP1
0x792 SUB
0x793 PUSH1 0x20
0x795 ADD
0x796 SWAP1
0x797 RETURN
---
0x77c: JUMPDEST 
0x77d: V556 = 0x40
0x780: V557 = M[0x40]
0x781: V558 = 0x1
0x783: V559 = 0xa0
0x785: V560 = 0x2
0x787: V561 = EXP 0x2 0xa0
0x788: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78b: V563 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x78d: M[V557] = V563
0x78e: V564 = M[0x40]
0x792: V565 = SUB V557 V564
0x793: V566 = 0x20
0x795: V567 = ADD 0x20 V565
0x797: RETURN V564 V567
---
Entry stack: [V11, 0x77c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77c]

================================

Block 0x798
[0x798:0x79f]
---
Predecessors: [0x82]
Successors: [0x7a0, 0x7a4]
---
0x798 JUMPDEST
0x799 CALLVALUE
0x79a DUP1
0x79b ISZERO
0x79c PUSH2 0x7a4
0x79f JUMPI
---
0x798: JUMPDEST 
0x799: V568 = CALLVALUE
0x79b: V569 = ISZERO V568
0x79c: V570 = 0x7a4
0x79f: JUMPI 0x7a4 V569
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V568]
Exit stack: [V11, V568]

================================

Block 0x7a0
[0x7a0:0x7a3]
---
Predecessors: [0x798]
Successors: []
---
0x7a0 PUSH1 0x0
0x7a2 DUP1
0x7a3 REVERT
---
0x7a0: V571 = 0x0
0x7a3: REVERT 0x0 0x0
---
Entry stack: [V11, V568]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V568]

================================

Block 0x7a4
[0x7a4:0x7ac]
---
Predecessors: [0x798]
Successors: [0xb03]
---
0x7a4 JUMPDEST
0x7a5 POP
0x7a6 PUSH2 0x77c
0x7a9 PUSH2 0xb03
0x7ac JUMP
---
0x7a4: JUMPDEST 
0x7a6: V572 = 0x77c
0x7a9: V573 = 0xb03
0x7ac: JUMP 0xb03
---
Entry stack: [V11, V568]
Stack pops: 1
Stack additions: [0x77c]
Exit stack: [V11, 0x77c]

================================

Block 0x7ad
[0x7ad:0x7b4]
---
Predecessors: [0x8d]
Successors: [0x7b5, 0x7b9]
---
0x7ad JUMPDEST
0x7ae CALLVALUE
0x7af DUP1
0x7b0 ISZERO
0x7b1 PUSH2 0x7b9
0x7b4 JUMPI
---
0x7ad: JUMPDEST 
0x7ae: V574 = CALLVALUE
0x7b0: V575 = ISZERO V574
0x7b1: V576 = 0x7b9
0x7b4: JUMPI 0x7b9 V575
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V574]
Exit stack: [V11, V574]

================================

Block 0x7b5
[0x7b5:0x7b8]
---
Predecessors: [0x7ad]
Successors: []
---
0x7b5 PUSH1 0x0
0x7b7 DUP1
0x7b8 REVERT
---
0x7b5: V577 = 0x0
0x7b8: REVERT 0x0 0x0
---
Entry stack: [V11, V574]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V574]

================================

Block 0x7b9
[0x7b9:0x7c1]
---
Predecessors: [0x7ad]
Successors: [0xb12]
---
0x7b9 JUMPDEST
0x7ba POP
0x7bb PUSH2 0x77c
0x7be PUSH2 0xb12
0x7c1 JUMP
---
0x7b9: JUMPDEST 
0x7bb: V578 = 0x77c
0x7be: V579 = 0xb12
0x7c1: JUMP 0xb12
---
Entry stack: [V11, V574]
Stack pops: 1
Stack additions: [0x77c]
Exit stack: [V11, 0x77c]

================================

Block 0x7c2
[0x7c2:0x7c9]
---
Predecessors: [0x98]
Successors: [0x7ca, 0x7ce]
---
0x7c2 JUMPDEST
0x7c3 CALLVALUE
0x7c4 DUP1
0x7c5 ISZERO
0x7c6 PUSH2 0x7ce
0x7c9 JUMPI
---
0x7c2: JUMPDEST 
0x7c3: V580 = CALLVALUE
0x7c5: V581 = ISZERO V580
0x7c6: V582 = 0x7ce
0x7c9: JUMPI 0x7ce V581
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V580]
Exit stack: [V11, V580]

================================

Block 0x7ca
[0x7ca:0x7cd]
---
Predecessors: [0x7c2]
Successors: []
---
0x7ca PUSH1 0x0
0x7cc DUP1
0x7cd REVERT
---
0x7ca: V583 = 0x0
0x7cd: REVERT 0x0 0x0
---
Entry stack: [V11, V580]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V580]

================================

Block 0x7ce
[0x7ce:0x7d6]
---
Predecessors: [0x7c2]
Successors: [0xb21]
---
0x7ce JUMPDEST
0x7cf POP
0x7d0 PUSH2 0x77c
0x7d3 PUSH2 0xb21
0x7d6 JUMP
---
0x7ce: JUMPDEST 
0x7d0: V584 = 0x77c
0x7d3: V585 = 0xb21
0x7d6: JUMP 0xb21
---
Entry stack: [V11, V580]
Stack pops: 1
Stack additions: [0x77c]
Exit stack: [V11, 0x77c]

================================

Block 0x7d7
[0x7d7:0x7de]
---
Predecessors: [0xa3]
Successors: [0x7df, 0x7e3]
---
0x7d7 JUMPDEST
0x7d8 CALLVALUE
0x7d9 DUP1
0x7da ISZERO
0x7db PUSH2 0x7e3
0x7de JUMPI
---
0x7d7: JUMPDEST 
0x7d8: V586 = CALLVALUE
0x7da: V587 = ISZERO V586
0x7db: V588 = 0x7e3
0x7de: JUMPI 0x7e3 V587
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V586]
Exit stack: [V11, V586]

================================

Block 0x7df
[0x7df:0x7e2]
---
Predecessors: [0x7d7]
Successors: []
---
0x7df PUSH1 0x0
0x7e1 DUP1
0x7e2 REVERT
---
0x7df: V589 = 0x0
0x7e2: REVERT 0x0 0x0
---
Entry stack: [V11, V586]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V586]

================================

Block 0x7e3
[0x7e3:0x7f7]
---
Predecessors: [0x7d7]
Successors: [0xb30]
---
0x7e3 JUMPDEST
0x7e4 POP
0x7e5 PUSH2 0x6be
0x7e8 PUSH1 0x1
0x7ea PUSH1 0xa0
0x7ec PUSH1 0x2
0x7ee EXP
0x7ef SUB
0x7f0 PUSH1 0x4
0x7f2 CALLDATALOAD
0x7f3 AND
0x7f4 PUSH2 0xb30
0x7f7 JUMP
---
0x7e3: JUMPDEST 
0x7e5: V590 = 0x6be
0x7e8: V591 = 0x1
0x7ea: V592 = 0xa0
0x7ec: V593 = 0x2
0x7ee: V594 = EXP 0x2 0xa0
0x7ef: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f0: V596 = 0x4
0x7f2: V597 = CALLDATALOAD 0x4
0x7f3: V598 = AND V597 0xffffffffffffffffffffffffffffffffffffffff
0x7f4: V599 = 0xb30
0x7f7: JUMP 0xb30
---
Entry stack: [V11, V586]
Stack pops: 1
Stack additions: [0x6be, V598]
Exit stack: [V11, 0x6be, V598]

================================

Block 0x7f8
[0x7f8:0x7ff]
---
Predecessors: [0xae]
Successors: [0x800, 0x804]
---
0x7f8 JUMPDEST
0x7f9 CALLVALUE
0x7fa DUP1
0x7fb ISZERO
0x7fc PUSH2 0x804
0x7ff JUMPI
---
0x7f8: JUMPDEST 
0x7f9: V600 = CALLVALUE
0x7fb: V601 = ISZERO V600
0x7fc: V602 = 0x804
0x7ff: JUMPI 0x804 V601
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V600]
Exit stack: [V11, V600]

================================

Block 0x800
[0x800:0x803]
---
Predecessors: [0x7f8]
Successors: []
---
0x800 PUSH1 0x0
0x802 DUP1
0x803 REVERT
---
0x800: V603 = 0x0
0x803: REVERT 0x0 0x0
---
Entry stack: [V11, V600]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V600]

================================

Block 0x804
[0x804:0x818]
---
Predecessors: [0x7f8]
Successors: [0xb42]
---
0x804 JUMPDEST
0x805 POP
0x806 PUSH2 0x750
0x809 PUSH1 0x1
0x80b PUSH1 0xa0
0x80d PUSH1 0x2
0x80f EXP
0x810 SUB
0x811 PUSH1 0x4
0x813 CALLDATALOAD
0x814 AND
0x815 PUSH2 0xb42
0x818 JUMP
---
0x804: JUMPDEST 
0x806: V604 = 0x750
0x809: V605 = 0x1
0x80b: V606 = 0xa0
0x80d: V607 = 0x2
0x80f: V608 = EXP 0x2 0xa0
0x810: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x811: V610 = 0x4
0x813: V611 = CALLDATALOAD 0x4
0x814: V612 = AND V611 0xffffffffffffffffffffffffffffffffffffffff
0x815: V613 = 0xb42
0x818: JUMP 0xb42
---
Entry stack: [V11, V600]
Stack pops: 1
Stack additions: [0x750, V612]
Exit stack: [V11, 0x750, V612]

================================

Block 0x819
[0x819:0x823]
---
Predecessors: [0x125, 0x308, 0x452, 0x466]
Successors: [0x824, 0x825]
---
0x819 JUMPDEST
0x81a PUSH1 0x0
0x81c DUP3
0x81d DUP3
0x81e GT
0x81f ISZERO
0x820 PUSH2 0x825
0x823 JUMPI
---
0x819: JUMPDEST 
0x81a: V614 = 0x0
0x81e: V615 = GT S0 S1
0x81f: V616 = ISZERO V615
0x820: V617 = 0x825
0x823: JUMPI 0x825 V616
---
Entry stack: [V132, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V132, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x824
[0x824:0x824]
---
Predecessors: [0x819]
Successors: []
---
0x824 INVALID
---
0x824: INVALID 
---
Entry stack: [V132, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V132, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x825
[0x825:0x829]
---
Predecessors: [0x819]
Successors: [0x82a]
---
0x825 JUMPDEST
0x826 POP
0x827 DUP1
0x828 DUP3
0x829 SUB
---
0x825: JUMPDEST 
0x829: V618 = SUB S2 S1
---
Entry stack: [V132, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V618]
Exit stack: [V132, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V618]

================================

Block 0x82a
[0x82a:0x82f]
---
Predecessors: [0x825, 0x83a, 0x851, 0x859]
Successors: [0x13b, 0x2a5, 0x2c1, 0x2fc, 0x308, 0x314, 0x337, 0x466, 0x47d, 0x56e, 0x591, 0xa27]
---
0x82a JUMPDEST
0x82b SWAP3
0x82c SWAP2
0x82d POP
0x82e POP
0x82f JUMP
---
0x82a: JUMPDEST 
0x82f: JUMP S3
---
Entry stack: [V132, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V132, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0]

================================

Block 0x830
[0x830:0x839]
---
Predecessors: [0x28e, 0x2c1, 0x49d, 0x4bc, 0x4f2, 0x52b]
Successors: [0x83a, 0x841]
---
0x830 JUMPDEST
0x831 PUSH1 0x0
0x833 DUP3
0x834 ISZERO
0x835 ISZERO
0x836 PUSH2 0x841
0x839 JUMPI
---
0x830: JUMPDEST 
0x831: V619 = 0x0
0x834: V620 = ISZERO S1
0x835: V621 = ISZERO V620
0x836: V622 = 0x841
0x839: JUMPI 0x841 V621
---
Entry stack: [V132, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S3, {0x2a5, 0x2fc}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V132, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S3, {0x2a5, 0x2fc}, S1, S0, 0x0]

================================

Block 0x83a
[0x83a:0x840]
---
Predecessors: [0x830]
Successors: [0x82a]
---
0x83a POP
0x83b PUSH1 0x0
0x83d PUSH2 0x82a
0x840 JUMP
---
0x83b: V623 = 0x0
0x83d: V624 = 0x82a
0x840: JUMP 0x82a
---
Entry stack: [V132, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S4, {0x2a5, 0x2fc}, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V132, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S4, {0x2a5, 0x2fc}, S2, S1, 0x0]

================================

Block 0x841
[0x841:0x84f]
---
Predecessors: [0x830]
Successors: [0x850, 0x851]
---
0x841 JUMPDEST
0x842 POP
0x843 DUP2
0x844 DUP2
0x845 MUL
0x846 DUP2
0x847 DUP4
0x848 DUP3
0x849 DUP2
0x84a ISZERO
0x84b ISZERO
0x84c PUSH2 0x851
0x84f JUMPI
---
0x841: JUMPDEST 
0x845: V625 = MUL S1 S2
0x84a: V626 = ISZERO S2
0x84b: V627 = ISZERO V626
0x84c: V628 = 0x851
0x84f: JUMPI 0x851 V627
---
Entry stack: [V132, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S4, {0x2a5, 0x2fc}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V625, S1, S2, V625]
Exit stack: [V132, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S4, {0x2a5, 0x2fc}, S2, S1, V625, S1, S2, V625]

================================

Block 0x850
[0x850:0x850]
---
Predecessors: [0x841]
Successors: []
---
0x850 INVALID
---
0x850: INVALID 
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S7, {0x2a5, 0x2fc}, S5, S4, V625, S2, S1, V625]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S7, {0x2a5, 0x2fc}, S5, S4, V625, S2, S1, V625]

================================

Block 0x851
[0x851:0x857]
---
Predecessors: [0x841]
Successors: [0x82a, 0x858]
---
0x851 JUMPDEST
0x852 DIV
0x853 EQ
0x854 PUSH2 0x82a
0x857 JUMPI
---
0x851: JUMPDEST 
0x852: V629 = DIV V625 S1
0x853: V630 = EQ V629 S2
0x854: V631 = 0x82a
0x857: JUMPI 0x82a V630
---
Entry stack: [V132, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S7, {0x2a5, 0x2fc}, S5, S4, V625, S2, S1, V625]
Stack pops: 3
Stack additions: []
Exit stack: [V132, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S7, {0x2a5, 0x2fc}, S5, S4, V625]

================================

Block 0x858
[0x858:0x858]
---
Predecessors: [0x851]
Successors: []
---
0x858 INVALID
---
0x858: INVALID 
---
Entry stack: [V132, 0x0, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S4, {0x2a5, 0x2fc}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V132, 0x0, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S4, {0x2a5, 0x2fc}, S2, S1, S0]

================================

Block 0x859
[0x859:0x864]
---
Predecessors: [0x2a5, 0x314, 0x561, 0x56e, 0xa0e]
Successors: [0x82a, 0x865]
---
0x859 JUMPDEST
0x85a DUP2
0x85b DUP2
0x85c ADD
0x85d DUP3
0x85e DUP2
0x85f LT
0x860 ISZERO
0x861 PUSH2 0x82a
0x864 JUMPI
---
0x859: JUMPDEST 
0x85c: V632 = ADD S0 S1
0x85f: V633 = LT V632 S1
0x860: V634 = ISZERO V633
0x861: V635 = 0x82a
0x864: JUMPI 0x82a V634
---
Entry stack: [V132, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V632]
Exit stack: [V132, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V632]

================================

Block 0x865
[0x865:0x865]
---
Predecessors: [0x859]
Successors: []
---
0x865 INVALID
---
0x865: INVALID 
---
Entry stack: [V132, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V632]
Stack pops: 0
Stack additions: []
Exit stack: [V132, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V632]

================================

Block 0x866
[0x866:0x871]
---
Predecessors: [0x2fc]
Successors: [0x872, 0x873]
---
0x866 JUMPDEST
0x867 PUSH1 0x0
0x869 DUP2
0x86a DUP4
0x86b DUP2
0x86c ISZERO
0x86d ISZERO
0x86e PUSH2 0x873
0x871 JUMPI
---
0x866: JUMPDEST 
0x867: V636 = 0x0
0x86c: V637 = ISZERO S0
0x86d: V638 = ISZERO V637
0x86e: V639 = 0x873
0x871: JUMPI 0x873 V638
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S0, S1]
Exit stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, S0, S1]

================================

Block 0x872
[0x872:0x872]
---
Predecessors: [0x866]
Successors: []
---
0x872 INVALID
---
0x872: INVALID 
---
Entry stack: [V132, 0x0, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V132, 0x0, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S4, S3, 0x0, S1, S0]

================================

Block 0x873
[0x873:0x87a]
---
Predecessors: [0x866]
Successors: [0x308, 0x4b9, 0x4f2, 0x52b, 0x561]
---
0x873 JUMPDEST
0x874 DIV
0x875 SWAP4
0x876 SWAP3
0x877 POP
0x878 POP
0x879 POP
0x87a JUMP
---
0x873: JUMPDEST 
0x874: V640 = DIV S0 S1
0x87a: JUMP {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}
---
Entry stack: [V132, 0x0, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x308, 0x4b9, 0x4f2, 0x52b, 0x561}, S4, S3, 0x0, S1, S0]
Stack pops: 6
Stack additions: [V640]
Exit stack: [V132, 0x0, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V640]

================================

Block 0x87b
[0x87b:0x88c]
---
Predecessors: [0x6a9]
Successors: [0x6be]
---
0x87b JUMPDEST
0x87c PUSH1 0x6
0x87e PUSH1 0x20
0x880 MSTORE
0x881 PUSH1 0x0
0x883 SWAP1
0x884 DUP2
0x885 MSTORE
0x886 PUSH1 0x40
0x888 SWAP1
0x889 SHA3
0x88a SLOAD
0x88b DUP2
0x88c JUMP
---
0x87b: JUMPDEST 
0x87c: V641 = 0x6
0x87e: V642 = 0x20
0x880: M[0x20] = 0x6
0x881: V643 = 0x0
0x885: M[0x0] = V489
0x886: V644 = 0x40
0x889: V645 = SHA3 0x0 0x40
0x88a: V646 = S[V645]
0x88c: JUMP 0x6be
---
Entry stack: [V11, 0x6be, V489]
Stack pops: 2
Stack additions: [S1, V646]
Exit stack: [V11, 0x6be, V646]

================================

Block 0x88d
[0x88d:0x892]
---
Predecessors: [0x6dc]
Successors: [0x6be]
---
0x88d JUMPDEST
0x88e PUSH1 0x5
0x890 SLOAD
0x891 DUP2
0x892 JUMP
---
0x88d: JUMPDEST 
0x88e: V647 = 0x5
0x890: V648 = S[0x5]
0x892: JUMP 0x6be
---
Entry stack: [V11, 0x6be]
Stack pops: 1
Stack additions: [S0, V648]
Exit stack: [V11, 0x6be, V648]

================================

Block 0x893
[0x893:0x8a6]
---
Predecessors: [0x6f1]
Successors: [0x8a7, 0x8f6]
---
0x893 JUMPDEST
0x894 PUSH1 0x0
0x896 DUP1
0x897 SLOAD
0x898 PUSH1 0x1
0x89a PUSH1 0xa0
0x89c PUSH1 0x2
0x89e EXP
0x89f SUB
0x8a0 AND
0x8a1 CALLER
0x8a2 EQ
0x8a3 PUSH2 0x8f6
0x8a6 JUMPI
---
0x893: JUMPDEST 
0x894: V649 = 0x0
0x897: V650 = S[0x0]
0x898: V651 = 0x1
0x89a: V652 = 0xa0
0x89c: V653 = 0x2
0x89e: V654 = EXP 0x2 0xa0
0x89f: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a0: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x8a1: V657 = CALLER
0x8a2: V658 = EQ V657 V656
0x8a3: V659 = 0x8f6
0x8a6: JUMPI 0x8f6 V658
---
Entry stack: [V11, 0x70f, V515, V518, V520]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x70f, V515, V518, V520, 0x0]

================================

Block 0x8a7
[0x8a7:0x8f5]
---
Predecessors: [0x893]
Successors: []
---
0x8a7 PUSH1 0x40
0x8a9 DUP1
0x8aa MLOAD
0x8ab PUSH1 0xe5
0x8ad PUSH1 0x2
0x8af EXP
0x8b0 PUSH3 0x461bcd
0x8b4 MUL
0x8b5 DUP2
0x8b6 MSTORE
0x8b7 PUSH1 0x20
0x8b9 PUSH1 0x4
0x8bb DUP3
0x8bc ADD
0x8bd MSTORE
0x8be PUSH1 0x13
0x8c0 PUSH1 0x24
0x8c2 DUP3
0x8c3 ADD
0x8c4 MSTORE
0x8c5 PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x8e6 PUSH1 0x44
0x8e8 DUP3
0x8e9 ADD
0x8ea MSTORE
0x8eb SWAP1
0x8ec MLOAD
0x8ed SWAP1
0x8ee DUP2
0x8ef SWAP1
0x8f0 SUB
0x8f1 PUSH1 0x64
0x8f3 ADD
0x8f4 SWAP1
0x8f5 REVERT
---
0x8a7: V660 = 0x40
0x8aa: V661 = M[0x40]
0x8ab: V662 = 0xe5
0x8ad: V663 = 0x2
0x8af: V664 = EXP 0x2 0xe5
0x8b0: V665 = 0x461bcd
0x8b4: V666 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x8b6: M[V661] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8b7: V667 = 0x20
0x8b9: V668 = 0x4
0x8bc: V669 = ADD V661 0x4
0x8bd: M[V669] = 0x20
0x8be: V670 = 0x13
0x8c0: V671 = 0x24
0x8c3: V672 = ADD V661 0x24
0x8c4: M[V672] = 0x13
0x8c5: V673 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x8e6: V674 = 0x44
0x8e9: V675 = ADD V661 0x44
0x8ea: M[V675] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x8ec: V676 = M[0x40]
0x8f0: V677 = SUB V661 V676
0x8f1: V678 = 0x64
0x8f3: V679 = ADD 0x64 V677
0x8f5: REVERT V676 V679
---
Entry stack: [V11, 0x70f, V515, V518, V520, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70f, V515, V518, V520, 0x0]

================================

Block 0x8f6
[0x8f6:0x96d]
---
Predecessors: [0x893]
Successors: [0x96e, 0x972]
---
0x8f6 JUMPDEST
0x8f7 DUP4
0x8f8 PUSH1 0x1
0x8fa PUSH1 0xa0
0x8fc PUSH1 0x2
0x8fe EXP
0x8ff SUB
0x900 AND
0x901 PUSH4 0xa9059cbb
0x906 DUP5
0x907 DUP5
0x908 PUSH1 0x40
0x90a MLOAD
0x90b DUP4
0x90c PUSH4 0xffffffff
0x911 AND
0x912 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x930 MUL
0x931 DUP2
0x932 MSTORE
0x933 PUSH1 0x4
0x935 ADD
0x936 DUP1
0x937 DUP4
0x938 PUSH1 0x1
0x93a PUSH1 0xa0
0x93c PUSH1 0x2
0x93e EXP
0x93f SUB
0x940 AND
0x941 PUSH1 0x1
0x943 PUSH1 0xa0
0x945 PUSH1 0x2
0x947 EXP
0x948 SUB
0x949 AND
0x94a DUP2
0x94b MSTORE
0x94c PUSH1 0x20
0x94e ADD
0x94f DUP3
0x950 DUP2
0x951 MSTORE
0x952 PUSH1 0x20
0x954 ADD
0x955 SWAP3
0x956 POP
0x957 POP
0x958 POP
0x959 PUSH1 0x20
0x95b PUSH1 0x40
0x95d MLOAD
0x95e DUP1
0x95f DUP4
0x960 SUB
0x961 DUP2
0x962 PUSH1 0x0
0x964 DUP8
0x965 DUP1
0x966 EXTCODESIZE
0x967 ISZERO
0x968 DUP1
0x969 ISZERO
0x96a PUSH2 0x972
0x96d JUMPI
---
0x8f6: JUMPDEST 
0x8f8: V680 = 0x1
0x8fa: V681 = 0xa0
0x8fc: V682 = 0x2
0x8fe: V683 = EXP 0x2 0xa0
0x8ff: V684 = SUB 0x10000000000000000000000000000000000000000 0x1
0x900: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x901: V686 = 0xa9059cbb
0x908: V687 = 0x40
0x90a: V688 = M[0x40]
0x90c: V689 = 0xffffffff
0x911: V690 = AND 0xffffffff 0xa9059cbb
0x912: V691 = 0x100000000000000000000000000000000000000000000000000000000
0x930: V692 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x932: M[V688] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x933: V693 = 0x4
0x935: V694 = ADD 0x4 V688
0x938: V695 = 0x1
0x93a: V696 = 0xa0
0x93c: V697 = 0x2
0x93e: V698 = EXP 0x2 0xa0
0x93f: V699 = SUB 0x10000000000000000000000000000000000000000 0x1
0x940: V700 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x941: V701 = 0x1
0x943: V702 = 0xa0
0x945: V703 = 0x2
0x947: V704 = EXP 0x2 0xa0
0x948: V705 = SUB 0x10000000000000000000000000000000000000000 0x1
0x949: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0x94b: M[V694] = V706
0x94c: V707 = 0x20
0x94e: V708 = ADD 0x20 V694
0x951: M[V708] = V520
0x952: V709 = 0x20
0x954: V710 = ADD 0x20 V708
0x959: V711 = 0x20
0x95b: V712 = 0x40
0x95d: V713 = M[0x40]
0x960: V714 = SUB V710 V713
0x962: V715 = 0x0
0x966: V716 = EXTCODESIZE V685
0x967: V717 = ISZERO V716
0x969: V718 = ISZERO V717
0x96a: V719 = 0x972
0x96d: JUMPI 0x972 V718
---
Entry stack: [V11, 0x70f, V515, V518, V520, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V685, 0xa9059cbb, V710, 0x20, V713, V714, V713, 0x0, V685, V717]
Exit stack: [V11, 0x70f, V515, V518, V520, 0x0, V685, 0xa9059cbb, V710, 0x20, V713, V714, V713, 0x0, V685, V717]

================================

Block 0x96e
[0x96e:0x971]
---
Predecessors: [0x8f6]
Successors: []
---
0x96e PUSH1 0x0
0x970 DUP1
0x971 REVERT
---
0x96e: V720 = 0x0
0x971: REVERT 0x0 0x0
---
Entry stack: [V11, 0x70f, V515, V518, V520, 0x0, V685, 0xa9059cbb, V710, 0x20, V713, V714, V713, 0x0, V685, V717]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70f, V515, V518, V520, 0x0, V685, 0xa9059cbb, V710, 0x20, V713, V714, V713, 0x0, V685, V717]

================================

Block 0x972
[0x972:0x97c]
---
Predecessors: [0x8f6]
Successors: [0x97d, 0x986]
---
0x972 JUMPDEST
0x973 POP
0x974 GAS
0x975 CALL
0x976 ISZERO
0x977 DUP1
0x978 ISZERO
0x979 PUSH2 0x986
0x97c JUMPI
---
0x972: JUMPDEST 
0x974: V721 = GAS
0x975: V722 = CALL V721 V685 0x0 V713 V714 V713 0x20
0x976: V723 = ISZERO V722
0x978: V724 = ISZERO V723
0x979: V725 = 0x986
0x97c: JUMPI 0x986 V724
---
Entry stack: [V11, 0x70f, V515, V518, V520, 0x0, V685, 0xa9059cbb, V710, 0x20, V713, V714, V713, 0x0, V685, V717]
Stack pops: 7
Stack additions: [V723]
Exit stack: [V11, 0x70f, V515, V518, V520, 0x0, V685, 0xa9059cbb, V710, V723]

================================

Block 0x97d
[0x97d:0x985]
---
Predecessors: [0x972]
Successors: []
---
0x97d RETURNDATASIZE
0x97e PUSH1 0x0
0x980 DUP1
0x981 RETURNDATACOPY
0x982 RETURNDATASIZE
0x983 PUSH1 0x0
0x985 REVERT
---
0x97d: V726 = RETURNDATASIZE
0x97e: V727 = 0x0
0x981: RETURNDATACOPY 0x0 0x0 V726
0x982: V728 = RETURNDATASIZE
0x983: V729 = 0x0
0x985: REVERT 0x0 V728
---
Entry stack: [V11, 0x70f, V515, V518, V520, 0x0, V685, 0xa9059cbb, V710, V723]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70f, V515, V518, V520, 0x0, V685, 0xa9059cbb, V710, V723]

================================

Block 0x986
[0x986:0x997]
---
Predecessors: [0x972]
Successors: [0x998, 0x99c]
---
0x986 JUMPDEST
0x987 POP
0x988 POP
0x989 POP
0x98a POP
0x98b PUSH1 0x40
0x98d MLOAD
0x98e RETURNDATASIZE
0x98f PUSH1 0x20
0x991 DUP2
0x992 LT
0x993 ISZERO
0x994 PUSH2 0x99c
0x997 JUMPI
---
0x986: JUMPDEST 
0x98b: V730 = 0x40
0x98d: V731 = M[0x40]
0x98e: V732 = RETURNDATASIZE
0x98f: V733 = 0x20
0x992: V734 = LT V732 0x20
0x993: V735 = ISZERO V734
0x994: V736 = 0x99c
0x997: JUMPI 0x99c V735
---
Entry stack: [V11, 0x70f, V515, V518, V520, 0x0, V685, 0xa9059cbb, V710, V723]
Stack pops: 4
Stack additions: [V731, V732]
Exit stack: [V11, 0x70f, V515, V518, V520, 0x0, V731, V732]

================================

Block 0x998
[0x998:0x99b]
---
Predecessors: [0x986]
Successors: []
---
0x998 PUSH1 0x0
0x99a DUP1
0x99b REVERT
---
0x998: V737 = 0x0
0x99b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x70f, V515, V518, V520, 0x0, V731, V732]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70f, V515, V518, V520, 0x0, V731, V732]

================================

Block 0x99c
[0x99c:0x9a5]
---
Predecessors: [0x986]
Successors: [0x70f]
---
0x99c JUMPDEST
0x99d POP
0x99e MLOAD
0x99f SWAP5
0x9a0 SWAP4
0x9a1 POP
0x9a2 POP
0x9a3 POP
0x9a4 POP
0x9a5 JUMP
---
0x99c: JUMPDEST 
0x99e: V738 = M[V731]
0x9a5: JUMP 0x70f
---
Entry stack: [V11, 0x70f, V515, V518, V520, 0x0, V731, V732]
Stack pops: 7
Stack additions: [V738]
Exit stack: [V11, V738]

================================

Block 0x9a6
[0x9a6:0x9ab]
---
Predecessors: [0x72f]
Successors: [0x6be]
---
0x9a6 JUMPDEST
0x9a7 PUSH1 0x4
0x9a9 SLOAD
0x9aa DUP2
0x9ab JUMP
---
0x9a6: JUMPDEST 
0x9a7: V739 = 0x4
0x9a9: V740 = S[0x4]
0x9ab: JUMP 0x6be
---
Entry stack: [V11, 0x6be]
Stack pops: 1
Stack additions: [S0, V740]
Exit stack: [V11, 0x6be, V740]

================================

Block 0x9ac
[0x9ac:0x9be]
---
Predecessors: [0x744]
Successors: [0x9bf, 0xa0e]
---
0x9ac JUMPDEST
0x9ad PUSH1 0x0
0x9af SLOAD
0x9b0 PUSH1 0x1
0x9b2 PUSH1 0xa0
0x9b4 PUSH1 0x2
0x9b6 EXP
0x9b7 SUB
0x9b8 AND
0x9b9 CALLER
0x9ba EQ
0x9bb PUSH2 0xa0e
0x9be JUMPI
---
0x9ac: JUMPDEST 
0x9ad: V741 = 0x0
0x9af: V742 = S[0x0]
0x9b0: V743 = 0x1
0x9b2: V744 = 0xa0
0x9b4: V745 = 0x2
0x9b6: V746 = EXP 0x2 0xa0
0x9b7: V747 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b8: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V742
0x9b9: V749 = CALLER
0x9ba: V750 = EQ V749 V748
0x9bb: V751 = 0xa0e
0x9be: JUMPI 0xa0e V750
---
Entry stack: [V11, 0x750, V542]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x750, V542]

================================

Block 0x9bf
[0x9bf:0xa0d]
---
Predecessors: [0x9ac]
Successors: []
---
0x9bf PUSH1 0x40
0x9c1 DUP1
0x9c2 MLOAD
0x9c3 PUSH1 0xe5
0x9c5 PUSH1 0x2
0x9c7 EXP
0x9c8 PUSH3 0x461bcd
0x9cc MUL
0x9cd DUP2
0x9ce MSTORE
0x9cf PUSH1 0x20
0x9d1 PUSH1 0x4
0x9d3 DUP3
0x9d4 ADD
0x9d5 MSTORE
0x9d6 PUSH1 0x13
0x9d8 PUSH1 0x24
0x9da DUP3
0x9db ADD
0x9dc MSTORE
0x9dd PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x9fe PUSH1 0x44
0xa00 DUP3
0xa01 ADD
0xa02 MSTORE
0xa03 SWAP1
0xa04 MLOAD
0xa05 SWAP1
0xa06 DUP2
0xa07 SWAP1
0xa08 SUB
0xa09 PUSH1 0x64
0xa0b ADD
0xa0c SWAP1
0xa0d REVERT
---
0x9bf: V752 = 0x40
0x9c2: V753 = M[0x40]
0x9c3: V754 = 0xe5
0x9c5: V755 = 0x2
0x9c7: V756 = EXP 0x2 0xe5
0x9c8: V757 = 0x461bcd
0x9cc: V758 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x9ce: M[V753] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x9cf: V759 = 0x20
0x9d1: V760 = 0x4
0x9d4: V761 = ADD V753 0x4
0x9d5: M[V761] = 0x20
0x9d6: V762 = 0x13
0x9d8: V763 = 0x24
0x9db: V764 = ADD V753 0x24
0x9dc: M[V764] = 0x13
0x9dd: V765 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0x9fe: V766 = 0x44
0xa01: V767 = ADD V753 0x44
0xa02: M[V767] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0xa04: V768 = M[0x40]
0xa08: V769 = SUB V753 V768
0xa09: V770 = 0x64
0xa0b: V771 = ADD 0x64 V769
0xa0d: REVERT V768 V771
---
Entry stack: [V11, 0x750, V542]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x750, V542]

================================

Block 0xa0e
[0xa0e:0xa26]
---
Predecessors: [0x9ac]
Successors: [0x859]
---
0xa0e JUMPDEST
0xa0f PUSH1 0x4
0xa11 DUP2
0xa12 SWAP1
0xa13 SSTORE
0xa14 PUSH2 0xa27
0xa17 DUP2
0xa18 PUSH4 0x114db00
0xa1d PUSH4 0xffffffff
0xa22 PUSH2 0x859
0xa25 AND
0xa26 JUMP
---
0xa0e: JUMPDEST 
0xa0f: V772 = 0x4
0xa13: S[0x4] = V542
0xa14: V773 = 0xa27
0xa18: V774 = 0x114db00
0xa1d: V775 = 0xffffffff
0xa22: V776 = 0x859
0xa25: V777 = AND 0x859 0xffffffff
0xa26: JUMP 0x859
---
Entry stack: [V11, 0x750, V542]
Stack pops: 1
Stack additions: [S0, 0xa27, S0, 0x114db00]
Exit stack: [V11, 0x750, V542, 0xa27, V542, 0x114db00]

================================

Block 0xa27
[0xa27:0xa2c]
---
Predecessors: [0x82a]
Successors: [0x308, 0x314, 0x4b9, 0x4f2, 0x52b, 0x561, 0x56e, 0x750]
---
0xa27 JUMPDEST
0xa28 PUSH1 0x5
0xa2a SSTORE
0xa2b POP
0xa2c JUMP
---
0xa27: JUMPDEST 
0xa28: V778 = 0x5
0xa2a: S[0x5] = S0
0xa2c: JUMP S2
---
Entry stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V132, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xa2d
[0xa2d:0xa3f]
---
Predecessors: [0x75e]
Successors: [0xa40, 0xa8f]
---
0xa2d JUMPDEST
0xa2e PUSH1 0x1
0xa30 SLOAD
0xa31 PUSH1 0x1
0xa33 PUSH1 0xa0
0xa35 PUSH1 0x2
0xa37 EXP
0xa38 SUB
0xa39 AND
0xa3a CALLER
0xa3b EQ
0xa3c PUSH2 0xa8f
0xa3f JUMPI
---
0xa2d: JUMPDEST 
0xa2e: V779 = 0x1
0xa30: V780 = S[0x1]
0xa31: V781 = 0x1
0xa33: V782 = 0xa0
0xa35: V783 = 0x2
0xa37: V784 = EXP 0x2 0xa0
0xa38: V785 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa39: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0xa3a: V787 = CALLER
0xa3b: V788 = EQ V787 V786
0xa3c: V789 = 0xa8f
0xa3f: JUMPI 0xa8f V788
---
Entry stack: [V11, 0x750]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x750]

================================

Block 0xa40
[0xa40:0xa8e]
---
Predecessors: [0xa2d]
Successors: []
---
0xa40 PUSH1 0x40
0xa42 DUP1
0xa43 MLOAD
0xa44 PUSH1 0xe5
0xa46 PUSH1 0x2
0xa48 EXP
0xa49 PUSH3 0x461bcd
0xa4d MUL
0xa4e DUP2
0xa4f MSTORE
0xa50 PUSH1 0x20
0xa52 PUSH1 0x4
0xa54 DUP3
0xa55 ADD
0xa56 MSTORE
0xa57 PUSH1 0x16
0xa59 PUSH1 0x24
0xa5b DUP3
0xa5c ADD
0xa5d MSTORE
0xa5e PUSH32 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0xa7f PUSH1 0x44
0xa81 DUP3
0xa82 ADD
0xa83 MSTORE
0xa84 SWAP1
0xa85 MLOAD
0xa86 SWAP1
0xa87 DUP2
0xa88 SWAP1
0xa89 SUB
0xa8a PUSH1 0x64
0xa8c ADD
0xa8d SWAP1
0xa8e REVERT
---
0xa40: V790 = 0x40
0xa43: V791 = M[0x40]
0xa44: V792 = 0xe5
0xa46: V793 = 0x2
0xa48: V794 = EXP 0x2 0xe5
0xa49: V795 = 0x461bcd
0xa4d: V796 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xa4f: M[V791] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa50: V797 = 0x20
0xa52: V798 = 0x4
0xa55: V799 = ADD V791 0x4
0xa56: M[V799] = 0x20
0xa57: V800 = 0x16
0xa59: V801 = 0x24
0xa5c: V802 = ADD V791 0x24
0xa5d: M[V802] = 0x16
0xa5e: V803 = 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0xa7f: V804 = 0x44
0xa82: V805 = ADD V791 0x44
0xa83: M[V805] = 0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000
0xa85: V806 = M[0x40]
0xa89: V807 = SUB V791 V806
0xa8a: V808 = 0x64
0xa8c: V809 = ADD 0x64 V807
0xa8e: REVERT V806 V809
---
Entry stack: [V11, 0x750]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x750]

================================

Block 0xa8f
[0xa8f:0xaf3]
---
Predecessors: [0xa2d]
Successors: [0x750]
---
0xa8f JUMPDEST
0xa90 PUSH1 0x0
0xa92 DUP1
0xa93 SLOAD
0xa94 PUSH1 0x40
0xa96 MLOAD
0xa97 CALLER
0xa98 SWAP3
0xa99 PUSH1 0x1
0xa9b PUSH1 0xa0
0xa9d PUSH1 0x2
0xa9f EXP
0xaa0 SUB
0xaa1 SWAP1
0xaa2 SWAP3
0xaa3 AND
0xaa4 SWAP2
0xaa5 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xac6 SWAP2
0xac7 LOG3
0xac8 PUSH1 0x0
0xaca DUP1
0xacb SLOAD
0xacc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae1 NOT
0xae2 SWAP1
0xae3 DUP2
0xae4 AND
0xae5 CALLER
0xae6 OR
0xae7 SWAP1
0xae8 SWAP2
0xae9 SSTORE
0xaea PUSH1 0x1
0xaec DUP1
0xaed SLOAD
0xaee SWAP1
0xaef SWAP2
0xaf0 AND
0xaf1 SWAP1
0xaf2 SSTORE
0xaf3 JUMP
---
0xa8f: JUMPDEST 
0xa90: V810 = 0x0
0xa93: V811 = S[0x0]
0xa94: V812 = 0x40
0xa96: V813 = M[0x40]
0xa97: V814 = CALLER
0xa99: V815 = 0x1
0xa9b: V816 = 0xa0
0xa9d: V817 = 0x2
0xa9f: V818 = EXP 0x2 0xa0
0xaa0: V819 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa3: V820 = AND V811 0xffffffffffffffffffffffffffffffffffffffff
0xaa5: V821 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xac7: LOG V813 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V820 V814
0xac8: V822 = 0x0
0xacb: V823 = S[0x0]
0xacc: V824 = 0xffffffffffffffffffffffffffffffffffffffff
0xae1: V825 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xae4: V826 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V823
0xae5: V827 = CALLER
0xae6: V828 = OR V827 V826
0xae9: S[0x0] = V828
0xaea: V829 = 0x1
0xaed: V830 = S[0x1]
0xaf0: V831 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V830
0xaf2: S[0x1] = V831
0xaf3: JUMP 0x750
---
Entry stack: [V11, 0x750]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xaf4
[0xaf4:0xb02]
---
Predecessors: [0x773]
Successors: [0x77c]
---
0xaf4 JUMPDEST
0xaf5 PUSH1 0x3
0xaf7 SLOAD
0xaf8 PUSH1 0x1
0xafa PUSH1 0xa0
0xafc PUSH1 0x2
0xafe EXP
0xaff SUB
0xb00 AND
0xb01 DUP2
0xb02 JUMP
---
0xaf4: JUMPDEST 
0xaf5: V832 = 0x3
0xaf7: V833 = S[0x3]
0xaf8: V834 = 0x1
0xafa: V835 = 0xa0
0xafc: V836 = 0x2
0xafe: V837 = EXP 0x2 0xa0
0xaff: V838 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb00: V839 = AND 0xffffffffffffffffffffffffffffffffffffffff V833
0xb02: JUMP 0x77c
---
Entry stack: [V11, 0x77c]
Stack pops: 1
Stack additions: [S0, V839]
Exit stack: [V11, 0x77c, V839]

================================

Block 0xb03
[0xb03:0xb11]
---
Predecessors: [0x7a4]
Successors: [0x77c]
---
0xb03 JUMPDEST
0xb04 PUSH1 0x0
0xb06 SLOAD
0xb07 PUSH1 0x1
0xb09 PUSH1 0xa0
0xb0b PUSH1 0x2
0xb0d EXP
0xb0e SUB
0xb0f AND
0xb10 DUP2
0xb11 JUMP
---
0xb03: JUMPDEST 
0xb04: V840 = 0x0
0xb06: V841 = S[0x0]
0xb07: V842 = 0x1
0xb09: V843 = 0xa0
0xb0b: V844 = 0x2
0xb0d: V845 = EXP 0x2 0xa0
0xb0e: V846 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0f: V847 = AND 0xffffffffffffffffffffffffffffffffffffffff V841
0xb11: JUMP 0x77c
---
Entry stack: [V11, 0x77c]
Stack pops: 1
Stack additions: [S0, V847]
Exit stack: [V11, 0x77c, V847]

================================

Block 0xb12
[0xb12:0xb20]
---
Predecessors: [0x7b9]
Successors: [0x77c]
---
0xb12 JUMPDEST
0xb13 PUSH1 0x1
0xb15 SLOAD
0xb16 PUSH1 0x1
0xb18 PUSH1 0xa0
0xb1a PUSH1 0x2
0xb1c EXP
0xb1d SUB
0xb1e AND
0xb1f DUP2
0xb20 JUMP
---
0xb12: JUMPDEST 
0xb13: V848 = 0x1
0xb15: V849 = S[0x1]
0xb16: V850 = 0x1
0xb18: V851 = 0xa0
0xb1a: V852 = 0x2
0xb1c: V853 = EXP 0x2 0xa0
0xb1d: V854 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1e: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V849
0xb20: JUMP 0x77c
---
Entry stack: [V11, 0x77c]
Stack pops: 1
Stack additions: [S0, V855]
Exit stack: [V11, 0x77c, V855]

================================

Block 0xb21
[0xb21:0xb2f]
---
Predecessors: [0x7ce]
Successors: [0x77c]
---
0xb21 JUMPDEST
0xb22 PUSH1 0x2
0xb24 SLOAD
0xb25 PUSH1 0x1
0xb27 PUSH1 0xa0
0xb29 PUSH1 0x2
0xb2b EXP
0xb2c SUB
0xb2d AND
0xb2e DUP2
0xb2f JUMP
---
0xb21: JUMPDEST 
0xb22: V856 = 0x2
0xb24: V857 = S[0x2]
0xb25: V858 = 0x1
0xb27: V859 = 0xa0
0xb29: V860 = 0x2
0xb2b: V861 = EXP 0x2 0xa0
0xb2c: V862 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2d: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff V857
0xb2f: JUMP 0x77c
---
Entry stack: [V11, 0x77c]
Stack pops: 1
Stack additions: [S0, V863]
Exit stack: [V11, 0x77c, V863]

================================

Block 0xb30
[0xb30:0xb41]
---
Predecessors: [0x7e3]
Successors: [0x6be]
---
0xb30 JUMPDEST
0xb31 PUSH1 0x7
0xb33 PUSH1 0x20
0xb35 MSTORE
0xb36 PUSH1 0x0
0xb38 SWAP1
0xb39 DUP2
0xb3a MSTORE
0xb3b PUSH1 0x40
0xb3d SWAP1
0xb3e SHA3
0xb3f SLOAD
0xb40 DUP2
0xb41 JUMP
---
0xb30: JUMPDEST 
0xb31: V864 = 0x7
0xb33: V865 = 0x20
0xb35: M[0x20] = 0x7
0xb36: V866 = 0x0
0xb3a: M[0x0] = V598
0xb3b: V867 = 0x40
0xb3e: V868 = SHA3 0x0 0x40
0xb3f: V869 = S[V868]
0xb41: JUMP 0x6be
---
Entry stack: [V11, 0x6be, V598]
Stack pops: 2
Stack additions: [S1, V869]
Exit stack: [V11, 0x6be, V869]

================================

Block 0xb42
[0xb42:0xb54]
---
Predecessors: [0x804]
Successors: [0xb55, 0xba4]
---
0xb42 JUMPDEST
0xb43 PUSH1 0x0
0xb45 SLOAD
0xb46 PUSH1 0x1
0xb48 PUSH1 0xa0
0xb4a PUSH1 0x2
0xb4c EXP
0xb4d SUB
0xb4e AND
0xb4f CALLER
0xb50 EQ
0xb51 PUSH2 0xba4
0xb54 JUMPI
---
0xb42: JUMPDEST 
0xb43: V870 = 0x0
0xb45: V871 = S[0x0]
0xb46: V872 = 0x1
0xb48: V873 = 0xa0
0xb4a: V874 = 0x2
0xb4c: V875 = EXP 0x2 0xa0
0xb4d: V876 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4e: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff V871
0xb4f: V878 = CALLER
0xb50: V879 = EQ V878 V877
0xb51: V880 = 0xba4
0xb54: JUMPI 0xba4 V879
---
Entry stack: [V11, 0x750, V612]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x750, V612]

================================

Block 0xb55
[0xb55:0xba3]
---
Predecessors: [0xb42]
Successors: []
---
0xb55 PUSH1 0x40
0xb57 DUP1
0xb58 MLOAD
0xb59 PUSH1 0xe5
0xb5b PUSH1 0x2
0xb5d EXP
0xb5e PUSH3 0x461bcd
0xb62 MUL
0xb63 DUP2
0xb64 MSTORE
0xb65 PUSH1 0x20
0xb67 PUSH1 0x4
0xb69 DUP3
0xb6a ADD
0xb6b MSTORE
0xb6c PUSH1 0x13
0xb6e PUSH1 0x24
0xb70 DUP3
0xb71 ADD
0xb72 MSTORE
0xb73 PUSH32 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0xb94 PUSH1 0x44
0xb96 DUP3
0xb97 ADD
0xb98 MSTORE
0xb99 SWAP1
0xb9a MLOAD
0xb9b SWAP1
0xb9c DUP2
0xb9d SWAP1
0xb9e SUB
0xb9f PUSH1 0x64
0xba1 ADD
0xba2 SWAP1
0xba3 REVERT
---
0xb55: V881 = 0x40
0xb58: V882 = M[0x40]
0xb59: V883 = 0xe5
0xb5b: V884 = 0x2
0xb5d: V885 = EXP 0x2 0xe5
0xb5e: V886 = 0x461bcd
0xb62: V887 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xb64: M[V882] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb65: V888 = 0x20
0xb67: V889 = 0x4
0xb6a: V890 = ADD V882 0x4
0xb6b: M[V890] = 0x20
0xb6c: V891 = 0x13
0xb6e: V892 = 0x24
0xb71: V893 = ADD V882 0x24
0xb72: M[V893] = 0x13
0xb73: V894 = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0xb94: V895 = 0x44
0xb97: V896 = ADD V882 0x44
0xb98: M[V896] = 0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000
0xb9a: V897 = M[0x40]
0xb9e: V898 = SUB V882 V897
0xb9f: V899 = 0x64
0xba1: V900 = ADD 0x64 V898
0xba3: REVERT V897 V900
---
Entry stack: [V11, 0x750, V612]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x750, V612]

================================

Block 0xba4
[0xba4:0xbb4]
---
Predecessors: [0xb42]
Successors: [0xbb5, 0xc04]
---
0xba4 JUMPDEST
0xba5 PUSH1 0x1
0xba7 PUSH1 0xa0
0xba9 PUSH1 0x2
0xbab EXP
0xbac SUB
0xbad DUP2
0xbae AND
0xbaf ISZERO
0xbb0 ISZERO
0xbb1 PUSH2 0xc04
0xbb4 JUMPI
---
0xba4: JUMPDEST 
0xba5: V901 = 0x1
0xba7: V902 = 0xa0
0xba9: V903 = 0x2
0xbab: V904 = EXP 0x2 0xa0
0xbac: V905 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbae: V906 = AND V612 0xffffffffffffffffffffffffffffffffffffffff
0xbaf: V907 = ISZERO V906
0xbb0: V908 = ISZERO V907
0xbb1: V909 = 0xc04
0xbb4: JUMPI 0xc04 V908
---
Entry stack: [V11, 0x750, V612]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x750, V612]

================================

Block 0xbb5
[0xbb5:0xc03]
---
Predecessors: [0xba4]
Successors: []
---
0xbb5 PUSH1 0x40
0xbb7 DUP1
0xbb8 MLOAD
0xbb9 PUSH1 0xe5
0xbbb PUSH1 0x2
0xbbd EXP
0xbbe PUSH3 0x461bcd
0xbc2 MUL
0xbc3 DUP2
0xbc4 MSTORE
0xbc5 PUSH1 0x20
0xbc7 PUSH1 0x4
0xbc9 DUP3
0xbca ADD
0xbcb MSTORE
0xbcc PUSH1 0x17
0xbce PUSH1 0x24
0xbd0 DUP3
0xbd1 ADD
0xbd2 MSTORE
0xbd3 PUSH32 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0xbf4 PUSH1 0x44
0xbf6 DUP3
0xbf7 ADD
0xbf8 MSTORE
0xbf9 SWAP1
0xbfa MLOAD
0xbfb SWAP1
0xbfc DUP2
0xbfd SWAP1
0xbfe SUB
0xbff PUSH1 0x64
0xc01 ADD
0xc02 SWAP1
0xc03 REVERT
---
0xbb5: V910 = 0x40
0xbb8: V911 = M[0x40]
0xbb9: V912 = 0xe5
0xbbb: V913 = 0x2
0xbbd: V914 = EXP 0x2 0xe5
0xbbe: V915 = 0x461bcd
0xbc2: V916 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xbc4: M[V911] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xbc5: V917 = 0x20
0xbc7: V918 = 0x4
0xbca: V919 = ADD V911 0x4
0xbcb: M[V919] = 0x20
0xbcc: V920 = 0x17
0xbce: V921 = 0x24
0xbd1: V922 = ADD V911 0x24
0xbd2: M[V922] = 0x17
0xbd3: V923 = 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0xbf4: V924 = 0x44
0xbf7: V925 = ADD V911 0x44
0xbf8: M[V925] = 0x6164647265737328302920213d205f6e65774f776e6572000000000000000000
0xbfa: V926 = M[0x40]
0xbfe: V927 = SUB V911 V926
0xbff: V928 = 0x64
0xc01: V929 = ADD 0x64 V927
0xc03: REVERT V926 V929
---
Entry stack: [V11, 0x750, V612]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x750, V612]

================================

Block 0xc04
[0xc04:0xc32]
---
Predecessors: [0xba4]
Successors: [0x750]
---
0xc04 JUMPDEST
0xc05 PUSH1 0x1
0xc07 DUP1
0xc08 SLOAD
0xc09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1e NOT
0xc1f AND
0xc20 PUSH1 0x1
0xc22 PUSH1 0xa0
0xc24 PUSH1 0x2
0xc26 EXP
0xc27 SUB
0xc28 SWAP3
0xc29 SWAP1
0xc2a SWAP3
0xc2b AND
0xc2c SWAP2
0xc2d SWAP1
0xc2e SWAP2
0xc2f OR
0xc30 SWAP1
0xc31 SSTORE
0xc32 JUMP
---
0xc04: JUMPDEST 
0xc05: V930 = 0x1
0xc08: V931 = S[0x1]
0xc09: V932 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1e: V933 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc1f: V934 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V931
0xc20: V935 = 0x1
0xc22: V936 = 0xa0
0xc24: V937 = 0x2
0xc26: V938 = EXP 0x2 0xa0
0xc27: V939 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2b: V940 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0xc2f: V941 = OR V940 V934
0xc31: S[0x1] = V941
0xc32: JUMP 0x750
---
Entry stack: [V11, 0x750, V612]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xc33
[0xc33:0xc60]
---
Predecessors: []
Successors: []
---
0xc33 STOP
0xc34 LOG1
0xc35 PUSH6 0x627a7a723058
0xc3c SHA3
0xc3d PUSH5 0xcac5550903
0xc43 DUP7
0xc44 INVALID
0xc45 PUSH5 0x6dc9fb2919
0xc4b MISSING 0xb8
0xc4c INVALID
0xc4d MISSING 0xfb
0xc4e MISSING 0x2c
0xc4f PUSH17 0x747106a90d9d18f6588e725dd90029
---
0xc33: STOP 
0xc34: LOG S0 S1 S2
0xc35: V942 = 0x627a7a723058
0xc3c: V943 = SHA3 0x627a7a723058 S3
0xc3d: V944 = 0xcac5550903
0xc44: INVALID 
0xc45: V945 = 0x6dc9fb2919
0xc4b: MISSING 0xb8
0xc4c: INVALID 
0xc4d: MISSING 0xfb
0xc4e: MISSING 0x2c
0xc4f: V946 = 0x747106a90d9d18f6588e725dd90029
---
Entry stack: []
Stack pops: 0
Stack additions: [S8, 0xcac5550903, V943, S4, S5, S6, S7, S8, 0x6dc9fb2919, 0x747106a90d9d18f6588e725dd90029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1ef771fb
Entry block: 0x69d
Exit block: 0x6be
Body: 0x69d, 0x6a5, 0x6a9, 0x6be, 0x87b

Function 1:
Public function signature: 0x51d962e1
Entry block: 0x6d0
Exit block: 0x6be
Body: 0x6be, 0x6d0, 0x6d8, 0x6dc, 0x88d

Function 2:
Public function signature: 0x5e35359e
Entry block: 0x6e5
Exit block: 0x70f
Body: 0x6e5, 0x6ed, 0x6f1, 0x70f, 0x893, 0x8a7, 0x8f6, 0x96e, 0x972, 0x97d, 0x986, 0x998, 0x99c

Function 3:
Public function signature: 0x6c56a3f1
Entry block: 0x723
Exit block: 0x6be
Body: 0x6be, 0x723, 0x72b, 0x72f, 0x9a6

Function 4:
Public function signature: 0x7974f8fe
Entry block: 0x738
Exit block: 0x858
Body: 0x738, 0x740, 0x744, 0x750, 0x858, 0x865, 0x9ac, 0x9bf, 0xa0e, 0xa27

Function 5:
Public function signature: 0x79ba5097
Entry block: 0x752
Exit block: 0x750
Body: 0x750, 0x752, 0x75a, 0x75e, 0xa2d, 0xa40, 0xa8f

Function 6:
Public function signature: 0x8bc008e6
Entry block: 0x767
Exit block: 0x77c
Body: 0x767, 0x76f, 0x773, 0x77c, 0xaf4

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x798
Exit block: 0x77c
Body: 0x77c, 0x798, 0x7a0, 0x7a4, 0xb03

Function 8:
Public function signature: 0xd4ee1d90
Entry block: 0x7ad
Exit block: 0x77c
Body: 0x77c, 0x7ad, 0x7b5, 0x7b9, 0xb12

Function 9:
Public function signature: 0xdf49804a
Entry block: 0x7c2
Exit block: 0x77c
Body: 0x77c, 0x7c2, 0x7ca, 0x7ce, 0xb21

Function 10:
Public function signature: 0xee71f3f5
Entry block: 0x7d7
Exit block: 0x6be
Body: 0x6be, 0x7d7, 0x7df, 0x7e3, 0xb30

Function 11:
Public function signature: 0xf2fde38b
Entry block: 0x7f8
Exit block: 0x750
Body: 0x750, 0x7f8, 0x800, 0x804, 0xb42, 0xb55, 0xba4, 0xbb5, 0xc04

Function 12:
Public fallback function
Entry block: 0xb9
Exit block: 0x3f8
Body: 0xb9, 0xc1, 0xc5, 0xd6, 0x125, 0x13b, 0x142, 0x3f8

Function 13:
Private function
Entry block: 0x859
Exit block: 0x82a
Body: 0x13b, 0x146, 0x1ac, 0x1c0, 0x1d6, 0x1e4, 0x264, 0x278, 0x28e, 0x2a5, 0x2c1, 0x2fc, 0x308, 0x314, 0x337, 0x3b5, 0x3c9, 0x3df, 0x3e2, 0x447, 0x452, 0x466, 0x47d, 0x48e, 0x49d, 0x4b9, 0x4bc, 0x4bc, 0x4f2, 0x52b, 0x561, 0x56e, 0x591, 0x819, 0x825, 0x82a, 0x859, 0x866, 0x873

Function 14:
Private function
Entry block: 0x830
Exit block: 0x82a
Body: 0x13b, 0x146, 0x1ac, 0x1c0, 0x1d6, 0x1e4, 0x264, 0x278, 0x28e, 0x2a5, 0x2c1, 0x2fc, 0x308, 0x314, 0x314, 0x337, 0x3b5, 0x3c9, 0x3df, 0x3e2, 0x447, 0x452, 0x466, 0x47d, 0x48e, 0x49d, 0x4b9, 0x4bc, 0x4bc, 0x4f2, 0x4f2, 0x52b, 0x52b, 0x561, 0x56e, 0x56e, 0x819, 0x825, 0x82a, 0x830, 0x83a, 0x841, 0x851, 0x859, 0x866, 0x873, 0xa27

Function 15:
Private function
Entry block: 0x819
Exit block: 0x82a
Body: 0x2a5, 0x2c1, 0x2fc, 0x308, 0x314, 0x314, 0x337, 0x3b5, 0x3c9, 0x3df, 0x3e2, 0x447, 0x452, 0x466, 0x4b9, 0x4bc, 0x4f2, 0x4f2, 0x52b, 0x52b, 0x561, 0x56e, 0x56e, 0x819, 0x825, 0x82a, 0x859, 0x866, 0x873, 0xa27

