Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa3]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa3
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa3
0xc: JUMPI 0xa3 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3a]
---
Predecessors: [0x0]
Successors: [0x3b, 0x76]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 DUP1
0x31 PUSH4 0x96131049
0x36 GT
0x37 PUSH2 0x76
0x3a JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x31: V10 = 0x96131049
0x36: V11 = GT 0x96131049 V9
0x37: V12 = 0x76
0x3a: JUMPI 0x76 V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0xd]
Successors: [0x46, 0x2b7]
---
0x3b DUP1
0x3c PUSH4 0x96131049
0x41 EQ
0x42 PUSH2 0x2b7
0x45 JUMPI
---
0x3c: V13 = 0x96131049
0x41: V14 = EQ 0x96131049 V9
0x42: V15 = 0x2b7
0x45: JUMPI 0x2b7 V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x31c]
---
0x46 DUP1
0x47 PUSH4 0xb4d4c5dc
0x4c EQ
0x4d PUSH2 0x31c
0x50 JUMPI
---
0x47: V16 = 0xb4d4c5dc
0x4c: V17 = EQ 0xb4d4c5dc V9
0x4d: V18 = 0x31c
0x50: JUMPI 0x31c V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x51d]
---
0x51 DUP1
0x52 PUSH4 0xe0d015e2
0x57 EQ
0x58 PUSH2 0x51d
0x5b JUMPI
---
0x52: V19 = 0xe0d015e2
0x57: V20 = EQ 0xe0d015e2 V9
0x58: V21 = 0x51d
0x5b: JUMPI 0x51d V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x534]
---
0x5c DUP1
0x5d PUSH4 0xe82314e7
0x62 EQ
0x63 PUSH2 0x534
0x66 JUMPI
---
0x5d: V22 = 0xe82314e7
0x62: V23 = EQ 0xe82314e7 V9
0x63: V24 = 0x534
0x66: JUMPI 0x534 V23
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x56f]
---
0x67 DUP1
0x68 PUSH4 0xf340fa01
0x6d EQ
0x6e PUSH2 0x56f
0x71 JUMPI
---
0x68: V25 = 0xf340fa01
0x6d: V26 = EQ 0xf340fa01 V9
0x6e: V27 = 0x56f
0x71: JUMPI 0x56f V26
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x67]
Successors: [0xa3]
---
0x72 PUSH2 0xa3
0x75 JUMP
---
0x72: V28 = 0xa3
0x75: JUMP 0xa3
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x76
[0x76:0x81]
---
Predecessors: [0xd]
Successors: [0x82, 0x1c7]
---
0x76 JUMPDEST
0x77 DUP1
0x78 PUSH4 0x54841e95
0x7d EQ
0x7e PUSH2 0x1c7
0x81 JUMPI
---
0x76: JUMPDEST 
0x78: V29 = 0x54841e95
0x7d: V30 = EQ 0x54841e95 V9
0x7e: V31 = 0x1c7
0x81: JUMPI 0x1c7 V30
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x76]
Successors: [0x8d, 0x21e]
---
0x82 DUP1
0x83 PUSH4 0x69b0551e
0x88 EQ
0x89 PUSH2 0x21e
0x8c JUMPI
---
0x83: V32 = 0x69b0551e
0x88: V33 = EQ 0x69b0551e V9
0x89: V34 = 0x21e
0x8c: JUMPI 0x21e V33
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x235]
---
0x8d DUP1
0x8e PUSH4 0x8da5cb5b
0x93 EQ
0x94 PUSH2 0x235
0x97 JUMPI
---
0x8e: V35 = 0x8da5cb5b
0x93: V36 = EQ 0x8da5cb5b V9
0x94: V37 = 0x235
0x97: JUMPI 0x235 V36
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x28c]
---
0x98 DUP1
0x99 PUSH4 0x904c1e1f
0x9e EQ
0x9f PUSH2 0x28c
0xa2 JUMPI
---
0x99: V38 = 0x904c1e1f
0x9e: V39 = EQ 0x904c1e1f V9
0x9f: V40 = 0x28c
0xa2: JUMPI 0x28c V39
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xa3
[0xa3:0xb7]
---
Predecessors: [0x0, 0x72, 0x98]
Successors: [0xb8, 0xe8]
---
0xa3 JUMPDEST
0xa4 PUSH1 0x0
0xa6 DUP1
0xa7 CALLER
0xa8 SWAP1
0xa9 POP
0xaa DUP1
0xab EXTCODESIZE
0xac SWAP2
0xad POP
0xae PUSH1 0x0
0xb0 DUP3
0xb1 EQ
0xb2 DUP1
0xb3 ISZERO
0xb4 PUSH2 0xe8
0xb7 JUMPI
---
0xa3: JUMPDEST 
0xa4: V41 = 0x0
0xa7: V42 = CALLER
0xab: V43 = EXTCODESIZE V42
0xae: V44 = 0x0
0xb1: V45 = EQ V43 0x0
0xb3: V46 = ISZERO V45
0xb4: V47 = 0xe8
0xb7: JUMPI 0xe8 V46
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V43, V42, V45]
Exit stack: [V9, V43, V42, V45]

================================

Block 0xb8
[0xb8:0xe7]
---
Predecessors: [0xa3]
Successors: [0xe8]
---
0xb8 POP
0xb9 CALLER
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 ORIGIN
0xd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6 AND
0xe7 EQ
---
0xb9: V48 = CALLER
0xba: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xd0: V51 = ORIGIN
0xd1: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xe7: V54 = EQ V53 V50
---
Entry stack: [V9, V43, V42, V45]
Stack pops: 1
Stack additions: [V54]
Exit stack: [V9, V43, V42, V54]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0xa3, 0xb8]
Successors: [0xef, 0xf3]
---
0xe8 JUMPDEST
0xe9 ISZERO
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V55 = ISZERO S0
0xea: V56 = ISZERO V55
0xeb: V57 = 0xf3
0xee: JUMPI 0xf3 V56
---
Entry stack: [V9, V43, V42, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, V43, V42]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xe8]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V58 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V9, V43, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V43, V42]

================================

Block 0xf3
[0xf3:0x109]
---
Predecessors: [0xe8]
Successors: [0x10a, 0x10e]
---
0xf3 JUMPDEST
0xf4 PUSH1 0x3
0xf6 PUSH1 0x0
0xf8 SWAP1
0xf9 SLOAD
0xfa SWAP1
0xfb PUSH2 0x100
0xfe EXP
0xff SWAP1
0x100 DIV
0x101 PUSH1 0xff
0x103 AND
0x104 ISZERO
0x105 ISZERO
0x106 PUSH2 0x10e
0x109 JUMPI
---
0xf3: JUMPDEST 
0xf4: V59 = 0x3
0xf6: V60 = 0x0
0xf9: V61 = S[0x3]
0xfb: V62 = 0x100
0xfe: V63 = EXP 0x100 0x0
0x100: V64 = DIV V61 0x1
0x101: V65 = 0xff
0x103: V66 = AND 0xff V64
0x104: V67 = ISZERO V66
0x105: V68 = ISZERO V67
0x106: V69 = 0x10e
0x109: JUMPI 0x10e V68
---
Entry stack: [V9, V43, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V43, V42]

================================

Block 0x10a
[0x10a:0x10d]
---
Predecessors: [0xf3]
Successors: []
---
0x10a PUSH1 0x0
0x10c DUP1
0x10d REVERT
---
0x10a: V70 = 0x0
0x10d: REVERT 0x0 0x0
---
Entry stack: [V9, V43, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V43, V42]

================================

Block 0x10e
[0x10e:0x11a]
---
Predecessors: [0xf3]
Successors: [0x11b, 0x11f]
---
0x10e JUMPDEST
0x10f PUSH1 0x4
0x111 SLOAD
0x112 CALLVALUE
0x113 LT
0x114 ISZERO
0x115 ISZERO
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x10e: JUMPDEST 
0x10f: V71 = 0x4
0x111: V72 = S[0x4]
0x112: V73 = CALLVALUE
0x113: V74 = LT V73 V72
0x114: V75 = ISZERO V74
0x115: V76 = ISZERO V75
0x116: V77 = ISZERO V76
0x117: V78 = 0x11f
0x11a: JUMPI 0x11f V77
---
Entry stack: [V9, V43, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V43, V42]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x10e]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V79 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V9, V43, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V43, V42]

================================

Block 0x11f
[0x11f:0x1c6]
---
Predecessors: [0x10e]
Successors: []
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 PUSH1 0x1
0x123 PUSH1 0x0
0x125 CALLER
0x126 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b AND
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 DUP2
0x153 MSTORE
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP1
0x158 DUP2
0x159 MSTORE
0x15a PUSH1 0x20
0x15c ADD
0x15d PUSH1 0x0
0x15f SHA3
0x160 PUSH1 0x0
0x162 DUP3
0x163 DUP3
0x164 SLOAD
0x165 ADD
0x166 SWAP3
0x167 POP
0x168 POP
0x169 DUP2
0x16a SWAP1
0x16b SSTORE
0x16c POP
0x16d NUMBER
0x16e CALLER
0x16f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x184 AND
0x185 PUSH32 0x36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e
0x1a6 CALLVALUE
0x1a7 TIMESTAMP
0x1a8 PUSH1 0x40
0x1aa MLOAD
0x1ab DUP1
0x1ac DUP4
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 DUP3
0x1b3 DUP2
0x1b4 MSTORE
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP3
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP1
0x1c0 SWAP2
0x1c1 SUB
0x1c2 SWAP1
0x1c3 LOG3
0x1c4 POP
0x1c5 POP
0x1c6 STOP
---
0x11f: JUMPDEST 
0x120: V80 = CALLVALUE
0x121: V81 = 0x1
0x123: V82 = 0x0
0x125: V83 = CALLER
0x126: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x13c: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x153: M[0x0] = V87
0x154: V88 = 0x20
0x156: V89 = ADD 0x20 0x0
0x159: M[0x20] = 0x1
0x15a: V90 = 0x20
0x15c: V91 = ADD 0x20 0x20
0x15d: V92 = 0x0
0x15f: V93 = SHA3 0x0 0x40
0x160: V94 = 0x0
0x164: V95 = S[V93]
0x165: V96 = ADD V95 V80
0x16b: S[V93] = V96
0x16d: V97 = NUMBER
0x16e: V98 = CALLER
0x16f: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x184: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x185: V101 = 0x36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e
0x1a6: V102 = CALLVALUE
0x1a7: V103 = TIMESTAMP
0x1a8: V104 = 0x40
0x1aa: V105 = M[0x40]
0x1ae: M[V105] = V102
0x1af: V106 = 0x20
0x1b1: V107 = ADD 0x20 V105
0x1b4: M[V107] = V103
0x1b5: V108 = 0x20
0x1b7: V109 = ADD 0x20 V107
0x1bc: V110 = 0x40
0x1be: V111 = M[0x40]
0x1c1: V112 = SUB V109 V111
0x1c3: LOG V111 V112 0x36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e V100 V97
0x1c6: STOP 
---
Entry stack: [V9, V43, V42]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x1c7
[0x1c7:0x1ce]
---
Predecessors: [0x76]
Successors: [0x1cf, 0x1d3]
---
0x1c7 JUMPDEST
0x1c8 CALLVALUE
0x1c9 DUP1
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V113 = CALLVALUE
0x1ca: V114 = ISZERO V113
0x1cb: V115 = 0x1d3
0x1ce: JUMPI 0x1d3 V114
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V113]
Exit stack: [V9, V113]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1c7]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V116 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V9, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V113]

================================

Block 0x1d3
[0x1d3:0x1db]
---
Predecessors: [0x1c7]
Successors: [0x5d4]
---
0x1d3 JUMPDEST
0x1d4 POP
0x1d5 PUSH2 0x1dc
0x1d8 PUSH2 0x5d4
0x1db JUMP
---
0x1d3: JUMPDEST 
0x1d5: V117 = 0x1dc
0x1d8: V118 = 0x5d4
0x1db: JUMP 0x5d4
---
Entry stack: [V9, V113]
Stack pops: 1
Stack additions: [0x1dc]
Exit stack: [V9, 0x1dc]

================================

Block 0x1dc
[0x1dc:0x21d]
---
Predecessors: [0x5d4]
Successors: []
---
0x1dc JUMPDEST
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 DUP1
0x1e1 DUP3
0x1e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f7 AND
0x1f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20d AND
0x20e DUP2
0x20f MSTORE
0x210 PUSH1 0x20
0x212 ADD
0x213 SWAP2
0x214 POP
0x215 POP
0x216 PUSH1 0x40
0x218 MLOAD
0x219 DUP1
0x21a SWAP2
0x21b SUB
0x21c SWAP1
0x21d RETURN
---
0x1dc: JUMPDEST 
0x1dd: V119 = 0x40
0x1df: V120 = M[0x40]
0x1e2: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f7: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x1f8: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x20f: M[V120] = V124
0x210: V125 = 0x20
0x212: V126 = ADD 0x20 V120
0x216: V127 = 0x40
0x218: V128 = M[0x40]
0x21b: V129 = SUB V126 V128
0x21d: RETURN V128 V129
---
Entry stack: [V9, 0x1dc, V417]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x1dc]

================================

Block 0x21e
[0x21e:0x225]
---
Predecessors: [0x82]
Successors: [0x226, 0x22a]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 DUP1
0x221 ISZERO
0x222 PUSH2 0x22a
0x225 JUMPI
---
0x21e: JUMPDEST 
0x21f: V130 = CALLVALUE
0x221: V131 = ISZERO V130
0x222: V132 = 0x22a
0x225: JUMPI 0x22a V131
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V130]
Exit stack: [V9, V130]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x21e]
Successors: []
---
0x226 PUSH1 0x0
0x228 DUP1
0x229 REVERT
---
0x226: V133 = 0x0
0x229: REVERT 0x0 0x0
---
Entry stack: [V9, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V130]

================================

Block 0x22a
[0x22a:0x232]
---
Predecessors: [0x21e]
Successors: [0x5fa]
---
0x22a JUMPDEST
0x22b POP
0x22c PUSH2 0x233
0x22f PUSH2 0x5fa
0x232 JUMP
---
0x22a: JUMPDEST 
0x22c: V134 = 0x233
0x22f: V135 = 0x5fa
0x232: JUMP 0x5fa
---
Entry stack: [V9, V130]
Stack pops: 1
Stack additions: [0x233]
Exit stack: [V9, 0x233]

================================

Block 0x233
[0x233:0x234]
---
Predecessors: [0x655]
Successors: []
---
0x233 JUMPDEST
0x234 STOP
---
0x233: JUMPDEST 
0x234: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x235
[0x235:0x23c]
---
Predecessors: [0x8d]
Successors: [0x23d, 0x241]
---
0x235 JUMPDEST
0x236 CALLVALUE
0x237 DUP1
0x238 ISZERO
0x239 PUSH2 0x241
0x23c JUMPI
---
0x235: JUMPDEST 
0x236: V136 = CALLVALUE
0x238: V137 = ISZERO V136
0x239: V138 = 0x241
0x23c: JUMPI 0x241 V137
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V136]
Exit stack: [V9, V136]

================================

Block 0x23d
[0x23d:0x240]
---
Predecessors: [0x235]
Successors: []
---
0x23d PUSH1 0x0
0x23f DUP1
0x240 REVERT
---
0x23d: V139 = 0x0
0x240: REVERT 0x0 0x0
---
Entry stack: [V9, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V136]

================================

Block 0x241
[0x241:0x249]
---
Predecessors: [0x235]
Successors: [0x672]
---
0x241 JUMPDEST
0x242 POP
0x243 PUSH2 0x24a
0x246 PUSH2 0x672
0x249 JUMP
---
0x241: JUMPDEST 
0x243: V140 = 0x24a
0x246: V141 = 0x672
0x249: JUMP 0x672
---
Entry stack: [V9, V136]
Stack pops: 1
Stack additions: [0x24a]
Exit stack: [V9, 0x24a]

================================

Block 0x24a
[0x24a:0x28b]
---
Predecessors: [0x672]
Successors: []
---
0x24a JUMPDEST
0x24b PUSH1 0x40
0x24d MLOAD
0x24e DUP1
0x24f DUP3
0x250 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x265 AND
0x266 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27b AND
0x27c DUP2
0x27d MSTORE
0x27e PUSH1 0x20
0x280 ADD
0x281 SWAP2
0x282 POP
0x283 POP
0x284 PUSH1 0x40
0x286 MLOAD
0x287 DUP1
0x288 SWAP2
0x289 SUB
0x28a SWAP1
0x28b RETURN
---
0x24a: JUMPDEST 
0x24b: V142 = 0x40
0x24d: V143 = M[0x40]
0x250: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x265: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x266: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x27d: M[V143] = V147
0x27e: V148 = 0x20
0x280: V149 = ADD 0x20 V143
0x284: V150 = 0x40
0x286: V151 = M[0x40]
0x289: V152 = SUB V149 V151
0x28b: RETURN V151 V152
---
Entry stack: [V9, 0x24a, V455]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x24a]

================================

Block 0x28c
[0x28c:0x293]
---
Predecessors: [0x98]
Successors: [0x294, 0x298]
---
0x28c JUMPDEST
0x28d CALLVALUE
0x28e DUP1
0x28f ISZERO
0x290 PUSH2 0x298
0x293 JUMPI
---
0x28c: JUMPDEST 
0x28d: V153 = CALLVALUE
0x28f: V154 = ISZERO V153
0x290: V155 = 0x298
0x293: JUMPI 0x298 V154
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V153]
Exit stack: [V9, V153]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x28c]
Successors: []
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
---
0x294: V156 = 0x0
0x297: REVERT 0x0 0x0
---
Entry stack: [V9, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V153]

================================

Block 0x298
[0x298:0x2a0]
---
Predecessors: [0x28c]
Successors: [0x697]
---
0x298 JUMPDEST
0x299 POP
0x29a PUSH2 0x2a1
0x29d PUSH2 0x697
0x2a0 JUMP
---
0x298: JUMPDEST 
0x29a: V157 = 0x2a1
0x29d: V158 = 0x697
0x2a0: JUMP 0x697
---
Entry stack: [V9, V153]
Stack pops: 1
Stack additions: [0x2a1]
Exit stack: [V9, 0x2a1]

================================

Block 0x2a1
[0x2a1:0x2b6]
---
Predecessors: [0x697]
Successors: []
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 DUP1
0x2a6 DUP3
0x2a7 DUP2
0x2a8 MSTORE
0x2a9 PUSH1 0x20
0x2ab ADD
0x2ac SWAP2
0x2ad POP
0x2ae POP
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 DUP1
0x2b3 SWAP2
0x2b4 SUB
0x2b5 SWAP1
0x2b6 RETURN
---
0x2a1: JUMPDEST 
0x2a2: V159 = 0x40
0x2a4: V160 = M[0x40]
0x2a8: M[V160] = V457
0x2a9: V161 = 0x20
0x2ab: V162 = ADD 0x20 V160
0x2af: V163 = 0x40
0x2b1: V164 = M[0x40]
0x2b4: V165 = SUB V162 V164
0x2b6: RETURN V164 V165
---
Entry stack: [V9, 0x2a1, V457]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x2a1]

================================

Block 0x2b7
[0x2b7:0x2be]
---
Predecessors: [0x3b]
Successors: [0x2bf, 0x2c3]
---
0x2b7 JUMPDEST
0x2b8 CALLVALUE
0x2b9 DUP1
0x2ba ISZERO
0x2bb PUSH2 0x2c3
0x2be JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V166 = CALLVALUE
0x2ba: V167 = ISZERO V166
0x2bb: V168 = 0x2c3
0x2be: JUMPI 0x2c3 V167
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V166]
Exit stack: [V9, V166]

================================

Block 0x2bf
[0x2bf:0x2c2]
---
Predecessors: [0x2b7]
Successors: []
---
0x2bf PUSH1 0x0
0x2c1 DUP1
0x2c2 REVERT
---
0x2bf: V169 = 0x0
0x2c2: REVERT 0x0 0x0
---
Entry stack: [V9, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V166]

================================

Block 0x2c3
[0x2c3:0x2d5]
---
Predecessors: [0x2b7]
Successors: [0x2d6, 0x2da]
---
0x2c3 JUMPDEST
0x2c4 POP
0x2c5 PUSH2 0x306
0x2c8 PUSH1 0x4
0x2ca DUP1
0x2cb CALLDATASIZE
0x2cc SUB
0x2cd PUSH1 0x20
0x2cf DUP2
0x2d0 LT
0x2d1 ISZERO
0x2d2 PUSH2 0x2da
0x2d5 JUMPI
---
0x2c3: JUMPDEST 
0x2c5: V170 = 0x306
0x2c8: V171 = 0x4
0x2cb: V172 = CALLDATASIZE
0x2cc: V173 = SUB V172 0x4
0x2cd: V174 = 0x20
0x2d0: V175 = LT V173 0x20
0x2d1: V176 = ISZERO V175
0x2d2: V177 = 0x2da
0x2d5: JUMPI 0x2da V176
---
Entry stack: [V9, V166]
Stack pops: 1
Stack additions: [0x306, 0x4, V173]
Exit stack: [V9, 0x306, 0x4, V173]

================================

Block 0x2d6
[0x2d6:0x2d9]
---
Predecessors: [0x2c3]
Successors: []
---
0x2d6 PUSH1 0x0
0x2d8 DUP1
0x2d9 REVERT
---
0x2d6: V178 = 0x0
0x2d9: REVERT 0x0 0x0
---
Entry stack: [V9, 0x306, 0x4, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x306, 0x4, V173]

================================

Block 0x2da
[0x2da:0x305]
---
Predecessors: [0x2c3]
Successors: [0x69d]
---
0x2da JUMPDEST
0x2db DUP2
0x2dc ADD
0x2dd SWAP1
0x2de DUP1
0x2df DUP1
0x2e0 CALLDATALOAD
0x2e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f6 AND
0x2f7 SWAP1
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP1
0x2fc SWAP3
0x2fd SWAP2
0x2fe SWAP1
0x2ff POP
0x300 POP
0x301 POP
0x302 PUSH2 0x69d
0x305 JUMP
---
0x2da: JUMPDEST 
0x2dc: V179 = ADD 0x4 V173
0x2e0: V180 = CALLDATALOAD 0x4
0x2e1: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x2f8: V183 = 0x20
0x2fa: V184 = ADD 0x20 0x4
0x302: V185 = 0x69d
0x305: JUMP 0x69d
---
Entry stack: [V9, 0x306, 0x4, V173]
Stack pops: 2
Stack additions: [V182]
Exit stack: [V9, 0x306, V182]

================================

Block 0x306
[0x306:0x31b]
---
Predecessors: [0x69d]
Successors: []
---
0x306 JUMPDEST
0x307 PUSH1 0x40
0x309 MLOAD
0x30a DUP1
0x30b DUP3
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP2
0x312 POP
0x313 POP
0x314 PUSH1 0x40
0x316 MLOAD
0x317 DUP1
0x318 SWAP2
0x319 SUB
0x31a SWAP1
0x31b RETURN
---
0x306: JUMPDEST 
0x307: V186 = 0x40
0x309: V187 = M[0x40]
0x30d: M[V187] = V465
0x30e: V188 = 0x20
0x310: V189 = ADD 0x20 V187
0x314: V190 = 0x40
0x316: V191 = M[0x40]
0x319: V192 = SUB V189 V191
0x31b: RETURN V191 V192
---
Entry stack: [V9, 0x306, V465]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x306]

================================

Block 0x31c
[0x31c:0x323]
---
Predecessors: [0x46]
Successors: [0x324, 0x328]
---
0x31c JUMPDEST
0x31d CALLVALUE
0x31e DUP1
0x31f ISZERO
0x320 PUSH2 0x328
0x323 JUMPI
---
0x31c: JUMPDEST 
0x31d: V193 = CALLVALUE
0x31f: V194 = ISZERO V193
0x320: V195 = 0x328
0x323: JUMPI 0x328 V194
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V193]
Exit stack: [V9, V193]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x31c]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V196 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V9, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V193]

================================

Block 0x328
[0x328:0x33a]
---
Predecessors: [0x31c]
Successors: [0x33b, 0x33f]
---
0x328 JUMPDEST
0x329 POP
0x32a PUSH2 0x507
0x32d PUSH1 0x4
0x32f DUP1
0x330 CALLDATASIZE
0x331 SUB
0x332 PUSH1 0x60
0x334 DUP2
0x335 LT
0x336 ISZERO
0x337 PUSH2 0x33f
0x33a JUMPI
---
0x328: JUMPDEST 
0x32a: V197 = 0x507
0x32d: V198 = 0x4
0x330: V199 = CALLDATASIZE
0x331: V200 = SUB V199 0x4
0x332: V201 = 0x60
0x335: V202 = LT V200 0x60
0x336: V203 = ISZERO V202
0x337: V204 = 0x33f
0x33a: JUMPI 0x33f V203
---
Entry stack: [V9, V193]
Stack pops: 1
Stack additions: [0x507, 0x4, V200]
Exit stack: [V9, 0x507, 0x4, V200]

================================

Block 0x33b
[0x33b:0x33e]
---
Predecessors: [0x328]
Successors: []
---
0x33b PUSH1 0x0
0x33d DUP1
0x33e REVERT
---
0x33b: V205 = 0x0
0x33e: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, 0x4, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, 0x4, V200]

================================

Block 0x33f
[0x33f:0x357]
---
Predecessors: [0x328]
Successors: [0x358, 0x35c]
---
0x33f JUMPDEST
0x340 DUP2
0x341 ADD
0x342 SWAP1
0x343 DUP1
0x344 DUP1
0x345 CALLDATALOAD
0x346 SWAP1
0x347 PUSH1 0x20
0x349 ADD
0x34a SWAP1
0x34b PUSH5 0x100000000
0x351 DUP2
0x352 GT
0x353 ISZERO
0x354 PUSH2 0x35c
0x357 JUMPI
---
0x33f: JUMPDEST 
0x341: V206 = ADD 0x4 V200
0x345: V207 = CALLDATALOAD 0x4
0x347: V208 = 0x20
0x349: V209 = ADD 0x20 0x4
0x34b: V210 = 0x100000000
0x352: V211 = GT V207 0x100000000
0x353: V212 = ISZERO V211
0x354: V213 = 0x35c
0x357: JUMPI 0x35c V212
---
Entry stack: [V9, 0x507, 0x4, V200]
Stack pops: 2
Stack additions: [V206, S1, 0x24, V207]
Exit stack: [V9, 0x507, V206, 0x4, 0x24, V207]

================================

Block 0x358
[0x358:0x35b]
---
Predecessors: [0x33f]
Successors: []
---
0x358 PUSH1 0x0
0x35a DUP1
0x35b REVERT
---
0x358: V214 = 0x0
0x35b: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, V206, 0x4, 0x24, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V206, 0x4, 0x24, V207]

================================

Block 0x35c
[0x35c:0x369]
---
Predecessors: [0x33f]
Successors: [0x36a, 0x36e]
---
0x35c JUMPDEST
0x35d DUP3
0x35e ADD
0x35f DUP4
0x360 PUSH1 0x20
0x362 DUP3
0x363 ADD
0x364 GT
0x365 ISZERO
0x366 PUSH2 0x36e
0x369 JUMPI
---
0x35c: JUMPDEST 
0x35e: V215 = ADD 0x4 V207
0x360: V216 = 0x20
0x363: V217 = ADD V215 0x20
0x364: V218 = GT V217 V206
0x365: V219 = ISZERO V218
0x366: V220 = 0x36e
0x369: JUMPI 0x36e V219
---
Entry stack: [V9, 0x507, V206, 0x4, 0x24, V207]
Stack pops: 4
Stack additions: [S3, S2, S1, V215]
Exit stack: [V9, 0x507, V206, 0x4, 0x24, V215]

================================

Block 0x36a
[0x36a:0x36d]
---
Predecessors: [0x35c]
Successors: []
---
0x36a PUSH1 0x0
0x36c DUP1
0x36d REVERT
---
0x36a: V221 = 0x0
0x36d: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, V206, 0x4, 0x24, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V206, 0x4, 0x24, V215]

================================

Block 0x36e
[0x36e:0x38b]
---
Predecessors: [0x35c]
Successors: [0x38c, 0x390]
---
0x36e JUMPDEST
0x36f DUP1
0x370 CALLDATALOAD
0x371 SWAP1
0x372 PUSH1 0x20
0x374 ADD
0x375 SWAP2
0x376 DUP5
0x377 PUSH1 0x20
0x379 DUP4
0x37a MUL
0x37b DUP5
0x37c ADD
0x37d GT
0x37e PUSH5 0x100000000
0x384 DUP4
0x385 GT
0x386 OR
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x36e: JUMPDEST 
0x370: V222 = CALLDATALOAD V215
0x372: V223 = 0x20
0x374: V224 = ADD 0x20 V215
0x377: V225 = 0x20
0x37a: V226 = MUL V222 0x20
0x37c: V227 = ADD V224 V226
0x37d: V228 = GT V227 V206
0x37e: V229 = 0x100000000
0x385: V230 = GT V222 0x100000000
0x386: V231 = OR V230 V228
0x387: V232 = ISZERO V231
0x388: V233 = 0x390
0x38b: JUMPI 0x390 V232
---
Entry stack: [V9, 0x507, V206, 0x4, 0x24, V215]
Stack pops: 4
Stack additions: [S3, S2, V224, V222, S1]
Exit stack: [V9, 0x507, V206, 0x4, V224, V222, 0x24]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x36e]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V234 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, V206, 0x4, V224, V222, 0x24]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V206, 0x4, V224, V222, 0x24]

================================

Block 0x390
[0x390:0x3eb]
---
Predecessors: [0x36e]
Successors: [0x3ec, 0x3f0]
---
0x390 JUMPDEST
0x391 SWAP2
0x392 SWAP1
0x393 DUP1
0x394 DUP1
0x395 PUSH1 0x20
0x397 MUL
0x398 PUSH1 0x20
0x39a ADD
0x39b PUSH1 0x40
0x39d MLOAD
0x39e SWAP1
0x39f DUP2
0x3a0 ADD
0x3a1 PUSH1 0x40
0x3a3 MSTORE
0x3a4 DUP1
0x3a5 SWAP4
0x3a6 SWAP3
0x3a7 SWAP2
0x3a8 SWAP1
0x3a9 DUP2
0x3aa DUP2
0x3ab MSTORE
0x3ac PUSH1 0x20
0x3ae ADD
0x3af DUP4
0x3b0 DUP4
0x3b1 PUSH1 0x20
0x3b3 MUL
0x3b4 DUP1
0x3b5 DUP3
0x3b6 DUP5
0x3b7 CALLDATACOPY
0x3b8 PUSH1 0x0
0x3ba DUP2
0x3bb DUP5
0x3bc ADD
0x3bd MSTORE
0x3be PUSH1 0x1f
0x3c0 NOT
0x3c1 PUSH1 0x1f
0x3c3 DUP3
0x3c4 ADD
0x3c5 AND
0x3c6 SWAP1
0x3c7 POP
0x3c8 DUP1
0x3c9 DUP4
0x3ca ADD
0x3cb SWAP3
0x3cc POP
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 SWAP2
0x3d4 SWAP3
0x3d5 SWAP2
0x3d6 SWAP3
0x3d7 SWAP1
0x3d8 DUP1
0x3d9 CALLDATALOAD
0x3da SWAP1
0x3db PUSH1 0x20
0x3dd ADD
0x3de SWAP1
0x3df PUSH5 0x100000000
0x3e5 DUP2
0x3e6 GT
0x3e7 ISZERO
0x3e8 PUSH2 0x3f0
0x3eb JUMPI
---
0x390: JUMPDEST 
0x395: V235 = 0x20
0x397: V236 = MUL 0x20 V222
0x398: V237 = 0x20
0x39a: V238 = ADD 0x20 V236
0x39b: V239 = 0x40
0x39d: V240 = M[0x40]
0x3a0: V241 = ADD V240 V238
0x3a1: V242 = 0x40
0x3a3: M[0x40] = V241
0x3ab: M[V240] = V222
0x3ac: V243 = 0x20
0x3ae: V244 = ADD 0x20 V240
0x3b1: V245 = 0x20
0x3b3: V246 = MUL 0x20 V222
0x3b7: CALLDATACOPY V244 V224 V246
0x3b8: V247 = 0x0
0x3bc: V248 = ADD V244 V246
0x3bd: M[V248] = 0x0
0x3be: V249 = 0x1f
0x3c0: V250 = NOT 0x1f
0x3c1: V251 = 0x1f
0x3c4: V252 = ADD V246 0x1f
0x3c5: V253 = AND V252 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3ca: V254 = ADD V244 V253
0x3d9: V255 = CALLDATALOAD 0x24
0x3db: V256 = 0x20
0x3dd: V257 = ADD 0x20 0x24
0x3df: V258 = 0x100000000
0x3e6: V259 = GT V255 0x100000000
0x3e7: V260 = ISZERO V259
0x3e8: V261 = 0x3f0
0x3eb: JUMPI 0x3f0 V260
---
Entry stack: [V9, 0x507, V206, 0x4, V224, V222, 0x24]
Stack pops: 5
Stack additions: [V240, S4, S3, 0x44, V255]
Exit stack: [V9, 0x507, V240, V206, 0x4, 0x44, V255]

================================

Block 0x3ec
[0x3ec:0x3ef]
---
Predecessors: [0x390]
Successors: []
---
0x3ec PUSH1 0x0
0x3ee DUP1
0x3ef REVERT
---
0x3ec: V262 = 0x0
0x3ef: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, V240, V206, 0x4, 0x44, V255]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V240, V206, 0x4, 0x44, V255]

================================

Block 0x3f0
[0x3f0:0x3fd]
---
Predecessors: [0x390]
Successors: [0x3fe, 0x402]
---
0x3f0 JUMPDEST
0x3f1 DUP3
0x3f2 ADD
0x3f3 DUP4
0x3f4 PUSH1 0x20
0x3f6 DUP3
0x3f7 ADD
0x3f8 GT
0x3f9 ISZERO
0x3fa PUSH2 0x402
0x3fd JUMPI
---
0x3f0: JUMPDEST 
0x3f2: V263 = ADD 0x4 V255
0x3f4: V264 = 0x20
0x3f7: V265 = ADD V263 0x20
0x3f8: V266 = GT V265 V206
0x3f9: V267 = ISZERO V266
0x3fa: V268 = 0x402
0x3fd: JUMPI 0x402 V267
---
Entry stack: [V9, 0x507, V240, V206, 0x4, 0x44, V255]
Stack pops: 4
Stack additions: [S3, S2, S1, V263]
Exit stack: [V9, 0x507, V240, V206, 0x4, 0x44, V263]

================================

Block 0x3fe
[0x3fe:0x401]
---
Predecessors: [0x3f0]
Successors: []
---
0x3fe PUSH1 0x0
0x400 DUP1
0x401 REVERT
---
0x3fe: V269 = 0x0
0x401: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, V240, V206, 0x4, 0x44, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V240, V206, 0x4, 0x44, V263]

================================

Block 0x402
[0x402:0x41f]
---
Predecessors: [0x3f0]
Successors: [0x420, 0x424]
---
0x402 JUMPDEST
0x403 DUP1
0x404 CALLDATALOAD
0x405 SWAP1
0x406 PUSH1 0x20
0x408 ADD
0x409 SWAP2
0x40a DUP5
0x40b PUSH1 0x20
0x40d DUP4
0x40e MUL
0x40f DUP5
0x410 ADD
0x411 GT
0x412 PUSH5 0x100000000
0x418 DUP4
0x419 GT
0x41a OR
0x41b ISZERO
0x41c PUSH2 0x424
0x41f JUMPI
---
0x402: JUMPDEST 
0x404: V270 = CALLDATALOAD V263
0x406: V271 = 0x20
0x408: V272 = ADD 0x20 V263
0x40b: V273 = 0x20
0x40e: V274 = MUL V270 0x20
0x410: V275 = ADD V272 V274
0x411: V276 = GT V275 V206
0x412: V277 = 0x100000000
0x419: V278 = GT V270 0x100000000
0x41a: V279 = OR V278 V276
0x41b: V280 = ISZERO V279
0x41c: V281 = 0x424
0x41f: JUMPI 0x424 V280
---
Entry stack: [V9, 0x507, V240, V206, 0x4, 0x44, V263]
Stack pops: 4
Stack additions: [S3, S2, V272, V270, S1]
Exit stack: [V9, 0x507, V240, V206, 0x4, V272, V270, 0x44]

================================

Block 0x420
[0x420:0x423]
---
Predecessors: [0x402]
Successors: []
---
0x420 PUSH1 0x0
0x422 DUP1
0x423 REVERT
---
0x420: V282 = 0x0
0x423: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, V240, V206, 0x4, V272, V270, 0x44]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V240, V206, 0x4, V272, V270, 0x44]

================================

Block 0x424
[0x424:0x47f]
---
Predecessors: [0x402]
Successors: [0x480, 0x484]
---
0x424 JUMPDEST
0x425 SWAP2
0x426 SWAP1
0x427 DUP1
0x428 DUP1
0x429 PUSH1 0x20
0x42b MUL
0x42c PUSH1 0x20
0x42e ADD
0x42f PUSH1 0x40
0x431 MLOAD
0x432 SWAP1
0x433 DUP2
0x434 ADD
0x435 PUSH1 0x40
0x437 MSTORE
0x438 DUP1
0x439 SWAP4
0x43a SWAP3
0x43b SWAP2
0x43c SWAP1
0x43d DUP2
0x43e DUP2
0x43f MSTORE
0x440 PUSH1 0x20
0x442 ADD
0x443 DUP4
0x444 DUP4
0x445 PUSH1 0x20
0x447 MUL
0x448 DUP1
0x449 DUP3
0x44a DUP5
0x44b CALLDATACOPY
0x44c PUSH1 0x0
0x44e DUP2
0x44f DUP5
0x450 ADD
0x451 MSTORE
0x452 PUSH1 0x1f
0x454 NOT
0x455 PUSH1 0x1f
0x457 DUP3
0x458 ADD
0x459 AND
0x45a SWAP1
0x45b POP
0x45c DUP1
0x45d DUP4
0x45e ADD
0x45f SWAP3
0x460 POP
0x461 POP
0x462 POP
0x463 POP
0x464 POP
0x465 POP
0x466 POP
0x467 SWAP2
0x468 SWAP3
0x469 SWAP2
0x46a SWAP3
0x46b SWAP1
0x46c DUP1
0x46d CALLDATALOAD
0x46e SWAP1
0x46f PUSH1 0x20
0x471 ADD
0x472 SWAP1
0x473 PUSH5 0x100000000
0x479 DUP2
0x47a GT
0x47b ISZERO
0x47c PUSH2 0x484
0x47f JUMPI
---
0x424: JUMPDEST 
0x429: V283 = 0x20
0x42b: V284 = MUL 0x20 V270
0x42c: V285 = 0x20
0x42e: V286 = ADD 0x20 V284
0x42f: V287 = 0x40
0x431: V288 = M[0x40]
0x434: V289 = ADD V288 V286
0x435: V290 = 0x40
0x437: M[0x40] = V289
0x43f: M[V288] = V270
0x440: V291 = 0x20
0x442: V292 = ADD 0x20 V288
0x445: V293 = 0x20
0x447: V294 = MUL 0x20 V270
0x44b: CALLDATACOPY V292 V272 V294
0x44c: V295 = 0x0
0x450: V296 = ADD V292 V294
0x451: M[V296] = 0x0
0x452: V297 = 0x1f
0x454: V298 = NOT 0x1f
0x455: V299 = 0x1f
0x458: V300 = ADD V294 0x1f
0x459: V301 = AND V300 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x45e: V302 = ADD V292 V301
0x46d: V303 = CALLDATALOAD 0x44
0x46f: V304 = 0x20
0x471: V305 = ADD 0x20 0x44
0x473: V306 = 0x100000000
0x47a: V307 = GT V303 0x100000000
0x47b: V308 = ISZERO V307
0x47c: V309 = 0x484
0x47f: JUMPI 0x484 V308
---
Entry stack: [V9, 0x507, V240, V206, 0x4, V272, V270, 0x44]
Stack pops: 5
Stack additions: [V288, S4, S3, 0x64, V303]
Exit stack: [V9, 0x507, V240, V288, V206, 0x4, 0x64, V303]

================================

Block 0x480
[0x480:0x483]
---
Predecessors: [0x424]
Successors: []
---
0x480 PUSH1 0x0
0x482 DUP1
0x483 REVERT
---
0x480: V310 = 0x0
0x483: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, V240, V288, V206, 0x4, 0x64, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V240, V288, V206, 0x4, 0x64, V303]

================================

Block 0x484
[0x484:0x491]
---
Predecessors: [0x424]
Successors: [0x492, 0x496]
---
0x484 JUMPDEST
0x485 DUP3
0x486 ADD
0x487 DUP4
0x488 PUSH1 0x20
0x48a DUP3
0x48b ADD
0x48c GT
0x48d ISZERO
0x48e PUSH2 0x496
0x491 JUMPI
---
0x484: JUMPDEST 
0x486: V311 = ADD 0x4 V303
0x488: V312 = 0x20
0x48b: V313 = ADD V311 0x20
0x48c: V314 = GT V313 V206
0x48d: V315 = ISZERO V314
0x48e: V316 = 0x496
0x491: JUMPI 0x496 V315
---
Entry stack: [V9, 0x507, V240, V288, V206, 0x4, 0x64, V303]
Stack pops: 4
Stack additions: [S3, S2, S1, V311]
Exit stack: [V9, 0x507, V240, V288, V206, 0x4, 0x64, V311]

================================

Block 0x492
[0x492:0x495]
---
Predecessors: [0x484]
Successors: []
---
0x492 PUSH1 0x0
0x494 DUP1
0x495 REVERT
---
0x492: V317 = 0x0
0x495: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, V240, V288, V206, 0x4, 0x64, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V240, V288, V206, 0x4, 0x64, V311]

================================

Block 0x496
[0x496:0x4b3]
---
Predecessors: [0x484]
Successors: [0x4b4, 0x4b8]
---
0x496 JUMPDEST
0x497 DUP1
0x498 CALLDATALOAD
0x499 SWAP1
0x49a PUSH1 0x20
0x49c ADD
0x49d SWAP2
0x49e DUP5
0x49f PUSH1 0x20
0x4a1 DUP4
0x4a2 MUL
0x4a3 DUP5
0x4a4 ADD
0x4a5 GT
0x4a6 PUSH5 0x100000000
0x4ac DUP4
0x4ad GT
0x4ae OR
0x4af ISZERO
0x4b0 PUSH2 0x4b8
0x4b3 JUMPI
---
0x496: JUMPDEST 
0x498: V318 = CALLDATALOAD V311
0x49a: V319 = 0x20
0x49c: V320 = ADD 0x20 V311
0x49f: V321 = 0x20
0x4a2: V322 = MUL V318 0x20
0x4a4: V323 = ADD V320 V322
0x4a5: V324 = GT V323 V206
0x4a6: V325 = 0x100000000
0x4ad: V326 = GT V318 0x100000000
0x4ae: V327 = OR V326 V324
0x4af: V328 = ISZERO V327
0x4b0: V329 = 0x4b8
0x4b3: JUMPI 0x4b8 V328
---
Entry stack: [V9, 0x507, V240, V288, V206, 0x4, 0x64, V311]
Stack pops: 4
Stack additions: [S3, S2, V320, V318, S1]
Exit stack: [V9, 0x507, V240, V288, V206, 0x4, V320, V318, 0x64]

================================

Block 0x4b4
[0x4b4:0x4b7]
---
Predecessors: [0x496]
Successors: []
---
0x4b4 PUSH1 0x0
0x4b6 DUP1
0x4b7 REVERT
---
0x4b4: V330 = 0x0
0x4b7: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, V240, V288, V206, 0x4, V320, V318, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V240, V288, V206, 0x4, V320, V318, 0x64]

================================

Block 0x4b8
[0x4b8:0x506]
---
Predecessors: [0x496]
Successors: [0x6b5]
---
0x4b8 JUMPDEST
0x4b9 SWAP2
0x4ba SWAP1
0x4bb DUP1
0x4bc DUP1
0x4bd PUSH1 0x20
0x4bf MUL
0x4c0 PUSH1 0x20
0x4c2 ADD
0x4c3 PUSH1 0x40
0x4c5 MLOAD
0x4c6 SWAP1
0x4c7 DUP2
0x4c8 ADD
0x4c9 PUSH1 0x40
0x4cb MSTORE
0x4cc DUP1
0x4cd SWAP4
0x4ce SWAP3
0x4cf SWAP2
0x4d0 SWAP1
0x4d1 DUP2
0x4d2 DUP2
0x4d3 MSTORE
0x4d4 PUSH1 0x20
0x4d6 ADD
0x4d7 DUP4
0x4d8 DUP4
0x4d9 PUSH1 0x20
0x4db MUL
0x4dc DUP1
0x4dd DUP3
0x4de DUP5
0x4df CALLDATACOPY
0x4e0 PUSH1 0x0
0x4e2 DUP2
0x4e3 DUP5
0x4e4 ADD
0x4e5 MSTORE
0x4e6 PUSH1 0x1f
0x4e8 NOT
0x4e9 PUSH1 0x1f
0x4eb DUP3
0x4ec ADD
0x4ed AND
0x4ee SWAP1
0x4ef POP
0x4f0 DUP1
0x4f1 DUP4
0x4f2 ADD
0x4f3 SWAP3
0x4f4 POP
0x4f5 POP
0x4f6 POP
0x4f7 POP
0x4f8 POP
0x4f9 POP
0x4fa POP
0x4fb SWAP2
0x4fc SWAP3
0x4fd SWAP2
0x4fe SWAP3
0x4ff SWAP1
0x500 POP
0x501 POP
0x502 POP
0x503 PUSH2 0x6b5
0x506 JUMP
---
0x4b8: JUMPDEST 
0x4bd: V331 = 0x20
0x4bf: V332 = MUL 0x20 V318
0x4c0: V333 = 0x20
0x4c2: V334 = ADD 0x20 V332
0x4c3: V335 = 0x40
0x4c5: V336 = M[0x40]
0x4c8: V337 = ADD V336 V334
0x4c9: V338 = 0x40
0x4cb: M[0x40] = V337
0x4d3: M[V336] = V318
0x4d4: V339 = 0x20
0x4d6: V340 = ADD 0x20 V336
0x4d9: V341 = 0x20
0x4db: V342 = MUL 0x20 V318
0x4df: CALLDATACOPY V340 V320 V342
0x4e0: V343 = 0x0
0x4e4: V344 = ADD V340 V342
0x4e5: M[V344] = 0x0
0x4e6: V345 = 0x1f
0x4e8: V346 = NOT 0x1f
0x4e9: V347 = 0x1f
0x4ec: V348 = ADD V342 0x1f
0x4ed: V349 = AND V348 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4f2: V350 = ADD V340 V349
0x503: V351 = 0x6b5
0x506: JUMP 0x6b5
---
Entry stack: [V9, 0x507, V240, V288, V206, 0x4, V320, V318, 0x64]
Stack pops: 5
Stack additions: [V336]
Exit stack: [V9, 0x507, V240, V288, V336]

================================

Block 0x507
[0x507:0x51c]
---
Predecessors: [0x97d]
Successors: []
---
0x507 JUMPDEST
0x508 PUSH1 0x40
0x50a MLOAD
0x50b DUP1
0x50c DUP3
0x50d DUP2
0x50e MSTORE
0x50f PUSH1 0x20
0x511 ADD
0x512 SWAP2
0x513 POP
0x514 POP
0x515 PUSH1 0x40
0x517 MLOAD
0x518 DUP1
0x519 SWAP2
0x51a SUB
0x51b SWAP1
0x51c RETURN
---
0x507: JUMPDEST 
0x508: V352 = 0x40
0x50a: V353 = M[0x40]
0x50e: M[V353] = S0
0x50f: V354 = 0x20
0x511: V355 = ADD 0x20 V353
0x515: V356 = 0x40
0x517: V357 = M[0x40]
0x51a: V358 = SUB V355 V357
0x51c: RETURN V357 V358
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2, S1]

================================

Block 0x51d
[0x51d:0x524]
---
Predecessors: [0x51]
Successors: [0x525, 0x529]
---
0x51d JUMPDEST
0x51e CALLVALUE
0x51f DUP1
0x520 ISZERO
0x521 PUSH2 0x529
0x524 JUMPI
---
0x51d: JUMPDEST 
0x51e: V359 = CALLVALUE
0x520: V360 = ISZERO V359
0x521: V361 = 0x529
0x524: JUMPI 0x529 V360
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V359]
Exit stack: [V9, V359]

================================

Block 0x525
[0x525:0x528]
---
Predecessors: [0x51d]
Successors: []
---
0x525 PUSH1 0x0
0x527 DUP1
0x528 REVERT
---
0x525: V362 = 0x0
0x528: REVERT 0x0 0x0
---
Entry stack: [V9, V359]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V359]

================================

Block 0x529
[0x529:0x531]
---
Predecessors: [0x51d]
Successors: [0x988]
---
0x529 JUMPDEST
0x52a POP
0x52b PUSH2 0x532
0x52e PUSH2 0x988
0x531 JUMP
---
0x529: JUMPDEST 
0x52b: V363 = 0x532
0x52e: V364 = 0x988
0x531: JUMP 0x988
---
Entry stack: [V9, V359]
Stack pops: 1
Stack additions: [0x532]
Exit stack: [V9, 0x532]

================================

Block 0x532
[0x532:0x533]
---
Predecessors: [0x9e3]
Successors: []
---
0x532 JUMPDEST
0x533 STOP
---
0x532: JUMPDEST 
0x533: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x534
[0x534:0x53b]
---
Predecessors: [0x5c]
Successors: [0x53c, 0x540]
---
0x534 JUMPDEST
0x535 CALLVALUE
0x536 DUP1
0x537 ISZERO
0x538 PUSH2 0x540
0x53b JUMPI
---
0x534: JUMPDEST 
0x535: V365 = CALLVALUE
0x537: V366 = ISZERO V365
0x538: V367 = 0x540
0x53b: JUMPI 0x540 V366
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V365]
Exit stack: [V9, V365]

================================

Block 0x53c
[0x53c:0x53f]
---
Predecessors: [0x534]
Successors: []
---
0x53c PUSH1 0x0
0x53e DUP1
0x53f REVERT
---
0x53c: V368 = 0x0
0x53f: REVERT 0x0 0x0
---
Entry stack: [V9, V365]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V365]

================================

Block 0x540
[0x540:0x552]
---
Predecessors: [0x534]
Successors: [0x553, 0x557]
---
0x540 JUMPDEST
0x541 POP
0x542 PUSH2 0x56d
0x545 PUSH1 0x4
0x547 DUP1
0x548 CALLDATASIZE
0x549 SUB
0x54a PUSH1 0x20
0x54c DUP2
0x54d LT
0x54e ISZERO
0x54f PUSH2 0x557
0x552 JUMPI
---
0x540: JUMPDEST 
0x542: V369 = 0x56d
0x545: V370 = 0x4
0x548: V371 = CALLDATASIZE
0x549: V372 = SUB V371 0x4
0x54a: V373 = 0x20
0x54d: V374 = LT V372 0x20
0x54e: V375 = ISZERO V374
0x54f: V376 = 0x557
0x552: JUMPI 0x557 V375
---
Entry stack: [V9, V365]
Stack pops: 1
Stack additions: [0x56d, 0x4, V372]
Exit stack: [V9, 0x56d, 0x4, V372]

================================

Block 0x553
[0x553:0x556]
---
Predecessors: [0x540]
Successors: []
---
0x553 PUSH1 0x0
0x555 DUP1
0x556 REVERT
---
0x553: V377 = 0x0
0x556: REVERT 0x0 0x0
---
Entry stack: [V9, 0x56d, 0x4, V372]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x56d, 0x4, V372]

================================

Block 0x557
[0x557:0x56c]
---
Predecessors: [0x540]
Successors: [0xa00]
---
0x557 JUMPDEST
0x558 DUP2
0x559 ADD
0x55a SWAP1
0x55b DUP1
0x55c DUP1
0x55d CALLDATALOAD
0x55e SWAP1
0x55f PUSH1 0x20
0x561 ADD
0x562 SWAP1
0x563 SWAP3
0x564 SWAP2
0x565 SWAP1
0x566 POP
0x567 POP
0x568 POP
0x569 PUSH2 0xa00
0x56c JUMP
---
0x557: JUMPDEST 
0x559: V378 = ADD 0x4 V372
0x55d: V379 = CALLDATALOAD 0x4
0x55f: V380 = 0x20
0x561: V381 = ADD 0x20 0x4
0x569: V382 = 0xa00
0x56c: JUMP 0xa00
---
Entry stack: [V9, 0x56d, 0x4, V372]
Stack pops: 2
Stack additions: [V379]
Exit stack: [V9, 0x56d, V379]

================================

Block 0x56d
[0x56d:0x56e]
---
Predecessors: [0xb04, 0xb99]
Successors: []
---
0x56d JUMPDEST
0x56e STOP
---
0x56d: JUMPDEST 
0x56e: STOP 
---
Entry stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x56f
[0x56f:0x576]
---
Predecessors: [0x67]
Successors: [0x577, 0x57b]
---
0x56f JUMPDEST
0x570 CALLVALUE
0x571 DUP1
0x572 ISZERO
0x573 PUSH2 0x57b
0x576 JUMPI
---
0x56f: JUMPDEST 
0x570: V383 = CALLVALUE
0x572: V384 = ISZERO V383
0x573: V385 = 0x57b
0x576: JUMPI 0x57b V384
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V383]
Exit stack: [V9, V383]

================================

Block 0x577
[0x577:0x57a]
---
Predecessors: [0x56f]
Successors: []
---
0x577 PUSH1 0x0
0x579 DUP1
0x57a REVERT
---
0x577: V386 = 0x0
0x57a: REVERT 0x0 0x0
---
Entry stack: [V9, V383]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V383]

================================

Block 0x57b
[0x57b:0x58d]
---
Predecessors: [0x56f]
Successors: [0x58e, 0x592]
---
0x57b JUMPDEST
0x57c POP
0x57d PUSH2 0x5be
0x580 PUSH1 0x4
0x582 DUP1
0x583 CALLDATASIZE
0x584 SUB
0x585 PUSH1 0x20
0x587 DUP2
0x588 LT
0x589 ISZERO
0x58a PUSH2 0x592
0x58d JUMPI
---
0x57b: JUMPDEST 
0x57d: V387 = 0x5be
0x580: V388 = 0x4
0x583: V389 = CALLDATASIZE
0x584: V390 = SUB V389 0x4
0x585: V391 = 0x20
0x588: V392 = LT V390 0x20
0x589: V393 = ISZERO V392
0x58a: V394 = 0x592
0x58d: JUMPI 0x592 V393
---
Entry stack: [V9, V383]
Stack pops: 1
Stack additions: [0x5be, 0x4, V390]
Exit stack: [V9, 0x5be, 0x4, V390]

================================

Block 0x58e
[0x58e:0x591]
---
Predecessors: [0x57b]
Successors: []
---
0x58e PUSH1 0x0
0x590 DUP1
0x591 REVERT
---
0x58e: V395 = 0x0
0x591: REVERT 0x0 0x0
---
Entry stack: [V9, 0x5be, 0x4, V390]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5be, 0x4, V390]

================================

Block 0x592
[0x592:0x5bd]
---
Predecessors: [0x57b]
Successors: [0xb08]
---
0x592 JUMPDEST
0x593 DUP2
0x594 ADD
0x595 SWAP1
0x596 DUP1
0x597 DUP1
0x598 CALLDATALOAD
0x599 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ae AND
0x5af SWAP1
0x5b0 PUSH1 0x20
0x5b2 ADD
0x5b3 SWAP1
0x5b4 SWAP3
0x5b5 SWAP2
0x5b6 SWAP1
0x5b7 POP
0x5b8 POP
0x5b9 POP
0x5ba PUSH2 0xb08
0x5bd JUMP
---
0x592: JUMPDEST 
0x594: V396 = ADD 0x4 V390
0x598: V397 = CALLDATALOAD 0x4
0x599: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ae: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x5b0: V400 = 0x20
0x5b2: V401 = ADD 0x20 0x4
0x5ba: V402 = 0xb08
0x5bd: JUMP 0xb08
---
Entry stack: [V9, 0x5be, 0x4, V390]
Stack pops: 2
Stack additions: [V399]
Exit stack: [V9, 0x5be, V399]

================================

Block 0x5be
[0x5be:0x5d3]
---
Predecessors: [0xb08]
Successors: []
---
0x5be JUMPDEST
0x5bf PUSH1 0x40
0x5c1 MLOAD
0x5c2 DUP1
0x5c3 DUP3
0x5c4 DUP2
0x5c5 MSTORE
0x5c6 PUSH1 0x20
0x5c8 ADD
0x5c9 SWAP2
0x5ca POP
0x5cb POP
0x5cc PUSH1 0x40
0x5ce MLOAD
0x5cf DUP1
0x5d0 SWAP2
0x5d1 SUB
0x5d2 SWAP1
0x5d3 RETURN
---
0x5be: JUMPDEST 
0x5bf: V403 = 0x40
0x5c1: V404 = M[0x40]
0x5c5: M[V404] = V778
0x5c6: V405 = 0x20
0x5c8: V406 = ADD 0x20 V404
0x5cc: V407 = 0x40
0x5ce: V408 = M[0x40]
0x5d1: V409 = SUB V406 V408
0x5d3: RETURN V408 V409
---
Entry stack: [V9, 0x5be, V778]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x5be]

================================

Block 0x5d4
[0x5d4:0x5f9]
---
Predecessors: [0x1d3]
Successors: [0x1dc]
---
0x5d4 JUMPDEST
0x5d5 PUSH1 0x5
0x5d7 PUSH1 0x0
0x5d9 SWAP1
0x5da SLOAD
0x5db SWAP1
0x5dc PUSH2 0x100
0x5df EXP
0x5e0 SWAP1
0x5e1 DIV
0x5e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f7 AND
0x5f8 DUP2
0x5f9 JUMP
---
0x5d4: JUMPDEST 
0x5d5: V410 = 0x5
0x5d7: V411 = 0x0
0x5da: V412 = S[0x5]
0x5dc: V413 = 0x100
0x5df: V414 = EXP 0x100 0x0
0x5e1: V415 = DIV V412 0x1
0x5e2: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f7: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x5f9: JUMP 0x1dc
---
Entry stack: [V9, 0x1dc]
Stack pops: 1
Stack additions: [S0, V417]
Exit stack: [V9, 0x1dc, V417]

================================

Block 0x5fa
[0x5fa:0x650]
---
Predecessors: [0x22a]
Successors: [0x651, 0x655]
---
0x5fa JUMPDEST
0x5fb PUSH1 0x0
0x5fd DUP1
0x5fe SWAP1
0x5ff SLOAD
0x600 SWAP1
0x601 PUSH2 0x100
0x604 EXP
0x605 SWAP1
0x606 DIV
0x607 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61c AND
0x61d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x632 AND
0x633 CALLER
0x634 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x649 AND
0x64a EQ
0x64b ISZERO
0x64c ISZERO
0x64d PUSH2 0x655
0x650 JUMPI
---
0x5fa: JUMPDEST 
0x5fb: V418 = 0x0
0x5ff: V419 = S[0x0]
0x601: V420 = 0x100
0x604: V421 = EXP 0x100 0x0
0x606: V422 = DIV V419 0x1
0x607: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x61c: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x61d: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x632: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x633: V427 = CALLER
0x634: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x649: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x64a: V430 = EQ V429 V426
0x64b: V431 = ISZERO V430
0x64c: V432 = ISZERO V431
0x64d: V433 = 0x655
0x650: JUMPI 0x655 V432
---
Entry stack: [V9, 0x233]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x233]

================================

Block 0x651
[0x651:0x654]
---
Predecessors: [0x5fa]
Successors: []
---
0x651 PUSH1 0x0
0x653 DUP1
0x654 REVERT
---
0x651: V434 = 0x0
0x654: REVERT 0x0 0x0
---
Entry stack: [V9, 0x233]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x233]

================================

Block 0x655
[0x655:0x671]
---
Predecessors: [0x5fa]
Successors: [0x233]
---
0x655 JUMPDEST
0x656 PUSH1 0x1
0x658 PUSH1 0x3
0x65a PUSH1 0x0
0x65c PUSH2 0x100
0x65f EXP
0x660 DUP2
0x661 SLOAD
0x662 DUP2
0x663 PUSH1 0xff
0x665 MUL
0x666 NOT
0x667 AND
0x668 SWAP1
0x669 DUP4
0x66a ISZERO
0x66b ISZERO
0x66c MUL
0x66d OR
0x66e SWAP1
0x66f SSTORE
0x670 POP
0x671 JUMP
---
0x655: JUMPDEST 
0x656: V435 = 0x1
0x658: V436 = 0x3
0x65a: V437 = 0x0
0x65c: V438 = 0x100
0x65f: V439 = EXP 0x100 0x0
0x661: V440 = S[0x3]
0x663: V441 = 0xff
0x665: V442 = MUL 0xff 0x1
0x666: V443 = NOT 0xff
0x667: V444 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V440
0x66a: V445 = ISZERO 0x1
0x66b: V446 = ISZERO 0x0
0x66c: V447 = MUL 0x1 0x1
0x66d: V448 = OR 0x1 V444
0x66f: S[0x3] = V448
0x671: JUMP 0x233
---
Entry stack: [V9, 0x233]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x672
[0x672:0x696]
---
Predecessors: [0x241]
Successors: [0x24a]
---
0x672 JUMPDEST
0x673 PUSH1 0x0
0x675 DUP1
0x676 SWAP1
0x677 SLOAD
0x678 SWAP1
0x679 PUSH2 0x100
0x67c EXP
0x67d SWAP1
0x67e DIV
0x67f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x694 AND
0x695 DUP2
0x696 JUMP
---
0x672: JUMPDEST 
0x673: V449 = 0x0
0x677: V450 = S[0x0]
0x679: V451 = 0x100
0x67c: V452 = EXP 0x100 0x0
0x67e: V453 = DIV V450 0x1
0x67f: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x694: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x696: JUMP 0x24a
---
Entry stack: [V9, 0x24a]
Stack pops: 1
Stack additions: [S0, V455]
Exit stack: [V9, 0x24a, V455]

================================

Block 0x697
[0x697:0x69c]
---
Predecessors: [0x298]
Successors: [0x2a1]
---
0x697 JUMPDEST
0x698 PUSH1 0x6
0x69a SLOAD
0x69b DUP2
0x69c JUMP
---
0x697: JUMPDEST 
0x698: V456 = 0x6
0x69a: V457 = S[0x6]
0x69c: JUMP 0x2a1
---
Entry stack: [V9, 0x2a1]
Stack pops: 1
Stack additions: [S0, V457]
Exit stack: [V9, 0x2a1, V457]

================================

Block 0x69d
[0x69d:0x6b4]
---
Predecessors: [0x2da]
Successors: [0x306]
---
0x69d JUMPDEST
0x69e PUSH1 0x2
0x6a0 PUSH1 0x20
0x6a2 MSTORE
0x6a3 DUP1
0x6a4 PUSH1 0x0
0x6a6 MSTORE
0x6a7 PUSH1 0x40
0x6a9 PUSH1 0x0
0x6ab SHA3
0x6ac PUSH1 0x0
0x6ae SWAP2
0x6af POP
0x6b0 SWAP1
0x6b1 POP
0x6b2 SLOAD
0x6b3 DUP2
0x6b4 JUMP
---
0x69d: JUMPDEST 
0x69e: V458 = 0x2
0x6a0: V459 = 0x20
0x6a2: M[0x20] = 0x2
0x6a4: V460 = 0x0
0x6a6: M[0x0] = V182
0x6a7: V461 = 0x40
0x6a9: V462 = 0x0
0x6ab: V463 = SHA3 0x0 0x40
0x6ac: V464 = 0x0
0x6b2: V465 = S[V463]
0x6b4: JUMP 0x306
---
Entry stack: [V9, 0x306, V182]
Stack pops: 2
Stack additions: [S1, V465]
Exit stack: [V9, 0x306, V465]

================================

Block 0x6b5
[0x6b5:0x70d]
---
Predecessors: [0x4b8]
Successors: [0x70e, 0x712]
---
0x6b5 JUMPDEST
0x6b6 PUSH1 0x0
0x6b8 DUP1
0x6b9 PUSH1 0x0
0x6bb SWAP1
0x6bc SLOAD
0x6bd SWAP1
0x6be PUSH2 0x100
0x6c1 EXP
0x6c2 SWAP1
0x6c3 DIV
0x6c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d9 AND
0x6da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ef AND
0x6f0 CALLER
0x6f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x706 AND
0x707 EQ
0x708 ISZERO
0x709 ISZERO
0x70a PUSH2 0x712
0x70d JUMPI
---
0x6b5: JUMPDEST 
0x6b6: V466 = 0x0
0x6b9: V467 = 0x0
0x6bc: V468 = S[0x0]
0x6be: V469 = 0x100
0x6c1: V470 = EXP 0x100 0x0
0x6c3: V471 = DIV V468 0x1
0x6c4: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d9: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x6da: V474 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ef: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V473
0x6f0: V476 = CALLER
0x6f1: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x706: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x707: V479 = EQ V478 V475
0x708: V480 = ISZERO V479
0x709: V481 = ISZERO V480
0x70a: V482 = 0x712
0x70d: JUMPI 0x712 V481
---
Entry stack: [V9, 0x507, V240, V288, V336]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V9, 0x507, V240, V288, V336, 0x0]

================================

Block 0x70e
[0x70e:0x711]
---
Predecessors: [0x6b5]
Successors: []
---
0x70e PUSH1 0x0
0x710 DUP1
0x711 REVERT
---
0x70e: V483 = 0x0
0x711: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, V240, V288, V336, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V240, V288, V336, 0x0]

================================

Block 0x712
[0x712:0x728]
---
Predecessors: [0x6b5]
Successors: [0x729, 0x72d]
---
0x712 JUMPDEST
0x713 PUSH1 0x3
0x715 PUSH1 0x0
0x717 SWAP1
0x718 SLOAD
0x719 SWAP1
0x71a PUSH2 0x100
0x71d EXP
0x71e SWAP1
0x71f DIV
0x720 PUSH1 0xff
0x722 AND
0x723 ISZERO
0x724 ISZERO
0x725 PUSH2 0x72d
0x728 JUMPI
---
0x712: JUMPDEST 
0x713: V484 = 0x3
0x715: V485 = 0x0
0x718: V486 = S[0x3]
0x71a: V487 = 0x100
0x71d: V488 = EXP 0x100 0x0
0x71f: V489 = DIV V486 0x1
0x720: V490 = 0xff
0x722: V491 = AND 0xff V489
0x723: V492 = ISZERO V491
0x724: V493 = ISZERO V492
0x725: V494 = 0x72d
0x728: JUMPI 0x72d V493
---
Entry stack: [V9, 0x507, V240, V288, V336, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V240, V288, V336, 0x0]

================================

Block 0x729
[0x729:0x72c]
---
Predecessors: [0x712]
Successors: []
---
0x729 PUSH1 0x0
0x72b DUP1
0x72c REVERT
---
0x729: V495 = 0x0
0x72c: REVERT 0x0 0x0
---
Entry stack: [V9, 0x507, V240, V288, V336, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x507, V240, V288, V336, 0x0]

================================

Block 0x72d
[0x72d:0x732]
---
Predecessors: [0x712]
Successors: [0x733]
---
0x72d JUMPDEST
0x72e PUSH1 0x0
0x730 DUP1
0x731 SWAP1
0x732 POP
---
0x72d: JUMPDEST 
0x72e: V496 = 0x0
---
Entry stack: [V9, 0x507, V240, V288, V336, 0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V9, 0x507, V240, V288, V336, 0x0, 0x0]

================================

Block 0x733
[0x733:0x73c]
---
Predecessors: [0x72d, 0x962]
Successors: [0x73d, 0x97d]
---
0x733 JUMPDEST
0x734 DUP5
0x735 MLOAD
0x736 DUP2
0x737 LT
0x738 ISZERO
0x739 PUSH2 0x97d
0x73c JUMPI
---
0x733: JUMPDEST 
0x735: V497 = M[S4]
0x737: V498 = LT S0 V497
0x738: V499 = ISZERO V498
0x739: V500 = 0x97d
0x73c: JUMPI 0x97d V499
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x73d
[0x73d:0x757]
---
Predecessors: [0x733]
Successors: [0x758, 0x759]
---
0x73d PUSH1 0x0
0x73f PUSH2 0x7a5
0x742 PUSH2 0x77f
0x745 PUSH1 0x64
0x747 PUSH2 0x771
0x74a PUSH1 0x3
0x74c DUP10
0x74d DUP8
0x74e DUP2
0x74f MLOAD
0x750 DUP2
0x751 LT
0x752 ISZERO
0x753 ISZERO
0x754 PUSH2 0x759
0x757 JUMPI
---
0x73d: V501 = 0x0
0x73f: V502 = 0x7a5
0x742: V503 = 0x77f
0x745: V504 = 0x64
0x747: V505 = 0x771
0x74a: V506 = 0x3
0x74f: V507 = M[S3]
0x751: V508 = LT S0 V507
0x752: V509 = ISZERO V508
0x753: V510 = ISZERO V509
0x754: V511 = 0x759
0x757: JUMPI 0x759 V510
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x7a5, 0x77f, 0x64, 0x771, 0x3, S3, S0]
Exit stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x7a5, 0x77f, 0x64, 0x771, 0x3, S3, S0]

================================

Block 0x758
[0x758:0x758]
---
Predecessors: [0x73d]
Successors: []
---
0x758 INVALID
---
0x758: INVALID 
---
Entry stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, 0x7a5, 0x77f, 0x64, 0x771, 0x3, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, 0x7a5, 0x77f, 0x64, 0x771, 0x3, S1, S0]

================================

Block 0x759
[0x759:0x770]
---
Predecessors: [0x73d]
Successors: [0xb20]
---
0x759 JUMPDEST
0x75a SWAP1
0x75b PUSH1 0x20
0x75d ADD
0x75e SWAP1
0x75f PUSH1 0x20
0x761 MUL
0x762 ADD
0x763 MLOAD
0x764 PUSH2 0xb20
0x767 SWAP1
0x768 SWAP2
0x769 SWAP1
0x76a PUSH4 0xffffffff
0x76f AND
0x770 JUMP
---
0x759: JUMPDEST 
0x75b: V512 = 0x20
0x75d: V513 = ADD 0x20 S1
0x75f: V514 = 0x20
0x761: V515 = MUL 0x20 S0
0x762: V516 = ADD V515 V513
0x763: V517 = M[V516]
0x764: V518 = 0xb20
0x76a: V519 = 0xffffffff
0x76f: V520 = AND 0xffffffff 0xb20
0x770: JUMP 0xb20
---
Entry stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, 0x7a5, 0x77f, 0x64, 0x771, 0x3, S1, S0]
Stack pops: 3
Stack additions: [V517, S2]
Exit stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, 0x7a5, 0x77f, 0x64, 0x771, V517, 0x3]

================================

Block 0x771
[0x771:0x77e]
---
Predecessors: [0xb58]
Successors: [0xb5e]
---
0x771 JUMPDEST
0x772 PUSH2 0xb5e
0x775 SWAP1
0x776 SWAP2
0x777 SWAP1
0x778 PUSH4 0xffffffff
0x77d AND
0x77e JUMP
---
0x771: JUMPDEST 
0x772: V521 = 0xb5e
0x778: V522 = 0xffffffff
0x77d: V523 = AND 0xffffffff 0xb5e
0x77e: JUMP 0xb5e
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x64}, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, {0x0, 0x64}]

================================

Block 0x77f
[0x77f:0x78b]
---
Predecessors: [0xb7b]
Successors: [0x78c, 0x78d]
---
0x77f JUMPDEST
0x780 DUP7
0x781 DUP5
0x782 DUP2
0x783 MLOAD
0x784 DUP2
0x785 LT
0x786 ISZERO
0x787 ISZERO
0x788 PUSH2 0x78d
0x78b JUMPI
---
0x77f: JUMPDEST 
0x783: V524 = M[S6]
0x785: V525 = LT S3 V524
0x786: V526 = ISZERO V525
0x787: V527 = ISZERO V526
0x788: V528 = 0x78d
0x78b: JUMPI 0x78d V527
---
Entry stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V806]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, S3]
Exit stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V806, S6, S3]

================================

Block 0x78c
[0x78c:0x78c]
---
Predecessors: [0x77f]
Successors: []
---
0x78c INVALID
---
0x78c: INVALID 
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V806, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V806, S1, S0]

================================

Block 0x78d
[0x78d:0x7a4]
---
Predecessors: [0x77f]
Successors: [0xb88]
---
0x78d JUMPDEST
0x78e SWAP1
0x78f PUSH1 0x20
0x791 ADD
0x792 SWAP1
0x793 PUSH1 0x20
0x795 MUL
0x796 ADD
0x797 MLOAD
0x798 PUSH2 0xb88
0x79b SWAP1
0x79c SWAP2
0x79d SWAP1
0x79e PUSH4 0xffffffff
0x7a3 AND
0x7a4 JUMP
---
0x78d: JUMPDEST 
0x78f: V529 = 0x20
0x791: V530 = ADD 0x20 S1
0x793: V531 = 0x20
0x795: V532 = MUL 0x20 S0
0x796: V533 = ADD V532 V530
0x797: V534 = M[V533]
0x798: V535 = 0xb88
0x79e: V536 = 0xffffffff
0x7a3: V537 = AND 0xffffffff 0xb88
0x7a4: JUMP 0xb88
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V806, S1, S0]
Stack pops: 3
Stack additions: [V534, S2]
Exit stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V534, V806]

================================

Block 0x7a5
[0x7a5:0x7b3]
---
Predecessors: [0xb04, 0xb99]
Successors: [0x7b4, 0x7b5]
---
0x7a5 JUMPDEST
0x7a6 SWAP1
0x7a7 POP
0x7a8 DUP6
0x7a9 DUP3
0x7aa DUP2
0x7ab MLOAD
0x7ac DUP2
0x7ad LT
0x7ae ISZERO
0x7af ISZERO
0x7b0 PUSH2 0x7b5
0x7b3 JUMPI
---
0x7a5: JUMPDEST 
0x7ab: V538 = M[S6]
0x7ad: V539 = LT S2 V538
0x7ae: V540 = ISZERO V539
0x7af: V541 = ISZERO V540
0x7b0: V542 = 0x7b5
0x7b3: JUMPI 0x7b5 V541
---
Entry stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S0, S6, S2]
Exit stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S6, S2]

================================

Block 0x7b4
[0x7b4:0x7b4]
---
Predecessors: [0x7a5]
Successors: []
---
0x7b4 INVALID
---
0x7b4: INVALID 
---
Entry stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7b5
[0x7b5:0x7fa]
---
Predecessors: [0x7a5]
Successors: [0x7fb, 0x804]
---
0x7b5 JUMPDEST
0x7b6 SWAP1
0x7b7 PUSH1 0x20
0x7b9 ADD
0x7ba SWAP1
0x7bb PUSH1 0x20
0x7bd MUL
0x7be ADD
0x7bf MLOAD
0x7c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d5 AND
0x7d6 PUSH2 0x8fc
0x7d9 DUP3
0x7da SWAP1
0x7db DUP2
0x7dc ISZERO
0x7dd MUL
0x7de SWAP1
0x7df PUSH1 0x40
0x7e1 MLOAD
0x7e2 PUSH1 0x0
0x7e4 PUSH1 0x40
0x7e6 MLOAD
0x7e7 DUP1
0x7e8 DUP4
0x7e9 SUB
0x7ea DUP2
0x7eb DUP6
0x7ec DUP9
0x7ed DUP9
0x7ee CALL
0x7ef SWAP4
0x7f0 POP
0x7f1 POP
0x7f2 POP
0x7f3 POP
0x7f4 ISZERO
0x7f5 DUP1
0x7f6 ISZERO
0x7f7 PUSH2 0x804
0x7fa JUMPI
---
0x7b5: JUMPDEST 
0x7b7: V543 = 0x20
0x7b9: V544 = ADD 0x20 S1
0x7bb: V545 = 0x20
0x7bd: V546 = MUL 0x20 S0
0x7be: V547 = ADD V546 V544
0x7bf: V548 = M[V547]
0x7c0: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d5: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x7d6: V551 = 0x8fc
0x7dc: V552 = ISZERO S2
0x7dd: V553 = MUL V552 0x8fc
0x7df: V554 = 0x40
0x7e1: V555 = M[0x40]
0x7e2: V556 = 0x0
0x7e4: V557 = 0x40
0x7e6: V558 = M[0x40]
0x7e9: V559 = SUB V555 V558
0x7ee: V560 = CALL V553 V550 S2 V558 V559 V558 0x0
0x7f4: V561 = ISZERO V560
0x7f6: V562 = ISZERO V561
0x7f7: V563 = 0x804
0x7fa: JUMPI 0x804 V562
---
Entry stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V561]
Exit stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V561]

================================

Block 0x7fb
[0x7fb:0x803]
---
Predecessors: [0x7b5]
Successors: []
---
0x7fb RETURNDATASIZE
0x7fc PUSH1 0x0
0x7fe DUP1
0x7ff RETURNDATACOPY
0x800 RETURNDATASIZE
0x801 PUSH1 0x0
0x803 REVERT
---
0x7fb: V564 = RETURNDATASIZE
0x7fc: V565 = 0x0
0x7ff: RETURNDATACOPY 0x0 0x0 V564
0x800: V566 = RETURNDATASIZE
0x801: V567 = 0x0
0x803: REVERT 0x0 V566
---
Entry stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V561]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V561]

================================

Block 0x804
[0x804:0x811]
---
Predecessors: [0x7b5]
Successors: [0x812, 0x813]
---
0x804 JUMPDEST
0x805 POP
0x806 DUP5
0x807 DUP3
0x808 DUP2
0x809 MLOAD
0x80a DUP2
0x80b LT
0x80c ISZERO
0x80d ISZERO
0x80e PUSH2 0x813
0x811 JUMPI
---
0x804: JUMPDEST 
0x809: V568 = M[S5]
0x80b: V569 = LT S2 V568
0x80c: V570 = ISZERO V569
0x80d: V571 = ISZERO V570
0x80e: V572 = 0x813
0x811: JUMPI 0x813 V571
---
Entry stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V561]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S5, S2]
Exit stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S5, S2]

================================

Block 0x812
[0x812:0x812]
---
Predecessors: [0x804]
Successors: []
---
0x812 INVALID
---
0x812: INVALID 
---
Entry stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x813
[0x813:0x82d]
---
Predecessors: [0x804]
Successors: [0x82e, 0x82f]
---
0x813 JUMPDEST
0x814 SWAP1
0x815 PUSH1 0x20
0x817 ADD
0x818 SWAP1
0x819 PUSH1 0x20
0x81b MUL
0x81c ADD
0x81d MLOAD
0x81e PUSH1 0x2
0x820 PUSH1 0x0
0x822 DUP9
0x823 DUP6
0x824 DUP2
0x825 MLOAD
0x826 DUP2
0x827 LT
0x828 ISZERO
0x829 ISZERO
0x82a PUSH2 0x82f
0x82d JUMPI
---
0x813: JUMPDEST 
0x815: V573 = 0x20
0x817: V574 = ADD 0x20 S1
0x819: V575 = 0x20
0x81b: V576 = MUL 0x20 S0
0x81c: V577 = ADD V576 V574
0x81d: V578 = M[V577]
0x81e: V579 = 0x2
0x820: V580 = 0x0
0x825: V581 = M[S7]
0x827: V582 = LT S3 V581
0x828: V583 = ISZERO V582
0x829: V584 = ISZERO V583
0x82a: V585 = 0x82f
0x82d: JUMPI 0x82f V584
---
Entry stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V578, 0x2, 0x0, S7, S3]
Exit stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V578, 0x2, 0x0, S7, S3]

================================

Block 0x82e
[0x82e:0x82e]
---
Predecessors: [0x813]
Successors: []
---
0x82e INVALID
---
0x82e: INVALID 
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V578, 0x2, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V578, 0x2, 0x0, S1, S0]

================================

Block 0x82f
[0x82f:0x88d]
---
Predecessors: [0x813]
Successors: [0x88e, 0x88f]
---
0x82f JUMPDEST
0x830 SWAP1
0x831 PUSH1 0x20
0x833 ADD
0x834 SWAP1
0x835 PUSH1 0x20
0x837 MUL
0x838 ADD
0x839 MLOAD
0x83a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84f AND
0x850 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x865 AND
0x866 DUP2
0x867 MSTORE
0x868 PUSH1 0x20
0x86a ADD
0x86b SWAP1
0x86c DUP2
0x86d MSTORE
0x86e PUSH1 0x20
0x870 ADD
0x871 PUSH1 0x0
0x873 SHA3
0x874 PUSH1 0x0
0x876 DUP3
0x877 DUP3
0x878 SLOAD
0x879 ADD
0x87a SWAP3
0x87b POP
0x87c POP
0x87d DUP2
0x87e SWAP1
0x87f SSTORE
0x880 POP
0x881 NUMBER
0x882 DUP7
0x883 DUP4
0x884 DUP2
0x885 MLOAD
0x886 DUP2
0x887 LT
0x888 ISZERO
0x889 ISZERO
0x88a PUSH2 0x88f
0x88d JUMPI
---
0x82f: JUMPDEST 
0x831: V586 = 0x20
0x833: V587 = ADD 0x20 S1
0x835: V588 = 0x20
0x837: V589 = MUL 0x20 S0
0x838: V590 = ADD V589 V587
0x839: V591 = M[V590]
0x83a: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0x84f: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0x850: V594 = 0xffffffffffffffffffffffffffffffffffffffff
0x865: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0x867: M[0x0] = V595
0x868: V596 = 0x20
0x86a: V597 = ADD 0x20 0x0
0x86d: M[0x20] = 0x2
0x86e: V598 = 0x20
0x870: V599 = ADD 0x20 0x20
0x871: V600 = 0x0
0x873: V601 = SHA3 0x0 0x40
0x874: V602 = 0x0
0x878: V603 = S[V601]
0x879: V604 = ADD V603 V578
0x87f: S[V601] = V604
0x881: V605 = NUMBER
0x885: V606 = M[S10]
0x887: V607 = LT S6 V606
0x888: V608 = ISZERO V607
0x889: V609 = ISZERO V608
0x88a: V610 = 0x88f
0x88d: JUMPI 0x88f V609
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V578, 0x2, 0x0, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, V605, S10, S6]
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V605, S10, S6]

================================

Block 0x88e
[0x88e:0x88e]
---
Predecessors: [0x82f]
Successors: []
---
0x88e INVALID
---
0x88e: INVALID 
---
Entry stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V605, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V605, S1, S0]

================================

Block 0x88f
[0x88f:0x8dc]
---
Predecessors: [0x82f]
Successors: [0x8dd, 0x8de]
---
0x88f JUMPDEST
0x890 SWAP1
0x891 PUSH1 0x20
0x893 ADD
0x894 SWAP1
0x895 PUSH1 0x20
0x897 MUL
0x898 ADD
0x899 MLOAD
0x89a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8af AND
0x8b0 PUSH32 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06
0x8d1 DUP8
0x8d2 DUP6
0x8d3 DUP2
0x8d4 MLOAD
0x8d5 DUP2
0x8d6 LT
0x8d7 ISZERO
0x8d8 ISZERO
0x8d9 PUSH2 0x8de
0x8dc JUMPI
---
0x88f: JUMPDEST 
0x891: V611 = 0x20
0x893: V612 = ADD 0x20 S1
0x895: V613 = 0x20
0x897: V614 = MUL 0x20 S0
0x898: V615 = ADD V614 V612
0x899: V616 = M[V615]
0x89a: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0x8af: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x8b0: V619 = 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06
0x8d4: V620 = M[S7]
0x8d6: V621 = LT S4 V620
0x8d7: V622 = ISZERO V621
0x8d8: V623 = ISZERO V622
0x8d9: V624 = 0x8de
0x8dc: JUMPI 0x8de V623
---
Entry stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V605, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V618, 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06, S7, S4]
Exit stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V605, V618, 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06, S7, S4]

================================

Block 0x8dd
[0x8dd:0x8dd]
---
Predecessors: [0x88f]
Successors: []
---
0x8dd INVALID
---
0x8dd: INVALID 
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V605, V618, 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V605, V618, 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06, S1, S0]

================================

Block 0x8de
[0x8de:0x8f4]
---
Predecessors: [0x88f]
Successors: [0x8f5, 0x8f6]
---
0x8de JUMPDEST
0x8df SWAP1
0x8e0 PUSH1 0x20
0x8e2 ADD
0x8e3 SWAP1
0x8e4 PUSH1 0x20
0x8e6 MUL
0x8e7 ADD
0x8e8 MLOAD
0x8e9 DUP8
0x8ea DUP7
0x8eb DUP2
0x8ec MLOAD
0x8ed DUP2
0x8ee LT
0x8ef ISZERO
0x8f0 ISZERO
0x8f1 PUSH2 0x8f6
0x8f4 JUMPI
---
0x8de: JUMPDEST 
0x8e0: V625 = 0x20
0x8e2: V626 = ADD 0x20 S1
0x8e4: V627 = 0x20
0x8e6: V628 = MUL 0x20 S0
0x8e7: V629 = ADD V628 V626
0x8e8: V630 = M[V629]
0x8ec: V631 = M[S8]
0x8ee: V632 = LT S6 V631
0x8ef: V633 = ISZERO V632
0x8f0: V634 = ISZERO V633
0x8f1: V635 = 0x8f6
0x8f4: JUMPI 0x8f6 V634
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V605, V618, 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V630, S8, S6]
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V605, V618, 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06, V630, S8, S6]

================================

Block 0x8f5
[0x8f5:0x8f5]
---
Predecessors: [0x8de]
Successors: []
---
0x8f5 INVALID
---
0x8f5: INVALID 
---
Entry stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V605, V618, 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06, V630, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V605, V618, 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06, V630, S1, S0]

================================

Block 0x8f6
[0x8f6:0x93a]
---
Predecessors: [0x8de]
Successors: [0x93b, 0x93c]
---
0x8f6 JUMPDEST
0x8f7 SWAP1
0x8f8 PUSH1 0x20
0x8fa ADD
0x8fb SWAP1
0x8fc PUSH1 0x20
0x8fe MUL
0x8ff ADD
0x900 MLOAD
0x901 TIMESTAMP
0x902 PUSH1 0x40
0x904 MLOAD
0x905 DUP1
0x906 DUP5
0x907 DUP2
0x908 MSTORE
0x909 PUSH1 0x20
0x90b ADD
0x90c DUP4
0x90d DUP2
0x90e MSTORE
0x90f PUSH1 0x20
0x911 ADD
0x912 DUP3
0x913 DUP2
0x914 MSTORE
0x915 PUSH1 0x20
0x917 ADD
0x918 SWAP4
0x919 POP
0x91a POP
0x91b POP
0x91c POP
0x91d PUSH1 0x40
0x91f MLOAD
0x920 DUP1
0x921 SWAP2
0x922 SUB
0x923 SWAP1
0x924 LOG3
0x925 PUSH2 0x962
0x928 PUSH1 0x64
0x92a PUSH2 0x954
0x92d PUSH1 0x3
0x92f DUP9
0x930 DUP7
0x931 DUP2
0x932 MLOAD
0x933 DUP2
0x934 LT
0x935 ISZERO
0x936 ISZERO
0x937 PUSH2 0x93c
0x93a JUMPI
---
0x8f6: JUMPDEST 
0x8f8: V636 = 0x20
0x8fa: V637 = ADD 0x20 S1
0x8fc: V638 = 0x20
0x8fe: V639 = MUL 0x20 S0
0x8ff: V640 = ADD V639 V637
0x900: V641 = M[V640]
0x901: V642 = TIMESTAMP
0x902: V643 = 0x40
0x904: V644 = M[0x40]
0x908: M[V644] = V630
0x909: V645 = 0x20
0x90b: V646 = ADD 0x20 V644
0x90e: M[V646] = V641
0x90f: V647 = 0x20
0x911: V648 = ADD 0x20 V646
0x914: M[V648] = V642
0x915: V649 = 0x20
0x917: V650 = ADD 0x20 V648
0x91d: V651 = 0x40
0x91f: V652 = M[0x40]
0x922: V653 = SUB V650 V652
0x924: LOG V652 V653 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06 V618 V605
0x925: V654 = 0x962
0x928: V655 = 0x64
0x92a: V656 = 0x954
0x92d: V657 = 0x3
0x932: V658 = M[S10]
0x934: V659 = LT S7 V658
0x935: V660 = ISZERO V659
0x936: V661 = ISZERO V660
0x937: V662 = 0x93c
0x93a: JUMPI 0x93c V661
---
Entry stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V605, V618, 0x887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06, V630, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, 0x962, 0x64, 0x954, 0x3, S10, S7]
Exit stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x962, 0x64, 0x954, 0x3, S10, S7]

================================

Block 0x93b
[0x93b:0x93b]
---
Predecessors: [0x8f6]
Successors: []
---
0x93b INVALID
---
0x93b: INVALID 
---
Entry stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x962, 0x64, 0x954, 0x3, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x962, 0x64, 0x954, 0x3, S1, S0]

================================

Block 0x93c
[0x93c:0x953]
---
Predecessors: [0x8f6]
Successors: [0xb20]
---
0x93c JUMPDEST
0x93d SWAP1
0x93e PUSH1 0x20
0x940 ADD
0x941 SWAP1
0x942 PUSH1 0x20
0x944 MUL
0x945 ADD
0x946 MLOAD
0x947 PUSH2 0xb20
0x94a SWAP1
0x94b SWAP2
0x94c SWAP1
0x94d PUSH4 0xffffffff
0x952 AND
0x953 JUMP
---
0x93c: JUMPDEST 
0x93e: V663 = 0x20
0x940: V664 = ADD 0x20 S1
0x942: V665 = 0x20
0x944: V666 = MUL 0x20 S0
0x945: V667 = ADD V666 V664
0x946: V668 = M[V667]
0x947: V669 = 0xb20
0x94d: V670 = 0xffffffff
0x952: V671 = AND 0xffffffff 0xb20
0x953: JUMP 0xb20
---
Entry stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x962, 0x64, 0x954, 0x3, S1, S0]
Stack pops: 3
Stack additions: [V668, S2]
Exit stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x962, 0x64, 0x954, V668, 0x3]

================================

Block 0x954
[0x954:0x961]
---
Predecessors: [0xb58]
Successors: [0xb5e]
---
0x954 JUMPDEST
0x955 PUSH2 0xb5e
0x958 SWAP1
0x959 SWAP2
0x95a SWAP1
0x95b PUSH4 0xffffffff
0x960 AND
0x961 JUMP
---
0x954: JUMPDEST 
0x955: V672 = 0xb5e
0x95b: V673 = 0xffffffff
0x960: V674 = AND 0xffffffff 0xb5e
0x961: JUMP 0xb5e
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x64}, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, {0x0, 0x64}]

================================

Block 0x962
[0x962:0x97c]
---
Predecessors: [0xb7b]
Successors: [0x733]
---
0x962 JUMPDEST
0x963 PUSH1 0x6
0x965 PUSH1 0x0
0x967 DUP3
0x968 DUP3
0x969 SLOAD
0x96a ADD
0x96b SWAP3
0x96c POP
0x96d POP
0x96e DUP2
0x96f SWAP1
0x970 SSTORE
0x971 POP
0x972 PUSH1 0x1
0x974 DUP3
0x975 ADD
0x976 SWAP2
0x977 POP
0x978 POP
0x979 PUSH2 0x733
0x97c JUMP
---
0x962: JUMPDEST 
0x963: V675 = 0x6
0x965: V676 = 0x0
0x969: V677 = S[0x6]
0x96a: V678 = ADD V677 V806
0x970: S[0x6] = V678
0x972: V679 = 0x1
0x975: V680 = ADD S2 0x1
0x979: V681 = 0x733
0x97c: JUMP 0x733
---
Entry stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V806]
Stack pops: 3
Stack additions: [V680]
Exit stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V680]

================================

Block 0x97d
[0x97d:0x987]
---
Predecessors: [0x733]
Successors: [0x507]
---
0x97d JUMPDEST
0x97e DUP1
0x97f SWAP2
0x980 POP
0x981 POP
0x982 SWAP4
0x983 SWAP3
0x984 POP
0x985 POP
0x986 POP
0x987 JUMP
---
0x97d: JUMPDEST 
0x987: JUMP S5
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V9, S10, S9, S8, S7, S6, S0]

================================

Block 0x988
[0x988:0x9de]
---
Predecessors: [0x529]
Successors: [0x9df, 0x9e3]
---
0x988 JUMPDEST
0x989 PUSH1 0x0
0x98b DUP1
0x98c SWAP1
0x98d SLOAD
0x98e SWAP1
0x98f PUSH2 0x100
0x992 EXP
0x993 SWAP1
0x994 DIV
0x995 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9aa AND
0x9ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c0 AND
0x9c1 CALLER
0x9c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d7 AND
0x9d8 EQ
0x9d9 ISZERO
0x9da ISZERO
0x9db PUSH2 0x9e3
0x9de JUMPI
---
0x988: JUMPDEST 
0x989: V682 = 0x0
0x98d: V683 = S[0x0]
0x98f: V684 = 0x100
0x992: V685 = EXP 0x100 0x0
0x994: V686 = DIV V683 0x1
0x995: V687 = 0xffffffffffffffffffffffffffffffffffffffff
0x9aa: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V686
0x9ab: V689 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c0: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V688
0x9c1: V691 = CALLER
0x9c2: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d7: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0x9d8: V694 = EQ V693 V690
0x9d9: V695 = ISZERO V694
0x9da: V696 = ISZERO V695
0x9db: V697 = 0x9e3
0x9de: JUMPI 0x9e3 V696
---
Entry stack: [V9, 0x532]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x532]

================================

Block 0x9df
[0x9df:0x9e2]
---
Predecessors: [0x988]
Successors: []
---
0x9df PUSH1 0x0
0x9e1 DUP1
0x9e2 REVERT
---
0x9df: V698 = 0x0
0x9e2: REVERT 0x0 0x0
---
Entry stack: [V9, 0x532]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x532]

================================

Block 0x9e3
[0x9e3:0x9ff]
---
Predecessors: [0x988]
Successors: [0x532]
---
0x9e3 JUMPDEST
0x9e4 PUSH1 0x0
0x9e6 PUSH1 0x3
0x9e8 PUSH1 0x0
0x9ea PUSH2 0x100
0x9ed EXP
0x9ee DUP2
0x9ef SLOAD
0x9f0 DUP2
0x9f1 PUSH1 0xff
0x9f3 MUL
0x9f4 NOT
0x9f5 AND
0x9f6 SWAP1
0x9f7 DUP4
0x9f8 ISZERO
0x9f9 ISZERO
0x9fa MUL
0x9fb OR
0x9fc SWAP1
0x9fd SSTORE
0x9fe POP
0x9ff JUMP
---
0x9e3: JUMPDEST 
0x9e4: V699 = 0x0
0x9e6: V700 = 0x3
0x9e8: V701 = 0x0
0x9ea: V702 = 0x100
0x9ed: V703 = EXP 0x100 0x0
0x9ef: V704 = S[0x3]
0x9f1: V705 = 0xff
0x9f3: V706 = MUL 0xff 0x1
0x9f4: V707 = NOT 0xff
0x9f5: V708 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V704
0x9f8: V709 = ISZERO 0x0
0x9f9: V710 = ISZERO 0x1
0x9fa: V711 = MUL 0x0 0x1
0x9fb: V712 = OR 0x0 V708
0x9fd: S[0x3] = V712
0x9ff: JUMP 0x532
---
Entry stack: [V9, 0x532]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0xa00
[0xa00:0xa56]
---
Predecessors: [0x557]
Successors: [0xa57, 0xa5b]
---
0xa00 JUMPDEST
0xa01 PUSH1 0x0
0xa03 DUP1
0xa04 SWAP1
0xa05 SLOAD
0xa06 SWAP1
0xa07 PUSH2 0x100
0xa0a EXP
0xa0b SWAP1
0xa0c DIV
0xa0d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa22 AND
0xa23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa38 AND
0xa39 CALLER
0xa3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4f AND
0xa50 EQ
0xa51 ISZERO
0xa52 ISZERO
0xa53 PUSH2 0xa5b
0xa56 JUMPI
---
0xa00: JUMPDEST 
0xa01: V713 = 0x0
0xa05: V714 = S[0x0]
0xa07: V715 = 0x100
0xa0a: V716 = EXP 0x100 0x0
0xa0c: V717 = DIV V714 0x1
0xa0d: V718 = 0xffffffffffffffffffffffffffffffffffffffff
0xa22: V719 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0xa23: V720 = 0xffffffffffffffffffffffffffffffffffffffff
0xa38: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V719
0xa39: V722 = CALLER
0xa3a: V723 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4f: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff V722
0xa50: V725 = EQ V724 V721
0xa51: V726 = ISZERO V725
0xa52: V727 = ISZERO V726
0xa53: V728 = 0xa5b
0xa56: JUMPI 0xa5b V727
---
Entry stack: [V9, 0x56d, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x56d, V379]

================================

Block 0xa57
[0xa57:0xa5a]
---
Predecessors: [0xa00]
Successors: []
---
0xa57 PUSH1 0x0
0xa59 DUP1
0xa5a REVERT
---
0xa57: V729 = 0x0
0xa5a: REVERT 0x0 0x0
---
Entry stack: [V9, 0x56d, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x56d, V379]

================================

Block 0xa5b
[0xa5b:0xa77]
---
Predecessors: [0xa00]
Successors: [0xb20]
---
0xa5b JUMPDEST
0xa5c PUSH1 0x0
0xa5e PUSH2 0xa78
0xa61 PUSH8 0xde0b6b3a7640000
0xa6a DUP4
0xa6b PUSH2 0xb20
0xa6e SWAP1
0xa6f SWAP2
0xa70 SWAP1
0xa71 PUSH4 0xffffffff
0xa76 AND
0xa77 JUMP
---
0xa5b: JUMPDEST 
0xa5c: V730 = 0x0
0xa5e: V731 = 0xa78
0xa61: V732 = 0xde0b6b3a7640000
0xa6b: V733 = 0xb20
0xa71: V734 = 0xffffffff
0xa76: V735 = AND 0xffffffff 0xb20
0xa77: JUMP 0xb20
---
Entry stack: [V9, 0x56d, V379]
Stack pops: 1
Stack additions: [S0, 0x0, 0xa78, S0, 0xde0b6b3a7640000]
Exit stack: [V9, 0x56d, V379, 0x0, 0xa78, V379, 0xde0b6b3a7640000]

================================

Block 0xa78
[0xa78:0xa9a]
---
Predecessors: [0xb58]
Successors: [0xa9b, 0xb04]
---
0xa78 JUMPDEST
0xa79 SWAP1
0xa7a POP
0xa7b DUP1
0xa7c ADDRESS
0xa7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa92 AND
0xa93 BALANCE
0xa94 LT
0xa95 ISZERO
0xa96 ISZERO
0xa97 PUSH2 0xb04
0xa9a JUMPI
---
0xa78: JUMPDEST 
0xa7c: V736 = ADDRESS
0xa7d: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xa92: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0xa93: V739 = BALANCE V738
0xa94: V740 = LT V739 S0
0xa95: V741 = ISZERO V740
0xa96: V742 = ISZERO V741
0xa97: V743 = 0xb04
0xa9a: JUMPI 0xb04 V742
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x64}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xa9b
[0xa9b:0xaf8]
---
Predecessors: [0xa78]
Successors: [0xaf9, 0xb02]
---
0xa9b PUSH1 0x5
0xa9d PUSH1 0x0
0xa9f SWAP1
0xaa0 SLOAD
0xaa1 SWAP1
0xaa2 PUSH2 0x100
0xaa5 EXP
0xaa6 SWAP1
0xaa7 DIV
0xaa8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xabd AND
0xabe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad3 AND
0xad4 PUSH2 0x8fc
0xad7 DUP3
0xad8 SWAP1
0xad9 DUP2
0xada ISZERO
0xadb MUL
0xadc SWAP1
0xadd PUSH1 0x40
0xadf MLOAD
0xae0 PUSH1 0x0
0xae2 PUSH1 0x40
0xae4 MLOAD
0xae5 DUP1
0xae6 DUP4
0xae7 SUB
0xae8 DUP2
0xae9 DUP6
0xaea DUP9
0xaeb DUP9
0xaec CALL
0xaed SWAP4
0xaee POP
0xaef POP
0xaf0 POP
0xaf1 POP
0xaf2 ISZERO
0xaf3 DUP1
0xaf4 ISZERO
0xaf5 PUSH2 0xb02
0xaf8 JUMPI
---
0xa9b: V744 = 0x5
0xa9d: V745 = 0x0
0xaa0: V746 = S[0x5]
0xaa2: V747 = 0x100
0xaa5: V748 = EXP 0x100 0x0
0xaa7: V749 = DIV V746 0x1
0xaa8: V750 = 0xffffffffffffffffffffffffffffffffffffffff
0xabd: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V749
0xabe: V752 = 0xffffffffffffffffffffffffffffffffffffffff
0xad3: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0xad4: V754 = 0x8fc
0xada: V755 = ISZERO S0
0xadb: V756 = MUL V755 0x8fc
0xadd: V757 = 0x40
0xadf: V758 = M[0x40]
0xae0: V759 = 0x0
0xae2: V760 = 0x40
0xae4: V761 = M[0x40]
0xae7: V762 = SUB V758 V761
0xaec: V763 = CALL V756 V753 S0 V761 V762 V761 0x0
0xaf2: V764 = ISZERO V763
0xaf4: V765 = ISZERO V764
0xaf5: V766 = 0xb02
0xaf8: JUMPI 0xb02 V765
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V764]
Exit stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V764]

================================

Block 0xaf9
[0xaf9:0xb01]
---
Predecessors: [0xa9b]
Successors: []
---
0xaf9 RETURNDATASIZE
0xafa PUSH1 0x0
0xafc DUP1
0xafd RETURNDATACOPY
0xafe RETURNDATASIZE
0xaff PUSH1 0x0
0xb01 REVERT
---
0xaf9: V767 = RETURNDATASIZE
0xafa: V768 = 0x0
0xafd: RETURNDATACOPY 0x0 0x0 V767
0xafe: V769 = RETURNDATASIZE
0xaff: V770 = 0x0
0xb01: REVERT 0x0 V769
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V764]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V764]

================================

Block 0xb02
[0xb02:0xb03]
---
Predecessors: [0xa9b]
Successors: [0xb04]
---
0xb02 JUMPDEST
0xb03 POP
---
0xb02: JUMPDEST 
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V764]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xb04
[0xb04:0xb07]
---
Predecessors: [0xa78, 0xb02]
Successors: [0x56d, 0x7a5]
---
0xb04 JUMPDEST
0xb05 POP
0xb06 POP
0xb07 JUMP
---
0xb04: JUMPDEST 
0xb07: JUMP S2
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xb08
[0xb08:0xb1f]
---
Predecessors: [0x592]
Successors: [0x5be]
---
0xb08 JUMPDEST
0xb09 PUSH1 0x1
0xb0b PUSH1 0x20
0xb0d MSTORE
0xb0e DUP1
0xb0f PUSH1 0x0
0xb11 MSTORE
0xb12 PUSH1 0x40
0xb14 PUSH1 0x0
0xb16 SHA3
0xb17 PUSH1 0x0
0xb19 SWAP2
0xb1a POP
0xb1b SWAP1
0xb1c POP
0xb1d SLOAD
0xb1e DUP2
0xb1f JUMP
---
0xb08: JUMPDEST 
0xb09: V771 = 0x1
0xb0b: V772 = 0x20
0xb0d: M[0x20] = 0x1
0xb0f: V773 = 0x0
0xb11: M[0x0] = V399
0xb12: V774 = 0x40
0xb14: V775 = 0x0
0xb16: V776 = SHA3 0x0 0x40
0xb17: V777 = 0x0
0xb1d: V778 = S[V776]
0xb1f: JUMP 0x5be
---
Entry stack: [V9, 0x5be, V399]
Stack pops: 2
Stack additions: [S1, V778]
Exit stack: [V9, 0x5be, V778]

================================

Block 0xb20
[0xb20:0xb2a]
---
Predecessors: [0x759, 0x93c, 0xa5b]
Successors: [0xb2b, 0xb33]
---
0xb20 JUMPDEST
0xb21 PUSH1 0x0
0xb23 DUP1
0xb24 DUP4
0xb25 EQ
0xb26 ISZERO
0xb27 PUSH2 0xb33
0xb2a JUMPI
---
0xb20: JUMPDEST 
0xb21: V779 = 0x0
0xb25: V780 = EQ S1 0x0
0xb26: V781 = ISZERO V780
0xb27: V782 = 0xb33
0xb2a: JUMPI 0xb33 V781
---
Entry stack: [V9, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S1, {0x3, 0xde0b6b3a7640000}]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V9, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S1, {0x3, 0xde0b6b3a7640000}, 0x0]

================================

Block 0xb2b
[0xb2b:0xb32]
---
Predecessors: [0xb20]
Successors: [0xb58]
---
0xb2b PUSH1 0x0
0xb2d SWAP1
0xb2e POP
0xb2f PUSH2 0xb58
0xb32 JUMP
---
0xb2b: V783 = 0x0
0xb2f: V784 = 0xb58
0xb32: JUMP 0xb58
---
Entry stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S2, {0x3, 0xde0b6b3a7640000}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S2, {0x3, 0xde0b6b3a7640000}, 0x0]

================================

Block 0xb33
[0xb33:0xb44]
---
Predecessors: [0xb20]
Successors: [0xb45, 0xb46]
---
0xb33 JUMPDEST
0xb34 PUSH1 0x0
0xb36 DUP3
0xb37 DUP5
0xb38 MUL
0xb39 SWAP1
0xb3a POP
0xb3b DUP3
0xb3c DUP5
0xb3d DUP3
0xb3e DUP2
0xb3f ISZERO
0xb40 ISZERO
0xb41 PUSH2 0xb46
0xb44 JUMPI
---
0xb33: JUMPDEST 
0xb34: V785 = 0x0
0xb38: V786 = MUL S2 {0x3, 0xde0b6b3a7640000}
0xb3f: V787 = ISZERO S2
0xb40: V788 = ISZERO V787
0xb41: V789 = 0xb46
0xb44: JUMPI 0xb46 V788
---
Entry stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S2, {0x3, 0xde0b6b3a7640000}, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V786, S1, S2, V786]
Exit stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S2, {0x3, 0xde0b6b3a7640000}, 0x0, V786, {0x3, 0xde0b6b3a7640000}, S2, V786]

================================

Block 0xb45
[0xb45:0xb45]
---
Predecessors: [0xb33]
Successors: []
---
0xb45 INVALID
---
0xb45: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S6, {0x3, 0xde0b6b3a7640000}, 0x0, V786, {0x3, 0xde0b6b3a7640000}, S1, V786]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S6, {0x3, 0xde0b6b3a7640000}, 0x0, V786, {0x3, 0xde0b6b3a7640000}, S1, V786]

================================

Block 0xb46
[0xb46:0xb4e]
---
Predecessors: [0xb33]
Successors: [0xb4f, 0xb53]
---
0xb46 JUMPDEST
0xb47 DIV
0xb48 EQ
0xb49 ISZERO
0xb4a ISZERO
0xb4b PUSH2 0xb53
0xb4e JUMPI
---
0xb46: JUMPDEST 
0xb47: V790 = DIV V786 S1
0xb48: V791 = EQ V790 {0x3, 0xde0b6b3a7640000}
0xb49: V792 = ISZERO V791
0xb4a: V793 = ISZERO V792
0xb4b: V794 = 0xb53
0xb4e: JUMPI 0xb53 V793
---
Entry stack: [V9, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S6, {0x3, 0xde0b6b3a7640000}, 0x0, V786, {0x3, 0xde0b6b3a7640000}, S1, V786]
Stack pops: 3
Stack additions: []
Exit stack: [V9, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S6, {0x3, 0xde0b6b3a7640000}, 0x0, V786]

================================

Block 0xb4f
[0xb4f:0xb52]
---
Predecessors: [0xb46]
Successors: []
---
0xb4f PUSH1 0x0
0xb51 DUP1
0xb52 REVERT
---
0xb4f: V795 = 0x0
0xb52: REVERT 0x0 0x0
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S3, {0x3, 0xde0b6b3a7640000}, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S3, {0x3, 0xde0b6b3a7640000}, 0x0, S0]

================================

Block 0xb53
[0xb53:0xb57]
---
Predecessors: [0xb46]
Successors: [0xb58]
---
0xb53 JUMPDEST
0xb54 DUP1
0xb55 SWAP2
0xb56 POP
0xb57 POP
---
0xb53: JUMPDEST 
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S3, {0x3, 0xde0b6b3a7640000}, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S3, {0x3, 0xde0b6b3a7640000}, S0]

================================

Block 0xb58
[0xb58:0xb5d]
---
Predecessors: [0xb2b, 0xb53]
Successors: [0x771, 0x954, 0xa78]
---
0xb58 JUMPDEST
0xb59 SWAP3
0xb5a SWAP2
0xb5b POP
0xb5c POP
0xb5d JUMP
---
0xb58: JUMPDEST 
0xb5d: JUMP {0x771, 0x954, 0xa78}
---
Entry stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x64}, {0x771, 0x954, 0xa78}, S2, {0x3, 0xde0b6b3a7640000}, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x64}, S0]

================================

Block 0xb5e
[0xb5e:0xb69]
---
Predecessors: [0x771, 0x954]
Successors: [0xb6a, 0xb6e]
---
0xb5e JUMPDEST
0xb5f PUSH1 0x0
0xb61 DUP1
0xb62 DUP3
0xb63 GT
0xb64 ISZERO
0xb65 ISZERO
0xb66 PUSH2 0xb6e
0xb69 JUMPI
---
0xb5e: JUMPDEST 
0xb5f: V796 = 0x0
0xb63: V797 = GT {0x0, 0x64} 0x0
0xb64: V798 = ISZERO V797
0xb65: V799 = ISZERO V798
0xb66: V800 = 0xb6e
0xb69: JUMPI 0xb6e V799
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x64}]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x64}, 0x0]

================================

Block 0xb6a
[0xb6a:0xb6d]
---
Predecessors: [0xb5e]
Successors: []
---
0xb6a PUSH1 0x0
0xb6c DUP1
0xb6d REVERT
---
0xb6a: V801 = 0x0
0xb6d: REVERT 0x0 0x0
---
Entry stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x64}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x64}, 0x0]

================================

Block 0xb6e
[0xb6e:0xb79]
---
Predecessors: [0xb5e]
Successors: [0xb7a, 0xb7b]
---
0xb6e JUMPDEST
0xb6f PUSH1 0x0
0xb71 DUP3
0xb72 DUP5
0xb73 DUP2
0xb74 ISZERO
0xb75 ISZERO
0xb76 PUSH2 0xb7b
0xb79 JUMPI
---
0xb6e: JUMPDEST 
0xb6f: V802 = 0x0
0xb74: V803 = ISZERO {0x0, 0x64}
0xb75: V804 = ISZERO V803
0xb76: V805 = 0xb7b
0xb79: JUMPI 0xb7b V804
---
Entry stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x64}, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, S1, S2]
Exit stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x64}, 0x0, 0x0, {0x0, 0x64}, S2]

================================

Block 0xb7a
[0xb7a:0xb7a]
---
Predecessors: [0xb6e]
Successors: []
---
0xb7a INVALID
---
0xb7a: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x64}, 0x0, 0x0, {0x0, 0x64}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x64}, 0x0, 0x0, {0x0, 0x64}, S0]

================================

Block 0xb7b
[0xb7b:0xb87]
---
Predecessors: [0xb6e]
Successors: [0x77f, 0x962]
---
0xb7b JUMPDEST
0xb7c DIV
0xb7d SWAP1
0xb7e POP
0xb7f DUP1
0xb80 SWAP2
0xb81 POP
0xb82 POP
0xb83 SWAP3
0xb84 SWAP2
0xb85 POP
0xb86 POP
0xb87 JUMP
---
0xb7b: JUMPDEST 
0xb7c: V806 = DIV S0 {0x0, 0x64}
0xb87: JUMP S6
---
Entry stack: [V9, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x64}, 0x0, 0x0, {0x0, 0x64}, S0]
Stack pops: 7
Stack additions: [V806]
Exit stack: [V9, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V806]

================================

Block 0xb88
[0xb88:0xb94]
---
Predecessors: [0x78d]
Successors: [0xb95, 0xb99]
---
0xb88 JUMPDEST
0xb89 PUSH1 0x0
0xb8b DUP3
0xb8c DUP3
0xb8d GT
0xb8e ISZERO
0xb8f ISZERO
0xb90 ISZERO
0xb91 PUSH2 0xb99
0xb94 JUMPI
---
0xb88: JUMPDEST 
0xb89: V807 = 0x0
0xb8d: V808 = GT S0 V534
0xb8e: V809 = ISZERO V808
0xb8f: V810 = ISZERO V809
0xb90: V811 = ISZERO V810
0xb91: V812 = 0xb99
0xb94: JUMPI 0xb99 V811
---
Entry stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V534, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V534, S0, 0x0]

================================

Block 0xb95
[0xb95:0xb98]
---
Predecessors: [0xb88]
Successors: []
---
0xb95 PUSH1 0x0
0xb97 DUP1
0xb98 REVERT
---
0xb95: V813 = 0x0
0xb98: REVERT 0x0 0x0
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0xb99
[0xb99:0xba9]
---
Predecessors: [0xb88]
Successors: [0x56d, 0x7a5]
---
0xb99 JUMPDEST
0xb9a PUSH1 0x0
0xb9c DUP3
0xb9d DUP5
0xb9e SUB
0xb9f SWAP1
0xba0 POP
0xba1 DUP1
0xba2 SWAP2
0xba3 POP
0xba4 POP
0xba5 SWAP3
0xba6 SWAP2
0xba7 POP
0xba8 POP
0xba9 JUMP
---
0xb99: JUMPDEST 
0xb9a: V814 = 0x0
0xb9e: V815 = SUB S2 S1
0xba9: JUMP S3
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V815]
Exit stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V815]

================================

Block 0xbaa
[0xbaa:0xbd9]
---
Predecessors: []
Successors: []
---
0xbaa INVALID
0xbab LOG1
0xbac PUSH6 0x627a7a723058
0xbb3 SHA3
0xbb4 MISSING 0x4c
0xbb5 SELFDESTRUCT
0xbb6 CALLVALUE
0xbb7 MSTORE8
0xbb8 MISSING 0x4b
0xbb9 MISSING 0xcd
0xbba MISSING 0xee
0xbbb SWAP3
0xbbc MISSING 0xa8
0xbbd LOG0
0xbbe MISSING 0xc0
0xbbf LOG3
0xbc0 SWAP2
0xbc1 SGT
0xbc2 MISSING 0x27
0xbc3 MISSING 0x5e
0xbc4 MISSING 0x4f
0xbc5 DUP3
0xbc6 SELFDESTRUCT
0xbc7 RETURNDATASIZE
0xbc8 MISSING 0xc8
0xbc9 MISSING 0xb2
0xbca MISSING 0x1e
0xbcb EQ
0xbcc MISSING 0xc0
0xbcd GT
0xbce GASPRICE
0xbcf MISSING 0x21
0xbd0 PUSH9 0x53110f0029
---
0xbaa: INVALID 
0xbab: LOG S0 S1 S2
0xbac: V816 = 0x627a7a723058
0xbb3: V817 = SHA3 0x627a7a723058 S3
0xbb4: MISSING 0x4c
0xbb5: SELFDESTRUCT S0
0xbb6: V818 = CALLVALUE
0xbb7: M8[V818] = S0
0xbb8: MISSING 0x4b
0xbb9: MISSING 0xcd
0xbba: MISSING 0xee
0xbbc: MISSING 0xa8
0xbbd: LOG S0 S1
0xbbe: MISSING 0xc0
0xbbf: LOG S0 S1 S2 S3 S4
0xbc1: V819 = SGT S7 S6
0xbc2: MISSING 0x27
0xbc3: MISSING 0x5e
0xbc4: MISSING 0x4f
0xbc6: SELFDESTRUCT S2
0xbc7: V820 = RETURNDATASIZE
0xbc8: MISSING 0xc8
0xbc9: MISSING 0xb2
0xbca: MISSING 0x1e
0xbcb: V821 = EQ S0 S1
0xbcc: MISSING 0xc0
0xbcd: V822 = GT S0 S1
0xbce: V823 = GASPRICE
0xbcf: MISSING 0x21
0xbd0: V824 = 0x53110f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V817, S3, S1, S2, S0, V819, S5, S0, S1, S2, V820, V821, V823, V822, 0x53110f0029]
Exit stack: []

================================


