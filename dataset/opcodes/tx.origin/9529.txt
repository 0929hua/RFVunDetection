Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3999795
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3999795
0x3c: V13 = EQ 0x3999795 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcf]
---
0x41 DUP1
0x42 PUSH4 0x65372147
0x47 EQ
0x48 PUSH2 0xcf
0x4b JUMPI
---
0x42: V15 = 0x65372147
0x47: V16 = EQ 0x65372147 V11
0x48: V17 = 0xcf
0x4b: JUMPI 0xcf V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xfe]
---
0x4c DUP1
0x4d PUSH4 0xab5783c4
0x52 EQ
0x53 PUSH2 0xfe
0x56 JUMPI
---
0x4d: V18 = 0xab5783c4
0x52: V19 = EQ 0xab5783c4 V11
0x53: V20 = 0xfe
0x56: JUMPI 0xfe V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x119]
---
0x57 DUP1
0x58 PUSH4 0xb2c3609b
0x5d EQ
0x5e PUSH2 0x119
0x61 JUMPI
---
0x58: V21 = 0xb2c3609b
0x5d: V22 = EQ 0xb2c3609b V11
0x5e: V23 = 0x119
0x61: JUMPI 0x119 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x134]
---
0x62 DUP1
0x63 PUSH4 0xbef4876b
0x68 EQ
0x69 PUSH2 0x134
0x6c JUMPI
---
0x63: V24 = 0xbef4876b
0x68: V25 = EQ 0xbef4876b V11
0x69: V26 = 0x134
0x6c: JUMPI 0x134 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x161]
---
0x6d DUP1
0x6e PUSH4 0xf1b6315e
0x73 EQ
0x74 PUSH2 0x161
0x77 JUMPI
---
0x6e: V27 = 0xf1b6315e
0x73: V28 = EQ 0xf1b6315e V11
0x74: V29 = 0x161
0x77: JUMPI 0x161 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0x7a]
Successors: [0x17c]
---
0x85 JUMPDEST
0x86 PUSH2 0x8d
0x89 PUSH2 0x17c
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V34 = 0x8d
0x89: V35 = 0x17c
0x8c: JUMP 0x17c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x8d
[0x8d:0xce]
---
Predecessors: [0x17c]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 DUP3
0x93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8 AND
0xa9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe AND
0xbf DUP2
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 SWAP2
0xc5 POP
0xc6 POP
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb SWAP2
0xcc SUB
0xcd SWAP1
0xce RETURN
---
0x8d: JUMPDEST 
0x8e: V36 = 0x40
0x90: V37 = M[0x40]
0x93: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0xa9: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xc0: M[V37] = V41
0xc1: V42 = 0x20
0xc3: V43 = ADD 0x20 V37
0xc7: V44 = 0x40
0xc9: V45 = M[0x40]
0xcc: V46 = SUB V43 V45
0xce: RETURN V45 V46
---
Entry stack: [V11, 0x8d, V112]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0xcf
[0xcf:0xd5]
---
Predecessors: [0x41]
Successors: [0xd6, 0xda]
---
0xcf JUMPDEST
0xd0 CALLVALUE
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xcf: JUMPDEST 
0xd0: V47 = CALLVALUE
0xd1: V48 = ISZERO V47
0xd2: V49 = 0xda
0xd5: JUMPI 0xda V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xcf]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V50 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0xcf]
Successors: [0x1a2]
---
0xda JUMPDEST
0xdb PUSH2 0xe2
0xde PUSH2 0x1a2
0xe1 JUMP
---
0xda: JUMPDEST 
0xdb: V51 = 0xe2
0xde: V52 = 0x1a2
0xe1: JUMP 0x1a2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe2]
Exit stack: [V11, 0xe2]

================================

Block 0xe2
[0xe2:0xfd]
---
Predecessors: [0x1a2]
Successors: []
---
0xe2 JUMPDEST
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP1
0xe7 DUP3
0xe8 PUSH1 0xff
0xea AND
0xeb PUSH1 0xff
0xed AND
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP2
0xf4 POP
0xf5 POP
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 DUP1
0xfa SWAP2
0xfb SUB
0xfc SWAP1
0xfd RETURN
---
0xe2: JUMPDEST 
0xe3: V53 = 0x40
0xe5: V54 = M[0x40]
0xe8: V55 = 0xff
0xea: V56 = AND 0xff V119
0xeb: V57 = 0xff
0xed: V58 = AND 0xff V56
0xef: M[V54] = V58
0xf0: V59 = 0x20
0xf2: V60 = ADD 0x20 V54
0xf6: V61 = 0x40
0xf8: V62 = M[0x40]
0xfb: V63 = SUB V60 V62
0xfd: RETURN V62 V63
---
Entry stack: [V11, 0xe2, V119]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe2]

================================

Block 0xfe
[0xfe:0x116]
---
Predecessors: [0x4c]
Successors: [0x1b4]
---
0xfe JUMPDEST
0xff PUSH2 0x117
0x102 PUSH1 0x4
0x104 DUP1
0x105 DUP1
0x106 CALLDATALOAD
0x107 PUSH1 0xff
0x109 AND
0x10a SWAP1
0x10b PUSH1 0x20
0x10d ADD
0x10e SWAP1
0x10f SWAP2
0x110 SWAP1
0x111 POP
0x112 POP
0x113 PUSH2 0x1b4
0x116 JUMP
---
0xfe: JUMPDEST 
0xff: V64 = 0x117
0x102: V65 = 0x4
0x106: V66 = CALLDATALOAD 0x4
0x107: V67 = 0xff
0x109: V68 = AND 0xff V66
0x10b: V69 = 0x20
0x10d: V70 = ADD 0x20 0x4
0x113: V71 = 0x1b4
0x116: JUMP 0x1b4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x117, V68]
Exit stack: [V11, 0x117, V68]

================================

Block 0x117
[0x117:0x118]
---
Predecessors: [0x27c, 0x360]
Successors: []
---
0x117 JUMPDEST
0x118 STOP
---
0x117: JUMPDEST 
0x118: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x119
[0x119:0x131]
---
Predecessors: [0x57]
Successors: [0x27f]
---
0x119 JUMPDEST
0x11a PUSH2 0x132
0x11d PUSH1 0x4
0x11f DUP1
0x120 DUP1
0x121 CALLDATALOAD
0x122 PUSH1 0xff
0x124 AND
0x125 SWAP1
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP1
0x12a SWAP2
0x12b SWAP1
0x12c POP
0x12d POP
0x12e PUSH2 0x27f
0x131 JUMP
---
0x119: JUMPDEST 
0x11a: V72 = 0x132
0x11d: V73 = 0x4
0x121: V74 = CALLDATALOAD 0x4
0x122: V75 = 0xff
0x124: V76 = AND 0xff V74
0x126: V77 = 0x20
0x128: V78 = ADD 0x20 0x4
0x12e: V79 = 0x27f
0x131: JUMP 0x27f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x132, V76]
Exit stack: [V11, 0x132, V76]

================================

Block 0x132
[0x132:0x133]
---
Predecessors: [0x27c, 0x360]
Successors: []
---
0x132 JUMPDEST
0x133 STOP
---
0x132: JUMPDEST 
0x133: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x134
[0x134:0x13a]
---
Predecessors: [0x62]
Successors: [0x13b, 0x13f]
---
0x134 JUMPDEST
0x135 CALLVALUE
0x136 ISZERO
0x137 PUSH2 0x13f
0x13a JUMPI
---
0x134: JUMPDEST 
0x135: V80 = CALLVALUE
0x136: V81 = ISZERO V80
0x137: V82 = 0x13f
0x13a: JUMPI 0x13f V81
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13b
[0x13b:0x13e]
---
Predecessors: [0x134]
Successors: []
---
0x13b PUSH1 0x0
0x13d DUP1
0x13e REVERT
---
0x13b: V83 = 0x0
0x13e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13f
[0x13f:0x146]
---
Predecessors: [0x134]
Successors: [0x363]
---
0x13f JUMPDEST
0x140 PUSH2 0x147
0x143 PUSH2 0x363
0x146 JUMP
---
0x13f: JUMPDEST 
0x140: V84 = 0x147
0x143: V85 = 0x363
0x146: JUMP 0x363
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x147]
Exit stack: [V11, 0x147]

================================

Block 0x147
[0x147:0x160]
---
Predecessors: [0x363]
Successors: []
---
0x147 JUMPDEST
0x148 PUSH1 0x40
0x14a MLOAD
0x14b DUP1
0x14c DUP3
0x14d ISZERO
0x14e ISZERO
0x14f ISZERO
0x150 ISZERO
0x151 DUP2
0x152 MSTORE
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP2
0x157 POP
0x158 POP
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d SWAP2
0x15e SUB
0x15f SWAP1
0x160 RETURN
---
0x147: JUMPDEST 
0x148: V86 = 0x40
0x14a: V87 = M[0x40]
0x14d: V88 = ISZERO V238
0x14e: V89 = ISZERO V88
0x14f: V90 = ISZERO V89
0x150: V91 = ISZERO V90
0x152: M[V87] = V91
0x153: V92 = 0x20
0x155: V93 = ADD 0x20 V87
0x159: V94 = 0x40
0x15b: V95 = M[0x40]
0x15e: V96 = SUB V93 V95
0x160: RETURN V95 V96
---
Entry stack: [V11, 0x147, V238]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x147]

================================

Block 0x161
[0x161:0x179]
---
Predecessors: [0x6d]
Successors: [0x376]
---
0x161 JUMPDEST
0x162 PUSH2 0x17a
0x165 PUSH1 0x4
0x167 DUP1
0x168 DUP1
0x169 CALLDATALOAD
0x16a PUSH1 0xff
0x16c AND
0x16d SWAP1
0x16e PUSH1 0x20
0x170 ADD
0x171 SWAP1
0x172 SWAP2
0x173 SWAP1
0x174 POP
0x175 POP
0x176 PUSH2 0x376
0x179 JUMP
---
0x161: JUMPDEST 
0x162: V97 = 0x17a
0x165: V98 = 0x4
0x169: V99 = CALLDATALOAD 0x4
0x16a: V100 = 0xff
0x16c: V101 = AND 0xff V99
0x16e: V102 = 0x20
0x170: V103 = ADD 0x20 0x4
0x176: V104 = 0x376
0x179: JUMP 0x376
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x17a, V101]
Exit stack: [V11, 0x17a, V101]

================================

Block 0x17a
[0x17a:0x17b]
---
Predecessors: [0x3ec]
Successors: []
---
0x17a JUMPDEST
0x17b STOP
---
0x17a: JUMPDEST 
0x17b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17c
[0x17c:0x1a1]
---
Predecessors: [0x85]
Successors: [0x8d]
---
0x17c JUMPDEST
0x17d PUSH1 0x0
0x17f PUSH1 0x2
0x181 SWAP1
0x182 SLOAD
0x183 SWAP1
0x184 PUSH2 0x100
0x187 EXP
0x188 SWAP1
0x189 DIV
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 DUP2
0x1a1 JUMP
---
0x17c: JUMPDEST 
0x17d: V105 = 0x0
0x17f: V106 = 0x2
0x182: V107 = S[0x0]
0x184: V108 = 0x100
0x187: V109 = EXP 0x100 0x2
0x189: V110 = DIV V107 0x10000
0x18a: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1a1: JUMP 0x8d
---
Entry stack: [V11, 0x8d]
Stack pops: 1
Stack additions: [S0, V112]
Exit stack: [V11, 0x8d, V112]

================================

Block 0x1a2
[0x1a2:0x1b3]
---
Predecessors: [0xda]
Successors: [0xe2]
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 SWAP1
0x1a7 SLOAD
0x1a8 SWAP1
0x1a9 PUSH2 0x100
0x1ac EXP
0x1ad SWAP1
0x1ae DIV
0x1af PUSH1 0xff
0x1b1 AND
0x1b2 DUP2
0x1b3 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V113 = 0x0
0x1a7: V114 = S[0x0]
0x1a9: V115 = 0x100
0x1ac: V116 = EXP 0x100 0x0
0x1ae: V117 = DIV V114 0x1
0x1af: V118 = 0xff
0x1b1: V119 = AND 0xff V117
0x1b3: JUMP 0xe2
---
Entry stack: [V11, 0xe2]
Stack pops: 1
Stack additions: [S0, V119]
Exit stack: [V11, 0xe2, V119]

================================

Block 0x1b4
[0x1b4:0x20b]
---
Predecessors: [0xfe]
Successors: [0x20c, 0x210]
---
0x1b4 JUMPDEST
0x1b5 PUSH1 0x0
0x1b7 PUSH1 0x2
0x1b9 SWAP1
0x1ba SLOAD
0x1bb SWAP1
0x1bc PUSH2 0x100
0x1bf EXP
0x1c0 SWAP1
0x1c1 DIV
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 AND
0x1d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ed AND
0x1ee CALLER
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 EQ
0x206 ISZERO
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V120 = 0x0
0x1b7: V121 = 0x2
0x1ba: V122 = S[0x0]
0x1bc: V123 = 0x100
0x1bf: V124 = EXP 0x100 0x2
0x1c1: V125 = DIV V122 0x10000
0x1c2: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x1d8: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x1ee: V130 = CALLER
0x1ef: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x205: V133 = EQ V132 V129
0x206: V134 = ISZERO V133
0x207: V135 = ISZERO V134
0x208: V136 = 0x210
0x20b: JUMPI 0x210 V135
---
Entry stack: [V11, 0x117, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V68]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x1b4]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V137 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x117, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V68]

================================

Block 0x210
[0x210:0x217]
---
Predecessors: [0x1b4]
Successors: [0x3ef]
---
0x210 JUMPDEST
0x211 PUSH2 0x218
0x214 PUSH2 0x3ef
0x217 JUMP
---
0x210: JUMPDEST 
0x211: V138 = 0x218
0x214: V139 = 0x3ef
0x217: JUMP 0x3ef
---
Entry stack: [V11, 0x117, V68]
Stack pops: 0
Stack additions: [0x218]
Exit stack: [V11, 0x117, V68, 0x218]

================================

Block 0x218
[0x218:0x241]
---
Predecessors: [0x3ef]
Successors: [0x242, 0x27c]
---
0x218 JUMPDEST
0x219 DUP1
0x21a PUSH1 0x0
0x21c DUP1
0x21d PUSH2 0x100
0x220 EXP
0x221 DUP2
0x222 SLOAD
0x223 DUP2
0x224 PUSH1 0xff
0x226 MUL
0x227 NOT
0x228 AND
0x229 SWAP1
0x22a DUP4
0x22b PUSH1 0xff
0x22d AND
0x22e MUL
0x22f OR
0x230 SWAP1
0x231 SSTORE
0x232 POP
0x233 PUSH7 0x38d7ea4c68000
0x23b CALLVALUE
0x23c GT
0x23d ISZERO
0x23e PUSH2 0x27c
0x241 JUMPI
---
0x218: JUMPDEST 
0x21a: V140 = 0x0
0x21d: V141 = 0x100
0x220: V142 = EXP 0x100 0x0
0x222: V143 = S[0x0]
0x224: V144 = 0xff
0x226: V145 = MUL 0xff 0x1
0x227: V146 = NOT 0xff
0x228: V147 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V143
0x22b: V148 = 0xff
0x22d: V149 = AND 0xff S0
0x22e: V150 = MUL V149 0x1
0x22f: V151 = OR V150 V147
0x231: S[0x0] = V151
0x233: V152 = 0x38d7ea4c68000
0x23b: V153 = CALLVALUE
0x23c: V154 = GT V153 0x38d7ea4c68000
0x23d: V155 = ISZERO V154
0x23e: V156 = 0x27c
0x241: JUMPI 0x27c V155
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0x117, 0x132}, S0]

================================

Block 0x242
[0x242:0x27b]
---
Predecessors: [0x218]
Successors: []
---
0x242 PUSH1 0x0
0x244 PUSH1 0x2
0x246 SWAP1
0x247 SLOAD
0x248 SWAP1
0x249 PUSH2 0x100
0x24c EXP
0x24d SWAP1
0x24e DIV
0x24f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x264 AND
0x265 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27a AND
0x27b SELFDESTRUCT
---
0x242: V157 = 0x0
0x244: V158 = 0x2
0x247: V159 = S[0x0]
0x249: V160 = 0x100
0x24c: V161 = EXP 0x100 0x2
0x24e: V162 = DIV V159 0x10000
0x24f: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x264: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x265: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x27b: SELFDESTRUCT V166
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x117, 0x132}, S0]

================================

Block 0x27c
[0x27c:0x27e]
---
Predecessors: [0x218]
Successors: [0x117, 0x132]
---
0x27c JUMPDEST
0x27d POP
0x27e JUMP
---
0x27c: JUMPDEST 
0x27e: JUMP {0x117, 0x132}
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x27f
[0x27f:0x2b4]
---
Predecessors: [0x119]
Successors: [0x2b5, 0x2b9]
---
0x27f JUMPDEST
0x280 ORIGIN
0x281 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x296 AND
0x297 CALLER
0x298 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ad AND
0x2ae EQ
0x2af ISZERO
0x2b0 ISZERO
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x27f: JUMPDEST 
0x280: V167 = ORIGIN
0x281: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x296: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x297: V170 = CALLER
0x298: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ad: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x2ae: V173 = EQ V172 V169
0x2af: V174 = ISZERO V173
0x2b0: V175 = ISZERO V174
0x2b1: V176 = 0x2b9
0x2b4: JUMPI 0x2b9 V175
---
Entry stack: [V11, 0x132, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V76]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x27f]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V177 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V76]

================================

Block 0x2b9
[0x2b9:0x2d6]
---
Predecessors: [0x27f]
Successors: [0x2d7, 0x2e2]
---
0x2b9 JUMPDEST
0x2ba DUP1
0x2bb PUSH1 0xff
0x2bd AND
0x2be PUSH1 0x0
0x2c0 DUP1
0x2c1 SWAP1
0x2c2 SLOAD
0x2c3 SWAP1
0x2c4 PUSH2 0x100
0x2c7 EXP
0x2c8 SWAP1
0x2c9 DIV
0x2ca PUSH1 0xff
0x2cc AND
0x2cd PUSH1 0xff
0x2cf AND
0x2d0 EQ
0x2d1 DUP1
0x2d2 ISZERO
0x2d3 PUSH2 0x2e2
0x2d6 JUMPI
---
0x2b9: JUMPDEST 
0x2bb: V178 = 0xff
0x2bd: V179 = AND 0xff V76
0x2be: V180 = 0x0
0x2c2: V181 = S[0x0]
0x2c4: V182 = 0x100
0x2c7: V183 = EXP 0x100 0x0
0x2c9: V184 = DIV V181 0x1
0x2ca: V185 = 0xff
0x2cc: V186 = AND 0xff V184
0x2cd: V187 = 0xff
0x2cf: V188 = AND 0xff V186
0x2d0: V189 = EQ V188 V179
0x2d2: V190 = ISZERO V189
0x2d3: V191 = 0x2e2
0x2d6: JUMPI 0x2e2 V190
---
Entry stack: [V11, 0x132, V76]
Stack pops: 1
Stack additions: [S0, V189]
Exit stack: [V11, 0x132, V76, V189]

================================

Block 0x2d7
[0x2d7:0x2e1]
---
Predecessors: [0x2b9]
Successors: [0x2e2]
---
0x2d7 POP
0x2d8 PUSH7 0x38d7ea4c68000
0x2e0 CALLVALUE
0x2e1 GT
---
0x2d8: V192 = 0x38d7ea4c68000
0x2e0: V193 = CALLVALUE
0x2e1: V194 = GT V193 0x38d7ea4c68000
---
Entry stack: [V11, 0x132, V76, V189]
Stack pops: 1
Stack additions: [V194]
Exit stack: [V11, 0x132, V76, V194]

================================

Block 0x2e2
[0x2e2:0x2e8]
---
Predecessors: [0x2b9, 0x2d7]
Successors: [0x2e9, 0x2fb]
---
0x2e2 JUMPDEST
0x2e3 DUP1
0x2e4 ISZERO
0x2e5 PUSH2 0x2fb
0x2e8 JUMPI
---
0x2e2: JUMPDEST 
0x2e4: V195 = ISZERO S0
0x2e5: V196 = 0x2fb
0x2e8: JUMPI 0x2fb V195
---
Entry stack: [V11, 0x132, V76, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x132, V76, S0]

================================

Block 0x2e9
[0x2e9:0x2fa]
---
Predecessors: [0x2e2]
Successors: [0x2fb]
---
0x2e9 POP
0x2ea PUSH1 0x0
0x2ec PUSH1 0x1
0x2ee SWAP1
0x2ef SLOAD
0x2f0 SWAP1
0x2f1 PUSH2 0x100
0x2f4 EXP
0x2f5 SWAP1
0x2f6 DIV
0x2f7 PUSH1 0xff
0x2f9 AND
0x2fa ISZERO
---
0x2ea: V197 = 0x0
0x2ec: V198 = 0x1
0x2ef: V199 = S[0x0]
0x2f1: V200 = 0x100
0x2f4: V201 = EXP 0x100 0x1
0x2f6: V202 = DIV V199 0x100
0x2f7: V203 = 0xff
0x2f9: V204 = AND 0xff V202
0x2fa: V205 = ISZERO V204
---
Entry stack: [V11, 0x132, V76, S0]
Stack pops: 1
Stack additions: [V205]
Exit stack: [V11, 0x132, V76, V205]

================================

Block 0x2fb
[0x2fb:0x300]
---
Predecessors: [0x2e2, 0x2e9]
Successors: [0x301, 0x360]
---
0x2fb JUMPDEST
0x2fc ISZERO
0x2fd PUSH2 0x360
0x300 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V206 = ISZERO S0
0x2fd: V207 = 0x360
0x300: JUMPI 0x360 V206
---
Entry stack: [V11, 0x132, V76, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x132, V76]

================================

Block 0x301
[0x301:0x352]
---
Predecessors: [0x2fb]
Successors: [0x353, 0x357]
---
0x301 CALLER
0x302 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x317 AND
0x318 PUSH2 0x8fc
0x31b ADDRESS
0x31c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x331 AND
0x332 BALANCE
0x333 SWAP1
0x334 DUP2
0x335 ISZERO
0x336 MUL
0x337 SWAP1
0x338 PUSH1 0x40
0x33a MLOAD
0x33b PUSH1 0x0
0x33d PUSH1 0x40
0x33f MLOAD
0x340 DUP1
0x341 DUP4
0x342 SUB
0x343 DUP2
0x344 DUP6
0x345 DUP9
0x346 DUP9
0x347 CALL
0x348 SWAP4
0x349 POP
0x34a POP
0x34b POP
0x34c POP
0x34d ISZERO
0x34e ISZERO
0x34f PUSH2 0x357
0x352 JUMPI
---
0x301: V208 = CALLER
0x302: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x317: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x318: V211 = 0x8fc
0x31b: V212 = ADDRESS
0x31c: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x331: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x332: V215 = BALANCE V214
0x335: V216 = ISZERO V215
0x336: V217 = MUL V216 0x8fc
0x338: V218 = 0x40
0x33a: V219 = M[0x40]
0x33b: V220 = 0x0
0x33d: V221 = 0x40
0x33f: V222 = M[0x40]
0x342: V223 = SUB V219 V222
0x347: V224 = CALL V217 V210 V215 V222 V223 V222 0x0
0x34d: V225 = ISZERO V224
0x34e: V226 = ISZERO V225
0x34f: V227 = 0x357
0x352: JUMPI 0x357 V226
---
Entry stack: [V11, 0x132, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V76]

================================

Block 0x353
[0x353:0x356]
---
Predecessors: [0x301]
Successors: []
---
0x353 PUSH1 0x0
0x355 DUP1
0x356 REVERT
---
0x353: V228 = 0x0
0x356: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V76]

================================

Block 0x357
[0x357:0x35e]
---
Predecessors: [0x301]
Successors: [0x3ef]
---
0x357 JUMPDEST
0x358 PUSH2 0x35f
0x35b PUSH2 0x3ef
0x35e JUMP
---
0x357: JUMPDEST 
0x358: V229 = 0x35f
0x35b: V230 = 0x3ef
0x35e: JUMP 0x3ef
---
Entry stack: [V11, 0x132, V76]
Stack pops: 0
Stack additions: [0x35f]
Exit stack: [V11, 0x132, V76, 0x35f]

================================

Block 0x35f
[0x35f:0x35f]
---
Predecessors: [0x3ef]
Successors: [0x360]
---
0x35f JUMPDEST
---
0x35f: JUMPDEST 
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x117, 0x132}, S0]

================================

Block 0x360
[0x360:0x362]
---
Predecessors: [0x2fb, 0x35f]
Successors: [0x117, 0x132]
---
0x360 JUMPDEST
0x361 POP
0x362 JUMP
---
0x360: JUMPDEST 
0x362: JUMP {0x117, 0x132}
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x363
[0x363:0x375]
---
Predecessors: [0x13f]
Successors: [0x147]
---
0x363 JUMPDEST
0x364 PUSH1 0x0
0x366 PUSH1 0x1
0x368 SWAP1
0x369 SLOAD
0x36a SWAP1
0x36b PUSH2 0x100
0x36e EXP
0x36f SWAP1
0x370 DIV
0x371 PUSH1 0xff
0x373 AND
0x374 DUP2
0x375 JUMP
---
0x363: JUMPDEST 
0x364: V231 = 0x0
0x366: V232 = 0x1
0x369: V233 = S[0x0]
0x36b: V234 = 0x100
0x36e: V235 = EXP 0x100 0x1
0x370: V236 = DIV V233 0x100
0x371: V237 = 0xff
0x373: V238 = AND 0xff V236
0x375: JUMP 0x147
---
Entry stack: [V11, 0x147]
Stack pops: 1
Stack additions: [S0, V238]
Exit stack: [V11, 0x147, V238]

================================

Block 0x376
[0x376:0x390]
---
Predecessors: [0x161]
Successors: [0x391, 0x3ec]
---
0x376 JUMPDEST
0x377 PUSH1 0x0
0x379 DUP1
0x37a PUSH1 0x0
0x37c SWAP1
0x37d SLOAD
0x37e SWAP1
0x37f PUSH2 0x100
0x382 EXP
0x383 SWAP1
0x384 DIV
0x385 PUSH1 0xff
0x387 AND
0x388 PUSH1 0xff
0x38a AND
0x38b EQ
0x38c ISZERO
0x38d PUSH2 0x3ec
0x390 JUMPI
---
0x376: JUMPDEST 
0x377: V239 = 0x0
0x37a: V240 = 0x0
0x37d: V241 = S[0x0]
0x37f: V242 = 0x100
0x382: V243 = EXP 0x100 0x0
0x384: V244 = DIV V241 0x1
0x385: V245 = 0xff
0x387: V246 = AND 0xff V244
0x388: V247 = 0xff
0x38a: V248 = AND 0xff V246
0x38b: V249 = EQ V248 0x0
0x38c: V250 = ISZERO V249
0x38d: V251 = 0x3ec
0x390: JUMPI 0x3ec V250
---
Entry stack: [V11, 0x17a, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17a, V101]

================================

Block 0x391
[0x391:0x3eb]
---
Predecessors: [0x376]
Successors: [0x3ec]
---
0x391 DUP1
0x392 PUSH1 0x0
0x394 DUP1
0x395 PUSH2 0x100
0x398 EXP
0x399 DUP2
0x39a SLOAD
0x39b DUP2
0x39c PUSH1 0xff
0x39e MUL
0x39f NOT
0x3a0 AND
0x3a1 SWAP1
0x3a2 DUP4
0x3a3 PUSH1 0xff
0x3a5 AND
0x3a6 MUL
0x3a7 OR
0x3a8 SWAP1
0x3a9 SSTORE
0x3aa POP
0x3ab CALLER
0x3ac PUSH1 0x0
0x3ae PUSH1 0x2
0x3b0 PUSH2 0x100
0x3b3 EXP
0x3b4 DUP2
0x3b5 SLOAD
0x3b6 DUP2
0x3b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cc MUL
0x3cd NOT
0x3ce AND
0x3cf SWAP1
0x3d0 DUP4
0x3d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e6 AND
0x3e7 MUL
0x3e8 OR
0x3e9 SWAP1
0x3ea SSTORE
0x3eb POP
---
0x392: V252 = 0x0
0x395: V253 = 0x100
0x398: V254 = EXP 0x100 0x0
0x39a: V255 = S[0x0]
0x39c: V256 = 0xff
0x39e: V257 = MUL 0xff 0x1
0x39f: V258 = NOT 0xff
0x3a0: V259 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V255
0x3a3: V260 = 0xff
0x3a5: V261 = AND 0xff V101
0x3a6: V262 = MUL V261 0x1
0x3a7: V263 = OR V262 V259
0x3a9: S[0x0] = V263
0x3ab: V264 = CALLER
0x3ac: V265 = 0x0
0x3ae: V266 = 0x2
0x3b0: V267 = 0x100
0x3b3: V268 = EXP 0x100 0x2
0x3b5: V269 = S[0x0]
0x3b7: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cc: V271 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x10000
0x3cd: V272 = NOT 0xffffffffffffffffffffffffffffffffffffffff0000
0x3ce: V273 = AND 0xffffffffffffffffffff0000000000000000000000000000000000000000ffff V269
0x3d1: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e6: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x3e7: V276 = MUL V275 0x10000
0x3e8: V277 = OR V276 V273
0x3ea: S[0x0] = V277
---
Entry stack: [V11, 0x17a, V101]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x17a, V101]

================================

Block 0x3ec
[0x3ec:0x3ee]
---
Predecessors: [0x376, 0x391]
Successors: [0x17a]
---
0x3ec JUMPDEST
0x3ed POP
0x3ee JUMP
---
0x3ec: JUMPDEST 
0x3ee: JUMP 0x17a
---
Entry stack: [V11, 0x17a, V101]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ef
[0x3ef:0x40b]
---
Predecessors: [0x210, 0x357]
Successors: [0x218, 0x35f]
---
0x3ef JUMPDEST
0x3f0 PUSH1 0x1
0x3f2 PUSH1 0x0
0x3f4 PUSH1 0x1
0x3f6 PUSH2 0x100
0x3f9 EXP
0x3fa DUP2
0x3fb SLOAD
0x3fc DUP2
0x3fd PUSH1 0xff
0x3ff MUL
0x400 NOT
0x401 AND
0x402 SWAP1
0x403 DUP4
0x404 ISZERO
0x405 ISZERO
0x406 MUL
0x407 OR
0x408 SWAP1
0x409 SSTORE
0x40a POP
0x40b JUMP
---
0x3ef: JUMPDEST 
0x3f0: V278 = 0x1
0x3f2: V279 = 0x0
0x3f4: V280 = 0x1
0x3f6: V281 = 0x100
0x3f9: V282 = EXP 0x100 0x1
0x3fb: V283 = S[0x0]
0x3fd: V284 = 0xff
0x3ff: V285 = MUL 0xff 0x100
0x400: V286 = NOT 0xff00
0x401: V287 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V283
0x404: V288 = ISZERO 0x1
0x405: V289 = ISZERO 0x0
0x406: V290 = MUL 0x1 0x100
0x407: V291 = OR 0x100 V287
0x409: S[0x0] = V291
0x40b: JUMP {0x218, 0x35f}
---
Entry stack: [V11, {0x117, 0x132}, S1, {0x218, 0x35f}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0x117, 0x132}, S1]

================================

Block 0x40c
[0x40c:0x41a]
---
Predecessors: []
Successors: [0x41b]
Has unresolved jump.
---
0x40c STOP
0x40d LOG1
0x40e PUSH6 0x627a7a723058
0x415 SHA3
0x416 MISSING 0x1f
0x417 BYTE
0x418 CREATE
0x419 MOD
0x41a JUMPI
---
0x40c: STOP 
0x40d: LOG S0 S1 S2
0x40e: V292 = 0x627a7a723058
0x415: V293 = SHA3 0x627a7a723058 S3
0x416: MISSING 0x1f
0x417: V294 = BYTE S0 S1
0x418: V295 = CREATE V294 S2 S3
0x419: V296 = MOD V295 S4
0x41a: JUMPI V296 S5
---
Entry stack: []
Stack pops: 0
Stack additions: [V293]
Exit stack: []

================================

Block 0x41b
[0x41b:0x43d]
---
Predecessors: [0x40c]
Successors: []
---
0x41b OR
0x41c MISSING 0x4c
0x41d DUP4
0x41e CALLDATASIZE
0x41f EXP
0x420 BLOCKHASH
0x421 PUSH28 0x6e9474eb4ded411ba4f2ab1d976ba698150673820029
---
0x41b: V297 = OR S0 S1
0x41c: MISSING 0x4c
0x41e: V298 = CALLDATASIZE
0x41f: V299 = EXP V298 S3
0x420: V300 = BLOCKHASH V299
0x421: V301 = 0x6e9474eb4ded411ba4f2ab1d976ba698150673820029
---
Entry stack: []
Stack pops: 3
Stack additions: [0x6e9474eb4ded411ba4f2ab1d976ba698150673820029, V300, S0, S1, S2, S3]
Exit stack: []

================================

Function 0:
Public function signature: 0x3999795
Entry block: 0x7a
Exit block: 0x8d
Body: 0x7a, 0x81, 0x85, 0x8d, 0x17c

Function 1:
Public function signature: 0x65372147
Entry block: 0xcf
Exit block: 0xe2
Body: 0xcf, 0xd6, 0xda, 0xe2, 0x1a2

Function 2:
Public function signature: 0xab5783c4
Entry block: 0xfe
Exit block: 0x132
Body: 0xfe, 0x117, 0x132, 0x1b4, 0x20c, 0x210, 0x218, 0x242, 0x27c

Function 3:
Public function signature: 0xb2c3609b
Entry block: 0x119
Exit block: 0x132
Body: 0x117, 0x119, 0x132, 0x27f, 0x2b5, 0x2b9, 0x2d7, 0x2e2, 0x2e9, 0x2fb, 0x301, 0x353, 0x357, 0x35f, 0x360

Function 4:
Public function signature: 0xbef4876b
Entry block: 0x134
Exit block: 0x147
Body: 0x134, 0x13b, 0x13f, 0x147, 0x363

Function 5:
Public function signature: 0xf1b6315e
Entry block: 0x161
Exit block: 0x17a
Body: 0x161, 0x17a, 0x376, 0x391, 0x3ec

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

