Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3999795
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3999795
0x3c: V13 = EQ 0x3999795 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcf]
---
0x41 DUP1
0x42 PUSH4 0x65372147
0x47 EQ
0x48 PUSH2 0xcf
0x4b JUMPI
---
0x42: V15 = 0x65372147
0x47: V16 = EQ 0x65372147 V11
0x48: V17 = 0xcf
0x4b: JUMPI 0xcf V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xfe]
---
0x4c DUP1
0x4d PUSH4 0xab5783c4
0x52 EQ
0x53 PUSH2 0xfe
0x56 JUMPI
---
0x4d: V18 = 0xab5783c4
0x52: V19 = EQ 0xab5783c4 V11
0x53: V20 = 0xfe
0x56: JUMPI 0xfe V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x119]
---
0x57 DUP1
0x58 PUSH4 0xb2c3609b
0x5d EQ
0x5e PUSH2 0x119
0x61 JUMPI
---
0x58: V21 = 0xb2c3609b
0x5d: V22 = EQ 0xb2c3609b V11
0x5e: V23 = 0x119
0x61: JUMPI 0x119 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x134]
---
0x62 DUP1
0x63 PUSH4 0xbef4876b
0x68 EQ
0x69 PUSH2 0x134
0x6c JUMPI
---
0x63: V24 = 0xbef4876b
0x68: V25 = EQ 0xbef4876b V11
0x69: V26 = 0x134
0x6c: JUMPI 0x134 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x161]
---
0x6d DUP1
0x6e PUSH4 0xf1b6315e
0x73 EQ
0x74 PUSH2 0x161
0x77 JUMPI
---
0x6e: V27 = 0xf1b6315e
0x73: V28 = EQ 0xf1b6315e V11
0x74: V29 = 0x161
0x77: JUMPI 0x161 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0x7a]
Successors: [0x17c]
---
0x85 JUMPDEST
0x86 PUSH2 0x8d
0x89 PUSH2 0x17c
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V34 = 0x8d
0x89: V35 = 0x17c
0x8c: JUMP 0x17c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x8d
[0x8d:0xce]
---
Predecessors: [0x17c]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 DUP3
0x93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8 AND
0xa9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe AND
0xbf DUP2
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 SWAP2
0xc5 POP
0xc6 POP
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb SWAP2
0xcc SUB
0xcd SWAP1
0xce RETURN
---
0x8d: JUMPDEST 
0x8e: V36 = 0x40
0x90: V37 = M[0x40]
0x93: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0xa9: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xc0: M[V37] = V41
0xc1: V42 = 0x20
0xc3: V43 = ADD 0x20 V37
0xc7: V44 = 0x40
0xc9: V45 = M[0x40]
0xcc: V46 = SUB V43 V45
0xce: RETURN V45 V46
---
Entry stack: [V11, 0x8d, V112]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0xcf
[0xcf:0xd5]
---
Predecessors: [0x41]
Successors: [0xd6, 0xda]
---
0xcf JUMPDEST
0xd0 CALLVALUE
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xcf: JUMPDEST 
0xd0: V47 = CALLVALUE
0xd1: V48 = ISZERO V47
0xd2: V49 = 0xda
0xd5: JUMPI 0xda V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xcf]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V50 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0xcf]
Successors: [0x1a2]
---
0xda JUMPDEST
0xdb PUSH2 0xe2
0xde PUSH2 0x1a2
0xe1 JUMP
---
0xda: JUMPDEST 
0xdb: V51 = 0xe2
0xde: V52 = 0x1a2
0xe1: JUMP 0x1a2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe2]
Exit stack: [V11, 0xe2]

================================

Block 0xe2
[0xe2:0xfd]
---
Predecessors: [0x1a2]
Successors: []
---
0xe2 JUMPDEST
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP1
0xe7 DUP3
0xe8 PUSH1 0xff
0xea AND
0xeb PUSH1 0xff
0xed AND
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP2
0xf4 POP
0xf5 POP
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 DUP1
0xfa SWAP2
0xfb SUB
0xfc SWAP1
0xfd RETURN
---
0xe2: JUMPDEST 
0xe3: V53 = 0x40
0xe5: V54 = M[0x40]
0xe8: V55 = 0xff
0xea: V56 = AND 0xff V119
0xeb: V57 = 0xff
0xed: V58 = AND 0xff V56
0xef: M[V54] = V58
0xf0: V59 = 0x20
0xf2: V60 = ADD 0x20 V54
0xf6: V61 = 0x40
0xf8: V62 = M[0x40]
0xfb: V63 = SUB V60 V62
0xfd: RETURN V62 V63
---
Entry stack: [V11, 0xe2, V119]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe2]

================================

Block 0xfe
[0xfe:0x116]
---
Predecessors: [0x4c]
Successors: [0x1b4]
---
0xfe JUMPDEST
0xff PUSH2 0x117
0x102 PUSH1 0x4
0x104 DUP1
0x105 DUP1
0x106 CALLDATALOAD
0x107 PUSH1 0xff
0x109 AND
0x10a SWAP1
0x10b PUSH1 0x20
0x10d ADD
0x10e SWAP1
0x10f SWAP2
0x110 SWAP1
0x111 POP
0x112 POP
0x113 PUSH2 0x1b4
0x116 JUMP
---
0xfe: JUMPDEST 
0xff: V64 = 0x117
0x102: V65 = 0x4
0x106: V66 = CALLDATALOAD 0x4
0x107: V67 = 0xff
0x109: V68 = AND 0xff V66
0x10b: V69 = 0x20
0x10d: V70 = ADD 0x20 0x4
0x113: V71 = 0x1b4
0x116: JUMP 0x1b4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x117, V68]
Exit stack: [V11, 0x117, V68]

================================

Block 0x117
[0x117:0x118]
---
Predecessors: [0x299, 0x37d]
Successors: []
---
0x117 JUMPDEST
0x118 STOP
---
0x117: JUMPDEST 
0x118: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x119
[0x119:0x131]
---
Predecessors: [0x57]
Successors: [0x29c]
---
0x119 JUMPDEST
0x11a PUSH2 0x132
0x11d PUSH1 0x4
0x11f DUP1
0x120 DUP1
0x121 CALLDATALOAD
0x122 PUSH1 0xff
0x124 AND
0x125 SWAP1
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP1
0x12a SWAP2
0x12b SWAP1
0x12c POP
0x12d POP
0x12e PUSH2 0x29c
0x131 JUMP
---
0x119: JUMPDEST 
0x11a: V72 = 0x132
0x11d: V73 = 0x4
0x121: V74 = CALLDATALOAD 0x4
0x122: V75 = 0xff
0x124: V76 = AND 0xff V74
0x126: V77 = 0x20
0x128: V78 = ADD 0x20 0x4
0x12e: V79 = 0x29c
0x131: JUMP 0x29c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x132, V76]
Exit stack: [V11, 0x132, V76]

================================

Block 0x132
[0x132:0x133]
---
Predecessors: [0x299, 0x37d]
Successors: []
---
0x132 JUMPDEST
0x133 STOP
---
0x132: JUMPDEST 
0x133: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x134
[0x134:0x13a]
---
Predecessors: [0x62]
Successors: [0x13b, 0x13f]
---
0x134 JUMPDEST
0x135 CALLVALUE
0x136 ISZERO
0x137 PUSH2 0x13f
0x13a JUMPI
---
0x134: JUMPDEST 
0x135: V80 = CALLVALUE
0x136: V81 = ISZERO V80
0x137: V82 = 0x13f
0x13a: JUMPI 0x13f V81
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13b
[0x13b:0x13e]
---
Predecessors: [0x134]
Successors: []
---
0x13b PUSH1 0x0
0x13d DUP1
0x13e REVERT
---
0x13b: V83 = 0x0
0x13e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13f
[0x13f:0x146]
---
Predecessors: [0x134]
Successors: [0x380]
---
0x13f JUMPDEST
0x140 PUSH2 0x147
0x143 PUSH2 0x380
0x146 JUMP
---
0x13f: JUMPDEST 
0x140: V84 = 0x147
0x143: V85 = 0x380
0x146: JUMP 0x380
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x147]
Exit stack: [V11, 0x147]

================================

Block 0x147
[0x147:0x160]
---
Predecessors: [0x380]
Successors: []
---
0x147 JUMPDEST
0x148 PUSH1 0x40
0x14a MLOAD
0x14b DUP1
0x14c DUP3
0x14d ISZERO
0x14e ISZERO
0x14f ISZERO
0x150 ISZERO
0x151 DUP2
0x152 MSTORE
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP2
0x157 POP
0x158 POP
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d SWAP2
0x15e SUB
0x15f SWAP1
0x160 RETURN
---
0x147: JUMPDEST 
0x148: V86 = 0x40
0x14a: V87 = M[0x40]
0x14d: V88 = ISZERO V249
0x14e: V89 = ISZERO V88
0x14f: V90 = ISZERO V89
0x150: V91 = ISZERO V90
0x152: M[V87] = V91
0x153: V92 = 0x20
0x155: V93 = ADD 0x20 V87
0x159: V94 = 0x40
0x15b: V95 = M[0x40]
0x15e: V96 = SUB V93 V95
0x160: RETURN V95 V96
---
Entry stack: [V11, 0x147, V249]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x147]

================================

Block 0x161
[0x161:0x179]
---
Predecessors: [0x6d]
Successors: [0x393]
---
0x161 JUMPDEST
0x162 PUSH2 0x17a
0x165 PUSH1 0x4
0x167 DUP1
0x168 DUP1
0x169 CALLDATALOAD
0x16a PUSH1 0xff
0x16c AND
0x16d SWAP1
0x16e PUSH1 0x20
0x170 ADD
0x171 SWAP1
0x172 SWAP2
0x173 SWAP1
0x174 POP
0x175 POP
0x176 PUSH2 0x393
0x179 JUMP
---
0x161: JUMPDEST 
0x162: V97 = 0x17a
0x165: V98 = 0x4
0x169: V99 = CALLDATALOAD 0x4
0x16a: V100 = 0xff
0x16c: V101 = AND 0xff V99
0x16e: V102 = 0x20
0x170: V103 = ADD 0x20 0x4
0x176: V104 = 0x393
0x179: JUMP 0x393
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x17a, V101]
Exit stack: [V11, 0x17a, V101]

================================

Block 0x17a
[0x17a:0x17b]
---
Predecessors: [0x409]
Successors: []
---
0x17a JUMPDEST
0x17b STOP
---
0x17a: JUMPDEST 
0x17b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17c
[0x17c:0x1a1]
---
Predecessors: [0x85]
Successors: [0x8d]
---
0x17c JUMPDEST
0x17d PUSH1 0x0
0x17f PUSH1 0x2
0x181 SWAP1
0x182 SLOAD
0x183 SWAP1
0x184 PUSH2 0x100
0x187 EXP
0x188 SWAP1
0x189 DIV
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 DUP2
0x1a1 JUMP
---
0x17c: JUMPDEST 
0x17d: V105 = 0x0
0x17f: V106 = 0x2
0x182: V107 = S[0x0]
0x184: V108 = 0x100
0x187: V109 = EXP 0x100 0x2
0x189: V110 = DIV V107 0x10000
0x18a: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1a1: JUMP 0x8d
---
Entry stack: [V11, 0x8d]
Stack pops: 1
Stack additions: [S0, V112]
Exit stack: [V11, 0x8d, V112]

================================

Block 0x1a2
[0x1a2:0x1b3]
---
Predecessors: [0xda]
Successors: [0xe2]
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 SWAP1
0x1a7 SLOAD
0x1a8 SWAP1
0x1a9 PUSH2 0x100
0x1ac EXP
0x1ad SWAP1
0x1ae DIV
0x1af PUSH1 0xff
0x1b1 AND
0x1b2 DUP2
0x1b3 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V113 = 0x0
0x1a7: V114 = S[0x0]
0x1a9: V115 = 0x100
0x1ac: V116 = EXP 0x100 0x0
0x1ae: V117 = DIV V114 0x1
0x1af: V118 = 0xff
0x1b1: V119 = AND 0xff V117
0x1b3: JUMP 0xe2
---
Entry stack: [V11, 0xe2]
Stack pops: 1
Stack additions: [S0, V119]
Exit stack: [V11, 0xe2, V119]

================================

Block 0x1b4
[0x1b4:0x20b]
---
Predecessors: [0xfe]
Successors: [0x20c, 0x210]
---
0x1b4 JUMPDEST
0x1b5 PUSH1 0x0
0x1b7 PUSH1 0x2
0x1b9 SWAP1
0x1ba SLOAD
0x1bb SWAP1
0x1bc PUSH2 0x100
0x1bf EXP
0x1c0 SWAP1
0x1c1 DIV
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 AND
0x1d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ed AND
0x1ee CALLER
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 EQ
0x206 ISZERO
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V120 = 0x0
0x1b7: V121 = 0x2
0x1ba: V122 = S[0x0]
0x1bc: V123 = 0x100
0x1bf: V124 = EXP 0x100 0x2
0x1c1: V125 = DIV V122 0x10000
0x1c2: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x1d8: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x1ee: V130 = CALLER
0x1ef: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x205: V133 = EQ V132 V129
0x206: V134 = ISZERO V133
0x207: V135 = ISZERO V134
0x208: V136 = 0x210
0x20b: JUMPI 0x210 V135
---
Entry stack: [V11, 0x117, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V68]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x1b4]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V137 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x117, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x117, V68]

================================

Block 0x210
[0x210:0x217]
---
Predecessors: [0x1b4]
Successors: [0x40c]
---
0x210 JUMPDEST
0x211 PUSH2 0x218
0x214 PUSH2 0x40c
0x217 JUMP
---
0x210: JUMPDEST 
0x211: V138 = 0x218
0x214: V139 = 0x40c
0x217: JUMP 0x40c
---
Entry stack: [V11, 0x117, V68]
Stack pops: 0
Stack additions: [0x218]
Exit stack: [V11, 0x117, V68, 0x218]

================================

Block 0x218
[0x218:0x241]
---
Predecessors: [0x40c]
Successors: [0x242, 0x299]
---
0x218 JUMPDEST
0x219 DUP1
0x21a PUSH1 0x0
0x21c DUP1
0x21d PUSH2 0x100
0x220 EXP
0x221 DUP2
0x222 SLOAD
0x223 DUP2
0x224 PUSH1 0xff
0x226 MUL
0x227 NOT
0x228 AND
0x229 SWAP1
0x22a DUP4
0x22b PUSH1 0xff
0x22d AND
0x22e MUL
0x22f OR
0x230 SWAP1
0x231 SSTORE
0x232 POP
0x233 PUSH7 0x38d7ea4c68000
0x23b CALLVALUE
0x23c GT
0x23d ISZERO
0x23e PUSH2 0x299
0x241 JUMPI
---
0x218: JUMPDEST 
0x21a: V140 = 0x0
0x21d: V141 = 0x100
0x220: V142 = EXP 0x100 0x0
0x222: V143 = S[0x0]
0x224: V144 = 0xff
0x226: V145 = MUL 0xff 0x1
0x227: V146 = NOT 0xff
0x228: V147 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V143
0x22b: V148 = 0xff
0x22d: V149 = AND 0xff S0
0x22e: V150 = MUL V149 0x1
0x22f: V151 = OR V150 V147
0x231: S[0x0] = V151
0x233: V152 = 0x38d7ea4c68000
0x23b: V153 = CALLVALUE
0x23c: V154 = GT V153 0x38d7ea4c68000
0x23d: V155 = ISZERO V154
0x23e: V156 = 0x299
0x241: JUMPI 0x299 V155
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0x117, 0x132}, S0]

================================

Block 0x242
[0x242:0x293]
---
Predecessors: [0x218]
Successors: [0x294, 0x298]
---
0x242 CALLER
0x243 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x258 AND
0x259 PUSH2 0x8fc
0x25c ADDRESS
0x25d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x272 AND
0x273 BALANCE
0x274 SWAP1
0x275 DUP2
0x276 ISZERO
0x277 MUL
0x278 SWAP1
0x279 PUSH1 0x40
0x27b MLOAD
0x27c PUSH1 0x0
0x27e PUSH1 0x40
0x280 MLOAD
0x281 DUP1
0x282 DUP4
0x283 SUB
0x284 DUP2
0x285 DUP6
0x286 DUP9
0x287 DUP9
0x288 CALL
0x289 SWAP4
0x28a POP
0x28b POP
0x28c POP
0x28d POP
0x28e ISZERO
0x28f ISZERO
0x290 PUSH2 0x298
0x293 JUMPI
---
0x242: V157 = CALLER
0x243: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x258: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x259: V160 = 0x8fc
0x25c: V161 = ADDRESS
0x25d: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x272: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x273: V164 = BALANCE V163
0x276: V165 = ISZERO V164
0x277: V166 = MUL V165 0x8fc
0x279: V167 = 0x40
0x27b: V168 = M[0x40]
0x27c: V169 = 0x0
0x27e: V170 = 0x40
0x280: V171 = M[0x40]
0x283: V172 = SUB V168 V171
0x288: V173 = CALL V166 V159 V164 V171 V172 V171 0x0
0x28e: V174 = ISZERO V173
0x28f: V175 = ISZERO V174
0x290: V176 = 0x298
0x293: JUMPI 0x298 V175
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x117, 0x132}, S0]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x242]
Successors: []
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
---
0x294: V177 = 0x0
0x297: REVERT 0x0 0x0
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x117, 0x132}, S0]

================================

Block 0x298
[0x298:0x298]
---
Predecessors: [0x242]
Successors: [0x299]
---
0x298 JUMPDEST
---
0x298: JUMPDEST 
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x117, 0x132}, S0]

================================

Block 0x299
[0x299:0x29b]
---
Predecessors: [0x218, 0x298]
Successors: [0x117, 0x132]
---
0x299 JUMPDEST
0x29a POP
0x29b JUMP
---
0x299: JUMPDEST 
0x29b: JUMP {0x117, 0x132}
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x29c
[0x29c:0x2d1]
---
Predecessors: [0x119]
Successors: [0x2d2, 0x2d6]
---
0x29c JUMPDEST
0x29d ORIGIN
0x29e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b3 AND
0x2b4 CALLER
0x2b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ca AND
0x2cb EQ
0x2cc ISZERO
0x2cd ISZERO
0x2ce PUSH2 0x2d6
0x2d1 JUMPI
---
0x29c: JUMPDEST 
0x29d: V178 = ORIGIN
0x29e: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x2b4: V181 = CALLER
0x2b5: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x2cb: V184 = EQ V183 V180
0x2cc: V185 = ISZERO V184
0x2cd: V186 = ISZERO V185
0x2ce: V187 = 0x2d6
0x2d1: JUMPI 0x2d6 V186
---
Entry stack: [V11, 0x132, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V76]

================================

Block 0x2d2
[0x2d2:0x2d5]
---
Predecessors: [0x29c]
Successors: []
---
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 REVERT
---
0x2d2: V188 = 0x0
0x2d5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V76]

================================

Block 0x2d6
[0x2d6:0x2f3]
---
Predecessors: [0x29c]
Successors: [0x2f4, 0x2ff]
---
0x2d6 JUMPDEST
0x2d7 DUP1
0x2d8 PUSH1 0xff
0x2da AND
0x2db PUSH1 0x0
0x2dd DUP1
0x2de SWAP1
0x2df SLOAD
0x2e0 SWAP1
0x2e1 PUSH2 0x100
0x2e4 EXP
0x2e5 SWAP1
0x2e6 DIV
0x2e7 PUSH1 0xff
0x2e9 AND
0x2ea PUSH1 0xff
0x2ec AND
0x2ed EQ
0x2ee DUP1
0x2ef ISZERO
0x2f0 PUSH2 0x2ff
0x2f3 JUMPI
---
0x2d6: JUMPDEST 
0x2d8: V189 = 0xff
0x2da: V190 = AND 0xff V76
0x2db: V191 = 0x0
0x2df: V192 = S[0x0]
0x2e1: V193 = 0x100
0x2e4: V194 = EXP 0x100 0x0
0x2e6: V195 = DIV V192 0x1
0x2e7: V196 = 0xff
0x2e9: V197 = AND 0xff V195
0x2ea: V198 = 0xff
0x2ec: V199 = AND 0xff V197
0x2ed: V200 = EQ V199 V190
0x2ef: V201 = ISZERO V200
0x2f0: V202 = 0x2ff
0x2f3: JUMPI 0x2ff V201
---
Entry stack: [V11, 0x132, V76]
Stack pops: 1
Stack additions: [S0, V200]
Exit stack: [V11, 0x132, V76, V200]

================================

Block 0x2f4
[0x2f4:0x2fe]
---
Predecessors: [0x2d6]
Successors: [0x2ff]
---
0x2f4 POP
0x2f5 PUSH7 0x38d7ea4c68000
0x2fd CALLVALUE
0x2fe GT
---
0x2f5: V203 = 0x38d7ea4c68000
0x2fd: V204 = CALLVALUE
0x2fe: V205 = GT V204 0x38d7ea4c68000
---
Entry stack: [V11, 0x132, V76, V200]
Stack pops: 1
Stack additions: [V205]
Exit stack: [V11, 0x132, V76, V205]

================================

Block 0x2ff
[0x2ff:0x305]
---
Predecessors: [0x2d6, 0x2f4]
Successors: [0x306, 0x318]
---
0x2ff JUMPDEST
0x300 DUP1
0x301 ISZERO
0x302 PUSH2 0x318
0x305 JUMPI
---
0x2ff: JUMPDEST 
0x301: V206 = ISZERO S0
0x302: V207 = 0x318
0x305: JUMPI 0x318 V206
---
Entry stack: [V11, 0x132, V76, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x132, V76, S0]

================================

Block 0x306
[0x306:0x317]
---
Predecessors: [0x2ff]
Successors: [0x318]
---
0x306 POP
0x307 PUSH1 0x0
0x309 PUSH1 0x1
0x30b SWAP1
0x30c SLOAD
0x30d SWAP1
0x30e PUSH2 0x100
0x311 EXP
0x312 SWAP1
0x313 DIV
0x314 PUSH1 0xff
0x316 AND
0x317 ISZERO
---
0x307: V208 = 0x0
0x309: V209 = 0x1
0x30c: V210 = S[0x0]
0x30e: V211 = 0x100
0x311: V212 = EXP 0x100 0x1
0x313: V213 = DIV V210 0x100
0x314: V214 = 0xff
0x316: V215 = AND 0xff V213
0x317: V216 = ISZERO V215
---
Entry stack: [V11, 0x132, V76, S0]
Stack pops: 1
Stack additions: [V216]
Exit stack: [V11, 0x132, V76, V216]

================================

Block 0x318
[0x318:0x31d]
---
Predecessors: [0x2ff, 0x306]
Successors: [0x31e, 0x37d]
---
0x318 JUMPDEST
0x319 ISZERO
0x31a PUSH2 0x37d
0x31d JUMPI
---
0x318: JUMPDEST 
0x319: V217 = ISZERO S0
0x31a: V218 = 0x37d
0x31d: JUMPI 0x37d V217
---
Entry stack: [V11, 0x132, V76, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x132, V76]

================================

Block 0x31e
[0x31e:0x36f]
---
Predecessors: [0x318]
Successors: [0x370, 0x374]
---
0x31e CALLER
0x31f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x334 AND
0x335 PUSH2 0x8fc
0x338 ADDRESS
0x339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34e AND
0x34f BALANCE
0x350 SWAP1
0x351 DUP2
0x352 ISZERO
0x353 MUL
0x354 SWAP1
0x355 PUSH1 0x40
0x357 MLOAD
0x358 PUSH1 0x0
0x35a PUSH1 0x40
0x35c MLOAD
0x35d DUP1
0x35e DUP4
0x35f SUB
0x360 DUP2
0x361 DUP6
0x362 DUP9
0x363 DUP9
0x364 CALL
0x365 SWAP4
0x366 POP
0x367 POP
0x368 POP
0x369 POP
0x36a ISZERO
0x36b ISZERO
0x36c PUSH2 0x374
0x36f JUMPI
---
0x31e: V219 = CALLER
0x31f: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x334: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x335: V222 = 0x8fc
0x338: V223 = ADDRESS
0x339: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x34f: V226 = BALANCE V225
0x352: V227 = ISZERO V226
0x353: V228 = MUL V227 0x8fc
0x355: V229 = 0x40
0x357: V230 = M[0x40]
0x358: V231 = 0x0
0x35a: V232 = 0x40
0x35c: V233 = M[0x40]
0x35f: V234 = SUB V230 V233
0x364: V235 = CALL V228 V221 V226 V233 V234 V233 0x0
0x36a: V236 = ISZERO V235
0x36b: V237 = ISZERO V236
0x36c: V238 = 0x374
0x36f: JUMPI 0x374 V237
---
Entry stack: [V11, 0x132, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V76]

================================

Block 0x370
[0x370:0x373]
---
Predecessors: [0x31e]
Successors: []
---
0x370 PUSH1 0x0
0x372 DUP1
0x373 REVERT
---
0x370: V239 = 0x0
0x373: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V76]

================================

Block 0x374
[0x374:0x37b]
---
Predecessors: [0x31e]
Successors: [0x40c]
---
0x374 JUMPDEST
0x375 PUSH2 0x37c
0x378 PUSH2 0x40c
0x37b JUMP
---
0x374: JUMPDEST 
0x375: V240 = 0x37c
0x378: V241 = 0x40c
0x37b: JUMP 0x40c
---
Entry stack: [V11, 0x132, V76]
Stack pops: 0
Stack additions: [0x37c]
Exit stack: [V11, 0x132, V76, 0x37c]

================================

Block 0x37c
[0x37c:0x37c]
---
Predecessors: [0x40c]
Successors: [0x37d]
---
0x37c JUMPDEST
---
0x37c: JUMPDEST 
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x117, 0x132}, S0]

================================

Block 0x37d
[0x37d:0x37f]
---
Predecessors: [0x318, 0x37c]
Successors: [0x117, 0x132]
---
0x37d JUMPDEST
0x37e POP
0x37f JUMP
---
0x37d: JUMPDEST 
0x37f: JUMP {0x117, 0x132}
---
Entry stack: [V11, {0x117, 0x132}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x380
[0x380:0x392]
---
Predecessors: [0x13f]
Successors: [0x147]
---
0x380 JUMPDEST
0x381 PUSH1 0x0
0x383 PUSH1 0x1
0x385 SWAP1
0x386 SLOAD
0x387 SWAP1
0x388 PUSH2 0x100
0x38b EXP
0x38c SWAP1
0x38d DIV
0x38e PUSH1 0xff
0x390 AND
0x391 DUP2
0x392 JUMP
---
0x380: JUMPDEST 
0x381: V242 = 0x0
0x383: V243 = 0x1
0x386: V244 = S[0x0]
0x388: V245 = 0x100
0x38b: V246 = EXP 0x100 0x1
0x38d: V247 = DIV V244 0x100
0x38e: V248 = 0xff
0x390: V249 = AND 0xff V247
0x392: JUMP 0x147
---
Entry stack: [V11, 0x147]
Stack pops: 1
Stack additions: [S0, V249]
Exit stack: [V11, 0x147, V249]

================================

Block 0x393
[0x393:0x3ad]
---
Predecessors: [0x161]
Successors: [0x3ae, 0x409]
---
0x393 JUMPDEST
0x394 PUSH1 0x0
0x396 DUP1
0x397 PUSH1 0x0
0x399 SWAP1
0x39a SLOAD
0x39b SWAP1
0x39c PUSH2 0x100
0x39f EXP
0x3a0 SWAP1
0x3a1 DIV
0x3a2 PUSH1 0xff
0x3a4 AND
0x3a5 PUSH1 0xff
0x3a7 AND
0x3a8 EQ
0x3a9 ISZERO
0x3aa PUSH2 0x409
0x3ad JUMPI
---
0x393: JUMPDEST 
0x394: V250 = 0x0
0x397: V251 = 0x0
0x39a: V252 = S[0x0]
0x39c: V253 = 0x100
0x39f: V254 = EXP 0x100 0x0
0x3a1: V255 = DIV V252 0x1
0x3a2: V256 = 0xff
0x3a4: V257 = AND 0xff V255
0x3a5: V258 = 0xff
0x3a7: V259 = AND 0xff V257
0x3a8: V260 = EQ V259 0x0
0x3a9: V261 = ISZERO V260
0x3aa: V262 = 0x409
0x3ad: JUMPI 0x409 V261
---
Entry stack: [V11, 0x17a, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17a, V101]

================================

Block 0x3ae
[0x3ae:0x408]
---
Predecessors: [0x393]
Successors: [0x409]
---
0x3ae DUP1
0x3af PUSH1 0x0
0x3b1 DUP1
0x3b2 PUSH2 0x100
0x3b5 EXP
0x3b6 DUP2
0x3b7 SLOAD
0x3b8 DUP2
0x3b9 PUSH1 0xff
0x3bb MUL
0x3bc NOT
0x3bd AND
0x3be SWAP1
0x3bf DUP4
0x3c0 PUSH1 0xff
0x3c2 AND
0x3c3 MUL
0x3c4 OR
0x3c5 SWAP1
0x3c6 SSTORE
0x3c7 POP
0x3c8 CALLER
0x3c9 PUSH1 0x0
0x3cb PUSH1 0x2
0x3cd PUSH2 0x100
0x3d0 EXP
0x3d1 DUP2
0x3d2 SLOAD
0x3d3 DUP2
0x3d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e9 MUL
0x3ea NOT
0x3eb AND
0x3ec SWAP1
0x3ed DUP4
0x3ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x403 AND
0x404 MUL
0x405 OR
0x406 SWAP1
0x407 SSTORE
0x408 POP
---
0x3af: V263 = 0x0
0x3b2: V264 = 0x100
0x3b5: V265 = EXP 0x100 0x0
0x3b7: V266 = S[0x0]
0x3b9: V267 = 0xff
0x3bb: V268 = MUL 0xff 0x1
0x3bc: V269 = NOT 0xff
0x3bd: V270 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V266
0x3c0: V271 = 0xff
0x3c2: V272 = AND 0xff V101
0x3c3: V273 = MUL V272 0x1
0x3c4: V274 = OR V273 V270
0x3c6: S[0x0] = V274
0x3c8: V275 = CALLER
0x3c9: V276 = 0x0
0x3cb: V277 = 0x2
0x3cd: V278 = 0x100
0x3d0: V279 = EXP 0x100 0x2
0x3d2: V280 = S[0x0]
0x3d4: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e9: V282 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x10000
0x3ea: V283 = NOT 0xffffffffffffffffffffffffffffffffffffffff0000
0x3eb: V284 = AND 0xffffffffffffffffffff0000000000000000000000000000000000000000ffff V280
0x3ee: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x403: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x404: V287 = MUL V286 0x10000
0x405: V288 = OR V287 V284
0x407: S[0x0] = V288
---
Entry stack: [V11, 0x17a, V101]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x17a, V101]

================================

Block 0x409
[0x409:0x40b]
---
Predecessors: [0x393, 0x3ae]
Successors: [0x17a]
---
0x409 JUMPDEST
0x40a POP
0x40b JUMP
---
0x409: JUMPDEST 
0x40b: JUMP 0x17a
---
Entry stack: [V11, 0x17a, V101]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x40c
[0x40c:0x428]
---
Predecessors: [0x210, 0x374]
Successors: [0x218, 0x37c]
---
0x40c JUMPDEST
0x40d PUSH1 0x1
0x40f PUSH1 0x0
0x411 PUSH1 0x1
0x413 PUSH2 0x100
0x416 EXP
0x417 DUP2
0x418 SLOAD
0x419 DUP2
0x41a PUSH1 0xff
0x41c MUL
0x41d NOT
0x41e AND
0x41f SWAP1
0x420 DUP4
0x421 ISZERO
0x422 ISZERO
0x423 MUL
0x424 OR
0x425 SWAP1
0x426 SSTORE
0x427 POP
0x428 JUMP
---
0x40c: JUMPDEST 
0x40d: V289 = 0x1
0x40f: V290 = 0x0
0x411: V291 = 0x1
0x413: V292 = 0x100
0x416: V293 = EXP 0x100 0x1
0x418: V294 = S[0x0]
0x41a: V295 = 0xff
0x41c: V296 = MUL 0xff 0x100
0x41d: V297 = NOT 0xff00
0x41e: V298 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V294
0x421: V299 = ISZERO 0x1
0x422: V300 = ISZERO 0x0
0x423: V301 = MUL 0x1 0x100
0x424: V302 = OR 0x100 V298
0x426: S[0x0] = V302
0x428: JUMP {0x218, 0x37c}
---
Entry stack: [V11, {0x117, 0x132}, S1, {0x218, 0x37c}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0x117, 0x132}, S1]

================================

Block 0x429
[0x429:0x464]
---
Predecessors: []
Successors: []
---
0x429 STOP
0x42a LOG1
0x42b PUSH6 0x627a7a723058
0x432 SHA3
0x433 SWAP11
0x434 MISSING 0x25
0x435 SWAP2
0x436 DIV
0x437 SWAP7
0x438 SAR
0x439 CALLER
0x43a MISSING 0x2b
0x43b ORIGIN
0x43c MISSING 0xb5
0x43d MISSING 0x46
0x43e SHR
0x43f EXTCODECOPY
0x440 DUP4
0x441 STATICCALL
0x442 MISSING 0xdb
0x443 MISSING 0xc2
0x444 MISSING 0xc5
0x445 PUSH31 0xbe7eb28f7098d43fbf364a62ea0029
---
0x429: STOP 
0x42a: LOG S0 S1 S2
0x42b: V303 = 0x627a7a723058
0x432: V304 = SHA3 0x627a7a723058 S3
0x434: MISSING 0x25
0x436: V305 = DIV S2 S1
0x438: V306 = SAR S8 S0
0x439: V307 = CALLER
0x43a: MISSING 0x2b
0x43b: V308 = ORIGIN
0x43c: MISSING 0xb5
0x43d: MISSING 0x46
0x43e: V309 = SHR S0 S1
0x43f: EXTCODECOPY V309 S2 S3 S4
0x441: V310 = STATICCALL S8 S5 S6 S7 S8 S9
0x442: MISSING 0xdb
0x443: MISSING 0xc2
0x444: MISSING 0xc5
0x445: V311 = 0xbe7eb28f7098d43fbf364a62ea0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S14, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V304, V307, V306, S3, S4, S5, S6, S7, V305, V308, V310, 0xbe7eb28f7098d43fbf364a62ea0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3999795
Entry block: 0x7a
Exit block: 0x8d
Body: 0x7a, 0x81, 0x85, 0x8d, 0x17c

Function 1:
Public function signature: 0x65372147
Entry block: 0xcf
Exit block: 0xe2
Body: 0xcf, 0xd6, 0xda, 0xe2, 0x1a2

Function 2:
Public function signature: 0xab5783c4
Entry block: 0xfe
Exit block: 0x132
Body: 0xfe, 0x117, 0x132, 0x1b4, 0x20c, 0x210, 0x218, 0x242, 0x294, 0x298, 0x299

Function 3:
Public function signature: 0xb2c3609b
Entry block: 0x119
Exit block: 0x132
Body: 0x117, 0x119, 0x132, 0x29c, 0x2d2, 0x2d6, 0x2f4, 0x2ff, 0x306, 0x318, 0x31e, 0x370, 0x374, 0x37c, 0x37d

Function 4:
Public function signature: 0xbef4876b
Entry block: 0x134
Exit block: 0x147
Body: 0x134, 0x13b, 0x13f, 0x147, 0x380

Function 5:
Public function signature: 0xf1b6315e
Entry block: 0x161
Exit block: 0x17a
Body: 0x161, 0x17a, 0x393, 0x3ae, 0x409

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

