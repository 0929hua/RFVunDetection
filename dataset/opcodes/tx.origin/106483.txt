Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x34]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x2bffc7ed
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x34
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x2bffc7ed
0x14: V9 = EQ V7 0x2bffc7ed
0x15: V10 = 0x34
0x18: JUMPI 0x34 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0xea]
---
0x19 DUP1
0x1a PUSH4 0x4ae9ec30
0x1f EQ
0x20 PUSH2 0xea
0x23 JUMPI
---
0x1a: V11 = 0x4ae9ec30
0x1f: V12 = EQ 0x4ae9ec30 V7
0x20: V13 = 0xea
0x23: JUMPI 0xea V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0x19]
Successors: [0x2f, 0x15c]
---
0x24 DUP1
0x25 PUSH4 0x63a9c3d7
0x2a EQ
0x2b PUSH2 0x15c
0x2e JUMPI
---
0x25: V14 = 0x63a9c3d7
0x2a: V15 = EQ 0x63a9c3d7 V7
0x2b: V16 = 0x15c
0x2e: JUMPI 0x15c V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2f
[0x2f:0x33]
---
Predecessors: [0x24]
Successors: []
---
0x2f JUMPDEST
0x30 PUSH2 0x2
0x33 JUMP
---
0x2f: JUMPDEST 
0x30: V17 = 0x2
0x33: THROW 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x34
[0x34:0x39]
---
Predecessors: [0x0]
Successors: [0x3a]
---
0x34 JUMPDEST
0x35 CALLVALUE
0x36 PUSH2 0x2
0x39 JUMPI
---
0x34: JUMPDEST 
0x35: V18 = CALLVALUE
0x36: V19 = 0x2
0x39: THROWI V18
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3a
[0x3a:0x63]
---
Predecessors: [0x34]
Successors: [0x64, 0x290]
---
0x3a PUSH2 0x1cc
0x3d PUSH1 0x24
0x3f PUSH1 0x4
0x41 DUP1
0x42 CALLDATALOAD
0x43 DUP3
0x44 DUP2
0x45 ADD
0x46 SWAP3
0x47 SWAP2
0x48 ADD
0x49 CALLDATALOAD
0x4a SWAP1
0x4b CALLDATALOAD
0x4c PUSH1 0x0
0x4e SLOAD
0x4f PUSH1 0x1
0x51 PUSH1 0xa0
0x53 PUSH1 0x2
0x55 EXP
0x56 SUB
0x57 SWAP1
0x58 DUP2
0x59 AND
0x5a ORIGIN
0x5b SWAP1
0x5c SWAP2
0x5d AND
0x5e EQ
0x5f ISZERO
0x60 PUSH2 0x290
0x63 JUMPI
---
0x3a: V20 = 0x1cc
0x3d: V21 = 0x24
0x3f: V22 = 0x4
0x42: V23 = CALLDATALOAD 0x4
0x45: V24 = ADD V23 0x24
0x48: V25 = ADD 0x4 V23
0x49: V26 = CALLDATALOAD V25
0x4b: V27 = CALLDATALOAD 0x24
0x4c: V28 = 0x0
0x4e: V29 = S[0x0]
0x4f: V30 = 0x1
0x51: V31 = 0xa0
0x53: V32 = 0x2
0x55: V33 = EXP 0x2 0xa0
0x56: V34 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x5a: V36 = ORIGIN
0x5d: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x5e: V38 = EQ V37 V35
0x5f: V39 = ISZERO V38
0x60: V40 = 0x290
0x63: JUMPI 0x290 V39
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x1cc, V24, V26, V27]
Exit stack: [V7, 0x1cc, V24, V26, V27]

================================

Block 0x64
[0x64:0xc1]
---
Predecessors: [0x3a]
Successors: [0xc2, 0x1ff]
---
0x64 DUP1
0x65 PUSH1 0x1
0x67 PUSH1 0x0
0x69 POP
0x6a DUP5
0x6b DUP5
0x6c PUSH1 0x40
0x6e MLOAD
0x6f DUP1
0x70 DUP4
0x71 DUP4
0x72 DUP1
0x73 DUP3
0x74 DUP5
0x75 CALLDATACOPY
0x76 DUP3
0x77 ADD
0x78 SWAP2
0x79 POP
0x7a POP
0x7b SWAP3
0x7c POP
0x7d POP
0x7e POP
0x7f SWAP1
0x80 DUP2
0x81 MSTORE
0x82 PUSH1 0x20
0x84 ADD
0x85 PUSH1 0x40
0x87 MLOAD
0x88 DUP1
0x89 SWAP2
0x8a SUB
0x8b SWAP1
0x8c SHA3
0x8d PUSH1 0x0
0x8f PUSH2 0x100
0x92 EXP
0x93 DUP2
0x94 SLOAD
0x95 DUP2
0x96 PUSH1 0x1
0x98 PUSH1 0xa0
0x9a PUSH1 0x2
0x9c EXP
0x9d SUB
0x9e MUL
0x9f NOT
0xa0 AND
0xa1 SWAP1
0xa2 DUP4
0xa3 MUL
0xa4 OR
0xa5 SWAP1
0xa6 SSTORE
0xa7 POP
0xa8 PUSH1 0x2
0xaa PUSH1 0x0
0xac POP
0xad DUP1
0xae SLOAD
0xaf DUP1
0xb0 PUSH1 0x1
0xb2 ADD
0xb3 DUP3
0xb4 DUP2
0xb5 DUP2
0xb6 SLOAD
0xb7 DUP2
0xb8 DUP4
0xb9 SSTORE
0xba DUP2
0xbb DUP2
0xbc ISZERO
0xbd GT
0xbe PUSH2 0x1ff
0xc1 JUMPI
---
0x65: V41 = 0x1
0x67: V42 = 0x0
0x6c: V43 = 0x40
0x6e: V44 = M[0x40]
0x75: CALLDATACOPY V44 V24 V26
0x77: V45 = ADD V44 V26
0x81: M[V45] = 0x1
0x82: V46 = 0x20
0x84: V47 = ADD 0x20 V45
0x85: V48 = 0x40
0x87: V49 = M[0x40]
0x8a: V50 = SUB V47 V49
0x8c: V51 = SHA3 V49 V50
0x8d: V52 = 0x0
0x8f: V53 = 0x100
0x92: V54 = EXP 0x100 0x0
0x94: V55 = S[V51]
0x96: V56 = 0x1
0x98: V57 = 0xa0
0x9a: V58 = 0x2
0x9c: V59 = EXP 0x2 0xa0
0x9d: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e: V61 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x9f: V62 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa0: V63 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V55
0xa3: V64 = MUL V27 0x1
0xa4: V65 = OR V64 V63
0xa6: S[V51] = V65
0xa8: V66 = 0x2
0xaa: V67 = 0x0
0xae: V68 = S[0x2]
0xb0: V69 = 0x1
0xb2: V70 = ADD 0x1 V68
0xb6: V71 = S[0x2]
0xb9: S[0x2] = V70
0xbc: V72 = ISZERO V71
0xbd: V73 = GT V72 V70
0xbe: V74 = 0x1ff
0xc1: JUMPI 0x1ff V73
---
Entry stack: [V7, 0x1cc, V24, V26, V27]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x2, V68, V70, 0x2, V70, V71]
Exit stack: [V7, 0x1cc, V24, V26, V27, 0x2, V68, V70, 0x2, V70, V71]

================================

Block 0xc2
[0xc2:0xd5]
---
Predecessors: [0x64]
Successors: [0xd6]
---
0xc2 DUP2
0xc3 DUP4
0xc4 PUSH1 0x0
0xc6 MSTORE
0xc7 PUSH1 0x20
0xc9 PUSH1 0x0
0xcb SHA3
0xcc SWAP2
0xcd DUP3
0xce ADD
0xcf SWAP2
0xd0 ADD
0xd1 PUSH2 0x1ff
0xd4 SWAP2
0xd5 SWAP1
---
0xc4: V75 = 0x0
0xc6: M[0x0] = 0x2
0xc7: V76 = 0x20
0xc9: V77 = 0x0
0xcb: V78 = SHA3 0x0 0x20
0xce: V79 = ADD V78 V71
0xd0: V80 = ADD V78 V70
0xd1: V81 = 0x1ff
---
Entry stack: [V7, 0x1cc, V24, V26, V27, 0x2, V68, V70, 0x2, V70, V71]
Stack pops: 3
Stack additions: [S2, S1, 0x1ff, V79, V80]
Exit stack: [V7, 0x1cc, V24, V26, V27, 0x2, V68, V70, 0x2, V70, 0x1ff, V79, V80]

================================

Block 0xd6
[0xd6:0xde]
---
Predecessors: [0xc2, 0xdf]
Successors: [0xdf, 0x295]
---
0xd6 JUMPDEST
0xd7 DUP1
0xd8 DUP3
0xd9 GT
0xda ISZERO
0xdb PUSH2 0x295
0xde JUMPI
---
0xd6: JUMPDEST 
0xd9: V82 = GT V79 S0
0xda: V83 = ISZERO V82
0xdb: V84 = 0x295
0xde: JUMPI 0x295 V83
---
Entry stack: [V7, 0x1cc, V24, V26, V27, 0x2, V68, V70, 0x2, V70, 0x1ff, V79, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x1cc, V24, V26, V27, 0x2, V68, V70, 0x2, V70, 0x1ff, V79, S0]

================================

Block 0xdf
[0xdf:0xe9]
---
Predecessors: [0xd6]
Successors: [0xd6]
---
0xdf PUSH1 0x0
0xe1 DUP2
0xe2 SSTORE
0xe3 PUSH1 0x1
0xe5 ADD
0xe6 PUSH2 0xd6
0xe9 JUMP
---
0xdf: V85 = 0x0
0xe2: S[S0] = 0x0
0xe3: V86 = 0x1
0xe5: V87 = ADD 0x1 S0
0xe6: V88 = 0xd6
0xe9: JUMP 0xd6
---
Entry stack: [V7, 0x1cc, V24, V26, V27, 0x2, V68, V70, 0x2, V70, 0x1ff, V79, S0]
Stack pops: 1
Stack additions: [V87]
Exit stack: [V7, 0x1cc, V24, V26, V27, 0x2, V68, V70, 0x2, V70, 0x1ff, V79, V87]

================================

Block 0xea
[0xea:0xef]
---
Predecessors: [0x19]
Successors: [0xf0]
---
0xea JUMPDEST
0xeb CALLVALUE
0xec PUSH2 0x2
0xef JUMPI
---
0xea: JUMPDEST 
0xeb: V89 = CALLVALUE
0xec: V90 = 0x2
0xef: THROWI V89
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xf0
[0xf0:0x117]
---
Predecessors: [0xea]
Successors: [0x118, 0x156]
---
0xf0 PUSH2 0x1ce
0xf3 PUSH1 0x24
0xf5 PUSH1 0x4
0xf7 DUP1
0xf8 CALLDATALOAD
0xf9 SWAP2
0xfa DUP3
0xfb ADD
0xfc SWAP2
0xfd ADD
0xfe CALLDATALOAD
0xff PUSH1 0x0
0x101 DUP1
0x102 SLOAD
0x103 PUSH1 0x1
0x105 PUSH1 0xa0
0x107 PUSH1 0x2
0x109 EXP
0x10a SUB
0x10b SWAP1
0x10c DUP2
0x10d AND
0x10e ORIGIN
0x10f SWAP1
0x110 SWAP2
0x111 AND
0x112 EQ
0x113 ISZERO
0x114 PUSH2 0x156
0x117 JUMPI
---
0xf0: V91 = 0x1ce
0xf3: V92 = 0x24
0xf5: V93 = 0x4
0xf8: V94 = CALLDATALOAD 0x4
0xfb: V95 = ADD V94 0x24
0xfd: V96 = ADD V94 0x4
0xfe: V97 = CALLDATALOAD V96
0xff: V98 = 0x0
0x102: V99 = S[0x0]
0x103: V100 = 0x1
0x105: V101 = 0xa0
0x107: V102 = 0x2
0x109: V103 = EXP 0x2 0xa0
0x10a: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10d: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x10e: V106 = ORIGIN
0x111: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x112: V108 = EQ V107 V105
0x113: V109 = ISZERO V108
0x114: V110 = 0x156
0x117: JUMPI 0x156 V109
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x1ce, V95, V97, 0x0]
Exit stack: [V7, 0x1ce, V95, V97, 0x0]

================================

Block 0x118
[0x118:0x155]
---
Predecessors: [0xf0]
Successors: [0x156]
---
0x118 PUSH1 0x1
0x11a PUSH1 0x0
0x11c POP
0x11d DUP4
0x11e DUP4
0x11f PUSH1 0x40
0x121 MLOAD
0x122 DUP1
0x123 DUP4
0x124 DUP4
0x125 DUP1
0x126 DUP3
0x127 DUP5
0x128 CALLDATACOPY
0x129 DUP3
0x12a ADD
0x12b SWAP2
0x12c POP
0x12d POP
0x12e SWAP3
0x12f POP
0x130 POP
0x131 POP
0x132 SWAP1
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x20
0x137 ADD
0x138 PUSH1 0x40
0x13a MLOAD
0x13b DUP1
0x13c SWAP2
0x13d SUB
0x13e SWAP1
0x13f SHA3
0x140 PUSH1 0x0
0x142 SWAP1
0x143 SLOAD
0x144 SWAP1
0x145 PUSH2 0x100
0x148 EXP
0x149 SWAP1
0x14a DIV
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 AND
0x154 SWAP1
0x155 POP
---
0x118: V111 = 0x1
0x11a: V112 = 0x0
0x11f: V113 = 0x40
0x121: V114 = M[0x40]
0x128: CALLDATACOPY V114 V95 V97
0x12a: V115 = ADD V114 V97
0x134: M[V115] = 0x1
0x135: V116 = 0x20
0x137: V117 = ADD 0x20 V115
0x138: V118 = 0x40
0x13a: V119 = M[0x40]
0x13d: V120 = SUB V117 V119
0x13f: V121 = SHA3 V119 V120
0x140: V122 = 0x0
0x143: V123 = S[V121]
0x145: V124 = 0x100
0x148: V125 = EXP 0x100 0x0
0x14a: V126 = DIV V123 0x1
0x14b: V127 = 0x1
0x14d: V128 = 0xa0
0x14f: V129 = 0x2
0x151: V130 = EXP 0x2 0xa0
0x152: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x153: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
---
Entry stack: [V7, 0x1ce, V95, V97, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V132]
Exit stack: [V7, 0x1ce, V95, V97, V132]

================================

Block 0x156
[0x156:0x15b]
---
Predecessors: [0xf0, 0x118]
Successors: [0x1ce]
---
0x156 JUMPDEST
0x157 SWAP3
0x158 SWAP2
0x159 POP
0x15a POP
0x15b JUMP
---
0x156: JUMPDEST 
0x15b: JUMP 0x1ce
---
Entry stack: [V7, 0x1ce, V95, V97, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V7, S0]

================================

Block 0x15c
[0x15c:0x161]
---
Predecessors: [0x24]
Successors: [0x162]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e PUSH2 0x2
0x161 JUMPI
---
0x15c: JUMPDEST 
0x15d: V133 = CALLVALUE
0x15e: V134 = 0x2
0x161: THROWI V133
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x162
[0x162:0x181]
---
Predecessors: [0x15c]
Successors: [0x182, 0x29e]
---
0x162 PUSH2 0x1eb
0x165 PUSH1 0x4
0x167 CALLDATALOAD
0x168 PUSH1 0x0
0x16a DUP1
0x16b SLOAD
0x16c DUP2
0x16d SWAP1
0x16e ORIGIN
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 SWAP1
0x178 DUP2
0x179 AND
0x17a SWAP2
0x17b AND
0x17c EQ
0x17d ISZERO
0x17e PUSH2 0x29e
0x181 JUMPI
---
0x162: V135 = 0x1eb
0x165: V136 = 0x4
0x167: V137 = CALLDATALOAD 0x4
0x168: V138 = 0x0
0x16b: V139 = S[0x0]
0x16e: V140 = ORIGIN
0x16f: V141 = 0x1
0x171: V142 = 0xa0
0x173: V143 = 0x2
0x175: V144 = EXP 0x2 0xa0
0x176: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x179: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x17b: V147 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V148 = EQ V147 V146
0x17d: V149 = ISZERO V148
0x17e: V150 = 0x29e
0x181: JUMPI 0x29e V149
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x1eb, V137, 0x0, 0x0]
Exit stack: [V7, 0x1eb, V137, 0x0, 0x0]

================================

Block 0x182
[0x182:0x184]
---
Predecessors: [0x162]
Successors: [0x185]
---
0x182 POP
0x183 PUSH1 0x0
---
0x183: V151 = 0x0
---
Entry stack: [V7, 0x1eb, V137, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V7, 0x1eb, V137, 0x0, 0x0]

================================

Block 0x185
[0x185:0x18f]
---
Predecessors: [0x182, 0x2a4]
Successors: [0x190, 0x299]
---
0x185 JUMPDEST
0x186 PUSH1 0x2
0x188 SLOAD
0x189 DUP2
0x18a LT
0x18b ISZERO
0x18c PUSH2 0x299
0x18f JUMPI
---
0x185: JUMPDEST 
0x186: V152 = 0x2
0x188: V153 = S[0x2]
0x18a: V154 = LT S0 V153
0x18b: V155 = ISZERO V154
0x18c: V156 = 0x299
0x18f: JUMPI 0x299 V155
---
Entry stack: [V7, 0x1eb, V137, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x1eb, V137, 0x0, S0]

================================

Block 0x190
[0x190:0x1a8]
---
Predecessors: [0x185]
Successors: [0x1a9]
---
0x190 DUP3
0x191 PUSH1 0x1
0x193 PUSH1 0xa0
0x195 PUSH1 0x2
0x197 EXP
0x198 SUB
0x199 AND
0x19a PUSH1 0x2
0x19c PUSH1 0x0
0x19e POP
0x19f DUP3
0x1a0 DUP2
0x1a1 SLOAD
0x1a2 DUP2
0x1a3 LT
0x1a4 ISZERO
0x1a5 PUSH2 0x2
0x1a8 JUMPI
---
0x191: V157 = 0x1
0x193: V158 = 0xa0
0x195: V159 = 0x2
0x197: V160 = EXP 0x2 0xa0
0x198: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x199: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x19a: V163 = 0x2
0x19c: V164 = 0x0
0x1a1: V165 = S[0x2]
0x1a3: V166 = LT S0 V165
0x1a4: V167 = ISZERO V166
0x1a5: V168 = 0x2
0x1a8: THROWI V167
---
Entry stack: [V7, 0x1eb, V137, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V162, 0x2, S0]
Exit stack: [V7, 0x1eb, V137, 0x0, S0, V162, 0x2, S0]

================================

Block 0x1a9
[0x1a9:0x1c3]
---
Predecessors: [0x190]
Successors: [0x1c4, 0x2a4]
---
0x1a9 PUSH1 0x0
0x1ab SWAP2
0x1ac DUP3
0x1ad MSTORE
0x1ae PUSH1 0x20
0x1b0 SWAP1
0x1b1 SWAP2
0x1b2 SHA3
0x1b3 ADD
0x1b4 SLOAD
0x1b5 PUSH1 0x1
0x1b7 PUSH1 0xa0
0x1b9 PUSH1 0x2
0x1bb EXP
0x1bc SUB
0x1bd AND
0x1be EQ
0x1bf ISZERO
0x1c0 PUSH2 0x2a4
0x1c3 JUMPI
---
0x1a9: V169 = 0x0
0x1ad: M[0x0] = 0x2
0x1ae: V170 = 0x20
0x1b2: V171 = SHA3 0x0 0x20
0x1b3: V172 = ADD V171 S0
0x1b4: V173 = S[V172]
0x1b5: V174 = 0x1
0x1b7: V175 = 0xa0
0x1b9: V176 = 0x2
0x1bb: V177 = EXP 0x2 0xa0
0x1bc: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bd: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x1be: V180 = EQ V179 V162
0x1bf: V181 = ISZERO V180
0x1c0: V182 = 0x2a4
0x1c3: JUMPI 0x2a4 V181
---
Entry stack: [V7, 0x1eb, V137, 0x0, S3, V162, 0x2, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0x1eb, V137, 0x0, S3]

================================

Block 0x1c4
[0x1c4:0x1cb]
---
Predecessors: [0x1a9]
Successors: [0x29e]
---
0x1c4 PUSH1 0x1
0x1c6 SWAP2
0x1c7 POP
0x1c8 PUSH2 0x29e
0x1cb JUMP
---
0x1c4: V183 = 0x1
0x1c8: V184 = 0x29e
0x1cb: JUMP 0x29e
---
Entry stack: [V7, 0x1eb, V137, 0x0, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V7, 0x1eb, V137, 0x1, S0]

================================

Block 0x1cc
[0x1cc:0x1cd]
---
Predecessors: [0x290]
Successors: []
---
0x1cc JUMPDEST
0x1cd STOP
---
0x1cc: JUMPDEST 
0x1cd: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x1ce
[0x1ce:0x1ea]
---
Predecessors: [0x156]
Successors: []
---
0x1ce JUMPDEST
0x1cf PUSH1 0x40
0x1d1 DUP1
0x1d2 MLOAD
0x1d3 PUSH1 0x1
0x1d5 PUSH1 0xa0
0x1d7 PUSH1 0x2
0x1d9 EXP
0x1da SUB
0x1db SWAP3
0x1dc SWAP1
0x1dd SWAP3
0x1de AND
0x1df DUP3
0x1e0 MSTORE
0x1e1 MLOAD
0x1e2 SWAP1
0x1e3 DUP2
0x1e4 SWAP1
0x1e5 SUB
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 SWAP1
0x1ea RETURN
---
0x1ce: JUMPDEST 
0x1cf: V185 = 0x40
0x1d2: V186 = M[0x40]
0x1d3: V187 = 0x1
0x1d5: V188 = 0xa0
0x1d7: V189 = 0x2
0x1d9: V190 = EXP 0x2 0xa0
0x1da: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1de: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1e0: M[V186] = V192
0x1e1: V193 = M[0x40]
0x1e5: V194 = SUB V186 V193
0x1e6: V195 = 0x20
0x1e8: V196 = ADD 0x20 V194
0x1ea: RETURN V193 V196
---
Entry stack: [V7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x1eb
[0x1eb:0x1fe]
---
Predecessors: [0x29e]
Successors: []
---
0x1eb JUMPDEST
0x1ec PUSH1 0x40
0x1ee DUP1
0x1ef MLOAD
0x1f0 SWAP2
0x1f1 ISZERO
0x1f2 ISZERO
0x1f3 DUP3
0x1f4 MSTORE
0x1f5 MLOAD
0x1f6 SWAP1
0x1f7 DUP2
0x1f8 SWAP1
0x1f9 SUB
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd SWAP1
0x1fe RETURN
---
0x1eb: JUMPDEST 
0x1ec: V197 = 0x40
0x1ef: V198 = M[0x40]
0x1f1: V199 = ISZERO {0x0, 0x1}
0x1f2: V200 = ISZERO V199
0x1f4: M[V198] = V200
0x1f5: V201 = M[0x40]
0x1f9: V202 = SUB V198 V201
0x1fa: V203 = 0x20
0x1fc: V204 = ADD 0x20 V202
0x1fe: RETURN V201 V204
---
Entry stack: [V7, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x1ff
[0x1ff:0x28f]
---
Predecessors: [0x64, 0x295]
Successors: [0x290]
---
0x1ff JUMPDEST
0x200 POP
0x201 POP
0x202 POP
0x203 PUSH1 0x0
0x205 SWAP3
0x206 DUP4
0x207 MSTORE
0x208 POP
0x209 PUSH1 0x20
0x20b SWAP2
0x20c DUP3
0x20d SWAP1
0x20e SHA3
0x20f ADD
0x210 DUP1
0x211 SLOAD
0x212 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x227 NOT
0x228 AND
0x229 DUP4
0x22a OR
0x22b SWAP1
0x22c SSTORE
0x22d PUSH1 0x40
0x22f DUP1
0x230 MLOAD
0x231 PUSH1 0x1
0x233 PUSH1 0xa0
0x235 PUSH1 0x2
0x237 EXP
0x238 SUB
0x239 DUP5
0x23a AND
0x23b SWAP3
0x23c DUP2
0x23d ADD
0x23e SWAP3
0x23f SWAP1
0x240 SWAP3
0x241 MSTORE
0x242 DUP1
0x243 DUP3
0x244 MSTORE
0x245 DUP2
0x246 ADD
0x247 DUP4
0x248 SWAP1
0x249 MSTORE
0x24a PUSH32 0xfb989cb0d132b51483b9258c1befbe92caa5f5b046af3dfdcc617dcf425af493
0x26b SWAP1
0x26c DUP5
0x26d SWAP1
0x26e DUP5
0x26f SWAP1
0x270 DUP5
0x271 SWAP1
0x272 DUP1
0x273 PUSH1 0x60
0x275 DUP2
0x276 ADD
0x277 DUP6
0x278 DUP6
0x279 DUP1
0x27a DUP3
0x27b DUP5
0x27c CALLDATACOPY
0x27d DUP3
0x27e ADD
0x27f SWAP2
0x280 POP
0x281 POP
0x282 SWAP5
0x283 POP
0x284 POP
0x285 POP
0x286 POP
0x287 POP
0x288 PUSH1 0x40
0x28a MLOAD
0x28b DUP1
0x28c SWAP2
0x28d SUB
0x28e SWAP1
0x28f LOG1
---
0x1ff: JUMPDEST 
0x203: V205 = 0x0
0x207: M[0x0] = 0x2
0x209: V206 = 0x20
0x20e: V207 = SHA3 0x0 0x20
0x20f: V208 = ADD V207 V68
0x211: V209 = S[V208]
0x212: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x227: V211 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x228: V212 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V209
0x22a: V213 = OR V27 V212
0x22c: S[V208] = V213
0x22d: V214 = 0x40
0x230: V215 = M[0x40]
0x231: V216 = 0x1
0x233: V217 = 0xa0
0x235: V218 = 0x2
0x237: V219 = EXP 0x2 0xa0
0x238: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23a: V221 = AND V27 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V222 = ADD V215 0x20
0x241: M[V222] = V221
0x244: M[V215] = 0x40
0x246: V223 = ADD V215 0x40
0x249: M[V223] = V26
0x24a: V224 = 0xfb989cb0d132b51483b9258c1befbe92caa5f5b046af3dfdcc617dcf425af493
0x273: V225 = 0x60
0x276: V226 = ADD V215 0x60
0x27c: CALLDATACOPY V226 V24 V26
0x27e: V227 = ADD V226 V26
0x288: V228 = 0x40
0x28a: V229 = M[0x40]
0x28d: V230 = SUB V227 V229
0x28f: LOG V229 V230 0xfb989cb0d132b51483b9258c1befbe92caa5f5b046af3dfdcc617dcf425af493
---
Entry stack: [V7, 0x1cc, V24, V26, V27, 0x2, V68, V70, 0x2, V70, S0]
Stack pops: 9
Stack additions: [S8, S7, S6]
Exit stack: [V7, 0x1cc, V24, V26, V27]

================================

Block 0x290
[0x290:0x294]
---
Predecessors: [0x3a, 0x1ff]
Successors: [0x1cc]
---
0x290 JUMPDEST
0x291 POP
0x292 POP
0x293 POP
0x294 JUMP
---
0x290: JUMPDEST 
0x294: JUMP 0x1cc
---
Entry stack: [V7, 0x1cc, V24, V26, V27]
Stack pops: 4
Stack additions: []
Exit stack: [V7]

================================

Block 0x295
[0x295:0x298]
---
Predecessors: [0xd6]
Successors: [0x1ff]
---
0x295 JUMPDEST
0x296 POP
0x297 SWAP1
0x298 JUMP
---
0x295: JUMPDEST 
0x298: JUMP 0x1ff
---
Entry stack: [V7, 0x1cc, V24, V26, V27, 0x2, V68, V70, 0x2, V70, 0x1ff, V79, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0x1cc, V24, V26, V27, 0x2, V68, V70, 0x2, V70, V79]

================================

Block 0x299
[0x299:0x29d]
---
Predecessors: [0x185]
Successors: [0x29e]
---
0x299 JUMPDEST
0x29a PUSH1 0x0
0x29c SWAP2
0x29d POP
---
0x299: JUMPDEST 
0x29a: V231 = 0x0
---
Entry stack: [V7, 0x1eb, V137, 0x0, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V7, 0x1eb, V137, 0x0, S0]

================================

Block 0x29e
[0x29e:0x2a3]
---
Predecessors: [0x162, 0x1c4, 0x299]
Successors: [0x1eb]
---
0x29e JUMPDEST
0x29f POP
0x2a0 SWAP2
0x2a1 SWAP1
0x2a2 POP
0x2a3 JUMP
---
0x29e: JUMPDEST 
0x2a3: JUMP 0x1eb
---
Entry stack: [V7, 0x1eb, V137, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V7, {0x0, 0x1}]

================================

Block 0x2a4
[0x2a4:0x2ab]
---
Predecessors: [0x1a9]
Successors: [0x185]
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x1
0x2a7 ADD
0x2a8 PUSH2 0x185
0x2ab JUMP
---
0x2a4: JUMPDEST 
0x2a5: V232 = 0x1
0x2a7: V233 = ADD 0x1 S0
0x2a8: V234 = 0x185
0x2ab: JUMP 0x185
---
Entry stack: [V7, 0x1eb, V137, 0x0, S0]
Stack pops: 1
Stack additions: [V233]
Exit stack: [V7, 0x1eb, V137, 0x0, V233]

================================

Function 0:
Public function signature: 0x2bffc7ed
Entry block: 0x34
Exit block: 0x1cc
Body: 0x34, 0x3a, 0x64, 0xc2, 0xd6, 0xdf, 0x1cc, 0x1ff, 0x290, 0x295

Function 1:
Public function signature: 0x4ae9ec30
Entry block: 0xea
Exit block: 0x1ce
Body: 0xea, 0xf0, 0x118, 0x156, 0x1ce

Function 2:
Public function signature: 0x63a9c3d7
Entry block: 0x15c
Exit block: 0x1eb
Body: 0x15c, 0x162, 0x182, 0x185, 0x190, 0x1a9, 0x1c4, 0x1eb, 0x299, 0x29e, 0x2a4

Function 3:
Public fallback function
Entry block: 0x2f
Exit block: 0x2f
Body: 0x2f

