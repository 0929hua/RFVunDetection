Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x31bdec6c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x31bdec6c
0x3b: V13 = EQ V11 0x31bdec6c
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x103]
---
0x40 DUP1
0x41 PUSH4 0x3853682c
0x46 EQ
0x47 PUSH2 0x103
0x4a JUMPI
---
0x41: V15 = 0x3853682c
0x46: V16 = EQ 0x3853682c V11
0x47: V17 = 0x103
0x4a: JUMPI 0x103 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x116]
---
0x4b DUP1
0x4c PUSH4 0x3e3ee859
0x51 EQ
0x52 PUSH2 0x116
0x55 JUMPI
---
0x4c: V18 = 0x3e3ee859
0x51: V19 = EQ 0x3e3ee859 V11
0x52: V20 = 0x116
0x55: JUMPI 0x116 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x164]
---
0x56 DUP1
0x57 PUSH4 0x3fad9ae0
0x5c EQ
0x5d PUSH2 0x164
0x60 JUMPI
---
0x57: V21 = 0x3fad9ae0
0x5c: V22 = EQ 0x3fad9ae0 V11
0x5d: V23 = 0x164
0x60: JUMPI 0x164 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1ee]
---
0x61 DUP1
0x62 PUSH4 0x59988dce
0x67 EQ
0x68 PUSH2 0x1ee
0x6b JUMPI
---
0x62: V24 = 0x59988dce
0x67: V25 = EQ 0x59988dce V11
0x68: V26 = 0x1ee
0x6b: JUMPI 0x1ee V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x21c]
---
0x6c DUP1
0x6d PUSH4 0xf50ab247
0x72 EQ
0x73 PUSH2 0x21c
0x76 JUMPI
---
0x6d: V27 = 0xf50ab247
0x72: V28 = EQ 0xf50ab247 V11
0x73: V29 = 0x21c
0x76: JUMPI 0x21c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x2bc, 0x333, 0x36b, 0x456, 0x524]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]

================================

Block 0x79
[0x79:0x102]
---
Predecessors: [0xd]
Successors: [0x224]
---
0x79 JUMPDEST
0x7a PUSH1 0x40
0x7c DUP1
0x7d MLOAD
0x7e PUSH1 0x20
0x80 PUSH1 0x4
0x82 DUP1
0x83 CALLDATALOAD
0x84 DUP1
0x85 DUP3
0x86 ADD
0x87 CALLDATALOAD
0x88 PUSH1 0x1f
0x8a DUP2
0x8b ADD
0x8c DUP5
0x8d SWAP1
0x8e DIV
0x8f DUP5
0x90 MUL
0x91 DUP6
0x92 ADD
0x93 DUP5
0x94 ADD
0x95 SWAP1
0x96 SWAP6
0x97 MSTORE
0x98 DUP5
0x99 DUP5
0x9a MSTORE
0x9b PUSH2 0x77
0x9e SWAP5
0x9f CALLDATASIZE
0xa0 SWAP5
0xa1 SWAP3
0xa2 SWAP4
0xa3 PUSH1 0x24
0xa5 SWAP4
0xa6 SWAP3
0xa7 DUP5
0xa8 ADD
0xa9 SWAP2
0xaa SWAP1
0xab DUP2
0xac SWAP1
0xad DUP5
0xae ADD
0xaf DUP4
0xb0 DUP3
0xb1 DUP1
0xb2 DUP3
0xb3 DUP5
0xb4 CALLDATACOPY
0xb5 POP
0xb6 POP
0xb7 PUSH1 0x40
0xb9 DUP1
0xba MLOAD
0xbb PUSH1 0x20
0xbd PUSH1 0x1f
0xbf DUP10
0xc0 CALLDATALOAD
0xc1 DUP12
0xc2 ADD
0xc3 DUP1
0xc4 CALLDATALOAD
0xc5 SWAP2
0xc6 DUP3
0xc7 ADD
0xc8 DUP4
0xc9 SWAP1
0xca DIV
0xcb DUP4
0xcc MUL
0xcd DUP5
0xce ADD
0xcf DUP4
0xd0 ADD
0xd1 SWAP1
0xd2 SWAP5
0xd3 MSTORE
0xd4 DUP1
0xd5 DUP4
0xd6 MSTORE
0xd7 SWAP8
0xd8 SWAP11
0xd9 SWAP10
0xda SWAP9
0xdb DUP2
0xdc ADD
0xdd SWAP8
0xde SWAP2
0xdf SWAP7
0xe0 POP
0xe1 SWAP2
0xe2 DUP3
0xe3 ADD
0xe4 SWAP5
0xe5 POP
0xe6 SWAP3
0xe7 POP
0xe8 DUP3
0xe9 SWAP2
0xea POP
0xeb DUP5
0xec ADD
0xed DUP4
0xee DUP3
0xef DUP1
0xf0 DUP3
0xf1 DUP5
0xf2 CALLDATACOPY
0xf3 POP
0xf4 SWAP5
0xf5 SWAP8
0xf6 POP
0xf7 PUSH2 0x224
0xfa SWAP7
0xfb POP
0xfc POP
0xfd POP
0xfe POP
0xff POP
0x100 POP
0x101 POP
0x102 JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x40
0x7d: V31 = M[0x40]
0x7e: V32 = 0x20
0x80: V33 = 0x4
0x83: V34 = CALLDATALOAD 0x4
0x86: V35 = ADD 0x4 V34
0x87: V36 = CALLDATALOAD V35
0x88: V37 = 0x1f
0x8b: V38 = ADD V36 0x1f
0x8e: V39 = DIV V38 0x20
0x90: V40 = MUL 0x20 V39
0x92: V41 = ADD V31 V40
0x94: V42 = ADD 0x20 V41
0x97: M[0x40] = V42
0x9a: M[V31] = V36
0x9b: V43 = 0x77
0x9f: V44 = CALLDATASIZE
0xa3: V45 = 0x24
0xa8: V46 = ADD 0x24 V34
0xae: V47 = ADD V31 0x20
0xb4: CALLDATACOPY V47 V46 V36
0xb7: V48 = 0x40
0xba: V49 = M[0x40]
0xbb: V50 = 0x20
0xbd: V51 = 0x1f
0xc0: V52 = CALLDATALOAD 0x24
0xc2: V53 = ADD 0x4 V52
0xc4: V54 = CALLDATALOAD V53
0xc7: V55 = ADD V54 0x1f
0xca: V56 = DIV V55 0x20
0xcc: V57 = MUL 0x20 V56
0xce: V58 = ADD V49 V57
0xd0: V59 = ADD 0x20 V58
0xd3: M[0x40] = V59
0xd6: M[V49] = V54
0xdc: V60 = ADD 0x20 0x24
0xe3: V61 = ADD 0x20 V53
0xec: V62 = ADD V49 0x20
0xf2: CALLDATACOPY V62 V61 V54
0xf7: V63 = 0x224
0x102: JUMP 0x224
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V31, V49]
Exit stack: [V11, 0x77, V31, V49]

================================

Block 0x103
[0x103:0x115]
---
Predecessors: [0x40]
Successors: [0x2c0]
---
0x103 JUMPDEST
0x104 PUSH2 0x77
0x107 PUSH1 0x4
0x109 DUP1
0x10a CALLDATALOAD
0x10b PUSH1 0x24
0x10d DUP2
0x10e ADD
0x10f SWAP2
0x110 ADD
0x111 CALLDATALOAD
0x112 PUSH2 0x2c0
0x115 JUMP
---
0x103: JUMPDEST 
0x104: V64 = 0x77
0x107: V65 = 0x4
0x10a: V66 = CALLDATALOAD 0x4
0x10b: V67 = 0x24
0x10e: V68 = ADD V66 0x24
0x110: V69 = ADD 0x4 V66
0x111: V70 = CALLDATALOAD V69
0x112: V71 = 0x2c0
0x115: JUMP 0x2c0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V68, V70]
Exit stack: [V11, 0x77, V68, V70]

================================

Block 0x116
[0x116:0x163]
---
Predecessors: [0x4b]
Successors: [0x338]
---
0x116 JUMPDEST
0x117 PUSH1 0x40
0x119 DUP1
0x11a MLOAD
0x11b PUSH1 0x20
0x11d PUSH1 0x4
0x11f DUP1
0x120 CALLDATALOAD
0x121 DUP1
0x122 DUP3
0x123 ADD
0x124 CALLDATALOAD
0x125 PUSH1 0x1f
0x127 DUP2
0x128 ADD
0x129 DUP5
0x12a SWAP1
0x12b DIV
0x12c DUP5
0x12d MUL
0x12e DUP6
0x12f ADD
0x130 DUP5
0x131 ADD
0x132 SWAP1
0x133 SWAP6
0x134 MSTORE
0x135 DUP5
0x136 DUP5
0x137 MSTORE
0x138 PUSH2 0x77
0x13b SWAP5
0x13c CALLDATASIZE
0x13d SWAP5
0x13e SWAP3
0x13f SWAP4
0x140 PUSH1 0x24
0x142 SWAP4
0x143 SWAP3
0x144 DUP5
0x145 ADD
0x146 SWAP2
0x147 SWAP1
0x148 DUP2
0x149 SWAP1
0x14a DUP5
0x14b ADD
0x14c DUP4
0x14d DUP3
0x14e DUP1
0x14f DUP3
0x150 DUP5
0x151 CALLDATACOPY
0x152 POP
0x153 SWAP5
0x154 SWAP8
0x155 POP
0x156 POP
0x157 SWAP4
0x158 CALLDATALOAD
0x159 SWAP5
0x15a POP
0x15b PUSH2 0x338
0x15e SWAP4
0x15f POP
0x160 POP
0x161 POP
0x162 POP
0x163 JUMP
---
0x116: JUMPDEST 
0x117: V72 = 0x40
0x11a: V73 = M[0x40]
0x11b: V74 = 0x20
0x11d: V75 = 0x4
0x120: V76 = CALLDATALOAD 0x4
0x123: V77 = ADD 0x4 V76
0x124: V78 = CALLDATALOAD V77
0x125: V79 = 0x1f
0x128: V80 = ADD V78 0x1f
0x12b: V81 = DIV V80 0x20
0x12d: V82 = MUL 0x20 V81
0x12f: V83 = ADD V73 V82
0x131: V84 = ADD 0x20 V83
0x134: M[0x40] = V84
0x137: M[V73] = V78
0x138: V85 = 0x77
0x13c: V86 = CALLDATASIZE
0x140: V87 = 0x24
0x145: V88 = ADD 0x24 V76
0x14b: V89 = ADD V73 0x20
0x151: CALLDATACOPY V89 V88 V78
0x158: V90 = CALLDATALOAD 0x24
0x15b: V91 = 0x338
0x163: JUMP 0x338
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V73, V90]
Exit stack: [V11, 0x77, V73, V90]

================================

Block 0x164
[0x164:0x16b]
---
Predecessors: [0x56]
Successors: [0x16c, 0x170]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 DUP1
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x164: JUMPDEST 
0x165: V92 = CALLVALUE
0x167: V93 = ISZERO V92
0x168: V94 = 0x170
0x16b: JUMPI 0x170 V93
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V92]
Exit stack: [V11, V92]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x164]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V95 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V11, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V92]

================================

Block 0x170
[0x170:0x178]
---
Predecessors: [0x164]
Successors: [0x372]
---
0x170 JUMPDEST
0x171 POP
0x172 PUSH2 0x179
0x175 PUSH2 0x372
0x178 JUMP
---
0x170: JUMPDEST 
0x172: V96 = 0x179
0x175: V97 = 0x372
0x178: JUMP 0x372
---
Entry stack: [V11, V92]
Stack pops: 1
Stack additions: [0x179]
Exit stack: [V11, 0x179]

================================

Block 0x179
[0x179:0x19a]
---
Predecessors: [0x3f8]
Successors: [0x19b]
---
0x179 JUMPDEST
0x17a PUSH1 0x40
0x17c DUP1
0x17d MLOAD
0x17e PUSH1 0x20
0x180 DUP1
0x181 DUP3
0x182 MSTORE
0x183 DUP4
0x184 MLOAD
0x185 DUP2
0x186 DUP4
0x187 ADD
0x188 MSTORE
0x189 DUP4
0x18a MLOAD
0x18b SWAP2
0x18c SWAP3
0x18d DUP4
0x18e SWAP3
0x18f SWAP1
0x190 DUP4
0x191 ADD
0x192 SWAP2
0x193 DUP6
0x194 ADD
0x195 SWAP1
0x196 DUP1
0x197 DUP4
0x198 DUP4
0x199 PUSH1 0x0
---
0x179: JUMPDEST 
0x17a: V98 = 0x40
0x17d: V99 = M[0x40]
0x17e: V100 = 0x20
0x182: M[V99] = 0x20
0x184: V101 = M[V257]
0x187: V102 = ADD V99 0x20
0x188: M[V102] = V101
0x18a: V103 = M[V257]
0x191: V104 = ADD V99 0x40
0x194: V105 = ADD V257 0x20
0x199: V106 = 0x0
---
Entry stack: [V11, 0x179, V257]
Stack pops: 1
Stack additions: [S0, V99, V99, V104, V105, V103, V103, V104, V105, 0x0]
Exit stack: [V11, 0x179, V257, V99, V99, V104, V105, V103, V103, V104, V105, 0x0]

================================

Block 0x19b
[0x19b:0x1a3]
---
Predecessors: [0x179, 0x1a4]
Successors: [0x1a4, 0x1b3]
---
0x19b JUMPDEST
0x19c DUP4
0x19d DUP2
0x19e LT
0x19f ISZERO
0x1a0 PUSH2 0x1b3
0x1a3 JUMPI
---
0x19b: JUMPDEST 
0x19e: V107 = LT S0 V103
0x19f: V108 = ISZERO V107
0x1a0: V109 = 0x1b3
0x1a3: JUMPI 0x1b3 V108
---
Entry stack: [V11, 0x179, V257, V99, V99, V104, V105, V103, V103, V104, V105, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x179, V257, V99, V99, V104, V105, V103, V103, V104, V105, S0]

================================

Block 0x1a4
[0x1a4:0x1b2]
---
Predecessors: [0x19b]
Successors: [0x19b]
---
0x1a4 DUP2
0x1a5 DUP2
0x1a6 ADD
0x1a7 MLOAD
0x1a8 DUP4
0x1a9 DUP3
0x1aa ADD
0x1ab MSTORE
0x1ac PUSH1 0x20
0x1ae ADD
0x1af PUSH2 0x19b
0x1b2 JUMP
---
0x1a6: V110 = ADD S0 V105
0x1a7: V111 = M[V110]
0x1aa: V112 = ADD S0 V104
0x1ab: M[V112] = V111
0x1ac: V113 = 0x20
0x1ae: V114 = ADD 0x20 S0
0x1af: V115 = 0x19b
0x1b2: JUMP 0x19b
---
Entry stack: [V11, 0x179, V257, V99, V99, V104, V105, V103, V103, V104, V105, S0]
Stack pops: 3
Stack additions: [S2, S1, V114]
Exit stack: [V11, 0x179, V257, V99, V99, V104, V105, V103, V103, V104, V105, V114]

================================

Block 0x1b3
[0x1b3:0x1c6]
---
Predecessors: [0x19b]
Successors: [0x1c7, 0x1e0]
---
0x1b3 JUMPDEST
0x1b4 POP
0x1b5 POP
0x1b6 POP
0x1b7 POP
0x1b8 SWAP1
0x1b9 POP
0x1ba SWAP1
0x1bb DUP2
0x1bc ADD
0x1bd SWAP1
0x1be PUSH1 0x1f
0x1c0 AND
0x1c1 DUP1
0x1c2 ISZERO
0x1c3 PUSH2 0x1e0
0x1c6 JUMPI
---
0x1b3: JUMPDEST 
0x1bc: V116 = ADD V103 V104
0x1be: V117 = 0x1f
0x1c0: V118 = AND 0x1f V103
0x1c2: V119 = ISZERO V118
0x1c3: V120 = 0x1e0
0x1c6: JUMPI 0x1e0 V119
---
Entry stack: [V11, 0x179, V257, V99, V99, V104, V105, V103, V103, V104, V105, S0]
Stack pops: 7
Stack additions: [V116, V118]
Exit stack: [V11, 0x179, V257, V99, V99, V116, V118]

================================

Block 0x1c7
[0x1c7:0x1df]
---
Predecessors: [0x1b3]
Successors: [0x1e0]
---
0x1c7 DUP1
0x1c8 DUP3
0x1c9 SUB
0x1ca DUP1
0x1cb MLOAD
0x1cc PUSH1 0x1
0x1ce DUP4
0x1cf PUSH1 0x20
0x1d1 SUB
0x1d2 PUSH2 0x100
0x1d5 EXP
0x1d6 SUB
0x1d7 NOT
0x1d8 AND
0x1d9 DUP2
0x1da MSTORE
0x1db PUSH1 0x20
0x1dd ADD
0x1de SWAP2
0x1df POP
---
0x1c9: V121 = SUB V116 V118
0x1cb: V122 = M[V121]
0x1cc: V123 = 0x1
0x1cf: V124 = 0x20
0x1d1: V125 = SUB 0x20 V118
0x1d2: V126 = 0x100
0x1d5: V127 = EXP 0x100 V125
0x1d6: V128 = SUB V127 0x1
0x1d7: V129 = NOT V128
0x1d8: V130 = AND V129 V122
0x1da: M[V121] = V130
0x1db: V131 = 0x20
0x1dd: V132 = ADD 0x20 V121
---
Entry stack: [V11, 0x179, V257, V99, V99, V116, V118]
Stack pops: 2
Stack additions: [V132, S0]
Exit stack: [V11, 0x179, V257, V99, V99, V132, V118]

================================

Block 0x1e0
[0x1e0:0x1ed]
---
Predecessors: [0x1b3, 0x1c7]
Successors: []
---
0x1e0 JUMPDEST
0x1e1 POP
0x1e2 SWAP3
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 PUSH1 0x40
0x1e8 MLOAD
0x1e9 DUP1
0x1ea SWAP2
0x1eb SUB
0x1ec SWAP1
0x1ed RETURN
---
0x1e0: JUMPDEST 
0x1e6: V133 = 0x40
0x1e8: V134 = M[0x40]
0x1eb: V135 = SUB S1 V134
0x1ed: RETURN V134 V135
---
Entry stack: [V11, 0x179, V257, V99, V99, S1, V118]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x179]

================================

Block 0x1ee
[0x1ee:0x1f5]
---
Predecessors: [0x61]
Successors: [0x1f6, 0x1fa]
---
0x1ee JUMPDEST
0x1ef CALLVALUE
0x1f0 DUP1
0x1f1 ISZERO
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V136 = CALLVALUE
0x1f1: V137 = ISZERO V136
0x1f2: V138 = 0x1fa
0x1f5: JUMPI 0x1fa V137
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V136]
Exit stack: [V11, V136]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x1ee]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V139 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V11, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V136]

================================

Block 0x1fa
[0x1fa:0x21b]
---
Predecessors: [0x1ee]
Successors: [0x400]
---
0x1fa JUMPDEST
0x1fb POP
0x1fc PUSH2 0x77
0x1ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x214 PUSH1 0x4
0x216 CALLDATALOAD
0x217 AND
0x218 PUSH2 0x400
0x21b JUMP
---
0x1fa: JUMPDEST 
0x1fc: V140 = 0x77
0x1ff: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x214: V142 = 0x4
0x216: V143 = CALLDATALOAD 0x4
0x217: V144 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x218: V145 = 0x400
0x21b: JUMP 0x400
---
Entry stack: [V11, V136]
Stack pops: 1
Stack additions: [0x77, V144]
Exit stack: [V11, 0x77, V144]

================================

Block 0x21c
[0x21c:0x223]
---
Predecessors: [0x6c]
Successors: [0x459]
---
0x21c JUMPDEST
0x21d PUSH2 0x77
0x220 PUSH2 0x459
0x223 JUMP
---
0x21c: JUMPDEST 
0x21d: V146 = 0x77
0x220: V147 = 0x459
0x223: JUMP 0x459
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x224
[0x224:0x22d]
---
Predecessors: [0x79]
Successors: [0x22e, 0x2bc]
---
0x224 JUMPDEST
0x225 PUSH1 0x2
0x227 SLOAD
0x228 ISZERO
0x229 ISZERO
0x22a PUSH2 0x2bc
0x22d JUMPI
---
0x224: JUMPDEST 
0x225: V148 = 0x2
0x227: V149 = S[0x2]
0x228: V150 = ISZERO V149
0x229: V151 = ISZERO V150
0x22a: V152 = 0x2bc
0x22d: JUMPI 0x2bc V151
---
Entry stack: [V11, 0x77, V31, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V31, V49]

================================

Block 0x22e
[0x22e:0x23d]
---
Predecessors: [0x224]
Successors: [0x23e]
---
0x22e DUP1
0x22f PUSH1 0x40
0x231 MLOAD
0x232 DUP1
0x233 DUP3
0x234 DUP1
0x235 MLOAD
0x236 SWAP1
0x237 PUSH1 0x20
0x239 ADD
0x23a SWAP1
0x23b DUP1
0x23c DUP4
0x23d DUP4
---
0x22f: V153 = 0x40
0x231: V154 = M[0x40]
0x235: V155 = M[V49]
0x237: V156 = 0x20
0x239: V157 = ADD 0x20 V49
---
Entry stack: [V11, 0x77, V31, V49]
Stack pops: 1
Stack additions: [S0, S0, V154, V154, V157, V155, V155, V154, V157]
Exit stack: [V11, 0x77, V31, V49, V49, V154, V154, V157, V155, V155, V154, V157]

================================

Block 0x23e
[0x23e:0x246]
---
Predecessors: [0x22e, 0x247]
Successors: [0x247, 0x25d]
---
0x23e JUMPDEST
0x23f PUSH1 0x20
0x241 DUP4
0x242 LT
0x243 PUSH2 0x25d
0x246 JUMPI
---
0x23e: JUMPDEST 
0x23f: V158 = 0x20
0x242: V159 = LT S2 0x20
0x243: V160 = 0x25d
0x246: JUMPI 0x25d V159
---
Entry stack: [V11, 0x77, V31, V49, V49, V154, V154, V157, V155, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V31, V49, V49, V154, V154, V157, V155, S2, S1, S0]

================================

Block 0x247
[0x247:0x25c]
---
Predecessors: [0x23e]
Successors: [0x23e]
---
0x247 DUP1
0x248 MLOAD
0x249 DUP3
0x24a MSTORE
0x24b PUSH1 0x1f
0x24d NOT
0x24e SWAP1
0x24f SWAP3
0x250 ADD
0x251 SWAP2
0x252 PUSH1 0x20
0x254 SWAP2
0x255 DUP3
0x256 ADD
0x257 SWAP2
0x258 ADD
0x259 PUSH2 0x23e
0x25c JUMP
---
0x248: V161 = M[S0]
0x24a: M[S1] = V161
0x24b: V162 = 0x1f
0x24d: V163 = NOT 0x1f
0x250: V164 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x252: V165 = 0x20
0x256: V166 = ADD 0x20 S1
0x258: V167 = ADD 0x20 S0
0x259: V168 = 0x23e
0x25c: JUMP 0x23e
---
Entry stack: [V11, 0x77, V31, V49, V49, V154, V154, V157, V155, S2, S1, S0]
Stack pops: 3
Stack additions: [V164, V166, V167]
Exit stack: [V11, 0x77, V31, V49, V49, V154, V154, V157, V155, V164, V166, V167]

================================

Block 0x25d
[0x25d:0x29a]
---
Predecessors: [0x23e]
Successors: [0x4aa]
---
0x25d JUMPDEST
0x25e MLOAD
0x25f DUP2
0x260 MLOAD
0x261 PUSH1 0x20
0x263 SWAP4
0x264 DUP5
0x265 SUB
0x266 PUSH2 0x100
0x269 EXP
0x26a PUSH1 0x0
0x26c NOT
0x26d ADD
0x26e DUP1
0x26f NOT
0x270 SWAP1
0x271 SWAP3
0x272 AND
0x273 SWAP2
0x274 AND
0x275 OR
0x276 SWAP1
0x277 MSTORE
0x278 PUSH1 0x40
0x27a MLOAD
0x27b SWAP2
0x27c SWAP1
0x27d SWAP4
0x27e ADD
0x27f DUP2
0x280 SWAP1
0x281 SUB
0x282 SWAP1
0x283 SHA3
0x284 PUSH1 0x2
0x286 SSTORE
0x287 POP
0x288 DUP5
0x289 MLOAD
0x28a PUSH2 0x29b
0x28d SWAP4
0x28e POP
0x28f PUSH1 0x0
0x291 SWAP3
0x292 POP
0x293 SWAP1
0x294 DUP6
0x295 ADD
0x296 SWAP1
0x297 PUSH2 0x4aa
0x29a JUMP
---
0x25d: JUMPDEST 
0x25e: V169 = M[S0]
0x260: V170 = M[S1]
0x261: V171 = 0x20
0x265: V172 = SUB 0x20 S2
0x266: V173 = 0x100
0x269: V174 = EXP 0x100 V172
0x26a: V175 = 0x0
0x26c: V176 = NOT 0x0
0x26d: V177 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V174
0x26f: V178 = NOT V177
0x272: V179 = AND V169 V178
0x274: V180 = AND V177 V170
0x275: V181 = OR V180 V179
0x277: M[S1] = V181
0x278: V182 = 0x40
0x27a: V183 = M[0x40]
0x27e: V184 = ADD V154 V155
0x281: V185 = SUB V184 V183
0x283: V186 = SHA3 V183 V185
0x284: V187 = 0x2
0x286: S[0x2] = V186
0x289: V188 = M[V31]
0x28a: V189 = 0x29b
0x28f: V190 = 0x0
0x295: V191 = ADD V31 0x20
0x297: V192 = 0x4aa
0x29a: JUMP 0x4aa
---
Entry stack: [V11, 0x77, V31, V49, V49, V154, V154, V157, V155, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x29b, 0x0, V191, V188]
Exit stack: [V11, 0x77, V31, V49, 0x29b, 0x0, V191, V188]

================================

Block 0x29b
[0x29b:0x2bb]
---
Predecessors: [0x2bc, 0x36b, 0x524]
Successors: [0x2bc]
---
0x29b JUMPDEST
0x29c POP
0x29d PUSH1 0x1
0x29f DUP1
0x2a0 SLOAD
0x2a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b6 NOT
0x2b7 AND
0x2b8 CALLER
0x2b9 OR
0x2ba SWAP1
0x2bb SSTORE
---
0x29b: JUMPDEST 
0x29d: V193 = 0x1
0x2a0: V194 = S[0x1]
0x2a1: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: V196 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V197 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V194
0x2b8: V198 = CALLER
0x2b9: V199 = OR V198 V197
0x2bb: S[0x1] = V199
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, S5, S4, S3, S2, S1]

================================

Block 0x2bc
[0x2bc:0x2bf]
---
Predecessors: [0x224, 0x29b, 0x301, 0x338]
Successors: [0x77, 0x29b, 0x36b]
---
0x2bc JUMPDEST
0x2bd POP
0x2be POP
0x2bf JUMP
---
0x2bc: JUMPDEST 
0x2bf: JUMP S2
---
Entry stack: [V11, 0x77, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x77, S4, S3]

================================

Block 0x2c0
[0x2c0:0x2c7]
---
Predecessors: [0x103]
Successors: [0x2c8, 0x2cc]
---
0x2c0 JUMPDEST
0x2c1 CALLER
0x2c2 ORIGIN
0x2c3 EQ
0x2c4 PUSH2 0x2cc
0x2c7 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V200 = CALLER
0x2c2: V201 = ORIGIN
0x2c3: V202 = EQ V201 V200
0x2c4: V203 = 0x2cc
0x2c7: JUMPI 0x2cc V202
---
Entry stack: [V11, 0x77, V68, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V68, V70]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2c0]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V204 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V68, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V68, V70]

================================

Block 0x2cc
[0x2cc:0x2f4]
---
Predecessors: [0x2c0]
Successors: [0x2f5, 0x301]
---
0x2cc JUMPDEST
0x2cd DUP2
0x2ce DUP2
0x2cf PUSH1 0x40
0x2d1 MLOAD
0x2d2 DUP1
0x2d3 DUP4
0x2d4 DUP4
0x2d5 DUP1
0x2d6 DUP3
0x2d7 DUP5
0x2d8 CALLDATACOPY
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc SWAP3
0x2dd ADD
0x2de DUP3
0x2df SWAP1
0x2e0 SUB
0x2e1 SWAP1
0x2e2 SWAP2
0x2e3 SHA3
0x2e4 PUSH1 0x2
0x2e6 SLOAD
0x2e7 EQ
0x2e8 SWAP4
0x2e9 POP
0x2ea POP
0x2eb DUP3
0x2ec ISZERO
0x2ed SWAP2
0x2ee POP
0x2ef PUSH2 0x301
0x2f2 SWAP1
0x2f3 POP
0x2f4 JUMPI
---
0x2cc: JUMPDEST 
0x2cf: V205 = 0x40
0x2d1: V206 = M[0x40]
0x2d8: CALLDATACOPY V206 V68 V70
0x2d9: V207 = 0x40
0x2db: V208 = M[0x40]
0x2dd: V209 = ADD V206 V70
0x2e0: V210 = SUB V209 V208
0x2e3: V211 = SHA3 V208 V210
0x2e4: V212 = 0x2
0x2e6: V213 = S[0x2]
0x2e7: V214 = EQ V213 V211
0x2ec: V215 = ISZERO V214
0x2ef: V216 = 0x301
0x2f4: JUMPI 0x301 V215
---
Entry stack: [V11, 0x77, V68, V70]
Stack pops: 2
Stack additions: [S1, S0, V214]
Exit stack: [V11, 0x77, V68, V70, V214]

================================

Block 0x2f5
[0x2f5:0x300]
---
Predecessors: [0x2cc]
Successors: [0x301]
---
0x2f5 POP
0x2f6 PUSH8 0x29a2241af62c0000
0x2ff CALLVALUE
0x300 GT
---
0x2f6: V217 = 0x29a2241af62c0000
0x2ff: V218 = CALLVALUE
0x300: V219 = GT V218 0x29a2241af62c0000
---
Entry stack: [V11, 0x77, V68, V70, V214]
Stack pops: 1
Stack additions: [V219]
Exit stack: [V11, 0x77, V68, V70, V219]

================================

Block 0x301
[0x301:0x306]
---
Predecessors: [0x2cc, 0x2f5]
Successors: [0x2bc, 0x307]
---
0x301 JUMPDEST
0x302 ISZERO
0x303 PUSH2 0x2bc
0x306 JUMPI
---
0x301: JUMPDEST 
0x302: V220 = ISZERO S0
0x303: V221 = 0x2bc
0x306: JUMPI 0x2bc V220
---
Entry stack: [V11, 0x77, V68, V70, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V68, V70]

================================

Block 0x307
[0x307:0x329]
---
Predecessors: [0x301]
Successors: [0x32a, 0x333]
---
0x307 PUSH1 0x40
0x309 MLOAD
0x30a CALLER
0x30b SWAP1
0x30c ADDRESS
0x30d BALANCE
0x30e DUP1
0x30f ISZERO
0x310 PUSH2 0x8fc
0x313 MUL
0x314 SWAP2
0x315 PUSH1 0x0
0x317 DUP2
0x318 DUP2
0x319 DUP2
0x31a DUP6
0x31b DUP9
0x31c DUP9
0x31d CALL
0x31e SWAP4
0x31f POP
0x320 POP
0x321 POP
0x322 POP
0x323 ISZERO
0x324 DUP1
0x325 ISZERO
0x326 PUSH2 0x333
0x329 JUMPI
---
0x307: V222 = 0x40
0x309: V223 = M[0x40]
0x30a: V224 = CALLER
0x30c: V225 = ADDRESS
0x30d: V226 = BALANCE V225
0x30f: V227 = ISZERO V226
0x310: V228 = 0x8fc
0x313: V229 = MUL 0x8fc V227
0x315: V230 = 0x0
0x31d: V231 = CALL V229 V224 V226 V223 0x0 V223 0x0
0x323: V232 = ISZERO V231
0x325: V233 = ISZERO V232
0x326: V234 = 0x333
0x329: JUMPI 0x333 V233
---
Entry stack: [V11, 0x77, V68, V70]
Stack pops: 0
Stack additions: [V232]
Exit stack: [V11, 0x77, V68, V70, V232]

================================

Block 0x32a
[0x32a:0x332]
---
Predecessors: [0x307]
Successors: []
---
0x32a RETURNDATASIZE
0x32b PUSH1 0x0
0x32d DUP1
0x32e RETURNDATACOPY
0x32f RETURNDATASIZE
0x330 PUSH1 0x0
0x332 REVERT
---
0x32a: V235 = RETURNDATASIZE
0x32b: V236 = 0x0
0x32e: RETURNDATACOPY 0x0 0x0 V235
0x32f: V237 = RETURNDATASIZE
0x330: V238 = 0x0
0x332: REVERT 0x0 V237
---
Entry stack: [V11, 0x77, V68, V70, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V68, V70, V232]

================================

Block 0x333
[0x333:0x337]
---
Predecessors: [0x307]
Successors: [0x77]
---
0x333 JUMPDEST
0x334 POP
0x335 POP
0x336 POP
0x337 JUMP
---
0x333: JUMPDEST 
0x337: JUMP 0x77
---
Entry stack: [V11, 0x77, V68, V70, V232]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x338
[0x338:0x358]
---
Predecessors: [0x116]
Successors: [0x2bc, 0x359]
---
0x338 JUMPDEST
0x339 PUSH1 0x1
0x33b SLOAD
0x33c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x351 AND
0x352 CALLER
0x353 EQ
0x354 ISZERO
0x355 PUSH2 0x2bc
0x358 JUMPI
---
0x338: JUMPDEST 
0x339: V239 = 0x1
0x33b: V240 = S[0x1]
0x33c: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x351: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x352: V243 = CALLER
0x353: V244 = EQ V243 V242
0x354: V245 = ISZERO V244
0x355: V246 = 0x2bc
0x358: JUMPI 0x2bc V245
---
Entry stack: [V11, 0x77, V73, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V73, V90]

================================

Block 0x359
[0x359:0x36a]
---
Predecessors: [0x338]
Successors: [0x4aa]
---
0x359 DUP2
0x35a MLOAD
0x35b PUSH2 0x36b
0x35e SWAP1
0x35f PUSH1 0x0
0x361 SWAP1
0x362 PUSH1 0x20
0x364 DUP6
0x365 ADD
0x366 SWAP1
0x367 PUSH2 0x4aa
0x36a JUMP
---
0x35a: V247 = M[V73]
0x35b: V248 = 0x36b
0x35f: V249 = 0x0
0x362: V250 = 0x20
0x365: V251 = ADD V73 0x20
0x367: V252 = 0x4aa
0x36a: JUMP 0x4aa
---
Entry stack: [V11, 0x77, V73, V90]
Stack pops: 2
Stack additions: [S1, S0, 0x36b, 0x0, V251, V247]
Exit stack: [V11, 0x77, V73, V90, 0x36b, 0x0, V251, V247]

================================

Block 0x36b
[0x36b:0x371]
---
Predecessors: [0x2bc, 0x36b, 0x524]
Successors: [0x77, 0x29b, 0x36b]
---
0x36b JUMPDEST
0x36c POP
0x36d PUSH1 0x2
0x36f SSTORE
0x370 POP
0x371 JUMP
---
0x36b: JUMPDEST 
0x36d: V253 = 0x2
0x36f: S[0x2] = S1
0x371: JUMP S3
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, S5, S4]

================================

Block 0x372
[0x372:0x3b1]
---
Predecessors: [0x170]
Successors: [0x3b2, 0x3f8]
---
0x372 JUMPDEST
0x373 PUSH1 0x0
0x375 DUP1
0x376 SLOAD
0x377 PUSH1 0x40
0x379 DUP1
0x37a MLOAD
0x37b PUSH1 0x20
0x37d PUSH1 0x2
0x37f PUSH1 0x1
0x381 DUP6
0x382 AND
0x383 ISZERO
0x384 PUSH2 0x100
0x387 MUL
0x388 PUSH1 0x0
0x38a NOT
0x38b ADD
0x38c SWAP1
0x38d SWAP5
0x38e AND
0x38f SWAP4
0x390 SWAP1
0x391 SWAP4
0x392 DIV
0x393 PUSH1 0x1f
0x395 DUP2
0x396 ADD
0x397 DUP5
0x398 SWAP1
0x399 DIV
0x39a DUP5
0x39b MUL
0x39c DUP3
0x39d ADD
0x39e DUP5
0x39f ADD
0x3a0 SWAP1
0x3a1 SWAP3
0x3a2 MSTORE
0x3a3 DUP2
0x3a4 DUP2
0x3a5 MSTORE
0x3a6 SWAP3
0x3a7 SWAP2
0x3a8 DUP4
0x3a9 ADD
0x3aa DUP3
0x3ab DUP3
0x3ac DUP1
0x3ad ISZERO
0x3ae PUSH2 0x3f8
0x3b1 JUMPI
---
0x372: JUMPDEST 
0x373: V254 = 0x0
0x376: V255 = S[0x0]
0x377: V256 = 0x40
0x37a: V257 = M[0x40]
0x37b: V258 = 0x20
0x37d: V259 = 0x2
0x37f: V260 = 0x1
0x382: V261 = AND V255 0x1
0x383: V262 = ISZERO V261
0x384: V263 = 0x100
0x387: V264 = MUL 0x100 V262
0x388: V265 = 0x0
0x38a: V266 = NOT 0x0
0x38b: V267 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V264
0x38e: V268 = AND V255 V267
0x392: V269 = DIV V268 0x2
0x393: V270 = 0x1f
0x396: V271 = ADD V269 0x1f
0x399: V272 = DIV V271 0x20
0x39b: V273 = MUL 0x20 V272
0x39d: V274 = ADD V257 V273
0x39f: V275 = ADD 0x20 V274
0x3a2: M[0x40] = V275
0x3a5: M[V257] = V269
0x3a9: V276 = ADD V257 0x20
0x3ad: V277 = ISZERO V269
0x3ae: V278 = 0x3f8
0x3b1: JUMPI 0x3f8 V277
---
Entry stack: [V11, 0x179]
Stack pops: 0
Stack additions: [V257, 0x0, V269, V276, 0x0, V269]
Exit stack: [V11, 0x179, V257, 0x0, V269, V276, 0x0, V269]

================================

Block 0x3b2
[0x3b2:0x3b9]
---
Predecessors: [0x372]
Successors: [0x3ba, 0x3cd]
---
0x3b2 DUP1
0x3b3 PUSH1 0x1f
0x3b5 LT
0x3b6 PUSH2 0x3cd
0x3b9 JUMPI
---
0x3b3: V279 = 0x1f
0x3b5: V280 = LT 0x1f V269
0x3b6: V281 = 0x3cd
0x3b9: JUMPI 0x3cd V280
---
Entry stack: [V11, 0x179, V257, 0x0, V269, V276, 0x0, V269]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x179, V257, 0x0, V269, V276, 0x0, V269]

================================

Block 0x3ba
[0x3ba:0x3cc]
---
Predecessors: [0x3b2]
Successors: [0x3f8]
---
0x3ba PUSH2 0x100
0x3bd DUP1
0x3be DUP4
0x3bf SLOAD
0x3c0 DIV
0x3c1 MUL
0x3c2 DUP4
0x3c3 MSTORE
0x3c4 SWAP2
0x3c5 PUSH1 0x20
0x3c7 ADD
0x3c8 SWAP2
0x3c9 PUSH2 0x3f8
0x3cc JUMP
---
0x3ba: V282 = 0x100
0x3bf: V283 = S[0x0]
0x3c0: V284 = DIV V283 0x100
0x3c1: V285 = MUL V284 0x100
0x3c3: M[V276] = V285
0x3c5: V286 = 0x20
0x3c7: V287 = ADD 0x20 V276
0x3c9: V288 = 0x3f8
0x3cc: JUMP 0x3f8
---
Entry stack: [V11, 0x179, V257, 0x0, V269, V276, 0x0, V269]
Stack pops: 3
Stack additions: [V287, S1, S0]
Exit stack: [V11, 0x179, V257, 0x0, V269, V287, 0x0, V269]

================================

Block 0x3cd
[0x3cd:0x3da]
---
Predecessors: [0x3b2]
Successors: [0x3db]
---
0x3cd JUMPDEST
0x3ce DUP3
0x3cf ADD
0x3d0 SWAP2
0x3d1 SWAP1
0x3d2 PUSH1 0x0
0x3d4 MSTORE
0x3d5 PUSH1 0x20
0x3d7 PUSH1 0x0
0x3d9 SHA3
0x3da SWAP1
---
0x3cd: JUMPDEST 
0x3cf: V289 = ADD V276 V269
0x3d2: V290 = 0x0
0x3d4: M[0x0] = 0x0
0x3d5: V291 = 0x20
0x3d7: V292 = 0x0
0x3d9: V293 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x179, V257, 0x0, V269, V276, 0x0, V269]
Stack pops: 3
Stack additions: [V289, V293, S2]
Exit stack: [V11, 0x179, V257, 0x0, V269, V289, V293, V276]

================================

Block 0x3db
[0x3db:0x3ee]
---
Predecessors: [0x3cd, 0x3db]
Successors: [0x3db, 0x3ef]
---
0x3db JUMPDEST
0x3dc DUP2
0x3dd SLOAD
0x3de DUP2
0x3df MSTORE
0x3e0 SWAP1
0x3e1 PUSH1 0x1
0x3e3 ADD
0x3e4 SWAP1
0x3e5 PUSH1 0x20
0x3e7 ADD
0x3e8 DUP1
0x3e9 DUP4
0x3ea GT
0x3eb PUSH2 0x3db
0x3ee JUMPI
---
0x3db: JUMPDEST 
0x3dd: V294 = S[S1]
0x3df: M[S0] = V294
0x3e1: V295 = 0x1
0x3e3: V296 = ADD 0x1 S1
0x3e5: V297 = 0x20
0x3e7: V298 = ADD 0x20 S0
0x3ea: V299 = GT V289 V298
0x3eb: V300 = 0x3db
0x3ee: JUMPI 0x3db V299
---
Entry stack: [V11, 0x179, V257, 0x0, V269, V289, S1, S0]
Stack pops: 3
Stack additions: [S2, V296, V298]
Exit stack: [V11, 0x179, V257, 0x0, V269, V289, V296, V298]

================================

Block 0x3ef
[0x3ef:0x3f7]
---
Predecessors: [0x3db]
Successors: [0x3f8]
---
0x3ef DUP3
0x3f0 SWAP1
0x3f1 SUB
0x3f2 PUSH1 0x1f
0x3f4 AND
0x3f5 DUP3
0x3f6 ADD
0x3f7 SWAP2
---
0x3f1: V301 = SUB V298 V289
0x3f2: V302 = 0x1f
0x3f4: V303 = AND 0x1f V301
0x3f6: V304 = ADD V289 V303
---
Entry stack: [V11, 0x179, V257, 0x0, V269, V289, V296, V298]
Stack pops: 3
Stack additions: [V304, S1, S2]
Exit stack: [V11, 0x179, V257, 0x0, V269, V304, V296, V289]

================================

Block 0x3f8
[0x3f8:0x3ff]
---
Predecessors: [0x372, 0x3ba, 0x3ef]
Successors: [0x179]
---
0x3f8 JUMPDEST
0x3f9 POP
0x3fa POP
0x3fb POP
0x3fc POP
0x3fd POP
0x3fe DUP2
0x3ff JUMP
---
0x3f8: JUMPDEST 
0x3ff: JUMP 0x179
---
Entry stack: [V11, 0x179, V257, 0x0, V269, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x179, V257]

================================

Block 0x400
[0x400:0x420]
---
Predecessors: [0x1fa]
Successors: [0x421, 0x456]
---
0x400 JUMPDEST
0x401 PUSH1 0x1
0x403 SLOAD
0x404 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x419 AND
0x41a CALLER
0x41b EQ
0x41c ISZERO
0x41d PUSH2 0x456
0x420 JUMPI
---
0x400: JUMPDEST 
0x401: V305 = 0x1
0x403: V306 = S[0x1]
0x404: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x419: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x41a: V309 = CALLER
0x41b: V310 = EQ V309 V308
0x41c: V311 = ISZERO V310
0x41d: V312 = 0x456
0x420: JUMPI 0x456 V311
---
Entry stack: [V11, 0x77, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V144]

================================

Block 0x421
[0x421:0x455]
---
Predecessors: [0x400]
Successors: [0x456]
---
0x421 PUSH1 0x1
0x423 DUP1
0x424 SLOAD
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a NOT
0x43b AND
0x43c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x451 DUP4
0x452 AND
0x453 OR
0x454 SWAP1
0x455 SSTORE
---
0x421: V313 = 0x1
0x424: V314 = S[0x1]
0x425: V315 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V316 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x43b: V317 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V314
0x43c: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x452: V319 = AND V144 0xffffffffffffffffffffffffffffffffffffffff
0x453: V320 = OR V319 V317
0x455: S[0x1] = V320
---
Entry stack: [V11, 0x77, V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V144]

================================

Block 0x456
[0x456:0x458]
---
Predecessors: [0x400, 0x421, 0x47d]
Successors: [0x77]
---
0x456 JUMPDEST
0x457 POP
0x458 JUMP
---
0x456: JUMPDEST 
0x458: JUMP 0x77
---
Entry stack: [V11, 0x77, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x459
[0x459:0x478]
---
Predecessors: [0x21c]
Successors: [0x479, 0x47d]
---
0x459 JUMPDEST
0x45a PUSH1 0x1
0x45c SLOAD
0x45d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x472 AND
0x473 CALLER
0x474 EQ
0x475 PUSH2 0x47d
0x478 JUMPI
---
0x459: JUMPDEST 
0x45a: V321 = 0x1
0x45c: V322 = S[0x1]
0x45d: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x472: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x473: V325 = CALLER
0x474: V326 = EQ V325 V324
0x475: V327 = 0x47d
0x478: JUMPI 0x47d V326
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x479
[0x479:0x47c]
---
Predecessors: [0x459]
Successors: []
---
0x479 PUSH1 0x0
0x47b DUP1
0x47c REVERT
---
0x479: V328 = 0x0
0x47c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x47d
[0x47d:0x4a0]
---
Predecessors: [0x459]
Successors: [0x456, 0x4a1]
---
0x47d JUMPDEST
0x47e PUSH1 0x40
0x480 MLOAD
0x481 CALLER
0x482 SWAP1
0x483 ADDRESS
0x484 BALANCE
0x485 DUP1
0x486 ISZERO
0x487 PUSH2 0x8fc
0x48a MUL
0x48b SWAP2
0x48c PUSH1 0x0
0x48e DUP2
0x48f DUP2
0x490 DUP2
0x491 DUP6
0x492 DUP9
0x493 DUP9
0x494 CALL
0x495 SWAP4
0x496 POP
0x497 POP
0x498 POP
0x499 POP
0x49a ISZERO
0x49b DUP1
0x49c ISZERO
0x49d PUSH2 0x456
0x4a0 JUMPI
---
0x47d: JUMPDEST 
0x47e: V329 = 0x40
0x480: V330 = M[0x40]
0x481: V331 = CALLER
0x483: V332 = ADDRESS
0x484: V333 = BALANCE V332
0x486: V334 = ISZERO V333
0x487: V335 = 0x8fc
0x48a: V336 = MUL 0x8fc V334
0x48c: V337 = 0x0
0x494: V338 = CALL V336 V331 V333 V330 0x0 V330 0x0
0x49a: V339 = ISZERO V338
0x49c: V340 = ISZERO V339
0x49d: V341 = 0x456
0x4a0: JUMPI 0x456 V340
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V339]
Exit stack: [V11, 0x77, V339]

================================

Block 0x4a1
[0x4a1:0x4a9]
---
Predecessors: [0x47d]
Successors: []
---
0x4a1 RETURNDATASIZE
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 RETURNDATACOPY
0x4a6 RETURNDATASIZE
0x4a7 PUSH1 0x0
0x4a9 REVERT
---
0x4a1: V342 = RETURNDATASIZE
0x4a2: V343 = 0x0
0x4a5: RETURNDATACOPY 0x0 0x0 V342
0x4a6: V344 = RETURNDATASIZE
0x4a7: V345 = 0x0
0x4a9: REVERT 0x0 V344
---
Entry stack: [V11, 0x77, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V339]

================================

Block 0x4aa
[0x4aa:0x4da]
---
Predecessors: [0x25d, 0x359]
Successors: [0x4db, 0x4eb]
---
0x4aa JUMPDEST
0x4ab DUP3
0x4ac DUP1
0x4ad SLOAD
0x4ae PUSH1 0x1
0x4b0 DUP2
0x4b1 PUSH1 0x1
0x4b3 AND
0x4b4 ISZERO
0x4b5 PUSH2 0x100
0x4b8 MUL
0x4b9 SUB
0x4ba AND
0x4bb PUSH1 0x2
0x4bd SWAP1
0x4be DIV
0x4bf SWAP1
0x4c0 PUSH1 0x0
0x4c2 MSTORE
0x4c3 PUSH1 0x20
0x4c5 PUSH1 0x0
0x4c7 SHA3
0x4c8 SWAP1
0x4c9 PUSH1 0x1f
0x4cb ADD
0x4cc PUSH1 0x20
0x4ce SWAP1
0x4cf DIV
0x4d0 DUP2
0x4d1 ADD
0x4d2 SWAP3
0x4d3 DUP3
0x4d4 PUSH1 0x1f
0x4d6 LT
0x4d7 PUSH2 0x4eb
0x4da JUMPI
---
0x4aa: JUMPDEST 
0x4ad: V346 = S[0x0]
0x4ae: V347 = 0x1
0x4b1: V348 = 0x1
0x4b3: V349 = AND 0x1 V346
0x4b4: V350 = ISZERO V349
0x4b5: V351 = 0x100
0x4b8: V352 = MUL 0x100 V350
0x4b9: V353 = SUB V352 0x1
0x4ba: V354 = AND V353 V346
0x4bb: V355 = 0x2
0x4be: V356 = DIV V354 0x2
0x4c0: V357 = 0x0
0x4c2: M[0x0] = 0x0
0x4c3: V358 = 0x20
0x4c5: V359 = 0x0
0x4c7: V360 = SHA3 0x0 0x20
0x4c9: V361 = 0x1f
0x4cb: V362 = ADD 0x1f V356
0x4cc: V363 = 0x20
0x4cf: V364 = DIV V362 0x20
0x4d1: V365 = ADD V360 V364
0x4d4: V366 = 0x1f
0x4d6: V367 = LT 0x1f S0
0x4d7: V368 = 0x4eb
0x4da: JUMPI 0x4eb V367
---
Entry stack: [V11, 0x77, S5, S4, {0x29b, 0x36b}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V365, S0, V360, S1]
Exit stack: [V11, 0x77, S5, S4, {0x29b, 0x36b}, 0x0, V365, S0, V360, S1]

================================

Block 0x4db
[0x4db:0x4ea]
---
Predecessors: [0x4aa]
Successors: [0x518]
---
0x4db DUP1
0x4dc MLOAD
0x4dd PUSH1 0xff
0x4df NOT
0x4e0 AND
0x4e1 DUP4
0x4e2 DUP1
0x4e3 ADD
0x4e4 OR
0x4e5 DUP6
0x4e6 SSTORE
0x4e7 PUSH2 0x518
0x4ea JUMP
---
0x4dc: V369 = M[S0]
0x4dd: V370 = 0xff
0x4df: V371 = NOT 0xff
0x4e0: V372 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V369
0x4e3: V373 = ADD S2 S2
0x4e4: V374 = OR V373 V372
0x4e6: S[0x0] = V374
0x4e7: V375 = 0x518
0x4ea: JUMP 0x518
---
Entry stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, V365, S2, V360, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, V365, S2, V360, S0]

================================

Block 0x4eb
[0x4eb:0x4f9]
---
Predecessors: [0x4aa]
Successors: [0x4fa, 0x518]
---
0x4eb JUMPDEST
0x4ec DUP3
0x4ed DUP1
0x4ee ADD
0x4ef PUSH1 0x1
0x4f1 ADD
0x4f2 DUP6
0x4f3 SSTORE
0x4f4 DUP3
0x4f5 ISZERO
0x4f6 PUSH2 0x518
0x4f9 JUMPI
---
0x4eb: JUMPDEST 
0x4ee: V376 = ADD S2 S2
0x4ef: V377 = 0x1
0x4f1: V378 = ADD 0x1 V376
0x4f3: S[0x0] = V378
0x4f5: V379 = ISZERO S2
0x4f6: V380 = 0x518
0x4f9: JUMPI 0x518 V379
---
Entry stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, V365, S2, V360, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, V365, S2, V360, S0]

================================

Block 0x4fa
[0x4fa:0x4fc]
---
Predecessors: [0x4eb]
Successors: [0x4fd]
---
0x4fa SWAP2
0x4fb DUP3
0x4fc ADD
---
0x4fc: V381 = ADD S0 S2
---
Entry stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, V365, S2, V360, S0]
Stack pops: 3
Stack additions: [S0, S1, V381]
Exit stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, V365, S0, V360, V381]

================================

Block 0x4fd
[0x4fd:0x505]
---
Predecessors: [0x4fa, 0x506]
Successors: [0x506, 0x518]
---
0x4fd JUMPDEST
0x4fe DUP3
0x4ff DUP2
0x500 GT
0x501 ISZERO
0x502 PUSH2 0x518
0x505 JUMPI
---
0x4fd: JUMPDEST 
0x500: V382 = GT V381 S2
0x501: V383 = ISZERO V382
0x502: V384 = 0x518
0x505: JUMPI 0x518 V383
---
Entry stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, V365, S2, S1, V381]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, V365, S2, S1, V381]

================================

Block 0x506
[0x506:0x517]
---
Predecessors: [0x4fd]
Successors: [0x4fd]
---
0x506 DUP3
0x507 MLOAD
0x508 DUP3
0x509 SSTORE
0x50a SWAP2
0x50b PUSH1 0x20
0x50d ADD
0x50e SWAP2
0x50f SWAP1
0x510 PUSH1 0x1
0x512 ADD
0x513 SWAP1
0x514 PUSH2 0x4fd
0x517 JUMP
---
0x507: V385 = M[S2]
0x509: S[S1] = V385
0x50b: V386 = 0x20
0x50d: V387 = ADD 0x20 S2
0x510: V388 = 0x1
0x512: V389 = ADD 0x1 S1
0x514: V390 = 0x4fd
0x517: JUMP 0x4fd
---
Entry stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, V365, S2, S1, V381]
Stack pops: 3
Stack additions: [V387, V389, S0]
Exit stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, V365, V387, V389, V381]

================================

Block 0x518
[0x518:0x523]
---
Predecessors: [0x4db, 0x4eb, 0x4fd]
Successors: [0x528]
---
0x518 JUMPDEST
0x519 POP
0x51a PUSH2 0x524
0x51d SWAP3
0x51e SWAP2
0x51f POP
0x520 PUSH2 0x528
0x523 JUMP
---
0x518: JUMPDEST 
0x51a: V391 = 0x524
0x520: V392 = 0x528
0x523: JUMP 0x528
---
Entry stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, V365, S2, S1, S0]
Stack pops: 4
Stack additions: [0x524, S3, S1]
Exit stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, 0x524, V365, S1]

================================

Block 0x524
[0x524:0x527]
---
Predecessors: [0x52e, 0x542]
Successors: [0x77, 0x29b, 0x36b, 0x542]
---
0x524 JUMPDEST
0x525 POP
0x526 SWAP1
0x527 JUMP
---
0x524: JUMPDEST 
0x527: JUMP {0x77, 0x29b, 0x36b, 0x542}
---
Entry stack: [V11, 0x77, S7, S6, {0x77, 0x29b, 0x36b}, S4, S3, {0x77, 0x29b, 0x36b, 0x542}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x77, S7, S6, {0x77, 0x29b, 0x36b}, S4, S3, S1]

================================

Block 0x528
[0x528:0x52d]
---
Predecessors: [0x518]
Successors: [0x52e]
---
0x528 JUMPDEST
0x529 PUSH2 0x542
0x52c SWAP2
0x52d SWAP1
---
0x528: JUMPDEST 
0x529: V393 = 0x542
---
Entry stack: [V11, 0x77, S6, S5, {0x29b, 0x36b}, 0x0, 0x524, V365, S0]
Stack pops: 2
Stack additions: [0x542, S1, S0]
Exit stack: [V11, 0x77, S6, S5, {0x29b, 0x36b}, 0x0, 0x524, 0x542, V365, S0]

================================

Block 0x52e
[0x52e:0x536]
---
Predecessors: [0x528, 0x537]
Successors: [0x524, 0x537]
---
0x52e JUMPDEST
0x52f DUP1
0x530 DUP3
0x531 GT
0x532 ISZERO
0x533 PUSH2 0x524
0x536 JUMPI
---
0x52e: JUMPDEST 
0x531: V394 = GT V365 S0
0x532: V395 = ISZERO V394
0x533: V396 = 0x524
0x536: JUMPI 0x524 V395
---
Entry stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, 0x524, 0x542, V365, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, 0x524, 0x542, V365, S0]

================================

Block 0x537
[0x537:0x541]
---
Predecessors: [0x52e]
Successors: [0x52e]
---
0x537 PUSH1 0x0
0x539 DUP2
0x53a SSTORE
0x53b PUSH1 0x1
0x53d ADD
0x53e PUSH2 0x52e
0x541 JUMP
---
0x537: V397 = 0x0
0x53a: S[S0] = 0x0
0x53b: V398 = 0x1
0x53d: V399 = ADD 0x1 S0
0x53e: V400 = 0x52e
0x541: JUMP 0x52e
---
Entry stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, 0x524, 0x542, V365, S0]
Stack pops: 1
Stack additions: [V399]
Exit stack: [V11, 0x77, S7, S6, {0x29b, 0x36b}, 0x0, 0x524, 0x542, V365, V399]

================================

Block 0x542
[0x542:0x544]
---
Predecessors: [0x524]
Successors: [0x524]
---
0x542 JUMPDEST
0x543 SWAP1
0x544 JUMP
---
0x542: JUMPDEST 
0x544: JUMP S1
---
Entry stack: [V11, 0x77, S5, S4, {0x77, 0x29b, 0x36b}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x77, S5, S4, {0x77, 0x29b, 0x36b}, S2, S0]

================================

Block 0x545
[0x545:0x585]
---
Predecessors: []
Successors: []
---
0x545 STOP
0x546 LOG1
0x547 PUSH6 0x627a7a723058
0x54e SHA3
0x54f MISSING 0xee
0x550 MISSING 0xbc
0x551 MISSING 0xe5
0x552 MISSING 0xbd
0x553 EXP
0x554 MISSING 0xca
0x555 STATICCALL
0x556 NOT
0x557 GAS
0x558 AND
0x559 MISSING 0xda
0x55a MISSING 0x46
0x55b STATICCALL
0x55c MISSING 0xc8
0x55d DUP13
0x55e STOP
0x55f MISSING 0xd2
0x560 MISSING 0x2a
0x561 MISSING 0xf7
0x562 MISSING 0xed
0x563 DUP3
0x564 MISSING 0xd4
0x565 MISSING 0x5c
0x566 BALANCE
0x567 MISSING 0x5d
0x568 PUSH29 0x72e7132b931e0029
---
0x545: STOP 
0x546: LOG S0 S1 S2
0x547: V401 = 0x627a7a723058
0x54e: V402 = SHA3 0x627a7a723058 S3
0x54f: MISSING 0xee
0x550: MISSING 0xbc
0x551: MISSING 0xe5
0x552: MISSING 0xbd
0x553: V403 = EXP S0 S1
0x554: MISSING 0xca
0x555: V404 = STATICCALL S0 S1 S2 S3 S4 S5
0x556: V405 = NOT V404
0x557: V406 = GAS
0x558: V407 = AND V406 V405
0x559: MISSING 0xda
0x55a: MISSING 0x46
0x55b: V408 = STATICCALL S0 S1 S2 S3 S4 S5
0x55c: MISSING 0xc8
0x55e: STOP 
0x55f: MISSING 0xd2
0x560: MISSING 0x2a
0x561: MISSING 0xf7
0x562: MISSING 0xed
0x564: MISSING 0xd4
0x565: MISSING 0x5c
0x566: V409 = BALANCE S0
0x567: MISSING 0x5d
0x568: V410 = 0x72e7132b931e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V402, V403, V407, V408, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S2, S0, S1, S2, V409, 0x72e7132b931e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x31bdec6c
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x224, 0x22e, 0x23e, 0x247, 0x25d, 0x29b, 0x2bc, 0x36b

Function 1:
Public function signature: 0x3853682c
Entry block: 0x103
Exit block: 0x77
Body: 0x77, 0x103, 0x29b, 0x2bc, 0x2c0, 0x2c8, 0x2cc, 0x2f5, 0x301, 0x307, 0x32a, 0x333, 0x36b

Function 2:
Public function signature: 0x3e3ee859
Entry block: 0x116
Exit block: 0x77
Body: 0x77, 0x116, 0x29b, 0x2bc, 0x338, 0x359, 0x36b

Function 3:
Public function signature: 0x3fad9ae0
Entry block: 0x164
Exit block: 0x1e0
Body: 0x164, 0x16c, 0x170, 0x179, 0x19b, 0x1a4, 0x1b3, 0x1c7, 0x1e0, 0x372, 0x3b2, 0x3ba, 0x3cd, 0x3db, 0x3ef, 0x3f8

Function 4:
Public function signature: 0x59988dce
Entry block: 0x1ee
Exit block: 0x77
Body: 0x77, 0x1ee, 0x1f6, 0x1fa, 0x400, 0x421, 0x456

Function 5:
Public function signature: 0xf50ab247
Entry block: 0x21c
Exit block: 0x77
Body: 0x77, 0x21c, 0x456, 0x459, 0x479, 0x47d, 0x4a1

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x4aa
Exit block: 0x524
Body: 0x4aa, 0x4db, 0x4eb, 0x4fa, 0x4fd, 0x506, 0x518, 0x524, 0x528, 0x52e, 0x537, 0x542

