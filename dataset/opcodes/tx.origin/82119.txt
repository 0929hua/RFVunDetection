Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x31fb67c2
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x31fb67c2
0x3b: V13 = EQ V11 0x31fb67c2
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xc5]
---
0x40 DUP1
0x41 PUSH4 0x52efea6e
0x46 EQ
0x47 PUSH2 0xc5
0x4a JUMPI
---
0x41: V15 = 0x52efea6e
0x46: V16 = EQ 0x52efea6e V11
0x47: V17 = 0xc5
0x4a: JUMPI 0xc5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xda]
---
0x4b DUP1
0x4c PUSH4 0x7ccb13c4
0x51 EQ
0x52 PUSH2 0xda
0x55 JUMPI
---
0x4c: V18 = 0x7ccb13c4
0x51: V19 = EQ 0x7ccb13c4 V11
0x52: V20 = 0xda
0x55: JUMPI 0xda V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x133]
---
0x56 DUP1
0x57 PUSH4 0x95e8f3e7
0x5c EQ
0x5d PUSH2 0x133
0x60 JUMPI
---
0x57: V21 = 0x95e8f3e7
0x5c: V22 = EQ 0x95e8f3e7 V11
0x5d: V23 = 0x133
0x60: JUMPI 0x133 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x15a]
---
0x61 DUP1
0x62 PUSH4 0xf43fa805
0x67 EQ
0x68 PUSH2 0x15a
0x6b JUMPI
---
0x62: V24 = 0xf43fa805
0x67: V25 = EQ 0xf43fa805 V11
0x68: V26 = 0x15a
0x6b: JUMPI 0x15a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x16f]
---
0x6c DUP1
0x6d PUSH4 0xf4dafe71
0x72 EQ
0x73 PUSH2 0x16f
0x76 JUMPI
---
0x6d: V27 = 0xf4dafe71
0x72: V28 = EQ 0xf4dafe71 V11
0x73: V29 = 0x16f
0x76: JUMPI 0x16f V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x29f, 0x380, 0x3c8]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0xc4]
---
Predecessors: [0xd]
Successors: [0x187]
---
0x79 JUMPDEST
0x7a PUSH1 0x40
0x7c DUP1
0x7d MLOAD
0x7e PUSH1 0x20
0x80 PUSH1 0x4
0x82 DUP1
0x83 CALLDATALOAD
0x84 DUP1
0x85 DUP3
0x86 ADD
0x87 CALLDATALOAD
0x88 PUSH1 0x1f
0x8a DUP2
0x8b ADD
0x8c DUP5
0x8d SWAP1
0x8e DIV
0x8f DUP5
0x90 MUL
0x91 DUP6
0x92 ADD
0x93 DUP5
0x94 ADD
0x95 SWAP1
0x96 SWAP6
0x97 MSTORE
0x98 DUP5
0x99 DUP5
0x9a MSTORE
0x9b PUSH2 0x77
0x9e SWAP5
0x9f CALLDATASIZE
0xa0 SWAP5
0xa1 SWAP3
0xa2 SWAP4
0xa3 PUSH1 0x24
0xa5 SWAP4
0xa6 SWAP3
0xa7 DUP5
0xa8 ADD
0xa9 SWAP2
0xaa SWAP1
0xab DUP2
0xac SWAP1
0xad DUP5
0xae ADD
0xaf DUP4
0xb0 DUP3
0xb1 DUP1
0xb2 DUP3
0xb3 DUP5
0xb4 CALLDATACOPY
0xb5 POP
0xb6 SWAP5
0xb7 SWAP8
0xb8 POP
0xb9 PUSH2 0x187
0xbc SWAP7
0xbd POP
0xbe POP
0xbf POP
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x40
0x7d: V31 = M[0x40]
0x7e: V32 = 0x20
0x80: V33 = 0x4
0x83: V34 = CALLDATALOAD 0x4
0x86: V35 = ADD 0x4 V34
0x87: V36 = CALLDATALOAD V35
0x88: V37 = 0x1f
0x8b: V38 = ADD V36 0x1f
0x8e: V39 = DIV V38 0x20
0x90: V40 = MUL 0x20 V39
0x92: V41 = ADD V31 V40
0x94: V42 = ADD 0x20 V41
0x97: M[0x40] = V42
0x9a: M[V31] = V36
0x9b: V43 = 0x77
0x9f: V44 = CALLDATASIZE
0xa3: V45 = 0x24
0xa8: V46 = ADD 0x24 V34
0xae: V47 = ADD V31 0x20
0xb4: CALLDATACOPY V47 V46 V36
0xb9: V48 = 0x187
0xc4: JUMP 0x187
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V31]
Exit stack: [V11, 0x77, V31]

================================

Block 0xc5
[0xc5:0xcc]
---
Predecessors: [0x40]
Successors: [0xcd, 0xd1]
---
0xc5 JUMPDEST
0xc6 CALLVALUE
0xc7 DUP1
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc5: JUMPDEST 
0xc6: V49 = CALLVALUE
0xc8: V50 = ISZERO V49
0xc9: V51 = 0xd1
0xcc: JUMPI 0xd1 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V11, V49]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc5]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V52 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V11, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49]

================================

Block 0xd1
[0xd1:0xd9]
---
Predecessors: [0xc5]
Successors: [0x2a2]
---
0xd1 JUMPDEST
0xd2 POP
0xd3 PUSH2 0x77
0xd6 PUSH2 0x2a2
0xd9 JUMP
---
0xd1: JUMPDEST 
0xd3: V53 = 0x77
0xd6: V54 = 0x2a2
0xd9: JUMP 0x2a2
---
Entry stack: [V11, V49]
Stack pops: 1
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0x4b]
Successors: [0xe2, 0xe6]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc DUP1
0xdd ISZERO
0xde PUSH2 0xe6
0xe1 JUMPI
---
0xda: JUMPDEST 
0xdb: V55 = CALLVALUE
0xdd: V56 = ISZERO V55
0xde: V57 = 0xe6
0xe1: JUMPI 0xe6 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V11, V55]

================================

Block 0xe2
[0xe2:0xe5]
---
Predecessors: [0xda]
Successors: []
---
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe2: V58 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V11, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55]

================================

Block 0xe6
[0xe6:0x132]
---
Predecessors: [0xda]
Successors: [0x2e1]
---
0xe6 JUMPDEST
0xe7 POP
0xe8 PUSH1 0x40
0xea DUP1
0xeb MLOAD
0xec PUSH1 0x20
0xee PUSH1 0x4
0xf0 DUP1
0xf1 CALLDATALOAD
0xf2 DUP1
0xf3 DUP3
0xf4 ADD
0xf5 CALLDATALOAD
0xf6 PUSH1 0x1f
0xf8 DUP2
0xf9 ADD
0xfa DUP5
0xfb SWAP1
0xfc DIV
0xfd DUP5
0xfe MUL
0xff DUP6
0x100 ADD
0x101 DUP5
0x102 ADD
0x103 SWAP1
0x104 SWAP6
0x105 MSTORE
0x106 DUP5
0x107 DUP5
0x108 MSTORE
0x109 PUSH2 0x77
0x10c SWAP5
0x10d CALLDATASIZE
0x10e SWAP5
0x10f SWAP3
0x110 SWAP4
0x111 PUSH1 0x24
0x113 SWAP4
0x114 SWAP3
0x115 DUP5
0x116 ADD
0x117 SWAP2
0x118 SWAP1
0x119 DUP2
0x11a SWAP1
0x11b DUP5
0x11c ADD
0x11d DUP4
0x11e DUP3
0x11f DUP1
0x120 DUP3
0x121 DUP5
0x122 CALLDATACOPY
0x123 POP
0x124 SWAP5
0x125 SWAP8
0x126 POP
0x127 PUSH2 0x2e1
0x12a SWAP7
0x12b POP
0x12c POP
0x12d POP
0x12e POP
0x12f POP
0x130 POP
0x131 POP
0x132 JUMP
---
0xe6: JUMPDEST 
0xe8: V59 = 0x40
0xeb: V60 = M[0x40]
0xec: V61 = 0x20
0xee: V62 = 0x4
0xf1: V63 = CALLDATALOAD 0x4
0xf4: V64 = ADD 0x4 V63
0xf5: V65 = CALLDATALOAD V64
0xf6: V66 = 0x1f
0xf9: V67 = ADD V65 0x1f
0xfc: V68 = DIV V67 0x20
0xfe: V69 = MUL 0x20 V68
0x100: V70 = ADD V60 V69
0x102: V71 = ADD 0x20 V70
0x105: M[0x40] = V71
0x108: M[V60] = V65
0x109: V72 = 0x77
0x10d: V73 = CALLDATASIZE
0x111: V74 = 0x24
0x116: V75 = ADD 0x24 V63
0x11c: V76 = ADD V60 0x20
0x122: CALLDATACOPY V76 V75 V65
0x127: V77 = 0x2e1
0x132: JUMP 0x2e1
---
Entry stack: [V11, V55]
Stack pops: 1
Stack additions: [0x77, V60]
Exit stack: [V11, 0x77, V60]

================================

Block 0x133
[0x133:0x13a]
---
Predecessors: [0x56]
Successors: [0x13b, 0x13f]
---
0x133 JUMPDEST
0x134 CALLVALUE
0x135 DUP1
0x136 ISZERO
0x137 PUSH2 0x13f
0x13a JUMPI
---
0x133: JUMPDEST 
0x134: V78 = CALLVALUE
0x136: V79 = ISZERO V78
0x137: V80 = 0x13f
0x13a: JUMPI 0x13f V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V11, V78]

================================

Block 0x13b
[0x13b:0x13e]
---
Predecessors: [0x133]
Successors: []
---
0x13b PUSH1 0x0
0x13d DUP1
0x13e REVERT
---
0x13b: V81 = 0x0
0x13e: REVERT 0x0 0x0
---
Entry stack: [V11, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V78]

================================

Block 0x13f
[0x13f:0x147]
---
Predecessors: [0x133]
Successors: [0x3b2]
---
0x13f JUMPDEST
0x140 POP
0x141 PUSH2 0x148
0x144 PUSH2 0x3b2
0x147 JUMP
---
0x13f: JUMPDEST 
0x141: V82 = 0x148
0x144: V83 = 0x3b2
0x147: JUMP 0x3b2
---
Entry stack: [V11, V78]
Stack pops: 1
Stack additions: [0x148]
Exit stack: [V11, 0x148]

================================

Block 0x148
[0x148:0x159]
---
Predecessors: [0x3b2, 0x3b8]
Successors: []
---
0x148 JUMPDEST
0x149 PUSH1 0x40
0x14b DUP1
0x14c MLOAD
0x14d SWAP2
0x14e DUP3
0x14f MSTORE
0x150 MLOAD
0x151 SWAP1
0x152 DUP2
0x153 SWAP1
0x154 SUB
0x155 PUSH1 0x20
0x157 ADD
0x158 SWAP1
0x159 RETURN
---
0x148: JUMPDEST 
0x149: V84 = 0x40
0x14c: V85 = M[0x40]
0x14f: M[V85] = S0
0x150: V86 = M[0x40]
0x154: V87 = SUB V85 V86
0x155: V88 = 0x20
0x157: V89 = ADD 0x20 V87
0x159: RETURN V86 V89
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x15a
[0x15a:0x161]
---
Predecessors: [0x61]
Successors: [0x162, 0x166]
---
0x15a JUMPDEST
0x15b CALLVALUE
0x15c DUP1
0x15d ISZERO
0x15e PUSH2 0x166
0x161 JUMPI
---
0x15a: JUMPDEST 
0x15b: V90 = CALLVALUE
0x15d: V91 = ISZERO V90
0x15e: V92 = 0x166
0x161: JUMPI 0x166 V91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V90]
Exit stack: [V11, V90]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x15a]
Successors: []
---
0x162 PUSH1 0x0
0x164 DUP1
0x165 REVERT
---
0x162: V93 = 0x0
0x165: REVERT 0x0 0x0
---
Entry stack: [V11, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V90]

================================

Block 0x166
[0x166:0x16e]
---
Predecessors: [0x15a]
Successors: [0x3b8]
---
0x166 JUMPDEST
0x167 POP
0x168 PUSH2 0x148
0x16b PUSH2 0x3b8
0x16e JUMP
---
0x166: JUMPDEST 
0x168: V94 = 0x148
0x16b: V95 = 0x3b8
0x16e: JUMP 0x3b8
---
Entry stack: [V11, V90]
Stack pops: 1
Stack additions: [0x148]
Exit stack: [V11, 0x148]

================================

Block 0x16f
[0x16f:0x176]
---
Predecessors: [0x6c]
Successors: [0x177, 0x17b]
---
0x16f JUMPDEST
0x170 CALLVALUE
0x171 DUP1
0x172 ISZERO
0x173 PUSH2 0x17b
0x176 JUMPI
---
0x16f: JUMPDEST 
0x170: V96 = CALLVALUE
0x172: V97 = ISZERO V96
0x173: V98 = 0x17b
0x176: JUMPI 0x17b V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V11, V96]

================================

Block 0x177
[0x177:0x17a]
---
Predecessors: [0x16f]
Successors: []
---
0x177 PUSH1 0x0
0x179 DUP1
0x17a REVERT
---
0x177: V99 = 0x0
0x17a: REVERT 0x0 0x0
---
Entry stack: [V11, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96]

================================

Block 0x17b
[0x17b:0x186]
---
Predecessors: [0x16f]
Successors: [0x3be]
---
0x17b JUMPDEST
0x17c POP
0x17d PUSH2 0x77
0x180 PUSH1 0x4
0x182 CALLDATALOAD
0x183 PUSH2 0x3be
0x186 JUMP
---
0x17b: JUMPDEST 
0x17d: V100 = 0x77
0x180: V101 = 0x4
0x182: V102 = CALLDATALOAD 0x4
0x183: V103 = 0x3be
0x186: JUMP 0x3be
---
Entry stack: [V11, V96]
Stack pops: 1
Stack additions: [0x77, V102]
Exit stack: [V11, 0x77, V102]

================================

Block 0x187
[0x187:0x18e]
---
Predecessors: [0x79]
Successors: [0x18f, 0x193]
---
0x187 JUMPDEST
0x188 CALLER
0x189 ORIGIN
0x18a EQ
0x18b PUSH2 0x193
0x18e JUMPI
---
0x187: JUMPDEST 
0x188: V104 = CALLER
0x189: V105 = ORIGIN
0x18a: V106 = EQ V105 V104
0x18b: V107 = 0x193
0x18e: JUMPI 0x193 V106
---
Entry stack: [V11, 0x77, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V31]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x187]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V108 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V31]

================================

Block 0x193
[0x193:0x1a6]
---
Predecessors: [0x187]
Successors: [0x1a7]
---
0x193 JUMPDEST
0x194 DUP1
0x195 PUSH1 0x40
0x197 MLOAD
0x198 PUSH1 0x20
0x19a ADD
0x19b DUP1
0x19c DUP3
0x19d DUP1
0x19e MLOAD
0x19f SWAP1
0x1a0 PUSH1 0x20
0x1a2 ADD
0x1a3 SWAP1
0x1a4 DUP1
0x1a5 DUP4
0x1a6 DUP4
---
0x193: JUMPDEST 
0x195: V109 = 0x40
0x197: V110 = M[0x40]
0x198: V111 = 0x20
0x19a: V112 = ADD 0x20 V110
0x19e: V113 = M[V31]
0x1a0: V114 = 0x20
0x1a2: V115 = ADD 0x20 V31
---
Entry stack: [V11, 0x77, V31]
Stack pops: 1
Stack additions: [S0, S0, V112, V112, V115, V113, V113, V112, V115]
Exit stack: [V11, 0x77, V31, V31, V112, V112, V115, V113, V113, V112, V115]

================================

Block 0x1a7
[0x1a7:0x1af]
---
Predecessors: [0x193, 0x1b0]
Successors: [0x1b0, 0x1c6]
---
0x1a7 JUMPDEST
0x1a8 PUSH1 0x20
0x1aa DUP4
0x1ab LT
0x1ac PUSH2 0x1c6
0x1af JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V116 = 0x20
0x1ab: V117 = LT S2 0x20
0x1ac: V118 = 0x1c6
0x1af: JUMPI 0x1c6 V117
---
Entry stack: [V11, 0x77, V31, V31, V112, V112, V115, V113, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V31, V31, V112, V112, V115, V113, S2, S1, S0]

================================

Block 0x1b0
[0x1b0:0x1c5]
---
Predecessors: [0x1a7]
Successors: [0x1a7]
---
0x1b0 DUP1
0x1b1 MLOAD
0x1b2 DUP3
0x1b3 MSTORE
0x1b4 PUSH1 0x1f
0x1b6 NOT
0x1b7 SWAP1
0x1b8 SWAP3
0x1b9 ADD
0x1ba SWAP2
0x1bb PUSH1 0x20
0x1bd SWAP2
0x1be DUP3
0x1bf ADD
0x1c0 SWAP2
0x1c1 ADD
0x1c2 PUSH2 0x1a7
0x1c5 JUMP
---
0x1b1: V119 = M[S0]
0x1b3: M[S1] = V119
0x1b4: V120 = 0x1f
0x1b6: V121 = NOT 0x1f
0x1b9: V122 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1bb: V123 = 0x20
0x1bf: V124 = ADD 0x20 S1
0x1c1: V125 = ADD 0x20 S0
0x1c2: V126 = 0x1a7
0x1c5: JUMP 0x1a7
---
Entry stack: [V11, 0x77, V31, V31, V112, V112, V115, V113, S2, S1, S0]
Stack pops: 3
Stack additions: [V122, V124, V125]
Exit stack: [V11, 0x77, V31, V31, V112, V112, V115, V113, V122, V124, V125]

================================

Block 0x1c6
[0x1c6:0x209]
---
Predecessors: [0x1a7]
Successors: [0x20a]
---
0x1c6 JUMPDEST
0x1c7 PUSH1 0x1
0x1c9 DUP4
0x1ca PUSH1 0x20
0x1cc SUB
0x1cd PUSH2 0x100
0x1d0 EXP
0x1d1 SUB
0x1d2 DUP1
0x1d3 NOT
0x1d4 DUP3
0x1d5 MLOAD
0x1d6 AND
0x1d7 DUP2
0x1d8 DUP5
0x1d9 MLOAD
0x1da AND
0x1db DUP1
0x1dc DUP3
0x1dd OR
0x1de DUP6
0x1df MSTORE
0x1e0 POP
0x1e1 POP
0x1e2 POP
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 SWAP1
0x1e7 POP
0x1e8 ADD
0x1e9 SWAP2
0x1ea POP
0x1eb POP
0x1ec PUSH1 0x40
0x1ee MLOAD
0x1ef PUSH1 0x20
0x1f1 DUP2
0x1f2 DUP4
0x1f3 SUB
0x1f4 SUB
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 SWAP1
0x1f8 PUSH1 0x40
0x1fa MSTORE
0x1fb PUSH1 0x40
0x1fd MLOAD
0x1fe DUP1
0x1ff DUP3
0x200 DUP1
0x201 MLOAD
0x202 SWAP1
0x203 PUSH1 0x20
0x205 ADD
0x206 SWAP1
0x207 DUP1
0x208 DUP4
0x209 DUP4
---
0x1c6: JUMPDEST 
0x1c7: V127 = 0x1
0x1ca: V128 = 0x20
0x1cc: V129 = SUB 0x20 S2
0x1cd: V130 = 0x100
0x1d0: V131 = EXP 0x100 V129
0x1d1: V132 = SUB V131 0x1
0x1d3: V133 = NOT V132
0x1d5: V134 = M[S0]
0x1d6: V135 = AND V134 V133
0x1d9: V136 = M[S1]
0x1da: V137 = AND V136 V132
0x1dd: V138 = OR V135 V137
0x1df: M[S1] = V138
0x1e8: V139 = ADD V113 V112
0x1ec: V140 = 0x40
0x1ee: V141 = M[0x40]
0x1ef: V142 = 0x20
0x1f3: V143 = SUB V139 V141
0x1f4: V144 = SUB V143 0x20
0x1f6: M[V141] = V144
0x1f8: V145 = 0x40
0x1fa: M[0x40] = V139
0x1fb: V146 = 0x40
0x1fd: V147 = M[0x40]
0x201: V148 = M[V141]
0x203: V149 = 0x20
0x205: V150 = ADD 0x20 V141
---
Entry stack: [V11, 0x77, V31, V31, V112, V112, V115, V113, S2, S1, S0]
Stack pops: 8
Stack additions: [V141, V147, V147, V150, V148, V148, V147, V150]
Exit stack: [V11, 0x77, V31, V141, V147, V147, V150, V148, V148, V147, V150]

================================

Block 0x20a
[0x20a:0x212]
---
Predecessors: [0x1c6, 0x213]
Successors: [0x213, 0x229]
---
0x20a JUMPDEST
0x20b PUSH1 0x20
0x20d DUP4
0x20e LT
0x20f PUSH2 0x229
0x212 JUMPI
---
0x20a: JUMPDEST 
0x20b: V151 = 0x20
0x20e: V152 = LT S2 0x20
0x20f: V153 = 0x229
0x212: JUMPI 0x229 V152
---
Entry stack: [V11, 0x77, V31, V141, V147, V147, V150, V148, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V31, V141, V147, V147, V150, V148, S2, S1, S0]

================================

Block 0x213
[0x213:0x228]
---
Predecessors: [0x20a]
Successors: [0x20a]
---
0x213 DUP1
0x214 MLOAD
0x215 DUP3
0x216 MSTORE
0x217 PUSH1 0x1f
0x219 NOT
0x21a SWAP1
0x21b SWAP3
0x21c ADD
0x21d SWAP2
0x21e PUSH1 0x20
0x220 SWAP2
0x221 DUP3
0x222 ADD
0x223 SWAP2
0x224 ADD
0x225 PUSH2 0x20a
0x228 JUMP
---
0x214: V154 = M[S0]
0x216: M[S1] = V154
0x217: V155 = 0x1f
0x219: V156 = NOT 0x1f
0x21c: V157 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x21e: V158 = 0x20
0x222: V159 = ADD 0x20 S1
0x224: V160 = ADD 0x20 S0
0x225: V161 = 0x20a
0x228: JUMP 0x20a
---
Entry stack: [V11, 0x77, V31, V141, V147, V147, V150, V148, S2, S1, S0]
Stack pops: 3
Stack additions: [V157, V159, V160]
Exit stack: [V11, 0x77, V31, V141, V147, V147, V150, V148, V157, V159, V160]

================================

Block 0x229
[0x229:0x260]
---
Predecessors: [0x20a]
Successors: [0x261, 0x29f]
---
0x229 JUMPDEST
0x22a MLOAD
0x22b DUP2
0x22c MLOAD
0x22d PUSH1 0x20
0x22f SWAP4
0x230 SWAP1
0x231 SWAP4
0x232 SUB
0x233 PUSH2 0x100
0x236 EXP
0x237 PUSH1 0x0
0x239 NOT
0x23a ADD
0x23b DUP1
0x23c NOT
0x23d SWAP1
0x23e SWAP2
0x23f AND
0x240 SWAP3
0x241 AND
0x242 SWAP2
0x243 SWAP1
0x244 SWAP2
0x245 OR
0x246 SWAP1
0x247 MSTORE
0x248 PUSH1 0x40
0x24a MLOAD
0x24b SWAP3
0x24c ADD
0x24d DUP3
0x24e SWAP1
0x24f SUB
0x250 SWAP1
0x251 SWAP2
0x252 SHA3
0x253 PUSH1 0x0
0x255 SLOAD
0x256 EQ
0x257 ISZERO
0x258 SWAP3
0x259 POP
0x25a PUSH2 0x29f
0x25d SWAP2
0x25e POP
0x25f POP
0x260 JUMPI
---
0x229: JUMPDEST 
0x22a: V162 = M[S0]
0x22c: V163 = M[S1]
0x22d: V164 = 0x20
0x232: V165 = SUB 0x20 S2
0x233: V166 = 0x100
0x236: V167 = EXP 0x100 V165
0x237: V168 = 0x0
0x239: V169 = NOT 0x0
0x23a: V170 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V167
0x23c: V171 = NOT V170
0x23f: V172 = AND V162 V171
0x241: V173 = AND V163 V170
0x245: V174 = OR V173 V172
0x247: M[S1] = V174
0x248: V175 = 0x40
0x24a: V176 = M[0x40]
0x24c: V177 = ADD V147 V148
0x24f: V178 = SUB V177 V176
0x252: V179 = SHA3 V176 V178
0x253: V180 = 0x0
0x255: V181 = S[0x0]
0x256: V182 = EQ V181 V179
0x257: V183 = ISZERO V182
0x25a: V184 = 0x29f
0x260: JUMPI 0x29f V183
---
Entry stack: [V11, 0x77, V31, V141, V147, V147, V150, V148, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0x77, V31]

================================

Block 0x261
[0x261:0x270]
---
Predecessors: [0x229]
Successors: [0x271, 0x29f]
---
0x261 PUSH8 0xde0b6b3a7640000
0x26a CALLVALUE
0x26b GT
0x26c ISZERO
0x26d PUSH2 0x29f
0x270 JUMPI
---
0x261: V185 = 0xde0b6b3a7640000
0x26a: V186 = CALLVALUE
0x26b: V187 = GT V186 0xde0b6b3a7640000
0x26c: V188 = ISZERO V187
0x26d: V189 = 0x29f
0x270: JUMPI 0x29f V188
---
Entry stack: [V11, 0x77, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V31]

================================

Block 0x271
[0x271:0x293]
---
Predecessors: [0x261]
Successors: [0x294, 0x29d]
---
0x271 PUSH1 0x40
0x273 MLOAD
0x274 CALLER
0x275 SWAP1
0x276 ADDRESS
0x277 BALANCE
0x278 DUP1
0x279 ISZERO
0x27a PUSH2 0x8fc
0x27d MUL
0x27e SWAP2
0x27f PUSH1 0x0
0x281 DUP2
0x282 DUP2
0x283 DUP2
0x284 DUP6
0x285 DUP9
0x286 DUP9
0x287 CALL
0x288 SWAP4
0x289 POP
0x28a POP
0x28b POP
0x28c POP
0x28d ISZERO
0x28e DUP1
0x28f ISZERO
0x290 PUSH2 0x29d
0x293 JUMPI
---
0x271: V190 = 0x40
0x273: V191 = M[0x40]
0x274: V192 = CALLER
0x276: V193 = ADDRESS
0x277: V194 = BALANCE V193
0x279: V195 = ISZERO V194
0x27a: V196 = 0x8fc
0x27d: V197 = MUL 0x8fc V195
0x27f: V198 = 0x0
0x287: V199 = CALL V197 V192 V194 V191 0x0 V191 0x0
0x28d: V200 = ISZERO V199
0x28f: V201 = ISZERO V200
0x290: V202 = 0x29d
0x293: JUMPI 0x29d V201
---
Entry stack: [V11, 0x77, V31]
Stack pops: 0
Stack additions: [V200]
Exit stack: [V11, 0x77, V31, V200]

================================

Block 0x294
[0x294:0x29c]
---
Predecessors: [0x271]
Successors: []
---
0x294 RETURNDATASIZE
0x295 PUSH1 0x0
0x297 DUP1
0x298 RETURNDATACOPY
0x299 RETURNDATASIZE
0x29a PUSH1 0x0
0x29c REVERT
---
0x294: V203 = RETURNDATASIZE
0x295: V204 = 0x0
0x298: RETURNDATACOPY 0x0 0x0 V203
0x299: V205 = RETURNDATASIZE
0x29a: V206 = 0x0
0x29c: REVERT 0x0 V205
---
Entry stack: [V11, 0x77, V31, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V31, V200]

================================

Block 0x29d
[0x29d:0x29e]
---
Predecessors: [0x271]
Successors: [0x29f]
---
0x29d JUMPDEST
0x29e POP
---
0x29d: JUMPDEST 
---
Entry stack: [V11, 0x77, V31, V200]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V31]

================================

Block 0x29f
[0x29f:0x2a1]
---
Predecessors: [0x229, 0x261, 0x29d, 0x2e1, 0x3be]
Successors: [0x77]
---
0x29f JUMPDEST
0x2a0 POP
0x2a1 JUMP
---
0x29f: JUMPDEST 
0x2a1: JUMP 0x77
---
Entry stack: [V11, 0x77, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a2
[0x2a2:0x2c1]
---
Predecessors: [0xd1]
Successors: [0x2c2, 0x2c6]
---
0x2a2 JUMPDEST
0x2a3 PUSH1 0x1
0x2a5 SLOAD
0x2a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bb AND
0x2bc CALLER
0x2bd EQ
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V207 = 0x1
0x2a5: V208 = S[0x1]
0x2a6: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x2bc: V211 = CALLER
0x2bd: V212 = EQ V211 V210
0x2be: V213 = 0x2c6
0x2c1: JUMPI 0x2c6 V212
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2a2]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V214 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x2c6
[0x2c6:0x2e0]
---
Predecessors: [0x2a2]
Successors: []
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x1
0x2c9 SLOAD
0x2ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2df AND
0x2e0 SELFDESTRUCT
---
0x2c6: JUMPDEST 
0x2c7: V215 = 0x1
0x2c9: V216 = S[0x1]
0x2ca: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2e0: SELFDESTRUCT V218
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x2e1
[0x2e1:0x2ea]
---
Predecessors: [0xe6]
Successors: [0x29f, 0x2eb]
---
0x2e1 JUMPDEST
0x2e2 PUSH1 0x0
0x2e4 SLOAD
0x2e5 ISZERO
0x2e6 ISZERO
0x2e7 PUSH2 0x29f
0x2ea JUMPI
---
0x2e1: JUMPDEST 
0x2e2: V219 = 0x0
0x2e4: V220 = S[0x0]
0x2e5: V221 = ISZERO V220
0x2e6: V222 = ISZERO V221
0x2e7: V223 = 0x29f
0x2ea: JUMPI 0x29f V222
---
Entry stack: [V11, 0x77, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V60]

================================

Block 0x2eb
[0x2eb:0x2fd]
---
Predecessors: [0x2e1]
Successors: [0x2fe]
---
0x2eb DUP1
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef PUSH1 0x20
0x2f1 ADD
0x2f2 DUP1
0x2f3 DUP3
0x2f4 DUP1
0x2f5 MLOAD
0x2f6 SWAP1
0x2f7 PUSH1 0x20
0x2f9 ADD
0x2fa SWAP1
0x2fb DUP1
0x2fc DUP4
0x2fd DUP4
---
0x2ec: V224 = 0x40
0x2ee: V225 = M[0x40]
0x2ef: V226 = 0x20
0x2f1: V227 = ADD 0x20 V225
0x2f5: V228 = M[V60]
0x2f7: V229 = 0x20
0x2f9: V230 = ADD 0x20 V60
---
Entry stack: [V11, 0x77, V60]
Stack pops: 1
Stack additions: [S0, S0, V227, V227, V230, V228, V228, V227, V230]
Exit stack: [V11, 0x77, V60, V60, V227, V227, V230, V228, V228, V227, V230]

================================

Block 0x2fe
[0x2fe:0x306]
---
Predecessors: [0x2eb, 0x307]
Successors: [0x307, 0x31d]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x20
0x301 DUP4
0x302 LT
0x303 PUSH2 0x31d
0x306 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V231 = 0x20
0x302: V232 = LT S2 0x20
0x303: V233 = 0x31d
0x306: JUMPI 0x31d V232
---
Entry stack: [V11, 0x77, V60, V60, V227, V227, V230, V228, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V60, V60, V227, V227, V230, V228, S2, S1, S0]

================================

Block 0x307
[0x307:0x31c]
---
Predecessors: [0x2fe]
Successors: [0x2fe]
---
0x307 DUP1
0x308 MLOAD
0x309 DUP3
0x30a MSTORE
0x30b PUSH1 0x1f
0x30d NOT
0x30e SWAP1
0x30f SWAP3
0x310 ADD
0x311 SWAP2
0x312 PUSH1 0x20
0x314 SWAP2
0x315 DUP3
0x316 ADD
0x317 SWAP2
0x318 ADD
0x319 PUSH2 0x2fe
0x31c JUMP
---
0x308: V234 = M[S0]
0x30a: M[S1] = V234
0x30b: V235 = 0x1f
0x30d: V236 = NOT 0x1f
0x310: V237 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x312: V238 = 0x20
0x316: V239 = ADD 0x20 S1
0x318: V240 = ADD 0x20 S0
0x319: V241 = 0x2fe
0x31c: JUMP 0x2fe
---
Entry stack: [V11, 0x77, V60, V60, V227, V227, V230, V228, S2, S1, S0]
Stack pops: 3
Stack additions: [V237, V239, V240]
Exit stack: [V11, 0x77, V60, V60, V227, V227, V230, V228, V237, V239, V240]

================================

Block 0x31d
[0x31d:0x360]
---
Predecessors: [0x2fe]
Successors: [0x361]
---
0x31d JUMPDEST
0x31e PUSH1 0x1
0x320 DUP4
0x321 PUSH1 0x20
0x323 SUB
0x324 PUSH2 0x100
0x327 EXP
0x328 SUB
0x329 DUP1
0x32a NOT
0x32b DUP3
0x32c MLOAD
0x32d AND
0x32e DUP2
0x32f DUP5
0x330 MLOAD
0x331 AND
0x332 DUP1
0x333 DUP3
0x334 OR
0x335 DUP6
0x336 MSTORE
0x337 POP
0x338 POP
0x339 POP
0x33a POP
0x33b POP
0x33c POP
0x33d SWAP1
0x33e POP
0x33f ADD
0x340 SWAP2
0x341 POP
0x342 POP
0x343 PUSH1 0x40
0x345 MLOAD
0x346 PUSH1 0x20
0x348 DUP2
0x349 DUP4
0x34a SUB
0x34b SUB
0x34c DUP2
0x34d MSTORE
0x34e SWAP1
0x34f PUSH1 0x40
0x351 MSTORE
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 DUP3
0x357 DUP1
0x358 MLOAD
0x359 SWAP1
0x35a PUSH1 0x20
0x35c ADD
0x35d SWAP1
0x35e DUP1
0x35f DUP4
0x360 DUP4
---
0x31d: JUMPDEST 
0x31e: V242 = 0x1
0x321: V243 = 0x20
0x323: V244 = SUB 0x20 S2
0x324: V245 = 0x100
0x327: V246 = EXP 0x100 V244
0x328: V247 = SUB V246 0x1
0x32a: V248 = NOT V247
0x32c: V249 = M[S0]
0x32d: V250 = AND V249 V248
0x330: V251 = M[S1]
0x331: V252 = AND V251 V247
0x334: V253 = OR V250 V252
0x336: M[S1] = V253
0x33f: V254 = ADD V228 V227
0x343: V255 = 0x40
0x345: V256 = M[0x40]
0x346: V257 = 0x20
0x34a: V258 = SUB V254 V256
0x34b: V259 = SUB V258 0x20
0x34d: M[V256] = V259
0x34f: V260 = 0x40
0x351: M[0x40] = V254
0x352: V261 = 0x40
0x354: V262 = M[0x40]
0x358: V263 = M[V256]
0x35a: V264 = 0x20
0x35c: V265 = ADD 0x20 V256
---
Entry stack: [V11, 0x77, V60, V60, V227, V227, V230, V228, S2, S1, S0]
Stack pops: 8
Stack additions: [V256, V262, V262, V265, V263, V263, V262, V265]
Exit stack: [V11, 0x77, V60, V256, V262, V262, V265, V263, V263, V262, V265]

================================

Block 0x361
[0x361:0x369]
---
Predecessors: [0x31d, 0x36a]
Successors: [0x36a, 0x380]
---
0x361 JUMPDEST
0x362 PUSH1 0x20
0x364 DUP4
0x365 LT
0x366 PUSH2 0x380
0x369 JUMPI
---
0x361: JUMPDEST 
0x362: V266 = 0x20
0x365: V267 = LT S2 0x20
0x366: V268 = 0x380
0x369: JUMPI 0x380 V267
---
Entry stack: [V11, 0x77, V60, V256, V262, V262, V265, V263, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V60, V256, V262, V262, V265, V263, S2, S1, S0]

================================

Block 0x36a
[0x36a:0x37f]
---
Predecessors: [0x361]
Successors: [0x361]
---
0x36a DUP1
0x36b MLOAD
0x36c DUP3
0x36d MSTORE
0x36e PUSH1 0x1f
0x370 NOT
0x371 SWAP1
0x372 SWAP3
0x373 ADD
0x374 SWAP2
0x375 PUSH1 0x20
0x377 SWAP2
0x378 DUP3
0x379 ADD
0x37a SWAP2
0x37b ADD
0x37c PUSH2 0x361
0x37f JUMP
---
0x36b: V269 = M[S0]
0x36d: M[S1] = V269
0x36e: V270 = 0x1f
0x370: V271 = NOT 0x1f
0x373: V272 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x375: V273 = 0x20
0x379: V274 = ADD 0x20 S1
0x37b: V275 = ADD 0x20 S0
0x37c: V276 = 0x361
0x37f: JUMP 0x361
---
Entry stack: [V11, 0x77, V60, V256, V262, V262, V265, V263, S2, S1, S0]
Stack pops: 3
Stack additions: [V272, V274, V275]
Exit stack: [V11, 0x77, V60, V256, V262, V262, V265, V263, V272, V274, V275]

================================

Block 0x380
[0x380:0x3b1]
---
Predecessors: [0x361]
Successors: [0x77]
---
0x380 JUMPDEST
0x381 MLOAD
0x382 DUP2
0x383 MLOAD
0x384 PUSH1 0x20
0x386 SWAP4
0x387 SWAP1
0x388 SWAP4
0x389 SUB
0x38a PUSH2 0x100
0x38d EXP
0x38e PUSH1 0x0
0x390 NOT
0x391 ADD
0x392 DUP1
0x393 NOT
0x394 SWAP1
0x395 SWAP2
0x396 AND
0x397 SWAP3
0x398 AND
0x399 SWAP2
0x39a SWAP1
0x39b SWAP2
0x39c OR
0x39d SWAP1
0x39e MSTORE
0x39f PUSH1 0x40
0x3a1 MLOAD
0x3a2 SWAP3
0x3a3 ADD
0x3a4 DUP3
0x3a5 SWAP1
0x3a6 SUB
0x3a7 SWAP1
0x3a8 SWAP2
0x3a9 SHA3
0x3aa PUSH1 0x0
0x3ac SSTORE
0x3ad POP
0x3ae POP
0x3af POP
0x3b0 POP
0x3b1 JUMP
---
0x380: JUMPDEST 
0x381: V277 = M[S0]
0x383: V278 = M[S1]
0x384: V279 = 0x20
0x389: V280 = SUB 0x20 S2
0x38a: V281 = 0x100
0x38d: V282 = EXP 0x100 V280
0x38e: V283 = 0x0
0x390: V284 = NOT 0x0
0x391: V285 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V282
0x393: V286 = NOT V285
0x396: V287 = AND V277 V286
0x398: V288 = AND V278 V285
0x39c: V289 = OR V288 V287
0x39e: M[S1] = V289
0x39f: V290 = 0x40
0x3a1: V291 = M[0x40]
0x3a3: V292 = ADD V262 V263
0x3a6: V293 = SUB V292 V291
0x3a9: V294 = SHA3 V291 V293
0x3aa: V295 = 0x0
0x3ac: S[0x0] = V294
0x3b1: JUMP 0x77
---
Entry stack: [V11, 0x77, V60, V256, V262, V262, V265, V263, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b2
[0x3b2:0x3b7]
---
Predecessors: [0x13f]
Successors: [0x148]
---
0x3b2 JUMPDEST
0x3b3 PUSH1 0x0
0x3b5 SLOAD
0x3b6 SWAP1
0x3b7 JUMP
---
0x3b2: JUMPDEST 
0x3b3: V296 = 0x0
0x3b5: V297 = S[0x0]
0x3b7: JUMP 0x148
---
Entry stack: [V11, 0x148]
Stack pops: 1
Stack additions: [V297]
Exit stack: [V11, V297]

================================

Block 0x3b8
[0x3b8:0x3bd]
---
Predecessors: [0x166]
Successors: [0x148]
---
0x3b8 JUMPDEST
0x3b9 PUSH1 0x2
0x3bb SLOAD
0x3bc SWAP1
0x3bd JUMP
---
0x3b8: JUMPDEST 
0x3b9: V298 = 0x2
0x3bb: V299 = S[0x2]
0x3bd: JUMP 0x148
---
Entry stack: [V11, 0x148]
Stack pops: 1
Stack additions: [V299]
Exit stack: [V11, V299]

================================

Block 0x3be
[0x3be:0x3c7]
---
Predecessors: [0x17b]
Successors: [0x29f, 0x3c8]
---
0x3be JUMPDEST
0x3bf PUSH1 0x0
0x3c1 SLOAD
0x3c2 ISZERO
0x3c3 ISZERO
0x3c4 PUSH2 0x29f
0x3c7 JUMPI
---
0x3be: JUMPDEST 
0x3bf: V300 = 0x0
0x3c1: V301 = S[0x0]
0x3c2: V302 = ISZERO V301
0x3c3: V303 = ISZERO V302
0x3c4: V304 = 0x29f
0x3c7: JUMPI 0x29f V303
---
Entry stack: [V11, 0x77, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V102]

================================

Block 0x3c8
[0x3c8:0x3cb]
---
Predecessors: [0x3be]
Successors: [0x77]
---
0x3c8 PUSH1 0x0
0x3ca SSTORE
0x3cb JUMP
---
0x3c8: V305 = 0x0
0x3ca: S[0x0] = V102
0x3cb: JUMP 0x77
---
Entry stack: [V11, 0x77, V102]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3cc
[0x3cc:0x406]
---
Predecessors: []
Successors: []
---
0x3cc STOP
0x3cd LOG1
0x3ce PUSH6 0x627a7a723058
0x3d5 SHA3
0x3d6 ADDMOD
0x3d7 MISSING 0xeb
0x3d8 AND
0x3d9 MISSING 0xae
0x3da NOT
0x3db GASLIMIT
0x3dc MISSING 0x2b
0x3dd MISSING 0xc7
0x3de SWAP6
0x3df MISSING 0xc2
0x3e0 MISSING 0x26
0x3e1 SAR
0x3e2 DELEGATECALL
0x3e3 MISSING 0xd8
0x3e4 MISSING 0xd6
0x3e5 SWAP3
0x3e6 REVERT
0x3e7 PUSH9 0x9494cf7f17e9ec0a1f
0x3f1 MISSING 0xbb
0x3f2 PUSH20 0xf202860029
---
0x3cc: STOP 
0x3cd: LOG S0 S1 S2
0x3ce: V306 = 0x627a7a723058
0x3d5: V307 = SHA3 0x627a7a723058 S3
0x3d6: V308 = ADDMOD V307 S4 S5
0x3d7: MISSING 0xeb
0x3d8: V309 = AND S0 S1
0x3d9: MISSING 0xae
0x3da: V310 = NOT S0
0x3db: V311 = GASLIMIT
0x3dc: MISSING 0x2b
0x3dd: MISSING 0xc7
0x3df: MISSING 0xc2
0x3e0: MISSING 0x26
0x3e1: V312 = SAR S0 S1
0x3e2: V313 = DELEGATECALL V312 S2 S3 S4 S5 S6
0x3e3: MISSING 0xd8
0x3e4: MISSING 0xd6
0x3e6: REVERT S3 S1
0x3e7: V314 = 0x9494cf7f17e9ec0a1f
0x3f1: MISSING 0xbb
0x3f2: V315 = 0xf202860029
---
Entry stack: []
Stack pops: 0
Stack additions: [V308, V309, V311, V310, S6, S1, S2, S3, S4, S5, S0, V313, S2, S0, 0x9494cf7f17e9ec0a1f, 0xf202860029]
Exit stack: []

================================

Function 0:
Public function signature: 0x31fb67c2
Entry block: 0x79
Exit block: 0x294
Body: 0x77, 0x79, 0x187, 0x18f, 0x193, 0x1a7, 0x1b0, 0x1c6, 0x20a, 0x213, 0x229, 0x261, 0x271, 0x294, 0x29d, 0x29f

Function 1:
Public function signature: 0x52efea6e
Entry block: 0xc5
Exit block: 0x2c6
Body: 0xc5, 0xcd, 0xd1, 0x2a2, 0x2c2, 0x2c6

Function 2:
Public function signature: 0x7ccb13c4
Entry block: 0xda
Exit block: 0x77
Body: 0x77, 0xda, 0xe2, 0xe6, 0x29f, 0x2e1, 0x2eb, 0x2fe, 0x307, 0x31d, 0x361, 0x36a, 0x380

Function 3:
Public function signature: 0x95e8f3e7
Entry block: 0x133
Exit block: 0x148
Body: 0x133, 0x13b, 0x13f, 0x148, 0x3b2

Function 4:
Public function signature: 0xf43fa805
Entry block: 0x15a
Exit block: 0x148
Body: 0x148, 0x15a, 0x162, 0x166, 0x3b8

Function 5:
Public function signature: 0xf4dafe71
Entry block: 0x16f
Exit block: 0x77
Body: 0x77, 0x16f, 0x177, 0x17b, 0x29f, 0x3be, 0x3c8

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

