Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3853682c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3853682c
0x3b: V13 = EQ V11 0x3853682c
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8c]
---
0x40 DUP1
0x41 PUSH4 0x3e3ee859
0x46 EQ
0x47 PUSH2 0x8c
0x4a JUMPI
---
0x41: V15 = 0x3e3ee859
0x46: V16 = EQ 0x3e3ee859 V11
0x47: V17 = 0x8c
0x4a: JUMPI 0x8c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xd4]
---
0x4b DUP1
0x4c PUSH4 0x3fad9ae0
0x51 EQ
0x52 PUSH2 0xd4
0x55 JUMPI
---
0x4c: V18 = 0x3fad9ae0
0x51: V19 = EQ 0x3fad9ae0 V11
0x52: V20 = 0xd4
0x55: JUMPI 0xd4 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x15e]
---
0x56 DUP1
0x57 PUSH4 0x4df39c3a
0x5c EQ
0x5d PUSH2 0x15e
0x60 JUMPI
---
0x57: V21 = 0x4df39c3a
0x5c: V22 = EQ 0x4df39c3a V11
0x5d: V23 = 0x15e
0x60: JUMPI 0x15e V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1e6]
---
0x61 DUP1
0x62 PUSH4 0x59988dce
0x67 EQ
0x68 PUSH2 0x1e6
0x6b JUMPI
---
0x62: V24 = 0x59988dce
0x67: V25 = EQ 0x59988dce V11
0x68: V26 = 0x1e6
0x6b: JUMPI 0x1e6 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x205]
---
0x6c DUP1
0x6d PUSH4 0xf50ab247
0x72 EQ
0x73 PUSH2 0x205
0x76 JUMPI
---
0x6d: V27 = 0xf50ab247
0x72: V28 = EQ 0xf50ab247 V11
0x73: V29 = 0x205
0x76: JUMPI 0x205 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x2a4, 0x2d2, 0x3f3, 0x460, 0x4bb, 0x537]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]

================================

Block 0x79
[0x79:0x8b]
---
Predecessors: [0xd]
Successors: [0x20d]
---
0x79 JUMPDEST
0x7a PUSH2 0x77
0x7d PUSH1 0x4
0x7f DUP1
0x80 CALLDATALOAD
0x81 PUSH1 0x24
0x83 DUP2
0x84 ADD
0x85 SWAP2
0x86 ADD
0x87 CALLDATALOAD
0x88 PUSH2 0x20d
0x8b JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x77
0x7d: V31 = 0x4
0x80: V32 = CALLDATALOAD 0x4
0x81: V33 = 0x24
0x84: V34 = ADD V32 0x24
0x86: V35 = ADD 0x4 V32
0x87: V36 = CALLDATALOAD V35
0x88: V37 = 0x20d
0x8b: JUMP 0x20d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V34, V36]
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x8c
[0x8c:0xd3]
---
Predecessors: [0x40]
Successors: [0x2a8]
---
0x8c JUMPDEST
0x8d PUSH2 0x77
0x90 PUSH1 0x4
0x92 PUSH1 0x24
0x94 DUP2
0x95 CALLDATALOAD
0x96 DUP2
0x97 DUP2
0x98 ADD
0x99 SWAP1
0x9a DUP4
0x9b ADD
0x9c CALLDATALOAD
0x9d DUP1
0x9e PUSH1 0x20
0xa0 PUSH1 0x1f
0xa2 DUP3
0xa3 ADD
0xa4 DUP2
0xa5 SWAP1
0xa6 DIV
0xa7 DUP2
0xa8 MUL
0xa9 ADD
0xaa PUSH1 0x40
0xac MLOAD
0xad SWAP1
0xae DUP2
0xaf ADD
0xb0 PUSH1 0x40
0xb2 MSTORE
0xb3 DUP2
0xb4 DUP2
0xb5 MSTORE
0xb6 SWAP3
0xb7 SWAP2
0xb8 SWAP1
0xb9 PUSH1 0x20
0xbb DUP5
0xbc ADD
0xbd DUP4
0xbe DUP4
0xbf DUP1
0xc0 DUP3
0xc1 DUP5
0xc2 CALLDATACOPY
0xc3 POP
0xc4 SWAP5
0xc5 SWAP7
0xc6 POP
0xc7 POP
0xc8 SWAP4
0xc9 CALLDATALOAD
0xca SWAP4
0xcb POP
0xcc PUSH2 0x2a8
0xcf SWAP3
0xd0 POP
0xd1 POP
0xd2 POP
0xd3 JUMP
---
0x8c: JUMPDEST 
0x8d: V38 = 0x77
0x90: V39 = 0x4
0x92: V40 = 0x24
0x95: V41 = CALLDATALOAD 0x4
0x98: V42 = ADD V41 0x24
0x9b: V43 = ADD 0x4 V41
0x9c: V44 = CALLDATALOAD V43
0x9e: V45 = 0x20
0xa0: V46 = 0x1f
0xa3: V47 = ADD V44 0x1f
0xa6: V48 = DIV V47 0x20
0xa8: V49 = MUL 0x20 V48
0xa9: V50 = ADD V49 0x20
0xaa: V51 = 0x40
0xac: V52 = M[0x40]
0xaf: V53 = ADD V52 V50
0xb0: V54 = 0x40
0xb2: M[0x40] = V53
0xb5: M[V52] = V44
0xb9: V55 = 0x20
0xbc: V56 = ADD V52 0x20
0xc2: CALLDATACOPY V56 V42 V44
0xc9: V57 = CALLDATALOAD 0x24
0xcc: V58 = 0x2a8
0xd3: JUMP 0x2a8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V52, V57]
Exit stack: [V11, 0x77, V52, V57]

================================

Block 0xd4
[0xd4:0xda]
---
Predecessors: [0x4b]
Successors: [0xdb, 0xdf]
---
0xd4 JUMPDEST
0xd5 CALLVALUE
0xd6 ISZERO
0xd7 PUSH2 0xdf
0xda JUMPI
---
0xd4: JUMPDEST 
0xd5: V59 = CALLVALUE
0xd6: V60 = ISZERO V59
0xd7: V61 = 0xdf
0xda: JUMPI 0xdf V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdb
[0xdb:0xde]
---
Predecessors: [0xd4]
Successors: []
---
0xdb PUSH1 0x0
0xdd DUP1
0xde REVERT
---
0xdb: V62 = 0x0
0xde: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0xd4]
Successors: [0x2d9]
---
0xdf JUMPDEST
0xe0 PUSH2 0xe7
0xe3 PUSH2 0x2d9
0xe6 JUMP
---
0xdf: JUMPDEST 
0xe0: V63 = 0xe7
0xe3: V64 = 0x2d9
0xe6: JUMP 0x2d9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe7]
Exit stack: [V11, 0xe7]

================================

Block 0xe7
[0xe7:0x10a]
---
Predecessors: [0x36f]
Successors: [0x10b]
---
0xe7 JUMPDEST
0xe8 PUSH1 0x40
0xea MLOAD
0xeb PUSH1 0x20
0xed DUP1
0xee DUP3
0xef MSTORE
0xf0 DUP2
0xf1 SWAP1
0xf2 DUP2
0xf3 ADD
0xf4 DUP4
0xf5 DUP2
0xf6 DUP2
0xf7 MLOAD
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP2
0xfe POP
0xff DUP1
0x100 MLOAD
0x101 SWAP1
0x102 PUSH1 0x20
0x104 ADD
0x105 SWAP1
0x106 DUP1
0x107 DUP4
0x108 DUP4
0x109 PUSH1 0x0
---
0xe7: JUMPDEST 
0xe8: V65 = 0x40
0xea: V66 = M[0x40]
0xeb: V67 = 0x20
0xef: M[V66] = 0x20
0xf3: V68 = ADD V66 0x20
0xf7: V69 = M[V267]
0xf9: M[V68] = V69
0xfa: V70 = 0x20
0xfc: V71 = ADD 0x20 V68
0x100: V72 = M[V267]
0x102: V73 = 0x20
0x104: V74 = ADD 0x20 V267
0x109: V75 = 0x0
---
Entry stack: [V11, 0xe7, V267]
Stack pops: 1
Stack additions: [S0, V66, V66, V71, V74, V72, V72, V71, V74, 0x0]
Exit stack: [V11, 0xe7, V267, V66, V66, V71, V74, V72, V72, V71, V74, 0x0]

================================

Block 0x10b
[0x10b:0x113]
---
Predecessors: [0xe7, 0x114]
Successors: [0x114, 0x123]
---
0x10b JUMPDEST
0x10c DUP4
0x10d DUP2
0x10e LT
0x10f ISZERO
0x110 PUSH2 0x123
0x113 JUMPI
---
0x10b: JUMPDEST 
0x10e: V76 = LT S0 V72
0x10f: V77 = ISZERO V76
0x110: V78 = 0x123
0x113: JUMPI 0x123 V77
---
Entry stack: [V11, 0xe7, V267, V66, V66, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xe7, V267, V66, V66, V71, V74, V72, V72, V71, V74, S0]

================================

Block 0x114
[0x114:0x122]
---
Predecessors: [0x10b]
Successors: [0x10b]
---
0x114 DUP1
0x115 DUP3
0x116 ADD
0x117 MLOAD
0x118 DUP4
0x119 DUP3
0x11a ADD
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f PUSH2 0x10b
0x122 JUMP
---
0x116: V79 = ADD V74 S0
0x117: V80 = M[V79]
0x11a: V81 = ADD S0 V71
0x11b: M[V81] = V80
0x11c: V82 = 0x20
0x11e: V83 = ADD 0x20 S0
0x11f: V84 = 0x10b
0x122: JUMP 0x10b
---
Entry stack: [V11, 0xe7, V267, V66, V66, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 3
Stack additions: [S2, S1, V83]
Exit stack: [V11, 0xe7, V267, V66, V66, V71, V74, V72, V72, V71, V74, V83]

================================

Block 0x123
[0x123:0x136]
---
Predecessors: [0x10b]
Successors: [0x137, 0x150]
---
0x123 JUMPDEST
0x124 POP
0x125 POP
0x126 POP
0x127 POP
0x128 SWAP1
0x129 POP
0x12a SWAP1
0x12b DUP2
0x12c ADD
0x12d SWAP1
0x12e PUSH1 0x1f
0x130 AND
0x131 DUP1
0x132 ISZERO
0x133 PUSH2 0x150
0x136 JUMPI
---
0x123: JUMPDEST 
0x12c: V85 = ADD V72 V71
0x12e: V86 = 0x1f
0x130: V87 = AND 0x1f V72
0x132: V88 = ISZERO V87
0x133: V89 = 0x150
0x136: JUMPI 0x150 V88
---
Entry stack: [V11, 0xe7, V267, V66, V66, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 7
Stack additions: [V85, V87]
Exit stack: [V11, 0xe7, V267, V66, V66, V85, V87]

================================

Block 0x137
[0x137:0x14f]
---
Predecessors: [0x123]
Successors: [0x150]
---
0x137 DUP1
0x138 DUP3
0x139 SUB
0x13a DUP1
0x13b MLOAD
0x13c PUSH1 0x1
0x13e DUP4
0x13f PUSH1 0x20
0x141 SUB
0x142 PUSH2 0x100
0x145 EXP
0x146 SUB
0x147 NOT
0x148 AND
0x149 DUP2
0x14a MSTORE
0x14b PUSH1 0x20
0x14d ADD
0x14e SWAP2
0x14f POP
---
0x139: V90 = SUB V85 V87
0x13b: V91 = M[V90]
0x13c: V92 = 0x1
0x13f: V93 = 0x20
0x141: V94 = SUB 0x20 V87
0x142: V95 = 0x100
0x145: V96 = EXP 0x100 V94
0x146: V97 = SUB V96 0x1
0x147: V98 = NOT V97
0x148: V99 = AND V98 V91
0x14a: M[V90] = V99
0x14b: V100 = 0x20
0x14d: V101 = ADD 0x20 V90
---
Entry stack: [V11, 0xe7, V267, V66, V66, V85, V87]
Stack pops: 2
Stack additions: [V101, S0]
Exit stack: [V11, 0xe7, V267, V66, V66, V101, V87]

================================

Block 0x150
[0x150:0x15d]
---
Predecessors: [0x123, 0x137]
Successors: []
---
0x150 JUMPDEST
0x151 POP
0x152 SWAP3
0x153 POP
0x154 POP
0x155 POP
0x156 PUSH1 0x40
0x158 MLOAD
0x159 DUP1
0x15a SWAP2
0x15b SUB
0x15c SWAP1
0x15d RETURN
---
0x150: JUMPDEST 
0x156: V102 = 0x40
0x158: V103 = M[0x40]
0x15b: V104 = SUB S1 V103
0x15d: RETURN V103 V104
---
Entry stack: [V11, 0xe7, V267, V66, V66, S1, V87]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xe7]

================================

Block 0x15e
[0x15e:0x1e5]
---
Predecessors: [0x56]
Successors: [0x377]
---
0x15e JUMPDEST
0x15f PUSH2 0x77
0x162 PUSH1 0x4
0x164 PUSH1 0x24
0x166 DUP2
0x167 CALLDATALOAD
0x168 DUP2
0x169 DUP2
0x16a ADD
0x16b SWAP1
0x16c DUP4
0x16d ADD
0x16e CALLDATALOAD
0x16f DUP1
0x170 PUSH1 0x20
0x172 PUSH1 0x1f
0x174 DUP3
0x175 ADD
0x176 DUP2
0x177 SWAP1
0x178 DIV
0x179 DUP2
0x17a MUL
0x17b ADD
0x17c PUSH1 0x40
0x17e MLOAD
0x17f SWAP1
0x180 DUP2
0x181 ADD
0x182 PUSH1 0x40
0x184 MSTORE
0x185 DUP2
0x186 DUP2
0x187 MSTORE
0x188 SWAP3
0x189 SWAP2
0x18a SWAP1
0x18b PUSH1 0x20
0x18d DUP5
0x18e ADD
0x18f DUP4
0x190 DUP4
0x191 DUP1
0x192 DUP3
0x193 DUP5
0x194 CALLDATACOPY
0x195 DUP3
0x196 ADD
0x197 SWAP2
0x198 POP
0x199 POP
0x19a POP
0x19b POP
0x19c POP
0x19d POP
0x19e SWAP2
0x19f SWAP1
0x1a0 DUP1
0x1a1 CALLDATALOAD
0x1a2 SWAP1
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 SWAP1
0x1a7 DUP3
0x1a8 ADD
0x1a9 DUP1
0x1aa CALLDATALOAD
0x1ab SWAP1
0x1ac PUSH1 0x20
0x1ae ADD
0x1af SWAP1
0x1b0 DUP1
0x1b1 DUP1
0x1b2 PUSH1 0x1f
0x1b4 ADD
0x1b5 PUSH1 0x20
0x1b7 DUP1
0x1b8 SWAP2
0x1b9 DIV
0x1ba MUL
0x1bb PUSH1 0x20
0x1bd ADD
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 SWAP1
0x1c2 DUP2
0x1c3 ADD
0x1c4 PUSH1 0x40
0x1c6 MSTORE
0x1c7 DUP2
0x1c8 DUP2
0x1c9 MSTORE
0x1ca SWAP3
0x1cb SWAP2
0x1cc SWAP1
0x1cd PUSH1 0x20
0x1cf DUP5
0x1d0 ADD
0x1d1 DUP4
0x1d2 DUP4
0x1d3 DUP1
0x1d4 DUP3
0x1d5 DUP5
0x1d6 CALLDATACOPY
0x1d7 POP
0x1d8 SWAP5
0x1d9 SWAP7
0x1da POP
0x1db PUSH2 0x377
0x1de SWAP6
0x1df POP
0x1e0 POP
0x1e1 POP
0x1e2 POP
0x1e3 POP
0x1e4 POP
0x1e5 JUMP
---
0x15e: JUMPDEST 
0x15f: V105 = 0x77
0x162: V106 = 0x4
0x164: V107 = 0x24
0x167: V108 = CALLDATALOAD 0x4
0x16a: V109 = ADD V108 0x24
0x16d: V110 = ADD 0x4 V108
0x16e: V111 = CALLDATALOAD V110
0x170: V112 = 0x20
0x172: V113 = 0x1f
0x175: V114 = ADD V111 0x1f
0x178: V115 = DIV V114 0x20
0x17a: V116 = MUL 0x20 V115
0x17b: V117 = ADD V116 0x20
0x17c: V118 = 0x40
0x17e: V119 = M[0x40]
0x181: V120 = ADD V119 V117
0x182: V121 = 0x40
0x184: M[0x40] = V120
0x187: M[V119] = V111
0x18b: V122 = 0x20
0x18e: V123 = ADD V119 0x20
0x194: CALLDATACOPY V123 V109 V111
0x196: V124 = ADD V123 V111
0x1a1: V125 = CALLDATALOAD 0x24
0x1a3: V126 = 0x20
0x1a5: V127 = ADD 0x20 0x24
0x1a8: V128 = ADD 0x4 V125
0x1aa: V129 = CALLDATALOAD V128
0x1ac: V130 = 0x20
0x1ae: V131 = ADD 0x20 V128
0x1b2: V132 = 0x1f
0x1b4: V133 = ADD 0x1f V129
0x1b5: V134 = 0x20
0x1b9: V135 = DIV V133 0x20
0x1ba: V136 = MUL V135 0x20
0x1bb: V137 = 0x20
0x1bd: V138 = ADD 0x20 V136
0x1be: V139 = 0x40
0x1c0: V140 = M[0x40]
0x1c3: V141 = ADD V140 V138
0x1c4: V142 = 0x40
0x1c6: M[0x40] = V141
0x1c9: M[V140] = V129
0x1cd: V143 = 0x20
0x1d0: V144 = ADD V140 0x20
0x1d6: CALLDATACOPY V144 V131 V129
0x1db: V145 = 0x377
0x1e5: JUMP 0x377
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V119, V140]
Exit stack: [V11, 0x77, V119, V140]

================================

Block 0x1e6
[0x1e6:0x1ec]
---
Predecessors: [0x61]
Successors: [0x1ed, 0x1f1]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V146 = CALLVALUE
0x1e8: V147 = ISZERO V146
0x1e9: V148 = 0x1f1
0x1ec: JUMPI 0x1f1 V147
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V149 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f1
[0x1f1:0x204]
---
Predecessors: [0x1e6]
Successors: [0x420]
---
0x1f1 JUMPDEST
0x1f2 PUSH2 0x77
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd PUSH1 0x4
0x1ff CALLDATALOAD
0x200 AND
0x201 PUSH2 0x420
0x204 JUMP
---
0x1f1: JUMPDEST 
0x1f2: V150 = 0x77
0x1f5: V151 = 0x1
0x1f7: V152 = 0xa0
0x1f9: V153 = 0x2
0x1fb: V154 = EXP 0x2 0xa0
0x1fc: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fd: V156 = 0x4
0x1ff: V157 = CALLDATALOAD 0x4
0x200: V158 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x201: V159 = 0x420
0x204: JUMP 0x420
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V158]
Exit stack: [V11, 0x77, V158]

================================

Block 0x205
[0x205:0x20c]
---
Predecessors: [0x6c]
Successors: [0x463]
---
0x205 JUMPDEST
0x206 PUSH2 0x77
0x209 PUSH2 0x463
0x20c JUMP
---
0x205: JUMPDEST 
0x206: V160 = 0x77
0x209: V161 = 0x463
0x20c: JUMP 0x463
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x20d
[0x20d:0x228]
---
Predecessors: [0x79]
Successors: [0x229, 0x22d]
---
0x20d JUMPDEST
0x20e ORIGIN
0x20f PUSH1 0x1
0x211 PUSH1 0xa0
0x213 PUSH1 0x2
0x215 EXP
0x216 SUB
0x217 AND
0x218 CALLER
0x219 PUSH1 0x1
0x21b PUSH1 0xa0
0x21d PUSH1 0x2
0x21f EXP
0x220 SUB
0x221 AND
0x222 EQ
0x223 ISZERO
0x224 ISZERO
0x225 PUSH2 0x22d
0x228 JUMPI
---
0x20d: JUMPDEST 
0x20e: V162 = ORIGIN
0x20f: V163 = 0x1
0x211: V164 = 0xa0
0x213: V165 = 0x2
0x215: V166 = EXP 0x2 0xa0
0x216: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x217: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x218: V169 = CALLER
0x219: V170 = 0x1
0x21b: V171 = 0xa0
0x21d: V172 = 0x2
0x21f: V173 = EXP 0x2 0xa0
0x220: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x221: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x222: V176 = EQ V175 V168
0x223: V177 = ISZERO V176
0x224: V178 = ISZERO V177
0x225: V179 = 0x22d
0x228: JUMPI 0x22d V178
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x20d]
Successors: []
---
0x229 PUSH1 0x0
0x22b DUP1
0x22c REVERT
---
0x229: V180 = 0x0
0x22c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x22d
[0x22d:0x255]
---
Predecessors: [0x20d]
Successors: [0x256, 0x262]
---
0x22d JUMPDEST
0x22e DUP2
0x22f DUP2
0x230 PUSH1 0x40
0x232 MLOAD
0x233 DUP1
0x234 DUP4
0x235 DUP4
0x236 DUP1
0x237 DUP3
0x238 DUP5
0x239 CALLDATACOPY
0x23a DUP3
0x23b ADD
0x23c SWAP2
0x23d POP
0x23e POP
0x23f SWAP3
0x240 POP
0x241 POP
0x242 POP
0x243 PUSH1 0x40
0x245 MLOAD
0x246 SWAP1
0x247 DUP2
0x248 SWAP1
0x249 SUB
0x24a SWAP1
0x24b SHA3
0x24c PUSH1 0x2
0x24e SLOAD
0x24f EQ
0x250 DUP1
0x251 ISZERO
0x252 PUSH2 0x262
0x255 JUMPI
---
0x22d: JUMPDEST 
0x230: V181 = 0x40
0x232: V182 = M[0x40]
0x239: CALLDATACOPY V182 V34 V36
0x23b: V183 = ADD V182 V36
0x243: V184 = 0x40
0x245: V185 = M[0x40]
0x249: V186 = SUB V183 V185
0x24b: V187 = SHA3 V185 V186
0x24c: V188 = 0x2
0x24e: V189 = S[0x2]
0x24f: V190 = EQ V189 V187
0x251: V191 = ISZERO V190
0x252: V192 = 0x262
0x255: JUMPI 0x262 V191
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 2
Stack additions: [S1, S0, V190]
Exit stack: [V11, 0x77, V34, V36, V190]

================================

Block 0x256
[0x256:0x261]
---
Predecessors: [0x22d]
Successors: [0x262]
---
0x256 POP
0x257 PUSH8 0x29a2241af62c0000
0x260 CALLVALUE
0x261 GT
---
0x257: V193 = 0x29a2241af62c0000
0x260: V194 = CALLVALUE
0x261: V195 = GT V194 0x29a2241af62c0000
---
Entry stack: [V11, 0x77, V34, V36, V190]
Stack pops: 1
Stack additions: [V195]
Exit stack: [V11, 0x77, V34, V36, V195]

================================

Block 0x262
[0x262:0x267]
---
Predecessors: [0x22d, 0x256]
Successors: [0x268, 0x2a4]
---
0x262 JUMPDEST
0x263 ISZERO
0x264 PUSH2 0x2a4
0x267 JUMPI
---
0x262: JUMPDEST 
0x263: V196 = ISZERO S0
0x264: V197 = 0x2a4
0x267: JUMPI 0x2a4 V196
---
Entry stack: [V11, 0x77, V34, V36, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x268
[0x268:0x29f]
---
Predecessors: [0x262]
Successors: [0x2a0, 0x2a4]
---
0x268 CALLER
0x269 PUSH1 0x1
0x26b PUSH1 0xa0
0x26d PUSH1 0x2
0x26f EXP
0x270 SUB
0x271 AND
0x272 PUSH2 0x8fc
0x275 ADDRESS
0x276 PUSH1 0x1
0x278 PUSH1 0xa0
0x27a PUSH1 0x2
0x27c EXP
0x27d SUB
0x27e AND
0x27f BALANCE
0x280 SWAP1
0x281 DUP2
0x282 ISZERO
0x283 MUL
0x284 SWAP1
0x285 PUSH1 0x40
0x287 MLOAD
0x288 PUSH1 0x0
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP1
0x28e DUP4
0x28f SUB
0x290 DUP2
0x291 DUP6
0x292 DUP9
0x293 DUP9
0x294 CALL
0x295 SWAP4
0x296 POP
0x297 POP
0x298 POP
0x299 POP
0x29a ISZERO
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x268: V198 = CALLER
0x269: V199 = 0x1
0x26b: V200 = 0xa0
0x26d: V201 = 0x2
0x26f: V202 = EXP 0x2 0xa0
0x270: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x271: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x272: V205 = 0x8fc
0x275: V206 = ADDRESS
0x276: V207 = 0x1
0x278: V208 = 0xa0
0x27a: V209 = 0x2
0x27c: V210 = EXP 0x2 0xa0
0x27d: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27e: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x27f: V213 = BALANCE V212
0x282: V214 = ISZERO V213
0x283: V215 = MUL V214 0x8fc
0x285: V216 = 0x40
0x287: V217 = M[0x40]
0x288: V218 = 0x0
0x28a: V219 = 0x40
0x28c: V220 = M[0x40]
0x28f: V221 = SUB V217 V220
0x294: V222 = CALL V215 V204 V213 V220 V221 V220 0x0
0x29a: V223 = ISZERO V222
0x29b: V224 = ISZERO V223
0x29c: V225 = 0x2a4
0x29f: JUMPI 0x2a4 V224
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x268]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V226 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x262, 0x268, 0x2a8, 0x377]
Successors: [0x77]
---
0x2a4 JUMPDEST
0x2a5 POP
0x2a6 POP
0x2a7 JUMP
---
0x2a4: JUMPDEST 
0x2a7: JUMP 0x77
---
Entry stack: [V11, 0x77, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a8
[0x2a8:0x2bf]
---
Predecessors: [0x8c]
Successors: [0x2a4, 0x2c0]
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x1
0x2ab SLOAD
0x2ac CALLER
0x2ad PUSH1 0x1
0x2af PUSH1 0xa0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 SUB
0x2b5 SWAP1
0x2b6 DUP2
0x2b7 AND
0x2b8 SWAP2
0x2b9 AND
0x2ba EQ
0x2bb ISZERO
0x2bc PUSH2 0x2a4
0x2bf JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V227 = 0x1
0x2ab: V228 = S[0x1]
0x2ac: V229 = CALLER
0x2ad: V230 = 0x1
0x2af: V231 = 0xa0
0x2b1: V232 = 0x2
0x2b3: V233 = EXP 0x2 0xa0
0x2b4: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b7: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x2b9: V236 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x2ba: V237 = EQ V236 V235
0x2bb: V238 = ISZERO V237
0x2bc: V239 = 0x2a4
0x2bf: JUMPI 0x2a4 V238
---
Entry stack: [V11, 0x77, V52, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V52, V57]

================================

Block 0x2c0
[0x2c0:0x2d1]
---
Predecessors: [0x2a8]
Successors: [0x4bd]
---
0x2c0 PUSH1 0x0
0x2c2 DUP3
0x2c3 DUP1
0x2c4 MLOAD
0x2c5 PUSH2 0x2d2
0x2c8 SWAP3
0x2c9 SWAP2
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd SWAP1
0x2ce PUSH2 0x4bd
0x2d1 JUMP
---
0x2c0: V240 = 0x0
0x2c4: V241 = M[V52]
0x2c5: V242 = 0x2d2
0x2ca: V243 = 0x20
0x2cc: V244 = ADD 0x20 V52
0x2ce: V245 = 0x4bd
0x2d1: JUMP 0x4bd
---
Entry stack: [V11, 0x77, V52, V57]
Stack pops: 2
Stack additions: [S1, S0, 0x2d2, 0x0, V244, V241]
Exit stack: [V11, 0x77, V52, V57, 0x2d2, 0x0, V244, V241]

================================

Block 0x2d2
[0x2d2:0x2d8]
---
Predecessors: [0x2d2, 0x3f3, 0x537]
Successors: [0x77, 0x2d2, 0x3f3]
---
0x2d2 JUMPDEST
0x2d3 POP
0x2d4 PUSH1 0x2
0x2d6 SSTORE
0x2d7 POP
0x2d8 JUMP
---
0x2d2: JUMPDEST 
0x2d4: V246 = 0x2
0x2d6: S[0x2] = S1
0x2d8: JUMP S3
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, S5, S4]

================================

Block 0x2d9
[0x2d9:0x328]
---
Predecessors: [0xdf]
Successors: [0x329, 0x36f]
---
0x2d9 JUMPDEST
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd SLOAD
0x2de PUSH1 0x1
0x2e0 DUP2
0x2e1 PUSH1 0x1
0x2e3 AND
0x2e4 ISZERO
0x2e5 PUSH2 0x100
0x2e8 MUL
0x2e9 SUB
0x2ea AND
0x2eb PUSH1 0x2
0x2ed SWAP1
0x2ee DIV
0x2ef DUP1
0x2f0 PUSH1 0x1f
0x2f2 ADD
0x2f3 PUSH1 0x20
0x2f5 DUP1
0x2f6 SWAP2
0x2f7 DIV
0x2f8 MUL
0x2f9 PUSH1 0x20
0x2fb ADD
0x2fc PUSH1 0x40
0x2fe MLOAD
0x2ff SWAP1
0x300 DUP2
0x301 ADD
0x302 PUSH1 0x40
0x304 MSTORE
0x305 DUP1
0x306 SWAP3
0x307 SWAP2
0x308 SWAP1
0x309 DUP2
0x30a DUP2
0x30b MSTORE
0x30c PUSH1 0x20
0x30e ADD
0x30f DUP3
0x310 DUP1
0x311 SLOAD
0x312 PUSH1 0x1
0x314 DUP2
0x315 PUSH1 0x1
0x317 AND
0x318 ISZERO
0x319 PUSH2 0x100
0x31c MUL
0x31d SUB
0x31e AND
0x31f PUSH1 0x2
0x321 SWAP1
0x322 DIV
0x323 DUP1
0x324 ISZERO
0x325 PUSH2 0x36f
0x328 JUMPI
---
0x2d9: JUMPDEST 
0x2da: V247 = 0x0
0x2dd: V248 = S[0x0]
0x2de: V249 = 0x1
0x2e1: V250 = 0x1
0x2e3: V251 = AND 0x1 V248
0x2e4: V252 = ISZERO V251
0x2e5: V253 = 0x100
0x2e8: V254 = MUL 0x100 V252
0x2e9: V255 = SUB V254 0x1
0x2ea: V256 = AND V255 V248
0x2eb: V257 = 0x2
0x2ee: V258 = DIV V256 0x2
0x2f0: V259 = 0x1f
0x2f2: V260 = ADD 0x1f V258
0x2f3: V261 = 0x20
0x2f7: V262 = DIV V260 0x20
0x2f8: V263 = MUL V262 0x20
0x2f9: V264 = 0x20
0x2fb: V265 = ADD 0x20 V263
0x2fc: V266 = 0x40
0x2fe: V267 = M[0x40]
0x301: V268 = ADD V267 V265
0x302: V269 = 0x40
0x304: M[0x40] = V268
0x30b: M[V267] = V258
0x30c: V270 = 0x20
0x30e: V271 = ADD 0x20 V267
0x311: V272 = S[0x0]
0x312: V273 = 0x1
0x315: V274 = 0x1
0x317: V275 = AND 0x1 V272
0x318: V276 = ISZERO V275
0x319: V277 = 0x100
0x31c: V278 = MUL 0x100 V276
0x31d: V279 = SUB V278 0x1
0x31e: V280 = AND V279 V272
0x31f: V281 = 0x2
0x322: V282 = DIV V280 0x2
0x324: V283 = ISZERO V282
0x325: V284 = 0x36f
0x328: JUMPI 0x36f V283
---
Entry stack: [V11, 0xe7]
Stack pops: 0
Stack additions: [V267, 0x0, V258, V271, 0x0, V282]
Exit stack: [V11, 0xe7, V267, 0x0, V258, V271, 0x0, V282]

================================

Block 0x329
[0x329:0x330]
---
Predecessors: [0x2d9]
Successors: [0x331, 0x344]
---
0x329 DUP1
0x32a PUSH1 0x1f
0x32c LT
0x32d PUSH2 0x344
0x330 JUMPI
---
0x32a: V285 = 0x1f
0x32c: V286 = LT 0x1f V282
0x32d: V287 = 0x344
0x330: JUMPI 0x344 V286
---
Entry stack: [V11, 0xe7, V267, 0x0, V258, V271, 0x0, V282]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe7, V267, 0x0, V258, V271, 0x0, V282]

================================

Block 0x331
[0x331:0x343]
---
Predecessors: [0x329]
Successors: [0x36f]
---
0x331 PUSH2 0x100
0x334 DUP1
0x335 DUP4
0x336 SLOAD
0x337 DIV
0x338 MUL
0x339 DUP4
0x33a MSTORE
0x33b SWAP2
0x33c PUSH1 0x20
0x33e ADD
0x33f SWAP2
0x340 PUSH2 0x36f
0x343 JUMP
---
0x331: V288 = 0x100
0x336: V289 = S[0x0]
0x337: V290 = DIV V289 0x100
0x338: V291 = MUL V290 0x100
0x33a: M[V271] = V291
0x33c: V292 = 0x20
0x33e: V293 = ADD 0x20 V271
0x340: V294 = 0x36f
0x343: JUMP 0x36f
---
Entry stack: [V11, 0xe7, V267, 0x0, V258, V271, 0x0, V282]
Stack pops: 3
Stack additions: [V293, S1, S0]
Exit stack: [V11, 0xe7, V267, 0x0, V258, V293, 0x0, V282]

================================

Block 0x344
[0x344:0x351]
---
Predecessors: [0x329]
Successors: [0x352]
---
0x344 JUMPDEST
0x345 DUP3
0x346 ADD
0x347 SWAP2
0x348 SWAP1
0x349 PUSH1 0x0
0x34b MSTORE
0x34c PUSH1 0x20
0x34e PUSH1 0x0
0x350 SHA3
0x351 SWAP1
---
0x344: JUMPDEST 
0x346: V295 = ADD V271 V282
0x349: V296 = 0x0
0x34b: M[0x0] = 0x0
0x34c: V297 = 0x20
0x34e: V298 = 0x0
0x350: V299 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xe7, V267, 0x0, V258, V271, 0x0, V282]
Stack pops: 3
Stack additions: [V295, V299, S2]
Exit stack: [V11, 0xe7, V267, 0x0, V258, V295, V299, V271]

================================

Block 0x352
[0x352:0x365]
---
Predecessors: [0x344, 0x352]
Successors: [0x352, 0x366]
---
0x352 JUMPDEST
0x353 DUP2
0x354 SLOAD
0x355 DUP2
0x356 MSTORE
0x357 SWAP1
0x358 PUSH1 0x1
0x35a ADD
0x35b SWAP1
0x35c PUSH1 0x20
0x35e ADD
0x35f DUP1
0x360 DUP4
0x361 GT
0x362 PUSH2 0x352
0x365 JUMPI
---
0x352: JUMPDEST 
0x354: V300 = S[S1]
0x356: M[S0] = V300
0x358: V301 = 0x1
0x35a: V302 = ADD 0x1 S1
0x35c: V303 = 0x20
0x35e: V304 = ADD 0x20 S0
0x361: V305 = GT V295 V304
0x362: V306 = 0x352
0x365: JUMPI 0x352 V305
---
Entry stack: [V11, 0xe7, V267, 0x0, V258, V295, S1, S0]
Stack pops: 3
Stack additions: [S2, V302, V304]
Exit stack: [V11, 0xe7, V267, 0x0, V258, V295, V302, V304]

================================

Block 0x366
[0x366:0x36e]
---
Predecessors: [0x352]
Successors: [0x36f]
---
0x366 DUP3
0x367 SWAP1
0x368 SUB
0x369 PUSH1 0x1f
0x36b AND
0x36c DUP3
0x36d ADD
0x36e SWAP2
---
0x368: V307 = SUB V304 V295
0x369: V308 = 0x1f
0x36b: V309 = AND 0x1f V307
0x36d: V310 = ADD V295 V309
---
Entry stack: [V11, 0xe7, V267, 0x0, V258, V295, V302, V304]
Stack pops: 3
Stack additions: [V310, S1, S2]
Exit stack: [V11, 0xe7, V267, 0x0, V258, V310, V302, V295]

================================

Block 0x36f
[0x36f:0x376]
---
Predecessors: [0x2d9, 0x331, 0x366]
Successors: [0xe7]
---
0x36f JUMPDEST
0x370 POP
0x371 POP
0x372 POP
0x373 POP
0x374 POP
0x375 DUP2
0x376 JUMP
---
0x36f: JUMPDEST 
0x376: JUMP 0xe7
---
Entry stack: [V11, 0xe7, V267, 0x0, V258, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xe7, V267]

================================

Block 0x377
[0x377:0x380]
---
Predecessors: [0x15e]
Successors: [0x2a4, 0x381]
---
0x377 JUMPDEST
0x378 PUSH1 0x2
0x37a SLOAD
0x37b ISZERO
0x37c ISZERO
0x37d PUSH2 0x2a4
0x380 JUMPI
---
0x377: JUMPDEST 
0x378: V311 = 0x2
0x37a: V312 = S[0x2]
0x37b: V313 = ISZERO V312
0x37c: V314 = ISZERO V313
0x37d: V315 = 0x2a4
0x380: JUMPI 0x2a4 V314
---
Entry stack: [V11, 0x77, V119, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V119, V140]

================================

Block 0x381
[0x381:0x390]
---
Predecessors: [0x377]
Successors: [0x391]
---
0x381 DUP1
0x382 PUSH1 0x40
0x384 MLOAD
0x385 DUP1
0x386 DUP3
0x387 DUP1
0x388 MLOAD
0x389 SWAP1
0x38a PUSH1 0x20
0x38c ADD
0x38d SWAP1
0x38e DUP1
0x38f DUP4
0x390 DUP4
---
0x382: V316 = 0x40
0x384: V317 = M[0x40]
0x388: V318 = M[V140]
0x38a: V319 = 0x20
0x38c: V320 = ADD 0x20 V140
---
Entry stack: [V11, 0x77, V119, V140]
Stack pops: 1
Stack additions: [S0, S0, V317, V317, V320, V318, V318, V317, V320]
Exit stack: [V11, 0x77, V119, V140, V140, V317, V317, V320, V318, V318, V317, V320]

================================

Block 0x391
[0x391:0x399]
---
Predecessors: [0x381, 0x39a]
Successors: [0x39a, 0x3b0]
---
0x391 JUMPDEST
0x392 PUSH1 0x20
0x394 DUP4
0x395 LT
0x396 PUSH2 0x3b0
0x399 JUMPI
---
0x391: JUMPDEST 
0x392: V321 = 0x20
0x395: V322 = LT S2 0x20
0x396: V323 = 0x3b0
0x399: JUMPI 0x3b0 V322
---
Entry stack: [V11, 0x77, V119, V140, V140, V317, V317, V320, V318, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V119, V140, V140, V317, V317, V320, V318, S2, S1, S0]

================================

Block 0x39a
[0x39a:0x3af]
---
Predecessors: [0x391]
Successors: [0x391]
---
0x39a DUP1
0x39b MLOAD
0x39c DUP3
0x39d MSTORE
0x39e PUSH1 0x1f
0x3a0 NOT
0x3a1 SWAP1
0x3a2 SWAP3
0x3a3 ADD
0x3a4 SWAP2
0x3a5 PUSH1 0x20
0x3a7 SWAP2
0x3a8 DUP3
0x3a9 ADD
0x3aa SWAP2
0x3ab ADD
0x3ac PUSH2 0x391
0x3af JUMP
---
0x39b: V324 = M[S0]
0x39d: M[S1] = V324
0x39e: V325 = 0x1f
0x3a0: V326 = NOT 0x1f
0x3a3: V327 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3a5: V328 = 0x20
0x3a9: V329 = ADD 0x20 S1
0x3ab: V330 = ADD 0x20 S0
0x3ac: V331 = 0x391
0x3af: JUMP 0x391
---
Entry stack: [V11, 0x77, V119, V140, V140, V317, V317, V320, V318, S2, S1, S0]
Stack pops: 3
Stack additions: [V327, V329, V330]
Exit stack: [V11, 0x77, V119, V140, V140, V317, V317, V320, V318, V327, V329, V330]

================================

Block 0x3b0
[0x3b0:0x3f2]
---
Predecessors: [0x391]
Successors: [0x4bd]
---
0x3b0 JUMPDEST
0x3b1 PUSH1 0x1
0x3b3 DUP4
0x3b4 PUSH1 0x20
0x3b6 SUB
0x3b7 PUSH2 0x100
0x3ba EXP
0x3bb SUB
0x3bc DUP1
0x3bd NOT
0x3be DUP3
0x3bf MLOAD
0x3c0 AND
0x3c1 DUP2
0x3c2 DUP5
0x3c3 MLOAD
0x3c4 AND
0x3c5 OR
0x3c6 SWAP1
0x3c7 SWAP3
0x3c8 MSTORE
0x3c9 POP
0x3ca POP
0x3cb POP
0x3cc SWAP2
0x3cd SWAP1
0x3ce SWAP2
0x3cf ADD
0x3d0 SWAP3
0x3d1 POP
0x3d2 PUSH1 0x40
0x3d4 SWAP2
0x3d5 POP
0x3d6 POP
0x3d7 MLOAD
0x3d8 SWAP1
0x3d9 DUP2
0x3da SWAP1
0x3db SUB
0x3dc SWAP1
0x3dd SHA3
0x3de PUSH1 0x2
0x3e0 SSTORE
0x3e1 PUSH1 0x0
0x3e3 DUP3
0x3e4 DUP1
0x3e5 MLOAD
0x3e6 PUSH2 0x3f3
0x3e9 SWAP3
0x3ea SWAP2
0x3eb PUSH1 0x20
0x3ed ADD
0x3ee SWAP1
0x3ef PUSH2 0x4bd
0x3f2 JUMP
---
0x3b0: JUMPDEST 
0x3b1: V332 = 0x1
0x3b4: V333 = 0x20
0x3b6: V334 = SUB 0x20 S2
0x3b7: V335 = 0x100
0x3ba: V336 = EXP 0x100 V334
0x3bb: V337 = SUB V336 0x1
0x3bd: V338 = NOT V337
0x3bf: V339 = M[S0]
0x3c0: V340 = AND V339 V338
0x3c3: V341 = M[S1]
0x3c4: V342 = AND V341 V337
0x3c5: V343 = OR V342 V340
0x3c8: M[S1] = V343
0x3cf: V344 = ADD V318 V317
0x3d2: V345 = 0x40
0x3d7: V346 = M[0x40]
0x3db: V347 = SUB V344 V346
0x3dd: V348 = SHA3 V346 V347
0x3de: V349 = 0x2
0x3e0: S[0x2] = V348
0x3e1: V350 = 0x0
0x3e5: V351 = M[V119]
0x3e6: V352 = 0x3f3
0x3eb: V353 = 0x20
0x3ed: V354 = ADD 0x20 V119
0x3ef: V355 = 0x4bd
0x3f2: JUMP 0x4bd
---
Entry stack: [V11, 0x77, V119, V140, V140, V317, V317, V320, V318, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x3f3, 0x0, V354, V351]
Exit stack: [V11, 0x77, V119, V140, 0x3f3, 0x0, V354, V351]

================================

Block 0x3f3
[0x3f3:0x41f]
---
Predecessors: [0x2d2, 0x3f3, 0x537]
Successors: [0x77, 0x2d2, 0x3f3]
---
0x3f3 JUMPDEST
0x3f4 POP
0x3f5 POP
0x3f6 PUSH1 0x1
0x3f8 DUP1
0x3f9 SLOAD
0x3fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40f NOT
0x410 AND
0x411 CALLER
0x412 PUSH1 0x1
0x414 PUSH1 0xa0
0x416 PUSH1 0x2
0x418 EXP
0x419 SUB
0x41a AND
0x41b OR
0x41c SWAP1
0x41d SSTORE
0x41e POP
0x41f JUMP
---
0x3f3: JUMPDEST 
0x3f6: V356 = 0x1
0x3f9: V357 = S[0x1]
0x3fa: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V359 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x410: V360 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V357
0x411: V361 = CALLER
0x412: V362 = 0x1
0x414: V363 = 0xa0
0x416: V364 = 0x2
0x418: V365 = EXP 0x2 0xa0
0x419: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41a: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x41b: V368 = OR V367 V360
0x41d: S[0x1] = V368
0x41f: JUMP S3
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, S5, S4]

================================

Block 0x420
[0x420:0x437]
---
Predecessors: [0x1f1]
Successors: [0x438, 0x460]
---
0x420 JUMPDEST
0x421 PUSH1 0x1
0x423 SLOAD
0x424 CALLER
0x425 PUSH1 0x1
0x427 PUSH1 0xa0
0x429 PUSH1 0x2
0x42b EXP
0x42c SUB
0x42d SWAP1
0x42e DUP2
0x42f AND
0x430 SWAP2
0x431 AND
0x432 EQ
0x433 ISZERO
0x434 PUSH2 0x460
0x437 JUMPI
---
0x420: JUMPDEST 
0x421: V369 = 0x1
0x423: V370 = S[0x1]
0x424: V371 = CALLER
0x425: V372 = 0x1
0x427: V373 = 0xa0
0x429: V374 = 0x2
0x42b: V375 = EXP 0x2 0xa0
0x42c: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42f: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x431: V378 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x432: V379 = EQ V378 V377
0x433: V380 = ISZERO V379
0x434: V381 = 0x460
0x437: JUMPI 0x460 V380
---
Entry stack: [V11, 0x77, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V158]

================================

Block 0x438
[0x438:0x45f]
---
Predecessors: [0x420]
Successors: [0x460]
---
0x438 PUSH1 0x1
0x43a DUP1
0x43b SLOAD
0x43c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x451 NOT
0x452 AND
0x453 PUSH1 0x1
0x455 PUSH1 0xa0
0x457 PUSH1 0x2
0x459 EXP
0x45a SUB
0x45b DUP4
0x45c AND
0x45d OR
0x45e SWAP1
0x45f SSTORE
---
0x438: V382 = 0x1
0x43b: V383 = S[0x1]
0x43c: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x451: V385 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x452: V386 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V383
0x453: V387 = 0x1
0x455: V388 = 0xa0
0x457: V389 = 0x2
0x459: V390 = EXP 0x2 0xa0
0x45a: V391 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45c: V392 = AND V158 0xffffffffffffffffffffffffffffffffffffffff
0x45d: V393 = OR V392 V386
0x45f: S[0x1] = V393
---
Entry stack: [V11, 0x77, V158]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V158]

================================

Block 0x460
[0x460:0x462]
---
Predecessors: [0x420, 0x438]
Successors: [0x77]
---
0x460 JUMPDEST
0x461 POP
0x462 JUMP
---
0x460: JUMPDEST 
0x462: JUMP 0x77
---
Entry stack: [V11, 0x77, V158]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x463
[0x463:0x479]
---
Predecessors: [0x205]
Successors: [0x47a, 0x47e]
---
0x463 JUMPDEST
0x464 PUSH1 0x1
0x466 SLOAD
0x467 CALLER
0x468 PUSH1 0x1
0x46a PUSH1 0xa0
0x46c PUSH1 0x2
0x46e EXP
0x46f SUB
0x470 SWAP1
0x471 DUP2
0x472 AND
0x473 SWAP2
0x474 AND
0x475 EQ
0x476 PUSH2 0x47e
0x479 JUMPI
---
0x463: JUMPDEST 
0x464: V394 = 0x1
0x466: V395 = S[0x1]
0x467: V396 = CALLER
0x468: V397 = 0x1
0x46a: V398 = 0xa0
0x46c: V399 = 0x2
0x46e: V400 = EXP 0x2 0xa0
0x46f: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x472: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x474: V403 = AND V395 0xffffffffffffffffffffffffffffffffffffffff
0x475: V404 = EQ V403 V402
0x476: V405 = 0x47e
0x479: JUMPI 0x47e V404
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x47a
[0x47a:0x47d]
---
Predecessors: [0x463]
Successors: []
---
0x47a PUSH1 0x0
0x47c DUP1
0x47d REVERT
---
0x47a: V406 = 0x0
0x47d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x47e
[0x47e:0x4b6]
---
Predecessors: [0x463]
Successors: [0x4b7, 0x4bb]
---
0x47e JUMPDEST
0x47f CALLER
0x480 PUSH1 0x1
0x482 PUSH1 0xa0
0x484 PUSH1 0x2
0x486 EXP
0x487 SUB
0x488 AND
0x489 PUSH2 0x8fc
0x48c ADDRESS
0x48d PUSH1 0x1
0x48f PUSH1 0xa0
0x491 PUSH1 0x2
0x493 EXP
0x494 SUB
0x495 AND
0x496 BALANCE
0x497 SWAP1
0x498 DUP2
0x499 ISZERO
0x49a MUL
0x49b SWAP1
0x49c PUSH1 0x40
0x49e MLOAD
0x49f PUSH1 0x0
0x4a1 PUSH1 0x40
0x4a3 MLOAD
0x4a4 DUP1
0x4a5 DUP4
0x4a6 SUB
0x4a7 DUP2
0x4a8 DUP6
0x4a9 DUP9
0x4aa DUP9
0x4ab CALL
0x4ac SWAP4
0x4ad POP
0x4ae POP
0x4af POP
0x4b0 POP
0x4b1 ISZERO
0x4b2 ISZERO
0x4b3 PUSH2 0x4bb
0x4b6 JUMPI
---
0x47e: JUMPDEST 
0x47f: V407 = CALLER
0x480: V408 = 0x1
0x482: V409 = 0xa0
0x484: V410 = 0x2
0x486: V411 = EXP 0x2 0xa0
0x487: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x488: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x489: V414 = 0x8fc
0x48c: V415 = ADDRESS
0x48d: V416 = 0x1
0x48f: V417 = 0xa0
0x491: V418 = 0x2
0x493: V419 = EXP 0x2 0xa0
0x494: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x495: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x496: V422 = BALANCE V421
0x499: V423 = ISZERO V422
0x49a: V424 = MUL V423 0x8fc
0x49c: V425 = 0x40
0x49e: V426 = M[0x40]
0x49f: V427 = 0x0
0x4a1: V428 = 0x40
0x4a3: V429 = M[0x40]
0x4a6: V430 = SUB V426 V429
0x4ab: V431 = CALL V424 V413 V422 V429 V430 V429 0x0
0x4b1: V432 = ISZERO V431
0x4b2: V433 = ISZERO V432
0x4b3: V434 = 0x4bb
0x4b6: JUMPI 0x4bb V433
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x4b7
[0x4b7:0x4ba]
---
Predecessors: [0x47e]
Successors: []
---
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba REVERT
---
0x4b7: V435 = 0x0
0x4ba: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x4bb
[0x4bb:0x4bc]
---
Predecessors: [0x47e]
Successors: [0x77]
---
0x4bb JUMPDEST
0x4bc JUMP
---
0x4bb: JUMPDEST 
0x4bc: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4bd
[0x4bd:0x4ed]
---
Predecessors: [0x2c0, 0x3b0]
Successors: [0x4ee, 0x4fe]
---
0x4bd JUMPDEST
0x4be DUP3
0x4bf DUP1
0x4c0 SLOAD
0x4c1 PUSH1 0x1
0x4c3 DUP2
0x4c4 PUSH1 0x1
0x4c6 AND
0x4c7 ISZERO
0x4c8 PUSH2 0x100
0x4cb MUL
0x4cc SUB
0x4cd AND
0x4ce PUSH1 0x2
0x4d0 SWAP1
0x4d1 DIV
0x4d2 SWAP1
0x4d3 PUSH1 0x0
0x4d5 MSTORE
0x4d6 PUSH1 0x20
0x4d8 PUSH1 0x0
0x4da SHA3
0x4db SWAP1
0x4dc PUSH1 0x1f
0x4de ADD
0x4df PUSH1 0x20
0x4e1 SWAP1
0x4e2 DIV
0x4e3 DUP2
0x4e4 ADD
0x4e5 SWAP3
0x4e6 DUP3
0x4e7 PUSH1 0x1f
0x4e9 LT
0x4ea PUSH2 0x4fe
0x4ed JUMPI
---
0x4bd: JUMPDEST 
0x4c0: V436 = S[0x0]
0x4c1: V437 = 0x1
0x4c4: V438 = 0x1
0x4c6: V439 = AND 0x1 V436
0x4c7: V440 = ISZERO V439
0x4c8: V441 = 0x100
0x4cb: V442 = MUL 0x100 V440
0x4cc: V443 = SUB V442 0x1
0x4cd: V444 = AND V443 V436
0x4ce: V445 = 0x2
0x4d1: V446 = DIV V444 0x2
0x4d3: V447 = 0x0
0x4d5: M[0x0] = 0x0
0x4d6: V448 = 0x20
0x4d8: V449 = 0x0
0x4da: V450 = SHA3 0x0 0x20
0x4dc: V451 = 0x1f
0x4de: V452 = ADD 0x1f V446
0x4df: V453 = 0x20
0x4e2: V454 = DIV V452 0x20
0x4e4: V455 = ADD V450 V454
0x4e7: V456 = 0x1f
0x4e9: V457 = LT 0x1f S0
0x4ea: V458 = 0x4fe
0x4ed: JUMPI 0x4fe V457
---
Entry stack: [V11, 0x77, S5, S4, {0x2d2, 0x3f3}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V455, S0, V450, S1]
Exit stack: [V11, 0x77, S5, S4, {0x2d2, 0x3f3}, 0x0, V455, S0, V450, S1]

================================

Block 0x4ee
[0x4ee:0x4fd]
---
Predecessors: [0x4bd]
Successors: [0x52b]
---
0x4ee DUP1
0x4ef MLOAD
0x4f0 PUSH1 0xff
0x4f2 NOT
0x4f3 AND
0x4f4 DUP4
0x4f5 DUP1
0x4f6 ADD
0x4f7 OR
0x4f8 DUP6
0x4f9 SSTORE
0x4fa PUSH2 0x52b
0x4fd JUMP
---
0x4ef: V459 = M[S0]
0x4f0: V460 = 0xff
0x4f2: V461 = NOT 0xff
0x4f3: V462 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V459
0x4f6: V463 = ADD S2 S2
0x4f7: V464 = OR V463 V462
0x4f9: S[0x0] = V464
0x4fa: V465 = 0x52b
0x4fd: JUMP 0x52b
---
Entry stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, V455, S2, V450, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, V455, S2, V450, S0]

================================

Block 0x4fe
[0x4fe:0x50c]
---
Predecessors: [0x4bd]
Successors: [0x50d, 0x52b]
---
0x4fe JUMPDEST
0x4ff DUP3
0x500 DUP1
0x501 ADD
0x502 PUSH1 0x1
0x504 ADD
0x505 DUP6
0x506 SSTORE
0x507 DUP3
0x508 ISZERO
0x509 PUSH2 0x52b
0x50c JUMPI
---
0x4fe: JUMPDEST 
0x501: V466 = ADD S2 S2
0x502: V467 = 0x1
0x504: V468 = ADD 0x1 V466
0x506: S[0x0] = V468
0x508: V469 = ISZERO S2
0x509: V470 = 0x52b
0x50c: JUMPI 0x52b V469
---
Entry stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, V455, S2, V450, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, V455, S2, V450, S0]

================================

Block 0x50d
[0x50d:0x50f]
---
Predecessors: [0x4fe]
Successors: [0x510]
---
0x50d SWAP2
0x50e DUP3
0x50f ADD
---
0x50f: V471 = ADD S0 S2
---
Entry stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, V455, S2, V450, S0]
Stack pops: 3
Stack additions: [S0, S1, V471]
Exit stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, V455, S0, V450, V471]

================================

Block 0x510
[0x510:0x518]
---
Predecessors: [0x50d, 0x519]
Successors: [0x519, 0x52b]
---
0x510 JUMPDEST
0x511 DUP3
0x512 DUP2
0x513 GT
0x514 ISZERO
0x515 PUSH2 0x52b
0x518 JUMPI
---
0x510: JUMPDEST 
0x513: V472 = GT V471 S2
0x514: V473 = ISZERO V472
0x515: V474 = 0x52b
0x518: JUMPI 0x52b V473
---
Entry stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, V455, S2, S1, V471]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, V455, S2, S1, V471]

================================

Block 0x519
[0x519:0x52a]
---
Predecessors: [0x510]
Successors: [0x510]
---
0x519 DUP3
0x51a MLOAD
0x51b DUP3
0x51c SSTORE
0x51d SWAP2
0x51e PUSH1 0x20
0x520 ADD
0x521 SWAP2
0x522 SWAP1
0x523 PUSH1 0x1
0x525 ADD
0x526 SWAP1
0x527 PUSH2 0x510
0x52a JUMP
---
0x51a: V475 = M[S2]
0x51c: S[S1] = V475
0x51e: V476 = 0x20
0x520: V477 = ADD 0x20 S2
0x523: V478 = 0x1
0x525: V479 = ADD 0x1 S1
0x527: V480 = 0x510
0x52a: JUMP 0x510
---
Entry stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, V455, S2, S1, V471]
Stack pops: 3
Stack additions: [V477, V479, S0]
Exit stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, V455, V477, V479, V471]

================================

Block 0x52b
[0x52b:0x536]
---
Predecessors: [0x4ee, 0x4fe, 0x510]
Successors: [0x53b]
---
0x52b JUMPDEST
0x52c POP
0x52d PUSH2 0x537
0x530 SWAP3
0x531 SWAP2
0x532 POP
0x533 PUSH2 0x53b
0x536 JUMP
---
0x52b: JUMPDEST 
0x52d: V481 = 0x537
0x533: V482 = 0x53b
0x536: JUMP 0x53b
---
Entry stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, V455, S2, S1, S0]
Stack pops: 4
Stack additions: [0x537, S3, S1]
Exit stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, 0x537, V455, S1]

================================

Block 0x537
[0x537:0x53a]
---
Predecessors: [0x541, 0x555]
Successors: [0x77, 0x2d2, 0x3f3, 0x555]
---
0x537 JUMPDEST
0x538 POP
0x539 SWAP1
0x53a JUMP
---
0x537: JUMPDEST 
0x53a: JUMP {0x77, 0x2d2, 0x3f3, 0x555}
---
Entry stack: [V11, 0x77, S7, S6, {0x77, 0x2d2, 0x3f3}, S4, S3, {0x77, 0x2d2, 0x3f3, 0x555}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x77, S7, S6, {0x77, 0x2d2, 0x3f3}, S4, S3, S1]

================================

Block 0x53b
[0x53b:0x540]
---
Predecessors: [0x52b]
Successors: [0x541]
---
0x53b JUMPDEST
0x53c PUSH2 0x555
0x53f SWAP2
0x540 SWAP1
---
0x53b: JUMPDEST 
0x53c: V483 = 0x555
---
Entry stack: [V11, 0x77, S6, S5, {0x2d2, 0x3f3}, 0x0, 0x537, V455, S0]
Stack pops: 2
Stack additions: [0x555, S1, S0]
Exit stack: [V11, 0x77, S6, S5, {0x2d2, 0x3f3}, 0x0, 0x537, 0x555, V455, S0]

================================

Block 0x541
[0x541:0x549]
---
Predecessors: [0x53b, 0x54a]
Successors: [0x537, 0x54a]
---
0x541 JUMPDEST
0x542 DUP1
0x543 DUP3
0x544 GT
0x545 ISZERO
0x546 PUSH2 0x537
0x549 JUMPI
---
0x541: JUMPDEST 
0x544: V484 = GT V455 S0
0x545: V485 = ISZERO V484
0x546: V486 = 0x537
0x549: JUMPI 0x537 V485
---
Entry stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, 0x537, 0x555, V455, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, 0x537, 0x555, V455, S0]

================================

Block 0x54a
[0x54a:0x554]
---
Predecessors: [0x541]
Successors: [0x541]
---
0x54a PUSH1 0x0
0x54c DUP2
0x54d SSTORE
0x54e PUSH1 0x1
0x550 ADD
0x551 PUSH2 0x541
0x554 JUMP
---
0x54a: V487 = 0x0
0x54d: S[S0] = 0x0
0x54e: V488 = 0x1
0x550: V489 = ADD 0x1 S0
0x551: V490 = 0x541
0x554: JUMP 0x541
---
Entry stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, 0x537, 0x555, V455, S0]
Stack pops: 1
Stack additions: [V489]
Exit stack: [V11, 0x77, S7, S6, {0x2d2, 0x3f3}, 0x0, 0x537, 0x555, V455, V489]

================================

Block 0x555
[0x555:0x557]
---
Predecessors: [0x537]
Successors: [0x537]
---
0x555 JUMPDEST
0x556 SWAP1
0x557 JUMP
---
0x555: JUMPDEST 
0x557: JUMP S1
---
Entry stack: [V11, 0x77, S5, S4, {0x77, 0x2d2, 0x3f3}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x77, S5, S4, {0x77, 0x2d2, 0x3f3}, S2, S0]

================================

Block 0x558
[0x558:0x583]
---
Predecessors: []
Successors: []
---
0x558 STOP
0x559 LOG1
0x55a PUSH6 0x627a7a723058
0x561 SHA3
0x562 MISSING 0xcf
0x563 MISSING 0x29
0x564 PUSH28 0x5c845e2a31c23a110702732cd3853c15c202aa39ec43d60ea550197b
0x581 MISSING 0xbe
0x582 STOP
0x583 MISSING 0x29
---
0x558: STOP 
0x559: LOG S0 S1 S2
0x55a: V491 = 0x627a7a723058
0x561: V492 = SHA3 0x627a7a723058 S3
0x562: MISSING 0xcf
0x563: MISSING 0x29
0x564: V493 = 0x5c845e2a31c23a110702732cd3853c15c202aa39ec43d60ea550197b
0x581: MISSING 0xbe
0x582: STOP 
0x583: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V492, 0x5c845e2a31c23a110702732cd3853c15c202aa39ec43d60ea550197b]
Exit stack: []

================================

Function 0:
Public function signature: 0x3853682c
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x20d, 0x229, 0x22d, 0x256, 0x262, 0x268, 0x2a0, 0x2a4

Function 1:
Public function signature: 0x3e3ee859
Entry block: 0x8c
Exit block: 0x77
Body: 0x77, 0x8c, 0x2a4, 0x2a8, 0x2c0, 0x2d2, 0x3f3

Function 2:
Public function signature: 0x3fad9ae0
Entry block: 0xd4
Exit block: 0x150
Body: 0xd4, 0xdb, 0xdf, 0xe7, 0x10b, 0x114, 0x123, 0x137, 0x150, 0x2d9, 0x329, 0x331, 0x344, 0x352, 0x366, 0x36f

Function 3:
Public function signature: 0x4df39c3a
Entry block: 0x15e
Exit block: 0x77
Body: 0x77, 0x15e, 0x2a4, 0x2d2, 0x377, 0x381, 0x391, 0x39a, 0x3b0, 0x3f3

Function 4:
Public function signature: 0x59988dce
Entry block: 0x1e6
Exit block: 0x77
Body: 0x77, 0x1e6, 0x1ed, 0x1f1, 0x420, 0x438, 0x460

Function 5:
Public function signature: 0xf50ab247
Entry block: 0x205
Exit block: 0x77
Body: 0x77, 0x205, 0x463, 0x47a, 0x47e, 0x4b7, 0x4bb

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x4bd
Exit block: 0x537
Body: 0x4bd, 0x4ee, 0x4fe, 0x50d, 0x510, 0x519, 0x52b, 0x537, 0x53b, 0x541, 0x54a, 0x555

