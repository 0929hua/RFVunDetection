Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x900f010
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x900f010
0x3c: V13 = EQ 0x900f010 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xaa]
---
0x41 DUP1
0x42 PUSH4 0x445df0ac
0x47 EQ
0x48 PUSH2 0xaa
0x4b JUMPI
---
0x42: V15 = 0x445df0ac
0x47: V16 = EQ 0x445df0ac V11
0x48: V17 = 0xaa
0x4b: JUMPI 0xaa V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd5]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0xd5
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0xd5
0x56: JUMPI 0xd5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x12c]
---
0x57 DUP1
0x58 PUSH4 0xfdacd576
0x5d EQ
0x5e PUSH2 0x12c
0x61 JUMPI
---
0x58: V21 = 0xfdacd576
0x5d: V22 = EQ 0xfdacd576 V11
0x5e: V23 = 0x12c
0x61: JUMPI 0x12c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0xd]
Successors: [0x6f, 0x73]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 DUP1
0x6a ISZERO
0x6b PUSH2 0x73
0x6e JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x6a: V26 = ISZERO V25
0x6b: V27 = 0x73
0x6e: JUMPI 0x73 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x6f
[0x6f:0x72]
---
Predecessors: [0x67]
Successors: []
---
0x6f PUSH1 0x0
0x71 DUP1
0x72 REVERT
---
0x6f: V28 = 0x0
0x72: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x73
[0x73:0xa7]
---
Predecessors: [0x67]
Successors: [0x159]
---
0x73 JUMPDEST
0x74 POP
0x75 PUSH2 0xa8
0x78 PUSH1 0x4
0x7a DUP1
0x7b CALLDATASIZE
0x7c SUB
0x7d DUP2
0x7e ADD
0x7f SWAP1
0x80 DUP1
0x81 DUP1
0x82 CALLDATALOAD
0x83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98 AND
0x99 SWAP1
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP1
0x9e SWAP3
0x9f SWAP2
0xa0 SWAP1
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 PUSH2 0x159
0xa7 JUMP
---
0x73: JUMPDEST 
0x75: V29 = 0xa8
0x78: V30 = 0x4
0x7b: V31 = CALLDATASIZE
0x7c: V32 = SUB V31 0x4
0x7e: V33 = ADD 0x4 V32
0x82: V34 = CALLDATALOAD 0x4
0x83: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0x98: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x9a: V37 = 0x20
0x9c: V38 = ADD 0x20 0x4
0xa4: V39 = 0x159
0xa7: JUMP 0x159
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0xa8, V36]
Exit stack: [V11, 0xa8, V36]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: [0x23d]
Successors: []
---
0xa8 JUMPDEST
0xa9 STOP
---
0xa8: JUMPDEST 
0xa9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaa
[0xaa:0xb1]
---
Predecessors: [0x41]
Successors: [0xb2, 0xb6]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac DUP1
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0xaa: JUMPDEST 
0xab: V40 = CALLVALUE
0xad: V41 = ISZERO V40
0xae: V42 = 0xb6
0xb1: JUMPI 0xb6 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V40]
Exit stack: [V11, V40]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0xaa]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V43 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V11, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V40]

================================

Block 0xb6
[0xb6:0xbe]
---
Predecessors: [0xaa]
Successors: [0x241]
---
0xb6 JUMPDEST
0xb7 POP
0xb8 PUSH2 0xbf
0xbb PUSH2 0x241
0xbe JUMP
---
0xb6: JUMPDEST 
0xb8: V44 = 0xbf
0xbb: V45 = 0x241
0xbe: JUMP 0x241
---
Entry stack: [V11, V40]
Stack pops: 1
Stack additions: [0xbf]
Exit stack: [V11, 0xbf]

================================

Block 0xbf
[0xbf:0xd4]
---
Predecessors: [0x241]
Successors: []
---
0xbf JUMPDEST
0xc0 PUSH1 0x40
0xc2 MLOAD
0xc3 DUP1
0xc4 DUP3
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0x20
0xc9 ADD
0xca SWAP2
0xcb POP
0xcc POP
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 DUP1
0xd1 SWAP2
0xd2 SUB
0xd3 SWAP1
0xd4 RETURN
---
0xbf: JUMPDEST 
0xc0: V46 = 0x40
0xc2: V47 = M[0x40]
0xc6: M[V47] = V134
0xc7: V48 = 0x20
0xc9: V49 = ADD 0x20 V47
0xcd: V50 = 0x40
0xcf: V51 = M[0x40]
0xd2: V52 = SUB V49 V51
0xd4: RETURN V51 V52
---
Entry stack: [V11, 0xbf, V134]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbf]

================================

Block 0xd5
[0xd5:0xdc]
---
Predecessors: [0x4c]
Successors: [0xdd, 0xe1]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 DUP1
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd5: JUMPDEST 
0xd6: V53 = CALLVALUE
0xd8: V54 = ISZERO V53
0xd9: V55 = 0xe1
0xdc: JUMPI 0xe1 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V53]
Exit stack: [V11, V53]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd5]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V56 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V11, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V53]

================================

Block 0xe1
[0xe1:0xe9]
---
Predecessors: [0xd5]
Successors: [0x247]
---
0xe1 JUMPDEST
0xe2 POP
0xe3 PUSH2 0xea
0xe6 PUSH2 0x247
0xe9 JUMP
---
0xe1: JUMPDEST 
0xe3: V57 = 0xea
0xe6: V58 = 0x247
0xe9: JUMP 0x247
---
Entry stack: [V11, V53]
Stack pops: 1
Stack additions: [0xea]
Exit stack: [V11, 0xea]

================================

Block 0xea
[0xea:0x12b]
---
Predecessors: [0x247]
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef DUP3
0xf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105 AND
0x106 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b AND
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP2
0x122 POP
0x123 POP
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 SWAP2
0x129 SUB
0x12a SWAP1
0x12b RETURN
---
0xea: JUMPDEST 
0xeb: V59 = 0x40
0xed: V60 = M[0x40]
0xf0: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x105: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x106: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x11d: M[V60] = V64
0x11e: V65 = 0x20
0x120: V66 = ADD 0x20 V60
0x124: V67 = 0x40
0x126: V68 = M[0x40]
0x129: V69 = SUB V66 V68
0x12b: RETURN V68 V69
---
Entry stack: [V11, 0xea, V141]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xea]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x57]
Successors: [0x134, 0x138]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e DUP1
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x12c: JUMPDEST 
0x12d: V70 = CALLVALUE
0x12f: V71 = ISZERO V70
0x130: V72 = 0x138
0x133: JUMPI 0x138 V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V70]
Exit stack: [V11, V70]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x12c]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V73 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V11, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V70]

================================

Block 0x138
[0x138:0x156]
---
Predecessors: [0x12c]
Successors: [0x26c]
---
0x138 JUMPDEST
0x139 POP
0x13a PUSH2 0x157
0x13d PUSH1 0x4
0x13f DUP1
0x140 CALLDATASIZE
0x141 SUB
0x142 DUP2
0x143 ADD
0x144 SWAP1
0x145 DUP1
0x146 DUP1
0x147 CALLDATALOAD
0x148 SWAP1
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP1
0x14d SWAP3
0x14e SWAP2
0x14f SWAP1
0x150 POP
0x151 POP
0x152 POP
0x153 PUSH2 0x26c
0x156 JUMP
---
0x138: JUMPDEST 
0x13a: V74 = 0x157
0x13d: V75 = 0x4
0x140: V76 = CALLDATASIZE
0x141: V77 = SUB V76 0x4
0x143: V78 = ADD 0x4 V77
0x147: V79 = CALLDATALOAD 0x4
0x149: V80 = 0x20
0x14b: V81 = ADD 0x20 0x4
0x153: V82 = 0x26c
0x156: JUMP 0x26c
---
Entry stack: [V11, V70]
Stack pops: 1
Stack additions: [0x157, V79]
Exit stack: [V11, 0x157, V79]

================================

Block 0x157
[0x157:0x158]
---
Predecessors: [0x2c9]
Successors: []
---
0x157 JUMPDEST
0x158 STOP
---
0x157: JUMPDEST 
0x158: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x159
[0x159:0x1b0]
---
Predecessors: [0x73]
Successors: [0x1b1, 0x23d]
---
0x159 JUMPDEST
0x15a PUSH1 0x0
0x15c DUP1
0x15d PUSH1 0x0
0x15f SWAP1
0x160 SLOAD
0x161 SWAP1
0x162 PUSH2 0x100
0x165 EXP
0x166 SWAP1
0x167 DIV
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d AND
0x17e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x193 AND
0x194 CALLER
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab EQ
0x1ac ISZERO
0x1ad PUSH2 0x23d
0x1b0 JUMPI
---
0x159: JUMPDEST 
0x15a: V83 = 0x0
0x15d: V84 = 0x0
0x160: V85 = S[0x0]
0x162: V86 = 0x100
0x165: V87 = EXP 0x100 0x0
0x167: V88 = DIV V85 0x1
0x168: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x17e: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x193: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x194: V93 = CALLER
0x195: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1ab: V96 = EQ V95 V92
0x1ac: V97 = ISZERO V96
0x1ad: V98 = 0x23d
0x1b0: JUMPI 0x23d V97
---
Entry stack: [V11, 0xa8, V36]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xa8, V36, 0x0]

================================

Block 0x1b1
[0x1b1:0x21f]
---
Predecessors: [0x159]
Successors: [0x220, 0x224]
---
0x1b1 DUP2
0x1b2 SWAP1
0x1b3 POP
0x1b4 DUP1
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb PUSH4 0xfdacd576
0x1d0 PUSH1 0x1
0x1d2 SLOAD
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 DUP3
0x1d7 PUSH4 0xffffffff
0x1dc AND
0x1dd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1fb MUL
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x4
0x200 ADD
0x201 DUP1
0x202 DUP3
0x203 DUP2
0x204 MSTORE
0x205 PUSH1 0x20
0x207 ADD
0x208 SWAP2
0x209 POP
0x20a POP
0x20b PUSH1 0x0
0x20d PUSH1 0x40
0x20f MLOAD
0x210 DUP1
0x211 DUP4
0x212 SUB
0x213 DUP2
0x214 PUSH1 0x0
0x216 DUP8
0x217 DUP1
0x218 EXTCODESIZE
0x219 ISZERO
0x21a DUP1
0x21b ISZERO
0x21c PUSH2 0x224
0x21f JUMPI
---
0x1b5: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x1cb: V101 = 0xfdacd576
0x1d0: V102 = 0x1
0x1d2: V103 = S[0x1]
0x1d3: V104 = 0x40
0x1d5: V105 = M[0x40]
0x1d7: V106 = 0xffffffff
0x1dc: V107 = AND 0xffffffff 0xfdacd576
0x1dd: V108 = 0x100000000000000000000000000000000000000000000000000000000
0x1fb: V109 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xfdacd576
0x1fd: M[V105] = 0xfdacd57600000000000000000000000000000000000000000000000000000000
0x1fe: V110 = 0x4
0x200: V111 = ADD 0x4 V105
0x204: M[V111] = V103
0x205: V112 = 0x20
0x207: V113 = ADD 0x20 V111
0x20b: V114 = 0x0
0x20d: V115 = 0x40
0x20f: V116 = M[0x40]
0x212: V117 = SUB V113 V116
0x214: V118 = 0x0
0x218: V119 = EXTCODESIZE V100
0x219: V120 = ISZERO V119
0x21b: V121 = ISZERO V120
0x21c: V122 = 0x224
0x21f: JUMPI 0x224 V121
---
Entry stack: [V11, 0xa8, V36, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V100, 0xfdacd576, V113, 0x0, V116, V117, V116, 0x0, V100, V120]
Exit stack: [V11, 0xa8, V36, V36, V100, 0xfdacd576, V113, 0x0, V116, V117, V116, 0x0, V100, V120]

================================

Block 0x220
[0x220:0x223]
---
Predecessors: [0x1b1]
Successors: []
---
0x220 PUSH1 0x0
0x222 DUP1
0x223 REVERT
---
0x220: V123 = 0x0
0x223: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V36, V36, V100, 0xfdacd576, V113, 0x0, V116, V117, V116, 0x0, V100, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V36, V36, V100, 0xfdacd576, V113, 0x0, V116, V117, V116, 0x0, V100, V120]

================================

Block 0x224
[0x224:0x22e]
---
Predecessors: [0x1b1]
Successors: [0x22f, 0x238]
---
0x224 JUMPDEST
0x225 POP
0x226 GAS
0x227 CALL
0x228 ISZERO
0x229 DUP1
0x22a ISZERO
0x22b PUSH2 0x238
0x22e JUMPI
---
0x224: JUMPDEST 
0x226: V124 = GAS
0x227: V125 = CALL V124 V100 0x0 V116 V117 V116 0x0
0x228: V126 = ISZERO V125
0x22a: V127 = ISZERO V126
0x22b: V128 = 0x238
0x22e: JUMPI 0x238 V127
---
Entry stack: [V11, 0xa8, V36, V36, V100, 0xfdacd576, V113, 0x0, V116, V117, V116, 0x0, V100, V120]
Stack pops: 7
Stack additions: [V126]
Exit stack: [V11, 0xa8, V36, V36, V100, 0xfdacd576, V113, V126]

================================

Block 0x22f
[0x22f:0x237]
---
Predecessors: [0x224]
Successors: []
---
0x22f RETURNDATASIZE
0x230 PUSH1 0x0
0x232 DUP1
0x233 RETURNDATACOPY
0x234 RETURNDATASIZE
0x235 PUSH1 0x0
0x237 REVERT
---
0x22f: V129 = RETURNDATASIZE
0x230: V130 = 0x0
0x233: RETURNDATACOPY 0x0 0x0 V129
0x234: V131 = RETURNDATASIZE
0x235: V132 = 0x0
0x237: REVERT 0x0 V131
---
Entry stack: [V11, 0xa8, V36, V36, V100, 0xfdacd576, V113, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V36, V36, V100, 0xfdacd576, V113, V126]

================================

Block 0x238
[0x238:0x23c]
---
Predecessors: [0x224]
Successors: [0x23d]
---
0x238 JUMPDEST
0x239 POP
0x23a POP
0x23b POP
0x23c POP
---
0x238: JUMPDEST 
---
Entry stack: [V11, 0xa8, V36, V36, V100, 0xfdacd576, V113, V126]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xa8, V36, V36]

================================

Block 0x23d
[0x23d:0x240]
---
Predecessors: [0x159, 0x238]
Successors: [0xa8]
---
0x23d JUMPDEST
0x23e POP
0x23f POP
0x240 JUMP
---
0x23d: JUMPDEST 
0x240: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V36, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x241
[0x241:0x246]
---
Predecessors: [0xb6]
Successors: [0xbf]
---
0x241 JUMPDEST
0x242 PUSH1 0x1
0x244 SLOAD
0x245 DUP2
0x246 JUMP
---
0x241: JUMPDEST 
0x242: V133 = 0x1
0x244: V134 = S[0x1]
0x246: JUMP 0xbf
---
Entry stack: [V11, 0xbf]
Stack pops: 1
Stack additions: [S0, V134]
Exit stack: [V11, 0xbf, V134]

================================

Block 0x247
[0x247:0x26b]
---
Predecessors: [0xe1]
Successors: [0xea]
---
0x247 JUMPDEST
0x248 PUSH1 0x0
0x24a DUP1
0x24b SWAP1
0x24c SLOAD
0x24d SWAP1
0x24e PUSH2 0x100
0x251 EXP
0x252 SWAP1
0x253 DIV
0x254 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x269 AND
0x26a DUP2
0x26b JUMP
---
0x247: JUMPDEST 
0x248: V135 = 0x0
0x24c: V136 = S[0x0]
0x24e: V137 = 0x100
0x251: V138 = EXP 0x100 0x0
0x253: V139 = DIV V136 0x1
0x254: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x269: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x26b: JUMP 0xea
---
Entry stack: [V11, 0xea]
Stack pops: 1
Stack additions: [S0, V141]
Exit stack: [V11, 0xea, V141]

================================

Block 0x26c
[0x26c:0x2c1]
---
Predecessors: [0x138]
Successors: [0x2c2, 0x2c9]
---
0x26c JUMPDEST
0x26d PUSH1 0x0
0x26f DUP1
0x270 SWAP1
0x271 SLOAD
0x272 SWAP1
0x273 PUSH2 0x100
0x276 EXP
0x277 SWAP1
0x278 DIV
0x279 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28e AND
0x28f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a4 AND
0x2a5 CALLER
0x2a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bb AND
0x2bc EQ
0x2bd ISZERO
0x2be PUSH2 0x2c9
0x2c1 JUMPI
---
0x26c: JUMPDEST 
0x26d: V142 = 0x0
0x271: V143 = S[0x0]
0x273: V144 = 0x100
0x276: V145 = EXP 0x100 0x0
0x278: V146 = DIV V143 0x1
0x279: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x28e: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x28f: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a4: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x2a5: V151 = CALLER
0x2a6: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x2bc: V154 = EQ V153 V150
0x2bd: V155 = ISZERO V154
0x2be: V156 = 0x2c9
0x2c1: JUMPI 0x2c9 V155
---
Entry stack: [V11, 0x157, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x157, V79]

================================

Block 0x2c2
[0x2c2:0x2c8]
---
Predecessors: [0x26c]
Successors: [0x2c9]
---
0x2c2 DUP1
0x2c3 PUSH1 0x1
0x2c5 DUP2
0x2c6 SWAP1
0x2c7 SSTORE
0x2c8 POP
---
0x2c3: V157 = 0x1
0x2c7: S[0x1] = V79
---
Entry stack: [V11, 0x157, V79]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x157, V79]

================================

Block 0x2c9
[0x2c9:0x2cb]
---
Predecessors: [0x26c, 0x2c2]
Successors: [0x157]
---
0x2c9 JUMPDEST
0x2ca POP
0x2cb JUMP
---
0x2c9: JUMPDEST 
0x2cb: JUMP 0x157
---
Entry stack: [V11, 0x157, V79]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2cc
[0x2cc:0x30a]
---
Predecessors: []
Successors: []
---
0x2cc STOP
0x2cd LOG1
0x2ce PUSH6 0x627a7a723058
0x2d5 SHA3
0x2d6 MISSING 0xcc
0x2d7 SWAP15
0x2d8 GASPRICE
0x2d9 DUP11
0x2da MISSING 0xcd
0x2db ORIGIN
0x2dc ADDMOD
0x2dd MISSING 0x2d
0x2de CREATE
0x2df MSIZE
0x2e0 MISSING 0x48
0x2e1 BYTE
0x2e2 MISSING 0xb9
0x2e3 MISSING 0xb9
0x2e4 INVALID
0x2e5 EQ
0x2e6 MISSING 0xeb
0x2e7 MISSING 0xae
0x2e8 MISSING 0xe6
0x2e9 XOR
0x2ea PUSH32 0x6d9d3ace0ac851f339efba0029
---
0x2cc: STOP 
0x2cd: LOG S0 S1 S2
0x2ce: V158 = 0x627a7a723058
0x2d5: V159 = SHA3 0x627a7a723058 S3
0x2d6: MISSING 0xcc
0x2d8: V160 = GASPRICE
0x2da: MISSING 0xcd
0x2db: V161 = ORIGIN
0x2dc: V162 = ADDMOD V161 S0 S1
0x2dd: MISSING 0x2d
0x2de: V163 = CREATE S0 S1 S2
0x2df: V164 = MSIZE
0x2e0: MISSING 0x48
0x2e1: V165 = BYTE S0 S1
0x2e2: MISSING 0xb9
0x2e3: MISSING 0xb9
0x2e4: INVALID 
0x2e5: V166 = EQ S0 S1
0x2e6: MISSING 0xeb
0x2e7: MISSING 0xae
0x2e8: MISSING 0xe6
0x2e9: V167 = XOR S0 S1
0x2ea: V168 = 0x6d9d3ace0ac851f339efba0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V159, S9, V160, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, V162, V164, V163, V165, V166, 0x6d9d3ace0ac851f339efba0029, V167]
Exit stack: []

================================

Function 0:
Public function signature: 0x900f010
Entry block: 0x67
Exit block: 0x22f
Body: 0x67, 0x6f, 0x73, 0xa8, 0x159, 0x1b1, 0x220, 0x224, 0x22f, 0x238, 0x23d

Function 1:
Public function signature: 0x445df0ac
Entry block: 0xaa
Exit block: 0xbf
Body: 0xaa, 0xb2, 0xb6, 0xbf, 0x241

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xd5
Exit block: 0xea
Body: 0xd5, 0xdd, 0xe1, 0xea, 0x247

Function 3:
Public function signature: 0xfdacd576
Entry block: 0x12c
Exit block: 0x157
Body: 0x12c, 0x134, 0x138, 0x157, 0x26c, 0x2c2, 0x2c9

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

