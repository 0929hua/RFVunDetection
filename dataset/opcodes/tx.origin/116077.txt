Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3d82dee2
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3d82dee2
0x3c: V13 = EQ 0x3d82dee2 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x11b]
---
0x41 DUP1
0x42 PUSH4 0x41c0e1b5
0x47 EQ
0x48 PUSH2 0x11b
0x4b JUMPI
---
0x42: V15 = 0x41c0e1b5
0x47: V16 = EQ 0x41c0e1b5 V11
0x48: V17 = 0x11b
0x4b: JUMPI 0x11b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x118]
---
Predecessors: [0x51]
Successors: [0x130]
---
0x5c JUMPDEST
0x5d PUSH2 0x119
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a AND
0x7b SWAP1
0x7c PUSH1 0x20
0x7e ADD
0x7f SWAP1
0x80 SWAP2
0x81 SWAP1
0x82 DUP1
0x83 CALLDATALOAD
0x84 SWAP1
0x85 PUSH1 0x20
0x87 ADD
0x88 SWAP1
0x89 SWAP2
0x8a SWAP1
0x8b DUP1
0x8c CALLDATALOAD
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 SWAP1
0xa4 PUSH1 0x20
0xa6 ADD
0xa7 SWAP1
0xa8 SWAP2
0xa9 SWAP1
0xaa DUP1
0xab CALLDATALOAD
0xac SWAP1
0xad PUSH1 0x20
0xaf ADD
0xb0 SWAP1
0xb1 SWAP2
0xb2 SWAP1
0xb3 DUP1
0xb4 CALLDATALOAD
0xb5 SWAP1
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 SWAP1
0xba SWAP2
0xbb SWAP1
0xbc DUP1
0xbd CALLDATALOAD
0xbe SWAP1
0xbf PUSH1 0x20
0xc1 ADD
0xc2 SWAP1
0xc3 SWAP2
0xc4 SWAP1
0xc5 DUP1
0xc6 CALLDATALOAD
0xc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc AND
0xdd SWAP1
0xde PUSH1 0x20
0xe0 ADD
0xe1 SWAP1
0xe2 SWAP2
0xe3 SWAP1
0xe4 DUP1
0xe5 CALLDATALOAD
0xe6 PUSH1 0xff
0xe8 AND
0xe9 SWAP1
0xea PUSH1 0x20
0xec ADD
0xed SWAP1
0xee SWAP2
0xef SWAP1
0xf0 DUP1
0xf1 CALLDATALOAD
0xf2 PUSH1 0x0
0xf4 NOT
0xf5 AND
0xf6 SWAP1
0xf7 PUSH1 0x20
0xf9 ADD
0xfa SWAP1
0xfb SWAP2
0xfc SWAP1
0xfd DUP1
0xfe CALLDATALOAD
0xff PUSH1 0x0
0x101 NOT
0x102 AND
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 SWAP2
0x109 SWAP1
0x10a DUP1
0x10b CALLDATALOAD
0x10c SWAP1
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 SWAP2
0x112 SWAP1
0x113 POP
0x114 POP
0x115 PUSH2 0x130
0x118 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0x119
0x60: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x65: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x7c: V28 = 0x20
0x7e: V29 = ADD 0x20 0x4
0x83: V30 = CALLDATALOAD 0x24
0x85: V31 = 0x20
0x87: V32 = ADD 0x20 0x24
0x8c: V33 = CALLDATALOAD 0x44
0x8d: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xa4: V36 = 0x20
0xa6: V37 = ADD 0x20 0x44
0xab: V38 = CALLDATALOAD 0x64
0xad: V39 = 0x20
0xaf: V40 = ADD 0x20 0x64
0xb4: V41 = CALLDATALOAD 0x84
0xb6: V42 = 0x20
0xb8: V43 = ADD 0x20 0x84
0xbd: V44 = CALLDATALOAD 0xa4
0xbf: V45 = 0x20
0xc1: V46 = ADD 0x20 0xa4
0xc6: V47 = CALLDATALOAD 0xc4
0xc7: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xde: V50 = 0x20
0xe0: V51 = ADD 0x20 0xc4
0xe5: V52 = CALLDATALOAD 0xe4
0xe6: V53 = 0xff
0xe8: V54 = AND 0xff V52
0xea: V55 = 0x20
0xec: V56 = ADD 0x20 0xe4
0xf1: V57 = CALLDATALOAD 0x104
0xf2: V58 = 0x0
0xf4: V59 = NOT 0x0
0xf5: V60 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V57
0xf7: V61 = 0x20
0xf9: V62 = ADD 0x20 0x104
0xfe: V63 = CALLDATALOAD 0x124
0xff: V64 = 0x0
0x101: V65 = NOT 0x0
0x102: V66 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V63
0x104: V67 = 0x20
0x106: V68 = ADD 0x20 0x124
0x10b: V69 = CALLDATALOAD 0x144
0x10d: V70 = 0x20
0x10f: V71 = ADD 0x20 0x144
0x115: V72 = 0x130
0x118: JUMP 0x130
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69]
Exit stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69]

================================

Block 0x119
[0x119:0x11a]
---
Predecessors: [0x443]
Successors: []
---
0x119 JUMPDEST
0x11a STOP
---
0x119: JUMPDEST 
0x11a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x121]
---
Predecessors: [0x41]
Successors: [0x122, 0x126]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d ISZERO
0x11e PUSH2 0x126
0x121 JUMPI
---
0x11b: JUMPDEST 
0x11c: V73 = CALLVALUE
0x11d: V74 = ISZERO V73
0x11e: V75 = 0x126
0x121: JUMPI 0x126 V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x122
[0x122:0x125]
---
Predecessors: [0x11b]
Successors: []
---
0x122 PUSH1 0x0
0x124 DUP1
0x125 REVERT
---
0x122: V76 = 0x0
0x125: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x126
[0x126:0x12d]
---
Predecessors: [0x11b]
Successors: [0x455]
---
0x126 JUMPDEST
0x127 PUSH2 0x12e
0x12a PUSH2 0x455
0x12d JUMP
---
0x126: JUMPDEST 
0x127: V77 = 0x12e
0x12a: V78 = 0x455
0x12d: JUMP 0x455
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12e]
Exit stack: [V11, 0x12e]

================================

Block 0x12e
[0x12e:0x12f]
---
Predecessors: [0x4e4]
Successors: []
---
0x12e JUMPDEST
0x12f STOP
---
0x12e: JUMPDEST 
0x12f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x130
[0x130:0x2ac]
---
Predecessors: [0x5c]
Successors: [0x2ad, 0x2b1]
---
0x130 JUMPDEST
0x131 PUSH1 0x0
0x133 DUP1
0x134 PUSH1 0x2
0x136 PUSH1 0x0
0x138 SWAP1
0x139 SLOAD
0x13a SWAP1
0x13b PUSH2 0x100
0x13e EXP
0x13f SWAP1
0x140 DIV
0x141 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x156 AND
0x157 SWAP2
0x158 POP
0x159 DUP2
0x15a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16f AND
0x170 PUSH4 0xfb6e155f
0x175 DUP15
0x176 DUP15
0x177 DUP15
0x178 DUP15
0x179 DUP15
0x17a DUP15
0x17b DUP15
0x17c DUP15
0x17d DUP15
0x17e DUP15
0x17f PUSH1 0x0
0x181 PUSH1 0x40
0x183 MLOAD
0x184 PUSH1 0x20
0x186 ADD
0x187 MSTORE
0x188 PUSH1 0x40
0x18a MLOAD
0x18b DUP12
0x18c PUSH4 0xffffffff
0x191 AND
0x192 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1b0 MUL
0x1b1 DUP2
0x1b2 MSTORE
0x1b3 PUSH1 0x4
0x1b5 ADD
0x1b6 DUP1
0x1b7 DUP12
0x1b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cd AND
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 DUP2
0x1e5 MSTORE
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 DUP11
0x1ea DUP2
0x1eb MSTORE
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef DUP10
0x1f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x205 AND
0x206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21b AND
0x21c DUP2
0x21d MSTORE
0x21e PUSH1 0x20
0x220 ADD
0x221 DUP9
0x222 DUP2
0x223 MSTORE
0x224 PUSH1 0x20
0x226 ADD
0x227 DUP8
0x228 DUP2
0x229 MSTORE
0x22a PUSH1 0x20
0x22c ADD
0x22d DUP7
0x22e DUP2
0x22f MSTORE
0x230 PUSH1 0x20
0x232 ADD
0x233 DUP6
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25f AND
0x260 DUP2
0x261 MSTORE
0x262 PUSH1 0x20
0x264 ADD
0x265 DUP5
0x266 PUSH1 0xff
0x268 AND
0x269 PUSH1 0xff
0x26b AND
0x26c DUP2
0x26d MSTORE
0x26e PUSH1 0x20
0x270 ADD
0x271 DUP4
0x272 PUSH1 0x0
0x274 NOT
0x275 AND
0x276 PUSH1 0x0
0x278 NOT
0x279 AND
0x27a DUP2
0x27b MSTORE
0x27c PUSH1 0x20
0x27e ADD
0x27f DUP3
0x280 PUSH1 0x0
0x282 NOT
0x283 AND
0x284 PUSH1 0x0
0x286 NOT
0x287 AND
0x288 DUP2
0x289 MSTORE
0x28a PUSH1 0x20
0x28c ADD
0x28d SWAP11
0x28e POP
0x28f POP
0x290 POP
0x291 POP
0x292 POP
0x293 POP
0x294 POP
0x295 POP
0x296 POP
0x297 POP
0x298 POP
0x299 PUSH1 0x20
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f DUP4
0x2a0 SUB
0x2a1 DUP2
0x2a2 PUSH1 0x0
0x2a4 DUP8
0x2a5 DUP1
0x2a6 EXTCODESIZE
0x2a7 ISZERO
0x2a8 ISZERO
0x2a9 PUSH2 0x2b1
0x2ac JUMPI
---
0x130: JUMPDEST 
0x131: V79 = 0x0
0x134: V80 = 0x2
0x136: V81 = 0x0
0x139: V82 = S[0x2]
0x13b: V83 = 0x100
0x13e: V84 = EXP 0x100 0x0
0x140: V85 = DIV V82 0x1
0x141: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x156: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x15a: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x170: V90 = 0xfb6e155f
0x17f: V91 = 0x0
0x181: V92 = 0x40
0x183: V93 = M[0x40]
0x184: V94 = 0x20
0x186: V95 = ADD 0x20 V93
0x187: M[V95] = 0x0
0x188: V96 = 0x40
0x18a: V97 = M[0x40]
0x18c: V98 = 0xffffffff
0x191: V99 = AND 0xffffffff 0xfb6e155f
0x192: V100 = 0x100000000000000000000000000000000000000000000000000000000
0x1b0: V101 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xfb6e155f
0x1b2: M[V97] = 0xfb6e155f00000000000000000000000000000000000000000000000000000000
0x1b3: V102 = 0x4
0x1b5: V103 = ADD 0x4 V97
0x1b8: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x1ce: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1e5: M[V103] = V107
0x1e6: V108 = 0x20
0x1e8: V109 = ADD 0x20 V103
0x1eb: M[V109] = V30
0x1ec: V110 = 0x20
0x1ee: V111 = ADD 0x20 V109
0x1f0: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x205: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x206: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x21d: M[V111] = V115
0x21e: V116 = 0x20
0x220: V117 = ADD 0x20 V111
0x223: M[V117] = V38
0x224: V118 = 0x20
0x226: V119 = ADD 0x20 V117
0x229: M[V119] = V41
0x22a: V120 = 0x20
0x22c: V121 = ADD 0x20 V119
0x22f: M[V121] = V44
0x230: V122 = 0x20
0x232: V123 = ADD 0x20 V121
0x234: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x24a: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x25f: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x261: M[V123] = V127
0x262: V128 = 0x20
0x264: V129 = ADD 0x20 V123
0x266: V130 = 0xff
0x268: V131 = AND 0xff V54
0x269: V132 = 0xff
0x26b: V133 = AND 0xff V131
0x26d: M[V129] = V133
0x26e: V134 = 0x20
0x270: V135 = ADD 0x20 V129
0x272: V136 = 0x0
0x274: V137 = NOT 0x0
0x275: V138 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V60
0x276: V139 = 0x0
0x278: V140 = NOT 0x0
0x279: V141 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V138
0x27b: M[V135] = V141
0x27c: V142 = 0x20
0x27e: V143 = ADD 0x20 V135
0x280: V144 = 0x0
0x282: V145 = NOT 0x0
0x283: V146 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V66
0x284: V147 = 0x0
0x286: V148 = NOT 0x0
0x287: V149 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V146
0x289: M[V143] = V149
0x28a: V150 = 0x20
0x28c: V151 = ADD 0x20 V143
0x299: V152 = 0x20
0x29b: V153 = 0x40
0x29d: V154 = M[0x40]
0x2a0: V155 = SUB V151 V154
0x2a2: V156 = 0x0
0x2a6: V157 = EXTCODESIZE V89
0x2a7: V158 = ISZERO V157
0x2a8: V159 = ISZERO V158
0x2a9: V160 = 0x2b1
0x2ac: JUMPI 0x2b1 V159
---
Entry stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V87, 0x0, V89, 0xfb6e155f, V151, 0x20, V154, V155, V154, 0x0, V89]
Exit stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, 0x0, V89, 0xfb6e155f, V151, 0x20, V154, V155, V154, 0x0, V89]

================================

Block 0x2ad
[0x2ad:0x2b0]
---
Predecessors: [0x130]
Successors: []
---
0x2ad PUSH1 0x0
0x2af DUP1
0x2b0 REVERT
---
0x2ad: V161 = 0x0
0x2b0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, 0x0, V89, 0xfb6e155f, V151, 0x20, V154, V155, V154, 0x0, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, 0x0, V89, 0xfb6e155f, V151, 0x20, V154, V155, V154, 0x0, V89]

================================

Block 0x2b1
[0x2b1:0x2bd]
---
Predecessors: [0x130]
Successors: [0x2be, 0x2c2]
---
0x2b1 JUMPDEST
0x2b2 PUSH2 0x2c6
0x2b5 GAS
0x2b6 SUB
0x2b7 CALL
0x2b8 ISZERO
0x2b9 ISZERO
0x2ba PUSH2 0x2c2
0x2bd JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V162 = 0x2c6
0x2b5: V163 = GAS
0x2b6: V164 = SUB V163 0x2c6
0x2b7: V165 = CALL V164 V89 0x0 V154 V155 V154 0x20
0x2b8: V166 = ISZERO V165
0x2b9: V167 = ISZERO V166
0x2ba: V168 = 0x2c2
0x2bd: JUMPI 0x2c2 V167
---
Entry stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, 0x0, V89, 0xfb6e155f, V151, 0x20, V154, V155, V154, 0x0, V89]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, 0x0, V89, 0xfb6e155f, V151]

================================

Block 0x2be
[0x2be:0x2c1]
---
Predecessors: [0x2b1]
Successors: []
---
0x2be PUSH1 0x0
0x2c0 DUP1
0x2c1 REVERT
---
0x2be: V169 = 0x0
0x2c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, 0x0, V89, 0xfb6e155f, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, 0x0, V89, 0xfb6e155f, V151]

================================

Block 0x2c2
[0x2c2:0x2fe]
---
Predecessors: [0x2b1]
Successors: [0x2ff, 0x300]
---
0x2c2 JUMPDEST
0x2c3 POP
0x2c4 POP
0x2c5 POP
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 DUP1
0x2ca MLOAD
0x2cb SWAP1
0x2cc POP
0x2cd SWAP1
0x2ce POP
0x2cf DUP2
0x2d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e5 AND
0x2e6 PUSH4 0xa19b14a
0x2eb DUP15
0x2ec DUP15
0x2ed DUP15
0x2ee DUP15
0x2ef DUP15
0x2f0 DUP15
0x2f1 DUP15
0x2f2 DUP15
0x2f3 DUP15
0x2f4 DUP15
0x2f5 PUSH1 0x2
0x2f7 DUP14
0x2f8 DUP2
0x2f9 ISZERO
0x2fa ISZERO
0x2fb PUSH2 0x300
0x2fe JUMPI
---
0x2c2: JUMPDEST 
0x2c6: V170 = 0x40
0x2c8: V171 = M[0x40]
0x2ca: V172 = M[V171]
0x2d0: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e5: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x2e6: V175 = 0xa19b14a
0x2f5: V176 = 0x2
0x2f9: V177 = ISZERO 0x2
0x2fa: V178 = ISZERO 0x0
0x2fb: V179 = 0x300
0x2fe: JUMPI 0x300 0x1
---
Entry stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, 0x0, V89, 0xfb6e155f, V151]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V172, V174, 0xa19b14a, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x2, V172]
Exit stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, 0x2, V172]

================================

Block 0x2ff
[0x2ff:0x2ff]
---
Predecessors: [0x2c2]
Successors: []
---
0x2ff INVALID
---
0x2ff: INVALID 
---
Entry stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, 0x2, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, 0x2, V172]

================================

Block 0x300
[0x300:0x42d]
---
Predecessors: [0x2c2]
Successors: [0x42e, 0x432]
---
0x300 JUMPDEST
0x301 DIV
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP13
0x306 PUSH4 0xffffffff
0x30b AND
0x30c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x32a MUL
0x32b DUP2
0x32c MSTORE
0x32d PUSH1 0x4
0x32f ADD
0x330 DUP1
0x331 DUP13
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 AND
0x348 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35d AND
0x35e DUP2
0x35f MSTORE
0x360 PUSH1 0x20
0x362 ADD
0x363 DUP12
0x364 DUP2
0x365 MSTORE
0x366 PUSH1 0x20
0x368 ADD
0x369 DUP11
0x36a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37f AND
0x380 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x395 AND
0x396 DUP2
0x397 MSTORE
0x398 PUSH1 0x20
0x39a ADD
0x39b DUP10
0x39c DUP2
0x39d MSTORE
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 DUP9
0x3a2 DUP2
0x3a3 MSTORE
0x3a4 PUSH1 0x20
0x3a6 ADD
0x3a7 DUP8
0x3a8 DUP2
0x3a9 MSTORE
0x3aa PUSH1 0x20
0x3ac ADD
0x3ad DUP7
0x3ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c3 AND
0x3c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d9 AND
0x3da DUP2
0x3db MSTORE
0x3dc PUSH1 0x20
0x3de ADD
0x3df DUP6
0x3e0 PUSH1 0xff
0x3e2 AND
0x3e3 PUSH1 0xff
0x3e5 AND
0x3e6 DUP2
0x3e7 MSTORE
0x3e8 PUSH1 0x20
0x3ea ADD
0x3eb DUP5
0x3ec PUSH1 0x0
0x3ee NOT
0x3ef AND
0x3f0 PUSH1 0x0
0x3f2 NOT
0x3f3 AND
0x3f4 DUP2
0x3f5 MSTORE
0x3f6 PUSH1 0x20
0x3f8 ADD
0x3f9 DUP4
0x3fa PUSH1 0x0
0x3fc NOT
0x3fd AND
0x3fe PUSH1 0x0
0x400 NOT
0x401 AND
0x402 DUP2
0x403 MSTORE
0x404 PUSH1 0x20
0x406 ADD
0x407 DUP3
0x408 DUP2
0x409 MSTORE
0x40a PUSH1 0x20
0x40c ADD
0x40d SWAP12
0x40e POP
0x40f POP
0x410 POP
0x411 POP
0x412 POP
0x413 POP
0x414 POP
0x415 POP
0x416 POP
0x417 POP
0x418 POP
0x419 POP
0x41a PUSH1 0x0
0x41c PUSH1 0x40
0x41e MLOAD
0x41f DUP1
0x420 DUP4
0x421 SUB
0x422 DUP2
0x423 PUSH1 0x0
0x425 DUP8
0x426 DUP1
0x427 EXTCODESIZE
0x428 ISZERO
0x429 ISZERO
0x42a PUSH2 0x432
0x42d JUMPI
---
0x300: JUMPDEST 
0x301: V180 = DIV V172 0x2
0x302: V181 = 0x40
0x304: V182 = M[0x40]
0x306: V183 = 0xffffffff
0x30b: V184 = AND 0xffffffff 0xa19b14a
0x30c: V185 = 0x100000000000000000000000000000000000000000000000000000000
0x32a: V186 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa19b14a
0x32c: M[V182] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x32d: V187 = 0x4
0x32f: V188 = ADD 0x4 V182
0x332: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x348: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x35d: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x35f: M[V188] = V192
0x360: V193 = 0x20
0x362: V194 = ADD 0x20 V188
0x365: M[V194] = V30
0x366: V195 = 0x20
0x368: V196 = ADD 0x20 V194
0x36a: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x380: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x395: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x397: M[V196] = V200
0x398: V201 = 0x20
0x39a: V202 = ADD 0x20 V196
0x39d: M[V202] = V38
0x39e: V203 = 0x20
0x3a0: V204 = ADD 0x20 V202
0x3a3: M[V204] = V41
0x3a4: V205 = 0x20
0x3a6: V206 = ADD 0x20 V204
0x3a9: M[V206] = V44
0x3aa: V207 = 0x20
0x3ac: V208 = ADD 0x20 V206
0x3ae: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c3: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x3c4: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x3db: M[V208] = V212
0x3dc: V213 = 0x20
0x3de: V214 = ADD 0x20 V208
0x3e0: V215 = 0xff
0x3e2: V216 = AND 0xff V54
0x3e3: V217 = 0xff
0x3e5: V218 = AND 0xff V216
0x3e7: M[V214] = V218
0x3e8: V219 = 0x20
0x3ea: V220 = ADD 0x20 V214
0x3ec: V221 = 0x0
0x3ee: V222 = NOT 0x0
0x3ef: V223 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V60
0x3f0: V224 = 0x0
0x3f2: V225 = NOT 0x0
0x3f3: V226 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V223
0x3f5: M[V220] = V226
0x3f6: V227 = 0x20
0x3f8: V228 = ADD 0x20 V220
0x3fa: V229 = 0x0
0x3fc: V230 = NOT 0x0
0x3fd: V231 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V66
0x3fe: V232 = 0x0
0x400: V233 = NOT 0x0
0x401: V234 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V231
0x403: M[V228] = V234
0x404: V235 = 0x20
0x406: V236 = ADD 0x20 V228
0x409: M[V236] = V180
0x40a: V237 = 0x20
0x40c: V238 = ADD 0x20 V236
0x41a: V239 = 0x0
0x41c: V240 = 0x40
0x41e: V241 = M[0x40]
0x421: V242 = SUB V238 V241
0x423: V243 = 0x0
0x427: V244 = EXTCODESIZE V174
0x428: V245 = ISZERO V244
0x429: V246 = ISZERO V245
0x42a: V247 = 0x432
0x42d: JUMPI 0x432 V246
---
Entry stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, 0x2, V172]
Stack pops: 14
Stack additions: [S13, S12, V238, 0x0, V241, V242, V241, 0x0, S13]
Exit stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V238, 0x0, V241, V242, V241, 0x0, V174]

================================

Block 0x42e
[0x42e:0x431]
---
Predecessors: [0x300]
Successors: []
---
0x42e PUSH1 0x0
0x430 DUP1
0x431 REVERT
---
0x42e: V248 = 0x0
0x431: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V238, 0x0, V241, V242, V241, 0x0, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V238, 0x0, V241, V242, V241, 0x0, V174]

================================

Block 0x432
[0x432:0x43e]
---
Predecessors: [0x300]
Successors: [0x43f, 0x443]
---
0x432 JUMPDEST
0x433 PUSH2 0x2c6
0x436 GAS
0x437 SUB
0x438 CALL
0x439 ISZERO
0x43a ISZERO
0x43b PUSH2 0x443
0x43e JUMPI
---
0x432: JUMPDEST 
0x433: V249 = 0x2c6
0x436: V250 = GAS
0x437: V251 = SUB V250 0x2c6
0x438: V252 = CALL V251 V174 0x0 V241 V242 V241 0x0
0x439: V253 = ISZERO V252
0x43a: V254 = ISZERO V253
0x43b: V255 = 0x443
0x43e: JUMPI 0x443 V254
---
Entry stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V238, 0x0, V241, V242, V241, 0x0, V174]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V238]

================================

Block 0x43f
[0x43f:0x442]
---
Predecessors: [0x432]
Successors: []
---
0x43f PUSH1 0x0
0x441 DUP1
0x442 REVERT
---
0x43f: V256 = 0x0
0x442: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V238]

================================

Block 0x443
[0x443:0x454]
---
Predecessors: [0x432]
Successors: [0x119]
---
0x443 JUMPDEST
0x444 POP
0x445 POP
0x446 POP
0x447 POP
0x448 POP
0x449 POP
0x44a POP
0x44b POP
0x44c POP
0x44d POP
0x44e POP
0x44f POP
0x450 POP
0x451 POP
0x452 POP
0x453 POP
0x454 JUMP
---
0x443: JUMPDEST 
0x454: JUMP 0x119
---
Entry stack: [V11, 0x119, V27, V30, V35, V38, V41, V44, V49, V54, V60, V66, V69, V87, V172, V174, 0xa19b14a, V238]
Stack pops: 17
Stack additions: []
Exit stack: [V11]

================================

Block 0x455
[0x455:0x4aa]
---
Predecessors: [0x126]
Successors: [0x4ab, 0x4e4]
---
0x455 JUMPDEST
0x456 PUSH1 0x0
0x458 DUP1
0x459 SWAP1
0x45a SLOAD
0x45b SWAP1
0x45c PUSH2 0x100
0x45f EXP
0x460 SWAP1
0x461 DIV
0x462 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x477 AND
0x478 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48d AND
0x48e CALLER
0x48f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a4 AND
0x4a5 EQ
0x4a6 ISZERO
0x4a7 PUSH2 0x4e4
0x4aa JUMPI
---
0x455: JUMPDEST 
0x456: V257 = 0x0
0x45a: V258 = S[0x0]
0x45c: V259 = 0x100
0x45f: V260 = EXP 0x100 0x0
0x461: V261 = DIV V258 0x1
0x462: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x477: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x478: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x48d: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x48e: V266 = CALLER
0x48f: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a4: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x4a5: V269 = EQ V268 V265
0x4a6: V270 = ISZERO V269
0x4a7: V271 = 0x4e4
0x4aa: JUMPI 0x4e4 V270
---
Entry stack: [V11, 0x12e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12e]

================================

Block 0x4ab
[0x4ab:0x4e3]
---
Predecessors: [0x455]
Successors: []
---
0x4ab PUSH1 0x0
0x4ad DUP1
0x4ae SWAP1
0x4af SLOAD
0x4b0 SWAP1
0x4b1 PUSH2 0x100
0x4b4 EXP
0x4b5 SWAP1
0x4b6 DIV
0x4b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cc AND
0x4cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e2 AND
0x4e3 SELFDESTRUCT
---
0x4ab: V272 = 0x0
0x4af: V273 = S[0x0]
0x4b1: V274 = 0x100
0x4b4: V275 = EXP 0x100 0x0
0x4b6: V276 = DIV V273 0x1
0x4b7: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cc: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x4cd: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e2: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x4e3: SELFDESTRUCT V280
---
Entry stack: [V11, 0x12e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12e]

================================

Block 0x4e4
[0x4e4:0x4e5]
---
Predecessors: [0x455]
Successors: [0x12e]
---
0x4e4 JUMPDEST
0x4e5 JUMP
---
0x4e4: JUMPDEST 
0x4e5: JUMP 0x12e
---
Entry stack: [V11, 0x12e]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e6
[0x4e6:0x521]
---
Predecessors: []
Successors: []
---
0x4e6 STOP
0x4e7 LOG1
0x4e8 PUSH6 0x627a7a723058
0x4ef SHA3
0x4f0 MISSING 0xd1
0x4f1 MISSING 0xd1
0x4f2 EXTCODEHASH
0x4f3 EQ
0x4f4 MISSING 0xd
0x4f5 BYTE
0x4f6 SHL
0x4f7 SWAP13
0x4f8 MISSING 0xc8
0x4f9 DUP13
0x4fa SLOAD
0x4fb CODESIZE
0x4fc MISSING 0xec
0x4fd SUB
0x4fe MISSING 0xd4
0x4ff DUP6
0x500 RETURNDATASIZE
0x501 NUMBER
0x502 SLT
0x503 SHL
0x504 EQ
0x505 EXTCODESIZE
0x506 PUSH6 0xf41975e8d4d5
0x50d ORIGIN
0x50e PUSH19 0x9c0029
---
0x4e6: STOP 
0x4e7: LOG S0 S1 S2
0x4e8: V281 = 0x627a7a723058
0x4ef: V282 = SHA3 0x627a7a723058 S3
0x4f0: MISSING 0xd1
0x4f1: MISSING 0xd1
0x4f2: V283 = EXTCODEHASH S0
0x4f3: V284 = EQ V283 S1
0x4f4: MISSING 0xd
0x4f5: V285 = BYTE S0 S1
0x4f6: V286 = SHL V285 S2
0x4f8: MISSING 0xc8
0x4fa: V287 = S[S12]
0x4fb: V288 = CODESIZE
0x4fc: MISSING 0xec
0x4fd: V289 = SUB S0 S1
0x4fe: MISSING 0xd4
0x500: V290 = RETURNDATASIZE
0x501: V291 = NUMBER
0x502: V292 = SLT V291 V290
0x503: V293 = SHL V292 S5
0x504: V294 = EQ V293 S0
0x505: V295 = EXTCODESIZE V294
0x506: V296 = 0xf41975e8d4d5
0x50d: V297 = ORIGIN
0x50e: V298 = 0x9c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V282, V284, S15, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V286, V288, V287, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V289, 0x9c0029, V297, 0xf41975e8d4d5, V295, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x3d82dee2
Entry block: 0x51
Exit block: 0x119
Body: 0x51, 0x58, 0x5c, 0x119, 0x130, 0x2ad, 0x2b1, 0x2be, 0x2c2, 0x2ff, 0x300, 0x42e, 0x432, 0x43f, 0x443

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x11b
Exit block: 0x12e
Body: 0x11b, 0x122, 0x126, 0x12e, 0x455, 0x4ab, 0x4e4

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

