Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x65372147
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x65372147
0x3c: V13 = EQ 0x65372147 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x93]
---
0x41 DUP1
0x42 PUSH4 0xab5783c4
0x47 EQ
0x48 PUSH2 0x93
0x4b JUMPI
---
0x42: V15 = 0xab5783c4
0x47: V16 = EQ 0xab5783c4 V11
0x48: V17 = 0x93
0x4b: JUMPI 0x93 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xae]
---
0x4c DUP1
0x4d PUSH4 0xb2c3609b
0x52 EQ
0x53 PUSH2 0xae
0x56 JUMPI
---
0x4d: V18 = 0xb2c3609b
0x52: V19 = EQ 0xb2c3609b V11
0x53: V20 = 0xae
0x56: JUMPI 0xae V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xc9]
---
0x57 DUP1
0x58 PUSH4 0xf1b6315e
0x5d EQ
0x5e PUSH2 0xc9
0x61 JUMPI
---
0x58: V21 = 0xf1b6315e
0x5d: V22 = EQ 0xf1b6315e V11
0x5e: V23 = 0xc9
0x61: JUMPI 0xc9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x64]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0x64]
Successors: [0xe4]
---
0x6f JUMPDEST
0x70 PUSH2 0x77
0x73 PUSH2 0xe4
0x76 JUMP
---
0x6f: JUMPDEST 
0x70: V28 = 0x77
0x73: V29 = 0xe4
0x76: JUMP 0xe4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x77
[0x77:0x92]
---
Predecessors: [0xe4]
Successors: []
---
0x77 JUMPDEST
0x78 PUSH1 0x40
0x7a MLOAD
0x7b DUP1
0x7c DUP3
0x7d PUSH1 0xff
0x7f AND
0x80 PUSH1 0xff
0x82 AND
0x83 DUP2
0x84 MSTORE
0x85 PUSH1 0x20
0x87 ADD
0x88 SWAP2
0x89 POP
0x8a POP
0x8b PUSH1 0x40
0x8d MLOAD
0x8e DUP1
0x8f SWAP2
0x90 SUB
0x91 SWAP1
0x92 RETURN
---
0x77: JUMPDEST 
0x78: V30 = 0x40
0x7a: V31 = M[0x40]
0x7d: V32 = 0xff
0x7f: V33 = AND 0xff V71
0x80: V34 = 0xff
0x82: V35 = AND 0xff V33
0x84: M[V31] = V35
0x85: V36 = 0x20
0x87: V37 = ADD 0x20 V31
0x8b: V38 = 0x40
0x8d: V39 = M[0x40]
0x90: V40 = SUB V37 V39
0x92: RETURN V39 V40
---
Entry stack: [V11, 0x77, V71]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x93
[0x93:0xab]
---
Predecessors: [0x41]
Successors: [0xf6]
---
0x93 JUMPDEST
0x94 PUSH2 0xac
0x97 PUSH1 0x4
0x99 DUP1
0x9a DUP1
0x9b CALLDATALOAD
0x9c PUSH1 0xff
0x9e AND
0x9f SWAP1
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP1
0xa4 SWAP2
0xa5 SWAP1
0xa6 POP
0xa7 POP
0xa8 PUSH2 0xf6
0xab JUMP
---
0x93: JUMPDEST 
0x94: V41 = 0xac
0x97: V42 = 0x4
0x9b: V43 = CALLDATALOAD 0x4
0x9c: V44 = 0xff
0x9e: V45 = AND 0xff V43
0xa0: V46 = 0x20
0xa2: V47 = ADD 0x20 0x4
0xa8: V48 = 0xf6
0xab: JUMP 0xf6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xac, V45]
Exit stack: [V11, 0xac, V45]

================================

Block 0xac
[0xac:0xad]
---
Predecessors: [0x1be, 0x2a2]
Successors: []
---
0xac JUMPDEST
0xad STOP
---
0xac: JUMPDEST 
0xad: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xae
[0xae:0xc6]
---
Predecessors: [0x4c]
Successors: [0x1c1]
---
0xae JUMPDEST
0xaf PUSH2 0xc7
0xb2 PUSH1 0x4
0xb4 DUP1
0xb5 DUP1
0xb6 CALLDATALOAD
0xb7 PUSH1 0xff
0xb9 AND
0xba SWAP1
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf SWAP2
0xc0 SWAP1
0xc1 POP
0xc2 POP
0xc3 PUSH2 0x1c1
0xc6 JUMP
---
0xae: JUMPDEST 
0xaf: V49 = 0xc7
0xb2: V50 = 0x4
0xb6: V51 = CALLDATALOAD 0x4
0xb7: V52 = 0xff
0xb9: V53 = AND 0xff V51
0xbb: V54 = 0x20
0xbd: V55 = ADD 0x20 0x4
0xc3: V56 = 0x1c1
0xc6: JUMP 0x1c1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc7, V53]
Exit stack: [V11, 0xc7, V53]

================================

Block 0xc7
[0xc7:0xc8]
---
Predecessors: [0x1be, 0x2a2]
Successors: []
---
0xc7 JUMPDEST
0xc8 STOP
---
0xc7: JUMPDEST 
0xc8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc9
[0xc9:0xe1]
---
Predecessors: [0x57]
Successors: [0x2a5]
---
0xc9 JUMPDEST
0xca PUSH2 0xe2
0xcd PUSH1 0x4
0xcf DUP1
0xd0 DUP1
0xd1 CALLDATALOAD
0xd2 PUSH1 0xff
0xd4 AND
0xd5 SWAP1
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP1
0xda SWAP2
0xdb SWAP1
0xdc POP
0xdd POP
0xde PUSH2 0x2a5
0xe1 JUMP
---
0xc9: JUMPDEST 
0xca: V57 = 0xe2
0xcd: V58 = 0x4
0xd1: V59 = CALLDATALOAD 0x4
0xd2: V60 = 0xff
0xd4: V61 = AND 0xff V59
0xd6: V62 = 0x20
0xd8: V63 = ADD 0x20 0x4
0xde: V64 = 0x2a5
0xe1: JUMP 0x2a5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe2, V61]
Exit stack: [V11, 0xe2, V61]

================================

Block 0xe2
[0xe2:0xe3]
---
Predecessors: [0x31b]
Successors: []
---
0xe2 JUMPDEST
0xe3 STOP
---
0xe2: JUMPDEST 
0xe3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe4
[0xe4:0xf5]
---
Predecessors: [0x6f]
Successors: [0x77]
---
0xe4 JUMPDEST
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 SWAP1
0xe9 SLOAD
0xea SWAP1
0xeb PUSH2 0x100
0xee EXP
0xef SWAP1
0xf0 DIV
0xf1 PUSH1 0xff
0xf3 AND
0xf4 DUP2
0xf5 JUMP
---
0xe4: JUMPDEST 
0xe5: V65 = 0x0
0xe9: V66 = S[0x0]
0xeb: V67 = 0x100
0xee: V68 = EXP 0x100 0x0
0xf0: V69 = DIV V66 0x1
0xf1: V70 = 0xff
0xf3: V71 = AND 0xff V69
0xf5: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: [S0, V71]
Exit stack: [V11, 0x77, V71]

================================

Block 0xf6
[0xf6:0x14d]
---
Predecessors: [0x93]
Successors: [0x14e, 0x152]
---
0xf6 JUMPDEST
0xf7 PUSH1 0x0
0xf9 PUSH1 0x2
0xfb SWAP1
0xfc SLOAD
0xfd SWAP1
0xfe PUSH2 0x100
0x101 EXP
0x102 SWAP1
0x103 DIV
0x104 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119 AND
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 CALLER
0x131 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x146 AND
0x147 EQ
0x148 ISZERO
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0xf6: JUMPDEST 
0xf7: V72 = 0x0
0xf9: V73 = 0x2
0xfc: V74 = S[0x0]
0xfe: V75 = 0x100
0x101: V76 = EXP 0x100 0x2
0x103: V77 = DIV V74 0x10000
0x104: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x119: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x11a: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x130: V82 = CALLER
0x131: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x146: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x147: V85 = EQ V84 V81
0x148: V86 = ISZERO V85
0x149: V87 = ISZERO V86
0x14a: V88 = 0x152
0x14d: JUMPI 0x152 V87
---
Entry stack: [V11, 0xac, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xac, V45]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0xf6]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V89 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V11, 0xac, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xac, V45]

================================

Block 0x152
[0x152:0x159]
---
Predecessors: [0xf6]
Successors: [0x31e]
---
0x152 JUMPDEST
0x153 PUSH2 0x15a
0x156 PUSH2 0x31e
0x159 JUMP
---
0x152: JUMPDEST 
0x153: V90 = 0x15a
0x156: V91 = 0x31e
0x159: JUMP 0x31e
---
Entry stack: [V11, 0xac, V45]
Stack pops: 0
Stack additions: [0x15a]
Exit stack: [V11, 0xac, V45, 0x15a]

================================

Block 0x15a
[0x15a:0x183]
---
Predecessors: [0x31e]
Successors: [0x184, 0x1be]
---
0x15a JUMPDEST
0x15b DUP1
0x15c PUSH1 0x0
0x15e DUP1
0x15f PUSH2 0x100
0x162 EXP
0x163 DUP2
0x164 SLOAD
0x165 DUP2
0x166 PUSH1 0xff
0x168 MUL
0x169 NOT
0x16a AND
0x16b SWAP1
0x16c DUP4
0x16d PUSH1 0xff
0x16f AND
0x170 MUL
0x171 OR
0x172 SWAP1
0x173 SSTORE
0x174 POP
0x175 PUSH7 0x1c6bf526340000
0x17d CALLVALUE
0x17e GT
0x17f ISZERO
0x180 PUSH2 0x1be
0x183 JUMPI
---
0x15a: JUMPDEST 
0x15c: V92 = 0x0
0x15f: V93 = 0x100
0x162: V94 = EXP 0x100 0x0
0x164: V95 = S[0x0]
0x166: V96 = 0xff
0x168: V97 = MUL 0xff 0x1
0x169: V98 = NOT 0xff
0x16a: V99 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V95
0x16d: V100 = 0xff
0x16f: V101 = AND 0xff S0
0x170: V102 = MUL V101 0x1
0x171: V103 = OR V102 V99
0x173: S[0x0] = V103
0x175: V104 = 0x1c6bf526340000
0x17d: V105 = CALLVALUE
0x17e: V106 = GT V105 0x1c6bf526340000
0x17f: V107 = ISZERO V106
0x180: V108 = 0x1be
0x183: JUMPI 0x1be V107
---
Entry stack: [V11, {0xac, 0xc7}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0xac, 0xc7}, S0]

================================

Block 0x184
[0x184:0x1bd]
---
Predecessors: [0x15a]
Successors: []
---
0x184 PUSH1 0x0
0x186 PUSH1 0x2
0x188 SWAP1
0x189 SLOAD
0x18a SWAP1
0x18b PUSH2 0x100
0x18e EXP
0x18f SWAP1
0x190 DIV
0x191 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a6 AND
0x1a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bc AND
0x1bd SELFDESTRUCT
---
0x184: V109 = 0x0
0x186: V110 = 0x2
0x189: V111 = S[0x0]
0x18b: V112 = 0x100
0x18e: V113 = EXP 0x100 0x2
0x190: V114 = DIV V111 0x10000
0x191: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1a7: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x1bd: SELFDESTRUCT V118
---
Entry stack: [V11, {0xac, 0xc7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xac, 0xc7}, S0]

================================

Block 0x1be
[0x1be:0x1c0]
---
Predecessors: [0x15a]
Successors: [0xac, 0xc7]
---
0x1be JUMPDEST
0x1bf POP
0x1c0 JUMP
---
0x1be: JUMPDEST 
0x1c0: JUMP {0xac, 0xc7}
---
Entry stack: [V11, {0xac, 0xc7}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c1
[0x1c1:0x1f6]
---
Predecessors: [0xae]
Successors: [0x1f7, 0x1fb]
---
0x1c1 JUMPDEST
0x1c2 ORIGIN
0x1c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d8 AND
0x1d9 CALLER
0x1da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ef AND
0x1f0 EQ
0x1f1 ISZERO
0x1f2 ISZERO
0x1f3 PUSH2 0x1fb
0x1f6 JUMPI
---
0x1c1: JUMPDEST 
0x1c2: V119 = ORIGIN
0x1c3: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x1d9: V122 = CALLER
0x1da: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ef: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x1f0: V125 = EQ V124 V121
0x1f1: V126 = ISZERO V125
0x1f2: V127 = ISZERO V126
0x1f3: V128 = 0x1fb
0x1f6: JUMPI 0x1fb V127
---
Entry stack: [V11, 0xc7, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V53]

================================

Block 0x1f7
[0x1f7:0x1fa]
---
Predecessors: [0x1c1]
Successors: []
---
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa REVERT
---
0x1f7: V129 = 0x0
0x1fa: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc7, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V53]

================================

Block 0x1fb
[0x1fb:0x218]
---
Predecessors: [0x1c1]
Successors: [0x219, 0x224]
---
0x1fb JUMPDEST
0x1fc DUP1
0x1fd PUSH1 0xff
0x1ff AND
0x200 PUSH1 0x0
0x202 DUP1
0x203 SWAP1
0x204 SLOAD
0x205 SWAP1
0x206 PUSH2 0x100
0x209 EXP
0x20a SWAP1
0x20b DIV
0x20c PUSH1 0xff
0x20e AND
0x20f PUSH1 0xff
0x211 AND
0x212 EQ
0x213 DUP1
0x214 ISZERO
0x215 PUSH2 0x224
0x218 JUMPI
---
0x1fb: JUMPDEST 
0x1fd: V130 = 0xff
0x1ff: V131 = AND 0xff V53
0x200: V132 = 0x0
0x204: V133 = S[0x0]
0x206: V134 = 0x100
0x209: V135 = EXP 0x100 0x0
0x20b: V136 = DIV V133 0x1
0x20c: V137 = 0xff
0x20e: V138 = AND 0xff V136
0x20f: V139 = 0xff
0x211: V140 = AND 0xff V138
0x212: V141 = EQ V140 V131
0x214: V142 = ISZERO V141
0x215: V143 = 0x224
0x218: JUMPI 0x224 V142
---
Entry stack: [V11, 0xc7, V53]
Stack pops: 1
Stack additions: [S0, V141]
Exit stack: [V11, 0xc7, V53, V141]

================================

Block 0x219
[0x219:0x223]
---
Predecessors: [0x1fb]
Successors: [0x224]
---
0x219 POP
0x21a PUSH7 0x2386f26fc10000
0x222 CALLVALUE
0x223 GT
---
0x21a: V144 = 0x2386f26fc10000
0x222: V145 = CALLVALUE
0x223: V146 = GT V145 0x2386f26fc10000
---
Entry stack: [V11, 0xc7, V53, V141]
Stack pops: 1
Stack additions: [V146]
Exit stack: [V11, 0xc7, V53, V146]

================================

Block 0x224
[0x224:0x22a]
---
Predecessors: [0x1fb, 0x219]
Successors: [0x22b, 0x23d]
---
0x224 JUMPDEST
0x225 DUP1
0x226 ISZERO
0x227 PUSH2 0x23d
0x22a JUMPI
---
0x224: JUMPDEST 
0x226: V147 = ISZERO S0
0x227: V148 = 0x23d
0x22a: JUMPI 0x23d V147
---
Entry stack: [V11, 0xc7, V53, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xc7, V53, S0]

================================

Block 0x22b
[0x22b:0x23c]
---
Predecessors: [0x224]
Successors: [0x23d]
---
0x22b POP
0x22c PUSH1 0x0
0x22e PUSH1 0x1
0x230 SWAP1
0x231 SLOAD
0x232 SWAP1
0x233 PUSH2 0x100
0x236 EXP
0x237 SWAP1
0x238 DIV
0x239 PUSH1 0xff
0x23b AND
0x23c ISZERO
---
0x22c: V149 = 0x0
0x22e: V150 = 0x1
0x231: V151 = S[0x0]
0x233: V152 = 0x100
0x236: V153 = EXP 0x100 0x1
0x238: V154 = DIV V151 0x100
0x239: V155 = 0xff
0x23b: V156 = AND 0xff V154
0x23c: V157 = ISZERO V156
---
Entry stack: [V11, 0xc7, V53, S0]
Stack pops: 1
Stack additions: [V157]
Exit stack: [V11, 0xc7, V53, V157]

================================

Block 0x23d
[0x23d:0x242]
---
Predecessors: [0x224, 0x22b]
Successors: [0x243, 0x2a2]
---
0x23d JUMPDEST
0x23e ISZERO
0x23f PUSH2 0x2a2
0x242 JUMPI
---
0x23d: JUMPDEST 
0x23e: V158 = ISZERO S0
0x23f: V159 = 0x2a2
0x242: JUMPI 0x2a2 V158
---
Entry stack: [V11, 0xc7, V53, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc7, V53]

================================

Block 0x243
[0x243:0x294]
---
Predecessors: [0x23d]
Successors: [0x295, 0x299]
---
0x243 CALLER
0x244 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x259 AND
0x25a PUSH2 0x8fc
0x25d ADDRESS
0x25e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x273 AND
0x274 BALANCE
0x275 SWAP1
0x276 DUP2
0x277 ISZERO
0x278 MUL
0x279 SWAP1
0x27a PUSH1 0x40
0x27c MLOAD
0x27d PUSH1 0x0
0x27f PUSH1 0x40
0x281 MLOAD
0x282 DUP1
0x283 DUP4
0x284 SUB
0x285 DUP2
0x286 DUP6
0x287 DUP9
0x288 DUP9
0x289 CALL
0x28a SWAP4
0x28b POP
0x28c POP
0x28d POP
0x28e POP
0x28f ISZERO
0x290 ISZERO
0x291 PUSH2 0x299
0x294 JUMPI
---
0x243: V160 = CALLER
0x244: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x259: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x25a: V163 = 0x8fc
0x25d: V164 = ADDRESS
0x25e: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x273: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x274: V167 = BALANCE V166
0x277: V168 = ISZERO V167
0x278: V169 = MUL V168 0x8fc
0x27a: V170 = 0x40
0x27c: V171 = M[0x40]
0x27d: V172 = 0x0
0x27f: V173 = 0x40
0x281: V174 = M[0x40]
0x284: V175 = SUB V171 V174
0x289: V176 = CALL V169 V162 V167 V174 V175 V174 0x0
0x28f: V177 = ISZERO V176
0x290: V178 = ISZERO V177
0x291: V179 = 0x299
0x294: JUMPI 0x299 V178
---
Entry stack: [V11, 0xc7, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V53]

================================

Block 0x295
[0x295:0x298]
---
Predecessors: [0x243]
Successors: []
---
0x295 PUSH1 0x0
0x297 DUP1
0x298 REVERT
---
0x295: V180 = 0x0
0x298: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc7, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V53]

================================

Block 0x299
[0x299:0x2a0]
---
Predecessors: [0x243]
Successors: [0x31e]
---
0x299 JUMPDEST
0x29a PUSH2 0x2a1
0x29d PUSH2 0x31e
0x2a0 JUMP
---
0x299: JUMPDEST 
0x29a: V181 = 0x2a1
0x29d: V182 = 0x31e
0x2a0: JUMP 0x31e
---
Entry stack: [V11, 0xc7, V53]
Stack pops: 0
Stack additions: [0x2a1]
Exit stack: [V11, 0xc7, V53, 0x2a1]

================================

Block 0x2a1
[0x2a1:0x2a1]
---
Predecessors: [0x31e]
Successors: [0x2a2]
---
0x2a1 JUMPDEST
---
0x2a1: JUMPDEST 
---
Entry stack: [V11, {0xac, 0xc7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xac, 0xc7}, S0]

================================

Block 0x2a2
[0x2a2:0x2a4]
---
Predecessors: [0x23d, 0x2a1]
Successors: [0xac, 0xc7]
---
0x2a2 JUMPDEST
0x2a3 POP
0x2a4 JUMP
---
0x2a2: JUMPDEST 
0x2a4: JUMP {0xac, 0xc7}
---
Entry stack: [V11, {0xac, 0xc7}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a5
[0x2a5:0x2bf]
---
Predecessors: [0xc9]
Successors: [0x2c0, 0x31b]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 PUSH1 0x0
0x2ab SWAP1
0x2ac SLOAD
0x2ad SWAP1
0x2ae PUSH2 0x100
0x2b1 EXP
0x2b2 SWAP1
0x2b3 DIV
0x2b4 PUSH1 0xff
0x2b6 AND
0x2b7 PUSH1 0xff
0x2b9 AND
0x2ba EQ
0x2bb ISZERO
0x2bc PUSH2 0x31b
0x2bf JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V183 = 0x0
0x2a9: V184 = 0x0
0x2ac: V185 = S[0x0]
0x2ae: V186 = 0x100
0x2b1: V187 = EXP 0x100 0x0
0x2b3: V188 = DIV V185 0x1
0x2b4: V189 = 0xff
0x2b6: V190 = AND 0xff V188
0x2b7: V191 = 0xff
0x2b9: V192 = AND 0xff V190
0x2ba: V193 = EQ V192 0x0
0x2bb: V194 = ISZERO V193
0x2bc: V195 = 0x31b
0x2bf: JUMPI 0x31b V194
---
Entry stack: [V11, 0xe2, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V61]

================================

Block 0x2c0
[0x2c0:0x31a]
---
Predecessors: [0x2a5]
Successors: [0x31b]
---
0x2c0 DUP1
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 PUSH2 0x100
0x2c7 EXP
0x2c8 DUP2
0x2c9 SLOAD
0x2ca DUP2
0x2cb PUSH1 0xff
0x2cd MUL
0x2ce NOT
0x2cf AND
0x2d0 SWAP1
0x2d1 DUP4
0x2d2 PUSH1 0xff
0x2d4 AND
0x2d5 MUL
0x2d6 OR
0x2d7 SWAP1
0x2d8 SSTORE
0x2d9 POP
0x2da CALLER
0x2db PUSH1 0x0
0x2dd PUSH1 0x2
0x2df PUSH2 0x100
0x2e2 EXP
0x2e3 DUP2
0x2e4 SLOAD
0x2e5 DUP2
0x2e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fb MUL
0x2fc NOT
0x2fd AND
0x2fe SWAP1
0x2ff DUP4
0x300 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x315 AND
0x316 MUL
0x317 OR
0x318 SWAP1
0x319 SSTORE
0x31a POP
---
0x2c1: V196 = 0x0
0x2c4: V197 = 0x100
0x2c7: V198 = EXP 0x100 0x0
0x2c9: V199 = S[0x0]
0x2cb: V200 = 0xff
0x2cd: V201 = MUL 0xff 0x1
0x2ce: V202 = NOT 0xff
0x2cf: V203 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V199
0x2d2: V204 = 0xff
0x2d4: V205 = AND 0xff V61
0x2d5: V206 = MUL V205 0x1
0x2d6: V207 = OR V206 V203
0x2d8: S[0x0] = V207
0x2da: V208 = CALLER
0x2db: V209 = 0x0
0x2dd: V210 = 0x2
0x2df: V211 = 0x100
0x2e2: V212 = EXP 0x100 0x2
0x2e4: V213 = S[0x0]
0x2e6: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V215 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x10000
0x2fc: V216 = NOT 0xffffffffffffffffffffffffffffffffffffffff0000
0x2fd: V217 = AND 0xffffffffffffffffffff0000000000000000000000000000000000000000ffff V213
0x300: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x315: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x316: V220 = MUL V219 0x10000
0x317: V221 = OR V220 V217
0x319: S[0x0] = V221
---
Entry stack: [V11, 0xe2, V61]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe2, V61]

================================

Block 0x31b
[0x31b:0x31d]
---
Predecessors: [0x2a5, 0x2c0]
Successors: [0xe2]
---
0x31b JUMPDEST
0x31c POP
0x31d JUMP
---
0x31b: JUMPDEST 
0x31d: JUMP 0xe2
---
Entry stack: [V11, 0xe2, V61]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x31e
[0x31e:0x33a]
---
Predecessors: [0x152, 0x299]
Successors: [0x15a, 0x2a1]
---
0x31e JUMPDEST
0x31f PUSH1 0x1
0x321 PUSH1 0x0
0x323 PUSH1 0x1
0x325 PUSH2 0x100
0x328 EXP
0x329 DUP2
0x32a SLOAD
0x32b DUP2
0x32c PUSH1 0xff
0x32e MUL
0x32f NOT
0x330 AND
0x331 SWAP1
0x332 DUP4
0x333 ISZERO
0x334 ISZERO
0x335 MUL
0x336 OR
0x337 SWAP1
0x338 SSTORE
0x339 POP
0x33a JUMP
---
0x31e: JUMPDEST 
0x31f: V222 = 0x1
0x321: V223 = 0x0
0x323: V224 = 0x1
0x325: V225 = 0x100
0x328: V226 = EXP 0x100 0x1
0x32a: V227 = S[0x0]
0x32c: V228 = 0xff
0x32e: V229 = MUL 0xff 0x100
0x32f: V230 = NOT 0xff00
0x330: V231 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V227
0x333: V232 = ISZERO 0x1
0x334: V233 = ISZERO 0x0
0x335: V234 = MUL 0x1 0x100
0x336: V235 = OR 0x100 V231
0x338: S[0x0] = V235
0x33a: JUMP {0x15a, 0x2a1}
---
Entry stack: [V11, {0xac, 0xc7}, S1, {0x15a, 0x2a1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0xac, 0xc7}, S1]

================================

Block 0x33b
[0x33b:0x366]
---
Predecessors: []
Successors: []
---
0x33b STOP
0x33c LOG1
0x33d PUSH6 0x627a7a723058
0x344 SHA3
0x345 PUSH1 0xfe
0x347 MISSING 0xf
0x348 SWAP1
0x349 MISSING 0xdc
0x34a NUMBER
0x34b MISSING 0xfb
0x34c SWAP9
0x34d MISSING 0xd0
0x34e MISSING 0x2f
0x34f CALLDATALOAD
0x350 MISSING 0xed
0x351 PUSH15 0xad08a3f865766beaf64905eb7bf3e9
0x361 EXTCODEHASH
0x362 SWAP10
0x363 MISSING 0x4e
0x364 MISSING 0xcf
0x365 STOP
0x366 MISSING 0x29
---
0x33b: STOP 
0x33c: LOG S0 S1 S2
0x33d: V236 = 0x627a7a723058
0x344: V237 = SHA3 0x627a7a723058 S3
0x345: V238 = 0xfe
0x347: MISSING 0xf
0x349: MISSING 0xdc
0x34a: V239 = NUMBER
0x34b: MISSING 0xfb
0x34d: MISSING 0xd0
0x34e: MISSING 0x2f
0x34f: V240 = CALLDATALOAD S0
0x350: MISSING 0xed
0x351: V241 = 0xad08a3f865766beaf64905eb7bf3e9
0x361: V242 = EXTCODEHASH 0xad08a3f865766beaf64905eb7bf3e9
0x363: MISSING 0x4e
0x364: MISSING 0xcf
0x365: STOP 
0x366: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xfe, V237, S1, S0, V239, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, V240, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, V242]
Exit stack: []

================================

Function 0:
Public function signature: 0x65372147
Entry block: 0x64
Exit block: 0x77
Body: 0x64, 0x6b, 0x6f, 0x77, 0xe4

Function 1:
Public function signature: 0xab5783c4
Entry block: 0x93
Exit block: 0xc7
Body: 0x93, 0xac, 0xc7, 0xf6, 0x14e, 0x152, 0x15a, 0x184, 0x1be

Function 2:
Public function signature: 0xb2c3609b
Entry block: 0xae
Exit block: 0xc7
Body: 0xac, 0xae, 0xc7, 0x1c1, 0x1f7, 0x1fb, 0x219, 0x224, 0x22b, 0x23d, 0x243, 0x295, 0x299, 0x2a1, 0x2a2

Function 3:
Public function signature: 0xf1b6315e
Entry block: 0xc9
Exit block: 0xe2
Body: 0xc9, 0xe2, 0x2a5, 0x2c0, 0x31b

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

