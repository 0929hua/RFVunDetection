Block 0x0
[0x0:0x17]
---
Predecessors: []
Successors: [0x18, 0x1a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x80f7884d
0x13 DUP2
0x14 EQ
0x15 PUSH1 0x1a
0x17 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x80f7884d
0x14: V9 = EQ V7 0x80f7884d
0x15: V10 = 0x1a
0x17: JUMPI 0x1a V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x18
[0x18:0x19]
---
Predecessors: [0x0]
Successors: []
---
0x18 JUMPDEST
0x19 STOP
---
0x18: JUMPDEST 
0x19: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x1a
[0x1a:0x98]
---
Predecessors: [0x0]
Successors: [0x99]
---
0x1a JUMPDEST
0x1b PUSH1 0x99
0x1d PUSH1 0x4
0x1f CALLDATALOAD
0x20 PUSH1 0x0
0x22 DUP2
0x23 PUSH1 0x60
0x25 PUSH1 0xef
0x27 DUP1
0x28 PUSH2 0xc5
0x2b DUP4
0x2c CODECOPY
0x2d ADD
0x2e DUP1
0x2f DUP3
0x30 DUP2
0x31 MSTORE
0x32 PUSH1 0x20
0x34 ADD
0x35 SWAP2
0x36 POP
0x37 POP
0x38 PUSH1 0x40
0x3a MLOAD
0x3b DUP1
0x3c SWAP2
0x3d SUB
0x3e SWAP1
0x3f PUSH1 0x0
0x41 CREATE
0x42 PUSH1 0x1
0x44 DUP1
0x45 SLOAD
0x46 DUP4
0x47 MSTORE
0x48 PUSH1 0x20
0x4a DUP4
0x4b SWAP1
0x4c MSTORE
0x4d PUSH1 0x40
0x4f DUP1
0x50 DUP5
0x51 SHA3
0x52 DUP1
0x53 SLOAD
0x54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69 NOT
0x6a AND
0x6b SWAP4
0x6c SWAP1
0x6d SWAP4
0x6e OR
0x6f SWAP1
0x70 SWAP3
0x71 SSTORE
0x72 DUP1
0x73 SLOAD
0x74 DUP2
0x75 ADD
0x76 SWAP1
0x77 DUP2
0x78 SWAP1
0x79 SSTORE
0x7a DUP3
0x7b MSTORE
0x7c SWAP1
0x7d SHA3
0x7e SLOAD
0x7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94 AND
0x95 SWAP2
0x96 SWAP1
0x97 POP
0x98 JUMP
---
0x1a: JUMPDEST 
0x1b: V11 = 0x99
0x1d: V12 = 0x4
0x1f: V13 = CALLDATALOAD 0x4
0x20: V14 = 0x0
0x23: V15 = 0x60
0x25: V16 = 0xef
0x28: V17 = 0xc5
0x2c: CODECOPY 0x60 0xc5 0xef
0x2d: V18 = ADD 0xef 0x60
0x31: M[0x14f] = V13
0x32: V19 = 0x20
0x34: V20 = ADD 0x20 0x14f
0x38: V21 = 0x40
0x3a: V22 = M[0x40]
0x3d: V23 = SUB 0x16f V22
0x3f: V24 = 0x0
0x41: V25 = CREATE 0x0 V22 V23
0x42: V26 = 0x1
0x45: V27 = S[0x1]
0x47: M[0x0] = V27
0x48: V28 = 0x20
0x4c: M[0x20] = 0x0
0x4d: V29 = 0x40
0x51: V30 = SHA3 0x0 0x40
0x53: V31 = S[V30]
0x54: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x69: V33 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6a: V34 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V31
0x6e: V35 = OR V34 V25
0x71: S[V30] = V35
0x73: V36 = S[0x1]
0x75: V37 = ADD 0x1 V36
0x79: S[0x1] = V37
0x7b: M[0x0] = V37
0x7d: V38 = SHA3 0x0 0x40
0x7e: V39 = S[V38]
0x7f: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0x94: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x98: JUMP 0x99
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V7, V41]

================================

Block 0x99
[0x99:0xc4]
---
Predecessors: [0x1a]
Successors: []
---
0x99 JUMPDEST
0x9a PUSH1 0x40
0x9c MLOAD
0x9d DUP1
0x9e DUP3
0x9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4 AND
0xb5 DUP2
0xb6 MSTORE
0xb7 PUSH1 0x20
0xb9 ADD
0xba SWAP2
0xbb POP
0xbc POP
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 DUP1
0xc1 SWAP2
0xc2 SUB
0xc3 SWAP1
0xc4 RETURN
---
0x99: JUMPDEST 
0x9a: V42 = 0x40
0x9c: V43 = M[0x40]
0x9f: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xb6: M[V43] = V45
0xb7: V46 = 0x20
0xb9: V47 = ADD 0x20 V43
0xbd: V48 = 0x40
0xbf: V49 = M[0x40]
0xc2: V50 = SUB V47 V49
0xc4: RETURN V49 V50
---
Entry stack: [V7, V41]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0xc5
[0xc5:0x119]
---
Predecessors: []
Successors: [0x11a]
---
0xc5 PUSH1 0x60
0xc7 PUSH1 0x40
0xc9 MSTORE
0xca PUSH1 0x40
0xcc MLOAD
0xcd PUSH1 0x20
0xcf DUP1
0xd0 PUSH1 0xef
0xd2 DUP4
0xd3 CODECOPY
0xd4 POP
0xd5 PUSH1 0x80
0xd7 PUSH1 0x40
0xd9 MSTORE
0xda MLOAD
0xdb PUSH1 0x1
0xdd PUSH1 0xa0
0xdf PUSH1 0x2
0xe1 EXP
0xe2 SUB
0xe3 ORIGIN
0xe4 AND
0xe5 PUSH1 0x0
0xe7 SWAP1
0xe8 DUP2
0xe9 MSTORE
0xea PUSH1 0x20
0xec DUP2
0xed SWAP1
0xee MSTORE
0xef PUSH1 0x40
0xf1 SWAP1
0xf2 SHA3
0xf3 DUP2
0xf4 SWAP1
0xf5 SSTORE
0xf6 POP
0xf7 PUSH1 0xb2
0xf9 DUP1
0xfa PUSH1 0x3d
0xfc PUSH1 0x0
0xfe CODECOPY
0xff PUSH1 0x0
0x101 RETURN
0x102 PUSH1 0x60
0x104 PUSH1 0x40
0x106 MSTORE
0x107 PUSH1 0xe0
0x109 PUSH1 0x2
0x10b EXP
0x10c PUSH1 0x0
0x10e CALLDATALOAD
0x10f DIV
0x110 PUSH4 0x27e235e3
0x115 DUP2
0x116 EQ
0x117 PUSH1 0x24
0x119 JUMPI
---
0xc5: V51 = 0x60
0xc7: V52 = 0x40
0xc9: M[0x40] = 0x60
0xca: V53 = 0x40
0xcc: V54 = M[0x40]
0xcd: V55 = 0x20
0xd0: V56 = 0xef
0xd3: CODECOPY V54 0xef 0x20
0xd5: V57 = 0x80
0xd7: V58 = 0x40
0xd9: M[0x40] = 0x80
0xda: V59 = M[V54]
0xdb: V60 = 0x1
0xdd: V61 = 0xa0
0xdf: V62 = 0x2
0xe1: V63 = EXP 0x2 0xa0
0xe2: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V65 = ORIGIN
0xe4: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V67 = 0x0
0xe9: M[0x0] = V66
0xea: V68 = 0x20
0xee: M[0x20] = 0x0
0xef: V69 = 0x40
0xf2: V70 = SHA3 0x0 0x40
0xf5: S[V70] = V59
0xf7: V71 = 0xb2
0xfa: V72 = 0x3d
0xfc: V73 = 0x0
0xfe: CODECOPY 0x0 0x3d 0xb2
0xff: V74 = 0x0
0x101: RETURN 0x0 0xb2
0x102: V75 = 0x60
0x104: V76 = 0x40
0x106: M[0x40] = 0x60
0x107: V77 = 0xe0
0x109: V78 = 0x2
0x10b: V79 = EXP 0x2 0xe0
0x10c: V80 = 0x0
0x10e: V81 = CALLDATALOAD 0x0
0x10f: V82 = DIV V81 0x100000000000000000000000000000000000000000000000000000000
0x110: V83 = 0x27e235e3
0x116: V84 = EQ V82 0x27e235e3
0x117: V85 = 0x24
0x119: THROWI V84
---
Entry stack: []
Stack pops: 0
Stack additions: [V82]
Exit stack: []

================================

Block 0x11a
[0x11a:0x123]
---
Predecessors: [0xc5]
Successors: [0x124]
---
0x11a DUP1
0x11b PUSH4 0x412664ae
0x120 EQ
0x121 PUSH1 0x3b
0x123 JUMPI
---
0x11b: V86 = 0x412664ae
0x120: V87 = EQ 0x412664ae V82
0x121: V88 = 0x3b
0x123: THROWI V87
---
Entry stack: [V82]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V82]

================================

Block 0x124
[0x124:0x172]
---
Predecessors: [0x11a]
Successors: [0x173]
---
0x124 JUMPDEST
0x125 STOP
0x126 JUMPDEST
0x127 PUSH1 0x74
0x129 PUSH1 0x4
0x12b CALLDATALOAD
0x12c PUSH1 0x0
0x12e PUSH1 0x20
0x130 DUP2
0x131 SWAP1
0x132 MSTORE
0x133 SWAP1
0x134 DUP2
0x135 MSTORE
0x136 PUSH1 0x40
0x138 SWAP1
0x139 SHA3
0x13a SLOAD
0x13b DUP2
0x13c JUMP
0x13d JUMPDEST
0x13e PUSH1 0x74
0x140 PUSH1 0x4
0x142 CALLDATALOAD
0x143 PUSH1 0x24
0x145 CALLDATALOAD
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b CALLER
0x15c AND
0x15d PUSH1 0x0
0x15f SWAP1
0x160 DUP2
0x161 MSTORE
0x162 PUSH1 0x20
0x164 DUP2
0x165 SWAP1
0x166 MSTORE
0x167 PUSH1 0x40
0x169 DUP2
0x16a SHA3
0x16b SLOAD
0x16c DUP3
0x16d SWAP1
0x16e LT
0x16f ISZERO
0x170 PUSH1 0x7e
0x172 JUMPI
---
0x124: JUMPDEST 
0x125: STOP 
0x126: JUMPDEST 
0x127: V89 = 0x74
0x129: V90 = 0x4
0x12b: V91 = CALLDATALOAD 0x4
0x12c: V92 = 0x0
0x12e: V93 = 0x20
0x132: M[0x20] = 0x0
0x135: M[0x0] = V91
0x136: V94 = 0x40
0x139: V95 = SHA3 0x0 0x40
0x13a: V96 = S[V95]
0x13c: THROW 
0x13d: JUMPDEST 
0x13e: V97 = 0x74
0x140: V98 = 0x4
0x142: V99 = CALLDATALOAD 0x4
0x143: V100 = 0x24
0x145: V101 = CALLDATALOAD 0x24
0x146: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V103 = CALLER
0x15c: V104 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V105 = 0x0
0x161: M[0x0] = V104
0x162: V106 = 0x20
0x166: M[0x20] = 0x0
0x167: V107 = 0x40
0x16a: V108 = SHA3 0x0 0x40
0x16b: V109 = S[V108]
0x16e: V110 = LT V109 V101
0x16f: V111 = ISZERO V110
0x170: V112 = 0x7e
0x172: THROWI V111
---
Entry stack: [V82]
Stack pops: 0
Stack additions: [V96, 0x74, 0x0, V101, V99, 0x74]
Exit stack: []

================================

Block 0x173
[0x173:0x1ad]
---
Predecessors: [0x124]
Successors: [0x1ae]
---
0x173 PUSH1 0xac
0x175 JUMP
0x176 JUMPDEST
0x177 PUSH1 0x60
0x179 SWAP1
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e SWAP1
0x17f RETURN
0x180 JUMPDEST
0x181 PUSH1 0x40
0x183 DUP1
0x184 DUP3
0x185 SHA3
0x186 DUP1
0x187 SLOAD
0x188 DUP5
0x189 SWAP1
0x18a SUB
0x18b SWAP1
0x18c SSTORE
0x18d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a2 DUP5
0x1a3 AND
0x1a4 DUP3
0x1a5 MSTORE
0x1a6 DUP2
0x1a7 SHA3
0x1a8 DUP1
0x1a9 SLOAD
0x1aa DUP4
0x1ab ADD
0x1ac SWAP1
0x1ad SSTORE
---
0x173: V113 = 0xac
0x175: THROW 
0x176: JUMPDEST 
0x177: V114 = 0x60
0x17b: M[0x60] = S0
0x17c: V115 = 0x20
0x17f: RETURN 0x60 0x20
0x180: JUMPDEST 
0x181: V116 = 0x40
0x185: V117 = SHA3 S0 0x40
0x187: V118 = S[V117]
0x18a: V119 = SUB V118 S1
0x18c: S[V117] = V119
0x18d: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V121 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: M[S0] = V121
0x1a7: V122 = SHA3 S0 0x40
0x1a9: V123 = S[V122]
0x1ab: V124 = ADD S1 V123
0x1ad: S[V122] = V124
---
Entry stack: [0x74, V99, V101, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x1ae
[0x1ae:0x1b3]
---
Predecessors: [0x173]
Successors: []
Has unresolved jump.
---
0x1ae JUMPDEST
0x1af SWAP3
0x1b0 SWAP2
0x1b1 POP
0x1b2 POP
0x1b3 JUMP
---
0x1ae: JUMPDEST 
0x1b3: JUMP S3
---
Entry stack: [S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S0]

================================

Function 0:
Public function signature: 0x80f7884d
Entry block: 0x1a
Exit block: 0x99
Body: 0x1a, 0x99

Function 1:
Public fallback function
Entry block: 0x18
Exit block: 0x18
Body: 0x18

