Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x15c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4797f21b
0x3c EQ
0x3d PUSH2 0x15c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4797f21b
0x3c: V13 = EQ 0x4797f21b V11
0x3d: V14 = 0x15c
0x40: JUMPI 0x15c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x195]
---
0x41 DUP1
0x42 PUSH4 0x64dd891a
0x47 EQ
0x48 PUSH2 0x195
0x4b JUMPI
---
0x42: V15 = 0x64dd891a
0x47: V16 = EQ 0x64dd891a V11
0x48: V17 = 0x195
0x4b: JUMPI 0x195 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x1b8]
---
0x4c DUP1
0x4d PUSH4 0x82aa86a6
0x52 EQ
0x53 PUSH2 0x1b8
0x56 JUMPI
---
0x4d: V18 = 0x82aa86a6
0x52: V19 = EQ 0x82aa86a6 V11
0x53: V20 = 0x1b8
0x56: JUMPI 0x1b8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1f1]
---
0x57 DUP1
0x58 PUSH4 0x87f14e6f
0x5d EQ
0x5e PUSH2 0x1f1
0x61 JUMPI
---
0x58: V21 = 0x87f14e6f
0x5d: V22 = EQ 0x87f14e6f V11
0x5e: V23 = 0x1f1
0x61: JUMPI 0x1f1 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x206]
---
0x62 DUP1
0x63 PUSH4 0x8da5cb5b
0x68 EQ
0x69 PUSH2 0x206
0x6c JUMPI
---
0x63: V24 = 0x8da5cb5b
0x68: V25 = EQ 0x8da5cb5b V11
0x69: V26 = 0x206
0x6c: JUMPI 0x206 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x25b]
---
0x6d DUP1
0x6e PUSH4 0xd03ffefb
0x73 EQ
0x74 PUSH2 0x25b
0x77 JUMPI
---
0x6e: V27 = 0xd03ffefb
0x73: V28 = EQ 0xd03ffefb V11
0x74: V29 = 0x25b
0x77: JUMPI 0x25b V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x265]
---
0x78 DUP1
0x79 PUSH4 0xd0e30db0
0x7e EQ
0x7f PUSH2 0x265
0x82 JUMPI
---
0x79: V30 = 0xd0e30db0
0x7e: V31 = EQ 0xd0e30db0 V11
0x7f: V32 = 0x265
0x82: JUMPI 0x265 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x99]
---
Predecessors: [0x0, 0x78]
Successors: [0x9a, 0x15a]
---
0x83 JUMPDEST
0x84 PUSH1 0x3
0x86 PUSH1 0x0
0x88 SWAP1
0x89 SLOAD
0x8a SWAP1
0x8b PUSH2 0x100
0x8e EXP
0x8f SWAP1
0x90 DIV
0x91 PUSH1 0xff
0x93 AND
0x94 ISZERO
0x95 ISZERO
0x96 PUSH2 0x15a
0x99 JUMPI
---
0x83: JUMPDEST 
0x84: V33 = 0x3
0x86: V34 = 0x0
0x89: V35 = S[0x3]
0x8b: V36 = 0x100
0x8e: V37 = EXP 0x100 0x0
0x90: V38 = DIV V35 0x1
0x91: V39 = 0xff
0x93: V40 = AND 0xff V38
0x94: V41 = ISZERO V40
0x95: V42 = ISZERO V41
0x96: V43 = 0x15a
0x99: JUMPI 0x15a V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9a
[0x9a:0x140]
---
Predecessors: [0x83]
Successors: [0x141, 0x145]
---
0x9a PUSH1 0x1
0x9c PUSH1 0x3
0x9e PUSH1 0x0
0xa0 PUSH2 0x100
0xa3 EXP
0xa4 DUP2
0xa5 SLOAD
0xa6 DUP2
0xa7 PUSH1 0xff
0xa9 MUL
0xaa NOT
0xab AND
0xac SWAP1
0xad DUP4
0xae ISZERO
0xaf ISZERO
0xb0 MUL
0xb1 OR
0xb2 SWAP1
0xb3 SSTORE
0xb4 POP
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 SWAP1
0xb9 SLOAD
0xba SWAP1
0xbb PUSH2 0x100
0xbe EXP
0xbf SWAP1
0xc0 DIV
0xc1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6 AND
0xd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec AND
0xed PUSH4 0x9ffa0711
0xf2 PUSH1 0x2
0xf4 SLOAD
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 DUP3
0xf9 PUSH4 0xffffffff
0xfe AND
0xff PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11d MUL
0x11e DUP2
0x11f MSTORE
0x120 PUSH1 0x4
0x122 ADD
0x123 DUP1
0x124 DUP3
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP2
0x12b POP
0x12c POP
0x12d PUSH1 0x0
0x12f PUSH1 0x40
0x131 MLOAD
0x132 DUP1
0x133 DUP4
0x134 SUB
0x135 DUP2
0x136 PUSH1 0x0
0x138 DUP8
0x139 DUP1
0x13a EXTCODESIZE
0x13b ISZERO
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x9a: V44 = 0x1
0x9c: V45 = 0x3
0x9e: V46 = 0x0
0xa0: V47 = 0x100
0xa3: V48 = EXP 0x100 0x0
0xa5: V49 = S[0x3]
0xa7: V50 = 0xff
0xa9: V51 = MUL 0xff 0x1
0xaa: V52 = NOT 0xff
0xab: V53 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V49
0xae: V54 = ISZERO 0x1
0xaf: V55 = ISZERO 0x0
0xb0: V56 = MUL 0x1 0x1
0xb1: V57 = OR 0x1 V53
0xb3: S[0x3] = V57
0xb5: V58 = 0x0
0xb9: V59 = S[0x0]
0xbb: V60 = 0x100
0xbe: V61 = EXP 0x100 0x0
0xc0: V62 = DIV V59 0x1
0xc1: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0xd7: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0xec: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xed: V67 = 0x9ffa0711
0xf2: V68 = 0x2
0xf4: V69 = S[0x2]
0xf5: V70 = 0x40
0xf7: V71 = M[0x40]
0xf9: V72 = 0xffffffff
0xfe: V73 = AND 0xffffffff 0x9ffa0711
0xff: V74 = 0x100000000000000000000000000000000000000000000000000000000
0x11d: V75 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x9ffa0711
0x11f: M[V71] = 0x9ffa071100000000000000000000000000000000000000000000000000000000
0x120: V76 = 0x4
0x122: V77 = ADD 0x4 V71
0x126: M[V77] = V69
0x127: V78 = 0x20
0x129: V79 = ADD 0x20 V77
0x12d: V80 = 0x0
0x12f: V81 = 0x40
0x131: V82 = M[0x40]
0x134: V83 = SUB V79 V82
0x136: V84 = 0x0
0x13a: V85 = EXTCODESIZE V66
0x13b: V86 = ISZERO V85
0x13c: V87 = ISZERO V86
0x13d: V88 = 0x145
0x140: JUMPI 0x145 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V66, 0x9ffa0711, V79, 0x0, V82, V83, V82, 0x0, V66]
Exit stack: [V11, V66, 0x9ffa0711, V79, 0x0, V82, V83, V82, 0x0, V66]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x9a]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V89 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V11, V66, 0x9ffa0711, V79, 0x0, V82, V83, V82, 0x0, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V66, 0x9ffa0711, V79, 0x0, V82, V83, V82, 0x0, V66]

================================

Block 0x145
[0x145:0x151]
---
Predecessors: [0x9a]
Successors: [0x152, 0x156]
---
0x145 JUMPDEST
0x146 PUSH2 0x2c6
0x149 GAS
0x14a SUB
0x14b CALL
0x14c ISZERO
0x14d ISZERO
0x14e PUSH2 0x156
0x151 JUMPI
---
0x145: JUMPDEST 
0x146: V90 = 0x2c6
0x149: V91 = GAS
0x14a: V92 = SUB V91 0x2c6
0x14b: V93 = CALL V92 V66 0x0 V82 V83 V82 0x0
0x14c: V94 = ISZERO V93
0x14d: V95 = ISZERO V94
0x14e: V96 = 0x156
0x151: JUMPI 0x156 V95
---
Entry stack: [V11, V66, 0x9ffa0711, V79, 0x0, V82, V83, V82, 0x0, V66]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V66, 0x9ffa0711, V79]

================================

Block 0x152
[0x152:0x155]
---
Predecessors: [0x145]
Successors: []
---
0x152 PUSH1 0x0
0x154 DUP1
0x155 REVERT
---
0x152: V97 = 0x0
0x155: REVERT 0x0 0x0
---
Entry stack: [V11, V66, 0x9ffa0711, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V66, 0x9ffa0711, V79]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x145]
Successors: [0x15a]
---
0x156 JUMPDEST
0x157 POP
0x158 POP
0x159 POP
---
0x156: JUMPDEST 
---
Entry stack: [V11, V66, 0x9ffa0711, V79]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x15a
[0x15a:0x15b]
---
Predecessors: [0x83, 0x156]
Successors: []
---
0x15a JUMPDEST
0x15b STOP
---
0x15a: JUMPDEST 
0x15b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15c
[0x15c:0x162]
---
Predecessors: [0xd]
Successors: [0x163, 0x167]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e ISZERO
0x15f PUSH2 0x167
0x162 JUMPI
---
0x15c: JUMPDEST 
0x15d: V98 = CALLVALUE
0x15e: V99 = ISZERO V98
0x15f: V100 = 0x167
0x162: JUMPI 0x167 V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x163
[0x163:0x166]
---
Predecessors: [0x15c]
Successors: []
---
0x163 PUSH1 0x0
0x165 DUP1
0x166 REVERT
---
0x163: V101 = 0x0
0x166: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x167
[0x167:0x192]
---
Predecessors: [0x15c]
Successors: [0x26f]
---
0x167 JUMPDEST
0x168 PUSH2 0x193
0x16b PUSH1 0x4
0x16d DUP1
0x16e DUP1
0x16f CALLDATALOAD
0x170 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x185 AND
0x186 SWAP1
0x187 PUSH1 0x20
0x189 ADD
0x18a SWAP1
0x18b SWAP2
0x18c SWAP1
0x18d POP
0x18e POP
0x18f PUSH2 0x26f
0x192 JUMP
---
0x167: JUMPDEST 
0x168: V102 = 0x193
0x16b: V103 = 0x4
0x16f: V104 = CALLDATALOAD 0x4
0x170: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x185: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x187: V107 = 0x20
0x189: V108 = ADD 0x20 0x4
0x18f: V109 = 0x26f
0x192: JUMP 0x26f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x193, V106]
Exit stack: [V11, 0x193, V106]

================================

Block 0x193
[0x193:0x194]
---
Predecessors: [0x397]
Successors: []
---
0x193 JUMPDEST
0x194 STOP
---
0x193: JUMPDEST 
0x194: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x195
[0x195:0x19b]
---
Predecessors: [0x41]
Successors: [0x19c, 0x1a0]
---
0x195 JUMPDEST
0x196 CALLVALUE
0x197 ISZERO
0x198 PUSH2 0x1a0
0x19b JUMPI
---
0x195: JUMPDEST 
0x196: V110 = CALLVALUE
0x197: V111 = ISZERO V110
0x198: V112 = 0x1a0
0x19b: JUMPI 0x1a0 V111
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19c
[0x19c:0x19f]
---
Predecessors: [0x195]
Successors: []
---
0x19c PUSH1 0x0
0x19e DUP1
0x19f REVERT
---
0x19c: V113 = 0x0
0x19f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a0
[0x1a0:0x1b5]
---
Predecessors: [0x195]
Successors: [0x39d]
---
0x1a0 JUMPDEST
0x1a1 PUSH2 0x1b6
0x1a4 PUSH1 0x4
0x1a6 DUP1
0x1a7 DUP1
0x1a8 CALLDATALOAD
0x1a9 SWAP1
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad SWAP1
0x1ae SWAP2
0x1af SWAP1
0x1b0 POP
0x1b1 POP
0x1b2 PUSH2 0x39d
0x1b5 JUMP
---
0x1a0: JUMPDEST 
0x1a1: V114 = 0x1b6
0x1a4: V115 = 0x4
0x1a8: V116 = CALLDATALOAD 0x4
0x1aa: V117 = 0x20
0x1ac: V118 = ADD 0x20 0x4
0x1b2: V119 = 0x39d
0x1b5: JUMP 0x39d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1b6, V116]
Exit stack: [V11, 0x1b6, V116]

================================

Block 0x1b6
[0x1b6:0x1b7]
---
Predecessors: [0x4bd]
Successors: []
---
0x1b6 JUMPDEST
0x1b7 STOP
---
0x1b6: JUMPDEST 
0x1b7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b8
[0x1b8:0x1be]
---
Predecessors: [0x4c]
Successors: [0x1bf, 0x1c3]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba ISZERO
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V120 = CALLVALUE
0x1ba: V121 = ISZERO V120
0x1bb: V122 = 0x1c3
0x1be: JUMPI 0x1c3 V121
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1b8]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V123 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c3
[0x1c3:0x1ee]
---
Predecessors: [0x1b8]
Successors: [0x4c3]
---
0x1c3 JUMPDEST
0x1c4 PUSH2 0x1ef
0x1c7 PUSH1 0x4
0x1c9 DUP1
0x1ca DUP1
0x1cb CALLDATALOAD
0x1cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e1 AND
0x1e2 SWAP1
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP1
0x1e7 SWAP2
0x1e8 SWAP1
0x1e9 POP
0x1ea POP
0x1eb PUSH2 0x4c3
0x1ee JUMP
---
0x1c3: JUMPDEST 
0x1c4: V124 = 0x1ef
0x1c7: V125 = 0x4
0x1cb: V126 = CALLDATALOAD 0x4
0x1cc: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x1e3: V129 = 0x20
0x1e5: V130 = ADD 0x20 0x4
0x1eb: V131 = 0x4c3
0x1ee: JUMP 0x4c3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ef, V128]
Exit stack: [V11, 0x1ef, V128]

================================

Block 0x1ef
[0x1ef:0x1f0]
---
Predecessors: [0x51f]
Successors: []
---
0x1ef JUMPDEST
0x1f0 STOP
---
0x1ef: JUMPDEST 
0x1f0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f1
[0x1f1:0x1f7]
---
Predecessors: [0x57]
Successors: [0x1f8, 0x1fc]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V132 = CALLVALUE
0x1f3: V133 = ISZERO V132
0x1f4: V134 = 0x1fc
0x1f7: JUMPI 0x1fc V133
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V135 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fc
[0x1fc:0x203]
---
Predecessors: [0x1f1]
Successors: [0x562]
---
0x1fc JUMPDEST
0x1fd PUSH2 0x204
0x200 PUSH2 0x562
0x203 JUMP
---
0x1fc: JUMPDEST 
0x1fd: V136 = 0x204
0x200: V137 = 0x562
0x203: JUMP 0x562
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x204]
Exit stack: [V11, 0x204]

================================

Block 0x204
[0x204:0x205]
---
Predecessors: [0x5be]
Successors: []
---
0x204 JUMPDEST
0x205 STOP
---
0x204: JUMPDEST 
0x205: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x206
[0x206:0x20c]
---
Predecessors: [0x62]
Successors: [0x20d, 0x211]
---
0x206 JUMPDEST
0x207 CALLVALUE
0x208 ISZERO
0x209 PUSH2 0x211
0x20c JUMPI
---
0x206: JUMPDEST 
0x207: V138 = CALLVALUE
0x208: V139 = ISZERO V138
0x209: V140 = 0x211
0x20c: JUMPI 0x211 V139
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x20d
[0x20d:0x210]
---
Predecessors: [0x206]
Successors: []
---
0x20d PUSH1 0x0
0x20f DUP1
0x210 REVERT
---
0x20d: V141 = 0x0
0x210: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x211
[0x211:0x218]
---
Predecessors: [0x206]
Successors: [0x60d]
---
0x211 JUMPDEST
0x212 PUSH2 0x219
0x215 PUSH2 0x60d
0x218 JUMP
---
0x211: JUMPDEST 
0x212: V142 = 0x219
0x215: V143 = 0x60d
0x218: JUMP 0x60d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x219]
Exit stack: [V11, 0x219]

================================

Block 0x219
[0x219:0x25a]
---
Predecessors: [0x60d]
Successors: []
---
0x219 JUMPDEST
0x21a PUSH1 0x40
0x21c MLOAD
0x21d DUP1
0x21e DUP3
0x21f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x234 AND
0x235 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24a AND
0x24b DUP2
0x24c MSTORE
0x24d PUSH1 0x20
0x24f ADD
0x250 SWAP2
0x251 POP
0x252 POP
0x253 PUSH1 0x40
0x255 MLOAD
0x256 DUP1
0x257 SWAP2
0x258 SUB
0x259 SWAP1
0x25a RETURN
---
0x219: JUMPDEST 
0x21a: V144 = 0x40
0x21c: V145 = M[0x40]
0x21f: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x234: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x235: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x24c: M[V145] = V149
0x24d: V150 = 0x20
0x24f: V151 = ADD 0x20 V145
0x253: V152 = 0x40
0x255: V153 = M[0x40]
0x258: V154 = SUB V151 V153
0x25a: RETURN V153 V154
---
Entry stack: [V11, 0x219, V364]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x219]

================================

Block 0x25b
[0x25b:0x262]
---
Predecessors: [0x6d]
Successors: [0x633]
---
0x25b JUMPDEST
0x25c PUSH2 0x263
0x25f PUSH2 0x633
0x262 JUMP
---
0x25b: JUMPDEST 
0x25c: V155 = 0x263
0x25f: V156 = 0x633
0x262: JUMP 0x633
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x263]
Exit stack: [V11, 0x263]

================================

Block 0x263
[0x263:0x264]
---
Predecessors: [0x724]
Successors: []
---
0x263 JUMPDEST
0x264 STOP
---
0x263: JUMPDEST 
0x264: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x265
[0x265:0x26c]
---
Predecessors: [0x78]
Successors: [0x72a]
---
0x265 JUMPDEST
0x266 PUSH2 0x26d
0x269 PUSH2 0x72a
0x26c JUMP
---
0x265: JUMPDEST 
0x266: V157 = 0x26d
0x269: V158 = 0x72a
0x26c: JUMP 0x72a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x26d]
Exit stack: [V11, 0x26d]

================================

Block 0x26d
[0x26d:0x26e]
---
Predecessors: [0x72a]
Successors: []
---
0x26d JUMPDEST
0x26e STOP
---
0x26d: JUMPDEST 
0x26e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x26f
[0x26f:0x2c6]
---
Predecessors: [0x167]
Successors: [0x2c7, 0x2cb]
---
0x26f JUMPDEST
0x270 PUSH1 0x1
0x272 PUSH1 0x0
0x274 SWAP1
0x275 SLOAD
0x276 SWAP1
0x277 PUSH2 0x100
0x27a EXP
0x27b SWAP1
0x27c DIV
0x27d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x292 AND
0x293 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a8 AND
0x2a9 ORIGIN
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 EQ
0x2c1 ISZERO
0x2c2 ISZERO
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x26f: JUMPDEST 
0x270: V159 = 0x1
0x272: V160 = 0x0
0x275: V161 = S[0x1]
0x277: V162 = 0x100
0x27a: V163 = EXP 0x100 0x0
0x27c: V164 = DIV V161 0x1
0x27d: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x292: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x293: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x2a9: V169 = ORIGIN
0x2aa: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2c0: V172 = EQ V171 V168
0x2c1: V173 = ISZERO V172
0x2c2: V174 = ISZERO V173
0x2c3: V175 = 0x2cb
0x2c6: JUMPI 0x2cb V174
---
Entry stack: [V11, 0x193, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x193, V106]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x26f]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V176 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x193, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x193, V106]

================================

Block 0x2cb
[0x2cb:0x381]
---
Predecessors: [0x26f]
Successors: [0x382, 0x386]
---
0x2cb JUMPDEST
0x2cc PUSH1 0x0
0x2ce DUP1
0x2cf SWAP1
0x2d0 SLOAD
0x2d1 SWAP1
0x2d2 PUSH2 0x100
0x2d5 EXP
0x2d6 SWAP1
0x2d7 DIV
0x2d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ed AND
0x2ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x303 AND
0x304 PUSH4 0x4797f21b
0x309 DUP3
0x30a PUSH1 0x40
0x30c MLOAD
0x30d DUP3
0x30e PUSH4 0xffffffff
0x313 AND
0x314 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x332 MUL
0x333 DUP2
0x334 MSTORE
0x335 PUSH1 0x4
0x337 ADD
0x338 DUP1
0x339 DUP3
0x33a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34f AND
0x350 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x365 AND
0x366 DUP2
0x367 MSTORE
0x368 PUSH1 0x20
0x36a ADD
0x36b SWAP2
0x36c POP
0x36d POP
0x36e PUSH1 0x0
0x370 PUSH1 0x40
0x372 MLOAD
0x373 DUP1
0x374 DUP4
0x375 SUB
0x376 DUP2
0x377 PUSH1 0x0
0x379 DUP8
0x37a DUP1
0x37b EXTCODESIZE
0x37c ISZERO
0x37d ISZERO
0x37e PUSH2 0x386
0x381 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V177 = 0x0
0x2d0: V178 = S[0x0]
0x2d2: V179 = 0x100
0x2d5: V180 = EXP 0x100 0x0
0x2d7: V181 = DIV V178 0x1
0x2d8: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ed: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x2ee: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x303: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x304: V186 = 0x4797f21b
0x30a: V187 = 0x40
0x30c: V188 = M[0x40]
0x30e: V189 = 0xffffffff
0x313: V190 = AND 0xffffffff 0x4797f21b
0x314: V191 = 0x100000000000000000000000000000000000000000000000000000000
0x332: V192 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4797f21b
0x334: M[V188] = 0x4797f21b00000000000000000000000000000000000000000000000000000000
0x335: V193 = 0x4
0x337: V194 = ADD 0x4 V188
0x33a: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x350: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x365: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x367: M[V194] = V198
0x368: V199 = 0x20
0x36a: V200 = ADD 0x20 V194
0x36e: V201 = 0x0
0x370: V202 = 0x40
0x372: V203 = M[0x40]
0x375: V204 = SUB V200 V203
0x377: V205 = 0x0
0x37b: V206 = EXTCODESIZE V185
0x37c: V207 = ISZERO V206
0x37d: V208 = ISZERO V207
0x37e: V209 = 0x386
0x381: JUMPI 0x386 V208
---
Entry stack: [V11, 0x193, V106]
Stack pops: 1
Stack additions: [S0, V185, 0x4797f21b, V200, 0x0, V203, V204, V203, 0x0, V185]
Exit stack: [V11, 0x193, V106, V185, 0x4797f21b, V200, 0x0, V203, V204, V203, 0x0, V185]

================================

Block 0x382
[0x382:0x385]
---
Predecessors: [0x2cb]
Successors: []
---
0x382 PUSH1 0x0
0x384 DUP1
0x385 REVERT
---
0x382: V210 = 0x0
0x385: REVERT 0x0 0x0
---
Entry stack: [V11, 0x193, V106, V185, 0x4797f21b, V200, 0x0, V203, V204, V203, 0x0, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x193, V106, V185, 0x4797f21b, V200, 0x0, V203, V204, V203, 0x0, V185]

================================

Block 0x386
[0x386:0x392]
---
Predecessors: [0x2cb]
Successors: [0x393, 0x397]
---
0x386 JUMPDEST
0x387 PUSH2 0x2c6
0x38a GAS
0x38b SUB
0x38c CALL
0x38d ISZERO
0x38e ISZERO
0x38f PUSH2 0x397
0x392 JUMPI
---
0x386: JUMPDEST 
0x387: V211 = 0x2c6
0x38a: V212 = GAS
0x38b: V213 = SUB V212 0x2c6
0x38c: V214 = CALL V213 V185 0x0 V203 V204 V203 0x0
0x38d: V215 = ISZERO V214
0x38e: V216 = ISZERO V215
0x38f: V217 = 0x397
0x392: JUMPI 0x397 V216
---
Entry stack: [V11, 0x193, V106, V185, 0x4797f21b, V200, 0x0, V203, V204, V203, 0x0, V185]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x193, V106, V185, 0x4797f21b, V200]

================================

Block 0x393
[0x393:0x396]
---
Predecessors: [0x386]
Successors: []
---
0x393 PUSH1 0x0
0x395 DUP1
0x396 REVERT
---
0x393: V218 = 0x0
0x396: REVERT 0x0 0x0
---
Entry stack: [V11, 0x193, V106, V185, 0x4797f21b, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x193, V106, V185, 0x4797f21b, V200]

================================

Block 0x397
[0x397:0x39c]
---
Predecessors: [0x386]
Successors: [0x193]
---
0x397 JUMPDEST
0x398 POP
0x399 POP
0x39a POP
0x39b POP
0x39c JUMP
---
0x397: JUMPDEST 
0x39c: JUMP 0x193
---
Entry stack: [V11, 0x193, V106, V185, 0x4797f21b, V200]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x39d
[0x39d:0x3f4]
---
Predecessors: [0x1a0]
Successors: [0x3f5, 0x3f9]
---
0x39d JUMPDEST
0x39e PUSH1 0x1
0x3a0 PUSH1 0x0
0x3a2 SWAP1
0x3a3 SLOAD
0x3a4 SWAP1
0x3a5 PUSH2 0x100
0x3a8 EXP
0x3a9 SWAP1
0x3aa DIV
0x3ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c0 AND
0x3c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d6 AND
0x3d7 ORIGIN
0x3d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ed AND
0x3ee EQ
0x3ef ISZERO
0x3f0 ISZERO
0x3f1 PUSH2 0x3f9
0x3f4 JUMPI
---
0x39d: JUMPDEST 
0x39e: V219 = 0x1
0x3a0: V220 = 0x0
0x3a3: V221 = S[0x1]
0x3a5: V222 = 0x100
0x3a8: V223 = EXP 0x100 0x0
0x3aa: V224 = DIV V221 0x1
0x3ab: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c0: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x3c1: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d6: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x3d7: V229 = ORIGIN
0x3d8: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x3ee: V232 = EQ V231 V228
0x3ef: V233 = ISZERO V232
0x3f0: V234 = ISZERO V233
0x3f1: V235 = 0x3f9
0x3f4: JUMPI 0x3f9 V234
---
Entry stack: [V11, 0x1b6, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b6, V116]

================================

Block 0x3f5
[0x3f5:0x3f8]
---
Predecessors: [0x39d]
Successors: []
---
0x3f5 PUSH1 0x0
0x3f7 DUP1
0x3f8 REVERT
---
0x3f5: V236 = 0x0
0x3f8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b6, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b6, V116]

================================

Block 0x3f9
[0x3f9:0x4a7]
---
Predecessors: [0x39d]
Successors: [0x4a8, 0x4ac]
---
0x3f9 JUMPDEST
0x3fa PUSH1 0x0
0x3fc PUSH1 0x3
0x3fe PUSH1 0x0
0x400 PUSH2 0x100
0x403 EXP
0x404 DUP2
0x405 SLOAD
0x406 DUP2
0x407 PUSH1 0xff
0x409 MUL
0x40a NOT
0x40b AND
0x40c SWAP1
0x40d DUP4
0x40e ISZERO
0x40f ISZERO
0x410 MUL
0x411 OR
0x412 SWAP1
0x413 SSTORE
0x414 POP
0x415 DUP1
0x416 PUSH1 0x2
0x418 DUP2
0x419 SWAP1
0x41a SSTORE
0x41b POP
0x41c PUSH1 0x0
0x41e DUP1
0x41f SWAP1
0x420 SLOAD
0x421 SWAP1
0x422 PUSH2 0x100
0x425 EXP
0x426 SWAP1
0x427 DIV
0x428 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43d AND
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 PUSH4 0x9ffa0711
0x459 PUSH1 0x2
0x45b SLOAD
0x45c PUSH1 0x40
0x45e MLOAD
0x45f DUP3
0x460 PUSH4 0xffffffff
0x465 AND
0x466 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x484 MUL
0x485 DUP2
0x486 MSTORE
0x487 PUSH1 0x4
0x489 ADD
0x48a DUP1
0x48b DUP3
0x48c DUP2
0x48d MSTORE
0x48e PUSH1 0x20
0x490 ADD
0x491 SWAP2
0x492 POP
0x493 POP
0x494 PUSH1 0x0
0x496 PUSH1 0x40
0x498 MLOAD
0x499 DUP1
0x49a DUP4
0x49b SUB
0x49c DUP2
0x49d PUSH1 0x0
0x49f DUP8
0x4a0 DUP1
0x4a1 EXTCODESIZE
0x4a2 ISZERO
0x4a3 ISZERO
0x4a4 PUSH2 0x4ac
0x4a7 JUMPI
---
0x3f9: JUMPDEST 
0x3fa: V237 = 0x0
0x3fc: V238 = 0x3
0x3fe: V239 = 0x0
0x400: V240 = 0x100
0x403: V241 = EXP 0x100 0x0
0x405: V242 = S[0x3]
0x407: V243 = 0xff
0x409: V244 = MUL 0xff 0x1
0x40a: V245 = NOT 0xff
0x40b: V246 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V242
0x40e: V247 = ISZERO 0x0
0x40f: V248 = ISZERO 0x1
0x410: V249 = MUL 0x0 0x1
0x411: V250 = OR 0x0 V246
0x413: S[0x3] = V250
0x416: V251 = 0x2
0x41a: S[0x2] = V116
0x41c: V252 = 0x0
0x420: V253 = S[0x0]
0x422: V254 = 0x100
0x425: V255 = EXP 0x100 0x0
0x427: V256 = DIV V253 0x1
0x428: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x43e: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x454: V261 = 0x9ffa0711
0x459: V262 = 0x2
0x45b: V263 = S[0x2]
0x45c: V264 = 0x40
0x45e: V265 = M[0x40]
0x460: V266 = 0xffffffff
0x465: V267 = AND 0xffffffff 0x9ffa0711
0x466: V268 = 0x100000000000000000000000000000000000000000000000000000000
0x484: V269 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x9ffa0711
0x486: M[V265] = 0x9ffa071100000000000000000000000000000000000000000000000000000000
0x487: V270 = 0x4
0x489: V271 = ADD 0x4 V265
0x48d: M[V271] = V263
0x48e: V272 = 0x20
0x490: V273 = ADD 0x20 V271
0x494: V274 = 0x0
0x496: V275 = 0x40
0x498: V276 = M[0x40]
0x49b: V277 = SUB V273 V276
0x49d: V278 = 0x0
0x4a1: V279 = EXTCODESIZE V260
0x4a2: V280 = ISZERO V279
0x4a3: V281 = ISZERO V280
0x4a4: V282 = 0x4ac
0x4a7: JUMPI 0x4ac V281
---
Entry stack: [V11, 0x1b6, V116]
Stack pops: 1
Stack additions: [S0, V260, 0x9ffa0711, V273, 0x0, V276, V277, V276, 0x0, V260]
Exit stack: [V11, 0x1b6, V116, V260, 0x9ffa0711, V273, 0x0, V276, V277, V276, 0x0, V260]

================================

Block 0x4a8
[0x4a8:0x4ab]
---
Predecessors: [0x3f9]
Successors: []
---
0x4a8 PUSH1 0x0
0x4aa DUP1
0x4ab REVERT
---
0x4a8: V283 = 0x0
0x4ab: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b6, V116, V260, 0x9ffa0711, V273, 0x0, V276, V277, V276, 0x0, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b6, V116, V260, 0x9ffa0711, V273, 0x0, V276, V277, V276, 0x0, V260]

================================

Block 0x4ac
[0x4ac:0x4b8]
---
Predecessors: [0x3f9]
Successors: [0x4b9, 0x4bd]
---
0x4ac JUMPDEST
0x4ad PUSH2 0x2c6
0x4b0 GAS
0x4b1 SUB
0x4b2 CALL
0x4b3 ISZERO
0x4b4 ISZERO
0x4b5 PUSH2 0x4bd
0x4b8 JUMPI
---
0x4ac: JUMPDEST 
0x4ad: V284 = 0x2c6
0x4b0: V285 = GAS
0x4b1: V286 = SUB V285 0x2c6
0x4b2: V287 = CALL V286 V260 0x0 V276 V277 V276 0x0
0x4b3: V288 = ISZERO V287
0x4b4: V289 = ISZERO V288
0x4b5: V290 = 0x4bd
0x4b8: JUMPI 0x4bd V289
---
Entry stack: [V11, 0x1b6, V116, V260, 0x9ffa0711, V273, 0x0, V276, V277, V276, 0x0, V260]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1b6, V116, V260, 0x9ffa0711, V273]

================================

Block 0x4b9
[0x4b9:0x4bc]
---
Predecessors: [0x4ac]
Successors: []
---
0x4b9 PUSH1 0x0
0x4bb DUP1
0x4bc REVERT
---
0x4b9: V291 = 0x0
0x4bc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b6, V116, V260, 0x9ffa0711, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b6, V116, V260, 0x9ffa0711, V273]

================================

Block 0x4bd
[0x4bd:0x4c2]
---
Predecessors: [0x4ac]
Successors: [0x1b6]
---
0x4bd JUMPDEST
0x4be POP
0x4bf POP
0x4c0 POP
0x4c1 POP
0x4c2 JUMP
---
0x4bd: JUMPDEST 
0x4c2: JUMP 0x1b6
---
Entry stack: [V11, 0x1b6, V116, V260, 0x9ffa0711, V273]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x4c3
[0x4c3:0x51a]
---
Predecessors: [0x1c3]
Successors: [0x51b, 0x51f]
---
0x4c3 JUMPDEST
0x4c4 PUSH1 0x1
0x4c6 PUSH1 0x0
0x4c8 SWAP1
0x4c9 SLOAD
0x4ca SWAP1
0x4cb PUSH2 0x100
0x4ce EXP
0x4cf SWAP1
0x4d0 DIV
0x4d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e6 AND
0x4e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fc AND
0x4fd ORIGIN
0x4fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x513 AND
0x514 EQ
0x515 ISZERO
0x516 ISZERO
0x517 PUSH2 0x51f
0x51a JUMPI
---
0x4c3: JUMPDEST 
0x4c4: V292 = 0x1
0x4c6: V293 = 0x0
0x4c9: V294 = S[0x1]
0x4cb: V295 = 0x100
0x4ce: V296 = EXP 0x100 0x0
0x4d0: V297 = DIV V294 0x1
0x4d1: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e6: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x4e7: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fc: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x4fd: V302 = ORIGIN
0x4fe: V303 = 0xffffffffffffffffffffffffffffffffffffffff
0x513: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x514: V305 = EQ V304 V301
0x515: V306 = ISZERO V305
0x516: V307 = ISZERO V306
0x517: V308 = 0x51f
0x51a: JUMPI 0x51f V307
---
Entry stack: [V11, 0x1ef, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ef, V128]

================================

Block 0x51b
[0x51b:0x51e]
---
Predecessors: [0x4c3]
Successors: []
---
0x51b PUSH1 0x0
0x51d DUP1
0x51e REVERT
---
0x51b: V309 = 0x0
0x51e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ef, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ef, V128]

================================

Block 0x51f
[0x51f:0x561]
---
Predecessors: [0x4c3]
Successors: [0x1ef]
---
0x51f JUMPDEST
0x520 DUP1
0x521 PUSH1 0x0
0x523 DUP1
0x524 PUSH2 0x100
0x527 EXP
0x528 DUP2
0x529 SLOAD
0x52a DUP2
0x52b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x540 MUL
0x541 NOT
0x542 AND
0x543 SWAP1
0x544 DUP4
0x545 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55a AND
0x55b MUL
0x55c OR
0x55d SWAP1
0x55e SSTORE
0x55f POP
0x560 POP
0x561 JUMP
---
0x51f: JUMPDEST 
0x521: V310 = 0x0
0x524: V311 = 0x100
0x527: V312 = EXP 0x100 0x0
0x529: V313 = S[0x0]
0x52b: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x540: V315 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x541: V316 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x542: V317 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V313
0x545: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x55a: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x55b: V320 = MUL V319 0x1
0x55c: V321 = OR V320 V317
0x55e: S[0x0] = V321
0x561: JUMP 0x1ef
---
Entry stack: [V11, 0x1ef, V128]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x562
[0x562:0x5b9]
---
Predecessors: [0x1fc]
Successors: [0x5ba, 0x5be]
---
0x562 JUMPDEST
0x563 PUSH1 0x1
0x565 PUSH1 0x0
0x567 SWAP1
0x568 SLOAD
0x569 SWAP1
0x56a PUSH2 0x100
0x56d EXP
0x56e SWAP1
0x56f DIV
0x570 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x585 AND
0x586 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59b AND
0x59c ORIGIN
0x59d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b2 AND
0x5b3 EQ
0x5b4 ISZERO
0x5b5 ISZERO
0x5b6 PUSH2 0x5be
0x5b9 JUMPI
---
0x562: JUMPDEST 
0x563: V322 = 0x1
0x565: V323 = 0x0
0x568: V324 = S[0x1]
0x56a: V325 = 0x100
0x56d: V326 = EXP 0x100 0x0
0x56f: V327 = DIV V324 0x1
0x570: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x585: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x586: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x59b: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x59c: V332 = ORIGIN
0x59d: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b2: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x5b3: V335 = EQ V334 V331
0x5b4: V336 = ISZERO V335
0x5b5: V337 = ISZERO V336
0x5b6: V338 = 0x5be
0x5b9: JUMPI 0x5be V337
---
Entry stack: [V11, 0x204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x204]

================================

Block 0x5ba
[0x5ba:0x5bd]
---
Predecessors: [0x562]
Successors: []
---
0x5ba PUSH1 0x0
0x5bc DUP1
0x5bd REVERT
---
0x5ba: V339 = 0x0
0x5bd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x204]

================================

Block 0x5be
[0x5be:0x60c]
---
Predecessors: [0x562]
Successors: [0x204]
---
0x5be JUMPDEST
0x5bf CALLER
0x5c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d5 AND
0x5d6 PUSH2 0x8fc
0x5d9 ADDRESS
0x5da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ef AND
0x5f0 BALANCE
0x5f1 SWAP1
0x5f2 DUP2
0x5f3 ISZERO
0x5f4 MUL
0x5f5 SWAP1
0x5f6 PUSH1 0x40
0x5f8 MLOAD
0x5f9 PUSH1 0x0
0x5fb PUSH1 0x40
0x5fd MLOAD
0x5fe DUP1
0x5ff DUP4
0x600 SUB
0x601 DUP2
0x602 DUP6
0x603 DUP9
0x604 DUP9
0x605 CALL
0x606 SWAP4
0x607 POP
0x608 POP
0x609 POP
0x60a POP
0x60b POP
0x60c JUMP
---
0x5be: JUMPDEST 
0x5bf: V340 = CALLER
0x5c0: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d5: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x5d6: V343 = 0x8fc
0x5d9: V344 = ADDRESS
0x5da: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ef: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x5f0: V347 = BALANCE V346
0x5f3: V348 = ISZERO V347
0x5f4: V349 = MUL V348 0x8fc
0x5f6: V350 = 0x40
0x5f8: V351 = M[0x40]
0x5f9: V352 = 0x0
0x5fb: V353 = 0x40
0x5fd: V354 = M[0x40]
0x600: V355 = SUB V351 V354
0x605: V356 = CALL V349 V342 V347 V354 V355 V354 0x0
0x60c: JUMP 0x204
---
Entry stack: [V11, 0x204]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x60d
[0x60d:0x632]
---
Predecessors: [0x211]
Successors: [0x219]
---
0x60d JUMPDEST
0x60e PUSH1 0x1
0x610 PUSH1 0x0
0x612 SWAP1
0x613 SLOAD
0x614 SWAP1
0x615 PUSH2 0x100
0x618 EXP
0x619 SWAP1
0x61a DIV
0x61b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x630 AND
0x631 DUP2
0x632 JUMP
---
0x60d: JUMPDEST 
0x60e: V357 = 0x1
0x610: V358 = 0x0
0x613: V359 = S[0x1]
0x615: V360 = 0x100
0x618: V361 = EXP 0x100 0x0
0x61a: V362 = DIV V359 0x1
0x61b: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x630: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x632: JUMP 0x219
---
Entry stack: [V11, 0x219]
Stack pops: 1
Stack additions: [S0, V364]
Exit stack: [V11, 0x219, V364]

================================

Block 0x633
[0x633:0x68a]
---
Predecessors: [0x25b]
Successors: [0x68b, 0x68f]
---
0x633 JUMPDEST
0x634 PUSH1 0x1
0x636 PUSH1 0x0
0x638 SWAP1
0x639 SLOAD
0x63a SWAP1
0x63b PUSH2 0x100
0x63e EXP
0x63f SWAP1
0x640 DIV
0x641 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x656 AND
0x657 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66c AND
0x66d ORIGIN
0x66e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x683 AND
0x684 EQ
0x685 ISZERO
0x686 ISZERO
0x687 PUSH2 0x68f
0x68a JUMPI
---
0x633: JUMPDEST 
0x634: V365 = 0x1
0x636: V366 = 0x0
0x639: V367 = S[0x1]
0x63b: V368 = 0x100
0x63e: V369 = EXP 0x100 0x0
0x640: V370 = DIV V367 0x1
0x641: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x656: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x657: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x66c: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x66d: V375 = ORIGIN
0x66e: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x683: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x684: V378 = EQ V377 V374
0x685: V379 = ISZERO V378
0x686: V380 = ISZERO V379
0x687: V381 = 0x68f
0x68a: JUMPI 0x68f V380
---
Entry stack: [V11, 0x263]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x263]

================================

Block 0x68b
[0x68b:0x68e]
---
Predecessors: [0x633]
Successors: []
---
0x68b PUSH1 0x0
0x68d DUP1
0x68e REVERT
---
0x68b: V382 = 0x0
0x68e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x263]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x263]

================================

Block 0x68f
[0x68f:0x70e]
---
Predecessors: [0x633]
Successors: [0x70f, 0x713]
---
0x68f JUMPDEST
0x690 PUSH1 0x0
0x692 DUP1
0x693 SWAP1
0x694 SLOAD
0x695 SWAP1
0x696 PUSH2 0x100
0x699 EXP
0x69a SWAP1
0x69b DIV
0x69c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b1 AND
0x6b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c7 AND
0x6c8 PUSH4 0xed21248c
0x6cd CALLVALUE
0x6ce PUSH1 0x40
0x6d0 MLOAD
0x6d1 DUP3
0x6d2 PUSH4 0xffffffff
0x6d7 AND
0x6d8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6f6 MUL
0x6f7 DUP2
0x6f8 MSTORE
0x6f9 PUSH1 0x4
0x6fb ADD
0x6fc PUSH1 0x0
0x6fe PUSH1 0x40
0x700 MLOAD
0x701 DUP1
0x702 DUP4
0x703 SUB
0x704 DUP2
0x705 DUP6
0x706 DUP9
0x707 DUP1
0x708 EXTCODESIZE
0x709 ISZERO
0x70a ISZERO
0x70b PUSH2 0x713
0x70e JUMPI
---
0x68f: JUMPDEST 
0x690: V383 = 0x0
0x694: V384 = S[0x0]
0x696: V385 = 0x100
0x699: V386 = EXP 0x100 0x0
0x69b: V387 = DIV V384 0x1
0x69c: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x6b2: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c7: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x6c8: V392 = 0xed21248c
0x6cd: V393 = CALLVALUE
0x6ce: V394 = 0x40
0x6d0: V395 = M[0x40]
0x6d2: V396 = 0xffffffff
0x6d7: V397 = AND 0xffffffff 0xed21248c
0x6d8: V398 = 0x100000000000000000000000000000000000000000000000000000000
0x6f6: V399 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xed21248c
0x6f8: M[V395] = 0xed21248c00000000000000000000000000000000000000000000000000000000
0x6f9: V400 = 0x4
0x6fb: V401 = ADD 0x4 V395
0x6fc: V402 = 0x0
0x6fe: V403 = 0x40
0x700: V404 = M[0x40]
0x703: V405 = SUB V401 V404
0x708: V406 = EXTCODESIZE V391
0x709: V407 = ISZERO V406
0x70a: V408 = ISZERO V407
0x70b: V409 = 0x713
0x70e: JUMPI 0x713 V408
---
Entry stack: [V11, 0x263]
Stack pops: 0
Stack additions: [V391, 0xed21248c, V393, V401, 0x0, V404, V405, V404, V393, V391]
Exit stack: [V11, 0x263, V391, 0xed21248c, V393, V401, 0x0, V404, V405, V404, V393, V391]

================================

Block 0x70f
[0x70f:0x712]
---
Predecessors: [0x68f]
Successors: []
---
0x70f PUSH1 0x0
0x711 DUP1
0x712 REVERT
---
0x70f: V410 = 0x0
0x712: REVERT 0x0 0x0
---
Entry stack: [V11, 0x263, V391, 0xed21248c, V393, V401, 0x0, V404, V405, V404, V393, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x263, V391, 0xed21248c, V393, V401, 0x0, V404, V405, V404, V393, V391]

================================

Block 0x713
[0x713:0x71f]
---
Predecessors: [0x68f]
Successors: [0x720, 0x724]
---
0x713 JUMPDEST
0x714 PUSH2 0x25ee
0x717 GAS
0x718 SUB
0x719 CALL
0x71a ISZERO
0x71b ISZERO
0x71c PUSH2 0x724
0x71f JUMPI
---
0x713: JUMPDEST 
0x714: V411 = 0x25ee
0x717: V412 = GAS
0x718: V413 = SUB V412 0x25ee
0x719: V414 = CALL V413 V391 V393 V404 V405 V404 0x0
0x71a: V415 = ISZERO V414
0x71b: V416 = ISZERO V415
0x71c: V417 = 0x724
0x71f: JUMPI 0x724 V416
---
Entry stack: [V11, 0x263, V391, 0xed21248c, V393, V401, 0x0, V404, V405, V404, V393, V391]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x263, V391, 0xed21248c, V393, V401]

================================

Block 0x720
[0x720:0x723]
---
Predecessors: [0x713]
Successors: []
---
0x720 PUSH1 0x0
0x722 DUP1
0x723 REVERT
---
0x720: V418 = 0x0
0x723: REVERT 0x0 0x0
---
Entry stack: [V11, 0x263, V391, 0xed21248c, V393, V401]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x263, V391, 0xed21248c, V393, V401]

================================

Block 0x724
[0x724:0x729]
---
Predecessors: [0x713]
Successors: [0x263]
---
0x724 JUMPDEST
0x725 POP
0x726 POP
0x727 POP
0x728 POP
0x729 JUMP
---
0x724: JUMPDEST 
0x729: JUMP 0x263
---
Entry stack: [V11, 0x263, V391, 0xed21248c, V393, V401]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x72a
[0x72a:0x72b]
---
Predecessors: [0x265]
Successors: [0x26d]
---
0x72a JUMPDEST
0x72b JUMP
---
0x72a: JUMPDEST 
0x72b: JUMP 0x26d
---
Entry stack: [V11, 0x26d]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x72c
[0x72c:0x757]
---
Predecessors: []
Successors: []
---
0x72c STOP
0x72d LOG1
0x72e PUSH6 0x627a7a723058
0x735 SHA3
0x736 MISSING 0xc6
0x737 CALLER
0x738 MLOAD
0x739 MISSING 0xe9
0x73a MSTORE8
0x73b SHL
0x73c RETURNDATACOPY
0x73d MSTORE8
0x73e MISSING 0xb2
0x73f DUP8
0x740 MISSING 0xe8
0x741 PUSH10 0x8bb41ee24277d4041443
0x74c DIV
0x74d MISSING 0xe2
0x74e SELFDESTRUCT
0x74f MISSING 0xb6
0x750 DUP16
0x751 MISSING 0xe3
0x752 COINBASE
0x753 POP
0x754 SWAP8
0x755 MISSING 0xd
0x756 STOP
0x757 MISSING 0x29
---
0x72c: STOP 
0x72d: LOG S0 S1 S2
0x72e: V419 = 0x627a7a723058
0x735: V420 = SHA3 0x627a7a723058 S3
0x736: MISSING 0xc6
0x737: V421 = CALLER
0x738: V422 = M[V421]
0x739: MISSING 0xe9
0x73a: M8[S0] = S1
0x73b: V423 = SHL S2 S3
0x73c: RETURNDATACOPY V423 S4 S5
0x73d: M8[S6] = S7
0x73e: MISSING 0xb2
0x740: MISSING 0xe8
0x741: V424 = 0x8bb41ee24277d4041443
0x74c: V425 = DIV 0x8bb41ee24277d4041443 S0
0x74d: MISSING 0xe2
0x74e: SELFDESTRUCT S0
0x74f: MISSING 0xb6
0x751: MISSING 0xe3
0x752: V426 = COINBASE
0x755: MISSING 0xd
0x756: STOP 
0x757: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V420, V422, S7, S0, S1, S2, S3, S4, S5, S6, S7, V425, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S8, S1, S2, S3, S4, S5, S6, S7, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x4797f21b
Entry block: 0x15c
Exit block: 0x193
Body: 0x15c, 0x163, 0x167, 0x193, 0x26f, 0x2c7, 0x2cb, 0x382, 0x386, 0x393, 0x397

Function 1:
Public function signature: 0x64dd891a
Entry block: 0x195
Exit block: 0x1b6
Body: 0x195, 0x19c, 0x1a0, 0x1b6, 0x39d, 0x3f5, 0x3f9, 0x4a8, 0x4ac, 0x4b9, 0x4bd

Function 2:
Public function signature: 0x82aa86a6
Entry block: 0x1b8
Exit block: 0x1ef
Body: 0x1b8, 0x1bf, 0x1c3, 0x1ef, 0x4c3, 0x51b, 0x51f

Function 3:
Public function signature: 0x87f14e6f
Entry block: 0x1f1
Exit block: 0x204
Body: 0x1f1, 0x1f8, 0x1fc, 0x204, 0x562, 0x5ba, 0x5be

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x206
Exit block: 0x219
Body: 0x206, 0x20d, 0x211, 0x219, 0x60d

Function 5:
Public function signature: 0xd03ffefb
Entry block: 0x25b
Exit block: 0x263
Body: 0x25b, 0x263, 0x633, 0x68b, 0x68f, 0x70f, 0x713, 0x720, 0x724

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x265
Exit block: 0x26d
Body: 0x265, 0x26d, 0x72a

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x15a
Body: 0x83, 0x9a, 0x141, 0x145, 0x152, 0x156, 0x15a

