Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x85]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x166eb4cb
0x3c EQ
0x3d PUSH2 0x85
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x166eb4cb
0x3c: V13 = EQ 0x166eb4cb V11
0x3d: V14 = 0x85
0x40: JUMPI 0x85 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xaa]
---
0x41 DUP1
0x42 PUSH4 0x251c1aa3
0x47 EQ
0x48 PUSH2 0xaa
0x4b JUMPI
---
0x42: V15 = 0x251c1aa3
0x47: V16 = EQ 0x251c1aa3 V11
0x48: V17 = 0xaa
0x4b: JUMPI 0xaa V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd3]
---
0x4c DUP1
0x4d PUSH4 0x81777b78
0x52 EQ
0x53 PUSH2 0xd3
0x56 JUMPI
---
0x4d: V18 = 0x81777b78
0x52: V19 = EQ 0x81777b78 V11
0x53: V20 = 0xd3
0x56: JUMPI 0xd3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xf6]
---
0x57 DUP1
0x58 PUSH4 0x87f24484
0x5d EQ
0x5e PUSH2 0xf6
0x61 JUMPI
---
0x58: V21 = 0x87f24484
0x5d: V22 = EQ 0x87f24484 V11
0x5e: V23 = 0xf6
0x61: JUMPI 0xf6 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x127]
---
0x62 DUP1
0x63 PUSH4 0x9f7e1fed
0x68 EQ
0x69 PUSH2 0x127
0x6c JUMPI
---
0x63: V24 = 0x9f7e1fed
0x68: V25 = EQ 0x9f7e1fed V11
0x69: V26 = 0x127
0x6c: JUMPI 0x127 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x14a]
---
0x6d DUP1
0x6e PUSH4 0xb456ecc5
0x73 EQ
0x74 PUSH2 0x14a
0x77 JUMPI
---
0x6e: V27 = 0xb456ecc5
0x73: V28 = EQ 0xb456ecc5 V11
0x74: V29 = 0x14a
0x77: JUMPI 0x14a V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x1c3]
---
0x78 DUP1
0x79 PUSH4 0xcf309012
0x7e EQ
0x7f PUSH2 0x1c3
0x82 JUMPI
---
0x79: V30 = 0xcf309012
0x7e: V31 = EQ 0xcf309012 V11
0x7f: V32 = 0x1c3
0x82: JUMPI 0x1c3 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0xa7]
---
Predecessors: [0xd]
Successors: [0x1f0]
---
0x85 JUMPDEST
0x86 PUSH2 0xa8
0x89 PUSH1 0x4
0x8b DUP1
0x8c DUP1
0x8d CALLDATALOAD
0x8e PUSH1 0x0
0x90 NOT
0x91 AND
0x92 SWAP1
0x93 PUSH1 0x20
0x95 ADD
0x96 SWAP1
0x97 SWAP2
0x98 SWAP1
0x99 DUP1
0x9a CALLDATALOAD
0x9b SWAP1
0x9c PUSH1 0x20
0x9e ADD
0x9f SWAP1
0xa0 SWAP2
0xa1 SWAP1
0xa2 POP
0xa3 POP
0xa4 PUSH2 0x1f0
0xa7 JUMP
---
0x85: JUMPDEST 
0x86: V33 = 0xa8
0x89: V34 = 0x4
0x8d: V35 = CALLDATALOAD 0x4
0x8e: V36 = 0x0
0x90: V37 = NOT 0x0
0x91: V38 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V35
0x93: V39 = 0x20
0x95: V40 = ADD 0x20 0x4
0x9a: V41 = CALLDATALOAD 0x24
0x9c: V42 = 0x20
0x9e: V43 = ADD 0x20 0x24
0xa4: V44 = 0x1f0
0xa7: JUMP 0x1f0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa8, V38, V41]
Exit stack: [V11, 0xa8, V38, V41]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: [0x22e]
Successors: []
---
0xa8 JUMPDEST
0xa9 STOP
---
0xa8: JUMPDEST 
0xa9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaa
[0xaa:0xb0]
---
Predecessors: [0x41]
Successors: [0xb1, 0xb5]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0xaa: JUMPDEST 
0xab: V45 = CALLVALUE
0xac: V46 = ISZERO V45
0xad: V47 = 0xb5
0xb0: JUMPI 0xb5 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0xaa]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V48 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xbc]
---
Predecessors: [0xaa]
Successors: [0x232]
---
0xb5 JUMPDEST
0xb6 PUSH2 0xbd
0xb9 PUSH2 0x232
0xbc JUMP
---
0xb5: JUMPDEST 
0xb6: V49 = 0xbd
0xb9: V50 = 0x232
0xbc: JUMP 0x232
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbd]
Exit stack: [V11, 0xbd]

================================

Block 0xbd
[0xbd:0xd2]
---
Predecessors: [0x232]
Successors: []
---
0xbd JUMPDEST
0xbe PUSH1 0x40
0xc0 MLOAD
0xc1 DUP1
0xc2 DUP3
0xc3 DUP2
0xc4 MSTORE
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 SWAP2
0xc9 POP
0xca POP
0xcb PUSH1 0x40
0xcd MLOAD
0xce DUP1
0xcf SWAP2
0xd0 SUB
0xd1 SWAP1
0xd2 RETURN
---
0xbd: JUMPDEST 
0xbe: V51 = 0x40
0xc0: V52 = M[0x40]
0xc4: M[V52] = V179
0xc5: V53 = 0x20
0xc7: V54 = ADD 0x20 V52
0xcb: V55 = 0x40
0xcd: V56 = M[0x40]
0xd0: V57 = SUB V54 V56
0xd2: RETURN V56 V57
---
Entry stack: [V11, 0xbd, V179]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0xd3
[0xd3:0xf3]
---
Predecessors: [0x4c]
Successors: [0x238]
---
0xd3 JUMPDEST
0xd4 PUSH2 0xf4
0xd7 PUSH1 0x4
0xd9 DUP1
0xda DUP1
0xdb CALLDATALOAD
0xdc SWAP1
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 DUP3
0xe2 ADD
0xe3 DUP1
0xe4 CALLDATALOAD
0xe5 SWAP1
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 SWAP2
0xea SWAP1
0xeb SWAP2
0xec SWAP3
0xed SWAP1
0xee POP
0xef POP
0xf0 PUSH2 0x238
0xf3 JUMP
---
0xd3: JUMPDEST 
0xd4: V58 = 0xf4
0xd7: V59 = 0x4
0xdb: V60 = CALLDATALOAD 0x4
0xdd: V61 = 0x20
0xdf: V62 = ADD 0x20 0x4
0xe2: V63 = ADD 0x4 V60
0xe4: V64 = CALLDATALOAD V63
0xe6: V65 = 0x20
0xe8: V66 = ADD 0x20 V63
0xf0: V67 = 0x238
0xf3: JUMP 0x238
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf4, V66, V64]
Exit stack: [V11, 0xf4, V66, V64]

================================

Block 0xf4
[0xf4:0xf5]
---
Predecessors: [0x3ee]
Successors: []
---
0xf4 JUMPDEST
0xf5 STOP
---
0xf4: JUMPDEST 
0xf5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf6
[0xf6:0xfc]
---
Predecessors: [0x57]
Successors: [0xfd, 0x101]
---
0xf6 JUMPDEST
0xf7 CALLVALUE
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf6: JUMPDEST 
0xf7: V68 = CALLVALUE
0xf8: V69 = ISZERO V68
0xf9: V70 = 0x101
0xfc: JUMPI 0x101 V69
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf6]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V71 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x101
[0x101:0x108]
---
Predecessors: [0xf6]
Successors: [0x3f3]
---
0x101 JUMPDEST
0x102 PUSH2 0x109
0x105 PUSH2 0x3f3
0x108 JUMP
---
0x101: JUMPDEST 
0x102: V72 = 0x109
0x105: V73 = 0x3f3
0x108: JUMP 0x3f3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x109]
Exit stack: [V11, 0x109]

================================

Block 0x109
[0x109:0x126]
---
Predecessors: [0x3f3]
Successors: []
---
0x109 JUMPDEST
0x10a PUSH1 0x40
0x10c MLOAD
0x10d DUP1
0x10e DUP3
0x10f PUSH1 0x0
0x111 NOT
0x112 AND
0x113 PUSH1 0x0
0x115 NOT
0x116 AND
0x117 DUP2
0x118 MSTORE
0x119 PUSH1 0x20
0x11b ADD
0x11c SWAP2
0x11d POP
0x11e POP
0x11f PUSH1 0x40
0x121 MLOAD
0x122 DUP1
0x123 SWAP2
0x124 SUB
0x125 SWAP1
0x126 RETURN
---
0x109: JUMPDEST 
0x10a: V74 = 0x40
0x10c: V75 = M[0x40]
0x10f: V76 = 0x0
0x111: V77 = NOT 0x0
0x112: V78 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V310
0x113: V79 = 0x0
0x115: V80 = NOT 0x0
0x116: V81 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V78
0x118: M[V75] = V81
0x119: V82 = 0x20
0x11b: V83 = ADD 0x20 V75
0x11f: V84 = 0x40
0x121: V85 = M[0x40]
0x124: V86 = SUB V83 V85
0x126: RETURN V85 V86
---
Entry stack: [V11, 0x109, V310]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x109]

================================

Block 0x127
[0x127:0x147]
---
Predecessors: [0x62]
Successors: [0x3f9]
---
0x127 JUMPDEST
0x128 PUSH2 0x148
0x12b PUSH1 0x4
0x12d DUP1
0x12e DUP1
0x12f CALLDATALOAD
0x130 SWAP1
0x131 PUSH1 0x20
0x133 ADD
0x134 SWAP1
0x135 DUP3
0x136 ADD
0x137 DUP1
0x138 CALLDATALOAD
0x139 SWAP1
0x13a PUSH1 0x20
0x13c ADD
0x13d SWAP2
0x13e SWAP1
0x13f SWAP2
0x140 SWAP3
0x141 SWAP1
0x142 POP
0x143 POP
0x144 PUSH2 0x3f9
0x147 JUMP
---
0x127: JUMPDEST 
0x128: V87 = 0x148
0x12b: V88 = 0x4
0x12f: V89 = CALLDATALOAD 0x4
0x131: V90 = 0x20
0x133: V91 = ADD 0x20 0x4
0x136: V92 = ADD 0x4 V89
0x138: V93 = CALLDATALOAD V92
0x13a: V94 = 0x20
0x13c: V95 = ADD 0x20 V92
0x144: V96 = 0x3f9
0x147: JUMP 0x3f9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x148, V95, V93]
Exit stack: [V11, 0x148, V95, V93]

================================

Block 0x148
[0x148:0x149]
---
Predecessors: [0x500]
Successors: []
---
0x148 JUMPDEST
0x149 STOP
---
0x148: JUMPDEST 
0x149: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14a
[0x14a:0x150]
---
Predecessors: [0x6d]
Successors: [0x151, 0x155]
---
0x14a JUMPDEST
0x14b CALLVALUE
0x14c ISZERO
0x14d PUSH2 0x155
0x150 JUMPI
---
0x14a: JUMPDEST 
0x14b: V97 = CALLVALUE
0x14c: V98 = ISZERO V97
0x14d: V99 = 0x155
0x150: JUMPI 0x155 V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x151
[0x151:0x154]
---
Predecessors: [0x14a]
Successors: []
---
0x151 PUSH1 0x0
0x153 DUP1
0x154 REVERT
---
0x151: V100 = 0x0
0x154: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x155
[0x155:0x1a4]
---
Predecessors: [0x14a]
Successors: [0x505]
---
0x155 JUMPDEST
0x156 PUSH2 0x1a5
0x159 PUSH1 0x4
0x15b DUP1
0x15c DUP1
0x15d CALLDATALOAD
0x15e SWAP1
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP1
0x163 DUP3
0x164 ADD
0x165 DUP1
0x166 CALLDATALOAD
0x167 SWAP1
0x168 PUSH1 0x20
0x16a ADD
0x16b SWAP1
0x16c DUP1
0x16d DUP1
0x16e PUSH1 0x1f
0x170 ADD
0x171 PUSH1 0x20
0x173 DUP1
0x174 SWAP2
0x175 DIV
0x176 MUL
0x177 PUSH1 0x20
0x179 ADD
0x17a PUSH1 0x40
0x17c MLOAD
0x17d SWAP1
0x17e DUP2
0x17f ADD
0x180 PUSH1 0x40
0x182 MSTORE
0x183 DUP1
0x184 SWAP4
0x185 SWAP3
0x186 SWAP2
0x187 SWAP1
0x188 DUP2
0x189 DUP2
0x18a MSTORE
0x18b PUSH1 0x20
0x18d ADD
0x18e DUP4
0x18f DUP4
0x190 DUP1
0x191 DUP3
0x192 DUP5
0x193 CALLDATACOPY
0x194 DUP3
0x195 ADD
0x196 SWAP2
0x197 POP
0x198 POP
0x199 POP
0x19a POP
0x19b POP
0x19c POP
0x19d SWAP2
0x19e SWAP1
0x19f POP
0x1a0 POP
0x1a1 PUSH2 0x505
0x1a4 JUMP
---
0x155: JUMPDEST 
0x156: V101 = 0x1a5
0x159: V102 = 0x4
0x15d: V103 = CALLDATALOAD 0x4
0x15f: V104 = 0x20
0x161: V105 = ADD 0x20 0x4
0x164: V106 = ADD 0x4 V103
0x166: V107 = CALLDATALOAD V106
0x168: V108 = 0x20
0x16a: V109 = ADD 0x20 V106
0x16e: V110 = 0x1f
0x170: V111 = ADD 0x1f V107
0x171: V112 = 0x20
0x175: V113 = DIV V111 0x20
0x176: V114 = MUL V113 0x20
0x177: V115 = 0x20
0x179: V116 = ADD 0x20 V114
0x17a: V117 = 0x40
0x17c: V118 = M[0x40]
0x17f: V119 = ADD V118 V116
0x180: V120 = 0x40
0x182: M[0x40] = V119
0x18a: M[V118] = V107
0x18b: V121 = 0x20
0x18d: V122 = ADD 0x20 V118
0x193: CALLDATACOPY V122 V109 V107
0x195: V123 = ADD V122 V107
0x1a1: V124 = 0x505
0x1a4: JUMP 0x505
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1a5, V118]
Exit stack: [V11, 0x1a5, V118]

================================

Block 0x1a5
[0x1a5:0x1c2]
---
Predecessors: [0x53d]
Successors: []
---
0x1a5 JUMPDEST
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 DUP1
0x1aa DUP3
0x1ab PUSH1 0x0
0x1ad NOT
0x1ae AND
0x1af PUSH1 0x0
0x1b1 NOT
0x1b2 AND
0x1b3 DUP2
0x1b4 MSTORE
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP2
0x1b9 POP
0x1ba POP
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be DUP1
0x1bf SWAP2
0x1c0 SUB
0x1c1 SWAP1
0x1c2 RETURN
---
0x1a5: JUMPDEST 
0x1a6: V125 = 0x40
0x1a8: V126 = M[0x40]
0x1ab: V127 = 0x0
0x1ad: V128 = NOT 0x0
0x1ae: V129 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V435
0x1af: V130 = 0x0
0x1b1: V131 = NOT 0x0
0x1b2: V132 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V129
0x1b4: M[V126] = V132
0x1b5: V133 = 0x20
0x1b7: V134 = ADD 0x20 V126
0x1bb: V135 = 0x40
0x1bd: V136 = M[0x40]
0x1c0: V137 = SUB V134 V136
0x1c2: RETURN V136 V137
---
Entry stack: [V11, V435]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c3
[0x1c3:0x1c9]
---
Predecessors: [0x78]
Successors: [0x1ca, 0x1ce]
---
0x1c3 JUMPDEST
0x1c4 CALLVALUE
0x1c5 ISZERO
0x1c6 PUSH2 0x1ce
0x1c9 JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V138 = CALLVALUE
0x1c5: V139 = ISZERO V138
0x1c6: V140 = 0x1ce
0x1c9: JUMPI 0x1ce V139
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ca
[0x1ca:0x1cd]
---
Predecessors: [0x1c3]
Successors: []
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd REVERT
---
0x1ca: V141 = 0x0
0x1cd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ce
[0x1ce:0x1d5]
---
Predecessors: [0x1c3]
Successors: [0x571]
---
0x1ce JUMPDEST
0x1cf PUSH2 0x1d6
0x1d2 PUSH2 0x571
0x1d5 JUMP
---
0x1ce: JUMPDEST 
0x1cf: V142 = 0x1d6
0x1d2: V143 = 0x571
0x1d5: JUMP 0x571
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1d6]
Exit stack: [V11, 0x1d6]

================================

Block 0x1d6
[0x1d6:0x1ef]
---
Predecessors: [0x571]
Successors: []
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da DUP1
0x1db DUP3
0x1dc ISZERO
0x1dd ISZERO
0x1de ISZERO
0x1df ISZERO
0x1e0 DUP2
0x1e1 MSTORE
0x1e2 PUSH1 0x20
0x1e4 ADD
0x1e5 SWAP2
0x1e6 POP
0x1e7 POP
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb DUP1
0x1ec SWAP2
0x1ed SUB
0x1ee SWAP1
0x1ef RETURN
---
0x1d6: JUMPDEST 
0x1d7: V144 = 0x40
0x1d9: V145 = M[0x40]
0x1dc: V146 = ISZERO V443
0x1dd: V147 = ISZERO V146
0x1de: V148 = ISZERO V147
0x1df: V149 = ISZERO V148
0x1e1: M[V145] = V149
0x1e2: V150 = 0x20
0x1e4: V151 = ADD 0x20 V145
0x1e8: V152 = 0x40
0x1ea: V153 = M[0x40]
0x1ed: V154 = SUB V151 V153
0x1ef: RETURN V153 V154
---
Entry stack: [V11, 0x1d6, V443]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1d6]

================================

Block 0x1f0
[0x1f0:0x207]
---
Predecessors: [0x85]
Successors: [0x208, 0x214]
---
0x1f0 JUMPDEST
0x1f1 PUSH1 0x2
0x1f3 PUSH1 0x0
0x1f5 SWAP1
0x1f6 SLOAD
0x1f7 SWAP1
0x1f8 PUSH2 0x100
0x1fb EXP
0x1fc SWAP1
0x1fd DIV
0x1fe PUSH1 0xff
0x200 AND
0x201 ISZERO
0x202 DUP1
0x203 ISZERO
0x204 PUSH2 0x214
0x207 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V155 = 0x2
0x1f3: V156 = 0x0
0x1f6: V157 = S[0x2]
0x1f8: V158 = 0x100
0x1fb: V159 = EXP 0x100 0x0
0x1fd: V160 = DIV V157 0x1
0x1fe: V161 = 0xff
0x200: V162 = AND 0xff V160
0x201: V163 = ISZERO V162
0x203: V164 = ISZERO V163
0x204: V165 = 0x214
0x207: JUMPI 0x214 V164
---
Entry stack: [V11, 0xa8, V38, V41]
Stack pops: 0
Stack additions: [V163]
Exit stack: [V11, 0xa8, V38, V41, V163]

================================

Block 0x208
[0x208:0x213]
---
Predecessors: [0x1f0]
Successors: [0x214]
---
0x208 POP
0x209 PUSH8 0x429d069189e0000
0x212 CALLVALUE
0x213 GT
---
0x209: V166 = 0x429d069189e0000
0x212: V167 = CALLVALUE
0x213: V168 = GT V167 0x429d069189e0000
---
Entry stack: [V11, 0xa8, V38, V41, V163]
Stack pops: 1
Stack additions: [V168]
Exit stack: [V11, 0xa8, V38, V41, V168]

================================

Block 0x214
[0x214:0x219]
---
Predecessors: [0x1f0, 0x208]
Successors: [0x21a, 0x22e]
---
0x214 JUMPDEST
0x215 ISZERO
0x216 PUSH2 0x22e
0x219 JUMPI
---
0x214: JUMPDEST 
0x215: V169 = ISZERO S0
0x216: V170 = 0x22e
0x219: JUMPI 0x22e V169
---
Entry stack: [V11, 0xa8, V38, V41, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa8, V38, V41]

================================

Block 0x21a
[0x21a:0x22d]
---
Predecessors: [0x214]
Successors: [0x22e]
---
0x21a DUP1
0x21b TIMESTAMP
0x21c ADD
0x21d PUSH1 0x1
0x21f DUP2
0x220 SWAP1
0x221 SSTORE
0x222 POP
0x223 DUP2
0x224 PUSH1 0x0
0x226 DUP2
0x227 PUSH1 0x0
0x229 NOT
0x22a AND
0x22b SWAP1
0x22c SSTORE
0x22d POP
---
0x21b: V171 = TIMESTAMP
0x21c: V172 = ADD V171 V41
0x21d: V173 = 0x1
0x221: S[0x1] = V172
0x224: V174 = 0x0
0x227: V175 = 0x0
0x229: V176 = NOT 0x0
0x22a: V177 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V38
0x22c: S[0x0] = V177
---
Entry stack: [V11, 0xa8, V38, V41]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xa8, V38, V41]

================================

Block 0x22e
[0x22e:0x231]
---
Predecessors: [0x214, 0x21a]
Successors: [0xa8]
---
0x22e JUMPDEST
0x22f POP
0x230 POP
0x231 JUMP
---
0x22e: JUMPDEST 
0x231: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V38, V41]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x232
[0x232:0x237]
---
Predecessors: [0xb5]
Successors: [0xbd]
---
0x232 JUMPDEST
0x233 PUSH1 0x1
0x235 SLOAD
0x236 DUP2
0x237 JUMP
---
0x232: JUMPDEST 
0x233: V178 = 0x1
0x235: V179 = S[0x1]
0x237: JUMP 0xbd
---
Entry stack: [V11, 0xbd]
Stack pops: 1
Stack additions: [S0, V179]
Exit stack: [V11, 0xbd, V179]

================================

Block 0x238
[0x238:0x27b]
---
Predecessors: [0xd3]
Successors: [0x27c]
---
0x238 JUMPDEST
0x239 DUP2
0x23a DUP2
0x23b DUP1
0x23c DUP1
0x23d PUSH1 0x1f
0x23f ADD
0x240 PUSH1 0x20
0x242 DUP1
0x243 SWAP2
0x244 DIV
0x245 MUL
0x246 PUSH1 0x20
0x248 ADD
0x249 PUSH1 0x40
0x24b MLOAD
0x24c SWAP1
0x24d DUP2
0x24e ADD
0x24f PUSH1 0x40
0x251 MSTORE
0x252 DUP1
0x253 SWAP4
0x254 SWAP3
0x255 SWAP2
0x256 SWAP1
0x257 DUP2
0x258 DUP2
0x259 MSTORE
0x25a PUSH1 0x20
0x25c ADD
0x25d DUP4
0x25e DUP4
0x25f DUP1
0x260 DUP3
0x261 DUP5
0x262 CALLDATACOPY
0x263 DUP3
0x264 ADD
0x265 SWAP2
0x266 POP
0x267 POP
0x268 POP
0x269 POP
0x26a POP
0x26b POP
0x26c DUP1
0x26d PUSH1 0x40
0x26f MLOAD
0x270 DUP1
0x271 DUP3
0x272 DUP1
0x273 MLOAD
0x274 SWAP1
0x275 PUSH1 0x20
0x277 ADD
0x278 SWAP1
0x279 DUP1
0x27a DUP4
0x27b DUP4
---
0x238: JUMPDEST 
0x23d: V180 = 0x1f
0x23f: V181 = ADD 0x1f V64
0x240: V182 = 0x20
0x244: V183 = DIV V181 0x20
0x245: V184 = MUL V183 0x20
0x246: V185 = 0x20
0x248: V186 = ADD 0x20 V184
0x249: V187 = 0x40
0x24b: V188 = M[0x40]
0x24e: V189 = ADD V188 V186
0x24f: V190 = 0x40
0x251: M[0x40] = V189
0x259: M[V188] = V64
0x25a: V191 = 0x20
0x25c: V192 = ADD 0x20 V188
0x262: CALLDATACOPY V192 V66 V64
0x264: V193 = ADD V192 V64
0x26d: V194 = 0x40
0x26f: V195 = M[0x40]
0x273: V196 = M[V188]
0x275: V197 = 0x20
0x277: V198 = ADD 0x20 V188
---
Entry stack: [V11, 0xf4, V66, V64]
Stack pops: 2
Stack additions: [S1, S0, V188, V188, V195, V195, V198, V196, V196, V195, V198]
Exit stack: [V11, 0xf4, V66, V64, V188, V188, V195, V195, V198, V196, V196, V195, V198]

================================

Block 0x27c
[0x27c:0x286]
---
Predecessors: [0x238, 0x287]
Successors: [0x287, 0x2a1]
---
0x27c JUMPDEST
0x27d PUSH1 0x20
0x27f DUP4
0x280 LT
0x281 ISZERO
0x282 ISZERO
0x283 PUSH2 0x2a1
0x286 JUMPI
---
0x27c: JUMPDEST 
0x27d: V199 = 0x20
0x280: V200 = LT S2 0x20
0x281: V201 = ISZERO V200
0x282: V202 = ISZERO V201
0x283: V203 = 0x2a1
0x286: JUMPI 0x2a1 V202
---
Entry stack: [V11, 0xf4, V66, V64, V188, V188, V195, V195, V198, V196, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xf4, V66, V64, V188, V188, V195, V195, V198, V196, S2, S1, S0]

================================

Block 0x287
[0x287:0x2a0]
---
Predecessors: [0x27c]
Successors: [0x27c]
---
0x287 DUP1
0x288 MLOAD
0x289 DUP3
0x28a MSTORE
0x28b PUSH1 0x20
0x28d DUP3
0x28e ADD
0x28f SWAP2
0x290 POP
0x291 PUSH1 0x20
0x293 DUP2
0x294 ADD
0x295 SWAP1
0x296 POP
0x297 PUSH1 0x20
0x299 DUP4
0x29a SUB
0x29b SWAP3
0x29c POP
0x29d PUSH2 0x27c
0x2a0 JUMP
---
0x288: V204 = M[S0]
0x28a: M[S1] = V204
0x28b: V205 = 0x20
0x28e: V206 = ADD S1 0x20
0x291: V207 = 0x20
0x294: V208 = ADD S0 0x20
0x297: V209 = 0x20
0x29a: V210 = SUB S2 0x20
0x29d: V211 = 0x27c
0x2a0: JUMP 0x27c
---
Entry stack: [V11, 0xf4, V66, V64, V188, V188, V195, V195, V198, V196, S2, S1, S0]
Stack pops: 3
Stack additions: [V210, V206, V208]
Exit stack: [V11, 0xf4, V66, V64, V188, V188, V195, V195, V198, V196, V210, V206, V208]

================================

Block 0x2a1
[0x2a1:0x2e0]
---
Predecessors: [0x27c]
Successors: [0x2e1, 0x2e7]
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x1
0x2a4 DUP4
0x2a5 PUSH1 0x20
0x2a7 SUB
0x2a8 PUSH2 0x100
0x2ab EXP
0x2ac SUB
0x2ad DUP1
0x2ae NOT
0x2af DUP3
0x2b0 MLOAD
0x2b1 AND
0x2b2 DUP2
0x2b3 DUP5
0x2b4 MLOAD
0x2b5 AND
0x2b6 DUP1
0x2b7 DUP3
0x2b8 OR
0x2b9 DUP6
0x2ba MSTORE
0x2bb POP
0x2bc POP
0x2bd POP
0x2be POP
0x2bf POP
0x2c0 POP
0x2c1 SWAP1
0x2c2 POP
0x2c3 ADD
0x2c4 SWAP2
0x2c5 POP
0x2c6 POP
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca DUP1
0x2cb SWAP2
0x2cc SUB
0x2cd SWAP1
0x2ce SHA3
0x2cf PUSH1 0x0
0x2d1 NOT
0x2d2 AND
0x2d3 PUSH1 0x0
0x2d5 SLOAD
0x2d6 PUSH1 0x0
0x2d8 NOT
0x2d9 AND
0x2da EQ
0x2db DUP1
0x2dc ISZERO
0x2dd PUSH2 0x2e7
0x2e0 JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V212 = 0x1
0x2a5: V213 = 0x20
0x2a7: V214 = SUB 0x20 S2
0x2a8: V215 = 0x100
0x2ab: V216 = EXP 0x100 V214
0x2ac: V217 = SUB V216 0x1
0x2ae: V218 = NOT V217
0x2b0: V219 = M[S0]
0x2b1: V220 = AND V219 V218
0x2b4: V221 = M[S1]
0x2b5: V222 = AND V221 V217
0x2b8: V223 = OR V220 V222
0x2ba: M[S1] = V223
0x2c3: V224 = ADD V196 V195
0x2c7: V225 = 0x40
0x2c9: V226 = M[0x40]
0x2cc: V227 = SUB V224 V226
0x2ce: V228 = SHA3 V226 V227
0x2cf: V229 = 0x0
0x2d1: V230 = NOT 0x0
0x2d2: V231 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V228
0x2d3: V232 = 0x0
0x2d5: V233 = S[0x0]
0x2d6: V234 = 0x0
0x2d8: V235 = NOT 0x0
0x2d9: V236 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V233
0x2da: V237 = EQ V236 V231
0x2dc: V238 = ISZERO V237
0x2dd: V239 = 0x2e7
0x2e0: JUMPI 0x2e7 V238
---
Entry stack: [V11, 0xf4, V66, V64, V188, V188, V195, V195, V198, V196, S2, S1, S0]
Stack pops: 8
Stack additions: [V237]
Exit stack: [V11, 0xf4, V66, V64, V188, V237]

================================

Block 0x2e1
[0x2e1:0x2e6]
---
Predecessors: [0x2a1]
Successors: [0x2e7]
---
0x2e1 POP
0x2e2 PUSH1 0x1
0x2e4 SLOAD
0x2e5 TIMESTAMP
0x2e6 GT
---
0x2e2: V240 = 0x1
0x2e4: V241 = S[0x1]
0x2e5: V242 = TIMESTAMP
0x2e6: V243 = GT V242 V241
---
Entry stack: [V11, 0xf4, V66, V64, V188, V237]
Stack pops: 1
Stack additions: [V243]
Exit stack: [V11, 0xf4, V66, V64, V188, V243]

================================

Block 0x2e7
[0x2e7:0x2ed]
---
Predecessors: [0x2a1, 0x2e1]
Successors: [0x2ee, 0x31e]
---
0x2e7 JUMPDEST
0x2e8 DUP1
0x2e9 ISZERO
0x2ea PUSH2 0x31e
0x2ed JUMPI
---
0x2e7: JUMPDEST 
0x2e9: V244 = ISZERO S0
0x2ea: V245 = 0x31e
0x2ed: JUMPI 0x31e V244
---
Entry stack: [V11, 0xf4, V66, V64, V188, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xf4, V66, V64, V188, S0]

================================

Block 0x2ee
[0x2ee:0x31d]
---
Predecessors: [0x2e7]
Successors: [0x31e]
---
0x2ee POP
0x2ef ORIGIN
0x2f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x305 AND
0x306 CALLER
0x307 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31c AND
0x31d EQ
---
0x2ef: V246 = ORIGIN
0x2f0: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x305: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x306: V249 = CALLER
0x307: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x31d: V252 = EQ V251 V248
---
Entry stack: [V11, 0xf4, V66, V64, V188, S0]
Stack pops: 1
Stack additions: [V252]
Exit stack: [V11, 0xf4, V66, V64, V188, V252]

================================

Block 0x31e
[0x31e:0x323]
---
Predecessors: [0x2e7, 0x2ee]
Successors: [0x324, 0x3ee]
---
0x31e JUMPDEST
0x31f ISZERO
0x320 PUSH2 0x3ee
0x323 JUMPI
---
0x31e: JUMPDEST 
0x31f: V253 = ISZERO S0
0x320: V254 = 0x3ee
0x323: JUMPI 0x3ee V253
---
Entry stack: [V11, 0xf4, V66, V64, V188, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf4, V66, V64, V188]

================================

Block 0x324
[0x324:0x352]
---
Predecessors: [0x31e]
Successors: [0x353, 0x359]
---
0x324 DUP3
0x325 DUP3
0x326 PUSH1 0x40
0x328 MLOAD
0x329 DUP1
0x32a DUP4
0x32b DUP4
0x32c DUP1
0x32d DUP3
0x32e DUP5
0x32f CALLDATACOPY
0x330 DUP3
0x331 ADD
0x332 SWAP2
0x333 POP
0x334 POP
0x335 SWAP3
0x336 POP
0x337 POP
0x338 POP
0x339 PUSH1 0x40
0x33b MLOAD
0x33c DUP1
0x33d SWAP2
0x33e SUB
0x33f SWAP1
0x340 SHA3
0x341 PUSH1 0x0
0x343 NOT
0x344 AND
0x345 PUSH1 0x0
0x347 SLOAD
0x348 PUSH1 0x0
0x34a NOT
0x34b AND
0x34c EQ
0x34d DUP1
0x34e ISZERO
0x34f PUSH2 0x359
0x352 JUMPI
---
0x326: V255 = 0x40
0x328: V256 = M[0x40]
0x32f: CALLDATACOPY V256 V66 V64
0x331: V257 = ADD V256 V64
0x339: V258 = 0x40
0x33b: V259 = M[0x40]
0x33e: V260 = SUB V257 V259
0x340: V261 = SHA3 V259 V260
0x341: V262 = 0x0
0x343: V263 = NOT 0x0
0x344: V264 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V261
0x345: V265 = 0x0
0x347: V266 = S[0x0]
0x348: V267 = 0x0
0x34a: V268 = NOT 0x0
0x34b: V269 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V266
0x34c: V270 = EQ V269 V264
0x34e: V271 = ISZERO V270
0x34f: V272 = 0x359
0x352: JUMPI 0x359 V271
---
Entry stack: [V11, 0xf4, V66, V64, V188]
Stack pops: 3
Stack additions: [S2, S1, S0, V270]
Exit stack: [V11, 0xf4, V66, V64, V188, V270]

================================

Block 0x353
[0x353:0x358]
---
Predecessors: [0x324]
Successors: [0x359]
---
0x353 POP
0x354 PUSH1 0x1
0x356 SLOAD
0x357 TIMESTAMP
0x358 GT
---
0x354: V273 = 0x1
0x356: V274 = S[0x1]
0x357: V275 = TIMESTAMP
0x358: V276 = GT V275 V274
---
Entry stack: [V11, 0xf4, V66, V64, V188, V270]
Stack pops: 1
Stack additions: [V276]
Exit stack: [V11, 0xf4, V66, V64, V188, V276]

================================

Block 0x359
[0x359:0x35f]
---
Predecessors: [0x324, 0x353]
Successors: [0x360, 0x390]
---
0x359 JUMPDEST
0x35a DUP1
0x35b ISZERO
0x35c PUSH2 0x390
0x35f JUMPI
---
0x359: JUMPDEST 
0x35b: V277 = ISZERO S0
0x35c: V278 = 0x390
0x35f: JUMPI 0x390 V277
---
Entry stack: [V11, 0xf4, V66, V64, V188, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xf4, V66, V64, V188, S0]

================================

Block 0x360
[0x360:0x38f]
---
Predecessors: [0x359]
Successors: [0x390]
---
0x360 POP
0x361 ORIGIN
0x362 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x377 AND
0x378 CALLER
0x379 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38e AND
0x38f EQ
---
0x361: V279 = ORIGIN
0x362: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x377: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x378: V282 = CALLER
0x379: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x38e: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x38f: V285 = EQ V284 V281
---
Entry stack: [V11, 0xf4, V66, V64, V188, S0]
Stack pops: 1
Stack additions: [V285]
Exit stack: [V11, 0xf4, V66, V64, V188, V285]

================================

Block 0x390
[0x390:0x395]
---
Predecessors: [0x359, 0x360]
Successors: [0x396, 0x3ed]
---
0x390 JUMPDEST
0x391 ISZERO
0x392 PUSH2 0x3ed
0x395 JUMPI
---
0x390: JUMPDEST 
0x391: V286 = ISZERO S0
0x392: V287 = 0x3ed
0x395: JUMPI 0x3ed V286
---
Entry stack: [V11, 0xf4, V66, V64, V188, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf4, V66, V64, V188]

================================

Block 0x396
[0x396:0x3e7]
---
Predecessors: [0x390]
Successors: [0x3e8, 0x3ec]
---
0x396 CALLER
0x397 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ac AND
0x3ad PUSH2 0x8fc
0x3b0 ADDRESS
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 AND
0x3c7 BALANCE
0x3c8 SWAP1
0x3c9 DUP2
0x3ca ISZERO
0x3cb MUL
0x3cc SWAP1
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 PUSH1 0x0
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 DUP4
0x3d7 SUB
0x3d8 DUP2
0x3d9 DUP6
0x3da DUP9
0x3db DUP9
0x3dc CALL
0x3dd SWAP4
0x3de POP
0x3df POP
0x3e0 POP
0x3e1 POP
0x3e2 ISZERO
0x3e3 ISZERO
0x3e4 PUSH2 0x3ec
0x3e7 JUMPI
---
0x396: V288 = CALLER
0x397: V289 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x3ad: V291 = 0x8fc
0x3b0: V292 = ADDRESS
0x3b1: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x3c7: V295 = BALANCE V294
0x3ca: V296 = ISZERO V295
0x3cb: V297 = MUL V296 0x8fc
0x3cd: V298 = 0x40
0x3cf: V299 = M[0x40]
0x3d0: V300 = 0x0
0x3d2: V301 = 0x40
0x3d4: V302 = M[0x40]
0x3d7: V303 = SUB V299 V302
0x3dc: V304 = CALL V297 V290 V295 V302 V303 V302 0x0
0x3e2: V305 = ISZERO V304
0x3e3: V306 = ISZERO V305
0x3e4: V307 = 0x3ec
0x3e7: JUMPI 0x3ec V306
---
Entry stack: [V11, 0xf4, V66, V64, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V66, V64, V188]

================================

Block 0x3e8
[0x3e8:0x3eb]
---
Predecessors: [0x396]
Successors: []
---
0x3e8 PUSH1 0x0
0x3ea DUP1
0x3eb REVERT
---
0x3e8: V308 = 0x0
0x3eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf4, V66, V64, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V66, V64, V188]

================================

Block 0x3ec
[0x3ec:0x3ec]
---
Predecessors: [0x396]
Successors: [0x3ed]
---
0x3ec JUMPDEST
---
0x3ec: JUMPDEST 
---
Entry stack: [V11, 0xf4, V66, V64, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V66, V64, V188]

================================

Block 0x3ed
[0x3ed:0x3ed]
---
Predecessors: [0x390, 0x3ec]
Successors: [0x3ee]
---
0x3ed JUMPDEST
---
0x3ed: JUMPDEST 
---
Entry stack: [V11, 0xf4, V66, V64, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V66, V64, V188]

================================

Block 0x3ee
[0x3ee:0x3f2]
---
Predecessors: [0x31e, 0x3ed]
Successors: [0xf4]
---
0x3ee JUMPDEST
0x3ef POP
0x3f0 POP
0x3f1 POP
0x3f2 JUMP
---
0x3ee: JUMPDEST 
0x3f2: JUMP 0xf4
---
Entry stack: [V11, 0xf4, V66, V64, V188]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x3f3
[0x3f3:0x3f8]
---
Predecessors: [0x101]
Successors: [0x109]
---
0x3f3 JUMPDEST
0x3f4 PUSH1 0x0
0x3f6 SLOAD
0x3f7 DUP2
0x3f8 JUMP
---
0x3f3: JUMPDEST 
0x3f4: V309 = 0x0
0x3f6: V310 = S[0x0]
0x3f8: JUMP 0x109
---
Entry stack: [V11, 0x109]
Stack pops: 1
Stack additions: [S0, V310]
Exit stack: [V11, 0x109, V310]

================================

Block 0x3f9
[0x3f9:0x43c]
---
Predecessors: [0x127]
Successors: [0x43d]
---
0x3f9 JUMPDEST
0x3fa DUP2
0x3fb DUP2
0x3fc DUP1
0x3fd DUP1
0x3fe PUSH1 0x1f
0x400 ADD
0x401 PUSH1 0x20
0x403 DUP1
0x404 SWAP2
0x405 DIV
0x406 MUL
0x407 PUSH1 0x20
0x409 ADD
0x40a PUSH1 0x40
0x40c MLOAD
0x40d SWAP1
0x40e DUP2
0x40f ADD
0x410 PUSH1 0x40
0x412 MSTORE
0x413 DUP1
0x414 SWAP4
0x415 SWAP3
0x416 SWAP2
0x417 SWAP1
0x418 DUP2
0x419 DUP2
0x41a MSTORE
0x41b PUSH1 0x20
0x41d ADD
0x41e DUP4
0x41f DUP4
0x420 DUP1
0x421 DUP3
0x422 DUP5
0x423 CALLDATACOPY
0x424 DUP3
0x425 ADD
0x426 SWAP2
0x427 POP
0x428 POP
0x429 POP
0x42a POP
0x42b POP
0x42c POP
0x42d DUP1
0x42e PUSH1 0x40
0x430 MLOAD
0x431 DUP1
0x432 DUP3
0x433 DUP1
0x434 MLOAD
0x435 SWAP1
0x436 PUSH1 0x20
0x438 ADD
0x439 SWAP1
0x43a DUP1
0x43b DUP4
0x43c DUP4
---
0x3f9: JUMPDEST 
0x3fe: V311 = 0x1f
0x400: V312 = ADD 0x1f V93
0x401: V313 = 0x20
0x405: V314 = DIV V312 0x20
0x406: V315 = MUL V314 0x20
0x407: V316 = 0x20
0x409: V317 = ADD 0x20 V315
0x40a: V318 = 0x40
0x40c: V319 = M[0x40]
0x40f: V320 = ADD V319 V317
0x410: V321 = 0x40
0x412: M[0x40] = V320
0x41a: M[V319] = V93
0x41b: V322 = 0x20
0x41d: V323 = ADD 0x20 V319
0x423: CALLDATACOPY V323 V95 V93
0x425: V324 = ADD V323 V93
0x42e: V325 = 0x40
0x430: V326 = M[0x40]
0x434: V327 = M[V319]
0x436: V328 = 0x20
0x438: V329 = ADD 0x20 V319
---
Entry stack: [V11, 0x148, V95, V93]
Stack pops: 2
Stack additions: [S1, S0, V319, V319, V326, V326, V329, V327, V327, V326, V329]
Exit stack: [V11, 0x148, V95, V93, V319, V319, V326, V326, V329, V327, V327, V326, V329]

================================

Block 0x43d
[0x43d:0x447]
---
Predecessors: [0x3f9, 0x448]
Successors: [0x448, 0x462]
---
0x43d JUMPDEST
0x43e PUSH1 0x20
0x440 DUP4
0x441 LT
0x442 ISZERO
0x443 ISZERO
0x444 PUSH2 0x462
0x447 JUMPI
---
0x43d: JUMPDEST 
0x43e: V330 = 0x20
0x441: V331 = LT S2 0x20
0x442: V332 = ISZERO V331
0x443: V333 = ISZERO V332
0x444: V334 = 0x462
0x447: JUMPI 0x462 V333
---
Entry stack: [V11, 0x148, V95, V93, V319, V319, V326, V326, V329, V327, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x148, V95, V93, V319, V319, V326, V326, V329, V327, S2, S1, S0]

================================

Block 0x448
[0x448:0x461]
---
Predecessors: [0x43d]
Successors: [0x43d]
---
0x448 DUP1
0x449 MLOAD
0x44a DUP3
0x44b MSTORE
0x44c PUSH1 0x20
0x44e DUP3
0x44f ADD
0x450 SWAP2
0x451 POP
0x452 PUSH1 0x20
0x454 DUP2
0x455 ADD
0x456 SWAP1
0x457 POP
0x458 PUSH1 0x20
0x45a DUP4
0x45b SUB
0x45c SWAP3
0x45d POP
0x45e PUSH2 0x43d
0x461 JUMP
---
0x449: V335 = M[S0]
0x44b: M[S1] = V335
0x44c: V336 = 0x20
0x44f: V337 = ADD S1 0x20
0x452: V338 = 0x20
0x455: V339 = ADD S0 0x20
0x458: V340 = 0x20
0x45b: V341 = SUB S2 0x20
0x45e: V342 = 0x43d
0x461: JUMP 0x43d
---
Entry stack: [V11, 0x148, V95, V93, V319, V319, V326, V326, V329, V327, S2, S1, S0]
Stack pops: 3
Stack additions: [V341, V337, V339]
Exit stack: [V11, 0x148, V95, V93, V319, V319, V326, V326, V329, V327, V341, V337, V339]

================================

Block 0x462
[0x462:0x4a1]
---
Predecessors: [0x43d]
Successors: [0x4a2, 0x4a8]
---
0x462 JUMPDEST
0x463 PUSH1 0x1
0x465 DUP4
0x466 PUSH1 0x20
0x468 SUB
0x469 PUSH2 0x100
0x46c EXP
0x46d SUB
0x46e DUP1
0x46f NOT
0x470 DUP3
0x471 MLOAD
0x472 AND
0x473 DUP2
0x474 DUP5
0x475 MLOAD
0x476 AND
0x477 DUP1
0x478 DUP3
0x479 OR
0x47a DUP6
0x47b MSTORE
0x47c POP
0x47d POP
0x47e POP
0x47f POP
0x480 POP
0x481 POP
0x482 SWAP1
0x483 POP
0x484 ADD
0x485 SWAP2
0x486 POP
0x487 POP
0x488 PUSH1 0x40
0x48a MLOAD
0x48b DUP1
0x48c SWAP2
0x48d SUB
0x48e SWAP1
0x48f SHA3
0x490 PUSH1 0x0
0x492 NOT
0x493 AND
0x494 PUSH1 0x0
0x496 SLOAD
0x497 PUSH1 0x0
0x499 NOT
0x49a AND
0x49b EQ
0x49c DUP1
0x49d ISZERO
0x49e PUSH2 0x4a8
0x4a1 JUMPI
---
0x462: JUMPDEST 
0x463: V343 = 0x1
0x466: V344 = 0x20
0x468: V345 = SUB 0x20 S2
0x469: V346 = 0x100
0x46c: V347 = EXP 0x100 V345
0x46d: V348 = SUB V347 0x1
0x46f: V349 = NOT V348
0x471: V350 = M[S0]
0x472: V351 = AND V350 V349
0x475: V352 = M[S1]
0x476: V353 = AND V352 V348
0x479: V354 = OR V351 V353
0x47b: M[S1] = V354
0x484: V355 = ADD V327 V326
0x488: V356 = 0x40
0x48a: V357 = M[0x40]
0x48d: V358 = SUB V355 V357
0x48f: V359 = SHA3 V357 V358
0x490: V360 = 0x0
0x492: V361 = NOT 0x0
0x493: V362 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V359
0x494: V363 = 0x0
0x496: V364 = S[0x0]
0x497: V365 = 0x0
0x499: V366 = NOT 0x0
0x49a: V367 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V364
0x49b: V368 = EQ V367 V362
0x49d: V369 = ISZERO V368
0x49e: V370 = 0x4a8
0x4a1: JUMPI 0x4a8 V369
---
Entry stack: [V11, 0x148, V95, V93, V319, V319, V326, V326, V329, V327, S2, S1, S0]
Stack pops: 8
Stack additions: [V368]
Exit stack: [V11, 0x148, V95, V93, V319, V368]

================================

Block 0x4a2
[0x4a2:0x4a7]
---
Predecessors: [0x462]
Successors: [0x4a8]
---
0x4a2 POP
0x4a3 PUSH1 0x1
0x4a5 SLOAD
0x4a6 TIMESTAMP
0x4a7 GT
---
0x4a3: V371 = 0x1
0x4a5: V372 = S[0x1]
0x4a6: V373 = TIMESTAMP
0x4a7: V374 = GT V373 V372
---
Entry stack: [V11, 0x148, V95, V93, V319, V368]
Stack pops: 1
Stack additions: [V374]
Exit stack: [V11, 0x148, V95, V93, V319, V374]

================================

Block 0x4a8
[0x4a8:0x4ae]
---
Predecessors: [0x462, 0x4a2]
Successors: [0x4af, 0x4df]
---
0x4a8 JUMPDEST
0x4a9 DUP1
0x4aa ISZERO
0x4ab PUSH2 0x4df
0x4ae JUMPI
---
0x4a8: JUMPDEST 
0x4aa: V375 = ISZERO S0
0x4ab: V376 = 0x4df
0x4ae: JUMPI 0x4df V375
---
Entry stack: [V11, 0x148, V95, V93, V319, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x148, V95, V93, V319, S0]

================================

Block 0x4af
[0x4af:0x4de]
---
Predecessors: [0x4a8]
Successors: [0x4df]
---
0x4af POP
0x4b0 ORIGIN
0x4b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c6 AND
0x4c7 CALLER
0x4c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4dd AND
0x4de EQ
---
0x4b0: V377 = ORIGIN
0x4b1: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c6: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x4c7: V380 = CALLER
0x4c8: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x4dd: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x4de: V383 = EQ V382 V379
---
Entry stack: [V11, 0x148, V95, V93, V319, S0]
Stack pops: 1
Stack additions: [V383]
Exit stack: [V11, 0x148, V95, V93, V319, V383]

================================

Block 0x4df
[0x4df:0x4e4]
---
Predecessors: [0x4a8, 0x4af]
Successors: [0x4e5, 0x500]
---
0x4df JUMPDEST
0x4e0 ISZERO
0x4e1 PUSH2 0x500
0x4e4 JUMPI
---
0x4df: JUMPDEST 
0x4e0: V384 = ISZERO S0
0x4e1: V385 = 0x500
0x4e4: JUMPI 0x500 V384
---
Entry stack: [V11, 0x148, V95, V93, V319, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x148, V95, V93, V319]

================================

Block 0x4e5
[0x4e5:0x4ff]
---
Predecessors: [0x4df]
Successors: [0x500]
---
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0x2
0x4e9 PUSH1 0x0
0x4eb PUSH2 0x100
0x4ee EXP
0x4ef DUP2
0x4f0 SLOAD
0x4f1 DUP2
0x4f2 PUSH1 0xff
0x4f4 MUL
0x4f5 NOT
0x4f6 AND
0x4f7 SWAP1
0x4f8 DUP4
0x4f9 ISZERO
0x4fa ISZERO
0x4fb MUL
0x4fc OR
0x4fd SWAP1
0x4fe SSTORE
0x4ff POP
---
0x4e5: V386 = 0x1
0x4e7: V387 = 0x2
0x4e9: V388 = 0x0
0x4eb: V389 = 0x100
0x4ee: V390 = EXP 0x100 0x0
0x4f0: V391 = S[0x2]
0x4f2: V392 = 0xff
0x4f4: V393 = MUL 0xff 0x1
0x4f5: V394 = NOT 0xff
0x4f6: V395 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V391
0x4f9: V396 = ISZERO 0x1
0x4fa: V397 = ISZERO 0x0
0x4fb: V398 = MUL 0x1 0x1
0x4fc: V399 = OR 0x1 V395
0x4fe: S[0x2] = V399
---
Entry stack: [V11, 0x148, V95, V93, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x148, V95, V93, V319]

================================

Block 0x500
[0x500:0x504]
---
Predecessors: [0x4df, 0x4e5]
Successors: [0x148]
---
0x500 JUMPDEST
0x501 POP
0x502 POP
0x503 POP
0x504 JUMP
---
0x500: JUMPDEST 
0x504: JUMP 0x148
---
Entry stack: [V11, 0x148, V95, V93, V319]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x505
[0x505:0x517]
---
Predecessors: [0x155]
Successors: [0x518]
---
0x505 JUMPDEST
0x506 PUSH1 0x0
0x508 DUP2
0x509 PUSH1 0x40
0x50b MLOAD
0x50c DUP1
0x50d DUP3
0x50e DUP1
0x50f MLOAD
0x510 SWAP1
0x511 PUSH1 0x20
0x513 ADD
0x514 SWAP1
0x515 DUP1
0x516 DUP4
0x517 DUP4
---
0x505: JUMPDEST 
0x506: V400 = 0x0
0x509: V401 = 0x40
0x50b: V402 = M[0x40]
0x50f: V403 = M[V118]
0x511: V404 = 0x20
0x513: V405 = ADD 0x20 V118
---
Entry stack: [V11, 0x1a5, V118]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V402, V402, V405, V403, V403, V402, V405]
Exit stack: [V11, 0x1a5, V118, 0x0, V118, V402, V402, V405, V403, V403, V402, V405]

================================

Block 0x518
[0x518:0x522]
---
Predecessors: [0x505, 0x523]
Successors: [0x523, 0x53d]
---
0x518 JUMPDEST
0x519 PUSH1 0x20
0x51b DUP4
0x51c LT
0x51d ISZERO
0x51e ISZERO
0x51f PUSH2 0x53d
0x522 JUMPI
---
0x518: JUMPDEST 
0x519: V406 = 0x20
0x51c: V407 = LT S2 0x20
0x51d: V408 = ISZERO V407
0x51e: V409 = ISZERO V408
0x51f: V410 = 0x53d
0x522: JUMPI 0x53d V409
---
Entry stack: [V11, 0x1a5, V118, 0x0, V118, V402, V402, V405, V403, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x1a5, V118, 0x0, V118, V402, V402, V405, V403, S2, S1, S0]

================================

Block 0x523
[0x523:0x53c]
---
Predecessors: [0x518]
Successors: [0x518]
---
0x523 DUP1
0x524 MLOAD
0x525 DUP3
0x526 MSTORE
0x527 PUSH1 0x20
0x529 DUP3
0x52a ADD
0x52b SWAP2
0x52c POP
0x52d PUSH1 0x20
0x52f DUP2
0x530 ADD
0x531 SWAP1
0x532 POP
0x533 PUSH1 0x20
0x535 DUP4
0x536 SUB
0x537 SWAP3
0x538 POP
0x539 PUSH2 0x518
0x53c JUMP
---
0x524: V411 = M[S0]
0x526: M[S1] = V411
0x527: V412 = 0x20
0x52a: V413 = ADD S1 0x20
0x52d: V414 = 0x20
0x530: V415 = ADD S0 0x20
0x533: V416 = 0x20
0x536: V417 = SUB S2 0x20
0x539: V418 = 0x518
0x53c: JUMP 0x518
---
Entry stack: [V11, 0x1a5, V118, 0x0, V118, V402, V402, V405, V403, S2, S1, S0]
Stack pops: 3
Stack additions: [V417, V413, V415]
Exit stack: [V11, 0x1a5, V118, 0x0, V118, V402, V402, V405, V403, V417, V413, V415]

================================

Block 0x53d
[0x53d:0x570]
---
Predecessors: [0x518]
Successors: [0x1a5]
---
0x53d JUMPDEST
0x53e PUSH1 0x1
0x540 DUP4
0x541 PUSH1 0x20
0x543 SUB
0x544 PUSH2 0x100
0x547 EXP
0x548 SUB
0x549 DUP1
0x54a NOT
0x54b DUP3
0x54c MLOAD
0x54d AND
0x54e DUP2
0x54f DUP5
0x550 MLOAD
0x551 AND
0x552 DUP1
0x553 DUP3
0x554 OR
0x555 DUP6
0x556 MSTORE
0x557 POP
0x558 POP
0x559 POP
0x55a POP
0x55b POP
0x55c POP
0x55d SWAP1
0x55e POP
0x55f ADD
0x560 SWAP2
0x561 POP
0x562 POP
0x563 PUSH1 0x40
0x565 MLOAD
0x566 DUP1
0x567 SWAP2
0x568 SUB
0x569 SWAP1
0x56a SHA3
0x56b SWAP1
0x56c POP
0x56d SWAP2
0x56e SWAP1
0x56f POP
0x570 JUMP
---
0x53d: JUMPDEST 
0x53e: V419 = 0x1
0x541: V420 = 0x20
0x543: V421 = SUB 0x20 S2
0x544: V422 = 0x100
0x547: V423 = EXP 0x100 V421
0x548: V424 = SUB V423 0x1
0x54a: V425 = NOT V424
0x54c: V426 = M[S0]
0x54d: V427 = AND V426 V425
0x550: V428 = M[S1]
0x551: V429 = AND V428 V424
0x554: V430 = OR V427 V429
0x556: M[S1] = V430
0x55f: V431 = ADD V403 V402
0x563: V432 = 0x40
0x565: V433 = M[0x40]
0x568: V434 = SUB V431 V433
0x56a: V435 = SHA3 V433 V434
0x570: JUMP 0x1a5
---
Entry stack: [V11, 0x1a5, V118, 0x0, V118, V402, V402, V405, V403, S2, S1, S0]
Stack pops: 11
Stack additions: [V435]
Exit stack: [V11, V435]

================================

Block 0x571
[0x571:0x583]
---
Predecessors: [0x1ce]
Successors: [0x1d6]
---
0x571 JUMPDEST
0x572 PUSH1 0x2
0x574 PUSH1 0x0
0x576 SWAP1
0x577 SLOAD
0x578 SWAP1
0x579 PUSH2 0x100
0x57c EXP
0x57d SWAP1
0x57e DIV
0x57f PUSH1 0xff
0x581 AND
0x582 DUP2
0x583 JUMP
---
0x571: JUMPDEST 
0x572: V436 = 0x2
0x574: V437 = 0x0
0x577: V438 = S[0x2]
0x579: V439 = 0x100
0x57c: V440 = EXP 0x100 0x0
0x57e: V441 = DIV V438 0x1
0x57f: V442 = 0xff
0x581: V443 = AND 0xff V441
0x583: JUMP 0x1d6
---
Entry stack: [V11, 0x1d6]
Stack pops: 1
Stack additions: [S0, V443]
Exit stack: [V11, 0x1d6, V443]

================================

Block 0x584
[0x584:0x5af]
---
Predecessors: []
Successors: []
---
0x584 STOP
0x585 LOG1
0x586 PUSH6 0x627a7a723058
0x58d SHA3
0x58e MISSING 0xaf
0x58f MISSING 0x2e
0x590 PUSH31 0xc205cb774e9312fffaa2594f644c7ae9b2a01afc177f1c886a3efa2bbc0029
---
0x584: STOP 
0x585: LOG S0 S1 S2
0x586: V444 = 0x627a7a723058
0x58d: V445 = SHA3 0x627a7a723058 S3
0x58e: MISSING 0xaf
0x58f: MISSING 0x2e
0x590: V446 = 0xc205cb774e9312fffaa2594f644c7ae9b2a01afc177f1c886a3efa2bbc0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V445, 0xc205cb774e9312fffaa2594f644c7ae9b2a01afc177f1c886a3efa2bbc0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x166eb4cb
Entry block: 0x85
Exit block: 0xa8
Body: 0x85, 0xa8, 0x1f0, 0x208, 0x214, 0x21a, 0x22e

Function 1:
Public function signature: 0x251c1aa3
Entry block: 0xaa
Exit block: 0xbd
Body: 0xaa, 0xb1, 0xb5, 0xbd, 0x232

Function 2:
Public function signature: 0x81777b78
Entry block: 0xd3
Exit block: 0x3e8
Body: 0xd3, 0xf4, 0x238, 0x27c, 0x287, 0x2a1, 0x2e1, 0x2e7, 0x2ee, 0x31e, 0x324, 0x353, 0x359, 0x360, 0x390, 0x396, 0x3e8, 0x3ec, 0x3ed, 0x3ee

Function 3:
Public function signature: 0x87f24484
Entry block: 0xf6
Exit block: 0x109
Body: 0xf6, 0xfd, 0x101, 0x109, 0x3f3

Function 4:
Public function signature: 0x9f7e1fed
Entry block: 0x127
Exit block: 0x148
Body: 0x127, 0x148, 0x3f9, 0x43d, 0x448, 0x462, 0x4a2, 0x4a8, 0x4af, 0x4df, 0x4e5, 0x500

Function 5:
Public function signature: 0xb456ecc5
Entry block: 0x14a
Exit block: 0x1a5
Body: 0x14a, 0x151, 0x155, 0x1a5, 0x505, 0x518, 0x523, 0x53d

Function 6:
Public function signature: 0xcf309012
Entry block: 0x1c3
Exit block: 0x1d6
Body: 0x1c3, 0x1ca, 0x1ce, 0x1d6, 0x571

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

