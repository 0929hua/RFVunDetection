Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5a
0xa: JUMPI 0x5a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x84]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x2bf0a5f3
0x34 EQ
0x35 PUSH2 0x84
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x2bf0a5f3
0x34: V10 = EQ 0x2bf0a5f3 V8
0x35: V11 = 0x84
0x38: JUMPI 0x84 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xb7]
---
0x39 DUP1
0x3a PUSH4 0x4bf52928
0x3f EQ
0x40 PUSH2 0xb7
0x43 JUMPI
---
0x3a: V12 = 0x4bf52928
0x3f: V13 = EQ 0x4bf52928 V8
0x40: V14 = 0xb7
0x43: JUMPI 0xb7 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xea]
---
0x44 DUP1
0x45 PUSH4 0x56475d84
0x4a EQ
0x4b PUSH2 0xea
0x4e JUMPI
---
0x45: V15 = 0x56475d84
0x4a: V16 = EQ 0x56475d84 V8
0x4b: V17 = 0xea
0x4e: JUMPI 0xea V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x11d]
---
0x4f DUP1
0x50 PUSH4 0x81d01ed3
0x55 EQ
0x56 PUSH2 0x11d
0x59 JUMPI
---
0x50: V18 = 0x81d01ed3
0x55: V19 = EQ 0x81d01ed3 V8
0x56: V20 = 0x11d
0x59: JUMPI 0x11d V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x5d]
---
Predecessors: [0x0, 0x4f]
Successors: [0x5e]
---
0x5a JUMPDEST
0x5b PUSH2 0x82
---
0x5a: JUMPDEST 
0x5b: V21 = 0x82
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V8, 0x82]

================================

Block 0x5e
[0x5e:0x64]
---
Predecessors: [0x5a]
Successors: [0x65]
---
0x5e JUMPDEST
0x5f PUSH1 0x0
0x61 PUSH1 0x0
0x63 SWAP1
0x64 POP
---
0x5e: JUMPDEST 
0x5f: V22 = 0x0
0x61: V23 = 0x0
---
Entry stack: [V8, 0x82]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V8, 0x82, 0x0]

================================

Block 0x65
[0x65:0x71]
---
Predecessors: [0x5e, 0x72]
Successors: [0x72, 0x7e]
---
0x65 JUMPDEST
0x66 PUSH1 0x1
0x68 DUP2
0x69 ADD
0x6a DUP2
0x6b EQ
0x6c ISZERO
0x6d ISZERO
0x6e PUSH2 0x7e
0x71 JUMPI
---
0x65: JUMPDEST 
0x66: V24 = 0x1
0x69: V25 = ADD S0 0x1
0x6b: V26 = EQ S0 V25
0x6c: V27 = ISZERO V26
0x6d: V28 = ISZERO V27
0x6e: V29 = 0x7e
0x71: JUMPI 0x7e V28
---
Entry stack: [V8, 0x82, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x82, S0]

================================

Block 0x72
[0x72:0x7d]
---
Predecessors: [0x65]
Successors: [0x65]
---
0x72 DUP1
0x73 DUP1
0x74 PUSH1 0x1
0x76 ADD
0x77 SWAP2
0x78 POP
0x79 POP
0x7a PUSH2 0x65
0x7d JUMP
---
0x74: V30 = 0x1
0x76: V31 = ADD 0x1 S0
0x7a: V32 = 0x65
0x7d: JUMP 0x65
---
Entry stack: [V8, 0x82, S0]
Stack pops: 1
Stack additions: [V31]
Exit stack: [V8, 0x82, V31]

================================

Block 0x7e
[0x7e:0x7e]
---
Predecessors: [0x65]
Successors: [0x7f]
---
0x7e JUMPDEST
---
0x7e: JUMPDEST 
---
Entry stack: [V8, 0x82, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x82, S0]

================================

Block 0x7f
[0x7f:0x81]
---
Predecessors: [0x7e]
Successors: [0x82]
---
0x7f JUMPDEST
0x80 POP
0x81 JUMP
---
0x7f: JUMPDEST 
0x81: JUMP 0x82
---
Entry stack: [V8, 0x82, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x7f]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x84
[0x84:0xb4]
---
Predecessors: [0xb]
Successors: [0x127]
---
0x84 JUMPDEST
0x85 PUSH2 0xb5
0x88 PUSH1 0x4
0x8a DUP1
0x8b DUP1
0x8c CALLDATALOAD
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 SWAP2
0x93 SWAP1
0x94 DUP1
0x95 CALLDATALOAD
0x96 SWAP1
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP1
0x9b SWAP2
0x9c SWAP1
0x9d DUP1
0x9e CALLDATALOAD
0x9f SWAP1
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP1
0xa4 SWAP2
0xa5 SWAP1
0xa6 DUP1
0xa7 CALLDATALOAD
0xa8 SWAP1
0xa9 PUSH1 0x20
0xab ADD
0xac SWAP1
0xad SWAP2
0xae SWAP1
0xaf POP
0xb0 POP
0xb1 PUSH2 0x127
0xb4 JUMP
---
0x84: JUMPDEST 
0x85: V33 = 0xb5
0x88: V34 = 0x4
0x8c: V35 = CALLDATALOAD 0x4
0x8e: V36 = 0x20
0x90: V37 = ADD 0x20 0x4
0x95: V38 = CALLDATALOAD 0x24
0x97: V39 = 0x20
0x99: V40 = ADD 0x20 0x24
0x9e: V41 = CALLDATALOAD 0x44
0xa0: V42 = 0x20
0xa2: V43 = ADD 0x20 0x44
0xa7: V44 = CALLDATALOAD 0x64
0xa9: V45 = 0x20
0xab: V46 = ADD 0x20 0x64
0xb1: V47 = 0x127
0xb4: JUMP 0x127
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xb5, V35, V38, V41, V44]
Exit stack: [V8, 0xb5, V35, V38, V41, V44]

================================

Block 0xb5
[0xb5:0xb6]
---
Predecessors: [0x264]
Successors: []
---
0xb5 JUMPDEST
0xb6 STOP
---
0xb5: JUMPDEST 
0xb6: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xb7
[0xb7:0xe7]
---
Predecessors: [0x39]
Successors: [0x26a]
---
0xb7 JUMPDEST
0xb8 PUSH2 0xe8
0xbb PUSH1 0x4
0xbd DUP1
0xbe DUP1
0xbf CALLDATALOAD
0xc0 SWAP1
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 SWAP1
0xc5 SWAP2
0xc6 SWAP1
0xc7 DUP1
0xc8 CALLDATALOAD
0xc9 SWAP1
0xca PUSH1 0x20
0xcc ADD
0xcd SWAP1
0xce SWAP2
0xcf SWAP1
0xd0 DUP1
0xd1 CALLDATALOAD
0xd2 SWAP1
0xd3 PUSH1 0x20
0xd5 ADD
0xd6 SWAP1
0xd7 SWAP2
0xd8 SWAP1
0xd9 DUP1
0xda CALLDATALOAD
0xdb SWAP1
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP1
0xe0 SWAP2
0xe1 SWAP1
0xe2 POP
0xe3 POP
0xe4 PUSH2 0x26a
0xe7 JUMP
---
0xb7: JUMPDEST 
0xb8: V48 = 0xe8
0xbb: V49 = 0x4
0xbf: V50 = CALLDATALOAD 0x4
0xc1: V51 = 0x20
0xc3: V52 = ADD 0x20 0x4
0xc8: V53 = CALLDATALOAD 0x24
0xca: V54 = 0x20
0xcc: V55 = ADD 0x20 0x24
0xd1: V56 = CALLDATALOAD 0x44
0xd3: V57 = 0x20
0xd5: V58 = ADD 0x20 0x44
0xda: V59 = CALLDATALOAD 0x64
0xdc: V60 = 0x20
0xde: V61 = ADD 0x20 0x64
0xe4: V62 = 0x26a
0xe7: JUMP 0x26a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xe8, V50, V53, V56, V59]
Exit stack: [V8, 0xe8, V50, V53, V56, V59]

================================

Block 0xe8
[0xe8:0xe9]
---
Predecessors: [0x3a7]
Successors: []
---
0xe8 JUMPDEST
0xe9 STOP
---
0xe8: JUMPDEST 
0xe9: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xea
[0xea:0x11a]
---
Predecessors: [0x44]
Successors: [0x3ad]
---
0xea JUMPDEST
0xeb PUSH2 0x11b
0xee PUSH1 0x4
0xf0 DUP1
0xf1 DUP1
0xf2 CALLDATALOAD
0xf3 SWAP1
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 SWAP1
0xf8 SWAP2
0xf9 SWAP1
0xfa DUP1
0xfb CALLDATALOAD
0xfc SWAP1
0xfd PUSH1 0x20
0xff ADD
0x100 SWAP1
0x101 SWAP2
0x102 SWAP1
0x103 DUP1
0x104 CALLDATALOAD
0x105 SWAP1
0x106 PUSH1 0x20
0x108 ADD
0x109 SWAP1
0x10a SWAP2
0x10b SWAP1
0x10c DUP1
0x10d CALLDATALOAD
0x10e SWAP1
0x10f PUSH1 0x20
0x111 ADD
0x112 SWAP1
0x113 SWAP2
0x114 SWAP1
0x115 POP
0x116 POP
0x117 PUSH2 0x3ad
0x11a JUMP
---
0xea: JUMPDEST 
0xeb: V63 = 0x11b
0xee: V64 = 0x4
0xf2: V65 = CALLDATALOAD 0x4
0xf4: V66 = 0x20
0xf6: V67 = ADD 0x20 0x4
0xfb: V68 = CALLDATALOAD 0x24
0xfd: V69 = 0x20
0xff: V70 = ADD 0x20 0x24
0x104: V71 = CALLDATALOAD 0x44
0x106: V72 = 0x20
0x108: V73 = ADD 0x20 0x44
0x10d: V74 = CALLDATALOAD 0x64
0x10f: V75 = 0x20
0x111: V76 = ADD 0x20 0x64
0x117: V77 = 0x3ad
0x11a: JUMP 0x3ad
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x11b, V65, V68, V71, V74]
Exit stack: [V8, 0x11b, V65, V68, V71, V74]

================================

Block 0x11b
[0x11b:0x11c]
---
Predecessors: [0x4f6]
Successors: []
---
0x11b JUMPDEST
0x11c STOP
---
0x11b: JUMPDEST 
0x11c: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x11d
[0x11d:0x124]
---
Predecessors: [0x4f]
Successors: [0x4fc]
---
0x11d JUMPDEST
0x11e PUSH2 0x125
0x121 PUSH2 0x4fc
0x124 JUMP
---
0x11d: JUMPDEST 
0x11e: V78 = 0x125
0x121: V79 = 0x4fc
0x124: JUMP 0x4fc
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x125]
Exit stack: [V8, 0x125]

================================

Block 0x125
[0x125:0x126]
---
Predecessors: [0x4fd]
Successors: []
---
0x125 JUMPDEST
0x126 STOP
---
0x125: JUMPDEST 
0x126: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x127
[0x127:0x17f]
---
Predecessors: [0x84]
Successors: [0x180, 0x1d3]
---
0x127 JUMPDEST
0x128 PUSH1 0x0
0x12a PUSH1 0x0
0x12c SWAP1
0x12d SLOAD
0x12e SWAP1
0x12f PUSH2 0x100
0x132 EXP
0x133 SWAP1
0x134 DIV
0x135 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14a AND
0x14b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x160 AND
0x161 CALLER
0x162 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x177 AND
0x178 EQ
0x179 ISZERO
0x17a DUP1
0x17b ISZERO
0x17c PUSH2 0x1d3
0x17f JUMPI
---
0x127: JUMPDEST 
0x128: V80 = 0x0
0x12a: V81 = 0x0
0x12d: V82 = S[0x0]
0x12f: V83 = 0x100
0x132: V84 = EXP 0x100 0x0
0x134: V85 = DIV V82 0x1
0x135: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x14b: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x160: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x161: V90 = CALLER
0x162: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x177: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x178: V93 = EQ V92 V89
0x179: V94 = ISZERO V93
0x17b: V95 = ISZERO V94
0x17c: V96 = 0x1d3
0x17f: JUMPI 0x1d3 V95
---
Entry stack: [V8, 0xb5, V35, V38, V41, V44]
Stack pops: 0
Stack additions: [V94]
Exit stack: [V8, 0xb5, V35, V38, V41, V44, V94]

================================

Block 0x180
[0x180:0x1d2]
---
Predecessors: [0x127]
Successors: [0x1d3]
---
0x180 POP
0x181 PUSH1 0x0
0x183 PUSH1 0x0
0x185 SWAP1
0x186 SLOAD
0x187 SWAP1
0x188 PUSH2 0x100
0x18b EXP
0x18c SWAP1
0x18d DIV
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b9 AND
0x1ba ORIGIN
0x1bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d0 AND
0x1d1 EQ
0x1d2 ISZERO
---
0x181: V97 = 0x0
0x183: V98 = 0x0
0x186: V99 = S[0x0]
0x188: V100 = 0x100
0x18b: V101 = EXP 0x100 0x0
0x18d: V102 = DIV V99 0x1
0x18e: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1a4: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1ba: V107 = ORIGIN
0x1bb: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1d1: V110 = EQ V109 V106
0x1d2: V111 = ISZERO V110
---
Entry stack: [V8, 0xb5, V35, V38, V41, V44, V94]
Stack pops: 1
Stack additions: [V111]
Exit stack: [V8, 0xb5, V35, V38, V41, V44, V111]

================================

Block 0x1d3
[0x1d3:0x1d8]
---
Predecessors: [0x127, 0x180]
Successors: [0x1d9, 0x1dd]
---
0x1d3 JUMPDEST
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V112 = ISZERO S0
0x1d5: V113 = 0x1dd
0x1d8: JUMPI 0x1dd V112
---
Entry stack: [V8, 0xb5, V35, V38, V41, V44, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xb5, V35, V38, V41, V44]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x1d3]
Successors: []
---
0x1d9 PUSH2 0x0
0x1dc JUMP
---
0x1d9: V114 = 0x0
0x1dc: THROW 
---
Entry stack: [V8, 0xb5, V35, V38, V41, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb5, V35, V38, V41, V44]

================================

Block 0x1dd
[0x1dd:0x262]
---
Predecessors: [0x1d3]
Successors: [0x263]
---
0x1dd JUMPDEST
0x1de DUP4
0x1df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f4 AND
0x1f5 DUP2
0x1f6 DUP5
0x1f7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x215 SWAP1
0x216 DIV
0x217 SWAP1
0x218 DUP5
0x219 PUSH1 0x40
0x21b MLOAD
0x21c DUP4
0x21d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x23b MUL
0x23c DUP2
0x23d MSTORE
0x23e PUSH1 0x4
0x240 ADD
0x241 DUP1
0x242 DUP3
0x243 PUSH1 0x0
0x245 NOT
0x246 AND
0x247 DUP2
0x248 MSTORE
0x249 PUSH1 0x20
0x24b ADD
0x24c SWAP2
0x24d POP
0x24e POP
0x24f PUSH1 0x0
0x251 PUSH1 0x40
0x253 MLOAD
0x254 DUP1
0x255 DUP4
0x256 SUB
0x257 DUP2
0x258 PUSH1 0x0
0x25a DUP9
0x25b DUP8
0x25c CALLCODE
0x25d SWAP4
0x25e POP
0x25f POP
0x260 POP
0x261 POP
0x262 POP
---
0x1dd: JUMPDEST 
0x1df: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x1f7: V117 = 0x100000000000000000000000000000000000000000000000000000000
0x216: V118 = DIV V38 0x100000000000000000000000000000000000000000000000000000000
0x219: V119 = 0x40
0x21b: V120 = M[0x40]
0x21d: V121 = 0x100000000000000000000000000000000000000000000000000000000
0x23b: V122 = MUL 0x100000000000000000000000000000000000000000000000000000000 V118
0x23d: M[V120] = V122
0x23e: V123 = 0x4
0x240: V124 = ADD 0x4 V120
0x243: V125 = 0x0
0x245: V126 = NOT 0x0
0x246: V127 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V41
0x248: M[V124] = V127
0x249: V128 = 0x20
0x24b: V129 = ADD 0x20 V124
0x24f: V130 = 0x0
0x251: V131 = 0x40
0x253: V132 = M[0x40]
0x256: V133 = SUB V129 V132
0x258: V134 = 0x0
0x25c: V135 = CALLCODE V44 V116 0x0 V132 V133 V132 0x0
---
Entry stack: [V8, 0xb5, V35, V38, V41, V44]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V8, 0xb5, V35, V38, V41, V44]

================================

Block 0x263
[0x263:0x263]
---
Predecessors: [0x1dd]
Successors: [0x264]
---
0x263 JUMPDEST
---
0x263: JUMPDEST 
---
Entry stack: [V8, 0xb5, V35, V38, V41, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb5, V35, V38, V41, V44]

================================

Block 0x264
[0x264:0x269]
---
Predecessors: [0x263]
Successors: [0xb5]
---
0x264 JUMPDEST
0x265 POP
0x266 POP
0x267 POP
0x268 POP
0x269 JUMP
---
0x264: JUMPDEST 
0x269: JUMP 0xb5
---
Entry stack: [V8, 0xb5, V35, V38, V41, V44]
Stack pops: 5
Stack additions: []
Exit stack: [V8]

================================

Block 0x26a
[0x26a:0x2c2]
---
Predecessors: [0xb7]
Successors: [0x2c3, 0x316]
---
0x26a JUMPDEST
0x26b PUSH1 0x0
0x26d PUSH1 0x0
0x26f SWAP1
0x270 SLOAD
0x271 SWAP1
0x272 PUSH2 0x100
0x275 EXP
0x276 SWAP1
0x277 DIV
0x278 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28d AND
0x28e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a3 AND
0x2a4 CALLER
0x2a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ba AND
0x2bb EQ
0x2bc ISZERO
0x2bd DUP1
0x2be ISZERO
0x2bf PUSH2 0x316
0x2c2 JUMPI
---
0x26a: JUMPDEST 
0x26b: V136 = 0x0
0x26d: V137 = 0x0
0x270: V138 = S[0x0]
0x272: V139 = 0x100
0x275: V140 = EXP 0x100 0x0
0x277: V141 = DIV V138 0x1
0x278: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x28e: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x2a4: V146 = CALLER
0x2a5: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ba: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x2bb: V149 = EQ V148 V145
0x2bc: V150 = ISZERO V149
0x2be: V151 = ISZERO V150
0x2bf: V152 = 0x316
0x2c2: JUMPI 0x316 V151
---
Entry stack: [V8, 0xe8, V50, V53, V56, V59]
Stack pops: 0
Stack additions: [V150]
Exit stack: [V8, 0xe8, V50, V53, V56, V59, V150]

================================

Block 0x2c3
[0x2c3:0x315]
---
Predecessors: [0x26a]
Successors: [0x316]
---
0x2c3 POP
0x2c4 PUSH1 0x0
0x2c6 PUSH1 0x0
0x2c8 SWAP1
0x2c9 SLOAD
0x2ca SWAP1
0x2cb PUSH2 0x100
0x2ce EXP
0x2cf SWAP1
0x2d0 DIV
0x2d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e6 AND
0x2e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fc AND
0x2fd ORIGIN
0x2fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x313 AND
0x314 EQ
0x315 ISZERO
---
0x2c4: V153 = 0x0
0x2c6: V154 = 0x0
0x2c9: V155 = S[0x0]
0x2cb: V156 = 0x100
0x2ce: V157 = EXP 0x100 0x0
0x2d0: V158 = DIV V155 0x1
0x2d1: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e6: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x2e7: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x2fd: V163 = ORIGIN
0x2fe: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x313: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x314: V166 = EQ V165 V162
0x315: V167 = ISZERO V166
---
Entry stack: [V8, 0xe8, V50, V53, V56, V59, V150]
Stack pops: 1
Stack additions: [V167]
Exit stack: [V8, 0xe8, V50, V53, V56, V59, V167]

================================

Block 0x316
[0x316:0x31b]
---
Predecessors: [0x26a, 0x2c3]
Successors: [0x31c, 0x320]
---
0x316 JUMPDEST
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x316: JUMPDEST 
0x317: V168 = ISZERO S0
0x318: V169 = 0x320
0x31b: JUMPI 0x320 V168
---
Entry stack: [V8, 0xe8, V50, V53, V56, V59, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xe8, V50, V53, V56, V59]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x316]
Successors: []
---
0x31c PUSH2 0x0
0x31f JUMP
---
0x31c: V170 = 0x0
0x31f: THROW 
---
Entry stack: [V8, 0xe8, V50, V53, V56, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe8, V50, V53, V56, V59]

================================

Block 0x320
[0x320:0x3a5]
---
Predecessors: [0x316]
Successors: [0x3a6]
---
0x320 JUMPDEST
0x321 DUP4
0x322 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x337 AND
0x338 DUP2
0x339 DUP5
0x33a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x358 SWAP1
0x359 DIV
0x35a SWAP1
0x35b DUP5
0x35c PUSH1 0x40
0x35e MLOAD
0x35f DUP4
0x360 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x37e MUL
0x37f DUP2
0x380 MSTORE
0x381 PUSH1 0x4
0x383 ADD
0x384 DUP1
0x385 DUP3
0x386 PUSH1 0x0
0x388 NOT
0x389 AND
0x38a DUP2
0x38b MSTORE
0x38c PUSH1 0x20
0x38e ADD
0x38f SWAP2
0x390 POP
0x391 POP
0x392 PUSH1 0x0
0x394 PUSH1 0x40
0x396 MLOAD
0x397 DUP1
0x398 DUP4
0x399 SUB
0x39a DUP2
0x39b PUSH1 0x0
0x39d DUP9
0x39e DUP8
0x39f CALL
0x3a0 SWAP4
0x3a1 POP
0x3a2 POP
0x3a3 POP
0x3a4 POP
0x3a5 POP
---
0x320: JUMPDEST 
0x322: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x337: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x33a: V173 = 0x100000000000000000000000000000000000000000000000000000000
0x359: V174 = DIV V53 0x100000000000000000000000000000000000000000000000000000000
0x35c: V175 = 0x40
0x35e: V176 = M[0x40]
0x360: V177 = 0x100000000000000000000000000000000000000000000000000000000
0x37e: V178 = MUL 0x100000000000000000000000000000000000000000000000000000000 V174
0x380: M[V176] = V178
0x381: V179 = 0x4
0x383: V180 = ADD 0x4 V176
0x386: V181 = 0x0
0x388: V182 = NOT 0x0
0x389: V183 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V56
0x38b: M[V180] = V183
0x38c: V184 = 0x20
0x38e: V185 = ADD 0x20 V180
0x392: V186 = 0x0
0x394: V187 = 0x40
0x396: V188 = M[0x40]
0x399: V189 = SUB V185 V188
0x39b: V190 = 0x0
0x39f: V191 = CALL V59 V172 0x0 V188 V189 V188 0x0
---
Entry stack: [V8, 0xe8, V50, V53, V56, V59]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V8, 0xe8, V50, V53, V56, V59]

================================

Block 0x3a6
[0x3a6:0x3a6]
---
Predecessors: [0x320]
Successors: [0x3a7]
---
0x3a6 JUMPDEST
---
0x3a6: JUMPDEST 
---
Entry stack: [V8, 0xe8, V50, V53, V56, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe8, V50, V53, V56, V59]

================================

Block 0x3a7
[0x3a7:0x3ac]
---
Predecessors: [0x3a6]
Successors: [0xe8]
---
0x3a7 JUMPDEST
0x3a8 POP
0x3a9 POP
0x3aa POP
0x3ab POP
0x3ac JUMP
---
0x3a7: JUMPDEST 
0x3ac: JUMP 0xe8
---
Entry stack: [V8, 0xe8, V50, V53, V56, V59]
Stack pops: 5
Stack additions: []
Exit stack: [V8]

================================

Block 0x3ad
[0x3ad:0x405]
---
Predecessors: [0xea]
Successors: [0x406, 0x459]
---
0x3ad JUMPDEST
0x3ae PUSH1 0x0
0x3b0 PUSH1 0x0
0x3b2 SWAP1
0x3b3 SLOAD
0x3b4 SWAP1
0x3b5 PUSH2 0x100
0x3b8 EXP
0x3b9 SWAP1
0x3ba DIV
0x3bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d0 AND
0x3d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e6 AND
0x3e7 CALLER
0x3e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fd AND
0x3fe EQ
0x3ff ISZERO
0x400 DUP1
0x401 ISZERO
0x402 PUSH2 0x459
0x405 JUMPI
---
0x3ad: JUMPDEST 
0x3ae: V192 = 0x0
0x3b0: V193 = 0x0
0x3b3: V194 = S[0x0]
0x3b5: V195 = 0x100
0x3b8: V196 = EXP 0x100 0x0
0x3ba: V197 = DIV V194 0x1
0x3bb: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x3d1: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e6: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x3e7: V202 = CALLER
0x3e8: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fd: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x3fe: V205 = EQ V204 V201
0x3ff: V206 = ISZERO V205
0x401: V207 = ISZERO V206
0x402: V208 = 0x459
0x405: JUMPI 0x459 V207
---
Entry stack: [V8, 0x11b, V65, V68, V71, V74]
Stack pops: 0
Stack additions: [V206]
Exit stack: [V8, 0x11b, V65, V68, V71, V74, V206]

================================

Block 0x406
[0x406:0x458]
---
Predecessors: [0x3ad]
Successors: [0x459]
---
0x406 POP
0x407 PUSH1 0x0
0x409 PUSH1 0x0
0x40b SWAP1
0x40c SLOAD
0x40d SWAP1
0x40e PUSH2 0x100
0x411 EXP
0x412 SWAP1
0x413 DIV
0x414 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x429 AND
0x42a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43f AND
0x440 ORIGIN
0x441 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x456 AND
0x457 EQ
0x458 ISZERO
---
0x407: V209 = 0x0
0x409: V210 = 0x0
0x40c: V211 = S[0x0]
0x40e: V212 = 0x100
0x411: V213 = EXP 0x100 0x0
0x413: V214 = DIV V211 0x1
0x414: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x429: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x42a: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x43f: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x440: V219 = ORIGIN
0x441: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x456: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x457: V222 = EQ V221 V218
0x458: V223 = ISZERO V222
---
Entry stack: [V8, 0x11b, V65, V68, V71, V74, V206]
Stack pops: 1
Stack additions: [V223]
Exit stack: [V8, 0x11b, V65, V68, V71, V74, V223]

================================

Block 0x459
[0x459:0x45e]
---
Predecessors: [0x3ad, 0x406]
Successors: [0x45f, 0x463]
---
0x459 JUMPDEST
0x45a ISZERO
0x45b PUSH2 0x463
0x45e JUMPI
---
0x459: JUMPDEST 
0x45a: V224 = ISZERO S0
0x45b: V225 = 0x463
0x45e: JUMPI 0x463 V224
---
Entry stack: [V8, 0x11b, V65, V68, V71, V74, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x11b, V65, V68, V71, V74]

================================

Block 0x45f
[0x45f:0x462]
---
Predecessors: [0x459]
Successors: []
---
0x45f PUSH2 0x0
0x462 JUMP
---
0x45f: V226 = 0x0
0x462: THROW 
---
Entry stack: [V8, 0x11b, V65, V68, V71, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x11b, V65, V68, V71, V74]

================================

Block 0x463
[0x463:0x4e5]
---
Predecessors: [0x459]
Successors: [0x4e6]
---
0x463 JUMPDEST
0x464 DUP4
0x465 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47a AND
0x47b DUP2
0x47c DUP5
0x47d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x49b SWAP1
0x49c DIV
0x49d SWAP1
0x49e DUP5
0x49f PUSH1 0x40
0x4a1 MLOAD
0x4a2 DUP4
0x4a3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4c1 MUL
0x4c2 DUP2
0x4c3 MSTORE
0x4c4 PUSH1 0x4
0x4c6 ADD
0x4c7 DUP1
0x4c8 DUP3
0x4c9 PUSH1 0x0
0x4cb NOT
0x4cc AND
0x4cd DUP2
0x4ce MSTORE
0x4cf PUSH1 0x20
0x4d1 ADD
0x4d2 SWAP2
0x4d3 POP
0x4d4 POP
0x4d5 PUSH1 0x20
0x4d7 PUSH1 0x40
0x4d9 MLOAD
0x4da DUP1
0x4db DUP4
0x4dc SUB
0x4dd DUP2
0x4de DUP8
0x4df DUP7
0x4e0 DELEGATECALL
0x4e1 ISZERO
0x4e2 PUSH2 0x0
0x4e5 JUMPI
---
0x463: JUMPDEST 
0x465: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x47a: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x47d: V229 = 0x100000000000000000000000000000000000000000000000000000000
0x49c: V230 = DIV V68 0x100000000000000000000000000000000000000000000000000000000
0x49f: V231 = 0x40
0x4a1: V232 = M[0x40]
0x4a3: V233 = 0x100000000000000000000000000000000000000000000000000000000
0x4c1: V234 = MUL 0x100000000000000000000000000000000000000000000000000000000 V230
0x4c3: M[V232] = V234
0x4c4: V235 = 0x4
0x4c6: V236 = ADD 0x4 V232
0x4c9: V237 = 0x0
0x4cb: V238 = NOT 0x0
0x4cc: V239 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V71
0x4ce: M[V236] = V239
0x4cf: V240 = 0x20
0x4d1: V241 = ADD 0x20 V236
0x4d5: V242 = 0x20
0x4d7: V243 = 0x40
0x4d9: V244 = M[0x40]
0x4dc: V245 = SUB V241 V244
0x4e0: V246 = DELEGATECALL V74 V228 V244 V245 V244 0x20
0x4e1: V247 = ISZERO V246
0x4e2: V248 = 0x0
0x4e5: THROWI V247
---
Entry stack: [V8, 0x11b, V65, V68, V71, V74]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V228, V230, S0, V241]
Exit stack: [V8, 0x11b, V65, V68, V71, V74, V228, V230, V74, V241]

================================

Block 0x4e6
[0x4e6:0x4f4]
---
Predecessors: [0x463]
Successors: [0x4f5]
---
0x4e6 POP
0x4e7 POP
0x4e8 POP
0x4e9 POP
0x4ea PUSH1 0x40
0x4ec MLOAD
0x4ed DUP1
0x4ee MLOAD
0x4ef SWAP1
0x4f0 PUSH1 0x20
0x4f2 ADD
0x4f3 POP
0x4f4 POP
---
0x4ea: V249 = 0x40
0x4ec: V250 = M[0x40]
0x4ee: V251 = M[V250]
0x4f0: V252 = 0x20
0x4f2: V253 = ADD 0x20 V250
---
Entry stack: [V8, 0x11b, V65, V68, V71, V74, V228, V230, V74, V241]
Stack pops: 4
Stack additions: []
Exit stack: [V8, 0x11b, V65, V68, V71, V74]

================================

Block 0x4f5
[0x4f5:0x4f5]
---
Predecessors: [0x4e6]
Successors: [0x4f6]
---
0x4f5 JUMPDEST
---
0x4f5: JUMPDEST 
---
Entry stack: [V8, 0x11b, V65, V68, V71, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x11b, V65, V68, V71, V74]

================================

Block 0x4f6
[0x4f6:0x4fb]
---
Predecessors: [0x4f5]
Successors: [0x11b]
---
0x4f6 JUMPDEST
0x4f7 POP
0x4f8 POP
0x4f9 POP
0x4fa POP
0x4fb JUMP
---
0x4f6: JUMPDEST 
0x4fb: JUMP 0x11b
---
Entry stack: [V8, 0x11b, V65, V68, V71, V74]
Stack pops: 5
Stack additions: []
Exit stack: [V8]

================================

Block 0x4fc
[0x4fc:0x4fc]
---
Predecessors: [0x11d]
Successors: [0x4fd]
---
0x4fc JUMPDEST
---
0x4fc: JUMPDEST 
---
Entry stack: [V8, 0x125]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x125]

================================

Block 0x4fd
[0x4fd:0x4fe]
---
Predecessors: [0x4fc]
Successors: [0x125]
---
0x4fd JUMPDEST
0x4fe JUMP
---
0x4fd: JUMPDEST 
0x4fe: JUMP 0x125
---
Entry stack: [V8, 0x125]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x2bf0a5f3
Entry block: 0x84
Exit block: 0xb5
Body: 0x84, 0xb5, 0x127, 0x180, 0x1d3, 0x1d9, 0x1dd, 0x263, 0x264

Function 1:
Public function signature: 0x4bf52928
Entry block: 0xb7
Exit block: 0xe8
Body: 0xb7, 0xe8, 0x26a, 0x2c3, 0x316, 0x31c, 0x320, 0x3a6, 0x3a7

Function 2:
Public function signature: 0x56475d84
Entry block: 0xea
Exit block: 0x11b
Body: 0xea, 0x11b, 0x3ad, 0x406, 0x459, 0x45f, 0x463, 0x4e6, 0x4f5, 0x4f6

Function 3:
Public function signature: 0x81d01ed3
Entry block: 0x11d
Exit block: 0x125
Body: 0x11d, 0x125, 0x4fc, 0x4fd

Function 4:
Public fallback function
Entry block: 0x5a
Exit block: 0x82
Body: 0x5a, 0x5e, 0x65, 0x72, 0x7e, 0x7f, 0x82

