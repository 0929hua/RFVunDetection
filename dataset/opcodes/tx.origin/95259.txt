Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x5b]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xa30eddcc
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x5b
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xa30eddcc
0x3b: V13 = EQ V11 0xa30eddcc
0x3c: V14 = 0x5b
0x3f: JUMPI 0x5b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8b]
---
0x40 DUP1
0x41 PUSH4 0xb863bd37
0x46 EQ
0x47 PUSH2 0x8b
0x4a JUMPI
---
0x41: V15 = 0xb863bd37
0x46: V16 = EQ 0xb863bd37 V11
0x47: V17 = 0x8b
0x4a: JUMPI 0x8b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa3]
---
0x4b DUP1
0x4c PUSH4 0xe72f5f63
0x51 EQ
0x52 PUSH2 0xa3
0x55 JUMPI
---
0x4c: V18 = 0xe72f5f63
0x51: V19 = EQ 0xe72f5f63 V11
0x52: V20 = 0xa3
0x55: JUMPI 0xa3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x5a]
---
Predecessors: [0x0, 0x4b]
Successors: []
---
0x56 JUMPDEST
0x57 PUSH1 0x0
0x59 DUP1
0x5a REVERT
---
0x56: JUMPDEST 
0x57: V21 = 0x0
0x5a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b
[0x5b:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5b JUMPDEST
0x5c CALLVALUE
0x5d DUP1
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5b: JUMPDEST 
0x5c: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5b]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x67
[0x67:0x78]
---
Predecessors: [0x5b]
Successors: [0xb8]
---
0x67 JUMPDEST
0x68 POP
0x69 PUSH2 0x79
0x6c PUSH1 0x4
0x6e CALLDATALOAD
0x6f PUSH1 0x24
0x71 CALLDATALOAD
0x72 PUSH1 0x44
0x74 CALLDATALOAD
0x75 PUSH2 0xb8
0x78 JUMP
---
0x67: JUMPDEST 
0x69: V26 = 0x79
0x6c: V27 = 0x4
0x6e: V28 = CALLDATALOAD 0x4
0x6f: V29 = 0x24
0x71: V30 = CALLDATALOAD 0x24
0x72: V31 = 0x44
0x74: V32 = CALLDATALOAD 0x44
0x75: V33 = 0xb8
0x78: JUMP 0xb8
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x79, V28, V30, V32]
Exit stack: [V11, 0x79, V28, V30, V32]

================================

Block 0x79
[0x79:0x8a]
---
Predecessors: [0xb8, 0xe4, 0xeb]
Successors: []
---
0x79 JUMPDEST
0x7a PUSH1 0x40
0x7c DUP1
0x7d MLOAD
0x7e SWAP2
0x7f DUP3
0x80 MSTORE
0x81 MLOAD
0x82 SWAP1
0x83 DUP2
0x84 SWAP1
0x85 SUB
0x86 PUSH1 0x20
0x88 ADD
0x89 SWAP1
0x8a RETURN
---
0x79: JUMPDEST 
0x7a: V34 = 0x40
0x7d: V35 = M[0x40]
0x80: M[V35] = S0
0x81: V36 = M[0x40]
0x85: V37 = SUB V35 V36
0x86: V38 = 0x20
0x88: V39 = ADD 0x20 V37
0x8a: RETURN V36 V39
---
Entry stack: [V11, 0x79, V46, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x79, V46, 0x0, S1]

================================

Block 0x8b
[0x8b:0x92]
---
Predecessors: [0x40]
Successors: [0x93, 0x97]
---
0x8b JUMPDEST
0x8c CALLVALUE
0x8d DUP1
0x8e ISZERO
0x8f PUSH2 0x97
0x92 JUMPI
---
0x8b: JUMPDEST 
0x8c: V40 = CALLVALUE
0x8e: V41 = ISZERO V40
0x8f: V42 = 0x97
0x92: JUMPI 0x97 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V40]
Exit stack: [V11, V40]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x8b]
Successors: []
---
0x93 PUSH1 0x0
0x95 DUP1
0x96 REVERT
---
0x93: V43 = 0x0
0x96: REVERT 0x0 0x0
---
Entry stack: [V11, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V40]

================================

Block 0x97
[0x97:0xa2]
---
Predecessors: [0x8b]
Successors: [0xd0]
---
0x97 JUMPDEST
0x98 POP
0x99 PUSH2 0x79
0x9c PUSH1 0x4
0x9e CALLDATALOAD
0x9f PUSH2 0xd0
0xa2 JUMP
---
0x97: JUMPDEST 
0x99: V44 = 0x79
0x9c: V45 = 0x4
0x9e: V46 = CALLDATALOAD 0x4
0x9f: V47 = 0xd0
0xa2: JUMP 0xd0
---
Entry stack: [V11, V40]
Stack pops: 1
Stack additions: [0x79, V46]
Exit stack: [V11, 0x79, V46]

================================

Block 0xa3
[0xa3:0xaa]
---
Predecessors: [0x4b]
Successors: [0xab, 0xaf]
---
0xa3 JUMPDEST
0xa4 CALLVALUE
0xa5 DUP1
0xa6 ISZERO
0xa7 PUSH2 0xaf
0xaa JUMPI
---
0xa3: JUMPDEST 
0xa4: V48 = CALLVALUE
0xa6: V49 = ISZERO V48
0xa7: V50 = 0xaf
0xaa: JUMPI 0xaf V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xab
[0xab:0xae]
---
Predecessors: [0xa3]
Successors: []
---
0xab PUSH1 0x0
0xad DUP1
0xae REVERT
---
0xab: V51 = 0x0
0xae: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xaf
[0xaf:0xb7]
---
Predecessors: [0xa3]
Successors: [0xeb]
---
0xaf JUMPDEST
0xb0 POP
0xb1 PUSH2 0x79
0xb4 PUSH2 0xeb
0xb7 JUMP
---
0xaf: JUMPDEST 
0xb1: V52 = 0x79
0xb4: V53 = 0xeb
0xb7: JUMP 0xeb
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0x79]
Exit stack: [V11, 0x79]

================================

Block 0xb8
[0xb8:0xcf]
---
Predecessors: [0x67]
Successors: [0x79]
---
0xb8 JUMPDEST
0xb9 DUP2
0xba MUL
0xbb PUSH1 0x2
0xbd SWAP1
0xbe DUP2
0xbf EXP
0xc0 SWAP2
0xc1 SWAP1
0xc2 EXP
0xc3 PUSH1 0x0
0xc5 NOT
0xc6 ADD
0xc7 DUP2
0xc8 MUL
0xc9 SWAP2
0xca SWAP1
0xcb SWAP2
0xcc AND
0xcd DIV
0xce SWAP1
0xcf JUMP
---
0xb8: JUMPDEST 
0xba: V54 = MUL V30 V32
0xbb: V55 = 0x2
0xbf: V56 = EXP 0x2 V54
0xc2: V57 = EXP 0x2 V30
0xc3: V58 = 0x0
0xc5: V59 = NOT 0x0
0xc6: V60 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V57
0xc8: V61 = MUL V56 V60
0xcc: V62 = AND V61 V28
0xcd: V63 = DIV V62 V56
0xcf: JUMP 0x79
---
Entry stack: [V11, 0x79, V28, V30, V32]
Stack pops: 4
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0xd0
[0xd0:0xda]
---
Predecessors: [0x97]
Successors: [0xeb]
---
0xd0 JUMPDEST
0xd1 PUSH1 0x0
0xd3 DUP2
0xd4 PUSH2 0xdb
0xd7 PUSH2 0xeb
0xda JUMP
---
0xd0: JUMPDEST 
0xd1: V64 = 0x0
0xd4: V65 = 0xdb
0xd7: V66 = 0xeb
0xda: JUMP 0xeb
---
Entry stack: [V11, 0x79, V46]
Stack pops: 1
Stack additions: [S0, 0x0, S0, 0xdb]
Exit stack: [V11, 0x79, V46, 0x0, V46, 0xdb]

================================

Block 0xdb
[0xdb:0xe2]
---
Predecessors: [0xeb]
Successors: [0xe3, 0xe4]
---
0xdb JUMPDEST
0xdc DUP2
0xdd ISZERO
0xde ISZERO
0xdf PUSH2 0xe4
0xe2 JUMPI
---
0xdb: JUMPDEST 
0xdd: V67 = ISZERO S1
0xde: V68 = ISZERO V67
0xdf: V69 = 0xe4
0xe2: JUMPI 0xe4 V68
---
Entry stack: [V11, 0x79, V46, 0x0, S1, V95]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x79, V46, 0x0, S1, V95]

================================

Block 0xe3
[0xe3:0xe3]
---
Predecessors: [0xdb]
Successors: []
---
0xe3 INVALID
---
0xe3: INVALID 
---
Entry stack: [V11, 0x79, V46, 0x0, S1, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x79, V46, 0x0, S1, V95]

================================

Block 0xe4
[0xe4:0xea]
---
Predecessors: [0xdb]
Successors: [0x79]
---
0xe4 JUMPDEST
0xe5 MOD
0xe6 SWAP3
0xe7 SWAP2
0xe8 POP
0xe9 POP
0xea JUMP
---
0xe4: JUMPDEST 
0xe5: V70 = MOD V95 S1
0xea: JUMP 0x79
---
Entry stack: [V11, 0x79, V46, 0x0, S1, V95]
Stack pops: 5
Stack additions: [V70]
Exit stack: [V11, V70]

================================

Block 0xeb
[0xeb:0x141]
---
Predecessors: [0xaf, 0xd0]
Successors: [0x79, 0xdb]
---
0xeb JUMPDEST
0xec PUSH1 0x0
0xee DUP1
0xef SLOAD
0xf0 PUSH1 0x40
0xf2 DUP1
0xf3 MLOAD
0xf4 SWAP2
0xf5 DUP3
0xf6 MSTORE
0xf7 PUSH1 0x0
0xf9 NOT
0xfa NUMBER
0xfb ADD
0xfc BLOCKHASH
0xfd PUSH1 0x20
0xff DUP4
0x100 ADD
0x101 MSTORE
0x102 PUSH13 0x1000000000000000000000000
0x110 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x125 COINBASE
0x126 AND
0x127 MUL
0x128 DUP3
0x129 DUP3
0x12a ADD
0x12b MSTORE
0x12c DIFFICULTY
0x12d PUSH1 0x54
0x12f DUP4
0x130 ADD
0x131 MSTORE
0x132 MLOAD
0x133 SWAP1
0x134 DUP2
0x135 SWAP1
0x136 SUB
0x137 PUSH1 0x74
0x139 ADD
0x13a SWAP1
0x13b SHA3
0x13c SWAP1
0x13d DUP2
0x13e SWAP1
0x13f SSTORE
0x140 SWAP1
0x141 JUMP
---
0xeb: JUMPDEST 
0xec: V71 = 0x0
0xef: V72 = S[0x0]
0xf0: V73 = 0x40
0xf3: V74 = M[0x40]
0xf6: M[V74] = V72
0xf7: V75 = 0x0
0xf9: V76 = NOT 0x0
0xfa: V77 = NUMBER
0xfb: V78 = ADD V77 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xfc: V79 = BLOCKHASH V78
0xfd: V80 = 0x20
0x100: V81 = ADD V74 0x20
0x101: M[V81] = V79
0x102: V82 = 0x1000000000000000000000000
0x110: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x125: V84 = COINBASE
0x126: V85 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x127: V86 = MUL V85 0x1000000000000000000000000
0x12a: V87 = ADD 0x40 V74
0x12b: M[V87] = V86
0x12c: V88 = DIFFICULTY
0x12d: V89 = 0x54
0x130: V90 = ADD V74 0x54
0x131: M[V90] = V88
0x132: V91 = M[0x40]
0x136: V92 = SUB V74 V91
0x137: V93 = 0x74
0x139: V94 = ADD 0x74 V92
0x13b: V95 = SHA3 V91 V94
0x13f: S[0x0] = V95
0x141: JUMP {0x79, 0xdb}
---
Entry stack: [V11, 0x79, V46, 0x0, S1, {0x79, 0xdb}]
Stack pops: 1
Stack additions: [V95]
Exit stack: [V11, 0x79, V46, 0x0, S1, V95]

================================

Block 0x142
[0x142:0x189]
---
Predecessors: []
Successors: []
---
0x142 STOP
0x143 LOG1
0x144 PUSH6 0x627a7a723058
0x14b SHA3
0x14c MISSING 0xf
0x14d EQ
0x14e MISSING 0xc9
0x14f ORIGIN
0x150 MISSING 0xf9
0x151 MISSING 0x25
0x152 MISSING 0x5c
0x153 MISSING 0x25
0x154 PUSH11 0xd2a39cb4a0ccb65b90b046
0x160 TIMESTAMP
0x161 PUSH6 0x83feac1c8ed
0x168 DUP15
0x169 PUSH32 0xb9e10029
---
0x142: STOP 
0x143: LOG S0 S1 S2
0x144: V96 = 0x627a7a723058
0x14b: V97 = SHA3 0x627a7a723058 S3
0x14c: MISSING 0xf
0x14d: V98 = EQ S0 S1
0x14e: MISSING 0xc9
0x14f: V99 = ORIGIN
0x150: MISSING 0xf9
0x151: MISSING 0x25
0x152: MISSING 0x5c
0x153: MISSING 0x25
0x154: V100 = 0xd2a39cb4a0ccb65b90b046
0x160: V101 = TIMESTAMP
0x161: V102 = 0x83feac1c8ed
0x169: V103 = 0xb9e10029
---
Entry stack: []
Stack pops: 0
Stack additions: [V97, V98, V99, 0xb9e10029, S11, 0x83feac1c8ed, V101, 0xd2a39cb4a0ccb65b90b046, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Function 0:
Public function signature: 0xa30eddcc
Entry block: 0x5b
Exit block: 0x79
Body: 0x5b, 0x63, 0x67, 0x79, 0xb8

Function 1:
Public function signature: 0xb863bd37
Entry block: 0x8b
Exit block: 0x79
Body: 0x79, 0x8b, 0x93, 0x97, 0xd0, 0xdb, 0xe3, 0xe4

Function 2:
Public function signature: 0xe72f5f63
Entry block: 0xa3
Exit block: 0xab
Body: 0x79, 0xa3, 0xab, 0xaf

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

