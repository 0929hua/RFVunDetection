Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x43]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x51cff8d9
0x3c EQ
0x3d PUSH2 0x43
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x51cff8d9
0x3c: V13 = EQ 0x51cff8d9 V11
0x3d: V14 = 0x43
0x40: JUMPI 0x43 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x42]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 STOP
---
0x41: JUMPDEST 
0x42: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x43
[0x43:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x4f]
---
0x43 JUMPDEST
0x44 CALLVALUE
0x45 DUP1
0x46 ISZERO
0x47 PUSH2 0x4f
0x4a JUMPI
---
0x43: JUMPDEST 
0x44: V15 = CALLVALUE
0x46: V16 = ISZERO V15
0x47: V17 = 0x4f
0x4a: JUMPI 0x4f V16
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V15]
Exit stack: [V11, V15]

================================

Block 0x4b
[0x4b:0x4e]
---
Predecessors: [0x43]
Successors: []
---
0x4b PUSH1 0x0
0x4d DUP1
0x4e REVERT
---
0x4b: V18 = 0x0
0x4e: REVERT 0x0 0x0
---
Entry stack: [V11, V15]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V15]

================================

Block 0x4f
[0x4f:0x83]
---
Predecessors: [0x43]
Successors: [0x86]
---
0x4f JUMPDEST
0x50 POP
0x51 PUSH2 0x84
0x54 PUSH1 0x4
0x56 DUP1
0x57 CALLDATASIZE
0x58 SUB
0x59 DUP2
0x5a ADD
0x5b SWAP1
0x5c DUP1
0x5d DUP1
0x5e CALLDATALOAD
0x5f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74 AND
0x75 SWAP1
0x76 PUSH1 0x20
0x78 ADD
0x79 SWAP1
0x7a SWAP3
0x7b SWAP2
0x7c SWAP1
0x7d POP
0x7e POP
0x7f POP
0x80 PUSH2 0x86
0x83 JUMP
---
0x4f: JUMPDEST 
0x51: V19 = 0x84
0x54: V20 = 0x4
0x57: V21 = CALLDATASIZE
0x58: V22 = SUB V21 0x4
0x5a: V23 = ADD 0x4 V22
0x5e: V24 = CALLDATALOAD 0x4
0x5f: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x74: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x76: V27 = 0x20
0x78: V28 = ADD 0x20 0x4
0x80: V29 = 0x86
0x83: JUMP 0x86
---
Entry stack: [V11, V15]
Stack pops: 1
Stack additions: [0x84, V26]
Exit stack: [V11, 0x84, V26]

================================

Block 0x84
[0x84:0x85]
---
Predecessors: [0x18e]
Successors: []
---
0x84 JUMPDEST
0x85 STOP
---
0x84: JUMPDEST 
0x85: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x86
[0x86:0xcf]
---
Predecessors: [0x4f]
Successors: [0xd0, 0xd4]
---
0x86 JUMPDEST
0x87 PUSH20 0x73b61a56cb93c17a1f5fb21c01cfe0fb23f132c3
0x9c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1 AND
0xb2 ORIGIN
0xb3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc8 AND
0xc9 EQ
0xca ISZERO
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0x86: JUMPDEST 
0x87: V30 = 0x73b61a56cb93c17a1f5fb21c01cfe0fb23f132c3
0x9c: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x73b61a56cb93c17a1f5fb21c01cfe0fb23f132c3
0xb2: V33 = ORIGIN
0xb3: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xc8: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xc9: V36 = EQ V35 0x73b61a56cb93c17a1f5fb21c01cfe0fb23f132c3
0xca: V37 = ISZERO V36
0xcb: V38 = ISZERO V37
0xcc: V39 = 0xd4
0xcf: JUMPI 0xd4 V38
---
Entry stack: [V11, 0x84, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V26]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0x86]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V40 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x84, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V26]

================================

Block 0xd4
[0xd4:0x184]
---
Predecessors: [0x86]
Successors: [0x185, 0x18e]
---
0xd4 JUMPDEST
0xd5 DUP1
0xd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb AND
0xec PUSH4 0x3ccfd60b
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 DUP2
0xf5 PUSH4 0xffffffff
0xfa AND
0xfb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x119 MUL
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x4
0x11e ADD
0x11f PUSH1 0x0
0x121 PUSH1 0x40
0x123 MLOAD
0x124 DUP1
0x125 DUP4
0x126 SUB
0x127 DUP2
0x128 PUSH1 0x0
0x12a DUP8
0x12b GAS
0x12c CALL
0x12d SWAP3
0x12e POP
0x12f POP
0x130 POP
0x131 POP
0x132 ORIGIN
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 PUSH2 0x8fc
0x14c ADDRESS
0x14d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x162 AND
0x163 BALANCE
0x164 SWAP1
0x165 DUP2
0x166 ISZERO
0x167 MUL
0x168 SWAP1
0x169 PUSH1 0x40
0x16b MLOAD
0x16c PUSH1 0x0
0x16e PUSH1 0x40
0x170 MLOAD
0x171 DUP1
0x172 DUP4
0x173 SUB
0x174 DUP2
0x175 DUP6
0x176 DUP9
0x177 DUP9
0x178 CALL
0x179 SWAP4
0x17a POP
0x17b POP
0x17c POP
0x17d POP
0x17e ISZERO
0x17f DUP1
0x180 ISZERO
0x181 PUSH2 0x18e
0x184 JUMPI
---
0xd4: JUMPDEST 
0xd6: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0xec: V43 = 0x3ccfd60b
0xf1: V44 = 0x40
0xf3: V45 = M[0x40]
0xf5: V46 = 0xffffffff
0xfa: V47 = AND 0xffffffff 0x3ccfd60b
0xfb: V48 = 0x100000000000000000000000000000000000000000000000000000000
0x119: V49 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x11b: M[V45] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x11c: V50 = 0x4
0x11e: V51 = ADD 0x4 V45
0x11f: V52 = 0x0
0x121: V53 = 0x40
0x123: V54 = M[0x40]
0x126: V55 = SUB V51 V54
0x128: V56 = 0x0
0x12b: V57 = GAS
0x12c: V58 = CALL V57 V42 0x0 V54 V55 V54 0x0
0x132: V59 = ORIGIN
0x133: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x149: V62 = 0x8fc
0x14c: V63 = ADDRESS
0x14d: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x162: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x163: V66 = BALANCE V65
0x166: V67 = ISZERO V66
0x167: V68 = MUL V67 0x8fc
0x169: V69 = 0x40
0x16b: V70 = M[0x40]
0x16c: V71 = 0x0
0x16e: V72 = 0x40
0x170: V73 = M[0x40]
0x173: V74 = SUB V70 V73
0x178: V75 = CALL V68 V61 V66 V73 V74 V73 0x0
0x17e: V76 = ISZERO V75
0x180: V77 = ISZERO V76
0x181: V78 = 0x18e
0x184: JUMPI 0x18e V77
---
Entry stack: [V11, 0x84, V26]
Stack pops: 1
Stack additions: [S0, V76]
Exit stack: [V11, 0x84, V26, V76]

================================

Block 0x185
[0x185:0x18d]
---
Predecessors: [0xd4]
Successors: []
---
0x185 RETURNDATASIZE
0x186 PUSH1 0x0
0x188 DUP1
0x189 RETURNDATACOPY
0x18a RETURNDATASIZE
0x18b PUSH1 0x0
0x18d REVERT
---
0x185: V79 = RETURNDATASIZE
0x186: V80 = 0x0
0x189: RETURNDATACOPY 0x0 0x0 V79
0x18a: V81 = RETURNDATASIZE
0x18b: V82 = 0x0
0x18d: REVERT 0x0 V81
---
Entry stack: [V11, 0x84, V26, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V26, V76]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0xd4]
Successors: [0x84]
---
0x18e JUMPDEST
0x18f POP
0x190 POP
0x191 JUMP
---
0x18e: JUMPDEST 
0x191: JUMP 0x84
---
Entry stack: [V11, 0x84, V26, V76]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x192
[0x192:0x1c2]
---
Predecessors: []
Successors: []
---
0x192 STOP
0x193 LOG1
0x194 PUSH6 0x627a7a723058
0x19b SHA3
0x19c SHL
0x19d DUP4
0x19e MISSING 0xfb
0x19f EXTCODESIZE
0x1a0 MISSING 0xe
0x1a1 DUP1
0x1a2 MISSING 0x5e
0x1a3 MISSING 0xd3
0x1a4 MISSING 0x4b
0x1a5 MISSING 0xf6
0x1a6 MISSING 0xb2
0x1a7 RETURNDATACOPY
0x1a8 MISSING 0xc
0x1a9 MISSING 0xb5
0x1aa DUP16
0x1ab CREATE
0x1ac MSTORE
0x1ad MISSING 0xb4
0x1ae MISSING 0xeb
0x1af DUP3
0x1b0 PUSH18 0x1fb02aead5492b5a162a1f0029
---
0x192: STOP 
0x193: LOG S0 S1 S2
0x194: V83 = 0x627a7a723058
0x19b: V84 = SHA3 0x627a7a723058 S3
0x19c: V85 = SHL V84 S4
0x19e: MISSING 0xfb
0x19f: V86 = EXTCODESIZE S0
0x1a0: MISSING 0xe
0x1a2: MISSING 0x5e
0x1a3: MISSING 0xd3
0x1a4: MISSING 0x4b
0x1a5: MISSING 0xf6
0x1a6: MISSING 0xb2
0x1a7: RETURNDATACOPY S0 S1 S2
0x1a8: MISSING 0xc
0x1a9: MISSING 0xb5
0x1ab: V87 = CREATE S15 S0 S1
0x1ac: M[V87] = S2
0x1ad: MISSING 0xb4
0x1ae: MISSING 0xeb
0x1b0: V88 = 0x1fb02aead5492b5a162a1f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S7, V85, S5, S6, S7, V86, S0, S0, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0x1fb02aead5492b5a162a1f0029, S2, S0, S1, S2]
Exit stack: []

================================

Function 0:
Public function signature: 0x51cff8d9
Entry block: 0x43
Exit block: 0x84
Body: 0x43, 0x4b, 0x4f, 0x84, 0x86, 0xd0, 0xd4, 0x185, 0x18e

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

