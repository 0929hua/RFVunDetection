Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa3]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa3
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa3
0xc: JUMPI 0xa3 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xa8]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x144fa6d7
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xa8
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x144fa6d7
0x3b: V13 = EQ V11 0x144fa6d7
0x3c: V14 = 0xa8
0x3f: JUMPI 0xa8 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xc9]
---
0x40 DUP1
0x41 PUSH4 0x16c27c4a
0x46 EQ
0x47 PUSH2 0xc9
0x4a JUMPI
---
0x41: V15 = 0x16c27c4a
0x46: V16 = EQ 0x16c27c4a V11
0x47: V17 = 0xc9
0x4a: JUMPI 0xc9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xe8]
---
0x4b DUP1
0x4c PUSH4 0x6af1fdf7
0x51 EQ
0x52 PUSH2 0xe8
0x55 JUMPI
---
0x4c: V18 = 0x6af1fdf7
0x51: V19 = EQ 0x6af1fdf7 V11
0x52: V20 = 0xe8
0x55: JUMPI 0xe8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x118]
---
0x56 DUP1
0x57 PUSH4 0x85aa92a7
0x5c EQ
0x5d PUSH2 0x118
0x60 JUMPI
---
0x57: V21 = 0x85aa92a7
0x5c: V22 = EQ 0x85aa92a7 V11
0x5d: V23 = 0x118
0x60: JUMPI 0x118 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x147]
---
0x61 DUP1
0x62 PUSH4 0x8d859f3e
0x67 EQ
0x68 PUSH2 0x147
0x6b JUMPI
---
0x62: V24 = 0x8d859f3e
0x67: V25 = EQ 0x8d859f3e V11
0x68: V26 = 0x147
0x6b: JUMPI 0x147 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x175]
---
0x6c DUP1
0x6d PUSH4 0xa69df4b5
0x72 EQ
0x73 PUSH2 0x175
0x76 JUMPI
---
0x6d: V27 = 0xa69df4b5
0x72: V28 = EQ 0xa69df4b5 V11
0x73: V29 = 0x175
0x76: JUMPI 0x175 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x188]
---
0x77 DUP1
0x78 PUSH4 0xcf309012
0x7d EQ
0x7e PUSH2 0x188
0x81 JUMPI
---
0x78: V30 = 0xcf309012
0x7d: V31 = EQ 0xcf309012 V11
0x7e: V32 = 0x188
0x81: JUMPI 0x188 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1af]
---
0x82 DUP1
0x83 PUSH4 0xf53d0a8e
0x88 EQ
0x89 PUSH2 0x1af
0x8c JUMPI
---
0x83: V33 = 0xf53d0a8e
0x88: V34 = EQ 0xf53d0a8e V11
0x89: V35 = 0x1af
0x8c: JUMPI 0x1af V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1c2]
---
0x8d DUP1
0x8e PUSH4 0xf83d08ba
0x93 EQ
0x94 PUSH2 0x1c2
0x97 JUMPI
---
0x8e: V36 = 0xf83d08ba
0x93: V37 = EQ 0xf83d08ba V11
0x94: V38 = 0x1c2
0x97: JUMPI 0x1c2 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x1d5]
---
0x98 DUP1
0x99 PUSH4 0xfc0c546a
0x9e EQ
0x9f PUSH2 0x1d5
0xa2 JUMPI
---
0x99: V39 = 0xfc0c546a
0x9e: V40 = EQ 0xfc0c546a V11
0x9f: V41 = 0x1d5
0xa2: JUMPI 0x1d5 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xa7]
---
Predecessors: [0x0, 0x98]
Successors: []
---
0xa3 JUMPDEST
0xa4 PUSH1 0x0
0xa6 DUP1
0xa7 REVERT
---
0xa3: JUMPDEST 
0xa4: V42 = 0x0
0xa7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xae]
---
Predecessors: [0xd]
Successors: [0xaf, 0xb3]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa ISZERO
0xab PUSH2 0xb3
0xae JUMPI
---
0xa8: JUMPDEST 
0xa9: V43 = CALLVALUE
0xaa: V44 = ISZERO V43
0xab: V45 = 0xb3
0xae: JUMPI 0xb3 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb2]
---
Predecessors: [0xa8]
Successors: []
---
0xaf PUSH1 0x0
0xb1 DUP1
0xb2 REVERT
---
0xaf: V46 = 0x0
0xb2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb3
[0xb3:0xc6]
---
Predecessors: [0xa8]
Successors: [0x1e8]
---
0xb3 JUMPDEST
0xb4 PUSH2 0xc7
0xb7 PUSH1 0x1
0xb9 PUSH1 0xa0
0xbb PUSH1 0x2
0xbd EXP
0xbe SUB
0xbf PUSH1 0x4
0xc1 CALLDATALOAD
0xc2 AND
0xc3 PUSH2 0x1e8
0xc6 JUMP
---
0xb3: JUMPDEST 
0xb4: V47 = 0xc7
0xb7: V48 = 0x1
0xb9: V49 = 0xa0
0xbb: V50 = 0x2
0xbd: V51 = EXP 0x2 0xa0
0xbe: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf: V53 = 0x4
0xc1: V54 = CALLDATALOAD 0x4
0xc2: V55 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0xc3: V56 = 0x1e8
0xc6: JUMP 0x1e8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc7, V55]
Exit stack: [V11, 0xc7, V55]

================================

Block 0xc7
[0xc7:0xc8]
---
Predecessors: [0x203, 0x263, 0x3d3, 0x40b, 0x476]
Successors: []
---
0xc7 JUMPDEST
0xc8 STOP
---
0xc7: JUMPDEST 
0xc8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc9
[0xc9:0xcf]
---
Predecessors: [0x40]
Successors: [0xd0, 0xd4]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xc9: JUMPDEST 
0xca: V57 = CALLVALUE
0xcb: V58 = ISZERO V57
0xcc: V59 = 0xd4
0xcf: JUMPI 0xd4 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xc9]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V60 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd4
[0xd4:0xe7]
---
Predecessors: [0xc9]
Successors: [0x232]
---
0xd4 JUMPDEST
0xd5 PUSH2 0xc7
0xd8 PUSH1 0x1
0xda PUSH1 0xa0
0xdc PUSH1 0x2
0xde EXP
0xdf SUB
0xe0 PUSH1 0x4
0xe2 CALLDATALOAD
0xe3 AND
0xe4 PUSH2 0x232
0xe7 JUMP
---
0xd4: JUMPDEST 
0xd5: V61 = 0xc7
0xd8: V62 = 0x1
0xda: V63 = 0xa0
0xdc: V64 = 0x2
0xde: V65 = EXP 0x2 0xa0
0xdf: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe0: V67 = 0x4
0xe2: V68 = CALLDATALOAD 0x4
0xe3: V69 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V70 = 0x232
0xe7: JUMP 0x232
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc7, V69]
Exit stack: [V11, 0xc7, V69]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0x4b]
Successors: [0xef, 0xf3]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V71 = CALLVALUE
0xea: V72 = ISZERO V71
0xeb: V73 = 0xf3
0xee: JUMPI 0xf3 V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xe8]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V74 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf3
[0xf3:0x117]
---
Predecessors: [0xe8]
Successors: [0x266]
---
0xf3 JUMPDEST
0xf4 PUSH2 0xc7
0xf7 PUSH1 0x1
0xf9 PUSH1 0xa0
0xfb PUSH1 0x2
0xfd EXP
0xfe SUB
0xff PUSH1 0x4
0x101 CALLDATALOAD
0x102 AND
0x103 PUSH12 0xffffffffffffffffffffffff
0x110 PUSH1 0x24
0x112 CALLDATALOAD
0x113 AND
0x114 PUSH2 0x266
0x117 JUMP
---
0xf3: JUMPDEST 
0xf4: V75 = 0xc7
0xf7: V76 = 0x1
0xf9: V77 = 0xa0
0xfb: V78 = 0x2
0xfd: V79 = EXP 0x2 0xa0
0xfe: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff: V81 = 0x4
0x101: V82 = CALLDATALOAD 0x4
0x102: V83 = AND V82 0xffffffffffffffffffffffffffffffffffffffff
0x103: V84 = 0xffffffffffffffffffffffff
0x110: V85 = 0x24
0x112: V86 = CALLDATALOAD 0x24
0x113: V87 = AND V86 0xffffffffffffffffffffffff
0x114: V88 = 0x266
0x117: JUMP 0x266
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc7, V83, V87]
Exit stack: [V11, 0xc7, V83, V87]

================================

Block 0x118
[0x118:0x11e]
---
Predecessors: [0x56]
Successors: [0x11f, 0x123]
---
0x118 JUMPDEST
0x119 CALLVALUE
0x11a ISZERO
0x11b PUSH2 0x123
0x11e JUMPI
---
0x118: JUMPDEST 
0x119: V89 = CALLVALUE
0x11a: V90 = ISZERO V89
0x11b: V91 = 0x123
0x11e: JUMPI 0x123 V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11f
[0x11f:0x122]
---
Predecessors: [0x118]
Successors: []
---
0x11f PUSH1 0x0
0x121 DUP1
0x122 REVERT
---
0x11f: V92 = 0x0
0x122: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x118]
Successors: [0x3d7]
---
0x123 JUMPDEST
0x124 PUSH2 0x12b
0x127 PUSH2 0x3d7
0x12a JUMP
---
0x123: JUMPDEST 
0x124: V93 = 0x12b
0x127: V94 = 0x3d7
0x12a: JUMP 0x3d7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12b]
Exit stack: [V11, 0x12b]

================================

Block 0x12b
[0x12b:0x146]
---
Predecessors: [0x3d7, 0x44c, 0x4ad]
Successors: []
---
0x12b JUMPDEST
0x12c PUSH1 0x40
0x12e MLOAD
0x12f PUSH1 0x1
0x131 PUSH1 0xa0
0x133 PUSH1 0x2
0x135 EXP
0x136 SUB
0x137 SWAP1
0x138 SWAP2
0x139 AND
0x13a DUP2
0x13b MSTORE
0x13c PUSH1 0x20
0x13e ADD
0x13f PUSH1 0x40
0x141 MLOAD
0x142 DUP1
0x143 SWAP2
0x144 SUB
0x145 SWAP1
0x146 RETURN
---
0x12b: JUMPDEST 
0x12c: V95 = 0x40
0x12e: V96 = M[0x40]
0x12f: V97 = 0x1
0x131: V98 = 0xa0
0x133: V99 = 0x2
0x135: V100 = EXP 0x2 0xa0
0x136: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V102 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x13b: M[V96] = V102
0x13c: V103 = 0x20
0x13e: V104 = ADD 0x20 V96
0x13f: V105 = 0x40
0x141: V106 = M[0x40]
0x144: V107 = SUB V104 V106
0x146: RETURN V106 V107
---
Entry stack: [V11, 0x12b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x12b]

================================

Block 0x147
[0x147:0x14d]
---
Predecessors: [0x61]
Successors: [0x14e, 0x152]
---
0x147 JUMPDEST
0x148 CALLVALUE
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0x147: JUMPDEST 
0x148: V108 = CALLVALUE
0x149: V109 = ISZERO V108
0x14a: V110 = 0x152
0x14d: JUMPI 0x152 V109
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x147]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V111 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x152
[0x152:0x159]
---
Predecessors: [0x147]
Successors: [0x3e6]
---
0x152 JUMPDEST
0x153 PUSH2 0x15a
0x156 PUSH2 0x3e6
0x159 JUMP
---
0x152: JUMPDEST 
0x153: V112 = 0x15a
0x156: V113 = 0x3e6
0x159: JUMP 0x3e6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15a]
Exit stack: [V11, 0x15a]

================================

Block 0x15a
[0x15a:0x174]
---
Predecessors: [0x3e6]
Successors: []
---
0x15a JUMPDEST
0x15b PUSH1 0x40
0x15d MLOAD
0x15e PUSH6 0xffffffffffff
0x165 SWAP1
0x166 SWAP2
0x167 AND
0x168 DUP2
0x169 MSTORE
0x16a PUSH1 0x20
0x16c ADD
0x16d PUSH1 0x40
0x16f MLOAD
0x170 DUP1
0x171 SWAP2
0x172 SUB
0x173 SWAP1
0x174 RETURN
---
0x15a: JUMPDEST 
0x15b: V114 = 0x40
0x15d: V115 = M[0x40]
0x15e: V116 = 0xffffffffffff
0x167: V117 = AND 0x47d99eeff000 0xffffffffffff
0x169: M[V115] = 0x47d99eeff000
0x16a: V118 = 0x20
0x16c: V119 = ADD 0x20 V115
0x16d: V120 = 0x40
0x16f: V121 = M[0x40]
0x172: V122 = SUB V119 V121
0x174: RETURN V121 V122
---
Entry stack: [V11, 0x15a, 0x47d99eeff000]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x15a]

================================

Block 0x175
[0x175:0x17b]
---
Predecessors: [0x6c]
Successors: [0x17c, 0x180]
---
0x175 JUMPDEST
0x176 CALLVALUE
0x177 ISZERO
0x178 PUSH2 0x180
0x17b JUMPI
---
0x175: JUMPDEST 
0x176: V123 = CALLVALUE
0x177: V124 = ISZERO V123
0x178: V125 = 0x180
0x17b: JUMPI 0x180 V124
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17c
[0x17c:0x17f]
---
Predecessors: [0x175]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f REVERT
---
0x17c: V126 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x180
[0x180:0x187]
---
Predecessors: [0x175]
Successors: [0x3f0]
---
0x180 JUMPDEST
0x181 PUSH2 0xc7
0x184 PUSH2 0x3f0
0x187 JUMP
---
0x180: JUMPDEST 
0x181: V127 = 0xc7
0x184: V128 = 0x3f0
0x187: JUMP 0x3f0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc7]
Exit stack: [V11, 0xc7]

================================

Block 0x188
[0x188:0x18e]
---
Predecessors: [0x77]
Successors: [0x18f, 0x193]
---
0x188 JUMPDEST
0x189 CALLVALUE
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x188: JUMPDEST 
0x189: V129 = CALLVALUE
0x18a: V130 = ISZERO V129
0x18b: V131 = 0x193
0x18e: JUMPI 0x193 V130
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x188]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V132 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x193
[0x193:0x19a]
---
Predecessors: [0x188]
Successors: [0x42b]
---
0x193 JUMPDEST
0x194 PUSH2 0x19b
0x197 PUSH2 0x42b
0x19a JUMP
---
0x193: JUMPDEST 
0x194: V133 = 0x19b
0x197: V134 = 0x42b
0x19a: JUMP 0x42b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x19b]
Exit stack: [V11, 0x19b]

================================

Block 0x19b
[0x19b:0x1ae]
---
Predecessors: [0x42b]
Successors: []
---
0x19b JUMPDEST
0x19c PUSH1 0x40
0x19e MLOAD
0x19f SWAP1
0x1a0 ISZERO
0x1a1 ISZERO
0x1a2 DUP2
0x1a3 MSTORE
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 PUSH1 0x40
0x1a9 MLOAD
0x1aa DUP1
0x1ab SWAP2
0x1ac SUB
0x1ad SWAP1
0x1ae RETURN
---
0x19b: JUMPDEST 
0x19c: V135 = 0x40
0x19e: V136 = M[0x40]
0x1a0: V137 = ISZERO V348
0x1a1: V138 = ISZERO V137
0x1a3: M[V136] = V138
0x1a4: V139 = 0x20
0x1a6: V140 = ADD 0x20 V136
0x1a7: V141 = 0x40
0x1a9: V142 = M[0x40]
0x1ac: V143 = SUB V140 V142
0x1ae: RETURN V142 V143
---
Entry stack: [V11, 0x19b, V348]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x19b]

================================

Block 0x1af
[0x1af:0x1b5]
---
Predecessors: [0x82]
Successors: [0x1b6, 0x1ba]
---
0x1af JUMPDEST
0x1b0 CALLVALUE
0x1b1 ISZERO
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x1af: JUMPDEST 
0x1b0: V144 = CALLVALUE
0x1b1: V145 = ISZERO V144
0x1b2: V146 = 0x1ba
0x1b5: JUMPI 0x1ba V145
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x1af]
Successors: []
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 REVERT
---
0x1b6: V147 = 0x0
0x1b9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ba
[0x1ba:0x1c1]
---
Predecessors: [0x1af]
Successors: [0x44c]
---
0x1ba JUMPDEST
0x1bb PUSH2 0x12b
0x1be PUSH2 0x44c
0x1c1 JUMP
---
0x1ba: JUMPDEST 
0x1bb: V148 = 0x12b
0x1be: V149 = 0x44c
0x1c1: JUMP 0x44c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12b]
Exit stack: [V11, 0x12b]

================================

Block 0x1c2
[0x1c2:0x1c8]
---
Predecessors: [0x8d]
Successors: [0x1c9, 0x1cd]
---
0x1c2 JUMPDEST
0x1c3 CALLVALUE
0x1c4 ISZERO
0x1c5 PUSH2 0x1cd
0x1c8 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V150 = CALLVALUE
0x1c4: V151 = ISZERO V150
0x1c5: V152 = 0x1cd
0x1c8: JUMPI 0x1cd V151
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c9
[0x1c9:0x1cc]
---
Predecessors: [0x1c2]
Successors: []
---
0x1c9 PUSH1 0x0
0x1cb DUP1
0x1cc REVERT
---
0x1c9: V153 = 0x0
0x1cc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cd
[0x1cd:0x1d4]
---
Predecessors: [0x1c2]
Successors: [0x45b]
---
0x1cd JUMPDEST
0x1ce PUSH2 0xc7
0x1d1 PUSH2 0x45b
0x1d4 JUMP
---
0x1cd: JUMPDEST 
0x1ce: V154 = 0xc7
0x1d1: V155 = 0x45b
0x1d4: JUMP 0x45b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc7]
Exit stack: [V11, 0xc7]

================================

Block 0x1d5
[0x1d5:0x1db]
---
Predecessors: [0x98]
Successors: [0x1dc, 0x1e0]
---
0x1d5 JUMPDEST
0x1d6 CALLVALUE
0x1d7 ISZERO
0x1d8 PUSH2 0x1e0
0x1db JUMPI
---
0x1d5: JUMPDEST 
0x1d6: V156 = CALLVALUE
0x1d7: V157 = ISZERO V156
0x1d8: V158 = 0x1e0
0x1db: JUMPI 0x1e0 V157
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x1d5]
Successors: []
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df REVERT
---
0x1dc: V159 = 0x0
0x1df: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e0
[0x1e0:0x1e7]
---
Predecessors: [0x1d5]
Successors: [0x4ad]
---
0x1e0 JUMPDEST
0x1e1 PUSH2 0x12b
0x1e4 PUSH2 0x4ad
0x1e7 JUMP
---
0x1e0: JUMPDEST 
0x1e1: V160 = 0x12b
0x1e4: V161 = 0x4ad
0x1e7: JUMP 0x4ad
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12b]
Exit stack: [V11, 0x12b]

================================

Block 0x1e8
[0x1e8:0x1fe]
---
Predecessors: [0xb3]
Successors: [0x1ff, 0x203]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x0
0x1eb SLOAD
0x1ec ORIGIN
0x1ed PUSH1 0x1
0x1ef PUSH1 0xa0
0x1f1 PUSH1 0x2
0x1f3 EXP
0x1f4 SUB
0x1f5 SWAP1
0x1f6 DUP2
0x1f7 AND
0x1f8 SWAP2
0x1f9 AND
0x1fa EQ
0x1fb PUSH2 0x203
0x1fe JUMPI
---
0x1e8: JUMPDEST 
0x1e9: V162 = 0x0
0x1eb: V163 = S[0x0]
0x1ec: V164 = ORIGIN
0x1ed: V165 = 0x1
0x1ef: V166 = 0xa0
0x1f1: V167 = 0x2
0x1f3: V168 = EXP 0x2 0xa0
0x1f4: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f7: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1f9: V171 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V172 = EQ V171 V170
0x1fb: V173 = 0x203
0x1fe: JUMPI 0x203 V172
---
Entry stack: [V11, 0xc7, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V55]

================================

Block 0x1ff
[0x1ff:0x202]
---
Predecessors: [0x1e8]
Successors: []
---
0x1ff PUSH1 0x0
0x201 DUP1
0x202 REVERT
---
0x1ff: V174 = 0x0
0x202: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc7, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V55]

================================

Block 0x203
[0x203:0x231]
---
Predecessors: [0x1e8]
Successors: [0xc7]
---
0x203 JUMPDEST
0x204 PUSH1 0x1
0x206 DUP1
0x207 SLOAD
0x208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21d NOT
0x21e AND
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 SWAP3
0x228 SWAP1
0x229 SWAP3
0x22a AND
0x22b SWAP2
0x22c SWAP1
0x22d SWAP2
0x22e OR
0x22f SWAP1
0x230 SSTORE
0x231 JUMP
---
0x203: JUMPDEST 
0x204: V175 = 0x1
0x207: V176 = S[0x1]
0x208: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V178 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x21e: V179 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V176
0x21f: V180 = 0x1
0x221: V181 = 0xa0
0x223: V182 = 0x2
0x225: V183 = EXP 0x2 0xa0
0x226: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22a: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x22e: V186 = OR V185 V179
0x230: S[0x1] = V186
0x231: JUMP 0xc7
---
Entry stack: [V11, 0xc7, V55]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x232
[0x232:0x262]
---
Predecessors: [0xd4]
Successors: [0x4bc]
---
0x232 JUMPDEST
0x233 PUSH1 0x1
0x235 DUP1
0x236 SLOAD
0x237 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24c NOT
0x24d AND
0x24e PUSH1 0x1
0x250 PUSH1 0xa0
0x252 PUSH1 0x2
0x254 EXP
0x255 SUB
0x256 DUP4
0x257 AND
0x258 OR
0x259 SWAP1
0x25a SSTORE
0x25b PUSH2 0x263
0x25e ORIGIN
0x25f PUSH2 0x4bc
0x262 JUMP
---
0x232: JUMPDEST 
0x233: V187 = 0x1
0x236: V188 = S[0x1]
0x237: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V190 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V191 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V188
0x24e: V192 = 0x1
0x250: V193 = 0xa0
0x252: V194 = 0x2
0x254: V195 = EXP 0x2 0xa0
0x255: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x257: V197 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0x258: V198 = OR V197 V191
0x25a: S[0x1] = V198
0x25b: V199 = 0x263
0x25e: V200 = ORIGIN
0x25f: V201 = 0x4bc
0x262: JUMP 0x4bc
---
Entry stack: [V11, 0xc7, V69]
Stack pops: 1
Stack additions: [S0, 0x263, V200]
Exit stack: [V11, 0xc7, V69, 0x263, V200]

================================

Block 0x263
[0x263:0x265]
---
Predecessors: [0x4bc]
Successors: [0xc7]
---
0x263 JUMPDEST
0x264 POP
0x265 JUMP
---
0x263: JUMPDEST 
0x265: JUMP 0xc7
---
Entry stack: [V11, 0xc7, V69]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x266
[0x266:0x27c]
---
Predecessors: [0xf3]
Successors: [0x27d, 0x281]
---
0x266 JUMPDEST
0x267 PUSH1 0x0
0x269 SLOAD
0x26a ORIGIN
0x26b PUSH1 0x1
0x26d PUSH1 0xa0
0x26f PUSH1 0x2
0x271 EXP
0x272 SUB
0x273 SWAP1
0x274 DUP2
0x275 AND
0x276 SWAP2
0x277 AND
0x278 EQ
0x279 PUSH2 0x281
0x27c JUMPI
---
0x266: JUMPDEST 
0x267: V202 = 0x0
0x269: V203 = S[0x0]
0x26a: V204 = ORIGIN
0x26b: V205 = 0x1
0x26d: V206 = 0xa0
0x26f: V207 = 0x2
0x271: V208 = EXP 0x2 0xa0
0x272: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x277: V211 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x278: V212 = EQ V211 V210
0x279: V213 = 0x281
0x27c: JUMPI 0x281 V212
---
Entry stack: [V11, 0xc7, V83, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V83, V87]

================================

Block 0x27d
[0x27d:0x280]
---
Predecessors: [0x266]
Successors: []
---
0x27d PUSH1 0x0
0x27f DUP1
0x280 REVERT
---
0x27d: V214 = 0x0
0x280: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc7, V83, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V83, V87]

================================

Block 0x281
[0x281:0x2a4]
---
Predecessors: [0x266]
Successors: [0x2a5, 0x2a9]
---
0x281 JUMPDEST
0x282 PUSH1 0x1
0x284 SLOAD
0x285 PUSH21 0x10000000000000000000000000000000000000000
0x29b SWAP1
0x29c DIV
0x29d PUSH1 0xff
0x29f AND
0x2a0 ISZERO
0x2a1 PUSH2 0x2a9
0x2a4 JUMPI
---
0x281: JUMPDEST 
0x282: V215 = 0x1
0x284: V216 = S[0x1]
0x285: V217 = 0x10000000000000000000000000000000000000000
0x29c: V218 = DIV V216 0x10000000000000000000000000000000000000000
0x29d: V219 = 0xff
0x29f: V220 = AND 0xff V218
0x2a0: V221 = ISZERO V220
0x2a1: V222 = 0x2a9
0x2a4: JUMPI 0x2a9 V221
---
Entry stack: [V11, 0xc7, V83, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V83, V87]

================================

Block 0x2a5
[0x2a5:0x2a8]
---
Predecessors: [0x281]
Successors: []
---
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 REVERT
---
0x2a5: V223 = 0x0
0x2a8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc7, V83, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V83, V87]

================================

Block 0x2a9
[0x2a9:0x381]
---
Predecessors: [0x281]
Successors: [0x382, 0x386]
---
0x2a9 JUMPDEST
0x2aa DUP2
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 AND
0x2b4 PUSH32 0x344ee6c5fe6c842eaf3ef066d7c0e9a96c80ef54f2a138593c1f655a1f85c973
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 DUP5
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc SWAP3
0x2dd DUP4
0x2de MSTORE
0x2df PUSH1 0x20
0x2e1 DUP4
0x2e2 ADD
0x2e3 SWAP2
0x2e4 SWAP1
0x2e5 SWAP2
0x2e6 MSTORE
0x2e7 PUSH12 0xffffffffffffffffffffffff
0x2f4 AND
0x2f5 PUSH1 0x40
0x2f7 DUP1
0x2f8 DUP4
0x2f9 ADD
0x2fa SWAP2
0x2fb SWAP1
0x2fc SWAP2
0x2fd MSTORE
0x2fe PUSH1 0x60
0x300 SWAP1
0x301 SWAP2
0x302 ADD
0x303 SWAP1
0x304 MLOAD
0x305 DUP1
0x306 SWAP2
0x307 SUB
0x308 SWAP1
0x309 LOG2
0x30a PUSH1 0x1
0x30c SLOAD
0x30d PUSH1 0x1
0x30f PUSH1 0xa0
0x311 PUSH1 0x2
0x313 EXP
0x314 SUB
0x315 AND
0x316 PUSH4 0x6af1fdf7
0x31b DUP4
0x31c DUP4
0x31d PUSH1 0x40
0x31f MLOAD
0x320 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x33e PUSH4 0xffffffff
0x343 DUP6
0x344 AND
0x345 MUL
0x346 DUP2
0x347 MSTORE
0x348 PUSH1 0x1
0x34a PUSH1 0xa0
0x34c PUSH1 0x2
0x34e EXP
0x34f SUB
0x350 SWAP1
0x351 SWAP3
0x352 AND
0x353 PUSH1 0x4
0x355 DUP4
0x356 ADD
0x357 MSTORE
0x358 PUSH12 0xffffffffffffffffffffffff
0x365 AND
0x366 PUSH1 0x24
0x368 DUP3
0x369 ADD
0x36a MSTORE
0x36b PUSH1 0x44
0x36d ADD
0x36e PUSH1 0x0
0x370 PUSH1 0x40
0x372 MLOAD
0x373 DUP1
0x374 DUP4
0x375 SUB
0x376 DUP2
0x377 PUSH1 0x0
0x379 DUP8
0x37a DUP1
0x37b EXTCODESIZE
0x37c ISZERO
0x37d ISZERO
0x37e PUSH2 0x386
0x381 JUMPI
---
0x2a9: JUMPDEST 
0x2ab: V224 = 0x1
0x2ad: V225 = 0xa0
0x2af: V226 = 0x2
0x2b1: V227 = EXP 0x2 0xa0
0x2b2: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x2b4: V230 = 0x344ee6c5fe6c842eaf3ef066d7c0e9a96c80ef54f2a138593c1f655a1f85c973
0x2d5: V231 = 0x0
0x2d9: V232 = 0x40
0x2db: V233 = M[0x40]
0x2de: M[V233] = 0x0
0x2df: V234 = 0x20
0x2e2: V235 = ADD V233 0x20
0x2e6: M[V235] = 0x0
0x2e7: V236 = 0xffffffffffffffffffffffff
0x2f4: V237 = AND 0xffffffffffffffffffffffff V87
0x2f5: V238 = 0x40
0x2f9: V239 = ADD V233 0x40
0x2fd: M[V239] = V237
0x2fe: V240 = 0x60
0x302: V241 = ADD V233 0x60
0x304: V242 = M[0x40]
0x307: V243 = SUB V241 V242
0x309: LOG V242 V243 0x344ee6c5fe6c842eaf3ef066d7c0e9a96c80ef54f2a138593c1f655a1f85c973 V229
0x30a: V244 = 0x1
0x30c: V245 = S[0x1]
0x30d: V246 = 0x1
0x30f: V247 = 0xa0
0x311: V248 = 0x2
0x313: V249 = EXP 0x2 0xa0
0x314: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x315: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x316: V252 = 0x6af1fdf7
0x31d: V253 = 0x40
0x31f: V254 = M[0x40]
0x320: V255 = 0x100000000000000000000000000000000000000000000000000000000
0x33e: V256 = 0xffffffff
0x344: V257 = AND 0x6af1fdf7 0xffffffff
0x345: V258 = MUL 0x6af1fdf7 0x100000000000000000000000000000000000000000000000000000000
0x347: M[V254] = 0x6af1fdf700000000000000000000000000000000000000000000000000000000
0x348: V259 = 0x1
0x34a: V260 = 0xa0
0x34c: V261 = 0x2
0x34e: V262 = EXP 0x2 0xa0
0x34f: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x352: V264 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0x353: V265 = 0x4
0x356: V266 = ADD V254 0x4
0x357: M[V266] = V264
0x358: V267 = 0xffffffffffffffffffffffff
0x365: V268 = AND 0xffffffffffffffffffffffff V87
0x366: V269 = 0x24
0x369: V270 = ADD V254 0x24
0x36a: M[V270] = V268
0x36b: V271 = 0x44
0x36d: V272 = ADD 0x44 V254
0x36e: V273 = 0x0
0x370: V274 = 0x40
0x372: V275 = M[0x40]
0x375: V276 = SUB V272 V275
0x377: V277 = 0x0
0x37b: V278 = EXTCODESIZE V251
0x37c: V279 = ISZERO V278
0x37d: V280 = ISZERO V279
0x37e: V281 = 0x386
0x381: JUMPI 0x386 V280
---
Entry stack: [V11, 0xc7, V83, V87]
Stack pops: 2
Stack additions: [S1, S0, V251, 0x6af1fdf7, V272, 0x0, V275, V276, V275, 0x0, V251]
Exit stack: [V11, 0xc7, V83, V87, V251, 0x6af1fdf7, V272, 0x0, V275, V276, V275, 0x0, V251]

================================

Block 0x382
[0x382:0x385]
---
Predecessors: [0x2a9]
Successors: []
---
0x382 PUSH1 0x0
0x384 DUP1
0x385 REVERT
---
0x382: V282 = 0x0
0x385: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc7, V83, V87, V251, 0x6af1fdf7, V272, 0x0, V275, V276, V275, 0x0, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V83, V87, V251, 0x6af1fdf7, V272, 0x0, V275, V276, V275, 0x0, V251]

================================

Block 0x386
[0x386:0x392]
---
Predecessors: [0x2a9]
Successors: [0x393, 0x397]
---
0x386 JUMPDEST
0x387 PUSH2 0x2c6
0x38a GAS
0x38b SUB
0x38c CALL
0x38d ISZERO
0x38e ISZERO
0x38f PUSH2 0x397
0x392 JUMPI
---
0x386: JUMPDEST 
0x387: V283 = 0x2c6
0x38a: V284 = GAS
0x38b: V285 = SUB V284 0x2c6
0x38c: V286 = CALL V285 V251 0x0 V275 V276 V275 0x0
0x38d: V287 = ISZERO V286
0x38e: V288 = ISZERO V287
0x38f: V289 = 0x397
0x392: JUMPI 0x397 V288
---
Entry stack: [V11, 0xc7, V83, V87, V251, 0x6af1fdf7, V272, 0x0, V275, V276, V275, 0x0, V251]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xc7, V83, V87, V251, 0x6af1fdf7, V272]

================================

Block 0x393
[0x393:0x396]
---
Predecessors: [0x386]
Successors: []
---
0x393 PUSH1 0x0
0x395 DUP1
0x396 REVERT
---
0x393: V290 = 0x0
0x396: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc7, V83, V87, V251, 0x6af1fdf7, V272]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V83, V87, V251, 0x6af1fdf7, V272]

================================

Block 0x397
[0x397:0x3ce]
---
Predecessors: [0x386]
Successors: [0x3cf, 0x3d3]
---
0x397 JUMPDEST
0x398 POP
0x399 POP
0x39a PUSH1 0x2
0x39c SLOAD
0x39d PUSH1 0x1
0x39f PUSH1 0xa0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 SUB
0x3a5 SWAP1
0x3a6 DUP2
0x3a7 AND
0x3a8 SWAP2
0x3a9 POP
0x3aa ADDRESS
0x3ab AND
0x3ac BALANCE
0x3ad DUP1
0x3ae ISZERO
0x3af PUSH2 0x8fc
0x3b2 MUL
0x3b3 SWAP1
0x3b4 PUSH1 0x40
0x3b6 MLOAD
0x3b7 PUSH1 0x0
0x3b9 PUSH1 0x40
0x3bb MLOAD
0x3bc DUP1
0x3bd DUP4
0x3be SUB
0x3bf DUP2
0x3c0 DUP6
0x3c1 DUP9
0x3c2 DUP9
0x3c3 CALL
0x3c4 SWAP4
0x3c5 POP
0x3c6 POP
0x3c7 POP
0x3c8 POP
0x3c9 ISZERO
0x3ca ISZERO
0x3cb PUSH2 0x3d3
0x3ce JUMPI
---
0x397: JUMPDEST 
0x39a: V291 = 0x2
0x39c: V292 = S[0x2]
0x39d: V293 = 0x1
0x39f: V294 = 0xa0
0x3a1: V295 = 0x2
0x3a3: V296 = EXP 0x2 0xa0
0x3a4: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x3aa: V299 = ADDRESS
0x3ab: V300 = AND V299 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V301 = BALANCE V300
0x3ae: V302 = ISZERO V301
0x3af: V303 = 0x8fc
0x3b2: V304 = MUL 0x8fc V302
0x3b4: V305 = 0x40
0x3b6: V306 = M[0x40]
0x3b7: V307 = 0x0
0x3b9: V308 = 0x40
0x3bb: V309 = M[0x40]
0x3be: V310 = SUB V306 V309
0x3c3: V311 = CALL V304 V298 V301 V309 V310 V309 0x0
0x3c9: V312 = ISZERO V311
0x3ca: V313 = ISZERO V312
0x3cb: V314 = 0x3d3
0x3ce: JUMPI 0x3d3 V313
---
Entry stack: [V11, 0xc7, V83, V87, V251, 0x6af1fdf7, V272]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xc7, V83, V87]

================================

Block 0x3cf
[0x3cf:0x3d2]
---
Predecessors: [0x397]
Successors: []
---
0x3cf PUSH1 0x0
0x3d1 DUP1
0x3d2 REVERT
---
0x3cf: V315 = 0x0
0x3d2: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc7, V83, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7, V83, V87]

================================

Block 0x3d3
[0x3d3:0x3d6]
---
Predecessors: [0x397]
Successors: [0xc7]
---
0x3d3 JUMPDEST
0x3d4 POP
0x3d5 POP
0x3d6 JUMP
---
0x3d3: JUMPDEST 
0x3d6: JUMP 0xc7
---
Entry stack: [V11, 0xc7, V83, V87]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x3d7
[0x3d7:0x3e5]
---
Predecessors: [0x123]
Successors: [0x12b]
---
0x3d7 JUMPDEST
0x3d8 PUSH1 0x2
0x3da SLOAD
0x3db PUSH1 0x1
0x3dd PUSH1 0xa0
0x3df PUSH1 0x2
0x3e1 EXP
0x3e2 SUB
0x3e3 AND
0x3e4 DUP2
0x3e5 JUMP
---
0x3d7: JUMPDEST 
0x3d8: V316 = 0x2
0x3da: V317 = S[0x2]
0x3db: V318 = 0x1
0x3dd: V319 = 0xa0
0x3df: V320 = 0x2
0x3e1: V321 = EXP 0x2 0xa0
0x3e2: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e3: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x3e5: JUMP 0x12b
---
Entry stack: [V11, 0x12b]
Stack pops: 1
Stack additions: [S0, V323]
Exit stack: [V11, 0x12b, V323]

================================

Block 0x3e6
[0x3e6:0x3ef]
---
Predecessors: [0x152]
Successors: [0x15a]
---
0x3e6 JUMPDEST
0x3e7 PUSH6 0x47d99eeff000
0x3ee DUP2
0x3ef JUMP
---
0x3e6: JUMPDEST 
0x3e7: V324 = 0x47d99eeff000
0x3ef: JUMP 0x15a
---
Entry stack: [V11, 0x15a]
Stack pops: 1
Stack additions: [S0, 0x47d99eeff000]
Exit stack: [V11, 0x15a, 0x47d99eeff000]

================================

Block 0x3f0
[0x3f0:0x406]
---
Predecessors: [0x180]
Successors: [0x407, 0x40b]
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x0
0x3f3 SLOAD
0x3f4 ORIGIN
0x3f5 PUSH1 0x1
0x3f7 PUSH1 0xa0
0x3f9 PUSH1 0x2
0x3fb EXP
0x3fc SUB
0x3fd SWAP1
0x3fe DUP2
0x3ff AND
0x400 SWAP2
0x401 AND
0x402 EQ
0x403 PUSH2 0x40b
0x406 JUMPI
---
0x3f0: JUMPDEST 
0x3f1: V325 = 0x0
0x3f3: V326 = S[0x0]
0x3f4: V327 = ORIGIN
0x3f5: V328 = 0x1
0x3f7: V329 = 0xa0
0x3f9: V330 = 0x2
0x3fb: V331 = EXP 0x2 0xa0
0x3fc: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ff: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x401: V334 = AND V326 0xffffffffffffffffffffffffffffffffffffffff
0x402: V335 = EQ V334 V333
0x403: V336 = 0x40b
0x406: JUMPI 0x40b V335
---
Entry stack: [V11, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7]

================================

Block 0x407
[0x407:0x40a]
---
Predecessors: [0x3f0]
Successors: []
---
0x407 PUSH1 0x0
0x409 DUP1
0x40a REVERT
---
0x407: V337 = 0x0
0x40a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7]

================================

Block 0x40b
[0x40b:0x42a]
---
Predecessors: [0x3f0]
Successors: [0xc7]
---
0x40b JUMPDEST
0x40c PUSH1 0x1
0x40e DUP1
0x40f SLOAD
0x410 PUSH21 0xff0000000000000000000000000000000000000000
0x426 NOT
0x427 AND
0x428 SWAP1
0x429 SSTORE
0x42a JUMP
---
0x40b: JUMPDEST 
0x40c: V338 = 0x1
0x40f: V339 = S[0x1]
0x410: V340 = 0xff0000000000000000000000000000000000000000
0x426: V341 = NOT 0xff0000000000000000000000000000000000000000
0x427: V342 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V339
0x429: S[0x1] = V342
0x42a: JUMP 0xc7
---
Entry stack: [V11, 0xc7]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x42b
[0x42b:0x44b]
---
Predecessors: [0x193]
Successors: [0x19b]
---
0x42b JUMPDEST
0x42c PUSH1 0x1
0x42e SLOAD
0x42f PUSH21 0x10000000000000000000000000000000000000000
0x445 SWAP1
0x446 DIV
0x447 PUSH1 0xff
0x449 AND
0x44a DUP2
0x44b JUMP
---
0x42b: JUMPDEST 
0x42c: V343 = 0x1
0x42e: V344 = S[0x1]
0x42f: V345 = 0x10000000000000000000000000000000000000000
0x446: V346 = DIV V344 0x10000000000000000000000000000000000000000
0x447: V347 = 0xff
0x449: V348 = AND 0xff V346
0x44b: JUMP 0x19b
---
Entry stack: [V11, 0x19b]
Stack pops: 1
Stack additions: [S0, V348]
Exit stack: [V11, 0x19b, V348]

================================

Block 0x44c
[0x44c:0x45a]
---
Predecessors: [0x1ba]
Successors: [0x12b]
---
0x44c JUMPDEST
0x44d PUSH1 0x0
0x44f SLOAD
0x450 PUSH1 0x1
0x452 PUSH1 0xa0
0x454 PUSH1 0x2
0x456 EXP
0x457 SUB
0x458 AND
0x459 DUP2
0x45a JUMP
---
0x44c: JUMPDEST 
0x44d: V349 = 0x0
0x44f: V350 = S[0x0]
0x450: V351 = 0x1
0x452: V352 = 0xa0
0x454: V353 = 0x2
0x456: V354 = EXP 0x2 0xa0
0x457: V355 = SUB 0x10000000000000000000000000000000000000000 0x1
0x458: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x45a: JUMP 0x12b
---
Entry stack: [V11, 0x12b]
Stack pops: 1
Stack additions: [S0, V356]
Exit stack: [V11, 0x12b, V356]

================================

Block 0x45b
[0x45b:0x471]
---
Predecessors: [0x1cd]
Successors: [0x472, 0x476]
---
0x45b JUMPDEST
0x45c PUSH1 0x0
0x45e SLOAD
0x45f ORIGIN
0x460 PUSH1 0x1
0x462 PUSH1 0xa0
0x464 PUSH1 0x2
0x466 EXP
0x467 SUB
0x468 SWAP1
0x469 DUP2
0x46a AND
0x46b SWAP2
0x46c AND
0x46d EQ
0x46e PUSH2 0x476
0x471 JUMPI
---
0x45b: JUMPDEST 
0x45c: V357 = 0x0
0x45e: V358 = S[0x0]
0x45f: V359 = ORIGIN
0x460: V360 = 0x1
0x462: V361 = 0xa0
0x464: V362 = 0x2
0x466: V363 = EXP 0x2 0xa0
0x467: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46a: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x46c: V366 = AND V358 0xffffffffffffffffffffffffffffffffffffffff
0x46d: V367 = EQ V366 V365
0x46e: V368 = 0x476
0x471: JUMPI 0x476 V367
---
Entry stack: [V11, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7]

================================

Block 0x472
[0x472:0x475]
---
Predecessors: [0x45b]
Successors: []
---
0x472 PUSH1 0x0
0x474 DUP1
0x475 REVERT
---
0x472: V369 = 0x0
0x475: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc7]

================================

Block 0x476
[0x476:0x4ac]
---
Predecessors: [0x45b]
Successors: [0xc7]
---
0x476 JUMPDEST
0x477 PUSH1 0x1
0x479 DUP1
0x47a SLOAD
0x47b PUSH21 0xff0000000000000000000000000000000000000000
0x491 NOT
0x492 AND
0x493 PUSH21 0x10000000000000000000000000000000000000000
0x4a9 OR
0x4aa SWAP1
0x4ab SSTORE
0x4ac JUMP
---
0x476: JUMPDEST 
0x477: V370 = 0x1
0x47a: V371 = S[0x1]
0x47b: V372 = 0xff0000000000000000000000000000000000000000
0x491: V373 = NOT 0xff0000000000000000000000000000000000000000
0x492: V374 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V371
0x493: V375 = 0x10000000000000000000000000000000000000000
0x4a9: V376 = OR 0x10000000000000000000000000000000000000000 V374
0x4ab: S[0x1] = V376
0x4ac: JUMP 0xc7
---
Entry stack: [V11, 0xc7]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ad
[0x4ad:0x4bb]
---
Predecessors: [0x1e0]
Successors: [0x12b]
---
0x4ad JUMPDEST
0x4ae PUSH1 0x1
0x4b0 SLOAD
0x4b1 PUSH1 0x1
0x4b3 PUSH1 0xa0
0x4b5 PUSH1 0x2
0x4b7 EXP
0x4b8 SUB
0x4b9 AND
0x4ba DUP2
0x4bb JUMP
---
0x4ad: JUMPDEST 
0x4ae: V377 = 0x1
0x4b0: V378 = S[0x1]
0x4b1: V379 = 0x1
0x4b3: V380 = 0xa0
0x4b5: V381 = 0x2
0x4b7: V382 = EXP 0x2 0xa0
0x4b8: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b9: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x4bb: JUMP 0x12b
---
Entry stack: [V11, 0x12b]
Stack pops: 1
Stack additions: [S0, V384]
Exit stack: [V11, 0x12b, V384]

================================

Block 0x4bc
[0x4bc:0x4ea]
---
Predecessors: [0x232]
Successors: [0x263]
---
0x4bc JUMPDEST
0x4bd PUSH1 0x0
0x4bf DUP1
0x4c0 SLOAD
0x4c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d6 NOT
0x4d7 AND
0x4d8 PUSH1 0x1
0x4da PUSH1 0xa0
0x4dc PUSH1 0x2
0x4de EXP
0x4df SUB
0x4e0 SWAP3
0x4e1 SWAP1
0x4e2 SWAP3
0x4e3 AND
0x4e4 SWAP2
0x4e5 SWAP1
0x4e6 SWAP2
0x4e7 OR
0x4e8 SWAP1
0x4e9 SSTORE
0x4ea JUMP
---
0x4bc: JUMPDEST 
0x4bd: V385 = 0x0
0x4c0: V386 = S[0x0]
0x4c1: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d6: V388 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4d7: V389 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V386
0x4d8: V390 = 0x1
0x4da: V391 = 0xa0
0x4dc: V392 = 0x2
0x4de: V393 = EXP 0x2 0xa0
0x4df: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e3: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x4e7: V396 = OR V395 V389
0x4e9: S[0x0] = V396
0x4ea: JUMP 0x263
---
Entry stack: [V11, 0xc7, V69, 0x263, V200]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xc7, V69]

================================

Block 0x4eb
[0x4eb:0x526]
---
Predecessors: []
Successors: []
---
0x4eb STOP
0x4ec LOG1
0x4ed PUSH6 0x627a7a723058
0x4f4 SHA3
0x4f5 DUP11
0x4f6 CREATE
0x4f7 MISSING 0x21
0x4f8 MISSING 0xda
0x4f9 DUP6
0x4fa MISSING 0xe6
0x4fb MISSING 0x2c
0x4fc MISSING 0xba
0x4fd MISSING 0x22
0x4fe MISSING 0x5d
0x4ff MISSING 0xe6
0x500 MISSING 0xbc
0x501 MISSING 0xdb
0x502 MISSING 0xf8
0x503 MISSING 0xb5
0x504 INVALID
0x505 SWAP15
0x506 SWAP5
0x507 PUSH31 0x23fe1600b0eba51b1ac513ca390029
---
0x4eb: STOP 
0x4ec: LOG S0 S1 S2
0x4ed: V397 = 0x627a7a723058
0x4f4: V398 = SHA3 0x627a7a723058 S3
0x4f6: V399 = CREATE S13 V398 S4
0x4f7: MISSING 0x21
0x4f8: MISSING 0xda
0x4fa: MISSING 0xe6
0x4fb: MISSING 0x2c
0x4fc: MISSING 0xba
0x4fd: MISSING 0x22
0x4fe: MISSING 0x5d
0x4ff: MISSING 0xe6
0x500: MISSING 0xbc
0x501: MISSING 0xdb
0x502: MISSING 0xf8
0x503: MISSING 0xb5
0x504: INVALID 
0x507: V400 = 0x23fe1600b0eba51b1ac513ca390029
---
Entry stack: []
Stack pops: 0
Stack additions: [V399, S5, S6, S7, S8, S9, S10, S11, S12, S13, S5, S0, S1, S2, S3, S4, S5, 0x23fe1600b0eba51b1ac513ca390029, S5, S1, S2, S3, S4, S15, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x144fa6d7
Entry block: 0xa8
Exit block: 0xc7
Body: 0xa8, 0xaf, 0xb3, 0xc7, 0x1e8, 0x1ff, 0x203

Function 1:
Public function signature: 0x16c27c4a
Entry block: 0xc9
Exit block: 0xc7
Body: 0xc7, 0xc9, 0xd0, 0xd4, 0x232, 0x263, 0x4bc

Function 2:
Public function signature: 0x6af1fdf7
Entry block: 0xe8
Exit block: 0xc7
Body: 0xc7, 0xe8, 0xef, 0xf3, 0x266, 0x27d, 0x281, 0x2a5, 0x2a9, 0x382, 0x386, 0x393, 0x397, 0x3cf, 0x3d3

Function 3:
Public function signature: 0x85aa92a7
Entry block: 0x118
Exit block: 0x12b
Body: 0x118, 0x11f, 0x123, 0x12b, 0x3d7

Function 4:
Public function signature: 0x8d859f3e
Entry block: 0x147
Exit block: 0x15a
Body: 0x147, 0x14e, 0x152, 0x15a, 0x3e6

Function 5:
Public function signature: 0xa69df4b5
Entry block: 0x175
Exit block: 0xc7
Body: 0xc7, 0x175, 0x17c, 0x180, 0x3f0, 0x407, 0x40b

Function 6:
Public function signature: 0xcf309012
Entry block: 0x188
Exit block: 0x19b
Body: 0x188, 0x18f, 0x193, 0x19b, 0x42b

Function 7:
Public function signature: 0xf53d0a8e
Entry block: 0x1af
Exit block: 0x12b
Body: 0x12b, 0x1af, 0x1b6, 0x1ba, 0x44c

Function 8:
Public function signature: 0xf83d08ba
Entry block: 0x1c2
Exit block: 0xc7
Body: 0xc7, 0x1c2, 0x1c9, 0x1cd, 0x45b, 0x472, 0x476

Function 9:
Public function signature: 0xfc0c546a
Entry block: 0x1d5
Exit block: 0x12b
Body: 0x12b, 0x1d5, 0x1dc, 0x1e0, 0x4ad

Function 10:
Public fallback function
Entry block: 0xa3
Exit block: 0xa3
Body: 0xa3

