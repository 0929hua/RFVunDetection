Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3853682c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3853682c
0x3b: V13 = EQ V11 0x3853682c
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8c]
---
0x40 DUP1
0x41 PUSH4 0x3e3ee859
0x46 EQ
0x47 PUSH2 0x8c
0x4a JUMPI
---
0x41: V15 = 0x3e3ee859
0x46: V16 = EQ 0x3e3ee859 V11
0x47: V17 = 0x8c
0x4a: JUMPI 0x8c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xda]
---
0x4b DUP1
0x4c PUSH4 0x3fad9ae0
0x51 EQ
0x52 PUSH2 0xda
0x55 JUMPI
---
0x4c: V18 = 0x3fad9ae0
0x51: V19 = EQ 0x3fad9ae0 V11
0x52: V20 = 0xda
0x55: JUMPI 0xda V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x164]
---
0x56 DUP1
0x57 PUSH4 0x59988dce
0x5c EQ
0x5d PUSH2 0x164
0x60 JUMPI
---
0x57: V21 = 0x59988dce
0x5c: V22 = EQ 0x59988dce V11
0x5d: V23 = 0x164
0x60: JUMPI 0x164 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x192]
---
0x61 DUP1
0x62 PUSH4 0xb96d64fb
0x67 EQ
0x68 PUSH2 0x192
0x6b JUMPI
---
0x62: V24 = 0xb96d64fb
0x67: V25 = EQ 0xb96d64fb V11
0x68: V26 = 0x192
0x6b: JUMPI 0x192 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x21c]
---
0x6c DUP1
0x6d PUSH4 0xf50ab247
0x72 EQ
0x73 PUSH2 0x21c
0x76 JUMPI
---
0x6d: V27 = 0xf50ab247
0x72: V28 = EQ 0xf50ab247 V11
0x73: V29 = 0x21c
0x76: JUMPI 0x21c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x2ff, 0x33a, 0x3f3, 0x50c, 0x581, 0x5fe]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]

================================

Block 0x79
[0x79:0x8b]
---
Predecessors: [0xd]
Successors: [0x224]
---
0x79 JUMPDEST
0x7a PUSH2 0x77
0x7d PUSH1 0x4
0x7f DUP1
0x80 CALLDATALOAD
0x81 PUSH1 0x24
0x83 DUP2
0x84 ADD
0x85 SWAP2
0x86 ADD
0x87 CALLDATALOAD
0x88 PUSH2 0x224
0x8b JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x77
0x7d: V31 = 0x4
0x80: V32 = CALLDATALOAD 0x4
0x81: V33 = 0x24
0x84: V34 = ADD V32 0x24
0x86: V35 = ADD 0x4 V32
0x87: V36 = CALLDATALOAD V35
0x88: V37 = 0x224
0x8b: JUMP 0x224
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V34, V36]
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x8c
[0x8c:0xd9]
---
Predecessors: [0x40]
Successors: [0x303]
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f DUP1
0x90 MLOAD
0x91 PUSH1 0x20
0x93 PUSH1 0x4
0x95 DUP1
0x96 CALLDATALOAD
0x97 DUP1
0x98 DUP3
0x99 ADD
0x9a CALLDATALOAD
0x9b PUSH1 0x1f
0x9d DUP2
0x9e ADD
0x9f DUP5
0xa0 SWAP1
0xa1 DIV
0xa2 DUP5
0xa3 MUL
0xa4 DUP6
0xa5 ADD
0xa6 DUP5
0xa7 ADD
0xa8 SWAP1
0xa9 SWAP6
0xaa MSTORE
0xab DUP5
0xac DUP5
0xad MSTORE
0xae PUSH2 0x77
0xb1 SWAP5
0xb2 CALLDATASIZE
0xb3 SWAP5
0xb4 SWAP3
0xb5 SWAP4
0xb6 PUSH1 0x24
0xb8 SWAP4
0xb9 SWAP3
0xba DUP5
0xbb ADD
0xbc SWAP2
0xbd SWAP1
0xbe DUP2
0xbf SWAP1
0xc0 DUP5
0xc1 ADD
0xc2 DUP4
0xc3 DUP3
0xc4 DUP1
0xc5 DUP3
0xc6 DUP5
0xc7 CALLDATACOPY
0xc8 POP
0xc9 SWAP5
0xca SWAP8
0xcb POP
0xcc POP
0xcd SWAP4
0xce CALLDATALOAD
0xcf SWAP5
0xd0 POP
0xd1 PUSH2 0x303
0xd4 SWAP4
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 POP
0xd9 JUMP
---
0x8c: JUMPDEST 
0x8d: V38 = 0x40
0x90: V39 = M[0x40]
0x91: V40 = 0x20
0x93: V41 = 0x4
0x96: V42 = CALLDATALOAD 0x4
0x99: V43 = ADD 0x4 V42
0x9a: V44 = CALLDATALOAD V43
0x9b: V45 = 0x1f
0x9e: V46 = ADD V44 0x1f
0xa1: V47 = DIV V46 0x20
0xa3: V48 = MUL 0x20 V47
0xa5: V49 = ADD V39 V48
0xa7: V50 = ADD 0x20 V49
0xaa: M[0x40] = V50
0xad: M[V39] = V44
0xae: V51 = 0x77
0xb2: V52 = CALLDATASIZE
0xb6: V53 = 0x24
0xbb: V54 = ADD 0x24 V42
0xc1: V55 = ADD V39 0x20
0xc7: CALLDATACOPY V55 V54 V44
0xce: V56 = CALLDATALOAD 0x24
0xd1: V57 = 0x303
0xd9: JUMP 0x303
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V39, V56]
Exit stack: [V11, 0x77, V39, V56]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0x4b]
Successors: [0xe2, 0xe6]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc DUP1
0xdd ISZERO
0xde PUSH2 0xe6
0xe1 JUMPI
---
0xda: JUMPDEST 
0xdb: V58 = CALLVALUE
0xdd: V59 = ISZERO V58
0xde: V60 = 0xe6
0xe1: JUMPI 0xe6 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xe2
[0xe2:0xe5]
---
Predecessors: [0xda]
Successors: []
---
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe2: V61 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xe6
[0xe6:0xee]
---
Predecessors: [0xda]
Successors: [0x341]
---
0xe6 JUMPDEST
0xe7 POP
0xe8 PUSH2 0xef
0xeb PUSH2 0x341
0xee JUMP
---
0xe6: JUMPDEST 
0xe8: V62 = 0xef
0xeb: V63 = 0x341
0xee: JUMP 0x341
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xef]
Exit stack: [V11, 0xef]

================================

Block 0xef
[0xef:0x110]
---
Predecessors: [0x3c7]
Successors: [0x111]
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 DUP1
0xf3 MLOAD
0xf4 PUSH1 0x20
0xf6 DUP1
0xf7 DUP3
0xf8 MSTORE
0xf9 DUP4
0xfa MLOAD
0xfb DUP2
0xfc DUP4
0xfd ADD
0xfe MSTORE
0xff DUP4
0x100 MLOAD
0x101 SWAP2
0x102 SWAP3
0x103 DUP4
0x104 SWAP3
0x105 SWAP1
0x106 DUP4
0x107 ADD
0x108 SWAP2
0x109 DUP6
0x10a ADD
0x10b SWAP1
0x10c DUP1
0x10d DUP4
0x10e DUP4
0x10f PUSH1 0x0
---
0xef: JUMPDEST 
0xf0: V64 = 0x40
0xf3: V65 = M[0x40]
0xf4: V66 = 0x20
0xf8: M[V65] = 0x20
0xfa: V67 = M[V243]
0xfd: V68 = ADD V65 0x20
0xfe: M[V68] = V67
0x100: V69 = M[V243]
0x107: V70 = ADD V65 0x40
0x10a: V71 = ADD V243 0x20
0x10f: V72 = 0x0
---
Entry stack: [V11, 0xef, V243]
Stack pops: 1
Stack additions: [S0, V65, V65, V70, V71, V69, V69, V70, V71, 0x0]
Exit stack: [V11, 0xef, V243, V65, V65, V70, V71, V69, V69, V70, V71, 0x0]

================================

Block 0x111
[0x111:0x119]
---
Predecessors: [0xef, 0x11a]
Successors: [0x11a, 0x129]
---
0x111 JUMPDEST
0x112 DUP4
0x113 DUP2
0x114 LT
0x115 ISZERO
0x116 PUSH2 0x129
0x119 JUMPI
---
0x111: JUMPDEST 
0x114: V73 = LT S0 V69
0x115: V74 = ISZERO V73
0x116: V75 = 0x129
0x119: JUMPI 0x129 V74
---
Entry stack: [V11, 0xef, V243, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xef, V243, V65, V65, V70, V71, V69, V69, V70, V71, S0]

================================

Block 0x11a
[0x11a:0x128]
---
Predecessors: [0x111]
Successors: [0x111]
---
0x11a DUP2
0x11b DUP2
0x11c ADD
0x11d MLOAD
0x11e DUP4
0x11f DUP3
0x120 ADD
0x121 MSTORE
0x122 PUSH1 0x20
0x124 ADD
0x125 PUSH2 0x111
0x128 JUMP
---
0x11c: V76 = ADD S0 V71
0x11d: V77 = M[V76]
0x120: V78 = ADD S0 V70
0x121: M[V78] = V77
0x122: V79 = 0x20
0x124: V80 = ADD 0x20 S0
0x125: V81 = 0x111
0x128: JUMP 0x111
---
Entry stack: [V11, 0xef, V243, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 3
Stack additions: [S2, S1, V80]
Exit stack: [V11, 0xef, V243, V65, V65, V70, V71, V69, V69, V70, V71, V80]

================================

Block 0x129
[0x129:0x13c]
---
Predecessors: [0x111]
Successors: [0x13d, 0x156]
---
0x129 JUMPDEST
0x12a POP
0x12b POP
0x12c POP
0x12d POP
0x12e SWAP1
0x12f POP
0x130 SWAP1
0x131 DUP2
0x132 ADD
0x133 SWAP1
0x134 PUSH1 0x1f
0x136 AND
0x137 DUP1
0x138 ISZERO
0x139 PUSH2 0x156
0x13c JUMPI
---
0x129: JUMPDEST 
0x132: V82 = ADD V69 V70
0x134: V83 = 0x1f
0x136: V84 = AND 0x1f V69
0x138: V85 = ISZERO V84
0x139: V86 = 0x156
0x13c: JUMPI 0x156 V85
---
Entry stack: [V11, 0xef, V243, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 7
Stack additions: [V82, V84]
Exit stack: [V11, 0xef, V243, V65, V65, V82, V84]

================================

Block 0x13d
[0x13d:0x155]
---
Predecessors: [0x129]
Successors: [0x156]
---
0x13d DUP1
0x13e DUP3
0x13f SUB
0x140 DUP1
0x141 MLOAD
0x142 PUSH1 0x1
0x144 DUP4
0x145 PUSH1 0x20
0x147 SUB
0x148 PUSH2 0x100
0x14b EXP
0x14c SUB
0x14d NOT
0x14e AND
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP2
0x155 POP
---
0x13f: V87 = SUB V82 V84
0x141: V88 = M[V87]
0x142: V89 = 0x1
0x145: V90 = 0x20
0x147: V91 = SUB 0x20 V84
0x148: V92 = 0x100
0x14b: V93 = EXP 0x100 V91
0x14c: V94 = SUB V93 0x1
0x14d: V95 = NOT V94
0x14e: V96 = AND V95 V88
0x150: M[V87] = V96
0x151: V97 = 0x20
0x153: V98 = ADD 0x20 V87
---
Entry stack: [V11, 0xef, V243, V65, V65, V82, V84]
Stack pops: 2
Stack additions: [V98, S0]
Exit stack: [V11, 0xef, V243, V65, V65, V98, V84]

================================

Block 0x156
[0x156:0x163]
---
Predecessors: [0x129, 0x13d]
Successors: []
---
0x156 JUMPDEST
0x157 POP
0x158 SWAP3
0x159 POP
0x15a POP
0x15b POP
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 SWAP2
0x161 SUB
0x162 SWAP1
0x163 RETURN
---
0x156: JUMPDEST 
0x15c: V99 = 0x40
0x15e: V100 = M[0x40]
0x161: V101 = SUB S1 V100
0x163: RETURN V100 V101
---
Entry stack: [V11, 0xef, V243, V65, V65, S1, V84]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xef]

================================

Block 0x164
[0x164:0x16b]
---
Predecessors: [0x56]
Successors: [0x16c, 0x170]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 DUP1
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x164: JUMPDEST 
0x165: V102 = CALLVALUE
0x167: V103 = ISZERO V102
0x168: V104 = 0x170
0x16b: JUMPI 0x170 V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V11, V102]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x164]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V105 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V11, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V102]

================================

Block 0x170
[0x170:0x191]
---
Predecessors: [0x164]
Successors: [0x3cf]
---
0x170 JUMPDEST
0x171 POP
0x172 PUSH2 0x77
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a PUSH1 0x4
0x18c CALLDATALOAD
0x18d AND
0x18e PUSH2 0x3cf
0x191 JUMP
---
0x170: JUMPDEST 
0x172: V106 = 0x77
0x175: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V108 = 0x4
0x18c: V109 = CALLDATALOAD 0x4
0x18d: V110 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V111 = 0x3cf
0x191: JUMP 0x3cf
---
Entry stack: [V11, V102]
Stack pops: 1
Stack additions: [0x77, V110]
Exit stack: [V11, 0x77, V110]

================================

Block 0x192
[0x192:0x21b]
---
Predecessors: [0x61]
Successors: [0x42f]
---
0x192 JUMPDEST
0x193 PUSH1 0x40
0x195 DUP1
0x196 MLOAD
0x197 PUSH1 0x20
0x199 PUSH1 0x4
0x19b DUP1
0x19c CALLDATALOAD
0x19d DUP1
0x19e DUP3
0x19f ADD
0x1a0 CALLDATALOAD
0x1a1 PUSH1 0x1f
0x1a3 DUP2
0x1a4 ADD
0x1a5 DUP5
0x1a6 SWAP1
0x1a7 DIV
0x1a8 DUP5
0x1a9 MUL
0x1aa DUP6
0x1ab ADD
0x1ac DUP5
0x1ad ADD
0x1ae SWAP1
0x1af SWAP6
0x1b0 MSTORE
0x1b1 DUP5
0x1b2 DUP5
0x1b3 MSTORE
0x1b4 PUSH2 0x77
0x1b7 SWAP5
0x1b8 CALLDATASIZE
0x1b9 SWAP5
0x1ba SWAP3
0x1bb SWAP4
0x1bc PUSH1 0x24
0x1be SWAP4
0x1bf SWAP3
0x1c0 DUP5
0x1c1 ADD
0x1c2 SWAP2
0x1c3 SWAP1
0x1c4 DUP2
0x1c5 SWAP1
0x1c6 DUP5
0x1c7 ADD
0x1c8 DUP4
0x1c9 DUP3
0x1ca DUP1
0x1cb DUP3
0x1cc DUP5
0x1cd CALLDATACOPY
0x1ce POP
0x1cf POP
0x1d0 PUSH1 0x40
0x1d2 DUP1
0x1d3 MLOAD
0x1d4 PUSH1 0x20
0x1d6 PUSH1 0x1f
0x1d8 DUP10
0x1d9 CALLDATALOAD
0x1da DUP12
0x1db ADD
0x1dc DUP1
0x1dd CALLDATALOAD
0x1de SWAP2
0x1df DUP3
0x1e0 ADD
0x1e1 DUP4
0x1e2 SWAP1
0x1e3 DIV
0x1e4 DUP4
0x1e5 MUL
0x1e6 DUP5
0x1e7 ADD
0x1e8 DUP4
0x1e9 ADD
0x1ea SWAP1
0x1eb SWAP5
0x1ec MSTORE
0x1ed DUP1
0x1ee DUP4
0x1ef MSTORE
0x1f0 SWAP8
0x1f1 SWAP11
0x1f2 SWAP10
0x1f3 SWAP9
0x1f4 DUP2
0x1f5 ADD
0x1f6 SWAP8
0x1f7 SWAP2
0x1f8 SWAP7
0x1f9 POP
0x1fa SWAP2
0x1fb DUP3
0x1fc ADD
0x1fd SWAP5
0x1fe POP
0x1ff SWAP3
0x200 POP
0x201 DUP3
0x202 SWAP2
0x203 POP
0x204 DUP5
0x205 ADD
0x206 DUP4
0x207 DUP3
0x208 DUP1
0x209 DUP3
0x20a DUP5
0x20b CALLDATACOPY
0x20c POP
0x20d SWAP5
0x20e SWAP8
0x20f POP
0x210 PUSH2 0x42f
0x213 SWAP7
0x214 POP
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 POP
0x21a POP
0x21b JUMP
---
0x192: JUMPDEST 
0x193: V112 = 0x40
0x196: V113 = M[0x40]
0x197: V114 = 0x20
0x199: V115 = 0x4
0x19c: V116 = CALLDATALOAD 0x4
0x19f: V117 = ADD 0x4 V116
0x1a0: V118 = CALLDATALOAD V117
0x1a1: V119 = 0x1f
0x1a4: V120 = ADD V118 0x1f
0x1a7: V121 = DIV V120 0x20
0x1a9: V122 = MUL 0x20 V121
0x1ab: V123 = ADD V113 V122
0x1ad: V124 = ADD 0x20 V123
0x1b0: M[0x40] = V124
0x1b3: M[V113] = V118
0x1b4: V125 = 0x77
0x1b8: V126 = CALLDATASIZE
0x1bc: V127 = 0x24
0x1c1: V128 = ADD 0x24 V116
0x1c7: V129 = ADD V113 0x20
0x1cd: CALLDATACOPY V129 V128 V118
0x1d0: V130 = 0x40
0x1d3: V131 = M[0x40]
0x1d4: V132 = 0x20
0x1d6: V133 = 0x1f
0x1d9: V134 = CALLDATALOAD 0x24
0x1db: V135 = ADD 0x4 V134
0x1dd: V136 = CALLDATALOAD V135
0x1e0: V137 = ADD V136 0x1f
0x1e3: V138 = DIV V137 0x20
0x1e5: V139 = MUL 0x20 V138
0x1e7: V140 = ADD V131 V139
0x1e9: V141 = ADD 0x20 V140
0x1ec: M[0x40] = V141
0x1ef: M[V131] = V136
0x1f5: V142 = ADD 0x20 0x24
0x1fc: V143 = ADD 0x20 V135
0x205: V144 = ADD V131 0x20
0x20b: CALLDATACOPY V144 V143 V136
0x210: V145 = 0x42f
0x21b: JUMP 0x42f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V113, V131]
Exit stack: [V11, 0x77, V113, V131]

================================

Block 0x21c
[0x21c:0x223]
---
Predecessors: [0x6c]
Successors: [0x530]
---
0x21c JUMPDEST
0x21d PUSH2 0x77
0x220 PUSH2 0x530
0x223 JUMP
---
0x21c: JUMPDEST 
0x21d: V146 = 0x77
0x220: V147 = 0x530
0x223: JUMP 0x530
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x224
[0x224:0x22b]
---
Predecessors: [0x79]
Successors: [0x22c, 0x230]
---
0x224 JUMPDEST
0x225 CALLER
0x226 ORIGIN
0x227 EQ
0x228 PUSH2 0x230
0x22b JUMPI
---
0x224: JUMPDEST 
0x225: V148 = CALLER
0x226: V149 = ORIGIN
0x227: V150 = EQ V149 V148
0x228: V151 = 0x230
0x22b: JUMPI 0x230 V150
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x224]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V152 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x230
[0x230:0x266]
---
Predecessors: [0x224]
Successors: [0x267]
---
0x230 JUMPDEST
0x231 DUP2
0x232 DUP2
0x233 PUSH1 0x40
0x235 MLOAD
0x236 PUSH1 0x20
0x238 ADD
0x239 DUP1
0x23a DUP4
0x23b DUP4
0x23c DUP1
0x23d DUP3
0x23e DUP5
0x23f CALLDATACOPY
0x240 DUP3
0x241 ADD
0x242 SWAP2
0x243 POP
0x244 POP
0x245 SWAP3
0x246 POP
0x247 POP
0x248 POP
0x249 PUSH1 0x40
0x24b MLOAD
0x24c PUSH1 0x20
0x24e DUP2
0x24f DUP4
0x250 SUB
0x251 SUB
0x252 DUP2
0x253 MSTORE
0x254 SWAP1
0x255 PUSH1 0x40
0x257 MSTORE
0x258 PUSH1 0x40
0x25a MLOAD
0x25b DUP1
0x25c DUP3
0x25d DUP1
0x25e MLOAD
0x25f SWAP1
0x260 PUSH1 0x20
0x262 ADD
0x263 SWAP1
0x264 DUP1
0x265 DUP4
0x266 DUP4
---
0x230: JUMPDEST 
0x233: V153 = 0x40
0x235: V154 = M[0x40]
0x236: V155 = 0x20
0x238: V156 = ADD 0x20 V154
0x23f: CALLDATACOPY V156 V34 V36
0x241: V157 = ADD V156 V36
0x249: V158 = 0x40
0x24b: V159 = M[0x40]
0x24c: V160 = 0x20
0x250: V161 = SUB V157 V159
0x251: V162 = SUB V161 0x20
0x253: M[V159] = V162
0x255: V163 = 0x40
0x257: M[0x40] = V157
0x258: V164 = 0x40
0x25a: V165 = M[0x40]
0x25e: V166 = M[V159]
0x260: V167 = 0x20
0x262: V168 = ADD 0x20 V159
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 2
Stack additions: [S1, S0, V159, V165, V165, V168, V166, V166, V165, V168]
Exit stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, V166, V165, V168]

================================

Block 0x267
[0x267:0x26f]
---
Predecessors: [0x230, 0x270]
Successors: [0x270, 0x286]
---
0x267 JUMPDEST
0x268 PUSH1 0x20
0x26a DUP4
0x26b LT
0x26c PUSH2 0x286
0x26f JUMPI
---
0x267: JUMPDEST 
0x268: V169 = 0x20
0x26b: V170 = LT S2 0x20
0x26c: V171 = 0x286
0x26f: JUMPI 0x286 V170
---
Entry stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, S2, S1, S0]

================================

Block 0x270
[0x270:0x285]
---
Predecessors: [0x267]
Successors: [0x267]
---
0x270 DUP1
0x271 MLOAD
0x272 DUP3
0x273 MSTORE
0x274 PUSH1 0x1f
0x276 NOT
0x277 SWAP1
0x278 SWAP3
0x279 ADD
0x27a SWAP2
0x27b PUSH1 0x20
0x27d SWAP2
0x27e DUP3
0x27f ADD
0x280 SWAP2
0x281 ADD
0x282 PUSH2 0x267
0x285 JUMP
---
0x271: V172 = M[S0]
0x273: M[S1] = V172
0x274: V173 = 0x1f
0x276: V174 = NOT 0x1f
0x279: V175 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x27b: V176 = 0x20
0x27f: V177 = ADD 0x20 S1
0x281: V178 = ADD 0x20 S0
0x282: V179 = 0x267
0x285: JUMP 0x267
---
Entry stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, S2, S1, S0]
Stack pops: 3
Stack additions: [V175, V177, V178]
Exit stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, V175, V177, V178]

================================

Block 0x286
[0x286:0x2be]
---
Predecessors: [0x267]
Successors: [0x2bf, 0x2cb]
---
0x286 JUMPDEST
0x287 MLOAD
0x288 DUP2
0x289 MLOAD
0x28a PUSH1 0x20
0x28c SWAP4
0x28d SWAP1
0x28e SWAP4
0x28f SUB
0x290 PUSH2 0x100
0x293 EXP
0x294 PUSH1 0x0
0x296 NOT
0x297 ADD
0x298 DUP1
0x299 NOT
0x29a SWAP1
0x29b SWAP2
0x29c AND
0x29d SWAP3
0x29e AND
0x29f SWAP2
0x2a0 SWAP1
0x2a1 SWAP2
0x2a2 OR
0x2a3 SWAP1
0x2a4 MSTORE
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 SWAP3
0x2a9 ADD
0x2aa DUP3
0x2ab SWAP1
0x2ac SUB
0x2ad SWAP1
0x2ae SWAP2
0x2af SHA3
0x2b0 PUSH1 0x2
0x2b2 SLOAD
0x2b3 EQ
0x2b4 SWAP3
0x2b5 POP
0x2b6 POP
0x2b7 DUP2
0x2b8 ISZERO
0x2b9 SWAP1
0x2ba POP
0x2bb PUSH2 0x2cb
0x2be JUMPI
---
0x286: JUMPDEST 
0x287: V180 = M[S0]
0x289: V181 = M[S1]
0x28a: V182 = 0x20
0x28f: V183 = SUB 0x20 S2
0x290: V184 = 0x100
0x293: V185 = EXP 0x100 V183
0x294: V186 = 0x0
0x296: V187 = NOT 0x0
0x297: V188 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V185
0x299: V189 = NOT V188
0x29c: V190 = AND V180 V189
0x29e: V191 = AND V181 V188
0x2a2: V192 = OR V191 V190
0x2a4: M[S1] = V192
0x2a5: V193 = 0x40
0x2a7: V194 = M[0x40]
0x2a9: V195 = ADD V165 V166
0x2ac: V196 = SUB V195 V194
0x2af: V197 = SHA3 V194 V196
0x2b0: V198 = 0x2
0x2b2: V199 = S[0x2]
0x2b3: V200 = EQ V199 V197
0x2b8: V201 = ISZERO V200
0x2bb: V202 = 0x2cb
0x2be: JUMPI 0x2cb V201
---
Entry stack: [V11, 0x77, V34, V36, V159, V165, V165, V168, V166, S2, S1, S0]
Stack pops: 8
Stack additions: [V200]
Exit stack: [V11, 0x77, V34, V36, V200]

================================

Block 0x2bf
[0x2bf:0x2ca]
---
Predecessors: [0x286]
Successors: [0x2cb]
---
0x2bf POP
0x2c0 PUSH8 0xde0b6b3a7640000
0x2c9 CALLVALUE
0x2ca GT
---
0x2c0: V203 = 0xde0b6b3a7640000
0x2c9: V204 = CALLVALUE
0x2ca: V205 = GT V204 0xde0b6b3a7640000
---
Entry stack: [V11, 0x77, V34, V36, V200]
Stack pops: 1
Stack additions: [V205]
Exit stack: [V11, 0x77, V34, V36, V205]

================================

Block 0x2cb
[0x2cb:0x2d0]
---
Predecessors: [0x286, 0x2bf]
Successors: [0x2d1, 0x2ff]
---
0x2cb JUMPDEST
0x2cc ISZERO
0x2cd PUSH2 0x2ff
0x2d0 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V206 = ISZERO S0
0x2cd: V207 = 0x2ff
0x2d0: JUMPI 0x2ff V206
---
Entry stack: [V11, 0x77, V34, V36, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x2d1
[0x2d1:0x2f3]
---
Predecessors: [0x2cb]
Successors: [0x2f4, 0x2fd]
---
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 CALLER
0x2d5 SWAP1
0x2d6 ADDRESS
0x2d7 BALANCE
0x2d8 DUP1
0x2d9 ISZERO
0x2da PUSH2 0x8fc
0x2dd MUL
0x2de SWAP2
0x2df PUSH1 0x0
0x2e1 DUP2
0x2e2 DUP2
0x2e3 DUP2
0x2e4 DUP6
0x2e5 DUP9
0x2e6 DUP9
0x2e7 CALL
0x2e8 SWAP4
0x2e9 POP
0x2ea POP
0x2eb POP
0x2ec POP
0x2ed ISZERO
0x2ee DUP1
0x2ef ISZERO
0x2f0 PUSH2 0x2fd
0x2f3 JUMPI
---
0x2d1: V208 = 0x40
0x2d3: V209 = M[0x40]
0x2d4: V210 = CALLER
0x2d6: V211 = ADDRESS
0x2d7: V212 = BALANCE V211
0x2d9: V213 = ISZERO V212
0x2da: V214 = 0x8fc
0x2dd: V215 = MUL 0x8fc V213
0x2df: V216 = 0x0
0x2e7: V217 = CALL V215 V210 V212 V209 0x0 V209 0x0
0x2ed: V218 = ISZERO V217
0x2ef: V219 = ISZERO V218
0x2f0: V220 = 0x2fd
0x2f3: JUMPI 0x2fd V219
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: [V218]
Exit stack: [V11, 0x77, V34, V36, V218]

================================

Block 0x2f4
[0x2f4:0x2fc]
---
Predecessors: [0x2d1]
Successors: []
---
0x2f4 RETURNDATASIZE
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 RETURNDATACOPY
0x2f9 RETURNDATASIZE
0x2fa PUSH1 0x0
0x2fc REVERT
---
0x2f4: V221 = RETURNDATASIZE
0x2f5: V222 = 0x0
0x2f8: RETURNDATACOPY 0x0 0x0 V221
0x2f9: V223 = RETURNDATASIZE
0x2fa: V224 = 0x0
0x2fc: REVERT 0x0 V223
---
Entry stack: [V11, 0x77, V34, V36, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36, V218]

================================

Block 0x2fd
[0x2fd:0x2fe]
---
Predecessors: [0x2d1]
Successors: [0x2ff]
---
0x2fd JUMPDEST
0x2fe POP
---
0x2fd: JUMPDEST 
---
Entry stack: [V11, 0x77, V34, V36, V218]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2cb, 0x2fd, 0x42f]
Successors: [0x77]
---
0x2ff JUMPDEST
0x300 POP
0x301 POP
0x302 JUMP
---
0x2ff: JUMPDEST 
0x302: JUMP 0x77
---
Entry stack: [V11, 0x77, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x303
[0x303:0x322]
---
Predecessors: [0x8c]
Successors: [0x323, 0x327]
---
0x303 JUMPDEST
0x304 PUSH1 0x1
0x306 SLOAD
0x307 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31c AND
0x31d CALLER
0x31e EQ
0x31f PUSH2 0x327
0x322 JUMPI
---
0x303: JUMPDEST 
0x304: V225 = 0x1
0x306: V226 = S[0x1]
0x307: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x31d: V229 = CALLER
0x31e: V230 = EQ V229 V228
0x31f: V231 = 0x327
0x322: JUMPI 0x327 V230
---
Entry stack: [V11, 0x77, V39, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V39, V56]

================================

Block 0x323
[0x323:0x326]
---
Predecessors: [0x303]
Successors: []
---
0x323 PUSH1 0x0
0x325 DUP1
0x326 REVERT
---
0x323: V232 = 0x0
0x326: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V39, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V39, V56]

================================

Block 0x327
[0x327:0x339]
---
Predecessors: [0x303]
Successors: [0x584]
---
0x327 JUMPDEST
0x328 DUP2
0x329 MLOAD
0x32a PUSH2 0x33a
0x32d SWAP1
0x32e PUSH1 0x0
0x330 SWAP1
0x331 PUSH1 0x20
0x333 DUP6
0x334 ADD
0x335 SWAP1
0x336 PUSH2 0x584
0x339 JUMP
---
0x327: JUMPDEST 
0x329: V233 = M[V39]
0x32a: V234 = 0x33a
0x32e: V235 = 0x0
0x331: V236 = 0x20
0x334: V237 = ADD V39 0x20
0x336: V238 = 0x584
0x339: JUMP 0x584
---
Entry stack: [V11, 0x77, V39, V56]
Stack pops: 2
Stack additions: [S1, S0, 0x33a, 0x0, V237, V233]
Exit stack: [V11, 0x77, V39, V56, 0x33a, 0x0, V237, V233]

================================

Block 0x33a
[0x33a:0x340]
---
Predecessors: [0x33a, 0x50c, 0x5fe]
Successors: [0x77, 0x33a, 0x50c]
---
0x33a JUMPDEST
0x33b POP
0x33c PUSH1 0x2
0x33e SSTORE
0x33f POP
0x340 JUMP
---
0x33a: JUMPDEST 
0x33c: V239 = 0x2
0x33e: S[0x2] = S1
0x340: JUMP S3
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, S5, S4]

================================

Block 0x341
[0x341:0x380]
---
Predecessors: [0xe6]
Successors: [0x381, 0x3c7]
---
0x341 JUMPDEST
0x342 PUSH1 0x0
0x344 DUP1
0x345 SLOAD
0x346 PUSH1 0x40
0x348 DUP1
0x349 MLOAD
0x34a PUSH1 0x20
0x34c PUSH1 0x2
0x34e PUSH1 0x1
0x350 DUP6
0x351 AND
0x352 ISZERO
0x353 PUSH2 0x100
0x356 MUL
0x357 PUSH1 0x0
0x359 NOT
0x35a ADD
0x35b SWAP1
0x35c SWAP5
0x35d AND
0x35e SWAP4
0x35f SWAP1
0x360 SWAP4
0x361 DIV
0x362 PUSH1 0x1f
0x364 DUP2
0x365 ADD
0x366 DUP5
0x367 SWAP1
0x368 DIV
0x369 DUP5
0x36a MUL
0x36b DUP3
0x36c ADD
0x36d DUP5
0x36e ADD
0x36f SWAP1
0x370 SWAP3
0x371 MSTORE
0x372 DUP2
0x373 DUP2
0x374 MSTORE
0x375 SWAP3
0x376 SWAP2
0x377 DUP4
0x378 ADD
0x379 DUP3
0x37a DUP3
0x37b DUP1
0x37c ISZERO
0x37d PUSH2 0x3c7
0x380 JUMPI
---
0x341: JUMPDEST 
0x342: V240 = 0x0
0x345: V241 = S[0x0]
0x346: V242 = 0x40
0x349: V243 = M[0x40]
0x34a: V244 = 0x20
0x34c: V245 = 0x2
0x34e: V246 = 0x1
0x351: V247 = AND V241 0x1
0x352: V248 = ISZERO V247
0x353: V249 = 0x100
0x356: V250 = MUL 0x100 V248
0x357: V251 = 0x0
0x359: V252 = NOT 0x0
0x35a: V253 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V250
0x35d: V254 = AND V241 V253
0x361: V255 = DIV V254 0x2
0x362: V256 = 0x1f
0x365: V257 = ADD V255 0x1f
0x368: V258 = DIV V257 0x20
0x36a: V259 = MUL 0x20 V258
0x36c: V260 = ADD V243 V259
0x36e: V261 = ADD 0x20 V260
0x371: M[0x40] = V261
0x374: M[V243] = V255
0x378: V262 = ADD V243 0x20
0x37c: V263 = ISZERO V255
0x37d: V264 = 0x3c7
0x380: JUMPI 0x3c7 V263
---
Entry stack: [V11, 0xef]
Stack pops: 0
Stack additions: [V243, 0x0, V255, V262, 0x0, V255]
Exit stack: [V11, 0xef, V243, 0x0, V255, V262, 0x0, V255]

================================

Block 0x381
[0x381:0x388]
---
Predecessors: [0x341]
Successors: [0x389, 0x39c]
---
0x381 DUP1
0x382 PUSH1 0x1f
0x384 LT
0x385 PUSH2 0x39c
0x388 JUMPI
---
0x382: V265 = 0x1f
0x384: V266 = LT 0x1f V255
0x385: V267 = 0x39c
0x388: JUMPI 0x39c V266
---
Entry stack: [V11, 0xef, V243, 0x0, V255, V262, 0x0, V255]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xef, V243, 0x0, V255, V262, 0x0, V255]

================================

Block 0x389
[0x389:0x39b]
---
Predecessors: [0x381]
Successors: [0x3c7]
---
0x389 PUSH2 0x100
0x38c DUP1
0x38d DUP4
0x38e SLOAD
0x38f DIV
0x390 MUL
0x391 DUP4
0x392 MSTORE
0x393 SWAP2
0x394 PUSH1 0x20
0x396 ADD
0x397 SWAP2
0x398 PUSH2 0x3c7
0x39b JUMP
---
0x389: V268 = 0x100
0x38e: V269 = S[0x0]
0x38f: V270 = DIV V269 0x100
0x390: V271 = MUL V270 0x100
0x392: M[V262] = V271
0x394: V272 = 0x20
0x396: V273 = ADD 0x20 V262
0x398: V274 = 0x3c7
0x39b: JUMP 0x3c7
---
Entry stack: [V11, 0xef, V243, 0x0, V255, V262, 0x0, V255]
Stack pops: 3
Stack additions: [V273, S1, S0]
Exit stack: [V11, 0xef, V243, 0x0, V255, V273, 0x0, V255]

================================

Block 0x39c
[0x39c:0x3a9]
---
Predecessors: [0x381]
Successors: [0x3aa]
---
0x39c JUMPDEST
0x39d DUP3
0x39e ADD
0x39f SWAP2
0x3a0 SWAP1
0x3a1 PUSH1 0x0
0x3a3 MSTORE
0x3a4 PUSH1 0x20
0x3a6 PUSH1 0x0
0x3a8 SHA3
0x3a9 SWAP1
---
0x39c: JUMPDEST 
0x39e: V275 = ADD V262 V255
0x3a1: V276 = 0x0
0x3a3: M[0x0] = 0x0
0x3a4: V277 = 0x20
0x3a6: V278 = 0x0
0x3a8: V279 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xef, V243, 0x0, V255, V262, 0x0, V255]
Stack pops: 3
Stack additions: [V275, V279, S2]
Exit stack: [V11, 0xef, V243, 0x0, V255, V275, V279, V262]

================================

Block 0x3aa
[0x3aa:0x3bd]
---
Predecessors: [0x39c, 0x3aa]
Successors: [0x3aa, 0x3be]
---
0x3aa JUMPDEST
0x3ab DUP2
0x3ac SLOAD
0x3ad DUP2
0x3ae MSTORE
0x3af SWAP1
0x3b0 PUSH1 0x1
0x3b2 ADD
0x3b3 SWAP1
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 DUP1
0x3b8 DUP4
0x3b9 GT
0x3ba PUSH2 0x3aa
0x3bd JUMPI
---
0x3aa: JUMPDEST 
0x3ac: V280 = S[S1]
0x3ae: M[S0] = V280
0x3b0: V281 = 0x1
0x3b2: V282 = ADD 0x1 S1
0x3b4: V283 = 0x20
0x3b6: V284 = ADD 0x20 S0
0x3b9: V285 = GT V275 V284
0x3ba: V286 = 0x3aa
0x3bd: JUMPI 0x3aa V285
---
Entry stack: [V11, 0xef, V243, 0x0, V255, V275, S1, S0]
Stack pops: 3
Stack additions: [S2, V282, V284]
Exit stack: [V11, 0xef, V243, 0x0, V255, V275, V282, V284]

================================

Block 0x3be
[0x3be:0x3c6]
---
Predecessors: [0x3aa]
Successors: [0x3c7]
---
0x3be DUP3
0x3bf SWAP1
0x3c0 SUB
0x3c1 PUSH1 0x1f
0x3c3 AND
0x3c4 DUP3
0x3c5 ADD
0x3c6 SWAP2
---
0x3c0: V287 = SUB V284 V275
0x3c1: V288 = 0x1f
0x3c3: V289 = AND 0x1f V287
0x3c5: V290 = ADD V275 V289
---
Entry stack: [V11, 0xef, V243, 0x0, V255, V275, V282, V284]
Stack pops: 3
Stack additions: [V290, S1, S2]
Exit stack: [V11, 0xef, V243, 0x0, V255, V290, V282, V275]

================================

Block 0x3c7
[0x3c7:0x3ce]
---
Predecessors: [0x341, 0x389, 0x3be]
Successors: [0xef]
---
0x3c7 JUMPDEST
0x3c8 POP
0x3c9 POP
0x3ca POP
0x3cb POP
0x3cc POP
0x3cd DUP2
0x3ce JUMP
---
0x3c7: JUMPDEST 
0x3ce: JUMP 0xef
---
Entry stack: [V11, 0xef, V243, 0x0, V255, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xef, V243]

================================

Block 0x3cf
[0x3cf:0x3ee]
---
Predecessors: [0x170]
Successors: [0x3ef, 0x3f3]
---
0x3cf JUMPDEST
0x3d0 PUSH1 0x1
0x3d2 SLOAD
0x3d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e8 AND
0x3e9 CALLER
0x3ea EQ
0x3eb PUSH2 0x3f3
0x3ee JUMPI
---
0x3cf: JUMPDEST 
0x3d0: V291 = 0x1
0x3d2: V292 = S[0x1]
0x3d3: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e8: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x3e9: V295 = CALLER
0x3ea: V296 = EQ V295 V294
0x3eb: V297 = 0x3f3
0x3ee: JUMPI 0x3f3 V296
---
Entry stack: [V11, 0x77, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V110]

================================

Block 0x3ef
[0x3ef:0x3f2]
---
Predecessors: [0x3cf]
Successors: []
---
0x3ef PUSH1 0x0
0x3f1 DUP1
0x3f2 REVERT
---
0x3ef: V298 = 0x0
0x3f2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V110]

================================

Block 0x3f3
[0x3f3:0x42e]
---
Predecessors: [0x3cf]
Successors: [0x77]
---
0x3f3 JUMPDEST
0x3f4 PUSH1 0x1
0x3f6 DUP1
0x3f7 SLOAD
0x3f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40d NOT
0x40e AND
0x40f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x424 SWAP3
0x425 SWAP1
0x426 SWAP3
0x427 AND
0x428 SWAP2
0x429 SWAP1
0x42a SWAP2
0x42b OR
0x42c SWAP1
0x42d SSTORE
0x42e JUMP
---
0x3f3: JUMPDEST 
0x3f4: V299 = 0x1
0x3f7: V300 = S[0x1]
0x3f8: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x40d: V302 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x40e: V303 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V300
0x40f: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x427: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x42b: V306 = OR V305 V303
0x42d: S[0x1] = V306
0x42e: JUMP 0x77
---
Entry stack: [V11, 0x77, V110]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x42f
[0x42f:0x438]
---
Predecessors: [0x192]
Successors: [0x2ff, 0x439]
---
0x42f JUMPDEST
0x430 PUSH1 0x2
0x432 SLOAD
0x433 ISZERO
0x434 ISZERO
0x435 PUSH2 0x2ff
0x438 JUMPI
---
0x42f: JUMPDEST 
0x430: V307 = 0x2
0x432: V308 = S[0x2]
0x433: V309 = ISZERO V308
0x434: V310 = ISZERO V309
0x435: V311 = 0x2ff
0x438: JUMPI 0x2ff V310
---
Entry stack: [V11, 0x77, V113, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V113, V131]

================================

Block 0x439
[0x439:0x44b]
---
Predecessors: [0x42f]
Successors: [0x44c]
---
0x439 DUP1
0x43a PUSH1 0x40
0x43c MLOAD
0x43d PUSH1 0x20
0x43f ADD
0x440 DUP1
0x441 DUP3
0x442 DUP1
0x443 MLOAD
0x444 SWAP1
0x445 PUSH1 0x20
0x447 ADD
0x448 SWAP1
0x449 DUP1
0x44a DUP4
0x44b DUP4
---
0x43a: V312 = 0x40
0x43c: V313 = M[0x40]
0x43d: V314 = 0x20
0x43f: V315 = ADD 0x20 V313
0x443: V316 = M[V131]
0x445: V317 = 0x20
0x447: V318 = ADD 0x20 V131
---
Entry stack: [V11, 0x77, V113, V131]
Stack pops: 1
Stack additions: [S0, S0, V315, V315, V318, V316, V316, V315, V318]
Exit stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, V316, V315, V318]

================================

Block 0x44c
[0x44c:0x454]
---
Predecessors: [0x439, 0x455]
Successors: [0x455, 0x46b]
---
0x44c JUMPDEST
0x44d PUSH1 0x20
0x44f DUP4
0x450 LT
0x451 PUSH2 0x46b
0x454 JUMPI
---
0x44c: JUMPDEST 
0x44d: V319 = 0x20
0x450: V320 = LT S2 0x20
0x451: V321 = 0x46b
0x454: JUMPI 0x46b V320
---
Entry stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, S2, S1, S0]

================================

Block 0x455
[0x455:0x46a]
---
Predecessors: [0x44c]
Successors: [0x44c]
---
0x455 DUP1
0x456 MLOAD
0x457 DUP3
0x458 MSTORE
0x459 PUSH1 0x1f
0x45b NOT
0x45c SWAP1
0x45d SWAP3
0x45e ADD
0x45f SWAP2
0x460 PUSH1 0x20
0x462 SWAP2
0x463 DUP3
0x464 ADD
0x465 SWAP2
0x466 ADD
0x467 PUSH2 0x44c
0x46a JUMP
---
0x456: V322 = M[S0]
0x458: M[S1] = V322
0x459: V323 = 0x1f
0x45b: V324 = NOT 0x1f
0x45e: V325 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x460: V326 = 0x20
0x464: V327 = ADD 0x20 S1
0x466: V328 = ADD 0x20 S0
0x467: V329 = 0x44c
0x46a: JUMP 0x44c
---
Entry stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, S2, S1, S0]
Stack pops: 3
Stack additions: [V325, V327, V328]
Exit stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, V325, V327, V328]

================================

Block 0x46b
[0x46b:0x4ae]
---
Predecessors: [0x44c]
Successors: [0x4af]
---
0x46b JUMPDEST
0x46c PUSH1 0x1
0x46e DUP4
0x46f PUSH1 0x20
0x471 SUB
0x472 PUSH2 0x100
0x475 EXP
0x476 SUB
0x477 DUP1
0x478 NOT
0x479 DUP3
0x47a MLOAD
0x47b AND
0x47c DUP2
0x47d DUP5
0x47e MLOAD
0x47f AND
0x480 DUP1
0x481 DUP3
0x482 OR
0x483 DUP6
0x484 MSTORE
0x485 POP
0x486 POP
0x487 POP
0x488 POP
0x489 POP
0x48a POP
0x48b SWAP1
0x48c POP
0x48d ADD
0x48e SWAP2
0x48f POP
0x490 POP
0x491 PUSH1 0x40
0x493 MLOAD
0x494 PUSH1 0x20
0x496 DUP2
0x497 DUP4
0x498 SUB
0x499 SUB
0x49a DUP2
0x49b MSTORE
0x49c SWAP1
0x49d PUSH1 0x40
0x49f MSTORE
0x4a0 PUSH1 0x40
0x4a2 MLOAD
0x4a3 DUP1
0x4a4 DUP3
0x4a5 DUP1
0x4a6 MLOAD
0x4a7 SWAP1
0x4a8 PUSH1 0x20
0x4aa ADD
0x4ab SWAP1
0x4ac DUP1
0x4ad DUP4
0x4ae DUP4
---
0x46b: JUMPDEST 
0x46c: V330 = 0x1
0x46f: V331 = 0x20
0x471: V332 = SUB 0x20 S2
0x472: V333 = 0x100
0x475: V334 = EXP 0x100 V332
0x476: V335 = SUB V334 0x1
0x478: V336 = NOT V335
0x47a: V337 = M[S0]
0x47b: V338 = AND V337 V336
0x47e: V339 = M[S1]
0x47f: V340 = AND V339 V335
0x482: V341 = OR V338 V340
0x484: M[S1] = V341
0x48d: V342 = ADD V316 V315
0x491: V343 = 0x40
0x493: V344 = M[0x40]
0x494: V345 = 0x20
0x498: V346 = SUB V342 V344
0x499: V347 = SUB V346 0x20
0x49b: M[V344] = V347
0x49d: V348 = 0x40
0x49f: M[0x40] = V342
0x4a0: V349 = 0x40
0x4a2: V350 = M[0x40]
0x4a6: V351 = M[V344]
0x4a8: V352 = 0x20
0x4aa: V353 = ADD 0x20 V344
---
Entry stack: [V11, 0x77, V113, V131, V131, V315, V315, V318, V316, S2, S1, S0]
Stack pops: 8
Stack additions: [V344, V350, V350, V353, V351, V351, V350, V353]
Exit stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, V351, V350, V353]

================================

Block 0x4af
[0x4af:0x4b7]
---
Predecessors: [0x46b, 0x4b8]
Successors: [0x4b8, 0x4ce]
---
0x4af JUMPDEST
0x4b0 PUSH1 0x20
0x4b2 DUP4
0x4b3 LT
0x4b4 PUSH2 0x4ce
0x4b7 JUMPI
---
0x4af: JUMPDEST 
0x4b0: V354 = 0x20
0x4b3: V355 = LT S2 0x20
0x4b4: V356 = 0x4ce
0x4b7: JUMPI 0x4ce V355
---
Entry stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, S2, S1, S0]

================================

Block 0x4b8
[0x4b8:0x4cd]
---
Predecessors: [0x4af]
Successors: [0x4af]
---
0x4b8 DUP1
0x4b9 MLOAD
0x4ba DUP3
0x4bb MSTORE
0x4bc PUSH1 0x1f
0x4be NOT
0x4bf SWAP1
0x4c0 SWAP3
0x4c1 ADD
0x4c2 SWAP2
0x4c3 PUSH1 0x20
0x4c5 SWAP2
0x4c6 DUP3
0x4c7 ADD
0x4c8 SWAP2
0x4c9 ADD
0x4ca PUSH2 0x4af
0x4cd JUMP
---
0x4b9: V357 = M[S0]
0x4bb: M[S1] = V357
0x4bc: V358 = 0x1f
0x4be: V359 = NOT 0x1f
0x4c1: V360 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4c3: V361 = 0x20
0x4c7: V362 = ADD 0x20 S1
0x4c9: V363 = ADD 0x20 S0
0x4ca: V364 = 0x4af
0x4cd: JUMP 0x4af
---
Entry stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, S2, S1, S0]
Stack pops: 3
Stack additions: [V360, V362, V363]
Exit stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, V360, V362, V363]

================================

Block 0x4ce
[0x4ce:0x50b]
---
Predecessors: [0x4af]
Successors: [0x584]
---
0x4ce JUMPDEST
0x4cf MLOAD
0x4d0 DUP2
0x4d1 MLOAD
0x4d2 PUSH1 0x20
0x4d4 SWAP4
0x4d5 DUP5
0x4d6 SUB
0x4d7 PUSH2 0x100
0x4da EXP
0x4db PUSH1 0x0
0x4dd NOT
0x4de ADD
0x4df DUP1
0x4e0 NOT
0x4e1 SWAP1
0x4e2 SWAP3
0x4e3 AND
0x4e4 SWAP2
0x4e5 AND
0x4e6 OR
0x4e7 SWAP1
0x4e8 MSTORE
0x4e9 PUSH1 0x40
0x4eb MLOAD
0x4ec SWAP2
0x4ed SWAP1
0x4ee SWAP4
0x4ef ADD
0x4f0 DUP2
0x4f1 SWAP1
0x4f2 SUB
0x4f3 SWAP1
0x4f4 SHA3
0x4f5 PUSH1 0x2
0x4f7 SSTORE
0x4f8 POP
0x4f9 DUP5
0x4fa MLOAD
0x4fb PUSH2 0x50c
0x4fe SWAP4
0x4ff POP
0x500 PUSH1 0x0
0x502 SWAP3
0x503 POP
0x504 SWAP1
0x505 DUP6
0x506 ADD
0x507 SWAP1
0x508 PUSH2 0x584
0x50b JUMP
---
0x4ce: JUMPDEST 
0x4cf: V365 = M[S0]
0x4d1: V366 = M[S1]
0x4d2: V367 = 0x20
0x4d6: V368 = SUB 0x20 S2
0x4d7: V369 = 0x100
0x4da: V370 = EXP 0x100 V368
0x4db: V371 = 0x0
0x4dd: V372 = NOT 0x0
0x4de: V373 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V370
0x4e0: V374 = NOT V373
0x4e3: V375 = AND V365 V374
0x4e5: V376 = AND V373 V366
0x4e6: V377 = OR V376 V375
0x4e8: M[S1] = V377
0x4e9: V378 = 0x40
0x4eb: V379 = M[0x40]
0x4ef: V380 = ADD V350 V351
0x4f2: V381 = SUB V380 V379
0x4f4: V382 = SHA3 V379 V381
0x4f5: V383 = 0x2
0x4f7: S[0x2] = V382
0x4fa: V384 = M[V113]
0x4fb: V385 = 0x50c
0x500: V386 = 0x0
0x506: V387 = ADD V113 0x20
0x508: V388 = 0x584
0x50b: JUMP 0x584
---
Entry stack: [V11, 0x77, V113, V131, V344, V350, V350, V353, V351, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x50c, 0x0, V387, V384]
Exit stack: [V11, 0x77, V113, V131, 0x50c, 0x0, V387, V384]

================================

Block 0x50c
[0x50c:0x52f]
---
Predecessors: [0x33a, 0x50c, 0x5fe]
Successors: [0x77, 0x33a, 0x50c]
---
0x50c JUMPDEST
0x50d POP
0x50e PUSH1 0x1
0x510 DUP1
0x511 SLOAD
0x512 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x527 NOT
0x528 AND
0x529 CALLER
0x52a OR
0x52b SWAP1
0x52c SSTORE
0x52d POP
0x52e POP
0x52f JUMP
---
0x50c: JUMPDEST 
0x50e: V389 = 0x1
0x511: V390 = S[0x1]
0x512: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x527: V392 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x528: V393 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V390
0x529: V394 = CALLER
0x52a: V395 = OR V394 V393
0x52c: S[0x1] = V395
0x52f: JUMP S3
---
Entry stack: [V11, 0x77, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, S5, S4]

================================

Block 0x530
[0x530:0x54f]
---
Predecessors: [0x21c]
Successors: [0x550, 0x554]
---
0x530 JUMPDEST
0x531 PUSH1 0x1
0x533 SLOAD
0x534 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x549 AND
0x54a CALLER
0x54b EQ
0x54c PUSH2 0x554
0x54f JUMPI
---
0x530: JUMPDEST 
0x531: V396 = 0x1
0x533: V397 = S[0x1]
0x534: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x549: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x54a: V400 = CALLER
0x54b: V401 = EQ V400 V399
0x54c: V402 = 0x554
0x54f: JUMPI 0x554 V401
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x550
[0x550:0x553]
---
Predecessors: [0x530]
Successors: []
---
0x550 PUSH1 0x0
0x552 DUP1
0x553 REVERT
---
0x550: V403 = 0x0
0x553: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x554
[0x554:0x577]
---
Predecessors: [0x530]
Successors: [0x578, 0x581]
---
0x554 JUMPDEST
0x555 PUSH1 0x40
0x557 MLOAD
0x558 CALLER
0x559 SWAP1
0x55a ADDRESS
0x55b BALANCE
0x55c DUP1
0x55d ISZERO
0x55e PUSH2 0x8fc
0x561 MUL
0x562 SWAP2
0x563 PUSH1 0x0
0x565 DUP2
0x566 DUP2
0x567 DUP2
0x568 DUP6
0x569 DUP9
0x56a DUP9
0x56b CALL
0x56c SWAP4
0x56d POP
0x56e POP
0x56f POP
0x570 POP
0x571 ISZERO
0x572 DUP1
0x573 ISZERO
0x574 PUSH2 0x581
0x577 JUMPI
---
0x554: JUMPDEST 
0x555: V404 = 0x40
0x557: V405 = M[0x40]
0x558: V406 = CALLER
0x55a: V407 = ADDRESS
0x55b: V408 = BALANCE V407
0x55d: V409 = ISZERO V408
0x55e: V410 = 0x8fc
0x561: V411 = MUL 0x8fc V409
0x563: V412 = 0x0
0x56b: V413 = CALL V411 V406 V408 V405 0x0 V405 0x0
0x571: V414 = ISZERO V413
0x573: V415 = ISZERO V414
0x574: V416 = 0x581
0x577: JUMPI 0x581 V415
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V414]
Exit stack: [V11, 0x77, V414]

================================

Block 0x578
[0x578:0x580]
---
Predecessors: [0x554]
Successors: []
---
0x578 RETURNDATASIZE
0x579 PUSH1 0x0
0x57b DUP1
0x57c RETURNDATACOPY
0x57d RETURNDATASIZE
0x57e PUSH1 0x0
0x580 REVERT
---
0x578: V417 = RETURNDATASIZE
0x579: V418 = 0x0
0x57c: RETURNDATACOPY 0x0 0x0 V417
0x57d: V419 = RETURNDATASIZE
0x57e: V420 = 0x0
0x580: REVERT 0x0 V419
---
Entry stack: [V11, 0x77, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V414]

================================

Block 0x581
[0x581:0x583]
---
Predecessors: [0x554]
Successors: [0x77]
---
0x581 JUMPDEST
0x582 POP
0x583 JUMP
---
0x581: JUMPDEST 
0x583: JUMP 0x77
---
Entry stack: [V11, 0x77, V414]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x584
[0x584:0x5b4]
---
Predecessors: [0x327, 0x4ce]
Successors: [0x5b5, 0x5c5]
---
0x584 JUMPDEST
0x585 DUP3
0x586 DUP1
0x587 SLOAD
0x588 PUSH1 0x1
0x58a DUP2
0x58b PUSH1 0x1
0x58d AND
0x58e ISZERO
0x58f PUSH2 0x100
0x592 MUL
0x593 SUB
0x594 AND
0x595 PUSH1 0x2
0x597 SWAP1
0x598 DIV
0x599 SWAP1
0x59a PUSH1 0x0
0x59c MSTORE
0x59d PUSH1 0x20
0x59f PUSH1 0x0
0x5a1 SHA3
0x5a2 SWAP1
0x5a3 PUSH1 0x1f
0x5a5 ADD
0x5a6 PUSH1 0x20
0x5a8 SWAP1
0x5a9 DIV
0x5aa DUP2
0x5ab ADD
0x5ac SWAP3
0x5ad DUP3
0x5ae PUSH1 0x1f
0x5b0 LT
0x5b1 PUSH2 0x5c5
0x5b4 JUMPI
---
0x584: JUMPDEST 
0x587: V421 = S[0x0]
0x588: V422 = 0x1
0x58b: V423 = 0x1
0x58d: V424 = AND 0x1 V421
0x58e: V425 = ISZERO V424
0x58f: V426 = 0x100
0x592: V427 = MUL 0x100 V425
0x593: V428 = SUB V427 0x1
0x594: V429 = AND V428 V421
0x595: V430 = 0x2
0x598: V431 = DIV V429 0x2
0x59a: V432 = 0x0
0x59c: M[0x0] = 0x0
0x59d: V433 = 0x20
0x59f: V434 = 0x0
0x5a1: V435 = SHA3 0x0 0x20
0x5a3: V436 = 0x1f
0x5a5: V437 = ADD 0x1f V431
0x5a6: V438 = 0x20
0x5a9: V439 = DIV V437 0x20
0x5ab: V440 = ADD V435 V439
0x5ae: V441 = 0x1f
0x5b0: V442 = LT 0x1f S0
0x5b1: V443 = 0x5c5
0x5b4: JUMPI 0x5c5 V442
---
Entry stack: [V11, 0x77, S5, S4, {0x33a, 0x50c}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V440, S0, V435, S1]
Exit stack: [V11, 0x77, S5, S4, {0x33a, 0x50c}, 0x0, V440, S0, V435, S1]

================================

Block 0x5b5
[0x5b5:0x5c4]
---
Predecessors: [0x584]
Successors: [0x5f2]
---
0x5b5 DUP1
0x5b6 MLOAD
0x5b7 PUSH1 0xff
0x5b9 NOT
0x5ba AND
0x5bb DUP4
0x5bc DUP1
0x5bd ADD
0x5be OR
0x5bf DUP6
0x5c0 SSTORE
0x5c1 PUSH2 0x5f2
0x5c4 JUMP
---
0x5b6: V444 = M[S0]
0x5b7: V445 = 0xff
0x5b9: V446 = NOT 0xff
0x5ba: V447 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V444
0x5bd: V448 = ADD S2 S2
0x5be: V449 = OR V448 V447
0x5c0: S[0x0] = V449
0x5c1: V450 = 0x5f2
0x5c4: JUMP 0x5f2
---
Entry stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, V440, S2, V435, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, V440, S2, V435, S0]

================================

Block 0x5c5
[0x5c5:0x5d3]
---
Predecessors: [0x584]
Successors: [0x5d4, 0x5f2]
---
0x5c5 JUMPDEST
0x5c6 DUP3
0x5c7 DUP1
0x5c8 ADD
0x5c9 PUSH1 0x1
0x5cb ADD
0x5cc DUP6
0x5cd SSTORE
0x5ce DUP3
0x5cf ISZERO
0x5d0 PUSH2 0x5f2
0x5d3 JUMPI
---
0x5c5: JUMPDEST 
0x5c8: V451 = ADD S2 S2
0x5c9: V452 = 0x1
0x5cb: V453 = ADD 0x1 V451
0x5cd: S[0x0] = V453
0x5cf: V454 = ISZERO S2
0x5d0: V455 = 0x5f2
0x5d3: JUMPI 0x5f2 V454
---
Entry stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, V440, S2, V435, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, V440, S2, V435, S0]

================================

Block 0x5d4
[0x5d4:0x5d6]
---
Predecessors: [0x5c5]
Successors: [0x5d7]
---
0x5d4 SWAP2
0x5d5 DUP3
0x5d6 ADD
---
0x5d6: V456 = ADD S0 S2
---
Entry stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, V440, S2, V435, S0]
Stack pops: 3
Stack additions: [S0, S1, V456]
Exit stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, V440, S0, V435, V456]

================================

Block 0x5d7
[0x5d7:0x5df]
---
Predecessors: [0x5d4, 0x5e0]
Successors: [0x5e0, 0x5f2]
---
0x5d7 JUMPDEST
0x5d8 DUP3
0x5d9 DUP2
0x5da GT
0x5db ISZERO
0x5dc PUSH2 0x5f2
0x5df JUMPI
---
0x5d7: JUMPDEST 
0x5da: V457 = GT V456 S2
0x5db: V458 = ISZERO V457
0x5dc: V459 = 0x5f2
0x5df: JUMPI 0x5f2 V458
---
Entry stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, V440, S2, S1, V456]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, V440, S2, S1, V456]

================================

Block 0x5e0
[0x5e0:0x5f1]
---
Predecessors: [0x5d7]
Successors: [0x5d7]
---
0x5e0 DUP3
0x5e1 MLOAD
0x5e2 DUP3
0x5e3 SSTORE
0x5e4 SWAP2
0x5e5 PUSH1 0x20
0x5e7 ADD
0x5e8 SWAP2
0x5e9 SWAP1
0x5ea PUSH1 0x1
0x5ec ADD
0x5ed SWAP1
0x5ee PUSH2 0x5d7
0x5f1 JUMP
---
0x5e1: V460 = M[S2]
0x5e3: S[S1] = V460
0x5e5: V461 = 0x20
0x5e7: V462 = ADD 0x20 S2
0x5ea: V463 = 0x1
0x5ec: V464 = ADD 0x1 S1
0x5ee: V465 = 0x5d7
0x5f1: JUMP 0x5d7
---
Entry stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, V440, S2, S1, V456]
Stack pops: 3
Stack additions: [V462, V464, S0]
Exit stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, V440, V462, V464, V456]

================================

Block 0x5f2
[0x5f2:0x5fd]
---
Predecessors: [0x5b5, 0x5c5, 0x5d7]
Successors: [0x602]
---
0x5f2 JUMPDEST
0x5f3 POP
0x5f4 PUSH2 0x5fe
0x5f7 SWAP3
0x5f8 SWAP2
0x5f9 POP
0x5fa PUSH2 0x602
0x5fd JUMP
---
0x5f2: JUMPDEST 
0x5f4: V466 = 0x5fe
0x5fa: V467 = 0x602
0x5fd: JUMP 0x602
---
Entry stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, V440, S2, S1, S0]
Stack pops: 4
Stack additions: [0x5fe, S3, S1]
Exit stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, 0x5fe, V440, S1]

================================

Block 0x5fe
[0x5fe:0x601]
---
Predecessors: [0x608, 0x61c]
Successors: [0x77, 0x33a, 0x50c, 0x61c]
---
0x5fe JUMPDEST
0x5ff POP
0x600 SWAP1
0x601 JUMP
---
0x5fe: JUMPDEST 
0x601: JUMP {0x77, 0x33a, 0x50c, 0x61c}
---
Entry stack: [V11, 0x77, S7, S6, {0x77, 0x33a, 0x50c}, S4, S3, {0x77, 0x33a, 0x50c, 0x61c}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x77, S7, S6, {0x77, 0x33a, 0x50c}, S4, S3, S1]

================================

Block 0x602
[0x602:0x607]
---
Predecessors: [0x5f2]
Successors: [0x608]
---
0x602 JUMPDEST
0x603 PUSH2 0x61c
0x606 SWAP2
0x607 SWAP1
---
0x602: JUMPDEST 
0x603: V468 = 0x61c
---
Entry stack: [V11, 0x77, S6, S5, {0x33a, 0x50c}, 0x0, 0x5fe, V440, S0]
Stack pops: 2
Stack additions: [0x61c, S1, S0]
Exit stack: [V11, 0x77, S6, S5, {0x33a, 0x50c}, 0x0, 0x5fe, 0x61c, V440, S0]

================================

Block 0x608
[0x608:0x610]
---
Predecessors: [0x602, 0x611]
Successors: [0x5fe, 0x611]
---
0x608 JUMPDEST
0x609 DUP1
0x60a DUP3
0x60b GT
0x60c ISZERO
0x60d PUSH2 0x5fe
0x610 JUMPI
---
0x608: JUMPDEST 
0x60b: V469 = GT V440 S0
0x60c: V470 = ISZERO V469
0x60d: V471 = 0x5fe
0x610: JUMPI 0x5fe V470
---
Entry stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, 0x5fe, 0x61c, V440, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, 0x5fe, 0x61c, V440, S0]

================================

Block 0x611
[0x611:0x61b]
---
Predecessors: [0x608]
Successors: [0x608]
---
0x611 PUSH1 0x0
0x613 DUP2
0x614 SSTORE
0x615 PUSH1 0x1
0x617 ADD
0x618 PUSH2 0x608
0x61b JUMP
---
0x611: V472 = 0x0
0x614: S[S0] = 0x0
0x615: V473 = 0x1
0x617: V474 = ADD 0x1 S0
0x618: V475 = 0x608
0x61b: JUMP 0x608
---
Entry stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, 0x5fe, 0x61c, V440, S0]
Stack pops: 1
Stack additions: [V474]
Exit stack: [V11, 0x77, S7, S6, {0x33a, 0x50c}, 0x0, 0x5fe, 0x61c, V440, V474]

================================

Block 0x61c
[0x61c:0x61e]
---
Predecessors: [0x5fe]
Successors: [0x5fe]
---
0x61c JUMPDEST
0x61d SWAP1
0x61e JUMP
---
0x61c: JUMPDEST 
0x61e: JUMP S1
---
Entry stack: [V11, 0x77, S5, S4, {0x77, 0x33a, 0x50c}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x77, S5, S4, {0x77, 0x33a, 0x50c}, S2, S0]

================================

Block 0x61f
[0x61f:0x64a]
---
Predecessors: []
Successors: []
---
0x61f STOP
0x620 LOG1
0x621 PUSH6 0x627a7a723058
0x628 SHA3
0x629 LOG0
0x62a LOG4
0x62b MISSING 0x2f
0x62c MISSING 0xd2
0x62d MISSING 0xe1
0x62e PUSH3 0xd60d15
0x632 GASLIMIT
0x633 CALLDATASIZE
0x634 PUSH22 0xc217aff9dac7181ea01ee49e807839f396e40cdc0029
---
0x61f: STOP 
0x620: LOG S0 S1 S2
0x621: V476 = 0x627a7a723058
0x628: V477 = SHA3 0x627a7a723058 S3
0x629: LOG V477 S4
0x62a: LOG S5 S6 S7 S8 S9 S10
0x62b: MISSING 0x2f
0x62c: MISSING 0xd2
0x62d: MISSING 0xe1
0x62e: V478 = 0xd60d15
0x632: V479 = GASLIMIT
0x633: V480 = CALLDATASIZE
0x634: V481 = 0xc217aff9dac7181ea01ee49e807839f396e40cdc0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc217aff9dac7181ea01ee49e807839f396e40cdc0029, V480, V479, 0xd60d15]
Exit stack: []

================================

Function 0:
Public function signature: 0x3853682c
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x224, 0x22c, 0x230, 0x267, 0x270, 0x286, 0x2bf, 0x2cb, 0x2d1, 0x2f4, 0x2fd, 0x2ff

Function 1:
Public function signature: 0x3e3ee859
Entry block: 0x8c
Exit block: 0x77
Body: 0x77, 0x8c, 0x303, 0x323, 0x327, 0x33a, 0x50c

Function 2:
Public function signature: 0x3fad9ae0
Entry block: 0xda
Exit block: 0x156
Body: 0xda, 0xe2, 0xe6, 0xef, 0x111, 0x11a, 0x129, 0x13d, 0x156, 0x341, 0x381, 0x389, 0x39c, 0x3aa, 0x3be, 0x3c7

Function 3:
Public function signature: 0x59988dce
Entry block: 0x164
Exit block: 0x77
Body: 0x77, 0x164, 0x16c, 0x170, 0x3cf, 0x3ef, 0x3f3

Function 4:
Public function signature: 0xb96d64fb
Entry block: 0x192
Exit block: 0x77
Body: 0x77, 0x192, 0x2ff, 0x33a, 0x42f, 0x439, 0x44c, 0x455, 0x46b, 0x4af, 0x4b8, 0x4ce, 0x50c

Function 5:
Public function signature: 0xf50ab247
Entry block: 0x21c
Exit block: 0x77
Body: 0x77, 0x21c, 0x530, 0x550, 0x554, 0x578, 0x581

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x584
Exit block: 0x5fe
Body: 0x584, 0x5b5, 0x5c5, 0x5d4, 0x5d7, 0x5e0, 0x5f2, 0x5fe, 0x602, 0x608, 0x611, 0x61c

