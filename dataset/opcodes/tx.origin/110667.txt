Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x6fdde03
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x84
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x6fdde03
0x22: V15 = EQ V13 0x6fdde03
0x23: V16 = 0x84
0x26: JUMPI 0x84 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x10e]
---
0x27 DUP1
0x28 PUSH4 0x18160ddd
0x2d EQ
0x2e PUSH2 0x10e
0x31 JUMPI
---
0x28: V17 = 0x18160ddd
0x2d: V18 = EQ 0x18160ddd V13
0x2e: V19 = 0x10e
0x31: JUMPI 0x10e V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x135]
---
0x32 DUP1
0x33 PUSH4 0x313ce567
0x38 EQ
0x39 PUSH2 0x135
0x3c JUMPI
---
0x33: V20 = 0x313ce567
0x38: V21 = EQ 0x313ce567 V13
0x39: V22 = 0x135
0x3c: JUMPI 0x135 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x160]
---
0x3d DUP1
0x3e PUSH4 0x33a581d2
0x43 EQ
0x44 PUSH2 0x160
0x47 JUMPI
---
0x3e: V23 = 0x33a581d2
0x43: V24 = EQ 0x33a581d2 V13
0x44: V25 = 0x160
0x47: JUMPI 0x160 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x175]
---
0x48 DUP1
0x49 PUSH4 0x70a08231
0x4e EQ
0x4f PUSH2 0x175
0x52 JUMPI
---
0x49: V26 = 0x70a08231
0x4e: V27 = EQ 0x70a08231 V13
0x4f: V28 = 0x175
0x52: JUMPI 0x175 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x196]
---
0x53 DUP1
0x54 PUSH4 0x95d89b41
0x59 EQ
0x5a PUSH2 0x196
0x5d JUMPI
---
0x54: V29 = 0x95d89b41
0x59: V30 = EQ 0x95d89b41 V13
0x5a: V31 = 0x196
0x5d: JUMPI 0x196 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1ab]
---
0x5e DUP1
0x5f PUSH4 0xa9059cbb
0x64 EQ
0x65 PUSH2 0x1ab
0x68 JUMPI
---
0x5f: V32 = 0xa9059cbb
0x64: V33 = EQ 0xa9059cbb V13
0x65: V34 = 0x1ab
0x68: JUMPI 0x1ab V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1e3]
---
0x69 DUP1
0x6a PUSH4 0xbe45fd62
0x6f EQ
0x70 PUSH2 0x1e3
0x73 JUMPI
---
0x6a: V35 = 0xbe45fd62
0x6f: V36 = EQ 0xbe45fd62 V13
0x70: V37 = 0x1e3
0x73: JUMPI 0x1e3 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x24c]
---
0x74 DUP1
0x75 PUSH4 0xf6368f8a
0x7a EQ
0x7b PUSH2 0x24c
0x7e JUMPI
---
0x75: V38 = 0xf6368f8a
0x7a: V39 = EQ 0xf6368f8a V13
0x7b: V40 = 0x24c
0x7e: JUMPI 0x24c V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x83]
---
Predecessors: [0x0, 0x74]
Successors: []
---
0x7f JUMPDEST
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x7f: JUMPDEST 
0x80: V41 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x84
[0x84:0x8b]
---
Predecessors: [0xd]
Successors: [0x8c, 0x90]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 DUP1
0x87 ISZERO
0x88 PUSH2 0x90
0x8b JUMPI
---
0x84: JUMPDEST 
0x85: V42 = CALLVALUE
0x87: V43 = ISZERO V42
0x88: V44 = 0x90
0x8b: JUMPI 0x90 V43
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V13, V42]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x84]
Successors: []
---
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8c: V45 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V13, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V42]

================================

Block 0x90
[0x90:0x98]
---
Predecessors: [0x84]
Successors: [0x2f3]
---
0x90 JUMPDEST
0x91 POP
0x92 PUSH2 0x99
0x95 PUSH2 0x2f3
0x98 JUMP
---
0x90: JUMPDEST 
0x92: V46 = 0x99
0x95: V47 = 0x2f3
0x98: JUMP 0x2f3
---
Entry stack: [V13, V42]
Stack pops: 1
Stack additions: [0x99]
Exit stack: [V13, 0x99]

================================

Block 0x99
[0x99:0xba]
---
Predecessors: [0x37c]
Successors: [0xbb]
---
0x99 JUMPDEST
0x9a PUSH1 0x40
0x9c DUP1
0x9d MLOAD
0x9e PUSH1 0x20
0xa0 DUP1
0xa1 DUP3
0xa2 MSTORE
0xa3 DUP4
0xa4 MLOAD
0xa5 DUP2
0xa6 DUP4
0xa7 ADD
0xa8 MSTORE
0xa9 DUP4
0xaa MLOAD
0xab SWAP2
0xac SWAP3
0xad DUP4
0xae SWAP3
0xaf SWAP1
0xb0 DUP4
0xb1 ADD
0xb2 SWAP2
0xb3 DUP6
0xb4 ADD
0xb5 SWAP1
0xb6 DUP1
0xb7 DUP4
0xb8 DUP4
0xb9 PUSH1 0x0
---
0x99: JUMPDEST 
0x9a: V48 = 0x40
0x9d: V49 = M[0x40]
0x9e: V50 = 0x20
0xa2: M[V49] = 0x20
0xa4: V51 = M[S0]
0xa7: V52 = ADD V49 0x20
0xa8: M[V52] = V51
0xaa: V53 = M[S0]
0xb1: V54 = ADD V49 0x40
0xb4: V55 = ADD S0 0x20
0xb9: V56 = 0x0
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: [S0, V49, V49, V54, V55, V53, V53, V54, V55, 0x0]
Exit stack: [V13, S0, V49, V49, V54, V55, V53, V53, V54, V55, 0x0]

================================

Block 0xbb
[0xbb:0xc3]
---
Predecessors: [0x99, 0xc4]
Successors: [0xc4, 0xd3]
---
0xbb JUMPDEST
0xbc DUP4
0xbd DUP2
0xbe LT
0xbf ISZERO
0xc0 PUSH2 0xd3
0xc3 JUMPI
---
0xbb: JUMPDEST 
0xbe: V57 = LT S0 V53
0xbf: V58 = ISZERO V57
0xc0: V59 = 0xd3
0xc3: JUMPI 0xd3 V58
---
Entry stack: [V13, S9, V49, V49, V54, V55, V53, V53, V54, V55, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S9, V49, V49, V54, V55, V53, V53, V54, V55, S0]

================================

Block 0xc4
[0xc4:0xd2]
---
Predecessors: [0xbb]
Successors: [0xbb]
---
0xc4 DUP2
0xc5 DUP2
0xc6 ADD
0xc7 MLOAD
0xc8 DUP4
0xc9 DUP3
0xca ADD
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf PUSH2 0xbb
0xd2 JUMP
---
0xc6: V60 = ADD S0 V55
0xc7: V61 = M[V60]
0xca: V62 = ADD S0 V54
0xcb: M[V62] = V61
0xcc: V63 = 0x20
0xce: V64 = ADD 0x20 S0
0xcf: V65 = 0xbb
0xd2: JUMP 0xbb
---
Entry stack: [V13, S9, V49, V49, V54, V55, V53, V53, V54, V55, S0]
Stack pops: 3
Stack additions: [S2, S1, V64]
Exit stack: [V13, S9, V49, V49, V54, V55, V53, V53, V54, V55, V64]

================================

Block 0xd3
[0xd3:0xe6]
---
Predecessors: [0xbb]
Successors: [0xe7, 0x100]
---
0xd3 JUMPDEST
0xd4 POP
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 SWAP1
0xd9 POP
0xda SWAP1
0xdb DUP2
0xdc ADD
0xdd SWAP1
0xde PUSH1 0x1f
0xe0 AND
0xe1 DUP1
0xe2 ISZERO
0xe3 PUSH2 0x100
0xe6 JUMPI
---
0xd3: JUMPDEST 
0xdc: V66 = ADD V53 V54
0xde: V67 = 0x1f
0xe0: V68 = AND 0x1f V53
0xe2: V69 = ISZERO V68
0xe3: V70 = 0x100
0xe6: JUMPI 0x100 V69
---
Entry stack: [V13, S9, V49, V49, V54, V55, V53, V53, V54, V55, S0]
Stack pops: 7
Stack additions: [V66, V68]
Exit stack: [V13, S9, V49, V49, V66, V68]

================================

Block 0xe7
[0xe7:0xff]
---
Predecessors: [0xd3]
Successors: [0x100]
---
0xe7 DUP1
0xe8 DUP3
0xe9 SUB
0xea DUP1
0xeb MLOAD
0xec PUSH1 0x1
0xee DUP4
0xef PUSH1 0x20
0xf1 SUB
0xf2 PUSH2 0x100
0xf5 EXP
0xf6 SUB
0xf7 NOT
0xf8 AND
0xf9 DUP2
0xfa MSTORE
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP2
0xff POP
---
0xe9: V71 = SUB V66 V68
0xeb: V72 = M[V71]
0xec: V73 = 0x1
0xef: V74 = 0x20
0xf1: V75 = SUB 0x20 V68
0xf2: V76 = 0x100
0xf5: V77 = EXP 0x100 V75
0xf6: V78 = SUB V77 0x1
0xf7: V79 = NOT V78
0xf8: V80 = AND V79 V72
0xfa: M[V71] = V80
0xfb: V81 = 0x20
0xfd: V82 = ADD 0x20 V71
---
Entry stack: [V13, S4, V49, V49, V66, V68]
Stack pops: 2
Stack additions: [V82, S0]
Exit stack: [V13, S4, V49, V49, V82, V68]

================================

Block 0x100
[0x100:0x10d]
---
Predecessors: [0xd3, 0xe7]
Successors: []
---
0x100 JUMPDEST
0x101 POP
0x102 SWAP3
0x103 POP
0x104 POP
0x105 POP
0x106 PUSH1 0x40
0x108 MLOAD
0x109 DUP1
0x10a SWAP2
0x10b SUB
0x10c SWAP1
0x10d RETURN
---
0x100: JUMPDEST 
0x106: V83 = 0x40
0x108: V84 = M[0x40]
0x10b: V85 = SUB S1 V84
0x10d: RETURN V84 V85
---
Entry stack: [V13, S4, V49, V49, S1, V68]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x10e
[0x10e:0x115]
---
Predecessors: [0x27]
Successors: [0x116, 0x11a]
---
0x10e JUMPDEST
0x10f CALLVALUE
0x110 DUP1
0x111 ISZERO
0x112 PUSH2 0x11a
0x115 JUMPI
---
0x10e: JUMPDEST 
0x10f: V86 = CALLVALUE
0x111: V87 = ISZERO V86
0x112: V88 = 0x11a
0x115: JUMPI 0x11a V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V13, V86]

================================

Block 0x116
[0x116:0x119]
---
Predecessors: [0x10e]
Successors: []
---
0x116 PUSH1 0x0
0x118 DUP1
0x119 REVERT
---
0x116: V89 = 0x0
0x119: REVERT 0x0 0x0
---
Entry stack: [V13, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V86]

================================

Block 0x11a
[0x11a:0x122]
---
Predecessors: [0x10e]
Successors: [0x386]
---
0x11a JUMPDEST
0x11b POP
0x11c PUSH2 0x123
0x11f PUSH2 0x386
0x122 JUMP
---
0x11a: JUMPDEST 
0x11c: V90 = 0x123
0x11f: V91 = 0x386
0x122: JUMP 0x386
---
Entry stack: [V13, V86]
Stack pops: 1
Stack additions: [0x123]
Exit stack: [V13, 0x123]

================================

Block 0x123
[0x123:0x134]
---
Predecessors: [0x386, 0x395, 0x39b]
Successors: []
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 DUP1
0x127 MLOAD
0x128 SWAP2
0x129 DUP3
0x12a MSTORE
0x12b MLOAD
0x12c SWAP1
0x12d DUP2
0x12e SWAP1
0x12f SUB
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP1
0x134 RETURN
---
0x123: JUMPDEST 
0x124: V92 = 0x40
0x127: V93 = M[0x40]
0x12a: M[V93] = S0
0x12b: V94 = M[0x40]
0x12f: V95 = SUB V93 V94
0x130: V96 = 0x20
0x132: V97 = ADD 0x20 V95
0x134: RETURN V94 V97
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x135
[0x135:0x13c]
---
Predecessors: [0x32]
Successors: [0x13d, 0x141]
---
0x135 JUMPDEST
0x136 CALLVALUE
0x137 DUP1
0x138 ISZERO
0x139 PUSH2 0x141
0x13c JUMPI
---
0x135: JUMPDEST 
0x136: V98 = CALLVALUE
0x138: V99 = ISZERO V98
0x139: V100 = 0x141
0x13c: JUMPI 0x141 V99
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V13, V98]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x135]
Successors: []
---
0x13d PUSH1 0x0
0x13f DUP1
0x140 REVERT
---
0x13d: V101 = 0x0
0x140: REVERT 0x0 0x0
---
Entry stack: [V13, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V98]

================================

Block 0x141
[0x141:0x149]
---
Predecessors: [0x135]
Successors: [0x38c]
---
0x141 JUMPDEST
0x142 POP
0x143 PUSH2 0x14a
0x146 PUSH2 0x38c
0x149 JUMP
---
0x141: JUMPDEST 
0x143: V102 = 0x14a
0x146: V103 = 0x38c
0x149: JUMP 0x38c
---
Entry stack: [V13, V98]
Stack pops: 1
Stack additions: [0x14a]
Exit stack: [V13, 0x14a]

================================

Block 0x14a
[0x14a:0x15f]
---
Predecessors: [0x38c]
Successors: []
---
0x14a JUMPDEST
0x14b PUSH1 0x40
0x14d DUP1
0x14e MLOAD
0x14f PUSH1 0xff
0x151 SWAP1
0x152 SWAP3
0x153 AND
0x154 DUP3
0x155 MSTORE
0x156 MLOAD
0x157 SWAP1
0x158 DUP2
0x159 SWAP1
0x15a SUB
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP1
0x15f RETURN
---
0x14a: JUMPDEST 
0x14b: V104 = 0x40
0x14e: V105 = M[0x40]
0x14f: V106 = 0xff
0x153: V107 = AND V299 0xff
0x155: M[V105] = V107
0x156: V108 = M[0x40]
0x15a: V109 = SUB V105 V108
0x15b: V110 = 0x20
0x15d: V111 = ADD 0x20 V109
0x15f: RETURN V108 V111
---
Entry stack: [V13, V299]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x160
[0x160:0x167]
---
Predecessors: [0x3d]
Successors: [0x168, 0x16c]
---
0x160 JUMPDEST
0x161 CALLVALUE
0x162 DUP1
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x160: JUMPDEST 
0x161: V112 = CALLVALUE
0x163: V113 = ISZERO V112
0x164: V114 = 0x16c
0x167: JUMPI 0x16c V113
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V112]
Exit stack: [V13, V112]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x160]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V115 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V13, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V112]

================================

Block 0x16c
[0x16c:0x174]
---
Predecessors: [0x160]
Successors: [0x395]
---
0x16c JUMPDEST
0x16d POP
0x16e PUSH2 0x123
0x171 PUSH2 0x395
0x174 JUMP
---
0x16c: JUMPDEST 
0x16e: V116 = 0x123
0x171: V117 = 0x395
0x174: JUMP 0x395
---
Entry stack: [V13, V112]
Stack pops: 1
Stack additions: [0x123]
Exit stack: [V13, 0x123]

================================

Block 0x175
[0x175:0x17c]
---
Predecessors: [0x48]
Successors: [0x17d, 0x181]
---
0x175 JUMPDEST
0x176 CALLVALUE
0x177 DUP1
0x178 ISZERO
0x179 PUSH2 0x181
0x17c JUMPI
---
0x175: JUMPDEST 
0x176: V118 = CALLVALUE
0x178: V119 = ISZERO V118
0x179: V120 = 0x181
0x17c: JUMPI 0x181 V119
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V13, V118]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x175]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V121 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V13, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V118]

================================

Block 0x181
[0x181:0x195]
---
Predecessors: [0x175]
Successors: [0x39b]
---
0x181 JUMPDEST
0x182 POP
0x183 PUSH2 0x123
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e PUSH1 0x4
0x190 CALLDATALOAD
0x191 AND
0x192 PUSH2 0x39b
0x195 JUMP
---
0x181: JUMPDEST 
0x183: V122 = 0x123
0x186: V123 = 0x1
0x188: V124 = 0xa0
0x18a: V125 = 0x2
0x18c: V126 = EXP 0x2 0xa0
0x18d: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18e: V128 = 0x4
0x190: V129 = CALLDATALOAD 0x4
0x191: V130 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x192: V131 = 0x39b
0x195: JUMP 0x39b
---
Entry stack: [V13, V118]
Stack pops: 1
Stack additions: [0x123, V130]
Exit stack: [V13, 0x123, V130]

================================

Block 0x196
[0x196:0x19d]
---
Predecessors: [0x53]
Successors: [0x19e, 0x1a2]
---
0x196 JUMPDEST
0x197 CALLVALUE
0x198 DUP1
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x196: JUMPDEST 
0x197: V132 = CALLVALUE
0x199: V133 = ISZERO V132
0x19a: V134 = 0x1a2
0x19d: JUMPI 0x1a2 V133
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V132]
Exit stack: [V13, V132]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x196]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V135 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V13, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V132]

================================

Block 0x1a2
[0x1a2:0x1aa]
---
Predecessors: [0x196]
Successors: [0x3b6]
---
0x1a2 JUMPDEST
0x1a3 POP
0x1a4 PUSH2 0x99
0x1a7 PUSH2 0x3b6
0x1aa JUMP
---
0x1a2: JUMPDEST 
0x1a4: V136 = 0x99
0x1a7: V137 = 0x3b6
0x1aa: JUMP 0x3b6
---
Entry stack: [V13, V132]
Stack pops: 1
Stack additions: [0x99]
Exit stack: [V13, 0x99]

================================

Block 0x1ab
[0x1ab:0x1b2]
---
Predecessors: [0x5e]
Successors: [0x1b3, 0x1b7]
---
0x1ab JUMPDEST
0x1ac CALLVALUE
0x1ad DUP1
0x1ae ISZERO
0x1af PUSH2 0x1b7
0x1b2 JUMPI
---
0x1ab: JUMPDEST 
0x1ac: V138 = CALLVALUE
0x1ae: V139 = ISZERO V138
0x1af: V140 = 0x1b7
0x1b2: JUMPI 0x1b7 V139
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V138]
Exit stack: [V13, V138]

================================

Block 0x1b3
[0x1b3:0x1b6]
---
Predecessors: [0x1ab]
Successors: []
---
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 REVERT
---
0x1b3: V141 = 0x0
0x1b6: REVERT 0x0 0x0
---
Entry stack: [V13, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V138]

================================

Block 0x1b7
[0x1b7:0x1ce]
---
Predecessors: [0x1ab]
Successors: [0x417]
---
0x1b7 JUMPDEST
0x1b8 POP
0x1b9 PUSH2 0x1cf
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 PUSH1 0x4
0x1c6 CALLDATALOAD
0x1c7 AND
0x1c8 PUSH1 0x24
0x1ca CALLDATALOAD
0x1cb PUSH2 0x417
0x1ce JUMP
---
0x1b7: JUMPDEST 
0x1b9: V142 = 0x1cf
0x1bc: V143 = 0x1
0x1be: V144 = 0xa0
0x1c0: V145 = 0x2
0x1c2: V146 = EXP 0x2 0xa0
0x1c3: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c4: V148 = 0x4
0x1c6: V149 = CALLDATALOAD 0x4
0x1c7: V150 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: V151 = 0x24
0x1ca: V152 = CALLDATALOAD 0x24
0x1cb: V153 = 0x417
0x1ce: JUMP 0x417
---
Entry stack: [V13, V138]
Stack pops: 1
Stack additions: [0x1cf, V150, V152]
Exit stack: [V13, 0x1cf, V150, V152]

================================

Block 0x1cf
[0x1cf:0x1e2]
---
Predecessors: [0x446, 0x47a, 0x6b8, 0x83c]
Successors: []
---
0x1cf JUMPDEST
0x1d0 PUSH1 0x40
0x1d2 DUP1
0x1d3 MLOAD
0x1d4 SWAP2
0x1d5 ISZERO
0x1d6 ISZERO
0x1d7 DUP3
0x1d8 MSTORE
0x1d9 MLOAD
0x1da SWAP1
0x1db DUP2
0x1dc SWAP1
0x1dd SUB
0x1de PUSH1 0x20
0x1e0 ADD
0x1e1 SWAP1
0x1e2 RETURN
---
0x1cf: JUMPDEST 
0x1d0: V154 = 0x40
0x1d3: V155 = M[0x40]
0x1d5: V156 = ISZERO 0x1
0x1d6: V157 = ISZERO 0x0
0x1d8: M[V155] = 0x1
0x1d9: V158 = M[0x40]
0x1dd: V159 = SUB V155 V158
0x1de: V160 = 0x20
0x1e0: V161 = ADD 0x20 V159
0x1e2: RETURN V158 V161
---
Entry stack: [V13, 0x1cf, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1cf, S4, S3, S2, S1]

================================

Block 0x1e3
[0x1e3:0x1ea]
---
Predecessors: [0x69]
Successors: [0x1eb, 0x1ef]
---
0x1e3 JUMPDEST
0x1e4 CALLVALUE
0x1e5 DUP1
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V162 = CALLVALUE
0x1e6: V163 = ISZERO V162
0x1e7: V164 = 0x1ef
0x1ea: JUMPI 0x1ef V163
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V162]
Exit stack: [V13, V162]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1e3]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V165 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V13, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V162]

================================

Block 0x1ef
[0x1ef:0x24b]
---
Predecessors: [0x1e3]
Successors: [0x44d]
---
0x1ef JUMPDEST
0x1f0 POP
0x1f1 PUSH1 0x40
0x1f3 DUP1
0x1f4 MLOAD
0x1f5 PUSH1 0x20
0x1f7 PUSH1 0x4
0x1f9 PUSH1 0x44
0x1fb CALLDATALOAD
0x1fc DUP2
0x1fd DUP2
0x1fe ADD
0x1ff CALLDATALOAD
0x200 PUSH1 0x1f
0x202 DUP2
0x203 ADD
0x204 DUP5
0x205 SWAP1
0x206 DIV
0x207 DUP5
0x208 MUL
0x209 DUP6
0x20a ADD
0x20b DUP5
0x20c ADD
0x20d SWAP1
0x20e SWAP6
0x20f MSTORE
0x210 DUP5
0x211 DUP5
0x212 MSTORE
0x213 PUSH2 0x1cf
0x216 SWAP5
0x217 DUP3
0x218 CALLDATALOAD
0x219 PUSH1 0x1
0x21b PUSH1 0xa0
0x21d PUSH1 0x2
0x21f EXP
0x220 SUB
0x221 AND
0x222 SWAP5
0x223 PUSH1 0x24
0x225 DUP1
0x226 CALLDATALOAD
0x227 SWAP6
0x228 CALLDATASIZE
0x229 SWAP6
0x22a SWAP5
0x22b PUSH1 0x64
0x22d SWAP5
0x22e SWAP3
0x22f ADD
0x230 SWAP2
0x231 SWAP1
0x232 DUP2
0x233 SWAP1
0x234 DUP5
0x235 ADD
0x236 DUP4
0x237 DUP3
0x238 DUP1
0x239 DUP3
0x23a DUP5
0x23b CALLDATACOPY
0x23c POP
0x23d SWAP5
0x23e SWAP8
0x23f POP
0x240 PUSH2 0x44d
0x243 SWAP7
0x244 POP
0x245 POP
0x246 POP
0x247 POP
0x248 POP
0x249 POP
0x24a POP
0x24b JUMP
---
0x1ef: JUMPDEST 
0x1f1: V166 = 0x40
0x1f4: V167 = M[0x40]
0x1f5: V168 = 0x20
0x1f7: V169 = 0x4
0x1f9: V170 = 0x44
0x1fb: V171 = CALLDATALOAD 0x44
0x1fe: V172 = ADD V171 0x4
0x1ff: V173 = CALLDATALOAD V172
0x200: V174 = 0x1f
0x203: V175 = ADD V173 0x1f
0x206: V176 = DIV V175 0x20
0x208: V177 = MUL 0x20 V176
0x20a: V178 = ADD V167 V177
0x20c: V179 = ADD 0x20 V178
0x20f: M[0x40] = V179
0x212: M[V167] = V173
0x213: V180 = 0x1cf
0x218: V181 = CALLDATALOAD 0x4
0x219: V182 = 0x1
0x21b: V183 = 0xa0
0x21d: V184 = 0x2
0x21f: V185 = EXP 0x2 0xa0
0x220: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x221: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x223: V188 = 0x24
0x226: V189 = CALLDATALOAD 0x24
0x228: V190 = CALLDATASIZE
0x22b: V191 = 0x64
0x22f: V192 = ADD 0x24 V171
0x235: V193 = ADD V167 0x20
0x23b: CALLDATACOPY V193 V192 V173
0x240: V194 = 0x44d
0x24b: JUMP 0x44d
---
Entry stack: [V13, V162]
Stack pops: 1
Stack additions: [0x1cf, V187, V189, V167]
Exit stack: [V13, 0x1cf, V187, V189, V167]

================================

Block 0x24c
[0x24c:0x253]
---
Predecessors: [0x74]
Successors: [0x254, 0x258]
---
0x24c JUMPDEST
0x24d CALLVALUE
0x24e DUP1
0x24f ISZERO
0x250 PUSH2 0x258
0x253 JUMPI
---
0x24c: JUMPDEST 
0x24d: V195 = CALLVALUE
0x24f: V196 = ISZERO V195
0x250: V197 = 0x258
0x253: JUMPI 0x258 V196
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V195]
Exit stack: [V13, V195]

================================

Block 0x254
[0x254:0x257]
---
Predecessors: [0x24c]
Successors: []
---
0x254 PUSH1 0x0
0x256 DUP1
0x257 REVERT
---
0x254: V198 = 0x0
0x257: REVERT 0x0 0x0
---
Entry stack: [V13, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V195]

================================

Block 0x258
[0x258:0x2f2]
---
Predecessors: [0x24c]
Successors: [0x481]
---
0x258 JUMPDEST
0x259 POP
0x25a PUSH1 0x40
0x25c DUP1
0x25d MLOAD
0x25e PUSH1 0x20
0x260 PUSH1 0x4
0x262 PUSH1 0x44
0x264 CALLDATALOAD
0x265 DUP2
0x266 DUP2
0x267 ADD
0x268 CALLDATALOAD
0x269 PUSH1 0x1f
0x26b DUP2
0x26c ADD
0x26d DUP5
0x26e SWAP1
0x26f DIV
0x270 DUP5
0x271 MUL
0x272 DUP6
0x273 ADD
0x274 DUP5
0x275 ADD
0x276 SWAP1
0x277 SWAP6
0x278 MSTORE
0x279 DUP5
0x27a DUP5
0x27b MSTORE
0x27c PUSH2 0x1cf
0x27f SWAP5
0x280 DUP3
0x281 CALLDATALOAD
0x282 PUSH1 0x1
0x284 PUSH1 0xa0
0x286 PUSH1 0x2
0x288 EXP
0x289 SUB
0x28a AND
0x28b SWAP5
0x28c PUSH1 0x24
0x28e DUP1
0x28f CALLDATALOAD
0x290 SWAP6
0x291 CALLDATASIZE
0x292 SWAP6
0x293 SWAP5
0x294 PUSH1 0x64
0x296 SWAP5
0x297 SWAP3
0x298 ADD
0x299 SWAP2
0x29a SWAP1
0x29b DUP2
0x29c SWAP1
0x29d DUP5
0x29e ADD
0x29f DUP4
0x2a0 DUP3
0x2a1 DUP1
0x2a2 DUP3
0x2a3 DUP5
0x2a4 CALLDATACOPY
0x2a5 POP
0x2a6 POP
0x2a7 PUSH1 0x40
0x2a9 DUP1
0x2aa MLOAD
0x2ab PUSH1 0x20
0x2ad PUSH1 0x1f
0x2af DUP10
0x2b0 CALLDATALOAD
0x2b1 DUP12
0x2b2 ADD
0x2b3 DUP1
0x2b4 CALLDATALOAD
0x2b5 SWAP2
0x2b6 DUP3
0x2b7 ADD
0x2b8 DUP4
0x2b9 SWAP1
0x2ba DIV
0x2bb DUP4
0x2bc MUL
0x2bd DUP5
0x2be ADD
0x2bf DUP4
0x2c0 ADD
0x2c1 SWAP1
0x2c2 SWAP5
0x2c3 MSTORE
0x2c4 DUP1
0x2c5 DUP4
0x2c6 MSTORE
0x2c7 SWAP8
0x2c8 SWAP11
0x2c9 SWAP10
0x2ca SWAP9
0x2cb DUP2
0x2cc ADD
0x2cd SWAP8
0x2ce SWAP2
0x2cf SWAP7
0x2d0 POP
0x2d1 SWAP2
0x2d2 DUP3
0x2d3 ADD
0x2d4 SWAP5
0x2d5 POP
0x2d6 SWAP3
0x2d7 POP
0x2d8 DUP3
0x2d9 SWAP2
0x2da POP
0x2db DUP5
0x2dc ADD
0x2dd DUP4
0x2de DUP3
0x2df DUP1
0x2e0 DUP3
0x2e1 DUP5
0x2e2 CALLDATACOPY
0x2e3 POP
0x2e4 SWAP5
0x2e5 SWAP8
0x2e6 POP
0x2e7 PUSH2 0x481
0x2ea SWAP7
0x2eb POP
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 POP
0x2f1 POP
0x2f2 JUMP
---
0x258: JUMPDEST 
0x25a: V199 = 0x40
0x25d: V200 = M[0x40]
0x25e: V201 = 0x20
0x260: V202 = 0x4
0x262: V203 = 0x44
0x264: V204 = CALLDATALOAD 0x44
0x267: V205 = ADD V204 0x4
0x268: V206 = CALLDATALOAD V205
0x269: V207 = 0x1f
0x26c: V208 = ADD V206 0x1f
0x26f: V209 = DIV V208 0x20
0x271: V210 = MUL 0x20 V209
0x273: V211 = ADD V200 V210
0x275: V212 = ADD 0x20 V211
0x278: M[0x40] = V212
0x27b: M[V200] = V206
0x27c: V213 = 0x1cf
0x281: V214 = CALLDATALOAD 0x4
0x282: V215 = 0x1
0x284: V216 = 0xa0
0x286: V217 = 0x2
0x288: V218 = EXP 0x2 0xa0
0x289: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28a: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x28c: V221 = 0x24
0x28f: V222 = CALLDATALOAD 0x24
0x291: V223 = CALLDATASIZE
0x294: V224 = 0x64
0x298: V225 = ADD 0x24 V204
0x29e: V226 = ADD V200 0x20
0x2a4: CALLDATACOPY V226 V225 V206
0x2a7: V227 = 0x40
0x2aa: V228 = M[0x40]
0x2ab: V229 = 0x20
0x2ad: V230 = 0x1f
0x2b0: V231 = CALLDATALOAD 0x64
0x2b2: V232 = ADD 0x4 V231
0x2b4: V233 = CALLDATALOAD V232
0x2b7: V234 = ADD V233 0x1f
0x2ba: V235 = DIV V234 0x20
0x2bc: V236 = MUL 0x20 V235
0x2be: V237 = ADD V228 V236
0x2c0: V238 = ADD 0x20 V237
0x2c3: M[0x40] = V238
0x2c6: M[V228] = V233
0x2cc: V239 = ADD 0x20 0x64
0x2d3: V240 = ADD 0x20 V232
0x2dc: V241 = ADD V228 0x20
0x2e2: CALLDATACOPY V241 V240 V233
0x2e7: V242 = 0x481
0x2f2: JUMP 0x481
---
Entry stack: [V13, V195]
Stack pops: 1
Stack additions: [0x1cf, V220, V222, V200, V228]
Exit stack: [V13, 0x1cf, V220, V222, V200, V228]

================================

Block 0x2f3
[0x2f3:0x335]
---
Predecessors: [0x90]
Successors: [0x336, 0x37c]
---
0x2f3 JUMPDEST
0x2f4 PUSH1 0x2
0x2f6 DUP1
0x2f7 SLOAD
0x2f8 PUSH1 0x40
0x2fa DUP1
0x2fb MLOAD
0x2fc PUSH1 0x20
0x2fe PUSH1 0x1f
0x300 PUSH1 0x0
0x302 NOT
0x303 PUSH2 0x100
0x306 PUSH1 0x1
0x308 DUP8
0x309 AND
0x30a ISZERO
0x30b MUL
0x30c ADD
0x30d SWAP1
0x30e SWAP5
0x30f AND
0x310 DUP6
0x311 SWAP1
0x312 DIV
0x313 SWAP4
0x314 DUP5
0x315 ADD
0x316 DUP2
0x317 SWAP1
0x318 DIV
0x319 DUP2
0x31a MUL
0x31b DUP3
0x31c ADD
0x31d DUP2
0x31e ADD
0x31f SWAP1
0x320 SWAP3
0x321 MSTORE
0x322 DUP3
0x323 DUP2
0x324 MSTORE
0x325 PUSH1 0x60
0x327 SWAP4
0x328 SWAP1
0x329 SWAP3
0x32a SWAP1
0x32b SWAP2
0x32c DUP4
0x32d ADD
0x32e DUP3
0x32f DUP3
0x330 DUP1
0x331 ISZERO
0x332 PUSH2 0x37c
0x335 JUMPI
---
0x2f3: JUMPDEST 
0x2f4: V243 = 0x2
0x2f7: V244 = S[0x2]
0x2f8: V245 = 0x40
0x2fb: V246 = M[0x40]
0x2fc: V247 = 0x20
0x2fe: V248 = 0x1f
0x300: V249 = 0x0
0x302: V250 = NOT 0x0
0x303: V251 = 0x100
0x306: V252 = 0x1
0x309: V253 = AND V244 0x1
0x30a: V254 = ISZERO V253
0x30b: V255 = MUL V254 0x100
0x30c: V256 = ADD V255 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x30f: V257 = AND V244 V256
0x312: V258 = DIV V257 0x2
0x315: V259 = ADD V258 0x1f
0x318: V260 = DIV V259 0x20
0x31a: V261 = MUL 0x20 V260
0x31c: V262 = ADD V246 V261
0x31e: V263 = ADD 0x20 V262
0x321: M[0x40] = V263
0x324: M[V246] = V258
0x325: V264 = 0x60
0x32d: V265 = ADD V246 0x20
0x331: V266 = ISZERO V258
0x332: V267 = 0x37c
0x335: JUMPI 0x37c V266
---
Entry stack: [V13, 0x99]
Stack pops: 0
Stack additions: [0x60, V246, 0x2, V258, V265, 0x2, V258]
Exit stack: [V13, 0x99, 0x60, V246, 0x2, V258, V265, 0x2, V258]

================================

Block 0x336
[0x336:0x33d]
---
Predecessors: [0x2f3]
Successors: [0x33e, 0x351]
---
0x336 DUP1
0x337 PUSH1 0x1f
0x339 LT
0x33a PUSH2 0x351
0x33d JUMPI
---
0x337: V268 = 0x1f
0x339: V269 = LT 0x1f V258
0x33a: V270 = 0x351
0x33d: JUMPI 0x351 V269
---
Entry stack: [V13, 0x99, 0x60, V246, 0x2, V258, V265, 0x2, V258]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x99, 0x60, V246, 0x2, V258, V265, 0x2, V258]

================================

Block 0x33e
[0x33e:0x350]
---
Predecessors: [0x336]
Successors: [0x37c]
---
0x33e PUSH2 0x100
0x341 DUP1
0x342 DUP4
0x343 SLOAD
0x344 DIV
0x345 MUL
0x346 DUP4
0x347 MSTORE
0x348 SWAP2
0x349 PUSH1 0x20
0x34b ADD
0x34c SWAP2
0x34d PUSH2 0x37c
0x350 JUMP
---
0x33e: V271 = 0x100
0x343: V272 = S[0x2]
0x344: V273 = DIV V272 0x100
0x345: V274 = MUL V273 0x100
0x347: M[V265] = V274
0x349: V275 = 0x20
0x34b: V276 = ADD 0x20 V265
0x34d: V277 = 0x37c
0x350: JUMP 0x37c
---
Entry stack: [V13, 0x99, 0x60, V246, 0x2, V258, V265, 0x2, V258]
Stack pops: 3
Stack additions: [V276, S1, S0]
Exit stack: [V13, 0x99, 0x60, V246, 0x2, V258, V276, 0x2, V258]

================================

Block 0x351
[0x351:0x35e]
---
Predecessors: [0x336, 0x3fc]
Successors: [0x35f]
---
0x351 JUMPDEST
0x352 DUP3
0x353 ADD
0x354 SWAP2
0x355 SWAP1
0x356 PUSH1 0x0
0x358 MSTORE
0x359 PUSH1 0x20
0x35b PUSH1 0x0
0x35d SHA3
0x35e SWAP1
---
0x351: JUMPDEST 
0x353: V278 = ADD S2 S0
0x356: V279 = 0x0
0x358: M[0x0] = {0x2, 0x3}
0x359: V280 = 0x20
0x35b: V281 = 0x0
0x35d: V282 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x99, 0x60, S5, {0x2, 0x3}, S3, S2, {0x2, 0x3}, S0]
Stack pops: 3
Stack additions: [V278, V282, S2]
Exit stack: [V13, 0x99, 0x60, S5, {0x2, 0x3}, S3, V278, V282, S2]

================================

Block 0x35f
[0x35f:0x372]
---
Predecessors: [0x351, 0x35f]
Successors: [0x35f, 0x373]
---
0x35f JUMPDEST
0x360 DUP2
0x361 SLOAD
0x362 DUP2
0x363 MSTORE
0x364 SWAP1
0x365 PUSH1 0x1
0x367 ADD
0x368 SWAP1
0x369 PUSH1 0x20
0x36b ADD
0x36c DUP1
0x36d DUP4
0x36e GT
0x36f PUSH2 0x35f
0x372 JUMPI
---
0x35f: JUMPDEST 
0x361: V283 = S[S1]
0x363: M[S0] = V283
0x365: V284 = 0x1
0x367: V285 = ADD 0x1 S1
0x369: V286 = 0x20
0x36b: V287 = ADD 0x20 S0
0x36e: V288 = GT V278 V287
0x36f: V289 = 0x35f
0x372: JUMPI 0x35f V288
---
Entry stack: [V13, 0x99, 0x60, S5, {0x2, 0x3}, S3, V278, S1, S0]
Stack pops: 3
Stack additions: [S2, V285, V287]
Exit stack: [V13, 0x99, 0x60, S5, {0x2, 0x3}, S3, V278, V285, V287]

================================

Block 0x373
[0x373:0x37b]
---
Predecessors: [0x35f]
Successors: [0x37c]
---
0x373 DUP3
0x374 SWAP1
0x375 SUB
0x376 PUSH1 0x1f
0x378 AND
0x379 DUP3
0x37a ADD
0x37b SWAP2
---
0x375: V290 = SUB V287 V278
0x376: V291 = 0x1f
0x378: V292 = AND 0x1f V290
0x37a: V293 = ADD V278 V292
---
Entry stack: [V13, 0x99, 0x60, S5, {0x2, 0x3}, S3, V278, V285, V287]
Stack pops: 3
Stack additions: [V293, S1, S2]
Exit stack: [V13, 0x99, 0x60, S5, {0x2, 0x3}, S3, V293, V285, V278]

================================

Block 0x37c
[0x37c:0x385]
---
Predecessors: [0x2f3, 0x33e, 0x373, 0x3b6, 0x404]
Successors: [0x99]
---
0x37c JUMPDEST
0x37d POP
0x37e POP
0x37f POP
0x380 POP
0x381 POP
0x382 SWAP1
0x383 POP
0x384 SWAP1
0x385 JUMP
---
0x37c: JUMPDEST 
0x385: JUMP 0x99
---
Entry stack: [V13, 0x99, 0x60, S5, {0x2, 0x3}, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V13, S5]

================================

Block 0x386
[0x386:0x38b]
---
Predecessors: [0x11a]
Successors: [0x123]
---
0x386 JUMPDEST
0x387 PUSH1 0x5
0x389 SLOAD
0x38a SWAP1
0x38b JUMP
---
0x386: JUMPDEST 
0x387: V294 = 0x5
0x389: V295 = S[0x5]
0x38b: JUMP 0x123
---
Entry stack: [V13, 0x123]
Stack pops: 1
Stack additions: [V295]
Exit stack: [V13, V295]

================================

Block 0x38c
[0x38c:0x394]
---
Predecessors: [0x141]
Successors: [0x14a]
---
0x38c JUMPDEST
0x38d PUSH1 0x4
0x38f SLOAD
0x390 PUSH1 0xff
0x392 AND
0x393 SWAP1
0x394 JUMP
---
0x38c: JUMPDEST 
0x38d: V296 = 0x4
0x38f: V297 = S[0x4]
0x390: V298 = 0xff
0x392: V299 = AND 0xff V297
0x394: JUMP 0x14a
---
Entry stack: [V13, 0x14a]
Stack pops: 1
Stack additions: [V299]
Exit stack: [V13, V299]

================================

Block 0x395
[0x395:0x39a]
---
Predecessors: [0x16c]
Successors: [0x123]
---
0x395 JUMPDEST
0x396 PUSH1 0x0
0x398 NOT
0x399 DUP2
0x39a JUMP
---
0x395: JUMPDEST 
0x396: V300 = 0x0
0x398: V301 = NOT 0x0
0x39a: JUMP 0x123
---
Entry stack: [V13, 0x123]
Stack pops: 1
Stack additions: [S0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]
Exit stack: [V13, 0x123, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]

================================

Block 0x39b
[0x39b:0x3b5]
---
Predecessors: [0x181, 0x492, 0x4a6, 0x4b8, 0x6c8, 0x6e0, 0x6ec, 0x8ae, 0x8c5, 0x8d7]
Successors: [0x123, 0x49b, 0x4b2, 0x4d4, 0x6d5, 0x8ba, 0x8d1, 0x8f3]
---
0x39b JUMPDEST
0x39c PUSH1 0x1
0x39e PUSH1 0xa0
0x3a0 PUSH1 0x2
0x3a2 EXP
0x3a3 SUB
0x3a4 AND
0x3a5 PUSH1 0x0
0x3a7 SWAP1
0x3a8 DUP2
0x3a9 MSTORE
0x3aa PUSH1 0x1
0x3ac PUSH1 0x20
0x3ae MSTORE
0x3af PUSH1 0x40
0x3b1 SWAP1
0x3b2 SHA3
0x3b3 SLOAD
0x3b4 SWAP1
0x3b5 JUMP
---
0x39b: JUMPDEST 
0x39c: V302 = 0x1
0x39e: V303 = 0xa0
0x3a0: V304 = 0x2
0x3a2: V305 = EXP 0x2 0xa0
0x3a3: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a4: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3a5: V308 = 0x0
0x3a9: M[0x0] = V307
0x3aa: V309 = 0x1
0x3ac: V310 = 0x20
0x3ae: M[0x20] = 0x1
0x3af: V311 = 0x40
0x3b2: V312 = SHA3 0x0 0x40
0x3b3: V313 = S[V312]
0x3b5: JUMP {0x123, 0x49b, 0x4b2, 0x4d4, 0x6d5, 0x8ba, 0x8d1, 0x8f3}
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x60}, S2, {0x123, 0x49b, 0x4b2, 0x4d4, 0x6d5, 0x8ba, 0x8d1, 0x8f3}, S0]
Stack pops: 2
Stack additions: [V313]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x60}, S2, V313]

================================

Block 0x3b6
[0x3b6:0x3fb]
---
Predecessors: [0x1a2]
Successors: [0x37c, 0x3fc]
---
0x3b6 JUMPDEST
0x3b7 PUSH1 0x3
0x3b9 DUP1
0x3ba SLOAD
0x3bb PUSH1 0x40
0x3bd DUP1
0x3be MLOAD
0x3bf PUSH1 0x20
0x3c1 PUSH1 0x1f
0x3c3 PUSH1 0x2
0x3c5 PUSH1 0x0
0x3c7 NOT
0x3c8 PUSH2 0x100
0x3cb PUSH1 0x1
0x3cd DUP9
0x3ce AND
0x3cf ISZERO
0x3d0 MUL
0x3d1 ADD
0x3d2 SWAP1
0x3d3 SWAP6
0x3d4 AND
0x3d5 SWAP5
0x3d6 SWAP1
0x3d7 SWAP5
0x3d8 DIV
0x3d9 SWAP4
0x3da DUP5
0x3db ADD
0x3dc DUP2
0x3dd SWAP1
0x3de DIV
0x3df DUP2
0x3e0 MUL
0x3e1 DUP3
0x3e2 ADD
0x3e3 DUP2
0x3e4 ADD
0x3e5 SWAP1
0x3e6 SWAP3
0x3e7 MSTORE
0x3e8 DUP3
0x3e9 DUP2
0x3ea MSTORE
0x3eb PUSH1 0x60
0x3ed SWAP4
0x3ee SWAP1
0x3ef SWAP3
0x3f0 SWAP1
0x3f1 SWAP2
0x3f2 DUP4
0x3f3 ADD
0x3f4 DUP3
0x3f5 DUP3
0x3f6 DUP1
0x3f7 ISZERO
0x3f8 PUSH2 0x37c
0x3fb JUMPI
---
0x3b6: JUMPDEST 
0x3b7: V314 = 0x3
0x3ba: V315 = S[0x3]
0x3bb: V316 = 0x40
0x3be: V317 = M[0x40]
0x3bf: V318 = 0x20
0x3c1: V319 = 0x1f
0x3c3: V320 = 0x2
0x3c5: V321 = 0x0
0x3c7: V322 = NOT 0x0
0x3c8: V323 = 0x100
0x3cb: V324 = 0x1
0x3ce: V325 = AND V315 0x1
0x3cf: V326 = ISZERO V325
0x3d0: V327 = MUL V326 0x100
0x3d1: V328 = ADD V327 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3d4: V329 = AND V315 V328
0x3d8: V330 = DIV V329 0x2
0x3db: V331 = ADD V330 0x1f
0x3de: V332 = DIV V331 0x20
0x3e0: V333 = MUL 0x20 V332
0x3e2: V334 = ADD V317 V333
0x3e4: V335 = ADD 0x20 V334
0x3e7: M[0x40] = V335
0x3ea: M[V317] = V330
0x3eb: V336 = 0x60
0x3f3: V337 = ADD V317 0x20
0x3f7: V338 = ISZERO V330
0x3f8: V339 = 0x37c
0x3fb: JUMPI 0x37c V338
---
Entry stack: [V13, 0x99]
Stack pops: 0
Stack additions: [0x60, V317, 0x3, V330, V337, 0x3, V330]
Exit stack: [V13, 0x99, 0x60, V317, 0x3, V330, V337, 0x3, V330]

================================

Block 0x3fc
[0x3fc:0x403]
---
Predecessors: [0x3b6]
Successors: [0x351, 0x404]
---
0x3fc DUP1
0x3fd PUSH1 0x1f
0x3ff LT
0x400 PUSH2 0x351
0x403 JUMPI
---
0x3fd: V340 = 0x1f
0x3ff: V341 = LT 0x1f V330
0x400: V342 = 0x351
0x403: JUMPI 0x351 V341
---
Entry stack: [V13, 0x99, 0x60, V317, 0x3, V330, V337, 0x3, V330]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x99, 0x60, V317, 0x3, V330, V337, 0x3, V330]

================================

Block 0x404
[0x404:0x416]
---
Predecessors: [0x3fc]
Successors: [0x37c]
---
0x404 PUSH2 0x100
0x407 DUP1
0x408 DUP4
0x409 SLOAD
0x40a DIV
0x40b MUL
0x40c DUP4
0x40d MSTORE
0x40e SWAP2
0x40f PUSH1 0x20
0x411 ADD
0x412 SWAP2
0x413 PUSH2 0x37c
0x416 JUMP
---
0x404: V343 = 0x100
0x409: V344 = S[0x3]
0x40a: V345 = DIV V344 0x100
0x40b: V346 = MUL V345 0x100
0x40d: M[V337] = V346
0x40f: V347 = 0x20
0x411: V348 = ADD 0x20 V337
0x413: V349 = 0x37c
0x416: JUMP 0x37c
---
Entry stack: [V13, 0x99, 0x60, V317, 0x3, V330, V337, 0x3, V330]
Stack pops: 3
Stack additions: [V348, S1, S0]
Exit stack: [V13, 0x99, 0x60, V317, 0x3, V330, V348, 0x3, V330]

================================

Block 0x417
[0x417:0x423]
---
Predecessors: [0x1b7]
Successors: [0x6c0]
---
0x417 JUMPDEST
0x418 PUSH1 0x0
0x41a PUSH1 0x60
0x41c PUSH2 0x424
0x41f DUP5
0x420 PUSH2 0x6c0
0x423 JUMP
---
0x417: JUMPDEST 
0x418: V350 = 0x0
0x41a: V351 = 0x60
0x41c: V352 = 0x424
0x420: V353 = 0x6c0
0x423: JUMP 0x6c0
---
Entry stack: [V13, 0x1cf, V150, V152]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x60, 0x424, S1]
Exit stack: [V13, 0x1cf, V150, V152, 0x0, 0x60, 0x424, V150]

================================

Block 0x424
[0x424:0x429]
---
Predecessors: [0x6c0]
Successors: [0x42a, 0x43b]
---
0x424 JUMPDEST
0x425 ISZERO
0x426 PUSH2 0x43b
0x429 JUMPI
---
0x424: JUMPDEST 
0x425: V354 = ISZERO V561
0x426: V355 = 0x43b
0x429: JUMPI 0x43b V354
---
Entry stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, V561]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}]

================================

Block 0x42a
[0x42a:0x433]
---
Predecessors: [0x424]
Successors: [0x6c8]
---
0x42a PUSH2 0x434
0x42d DUP5
0x42e DUP5
0x42f DUP4
0x430 PUSH2 0x6c8
0x433 JUMP
---
0x42a: V356 = 0x434
0x430: V357 = 0x6c8
0x433: JUMP 0x6c8
---
Entry stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x434, S3, S2, S0]
Exit stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}, 0x434, S3, S2, {0x0, 0x60}]

================================

Block 0x434
[0x434:0x43a]
---
Predecessors: [0x6b8, 0x83c, 0x947]
Successors: [0x446]
---
0x434 JUMPDEST
0x435 SWAP2
0x436 POP
0x437 PUSH2 0x446
0x43a JUMP
---
0x434: JUMPDEST 
0x437: V358 = 0x446
0x43a: JUMP 0x446
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V13, S6, S5, S4, S3, 0x1, S1]

================================

Block 0x43b
[0x43b:0x445]
---
Predecessors: [0x424]
Successors: [0x8ae]
---
0x43b JUMPDEST
0x43c PUSH2 0x434
0x43f DUP5
0x440 DUP5
0x441 DUP4
0x442 PUSH2 0x8ae
0x445 JUMP
---
0x43b: JUMPDEST 
0x43c: V359 = 0x434
0x442: V360 = 0x8ae
0x445: JUMP 0x8ae
---
Entry stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x434, S3, S2, S0]
Exit stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}, 0x434, S3, S2, {0x0, 0x60}]

================================

Block 0x446
[0x446:0x44c]
---
Predecessors: [0x434]
Successors: [0x1cf]
---
0x446 JUMPDEST
0x447 POP
0x448 SWAP3
0x449 SWAP2
0x44a POP
0x44b POP
0x44c JUMP
---
0x446: JUMPDEST 
0x44c: JUMP S4
---
Entry stack: [V13, S5, S4, S3, S2, 0x1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V13, S5, 0x1]

================================

Block 0x44d
[0x44d:0x457]
---
Predecessors: [0x1ef]
Successors: [0x6c0]
---
0x44d JUMPDEST
0x44e PUSH1 0x0
0x450 PUSH2 0x458
0x453 DUP5
0x454 PUSH2 0x6c0
0x457 JUMP
---
0x44d: JUMPDEST 
0x44e: V361 = 0x0
0x450: V362 = 0x458
0x454: V363 = 0x6c0
0x457: JUMP 0x6c0
---
Entry stack: [V13, 0x1cf, V187, V189, V167]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x458, S2]
Exit stack: [V13, 0x1cf, V187, V189, V167, 0x0, 0x458, V187]

================================

Block 0x458
[0x458:0x45d]
---
Predecessors: [0x6c0]
Successors: [0x45e, 0x46f]
---
0x458 JUMPDEST
0x459 ISZERO
0x45a PUSH2 0x46f
0x45d JUMPI
---
0x458: JUMPDEST 
0x459: V364 = ISZERO V561
0x45a: V365 = 0x46f
0x45d: JUMPI 0x46f V364
---
Entry stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, V561]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}]

================================

Block 0x45e
[0x45e:0x467]
---
Predecessors: [0x458]
Successors: [0x6c8]
---
0x45e PUSH2 0x468
0x461 DUP5
0x462 DUP5
0x463 DUP5
0x464 PUSH2 0x6c8
0x467 JUMP
---
0x45e: V366 = 0x468
0x464: V367 = 0x6c8
0x467: JUMP 0x6c8
---
Entry stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x468, S3, S2, S1]
Exit stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}, 0x468, S3, S2, S1]

================================

Block 0x468
[0x468:0x46e]
---
Predecessors: [0x6b8, 0x83c, 0x947]
Successors: [0x47a]
---
0x468 JUMPDEST
0x469 SWAP1
0x46a POP
0x46b PUSH2 0x47a
0x46e JUMP
---
0x468: JUMPDEST 
0x46b: V368 = 0x47a
0x46e: JUMP 0x47a
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, S6, S5, S4, S3, S2, 0x1]

================================

Block 0x46f
[0x46f:0x479]
---
Predecessors: [0x458]
Successors: [0x8ae]
---
0x46f JUMPDEST
0x470 PUSH2 0x468
0x473 DUP5
0x474 DUP5
0x475 DUP5
0x476 PUSH2 0x8ae
0x479 JUMP
---
0x46f: JUMPDEST 
0x470: V369 = 0x468
0x476: V370 = 0x8ae
0x479: JUMP 0x8ae
---
Entry stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x468, S3, S2, S1]
Exit stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}, 0x468, S3, S2, S1]

================================

Block 0x47a
[0x47a:0x480]
---
Predecessors: [0x468]
Successors: [0x1cf]
---
0x47a JUMPDEST
0x47b SWAP4
0x47c SWAP3
0x47d POP
0x47e POP
0x47f POP
0x480 JUMP
---
0x47a: JUMPDEST 
0x480: JUMP S4
---
Entry stack: [V13, S5, S4, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S5, 0x1]

================================

Block 0x481
[0x481:0x48b]
---
Predecessors: [0x258]
Successors: [0x6c0]
---
0x481 JUMPDEST
0x482 PUSH1 0x0
0x484 PUSH2 0x48c
0x487 DUP6
0x488 PUSH2 0x6c0
0x48b JUMP
---
0x481: JUMPDEST 
0x482: V371 = 0x0
0x484: V372 = 0x48c
0x488: V373 = 0x6c0
0x48b: JUMP 0x6c0
---
Entry stack: [V13, 0x1cf, V220, V222, V200, V228]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x48c, S3]
Exit stack: [V13, 0x1cf, V220, V222, V200, V228, 0x0, 0x48c, V220]

================================

Block 0x48c
[0x48c:0x491]
---
Predecessors: [0x6c0]
Successors: [0x492, 0x6aa]
---
0x48c JUMPDEST
0x48d ISZERO
0x48e PUSH2 0x6aa
0x491 JUMPI
---
0x48c: JUMPDEST 
0x48d: V374 = ISZERO V561
0x48e: V375 = 0x6aa
0x491: JUMPI 0x6aa V374
---
Entry stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, V561]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}]

================================

Block 0x492
[0x492:0x49a]
---
Predecessors: [0x48c]
Successors: [0x39b]
---
0x492 DUP4
0x493 PUSH2 0x49b
0x496 CALLER
0x497 PUSH2 0x39b
0x49a JUMP
---
0x493: V376 = 0x49b
0x496: V377 = CALLER
0x497: V378 = 0x39b
0x49a: JUMP 0x39b
---
Entry stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x49b, V377]
Exit stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}, S3, 0x49b, V377]

================================

Block 0x49b
[0x49b:0x4a1]
---
Predecessors: [0x39b]
Successors: [0x4a2, 0x4a6]
---
0x49b JUMPDEST
0x49c LT
0x49d ISZERO
0x49e PUSH2 0x4a6
0x4a1 JUMPI
---
0x49b: JUMPDEST 
0x49c: V379 = LT V313 S1
0x49d: V380 = ISZERO V379
0x49e: V381 = 0x4a6
0x4a1: JUMPI 0x4a6 V380
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}, S1, V313]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}]

================================

Block 0x4a2
[0x4a2:0x4a5]
---
Predecessors: [0x49b]
Successors: []
---
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 REVERT
---
0x4a2: V382 = 0x0
0x4a5: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}]

================================

Block 0x4a6
[0x4a6:0x4b1]
---
Predecessors: [0x49b]
Successors: [0x39b]
---
0x4a6 JUMPDEST
0x4a7 PUSH2 0x4b8
0x4aa PUSH2 0x4b2
0x4ad CALLER
0x4ae PUSH2 0x39b
0x4b1 JUMP
---
0x4a6: JUMPDEST 
0x4a7: V383 = 0x4b8
0x4aa: V384 = 0x4b2
0x4ad: V385 = CALLER
0x4ae: V386 = 0x39b
0x4b1: JUMP 0x39b
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 0
Stack additions: [0x4b8, 0x4b2, V385]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}, 0x4b8, 0x4b2, V385]

================================

Block 0x4b2
[0x4b2:0x4b7]
---
Predecessors: [0x39b]
Successors: [0x9b8]
---
0x4b2 JUMPDEST
0x4b3 DUP6
0x4b4 PUSH2 0x9b8
0x4b7 JUMP
---
0x4b2: JUMPDEST 
0x4b4: V387 = 0x9b8
0x4b7: JUMP 0x9b8
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}, S1, V313]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}, S1, V313, S5]

================================

Block 0x4b8
[0x4b8:0x4d3]
---
Predecessors: [0x9c7]
Successors: [0x39b]
---
0x4b8 JUMPDEST
0x4b9 CALLER
0x4ba PUSH1 0x0
0x4bc SWAP1
0x4bd DUP2
0x4be MSTORE
0x4bf PUSH1 0x1
0x4c1 PUSH1 0x20
0x4c3 MSTORE
0x4c4 PUSH1 0x40
0x4c6 SWAP1
0x4c7 SHA3
0x4c8 SSTORE
0x4c9 PUSH2 0x4da
0x4cc PUSH2 0x4d4
0x4cf DUP7
0x4d0 PUSH2 0x39b
0x4d3 JUMP
---
0x4b8: JUMPDEST 
0x4b9: V388 = CALLER
0x4ba: V389 = 0x0
0x4be: M[0x0] = V388
0x4bf: V390 = 0x1
0x4c1: V391 = 0x20
0x4c3: M[0x20] = 0x1
0x4c4: V392 = 0x40
0x4c7: V393 = SHA3 0x0 0x40
0x4c8: S[V393] = V786
0x4c9: V394 = 0x4da
0x4cc: V395 = 0x4d4
0x4d0: V396 = 0x39b
0x4d3: JUMP 0x39b
---
Entry stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, 0x0, V786]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x4da, 0x4d4, S5]
Exit stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, 0x0, 0x4da, 0x4d4, S5]

================================

Block 0x4d4
[0x4d4:0x4d9]
---
Predecessors: [0x39b]
Successors: [0x9cd]
---
0x4d4 JUMPDEST
0x4d5 DUP6
0x4d6 PUSH2 0x9cd
0x4d9 JUMP
---
0x4d4: JUMPDEST 
0x4d6: V397 = 0x9cd
0x4d9: JUMP 0x9cd
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}, S1, V313]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}, S1, V313, S5]

================================

Block 0x4da
[0x4da:0x50c]
---
Predecessors: [0x9e0]
Successors: [0x50d]
---
0x4da JUMPDEST
0x4db PUSH1 0x1
0x4dd PUSH1 0xa0
0x4df PUSH1 0x2
0x4e1 EXP
0x4e2 SUB
0x4e3 DUP7
0x4e4 AND
0x4e5 PUSH1 0x0
0x4e7 DUP2
0x4e8 DUP2
0x4e9 MSTORE
0x4ea PUSH1 0x1
0x4ec PUSH1 0x20
0x4ee SWAP1
0x4ef DUP2
0x4f0 MSTORE
0x4f1 PUSH1 0x40
0x4f3 DUP1
0x4f4 DUP4
0x4f5 SHA3
0x4f6 SWAP5
0x4f7 SWAP1
0x4f8 SWAP5
0x4f9 SSTORE
0x4fa SWAP3
0x4fb MLOAD
0x4fc DUP6
0x4fd MLOAD
0x4fe SWAP3
0x4ff SWAP4
0x500 SWAP2
0x501 SWAP3
0x502 DUP7
0x503 SWAP3
0x504 DUP3
0x505 SWAP2
0x506 SWAP1
0x507 DUP5
0x508 ADD
0x509 SWAP1
0x50a DUP1
0x50b DUP4
0x50c DUP4
---
0x4da: JUMPDEST 
0x4db: V398 = 0x1
0x4dd: V399 = 0xa0
0x4df: V400 = 0x2
0x4e1: V401 = EXP 0x2 0xa0
0x4e2: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e4: V403 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x4e5: V404 = 0x0
0x4e9: M[0x0] = V403
0x4ea: V405 = 0x1
0x4ec: V406 = 0x20
0x4f0: M[0x20] = 0x1
0x4f1: V407 = 0x40
0x4f5: V408 = SHA3 0x0 0x40
0x4f9: S[V408] = V795
0x4fb: V409 = M[0x40]
0x4fd: V410 = M[S2]
0x508: V411 = ADD S2 0x20
---
Entry stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, 0x0, V795]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V403, 0x0, S2, V409, V409, V411, V410, V410, V409, V411]
Exit stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, 0x0, V403, 0x0, S2, V409, V409, V411, V410, V410, V409, V411]

================================

Block 0x50d
[0x50d:0x515]
---
Predecessors: [0x4da, 0x516]
Successors: [0x516, 0x52c]
---
0x50d JUMPDEST
0x50e PUSH1 0x20
0x510 DUP4
0x511 LT
0x512 PUSH2 0x52c
0x515 JUMPI
---
0x50d: JUMPDEST 
0x50e: V412 = 0x20
0x511: V413 = LT S2 0x20
0x512: V414 = 0x52c
0x515: JUMPI 0x52c V413
---
Entry stack: [V13, S20, S19, S18, S17, S16, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S14, S13, S12, S11, 0x0, V403, 0x0, S7, V409, V409, V411, V410, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S20, S19, S18, S17, S16, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S14, S13, S12, S11, 0x0, V403, 0x0, S7, V409, V409, V411, V410, S2, S1, S0]

================================

Block 0x516
[0x516:0x52b]
---
Predecessors: [0x50d]
Successors: [0x50d]
---
0x516 DUP1
0x517 MLOAD
0x518 DUP3
0x519 MSTORE
0x51a PUSH1 0x1f
0x51c NOT
0x51d SWAP1
0x51e SWAP3
0x51f ADD
0x520 SWAP2
0x521 PUSH1 0x20
0x523 SWAP2
0x524 DUP3
0x525 ADD
0x526 SWAP2
0x527 ADD
0x528 PUSH2 0x50d
0x52b JUMP
---
0x517: V415 = M[S0]
0x519: M[S1] = V415
0x51a: V416 = 0x1f
0x51c: V417 = NOT 0x1f
0x51f: V418 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x521: V419 = 0x20
0x525: V420 = ADD 0x20 S1
0x527: V421 = ADD 0x20 S0
0x528: V422 = 0x50d
0x52b: JUMP 0x50d
---
Entry stack: [V13, S20, S19, S18, S17, S16, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S14, S13, S12, S11, 0x0, V403, 0x0, S7, V409, V409, V411, V410, S2, S1, S0]
Stack pops: 3
Stack additions: [V418, V420, V421]
Exit stack: [V13, S20, S19, S18, S17, S16, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S14, S13, S12, S11, 0x0, V403, 0x0, S7, V409, V409, V411, V410, V418, V420, V421]

================================

Block 0x52c
[0x52c:0x5a5]
---
Predecessors: [0x50d]
Successors: [0x5a6]
---
0x52c JUMPDEST
0x52d PUSH1 0x1
0x52f DUP4
0x530 PUSH1 0x20
0x532 SUB
0x533 PUSH2 0x100
0x536 EXP
0x537 SUB
0x538 DUP1
0x539 NOT
0x53a DUP3
0x53b MLOAD
0x53c AND
0x53d DUP2
0x53e DUP5
0x53f MLOAD
0x540 AND
0x541 DUP1
0x542 DUP3
0x543 OR
0x544 DUP6
0x545 MSTORE
0x546 POP
0x547 POP
0x548 POP
0x549 POP
0x54a POP
0x54b POP
0x54c SWAP1
0x54d POP
0x54e ADD
0x54f SWAP2
0x550 POP
0x551 POP
0x552 PUSH1 0x40
0x554 MLOAD
0x555 DUP1
0x556 SWAP2
0x557 SUB
0x558 SWAP1
0x559 SHA3
0x55a PUSH1 0xe0
0x55c PUSH1 0x2
0x55e EXP
0x55f SWAP1
0x560 DIV
0x561 SWAP1
0x562 CALLER
0x563 DUP8
0x564 DUP8
0x565 PUSH1 0x40
0x567 MLOAD
0x568 DUP6
0x569 PUSH4 0xffffffff
0x56e AND
0x56f PUSH1 0xe0
0x571 PUSH1 0x2
0x573 EXP
0x574 MUL
0x575 DUP2
0x576 MSTORE
0x577 PUSH1 0x4
0x579 ADD
0x57a DUP1
0x57b DUP5
0x57c PUSH1 0x1
0x57e PUSH1 0xa0
0x580 PUSH1 0x2
0x582 EXP
0x583 SUB
0x584 AND
0x585 PUSH1 0x1
0x587 PUSH1 0xa0
0x589 PUSH1 0x2
0x58b EXP
0x58c SUB
0x58d AND
0x58e DUP2
0x58f MSTORE
0x590 PUSH1 0x20
0x592 ADD
0x593 DUP4
0x594 DUP2
0x595 MSTORE
0x596 PUSH1 0x20
0x598 ADD
0x599 DUP3
0x59a DUP1
0x59b MLOAD
0x59c SWAP1
0x59d PUSH1 0x20
0x59f ADD
0x5a0 SWAP1
0x5a1 DUP1
0x5a2 DUP4
0x5a3 DUP4
0x5a4 PUSH1 0x0
---
0x52c: JUMPDEST 
0x52d: V423 = 0x1
0x530: V424 = 0x20
0x532: V425 = SUB 0x20 S2
0x533: V426 = 0x100
0x536: V427 = EXP 0x100 V425
0x537: V428 = SUB V427 0x1
0x539: V429 = NOT V428
0x53b: V430 = M[S0]
0x53c: V431 = AND V430 V429
0x53f: V432 = M[S1]
0x540: V433 = AND V432 V428
0x543: V434 = OR V431 V433
0x545: M[S1] = V434
0x54e: V435 = ADD V410 V409
0x552: V436 = 0x40
0x554: V437 = M[0x40]
0x557: V438 = SUB V435 V437
0x559: V439 = SHA3 V437 V438
0x55a: V440 = 0xe0
0x55c: V441 = 0x2
0x55e: V442 = EXP 0x2 0xe0
0x560: V443 = DIV V439 0x100000000000000000000000000000000000000000000000000000000
0x562: V444 = CALLER
0x565: V445 = 0x40
0x567: V446 = M[0x40]
0x569: V447 = 0xffffffff
0x56e: V448 = AND 0xffffffff V443
0x56f: V449 = 0xe0
0x571: V450 = 0x2
0x573: V451 = EXP 0x2 0xe0
0x574: V452 = MUL 0x100000000000000000000000000000000000000000000000000000000 V448
0x576: M[V446] = V452
0x577: V453 = 0x4
0x579: V454 = ADD 0x4 V446
0x57c: V455 = 0x1
0x57e: V456 = 0xa0
0x580: V457 = 0x2
0x582: V458 = EXP 0x2 0xa0
0x583: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x584: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x585: V461 = 0x1
0x587: V462 = 0xa0
0x589: V463 = 0x2
0x58b: V464 = EXP 0x2 0xa0
0x58c: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58d: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x58f: M[V454] = V466
0x590: V467 = 0x20
0x592: V468 = ADD 0x20 V454
0x595: M[V468] = S13
0x596: V469 = 0x20
0x598: V470 = ADD 0x20 V468
0x59b: V471 = M[S12]
0x59d: V472 = 0x20
0x59f: V473 = ADD 0x20 S12
0x5a4: V474 = 0x0
---
Entry stack: [V13, S20, S19, S18, S17, S16, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S14, S13, S12, S11, 0x0, V403, 0x0, S7, V409, V409, V411, V410, S2, S1, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, V443, S8, V444, S13, S12, V454, V470, V473, V471, V471, V470, V473, 0x0]
Exit stack: [V13, S20, S19, S18, S17, S16, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S14, S13, S12, S11, 0x0, V403, V443, 0x0, V444, S13, S12, V454, V470, V473, V471, V471, V470, V473, 0x0]

================================

Block 0x5a6
[0x5a6:0x5ae]
---
Predecessors: [0x52c, 0x5af]
Successors: [0x5af, 0x5be]
---
0x5a6 JUMPDEST
0x5a7 DUP4
0x5a8 DUP2
0x5a9 LT
0x5aa ISZERO
0x5ab PUSH2 0x5be
0x5ae JUMPI
---
0x5a6: JUMPDEST 
0x5a9: V475 = LT S0 V471
0x5aa: V476 = ISZERO V475
0x5ab: V477 = 0x5be
0x5ae: JUMPI 0x5be V476
---
Entry stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, 0x0, V403, V443, 0x0, V444, S9, S8, V454, V470, V473, V471, V471, V470, V473, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, 0x0, V403, V443, 0x0, V444, S9, S8, V454, V470, V473, V471, V471, V470, V473, S0]

================================

Block 0x5af
[0x5af:0x5bd]
---
Predecessors: [0x5a6]
Successors: [0x5a6]
---
0x5af DUP2
0x5b0 DUP2
0x5b1 ADD
0x5b2 MLOAD
0x5b3 DUP4
0x5b4 DUP3
0x5b5 ADD
0x5b6 MSTORE
0x5b7 PUSH1 0x20
0x5b9 ADD
0x5ba PUSH2 0x5a6
0x5bd JUMP
---
0x5b1: V478 = ADD S0 V473
0x5b2: V479 = M[V478]
0x5b5: V480 = ADD S0 V470
0x5b6: M[V480] = V479
0x5b7: V481 = 0x20
0x5b9: V482 = ADD 0x20 S0
0x5ba: V483 = 0x5a6
0x5bd: JUMP 0x5a6
---
Entry stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, 0x0, V403, V443, 0x0, V444, S9, S8, V454, V470, V473, V471, V471, V470, V473, S0]
Stack pops: 3
Stack additions: [S2, S1, V482]
Exit stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, 0x0, V403, V443, 0x0, V444, S9, S8, V454, V470, V473, V471, V471, V470, V473, V482]

================================

Block 0x5be
[0x5be:0x5d1]
---
Predecessors: [0x5a6]
Successors: [0x5d2, 0x5eb]
---
0x5be JUMPDEST
0x5bf POP
0x5c0 POP
0x5c1 POP
0x5c2 POP
0x5c3 SWAP1
0x5c4 POP
0x5c5 SWAP1
0x5c6 DUP2
0x5c7 ADD
0x5c8 SWAP1
0x5c9 PUSH1 0x1f
0x5cb AND
0x5cc DUP1
0x5cd ISZERO
0x5ce PUSH2 0x5eb
0x5d1 JUMPI
---
0x5be: JUMPDEST 
0x5c7: V484 = ADD V471 V470
0x5c9: V485 = 0x1f
0x5cb: V486 = AND 0x1f V471
0x5cd: V487 = ISZERO V486
0x5ce: V488 = 0x5eb
0x5d1: JUMPI 0x5eb V487
---
Entry stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, 0x0, V403, V443, 0x0, V444, S9, S8, V454, V470, V473, V471, V471, V470, V473, S0]
Stack pops: 7
Stack additions: [V484, V486]
Exit stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, 0x0, V403, V443, 0x0, V444, S9, S8, V454, V484, V486]

================================

Block 0x5d2
[0x5d2:0x5ea]
---
Predecessors: [0x5be]
Successors: [0x5eb]
---
0x5d2 DUP1
0x5d3 DUP3
0x5d4 SUB
0x5d5 DUP1
0x5d6 MLOAD
0x5d7 PUSH1 0x1
0x5d9 DUP4
0x5da PUSH1 0x20
0x5dc SUB
0x5dd PUSH2 0x100
0x5e0 EXP
0x5e1 SUB
0x5e2 NOT
0x5e3 AND
0x5e4 DUP2
0x5e5 MSTORE
0x5e6 PUSH1 0x20
0x5e8 ADD
0x5e9 SWAP2
0x5ea POP
---
0x5d4: V489 = SUB V484 V486
0x5d6: V490 = M[V489]
0x5d7: V491 = 0x1
0x5da: V492 = 0x20
0x5dc: V493 = SUB 0x20 V486
0x5dd: V494 = 0x100
0x5e0: V495 = EXP 0x100 V493
0x5e1: V496 = SUB V495 0x1
0x5e2: V497 = NOT V496
0x5e3: V498 = AND V497 V490
0x5e5: M[V489] = V498
0x5e6: V499 = 0x20
0x5e8: V500 = ADD 0x20 V489
---
Entry stack: [V13, S19, S18, S17, S16, S15, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S13, S12, S11, S10, 0x0, V403, V443, 0x0, V444, S4, S3, V454, V484, V486]
Stack pops: 2
Stack additions: [V500, S0]
Exit stack: [V13, S19, S18, S17, S16, S15, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S13, S12, S11, S10, 0x0, V403, V443, 0x0, V444, S4, S3, V454, V500, V486]

================================

Block 0x5eb
[0x5eb:0x609]
---
Predecessors: [0x5be, 0x5d2]
Successors: [0x60a, 0x60b]
---
0x5eb JUMPDEST
0x5ec POP
0x5ed SWAP4
0x5ee POP
0x5ef POP
0x5f0 POP
0x5f1 POP
0x5f2 PUSH1 0x0
0x5f4 PUSH1 0x40
0x5f6 MLOAD
0x5f7 DUP1
0x5f8 DUP4
0x5f9 SUB
0x5fa DUP2
0x5fb DUP6
0x5fc DUP9
0x5fd GAS
0x5fe CALL
0x5ff SWAP4
0x600 POP
0x601 POP
0x602 POP
0x603 POP
0x604 ISZERO
0x605 ISZERO
0x606 PUSH2 0x60b
0x609 JUMPI
---
0x5eb: JUMPDEST 
0x5f2: V501 = 0x0
0x5f4: V502 = 0x40
0x5f6: V503 = M[0x40]
0x5f9: V504 = SUB S1 V503
0x5fd: V505 = GAS
0x5fe: V506 = CALL V505 V403 0x0 V503 V504 V503 0x0
0x604: V507 = ISZERO V506
0x605: V508 = ISZERO V507
0x606: V509 = 0x60b
0x609: JUMPI 0x60b V508
---
Entry stack: [V13, S19, S18, S17, S16, S15, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S13, S12, S11, S10, 0x0, V403, V443, 0x0, V444, S4, S3, V454, S1, V486]
Stack pops: 9
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S13, S12, S11, S10, 0x0]

================================

Block 0x60a
[0x60a:0x60a]
---
Predecessors: [0x5eb]
Successors: []
---
0x60a INVALID
---
0x60a: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S4, S3, S2, S1, 0x0]

================================

Block 0x60b
[0x60b:0x61b]
---
Predecessors: [0x5eb]
Successors: [0x61c]
---
0x60b JUMPDEST
0x60c DUP3
0x60d PUSH1 0x40
0x60f MLOAD
0x610 DUP1
0x611 DUP3
0x612 DUP1
0x613 MLOAD
0x614 SWAP1
0x615 PUSH1 0x20
0x617 ADD
0x618 SWAP1
0x619 DUP1
0x61a DUP4
0x61b DUP4
---
0x60b: JUMPDEST 
0x60d: V510 = 0x40
0x60f: V511 = M[0x40]
0x613: V512 = M[S2]
0x615: V513 = 0x20
0x617: V514 = ADD 0x20 S2
---
Entry stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S4, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, V511, V511, V514, V512, V512, V511, V514]
Exit stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S4, S3, S2, S1, 0x0, S2, V511, V511, V514, V512, V512, V511, V514]

================================

Block 0x61c
[0x61c:0x624]
---
Predecessors: [0x60b, 0x625]
Successors: [0x625, 0x63b]
---
0x61c JUMPDEST
0x61d PUSH1 0x20
0x61f DUP4
0x620 LT
0x621 PUSH2 0x63b
0x624 JUMPI
---
0x61c: JUMPDEST 
0x61d: V515 = 0x20
0x620: V516 = LT S2 0x20
0x621: V517 = 0x63b
0x624: JUMPI 0x63b V516
---
Entry stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S12, S11, S10, S9, 0x0, S7, V511, V511, V514, V512, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S12, S11, S10, S9, 0x0, S7, V511, V511, V514, V512, S2, S1, S0]

================================

Block 0x625
[0x625:0x63a]
---
Predecessors: [0x61c]
Successors: [0x61c]
---
0x625 DUP1
0x626 MLOAD
0x627 DUP3
0x628 MSTORE
0x629 PUSH1 0x1f
0x62b NOT
0x62c SWAP1
0x62d SWAP3
0x62e ADD
0x62f SWAP2
0x630 PUSH1 0x20
0x632 SWAP2
0x633 DUP3
0x634 ADD
0x635 SWAP2
0x636 ADD
0x637 PUSH2 0x61c
0x63a JUMP
---
0x626: V518 = M[S0]
0x628: M[S1] = V518
0x629: V519 = 0x1f
0x62b: V520 = NOT 0x1f
0x62e: V521 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x630: V522 = 0x20
0x634: V523 = ADD 0x20 S1
0x636: V524 = ADD 0x20 S0
0x637: V525 = 0x61c
0x63a: JUMP 0x61c
---
Entry stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S12, S11, S10, S9, 0x0, S7, V511, V511, V514, V512, S2, S1, S0]
Stack pops: 3
Stack additions: [V521, V523, V524]
Exit stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S12, S11, S10, S9, 0x0, S7, V511, V511, V514, V512, V521, V523, V524]

================================

Block 0x63b
[0x63b:0x6a9]
---
Predecessors: [0x61c]
Successors: [0x6b8]
---
0x63b JUMPDEST
0x63c MLOAD
0x63d DUP2
0x63e MLOAD
0x63f PUSH1 0x20
0x641 SWAP4
0x642 DUP5
0x643 SUB
0x644 PUSH2 0x100
0x647 EXP
0x648 PUSH1 0x0
0x64a NOT
0x64b ADD
0x64c DUP1
0x64d NOT
0x64e SWAP1
0x64f SWAP3
0x650 AND
0x651 SWAP2
0x652 AND
0x653 OR
0x654 SWAP1
0x655 MSTORE
0x656 PUSH1 0x40
0x658 DUP1
0x659 MLOAD
0x65a SWAP3
0x65b SWAP1
0x65c SWAP5
0x65d ADD
0x65e DUP3
0x65f SWAP1
0x660 SUB
0x661 DUP3
0x662 SHA3
0x663 DUP11
0x664 DUP4
0x665 MSTORE
0x666 SWAP4
0x667 MLOAD
0x668 SWAP4
0x669 SWAP6
0x66a POP
0x66b PUSH1 0x1
0x66d PUSH1 0xa0
0x66f PUSH1 0x2
0x671 EXP
0x672 SUB
0x673 DUP12
0x674 AND
0x675 SWAP5
0x676 POP
0x677 CALLER
0x678 SWAP4
0x679 PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x69a SWAP4
0x69b POP
0x69c SWAP2
0x69d DUP3
0x69e SWAP1
0x69f SUB
0x6a0 ADD
0x6a1 SWAP1
0x6a2 LOG4
0x6a3 POP
0x6a4 PUSH1 0x1
0x6a6 PUSH2 0x6b8
0x6a9 JUMP
---
0x63b: JUMPDEST 
0x63c: V526 = M[S0]
0x63e: V527 = M[S1]
0x63f: V528 = 0x20
0x643: V529 = SUB 0x20 S2
0x644: V530 = 0x100
0x647: V531 = EXP 0x100 V529
0x648: V532 = 0x0
0x64a: V533 = NOT 0x0
0x64b: V534 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V531
0x64d: V535 = NOT V534
0x650: V536 = AND V526 V535
0x652: V537 = AND V534 V527
0x653: V538 = OR V537 V536
0x655: M[S1] = V538
0x656: V539 = 0x40
0x659: V540 = M[0x40]
0x65d: V541 = ADD V511 V512
0x660: V542 = SUB V541 V540
0x662: V543 = SHA3 V540 V542
0x665: M[V540] = S11
0x667: V544 = M[0x40]
0x66b: V545 = 0x1
0x66d: V546 = 0xa0
0x66f: V547 = 0x2
0x671: V548 = EXP 0x2 0xa0
0x672: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x674: V550 = AND S12 0xffffffffffffffffffffffffffffffffffffffff
0x677: V551 = CALLER
0x679: V552 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x69f: V553 = SUB V540 V544
0x6a0: V554 = ADD V553 0x20
0x6a2: LOG V544 V554 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V551 V550 V543
0x6a4: V555 = 0x1
0x6a6: V556 = 0x6b8
0x6a9: JUMP 0x6b8
---
Entry stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S12, S11, S10, S9, 0x0, S7, V511, V511, V514, V512, S2, S1, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, 0x1]
Exit stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S12, S11, S10, S9, 0x1]

================================

Block 0x6aa
[0x6aa:0x6b4]
---
Predecessors: [0x48c]
Successors: [0x8ae]
---
0x6aa JUMPDEST
0x6ab PUSH2 0x6b5
0x6ae DUP6
0x6af DUP6
0x6b0 DUP6
0x6b1 PUSH2 0x8ae
0x6b4 JUMP
---
0x6aa: JUMPDEST 
0x6ab: V557 = 0x6b5
0x6b1: V558 = 0x8ae
0x6b4: JUMP 0x8ae
---
Entry stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x6b5, S4, S3, S2]
Exit stack: [V13, S5, S4, S3, S2, S1, {0x0, 0x60}, 0x6b5, S4, S3, S2]

================================

Block 0x6b5
[0x6b5:0x6b7]
---
Predecessors: [0x947]
Successors: [0x6b8]
---
0x6b5 JUMPDEST
0x6b6 SWAP1
0x6b7 POP
---
0x6b5: JUMPDEST 
---
Entry stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, S6, S5, S4, S3, S2, 0x1]

================================

Block 0x6b8
[0x6b8:0x6bf]
---
Predecessors: [0x63b, 0x6b5]
Successors: [0x1cf, 0x434, 0x468]
---
0x6b8 JUMPDEST
0x6b9 SWAP5
0x6ba SWAP4
0x6bb POP
0x6bc POP
0x6bd POP
0x6be POP
0x6bf JUMP
---
0x6b8: JUMPDEST 
0x6bf: JUMP S5
---
Entry stack: [V13, S5, S4, S3, S2, S1, 0x1]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V13, 0x1]

================================

Block 0x6c0
[0x6c0:0x6c7]
---
Predecessors: [0x417, 0x44d, 0x481]
Successors: [0x424, 0x458, 0x48c]
---
0x6c0 JUMPDEST
0x6c1 PUSH1 0x0
0x6c3 SWAP1
0x6c4 EXTCODESIZE
0x6c5 GT
0x6c6 SWAP1
0x6c7 JUMP
---
0x6c0: JUMPDEST 
0x6c1: V559 = 0x0
0x6c4: V560 = EXTCODESIZE S0
0x6c5: V561 = GT V560 0x0
0x6c7: JUMP {0x424, 0x458, 0x48c}
---
Entry stack: [V13, S7, S6, S5, S4, S3, {0x0, 0x60}, {0x424, 0x458, 0x48c}, S0]
Stack pops: 2
Stack additions: [V561]
Exit stack: [V13, S7, S6, S5, S4, S3, {0x0, 0x60}, V561]

================================

Block 0x6c8
[0x6c8:0x6d4]
---
Predecessors: [0x42a, 0x45e]
Successors: [0x39b]
---
0x6c8 JUMPDEST
0x6c9 PUSH1 0x0
0x6cb DUP1
0x6cc DUP4
0x6cd PUSH2 0x6d5
0x6d0 CALLER
0x6d1 PUSH2 0x39b
0x6d4 JUMP
---
0x6c8: JUMPDEST 
0x6c9: V562 = 0x0
0x6cd: V563 = 0x6d5
0x6d0: V564 = CALLER
0x6d1: V565 = 0x39b
0x6d4: JUMP 0x39b
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x60}, {0x434, 0x468}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S1, 0x6d5, V564]
Exit stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x60}, {0x434, 0x468}, S2, S1, S0, 0x0, 0x0, S1, 0x6d5, V564]

================================

Block 0x6d5
[0x6d5:0x6db]
---
Predecessors: [0x39b]
Successors: [0x6dc, 0x6e0]
---
0x6d5 JUMPDEST
0x6d6 LT
0x6d7 ISZERO
0x6d8 PUSH2 0x6e0
0x6db JUMPI
---
0x6d5: JUMPDEST 
0x6d6: V566 = LT V313 S1
0x6d7: V567 = ISZERO V566
0x6d8: V568 = 0x6e0
0x6db: JUMPI 0x6e0 V567
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}, S1, V313]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}]

================================

Block 0x6dc
[0x6dc:0x6df]
---
Predecessors: [0x6d5]
Successors: []
---
0x6dc PUSH1 0x0
0x6de DUP1
0x6df REVERT
---
0x6dc: V569 = 0x0
0x6df: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}]

================================

Block 0x6e0
[0x6e0:0x6eb]
---
Predecessors: [0x6d5]
Successors: [0x39b]
---
0x6e0 JUMPDEST
0x6e1 PUSH2 0x6ec
0x6e4 PUSH2 0x4b2
0x6e7 CALLER
0x6e8 PUSH2 0x39b
0x6eb JUMP
---
0x6e0: JUMPDEST 
0x6e1: V570 = 0x6ec
0x6e4: V571 = 0x4b2
0x6e7: V572 = CALLER
0x6e8: V573 = 0x39b
0x6eb: JUMP 0x39b
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 0
Stack additions: [0x6ec, 0x4b2, V572]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}, 0x6ec, 0x4b2, V572]

================================

Block 0x6ec
[0x6ec:0x707]
---
Predecessors: [0x9c7]
Successors: [0x39b]
---
0x6ec JUMPDEST
0x6ed CALLER
0x6ee PUSH1 0x0
0x6f0 SWAP1
0x6f1 DUP2
0x6f2 MSTORE
0x6f3 PUSH1 0x1
0x6f5 PUSH1 0x20
0x6f7 MSTORE
0x6f8 PUSH1 0x40
0x6fa SWAP1
0x6fb SHA3
0x6fc SSTORE
0x6fd PUSH2 0x708
0x700 PUSH2 0x4d4
0x703 DUP7
0x704 PUSH2 0x39b
0x707 JUMP
---
0x6ec: JUMPDEST 
0x6ed: V574 = CALLER
0x6ee: V575 = 0x0
0x6f2: M[0x0] = V574
0x6f3: V576 = 0x1
0x6f5: V577 = 0x20
0x6f7: M[0x20] = 0x1
0x6f8: V578 = 0x40
0x6fb: V579 = SHA3 0x0 0x40
0x6fc: S[V579] = V786
0x6fd: V580 = 0x708
0x700: V581 = 0x4d4
0x704: V582 = 0x39b
0x707: JUMP 0x39b
---
Entry stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, 0x0, V786]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x708, 0x4d4, S5]
Exit stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, 0x0, 0x708, 0x4d4, S5]

================================

Block 0x708
[0x708:0x78d]
---
Predecessors: [0x9e0]
Successors: [0x78e]
---
0x708 JUMPDEST
0x709 PUSH1 0x1
0x70b PUSH1 0xa0
0x70d PUSH1 0x2
0x70f EXP
0x710 SUB
0x711 DUP7
0x712 AND
0x713 PUSH1 0x0
0x715 DUP2
0x716 DUP2
0x717 MSTORE
0x718 PUSH1 0x1
0x71a PUSH1 0x20
0x71c SWAP1
0x71d DUP2
0x71e MSTORE
0x71f PUSH1 0x40
0x721 DUP1
0x722 DUP4
0x723 SHA3
0x724 SWAP5
0x725 SWAP1
0x726 SWAP5
0x727 SSTORE
0x728 SWAP3
0x729 MLOAD
0x72a PUSH32 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x74b DUP2
0x74c MSTORE
0x74d CALLER
0x74e PUSH1 0x4
0x750 DUP3
0x751 ADD
0x752 DUP2
0x753 DUP2
0x754 MSTORE
0x755 PUSH1 0x24
0x757 DUP4
0x758 ADD
0x759 DUP11
0x75a SWAP1
0x75b MSTORE
0x75c PUSH1 0x60
0x75e PUSH1 0x44
0x760 DUP5
0x761 ADD
0x762 SWAP1
0x763 DUP2
0x764 MSTORE
0x765 DUP10
0x766 MLOAD
0x767 PUSH1 0x64
0x769 DUP6
0x76a ADD
0x76b MSTORE
0x76c DUP10
0x76d MLOAD
0x76e DUP13
0x76f SWAP9
0x770 POP
0x771 SWAP6
0x772 SWAP7
0x773 PUSH4 0xc0ee0b8a
0x778 SWAP7
0x779 SWAP4
0x77a SWAP6
0x77b DUP13
0x77c SWAP6
0x77d DUP13
0x77e SWAP6
0x77f PUSH1 0x84
0x781 SWAP1
0x782 SWAP2
0x783 ADD
0x784 SWAP3
0x785 DUP7
0x786 ADD
0x787 SWAP2
0x788 DUP2
0x789 SWAP1
0x78a DUP5
0x78b SWAP1
0x78c DUP5
0x78d SWAP1
---
0x708: JUMPDEST 
0x709: V583 = 0x1
0x70b: V584 = 0xa0
0x70d: V585 = 0x2
0x70f: V586 = EXP 0x2 0xa0
0x710: V587 = SUB 0x10000000000000000000000000000000000000000 0x1
0x712: V588 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x713: V589 = 0x0
0x717: M[0x0] = V588
0x718: V590 = 0x1
0x71a: V591 = 0x20
0x71e: M[0x20] = 0x1
0x71f: V592 = 0x40
0x723: V593 = SHA3 0x0 0x40
0x727: S[V593] = V795
0x729: V594 = M[0x40]
0x72a: V595 = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x74c: M[V594] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x74d: V596 = CALLER
0x74e: V597 = 0x4
0x751: V598 = ADD V594 0x4
0x754: M[V598] = V596
0x755: V599 = 0x24
0x758: V600 = ADD V594 0x24
0x75b: M[V600] = S4
0x75c: V601 = 0x60
0x75e: V602 = 0x44
0x761: V603 = ADD V594 0x44
0x764: M[V603] = 0x60
0x766: V604 = M[S3]
0x767: V605 = 0x64
0x76a: V606 = ADD V594 0x64
0x76b: M[V606] = V604
0x76d: V607 = M[S3]
0x773: V608 = 0xc0ee0b8a
0x77f: V609 = 0x84
0x783: V610 = ADD V594 0x84
0x786: V611 = ADD S3 0x20
---
Entry stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, 0x0, V795]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S5, V588, 0xc0ee0b8a, V596, S4, S3, V598, V603, V610, V611, V607, V607, V610, V611, 0x0]
Exit stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, S5, V588, 0xc0ee0b8a, V596, S4, S3, V598, V603, V610, V611, V607, V607, V610, V611, 0x0]

================================

Block 0x78e
[0x78e:0x796]
---
Predecessors: [0x708, 0x797]
Successors: [0x797, 0x7a6]
---
0x78e JUMPDEST
0x78f DUP4
0x790 DUP2
0x791 LT
0x792 ISZERO
0x793 PUSH2 0x7a6
0x796 JUMPI
---
0x78e: JUMPDEST 
0x791: V612 = LT S0 V607
0x792: V613 = ISZERO V612
0x793: V614 = 0x7a6
0x796: JUMPI 0x7a6 V613
---
Entry stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, S14, V588, 0xc0ee0b8a, V596, S10, S9, V598, V603, V610, V611, V607, V607, V610, V611, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, S14, V588, 0xc0ee0b8a, V596, S10, S9, V598, V603, V610, V611, V607, V607, V610, V611, S0]

================================

Block 0x797
[0x797:0x7a5]
---
Predecessors: [0x78e]
Successors: [0x78e]
---
0x797 DUP2
0x798 DUP2
0x799 ADD
0x79a MLOAD
0x79b DUP4
0x79c DUP3
0x79d ADD
0x79e MSTORE
0x79f PUSH1 0x20
0x7a1 ADD
0x7a2 PUSH2 0x78e
0x7a5 JUMP
---
0x799: V615 = ADD S0 V611
0x79a: V616 = M[V615]
0x79d: V617 = ADD S0 V610
0x79e: M[V617] = V616
0x79f: V618 = 0x20
0x7a1: V619 = ADD 0x20 S0
0x7a2: V620 = 0x78e
0x7a5: JUMP 0x78e
---
Entry stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, S14, V588, 0xc0ee0b8a, V596, S10, S9, V598, V603, V610, V611, V607, V607, V610, V611, S0]
Stack pops: 3
Stack additions: [S2, S1, V619]
Exit stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, S14, V588, 0xc0ee0b8a, V596, S10, S9, V598, V603, V610, V611, V607, V607, V610, V611, V619]

================================

Block 0x7a6
[0x7a6:0x7b9]
---
Predecessors: [0x78e]
Successors: [0x7ba, 0x7d3]
---
0x7a6 JUMPDEST
0x7a7 POP
0x7a8 POP
0x7a9 POP
0x7aa POP
0x7ab SWAP1
0x7ac POP
0x7ad SWAP1
0x7ae DUP2
0x7af ADD
0x7b0 SWAP1
0x7b1 PUSH1 0x1f
0x7b3 AND
0x7b4 DUP1
0x7b5 ISZERO
0x7b6 PUSH2 0x7d3
0x7b9 JUMPI
---
0x7a6: JUMPDEST 
0x7af: V621 = ADD V607 V610
0x7b1: V622 = 0x1f
0x7b3: V623 = AND 0x1f V607
0x7b5: V624 = ISZERO V623
0x7b6: V625 = 0x7d3
0x7b9: JUMPI 0x7d3 V624
---
Entry stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, S14, V588, 0xc0ee0b8a, V596, S10, S9, V598, V603, V610, V611, V607, V607, V610, V611, S0]
Stack pops: 7
Stack additions: [V621, V623]
Exit stack: [V13, S24, S23, S22, S21, S20, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S18, S17, S16, S15, S14, V588, 0xc0ee0b8a, V596, S10, S9, V598, V603, V621, V623]

================================

Block 0x7ba
[0x7ba:0x7d2]
---
Predecessors: [0x7a6]
Successors: [0x7d3]
---
0x7ba DUP1
0x7bb DUP3
0x7bc SUB
0x7bd DUP1
0x7be MLOAD
0x7bf PUSH1 0x1
0x7c1 DUP4
0x7c2 PUSH1 0x20
0x7c4 SUB
0x7c5 PUSH2 0x100
0x7c8 EXP
0x7c9 SUB
0x7ca NOT
0x7cb AND
0x7cc DUP2
0x7cd MSTORE
0x7ce PUSH1 0x20
0x7d0 ADD
0x7d1 SWAP2
0x7d2 POP
---
0x7bc: V626 = SUB V621 V623
0x7be: V627 = M[V626]
0x7bf: V628 = 0x1
0x7c2: V629 = 0x20
0x7c4: V630 = SUB 0x20 V623
0x7c5: V631 = 0x100
0x7c8: V632 = EXP 0x100 V630
0x7c9: V633 = SUB V632 0x1
0x7ca: V634 = NOT V633
0x7cb: V635 = AND V634 V627
0x7cd: M[V626] = V635
0x7ce: V636 = 0x20
0x7d0: V637 = ADD 0x20 V626
---
Entry stack: [V13, 0x1cf, S18, S17, S16, {0x0, 0x60}, {0x434, 0x468}, S13, S12, S11, 0x0, S9, V588, 0xc0ee0b8a, V596, S5, S4, V598, V603, V621, V623]
Stack pops: 2
Stack additions: [V637, S0]
Exit stack: [V13, 0x1cf, S18, S17, S16, {0x0, 0x60}, {0x434, 0x468}, S13, S12, S11, 0x0, S9, V588, 0xc0ee0b8a, V596, S5, S4, V598, V603, V637, V623]

================================

Block 0x7d3
[0x7d3:0x7ef]
---
Predecessors: [0x7a6, 0x7ba]
Successors: [0x7f0, 0x7f4]
---
0x7d3 JUMPDEST
0x7d4 POP
0x7d5 SWAP5
0x7d6 POP
0x7d7 POP
0x7d8 POP
0x7d9 POP
0x7da POP
0x7db PUSH1 0x0
0x7dd PUSH1 0x40
0x7df MLOAD
0x7e0 DUP1
0x7e1 DUP4
0x7e2 SUB
0x7e3 DUP2
0x7e4 PUSH1 0x0
0x7e6 DUP8
0x7e7 DUP1
0x7e8 EXTCODESIZE
0x7e9 ISZERO
0x7ea DUP1
0x7eb ISZERO
0x7ec PUSH2 0x7f4
0x7ef JUMPI
---
0x7d3: JUMPDEST 
0x7db: V638 = 0x0
0x7dd: V639 = 0x40
0x7df: V640 = M[0x40]
0x7e2: V641 = SUB S1 V640
0x7e4: V642 = 0x0
0x7e8: V643 = EXTCODESIZE V588
0x7e9: V644 = ISZERO V643
0x7eb: V645 = ISZERO V644
0x7ec: V646 = 0x7f4
0x7ef: JUMPI 0x7f4 V645
---
Entry stack: [V13, 0x1cf, S18, S17, S16, {0x0, 0x60}, {0x434, 0x468}, S13, S12, S11, 0x0, S9, V588, 0xc0ee0b8a, V596, S5, S4, V598, V603, S1, V623]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V640, V641, V640, 0x0, S8, V644]
Exit stack: [V13, 0x1cf, S18, S17, S16, {0x0, 0x60}, {0x434, 0x468}, S13, S12, S11, 0x0, S9, V588, 0xc0ee0b8a, S1, 0x0, V640, V641, V640, 0x0, V588, V644]

================================

Block 0x7f0
[0x7f0:0x7f3]
---
Predecessors: [0x7d3]
Successors: []
---
0x7f0 PUSH1 0x0
0x7f2 DUP1
0x7f3 REVERT
---
0x7f0: V647 = 0x0
0x7f3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cf, S19, S18, S17, {0x0, 0x60}, {0x434, 0x468}, S14, S13, S12, 0x0, S10, V588, 0xc0ee0b8a, S7, 0x0, V640, V641, V640, 0x0, V588, V644]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cf, S19, S18, S17, {0x0, 0x60}, {0x434, 0x468}, S14, S13, S12, 0x0, S10, V588, 0xc0ee0b8a, S7, 0x0, V640, V641, V640, 0x0, V588, V644]

================================

Block 0x7f4
[0x7f4:0x7fe]
---
Predecessors: [0x7d3]
Successors: [0x7ff, 0x808]
---
0x7f4 JUMPDEST
0x7f5 POP
0x7f6 GAS
0x7f7 CALL
0x7f8 ISZERO
0x7f9 DUP1
0x7fa ISZERO
0x7fb PUSH2 0x808
0x7fe JUMPI
---
0x7f4: JUMPDEST 
0x7f6: V648 = GAS
0x7f7: V649 = CALL V648 V588 0x0 V640 V641 V640 0x0
0x7f8: V650 = ISZERO V649
0x7fa: V651 = ISZERO V650
0x7fb: V652 = 0x808
0x7fe: JUMPI 0x808 V651
---
Entry stack: [V13, 0x1cf, S19, S18, S17, {0x0, 0x60}, {0x434, 0x468}, S14, S13, S12, 0x0, S10, V588, 0xc0ee0b8a, S7, 0x0, V640, V641, V640, 0x0, V588, V644]
Stack pops: 7
Stack additions: [V650]
Exit stack: [V13, 0x1cf, S19, S18, S17, {0x0, 0x60}, {0x434, 0x468}, S14, S13, S12, 0x0, S10, V588, 0xc0ee0b8a, S7, V650]

================================

Block 0x7ff
[0x7ff:0x807]
---
Predecessors: [0x7f4]
Successors: []
---
0x7ff RETURNDATASIZE
0x800 PUSH1 0x0
0x802 DUP1
0x803 RETURNDATACOPY
0x804 RETURNDATASIZE
0x805 PUSH1 0x0
0x807 REVERT
---
0x7ff: V653 = RETURNDATASIZE
0x800: V654 = 0x0
0x803: RETURNDATACOPY 0x0 0x0 V653
0x804: V655 = RETURNDATASIZE
0x805: V656 = 0x0
0x807: REVERT 0x0 V655
---
Entry stack: [V13, 0x1cf, S13, S12, S11, {0x0, 0x60}, {0x434, 0x468}, S8, S7, S6, 0x0, S4, V588, 0xc0ee0b8a, S1, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cf, S13, S12, S11, {0x0, 0x60}, {0x434, 0x468}, S8, S7, S6, 0x0, S4, V588, 0xc0ee0b8a, S1, V650]

================================

Block 0x808
[0x808:0x81c]
---
Predecessors: [0x7f4]
Successors: [0x81d]
---
0x808 JUMPDEST
0x809 POP
0x80a POP
0x80b POP
0x80c POP
0x80d DUP3
0x80e PUSH1 0x40
0x810 MLOAD
0x811 DUP1
0x812 DUP3
0x813 DUP1
0x814 MLOAD
0x815 SWAP1
0x816 PUSH1 0x20
0x818 ADD
0x819 SWAP1
0x81a DUP1
0x81b DUP4
0x81c DUP4
---
0x808: JUMPDEST 
0x80e: V657 = 0x40
0x810: V658 = M[0x40]
0x814: V659 = M[S6]
0x816: V660 = 0x20
0x818: V661 = ADD 0x20 S6
---
Entry stack: [V13, 0x1cf, S13, S12, S11, {0x0, 0x60}, {0x434, 0x468}, S8, S7, S6, 0x0, S4, V588, 0xc0ee0b8a, S1, V650]
Stack pops: 7
Stack additions: [S6, S5, S4, S6, V658, V658, V661, V659, V659, V658, V661]
Exit stack: [V13, 0x1cf, S13, S12, S11, {0x0, 0x60}, {0x434, 0x468}, S8, S7, S6, 0x0, S4, S6, V658, V658, V661, V659, V659, V658, V661]

================================

Block 0x81d
[0x81d:0x825]
---
Predecessors: [0x808, 0x826]
Successors: [0x826, 0x83c]
---
0x81d JUMPDEST
0x81e PUSH1 0x20
0x820 DUP4
0x821 LT
0x822 PUSH2 0x83c
0x825 JUMPI
---
0x81d: JUMPDEST 
0x81e: V662 = 0x20
0x821: V663 = LT S2 0x20
0x822: V664 = 0x83c
0x825: JUMPI 0x83c V663
---
Entry stack: [V13, 0x1cf, S17, S16, S15, {0x0, 0x60}, {0x434, 0x468}, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x1cf, S17, S16, S15, {0x0, 0x60}, {0x434, 0x468}, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x826
[0x826:0x83b]
---
Predecessors: [0x81d]
Successors: [0x81d]
---
0x826 DUP1
0x827 MLOAD
0x828 DUP3
0x829 MSTORE
0x82a PUSH1 0x1f
0x82c NOT
0x82d SWAP1
0x82e SWAP3
0x82f ADD
0x830 SWAP2
0x831 PUSH1 0x20
0x833 SWAP2
0x834 DUP3
0x835 ADD
0x836 SWAP2
0x837 ADD
0x838 PUSH2 0x81d
0x83b JUMP
---
0x827: V665 = M[S0]
0x829: M[S1] = V665
0x82a: V666 = 0x1f
0x82c: V667 = NOT 0x1f
0x82f: V668 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x831: V669 = 0x20
0x835: V670 = ADD 0x20 S1
0x837: V671 = ADD 0x20 S0
0x838: V672 = 0x81d
0x83b: JUMP 0x81d
---
Entry stack: [V13, 0x1cf, S17, S16, S15, {0x0, 0x60}, {0x434, 0x468}, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V668, V670, V671]
Exit stack: [V13, 0x1cf, S17, S16, S15, {0x0, 0x60}, {0x434, 0x468}, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, V668, V670, V671]

================================

Block 0x83c
[0x83c:0x8ad]
---
Predecessors: [0x81d]
Successors: [0x1cf, 0x434, 0x468]
---
0x83c JUMPDEST
0x83d MLOAD
0x83e DUP2
0x83f MLOAD
0x840 PUSH1 0x20
0x842 SWAP4
0x843 DUP5
0x844 SUB
0x845 PUSH2 0x100
0x848 EXP
0x849 PUSH1 0x0
0x84b NOT
0x84c ADD
0x84d DUP1
0x84e NOT
0x84f SWAP1
0x850 SWAP3
0x851 AND
0x852 SWAP2
0x853 AND
0x854 OR
0x855 SWAP1
0x856 MSTORE
0x857 PUSH1 0x40
0x859 DUP1
0x85a MLOAD
0x85b SWAP3
0x85c SWAP1
0x85d SWAP5
0x85e ADD
0x85f DUP3
0x860 SWAP1
0x861 SUB
0x862 DUP3
0x863 SHA3
0x864 DUP11
0x865 DUP4
0x866 MSTORE
0x867 SWAP4
0x868 MLOAD
0x869 SWAP4
0x86a SWAP6
0x86b POP
0x86c PUSH1 0x1
0x86e PUSH1 0xa0
0x870 PUSH1 0x2
0x872 EXP
0x873 SUB
0x874 DUP12
0x875 AND
0x876 SWAP5
0x877 POP
0x878 CALLER
0x879 SWAP4
0x87a PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x89b SWAP4
0x89c POP
0x89d SWAP2
0x89e DUP3
0x89f SWAP1
0x8a0 SUB
0x8a1 ADD
0x8a2 SWAP1
0x8a3 LOG4
0x8a4 POP
0x8a5 PUSH1 0x1
0x8a7 SWAP5
0x8a8 SWAP4
0x8a9 POP
0x8aa POP
0x8ab POP
0x8ac POP
0x8ad JUMP
---
0x83c: JUMPDEST 
0x83d: V673 = M[S0]
0x83f: V674 = M[S1]
0x840: V675 = 0x20
0x844: V676 = SUB 0x20 S2
0x845: V677 = 0x100
0x848: V678 = EXP 0x100 V676
0x849: V679 = 0x0
0x84b: V680 = NOT 0x0
0x84c: V681 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V678
0x84e: V682 = NOT V681
0x851: V683 = AND V673 V682
0x853: V684 = AND V681 V674
0x854: V685 = OR V684 V683
0x856: M[S1] = V685
0x857: V686 = 0x40
0x85a: V687 = M[0x40]
0x85e: V688 = ADD S5 S3
0x861: V689 = SUB V688 V687
0x863: V690 = SHA3 V687 V689
0x866: M[V687] = S11
0x868: V691 = M[0x40]
0x86c: V692 = 0x1
0x86e: V693 = 0xa0
0x870: V694 = 0x2
0x872: V695 = EXP 0x2 0xa0
0x873: V696 = SUB 0x10000000000000000000000000000000000000000 0x1
0x875: V697 = AND S12 0xffffffffffffffffffffffffffffffffffffffff
0x878: V698 = CALLER
0x87a: V699 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x8a0: V700 = SUB V687 V691
0x8a1: V701 = ADD V700 0x20
0x8a3: LOG V691 V701 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V698 V697 V690
0x8a5: V702 = 0x1
0x8ad: JUMP {0x434, 0x468}
---
Entry stack: [V13, 0x1cf, S17, S16, S15, {0x0, 0x60}, {0x434, 0x468}, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 14
Stack additions: [0x1]
Exit stack: [V13, 0x1cf, S17, S16, S15, {0x0, 0x60}, 0x1]

================================

Block 0x8ae
[0x8ae:0x8b9]
---
Predecessors: [0x43b, 0x46f, 0x6aa]
Successors: [0x39b]
---
0x8ae JUMPDEST
0x8af PUSH1 0x0
0x8b1 DUP3
0x8b2 PUSH2 0x8ba
0x8b5 CALLER
0x8b6 PUSH2 0x39b
0x8b9 JUMP
---
0x8ae: JUMPDEST 
0x8af: V703 = 0x0
0x8b2: V704 = 0x8ba
0x8b5: V705 = CALLER
0x8b6: V706 = 0x39b
0x8b9: JUMP 0x39b
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x60}, {0x434, 0x468, 0x6b5}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1, 0x8ba, V705]
Exit stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x60}, {0x434, 0x468, 0x6b5}, S2, S1, S0, 0x0, S1, 0x8ba, V705]

================================

Block 0x8ba
[0x8ba:0x8c0]
---
Predecessors: [0x39b]
Successors: [0x8c1, 0x8c5]
---
0x8ba JUMPDEST
0x8bb LT
0x8bc ISZERO
0x8bd PUSH2 0x8c5
0x8c0 JUMPI
---
0x8ba: JUMPDEST 
0x8bb: V707 = LT V313 S1
0x8bc: V708 = ISZERO V707
0x8bd: V709 = 0x8c5
0x8c0: JUMPI 0x8c5 V708
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}, S1, V313]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}]

================================

Block 0x8c1
[0x8c1:0x8c4]
---
Predecessors: [0x8ba]
Successors: []
---
0x8c1 PUSH1 0x0
0x8c3 DUP1
0x8c4 REVERT
---
0x8c1: V710 = 0x0
0x8c4: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}]

================================

Block 0x8c5
[0x8c5:0x8d0]
---
Predecessors: [0x8ba]
Successors: [0x39b]
---
0x8c5 JUMPDEST
0x8c6 PUSH2 0x8d7
0x8c9 PUSH2 0x8d1
0x8cc CALLER
0x8cd PUSH2 0x39b
0x8d0 JUMP
---
0x8c5: JUMPDEST 
0x8c6: V711 = 0x8d7
0x8c9: V712 = 0x8d1
0x8cc: V713 = CALLER
0x8cd: V714 = 0x39b
0x8d0: JUMP 0x39b
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}]
Stack pops: 0
Stack additions: [0x8d7, 0x8d1, V713]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x60}, 0x8d7, 0x8d1, V713]

================================

Block 0x8d1
[0x8d1:0x8d6]
---
Predecessors: [0x39b]
Successors: [0x9b8]
---
0x8d1 JUMPDEST
0x8d2 DUP5
0x8d3 PUSH2 0x9b8
0x8d6 JUMP
---
0x8d1: JUMPDEST 
0x8d3: V715 = 0x9b8
0x8d6: JUMP 0x9b8
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}, S1, V313]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}, S1, V313, S4]

================================

Block 0x8d7
[0x8d7:0x8f2]
---
Predecessors: [0x9c7]
Successors: [0x39b]
---
0x8d7 JUMPDEST
0x8d8 CALLER
0x8d9 PUSH1 0x0
0x8db SWAP1
0x8dc DUP2
0x8dd MSTORE
0x8de PUSH1 0x1
0x8e0 PUSH1 0x20
0x8e2 MSTORE
0x8e3 PUSH1 0x40
0x8e5 SWAP1
0x8e6 SHA3
0x8e7 SSTORE
0x8e8 PUSH2 0x8f9
0x8eb PUSH2 0x8f3
0x8ee DUP6
0x8ef PUSH2 0x39b
0x8f2 JUMP
---
0x8d7: JUMPDEST 
0x8d8: V716 = CALLER
0x8d9: V717 = 0x0
0x8dd: M[0x0] = V716
0x8de: V718 = 0x1
0x8e0: V719 = 0x20
0x8e2: M[0x20] = 0x1
0x8e3: V720 = 0x40
0x8e6: V721 = SHA3 0x0 0x40
0x8e7: S[V721] = V786
0x8e8: V722 = 0x8f9
0x8eb: V723 = 0x8f3
0x8ef: V724 = 0x39b
0x8f2: JUMP 0x39b
---
Entry stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, 0x0, V786]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x8f9, 0x8f3, S4]
Exit stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, 0x0, 0x8f9, 0x8f3, S4]

================================

Block 0x8f3
[0x8f3:0x8f8]
---
Predecessors: [0x39b]
Successors: [0x9cd]
---
0x8f3 JUMPDEST
0x8f4 DUP5
0x8f5 PUSH2 0x9cd
0x8f8 JUMP
---
0x8f3: JUMPDEST 
0x8f5: V725 = 0x9cd
0x8f8: JUMP 0x9cd
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}, S1, V313]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x60}, S1, V313, S4]

================================

Block 0x8f9
[0x8f9:0x927]
---
Predecessors: [0x9e0]
Successors: [0x928]
---
0x8f9 JUMPDEST
0x8fa PUSH1 0x1
0x8fc PUSH1 0xa0
0x8fe PUSH1 0x2
0x900 EXP
0x901 SUB
0x902 DUP6
0x903 AND
0x904 PUSH1 0x0
0x906 SWAP1
0x907 DUP2
0x908 MSTORE
0x909 PUSH1 0x1
0x90b PUSH1 0x20
0x90d SWAP1
0x90e DUP2
0x90f MSTORE
0x910 PUSH1 0x40
0x912 SWAP2
0x913 DUP3
0x914 SWAP1
0x915 SHA3
0x916 SWAP3
0x917 SWAP1
0x918 SWAP3
0x919 SSTORE
0x91a MLOAD
0x91b DUP4
0x91c MLOAD
0x91d DUP5
0x91e SWAP3
0x91f DUP3
0x920 SWAP2
0x921 SWAP1
0x922 DUP5
0x923 ADD
0x924 SWAP1
0x925 DUP1
0x926 DUP4
0x927 DUP4
---
0x8f9: JUMPDEST 
0x8fa: V726 = 0x1
0x8fc: V727 = 0xa0
0x8fe: V728 = 0x2
0x900: V729 = EXP 0x2 0xa0
0x901: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x903: V731 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x904: V732 = 0x0
0x908: M[0x0] = V731
0x909: V733 = 0x1
0x90b: V734 = 0x20
0x90f: M[0x20] = 0x1
0x910: V735 = 0x40
0x915: V736 = SHA3 0x0 0x40
0x919: S[V736] = V795
0x91a: V737 = M[0x40]
0x91c: V738 = M[S2]
0x923: V739 = ADD S2 0x20
---
Entry stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, 0x0, V795]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S2, V737, V737, V739, V738, V738, V737, V739]
Exit stack: [V13, S11, S10, S9, S8, S7, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S5, S4, S3, S2, 0x0, S2, V737, V737, V739, V738, V738, V737, V739]

================================

Block 0x928
[0x928:0x930]
---
Predecessors: [0x8f9, 0x931]
Successors: [0x931, 0x947]
---
0x928 JUMPDEST
0x929 PUSH1 0x20
0x92b DUP4
0x92c LT
0x92d PUSH2 0x947
0x930 JUMPI
---
0x928: JUMPDEST 
0x929: V740 = 0x20
0x92c: V741 = LT S2 0x20
0x92d: V742 = 0x947
0x930: JUMPI 0x947 V741
---
Entry stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S12, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S12, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x931
[0x931:0x946]
---
Predecessors: [0x928]
Successors: [0x928]
---
0x931 DUP1
0x932 MLOAD
0x933 DUP3
0x934 MSTORE
0x935 PUSH1 0x1f
0x937 NOT
0x938 SWAP1
0x939 SWAP3
0x93a ADD
0x93b SWAP2
0x93c PUSH1 0x20
0x93e SWAP2
0x93f DUP3
0x940 ADD
0x941 SWAP2
0x942 ADD
0x943 PUSH2 0x928
0x946 JUMP
---
0x932: V743 = M[S0]
0x934: M[S1] = V743
0x935: V744 = 0x1f
0x937: V745 = NOT 0x1f
0x93a: V746 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x93c: V747 = 0x20
0x940: V748 = ADD 0x20 S1
0x942: V749 = ADD 0x20 S0
0x943: V750 = 0x928
0x946: JUMP 0x928
---
Entry stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60}, {0x434, 0x468, 0x6b5}, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V746, V748, V749]
Exit stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60}, {0x434, 0x468, 0x6b5}, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, V746, V748, V749]

================================

Block 0x947
[0x947:0x9b7]
---
Predecessors: [0x928]
Successors: [0x434, 0x468, 0x6b5]
---
0x947 JUMPDEST
0x948 MLOAD
0x949 DUP2
0x94a MLOAD
0x94b PUSH1 0x20
0x94d SWAP4
0x94e DUP5
0x94f SUB
0x950 PUSH2 0x100
0x953 EXP
0x954 PUSH1 0x0
0x956 NOT
0x957 ADD
0x958 DUP1
0x959 NOT
0x95a SWAP1
0x95b SWAP3
0x95c AND
0x95d SWAP2
0x95e AND
0x95f OR
0x960 SWAP1
0x961 MSTORE
0x962 PUSH1 0x40
0x964 DUP1
0x965 MLOAD
0x966 SWAP3
0x967 SWAP1
0x968 SWAP5
0x969 ADD
0x96a DUP3
0x96b SWAP1
0x96c SUB
0x96d DUP3
0x96e SHA3
0x96f DUP10
0x970 DUP4
0x971 MSTORE
0x972 SWAP4
0x973 MLOAD
0x974 SWAP4
0x975 SWAP6
0x976 POP
0x977 PUSH1 0x1
0x979 PUSH1 0xa0
0x97b PUSH1 0x2
0x97d EXP
0x97e SUB
0x97f DUP11
0x980 AND
0x981 SWAP5
0x982 POP
0x983 CALLER
0x984 SWAP4
0x985 PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x9a6 SWAP4
0x9a7 POP
0x9a8 SWAP2
0x9a9 DUP3
0x9aa SWAP1
0x9ab SUB
0x9ac ADD
0x9ad SWAP1
0x9ae LOG4
0x9af POP
0x9b0 PUSH1 0x1
0x9b2 SWAP4
0x9b3 SWAP3
0x9b4 POP
0x9b5 POP
0x9b6 POP
0x9b7 JUMP
---
0x947: JUMPDEST 
0x948: V751 = M[S0]
0x94a: V752 = M[S1]
0x94b: V753 = 0x20
0x94f: V754 = SUB 0x20 S2
0x950: V755 = 0x100
0x953: V756 = EXP 0x100 V754
0x954: V757 = 0x0
0x956: V758 = NOT 0x0
0x957: V759 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V756
0x959: V760 = NOT V759
0x95c: V761 = AND V751 V760
0x95e: V762 = AND V759 V752
0x95f: V763 = OR V762 V761
0x961: M[S1] = V763
0x962: V764 = 0x40
0x965: V765 = M[0x40]
0x969: V766 = ADD S5 S3
0x96c: V767 = SUB V766 V765
0x96e: V768 = SHA3 V765 V767
0x971: M[V765] = S10
0x973: V769 = M[0x40]
0x977: V770 = 0x1
0x979: V771 = 0xa0
0x97b: V772 = 0x2
0x97d: V773 = EXP 0x2 0xa0
0x97e: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0x980: V775 = AND S11 0xffffffffffffffffffffffffffffffffffffffff
0x983: V776 = CALLER
0x985: V777 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x9ab: V778 = SUB V765 V769
0x9ac: V779 = ADD V778 0x20
0x9ae: LOG V769 V779 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V776 V775 V768
0x9b0: V780 = 0x1
0x9b7: JUMP {0x434, 0x468, 0x6b5}
---
Entry stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60}, {0x434, 0x468, 0x6b5}, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: [0x1]
Exit stack: [V13, S18, S17, S16, S15, S14, {0x0, 0x60}, 0x1]

================================

Block 0x9b8
[0x9b8:0x9c2]
---
Predecessors: [0x4b2, 0x8d1]
Successors: [0x9c3, 0x9c7]
---
0x9b8 JUMPDEST
0x9b9 PUSH1 0x0
0x9bb DUP2
0x9bc DUP4
0x9bd LT
0x9be ISZERO
0x9bf PUSH2 0x9c7
0x9c2 JUMPI
---
0x9b8: JUMPDEST 
0x9b9: V781 = 0x0
0x9bd: V782 = LT V313 S0
0x9be: V783 = ISZERO V782
0x9bf: V784 = 0x9c7
0x9c2: JUMPI 0x9c7 V783
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x60}, S2, V313, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x60}, S2, V313, S0, 0x0]

================================

Block 0x9c3
[0x9c3:0x9c6]
---
Predecessors: [0x9b8]
Successors: []
---
0x9c3 PUSH1 0x0
0x9c5 DUP1
0x9c6 REVERT
---
0x9c3: V785 = 0x0
0x9c6: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S8, S7, S6, S5, 0x0, {0x4b8, 0x6ec, 0x8d7}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S8, S7, S6, S5, 0x0, {0x4b8, 0x6ec, 0x8d7}, S2, S1, 0x0]

================================

Block 0x9c7
[0x9c7:0x9cc]
---
Predecessors: [0x9b8]
Successors: [0x4b8, 0x6ec, 0x8d7]
---
0x9c7 JUMPDEST
0x9c8 POP
0x9c9 SWAP1
0x9ca SUB
0x9cb SWAP1
0x9cc JUMP
---
0x9c7: JUMPDEST 
0x9ca: V786 = SUB S2 S1
0x9cc: JUMP {0x4b8, 0x6ec, 0x8d7}
---
Entry stack: [V13, S14, S13, S12, S11, S10, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S8, S7, S6, S5, 0x0, {0x4b8, 0x6ec, 0x8d7}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V786]
Exit stack: [V13, S14, S13, S12, S11, S10, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S8, S7, S6, S5, 0x0, V786]

================================

Block 0x9cd
[0x9cd:0x9db]
---
Predecessors: [0x4d4, 0x8f3]
Successors: [0x9dc, 0x9e0]
---
0x9cd JUMPDEST
0x9ce PUSH1 0x0
0x9d0 DUP2
0x9d1 PUSH1 0x0
0x9d3 NOT
0x9d4 SUB
0x9d5 DUP4
0x9d6 GT
0x9d7 ISZERO
0x9d8 PUSH2 0x9e0
0x9db JUMPI
---
0x9cd: JUMPDEST 
0x9ce: V787 = 0x0
0x9d1: V788 = 0x0
0x9d3: V789 = NOT 0x0
0x9d4: V790 = SUB 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S0
0x9d6: V791 = GT V313 V790
0x9d7: V792 = ISZERO V791
0x9d8: V793 = 0x9e0
0x9db: JUMPI 0x9e0 V792
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x60}, S2, V313, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x60}, S2, V313, S0, 0x0]

================================

Block 0x9dc
[0x9dc:0x9df]
---
Predecessors: [0x9cd]
Successors: []
---
0x9dc PUSH1 0x0
0x9de DUP1
0x9df REVERT
---
0x9dc: V794 = 0x0
0x9df: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S8, S7, S6, S5, 0x0, {0x4da, 0x708, 0x8f9}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S8, S7, S6, S5, 0x0, {0x4da, 0x708, 0x8f9}, S2, S1, 0x0]

================================

Block 0x9e0
[0x9e0:0x9e4]
---
Predecessors: [0x9cd]
Successors: [0x4da, 0x708, 0x8f9]
---
0x9e0 JUMPDEST
0x9e1 POP
0x9e2 ADD
0x9e3 SWAP1
0x9e4 JUMP
---
0x9e0: JUMPDEST 
0x9e2: V795 = ADD S1 S2
0x9e4: JUMP {0x4da, 0x708, 0x8f9}
---
Entry stack: [V13, S14, S13, S12, S11, S10, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S8, S7, S6, S5, 0x0, {0x4da, 0x708, 0x8f9}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V795]
Exit stack: [V13, S14, S13, S12, S11, S10, {0x0, 0x60, 0x1cf, 0x434, 0x468}, S8, S7, S6, S5, 0x0, V795]

================================

Block 0x9e5
[0x9e5:0xa10]
---
Predecessors: []
Successors: []
---
0x9e5 STOP
0x9e6 LOG1
0x9e7 PUSH6 0x627a7a723058
0x9ee SHA3
0x9ef CODESIZE
0x9f0 MISSING 0x1e
0x9f1 CALLVALUE
0x9f2 SMOD
0x9f3 SIGNEXTEND
0x9f4 SWAP1
0x9f5 GASLIMIT
0x9f6 SWAP5
0x9f7 MISSING 0xe3
0x9f8 ADDMOD
0x9f9 MISSING 0xae
0x9fa PUSH14 0xbb035bda58eeef5f6a4c3c1b4f13
0xa09 MISSING 0xa5
0xa0a EQ
0xa0b MISSING 0x5f
0xa0c MISSING 0xbe
0xa0d ORIGIN
0xa0e MOD
0xa0f STOP
0xa10 MISSING 0x29
---
0x9e5: STOP 
0x9e6: LOG S0 S1 S2
0x9e7: V796 = 0x627a7a723058
0x9ee: V797 = SHA3 0x627a7a723058 S3
0x9ef: V798 = CODESIZE
0x9f0: MISSING 0x1e
0x9f1: V799 = CALLVALUE
0x9f2: V800 = SMOD V799 S0
0x9f3: V801 = SIGNEXTEND V800 S1
0x9f5: V802 = GASLIMIT
0x9f7: MISSING 0xe3
0x9f8: V803 = ADDMOD S0 S1 S2
0x9f9: MISSING 0xae
0x9fa: V804 = 0xbb035bda58eeef5f6a4c3c1b4f13
0xa09: MISSING 0xa5
0xa0a: V805 = EQ S0 S1
0xa0b: MISSING 0x5f
0xa0c: MISSING 0xbe
0xa0d: V806 = ORIGIN
0xa0e: V807 = MOD V806 S0
0xa0f: STOP 
0xa10: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V798, V797, S5, S2, V801, S3, S4, V802, V803, 0xbb035bda58eeef5f6a4c3c1b4f13, V805, V807]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x84
Exit block: 0x100
Body: 0x84, 0x8c, 0x90, 0x99, 0xbb, 0xc4, 0xd3, 0xe7, 0x100, 0x2f3, 0x336, 0x33e, 0x351, 0x35f, 0x373, 0x37c

Function 1:
Public function signature: 0x18160ddd
Entry block: 0x10e
Exit block: 0x123
Body: 0x10e, 0x116, 0x11a, 0x123, 0x386

Function 2:
Public function signature: 0x313ce567
Entry block: 0x135
Exit block: 0x14a
Body: 0x135, 0x13d, 0x141, 0x14a, 0x38c

Function 3:
Public function signature: 0x33a581d2
Entry block: 0x160
Exit block: 0x123
Body: 0x123, 0x160, 0x168, 0x16c, 0x395

Function 4:
Public function signature: 0x70a08231
Entry block: 0x175
Exit block: 0x17d
Body: 0x123, 0x175, 0x17d, 0x181

Function 5:
Public function signature: 0x95d89b41
Entry block: 0x196
Exit block: 0x100
Body: 0x99, 0xbb, 0xc4, 0xd3, 0xe7, 0x100, 0x196, 0x19e, 0x1a2, 0x351, 0x35f, 0x373, 0x37c, 0x3b6, 0x3fc, 0x404

Function 6:
Public function signature: 0xa9059cbb
Entry block: 0x1ab
Exit block: 0x1cf
Body: 0x1ab, 0x1b3, 0x1b7, 0x1cf, 0x417, 0x424, 0x42a, 0x434, 0x43b, 0x446

Function 7:
Public function signature: 0xbe45fd62
Entry block: 0x1e3
Exit block: 0x1cf
Body: 0x1cf, 0x1e3, 0x1eb, 0x1ef, 0x44d, 0x458, 0x45e, 0x468, 0x46f, 0x47a

Function 8:
Public function signature: 0xf6368f8a
Entry block: 0x24c
Exit block: 0x1cf
Body: 0x1cf, 0x24c, 0x254, 0x258, 0x481, 0x48c, 0x492, 0x49b, 0x4a2, 0x4a6, 0x4b2, 0x6aa, 0x6b5

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x7f
Body: 0x7f

Function 10:
Private function
Entry block: 0x8ae
Exit block: 0x947
Body: 0x4b8, 0x4d4, 0x4da, 0x50d, 0x516, 0x52c, 0x5a6, 0x5af, 0x5be, 0x5d2, 0x5eb, 0x60b, 0x61c, 0x625, 0x63b, 0x6b8, 0x6ec, 0x708, 0x78e, 0x797, 0x7a6, 0x7ba, 0x7d3, 0x7f4, 0x808, 0x81d, 0x826, 0x83c, 0x8ae, 0x8ba, 0x8c5, 0x8d1, 0x8d7, 0x8f3, 0x8f9, 0x928, 0x931, 0x947, 0x9b8, 0x9c7, 0x9cd, 0x9e0

Function 11:
Private function
Entry block: 0x6c8
Exit block: 0x947
Body: 0x4b2, 0x4b8, 0x4d4, 0x4da, 0x50d, 0x516, 0x52c, 0x5a6, 0x5af, 0x5be, 0x5d2, 0x5eb, 0x60b, 0x61c, 0x625, 0x63b, 0x6b5, 0x6b8, 0x6c8, 0x6d5, 0x6e0, 0x6ec, 0x708, 0x78e, 0x797, 0x7a6, 0x7ba, 0x7d3, 0x7f4, 0x808, 0x81d, 0x826, 0x83c, 0x8d7, 0x8f3, 0x8f9, 0x928, 0x931, 0x947, 0x9b8, 0x9c7, 0x9cd, 0x9e0

