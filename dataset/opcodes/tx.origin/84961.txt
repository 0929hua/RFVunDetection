Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa3]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa3
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa3
0xa: JUMPI 0xa3 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xa5]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0xd8e6e2c
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xa5
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0xd8e6e2c
0x1a: V12 = EQ V10 0xd8e6e2c
0x1b: V13 = 0xa5
0x1e: JUMPI 0xa5 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xae]
---
0x1f DUP1
0x20 PUSH4 0x13af4035
0x25 EQ
0x26 PUSH2 0xae
0x29 JUMPI
---
0x20: V14 = 0x13af4035
0x25: V15 = EQ 0x13af4035 V10
0x26: V16 = 0xae
0x29: JUMPI 0xae V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xef]
---
0x2a DUP1
0x2b PUSH4 0x538de0ec
0x30 EQ
0x31 PUSH2 0xef
0x34 JUMPI
---
0x2b: V17 = 0x538de0ec
0x30: V18 = EQ 0x538de0ec V10
0x31: V19 = 0xef
0x34: JUMPI 0xef V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x138]
---
0x35 DUP1
0x36 PUSH4 0x8666ea1d
0x3b EQ
0x3c PUSH2 0x138
0x3f JUMPI
---
0x36: V20 = 0x8666ea1d
0x3b: V21 = EQ 0x8666ea1d V10
0x3c: V22 = 0x138
0x3f: JUMPI 0x138 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x14c]
---
0x40 DUP1
0x41 PUSH4 0x893d20e8
0x46 EQ
0x47 PUSH2 0x14c
0x4a JUMPI
---
0x41: V23 = 0x893d20e8
0x46: V24 = EQ 0x893d20e8 V10
0x47: V25 = 0x14c
0x4a: JUMPI 0x14c V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x160]
---
0x4b DUP1
0x4c PUSH4 0xa1973084
0x51 EQ
0x52 PUSH2 0x160
0x55 JUMPI
---
0x4c: V26 = 0xa1973084
0x51: V27 = EQ 0xa1973084 V10
0x52: V28 = 0x160
0x55: JUMPI 0x160 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1d8]
---
0x56 DUP1
0x57 PUSH4 0xa1d602e3
0x5c EQ
0x5d PUSH2 0x1d8
0x60 JUMPI
---
0x57: V29 = 0xa1d602e3
0x5c: V30 = EQ 0xa1d602e3 V10
0x5d: V31 = 0x1d8
0x60: JUMPI 0x1d8 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x241]
---
0x61 DUP1
0x62 PUSH4 0xa7f43779
0x67 EQ
0x68 PUSH2 0x241
0x6b JUMPI
---
0x62: V32 = 0xa7f43779
0x67: V33 = EQ 0xa7f43779 V10
0x68: V34 = 0x241
0x6b: JUMPI 0x241 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x300]
---
0x6c DUP1
0x6d PUSH4 0xaa3ed427
0x72 EQ
0x73 PUSH2 0x300
0x76 JUMPI
---
0x6d: V35 = 0xaa3ed427
0x72: V36 = EQ 0xaa3ed427 V10
0x73: V37 = 0x300
0x76: JUMPI 0x300 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x3eb]
---
0x77 DUP1
0x78 PUSH4 0xc2a0f88f
0x7d EQ
0x7e PUSH2 0x3eb
0x81 JUMPI
---
0x78: V38 = 0xc2a0f88f
0x7d: V39 = EQ 0xc2a0f88f V10
0x7e: V40 = 0x3eb
0x81: JUMPI 0x3eb V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x406]
---
0x82 DUP1
0x83 PUSH4 0xcc4bd7c1
0x88 EQ
0x89 PUSH2 0x406
0x8c JUMPI
---
0x83: V41 = 0xcc4bd7c1
0x88: V42 = EQ 0xcc4bd7c1 V10
0x89: V43 = 0x406
0x8c: JUMPI 0x406 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x46b]
---
0x8d DUP1
0x8e PUSH4 0xfc080f62
0x93 EQ
0x94 PUSH2 0x46b
0x97 JUMPI
---
0x8e: V44 = 0xfc080f62
0x93: V45 = EQ 0xfc080f62 V10
0x94: V46 = 0x46b
0x97: JUMPI 0x46b V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x4ac]
---
0x98 DUP1
0x99 PUSH4 0xff3214af
0x9e EQ
0x9f PUSH2 0x4ac
0xa2 JUMPI
---
0x99: V47 = 0xff3214af
0x9e: V48 = EQ 0xff3214af V10
0x9f: V49 = 0x4ac
0xa2: JUMPI 0x4ac V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0x0, 0x98, 0xec, 0x117, 0x496, 0x693, 0x71d, 0x8fa]
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xa5
[0xa5:0xaa]
---
Predecessors: [0xb]
Successors: [0xab]
---
0xa5 JUMPDEST
0xa6 PUSH2 0x57a
0xa9 PUSH1 0x1
---
0xa5: JUMPDEST 
0xa6: V50 = 0x57a
0xa9: V51 = 0x1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x57a, 0x1]
Exit stack: [V10, 0x57a, 0x1]

================================

Block 0xab
[0xab:0xad]
---
Predecessors: [0xa5, 0x138, 0x14c, 0x85e, 0x959]
Successors: [0x57a, 0x58c, 0x5a9]
---
0xab JUMPDEST
0xac SWAP1
0xad JUMP
---
0xab: JUMPDEST 
0xad: JUMP {0x57a, 0x58c, 0x5a9}
---
Entry stack: [V10, {0x57a, 0x58c, 0x5a9}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0xae
[0xae:0xcc]
---
Predecessors: [0x1f]
Successors: [0xcd, 0xec]
---
0xae JUMPDEST
0xaf PUSH2 0xa3
0xb2 PUSH1 0x4
0xb4 CALLDATALOAD
0xb5 PUSH1 0x2
0xb7 SLOAD
0xb8 PUSH1 0x1
0xba PUSH1 0xa0
0xbc PUSH1 0x2
0xbe EXP
0xbf SUB
0xc0 SWAP1
0xc1 DUP2
0xc2 AND
0xc3 ORIGIN
0xc4 SWAP1
0xc5 SWAP2
0xc6 AND
0xc7 EQ
0xc8 ISZERO
0xc9 PUSH2 0xec
0xcc JUMPI
---
0xae: JUMPDEST 
0xaf: V52 = 0xa3
0xb2: V53 = 0x4
0xb4: V54 = CALLDATALOAD 0x4
0xb5: V55 = 0x2
0xb7: V56 = S[0x2]
0xb8: V57 = 0x1
0xba: V58 = 0xa0
0xbc: V59 = 0x2
0xbe: V60 = EXP 0x2 0xa0
0xbf: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xc3: V63 = ORIGIN
0xc6: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xc7: V65 = EQ V64 V62
0xc8: V66 = ISZERO V65
0xc9: V67 = 0xec
0xcc: JUMPI 0xec V66
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V54]
Exit stack: [V10, 0xa3, V54]

================================

Block 0xcd
[0xcd:0xeb]
---
Predecessors: [0xae]
Successors: [0xec]
---
0xcd PUSH1 0x2
0xcf DUP1
0xd0 SLOAD
0xd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6 NOT
0xe7 AND
0xe8 DUP3
0xe9 OR
0xea SWAP1
0xeb SSTORE
---
0xcd: V68 = 0x2
0xd0: V69 = S[0x2]
0xd1: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V71 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe7: V72 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V69
0xe9: V73 = OR V54 V72
0xeb: S[0x2] = V73
---
Entry stack: [V10, 0xa3, V54]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xa3, V54]

================================

Block 0xec
[0xec:0xee]
---
Predecessors: [0xae, 0xcd, 0xef]
Successors: [0xa3]
---
0xec JUMPDEST
0xed POP
0xee JUMP
---
0xec: JUMPDEST 
0xee: JUMP 0xa3
---
Entry stack: [V10, 0xa3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xef
[0xef:0x116]
---
Predecessors: [0x2a]
Successors: [0xec, 0x117]
---
0xef JUMPDEST
0xf0 PUSH2 0xa3
0xf3 PUSH1 0x4
0xf5 CALLDATALOAD
0xf6 ORIGIN
0xf7 PUSH1 0x1
0xf9 PUSH1 0xa0
0xfb PUSH1 0x2
0xfd EXP
0xfe SUB
0xff AND
0x100 PUSH1 0x0
0x102 SWAP1
0x103 DUP2
0x104 MSTORE
0x105 PUSH1 0x20
0x107 DUP2
0x108 SWAP1
0x109 MSTORE
0x10a PUSH1 0x40
0x10c SWAP1
0x10d SHA3
0x10e SLOAD
0x10f PUSH1 0x1
0x111 EQ
0x112 ISZERO
0x113 PUSH2 0xec
0x116 JUMPI
---
0xef: JUMPDEST 
0xf0: V74 = 0xa3
0xf3: V75 = 0x4
0xf5: V76 = CALLDATALOAD 0x4
0xf6: V77 = ORIGIN
0xf7: V78 = 0x1
0xf9: V79 = 0xa0
0xfb: V80 = 0x2
0xfd: V81 = EXP 0x2 0xa0
0xfe: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x100: V84 = 0x0
0x104: M[0x0] = V83
0x105: V85 = 0x20
0x109: M[0x20] = 0x0
0x10a: V86 = 0x40
0x10d: V87 = SHA3 0x0 0x40
0x10e: V88 = S[V87]
0x10f: V89 = 0x1
0x111: V90 = EQ 0x1 V88
0x112: V91 = ISZERO V90
0x113: V92 = 0xec
0x116: JUMPI 0xec V91
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V76]
Exit stack: [V10, 0xa3, V76]

================================

Block 0x117
[0x117:0x137]
---
Predecessors: [0xef]
Successors: [0xa3]
---
0x117 PUSH1 0x1
0x119 DUP1
0x11a SLOAD
0x11b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x130 NOT
0x131 AND
0x132 DUP3
0x133 OR
0x134 SWAP1
0x135 SSTORE
0x136 POP
0x137 JUMP
---
0x117: V93 = 0x1
0x11a: V94 = S[0x1]
0x11b: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x130: V96 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x131: V97 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V94
0x133: V98 = OR V76 V97
0x135: S[0x1] = V98
0x137: JUMP 0xa3
---
Entry stack: [V10, 0xa3, V76]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x138
[0x138:0x14b]
---
Predecessors: [0x35]
Successors: [0xab]
---
0x138 JUMPDEST
0x139 PUSH2 0x58c
0x13c PUSH1 0x1
0x13e SLOAD
0x13f PUSH1 0x1
0x141 PUSH1 0xa0
0x143 PUSH1 0x2
0x145 EXP
0x146 SUB
0x147 AND
0x148 PUSH2 0xab
0x14b JUMP
---
0x138: JUMPDEST 
0x139: V99 = 0x58c
0x13c: V100 = 0x1
0x13e: V101 = S[0x1]
0x13f: V102 = 0x1
0x141: V103 = 0xa0
0x143: V104 = 0x2
0x145: V105 = EXP 0x2 0xa0
0x146: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x148: V108 = 0xab
0x14b: JUMP 0xab
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x58c, V107]
Exit stack: [V10, 0x58c, V107]

================================

Block 0x14c
[0x14c:0x15f]
---
Predecessors: [0x40]
Successors: [0xab]
---
0x14c JUMPDEST
0x14d PUSH2 0x58c
0x150 PUSH1 0x2
0x152 SLOAD
0x153 PUSH1 0x1
0x155 PUSH1 0xa0
0x157 PUSH1 0x2
0x159 EXP
0x15a SUB
0x15b AND
0x15c PUSH2 0xab
0x15f JUMP
---
0x14c: JUMPDEST 
0x14d: V109 = 0x58c
0x150: V110 = 0x2
0x152: V111 = S[0x2]
0x153: V112 = 0x1
0x155: V113 = 0xa0
0x157: V114 = 0x2
0x159: V115 = EXP 0x2 0xa0
0x15a: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15b: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x15c: V118 = 0xab
0x15f: JUMP 0xab
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x58c, V117]
Exit stack: [V10, 0x58c, V117]

================================

Block 0x160
[0x160:0x17b]
---
Predecessors: [0x4b]
Successors: [0x17c, 0x7cc]
---
0x160 JUMPDEST
0x161 PUSH2 0x5a9
0x164 PUSH1 0x4
0x166 CALLDATALOAD
0x167 PUSH1 0x40
0x169 DUP1
0x16a MLOAD
0x16b PUSH1 0x20
0x16d DUP2
0x16e ADD
0x16f SWAP1
0x170 SWAP2
0x171 MSTORE
0x172 PUSH1 0x0
0x174 DUP2
0x175 MSTORE
0x176 DUP2
0x177 ISZERO
0x178 PUSH2 0x7cc
0x17b JUMPI
---
0x160: JUMPDEST 
0x161: V119 = 0x5a9
0x164: V120 = 0x4
0x166: V121 = CALLDATALOAD 0x4
0x167: V122 = 0x40
0x16a: V123 = M[0x40]
0x16b: V124 = 0x20
0x16e: V125 = ADD V123 0x20
0x171: M[0x40] = V125
0x172: V126 = 0x0
0x175: M[V123] = 0x0
0x177: V127 = ISZERO V121
0x178: V128 = 0x7cc
0x17b: JUMPI 0x7cc V127
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5a9, V121, V123]
Exit stack: [V10, 0x5a9, V121, V123]

================================

Block 0x17c
[0x17c:0x1bc]
---
Predecessors: [0x160]
Successors: [0x1bd, 0x852]
---
0x17c PUSH1 0x40
0x17e DUP1
0x17f MLOAD
0x180 PUSH1 0x4
0x182 DUP1
0x183 SLOAD
0x184 PUSH1 0x20
0x186 PUSH1 0x2
0x188 PUSH1 0x1
0x18a DUP4
0x18b AND
0x18c ISZERO
0x18d PUSH2 0x100
0x190 MUL
0x191 PUSH1 0x0
0x193 NOT
0x194 ADD
0x195 SWAP1
0x196 SWAP3
0x197 AND
0x198 SWAP2
0x199 SWAP1
0x19a SWAP2
0x19b DIV
0x19c PUSH1 0x1f
0x19e DUP2
0x19f ADD
0x1a0 DUP3
0x1a1 SWAP1
0x1a2 DIV
0x1a3 DUP3
0x1a4 MUL
0x1a5 DUP5
0x1a6 ADD
0x1a7 DUP3
0x1a8 ADD
0x1a9 SWAP1
0x1aa SWAP5
0x1ab MSTORE
0x1ac DUP4
0x1ad DUP4
0x1ae MSTORE
0x1af SWAP2
0x1b0 SWAP3
0x1b1 SWAP1
0x1b2 SWAP2
0x1b3 DUP4
0x1b4 ADD
0x1b5 DUP3
0x1b6 DUP3
0x1b7 DUP1
0x1b8 ISZERO
0x1b9 PUSH2 0x852
0x1bc JUMPI
---
0x17c: V129 = 0x40
0x17f: V130 = M[0x40]
0x180: V131 = 0x4
0x183: V132 = S[0x4]
0x184: V133 = 0x20
0x186: V134 = 0x2
0x188: V135 = 0x1
0x18b: V136 = AND V132 0x1
0x18c: V137 = ISZERO V136
0x18d: V138 = 0x100
0x190: V139 = MUL 0x100 V137
0x191: V140 = 0x0
0x193: V141 = NOT 0x0
0x194: V142 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V139
0x197: V143 = AND V132 V142
0x19b: V144 = DIV V143 0x2
0x19c: V145 = 0x1f
0x19f: V146 = ADD V144 0x1f
0x1a2: V147 = DIV V146 0x20
0x1a4: V148 = MUL 0x20 V147
0x1a6: V149 = ADD V130 V148
0x1a8: V150 = ADD 0x20 V149
0x1ab: M[0x40] = V150
0x1ae: M[V130] = V144
0x1b4: V151 = ADD V130 0x20
0x1b8: V152 = ISZERO V144
0x1b9: V153 = 0x852
0x1bc: JUMPI 0x852 V152
---
Entry stack: [V10, 0x5a9, V121, V123]
Stack pops: 0
Stack additions: [V130, 0x4, V144, V151, 0x4, V144]
Exit stack: [V10, 0x5a9, V121, V123, V130, 0x4, V144, V151, 0x4, V144]

================================

Block 0x1bd
[0x1bd:0x1c4]
---
Predecessors: [0x17c]
Successors: [0x1c5, 0x827]
---
0x1bd DUP1
0x1be PUSH1 0x1f
0x1c0 LT
0x1c1 PUSH2 0x827
0x1c4 JUMPI
---
0x1be: V154 = 0x1f
0x1c0: V155 = LT 0x1f V144
0x1c1: V156 = 0x827
0x1c4: JUMPI 0x827 V155
---
Entry stack: [V10, 0x5a9, V121, V123, V130, 0x4, V144, V151, 0x4, V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5a9, V121, V123, V130, 0x4, V144, V151, 0x4, V144]

================================

Block 0x1c5
[0x1c5:0x1d7]
---
Predecessors: [0x1bd]
Successors: [0x852]
---
0x1c5 PUSH2 0x100
0x1c8 DUP1
0x1c9 DUP4
0x1ca SLOAD
0x1cb DIV
0x1cc MUL
0x1cd DUP4
0x1ce MSTORE
0x1cf SWAP2
0x1d0 PUSH1 0x20
0x1d2 ADD
0x1d3 SWAP2
0x1d4 PUSH2 0x852
0x1d7 JUMP
---
0x1c5: V157 = 0x100
0x1ca: V158 = S[0x4]
0x1cb: V159 = DIV V158 0x100
0x1cc: V160 = MUL V159 0x100
0x1ce: M[V151] = V160
0x1d0: V161 = 0x20
0x1d2: V162 = ADD 0x20 V151
0x1d4: V163 = 0x852
0x1d7: JUMP 0x852
---
Entry stack: [V10, 0x5a9, V121, V123, V130, 0x4, V144, V151, 0x4, V144]
Stack pops: 3
Stack additions: [V162, S1, S0]
Exit stack: [V10, 0x5a9, V121, V123, V130, 0x4, V144, V162, 0x4, V144]

================================

Block 0x1d8
[0x1d8:0x225]
---
Predecessors: [0x56]
Successors: [0x226, 0x959]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0x5a9
0x1dc PUSH1 0x40
0x1de DUP1
0x1df MLOAD
0x1e0 PUSH1 0x20
0x1e2 DUP2
0x1e3 DUP2
0x1e4 ADD
0x1e5 DUP4
0x1e6 MSTORE
0x1e7 PUSH1 0x0
0x1e9 DUP3
0x1ea MSTORE
0x1eb DUP3
0x1ec MLOAD
0x1ed PUSH1 0x3
0x1ef DUP1
0x1f0 SLOAD
0x1f1 PUSH1 0x2
0x1f3 PUSH1 0x1
0x1f5 DUP3
0x1f6 AND
0x1f7 ISZERO
0x1f8 PUSH2 0x100
0x1fb MUL
0x1fc PUSH1 0x0
0x1fe NOT
0x1ff ADD
0x200 SWAP1
0x201 SWAP2
0x202 AND
0x203 DIV
0x204 PUSH1 0x1f
0x206 DUP2
0x207 ADD
0x208 DUP5
0x209 SWAP1
0x20a DIV
0x20b DUP5
0x20c MUL
0x20d DUP4
0x20e ADD
0x20f DUP5
0x210 ADD
0x211 SWAP1
0x212 SWAP6
0x213 MSTORE
0x214 DUP5
0x215 DUP3
0x216 MSTORE
0x217 SWAP3
0x218 SWAP4
0x219 SWAP1
0x21a SWAP3
0x21b SWAP2
0x21c DUP4
0x21d ADD
0x21e DUP3
0x21f DUP3
0x220 DUP1
0x221 ISZERO
0x222 PUSH2 0x959
0x225 JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V164 = 0x5a9
0x1dc: V165 = 0x40
0x1df: V166 = M[0x40]
0x1e0: V167 = 0x20
0x1e4: V168 = ADD 0x20 V166
0x1e6: M[0x40] = V168
0x1e7: V169 = 0x0
0x1ea: M[V166] = 0x0
0x1ec: V170 = M[0x40]
0x1ed: V171 = 0x3
0x1f0: V172 = S[0x3]
0x1f1: V173 = 0x2
0x1f3: V174 = 0x1
0x1f6: V175 = AND V172 0x1
0x1f7: V176 = ISZERO V175
0x1f8: V177 = 0x100
0x1fb: V178 = MUL 0x100 V176
0x1fc: V179 = 0x0
0x1fe: V180 = NOT 0x0
0x1ff: V181 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V178
0x202: V182 = AND V172 V181
0x203: V183 = DIV V182 0x2
0x204: V184 = 0x1f
0x207: V185 = ADD V183 0x1f
0x20a: V186 = DIV V185 0x20
0x20c: V187 = MUL 0x20 V186
0x20e: V188 = ADD V170 V187
0x210: V189 = ADD 0x20 V188
0x213: M[0x40] = V189
0x216: M[V170] = V183
0x21d: V190 = ADD V170 0x20
0x221: V191 = ISZERO V183
0x222: V192 = 0x959
0x225: JUMPI 0x959 V191
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5a9, V166, V170, 0x3, V183, V190, 0x3, V183]
Exit stack: [V10, 0x5a9, V166, V170, 0x3, V183, V190, 0x3, V183]

================================

Block 0x226
[0x226:0x22d]
---
Predecessors: [0x1d8]
Successors: [0x22e, 0x92e]
---
0x226 DUP1
0x227 PUSH1 0x1f
0x229 LT
0x22a PUSH2 0x92e
0x22d JUMPI
---
0x227: V193 = 0x1f
0x229: V194 = LT 0x1f V183
0x22a: V195 = 0x92e
0x22d: JUMPI 0x92e V194
---
Entry stack: [V10, 0x5a9, V166, V170, 0x3, V183, V190, 0x3, V183]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5a9, V166, V170, 0x3, V183, V190, 0x3, V183]

================================

Block 0x22e
[0x22e:0x240]
---
Predecessors: [0x226]
Successors: [0x959]
---
0x22e PUSH2 0x100
0x231 DUP1
0x232 DUP4
0x233 SLOAD
0x234 DIV
0x235 MUL
0x236 DUP4
0x237 MSTORE
0x238 SWAP2
0x239 PUSH1 0x20
0x23b ADD
0x23c SWAP2
0x23d PUSH2 0x959
0x240 JUMP
---
0x22e: V196 = 0x100
0x233: V197 = S[0x3]
0x234: V198 = DIV V197 0x100
0x235: V199 = MUL V198 0x100
0x237: M[V190] = V199
0x239: V200 = 0x20
0x23b: V201 = ADD 0x20 V190
0x23d: V202 = 0x959
0x240: JUMP 0x959
---
Entry stack: [V10, 0x5a9, V166, V170, 0x3, V183, V190, 0x3, V183]
Stack pops: 3
Stack additions: [V201, S1, S0]
Exit stack: [V10, 0x5a9, V166, V170, 0x3, V183, V201, 0x3, V183]

================================

Block 0x241
[0x241:0x25c]
---
Predecessors: [0x61]
Successors: [0x25d, 0x617]
---
0x241 JUMPDEST
0x242 PUSH2 0xa3
0x245 PUSH1 0x7
0x247 SLOAD
0x248 PUSH1 0x1
0x24a PUSH1 0xa0
0x24c PUSH1 0x2
0x24e EXP
0x24f SUB
0x250 SWAP1
0x251 DUP2
0x252 AND
0x253 ORIGIN
0x254 SWAP1
0x255 SWAP2
0x256 AND
0x257 EQ
0x258 ISZERO
0x259 PUSH2 0x617
0x25c JUMPI
---
0x241: JUMPDEST 
0x242: V203 = 0xa3
0x245: V204 = 0x7
0x247: V205 = S[0x7]
0x248: V206 = 0x1
0x24a: V207 = 0xa0
0x24c: V208 = 0x2
0x24e: V209 = EXP 0x2 0xa0
0x24f: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x252: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x253: V212 = ORIGIN
0x256: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x257: V214 = EQ V213 V211
0x258: V215 = ISZERO V214
0x259: V216 = 0x617
0x25c: JUMPI 0x617 V215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3]
Exit stack: [V10, 0xa3]

================================

Block 0x25d
[0x25d:0x2f2]
---
Predecessors: [0x241]
Successors: [0x2f3, 0x693]
---
0x25d PUSH1 0x40
0x25f DUP1
0x260 MLOAD
0x261 PUSH1 0x1
0x263 DUP2
0x264 MSTORE
0x265 PUSH1 0x20
0x267 DUP2
0x268 ADD
0x269 DUP3
0x26a SWAP1
0x26b MSTORE
0x26c PUSH1 0x31
0x26e DUP2
0x26f DUP4
0x270 ADD
0x271 MSTORE
0x272 PUSH32 0x5b5368617265686f6c6465725d5b72656d6f76655d20526573756c743a205368
0x293 PUSH1 0x60
0x295 DUP3
0x296 ADD
0x297 MSTORE
0x298 PUSH32 0x617265686f6c6465722052656d6f766564000000000000000000000000000000
0x2b9 PUSH1 0x80
0x2bb DUP3
0x2bc ADD
0x2bd MSTORE
0x2be SWAP1
0x2bf MLOAD
0x2c0 PUSH1 0x0
0x2c2 DUP1
0x2c3 MLOAD
0x2c4 PUSH1 0x20
0x2c6 PUSH2 0x965
0x2c9 DUP4
0x2ca CODECOPY
0x2cb DUP2
0x2cc MLOAD
0x2cd SWAP2
0x2ce MSTORE
0x2cf SWAP2
0x2d0 DUP2
0x2d1 SWAP1
0x2d2 SUB
0x2d3 PUSH1 0xa0
0x2d5 ADD
0x2d6 SWAP1
0x2d7 LOG1
0x2d8 PUSH2 0x695
0x2db PUSH1 0x2
0x2dd SLOAD
0x2de PUSH1 0x1
0x2e0 PUSH1 0xa0
0x2e2 PUSH1 0x2
0x2e4 EXP
0x2e5 SUB
0x2e6 SWAP1
0x2e7 DUP2
0x2e8 AND
0x2e9 ORIGIN
0x2ea SWAP1
0x2eb SWAP2
0x2ec AND
0x2ed EQ
0x2ee ISZERO
0x2ef PUSH2 0x693
0x2f2 JUMPI
---
0x25d: V217 = 0x40
0x260: V218 = M[0x40]
0x261: V219 = 0x1
0x264: M[V218] = 0x1
0x265: V220 = 0x20
0x268: V221 = ADD V218 0x20
0x26b: M[V221] = 0x40
0x26c: V222 = 0x31
0x270: V223 = ADD 0x40 V218
0x271: M[V223] = 0x31
0x272: V224 = 0x5b5368617265686f6c6465725d5b72656d6f76655d20526573756c743a205368
0x293: V225 = 0x60
0x296: V226 = ADD V218 0x60
0x297: M[V226] = 0x5b5368617265686f6c6465725d5b72656d6f76655d20526573756c743a205368
0x298: V227 = 0x617265686f6c6465722052656d6f766564000000000000000000000000000000
0x2b9: V228 = 0x80
0x2bc: V229 = ADD V218 0x80
0x2bd: M[V229] = 0x617265686f6c6465722052656d6f766564000000000000000000000000000000
0x2bf: V230 = M[0x40]
0x2c0: V231 = 0x0
0x2c3: V232 = M[0x0]
0x2c4: V233 = 0x20
0x2c6: V234 = 0x965
0x2ca: CODECOPY 0x0 0x965 0x20
0x2cc: V235 = M[0x0]
0x2ce: M[0x0] = V232
0x2d2: V236 = SUB V218 V230
0x2d3: V237 = 0xa0
0x2d5: V238 = ADD 0xa0 V236
0x2d7: LOG V230 V238 V235
0x2d8: V239 = 0x695
0x2db: V240 = 0x2
0x2dd: V241 = S[0x2]
0x2de: V242 = 0x1
0x2e0: V243 = 0xa0
0x2e2: V244 = 0x2
0x2e4: V245 = EXP 0x2 0xa0
0x2e5: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e8: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x2e9: V248 = ORIGIN
0x2ec: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x2ed: V250 = EQ V249 V247
0x2ee: V251 = ISZERO V250
0x2ef: V252 = 0x693
0x2f2: JUMPI 0x693 V251
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: [0x695]
Exit stack: [V10, 0xa3, 0x695]

================================

Block 0x2f3
[0x2f3:0x2ff]
---
Predecessors: [0x25d]
Successors: []
---
0x2f3 PUSH1 0x2
0x2f5 SLOAD
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0xa0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd SUB
0x2fe AND
0x2ff SELFDESTRUCT
---
0x2f3: V253 = 0x2
0x2f5: V254 = S[0x2]
0x2f6: V255 = 0x1
0x2f8: V256 = 0xa0
0x2fa: V257 = 0x2
0x2fc: V258 = EXP 0x2 0xa0
0x2fd: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fe: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x2ff: SELFDESTRUCT V260
---
Entry stack: [V10, 0xa3, 0x695]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, 0x695]

================================

Block 0x300
[0x300:0x32c]
---
Predecessors: [0x6c]
Successors: [0x32d, 0x6a1]
---
0x300 JUMPDEST
0x301 PUSH2 0xa3
0x304 PUSH1 0x4
0x306 CALLDATALOAD
0x307 PUSH1 0x24
0x309 CALLDATALOAD
0x30a PUSH1 0x44
0x30c CALLDATALOAD
0x30d PUSH1 0x64
0x30f CALLDATALOAD
0x310 PUSH1 0x7
0x312 SLOAD
0x313 PUSH1 0x0
0x315 SWAP1
0x316 DUP2
0x317 SWAP1
0x318 PUSH1 0x1
0x31a PUSH1 0xa0
0x31c PUSH1 0x2
0x31e EXP
0x31f SUB
0x320 SWAP1
0x321 DUP2
0x322 AND
0x323 ORIGIN
0x324 SWAP1
0x325 SWAP2
0x326 AND
0x327 EQ
0x328 ISZERO
0x329 PUSH2 0x6a1
0x32c JUMPI
---
0x300: JUMPDEST 
0x301: V261 = 0xa3
0x304: V262 = 0x4
0x306: V263 = CALLDATALOAD 0x4
0x307: V264 = 0x24
0x309: V265 = CALLDATALOAD 0x24
0x30a: V266 = 0x44
0x30c: V267 = CALLDATALOAD 0x44
0x30d: V268 = 0x64
0x30f: V269 = CALLDATALOAD 0x64
0x310: V270 = 0x7
0x312: V271 = S[0x7]
0x313: V272 = 0x0
0x318: V273 = 0x1
0x31a: V274 = 0xa0
0x31c: V275 = 0x2
0x31e: V276 = EXP 0x2 0xa0
0x31f: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x322: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x323: V279 = ORIGIN
0x326: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x327: V281 = EQ V280 V278
0x328: V282 = ISZERO V281
0x329: V283 = 0x6a1
0x32c: JUMPI 0x6a1 V282
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V263, V265, V267, V269, 0x0, 0x0]
Exit stack: [V10, 0xa3, V263, V265, V267, V269, 0x0, 0x0]

================================

Block 0x32d
[0x32d:0x367]
---
Predecessors: [0x300]
Successors: [0x368]
---
0x32d DUP5
0x32e SWAP2
0x32f POP
0x330 DUP2
0x331 PUSH1 0x1
0x333 PUSH1 0xa0
0x335 PUSH1 0x2
0x337 EXP
0x338 SUB
0x339 AND
0x33a PUSH4 0xc2a0f88f
0x33f PUSH1 0x40
0x341 MLOAD
0x342 DUP2
0x343 PUSH1 0xe0
0x345 PUSH1 0x2
0x347 EXP
0x348 MUL
0x349 DUP2
0x34a MSTORE
0x34b PUSH1 0x4
0x34d ADD
0x34e DUP1
0x34f SWAP1
0x350 POP
0x351 PUSH1 0x20
0x353 PUSH1 0x40
0x355 MLOAD
0x356 DUP1
0x357 DUP4
0x358 SUB
0x359 DUP2
0x35a PUSH1 0x0
0x35c DUP8
0x35d PUSH2 0x61da
0x360 GAS
0x361 SUB
0x362 CALL
0x363 ISZERO
0x364 PUSH2 0x2
0x367 JUMPI
---
0x331: V284 = 0x1
0x333: V285 = 0xa0
0x335: V286 = 0x2
0x337: V287 = EXP 0x2 0xa0
0x338: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x339: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x33a: V290 = 0xc2a0f88f
0x33f: V291 = 0x40
0x341: V292 = M[0x40]
0x343: V293 = 0xe0
0x345: V294 = 0x2
0x347: V295 = EXP 0x2 0xe0
0x348: V296 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc2a0f88f
0x34a: M[V292] = 0xc2a0f88f00000000000000000000000000000000000000000000000000000000
0x34b: V297 = 0x4
0x34d: V298 = ADD 0x4 V292
0x351: V299 = 0x20
0x353: V300 = 0x40
0x355: V301 = M[0x40]
0x358: V302 = SUB V298 V301
0x35a: V303 = 0x0
0x35d: V304 = 0x61da
0x360: V305 = GAS
0x361: V306 = SUB V305 0x61da
0x362: V307 = CALL V306 V289 0x0 V301 V302 V301 0x20
0x363: V308 = ISZERO V307
0x364: V309 = 0x2
0x367: THROWI V308
---
Entry stack: [V10, 0xa3, V263, V265, V267, V269, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S4, S0, V289, 0xc2a0f88f, V298]
Exit stack: [V10, 0xa3, V263, V265, V267, V269, V265, 0x0, V289, 0xc2a0f88f, V298]

================================

Block 0x368
[0x368:0x377]
---
Predecessors: [0x32d]
Successors: [0x378, 0x725]
---
0x368 POP
0x369 POP
0x36a PUSH1 0x40
0x36c MLOAD
0x36d MLOAD
0x36e PUSH1 0x1
0x370 EQ
0x371 ISZERO
0x372 SWAP1
0x373 POP
0x374 PUSH2 0x725
0x377 JUMPI
---
0x36a: V310 = 0x40
0x36c: V311 = M[0x40]
0x36d: V312 = M[V311]
0x36e: V313 = 0x1
0x370: V314 = EQ 0x1 V312
0x371: V315 = ISZERO V314
0x374: V316 = 0x725
0x377: JUMPI 0x725 V315
---
Entry stack: [V10, 0xa3, V263, V265, V267, V269, V265, 0x0, V289, 0xc2a0f88f, V298]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0xa3, V263, V265, V267, V269, V265, 0x0]

================================

Block 0x378
[0x378:0x3e3]
---
Predecessors: [0x368]
Successors: [0x3e4]
---
0x378 PUSH1 0x40
0x37a DUP1
0x37b MLOAD
0x37c PUSH32 0x71e24fe00000000000000000000000000000000000000000000000000000000
0x39d DUP2
0x39e MSTORE
0x39f PUSH1 0x1
0x3a1 PUSH1 0xa0
0x3a3 PUSH1 0x2
0x3a5 EXP
0x3a6 SUB
0x3a7 DUP5
0x3a8 DUP2
0x3a9 AND
0x3aa PUSH1 0x4
0x3ac DUP4
0x3ad ADD
0x3ae MSTORE
0x3af PUSH1 0x24
0x3b1 DUP3
0x3b2 ADD
0x3b3 DUP8
0x3b4 SWAP1
0x3b5 MSTORE
0x3b6 PUSH1 0x44
0x3b8 DUP3
0x3b9 ADD
0x3ba DUP7
0x3bb SWAP1
0x3bc MSTORE
0x3bd SWAP2
0x3be MLOAD
0x3bf DUP9
0x3c0 SWAP4
0x3c1 SWAP3
0x3c2 DUP5
0x3c3 AND
0x3c4 SWAP3
0x3c5 PUSH4 0x71e24fe
0x3ca SWAP3
0x3cb PUSH1 0x64
0x3cd DUP1
0x3ce DUP3
0x3cf ADD
0x3d0 SWAP4
0x3d1 SWAP2
0x3d2 DUP3
0x3d3 SWAP1
0x3d4 SUB
0x3d5 ADD
0x3d6 DUP2
0x3d7 DUP4
0x3d8 DUP8
0x3d9 PUSH2 0x61da
0x3dc GAS
0x3dd SUB
0x3de CALL
0x3df ISZERO
0x3e0 PUSH2 0x2
0x3e3 JUMPI
---
0x378: V317 = 0x40
0x37b: V318 = M[0x40]
0x37c: V319 = 0x71e24fe00000000000000000000000000000000000000000000000000000000
0x39e: M[V318] = 0x71e24fe00000000000000000000000000000000000000000000000000000000
0x39f: V320 = 0x1
0x3a1: V321 = 0xa0
0x3a3: V322 = 0x2
0x3a5: V323 = EXP 0x2 0xa0
0x3a6: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a9: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x3aa: V326 = 0x4
0x3ad: V327 = ADD V318 0x4
0x3ae: M[V327] = V325
0x3af: V328 = 0x24
0x3b2: V329 = ADD V318 0x24
0x3b5: M[V329] = V267
0x3b6: V330 = 0x44
0x3b9: V331 = ADD V318 0x44
0x3bc: M[V331] = V269
0x3be: V332 = M[0x40]
0x3c3: V333 = AND V263 0xffffffffffffffffffffffffffffffffffffffff
0x3c5: V334 = 0x71e24fe
0x3cb: V335 = 0x64
0x3cf: V336 = ADD V318 0x64
0x3d4: V337 = SUB V318 V332
0x3d5: V338 = ADD V337 0x64
0x3d9: V339 = 0x61da
0x3dc: V340 = GAS
0x3dd: V341 = SUB V340 0x61da
0x3de: V342 = CALL V341 V333 0x0 V332 V338 V332 0x0
0x3df: V343 = ISZERO V342
0x3e0: V344 = 0x2
0x3e3: THROWI V343
---
Entry stack: [V10, 0xa3, V263, V265, V267, V269, V265, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S5, V333, 0x71e24fe, V336]
Exit stack: [V10, 0xa3, V263, V265, V267, V269, V265, V263, V333, 0x71e24fe, V336]

================================

Block 0x3e4
[0x3e4:0x3ea]
---
Predecessors: [0x378]
Successors: [0x7c7]
---
0x3e4 POP
0x3e5 POP
0x3e6 POP
0x3e7 PUSH2 0x7c7
0x3ea JUMP
---
0x3e7: V345 = 0x7c7
0x3ea: JUMP 0x7c7
---
Entry stack: [V10, 0xa3, V263, V265, V267, V269, V265, V263, V333, 0x71e24fe, V336]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0xa3, V263, V265, V267, V269, V265, V263]

================================

Block 0x3eb
[0x3eb:0x405]
---
Predecessors: [0x77]
Successors: [0x40d]
---
0x3eb JUMPDEST
0x3ec PUSH2 0x57a
0x3ef PUSH1 0x1
0x3f1 SLOAD
0x3f2 PUSH1 0x0
0x3f4 SWAP1
0x3f5 PUSH2 0x85e
0x3f8 SWAP1
0x3f9 PUSH1 0x1
0x3fb PUSH1 0xa0
0x3fd PUSH1 0x2
0x3ff EXP
0x400 SUB
0x401 AND
0x402 PUSH2 0x40d
0x405 JUMP
---
0x3eb: JUMPDEST 
0x3ec: V346 = 0x57a
0x3ef: V347 = 0x1
0x3f1: V348 = S[0x1]
0x3f2: V349 = 0x0
0x3f5: V350 = 0x85e
0x3f9: V351 = 0x1
0x3fb: V352 = 0xa0
0x3fd: V353 = 0x2
0x3ff: V354 = EXP 0x2 0xa0
0x400: V355 = SUB 0x10000000000000000000000000000000000000000 0x1
0x401: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x402: V357 = 0x40d
0x405: JUMP 0x40d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x57a, 0x0, 0x85e, V356]
Exit stack: [V10, 0x57a, 0x0, 0x85e, V356]

================================

Block 0x406
[0x406:0x40c]
---
Predecessors: [0x82]
Successors: [0x40d]
---
0x406 JUMPDEST
0x407 PUSH2 0x57a
0x40a PUSH1 0x4
0x40c CALLDATALOAD
---
0x406: JUMPDEST 
0x407: V358 = 0x57a
0x40a: V359 = 0x4
0x40c: V360 = CALLDATALOAD 0x4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x57a, V360]
Exit stack: [V10, 0x57a, V360]

================================

Block 0x40d
[0x40d:0x45d]
---
Predecessors: [0x3eb, 0x406]
Successors: [0x45e]
---
0x40d JUMPDEST
0x40e PUSH1 0x0
0x410 PUSH1 0x0
0x412 DUP3
0x413 SWAP1
0x414 POP
0x415 DUP1
0x416 PUSH1 0x1
0x418 PUSH1 0xa0
0x41a PUSH1 0x2
0x41c EXP
0x41d SUB
0x41e AND
0x41f PUSH4 0x1d6df939
0x424 ADDRESS
0x425 PUSH1 0x40
0x427 MLOAD
0x428 DUP3
0x429 PUSH1 0xe0
0x42b PUSH1 0x2
0x42d EXP
0x42e MUL
0x42f DUP2
0x430 MSTORE
0x431 PUSH1 0x4
0x433 ADD
0x434 DUP1
0x435 DUP3
0x436 PUSH1 0x1
0x438 PUSH1 0xa0
0x43a PUSH1 0x2
0x43c EXP
0x43d SUB
0x43e AND
0x43f DUP2
0x440 MSTORE
0x441 PUSH1 0x20
0x443 ADD
0x444 SWAP2
0x445 POP
0x446 POP
0x447 PUSH1 0x20
0x449 PUSH1 0x40
0x44b MLOAD
0x44c DUP1
0x44d DUP4
0x44e SUB
0x44f DUP2
0x450 PUSH1 0x0
0x452 DUP8
0x453 PUSH2 0x61da
0x456 GAS
0x457 SUB
0x458 CALL
0x459 ISZERO
0x45a PUSH2 0x2
0x45d JUMPI
---
0x40d: JUMPDEST 
0x40e: V361 = 0x0
0x410: V362 = 0x0
0x416: V363 = 0x1
0x418: V364 = 0xa0
0x41a: V365 = 0x2
0x41c: V366 = EXP 0x2 0xa0
0x41d: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41e: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x41f: V369 = 0x1d6df939
0x424: V370 = ADDRESS
0x425: V371 = 0x40
0x427: V372 = M[0x40]
0x429: V373 = 0xe0
0x42b: V374 = 0x2
0x42d: V375 = EXP 0x2 0xe0
0x42e: V376 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1d6df939
0x430: M[V372] = 0x1d6df93900000000000000000000000000000000000000000000000000000000
0x431: V377 = 0x4
0x433: V378 = ADD 0x4 V372
0x436: V379 = 0x1
0x438: V380 = 0xa0
0x43a: V381 = 0x2
0x43c: V382 = EXP 0x2 0xa0
0x43d: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43e: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x440: M[V378] = V384
0x441: V385 = 0x20
0x443: V386 = ADD 0x20 V378
0x447: V387 = 0x20
0x449: V388 = 0x40
0x44b: V389 = M[0x40]
0x44e: V390 = SUB V386 V389
0x450: V391 = 0x0
0x453: V392 = 0x61da
0x456: V393 = GAS
0x457: V394 = SUB V393 0x61da
0x458: V395 = CALL V394 V368 0x0 V389 V390 V389 0x20
0x459: V396 = ISZERO V395
0x45a: V397 = 0x2
0x45d: THROWI V396
---
Entry stack: [V10, 0x57a, S2, {0x57a, 0x85e}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V368, 0x1d6df939, V386]
Exit stack: [V10, 0x57a, S2, {0x57a, 0x85e}, S0, 0x0, S0, V368, 0x1d6df939, V386]

================================

Block 0x45e
[0x45e:0x46a]
---
Predecessors: [0x40d]
Successors: [0x57a, 0x85e]
---
0x45e POP
0x45f POP
0x460 PUSH1 0x40
0x462 MLOAD
0x463 MLOAD
0x464 SWAP5
0x465 SWAP4
0x466 POP
0x467 POP
0x468 POP
0x469 POP
0x46a JUMP
---
0x460: V398 = 0x40
0x462: V399 = M[0x40]
0x463: V400 = M[V399]
0x46a: JUMP {0x57a, 0x85e}
---
Entry stack: [V10, 0x57a, S7, {0x57a, 0x85e}, S5, 0x0, S3, V368, 0x1d6df939, V386]
Stack pops: 7
Stack additions: [V400]
Exit stack: [V10, 0x57a, S7, V400]

================================

Block 0x46b
[0x46b:0x495]
---
Predecessors: [0x8d]
Successors: [0x496, 0x8fa]
---
0x46b JUMPDEST
0x46c PUSH2 0xa3
0x46f PUSH1 0x4
0x471 CALLDATALOAD
0x472 PUSH1 0x24
0x474 CALLDATALOAD
0x475 ORIGIN
0x476 PUSH1 0x1
0x478 PUSH1 0xa0
0x47a PUSH1 0x2
0x47c EXP
0x47d SUB
0x47e AND
0x47f PUSH1 0x0
0x481 SWAP1
0x482 DUP2
0x483 MSTORE
0x484 PUSH1 0x20
0x486 DUP2
0x487 SWAP1
0x488 MSTORE
0x489 PUSH1 0x40
0x48b SWAP1
0x48c SHA3
0x48d SLOAD
0x48e PUSH1 0x1
0x490 EQ
0x491 ISZERO
0x492 PUSH2 0x8fa
0x495 JUMPI
---
0x46b: JUMPDEST 
0x46c: V401 = 0xa3
0x46f: V402 = 0x4
0x471: V403 = CALLDATALOAD 0x4
0x472: V404 = 0x24
0x474: V405 = CALLDATALOAD 0x24
0x475: V406 = ORIGIN
0x476: V407 = 0x1
0x478: V408 = 0xa0
0x47a: V409 = 0x2
0x47c: V410 = EXP 0x2 0xa0
0x47d: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x47f: V413 = 0x0
0x483: M[0x0] = V412
0x484: V414 = 0x20
0x488: M[0x20] = 0x0
0x489: V415 = 0x40
0x48c: V416 = SHA3 0x0 0x40
0x48d: V417 = S[V416]
0x48e: V418 = 0x1
0x490: V419 = EQ 0x1 V417
0x491: V420 = ISZERO V419
0x492: V421 = 0x8fa
0x495: JUMPI 0x8fa V420
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V403, V405]
Exit stack: [V10, 0xa3, V403, V405]

================================

Block 0x496
[0x496:0x4ab]
---
Predecessors: [0x46b]
Successors: [0xa3]
---
0x496 PUSH1 0x1
0x498 PUSH1 0xa0
0x49a PUSH1 0x2
0x49c EXP
0x49d SUB
0x49e SWAP1
0x49f SWAP2
0x4a0 AND
0x4a1 PUSH1 0x0
0x4a3 SWAP1
0x4a4 DUP2
0x4a5 MSTORE
0x4a6 PUSH1 0x40
0x4a8 SWAP1
0x4a9 SHA3
0x4aa SSTORE
0x4ab JUMP
---
0x496: V422 = 0x1
0x498: V423 = 0xa0
0x49a: V424 = 0x2
0x49c: V425 = EXP 0x2 0xa0
0x49d: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a0: V427 = AND V403 0xffffffffffffffffffffffffffffffffffffffff
0x4a1: V428 = 0x0
0x4a5: M[0x0] = V427
0x4a6: V429 = 0x40
0x4a9: V430 = SHA3 0x0 0x40
0x4aa: S[V430] = V405
0x4ab: JUMP 0xa3
---
Entry stack: [V10, 0xa3, V403, V405]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ac
[0x4ac:0x50d]
---
Predecessors: [0x98]
Successors: [0x50e, 0x8fa]
---
0x4ac JUMPDEST
0x4ad PUSH1 0x40
0x4af DUP1
0x4b0 MLOAD
0x4b1 PUSH1 0x20
0x4b3 PUSH1 0x4
0x4b5 PUSH1 0x24
0x4b7 DUP1
0x4b8 CALLDATALOAD
0x4b9 DUP3
0x4ba DUP2
0x4bb ADD
0x4bc CALLDATALOAD
0x4bd PUSH1 0x1f
0x4bf DUP2
0x4c0 ADD
0x4c1 DUP6
0x4c2 SWAP1
0x4c3 DIV
0x4c4 DUP6
0x4c5 MUL
0x4c6 DUP7
0x4c7 ADD
0x4c8 DUP6
0x4c9 ADD
0x4ca SWAP1
0x4cb SWAP7
0x4cc MSTORE
0x4cd DUP6
0x4ce DUP6
0x4cf MSTORE
0x4d0 PUSH2 0xa3
0x4d3 SWAP6
0x4d4 DUP4
0x4d5 CALLDATALOAD
0x4d6 SWAP6
0x4d7 SWAP4
0x4d8 SWAP5
0x4d9 PUSH1 0x44
0x4db SWAP5
0x4dc SWAP4
0x4dd SWAP3
0x4de SWAP1
0x4df SWAP3
0x4e0 ADD
0x4e1 SWAP2
0x4e2 DUP2
0x4e3 SWAP1
0x4e4 DUP5
0x4e5 ADD
0x4e6 DUP4
0x4e7 DUP3
0x4e8 DUP1
0x4e9 DUP3
0x4ea DUP5
0x4eb CALLDATACOPY
0x4ec POP
0x4ed SWAP5
0x4ee SWAP7
0x4ef POP
0x4f0 POP
0x4f1 POP
0x4f2 POP
0x4f3 POP
0x4f4 POP
0x4f5 POP
0x4f6 PUSH1 0x2
0x4f8 SLOAD
0x4f9 PUSH1 0x1
0x4fb PUSH1 0xa0
0x4fd PUSH1 0x2
0x4ff EXP
0x500 SUB
0x501 SWAP1
0x502 DUP2
0x503 AND
0x504 ORIGIN
0x505 SWAP1
0x506 SWAP2
0x507 AND
0x508 EQ
0x509 ISZERO
0x50a PUSH2 0x8fa
0x50d JUMPI
---
0x4ac: JUMPDEST 
0x4ad: V431 = 0x40
0x4b0: V432 = M[0x40]
0x4b1: V433 = 0x20
0x4b3: V434 = 0x4
0x4b5: V435 = 0x24
0x4b8: V436 = CALLDATALOAD 0x24
0x4bb: V437 = ADD V436 0x4
0x4bc: V438 = CALLDATALOAD V437
0x4bd: V439 = 0x1f
0x4c0: V440 = ADD V438 0x1f
0x4c3: V441 = DIV V440 0x20
0x4c5: V442 = MUL 0x20 V441
0x4c7: V443 = ADD V432 V442
0x4c9: V444 = ADD 0x20 V443
0x4cc: M[0x40] = V444
0x4cf: M[V432] = V438
0x4d0: V445 = 0xa3
0x4d5: V446 = CALLDATALOAD 0x4
0x4d9: V447 = 0x44
0x4e0: V448 = ADD 0x24 V436
0x4e5: V449 = ADD V432 0x20
0x4eb: CALLDATACOPY V449 V448 V438
0x4f6: V450 = 0x2
0x4f8: V451 = S[0x2]
0x4f9: V452 = 0x1
0x4fb: V453 = 0xa0
0x4fd: V454 = 0x2
0x4ff: V455 = EXP 0x2 0xa0
0x500: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x503: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x504: V458 = ORIGIN
0x507: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x508: V460 = EQ V459 V457
0x509: V461 = ISZERO V460
0x50a: V462 = 0x8fa
0x50d: JUMPI 0x8fa V461
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V446, V432]
Exit stack: [V10, 0xa3, V446, V432]

================================

Block 0x50e
[0x50e:0x513]
---
Predecessors: [0x4ac]
Successors: [0x514, 0x865]
---
0x50e DUP2
0x50f ISZERO
0x510 PUSH2 0x865
0x513 JUMPI
---
0x50f: V463 = ISZERO V446
0x510: V464 = 0x865
0x513: JUMPI 0x865 V463
---
Entry stack: [V10, 0xa3, V446, V432]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xa3, V446, V432]

================================

Block 0x514
[0x514:0x551]
---
Predecessors: [0x50e]
Successors: [0x552, 0x8bc]
---
0x514 DUP1
0x515 PUSH1 0x4
0x517 PUSH1 0x0
0x519 POP
0x51a SWAP1
0x51b DUP1
0x51c MLOAD
0x51d SWAP1
0x51e PUSH1 0x20
0x520 ADD
0x521 SWAP1
0x522 DUP3
0x523 DUP1
0x524 SLOAD
0x525 PUSH1 0x1
0x527 DUP2
0x528 PUSH1 0x1
0x52a AND
0x52b ISZERO
0x52c PUSH2 0x100
0x52f MUL
0x530 SUB
0x531 AND
0x532 PUSH1 0x2
0x534 SWAP1
0x535 DIV
0x536 SWAP1
0x537 PUSH1 0x0
0x539 MSTORE
0x53a PUSH1 0x20
0x53c PUSH1 0x0
0x53e SHA3
0x53f SWAP1
0x540 PUSH1 0x1f
0x542 ADD
0x543 PUSH1 0x20
0x545 SWAP1
0x546 DIV
0x547 DUP2
0x548 ADD
0x549 SWAP3
0x54a DUP3
0x54b PUSH1 0x1f
0x54d LT
0x54e PUSH2 0x8bc
0x551 JUMPI
---
0x515: V465 = 0x4
0x517: V466 = 0x0
0x51c: V467 = M[V432]
0x51e: V468 = 0x20
0x520: V469 = ADD 0x20 V432
0x524: V470 = S[0x4]
0x525: V471 = 0x1
0x528: V472 = 0x1
0x52a: V473 = AND 0x1 V470
0x52b: V474 = ISZERO V473
0x52c: V475 = 0x100
0x52f: V476 = MUL 0x100 V474
0x530: V477 = SUB V476 0x1
0x531: V478 = AND V477 V470
0x532: V479 = 0x2
0x535: V480 = DIV V478 0x2
0x537: V481 = 0x0
0x539: M[0x0] = 0x4
0x53a: V482 = 0x20
0x53c: V483 = 0x0
0x53e: V484 = SHA3 0x0 0x20
0x540: V485 = 0x1f
0x542: V486 = ADD 0x1f V480
0x543: V487 = 0x20
0x546: V488 = DIV V486 0x20
0x548: V489 = ADD V484 V488
0x54b: V490 = 0x1f
0x54d: V491 = LT 0x1f V467
0x54e: V492 = 0x8bc
0x551: JUMPI 0x8bc V491
---
Entry stack: [V10, 0xa3, V446, V432]
Stack pops: 1
Stack additions: [S0, 0x4, V489, V467, V484, V469]
Exit stack: [V10, 0xa3, V446, V432, 0x4, V489, V467, V484, V469]

================================

Block 0x552
[0x552:0x55d]
---
Predecessors: [0x514]
Successors: [0x55e]
---
0x552 DUP1
0x553 MLOAD
0x554 PUSH1 0xff
0x556 NOT
0x557 AND
0x558 DUP4
0x559 DUP1
0x55a ADD
0x55b OR
0x55c DUP6
0x55d SSTORE
---
0x553: V493 = M[V469]
0x554: V494 = 0xff
0x556: V495 = NOT 0xff
0x557: V496 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V493
0x55a: V497 = ADD V467 V467
0x55b: V498 = OR V497 V496
0x55d: S[0x4] = V498
---
Entry stack: [V10, 0xa3, V446, V432, 0x4, V489, V467, V484, V469]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0xa3, V446, V432, 0x4, V489, V467, V484, V469]

================================

Block 0x55e
[0x55e:0x565]
---
Predecessors: [0x552, 0x8bc, 0x8ce]
Successors: [0x566]
---
0x55e JUMPDEST
0x55f POP
0x560 PUSH2 0x8ec
0x563 SWAP3
0x564 SWAP2
0x565 POP
---
0x55e: JUMPDEST 
0x560: V499 = 0x8ec
---
Entry stack: [V10, 0xa3, V446, V432, 0x4, V489, S2, S1, S0]
Stack pops: 4
Stack additions: [0x8ec, S3, S1]
Exit stack: [V10, 0xa3, V446, V432, 0x4, 0x8ec, V489, S1]

================================

Block 0x566
[0x566:0x56e]
---
Predecessors: [0x55e, 0x56f, 0x8b0]
Successors: [0x56f, 0x8f3]
---
0x566 JUMPDEST
0x567 DUP1
0x568 DUP3
0x569 GT
0x56a ISZERO
0x56b PUSH2 0x8f3
0x56e JUMPI
---
0x566: JUMPDEST 
0x569: V500 = GT S1 S0
0x56a: V501 = ISZERO V500
0x56b: V502 = 0x8f3
0x56e: JUMPI 0x8f3 V501
---
Entry stack: [V10, 0xa3, V446, V432, {0x4, 0x5}, {0x8ec, 0x8f7}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xa3, V446, V432, {0x4, 0x5}, {0x8ec, 0x8f7}, S1, S0]

================================

Block 0x56f
[0x56f:0x579]
---
Predecessors: [0x566]
Successors: [0x566]
---
0x56f PUSH1 0x0
0x571 DUP2
0x572 SSTORE
0x573 PUSH1 0x1
0x575 ADD
0x576 PUSH2 0x566
0x579 JUMP
---
0x56f: V503 = 0x0
0x572: S[S0] = 0x0
0x573: V504 = 0x1
0x575: V505 = ADD 0x1 S0
0x576: V506 = 0x566
0x579: JUMP 0x566
---
Entry stack: [V10, 0xa3, V446, V432, {0x4, 0x5}, {0x8ec, 0x8f7}, S1, S0]
Stack pops: 1
Stack additions: [V505]
Exit stack: [V10, 0xa3, V446, V432, {0x4, 0x5}, {0x8ec, 0x8f7}, S1, V505]

================================

Block 0x57a
[0x57a:0x58b]
---
Predecessors: [0xab, 0x45e]
Successors: []
---
0x57a JUMPDEST
0x57b PUSH1 0x40
0x57d DUP1
0x57e MLOAD
0x57f SWAP2
0x580 DUP3
0x581 MSTORE
0x582 MLOAD
0x583 SWAP1
0x584 DUP2
0x585 SWAP1
0x586 SUB
0x587 PUSH1 0x20
0x589 ADD
0x58a SWAP1
0x58b RETURN
---
0x57a: JUMPDEST 
0x57b: V507 = 0x40
0x57e: V508 = M[0x40]
0x581: M[V508] = S0
0x582: V509 = M[0x40]
0x586: V510 = SUB V508 V509
0x587: V511 = 0x20
0x589: V512 = ADD 0x20 V510
0x58b: RETURN V509 V512
---
Entry stack: [V10, 0x57a, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x57a, S1]

================================

Block 0x58c
[0x58c:0x5a8]
---
Predecessors: [0xab]
Successors: []
---
0x58c JUMPDEST
0x58d PUSH1 0x40
0x58f DUP1
0x590 MLOAD
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 SWAP3
0x59a SWAP1
0x59b SWAP3
0x59c AND
0x59d DUP3
0x59e MSTORE
0x59f MLOAD
0x5a0 SWAP1
0x5a1 DUP2
0x5a2 SWAP1
0x5a3 SUB
0x5a4 PUSH1 0x20
0x5a6 ADD
0x5a7 SWAP1
0x5a8 RETURN
---
0x58c: JUMPDEST 
0x58d: V513 = 0x40
0x590: V514 = M[0x40]
0x591: V515 = 0x1
0x593: V516 = 0xa0
0x595: V517 = 0x2
0x597: V518 = EXP 0x2 0xa0
0x598: V519 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59c: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x59e: M[V514] = V520
0x59f: V521 = M[0x40]
0x5a3: V522 = SUB V514 V521
0x5a4: V523 = 0x20
0x5a6: V524 = ADD 0x20 V522
0x5a8: RETURN V521 V524
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x5a9
[0x5a9:0x5ef]
---
Predecessors: [0xab, 0x852]
Successors: [0x5f0, 0x609]
---
0x5a9 JUMPDEST
0x5aa PUSH1 0x40
0x5ac MLOAD
0x5ad DUP1
0x5ae DUP1
0x5af PUSH1 0x20
0x5b1 ADD
0x5b2 DUP3
0x5b3 DUP2
0x5b4 SUB
0x5b5 DUP3
0x5b6 MSTORE
0x5b7 DUP4
0x5b8 DUP2
0x5b9 DUP2
0x5ba MLOAD
0x5bb DUP2
0x5bc MSTORE
0x5bd PUSH1 0x20
0x5bf ADD
0x5c0 SWAP2
0x5c1 POP
0x5c2 DUP1
0x5c3 MLOAD
0x5c4 SWAP1
0x5c5 PUSH1 0x20
0x5c7 ADD
0x5c8 SWAP1
0x5c9 DUP1
0x5ca DUP4
0x5cb DUP4
0x5cc DUP3
0x5cd SWAP1
0x5ce PUSH1 0x0
0x5d0 PUSH1 0x4
0x5d2 PUSH1 0x20
0x5d4 DUP5
0x5d5 PUSH1 0x1f
0x5d7 ADD
0x5d8 DIV
0x5d9 PUSH1 0xf
0x5db MUL
0x5dc PUSH1 0x3
0x5de ADD
0x5df CALL
0x5e0 POP
0x5e1 SWAP1
0x5e2 POP
0x5e3 SWAP1
0x5e4 DUP2
0x5e5 ADD
0x5e6 SWAP1
0x5e7 PUSH1 0x1f
0x5e9 AND
0x5ea DUP1
0x5eb ISZERO
0x5ec PUSH2 0x609
0x5ef JUMPI
---
0x5a9: JUMPDEST 
0x5aa: V525 = 0x40
0x5ac: V526 = M[0x40]
0x5af: V527 = 0x20
0x5b1: V528 = ADD 0x20 V526
0x5b4: V529 = SUB V528 V526
0x5b6: M[V526] = V529
0x5ba: V530 = M[S0]
0x5bc: M[V528] = V530
0x5bd: V531 = 0x20
0x5bf: V532 = ADD 0x20 V528
0x5c3: V533 = M[S0]
0x5c5: V534 = 0x20
0x5c7: V535 = ADD 0x20 S0
0x5ce: V536 = 0x0
0x5d0: V537 = 0x4
0x5d2: V538 = 0x20
0x5d5: V539 = 0x1f
0x5d7: V540 = ADD 0x1f V533
0x5d8: V541 = DIV V540 0x20
0x5d9: V542 = 0xf
0x5db: V543 = MUL 0xf V541
0x5dc: V544 = 0x3
0x5de: V545 = ADD 0x3 V543
0x5df: V546 = CALL V545 0x4 0x0 V535 V533 V532 V533
0x5e5: V547 = ADD V533 V532
0x5e7: V548 = 0x1f
0x5e9: V549 = AND 0x1f V533
0x5eb: V550 = ISZERO V549
0x5ec: V551 = 0x609
0x5ef: JUMPI 0x609 V550
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V526, V526, V547, V549]
Exit stack: [V10, S0, V526, V526, V547, V549]

================================

Block 0x5f0
[0x5f0:0x608]
---
Predecessors: [0x5a9]
Successors: [0x609]
---
0x5f0 DUP1
0x5f1 DUP3
0x5f2 SUB
0x5f3 DUP1
0x5f4 MLOAD
0x5f5 PUSH1 0x1
0x5f7 DUP4
0x5f8 PUSH1 0x20
0x5fa SUB
0x5fb PUSH2 0x100
0x5fe EXP
0x5ff SUB
0x600 NOT
0x601 AND
0x602 DUP2
0x603 MSTORE
0x604 PUSH1 0x20
0x606 ADD
0x607 SWAP2
0x608 POP
---
0x5f2: V552 = SUB V547 V549
0x5f4: V553 = M[V552]
0x5f5: V554 = 0x1
0x5f8: V555 = 0x20
0x5fa: V556 = SUB 0x20 V549
0x5fb: V557 = 0x100
0x5fe: V558 = EXP 0x100 V556
0x5ff: V559 = SUB V558 0x1
0x600: V560 = NOT V559
0x601: V561 = AND V560 V553
0x603: M[V552] = V561
0x604: V562 = 0x20
0x606: V563 = ADD 0x20 V552
---
Entry stack: [V10, S4, V526, V526, V547, V549]
Stack pops: 2
Stack additions: [V563, S0]
Exit stack: [V10, S4, V526, V526, V563, V549]

================================

Block 0x609
[0x609:0x616]
---
Predecessors: [0x5a9, 0x5f0]
Successors: []
---
0x609 JUMPDEST
0x60a POP
0x60b SWAP3
0x60c POP
0x60d POP
0x60e POP
0x60f PUSH1 0x40
0x611 MLOAD
0x612 DUP1
0x613 SWAP2
0x614 SUB
0x615 SWAP1
0x616 RETURN
---
0x609: JUMPDEST 
0x60f: V564 = 0x40
0x611: V565 = M[0x40]
0x614: V566 = SUB S1 V565
0x616: RETURN V565 V566
---
Entry stack: [V10, S4, V526, V526, S1, V549]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x617
[0x617:0x692]
---
Predecessors: [0x241]
Successors: [0x693]
---
0x617 JUMPDEST
0x618 PUSH1 0x40
0x61a DUP1
0x61b MLOAD
0x61c PUSH1 0x0
0x61e DUP2
0x61f MSTORE
0x620 PUSH1 0x20
0x622 DUP2
0x623 ADD
0x624 DUP3
0x625 SWAP1
0x626 MSTORE
0x627 PUSH1 0x26
0x629 DUP2
0x62a DUP4
0x62b ADD
0x62c MSTORE
0x62d PUSH32 0x5b5368617265686f6c6465725d5b72656d6f76655d204572726f723a204e6f74
0x64e PUSH1 0x60
0x650 DUP3
0x651 ADD
0x652 MSTORE
0x653 PUSH32 0x204f776e65720000000000000000000000000000000000000000000000000000
0x674 PUSH1 0x80
0x676 DUP3
0x677 ADD
0x678 MSTORE
0x679 SWAP1
0x67a MLOAD
0x67b PUSH1 0x0
0x67d DUP1
0x67e MLOAD
0x67f PUSH1 0x20
0x681 PUSH2 0x965
0x684 DUP4
0x685 CODECOPY
0x686 DUP2
0x687 MLOAD
0x688 SWAP2
0x689 MSTORE
0x68a SWAP2
0x68b DUP2
0x68c SWAP1
0x68d SUB
0x68e PUSH1 0xa0
0x690 ADD
0x691 SWAP1
0x692 LOG1
---
0x617: JUMPDEST 
0x618: V567 = 0x40
0x61b: V568 = M[0x40]
0x61c: V569 = 0x0
0x61f: M[V568] = 0x0
0x620: V570 = 0x20
0x623: V571 = ADD V568 0x20
0x626: M[V571] = 0x40
0x627: V572 = 0x26
0x62b: V573 = ADD 0x40 V568
0x62c: M[V573] = 0x26
0x62d: V574 = 0x5b5368617265686f6c6465725d5b72656d6f76655d204572726f723a204e6f74
0x64e: V575 = 0x60
0x651: V576 = ADD V568 0x60
0x652: M[V576] = 0x5b5368617265686f6c6465725d5b72656d6f76655d204572726f723a204e6f74
0x653: V577 = 0x204f776e65720000000000000000000000000000000000000000000000000000
0x674: V578 = 0x80
0x677: V579 = ADD V568 0x80
0x678: M[V579] = 0x204f776e65720000000000000000000000000000000000000000000000000000
0x67a: V580 = M[0x40]
0x67b: V581 = 0x0
0x67e: V582 = M[0x0]
0x67f: V583 = 0x20
0x681: V584 = 0x965
0x685: CODECOPY 0x0 0x965 0x20
0x687: V585 = M[0x0]
0x689: M[0x0] = V582
0x68d: V586 = SUB V568 V580
0x68e: V587 = 0xa0
0x690: V588 = ADD 0xa0 V586
0x692: LOG V580 V588 V585
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x693
[0x693:0x694]
---
Predecessors: [0x25d, 0x617]
Successors: [0xa3, 0x695]
---
0x693 JUMPDEST
0x694 JUMP
---
0x693: JUMPDEST 
0x694: JUMP {0xa3, 0x695}
---
Entry stack: [V10, S1, {0xa3, 0x695}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x695
[0x695:0x6a0]
---
Predecessors: [0x693]
Successors: []
---
0x695 JUMPDEST
0x696 ORIGIN
0x697 PUSH1 0x1
0x699 PUSH1 0xa0
0x69b PUSH1 0x2
0x69d EXP
0x69e SUB
0x69f AND
0x6a0 SELFDESTRUCT
---
0x695: JUMPDEST 
0x696: V589 = ORIGIN
0x697: V590 = 0x1
0x699: V591 = 0xa0
0x69b: V592 = 0x2
0x69d: V593 = EXP 0x2 0xa0
0x69e: V594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69f: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x6a0: SELFDESTRUCT V595
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x6a1
[0x6a1:0x71c]
---
Predecessors: [0x300]
Successors: [0x71d]
---
0x6a1 JUMPDEST
0x6a2 PUSH1 0x40
0x6a4 DUP1
0x6a5 MLOAD
0x6a6 PUSH1 0x0
0x6a8 DUP2
0x6a9 MSTORE
0x6aa PUSH1 0x20
0x6ac DUP2
0x6ad ADD
0x6ae DUP3
0x6af SWAP1
0x6b0 MSTORE
0x6b1 PUSH1 0x34
0x6b3 DUP2
0x6b4 DUP4
0x6b5 ADD
0x6b6 MSTORE
0x6b7 PUSH32 0x5b5368617265686f6c6465725d5b7472616e736665724173736574735d204572
0x6d8 PUSH1 0x60
0x6da DUP3
0x6db ADD
0x6dc MSTORE
0x6dd PUSH32 0x726f723a204e6f74205368617265204f776e6572000000000000000000000000
0x6fe PUSH1 0x80
0x700 DUP3
0x701 ADD
0x702 MSTORE
0x703 SWAP1
0x704 MLOAD
0x705 PUSH1 0x0
0x707 DUP1
0x708 MLOAD
0x709 PUSH1 0x20
0x70b PUSH2 0x965
0x70e DUP4
0x70f CODECOPY
0x710 DUP2
0x711 MLOAD
0x712 SWAP2
0x713 MSTORE
0x714 SWAP2
0x715 DUP2
0x716 SWAP1
0x717 SUB
0x718 PUSH1 0xa0
0x71a ADD
0x71b SWAP1
0x71c LOG1
---
0x6a1: JUMPDEST 
0x6a2: V596 = 0x40
0x6a5: V597 = M[0x40]
0x6a6: V598 = 0x0
0x6a9: M[V597] = 0x0
0x6aa: V599 = 0x20
0x6ad: V600 = ADD V597 0x20
0x6b0: M[V600] = 0x40
0x6b1: V601 = 0x34
0x6b5: V602 = ADD 0x40 V597
0x6b6: M[V602] = 0x34
0x6b7: V603 = 0x5b5368617265686f6c6465725d5b7472616e736665724173736574735d204572
0x6d8: V604 = 0x60
0x6db: V605 = ADD V597 0x60
0x6dc: M[V605] = 0x5b5368617265686f6c6465725d5b7472616e736665724173736574735d204572
0x6dd: V606 = 0x726f723a204e6f74205368617265204f776e6572000000000000000000000000
0x6fe: V607 = 0x80
0x701: V608 = ADD V597 0x80
0x702: M[V608] = 0x726f723a204e6f74205368617265204f776e6572000000000000000000000000
0x704: V609 = M[0x40]
0x705: V610 = 0x0
0x708: V611 = M[0x0]
0x709: V612 = 0x20
0x70b: V613 = 0x965
0x70f: CODECOPY 0x0 0x965 0x20
0x711: V614 = M[0x0]
0x713: M[0x0] = V611
0x717: V615 = SUB V597 V609
0x718: V616 = 0xa0
0x71a: V617 = ADD 0xa0 V615
0x71c: LOG V609 V617 V614
---
Entry stack: [V10, 0xa3, V263, V265, V267, V269, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V263, V265, V267, V269, 0x0, 0x0]

================================

Block 0x71d
[0x71d:0x724]
---
Predecessors: [0x6a1, 0x7c7]
Successors: [0xa3]
---
0x71d JUMPDEST
0x71e POP
0x71f POP
0x720 POP
0x721 POP
0x722 POP
0x723 POP
0x724 JUMP
---
0x71d: JUMPDEST 
0x724: JUMP 0xa3
---
Entry stack: [V10, 0xa3, V263, V265, V267, V269, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V10]

================================

Block 0x725
[0x725:0x7c6]
---
Predecessors: [0x368]
Successors: [0x7c7]
---
0x725 JUMPDEST
0x726 PUSH1 0x40
0x728 DUP1
0x729 MLOAD
0x72a PUSH1 0x0
0x72c DUP2
0x72d MSTORE
0x72e PUSH1 0x20
0x730 DUP2
0x731 ADD
0x732 DUP3
0x733 SWAP1
0x734 MSTORE
0x735 PUSH1 0x4c
0x737 DUP2
0x738 DUP4
0x739 ADD
0x73a MSTORE
0x73b PUSH32 0x5b5368617265686f6c6465725d5b7472616e736665724173736574735d204572
0x75c PUSH1 0x60
0x75e DUP3
0x75f ADD
0x760 MSTORE
0x761 PUSH32 0x726f723a2042656e6566696369617279206e6f74207665726966696564206279
0x782 PUSH1 0x80
0x784 DUP3
0x785 ADD
0x786 MSTORE
0x787 PUSH32 0x204f746f6e6f6d6f732f56450000000000000000000000000000000000000000
0x7a8 PUSH1 0xa0
0x7aa DUP3
0x7ab ADD
0x7ac MSTORE
0x7ad SWAP1
0x7ae MLOAD
0x7af PUSH1 0x0
0x7b1 DUP1
0x7b2 MLOAD
0x7b3 PUSH1 0x20
0x7b5 PUSH2 0x965
0x7b8 DUP4
0x7b9 CODECOPY
0x7ba DUP2
0x7bb MLOAD
0x7bc SWAP2
0x7bd MSTORE
0x7be SWAP2
0x7bf DUP2
0x7c0 SWAP1
0x7c1 SUB
0x7c2 PUSH1 0xc0
0x7c4 ADD
0x7c5 SWAP1
0x7c6 LOG1
---
0x725: JUMPDEST 
0x726: V618 = 0x40
0x729: V619 = M[0x40]
0x72a: V620 = 0x0
0x72d: M[V619] = 0x0
0x72e: V621 = 0x20
0x731: V622 = ADD V619 0x20
0x734: M[V622] = 0x40
0x735: V623 = 0x4c
0x739: V624 = ADD 0x40 V619
0x73a: M[V624] = 0x4c
0x73b: V625 = 0x5b5368617265686f6c6465725d5b7472616e736665724173736574735d204572
0x75c: V626 = 0x60
0x75f: V627 = ADD V619 0x60
0x760: M[V627] = 0x5b5368617265686f6c6465725d5b7472616e736665724173736574735d204572
0x761: V628 = 0x726f723a2042656e6566696369617279206e6f74207665726966696564206279
0x782: V629 = 0x80
0x785: V630 = ADD V619 0x80
0x786: M[V630] = 0x726f723a2042656e6566696369617279206e6f74207665726966696564206279
0x787: V631 = 0x204f746f6e6f6d6f732f56450000000000000000000000000000000000000000
0x7a8: V632 = 0xa0
0x7ab: V633 = ADD V619 0xa0
0x7ac: M[V633] = 0x204f746f6e6f6d6f732f56450000000000000000000000000000000000000000
0x7ae: V634 = M[0x40]
0x7af: V635 = 0x0
0x7b2: V636 = M[0x0]
0x7b3: V637 = 0x20
0x7b5: V638 = 0x965
0x7b9: CODECOPY 0x0 0x965 0x20
0x7bb: V639 = M[0x0]
0x7bd: M[0x0] = V636
0x7c1: V640 = SUB V619 V634
0x7c2: V641 = 0xc0
0x7c4: V642 = ADD 0xc0 V640
0x7c6: LOG V634 V642 V639
---
Entry stack: [V10, 0xa3, V263, V265, V267, V269, V265, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V263, V265, V267, V269, V265, 0x0]

================================

Block 0x7c7
[0x7c7:0x7cb]
---
Predecessors: [0x3e4, 0x725]
Successors: [0x71d]
---
0x7c7 JUMPDEST
0x7c8 PUSH2 0x71d
0x7cb JUMP
---
0x7c7: JUMPDEST 
0x7c8: V643 = 0x71d
0x7cb: JUMP 0x71d
---
Entry stack: [V10, 0xa3, V263, V265, V267, V269, V265, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V263, V265, V267, V269, V265, S0]

================================

Block 0x7cc
[0x7cc:0x80b]
---
Predecessors: [0x160]
Successors: [0x80c, 0x852]
---
0x7cc JUMPDEST
0x7cd PUSH1 0x5
0x7cf DUP1
0x7d0 SLOAD
0x7d1 PUSH1 0x40
0x7d3 DUP1
0x7d4 MLOAD
0x7d5 PUSH1 0x20
0x7d7 PUSH1 0x2
0x7d9 PUSH1 0x1
0x7db DUP6
0x7dc AND
0x7dd ISZERO
0x7de PUSH2 0x100
0x7e1 MUL
0x7e2 PUSH1 0x0
0x7e4 NOT
0x7e5 ADD
0x7e6 SWAP1
0x7e7 SWAP5
0x7e8 AND
0x7e9 SWAP4
0x7ea SWAP1
0x7eb SWAP4
0x7ec DIV
0x7ed PUSH1 0x1f
0x7ef DUP2
0x7f0 ADD
0x7f1 DUP5
0x7f2 SWAP1
0x7f3 DIV
0x7f4 DUP5
0x7f5 MUL
0x7f6 DUP3
0x7f7 ADD
0x7f8 DUP5
0x7f9 ADD
0x7fa SWAP1
0x7fb SWAP3
0x7fc MSTORE
0x7fd DUP2
0x7fe DUP2
0x7ff MSTORE
0x800 SWAP3
0x801 SWAP2
0x802 DUP4
0x803 ADD
0x804 DUP3
0x805 DUP3
0x806 DUP1
0x807 ISZERO
0x808 PUSH2 0x852
0x80b JUMPI
---
0x7cc: JUMPDEST 
0x7cd: V644 = 0x5
0x7d0: V645 = S[0x5]
0x7d1: V646 = 0x40
0x7d4: V647 = M[0x40]
0x7d5: V648 = 0x20
0x7d7: V649 = 0x2
0x7d9: V650 = 0x1
0x7dc: V651 = AND V645 0x1
0x7dd: V652 = ISZERO V651
0x7de: V653 = 0x100
0x7e1: V654 = MUL 0x100 V652
0x7e2: V655 = 0x0
0x7e4: V656 = NOT 0x0
0x7e5: V657 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V654
0x7e8: V658 = AND V645 V657
0x7ec: V659 = DIV V658 0x2
0x7ed: V660 = 0x1f
0x7f0: V661 = ADD V659 0x1f
0x7f3: V662 = DIV V661 0x20
0x7f5: V663 = MUL 0x20 V662
0x7f7: V664 = ADD V647 V663
0x7f9: V665 = ADD 0x20 V664
0x7fc: M[0x40] = V665
0x7ff: M[V647] = V659
0x803: V666 = ADD V647 0x20
0x807: V667 = ISZERO V659
0x808: V668 = 0x852
0x80b: JUMPI 0x852 V667
---
Entry stack: [V10, 0x5a9, V121, V123]
Stack pops: 0
Stack additions: [V647, 0x5, V659, V666, 0x5, V659]
Exit stack: [V10, 0x5a9, V121, V123, V647, 0x5, V659, V666, 0x5, V659]

================================

Block 0x80c
[0x80c:0x813]
---
Predecessors: [0x7cc]
Successors: [0x814, 0x827]
---
0x80c DUP1
0x80d PUSH1 0x1f
0x80f LT
0x810 PUSH2 0x827
0x813 JUMPI
---
0x80d: V669 = 0x1f
0x80f: V670 = LT 0x1f V659
0x810: V671 = 0x827
0x813: JUMPI 0x827 V670
---
Entry stack: [V10, 0x5a9, V121, V123, V647, 0x5, V659, V666, 0x5, V659]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5a9, V121, V123, V647, 0x5, V659, V666, 0x5, V659]

================================

Block 0x814
[0x814:0x826]
---
Predecessors: [0x80c]
Successors: [0x852]
---
0x814 PUSH2 0x100
0x817 DUP1
0x818 DUP4
0x819 SLOAD
0x81a DIV
0x81b MUL
0x81c DUP4
0x81d MSTORE
0x81e SWAP2
0x81f PUSH1 0x20
0x821 ADD
0x822 SWAP2
0x823 PUSH2 0x852
0x826 JUMP
---
0x814: V672 = 0x100
0x819: V673 = S[0x5]
0x81a: V674 = DIV V673 0x100
0x81b: V675 = MUL V674 0x100
0x81d: M[V666] = V675
0x81f: V676 = 0x20
0x821: V677 = ADD 0x20 V666
0x823: V678 = 0x852
0x826: JUMP 0x852
---
Entry stack: [V10, 0x5a9, V121, V123, V647, 0x5, V659, V666, 0x5, V659]
Stack pops: 3
Stack additions: [V677, S1, S0]
Exit stack: [V10, 0x5a9, V121, V123, V647, 0x5, V659, V677, 0x5, V659]

================================

Block 0x827
[0x827:0x834]
---
Predecessors: [0x1bd, 0x80c]
Successors: [0x835]
---
0x827 JUMPDEST
0x828 DUP3
0x829 ADD
0x82a SWAP2
0x82b SWAP1
0x82c PUSH1 0x0
0x82e MSTORE
0x82f PUSH1 0x20
0x831 PUSH1 0x0
0x833 SHA3
0x834 SWAP1
---
0x827: JUMPDEST 
0x829: V679 = ADD S2 S0
0x82c: V680 = 0x0
0x82e: M[0x0] = {0x4, 0x5}
0x82f: V681 = 0x20
0x831: V682 = 0x0
0x833: V683 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x5a9, V121, V123, S5, {0x4, 0x5}, S3, S2, {0x4, 0x5}, S0]
Stack pops: 3
Stack additions: [V679, V683, S2]
Exit stack: [V10, 0x5a9, V121, V123, S5, {0x4, 0x5}, S3, V679, V683, S2]

================================

Block 0x835
[0x835:0x848]
---
Predecessors: [0x827, 0x835]
Successors: [0x835, 0x849]
---
0x835 JUMPDEST
0x836 DUP2
0x837 SLOAD
0x838 DUP2
0x839 MSTORE
0x83a SWAP1
0x83b PUSH1 0x1
0x83d ADD
0x83e SWAP1
0x83f PUSH1 0x20
0x841 ADD
0x842 DUP1
0x843 DUP4
0x844 GT
0x845 PUSH2 0x835
0x848 JUMPI
---
0x835: JUMPDEST 
0x837: V684 = S[S1]
0x839: M[S0] = V684
0x83b: V685 = 0x1
0x83d: V686 = ADD 0x1 S1
0x83f: V687 = 0x20
0x841: V688 = ADD 0x20 S0
0x844: V689 = GT V679 V688
0x845: V690 = 0x835
0x848: JUMPI 0x835 V689
---
Entry stack: [V10, 0x5a9, V121, V123, S5, {0x4, 0x5}, S3, V679, S1, S0]
Stack pops: 3
Stack additions: [S2, V686, V688]
Exit stack: [V10, 0x5a9, V121, V123, S5, {0x4, 0x5}, S3, V679, V686, V688]

================================

Block 0x849
[0x849:0x851]
---
Predecessors: [0x835]
Successors: [0x852]
---
0x849 DUP3
0x84a SWAP1
0x84b SUB
0x84c PUSH1 0x1f
0x84e AND
0x84f DUP3
0x850 ADD
0x851 SWAP2
---
0x84b: V691 = SUB V688 V679
0x84c: V692 = 0x1f
0x84e: V693 = AND 0x1f V691
0x850: V694 = ADD V679 V693
---
Entry stack: [V10, 0x5a9, V121, V123, S5, {0x4, 0x5}, S3, V679, V686, V688]
Stack pops: 3
Stack additions: [V694, S1, S2]
Exit stack: [V10, 0x5a9, V121, V123, S5, {0x4, 0x5}, S3, V694, V686, V679]

================================

Block 0x852
[0x852:0x85d]
---
Predecessors: [0x17c, 0x1c5, 0x7cc, 0x814, 0x849]
Successors: [0x5a9]
---
0x852 JUMPDEST
0x853 POP
0x854 POP
0x855 POP
0x856 POP
0x857 POP
0x858 SWAP1
0x859 POP
0x85a SWAP2
0x85b SWAP1
0x85c POP
0x85d JUMP
---
0x852: JUMPDEST 
0x85d: JUMP 0x5a9
---
Entry stack: [V10, 0x5a9, V121, V123, S5, {0x4, 0x5}, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S5]
Exit stack: [V10, S5]

================================

Block 0x85e
[0x85e:0x864]
---
Predecessors: [0x45e]
Successors: [0xab]
---
0x85e JUMPDEST
0x85f SWAP1
0x860 POP
0x861 PUSH2 0xab
0x864 JUMP
---
0x85e: JUMPDEST 
0x861: V695 = 0xab
0x864: JUMP 0xab
---
Entry stack: [V10, 0x57a, S1, V400]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x57a, V400]

================================

Block 0x865
[0x865:0x8a3]
---
Predecessors: [0x50e]
Successors: [0x8a4, 0x8fe]
---
0x865 JUMPDEST
0x866 DUP1
0x867 PUSH1 0x5
0x869 PUSH1 0x0
0x86b POP
0x86c SWAP1
0x86d DUP1
0x86e MLOAD
0x86f SWAP1
0x870 PUSH1 0x20
0x872 ADD
0x873 SWAP1
0x874 DUP3
0x875 DUP1
0x876 SLOAD
0x877 PUSH1 0x1
0x879 DUP2
0x87a PUSH1 0x1
0x87c AND
0x87d ISZERO
0x87e PUSH2 0x100
0x881 MUL
0x882 SUB
0x883 AND
0x884 PUSH1 0x2
0x886 SWAP1
0x887 DIV
0x888 SWAP1
0x889 PUSH1 0x0
0x88b MSTORE
0x88c PUSH1 0x20
0x88e PUSH1 0x0
0x890 SHA3
0x891 SWAP1
0x892 PUSH1 0x1f
0x894 ADD
0x895 PUSH1 0x20
0x897 SWAP1
0x898 DIV
0x899 DUP2
0x89a ADD
0x89b SWAP3
0x89c DUP3
0x89d PUSH1 0x1f
0x89f LT
0x8a0 PUSH2 0x8fe
0x8a3 JUMPI
---
0x865: JUMPDEST 
0x867: V696 = 0x5
0x869: V697 = 0x0
0x86e: V698 = M[V432]
0x870: V699 = 0x20
0x872: V700 = ADD 0x20 V432
0x876: V701 = S[0x5]
0x877: V702 = 0x1
0x87a: V703 = 0x1
0x87c: V704 = AND 0x1 V701
0x87d: V705 = ISZERO V704
0x87e: V706 = 0x100
0x881: V707 = MUL 0x100 V705
0x882: V708 = SUB V707 0x1
0x883: V709 = AND V708 V701
0x884: V710 = 0x2
0x887: V711 = DIV V709 0x2
0x889: V712 = 0x0
0x88b: M[0x0] = 0x5
0x88c: V713 = 0x20
0x88e: V714 = 0x0
0x890: V715 = SHA3 0x0 0x20
0x892: V716 = 0x1f
0x894: V717 = ADD 0x1f V711
0x895: V718 = 0x20
0x898: V719 = DIV V717 0x20
0x89a: V720 = ADD V715 V719
0x89d: V721 = 0x1f
0x89f: V722 = LT 0x1f V698
0x8a0: V723 = 0x8fe
0x8a3: JUMPI 0x8fe V722
---
Entry stack: [V10, 0xa3, V446, V432]
Stack pops: 1
Stack additions: [S0, 0x5, V720, V698, V715, V700]
Exit stack: [V10, 0xa3, V446, V432, 0x5, V720, V698, V715, V700]

================================

Block 0x8a4
[0x8a4:0x8af]
---
Predecessors: [0x865]
Successors: [0x8b0]
---
0x8a4 DUP1
0x8a5 MLOAD
0x8a6 PUSH1 0xff
0x8a8 NOT
0x8a9 AND
0x8aa DUP4
0x8ab DUP1
0x8ac ADD
0x8ad OR
0x8ae DUP6
0x8af SSTORE
---
0x8a5: V724 = M[V700]
0x8a6: V725 = 0xff
0x8a8: V726 = NOT 0xff
0x8a9: V727 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V724
0x8ac: V728 = ADD V698 V698
0x8ad: V729 = OR V728 V727
0x8af: S[0x5] = V729
---
Entry stack: [V10, 0xa3, V446, V432, 0x5, V720, V698, V715, V700]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0xa3, V446, V432, 0x5, V720, V698, V715, V700]

================================

Block 0x8b0
[0x8b0:0x8bb]
---
Predecessors: [0x8a4, 0x8fe, 0x910]
Successors: [0x566]
---
0x8b0 JUMPDEST
0x8b1 POP
0x8b2 PUSH2 0x8f7
0x8b5 SWAP3
0x8b6 SWAP2
0x8b7 POP
0x8b8 PUSH2 0x566
0x8bb JUMP
---
0x8b0: JUMPDEST 
0x8b2: V730 = 0x8f7
0x8b8: V731 = 0x566
0x8bb: JUMP 0x566
---
Entry stack: [V10, 0xa3, V446, V432, 0x5, V720, S2, S1, S0]
Stack pops: 4
Stack additions: [0x8f7, S3, S1]
Exit stack: [V10, 0xa3, V446, V432, 0x5, 0x8f7, V720, S1]

================================

Block 0x8bc
[0x8bc:0x8ca]
---
Predecessors: [0x514]
Successors: [0x55e, 0x8cb]
---
0x8bc JUMPDEST
0x8bd DUP3
0x8be DUP1
0x8bf ADD
0x8c0 PUSH1 0x1
0x8c2 ADD
0x8c3 DUP6
0x8c4 SSTORE
0x8c5 DUP3
0x8c6 ISZERO
0x8c7 PUSH2 0x55e
0x8ca JUMPI
---
0x8bc: JUMPDEST 
0x8bf: V732 = ADD V467 V467
0x8c0: V733 = 0x1
0x8c2: V734 = ADD 0x1 V732
0x8c4: S[0x4] = V734
0x8c6: V735 = ISZERO V467
0x8c7: V736 = 0x55e
0x8ca: JUMPI 0x55e V735
---
Entry stack: [V10, 0xa3, V446, V432, 0x4, V489, V467, V484, V469]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0xa3, V446, V432, 0x4, V489, V467, V484, V469]

================================

Block 0x8cb
[0x8cb:0x8cd]
---
Predecessors: [0x8bc]
Successors: [0x8ce]
---
0x8cb SWAP2
0x8cc DUP3
0x8cd ADD
---
0x8cd: V737 = ADD V469 V467
---
Entry stack: [V10, 0xa3, V446, V432, 0x4, V489, V467, V484, V469]
Stack pops: 3
Stack additions: [S0, S1, V737]
Exit stack: [V10, 0xa3, V446, V432, 0x4, V489, V469, V484, V737]

================================

Block 0x8ce
[0x8ce:0x8d6]
---
Predecessors: [0x8cb, 0x8d7]
Successors: [0x55e, 0x8d7]
---
0x8ce JUMPDEST
0x8cf DUP3
0x8d0 DUP2
0x8d1 GT
0x8d2 ISZERO
0x8d3 PUSH2 0x55e
0x8d6 JUMPI
---
0x8ce: JUMPDEST 
0x8d1: V738 = GT V737 S2
0x8d2: V739 = ISZERO V738
0x8d3: V740 = 0x55e
0x8d6: JUMPI 0x55e V739
---
Entry stack: [V10, 0xa3, V446, V432, 0x4, V489, S2, S1, V737]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xa3, V446, V432, 0x4, V489, S2, S1, V737]

================================

Block 0x8d7
[0x8d7:0x8eb]
---
Predecessors: [0x8ce]
Successors: [0x8ce]
---
0x8d7 DUP3
0x8d8 MLOAD
0x8d9 DUP3
0x8da PUSH1 0x0
0x8dc POP
0x8dd SSTORE
0x8de SWAP2
0x8df PUSH1 0x20
0x8e1 ADD
0x8e2 SWAP2
0x8e3 SWAP1
0x8e4 PUSH1 0x1
0x8e6 ADD
0x8e7 SWAP1
0x8e8 PUSH2 0x8ce
0x8eb JUMP
---
0x8d8: V741 = M[S2]
0x8da: V742 = 0x0
0x8dd: S[S1] = V741
0x8df: V743 = 0x20
0x8e1: V744 = ADD 0x20 S2
0x8e4: V745 = 0x1
0x8e6: V746 = ADD 0x1 S1
0x8e8: V747 = 0x8ce
0x8eb: JUMP 0x8ce
---
Entry stack: [V10, 0xa3, V446, V432, 0x4, V489, S2, S1, V737]
Stack pops: 3
Stack additions: [V744, V746, S0]
Exit stack: [V10, 0xa3, V446, V432, 0x4, V489, V744, V746, V737]

================================

Block 0x8ec
[0x8ec:0x8f2]
---
Predecessors: [0x8f3]
Successors: [0x8fa]
---
0x8ec JUMPDEST
0x8ed POP
0x8ee POP
0x8ef PUSH2 0x8fa
0x8f2 JUMP
---
0x8ec: JUMPDEST 
0x8ef: V748 = 0x8fa
0x8f2: JUMP 0x8fa
---
Entry stack: [V10, 0xa3, V446, V432, {0x4, 0x5}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xa3, V446, V432]

================================

Block 0x8f3
[0x8f3:0x8f6]
---
Predecessors: [0x566]
Successors: [0x8ec, 0x8f7]
---
0x8f3 JUMPDEST
0x8f4 POP
0x8f5 SWAP1
0x8f6 JUMP
---
0x8f3: JUMPDEST 
0x8f6: JUMP {0x8ec, 0x8f7}
---
Entry stack: [V10, 0xa3, V446, V432, {0x4, 0x5}, {0x8ec, 0x8f7}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0xa3, V446, V432, {0x4, 0x5}, S1]

================================

Block 0x8f7
[0x8f7:0x8f9]
---
Predecessors: [0x8f3]
Successors: [0x8fa]
---
0x8f7 JUMPDEST
0x8f8 POP
0x8f9 POP
---
0x8f7: JUMPDEST 
---
Entry stack: [V10, 0xa3, V446, V432, {0x4, 0x5}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xa3, V446, V432]

================================

Block 0x8fa
[0x8fa:0x8fd]
---
Predecessors: [0x46b, 0x4ac, 0x8ec, 0x8f7]
Successors: [0xa3]
---
0x8fa JUMPDEST
0x8fb POP
0x8fc POP
0x8fd JUMP
---
0x8fa: JUMPDEST 
0x8fd: JUMP 0xa3
---
Entry stack: [V10, 0xa3, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x8fe
[0x8fe:0x90c]
---
Predecessors: [0x865]
Successors: [0x8b0, 0x90d]
---
0x8fe JUMPDEST
0x8ff DUP3
0x900 DUP1
0x901 ADD
0x902 PUSH1 0x1
0x904 ADD
0x905 DUP6
0x906 SSTORE
0x907 DUP3
0x908 ISZERO
0x909 PUSH2 0x8b0
0x90c JUMPI
---
0x8fe: JUMPDEST 
0x901: V749 = ADD V698 V698
0x902: V750 = 0x1
0x904: V751 = ADD 0x1 V749
0x906: S[0x5] = V751
0x908: V752 = ISZERO V698
0x909: V753 = 0x8b0
0x90c: JUMPI 0x8b0 V752
---
Entry stack: [V10, 0xa3, V446, V432, 0x5, V720, V698, V715, V700]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0xa3, V446, V432, 0x5, V720, V698, V715, V700]

================================

Block 0x90d
[0x90d:0x90f]
---
Predecessors: [0x8fe]
Successors: [0x910]
---
0x90d SWAP2
0x90e DUP3
0x90f ADD
---
0x90f: V754 = ADD V700 V698
---
Entry stack: [V10, 0xa3, V446, V432, 0x5, V720, V698, V715, V700]
Stack pops: 3
Stack additions: [S0, S1, V754]
Exit stack: [V10, 0xa3, V446, V432, 0x5, V720, V700, V715, V754]

================================

Block 0x910
[0x910:0x918]
---
Predecessors: [0x90d, 0x919]
Successors: [0x8b0, 0x919]
---
0x910 JUMPDEST
0x911 DUP3
0x912 DUP2
0x913 GT
0x914 ISZERO
0x915 PUSH2 0x8b0
0x918 JUMPI
---
0x910: JUMPDEST 
0x913: V755 = GT V754 S2
0x914: V756 = ISZERO V755
0x915: V757 = 0x8b0
0x918: JUMPI 0x8b0 V756
---
Entry stack: [V10, 0xa3, V446, V432, 0x5, V720, S2, S1, V754]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xa3, V446, V432, 0x5, V720, S2, S1, V754]

================================

Block 0x919
[0x919:0x92d]
---
Predecessors: [0x910]
Successors: [0x910]
---
0x919 DUP3
0x91a MLOAD
0x91b DUP3
0x91c PUSH1 0x0
0x91e POP
0x91f SSTORE
0x920 SWAP2
0x921 PUSH1 0x20
0x923 ADD
0x924 SWAP2
0x925 SWAP1
0x926 PUSH1 0x1
0x928 ADD
0x929 SWAP1
0x92a PUSH2 0x910
0x92d JUMP
---
0x91a: V758 = M[S2]
0x91c: V759 = 0x0
0x91f: S[S1] = V758
0x921: V760 = 0x20
0x923: V761 = ADD 0x20 S2
0x926: V762 = 0x1
0x928: V763 = ADD 0x1 S1
0x92a: V764 = 0x910
0x92d: JUMP 0x910
---
Entry stack: [V10, 0xa3, V446, V432, 0x5, V720, S2, S1, V754]
Stack pops: 3
Stack additions: [V761, V763, S0]
Exit stack: [V10, 0xa3, V446, V432, 0x5, V720, V761, V763, V754]

================================

Block 0x92e
[0x92e:0x93b]
---
Predecessors: [0x226]
Successors: [0x93c]
---
0x92e JUMPDEST
0x92f DUP3
0x930 ADD
0x931 SWAP2
0x932 SWAP1
0x933 PUSH1 0x0
0x935 MSTORE
0x936 PUSH1 0x20
0x938 PUSH1 0x0
0x93a SHA3
0x93b SWAP1
---
0x92e: JUMPDEST 
0x930: V765 = ADD V190 V183
0x933: V766 = 0x0
0x935: M[0x0] = 0x3
0x936: V767 = 0x20
0x938: V768 = 0x0
0x93a: V769 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x5a9, V166, V170, 0x3, V183, V190, 0x3, V183]
Stack pops: 3
Stack additions: [V765, V769, S2]
Exit stack: [V10, 0x5a9, V166, V170, 0x3, V183, V765, V769, V190]

================================

Block 0x93c
[0x93c:0x94f]
---
Predecessors: [0x92e, 0x93c]
Successors: [0x93c, 0x950]
---
0x93c JUMPDEST
0x93d DUP2
0x93e SLOAD
0x93f DUP2
0x940 MSTORE
0x941 SWAP1
0x942 PUSH1 0x1
0x944 ADD
0x945 SWAP1
0x946 PUSH1 0x20
0x948 ADD
0x949 DUP1
0x94a DUP4
0x94b GT
0x94c PUSH2 0x93c
0x94f JUMPI
---
0x93c: JUMPDEST 
0x93e: V770 = S[S1]
0x940: M[S0] = V770
0x942: V771 = 0x1
0x944: V772 = ADD 0x1 S1
0x946: V773 = 0x20
0x948: V774 = ADD 0x20 S0
0x94b: V775 = GT V765 V774
0x94c: V776 = 0x93c
0x94f: JUMPI 0x93c V775
---
Entry stack: [V10, 0x5a9, V166, V170, 0x3, V183, V765, S1, S0]
Stack pops: 3
Stack additions: [S2, V772, V774]
Exit stack: [V10, 0x5a9, V166, V170, 0x3, V183, V765, V772, V774]

================================

Block 0x950
[0x950:0x958]
---
Predecessors: [0x93c]
Successors: [0x959]
---
0x950 DUP3
0x951 SWAP1
0x952 SUB
0x953 PUSH1 0x1f
0x955 AND
0x956 DUP3
0x957 ADD
0x958 SWAP2
---
0x952: V777 = SUB V774 V765
0x953: V778 = 0x1f
0x955: V779 = AND 0x1f V777
0x957: V780 = ADD V765 V779
---
Entry stack: [V10, 0x5a9, V166, V170, 0x3, V183, V765, V772, V774]
Stack pops: 3
Stack additions: [V780, S1, S2]
Exit stack: [V10, 0x5a9, V166, V170, 0x3, V183, V780, V772, V765]

================================

Block 0x959
[0x959:0x964]
---
Predecessors: [0x1d8, 0x22e, 0x950]
Successors: [0xab]
---
0x959 JUMPDEST
0x95a POP
0x95b POP
0x95c POP
0x95d POP
0x95e POP
0x95f SWAP1
0x960 POP
0x961 PUSH2 0xab
0x964 JUMP
---
0x959: JUMPDEST 
0x961: V781 = 0xab
0x964: JUMP 0xab
---
Entry stack: [V10, 0x5a9, V166, V170, 0x3, V183, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V10, 0x5a9, V170]

================================

Block 0x965
[0x965:0x984]
---
Predecessors: []
Successors: []
---
0x965 MISSING 0xd3
0x966 PUSH16 0xc81bdcf94328335f2aae78f9af1a4750
0x977 DUP3
0x978 ORIGIN
0x979 RETURN
0x97a LOG2
0x97b PUSH9 0xa1c0af99892b1d72ff
---
0x965: MISSING 0xd3
0x966: V782 = 0xc81bdcf94328335f2aae78f9af1a4750
0x978: V783 = ORIGIN
0x979: RETURN V783 S1
0x97a: LOG S0 S1 S2 S3
0x97b: V784 = 0xa1c0af99892b1d72ff
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc81bdcf94328335f2aae78f9af1a4750, S0, S1, 0xa1c0af99892b1d72ff]
Exit stack: []

================================

Function 0:
Public function signature: 0xd8e6e2c
Entry block: 0xa5
Exit block: 0x609
Body: 0xa5, 0xab, 0x57a, 0x58c, 0x5a9, 0x5f0, 0x609

Function 1:
Public function signature: 0x13af4035
Entry block: 0xae
Exit block: 0xa3
Body: 0xa3, 0xae

Function 2:
Public function signature: 0x538de0ec
Entry block: 0xef
Exit block: 0xa3
Body: 0xa3, 0xef

Function 3:
Public function signature: 0x8666ea1d
Entry block: 0x138
Exit block: 0x609
Body: 0xab, 0x138, 0x57a, 0x58c, 0x5a9, 0x5f0, 0x609

Function 4:
Public function signature: 0x893d20e8
Entry block: 0x14c
Exit block: 0x609
Body: 0xab, 0x14c, 0x57a, 0x58c, 0x5a9, 0x5f0, 0x609

Function 5:
Public function signature: 0xa1973084
Entry block: 0x160
Exit block: 0x609
Body: 0x160, 0x17c, 0x1bd, 0x1c5, 0x5a9, 0x5f0, 0x609, 0x7cc, 0x80c, 0x814, 0x827, 0x835, 0x849, 0x852

Function 6:
Public function signature: 0xa1d602e3
Entry block: 0x1d8
Exit block: 0x609
Body: 0xab, 0x1d8, 0x226, 0x22e, 0x57a, 0x58c, 0x5a9, 0x5f0, 0x609, 0x92e, 0x93c, 0x950, 0x959

Function 7:
Public function signature: 0xa7f43779
Entry block: 0x241
Exit block: 0x695
Body: 0xa3, 0x241, 0x25d, 0x2f3, 0x617, 0x693, 0x695

Function 8:
Public function signature: 0xaa3ed427
Entry block: 0x300
Exit block: 0xa3
Body: 0xa3, 0x300, 0x32d, 0x368, 0x378, 0x3e4, 0x6a1, 0x71d, 0x725, 0x7c7

Function 9:
Public function signature: 0xc2a0f88f
Entry block: 0x3eb
Exit block: 0x609
Body: 0xab, 0x3eb, 0x57a, 0x58c, 0x5a9, 0x5f0, 0x609, 0x85e

Function 10:
Public function signature: 0xcc4bd7c1
Entry block: 0x406
Exit block: 0x57a
Body: 0x406, 0x57a

Function 11:
Public function signature: 0xfc080f62
Entry block: 0x46b
Exit block: 0xa3
Body: 0xa3, 0x46b, 0x496, 0x8fa

Function 12:
Public function signature: 0xff3214af
Entry block: 0x4ac
Exit block: 0xa3
Body: 0xa3, 0x4ac, 0x50e, 0x514, 0x552, 0x55e, 0x566, 0x56f, 0x865, 0x8a4, 0x8b0, 0x8bc, 0x8cb, 0x8ce, 0x8d7, 0x8ec, 0x8f3, 0x8f7, 0x8fa, 0x8fe, 0x90d, 0x910, 0x919

Function 13:
Public fallback function
Entry block: 0xa3
Exit block: 0xa3
Body: 0xa3

Function 14:
Private function
Entry block: 0x40d
Exit block: 0x45e
Body: 0x40d, 0x45e

