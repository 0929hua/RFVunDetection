Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x103]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x103
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x103
0xc: JUMPI 0x103 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x10d]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x6fdde03
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x10d
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x6fdde03
0x22: V15 = EQ V13 0x6fdde03
0x23: V16 = 0x10d
0x26: JUMPI 0x10d V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x197]
---
0x27 DUP1
0x28 PUSH4 0x95ea7b3
0x2d EQ
0x2e PUSH2 0x197
0x31 JUMPI
---
0x28: V17 = 0x95ea7b3
0x2d: V18 = EQ 0x95ea7b3 V13
0x2e: V19 = 0x197
0x31: JUMPI 0x197 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1cf]
---
0x32 DUP1
0x33 PUSH4 0x18160ddd
0x38 EQ
0x39 PUSH2 0x1cf
0x3c JUMPI
---
0x33: V20 = 0x18160ddd
0x38: V21 = EQ 0x18160ddd V13
0x39: V22 = 0x1cf
0x3c: JUMPI 0x1cf V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x1f6]
---
0x3d DUP1
0x3e PUSH4 0x23b872dd
0x43 EQ
0x44 PUSH2 0x1f6
0x47 JUMPI
---
0x3e: V23 = 0x23b872dd
0x43: V24 = EQ 0x23b872dd V13
0x44: V25 = 0x1f6
0x47: JUMPI 0x1f6 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x220]
---
0x48 DUP1
0x49 PUSH4 0x313ce567
0x4e EQ
0x4f PUSH2 0x220
0x52 JUMPI
---
0x49: V26 = 0x313ce567
0x4e: V27 = EQ 0x313ce567 V13
0x4f: V28 = 0x220
0x52: JUMPI 0x220 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x235]
---
0x53 DUP1
0x54 PUSH4 0x3ccfd60b
0x59 EQ
0x5a PUSH2 0x235
0x5d JUMPI
---
0x54: V29 = 0x3ccfd60b
0x59: V30 = EQ 0x3ccfd60b V13
0x5a: V31 = 0x235
0x5d: JUMPI 0x235 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x24a]
---
0x5e DUP1
0x5f PUSH4 0x3fa4f245
0x64 EQ
0x65 PUSH2 0x24a
0x68 JUMPI
---
0x5f: V32 = 0x3fa4f245
0x64: V33 = EQ 0x3fa4f245 V13
0x65: V34 = 0x24a
0x68: JUMPI 0x24a V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x25f]
---
0x69 DUP1
0x6a PUSH4 0x42966c68
0x6f EQ
0x70 PUSH2 0x25f
0x73 JUMPI
---
0x6a: V35 = 0x42966c68
0x6f: V36 = EQ 0x42966c68 V13
0x70: V37 = 0x25f
0x73: JUMPI 0x25f V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x277]
---
0x74 DUP1
0x75 PUSH4 0x70a08231
0x7a EQ
0x7b PUSH2 0x277
0x7e JUMPI
---
0x75: V38 = 0x70a08231
0x7a: V39 = EQ 0x70a08231 V13
0x7b: V40 = 0x277
0x7e: JUMPI 0x277 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x298]
---
0x7f DUP1
0x80 PUSH4 0x95d89b41
0x85 EQ
0x86 PUSH2 0x298
0x89 JUMPI
---
0x80: V41 = 0x95d89b41
0x85: V42 = EQ 0x95d89b41 V13
0x86: V43 = 0x298
0x89: JUMPI 0x298 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x2ad]
---
0x8a DUP1
0x8b PUSH4 0x9b1cbccc
0x90 EQ
0x91 PUSH2 0x2ad
0x94 JUMPI
---
0x8b: V44 = 0x9b1cbccc
0x90: V45 = EQ 0x9b1cbccc V13
0x91: V46 = 0x2ad
0x94: JUMPI 0x2ad V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x2c2]
---
0x95 DUP1
0x96 PUSH4 0xa9059cbb
0x9b EQ
0x9c PUSH2 0x2c2
0x9f JUMPI
---
0x96: V47 = 0xa9059cbb
0x9b: V48 = EQ 0xa9059cbb V13
0x9c: V49 = 0x2c2
0x9f: JUMPI 0x2c2 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x103]
---
0xa0 DUP1
0xa1 PUSH4 0xaa6ca808
0xa6 EQ
0xa7 PUSH2 0x103
0xaa JUMPI
---
0xa1: V50 = 0xaa6ca808
0xa6: V51 = EQ 0xaa6ca808 V13
0xa7: V52 = 0x103
0xaa: JUMPI 0x103 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x2e6]
---
0xab DUP1
0xac PUSH4 0xc108d542
0xb1 EQ
0xb2 PUSH2 0x2e6
0xb5 JUMPI
---
0xac: V53 = 0xc108d542
0xb1: V54 = EQ 0xc108d542 V13
0xb2: V55 = 0x2e6
0xb5: JUMPI 0x2e6 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x2fb]
---
0xb6 DUP1
0xb7 PUSH4 0xc489744b
0xbc EQ
0xbd PUSH2 0x2fb
0xc0 JUMPI
---
0xb7: V56 = 0xc489744b
0xbc: V57 = EQ 0xc489744b V13
0xbd: V58 = 0x2fb
0xc0: JUMPI 0x2fb V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x322]
---
0xc1 DUP1
0xc2 PUSH4 0xd8a54360
0xc7 EQ
0xc8 PUSH2 0x322
0xcb JUMPI
---
0xc2: V59 = 0xd8a54360
0xc7: V60 = EQ 0xd8a54360 V13
0xc8: V61 = 0x322
0xcb: JUMPI 0x322 V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x337]
---
0xcc DUP1
0xcd PUSH4 0xdd62ed3e
0xd2 EQ
0xd3 PUSH2 0x337
0xd6 JUMPI
---
0xcd: V62 = 0xdd62ed3e
0xd2: V63 = EQ 0xdd62ed3e V13
0xd3: V64 = 0x337
0xd6: JUMPI 0x337 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x35e]
---
0xd7 DUP1
0xd8 PUSH4 0xe58fc54c
0xdd EQ
0xde PUSH2 0x35e
0xe1 JUMPI
---
0xd8: V65 = 0xe58fc54c
0xdd: V66 = EQ 0xe58fc54c V13
0xde: V67 = 0x35e
0xe1: JUMPI 0x35e V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0xed, 0x37f]
---
0xe2 DUP1
0xe3 PUSH4 0xefca2eed
0xe8 EQ
0xe9 PUSH2 0x37f
0xec JUMPI
---
0xe3: V68 = 0xefca2eed
0xe8: V69 = EQ 0xefca2eed V13
0xe9: V70 = 0x37f
0xec: JUMPI 0x37f V69
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xed
[0xed:0xf7]
---
Predecessors: [0xe2]
Successors: [0xf8, 0x394]
---
0xed DUP1
0xee PUSH4 0xf2fde38b
0xf3 EQ
0xf4 PUSH2 0x394
0xf7 JUMPI
---
0xee: V71 = 0xf2fde38b
0xf3: V72 = EQ 0xf2fde38b V13
0xf4: V73 = 0x394
0xf7: JUMPI 0x394 V72
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0x102]
---
Predecessors: [0xed]
Successors: [0x103, 0x3b5]
---
0xf8 DUP1
0xf9 PUSH4 0xf9f92be4
0xfe EQ
0xff PUSH2 0x3b5
0x102 JUMPI
---
0xf9: V74 = 0xf9f92be4
0xfe: V75 = EQ 0xf9f92be4 V13
0xff: V76 = 0x3b5
0x102: JUMPI 0x3b5 V75
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x103
[0x103:0x10a]
---
Predecessors: [0x0, 0xa0, 0xf8]
Successors: [0x3d6]
---
0x103 JUMPDEST
0x104 PUSH2 0x10b
0x107 PUSH2 0x3d6
0x10a JUMP
---
0x103: JUMPDEST 
0x104: V77 = 0x10b
0x107: V78 = 0x3d6
0x10a: JUMP 0x3d6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x10b]
Exit stack: [V13, 0x10b]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: [0x4b8, 0x796, 0x84a, 0xcd2]
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S3, S2, S1, S0]

================================

Block 0x10d
[0x10d:0x114]
---
Predecessors: [0xd]
Successors: [0x115, 0x119]
---
0x10d JUMPDEST
0x10e CALLVALUE
0x10f DUP1
0x110 ISZERO
0x111 PUSH2 0x119
0x114 JUMPI
---
0x10d: JUMPDEST 
0x10e: V79 = CALLVALUE
0x110: V80 = ISZERO V79
0x111: V81 = 0x119
0x114: JUMPI 0x119 V80
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V13, V79]

================================

Block 0x115
[0x115:0x118]
---
Predecessors: [0x10d]
Successors: []
---
0x115 PUSH1 0x0
0x117 DUP1
0x118 REVERT
---
0x115: V82 = 0x0
0x118: REVERT 0x0 0x0
---
Entry stack: [V13, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V79]

================================

Block 0x119
[0x119:0x121]
---
Predecessors: [0x10d]
Successors: [0x4bf]
---
0x119 JUMPDEST
0x11a POP
0x11b PUSH2 0x122
0x11e PUSH2 0x4bf
0x121 JUMP
---
0x119: JUMPDEST 
0x11b: V83 = 0x122
0x11e: V84 = 0x4bf
0x121: JUMP 0x4bf
---
Entry stack: [V13, V79]
Stack pops: 1
Stack additions: [0x122]
Exit stack: [V13, 0x122]

================================

Block 0x122
[0x122:0x143]
---
Predecessors: [0x4bf, 0x8ab]
Successors: [0x144]
---
0x122 JUMPDEST
0x123 PUSH1 0x40
0x125 DUP1
0x126 MLOAD
0x127 PUSH1 0x20
0x129 DUP1
0x12a DUP3
0x12b MSTORE
0x12c DUP4
0x12d MLOAD
0x12e DUP2
0x12f DUP4
0x130 ADD
0x131 MSTORE
0x132 DUP4
0x133 MLOAD
0x134 SWAP2
0x135 SWAP3
0x136 DUP4
0x137 SWAP3
0x138 SWAP1
0x139 DUP4
0x13a ADD
0x13b SWAP2
0x13c DUP6
0x13d ADD
0x13e SWAP1
0x13f DUP1
0x140 DUP4
0x141 DUP4
0x142 PUSH1 0x0
---
0x122: JUMPDEST 
0x123: V85 = 0x40
0x126: V86 = M[0x40]
0x127: V87 = 0x20
0x12b: M[V86] = 0x20
0x12d: V88 = M[S0]
0x130: V89 = ADD V86 0x20
0x131: M[V89] = V88
0x133: V90 = M[S0]
0x13a: V91 = ADD V86 0x40
0x13d: V92 = ADD S0 0x20
0x142: V93 = 0x0
---
Entry stack: [V13, 0x122, S0]
Stack pops: 1
Stack additions: [S0, V86, V86, V91, V92, V90, V90, V91, V92, 0x0]
Exit stack: [V13, 0x122, S0, V86, V86, V91, V92, V90, V90, V91, V92, 0x0]

================================

Block 0x144
[0x144:0x14c]
---
Predecessors: [0x122, 0x14d]
Successors: [0x14d, 0x15c]
---
0x144 JUMPDEST
0x145 DUP4
0x146 DUP2
0x147 LT
0x148 ISZERO
0x149 PUSH2 0x15c
0x14c JUMPI
---
0x144: JUMPDEST 
0x147: V94 = LT S0 V90
0x148: V95 = ISZERO V94
0x149: V96 = 0x15c
0x14c: JUMPI 0x15c V95
---
Entry stack: [V13, 0x122, S9, V86, V86, V91, V92, V90, V90, V91, V92, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x122, S9, V86, V86, V91, V92, V90, V90, V91, V92, S0]

================================

Block 0x14d
[0x14d:0x15b]
---
Predecessors: [0x144]
Successors: [0x144]
---
0x14d DUP2
0x14e DUP2
0x14f ADD
0x150 MLOAD
0x151 DUP4
0x152 DUP3
0x153 ADD
0x154 MSTORE
0x155 PUSH1 0x20
0x157 ADD
0x158 PUSH2 0x144
0x15b JUMP
---
0x14f: V97 = ADD S0 V92
0x150: V98 = M[V97]
0x153: V99 = ADD S0 V91
0x154: M[V99] = V98
0x155: V100 = 0x20
0x157: V101 = ADD 0x20 S0
0x158: V102 = 0x144
0x15b: JUMP 0x144
---
Entry stack: [V13, 0x122, S9, V86, V86, V91, V92, V90, V90, V91, V92, S0]
Stack pops: 3
Stack additions: [S2, S1, V101]
Exit stack: [V13, 0x122, S9, V86, V86, V91, V92, V90, V90, V91, V92, V101]

================================

Block 0x15c
[0x15c:0x16f]
---
Predecessors: [0x144]
Successors: [0x170, 0x189]
---
0x15c JUMPDEST
0x15d POP
0x15e POP
0x15f POP
0x160 POP
0x161 SWAP1
0x162 POP
0x163 SWAP1
0x164 DUP2
0x165 ADD
0x166 SWAP1
0x167 PUSH1 0x1f
0x169 AND
0x16a DUP1
0x16b ISZERO
0x16c PUSH2 0x189
0x16f JUMPI
---
0x15c: JUMPDEST 
0x165: V103 = ADD V90 V91
0x167: V104 = 0x1f
0x169: V105 = AND 0x1f V90
0x16b: V106 = ISZERO V105
0x16c: V107 = 0x189
0x16f: JUMPI 0x189 V106
---
Entry stack: [V13, 0x122, S9, V86, V86, V91, V92, V90, V90, V91, V92, S0]
Stack pops: 7
Stack additions: [V103, V105]
Exit stack: [V13, 0x122, S9, V86, V86, V103, V105]

================================

Block 0x170
[0x170:0x188]
---
Predecessors: [0x15c]
Successors: [0x189]
---
0x170 DUP1
0x171 DUP3
0x172 SUB
0x173 DUP1
0x174 MLOAD
0x175 PUSH1 0x1
0x177 DUP4
0x178 PUSH1 0x20
0x17a SUB
0x17b PUSH2 0x100
0x17e EXP
0x17f SUB
0x180 NOT
0x181 AND
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 SWAP2
0x188 POP
---
0x172: V108 = SUB V103 V105
0x174: V109 = M[V108]
0x175: V110 = 0x1
0x178: V111 = 0x20
0x17a: V112 = SUB 0x20 V105
0x17b: V113 = 0x100
0x17e: V114 = EXP 0x100 V112
0x17f: V115 = SUB V114 0x1
0x180: V116 = NOT V115
0x181: V117 = AND V116 V109
0x183: M[V108] = V117
0x184: V118 = 0x20
0x186: V119 = ADD 0x20 V108
---
Entry stack: [V13, 0x122, S4, V86, V86, V103, V105]
Stack pops: 2
Stack additions: [V119, S0]
Exit stack: [V13, 0x122, S4, V86, V86, V119, V105]

================================

Block 0x189
[0x189:0x196]
---
Predecessors: [0x15c, 0x170]
Successors: []
---
0x189 JUMPDEST
0x18a POP
0x18b SWAP3
0x18c POP
0x18d POP
0x18e POP
0x18f PUSH1 0x40
0x191 MLOAD
0x192 DUP1
0x193 SWAP2
0x194 SUB
0x195 SWAP1
0x196 RETURN
---
0x189: JUMPDEST 
0x18f: V120 = 0x40
0x191: V121 = M[0x40]
0x194: V122 = SUB S1 V121
0x196: RETURN V121 V122
---
Entry stack: [V13, 0x122, S4, V86, V86, S1, V105]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x122]

================================

Block 0x197
[0x197:0x19e]
---
Predecessors: [0x27]
Successors: [0x19f, 0x1a3]
---
0x197 JUMPDEST
0x198 CALLVALUE
0x199 DUP1
0x19a ISZERO
0x19b PUSH2 0x1a3
0x19e JUMPI
---
0x197: JUMPDEST 
0x198: V123 = CALLVALUE
0x19a: V124 = ISZERO V123
0x19b: V125 = 0x1a3
0x19e: JUMPI 0x1a3 V124
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V123]
Exit stack: [V13, V123]

================================

Block 0x19f
[0x19f:0x1a2]
---
Predecessors: [0x197]
Successors: []
---
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 REVERT
---
0x19f: V126 = 0x0
0x1a2: REVERT 0x0 0x0
---
Entry stack: [V13, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V123]

================================

Block 0x1a3
[0x1a3:0x1ba]
---
Predecessors: [0x197]
Successors: [0x4f6]
---
0x1a3 JUMPDEST
0x1a4 POP
0x1a5 PUSH2 0x1bb
0x1a8 PUSH1 0x1
0x1aa PUSH1 0xa0
0x1ac PUSH1 0x2
0x1ae EXP
0x1af SUB
0x1b0 PUSH1 0x4
0x1b2 CALLDATALOAD
0x1b3 AND
0x1b4 PUSH1 0x24
0x1b6 CALLDATALOAD
0x1b7 PUSH2 0x4f6
0x1ba JUMP
---
0x1a3: JUMPDEST 
0x1a5: V127 = 0x1bb
0x1a8: V128 = 0x1
0x1aa: V129 = 0xa0
0x1ac: V130 = 0x2
0x1ae: V131 = EXP 0x2 0xa0
0x1af: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b0: V133 = 0x4
0x1b2: V134 = CALLDATALOAD 0x4
0x1b3: V135 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V136 = 0x24
0x1b6: V137 = CALLDATALOAD 0x24
0x1b7: V138 = 0x4f6
0x1ba: JUMP 0x4f6
---
Entry stack: [V13, V123]
Stack pops: 1
Stack additions: [0x1bb, V135, V137]
Exit stack: [V13, 0x1bb, V135, V137]

================================

Block 0x1bb
[0x1bb:0x1ce]
---
Predecessors: [0x599, 0x6d3, 0x910, 0x9f3, 0xa55, 0xc6f, 0xcd5]
Successors: []
---
0x1bb JUMPDEST
0x1bc PUSH1 0x40
0x1be DUP1
0x1bf MLOAD
0x1c0 SWAP2
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 DUP3
0x1c4 MSTORE
0x1c5 MLOAD
0x1c6 SWAP1
0x1c7 DUP2
0x1c8 SWAP1
0x1c9 SUB
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd SWAP1
0x1ce RETURN
---
0x1bb: JUMPDEST 
0x1bc: V139 = 0x40
0x1bf: V140 = M[0x40]
0x1c1: V141 = ISZERO S0
0x1c2: V142 = ISZERO V141
0x1c4: M[V140] = V142
0x1c5: V143 = M[0x40]
0x1c9: V144 = SUB V140 V143
0x1ca: V145 = 0x20
0x1cc: V146 = ADD 0x20 V144
0x1ce: RETURN V143 V146
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S3, S2, S1]

================================

Block 0x1cf
[0x1cf:0x1d6]
---
Predecessors: [0x32]
Successors: [0x1d7, 0x1db]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 DUP1
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V147 = CALLVALUE
0x1d2: V148 = ISZERO V147
0x1d3: V149 = 0x1db
0x1d6: JUMPI 0x1db V148
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V147]
Exit stack: [V13, V147]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V150 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V13, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V147]

================================

Block 0x1db
[0x1db:0x1e3]
---
Predecessors: [0x1cf]
Successors: [0x59f]
---
0x1db JUMPDEST
0x1dc POP
0x1dd PUSH2 0x1e4
0x1e0 PUSH2 0x59f
0x1e3 JUMP
---
0x1db: JUMPDEST 
0x1dd: V151 = 0x1e4
0x1e0: V152 = 0x59f
0x1e3: JUMP 0x59f
---
Entry stack: [V13, V147]
Stack pops: 1
Stack additions: [0x1e4]
Exit stack: [V13, 0x1e4]

================================

Block 0x1e4
[0x1e4:0x1f5]
---
Predecessors: [0x59f, 0x735, 0x79a, 0x890, 0xaeb, 0xaf6, 0xafc, 0xc79]
Successors: []
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x40
0x1e7 DUP1
0x1e8 MLOAD
0x1e9 SWAP2
0x1ea DUP3
0x1eb MSTORE
0x1ec MLOAD
0x1ed SWAP1
0x1ee DUP2
0x1ef SWAP1
0x1f0 SUB
0x1f1 PUSH1 0x20
0x1f3 ADD
0x1f4 SWAP1
0x1f5 RETURN
---
0x1e4: JUMPDEST 
0x1e5: V153 = 0x40
0x1e8: V154 = M[0x40]
0x1eb: M[V154] = S0
0x1ec: V155 = M[0x40]
0x1f0: V156 = SUB V154 V155
0x1f1: V157 = 0x20
0x1f3: V158 = ADD 0x20 V156
0x1f5: RETURN V155 V158
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x1f6
[0x1f6:0x1fd]
---
Predecessors: [0x3d]
Successors: [0x1fe, 0x202]
---
0x1f6 JUMPDEST
0x1f7 CALLVALUE
0x1f8 DUP1
0x1f9 ISZERO
0x1fa PUSH2 0x202
0x1fd JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V159 = CALLVALUE
0x1f9: V160 = ISZERO V159
0x1fa: V161 = 0x202
0x1fd: JUMPI 0x202 V160
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V159]
Exit stack: [V13, V159]

================================

Block 0x1fe
[0x1fe:0x201]
---
Predecessors: [0x1f6]
Successors: []
---
0x1fe PUSH1 0x0
0x200 DUP1
0x201 REVERT
---
0x1fe: V162 = 0x0
0x201: REVERT 0x0 0x0
---
Entry stack: [V13, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V159]

================================

Block 0x202
[0x202:0x21f]
---
Predecessors: [0x1f6]
Successors: [0x5a5]
---
0x202 JUMPDEST
0x203 POP
0x204 PUSH2 0x1bb
0x207 PUSH1 0x1
0x209 PUSH1 0xa0
0x20b PUSH1 0x2
0x20d EXP
0x20e SUB
0x20f PUSH1 0x4
0x211 CALLDATALOAD
0x212 DUP2
0x213 AND
0x214 SWAP1
0x215 PUSH1 0x24
0x217 CALLDATALOAD
0x218 AND
0x219 PUSH1 0x44
0x21b CALLDATALOAD
0x21c PUSH2 0x5a5
0x21f JUMP
---
0x202: JUMPDEST 
0x204: V163 = 0x1bb
0x207: V164 = 0x1
0x209: V165 = 0xa0
0x20b: V166 = 0x2
0x20d: V167 = EXP 0x2 0xa0
0x20e: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20f: V169 = 0x4
0x211: V170 = CALLDATALOAD 0x4
0x213: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x215: V172 = 0x24
0x217: V173 = CALLDATALOAD 0x24
0x218: V174 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x219: V175 = 0x44
0x21b: V176 = CALLDATALOAD 0x44
0x21c: V177 = 0x5a5
0x21f: JUMP 0x5a5
---
Entry stack: [V13, V159]
Stack pops: 1
Stack additions: [0x1bb, V171, V174, V176]
Exit stack: [V13, 0x1bb, V171, V174, V176]

================================

Block 0x220
[0x220:0x227]
---
Predecessors: [0x48]
Successors: [0x228, 0x22c]
---
0x220 JUMPDEST
0x221 CALLVALUE
0x222 DUP1
0x223 ISZERO
0x224 PUSH2 0x22c
0x227 JUMPI
---
0x220: JUMPDEST 
0x221: V178 = CALLVALUE
0x223: V179 = ISZERO V178
0x224: V180 = 0x22c
0x227: JUMPI 0x22c V179
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V178]
Exit stack: [V13, V178]

================================

Block 0x228
[0x228:0x22b]
---
Predecessors: [0x220]
Successors: []
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b REVERT
---
0x228: V181 = 0x0
0x22b: REVERT 0x0 0x0
---
Entry stack: [V13, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V178]

================================

Block 0x22c
[0x22c:0x234]
---
Predecessors: [0x220]
Successors: [0x735]
---
0x22c JUMPDEST
0x22d POP
0x22e PUSH2 0x1e4
0x231 PUSH2 0x735
0x234 JUMP
---
0x22c: JUMPDEST 
0x22e: V182 = 0x1e4
0x231: V183 = 0x735
0x234: JUMP 0x735
---
Entry stack: [V13, V178]
Stack pops: 1
Stack additions: [0x1e4]
Exit stack: [V13, 0x1e4]

================================

Block 0x235
[0x235:0x23c]
---
Predecessors: [0x53]
Successors: [0x23d, 0x241]
---
0x235 JUMPDEST
0x236 CALLVALUE
0x237 DUP1
0x238 ISZERO
0x239 PUSH2 0x241
0x23c JUMPI
---
0x235: JUMPDEST 
0x236: V184 = CALLVALUE
0x238: V185 = ISZERO V184
0x239: V186 = 0x241
0x23c: JUMPI 0x241 V185
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V184]
Exit stack: [V13, V184]

================================

Block 0x23d
[0x23d:0x240]
---
Predecessors: [0x235]
Successors: []
---
0x23d PUSH1 0x0
0x23f DUP1
0x240 REVERT
---
0x23d: V187 = 0x0
0x240: REVERT 0x0 0x0
---
Entry stack: [V13, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V184]

================================

Block 0x241
[0x241:0x249]
---
Predecessors: [0x235]
Successors: [0x73a]
---
0x241 JUMPDEST
0x242 POP
0x243 PUSH2 0x10b
0x246 PUSH2 0x73a
0x249 JUMP
---
0x241: JUMPDEST 
0x243: V188 = 0x10b
0x246: V189 = 0x73a
0x249: JUMP 0x73a
---
Entry stack: [V13, V184]
Stack pops: 1
Stack additions: [0x10b]
Exit stack: [V13, 0x10b]

================================

Block 0x24a
[0x24a:0x251]
---
Predecessors: [0x5e]
Successors: [0x252, 0x256]
---
0x24a JUMPDEST
0x24b CALLVALUE
0x24c DUP1
0x24d ISZERO
0x24e PUSH2 0x256
0x251 JUMPI
---
0x24a: JUMPDEST 
0x24b: V190 = CALLVALUE
0x24d: V191 = ISZERO V190
0x24e: V192 = 0x256
0x251: JUMPI 0x256 V191
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V190]
Exit stack: [V13, V190]

================================

Block 0x252
[0x252:0x255]
---
Predecessors: [0x24a]
Successors: []
---
0x252 PUSH1 0x0
0x254 DUP1
0x255 REVERT
---
0x252: V193 = 0x0
0x255: REVERT 0x0 0x0
---
Entry stack: [V13, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V190]

================================

Block 0x256
[0x256:0x25e]
---
Predecessors: [0x24a]
Successors: [0x79a]
---
0x256 JUMPDEST
0x257 POP
0x258 PUSH2 0x1e4
0x25b PUSH2 0x79a
0x25e JUMP
---
0x256: JUMPDEST 
0x258: V194 = 0x1e4
0x25b: V195 = 0x79a
0x25e: JUMP 0x79a
---
Entry stack: [V13, V190]
Stack pops: 1
Stack additions: [0x1e4]
Exit stack: [V13, 0x1e4]

================================

Block 0x25f
[0x25f:0x266]
---
Predecessors: [0x69]
Successors: [0x267, 0x26b]
---
0x25f JUMPDEST
0x260 CALLVALUE
0x261 DUP1
0x262 ISZERO
0x263 PUSH2 0x26b
0x266 JUMPI
---
0x25f: JUMPDEST 
0x260: V196 = CALLVALUE
0x262: V197 = ISZERO V196
0x263: V198 = 0x26b
0x266: JUMPI 0x26b V197
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V196]
Exit stack: [V13, V196]

================================

Block 0x267
[0x267:0x26a]
---
Predecessors: [0x25f]
Successors: []
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
---
0x267: V199 = 0x0
0x26a: REVERT 0x0 0x0
---
Entry stack: [V13, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V196]

================================

Block 0x26b
[0x26b:0x276]
---
Predecessors: [0x25f]
Successors: [0x7a0]
---
0x26b JUMPDEST
0x26c POP
0x26d PUSH2 0x10b
0x270 PUSH1 0x4
0x272 CALLDATALOAD
0x273 PUSH2 0x7a0
0x276 JUMP
---
0x26b: JUMPDEST 
0x26d: V200 = 0x10b
0x270: V201 = 0x4
0x272: V202 = CALLDATALOAD 0x4
0x273: V203 = 0x7a0
0x276: JUMP 0x7a0
---
Entry stack: [V13, V196]
Stack pops: 1
Stack additions: [0x10b, V202]
Exit stack: [V13, 0x10b, V202]

================================

Block 0x277
[0x277:0x27e]
---
Predecessors: [0x74]
Successors: [0x27f, 0x283]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 DUP1
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x277: JUMPDEST 
0x278: V204 = CALLVALUE
0x27a: V205 = ISZERO V204
0x27b: V206 = 0x283
0x27e: JUMPI 0x283 V205
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V204]
Exit stack: [V13, V204]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x277]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V207 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V13, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V204]

================================

Block 0x283
[0x283:0x297]
---
Predecessors: [0x277]
Successors: [0x890]
---
0x283 JUMPDEST
0x284 POP
0x285 PUSH2 0x1e4
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 PUSH1 0x4
0x292 CALLDATALOAD
0x293 AND
0x294 PUSH2 0x890
0x297 JUMP
---
0x283: JUMPDEST 
0x285: V208 = 0x1e4
0x288: V209 = 0x1
0x28a: V210 = 0xa0
0x28c: V211 = 0x2
0x28e: V212 = EXP 0x2 0xa0
0x28f: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V214 = 0x4
0x292: V215 = CALLDATALOAD 0x4
0x293: V216 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x294: V217 = 0x890
0x297: JUMP 0x890
---
Entry stack: [V13, V204]
Stack pops: 1
Stack additions: [0x1e4, V216]
Exit stack: [V13, 0x1e4, V216]

================================

Block 0x298
[0x298:0x29f]
---
Predecessors: [0x7f]
Successors: [0x2a0, 0x2a4]
---
0x298 JUMPDEST
0x299 CALLVALUE
0x29a DUP1
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x298: JUMPDEST 
0x299: V218 = CALLVALUE
0x29b: V219 = ISZERO V218
0x29c: V220 = 0x2a4
0x29f: JUMPI 0x2a4 V219
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V218]
Exit stack: [V13, V218]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x298]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V221 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V13, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V218]

================================

Block 0x2a4
[0x2a4:0x2ac]
---
Predecessors: [0x298]
Successors: [0x8ab]
---
0x2a4 JUMPDEST
0x2a5 POP
0x2a6 PUSH2 0x122
0x2a9 PUSH2 0x8ab
0x2ac JUMP
---
0x2a4: JUMPDEST 
0x2a6: V222 = 0x122
0x2a9: V223 = 0x8ab
0x2ac: JUMP 0x8ab
---
Entry stack: [V13, V218]
Stack pops: 1
Stack additions: [0x122]
Exit stack: [V13, 0x122]

================================

Block 0x2ad
[0x2ad:0x2b4]
---
Predecessors: [0x8a]
Successors: [0x2b5, 0x2b9]
---
0x2ad JUMPDEST
0x2ae CALLVALUE
0x2af DUP1
0x2b0 ISZERO
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x2ad: JUMPDEST 
0x2ae: V224 = CALLVALUE
0x2b0: V225 = ISZERO V224
0x2b1: V226 = 0x2b9
0x2b4: JUMPI 0x2b9 V225
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V224]
Exit stack: [V13, V224]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x2ad]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V227 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V13, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V224]

================================

Block 0x2b9
[0x2b9:0x2c1]
---
Predecessors: [0x2ad]
Successors: [0x8e2]
---
0x2b9 JUMPDEST
0x2ba POP
0x2bb PUSH2 0x1bb
0x2be PUSH2 0x8e2
0x2c1 JUMP
---
0x2b9: JUMPDEST 
0x2bb: V228 = 0x1bb
0x2be: V229 = 0x8e2
0x2c1: JUMP 0x8e2
---
Entry stack: [V13, V224]
Stack pops: 1
Stack additions: [0x1bb]
Exit stack: [V13, 0x1bb]

================================

Block 0x2c2
[0x2c2:0x2c9]
---
Predecessors: [0x95]
Successors: [0x2ca, 0x2ce]
---
0x2c2 JUMPDEST
0x2c3 CALLVALUE
0x2c4 DUP1
0x2c5 ISZERO
0x2c6 PUSH2 0x2ce
0x2c9 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V230 = CALLVALUE
0x2c5: V231 = ISZERO V230
0x2c6: V232 = 0x2ce
0x2c9: JUMPI 0x2ce V231
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V230]
Exit stack: [V13, V230]

================================

Block 0x2ca
[0x2ca:0x2cd]
---
Predecessors: [0x2c2]
Successors: []
---
0x2ca PUSH1 0x0
0x2cc DUP1
0x2cd REVERT
---
0x2ca: V233 = 0x0
0x2cd: REVERT 0x0 0x0
---
Entry stack: [V13, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V230]

================================

Block 0x2ce
[0x2ce:0x2e5]
---
Predecessors: [0x2c2]
Successors: [0x94c]
---
0x2ce JUMPDEST
0x2cf POP
0x2d0 PUSH2 0x1bb
0x2d3 PUSH1 0x1
0x2d5 PUSH1 0xa0
0x2d7 PUSH1 0x2
0x2d9 EXP
0x2da SUB
0x2db PUSH1 0x4
0x2dd CALLDATALOAD
0x2de AND
0x2df PUSH1 0x24
0x2e1 CALLDATALOAD
0x2e2 PUSH2 0x94c
0x2e5 JUMP
---
0x2ce: JUMPDEST 
0x2d0: V234 = 0x1bb
0x2d3: V235 = 0x1
0x2d5: V236 = 0xa0
0x2d7: V237 = 0x2
0x2d9: V238 = EXP 0x2 0xa0
0x2da: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2db: V240 = 0x4
0x2dd: V241 = CALLDATALOAD 0x4
0x2de: V242 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V243 = 0x24
0x2e1: V244 = CALLDATALOAD 0x24
0x2e2: V245 = 0x94c
0x2e5: JUMP 0x94c
---
Entry stack: [V13, V230]
Stack pops: 1
Stack additions: [0x1bb, V242, V244]
Exit stack: [V13, 0x1bb, V242, V244]

================================

Block 0x2e6
[0x2e6:0x2ed]
---
Predecessors: [0xab]
Successors: [0x2ee, 0x2f2]
---
0x2e6 JUMPDEST
0x2e7 CALLVALUE
0x2e8 DUP1
0x2e9 ISZERO
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2e6: JUMPDEST 
0x2e7: V246 = CALLVALUE
0x2e9: V247 = ISZERO V246
0x2ea: V248 = 0x2f2
0x2ed: JUMPI 0x2f2 V247
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V246]
Exit stack: [V13, V246]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2e6]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V249 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V13, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V246]

================================

Block 0x2f2
[0x2f2:0x2fa]
---
Predecessors: [0x2e6]
Successors: [0xa55]
---
0x2f2 JUMPDEST
0x2f3 POP
0x2f4 PUSH2 0x1bb
0x2f7 PUSH2 0xa55
0x2fa JUMP
---
0x2f2: JUMPDEST 
0x2f4: V250 = 0x1bb
0x2f7: V251 = 0xa55
0x2fa: JUMP 0xa55
---
Entry stack: [V13, V246]
Stack pops: 1
Stack additions: [0x1bb]
Exit stack: [V13, 0x1bb]

================================

Block 0x2fb
[0x2fb:0x302]
---
Predecessors: [0xb6]
Successors: [0x303, 0x307]
---
0x2fb JUMPDEST
0x2fc CALLVALUE
0x2fd DUP1
0x2fe ISZERO
0x2ff PUSH2 0x307
0x302 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V252 = CALLVALUE
0x2fe: V253 = ISZERO V252
0x2ff: V254 = 0x307
0x302: JUMPI 0x307 V253
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V252]
Exit stack: [V13, V252]

================================

Block 0x303
[0x303:0x306]
---
Predecessors: [0x2fb]
Successors: []
---
0x303 PUSH1 0x0
0x305 DUP1
0x306 REVERT
---
0x303: V255 = 0x0
0x306: REVERT 0x0 0x0
---
Entry stack: [V13, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V252]

================================

Block 0x307
[0x307:0x321]
---
Predecessors: [0x2fb]
Successors: [0xa5e]
---
0x307 JUMPDEST
0x308 POP
0x309 PUSH2 0x1e4
0x30c PUSH1 0x1
0x30e PUSH1 0xa0
0x310 PUSH1 0x2
0x312 EXP
0x313 SUB
0x314 PUSH1 0x4
0x316 CALLDATALOAD
0x317 DUP2
0x318 AND
0x319 SWAP1
0x31a PUSH1 0x24
0x31c CALLDATALOAD
0x31d AND
0x31e PUSH2 0xa5e
0x321 JUMP
---
0x307: JUMPDEST 
0x309: V256 = 0x1e4
0x30c: V257 = 0x1
0x30e: V258 = 0xa0
0x310: V259 = 0x2
0x312: V260 = EXP 0x2 0xa0
0x313: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x314: V262 = 0x4
0x316: V263 = CALLDATALOAD 0x4
0x318: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x31a: V265 = 0x24
0x31c: V266 = CALLDATALOAD 0x24
0x31d: V267 = AND V266 0xffffffffffffffffffffffffffffffffffffffff
0x31e: V268 = 0xa5e
0x321: JUMP 0xa5e
---
Entry stack: [V13, V252]
Stack pops: 1
Stack additions: [0x1e4, V264, V267]
Exit stack: [V13, 0x1e4, V264, V267]

================================

Block 0x322
[0x322:0x329]
---
Predecessors: [0xc1]
Successors: [0x32a, 0x32e]
---
0x322 JUMPDEST
0x323 CALLVALUE
0x324 DUP1
0x325 ISZERO
0x326 PUSH2 0x32e
0x329 JUMPI
---
0x322: JUMPDEST 
0x323: V269 = CALLVALUE
0x325: V270 = ISZERO V269
0x326: V271 = 0x32e
0x329: JUMPI 0x32e V270
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V269]
Exit stack: [V13, V269]

================================

Block 0x32a
[0x32a:0x32d]
---
Predecessors: [0x322]
Successors: []
---
0x32a PUSH1 0x0
0x32c DUP1
0x32d REVERT
---
0x32a: V272 = 0x0
0x32d: REVERT 0x0 0x0
---
Entry stack: [V13, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V269]

================================

Block 0x32e
[0x32e:0x336]
---
Predecessors: [0x322]
Successors: [0xaf6]
---
0x32e JUMPDEST
0x32f POP
0x330 PUSH2 0x1e4
0x333 PUSH2 0xaf6
0x336 JUMP
---
0x32e: JUMPDEST 
0x330: V273 = 0x1e4
0x333: V274 = 0xaf6
0x336: JUMP 0xaf6
---
Entry stack: [V13, V269]
Stack pops: 1
Stack additions: [0x1e4]
Exit stack: [V13, 0x1e4]

================================

Block 0x337
[0x337:0x33e]
---
Predecessors: [0xcc]
Successors: [0x33f, 0x343]
---
0x337 JUMPDEST
0x338 CALLVALUE
0x339 DUP1
0x33a ISZERO
0x33b PUSH2 0x343
0x33e JUMPI
---
0x337: JUMPDEST 
0x338: V275 = CALLVALUE
0x33a: V276 = ISZERO V275
0x33b: V277 = 0x343
0x33e: JUMPI 0x343 V276
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V275]
Exit stack: [V13, V275]

================================

Block 0x33f
[0x33f:0x342]
---
Predecessors: [0x337]
Successors: []
---
0x33f PUSH1 0x0
0x341 DUP1
0x342 REVERT
---
0x33f: V278 = 0x0
0x342: REVERT 0x0 0x0
---
Entry stack: [V13, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V275]

================================

Block 0x343
[0x343:0x35d]
---
Predecessors: [0x337]
Successors: [0xafc]
---
0x343 JUMPDEST
0x344 POP
0x345 PUSH2 0x1e4
0x348 PUSH1 0x1
0x34a PUSH1 0xa0
0x34c PUSH1 0x2
0x34e EXP
0x34f SUB
0x350 PUSH1 0x4
0x352 CALLDATALOAD
0x353 DUP2
0x354 AND
0x355 SWAP1
0x356 PUSH1 0x24
0x358 CALLDATALOAD
0x359 AND
0x35a PUSH2 0xafc
0x35d JUMP
---
0x343: JUMPDEST 
0x345: V279 = 0x1e4
0x348: V280 = 0x1
0x34a: V281 = 0xa0
0x34c: V282 = 0x2
0x34e: V283 = EXP 0x2 0xa0
0x34f: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x350: V285 = 0x4
0x352: V286 = CALLDATALOAD 0x4
0x354: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x356: V288 = 0x24
0x358: V289 = CALLDATALOAD 0x24
0x359: V290 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x35a: V291 = 0xafc
0x35d: JUMP 0xafc
---
Entry stack: [V13, V275]
Stack pops: 1
Stack additions: [0x1e4, V287, V290]
Exit stack: [V13, 0x1e4, V287, V290]

================================

Block 0x35e
[0x35e:0x365]
---
Predecessors: [0xd7]
Successors: [0x366, 0x36a]
---
0x35e JUMPDEST
0x35f CALLVALUE
0x360 DUP1
0x361 ISZERO
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x35e: JUMPDEST 
0x35f: V292 = CALLVALUE
0x361: V293 = ISZERO V292
0x362: V294 = 0x36a
0x365: JUMPI 0x36a V293
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V292]
Exit stack: [V13, V292]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x35e]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V295 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [V13, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V292]

================================

Block 0x36a
[0x36a:0x37e]
---
Predecessors: [0x35e]
Successors: [0xb27]
---
0x36a JUMPDEST
0x36b POP
0x36c PUSH2 0x1bb
0x36f PUSH1 0x1
0x371 PUSH1 0xa0
0x373 PUSH1 0x2
0x375 EXP
0x376 SUB
0x377 PUSH1 0x4
0x379 CALLDATALOAD
0x37a AND
0x37b PUSH2 0xb27
0x37e JUMP
---
0x36a: JUMPDEST 
0x36c: V296 = 0x1bb
0x36f: V297 = 0x1
0x371: V298 = 0xa0
0x373: V299 = 0x2
0x375: V300 = EXP 0x2 0xa0
0x376: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x377: V302 = 0x4
0x379: V303 = CALLDATALOAD 0x4
0x37a: V304 = AND V303 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V305 = 0xb27
0x37e: JUMP 0xb27
---
Entry stack: [V13, V292]
Stack pops: 1
Stack additions: [0x1bb, V304]
Exit stack: [V13, 0x1bb, V304]

================================

Block 0x37f
[0x37f:0x386]
---
Predecessors: [0xe2]
Successors: [0x387, 0x38b]
---
0x37f JUMPDEST
0x380 CALLVALUE
0x381 DUP1
0x382 ISZERO
0x383 PUSH2 0x38b
0x386 JUMPI
---
0x37f: JUMPDEST 
0x380: V306 = CALLVALUE
0x382: V307 = ISZERO V306
0x383: V308 = 0x38b
0x386: JUMPI 0x38b V307
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V306]
Exit stack: [V13, V306]

================================

Block 0x387
[0x387:0x38a]
---
Predecessors: [0x37f]
Successors: []
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
---
0x387: V309 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V13, V306]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V306]

================================

Block 0x38b
[0x38b:0x393]
---
Predecessors: [0x37f]
Successors: [0xc79]
---
0x38b JUMPDEST
0x38c POP
0x38d PUSH2 0x1e4
0x390 PUSH2 0xc79
0x393 JUMP
---
0x38b: JUMPDEST 
0x38d: V310 = 0x1e4
0x390: V311 = 0xc79
0x393: JUMP 0xc79
---
Entry stack: [V13, V306]
Stack pops: 1
Stack additions: [0x1e4]
Exit stack: [V13, 0x1e4]

================================

Block 0x394
[0x394:0x39b]
---
Predecessors: [0xed]
Successors: [0x39c, 0x3a0]
---
0x394 JUMPDEST
0x395 CALLVALUE
0x396 DUP1
0x397 ISZERO
0x398 PUSH2 0x3a0
0x39b JUMPI
---
0x394: JUMPDEST 
0x395: V312 = CALLVALUE
0x397: V313 = ISZERO V312
0x398: V314 = 0x3a0
0x39b: JUMPI 0x3a0 V313
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V312]
Exit stack: [V13, V312]

================================

Block 0x39c
[0x39c:0x39f]
---
Predecessors: [0x394]
Successors: []
---
0x39c PUSH1 0x0
0x39e DUP1
0x39f REVERT
---
0x39c: V315 = 0x0
0x39f: REVERT 0x0 0x0
---
Entry stack: [V13, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V312]

================================

Block 0x3a0
[0x3a0:0x3b4]
---
Predecessors: [0x394]
Successors: [0xc7f]
---
0x3a0 JUMPDEST
0x3a1 POP
0x3a2 PUSH2 0x10b
0x3a5 PUSH1 0x1
0x3a7 PUSH1 0xa0
0x3a9 PUSH1 0x2
0x3ab EXP
0x3ac SUB
0x3ad PUSH1 0x4
0x3af CALLDATALOAD
0x3b0 AND
0x3b1 PUSH2 0xc7f
0x3b4 JUMP
---
0x3a0: JUMPDEST 
0x3a2: V316 = 0x10b
0x3a5: V317 = 0x1
0x3a7: V318 = 0xa0
0x3a9: V319 = 0x2
0x3ab: V320 = EXP 0x2 0xa0
0x3ac: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ad: V322 = 0x4
0x3af: V323 = CALLDATALOAD 0x4
0x3b0: V324 = AND V323 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: V325 = 0xc7f
0x3b4: JUMP 0xc7f
---
Entry stack: [V13, V312]
Stack pops: 1
Stack additions: [0x10b, V324]
Exit stack: [V13, 0x10b, V324]

================================

Block 0x3b5
[0x3b5:0x3bc]
---
Predecessors: [0xf8]
Successors: [0x3bd, 0x3c1]
---
0x3b5 JUMPDEST
0x3b6 CALLVALUE
0x3b7 DUP1
0x3b8 ISZERO
0x3b9 PUSH2 0x3c1
0x3bc JUMPI
---
0x3b5: JUMPDEST 
0x3b6: V326 = CALLVALUE
0x3b8: V327 = ISZERO V326
0x3b9: V328 = 0x3c1
0x3bc: JUMPI 0x3c1 V327
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V326]
Exit stack: [V13, V326]

================================

Block 0x3bd
[0x3bd:0x3c0]
---
Predecessors: [0x3b5]
Successors: []
---
0x3bd PUSH1 0x0
0x3bf DUP1
0x3c0 REVERT
---
0x3bd: V329 = 0x0
0x3c0: REVERT 0x0 0x0
---
Entry stack: [V13, V326]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V326]

================================

Block 0x3c1
[0x3c1:0x3d5]
---
Predecessors: [0x3b5]
Successors: [0xcd5]
---
0x3c1 JUMPDEST
0x3c2 POP
0x3c3 PUSH2 0x1bb
0x3c6 PUSH1 0x1
0x3c8 PUSH1 0xa0
0x3ca PUSH1 0x2
0x3cc EXP
0x3cd SUB
0x3ce PUSH1 0x4
0x3d0 CALLDATALOAD
0x3d1 AND
0x3d2 PUSH2 0xcd5
0x3d5 JUMP
---
0x3c1: JUMPDEST 
0x3c3: V330 = 0x1bb
0x3c6: V331 = 0x1
0x3c8: V332 = 0xa0
0x3ca: V333 = 0x2
0x3cc: V334 = EXP 0x2 0xa0
0x3cd: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ce: V336 = 0x4
0x3d0: V337 = CALLDATALOAD 0x4
0x3d1: V338 = AND V337 0xffffffffffffffffffffffffffffffffffffffff
0x3d2: V339 = 0xcd5
0x3d5: JUMP 0xcd5
---
Entry stack: [V13, V326]
Stack pops: 1
Stack additions: [0x1bb, V338]
Exit stack: [V13, 0x1bb, V338]

================================

Block 0x3d6
[0x3d6:0x3e6]
---
Predecessors: [0x103]
Successors: [0x3e7, 0x3eb]
---
0x3d6 JUMPDEST
0x3d7 PUSH1 0x9
0x3d9 SLOAD
0x3da PUSH1 0x0
0x3dc SWAP1
0x3dd DUP2
0x3de SWAP1
0x3df PUSH1 0xff
0x3e1 AND
0x3e2 ISZERO
0x3e3 PUSH2 0x3eb
0x3e6 JUMPI
---
0x3d6: JUMPDEST 
0x3d7: V340 = 0x9
0x3d9: V341 = S[0x9]
0x3da: V342 = 0x0
0x3df: V343 = 0xff
0x3e1: V344 = AND 0xff V341
0x3e2: V345 = ISZERO V344
0x3e3: V346 = 0x3eb
0x3e6: JUMPI 0x3eb V345
---
Entry stack: [V13, 0x10b]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x10b, 0x0, 0x0]

================================

Block 0x3e7
[0x3e7:0x3ea]
---
Predecessors: [0x3d6]
Successors: []
---
0x3e7 PUSH1 0x0
0x3e9 DUP1
0x3ea REVERT
---
0x3e7: V347 = 0x0
0x3ea: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10b, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, 0x0, 0x0]

================================

Block 0x3eb
[0x3eb:0x40c]
---
Predecessors: [0x3d6]
Successors: [0x40d, 0x411]
---
0x3eb JUMPDEST
0x3ec PUSH1 0x1
0x3ee PUSH1 0xa0
0x3f0 PUSH1 0x2
0x3f2 EXP
0x3f3 SUB
0x3f4 CALLER
0x3f5 AND
0x3f6 PUSH1 0x0
0x3f8 SWAP1
0x3f9 DUP2
0x3fa MSTORE
0x3fb PUSH1 0x4
0x3fd PUSH1 0x20
0x3ff MSTORE
0x400 PUSH1 0x40
0x402 SWAP1
0x403 SHA3
0x404 SLOAD
0x405 PUSH1 0xff
0x407 AND
0x408 ISZERO
0x409 PUSH2 0x411
0x40c JUMPI
---
0x3eb: JUMPDEST 
0x3ec: V348 = 0x1
0x3ee: V349 = 0xa0
0x3f0: V350 = 0x2
0x3f2: V351 = EXP 0x2 0xa0
0x3f3: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f4: V353 = CALLER
0x3f5: V354 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V355 = 0x0
0x3fa: M[0x0] = V354
0x3fb: V356 = 0x4
0x3fd: V357 = 0x20
0x3ff: M[0x20] = 0x4
0x400: V358 = 0x40
0x403: V359 = SHA3 0x0 0x40
0x404: V360 = S[V359]
0x405: V361 = 0xff
0x407: V362 = AND 0xff V360
0x408: V363 = ISZERO V362
0x409: V364 = 0x411
0x40c: JUMPI 0x411 V363
---
Entry stack: [V13, 0x10b, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, 0x0, 0x0]

================================

Block 0x40d
[0x40d:0x410]
---
Predecessors: [0x3eb]
Successors: []
---
0x40d PUSH1 0x0
0x40f DUP1
0x410 REVERT
---
0x40d: V365 = 0x0
0x410: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10b, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, 0x0, 0x0]

================================

Block 0x411
[0x411:0x41d]
---
Predecessors: [0x3eb]
Successors: [0x41e, 0x424]
---
0x411 JUMPDEST
0x412 PUSH1 0x7
0x414 SLOAD
0x415 PUSH1 0x8
0x417 SLOAD
0x418 GT
0x419 ISZERO
0x41a PUSH2 0x424
0x41d JUMPI
---
0x411: JUMPDEST 
0x412: V366 = 0x7
0x414: V367 = S[0x7]
0x415: V368 = 0x8
0x417: V369 = S[0x8]
0x418: V370 = GT V369 V367
0x419: V371 = ISZERO V370
0x41a: V372 = 0x424
0x41d: JUMPI 0x424 V371
---
Entry stack: [V13, 0x10b, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, 0x0, 0x0]

================================

Block 0x41e
[0x41e:0x423]
---
Predecessors: [0x411]
Successors: [0x424]
---
0x41e PUSH1 0x7
0x420 SLOAD
0x421 PUSH1 0x8
0x423 SSTORE
---
0x41e: V373 = 0x7
0x420: V374 = S[0x7]
0x421: V375 = 0x8
0x423: S[0x8] = V374
---
Entry stack: [V13, 0x10b, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, 0x0, 0x0]

================================

Block 0x424
[0x424:0x430]
---
Predecessors: [0x411, 0x41e]
Successors: [0x431, 0x435]
---
0x424 JUMPDEST
0x425 PUSH1 0x7
0x427 SLOAD
0x428 PUSH1 0x8
0x42a SLOAD
0x42b GT
0x42c ISZERO
0x42d PUSH2 0x435
0x430 JUMPI
---
0x424: JUMPDEST 
0x425: V376 = 0x7
0x427: V377 = S[0x7]
0x428: V378 = 0x8
0x42a: V379 = S[0x8]
0x42b: V380 = GT V379 V377
0x42c: V381 = ISZERO V380
0x42d: V382 = 0x435
0x430: JUMPI 0x435 V381
---
Entry stack: [V13, 0x10b, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, 0x0, 0x0]

================================

Block 0x431
[0x431:0x434]
---
Predecessors: [0x424]
Successors: []
---
0x431 PUSH1 0x0
0x433 DUP1
0x434 REVERT
---
0x431: V383 = 0x0
0x434: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10b, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, 0x0, 0x0]

================================

Block 0x435
[0x435:0x445]
---
Predecessors: [0x424]
Successors: [0xcea]
---
0x435 JUMPDEST
0x436 POP
0x437 POP
0x438 PUSH1 0x8
0x43a SLOAD
0x43b CALLER
0x43c SWAP1
0x43d PUSH2 0x446
0x440 DUP3
0x441 DUP3
0x442 PUSH2 0xcea
0x445 JUMP
---
0x435: JUMPDEST 
0x438: V384 = 0x8
0x43a: V385 = S[0x8]
0x43b: V386 = CALLER
0x43d: V387 = 0x446
0x442: V388 = 0xcea
0x445: JUMP 0xcea
---
Entry stack: [V13, 0x10b, 0x0, 0x0]
Stack pops: 2
Stack additions: [V386, V385, 0x446, V386, V385]
Exit stack: [V13, 0x10b, V386, V385, 0x446, V386, V385]

================================

Block 0x446
[0x446:0x450]
---
Predecessors: [0x599]
Successors: [0x451, 0x474]
---
0x446 JUMPDEST
0x447 POP
0x448 PUSH1 0x0
0x44a DUP2
0x44b GT
0x44c ISZERO
0x44d PUSH2 0x474
0x450 JUMPI
---
0x446: JUMPDEST 
0x448: V389 = 0x0
0x44b: V390 = GT S1 0x0
0x44c: V391 = ISZERO V390
0x44d: V392 = 0x474
0x450: JUMPI 0x474 V391
---
Entry stack: [V13, S3, S2, S1, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S1]
Exit stack: [V13, S3, S2, S1]

================================

Block 0x451
[0x451:0x473]
---
Predecessors: [0x446]
Successors: [0x474]
---
0x451 PUSH1 0x1
0x453 PUSH1 0xa0
0x455 PUSH1 0x2
0x457 EXP
0x458 SUB
0x459 DUP3
0x45a AND
0x45b PUSH1 0x0
0x45d SWAP1
0x45e DUP2
0x45f MSTORE
0x460 PUSH1 0x4
0x462 PUSH1 0x20
0x464 MSTORE
0x465 PUSH1 0x40
0x467 SWAP1
0x468 SHA3
0x469 DUP1
0x46a SLOAD
0x46b PUSH1 0xff
0x46d NOT
0x46e AND
0x46f PUSH1 0x1
0x471 OR
0x472 SWAP1
0x473 SSTORE
---
0x451: V393 = 0x1
0x453: V394 = 0xa0
0x455: V395 = 0x2
0x457: V396 = EXP 0x2 0xa0
0x458: V397 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45a: V398 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V399 = 0x0
0x45f: M[0x0] = V398
0x460: V400 = 0x4
0x462: V401 = 0x20
0x464: M[0x20] = 0x4
0x465: V402 = 0x40
0x468: V403 = SHA3 0x0 0x40
0x46a: V404 = S[V403]
0x46b: V405 = 0xff
0x46d: V406 = NOT 0xff
0x46e: V407 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V404
0x46f: V408 = 0x1
0x471: V409 = OR 0x1 V407
0x473: S[V403] = V409
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S2, S1, S0]

================================

Block 0x474
[0x474:0x47f]
---
Predecessors: [0x446, 0x451]
Successors: [0x480, 0x48d]
---
0x474 JUMPDEST
0x475 PUSH1 0x5
0x477 SLOAD
0x478 PUSH1 0x6
0x47a SLOAD
0x47b LT
0x47c PUSH2 0x48d
0x47f JUMPI
---
0x474: JUMPDEST 
0x475: V410 = 0x5
0x477: V411 = S[0x5]
0x478: V412 = 0x6
0x47a: V413 = S[0x6]
0x47b: V414 = LT V413 V411
0x47c: V415 = 0x48d
0x47f: JUMPI 0x48d V414
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S2, S1, S0]

================================

Block 0x480
[0x480:0x48c]
---
Predecessors: [0x474]
Successors: [0x48d]
---
0x480 PUSH1 0x9
0x482 DUP1
0x483 SLOAD
0x484 PUSH1 0xff
0x486 NOT
0x487 AND
0x488 PUSH1 0x1
0x48a OR
0x48b SWAP1
0x48c SSTORE
---
0x480: V416 = 0x9
0x483: V417 = S[0x9]
0x484: V418 = 0xff
0x486: V419 = NOT 0xff
0x487: V420 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V417
0x488: V421 = 0x1
0x48a: V422 = OR 0x1 V420
0x48c: S[0x9] = V422
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S2, S1, S0]

================================

Block 0x48d
[0x48d:0x4ab]
---
Predecessors: [0x474, 0x480]
Successors: [0xded]
---
0x48d JUMPDEST
0x48e PUSH2 0x4b8
0x491 PUSH3 0x1869f
0x495 PUSH2 0x4ac
0x498 PUSH3 0x186a0
0x49c PUSH1 0x8
0x49e SLOAD
0x49f PUSH2 0xded
0x4a2 SWAP1
0x4a3 SWAP2
0x4a4 SWAP1
0x4a5 PUSH4 0xffffffff
0x4aa AND
0x4ab JUMP
---
0x48d: JUMPDEST 
0x48e: V423 = 0x4b8
0x491: V424 = 0x1869f
0x495: V425 = 0x4ac
0x498: V426 = 0x186a0
0x49c: V427 = 0x8
0x49e: V428 = S[0x8]
0x49f: V429 = 0xded
0x4a5: V430 = 0xffffffff
0x4aa: V431 = AND 0xffffffff 0xded
0x4ab: JUMP 0xded
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: [0x4b8, 0x1869f, 0x4ac, V428, 0x186a0]
Exit stack: [V13, S2, S1, S0, 0x4b8, 0x1869f, 0x4ac, V428, 0x186a0]

================================

Block 0x4ac
[0x4ac:0x4b7]
---
Predecessors: [0xdfb]
Successors: [0xe04]
---
0x4ac JUMPDEST
0x4ad SWAP1
0x4ae PUSH4 0xffffffff
0x4b3 PUSH2 0xe04
0x4b6 AND
0x4b7 JUMP
---
0x4ac: JUMPDEST 
0x4ae: V432 = 0xffffffff
0x4b3: V433 = 0xe04
0x4b6: V434 = AND 0xe04 0xffffffff
0x4b7: JUMP 0xe04
---
Entry stack: [V13, 0x10b, V386, S3, 0x4b8, 0x1869f, V1205]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V13, 0x10b, V386, S3, 0x4b8, V1205, 0x1869f]

================================

Block 0x4b8
[0x4b8:0x4be]
---
Predecessors: [0xe28]
Successors: [0x10b]
---
0x4b8 JUMPDEST
0x4b9 PUSH1 0x8
0x4bb SSTORE
0x4bc POP
0x4bd POP
0x4be JUMP
---
0x4b8: JUMPDEST 
0x4b9: V435 = 0x8
0x4bb: S[0x8] = S0
0x4be: JUMP S3
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4]

================================

Block 0x4bf
[0x4bf:0x4f5]
---
Predecessors: [0x119]
Successors: [0x122]
---
0x4bf JUMPDEST
0x4c0 PUSH1 0x40
0x4c2 DUP1
0x4c3 MLOAD
0x4c4 DUP1
0x4c5 DUP3
0x4c6 ADD
0x4c7 SWAP1
0x4c8 SWAP2
0x4c9 MSTORE
0x4ca PUSH1 0x10
0x4cc DUP2
0x4cd MSTORE
0x4ce PUSH32 0x436c61696d2045766572797468696e6700000000000000000000000000000000
0x4ef PUSH1 0x20
0x4f1 DUP3
0x4f2 ADD
0x4f3 MSTORE
0x4f4 DUP2
0x4f5 JUMP
---
0x4bf: JUMPDEST 
0x4c0: V436 = 0x40
0x4c3: V437 = M[0x40]
0x4c6: V438 = ADD 0x40 V437
0x4c9: M[0x40] = V438
0x4ca: V439 = 0x10
0x4cd: M[V437] = 0x10
0x4ce: V440 = 0x436c61696d2045766572797468696e6700000000000000000000000000000000
0x4ef: V441 = 0x20
0x4f2: V442 = ADD V437 0x20
0x4f3: M[V442] = 0x436c61696d2045766572797468696e6700000000000000000000000000000000
0x4f5: JUMP 0x122
---
Entry stack: [V13, 0x122]
Stack pops: 1
Stack additions: [S0, V437]
Exit stack: [V13, 0x122, V437]

================================

Block 0x4f6
[0x4f6:0x501]
---
Predecessors: [0x1a3]
Successors: [0x502, 0x52b]
---
0x4f6 JUMPDEST
0x4f7 PUSH1 0x0
0x4f9 DUP2
0x4fa ISZERO
0x4fb DUP1
0x4fc ISZERO
0x4fd SWAP1
0x4fe PUSH2 0x52b
0x501 JUMPI
---
0x4f6: JUMPDEST 
0x4f7: V443 = 0x0
0x4fa: V444 = ISZERO V137
0x4fc: V445 = ISZERO V444
0x4fe: V446 = 0x52b
0x501: JUMPI 0x52b V444
---
Entry stack: [V13, 0x1bb, V135, V137]
Stack pops: 1
Stack additions: [S0, 0x0, V445]
Exit stack: [V13, 0x1bb, V135, V137, 0x0, V445]

================================

Block 0x502
[0x502:0x52a]
---
Predecessors: [0x4f6]
Successors: [0x52b]
---
0x502 POP
0x503 PUSH1 0x1
0x505 PUSH1 0xa0
0x507 PUSH1 0x2
0x509 EXP
0x50a SUB
0x50b CALLER
0x50c DUP2
0x50d AND
0x50e PUSH1 0x0
0x510 SWAP1
0x511 DUP2
0x512 MSTORE
0x513 PUSH1 0x3
0x515 PUSH1 0x20
0x517 SWAP1
0x518 DUP2
0x519 MSTORE
0x51a PUSH1 0x40
0x51c DUP1
0x51d DUP4
0x51e SHA3
0x51f SWAP4
0x520 DUP8
0x521 AND
0x522 DUP4
0x523 MSTORE
0x524 SWAP3
0x525 SWAP1
0x526 MSTORE
0x527 SHA3
0x528 SLOAD
0x529 ISZERO
0x52a ISZERO
---
0x503: V447 = 0x1
0x505: V448 = 0xa0
0x507: V449 = 0x2
0x509: V450 = EXP 0x2 0xa0
0x50a: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50b: V452 = CALLER
0x50d: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x50e: V454 = 0x0
0x512: M[0x0] = V453
0x513: V455 = 0x3
0x515: V456 = 0x20
0x519: M[0x20] = 0x3
0x51a: V457 = 0x40
0x51e: V458 = SHA3 0x0 0x40
0x521: V459 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x523: M[0x0] = V459
0x526: M[0x20] = V458
0x527: V460 = SHA3 0x0 0x40
0x528: V461 = S[V460]
0x529: V462 = ISZERO V461
0x52a: V463 = ISZERO V462
---
Entry stack: [V13, 0x1bb, V135, V137, 0x0, V445]
Stack pops: 4
Stack additions: [S3, S2, S1, V463]
Exit stack: [V13, 0x1bb, V135, V137, 0x0, V463]

================================

Block 0x52b
[0x52b:0x530]
---
Predecessors: [0x4f6, 0x502]
Successors: [0x531, 0x538]
---
0x52b JUMPDEST
0x52c ISZERO
0x52d PUSH2 0x538
0x530 JUMPI
---
0x52b: JUMPDEST 
0x52c: V464 = ISZERO S0
0x52d: V465 = 0x538
0x530: JUMPI 0x538 V464
---
Entry stack: [V13, 0x1bb, V135, V137, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1bb, V135, V137, 0x0]

================================

Block 0x531
[0x531:0x537]
---
Predecessors: [0x52b]
Successors: [0x599]
---
0x531 POP
0x532 PUSH1 0x0
0x534 PUSH2 0x599
0x537 JUMP
---
0x532: V466 = 0x0
0x534: V467 = 0x599
0x537: JUMP 0x599
---
Entry stack: [V13, 0x1bb, V135, V137, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0x1bb, V135, V137, 0x0]

================================

Block 0x538
[0x538:0x598]
---
Predecessors: [0x52b]
Successors: [0x599]
---
0x538 JUMPDEST
0x539 PUSH1 0x1
0x53b PUSH1 0xa0
0x53d PUSH1 0x2
0x53f EXP
0x540 SUB
0x541 CALLER
0x542 DUP2
0x543 AND
0x544 PUSH1 0x0
0x546 DUP2
0x547 DUP2
0x548 MSTORE
0x549 PUSH1 0x3
0x54b PUSH1 0x20
0x54d SWAP1
0x54e DUP2
0x54f MSTORE
0x550 PUSH1 0x40
0x552 DUP1
0x553 DUP4
0x554 SHA3
0x555 SWAP5
0x556 DUP9
0x557 AND
0x558 DUP1
0x559 DUP5
0x55a MSTORE
0x55b SWAP5
0x55c DUP3
0x55d MSTORE
0x55e SWAP2
0x55f DUP3
0x560 SWAP1
0x561 SHA3
0x562 DUP7
0x563 SWAP1
0x564 SSTORE
0x565 DUP2
0x566 MLOAD
0x567 DUP7
0x568 DUP2
0x569 MSTORE
0x56a SWAP2
0x56b MLOAD
0x56c PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x58d SWAP3
0x58e DUP2
0x58f SWAP1
0x590 SUB
0x591 SWAP1
0x592 SWAP2
0x593 ADD
0x594 SWAP1
0x595 LOG3
0x596 POP
0x597 PUSH1 0x1
---
0x538: JUMPDEST 
0x539: V468 = 0x1
0x53b: V469 = 0xa0
0x53d: V470 = 0x2
0x53f: V471 = EXP 0x2 0xa0
0x540: V472 = SUB 0x10000000000000000000000000000000000000000 0x1
0x541: V473 = CALLER
0x543: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V473
0x544: V475 = 0x0
0x548: M[0x0] = V474
0x549: V476 = 0x3
0x54b: V477 = 0x20
0x54f: M[0x20] = 0x3
0x550: V478 = 0x40
0x554: V479 = SHA3 0x0 0x40
0x557: V480 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x55a: M[0x0] = V480
0x55d: M[0x20] = V479
0x561: V481 = SHA3 0x0 0x40
0x564: S[V481] = V137
0x566: V482 = M[0x40]
0x569: M[V482] = V137
0x56b: V483 = M[0x40]
0x56c: V484 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x590: V485 = SUB V482 V483
0x593: V486 = ADD 0x20 V485
0x595: LOG V483 V486 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V474 V480
0x597: V487 = 0x1
---
Entry stack: [V13, 0x1bb, V135, V137, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V13, 0x1bb, V135, V137, 0x1]

================================

Block 0x599
[0x599:0x59e]
---
Predecessors: [0x531, 0x538, 0xd52]
Successors: [0x1bb, 0x446]
---
0x599 JUMPDEST
0x59a SWAP3
0x59b SWAP2
0x59c POP
0x59d POP
0x59e JUMP
---
0x599: JUMPDEST 
0x59e: JUMP S3
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V13, S6, S5, S4, {0x0, 0x1}]

================================

Block 0x59f
[0x59f:0x5a4]
---
Predecessors: [0x1db]
Successors: [0x1e4]
---
0x59f JUMPDEST
0x5a0 PUSH1 0x5
0x5a2 SLOAD
0x5a3 DUP2
0x5a4 JUMP
---
0x59f: JUMPDEST 
0x5a0: V488 = 0x5
0x5a2: V489 = S[0x5]
0x5a4: JUMP 0x1e4
---
Entry stack: [V13, 0x1e4]
Stack pops: 1
Stack additions: [S0, V489]
Exit stack: [V13, 0x1e4, V489]

================================

Block 0x5a5
[0x5a5:0x5b2]
---
Predecessors: [0x202]
Successors: [0x5b3, 0x5b4]
---
0x5a5 JUMPDEST
0x5a6 PUSH1 0x0
0x5a8 PUSH1 0x60
0x5aa PUSH1 0x64
0x5ac CALLDATASIZE
0x5ad LT
0x5ae ISZERO
0x5af PUSH2 0x5b4
0x5b2 JUMPI
---
0x5a5: JUMPDEST 
0x5a6: V490 = 0x0
0x5a8: V491 = 0x60
0x5aa: V492 = 0x64
0x5ac: V493 = CALLDATASIZE
0x5ad: V494 = LT V493 0x64
0x5ae: V495 = ISZERO V494
0x5af: V496 = 0x5b4
0x5b2: JUMPI 0x5b4 V495
---
Entry stack: [V13, 0x1bb, V171, V174, V176]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]

================================

Block 0x5b3
[0x5b3:0x5b3]
---
Predecessors: [0x5a5]
Successors: []
---
0x5b3 INVALID
---
0x5b3: INVALID 
---
Entry stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]

================================

Block 0x5b4
[0x5b4:0x5c4]
---
Predecessors: [0x5a5]
Successors: [0x5c5, 0x5c9]
---
0x5b4 JUMPDEST
0x5b5 PUSH1 0x1
0x5b7 PUSH1 0xa0
0x5b9 PUSH1 0x2
0x5bb EXP
0x5bc SUB
0x5bd DUP5
0x5be AND
0x5bf ISZERO
0x5c0 ISZERO
0x5c1 PUSH2 0x5c9
0x5c4 JUMPI
---
0x5b4: JUMPDEST 
0x5b5: V497 = 0x1
0x5b7: V498 = 0xa0
0x5b9: V499 = 0x2
0x5bb: V500 = EXP 0x2 0xa0
0x5bc: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5be: V502 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x5bf: V503 = ISZERO V502
0x5c0: V504 = ISZERO V503
0x5c1: V505 = 0x5c9
0x5c4: JUMPI 0x5c9 V504
---
Entry stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]

================================

Block 0x5c5
[0x5c5:0x5c8]
---
Predecessors: [0x5b4]
Successors: []
---
0x5c5 PUSH1 0x0
0x5c7 DUP1
0x5c8 REVERT
---
0x5c5: V506 = 0x0
0x5c8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]

================================

Block 0x5c9
[0x5c9:0x5e9]
---
Predecessors: [0x5b4]
Successors: [0x5ea, 0x5ee]
---
0x5c9 JUMPDEST
0x5ca PUSH1 0x1
0x5cc PUSH1 0xa0
0x5ce PUSH1 0x2
0x5d0 EXP
0x5d1 SUB
0x5d2 DUP6
0x5d3 AND
0x5d4 PUSH1 0x0
0x5d6 SWAP1
0x5d7 DUP2
0x5d8 MSTORE
0x5d9 PUSH1 0x2
0x5db PUSH1 0x20
0x5dd MSTORE
0x5de PUSH1 0x40
0x5e0 SWAP1
0x5e1 SHA3
0x5e2 SLOAD
0x5e3 DUP4
0x5e4 GT
0x5e5 ISZERO
0x5e6 PUSH2 0x5ee
0x5e9 JUMPI
---
0x5c9: JUMPDEST 
0x5ca: V507 = 0x1
0x5cc: V508 = 0xa0
0x5ce: V509 = 0x2
0x5d0: V510 = EXP 0x2 0xa0
0x5d1: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d3: V512 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x5d4: V513 = 0x0
0x5d8: M[0x0] = V512
0x5d9: V514 = 0x2
0x5db: V515 = 0x20
0x5dd: M[0x20] = 0x2
0x5de: V516 = 0x40
0x5e1: V517 = SHA3 0x0 0x40
0x5e2: V518 = S[V517]
0x5e4: V519 = GT V176 V518
0x5e5: V520 = ISZERO V519
0x5e6: V521 = 0x5ee
0x5e9: JUMPI 0x5ee V520
---
Entry stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]

================================

Block 0x5ea
[0x5ea:0x5ed]
---
Predecessors: [0x5c9]
Successors: []
---
0x5ea PUSH1 0x0
0x5ec DUP1
0x5ed REVERT
---
0x5ea: V522 = 0x0
0x5ed: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]

================================

Block 0x5ee
[0x5ee:0x61c]
---
Predecessors: [0x5c9]
Successors: [0x61d, 0x621]
---
0x5ee JUMPDEST
0x5ef PUSH1 0x1
0x5f1 PUSH1 0xa0
0x5f3 PUSH1 0x2
0x5f5 EXP
0x5f6 SUB
0x5f7 DUP1
0x5f8 DUP7
0x5f9 AND
0x5fa PUSH1 0x0
0x5fc SWAP1
0x5fd DUP2
0x5fe MSTORE
0x5ff PUSH1 0x3
0x601 PUSH1 0x20
0x603 SWAP1
0x604 DUP2
0x605 MSTORE
0x606 PUSH1 0x40
0x608 DUP1
0x609 DUP4
0x60a SHA3
0x60b CALLER
0x60c SWAP1
0x60d SWAP5
0x60e AND
0x60f DUP4
0x610 MSTORE
0x611 SWAP3
0x612 SWAP1
0x613 MSTORE
0x614 SHA3
0x615 SLOAD
0x616 DUP4
0x617 GT
0x618 ISZERO
0x619 PUSH2 0x621
0x61c JUMPI
---
0x5ee: JUMPDEST 
0x5ef: V523 = 0x1
0x5f1: V524 = 0xa0
0x5f3: V525 = 0x2
0x5f5: V526 = EXP 0x2 0xa0
0x5f6: V527 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f9: V528 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x5fa: V529 = 0x0
0x5fe: M[0x0] = V528
0x5ff: V530 = 0x3
0x601: V531 = 0x20
0x605: M[0x20] = 0x3
0x606: V532 = 0x40
0x60a: V533 = SHA3 0x0 0x40
0x60b: V534 = CALLER
0x60e: V535 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x610: M[0x0] = V535
0x613: M[0x20] = V533
0x614: V536 = SHA3 0x0 0x40
0x615: V537 = S[V536]
0x617: V538 = GT V176 V537
0x618: V539 = ISZERO V538
0x619: V540 = 0x621
0x61c: JUMPI 0x621 V539
---
Entry stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]

================================

Block 0x61d
[0x61d:0x620]
---
Predecessors: [0x5ee]
Successors: []
---
0x61d PUSH1 0x0
0x61f DUP1
0x620 REVERT
---
0x61d: V541 = 0x0
0x620: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]

================================

Block 0x621
[0x621:0x649]
---
Predecessors: [0x5ee]
Successors: [0xe2f]
---
0x621 JUMPDEST
0x622 PUSH1 0x1
0x624 PUSH1 0xa0
0x626 PUSH1 0x2
0x628 EXP
0x629 SUB
0x62a DUP6
0x62b AND
0x62c PUSH1 0x0
0x62e SWAP1
0x62f DUP2
0x630 MSTORE
0x631 PUSH1 0x2
0x633 PUSH1 0x20
0x635 MSTORE
0x636 PUSH1 0x40
0x638 SWAP1
0x639 SHA3
0x63a SLOAD
0x63b PUSH2 0x64a
0x63e SWAP1
0x63f DUP5
0x640 PUSH4 0xffffffff
0x645 PUSH2 0xe2f
0x648 AND
0x649 JUMP
---
0x621: JUMPDEST 
0x622: V542 = 0x1
0x624: V543 = 0xa0
0x626: V544 = 0x2
0x628: V545 = EXP 0x2 0xa0
0x629: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62b: V547 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x62c: V548 = 0x0
0x630: M[0x0] = V547
0x631: V549 = 0x2
0x633: V550 = 0x20
0x635: M[0x20] = 0x2
0x636: V551 = 0x40
0x639: V552 = SHA3 0x0 0x40
0x63a: V553 = S[V552]
0x63b: V554 = 0x64a
0x640: V555 = 0xffffffff
0x645: V556 = 0xe2f
0x648: V557 = AND 0xe2f 0xffffffff
0x649: JUMP 0xe2f
---
Entry stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x64a, V553, S2]
Exit stack: [V13, 0x1bb, V171, V174, V176, 0x0, 0x60, 0x64a, V553, V176]

================================

Block 0x64a
[0x64a:0x68c]
---
Predecessors: [0xe3b]
Successors: [0xe2f]
---
0x64a JUMPDEST
0x64b PUSH1 0x1
0x64d PUSH1 0xa0
0x64f PUSH1 0x2
0x651 EXP
0x652 SUB
0x653 DUP1
0x654 DUP8
0x655 AND
0x656 PUSH1 0x0
0x658 SWAP1
0x659 DUP2
0x65a MSTORE
0x65b PUSH1 0x2
0x65d PUSH1 0x20
0x65f SWAP1
0x660 DUP2
0x661 MSTORE
0x662 PUSH1 0x40
0x664 DUP1
0x665 DUP4
0x666 SHA3
0x667 SWAP5
0x668 SWAP1
0x669 SWAP5
0x66a SSTORE
0x66b PUSH1 0x3
0x66d DUP2
0x66e MSTORE
0x66f DUP4
0x670 DUP3
0x671 SHA3
0x672 CALLER
0x673 SWAP1
0x674 SWAP4
0x675 AND
0x676 DUP3
0x677 MSTORE
0x678 SWAP2
0x679 SWAP1
0x67a SWAP2
0x67b MSTORE
0x67c SHA3
0x67d SLOAD
0x67e PUSH2 0x68d
0x681 SWAP1
0x682 DUP5
0x683 PUSH4 0xffffffff
0x688 PUSH2 0xe2f
0x68b AND
0x68c JUMP
---
0x64a: JUMPDEST 
0x64b: V558 = 0x1
0x64d: V559 = 0xa0
0x64f: V560 = 0x2
0x651: V561 = EXP 0x2 0xa0
0x652: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x655: V563 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x656: V564 = 0x0
0x65a: M[0x0] = V563
0x65b: V565 = 0x2
0x65d: V566 = 0x20
0x661: M[0x20] = 0x2
0x662: V567 = 0x40
0x666: V568 = SHA3 0x0 0x40
0x66a: S[V568] = V1222
0x66b: V569 = 0x3
0x66e: M[0x20] = 0x3
0x671: V570 = SHA3 0x0 0x40
0x672: V571 = CALLER
0x675: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x677: M[0x0] = V572
0x67b: M[0x20] = V570
0x67c: V573 = SHA3 0x0 0x40
0x67d: V574 = S[V573]
0x67e: V575 = 0x68d
0x683: V576 = 0xffffffff
0x688: V577 = 0xe2f
0x68b: V578 = AND 0xe2f 0xffffffff
0x68c: JUMP 0xe2f
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1222]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x68d, V574, S3]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1, 0x68d, V574, S3]

================================

Block 0x68d
[0x68d:0x6d2]
---
Predecessors: [0xe3b]
Successors: [0xe41]
---
0x68d JUMPDEST
0x68e PUSH1 0x1
0x690 PUSH1 0xa0
0x692 PUSH1 0x2
0x694 EXP
0x695 SUB
0x696 DUP1
0x697 DUP8
0x698 AND
0x699 PUSH1 0x0
0x69b SWAP1
0x69c DUP2
0x69d MSTORE
0x69e PUSH1 0x3
0x6a0 PUSH1 0x20
0x6a2 SWAP1
0x6a3 DUP2
0x6a4 MSTORE
0x6a5 PUSH1 0x40
0x6a7 DUP1
0x6a8 DUP4
0x6a9 SHA3
0x6aa CALLER
0x6ab DUP6
0x6ac AND
0x6ad DUP5
0x6ae MSTORE
0x6af DUP3
0x6b0 MSTORE
0x6b1 DUP1
0x6b2 DUP4
0x6b3 SHA3
0x6b4 SWAP5
0x6b5 SWAP1
0x6b6 SWAP5
0x6b7 SSTORE
0x6b8 SWAP2
0x6b9 DUP8
0x6ba AND
0x6bb DUP2
0x6bc MSTORE
0x6bd PUSH1 0x2
0x6bf SWAP1
0x6c0 SWAP2
0x6c1 MSTORE
0x6c2 SHA3
0x6c3 SLOAD
0x6c4 PUSH2 0x6d3
0x6c7 SWAP1
0x6c8 DUP5
0x6c9 PUSH4 0xffffffff
0x6ce PUSH2 0xe41
0x6d1 AND
0x6d2 JUMP
---
0x68d: JUMPDEST 
0x68e: V579 = 0x1
0x690: V580 = 0xa0
0x692: V581 = 0x2
0x694: V582 = EXP 0x2 0xa0
0x695: V583 = SUB 0x10000000000000000000000000000000000000000 0x1
0x698: V584 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x699: V585 = 0x0
0x69d: M[0x0] = V584
0x69e: V586 = 0x3
0x6a0: V587 = 0x20
0x6a4: M[0x20] = 0x3
0x6a5: V588 = 0x40
0x6a9: V589 = SHA3 0x0 0x40
0x6aa: V590 = CALLER
0x6ac: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0x6ae: M[0x0] = V591
0x6b0: M[0x20] = V589
0x6b3: V592 = SHA3 0x0 0x40
0x6b7: S[V592] = V1222
0x6ba: V593 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x6bc: M[0x0] = V593
0x6bd: V594 = 0x2
0x6c1: M[0x20] = 0x2
0x6c2: V595 = SHA3 0x0 0x40
0x6c3: V596 = S[V595]
0x6c4: V597 = 0x6d3
0x6c9: V598 = 0xffffffff
0x6ce: V599 = 0xe41
0x6d1: V600 = AND 0xe41 0xffffffff
0x6d2: JUMP 0xe41
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1222]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x6d3, V596, S3]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1, 0x6d3, V596, S3]

================================

Block 0x6d3
[0x6d3:0x734]
---
Predecessors: [0xe28]
Successors: [0x1bb]
---
0x6d3 JUMPDEST
0x6d4 PUSH1 0x1
0x6d6 PUSH1 0xa0
0x6d8 PUSH1 0x2
0x6da EXP
0x6db SUB
0x6dc DUP1
0x6dd DUP7
0x6de AND
0x6df PUSH1 0x0
0x6e1 DUP2
0x6e2 DUP2
0x6e3 MSTORE
0x6e4 PUSH1 0x2
0x6e6 PUSH1 0x20
0x6e8 SWAP1
0x6e9 DUP2
0x6ea MSTORE
0x6eb PUSH1 0x40
0x6ed SWAP2
0x6ee DUP3
0x6ef SWAP1
0x6f0 SHA3
0x6f1 SWAP5
0x6f2 SWAP1
0x6f3 SWAP5
0x6f4 SSTORE
0x6f5 DUP1
0x6f6 MLOAD
0x6f7 DUP8
0x6f8 DUP2
0x6f9 MSTORE
0x6fa SWAP1
0x6fb MLOAD
0x6fc SWAP2
0x6fd SWAP4
0x6fe SWAP3
0x6ff DUP10
0x700 AND
0x701 SWAP3
0x702 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x723 SWAP3
0x724 SWAP2
0x725 DUP3
0x726 SWAP1
0x727 SUB
0x728 ADD
0x729 SWAP1
0x72a LOG3
0x72b POP
0x72c PUSH1 0x1
0x72e SWAP5
0x72f SWAP4
0x730 POP
0x731 POP
0x732 POP
0x733 POP
0x734 JUMP
---
0x6d3: JUMPDEST 
0x6d4: V601 = 0x1
0x6d6: V602 = 0xa0
0x6d8: V603 = 0x2
0x6da: V604 = EXP 0x2 0xa0
0x6db: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6de: V606 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x6df: V607 = 0x0
0x6e3: M[0x0] = V606
0x6e4: V608 = 0x2
0x6e6: V609 = 0x20
0x6ea: M[0x20] = 0x2
0x6eb: V610 = 0x40
0x6f0: V611 = SHA3 0x0 0x40
0x6f4: S[V611] = S0
0x6f6: V612 = M[0x40]
0x6f9: M[V612] = S3
0x6fb: V613 = M[0x40]
0x700: V614 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x702: V615 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x727: V616 = SUB V612 V613
0x728: V617 = ADD V616 0x20
0x72a: LOG V613 V617 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V614 V606
0x72c: V618 = 0x1
0x734: JUMP S6
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V13, S7, 0x1]

================================

Block 0x735
[0x735:0x739]
---
Predecessors: [0x22c]
Successors: [0x1e4]
---
0x735 JUMPDEST
0x736 PUSH1 0x12
0x738 DUP2
0x739 JUMP
---
0x735: JUMPDEST 
0x736: V619 = 0x12
0x739: JUMP 0x1e4
---
Entry stack: [V13, 0x1e4]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V13, 0x1e4, 0x12]

================================

Block 0x73a
[0x73a:0x753]
---
Predecessors: [0x241]
Successors: [0x754, 0x758]
---
0x73a JUMPDEST
0x73b PUSH1 0x1
0x73d SLOAD
0x73e PUSH1 0x0
0x740 SWAP1
0x741 CALLER
0x742 PUSH1 0x1
0x744 PUSH1 0xa0
0x746 PUSH1 0x2
0x748 EXP
0x749 SUB
0x74a SWAP1
0x74b DUP2
0x74c AND
0x74d SWAP2
0x74e AND
0x74f EQ
0x750 PUSH2 0x758
0x753 JUMPI
---
0x73a: JUMPDEST 
0x73b: V620 = 0x1
0x73d: V621 = S[0x1]
0x73e: V622 = 0x0
0x741: V623 = CALLER
0x742: V624 = 0x1
0x744: V625 = 0xa0
0x746: V626 = 0x2
0x748: V627 = EXP 0x2 0xa0
0x749: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74c: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0x74e: V630 = AND V621 0xffffffffffffffffffffffffffffffffffffffff
0x74f: V631 = EQ V630 V629
0x750: V632 = 0x758
0x753: JUMPI 0x758 V631
---
Entry stack: [V13, 0x10b]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x10b, 0x0]

================================

Block 0x754
[0x754:0x757]
---
Predecessors: [0x73a]
Successors: []
---
0x754 PUSH1 0x0
0x756 DUP1
0x757 REVERT
---
0x754: V633 = 0x0
0x757: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10b, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, 0x0]

================================

Block 0x758
[0x758:0x78c]
---
Predecessors: [0x73a]
Successors: [0x78d, 0x796]
---
0x758 JUMPDEST
0x759 POP
0x75a PUSH1 0x1
0x75c SLOAD
0x75d PUSH1 0x40
0x75f MLOAD
0x760 PUSH1 0x1
0x762 PUSH1 0xa0
0x764 PUSH1 0x2
0x766 EXP
0x767 SUB
0x768 ADDRESS
0x769 DUP2
0x76a AND
0x76b BALANCE
0x76c SWAP3
0x76d AND
0x76e SWAP1
0x76f DUP3
0x770 ISZERO
0x771 PUSH2 0x8fc
0x774 MUL
0x775 SWAP1
0x776 DUP4
0x777 SWAP1
0x778 PUSH1 0x0
0x77a DUP2
0x77b DUP2
0x77c DUP2
0x77d DUP6
0x77e DUP9
0x77f DUP9
0x780 CALL
0x781 SWAP4
0x782 POP
0x783 POP
0x784 POP
0x785 POP
0x786 ISZERO
0x787 DUP1
0x788 ISZERO
0x789 PUSH2 0x796
0x78c JUMPI
---
0x758: JUMPDEST 
0x75a: V634 = 0x1
0x75c: V635 = S[0x1]
0x75d: V636 = 0x40
0x75f: V637 = M[0x40]
0x760: V638 = 0x1
0x762: V639 = 0xa0
0x764: V640 = 0x2
0x766: V641 = EXP 0x2 0xa0
0x767: V642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x768: V643 = ADDRESS
0x76a: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff V643
0x76b: V645 = BALANCE V644
0x76d: V646 = AND V635 0xffffffffffffffffffffffffffffffffffffffff
0x770: V647 = ISZERO V645
0x771: V648 = 0x8fc
0x774: V649 = MUL 0x8fc V647
0x778: V650 = 0x0
0x780: V651 = CALL V649 V646 V645 V637 0x0 V637 0x0
0x786: V652 = ISZERO V651
0x788: V653 = ISZERO V652
0x789: V654 = 0x796
0x78c: JUMPI 0x796 V653
---
Entry stack: [V13, 0x10b, 0x0]
Stack pops: 1
Stack additions: [V645, V652]
Exit stack: [V13, 0x10b, V645, V652]

================================

Block 0x78d
[0x78d:0x795]
---
Predecessors: [0x758]
Successors: []
---
0x78d RETURNDATASIZE
0x78e PUSH1 0x0
0x790 DUP1
0x791 RETURNDATACOPY
0x792 RETURNDATASIZE
0x793 PUSH1 0x0
0x795 REVERT
---
0x78d: V655 = RETURNDATASIZE
0x78e: V656 = 0x0
0x791: RETURNDATACOPY 0x0 0x0 V655
0x792: V657 = RETURNDATASIZE
0x793: V658 = 0x0
0x795: REVERT 0x0 V657
---
Entry stack: [V13, 0x10b, V645, V652]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, V645, V652]

================================

Block 0x796
[0x796:0x799]
---
Predecessors: [0x758]
Successors: [0x10b]
---
0x796 JUMPDEST
0x797 POP
0x798 POP
0x799 JUMP
---
0x796: JUMPDEST 
0x799: JUMP 0x10b
---
Entry stack: [V13, 0x10b, V645, V652]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x79a
[0x79a:0x79f]
---
Predecessors: [0x256]
Successors: [0x1e4]
---
0x79a JUMPDEST
0x79b PUSH1 0x8
0x79d SLOAD
0x79e DUP2
0x79f JUMP
---
0x79a: JUMPDEST 
0x79b: V659 = 0x8
0x79d: V660 = S[0x8]
0x79f: JUMP 0x1e4
---
Entry stack: [V13, 0x1e4]
Stack pops: 1
Stack additions: [S0, V660]
Exit stack: [V13, 0x1e4, V660]

================================

Block 0x7a0
[0x7a0:0x7b9]
---
Predecessors: [0x26b]
Successors: [0x7ba, 0x7be]
---
0x7a0 JUMPDEST
0x7a1 PUSH1 0x1
0x7a3 SLOAD
0x7a4 PUSH1 0x0
0x7a6 SWAP1
0x7a7 CALLER
0x7a8 PUSH1 0x1
0x7aa PUSH1 0xa0
0x7ac PUSH1 0x2
0x7ae EXP
0x7af SUB
0x7b0 SWAP1
0x7b1 DUP2
0x7b2 AND
0x7b3 SWAP2
0x7b4 AND
0x7b5 EQ
0x7b6 PUSH2 0x7be
0x7b9 JUMPI
---
0x7a0: JUMPDEST 
0x7a1: V661 = 0x1
0x7a3: V662 = S[0x1]
0x7a4: V663 = 0x0
0x7a7: V664 = CALLER
0x7a8: V665 = 0x1
0x7aa: V666 = 0xa0
0x7ac: V667 = 0x2
0x7ae: V668 = EXP 0x2 0xa0
0x7af: V669 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b2: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0x7b4: V671 = AND V662 0xffffffffffffffffffffffffffffffffffffffff
0x7b5: V672 = EQ V671 V670
0x7b6: V673 = 0x7be
0x7b9: JUMPI 0x7be V672
---
Entry stack: [V13, 0x10b, V202]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x10b, V202, 0x0]

================================

Block 0x7ba
[0x7ba:0x7bd]
---
Predecessors: [0x7a0]
Successors: []
---
0x7ba PUSH1 0x0
0x7bc DUP1
0x7bd REVERT
---
0x7ba: V674 = 0x0
0x7bd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10b, V202, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, V202, 0x0]

================================

Block 0x7be
[0x7be:0x7de]
---
Predecessors: [0x7a0]
Successors: [0x7df, 0x7e3]
---
0x7be JUMPDEST
0x7bf PUSH1 0x1
0x7c1 PUSH1 0xa0
0x7c3 PUSH1 0x2
0x7c5 EXP
0x7c6 SUB
0x7c7 CALLER
0x7c8 AND
0x7c9 PUSH1 0x0
0x7cb SWAP1
0x7cc DUP2
0x7cd MSTORE
0x7ce PUSH1 0x2
0x7d0 PUSH1 0x20
0x7d2 MSTORE
0x7d3 PUSH1 0x40
0x7d5 SWAP1
0x7d6 SHA3
0x7d7 SLOAD
0x7d8 DUP3
0x7d9 GT
0x7da ISZERO
0x7db PUSH2 0x7e3
0x7de JUMPI
---
0x7be: JUMPDEST 
0x7bf: V675 = 0x1
0x7c1: V676 = 0xa0
0x7c3: V677 = 0x2
0x7c5: V678 = EXP 0x2 0xa0
0x7c6: V679 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c7: V680 = CALLER
0x7c8: V681 = AND V680 0xffffffffffffffffffffffffffffffffffffffff
0x7c9: V682 = 0x0
0x7cd: M[0x0] = V681
0x7ce: V683 = 0x2
0x7d0: V684 = 0x20
0x7d2: M[0x20] = 0x2
0x7d3: V685 = 0x40
0x7d6: V686 = SHA3 0x0 0x40
0x7d7: V687 = S[V686]
0x7d9: V688 = GT V202 V687
0x7da: V689 = ISZERO V688
0x7db: V690 = 0x7e3
0x7de: JUMPI 0x7e3 V689
---
Entry stack: [V13, 0x10b, V202, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x10b, V202, 0x0]

================================

Block 0x7df
[0x7df:0x7e2]
---
Predecessors: [0x7be]
Successors: []
---
0x7df PUSH1 0x0
0x7e1 DUP1
0x7e2 REVERT
---
0x7df: V691 = 0x0
0x7e2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10b, V202, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, V202, 0x0]

================================

Block 0x7e3
[0x7e3:0x807]
---
Predecessors: [0x7be]
Successors: [0xe2f]
---
0x7e3 JUMPDEST
0x7e4 POP
0x7e5 CALLER
0x7e6 PUSH1 0x1
0x7e8 PUSH1 0xa0
0x7ea PUSH1 0x2
0x7ec EXP
0x7ed SUB
0x7ee DUP2
0x7ef AND
0x7f0 PUSH1 0x0
0x7f2 SWAP1
0x7f3 DUP2
0x7f4 MSTORE
0x7f5 PUSH1 0x2
0x7f7 PUSH1 0x20
0x7f9 MSTORE
0x7fa PUSH1 0x40
0x7fc SWAP1
0x7fd SHA3
0x7fe SLOAD
0x7ff PUSH2 0x808
0x802 SWAP1
0x803 DUP4
0x804 PUSH2 0xe2f
0x807 JUMP
---
0x7e3: JUMPDEST 
0x7e5: V692 = CALLER
0x7e6: V693 = 0x1
0x7e8: V694 = 0xa0
0x7ea: V695 = 0x2
0x7ec: V696 = EXP 0x2 0xa0
0x7ed: V697 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ef: V698 = AND V692 0xffffffffffffffffffffffffffffffffffffffff
0x7f0: V699 = 0x0
0x7f4: M[0x0] = V698
0x7f5: V700 = 0x2
0x7f7: V701 = 0x20
0x7f9: M[0x20] = 0x2
0x7fa: V702 = 0x40
0x7fd: V703 = SHA3 0x0 0x40
0x7fe: V704 = S[V703]
0x7ff: V705 = 0x808
0x804: V706 = 0xe2f
0x807: JUMP 0xe2f
---
Entry stack: [V13, 0x10b, V202, 0x0]
Stack pops: 2
Stack additions: [S1, V692, 0x808, V704, S1]
Exit stack: [V13, 0x10b, V202, V692, 0x808, V704, V202]

================================

Block 0x808
[0x808:0x833]
---
Predecessors: [0xe3b]
Successors: [0xe2f]
---
0x808 JUMPDEST
0x809 PUSH1 0x1
0x80b PUSH1 0xa0
0x80d PUSH1 0x2
0x80f EXP
0x810 SUB
0x811 DUP3
0x812 AND
0x813 PUSH1 0x0
0x815 SWAP1
0x816 DUP2
0x817 MSTORE
0x818 PUSH1 0x2
0x81a PUSH1 0x20
0x81c MSTORE
0x81d PUSH1 0x40
0x81f SWAP1
0x820 SHA3
0x821 SSTORE
0x822 PUSH1 0x5
0x824 SLOAD
0x825 PUSH2 0x834
0x828 SWAP1
0x829 DUP4
0x82a PUSH4 0xffffffff
0x82f PUSH2 0xe2f
0x832 AND
0x833 JUMP
---
0x808: JUMPDEST 
0x809: V707 = 0x1
0x80b: V708 = 0xa0
0x80d: V709 = 0x2
0x80f: V710 = EXP 0x2 0xa0
0x810: V711 = SUB 0x10000000000000000000000000000000000000000 0x1
0x812: V712 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x813: V713 = 0x0
0x817: M[0x0] = V712
0x818: V714 = 0x2
0x81a: V715 = 0x20
0x81c: M[0x20] = 0x2
0x81d: V716 = 0x40
0x820: V717 = SHA3 0x0 0x40
0x821: S[V717] = V1222
0x822: V718 = 0x5
0x824: V719 = S[0x5]
0x825: V720 = 0x834
0x82a: V721 = 0xffffffff
0x82f: V722 = 0xe2f
0x832: V723 = AND 0xe2f 0xffffffff
0x833: JUMP 0xe2f
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1222]
Stack pops: 3
Stack additions: [S2, S1, 0x834, V719, S2]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1, 0x834, V719, S2]

================================

Block 0x834
[0x834:0x849]
---
Predecessors: [0xe3b]
Successors: [0xe2f]
---
0x834 JUMPDEST
0x835 PUSH1 0x5
0x837 SSTORE
0x838 PUSH1 0x6
0x83a SLOAD
0x83b PUSH2 0x84a
0x83e SWAP1
0x83f DUP4
0x840 PUSH4 0xffffffff
0x845 PUSH2 0xe2f
0x848 AND
0x849 JUMP
---
0x834: JUMPDEST 
0x835: V724 = 0x5
0x837: S[0x5] = V1222
0x838: V725 = 0x6
0x83a: V726 = S[0x6]
0x83b: V727 = 0x84a
0x840: V728 = 0xffffffff
0x845: V729 = 0xe2f
0x848: V730 = AND 0xe2f 0xffffffff
0x849: JUMP 0xe2f
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1222]
Stack pops: 3
Stack additions: [S2, S1, 0x84a, V726, S2]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1, 0x84a, V726, S2]

================================

Block 0x84a
[0x84a:0x88f]
---
Predecessors: [0xe3b]
Successors: [0x10b]
---
0x84a JUMPDEST
0x84b PUSH1 0x6
0x84d SSTORE
0x84e PUSH1 0x40
0x850 DUP1
0x851 MLOAD
0x852 DUP4
0x853 DUP2
0x854 MSTORE
0x855 SWAP1
0x856 MLOAD
0x857 PUSH1 0x1
0x859 PUSH1 0xa0
0x85b PUSH1 0x2
0x85d EXP
0x85e SUB
0x85f DUP4
0x860 AND
0x861 SWAP2
0x862 PUSH32 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x883 SWAP2
0x884 SWAP1
0x885 DUP2
0x886 SWAP1
0x887 SUB
0x888 PUSH1 0x20
0x88a ADD
0x88b SWAP1
0x88c LOG2
0x88d POP
0x88e POP
0x88f JUMP
---
0x84a: JUMPDEST 
0x84b: V731 = 0x6
0x84d: S[0x6] = V1222
0x84e: V732 = 0x40
0x851: V733 = M[0x40]
0x854: M[V733] = S2
0x856: V734 = M[0x40]
0x857: V735 = 0x1
0x859: V736 = 0xa0
0x85b: V737 = 0x2
0x85d: V738 = EXP 0x2 0xa0
0x85e: V739 = SUB 0x10000000000000000000000000000000000000000 0x1
0x860: V740 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x862: V741 = 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5
0x887: V742 = SUB V733 V734
0x888: V743 = 0x20
0x88a: V744 = ADD 0x20 V742
0x88c: LOG V734 V744 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5 V740
0x88f: JUMP S3
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1222]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4]

================================

Block 0x890
[0x890:0x8aa]
---
Predecessors: [0x283]
Successors: [0x1e4]
---
0x890 JUMPDEST
0x891 PUSH1 0x1
0x893 PUSH1 0xa0
0x895 PUSH1 0x2
0x897 EXP
0x898 SUB
0x899 AND
0x89a PUSH1 0x0
0x89c SWAP1
0x89d DUP2
0x89e MSTORE
0x89f PUSH1 0x2
0x8a1 PUSH1 0x20
0x8a3 MSTORE
0x8a4 PUSH1 0x40
0x8a6 SWAP1
0x8a7 SHA3
0x8a8 SLOAD
0x8a9 SWAP1
0x8aa JUMP
---
0x890: JUMPDEST 
0x891: V745 = 0x1
0x893: V746 = 0xa0
0x895: V747 = 0x2
0x897: V748 = EXP 0x2 0xa0
0x898: V749 = SUB 0x10000000000000000000000000000000000000000 0x1
0x899: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x89a: V751 = 0x0
0x89e: M[0x0] = V750
0x89f: V752 = 0x2
0x8a1: V753 = 0x20
0x8a3: M[0x20] = 0x2
0x8a4: V754 = 0x40
0x8a7: V755 = SHA3 0x0 0x40
0x8a8: V756 = S[V755]
0x8aa: JUMP 0x1e4
---
Entry stack: [V13, 0x1e4, V216]
Stack pops: 2
Stack additions: [V756]
Exit stack: [V13, V756]

================================

Block 0x8ab
[0x8ab:0x8e1]
---
Predecessors: [0x2a4]
Successors: [0x122]
---
0x8ab JUMPDEST
0x8ac PUSH1 0x40
0x8ae DUP1
0x8af MLOAD
0x8b0 DUP1
0x8b1 DUP3
0x8b2 ADD
0x8b3 SWAP1
0x8b4 SWAP2
0x8b5 MSTORE
0x8b6 PUSH1 0x4
0x8b8 DUP2
0x8b9 MSTORE
0x8ba PUSH32 0x4345544800000000000000000000000000000000000000000000000000000000
0x8db PUSH1 0x20
0x8dd DUP3
0x8de ADD
0x8df MSTORE
0x8e0 DUP2
0x8e1 JUMP
---
0x8ab: JUMPDEST 
0x8ac: V757 = 0x40
0x8af: V758 = M[0x40]
0x8b2: V759 = ADD 0x40 V758
0x8b5: M[0x40] = V759
0x8b6: V760 = 0x4
0x8b9: M[V758] = 0x4
0x8ba: V761 = 0x4345544800000000000000000000000000000000000000000000000000000000
0x8db: V762 = 0x20
0x8de: V763 = ADD V758 0x20
0x8df: M[V763] = 0x4345544800000000000000000000000000000000000000000000000000000000
0x8e1: JUMP 0x122
---
Entry stack: [V13, 0x122]
Stack pops: 1
Stack additions: [S0, V758]
Exit stack: [V13, 0x122, V758]

================================

Block 0x8e2
[0x8e2:0x8fb]
---
Predecessors: [0x2b9]
Successors: [0x8fc, 0x900]
---
0x8e2 JUMPDEST
0x8e3 PUSH1 0x1
0x8e5 SLOAD
0x8e6 PUSH1 0x0
0x8e8 SWAP1
0x8e9 CALLER
0x8ea PUSH1 0x1
0x8ec PUSH1 0xa0
0x8ee PUSH1 0x2
0x8f0 EXP
0x8f1 SUB
0x8f2 SWAP1
0x8f3 DUP2
0x8f4 AND
0x8f5 SWAP2
0x8f6 AND
0x8f7 EQ
0x8f8 PUSH2 0x900
0x8fb JUMPI
---
0x8e2: JUMPDEST 
0x8e3: V764 = 0x1
0x8e5: V765 = S[0x1]
0x8e6: V766 = 0x0
0x8e9: V767 = CALLER
0x8ea: V768 = 0x1
0x8ec: V769 = 0xa0
0x8ee: V770 = 0x2
0x8f0: V771 = EXP 0x2 0xa0
0x8f1: V772 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f4: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V767
0x8f6: V774 = AND V765 0xffffffffffffffffffffffffffffffffffffffff
0x8f7: V775 = EQ V774 V773
0x8f8: V776 = 0x900
0x8fb: JUMPI 0x900 V775
---
Entry stack: [V13, 0x1bb]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1bb, 0x0]

================================

Block 0x8fc
[0x8fc:0x8ff]
---
Predecessors: [0x8e2]
Successors: []
---
0x8fc PUSH1 0x0
0x8fe DUP1
0x8ff REVERT
---
0x8fc: V777 = 0x0
0x8ff: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, 0x0]

================================

Block 0x900
[0x900:0x90b]
---
Predecessors: [0x8e2]
Successors: [0x90c, 0x910]
---
0x900 JUMPDEST
0x901 PUSH1 0x9
0x903 SLOAD
0x904 PUSH1 0xff
0x906 AND
0x907 ISZERO
0x908 PUSH2 0x910
0x90b JUMPI
---
0x900: JUMPDEST 
0x901: V778 = 0x9
0x903: V779 = S[0x9]
0x904: V780 = 0xff
0x906: V781 = AND 0xff V779
0x907: V782 = ISZERO V781
0x908: V783 = 0x910
0x90b: JUMPI 0x910 V782
---
Entry stack: [V13, 0x1bb, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, 0x0]

================================

Block 0x90c
[0x90c:0x90f]
---
Predecessors: [0x900]
Successors: []
---
0x90c PUSH1 0x0
0x90e DUP1
0x90f REVERT
---
0x90c: V784 = 0x0
0x90f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, 0x0]

================================

Block 0x910
[0x910:0x94b]
---
Predecessors: [0x900]
Successors: [0x1bb]
---
0x910 JUMPDEST
0x911 PUSH1 0x9
0x913 DUP1
0x914 SLOAD
0x915 PUSH1 0xff
0x917 NOT
0x918 AND
0x919 PUSH1 0x1
0x91b OR
0x91c SWAP1
0x91d SSTORE
0x91e PUSH1 0x40
0x920 MLOAD
0x921 PUSH32 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0x942 SWAP1
0x943 PUSH1 0x0
0x945 SWAP1
0x946 LOG1
0x947 POP
0x948 PUSH1 0x1
0x94a SWAP1
0x94b JUMP
---
0x910: JUMPDEST 
0x911: V785 = 0x9
0x914: V786 = S[0x9]
0x915: V787 = 0xff
0x917: V788 = NOT 0xff
0x918: V789 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V786
0x919: V790 = 0x1
0x91b: V791 = OR 0x1 V789
0x91d: S[0x9] = V791
0x91e: V792 = 0x40
0x920: V793 = M[0x40]
0x921: V794 = 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0x943: V795 = 0x0
0x946: LOG V793 0x0 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0x948: V796 = 0x1
0x94b: JUMP 0x1bb
---
Entry stack: [V13, 0x1bb, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x94c
[0x94c:0x959]
---
Predecessors: [0x2ce]
Successors: [0x95a, 0x95b]
---
0x94c JUMPDEST
0x94d PUSH1 0x0
0x94f PUSH1 0x40
0x951 PUSH1 0x44
0x953 CALLDATASIZE
0x954 LT
0x955 ISZERO
0x956 PUSH2 0x95b
0x959 JUMPI
---
0x94c: JUMPDEST 
0x94d: V797 = 0x0
0x94f: V798 = 0x40
0x951: V799 = 0x44
0x953: V800 = CALLDATASIZE
0x954: V801 = LT V800 0x44
0x955: V802 = ISZERO V801
0x956: V803 = 0x95b
0x959: JUMPI 0x95b V802
---
Entry stack: [V13, 0x1bb, V242, V244]
Stack pops: 0
Stack additions: [0x0, 0x40]
Exit stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]

================================

Block 0x95a
[0x95a:0x95a]
---
Predecessors: [0x94c]
Successors: []
---
0x95a INVALID
---
0x95a: INVALID 
---
Entry stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]

================================

Block 0x95b
[0x95b:0x96b]
---
Predecessors: [0x94c]
Successors: [0x96c, 0x970]
---
0x95b JUMPDEST
0x95c PUSH1 0x1
0x95e PUSH1 0xa0
0x960 PUSH1 0x2
0x962 EXP
0x963 SUB
0x964 DUP5
0x965 AND
0x966 ISZERO
0x967 ISZERO
0x968 PUSH2 0x970
0x96b JUMPI
---
0x95b: JUMPDEST 
0x95c: V804 = 0x1
0x95e: V805 = 0xa0
0x960: V806 = 0x2
0x962: V807 = EXP 0x2 0xa0
0x963: V808 = SUB 0x10000000000000000000000000000000000000000 0x1
0x965: V809 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x966: V810 = ISZERO V809
0x967: V811 = ISZERO V810
0x968: V812 = 0x970
0x96b: JUMPI 0x970 V811
---
Entry stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]

================================

Block 0x96c
[0x96c:0x96f]
---
Predecessors: [0x95b]
Successors: []
---
0x96c PUSH1 0x0
0x96e DUP1
0x96f REVERT
---
0x96c: V813 = 0x0
0x96f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]

================================

Block 0x970
[0x970:0x990]
---
Predecessors: [0x95b]
Successors: [0x991, 0x995]
---
0x970 JUMPDEST
0x971 PUSH1 0x1
0x973 PUSH1 0xa0
0x975 PUSH1 0x2
0x977 EXP
0x978 SUB
0x979 CALLER
0x97a AND
0x97b PUSH1 0x0
0x97d SWAP1
0x97e DUP2
0x97f MSTORE
0x980 PUSH1 0x2
0x982 PUSH1 0x20
0x984 MSTORE
0x985 PUSH1 0x40
0x987 SWAP1
0x988 SHA3
0x989 SLOAD
0x98a DUP4
0x98b GT
0x98c ISZERO
0x98d PUSH2 0x995
0x990 JUMPI
---
0x970: JUMPDEST 
0x971: V814 = 0x1
0x973: V815 = 0xa0
0x975: V816 = 0x2
0x977: V817 = EXP 0x2 0xa0
0x978: V818 = SUB 0x10000000000000000000000000000000000000000 0x1
0x979: V819 = CALLER
0x97a: V820 = AND V819 0xffffffffffffffffffffffffffffffffffffffff
0x97b: V821 = 0x0
0x97f: M[0x0] = V820
0x980: V822 = 0x2
0x982: V823 = 0x20
0x984: M[0x20] = 0x2
0x985: V824 = 0x40
0x988: V825 = SHA3 0x0 0x40
0x989: V826 = S[V825]
0x98b: V827 = GT V244 V826
0x98c: V828 = ISZERO V827
0x98d: V829 = 0x995
0x990: JUMPI 0x995 V828
---
Entry stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]

================================

Block 0x991
[0x991:0x994]
---
Predecessors: [0x970]
Successors: []
---
0x991 PUSH1 0x0
0x993 DUP1
0x994 REVERT
---
0x991: V830 = 0x0
0x994: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]

================================

Block 0x995
[0x995:0x9bd]
---
Predecessors: [0x970]
Successors: [0xe2f]
---
0x995 JUMPDEST
0x996 PUSH1 0x1
0x998 PUSH1 0xa0
0x99a PUSH1 0x2
0x99c EXP
0x99d SUB
0x99e CALLER
0x99f AND
0x9a0 PUSH1 0x0
0x9a2 SWAP1
0x9a3 DUP2
0x9a4 MSTORE
0x9a5 PUSH1 0x2
0x9a7 PUSH1 0x20
0x9a9 MSTORE
0x9aa PUSH1 0x40
0x9ac SWAP1
0x9ad SHA3
0x9ae SLOAD
0x9af PUSH2 0x9be
0x9b2 SWAP1
0x9b3 DUP5
0x9b4 PUSH4 0xffffffff
0x9b9 PUSH2 0xe2f
0x9bc AND
0x9bd JUMP
---
0x995: JUMPDEST 
0x996: V831 = 0x1
0x998: V832 = 0xa0
0x99a: V833 = 0x2
0x99c: V834 = EXP 0x2 0xa0
0x99d: V835 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99e: V836 = CALLER
0x99f: V837 = AND V836 0xffffffffffffffffffffffffffffffffffffffff
0x9a0: V838 = 0x0
0x9a4: M[0x0] = V837
0x9a5: V839 = 0x2
0x9a7: V840 = 0x20
0x9a9: M[0x20] = 0x2
0x9aa: V841 = 0x40
0x9ad: V842 = SHA3 0x0 0x40
0x9ae: V843 = S[V842]
0x9af: V844 = 0x9be
0x9b4: V845 = 0xffffffff
0x9b9: V846 = 0xe2f
0x9bc: V847 = AND 0xe2f 0xffffffff
0x9bd: JUMP 0xe2f
---
Entry stack: [V13, 0x1bb, V242, V244, 0x0, 0x40]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x9be, V843, S2]
Exit stack: [V13, 0x1bb, V242, V244, 0x0, 0x40, 0x9be, V843, V244]

================================

Block 0x9be
[0x9be:0x9f2]
---
Predecessors: [0xe3b]
Successors: [0xe41]
---
0x9be JUMPDEST
0x9bf PUSH1 0x1
0x9c1 PUSH1 0xa0
0x9c3 PUSH1 0x2
0x9c5 EXP
0x9c6 SUB
0x9c7 CALLER
0x9c8 DUP2
0x9c9 AND
0x9ca PUSH1 0x0
0x9cc SWAP1
0x9cd DUP2
0x9ce MSTORE
0x9cf PUSH1 0x2
0x9d1 PUSH1 0x20
0x9d3 MSTORE
0x9d4 PUSH1 0x40
0x9d6 DUP1
0x9d7 DUP3
0x9d8 SHA3
0x9d9 SWAP4
0x9da SWAP1
0x9db SWAP4
0x9dc SSTORE
0x9dd SWAP1
0x9de DUP7
0x9df AND
0x9e0 DUP2
0x9e1 MSTORE
0x9e2 SHA3
0x9e3 SLOAD
0x9e4 PUSH2 0x9f3
0x9e7 SWAP1
0x9e8 DUP5
0x9e9 PUSH4 0xffffffff
0x9ee PUSH2 0xe41
0x9f1 AND
0x9f2 JUMP
---
0x9be: JUMPDEST 
0x9bf: V848 = 0x1
0x9c1: V849 = 0xa0
0x9c3: V850 = 0x2
0x9c5: V851 = EXP 0x2 0xa0
0x9c6: V852 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c7: V853 = CALLER
0x9c9: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V853
0x9ca: V855 = 0x0
0x9ce: M[0x0] = V854
0x9cf: V856 = 0x2
0x9d1: V857 = 0x20
0x9d3: M[0x20] = 0x2
0x9d4: V858 = 0x40
0x9d8: V859 = SHA3 0x0 0x40
0x9dc: S[V859] = V1222
0x9df: V860 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x9e1: M[0x0] = V860
0x9e2: V861 = SHA3 0x0 0x40
0x9e3: V862 = S[V861]
0x9e4: V863 = 0x9f3
0x9e9: V864 = 0xffffffff
0x9ee: V865 = 0xe41
0x9f1: V866 = AND 0xe41 0xffffffff
0x9f2: JUMP 0xe41
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1222]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x9f3, V862, S3]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1, 0x9f3, V862, S3]

================================

Block 0x9f3
[0x9f3:0xa54]
---
Predecessors: [0xe28]
Successors: [0x1bb]
---
0x9f3 JUMPDEST
0x9f4 PUSH1 0x1
0x9f6 PUSH1 0xa0
0x9f8 PUSH1 0x2
0x9fa EXP
0x9fb SUB
0x9fc DUP1
0x9fd DUP7
0x9fe AND
0x9ff PUSH1 0x0
0xa01 DUP2
0xa02 DUP2
0xa03 MSTORE
0xa04 PUSH1 0x2
0xa06 PUSH1 0x20
0xa08 SWAP1
0xa09 DUP2
0xa0a MSTORE
0xa0b PUSH1 0x40
0xa0d SWAP2
0xa0e DUP3
0xa0f SWAP1
0xa10 SHA3
0xa11 SWAP5
0xa12 SWAP1
0xa13 SWAP5
0xa14 SSTORE
0xa15 DUP1
0xa16 MLOAD
0xa17 DUP8
0xa18 DUP2
0xa19 MSTORE
0xa1a SWAP1
0xa1b MLOAD
0xa1c SWAP2
0xa1d SWAP4
0xa1e CALLER
0xa1f SWAP1
0xa20 SWAP4
0xa21 AND
0xa22 SWAP3
0xa23 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa44 SWAP3
0xa45 SWAP2
0xa46 DUP3
0xa47 SWAP1
0xa48 SUB
0xa49 ADD
0xa4a SWAP1
0xa4b LOG3
0xa4c POP
0xa4d PUSH1 0x1
0xa4f SWAP4
0xa50 SWAP3
0xa51 POP
0xa52 POP
0xa53 POP
0xa54 JUMP
---
0x9f3: JUMPDEST 
0x9f4: V867 = 0x1
0x9f6: V868 = 0xa0
0x9f8: V869 = 0x2
0x9fa: V870 = EXP 0x2 0xa0
0x9fb: V871 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fe: V872 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x9ff: V873 = 0x0
0xa03: M[0x0] = V872
0xa04: V874 = 0x2
0xa06: V875 = 0x20
0xa0a: M[0x20] = 0x2
0xa0b: V876 = 0x40
0xa10: V877 = SHA3 0x0 0x40
0xa14: S[V877] = S0
0xa16: V878 = M[0x40]
0xa19: M[V878] = S3
0xa1b: V879 = M[0x40]
0xa1e: V880 = CALLER
0xa21: V881 = AND 0xffffffffffffffffffffffffffffffffffffffff V880
0xa23: V882 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa48: V883 = SUB V878 V879
0xa49: V884 = ADD V883 0x20
0xa4b: LOG V879 V884 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V881 V872
0xa4d: V885 = 0x1
0xa54: JUMP S5
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V13, S7, S6, 0x1]

================================

Block 0xa55
[0xa55:0xa5d]
---
Predecessors: [0x2f2]
Successors: [0x1bb]
---
0xa55 JUMPDEST
0xa56 PUSH1 0x9
0xa58 SLOAD
0xa59 PUSH1 0xff
0xa5b AND
0xa5c DUP2
0xa5d JUMP
---
0xa55: JUMPDEST 
0xa56: V886 = 0x9
0xa58: V887 = S[0x9]
0xa59: V888 = 0xff
0xa5b: V889 = AND 0xff V887
0xa5d: JUMP 0x1bb
---
Entry stack: [V13, 0x1bb]
Stack pops: 1
Stack additions: [S0, V889]
Exit stack: [V13, 0x1bb, V889]

================================

Block 0xa5e
[0xa5e:0xabc]
---
Predecessors: [0x307]
Successors: [0xabd, 0xac1]
---
0xa5e JUMPDEST
0xa5f PUSH1 0x0
0xa61 DUP1
0xa62 PUSH1 0x0
0xa64 DUP5
0xa65 SWAP2
0xa66 POP
0xa67 DUP2
0xa68 PUSH1 0x1
0xa6a PUSH1 0xa0
0xa6c PUSH1 0x2
0xa6e EXP
0xa6f SUB
0xa70 AND
0xa71 PUSH4 0x70a08231
0xa76 DUP6
0xa77 PUSH1 0x40
0xa79 MLOAD
0xa7a DUP3
0xa7b PUSH4 0xffffffff
0xa80 AND
0xa81 PUSH1 0xe0
0xa83 PUSH1 0x2
0xa85 EXP
0xa86 MUL
0xa87 DUP2
0xa88 MSTORE
0xa89 PUSH1 0x4
0xa8b ADD
0xa8c DUP1
0xa8d DUP3
0xa8e PUSH1 0x1
0xa90 PUSH1 0xa0
0xa92 PUSH1 0x2
0xa94 EXP
0xa95 SUB
0xa96 AND
0xa97 PUSH1 0x1
0xa99 PUSH1 0xa0
0xa9b PUSH1 0x2
0xa9d EXP
0xa9e SUB
0xa9f AND
0xaa0 DUP2
0xaa1 MSTORE
0xaa2 PUSH1 0x20
0xaa4 ADD
0xaa5 SWAP2
0xaa6 POP
0xaa7 POP
0xaa8 PUSH1 0x20
0xaaa PUSH1 0x40
0xaac MLOAD
0xaad DUP1
0xaae DUP4
0xaaf SUB
0xab0 DUP2
0xab1 PUSH1 0x0
0xab3 DUP8
0xab4 DUP1
0xab5 EXTCODESIZE
0xab6 ISZERO
0xab7 DUP1
0xab8 ISZERO
0xab9 PUSH2 0xac1
0xabc JUMPI
---
0xa5e: JUMPDEST 
0xa5f: V890 = 0x0
0xa62: V891 = 0x0
0xa68: V892 = 0x1
0xa6a: V893 = 0xa0
0xa6c: V894 = 0x2
0xa6e: V895 = EXP 0x2 0xa0
0xa6f: V896 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa70: V897 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0xa71: V898 = 0x70a08231
0xa77: V899 = 0x40
0xa79: V900 = M[0x40]
0xa7b: V901 = 0xffffffff
0xa80: V902 = AND 0xffffffff 0x70a08231
0xa81: V903 = 0xe0
0xa83: V904 = 0x2
0xa85: V905 = EXP 0x2 0xe0
0xa86: V906 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xa88: M[V900] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa89: V907 = 0x4
0xa8b: V908 = ADD 0x4 V900
0xa8e: V909 = 0x1
0xa90: V910 = 0xa0
0xa92: V911 = 0x2
0xa94: V912 = EXP 0x2 0xa0
0xa95: V913 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa96: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0xa97: V915 = 0x1
0xa99: V916 = 0xa0
0xa9b: V917 = 0x2
0xa9d: V918 = EXP 0x2 0xa0
0xa9e: V919 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa9f: V920 = AND 0xffffffffffffffffffffffffffffffffffffffff V914
0xaa1: M[V908] = V920
0xaa2: V921 = 0x20
0xaa4: V922 = ADD 0x20 V908
0xaa8: V923 = 0x20
0xaaa: V924 = 0x40
0xaac: V925 = M[0x40]
0xaaf: V926 = SUB V922 V925
0xab1: V927 = 0x0
0xab5: V928 = EXTCODESIZE V897
0xab6: V929 = ISZERO V928
0xab8: V930 = ISZERO V929
0xab9: V931 = 0xac1
0xabc: JUMPI 0xac1 V930
---
Entry stack: [V13, 0x1e4, V264, V267]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1, 0x0, V897, 0x70a08231, V922, 0x20, V925, V926, V925, 0x0, V897, V929]
Exit stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V897, 0x70a08231, V922, 0x20, V925, V926, V925, 0x0, V897, V929]

================================

Block 0xabd
[0xabd:0xac0]
---
Predecessors: [0xa5e]
Successors: []
---
0xabd PUSH1 0x0
0xabf DUP1
0xac0 REVERT
---
0xabd: V932 = 0x0
0xac0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V897, 0x70a08231, V922, 0x20, V925, V926, V925, 0x0, V897, V929]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V897, 0x70a08231, V922, 0x20, V925, V926, V925, 0x0, V897, V929]

================================

Block 0xac1
[0xac1:0xacb]
---
Predecessors: [0xa5e]
Successors: [0xacc, 0xad5]
---
0xac1 JUMPDEST
0xac2 POP
0xac3 GAS
0xac4 CALL
0xac5 ISZERO
0xac6 DUP1
0xac7 ISZERO
0xac8 PUSH2 0xad5
0xacb JUMPI
---
0xac1: JUMPDEST 
0xac3: V933 = GAS
0xac4: V934 = CALL V933 V897 0x0 V925 V926 V925 0x20
0xac5: V935 = ISZERO V934
0xac7: V936 = ISZERO V935
0xac8: V937 = 0xad5
0xacb: JUMPI 0xad5 V936
---
Entry stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V897, 0x70a08231, V922, 0x20, V925, V926, V925, 0x0, V897, V929]
Stack pops: 7
Stack additions: [V935]
Exit stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V897, 0x70a08231, V922, V935]

================================

Block 0xacc
[0xacc:0xad4]
---
Predecessors: [0xac1]
Successors: []
---
0xacc RETURNDATASIZE
0xacd PUSH1 0x0
0xacf DUP1
0xad0 RETURNDATACOPY
0xad1 RETURNDATASIZE
0xad2 PUSH1 0x0
0xad4 REVERT
---
0xacc: V938 = RETURNDATASIZE
0xacd: V939 = 0x0
0xad0: RETURNDATACOPY 0x0 0x0 V938
0xad1: V940 = RETURNDATASIZE
0xad2: V941 = 0x0
0xad4: REVERT 0x0 V940
---
Entry stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V897, 0x70a08231, V922, V935]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V897, 0x70a08231, V922, V935]

================================

Block 0xad5
[0xad5:0xae6]
---
Predecessors: [0xac1]
Successors: [0xae7, 0xaeb]
---
0xad5 JUMPDEST
0xad6 POP
0xad7 POP
0xad8 POP
0xad9 POP
0xada PUSH1 0x40
0xadc MLOAD
0xadd RETURNDATASIZE
0xade PUSH1 0x20
0xae0 DUP2
0xae1 LT
0xae2 ISZERO
0xae3 PUSH2 0xaeb
0xae6 JUMPI
---
0xad5: JUMPDEST 
0xada: V942 = 0x40
0xadc: V943 = M[0x40]
0xadd: V944 = RETURNDATASIZE
0xade: V945 = 0x20
0xae1: V946 = LT V944 0x20
0xae2: V947 = ISZERO V946
0xae3: V948 = 0xaeb
0xae6: JUMPI 0xaeb V947
---
Entry stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V897, 0x70a08231, V922, V935]
Stack pops: 4
Stack additions: [V943, V944]
Exit stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V943, V944]

================================

Block 0xae7
[0xae7:0xaea]
---
Predecessors: [0xad5]
Successors: []
---
0xae7 PUSH1 0x0
0xae9 DUP1
0xaea REVERT
---
0xae7: V949 = 0x0
0xaea: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V943, V944]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V943, V944]

================================

Block 0xaeb
[0xaeb:0xaf5]
---
Predecessors: [0xad5]
Successors: [0x1e4]
---
0xaeb JUMPDEST
0xaec POP
0xaed MLOAD
0xaee SWAP6
0xaef SWAP5
0xaf0 POP
0xaf1 POP
0xaf2 POP
0xaf3 POP
0xaf4 POP
0xaf5 JUMP
---
0xaeb: JUMPDEST 
0xaed: V950 = M[V943]
0xaf5: JUMP 0x1e4
---
Entry stack: [V13, 0x1e4, V264, V267, 0x0, V264, 0x0, V943, V944]
Stack pops: 8
Stack additions: [V950]
Exit stack: [V13, V950]

================================

Block 0xaf6
[0xaf6:0xafb]
---
Predecessors: [0x32e]
Successors: [0x1e4]
---
0xaf6 JUMPDEST
0xaf7 PUSH1 0x7
0xaf9 SLOAD
0xafa DUP2
0xafb JUMP
---
0xaf6: JUMPDEST 
0xaf7: V951 = 0x7
0xaf9: V952 = S[0x7]
0xafb: JUMP 0x1e4
---
Entry stack: [V13, 0x1e4]
Stack pops: 1
Stack additions: [S0, V952]
Exit stack: [V13, 0x1e4, V952]

================================

Block 0xafc
[0xafc:0xb26]
---
Predecessors: [0x343]
Successors: [0x1e4]
---
0xafc JUMPDEST
0xafd PUSH1 0x1
0xaff PUSH1 0xa0
0xb01 PUSH1 0x2
0xb03 EXP
0xb04 SUB
0xb05 SWAP2
0xb06 DUP3
0xb07 AND
0xb08 PUSH1 0x0
0xb0a SWAP1
0xb0b DUP2
0xb0c MSTORE
0xb0d PUSH1 0x3
0xb0f PUSH1 0x20
0xb11 SWAP1
0xb12 DUP2
0xb13 MSTORE
0xb14 PUSH1 0x40
0xb16 DUP1
0xb17 DUP4
0xb18 SHA3
0xb19 SWAP4
0xb1a SWAP1
0xb1b SWAP5
0xb1c AND
0xb1d DUP3
0xb1e MSTORE
0xb1f SWAP2
0xb20 SWAP1
0xb21 SWAP2
0xb22 MSTORE
0xb23 SHA3
0xb24 SLOAD
0xb25 SWAP1
0xb26 JUMP
---
0xafc: JUMPDEST 
0xafd: V953 = 0x1
0xaff: V954 = 0xa0
0xb01: V955 = 0x2
0xb03: V956 = EXP 0x2 0xa0
0xb04: V957 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb07: V958 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0xb08: V959 = 0x0
0xb0c: M[0x0] = V958
0xb0d: V960 = 0x3
0xb0f: V961 = 0x20
0xb13: M[0x20] = 0x3
0xb14: V962 = 0x40
0xb18: V963 = SHA3 0x0 0x40
0xb1c: V964 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0xb1e: M[0x0] = V964
0xb22: M[0x20] = V963
0xb23: V965 = SHA3 0x0 0x40
0xb24: V966 = S[V965]
0xb26: JUMP 0x1e4
---
Entry stack: [V13, 0x1e4, V287, V290]
Stack pops: 3
Stack additions: [V966]
Exit stack: [V13, V966]

================================

Block 0xb27
[0xb27:0xb44]
---
Predecessors: [0x36a]
Successors: [0xb45, 0xb49]
---
0xb27 JUMPDEST
0xb28 PUSH1 0x1
0xb2a SLOAD
0xb2b PUSH1 0x0
0xb2d SWAP1
0xb2e DUP2
0xb2f SWAP1
0xb30 DUP2
0xb31 SWAP1
0xb32 CALLER
0xb33 PUSH1 0x1
0xb35 PUSH1 0xa0
0xb37 PUSH1 0x2
0xb39 EXP
0xb3a SUB
0xb3b SWAP1
0xb3c DUP2
0xb3d AND
0xb3e SWAP2
0xb3f AND
0xb40 EQ
0xb41 PUSH2 0xb49
0xb44 JUMPI
---
0xb27: JUMPDEST 
0xb28: V967 = 0x1
0xb2a: V968 = S[0x1]
0xb2b: V969 = 0x0
0xb32: V970 = CALLER
0xb33: V971 = 0x1
0xb35: V972 = 0xa0
0xb37: V973 = 0x2
0xb39: V974 = EXP 0x2 0xa0
0xb3a: V975 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3d: V976 = AND 0xffffffffffffffffffffffffffffffffffffffff V970
0xb3f: V977 = AND V968 0xffffffffffffffffffffffffffffffffffffffff
0xb40: V978 = EQ V977 V976
0xb41: V979 = 0xb49
0xb44: JUMPI 0xb49 V978
---
Entry stack: [V13, 0x1bb, V304]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x1bb, V304, 0x0, 0x0, 0x0]

================================

Block 0xb45
[0xb45:0xb48]
---
Predecessors: [0xb27]
Successors: []
---
0xb45 PUSH1 0x0
0xb47 DUP1
0xb48 REVERT
---
0xb45: V980 = 0x0
0xb48: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, V304, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V304, 0x0, 0x0, 0x0]

================================

Block 0xb49
[0xb49:0xba2]
---
Predecessors: [0xb27]
Successors: [0xba3, 0xba7]
---
0xb49 JUMPDEST
0xb4a DUP4
0xb4b SWAP2
0xb4c POP
0xb4d DUP2
0xb4e PUSH1 0x1
0xb50 PUSH1 0xa0
0xb52 PUSH1 0x2
0xb54 EXP
0xb55 SUB
0xb56 AND
0xb57 PUSH4 0x70a08231
0xb5c ADDRESS
0xb5d PUSH1 0x40
0xb5f MLOAD
0xb60 DUP3
0xb61 PUSH4 0xffffffff
0xb66 AND
0xb67 PUSH1 0xe0
0xb69 PUSH1 0x2
0xb6b EXP
0xb6c MUL
0xb6d DUP2
0xb6e MSTORE
0xb6f PUSH1 0x4
0xb71 ADD
0xb72 DUP1
0xb73 DUP3
0xb74 PUSH1 0x1
0xb76 PUSH1 0xa0
0xb78 PUSH1 0x2
0xb7a EXP
0xb7b SUB
0xb7c AND
0xb7d PUSH1 0x1
0xb7f PUSH1 0xa0
0xb81 PUSH1 0x2
0xb83 EXP
0xb84 SUB
0xb85 AND
0xb86 DUP2
0xb87 MSTORE
0xb88 PUSH1 0x20
0xb8a ADD
0xb8b SWAP2
0xb8c POP
0xb8d POP
0xb8e PUSH1 0x20
0xb90 PUSH1 0x40
0xb92 MLOAD
0xb93 DUP1
0xb94 DUP4
0xb95 SUB
0xb96 DUP2
0xb97 PUSH1 0x0
0xb99 DUP8
0xb9a DUP1
0xb9b EXTCODESIZE
0xb9c ISZERO
0xb9d DUP1
0xb9e ISZERO
0xb9f PUSH2 0xba7
0xba2 JUMPI
---
0xb49: JUMPDEST 
0xb4e: V981 = 0x1
0xb50: V982 = 0xa0
0xb52: V983 = 0x2
0xb54: V984 = EXP 0x2 0xa0
0xb55: V985 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb56: V986 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0xb57: V987 = 0x70a08231
0xb5c: V988 = ADDRESS
0xb5d: V989 = 0x40
0xb5f: V990 = M[0x40]
0xb61: V991 = 0xffffffff
0xb66: V992 = AND 0xffffffff 0x70a08231
0xb67: V993 = 0xe0
0xb69: V994 = 0x2
0xb6b: V995 = EXP 0x2 0xe0
0xb6c: V996 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xb6e: M[V990] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xb6f: V997 = 0x4
0xb71: V998 = ADD 0x4 V990
0xb74: V999 = 0x1
0xb76: V1000 = 0xa0
0xb78: V1001 = 0x2
0xb7a: V1002 = EXP 0x2 0xa0
0xb7b: V1003 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7c: V1004 = AND 0xffffffffffffffffffffffffffffffffffffffff V988
0xb7d: V1005 = 0x1
0xb7f: V1006 = 0xa0
0xb81: V1007 = 0x2
0xb83: V1008 = EXP 0x2 0xa0
0xb84: V1009 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb85: V1010 = AND 0xffffffffffffffffffffffffffffffffffffffff V1004
0xb87: M[V998] = V1010
0xb88: V1011 = 0x20
0xb8a: V1012 = ADD 0x20 V998
0xb8e: V1013 = 0x20
0xb90: V1014 = 0x40
0xb92: V1015 = M[0x40]
0xb95: V1016 = SUB V1012 V1015
0xb97: V1017 = 0x0
0xb9b: V1018 = EXTCODESIZE V986
0xb9c: V1019 = ISZERO V1018
0xb9e: V1020 = ISZERO V1019
0xb9f: V1021 = 0xba7
0xba2: JUMPI 0xba7 V1020
---
Entry stack: [V13, 0x1bb, V304, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V986, 0x70a08231, V1012, 0x20, V1015, V1016, V1015, 0x0, V986, V1019]
Exit stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V986, 0x70a08231, V1012, 0x20, V1015, V1016, V1015, 0x0, V986, V1019]

================================

Block 0xba3
[0xba3:0xba6]
---
Predecessors: [0xb49]
Successors: []
---
0xba3 PUSH1 0x0
0xba5 DUP1
0xba6 REVERT
---
0xba3: V1022 = 0x0
0xba6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V986, 0x70a08231, V1012, 0x20, V1015, V1016, V1015, 0x0, V986, V1019]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V986, 0x70a08231, V1012, 0x20, V1015, V1016, V1015, 0x0, V986, V1019]

================================

Block 0xba7
[0xba7:0xbb1]
---
Predecessors: [0xb49]
Successors: [0xbb2, 0xbbb]
---
0xba7 JUMPDEST
0xba8 POP
0xba9 GAS
0xbaa CALL
0xbab ISZERO
0xbac DUP1
0xbad ISZERO
0xbae PUSH2 0xbbb
0xbb1 JUMPI
---
0xba7: JUMPDEST 
0xba9: V1023 = GAS
0xbaa: V1024 = CALL V1023 V986 0x0 V1015 V1016 V1015 0x20
0xbab: V1025 = ISZERO V1024
0xbad: V1026 = ISZERO V1025
0xbae: V1027 = 0xbbb
0xbb1: JUMPI 0xbbb V1026
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V986, 0x70a08231, V1012, 0x20, V1015, V1016, V1015, 0x0, V986, V1019]
Stack pops: 7
Stack additions: [V1025]
Exit stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V986, 0x70a08231, V1012, V1025]

================================

Block 0xbb2
[0xbb2:0xbba]
---
Predecessors: [0xba7]
Successors: []
---
0xbb2 RETURNDATASIZE
0xbb3 PUSH1 0x0
0xbb5 DUP1
0xbb6 RETURNDATACOPY
0xbb7 RETURNDATASIZE
0xbb8 PUSH1 0x0
0xbba REVERT
---
0xbb2: V1028 = RETURNDATASIZE
0xbb3: V1029 = 0x0
0xbb6: RETURNDATACOPY 0x0 0x0 V1028
0xbb7: V1030 = RETURNDATASIZE
0xbb8: V1031 = 0x0
0xbba: REVERT 0x0 V1030
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V986, 0x70a08231, V1012, V1025]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V986, 0x70a08231, V1012, V1025]

================================

Block 0xbbb
[0xbbb:0xbcc]
---
Predecessors: [0xba7]
Successors: [0xbcd, 0xbd1]
---
0xbbb JUMPDEST
0xbbc POP
0xbbd POP
0xbbe POP
0xbbf POP
0xbc0 PUSH1 0x40
0xbc2 MLOAD
0xbc3 RETURNDATASIZE
0xbc4 PUSH1 0x20
0xbc6 DUP2
0xbc7 LT
0xbc8 ISZERO
0xbc9 PUSH2 0xbd1
0xbcc JUMPI
---
0xbbb: JUMPDEST 
0xbc0: V1032 = 0x40
0xbc2: V1033 = M[0x40]
0xbc3: V1034 = RETURNDATASIZE
0xbc4: V1035 = 0x20
0xbc7: V1036 = LT V1034 0x20
0xbc8: V1037 = ISZERO V1036
0xbc9: V1038 = 0xbd1
0xbcc: JUMPI 0xbd1 V1037
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V986, 0x70a08231, V1012, V1025]
Stack pops: 4
Stack additions: [V1033, V1034]
Exit stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V1033, V1034]

================================

Block 0xbcd
[0xbcd:0xbd0]
---
Predecessors: [0xbbb]
Successors: []
---
0xbcd PUSH1 0x0
0xbcf DUP1
0xbd0 REVERT
---
0xbcd: V1039 = 0x0
0xbd0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V1033, V1034]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V1033, V1034]

================================

Block 0xbd1
[0xbd1:0xc40]
---
Predecessors: [0xbbb]
Successors: [0xc41, 0xc45]
---
0xbd1 JUMPDEST
0xbd2 POP
0xbd3 MLOAD
0xbd4 PUSH1 0x1
0xbd6 SLOAD
0xbd7 PUSH1 0x40
0xbd9 DUP1
0xbda MLOAD
0xbdb PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xbfc DUP2
0xbfd MSTORE
0xbfe PUSH1 0x1
0xc00 PUSH1 0xa0
0xc02 PUSH1 0x2
0xc04 EXP
0xc05 SUB
0xc06 SWAP3
0xc07 DUP4
0xc08 AND
0xc09 PUSH1 0x4
0xc0b DUP3
0xc0c ADD
0xc0d MSTORE
0xc0e PUSH1 0x24
0xc10 DUP2
0xc11 ADD
0xc12 DUP5
0xc13 SWAP1
0xc14 MSTORE
0xc15 SWAP1
0xc16 MLOAD
0xc17 SWAP3
0xc18 SWAP4
0xc19 POP
0xc1a SWAP1
0xc1b DUP5
0xc1c AND
0xc1d SWAP2
0xc1e PUSH4 0xa9059cbb
0xc23 SWAP2
0xc24 PUSH1 0x44
0xc26 DUP1
0xc27 DUP3
0xc28 ADD
0xc29 SWAP3
0xc2a PUSH1 0x20
0xc2c SWAP3
0xc2d SWAP1
0xc2e SWAP2
0xc2f SWAP1
0xc30 DUP3
0xc31 SWAP1
0xc32 SUB
0xc33 ADD
0xc34 DUP2
0xc35 PUSH1 0x0
0xc37 DUP8
0xc38 DUP1
0xc39 EXTCODESIZE
0xc3a ISZERO
0xc3b DUP1
0xc3c ISZERO
0xc3d PUSH2 0xc45
0xc40 JUMPI
---
0xbd1: JUMPDEST 
0xbd3: V1040 = M[V1033]
0xbd4: V1041 = 0x1
0xbd6: V1042 = S[0x1]
0xbd7: V1043 = 0x40
0xbda: V1044 = M[0x40]
0xbdb: V1045 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xbfd: M[V1044] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xbfe: V1046 = 0x1
0xc00: V1047 = 0xa0
0xc02: V1048 = 0x2
0xc04: V1049 = EXP 0x2 0xa0
0xc05: V1050 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc08: V1051 = AND 0xffffffffffffffffffffffffffffffffffffffff V1042
0xc09: V1052 = 0x4
0xc0c: V1053 = ADD V1044 0x4
0xc0d: M[V1053] = V1051
0xc0e: V1054 = 0x24
0xc11: V1055 = ADD V1044 0x24
0xc14: M[V1055] = V1040
0xc16: V1056 = M[0x40]
0xc1c: V1057 = AND V304 0xffffffffffffffffffffffffffffffffffffffff
0xc1e: V1058 = 0xa9059cbb
0xc24: V1059 = 0x44
0xc28: V1060 = ADD V1044 0x44
0xc2a: V1061 = 0x20
0xc32: V1062 = SUB V1044 V1056
0xc33: V1063 = ADD V1062 0x44
0xc35: V1064 = 0x0
0xc39: V1065 = EXTCODESIZE V1057
0xc3a: V1066 = ISZERO V1065
0xc3c: V1067 = ISZERO V1066
0xc3d: V1068 = 0xc45
0xc40: JUMPI 0xc45 V1067
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, 0x0, V1033, V1034]
Stack pops: 4
Stack additions: [S3, V1040, V1057, 0xa9059cbb, V1060, 0x20, V1056, V1063, V1056, 0x0, V1057, V1066]
Exit stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1057, 0xa9059cbb, V1060, 0x20, V1056, V1063, V1056, 0x0, V1057, V1066]

================================

Block 0xc41
[0xc41:0xc44]
---
Predecessors: [0xbd1]
Successors: []
---
0xc41 PUSH1 0x0
0xc43 DUP1
0xc44 REVERT
---
0xc41: V1069 = 0x0
0xc44: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1057, 0xa9059cbb, V1060, 0x20, V1056, V1063, V1056, 0x0, V1057, V1066]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1057, 0xa9059cbb, V1060, 0x20, V1056, V1063, V1056, 0x0, V1057, V1066]

================================

Block 0xc45
[0xc45:0xc4f]
---
Predecessors: [0xbd1]
Successors: [0xc50, 0xc59]
---
0xc45 JUMPDEST
0xc46 POP
0xc47 GAS
0xc48 CALL
0xc49 ISZERO
0xc4a DUP1
0xc4b ISZERO
0xc4c PUSH2 0xc59
0xc4f JUMPI
---
0xc45: JUMPDEST 
0xc47: V1070 = GAS
0xc48: V1071 = CALL V1070 V1057 0x0 V1056 V1063 V1056 0x20
0xc49: V1072 = ISZERO V1071
0xc4b: V1073 = ISZERO V1072
0xc4c: V1074 = 0xc59
0xc4f: JUMPI 0xc59 V1073
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1057, 0xa9059cbb, V1060, 0x20, V1056, V1063, V1056, 0x0, V1057, V1066]
Stack pops: 7
Stack additions: [V1072]
Exit stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1057, 0xa9059cbb, V1060, V1072]

================================

Block 0xc50
[0xc50:0xc58]
---
Predecessors: [0xc45]
Successors: []
---
0xc50 RETURNDATASIZE
0xc51 PUSH1 0x0
0xc53 DUP1
0xc54 RETURNDATACOPY
0xc55 RETURNDATASIZE
0xc56 PUSH1 0x0
0xc58 REVERT
---
0xc50: V1075 = RETURNDATASIZE
0xc51: V1076 = 0x0
0xc54: RETURNDATACOPY 0x0 0x0 V1075
0xc55: V1077 = RETURNDATASIZE
0xc56: V1078 = 0x0
0xc58: REVERT 0x0 V1077
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1057, 0xa9059cbb, V1060, V1072]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1057, 0xa9059cbb, V1060, V1072]

================================

Block 0xc59
[0xc59:0xc6a]
---
Predecessors: [0xc45]
Successors: [0xc6b, 0xc6f]
---
0xc59 JUMPDEST
0xc5a POP
0xc5b POP
0xc5c POP
0xc5d POP
0xc5e PUSH1 0x40
0xc60 MLOAD
0xc61 RETURNDATASIZE
0xc62 PUSH1 0x20
0xc64 DUP2
0xc65 LT
0xc66 ISZERO
0xc67 PUSH2 0xc6f
0xc6a JUMPI
---
0xc59: JUMPDEST 
0xc5e: V1079 = 0x40
0xc60: V1080 = M[0x40]
0xc61: V1081 = RETURNDATASIZE
0xc62: V1082 = 0x20
0xc65: V1083 = LT V1081 0x20
0xc66: V1084 = ISZERO V1083
0xc67: V1085 = 0xc6f
0xc6a: JUMPI 0xc6f V1084
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1057, 0xa9059cbb, V1060, V1072]
Stack pops: 4
Stack additions: [V1080, V1081]
Exit stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1080, V1081]

================================

Block 0xc6b
[0xc6b:0xc6e]
---
Predecessors: [0xc59]
Successors: []
---
0xc6b PUSH1 0x0
0xc6d DUP1
0xc6e REVERT
---
0xc6b: V1086 = 0x0
0xc6e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1080, V1081]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1080, V1081]

================================

Block 0xc6f
[0xc6f:0xc78]
---
Predecessors: [0xc59]
Successors: [0x1bb]
---
0xc6f JUMPDEST
0xc70 POP
0xc71 MLOAD
0xc72 SWAP5
0xc73 SWAP4
0xc74 POP
0xc75 POP
0xc76 POP
0xc77 POP
0xc78 JUMP
---
0xc6f: JUMPDEST 
0xc71: V1087 = M[V1080]
0xc78: JUMP 0x1bb
---
Entry stack: [V13, 0x1bb, V304, 0x0, V304, V1040, V1080, V1081]
Stack pops: 7
Stack additions: [V1087]
Exit stack: [V13, V1087]

================================

Block 0xc79
[0xc79:0xc7e]
---
Predecessors: [0x38b]
Successors: [0x1e4]
---
0xc79 JUMPDEST
0xc7a PUSH1 0x6
0xc7c SLOAD
0xc7d DUP2
0xc7e JUMP
---
0xc79: JUMPDEST 
0xc7a: V1088 = 0x6
0xc7c: V1089 = S[0x6]
0xc7e: JUMP 0x1e4
---
Entry stack: [V13, 0x1e4]
Stack pops: 1
Stack additions: [S0, V1089]
Exit stack: [V13, 0x1e4, V1089]

================================

Block 0xc7f
[0xc7f:0xc95]
---
Predecessors: [0x3a0]
Successors: [0xc96, 0xc9a]
---
0xc7f JUMPDEST
0xc80 PUSH1 0x1
0xc82 SLOAD
0xc83 CALLER
0xc84 PUSH1 0x1
0xc86 PUSH1 0xa0
0xc88 PUSH1 0x2
0xc8a EXP
0xc8b SUB
0xc8c SWAP1
0xc8d DUP2
0xc8e AND
0xc8f SWAP2
0xc90 AND
0xc91 EQ
0xc92 PUSH2 0xc9a
0xc95 JUMPI
---
0xc7f: JUMPDEST 
0xc80: V1090 = 0x1
0xc82: V1091 = S[0x1]
0xc83: V1092 = CALLER
0xc84: V1093 = 0x1
0xc86: V1094 = 0xa0
0xc88: V1095 = 0x2
0xc8a: V1096 = EXP 0x2 0xa0
0xc8b: V1097 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc8e: V1098 = AND 0xffffffffffffffffffffffffffffffffffffffff V1092
0xc90: V1099 = AND V1091 0xffffffffffffffffffffffffffffffffffffffff
0xc91: V1100 = EQ V1099 V1098
0xc92: V1101 = 0xc9a
0xc95: JUMPI 0xc9a V1100
---
Entry stack: [V13, 0x10b, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, V324]

================================

Block 0xc96
[0xc96:0xc99]
---
Predecessors: [0xc7f]
Successors: []
---
0xc96 PUSH1 0x0
0xc98 DUP1
0xc99 REVERT
---
0xc96: V1102 = 0x0
0xc99: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10b, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, V324]

================================

Block 0xc9a
[0xc9a:0xca9]
---
Predecessors: [0xc7f]
Successors: [0xcaa, 0xcd2]
---
0xc9a JUMPDEST
0xc9b PUSH1 0x1
0xc9d PUSH1 0xa0
0xc9f PUSH1 0x2
0xca1 EXP
0xca2 SUB
0xca3 DUP2
0xca4 AND
0xca5 ISZERO
0xca6 PUSH2 0xcd2
0xca9 JUMPI
---
0xc9a: JUMPDEST 
0xc9b: V1103 = 0x1
0xc9d: V1104 = 0xa0
0xc9f: V1105 = 0x2
0xca1: V1106 = EXP 0x2 0xa0
0xca2: V1107 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca4: V1108 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0xca5: V1109 = ISZERO V1108
0xca6: V1110 = 0xcd2
0xca9: JUMPI 0xcd2 V1109
---
Entry stack: [V13, 0x10b, V324]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x10b, V324]

================================

Block 0xcaa
[0xcaa:0xcd1]
---
Predecessors: [0xc9a]
Successors: [0xcd2]
---
0xcaa PUSH1 0x1
0xcac DUP1
0xcad SLOAD
0xcae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc3 NOT
0xcc4 AND
0xcc5 PUSH1 0x1
0xcc7 PUSH1 0xa0
0xcc9 PUSH1 0x2
0xccb EXP
0xccc SUB
0xccd DUP4
0xcce AND
0xccf OR
0xcd0 SWAP1
0xcd1 SSTORE
---
0xcaa: V1111 = 0x1
0xcad: V1112 = S[0x1]
0xcae: V1113 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc3: V1114 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xcc4: V1115 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1112
0xcc5: V1116 = 0x1
0xcc7: V1117 = 0xa0
0xcc9: V1118 = 0x2
0xccb: V1119 = EXP 0x2 0xa0
0xccc: V1120 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcce: V1121 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0xccf: V1122 = OR V1121 V1115
0xcd1: S[0x1] = V1122
---
Entry stack: [V13, 0x10b, V324]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x10b, V324]

================================

Block 0xcd2
[0xcd2:0xcd4]
---
Predecessors: [0xc9a, 0xcaa]
Successors: [0x10b]
---
0xcd2 JUMPDEST
0xcd3 POP
0xcd4 JUMP
---
0xcd2: JUMPDEST 
0xcd4: JUMP 0x10b
---
Entry stack: [V13, 0x10b, V324]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xcd5
[0xcd5:0xce9]
---
Predecessors: [0x3c1]
Successors: [0x1bb]
---
0xcd5 JUMPDEST
0xcd6 PUSH1 0x4
0xcd8 PUSH1 0x20
0xcda MSTORE
0xcdb PUSH1 0x0
0xcdd SWAP1
0xcde DUP2
0xcdf MSTORE
0xce0 PUSH1 0x40
0xce2 SWAP1
0xce3 SHA3
0xce4 SLOAD
0xce5 PUSH1 0xff
0xce7 AND
0xce8 DUP2
0xce9 JUMP
---
0xcd5: JUMPDEST 
0xcd6: V1123 = 0x4
0xcd8: V1124 = 0x20
0xcda: M[0x20] = 0x4
0xcdb: V1125 = 0x0
0xcdf: M[0x0] = V338
0xce0: V1126 = 0x40
0xce3: V1127 = SHA3 0x0 0x40
0xce4: V1128 = S[V1127]
0xce5: V1129 = 0xff
0xce7: V1130 = AND 0xff V1128
0xce9: JUMP 0x1bb
---
Entry stack: [V13, 0x1bb, V338]
Stack pops: 2
Stack additions: [S1, V1130]
Exit stack: [V13, 0x1bb, V1130]

================================

Block 0xcea
[0xcea:0xcf8]
---
Predecessors: [0x435]
Successors: [0xcf9, 0xcfd]
---
0xcea JUMPDEST
0xceb PUSH1 0x9
0xced SLOAD
0xcee PUSH1 0x0
0xcf0 SWAP1
0xcf1 PUSH1 0xff
0xcf3 AND
0xcf4 ISZERO
0xcf5 PUSH2 0xcfd
0xcf8 JUMPI
---
0xcea: JUMPDEST 
0xceb: V1131 = 0x9
0xced: V1132 = S[0x9]
0xcee: V1133 = 0x0
0xcf1: V1134 = 0xff
0xcf3: V1135 = AND 0xff V1132
0xcf4: V1136 = ISZERO V1135
0xcf5: V1137 = 0xcfd
0xcf8: JUMPI 0xcfd V1136
---
Entry stack: [V13, 0x10b, V386, V385, 0x446, V386, V385]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x10b, V386, V385, 0x446, V386, V385, 0x0]

================================

Block 0xcf9
[0xcf9:0xcfc]
---
Predecessors: [0xcea]
Successors: []
---
0xcf9 PUSH1 0x0
0xcfb DUP1
0xcfc REVERT
---
0xcf9: V1138 = 0x0
0xcfc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x10b, V386, V385, 0x446, V386, V385, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, V386, V385, 0x446, V386, V385, 0x0]

================================

Block 0xcfd
[0xcfd:0xd0f]
---
Predecessors: [0xcea]
Successors: [0xe41]
---
0xcfd JUMPDEST
0xcfe PUSH1 0x6
0xd00 SLOAD
0xd01 PUSH2 0xd10
0xd04 SWAP1
0xd05 DUP4
0xd06 PUSH4 0xffffffff
0xd0b PUSH2 0xe41
0xd0e AND
0xd0f JUMP
---
0xcfd: JUMPDEST 
0xcfe: V1139 = 0x6
0xd00: V1140 = S[0x6]
0xd01: V1141 = 0xd10
0xd06: V1142 = 0xffffffff
0xd0b: V1143 = 0xe41
0xd0e: V1144 = AND 0xe41 0xffffffff
0xd0f: JUMP 0xe41
---
Entry stack: [V13, 0x10b, V386, V385, 0x446, V386, V385, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xd10, V1140, S1]
Exit stack: [V13, 0x10b, V386, V385, 0x446, V386, V385, 0x0, 0xd10, V1140, V385]

================================

Block 0xd10
[0xd10:0xd25]
---
Predecessors: [0xe28]
Successors: [0xe2f]
---
0xd10 JUMPDEST
0xd11 PUSH1 0x6
0xd13 SSTORE
0xd14 PUSH1 0x7
0xd16 SLOAD
0xd17 PUSH2 0xd26
0xd1a SWAP1
0xd1b DUP4
0xd1c PUSH4 0xffffffff
0xd21 PUSH2 0xe2f
0xd24 AND
0xd25 JUMP
---
0xd10: JUMPDEST 
0xd11: V1145 = 0x6
0xd13: S[0x6] = S0
0xd14: V1146 = 0x7
0xd16: V1147 = S[0x7]
0xd17: V1148 = 0xd26
0xd1c: V1149 = 0xffffffff
0xd21: V1150 = 0xe2f
0xd24: V1151 = AND 0xe2f 0xffffffff
0xd25: JUMP 0xe2f
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xd26, V1147, S2]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1, 0xd26, V1147, S2]

================================

Block 0xd26
[0xd26:0xd51]
---
Predecessors: [0xe3b]
Successors: [0xe41]
---
0xd26 JUMPDEST
0xd27 PUSH1 0x7
0xd29 SSTORE
0xd2a PUSH1 0x1
0xd2c PUSH1 0xa0
0xd2e PUSH1 0x2
0xd30 EXP
0xd31 SUB
0xd32 DUP4
0xd33 AND
0xd34 PUSH1 0x0
0xd36 SWAP1
0xd37 DUP2
0xd38 MSTORE
0xd39 PUSH1 0x2
0xd3b PUSH1 0x20
0xd3d MSTORE
0xd3e PUSH1 0x40
0xd40 SWAP1
0xd41 SHA3
0xd42 SLOAD
0xd43 PUSH2 0xd52
0xd46 SWAP1
0xd47 DUP4
0xd48 PUSH4 0xffffffff
0xd4d PUSH2 0xe41
0xd50 AND
0xd51 JUMP
---
0xd26: JUMPDEST 
0xd27: V1152 = 0x7
0xd29: S[0x7] = V1222
0xd2a: V1153 = 0x1
0xd2c: V1154 = 0xa0
0xd2e: V1155 = 0x2
0xd30: V1156 = EXP 0x2 0xa0
0xd31: V1157 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd33: V1158 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xd34: V1159 = 0x0
0xd38: M[0x0] = V1158
0xd39: V1160 = 0x2
0xd3b: V1161 = 0x20
0xd3d: M[0x20] = 0x2
0xd3e: V1162 = 0x40
0xd41: V1163 = SHA3 0x0 0x40
0xd42: V1164 = S[V1163]
0xd43: V1165 = 0xd52
0xd48: V1166 = 0xffffffff
0xd4d: V1167 = 0xe41
0xd50: V1168 = AND 0xe41 0xffffffff
0xd51: JUMP 0xe41
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1222]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xd52, V1164, S2]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1, 0xd52, V1164, S2]

================================

Block 0xd52
[0xd52:0xdec]
---
Predecessors: [0xe28]
Successors: [0x599]
---
0xd52 JUMPDEST
0xd53 PUSH1 0x1
0xd55 PUSH1 0xa0
0xd57 PUSH1 0x2
0xd59 EXP
0xd5a SUB
0xd5b DUP5
0xd5c AND
0xd5d PUSH1 0x0
0xd5f DUP2
0xd60 DUP2
0xd61 MSTORE
0xd62 PUSH1 0x2
0xd64 PUSH1 0x20
0xd66 SWAP1
0xd67 DUP2
0xd68 MSTORE
0xd69 PUSH1 0x40
0xd6b SWAP2
0xd6c DUP3
0xd6d SWAP1
0xd6e SHA3
0xd6f SWAP4
0xd70 SWAP1
0xd71 SWAP4
0xd72 SSTORE
0xd73 DUP1
0xd74 MLOAD
0xd75 DUP6
0xd76 DUP2
0xd77 MSTORE
0xd78 SWAP1
0xd79 MLOAD
0xd7a SWAP2
0xd7b SWAP3
0xd7c PUSH32 0x8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77
0xd9d SWAP3
0xd9e SWAP2
0xd9f DUP3
0xda0 SWAP1
0xda1 SUB
0xda2 ADD
0xda3 SWAP1
0xda4 LOG2
0xda5 PUSH1 0x40
0xda7 DUP1
0xda8 MLOAD
0xda9 DUP4
0xdaa DUP2
0xdab MSTORE
0xdac SWAP1
0xdad MLOAD
0xdae PUSH1 0x1
0xdb0 PUSH1 0xa0
0xdb2 PUSH1 0x2
0xdb4 EXP
0xdb5 SUB
0xdb6 DUP6
0xdb7 AND
0xdb8 SWAP2
0xdb9 PUSH1 0x0
0xdbb SWAP2
0xdbc PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xddd SWAP2
0xdde DUP2
0xddf SWAP1
0xde0 SUB
0xde1 PUSH1 0x20
0xde3 ADD
0xde4 SWAP1
0xde5 LOG3
0xde6 POP
0xde7 PUSH1 0x1
0xde9 PUSH2 0x599
0xdec JUMP
---
0xd52: JUMPDEST 
0xd53: V1169 = 0x1
0xd55: V1170 = 0xa0
0xd57: V1171 = 0x2
0xd59: V1172 = EXP 0x2 0xa0
0xd5a: V1173 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd5c: V1174 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xd5d: V1175 = 0x0
0xd61: M[0x0] = V1174
0xd62: V1176 = 0x2
0xd64: V1177 = 0x20
0xd68: M[0x20] = 0x2
0xd69: V1178 = 0x40
0xd6e: V1179 = SHA3 0x0 0x40
0xd72: S[V1179] = S0
0xd74: V1180 = M[0x40]
0xd77: M[V1180] = S2
0xd79: V1181 = M[0x40]
0xd7c: V1182 = 0x8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77
0xda1: V1183 = SUB V1180 V1181
0xda2: V1184 = ADD V1183 0x20
0xda4: LOG V1181 V1184 0x8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a77 V1174
0xda5: V1185 = 0x40
0xda8: V1186 = M[0x40]
0xdab: M[V1186] = S2
0xdad: V1187 = M[0x40]
0xdae: V1188 = 0x1
0xdb0: V1189 = 0xa0
0xdb2: V1190 = 0x2
0xdb4: V1191 = EXP 0x2 0xa0
0xdb5: V1192 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb7: V1193 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xdb9: V1194 = 0x0
0xdbc: V1195 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xde0: V1196 = SUB V1186 V1187
0xde1: V1197 = 0x20
0xde3: V1198 = ADD 0x20 V1196
0xde5: LOG V1187 V1198 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef 0x0 V1193
0xde7: V1199 = 0x1
0xde9: V1200 = 0x599
0xdec: JUMP 0x599
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, 0x1]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, 0x1]

================================

Block 0xded
[0xded:0xdf9]
---
Predecessors: [0x48d]
Successors: [0xdfa, 0xdfb]
---
0xded JUMPDEST
0xdee PUSH1 0x0
0xdf0 DUP1
0xdf1 DUP3
0xdf2 DUP5
0xdf3 DUP2
0xdf4 ISZERO
0xdf5 ISZERO
0xdf6 PUSH2 0xdfb
0xdf9 JUMPI
---
0xded: JUMPDEST 
0xdee: V1201 = 0x0
0xdf4: V1202 = ISZERO 0x186a0
0xdf5: V1203 = ISZERO 0x0
0xdf6: V1204 = 0xdfb
0xdf9: JUMPI 0xdfb 0x1
---
Entry stack: [V13, S7, S6, S5, 0x4b8, 0x1869f, 0x4ac, V428, 0x186a0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V13, S7, S6, S5, 0x4b8, 0x1869f, 0x4ac, V428, 0x186a0, 0x0, 0x0, 0x186a0, V428]

================================

Block 0xdfa
[0xdfa:0xdfa]
---
Predecessors: [0xded]
Successors: []
---
0xdfa INVALID
---
0xdfa: INVALID 
---
Entry stack: [V13, S11, S10, S9, 0x4b8, 0x1869f, 0x4ac, V428, 0x186a0, 0x0, 0x0, 0x186a0, V428]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, 0x4b8, 0x1869f, 0x4ac, V428, 0x186a0, 0x0, 0x0, 0x186a0, V428]

================================

Block 0xdfb
[0xdfb:0xe03]
---
Predecessors: [0xded]
Successors: [0x4ac]
---
0xdfb JUMPDEST
0xdfc DIV
0xdfd SWAP5
0xdfe SWAP4
0xdff POP
0xe00 POP
0xe01 POP
0xe02 POP
0xe03 JUMP
---
0xdfb: JUMPDEST 
0xdfc: V1205 = DIV V428 0x186a0
0xe03: JUMP 0x4ac
---
Entry stack: [V13, S11, S10, S9, 0x4b8, 0x1869f, 0x4ac, V428, 0x186a0, 0x0, 0x0, 0x186a0, V428]
Stack pops: 7
Stack additions: [V1205]
Exit stack: [V13, S11, S10, S9, 0x4b8, 0x1869f, V1205]

================================

Block 0xe04
[0xe04:0xe10]
---
Predecessors: [0x4ac]
Successors: [0xe11, 0xe20]
---
0xe04 JUMPDEST
0xe05 PUSH1 0x0
0xe07 DUP3
0xe08 DUP3
0xe09 MUL
0xe0a DUP4
0xe0b ISZERO
0xe0c DUP1
0xe0d PUSH2 0xe20
0xe10 JUMPI
---
0xe04: JUMPDEST 
0xe05: V1206 = 0x0
0xe09: V1207 = MUL 0x1869f V1205
0xe0b: V1208 = ISZERO V1205
0xe0d: V1209 = 0xe20
0xe10: JUMPI 0xe20 V1208
---
Entry stack: [V13, 0x10b, V386, S3, 0x4b8, V1205, 0x1869f]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1207, V1208]
Exit stack: [V13, 0x10b, V386, S3, 0x4b8, V1205, 0x1869f, 0x0, V1207, V1208]

================================

Block 0xe11
[0xe11:0xe1b]
---
Predecessors: [0xe04]
Successors: [0xe1c, 0xe1d]
---
0xe11 POP
0xe12 DUP3
0xe13 DUP5
0xe14 DUP3
0xe15 DUP2
0xe16 ISZERO
0xe17 ISZERO
0xe18 PUSH2 0xe1d
0xe1b JUMPI
---
0xe16: V1210 = ISZERO V1205
0xe17: V1211 = ISZERO V1210
0xe18: V1212 = 0xe1d
0xe1b: JUMPI 0xe1d V1211
---
Entry stack: [V13, 0x10b, V386, S6, 0x4b8, V1205, 0x1869f, 0x0, V1207, V1208]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V13, 0x10b, V386, S6, 0x4b8, V1205, 0x1869f, 0x0, V1207, 0x1869f, V1205, V1207]

================================

Block 0xe1c
[0xe1c:0xe1c]
---
Predecessors: [0xe11]
Successors: []
---
0xe1c INVALID
---
0xe1c: INVALID 
---
Entry stack: [V13, 0x10b, V386, S8, 0x4b8, V1205, 0x1869f, 0x0, V1207, 0x1869f, V1205, V1207]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, V386, S8, 0x4b8, V1205, 0x1869f, 0x0, V1207, 0x1869f, V1205, V1207]

================================

Block 0xe1d
[0xe1d:0xe1f]
---
Predecessors: [0xe11]
Successors: [0xe20]
---
0xe1d JUMPDEST
0xe1e DIV
0xe1f EQ
---
0xe1d: JUMPDEST 
0xe1e: V1213 = DIV V1207 V1205
0xe1f: V1214 = EQ V1213 0x1869f
---
Entry stack: [V13, 0x10b, V386, S8, 0x4b8, V1205, 0x1869f, 0x0, V1207, 0x1869f, V1205, V1207]
Stack pops: 3
Stack additions: [V1214]
Exit stack: [V13, 0x10b, V386, S8, 0x4b8, V1205, 0x1869f, 0x0, V1207, V1214]

================================

Block 0xe20
[0xe20:0xe26]
---
Predecessors: [0xe04, 0xe1d]
Successors: [0xe27, 0xe28]
---
0xe20 JUMPDEST
0xe21 ISZERO
0xe22 ISZERO
0xe23 PUSH2 0xe28
0xe26 JUMPI
---
0xe20: JUMPDEST 
0xe21: V1215 = ISZERO S0
0xe22: V1216 = ISZERO V1215
0xe23: V1217 = 0xe28
0xe26: JUMPI 0xe28 V1216
---
Entry stack: [V13, 0x10b, V386, S6, 0x4b8, V1205, 0x1869f, 0x0, V1207, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x10b, V386, S6, 0x4b8, V1205, 0x1869f, 0x0, V1207]

================================

Block 0xe27
[0xe27:0xe27]
---
Predecessors: [0xe20]
Successors: []
---
0xe27 INVALID
---
0xe27: INVALID 
---
Entry stack: [V13, 0x10b, V386, V385, 0x4b8, V1205, 0x1869f, 0x0, V1207]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x10b, V386, V385, 0x4b8, V1205, 0x1869f, 0x0, V1207]

================================

Block 0xe28
[0xe28:0xe2e]
---
Predecessors: [0xe20, 0xe41]
Successors: [0x4b8, 0x6d3, 0x9f3, 0xd10, 0xd52]
---
0xe28 JUMPDEST
0xe29 SWAP4
0xe2a SWAP3
0xe2b POP
0xe2c POP
0xe2d POP
0xe2e JUMP
---
0xe28: JUMPDEST 
0xe2e: JUMP {0x4b8, 0x6d3, 0x9f3, 0xd10, 0xd52}
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x4b8, 0x6d3, 0x9f3, 0xd10, 0xd52}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S0]

================================

Block 0xe2f
[0xe2f:0xe39]
---
Predecessors: [0x621, 0x64a, 0x7e3, 0x808, 0x834, 0x995, 0xd10]
Successors: [0xe3a, 0xe3b]
---
0xe2f JUMPDEST
0xe30 PUSH1 0x0
0xe32 DUP3
0xe33 DUP3
0xe34 GT
0xe35 ISZERO
0xe36 PUSH2 0xe3b
0xe39 JUMPI
---
0xe2f: JUMPDEST 
0xe30: V1218 = 0x0
0xe34: V1219 = GT S0 S1
0xe35: V1220 = ISZERO V1219
0xe36: V1221 = 0xe3b
0xe39: JUMPI 0xe3b V1220
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x64a, 0x68d, 0x808, 0x834, 0x84a, 0x9be, 0xd26}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x64a, 0x68d, 0x808, 0x834, 0x84a, 0x9be, 0xd26}, S1, S0, 0x0]

================================

Block 0xe3a
[0xe3a:0xe3a]
---
Predecessors: [0xe2f]
Successors: []
---
0xe3a INVALID
---
0xe3a: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x64a, 0x68d, 0x808, 0x834, 0x84a, 0x9be, 0xd26}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x64a, 0x68d, 0x808, 0x834, 0x84a, 0x9be, 0xd26}, S2, S1, 0x0]

================================

Block 0xe3b
[0xe3b:0xe40]
---
Predecessors: [0xe2f]
Successors: [0x64a, 0x68d, 0x808, 0x834, 0x84a, 0x9be, 0xd26]
---
0xe3b JUMPDEST
0xe3c POP
0xe3d SWAP1
0xe3e SUB
0xe3f SWAP1
0xe40 JUMP
---
0xe3b: JUMPDEST 
0xe3e: V1222 = SUB S2 S1
0xe40: JUMP {0x64a, 0x68d, 0x808, 0x834, 0x84a, 0x9be, 0xd26}
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x64a, 0x68d, 0x808, 0x834, 0x84a, 0x9be, 0xd26}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1222]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, V1222]

================================

Block 0xe41
[0xe41:0xe4e]
---
Predecessors: [0x68d, 0x9be, 0xcfd, 0xd26]
Successors: [0xe28, 0xe4f]
---
0xe41 JUMPDEST
0xe42 PUSH1 0x0
0xe44 DUP3
0xe45 DUP3
0xe46 ADD
0xe47 DUP4
0xe48 DUP2
0xe49 LT
0xe4a ISZERO
0xe4b PUSH2 0xe28
0xe4e JUMPI
---
0xe41: JUMPDEST 
0xe42: V1223 = 0x0
0xe46: V1224 = ADD S0 S1
0xe49: V1225 = LT V1224 S1
0xe4a: V1226 = ISZERO V1225
0xe4b: V1227 = 0xe28
0xe4e: JUMPI 0xe28 V1226
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x6d3, 0x9f3, 0xd10, 0xd52}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1224]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x6d3, 0x9f3, 0xd10, 0xd52}, S1, S0, 0x0, V1224]

================================

Block 0xe4f
[0xe4f:0xe4f]
---
Predecessors: [0xe41]
Successors: []
---
0xe4f INVALID
---
0xe4f: INVALID 
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x6d3, 0x9f3, 0xd10, 0xd52}, S3, S2, 0x0, V1224]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x6d3, 0x9f3, 0xd10, 0xd52}, S3, S2, 0x0, V1224]

================================

Block 0xe50
[0xe50:0xe83]
---
Predecessors: []
Successors: []
---
0xe50 STOP
0xe51 LOG1
0xe52 PUSH6 0x627a7a723058
0xe59 SHA3
0xe5a MISSING 0xb7
0xe5b SHL
0xe5c MISSING 0xe0
0xe5d MISSING 0xbf
0xe5e MISSING 0xc
0xe5f MISSING 0x22
0xe60 DIFFICULTY
0xe61 ORIGIN
0xe62 CALLER
0xe63 CREATE
0xe64 PUSH7 0xece2b29233f65
0xe6c COINBASE
0xe6d EQ
0xe6e MISSING 0x5c
0xe6f SWAP11
0xe70 MISSING 0x5d
0xe71 PUSH18 0x730de819f6da31160029
---
0xe50: STOP 
0xe51: LOG S0 S1 S2
0xe52: V1228 = 0x627a7a723058
0xe59: V1229 = SHA3 0x627a7a723058 S3
0xe5a: MISSING 0xb7
0xe5b: V1230 = SHL S0 S1
0xe5c: MISSING 0xe0
0xe5d: MISSING 0xbf
0xe5e: MISSING 0xc
0xe5f: MISSING 0x22
0xe60: V1231 = DIFFICULTY
0xe61: V1232 = ORIGIN
0xe62: V1233 = CALLER
0xe63: V1234 = CREATE V1233 V1232 V1231
0xe64: V1235 = 0xece2b29233f65
0xe6c: V1236 = COINBASE
0xe6d: V1237 = EQ V1236 0xece2b29233f65
0xe6e: MISSING 0x5c
0xe70: MISSING 0x5d
0xe71: V1238 = 0x730de819f6da31160029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1229, V1230, V1237, V1234, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, 0x730de819f6da31160029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x10d
Exit block: 0x189
Body: 0x10d, 0x115, 0x119, 0x122, 0x144, 0x14d, 0x15c, 0x170, 0x189, 0x4bf

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x197
Exit block: 0x10b
Body: 0x10b, 0x197, 0x19f, 0x1a3, 0x1bb, 0x446, 0x451, 0x474, 0x480, 0x48d, 0x4ac, 0x4b8, 0x4f6, 0x502, 0x52b, 0x531, 0x538, 0x599, 0xded, 0xdfa, 0xdfb, 0xe04, 0xe11, 0xe1c, 0xe1d, 0xe20, 0xe27

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1cf
Exit block: 0x1e4
Body: 0x1cf, 0x1d7, 0x1db, 0x1e4, 0x59f

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1f6
Exit block: 0xe4f
Body: 0x1f6, 0x1fe, 0x202, 0x5a5, 0x5b3, 0x5b4, 0x5c5, 0x5c9, 0x5ea, 0x5ee, 0x61d, 0x621, 0x64a, 0xe4f

Function 4:
Public function signature: 0x313ce567
Entry block: 0x220
Exit block: 0x1e4
Body: 0x1e4, 0x220, 0x228, 0x22c, 0x735

Function 5:
Public function signature: 0x3ccfd60b
Entry block: 0x235
Exit block: 0x10b
Body: 0x10b, 0x235, 0x23d, 0x241, 0x73a, 0x754, 0x758, 0x78d, 0x796

Function 6:
Public function signature: 0x3fa4f245
Entry block: 0x24a
Exit block: 0x1e4
Body: 0x1e4, 0x24a, 0x252, 0x256, 0x79a

Function 7:
Public function signature: 0x42966c68
Entry block: 0x25f
Exit block: 0xe4f
Body: 0x25f, 0x267, 0x26b, 0x7a0, 0x7ba, 0x7be, 0x7df, 0x7e3, 0x808, 0xe4f

Function 8:
Public function signature: 0x70a08231
Entry block: 0x277
Exit block: 0x1e4
Body: 0x1e4, 0x277, 0x27f, 0x283, 0x890

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x298
Exit block: 0x189
Body: 0x122, 0x144, 0x14d, 0x15c, 0x170, 0x189, 0x298, 0x2a0, 0x2a4, 0x8ab

Function 10:
Public function signature: 0x9b1cbccc
Entry block: 0x2ad
Exit block: 0x1bb
Body: 0x1bb, 0x2ad, 0x2b5, 0x2b9, 0x8e2, 0x8fc, 0x900, 0x90c, 0x910

Function 11:
Public function signature: 0xa9059cbb
Entry block: 0x2c2
Exit block: 0xe4f
Body: 0x2c2, 0x2ca, 0x2ce, 0x94c, 0x95a, 0x95b, 0x96c, 0x970, 0x991, 0x995, 0x9be, 0xe4f

Function 12:
Public function signature: 0xaa6ca808
Entry block: 0x103
Exit block: 0xe4f
Body: 0x103, 0x3d6, 0x3e7, 0x3eb, 0x40d, 0x411, 0x41e, 0x424, 0x431, 0x435, 0xcea, 0xcf9, 0xcfd, 0xd10, 0xe4f

Function 13:
Public function signature: 0xc108d542
Entry block: 0x2e6
Exit block: 0x1bb
Body: 0x1bb, 0x2e6, 0x2ee, 0x2f2, 0xa55

Function 14:
Public function signature: 0xc489744b
Entry block: 0x2fb
Exit block: 0x1e4
Body: 0x1e4, 0x2fb, 0x303, 0x307, 0xa5e, 0xabd, 0xac1, 0xacc, 0xad5, 0xae7, 0xaeb

Function 15:
Public function signature: 0xd8a54360
Entry block: 0x322
Exit block: 0x1e4
Body: 0x1e4, 0x322, 0x32a, 0x32e, 0xaf6

Function 16:
Public function signature: 0xdd62ed3e
Entry block: 0x337
Exit block: 0x1e4
Body: 0x1e4, 0x337, 0x33f, 0x343, 0xafc

Function 17:
Public function signature: 0xe58fc54c
Entry block: 0x35e
Exit block: 0x1bb
Body: 0x1bb, 0x35e, 0x366, 0x36a, 0xb27, 0xb45, 0xb49, 0xba3, 0xba7, 0xbb2, 0xbbb, 0xbcd, 0xbd1, 0xc41, 0xc45, 0xc50, 0xc59, 0xc6b, 0xc6f

Function 18:
Public function signature: 0xefca2eed
Entry block: 0x37f
Exit block: 0x1e4
Body: 0x1e4, 0x37f, 0x387, 0x38b, 0xc79

Function 19:
Public function signature: 0xf2fde38b
Entry block: 0x394
Exit block: 0x10b
Body: 0x10b, 0x394, 0x39c, 0x3a0, 0xc7f, 0xc96, 0xc9a, 0xcaa, 0xcd2

Function 20:
Public function signature: 0xf9f92be4
Entry block: 0x3b5
Exit block: 0x1bb
Body: 0x1bb, 0x3b5, 0x3bd, 0x3c1, 0xcd5

Function 21:
Public fallback function
Entry block: 0x103
Exit block: 0xe4f
Body: 0x103, 0x3d6, 0x3e7, 0x3eb, 0x40d, 0x411, 0x41e, 0x424, 0x431, 0x435, 0xcea, 0xcf9, 0xcfd, 0xd10, 0xe4f

Function 22:
Private function
Entry block: 0xe41
Exit block: 0xe28
Body: 0xe28, 0xe41

Function 23:
Private function
Entry block: 0xe2f
Exit block: 0xe3b
Body: 0xe2f, 0xe3b

