Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3853682c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3853682c
0x3b: V13 = EQ V11 0x3853682c
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x8c]
---
0x40 DUP1
0x41 PUSH4 0x3e3ee859
0x46 EQ
0x47 PUSH2 0x8c
0x4a JUMPI
---
0x41: V15 = 0x3e3ee859
0x46: V16 = EQ 0x3e3ee859 V11
0x47: V17 = 0x8c
0x4a: JUMPI 0x8c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xda]
---
0x4b DUP1
0x4c PUSH4 0x3fad9ae0
0x51 EQ
0x52 PUSH2 0xda
0x55 JUMPI
---
0x4c: V18 = 0x3fad9ae0
0x51: V19 = EQ 0x3fad9ae0 V11
0x52: V20 = 0xda
0x55: JUMPI 0xda V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x164]
---
0x56 DUP1
0x57 PUSH4 0x59988dce
0x5c EQ
0x5d PUSH2 0x164
0x60 JUMPI
---
0x57: V21 = 0x59988dce
0x5c: V22 = EQ 0x59988dce V11
0x5d: V23 = 0x164
0x60: JUMPI 0x164 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x192]
---
0x61 DUP1
0x62 PUSH4 0xe200259e
0x67 EQ
0x68 PUSH2 0x192
0x6b JUMPI
---
0x62: V24 = 0xe200259e
0x67: V25 = EQ 0xe200259e V11
0x68: V26 = 0x192
0x6b: JUMPI 0x192 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x221]
---
0x6c DUP1
0x6d PUSH4 0xf50ab247
0x72 EQ
0x73 PUSH2 0x221
0x76 JUMPI
---
0x6d: V27 = 0xf50ab247
0x72: V28 = EQ 0xf50ab247 V11
0x73: V29 = 0x221
0x76: JUMPI 0x221 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x29e, 0x2d5, 0x3c0, 0x44c, 0x541, 0x55f]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x79
[0x79:0x8b]
---
Predecessors: [0xd]
Successors: [0x229]
---
0x79 JUMPDEST
0x7a PUSH2 0x77
0x7d PUSH1 0x4
0x7f DUP1
0x80 CALLDATALOAD
0x81 PUSH1 0x24
0x83 DUP2
0x84 ADD
0x85 SWAP2
0x86 ADD
0x87 CALLDATALOAD
0x88 PUSH2 0x229
0x8b JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x77
0x7d: V31 = 0x4
0x80: V32 = CALLDATALOAD 0x4
0x81: V33 = 0x24
0x84: V34 = ADD V32 0x24
0x86: V35 = ADD 0x4 V32
0x87: V36 = CALLDATALOAD V35
0x88: V37 = 0x229
0x8b: JUMP 0x229
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V34, V36]
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x8c
[0x8c:0xd9]
---
Predecessors: [0x40]
Successors: [0x2a2]
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f DUP1
0x90 MLOAD
0x91 PUSH1 0x20
0x93 PUSH1 0x4
0x95 DUP1
0x96 CALLDATALOAD
0x97 DUP1
0x98 DUP3
0x99 ADD
0x9a CALLDATALOAD
0x9b PUSH1 0x1f
0x9d DUP2
0x9e ADD
0x9f DUP5
0xa0 SWAP1
0xa1 DIV
0xa2 DUP5
0xa3 MUL
0xa4 DUP6
0xa5 ADD
0xa6 DUP5
0xa7 ADD
0xa8 SWAP1
0xa9 SWAP6
0xaa MSTORE
0xab DUP5
0xac DUP5
0xad MSTORE
0xae PUSH2 0x77
0xb1 SWAP5
0xb2 CALLDATASIZE
0xb3 SWAP5
0xb4 SWAP3
0xb5 SWAP4
0xb6 PUSH1 0x24
0xb8 SWAP4
0xb9 SWAP3
0xba DUP5
0xbb ADD
0xbc SWAP2
0xbd SWAP1
0xbe DUP2
0xbf SWAP1
0xc0 DUP5
0xc1 ADD
0xc2 DUP4
0xc3 DUP3
0xc4 DUP1
0xc5 DUP3
0xc6 DUP5
0xc7 CALLDATACOPY
0xc8 POP
0xc9 SWAP5
0xca SWAP8
0xcb POP
0xcc POP
0xcd SWAP4
0xce CALLDATALOAD
0xcf SWAP5
0xd0 POP
0xd1 PUSH2 0x2a2
0xd4 SWAP4
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 POP
0xd9 JUMP
---
0x8c: JUMPDEST 
0x8d: V38 = 0x40
0x90: V39 = M[0x40]
0x91: V40 = 0x20
0x93: V41 = 0x4
0x96: V42 = CALLDATALOAD 0x4
0x99: V43 = ADD 0x4 V42
0x9a: V44 = CALLDATALOAD V43
0x9b: V45 = 0x1f
0x9e: V46 = ADD V44 0x1f
0xa1: V47 = DIV V46 0x20
0xa3: V48 = MUL 0x20 V47
0xa5: V49 = ADD V39 V48
0xa7: V50 = ADD 0x20 V49
0xaa: M[0x40] = V50
0xad: M[V39] = V44
0xae: V51 = 0x77
0xb2: V52 = CALLDATASIZE
0xb6: V53 = 0x24
0xbb: V54 = ADD 0x24 V42
0xc1: V55 = ADD V39 0x20
0xc7: CALLDATACOPY V55 V54 V44
0xce: V56 = CALLDATALOAD 0x24
0xd1: V57 = 0x2a2
0xd9: JUMP 0x2a2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V39, V56]
Exit stack: [V11, 0x77, V39, V56]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0x4b]
Successors: [0xe2, 0xe6]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc DUP1
0xdd ISZERO
0xde PUSH2 0xe6
0xe1 JUMPI
---
0xda: JUMPDEST 
0xdb: V58 = CALLVALUE
0xdd: V59 = ISZERO V58
0xde: V60 = 0xe6
0xe1: JUMPI 0xe6 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xe2
[0xe2:0xe5]
---
Predecessors: [0xda]
Successors: []
---
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe2: V61 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xe6
[0xe6:0xee]
---
Predecessors: [0xda]
Successors: [0x2dc]
---
0xe6 JUMPDEST
0xe7 POP
0xe8 PUSH2 0xef
0xeb PUSH2 0x2dc
0xee JUMP
---
0xe6: JUMPDEST 
0xe8: V62 = 0xef
0xeb: V63 = 0x2dc
0xee: JUMP 0x2dc
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xef]
Exit stack: [V11, 0xef]

================================

Block 0xef
[0xef:0x110]
---
Predecessors: [0x362]
Successors: [0x111]
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 DUP1
0xf3 MLOAD
0xf4 PUSH1 0x20
0xf6 DUP1
0xf7 DUP3
0xf8 MSTORE
0xf9 DUP4
0xfa MLOAD
0xfb DUP2
0xfc DUP4
0xfd ADD
0xfe MSTORE
0xff DUP4
0x100 MLOAD
0x101 SWAP2
0x102 SWAP3
0x103 DUP4
0x104 SWAP3
0x105 SWAP1
0x106 DUP4
0x107 ADD
0x108 SWAP2
0x109 DUP6
0x10a ADD
0x10b SWAP1
0x10c DUP1
0x10d DUP4
0x10e DUP4
0x10f PUSH1 0x0
---
0xef: JUMPDEST 
0xf0: V64 = 0x40
0xf3: V65 = M[0x40]
0xf4: V66 = 0x20
0xf8: M[V65] = 0x20
0xfa: V67 = M[V207]
0xfd: V68 = ADD V65 0x20
0xfe: M[V68] = V67
0x100: V69 = M[V207]
0x107: V70 = ADD V65 0x40
0x10a: V71 = ADD V207 0x20
0x10f: V72 = 0x0
---
Entry stack: [V11, 0xef, V207]
Stack pops: 1
Stack additions: [S0, V65, V65, V70, V71, V69, V69, V70, V71, 0x0]
Exit stack: [V11, 0xef, V207, V65, V65, V70, V71, V69, V69, V70, V71, 0x0]

================================

Block 0x111
[0x111:0x119]
---
Predecessors: [0xef, 0x11a]
Successors: [0x11a, 0x129]
---
0x111 JUMPDEST
0x112 DUP4
0x113 DUP2
0x114 LT
0x115 ISZERO
0x116 PUSH2 0x129
0x119 JUMPI
---
0x111: JUMPDEST 
0x114: V73 = LT S0 V69
0x115: V74 = ISZERO V73
0x116: V75 = 0x129
0x119: JUMPI 0x129 V74
---
Entry stack: [V11, 0xef, V207, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xef, V207, V65, V65, V70, V71, V69, V69, V70, V71, S0]

================================

Block 0x11a
[0x11a:0x128]
---
Predecessors: [0x111]
Successors: [0x111]
---
0x11a DUP2
0x11b DUP2
0x11c ADD
0x11d MLOAD
0x11e DUP4
0x11f DUP3
0x120 ADD
0x121 MSTORE
0x122 PUSH1 0x20
0x124 ADD
0x125 PUSH2 0x111
0x128 JUMP
---
0x11c: V76 = ADD S0 V71
0x11d: V77 = M[V76]
0x120: V78 = ADD S0 V70
0x121: M[V78] = V77
0x122: V79 = 0x20
0x124: V80 = ADD 0x20 S0
0x125: V81 = 0x111
0x128: JUMP 0x111
---
Entry stack: [V11, 0xef, V207, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 3
Stack additions: [S2, S1, V80]
Exit stack: [V11, 0xef, V207, V65, V65, V70, V71, V69, V69, V70, V71, V80]

================================

Block 0x129
[0x129:0x13c]
---
Predecessors: [0x111]
Successors: [0x13d, 0x156]
---
0x129 JUMPDEST
0x12a POP
0x12b POP
0x12c POP
0x12d POP
0x12e SWAP1
0x12f POP
0x130 SWAP1
0x131 DUP2
0x132 ADD
0x133 SWAP1
0x134 PUSH1 0x1f
0x136 AND
0x137 DUP1
0x138 ISZERO
0x139 PUSH2 0x156
0x13c JUMPI
---
0x129: JUMPDEST 
0x132: V82 = ADD V69 V70
0x134: V83 = 0x1f
0x136: V84 = AND 0x1f V69
0x138: V85 = ISZERO V84
0x139: V86 = 0x156
0x13c: JUMPI 0x156 V85
---
Entry stack: [V11, 0xef, V207, V65, V65, V70, V71, V69, V69, V70, V71, S0]
Stack pops: 7
Stack additions: [V82, V84]
Exit stack: [V11, 0xef, V207, V65, V65, V82, V84]

================================

Block 0x13d
[0x13d:0x155]
---
Predecessors: [0x129]
Successors: [0x156]
---
0x13d DUP1
0x13e DUP3
0x13f SUB
0x140 DUP1
0x141 MLOAD
0x142 PUSH1 0x1
0x144 DUP4
0x145 PUSH1 0x20
0x147 SUB
0x148 PUSH2 0x100
0x14b EXP
0x14c SUB
0x14d NOT
0x14e AND
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP2
0x155 POP
---
0x13f: V87 = SUB V82 V84
0x141: V88 = M[V87]
0x142: V89 = 0x1
0x145: V90 = 0x20
0x147: V91 = SUB 0x20 V84
0x148: V92 = 0x100
0x14b: V93 = EXP 0x100 V91
0x14c: V94 = SUB V93 0x1
0x14d: V95 = NOT V94
0x14e: V96 = AND V95 V88
0x150: M[V87] = V96
0x151: V97 = 0x20
0x153: V98 = ADD 0x20 V87
---
Entry stack: [V11, 0xef, V207, V65, V65, V82, V84]
Stack pops: 2
Stack additions: [V98, S0]
Exit stack: [V11, 0xef, V207, V65, V65, V98, V84]

================================

Block 0x156
[0x156:0x163]
---
Predecessors: [0x129, 0x13d]
Successors: []
---
0x156 JUMPDEST
0x157 POP
0x158 SWAP3
0x159 POP
0x15a POP
0x15b POP
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 SWAP2
0x161 SUB
0x162 SWAP1
0x163 RETURN
---
0x156: JUMPDEST 
0x15c: V99 = 0x40
0x15e: V100 = M[0x40]
0x161: V101 = SUB S1 V100
0x163: RETURN V100 V101
---
Entry stack: [V11, 0xef, V207, V65, V65, S1, V84]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xef]

================================

Block 0x164
[0x164:0x16b]
---
Predecessors: [0x56]
Successors: [0x16c, 0x170]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 DUP1
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x164: JUMPDEST 
0x165: V102 = CALLVALUE
0x167: V103 = ISZERO V102
0x168: V104 = 0x170
0x16b: JUMPI 0x170 V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V11, V102]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x164]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V105 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V11, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V102]

================================

Block 0x170
[0x170:0x191]
---
Predecessors: [0x164]
Successors: [0x36a]
---
0x170 JUMPDEST
0x171 POP
0x172 PUSH2 0x77
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a PUSH1 0x4
0x18c CALLDATALOAD
0x18d AND
0x18e PUSH2 0x36a
0x191 JUMP
---
0x170: JUMPDEST 
0x172: V106 = 0x77
0x175: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V108 = 0x4
0x18c: V109 = CALLDATALOAD 0x4
0x18d: V110 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V111 = 0x36a
0x191: JUMP 0x36a
---
Entry stack: [V11, V102]
Stack pops: 1
Stack additions: [0x77, V110]
Exit stack: [V11, 0x77, V110]

================================

Block 0x192
[0x192:0x220]
---
Predecessors: [0x61]
Successors: [0x3c3]
---
0x192 JUMPDEST
0x193 PUSH1 0x40
0x195 DUP1
0x196 MLOAD
0x197 PUSH1 0x20
0x199 PUSH1 0x4
0x19b PUSH1 0x24
0x19d DUP1
0x19e CALLDATALOAD
0x19f DUP3
0x1a0 DUP2
0x1a1 ADD
0x1a2 CALLDATALOAD
0x1a3 PUSH1 0x1f
0x1a5 DUP2
0x1a6 ADD
0x1a7 DUP6
0x1a8 SWAP1
0x1a9 DIV
0x1aa DUP6
0x1ab MUL
0x1ac DUP7
0x1ad ADD
0x1ae DUP6
0x1af ADD
0x1b0 SWAP1
0x1b1 SWAP7
0x1b2 MSTORE
0x1b3 DUP6
0x1b4 DUP6
0x1b5 MSTORE
0x1b6 PUSH2 0x77
0x1b9 SWAP6
0x1ba DUP4
0x1bb CALLDATALOAD
0x1bc SWAP6
0x1bd CALLDATASIZE
0x1be SWAP6
0x1bf PUSH1 0x44
0x1c1 SWAP5
0x1c2 SWAP2
0x1c3 SWAP4
0x1c4 SWAP1
0x1c5 SWAP2
0x1c6 ADD
0x1c7 SWAP2
0x1c8 SWAP1
0x1c9 DUP2
0x1ca SWAP1
0x1cb DUP5
0x1cc ADD
0x1cd DUP4
0x1ce DUP3
0x1cf DUP1
0x1d0 DUP3
0x1d1 DUP5
0x1d2 CALLDATACOPY
0x1d3 POP
0x1d4 POP
0x1d5 PUSH1 0x40
0x1d7 DUP1
0x1d8 MLOAD
0x1d9 PUSH1 0x20
0x1db PUSH1 0x1f
0x1dd DUP10
0x1de CALLDATALOAD
0x1df DUP12
0x1e0 ADD
0x1e1 DUP1
0x1e2 CALLDATALOAD
0x1e3 SWAP2
0x1e4 DUP3
0x1e5 ADD
0x1e6 DUP4
0x1e7 SWAP1
0x1e8 DIV
0x1e9 DUP4
0x1ea MUL
0x1eb DUP5
0x1ec ADD
0x1ed DUP4
0x1ee ADD
0x1ef SWAP1
0x1f0 SWAP5
0x1f1 MSTORE
0x1f2 DUP1
0x1f3 DUP4
0x1f4 MSTORE
0x1f5 SWAP8
0x1f6 SWAP11
0x1f7 SWAP10
0x1f8 SWAP9
0x1f9 DUP2
0x1fa ADD
0x1fb SWAP8
0x1fc SWAP2
0x1fd SWAP7
0x1fe POP
0x1ff SWAP2
0x200 DUP3
0x201 ADD
0x202 SWAP5
0x203 POP
0x204 SWAP3
0x205 POP
0x206 DUP3
0x207 SWAP2
0x208 POP
0x209 DUP5
0x20a ADD
0x20b DUP4
0x20c DUP3
0x20d DUP1
0x20e DUP3
0x20f DUP5
0x210 CALLDATACOPY
0x211 POP
0x212 SWAP5
0x213 SWAP8
0x214 POP
0x215 PUSH2 0x3c3
0x218 SWAP7
0x219 POP
0x21a POP
0x21b POP
0x21c POP
0x21d POP
0x21e POP
0x21f POP
0x220 JUMP
---
0x192: JUMPDEST 
0x193: V112 = 0x40
0x196: V113 = M[0x40]
0x197: V114 = 0x20
0x199: V115 = 0x4
0x19b: V116 = 0x24
0x19e: V117 = CALLDATALOAD 0x24
0x1a1: V118 = ADD V117 0x4
0x1a2: V119 = CALLDATALOAD V118
0x1a3: V120 = 0x1f
0x1a6: V121 = ADD V119 0x1f
0x1a9: V122 = DIV V121 0x20
0x1ab: V123 = MUL 0x20 V122
0x1ad: V124 = ADD V113 V123
0x1af: V125 = ADD 0x20 V124
0x1b2: M[0x40] = V125
0x1b5: M[V113] = V119
0x1b6: V126 = 0x77
0x1bb: V127 = CALLDATALOAD 0x4
0x1bd: V128 = CALLDATASIZE
0x1bf: V129 = 0x44
0x1c6: V130 = ADD 0x24 V117
0x1cc: V131 = ADD V113 0x20
0x1d2: CALLDATACOPY V131 V130 V119
0x1d5: V132 = 0x40
0x1d8: V133 = M[0x40]
0x1d9: V134 = 0x20
0x1db: V135 = 0x1f
0x1de: V136 = CALLDATALOAD 0x44
0x1e0: V137 = ADD 0x4 V136
0x1e2: V138 = CALLDATALOAD V137
0x1e5: V139 = ADD V138 0x1f
0x1e8: V140 = DIV V139 0x20
0x1ea: V141 = MUL 0x20 V140
0x1ec: V142 = ADD V133 V141
0x1ee: V143 = ADD 0x20 V142
0x1f1: M[0x40] = V143
0x1f4: M[V133] = V138
0x1fa: V144 = ADD 0x20 0x44
0x201: V145 = ADD 0x20 V137
0x20a: V146 = ADD V133 0x20
0x210: CALLDATACOPY V146 V145 V138
0x215: V147 = 0x3c3
0x220: JUMP 0x3c3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V127, V113, V133]
Exit stack: [V11, 0x77, V127, V113, V133]

================================

Block 0x221
[0x221:0x228]
---
Predecessors: [0x6c]
Successors: [0x476]
---
0x221 JUMPDEST
0x222 PUSH2 0x77
0x225 PUSH2 0x476
0x228 JUMP
---
0x221: JUMPDEST 
0x222: V148 = 0x77
0x225: V149 = 0x476
0x228: JUMP 0x476
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x229
[0x229:0x230]
---
Predecessors: [0x79]
Successors: [0x231, 0x235]
---
0x229 JUMPDEST
0x22a CALLER
0x22b ORIGIN
0x22c EQ
0x22d PUSH2 0x235
0x230 JUMPI
---
0x229: JUMPDEST 
0x22a: V150 = CALLER
0x22b: V151 = ORIGIN
0x22c: V152 = EQ V151 V150
0x22d: V153 = 0x235
0x230: JUMPI 0x235 V152
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x229]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V154 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x235
[0x235:0x25d]
---
Predecessors: [0x229]
Successors: [0x25e, 0x26a]
---
0x235 JUMPDEST
0x236 DUP2
0x237 DUP2
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c DUP4
0x23d DUP4
0x23e DUP1
0x23f DUP3
0x240 DUP5
0x241 CALLDATACOPY
0x242 PUSH1 0x40
0x244 MLOAD
0x245 SWAP3
0x246 ADD
0x247 DUP3
0x248 SWAP1
0x249 SUB
0x24a SWAP1
0x24b SWAP2
0x24c SHA3
0x24d PUSH1 0x2
0x24f SLOAD
0x250 EQ
0x251 SWAP4
0x252 POP
0x253 POP
0x254 DUP3
0x255 ISZERO
0x256 SWAP2
0x257 POP
0x258 PUSH2 0x26a
0x25b SWAP1
0x25c POP
0x25d JUMPI
---
0x235: JUMPDEST 
0x238: V155 = 0x40
0x23a: V156 = M[0x40]
0x241: CALLDATACOPY V156 V34 V36
0x242: V157 = 0x40
0x244: V158 = M[0x40]
0x246: V159 = ADD V156 V36
0x249: V160 = SUB V159 V158
0x24c: V161 = SHA3 V158 V160
0x24d: V162 = 0x2
0x24f: V163 = S[0x2]
0x250: V164 = EQ V163 V161
0x255: V165 = ISZERO V164
0x258: V166 = 0x26a
0x25d: JUMPI 0x26a V165
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 2
Stack additions: [S1, S0, V164]
Exit stack: [V11, 0x77, V34, V36, V164]

================================

Block 0x25e
[0x25e:0x269]
---
Predecessors: [0x235]
Successors: [0x26a]
---
0x25e POP
0x25f PUSH8 0x29a2241af62c0000
0x268 CALLVALUE
0x269 GT
---
0x25f: V167 = 0x29a2241af62c0000
0x268: V168 = CALLVALUE
0x269: V169 = GT V168 0x29a2241af62c0000
---
Entry stack: [V11, 0x77, V34, V36, V164]
Stack pops: 1
Stack additions: [V169]
Exit stack: [V11, 0x77, V34, V36, V169]

================================

Block 0x26a
[0x26a:0x26f]
---
Predecessors: [0x235, 0x25e]
Successors: [0x270, 0x29e]
---
0x26a JUMPDEST
0x26b ISZERO
0x26c PUSH2 0x29e
0x26f JUMPI
---
0x26a: JUMPDEST 
0x26b: V170 = ISZERO S0
0x26c: V171 = 0x29e
0x26f: JUMPI 0x29e V170
---
Entry stack: [V11, 0x77, V34, V36, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V34, V36]

================================

Block 0x270
[0x270:0x292]
---
Predecessors: [0x26a]
Successors: [0x293, 0x29c]
---
0x270 PUSH1 0x40
0x272 MLOAD
0x273 CALLER
0x274 SWAP1
0x275 ADDRESS
0x276 BALANCE
0x277 DUP1
0x278 ISZERO
0x279 PUSH2 0x8fc
0x27c MUL
0x27d SWAP2
0x27e PUSH1 0x0
0x280 DUP2
0x281 DUP2
0x282 DUP2
0x283 DUP6
0x284 DUP9
0x285 DUP9
0x286 CALL
0x287 SWAP4
0x288 POP
0x289 POP
0x28a POP
0x28b POP
0x28c ISZERO
0x28d DUP1
0x28e ISZERO
0x28f PUSH2 0x29c
0x292 JUMPI
---
0x270: V172 = 0x40
0x272: V173 = M[0x40]
0x273: V174 = CALLER
0x275: V175 = ADDRESS
0x276: V176 = BALANCE V175
0x278: V177 = ISZERO V176
0x279: V178 = 0x8fc
0x27c: V179 = MUL 0x8fc V177
0x27e: V180 = 0x0
0x286: V181 = CALL V179 V174 V176 V173 0x0 V173 0x0
0x28c: V182 = ISZERO V181
0x28e: V183 = ISZERO V182
0x28f: V184 = 0x29c
0x292: JUMPI 0x29c V183
---
Entry stack: [V11, 0x77, V34, V36]
Stack pops: 0
Stack additions: [V182]
Exit stack: [V11, 0x77, V34, V36, V182]

================================

Block 0x293
[0x293:0x29b]
---
Predecessors: [0x270]
Successors: []
---
0x293 RETURNDATASIZE
0x294 PUSH1 0x0
0x296 DUP1
0x297 RETURNDATACOPY
0x298 RETURNDATASIZE
0x299 PUSH1 0x0
0x29b REVERT
---
0x293: V185 = RETURNDATASIZE
0x294: V186 = 0x0
0x297: RETURNDATACOPY 0x0 0x0 V185
0x298: V187 = RETURNDATASIZE
0x299: V188 = 0x0
0x29b: REVERT 0x0 V187
---
Entry stack: [V11, 0x77, V34, V36, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V34, V36, V182]

================================

Block 0x29c
[0x29c:0x29d]
---
Predecessors: [0x270, 0x3c3]
Successors: [0x29e]
---
0x29c JUMPDEST
0x29d POP
---
0x29c: JUMPDEST 
---
Entry stack: [V11, 0x77, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, S2, S1]

================================

Block 0x29e
[0x29e:0x2a1]
---
Predecessors: [0x26a, 0x29c, 0x2a2]
Successors: [0x77]
---
0x29e JUMPDEST
0x29f POP
0x2a0 POP
0x2a1 JUMP
---
0x29e: JUMPDEST 
0x2a1: JUMP 0x77
---
Entry stack: [V11, 0x77, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a2
[0x2a2:0x2c2]
---
Predecessors: [0x8c]
Successors: [0x29e, 0x2c3]
---
0x2a2 JUMPDEST
0x2a3 PUSH1 0x1
0x2a5 SLOAD
0x2a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bb AND
0x2bc CALLER
0x2bd EQ
0x2be ISZERO
0x2bf PUSH2 0x29e
0x2c2 JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V189 = 0x1
0x2a5: V190 = S[0x1]
0x2a6: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x2bc: V193 = CALLER
0x2bd: V194 = EQ V193 V192
0x2be: V195 = ISZERO V194
0x2bf: V196 = 0x29e
0x2c2: JUMPI 0x29e V195
---
Entry stack: [V11, 0x77, V39, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V39, V56]

================================

Block 0x2c3
[0x2c3:0x2d4]
---
Predecessors: [0x2a2]
Successors: [0x4c7]
---
0x2c3 DUP2
0x2c4 MLOAD
0x2c5 PUSH2 0x2d5
0x2c8 SWAP1
0x2c9 PUSH1 0x0
0x2cb SWAP1
0x2cc PUSH1 0x20
0x2ce DUP6
0x2cf ADD
0x2d0 SWAP1
0x2d1 PUSH2 0x4c7
0x2d4 JUMP
---
0x2c4: V197 = M[V39]
0x2c5: V198 = 0x2d5
0x2c9: V199 = 0x0
0x2cc: V200 = 0x20
0x2cf: V201 = ADD V39 0x20
0x2d1: V202 = 0x4c7
0x2d4: JUMP 0x4c7
---
Entry stack: [V11, 0x77, V39, V56]
Stack pops: 2
Stack additions: [S1, S0, 0x2d5, 0x0, V201, V197]
Exit stack: [V11, 0x77, V39, V56, 0x2d5, 0x0, V201, V197]

================================

Block 0x2d5
[0x2d5:0x2db]
---
Predecessors: [0x2d5, 0x541]
Successors: [0x77, 0x2d5, 0x44c]
---
0x2d5 JUMPDEST
0x2d6 POP
0x2d7 PUSH1 0x2
0x2d9 SSTORE
0x2da POP
0x2db JUMP
---
0x2d5: JUMPDEST 
0x2d7: V203 = 0x2
0x2d9: S[0x2] = S1
0x2db: JUMP S3
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4]

================================

Block 0x2dc
[0x2dc:0x31b]
---
Predecessors: [0xe6]
Successors: [0x31c, 0x362]
---
0x2dc JUMPDEST
0x2dd PUSH1 0x0
0x2df DUP1
0x2e0 SLOAD
0x2e1 PUSH1 0x40
0x2e3 DUP1
0x2e4 MLOAD
0x2e5 PUSH1 0x20
0x2e7 PUSH1 0x2
0x2e9 PUSH1 0x1
0x2eb DUP6
0x2ec AND
0x2ed ISZERO
0x2ee PUSH2 0x100
0x2f1 MUL
0x2f2 PUSH1 0x0
0x2f4 NOT
0x2f5 ADD
0x2f6 SWAP1
0x2f7 SWAP5
0x2f8 AND
0x2f9 SWAP4
0x2fa SWAP1
0x2fb SWAP4
0x2fc DIV
0x2fd PUSH1 0x1f
0x2ff DUP2
0x300 ADD
0x301 DUP5
0x302 SWAP1
0x303 DIV
0x304 DUP5
0x305 MUL
0x306 DUP3
0x307 ADD
0x308 DUP5
0x309 ADD
0x30a SWAP1
0x30b SWAP3
0x30c MSTORE
0x30d DUP2
0x30e DUP2
0x30f MSTORE
0x310 SWAP3
0x311 SWAP2
0x312 DUP4
0x313 ADD
0x314 DUP3
0x315 DUP3
0x316 DUP1
0x317 ISZERO
0x318 PUSH2 0x362
0x31b JUMPI
---
0x2dc: JUMPDEST 
0x2dd: V204 = 0x0
0x2e0: V205 = S[0x0]
0x2e1: V206 = 0x40
0x2e4: V207 = M[0x40]
0x2e5: V208 = 0x20
0x2e7: V209 = 0x2
0x2e9: V210 = 0x1
0x2ec: V211 = AND V205 0x1
0x2ed: V212 = ISZERO V211
0x2ee: V213 = 0x100
0x2f1: V214 = MUL 0x100 V212
0x2f2: V215 = 0x0
0x2f4: V216 = NOT 0x0
0x2f5: V217 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V214
0x2f8: V218 = AND V205 V217
0x2fc: V219 = DIV V218 0x2
0x2fd: V220 = 0x1f
0x300: V221 = ADD V219 0x1f
0x303: V222 = DIV V221 0x20
0x305: V223 = MUL 0x20 V222
0x307: V224 = ADD V207 V223
0x309: V225 = ADD 0x20 V224
0x30c: M[0x40] = V225
0x30f: M[V207] = V219
0x313: V226 = ADD V207 0x20
0x317: V227 = ISZERO V219
0x318: V228 = 0x362
0x31b: JUMPI 0x362 V227
---
Entry stack: [V11, 0xef]
Stack pops: 0
Stack additions: [V207, 0x0, V219, V226, 0x0, V219]
Exit stack: [V11, 0xef, V207, 0x0, V219, V226, 0x0, V219]

================================

Block 0x31c
[0x31c:0x323]
---
Predecessors: [0x2dc]
Successors: [0x324, 0x337]
---
0x31c DUP1
0x31d PUSH1 0x1f
0x31f LT
0x320 PUSH2 0x337
0x323 JUMPI
---
0x31d: V229 = 0x1f
0x31f: V230 = LT 0x1f V219
0x320: V231 = 0x337
0x323: JUMPI 0x337 V230
---
Entry stack: [V11, 0xef, V207, 0x0, V219, V226, 0x0, V219]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xef, V207, 0x0, V219, V226, 0x0, V219]

================================

Block 0x324
[0x324:0x336]
---
Predecessors: [0x31c]
Successors: [0x362]
---
0x324 PUSH2 0x100
0x327 DUP1
0x328 DUP4
0x329 SLOAD
0x32a DIV
0x32b MUL
0x32c DUP4
0x32d MSTORE
0x32e SWAP2
0x32f PUSH1 0x20
0x331 ADD
0x332 SWAP2
0x333 PUSH2 0x362
0x336 JUMP
---
0x324: V232 = 0x100
0x329: V233 = S[0x0]
0x32a: V234 = DIV V233 0x100
0x32b: V235 = MUL V234 0x100
0x32d: M[V226] = V235
0x32f: V236 = 0x20
0x331: V237 = ADD 0x20 V226
0x333: V238 = 0x362
0x336: JUMP 0x362
---
Entry stack: [V11, 0xef, V207, 0x0, V219, V226, 0x0, V219]
Stack pops: 3
Stack additions: [V237, S1, S0]
Exit stack: [V11, 0xef, V207, 0x0, V219, V237, 0x0, V219]

================================

Block 0x337
[0x337:0x344]
---
Predecessors: [0x31c]
Successors: [0x345]
---
0x337 JUMPDEST
0x338 DUP3
0x339 ADD
0x33a SWAP2
0x33b SWAP1
0x33c PUSH1 0x0
0x33e MSTORE
0x33f PUSH1 0x20
0x341 PUSH1 0x0
0x343 SHA3
0x344 SWAP1
---
0x337: JUMPDEST 
0x339: V239 = ADD V226 V219
0x33c: V240 = 0x0
0x33e: M[0x0] = 0x0
0x33f: V241 = 0x20
0x341: V242 = 0x0
0x343: V243 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xef, V207, 0x0, V219, V226, 0x0, V219]
Stack pops: 3
Stack additions: [V239, V243, S2]
Exit stack: [V11, 0xef, V207, 0x0, V219, V239, V243, V226]

================================

Block 0x345
[0x345:0x358]
---
Predecessors: [0x337, 0x345]
Successors: [0x345, 0x359]
---
0x345 JUMPDEST
0x346 DUP2
0x347 SLOAD
0x348 DUP2
0x349 MSTORE
0x34a SWAP1
0x34b PUSH1 0x1
0x34d ADD
0x34e SWAP1
0x34f PUSH1 0x20
0x351 ADD
0x352 DUP1
0x353 DUP4
0x354 GT
0x355 PUSH2 0x345
0x358 JUMPI
---
0x345: JUMPDEST 
0x347: V244 = S[S1]
0x349: M[S0] = V244
0x34b: V245 = 0x1
0x34d: V246 = ADD 0x1 S1
0x34f: V247 = 0x20
0x351: V248 = ADD 0x20 S0
0x354: V249 = GT V239 V248
0x355: V250 = 0x345
0x358: JUMPI 0x345 V249
---
Entry stack: [V11, 0xef, V207, 0x0, V219, V239, S1, S0]
Stack pops: 3
Stack additions: [S2, V246, V248]
Exit stack: [V11, 0xef, V207, 0x0, V219, V239, V246, V248]

================================

Block 0x359
[0x359:0x361]
---
Predecessors: [0x345]
Successors: [0x362]
---
0x359 DUP3
0x35a SWAP1
0x35b SUB
0x35c PUSH1 0x1f
0x35e AND
0x35f DUP3
0x360 ADD
0x361 SWAP2
---
0x35b: V251 = SUB V248 V239
0x35c: V252 = 0x1f
0x35e: V253 = AND 0x1f V251
0x360: V254 = ADD V239 V253
---
Entry stack: [V11, 0xef, V207, 0x0, V219, V239, V246, V248]
Stack pops: 3
Stack additions: [V254, S1, S2]
Exit stack: [V11, 0xef, V207, 0x0, V219, V254, V246, V239]

================================

Block 0x362
[0x362:0x369]
---
Predecessors: [0x2dc, 0x324, 0x359]
Successors: [0xef]
---
0x362 JUMPDEST
0x363 POP
0x364 POP
0x365 POP
0x366 POP
0x367 POP
0x368 DUP2
0x369 JUMP
---
0x362: JUMPDEST 
0x369: JUMP 0xef
---
Entry stack: [V11, 0xef, V207, 0x0, V219, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xef, V207]

================================

Block 0x36a
[0x36a:0x38a]
---
Predecessors: [0x170]
Successors: [0x38b, 0x3c0]
---
0x36a JUMPDEST
0x36b PUSH1 0x1
0x36d SLOAD
0x36e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x383 AND
0x384 CALLER
0x385 EQ
0x386 ISZERO
0x387 PUSH2 0x3c0
0x38a JUMPI
---
0x36a: JUMPDEST 
0x36b: V255 = 0x1
0x36d: V256 = S[0x1]
0x36e: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x383: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x384: V259 = CALLER
0x385: V260 = EQ V259 V258
0x386: V261 = ISZERO V260
0x387: V262 = 0x3c0
0x38a: JUMPI 0x3c0 V261
---
Entry stack: [V11, 0x77, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V110]

================================

Block 0x38b
[0x38b:0x3bf]
---
Predecessors: [0x36a]
Successors: [0x3c0]
---
0x38b PUSH1 0x1
0x38d DUP1
0x38e SLOAD
0x38f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a4 NOT
0x3a5 AND
0x3a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bb DUP4
0x3bc AND
0x3bd OR
0x3be SWAP1
0x3bf SSTORE
---
0x38b: V263 = 0x1
0x38e: V264 = S[0x1]
0x38f: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V266 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3a5: V267 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V264
0x3a6: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bc: V269 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V270 = OR V269 V267
0x3bf: S[0x1] = V270
---
Entry stack: [V11, 0x77, V110]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V110]

================================

Block 0x3c0
[0x3c0:0x3c2]
---
Predecessors: [0x36a, 0x38b, 0x49a]
Successors: [0x77]
---
0x3c0 JUMPDEST
0x3c1 POP
0x3c2 JUMP
---
0x3c0: JUMPDEST 
0x3c2: JUMP 0x77
---
Entry stack: [V11, 0x77, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c3
[0x3c3:0x3de]
---
Predecessors: [0x192]
Successors: [0x29c, 0x3df]
---
0x3c3 JUMPDEST
0x3c4 PUSH1 0x3
0x3c6 SLOAD
0x3c7 PUSH1 0x40
0x3c9 DUP1
0x3ca MLOAD
0x3cb DUP6
0x3cc DUP2
0x3cd MSTORE
0x3ce SWAP1
0x3cf MLOAD
0x3d0 SWAP1
0x3d1 DUP2
0x3d2 SWAP1
0x3d3 SUB
0x3d4 PUSH1 0x20
0x3d6 ADD
0x3d7 SWAP1
0x3d8 SHA3
0x3d9 EQ
0x3da ISZERO
0x3db PUSH2 0x29c
0x3de JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V271 = 0x3
0x3c6: V272 = S[0x3]
0x3c7: V273 = 0x40
0x3ca: V274 = M[0x40]
0x3cd: M[V274] = V127
0x3cf: V275 = M[0x40]
0x3d3: V276 = SUB V274 V275
0x3d4: V277 = 0x20
0x3d6: V278 = ADD 0x20 V276
0x3d8: V279 = SHA3 V275 V278
0x3d9: V280 = EQ V279 V272
0x3da: V281 = ISZERO V280
0x3db: V282 = 0x29c
0x3de: JUMPI 0x29c V281
---
Entry stack: [V11, 0x77, V127, V113, V133]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V127, V113, V133]

================================

Block 0x3df
[0x3df:0x3ee]
---
Predecessors: [0x3c3]
Successors: [0x3ef]
---
0x3df DUP1
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 DUP1
0x3e4 DUP3
0x3e5 DUP1
0x3e6 MLOAD
0x3e7 SWAP1
0x3e8 PUSH1 0x20
0x3ea ADD
0x3eb SWAP1
0x3ec DUP1
0x3ed DUP4
0x3ee DUP4
---
0x3e0: V283 = 0x40
0x3e2: V284 = M[0x40]
0x3e6: V285 = M[V133]
0x3e8: V286 = 0x20
0x3ea: V287 = ADD 0x20 V133
---
Entry stack: [V11, 0x77, V127, V113, V133]
Stack pops: 1
Stack additions: [S0, S0, V284, V284, V287, V285, V285, V284, V287]
Exit stack: [V11, 0x77, V127, V113, V133, V133, V284, V284, V287, V285, V285, V284, V287]

================================

Block 0x3ef
[0x3ef:0x3f7]
---
Predecessors: [0x3df, 0x3f8]
Successors: [0x3f8, 0x40e]
---
0x3ef JUMPDEST
0x3f0 PUSH1 0x20
0x3f2 DUP4
0x3f3 LT
0x3f4 PUSH2 0x40e
0x3f7 JUMPI
---
0x3ef: JUMPDEST 
0x3f0: V288 = 0x20
0x3f3: V289 = LT S2 0x20
0x3f4: V290 = 0x40e
0x3f7: JUMPI 0x40e V289
---
Entry stack: [V11, 0x77, V127, V113, V133, V133, V284, V284, V287, V285, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x77, V127, V113, V133, V133, V284, V284, V287, V285, S2, S1, S0]

================================

Block 0x3f8
[0x3f8:0x40d]
---
Predecessors: [0x3ef]
Successors: [0x3ef]
---
0x3f8 DUP1
0x3f9 MLOAD
0x3fa DUP3
0x3fb MSTORE
0x3fc PUSH1 0x1f
0x3fe NOT
0x3ff SWAP1
0x400 SWAP3
0x401 ADD
0x402 SWAP2
0x403 PUSH1 0x20
0x405 SWAP2
0x406 DUP3
0x407 ADD
0x408 SWAP2
0x409 ADD
0x40a PUSH2 0x3ef
0x40d JUMP
---
0x3f9: V291 = M[S0]
0x3fb: M[S1] = V291
0x3fc: V292 = 0x1f
0x3fe: V293 = NOT 0x1f
0x401: V294 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x403: V295 = 0x20
0x407: V296 = ADD 0x20 S1
0x409: V297 = ADD 0x20 S0
0x40a: V298 = 0x3ef
0x40d: JUMP 0x3ef
---
Entry stack: [V11, 0x77, V127, V113, V133, V133, V284, V284, V287, V285, S2, S1, S0]
Stack pops: 3
Stack additions: [V294, V296, V297]
Exit stack: [V11, 0x77, V127, V113, V133, V133, V284, V284, V287, V285, V294, V296, V297]

================================

Block 0x40e
[0x40e:0x44b]
---
Predecessors: [0x3ef]
Successors: [0x4c7]
---
0x40e JUMPDEST
0x40f MLOAD
0x410 DUP2
0x411 MLOAD
0x412 PUSH1 0x20
0x414 SWAP4
0x415 DUP5
0x416 SUB
0x417 PUSH2 0x100
0x41a EXP
0x41b PUSH1 0x0
0x41d NOT
0x41e ADD
0x41f DUP1
0x420 NOT
0x421 SWAP1
0x422 SWAP3
0x423 AND
0x424 SWAP2
0x425 AND
0x426 OR
0x427 SWAP1
0x428 MSTORE
0x429 PUSH1 0x40
0x42b MLOAD
0x42c SWAP2
0x42d SWAP1
0x42e SWAP4
0x42f ADD
0x430 DUP2
0x431 SWAP1
0x432 SUB
0x433 SWAP1
0x434 SHA3
0x435 PUSH1 0x2
0x437 SSTORE
0x438 POP
0x439 DUP5
0x43a MLOAD
0x43b PUSH2 0x44c
0x43e SWAP4
0x43f POP
0x440 PUSH1 0x0
0x442 SWAP3
0x443 POP
0x444 SWAP1
0x445 DUP6
0x446 ADD
0x447 SWAP1
0x448 PUSH2 0x4c7
0x44b JUMP
---
0x40e: JUMPDEST 
0x40f: V299 = M[S0]
0x411: V300 = M[S1]
0x412: V301 = 0x20
0x416: V302 = SUB 0x20 S2
0x417: V303 = 0x100
0x41a: V304 = EXP 0x100 V302
0x41b: V305 = 0x0
0x41d: V306 = NOT 0x0
0x41e: V307 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V304
0x420: V308 = NOT V307
0x423: V309 = AND V299 V308
0x425: V310 = AND V307 V300
0x426: V311 = OR V310 V309
0x428: M[S1] = V311
0x429: V312 = 0x40
0x42b: V313 = M[0x40]
0x42f: V314 = ADD V284 V285
0x432: V315 = SUB V314 V313
0x434: V316 = SHA3 V313 V315
0x435: V317 = 0x2
0x437: S[0x2] = V316
0x43a: V318 = M[V113]
0x43b: V319 = 0x44c
0x440: V320 = 0x0
0x446: V321 = ADD V113 0x20
0x448: V322 = 0x4c7
0x44b: JUMP 0x4c7
---
Entry stack: [V11, 0x77, V127, V113, V133, V133, V284, V284, V287, V285, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x44c, 0x0, V321, V318]
Exit stack: [V11, 0x77, V127, V113, V133, 0x44c, 0x0, V321, V318]

================================

Block 0x44c
[0x44c:0x475]
---
Predecessors: [0x2d5, 0x541]
Successors: [0x77]
---
0x44c JUMPDEST
0x44d POP
0x44e PUSH1 0x1
0x450 DUP1
0x451 SLOAD
0x452 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x467 NOT
0x468 AND
0x469 CALLER
0x46a OR
0x46b SWAP1
0x46c SSTORE
0x46d PUSH1 0x0
0x46f PUSH1 0x3
0x471 SSTORE
0x472 POP
0x473 POP
0x474 POP
0x475 JUMP
---
0x44c: JUMPDEST 
0x44e: V323 = 0x1
0x451: V324 = S[0x1]
0x452: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x467: V326 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x468: V327 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V324
0x469: V328 = CALLER
0x46a: V329 = OR V328 V327
0x46c: S[0x1] = V329
0x46d: V330 = 0x0
0x46f: V331 = 0x3
0x471: S[0x3] = 0x0
0x475: JUMP S4
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11, S7, S6, S5]

================================

Block 0x476
[0x476:0x495]
---
Predecessors: [0x221]
Successors: [0x496, 0x49a]
---
0x476 JUMPDEST
0x477 PUSH1 0x1
0x479 SLOAD
0x47a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48f AND
0x490 CALLER
0x491 EQ
0x492 PUSH2 0x49a
0x495 JUMPI
---
0x476: JUMPDEST 
0x477: V332 = 0x1
0x479: V333 = S[0x1]
0x47a: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x48f: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x490: V336 = CALLER
0x491: V337 = EQ V336 V335
0x492: V338 = 0x49a
0x495: JUMPI 0x49a V337
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x496
[0x496:0x499]
---
Predecessors: [0x476]
Successors: []
---
0x496 PUSH1 0x0
0x498 DUP1
0x499 REVERT
---
0x496: V339 = 0x0
0x499: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x49a
[0x49a:0x4bd]
---
Predecessors: [0x476]
Successors: [0x3c0, 0x4be]
---
0x49a JUMPDEST
0x49b PUSH1 0x40
0x49d MLOAD
0x49e CALLER
0x49f SWAP1
0x4a0 ADDRESS
0x4a1 BALANCE
0x4a2 DUP1
0x4a3 ISZERO
0x4a4 PUSH2 0x8fc
0x4a7 MUL
0x4a8 SWAP2
0x4a9 PUSH1 0x0
0x4ab DUP2
0x4ac DUP2
0x4ad DUP2
0x4ae DUP6
0x4af DUP9
0x4b0 DUP9
0x4b1 CALL
0x4b2 SWAP4
0x4b3 POP
0x4b4 POP
0x4b5 POP
0x4b6 POP
0x4b7 ISZERO
0x4b8 DUP1
0x4b9 ISZERO
0x4ba PUSH2 0x3c0
0x4bd JUMPI
---
0x49a: JUMPDEST 
0x49b: V340 = 0x40
0x49d: V341 = M[0x40]
0x49e: V342 = CALLER
0x4a0: V343 = ADDRESS
0x4a1: V344 = BALANCE V343
0x4a3: V345 = ISZERO V344
0x4a4: V346 = 0x8fc
0x4a7: V347 = MUL 0x8fc V345
0x4a9: V348 = 0x0
0x4b1: V349 = CALL V347 V342 V344 V341 0x0 V341 0x0
0x4b7: V350 = ISZERO V349
0x4b9: V351 = ISZERO V350
0x4ba: V352 = 0x3c0
0x4bd: JUMPI 0x3c0 V351
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V350]
Exit stack: [V11, 0x77, V350]

================================

Block 0x4be
[0x4be:0x4c6]
---
Predecessors: [0x49a]
Successors: []
---
0x4be RETURNDATASIZE
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 RETURNDATACOPY
0x4c3 RETURNDATASIZE
0x4c4 PUSH1 0x0
0x4c6 REVERT
---
0x4be: V353 = RETURNDATASIZE
0x4bf: V354 = 0x0
0x4c2: RETURNDATACOPY 0x0 0x0 V353
0x4c3: V355 = RETURNDATASIZE
0x4c4: V356 = 0x0
0x4c6: REVERT 0x0 V355
---
Entry stack: [V11, 0x77, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V350]

================================

Block 0x4c7
[0x4c7:0x4f7]
---
Predecessors: [0x2c3, 0x40e]
Successors: [0x4f8, 0x508]
---
0x4c7 JUMPDEST
0x4c8 DUP3
0x4c9 DUP1
0x4ca SLOAD
0x4cb PUSH1 0x1
0x4cd DUP2
0x4ce PUSH1 0x1
0x4d0 AND
0x4d1 ISZERO
0x4d2 PUSH2 0x100
0x4d5 MUL
0x4d6 SUB
0x4d7 AND
0x4d8 PUSH1 0x2
0x4da SWAP1
0x4db DIV
0x4dc SWAP1
0x4dd PUSH1 0x0
0x4df MSTORE
0x4e0 PUSH1 0x20
0x4e2 PUSH1 0x0
0x4e4 SHA3
0x4e5 SWAP1
0x4e6 PUSH1 0x1f
0x4e8 ADD
0x4e9 PUSH1 0x20
0x4eb SWAP1
0x4ec DIV
0x4ed DUP2
0x4ee ADD
0x4ef SWAP3
0x4f0 DUP3
0x4f1 PUSH1 0x1f
0x4f3 LT
0x4f4 PUSH2 0x508
0x4f7 JUMPI
---
0x4c7: JUMPDEST 
0x4ca: V357 = S[0x0]
0x4cb: V358 = 0x1
0x4ce: V359 = 0x1
0x4d0: V360 = AND 0x1 V357
0x4d1: V361 = ISZERO V360
0x4d2: V362 = 0x100
0x4d5: V363 = MUL 0x100 V361
0x4d6: V364 = SUB V363 0x1
0x4d7: V365 = AND V364 V357
0x4d8: V366 = 0x2
0x4db: V367 = DIV V365 0x2
0x4dd: V368 = 0x0
0x4df: M[0x0] = 0x0
0x4e0: V369 = 0x20
0x4e2: V370 = 0x0
0x4e4: V371 = SHA3 0x0 0x20
0x4e6: V372 = 0x1f
0x4e8: V373 = ADD 0x1f V367
0x4e9: V374 = 0x20
0x4ec: V375 = DIV V373 0x20
0x4ee: V376 = ADD V371 V375
0x4f1: V377 = 0x1f
0x4f3: V378 = LT 0x1f S0
0x4f4: V379 = 0x508
0x4f7: JUMPI 0x508 V378
---
Entry stack: [V11, S7, S6, S5, S4, {0x2d5, 0x44c}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V376, S0, V371, S1]
Exit stack: [V11, S7, S6, S5, S4, {0x2d5, 0x44c}, 0x0, V376, S0, V371, S1]

================================

Block 0x4f8
[0x4f8:0x507]
---
Predecessors: [0x4c7]
Successors: [0x535]
---
0x4f8 DUP1
0x4f9 MLOAD
0x4fa PUSH1 0xff
0x4fc NOT
0x4fd AND
0x4fe DUP4
0x4ff DUP1
0x500 ADD
0x501 OR
0x502 DUP6
0x503 SSTORE
0x504 PUSH2 0x535
0x507 JUMP
---
0x4f9: V380 = M[S0]
0x4fa: V381 = 0xff
0x4fc: V382 = NOT 0xff
0x4fd: V383 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V380
0x500: V384 = ADD S2 S2
0x501: V385 = OR V384 V383
0x503: S[0x0] = V385
0x504: V386 = 0x535
0x507: JUMP 0x535
---
Entry stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, V376, S2, V371, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, V376, S2, V371, S0]

================================

Block 0x508
[0x508:0x516]
---
Predecessors: [0x4c7]
Successors: [0x517, 0x535]
---
0x508 JUMPDEST
0x509 DUP3
0x50a DUP1
0x50b ADD
0x50c PUSH1 0x1
0x50e ADD
0x50f DUP6
0x510 SSTORE
0x511 DUP3
0x512 ISZERO
0x513 PUSH2 0x535
0x516 JUMPI
---
0x508: JUMPDEST 
0x50b: V387 = ADD S2 S2
0x50c: V388 = 0x1
0x50e: V389 = ADD 0x1 V387
0x510: S[0x0] = V389
0x512: V390 = ISZERO S2
0x513: V391 = 0x535
0x516: JUMPI 0x535 V390
---
Entry stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, V376, S2, V371, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, V376, S2, V371, S0]

================================

Block 0x517
[0x517:0x519]
---
Predecessors: [0x508]
Successors: [0x51a]
---
0x517 SWAP2
0x518 DUP3
0x519 ADD
---
0x519: V392 = ADD S0 S2
---
Entry stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, V376, S2, V371, S0]
Stack pops: 3
Stack additions: [S0, S1, V392]
Exit stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, V376, S0, V371, V392]

================================

Block 0x51a
[0x51a:0x522]
---
Predecessors: [0x517, 0x523]
Successors: [0x523, 0x535]
---
0x51a JUMPDEST
0x51b DUP3
0x51c DUP2
0x51d GT
0x51e ISZERO
0x51f PUSH2 0x535
0x522 JUMPI
---
0x51a: JUMPDEST 
0x51d: V393 = GT V392 S2
0x51e: V394 = ISZERO V393
0x51f: V395 = 0x535
0x522: JUMPI 0x535 V394
---
Entry stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, V376, S2, S1, V392]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, V376, S2, S1, V392]

================================

Block 0x523
[0x523:0x534]
---
Predecessors: [0x51a]
Successors: [0x51a]
---
0x523 DUP3
0x524 MLOAD
0x525 DUP3
0x526 SSTORE
0x527 SWAP2
0x528 PUSH1 0x20
0x52a ADD
0x52b SWAP2
0x52c SWAP1
0x52d PUSH1 0x1
0x52f ADD
0x530 SWAP1
0x531 PUSH2 0x51a
0x534 JUMP
---
0x524: V396 = M[S2]
0x526: S[S1] = V396
0x528: V397 = 0x20
0x52a: V398 = ADD 0x20 S2
0x52d: V399 = 0x1
0x52f: V400 = ADD 0x1 S1
0x531: V401 = 0x51a
0x534: JUMP 0x51a
---
Entry stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, V376, S2, S1, V392]
Stack pops: 3
Stack additions: [V398, V400, S0]
Exit stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, V376, V398, V400, V392]

================================

Block 0x535
[0x535:0x540]
---
Predecessors: [0x4f8, 0x508, 0x51a]
Successors: [0x545]
---
0x535 JUMPDEST
0x536 POP
0x537 PUSH2 0x541
0x53a SWAP3
0x53b SWAP2
0x53c POP
0x53d PUSH2 0x545
0x540 JUMP
---
0x535: JUMPDEST 
0x537: V402 = 0x541
0x53d: V403 = 0x545
0x540: JUMP 0x545
---
Entry stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, V376, S2, S1, S0]
Stack pops: 4
Stack additions: [0x541, S3, S1]
Exit stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, 0x541, V376, S1]

================================

Block 0x541
[0x541:0x544]
---
Predecessors: [0x54b, 0x55f]
Successors: [0x77, 0x2d5, 0x44c, 0x55f]
---
0x541 JUMPDEST
0x542 POP
0x543 SWAP1
0x544 JUMP
---
0x541: JUMPDEST 
0x544: JUMP S2
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0x545
[0x545:0x54a]
---
Predecessors: [0x535]
Successors: [0x54b]
---
0x545 JUMPDEST
0x546 PUSH2 0x55f
0x549 SWAP2
0x54a SWAP1
---
0x545: JUMPDEST 
0x546: V404 = 0x55f
---
Entry stack: [V11, S8, S7, S6, S5, {0x2d5, 0x44c}, 0x0, 0x541, V376, S0]
Stack pops: 2
Stack additions: [0x55f, S1, S0]
Exit stack: [V11, S8, S7, S6, S5, {0x2d5, 0x44c}, 0x0, 0x541, 0x55f, V376, S0]

================================

Block 0x54b
[0x54b:0x553]
---
Predecessors: [0x545, 0x554]
Successors: [0x541, 0x554]
---
0x54b JUMPDEST
0x54c DUP1
0x54d DUP3
0x54e GT
0x54f ISZERO
0x550 PUSH2 0x541
0x553 JUMPI
---
0x54b: JUMPDEST 
0x54e: V405 = GT V376 S0
0x54f: V406 = ISZERO V405
0x550: V407 = 0x541
0x553: JUMPI 0x541 V406
---
Entry stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, 0x541, 0x55f, V376, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, 0x541, 0x55f, V376, S0]

================================

Block 0x554
[0x554:0x55e]
---
Predecessors: [0x54b]
Successors: [0x54b]
---
0x554 PUSH1 0x0
0x556 DUP2
0x557 SSTORE
0x558 PUSH1 0x1
0x55a ADD
0x55b PUSH2 0x54b
0x55e JUMP
---
0x554: V408 = 0x0
0x557: S[S0] = 0x0
0x558: V409 = 0x1
0x55a: V410 = ADD 0x1 S0
0x55b: V411 = 0x54b
0x55e: JUMP 0x54b
---
Entry stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, 0x541, 0x55f, V376, S0]
Stack pops: 1
Stack additions: [V410]
Exit stack: [V11, S9, S8, S7, S6, {0x2d5, 0x44c}, 0x0, 0x541, 0x55f, V376, V410]

================================

Block 0x55f
[0x55f:0x561]
---
Predecessors: [0x541]
Successors: [0x77, 0x541]
---
0x55f JUMPDEST
0x560 SWAP1
0x561 JUMP
---
0x55f: JUMPDEST 
0x561: JUMP S1
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x562
[0x562:0x591]
---
Predecessors: []
Successors: []
---
0x562 STOP
0x563 LOG1
0x564 PUSH6 0x627a7a723058
0x56b SHA3
0x56c PUSH12 0x156cf0798d420a1640788ed3
0x579 MISSING 0xe3
0x57a PC
0x57b ISZERO
0x57c SWAP8
0x57d MISSING 0xd4
0x57e MISSING 0xbd
0x57f PUSH18 0x4d7d9ffd241e1a7c7861bf510029
---
0x562: STOP 
0x563: LOG S0 S1 S2
0x564: V412 = 0x627a7a723058
0x56b: V413 = SHA3 0x627a7a723058 S3
0x56c: V414 = 0x156cf0798d420a1640788ed3
0x579: MISSING 0xe3
0x57a: V415 = PC
0x57b: V416 = ISZERO V415
0x57d: MISSING 0xd4
0x57e: MISSING 0xbd
0x57f: V417 = 0x4d7d9ffd241e1a7c7861bf510029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x156cf0798d420a1640788ed3, V413, S7, S0, S1, S2, S3, S4, S5, S6, V416, 0x4d7d9ffd241e1a7c7861bf510029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3853682c
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x229, 0x231, 0x235, 0x25e, 0x26a, 0x270, 0x293, 0x29c, 0x29e

Function 1:
Public function signature: 0x3e3ee859
Entry block: 0x8c
Exit block: 0x77
Body: 0x77, 0x8c, 0x29e, 0x2a2, 0x2c3, 0x2d5, 0x44c

Function 2:
Public function signature: 0x3fad9ae0
Entry block: 0xda
Exit block: 0x156
Body: 0xda, 0xe2, 0xe6, 0xef, 0x111, 0x11a, 0x129, 0x13d, 0x156, 0x2dc, 0x31c, 0x324, 0x337, 0x345, 0x359, 0x362

Function 3:
Public function signature: 0x59988dce
Entry block: 0x164
Exit block: 0x77
Body: 0x77, 0x164, 0x16c, 0x170, 0x36a, 0x38b, 0x3c0

Function 4:
Public function signature: 0xe200259e
Entry block: 0x192
Exit block: 0x77
Body: 0x77, 0x192, 0x29c, 0x29e, 0x3c3, 0x3df, 0x3ef, 0x3f8, 0x40e, 0x44c

Function 5:
Public function signature: 0xf50ab247
Entry block: 0x221
Exit block: 0x77
Body: 0x77, 0x221, 0x3c0, 0x476, 0x496, 0x49a, 0x4be

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

Function 7:
Private function
Entry block: 0x4c7
Exit block: 0x541
Body: 0x4c7, 0x4f8, 0x508, 0x517, 0x51a, 0x523, 0x535, 0x541, 0x545, 0x54b, 0x554, 0x55f

