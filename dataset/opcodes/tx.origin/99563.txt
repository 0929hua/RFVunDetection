Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x8c]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x7262375
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x8c
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x7262375
0x20: V14 = EQ V12 0x7262375
0x21: V15 = 0x8c
0x24: JUMPI 0x8c V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xb1]
---
0x25 DUP1
0x26 PUSH4 0x1bcfc432
0x2b EQ
0x2c PUSH2 0xb1
0x2f JUMPI
---
0x26: V16 = 0x1bcfc432
0x2b: V17 = EQ 0x1bcfc432 V12
0x2c: V18 = 0xb1
0x2f: JUMPI 0xb1 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xe0]
---
0x30 DUP1
0x31 PUSH4 0x38c8f2ce
0x36 EQ
0x37 PUSH2 0xe0
0x3a JUMPI
---
0x31: V19 = 0x38c8f2ce
0x36: V20 = EQ 0x38c8f2ce V12
0x37: V21 = 0xe0
0x3a: JUMPI 0xe0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x105]
---
0x3b DUP1
0x3c PUSH4 0x3ff3620b
0x41 EQ
0x42 PUSH2 0x105
0x45 JUMPI
---
0x3c: V22 = 0x3ff3620b
0x41: V23 = EQ 0x3ff3620b V12
0x42: V24 = 0x105
0x45: JUMPI 0x105 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x13b]
---
0x46 DUP1
0x47 PUSH4 0x891ac16b
0x4c EQ
0x4d PUSH2 0x13b
0x50 JUMPI
---
0x47: V25 = 0x891ac16b
0x4c: V26 = EQ 0x891ac16b V12
0x4d: V27 = 0x13b
0x50: JUMPI 0x13b V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x16a]
---
0x51 DUP1
0x52 PUSH4 0x89c2dcb0
0x57 EQ
0x58 PUSH2 0x16a
0x5b JUMPI
---
0x52: V28 = 0x89c2dcb0
0x57: V29 = EQ 0x89c2dcb0 V12
0x58: V30 = 0x16a
0x5b: JUMPI 0x16a V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x17f]
---
0x5c DUP1
0x5d PUSH4 0x9452651b
0x62 EQ
0x63 PUSH2 0x17f
0x66 JUMPI
---
0x5d: V31 = 0x9452651b
0x62: V32 = EQ 0x9452651b V12
0x63: V33 = 0x17f
0x66: JUMPI 0x17f V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x197]
---
0x67 DUP1
0x68 PUSH4 0xcdbc11b1
0x6d EQ
0x6e PUSH2 0x197
0x71 JUMPI
---
0x68: V34 = 0xcdbc11b1
0x6d: V35 = EQ 0xcdbc11b1 V12
0x6e: V36 = 0x197
0x71: JUMPI 0x197 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1c6]
---
0x72 DUP1
0x73 PUSH4 0xd2f7265a
0x78 EQ
0x79 PUSH2 0x1c6
0x7c JUMPI
---
0x73: V37 = 0xd2f7265a
0x78: V38 = EQ 0xd2f7265a V12
0x79: V39 = 0x1c6
0x7c: JUMPI 0x1c6 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x1f5]
---
0x7d DUP1
0x7e PUSH4 0xe8c0f815
0x83 EQ
0x84 PUSH2 0x1f5
0x87 JUMPI
---
0x7e: V40 = 0xe8c0f815
0x83: V41 = EQ 0xe8c0f815 V12
0x84: V42 = 0x1f5
0x87: JUMPI 0x1f5 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x88]
---
Predecessors: [0x0, 0x7d, 0x483, 0x4a3]
Successors: [0x89]
---
0x88 JUMPDEST
---
0x88: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0x89]
---
Predecessors: [0x88]
Successors: [0x8a]
---
0x89 JUMPDEST
---
0x89: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a
[0x8a:0x8b]
---
Predecessors: [0x89]
Successors: []
---
0x8a JUMPDEST
0x8b STOP
---
0x8a: JUMPDEST 
0x8b: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0x92]
---
Predecessors: [0xb]
Successors: [0x93, 0x97]
---
0x8c JUMPDEST
0x8d CALLVALUE
0x8e ISZERO
0x8f PUSH2 0x97
0x92 JUMPI
---
0x8c: JUMPDEST 
0x8d: V43 = CALLVALUE
0x8e: V44 = ISZERO V43
0x8f: V45 = 0x97
0x92: JUMPI 0x97 V44
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x8c]
Successors: []
---
0x93 PUSH1 0x0
0x95 DUP1
0x96 REVERT
---
0x93: V46 = 0x0
0x96: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x97
[0x97:0x9e]
---
Predecessors: [0x8c]
Successors: [0x224]
---
0x97 JUMPDEST
0x98 PUSH2 0x9f
0x9b PUSH2 0x224
0x9e JUMP
---
0x97: JUMPDEST 
0x98: V47 = 0x9f
0x9b: V48 = 0x224
0x9e: JUMP 0x224
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9f]
Exit stack: [V12, 0x9f]

================================

Block 0x9f
[0x9f:0xb0]
---
Predecessors: [0x224, 0x239]
Successors: []
---
0x9f JUMPDEST
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 SWAP1
0xa4 DUP2
0xa5 MSTORE
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 PUSH1 0x40
0xab MLOAD
0xac DUP1
0xad SWAP2
0xae SUB
0xaf SWAP1
0xb0 RETURN
---
0x9f: JUMPDEST 
0xa0: V49 = 0x40
0xa2: V50 = M[0x40]
0xa5: M[V50] = S0
0xa6: V51 = 0x20
0xa8: V52 = ADD 0x20 V50
0xa9: V53 = 0x40
0xab: V54 = M[0x40]
0xae: V55 = SUB V52 V54
0xb0: RETURN V54 V55
---
Entry stack: [V12, 0x9f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x9f]

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x25]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V56 = CALLVALUE
0xb3: V57 = ISZERO V56
0xb4: V58 = 0xbc
0xb7: JUMPI 0xbc V57
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V59 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb1]
Successors: [0x22a]
---
0xbc JUMPDEST
0xbd PUSH2 0xc4
0xc0 PUSH2 0x22a
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V60 = 0xc4
0xc0: V61 = 0x22a
0xc3: JUMP 0x22a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V12, 0xc4]

================================

Block 0xc4
[0xc4:0xdf]
---
Predecessors: [0x22a, 0x31f, 0x4a6, 0x4b5, 0x4c4]
Successors: []
---
0xc4 JUMPDEST
0xc5 PUSH1 0x40
0xc7 MLOAD
0xc8 PUSH1 0x1
0xca PUSH1 0xa0
0xcc PUSH1 0x2
0xce EXP
0xcf SUB
0xd0 SWAP1
0xd1 SWAP2
0xd2 AND
0xd3 DUP2
0xd4 MSTORE
0xd5 PUSH1 0x20
0xd7 ADD
0xd8 PUSH1 0x40
0xda MLOAD
0xdb DUP1
0xdc SWAP2
0xdd SUB
0xde SWAP1
0xdf RETURN
---
0xc4: JUMPDEST 
0xc5: V62 = 0x40
0xc7: V63 = M[0x40]
0xc8: V64 = 0x1
0xca: V65 = 0xa0
0xcc: V66 = 0x2
0xce: V67 = EXP 0x2 0xa0
0xcf: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2: V69 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd4: M[V63] = V69
0xd5: V70 = 0x20
0xd7: V71 = ADD 0x20 V63
0xd8: V72 = 0x40
0xda: V73 = M[0x40]
0xdd: V74 = SUB V71 V73
0xdf: RETURN V73 V74
---
Entry stack: [V12, 0xc4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc4]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0x30]
Successors: [0xe7, 0xeb]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V75 = CALLVALUE
0xe2: V76 = ISZERO V75
0xe3: V77 = 0xeb
0xe6: JUMPI 0xeb V76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V78 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0xe0]
Successors: [0x239]
---
0xeb JUMPDEST
0xec PUSH2 0x9f
0xef PUSH2 0x239
0xf2 JUMP
---
0xeb: JUMPDEST 
0xec: V79 = 0x9f
0xef: V80 = 0x239
0xf2: JUMP 0x239
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9f]
Exit stack: [V12, 0x9f]

================================

Block 0xf3
[0xf3:0x104]
---
Predecessors: []
Successors: []
---
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 SWAP1
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc ADD
0xfd PUSH1 0x40
0xff MLOAD
0x100 DUP1
0x101 SWAP2
0x102 SUB
0x103 SWAP1
0x104 RETURN
---
0xf3: JUMPDEST 
0xf4: V81 = 0x40
0xf6: V82 = M[0x40]
0xf9: M[V82] = S0
0xfa: V83 = 0x20
0xfc: V84 = ADD 0x20 V82
0xfd: V85 = 0x40
0xff: V86 = M[0x40]
0x102: V87 = SUB V84 V86
0x104: RETURN V86 V87
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x105
[0x105:0x10b]
---
Predecessors: [0x3b]
Successors: [0x10c, 0x110]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0x105: JUMPDEST 
0x106: V88 = CALLVALUE
0x107: V89 = ISZERO V88
0x108: V90 = 0x110
0x10b: JUMPI 0x110 V89
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x105]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V91 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x110
[0x110:0x126]
---
Predecessors: [0x105]
Successors: [0x23f]
---
0x110 JUMPDEST
0x111 PUSH2 0x127
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c PUSH1 0x4
0x11e CALLDATALOAD
0x11f AND
0x120 PUSH1 0x24
0x122 CALLDATALOAD
0x123 PUSH2 0x23f
0x126 JUMP
---
0x110: JUMPDEST 
0x111: V92 = 0x127
0x114: V93 = 0x1
0x116: V94 = 0xa0
0x118: V95 = 0x2
0x11a: V96 = EXP 0x2 0xa0
0x11b: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V98 = 0x4
0x11e: V99 = CALLDATALOAD 0x4
0x11f: V100 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0x120: V101 = 0x24
0x122: V102 = CALLDATALOAD 0x24
0x123: V103 = 0x23f
0x126: JUMP 0x23f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x127, V100, V102]
Exit stack: [V12, 0x127, V100, V102]

================================

Block 0x127
[0x127:0x13a]
---
Predecessors: [0x319]
Successors: []
---
0x127 JUMPDEST
0x128 PUSH1 0x40
0x12a MLOAD
0x12b SWAP1
0x12c ISZERO
0x12d ISZERO
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x20
0x132 ADD
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 SWAP2
0x138 SUB
0x139 SWAP1
0x13a RETURN
---
0x127: JUMPDEST 
0x128: V104 = 0x40
0x12a: V105 = M[0x40]
0x12c: V106 = ISZERO {0x0, 0x1}
0x12d: V107 = ISZERO V106
0x12f: M[V105] = V107
0x130: V108 = 0x20
0x132: V109 = ADD 0x20 V105
0x133: V110 = 0x40
0x135: V111 = M[0x40]
0x138: V112 = SUB V109 V111
0x13a: RETURN V111 V112
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x13b
[0x13b:0x141]
---
Predecessors: [0x46]
Successors: [0x142, 0x146]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x13b: JUMPDEST 
0x13c: V113 = CALLVALUE
0x13d: V114 = ISZERO V113
0x13e: V115 = 0x146
0x141: JUMPI 0x146 V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x13b]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V116 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x146
[0x146:0x14d]
---
Predecessors: [0x13b]
Successors: [0x31f]
---
0x146 JUMPDEST
0x147 PUSH2 0xc4
0x14a PUSH2 0x31f
0x14d JUMP
---
0x146: JUMPDEST 
0x147: V117 = 0xc4
0x14a: V118 = 0x31f
0x14d: JUMP 0x31f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V12, 0xc4]

================================

Block 0x14e
[0x14e:0x169]
---
Predecessors: []
Successors: []
---
0x14e JUMPDEST
0x14f PUSH1 0x40
0x151 MLOAD
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a SWAP1
0x15b SWAP2
0x15c AND
0x15d DUP2
0x15e MSTORE
0x15f PUSH1 0x20
0x161 ADD
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP1
0x166 SWAP2
0x167 SUB
0x168 SWAP1
0x169 RETURN
---
0x14e: JUMPDEST 
0x14f: V119 = 0x40
0x151: V120 = M[0x40]
0x152: V121 = 0x1
0x154: V122 = 0xa0
0x156: V123 = 0x2
0x158: V124 = EXP 0x2 0xa0
0x159: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15c: V126 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x15e: M[V120] = V126
0x15f: V127 = 0x20
0x161: V128 = ADD 0x20 V120
0x162: V129 = 0x40
0x164: V130 = M[0x40]
0x167: V131 = SUB V128 V130
0x169: RETURN V130 V131
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x16a
[0x16a:0x170]
---
Predecessors: [0x51]
Successors: [0x171, 0x175]
---
0x16a JUMPDEST
0x16b CALLVALUE
0x16c ISZERO
0x16d PUSH2 0x175
0x170 JUMPI
---
0x16a: JUMPDEST 
0x16b: V132 = CALLVALUE
0x16c: V133 = ISZERO V132
0x16d: V134 = 0x175
0x170: JUMPI 0x175 V133
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x16a]
Successors: []
---
0x171 PUSH1 0x0
0x173 DUP1
0x174 REVERT
---
0x171: V135 = 0x0
0x174: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x175
[0x175:0x17c]
---
Predecessors: [0x16a]
Successors: [0x32e]
---
0x175 JUMPDEST
0x176 PUSH2 0x88
0x179 PUSH2 0x32e
0x17c JUMP
---
0x175: JUMPDEST 
0x176: V136 = 0x88
0x179: V137 = 0x32e
0x17c: JUMP 0x32e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x88]
Exit stack: [V12, 0x88]

================================

Block 0x17d
[0x17d:0x17e]
---
Predecessors: []
Successors: []
---
0x17d JUMPDEST
0x17e STOP
---
0x17d: JUMPDEST 
0x17e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x17f
[0x17f:0x185]
---
Predecessors: [0x5c]
Successors: [0x186, 0x18a]
---
0x17f JUMPDEST
0x180 CALLVALUE
0x181 ISZERO
0x182 PUSH2 0x18a
0x185 JUMPI
---
0x17f: JUMPDEST 
0x180: V138 = CALLVALUE
0x181: V139 = ISZERO V138
0x182: V140 = 0x18a
0x185: JUMPI 0x18a V139
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x186
[0x186:0x189]
---
Predecessors: [0x17f]
Successors: []
---
0x186 PUSH1 0x0
0x188 DUP1
0x189 REVERT
---
0x186: V141 = 0x0
0x189: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18a
[0x18a:0x194]
---
Predecessors: [0x17f]
Successors: [0x485]
---
0x18a JUMPDEST
0x18b PUSH2 0x88
0x18e PUSH1 0x4
0x190 CALLDATALOAD
0x191 PUSH2 0x485
0x194 JUMP
---
0x18a: JUMPDEST 
0x18b: V142 = 0x88
0x18e: V143 = 0x4
0x190: V144 = CALLDATALOAD 0x4
0x191: V145 = 0x485
0x194: JUMP 0x485
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x88, V144]
Exit stack: [V12, 0x88, V144]

================================

Block 0x195
[0x195:0x196]
---
Predecessors: []
Successors: []
---
0x195 JUMPDEST
0x196 STOP
---
0x195: JUMPDEST 
0x196: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x197
[0x197:0x19d]
---
Predecessors: [0x67]
Successors: [0x19e, 0x1a2]
---
0x197 JUMPDEST
0x198 CALLVALUE
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x197: JUMPDEST 
0x198: V146 = CALLVALUE
0x199: V147 = ISZERO V146
0x19a: V148 = 0x1a2
0x19d: JUMPI 0x1a2 V147
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x197]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V149 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a2
[0x1a2:0x1a9]
---
Predecessors: [0x197]
Successors: [0x4a6]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0xc4
0x1a6 PUSH2 0x4a6
0x1a9 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V150 = 0xc4
0x1a6: V151 = 0x4a6
0x1a9: JUMP 0x4a6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V12, 0xc4]

================================

Block 0x1aa
[0x1aa:0x1c5]
---
Predecessors: []
Successors: []
---
0x1aa JUMPDEST
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae PUSH1 0x1
0x1b0 PUSH1 0xa0
0x1b2 PUSH1 0x2
0x1b4 EXP
0x1b5 SUB
0x1b6 SWAP1
0x1b7 SWAP2
0x1b8 AND
0x1b9 DUP2
0x1ba MSTORE
0x1bb PUSH1 0x20
0x1bd ADD
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 DUP1
0x1c2 SWAP2
0x1c3 SUB
0x1c4 SWAP1
0x1c5 RETURN
---
0x1aa: JUMPDEST 
0x1ab: V152 = 0x40
0x1ad: V153 = M[0x40]
0x1ae: V154 = 0x1
0x1b0: V155 = 0xa0
0x1b2: V156 = 0x2
0x1b4: V157 = EXP 0x2 0xa0
0x1b5: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b8: V159 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: M[V153] = V159
0x1bb: V160 = 0x20
0x1bd: V161 = ADD 0x20 V153
0x1be: V162 = 0x40
0x1c0: V163 = M[0x40]
0x1c3: V164 = SUB V161 V163
0x1c5: RETURN V163 V164
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1c6
[0x1c6:0x1cc]
---
Predecessors: [0x72]
Successors: [0x1cd, 0x1d1]
---
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V165 = CALLVALUE
0x1c8: V166 = ISZERO V165
0x1c9: V167 = 0x1d1
0x1cc: JUMPI 0x1d1 V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x1c6]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V168 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d1
[0x1d1:0x1d8]
---
Predecessors: [0x1c6]
Successors: [0x4b5]
---
0x1d1 JUMPDEST
0x1d2 PUSH2 0xc4
0x1d5 PUSH2 0x4b5
0x1d8 JUMP
---
0x1d1: JUMPDEST 
0x1d2: V169 = 0xc4
0x1d5: V170 = 0x4b5
0x1d8: JUMP 0x4b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V12, 0xc4]

================================

Block 0x1d9
[0x1d9:0x1f4]
---
Predecessors: []
Successors: []
---
0x1d9 JUMPDEST
0x1da PUSH1 0x40
0x1dc MLOAD
0x1dd PUSH1 0x1
0x1df PUSH1 0xa0
0x1e1 PUSH1 0x2
0x1e3 EXP
0x1e4 SUB
0x1e5 SWAP1
0x1e6 SWAP2
0x1e7 AND
0x1e8 DUP2
0x1e9 MSTORE
0x1ea PUSH1 0x20
0x1ec ADD
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 DUP1
0x1f1 SWAP2
0x1f2 SUB
0x1f3 SWAP1
0x1f4 RETURN
---
0x1d9: JUMPDEST 
0x1da: V171 = 0x40
0x1dc: V172 = M[0x40]
0x1dd: V173 = 0x1
0x1df: V174 = 0xa0
0x1e1: V175 = 0x2
0x1e3: V176 = EXP 0x2 0xa0
0x1e4: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e7: V178 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: M[V172] = V178
0x1ea: V179 = 0x20
0x1ec: V180 = ADD 0x20 V172
0x1ed: V181 = 0x40
0x1ef: V182 = M[0x40]
0x1f2: V183 = SUB V180 V182
0x1f4: RETURN V182 V183
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f5
[0x1f5:0x1fb]
---
Predecessors: [0x7d]
Successors: [0x1fc, 0x200]
---
0x1f5 JUMPDEST
0x1f6 CALLVALUE
0x1f7 ISZERO
0x1f8 PUSH2 0x200
0x1fb JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V184 = CALLVALUE
0x1f7: V185 = ISZERO V184
0x1f8: V186 = 0x200
0x1fb: JUMPI 0x200 V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fc
[0x1fc:0x1ff]
---
Predecessors: [0x1f5]
Successors: []
---
0x1fc PUSH1 0x0
0x1fe DUP1
0x1ff REVERT
---
0x1fc: V187 = 0x0
0x1ff: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x200
[0x200:0x207]
---
Predecessors: [0x1f5]
Successors: [0x4c4]
---
0x200 JUMPDEST
0x201 PUSH2 0xc4
0x204 PUSH2 0x4c4
0x207 JUMP
---
0x200: JUMPDEST 
0x201: V188 = 0xc4
0x204: V189 = 0x4c4
0x207: JUMP 0x4c4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V12, 0xc4]

================================

Block 0x208
[0x208:0x223]
---
Predecessors: []
Successors: []
---
0x208 JUMPDEST
0x209 PUSH1 0x40
0x20b MLOAD
0x20c PUSH1 0x1
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 SUB
0x214 SWAP1
0x215 SWAP2
0x216 AND
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x20
0x21b ADD
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 SWAP2
0x221 SUB
0x222 SWAP1
0x223 RETURN
---
0x208: JUMPDEST 
0x209: V190 = 0x40
0x20b: V191 = M[0x40]
0x20c: V192 = 0x1
0x20e: V193 = 0xa0
0x210: V194 = 0x2
0x212: V195 = EXP 0x2 0xa0
0x213: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V197 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x218: M[V191] = V197
0x219: V198 = 0x20
0x21b: V199 = ADD 0x20 V191
0x21c: V200 = 0x40
0x21e: V201 = M[0x40]
0x221: V202 = SUB V199 V201
0x223: RETURN V201 V202
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x224
[0x224:0x229]
---
Predecessors: [0x97]
Successors: [0x9f]
---
0x224 JUMPDEST
0x225 PUSH1 0x5
0x227 SLOAD
0x228 DUP2
0x229 JUMP
---
0x224: JUMPDEST 
0x225: V203 = 0x5
0x227: V204 = S[0x5]
0x229: JUMP 0x9f
---
Entry stack: [V12, 0x9f]
Stack pops: 1
Stack additions: [S0, V204]
Exit stack: [V12, 0x9f, V204]

================================

Block 0x22a
[0x22a:0x238]
---
Predecessors: [0xbc]
Successors: [0xc4]
---
0x22a JUMPDEST
0x22b PUSH1 0x2
0x22d SLOAD
0x22e PUSH1 0x1
0x230 PUSH1 0xa0
0x232 PUSH1 0x2
0x234 EXP
0x235 SUB
0x236 AND
0x237 DUP2
0x238 JUMP
---
0x22a: JUMPDEST 
0x22b: V205 = 0x2
0x22d: V206 = S[0x2]
0x22e: V207 = 0x1
0x230: V208 = 0xa0
0x232: V209 = 0x2
0x234: V210 = EXP 0x2 0xa0
0x235: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x238: JUMP 0xc4
---
Entry stack: [V12, 0xc4]
Stack pops: 1
Stack additions: [S0, V212]
Exit stack: [V12, 0xc4, V212]

================================

Block 0x239
[0x239:0x23e]
---
Predecessors: [0xeb]
Successors: [0x9f]
---
0x239 JUMPDEST
0x23a PUSH1 0x6
0x23c SLOAD
0x23d DUP2
0x23e JUMP
---
0x239: JUMPDEST 
0x23a: V213 = 0x6
0x23c: V214 = S[0x6]
0x23e: JUMP 0x9f
---
Entry stack: [V12, 0x9f]
Stack pops: 1
Stack additions: [S0, V214]
Exit stack: [V12, 0x9f, V214]

================================

Block 0x23f
[0x23f:0x259]
---
Predecessors: [0x110]
Successors: [0x25a, 0x314]
---
0x23f JUMPDEST
0x240 PUSH1 0x1
0x242 SLOAD
0x243 PUSH1 0x0
0x245 SWAP1
0x246 CALLER
0x247 PUSH1 0x1
0x249 PUSH1 0xa0
0x24b PUSH1 0x2
0x24d EXP
0x24e SUB
0x24f SWAP1
0x250 DUP2
0x251 AND
0x252 SWAP2
0x253 AND
0x254 EQ
0x255 ISZERO
0x256 PUSH2 0x314
0x259 JUMPI
---
0x23f: JUMPDEST 
0x240: V215 = 0x1
0x242: V216 = S[0x1]
0x243: V217 = 0x0
0x246: V218 = CALLER
0x247: V219 = 0x1
0x249: V220 = 0xa0
0x24b: V221 = 0x2
0x24d: V222 = EXP 0x2 0xa0
0x24e: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x251: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x253: V225 = AND V216 0xffffffffffffffffffffffffffffffffffffffff
0x254: V226 = EQ V225 V224
0x255: V227 = ISZERO V226
0x256: V228 = 0x314
0x259: JUMPI 0x314 V227
---
Entry stack: [V12, 0x127, V100, V102]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x127, V100, V102, 0x0]

================================

Block 0x25a
[0x25a:0x26b]
---
Predecessors: [0x23f]
Successors: [0x26c, 0x2a1]
---
0x25a PUSH1 0x3
0x25c SLOAD
0x25d PUSH1 0x1
0x25f PUSH1 0xa0
0x261 PUSH1 0x2
0x263 EXP
0x264 SUB
0x265 AND
0x266 ISZERO
0x267 ISZERO
0x268 PUSH2 0x2a1
0x26b JUMPI
---
0x25a: V229 = 0x3
0x25c: V230 = S[0x3]
0x25d: V231 = 0x1
0x25f: V232 = 0xa0
0x261: V233 = 0x2
0x263: V234 = EXP 0x2 0xa0
0x264: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x265: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x266: V237 = ISZERO V236
0x267: V238 = ISZERO V237
0x268: V239 = 0x2a1
0x26b: JUMPI 0x2a1 V238
---
Entry stack: [V12, 0x127, V100, V102, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x127, V100, V102, 0x0]

================================

Block 0x26c
[0x26c:0x297]
---
Predecessors: [0x25a]
Successors: [0x298, 0x29c]
---
0x26c PUSH1 0x1
0x26e PUSH1 0xa0
0x270 PUSH1 0x2
0x272 EXP
0x273 SUB
0x274 DUP4
0x275 AND
0x276 DUP3
0x277 ISZERO
0x278 PUSH2 0x8fc
0x27b MUL
0x27c DUP4
0x27d PUSH1 0x40
0x27f MLOAD
0x280 PUSH1 0x0
0x282 PUSH1 0x40
0x284 MLOAD
0x285 DUP1
0x286 DUP4
0x287 SUB
0x288 DUP2
0x289 DUP6
0x28a DUP9
0x28b DUP9
0x28c CALL
0x28d SWAP4
0x28e POP
0x28f POP
0x290 POP
0x291 POP
0x292 ISZERO
0x293 ISZERO
0x294 PUSH2 0x29c
0x297 JUMPI
---
0x26c: V240 = 0x1
0x26e: V241 = 0xa0
0x270: V242 = 0x2
0x272: V243 = EXP 0x2 0xa0
0x273: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V245 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x277: V246 = ISZERO V102
0x278: V247 = 0x8fc
0x27b: V248 = MUL 0x8fc V246
0x27d: V249 = 0x40
0x27f: V250 = M[0x40]
0x280: V251 = 0x0
0x282: V252 = 0x40
0x284: V253 = M[0x40]
0x287: V254 = SUB V250 V253
0x28c: V255 = CALL V248 V245 V102 V253 V254 V253 0x0
0x292: V256 = ISZERO V255
0x293: V257 = ISZERO V256
0x294: V258 = 0x29c
0x297: JUMPI 0x29c V257
---
Entry stack: [V12, 0x127, V100, V102, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x127, V100, V102, 0x0]

================================

Block 0x298
[0x298:0x29b]
---
Predecessors: [0x26c]
Successors: []
---
0x298 PUSH1 0x0
0x29a DUP1
0x29b REVERT
---
0x298: V259 = 0x0
0x29b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x127, V100, V102, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x127, V100, V102, 0x0]

================================

Block 0x29c
[0x29c:0x2a0]
---
Predecessors: [0x26c]
Successors: [0x30c]
---
0x29c JUMPDEST
0x29d PUSH2 0x30c
0x2a0 JUMP
---
0x29c: JUMPDEST 
0x29d: V260 = 0x30c
0x2a0: JUMP 0x30c
---
Entry stack: [V12, 0x127, V100, V102, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x127, V100, V102, 0x0]

================================

Block 0x2a1
[0x2a1:0x2f2]
---
Predecessors: [0x25a]
Successors: [0x2f3, 0x2f7]
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x3
0x2a4 SLOAD
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad AND
0x2ae PUSH4 0xa9059cbb
0x2b3 DUP5
0x2b4 DUP5
0x2b5 PUSH1 0x40
0x2b7 MLOAD
0x2b8 PUSH1 0xe0
0x2ba PUSH1 0x2
0x2bc EXP
0x2bd PUSH4 0xffffffff
0x2c2 DUP6
0x2c3 AND
0x2c4 MUL
0x2c5 DUP2
0x2c6 MSTORE
0x2c7 PUSH1 0x1
0x2c9 PUSH1 0xa0
0x2cb PUSH1 0x2
0x2cd EXP
0x2ce SUB
0x2cf SWAP1
0x2d0 SWAP3
0x2d1 AND
0x2d2 PUSH1 0x4
0x2d4 DUP4
0x2d5 ADD
0x2d6 MSTORE
0x2d7 PUSH1 0x24
0x2d9 DUP3
0x2da ADD
0x2db MSTORE
0x2dc PUSH1 0x44
0x2de ADD
0x2df PUSH1 0x0
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 DUP1
0x2e5 DUP4
0x2e6 SUB
0x2e7 DUP2
0x2e8 PUSH1 0x0
0x2ea DUP8
0x2eb DUP1
0x2ec EXTCODESIZE
0x2ed ISZERO
0x2ee ISZERO
0x2ef PUSH2 0x2f7
0x2f2 JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V261 = 0x3
0x2a4: V262 = S[0x3]
0x2a5: V263 = 0x1
0x2a7: V264 = 0xa0
0x2a9: V265 = 0x2
0x2ab: V266 = EXP 0x2 0xa0
0x2ac: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ad: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x2ae: V269 = 0xa9059cbb
0x2b5: V270 = 0x40
0x2b7: V271 = M[0x40]
0x2b8: V272 = 0xe0
0x2ba: V273 = 0x2
0x2bc: V274 = EXP 0x2 0xe0
0x2bd: V275 = 0xffffffff
0x2c3: V276 = AND 0xa9059cbb 0xffffffff
0x2c4: V277 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2c6: M[V271] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2c7: V278 = 0x1
0x2c9: V279 = 0xa0
0x2cb: V280 = 0x2
0x2cd: V281 = EXP 0x2 0xa0
0x2ce: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d1: V283 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V284 = 0x4
0x2d5: V285 = ADD V271 0x4
0x2d6: M[V285] = V283
0x2d7: V286 = 0x24
0x2da: V287 = ADD V271 0x24
0x2db: M[V287] = V102
0x2dc: V288 = 0x44
0x2de: V289 = ADD 0x44 V271
0x2df: V290 = 0x0
0x2e1: V291 = 0x40
0x2e3: V292 = M[0x40]
0x2e6: V293 = SUB V289 V292
0x2e8: V294 = 0x0
0x2ec: V295 = EXTCODESIZE V268
0x2ed: V296 = ISZERO V295
0x2ee: V297 = ISZERO V296
0x2ef: V298 = 0x2f7
0x2f2: JUMPI 0x2f7 V297
---
Entry stack: [V12, 0x127, V100, V102, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V268, 0xa9059cbb, V289, 0x0, V292, V293, V292, 0x0, V268]
Exit stack: [V12, 0x127, V100, V102, 0x0, V268, 0xa9059cbb, V289, 0x0, V292, V293, V292, 0x0, V268]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x2a1]
Successors: []
---
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 REVERT
---
0x2f3: V299 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x127, V100, V102, 0x0, V268, 0xa9059cbb, V289, 0x0, V292, V293, V292, 0x0, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x127, V100, V102, 0x0, V268, 0xa9059cbb, V289, 0x0, V292, V293, V292, 0x0, V268]

================================

Block 0x2f7
[0x2f7:0x303]
---
Predecessors: [0x2a1]
Successors: [0x304, 0x308]
---
0x2f7 JUMPDEST
0x2f8 PUSH2 0x2c6
0x2fb GAS
0x2fc SUB
0x2fd CALL
0x2fe ISZERO
0x2ff ISZERO
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V300 = 0x2c6
0x2fb: V301 = GAS
0x2fc: V302 = SUB V301 0x2c6
0x2fd: V303 = CALL V302 V268 0x0 V292 V293 V292 0x0
0x2fe: V304 = ISZERO V303
0x2ff: V305 = ISZERO V304
0x300: V306 = 0x308
0x303: JUMPI 0x308 V305
---
Entry stack: [V12, 0x127, V100, V102, 0x0, V268, 0xa9059cbb, V289, 0x0, V292, V293, V292, 0x0, V268]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x127, V100, V102, 0x0, V268, 0xa9059cbb, V289]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2f7]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V307 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V12, 0x127, V100, V102, 0x0, V268, 0xa9059cbb, V289]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x127, V100, V102, 0x0, V268, 0xa9059cbb, V289]

================================

Block 0x308
[0x308:0x30b]
---
Predecessors: [0x2f7]
Successors: [0x30c]
---
0x308 JUMPDEST
0x309 POP
0x30a POP
0x30b POP
---
0x308: JUMPDEST 
---
Entry stack: [V12, 0x127, V100, V102, 0x0, V268, 0xa9059cbb, V289]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x127, V100, V102, 0x0]

================================

Block 0x30c
[0x30c:0x313]
---
Predecessors: [0x29c, 0x308]
Successors: [0x318]
---
0x30c JUMPDEST
0x30d POP
0x30e PUSH1 0x1
0x310 PUSH2 0x318
0x313 JUMP
---
0x30c: JUMPDEST 
0x30e: V308 = 0x1
0x310: V309 = 0x318
0x313: JUMP 0x318
---
Entry stack: [V12, 0x127, V100, V102, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x127, V100, V102, 0x1]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x23f]
Successors: [0x318]
---
0x314 JUMPDEST
0x315 POP
0x316 PUSH1 0x0
---
0x314: JUMPDEST 
0x316: V310 = 0x0
---
Entry stack: [V12, 0x127, V100, V102, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x127, V100, V102, 0x0]

================================

Block 0x318
[0x318:0x318]
---
Predecessors: [0x30c, 0x314]
Successors: [0x319]
---
0x318 JUMPDEST
---
0x318: JUMPDEST 
---
Entry stack: [V12, 0x127, V100, V102, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x127, V100, V102, {0x0, 0x1}]

================================

Block 0x319
[0x319:0x31e]
---
Predecessors: [0x318]
Successors: [0x127]
---
0x319 JUMPDEST
0x31a SWAP3
0x31b SWAP2
0x31c POP
0x31d POP
0x31e JUMP
---
0x319: JUMPDEST 
0x31e: JUMP 0x127
---
Entry stack: [V12, 0x127, V100, V102, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x31f
[0x31f:0x32d]
---
Predecessors: [0x146]
Successors: [0xc4]
---
0x31f JUMPDEST
0x320 PUSH1 0x1
0x322 SLOAD
0x323 PUSH1 0x1
0x325 PUSH1 0xa0
0x327 PUSH1 0x2
0x329 EXP
0x32a SUB
0x32b AND
0x32c DUP2
0x32d JUMP
---
0x31f: JUMPDEST 
0x320: V311 = 0x1
0x322: V312 = S[0x1]
0x323: V313 = 0x1
0x325: V314 = 0xa0
0x327: V315 = 0x2
0x329: V316 = EXP 0x2 0xa0
0x32a: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32b: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x32d: JUMP 0xc4
---
Entry stack: [V12, 0xc4]
Stack pops: 1
Stack additions: [S0, V318]
Exit stack: [V12, 0xc4, V318]

================================

Block 0x32e
[0x32e:0x345]
---
Predecessors: [0x175]
Successors: [0x346, 0x359]
---
0x32e JUMPDEST
0x32f PUSH1 0x0
0x331 SLOAD
0x332 CALLER
0x333 PUSH1 0x1
0x335 PUSH1 0xa0
0x337 PUSH1 0x2
0x339 EXP
0x33a SUB
0x33b SWAP1
0x33c DUP2
0x33d AND
0x33e SWAP2
0x33f AND
0x340 EQ
0x341 DUP1
0x342 PUSH2 0x359
0x345 JUMPI
---
0x32e: JUMPDEST 
0x32f: V319 = 0x0
0x331: V320 = S[0x0]
0x332: V321 = CALLER
0x333: V322 = 0x1
0x335: V323 = 0xa0
0x337: V324 = 0x2
0x339: V325 = EXP 0x2 0xa0
0x33a: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33d: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x33f: V328 = AND V320 0xffffffffffffffffffffffffffffffffffffffff
0x340: V329 = EQ V328 V327
0x342: V330 = 0x359
0x345: JUMPI 0x359 V329
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: [V329]
Exit stack: [V12, 0x88, V329]

================================

Block 0x346
[0x346:0x358]
---
Predecessors: [0x32e]
Successors: [0x359]
---
0x346 POP
0x347 PUSH1 0x2
0x349 SLOAD
0x34a ORIGIN
0x34b PUSH1 0x1
0x34d PUSH1 0xa0
0x34f PUSH1 0x2
0x351 EXP
0x352 SUB
0x353 SWAP1
0x354 DUP2
0x355 AND
0x356 SWAP2
0x357 AND
0x358 EQ
---
0x347: V331 = 0x2
0x349: V332 = S[0x2]
0x34a: V333 = ORIGIN
0x34b: V334 = 0x1
0x34d: V335 = 0xa0
0x34f: V336 = 0x2
0x351: V337 = EXP 0x2 0xa0
0x352: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x355: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x357: V340 = AND V332 0xffffffffffffffffffffffffffffffffffffffff
0x358: V341 = EQ V340 V339
---
Entry stack: [V12, 0x88, V329]
Stack pops: 1
Stack additions: [V341]
Exit stack: [V12, 0x88, V341]

================================

Block 0x359
[0x359:0x35e]
---
Predecessors: [0x32e, 0x346]
Successors: [0x35f, 0x481]
---
0x359 JUMPDEST
0x35a ISZERO
0x35b PUSH2 0x481
0x35e JUMPI
---
0x359: JUMPDEST 
0x35a: V342 = ISZERO S0
0x35b: V343 = 0x481
0x35e: JUMPI 0x481 V342
---
Entry stack: [V12, 0x88, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x35f
[0x35f:0x370]
---
Predecessors: [0x359]
Successors: [0x371, 0x3ae]
---
0x35f PUSH1 0x3
0x361 SLOAD
0x362 PUSH1 0x1
0x364 PUSH1 0xa0
0x366 PUSH1 0x2
0x368 EXP
0x369 SUB
0x36a AND
0x36b ISZERO
0x36c ISZERO
0x36d PUSH2 0x3ae
0x370 JUMPI
---
0x35f: V344 = 0x3
0x361: V345 = S[0x3]
0x362: V346 = 0x1
0x364: V347 = 0xa0
0x366: V348 = 0x2
0x368: V349 = EXP 0x2 0xa0
0x369: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36a: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x36b: V352 = ISZERO V351
0x36c: V353 = ISZERO V352
0x36d: V354 = 0x3ae
0x370: JUMPI 0x3ae V353
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x371
[0x371:0x3a4]
---
Predecessors: [0x35f]
Successors: [0x3a5, 0x3a9]
---
0x371 PUSH1 0x2
0x373 SLOAD
0x374 PUSH1 0x1
0x376 PUSH1 0xa0
0x378 PUSH1 0x2
0x37a EXP
0x37b SUB
0x37c SWAP1
0x37d DUP2
0x37e AND
0x37f SWAP1
0x380 ADDRESS
0x381 AND
0x382 BALANCE
0x383 DUP1
0x384 ISZERO
0x385 PUSH2 0x8fc
0x388 MUL
0x389 SWAP1
0x38a PUSH1 0x40
0x38c MLOAD
0x38d PUSH1 0x0
0x38f PUSH1 0x40
0x391 MLOAD
0x392 DUP1
0x393 DUP4
0x394 SUB
0x395 DUP2
0x396 DUP6
0x397 DUP9
0x398 DUP9
0x399 CALL
0x39a SWAP4
0x39b POP
0x39c POP
0x39d POP
0x39e POP
0x39f ISZERO
0x3a0 ISZERO
0x3a1 PUSH2 0x3a9
0x3a4 JUMPI
---
0x371: V355 = 0x2
0x373: V356 = S[0x2]
0x374: V357 = 0x1
0x376: V358 = 0xa0
0x378: V359 = 0x2
0x37a: V360 = EXP 0x2 0xa0
0x37b: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37e: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x380: V363 = ADDRESS
0x381: V364 = AND V363 0xffffffffffffffffffffffffffffffffffffffff
0x382: V365 = BALANCE V364
0x384: V366 = ISZERO V365
0x385: V367 = 0x8fc
0x388: V368 = MUL 0x8fc V366
0x38a: V369 = 0x40
0x38c: V370 = M[0x40]
0x38d: V371 = 0x0
0x38f: V372 = 0x40
0x391: V373 = M[0x40]
0x394: V374 = SUB V370 V373
0x399: V375 = CALL V368 V362 V365 V373 V374 V373 0x0
0x39f: V376 = ISZERO V375
0x3a0: V377 = ISZERO V376
0x3a1: V378 = 0x3a9
0x3a4: JUMPI 0x3a9 V377
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x3a5
[0x3a5:0x3a8]
---
Predecessors: [0x371]
Successors: []
---
0x3a5 PUSH1 0x0
0x3a7 DUP1
0x3a8 REVERT
---
0x3a5: V379 = 0x0
0x3a8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x3a9
[0x3a9:0x3ad]
---
Predecessors: [0x371]
Successors: [0x481]
---
0x3a9 JUMPDEST
0x3aa PUSH2 0x481
0x3ad JUMP
---
0x3a9: JUMPDEST 
0x3aa: V380 = 0x481
0x3ad: JUMP 0x481
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x3ae
[0x3ae:0x409]
---
Predecessors: [0x35f]
Successors: [0x40a, 0x40e]
---
0x3ae JUMPDEST
0x3af PUSH1 0x3
0x3b1 SLOAD
0x3b2 PUSH1 0x1
0x3b4 PUSH1 0xa0
0x3b6 PUSH1 0x2
0x3b8 EXP
0x3b9 SUB
0x3ba AND
0x3bb PUSH4 0xa9059cbb
0x3c0 ORIGIN
0x3c1 DUP3
0x3c2 PUSH4 0x70a08231
0x3c7 ADDRESS
0x3c8 PUSH1 0x0
0x3ca PUSH1 0x40
0x3cc MLOAD
0x3cd PUSH1 0x20
0x3cf ADD
0x3d0 MSTORE
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 PUSH1 0xe0
0x3d6 PUSH1 0x2
0x3d8 EXP
0x3d9 PUSH4 0xffffffff
0x3de DUP5
0x3df AND
0x3e0 MUL
0x3e1 DUP2
0x3e2 MSTORE
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb SWAP1
0x3ec SWAP2
0x3ed AND
0x3ee PUSH1 0x4
0x3f0 DUP3
0x3f1 ADD
0x3f2 MSTORE
0x3f3 PUSH1 0x24
0x3f5 ADD
0x3f6 PUSH1 0x20
0x3f8 PUSH1 0x40
0x3fa MLOAD
0x3fb DUP1
0x3fc DUP4
0x3fd SUB
0x3fe DUP2
0x3ff PUSH1 0x0
0x401 DUP8
0x402 DUP1
0x403 EXTCODESIZE
0x404 ISZERO
0x405 ISZERO
0x406 PUSH2 0x40e
0x409 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V381 = 0x3
0x3b1: V382 = S[0x3]
0x3b2: V383 = 0x1
0x3b4: V384 = 0xa0
0x3b6: V385 = 0x2
0x3b8: V386 = EXP 0x2 0xa0
0x3b9: V387 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ba: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x3bb: V389 = 0xa9059cbb
0x3c0: V390 = ORIGIN
0x3c2: V391 = 0x70a08231
0x3c7: V392 = ADDRESS
0x3c8: V393 = 0x0
0x3ca: V394 = 0x40
0x3cc: V395 = M[0x40]
0x3cd: V396 = 0x20
0x3cf: V397 = ADD 0x20 V395
0x3d0: M[V397] = 0x0
0x3d1: V398 = 0x40
0x3d3: V399 = M[0x40]
0x3d4: V400 = 0xe0
0x3d6: V401 = 0x2
0x3d8: V402 = EXP 0x2 0xe0
0x3d9: V403 = 0xffffffff
0x3df: V404 = AND 0x70a08231 0xffffffff
0x3e0: V405 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x3e2: M[V399] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3e3: V406 = 0x1
0x3e5: V407 = 0xa0
0x3e7: V408 = 0x2
0x3e9: V409 = EXP 0x2 0xa0
0x3ea: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ed: V411 = AND V392 0xffffffffffffffffffffffffffffffffffffffff
0x3ee: V412 = 0x4
0x3f1: V413 = ADD V399 0x4
0x3f2: M[V413] = V411
0x3f3: V414 = 0x24
0x3f5: V415 = ADD 0x24 V399
0x3f6: V416 = 0x20
0x3f8: V417 = 0x40
0x3fa: V418 = M[0x40]
0x3fd: V419 = SUB V415 V418
0x3ff: V420 = 0x0
0x403: V421 = EXTCODESIZE V388
0x404: V422 = ISZERO V421
0x405: V423 = ISZERO V422
0x406: V424 = 0x40e
0x409: JUMPI 0x40e V423
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: [V388, 0xa9059cbb, V390, V388, 0x70a08231, V415, 0x20, V418, V419, V418, 0x0, V388]
Exit stack: [V12, 0x88, V388, 0xa9059cbb, V390, V388, 0x70a08231, V415, 0x20, V418, V419, V418, 0x0, V388]

================================

Block 0x40a
[0x40a:0x40d]
---
Predecessors: [0x3ae]
Successors: []
---
0x40a PUSH1 0x0
0x40c DUP1
0x40d REVERT
---
0x40a: V425 = 0x0
0x40d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V388, 0xa9059cbb, V390, V388, 0x70a08231, V415, 0x20, V418, V419, V418, 0x0, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V388, 0xa9059cbb, V390, V388, 0x70a08231, V415, 0x20, V418, V419, V418, 0x0, V388]

================================

Block 0x40e
[0x40e:0x41a]
---
Predecessors: [0x3ae]
Successors: [0x41b, 0x41f]
---
0x40e JUMPDEST
0x40f PUSH2 0x2c6
0x412 GAS
0x413 SUB
0x414 CALL
0x415 ISZERO
0x416 ISZERO
0x417 PUSH2 0x41f
0x41a JUMPI
---
0x40e: JUMPDEST 
0x40f: V426 = 0x2c6
0x412: V427 = GAS
0x413: V428 = SUB V427 0x2c6
0x414: V429 = CALL V428 V388 0x0 V418 V419 V418 0x20
0x415: V430 = ISZERO V429
0x416: V431 = ISZERO V430
0x417: V432 = 0x41f
0x41a: JUMPI 0x41f V431
---
Entry stack: [V12, 0x88, V388, 0xa9059cbb, V390, V388, 0x70a08231, V415, 0x20, V418, V419, V418, 0x0, V388]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x88, V388, 0xa9059cbb, V390, V388, 0x70a08231, V415]

================================

Block 0x41b
[0x41b:0x41e]
---
Predecessors: [0x40e]
Successors: []
---
0x41b PUSH1 0x0
0x41d DUP1
0x41e REVERT
---
0x41b: V433 = 0x0
0x41e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V388, 0xa9059cbb, V390, V388, 0x70a08231, V415]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V388, 0xa9059cbb, V390, V388, 0x70a08231, V415]

================================

Block 0x41f
[0x41f:0x467]
---
Predecessors: [0x40e]
Successors: [0x468, 0x46c]
---
0x41f JUMPDEST
0x420 POP
0x421 POP
0x422 POP
0x423 PUSH1 0x40
0x425 MLOAD
0x426 DUP1
0x427 MLOAD
0x428 SWAP1
0x429 POP
0x42a PUSH1 0x40
0x42c MLOAD
0x42d PUSH1 0xe0
0x42f PUSH1 0x2
0x431 EXP
0x432 PUSH4 0xffffffff
0x437 DUP6
0x438 AND
0x439 MUL
0x43a DUP2
0x43b MSTORE
0x43c PUSH1 0x1
0x43e PUSH1 0xa0
0x440 PUSH1 0x2
0x442 EXP
0x443 SUB
0x444 SWAP1
0x445 SWAP3
0x446 AND
0x447 PUSH1 0x4
0x449 DUP4
0x44a ADD
0x44b MSTORE
0x44c PUSH1 0x24
0x44e DUP3
0x44f ADD
0x450 MSTORE
0x451 PUSH1 0x44
0x453 ADD
0x454 PUSH1 0x0
0x456 PUSH1 0x40
0x458 MLOAD
0x459 DUP1
0x45a DUP4
0x45b SUB
0x45c DUP2
0x45d PUSH1 0x0
0x45f DUP8
0x460 DUP1
0x461 EXTCODESIZE
0x462 ISZERO
0x463 ISZERO
0x464 PUSH2 0x46c
0x467 JUMPI
---
0x41f: JUMPDEST 
0x423: V434 = 0x40
0x425: V435 = M[0x40]
0x427: V436 = M[V435]
0x42a: V437 = 0x40
0x42c: V438 = M[0x40]
0x42d: V439 = 0xe0
0x42f: V440 = 0x2
0x431: V441 = EXP 0x2 0xe0
0x432: V442 = 0xffffffff
0x438: V443 = AND 0xa9059cbb 0xffffffff
0x439: V444 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x43b: M[V438] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x43c: V445 = 0x1
0x43e: V446 = 0xa0
0x440: V447 = 0x2
0x442: V448 = EXP 0x2 0xa0
0x443: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x446: V450 = AND V390 0xffffffffffffffffffffffffffffffffffffffff
0x447: V451 = 0x4
0x44a: V452 = ADD V438 0x4
0x44b: M[V452] = V450
0x44c: V453 = 0x24
0x44f: V454 = ADD V438 0x24
0x450: M[V454] = V436
0x451: V455 = 0x44
0x453: V456 = ADD 0x44 V438
0x454: V457 = 0x0
0x456: V458 = 0x40
0x458: V459 = M[0x40]
0x45b: V460 = SUB V456 V459
0x45d: V461 = 0x0
0x461: V462 = EXTCODESIZE V388
0x462: V463 = ISZERO V462
0x463: V464 = ISZERO V463
0x464: V465 = 0x46c
0x467: JUMPI 0x46c V464
---
Entry stack: [V12, 0x88, V388, 0xa9059cbb, V390, V388, 0x70a08231, V415]
Stack pops: 6
Stack additions: [S5, S4, V456, 0x0, V459, V460, V459, 0x0, S5]
Exit stack: [V12, 0x88, V388, 0xa9059cbb, V456, 0x0, V459, V460, V459, 0x0, V388]

================================

Block 0x468
[0x468:0x46b]
---
Predecessors: [0x41f]
Successors: []
---
0x468 PUSH1 0x0
0x46a DUP1
0x46b REVERT
---
0x468: V466 = 0x0
0x46b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V388, 0xa9059cbb, V456, 0x0, V459, V460, V459, 0x0, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V388, 0xa9059cbb, V456, 0x0, V459, V460, V459, 0x0, V388]

================================

Block 0x46c
[0x46c:0x478]
---
Predecessors: [0x41f]
Successors: [0x479, 0x47d]
---
0x46c JUMPDEST
0x46d PUSH2 0x2c6
0x470 GAS
0x471 SUB
0x472 CALL
0x473 ISZERO
0x474 ISZERO
0x475 PUSH2 0x47d
0x478 JUMPI
---
0x46c: JUMPDEST 
0x46d: V467 = 0x2c6
0x470: V468 = GAS
0x471: V469 = SUB V468 0x2c6
0x472: V470 = CALL V469 V388 0x0 V459 V460 V459 0x0
0x473: V471 = ISZERO V470
0x474: V472 = ISZERO V471
0x475: V473 = 0x47d
0x478: JUMPI 0x47d V472
---
Entry stack: [V12, 0x88, V388, 0xa9059cbb, V456, 0x0, V459, V460, V459, 0x0, V388]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x88, V388, 0xa9059cbb, V456]

================================

Block 0x479
[0x479:0x47c]
---
Predecessors: [0x46c]
Successors: []
---
0x479 PUSH1 0x0
0x47b DUP1
0x47c REVERT
---
0x479: V474 = 0x0
0x47c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x88, V388, 0xa9059cbb, V456]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V388, 0xa9059cbb, V456]

================================

Block 0x47d
[0x47d:0x480]
---
Predecessors: [0x46c]
Successors: [0x481]
---
0x47d JUMPDEST
0x47e POP
0x47f POP
0x480 POP
---
0x47d: JUMPDEST 
---
Entry stack: [V12, 0x88, V388, 0xa9059cbb, V456]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x481
[0x481:0x481]
---
Predecessors: [0x359, 0x3a9, 0x47d]
Successors: [0x482]
---
0x481 JUMPDEST
---
0x481: JUMPDEST 
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x482
[0x482:0x482]
---
Predecessors: [0x481]
Successors: [0x483]
---
0x482 JUMPDEST
---
0x482: JUMPDEST 
---
Entry stack: [V12, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88]

================================

Block 0x483
[0x483:0x484]
---
Predecessors: [0x482]
Successors: [0x88]
---
0x483 JUMPDEST
0x484 JUMP
---
0x483: JUMPDEST 
0x484: JUMP 0x88
---
Entry stack: [V12, 0x88]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x485
[0x485:0x49c]
---
Predecessors: [0x18a]
Successors: [0x49d, 0x4a2]
---
0x485 JUMPDEST
0x486 PUSH1 0x1
0x488 SLOAD
0x489 CALLER
0x48a PUSH1 0x1
0x48c PUSH1 0xa0
0x48e PUSH1 0x2
0x490 EXP
0x491 SUB
0x492 SWAP1
0x493 DUP2
0x494 AND
0x495 SWAP2
0x496 AND
0x497 EQ
0x498 ISZERO
0x499 PUSH2 0x4a2
0x49c JUMPI
---
0x485: JUMPDEST 
0x486: V475 = 0x1
0x488: V476 = S[0x1]
0x489: V477 = CALLER
0x48a: V478 = 0x1
0x48c: V479 = 0xa0
0x48e: V480 = 0x2
0x490: V481 = EXP 0x2 0xa0
0x491: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x494: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x496: V484 = AND V476 0xffffffffffffffffffffffffffffffffffffffff
0x497: V485 = EQ V484 V483
0x498: V486 = ISZERO V485
0x499: V487 = 0x4a2
0x49c: JUMPI 0x4a2 V486
---
Entry stack: [V12, 0x88, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V144]

================================

Block 0x49d
[0x49d:0x4a1]
---
Predecessors: [0x485]
Successors: [0x4a2]
---
0x49d PUSH1 0x6
0x49f DUP2
0x4a0 SWAP1
0x4a1 SSTORE
---
0x49d: V488 = 0x6
0x4a1: S[0x6] = V144
---
Entry stack: [V12, 0x88, V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x88, V144]

================================

Block 0x4a2
[0x4a2:0x4a2]
---
Predecessors: [0x485, 0x49d]
Successors: [0x4a3]
---
0x4a2 JUMPDEST
---
0x4a2: JUMPDEST 
---
Entry stack: [V12, 0x88, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x88, V144]

================================

Block 0x4a3
[0x4a3:0x4a5]
---
Predecessors: [0x4a2]
Successors: [0x88]
---
0x4a3 JUMPDEST
0x4a4 POP
0x4a5 JUMP
---
0x4a3: JUMPDEST 
0x4a5: JUMP 0x88
---
Entry stack: [V12, 0x88, V144]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a6
[0x4a6:0x4b4]
---
Predecessors: [0x1a2]
Successors: [0xc4]
---
0x4a6 JUMPDEST
0x4a7 PUSH1 0x4
0x4a9 SLOAD
0x4aa PUSH1 0x1
0x4ac PUSH1 0xa0
0x4ae PUSH1 0x2
0x4b0 EXP
0x4b1 SUB
0x4b2 AND
0x4b3 DUP2
0x4b4 JUMP
---
0x4a6: JUMPDEST 
0x4a7: V489 = 0x4
0x4a9: V490 = S[0x4]
0x4aa: V491 = 0x1
0x4ac: V492 = 0xa0
0x4ae: V493 = 0x2
0x4b0: V494 = EXP 0x2 0xa0
0x4b1: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b2: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x4b4: JUMP 0xc4
---
Entry stack: [V12, 0xc4]
Stack pops: 1
Stack additions: [S0, V496]
Exit stack: [V12, 0xc4, V496]

================================

Block 0x4b5
[0x4b5:0x4c3]
---
Predecessors: [0x1d1]
Successors: [0xc4]
---
0x4b5 JUMPDEST
0x4b6 PUSH1 0x0
0x4b8 SLOAD
0x4b9 PUSH1 0x1
0x4bb PUSH1 0xa0
0x4bd PUSH1 0x2
0x4bf EXP
0x4c0 SUB
0x4c1 AND
0x4c2 DUP2
0x4c3 JUMP
---
0x4b5: JUMPDEST 
0x4b6: V497 = 0x0
0x4b8: V498 = S[0x0]
0x4b9: V499 = 0x1
0x4bb: V500 = 0xa0
0x4bd: V501 = 0x2
0x4bf: V502 = EXP 0x2 0xa0
0x4c0: V503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c1: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x4c3: JUMP 0xc4
---
Entry stack: [V12, 0xc4]
Stack pops: 1
Stack additions: [S0, V504]
Exit stack: [V12, 0xc4, V504]

================================

Block 0x4c4
[0x4c4:0x4d2]
---
Predecessors: [0x200]
Successors: [0xc4]
---
0x4c4 JUMPDEST
0x4c5 PUSH1 0x3
0x4c7 SLOAD
0x4c8 PUSH1 0x1
0x4ca PUSH1 0xa0
0x4cc PUSH1 0x2
0x4ce EXP
0x4cf SUB
0x4d0 AND
0x4d1 DUP2
0x4d2 JUMP
---
0x4c4: JUMPDEST 
0x4c5: V505 = 0x3
0x4c7: V506 = S[0x3]
0x4c8: V507 = 0x1
0x4ca: V508 = 0xa0
0x4cc: V509 = 0x2
0x4ce: V510 = EXP 0x2 0xa0
0x4cf: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d0: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x4d2: JUMP 0xc4
---
Entry stack: [V12, 0xc4]
Stack pops: 1
Stack additions: [S0, V512]
Exit stack: [V12, 0xc4, V512]

================================

Block 0x4d3
[0x4d3:0x508]
---
Predecessors: []
Successors: []
---
0x4d3 STOP
0x4d4 LOG1
0x4d5 PUSH6 0x627a7a723058
0x4dc SHA3
0x4dd MISSING 0xd5
0x4de GASLIMIT
0x4df MISSING 0xaf
0x4e0 CALLDATALOAD
0x4e1 MISSING 0xdd
0x4e2 PUSH19 0x77d0f8c54c2844843ffa2e0926a5766cf2829a
0x4f6 EQ
0x4f7 PUSH17 0x871ffdd1b50029
---
0x4d3: STOP 
0x4d4: LOG S0 S1 S2
0x4d5: V513 = 0x627a7a723058
0x4dc: V514 = SHA3 0x627a7a723058 S3
0x4dd: MISSING 0xd5
0x4de: V515 = GASLIMIT
0x4df: MISSING 0xaf
0x4e0: V516 = CALLDATALOAD S0
0x4e1: MISSING 0xdd
0x4e2: V517 = 0x77d0f8c54c2844843ffa2e0926a5766cf2829a
0x4f6: V518 = EQ 0x77d0f8c54c2844843ffa2e0926a5766cf2829a S0
0x4f7: V519 = 0x871ffdd1b50029
---
Entry stack: []
Stack pops: 0
Stack additions: [V514, V515, V516, 0x871ffdd1b50029, V518]
Exit stack: []

================================

Function 0:
Public function signature: 0x7262375
Entry block: 0x8c
Exit block: 0x9f
Body: 0x8c, 0x93, 0x97, 0x9f, 0x224

Function 1:
Public function signature: 0x1bcfc432
Entry block: 0xb1
Exit block: 0xc4
Body: 0xb1, 0xb8, 0xbc, 0xc4, 0x22a

Function 2:
Public function signature: 0x38c8f2ce
Entry block: 0xe0
Exit block: 0x9f
Body: 0x9f, 0xe0, 0xe7, 0xeb, 0x239

Function 3:
Public function signature: 0x3ff3620b
Entry block: 0x105
Exit block: 0x127
Body: 0x105, 0x10c, 0x110, 0x127, 0x23f, 0x25a, 0x26c, 0x298, 0x29c, 0x2a1, 0x2f3, 0x2f7, 0x304, 0x308, 0x30c, 0x314, 0x318, 0x319

Function 4:
Public function signature: 0x891ac16b
Entry block: 0x13b
Exit block: 0xc4
Body: 0xc4, 0x13b, 0x142, 0x146, 0x31f

Function 5:
Public function signature: 0x89c2dcb0
Entry block: 0x16a
Exit block: 0x8a
Body: 0x88, 0x89, 0x8a, 0x16a, 0x171, 0x175, 0x32e, 0x346, 0x359, 0x35f, 0x371, 0x3a5, 0x3a9, 0x3ae, 0x40a, 0x40e, 0x41b, 0x41f, 0x468, 0x46c, 0x479, 0x47d, 0x481, 0x482, 0x483

Function 6:
Public function signature: 0x9452651b
Entry block: 0x17f
Exit block: 0x8a
Body: 0x88, 0x89, 0x8a, 0x17f, 0x186, 0x18a, 0x485, 0x49d, 0x4a2, 0x4a3

Function 7:
Public function signature: 0xcdbc11b1
Entry block: 0x197
Exit block: 0xc4
Body: 0xc4, 0x197, 0x19e, 0x1a2, 0x4a6

Function 8:
Public function signature: 0xd2f7265a
Entry block: 0x1c6
Exit block: 0xc4
Body: 0xc4, 0x1c6, 0x1cd, 0x1d1, 0x4b5

Function 9:
Public function signature: 0xe8c0f815
Entry block: 0x1f5
Exit block: 0xc4
Body: 0xc4, 0x1f5, 0x1fc, 0x200, 0x4c4

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x8a
Body: 0x88, 0x89, 0x8a

